<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25834.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">mov_read_chapters</name><parameter_list pos:start="1:30" pos:end="1:49">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:41">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MOVContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mov</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">MOVStreamContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:19">cur_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="25:9">for <control pos:start="17:9" pos:end="17:39">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:34"><expr pos:start="17:17" pos:end="17:33"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:33"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:33">nb_streams</name></name></expr>;</condition> <incr pos:start="17:36" pos:end="17:38"><expr pos:start="17:36" pos:end="17:38"><name pos:start="17:36" pos:end="17:36">i</name><operator pos:start="17:37" pos:end="17:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:9" pos:end="25:9"><block_content pos:start="19:9" pos:end="25:9">

        <if_stmt pos:start="19:9" pos:end="25:9"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:52">(<expr pos:start="19:13" pos:end="19:51"><name pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:22">streams</name><index pos:start="19:23" pos:end="19:25">[<expr pos:start="19:24" pos:end="19:24"><name pos:start="19:24" pos:end="19:24">i</name></expr>]</index></name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:29">id</name> <operator pos:start="19:31" pos:end="19:32">==</operator> <name pos:start="19:34" pos:end="19:51"><name pos:start="19:34" pos:end="19:36">mov</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:51">chapter_track</name></name></expr>)</condition> <block pos:start="19:54" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:18">

            <expr_stmt pos:start="21:13" pos:end="21:31"><expr pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:14">st</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:30"><name pos:start="21:18" pos:end="21:18">s</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:27">streams</name><index pos:start="21:28" pos:end="21:30">[<expr pos:start="21:29" pos:end="21:29"><name pos:start="21:29" pos:end="21:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="23:13" pos:end="23:18">break;</break>

        </block_content>}</block></if></if_stmt></block_content></block></for>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:12">(<expr pos:start="27:9" pos:end="27:11"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:11">st</name></expr>)</condition> <block pos:start="27:14" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:15">

        <expr_stmt pos:start="29:9" pos:end="29:75"><expr pos:start="29:9" pos:end="29:74"><call pos:start="29:9" pos:end="29:74"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:74">(<argument pos:start="29:16" pos:end="29:16"><expr pos:start="29:16" pos:end="29:16"><name pos:start="29:16" pos:end="29:16">s</name></expr></argument>, <argument pos:start="29:19" pos:end="29:30"><expr pos:start="29:19" pos:end="29:30"><name pos:start="29:19" pos:end="29:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:33" pos:end="29:73"><expr pos:start="29:33" pos:end="29:73"><literal type="string" pos:start="29:33" pos:end="29:73">"Referenced QT chapter track not found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:32"><expr pos:start="37:5" pos:end="37:31"><name pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:6">st</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:15">discard</name></name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:31">AVDISCARD_ALL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:23"><expr pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:6">sc</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <name pos:start="39:10" pos:end="39:22"><name pos:start="39:10" pos:end="39:11">st</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:22">priv_data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:32"><expr pos:start="41:5" pos:end="41:31"><name pos:start="41:5" pos:end="41:11">cur_pos</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:31"><name pos:start="41:15" pos:end="41:23">avio_tell</name><argument_list pos:start="41:24" pos:end="41:31">(<argument pos:start="41:25" pos:end="41:30"><expr pos:start="41:25" pos:end="41:30"><name pos:start="41:25" pos:end="41:30"><name pos:start="41:25" pos:end="41:26">sc</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:30">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="45:5" pos:end="139:5">for <control pos:start="45:9" pos:end="45:46">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:41"><expr pos:start="45:17" pos:end="45:40"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <name pos:start="45:21" pos:end="45:40"><name pos:start="45:21" pos:end="45:22">st</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:40">nb_index_entries</name></name></expr>;</condition> <incr pos:start="45:43" pos:end="45:45"><expr pos:start="45:43" pos:end="45:45"><name pos:start="45:43" pos:end="45:43">i</name><operator pos:start="45:44" pos:end="45:45">++</operator></expr></incr>)</control> <block pos:start="45:48" pos:end="139:5">{<block_content pos:start="47:9" pos:end="137:25">

        <decl_stmt pos:start="47:9" pos:end="47:53"><decl pos:start="47:9" pos:end="47:52"><type pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:20">AVIndexEntry</name> <modifier pos:start="47:22" pos:end="47:22">*</modifier></type><name pos:start="47:23" pos:end="47:28">sample</name> <init pos:start="47:30" pos:end="47:52">= <expr pos:start="47:32" pos:end="47:52"><operator pos:start="47:32" pos:end="47:32">&amp;</operator><name pos:start="47:33" pos:end="47:52"><name pos:start="47:33" pos:end="47:34">st</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:49">index_entries</name><index pos:start="47:50" pos:end="47:52">[<expr pos:start="47:51" pos:end="47:51"><name pos:start="47:51" pos:end="47:51">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:99"><decl pos:start="49:9" pos:end="49:98"><type pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:15">int64_t</name></type> <name pos:start="49:17" pos:end="49:19">end</name> <init pos:start="49:21" pos:end="49:98">= <expr pos:start="49:23" pos:end="49:98"><ternary pos:start="49:23" pos:end="49:98"><condition pos:start="49:23" pos:end="49:50"><expr pos:start="49:23" pos:end="49:48"><name pos:start="49:23" pos:end="49:23">i</name><operator pos:start="49:24" pos:end="49:24">+</operator><literal type="number" pos:start="49:25" pos:end="49:25">1</literal> <operator pos:start="49:27" pos:end="49:27">&lt;</operator> <name pos:start="49:29" pos:end="49:48"><name pos:start="49:29" pos:end="49:30">st</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:48">nb_index_entries</name></name></expr> ?</condition><then pos:start="49:52" pos:end="49:83"> <expr pos:start="49:52" pos:end="49:83"><name pos:start="49:52" pos:end="49:73"><name pos:start="49:52" pos:end="49:53">st</name><operator pos:start="49:54" pos:end="49:55">-&gt;</operator><name pos:start="49:56" pos:end="49:68">index_entries</name><index pos:start="49:69" pos:end="49:73">[<expr pos:start="49:70" pos:end="49:72"><name pos:start="49:70" pos:end="49:70">i</name><operator pos:start="49:71" pos:end="49:71">+</operator><literal type="number" pos:start="49:72" pos:end="49:72">1</literal></expr>]</index></name><operator pos:start="49:74" pos:end="49:74">.</operator><name pos:start="49:75" pos:end="49:83">timestamp</name></expr> </then><else pos:start="49:85" pos:end="49:98">: <expr pos:start="49:87" pos:end="49:98"><name pos:start="49:87" pos:end="49:98"><name pos:start="49:87" pos:end="49:88">st</name><operator pos:start="49:89" pos:end="49:90">-&gt;</operator><name pos:start="49:91" pos:end="49:98">duration</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:23"><decl pos:start="51:9" pos:end="51:22"><type pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:15">uint8_t</name> <modifier pos:start="51:17" pos:end="51:17">*</modifier></type><name pos:start="51:18" pos:end="51:22">title</name></decl>;</decl_stmt>

        <decl_stmt pos:start="53:9" pos:end="53:20"><decl pos:start="53:9" pos:end="53:19"><type pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:16">uint16_t</name></type> <name pos:start="53:18" pos:end="53:19">ch</name></decl>;</decl_stmt>

        <decl_stmt pos:start="55:9" pos:end="55:27"><decl pos:start="55:9" pos:end="55:15"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:15">len</name></decl>, <decl pos:start="55:18" pos:end="55:26"><type ref="prev" pos:start="55:9" pos:end="55:11"/><name pos:start="55:18" pos:end="55:26">title_len</name></decl>;</decl_stmt>



        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:36">(<expr pos:start="59:13" pos:end="59:35"><name pos:start="59:13" pos:end="59:15">end</name> <operator pos:start="59:17" pos:end="59:17">&lt;</operator> <name pos:start="59:19" pos:end="59:35"><name pos:start="59:19" pos:end="59:24">sample</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:35">timestamp</name></name></expr>)</condition> <block pos:start="59:38" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:33">

            <expr_stmt pos:start="61:13" pos:end="61:99"><expr pos:start="61:13" pos:end="61:98"><call pos:start="61:13" pos:end="61:98"><name pos:start="61:13" pos:end="61:18">av_log</name><argument_list pos:start="61:19" pos:end="61:98">(<argument pos:start="61:20" pos:end="61:20"><expr pos:start="61:20" pos:end="61:20"><name pos:start="61:20" pos:end="61:20">s</name></expr></argument>, <argument pos:start="61:23" pos:end="61:36"><expr pos:start="61:23" pos:end="61:36"><name pos:start="61:23" pos:end="61:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="61:39" pos:end="61:97"><expr pos:start="61:39" pos:end="61:97"><literal type="string" pos:start="61:39" pos:end="61:97">"ignoring stream duration which is shorter than chapters\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:33"><expr pos:start="63:13" pos:end="63:32"><name pos:start="63:13" pos:end="63:15">end</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:32">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:68">(<expr pos:start="69:13" pos:end="69:67"><call pos:start="69:13" pos:end="69:52"><name pos:start="69:13" pos:end="69:21">avio_seek</name><argument_list pos:start="69:22" pos:end="69:52">(<argument pos:start="69:23" pos:end="69:28"><expr pos:start="69:23" pos:end="69:28"><name pos:start="69:23" pos:end="69:28"><name pos:start="69:23" pos:end="69:24">sc</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:28">pb</name></name></expr></argument>, <argument pos:start="69:31" pos:end="69:41"><expr pos:start="69:31" pos:end="69:41"><name pos:start="69:31" pos:end="69:41"><name pos:start="69:31" pos:end="69:36">sample</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:41">pos</name></name></expr></argument>, <argument pos:start="69:44" pos:end="69:51"><expr pos:start="69:44" pos:end="69:51"><name pos:start="69:44" pos:end="69:51">SEEK_SET</name></expr></argument>)</argument_list></call> <operator pos:start="69:54" pos:end="69:55">!=</operator> <name pos:start="69:57" pos:end="69:67"><name pos:start="69:57" pos:end="69:62">sample</name><operator pos:start="69:63" pos:end="69:64">-&gt;</operator><name pos:start="69:65" pos:end="69:67">pos</name></name></expr>)</condition> <block pos:start="69:70" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:24">

            <expr_stmt pos:start="71:13" pos:end="71:73"><expr pos:start="71:13" pos:end="71:72"><call pos:start="71:13" pos:end="71:72"><name pos:start="71:13" pos:end="71:18">av_log</name><argument_list pos:start="71:19" pos:end="71:72">(<argument pos:start="71:20" pos:end="71:20"><expr pos:start="71:20" pos:end="71:20"><name pos:start="71:20" pos:end="71:20">s</name></expr></argument>, <argument pos:start="71:23" pos:end="71:34"><expr pos:start="71:23" pos:end="71:34"><name pos:start="71:23" pos:end="71:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:37" pos:end="71:68"><expr pos:start="71:37" pos:end="71:68"><literal type="string" pos:start="71:37" pos:end="71:68">"Chapter %d not found in file\n"</literal></expr></argument>, <argument pos:start="71:71" pos:end="71:71"><expr pos:start="71:71" pos:end="71:71"><name pos:start="71:71" pos:end="71:71">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="73:13" pos:end="73:24">goto <name pos:start="73:18" pos:end="73:23">finish</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="79:9" pos:end="79:58">// the first two bytes are the length of the title</comment>

        <expr_stmt pos:start="81:9" pos:end="81:32"><expr pos:start="81:9" pos:end="81:31"><name pos:start="81:9" pos:end="81:11">len</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <call pos:start="81:15" pos:end="81:31"><name pos:start="81:15" pos:end="81:23">avio_rb16</name><argument_list pos:start="81:24" pos:end="81:31">(<argument pos:start="81:25" pos:end="81:30"><expr pos:start="81:25" pos:end="81:30"><name pos:start="81:25" pos:end="81:30"><name pos:start="81:25" pos:end="81:26">sc</name><operator pos:start="81:27" pos:end="81:28">-&gt;</operator><name pos:start="81:29" pos:end="81:30">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:21"><if pos:start="83:9" pos:end="85:21">if <condition pos:start="83:12" pos:end="83:33">(<expr pos:start="83:13" pos:end="83:32"><name pos:start="83:13" pos:end="83:15">len</name> <operator pos:start="83:17" pos:end="83:17">&gt;</operator> <name pos:start="83:19" pos:end="83:30"><name pos:start="83:19" pos:end="83:24">sample</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:30">size</name></name><operator pos:start="83:31" pos:end="83:31">-</operator><literal type="number" pos:start="83:32" pos:end="83:32">2</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:21"><block_content pos:start="85:13" pos:end="85:21">

            <continue pos:start="85:13" pos:end="85:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:30"><expr pos:start="87:9" pos:end="87:29"><name pos:start="87:9" pos:end="87:17">title_len</name> <operator pos:start="87:19" pos:end="87:19">=</operator> <literal type="number" pos:start="87:21" pos:end="87:21">2</literal><operator pos:start="87:22" pos:end="87:22">*</operator><name pos:start="87:23" pos:end="87:25">len</name> <operator pos:start="87:27" pos:end="87:27">+</operator> <literal type="number" pos:start="87:29" pos:end="87:29">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="91:24"><if pos:start="89:9" pos:end="91:24">if <condition pos:start="89:12" pos:end="89:45">(<expr pos:start="89:13" pos:end="89:44"><operator pos:start="89:13" pos:end="89:13">!</operator><operator pos:start="89:14" pos:end="89:14">(</operator><name pos:start="89:15" pos:end="89:19">title</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <call pos:start="89:23" pos:end="89:43"><name pos:start="89:23" pos:end="89:32">av_mallocz</name><argument_list pos:start="89:33" pos:end="89:43">(<argument pos:start="89:34" pos:end="89:42"><expr pos:start="89:34" pos:end="89:42"><name pos:start="89:34" pos:end="89:42">title_len</name></expr></argument>)</argument_list></call><operator pos:start="89:44" pos:end="89:44">)</operator></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:24"><block_content pos:start="91:13" pos:end="91:24">

            <goto pos:start="91:13" pos:end="91:24">goto <name pos:start="91:18" pos:end="91:23">finish</name>;</goto></block_content></block></if></if_stmt>



        <comment type="line" pos:start="95:9" pos:end="95:80">// The samples could theoretically be in any encoding if there's an encd</comment>

        <comment type="line" pos:start="97:9" pos:end="97:82">// atom following, but in practice are only utf-8 or utf-16, distinguished</comment>

        <comment type="line" pos:start="99:9" pos:end="99:43">// instead by the presence of a BOM</comment>

        <if_stmt pos:start="101:9" pos:end="131:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:17">(<expr pos:start="101:13" pos:end="101:16"><operator pos:start="101:13" pos:end="101:13">!</operator><name pos:start="101:14" pos:end="101:16">len</name></expr>)</condition> <block pos:start="101:19" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:25">

            <expr_stmt pos:start="103:13" pos:end="103:25"><expr pos:start="103:13" pos:end="103:24"><name pos:start="103:13" pos:end="103:20"><name pos:start="103:13" pos:end="103:17">title</name><index pos:start="103:18" pos:end="103:20">[<expr pos:start="103:19" pos:end="103:19"><literal type="number" pos:start="103:19" pos:end="103:19">0</literal></expr>]</index></name> <operator pos:start="103:22" pos:end="103:22">=</operator> <literal type="number" pos:start="103:24" pos:end="103:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="105:11" pos:end="131:9">else <block pos:start="105:16" pos:end="131:9">{<block_content pos:start="107:13" pos:end="129:13">

            <expr_stmt pos:start="107:13" pos:end="107:35"><expr pos:start="107:13" pos:end="107:34"><name pos:start="107:13" pos:end="107:14">ch</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <call pos:start="107:18" pos:end="107:34"><name pos:start="107:18" pos:end="107:26">avio_rb16</name><argument_list pos:start="107:27" pos:end="107:34">(<argument pos:start="107:28" pos:end="107:33"><expr pos:start="107:28" pos:end="107:33"><name pos:start="107:28" pos:end="107:33"><name pos:start="107:28" pos:end="107:29">sc</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="109:13" pos:end="129:13"><if pos:start="109:13" pos:end="111:64">if <condition pos:start="109:16" pos:end="109:29">(<expr pos:start="109:17" pos:end="109:28"><name pos:start="109:17" pos:end="109:18">ch</name> <operator pos:start="109:20" pos:end="109:21">==</operator> <literal type="number" pos:start="109:23" pos:end="109:28">0xfeff</literal></expr>)</condition><block type="pseudo" pos:start="111:17" pos:end="111:64"><block_content pos:start="111:17" pos:end="111:64">

                <expr_stmt pos:start="111:17" pos:end="111:64"><expr pos:start="111:17" pos:end="111:63"><call pos:start="111:17" pos:end="111:63"><name pos:start="111:17" pos:end="111:32">avio_get_str16be</name><argument_list pos:start="111:33" pos:end="111:63">(<argument pos:start="111:34" pos:end="111:39"><expr pos:start="111:34" pos:end="111:39"><name pos:start="111:34" pos:end="111:39"><name pos:start="111:34" pos:end="111:35">sc</name><operator pos:start="111:36" pos:end="111:37">-&gt;</operator><name pos:start="111:38" pos:end="111:39">pb</name></name></expr></argument>, <argument pos:start="111:42" pos:end="111:44"><expr pos:start="111:42" pos:end="111:44"><name pos:start="111:42" pos:end="111:44">len</name></expr></argument>, <argument pos:start="111:47" pos:end="111:51"><expr pos:start="111:47" pos:end="111:51"><name pos:start="111:47" pos:end="111:51">title</name></expr></argument>, <argument pos:start="111:54" pos:end="111:62"><expr pos:start="111:54" pos:end="111:62"><name pos:start="111:54" pos:end="111:62">title_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="113:13" pos:end="115:64">else if <condition pos:start="113:21" pos:end="113:34">(<expr pos:start="113:22" pos:end="113:33"><name pos:start="113:22" pos:end="113:23">ch</name> <operator pos:start="113:25" pos:end="113:26">==</operator> <literal type="number" pos:start="113:28" pos:end="113:33">0xfffe</literal></expr>)</condition><block type="pseudo" pos:start="115:17" pos:end="115:64"><block_content pos:start="115:17" pos:end="115:64">

                <expr_stmt pos:start="115:17" pos:end="115:64"><expr pos:start="115:17" pos:end="115:63"><call pos:start="115:17" pos:end="115:63"><name pos:start="115:17" pos:end="115:32">avio_get_str16le</name><argument_list pos:start="115:33" pos:end="115:63">(<argument pos:start="115:34" pos:end="115:39"><expr pos:start="115:34" pos:end="115:39"><name pos:start="115:34" pos:end="115:39"><name pos:start="115:34" pos:end="115:35">sc</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:39">pb</name></name></expr></argument>, <argument pos:start="115:42" pos:end="115:44"><expr pos:start="115:42" pos:end="115:44"><name pos:start="115:42" pos:end="115:44">len</name></expr></argument>, <argument pos:start="115:47" pos:end="115:51"><expr pos:start="115:47" pos:end="115:51"><name pos:start="115:47" pos:end="115:51">title</name></expr></argument>, <argument pos:start="115:54" pos:end="115:62"><expr pos:start="115:54" pos:end="115:62"><name pos:start="115:54" pos:end="115:62">title_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="117:13" pos:end="129:13">else <block pos:start="117:18" pos:end="129:13">{<block_content pos:start="119:17" pos:end="127:70">

                <expr_stmt pos:start="119:17" pos:end="119:35"><expr pos:start="119:17" pos:end="119:34"><call pos:start="119:17" pos:end="119:34"><name pos:start="119:17" pos:end="119:23">AV_WB16</name><argument_list pos:start="119:24" pos:end="119:34">(<argument pos:start="119:25" pos:end="119:29"><expr pos:start="119:25" pos:end="119:29"><name pos:start="119:25" pos:end="119:29">title</name></expr></argument>, <argument pos:start="119:32" pos:end="119:33"><expr pos:start="119:32" pos:end="119:33"><name pos:start="119:32" pos:end="119:33">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="121:17" pos:end="127:70"><if pos:start="121:17" pos:end="123:35">if <condition pos:start="121:20" pos:end="121:41">(<expr pos:start="121:21" pos:end="121:40"><name pos:start="121:21" pos:end="121:23">len</name> <operator pos:start="121:25" pos:end="121:26">==</operator> <literal type="number" pos:start="121:28" pos:end="121:28">1</literal> <operator pos:start="121:30" pos:end="121:31">||</operator> <name pos:start="121:33" pos:end="121:35">len</name> <operator pos:start="121:37" pos:end="121:38">==</operator> <literal type="number" pos:start="121:40" pos:end="121:40">2</literal></expr>)</condition><block type="pseudo" pos:start="123:21" pos:end="123:35"><block_content pos:start="123:21" pos:end="123:35">

                    <expr_stmt pos:start="123:21" pos:end="123:35"><expr pos:start="123:21" pos:end="123:34"><name pos:start="123:21" pos:end="123:30"><name pos:start="123:21" pos:end="123:25">title</name><index pos:start="123:26" pos:end="123:30">[<expr pos:start="123:27" pos:end="123:29"><name pos:start="123:27" pos:end="123:29">len</name></expr>]</index></name> <operator pos:start="123:32" pos:end="123:32">=</operator> <literal type="number" pos:start="123:34" pos:end="123:34">0</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="125:17" pos:end="127:70">else<block type="pseudo" pos:start="127:21" pos:end="127:70"><block_content pos:start="127:21" pos:end="127:70">

                    <expr_stmt pos:start="127:21" pos:end="127:70"><expr pos:start="127:21" pos:end="127:69"><call pos:start="127:21" pos:end="127:69"><name pos:start="127:21" pos:end="127:32">avio_get_str</name><argument_list pos:start="127:33" pos:end="127:69">(<argument pos:start="127:34" pos:end="127:39"><expr pos:start="127:34" pos:end="127:39"><name pos:start="127:34" pos:end="127:39"><name pos:start="127:34" pos:end="127:35">sc</name><operator pos:start="127:36" pos:end="127:37">-&gt;</operator><name pos:start="127:38" pos:end="127:39">pb</name></name></expr></argument>, <argument pos:start="127:42" pos:end="127:48"><expr pos:start="127:42" pos:end="127:48"><name pos:start="127:42" pos:end="127:48">INT_MAX</name></expr></argument>, <argument pos:start="127:51" pos:end="127:59"><expr pos:start="127:51" pos:end="127:59"><name pos:start="127:51" pos:end="127:55">title</name> <operator pos:start="127:57" pos:end="127:57">+</operator> <literal type="number" pos:start="127:59" pos:end="127:59">2</literal></expr></argument>, <argument pos:start="127:62" pos:end="127:68"><expr pos:start="127:62" pos:end="127:68"><name pos:start="127:62" pos:end="127:64">len</name> <operator pos:start="127:66" pos:end="127:66">-</operator> <literal type="number" pos:start="127:68" pos:end="127:68">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="135:9" pos:end="135:79"><expr pos:start="135:9" pos:end="135:78"><call pos:start="135:9" pos:end="135:78"><name pos:start="135:9" pos:end="135:26">avpriv_new_chapter</name><argument_list pos:start="135:27" pos:end="135:78">(<argument pos:start="135:28" pos:end="135:28"><expr pos:start="135:28" pos:end="135:28"><name pos:start="135:28" pos:end="135:28">s</name></expr></argument>, <argument pos:start="135:31" pos:end="135:31"><expr pos:start="135:31" pos:end="135:31"><name pos:start="135:31" pos:end="135:31">i</name></expr></argument>, <argument pos:start="135:34" pos:end="135:46"><expr pos:start="135:34" pos:end="135:46"><name pos:start="135:34" pos:end="135:46"><name pos:start="135:34" pos:end="135:35">st</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:46">time_base</name></name></expr></argument>, <argument pos:start="135:49" pos:end="135:65"><expr pos:start="135:49" pos:end="135:65"><name pos:start="135:49" pos:end="135:65"><name pos:start="135:49" pos:end="135:54">sample</name><operator pos:start="135:55" pos:end="135:56">-&gt;</operator><name pos:start="135:57" pos:end="135:65">timestamp</name></name></expr></argument>, <argument pos:start="135:68" pos:end="135:70"><expr pos:start="135:68" pos:end="135:70"><name pos:start="135:68" pos:end="135:70">end</name></expr></argument>, <argument pos:start="135:73" pos:end="135:77"><expr pos:start="135:73" pos:end="135:77"><name pos:start="135:73" pos:end="135:77">title</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:25"><expr pos:start="137:9" pos:end="137:24"><call pos:start="137:9" pos:end="137:24"><name pos:start="137:9" pos:end="137:16">av_freep</name><argument_list pos:start="137:17" pos:end="137:24">(<argument pos:start="137:18" pos:end="137:23"><expr pos:start="137:18" pos:end="137:23"><operator pos:start="137:18" pos:end="137:18">&amp;</operator><name pos:start="137:19" pos:end="137:23">title</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

<label pos:start="141:1" pos:end="141:7"><name pos:start="141:1" pos:end="141:6">finish</name>:</label>

    <expr_stmt pos:start="143:5" pos:end="143:41"><expr pos:start="143:5" pos:end="143:40"><call pos:start="143:5" pos:end="143:40"><name pos:start="143:5" pos:end="143:13">avio_seek</name><argument_list pos:start="143:14" pos:end="143:40">(<argument pos:start="143:15" pos:end="143:20"><expr pos:start="143:15" pos:end="143:20"><name pos:start="143:15" pos:end="143:20"><name pos:start="143:15" pos:end="143:16">sc</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:20">pb</name></name></expr></argument>, <argument pos:start="143:23" pos:end="143:29"><expr pos:start="143:23" pos:end="143:29"><name pos:start="143:23" pos:end="143:29">cur_pos</name></expr></argument>, <argument pos:start="143:32" pos:end="143:39"><expr pos:start="143:32" pos:end="143:39"><name pos:start="143:32" pos:end="143:39">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
