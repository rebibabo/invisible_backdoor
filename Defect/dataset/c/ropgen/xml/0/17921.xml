<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17921.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">decode_rle</name><parameter_list pos:start="1:22" pos:end="1:41">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:37">CamtasiaContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:17">char</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">src</name> <init pos:start="5:24" pos:end="5:38">= <expr pos:start="5:26" pos:end="5:38"><name pos:start="5:26" pos:end="5:38"><name pos:start="5:26" pos:end="5:26">c</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:38">decomp_buf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:25">output</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">p1</name></decl>, <decl pos:start="9:13" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:14">p2</name></decl>, <decl pos:start="9:17" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:20">line</name><init pos:start="9:21" pos:end="9:30">=<expr pos:start="9:22" pos:end="9:30"><name pos:start="9:22" pos:end="9:30"><name pos:start="9:22" pos:end="9:22">c</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:30">height</name></name></expr></init></decl>, <decl pos:start="9:33" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:35">pos</name><init pos:start="9:36" pos:end="9:37">=<expr pos:start="9:37" pos:end="9:37"><literal type="number" pos:start="9:37" pos:end="9:37">0</literal></expr></init></decl>, <decl pos:start="9:40" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:40" pos:end="9:40">i</name></decl>;</decl_stmt>

    

    <expr_stmt pos:start="13:5" pos:end="13:67"><expr pos:start="13:5" pos:end="13:66"><name pos:start="13:5" pos:end="13:10">output</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <name pos:start="13:14" pos:end="13:27"><name pos:start="13:14" pos:end="13:14">c</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:19">pic</name><operator pos:start="13:20" pos:end="13:20">.</operator><name pos:start="13:21" pos:end="13:24">data</name><index pos:start="13:25" pos:end="13:27">[<expr pos:start="13:26" pos:end="13:26"><literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr>]</index></name> <operator pos:start="13:29" pos:end="13:29">+</operator> <operator pos:start="13:31" pos:end="13:31">(</operator><name pos:start="13:32" pos:end="13:40"><name pos:start="13:32" pos:end="13:32">c</name><operator pos:start="13:33" pos:end="13:34">-&gt;</operator><name pos:start="13:35" pos:end="13:40">height</name></name> <operator pos:start="13:42" pos:end="13:42">-</operator> <literal type="number" pos:start="13:44" pos:end="13:44">1</literal><operator pos:start="13:45" pos:end="13:45">)</operator> <operator pos:start="13:47" pos:end="13:47">*</operator> <name pos:start="13:49" pos:end="13:66"><name pos:start="13:49" pos:end="13:49">c</name><operator pos:start="13:50" pos:end="13:51">-&gt;</operator><name pos:start="13:52" pos:end="13:54">pic</name><operator pos:start="13:55" pos:end="13:55">.</operator><name pos:start="13:56" pos:end="13:63">linesize</name><index pos:start="13:64" pos:end="13:66">[<expr pos:start="13:65" pos:end="13:65"><literal type="number" pos:start="13:65" pos:end="13:65">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <while pos:start="15:5" pos:end="125:5">while<condition pos:start="15:10" pos:end="15:47">(<expr pos:start="15:11" pos:end="15:46"><name pos:start="15:11" pos:end="15:13">src</name> <operator pos:start="15:15" pos:end="15:15">&lt;</operator> <name pos:start="15:17" pos:end="15:29"><name pos:start="15:17" pos:end="15:17">c</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:29">decomp_buf</name></name> <operator pos:start="15:31" pos:end="15:31">+</operator> <name pos:start="15:33" pos:end="15:46"><name pos:start="15:33" pos:end="15:33">c</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:46">decomp_size</name></name></expr>)</condition> <block pos:start="15:49" pos:end="125:5">{<block_content pos:start="17:9" pos:end="123:9">

        <expr_stmt pos:start="17:9" pos:end="17:20"><expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:10">p1</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <operator pos:start="17:14" pos:end="17:14">*</operator><name pos:start="17:15" pos:end="17:17">src</name><operator pos:start="17:18" pos:end="17:19">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="123:9"><if pos:start="19:9" pos:end="69:9">if<condition pos:start="19:11" pos:end="19:19">(<expr pos:start="19:12" pos:end="19:18"><name pos:start="19:12" pos:end="19:13">p1</name> <operator pos:start="19:15" pos:end="19:16">==</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>)</condition> <block pos:start="19:21" pos:end="69:9">{<block_content pos:start="21:13" pos:end="67:22"> <comment type="line" pos:start="19:23" pos:end="19:35">//Escape code</comment>

            <expr_stmt pos:start="21:13" pos:end="21:24"><expr pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:14">p2</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <operator pos:start="21:18" pos:end="21:18">*</operator><name pos:start="21:19" pos:end="21:21">src</name><operator pos:start="21:22" pos:end="21:23">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="49:13"><if pos:start="23:13" pos:end="31:13">if<condition pos:start="23:15" pos:end="23:23">(<expr pos:start="23:16" pos:end="23:22"><name pos:start="23:16" pos:end="23:17">p2</name> <operator pos:start="23:19" pos:end="23:20">==</operator> <literal type="number" pos:start="23:22" pos:end="23:22">0</literal></expr>)</condition> <block pos:start="23:25" pos:end="31:13">{<block_content pos:start="25:17" pos:end="29:25"> <comment type="line" pos:start="23:27" pos:end="23:39">//End-of-line</comment>

                <expr_stmt pos:start="25:17" pos:end="25:72"><expr pos:start="25:17" pos:end="25:71"><name pos:start="25:17" pos:end="25:22">output</name> <operator pos:start="25:24" pos:end="25:24">=</operator> <name pos:start="25:26" pos:end="25:39"><name pos:start="25:26" pos:end="25:26">c</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:31">pic</name><operator pos:start="25:32" pos:end="25:32">.</operator><name pos:start="25:33" pos:end="25:36">data</name><index pos:start="25:37" pos:end="25:39">[<expr pos:start="25:38" pos:end="25:38"><literal type="number" pos:start="25:38" pos:end="25:38">0</literal></expr>]</index></name> <operator pos:start="25:41" pos:end="25:41">+</operator> <operator pos:start="25:43" pos:end="25:43">(</operator><operator pos:start="25:44" pos:end="25:45">--</operator><name pos:start="25:46" pos:end="25:49">line</name><operator pos:start="25:50" pos:end="25:50">)</operator> <operator pos:start="25:52" pos:end="25:52">*</operator> <name pos:start="25:54" pos:end="25:71"><name pos:start="25:54" pos:end="25:54">c</name><operator pos:start="25:55" pos:end="25:56">-&gt;</operator><name pos:start="25:57" pos:end="25:59">pic</name><operator pos:start="25:60" pos:end="25:60">.</operator><name pos:start="25:61" pos:end="25:68">linesize</name><index pos:start="25:69" pos:end="25:71">[<expr pos:start="25:70" pos:end="25:70"><literal type="number" pos:start="25:70" pos:end="25:70">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="27:17" pos:end="27:24"><expr pos:start="27:17" pos:end="27:23"><name pos:start="27:17" pos:end="27:19">pos</name> <operator pos:start="27:21" pos:end="27:21">=</operator> <literal type="number" pos:start="27:23" pos:end="27:23">0</literal></expr>;</expr_stmt>

                <continue pos:start="29:17" pos:end="29:25">continue;</continue>

            </block_content>}</block></if> <if type="elseif" pos:start="31:15" pos:end="35:13">else if<condition pos:start="31:22" pos:end="31:30">(<expr pos:start="31:23" pos:end="31:29"><name pos:start="31:23" pos:end="31:24">p2</name> <operator pos:start="31:26" pos:end="31:27">==</operator> <literal type="number" pos:start="31:29" pos:end="31:29">1</literal></expr>)</condition> <block pos:start="31:32" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:25"> <comment type="line" pos:start="31:34" pos:end="31:49">//End-of-picture</comment>

                <return pos:start="33:17" pos:end="33:25">return <expr pos:start="33:24" pos:end="33:24"><literal type="number" pos:start="33:24" pos:end="33:24">0</literal></expr>;</return>

            </block_content>}</block></if> <if type="elseif" pos:start="35:15" pos:end="49:13">else if<condition pos:start="35:22" pos:end="35:30">(<expr pos:start="35:23" pos:end="35:29"><name pos:start="35:23" pos:end="35:24">p2</name> <operator pos:start="35:26" pos:end="35:27">==</operator> <literal type="number" pos:start="35:29" pos:end="35:29">2</literal></expr>)</condition> <block pos:start="35:32" pos:end="49:13">{<block_content pos:start="37:17" pos:end="47:25"> <comment type="line" pos:start="35:34" pos:end="35:39">//Skip</comment>

                <expr_stmt pos:start="37:17" pos:end="37:28"><expr pos:start="37:17" pos:end="37:27"><name pos:start="37:17" pos:end="37:18">p1</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <operator pos:start="37:22" pos:end="37:22">*</operator><name pos:start="37:23" pos:end="37:25">src</name><operator pos:start="37:26" pos:end="37:27">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:28"><expr pos:start="39:17" pos:end="39:27"><name pos:start="39:17" pos:end="39:18">p2</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <operator pos:start="39:22" pos:end="39:22">*</operator><name pos:start="39:23" pos:end="39:25">src</name><operator pos:start="39:26" pos:end="39:27">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:27"><expr pos:start="41:17" pos:end="41:26"><name pos:start="41:17" pos:end="41:20">line</name> <operator pos:start="41:22" pos:end="41:23">-=</operator> <name pos:start="41:25" pos:end="41:26">p2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:26"><expr pos:start="43:17" pos:end="43:25"><name pos:start="43:17" pos:end="43:19">pos</name> <operator pos:start="43:21" pos:end="43:22">+=</operator> <name pos:start="43:24" pos:end="43:25">p1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:89"><expr pos:start="45:17" pos:end="45:88"><name pos:start="45:17" pos:end="45:22">output</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:39"><name pos:start="45:26" pos:end="45:26">c</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:31">pic</name><operator pos:start="45:32" pos:end="45:32">.</operator><name pos:start="45:33" pos:end="45:36">data</name><index pos:start="45:37" pos:end="45:39">[<expr pos:start="45:38" pos:end="45:38"><literal type="number" pos:start="45:38" pos:end="45:38">0</literal></expr>]</index></name> <operator pos:start="45:41" pos:end="45:41">+</operator> <name pos:start="45:43" pos:end="45:46">line</name> <operator pos:start="45:48" pos:end="45:48">*</operator> <name pos:start="45:50" pos:end="45:67"><name pos:start="45:50" pos:end="45:50">c</name><operator pos:start="45:51" pos:end="45:52">-&gt;</operator><name pos:start="45:53" pos:end="45:55">pic</name><operator pos:start="45:56" pos:end="45:56">.</operator><name pos:start="45:57" pos:end="45:64">linesize</name><index pos:start="45:65" pos:end="45:67">[<expr pos:start="45:66" pos:end="45:66"><literal type="number" pos:start="45:66" pos:end="45:66">0</literal></expr>]</index></name> <operator pos:start="45:69" pos:end="45:69">+</operator> <name pos:start="45:71" pos:end="45:73">pos</name> <operator pos:start="45:75" pos:end="45:75">*</operator> <operator pos:start="45:77" pos:end="45:77">(</operator><name pos:start="45:78" pos:end="45:83"><name pos:start="45:78" pos:end="45:78">c</name><operator pos:start="45:79" pos:end="45:80">-&gt;</operator><name pos:start="45:81" pos:end="45:83">bpp</name></name> <operator pos:start="45:85" pos:end="45:85">/</operator> <literal type="number" pos:start="45:87" pos:end="45:87">8</literal><operator pos:start="45:88" pos:end="45:88">)</operator></expr>;</expr_stmt>

                <continue pos:start="47:17" pos:end="47:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <comment type="line" pos:start="51:13" pos:end="51:24">// Copy data</comment>

            <for pos:start="53:13" pos:end="57:13">for<control pos:start="53:16" pos:end="53:50">(<init pos:start="53:17" pos:end="53:22"><expr pos:start="53:17" pos:end="53:21"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <literal type="number" pos:start="53:21" pos:end="53:21">0</literal></expr>;</init> <condition pos:start="53:24" pos:end="53:45"><expr pos:start="53:24" pos:end="53:44"><name pos:start="53:24" pos:end="53:24">i</name> <operator pos:start="53:26" pos:end="53:26">&lt;</operator> <name pos:start="53:28" pos:end="53:29">p2</name> <operator pos:start="53:31" pos:end="53:31">*</operator> <operator pos:start="53:33" pos:end="53:33">(</operator><name pos:start="53:34" pos:end="53:39"><name pos:start="53:34" pos:end="53:34">c</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:39">bpp</name></name> <operator pos:start="53:41" pos:end="53:41">/</operator> <literal type="number" pos:start="53:43" pos:end="53:43">8</literal><operator pos:start="53:44" pos:end="53:44">)</operator></expr>;</condition> <incr pos:start="53:47" pos:end="53:49"><expr pos:start="53:47" pos:end="53:49"><name pos:start="53:47" pos:end="53:47">i</name><operator pos:start="53:48" pos:end="53:49">++</operator></expr></incr>)</control> <block pos:start="53:52" pos:end="57:13">{<block_content pos:start="55:17" pos:end="55:35">

                <expr_stmt pos:start="55:17" pos:end="55:35"><expr pos:start="55:17" pos:end="55:34"><operator pos:start="55:17" pos:end="55:17">*</operator><name pos:start="55:18" pos:end="55:23">output</name><operator pos:start="55:24" pos:end="55:25">++</operator> <operator pos:start="55:27" pos:end="55:27">=</operator> <operator pos:start="55:29" pos:end="55:29">*</operator><name pos:start="55:30" pos:end="55:32">src</name><operator pos:start="55:33" pos:end="55:34">++</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

	    <comment type="line" pos:start="59:13" pos:end="59:63">// RLE8 copy is actually padded - and runs are not!</comment>

	    <if_stmt pos:start="61:13" pos:end="65:13"><if pos:start="61:13" pos:end="65:13">if<condition pos:start="61:15" pos:end="61:39">(<expr pos:start="61:16" pos:end="61:38"><name pos:start="61:16" pos:end="61:21"><name pos:start="61:16" pos:end="61:16">c</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:21">bpp</name></name> <operator pos:start="61:23" pos:end="61:24">==</operator> <literal type="number" pos:start="61:26" pos:end="61:26">8</literal> <operator pos:start="61:28" pos:end="61:29">&amp;&amp;</operator> <operator pos:start="61:31" pos:end="61:31">(</operator><name pos:start="61:32" pos:end="61:33">p2</name> <operator pos:start="61:35" pos:end="61:35">&amp;</operator> <literal type="number" pos:start="61:37" pos:end="61:37">1</literal><operator pos:start="61:38" pos:end="61:38">)</operator></expr>)</condition> <block pos:start="61:41" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:22">

		<expr_stmt pos:start="63:17" pos:end="63:22"><expr pos:start="63:17" pos:end="63:21"><name pos:start="63:17" pos:end="63:19">src</name><operator pos:start="63:20" pos:end="63:21">++</operator></expr>;</expr_stmt>

	    </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:22"><expr pos:start="67:13" pos:end="67:21"><name pos:start="67:13" pos:end="67:15">pos</name> <operator pos:start="67:17" pos:end="67:18">+=</operator> <name pos:start="67:20" pos:end="67:21">p2</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="69:11" pos:end="123:9">else <block pos:start="69:16" pos:end="123:9">{<block_content pos:start="71:13" pos:end="121:22"> <comment type="line" pos:start="69:18" pos:end="69:32">//Run of pixels</comment>

            <decl_stmt pos:start="71:13" pos:end="71:23"><decl pos:start="71:13" pos:end="71:22"><type pos:start="71:13" pos:end="71:15"><name pos:start="71:13" pos:end="71:15">int</name></type> <name pos:start="71:17" pos:end="71:22"><name pos:start="71:17" pos:end="71:19">pix</name><index pos:start="71:20" pos:end="71:22">[<expr pos:start="71:21" pos:end="71:21"><literal type="number" pos:start="71:21" pos:end="71:21">3</literal></expr>]</index></name></decl>;</decl_stmt> <comment type="line" pos:start="71:25" pos:end="71:40">//original pixel</comment>

            <switch pos:start="73:13" pos:end="93:13">switch<condition pos:start="73:19" pos:end="73:26">(<expr pos:start="73:20" pos:end="73:25"><name pos:start="73:20" pos:end="73:25"><name pos:start="73:20" pos:end="73:20">c</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:25">bpp</name></name></expr>)</condition><block pos:start="73:27" pos:end="93:13">{<block_content pos:start="75:13" pos:end="91:27">

            <case pos:start="75:13" pos:end="75:20">case  <expr pos:start="75:19" pos:end="75:19"><literal type="number" pos:start="75:19" pos:end="75:19">8</literal></expr>:</case> <expr_stmt pos:start="75:22" pos:end="75:37"><expr pos:start="75:22" pos:end="75:36"><name pos:start="75:22" pos:end="75:27"><name pos:start="75:22" pos:end="75:24">pix</name><index pos:start="75:25" pos:end="75:27">[<expr pos:start="75:26" pos:end="75:26"><literal type="number" pos:start="75:26" pos:end="75:26">0</literal></expr>]</index></name> <operator pos:start="75:29" pos:end="75:29">=</operator> <operator pos:start="75:31" pos:end="75:31">*</operator><name pos:start="75:32" pos:end="75:34">src</name><operator pos:start="75:35" pos:end="75:36">++</operator></expr>;</expr_stmt>

                     <break pos:start="77:22" pos:end="77:27">break;</break>

            <case pos:start="79:13" pos:end="79:20">case <expr pos:start="79:18" pos:end="79:19"><literal type="number" pos:start="79:18" pos:end="79:19">16</literal></expr>:</case> <expr_stmt pos:start="79:22" pos:end="79:37"><expr pos:start="79:22" pos:end="79:36"><name pos:start="79:22" pos:end="79:27"><name pos:start="79:22" pos:end="79:24">pix</name><index pos:start="79:25" pos:end="79:27">[<expr pos:start="79:26" pos:end="79:26"><literal type="number" pos:start="79:26" pos:end="79:26">0</literal></expr>]</index></name> <operator pos:start="79:29" pos:end="79:29">=</operator> <operator pos:start="79:31" pos:end="79:31">*</operator><name pos:start="79:32" pos:end="79:34">src</name><operator pos:start="79:35" pos:end="79:36">++</operator></expr>;</expr_stmt>

                     <expr_stmt pos:start="81:22" pos:end="81:37"><expr pos:start="81:22" pos:end="81:36"><name pos:start="81:22" pos:end="81:27"><name pos:start="81:22" pos:end="81:24">pix</name><index pos:start="81:25" pos:end="81:27">[<expr pos:start="81:26" pos:end="81:26"><literal type="number" pos:start="81:26" pos:end="81:26">1</literal></expr>]</index></name> <operator pos:start="81:29" pos:end="81:29">=</operator> <operator pos:start="81:31" pos:end="81:31">*</operator><name pos:start="81:32" pos:end="81:34">src</name><operator pos:start="81:35" pos:end="81:36">++</operator></expr>;</expr_stmt>

                     <break pos:start="83:22" pos:end="83:27">break;</break>

            <case pos:start="85:13" pos:end="85:20">case <expr pos:start="85:18" pos:end="85:19"><literal type="number" pos:start="85:18" pos:end="85:19">24</literal></expr>:</case> <expr_stmt pos:start="85:22" pos:end="85:37"><expr pos:start="85:22" pos:end="85:36"><name pos:start="85:22" pos:end="85:27"><name pos:start="85:22" pos:end="85:24">pix</name><index pos:start="85:25" pos:end="85:27">[<expr pos:start="85:26" pos:end="85:26"><literal type="number" pos:start="85:26" pos:end="85:26">0</literal></expr>]</index></name> <operator pos:start="85:29" pos:end="85:29">=</operator> <operator pos:start="85:31" pos:end="85:31">*</operator><name pos:start="85:32" pos:end="85:34">src</name><operator pos:start="85:35" pos:end="85:36">++</operator></expr>;</expr_stmt>

                     <expr_stmt pos:start="87:22" pos:end="87:37"><expr pos:start="87:22" pos:end="87:36"><name pos:start="87:22" pos:end="87:27"><name pos:start="87:22" pos:end="87:24">pix</name><index pos:start="87:25" pos:end="87:27">[<expr pos:start="87:26" pos:end="87:26"><literal type="number" pos:start="87:26" pos:end="87:26">1</literal></expr>]</index></name> <operator pos:start="87:29" pos:end="87:29">=</operator> <operator pos:start="87:31" pos:end="87:31">*</operator><name pos:start="87:32" pos:end="87:34">src</name><operator pos:start="87:35" pos:end="87:36">++</operator></expr>;</expr_stmt>

                     <expr_stmt pos:start="89:22" pos:end="89:37"><expr pos:start="89:22" pos:end="89:36"><name pos:start="89:22" pos:end="89:27"><name pos:start="89:22" pos:end="89:24">pix</name><index pos:start="89:25" pos:end="89:27">[<expr pos:start="89:26" pos:end="89:26"><literal type="number" pos:start="89:26" pos:end="89:26">2</literal></expr>]</index></name> <operator pos:start="89:29" pos:end="89:29">=</operator> <operator pos:start="89:31" pos:end="89:31">*</operator><name pos:start="89:32" pos:end="89:34">src</name><operator pos:start="89:35" pos:end="89:36">++</operator></expr>;</expr_stmt>

                     <break pos:start="91:22" pos:end="91:27">break;</break>

            </block_content>}</block></switch>

            <for pos:start="95:13" pos:end="119:13">for<control pos:start="95:16" pos:end="95:35">(<init pos:start="95:17" pos:end="95:22"><expr pos:start="95:17" pos:end="95:21"><name pos:start="95:17" pos:end="95:17">i</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <literal type="number" pos:start="95:21" pos:end="95:21">0</literal></expr>;</init> <condition pos:start="95:24" pos:end="95:30"><expr pos:start="95:24" pos:end="95:29"><name pos:start="95:24" pos:end="95:24">i</name> <operator pos:start="95:26" pos:end="95:26">&lt;</operator> <name pos:start="95:28" pos:end="95:29">p1</name></expr>;</condition> <incr pos:start="95:32" pos:end="95:34"><expr pos:start="95:32" pos:end="95:34"><name pos:start="95:32" pos:end="95:32">i</name><operator pos:start="95:33" pos:end="95:34">++</operator></expr></incr>)</control> <block pos:start="95:37" pos:end="119:13">{<block_content pos:start="97:17" pos:end="117:17">

                <switch pos:start="97:17" pos:end="117:17">switch<condition pos:start="97:23" pos:end="97:30">(<expr pos:start="97:24" pos:end="97:29"><name pos:start="97:24" pos:end="97:29"><name pos:start="97:24" pos:end="97:24">c</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:29">bpp</name></name></expr>)</condition><block pos:start="97:31" pos:end="117:17">{<block_content pos:start="99:17" pos:end="115:31">

                <case pos:start="99:17" pos:end="99:24">case  <expr pos:start="99:23" pos:end="99:23"><literal type="number" pos:start="99:23" pos:end="99:23">8</literal></expr>:</case> <expr_stmt pos:start="99:26" pos:end="99:44"><expr pos:start="99:26" pos:end="99:43"><operator pos:start="99:26" pos:end="99:26">*</operator><name pos:start="99:27" pos:end="99:32">output</name><operator pos:start="99:33" pos:end="99:34">++</operator> <operator pos:start="99:36" pos:end="99:36">=</operator> <name pos:start="99:38" pos:end="99:43"><name pos:start="99:38" pos:end="99:40">pix</name><index pos:start="99:41" pos:end="99:43">[<expr pos:start="99:42" pos:end="99:42"><literal type="number" pos:start="99:42" pos:end="99:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

                         <break pos:start="101:26" pos:end="101:31">break;</break>

                <case pos:start="103:17" pos:end="103:24">case <expr pos:start="103:22" pos:end="103:23"><literal type="number" pos:start="103:22" pos:end="103:23">16</literal></expr>:</case> <expr_stmt pos:start="103:26" pos:end="103:44"><expr pos:start="103:26" pos:end="103:43"><operator pos:start="103:26" pos:end="103:26">*</operator><name pos:start="103:27" pos:end="103:32">output</name><operator pos:start="103:33" pos:end="103:34">++</operator> <operator pos:start="103:36" pos:end="103:36">=</operator> <name pos:start="103:38" pos:end="103:43"><name pos:start="103:38" pos:end="103:40">pix</name><index pos:start="103:41" pos:end="103:43">[<expr pos:start="103:42" pos:end="103:42"><literal type="number" pos:start="103:42" pos:end="103:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

                         <expr_stmt pos:start="105:26" pos:end="105:44"><expr pos:start="105:26" pos:end="105:43"><operator pos:start="105:26" pos:end="105:26">*</operator><name pos:start="105:27" pos:end="105:32">output</name><operator pos:start="105:33" pos:end="105:34">++</operator> <operator pos:start="105:36" pos:end="105:36">=</operator> <name pos:start="105:38" pos:end="105:43"><name pos:start="105:38" pos:end="105:40">pix</name><index pos:start="105:41" pos:end="105:43">[<expr pos:start="105:42" pos:end="105:42"><literal type="number" pos:start="105:42" pos:end="105:42">1</literal></expr>]</index></name></expr>;</expr_stmt>

                         <break pos:start="107:26" pos:end="107:31">break;</break>

                <case pos:start="109:17" pos:end="109:24">case <expr pos:start="109:22" pos:end="109:23"><literal type="number" pos:start="109:22" pos:end="109:23">24</literal></expr>:</case> <expr_stmt pos:start="109:26" pos:end="109:44"><expr pos:start="109:26" pos:end="109:43"><operator pos:start="109:26" pos:end="109:26">*</operator><name pos:start="109:27" pos:end="109:32">output</name><operator pos:start="109:33" pos:end="109:34">++</operator> <operator pos:start="109:36" pos:end="109:36">=</operator> <name pos:start="109:38" pos:end="109:43"><name pos:start="109:38" pos:end="109:40">pix</name><index pos:start="109:41" pos:end="109:43">[<expr pos:start="109:42" pos:end="109:42"><literal type="number" pos:start="109:42" pos:end="109:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

                         <expr_stmt pos:start="111:26" pos:end="111:44"><expr pos:start="111:26" pos:end="111:43"><operator pos:start="111:26" pos:end="111:26">*</operator><name pos:start="111:27" pos:end="111:32">output</name><operator pos:start="111:33" pos:end="111:34">++</operator> <operator pos:start="111:36" pos:end="111:36">=</operator> <name pos:start="111:38" pos:end="111:43"><name pos:start="111:38" pos:end="111:40">pix</name><index pos:start="111:41" pos:end="111:43">[<expr pos:start="111:42" pos:end="111:42"><literal type="number" pos:start="111:42" pos:end="111:42">1</literal></expr>]</index></name></expr>;</expr_stmt>

                         <expr_stmt pos:start="113:26" pos:end="113:44"><expr pos:start="113:26" pos:end="113:43"><operator pos:start="113:26" pos:end="113:26">*</operator><name pos:start="113:27" pos:end="113:32">output</name><operator pos:start="113:33" pos:end="113:34">++</operator> <operator pos:start="113:36" pos:end="113:36">=</operator> <name pos:start="113:38" pos:end="113:43"><name pos:start="113:38" pos:end="113:40">pix</name><index pos:start="113:41" pos:end="113:43">[<expr pos:start="113:42" pos:end="113:42"><literal type="number" pos:start="113:42" pos:end="113:42">2</literal></expr>]</index></name></expr>;</expr_stmt>

                         <break pos:start="115:26" pos:end="115:31">break;</break>

                </block_content>}</block></switch>

            </block_content>}</block></for>

            <expr_stmt pos:start="121:13" pos:end="121:22"><expr pos:start="121:13" pos:end="121:21"><name pos:start="121:13" pos:end="121:15">pos</name> <operator pos:start="121:17" pos:end="121:18">+=</operator> <name pos:start="121:20" pos:end="121:21">p1</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    

    <expr_stmt pos:start="129:5" pos:end="129:81"><expr pos:start="129:5" pos:end="129:80"><call pos:start="129:5" pos:end="129:80"><name pos:start="129:5" pos:end="129:10">av_log</name><argument_list pos:start="129:11" pos:end="129:80">(<argument pos:start="129:12" pos:end="129:19"><expr pos:start="129:12" pos:end="129:19"><name pos:start="129:12" pos:end="129:19"><name pos:start="129:12" pos:end="129:12">c</name><operator pos:start="129:13" pos:end="129:14">-&gt;</operator><name pos:start="129:15" pos:end="129:19">avctx</name></name></expr></argument>, <argument pos:start="129:22" pos:end="129:33"><expr pos:start="129:22" pos:end="129:33"><name pos:start="129:22" pos:end="129:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="129:36" pos:end="129:79"><expr pos:start="129:36" pos:end="129:79"><literal type="string" pos:start="129:36" pos:end="129:79">"Camtasia warning: no End-of-picture code\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>        

    <return pos:start="131:5" pos:end="131:13">return <expr pos:start="131:12" pos:end="131:12"><literal type="number" pos:start="131:12" pos:end="131:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
