<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15169.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:28">proxy_pwritev</name><parameter_list pos:start="1:29" pos:end="5:54">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:38">FsContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">ctx</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:65"><decl pos:start="1:46" pos:end="1:65"><type pos:start="1:46" pos:end="1:65"><name pos:start="1:46" pos:end="1:61">V9fsFidOpenState</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:65">fs</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:52"><decl pos:start="3:30" pos:end="3:52"><type pos:start="3:30" pos:end="3:52"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:47"><name pos:start="3:36" pos:end="3:41">struct</name> <name pos:start="3:43" pos:end="3:47">iovec</name></name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:52">iov</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:39"><decl pos:start="5:30" pos:end="5:39"><type pos:start="5:30" pos:end="5:39"><name pos:start="5:30" pos:end="5:32">int</name></type> <name pos:start="5:34" pos:end="5:39">iovcnt</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:53"><decl pos:start="5:42" pos:end="5:53"><type pos:start="5:42" pos:end="5:53"><name pos:start="5:42" pos:end="5:46">off_t</name></type> <name pos:start="5:48" pos:end="5:53">offset</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="53:1">{<block_content pos:start="9:5" pos:end="51:15">

    <decl_stmt pos:start="9:5" pos:end="14:0"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">ssize_t</name></type> <name pos:start="9:13" pos:end="9:15">ret</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="13:1" pos:end="13:20">#<cpp:directive pos:start="13:2" pos:end="13:6">ifdef</cpp:directive> <name pos:start="13:8" pos:end="13:20">CONFIG_PREADV</name></cpp:ifdef>

    <expr_stmt pos:start="15:5" pos:end="18:0"><expr pos:start="15:5" pos:end="15:46"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:46"><name pos:start="15:11" pos:end="15:17">pwritev</name><argument_list pos:start="15:18" pos:end="15:46">(<argument pos:start="15:19" pos:end="15:24"><expr pos:start="15:19" pos:end="15:24"><name pos:start="15:19" pos:end="15:24"><name pos:start="15:19" pos:end="15:20">fs</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:24">fd</name></name></expr></argument>, <argument pos:start="15:27" pos:end="15:29"><expr pos:start="15:27" pos:end="15:29"><name pos:start="15:27" pos:end="15:29">iov</name></expr></argument>, <argument pos:start="15:32" pos:end="15:37"><expr pos:start="15:32" pos:end="15:37"><name pos:start="15:32" pos:end="15:37">iovcnt</name></expr></argument>, <argument pos:start="15:40" pos:end="15:45"><expr pos:start="15:40" pos:end="15:45"><name pos:start="15:40" pos:end="15:45">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="17:1" pos:end="17:5">#<cpp:directive pos:start="17:2" pos:end="17:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:41"><name pos:start="19:11" pos:end="19:15">lseek</name><argument_list pos:start="19:16" pos:end="19:41">(<argument pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:18">fs</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:22">fd</name></name></expr></argument>, <argument pos:start="19:25" pos:end="19:30"><expr pos:start="19:25" pos:end="19:30"><name pos:start="19:25" pos:end="19:30">offset</name></expr></argument>, <argument pos:start="19:33" pos:end="19:40"><expr pos:start="19:33" pos:end="19:40"><name pos:start="19:33" pos:end="19:40">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="30:0"><if pos:start="21:5" pos:end="30:0">if <condition pos:start="21:8" pos:end="21:17">(<expr pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:14">&gt;=</operator> <literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>)</condition> <block pos:start="21:19" pos:end="30:0">{<block_content pos:start="23:9" pos:end="23:42">

        <expr_stmt pos:start="23:9" pos:end="23:42"><expr pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:41"><name pos:start="23:15" pos:end="23:20">writev</name><argument_list pos:start="23:21" pos:end="23:41">(<argument pos:start="23:22" pos:end="23:27"><expr pos:start="23:22" pos:end="23:27"><name pos:start="23:22" pos:end="23:27"><name pos:start="23:22" pos:end="23:23">fs</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:27">fd</name></name></expr></argument>, <argument pos:start="23:30" pos:end="23:32"><expr pos:start="23:30" pos:end="23:32"><name pos:start="23:30" pos:end="23:32">iov</name></expr></argument>, <argument pos:start="23:35" pos:end="23:40"><expr pos:start="23:35" pos:end="23:40"><name pos:start="23:35" pos:end="23:40">iovcnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="29:1" pos:end="29:29">#<cpp:directive pos:start="29:2" pos:end="29:6">ifdef</cpp:directive> <name pos:start="29:8" pos:end="29:29">CONFIG_SYNC_FILE_RANGE</name></cpp:ifdef>

    <if_stmt pos:start="31:5" pos:end="50:0"><if pos:start="31:5" pos:end="50:0">if <condition pos:start="31:8" pos:end="31:63">(<expr pos:start="31:9" pos:end="31:62"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">&gt;</operator> <literal type="number" pos:start="31:15" pos:end="31:15">0</literal> <operator pos:start="31:17" pos:end="31:18">&amp;&amp;</operator> <name pos:start="31:20" pos:end="31:36"><name pos:start="31:20" pos:end="31:22">ctx</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:36">export_flags</name></name> <operator pos:start="31:38" pos:end="31:38">&amp;</operator> <name pos:start="31:40" pos:end="31:62">V9FS_IMMEDIATE_WRITEOUT</name></expr>)</condition> <block pos:start="31:65" pos:end="50:0">{<block_content pos:start="43:9" pos:end="45:77">

        <comment type="block" pos:start="33:9" pos:end="41:11">/*

         * Initiate a writeback. This is not a data integrity sync.

         * We want to ensure that we don't leave dirty pages in the cache

         * after write when writeout=immediate is sepcified.

         */</comment>

        <expr_stmt pos:start="43:9" pos:end="45:77"><expr pos:start="43:9" pos:end="45:76"><call pos:start="43:9" pos:end="45:76"><name pos:start="43:9" pos:end="43:23">sync_file_range</name><argument_list pos:start="43:24" pos:end="45:76">(<argument pos:start="43:25" pos:end="43:30"><expr pos:start="43:25" pos:end="43:30"><name pos:start="43:25" pos:end="43:30"><name pos:start="43:25" pos:end="43:26">fs</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:30">fd</name></name></expr></argument>, <argument pos:start="43:33" pos:end="43:38"><expr pos:start="43:33" pos:end="43:38"><name pos:start="43:33" pos:end="43:38">offset</name></expr></argument>, <argument pos:start="43:41" pos:end="43:43"><expr pos:start="43:41" pos:end="43:43"><name pos:start="43:41" pos:end="43:43">ret</name></expr></argument>,

                        <argument pos:start="45:25" pos:end="45:75"><expr pos:start="45:25" pos:end="45:75"><name pos:start="45:25" pos:end="45:51">SYNC_FILE_RANGE_WAIT_BEFORE</name> <operator pos:start="45:53" pos:end="45:53">|</operator> <name pos:start="45:55" pos:end="45:75">SYNC_FILE_RANGE_WRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>

    <return pos:start="51:5" pos:end="51:15">return <expr pos:start="51:12" pos:end="51:14"><name pos:start="51:12" pos:end="51:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
