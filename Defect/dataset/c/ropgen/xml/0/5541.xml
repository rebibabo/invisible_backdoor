<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5541.c" pos:tabs="8"><function pos:start="1:1" pos:end="477:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">show_stream</name><parameter_list pos:start="1:23" pos:end="1:116">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:36">WriterContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">w</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:65"><decl pos:start="1:42" pos:end="1:65"><type pos:start="1:42" pos:end="1:65"><name pos:start="1:42" pos:end="1:56">AVFormatContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:65">fmt_ctx</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:81"><decl pos:start="1:68" pos:end="1:81"><type pos:start="1:68" pos:end="1:81"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:81">stream_idx</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:99"><decl pos:start="1:84" pos:end="1:99"><type pos:start="1:84" pos:end="1:99"><name pos:start="1:84" pos:end="1:94">InputStream</name> <modifier pos:start="1:96" pos:end="1:96">*</modifier></type><name pos:start="1:97" pos:end="1:99">ist</name></decl></parameter>, <parameter pos:start="1:102" pos:end="1:115"><decl pos:start="1:102" pos:end="1:115"><type pos:start="1:102" pos:end="1:115"><name pos:start="1:102" pos:end="1:104">int</name></type> <name pos:start="1:106" pos:end="1:115">in_program</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="477:1">{<block_content pos:start="5:5" pos:end="475:15">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:20">stream</name> <init pos:start="5:22" pos:end="5:30">= <expr pos:start="5:24" pos:end="5:30"><name pos:start="5:24" pos:end="5:30"><name pos:start="5:24" pos:end="5:26">ist</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:30">st</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">AVCodecParameters</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:26">par</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">dec_ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:21"><name pos:start="11:10" pos:end="11:16">val_str</name><index pos:start="11:17" pos:end="11:21">[<expr pos:start="11:18" pos:end="11:20"><literal type="number" pos:start="11:18" pos:end="11:20">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:17">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:14">AVRational</name></type> <name pos:start="15:16" pos:end="15:18">sar</name></decl>, <decl pos:start="15:21" pos:end="15:23"><type ref="prev" pos:start="15:5" pos:end="15:14"/><name pos:start="15:21" pos:end="15:23">dar</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">AVBPrint</name></type> <name pos:start="17:14" pos:end="17:17">pbuf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:32"><decl pos:start="19:5" pos:end="19:31"><type pos:start="19:5" pos:end="19:29"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:27">AVCodecDescriptor</name> <modifier pos:start="19:29" pos:end="19:29">*</modifier></type><name pos:start="19:30" pos:end="19:31">cd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name> <init pos:start="21:13" pos:end="21:15">= <expr pos:start="21:15" pos:end="21:15"><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:31"><decl pos:start="23:5" pos:end="23:30"><type pos:start="23:5" pos:end="23:16"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:14">char</name> <modifier pos:start="23:16" pos:end="23:16">*</modifier></type><name pos:start="23:17" pos:end="23:23">profile</name> <init pos:start="23:25" pos:end="23:30">= <expr pos:start="23:27" pos:end="23:30"><name pos:start="23:27" pos:end="23:30">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:55"><expr pos:start="27:5" pos:end="27:54"><call pos:start="27:5" pos:end="27:54"><name pos:start="27:5" pos:end="27:18">av_bprint_init</name><argument_list pos:start="27:19" pos:end="27:54">(<argument pos:start="27:20" pos:end="27:24"><expr pos:start="27:20" pos:end="27:24"><operator pos:start="27:20" pos:end="27:20">&amp;</operator><name pos:start="27:21" pos:end="27:24">pbuf</name></expr></argument>, <argument pos:start="27:27" pos:end="27:27"><expr pos:start="27:27" pos:end="27:27"><literal type="number" pos:start="27:27" pos:end="27:27">1</literal></expr></argument>, <argument pos:start="27:30" pos:end="27:53"><expr pos:start="27:30" pos:end="27:53"><name pos:start="27:30" pos:end="27:53">AV_BPRINT_SIZE_UNLIMITED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:95"><expr pos:start="31:5" pos:end="31:94"><call pos:start="31:5" pos:end="31:94"><name pos:start="31:5" pos:end="31:31">writer_print_section_header</name><argument_list pos:start="31:32" pos:end="31:94">(<argument pos:start="31:33" pos:end="31:33"><expr pos:start="31:33" pos:end="31:33"><name pos:start="31:33" pos:end="31:33">w</name></expr></argument>, <argument pos:start="31:36" pos:end="31:93"><expr pos:start="31:36" pos:end="31:93"><ternary pos:start="31:36" pos:end="31:93"><condition pos:start="31:36" pos:end="31:47"><expr pos:start="31:36" pos:end="31:45"><name pos:start="31:36" pos:end="31:45">in_program</name></expr> ?</condition><then pos:start="31:49" pos:end="31:73"> <expr pos:start="31:49" pos:end="31:73"><name pos:start="31:49" pos:end="31:73">SECTION_ID_PROGRAM_STREAM</name></expr> </then><else pos:start="31:75" pos:end="31:93">: <expr pos:start="31:77" pos:end="31:93"><name pos:start="31:77" pos:end="31:93">SECTION_ID_STREAM</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:38"><expr pos:start="35:5" pos:end="35:37"><call pos:start="35:5" pos:end="35:37"><name pos:start="35:5" pos:end="35:13">print_int</name><argument_list pos:start="35:14" pos:end="35:37">(<argument pos:start="35:15" pos:end="35:21"><expr pos:start="35:15" pos:end="35:21"><literal type="string" pos:start="35:15" pos:end="35:21">"index"</literal></expr></argument>, <argument pos:start="35:24" pos:end="35:36"><expr pos:start="35:24" pos:end="35:36"><name pos:start="35:24" pos:end="35:36"><name pos:start="35:24" pos:end="35:29">stream</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:36">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:31"><expr pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:7">par</name>     <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:30"><name pos:start="39:15" pos:end="39:20">stream</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:30">codecpar</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:27"><expr pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:11">dec_ctx</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:26"><name pos:start="41:15" pos:end="41:17">ist</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:26">dec_ctx</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="65:5"><if pos:start="43:5" pos:end="55:5">if <condition pos:start="43:8" pos:end="43:51">(<expr pos:start="43:9" pos:end="43:50"><name pos:start="43:9" pos:end="43:10">cd</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:50"><name pos:start="43:14" pos:end="43:35">avcodec_descriptor_get</name><argument_list pos:start="43:36" pos:end="43:50">(<argument pos:start="43:37" pos:end="43:49"><expr pos:start="43:37" pos:end="43:49"><name pos:start="43:37" pos:end="43:49"><name pos:start="43:37" pos:end="43:39">par</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:49">codec_id</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:53" pos:end="55:5">{<block_content pos:start="45:9" pos:end="53:9">

        <expr_stmt pos:start="45:9" pos:end="45:42"><expr pos:start="45:9" pos:end="45:41"><call pos:start="45:9" pos:end="45:41"><name pos:start="45:9" pos:end="45:17">print_str</name><argument_list pos:start="45:18" pos:end="45:41">(<argument pos:start="45:19" pos:end="45:30"><expr pos:start="45:19" pos:end="45:30"><literal type="string" pos:start="45:19" pos:end="45:30">"codec_name"</literal></expr></argument>, <argument pos:start="45:33" pos:end="45:40"><expr pos:start="45:33" pos:end="45:40"><name pos:start="45:33" pos:end="45:40"><name pos:start="45:33" pos:end="45:34">cd</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:40">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:25">(<expr pos:start="47:13" pos:end="47:24"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:24">do_bitexact</name></expr>)</condition> <block pos:start="47:27" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:65">

            <expr_stmt pos:start="49:13" pos:end="51:65"><expr pos:start="49:13" pos:end="51:64"><call pos:start="49:13" pos:end="51:64"><name pos:start="49:13" pos:end="49:21">print_str</name><argument_list pos:start="49:22" pos:end="51:64">(<argument pos:start="49:23" pos:end="49:39"><expr pos:start="49:23" pos:end="49:39"><literal type="string" pos:start="49:23" pos:end="49:39">"codec_long_name"</literal></expr></argument>,

                      <argument pos:start="51:23" pos:end="51:63"><expr pos:start="51:23" pos:end="51:63"><ternary pos:start="51:23" pos:end="51:63"><condition pos:start="51:23" pos:end="51:37"><expr pos:start="51:23" pos:end="51:35"><name pos:start="51:23" pos:end="51:35"><name pos:start="51:23" pos:end="51:24">cd</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:35">long_name</name></name></expr> ?</condition><then pos:start="51:39" pos:end="51:51"> <expr pos:start="51:39" pos:end="51:51"><name pos:start="51:39" pos:end="51:51"><name pos:start="51:39" pos:end="51:40">cd</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:51">long_name</name></name></expr> </then><else pos:start="51:53" pos:end="51:63">: <expr pos:start="51:55" pos:end="51:63"><literal type="string" pos:start="51:55" pos:end="51:63">"unknown"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="65:5">else <block pos:start="55:12" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:9">

        <expr_stmt pos:start="57:9" pos:end="57:47"><expr pos:start="57:9" pos:end="57:46"><call pos:start="57:9" pos:end="57:46"><name pos:start="57:9" pos:end="57:21">print_str_opt</name><argument_list pos:start="57:22" pos:end="57:46">(<argument pos:start="57:23" pos:end="57:34"><expr pos:start="57:23" pos:end="57:34"><literal type="string" pos:start="57:23" pos:end="57:34">"codec_name"</literal></expr></argument>, <argument pos:start="57:37" pos:end="57:45"><expr pos:start="57:37" pos:end="57:45"><literal type="string" pos:start="57:37" pos:end="57:45">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="63:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:25">(<expr pos:start="59:13" pos:end="59:24"><operator pos:start="59:13" pos:end="59:13">!</operator><name pos:start="59:14" pos:end="59:24">do_bitexact</name></expr>)</condition> <block pos:start="59:27" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:56">

            <expr_stmt pos:start="61:13" pos:end="61:56"><expr pos:start="61:13" pos:end="61:55"><call pos:start="61:13" pos:end="61:55"><name pos:start="61:13" pos:end="61:25">print_str_opt</name><argument_list pos:start="61:26" pos:end="61:55">(<argument pos:start="61:27" pos:end="61:43"><expr pos:start="61:27" pos:end="61:43"><literal type="string" pos:start="61:27" pos:end="61:43">"codec_long_name"</literal></expr></argument>, <argument pos:start="61:46" pos:end="61:54"><expr pos:start="61:46" pos:end="61:54"><literal type="string" pos:start="61:46" pos:end="61:54">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="69:5" pos:end="87:5"><if pos:start="69:5" pos:end="71:38">if <condition pos:start="69:8" pos:end="69:86">(<expr pos:start="69:9" pos:end="69:85"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:20">do_bitexact</name> <operator pos:start="69:22" pos:end="69:23">&amp;&amp;</operator> <operator pos:start="69:25" pos:end="69:25">(</operator><name pos:start="69:26" pos:end="69:32">profile</name> <operator pos:start="69:34" pos:end="69:34">=</operator> <call pos:start="69:36" pos:end="69:84"><name pos:start="69:36" pos:end="69:55">avcodec_profile_name</name><argument_list pos:start="69:56" pos:end="69:84">(<argument pos:start="69:57" pos:end="69:69"><expr pos:start="69:57" pos:end="69:69"><name pos:start="69:57" pos:end="69:69"><name pos:start="69:57" pos:end="69:59">par</name><operator pos:start="69:60" pos:end="69:61">-&gt;</operator><name pos:start="69:62" pos:end="69:69">codec_id</name></name></expr></argument>, <argument pos:start="69:72" pos:end="69:83"><expr pos:start="69:72" pos:end="69:83"><name pos:start="69:72" pos:end="69:83"><name pos:start="69:72" pos:end="69:74">par</name><operator pos:start="69:75" pos:end="69:76">-&gt;</operator><name pos:start="69:77" pos:end="69:83">profile</name></name></expr></argument>)</argument_list></call><operator pos:start="69:85" pos:end="69:85">)</operator></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:38"><block_content pos:start="71:9" pos:end="71:38">

        <expr_stmt pos:start="71:9" pos:end="71:38"><expr pos:start="71:9" pos:end="71:37"><call pos:start="71:9" pos:end="71:37"><name pos:start="71:9" pos:end="71:17">print_str</name><argument_list pos:start="71:18" pos:end="71:37">(<argument pos:start="71:19" pos:end="71:27"><expr pos:start="71:19" pos:end="71:27"><literal type="string" pos:start="71:19" pos:end="71:27">"profile"</literal></expr></argument>, <argument pos:start="71:30" pos:end="71:36"><expr pos:start="71:30" pos:end="71:36"><name pos:start="71:30" pos:end="71:36">profile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="73:5" pos:end="87:5">else <block pos:start="73:10" pos:end="87:5">{<block_content pos:start="75:9" pos:end="85:48">

        <if_stmt pos:start="75:9" pos:end="85:48"><if pos:start="75:9" pos:end="83:9">if <condition pos:start="75:12" pos:end="75:47">(<expr pos:start="75:13" pos:end="75:46"><name pos:start="75:13" pos:end="75:24"><name pos:start="75:13" pos:end="75:15">par</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:24">profile</name></name> <operator pos:start="75:26" pos:end="75:27">!=</operator> <name pos:start="75:29" pos:end="75:46">FF_PROFILE_UNKNOWN</name></expr>)</condition> <block pos:start="75:49" pos:end="83:9">{<block_content pos:start="77:13" pos:end="81:46">

            <decl_stmt pos:start="77:13" pos:end="77:33"><decl pos:start="77:13" pos:end="77:32"><type pos:start="77:13" pos:end="77:16"><name pos:start="77:13" pos:end="77:16">char</name></type> <name pos:start="77:18" pos:end="77:32"><name pos:start="77:18" pos:end="77:28">profile_num</name><index pos:start="77:29" pos:end="77:32">[<expr pos:start="77:30" pos:end="77:31"><literal type="number" pos:start="77:30" pos:end="77:31">12</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:75"><expr pos:start="79:13" pos:end="79:74"><call pos:start="79:13" pos:end="79:74"><name pos:start="79:13" pos:end="79:20">snprintf</name><argument_list pos:start="79:21" pos:end="79:74">(<argument pos:start="79:22" pos:end="79:32"><expr pos:start="79:22" pos:end="79:32"><name pos:start="79:22" pos:end="79:32">profile_num</name></expr></argument>, <argument pos:start="79:35" pos:end="79:53"><expr pos:start="79:35" pos:end="79:53"><sizeof pos:start="79:35" pos:end="79:53">sizeof<argument_list pos:start="79:41" pos:end="79:53">(<argument pos:start="79:42" pos:end="79:52"><expr pos:start="79:42" pos:end="79:52"><name pos:start="79:42" pos:end="79:52">profile_num</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="79:56" pos:end="79:59"><expr pos:start="79:56" pos:end="79:59"><literal type="string" pos:start="79:56" pos:end="79:59">"%d"</literal></expr></argument>, <argument pos:start="79:62" pos:end="79:73"><expr pos:start="79:62" pos:end="79:73"><name pos:start="79:62" pos:end="79:73"><name pos:start="79:62" pos:end="79:64">par</name><operator pos:start="79:65" pos:end="79:66">-&gt;</operator><name pos:start="79:67" pos:end="79:73">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:46"><expr pos:start="81:13" pos:end="81:45"><call pos:start="81:13" pos:end="81:45"><name pos:start="81:13" pos:end="81:21">print_str</name><argument_list pos:start="81:22" pos:end="81:45">(<argument pos:start="81:23" pos:end="81:31"><expr pos:start="81:23" pos:end="81:31"><literal type="string" pos:start="81:23" pos:end="81:31">"profile"</literal></expr></argument>, <argument pos:start="81:34" pos:end="81:44"><expr pos:start="81:34" pos:end="81:44"><name pos:start="81:34" pos:end="81:44">profile_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="83:11" pos:end="85:48">else<block type="pseudo" pos:start="85:13" pos:end="85:48"><block_content pos:start="85:13" pos:end="85:48">

            <expr_stmt pos:start="85:13" pos:end="85:48"><expr pos:start="85:13" pos:end="85:47"><call pos:start="85:13" pos:end="85:47"><name pos:start="85:13" pos:end="85:25">print_str_opt</name><argument_list pos:start="85:26" pos:end="85:47">(<argument pos:start="85:27" pos:end="85:35"><expr pos:start="85:27" pos:end="85:35"><literal type="string" pos:start="85:27" pos:end="85:35">"profile"</literal></expr></argument>, <argument pos:start="85:38" pos:end="85:46"><expr pos:start="85:38" pos:end="85:46"><literal type="string" pos:start="85:38" pos:end="85:46">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:50"><expr pos:start="91:5" pos:end="91:49"><name pos:start="91:5" pos:end="91:5">s</name> <operator pos:start="91:7" pos:end="91:7">=</operator> <call pos:start="91:9" pos:end="91:49"><name pos:start="91:9" pos:end="91:32">av_get_media_type_string</name><argument_list pos:start="91:33" pos:end="91:49">(<argument pos:start="91:34" pos:end="91:48"><expr pos:start="91:34" pos:end="91:48"><name pos:start="91:34" pos:end="91:48"><name pos:start="91:34" pos:end="91:36">par</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:48">codec_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="98:0"><if pos:start="93:5" pos:end="93:42">if <condition pos:start="93:8" pos:end="93:10">(<expr pos:start="93:9" pos:end="93:9"><name pos:start="93:9" pos:end="93:9">s</name></expr>)</condition><block type="pseudo" pos:start="93:12" pos:end="93:42"><block_content pos:start="93:12" pos:end="93:42"> <expr_stmt pos:start="93:12" pos:end="93:42"><expr pos:start="93:12" pos:end="93:41"><call pos:start="93:12" pos:end="93:41"><name pos:start="93:12" pos:end="93:20">print_str</name>    <argument_list pos:start="93:25" pos:end="93:41">(<argument pos:start="93:26" pos:end="93:37"><expr pos:start="93:26" pos:end="93:37"><literal type="string" pos:start="93:26" pos:end="93:37">"codec_type"</literal></expr></argument>, <argument pos:start="93:40" pos:end="93:40"><expr pos:start="93:40" pos:end="93:40"><name pos:start="93:40" pos:end="93:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="95:5" pos:end="98:0">else<block type="pseudo" pos:start="95:12" pos:end="98:0"><block_content pos:start="95:12" pos:end="98:0">   <expr_stmt pos:start="95:12" pos:end="98:0"><expr pos:start="95:12" pos:end="95:49"><call pos:start="95:12" pos:end="95:49"><name pos:start="95:12" pos:end="95:24">print_str_opt</name><argument_list pos:start="95:25" pos:end="95:49">(<argument pos:start="95:26" pos:end="95:37"><expr pos:start="95:26" pos:end="95:37"><literal type="string" pos:start="95:26" pos:end="95:37">"codec_type"</literal></expr></argument>, <argument pos:start="95:40" pos:end="95:48"><expr pos:start="95:40" pos:end="95:48"><literal type="string" pos:start="95:40" pos:end="95:48">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:if pos:start="97:1" pos:end="97:21">#<cpp:directive pos:start="97:2" pos:end="97:3">if</cpp:directive> <expr pos:start="97:5" pos:end="97:21"><name pos:start="97:5" pos:end="97:21">FF_API_LAVF_AVCTX</name></expr></cpp:if>

    <expr_stmt pos:start="99:5" pos:end="102:0"><expr pos:start="99:5" pos:end="99:55"><call pos:start="99:5" pos:end="99:55"><name pos:start="99:5" pos:end="99:11">print_q</name><argument_list pos:start="99:12" pos:end="99:55">(<argument pos:start="99:13" pos:end="99:29"><expr pos:start="99:13" pos:end="99:29"><literal type="string" pos:start="99:13" pos:end="99:29">"codec_time_base"</literal></expr></argument>, <argument pos:start="99:32" pos:end="99:49"><expr pos:start="99:32" pos:end="99:49"><name pos:start="99:32" pos:end="99:49"><name pos:start="99:32" pos:end="99:38">dec_ctx</name><operator pos:start="99:39" pos:end="99:40">-&gt;</operator><name pos:start="99:41" pos:end="99:49">time_base</name></name></expr></argument>, <argument pos:start="99:52" pos:end="99:54"><expr pos:start="99:52" pos:end="99:54"><literal type="char" pos:start="99:52" pos:end="99:54">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="101:1" pos:end="101:6">#<cpp:directive pos:start="101:2" pos:end="101:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="105:5" pos:end="105:30">/* print AVI/FourCC tag */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:70"><expr pos:start="107:5" pos:end="107:69"><call pos:start="107:5" pos:end="107:69"><name pos:start="107:5" pos:end="107:27">av_get_codec_tag_string</name><argument_list pos:start="107:28" pos:end="107:69">(<argument pos:start="107:29" pos:end="107:35"><expr pos:start="107:29" pos:end="107:35"><name pos:start="107:29" pos:end="107:35">val_str</name></expr></argument>, <argument pos:start="107:38" pos:end="107:52"><expr pos:start="107:38" pos:end="107:52"><sizeof pos:start="107:38" pos:end="107:52">sizeof<argument_list pos:start="107:44" pos:end="107:52">(<argument pos:start="107:45" pos:end="107:51"><expr pos:start="107:45" pos:end="107:51"><name pos:start="107:45" pos:end="107:51">val_str</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="107:55" pos:end="107:68"><expr pos:start="107:55" pos:end="107:68"><name pos:start="107:55" pos:end="107:68"><name pos:start="107:55" pos:end="107:57">par</name><operator pos:start="107:58" pos:end="107:59">-&gt;</operator><name pos:start="107:60" pos:end="107:68">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:46"><expr pos:start="109:5" pos:end="109:45"><call pos:start="109:5" pos:end="109:45"><name pos:start="109:5" pos:end="109:13">print_str</name><argument_list pos:start="109:14" pos:end="109:45">(<argument pos:start="109:15" pos:end="109:32"><expr pos:start="109:15" pos:end="109:32"><literal type="string" pos:start="109:15" pos:end="109:32">"codec_tag_string"</literal></expr></argument>,    <argument pos:start="109:38" pos:end="109:44"><expr pos:start="109:38" pos:end="109:44"><name pos:start="109:38" pos:end="109:44">val_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:53"><expr pos:start="111:5" pos:end="111:52"><call pos:start="111:5" pos:end="111:52"><name pos:start="111:5" pos:end="111:13">print_fmt</name><argument_list pos:start="111:14" pos:end="111:52">(<argument pos:start="111:15" pos:end="111:25"><expr pos:start="111:15" pos:end="111:25"><literal type="string" pos:start="111:15" pos:end="111:25">"codec_tag"</literal></expr></argument>, <argument pos:start="111:28" pos:end="111:35"><expr pos:start="111:28" pos:end="111:35"><literal type="string" pos:start="111:28" pos:end="111:35">"0x%04x"</literal></expr></argument>, <argument pos:start="111:38" pos:end="111:51"><expr pos:start="111:38" pos:end="111:51"><name pos:start="111:38" pos:end="111:51"><name pos:start="111:38" pos:end="111:40">par</name><operator pos:start="111:41" pos:end="111:42">-&gt;</operator><name pos:start="111:43" pos:end="111:51">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="115:5" pos:end="295:5">switch <condition pos:start="115:12" pos:end="115:28">(<expr pos:start="115:13" pos:end="115:27"><name pos:start="115:13" pos:end="115:27"><name pos:start="115:13" pos:end="115:15">par</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:27">codec_type</name></name></expr>)</condition> <block pos:start="115:30" pos:end="295:5">{<block_content pos:start="117:5" pos:end="293:14">

    <case pos:start="117:5" pos:end="117:28">case <expr pos:start="117:10" pos:end="117:27"><name pos:start="117:10" pos:end="117:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

        <expr_stmt pos:start="119:9" pos:end="119:46"><expr pos:start="119:9" pos:end="119:45"><call pos:start="119:9" pos:end="119:45"><name pos:start="119:9" pos:end="119:17">print_int</name><argument_list pos:start="119:18" pos:end="119:45">(<argument pos:start="119:19" pos:end="119:25"><expr pos:start="119:19" pos:end="119:25"><literal type="string" pos:start="119:19" pos:end="119:25">"width"</literal></expr></argument>,        <argument pos:start="119:35" pos:end="119:44"><expr pos:start="119:35" pos:end="119:44"><name pos:start="119:35" pos:end="119:44"><name pos:start="119:35" pos:end="119:37">par</name><operator pos:start="119:38" pos:end="119:39">-&gt;</operator><name pos:start="119:40" pos:end="119:44">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:47"><expr pos:start="121:9" pos:end="121:46"><call pos:start="121:9" pos:end="121:46"><name pos:start="121:9" pos:end="121:17">print_int</name><argument_list pos:start="121:18" pos:end="121:46">(<argument pos:start="121:19" pos:end="121:26"><expr pos:start="121:19" pos:end="121:26"><literal type="string" pos:start="121:19" pos:end="121:26">"height"</literal></expr></argument>,       <argument pos:start="121:35" pos:end="121:45"><expr pos:start="121:35" pos:end="121:45"><name pos:start="121:35" pos:end="121:45"><name pos:start="121:35" pos:end="121:37">par</name><operator pos:start="121:38" pos:end="121:39">-&gt;</operator><name pos:start="121:40" pos:end="121:45">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:20">(<expr pos:start="123:13" pos:end="123:19"><name pos:start="123:13" pos:end="123:19">dec_ctx</name></expr>)</condition> <block pos:start="123:22" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:61">

            <expr_stmt pos:start="125:13" pos:end="125:60"><expr pos:start="125:13" pos:end="125:59"><call pos:start="125:13" pos:end="125:59"><name pos:start="125:13" pos:end="125:21">print_int</name><argument_list pos:start="125:22" pos:end="125:59">(<argument pos:start="125:23" pos:end="125:35"><expr pos:start="125:23" pos:end="125:35"><literal type="string" pos:start="125:23" pos:end="125:35">"coded_width"</literal></expr></argument>,  <argument pos:start="125:39" pos:end="125:58"><expr pos:start="125:39" pos:end="125:58"><name pos:start="125:39" pos:end="125:58"><name pos:start="125:39" pos:end="125:45">dec_ctx</name><operator pos:start="125:46" pos:end="125:47">-&gt;</operator><name pos:start="125:48" pos:end="125:58">coded_width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:61"><expr pos:start="127:13" pos:end="127:60"><call pos:start="127:13" pos:end="127:60"><name pos:start="127:13" pos:end="127:21">print_int</name><argument_list pos:start="127:22" pos:end="127:60">(<argument pos:start="127:23" pos:end="127:36"><expr pos:start="127:23" pos:end="127:36"><literal type="string" pos:start="127:23" pos:end="127:36">"coded_height"</literal></expr></argument>, <argument pos:start="127:39" pos:end="127:59"><expr pos:start="127:39" pos:end="127:59"><name pos:start="127:39" pos:end="127:59"><name pos:start="127:39" pos:end="127:45">dec_ctx</name><operator pos:start="127:46" pos:end="127:47">-&gt;</operator><name pos:start="127:48" pos:end="127:59">coded_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:52"><expr pos:start="131:9" pos:end="131:51"><call pos:start="131:9" pos:end="131:51"><name pos:start="131:9" pos:end="131:17">print_int</name><argument_list pos:start="131:18" pos:end="131:51">(<argument pos:start="131:19" pos:end="131:32"><expr pos:start="131:19" pos:end="131:32"><literal type="string" pos:start="131:19" pos:end="131:32">"has_b_frames"</literal></expr></argument>, <argument pos:start="131:35" pos:end="131:50"><expr pos:start="131:35" pos:end="131:50"><name pos:start="131:35" pos:end="131:50"><name pos:start="131:35" pos:end="131:37">par</name><operator pos:start="131:38" pos:end="131:39">-&gt;</operator><name pos:start="131:40" pos:end="131:50">video_delay</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:66"><expr pos:start="133:9" pos:end="133:65"><name pos:start="133:9" pos:end="133:11">sar</name> <operator pos:start="133:13" pos:end="133:13">=</operator> <call pos:start="133:15" pos:end="133:65"><name pos:start="133:15" pos:end="133:42">av_guess_sample_aspect_ratio</name><argument_list pos:start="133:43" pos:end="133:65">(<argument pos:start="133:44" pos:end="133:50"><expr pos:start="133:44" pos:end="133:50"><name pos:start="133:44" pos:end="133:50">fmt_ctx</name></expr></argument>, <argument pos:start="133:53" pos:end="133:58"><expr pos:start="133:53" pos:end="133:58"><name pos:start="133:53" pos:end="133:58">stream</name></expr></argument>, <argument pos:start="133:61" pos:end="133:64"><expr pos:start="133:61" pos:end="133:64"><name pos:start="133:61" pos:end="133:64">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="155:9"><if pos:start="135:9" pos:end="149:9">if <condition pos:start="135:12" pos:end="135:20">(<expr pos:start="135:13" pos:end="135:19"><name pos:start="135:13" pos:end="135:19"><name pos:start="135:13" pos:end="135:15">sar</name><operator pos:start="135:16" pos:end="135:16">.</operator><name pos:start="135:17" pos:end="135:19">den</name></name></expr>)</condition> <block pos:start="135:22" pos:end="149:9">{<block_content pos:start="137:13" pos:end="147:54">

            <expr_stmt pos:start="137:13" pos:end="137:53"><expr pos:start="137:13" pos:end="137:52"><call pos:start="137:13" pos:end="137:52"><name pos:start="137:13" pos:end="137:19">print_q</name><argument_list pos:start="137:20" pos:end="137:52">(<argument pos:start="137:21" pos:end="137:41"><expr pos:start="137:21" pos:end="137:41"><literal type="string" pos:start="137:21" pos:end="137:41">"sample_aspect_ratio"</literal></expr></argument>, <argument pos:start="137:44" pos:end="137:46"><expr pos:start="137:44" pos:end="137:46"><name pos:start="137:44" pos:end="137:46">sar</name></expr></argument>, <argument pos:start="137:49" pos:end="137:51"><expr pos:start="137:49" pos:end="137:51"><literal type="char" pos:start="137:49" pos:end="137:51">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="145:33"><expr pos:start="139:13" pos:end="145:32"><call pos:start="139:13" pos:end="145:32"><name pos:start="139:13" pos:end="139:21">av_reduce</name><argument_list pos:start="139:22" pos:end="145:32">(<argument pos:start="139:23" pos:end="139:30"><expr pos:start="139:23" pos:end="139:30"><operator pos:start="139:23" pos:end="139:23">&amp;</operator><name pos:start="139:24" pos:end="139:30"><name pos:start="139:24" pos:end="139:26">dar</name><operator pos:start="139:27" pos:end="139:27">.</operator><name pos:start="139:28" pos:end="139:30">num</name></name></expr></argument>, <argument pos:start="139:33" pos:end="139:40"><expr pos:start="139:33" pos:end="139:40"><operator pos:start="139:33" pos:end="139:33">&amp;</operator><name pos:start="139:34" pos:end="139:40"><name pos:start="139:34" pos:end="139:36">dar</name><operator pos:start="139:37" pos:end="139:37">.</operator><name pos:start="139:38" pos:end="139:40">den</name></name></expr></argument>,

                      <argument pos:start="141:23" pos:end="141:43"><expr pos:start="141:23" pos:end="141:43"><name pos:start="141:23" pos:end="141:32"><name pos:start="141:23" pos:end="141:25">par</name><operator pos:start="141:26" pos:end="141:27">-&gt;</operator><name pos:start="141:28" pos:end="141:32">width</name></name>  <operator pos:start="141:35" pos:end="141:35">*</operator> <name pos:start="141:37" pos:end="141:43"><name pos:start="141:37" pos:end="141:39">sar</name><operator pos:start="141:40" pos:end="141:40">.</operator><name pos:start="141:41" pos:end="141:43">num</name></name></expr></argument>,

                      <argument pos:start="143:23" pos:end="143:43"><expr pos:start="143:23" pos:end="143:43"><name pos:start="143:23" pos:end="143:33"><name pos:start="143:23" pos:end="143:25">par</name><operator pos:start="143:26" pos:end="143:27">-&gt;</operator><name pos:start="143:28" pos:end="143:33">height</name></name> <operator pos:start="143:35" pos:end="143:35">*</operator> <name pos:start="143:37" pos:end="143:43"><name pos:start="143:37" pos:end="143:39">sar</name><operator pos:start="143:40" pos:end="143:40">.</operator><name pos:start="143:41" pos:end="143:43">den</name></name></expr></argument>,

                      <argument pos:start="145:23" pos:end="145:31"><expr pos:start="145:23" pos:end="145:31"><literal type="number" pos:start="145:23" pos:end="145:26">1024</literal><operator pos:start="145:27" pos:end="145:27">*</operator><literal type="number" pos:start="145:28" pos:end="145:31">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:54"><expr pos:start="147:13" pos:end="147:53"><call pos:start="147:13" pos:end="147:53"><name pos:start="147:13" pos:end="147:19">print_q</name><argument_list pos:start="147:20" pos:end="147:53">(<argument pos:start="147:21" pos:end="147:42"><expr pos:start="147:21" pos:end="147:42"><literal type="string" pos:start="147:21" pos:end="147:42">"display_aspect_ratio"</literal></expr></argument>, <argument pos:start="147:45" pos:end="147:47"><expr pos:start="147:45" pos:end="147:47"><name pos:start="147:45" pos:end="147:47">dar</name></expr></argument>, <argument pos:start="147:50" pos:end="147:52"><expr pos:start="147:50" pos:end="147:52"><literal type="char" pos:start="147:50" pos:end="147:52">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="149:11" pos:end="155:9">else <block pos:start="149:16" pos:end="155:9">{<block_content pos:start="151:13" pos:end="153:57">

            <expr_stmt pos:start="151:13" pos:end="151:56"><expr pos:start="151:13" pos:end="151:55"><call pos:start="151:13" pos:end="151:55"><name pos:start="151:13" pos:end="151:25">print_str_opt</name><argument_list pos:start="151:26" pos:end="151:55">(<argument pos:start="151:27" pos:end="151:47"><expr pos:start="151:27" pos:end="151:47"><literal type="string" pos:start="151:27" pos:end="151:47">"sample_aspect_ratio"</literal></expr></argument>, <argument pos:start="151:50" pos:end="151:54"><expr pos:start="151:50" pos:end="151:54"><literal type="string" pos:start="151:50" pos:end="151:54">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:57"><expr pos:start="153:13" pos:end="153:56"><call pos:start="153:13" pos:end="153:56"><name pos:start="153:13" pos:end="153:25">print_str_opt</name><argument_list pos:start="153:26" pos:end="153:56">(<argument pos:start="153:27" pos:end="153:48"><expr pos:start="153:27" pos:end="153:48"><literal type="string" pos:start="153:27" pos:end="153:48">"display_aspect_ratio"</literal></expr></argument>, <argument pos:start="153:51" pos:end="153:55"><expr pos:start="153:51" pos:end="153:55"><literal type="string" pos:start="153:51" pos:end="153:55">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:45"><expr pos:start="157:9" pos:end="157:44"><name pos:start="157:9" pos:end="157:9">s</name> <operator pos:start="157:11" pos:end="157:11">=</operator> <call pos:start="157:13" pos:end="157:44"><name pos:start="157:13" pos:end="157:31">av_get_pix_fmt_name</name><argument_list pos:start="157:32" pos:end="157:44">(<argument pos:start="157:33" pos:end="157:43"><expr pos:start="157:33" pos:end="157:43"><name pos:start="157:33" pos:end="157:43"><name pos:start="157:33" pos:end="157:35">par</name><operator pos:start="157:36" pos:end="157:37">-&gt;</operator><name pos:start="157:38" pos:end="157:43">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="159:9" pos:end="161:51"><if pos:start="159:9" pos:end="159:43">if <condition pos:start="159:12" pos:end="159:14">(<expr pos:start="159:13" pos:end="159:13"><name pos:start="159:13" pos:end="159:13">s</name></expr>)</condition><block type="pseudo" pos:start="159:16" pos:end="159:43"><block_content pos:start="159:16" pos:end="159:43"> <expr_stmt pos:start="159:16" pos:end="159:43"><expr pos:start="159:16" pos:end="159:42"><call pos:start="159:16" pos:end="159:42"><name pos:start="159:16" pos:end="159:24">print_str</name>    <argument_list pos:start="159:29" pos:end="159:42">(<argument pos:start="159:30" pos:end="159:38"><expr pos:start="159:30" pos:end="159:38"><literal type="string" pos:start="159:30" pos:end="159:38">"pix_fmt"</literal></expr></argument>, <argument pos:start="159:41" pos:end="159:41"><expr pos:start="159:41" pos:end="159:41"><name pos:start="159:41" pos:end="159:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="161:9" pos:end="161:51">else<block type="pseudo" pos:start="161:16" pos:end="161:51"><block_content pos:start="161:16" pos:end="161:51">   <expr_stmt pos:start="161:16" pos:end="161:51"><expr pos:start="161:16" pos:end="161:50"><call pos:start="161:16" pos:end="161:50"><name pos:start="161:16" pos:end="161:28">print_str_opt</name><argument_list pos:start="161:29" pos:end="161:50">(<argument pos:start="161:30" pos:end="161:38"><expr pos:start="161:30" pos:end="161:38"><literal type="string" pos:start="161:30" pos:end="161:38">"pix_fmt"</literal></expr></argument>, <argument pos:start="161:41" pos:end="161:49"><expr pos:start="161:41" pos:end="161:49"><literal type="string" pos:start="161:41" pos:end="161:49">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:41"><expr pos:start="163:9" pos:end="163:40"><call pos:start="163:9" pos:end="163:40"><name pos:start="163:9" pos:end="163:17">print_int</name><argument_list pos:start="163:18" pos:end="163:40">(<argument pos:start="163:19" pos:end="163:25"><expr pos:start="163:19" pos:end="163:25"><literal type="string" pos:start="163:19" pos:end="163:25">"level"</literal></expr></argument>,   <argument pos:start="163:30" pos:end="163:39"><expr pos:start="163:30" pos:end="163:39"><name pos:start="163:30" pos:end="163:39"><name pos:start="163:30" pos:end="163:32">par</name><operator pos:start="163:33" pos:end="163:34">-&gt;</operator><name pos:start="163:35" pos:end="163:39">level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="171:48"><if pos:start="165:9" pos:end="167:80">if <condition pos:start="165:12" pos:end="165:56">(<expr pos:start="165:13" pos:end="165:55"><name pos:start="165:13" pos:end="165:28"><name pos:start="165:13" pos:end="165:15">par</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:28">color_range</name></name> <operator pos:start="165:30" pos:end="165:31">!=</operator> <name pos:start="165:33" pos:end="165:55">AVCOL_RANGE_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:80"><block_content pos:start="167:13" pos:end="167:80">

            <expr_stmt pos:start="167:13" pos:end="167:80"><expr pos:start="167:13" pos:end="167:79"><call pos:start="167:13" pos:end="167:79"><name pos:start="167:13" pos:end="167:21">print_str</name>    <argument_list pos:start="167:26" pos:end="167:79">(<argument pos:start="167:27" pos:end="167:39"><expr pos:start="167:27" pos:end="167:39"><literal type="string" pos:start="167:27" pos:end="167:39">"color_range"</literal></expr></argument>, <argument pos:start="167:42" pos:end="167:78"><expr pos:start="167:42" pos:end="167:78"><call pos:start="167:42" pos:end="167:78"><name pos:start="167:42" pos:end="167:60">av_color_range_name</name><argument_list pos:start="167:61" pos:end="167:78">(<argument pos:start="167:62" pos:end="167:77"><expr pos:start="167:62" pos:end="167:77"><name pos:start="167:62" pos:end="167:77"><name pos:start="167:62" pos:end="167:64">par</name><operator pos:start="167:65" pos:end="167:66">-&gt;</operator><name pos:start="167:67" pos:end="167:77">color_range</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="169:9" pos:end="171:48">else<block type="pseudo" pos:start="171:13" pos:end="171:48"><block_content pos:start="171:13" pos:end="171:48">

            <expr_stmt pos:start="171:13" pos:end="171:48"><expr pos:start="171:13" pos:end="171:47"><call pos:start="171:13" pos:end="171:47"><name pos:start="171:13" pos:end="171:25">print_str_opt</name><argument_list pos:start="171:26" pos:end="171:47">(<argument pos:start="171:27" pos:end="171:39"><expr pos:start="171:27" pos:end="171:39"><literal type="string" pos:start="171:27" pos:end="171:39">"color_range"</literal></expr></argument>, <argument pos:start="171:42" pos:end="171:46"><expr pos:start="171:42" pos:end="171:46"><literal type="string" pos:start="171:42" pos:end="171:46">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="175:9" pos:end="175:53"><expr pos:start="175:9" pos:end="175:52"><name pos:start="175:9" pos:end="175:9">s</name> <operator pos:start="175:11" pos:end="175:11">=</operator> <call pos:start="175:13" pos:end="175:52"><name pos:start="175:13" pos:end="175:34">av_get_colorspace_name</name><argument_list pos:start="175:35" pos:end="175:52">(<argument pos:start="175:36" pos:end="175:51"><expr pos:start="175:36" pos:end="175:51"><name pos:start="175:36" pos:end="175:51"><name pos:start="175:36" pos:end="175:38">par</name><operator pos:start="175:39" pos:end="175:40">-&gt;</operator><name pos:start="175:41" pos:end="175:51">color_space</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="177:9" pos:end="179:55"><if pos:start="177:9" pos:end="177:47">if <condition pos:start="177:12" pos:end="177:14">(<expr pos:start="177:13" pos:end="177:13"><name pos:start="177:13" pos:end="177:13">s</name></expr>)</condition><block type="pseudo" pos:start="177:16" pos:end="177:47"><block_content pos:start="177:16" pos:end="177:47"> <expr_stmt pos:start="177:16" pos:end="177:47"><expr pos:start="177:16" pos:end="177:46"><call pos:start="177:16" pos:end="177:46"><name pos:start="177:16" pos:end="177:24">print_str</name>    <argument_list pos:start="177:29" pos:end="177:46">(<argument pos:start="177:30" pos:end="177:42"><expr pos:start="177:30" pos:end="177:42"><literal type="string" pos:start="177:30" pos:end="177:42">"color_space"</literal></expr></argument>, <argument pos:start="177:45" pos:end="177:45"><expr pos:start="177:45" pos:end="177:45"><name pos:start="177:45" pos:end="177:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="179:9" pos:end="179:55">else<block type="pseudo" pos:start="179:16" pos:end="179:55"><block_content pos:start="179:16" pos:end="179:55">   <expr_stmt pos:start="179:16" pos:end="179:55"><expr pos:start="179:16" pos:end="179:54"><call pos:start="179:16" pos:end="179:54"><name pos:start="179:16" pos:end="179:28">print_str_opt</name><argument_list pos:start="179:29" pos:end="179:54">(<argument pos:start="179:30" pos:end="179:42"><expr pos:start="179:30" pos:end="179:42"><literal type="string" pos:start="179:30" pos:end="179:42">"color_space"</literal></expr></argument>, <argument pos:start="179:45" pos:end="179:53"><expr pos:start="179:45" pos:end="179:53"><literal type="string" pos:start="179:45" pos:end="179:53">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="183:9" pos:end="189:84"><if pos:start="183:9" pos:end="185:80">if <condition pos:start="183:12" pos:end="183:52">(<expr pos:start="183:13" pos:end="183:51"><name pos:start="183:13" pos:end="183:26"><name pos:start="183:13" pos:end="183:15">par</name><operator pos:start="183:16" pos:end="183:17">-&gt;</operator><name pos:start="183:18" pos:end="183:26">color_trc</name></name> <operator pos:start="183:28" pos:end="183:29">!=</operator> <name pos:start="183:31" pos:end="183:51">AVCOL_TRC_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:80"><block_content pos:start="185:13" pos:end="185:80">

            <expr_stmt pos:start="185:13" pos:end="185:80"><expr pos:start="185:13" pos:end="185:79"><call pos:start="185:13" pos:end="185:79"><name pos:start="185:13" pos:end="185:21">print_str</name><argument_list pos:start="185:22" pos:end="185:79">(<argument pos:start="185:23" pos:end="185:38"><expr pos:start="185:23" pos:end="185:38"><literal type="string" pos:start="185:23" pos:end="185:38">"color_transfer"</literal></expr></argument>, <argument pos:start="185:41" pos:end="185:78"><expr pos:start="185:41" pos:end="185:78"><call pos:start="185:41" pos:end="185:78"><name pos:start="185:41" pos:end="185:62">av_color_transfer_name</name><argument_list pos:start="185:63" pos:end="185:78">(<argument pos:start="185:64" pos:end="185:77"><expr pos:start="185:64" pos:end="185:77"><name pos:start="185:64" pos:end="185:77"><name pos:start="185:64" pos:end="185:66">par</name><operator pos:start="185:67" pos:end="185:68">-&gt;</operator><name pos:start="185:69" pos:end="185:77">color_trc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="187:9" pos:end="189:84">else<block type="pseudo" pos:start="189:13" pos:end="189:84"><block_content pos:start="189:13" pos:end="189:84">

            <expr_stmt pos:start="189:13" pos:end="189:84"><expr pos:start="189:13" pos:end="189:83"><call pos:start="189:13" pos:end="189:83"><name pos:start="189:13" pos:end="189:25">print_str_opt</name><argument_list pos:start="189:26" pos:end="189:83">(<argument pos:start="189:27" pos:end="189:42"><expr pos:start="189:27" pos:end="189:42"><literal type="string" pos:start="189:27" pos:end="189:42">"color_transfer"</literal></expr></argument>, <argument pos:start="189:45" pos:end="189:82"><expr pos:start="189:45" pos:end="189:82"><call pos:start="189:45" pos:end="189:82"><name pos:start="189:45" pos:end="189:66">av_color_transfer_name</name><argument_list pos:start="189:67" pos:end="189:82">(<argument pos:start="189:68" pos:end="189:81"><expr pos:start="189:68" pos:end="189:81"><name pos:start="189:68" pos:end="189:81"><name pos:start="189:68" pos:end="189:70">par</name><operator pos:start="189:71" pos:end="189:72">-&gt;</operator><name pos:start="189:73" pos:end="189:81">color_trc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="193:9" pos:end="199:92"><if pos:start="193:9" pos:end="195:88">if <condition pos:start="193:12" pos:end="193:58">(<expr pos:start="193:13" pos:end="193:57"><name pos:start="193:13" pos:end="193:32"><name pos:start="193:13" pos:end="193:15">par</name><operator pos:start="193:16" pos:end="193:17">-&gt;</operator><name pos:start="193:18" pos:end="193:32">color_primaries</name></name> <operator pos:start="193:34" pos:end="193:35">!=</operator> <name pos:start="193:37" pos:end="193:57">AVCOL_PRI_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:88"><block_content pos:start="195:13" pos:end="195:88">

            <expr_stmt pos:start="195:13" pos:end="195:88"><expr pos:start="195:13" pos:end="195:87"><call pos:start="195:13" pos:end="195:87"><name pos:start="195:13" pos:end="195:21">print_str</name><argument_list pos:start="195:22" pos:end="195:87">(<argument pos:start="195:23" pos:end="195:39"><expr pos:start="195:23" pos:end="195:39"><literal type="string" pos:start="195:23" pos:end="195:39">"color_primaries"</literal></expr></argument>, <argument pos:start="195:42" pos:end="195:86"><expr pos:start="195:42" pos:end="195:86"><call pos:start="195:42" pos:end="195:86"><name pos:start="195:42" pos:end="195:64">av_color_primaries_name</name><argument_list pos:start="195:65" pos:end="195:86">(<argument pos:start="195:66" pos:end="195:85"><expr pos:start="195:66" pos:end="195:85"><name pos:start="195:66" pos:end="195:85"><name pos:start="195:66" pos:end="195:68">par</name><operator pos:start="195:69" pos:end="195:70">-&gt;</operator><name pos:start="195:71" pos:end="195:85">color_primaries</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="197:9" pos:end="199:92">else<block type="pseudo" pos:start="199:13" pos:end="199:92"><block_content pos:start="199:13" pos:end="199:92">

            <expr_stmt pos:start="199:13" pos:end="199:92"><expr pos:start="199:13" pos:end="199:91"><call pos:start="199:13" pos:end="199:91"><name pos:start="199:13" pos:end="199:25">print_str_opt</name><argument_list pos:start="199:26" pos:end="199:91">(<argument pos:start="199:27" pos:end="199:43"><expr pos:start="199:27" pos:end="199:43"><literal type="string" pos:start="199:27" pos:end="199:43">"color_primaries"</literal></expr></argument>, <argument pos:start="199:46" pos:end="199:90"><expr pos:start="199:46" pos:end="199:90"><call pos:start="199:46" pos:end="199:90"><name pos:start="199:46" pos:end="199:68">av_color_primaries_name</name><argument_list pos:start="199:69" pos:end="199:90">(<argument pos:start="199:70" pos:end="199:89"><expr pos:start="199:70" pos:end="199:89"><name pos:start="199:70" pos:end="199:89"><name pos:start="199:70" pos:end="199:72">par</name><operator pos:start="199:73" pos:end="199:74">-&gt;</operator><name pos:start="199:75" pos:end="199:89">color_primaries</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="203:9" pos:end="214:0"><if pos:start="203:9" pos:end="205:88">if <condition pos:start="203:12" pos:end="203:61">(<expr pos:start="203:13" pos:end="203:60"><name pos:start="203:13" pos:end="203:32"><name pos:start="203:13" pos:end="203:15">par</name><operator pos:start="203:16" pos:end="203:17">-&gt;</operator><name pos:start="203:18" pos:end="203:32">chroma_location</name></name> <operator pos:start="203:34" pos:end="203:35">!=</operator> <name pos:start="203:37" pos:end="203:60">AVCHROMA_LOC_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="205:13" pos:end="205:88"><block_content pos:start="205:13" pos:end="205:88">

            <expr_stmt pos:start="205:13" pos:end="205:88"><expr pos:start="205:13" pos:end="205:87"><call pos:start="205:13" pos:end="205:87"><name pos:start="205:13" pos:end="205:21">print_str</name><argument_list pos:start="205:22" pos:end="205:87">(<argument pos:start="205:23" pos:end="205:39"><expr pos:start="205:23" pos:end="205:39"><literal type="string" pos:start="205:23" pos:end="205:39">"chroma_location"</literal></expr></argument>, <argument pos:start="205:42" pos:end="205:86"><expr pos:start="205:42" pos:end="205:86"><call pos:start="205:42" pos:end="205:86"><name pos:start="205:42" pos:end="205:64">av_chroma_location_name</name><argument_list pos:start="205:65" pos:end="205:86">(<argument pos:start="205:66" pos:end="205:85"><expr pos:start="205:66" pos:end="205:85"><name pos:start="205:66" pos:end="205:85"><name pos:start="205:66" pos:end="205:68">par</name><operator pos:start="205:69" pos:end="205:70">-&gt;</operator><name pos:start="205:71" pos:end="205:85">chroma_location</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="207:9" pos:end="214:0">else<block type="pseudo" pos:start="209:13" pos:end="214:0"><block_content pos:start="209:13" pos:end="214:0">

            <expr_stmt pos:start="209:13" pos:end="214:0"><expr pos:start="209:13" pos:end="209:91"><call pos:start="209:13" pos:end="209:91"><name pos:start="209:13" pos:end="209:25">print_str_opt</name><argument_list pos:start="209:26" pos:end="209:91">(<argument pos:start="209:27" pos:end="209:43"><expr pos:start="209:27" pos:end="209:43"><literal type="string" pos:start="209:27" pos:end="209:43">"chroma_location"</literal></expr></argument>, <argument pos:start="209:46" pos:end="209:90"><expr pos:start="209:46" pos:end="209:90"><call pos:start="209:46" pos:end="209:90"><name pos:start="209:46" pos:end="209:68">av_chroma_location_name</name><argument_list pos:start="209:69" pos:end="209:90">(<argument pos:start="209:70" pos:end="209:89"><expr pos:start="209:70" pos:end="209:89"><name pos:start="209:70" pos:end="209:89"><name pos:start="209:70" pos:end="209:72">par</name><operator pos:start="209:73" pos:end="209:74">-&gt;</operator><name pos:start="209:75" pos:end="209:89">chroma_location</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



<cpp:if pos:start="213:1" pos:end="213:22">#<cpp:directive pos:start="213:2" pos:end="213:3">if</cpp:directive> <expr pos:start="213:5" pos:end="213:22"><name pos:start="213:5" pos:end="213:22">FF_API_PRIVATE_OPT</name></expr></cpp:if>

        <if_stmt pos:start="215:9" pos:end="230:0"><if pos:start="215:9" pos:end="223:9">if <condition pos:start="215:12" pos:end="215:58">(<expr pos:start="215:13" pos:end="215:57"><name pos:start="215:13" pos:end="215:19">dec_ctx</name> <operator pos:start="215:21" pos:end="215:22">&amp;&amp;</operator> <name pos:start="215:24" pos:end="215:52"><name pos:start="215:24" pos:end="215:30">dec_ctx</name><operator pos:start="215:31" pos:end="215:32">-&gt;</operator><name pos:start="215:33" pos:end="215:52">timecode_frame_start</name></name> <operator pos:start="215:54" pos:end="215:55">&gt;=</operator> <literal type="number" pos:start="215:57" pos:end="215:57">0</literal></expr>)</condition> <block pos:start="215:60" pos:end="223:9">{<block_content pos:start="217:13" pos:end="221:41">

            <decl_stmt pos:start="217:13" pos:end="217:45"><decl pos:start="217:13" pos:end="217:44"><type pos:start="217:13" pos:end="217:16"><name pos:start="217:13" pos:end="217:16">char</name></type> <name pos:start="217:18" pos:end="217:44"><name pos:start="217:18" pos:end="217:22">tcbuf</name><index pos:start="217:23" pos:end="217:44">[<expr pos:start="217:24" pos:end="217:43"><name pos:start="217:24" pos:end="217:43">AV_TIMECODE_STR_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:82"><expr pos:start="219:13" pos:end="219:81"><call pos:start="219:13" pos:end="219:81"><name pos:start="219:13" pos:end="219:43">av_timecode_make_mpeg_tc_string</name><argument_list pos:start="219:44" pos:end="219:81">(<argument pos:start="219:45" pos:end="219:49"><expr pos:start="219:45" pos:end="219:49"><name pos:start="219:45" pos:end="219:49">tcbuf</name></expr></argument>, <argument pos:start="219:52" pos:end="219:80"><expr pos:start="219:52" pos:end="219:80"><name pos:start="219:52" pos:end="219:80"><name pos:start="219:52" pos:end="219:58">dec_ctx</name><operator pos:start="219:59" pos:end="219:60">-&gt;</operator><name pos:start="219:61" pos:end="219:80">timecode_frame_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:41"><expr pos:start="221:13" pos:end="221:40"><call pos:start="221:13" pos:end="221:40"><name pos:start="221:13" pos:end="221:21">print_str</name><argument_list pos:start="221:22" pos:end="221:40">(<argument pos:start="221:23" pos:end="221:32"><expr pos:start="221:23" pos:end="221:32"><literal type="string" pos:start="221:23" pos:end="221:32">"timecode"</literal></expr></argument>, <argument pos:start="221:35" pos:end="221:39"><expr pos:start="221:35" pos:end="221:39"><name pos:start="221:35" pos:end="221:39">tcbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="223:11" pos:end="230:0">else <block pos:start="223:16" pos:end="230:0">{<block_content pos:start="225:13" pos:end="225:45">

            <expr_stmt pos:start="225:13" pos:end="225:45"><expr pos:start="225:13" pos:end="225:44"><call pos:start="225:13" pos:end="225:44"><name pos:start="225:13" pos:end="225:25">print_str_opt</name><argument_list pos:start="225:26" pos:end="225:44">(<argument pos:start="225:27" pos:end="225:36"><expr pos:start="225:27" pos:end="225:36"><literal type="string" pos:start="225:27" pos:end="225:36">"timecode"</literal></expr></argument>, <argument pos:start="225:39" pos:end="225:43"><expr pos:start="225:39" pos:end="225:43"><literal type="string" pos:start="225:39" pos:end="225:43">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="229:1" pos:end="229:6">#<cpp:directive pos:start="229:2" pos:end="229:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="231:9" pos:end="233:45"><if pos:start="231:9" pos:end="233:45">if <condition pos:start="231:12" pos:end="231:20">(<expr pos:start="231:13" pos:end="231:19"><name pos:start="231:13" pos:end="231:19">dec_ctx</name></expr>)</condition><block type="pseudo" pos:start="233:13" pos:end="233:45"><block_content pos:start="233:13" pos:end="233:45">

            <expr_stmt pos:start="233:13" pos:end="233:45"><expr pos:start="233:13" pos:end="233:44"><call pos:start="233:13" pos:end="233:44"><name pos:start="233:13" pos:end="233:21">print_int</name><argument_list pos:start="233:22" pos:end="233:44">(<argument pos:start="233:23" pos:end="233:28"><expr pos:start="233:23" pos:end="233:28"><literal type="string" pos:start="233:23" pos:end="233:28">"refs"</literal></expr></argument>, <argument pos:start="233:31" pos:end="233:43"><expr pos:start="233:31" pos:end="233:43"><name pos:start="233:31" pos:end="233:43"><name pos:start="233:31" pos:end="233:37">dec_ctx</name><operator pos:start="233:38" pos:end="233:39">-&gt;</operator><name pos:start="233:40" pos:end="233:43">refs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="235:9" pos:end="235:14">break;</break>



    <case pos:start="239:5" pos:end="239:28">case <expr pos:start="239:10" pos:end="239:27"><name pos:start="239:10" pos:end="239:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

        <expr_stmt pos:start="241:9" pos:end="241:48"><expr pos:start="241:9" pos:end="241:47"><name pos:start="241:9" pos:end="241:9">s</name> <operator pos:start="241:11" pos:end="241:11">=</operator> <call pos:start="241:13" pos:end="241:47"><name pos:start="241:13" pos:end="241:34">av_get_sample_fmt_name</name><argument_list pos:start="241:35" pos:end="241:47">(<argument pos:start="241:36" pos:end="241:46"><expr pos:start="241:36" pos:end="241:46"><name pos:start="241:36" pos:end="241:46"><name pos:start="241:36" pos:end="241:38">par</name><operator pos:start="241:39" pos:end="241:40">-&gt;</operator><name pos:start="241:41" pos:end="241:46">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="243:9" pos:end="245:54"><if pos:start="243:9" pos:end="243:46">if <condition pos:start="243:12" pos:end="243:14">(<expr pos:start="243:13" pos:end="243:13"><name pos:start="243:13" pos:end="243:13">s</name></expr>)</condition><block type="pseudo" pos:start="243:16" pos:end="243:46"><block_content pos:start="243:16" pos:end="243:46"> <expr_stmt pos:start="243:16" pos:end="243:46"><expr pos:start="243:16" pos:end="243:45"><call pos:start="243:16" pos:end="243:45"><name pos:start="243:16" pos:end="243:24">print_str</name>    <argument_list pos:start="243:29" pos:end="243:45">(<argument pos:start="243:30" pos:end="243:41"><expr pos:start="243:30" pos:end="243:41"><literal type="string" pos:start="243:30" pos:end="243:41">"sample_fmt"</literal></expr></argument>, <argument pos:start="243:44" pos:end="243:44"><expr pos:start="243:44" pos:end="243:44"><name pos:start="243:44" pos:end="243:44">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="245:9" pos:end="245:54">else<block type="pseudo" pos:start="245:16" pos:end="245:54"><block_content pos:start="245:16" pos:end="245:54">   <expr_stmt pos:start="245:16" pos:end="245:54"><expr pos:start="245:16" pos:end="245:53"><call pos:start="245:16" pos:end="245:53"><name pos:start="245:16" pos:end="245:28">print_str_opt</name><argument_list pos:start="245:29" pos:end="245:53">(<argument pos:start="245:30" pos:end="245:41"><expr pos:start="245:30" pos:end="245:41"><literal type="string" pos:start="245:30" pos:end="245:41">"sample_fmt"</literal></expr></argument>, <argument pos:start="245:44" pos:end="245:52"><expr pos:start="245:44" pos:end="245:52"><literal type="string" pos:start="245:44" pos:end="245:52">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:71"><expr pos:start="247:9" pos:end="247:70"><call pos:start="247:9" pos:end="247:70"><name pos:start="247:9" pos:end="247:17">print_val</name><argument_list pos:start="247:18" pos:end="247:70">(<argument pos:start="247:19" pos:end="247:31"><expr pos:start="247:19" pos:end="247:31"><literal type="string" pos:start="247:19" pos:end="247:31">"sample_rate"</literal></expr></argument>,     <argument pos:start="247:38" pos:end="247:53"><expr pos:start="247:38" pos:end="247:53"><name pos:start="247:38" pos:end="247:53"><name pos:start="247:38" pos:end="247:40">par</name><operator pos:start="247:41" pos:end="247:42">-&gt;</operator><name pos:start="247:43" pos:end="247:53">sample_rate</name></name></expr></argument>, <argument pos:start="247:56" pos:end="247:69"><expr pos:start="247:56" pos:end="247:69"><name pos:start="247:56" pos:end="247:69">unit_hertz_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:52"><expr pos:start="249:9" pos:end="249:51"><call pos:start="249:9" pos:end="249:51"><name pos:start="249:9" pos:end="249:17">print_int</name><argument_list pos:start="249:18" pos:end="249:51">(<argument pos:start="249:19" pos:end="249:28"><expr pos:start="249:19" pos:end="249:28"><literal type="string" pos:start="249:19" pos:end="249:28">"channels"</literal></expr></argument>,        <argument pos:start="249:38" pos:end="249:50"><expr pos:start="249:38" pos:end="249:50"><name pos:start="249:38" pos:end="249:50"><name pos:start="249:38" pos:end="249:40">par</name><operator pos:start="249:41" pos:end="249:42">-&gt;</operator><name pos:start="249:43" pos:end="249:50">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="253:9" pos:end="265:9"><if pos:start="253:9" pos:end="261:9">if <condition pos:start="253:12" pos:end="253:32">(<expr pos:start="253:13" pos:end="253:31"><name pos:start="253:13" pos:end="253:31"><name pos:start="253:13" pos:end="253:15">par</name><operator pos:start="253:16" pos:end="253:17">-&gt;</operator><name pos:start="253:18" pos:end="253:31">channel_layout</name></name></expr>)</condition> <block pos:start="253:34" pos:end="261:9">{<block_content pos:start="255:13" pos:end="259:54">

            <expr_stmt pos:start="255:13" pos:end="255:35"><expr pos:start="255:13" pos:end="255:34"><call pos:start="255:13" pos:end="255:34"><name pos:start="255:13" pos:end="255:27">av_bprint_clear</name><argument_list pos:start="255:28" pos:end="255:34">(<argument pos:start="255:29" pos:end="255:33"><expr pos:start="255:29" pos:end="255:33"><operator pos:start="255:29" pos:end="255:29">&amp;</operator><name pos:start="255:30" pos:end="255:33">pbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:80"><expr pos:start="257:13" pos:end="257:79"><call pos:start="257:13" pos:end="257:79"><name pos:start="257:13" pos:end="257:36">av_bprint_channel_layout</name><argument_list pos:start="257:37" pos:end="257:79">(<argument pos:start="257:38" pos:end="257:42"><expr pos:start="257:38" pos:end="257:42"><operator pos:start="257:38" pos:end="257:38">&amp;</operator><name pos:start="257:39" pos:end="257:42">pbuf</name></expr></argument>, <argument pos:start="257:45" pos:end="257:57"><expr pos:start="257:45" pos:end="257:57"><name pos:start="257:45" pos:end="257:57"><name pos:start="257:45" pos:end="257:47">par</name><operator pos:start="257:48" pos:end="257:49">-&gt;</operator><name pos:start="257:50" pos:end="257:57">channels</name></name></expr></argument>, <argument pos:start="257:60" pos:end="257:78"><expr pos:start="257:60" pos:end="257:78"><name pos:start="257:60" pos:end="257:78"><name pos:start="257:60" pos:end="257:62">par</name><operator pos:start="257:63" pos:end="257:64">-&gt;</operator><name pos:start="257:65" pos:end="257:78">channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="259:13" pos:end="259:54"><expr pos:start="259:13" pos:end="259:53"><call pos:start="259:13" pos:end="259:53"><name pos:start="259:13" pos:end="259:21">print_str</name>    <argument_list pos:start="259:26" pos:end="259:53">(<argument pos:start="259:27" pos:end="259:42"><expr pos:start="259:27" pos:end="259:42"><literal type="string" pos:start="259:27" pos:end="259:42">"channel_layout"</literal></expr></argument>, <argument pos:start="259:45" pos:end="259:52"><expr pos:start="259:45" pos:end="259:52"><name pos:start="259:45" pos:end="259:52"><name pos:start="259:45" pos:end="259:48">pbuf</name><operator pos:start="259:49" pos:end="259:49">.</operator><name pos:start="259:50" pos:end="259:52">str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="261:11" pos:end="265:9">else <block pos:start="261:16" pos:end="265:9">{<block_content pos:start="263:13" pos:end="263:55">

            <expr_stmt pos:start="263:13" pos:end="263:55"><expr pos:start="263:13" pos:end="263:54"><call pos:start="263:13" pos:end="263:54"><name pos:start="263:13" pos:end="263:25">print_str_opt</name><argument_list pos:start="263:26" pos:end="263:54">(<argument pos:start="263:27" pos:end="263:42"><expr pos:start="263:27" pos:end="263:42"><literal type="string" pos:start="263:27" pos:end="263:42">"channel_layout"</literal></expr></argument>, <argument pos:start="263:45" pos:end="263:53"><expr pos:start="263:45" pos:end="263:53"><literal type="string" pos:start="263:45" pos:end="263:53">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="269:9" pos:end="269:76"><expr pos:start="269:9" pos:end="269:75"><call pos:start="269:9" pos:end="269:75"><name pos:start="269:9" pos:end="269:17">print_int</name><argument_list pos:start="269:18" pos:end="269:75">(<argument pos:start="269:19" pos:end="269:35"><expr pos:start="269:19" pos:end="269:35"><literal type="string" pos:start="269:19" pos:end="269:35">"bits_per_sample"</literal></expr></argument>, <argument pos:start="269:38" pos:end="269:74"><expr pos:start="269:38" pos:end="269:74"><call pos:start="269:38" pos:end="269:74"><name pos:start="269:38" pos:end="269:59">av_get_bits_per_sample</name><argument_list pos:start="269:60" pos:end="269:74">(<argument pos:start="269:61" pos:end="269:73"><expr pos:start="269:61" pos:end="269:73"><name pos:start="269:61" pos:end="269:73"><name pos:start="269:61" pos:end="269:63">par</name><operator pos:start="269:64" pos:end="269:65">-&gt;</operator><name pos:start="269:66" pos:end="269:73">codec_id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="271:9" pos:end="271:14">break;</break>



    <case pos:start="275:5" pos:end="275:31">case <expr pos:start="275:10" pos:end="275:30"><name pos:start="275:10" pos:end="275:30">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

        <if_stmt pos:start="277:9" pos:end="283:44"><if pos:start="277:9" pos:end="279:49">if <condition pos:start="277:12" pos:end="277:23">(<expr pos:start="277:13" pos:end="277:22"><name pos:start="277:13" pos:end="277:22"><name pos:start="277:13" pos:end="277:15">par</name><operator pos:start="277:16" pos:end="277:17">-&gt;</operator><name pos:start="277:18" pos:end="277:22">width</name></name></expr>)</condition><block type="pseudo" pos:start="279:13" pos:end="279:49"><block_content pos:start="279:13" pos:end="279:49">

            <expr_stmt pos:start="279:13" pos:end="279:49"><expr pos:start="279:13" pos:end="279:48"><call pos:start="279:13" pos:end="279:48"><name pos:start="279:13" pos:end="279:21">print_int</name><argument_list pos:start="279:22" pos:end="279:48">(<argument pos:start="279:23" pos:end="279:29"><expr pos:start="279:23" pos:end="279:29"><literal type="string" pos:start="279:23" pos:end="279:29">"width"</literal></expr></argument>,       <argument pos:start="279:38" pos:end="279:47"><expr pos:start="279:38" pos:end="279:47"><name pos:start="279:38" pos:end="279:47"><name pos:start="279:38" pos:end="279:40">par</name><operator pos:start="279:41" pos:end="279:42">-&gt;</operator><name pos:start="279:43" pos:end="279:47">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="281:9" pos:end="283:44">else<block type="pseudo" pos:start="283:13" pos:end="283:44"><block_content pos:start="283:13" pos:end="283:44">

            <expr_stmt pos:start="283:13" pos:end="283:44"><expr pos:start="283:13" pos:end="283:43"><call pos:start="283:13" pos:end="283:43"><name pos:start="283:13" pos:end="283:25">print_str_opt</name><argument_list pos:start="283:26" pos:end="283:43">(<argument pos:start="283:27" pos:end="283:33"><expr pos:start="283:27" pos:end="283:33"><literal type="string" pos:start="283:27" pos:end="283:33">"width"</literal></expr></argument>,   <argument pos:start="283:38" pos:end="283:42"><expr pos:start="283:38" pos:end="283:42"><literal type="string" pos:start="283:38" pos:end="283:42">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="285:9" pos:end="291:44"><if pos:start="285:9" pos:end="287:50">if <condition pos:start="285:12" pos:end="285:24">(<expr pos:start="285:13" pos:end="285:23"><name pos:start="285:13" pos:end="285:23"><name pos:start="285:13" pos:end="285:15">par</name><operator pos:start="285:16" pos:end="285:17">-&gt;</operator><name pos:start="285:18" pos:end="285:23">height</name></name></expr>)</condition><block type="pseudo" pos:start="287:13" pos:end="287:50"><block_content pos:start="287:13" pos:end="287:50">

            <expr_stmt pos:start="287:13" pos:end="287:50"><expr pos:start="287:13" pos:end="287:49"><call pos:start="287:13" pos:end="287:49"><name pos:start="287:13" pos:end="287:21">print_int</name><argument_list pos:start="287:22" pos:end="287:49">(<argument pos:start="287:23" pos:end="287:30"><expr pos:start="287:23" pos:end="287:30"><literal type="string" pos:start="287:23" pos:end="287:30">"height"</literal></expr></argument>,      <argument pos:start="287:38" pos:end="287:48"><expr pos:start="287:38" pos:end="287:48"><name pos:start="287:38" pos:end="287:48"><name pos:start="287:38" pos:end="287:40">par</name><operator pos:start="287:41" pos:end="287:42">-&gt;</operator><name pos:start="287:43" pos:end="287:48">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="289:9" pos:end="291:44">else<block type="pseudo" pos:start="291:13" pos:end="291:44"><block_content pos:start="291:13" pos:end="291:44">

            <expr_stmt pos:start="291:13" pos:end="291:44"><expr pos:start="291:13" pos:end="291:43"><call pos:start="291:13" pos:end="291:43"><name pos:start="291:13" pos:end="291:25">print_str_opt</name><argument_list pos:start="291:26" pos:end="291:43">(<argument pos:start="291:27" pos:end="291:34"><expr pos:start="291:27" pos:end="291:34"><literal type="string" pos:start="291:27" pos:end="291:34">"height"</literal></expr></argument>,  <argument pos:start="291:38" pos:end="291:42"><expr pos:start="291:38" pos:end="291:42"><literal type="string" pos:start="291:38" pos:end="291:42">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="293:9" pos:end="293:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="299:5" pos:end="319:5"><if pos:start="299:5" pos:end="319:5">if <condition pos:start="299:8" pos:end="299:85">(<expr pos:start="299:9" pos:end="299:84"><name pos:start="299:9" pos:end="299:15">dec_ctx</name> <operator pos:start="299:17" pos:end="299:18">&amp;&amp;</operator> <name pos:start="299:20" pos:end="299:33"><name pos:start="299:20" pos:end="299:26">dec_ctx</name><operator pos:start="299:27" pos:end="299:28">-&gt;</operator><name pos:start="299:29" pos:end="299:33">codec</name></name> <operator pos:start="299:35" pos:end="299:36">&amp;&amp;</operator> <name pos:start="299:38" pos:end="299:63"><name pos:start="299:38" pos:end="299:44">dec_ctx</name><operator pos:start="299:45" pos:end="299:46">-&gt;</operator><name pos:start="299:47" pos:end="299:51">codec</name><operator pos:start="299:52" pos:end="299:53">-&gt;</operator><name pos:start="299:54" pos:end="299:63">priv_class</name></name> <operator pos:start="299:65" pos:end="299:66">&amp;&amp;</operator> <name pos:start="299:68" pos:end="299:84">show_private_data</name></expr>)</condition> <block pos:start="299:87" pos:end="319:5">{<block_content pos:start="301:9" pos:end="317:9">

        <decl_stmt pos:start="301:9" pos:end="301:35"><decl pos:start="301:9" pos:end="301:34"><type pos:start="301:9" pos:end="301:24"><specifier pos:start="301:9" pos:end="301:13">const</specifier> <name pos:start="301:15" pos:end="301:22">AVOption</name> <modifier pos:start="301:24" pos:end="301:24">*</modifier></type><name pos:start="301:25" pos:end="301:27">opt</name> <init pos:start="301:29" pos:end="301:34">= <expr pos:start="301:31" pos:end="301:34"><name pos:start="301:31" pos:end="301:34">NULL</name></expr></init></decl>;</decl_stmt>

        <while pos:start="303:9" pos:end="317:9">while <condition pos:start="303:15" pos:end="303:57">(<expr pos:start="303:16" pos:end="303:56"><name pos:start="303:16" pos:end="303:18">opt</name> <operator pos:start="303:20" pos:end="303:20">=</operator> <call pos:start="303:22" pos:end="303:56"><name pos:start="303:22" pos:end="303:32">av_opt_next</name><argument_list pos:start="303:33" pos:end="303:56">(<argument pos:start="303:34" pos:end="303:51"><expr pos:start="303:34" pos:end="303:51"><name pos:start="303:34" pos:end="303:51"><name pos:start="303:34" pos:end="303:40">dec_ctx</name><operator pos:start="303:41" pos:end="303:42">-&gt;</operator><name pos:start="303:43" pos:end="303:51">priv_data</name></name></expr></argument>,<argument pos:start="303:53" pos:end="303:55"><expr pos:start="303:53" pos:end="303:55"><name pos:start="303:53" pos:end="303:55">opt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="303:59" pos:end="317:9">{<block_content pos:start="305:13" pos:end="315:13">

            <decl_stmt pos:start="305:13" pos:end="305:25"><decl pos:start="305:13" pos:end="305:24"><type pos:start="305:13" pos:end="305:21"><name pos:start="305:13" pos:end="305:19">uint8_t</name> <modifier pos:start="305:21" pos:end="305:21">*</modifier></type><name pos:start="305:22" pos:end="305:24">str</name></decl>;</decl_stmt>

            <if_stmt pos:start="307:13" pos:end="307:37"><if pos:start="307:13" pos:end="307:37">if <condition pos:start="307:16" pos:end="307:27">(<expr pos:start="307:17" pos:end="307:26"><name pos:start="307:17" pos:end="307:26"><name pos:start="307:17" pos:end="307:19">opt</name><operator pos:start="307:20" pos:end="307:21">-&gt;</operator><name pos:start="307:22" pos:end="307:26">flags</name></name></expr>)</condition><block type="pseudo" pos:start="307:29" pos:end="307:37"><block_content pos:start="307:29" pos:end="307:37"> <continue pos:start="307:29" pos:end="307:37">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="309:13" pos:end="315:13"><if pos:start="309:13" pos:end="315:13">if <condition pos:start="309:16" pos:end="309:72">(<expr pos:start="309:17" pos:end="309:71"><call pos:start="309:17" pos:end="309:66"><name pos:start="309:17" pos:end="309:26">av_opt_get</name><argument_list pos:start="309:27" pos:end="309:66">(<argument pos:start="309:28" pos:end="309:45"><expr pos:start="309:28" pos:end="309:45"><name pos:start="309:28" pos:end="309:45"><name pos:start="309:28" pos:end="309:34">dec_ctx</name><operator pos:start="309:35" pos:end="309:36">-&gt;</operator><name pos:start="309:37" pos:end="309:45">priv_data</name></name></expr></argument>, <argument pos:start="309:48" pos:end="309:56"><expr pos:start="309:48" pos:end="309:56"><name pos:start="309:48" pos:end="309:56"><name pos:start="309:48" pos:end="309:50">opt</name><operator pos:start="309:51" pos:end="309:52">-&gt;</operator><name pos:start="309:53" pos:end="309:56">name</name></name></expr></argument>, <argument pos:start="309:59" pos:end="309:59"><expr pos:start="309:59" pos:end="309:59"><literal type="number" pos:start="309:59" pos:end="309:59">0</literal></expr></argument>, <argument pos:start="309:62" pos:end="309:65"><expr pos:start="309:62" pos:end="309:65"><operator pos:start="309:62" pos:end="309:62">&amp;</operator><name pos:start="309:63" pos:end="309:65">str</name></expr></argument>)</argument_list></call> <operator pos:start="309:68" pos:end="309:69">&gt;=</operator> <literal type="number" pos:start="309:71" pos:end="309:71">0</literal></expr>)</condition> <block pos:start="309:74" pos:end="315:13">{<block_content pos:start="311:17" pos:end="313:29">

                <expr_stmt pos:start="311:17" pos:end="311:42"><expr pos:start="311:17" pos:end="311:41"><call pos:start="311:17" pos:end="311:41"><name pos:start="311:17" pos:end="311:25">print_str</name><argument_list pos:start="311:26" pos:end="311:41">(<argument pos:start="311:27" pos:end="311:35"><expr pos:start="311:27" pos:end="311:35"><name pos:start="311:27" pos:end="311:35"><name pos:start="311:27" pos:end="311:29">opt</name><operator pos:start="311:30" pos:end="311:31">-&gt;</operator><name pos:start="311:32" pos:end="311:35">name</name></name></expr></argument>, <argument pos:start="311:38" pos:end="311:40"><expr pos:start="311:38" pos:end="311:40"><name pos:start="311:38" pos:end="311:40">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="313:17" pos:end="313:29"><expr pos:start="313:17" pos:end="313:28"><call pos:start="313:17" pos:end="313:28"><name pos:start="313:17" pos:end="313:23">av_free</name><argument_list pos:start="313:24" pos:end="313:28">(<argument pos:start="313:25" pos:end="313:27"><expr pos:start="313:25" pos:end="313:27"><name pos:start="313:25" pos:end="313:27">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="323:5" pos:end="325:77"><if pos:start="323:5" pos:end="323:90">if <condition pos:start="323:8" pos:end="323:49">(<expr pos:start="323:9" pos:end="323:48"><name pos:start="323:9" pos:end="323:31"><name pos:start="323:9" pos:end="323:15">fmt_ctx</name><operator pos:start="323:16" pos:end="323:17">-&gt;</operator><name pos:start="323:18" pos:end="323:24">iformat</name><operator pos:start="323:25" pos:end="323:26">-&gt;</operator><name pos:start="323:27" pos:end="323:31">flags</name></name> <operator pos:start="323:33" pos:end="323:33">&amp;</operator> <name pos:start="323:35" pos:end="323:48">AVFMT_SHOW_IDS</name></expr>)</condition><block type="pseudo" pos:start="323:51" pos:end="323:90"><block_content pos:start="323:51" pos:end="323:90"> <expr_stmt pos:start="323:51" pos:end="323:90"><expr pos:start="323:51" pos:end="323:89"><call pos:start="323:51" pos:end="323:89"><name pos:start="323:51" pos:end="323:59">print_fmt</name>    <argument_list pos:start="323:64" pos:end="323:89">(<argument pos:start="323:65" pos:end="323:68"><expr pos:start="323:65" pos:end="323:68"><literal type="string" pos:start="323:65" pos:end="323:68">"id"</literal></expr></argument>, <argument pos:start="323:71" pos:end="323:76"><expr pos:start="323:71" pos:end="323:76"><literal type="string" pos:start="323:71" pos:end="323:76">"0x%x"</literal></expr></argument>, <argument pos:start="323:79" pos:end="323:88"><expr pos:start="323:79" pos:end="323:88"><name pos:start="323:79" pos:end="323:88"><name pos:start="323:79" pos:end="323:84">stream</name><operator pos:start="323:85" pos:end="323:86">-&gt;</operator><name pos:start="323:87" pos:end="323:88">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="325:5" pos:end="325:77">else<block type="pseudo" pos:start="325:51" pos:end="325:77"><block_content pos:start="325:51" pos:end="325:77">                                          <expr_stmt pos:start="325:51" pos:end="325:77"><expr pos:start="325:51" pos:end="325:76"><call pos:start="325:51" pos:end="325:76"><name pos:start="325:51" pos:end="325:63">print_str_opt</name><argument_list pos:start="325:64" pos:end="325:76">(<argument pos:start="325:65" pos:end="325:68"><expr pos:start="325:65" pos:end="325:68"><literal type="string" pos:start="325:65" pos:end="325:68">"id"</literal></expr></argument>, <argument pos:start="325:71" pos:end="325:75"><expr pos:start="325:71" pos:end="325:75"><literal type="string" pos:start="325:71" pos:end="325:75">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="327:5" pos:end="327:59"><expr pos:start="327:5" pos:end="327:58"><call pos:start="327:5" pos:end="327:58"><name pos:start="327:5" pos:end="327:11">print_q</name><argument_list pos:start="327:12" pos:end="327:58">(<argument pos:start="327:13" pos:end="327:26"><expr pos:start="327:13" pos:end="327:26"><literal type="string" pos:start="327:13" pos:end="327:26">"r_frame_rate"</literal></expr></argument>,   <argument pos:start="327:31" pos:end="327:50"><expr pos:start="327:31" pos:end="327:50"><name pos:start="327:31" pos:end="327:50"><name pos:start="327:31" pos:end="327:36">stream</name><operator pos:start="327:37" pos:end="327:38">-&gt;</operator><name pos:start="327:39" pos:end="327:50">r_frame_rate</name></name></expr></argument>,   <argument pos:start="327:55" pos:end="327:57"><expr pos:start="327:55" pos:end="327:57"><literal type="char" pos:start="327:55" pos:end="327:57">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="329:5" pos:end="329:59"><expr pos:start="329:5" pos:end="329:58"><call pos:start="329:5" pos:end="329:58"><name pos:start="329:5" pos:end="329:11">print_q</name><argument_list pos:start="329:12" pos:end="329:58">(<argument pos:start="329:13" pos:end="329:28"><expr pos:start="329:13" pos:end="329:28"><literal type="string" pos:start="329:13" pos:end="329:28">"avg_frame_rate"</literal></expr></argument>, <argument pos:start="329:31" pos:end="329:52"><expr pos:start="329:31" pos:end="329:52"><name pos:start="329:31" pos:end="329:52"><name pos:start="329:31" pos:end="329:36">stream</name><operator pos:start="329:37" pos:end="329:38">-&gt;</operator><name pos:start="329:39" pos:end="329:52">avg_frame_rate</name></name></expr></argument>, <argument pos:start="329:55" pos:end="329:57"><expr pos:start="329:55" pos:end="329:57"><literal type="char" pos:start="329:55" pos:end="329:57">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="331:5" pos:end="331:59"><expr pos:start="331:5" pos:end="331:58"><call pos:start="331:5" pos:end="331:58"><name pos:start="331:5" pos:end="331:11">print_q</name><argument_list pos:start="331:12" pos:end="331:58">(<argument pos:start="331:13" pos:end="331:23"><expr pos:start="331:13" pos:end="331:23"><literal type="string" pos:start="331:13" pos:end="331:23">"time_base"</literal></expr></argument>,      <argument pos:start="331:31" pos:end="331:47"><expr pos:start="331:31" pos:end="331:47"><name pos:start="331:31" pos:end="331:47"><name pos:start="331:31" pos:end="331:36">stream</name><operator pos:start="331:37" pos:end="331:38">-&gt;</operator><name pos:start="331:39" pos:end="331:47">time_base</name></name></expr></argument>,      <argument pos:start="331:55" pos:end="331:57"><expr pos:start="331:55" pos:end="331:57"><literal type="char" pos:start="331:55" pos:end="331:57">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="333:5" pos:end="333:50"><expr pos:start="333:5" pos:end="333:49"><call pos:start="333:5" pos:end="333:49"><name pos:start="333:5" pos:end="333:12">print_ts</name>  <argument_list pos:start="333:15" pos:end="333:49">(<argument pos:start="333:16" pos:end="333:26"><expr pos:start="333:16" pos:end="333:26"><literal type="string" pos:start="333:16" pos:end="333:26">"start_pts"</literal></expr></argument>,   <argument pos:start="333:31" pos:end="333:48"><expr pos:start="333:31" pos:end="333:48"><name pos:start="333:31" pos:end="333:48"><name pos:start="333:31" pos:end="333:36">stream</name><operator pos:start="333:37" pos:end="333:38">-&gt;</operator><name pos:start="333:39" pos:end="333:48">start_time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="335:5" pos:end="335:70"><expr pos:start="335:5" pos:end="335:69"><call pos:start="335:5" pos:end="335:69"><name pos:start="335:5" pos:end="335:14">print_time</name><argument_list pos:start="335:15" pos:end="335:69">(<argument pos:start="335:16" pos:end="335:27"><expr pos:start="335:16" pos:end="335:27"><literal type="string" pos:start="335:16" pos:end="335:27">"start_time"</literal></expr></argument>,  <argument pos:start="335:31" pos:end="335:48"><expr pos:start="335:31" pos:end="335:48"><name pos:start="335:31" pos:end="335:48"><name pos:start="335:31" pos:end="335:36">stream</name><operator pos:start="335:37" pos:end="335:38">-&gt;</operator><name pos:start="335:39" pos:end="335:48">start_time</name></name></expr></argument>, <argument pos:start="335:51" pos:end="335:68"><expr pos:start="335:51" pos:end="335:68"><operator pos:start="335:51" pos:end="335:51">&amp;</operator><name pos:start="335:52" pos:end="335:68"><name pos:start="335:52" pos:end="335:57">stream</name><operator pos:start="335:58" pos:end="335:59">-&gt;</operator><name pos:start="335:60" pos:end="335:68">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="337:5" pos:end="337:48"><expr pos:start="337:5" pos:end="337:47"><call pos:start="337:5" pos:end="337:47"><name pos:start="337:5" pos:end="337:12">print_ts</name>  <argument_list pos:start="337:15" pos:end="337:47">(<argument pos:start="337:16" pos:end="337:28"><expr pos:start="337:16" pos:end="337:28"><literal type="string" pos:start="337:16" pos:end="337:28">"duration_ts"</literal></expr></argument>, <argument pos:start="337:31" pos:end="337:46"><expr pos:start="337:31" pos:end="337:46"><name pos:start="337:31" pos:end="337:46"><name pos:start="337:31" pos:end="337:36">stream</name><operator pos:start="337:37" pos:end="337:38">-&gt;</operator><name pos:start="337:39" pos:end="337:46">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="339:5" pos:end="339:68"><expr pos:start="339:5" pos:end="339:67"><call pos:start="339:5" pos:end="339:67"><name pos:start="339:5" pos:end="339:14">print_time</name><argument_list pos:start="339:15" pos:end="339:67">(<argument pos:start="339:16" pos:end="339:25"><expr pos:start="339:16" pos:end="339:25"><literal type="string" pos:start="339:16" pos:end="339:25">"duration"</literal></expr></argument>,    <argument pos:start="339:31" pos:end="339:46"><expr pos:start="339:31" pos:end="339:46"><name pos:start="339:31" pos:end="339:46"><name pos:start="339:31" pos:end="339:36">stream</name><operator pos:start="339:37" pos:end="339:38">-&gt;</operator><name pos:start="339:39" pos:end="339:46">duration</name></name></expr></argument>, <argument pos:start="339:49" pos:end="339:66"><expr pos:start="339:49" pos:end="339:66"><operator pos:start="339:49" pos:end="339:49">&amp;</operator><name pos:start="339:50" pos:end="339:66"><name pos:start="339:50" pos:end="339:55">stream</name><operator pos:start="339:56" pos:end="339:57">-&gt;</operator><name pos:start="339:58" pos:end="339:66">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="341:5" pos:end="346:0"><if pos:start="341:5" pos:end="341:97">if <condition pos:start="341:8" pos:end="341:26">(<expr pos:start="341:9" pos:end="341:25"><name pos:start="341:9" pos:end="341:21"><name pos:start="341:9" pos:end="341:11">par</name><operator pos:start="341:12" pos:end="341:13">-&gt;</operator><name pos:start="341:14" pos:end="341:21">bit_rate</name></name> <operator pos:start="341:23" pos:end="341:23">&gt;</operator> <literal type="number" pos:start="341:25" pos:end="341:25">0</literal></expr>)</condition><block type="pseudo" pos:start="341:32" pos:end="341:97"><block_content pos:start="341:32" pos:end="341:97">     <expr_stmt pos:start="341:32" pos:end="341:97"><expr pos:start="341:32" pos:end="341:96"><call pos:start="341:32" pos:end="341:96"><name pos:start="341:32" pos:end="341:40">print_val</name>    <argument_list pos:start="341:45" pos:end="341:96">(<argument pos:start="341:46" pos:end="341:55"><expr pos:start="341:46" pos:end="341:55"><literal type="string" pos:start="341:46" pos:end="341:55">"bit_rate"</literal></expr></argument>, <argument pos:start="341:58" pos:end="341:70"><expr pos:start="341:58" pos:end="341:70"><name pos:start="341:58" pos:end="341:70"><name pos:start="341:58" pos:end="341:60">par</name><operator pos:start="341:61" pos:end="341:62">-&gt;</operator><name pos:start="341:63" pos:end="341:70">bit_rate</name></name></expr></argument>, <argument pos:start="341:73" pos:end="341:95"><expr pos:start="341:73" pos:end="341:95"><name pos:start="341:73" pos:end="341:95">unit_bit_per_second_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="343:5" pos:end="346:0">else<block type="pseudo" pos:start="343:32" pos:end="346:0"><block_content pos:start="343:32" pos:end="346:0">                       <expr_stmt pos:start="343:32" pos:end="346:0"><expr pos:start="343:32" pos:end="343:63"><call pos:start="343:32" pos:end="343:63"><name pos:start="343:32" pos:end="343:44">print_str_opt</name><argument_list pos:start="343:45" pos:end="343:63">(<argument pos:start="343:46" pos:end="343:55"><expr pos:start="343:46" pos:end="343:55"><literal type="string" pos:start="343:46" pos:end="343:55">"bit_rate"</literal></expr></argument>, <argument pos:start="343:58" pos:end="343:62"><expr pos:start="343:58" pos:end="343:62"><literal type="string" pos:start="343:58" pos:end="343:62">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:if pos:start="345:1" pos:end="345:21">#<cpp:directive pos:start="345:2" pos:end="345:3">if</cpp:directive> <expr pos:start="345:5" pos:end="345:21"><name pos:start="345:5" pos:end="345:21">FF_API_LAVF_AVCTX</name></expr></cpp:if>

    <if_stmt pos:start="347:5" pos:end="352:0"><if pos:start="347:5" pos:end="347:120">if <condition pos:start="347:8" pos:end="347:39">(<expr pos:start="347:9" pos:end="347:38"><name pos:start="347:9" pos:end="347:34"><name pos:start="347:9" pos:end="347:14">stream</name><operator pos:start="347:15" pos:end="347:16">-&gt;</operator><name pos:start="347:17" pos:end="347:21">codec</name><operator pos:start="347:22" pos:end="347:23">-&gt;</operator><name pos:start="347:24" pos:end="347:34">rc_max_rate</name></name> <operator pos:start="347:36" pos:end="347:36">&gt;</operator> <literal type="number" pos:start="347:38" pos:end="347:38">0</literal></expr>)</condition><block type="pseudo" pos:start="347:41" pos:end="347:120"><block_content pos:start="347:41" pos:end="347:120"> <expr_stmt pos:start="347:41" pos:end="347:120"><expr pos:start="347:41" pos:end="347:119"><call pos:start="347:41" pos:end="347:119"><name pos:start="347:41" pos:end="347:49">print_val</name> <argument_list pos:start="347:51" pos:end="347:119">(<argument pos:start="347:52" pos:end="347:65"><expr pos:start="347:52" pos:end="347:65"><literal type="string" pos:start="347:52" pos:end="347:65">"max_bit_rate"</literal></expr></argument>, <argument pos:start="347:68" pos:end="347:93"><expr pos:start="347:68" pos:end="347:93"><name pos:start="347:68" pos:end="347:93"><name pos:start="347:68" pos:end="347:73">stream</name><operator pos:start="347:74" pos:end="347:75">-&gt;</operator><name pos:start="347:76" pos:end="347:80">codec</name><operator pos:start="347:81" pos:end="347:82">-&gt;</operator><name pos:start="347:83" pos:end="347:93">rc_max_rate</name></name></expr></argument>, <argument pos:start="347:96" pos:end="347:118"><expr pos:start="347:96" pos:end="347:118"><name pos:start="347:96" pos:end="347:118">unit_bit_per_second_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="349:5" pos:end="352:0">else<block type="pseudo" pos:start="349:41" pos:end="352:0"><block_content pos:start="349:41" pos:end="352:0">                                <expr_stmt pos:start="349:41" pos:end="352:0"><expr pos:start="349:41" pos:end="349:76"><call pos:start="349:41" pos:end="349:76"><name pos:start="349:41" pos:end="349:53">print_str_opt</name><argument_list pos:start="349:54" pos:end="349:76">(<argument pos:start="349:55" pos:end="349:68"><expr pos:start="349:55" pos:end="349:68"><literal type="string" pos:start="349:55" pos:end="349:68">"max_bit_rate"</literal></expr></argument>, <argument pos:start="349:71" pos:end="349:75"><expr pos:start="349:71" pos:end="349:75"><literal type="string" pos:start="349:71" pos:end="349:75">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:endif pos:start="351:1" pos:end="351:6">#<cpp:directive pos:start="351:2" pos:end="351:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="353:5" pos:end="355:97"><if pos:start="353:5" pos:end="353:122">if <condition pos:start="353:8" pos:end="353:52">(<expr pos:start="353:9" pos:end="353:51"><name pos:start="353:9" pos:end="353:15">dec_ctx</name> <operator pos:start="353:17" pos:end="353:18">&amp;&amp;</operator> <name pos:start="353:20" pos:end="353:47"><name pos:start="353:20" pos:end="353:26">dec_ctx</name><operator pos:start="353:27" pos:end="353:28">-&gt;</operator><name pos:start="353:29" pos:end="353:47">bits_per_raw_sample</name></name> <operator pos:start="353:49" pos:end="353:49">&gt;</operator> <literal type="number" pos:start="353:51" pos:end="353:51">0</literal></expr>)</condition><block type="pseudo" pos:start="353:54" pos:end="353:122"><block_content pos:start="353:54" pos:end="353:122"> <expr_stmt pos:start="353:54" pos:end="353:122"><expr pos:start="353:54" pos:end="353:121"><call pos:start="353:54" pos:end="353:121"><name pos:start="353:54" pos:end="353:62">print_fmt</name><argument_list pos:start="353:63" pos:end="353:121">(<argument pos:start="353:64" pos:end="353:84"><expr pos:start="353:64" pos:end="353:84"><literal type="string" pos:start="353:64" pos:end="353:84">"bits_per_raw_sample"</literal></expr></argument>, <argument pos:start="353:87" pos:end="353:90"><expr pos:start="353:87" pos:end="353:90"><literal type="string" pos:start="353:87" pos:end="353:90">"%d"</literal></expr></argument>, <argument pos:start="353:93" pos:end="353:120"><expr pos:start="353:93" pos:end="353:120"><name pos:start="353:93" pos:end="353:120"><name pos:start="353:93" pos:end="353:99">dec_ctx</name><operator pos:start="353:100" pos:end="353:101">-&gt;</operator><name pos:start="353:102" pos:end="353:120">bits_per_raw_sample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="355:5" pos:end="355:97">else<block type="pseudo" pos:start="355:54" pos:end="355:97"><block_content pos:start="355:54" pos:end="355:97">                                             <expr_stmt pos:start="355:54" pos:end="355:97"><expr pos:start="355:54" pos:end="355:96"><call pos:start="355:54" pos:end="355:96"><name pos:start="355:54" pos:end="355:66">print_str_opt</name><argument_list pos:start="355:67" pos:end="355:96">(<argument pos:start="355:68" pos:end="355:88"><expr pos:start="355:68" pos:end="355:88"><literal type="string" pos:start="355:68" pos:end="355:88">"bits_per_raw_sample"</literal></expr></argument>, <argument pos:start="355:91" pos:end="355:95"><expr pos:start="355:91" pos:end="355:95"><literal type="string" pos:start="355:91" pos:end="355:95">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="357:5" pos:end="359:61"><if pos:start="357:5" pos:end="357:84">if <condition pos:start="357:8" pos:end="357:26">(<expr pos:start="357:9" pos:end="357:25"><name pos:start="357:9" pos:end="357:25"><name pos:start="357:9" pos:end="357:14">stream</name><operator pos:start="357:15" pos:end="357:16">-&gt;</operator><name pos:start="357:17" pos:end="357:25">nb_frames</name></name></expr>)</condition><block type="pseudo" pos:start="357:28" pos:end="357:84"><block_content pos:start="357:28" pos:end="357:84"> <expr_stmt pos:start="357:28" pos:end="357:84"><expr pos:start="357:28" pos:end="357:83"><call pos:start="357:28" pos:end="357:83"><name pos:start="357:28" pos:end="357:36">print_fmt</name>    <argument_list pos:start="357:41" pos:end="357:83">(<argument pos:start="357:42" pos:end="357:52"><expr pos:start="357:42" pos:end="357:52"><literal type="string" pos:start="357:42" pos:end="357:52">"nb_frames"</literal></expr></argument>, <argument pos:start="357:55" pos:end="357:63"><expr pos:start="357:55" pos:end="357:63"><literal type="string" pos:start="357:55" pos:end="357:57">"%"</literal><name pos:start="357:58" pos:end="357:63">PRId64</name></expr></argument>, <argument pos:start="357:66" pos:end="357:82"><expr pos:start="357:66" pos:end="357:82"><name pos:start="357:66" pos:end="357:82"><name pos:start="357:66" pos:end="357:71">stream</name><operator pos:start="357:72" pos:end="357:73">-&gt;</operator><name pos:start="357:74" pos:end="357:82">nb_frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="359:5" pos:end="359:61">else<block type="pseudo" pos:start="359:28" pos:end="359:61"><block_content pos:start="359:28" pos:end="359:61">                   <expr_stmt pos:start="359:28" pos:end="359:61"><expr pos:start="359:28" pos:end="359:60"><call pos:start="359:28" pos:end="359:60"><name pos:start="359:28" pos:end="359:40">print_str_opt</name><argument_list pos:start="359:41" pos:end="359:60">(<argument pos:start="359:42" pos:end="359:52"><expr pos:start="359:42" pos:end="359:52"><literal type="string" pos:start="359:42" pos:end="359:52">"nb_frames"</literal></expr></argument>, <argument pos:start="359:55" pos:end="359:59"><expr pos:start="359:55" pos:end="359:59"><literal type="string" pos:start="359:55" pos:end="359:59">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="361:5" pos:end="363:79"><if pos:start="361:5" pos:end="361:114">if <condition pos:start="361:8" pos:end="361:38">(<expr pos:start="361:9" pos:end="361:37"><name pos:start="361:9" pos:end="361:37"><name pos:start="361:9" pos:end="361:25">nb_streams_frames</name><index pos:start="361:26" pos:end="361:37">[<expr pos:start="361:27" pos:end="361:36"><name pos:start="361:27" pos:end="361:36">stream_idx</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="361:41" pos:end="361:114"><block_content pos:start="361:41" pos:end="361:114">  <expr_stmt pos:start="361:41" pos:end="361:114"><expr pos:start="361:41" pos:end="361:113"><call pos:start="361:41" pos:end="361:113"><name pos:start="361:41" pos:end="361:49">print_fmt</name>    <argument_list pos:start="361:54" pos:end="361:113">(<argument pos:start="361:55" pos:end="361:70"><expr pos:start="361:55" pos:end="361:70"><literal type="string" pos:start="361:55" pos:end="361:70">"nb_read_frames"</literal></expr></argument>, <argument pos:start="361:73" pos:end="361:81"><expr pos:start="361:73" pos:end="361:81"><literal type="string" pos:start="361:73" pos:end="361:75">"%"</literal><name pos:start="361:76" pos:end="361:81">PRIu64</name></expr></argument>, <argument pos:start="361:84" pos:end="361:112"><expr pos:start="361:84" pos:end="361:112"><name pos:start="361:84" pos:end="361:112"><name pos:start="361:84" pos:end="361:100">nb_streams_frames</name><index pos:start="361:101" pos:end="361:112">[<expr pos:start="361:102" pos:end="361:111"><name pos:start="361:102" pos:end="361:111">stream_idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="363:5" pos:end="363:79">else<block type="pseudo" pos:start="363:41" pos:end="363:79"><block_content pos:start="363:41" pos:end="363:79">                                <expr_stmt pos:start="363:41" pos:end="363:79"><expr pos:start="363:41" pos:end="363:78"><call pos:start="363:41" pos:end="363:78"><name pos:start="363:41" pos:end="363:53">print_str_opt</name><argument_list pos:start="363:54" pos:end="363:78">(<argument pos:start="363:55" pos:end="363:70"><expr pos:start="363:55" pos:end="363:70"><literal type="string" pos:start="363:55" pos:end="363:70">"nb_read_frames"</literal></expr></argument>, <argument pos:start="363:73" pos:end="363:77"><expr pos:start="363:73" pos:end="363:77"><literal type="string" pos:start="363:73" pos:end="363:77">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="365:5" pos:end="367:80"><if pos:start="365:5" pos:end="365:116">if <condition pos:start="365:8" pos:end="365:39">(<expr pos:start="365:9" pos:end="365:38"><name pos:start="365:9" pos:end="365:38"><name pos:start="365:9" pos:end="365:26">nb_streams_packets</name><index pos:start="365:27" pos:end="365:38">[<expr pos:start="365:28" pos:end="365:37"><name pos:start="365:28" pos:end="365:37">stream_idx</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="365:41" pos:end="365:116"><block_content pos:start="365:41" pos:end="365:116"> <expr_stmt pos:start="365:41" pos:end="365:116"><expr pos:start="365:41" pos:end="365:115"><call pos:start="365:41" pos:end="365:115"><name pos:start="365:41" pos:end="365:49">print_fmt</name>    <argument_list pos:start="365:54" pos:end="365:115">(<argument pos:start="365:55" pos:end="365:71"><expr pos:start="365:55" pos:end="365:71"><literal type="string" pos:start="365:55" pos:end="365:71">"nb_read_packets"</literal></expr></argument>, <argument pos:start="365:74" pos:end="365:82"><expr pos:start="365:74" pos:end="365:82"><literal type="string" pos:start="365:74" pos:end="365:76">"%"</literal><name pos:start="365:77" pos:end="365:82">PRIu64</name></expr></argument>, <argument pos:start="365:85" pos:end="365:114"><expr pos:start="365:85" pos:end="365:114"><name pos:start="365:85" pos:end="365:114"><name pos:start="365:85" pos:end="365:102">nb_streams_packets</name><index pos:start="365:103" pos:end="365:114">[<expr pos:start="365:104" pos:end="365:113"><name pos:start="365:104" pos:end="365:113">stream_idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="367:5" pos:end="367:80">else<block type="pseudo" pos:start="367:41" pos:end="367:80"><block_content pos:start="367:41" pos:end="367:80">                                <expr_stmt pos:start="367:41" pos:end="367:80"><expr pos:start="367:41" pos:end="367:79"><call pos:start="367:41" pos:end="367:79"><name pos:start="367:41" pos:end="367:53">print_str_opt</name><argument_list pos:start="367:54" pos:end="367:79">(<argument pos:start="367:55" pos:end="367:71"><expr pos:start="367:55" pos:end="367:71"><literal type="string" pos:start="367:55" pos:end="367:71">"nb_read_packets"</literal></expr></argument>, <argument pos:start="367:74" pos:end="367:78"><expr pos:start="367:74" pos:end="367:78"><literal type="string" pos:start="367:74" pos:end="367:78">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="369:5" pos:end="373:63"><if pos:start="369:5" pos:end="373:63">if <condition pos:start="369:8" pos:end="369:21">(<expr pos:start="369:9" pos:end="369:20"><name pos:start="369:9" pos:end="369:20">do_show_data</name></expr>)</condition><block type="pseudo" pos:start="371:9" pos:end="373:63"><block_content pos:start="371:9" pos:end="373:63">

        <expr_stmt pos:start="371:9" pos:end="373:63"><expr pos:start="371:9" pos:end="373:62"><call pos:start="371:9" pos:end="373:62"><name pos:start="371:9" pos:end="371:25">writer_print_data</name><argument_list pos:start="371:26" pos:end="373:62">(<argument pos:start="371:27" pos:end="371:27"><expr pos:start="371:27" pos:end="371:27"><name pos:start="371:27" pos:end="371:27">w</name></expr></argument>, <argument pos:start="371:30" pos:end="371:40"><expr pos:start="371:30" pos:end="371:40"><literal type="string" pos:start="371:30" pos:end="371:40">"extradata"</literal></expr></argument>, <argument pos:start="371:43" pos:end="371:56"><expr pos:start="371:43" pos:end="371:56"><name pos:start="371:43" pos:end="371:56"><name pos:start="371:43" pos:end="371:45">par</name><operator pos:start="371:46" pos:end="371:47">-&gt;</operator><name pos:start="371:48" pos:end="371:56">extradata</name></name></expr></argument>,

                                          <argument pos:start="373:43" pos:end="373:61"><expr pos:start="373:43" pos:end="373:61"><name pos:start="373:43" pos:end="373:61"><name pos:start="373:43" pos:end="373:45">par</name><operator pos:start="373:46" pos:end="373:47">-&gt;</operator><name pos:start="373:48" pos:end="373:61">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="375:5" pos:end="388:0"><expr pos:start="375:5" pos:end="377:68"><call pos:start="375:5" pos:end="377:68"><name pos:start="375:5" pos:end="375:26">writer_print_data_hash</name><argument_list pos:start="375:27" pos:end="377:68">(<argument pos:start="375:28" pos:end="375:28"><expr pos:start="375:28" pos:end="375:28"><name pos:start="375:28" pos:end="375:28">w</name></expr></argument>, <argument pos:start="375:31" pos:end="375:46"><expr pos:start="375:31" pos:end="375:46"><literal type="string" pos:start="375:31" pos:end="375:46">"extradata_hash"</literal></expr></argument>, <argument pos:start="375:49" pos:end="375:62"><expr pos:start="375:49" pos:end="375:62"><name pos:start="375:49" pos:end="375:62"><name pos:start="375:49" pos:end="375:51">par</name><operator pos:start="375:52" pos:end="375:53">-&gt;</operator><name pos:start="375:54" pos:end="375:62">extradata</name></name></expr></argument>,

                                                <argument pos:start="377:49" pos:end="377:67"><expr pos:start="377:49" pos:end="377:67"><name pos:start="377:49" pos:end="377:67"><name pos:start="377:49" pos:end="377:51">par</name><operator pos:start="377:52" pos:end="377:53">-&gt;</operator><name pos:start="377:54" pos:end="377:67">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="381:5" pos:end="381:39">/* Print disposition information */</comment>

<cpp:define pos:start="383:1" pos:end="387:15">#<cpp:directive pos:start="383:2" pos:end="383:7">define</cpp:directive> <cpp:macro pos:start="383:9" pos:end="383:41"><name pos:start="383:9" pos:end="383:25">PRINT_DISPOSITION</name><parameter_list pos:start="383:26" pos:end="383:41">(<parameter pos:start="383:27" pos:end="383:34"><type pos:start="383:27" pos:end="383:34"><name pos:start="383:27" pos:end="383:34">flagname</name></type></parameter>, <parameter pos:start="383:37" pos:end="383:40"><type pos:start="383:37" pos:end="383:40"><name pos:start="383:37" pos:end="383:40">name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="383:43" pos:end="387:15">do {                                \

        print_int(name, !!(stream-&gt;disposition &amp; AV_DISPOSITION_##flagname)); \

    } while (0)</cpp:value></cpp:define>



    <if_stmt pos:start="391:5" pos:end="419:5"><if pos:start="391:5" pos:end="419:5">if <condition pos:start="391:8" pos:end="391:35">(<expr pos:start="391:9" pos:end="391:34"><name pos:start="391:9" pos:end="391:34">do_show_stream_disposition</name></expr>)</condition> <block pos:start="391:37" pos:end="419:5">{<block_content pos:start="393:5" pos:end="417:35">

    <expr_stmt pos:start="393:5" pos:end="393:119"><expr pos:start="393:5" pos:end="393:118"><call pos:start="393:5" pos:end="393:118"><name pos:start="393:5" pos:end="393:31">writer_print_section_header</name><argument_list pos:start="393:32" pos:end="393:118">(<argument pos:start="393:33" pos:end="393:33"><expr pos:start="393:33" pos:end="393:33"><name pos:start="393:33" pos:end="393:33">w</name></expr></argument>, <argument pos:start="393:36" pos:end="393:117"><expr pos:start="393:36" pos:end="393:117"><ternary pos:start="393:36" pos:end="393:117"><condition pos:start="393:36" pos:end="393:47"><expr pos:start="393:36" pos:end="393:45"><name pos:start="393:36" pos:end="393:45">in_program</name></expr> ?</condition><then pos:start="393:49" pos:end="393:85"> <expr pos:start="393:49" pos:end="393:85"><name pos:start="393:49" pos:end="393:85">SECTION_ID_PROGRAM_STREAM_DISPOSITION</name></expr> </then><else pos:start="393:87" pos:end="393:117">: <expr pos:start="393:89" pos:end="393:117"><name pos:start="393:89" pos:end="393:117">SECTION_ID_STREAM_DISPOSITION</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="395:5" pos:end="395:51"><expr pos:start="395:5" pos:end="395:50"><call pos:start="395:5" pos:end="395:50"><name pos:start="395:5" pos:end="395:21">PRINT_DISPOSITION</name><argument_list pos:start="395:22" pos:end="395:50">(<argument pos:start="395:23" pos:end="395:29"><expr pos:start="395:23" pos:end="395:29"><name pos:start="395:23" pos:end="395:29">DEFAULT</name></expr></argument>,          <argument pos:start="395:41" pos:end="395:49"><expr pos:start="395:41" pos:end="395:49"><literal type="string" pos:start="395:41" pos:end="395:49">"default"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="397:5" pos:end="397:47"><expr pos:start="397:5" pos:end="397:46"><call pos:start="397:5" pos:end="397:46"><name pos:start="397:5" pos:end="397:21">PRINT_DISPOSITION</name><argument_list pos:start="397:22" pos:end="397:46">(<argument pos:start="397:23" pos:end="397:25"><expr pos:start="397:23" pos:end="397:25"><name pos:start="397:23" pos:end="397:25">DUB</name></expr></argument>,              <argument pos:start="397:41" pos:end="397:45"><expr pos:start="397:41" pos:end="397:45"><literal type="string" pos:start="397:41" pos:end="397:45">"dub"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="399:5" pos:end="399:52"><expr pos:start="399:5" pos:end="399:51"><call pos:start="399:5" pos:end="399:51"><name pos:start="399:5" pos:end="399:21">PRINT_DISPOSITION</name><argument_list pos:start="399:22" pos:end="399:51">(<argument pos:start="399:23" pos:end="399:30"><expr pos:start="399:23" pos:end="399:30"><name pos:start="399:23" pos:end="399:30">ORIGINAL</name></expr></argument>,         <argument pos:start="399:41" pos:end="399:50"><expr pos:start="399:41" pos:end="399:50"><literal type="string" pos:start="399:41" pos:end="399:50">"original"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="401:5" pos:end="401:51"><expr pos:start="401:5" pos:end="401:50"><call pos:start="401:5" pos:end="401:50"><name pos:start="401:5" pos:end="401:21">PRINT_DISPOSITION</name><argument_list pos:start="401:22" pos:end="401:50">(<argument pos:start="401:23" pos:end="401:29"><expr pos:start="401:23" pos:end="401:29"><name pos:start="401:23" pos:end="401:29">COMMENT</name></expr></argument>,          <argument pos:start="401:41" pos:end="401:49"><expr pos:start="401:41" pos:end="401:49"><literal type="string" pos:start="401:41" pos:end="401:49">"comment"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="403:5" pos:end="403:50"><expr pos:start="403:5" pos:end="403:49"><call pos:start="403:5" pos:end="403:49"><name pos:start="403:5" pos:end="403:21">PRINT_DISPOSITION</name><argument_list pos:start="403:22" pos:end="403:49">(<argument pos:start="403:23" pos:end="403:28"><expr pos:start="403:23" pos:end="403:28"><name pos:start="403:23" pos:end="403:28">LYRICS</name></expr></argument>,           <argument pos:start="403:41" pos:end="403:48"><expr pos:start="403:41" pos:end="403:48"><literal type="string" pos:start="403:41" pos:end="403:48">"lyrics"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="405:5" pos:end="405:51"><expr pos:start="405:5" pos:end="405:50"><call pos:start="405:5" pos:end="405:50"><name pos:start="405:5" pos:end="405:21">PRINT_DISPOSITION</name><argument_list pos:start="405:22" pos:end="405:50">(<argument pos:start="405:23" pos:end="405:29"><expr pos:start="405:23" pos:end="405:29"><name pos:start="405:23" pos:end="405:29">KARAOKE</name></expr></argument>,          <argument pos:start="405:41" pos:end="405:49"><expr pos:start="405:41" pos:end="405:49"><literal type="string" pos:start="405:41" pos:end="405:49">"karaoke"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="407:5" pos:end="407:50"><expr pos:start="407:5" pos:end="407:49"><call pos:start="407:5" pos:end="407:49"><name pos:start="407:5" pos:end="407:21">PRINT_DISPOSITION</name><argument_list pos:start="407:22" pos:end="407:49">(<argument pos:start="407:23" pos:end="407:28"><expr pos:start="407:23" pos:end="407:28"><name pos:start="407:23" pos:end="407:28">FORCED</name></expr></argument>,           <argument pos:start="407:41" pos:end="407:48"><expr pos:start="407:41" pos:end="407:48"><literal type="string" pos:start="407:41" pos:end="407:48">"forced"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="409:5" pos:end="409:60"><expr pos:start="409:5" pos:end="409:59"><call pos:start="409:5" pos:end="409:59"><name pos:start="409:5" pos:end="409:21">PRINT_DISPOSITION</name><argument_list pos:start="409:22" pos:end="409:59">(<argument pos:start="409:23" pos:end="409:38"><expr pos:start="409:23" pos:end="409:38"><name pos:start="409:23" pos:end="409:38">HEARING_IMPAIRED</name></expr></argument>, <argument pos:start="409:41" pos:end="409:58"><expr pos:start="409:41" pos:end="409:58"><literal type="string" pos:start="409:41" pos:end="409:58">"hearing_impaired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="411:5" pos:end="411:59"><expr pos:start="411:5" pos:end="411:58"><call pos:start="411:5" pos:end="411:58"><name pos:start="411:5" pos:end="411:21">PRINT_DISPOSITION</name><argument_list pos:start="411:22" pos:end="411:58">(<argument pos:start="411:23" pos:end="411:37"><expr pos:start="411:23" pos:end="411:37"><name pos:start="411:23" pos:end="411:37">VISUAL_IMPAIRED</name></expr></argument>,  <argument pos:start="411:41" pos:end="411:57"><expr pos:start="411:41" pos:end="411:57"><literal type="string" pos:start="411:41" pos:end="411:57">"visual_impaired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="413:5" pos:end="413:57"><expr pos:start="413:5" pos:end="413:56"><call pos:start="413:5" pos:end="413:56"><name pos:start="413:5" pos:end="413:21">PRINT_DISPOSITION</name><argument_list pos:start="413:22" pos:end="413:56">(<argument pos:start="413:23" pos:end="413:35"><expr pos:start="413:23" pos:end="413:35"><name pos:start="413:23" pos:end="413:35">CLEAN_EFFECTS</name></expr></argument>,    <argument pos:start="413:41" pos:end="413:55"><expr pos:start="413:41" pos:end="413:55"><literal type="string" pos:start="413:41" pos:end="413:55">"clean_effects"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="415:5" pos:end="415:56"><expr pos:start="415:5" pos:end="415:55"><call pos:start="415:5" pos:end="415:55"><name pos:start="415:5" pos:end="415:21">PRINT_DISPOSITION</name><argument_list pos:start="415:22" pos:end="415:55">(<argument pos:start="415:23" pos:end="415:34"><expr pos:start="415:23" pos:end="415:34"><name pos:start="415:23" pos:end="415:34">ATTACHED_PIC</name></expr></argument>,     <argument pos:start="415:41" pos:end="415:54"><expr pos:start="415:41" pos:end="415:54"><literal type="string" pos:start="415:41" pos:end="415:54">"attached_pic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="417:5" pos:end="417:35"><expr pos:start="417:5" pos:end="417:34"><call pos:start="417:5" pos:end="417:34"><name pos:start="417:5" pos:end="417:31">writer_print_section_footer</name><argument_list pos:start="417:32" pos:end="417:34">(<argument pos:start="417:33" pos:end="417:33"><expr pos:start="417:33" pos:end="417:33"><name pos:start="417:33" pos:end="417:33">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="423:5" pos:end="425:115"><if pos:start="423:5" pos:end="425:115">if <condition pos:start="423:8" pos:end="423:28">(<expr pos:start="423:9" pos:end="423:27"><name pos:start="423:9" pos:end="423:27">do_show_stream_tags</name></expr>)</condition><block type="pseudo" pos:start="425:9" pos:end="425:115"><block_content pos:start="425:9" pos:end="425:115">

        <expr_stmt pos:start="425:9" pos:end="425:115"><expr pos:start="425:9" pos:end="425:114"><name pos:start="425:9" pos:end="425:11">ret</name> <operator pos:start="425:13" pos:end="425:13">=</operator> <call pos:start="425:15" pos:end="425:114"><name pos:start="425:15" pos:end="425:23">show_tags</name><argument_list pos:start="425:24" pos:end="425:114">(<argument pos:start="425:25" pos:end="425:25"><expr pos:start="425:25" pos:end="425:25"><name pos:start="425:25" pos:end="425:25">w</name></expr></argument>, <argument pos:start="425:28" pos:end="425:43"><expr pos:start="425:28" pos:end="425:43"><name pos:start="425:28" pos:end="425:43"><name pos:start="425:28" pos:end="425:33">stream</name><operator pos:start="425:34" pos:end="425:35">-&gt;</operator><name pos:start="425:36" pos:end="425:43">metadata</name></name></expr></argument>, <argument pos:start="425:46" pos:end="425:113"><expr pos:start="425:46" pos:end="425:113"><ternary pos:start="425:46" pos:end="425:113"><condition pos:start="425:46" pos:end="425:57"><expr pos:start="425:46" pos:end="425:55"><name pos:start="425:46" pos:end="425:55">in_program</name></expr> ?</condition><then pos:start="425:59" pos:end="425:88"> <expr pos:start="425:59" pos:end="425:88"><name pos:start="425:59" pos:end="425:88">SECTION_ID_PROGRAM_STREAM_TAGS</name></expr> </then><else pos:start="425:90" pos:end="425:113">: <expr pos:start="425:92" pos:end="425:113"><name pos:start="425:92" pos:end="425:113">SECTION_ID_STREAM_TAGS</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="429:5" pos:end="463:5"><if pos:start="429:5" pos:end="463:5">if <condition pos:start="429:8" pos:end="429:29">(<expr pos:start="429:9" pos:end="429:28"><name pos:start="429:9" pos:end="429:28"><name pos:start="429:9" pos:end="429:14">stream</name><operator pos:start="429:15" pos:end="429:16">-&gt;</operator><name pos:start="429:17" pos:end="429:28">nb_side_data</name></name></expr>)</condition> <block pos:start="429:31" pos:end="463:5">{<block_content pos:start="431:9" pos:end="461:39">

        <decl_stmt pos:start="431:9" pos:end="431:14"><decl pos:start="431:9" pos:end="431:13"><type pos:start="431:9" pos:end="431:11"><name pos:start="431:9" pos:end="431:11">int</name></type> <name pos:start="431:13" pos:end="431:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="433:9" pos:end="433:73"><expr pos:start="433:9" pos:end="433:72"><call pos:start="433:9" pos:end="433:72"><name pos:start="433:9" pos:end="433:35">writer_print_section_header</name><argument_list pos:start="433:36" pos:end="433:72">(<argument pos:start="433:37" pos:end="433:37"><expr pos:start="433:37" pos:end="433:37"><name pos:start="433:37" pos:end="433:37">w</name></expr></argument>, <argument pos:start="433:40" pos:end="433:71"><expr pos:start="433:40" pos:end="433:71"><name pos:start="433:40" pos:end="433:71">SECTION_ID_STREAM_SIDE_DATA_LIST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="435:9" pos:end="459:9">for <control pos:start="435:13" pos:end="435:50">(<init pos:start="435:14" pos:end="435:19"><expr pos:start="435:14" pos:end="435:18"><name pos:start="435:14" pos:end="435:14">i</name> <operator pos:start="435:16" pos:end="435:16">=</operator> <literal type="number" pos:start="435:18" pos:end="435:18">0</literal></expr>;</init> <condition pos:start="435:21" pos:end="435:45"><expr pos:start="435:21" pos:end="435:44"><name pos:start="435:21" pos:end="435:21">i</name> <operator pos:start="435:23" pos:end="435:23">&lt;</operator> <name pos:start="435:25" pos:end="435:44"><name pos:start="435:25" pos:end="435:30">stream</name><operator pos:start="435:31" pos:end="435:32">-&gt;</operator><name pos:start="435:33" pos:end="435:44">nb_side_data</name></name></expr>;</condition> <incr pos:start="435:47" pos:end="435:49"><expr pos:start="435:47" pos:end="435:49"><name pos:start="435:47" pos:end="435:47">i</name><operator pos:start="435:48" pos:end="435:49">++</operator></expr></incr>)</control> <block pos:start="435:52" pos:end="459:9">{<block_content pos:start="437:13" pos:end="457:43">

            <decl_stmt pos:start="437:13" pos:end="437:57"><decl pos:start="437:13" pos:end="437:56"><type pos:start="437:13" pos:end="437:30"><name pos:start="437:13" pos:end="437:28">AVPacketSideData</name> <modifier pos:start="437:30" pos:end="437:30">*</modifier></type><name pos:start="437:31" pos:end="437:32">sd</name> <init pos:start="437:34" pos:end="437:56">= <expr pos:start="437:36" pos:end="437:56"><operator pos:start="437:36" pos:end="437:36">&amp;</operator><name pos:start="437:37" pos:end="437:56"><name pos:start="437:37" pos:end="437:42">stream</name><operator pos:start="437:43" pos:end="437:44">-&gt;</operator><name pos:start="437:45" pos:end="437:53">side_data</name><index pos:start="437:54" pos:end="437:56">[<expr pos:start="437:55" pos:end="437:55"><name pos:start="437:55" pos:end="437:55">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="439:13" pos:end="439:66"><decl pos:start="439:13" pos:end="439:65"><type pos:start="439:13" pos:end="439:24"><specifier pos:start="439:13" pos:end="439:17">const</specifier> <name pos:start="439:19" pos:end="439:22">char</name> <modifier pos:start="439:24" pos:end="439:24">*</modifier></type><name pos:start="439:25" pos:end="439:28">name</name> <init pos:start="439:30" pos:end="439:65">= <expr pos:start="439:32" pos:end="439:65"><call pos:start="439:32" pos:end="439:65"><name pos:start="439:32" pos:end="439:55">av_packet_side_data_name</name><argument_list pos:start="439:56" pos:end="439:65">(<argument pos:start="439:57" pos:end="439:64"><expr pos:start="439:57" pos:end="439:64"><name pos:start="439:57" pos:end="439:64"><name pos:start="439:57" pos:end="439:58">sd</name><operator pos:start="439:59" pos:end="439:60">-&gt;</operator><name pos:start="439:61" pos:end="439:64">type</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="443:13" pos:end="443:72"><expr pos:start="443:13" pos:end="443:71"><call pos:start="443:13" pos:end="443:71"><name pos:start="443:13" pos:end="443:39">writer_print_section_header</name><argument_list pos:start="443:40" pos:end="443:71">(<argument pos:start="443:41" pos:end="443:41"><expr pos:start="443:41" pos:end="443:41"><name pos:start="443:41" pos:end="443:41">w</name></expr></argument>, <argument pos:start="443:44" pos:end="443:70"><expr pos:start="443:44" pos:end="443:70"><name pos:start="443:44" pos:end="443:70">SECTION_ID_STREAM_SIDE_DATA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="445:13" pos:end="445:65"><expr pos:start="445:13" pos:end="445:64"><call pos:start="445:13" pos:end="445:64"><name pos:start="445:13" pos:end="445:21">print_str</name><argument_list pos:start="445:22" pos:end="445:64">(<argument pos:start="445:23" pos:end="445:38"><expr pos:start="445:23" pos:end="445:38"><literal type="string" pos:start="445:23" pos:end="445:38">"side_data_type"</literal></expr></argument>, <argument pos:start="445:41" pos:end="445:63"><expr pos:start="445:41" pos:end="445:63"><ternary pos:start="445:41" pos:end="445:63"><condition pos:start="445:41" pos:end="445:46"><expr pos:start="445:41" pos:end="445:44"><name pos:start="445:41" pos:end="445:44">name</name></expr> ?</condition><then pos:start="445:48" pos:end="445:51"> <expr pos:start="445:48" pos:end="445:51"><name pos:start="445:48" pos:end="445:51">name</name></expr> </then><else pos:start="445:53" pos:end="445:63">: <expr pos:start="445:55" pos:end="445:63"><literal type="string" pos:start="445:55" pos:end="445:63">"unknown"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="447:13" pos:end="447:50"><expr pos:start="447:13" pos:end="447:49"><call pos:start="447:13" pos:end="447:49"><name pos:start="447:13" pos:end="447:21">print_int</name><argument_list pos:start="447:22" pos:end="447:49">(<argument pos:start="447:23" pos:end="447:38"><expr pos:start="447:23" pos:end="447:38"><literal type="string" pos:start="447:23" pos:end="447:38">"side_data_size"</literal></expr></argument>, <argument pos:start="447:41" pos:end="447:48"><expr pos:start="447:41" pos:end="447:48"><name pos:start="447:41" pos:end="447:48"><name pos:start="447:41" pos:end="447:42">sd</name><operator pos:start="447:43" pos:end="447:44">-&gt;</operator><name pos:start="447:45" pos:end="447:48">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="449:13" pos:end="455:13"><if pos:start="449:13" pos:end="455:13">if <condition pos:start="449:16" pos:end="449:73">(<expr pos:start="449:17" pos:end="449:72"><name pos:start="449:17" pos:end="449:24"><name pos:start="449:17" pos:end="449:18">sd</name><operator pos:start="449:19" pos:end="449:20">-&gt;</operator><name pos:start="449:21" pos:end="449:24">type</name></name> <operator pos:start="449:26" pos:end="449:27">==</operator> <name pos:start="449:29" pos:end="449:53">AV_PKT_DATA_DISPLAYMATRIX</name> <operator pos:start="449:55" pos:end="449:56">&amp;&amp;</operator> <name pos:start="449:58" pos:end="449:65"><name pos:start="449:58" pos:end="449:59">sd</name><operator pos:start="449:60" pos:end="449:61">-&gt;</operator><name pos:start="449:62" pos:end="449:65">size</name></name> <operator pos:start="449:67" pos:end="449:68">&gt;=</operator> <literal type="number" pos:start="449:70" pos:end="449:70">9</literal><operator pos:start="449:71" pos:end="449:71">*</operator><literal type="number" pos:start="449:72" pos:end="449:72">4</literal></expr>)</condition> <block pos:start="449:75" pos:end="455:13">{<block_content pos:start="451:17" pos:end="453:84">

                <expr_stmt pos:start="451:17" pos:end="451:89"><expr pos:start="451:17" pos:end="451:88"><call pos:start="451:17" pos:end="451:88"><name pos:start="451:17" pos:end="451:37">writer_print_integers</name><argument_list pos:start="451:38" pos:end="451:88">(<argument pos:start="451:39" pos:end="451:39"><expr pos:start="451:39" pos:end="451:39"><name pos:start="451:39" pos:end="451:39">w</name></expr></argument>, <argument pos:start="451:42" pos:end="451:56"><expr pos:start="451:42" pos:end="451:56"><literal type="string" pos:start="451:42" pos:end="451:56">"displaymatrix"</literal></expr></argument>, <argument pos:start="451:59" pos:end="451:66"><expr pos:start="451:59" pos:end="451:66"><name pos:start="451:59" pos:end="451:66"><name pos:start="451:59" pos:end="451:60">sd</name><operator pos:start="451:61" pos:end="451:62">-&gt;</operator><name pos:start="451:63" pos:end="451:66">data</name></name></expr></argument>, <argument pos:start="451:69" pos:end="451:69"><expr pos:start="451:69" pos:end="451:69"><literal type="number" pos:start="451:69" pos:end="451:69">9</literal></expr></argument>, <argument pos:start="451:72" pos:end="451:78"><expr pos:start="451:72" pos:end="451:78"><literal type="string" pos:start="451:72" pos:end="451:78">" %11d"</literal></expr></argument>, <argument pos:start="451:81" pos:end="451:81"><expr pos:start="451:81" pos:end="451:81"><literal type="number" pos:start="451:81" pos:end="451:81">3</literal></expr></argument>, <argument pos:start="451:84" pos:end="451:84"><expr pos:start="451:84" pos:end="451:84"><literal type="number" pos:start="451:84" pos:end="451:84">4</literal></expr></argument>, <argument pos:start="451:87" pos:end="451:87"><expr pos:start="451:87" pos:end="451:87"><literal type="number" pos:start="451:87" pos:end="451:87">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="453:17" pos:end="453:84"><expr pos:start="453:17" pos:end="453:83"><call pos:start="453:17" pos:end="453:83"><name pos:start="453:17" pos:end="453:25">print_int</name><argument_list pos:start="453:26" pos:end="453:83">(<argument pos:start="453:27" pos:end="453:36"><expr pos:start="453:27" pos:end="453:36"><literal type="string" pos:start="453:27" pos:end="453:36">"rotation"</literal></expr></argument>, <argument pos:start="453:39" pos:end="453:82"><expr pos:start="453:39" pos:end="453:82"><call pos:start="453:39" pos:end="453:82"><name pos:start="453:39" pos:end="453:61">av_display_rotation_get</name><argument_list pos:start="453:62" pos:end="453:82">(<argument pos:start="453:63" pos:end="453:81"><expr pos:start="453:63" pos:end="453:81"><operator pos:start="453:63" pos:end="453:63">(</operator><name pos:start="453:64" pos:end="453:70">int32_t</name> <operator pos:start="453:72" pos:end="453:72">*</operator><operator pos:start="453:73" pos:end="453:73">)</operator><name pos:start="453:74" pos:end="453:81"><name pos:start="453:74" pos:end="453:75">sd</name><operator pos:start="453:76" pos:end="453:77">-&gt;</operator><name pos:start="453:78" pos:end="453:81">data</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="457:13" pos:end="457:43"><expr pos:start="457:13" pos:end="457:42"><call pos:start="457:13" pos:end="457:42"><name pos:start="457:13" pos:end="457:39">writer_print_section_footer</name><argument_list pos:start="457:40" pos:end="457:42">(<argument pos:start="457:41" pos:end="457:41"><expr pos:start="457:41" pos:end="457:41"><name pos:start="457:41" pos:end="457:41">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="461:9" pos:end="461:39"><expr pos:start="461:9" pos:end="461:38"><call pos:start="461:9" pos:end="461:38"><name pos:start="461:9" pos:end="461:35">writer_print_section_footer</name><argument_list pos:start="461:36" pos:end="461:38">(<argument pos:start="461:37" pos:end="461:37"><expr pos:start="461:37" pos:end="461:37"><name pos:start="461:37" pos:end="461:37">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="467:5" pos:end="467:35"><expr pos:start="467:5" pos:end="467:34"><call pos:start="467:5" pos:end="467:34"><name pos:start="467:5" pos:end="467:31">writer_print_section_footer</name><argument_list pos:start="467:32" pos:end="467:34">(<argument pos:start="467:33" pos:end="467:33"><expr pos:start="467:33" pos:end="467:33"><name pos:start="467:33" pos:end="467:33">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="469:5" pos:end="469:36"><expr pos:start="469:5" pos:end="469:35"><call pos:start="469:5" pos:end="469:35"><name pos:start="469:5" pos:end="469:22">av_bprint_finalize</name><argument_list pos:start="469:23" pos:end="469:35">(<argument pos:start="469:24" pos:end="469:28"><expr pos:start="469:24" pos:end="469:28"><operator pos:start="469:24" pos:end="469:24">&amp;</operator><name pos:start="469:25" pos:end="469:28">pbuf</name></expr></argument>, <argument pos:start="469:31" pos:end="469:34"><expr pos:start="469:31" pos:end="469:34"><name pos:start="469:31" pos:end="469:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="471:5" pos:end="471:19"><expr pos:start="471:5" pos:end="471:18"><call pos:start="471:5" pos:end="471:18"><name pos:start="471:5" pos:end="471:10">fflush</name><argument_list pos:start="471:11" pos:end="471:18">(<argument pos:start="471:12" pos:end="471:17"><expr pos:start="471:12" pos:end="471:17"><name pos:start="471:12" pos:end="471:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="475:5" pos:end="475:15">return <expr pos:start="475:12" pos:end="475:14"><name pos:start="475:12" pos:end="475:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
