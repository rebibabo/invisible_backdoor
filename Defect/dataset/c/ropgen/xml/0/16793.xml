<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16793.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">blk_resume_after_migration</name><parameter_list pos:start="1:32" pos:end="1:45">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:40"><name pos:start="1:33" pos:end="1:37">Error</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier><modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BlockBackend</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">blk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:20">local_err</name> <init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="37:5">for <control pos:start="11:9" pos:end="11:64">(<init pos:start="11:10" pos:end="11:34"><expr pos:start="11:10" pos:end="11:33"><name pos:start="11:10" pos:end="11:12">blk</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <call pos:start="11:16" pos:end="11:33"><name pos:start="11:16" pos:end="11:27">blk_all_next</name><argument_list pos:start="11:28" pos:end="11:33">(<argument pos:start="11:29" pos:end="11:32"><expr pos:start="11:29" pos:end="11:32"><name pos:start="11:29" pos:end="11:32">NULL</name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="11:36" pos:end="11:39"><expr pos:start="11:36" pos:end="11:38"><name pos:start="11:36" pos:end="11:38">blk</name></expr>;</condition> <incr pos:start="11:41" pos:end="11:63"><expr pos:start="11:41" pos:end="11:63"><name pos:start="11:41" pos:end="11:43">blk</name> <operator pos:start="11:45" pos:end="11:45">=</operator> <call pos:start="11:47" pos:end="11:63"><name pos:start="11:47" pos:end="11:58">blk_all_next</name><argument_list pos:start="11:59" pos:end="11:63">(<argument pos:start="11:60" pos:end="11:62"><expr pos:start="11:60" pos:end="11:62"><name pos:start="11:60" pos:end="11:62">blk</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="11:66" pos:end="37:5">{<block_content pos:start="13:9" pos:end="35:9">

        <if_stmt pos:start="13:9" pos:end="17:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:31">(<expr pos:start="13:13" pos:end="13:30"><operator pos:start="13:13" pos:end="13:13">!</operator><name pos:start="13:14" pos:end="13:30"><name pos:start="13:14" pos:end="13:16">blk</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:30">disable_perm</name></name></expr>)</condition> <block pos:start="13:33" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:21">

            <continue pos:start="15:13" pos:end="15:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:11">blk</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:25">disable_perm</name></name> <operator pos:start="21:27" pos:end="21:27">=</operator> <name pos:start="21:29" pos:end="21:33">false</name></expr>;</expr_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:67"><expr pos:start="25:9" pos:end="25:66"><call pos:start="25:9" pos:end="25:66"><name pos:start="25:9" pos:end="25:20">blk_set_perm</name><argument_list pos:start="25:21" pos:end="25:66">(<argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:24">blk</name></expr></argument>, <argument pos:start="25:27" pos:end="25:35"><expr pos:start="25:27" pos:end="25:35"><name pos:start="25:27" pos:end="25:35"><name pos:start="25:27" pos:end="25:29">blk</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:35">perm</name></name></expr></argument>, <argument pos:start="25:38" pos:end="25:53"><expr pos:start="25:38" pos:end="25:53"><name pos:start="25:38" pos:end="25:53"><name pos:start="25:38" pos:end="25:40">blk</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:53">shared_perm</name></name></expr></argument>, <argument pos:start="25:56" pos:end="25:65"><expr pos:start="25:56" pos:end="25:65"><operator pos:start="25:56" pos:end="25:56">&amp;</operator><name pos:start="25:57" pos:end="25:65">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="35:9"><if pos:start="27:9" pos:end="35:9">if <condition pos:start="27:12" pos:end="27:22">(<expr pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:21">local_err</name></expr>)</condition> <block pos:start="27:24" pos:end="35:9">{<block_content pos:start="29:13" pos:end="33:19">

            <expr_stmt pos:start="29:13" pos:end="29:45"><expr pos:start="29:13" pos:end="29:44"><call pos:start="29:13" pos:end="29:44"><name pos:start="29:13" pos:end="29:27">error_propagate</name><argument_list pos:start="29:28" pos:end="29:44">(<argument pos:start="29:29" pos:end="29:32"><expr pos:start="29:29" pos:end="29:32"><name pos:start="29:29" pos:end="29:32">errp</name></expr></argument>, <argument pos:start="29:35" pos:end="29:43"><expr pos:start="29:35" pos:end="29:43"><name pos:start="29:35" pos:end="29:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:37"><expr pos:start="31:13" pos:end="31:36"><name pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:15">blk</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:29">disable_perm</name></name> <operator pos:start="31:31" pos:end="31:31">=</operator> <name pos:start="31:33" pos:end="31:36">true</name></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
