<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8879.c" pos:tabs="8"><function pos:start="1:1" pos:end="369:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name> <name pos:start="1:12" pos:end="1:18">CUDAAPI</name></type> <name pos:start="1:20" pos:end="1:46">cuvid_handle_video_sequence</name><parameter_list pos:start="1:47" pos:end="1:83">(<parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:59">opaque</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:82"><decl pos:start="1:62" pos:end="1:82"><type pos:start="1:62" pos:end="1:82"><name pos:start="1:62" pos:end="1:74">CUVIDEOFORMAT</name><modifier pos:start="1:75" pos:end="1:75">*</modifier></type> <name pos:start="1:77" pos:end="1:82">format</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="369:1">{<block_content pos:start="5:5" pos:end="367:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">AVCodecContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">avctx</name> <init pos:start="5:27" pos:end="5:34">= <expr pos:start="5:29" pos:end="5:34"><name pos:start="5:29" pos:end="5:34">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">CuvidContext</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">ctx</name> <init pos:start="7:23" pos:end="7:40">= <expr pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:29">avctx</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:76"><decl pos:start="9:5" pos:end="9:75"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AVHWFramesContext</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:34">hwframe_ctx</name> <init pos:start="9:36" pos:end="9:75">= <expr pos:start="9:38" pos:end="9:75"><operator pos:start="9:38" pos:end="9:38">(</operator><name pos:start="9:39" pos:end="9:55">AVHWFramesContext</name><operator pos:start="9:56" pos:end="9:56">*</operator><operator pos:start="9:57" pos:end="9:57">)</operator><name pos:start="9:58" pos:end="9:75"><name pos:start="9:58" pos:end="9:60">ctx</name><operator pos:start="9:61" pos:end="9:62">-&gt;</operator><name pos:start="9:63" pos:end="9:69">hwframe</name><operator pos:start="9:70" pos:end="9:71">-&gt;</operator><name pos:start="9:72" pos:end="9:75">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:25">CUVIDDECODECREATEINFO</name></type> <name pos:start="11:27" pos:end="11:32">cuinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">surface_fmt</name></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="21:57"><decl pos:start="17:5" pos:end="21:56"><type pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:8">enum</name> <name pos:start="17:10" pos:end="17:22">AVPixelFormat</name></name></type> <name pos:start="17:24" pos:end="17:34"><name pos:start="17:24" pos:end="17:31">pix_fmts</name><index pos:start="17:32" pos:end="17:34">[<expr pos:start="17:33" pos:end="17:33"><literal type="number" pos:start="17:33" pos:end="17:33">3</literal></expr>]</index></name> <init pos:start="17:36" pos:end="21:56">= <expr pos:start="17:38" pos:end="21:56"><block pos:start="17:38" pos:end="21:56">{ <expr pos:start="17:40" pos:end="17:54"><name pos:start="17:40" pos:end="17:54">AV_PIX_FMT_CUDA</name></expr>,

                                       <expr pos:start="19:40" pos:end="19:54"><name pos:start="19:40" pos:end="19:54">AV_PIX_FMT_NONE</name></expr>,  <comment type="line" pos:start="19:58" pos:end="19:81">// Will be updated below</comment>

                                       <expr pos:start="21:40" pos:end="21:54"><name pos:start="21:40" pos:end="21:54">AV_PIX_FMT_NONE</name></expr> }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:112"><expr pos:start="25:5" pos:end="25:111"><call pos:start="25:5" pos:end="25:111"><name pos:start="25:5" pos:end="25:10">av_log</name><argument_list pos:start="25:11" pos:end="25:111">(<argument pos:start="25:12" pos:end="25:16"><expr pos:start="25:12" pos:end="25:16"><name pos:start="25:12" pos:end="25:16">avctx</name></expr></argument>, <argument pos:start="25:19" pos:end="25:30"><expr pos:start="25:19" pos:end="25:30"><name pos:start="25:19" pos:end="25:30">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="25:33" pos:end="25:80"><expr pos:start="25:33" pos:end="25:80"><literal type="string" pos:start="25:33" pos:end="25:80">"pfnSequenceCallback, progressive_sequence=%d\n"</literal></expr></argument>, <argument pos:start="25:83" pos:end="25:110"><expr pos:start="25:83" pos:end="25:110"><name pos:start="25:83" pos:end="25:110"><name pos:start="25:83" pos:end="25:88">format</name><operator pos:start="25:89" pos:end="25:90">-&gt;</operator><name pos:start="25:91" pos:end="25:110">progressive_sequence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:7">ctx</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:23">internal_error</name></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <literal type="number" pos:start="29:27" pos:end="29:27">0</literal></expr>;</expr_stmt>



    <switch pos:start="33:5" pos:end="63:5">switch <condition pos:start="33:12" pos:end="33:42">(<expr pos:start="33:13" pos:end="33:41"><name pos:start="33:13" pos:end="33:41"><name pos:start="33:13" pos:end="33:18">format</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:41">bit_depth_luma_minus8</name></name></expr>)</condition> <block pos:start="33:44" pos:end="63:5">{<block_content pos:start="35:5" pos:end="61:17">

    <case pos:start="35:5" pos:end="35:11">case <expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">0</literal></expr>:</case> <comment type="line" pos:start="35:13" pos:end="35:20">// 8-bit</comment>

        <expr_stmt pos:start="37:9" pos:end="37:38"><expr pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:16">pix_fmts</name><index pos:start="37:17" pos:end="37:19">[<expr pos:start="37:18" pos:end="37:18"><literal type="number" pos:start="37:18" pos:end="37:18">1</literal></expr>]</index></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:37">AV_PIX_FMT_NV12</name></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:11">case <expr pos:start="41:10" pos:end="41:10"><literal type="number" pos:start="41:10" pos:end="41:10">2</literal></expr>:</case> <comment type="line" pos:start="41:13" pos:end="41:21">// 10-bit</comment>

        <expr_stmt pos:start="43:9" pos:end="43:38"><expr pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:16">pix_fmts</name><index pos:start="43:17" pos:end="43:19">[<expr pos:start="43:18" pos:end="43:18"><literal type="number" pos:start="43:18" pos:end="43:18">1</literal></expr>]</index></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:37">AV_PIX_FMT_P010</name></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">4</literal></expr>:</case> <comment type="line" pos:start="47:13" pos:end="47:21">// 12-bit</comment>

        <expr_stmt pos:start="49:9" pos:end="49:38"><expr pos:start="49:9" pos:end="49:37"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:16">pix_fmts</name><index pos:start="49:17" pos:end="49:19">[<expr pos:start="49:18" pos:end="49:18"><literal type="number" pos:start="49:18" pos:end="49:18">1</literal></expr>]</index></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:37">AV_PIX_FMT_P016</name></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <default pos:start="53:5" pos:end="53:12">default:</default>

        <expr_stmt pos:start="55:9" pos:end="57:50"><expr pos:start="55:9" pos:end="57:49"><call pos:start="55:9" pos:end="57:49"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="57:49">(<argument pos:start="55:16" pos:end="55:20"><expr pos:start="55:16" pos:end="55:20"><name pos:start="55:16" pos:end="55:20">avctx</name></expr></argument>, <argument pos:start="55:23" pos:end="55:34"><expr pos:start="55:23" pos:end="55:34"><name pos:start="55:23" pos:end="55:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:37" pos:end="55:65"><expr pos:start="55:37" pos:end="55:65"><literal type="string" pos:start="55:37" pos:end="55:65">"unsupported bit depth: %d\n"</literal></expr></argument>,

               <argument pos:start="57:16" pos:end="57:48"><expr pos:start="57:16" pos:end="57:48"><name pos:start="57:16" pos:end="57:44"><name pos:start="57:16" pos:end="57:21">format</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:44">bit_depth_luma_minus8</name></name> <operator pos:start="57:46" pos:end="57:46">+</operator> <literal type="number" pos:start="57:48" pos:end="57:48">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:46"><expr pos:start="59:9" pos:end="59:45"><name pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:11">ctx</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:27">internal_error</name></name> <operator pos:start="59:29" pos:end="59:29">=</operator> <call pos:start="59:31" pos:end="59:45"><name pos:start="59:31" pos:end="59:37">AVERROR</name><argument_list pos:start="59:38" pos:end="59:45">(<argument pos:start="59:39" pos:end="59:44"><expr pos:start="59:39" pos:end="59:44"><name pos:start="59:39" pos:end="59:44">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:17">return <expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="65:5" pos:end="65:49"><expr pos:start="65:5" pos:end="65:48"><name pos:start="65:5" pos:end="65:15">surface_fmt</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <call pos:start="65:19" pos:end="65:48"><name pos:start="65:19" pos:end="65:31">ff_get_format</name><argument_list pos:start="65:32" pos:end="65:48">(<argument pos:start="65:33" pos:end="65:37"><expr pos:start="65:33" pos:end="65:37"><name pos:start="65:33" pos:end="65:37">avctx</name></expr></argument>, <argument pos:start="65:40" pos:end="65:47"><expr pos:start="65:40" pos:end="65:47"><name pos:start="65:40" pos:end="65:47">pix_fmts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="75:5"><if pos:start="67:5" pos:end="75:5">if <condition pos:start="67:8" pos:end="67:24">(<expr pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:19">surface_fmt</name> <operator pos:start="67:21" pos:end="67:21">&lt;</operator> <literal type="number" pos:start="67:23" pos:end="67:23">0</literal></expr>)</condition> <block pos:start="67:26" pos:end="75:5">{<block_content pos:start="69:9" pos:end="73:17">

        <expr_stmt pos:start="69:9" pos:end="69:79"><expr pos:start="69:9" pos:end="69:78"><call pos:start="69:9" pos:end="69:78"><name pos:start="69:9" pos:end="69:14">av_log</name><argument_list pos:start="69:15" pos:end="69:78">(<argument pos:start="69:16" pos:end="69:20"><expr pos:start="69:16" pos:end="69:20"><name pos:start="69:16" pos:end="69:20">avctx</name></expr></argument>, <argument pos:start="69:23" pos:end="69:34"><expr pos:start="69:23" pos:end="69:34"><name pos:start="69:23" pos:end="69:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:37" pos:end="69:64"><expr pos:start="69:37" pos:end="69:64"><literal type="string" pos:start="69:37" pos:end="69:64">"ff_get_format failed: %d\n"</literal></expr></argument>, <argument pos:start="69:67" pos:end="69:77"><expr pos:start="69:67" pos:end="69:77"><name pos:start="69:67" pos:end="69:77">surface_fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:46"><expr pos:start="71:9" pos:end="71:45"><name pos:start="71:9" pos:end="71:27"><name pos:start="71:9" pos:end="71:11">ctx</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:27">internal_error</name></name> <operator pos:start="71:29" pos:end="71:29">=</operator> <call pos:start="71:31" pos:end="71:45"><name pos:start="71:31" pos:end="71:37">AVERROR</name><argument_list pos:start="71:38" pos:end="71:45">(<argument pos:start="71:39" pos:end="71:44"><expr pos:start="71:39" pos:end="71:44"><name pos:start="71:39" pos:end="71:44">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:17">return <expr pos:start="73:16" pos:end="73:16"><literal type="number" pos:start="73:16" pos:end="73:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="85:51"><expr pos:start="79:5" pos:end="85:50"><call pos:start="79:5" pos:end="85:50"><name pos:start="79:5" pos:end="79:10">av_log</name><argument_list pos:start="79:11" pos:end="85:50">(<argument pos:start="79:12" pos:end="79:16"><expr pos:start="79:12" pos:end="79:16"><name pos:start="79:12" pos:end="79:16">avctx</name></expr></argument>, <argument pos:start="79:19" pos:end="79:32"><expr pos:start="79:19" pos:end="79:32"><name pos:start="79:19" pos:end="79:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="79:35" pos:end="79:77"><expr pos:start="79:35" pos:end="79:77"><literal type="string" pos:start="79:35" pos:end="79:77">"Formats: Original: %s | HW: %s | SW: %s\n"</literal></expr></argument>,

           <argument pos:start="81:12" pos:end="81:46"><expr pos:start="81:12" pos:end="81:46"><call pos:start="81:12" pos:end="81:46"><name pos:start="81:12" pos:end="81:30">av_get_pix_fmt_name</name><argument_list pos:start="81:31" pos:end="81:46">(<argument pos:start="81:32" pos:end="81:45"><expr pos:start="81:32" pos:end="81:45"><name pos:start="81:32" pos:end="81:45"><name pos:start="81:32" pos:end="81:36">avctx</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:45">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>,

           <argument pos:start="83:12" pos:end="83:43"><expr pos:start="83:12" pos:end="83:43"><call pos:start="83:12" pos:end="83:43"><name pos:start="83:12" pos:end="83:30">av_get_pix_fmt_name</name><argument_list pos:start="83:31" pos:end="83:43">(<argument pos:start="83:32" pos:end="83:42"><expr pos:start="83:32" pos:end="83:42"><name pos:start="83:32" pos:end="83:42">surface_fmt</name></expr></argument>)</argument_list></call></expr></argument>,

           <argument pos:start="85:12" pos:end="85:49"><expr pos:start="85:12" pos:end="85:49"><call pos:start="85:12" pos:end="85:49"><name pos:start="85:12" pos:end="85:30">av_get_pix_fmt_name</name><argument_list pos:start="85:31" pos:end="85:49">(<argument pos:start="85:32" pos:end="85:48"><expr pos:start="85:32" pos:end="85:48"><name pos:start="85:32" pos:end="85:48"><name pos:start="85:32" pos:end="85:36">avctx</name><operator pos:start="85:37" pos:end="85:38">-&gt;</operator><name pos:start="85:39" pos:end="85:48">sw_pix_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:33"><expr pos:start="89:5" pos:end="89:32"><name pos:start="89:5" pos:end="89:18"><name pos:start="89:5" pos:end="89:9">avctx</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:18">pix_fmt</name></name> <operator pos:start="89:20" pos:end="89:20">=</operator> <name pos:start="89:22" pos:end="89:32">surface_fmt</name></expr>;</expr_stmt>



    <comment type="line" pos:start="93:5" pos:end="93:82">// Update our hwframe ctx, as the get_format callback might have refreshed it!</comment>

    <if_stmt pos:start="95:5" pos:end="115:5"><if pos:start="95:5" pos:end="115:5">if <condition pos:start="95:8" pos:end="95:29">(<expr pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:13">avctx</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:28">hw_frames_ctx</name></name></expr>)</condition> <block pos:start="95:31" pos:end="115:5">{<block_content pos:start="97:9" pos:end="113:61">

        <expr_stmt pos:start="97:9" pos:end="97:39"><expr pos:start="97:9" pos:end="97:38"><call pos:start="97:9" pos:end="97:38"><name pos:start="97:9" pos:end="97:23">av_buffer_unref</name><argument_list pos:start="97:24" pos:end="97:38">(<argument pos:start="97:25" pos:end="97:37"><expr pos:start="97:25" pos:end="97:37"><operator pos:start="97:25" pos:end="97:25">&amp;</operator><name pos:start="97:26" pos:end="97:37"><name pos:start="97:26" pos:end="97:28">ctx</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:37">hwframe</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:59"><expr pos:start="101:9" pos:end="101:58"><name pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:11">ctx</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:20">hwframe</name></name> <operator pos:start="101:22" pos:end="101:22">=</operator> <call pos:start="101:24" pos:end="101:58"><name pos:start="101:24" pos:end="101:36">av_buffer_ref</name><argument_list pos:start="101:37" pos:end="101:58">(<argument pos:start="101:38" pos:end="101:57"><expr pos:start="101:38" pos:end="101:57"><name pos:start="101:38" pos:end="101:57"><name pos:start="101:38" pos:end="101:42">avctx</name><operator pos:start="101:43" pos:end="101:44">-&gt;</operator><name pos:start="101:45" pos:end="101:57">hw_frames_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="109:9"><if pos:start="103:9" pos:end="109:9">if <condition pos:start="103:12" pos:end="103:26">(<expr pos:start="103:13" pos:end="103:25"><operator pos:start="103:13" pos:end="103:13">!</operator><name pos:start="103:14" pos:end="103:25"><name pos:start="103:14" pos:end="103:16">ctx</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:25">hwframe</name></name></expr>)</condition> <block pos:start="103:28" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:21">

            <expr_stmt pos:start="105:13" pos:end="105:50"><expr pos:start="105:13" pos:end="105:49"><name pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:15">ctx</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:31">internal_error</name></name> <operator pos:start="105:33" pos:end="105:33">=</operator> <call pos:start="105:35" pos:end="105:49"><name pos:start="105:35" pos:end="105:41">AVERROR</name><argument_list pos:start="105:42" pos:end="105:49">(<argument pos:start="105:43" pos:end="105:48"><expr pos:start="105:43" pos:end="105:48"><name pos:start="105:43" pos:end="105:48">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="107:13" pos:end="107:21">return <expr pos:start="107:20" pos:end="107:20"><literal type="number" pos:start="107:20" pos:end="107:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:61"><expr pos:start="113:9" pos:end="113:60"><name pos:start="113:9" pos:end="113:19">hwframe_ctx</name> <operator pos:start="113:21" pos:end="113:21">=</operator> <operator pos:start="113:23" pos:end="113:23">(</operator><name pos:start="113:24" pos:end="113:40">AVHWFramesContext</name><operator pos:start="113:41" pos:end="113:41">*</operator><operator pos:start="113:42" pos:end="113:42">)</operator><name pos:start="113:43" pos:end="113:60"><name pos:start="113:43" pos:end="113:45">ctx</name><operator pos:start="113:46" pos:end="113:47">-&gt;</operator><name pos:start="113:48" pos:end="113:54">hwframe</name><operator pos:start="113:55" pos:end="113:56">-&gt;</operator><name pos:start="113:57" pos:end="113:60">data</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:46"><expr pos:start="119:5" pos:end="119:45"><name pos:start="119:5" pos:end="119:16"><name pos:start="119:5" pos:end="119:9">avctx</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:16">width</name></name> <operator pos:start="119:18" pos:end="119:18">=</operator> <name pos:start="119:20" pos:end="119:45"><name pos:start="119:20" pos:end="119:25">format</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:39">display_area</name><operator pos:start="119:40" pos:end="119:40">.</operator><name pos:start="119:41" pos:end="119:45">right</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:48"><expr pos:start="121:5" pos:end="121:47"><name pos:start="121:5" pos:end="121:17"><name pos:start="121:5" pos:end="121:9">avctx</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:17">height</name></name> <operator pos:start="121:19" pos:end="121:19">=</operator> <name pos:start="121:21" pos:end="121:47"><name pos:start="121:21" pos:end="121:26">format</name><operator pos:start="121:27" pos:end="121:28">-&gt;</operator><name pos:start="121:29" pos:end="121:40">display_area</name><operator pos:start="121:41" pos:end="121:41">.</operator><name pos:start="121:42" pos:end="121:47">bottom</name></name></expr>;</expr_stmt>



    <macro pos:start="125:5" pos:end="129:53"><name pos:start="125:5" pos:end="125:14">ff_set_sar</name><argument_list pos:start="125:15" pos:end="129:53">(<argument pos:start="125:16" pos:end="125:20">avctx</argument>, <argument pos:start="125:23" pos:end="129:52">av_div_q(

        (AVRational){ format-&gt;display_aspect_ratio.x, format-&gt;display_aspect_ratio.y },

        (AVRational){ avctx-&gt;width, avctx-&gt;height })</argument>)</argument_list></macro><empty_stmt pos:start="129:54" pos:end="129:54">;</empty_stmt>



    <if_stmt pos:start="133:5" pos:end="139:54"><if pos:start="133:5" pos:end="135:53">if <condition pos:start="133:8" pos:end="133:91">(<expr pos:start="133:9" pos:end="133:90"><operator pos:start="133:9" pos:end="133:9">!</operator><name pos:start="133:10" pos:end="133:37"><name pos:start="133:10" pos:end="133:15">format</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:37">progressive_sequence</name></name> <operator pos:start="133:39" pos:end="133:40">&amp;&amp;</operator> <name pos:start="133:42" pos:end="133:56"><name pos:start="133:42" pos:end="133:44">ctx</name><operator pos:start="133:45" pos:end="133:46">-&gt;</operator><name pos:start="133:47" pos:end="133:56">deint_mode</name></name> <operator pos:start="133:58" pos:end="133:59">==</operator> <name pos:start="133:61" pos:end="133:90">cudaVideoDeinterlaceMode_Weave</name></expr>)</condition><block type="pseudo" pos:start="135:9" pos:end="135:53"><block_content pos:start="135:9" pos:end="135:53">

        <expr_stmt pos:start="135:9" pos:end="135:53"><expr pos:start="135:9" pos:end="135:52"><name pos:start="135:9" pos:end="135:20"><name pos:start="135:9" pos:end="135:13">avctx</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:20">flags</name></name> <operator pos:start="135:22" pos:end="135:23">|=</operator> <name pos:start="135:25" pos:end="135:52">AV_CODEC_FLAG_INTERLACED_DCT</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="137:5" pos:end="139:54">else<block type="pseudo" pos:start="139:9" pos:end="139:54"><block_content pos:start="139:9" pos:end="139:54">

        <expr_stmt pos:start="139:9" pos:end="139:54"><expr pos:start="139:9" pos:end="139:53"><name pos:start="139:9" pos:end="139:20"><name pos:start="139:9" pos:end="139:13">avctx</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:20">flags</name></name> <operator pos:start="139:22" pos:end="139:23">&amp;=</operator> <operator pos:start="139:25" pos:end="139:25">~</operator><name pos:start="139:26" pos:end="139:53">AV_CODEC_FLAG_INTERLACED_DCT</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="143:5" pos:end="149:46"><if pos:start="143:5" pos:end="145:46">if <condition pos:start="143:8" pos:end="143:63">(<expr pos:start="143:9" pos:end="143:62"><name pos:start="143:9" pos:end="143:62"><name pos:start="143:9" pos:end="143:14">format</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:40">video_signal_description</name><operator pos:start="143:41" pos:end="143:41">.</operator><name pos:start="143:42" pos:end="143:62">video_full_range_flag</name></name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:46"><block_content pos:start="145:9" pos:end="145:46">

        <expr_stmt pos:start="145:9" pos:end="145:46"><expr pos:start="145:9" pos:end="145:45"><name pos:start="145:9" pos:end="145:26"><name pos:start="145:9" pos:end="145:13">avctx</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:26">color_range</name></name> <operator pos:start="145:28" pos:end="145:28">=</operator> <name pos:start="145:30" pos:end="145:45">AVCOL_RANGE_JPEG</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="147:5" pos:end="149:46">else<block type="pseudo" pos:start="149:9" pos:end="149:46"><block_content pos:start="149:9" pos:end="149:46">

        <expr_stmt pos:start="149:9" pos:end="149:46"><expr pos:start="149:9" pos:end="149:45"><name pos:start="149:9" pos:end="149:26"><name pos:start="149:9" pos:end="149:13">avctx</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:26">color_range</name></name> <operator pos:start="149:28" pos:end="149:28">=</operator> <name pos:start="149:30" pos:end="149:45">AVCOL_RANGE_MPEG</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="153:5" pos:end="153:78"><expr pos:start="153:5" pos:end="153:77"><name pos:start="153:5" pos:end="153:26"><name pos:start="153:5" pos:end="153:9">avctx</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:26">color_primaries</name></name> <operator pos:start="153:28" pos:end="153:28">=</operator> <name pos:start="153:30" pos:end="153:77"><name pos:start="153:30" pos:end="153:35">format</name><operator pos:start="153:36" pos:end="153:37">-&gt;</operator><name pos:start="153:38" pos:end="153:61">video_signal_description</name><operator pos:start="153:62" pos:end="153:62">.</operator><name pos:start="153:63" pos:end="153:77">color_primaries</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:81"><expr pos:start="155:5" pos:end="155:80"><name pos:start="155:5" pos:end="155:20"><name pos:start="155:5" pos:end="155:9">avctx</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:20">color_trc</name></name> <operator pos:start="155:22" pos:end="155:22">=</operator> <name pos:start="155:24" pos:end="155:80"><name pos:start="155:24" pos:end="155:29">format</name><operator pos:start="155:30" pos:end="155:31">-&gt;</operator><name pos:start="155:32" pos:end="155:55">video_signal_description</name><operator pos:start="155:56" pos:end="155:56">.</operator><name pos:start="155:57" pos:end="155:80">transfer_characteristics</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:77"><expr pos:start="157:5" pos:end="157:76"><name pos:start="157:5" pos:end="157:21"><name pos:start="157:5" pos:end="157:9">avctx</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:21">colorspace</name></name> <operator pos:start="157:23" pos:end="157:23">=</operator> <name pos:start="157:25" pos:end="157:76"><name pos:start="157:25" pos:end="157:30">format</name><operator pos:start="157:31" pos:end="157:32">-&gt;</operator><name pos:start="157:33" pos:end="157:56">video_signal_description</name><operator pos:start="157:57" pos:end="157:57">.</operator><name pos:start="157:58" pos:end="157:76">matrix_coefficients</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="161:5" pos:end="163:42"><if pos:start="161:5" pos:end="163:42">if <condition pos:start="161:8" pos:end="161:24">(<expr pos:start="161:9" pos:end="161:23"><name pos:start="161:9" pos:end="161:23"><name pos:start="161:9" pos:end="161:14">format</name><operator pos:start="161:15" pos:end="161:16">-&gt;</operator><name pos:start="161:17" pos:end="161:23">bitrate</name></name></expr>)</condition><block type="pseudo" pos:start="163:9" pos:end="163:42"><block_content pos:start="163:9" pos:end="163:42">

        <expr_stmt pos:start="163:9" pos:end="163:42"><expr pos:start="163:9" pos:end="163:41"><name pos:start="163:9" pos:end="163:23"><name pos:start="163:9" pos:end="163:13">avctx</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:23">bit_rate</name></name> <operator pos:start="163:25" pos:end="163:25">=</operator> <name pos:start="163:27" pos:end="163:41"><name pos:start="163:27" pos:end="163:32">format</name><operator pos:start="163:33" pos:end="163:34">-&gt;</operator><name pos:start="163:35" pos:end="163:41">bitrate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="167:5" pos:end="173:5"><if pos:start="167:5" pos:end="173:5">if <condition pos:start="167:8" pos:end="167:71">(<expr pos:start="167:9" pos:end="167:70"><name pos:start="167:9" pos:end="167:36"><name pos:start="167:9" pos:end="167:14">format</name><operator pos:start="167:15" pos:end="167:16">-&gt;</operator><name pos:start="167:17" pos:end="167:26">frame_rate</name><operator pos:start="167:27" pos:end="167:27">.</operator><name pos:start="167:28" pos:end="167:36">numerator</name></name> <operator pos:start="167:38" pos:end="167:39">&amp;&amp;</operator> <name pos:start="167:41" pos:end="167:70"><name pos:start="167:41" pos:end="167:46">format</name><operator pos:start="167:47" pos:end="167:48">-&gt;</operator><name pos:start="167:49" pos:end="167:58">frame_rate</name><operator pos:start="167:59" pos:end="167:59">.</operator><name pos:start="167:60" pos:end="167:70">denominator</name></name></expr>)</condition> <block pos:start="167:73" pos:end="173:5">{<block_content pos:start="169:9" pos:end="171:62">

        <expr_stmt pos:start="169:9" pos:end="169:60"><expr pos:start="169:9" pos:end="169:59"><name pos:start="169:9" pos:end="169:28"><name pos:start="169:9" pos:end="169:13">avctx</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:24">framerate</name><operator pos:start="169:25" pos:end="169:25">.</operator><name pos:start="169:26" pos:end="169:28">num</name></name> <operator pos:start="169:30" pos:end="169:30">=</operator> <name pos:start="169:32" pos:end="169:59"><name pos:start="169:32" pos:end="169:37">format</name><operator pos:start="169:38" pos:end="169:39">-&gt;</operator><name pos:start="169:40" pos:end="169:49">frame_rate</name><operator pos:start="169:50" pos:end="169:50">.</operator><name pos:start="169:51" pos:end="169:59">numerator</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:62"><expr pos:start="171:9" pos:end="171:61"><name pos:start="171:9" pos:end="171:28"><name pos:start="171:9" pos:end="171:13">avctx</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:24">framerate</name><operator pos:start="171:25" pos:end="171:25">.</operator><name pos:start="171:26" pos:end="171:28">den</name></name> <operator pos:start="171:30" pos:end="171:30">=</operator> <name pos:start="171:32" pos:end="171:61"><name pos:start="171:32" pos:end="171:37">format</name><operator pos:start="171:38" pos:end="171:39">-&gt;</operator><name pos:start="171:40" pos:end="171:49">frame_rate</name><operator pos:start="171:50" pos:end="171:50">.</operator><name pos:start="171:51" pos:end="171:61">denominator</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="177:5" pos:end="187:17"><if pos:start="177:5" pos:end="187:17">if <condition pos:start="177:8" pos:end="185:48">(<expr pos:start="177:9" pos:end="185:47"><name pos:start="177:9" pos:end="177:22"><name pos:start="177:9" pos:end="177:11">ctx</name><operator pos:start="177:12" pos:end="177:13">-&gt;</operator><name pos:start="177:14" pos:end="177:22">cudecoder</name></name>

            <operator pos:start="179:13" pos:end="179:14">&amp;&amp;</operator> <name pos:start="179:16" pos:end="179:33"><name pos:start="179:16" pos:end="179:20">avctx</name><operator pos:start="179:21" pos:end="179:22">-&gt;</operator><name pos:start="179:23" pos:end="179:33">coded_width</name></name> <operator pos:start="179:35" pos:end="179:36">==</operator> <name pos:start="179:38" pos:end="179:56"><name pos:start="179:38" pos:end="179:43">format</name><operator pos:start="179:44" pos:end="179:45">-&gt;</operator><name pos:start="179:46" pos:end="179:56">coded_width</name></name>

            <operator pos:start="181:13" pos:end="181:14">&amp;&amp;</operator> <name pos:start="181:16" pos:end="181:34"><name pos:start="181:16" pos:end="181:20">avctx</name><operator pos:start="181:21" pos:end="181:22">-&gt;</operator><name pos:start="181:23" pos:end="181:34">coded_height</name></name> <operator pos:start="181:36" pos:end="181:37">==</operator> <name pos:start="181:39" pos:end="181:58"><name pos:start="181:39" pos:end="181:44">format</name><operator pos:start="181:45" pos:end="181:46">-&gt;</operator><name pos:start="181:47" pos:end="181:58">coded_height</name></name>

            <operator pos:start="183:13" pos:end="183:14">&amp;&amp;</operator> <name pos:start="183:16" pos:end="183:33"><name pos:start="183:16" pos:end="183:18">ctx</name><operator pos:start="183:19" pos:end="183:20">-&gt;</operator><name pos:start="183:21" pos:end="183:33">chroma_format</name></name> <operator pos:start="183:35" pos:end="183:36">==</operator> <name pos:start="183:38" pos:end="183:58"><name pos:start="183:38" pos:end="183:43">format</name><operator pos:start="183:44" pos:end="183:45">-&gt;</operator><name pos:start="183:46" pos:end="183:58">chroma_format</name></name>

            <operator pos:start="185:13" pos:end="185:14">&amp;&amp;</operator> <name pos:start="185:16" pos:end="185:30"><name pos:start="185:16" pos:end="185:18">ctx</name><operator pos:start="185:19" pos:end="185:20">-&gt;</operator><name pos:start="185:21" pos:end="185:30">codec_type</name></name> <operator pos:start="185:32" pos:end="185:33">==</operator> <name pos:start="185:35" pos:end="185:47"><name pos:start="185:35" pos:end="185:40">format</name><operator pos:start="185:41" pos:end="185:42">-&gt;</operator><name pos:start="185:43" pos:end="185:47">codec</name></name></expr>)</condition><block type="pseudo" pos:start="187:9" pos:end="187:17"><block_content pos:start="187:9" pos:end="187:17">

        <return pos:start="187:9" pos:end="187:17">return <expr pos:start="187:16" pos:end="187:16"><literal type="number" pos:start="187:16" pos:end="187:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="191:5" pos:end="203:5"><if pos:start="191:5" pos:end="203:5">if <condition pos:start="191:8" pos:end="191:23">(<expr pos:start="191:9" pos:end="191:22"><name pos:start="191:9" pos:end="191:22"><name pos:start="191:9" pos:end="191:11">ctx</name><operator pos:start="191:12" pos:end="191:13">-&gt;</operator><name pos:start="191:14" pos:end="191:22">cudecoder</name></name></expr>)</condition> <block pos:start="191:25" pos:end="203:5">{<block_content pos:start="193:9" pos:end="201:30">

        <expr_stmt pos:start="193:9" pos:end="193:65"><expr pos:start="193:9" pos:end="193:64"><call pos:start="193:9" pos:end="193:64"><name pos:start="193:9" pos:end="193:14">av_log</name><argument_list pos:start="193:15" pos:end="193:64">(<argument pos:start="193:16" pos:end="193:20"><expr pos:start="193:16" pos:end="193:20"><name pos:start="193:16" pos:end="193:20">avctx</name></expr></argument>, <argument pos:start="193:23" pos:end="193:34"><expr pos:start="193:23" pos:end="193:34"><name pos:start="193:23" pos:end="193:34">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="193:37" pos:end="193:63"><expr pos:start="193:37" pos:end="193:63"><literal type="string" pos:start="193:37" pos:end="193:63">"Re-initializing decoder\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:87"><expr pos:start="195:9" pos:end="195:86"><name pos:start="195:9" pos:end="195:27"><name pos:start="195:9" pos:end="195:11">ctx</name><operator pos:start="195:12" pos:end="195:13">-&gt;</operator><name pos:start="195:14" pos:end="195:27">internal_error</name></name> <operator pos:start="195:29" pos:end="195:29">=</operator> <call pos:start="195:31" pos:end="195:86"><name pos:start="195:31" pos:end="195:38">CHECK_CU</name><argument_list pos:start="195:39" pos:end="195:86">(<argument pos:start="195:40" pos:end="195:85"><expr pos:start="195:40" pos:end="195:85"><call pos:start="195:40" pos:end="195:85"><name pos:start="195:40" pos:end="195:69"><name pos:start="195:40" pos:end="195:42">ctx</name><operator pos:start="195:43" pos:end="195:44">-&gt;</operator><name pos:start="195:45" pos:end="195:48">cvdl</name><operator pos:start="195:49" pos:end="195:50">-&gt;</operator><name pos:start="195:51" pos:end="195:69">cuvidDestroyDecoder</name></name><argument_list pos:start="195:70" pos:end="195:85">(<argument pos:start="195:71" pos:end="195:84"><expr pos:start="195:71" pos:end="195:84"><name pos:start="195:71" pos:end="195:84"><name pos:start="195:71" pos:end="195:73">ctx</name><operator pos:start="195:74" pos:end="195:75">-&gt;</operator><name pos:start="195:76" pos:end="195:84">cudecoder</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="197:9" pos:end="199:21"><if pos:start="197:9" pos:end="199:21">if <condition pos:start="197:12" pos:end="197:36">(<expr pos:start="197:13" pos:end="197:35"><name pos:start="197:13" pos:end="197:31"><name pos:start="197:13" pos:end="197:15">ctx</name><operator pos:start="197:16" pos:end="197:17">-&gt;</operator><name pos:start="197:18" pos:end="197:31">internal_error</name></name> <operator pos:start="197:33" pos:end="197:33">&lt;</operator> <literal type="number" pos:start="197:35" pos:end="197:35">0</literal></expr>)</condition><block type="pseudo" pos:start="199:13" pos:end="199:21"><block_content pos:start="199:13" pos:end="199:21">

            <return pos:start="199:13" pos:end="199:21">return <expr pos:start="199:20" pos:end="199:20"><literal type="number" pos:start="199:20" pos:end="199:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:30"><expr pos:start="201:9" pos:end="201:29"><name pos:start="201:9" pos:end="201:22"><name pos:start="201:9" pos:end="201:11">ctx</name><operator pos:start="201:12" pos:end="201:13">-&gt;</operator><name pos:start="201:14" pos:end="201:22">cudecoder</name></name> <operator pos:start="201:24" pos:end="201:24">=</operator> <name pos:start="201:26" pos:end="201:29">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="207:5" pos:end="223:5"><if pos:start="207:5" pos:end="223:5">if <condition pos:start="207:8" pos:end="215:57">(<expr pos:start="207:9" pos:end="215:56"><name pos:start="207:9" pos:end="207:25"><name pos:start="207:9" pos:end="207:19">hwframe_ctx</name><operator pos:start="207:20" pos:end="207:21">-&gt;</operator><name pos:start="207:22" pos:end="207:25">pool</name></name> <operator pos:start="207:27" pos:end="207:28">&amp;&amp;</operator> <operator pos:start="207:30" pos:end="207:30">(</operator>

            <name pos:start="209:13" pos:end="209:30"><name pos:start="209:13" pos:end="209:23">hwframe_ctx</name><operator pos:start="209:24" pos:end="209:25">-&gt;</operator><name pos:start="209:26" pos:end="209:30">width</name></name> <operator pos:start="209:32" pos:end="209:32">&lt;</operator> <name pos:start="209:34" pos:end="209:45"><name pos:start="209:34" pos:end="209:38">avctx</name><operator pos:start="209:39" pos:end="209:40">-&gt;</operator><name pos:start="209:41" pos:end="209:45">width</name></name> <operator pos:start="209:47" pos:end="209:48">||</operator>

            <name pos:start="211:13" pos:end="211:31"><name pos:start="211:13" pos:end="211:23">hwframe_ctx</name><operator pos:start="211:24" pos:end="211:25">-&gt;</operator><name pos:start="211:26" pos:end="211:31">height</name></name> <operator pos:start="211:33" pos:end="211:33">&lt;</operator> <name pos:start="211:35" pos:end="211:47"><name pos:start="211:35" pos:end="211:39">avctx</name><operator pos:start="211:40" pos:end="211:41">-&gt;</operator><name pos:start="211:42" pos:end="211:47">height</name></name> <operator pos:start="211:49" pos:end="211:50">||</operator>

            <name pos:start="213:13" pos:end="213:31"><name pos:start="213:13" pos:end="213:23">hwframe_ctx</name><operator pos:start="213:24" pos:end="213:25">-&gt;</operator><name pos:start="213:26" pos:end="213:31">format</name></name> <operator pos:start="213:33" pos:end="213:34">!=</operator> <name pos:start="213:36" pos:end="213:50">AV_PIX_FMT_CUDA</name> <operator pos:start="213:52" pos:end="213:53">||</operator>

            <name pos:start="215:13" pos:end="215:34"><name pos:start="215:13" pos:end="215:23">hwframe_ctx</name><operator pos:start="215:24" pos:end="215:25">-&gt;</operator><name pos:start="215:26" pos:end="215:34">sw_format</name></name> <operator pos:start="215:36" pos:end="215:37">!=</operator> <name pos:start="215:39" pos:end="215:55"><name pos:start="215:39" pos:end="215:43">avctx</name><operator pos:start="215:44" pos:end="215:45">-&gt;</operator><name pos:start="215:46" pos:end="215:55">sw_pix_fmt</name></name><operator pos:start="215:56" pos:end="215:56">)</operator></expr>)</condition> <block pos:start="215:59" pos:end="223:5">{<block_content pos:start="217:9" pos:end="221:17">

        <expr_stmt pos:start="217:9" pos:end="217:111"><expr pos:start="217:9" pos:end="217:110"><call pos:start="217:9" pos:end="217:110"><name pos:start="217:9" pos:end="217:14">av_log</name><argument_list pos:start="217:15" pos:end="217:110">(<argument pos:start="217:16" pos:end="217:20"><expr pos:start="217:16" pos:end="217:20"><name pos:start="217:16" pos:end="217:20">avctx</name></expr></argument>, <argument pos:start="217:23" pos:end="217:34"><expr pos:start="217:23" pos:end="217:34"><name pos:start="217:23" pos:end="217:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="217:37" pos:end="217:109"><expr pos:start="217:37" pos:end="217:109"><literal type="string" pos:start="217:37" pos:end="217:109">"AVHWFramesContext is already initialized with incompatible parameters\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:46"><expr pos:start="219:9" pos:end="219:45"><name pos:start="219:9" pos:end="219:27"><name pos:start="219:9" pos:end="219:11">ctx</name><operator pos:start="219:12" pos:end="219:13">-&gt;</operator><name pos:start="219:14" pos:end="219:27">internal_error</name></name> <operator pos:start="219:29" pos:end="219:29">=</operator> <call pos:start="219:31" pos:end="219:45"><name pos:start="219:31" pos:end="219:37">AVERROR</name><argument_list pos:start="219:38" pos:end="219:45">(<argument pos:start="219:39" pos:end="219:44"><expr pos:start="219:39" pos:end="219:44"><name pos:start="219:39" pos:end="219:44">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="221:9" pos:end="221:17">return <expr pos:start="221:16" pos:end="221:16"><literal type="number" pos:start="221:16" pos:end="221:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="227:5" pos:end="235:5"><if pos:start="227:5" pos:end="235:5">if <condition pos:start="227:8" pos:end="227:59">(<expr pos:start="227:9" pos:end="227:58"><name pos:start="227:9" pos:end="227:29"><name pos:start="227:9" pos:end="227:14">format</name><operator pos:start="227:15" pos:end="227:16">-&gt;</operator><name pos:start="227:17" pos:end="227:29">chroma_format</name></name> <operator pos:start="227:31" pos:end="227:32">!=</operator> <name pos:start="227:34" pos:end="227:58">cudaVideoChromaFormat_420</name></expr>)</condition> <block pos:start="227:61" pos:end="235:5">{<block_content pos:start="229:9" pos:end="233:17">

        <expr_stmt pos:start="229:9" pos:end="229:89"><expr pos:start="229:9" pos:end="229:88"><call pos:start="229:9" pos:end="229:88"><name pos:start="229:9" pos:end="229:14">av_log</name><argument_list pos:start="229:15" pos:end="229:88">(<argument pos:start="229:16" pos:end="229:20"><expr pos:start="229:16" pos:end="229:20"><name pos:start="229:16" pos:end="229:20">avctx</name></expr></argument>, <argument pos:start="229:23" pos:end="229:34"><expr pos:start="229:23" pos:end="229:34"><name pos:start="229:23" pos:end="229:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="229:37" pos:end="229:87"><expr pos:start="229:37" pos:end="229:87"><literal type="string" pos:start="229:37" pos:end="229:87">"Chroma formats other than 420 are not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:46"><expr pos:start="231:9" pos:end="231:45"><name pos:start="231:9" pos:end="231:27"><name pos:start="231:9" pos:end="231:11">ctx</name><operator pos:start="231:12" pos:end="231:13">-&gt;</operator><name pos:start="231:14" pos:end="231:27">internal_error</name></name> <operator pos:start="231:29" pos:end="231:29">=</operator> <call pos:start="231:31" pos:end="231:45"><name pos:start="231:31" pos:end="231:37">AVERROR</name><argument_list pos:start="231:38" pos:end="231:45">(<argument pos:start="231:39" pos:end="231:44"><expr pos:start="231:39" pos:end="231:44"><name pos:start="231:39" pos:end="231:44">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="233:9" pos:end="233:17">return <expr pos:start="233:16" pos:end="233:16"><literal type="number" pos:start="233:16" pos:end="233:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="239:5" pos:end="239:45"><expr pos:start="239:5" pos:end="239:44"><name pos:start="239:5" pos:end="239:22"><name pos:start="239:5" pos:end="239:9">avctx</name><operator pos:start="239:10" pos:end="239:11">-&gt;</operator><name pos:start="239:12" pos:end="239:22">coded_width</name></name> <operator pos:start="239:24" pos:end="239:24">=</operator> <name pos:start="239:26" pos:end="239:44"><name pos:start="239:26" pos:end="239:31">format</name><operator pos:start="239:32" pos:end="239:33">-&gt;</operator><name pos:start="239:34" pos:end="239:44">coded_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:47"><expr pos:start="241:5" pos:end="241:46"><name pos:start="241:5" pos:end="241:23"><name pos:start="241:5" pos:end="241:9">avctx</name><operator pos:start="241:10" pos:end="241:11">-&gt;</operator><name pos:start="241:12" pos:end="241:23">coded_height</name></name> <operator pos:start="241:25" pos:end="241:25">=</operator> <name pos:start="241:27" pos:end="241:46"><name pos:start="241:27" pos:end="241:32">format</name><operator pos:start="241:33" pos:end="241:34">-&gt;</operator><name pos:start="241:35" pos:end="241:46">coded_height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="245:5" pos:end="245:47"><expr pos:start="245:5" pos:end="245:46"><name pos:start="245:5" pos:end="245:22"><name pos:start="245:5" pos:end="245:7">ctx</name><operator pos:start="245:8" pos:end="245:9">-&gt;</operator><name pos:start="245:10" pos:end="245:22">chroma_format</name></name> <operator pos:start="245:24" pos:end="245:24">=</operator> <name pos:start="245:26" pos:end="245:46"><name pos:start="245:26" pos:end="245:31">format</name><operator pos:start="245:32" pos:end="245:33">-&gt;</operator><name pos:start="245:34" pos:end="245:46">chroma_format</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="249:5" pos:end="249:39"><expr pos:start="249:5" pos:end="249:38"><call pos:start="249:5" pos:end="249:38"><name pos:start="249:5" pos:end="249:10">memset</name><argument_list pos:start="249:11" pos:end="249:38">(<argument pos:start="249:12" pos:end="249:18"><expr pos:start="249:12" pos:end="249:18"><operator pos:start="249:12" pos:end="249:12">&amp;</operator><name pos:start="249:13" pos:end="249:18">cuinfo</name></expr></argument>, <argument pos:start="249:21" pos:end="249:21"><expr pos:start="249:21" pos:end="249:21"><literal type="number" pos:start="249:21" pos:end="249:21">0</literal></expr></argument>, <argument pos:start="249:24" pos:end="249:37"><expr pos:start="249:24" pos:end="249:37"><sizeof pos:start="249:24" pos:end="249:37">sizeof<argument_list pos:start="249:30" pos:end="249:37">(<argument pos:start="249:31" pos:end="249:36"><expr pos:start="249:31" pos:end="249:36"><name pos:start="249:31" pos:end="249:36">cuinfo</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="253:5" pos:end="253:55"><expr pos:start="253:5" pos:end="253:54"><name pos:start="253:5" pos:end="253:20"><name pos:start="253:5" pos:end="253:10">cuinfo</name><operator pos:start="253:11" pos:end="253:11">.</operator><name pos:start="253:12" pos:end="253:20">CodecType</name></name> <operator pos:start="253:22" pos:end="253:22">=</operator> <name pos:start="253:24" pos:end="253:38"><name pos:start="253:24" pos:end="253:26">ctx</name><operator pos:start="253:27" pos:end="253:28">-&gt;</operator><name pos:start="253:29" pos:end="253:38">codec_type</name></name> <operator pos:start="253:40" pos:end="253:40">=</operator> <name pos:start="253:42" pos:end="253:54"><name pos:start="253:42" pos:end="253:47">format</name><operator pos:start="253:48" pos:end="253:49">-&gt;</operator><name pos:start="253:50" pos:end="253:54">codec</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:48"><expr pos:start="255:5" pos:end="255:47"><name pos:start="255:5" pos:end="255:23"><name pos:start="255:5" pos:end="255:10">cuinfo</name><operator pos:start="255:11" pos:end="255:11">.</operator><name pos:start="255:12" pos:end="255:23">ChromaFormat</name></name> <operator pos:start="255:25" pos:end="255:25">=</operator> <name pos:start="255:27" pos:end="255:47"><name pos:start="255:27" pos:end="255:32">format</name><operator pos:start="255:33" pos:end="255:34">-&gt;</operator><name pos:start="255:35" pos:end="255:47">chroma_format</name></name></expr>;</expr_stmt>



    <switch pos:start="259:5" pos:end="283:5">switch <condition pos:start="259:12" pos:end="259:30">(<expr pos:start="259:13" pos:end="259:29"><name pos:start="259:13" pos:end="259:29"><name pos:start="259:13" pos:end="259:17">avctx</name><operator pos:start="259:18" pos:end="259:19">-&gt;</operator><name pos:start="259:20" pos:end="259:29">sw_pix_fmt</name></name></expr>)</condition> <block pos:start="259:32" pos:end="283:5">{<block_content pos:start="261:5" pos:end="281:17">

    <case pos:start="261:5" pos:end="261:25">case <expr pos:start="261:10" pos:end="261:24"><name pos:start="261:10" pos:end="261:24">AV_PIX_FMT_NV12</name></expr>:</case>

        <expr_stmt pos:start="263:9" pos:end="263:58"><expr pos:start="263:9" pos:end="263:57"><name pos:start="263:9" pos:end="263:27"><name pos:start="263:9" pos:end="263:14">cuinfo</name><operator pos:start="263:15" pos:end="263:15">.</operator><name pos:start="263:16" pos:end="263:27">OutputFormat</name></name> <operator pos:start="263:29" pos:end="263:29">=</operator> <name pos:start="263:31" pos:end="263:57">cudaVideoSurfaceFormat_NV12</name></expr>;</expr_stmt>

        <break pos:start="265:9" pos:end="265:14">break;</break>

    <case pos:start="267:5" pos:end="267:25">case <expr pos:start="267:10" pos:end="267:24"><name pos:start="267:10" pos:end="267:24">AV_PIX_FMT_P010</name></expr>:</case>

    <case pos:start="269:5" pos:end="269:25">case <expr pos:start="269:10" pos:end="269:24"><name pos:start="269:10" pos:end="269:24">AV_PIX_FMT_P016</name></expr>:</case>

        <expr_stmt pos:start="271:9" pos:end="271:58"><expr pos:start="271:9" pos:end="271:57"><name pos:start="271:9" pos:end="271:27"><name pos:start="271:9" pos:end="271:14">cuinfo</name><operator pos:start="271:15" pos:end="271:15">.</operator><name pos:start="271:16" pos:end="271:27">OutputFormat</name></name> <operator pos:start="271:29" pos:end="271:29">=</operator> <name pos:start="271:31" pos:end="271:57">cudaVideoSurfaceFormat_P016</name></expr>;</expr_stmt>

        <break pos:start="273:9" pos:end="273:14">break;</break>

    <default pos:start="275:5" pos:end="275:12">default:</default>

        <expr_stmt pos:start="277:9" pos:end="277:104"><expr pos:start="277:9" pos:end="277:103"><call pos:start="277:9" pos:end="277:103"><name pos:start="277:9" pos:end="277:14">av_log</name><argument_list pos:start="277:15" pos:end="277:103">(<argument pos:start="277:16" pos:end="277:20"><expr pos:start="277:16" pos:end="277:20"><name pos:start="277:16" pos:end="277:20">avctx</name></expr></argument>, <argument pos:start="277:23" pos:end="277:34"><expr pos:start="277:23" pos:end="277:34"><name pos:start="277:23" pos:end="277:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="277:37" pos:end="277:102"><expr pos:start="277:37" pos:end="277:102"><literal type="string" pos:start="277:37" pos:end="277:102">"Output formats other than NV12, P010 or P016 are not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:46"><expr pos:start="279:9" pos:end="279:45"><name pos:start="279:9" pos:end="279:27"><name pos:start="279:9" pos:end="279:11">ctx</name><operator pos:start="279:12" pos:end="279:13">-&gt;</operator><name pos:start="279:14" pos:end="279:27">internal_error</name></name> <operator pos:start="279:29" pos:end="279:29">=</operator> <call pos:start="279:31" pos:end="279:45"><name pos:start="279:31" pos:end="279:37">AVERROR</name><argument_list pos:start="279:38" pos:end="279:45">(<argument pos:start="279:39" pos:end="279:44"><expr pos:start="279:39" pos:end="279:44"><name pos:start="279:39" pos:end="279:44">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="281:9" pos:end="281:17">return <expr pos:start="281:16" pos:end="281:16"><literal type="number" pos:start="281:16" pos:end="281:16">0</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="287:5" pos:end="287:40"><expr pos:start="287:5" pos:end="287:39"><name pos:start="287:5" pos:end="287:18"><name pos:start="287:5" pos:end="287:10">cuinfo</name><operator pos:start="287:11" pos:end="287:11">.</operator><name pos:start="287:12" pos:end="287:18">ulWidth</name></name> <operator pos:start="287:20" pos:end="287:20">=</operator> <name pos:start="287:22" pos:end="287:39"><name pos:start="287:22" pos:end="287:26">avctx</name><operator pos:start="287:27" pos:end="287:28">-&gt;</operator><name pos:start="287:29" pos:end="287:39">coded_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="289:5" pos:end="289:42"><expr pos:start="289:5" pos:end="289:41"><name pos:start="289:5" pos:end="289:19"><name pos:start="289:5" pos:end="289:10">cuinfo</name><operator pos:start="289:11" pos:end="289:11">.</operator><name pos:start="289:12" pos:end="289:19">ulHeight</name></name> <operator pos:start="289:21" pos:end="289:21">=</operator> <name pos:start="289:23" pos:end="289:41"><name pos:start="289:23" pos:end="289:27">avctx</name><operator pos:start="289:28" pos:end="289:29">-&gt;</operator><name pos:start="289:30" pos:end="289:41">coded_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="291:5" pos:end="291:42"><expr pos:start="291:5" pos:end="291:41"><name pos:start="291:5" pos:end="291:24"><name pos:start="291:5" pos:end="291:10">cuinfo</name><operator pos:start="291:11" pos:end="291:11">.</operator><name pos:start="291:12" pos:end="291:24">ulTargetWidth</name></name> <operator pos:start="291:26" pos:end="291:26">=</operator> <name pos:start="291:28" pos:end="291:41"><name pos:start="291:28" pos:end="291:33">cuinfo</name><operator pos:start="291:34" pos:end="291:34">.</operator><name pos:start="291:35" pos:end="291:41">ulWidth</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="293:44"><expr pos:start="293:5" pos:end="293:43"><name pos:start="293:5" pos:end="293:25"><name pos:start="293:5" pos:end="293:10">cuinfo</name><operator pos:start="293:11" pos:end="293:11">.</operator><name pos:start="293:12" pos:end="293:25">ulTargetHeight</name></name> <operator pos:start="293:27" pos:end="293:27">=</operator> <name pos:start="293:29" pos:end="293:43"><name pos:start="293:29" pos:end="293:34">cuinfo</name><operator pos:start="293:35" pos:end="293:35">.</operator><name pos:start="293:36" pos:end="293:43">ulHeight</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="297:5" pos:end="297:32"><expr pos:start="297:5" pos:end="297:31"><name pos:start="297:5" pos:end="297:27"><name pos:start="297:5" pos:end="297:10">cuinfo</name><operator pos:start="297:11" pos:end="297:11">.</operator><name pos:start="297:12" pos:end="297:22">target_rect</name><operator pos:start="297:23" pos:end="297:23">.</operator><name pos:start="297:24" pos:end="297:27">left</name></name> <operator pos:start="297:29" pos:end="297:29">=</operator> <literal type="number" pos:start="297:31" pos:end="297:31">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="299:5" pos:end="299:31"><expr pos:start="299:5" pos:end="299:30"><name pos:start="299:5" pos:end="299:26"><name pos:start="299:5" pos:end="299:10">cuinfo</name><operator pos:start="299:11" pos:end="299:11">.</operator><name pos:start="299:12" pos:end="299:22">target_rect</name><operator pos:start="299:23" pos:end="299:23">.</operator><name pos:start="299:24" pos:end="299:26">top</name></name> <operator pos:start="299:28" pos:end="299:28">=</operator> <literal type="number" pos:start="299:30" pos:end="299:30">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="301:5" pos:end="301:46"><expr pos:start="301:5" pos:end="301:45"><name pos:start="301:5" pos:end="301:28"><name pos:start="301:5" pos:end="301:10">cuinfo</name><operator pos:start="301:11" pos:end="301:11">.</operator><name pos:start="301:12" pos:end="301:22">target_rect</name><operator pos:start="301:23" pos:end="301:23">.</operator><name pos:start="301:24" pos:end="301:28">right</name></name> <operator pos:start="301:30" pos:end="301:30">=</operator> <name pos:start="301:32" pos:end="301:45"><name pos:start="301:32" pos:end="301:37">cuinfo</name><operator pos:start="301:38" pos:end="301:38">.</operator><name pos:start="301:39" pos:end="301:45">ulWidth</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="303:5" pos:end="303:48"><expr pos:start="303:5" pos:end="303:47"><name pos:start="303:5" pos:end="303:29"><name pos:start="303:5" pos:end="303:10">cuinfo</name><operator pos:start="303:11" pos:end="303:11">.</operator><name pos:start="303:12" pos:end="303:22">target_rect</name><operator pos:start="303:23" pos:end="303:23">.</operator><name pos:start="303:24" pos:end="303:29">bottom</name></name> <operator pos:start="303:31" pos:end="303:31">=</operator> <name pos:start="303:33" pos:end="303:47"><name pos:start="303:33" pos:end="303:38">cuinfo</name><operator pos:start="303:39" pos:end="303:39">.</operator><name pos:start="303:40" pos:end="303:47">ulHeight</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="307:5" pos:end="307:50"><expr pos:start="307:5" pos:end="307:49"><name pos:start="307:5" pos:end="307:30"><name pos:start="307:5" pos:end="307:10">cuinfo</name><operator pos:start="307:11" pos:end="307:11">.</operator><name pos:start="307:12" pos:end="307:30">ulNumDecodeSurfaces</name></name> <operator pos:start="307:32" pos:end="307:32">=</operator> <name pos:start="307:34" pos:end="307:49"><name pos:start="307:34" pos:end="307:36">ctx</name><operator pos:start="307:37" pos:end="307:38">-&gt;</operator><name pos:start="307:39" pos:end="307:49">nb_surfaces</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="309:5" pos:end="309:35"><expr pos:start="309:5" pos:end="309:34"><name pos:start="309:5" pos:end="309:30"><name pos:start="309:5" pos:end="309:10">cuinfo</name><operator pos:start="309:11" pos:end="309:11">.</operator><name pos:start="309:12" pos:end="309:30">ulNumOutputSurfaces</name></name> <operator pos:start="309:32" pos:end="309:32">=</operator> <literal type="number" pos:start="309:34" pos:end="309:34">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="311:5" pos:end="311:57"><expr pos:start="311:5" pos:end="311:56"><name pos:start="311:5" pos:end="311:26"><name pos:start="311:5" pos:end="311:10">cuinfo</name><operator pos:start="311:11" pos:end="311:11">.</operator><name pos:start="311:12" pos:end="311:26">ulCreationFlags</name></name> <operator pos:start="311:28" pos:end="311:28">=</operator> <name pos:start="311:30" pos:end="311:56">cudaVideoCreate_PreferCUVID</name></expr>;</expr_stmt>

    <expr_stmt pos:start="313:5" pos:end="313:58"><expr pos:start="313:5" pos:end="313:57"><name pos:start="313:5" pos:end="313:25"><name pos:start="313:5" pos:end="313:10">cuinfo</name><operator pos:start="313:11" pos:end="313:11">.</operator><name pos:start="313:12" pos:end="313:25">bitDepthMinus8</name></name> <operator pos:start="313:27" pos:end="313:27">=</operator> <name pos:start="313:29" pos:end="313:57"><name pos:start="313:29" pos:end="313:34">format</name><operator pos:start="313:35" pos:end="313:36">-&gt;</operator><name pos:start="313:37" pos:end="313:57">bit_depth_luma_minus8</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="317:5" pos:end="325:5"><if pos:start="317:5" pos:end="321:5">if <condition pos:start="317:8" pos:end="317:37">(<expr pos:start="317:9" pos:end="317:36"><name pos:start="317:9" pos:end="317:36"><name pos:start="317:9" pos:end="317:14">format</name><operator pos:start="317:15" pos:end="317:16">-&gt;</operator><name pos:start="317:17" pos:end="317:36">progressive_sequence</name></name></expr>)</condition> <block pos:start="317:39" pos:end="321:5">{<block_content pos:start="319:9" pos:end="319:82">

        <expr_stmt pos:start="319:9" pos:end="319:82"><expr pos:start="319:9" pos:end="319:81"><name pos:start="319:9" pos:end="319:23"><name pos:start="319:9" pos:end="319:11">ctx</name><operator pos:start="319:12" pos:end="319:13">-&gt;</operator><name pos:start="319:14" pos:end="319:23">deint_mode</name></name> <operator pos:start="319:25" pos:end="319:25">=</operator> <name pos:start="319:27" pos:end="319:48"><name pos:start="319:27" pos:end="319:32">cuinfo</name><operator pos:start="319:33" pos:end="319:33">.</operator><name pos:start="319:34" pos:end="319:48">DeinterlaceMode</name></name> <operator pos:start="319:50" pos:end="319:50">=</operator> <name pos:start="319:52" pos:end="319:81">cudaVideoDeinterlaceMode_Weave</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="321:7" pos:end="325:5">else <block pos:start="321:12" pos:end="325:5">{<block_content pos:start="323:9" pos:end="323:49">

        <expr_stmt pos:start="323:9" pos:end="323:49"><expr pos:start="323:9" pos:end="323:48"><name pos:start="323:9" pos:end="323:30"><name pos:start="323:9" pos:end="323:14">cuinfo</name><operator pos:start="323:15" pos:end="323:15">.</operator><name pos:start="323:16" pos:end="323:30">DeinterlaceMode</name></name> <operator pos:start="323:32" pos:end="323:32">=</operator> <name pos:start="323:34" pos:end="323:48"><name pos:start="323:34" pos:end="323:36">ctx</name><operator pos:start="323:37" pos:end="323:38">-&gt;</operator><name pos:start="323:39" pos:end="323:48">deint_mode</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="329:5" pos:end="331:74"><if pos:start="329:5" pos:end="331:74">if <condition pos:start="329:8" pos:end="329:58">(<expr pos:start="329:9" pos:end="329:57"><name pos:start="329:9" pos:end="329:23"><name pos:start="329:9" pos:end="329:11">ctx</name><operator pos:start="329:12" pos:end="329:13">-&gt;</operator><name pos:start="329:14" pos:end="329:23">deint_mode</name></name> <operator pos:start="329:25" pos:end="329:26">!=</operator> <name pos:start="329:28" pos:end="329:57">cudaVideoDeinterlaceMode_Weave</name></expr>)</condition><block type="pseudo" pos:start="331:9" pos:end="331:74"><block_content pos:start="331:9" pos:end="331:74">

        <expr_stmt pos:start="331:9" pos:end="331:74"><expr pos:start="331:9" pos:end="331:73"><name pos:start="331:9" pos:end="331:24"><name pos:start="331:9" pos:end="331:13">avctx</name><operator pos:start="331:14" pos:end="331:15">-&gt;</operator><name pos:start="331:16" pos:end="331:24">framerate</name></name> <operator pos:start="331:26" pos:end="331:26">=</operator> <macro pos:start="331:28" pos:end="331:73"><name pos:start="331:28" pos:end="331:35">av_mul_q</name><argument_list pos:start="331:36" pos:end="331:73">(<argument pos:start="331:37" pos:end="331:52">avctx-&gt;framerate</argument>, <argument pos:start="331:55" pos:end="331:68">(AVRational){<literal type="number" pos:start="331:68" pos:end="331:68">2</literal></argument>, <argument pos:start="331:71" pos:end="331:72"><literal type="number" pos:start="331:71" pos:end="331:71">1</literal>}</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="335:5" pos:end="335:92"><expr pos:start="335:5" pos:end="335:91"><name pos:start="335:5" pos:end="335:23"><name pos:start="335:5" pos:end="335:7">ctx</name><operator pos:start="335:8" pos:end="335:9">-&gt;</operator><name pos:start="335:10" pos:end="335:23">internal_error</name></name> <operator pos:start="335:25" pos:end="335:25">=</operator> <call pos:start="335:27" pos:end="335:91"><name pos:start="335:27" pos:end="335:34">CHECK_CU</name><argument_list pos:start="335:35" pos:end="335:91">(<argument pos:start="335:36" pos:end="335:90"><expr pos:start="335:36" pos:end="335:90"><call pos:start="335:36" pos:end="335:90"><name pos:start="335:36" pos:end="335:64"><name pos:start="335:36" pos:end="335:38">ctx</name><operator pos:start="335:39" pos:end="335:40">-&gt;</operator><name pos:start="335:41" pos:end="335:44">cvdl</name><operator pos:start="335:45" pos:end="335:46">-&gt;</operator><name pos:start="335:47" pos:end="335:64">cuvidCreateDecoder</name></name><argument_list pos:start="335:65" pos:end="335:90">(<argument pos:start="335:66" pos:end="335:80"><expr pos:start="335:66" pos:end="335:80"><operator pos:start="335:66" pos:end="335:66">&amp;</operator><name pos:start="335:67" pos:end="335:80"><name pos:start="335:67" pos:end="335:69">ctx</name><operator pos:start="335:70" pos:end="335:71">-&gt;</operator><name pos:start="335:72" pos:end="335:80">cudecoder</name></name></expr></argument>, <argument pos:start="335:83" pos:end="335:89"><expr pos:start="335:83" pos:end="335:89"><operator pos:start="335:83" pos:end="335:83">&amp;</operator><name pos:start="335:84" pos:end="335:89">cuinfo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="337:5" pos:end="339:17"><if pos:start="337:5" pos:end="339:17">if <condition pos:start="337:8" pos:end="337:32">(<expr pos:start="337:9" pos:end="337:31"><name pos:start="337:9" pos:end="337:27"><name pos:start="337:9" pos:end="337:11">ctx</name><operator pos:start="337:12" pos:end="337:13">-&gt;</operator><name pos:start="337:14" pos:end="337:27">internal_error</name></name> <operator pos:start="337:29" pos:end="337:29">&lt;</operator> <literal type="number" pos:start="337:31" pos:end="337:31">0</literal></expr>)</condition><block type="pseudo" pos:start="339:9" pos:end="339:17"><block_content pos:start="339:9" pos:end="339:17">

        <return pos:start="339:9" pos:end="339:17">return <expr pos:start="339:16" pos:end="339:16"><literal type="number" pos:start="339:16" pos:end="339:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="343:5" pos:end="363:5"><if pos:start="343:5" pos:end="363:5">if <condition pos:start="343:8" pos:end="343:27">(<expr pos:start="343:9" pos:end="343:26"><operator pos:start="343:9" pos:end="343:9">!</operator><name pos:start="343:10" pos:end="343:26"><name pos:start="343:10" pos:end="343:20">hwframe_ctx</name><operator pos:start="343:21" pos:end="343:22">-&gt;</operator><name pos:start="343:23" pos:end="343:26">pool</name></name></expr>)</condition> <block pos:start="343:29" pos:end="363:5">{<block_content pos:start="345:9" pos:end="361:9">

        <expr_stmt pos:start="345:9" pos:end="345:46"><expr pos:start="345:9" pos:end="345:45"><name pos:start="345:9" pos:end="345:27"><name pos:start="345:9" pos:end="345:19">hwframe_ctx</name><operator pos:start="345:20" pos:end="345:21">-&gt;</operator><name pos:start="345:22" pos:end="345:27">format</name></name> <operator pos:start="345:29" pos:end="345:29">=</operator> <name pos:start="345:31" pos:end="345:45">AV_PIX_FMT_CUDA</name></expr>;</expr_stmt>

        <expr_stmt pos:start="347:9" pos:end="347:51"><expr pos:start="347:9" pos:end="347:50"><name pos:start="347:9" pos:end="347:30"><name pos:start="347:9" pos:end="347:19">hwframe_ctx</name><operator pos:start="347:20" pos:end="347:21">-&gt;</operator><name pos:start="347:22" pos:end="347:30">sw_format</name></name> <operator pos:start="347:32" pos:end="347:32">=</operator> <name pos:start="347:34" pos:end="347:50"><name pos:start="347:34" pos:end="347:38">avctx</name><operator pos:start="347:39" pos:end="347:40">-&gt;</operator><name pos:start="347:41" pos:end="347:50">sw_pix_fmt</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="349:9" pos:end="349:42"><expr pos:start="349:9" pos:end="349:41"><name pos:start="349:9" pos:end="349:26"><name pos:start="349:9" pos:end="349:19">hwframe_ctx</name><operator pos:start="349:20" pos:end="349:21">-&gt;</operator><name pos:start="349:22" pos:end="349:26">width</name></name> <operator pos:start="349:28" pos:end="349:28">=</operator> <name pos:start="349:30" pos:end="349:41"><name pos:start="349:30" pos:end="349:34">avctx</name><operator pos:start="349:35" pos:end="349:36">-&gt;</operator><name pos:start="349:37" pos:end="349:41">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:44"><expr pos:start="351:9" pos:end="351:43"><name pos:start="351:9" pos:end="351:27"><name pos:start="351:9" pos:end="351:19">hwframe_ctx</name><operator pos:start="351:20" pos:end="351:21">-&gt;</operator><name pos:start="351:22" pos:end="351:27">height</name></name> <operator pos:start="351:29" pos:end="351:29">=</operator> <name pos:start="351:31" pos:end="351:43"><name pos:start="351:31" pos:end="351:35">avctx</name><operator pos:start="351:36" pos:end="351:37">-&gt;</operator><name pos:start="351:38" pos:end="351:43">height</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="355:9" pos:end="361:9"><if pos:start="355:9" pos:end="361:9">if <condition pos:start="355:12" pos:end="355:74">(<expr pos:start="355:13" pos:end="355:73"><operator pos:start="355:13" pos:end="355:13">(</operator><name pos:start="355:14" pos:end="355:32"><name pos:start="355:14" pos:end="355:16">ctx</name><operator pos:start="355:17" pos:end="355:18">-&gt;</operator><name pos:start="355:19" pos:end="355:32">internal_error</name></name> <operator pos:start="355:34" pos:end="355:34">=</operator> <call pos:start="355:36" pos:end="355:68"><name pos:start="355:36" pos:end="355:54">av_hwframe_ctx_init</name><argument_list pos:start="355:55" pos:end="355:68">(<argument pos:start="355:56" pos:end="355:67"><expr pos:start="355:56" pos:end="355:67"><name pos:start="355:56" pos:end="355:67"><name pos:start="355:56" pos:end="355:58">ctx</name><operator pos:start="355:59" pos:end="355:60">-&gt;</operator><name pos:start="355:61" pos:end="355:67">hwframe</name></name></expr></argument>)</argument_list></call><operator pos:start="355:69" pos:end="355:69">)</operator> <operator pos:start="355:71" pos:end="355:71">&lt;</operator> <literal type="number" pos:start="355:73" pos:end="355:73">0</literal></expr>)</condition> <block pos:start="355:76" pos:end="361:9">{<block_content pos:start="357:13" pos:end="359:21">

            <expr_stmt pos:start="357:13" pos:end="357:72"><expr pos:start="357:13" pos:end="357:71"><call pos:start="357:13" pos:end="357:71"><name pos:start="357:13" pos:end="357:18">av_log</name><argument_list pos:start="357:19" pos:end="357:71">(<argument pos:start="357:20" pos:end="357:24"><expr pos:start="357:20" pos:end="357:24"><name pos:start="357:20" pos:end="357:24">avctx</name></expr></argument>, <argument pos:start="357:27" pos:end="357:38"><expr pos:start="357:27" pos:end="357:38"><name pos:start="357:27" pos:end="357:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="357:41" pos:end="357:70"><expr pos:start="357:41" pos:end="357:70"><literal type="string" pos:start="357:41" pos:end="357:70">"av_hwframe_ctx_init failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="359:13" pos:end="359:21">return <expr pos:start="359:20" pos:end="359:20"><literal type="number" pos:start="359:20" pos:end="359:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="367:5" pos:end="367:13">return <expr pos:start="367:12" pos:end="367:12"><literal type="number" pos:start="367:12" pos:end="367:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
