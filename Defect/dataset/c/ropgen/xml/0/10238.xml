<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10238.c" pos:tabs="8"><function pos:start="1:1" pos:end="805:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">ide_ioport_write</name><parameter_list pos:start="1:29" pos:end="1:71">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:51">uint32_t</name></type> <name pos:start="1:53" pos:end="1:56">addr</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:70"><decl pos:start="1:59" pos:end="1:70"><type pos:start="1:59" pos:end="1:70"><name pos:start="1:59" pos:end="1:66">uint32_t</name></type> <name pos:start="1:68" pos:end="1:70">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="805:1">{<block_content pos:start="5:5" pos:end="803:5">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">IDEState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:20">ide_if</name> <init pos:start="5:22" pos:end="5:29">= <expr pos:start="5:24" pos:end="5:29"><name pos:start="5:24" pos:end="5:29">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">IDEState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">unit</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="16:0"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">lba48</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr></init></decl>;</decl_stmt>



<cpp:ifdef pos:start="15:1" pos:end="15:16">#<cpp:directive pos:start="15:2" pos:end="15:6">ifdef</cpp:directive> <name pos:start="15:8" pos:end="15:16">DEBUG_IDE</name></cpp:ifdef>

    <expr_stmt pos:start="17:5" pos:end="20:0"><expr pos:start="17:5" pos:end="17:58"><call pos:start="17:5" pos:end="17:58"><name pos:start="17:5" pos:end="17:10">printf</name><argument_list pos:start="17:11" pos:end="17:58">(<argument pos:start="17:12" pos:end="17:46"><expr pos:start="17:12" pos:end="17:46"><literal type="string" pos:start="17:12" pos:end="17:46">"IDE: write addr=0x%x val=0x%02x\n"</literal></expr></argument>, <argument pos:start="17:49" pos:end="17:52"><expr pos:start="17:49" pos:end="17:52"><name pos:start="17:49" pos:end="17:52">addr</name></expr></argument>, <argument pos:start="17:55" pos:end="17:57"><expr pos:start="17:55" pos:end="17:57"><name pos:start="17:55" pos:end="17:57">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="23:5" pos:end="23:14"><expr pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:8">addr</name> <operator pos:start="23:10" pos:end="23:11">&amp;=</operator> <literal type="number" pos:start="23:13" pos:end="23:13">7</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:73">/* ignore writes to command block while busy with previous command */</comment>

    <if_stmt pos:start="29:5" pos:end="31:15"><if pos:start="29:5" pos:end="31:15">if <condition pos:start="29:8" pos:end="29:72">(<expr pos:start="29:9" pos:end="29:71"><name pos:start="29:9" pos:end="29:12">addr</name> <operator pos:start="29:14" pos:end="29:15">!=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">7</literal> <operator pos:start="29:19" pos:end="29:20">&amp;&amp;</operator> <operator pos:start="29:22" pos:end="29:22">(</operator><name pos:start="29:23" pos:end="29:47"><name pos:start="29:23" pos:end="29:28">ide_if</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:39">cur_drive</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:47">status</name></name> <operator pos:start="29:49" pos:end="29:49">&amp;</operator> <operator pos:start="29:51" pos:end="29:51">(</operator><name pos:start="29:52" pos:end="29:60">BUSY_STAT</name><operator pos:start="29:61" pos:end="29:61">|</operator><name pos:start="29:62" pos:end="29:69">DRQ_STAT</name><operator pos:start="29:70" pos:end="29:70">)</operator><operator pos:start="29:71" pos:end="29:71">)</operator></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:15"><block_content pos:start="31:9" pos:end="31:15">

        <return pos:start="31:9" pos:end="31:15">return;</return></block_content></block></if></if_stmt>



    <switch pos:start="35:5" pos:end="803:5">switch<condition pos:start="35:11" pos:end="35:16">(<expr pos:start="35:12" pos:end="35:15"><name pos:start="35:12" pos:end="35:15">addr</name></expr>)</condition> <block pos:start="35:18" pos:end="803:5">{<block_content pos:start="37:5" pos:end="801:9">

    <case pos:start="37:5" pos:end="37:11">case <expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">0</literal></expr>:</case>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:11">case <expr pos:start="41:10" pos:end="41:10"><literal type="number" pos:start="41:10" pos:end="41:10">1</literal></expr>:</case>

	<expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><call pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:21">ide_clear_hob</name><argument_list pos:start="43:22" pos:end="43:29">(<argument pos:start="43:23" pos:end="43:28"><expr pos:start="43:23" pos:end="43:28"><name pos:start="43:23" pos:end="43:28">ide_if</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="45:9" pos:end="45:53">/* NOTE: data is written to the two drives */</comment>

	<expr_stmt pos:start="47:9" pos:end="47:50"><expr pos:start="47:9" pos:end="47:49"><name pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:14">ide_if</name><index pos:start="47:15" pos:end="47:17">[<expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>]</index></name><operator pos:start="47:18" pos:end="47:18">.</operator><name pos:start="47:19" pos:end="47:29">hob_feature</name> <operator pos:start="47:31" pos:end="47:31">=</operator> <name pos:start="47:33" pos:end="47:41"><name pos:start="47:33" pos:end="47:38">ide_if</name><index pos:start="47:39" pos:end="47:41">[<expr pos:start="47:40" pos:end="47:40"><literal type="number" pos:start="47:40" pos:end="47:40">0</literal></expr>]</index></name><operator pos:start="47:42" pos:end="47:42">.</operator><name pos:start="47:43" pos:end="47:49">feature</name></expr>;</expr_stmt>

	<expr_stmt pos:start="49:9" pos:end="49:50"><expr pos:start="49:9" pos:end="49:49"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:14">ide_if</name><index pos:start="49:15" pos:end="49:17">[<expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">1</literal></expr>]</index></name><operator pos:start="49:18" pos:end="49:18">.</operator><name pos:start="49:19" pos:end="49:29">hob_feature</name> <operator pos:start="49:31" pos:end="49:31">=</operator> <name pos:start="49:33" pos:end="49:41"><name pos:start="49:33" pos:end="49:38">ide_if</name><index pos:start="49:39" pos:end="49:41">[<expr pos:start="49:40" pos:end="49:40"><literal type="number" pos:start="49:40" pos:end="49:40">1</literal></expr>]</index></name><operator pos:start="49:42" pos:end="49:42">.</operator><name pos:start="49:43" pos:end="49:49">feature</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:32"><expr pos:start="51:9" pos:end="51:31"><name pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:14">ide_if</name><index pos:start="51:15" pos:end="51:17">[<expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">0</literal></expr>]</index></name><operator pos:start="51:18" pos:end="51:18">.</operator><name pos:start="51:19" pos:end="51:25">feature</name> <operator pos:start="51:27" pos:end="51:27">=</operator> <name pos:start="51:29" pos:end="51:31">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:32"><expr pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:14">ide_if</name><index pos:start="53:15" pos:end="53:17">[<expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">1</literal></expr>]</index></name><operator pos:start="53:18" pos:end="53:18">.</operator><name pos:start="53:19" pos:end="53:25">feature</name> <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:31">val</name></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:11">case <expr pos:start="57:10" pos:end="57:10"><literal type="number" pos:start="57:10" pos:end="57:10">2</literal></expr>:</case>

	<expr_stmt pos:start="59:9" pos:end="59:30"><expr pos:start="59:9" pos:end="59:29"><call pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:21">ide_clear_hob</name><argument_list pos:start="59:22" pos:end="59:29">(<argument pos:start="59:23" pos:end="59:28"><expr pos:start="59:23" pos:end="59:28"><name pos:start="59:23" pos:end="59:28">ide_if</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="61:9" pos:end="61:50"><expr pos:start="61:9" pos:end="61:49"><name pos:start="61:9" pos:end="61:17"><name pos:start="61:9" pos:end="61:14">ide_if</name><index pos:start="61:15" pos:end="61:17">[<expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>]</index></name><operator pos:start="61:18" pos:end="61:18">.</operator><name pos:start="61:19" pos:end="61:29">hob_nsector</name> <operator pos:start="61:31" pos:end="61:31">=</operator> <name pos:start="61:33" pos:end="61:41"><name pos:start="61:33" pos:end="61:38">ide_if</name><index pos:start="61:39" pos:end="61:41">[<expr pos:start="61:40" pos:end="61:40"><literal type="number" pos:start="61:40" pos:end="61:40">0</literal></expr>]</index></name><operator pos:start="61:42" pos:end="61:42">.</operator><name pos:start="61:43" pos:end="61:49">nsector</name></expr>;</expr_stmt>

	<expr_stmt pos:start="63:9" pos:end="63:50"><expr pos:start="63:9" pos:end="63:49"><name pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:14">ide_if</name><index pos:start="63:15" pos:end="63:17">[<expr pos:start="63:16" pos:end="63:16"><literal type="number" pos:start="63:16" pos:end="63:16">1</literal></expr>]</index></name><operator pos:start="63:18" pos:end="63:18">.</operator><name pos:start="63:19" pos:end="63:29">hob_nsector</name> <operator pos:start="63:31" pos:end="63:31">=</operator> <name pos:start="63:33" pos:end="63:41"><name pos:start="63:33" pos:end="63:38">ide_if</name><index pos:start="63:39" pos:end="63:41">[<expr pos:start="63:40" pos:end="63:40"><literal type="number" pos:start="63:40" pos:end="63:40">1</literal></expr>]</index></name><operator pos:start="63:42" pos:end="63:42">.</operator><name pos:start="63:43" pos:end="63:49">nsector</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:32"><expr pos:start="65:9" pos:end="65:31"><name pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:14">ide_if</name><index pos:start="65:15" pos:end="65:17">[<expr pos:start="65:16" pos:end="65:16"><literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>]</index></name><operator pos:start="65:18" pos:end="65:18">.</operator><name pos:start="65:19" pos:end="65:25">nsector</name> <operator pos:start="65:27" pos:end="65:27">=</operator> <name pos:start="65:29" pos:end="65:31">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:32"><expr pos:start="67:9" pos:end="67:31"><name pos:start="67:9" pos:end="67:17"><name pos:start="67:9" pos:end="67:14">ide_if</name><index pos:start="67:15" pos:end="67:17">[<expr pos:start="67:16" pos:end="67:16"><literal type="number" pos:start="67:16" pos:end="67:16">1</literal></expr>]</index></name><operator pos:start="67:18" pos:end="67:18">.</operator><name pos:start="67:19" pos:end="67:25">nsector</name> <operator pos:start="67:27" pos:end="67:27">=</operator> <name pos:start="67:29" pos:end="67:31">val</name></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:11">case <expr pos:start="71:10" pos:end="71:10"><literal type="number" pos:start="71:10" pos:end="71:10">3</literal></expr>:</case>

	<expr_stmt pos:start="73:9" pos:end="73:30"><expr pos:start="73:9" pos:end="73:29"><call pos:start="73:9" pos:end="73:29"><name pos:start="73:9" pos:end="73:21">ide_clear_hob</name><argument_list pos:start="73:22" pos:end="73:29">(<argument pos:start="73:23" pos:end="73:28"><expr pos:start="73:23" pos:end="73:28"><name pos:start="73:23" pos:end="73:28">ide_if</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="75:9" pos:end="75:48"><expr pos:start="75:9" pos:end="75:47"><name pos:start="75:9" pos:end="75:17"><name pos:start="75:9" pos:end="75:14">ide_if</name><index pos:start="75:15" pos:end="75:17">[<expr pos:start="75:16" pos:end="75:16"><literal type="number" pos:start="75:16" pos:end="75:16">0</literal></expr>]</index></name><operator pos:start="75:18" pos:end="75:18">.</operator><name pos:start="75:19" pos:end="75:28">hob_sector</name> <operator pos:start="75:30" pos:end="75:30">=</operator> <name pos:start="75:32" pos:end="75:40"><name pos:start="75:32" pos:end="75:37">ide_if</name><index pos:start="75:38" pos:end="75:40">[<expr pos:start="75:39" pos:end="75:39"><literal type="number" pos:start="75:39" pos:end="75:39">0</literal></expr>]</index></name><operator pos:start="75:41" pos:end="75:41">.</operator><name pos:start="75:42" pos:end="75:47">sector</name></expr>;</expr_stmt>

	<expr_stmt pos:start="77:9" pos:end="77:48"><expr pos:start="77:9" pos:end="77:47"><name pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:14">ide_if</name><index pos:start="77:15" pos:end="77:17">[<expr pos:start="77:16" pos:end="77:16"><literal type="number" pos:start="77:16" pos:end="77:16">1</literal></expr>]</index></name><operator pos:start="77:18" pos:end="77:18">.</operator><name pos:start="77:19" pos:end="77:28">hob_sector</name> <operator pos:start="77:30" pos:end="77:30">=</operator> <name pos:start="77:32" pos:end="77:40"><name pos:start="77:32" pos:end="77:37">ide_if</name><index pos:start="77:38" pos:end="77:40">[<expr pos:start="77:39" pos:end="77:39"><literal type="number" pos:start="77:39" pos:end="77:39">1</literal></expr>]</index></name><operator pos:start="77:41" pos:end="77:41">.</operator><name pos:start="77:42" pos:end="77:47">sector</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:31"><expr pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:17"><name pos:start="79:9" pos:end="79:14">ide_if</name><index pos:start="79:15" pos:end="79:17">[<expr pos:start="79:16" pos:end="79:16"><literal type="number" pos:start="79:16" pos:end="79:16">0</literal></expr>]</index></name><operator pos:start="79:18" pos:end="79:18">.</operator><name pos:start="79:19" pos:end="79:24">sector</name> <operator pos:start="79:26" pos:end="79:26">=</operator> <name pos:start="79:28" pos:end="79:30">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:31"><expr pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:14">ide_if</name><index pos:start="81:15" pos:end="81:17">[<expr pos:start="81:16" pos:end="81:16"><literal type="number" pos:start="81:16" pos:end="81:16">1</literal></expr>]</index></name><operator pos:start="81:18" pos:end="81:18">.</operator><name pos:start="81:19" pos:end="81:24">sector</name> <operator pos:start="81:26" pos:end="81:26">=</operator> <name pos:start="81:28" pos:end="81:30">val</name></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:11">case <expr pos:start="85:10" pos:end="85:10"><literal type="number" pos:start="85:10" pos:end="85:10">4</literal></expr>:</case>

	<expr_stmt pos:start="87:9" pos:end="87:30"><expr pos:start="87:9" pos:end="87:29"><call pos:start="87:9" pos:end="87:29"><name pos:start="87:9" pos:end="87:21">ide_clear_hob</name><argument_list pos:start="87:22" pos:end="87:29">(<argument pos:start="87:23" pos:end="87:28"><expr pos:start="87:23" pos:end="87:28"><name pos:start="87:23" pos:end="87:28">ide_if</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="89:9" pos:end="89:44"><expr pos:start="89:9" pos:end="89:43"><name pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:14">ide_if</name><index pos:start="89:15" pos:end="89:17">[<expr pos:start="89:16" pos:end="89:16"><literal type="number" pos:start="89:16" pos:end="89:16">0</literal></expr>]</index></name><operator pos:start="89:18" pos:end="89:18">.</operator><name pos:start="89:19" pos:end="89:26">hob_lcyl</name> <operator pos:start="89:28" pos:end="89:28">=</operator> <name pos:start="89:30" pos:end="89:38"><name pos:start="89:30" pos:end="89:35">ide_if</name><index pos:start="89:36" pos:end="89:38">[<expr pos:start="89:37" pos:end="89:37"><literal type="number" pos:start="89:37" pos:end="89:37">0</literal></expr>]</index></name><operator pos:start="89:39" pos:end="89:39">.</operator><name pos:start="89:40" pos:end="89:43">lcyl</name></expr>;</expr_stmt>

	<expr_stmt pos:start="91:9" pos:end="91:44"><expr pos:start="91:9" pos:end="91:43"><name pos:start="91:9" pos:end="91:17"><name pos:start="91:9" pos:end="91:14">ide_if</name><index pos:start="91:15" pos:end="91:17">[<expr pos:start="91:16" pos:end="91:16"><literal type="number" pos:start="91:16" pos:end="91:16">1</literal></expr>]</index></name><operator pos:start="91:18" pos:end="91:18">.</operator><name pos:start="91:19" pos:end="91:26">hob_lcyl</name> <operator pos:start="91:28" pos:end="91:28">=</operator> <name pos:start="91:30" pos:end="91:38"><name pos:start="91:30" pos:end="91:35">ide_if</name><index pos:start="91:36" pos:end="91:38">[<expr pos:start="91:37" pos:end="91:37"><literal type="number" pos:start="91:37" pos:end="91:37">1</literal></expr>]</index></name><operator pos:start="91:39" pos:end="91:39">.</operator><name pos:start="91:40" pos:end="91:43">lcyl</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:29"><expr pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:17"><name pos:start="93:9" pos:end="93:14">ide_if</name><index pos:start="93:15" pos:end="93:17">[<expr pos:start="93:16" pos:end="93:16"><literal type="number" pos:start="93:16" pos:end="93:16">0</literal></expr>]</index></name><operator pos:start="93:18" pos:end="93:18">.</operator><name pos:start="93:19" pos:end="93:22">lcyl</name> <operator pos:start="93:24" pos:end="93:24">=</operator> <name pos:start="93:26" pos:end="93:28">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:29"><expr pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:17"><name pos:start="95:9" pos:end="95:14">ide_if</name><index pos:start="95:15" pos:end="95:17">[<expr pos:start="95:16" pos:end="95:16"><literal type="number" pos:start="95:16" pos:end="95:16">1</literal></expr>]</index></name><operator pos:start="95:18" pos:end="95:18">.</operator><name pos:start="95:19" pos:end="95:22">lcyl</name> <operator pos:start="95:24" pos:end="95:24">=</operator> <name pos:start="95:26" pos:end="95:28">val</name></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:11">case <expr pos:start="99:10" pos:end="99:10"><literal type="number" pos:start="99:10" pos:end="99:10">5</literal></expr>:</case>

	<expr_stmt pos:start="101:9" pos:end="101:30"><expr pos:start="101:9" pos:end="101:29"><call pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:21">ide_clear_hob</name><argument_list pos:start="101:22" pos:end="101:29">(<argument pos:start="101:23" pos:end="101:28"><expr pos:start="101:23" pos:end="101:28"><name pos:start="101:23" pos:end="101:28">ide_if</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="103:9" pos:end="103:44"><expr pos:start="103:9" pos:end="103:43"><name pos:start="103:9" pos:end="103:17"><name pos:start="103:9" pos:end="103:14">ide_if</name><index pos:start="103:15" pos:end="103:17">[<expr pos:start="103:16" pos:end="103:16"><literal type="number" pos:start="103:16" pos:end="103:16">0</literal></expr>]</index></name><operator pos:start="103:18" pos:end="103:18">.</operator><name pos:start="103:19" pos:end="103:26">hob_hcyl</name> <operator pos:start="103:28" pos:end="103:28">=</operator> <name pos:start="103:30" pos:end="103:38"><name pos:start="103:30" pos:end="103:35">ide_if</name><index pos:start="103:36" pos:end="103:38">[<expr pos:start="103:37" pos:end="103:37"><literal type="number" pos:start="103:37" pos:end="103:37">0</literal></expr>]</index></name><operator pos:start="103:39" pos:end="103:39">.</operator><name pos:start="103:40" pos:end="103:43">hcyl</name></expr>;</expr_stmt>

	<expr_stmt pos:start="105:9" pos:end="105:44"><expr pos:start="105:9" pos:end="105:43"><name pos:start="105:9" pos:end="105:17"><name pos:start="105:9" pos:end="105:14">ide_if</name><index pos:start="105:15" pos:end="105:17">[<expr pos:start="105:16" pos:end="105:16"><literal type="number" pos:start="105:16" pos:end="105:16">1</literal></expr>]</index></name><operator pos:start="105:18" pos:end="105:18">.</operator><name pos:start="105:19" pos:end="105:26">hob_hcyl</name> <operator pos:start="105:28" pos:end="105:28">=</operator> <name pos:start="105:30" pos:end="105:38"><name pos:start="105:30" pos:end="105:35">ide_if</name><index pos:start="105:36" pos:end="105:38">[<expr pos:start="105:37" pos:end="105:37"><literal type="number" pos:start="105:37" pos:end="105:37">1</literal></expr>]</index></name><operator pos:start="105:39" pos:end="105:39">.</operator><name pos:start="105:40" pos:end="105:43">hcyl</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:29"><expr pos:start="107:9" pos:end="107:28"><name pos:start="107:9" pos:end="107:17"><name pos:start="107:9" pos:end="107:14">ide_if</name><index pos:start="107:15" pos:end="107:17">[<expr pos:start="107:16" pos:end="107:16"><literal type="number" pos:start="107:16" pos:end="107:16">0</literal></expr>]</index></name><operator pos:start="107:18" pos:end="107:18">.</operator><name pos:start="107:19" pos:end="107:22">hcyl</name> <operator pos:start="107:24" pos:end="107:24">=</operator> <name pos:start="107:26" pos:end="107:28">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:29"><expr pos:start="109:9" pos:end="109:28"><name pos:start="109:9" pos:end="109:17"><name pos:start="109:9" pos:end="109:14">ide_if</name><index pos:start="109:15" pos:end="109:17">[<expr pos:start="109:16" pos:end="109:16"><literal type="number" pos:start="109:16" pos:end="109:16">1</literal></expr>]</index></name><operator pos:start="109:18" pos:end="109:18">.</operator><name pos:start="109:19" pos:end="109:22">hcyl</name> <operator pos:start="109:24" pos:end="109:24">=</operator> <name pos:start="109:26" pos:end="109:28">val</name></expr>;</expr_stmt>

        <break pos:start="111:9" pos:end="111:14">break;</break>

    <case pos:start="113:5" pos:end="113:11">case <expr pos:start="113:10" pos:end="113:10"><literal type="number" pos:start="113:10" pos:end="113:10">6</literal></expr>:</case>

	<comment type="block" pos:start="115:9" pos:end="115:44">/* FIXME: HOB readback uses bit 7 */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:48"><expr pos:start="117:9" pos:end="117:47"><name pos:start="117:9" pos:end="117:17"><name pos:start="117:9" pos:end="117:14">ide_if</name><index pos:start="117:15" pos:end="117:17">[<expr pos:start="117:16" pos:end="117:16"><literal type="number" pos:start="117:16" pos:end="117:16">0</literal></expr>]</index></name><operator pos:start="117:18" pos:end="117:18">.</operator><name pos:start="117:19" pos:end="117:24">select</name> <operator pos:start="117:26" pos:end="117:26">=</operator> <operator pos:start="117:28" pos:end="117:28">(</operator><name pos:start="117:29" pos:end="117:31">val</name> <operator pos:start="117:33" pos:end="117:33">&amp;</operator> <operator pos:start="117:35" pos:end="117:35">~</operator><literal type="number" pos:start="117:36" pos:end="117:39">0x10</literal><operator pos:start="117:40" pos:end="117:40">)</operator> <operator pos:start="117:42" pos:end="117:42">|</operator> <literal type="number" pos:start="117:44" pos:end="117:47">0xa0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:47"><expr pos:start="119:9" pos:end="119:46"><name pos:start="119:9" pos:end="119:17"><name pos:start="119:9" pos:end="119:14">ide_if</name><index pos:start="119:15" pos:end="119:17">[<expr pos:start="119:16" pos:end="119:16"><literal type="number" pos:start="119:16" pos:end="119:16">1</literal></expr>]</index></name><operator pos:start="119:18" pos:end="119:18">.</operator><name pos:start="119:19" pos:end="119:24">select</name> <operator pos:start="119:26" pos:end="119:26">=</operator> <operator pos:start="119:28" pos:end="119:28">(</operator><name pos:start="119:29" pos:end="119:31">val</name> <operator pos:start="119:33" pos:end="119:33">|</operator> <literal type="number" pos:start="119:35" pos:end="119:38">0x10</literal><operator pos:start="119:39" pos:end="119:39">)</operator> <operator pos:start="119:41" pos:end="119:41">|</operator> <literal type="number" pos:start="119:43" pos:end="119:46">0xa0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="121:9" pos:end="121:26">/* select drive */</comment>

        <expr_stmt pos:start="123:9" pos:end="123:30"><expr pos:start="123:9" pos:end="123:29"><name pos:start="123:9" pos:end="123:12">unit</name> <operator pos:start="123:14" pos:end="123:14">=</operator> <operator pos:start="123:16" pos:end="123:16">(</operator><name pos:start="123:17" pos:end="123:19">val</name> <operator pos:start="123:21" pos:end="123:22">&gt;&gt;</operator> <literal type="number" pos:start="123:24" pos:end="123:24">4</literal><operator pos:start="123:25" pos:end="123:25">)</operator> <operator pos:start="123:27" pos:end="123:27">&amp;</operator> <literal type="number" pos:start="123:29" pos:end="123:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:26"><expr pos:start="125:9" pos:end="125:25"><name pos:start="125:9" pos:end="125:9">s</name> <operator pos:start="125:11" pos:end="125:11">=</operator> <name pos:start="125:13" pos:end="125:18">ide_if</name> <operator pos:start="125:20" pos:end="125:20">+</operator> <name pos:start="125:22" pos:end="125:25">unit</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:30"><expr pos:start="127:9" pos:end="127:29"><name pos:start="127:9" pos:end="127:25"><name pos:start="127:9" pos:end="127:14">ide_if</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:25">cur_drive</name></name> <operator pos:start="127:27" pos:end="127:27">=</operator> <name pos:start="127:29" pos:end="127:29">s</name></expr>;</expr_stmt>

        <break pos:start="129:9" pos:end="129:14">break;</break>

    <default pos:start="131:5" pos:end="131:12">default:</default>

    <case pos:start="133:5" pos:end="138:0">case <expr pos:start="133:10" pos:end="133:10"><literal type="number" pos:start="133:10" pos:end="133:10">7</literal></expr>:</case>

        <comment type="block" pos:start="135:9" pos:end="135:21">/* command */</comment>

<cpp:if pos:start="137:1" pos:end="137:22">#<cpp:directive pos:start="137:2" pos:end="137:3">if</cpp:directive> <expr pos:start="137:5" pos:end="137:22"><call pos:start="137:5" pos:end="137:22"><name pos:start="137:5" pos:end="137:11">defined</name><argument_list pos:start="137:12" pos:end="137:22">(<argument pos:start="137:13" pos:end="137:21"><expr pos:start="137:13" pos:end="137:21"><name pos:start="137:13" pos:end="137:21">DEBUG_IDE</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="139:9" pos:end="142:0"><expr pos:start="139:9" pos:end="139:38"><call pos:start="139:9" pos:end="139:38"><name pos:start="139:9" pos:end="139:14">printf</name><argument_list pos:start="139:15" pos:end="139:38">(<argument pos:start="139:16" pos:end="139:32"><expr pos:start="139:16" pos:end="139:32"><literal type="string" pos:start="139:16" pos:end="139:32">"ide: CMD=%02x\n"</literal></expr></argument>, <argument pos:start="139:35" pos:end="139:37"><expr pos:start="139:35" pos:end="139:37"><name pos:start="139:35" pos:end="139:37">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="141:1" pos:end="141:6">#<cpp:directive pos:start="141:2" pos:end="141:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="143:9" pos:end="143:30"><expr pos:start="143:9" pos:end="143:29"><name pos:start="143:9" pos:end="143:9">s</name> <operator pos:start="143:11" pos:end="143:11">=</operator> <name pos:start="143:13" pos:end="143:29"><name pos:start="143:13" pos:end="143:18">ide_if</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:29">cur_drive</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="145:9" pos:end="145:51">/* ignore commands to non existant slave */</comment>

        <if_stmt pos:start="147:9" pos:end="149:18"><if pos:start="147:9" pos:end="149:18">if <condition pos:start="147:12" pos:end="147:34">(<expr pos:start="147:13" pos:end="147:33"><name pos:start="147:13" pos:end="147:13">s</name> <operator pos:start="147:15" pos:end="147:16">!=</operator> <name pos:start="147:18" pos:end="147:23">ide_if</name> <operator pos:start="147:25" pos:end="147:26">&amp;&amp;</operator> <operator pos:start="147:28" pos:end="147:28">!</operator><name pos:start="147:29" pos:end="147:33"><name pos:start="147:29" pos:end="147:29">s</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:33">bs</name></name></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:18"><block_content pos:start="149:13" pos:end="149:18">

            <break pos:start="149:13" pos:end="149:18">break;</break></block_content></block></if></if_stmt>



        <comment type="block" pos:start="153:9" pos:end="153:71">/* Only DEVICE RESET is allowed while BSY or/and DRQ are set */</comment>

        <if_stmt pos:start="155:9" pos:end="157:18"><if pos:start="155:9" pos:end="157:18">if <condition pos:start="155:12" pos:end="155:74">(<expr pos:start="155:13" pos:end="155:73"><operator pos:start="155:13" pos:end="155:13">(</operator><name pos:start="155:14" pos:end="155:22"><name pos:start="155:14" pos:end="155:14">s</name><operator pos:start="155:15" pos:end="155:16">-&gt;</operator><name pos:start="155:17" pos:end="155:22">status</name></name> <operator pos:start="155:24" pos:end="155:24">&amp;</operator> <operator pos:start="155:26" pos:end="155:26">(</operator><name pos:start="155:27" pos:end="155:35">BUSY_STAT</name><operator pos:start="155:36" pos:end="155:36">|</operator><name pos:start="155:37" pos:end="155:44">DRQ_STAT</name><operator pos:start="155:45" pos:end="155:45">)</operator><operator pos:start="155:46" pos:end="155:46">)</operator> <operator pos:start="155:48" pos:end="155:49">&amp;&amp;</operator> <name pos:start="155:51" pos:end="155:53">val</name> <operator pos:start="155:55" pos:end="155:56">!=</operator> <name pos:start="155:58" pos:end="155:73">WIN_DEVICE_RESET</name></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:18"><block_content pos:start="157:13" pos:end="157:18">

            <break pos:start="157:13" pos:end="157:18">break;</break></block_content></block></if></if_stmt>



        <switch pos:start="161:9" pos:end="801:9">switch<condition pos:start="161:15" pos:end="161:19">(<expr pos:start="161:16" pos:end="161:18"><name pos:start="161:16" pos:end="161:18">val</name></expr>)</condition> <block pos:start="161:21" pos:end="801:9">{<block_content pos:start="163:9" pos:end="799:18">

        <case pos:start="163:9" pos:end="163:26">case <expr pos:start="163:14" pos:end="163:25"><name pos:start="163:14" pos:end="163:25">WIN_IDENTIFY</name></expr>:</case>

            <if_stmt pos:start="165:13" pos:end="189:13"><if pos:start="165:13" pos:end="179:13">if <condition pos:start="165:16" pos:end="165:38">(<expr pos:start="165:17" pos:end="165:37"><name pos:start="165:17" pos:end="165:21"><name pos:start="165:17" pos:end="165:17">s</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:21">bs</name></name> <operator pos:start="165:23" pos:end="165:24">&amp;&amp;</operator> <operator pos:start="165:26" pos:end="165:26">!</operator><name pos:start="165:27" pos:end="165:37"><name pos:start="165:27" pos:end="165:27">s</name><operator pos:start="165:28" pos:end="165:29">-&gt;</operator><name pos:start="165:30" pos:end="165:37">is_cdrom</name></name></expr>)</condition> <block pos:start="165:40" pos:end="179:13">{<block_content pos:start="167:17" pos:end="177:76">

                <if_stmt pos:start="167:17" pos:end="173:42"><if pos:start="167:17" pos:end="169:36">if <condition pos:start="167:20" pos:end="167:30">(<expr pos:start="167:21" pos:end="167:29"><operator pos:start="167:21" pos:end="167:21">!</operator><name pos:start="167:22" pos:end="167:29"><name pos:start="167:22" pos:end="167:22">s</name><operator pos:start="167:23" pos:end="167:24">-&gt;</operator><name pos:start="167:25" pos:end="167:29">is_cf</name></name></expr>)</condition><block type="pseudo" pos:start="169:21" pos:end="169:36"><block_content pos:start="169:21" pos:end="169:36">

                    <expr_stmt pos:start="169:21" pos:end="169:36"><expr pos:start="169:21" pos:end="169:35"><call pos:start="169:21" pos:end="169:35"><name pos:start="169:21" pos:end="169:32">ide_identify</name><argument_list pos:start="169:33" pos:end="169:35">(<argument pos:start="169:34" pos:end="169:34"><expr pos:start="169:34" pos:end="169:34"><name pos:start="169:34" pos:end="169:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="171:17" pos:end="173:42">else<block type="pseudo" pos:start="173:21" pos:end="173:42"><block_content pos:start="173:21" pos:end="173:42">

                    <expr_stmt pos:start="173:21" pos:end="173:42"><expr pos:start="173:21" pos:end="173:41"><call pos:start="173:21" pos:end="173:41"><name pos:start="173:21" pos:end="173:38">ide_cfata_identify</name><argument_list pos:start="173:39" pos:end="173:41">(<argument pos:start="173:40" pos:end="173:40"><expr pos:start="173:40" pos:end="173:40"><name pos:start="173:40" pos:end="173:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:51"><expr pos:start="175:17" pos:end="175:50"><name pos:start="175:17" pos:end="175:25"><name pos:start="175:17" pos:end="175:17">s</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:25">status</name></name> <operator pos:start="175:27" pos:end="175:27">=</operator> <name pos:start="175:29" pos:end="175:38">READY_STAT</name> <operator pos:start="175:40" pos:end="175:40">|</operator> <name pos:start="175:42" pos:end="175:50">SEEK_STAT</name></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:76"><expr pos:start="177:17" pos:end="177:75"><call pos:start="177:17" pos:end="177:75"><name pos:start="177:17" pos:end="177:34">ide_transfer_start</name><argument_list pos:start="177:35" pos:end="177:75">(<argument pos:start="177:36" pos:end="177:36"><expr pos:start="177:36" pos:end="177:36"><name pos:start="177:36" pos:end="177:36">s</name></expr></argument>, <argument pos:start="177:39" pos:end="177:50"><expr pos:start="177:39" pos:end="177:50"><name pos:start="177:39" pos:end="177:50"><name pos:start="177:39" pos:end="177:39">s</name><operator pos:start="177:40" pos:end="177:41">-&gt;</operator><name pos:start="177:42" pos:end="177:50">io_buffer</name></name></expr></argument>, <argument pos:start="177:53" pos:end="177:55"><expr pos:start="177:53" pos:end="177:55"><literal type="number" pos:start="177:53" pos:end="177:55">512</literal></expr></argument>, <argument pos:start="177:58" pos:end="177:74"><expr pos:start="177:58" pos:end="177:74"><name pos:start="177:58" pos:end="177:74">ide_transfer_stop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="179:15" pos:end="189:13">else <block pos:start="179:20" pos:end="189:13">{<block_content pos:start="181:17" pos:end="187:37">

                <if_stmt pos:start="181:17" pos:end="185:17"><if pos:start="181:17" pos:end="185:17">if <condition pos:start="181:20" pos:end="181:32">(<expr pos:start="181:21" pos:end="181:31"><name pos:start="181:21" pos:end="181:31"><name pos:start="181:21" pos:end="181:21">s</name><operator pos:start="181:22" pos:end="181:23">-&gt;</operator><name pos:start="181:24" pos:end="181:31">is_cdrom</name></name></expr>)</condition> <block pos:start="181:34" pos:end="185:17">{<block_content pos:start="183:21" pos:end="183:41">

                    <expr_stmt pos:start="183:21" pos:end="183:41"><expr pos:start="183:21" pos:end="183:40"><call pos:start="183:21" pos:end="183:40"><name pos:start="183:21" pos:end="183:37">ide_set_signature</name><argument_list pos:start="183:38" pos:end="183:40">(<argument pos:start="183:39" pos:end="183:39"><expr pos:start="183:39" pos:end="183:39"><name pos:start="183:39" pos:end="183:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:37"><expr pos:start="187:17" pos:end="187:36"><call pos:start="187:17" pos:end="187:36"><name pos:start="187:17" pos:end="187:33">ide_abort_command</name><argument_list pos:start="187:34" pos:end="187:36">(<argument pos:start="187:35" pos:end="187:35"><expr pos:start="187:35" pos:end="187:35"><name pos:start="187:35" pos:end="187:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:27"><expr pos:start="191:13" pos:end="191:26"><call pos:start="191:13" pos:end="191:26"><name pos:start="191:13" pos:end="191:23">ide_set_irq</name><argument_list pos:start="191:24" pos:end="191:26">(<argument pos:start="191:25" pos:end="191:25"><expr pos:start="191:25" pos:end="191:25"><name pos:start="191:25" pos:end="191:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        <case pos:start="195:9" pos:end="195:25">case <expr pos:start="195:14" pos:end="195:24"><name pos:start="195:14" pos:end="195:24">WIN_SPECIFY</name></expr>:</case>

        <case pos:start="197:9" pos:end="197:23">case <expr pos:start="197:14" pos:end="197:22"><name pos:start="197:14" pos:end="197:22">WIN_RECAL</name></expr>:</case>

            <expr_stmt pos:start="199:13" pos:end="199:25"><expr pos:start="199:13" pos:end="199:24"><name pos:start="199:13" pos:end="199:20"><name pos:start="199:13" pos:end="199:13">s</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:20">error</name></name> <operator pos:start="199:22" pos:end="199:22">=</operator> <literal type="number" pos:start="199:24" pos:end="199:24">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:47"><expr pos:start="201:13" pos:end="201:46"><name pos:start="201:13" pos:end="201:21"><name pos:start="201:13" pos:end="201:13">s</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:21">status</name></name> <operator pos:start="201:23" pos:end="201:23">=</operator> <name pos:start="201:25" pos:end="201:34">READY_STAT</name> <operator pos:start="201:36" pos:end="201:36">|</operator> <name pos:start="201:38" pos:end="201:46">SEEK_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:27"><expr pos:start="203:13" pos:end="203:26"><call pos:start="203:13" pos:end="203:26"><name pos:start="203:13" pos:end="203:23">ide_set_irq</name><argument_list pos:start="203:24" pos:end="203:26">(<argument pos:start="203:25" pos:end="203:25"><expr pos:start="203:25" pos:end="203:25"><name pos:start="203:25" pos:end="203:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="205:13" pos:end="205:18">break;</break>

        <case pos:start="207:9" pos:end="207:25">case <expr pos:start="207:14" pos:end="207:24"><name pos:start="207:14" pos:end="207:24">WIN_SETMULT</name></expr>:</case>

            <if_stmt pos:start="209:13" pos:end="231:13"><if pos:start="209:13" pos:end="217:13">if <condition pos:start="209:16" pos:end="209:44">(<expr pos:start="209:17" pos:end="209:43"><name pos:start="209:17" pos:end="209:24"><name pos:start="209:17" pos:end="209:17">s</name><operator pos:start="209:18" pos:end="209:19">-&gt;</operator><name pos:start="209:20" pos:end="209:24">is_cf</name></name> <operator pos:start="209:26" pos:end="209:27">&amp;&amp;</operator> <name pos:start="209:29" pos:end="209:38"><name pos:start="209:29" pos:end="209:29">s</name><operator pos:start="209:30" pos:end="209:31">-&gt;</operator><name pos:start="209:32" pos:end="209:38">nsector</name></name> <operator pos:start="209:40" pos:end="209:41">==</operator> <literal type="number" pos:start="209:43" pos:end="209:43">0</literal></expr>)</condition> <block pos:start="209:46" pos:end="217:13">{<block_content pos:start="213:17" pos:end="215:51">

                <comment type="block" pos:start="211:17" pos:end="211:53">/* Disable Read and Write Multiple */</comment>

                <expr_stmt pos:start="213:17" pos:end="213:36"><expr pos:start="213:17" pos:end="213:35"><name pos:start="213:17" pos:end="213:31"><name pos:start="213:17" pos:end="213:17">s</name><operator pos:start="213:18" pos:end="213:19">-&gt;</operator><name pos:start="213:20" pos:end="213:31">mult_sectors</name></name> <operator pos:start="213:33" pos:end="213:33">=</operator> <literal type="number" pos:start="213:35" pos:end="213:35">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="215:17" pos:end="215:51"><expr pos:start="215:17" pos:end="215:50"><name pos:start="215:17" pos:end="215:25"><name pos:start="215:17" pos:end="215:17">s</name><operator pos:start="215:18" pos:end="215:19">-&gt;</operator><name pos:start="215:20" pos:end="215:25">status</name></name> <operator pos:start="215:27" pos:end="215:27">=</operator> <name pos:start="215:29" pos:end="215:38">READY_STAT</name> <operator pos:start="215:40" pos:end="215:40">|</operator> <name pos:start="215:42" pos:end="215:50">SEEK_STAT</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="217:15" pos:end="225:13">else if <condition pos:start="217:23" pos:end="221:55">(<expr pos:start="217:24" pos:end="221:54"><operator pos:start="217:24" pos:end="217:24">(</operator><name pos:start="217:25" pos:end="217:34"><name pos:start="217:25" pos:end="217:25">s</name><operator pos:start="217:26" pos:end="217:27">-&gt;</operator><name pos:start="217:28" pos:end="217:34">nsector</name></name> <operator pos:start="217:36" pos:end="217:36">&amp;</operator> <literal type="number" pos:start="217:38" pos:end="217:41">0xff</literal><operator pos:start="217:42" pos:end="217:42">)</operator> <operator pos:start="217:44" pos:end="217:45">!=</operator> <literal type="number" pos:start="217:47" pos:end="217:47">0</literal> <operator pos:start="217:49" pos:end="217:50">&amp;&amp;</operator>

                <operator pos:start="219:17" pos:end="219:17">(</operator><operator pos:start="219:18" pos:end="219:18">(</operator><name pos:start="219:19" pos:end="219:28"><name pos:start="219:19" pos:end="219:19">s</name><operator pos:start="219:20" pos:end="219:21">-&gt;</operator><name pos:start="219:22" pos:end="219:28">nsector</name></name> <operator pos:start="219:30" pos:end="219:30">&amp;</operator> <literal type="number" pos:start="219:32" pos:end="219:35">0xff</literal><operator pos:start="219:36" pos:end="219:36">)</operator> <operator pos:start="219:38" pos:end="219:38">&gt;</operator> <name pos:start="219:40" pos:end="219:55">MAX_MULT_SECTORS</name> <operator pos:start="219:57" pos:end="219:58">||</operator>

                 <operator pos:start="221:18" pos:end="221:18">(</operator><name pos:start="221:19" pos:end="221:28"><name pos:start="221:19" pos:end="221:19">s</name><operator pos:start="221:20" pos:end="221:21">-&gt;</operator><name pos:start="221:22" pos:end="221:28">nsector</name></name> <operator pos:start="221:30" pos:end="221:30">&amp;</operator> <operator pos:start="221:32" pos:end="221:32">(</operator><name pos:start="221:33" pos:end="221:42"><name pos:start="221:33" pos:end="221:33">s</name><operator pos:start="221:34" pos:end="221:35">-&gt;</operator><name pos:start="221:36" pos:end="221:42">nsector</name></name> <operator pos:start="221:44" pos:end="221:44">-</operator> <literal type="number" pos:start="221:46" pos:end="221:46">1</literal><operator pos:start="221:47" pos:end="221:47">)</operator><operator pos:start="221:48" pos:end="221:48">)</operator> <operator pos:start="221:50" pos:end="221:51">!=</operator> <literal type="number" pos:start="221:53" pos:end="221:53">0</literal><operator pos:start="221:54" pos:end="221:54">)</operator></expr>)</condition> <block pos:start="221:57" pos:end="225:13">{<block_content pos:start="223:17" pos:end="223:37">

                <expr_stmt pos:start="223:17" pos:end="223:37"><expr pos:start="223:17" pos:end="223:36"><call pos:start="223:17" pos:end="223:36"><name pos:start="223:17" pos:end="223:33">ide_abort_command</name><argument_list pos:start="223:34" pos:end="223:36">(<argument pos:start="223:35" pos:end="223:35"><expr pos:start="223:35" pos:end="223:35"><name pos:start="223:35" pos:end="223:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="225:15" pos:end="231:13">else <block pos:start="225:20" pos:end="231:13">{<block_content pos:start="227:17" pos:end="229:51">

                <expr_stmt pos:start="227:17" pos:end="227:52"><expr pos:start="227:17" pos:end="227:51"><name pos:start="227:17" pos:end="227:31"><name pos:start="227:17" pos:end="227:17">s</name><operator pos:start="227:18" pos:end="227:19">-&gt;</operator><name pos:start="227:20" pos:end="227:31">mult_sectors</name></name> <operator pos:start="227:33" pos:end="227:33">=</operator> <name pos:start="227:35" pos:end="227:44"><name pos:start="227:35" pos:end="227:35">s</name><operator pos:start="227:36" pos:end="227:37">-&gt;</operator><name pos:start="227:38" pos:end="227:44">nsector</name></name> <operator pos:start="227:46" pos:end="227:46">&amp;</operator> <literal type="number" pos:start="227:48" pos:end="227:51">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="229:17" pos:end="229:51"><expr pos:start="229:17" pos:end="229:50"><name pos:start="229:17" pos:end="229:25"><name pos:start="229:17" pos:end="229:17">s</name><operator pos:start="229:18" pos:end="229:19">-&gt;</operator><name pos:start="229:20" pos:end="229:25">status</name></name> <operator pos:start="229:27" pos:end="229:27">=</operator> <name pos:start="229:29" pos:end="229:38">READY_STAT</name> <operator pos:start="229:40" pos:end="229:40">|</operator> <name pos:start="229:42" pos:end="229:50">SEEK_STAT</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:27"><expr pos:start="233:13" pos:end="233:26"><call pos:start="233:13" pos:end="233:26"><name pos:start="233:13" pos:end="233:23">ide_set_irq</name><argument_list pos:start="233:24" pos:end="233:26">(<argument pos:start="233:25" pos:end="233:25"><expr pos:start="233:25" pos:end="233:25"><name pos:start="233:25" pos:end="233:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="235:13" pos:end="235:18">break;</break>

        <case pos:start="237:9" pos:end="237:28">case <expr pos:start="237:14" pos:end="237:27"><name pos:start="237:14" pos:end="237:27">WIN_VERIFY_EXT</name></expr>:</case>

	    <expr_stmt pos:start="239:13" pos:end="239:22"><expr pos:start="239:13" pos:end="239:21"><name pos:start="239:13" pos:end="239:17">lba48</name> <operator pos:start="239:19" pos:end="239:19">=</operator> <literal type="number" pos:start="239:21" pos:end="239:21">1</literal></expr>;</expr_stmt>

        <case pos:start="241:9" pos:end="241:24">case <expr pos:start="241:14" pos:end="241:23"><name pos:start="241:14" pos:end="241:23">WIN_VERIFY</name></expr>:</case>

        <case pos:start="243:9" pos:end="243:29">case <expr pos:start="243:14" pos:end="243:28"><name pos:start="243:14" pos:end="243:28">WIN_VERIFY_ONCE</name></expr>:</case>

            <comment type="block" pos:start="245:13" pos:end="245:42">/* do sector number check ? */</comment>

	    <expr_stmt pos:start="247:13" pos:end="247:46"><expr pos:start="247:13" pos:end="247:45"><call pos:start="247:13" pos:end="247:45"><name pos:start="247:13" pos:end="247:35">ide_cmd_lba48_transform</name><argument_list pos:start="247:36" pos:end="247:45">(<argument pos:start="247:37" pos:end="247:37"><expr pos:start="247:37" pos:end="247:37"><name pos:start="247:37" pos:end="247:37">s</name></expr></argument>, <argument pos:start="247:40" pos:end="247:44"><expr pos:start="247:40" pos:end="247:44"><name pos:start="247:40" pos:end="247:44">lba48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:47"><expr pos:start="249:13" pos:end="249:46"><name pos:start="249:13" pos:end="249:21"><name pos:start="249:13" pos:end="249:13">s</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:21">status</name></name> <operator pos:start="249:23" pos:end="249:23">=</operator> <name pos:start="249:25" pos:end="249:34">READY_STAT</name> <operator pos:start="249:36" pos:end="249:36">|</operator> <name pos:start="249:38" pos:end="249:46">SEEK_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:27"><expr pos:start="251:13" pos:end="251:26"><call pos:start="251:13" pos:end="251:26"><name pos:start="251:13" pos:end="251:23">ide_set_irq</name><argument_list pos:start="251:24" pos:end="251:26">(<argument pos:start="251:25" pos:end="251:25"><expr pos:start="251:25" pos:end="251:25"><name pos:start="251:25" pos:end="251:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="253:13" pos:end="253:18">break;</break>

	<case pos:start="255:9" pos:end="255:26">case <expr pos:start="255:14" pos:end="255:25"><name pos:start="255:14" pos:end="255:25">WIN_READ_EXT</name></expr>:</case>

	    <expr_stmt pos:start="257:13" pos:end="257:22"><expr pos:start="257:13" pos:end="257:21"><name pos:start="257:13" pos:end="257:17">lba48</name> <operator pos:start="257:19" pos:end="257:19">=</operator> <literal type="number" pos:start="257:21" pos:end="257:21">1</literal></expr>;</expr_stmt>

        <case pos:start="259:9" pos:end="259:22">case <expr pos:start="259:14" pos:end="259:21"><name pos:start="259:14" pos:end="259:21">WIN_READ</name></expr>:</case>

        <case pos:start="261:9" pos:end="261:27">case <expr pos:start="261:14" pos:end="261:26"><name pos:start="261:14" pos:end="261:26">WIN_READ_ONCE</name></expr>:</case>

            <if_stmt pos:start="263:13" pos:end="265:31"><if pos:start="263:13" pos:end="265:31">if <condition pos:start="263:16" pos:end="263:23">(<expr pos:start="263:17" pos:end="263:22"><operator pos:start="263:17" pos:end="263:17">!</operator><name pos:start="263:18" pos:end="263:22"><name pos:start="263:18" pos:end="263:18">s</name><operator pos:start="263:19" pos:end="263:20">-&gt;</operator><name pos:start="263:21" pos:end="263:22">bs</name></name></expr>)</condition><block type="pseudo" pos:start="265:17" pos:end="265:31"><block_content pos:start="265:17" pos:end="265:31">

                <goto pos:start="265:17" pos:end="265:31">goto <name pos:start="265:22" pos:end="265:30">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

	    <expr_stmt pos:start="267:13" pos:end="267:46"><expr pos:start="267:13" pos:end="267:45"><call pos:start="267:13" pos:end="267:45"><name pos:start="267:13" pos:end="267:35">ide_cmd_lba48_transform</name><argument_list pos:start="267:36" pos:end="267:45">(<argument pos:start="267:37" pos:end="267:37"><expr pos:start="267:37" pos:end="267:37"><name pos:start="267:37" pos:end="267:37">s</name></expr></argument>, <argument pos:start="267:40" pos:end="267:44"><expr pos:start="267:40" pos:end="267:44"><name pos:start="267:40" pos:end="267:44">lba48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:34"><expr pos:start="269:13" pos:end="269:33"><name pos:start="269:13" pos:end="269:29"><name pos:start="269:13" pos:end="269:13">s</name><operator pos:start="269:14" pos:end="269:15">-&gt;</operator><name pos:start="269:16" pos:end="269:29">req_nb_sectors</name></name> <operator pos:start="269:31" pos:end="269:31">=</operator> <literal type="number" pos:start="269:33" pos:end="269:33">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:31"><expr pos:start="271:13" pos:end="271:30"><call pos:start="271:13" pos:end="271:30"><name pos:start="271:13" pos:end="271:27">ide_sector_read</name><argument_list pos:start="271:28" pos:end="271:30">(<argument pos:start="271:29" pos:end="271:29"><expr pos:start="271:29" pos:end="271:29"><name pos:start="271:29" pos:end="271:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="273:13" pos:end="273:18">break;</break>

	<case pos:start="275:9" pos:end="275:27">case <expr pos:start="275:14" pos:end="275:26"><name pos:start="275:14" pos:end="275:26">WIN_WRITE_EXT</name></expr>:</case>

	    <expr_stmt pos:start="277:13" pos:end="277:22"><expr pos:start="277:13" pos:end="277:21"><name pos:start="277:13" pos:end="277:17">lba48</name> <operator pos:start="277:19" pos:end="277:19">=</operator> <literal type="number" pos:start="277:21" pos:end="277:21">1</literal></expr>;</expr_stmt>

        <case pos:start="279:9" pos:end="279:23">case <expr pos:start="279:14" pos:end="279:22"><name pos:start="279:14" pos:end="279:22">WIN_WRITE</name></expr>:</case>

        <case pos:start="281:9" pos:end="281:28">case <expr pos:start="281:14" pos:end="281:27"><name pos:start="281:14" pos:end="281:27">WIN_WRITE_ONCE</name></expr>:</case>

        <case pos:start="283:9" pos:end="283:37">case <expr pos:start="283:14" pos:end="283:36"><name pos:start="283:14" pos:end="283:36">CFA_WRITE_SECT_WO_ERASE</name></expr>:</case>

        <case pos:start="285:9" pos:end="285:30">case <expr pos:start="285:14" pos:end="285:29"><name pos:start="285:14" pos:end="285:29">WIN_WRITE_VERIFY</name></expr>:</case>

	    <expr_stmt pos:start="287:13" pos:end="287:46"><expr pos:start="287:13" pos:end="287:45"><call pos:start="287:13" pos:end="287:45"><name pos:start="287:13" pos:end="287:35">ide_cmd_lba48_transform</name><argument_list pos:start="287:36" pos:end="287:45">(<argument pos:start="287:37" pos:end="287:37"><expr pos:start="287:37" pos:end="287:37"><name pos:start="287:37" pos:end="287:37">s</name></expr></argument>, <argument pos:start="287:40" pos:end="287:44"><expr pos:start="287:40" pos:end="287:44"><name pos:start="287:40" pos:end="287:44">lba48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="289:25"><expr pos:start="289:13" pos:end="289:24"><name pos:start="289:13" pos:end="289:20"><name pos:start="289:13" pos:end="289:13">s</name><operator pos:start="289:14" pos:end="289:15">-&gt;</operator><name pos:start="289:16" pos:end="289:20">error</name></name> <operator pos:start="289:22" pos:end="289:22">=</operator> <literal type="number" pos:start="289:24" pos:end="289:24">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:47"><expr pos:start="291:13" pos:end="291:46"><name pos:start="291:13" pos:end="291:21"><name pos:start="291:13" pos:end="291:13">s</name><operator pos:start="291:14" pos:end="291:15">-&gt;</operator><name pos:start="291:16" pos:end="291:21">status</name></name> <operator pos:start="291:23" pos:end="291:23">=</operator> <name pos:start="291:25" pos:end="291:33">SEEK_STAT</name> <operator pos:start="291:35" pos:end="291:35">|</operator> <name pos:start="291:37" pos:end="291:46">READY_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:34"><expr pos:start="293:13" pos:end="293:33"><name pos:start="293:13" pos:end="293:29"><name pos:start="293:13" pos:end="293:13">s</name><operator pos:start="293:14" pos:end="293:15">-&gt;</operator><name pos:start="293:16" pos:end="293:29">req_nb_sectors</name></name> <operator pos:start="293:31" pos:end="293:31">=</operator> <literal type="number" pos:start="293:33" pos:end="293:33">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:71"><expr pos:start="295:13" pos:end="295:70"><call pos:start="295:13" pos:end="295:70"><name pos:start="295:13" pos:end="295:30">ide_transfer_start</name><argument_list pos:start="295:31" pos:end="295:70">(<argument pos:start="295:32" pos:end="295:32"><expr pos:start="295:32" pos:end="295:32"><name pos:start="295:32" pos:end="295:32">s</name></expr></argument>, <argument pos:start="295:35" pos:end="295:46"><expr pos:start="295:35" pos:end="295:46"><name pos:start="295:35" pos:end="295:46"><name pos:start="295:35" pos:end="295:35">s</name><operator pos:start="295:36" pos:end="295:37">-&gt;</operator><name pos:start="295:38" pos:end="295:46">io_buffer</name></name></expr></argument>, <argument pos:start="295:49" pos:end="295:51"><expr pos:start="295:49" pos:end="295:51"><literal type="number" pos:start="295:49" pos:end="295:51">512</literal></expr></argument>, <argument pos:start="295:54" pos:end="295:69"><expr pos:start="295:54" pos:end="295:69"><name pos:start="295:54" pos:end="295:69">ide_sector_write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:33"><expr pos:start="297:13" pos:end="297:32"><name pos:start="297:13" pos:end="297:28"><name pos:start="297:13" pos:end="297:13">s</name><operator pos:start="297:14" pos:end="297:15">-&gt;</operator><name pos:start="297:16" pos:end="297:28">media_changed</name></name> <operator pos:start="297:30" pos:end="297:30">=</operator> <literal type="number" pos:start="297:32" pos:end="297:32">1</literal></expr>;</expr_stmt>

            <break pos:start="299:13" pos:end="299:18">break;</break>

	<case pos:start="301:9" pos:end="301:30">case <expr pos:start="301:14" pos:end="301:29"><name pos:start="301:14" pos:end="301:29">WIN_MULTREAD_EXT</name></expr>:</case>

	    <expr_stmt pos:start="303:13" pos:end="303:22"><expr pos:start="303:13" pos:end="303:21"><name pos:start="303:13" pos:end="303:17">lba48</name> <operator pos:start="303:19" pos:end="303:19">=</operator> <literal type="number" pos:start="303:21" pos:end="303:21">1</literal></expr>;</expr_stmt>

        <case pos:start="305:9" pos:end="305:26">case <expr pos:start="305:14" pos:end="305:25"><name pos:start="305:14" pos:end="305:25">WIN_MULTREAD</name></expr>:</case>

            <if_stmt pos:start="307:13" pos:end="309:31"><if pos:start="307:13" pos:end="309:31">if <condition pos:start="307:16" pos:end="307:33">(<expr pos:start="307:17" pos:end="307:32"><operator pos:start="307:17" pos:end="307:17">!</operator><name pos:start="307:18" pos:end="307:32"><name pos:start="307:18" pos:end="307:18">s</name><operator pos:start="307:19" pos:end="307:20">-&gt;</operator><name pos:start="307:21" pos:end="307:32">mult_sectors</name></name></expr>)</condition><block type="pseudo" pos:start="309:17" pos:end="309:31"><block_content pos:start="309:17" pos:end="309:31">

                <goto pos:start="309:17" pos:end="309:31">goto <name pos:start="309:22" pos:end="309:30">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

	    <expr_stmt pos:start="311:13" pos:end="311:46"><expr pos:start="311:13" pos:end="311:45"><call pos:start="311:13" pos:end="311:45"><name pos:start="311:13" pos:end="311:35">ide_cmd_lba48_transform</name><argument_list pos:start="311:36" pos:end="311:45">(<argument pos:start="311:37" pos:end="311:37"><expr pos:start="311:37" pos:end="311:37"><name pos:start="311:37" pos:end="311:37">s</name></expr></argument>, <argument pos:start="311:40" pos:end="311:44"><expr pos:start="311:40" pos:end="311:44"><name pos:start="311:40" pos:end="311:44">lba48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:48"><expr pos:start="313:13" pos:end="313:47"><name pos:start="313:13" pos:end="313:29"><name pos:start="313:13" pos:end="313:13">s</name><operator pos:start="313:14" pos:end="313:15">-&gt;</operator><name pos:start="313:16" pos:end="313:29">req_nb_sectors</name></name> <operator pos:start="313:31" pos:end="313:31">=</operator> <name pos:start="313:33" pos:end="313:47"><name pos:start="313:33" pos:end="313:33">s</name><operator pos:start="313:34" pos:end="313:35">-&gt;</operator><name pos:start="313:36" pos:end="313:47">mult_sectors</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:31"><expr pos:start="315:13" pos:end="315:30"><call pos:start="315:13" pos:end="315:30"><name pos:start="315:13" pos:end="315:27">ide_sector_read</name><argument_list pos:start="315:28" pos:end="315:30">(<argument pos:start="315:29" pos:end="315:29"><expr pos:start="315:29" pos:end="315:29"><name pos:start="315:29" pos:end="315:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="317:13" pos:end="317:18">break;</break>

        <case pos:start="319:9" pos:end="319:31">case <expr pos:start="319:14" pos:end="319:30"><name pos:start="319:14" pos:end="319:30">WIN_MULTWRITE_EXT</name></expr>:</case>

	    <expr_stmt pos:start="321:13" pos:end="321:22"><expr pos:start="321:13" pos:end="321:21"><name pos:start="321:13" pos:end="321:17">lba48</name> <operator pos:start="321:19" pos:end="321:19">=</operator> <literal type="number" pos:start="321:21" pos:end="321:21">1</literal></expr>;</expr_stmt>

        <case pos:start="323:9" pos:end="323:27">case <expr pos:start="323:14" pos:end="323:26"><name pos:start="323:14" pos:end="323:26">WIN_MULTWRITE</name></expr>:</case>

        <case pos:start="325:9" pos:end="325:38">case <expr pos:start="325:14" pos:end="325:37"><name pos:start="325:14" pos:end="325:37">CFA_WRITE_MULTI_WO_ERASE</name></expr>:</case>

            <if_stmt pos:start="327:13" pos:end="329:31"><if pos:start="327:13" pos:end="329:31">if <condition pos:start="327:16" pos:end="327:33">(<expr pos:start="327:17" pos:end="327:32"><operator pos:start="327:17" pos:end="327:17">!</operator><name pos:start="327:18" pos:end="327:32"><name pos:start="327:18" pos:end="327:18">s</name><operator pos:start="327:19" pos:end="327:20">-&gt;</operator><name pos:start="327:21" pos:end="327:32">mult_sectors</name></name></expr>)</condition><block type="pseudo" pos:start="329:17" pos:end="329:31"><block_content pos:start="329:17" pos:end="329:31">

                <goto pos:start="329:17" pos:end="329:31">goto <name pos:start="329:22" pos:end="329:30">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

	    <expr_stmt pos:start="331:13" pos:end="331:46"><expr pos:start="331:13" pos:end="331:45"><call pos:start="331:13" pos:end="331:45"><name pos:start="331:13" pos:end="331:35">ide_cmd_lba48_transform</name><argument_list pos:start="331:36" pos:end="331:45">(<argument pos:start="331:37" pos:end="331:37"><expr pos:start="331:37" pos:end="331:37"><name pos:start="331:37" pos:end="331:37">s</name></expr></argument>, <argument pos:start="331:40" pos:end="331:44"><expr pos:start="331:40" pos:end="331:44"><name pos:start="331:40" pos:end="331:44">lba48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:25"><expr pos:start="333:13" pos:end="333:24"><name pos:start="333:13" pos:end="333:20"><name pos:start="333:13" pos:end="333:13">s</name><operator pos:start="333:14" pos:end="333:15">-&gt;</operator><name pos:start="333:16" pos:end="333:20">error</name></name> <operator pos:start="333:22" pos:end="333:22">=</operator> <literal type="number" pos:start="333:24" pos:end="333:24">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="335:13" pos:end="335:47"><expr pos:start="335:13" pos:end="335:46"><name pos:start="335:13" pos:end="335:21"><name pos:start="335:13" pos:end="335:13">s</name><operator pos:start="335:14" pos:end="335:15">-&gt;</operator><name pos:start="335:16" pos:end="335:21">status</name></name> <operator pos:start="335:23" pos:end="335:23">=</operator> <name pos:start="335:25" pos:end="335:33">SEEK_STAT</name> <operator pos:start="335:35" pos:end="335:35">|</operator> <name pos:start="335:37" pos:end="335:46">READY_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:48"><expr pos:start="337:13" pos:end="337:47"><name pos:start="337:13" pos:end="337:29"><name pos:start="337:13" pos:end="337:13">s</name><operator pos:start="337:14" pos:end="337:15">-&gt;</operator><name pos:start="337:16" pos:end="337:29">req_nb_sectors</name></name> <operator pos:start="337:31" pos:end="337:31">=</operator> <name pos:start="337:33" pos:end="337:47"><name pos:start="337:33" pos:end="337:33">s</name><operator pos:start="337:34" pos:end="337:35">-&gt;</operator><name pos:start="337:36" pos:end="337:47">mult_sectors</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:27"><expr pos:start="339:13" pos:end="339:26"><name pos:start="339:13" pos:end="339:13">n</name> <operator pos:start="339:15" pos:end="339:15">=</operator> <name pos:start="339:17" pos:end="339:26"><name pos:start="339:17" pos:end="339:17">s</name><operator pos:start="339:18" pos:end="339:19">-&gt;</operator><name pos:start="339:20" pos:end="339:26">nsector</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="341:13" pos:end="343:38"><if pos:start="341:13" pos:end="343:38">if <condition pos:start="341:16" pos:end="341:38">(<expr pos:start="341:17" pos:end="341:37"><name pos:start="341:17" pos:end="341:17">n</name> <operator pos:start="341:19" pos:end="341:19">&gt;</operator> <name pos:start="341:21" pos:end="341:37"><name pos:start="341:21" pos:end="341:21">s</name><operator pos:start="341:22" pos:end="341:23">-&gt;</operator><name pos:start="341:24" pos:end="341:37">req_nb_sectors</name></name></expr>)</condition><block type="pseudo" pos:start="343:17" pos:end="343:38"><block_content pos:start="343:17" pos:end="343:38">

                <expr_stmt pos:start="343:17" pos:end="343:38"><expr pos:start="343:17" pos:end="343:37"><name pos:start="343:17" pos:end="343:17">n</name> <operator pos:start="343:19" pos:end="343:19">=</operator> <name pos:start="343:21" pos:end="343:37"><name pos:start="343:21" pos:end="343:21">s</name><operator pos:start="343:22" pos:end="343:23">-&gt;</operator><name pos:start="343:24" pos:end="343:37">req_nb_sectors</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="345:13" pos:end="345:75"><expr pos:start="345:13" pos:end="345:74"><call pos:start="345:13" pos:end="345:74"><name pos:start="345:13" pos:end="345:30">ide_transfer_start</name><argument_list pos:start="345:31" pos:end="345:74">(<argument pos:start="345:32" pos:end="345:32"><expr pos:start="345:32" pos:end="345:32"><name pos:start="345:32" pos:end="345:32">s</name></expr></argument>, <argument pos:start="345:35" pos:end="345:46"><expr pos:start="345:35" pos:end="345:46"><name pos:start="345:35" pos:end="345:46"><name pos:start="345:35" pos:end="345:35">s</name><operator pos:start="345:36" pos:end="345:37">-&gt;</operator><name pos:start="345:38" pos:end="345:46">io_buffer</name></name></expr></argument>, <argument pos:start="345:49" pos:end="345:55"><expr pos:start="345:49" pos:end="345:55"><literal type="number" pos:start="345:49" pos:end="345:51">512</literal> <operator pos:start="345:53" pos:end="345:53">*</operator> <name pos:start="345:55" pos:end="345:55">n</name></expr></argument>, <argument pos:start="345:58" pos:end="345:73"><expr pos:start="345:58" pos:end="345:73"><name pos:start="345:58" pos:end="345:73">ide_sector_write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="347:13" pos:end="347:33"><expr pos:start="347:13" pos:end="347:32"><name pos:start="347:13" pos:end="347:28"><name pos:start="347:13" pos:end="347:13">s</name><operator pos:start="347:14" pos:end="347:15">-&gt;</operator><name pos:start="347:16" pos:end="347:28">media_changed</name></name> <operator pos:start="347:30" pos:end="347:30">=</operator> <literal type="number" pos:start="347:32" pos:end="347:32">1</literal></expr>;</expr_stmt>

            <break pos:start="349:13" pos:end="349:18">break;</break>

	<case pos:start="351:9" pos:end="351:29">case <expr pos:start="351:14" pos:end="351:28"><name pos:start="351:14" pos:end="351:28">WIN_READDMA_EXT</name></expr>:</case>

	    <expr_stmt pos:start="353:13" pos:end="353:22"><expr pos:start="353:13" pos:end="353:21"><name pos:start="353:13" pos:end="353:17">lba48</name> <operator pos:start="353:19" pos:end="353:19">=</operator> <literal type="number" pos:start="353:21" pos:end="353:21">1</literal></expr>;</expr_stmt>

        <case pos:start="355:9" pos:end="355:25">case <expr pos:start="355:14" pos:end="355:24"><name pos:start="355:14" pos:end="355:24">WIN_READDMA</name></expr>:</case>

        <case pos:start="357:9" pos:end="357:30">case <expr pos:start="357:14" pos:end="357:29"><name pos:start="357:14" pos:end="357:29">WIN_READDMA_ONCE</name></expr>:</case>

            <if_stmt pos:start="359:13" pos:end="361:31"><if pos:start="359:13" pos:end="361:31">if <condition pos:start="359:16" pos:end="359:23">(<expr pos:start="359:17" pos:end="359:22"><operator pos:start="359:17" pos:end="359:17">!</operator><name pos:start="359:18" pos:end="359:22"><name pos:start="359:18" pos:end="359:18">s</name><operator pos:start="359:19" pos:end="359:20">-&gt;</operator><name pos:start="359:21" pos:end="359:22">bs</name></name></expr>)</condition><block type="pseudo" pos:start="361:17" pos:end="361:31"><block_content pos:start="361:17" pos:end="361:31">

                <goto pos:start="361:17" pos:end="361:31">goto <name pos:start="361:22" pos:end="361:30">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

	    <expr_stmt pos:start="363:13" pos:end="363:46"><expr pos:start="363:13" pos:end="363:45"><call pos:start="363:13" pos:end="363:45"><name pos:start="363:13" pos:end="363:35">ide_cmd_lba48_transform</name><argument_list pos:start="363:36" pos:end="363:45">(<argument pos:start="363:37" pos:end="363:37"><expr pos:start="363:37" pos:end="363:37"><name pos:start="363:37" pos:end="363:37">s</name></expr></argument>, <argument pos:start="363:40" pos:end="363:44"><expr pos:start="363:40" pos:end="363:44"><name pos:start="363:40" pos:end="363:44">lba48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:35"><expr pos:start="365:13" pos:end="365:34"><call pos:start="365:13" pos:end="365:34"><name pos:start="365:13" pos:end="365:31">ide_sector_read_dma</name><argument_list pos:start="365:32" pos:end="365:34">(<argument pos:start="365:33" pos:end="365:33"><expr pos:start="365:33" pos:end="365:33"><name pos:start="365:33" pos:end="365:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="367:13" pos:end="367:18">break;</break>

	<case pos:start="369:9" pos:end="369:30">case <expr pos:start="369:14" pos:end="369:29"><name pos:start="369:14" pos:end="369:29">WIN_WRITEDMA_EXT</name></expr>:</case>

	    <expr_stmt pos:start="371:13" pos:end="371:22"><expr pos:start="371:13" pos:end="371:21"><name pos:start="371:13" pos:end="371:17">lba48</name> <operator pos:start="371:19" pos:end="371:19">=</operator> <literal type="number" pos:start="371:21" pos:end="371:21">1</literal></expr>;</expr_stmt>

        <case pos:start="373:9" pos:end="373:26">case <expr pos:start="373:14" pos:end="373:25"><name pos:start="373:14" pos:end="373:25">WIN_WRITEDMA</name></expr>:</case>

        <case pos:start="375:9" pos:end="375:31">case <expr pos:start="375:14" pos:end="375:30"><name pos:start="375:14" pos:end="375:30">WIN_WRITEDMA_ONCE</name></expr>:</case>

            <if_stmt pos:start="377:13" pos:end="379:31"><if pos:start="377:13" pos:end="379:31">if <condition pos:start="377:16" pos:end="377:23">(<expr pos:start="377:17" pos:end="377:22"><operator pos:start="377:17" pos:end="377:17">!</operator><name pos:start="377:18" pos:end="377:22"><name pos:start="377:18" pos:end="377:18">s</name><operator pos:start="377:19" pos:end="377:20">-&gt;</operator><name pos:start="377:21" pos:end="377:22">bs</name></name></expr>)</condition><block type="pseudo" pos:start="379:17" pos:end="379:31"><block_content pos:start="379:17" pos:end="379:31">

                <goto pos:start="379:17" pos:end="379:31">goto <name pos:start="379:22" pos:end="379:30">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

	    <expr_stmt pos:start="381:13" pos:end="381:46"><expr pos:start="381:13" pos:end="381:45"><call pos:start="381:13" pos:end="381:45"><name pos:start="381:13" pos:end="381:35">ide_cmd_lba48_transform</name><argument_list pos:start="381:36" pos:end="381:45">(<argument pos:start="381:37" pos:end="381:37"><expr pos:start="381:37" pos:end="381:37"><name pos:start="381:37" pos:end="381:37">s</name></expr></argument>, <argument pos:start="381:40" pos:end="381:44"><expr pos:start="381:40" pos:end="381:44"><name pos:start="381:40" pos:end="381:44">lba48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="383:13" pos:end="383:36"><expr pos:start="383:13" pos:end="383:35"><call pos:start="383:13" pos:end="383:35"><name pos:start="383:13" pos:end="383:32">ide_sector_write_dma</name><argument_list pos:start="383:33" pos:end="383:35">(<argument pos:start="383:34" pos:end="383:34"><expr pos:start="383:34" pos:end="383:34"><name pos:start="383:34" pos:end="383:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="385:13" pos:end="385:33"><expr pos:start="385:13" pos:end="385:32"><name pos:start="385:13" pos:end="385:28"><name pos:start="385:13" pos:end="385:13">s</name><operator pos:start="385:14" pos:end="385:15">-&gt;</operator><name pos:start="385:16" pos:end="385:28">media_changed</name></name> <operator pos:start="385:30" pos:end="385:30">=</operator> <literal type="number" pos:start="385:32" pos:end="385:32">1</literal></expr>;</expr_stmt>

            <break pos:start="387:13" pos:end="387:18">break;</break>

        <case pos:start="389:9" pos:end="389:37">case <expr pos:start="389:14" pos:end="389:36"><name pos:start="389:14" pos:end="389:36">WIN_READ_NATIVE_MAX_EXT</name></expr>:</case>

	    <expr_stmt pos:start="391:13" pos:end="391:22"><expr pos:start="391:13" pos:end="391:21"><name pos:start="391:13" pos:end="391:17">lba48</name> <operator pos:start="391:19" pos:end="391:19">=</operator> <literal type="number" pos:start="391:21" pos:end="391:21">1</literal></expr>;</expr_stmt>

        <case pos:start="393:9" pos:end="393:33">case <expr pos:start="393:14" pos:end="393:32"><name pos:start="393:14" pos:end="393:32">WIN_READ_NATIVE_MAX</name></expr>:</case>

	    <expr_stmt pos:start="395:13" pos:end="395:46"><expr pos:start="395:13" pos:end="395:45"><call pos:start="395:13" pos:end="395:45"><name pos:start="395:13" pos:end="395:35">ide_cmd_lba48_transform</name><argument_list pos:start="395:36" pos:end="395:45">(<argument pos:start="395:37" pos:end="395:37"><expr pos:start="395:37" pos:end="395:37"><name pos:start="395:37" pos:end="395:37">s</name></expr></argument>, <argument pos:start="395:40" pos:end="395:44"><expr pos:start="395:40" pos:end="395:44"><name pos:start="395:40" pos:end="395:44">lba48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="397:13" pos:end="397:49"><expr pos:start="397:13" pos:end="397:48"><call pos:start="397:13" pos:end="397:48"><name pos:start="397:13" pos:end="397:26">ide_set_sector</name><argument_list pos:start="397:27" pos:end="397:48">(<argument pos:start="397:28" pos:end="397:28"><expr pos:start="397:28" pos:end="397:28"><name pos:start="397:28" pos:end="397:28">s</name></expr></argument>, <argument pos:start="397:31" pos:end="397:47"><expr pos:start="397:31" pos:end="397:47"><name pos:start="397:31" pos:end="397:43"><name pos:start="397:31" pos:end="397:31">s</name><operator pos:start="397:32" pos:end="397:33">-&gt;</operator><name pos:start="397:34" pos:end="397:43">nb_sectors</name></name> <operator pos:start="397:45" pos:end="397:45">-</operator> <literal type="number" pos:start="397:47" pos:end="397:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="399:13" pos:end="399:47"><expr pos:start="399:13" pos:end="399:46"><name pos:start="399:13" pos:end="399:21"><name pos:start="399:13" pos:end="399:13">s</name><operator pos:start="399:14" pos:end="399:15">-&gt;</operator><name pos:start="399:16" pos:end="399:21">status</name></name> <operator pos:start="399:23" pos:end="399:23">=</operator> <name pos:start="399:25" pos:end="399:34">READY_STAT</name> <operator pos:start="399:36" pos:end="399:36">|</operator> <name pos:start="399:38" pos:end="399:46">SEEK_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="401:13" pos:end="401:27"><expr pos:start="401:13" pos:end="401:26"><call pos:start="401:13" pos:end="401:26"><name pos:start="401:13" pos:end="401:23">ide_set_irq</name><argument_list pos:start="401:24" pos:end="401:26">(<argument pos:start="401:25" pos:end="401:25"><expr pos:start="401:25" pos:end="401:25"><name pos:start="401:25" pos:end="401:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="403:13" pos:end="403:18">break;</break>

        <case pos:start="405:9" pos:end="405:33">case <expr pos:start="405:14" pos:end="405:32"><name pos:start="405:14" pos:end="405:32">WIN_CHECKPOWERMODE1</name></expr>:</case>

        <case pos:start="407:9" pos:end="407:33">case <expr pos:start="407:14" pos:end="407:32"><name pos:start="407:14" pos:end="407:32">WIN_CHECKPOWERMODE2</name></expr>:</case>

            <expr_stmt pos:start="409:13" pos:end="409:30"><expr pos:start="409:13" pos:end="409:29"><name pos:start="409:13" pos:end="409:22"><name pos:start="409:13" pos:end="409:13">s</name><operator pos:start="409:14" pos:end="409:15">-&gt;</operator><name pos:start="409:16" pos:end="409:22">nsector</name></name> <operator pos:start="409:24" pos:end="409:24">=</operator> <literal type="number" pos:start="409:26" pos:end="409:29">0xff</literal></expr>;</expr_stmt> <comment type="block" pos:start="409:32" pos:end="409:58">/* device active or idle */</comment>

            <expr_stmt pos:start="411:13" pos:end="411:47"><expr pos:start="411:13" pos:end="411:46"><name pos:start="411:13" pos:end="411:21"><name pos:start="411:13" pos:end="411:13">s</name><operator pos:start="411:14" pos:end="411:15">-&gt;</operator><name pos:start="411:16" pos:end="411:21">status</name></name> <operator pos:start="411:23" pos:end="411:23">=</operator> <name pos:start="411:25" pos:end="411:34">READY_STAT</name> <operator pos:start="411:36" pos:end="411:36">|</operator> <name pos:start="411:38" pos:end="411:46">SEEK_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="413:13" pos:end="413:27"><expr pos:start="413:13" pos:end="413:26"><call pos:start="413:13" pos:end="413:26"><name pos:start="413:13" pos:end="413:23">ide_set_irq</name><argument_list pos:start="413:24" pos:end="413:26">(<argument pos:start="413:25" pos:end="413:25"><expr pos:start="413:25" pos:end="413:25"><name pos:start="413:25" pos:end="413:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="415:13" pos:end="415:18">break;</break>

        <case pos:start="417:9" pos:end="417:29">case <expr pos:start="417:14" pos:end="417:28"><name pos:start="417:14" pos:end="417:28">WIN_SETFEATURES</name></expr>:</case>

            <if_stmt pos:start="419:13" pos:end="421:31"><if pos:start="419:13" pos:end="421:31">if <condition pos:start="419:16" pos:end="419:23">(<expr pos:start="419:17" pos:end="419:22"><operator pos:start="419:17" pos:end="419:17">!</operator><name pos:start="419:18" pos:end="419:22"><name pos:start="419:18" pos:end="419:18">s</name><operator pos:start="419:19" pos:end="419:20">-&gt;</operator><name pos:start="419:21" pos:end="419:22">bs</name></name></expr>)</condition><block type="pseudo" pos:start="421:17" pos:end="421:31"><block_content pos:start="421:17" pos:end="421:31">

                <goto pos:start="421:17" pos:end="421:31">goto <name pos:start="421:22" pos:end="421:30">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="423:13" pos:end="423:40">/* XXX: valid for CDROM ? */</comment>

            <switch pos:start="425:13" pos:end="529:13">switch<condition pos:start="425:19" pos:end="425:30">(<expr pos:start="425:20" pos:end="425:29"><name pos:start="425:20" pos:end="425:29"><name pos:start="425:20" pos:end="425:20">s</name><operator pos:start="425:21" pos:end="425:22">-&gt;</operator><name pos:start="425:23" pos:end="425:29">feature</name></name></expr>)</condition> <block pos:start="425:32" pos:end="529:13">{<block_content pos:start="427:13" pos:end="527:31">

            <case pos:start="427:13" pos:end="427:22">case <expr pos:start="427:18" pos:end="427:21"><literal type="number" pos:start="427:18" pos:end="427:21">0xcc</literal></expr>:</case> <comment type="block" pos:start="427:24" pos:end="427:66">/* reverting to power-on defaults enable */</comment>

            <case pos:start="429:13" pos:end="429:22">case <expr pos:start="429:18" pos:end="429:21"><literal type="number" pos:start="429:18" pos:end="429:21">0x66</literal></expr>:</case> <comment type="block" pos:start="429:24" pos:end="429:67">/* reverting to power-on defaults disable */</comment>

            <case pos:start="431:13" pos:end="431:22">case <expr pos:start="431:18" pos:end="431:21"><literal type="number" pos:start="431:18" pos:end="431:21">0x02</literal></expr>:</case> <comment type="block" pos:start="431:24" pos:end="431:47">/* write cache enable */</comment>

            <case pos:start="433:13" pos:end="433:22">case <expr pos:start="433:18" pos:end="433:21"><literal type="number" pos:start="433:18" pos:end="433:21">0x82</literal></expr>:</case> <comment type="block" pos:start="433:24" pos:end="433:48">/* write cache disable */</comment>

            <case pos:start="435:13" pos:end="435:22">case <expr pos:start="435:18" pos:end="435:21"><literal type="number" pos:start="435:18" pos:end="435:21">0xaa</literal></expr>:</case> <comment type="block" pos:start="435:24" pos:end="435:51">/* read look-ahead enable */</comment>

            <case pos:start="437:13" pos:end="437:22">case <expr pos:start="437:18" pos:end="437:21"><literal type="number" pos:start="437:18" pos:end="437:21">0x55</literal></expr>:</case> <comment type="block" pos:start="437:24" pos:end="437:52">/* read look-ahead disable */</comment>

            <case pos:start="439:13" pos:end="439:22">case <expr pos:start="439:18" pos:end="439:21"><literal type="number" pos:start="439:18" pos:end="439:21">0x05</literal></expr>:</case> <comment type="block" pos:start="439:24" pos:end="439:63">/* set advanced power management mode */</comment>

            <case pos:start="441:13" pos:end="441:22">case <expr pos:start="441:18" pos:end="441:21"><literal type="number" pos:start="441:18" pos:end="441:21">0x85</literal></expr>:</case> <comment type="block" pos:start="441:24" pos:end="441:67">/* disable advanced power management mode */</comment>

            <case pos:start="443:13" pos:end="443:22">case <expr pos:start="443:18" pos:end="443:21"><literal type="number" pos:start="443:18" pos:end="443:21">0x69</literal></expr>:</case> <comment type="block" pos:start="443:24" pos:end="443:32">/* NOP */</comment>

            <case pos:start="445:13" pos:end="445:22">case <expr pos:start="445:18" pos:end="445:21"><literal type="number" pos:start="445:18" pos:end="445:21">0x67</literal></expr>:</case> <comment type="block" pos:start="445:24" pos:end="445:32">/* NOP */</comment>

            <case pos:start="447:13" pos:end="447:22">case <expr pos:start="447:18" pos:end="447:21"><literal type="number" pos:start="447:18" pos:end="447:21">0x96</literal></expr>:</case> <comment type="block" pos:start="447:24" pos:end="447:32">/* NOP */</comment>

            <case pos:start="449:13" pos:end="449:22">case <expr pos:start="449:18" pos:end="449:21"><literal type="number" pos:start="449:18" pos:end="449:21">0x9a</literal></expr>:</case> <comment type="block" pos:start="449:24" pos:end="449:32">/* NOP */</comment>

            <case pos:start="451:13" pos:end="451:22">case <expr pos:start="451:18" pos:end="451:21"><literal type="number" pos:start="451:18" pos:end="451:21">0x42</literal></expr>:</case> <comment type="block" pos:start="451:24" pos:end="451:59">/* enable Automatic Acoustic Mode */</comment>

            <case pos:start="453:13" pos:end="453:22">case <expr pos:start="453:18" pos:end="453:21"><literal type="number" pos:start="453:18" pos:end="453:21">0xc2</literal></expr>:</case> <comment type="block" pos:start="453:24" pos:end="453:60">/* disable Automatic Acoustic Mode */</comment>

                <expr_stmt pos:start="455:17" pos:end="455:51"><expr pos:start="455:17" pos:end="455:50"><name pos:start="455:17" pos:end="455:25"><name pos:start="455:17" pos:end="455:17">s</name><operator pos:start="455:18" pos:end="455:19">-&gt;</operator><name pos:start="455:20" pos:end="455:25">status</name></name> <operator pos:start="455:27" pos:end="455:27">=</operator> <name pos:start="455:29" pos:end="455:38">READY_STAT</name> <operator pos:start="455:40" pos:end="455:40">|</operator> <name pos:start="455:42" pos:end="455:50">SEEK_STAT</name></expr>;</expr_stmt>

                <expr_stmt pos:start="457:17" pos:end="457:31"><expr pos:start="457:17" pos:end="457:30"><call pos:start="457:17" pos:end="457:30"><name pos:start="457:17" pos:end="457:27">ide_set_irq</name><argument_list pos:start="457:28" pos:end="457:30">(<argument pos:start="457:29" pos:end="457:29"><expr pos:start="457:29" pos:end="457:29"><name pos:start="457:29" pos:end="457:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="459:17" pos:end="459:22">break;</break>

            <case pos:start="461:13" pos:end="461:22">case <expr pos:start="461:18" pos:end="461:21"><literal type="number" pos:start="461:18" pos:end="461:21">0x03</literal></expr>:</case> <block pos:start="461:24" pos:end="523:13">{<block_content pos:start="463:17" pos:end="521:22"> <comment type="block" pos:start="461:26" pos:end="461:48">/* set transfer mode */</comment>

		<decl_stmt pos:start="463:17" pos:end="463:48"><decl pos:start="463:17" pos:end="463:47"><type pos:start="463:17" pos:end="463:23"><name pos:start="463:17" pos:end="463:23">uint8_t</name></type> <name pos:start="463:25" pos:end="463:27">val</name> <init pos:start="463:29" pos:end="463:47">= <expr pos:start="463:31" pos:end="463:47"><name pos:start="463:31" pos:end="463:40"><name pos:start="463:31" pos:end="463:31">s</name><operator pos:start="463:32" pos:end="463:33">-&gt;</operator><name pos:start="463:34" pos:end="463:40">nsector</name></name> <operator pos:start="463:42" pos:end="463:42">&amp;</operator> <literal type="number" pos:start="463:44" pos:end="463:47">0x07</literal></expr></init></decl>;</decl_stmt>



		<switch pos:start="467:17" pos:end="515:17">switch <condition pos:start="467:24" pos:end="467:40">(<expr pos:start="467:25" pos:end="467:39"><name pos:start="467:25" pos:end="467:34"><name pos:start="467:25" pos:end="467:25">s</name><operator pos:start="467:26" pos:end="467:27">-&gt;</operator><name pos:start="467:28" pos:end="467:34">nsector</name></name> <operator pos:start="467:36" pos:end="467:37">&gt;&gt;</operator> <literal type="number" pos:start="467:39" pos:end="467:39">3</literal></expr>)</condition> <block pos:start="467:42" pos:end="515:17">{<block_content pos:start="469:21" pos:end="513:39">

		    <case pos:start="469:21" pos:end="469:30">case <expr pos:start="469:26" pos:end="469:29"><literal type="number" pos:start="469:26" pos:end="469:29">0x00</literal></expr>:</case> <comment type="block" pos:start="469:32" pos:end="469:48">/* pio default */</comment>

		    <case pos:start="471:21" pos:end="471:30">case <expr pos:start="471:26" pos:end="471:29"><literal type="number" pos:start="471:26" pos:end="471:29">0x01</literal></expr>:</case> <comment type="block" pos:start="471:32" pos:end="471:45">/* pio mode */</comment>

			<expr_stmt pos:start="473:25" pos:end="473:61"><expr pos:start="473:25" pos:end="473:60"><call pos:start="473:25" pos:end="473:60"><name pos:start="473:25" pos:end="473:32">put_le16</name><argument_list pos:start="473:33" pos:end="473:60">(<argument pos:start="473:34" pos:end="473:54"><expr pos:start="473:34" pos:end="473:54"><name pos:start="473:34" pos:end="473:49"><name pos:start="473:34" pos:end="473:34">s</name><operator pos:start="473:35" pos:end="473:36">-&gt;</operator><name pos:start="473:37" pos:end="473:49">identify_data</name></name> <operator pos:start="473:51" pos:end="473:51">+</operator> <literal type="number" pos:start="473:53" pos:end="473:54">62</literal></expr></argument>,<argument pos:start="473:56" pos:end="473:59"><expr pos:start="473:56" pos:end="473:59"><literal type="number" pos:start="473:56" pos:end="473:59">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="475:25" pos:end="475:61"><expr pos:start="475:25" pos:end="475:60"><call pos:start="475:25" pos:end="475:60"><name pos:start="475:25" pos:end="475:32">put_le16</name><argument_list pos:start="475:33" pos:end="475:60">(<argument pos:start="475:34" pos:end="475:54"><expr pos:start="475:34" pos:end="475:54"><name pos:start="475:34" pos:end="475:49"><name pos:start="475:34" pos:end="475:34">s</name><operator pos:start="475:35" pos:end="475:36">-&gt;</operator><name pos:start="475:37" pos:end="475:49">identify_data</name></name> <operator pos:start="475:51" pos:end="475:51">+</operator> <literal type="number" pos:start="475:53" pos:end="475:54">63</literal></expr></argument>,<argument pos:start="475:56" pos:end="475:59"><expr pos:start="475:56" pos:end="475:59"><literal type="number" pos:start="475:56" pos:end="475:59">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="477:25" pos:end="477:61"><expr pos:start="477:25" pos:end="477:60"><call pos:start="477:25" pos:end="477:60"><name pos:start="477:25" pos:end="477:32">put_le16</name><argument_list pos:start="477:33" pos:end="477:60">(<argument pos:start="477:34" pos:end="477:54"><expr pos:start="477:34" pos:end="477:54"><name pos:start="477:34" pos:end="477:49"><name pos:start="477:34" pos:end="477:34">s</name><operator pos:start="477:35" pos:end="477:36">-&gt;</operator><name pos:start="477:37" pos:end="477:49">identify_data</name></name> <operator pos:start="477:51" pos:end="477:51">+</operator> <literal type="number" pos:start="477:53" pos:end="477:54">88</literal></expr></argument>,<argument pos:start="477:56" pos:end="477:59"><expr pos:start="477:56" pos:end="477:59"><literal type="number" pos:start="477:56" pos:end="477:59">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="479:25" pos:end="479:30">break;</break>

                    <case pos:start="481:21" pos:end="481:30">case <expr pos:start="481:26" pos:end="481:29"><literal type="number" pos:start="481:26" pos:end="481:29">0x02</literal></expr>:</case> <comment type="block" pos:start="481:32" pos:end="481:55">/* sigle word dma mode*/</comment>

			<expr_stmt pos:start="483:25" pos:end="483:80"><expr pos:start="483:25" pos:end="483:79"><call pos:start="483:25" pos:end="483:79"><name pos:start="483:25" pos:end="483:32">put_le16</name><argument_list pos:start="483:33" pos:end="483:79">(<argument pos:start="483:34" pos:end="483:54"><expr pos:start="483:34" pos:end="483:54"><name pos:start="483:34" pos:end="483:49"><name pos:start="483:34" pos:end="483:34">s</name><operator pos:start="483:35" pos:end="483:36">-&gt;</operator><name pos:start="483:37" pos:end="483:49">identify_data</name></name> <operator pos:start="483:51" pos:end="483:51">+</operator> <literal type="number" pos:start="483:53" pos:end="483:54">62</literal></expr></argument>,<argument pos:start="483:56" pos:end="483:78"><expr pos:start="483:56" pos:end="483:78"><literal type="number" pos:start="483:56" pos:end="483:59">0x07</literal> <operator pos:start="483:61" pos:end="483:61">|</operator> <operator pos:start="483:63" pos:end="483:63">(</operator><literal type="number" pos:start="483:64" pos:end="483:64">1</literal> <operator pos:start="483:66" pos:end="483:67">&lt;&lt;</operator> <operator pos:start="483:69" pos:end="483:69">(</operator><name pos:start="483:70" pos:end="483:72">val</name> <operator pos:start="483:74" pos:end="483:74">+</operator> <literal type="number" pos:start="483:76" pos:end="483:76">8</literal><operator pos:start="483:77" pos:end="483:77">)</operator><operator pos:start="483:78" pos:end="483:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="485:25" pos:end="485:61"><expr pos:start="485:25" pos:end="485:60"><call pos:start="485:25" pos:end="485:60"><name pos:start="485:25" pos:end="485:32">put_le16</name><argument_list pos:start="485:33" pos:end="485:60">(<argument pos:start="485:34" pos:end="485:54"><expr pos:start="485:34" pos:end="485:54"><name pos:start="485:34" pos:end="485:49"><name pos:start="485:34" pos:end="485:34">s</name><operator pos:start="485:35" pos:end="485:36">-&gt;</operator><name pos:start="485:37" pos:end="485:49">identify_data</name></name> <operator pos:start="485:51" pos:end="485:51">+</operator> <literal type="number" pos:start="485:53" pos:end="485:54">63</literal></expr></argument>,<argument pos:start="485:56" pos:end="485:59"><expr pos:start="485:56" pos:end="485:59"><literal type="number" pos:start="485:56" pos:end="485:59">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="487:25" pos:end="487:61"><expr pos:start="487:25" pos:end="487:60"><call pos:start="487:25" pos:end="487:60"><name pos:start="487:25" pos:end="487:32">put_le16</name><argument_list pos:start="487:33" pos:end="487:60">(<argument pos:start="487:34" pos:end="487:54"><expr pos:start="487:34" pos:end="487:54"><name pos:start="487:34" pos:end="487:49"><name pos:start="487:34" pos:end="487:34">s</name><operator pos:start="487:35" pos:end="487:36">-&gt;</operator><name pos:start="487:37" pos:end="487:49">identify_data</name></name> <operator pos:start="487:51" pos:end="487:51">+</operator> <literal type="number" pos:start="487:53" pos:end="487:54">88</literal></expr></argument>,<argument pos:start="487:56" pos:end="487:59"><expr pos:start="487:56" pos:end="487:59"><literal type="number" pos:start="487:56" pos:end="487:59">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="489:25" pos:end="489:30">break;</break>

		    <case pos:start="491:21" pos:end="491:30">case <expr pos:start="491:26" pos:end="491:29"><literal type="number" pos:start="491:26" pos:end="491:29">0x04</literal></expr>:</case> <comment type="block" pos:start="491:32" pos:end="491:46">/* mdma mode */</comment>

			<expr_stmt pos:start="493:25" pos:end="493:61"><expr pos:start="493:25" pos:end="493:60"><call pos:start="493:25" pos:end="493:60"><name pos:start="493:25" pos:end="493:32">put_le16</name><argument_list pos:start="493:33" pos:end="493:60">(<argument pos:start="493:34" pos:end="493:54"><expr pos:start="493:34" pos:end="493:54"><name pos:start="493:34" pos:end="493:49"><name pos:start="493:34" pos:end="493:34">s</name><operator pos:start="493:35" pos:end="493:36">-&gt;</operator><name pos:start="493:37" pos:end="493:49">identify_data</name></name> <operator pos:start="493:51" pos:end="493:51">+</operator> <literal type="number" pos:start="493:53" pos:end="493:54">62</literal></expr></argument>,<argument pos:start="493:56" pos:end="493:59"><expr pos:start="493:56" pos:end="493:59"><literal type="number" pos:start="493:56" pos:end="493:59">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="495:25" pos:end="495:80"><expr pos:start="495:25" pos:end="495:79"><call pos:start="495:25" pos:end="495:79"><name pos:start="495:25" pos:end="495:32">put_le16</name><argument_list pos:start="495:33" pos:end="495:79">(<argument pos:start="495:34" pos:end="495:54"><expr pos:start="495:34" pos:end="495:54"><name pos:start="495:34" pos:end="495:49"><name pos:start="495:34" pos:end="495:34">s</name><operator pos:start="495:35" pos:end="495:36">-&gt;</operator><name pos:start="495:37" pos:end="495:49">identify_data</name></name> <operator pos:start="495:51" pos:end="495:51">+</operator> <literal type="number" pos:start="495:53" pos:end="495:54">63</literal></expr></argument>,<argument pos:start="495:56" pos:end="495:78"><expr pos:start="495:56" pos:end="495:78"><literal type="number" pos:start="495:56" pos:end="495:59">0x07</literal> <operator pos:start="495:61" pos:end="495:61">|</operator> <operator pos:start="495:63" pos:end="495:63">(</operator><literal type="number" pos:start="495:64" pos:end="495:64">1</literal> <operator pos:start="495:66" pos:end="495:67">&lt;&lt;</operator> <operator pos:start="495:69" pos:end="495:69">(</operator><name pos:start="495:70" pos:end="495:72">val</name> <operator pos:start="495:74" pos:end="495:74">+</operator> <literal type="number" pos:start="495:76" pos:end="495:76">8</literal><operator pos:start="495:77" pos:end="495:77">)</operator><operator pos:start="495:78" pos:end="495:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="497:25" pos:end="497:61"><expr pos:start="497:25" pos:end="497:60"><call pos:start="497:25" pos:end="497:60"><name pos:start="497:25" pos:end="497:32">put_le16</name><argument_list pos:start="497:33" pos:end="497:60">(<argument pos:start="497:34" pos:end="497:54"><expr pos:start="497:34" pos:end="497:54"><name pos:start="497:34" pos:end="497:49"><name pos:start="497:34" pos:end="497:34">s</name><operator pos:start="497:35" pos:end="497:36">-&gt;</operator><name pos:start="497:37" pos:end="497:49">identify_data</name></name> <operator pos:start="497:51" pos:end="497:51">+</operator> <literal type="number" pos:start="497:53" pos:end="497:54">88</literal></expr></argument>,<argument pos:start="497:56" pos:end="497:59"><expr pos:start="497:56" pos:end="497:59"><literal type="number" pos:start="497:56" pos:end="497:59">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="499:25" pos:end="499:30">break;</break>

		    <case pos:start="501:21" pos:end="501:30">case <expr pos:start="501:26" pos:end="501:29"><literal type="number" pos:start="501:26" pos:end="501:29">0x08</literal></expr>:</case> <comment type="block" pos:start="501:32" pos:end="501:46">/* udma mode */</comment>

			<expr_stmt pos:start="503:25" pos:end="503:61"><expr pos:start="503:25" pos:end="503:60"><call pos:start="503:25" pos:end="503:60"><name pos:start="503:25" pos:end="503:32">put_le16</name><argument_list pos:start="503:33" pos:end="503:60">(<argument pos:start="503:34" pos:end="503:54"><expr pos:start="503:34" pos:end="503:54"><name pos:start="503:34" pos:end="503:49"><name pos:start="503:34" pos:end="503:34">s</name><operator pos:start="503:35" pos:end="503:36">-&gt;</operator><name pos:start="503:37" pos:end="503:49">identify_data</name></name> <operator pos:start="503:51" pos:end="503:51">+</operator> <literal type="number" pos:start="503:53" pos:end="503:54">62</literal></expr></argument>,<argument pos:start="503:56" pos:end="503:59"><expr pos:start="503:56" pos:end="503:59"><literal type="number" pos:start="503:56" pos:end="503:59">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="505:25" pos:end="505:61"><expr pos:start="505:25" pos:end="505:60"><call pos:start="505:25" pos:end="505:60"><name pos:start="505:25" pos:end="505:32">put_le16</name><argument_list pos:start="505:33" pos:end="505:60">(<argument pos:start="505:34" pos:end="505:54"><expr pos:start="505:34" pos:end="505:54"><name pos:start="505:34" pos:end="505:49"><name pos:start="505:34" pos:end="505:34">s</name><operator pos:start="505:35" pos:end="505:36">-&gt;</operator><name pos:start="505:37" pos:end="505:49">identify_data</name></name> <operator pos:start="505:51" pos:end="505:51">+</operator> <literal type="number" pos:start="505:53" pos:end="505:54">63</literal></expr></argument>,<argument pos:start="505:56" pos:end="505:59"><expr pos:start="505:56" pos:end="505:59"><literal type="number" pos:start="505:56" pos:end="505:59">0x07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="507:25" pos:end="507:80"><expr pos:start="507:25" pos:end="507:79"><call pos:start="507:25" pos:end="507:79"><name pos:start="507:25" pos:end="507:32">put_le16</name><argument_list pos:start="507:33" pos:end="507:79">(<argument pos:start="507:34" pos:end="507:54"><expr pos:start="507:34" pos:end="507:54"><name pos:start="507:34" pos:end="507:49"><name pos:start="507:34" pos:end="507:34">s</name><operator pos:start="507:35" pos:end="507:36">-&gt;</operator><name pos:start="507:37" pos:end="507:49">identify_data</name></name> <operator pos:start="507:51" pos:end="507:51">+</operator> <literal type="number" pos:start="507:53" pos:end="507:54">88</literal></expr></argument>,<argument pos:start="507:56" pos:end="507:78"><expr pos:start="507:56" pos:end="507:78"><literal type="number" pos:start="507:56" pos:end="507:59">0x3f</literal> <operator pos:start="507:61" pos:end="507:61">|</operator> <operator pos:start="507:63" pos:end="507:63">(</operator><literal type="number" pos:start="507:64" pos:end="507:64">1</literal> <operator pos:start="507:66" pos:end="507:67">&lt;&lt;</operator> <operator pos:start="507:69" pos:end="507:69">(</operator><name pos:start="507:70" pos:end="507:72">val</name> <operator pos:start="507:74" pos:end="507:74">+</operator> <literal type="number" pos:start="507:76" pos:end="507:76">8</literal><operator pos:start="507:77" pos:end="507:77">)</operator><operator pos:start="507:78" pos:end="507:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="509:25" pos:end="509:30">break;</break>

		    <default pos:start="511:21" pos:end="511:28">default:</default>

			<goto pos:start="513:25" pos:end="513:39">goto <name pos:start="513:30" pos:end="513:38">abort_cmd</name>;</goto>

		</block_content>}</block></switch>

                <expr_stmt pos:start="517:17" pos:end="517:51"><expr pos:start="517:17" pos:end="517:50"><name pos:start="517:17" pos:end="517:25"><name pos:start="517:17" pos:end="517:17">s</name><operator pos:start="517:18" pos:end="517:19">-&gt;</operator><name pos:start="517:20" pos:end="517:25">status</name></name> <operator pos:start="517:27" pos:end="517:27">=</operator> <name pos:start="517:29" pos:end="517:38">READY_STAT</name> <operator pos:start="517:40" pos:end="517:40">|</operator> <name pos:start="517:42" pos:end="517:50">SEEK_STAT</name></expr>;</expr_stmt>

                <expr_stmt pos:start="519:17" pos:end="519:31"><expr pos:start="519:17" pos:end="519:30"><call pos:start="519:17" pos:end="519:30"><name pos:start="519:17" pos:end="519:27">ide_set_irq</name><argument_list pos:start="519:28" pos:end="519:30">(<argument pos:start="519:29" pos:end="519:29"><expr pos:start="519:29" pos:end="519:29"><name pos:start="519:29" pos:end="519:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="521:17" pos:end="521:22">break;</break>

	    </block_content>}</block>

            <default pos:start="525:13" pos:end="525:20">default:</default>

                <goto pos:start="527:17" pos:end="527:31">goto <name pos:start="527:22" pos:end="527:30">abort_cmd</name>;</goto>

            </block_content>}</block></switch>

            <break pos:start="531:13" pos:end="531:18">break;</break>

        <case pos:start="533:9" pos:end="533:29">case <expr pos:start="533:14" pos:end="533:28"><name pos:start="533:14" pos:end="533:28">WIN_FLUSH_CACHE</name></expr>:</case>

        <case pos:start="535:9" pos:end="535:33">case <expr pos:start="535:14" pos:end="535:32"><name pos:start="535:14" pos:end="535:32">WIN_FLUSH_CACHE_EXT</name></expr>:</case>

            <if_stmt pos:start="537:13" pos:end="539:34"><if pos:start="537:13" pos:end="539:34">if <condition pos:start="537:16" pos:end="537:22">(<expr pos:start="537:17" pos:end="537:21"><name pos:start="537:17" pos:end="537:21"><name pos:start="537:17" pos:end="537:17">s</name><operator pos:start="537:18" pos:end="537:19">-&gt;</operator><name pos:start="537:20" pos:end="537:21">bs</name></name></expr>)</condition><block type="pseudo" pos:start="539:17" pos:end="539:34"><block_content pos:start="539:17" pos:end="539:34">

                <expr_stmt pos:start="539:17" pos:end="539:34"><expr pos:start="539:17" pos:end="539:33"><call pos:start="539:17" pos:end="539:33"><name pos:start="539:17" pos:end="539:26">bdrv_flush</name><argument_list pos:start="539:27" pos:end="539:33">(<argument pos:start="539:28" pos:end="539:32"><expr pos:start="539:28" pos:end="539:32"><name pos:start="539:28" pos:end="539:32"><name pos:start="539:28" pos:end="539:28">s</name><operator pos:start="539:29" pos:end="539:30">-&gt;</operator><name pos:start="539:31" pos:end="539:32">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	    <expr_stmt pos:start="541:13" pos:end="541:47"><expr pos:start="541:13" pos:end="541:46"><name pos:start="541:13" pos:end="541:21"><name pos:start="541:13" pos:end="541:13">s</name><operator pos:start="541:14" pos:end="541:15">-&gt;</operator><name pos:start="541:16" pos:end="541:21">status</name></name> <operator pos:start="541:23" pos:end="541:23">=</operator> <name pos:start="541:25" pos:end="541:34">READY_STAT</name> <operator pos:start="541:36" pos:end="541:36">|</operator> <name pos:start="541:38" pos:end="541:46">SEEK_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="543:13" pos:end="543:27"><expr pos:start="543:13" pos:end="543:26"><call pos:start="543:13" pos:end="543:26"><name pos:start="543:13" pos:end="543:23">ide_set_irq</name><argument_list pos:start="543:24" pos:end="543:26">(<argument pos:start="543:25" pos:end="543:25"><expr pos:start="543:25" pos:end="543:25"><name pos:start="543:25" pos:end="543:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="545:13" pos:end="545:18">break;</break>

        <case pos:start="547:9" pos:end="547:25">case <expr pos:start="547:14" pos:end="547:24"><name pos:start="547:14" pos:end="547:24">WIN_STANDBY</name></expr>:</case>

        <case pos:start="549:9" pos:end="549:26">case <expr pos:start="549:14" pos:end="549:25"><name pos:start="549:14" pos:end="549:25">WIN_STANDBY2</name></expr>:</case>

        <case pos:start="551:9" pos:end="551:29">case <expr pos:start="551:14" pos:end="551:28"><name pos:start="551:14" pos:end="551:28">WIN_STANDBYNOW1</name></expr>:</case>

        <case pos:start="553:9" pos:end="553:29">case <expr pos:start="553:14" pos:end="553:28"><name pos:start="553:14" pos:end="553:28">WIN_STANDBYNOW2</name></expr>:</case>

        <case pos:start="555:9" pos:end="555:31">case <expr pos:start="555:14" pos:end="555:30"><name pos:start="555:14" pos:end="555:30">WIN_IDLEIMMEDIATE</name></expr>:</case>

        <case pos:start="557:9" pos:end="557:31">case <expr pos:start="557:14" pos:end="557:30"><name pos:start="557:14" pos:end="557:30">CFA_IDLEIMMEDIATE</name></expr>:</case>

        <case pos:start="559:9" pos:end="559:26">case <expr pos:start="559:14" pos:end="559:25"><name pos:start="559:14" pos:end="559:25">WIN_SETIDLE1</name></expr>:</case>

        <case pos:start="561:9" pos:end="561:26">case <expr pos:start="561:14" pos:end="561:25"><name pos:start="561:14" pos:end="561:25">WIN_SETIDLE2</name></expr>:</case>

        <case pos:start="563:9" pos:end="563:27">case <expr pos:start="563:14" pos:end="563:26"><name pos:start="563:14" pos:end="563:26">WIN_SLEEPNOW1</name></expr>:</case>

        <case pos:start="565:9" pos:end="565:27">case <expr pos:start="565:14" pos:end="565:26"><name pos:start="565:14" pos:end="565:26">WIN_SLEEPNOW2</name></expr>:</case>

            <expr_stmt pos:start="567:13" pos:end="567:35"><expr pos:start="567:13" pos:end="567:34"><name pos:start="567:13" pos:end="567:21"><name pos:start="567:13" pos:end="567:13">s</name><operator pos:start="567:14" pos:end="567:15">-&gt;</operator><name pos:start="567:16" pos:end="567:21">status</name></name> <operator pos:start="567:23" pos:end="567:23">=</operator> <name pos:start="567:25" pos:end="567:34">READY_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="569:13" pos:end="569:27"><expr pos:start="569:13" pos:end="569:26"><call pos:start="569:13" pos:end="569:26"><name pos:start="569:13" pos:end="569:23">ide_set_irq</name><argument_list pos:start="569:24" pos:end="569:26">(<argument pos:start="569:25" pos:end="569:25"><expr pos:start="569:25" pos:end="569:25"><name pos:start="569:25" pos:end="569:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="571:13" pos:end="571:18">break;</break>

            <comment type="block" pos:start="573:13" pos:end="573:32">/* ATAPI commands */</comment>

        <case pos:start="575:9" pos:end="575:27">case <expr pos:start="575:14" pos:end="575:26"><name pos:start="575:14" pos:end="575:26">WIN_PIDENTIFY</name></expr>:</case>

            <if_stmt pos:start="577:13" pos:end="589:13"><if pos:start="577:13" pos:end="585:13">if <condition pos:start="577:16" pos:end="577:28">(<expr pos:start="577:17" pos:end="577:27"><name pos:start="577:17" pos:end="577:27"><name pos:start="577:17" pos:end="577:17">s</name><operator pos:start="577:18" pos:end="577:19">-&gt;</operator><name pos:start="577:20" pos:end="577:27">is_cdrom</name></name></expr>)</condition> <block pos:start="577:30" pos:end="585:13">{<block_content pos:start="579:17" pos:end="583:76">

                <expr_stmt pos:start="579:17" pos:end="579:38"><expr pos:start="579:17" pos:end="579:37"><call pos:start="579:17" pos:end="579:37"><name pos:start="579:17" pos:end="579:34">ide_atapi_identify</name><argument_list pos:start="579:35" pos:end="579:37">(<argument pos:start="579:36" pos:end="579:36"><expr pos:start="579:36" pos:end="579:36"><name pos:start="579:36" pos:end="579:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="581:17" pos:end="581:51"><expr pos:start="581:17" pos:end="581:50"><name pos:start="581:17" pos:end="581:25"><name pos:start="581:17" pos:end="581:17">s</name><operator pos:start="581:18" pos:end="581:19">-&gt;</operator><name pos:start="581:20" pos:end="581:25">status</name></name> <operator pos:start="581:27" pos:end="581:27">=</operator> <name pos:start="581:29" pos:end="581:38">READY_STAT</name> <operator pos:start="581:40" pos:end="581:40">|</operator> <name pos:start="581:42" pos:end="581:50">SEEK_STAT</name></expr>;</expr_stmt>

                <expr_stmt pos:start="583:17" pos:end="583:76"><expr pos:start="583:17" pos:end="583:75"><call pos:start="583:17" pos:end="583:75"><name pos:start="583:17" pos:end="583:34">ide_transfer_start</name><argument_list pos:start="583:35" pos:end="583:75">(<argument pos:start="583:36" pos:end="583:36"><expr pos:start="583:36" pos:end="583:36"><name pos:start="583:36" pos:end="583:36">s</name></expr></argument>, <argument pos:start="583:39" pos:end="583:50"><expr pos:start="583:39" pos:end="583:50"><name pos:start="583:39" pos:end="583:50"><name pos:start="583:39" pos:end="583:39">s</name><operator pos:start="583:40" pos:end="583:41">-&gt;</operator><name pos:start="583:42" pos:end="583:50">io_buffer</name></name></expr></argument>, <argument pos:start="583:53" pos:end="583:55"><expr pos:start="583:53" pos:end="583:55"><literal type="number" pos:start="583:53" pos:end="583:55">512</literal></expr></argument>, <argument pos:start="583:58" pos:end="583:74"><expr pos:start="583:58" pos:end="583:74"><name pos:start="583:58" pos:end="583:74">ide_transfer_stop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="585:15" pos:end="589:13">else <block pos:start="585:20" pos:end="589:13">{<block_content pos:start="587:17" pos:end="587:37">

                <expr_stmt pos:start="587:17" pos:end="587:37"><expr pos:start="587:17" pos:end="587:36"><call pos:start="587:17" pos:end="587:36"><name pos:start="587:17" pos:end="587:33">ide_abort_command</name><argument_list pos:start="587:34" pos:end="587:36">(<argument pos:start="587:35" pos:end="587:35"><expr pos:start="587:35" pos:end="587:35"><name pos:start="587:35" pos:end="587:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="591:13" pos:end="591:27"><expr pos:start="591:13" pos:end="591:26"><call pos:start="591:13" pos:end="591:26"><name pos:start="591:13" pos:end="591:23">ide_set_irq</name><argument_list pos:start="591:24" pos:end="591:26">(<argument pos:start="591:25" pos:end="591:25"><expr pos:start="591:25" pos:end="591:25"><name pos:start="591:25" pos:end="591:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="593:13" pos:end="593:18">break;</break>

        <case pos:start="595:9" pos:end="595:26">case <expr pos:start="595:14" pos:end="595:25"><name pos:start="595:14" pos:end="595:25">WIN_DIAGNOSE</name></expr>:</case>

            <expr_stmt pos:start="597:13" pos:end="597:33"><expr pos:start="597:13" pos:end="597:32"><call pos:start="597:13" pos:end="597:32"><name pos:start="597:13" pos:end="597:29">ide_set_signature</name><argument_list pos:start="597:30" pos:end="597:32">(<argument pos:start="597:31" pos:end="597:31"><expr pos:start="597:31" pos:end="597:31"><name pos:start="597:31" pos:end="597:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="599:13" pos:end="599:47"><expr pos:start="599:13" pos:end="599:46"><name pos:start="599:13" pos:end="599:21"><name pos:start="599:13" pos:end="599:13">s</name><operator pos:start="599:14" pos:end="599:15">-&gt;</operator><name pos:start="599:16" pos:end="599:21">status</name></name> <operator pos:start="599:23" pos:end="599:23">=</operator> <name pos:start="599:25" pos:end="599:34">READY_STAT</name> <operator pos:start="599:36" pos:end="599:36">|</operator> <name pos:start="599:38" pos:end="599:46">SEEK_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="601:13" pos:end="601:28"><expr pos:start="601:13" pos:end="601:27"><name pos:start="601:13" pos:end="601:20"><name pos:start="601:13" pos:end="601:13">s</name><operator pos:start="601:14" pos:end="601:15">-&gt;</operator><name pos:start="601:16" pos:end="601:20">error</name></name> <operator pos:start="601:22" pos:end="601:22">=</operator> <literal type="number" pos:start="601:24" pos:end="601:27">0x01</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="603:13" pos:end="603:27"><expr pos:start="603:13" pos:end="603:26"><call pos:start="603:13" pos:end="603:26"><name pos:start="603:13" pos:end="603:23">ide_set_irq</name><argument_list pos:start="603:24" pos:end="603:26">(<argument pos:start="603:25" pos:end="603:25"><expr pos:start="603:25" pos:end="603:25"><name pos:start="603:25" pos:end="603:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="605:13" pos:end="605:18">break;</break>

        <case pos:start="607:9" pos:end="607:22">case <expr pos:start="607:14" pos:end="607:21"><name pos:start="607:14" pos:end="607:21">WIN_SRST</name></expr>:</case>

            <if_stmt pos:start="609:13" pos:end="611:31"><if pos:start="609:13" pos:end="611:31">if <condition pos:start="609:16" pos:end="609:29">(<expr pos:start="609:17" pos:end="609:28"><operator pos:start="609:17" pos:end="609:17">!</operator><name pos:start="609:18" pos:end="609:28"><name pos:start="609:18" pos:end="609:18">s</name><operator pos:start="609:19" pos:end="609:20">-&gt;</operator><name pos:start="609:21" pos:end="609:28">is_cdrom</name></name></expr>)</condition><block type="pseudo" pos:start="611:17" pos:end="611:31"><block_content pos:start="611:17" pos:end="611:31">

                <goto pos:start="611:17" pos:end="611:31">goto <name pos:start="611:22" pos:end="611:30">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="613:13" pos:end="613:33"><expr pos:start="613:13" pos:end="613:32"><call pos:start="613:13" pos:end="613:32"><name pos:start="613:13" pos:end="613:29">ide_set_signature</name><argument_list pos:start="613:30" pos:end="613:32">(<argument pos:start="613:31" pos:end="613:31"><expr pos:start="613:31" pos:end="613:31"><name pos:start="613:31" pos:end="613:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="615:13" pos:end="615:29"><expr pos:start="615:13" pos:end="615:28"><name pos:start="615:13" pos:end="615:21"><name pos:start="615:13" pos:end="615:13">s</name><operator pos:start="615:14" pos:end="615:15">-&gt;</operator><name pos:start="615:16" pos:end="615:21">status</name></name> <operator pos:start="615:23" pos:end="615:23">=</operator> <literal type="number" pos:start="615:25" pos:end="615:28">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="615:31" pos:end="615:60">/* NOTE: READY is _not_ set */</comment>

            <expr_stmt pos:start="617:13" pos:end="617:28"><expr pos:start="617:13" pos:end="617:27"><name pos:start="617:13" pos:end="617:20"><name pos:start="617:13" pos:end="617:13">s</name><operator pos:start="617:14" pos:end="617:15">-&gt;</operator><name pos:start="617:16" pos:end="617:20">error</name></name> <operator pos:start="617:22" pos:end="617:22">=</operator> <literal type="number" pos:start="617:24" pos:end="617:27">0x01</literal></expr>;</expr_stmt>

            <break pos:start="619:13" pos:end="619:18">break;</break>

        <case pos:start="621:9" pos:end="621:27">case <expr pos:start="621:14" pos:end="621:26"><name pos:start="621:14" pos:end="621:26">WIN_PACKETCMD</name></expr>:</case>

            <if_stmt pos:start="623:13" pos:end="625:31"><if pos:start="623:13" pos:end="625:31">if <condition pos:start="623:16" pos:end="623:29">(<expr pos:start="623:17" pos:end="623:28"><operator pos:start="623:17" pos:end="623:17">!</operator><name pos:start="623:18" pos:end="623:28"><name pos:start="623:18" pos:end="623:18">s</name><operator pos:start="623:19" pos:end="623:20">-&gt;</operator><name pos:start="623:21" pos:end="623:28">is_cdrom</name></name></expr>)</condition><block type="pseudo" pos:start="625:17" pos:end="625:31"><block_content pos:start="625:17" pos:end="625:31">

                <goto pos:start="625:17" pos:end="625:31">goto <name pos:start="625:22" pos:end="625:30">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="627:13" pos:end="627:52">/* overlapping commands not supported */</comment>

            <if_stmt pos:start="629:13" pos:end="631:31"><if pos:start="629:13" pos:end="631:31">if <condition pos:start="629:16" pos:end="629:34">(<expr pos:start="629:17" pos:end="629:33"><name pos:start="629:17" pos:end="629:26"><name pos:start="629:17" pos:end="629:17">s</name><operator pos:start="629:18" pos:end="629:19">-&gt;</operator><name pos:start="629:20" pos:end="629:26">feature</name></name> <operator pos:start="629:28" pos:end="629:28">&amp;</operator> <literal type="number" pos:start="629:30" pos:end="629:33">0x02</literal></expr>)</condition><block type="pseudo" pos:start="631:17" pos:end="631:31"><block_content pos:start="631:17" pos:end="631:31">

                <goto pos:start="631:17" pos:end="631:31">goto <name pos:start="631:22" pos:end="631:30">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="633:13" pos:end="633:47"><expr pos:start="633:13" pos:end="633:46"><name pos:start="633:13" pos:end="633:21"><name pos:start="633:13" pos:end="633:13">s</name><operator pos:start="633:14" pos:end="633:15">-&gt;</operator><name pos:start="633:16" pos:end="633:21">status</name></name> <operator pos:start="633:23" pos:end="633:23">=</operator> <name pos:start="633:25" pos:end="633:34">READY_STAT</name> <operator pos:start="633:36" pos:end="633:36">|</operator> <name pos:start="633:38" pos:end="633:46">SEEK_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="635:13" pos:end="635:42"><expr pos:start="635:13" pos:end="635:41"><name pos:start="635:13" pos:end="635:24"><name pos:start="635:13" pos:end="635:13">s</name><operator pos:start="635:14" pos:end="635:15">-&gt;</operator><name pos:start="635:16" pos:end="635:24">atapi_dma</name></name> <operator pos:start="635:26" pos:end="635:26">=</operator> <name pos:start="635:28" pos:end="635:37"><name pos:start="635:28" pos:end="635:28">s</name><operator pos:start="635:29" pos:end="635:30">-&gt;</operator><name pos:start="635:31" pos:end="635:37">feature</name></name> <operator pos:start="635:39" pos:end="635:39">&amp;</operator> <literal type="number" pos:start="635:41" pos:end="635:41">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="637:13" pos:end="637:27"><expr pos:start="637:13" pos:end="637:26"><name pos:start="637:13" pos:end="637:22"><name pos:start="637:13" pos:end="637:13">s</name><operator pos:start="637:14" pos:end="637:15">-&gt;</operator><name pos:start="637:16" pos:end="637:22">nsector</name></name> <operator pos:start="637:24" pos:end="637:24">=</operator> <literal type="number" pos:start="637:26" pos:end="637:26">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="639:13" pos:end="641:46"><expr pos:start="639:13" pos:end="641:45"><call pos:start="639:13" pos:end="641:45"><name pos:start="639:13" pos:end="639:30">ide_transfer_start</name><argument_list pos:start="639:31" pos:end="641:45">(<argument pos:start="639:32" pos:end="639:32"><expr pos:start="639:32" pos:end="639:32"><name pos:start="639:32" pos:end="639:32">s</name></expr></argument>, <argument pos:start="639:35" pos:end="639:46"><expr pos:start="639:35" pos:end="639:46"><name pos:start="639:35" pos:end="639:46"><name pos:start="639:35" pos:end="639:35">s</name><operator pos:start="639:36" pos:end="639:37">-&gt;</operator><name pos:start="639:38" pos:end="639:46">io_buffer</name></name></expr></argument>, <argument pos:start="639:49" pos:end="639:65"><expr pos:start="639:49" pos:end="639:65"><name pos:start="639:49" pos:end="639:65">ATAPI_PACKET_SIZE</name></expr></argument>,

                               <argument pos:start="641:32" pos:end="641:44"><expr pos:start="641:32" pos:end="641:44"><name pos:start="641:32" pos:end="641:44">ide_atapi_cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="643:13" pos:end="643:18">break;</break>

        <comment type="block" pos:start="645:9" pos:end="645:29">/* CF-ATA commands */</comment>

        <case pos:start="647:9" pos:end="647:36">case <expr pos:start="647:14" pos:end="647:35"><name pos:start="647:14" pos:end="647:35">CFA_REQ_EXT_ERROR_CODE</name></expr>:</case>

            <if_stmt pos:start="649:13" pos:end="651:31"><if pos:start="649:13" pos:end="651:31">if <condition pos:start="649:16" pos:end="649:26">(<expr pos:start="649:17" pos:end="649:25"><operator pos:start="649:17" pos:end="649:17">!</operator><name pos:start="649:18" pos:end="649:25"><name pos:start="649:18" pos:end="649:18">s</name><operator pos:start="649:19" pos:end="649:20">-&gt;</operator><name pos:start="649:21" pos:end="649:25">is_cf</name></name></expr>)</condition><block type="pseudo" pos:start="651:17" pos:end="651:31"><block_content pos:start="651:17" pos:end="651:31">

                <goto pos:start="651:17" pos:end="651:31">goto <name pos:start="651:22" pos:end="651:30">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="653:13" pos:end="653:28"><expr pos:start="653:13" pos:end="653:27"><name pos:start="653:13" pos:end="653:20"><name pos:start="653:13" pos:end="653:13">s</name><operator pos:start="653:14" pos:end="653:15">-&gt;</operator><name pos:start="653:16" pos:end="653:20">error</name></name> <operator pos:start="653:22" pos:end="653:22">=</operator> <literal type="number" pos:start="653:24" pos:end="653:27">0x09</literal></expr>;</expr_stmt>    <comment type="block" pos:start="653:33" pos:end="653:57">/* miscellaneous error */</comment>

            <expr_stmt pos:start="655:13" pos:end="655:47"><expr pos:start="655:13" pos:end="655:46"><name pos:start="655:13" pos:end="655:21"><name pos:start="655:13" pos:end="655:13">s</name><operator pos:start="655:14" pos:end="655:15">-&gt;</operator><name pos:start="655:16" pos:end="655:21">status</name></name> <operator pos:start="655:23" pos:end="655:23">=</operator> <name pos:start="655:25" pos:end="655:34">READY_STAT</name> <operator pos:start="655:36" pos:end="655:36">|</operator> <name pos:start="655:38" pos:end="655:46">SEEK_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="657:13" pos:end="657:27"><expr pos:start="657:13" pos:end="657:26"><call pos:start="657:13" pos:end="657:26"><name pos:start="657:13" pos:end="657:23">ide_set_irq</name><argument_list pos:start="657:24" pos:end="657:26">(<argument pos:start="657:25" pos:end="657:25"><expr pos:start="657:25" pos:end="657:25"><name pos:start="657:25" pos:end="657:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="659:13" pos:end="659:18">break;</break>

        <case pos:start="661:9" pos:end="661:31">case <expr pos:start="661:14" pos:end="661:30"><name pos:start="661:14" pos:end="661:30">CFA_ERASE_SECTORS</name></expr>:</case>

        <case pos:start="663:9" pos:end="663:28">case <expr pos:start="663:14" pos:end="663:27"><name pos:start="663:14" pos:end="663:27">CFA_WEAR_LEVEL</name></expr>:</case>

            <if_stmt pos:start="665:13" pos:end="667:31"><if pos:start="665:13" pos:end="667:31">if <condition pos:start="665:16" pos:end="665:26">(<expr pos:start="665:17" pos:end="665:25"><operator pos:start="665:17" pos:end="665:17">!</operator><name pos:start="665:18" pos:end="665:25"><name pos:start="665:18" pos:end="665:18">s</name><operator pos:start="665:19" pos:end="665:20">-&gt;</operator><name pos:start="665:21" pos:end="665:25">is_cf</name></name></expr>)</condition><block type="pseudo" pos:start="667:17" pos:end="667:31"><block_content pos:start="667:17" pos:end="667:31">

                <goto pos:start="667:17" pos:end="667:31">goto <name pos:start="667:22" pos:end="667:30">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="669:13" pos:end="671:31"><if pos:start="669:13" pos:end="671:31">if <condition pos:start="669:16" pos:end="669:38">(<expr pos:start="669:17" pos:end="669:37"><name pos:start="669:17" pos:end="669:19">val</name> <operator pos:start="669:21" pos:end="669:22">==</operator> <name pos:start="669:24" pos:end="669:37">CFA_WEAR_LEVEL</name></expr>)</condition><block type="pseudo" pos:start="671:17" pos:end="671:31"><block_content pos:start="671:17" pos:end="671:31">

                <expr_stmt pos:start="671:17" pos:end="671:31"><expr pos:start="671:17" pos:end="671:30"><name pos:start="671:17" pos:end="671:26"><name pos:start="671:17" pos:end="671:17">s</name><operator pos:start="671:18" pos:end="671:19">-&gt;</operator><name pos:start="671:20" pos:end="671:26">nsector</name></name> <operator pos:start="671:28" pos:end="671:28">=</operator> <literal type="number" pos:start="671:30" pos:end="671:30">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="673:13" pos:end="675:37"><if pos:start="673:13" pos:end="675:37">if <condition pos:start="673:16" pos:end="673:41">(<expr pos:start="673:17" pos:end="673:40"><name pos:start="673:17" pos:end="673:19">val</name> <operator pos:start="673:21" pos:end="673:22">==</operator> <name pos:start="673:24" pos:end="673:40">CFA_ERASE_SECTORS</name></expr>)</condition><block type="pseudo" pos:start="675:17" pos:end="675:37"><block_content pos:start="675:17" pos:end="675:37">

                <expr_stmt pos:start="675:17" pos:end="675:37"><expr pos:start="675:17" pos:end="675:36"><name pos:start="675:17" pos:end="675:32"><name pos:start="675:17" pos:end="675:17">s</name><operator pos:start="675:18" pos:end="675:19">-&gt;</operator><name pos:start="675:20" pos:end="675:32">media_changed</name></name> <operator pos:start="675:34" pos:end="675:34">=</operator> <literal type="number" pos:start="675:36" pos:end="675:36">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="677:13" pos:end="677:28"><expr pos:start="677:13" pos:end="677:27"><name pos:start="677:13" pos:end="677:20"><name pos:start="677:13" pos:end="677:13">s</name><operator pos:start="677:14" pos:end="677:15">-&gt;</operator><name pos:start="677:16" pos:end="677:20">error</name></name> <operator pos:start="677:22" pos:end="677:22">=</operator> <literal type="number" pos:start="677:24" pos:end="677:27">0x00</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="679:13" pos:end="679:47"><expr pos:start="679:13" pos:end="679:46"><name pos:start="679:13" pos:end="679:21"><name pos:start="679:13" pos:end="679:13">s</name><operator pos:start="679:14" pos:end="679:15">-&gt;</operator><name pos:start="679:16" pos:end="679:21">status</name></name> <operator pos:start="679:23" pos:end="679:23">=</operator> <name pos:start="679:25" pos:end="679:34">READY_STAT</name> <operator pos:start="679:36" pos:end="679:36">|</operator> <name pos:start="679:38" pos:end="679:46">SEEK_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="681:13" pos:end="681:27"><expr pos:start="681:13" pos:end="681:26"><call pos:start="681:13" pos:end="681:26"><name pos:start="681:13" pos:end="681:23">ide_set_irq</name><argument_list pos:start="681:24" pos:end="681:26">(<argument pos:start="681:25" pos:end="681:25"><expr pos:start="681:25" pos:end="681:25"><name pos:start="681:25" pos:end="681:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="683:13" pos:end="683:18">break;</break>

        <case pos:start="685:9" pos:end="685:34">case <expr pos:start="685:14" pos:end="685:33"><name pos:start="685:14" pos:end="685:33">CFA_TRANSLATE_SECTOR</name></expr>:</case>

            <if_stmt pos:start="687:13" pos:end="689:31"><if pos:start="687:13" pos:end="689:31">if <condition pos:start="687:16" pos:end="687:26">(<expr pos:start="687:17" pos:end="687:25"><operator pos:start="687:17" pos:end="687:17">!</operator><name pos:start="687:18" pos:end="687:25"><name pos:start="687:18" pos:end="687:18">s</name><operator pos:start="687:19" pos:end="687:20">-&gt;</operator><name pos:start="687:21" pos:end="687:25">is_cf</name></name></expr>)</condition><block type="pseudo" pos:start="689:17" pos:end="689:31"><block_content pos:start="689:17" pos:end="689:31">

                <goto pos:start="689:17" pos:end="689:31">goto <name pos:start="689:22" pos:end="689:30">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="691:13" pos:end="691:28"><expr pos:start="691:13" pos:end="691:27"><name pos:start="691:13" pos:end="691:20"><name pos:start="691:13" pos:end="691:13">s</name><operator pos:start="691:14" pos:end="691:15">-&gt;</operator><name pos:start="691:16" pos:end="691:20">error</name></name> <operator pos:start="691:22" pos:end="691:22">=</operator> <literal type="number" pos:start="691:24" pos:end="691:27">0x00</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="693:13" pos:end="693:47"><expr pos:start="693:13" pos:end="693:46"><name pos:start="693:13" pos:end="693:21"><name pos:start="693:13" pos:end="693:13">s</name><operator pos:start="693:14" pos:end="693:15">-&gt;</operator><name pos:start="693:16" pos:end="693:21">status</name></name> <operator pos:start="693:23" pos:end="693:23">=</operator> <name pos:start="693:25" pos:end="693:34">READY_STAT</name> <operator pos:start="693:36" pos:end="693:36">|</operator> <name pos:start="693:38" pos:end="693:46">SEEK_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="695:13" pos:end="695:43"><expr pos:start="695:13" pos:end="695:42"><call pos:start="695:13" pos:end="695:42"><name pos:start="695:13" pos:end="695:18">memset</name><argument_list pos:start="695:19" pos:end="695:42">(<argument pos:start="695:20" pos:end="695:31"><expr pos:start="695:20" pos:end="695:31"><name pos:start="695:20" pos:end="695:31"><name pos:start="695:20" pos:end="695:20">s</name><operator pos:start="695:21" pos:end="695:22">-&gt;</operator><name pos:start="695:23" pos:end="695:31">io_buffer</name></name></expr></argument>, <argument pos:start="695:34" pos:end="695:34"><expr pos:start="695:34" pos:end="695:34"><literal type="number" pos:start="695:34" pos:end="695:34">0</literal></expr></argument>, <argument pos:start="695:37" pos:end="695:41"><expr pos:start="695:37" pos:end="695:41"><literal type="number" pos:start="695:37" pos:end="695:41">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="697:13" pos:end="697:41"><expr pos:start="697:13" pos:end="697:40"><name pos:start="697:13" pos:end="697:30"><name pos:start="697:13" pos:end="697:13">s</name><operator pos:start="697:14" pos:end="697:15">-&gt;</operator><name pos:start="697:16" pos:end="697:24">io_buffer</name><index pos:start="697:25" pos:end="697:30">[<expr pos:start="697:26" pos:end="697:29"><literal type="number" pos:start="697:26" pos:end="697:29">0x00</literal></expr>]</index></name> <operator pos:start="697:32" pos:end="697:32">=</operator> <name pos:start="697:34" pos:end="697:40"><name pos:start="697:34" pos:end="697:34">s</name><operator pos:start="697:35" pos:end="697:36">-&gt;</operator><name pos:start="697:37" pos:end="697:40">hcyl</name></name></expr>;</expr_stmt>			<comment type="block" pos:start="697:65" pos:end="697:77">/* Cyl MSB */</comment>

            <expr_stmt pos:start="699:13" pos:end="699:41"><expr pos:start="699:13" pos:end="699:40"><name pos:start="699:13" pos:end="699:30"><name pos:start="699:13" pos:end="699:13">s</name><operator pos:start="699:14" pos:end="699:15">-&gt;</operator><name pos:start="699:16" pos:end="699:24">io_buffer</name><index pos:start="699:25" pos:end="699:30">[<expr pos:start="699:26" pos:end="699:29"><literal type="number" pos:start="699:26" pos:end="699:29">0x01</literal></expr>]</index></name> <operator pos:start="699:32" pos:end="699:32">=</operator> <name pos:start="699:34" pos:end="699:40"><name pos:start="699:34" pos:end="699:34">s</name><operator pos:start="699:35" pos:end="699:36">-&gt;</operator><name pos:start="699:37" pos:end="699:40">lcyl</name></name></expr>;</expr_stmt>			<comment type="block" pos:start="699:65" pos:end="699:77">/* Cyl LSB */</comment>

            <expr_stmt pos:start="701:13" pos:end="701:43"><expr pos:start="701:13" pos:end="701:42"><name pos:start="701:13" pos:end="701:30"><name pos:start="701:13" pos:end="701:13">s</name><operator pos:start="701:14" pos:end="701:15">-&gt;</operator><name pos:start="701:16" pos:end="701:24">io_buffer</name><index pos:start="701:25" pos:end="701:30">[<expr pos:start="701:26" pos:end="701:29"><literal type="number" pos:start="701:26" pos:end="701:29">0x02</literal></expr>]</index></name> <operator pos:start="701:32" pos:end="701:32">=</operator> <name pos:start="701:34" pos:end="701:42"><name pos:start="701:34" pos:end="701:34">s</name><operator pos:start="701:35" pos:end="701:36">-&gt;</operator><name pos:start="701:37" pos:end="701:42">select</name></name></expr>;</expr_stmt>			<comment type="block" pos:start="701:65" pos:end="701:74">/* Head */</comment>

            <expr_stmt pos:start="703:13" pos:end="703:43"><expr pos:start="703:13" pos:end="703:42"><name pos:start="703:13" pos:end="703:30"><name pos:start="703:13" pos:end="703:13">s</name><operator pos:start="703:14" pos:end="703:15">-&gt;</operator><name pos:start="703:16" pos:end="703:24">io_buffer</name><index pos:start="703:25" pos:end="703:30">[<expr pos:start="703:26" pos:end="703:29"><literal type="number" pos:start="703:26" pos:end="703:29">0x03</literal></expr>]</index></name> <operator pos:start="703:32" pos:end="703:32">=</operator> <name pos:start="703:34" pos:end="703:42"><name pos:start="703:34" pos:end="703:34">s</name><operator pos:start="703:35" pos:end="703:36">-&gt;</operator><name pos:start="703:37" pos:end="703:42">sector</name></name></expr>;</expr_stmt>			<comment type="block" pos:start="703:65" pos:end="703:76">/* Sector */</comment>

            <expr_stmt pos:start="705:13" pos:end="705:57"><expr pos:start="705:13" pos:end="705:56"><name pos:start="705:13" pos:end="705:30"><name pos:start="705:13" pos:end="705:13">s</name><operator pos:start="705:14" pos:end="705:15">-&gt;</operator><name pos:start="705:16" pos:end="705:24">io_buffer</name><index pos:start="705:25" pos:end="705:30">[<expr pos:start="705:26" pos:end="705:29"><literal type="number" pos:start="705:26" pos:end="705:29">0x04</literal></expr>]</index></name> <operator pos:start="705:32" pos:end="705:32">=</operator> <call pos:start="705:34" pos:end="705:50"><name pos:start="705:34" pos:end="705:47">ide_get_sector</name><argument_list pos:start="705:48" pos:end="705:50">(<argument pos:start="705:49" pos:end="705:49"><expr pos:start="705:49" pos:end="705:49"><name pos:start="705:49" pos:end="705:49">s</name></expr></argument>)</argument_list></call> <operator pos:start="705:52" pos:end="705:53">&gt;&gt;</operator> <literal type="number" pos:start="705:55" pos:end="705:56">16</literal></expr>;</expr_stmt>	<comment type="block" pos:start="705:65" pos:end="705:77">/* LBA MSB */</comment>

            <expr_stmt pos:start="707:13" pos:end="707:56"><expr pos:start="707:13" pos:end="707:55"><name pos:start="707:13" pos:end="707:30"><name pos:start="707:13" pos:end="707:13">s</name><operator pos:start="707:14" pos:end="707:15">-&gt;</operator><name pos:start="707:16" pos:end="707:24">io_buffer</name><index pos:start="707:25" pos:end="707:30">[<expr pos:start="707:26" pos:end="707:29"><literal type="number" pos:start="707:26" pos:end="707:29">0x05</literal></expr>]</index></name> <operator pos:start="707:32" pos:end="707:32">=</operator> <call pos:start="707:34" pos:end="707:50"><name pos:start="707:34" pos:end="707:47">ide_get_sector</name><argument_list pos:start="707:48" pos:end="707:50">(<argument pos:start="707:49" pos:end="707:49"><expr pos:start="707:49" pos:end="707:49"><name pos:start="707:49" pos:end="707:49">s</name></expr></argument>)</argument_list></call> <operator pos:start="707:52" pos:end="707:53">&gt;&gt;</operator> <literal type="number" pos:start="707:55" pos:end="707:55">8</literal></expr>;</expr_stmt>	<comment type="block" pos:start="707:65" pos:end="707:73">/* LBA */</comment>

            <expr_stmt pos:start="709:13" pos:end="709:56"><expr pos:start="709:13" pos:end="709:55"><name pos:start="709:13" pos:end="709:30"><name pos:start="709:13" pos:end="709:13">s</name><operator pos:start="709:14" pos:end="709:15">-&gt;</operator><name pos:start="709:16" pos:end="709:24">io_buffer</name><index pos:start="709:25" pos:end="709:30">[<expr pos:start="709:26" pos:end="709:29"><literal type="number" pos:start="709:26" pos:end="709:29">0x06</literal></expr>]</index></name> <operator pos:start="709:32" pos:end="709:32">=</operator> <call pos:start="709:34" pos:end="709:50"><name pos:start="709:34" pos:end="709:47">ide_get_sector</name><argument_list pos:start="709:48" pos:end="709:50">(<argument pos:start="709:49" pos:end="709:49"><expr pos:start="709:49" pos:end="709:49"><name pos:start="709:49" pos:end="709:49">s</name></expr></argument>)</argument_list></call> <operator pos:start="709:52" pos:end="709:53">&gt;&gt;</operator> <literal type="number" pos:start="709:55" pos:end="709:55">0</literal></expr>;</expr_stmt>	<comment type="block" pos:start="709:65" pos:end="709:77">/* LBA LSB */</comment>

            <expr_stmt pos:start="711:13" pos:end="711:38"><expr pos:start="711:13" pos:end="711:37"><name pos:start="711:13" pos:end="711:30"><name pos:start="711:13" pos:end="711:13">s</name><operator pos:start="711:14" pos:end="711:15">-&gt;</operator><name pos:start="711:16" pos:end="711:24">io_buffer</name><index pos:start="711:25" pos:end="711:30">[<expr pos:start="711:26" pos:end="711:29"><literal type="number" pos:start="711:26" pos:end="711:29">0x13</literal></expr>]</index></name> <operator pos:start="711:32" pos:end="711:32">=</operator> <literal type="number" pos:start="711:34" pos:end="711:37">0x00</literal></expr>;</expr_stmt>				<comment type="block" pos:start="711:65" pos:end="711:80">/* Erase flag */</comment>

            <expr_stmt pos:start="713:13" pos:end="713:38"><expr pos:start="713:13" pos:end="713:37"><name pos:start="713:13" pos:end="713:30"><name pos:start="713:13" pos:end="713:13">s</name><operator pos:start="713:14" pos:end="713:15">-&gt;</operator><name pos:start="713:16" pos:end="713:24">io_buffer</name><index pos:start="713:25" pos:end="713:30">[<expr pos:start="713:26" pos:end="713:29"><literal type="number" pos:start="713:26" pos:end="713:29">0x18</literal></expr>]</index></name> <operator pos:start="713:32" pos:end="713:32">=</operator> <literal type="number" pos:start="713:34" pos:end="713:37">0x00</literal></expr>;</expr_stmt>				<comment type="block" pos:start="713:65" pos:end="713:79">/* Hot count */</comment>

            <expr_stmt pos:start="715:13" pos:end="715:38"><expr pos:start="715:13" pos:end="715:37"><name pos:start="715:13" pos:end="715:30"><name pos:start="715:13" pos:end="715:13">s</name><operator pos:start="715:14" pos:end="715:15">-&gt;</operator><name pos:start="715:16" pos:end="715:24">io_buffer</name><index pos:start="715:25" pos:end="715:30">[<expr pos:start="715:26" pos:end="715:29"><literal type="number" pos:start="715:26" pos:end="715:29">0x19</literal></expr>]</index></name> <operator pos:start="715:32" pos:end="715:32">=</operator> <literal type="number" pos:start="715:34" pos:end="715:37">0x00</literal></expr>;</expr_stmt>				<comment type="block" pos:start="715:65" pos:end="715:79">/* Hot count */</comment>

            <expr_stmt pos:start="717:13" pos:end="717:38"><expr pos:start="717:13" pos:end="717:37"><name pos:start="717:13" pos:end="717:30"><name pos:start="717:13" pos:end="717:13">s</name><operator pos:start="717:14" pos:end="717:15">-&gt;</operator><name pos:start="717:16" pos:end="717:24">io_buffer</name><index pos:start="717:25" pos:end="717:30">[<expr pos:start="717:26" pos:end="717:29"><literal type="number" pos:start="717:26" pos:end="717:29">0x1a</literal></expr>]</index></name> <operator pos:start="717:32" pos:end="717:32">=</operator> <literal type="number" pos:start="717:34" pos:end="717:37">0x01</literal></expr>;</expr_stmt>				<comment type="block" pos:start="717:65" pos:end="717:79">/* Hot count */</comment>

            <expr_stmt pos:start="719:13" pos:end="719:74"><expr pos:start="719:13" pos:end="719:73"><call pos:start="719:13" pos:end="719:73"><name pos:start="719:13" pos:end="719:30">ide_transfer_start</name><argument_list pos:start="719:31" pos:end="719:73">(<argument pos:start="719:32" pos:end="719:32"><expr pos:start="719:32" pos:end="719:32"><name pos:start="719:32" pos:end="719:32">s</name></expr></argument>, <argument pos:start="719:35" pos:end="719:46"><expr pos:start="719:35" pos:end="719:46"><name pos:start="719:35" pos:end="719:46"><name pos:start="719:35" pos:end="719:35">s</name><operator pos:start="719:36" pos:end="719:37">-&gt;</operator><name pos:start="719:38" pos:end="719:46">io_buffer</name></name></expr></argument>, <argument pos:start="719:49" pos:end="719:53"><expr pos:start="719:49" pos:end="719:53"><literal type="number" pos:start="719:49" pos:end="719:53">0x200</literal></expr></argument>, <argument pos:start="719:56" pos:end="719:72"><expr pos:start="719:56" pos:end="719:72"><name pos:start="719:56" pos:end="719:72">ide_transfer_stop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="721:13" pos:end="721:27"><expr pos:start="721:13" pos:end="721:26"><call pos:start="721:13" pos:end="721:26"><name pos:start="721:13" pos:end="721:23">ide_set_irq</name><argument_list pos:start="721:24" pos:end="721:26">(<argument pos:start="721:25" pos:end="721:25"><expr pos:start="721:25" pos:end="721:25"><name pos:start="721:25" pos:end="721:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="723:13" pos:end="723:18">break;</break>

        <case pos:start="725:9" pos:end="725:41">case <expr pos:start="725:14" pos:end="725:40"><name pos:start="725:14" pos:end="725:40">CFA_ACCESS_METADATA_STORAGE</name></expr>:</case>

            <if_stmt pos:start="727:13" pos:end="729:31"><if pos:start="727:13" pos:end="729:31">if <condition pos:start="727:16" pos:end="727:26">(<expr pos:start="727:17" pos:end="727:25"><operator pos:start="727:17" pos:end="727:17">!</operator><name pos:start="727:18" pos:end="727:25"><name pos:start="727:18" pos:end="727:18">s</name><operator pos:start="727:19" pos:end="727:20">-&gt;</operator><name pos:start="727:21" pos:end="727:25">is_cf</name></name></expr>)</condition><block type="pseudo" pos:start="729:17" pos:end="729:31"><block_content pos:start="729:17" pos:end="729:31">

                <goto pos:start="729:17" pos:end="729:31">goto <name pos:start="729:22" pos:end="729:30">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

            <switch pos:start="731:13" pos:end="755:13">switch <condition pos:start="731:20" pos:end="731:31">(<expr pos:start="731:21" pos:end="731:30"><name pos:start="731:21" pos:end="731:30"><name pos:start="731:21" pos:end="731:21">s</name><operator pos:start="731:22" pos:end="731:23">-&gt;</operator><name pos:start="731:24" pos:end="731:30">feature</name></name></expr>)</condition> <block pos:start="731:33" pos:end="755:13">{<block_content pos:start="733:13" pos:end="753:31">

            <case pos:start="733:13" pos:end="733:22">case <expr pos:start="733:18" pos:end="733:21"><literal type="number" pos:start="733:18" pos:end="733:21">0x02</literal></expr>:</case>	<comment type="block" pos:start="733:25" pos:end="733:54">/* Inquiry Metadata Storage */</comment>

                <expr_stmt pos:start="735:17" pos:end="735:46"><expr pos:start="735:17" pos:end="735:45"><call pos:start="735:17" pos:end="735:45"><name pos:start="735:17" pos:end="735:42">ide_cfata_metadata_inquiry</name><argument_list pos:start="735:43" pos:end="735:45">(<argument pos:start="735:44" pos:end="735:44"><expr pos:start="735:44" pos:end="735:44"><name pos:start="735:44" pos:end="735:44">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="737:17" pos:end="737:22">break;</break>

            <case pos:start="739:13" pos:end="739:22">case <expr pos:start="739:18" pos:end="739:21"><literal type="number" pos:start="739:18" pos:end="739:21">0x03</literal></expr>:</case>	<comment type="block" pos:start="739:25" pos:end="739:51">/* Read Metadata Storage */</comment>

                <expr_stmt pos:start="741:17" pos:end="741:43"><expr pos:start="741:17" pos:end="741:42"><call pos:start="741:17" pos:end="741:42"><name pos:start="741:17" pos:end="741:39">ide_cfata_metadata_read</name><argument_list pos:start="741:40" pos:end="741:42">(<argument pos:start="741:41" pos:end="741:41"><expr pos:start="741:41" pos:end="741:41"><name pos:start="741:41" pos:end="741:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="743:17" pos:end="743:22">break;</break>

            <case pos:start="745:13" pos:end="745:22">case <expr pos:start="745:18" pos:end="745:21"><literal type="number" pos:start="745:18" pos:end="745:21">0x04</literal></expr>:</case>	<comment type="block" pos:start="745:25" pos:end="745:52">/* Write Metadata Storage */</comment>

                <expr_stmt pos:start="747:17" pos:end="747:44"><expr pos:start="747:17" pos:end="747:43"><call pos:start="747:17" pos:end="747:43"><name pos:start="747:17" pos:end="747:40">ide_cfata_metadata_write</name><argument_list pos:start="747:41" pos:end="747:43">(<argument pos:start="747:42" pos:end="747:42"><expr pos:start="747:42" pos:end="747:42"><name pos:start="747:42" pos:end="747:42">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="749:17" pos:end="749:22">break;</break>

            <default pos:start="751:13" pos:end="751:20">default:</default>

                <goto pos:start="753:17" pos:end="753:31">goto <name pos:start="753:22" pos:end="753:30">abort_cmd</name>;</goto>

            </block_content>}</block></switch>

            <expr_stmt pos:start="757:13" pos:end="757:74"><expr pos:start="757:13" pos:end="757:73"><call pos:start="757:13" pos:end="757:73"><name pos:start="757:13" pos:end="757:30">ide_transfer_start</name><argument_list pos:start="757:31" pos:end="757:73">(<argument pos:start="757:32" pos:end="757:32"><expr pos:start="757:32" pos:end="757:32"><name pos:start="757:32" pos:end="757:32">s</name></expr></argument>, <argument pos:start="757:35" pos:end="757:46"><expr pos:start="757:35" pos:end="757:46"><name pos:start="757:35" pos:end="757:46"><name pos:start="757:35" pos:end="757:35">s</name><operator pos:start="757:36" pos:end="757:37">-&gt;</operator><name pos:start="757:38" pos:end="757:46">io_buffer</name></name></expr></argument>, <argument pos:start="757:49" pos:end="757:53"><expr pos:start="757:49" pos:end="757:53"><literal type="number" pos:start="757:49" pos:end="757:53">0x200</literal></expr></argument>, <argument pos:start="757:56" pos:end="757:72"><expr pos:start="757:56" pos:end="757:72"><name pos:start="757:56" pos:end="757:72">ide_transfer_stop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="759:13" pos:end="759:29"><expr pos:start="759:13" pos:end="759:28"><name pos:start="759:13" pos:end="759:21"><name pos:start="759:13" pos:end="759:13">s</name><operator pos:start="759:14" pos:end="759:15">-&gt;</operator><name pos:start="759:16" pos:end="759:21">status</name></name> <operator pos:start="759:23" pos:end="759:23">=</operator> <literal type="number" pos:start="759:25" pos:end="759:28">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="759:31" pos:end="759:60">/* NOTE: READY is _not_ set */</comment>

            <expr_stmt pos:start="761:13" pos:end="761:27"><expr pos:start="761:13" pos:end="761:26"><call pos:start="761:13" pos:end="761:26"><name pos:start="761:13" pos:end="761:23">ide_set_irq</name><argument_list pos:start="761:24" pos:end="761:26">(<argument pos:start="761:25" pos:end="761:25"><expr pos:start="761:25" pos:end="761:25"><name pos:start="761:25" pos:end="761:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="763:13" pos:end="763:18">break;</break>

        <case pos:start="765:9" pos:end="765:33">case <expr pos:start="765:14" pos:end="765:32"><name pos:start="765:14" pos:end="765:32">IBM_SENSE_CONDITION</name></expr>:</case>

            <if_stmt pos:start="767:13" pos:end="769:31"><if pos:start="767:13" pos:end="769:31">if <condition pos:start="767:16" pos:end="767:26">(<expr pos:start="767:17" pos:end="767:25"><operator pos:start="767:17" pos:end="767:17">!</operator><name pos:start="767:18" pos:end="767:25"><name pos:start="767:18" pos:end="767:18">s</name><operator pos:start="767:19" pos:end="767:20">-&gt;</operator><name pos:start="767:21" pos:end="767:25">is_cf</name></name></expr>)</condition><block type="pseudo" pos:start="769:17" pos:end="769:31"><block_content pos:start="769:17" pos:end="769:31">

                <goto pos:start="769:17" pos:end="769:31">goto <name pos:start="769:22" pos:end="769:30">abort_cmd</name>;</goto></block_content></block></if></if_stmt>

            <switch pos:start="771:13" pos:end="783:13">switch <condition pos:start="771:20" pos:end="771:31">(<expr pos:start="771:21" pos:end="771:30"><name pos:start="771:21" pos:end="771:30"><name pos:start="771:21" pos:end="771:21">s</name><operator pos:start="771:22" pos:end="771:23">-&gt;</operator><name pos:start="771:24" pos:end="771:30">feature</name></name></expr>)</condition> <block pos:start="771:33" pos:end="783:13">{<block_content pos:start="773:13" pos:end="781:31">

            <case pos:start="773:13" pos:end="773:22">case <expr pos:start="773:18" pos:end="773:21"><literal type="number" pos:start="773:18" pos:end="773:21">0x01</literal></expr>:</case>  <comment type="block" pos:start="773:25" pos:end="773:57">/* sense temperature in device */</comment>

                <expr_stmt pos:start="775:17" pos:end="775:34"><expr pos:start="775:17" pos:end="775:33"><name pos:start="775:17" pos:end="775:26"><name pos:start="775:17" pos:end="775:17">s</name><operator pos:start="775:18" pos:end="775:19">-&gt;</operator><name pos:start="775:20" pos:end="775:26">nsector</name></name> <operator pos:start="775:28" pos:end="775:28">=</operator> <literal type="number" pos:start="775:30" pos:end="775:33">0x50</literal></expr>;</expr_stmt>      <comment type="block" pos:start="775:41" pos:end="775:51">/* +20 C */</comment>

                <break pos:start="777:17" pos:end="777:22">break;</break>

            <default pos:start="779:13" pos:end="779:20">default:</default>

                <goto pos:start="781:17" pos:end="781:31">goto <name pos:start="781:22" pos:end="781:30">abort_cmd</name>;</goto>

            </block_content>}</block></switch>

            <expr_stmt pos:start="785:13" pos:end="785:47"><expr pos:start="785:13" pos:end="785:46"><name pos:start="785:13" pos:end="785:21"><name pos:start="785:13" pos:end="785:13">s</name><operator pos:start="785:14" pos:end="785:15">-&gt;</operator><name pos:start="785:16" pos:end="785:21">status</name></name> <operator pos:start="785:23" pos:end="785:23">=</operator> <name pos:start="785:25" pos:end="785:34">READY_STAT</name> <operator pos:start="785:36" pos:end="785:36">|</operator> <name pos:start="785:38" pos:end="785:46">SEEK_STAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="787:13" pos:end="787:27"><expr pos:start="787:13" pos:end="787:26"><call pos:start="787:13" pos:end="787:26"><name pos:start="787:13" pos:end="787:23">ide_set_irq</name><argument_list pos:start="787:24" pos:end="787:26">(<argument pos:start="787:25" pos:end="787:25"><expr pos:start="787:25" pos:end="787:25"><name pos:start="787:25" pos:end="787:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="789:13" pos:end="789:18">break;</break>

        <default pos:start="791:9" pos:end="791:16">default:</default>

        <label pos:start="793:9" pos:end="793:18"><name pos:start="793:9" pos:end="793:17">abort_cmd</name>:</label>

            <expr_stmt pos:start="795:13" pos:end="795:33"><expr pos:start="795:13" pos:end="795:32"><call pos:start="795:13" pos:end="795:32"><name pos:start="795:13" pos:end="795:29">ide_abort_command</name><argument_list pos:start="795:30" pos:end="795:32">(<argument pos:start="795:31" pos:end="795:31"><expr pos:start="795:31" pos:end="795:31"><name pos:start="795:31" pos:end="795:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="797:13" pos:end="797:27"><expr pos:start="797:13" pos:end="797:26"><call pos:start="797:13" pos:end="797:26"><name pos:start="797:13" pos:end="797:23">ide_set_irq</name><argument_list pos:start="797:24" pos:end="797:26">(<argument pos:start="797:25" pos:end="797:25"><expr pos:start="797:25" pos:end="797:25"><name pos:start="797:25" pos:end="797:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="799:13" pos:end="799:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
