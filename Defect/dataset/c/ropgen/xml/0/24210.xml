<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24210.c" pos:tabs="8"><function pos:start="1:1" pos:end="219:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:6">PCIBus</name> <modifier pos:start="1:8" pos:end="1:8">*</modifier></type><name pos:start="1:9" pos:end="1:20">typhoon_init</name><parameter_list pos:start="1:21" pos:end="5:67">(<parameter pos:start="1:22" pos:end="1:40"><decl pos:start="1:22" pos:end="1:40"><type pos:start="1:22" pos:end="1:40"><name pos:start="1:22" pos:end="1:31">ram_addr_t</name></type> <name pos:start="1:33" pos:end="1:40">ram_size</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><name pos:start="1:43" pos:end="1:48">ISABus</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier><modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:58">isa_bus</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:40"><decl pos:start="3:22" pos:end="3:40"><type pos:start="3:22" pos:end="3:40"><name pos:start="3:22" pos:end="3:29">qemu_irq</name> <modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:40">p_rtc_irq</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:38"><decl pos:start="5:22" pos:end="5:38"><type pos:start="5:22" pos:end="5:35"><name pos:start="5:22" pos:end="5:29">AlphaCPU</name> <modifier pos:start="5:31" pos:end="5:31">*</modifier></type><name pos:start="5:32" pos:end="5:38"><name pos:start="5:32" pos:end="5:35">cpus</name><index pos:start="5:36" pos:end="5:38">[<expr pos:start="5:37" pos:end="5:37"><literal type="number" pos:start="5:37" pos:end="5:37">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="5:41" pos:end="5:66"><decl pos:start="5:41" pos:end="5:66"><type pos:start="5:41" pos:end="5:66"><name pos:start="5:41" pos:end="5:54">pci_map_irq_fn</name></type> <name pos:start="5:56" pos:end="5:66">sys_map_irq</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="219:1">{<block_content pos:start="9:5" pos:end="217:13">

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:18"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:18">uint64_t</name></type> <name pos:start="9:20" pos:end="9:21">MB</name> <init pos:start="9:23" pos:end="9:35">= <expr pos:start="9:25" pos:end="9:35"><literal type="number" pos:start="9:25" pos:end="9:28">1024</literal> <operator pos:start="9:30" pos:end="9:30">*</operator> <literal type="number" pos:start="9:32" pos:end="9:35">1024</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:18"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:18">uint64_t</name></type> <name pos:start="11:20" pos:end="11:21">GB</name> <init pos:start="11:23" pos:end="11:33">= <expr pos:start="11:25" pos:end="11:33"><literal type="number" pos:start="11:25" pos:end="11:28">1024</literal> <operator pos:start="11:30" pos:end="11:30">*</operator> <name pos:start="11:32" pos:end="11:33">MB</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:51"><decl pos:start="13:5" pos:end="13:50"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">MemoryRegion</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:28">addr_space</name> <init pos:start="13:30" pos:end="13:50">= <expr pos:start="13:32" pos:end="13:50"><call pos:start="13:32" pos:end="13:50"><name pos:start="13:32" pos:end="13:48">get_system_memory</name><argument_list pos:start="13:49" pos:end="13:50">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:15">DeviceState</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:16">TyphoonState</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:19">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:16">PCIHostState</name> <modifier pos:start="19:18" pos:end="19:18">*</modifier></type><name pos:start="19:19" pos:end="19:21">phb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:14"><decl pos:start="21:5" pos:end="21:13"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:10">PCIBus</name> <modifier pos:start="21:12" pos:end="21:12">*</modifier></type><name pos:start="21:13" pos:end="21:13">b</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:10"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:58"><expr pos:start="27:5" pos:end="27:57"><name pos:start="27:5" pos:end="27:7">dev</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:57"><name pos:start="27:11" pos:end="27:21">qdev_create</name><argument_list pos:start="27:22" pos:end="27:57">(<argument pos:start="27:23" pos:end="27:26"><expr pos:start="27:23" pos:end="27:26"><name pos:start="27:23" pos:end="27:26">NULL</name></expr></argument>, <argument pos:start="27:29" pos:end="27:56"><expr pos:start="27:29" pos:end="27:56"><name pos:start="27:29" pos:end="27:56">TYPE_TYPHOON_PCI_HOST_BRIDGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><call pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:20">qdev_init_nofail</name><argument_list pos:start="29:21" pos:end="29:25">(<argument pos:start="29:22" pos:end="29:24"><expr pos:start="29:22" pos:end="29:24"><name pos:start="29:22" pos:end="29:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:37"><expr pos:start="33:5" pos:end="33:36"><name pos:start="33:5" pos:end="33:5">s</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <call pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:31">TYPHOON_PCI_HOST_BRIDGE</name><argument_list pos:start="33:32" pos:end="33:36">(<argument pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><name pos:start="33:33" pos:end="33:35">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:7">phb</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:30"><name pos:start="35:11" pos:end="35:25">PCI_HOST_BRIDGE</name><argument_list pos:start="35:26" pos:end="35:30">(<argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><name pos:start="35:27" pos:end="35:29">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:71">/* Remember the CPUs so that we can deliver interrupts to them.  */</comment>

    <for pos:start="41:5" pos:end="57:5">for <control pos:start="41:9" pos:end="41:27">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:22"><expr pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <literal type="number" pos:start="41:21" pos:end="41:21">4</literal></expr>;</condition> <incr pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:24">i</name><operator pos:start="41:25" pos:end="41:26">++</operator></expr></incr>)</control> <block pos:start="41:29" pos:end="57:5">{<block_content pos:start="43:9" pos:end="55:9">

        <decl_stmt pos:start="43:9" pos:end="43:32"><decl pos:start="43:9" pos:end="43:31"><type pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:16">AlphaCPU</name> <modifier pos:start="43:18" pos:end="43:18">*</modifier></type><name pos:start="43:19" pos:end="43:21">cpu</name> <init pos:start="43:23" pos:end="43:31">= <expr pos:start="43:25" pos:end="43:31"><name pos:start="43:25" pos:end="43:31"><name pos:start="43:25" pos:end="43:28">cpus</name><index pos:start="43:29" pos:end="43:31">[<expr pos:start="43:30" pos:end="43:30"><name pos:start="43:30" pos:end="43:30">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:16">cchip</name><operator pos:start="45:17" pos:end="45:17">.</operator><name pos:start="45:18" pos:end="45:20">cpu</name><index pos:start="45:21" pos:end="45:23">[<expr pos:start="45:22" pos:end="45:22"><name pos:start="45:22" pos:end="45:22">i</name></expr>]</index></name> <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:29">cpu</name></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:24">(<expr pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:15">cpu</name> <operator pos:start="47:17" pos:end="47:18">!=</operator> <name pos:start="47:20" pos:end="47:23">NULL</name></expr>)</condition> <block pos:start="47:26" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:77">

            <expr_stmt pos:start="49:13" pos:end="53:77"><expr pos:start="49:13" pos:end="53:76"><name pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:15">cpu</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:28">alarm_timer</name></name> <operator pos:start="49:30" pos:end="49:30">=</operator> <call pos:start="49:32" pos:end="53:76"><name pos:start="49:32" pos:end="49:48">qemu_new_timer_ns</name><argument_list pos:start="49:49" pos:end="53:76">(<argument pos:start="49:50" pos:end="49:58"><expr pos:start="49:50" pos:end="49:58"><name pos:start="49:50" pos:end="49:58">rtc_clock</name></expr></argument>,

                                                 <argument pos:start="51:50" pos:end="51:68"><expr pos:start="51:50" pos:end="51:68"><name pos:start="51:50" pos:end="51:68">typhoon_alarm_timer</name></expr></argument>,

                                                 <argument pos:start="53:50" pos:end="53:75"><expr pos:start="53:50" pos:end="53:75"><operator pos:start="53:50" pos:end="53:50">(</operator><name pos:start="53:51" pos:end="53:54">void</name> <operator pos:start="53:56" pos:end="53:56">*</operator><operator pos:start="53:57" pos:end="53:57">)</operator><operator pos:start="53:58" pos:end="53:58">(</operator><operator pos:start="53:59" pos:end="53:59">(</operator><name pos:start="53:60" pos:end="53:68">uintptr_t</name><operator pos:start="53:69" pos:end="53:69">)</operator><name pos:start="53:70" pos:end="53:70">s</name> <operator pos:start="53:72" pos:end="53:72">+</operator> <name pos:start="53:74" pos:end="53:74">i</name><operator pos:start="53:75" pos:end="53:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="61:5" pos:end="61:66"><expr pos:start="61:5" pos:end="61:65"><operator pos:start="61:5" pos:end="61:5">*</operator><name pos:start="61:6" pos:end="61:14">p_rtc_irq</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <operator pos:start="61:18" pos:end="61:18">*</operator><call pos:start="61:19" pos:end="61:65"><name pos:start="61:19" pos:end="61:36">qemu_allocate_irqs</name><argument_list pos:start="61:37" pos:end="61:65">(<argument pos:start="61:38" pos:end="61:58"><expr pos:start="61:38" pos:end="61:58"><name pos:start="61:38" pos:end="61:58">typhoon_set_timer_irq</name></expr></argument>, <argument pos:start="61:61" pos:end="61:61"><expr pos:start="61:61" pos:end="61:61"><name pos:start="61:61" pos:end="61:61">s</name></expr></argument>, <argument pos:start="61:64" pos:end="61:64"><expr pos:start="61:64" pos:end="61:64"><literal type="number" pos:start="61:64" pos:end="61:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="67:68">/* Main memory region, 0x00.0000.0000.  Real hardware supports 32GB,

       but the address space hole reserved at this point is 8TB.  */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:71"><expr pos:start="69:5" pos:end="69:70"><call pos:start="69:5" pos:end="69:70"><name pos:start="69:5" pos:end="69:26">memory_region_init_ram</name><argument_list pos:start="69:27" pos:end="69:70">(<argument pos:start="69:28" pos:end="69:41"><expr pos:start="69:28" pos:end="69:41"><operator pos:start="69:28" pos:end="69:28">&amp;</operator><name pos:start="69:29" pos:end="69:41"><name pos:start="69:29" pos:end="69:29">s</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:41">ram_region</name></name></expr></argument>, <argument pos:start="69:44" pos:end="69:52"><expr pos:start="69:44" pos:end="69:52"><call pos:start="69:44" pos:end="69:52"><name pos:start="69:44" pos:end="69:49">OBJECT</name><argument_list pos:start="69:50" pos:end="69:52">(<argument pos:start="69:51" pos:end="69:51"><expr pos:start="69:51" pos:end="69:51"><name pos:start="69:51" pos:end="69:51">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:55" pos:end="69:59"><expr pos:start="69:55" pos:end="69:59"><literal type="string" pos:start="69:55" pos:end="69:59">"ram"</literal></expr></argument>, <argument pos:start="69:62" pos:end="69:69"><expr pos:start="69:62" pos:end="69:69"><name pos:start="69:62" pos:end="69:69">ram_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:48"><expr pos:start="71:5" pos:end="71:47"><call pos:start="71:5" pos:end="71:47"><name pos:start="71:5" pos:end="71:31">vmstate_register_ram_global</name><argument_list pos:start="71:32" pos:end="71:47">(<argument pos:start="71:33" pos:end="71:46"><expr pos:start="71:33" pos:end="71:46"><operator pos:start="71:33" pos:end="71:33">&amp;</operator><name pos:start="71:34" pos:end="71:46"><name pos:start="71:34" pos:end="71:34">s</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:46">ram_region</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:63"><expr pos:start="73:5" pos:end="73:62"><call pos:start="73:5" pos:end="73:62"><name pos:start="73:5" pos:end="73:31">memory_region_add_subregion</name><argument_list pos:start="73:32" pos:end="73:62">(<argument pos:start="73:33" pos:end="73:42"><expr pos:start="73:33" pos:end="73:42"><name pos:start="73:33" pos:end="73:42">addr_space</name></expr></argument>, <argument pos:start="73:45" pos:end="73:45"><expr pos:start="73:45" pos:end="73:45"><literal type="number" pos:start="73:45" pos:end="73:45">0</literal></expr></argument>, <argument pos:start="73:48" pos:end="73:61"><expr pos:start="73:48" pos:end="73:61"><operator pos:start="73:48" pos:end="73:48">&amp;</operator><name pos:start="73:49" pos:end="73:61"><name pos:start="73:49" pos:end="73:49">s</name><operator pos:start="73:50" pos:end="73:51">-&gt;</operator><name pos:start="73:52" pos:end="73:61">ram_region</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:40">/* TIGbus, 0x801.0000.0000, 1GB.  */</comment>

    <comment type="block" pos:start="79:5" pos:end="81:76">/* ??? The TIGbus is used for delivering interrupts, and access to

       the flash ROM.  I'm not sure that we need to implement it at all.  */</comment>



    <comment type="block" pos:start="85:5" pos:end="85:47">/* Pchip0 CSRs, 0x801.8000.0000, 256MB.  */</comment>

    <expr_stmt pos:start="87:5" pos:end="89:34"><expr pos:start="87:5" pos:end="89:33"><call pos:start="87:5" pos:end="89:33"><name pos:start="87:5" pos:end="87:25">memory_region_init_io</name><argument_list pos:start="87:26" pos:end="89:33">(<argument pos:start="87:27" pos:end="87:42"><expr pos:start="87:27" pos:end="87:42"><operator pos:start="87:27" pos:end="87:27">&amp;</operator><name pos:start="87:28" pos:end="87:42"><name pos:start="87:28" pos:end="87:28">s</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:35">pchip</name><operator pos:start="87:36" pos:end="87:36">.</operator><name pos:start="87:37" pos:end="87:42">region</name></name></expr></argument>, <argument pos:start="87:45" pos:end="87:53"><expr pos:start="87:45" pos:end="87:53"><call pos:start="87:45" pos:end="87:53"><name pos:start="87:45" pos:end="87:50">OBJECT</name><argument_list pos:start="87:51" pos:end="87:53">(<argument pos:start="87:52" pos:end="87:52"><expr pos:start="87:52" pos:end="87:52"><name pos:start="87:52" pos:end="87:52">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="87:56" pos:end="87:65"><expr pos:start="87:56" pos:end="87:65"><operator pos:start="87:56" pos:end="87:56">&amp;</operator><name pos:start="87:57" pos:end="87:65">pchip_ops</name></expr></argument>, <argument pos:start="87:68" pos:end="87:68"><expr pos:start="87:68" pos:end="87:68"><name pos:start="87:68" pos:end="87:68">s</name></expr></argument>, <argument pos:start="87:71" pos:end="87:78"><expr pos:start="87:71" pos:end="87:78"><literal type="string" pos:start="87:71" pos:end="87:78">"pchip0"</literal></expr></argument>,

                          <argument pos:start="89:27" pos:end="89:32"><expr pos:start="89:27" pos:end="89:32"><literal type="number" pos:start="89:27" pos:end="89:29">256</literal><operator pos:start="89:30" pos:end="89:30">*</operator><name pos:start="89:31" pos:end="89:32">MB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="93:50"><expr pos:start="91:5" pos:end="93:49"><call pos:start="91:5" pos:end="93:49"><name pos:start="91:5" pos:end="91:31">memory_region_add_subregion</name><argument_list pos:start="91:32" pos:end="93:49">(<argument pos:start="91:33" pos:end="91:42"><expr pos:start="91:33" pos:end="91:42"><name pos:start="91:33" pos:end="91:42">addr_space</name></expr></argument>, <argument pos:start="91:45" pos:end="91:60"><expr pos:start="91:45" pos:end="91:60"><literal type="number" pos:start="91:45" pos:end="91:60">0x80180000000ULL</literal></expr></argument>,

                                <argument pos:start="93:33" pos:end="93:48"><expr pos:start="93:33" pos:end="93:48"><operator pos:start="93:33" pos:end="93:33">&amp;</operator><name pos:start="93:34" pos:end="93:48"><name pos:start="93:34" pos:end="93:34">s</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:41">pchip</name><operator pos:start="93:42" pos:end="93:42">.</operator><name pos:start="93:43" pos:end="93:48">region</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:46">/* Cchip CSRs, 0x801.A000.0000, 256MB.  */</comment>

    <expr_stmt pos:start="99:5" pos:end="101:34"><expr pos:start="99:5" pos:end="101:33"><call pos:start="99:5" pos:end="101:33"><name pos:start="99:5" pos:end="99:25">memory_region_init_io</name><argument_list pos:start="99:26" pos:end="101:33">(<argument pos:start="99:27" pos:end="99:42"><expr pos:start="99:27" pos:end="99:42"><operator pos:start="99:27" pos:end="99:27">&amp;</operator><name pos:start="99:28" pos:end="99:42"><name pos:start="99:28" pos:end="99:28">s</name><operator pos:start="99:29" pos:end="99:30">-&gt;</operator><name pos:start="99:31" pos:end="99:35">cchip</name><operator pos:start="99:36" pos:end="99:36">.</operator><name pos:start="99:37" pos:end="99:42">region</name></name></expr></argument>, <argument pos:start="99:45" pos:end="99:53"><expr pos:start="99:45" pos:end="99:53"><call pos:start="99:45" pos:end="99:53"><name pos:start="99:45" pos:end="99:50">OBJECT</name><argument_list pos:start="99:51" pos:end="99:53">(<argument pos:start="99:52" pos:end="99:52"><expr pos:start="99:52" pos:end="99:52"><name pos:start="99:52" pos:end="99:52">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:56" pos:end="99:65"><expr pos:start="99:56" pos:end="99:65"><operator pos:start="99:56" pos:end="99:56">&amp;</operator><name pos:start="99:57" pos:end="99:65">cchip_ops</name></expr></argument>, <argument pos:start="99:68" pos:end="99:68"><expr pos:start="99:68" pos:end="99:68"><name pos:start="99:68" pos:end="99:68">s</name></expr></argument>, <argument pos:start="99:71" pos:end="99:78"><expr pos:start="99:71" pos:end="99:78"><literal type="string" pos:start="99:71" pos:end="99:78">"cchip0"</literal></expr></argument>,

                          <argument pos:start="101:27" pos:end="101:32"><expr pos:start="101:27" pos:end="101:32"><literal type="number" pos:start="101:27" pos:end="101:29">256</literal><operator pos:start="101:30" pos:end="101:30">*</operator><name pos:start="101:31" pos:end="101:32">MB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="105:50"><expr pos:start="103:5" pos:end="105:49"><call pos:start="103:5" pos:end="105:49"><name pos:start="103:5" pos:end="103:31">memory_region_add_subregion</name><argument_list pos:start="103:32" pos:end="105:49">(<argument pos:start="103:33" pos:end="103:42"><expr pos:start="103:33" pos:end="103:42"><name pos:start="103:33" pos:end="103:42">addr_space</name></expr></argument>, <argument pos:start="103:45" pos:end="103:60"><expr pos:start="103:45" pos:end="103:60"><literal type="number" pos:start="103:45" pos:end="103:60">0x801a0000000ULL</literal></expr></argument>,

                                <argument pos:start="105:33" pos:end="105:48"><expr pos:start="105:33" pos:end="105:48"><operator pos:start="105:33" pos:end="105:33">&amp;</operator><name pos:start="105:34" pos:end="105:48"><name pos:start="105:34" pos:end="105:34">s</name><operator pos:start="105:35" pos:end="105:36">-&gt;</operator><name pos:start="105:37" pos:end="105:41">cchip</name><operator pos:start="105:42" pos:end="105:42">.</operator><name pos:start="105:43" pos:end="105:48">region</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="109:5" pos:end="109:46">/* Dchip CSRs, 0x801.B000.0000, 256MB.  */</comment>

    <expr_stmt pos:start="111:5" pos:end="113:34"><expr pos:start="111:5" pos:end="113:33"><call pos:start="111:5" pos:end="113:33"><name pos:start="111:5" pos:end="111:25">memory_region_init_io</name><argument_list pos:start="111:26" pos:end="113:33">(<argument pos:start="111:27" pos:end="111:42"><expr pos:start="111:27" pos:end="111:42"><operator pos:start="111:27" pos:end="111:27">&amp;</operator><name pos:start="111:28" pos:end="111:42"><name pos:start="111:28" pos:end="111:28">s</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:42">dchip_region</name></name></expr></argument>, <argument pos:start="111:45" pos:end="111:53"><expr pos:start="111:45" pos:end="111:53"><call pos:start="111:45" pos:end="111:53"><name pos:start="111:45" pos:end="111:50">OBJECT</name><argument_list pos:start="111:51" pos:end="111:53">(<argument pos:start="111:52" pos:end="111:52"><expr pos:start="111:52" pos:end="111:52"><name pos:start="111:52" pos:end="111:52">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="111:56" pos:end="111:65"><expr pos:start="111:56" pos:end="111:65"><operator pos:start="111:56" pos:end="111:56">&amp;</operator><name pos:start="111:57" pos:end="111:65">dchip_ops</name></expr></argument>, <argument pos:start="111:68" pos:end="111:68"><expr pos:start="111:68" pos:end="111:68"><name pos:start="111:68" pos:end="111:68">s</name></expr></argument>, <argument pos:start="111:71" pos:end="111:78"><expr pos:start="111:71" pos:end="111:78"><literal type="string" pos:start="111:71" pos:end="111:78">"dchip0"</literal></expr></argument>,

                          <argument pos:start="113:27" pos:end="113:32"><expr pos:start="113:27" pos:end="113:32"><literal type="number" pos:start="113:27" pos:end="113:29">256</literal><operator pos:start="113:30" pos:end="113:30">*</operator><name pos:start="113:31" pos:end="113:32">MB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="117:50"><expr pos:start="115:5" pos:end="117:49"><call pos:start="115:5" pos:end="117:49"><name pos:start="115:5" pos:end="115:31">memory_region_add_subregion</name><argument_list pos:start="115:32" pos:end="117:49">(<argument pos:start="115:33" pos:end="115:42"><expr pos:start="115:33" pos:end="115:42"><name pos:start="115:33" pos:end="115:42">addr_space</name></expr></argument>, <argument pos:start="115:45" pos:end="115:60"><expr pos:start="115:45" pos:end="115:60"><literal type="number" pos:start="115:45" pos:end="115:60">0x801b0000000ULL</literal></expr></argument>,

                                <argument pos:start="117:33" pos:end="117:48"><expr pos:start="117:33" pos:end="117:48"><operator pos:start="117:33" pos:end="117:33">&amp;</operator><name pos:start="117:34" pos:end="117:48"><name pos:start="117:34" pos:end="117:34">s</name><operator pos:start="117:35" pos:end="117:36">-&gt;</operator><name pos:start="117:37" pos:end="117:48">dchip_region</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="121:5" pos:end="121:51">/* Pchip0 PCI memory, 0x800.0000.0000, 4GB.  */</comment>

    <expr_stmt pos:start="123:5" pos:end="123:71"><expr pos:start="123:5" pos:end="123:70"><call pos:start="123:5" pos:end="123:70"><name pos:start="123:5" pos:end="123:22">memory_region_init</name><argument_list pos:start="123:23" pos:end="123:70">(<argument pos:start="123:24" pos:end="123:40"><expr pos:start="123:24" pos:end="123:40"><operator pos:start="123:24" pos:end="123:24">&amp;</operator><name pos:start="123:25" pos:end="123:40"><name pos:start="123:25" pos:end="123:25">s</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:32">pchip</name><operator pos:start="123:33" pos:end="123:33">.</operator><name pos:start="123:34" pos:end="123:40">reg_mem</name></name></expr></argument>, <argument pos:start="123:43" pos:end="123:51"><expr pos:start="123:43" pos:end="123:51"><call pos:start="123:43" pos:end="123:51"><name pos:start="123:43" pos:end="123:48">OBJECT</name><argument_list pos:start="123:49" pos:end="123:51">(<argument pos:start="123:50" pos:end="123:50"><expr pos:start="123:50" pos:end="123:50"><name pos:start="123:50" pos:end="123:50">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="123:54" pos:end="123:63"><expr pos:start="123:54" pos:end="123:63"><literal type="string" pos:start="123:54" pos:end="123:63">"pci0-mem"</literal></expr></argument>, <argument pos:start="123:66" pos:end="123:69"><expr pos:start="123:66" pos:end="123:69"><literal type="number" pos:start="123:66" pos:end="123:66">4</literal><operator pos:start="123:67" pos:end="123:67">*</operator><name pos:start="123:68" pos:end="123:69">GB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="127:51"><expr pos:start="125:5" pos:end="127:50"><call pos:start="125:5" pos:end="127:50"><name pos:start="125:5" pos:end="125:31">memory_region_add_subregion</name><argument_list pos:start="125:32" pos:end="127:50">(<argument pos:start="125:33" pos:end="125:42"><expr pos:start="125:33" pos:end="125:42"><name pos:start="125:33" pos:end="125:42">addr_space</name></expr></argument>, <argument pos:start="125:45" pos:end="125:60"><expr pos:start="125:45" pos:end="125:60"><literal type="number" pos:start="125:45" pos:end="125:60">0x80000000000ULL</literal></expr></argument>,

                                <argument pos:start="127:33" pos:end="127:49"><expr pos:start="127:33" pos:end="127:49"><operator pos:start="127:33" pos:end="127:33">&amp;</operator><name pos:start="127:34" pos:end="127:49"><name pos:start="127:34" pos:end="127:34">s</name><operator pos:start="127:35" pos:end="127:36">-&gt;</operator><name pos:start="127:37" pos:end="127:41">pchip</name><operator pos:start="127:42" pos:end="127:42">.</operator><name pos:start="127:43" pos:end="127:49">reg_mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="131:5" pos:end="131:49">/* Pchip0 PCI I/O, 0x801.FC00.0000, 32MB.  */</comment>

    <expr_stmt pos:start="133:5" pos:end="133:70"><expr pos:start="133:5" pos:end="133:69"><call pos:start="133:5" pos:end="133:69"><name pos:start="133:5" pos:end="133:22">memory_region_init</name><argument_list pos:start="133:23" pos:end="133:69">(<argument pos:start="133:24" pos:end="133:39"><expr pos:start="133:24" pos:end="133:39"><operator pos:start="133:24" pos:end="133:24">&amp;</operator><name pos:start="133:25" pos:end="133:39"><name pos:start="133:25" pos:end="133:25">s</name><operator pos:start="133:26" pos:end="133:27">-&gt;</operator><name pos:start="133:28" pos:end="133:32">pchip</name><operator pos:start="133:33" pos:end="133:33">.</operator><name pos:start="133:34" pos:end="133:39">reg_io</name></name></expr></argument>, <argument pos:start="133:42" pos:end="133:50"><expr pos:start="133:42" pos:end="133:50"><call pos:start="133:42" pos:end="133:50"><name pos:start="133:42" pos:end="133:47">OBJECT</name><argument_list pos:start="133:48" pos:end="133:50">(<argument pos:start="133:49" pos:end="133:49"><expr pos:start="133:49" pos:end="133:49"><name pos:start="133:49" pos:end="133:49">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="133:53" pos:end="133:61"><expr pos:start="133:53" pos:end="133:61"><literal type="string" pos:start="133:53" pos:end="133:61">"pci0-io"</literal></expr></argument>, <argument pos:start="133:64" pos:end="133:68"><expr pos:start="133:64" pos:end="133:68"><literal type="number" pos:start="133:64" pos:end="133:65">32</literal><operator pos:start="133:66" pos:end="133:66">*</operator><name pos:start="133:67" pos:end="133:68">MB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="137:50"><expr pos:start="135:5" pos:end="137:49"><call pos:start="135:5" pos:end="137:49"><name pos:start="135:5" pos:end="135:31">memory_region_add_subregion</name><argument_list pos:start="135:32" pos:end="137:49">(<argument pos:start="135:33" pos:end="135:42"><expr pos:start="135:33" pos:end="135:42"><name pos:start="135:33" pos:end="135:42">addr_space</name></expr></argument>, <argument pos:start="135:45" pos:end="135:60"><expr pos:start="135:45" pos:end="135:60"><literal type="number" pos:start="135:45" pos:end="135:60">0x801fc000000ULL</literal></expr></argument>,

                                <argument pos:start="137:33" pos:end="137:48"><expr pos:start="137:33" pos:end="137:48"><operator pos:start="137:33" pos:end="137:33">&amp;</operator><name pos:start="137:34" pos:end="137:48"><name pos:start="137:34" pos:end="137:34">s</name><operator pos:start="137:35" pos:end="137:36">-&gt;</operator><name pos:start="137:37" pos:end="137:41">pchip</name><operator pos:start="137:42" pos:end="137:42">.</operator><name pos:start="137:43" pos:end="137:48">reg_io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="147:46"><expr pos:start="141:5" pos:end="147:45"><name pos:start="141:5" pos:end="141:5">b</name> <operator pos:start="141:7" pos:end="141:7">=</operator> <call pos:start="141:9" pos:end="147:45"><name pos:start="141:9" pos:end="141:24">pci_register_bus</name><argument_list pos:start="141:25" pos:end="147:45">(<argument pos:start="141:26" pos:end="141:28"><expr pos:start="141:26" pos:end="141:28"><name pos:start="141:26" pos:end="141:28">dev</name></expr></argument>, <argument pos:start="141:31" pos:end="141:35"><expr pos:start="141:31" pos:end="141:35"><literal type="string" pos:start="141:31" pos:end="141:35">"pci"</literal></expr></argument>,

                         <argument pos:start="143:26" pos:end="143:40"><expr pos:start="143:26" pos:end="143:40"><name pos:start="143:26" pos:end="143:40">typhoon_set_irq</name></expr></argument>, <argument pos:start="143:43" pos:end="143:53"><expr pos:start="143:43" pos:end="143:53"><name pos:start="143:43" pos:end="143:53">sys_map_irq</name></expr></argument>, <argument pos:start="143:56" pos:end="143:56"><expr pos:start="143:56" pos:end="143:56"><name pos:start="143:56" pos:end="143:56">s</name></expr></argument>,

                         <argument pos:start="145:26" pos:end="145:42"><expr pos:start="145:26" pos:end="145:42"><operator pos:start="145:26" pos:end="145:26">&amp;</operator><name pos:start="145:27" pos:end="145:42"><name pos:start="145:27" pos:end="145:27">s</name><operator pos:start="145:28" pos:end="145:29">-&gt;</operator><name pos:start="145:30" pos:end="145:34">pchip</name><operator pos:start="145:35" pos:end="145:35">.</operator><name pos:start="145:36" pos:end="145:42">reg_mem</name></name></expr></argument>, <argument pos:start="145:45" pos:end="145:60"><expr pos:start="145:45" pos:end="145:60"><operator pos:start="145:45" pos:end="145:45">&amp;</operator><name pos:start="145:46" pos:end="145:60"><name pos:start="145:46" pos:end="145:46">s</name><operator pos:start="145:47" pos:end="145:48">-&gt;</operator><name pos:start="145:49" pos:end="145:53">pchip</name><operator pos:start="145:54" pos:end="145:54">.</operator><name pos:start="145:55" pos:end="145:60">reg_io</name></name></expr></argument>,

                         <argument pos:start="147:26" pos:end="147:26"><expr pos:start="147:26" pos:end="147:26"><literal type="number" pos:start="147:26" pos:end="147:26">0</literal></expr></argument>, <argument pos:start="147:29" pos:end="147:30"><expr pos:start="147:29" pos:end="147:30"><literal type="number" pos:start="147:29" pos:end="147:30">64</literal></expr></argument>, <argument pos:start="147:33" pos:end="147:44"><expr pos:start="147:33" pos:end="147:44"><name pos:start="147:33" pos:end="147:44">TYPE_PCI_BUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:17"><expr pos:start="149:5" pos:end="149:16"><name pos:start="149:5" pos:end="149:12"><name pos:start="149:5" pos:end="149:7">phb</name><operator pos:start="149:8" pos:end="149:9">-&gt;</operator><name pos:start="149:10" pos:end="149:12">bus</name></name> <operator pos:start="149:14" pos:end="149:14">=</operator> <name pos:start="149:16" pos:end="149:16">b</name></expr>;</expr_stmt>



    <comment type="block" pos:start="153:5" pos:end="153:75">/* Pchip0 PCI special/interrupt acknowledge, 0x801.F800.0000, 64MB.  */</comment>

    <expr_stmt pos:start="155:5" pos:end="157:49"><expr pos:start="155:5" pos:end="157:48"><call pos:start="155:5" pos:end="157:48"><name pos:start="155:5" pos:end="155:25">memory_region_init_io</name><argument_list pos:start="155:26" pos:end="157:48">(<argument pos:start="155:27" pos:end="155:44"><expr pos:start="155:27" pos:end="155:44"><operator pos:start="155:27" pos:end="155:27">&amp;</operator><name pos:start="155:28" pos:end="155:44"><name pos:start="155:28" pos:end="155:28">s</name><operator pos:start="155:29" pos:end="155:30">-&gt;</operator><name pos:start="155:31" pos:end="155:35">pchip</name><operator pos:start="155:36" pos:end="155:36">.</operator><name pos:start="155:37" pos:end="155:44">reg_iack</name></name></expr></argument>, <argument pos:start="155:47" pos:end="155:55"><expr pos:start="155:47" pos:end="155:55"><call pos:start="155:47" pos:end="155:55"><name pos:start="155:47" pos:end="155:52">OBJECT</name><argument_list pos:start="155:53" pos:end="155:55">(<argument pos:start="155:54" pos:end="155:54"><expr pos:start="155:54" pos:end="155:54"><name pos:start="155:54" pos:end="155:54">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="155:58" pos:end="155:76"><expr pos:start="155:58" pos:end="155:76"><operator pos:start="155:58" pos:end="155:58">&amp;</operator><name pos:start="155:59" pos:end="155:76">alpha_pci_iack_ops</name></expr></argument>,

                          <argument pos:start="157:27" pos:end="157:27"><expr pos:start="157:27" pos:end="157:27"><name pos:start="157:27" pos:end="157:27">b</name></expr></argument>, <argument pos:start="157:30" pos:end="157:40"><expr pos:start="157:30" pos:end="157:40"><literal type="string" pos:start="157:30" pos:end="157:40">"pci0-iack"</literal></expr></argument>, <argument pos:start="157:43" pos:end="157:47"><expr pos:start="157:43" pos:end="157:47"><literal type="number" pos:start="157:43" pos:end="157:44">64</literal><operator pos:start="157:45" pos:end="157:45">*</operator><name pos:start="157:46" pos:end="157:47">MB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="161:52"><expr pos:start="159:5" pos:end="161:51"><call pos:start="159:5" pos:end="161:51"><name pos:start="159:5" pos:end="159:31">memory_region_add_subregion</name><argument_list pos:start="159:32" pos:end="161:51">(<argument pos:start="159:33" pos:end="159:42"><expr pos:start="159:33" pos:end="159:42"><name pos:start="159:33" pos:end="159:42">addr_space</name></expr></argument>, <argument pos:start="159:45" pos:end="159:60"><expr pos:start="159:45" pos:end="159:60"><literal type="number" pos:start="159:45" pos:end="159:60">0x801f8000000ULL</literal></expr></argument>,

                                <argument pos:start="161:33" pos:end="161:50"><expr pos:start="161:33" pos:end="161:50"><operator pos:start="161:33" pos:end="161:33">&amp;</operator><name pos:start="161:34" pos:end="161:50"><name pos:start="161:34" pos:end="161:34">s</name><operator pos:start="161:35" pos:end="161:36">-&gt;</operator><name pos:start="161:37" pos:end="161:41">pchip</name><operator pos:start="161:42" pos:end="161:42">.</operator><name pos:start="161:43" pos:end="161:50">reg_iack</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="165:5" pos:end="165:59">/* Pchip0 PCI configuration, 0x801.FE00.0000, 16MB.  */</comment>

    <expr_stmt pos:start="167:5" pos:end="169:49"><expr pos:start="167:5" pos:end="169:48"><call pos:start="167:5" pos:end="169:48"><name pos:start="167:5" pos:end="167:25">memory_region_init_io</name><argument_list pos:start="167:26" pos:end="169:48">(<argument pos:start="167:27" pos:end="167:44"><expr pos:start="167:27" pos:end="167:44"><operator pos:start="167:27" pos:end="167:27">&amp;</operator><name pos:start="167:28" pos:end="167:44"><name pos:start="167:28" pos:end="167:28">s</name><operator pos:start="167:29" pos:end="167:30">-&gt;</operator><name pos:start="167:31" pos:end="167:35">pchip</name><operator pos:start="167:36" pos:end="167:36">.</operator><name pos:start="167:37" pos:end="167:44">reg_conf</name></name></expr></argument>, <argument pos:start="167:47" pos:end="167:55"><expr pos:start="167:47" pos:end="167:55"><call pos:start="167:47" pos:end="167:55"><name pos:start="167:47" pos:end="167:52">OBJECT</name><argument_list pos:start="167:53" pos:end="167:55">(<argument pos:start="167:54" pos:end="167:54"><expr pos:start="167:54" pos:end="167:54"><name pos:start="167:54" pos:end="167:54">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="167:58" pos:end="167:77"><expr pos:start="167:58" pos:end="167:77"><operator pos:start="167:58" pos:end="167:58">&amp;</operator><name pos:start="167:59" pos:end="167:77">alpha_pci_conf1_ops</name></expr></argument>,

                          <argument pos:start="169:27" pos:end="169:27"><expr pos:start="169:27" pos:end="169:27"><name pos:start="169:27" pos:end="169:27">b</name></expr></argument>, <argument pos:start="169:30" pos:end="169:40"><expr pos:start="169:30" pos:end="169:40"><literal type="string" pos:start="169:30" pos:end="169:40">"pci0-conf"</literal></expr></argument>, <argument pos:start="169:43" pos:end="169:47"><expr pos:start="169:43" pos:end="169:47"><literal type="number" pos:start="169:43" pos:end="169:44">16</literal><operator pos:start="169:45" pos:end="169:45">*</operator><name pos:start="169:46" pos:end="169:47">MB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="173:52"><expr pos:start="171:5" pos:end="173:51"><call pos:start="171:5" pos:end="173:51"><name pos:start="171:5" pos:end="171:31">memory_region_add_subregion</name><argument_list pos:start="171:32" pos:end="173:51">(<argument pos:start="171:33" pos:end="171:42"><expr pos:start="171:33" pos:end="171:42"><name pos:start="171:33" pos:end="171:42">addr_space</name></expr></argument>, <argument pos:start="171:45" pos:end="171:60"><expr pos:start="171:45" pos:end="171:60"><literal type="number" pos:start="171:45" pos:end="171:60">0x801fe000000ULL</literal></expr></argument>,

                                <argument pos:start="173:33" pos:end="173:50"><expr pos:start="173:33" pos:end="173:50"><operator pos:start="173:33" pos:end="173:33">&amp;</operator><name pos:start="173:34" pos:end="173:50"><name pos:start="173:34" pos:end="173:34">s</name><operator pos:start="173:35" pos:end="173:36">-&gt;</operator><name pos:start="173:37" pos:end="173:41">pchip</name><operator pos:start="173:42" pos:end="173:42">.</operator><name pos:start="173:43" pos:end="173:50">reg_conf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="177:5" pos:end="181:65">/* For the record, these are the mappings for the second PCI bus.

       We can get away with not implementing them because we indicate

       via the Cchip.CSC&lt;PIP&gt; bit that Pchip1 is not present.  */</comment>

    <comment type="block" pos:start="183:5" pos:end="183:51">/* Pchip1 PCI memory, 0x802.0000.0000, 4GB.  */</comment>

    <comment type="block" pos:start="185:5" pos:end="185:47">/* Pchip1 CSRs, 0x802.8000.0000, 256MB.  */</comment>

    <comment type="block" pos:start="187:5" pos:end="187:75">/* Pchip1 PCI special/interrupt acknowledge, 0x802.F800.0000, 64MB.  */</comment>

    <comment type="block" pos:start="189:5" pos:end="189:49">/* Pchip1 PCI I/O, 0x802.FC00.0000, 32MB.  */</comment>

    <comment type="block" pos:start="191:5" pos:end="191:59">/* Pchip1 PCI configuration, 0x802.FE00.0000, 16MB.  */</comment>



    <comment type="block" pos:start="195:5" pos:end="195:28">/* Init the ISA bus.  */</comment>

    <comment type="block" pos:start="197:5" pos:end="197:71">/* ??? Technically there should be a cy82c693ub pci-isa bridge.  */</comment>

    <block pos:start="199:5" pos:end="213:5">{<block_content pos:start="201:9" pos:end="211:41">

        <decl_stmt pos:start="201:9" pos:end="201:40"><decl pos:start="201:9" pos:end="201:28"><type pos:start="201:9" pos:end="201:16"><name pos:start="201:9" pos:end="201:16">qemu_irq</name></type> <name pos:start="201:18" pos:end="201:28">isa_pci_irq</name></decl>, <decl pos:start="201:31" pos:end="201:39"><type ref="prev" pos:start="201:9" pos:end="201:16"><modifier pos:start="201:31" pos:end="201:31">*</modifier></type><name pos:start="201:32" pos:end="201:39">isa_irqs</name></decl>;</decl_stmt>



        <expr_stmt pos:start="205:9" pos:end="205:55"><expr pos:start="205:9" pos:end="205:54"><operator pos:start="205:9" pos:end="205:9">*</operator><name pos:start="205:10" pos:end="205:16">isa_bus</name> <operator pos:start="205:18" pos:end="205:18">=</operator> <call pos:start="205:20" pos:end="205:54"><name pos:start="205:20" pos:end="205:30">isa_bus_new</name><argument_list pos:start="205:31" pos:end="205:54">(<argument pos:start="205:32" pos:end="205:35"><expr pos:start="205:32" pos:end="205:35"><name pos:start="205:32" pos:end="205:35">NULL</name></expr></argument>, <argument pos:start="205:38" pos:end="205:53"><expr pos:start="205:38" pos:end="205:53"><operator pos:start="205:38" pos:end="205:38">&amp;</operator><name pos:start="205:39" pos:end="205:53"><name pos:start="205:39" pos:end="205:39">s</name><operator pos:start="205:40" pos:end="205:41">-&gt;</operator><name pos:start="205:42" pos:end="205:46">pchip</name><operator pos:start="205:47" pos:end="205:47">.</operator><name pos:start="205:48" pos:end="205:53">reg_io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:69"><expr pos:start="207:9" pos:end="207:68"><name pos:start="207:9" pos:end="207:19">isa_pci_irq</name> <operator pos:start="207:21" pos:end="207:21">=</operator> <operator pos:start="207:23" pos:end="207:23">*</operator><call pos:start="207:24" pos:end="207:68"><name pos:start="207:24" pos:end="207:41">qemu_allocate_irqs</name><argument_list pos:start="207:42" pos:end="207:68">(<argument pos:start="207:43" pos:end="207:61"><expr pos:start="207:43" pos:end="207:61"><name pos:start="207:43" pos:end="207:61">typhoon_set_isa_irq</name></expr></argument>, <argument pos:start="207:64" pos:end="207:64"><expr pos:start="207:64" pos:end="207:64"><name pos:start="207:64" pos:end="207:64">s</name></expr></argument>, <argument pos:start="207:67" pos:end="207:67"><expr pos:start="207:67" pos:end="207:67"><literal type="number" pos:start="207:67" pos:end="207:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:53"><expr pos:start="209:9" pos:end="209:52"><name pos:start="209:9" pos:end="209:16">isa_irqs</name> <operator pos:start="209:18" pos:end="209:18">=</operator> <call pos:start="209:20" pos:end="209:52"><name pos:start="209:20" pos:end="209:29">i8259_init</name><argument_list pos:start="209:30" pos:end="209:52">(<argument pos:start="209:31" pos:end="209:38"><expr pos:start="209:31" pos:end="209:38"><operator pos:start="209:31" pos:end="209:31">*</operator><name pos:start="209:32" pos:end="209:38">isa_bus</name></expr></argument>, <argument pos:start="209:41" pos:end="209:51"><expr pos:start="209:41" pos:end="209:51"><name pos:start="209:41" pos:end="209:51">isa_pci_irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:41"><expr pos:start="211:9" pos:end="211:40"><call pos:start="211:9" pos:end="211:40"><name pos:start="211:9" pos:end="211:20">isa_bus_irqs</name><argument_list pos:start="211:21" pos:end="211:40">(<argument pos:start="211:22" pos:end="211:29"><expr pos:start="211:22" pos:end="211:29"><operator pos:start="211:22" pos:end="211:22">*</operator><name pos:start="211:23" pos:end="211:29">isa_bus</name></expr></argument>, <argument pos:start="211:32" pos:end="211:39"><expr pos:start="211:32" pos:end="211:39"><name pos:start="211:32" pos:end="211:39">isa_irqs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <return pos:start="217:5" pos:end="217:13">return <expr pos:start="217:12" pos:end="217:12"><name pos:start="217:12" pos:end="217:12">b</name></expr>;</return>

</block_content>}</block></function>
</unit>
