<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21865.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">rtl8139_io_writeb</name><parameter_list pos:start="1:30" pos:end="1:71">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:51">uint8_t</name></type> <name pos:start="1:53" pos:end="1:56">addr</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:70"><decl pos:start="1:59" pos:end="1:70"><type pos:start="1:59" pos:end="1:70"><name pos:start="1:59" pos:end="1:66">uint32_t</name></type> <name pos:start="1:68" pos:end="1:70">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="169:1">{<block_content pos:start="5:5" pos:end="167:5">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">RTL8139State</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:28">= <expr pos:start="5:23" pos:end="5:28"><name pos:start="5:23" pos:end="5:28">opaque</name></expr></init></decl>;</decl_stmt>



    <switch pos:start="9:5" pos:end="167:5">switch <condition pos:start="9:12" pos:end="9:17">(<expr pos:start="9:13" pos:end="9:16"><name pos:start="9:13" pos:end="9:16">addr</name></expr>)</condition>

    <block pos:start="11:5" pos:end="167:5">{<block_content pos:start="13:9" pos:end="165:18">

        <case pos:start="13:9" pos:end="13:29">case <expr pos:start="13:14" pos:end="13:28"><name pos:start="13:14" pos:end="13:17">MAC0</name> <operator pos:start="13:19" pos:end="13:21">...</operator> <name pos:start="13:23" pos:end="13:26">MAC0</name><operator pos:start="13:27" pos:end="13:27">+</operator><literal type="number" pos:start="13:28" pos:end="13:28">5</literal></expr>:</case>

            <expr_stmt pos:start="15:13" pos:end="15:39"><expr pos:start="15:13" pos:end="15:38"><name pos:start="15:13" pos:end="15:32"><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:19">phys</name><index pos:start="15:20" pos:end="15:32">[<expr pos:start="15:21" pos:end="15:31"><name pos:start="15:21" pos:end="15:24">addr</name> <operator pos:start="15:26" pos:end="15:26">-</operator> <name pos:start="15:28" pos:end="15:31">MAC0</name></expr>]</index></name> <operator pos:start="15:34" pos:end="15:34">=</operator> <name pos:start="15:36" pos:end="15:38">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="17:13" pos:end="17:70"><expr pos:start="17:13" pos:end="17:69"><call pos:start="17:13" pos:end="17:69"><name pos:start="17:13" pos:end="17:36">qemu_format_nic_info_str</name><argument_list pos:start="17:37" pos:end="17:69">(<argument pos:start="17:38" pos:end="17:59"><expr pos:start="17:38" pos:end="17:59"><call pos:start="17:38" pos:end="17:59"><name pos:start="17:38" pos:end="17:51">qemu_get_queue</name><argument_list pos:start="17:52" pos:end="17:59">(<argument pos:start="17:53" pos:end="17:58"><expr pos:start="17:53" pos:end="17:58"><name pos:start="17:53" pos:end="17:58"><name pos:start="17:53" pos:end="17:53">s</name><operator pos:start="17:54" pos:end="17:55">-&gt;</operator><name pos:start="17:56" pos:end="17:58">nic</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="17:62" pos:end="17:68"><expr pos:start="17:62" pos:end="17:68"><name pos:start="17:62" pos:end="17:68"><name pos:start="17:62" pos:end="17:62">s</name><operator pos:start="17:63" pos:end="17:64">-&gt;</operator><name pos:start="17:65" pos:end="17:68">phys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="19:13" pos:end="19:18">break;</break>

        <case pos:start="21:9" pos:end="21:31">case <expr pos:start="21:14" pos:end="21:30"><name pos:start="21:14" pos:end="21:17">MAC0</name><operator pos:start="21:18" pos:end="21:18">+</operator><literal type="number" pos:start="21:19" pos:end="21:19">6</literal> <operator pos:start="21:21" pos:end="21:23">...</operator> <name pos:start="21:25" pos:end="21:28">MAC0</name><operator pos:start="21:29" pos:end="21:29">+</operator><literal type="number" pos:start="21:30" pos:end="21:30">7</literal></expr>:</case>

            <comment type="block" pos:start="23:13" pos:end="23:26">/* reserved */</comment>

            <break pos:start="25:13" pos:end="25:18">break;</break>

        <case pos:start="27:9" pos:end="27:29">case <expr pos:start="27:14" pos:end="27:28"><name pos:start="27:14" pos:end="27:17">MAR0</name> <operator pos:start="27:19" pos:end="27:21">...</operator> <name pos:start="27:23" pos:end="27:26">MAR0</name><operator pos:start="27:27" pos:end="27:27">+</operator><literal type="number" pos:start="27:28" pos:end="27:28">7</literal></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:39"><expr pos:start="29:13" pos:end="29:38"><name pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:19">mult</name><index pos:start="29:20" pos:end="29:32">[<expr pos:start="29:21" pos:end="29:31"><name pos:start="29:21" pos:end="29:24">addr</name> <operator pos:start="29:26" pos:end="29:26">-</operator> <name pos:start="29:28" pos:end="29:31">MAR0</name></expr>]</index></name> <operator pos:start="29:34" pos:end="29:34">=</operator> <name pos:start="29:36" pos:end="29:38">val</name></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        <case pos:start="33:9" pos:end="33:21">case <expr pos:start="33:14" pos:end="33:20"><name pos:start="33:14" pos:end="33:20">ChipCmd</name></expr>:</case>

            <expr_stmt pos:start="35:13" pos:end="35:42"><expr pos:start="35:13" pos:end="35:41"><call pos:start="35:13" pos:end="35:41"><name pos:start="35:13" pos:end="35:33">rtl8139_ChipCmd_write</name><argument_list pos:start="35:34" pos:end="35:41">(<argument pos:start="35:35" pos:end="35:35"><expr pos:start="35:35" pos:end="35:35"><name pos:start="35:35" pos:end="35:35">s</name></expr></argument>, <argument pos:start="35:38" pos:end="35:40"><expr pos:start="35:38" pos:end="35:40"><name pos:start="35:38" pos:end="35:40">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:21">case <expr pos:start="39:14" pos:end="39:20"><name pos:start="39:14" pos:end="39:20">Cfg9346</name></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:42"><expr pos:start="41:13" pos:end="41:41"><call pos:start="41:13" pos:end="41:41"><name pos:start="41:13" pos:end="41:33">rtl8139_Cfg9346_write</name><argument_list pos:start="41:34" pos:end="41:41">(<argument pos:start="41:35" pos:end="41:35"><expr pos:start="41:35" pos:end="41:35"><name pos:start="41:35" pos:end="41:35">s</name></expr></argument>, <argument pos:start="41:38" pos:end="41:40"><expr pos:start="41:38" pos:end="41:40"><name pos:start="41:38" pos:end="41:40">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <case pos:start="45:9" pos:end="45:22">case <expr pos:start="45:14" pos:end="45:21"><name pos:start="45:14" pos:end="45:21">TxConfig</name></expr>:</case> <comment type="block" pos:start="45:24" pos:end="45:82">/* windows driver sometimes writes using byte-lenth call */</comment>

            <expr_stmt pos:start="47:13" pos:end="47:44"><expr pos:start="47:13" pos:end="47:43"><call pos:start="47:13" pos:end="47:43"><name pos:start="47:13" pos:end="47:35">rtl8139_TxConfig_writeb</name><argument_list pos:start="47:36" pos:end="47:43">(<argument pos:start="47:37" pos:end="47:37"><expr pos:start="47:37" pos:end="47:37"><name pos:start="47:37" pos:end="47:37">s</name></expr></argument>, <argument pos:start="47:40" pos:end="47:42"><expr pos:start="47:40" pos:end="47:42"><name pos:start="47:40" pos:end="47:42">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        <case pos:start="51:9" pos:end="51:21">case <expr pos:start="51:14" pos:end="51:20"><name pos:start="51:14" pos:end="51:20">Config0</name></expr>:</case>

            <expr_stmt pos:start="53:13" pos:end="53:42"><expr pos:start="53:13" pos:end="53:41"><call pos:start="53:13" pos:end="53:41"><name pos:start="53:13" pos:end="53:33">rtl8139_Config0_write</name><argument_list pos:start="53:34" pos:end="53:41">(<argument pos:start="53:35" pos:end="53:35"><expr pos:start="53:35" pos:end="53:35"><name pos:start="53:35" pos:end="53:35">s</name></expr></argument>, <argument pos:start="53:38" pos:end="53:40"><expr pos:start="53:38" pos:end="53:40"><name pos:start="53:38" pos:end="53:40">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        <case pos:start="57:9" pos:end="57:21">case <expr pos:start="57:14" pos:end="57:20"><name pos:start="57:14" pos:end="57:20">Config1</name></expr>:</case>

            <expr_stmt pos:start="59:13" pos:end="59:42"><expr pos:start="59:13" pos:end="59:41"><call pos:start="59:13" pos:end="59:41"><name pos:start="59:13" pos:end="59:33">rtl8139_Config1_write</name><argument_list pos:start="59:34" pos:end="59:41">(<argument pos:start="59:35" pos:end="59:35"><expr pos:start="59:35" pos:end="59:35"><name pos:start="59:35" pos:end="59:35">s</name></expr></argument>, <argument pos:start="59:38" pos:end="59:40"><expr pos:start="59:38" pos:end="59:40"><name pos:start="59:38" pos:end="59:40">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="61:13" pos:end="61:18">break;</break>

        <case pos:start="63:9" pos:end="63:21">case <expr pos:start="63:14" pos:end="63:20"><name pos:start="63:14" pos:end="63:20">Config3</name></expr>:</case>

            <expr_stmt pos:start="65:13" pos:end="65:42"><expr pos:start="65:13" pos:end="65:41"><call pos:start="65:13" pos:end="65:41"><name pos:start="65:13" pos:end="65:33">rtl8139_Config3_write</name><argument_list pos:start="65:34" pos:end="65:41">(<argument pos:start="65:35" pos:end="65:35"><expr pos:start="65:35" pos:end="65:35"><name pos:start="65:35" pos:end="65:35">s</name></expr></argument>, <argument pos:start="65:38" pos:end="65:40"><expr pos:start="65:38" pos:end="65:40"><name pos:start="65:38" pos:end="65:40">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        <case pos:start="69:9" pos:end="69:21">case <expr pos:start="69:14" pos:end="69:20"><name pos:start="69:14" pos:end="69:20">Config4</name></expr>:</case>

            <expr_stmt pos:start="71:13" pos:end="71:42"><expr pos:start="71:13" pos:end="71:41"><call pos:start="71:13" pos:end="71:41"><name pos:start="71:13" pos:end="71:33">rtl8139_Config4_write</name><argument_list pos:start="71:34" pos:end="71:41">(<argument pos:start="71:35" pos:end="71:35"><expr pos:start="71:35" pos:end="71:35"><name pos:start="71:35" pos:end="71:35">s</name></expr></argument>, <argument pos:start="71:38" pos:end="71:40"><expr pos:start="71:38" pos:end="71:40"><name pos:start="71:38" pos:end="71:40">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        <case pos:start="75:9" pos:end="75:21">case <expr pos:start="75:14" pos:end="75:20"><name pos:start="75:14" pos:end="75:20">Config5</name></expr>:</case>

            <expr_stmt pos:start="77:13" pos:end="77:42"><expr pos:start="77:13" pos:end="77:41"><call pos:start="77:13" pos:end="77:41"><name pos:start="77:13" pos:end="77:33">rtl8139_Config5_write</name><argument_list pos:start="77:34" pos:end="77:41">(<argument pos:start="77:35" pos:end="77:35"><expr pos:start="77:35" pos:end="77:35"><name pos:start="77:35" pos:end="77:35">s</name></expr></argument>, <argument pos:start="77:38" pos:end="77:40"><expr pos:start="77:38" pos:end="77:40"><name pos:start="77:38" pos:end="77:40">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        <case pos:start="81:9" pos:end="81:25">case <expr pos:start="81:14" pos:end="81:24"><name pos:start="81:14" pos:end="81:24">MediaStatus</name></expr>:</case>

            <comment type="block" pos:start="83:13" pos:end="83:24">/* ignore */</comment>

            <expr_stmt pos:start="85:13" pos:end="87:21"><expr pos:start="85:13" pos:end="87:20"><call pos:start="85:13" pos:end="87:20"><name pos:start="85:13" pos:end="85:19">DPRINTF</name><argument_list pos:start="85:20" pos:end="87:20">(<argument pos:start="85:21" pos:end="85:74"><expr pos:start="85:21" pos:end="85:74"><literal type="string" pos:start="85:21" pos:end="85:74">"not implemented write(b) to MediaStatus val=0x%02x\n"</literal></expr></argument>,

                <argument pos:start="87:17" pos:end="87:19"><expr pos:start="87:17" pos:end="87:19"><name pos:start="87:17" pos:end="87:19">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="89:13" pos:end="89:18">break;</break>



        <case pos:start="93:9" pos:end="93:20">case <expr pos:start="93:14" pos:end="93:19"><name pos:start="93:14" pos:end="93:19">HltClk</name></expr>:</case>

            <expr_stmt pos:start="95:13" pos:end="95:54"><expr pos:start="95:13" pos:end="95:53"><call pos:start="95:13" pos:end="95:53"><name pos:start="95:13" pos:end="95:19">DPRINTF</name><argument_list pos:start="95:20" pos:end="95:53">(<argument pos:start="95:21" pos:end="95:47"><expr pos:start="95:21" pos:end="95:47"><literal type="string" pos:start="95:21" pos:end="95:47">"HltClk write val=0x%08x\n"</literal></expr></argument>, <argument pos:start="95:50" pos:end="95:52"><expr pos:start="95:50" pos:end="95:52"><name pos:start="95:50" pos:end="95:52">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="111:13"><if pos:start="97:13" pos:end="103:13">if <condition pos:start="97:16" pos:end="97:27">(<expr pos:start="97:17" pos:end="97:26"><name pos:start="97:17" pos:end="97:19">val</name> <operator pos:start="97:21" pos:end="97:22">==</operator> <literal type="char" pos:start="97:24" pos:end="97:26">'R'</literal></expr>)</condition>

            <block pos:start="99:13" pos:end="103:13">{<block_content pos:start="101:17" pos:end="101:37">

                <expr_stmt pos:start="101:17" pos:end="101:37"><expr pos:start="101:17" pos:end="101:36"><name pos:start="101:17" pos:end="101:32"><name pos:start="101:17" pos:end="101:17">s</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:32">clock_enabled</name></name> <operator pos:start="101:34" pos:end="101:34">=</operator> <literal type="number" pos:start="101:36" pos:end="101:36">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if>

            <if type="elseif" pos:start="105:13" pos:end="111:13">else if <condition pos:start="105:21" pos:end="105:32">(<expr pos:start="105:22" pos:end="105:31"><name pos:start="105:22" pos:end="105:24">val</name> <operator pos:start="105:26" pos:end="105:27">==</operator> <literal type="char" pos:start="105:29" pos:end="105:31">'H'</literal></expr>)</condition>

            <block pos:start="107:13" pos:end="111:13">{<block_content pos:start="109:17" pos:end="109:37">

                <expr_stmt pos:start="109:17" pos:end="109:37"><expr pos:start="109:17" pos:end="109:36"><name pos:start="109:17" pos:end="109:32"><name pos:start="109:17" pos:end="109:17">s</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:32">clock_enabled</name></name> <operator pos:start="109:34" pos:end="109:34">=</operator> <literal type="number" pos:start="109:36" pos:end="109:36">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="113:13" pos:end="113:18">break;</break>



        <case pos:start="117:9" pos:end="117:22">case <expr pos:start="117:14" pos:end="117:21"><name pos:start="117:14" pos:end="117:21">TxThresh</name></expr>:</case>

            <expr_stmt pos:start="119:13" pos:end="119:62"><expr pos:start="119:13" pos:end="119:61"><call pos:start="119:13" pos:end="119:61"><name pos:start="119:13" pos:end="119:19">DPRINTF</name><argument_list pos:start="119:20" pos:end="119:61">(<argument pos:start="119:21" pos:end="119:55"><expr pos:start="119:21" pos:end="119:55"><literal type="string" pos:start="119:21" pos:end="119:55">"C+ TxThresh write(b) val=0x%02x\n"</literal></expr></argument>, <argument pos:start="119:58" pos:end="119:60"><expr pos:start="119:58" pos:end="119:60"><name pos:start="119:58" pos:end="119:60">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:30"><expr pos:start="121:13" pos:end="121:29"><name pos:start="121:13" pos:end="121:23"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:23">TxThresh</name></name> <operator pos:start="121:25" pos:end="121:25">=</operator> <name pos:start="121:27" pos:end="121:29">val</name></expr>;</expr_stmt>

            <break pos:start="123:13" pos:end="123:18">break;</break>



        <case pos:start="127:9" pos:end="127:20">case <expr pos:start="127:14" pos:end="127:19"><name pos:start="127:14" pos:end="127:19">TxPoll</name></expr>:</case>

            <expr_stmt pos:start="129:13" pos:end="129:60"><expr pos:start="129:13" pos:end="129:59"><call pos:start="129:13" pos:end="129:59"><name pos:start="129:13" pos:end="129:19">DPRINTF</name><argument_list pos:start="129:20" pos:end="129:59">(<argument pos:start="129:21" pos:end="129:53"><expr pos:start="129:21" pos:end="129:53"><literal type="string" pos:start="129:21" pos:end="129:53">"C+ TxPoll write(b) val=0x%02x\n"</literal></expr></argument>, <argument pos:start="129:56" pos:end="129:58"><expr pos:start="129:56" pos:end="129:58"><name pos:start="129:56" pos:end="129:58">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="131:13" pos:end="141:13"><if pos:start="131:13" pos:end="141:13">if <condition pos:start="131:16" pos:end="131:31">(<expr pos:start="131:17" pos:end="131:30"><name pos:start="131:17" pos:end="131:19">val</name> <operator pos:start="131:21" pos:end="131:21">&amp;</operator> <operator pos:start="131:23" pos:end="131:23">(</operator><literal type="number" pos:start="131:24" pos:end="131:24">1</literal> <operator pos:start="131:26" pos:end="131:27">&lt;&lt;</operator> <literal type="number" pos:start="131:29" pos:end="131:29">7</literal><operator pos:start="131:30" pos:end="131:30">)</operator></expr>)</condition>

            <block pos:start="133:13" pos:end="141:13">{<block_content pos:start="135:17" pos:end="137:38">

                <expr_stmt pos:start="135:17" pos:end="137:38"><expr pos:start="135:17" pos:end="137:37"><call pos:start="135:17" pos:end="137:37"><name pos:start="135:17" pos:end="135:23">DPRINTF</name><argument_list pos:start="135:24" pos:end="137:37">(<argument pos:start="135:25" pos:end="137:36"><expr pos:start="135:25" pos:end="137:36"><literal type="string" pos:start="135:25" pos:end="135:68">"C+ TxPoll high priority transmission (not "</literal>

                    <literal type="string" pos:start="137:21" pos:end="137:36">"implemented)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:start="139:17" pos:end="139:44">//rtl8139_cplus_transmit(s);</comment>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="143:13" pos:end="151:13"><if pos:start="143:13" pos:end="151:13">if <condition pos:start="143:16" pos:end="143:31">(<expr pos:start="143:17" pos:end="143:30"><name pos:start="143:17" pos:end="143:19">val</name> <operator pos:start="143:21" pos:end="143:21">&amp;</operator> <operator pos:start="143:23" pos:end="143:23">(</operator><literal type="number" pos:start="143:24" pos:end="143:24">1</literal> <operator pos:start="143:26" pos:end="143:27">&lt;&lt;</operator> <literal type="number" pos:start="143:29" pos:end="143:29">6</literal><operator pos:start="143:30" pos:end="143:30">)</operator></expr>)</condition>

            <block pos:start="145:13" pos:end="151:13">{<block_content pos:start="147:17" pos:end="149:42">

                <expr_stmt pos:start="147:17" pos:end="147:68"><expr pos:start="147:17" pos:end="147:67"><call pos:start="147:17" pos:end="147:67"><name pos:start="147:17" pos:end="147:23">DPRINTF</name><argument_list pos:start="147:24" pos:end="147:67">(<argument pos:start="147:25" pos:end="147:66"><expr pos:start="147:25" pos:end="147:66"><literal type="string" pos:start="147:25" pos:end="147:66">"C+ TxPoll normal priority transmission\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:42"><expr pos:start="149:17" pos:end="149:41"><call pos:start="149:17" pos:end="149:41"><name pos:start="149:17" pos:end="149:38">rtl8139_cplus_transmit</name><argument_list pos:start="149:39" pos:end="149:41">(<argument pos:start="149:40" pos:end="149:40"><expr pos:start="149:40" pos:end="149:40"><name pos:start="149:40" pos:end="149:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <break pos:start="155:13" pos:end="155:18">break;</break>



        <default pos:start="159:9" pos:end="159:16">default:</default>

            <expr_stmt pos:start="161:13" pos:end="163:21"><expr pos:start="161:13" pos:end="163:20"><call pos:start="161:13" pos:end="163:20"><name pos:start="161:13" pos:end="161:19">DPRINTF</name><argument_list pos:start="161:20" pos:end="163:20">(<argument pos:start="161:21" pos:end="161:69"><expr pos:start="161:21" pos:end="161:69"><literal type="string" pos:start="161:21" pos:end="161:69">"not implemented write(b) addr=0x%x val=0x%02x\n"</literal></expr></argument>, <argument pos:start="161:72" pos:end="161:75"><expr pos:start="161:72" pos:end="161:75"><name pos:start="161:72" pos:end="161:75">addr</name></expr></argument>,

                <argument pos:start="163:17" pos:end="163:19"><expr pos:start="163:17" pos:end="163:19"><name pos:start="163:17" pos:end="163:19">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="165:13" pos:end="165:18">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
