<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24428.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">idcin_read_header</name><parameter_list pos:start="1:29" pos:end="1:48">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="209:1">{<block_content pos:start="5:5" pos:end="207:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">IdcinDemuxContext</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:28">idcin</name> <init pos:start="7:30" pos:end="7:43">= <expr pos:start="7:32" pos:end="7:43"><name pos:start="7:32" pos:end="7:43"><name pos:start="7:32" pos:end="7:32">s</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:22">width</name></decl>, <decl pos:start="11:25" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:25" pos:end="11:30">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:57"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:28">sample_rate</name></decl>, <decl pos:start="13:31" pos:end="13:46"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:31" pos:end="13:46">bytes_per_sample</name></decl>, <decl pos:start="13:49" pos:end="13:56"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:49" pos:end="13:56">channels</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:37">/* get the 5 header parameters */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:9">width</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:21">avio_rl32</name><argument_list pos:start="21:22" pos:end="21:25">(<argument pos:start="21:23" pos:end="21:24"><expr pos:start="21:23" pos:end="21:24"><name pos:start="21:23" pos:end="21:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:10">height</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <call pos:start="23:14" pos:end="23:26"><name pos:start="23:14" pos:end="23:22">avio_rl32</name><argument_list pos:start="23:23" pos:end="23:26">(<argument pos:start="23:24" pos:end="23:25"><expr pos:start="23:24" pos:end="23:25"><name pos:start="23:24" pos:end="23:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:15">sample_rate</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:31"><name pos:start="25:19" pos:end="25:27">avio_rl32</name><argument_list pos:start="25:28" pos:end="25:31">(<argument pos:start="25:29" pos:end="25:30"><expr pos:start="25:29" pos:end="25:30"><name pos:start="25:29" pos:end="25:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:20">bytes_per_sample</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <call pos:start="27:24" pos:end="27:36"><name pos:start="27:24" pos:end="27:32">avio_rl32</name><argument_list pos:start="27:33" pos:end="27:36">(<argument pos:start="27:34" pos:end="27:35"><expr pos:start="27:34" pos:end="27:35"><name pos:start="27:34" pos:end="27:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:12">channels</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:28"><name pos:start="29:16" pos:end="29:24">avio_rl32</name><argument_list pos:start="29:25" pos:end="29:28">(<argument pos:start="29:26" pos:end="29:27"><expr pos:start="29:26" pos:end="29:27"><name pos:start="29:26" pos:end="29:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:27">(<expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:13">pb</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:26">eof_reached</name></name></expr>)</condition> <block pos:start="33:29" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:57">

        <expr_stmt pos:start="35:9" pos:end="35:55"><expr pos:start="35:9" pos:end="35:54"><call pos:start="35:9" pos:end="35:54"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:54">(<argument pos:start="35:16" pos:end="35:16"><expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">s</name></expr></argument>, <argument pos:start="35:19" pos:end="35:30"><expr pos:start="35:19" pos:end="35:30"><name pos:start="35:19" pos:end="35:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:33" pos:end="35:53"><expr pos:start="35:33" pos:end="35:53"><literal type="string" pos:start="35:33" pos:end="35:53">"incomplete header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:57">return <expr pos:start="37:16" pos:end="37:56"><ternary pos:start="37:16" pos:end="37:56"><condition pos:start="37:16" pos:end="37:29"><expr pos:start="37:16" pos:end="37:27"><name pos:start="37:16" pos:end="37:27"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:20">pb</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:27">error</name></name></expr> ?</condition><then pos:start="37:31" pos:end="37:42"> <expr pos:start="37:31" pos:end="37:42"><name pos:start="37:31" pos:end="37:42"><name pos:start="37:31" pos:end="37:31">s</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:35">pb</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:42">error</name></name></expr> </then><else pos:start="37:44" pos:end="37:56">: <expr pos:start="37:46" pos:end="37:56"><name pos:start="37:46" pos:end="37:56">AVERROR_EOF</name></expr></else></ternary></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="45:35"><if pos:start="43:5" pos:end="45:35">if <condition pos:start="43:8" pos:end="43:53">(<expr pos:start="43:9" pos:end="43:52"><call pos:start="43:9" pos:end="43:48"><name pos:start="43:9" pos:end="43:27">av_image_check_size</name><argument_list pos:start="43:28" pos:end="43:48">(<argument pos:start="43:29" pos:end="43:33"><expr pos:start="43:29" pos:end="43:33"><name pos:start="43:29" pos:end="43:33">width</name></expr></argument>, <argument pos:start="43:36" pos:end="43:41"><expr pos:start="43:36" pos:end="43:41"><name pos:start="43:36" pos:end="43:41">height</name></expr></argument>, <argument pos:start="43:44" pos:end="43:44"><expr pos:start="43:44" pos:end="43:44"><literal type="number" pos:start="43:44" pos:end="43:44">0</literal></expr></argument>, <argument pos:start="43:47" pos:end="43:47"><expr pos:start="43:47" pos:end="43:47"><name pos:start="43:47" pos:end="43:47">s</name></expr></argument>)</argument_list></call> <operator pos:start="43:50" pos:end="43:50">&lt;</operator> <literal type="number" pos:start="43:52" pos:end="43:52">0</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:35"><block_content pos:start="45:9" pos:end="45:35">

        <return pos:start="45:9" pos:end="45:35">return <expr pos:start="45:16" pos:end="45:34"><name pos:start="45:16" pos:end="45:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="83:5"><if pos:start="47:5" pos:end="77:5">if <condition pos:start="47:8" pos:end="47:24">(<expr pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:19">sample_rate</name> <operator pos:start="47:21" pos:end="47:21">&gt;</operator> <literal type="number" pos:start="47:23" pos:end="47:23">0</literal></expr>)</condition> <block pos:start="47:26" pos:end="77:5">{<block_content pos:start="49:9" pos:end="75:33">

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:54">(<expr pos:start="49:13" pos:end="49:53"><name pos:start="49:13" pos:end="49:45"><name pos:start="49:13" pos:end="49:23">sample_rate</name> <argument_list type="generic" pos:start="49:25" pos:end="49:45">&lt; <argument pos:start="49:27" pos:end="49:43"><expr pos:start="49:27" pos:end="49:43"><literal type="number" pos:start="49:27" pos:end="49:28">14</literal> <operator pos:start="49:30" pos:end="49:31">||</operator> <name pos:start="49:33" pos:end="49:43">sample_rate</name></expr></argument> &gt;</argument_list></name> <name pos:start="49:47" pos:end="49:53">INT_MAX</name></expr>)</condition> <block pos:start="49:56" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:39">

            <expr_stmt pos:start="51:13" pos:end="51:78"><expr pos:start="51:13" pos:end="51:77"><call pos:start="51:13" pos:end="51:77"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="51:77">(<argument pos:start="51:20" pos:end="51:20"><expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">s</name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><name pos:start="51:23" pos:end="51:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:37" pos:end="51:63"><expr pos:start="51:37" pos:end="51:63"><literal type="string" pos:start="51:37" pos:end="51:63">"invalid sample rate: %u\n"</literal></expr></argument>, <argument pos:start="51:66" pos:end="51:76"><expr pos:start="51:66" pos:end="51:76"><name pos:start="51:66" pos:end="51:76">sample_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:39">return <expr pos:start="53:20" pos:end="53:38"><name pos:start="53:20" pos:end="53:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="65:9"><if pos:start="57:9" pos:end="65:9">if <condition pos:start="57:12" pos:end="57:57">(<expr pos:start="57:13" pos:end="57:56"><name pos:start="57:13" pos:end="57:54"><name pos:start="57:13" pos:end="57:28">bytes_per_sample</name> <argument_list type="generic" pos:start="57:30" pos:end="57:54">&lt; <argument pos:start="57:32" pos:end="57:52"><expr pos:start="57:32" pos:end="57:52"><literal type="number" pos:start="57:32" pos:end="57:32">1</literal> <operator pos:start="57:34" pos:end="57:35">||</operator> <name pos:start="57:37" pos:end="57:52">bytes_per_sample</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="57:56" pos:end="57:56">2</literal></expr>)</condition> <block pos:start="57:59" pos:end="65:9">{<block_content pos:start="59:13" pos:end="63:39">

            <expr_stmt pos:start="59:13" pos:end="61:37"><expr pos:start="59:13" pos:end="61:36"><call pos:start="59:13" pos:end="61:36"><name pos:start="59:13" pos:end="59:18">av_log</name><argument_list pos:start="59:19" pos:end="61:36">(<argument pos:start="59:20" pos:end="59:20"><expr pos:start="59:20" pos:end="59:20"><name pos:start="59:20" pos:end="59:20">s</name></expr></argument>, <argument pos:start="59:23" pos:end="59:34"><expr pos:start="59:23" pos:end="59:34"><name pos:start="59:23" pos:end="59:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:37" pos:end="59:68"><expr pos:start="59:37" pos:end="59:68"><literal type="string" pos:start="59:37" pos:end="59:68">"invalid bytes per sample: %u\n"</literal></expr></argument>,

                   <argument pos:start="61:20" pos:end="61:35"><expr pos:start="61:20" pos:end="61:35"><name pos:start="61:20" pos:end="61:35">bytes_per_sample</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="63:13" pos:end="63:39">return <expr pos:start="63:20" pos:end="63:38"><name pos:start="63:20" pos:end="63:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="67:9" pos:end="73:9"><if pos:start="67:9" pos:end="73:9">if <condition pos:start="67:12" pos:end="67:41">(<expr pos:start="67:13" pos:end="67:40"><name pos:start="67:13" pos:end="67:38"><name pos:start="67:13" pos:end="67:20">channels</name> <argument_list type="generic" pos:start="67:22" pos:end="67:38">&lt; <argument pos:start="67:24" pos:end="67:36"><expr pos:start="67:24" pos:end="67:36"><literal type="number" pos:start="67:24" pos:end="67:24">1</literal> <operator pos:start="67:26" pos:end="67:27">||</operator> <name pos:start="67:29" pos:end="67:36">channels</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="67:40" pos:end="67:40">2</literal></expr>)</condition> <block pos:start="67:43" pos:end="73:9">{<block_content pos:start="69:13" pos:end="71:39">

            <expr_stmt pos:start="69:13" pos:end="69:72"><expr pos:start="69:13" pos:end="69:71"><call pos:start="69:13" pos:end="69:71"><name pos:start="69:13" pos:end="69:18">av_log</name><argument_list pos:start="69:19" pos:end="69:71">(<argument pos:start="69:20" pos:end="69:20"><expr pos:start="69:20" pos:end="69:20"><name pos:start="69:20" pos:end="69:20">s</name></expr></argument>, <argument pos:start="69:23" pos:end="69:34"><expr pos:start="69:23" pos:end="69:34"><name pos:start="69:23" pos:end="69:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:37" pos:end="69:60"><expr pos:start="69:37" pos:end="69:60"><literal type="string" pos:start="69:37" pos:end="69:60">"invalid channels: %u\n"</literal></expr></argument>, <argument pos:start="69:63" pos:end="69:70"><expr pos:start="69:63" pos:end="69:70"><name pos:start="69:63" pos:end="69:70">channels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="71:13" pos:end="71:39">return <expr pos:start="71:20" pos:end="71:38"><name pos:start="71:20" pos:end="71:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:33"><expr pos:start="75:9" pos:end="75:32"><name pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:13">idcin</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:28">audio_present</name></name> <operator pos:start="75:30" pos:end="75:30">=</operator> <literal type="number" pos:start="75:32" pos:end="75:32">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="83:5">else <block pos:start="77:12" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:33">

        <comment type="block" pos:start="79:9" pos:end="79:50">/* if sample rate is 0, assume no audio */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:33"><expr pos:start="81:9" pos:end="81:32"><name pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:13">idcin</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:28">audio_present</name></name> <operator pos:start="81:30" pos:end="81:30">=</operator> <literal type="number" pos:start="81:32" pos:end="81:32">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:38"><expr pos:start="87:5" pos:end="87:37"><name pos:start="87:5" pos:end="87:6">st</name> <operator pos:start="87:8" pos:end="87:8">=</operator> <call pos:start="87:10" pos:end="87:37"><name pos:start="87:10" pos:end="87:28">avformat_new_stream</name><argument_list pos:start="87:29" pos:end="87:37">(<argument pos:start="87:30" pos:end="87:30"><expr pos:start="87:30" pos:end="87:30"><name pos:start="87:30" pos:end="87:30">s</name></expr></argument>, <argument pos:start="87:33" pos:end="87:36"><expr pos:start="87:33" pos:end="87:36"><name pos:start="87:33" pos:end="87:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="91:31"><if pos:start="89:5" pos:end="91:31">if <condition pos:start="89:8" pos:end="89:12">(<expr pos:start="89:9" pos:end="89:11"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:11">st</name></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:31"><block_content pos:start="91:9" pos:end="91:31">

        <return pos:start="91:9" pos:end="91:31">return <expr pos:start="91:16" pos:end="91:30"><call pos:start="91:16" pos:end="91:30"><name pos:start="91:16" pos:end="91:22">AVERROR</name><argument_list pos:start="91:23" pos:end="91:30">(<argument pos:start="91:24" pos:end="91:29"><expr pos:start="91:24" pos:end="91:29"><name pos:start="91:24" pos:end="91:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:46"><expr pos:start="93:5" pos:end="93:45"><call pos:start="93:5" pos:end="93:45"><name pos:start="93:5" pos:end="93:23">avpriv_set_pts_info</name><argument_list pos:start="93:24" pos:end="93:45">(<argument pos:start="93:25" pos:end="93:26"><expr pos:start="93:25" pos:end="93:26"><name pos:start="93:25" pos:end="93:26">st</name></expr></argument>, <argument pos:start="93:29" pos:end="93:30"><expr pos:start="93:29" pos:end="93:30"><literal type="number" pos:start="93:29" pos:end="93:30">33</literal></expr></argument>, <argument pos:start="93:33" pos:end="93:33"><expr pos:start="93:33" pos:end="93:33"><literal type="number" pos:start="93:33" pos:end="93:33">1</literal></expr></argument>, <argument pos:start="93:36" pos:end="93:44"><expr pos:start="93:36" pos:end="93:44"><name pos:start="93:36" pos:end="93:44">IDCIN_FPS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:23"><expr pos:start="95:5" pos:end="95:22"><name pos:start="95:5" pos:end="95:18"><name pos:start="95:5" pos:end="95:6">st</name><operator pos:start="95:7" pos:end="95:8">-&gt;</operator><name pos:start="95:9" pos:end="95:18">start_time</name></name> <operator pos:start="95:20" pos:end="95:20">=</operator> <literal type="number" pos:start="95:22" pos:end="95:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:42"><expr pos:start="97:5" pos:end="97:41"><name pos:start="97:5" pos:end="97:29"><name pos:start="97:5" pos:end="97:9">idcin</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:29">video_stream_index</name></name> <operator pos:start="97:31" pos:end="97:31">=</operator> <name pos:start="97:33" pos:end="97:41"><name pos:start="97:33" pos:end="97:34">st</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:41">index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:47"><expr pos:start="99:5" pos:end="99:46"><name pos:start="99:5" pos:end="99:25"><name pos:start="99:5" pos:end="99:6">st</name><operator pos:start="99:7" pos:end="99:8">-&gt;</operator><name pos:start="99:9" pos:end="99:13">codec</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:25">codec_type</name></name> <operator pos:start="99:27" pos:end="99:27">=</operator> <name pos:start="99:29" pos:end="99:46">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:44"><expr pos:start="101:5" pos:end="101:43"><name pos:start="101:5" pos:end="101:23"><name pos:start="101:5" pos:end="101:6">st</name><operator pos:start="101:7" pos:end="101:8">-&gt;</operator><name pos:start="101:9" pos:end="101:13">codec</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:23">codec_id</name></name> <operator pos:start="101:25" pos:end="101:25">=</operator> <name pos:start="101:27" pos:end="101:43">AV_CODEC_ID_IDCIN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:29"><expr pos:start="103:5" pos:end="103:28"><name pos:start="103:5" pos:end="103:24"><name pos:start="103:5" pos:end="103:6">st</name><operator pos:start="103:7" pos:end="103:8">-&gt;</operator><name pos:start="103:9" pos:end="103:13">codec</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:24">codec_tag</name></name> <operator pos:start="103:26" pos:end="103:26">=</operator> <literal type="number" pos:start="103:28" pos:end="103:28">0</literal></expr>;</expr_stmt>  <comment type="block" pos:start="103:32" pos:end="103:46">/* no fourcc */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:29"><expr pos:start="105:5" pos:end="105:28"><name pos:start="105:5" pos:end="105:20"><name pos:start="105:5" pos:end="105:6">st</name><operator pos:start="105:7" pos:end="105:8">-&gt;</operator><name pos:start="105:9" pos:end="105:13">codec</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:20">width</name></name> <operator pos:start="105:22" pos:end="105:22">=</operator> <name pos:start="105:24" pos:end="105:28">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:31"><expr pos:start="107:5" pos:end="107:30"><name pos:start="107:5" pos:end="107:21"><name pos:start="107:5" pos:end="107:6">st</name><operator pos:start="107:7" pos:end="107:8">-&gt;</operator><name pos:start="107:9" pos:end="107:13">codec</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:21">height</name></name> <operator pos:start="107:23" pos:end="107:23">=</operator> <name pos:start="107:25" pos:end="107:30">height</name></expr>;</expr_stmt>



    <comment type="block" pos:start="111:5" pos:end="111:51">/* load up the Huffman tables into extradata */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:51"><expr pos:start="113:5" pos:end="113:50"><name pos:start="113:5" pos:end="113:29"><name pos:start="113:5" pos:end="113:6">st</name><operator pos:start="113:7" pos:end="113:8">-&gt;</operator><name pos:start="113:9" pos:end="113:13">codec</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:29">extradata_size</name></name> <operator pos:start="113:31" pos:end="113:31">=</operator> <name pos:start="113:33" pos:end="113:50">HUFFMAN_TABLE_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:57"><expr pos:start="115:5" pos:end="115:56"><name pos:start="115:5" pos:end="115:24"><name pos:start="115:5" pos:end="115:6">st</name><operator pos:start="115:7" pos:end="115:8">-&gt;</operator><name pos:start="115:9" pos:end="115:13">codec</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:24">extradata</name></name> <operator pos:start="115:26" pos:end="115:26">=</operator> <call pos:start="115:28" pos:end="115:56"><name pos:start="115:28" pos:end="115:36">av_malloc</name><argument_list pos:start="115:37" pos:end="115:56">(<argument pos:start="115:38" pos:end="115:55"><expr pos:start="115:38" pos:end="115:55"><name pos:start="115:38" pos:end="115:55">HUFFMAN_TABLE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:66"><expr pos:start="117:5" pos:end="117:65"><name pos:start="117:5" pos:end="117:7">ret</name> <operator pos:start="117:9" pos:end="117:9">=</operator> <call pos:start="117:11" pos:end="117:65"><name pos:start="117:11" pos:end="117:19">avio_read</name><argument_list pos:start="117:20" pos:end="117:65">(<argument pos:start="117:21" pos:end="117:22"><expr pos:start="117:21" pos:end="117:22"><name pos:start="117:21" pos:end="117:22">pb</name></expr></argument>, <argument pos:start="117:25" pos:end="117:44"><expr pos:start="117:25" pos:end="117:44"><name pos:start="117:25" pos:end="117:44"><name pos:start="117:25" pos:end="117:26">st</name><operator pos:start="117:27" pos:end="117:28">-&gt;</operator><name pos:start="117:29" pos:end="117:33">codec</name><operator pos:start="117:34" pos:end="117:35">-&gt;</operator><name pos:start="117:36" pos:end="117:44">extradata</name></name></expr></argument>, <argument pos:start="117:47" pos:end="117:64"><expr pos:start="117:47" pos:end="117:64"><name pos:start="117:47" pos:end="117:64">HUFFMAN_TABLE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="129:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:16">(<expr pos:start="119:9" pos:end="119:15"><name pos:start="119:9" pos:end="119:11">ret</name> <operator pos:start="119:13" pos:end="119:13">&lt;</operator> <literal type="number" pos:start="119:15" pos:end="119:15">0</literal></expr>)</condition> <block pos:start="119:18" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:19">

        <return pos:start="121:9" pos:end="121:19">return <expr pos:start="121:16" pos:end="121:18"><name pos:start="121:16" pos:end="121:18">ret</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="123:7" pos:end="129:5">else if <condition pos:start="123:15" pos:end="123:41">(<expr pos:start="123:16" pos:end="123:40"><name pos:start="123:16" pos:end="123:18">ret</name> <operator pos:start="123:20" pos:end="123:21">!=</operator> <name pos:start="123:23" pos:end="123:40">HUFFMAN_TABLE_SIZE</name></expr>)</condition> <block pos:start="123:43" pos:end="129:5">{<block_content pos:start="125:9" pos:end="127:28">

        <expr_stmt pos:start="125:9" pos:end="125:55"><expr pos:start="125:9" pos:end="125:54"><call pos:start="125:9" pos:end="125:54"><name pos:start="125:9" pos:end="125:14">av_log</name><argument_list pos:start="125:15" pos:end="125:54">(<argument pos:start="125:16" pos:end="125:16"><expr pos:start="125:16" pos:end="125:16"><name pos:start="125:16" pos:end="125:16">s</name></expr></argument>, <argument pos:start="125:19" pos:end="125:30"><expr pos:start="125:19" pos:end="125:30"><name pos:start="125:19" pos:end="125:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:33" pos:end="125:53"><expr pos:start="125:33" pos:end="125:53"><literal type="string" pos:start="125:33" pos:end="125:53">"incomplete header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="127:9" pos:end="127:28">return <expr pos:start="127:16" pos:end="127:27"><call pos:start="127:16" pos:end="127:27"><name pos:start="127:16" pos:end="127:22">AVERROR</name><argument_list pos:start="127:23" pos:end="127:27">(<argument pos:start="127:24" pos:end="127:26"><expr pos:start="127:24" pos:end="127:26"><name pos:start="127:24" pos:end="127:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="133:5" pos:end="197:5"><if pos:start="133:5" pos:end="197:5">if <condition pos:start="133:8" pos:end="133:29">(<expr pos:start="133:9" pos:end="133:28"><name pos:start="133:9" pos:end="133:28"><name pos:start="133:9" pos:end="133:13">idcin</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:28">audio_present</name></name></expr>)</condition> <block pos:start="133:31" pos:end="197:5">{<block_content pos:start="135:9" pos:end="195:39">

        <expr_stmt pos:start="135:9" pos:end="135:33"><expr pos:start="135:9" pos:end="135:32"><name pos:start="135:9" pos:end="135:28"><name pos:start="135:9" pos:end="135:13">idcin</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:28">audio_present</name></name> <operator pos:start="135:30" pos:end="135:30">=</operator> <literal type="number" pos:start="135:32" pos:end="135:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:42"><expr pos:start="137:9" pos:end="137:41"><name pos:start="137:9" pos:end="137:10">st</name> <operator pos:start="137:12" pos:end="137:12">=</operator> <call pos:start="137:14" pos:end="137:41"><name pos:start="137:14" pos:end="137:32">avformat_new_stream</name><argument_list pos:start="137:33" pos:end="137:41">(<argument pos:start="137:34" pos:end="137:34"><expr pos:start="137:34" pos:end="137:34"><name pos:start="137:34" pos:end="137:34">s</name></expr></argument>, <argument pos:start="137:37" pos:end="137:40"><expr pos:start="137:37" pos:end="137:40"><name pos:start="137:37" pos:end="137:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="141:35"><if pos:start="139:9" pos:end="141:35">if <condition pos:start="139:12" pos:end="139:16">(<expr pos:start="139:13" pos:end="139:15"><operator pos:start="139:13" pos:end="139:13">!</operator><name pos:start="139:14" pos:end="139:15">st</name></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:35"><block_content pos:start="141:13" pos:end="141:35">

            <return pos:start="141:13" pos:end="141:35">return <expr pos:start="141:20" pos:end="141:34"><call pos:start="141:20" pos:end="141:34"><name pos:start="141:20" pos:end="141:26">AVERROR</name><argument_list pos:start="141:27" pos:end="141:34">(<argument pos:start="141:28" pos:end="141:33"><expr pos:start="141:28" pos:end="141:33"><name pos:start="141:28" pos:end="141:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:52"><expr pos:start="143:9" pos:end="143:51"><call pos:start="143:9" pos:end="143:51"><name pos:start="143:9" pos:end="143:27">avpriv_set_pts_info</name><argument_list pos:start="143:28" pos:end="143:51">(<argument pos:start="143:29" pos:end="143:30"><expr pos:start="143:29" pos:end="143:30"><name pos:start="143:29" pos:end="143:30">st</name></expr></argument>, <argument pos:start="143:33" pos:end="143:34"><expr pos:start="143:33" pos:end="143:34"><literal type="number" pos:start="143:33" pos:end="143:34">63</literal></expr></argument>, <argument pos:start="143:37" pos:end="143:37"><expr pos:start="143:37" pos:end="143:37"><literal type="number" pos:start="143:37" pos:end="143:37">1</literal></expr></argument>, <argument pos:start="143:40" pos:end="143:50"><expr pos:start="143:40" pos:end="143:50"><name pos:start="143:40" pos:end="143:50">sample_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:27"><expr pos:start="145:9" pos:end="145:26"><name pos:start="145:9" pos:end="145:22"><name pos:start="145:9" pos:end="145:10">st</name><operator pos:start="145:11" pos:end="145:12">-&gt;</operator><name pos:start="145:13" pos:end="145:22">start_time</name></name> <operator pos:start="145:24" pos:end="145:24">=</operator> <literal type="number" pos:start="145:26" pos:end="145:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:46"><expr pos:start="147:9" pos:end="147:45"><name pos:start="147:9" pos:end="147:33"><name pos:start="147:9" pos:end="147:13">idcin</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:33">audio_stream_index</name></name> <operator pos:start="147:35" pos:end="147:35">=</operator> <name pos:start="147:37" pos:end="147:45"><name pos:start="147:37" pos:end="147:38">st</name><operator pos:start="147:39" pos:end="147:40">-&gt;</operator><name pos:start="147:41" pos:end="147:45">index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:51"><expr pos:start="149:9" pos:end="149:50"><name pos:start="149:9" pos:end="149:29"><name pos:start="149:9" pos:end="149:10">st</name><operator pos:start="149:11" pos:end="149:12">-&gt;</operator><name pos:start="149:13" pos:end="149:17">codec</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:29">codec_type</name></name> <operator pos:start="149:31" pos:end="149:31">=</operator> <name pos:start="149:33" pos:end="149:50">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:33"><expr pos:start="151:9" pos:end="151:32"><name pos:start="151:9" pos:end="151:28"><name pos:start="151:9" pos:end="151:10">st</name><operator pos:start="151:11" pos:end="151:12">-&gt;</operator><name pos:start="151:13" pos:end="151:17">codec</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:28">codec_tag</name></name> <operator pos:start="151:30" pos:end="151:30">=</operator> <literal type="number" pos:start="151:32" pos:end="151:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:39"><expr pos:start="153:9" pos:end="153:38"><name pos:start="153:9" pos:end="153:27"><name pos:start="153:9" pos:end="153:10">st</name><operator pos:start="153:11" pos:end="153:12">-&gt;</operator><name pos:start="153:13" pos:end="153:17">codec</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:27">channels</name></name> <operator pos:start="153:29" pos:end="153:29">=</operator> <name pos:start="153:31" pos:end="153:38">channels</name></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="157:69"><expr pos:start="155:9" pos:end="157:68"><name pos:start="155:9" pos:end="155:33"><name pos:start="155:9" pos:end="155:10">st</name><operator pos:start="155:11" pos:end="155:12">-&gt;</operator><name pos:start="155:13" pos:end="155:17">codec</name><operator pos:start="155:18" pos:end="155:19">-&gt;</operator><name pos:start="155:20" pos:end="155:33">channel_layout</name></name> <operator pos:start="155:35" pos:end="155:35">=</operator> <ternary pos:start="155:37" pos:end="157:68"><condition pos:start="155:37" pos:end="155:50"><expr pos:start="155:37" pos:end="155:48"><name pos:start="155:37" pos:end="155:44">channels</name> <operator pos:start="155:46" pos:end="155:46">&gt;</operator> <literal type="number" pos:start="155:48" pos:end="155:48">1</literal></expr> ?</condition><then pos:start="155:52" pos:end="155:70"> <expr pos:start="155:52" pos:end="155:70"><name pos:start="155:52" pos:end="155:70">AV_CH_LAYOUT_STEREO</name></expr> </then><else pos:start="155:72" pos:end="157:68">:

                                                   <expr pos:start="157:52" pos:end="157:68"><name pos:start="157:52" pos:end="157:68">AV_CH_LAYOUT_MONO</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:45"><expr pos:start="159:9" pos:end="159:44"><name pos:start="159:9" pos:end="159:30"><name pos:start="159:9" pos:end="159:10">st</name><operator pos:start="159:11" pos:end="159:12">-&gt;</operator><name pos:start="159:13" pos:end="159:17">codec</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:30">sample_rate</name></name> <operator pos:start="159:32" pos:end="159:32">=</operator> <name pos:start="159:34" pos:end="159:44">sample_rate</name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:64"><expr pos:start="161:9" pos:end="161:63"><name pos:start="161:9" pos:end="161:40"><name pos:start="161:9" pos:end="161:10">st</name><operator pos:start="161:11" pos:end="161:12">-&gt;</operator><name pos:start="161:13" pos:end="161:17">codec</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:40">bits_per_coded_sample</name></name> <operator pos:start="161:42" pos:end="161:42">=</operator> <name pos:start="161:44" pos:end="161:59">bytes_per_sample</name> <operator pos:start="161:61" pos:end="161:61">*</operator> <literal type="number" pos:start="161:63" pos:end="161:63">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:76"><expr pos:start="163:9" pos:end="163:75"><name pos:start="163:9" pos:end="163:27"><name pos:start="163:9" pos:end="163:10">st</name><operator pos:start="163:11" pos:end="163:12">-&gt;</operator><name pos:start="163:13" pos:end="163:17">codec</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:27">bit_rate</name></name> <operator pos:start="163:29" pos:end="163:29">=</operator> <name pos:start="163:31" pos:end="163:41">sample_rate</name> <operator pos:start="163:43" pos:end="163:43">*</operator> <name pos:start="163:45" pos:end="163:60">bytes_per_sample</name> <operator pos:start="163:62" pos:end="163:62">*</operator> <literal type="number" pos:start="163:64" pos:end="163:64">8</literal> <operator pos:start="163:66" pos:end="163:66">*</operator> <name pos:start="163:68" pos:end="163:75">channels</name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:82"><expr pos:start="165:9" pos:end="165:81"><name pos:start="165:9" pos:end="165:30"><name pos:start="165:9" pos:end="165:10">st</name><operator pos:start="165:11" pos:end="165:12">-&gt;</operator><name pos:start="165:13" pos:end="165:17">codec</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:30">block_align</name></name> <operator pos:start="165:32" pos:end="165:32">=</operator> <name pos:start="165:34" pos:end="165:51"><name pos:start="165:34" pos:end="165:38">idcin</name><operator pos:start="165:39" pos:end="165:40">-&gt;</operator><name pos:start="165:41" pos:end="165:51">block_align</name></name> <operator pos:start="165:53" pos:end="165:53">=</operator> <name pos:start="165:55" pos:end="165:70">bytes_per_sample</name> <operator pos:start="165:72" pos:end="165:72">*</operator> <name pos:start="165:74" pos:end="165:81">channels</name></expr>;</expr_stmt>

        <if_stmt pos:start="167:9" pos:end="173:56"><if pos:start="167:9" pos:end="169:53">if <condition pos:start="167:12" pos:end="167:34">(<expr pos:start="167:13" pos:end="167:33"><name pos:start="167:13" pos:end="167:28">bytes_per_sample</name> <operator pos:start="167:30" pos:end="167:31">==</operator> <literal type="number" pos:start="167:33" pos:end="167:33">1</literal></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:53"><block_content pos:start="169:13" pos:end="169:53">

            <expr_stmt pos:start="169:13" pos:end="169:53"><expr pos:start="169:13" pos:end="169:52"><name pos:start="169:13" pos:end="169:31"><name pos:start="169:13" pos:end="169:14">st</name><operator pos:start="169:15" pos:end="169:16">-&gt;</operator><name pos:start="169:17" pos:end="169:21">codec</name><operator pos:start="169:22" pos:end="169:23">-&gt;</operator><name pos:start="169:24" pos:end="169:31">codec_id</name></name> <operator pos:start="169:33" pos:end="169:33">=</operator> <name pos:start="169:35" pos:end="169:52">AV_CODEC_ID_PCM_U8</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="171:9" pos:end="173:56">else<block type="pseudo" pos:start="173:13" pos:end="173:56"><block_content pos:start="173:13" pos:end="173:56">

            <expr_stmt pos:start="173:13" pos:end="173:56"><expr pos:start="173:13" pos:end="173:55"><name pos:start="173:13" pos:end="173:31"><name pos:start="173:13" pos:end="173:14">st</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:21">codec</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:31">codec_id</name></name> <operator pos:start="173:33" pos:end="173:33">=</operator> <name pos:start="173:35" pos:end="173:55">AV_CODEC_ID_PCM_S16LE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="177:9" pos:end="193:9"><if pos:start="177:9" pos:end="187:9">if <condition pos:start="177:12" pos:end="177:34">(<expr pos:start="177:13" pos:end="177:33"><name pos:start="177:13" pos:end="177:23">sample_rate</name> <operator pos:start="177:25" pos:end="177:25">%</operator> <literal type="number" pos:start="177:27" pos:end="177:28">14</literal> <operator pos:start="177:30" pos:end="177:31">!=</operator> <literal type="number" pos:start="177:33" pos:end="177:33">0</literal></expr>)</condition> <block pos:start="177:36" pos:end="187:9">{<block_content pos:start="179:13" pos:end="185:44">

            <expr_stmt pos:start="179:13" pos:end="181:40"><expr pos:start="179:13" pos:end="181:39"><name pos:start="179:13" pos:end="179:36"><name pos:start="179:13" pos:end="179:17">idcin</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:36">audio_chunk_size1</name></name> <operator pos:start="179:38" pos:end="179:38">=</operator> <operator pos:start="179:40" pos:end="179:40">(</operator><name pos:start="179:41" pos:end="179:51">sample_rate</name> <operator pos:start="179:53" pos:end="179:53">/</operator> <literal type="number" pos:start="179:55" pos:end="179:56">14</literal><operator pos:start="179:57" pos:end="179:57">)</operator> <operator pos:start="179:59" pos:end="179:59">*</operator>

            <name pos:start="181:13" pos:end="181:28">bytes_per_sample</name> <operator pos:start="181:30" pos:end="181:30">*</operator> <name pos:start="181:32" pos:end="181:39">channels</name></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="185:44"><expr pos:start="183:13" pos:end="185:43"><name pos:start="183:13" pos:end="183:36"><name pos:start="183:13" pos:end="183:17">idcin</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:36">audio_chunk_size2</name></name> <operator pos:start="183:38" pos:end="183:38">=</operator> <operator pos:start="183:40" pos:end="183:40">(</operator><name pos:start="183:41" pos:end="183:51">sample_rate</name> <operator pos:start="183:53" pos:end="183:53">/</operator> <literal type="number" pos:start="183:55" pos:end="183:58">14</literal> <operator pos:start="183:58" pos:end="183:58">+</operator> <literal type="number" pos:start="183:60" pos:end="183:60">1</literal><operator pos:start="183:61" pos:end="183:61">)</operator> <operator pos:start="183:63" pos:end="183:63">*</operator>

                <name pos:start="185:17" pos:end="185:32">bytes_per_sample</name> <operator pos:start="185:34" pos:end="185:34">*</operator> <name pos:start="185:36" pos:end="185:43">channels</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="187:11" pos:end="193:9">else <block pos:start="187:16" pos:end="193:9">{<block_content pos:start="189:13" pos:end="191:65">

            <expr_stmt pos:start="189:13" pos:end="191:65"><expr pos:start="189:13" pos:end="191:64"><name pos:start="189:13" pos:end="189:36"><name pos:start="189:13" pos:end="189:17">idcin</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:36">audio_chunk_size1</name></name> <operator pos:start="189:38" pos:end="189:38">=</operator> <name pos:start="189:40" pos:end="189:63"><name pos:start="189:40" pos:end="189:44">idcin</name><operator pos:start="189:45" pos:end="189:46">-&gt;</operator><name pos:start="189:47" pos:end="189:63">audio_chunk_size2</name></name> <operator pos:start="189:65" pos:end="189:65">=</operator>

                <operator pos:start="191:17" pos:end="191:17">(</operator><name pos:start="191:18" pos:end="191:28">sample_rate</name> <operator pos:start="191:30" pos:end="191:30">/</operator> <literal type="number" pos:start="191:32" pos:end="191:33">14</literal><operator pos:start="191:34" pos:end="191:34">)</operator> <operator pos:start="191:36" pos:end="191:36">*</operator> <name pos:start="191:38" pos:end="191:53">bytes_per_sample</name> <operator pos:start="191:55" pos:end="191:55">*</operator> <name pos:start="191:57" pos:end="191:64">channels</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:39"><expr pos:start="195:9" pos:end="195:38"><name pos:start="195:9" pos:end="195:34"><name pos:start="195:9" pos:end="195:13">idcin</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:34">current_audio_chunk</name></name> <operator pos:start="195:36" pos:end="195:36">=</operator> <literal type="number" pos:start="195:38" pos:end="195:38">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="201:5" pos:end="201:35"><expr pos:start="201:5" pos:end="201:34"><name pos:start="201:5" pos:end="201:30"><name pos:start="201:5" pos:end="201:9">idcin</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:30">next_chunk_is_video</name></name> <operator pos:start="201:32" pos:end="201:32">=</operator> <literal type="number" pos:start="201:34" pos:end="201:34">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:44"><expr pos:start="203:5" pos:end="203:43"><name pos:start="203:5" pos:end="203:24"><name pos:start="203:5" pos:end="203:9">idcin</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:24">first_pkt_pos</name></name> <operator pos:start="203:26" pos:end="203:26">=</operator> <call pos:start="203:28" pos:end="203:43"><name pos:start="203:28" pos:end="203:36">avio_tell</name><argument_list pos:start="203:37" pos:end="203:43">(<argument pos:start="203:38" pos:end="203:42"><expr pos:start="203:38" pos:end="203:42"><name pos:start="203:38" pos:end="203:42"><name pos:start="203:38" pos:end="203:38">s</name><operator pos:start="203:39" pos:end="203:40">-&gt;</operator><name pos:start="203:41" pos:end="203:42">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="207:5" pos:end="207:13">return <expr pos:start="207:12" pos:end="207:12"><literal type="number" pos:start="207:12" pos:end="207:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
