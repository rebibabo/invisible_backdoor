<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23228.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">dirac_decode_frame</name><parameter_list pos:start="1:30" pos:end="1:95">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:63"><decl pos:start="1:54" pos:end="1:63"><type pos:start="1:54" pos:end="1:63"><name pos:start="1:54" pos:end="1:57">void</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">data</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:79"><decl pos:start="1:66" pos:end="1:79"><type pos:start="1:66" pos:end="1:79"><name pos:start="1:66" pos:end="1:68">int</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:79">data_size</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:94"><decl pos:start="1:82" pos:end="1:94"><type pos:start="1:82" pos:end="1:94"><name pos:start="1:82" pos:end="1:89">AVPacket</name> <modifier pos:start="1:91" pos:end="1:91">*</modifier></type><name pos:start="1:92" pos:end="1:94">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="181:1">{<block_content pos:start="5:5" pos:end="179:19">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">DiracContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name>     <init pos:start="5:25" pos:end="5:42">= <expr pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:31">avctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">DiracFrame</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:23">picture</name> <init pos:start="7:25" pos:end="7:30">= <expr pos:start="7:27" pos:end="7:30"><name pos:start="7:27" pos:end="7:30">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">buf</name>        <init pos:start="9:25" pos:end="9:35">= <expr pos:start="9:27" pos:end="9:35"><name pos:start="9:27" pos:end="9:35"><name pos:start="9:27" pos:end="9:29">pkt</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:35">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name>        <init pos:start="11:25" pos:end="11:35">= <expr pos:start="11:27" pos:end="11:35"><name pos:start="11:27" pos:end="11:35"><name pos:start="11:27" pos:end="11:29">pkt</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:35">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:25">data_unit_size</name></decl>, <decl pos:start="13:28" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:28" pos:end="13:34">buf_idx</name> <init pos:start="13:36" pos:end="13:38">= <expr pos:start="13:38" pos:end="13:38"><literal type="number" pos:start="13:38" pos:end="13:38">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:31">/* release unused frames */</comment>

    <for pos:start="19:5" pos:end="27:9">for <control pos:start="19:9" pos:end="19:36">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:31"><expr pos:start="19:17" pos:end="19:30"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:30">MAX_FRAMES</name></expr>;</condition> <incr pos:start="19:33" pos:end="19:35"><expr pos:start="19:33" pos:end="19:35"><name pos:start="19:33" pos:end="19:33">i</name><operator pos:start="19:34" pos:end="19:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="21:9" pos:end="27:9"><block_content pos:start="21:9" pos:end="27:9">

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:84">(<expr pos:start="21:13" pos:end="21:83"><name pos:start="21:13" pos:end="21:28"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:25">all_frames</name><index pos:start="21:26" pos:end="21:28">[<expr pos:start="21:27" pos:end="21:27"><name pos:start="21:27" pos:end="21:27">i</name></expr>]</index></name><operator pos:start="21:29" pos:end="21:29">.</operator><name pos:start="21:30" pos:end="21:44"><name pos:start="21:30" pos:end="21:36">avframe</name><operator pos:start="21:37" pos:end="21:37">.</operator><name pos:start="21:38" pos:end="21:41">data</name><index pos:start="21:42" pos:end="21:44">[<expr pos:start="21:43" pos:end="21:43"><literal type="number" pos:start="21:43" pos:end="21:43">0</literal></expr>]</index></name> <operator pos:start="21:46" pos:end="21:47">&amp;&amp;</operator> <operator pos:start="21:49" pos:end="21:49">!</operator><name pos:start="21:50" pos:end="21:65"><name pos:start="21:50" pos:end="21:50">s</name><operator pos:start="21:51" pos:end="21:52">-&gt;</operator><name pos:start="21:53" pos:end="21:62">all_frames</name><index pos:start="21:63" pos:end="21:65">[<expr pos:start="21:64" pos:end="21:64"><name pos:start="21:64" pos:end="21:64">i</name></expr>]</index></name><operator pos:start="21:66" pos:end="21:66">.</operator><name pos:start="21:67" pos:end="21:83"><name pos:start="21:67" pos:end="21:73">avframe</name><operator pos:start="21:74" pos:end="21:74">.</operator><name pos:start="21:75" pos:end="21:83">reference</name></name></expr>)</condition> <block pos:start="21:86" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:92">

            <expr_stmt pos:start="23:13" pos:end="23:68"><expr pos:start="23:13" pos:end="23:67"><call pos:start="23:13" pos:end="23:67"><name pos:start="23:13" pos:end="23:33"><name pos:start="23:13" pos:end="23:17">avctx</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:33">release_buffer</name></name><argument_list pos:start="23:34" pos:end="23:67">(<argument pos:start="23:35" pos:end="23:39"><expr pos:start="23:35" pos:end="23:39"><name pos:start="23:35" pos:end="23:39">avctx</name></expr></argument>, <argument pos:start="23:42" pos:end="23:66"><expr pos:start="23:42" pos:end="23:66"><operator pos:start="23:42" pos:end="23:42">&amp;</operator><name pos:start="23:43" pos:end="23:58"><name pos:start="23:43" pos:end="23:43">s</name><operator pos:start="23:44" pos:end="23:45">-&gt;</operator><name pos:start="23:46" pos:end="23:55">all_frames</name><index pos:start="23:56" pos:end="23:58">[<expr pos:start="23:57" pos:end="23:57"><name pos:start="23:57" pos:end="23:57">i</name></expr>]</index></name><operator pos:start="23:59" pos:end="23:59">.</operator><name pos:start="23:60" pos:end="23:66">avframe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:92"><expr pos:start="25:13" pos:end="25:91"><call pos:start="25:13" pos:end="25:91"><name pos:start="25:13" pos:end="25:18">memset</name><argument_list pos:start="25:19" pos:end="25:91">(<argument pos:start="25:20" pos:end="25:48"><expr pos:start="25:20" pos:end="25:48"><name pos:start="25:20" pos:end="25:35"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:32">all_frames</name><index pos:start="25:33" pos:end="25:35">[<expr pos:start="25:34" pos:end="25:34"><name pos:start="25:34" pos:end="25:34">i</name></expr>]</index></name><operator pos:start="25:36" pos:end="25:36">.</operator><name pos:start="25:37" pos:end="25:48">interpolated</name></expr></argument>, <argument pos:start="25:51" pos:end="25:51"><expr pos:start="25:51" pos:end="25:51"><literal type="number" pos:start="25:51" pos:end="25:51">0</literal></expr></argument>, <argument pos:start="25:54" pos:end="25:90"><expr pos:start="25:54" pos:end="25:90"><sizeof pos:start="25:54" pos:end="25:90">sizeof<argument_list pos:start="25:60" pos:end="25:90">(<argument pos:start="25:61" pos:end="25:89"><expr pos:start="25:61" pos:end="25:89"><name pos:start="25:61" pos:end="25:76"><name pos:start="25:61" pos:end="25:61">s</name><operator pos:start="25:62" pos:end="25:63">-&gt;</operator><name pos:start="25:64" pos:end="25:73">all_frames</name><index pos:start="25:74" pos:end="25:76">[<expr pos:start="25:75" pos:end="25:75"><name pos:start="25:75" pos:end="25:75">i</name></expr>]</index></name><operator pos:start="25:77" pos:end="25:77">.</operator><name pos:start="25:78" pos:end="25:89">interpolated</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></for>



    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:22">current_picture</name></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <name pos:start="31:26" pos:end="31:29">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><operator pos:start="33:5" pos:end="33:5">*</operator><name pos:start="33:6" pos:end="33:14">data_size</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:46">/* end of stream, so flush delayed pics */</comment>

    <if_stmt pos:start="39:5" pos:end="41:62"><if pos:start="39:5" pos:end="41:62">if <condition pos:start="39:8" pos:end="39:22">(<expr pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:16">buf_size</name> <operator pos:start="39:18" pos:end="39:19">==</operator> <literal type="number" pos:start="39:21" pos:end="39:21">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:62"><block_content pos:start="41:9" pos:end="41:62">

        <return pos:start="41:9" pos:end="41:62">return <expr pos:start="41:16" pos:end="41:61"><call pos:start="41:16" pos:end="41:61"><name pos:start="41:16" pos:end="41:30">get_delayed_pic</name><argument_list pos:start="41:31" pos:end="41:61">(<argument pos:start="41:32" pos:end="41:32"><expr pos:start="41:32" pos:end="41:32"><name pos:start="41:32" pos:end="41:32">s</name></expr></argument>, <argument pos:start="41:35" pos:end="41:49"><expr pos:start="41:35" pos:end="41:49"><operator pos:start="41:35" pos:end="41:35">(</operator><name pos:start="41:36" pos:end="41:42">AVFrame</name> <operator pos:start="41:44" pos:end="41:44">*</operator><operator pos:start="41:45" pos:end="41:45">)</operator><name pos:start="41:46" pos:end="41:49">data</name></expr></argument>, <argument pos:start="41:52" pos:end="41:60"><expr pos:start="41:52" pos:end="41:60"><name pos:start="41:52" pos:end="41:60">data_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="45:5" pos:end="103:5">for <control pos:start="45:9" pos:end="45:12">(<init pos:start="45:10" pos:end="45:10">;</init><condition pos:start="45:11" pos:end="45:11">;</condition><incr/>)</control> <block pos:start="45:14" pos:end="103:5">{<block_content pos:start="53:9" pos:end="101:34">

        <comment type="block" pos:start="47:9" pos:end="51:35">/*[DIRAC_STD] Here starts the code from parse_info() defined in 9.6

          [DIRAC_STD] PARSE_INFO_PREFIX = "BBCD" as defined in ISO/IEC 646

          BBCD start code search */</comment>

        <for pos:start="53:9" pos:end="61:9">for <control pos:start="53:13" pos:end="53:69">(<init pos:start="53:14" pos:end="53:14">;</init> <condition pos:start="53:16" pos:end="53:58"><expr pos:start="53:16" pos:end="53:57"><name pos:start="53:16" pos:end="53:22">buf_idx</name> <operator pos:start="53:24" pos:end="53:24">+</operator> <name pos:start="53:26" pos:end="53:46">DATA_UNIT_HEADER_SIZE</name> <operator pos:start="53:48" pos:end="53:48">&lt;</operator> <name pos:start="53:50" pos:end="53:57">buf_size</name></expr>;</condition> <incr pos:start="53:60" pos:end="53:68"><expr pos:start="53:60" pos:end="53:68"><name pos:start="53:60" pos:end="53:66">buf_idx</name><operator pos:start="53:67" pos:end="53:68">++</operator></expr></incr>)</control> <block pos:start="53:71" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:22">

            <if_stmt pos:start="55:13" pos:end="59:22"><if pos:start="55:13" pos:end="59:22">if <condition pos:start="55:16" pos:end="57:63">(<expr pos:start="55:17" pos:end="57:62"><name pos:start="55:17" pos:end="55:30"><name pos:start="55:17" pos:end="55:19">buf</name><index pos:start="55:20" pos:end="55:30">[<expr pos:start="55:21" pos:end="55:27"><name pos:start="55:21" pos:end="55:27">buf_idx</name></expr>  ]</index></name> <operator pos:start="55:32" pos:end="55:33">==</operator> <literal type="char" pos:start="55:35" pos:end="55:37">'B'</literal> <operator pos:start="55:39" pos:end="55:40">&amp;&amp;</operator> <name pos:start="55:42" pos:end="55:55"><name pos:start="55:42" pos:end="55:44">buf</name><index pos:start="55:45" pos:end="55:55">[<expr pos:start="55:46" pos:end="55:54"><name pos:start="55:46" pos:end="55:52">buf_idx</name><operator pos:start="55:53" pos:end="55:53">+</operator><literal type="number" pos:start="55:54" pos:end="55:54">1</literal></expr>]</index></name> <operator pos:start="55:57" pos:end="55:58">==</operator> <literal type="char" pos:start="55:60" pos:end="55:62">'B'</literal> <operator pos:start="55:64" pos:end="55:65">&amp;&amp;</operator>

                <name pos:start="57:17" pos:end="57:30"><name pos:start="57:17" pos:end="57:19">buf</name><index pos:start="57:20" pos:end="57:30">[<expr pos:start="57:21" pos:end="57:29"><name pos:start="57:21" pos:end="57:27">buf_idx</name><operator pos:start="57:28" pos:end="57:28">+</operator><literal type="number" pos:start="57:29" pos:end="57:29">2</literal></expr>]</index></name> <operator pos:start="57:32" pos:end="57:33">==</operator> <literal type="char" pos:start="57:35" pos:end="57:37">'C'</literal> <operator pos:start="57:39" pos:end="57:40">&amp;&amp;</operator> <name pos:start="57:42" pos:end="57:55"><name pos:start="57:42" pos:end="57:44">buf</name><index pos:start="57:45" pos:end="57:55">[<expr pos:start="57:46" pos:end="57:54"><name pos:start="57:46" pos:end="57:52">buf_idx</name><operator pos:start="57:53" pos:end="57:53">+</operator><literal type="number" pos:start="57:54" pos:end="57:54">3</literal></expr>]</index></name> <operator pos:start="57:57" pos:end="57:58">==</operator> <literal type="char" pos:start="57:60" pos:end="57:62">'D'</literal></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:22"><block_content pos:start="59:17" pos:end="59:22">

                <break pos:start="59:17" pos:end="59:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="63:9" pos:end="63:39">/* BBCD found or end of data */</comment>

        <if_stmt pos:start="65:9" pos:end="67:18"><if pos:start="65:9" pos:end="67:18">if <condition pos:start="65:12" pos:end="65:56">(<expr pos:start="65:13" pos:end="65:55"><name pos:start="65:13" pos:end="65:19">buf_idx</name> <operator pos:start="65:21" pos:end="65:21">+</operator> <name pos:start="65:23" pos:end="65:43">DATA_UNIT_HEADER_SIZE</name> <operator pos:start="65:45" pos:end="65:46">&gt;=</operator> <name pos:start="65:48" pos:end="65:55">buf_size</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:18"><block_content pos:start="67:13" pos:end="67:18">

            <break pos:start="67:13" pos:end="67:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:48"><expr pos:start="71:9" pos:end="71:47"><name pos:start="71:9" pos:end="71:22">data_unit_size</name> <operator pos:start="71:24" pos:end="71:24">=</operator> <call pos:start="71:26" pos:end="71:47"><name pos:start="71:26" pos:end="71:32">AV_RB32</name><argument_list pos:start="71:33" pos:end="71:47">(<argument pos:start="71:34" pos:end="71:46"><expr pos:start="71:34" pos:end="71:46"><name pos:start="71:34" pos:end="71:36">buf</name><operator pos:start="71:37" pos:end="71:37">+</operator><name pos:start="71:38" pos:end="71:44">buf_idx</name><operator pos:start="71:45" pos:end="71:45">+</operator><literal type="number" pos:start="71:46" pos:end="71:46">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="87:9"><if pos:start="73:9" pos:end="87:9">if <condition pos:start="73:12" pos:end="73:67">(<expr pos:start="73:13" pos:end="73:66"><name pos:start="73:13" pos:end="73:19">buf_idx</name> <operator pos:start="73:21" pos:end="73:21">+</operator> <name pos:start="73:23" pos:end="73:36">data_unit_size</name> <operator pos:start="73:38" pos:end="73:38">&gt;</operator> <name pos:start="73:40" pos:end="73:47">buf_size</name> <operator pos:start="73:49" pos:end="73:50">||</operator> <operator pos:start="73:52" pos:end="73:52">!</operator><name pos:start="73:53" pos:end="73:66">data_unit_size</name></expr>)</condition> <block pos:start="73:69" pos:end="87:9">{<block_content pos:start="75:13" pos:end="85:21">

            <if_stmt pos:start="75:13" pos:end="81:35"><if pos:start="75:13" pos:end="81:35">if<condition pos:start="75:15" pos:end="75:51">(<expr pos:start="75:16" pos:end="75:50"><name pos:start="75:16" pos:end="75:22">buf_idx</name> <operator pos:start="75:24" pos:end="75:24">+</operator> <name pos:start="75:26" pos:end="75:39">data_unit_size</name> <operator pos:start="75:41" pos:end="75:41">&gt;</operator> <name pos:start="75:43" pos:end="75:50">buf_size</name></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="81:35"><block_content pos:start="77:13" pos:end="81:35">

            <expr_stmt pos:start="77:13" pos:end="81:35"><expr pos:start="77:13" pos:end="81:34"><call pos:start="77:13" pos:end="81:34"><name pos:start="77:13" pos:end="77:18">av_log</name><argument_list pos:start="77:19" pos:end="81:34">(<argument pos:start="77:20" pos:end="77:27"><expr pos:start="77:20" pos:end="77:27"><name pos:start="77:20" pos:end="77:27"><name pos:start="77:20" pos:end="77:20">s</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:27">avctx</name></name></expr></argument>, <argument pos:start="77:30" pos:end="77:41"><expr pos:start="77:30" pos:end="77:41"><name pos:start="77:30" pos:end="77:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="79:20" pos:end="79:85"><expr pos:start="79:20" pos:end="79:85"><literal type="string" pos:start="79:20" pos:end="79:85">"Data unit with size %d is larger than input buffer, discarding\n"</literal></expr></argument>,

                   <argument pos:start="81:20" pos:end="81:33"><expr pos:start="81:20" pos:end="81:33"><name pos:start="81:20" pos:end="81:33">data_unit_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:25"><expr pos:start="83:13" pos:end="83:24"><name pos:start="83:13" pos:end="83:19">buf_idx</name> <operator pos:start="83:21" pos:end="83:22">+=</operator> <literal type="number" pos:start="83:24" pos:end="83:24">4</literal></expr>;</expr_stmt>

            <continue pos:start="85:13" pos:end="85:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="89:9" pos:end="89:129">/* [DIRAC_STD] dirac_decode_data_unit makes reference to the while defined in 9.3 inside the function parse_sequence() */</comment>

        <if_stmt pos:start="91:9" pos:end="99:9"><if pos:start="91:9" pos:end="99:9">if <condition pos:start="91:12" pos:end="91:71">(<expr pos:start="91:13" pos:end="91:70"><call pos:start="91:13" pos:end="91:70"><name pos:start="91:13" pos:end="91:34">dirac_decode_data_unit</name><argument_list pos:start="91:35" pos:end="91:70">(<argument pos:start="91:36" pos:end="91:40"><expr pos:start="91:36" pos:end="91:40"><name pos:start="91:36" pos:end="91:40">avctx</name></expr></argument>, <argument pos:start="91:43" pos:end="91:53"><expr pos:start="91:43" pos:end="91:53"><name pos:start="91:43" pos:end="91:45">buf</name><operator pos:start="91:46" pos:end="91:46">+</operator><name pos:start="91:47" pos:end="91:53">buf_idx</name></expr></argument>, <argument pos:start="91:56" pos:end="91:69"><expr pos:start="91:56" pos:end="91:69"><name pos:start="91:56" pos:end="91:69">data_unit_size</name></expr></argument>)</argument_list></call></expr>)</condition>

        <block pos:start="93:9" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:22">

            <expr_stmt pos:start="95:13" pos:end="95:79"><expr pos:start="95:13" pos:end="95:78"><call pos:start="95:13" pos:end="95:78"><name pos:start="95:13" pos:end="95:18">av_log</name><argument_list pos:start="95:19" pos:end="95:78">(<argument pos:start="95:20" pos:end="95:27"><expr pos:start="95:20" pos:end="95:27"><name pos:start="95:20" pos:end="95:27"><name pos:start="95:20" pos:end="95:20">s</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:27">avctx</name></name></expr></argument>, <argument pos:start="95:30" pos:end="95:41"><expr pos:start="95:30" pos:end="95:41"><name pos:start="95:30" pos:end="95:41">AV_LOG_ERROR</name></expr></argument>,<argument pos:start="95:43" pos:end="95:77"><expr pos:start="95:43" pos:end="95:77"><literal type="string" pos:start="95:43" pos:end="95:77">"Error in dirac_decode_data_unit\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="97:13" pos:end="97:22">return <expr pos:start="97:20" pos:end="97:21"><operator pos:start="97:20" pos:end="97:20">-</operator><literal type="number" pos:start="97:21" pos:end="97:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:34"><expr pos:start="101:9" pos:end="101:33"><name pos:start="101:9" pos:end="101:15">buf_idx</name> <operator pos:start="101:17" pos:end="101:18">+=</operator> <name pos:start="101:20" pos:end="101:33">data_unit_size</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="107:5" pos:end="109:17"><if pos:start="107:5" pos:end="109:17">if <condition pos:start="107:8" pos:end="107:28">(<expr pos:start="107:9" pos:end="107:27"><operator pos:start="107:9" pos:end="107:9">!</operator><name pos:start="107:10" pos:end="107:27"><name pos:start="107:10" pos:end="107:10">s</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:27">current_picture</name></name></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:17"><block_content pos:start="109:9" pos:end="109:17">

        <return pos:start="109:9" pos:end="109:17">return <expr pos:start="109:16" pos:end="109:16"><literal type="number" pos:start="109:16" pos:end="109:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="169:5"><if pos:start="113:5" pos:end="161:5">if <condition pos:start="113:8" pos:end="113:77">(<expr pos:start="113:9" pos:end="113:76"><name pos:start="113:9" pos:end="113:58"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:26">current_picture</name><operator pos:start="113:27" pos:end="113:28">-&gt;</operator><name pos:start="113:29" pos:end="113:35">avframe</name><operator pos:start="113:36" pos:end="113:36">.</operator><name pos:start="113:37" pos:end="113:58">display_picture_number</name></name> <operator pos:start="113:60" pos:end="113:60">&gt;</operator> <name pos:start="113:62" pos:end="113:76"><name pos:start="113:62" pos:end="113:62">s</name><operator pos:start="113:63" pos:end="113:64">-&gt;</operator><name pos:start="113:65" pos:end="113:76">frame_number</name></name></expr>)</condition> <block pos:start="113:79" pos:end="161:5">{<block_content pos:start="115:9" pos:end="159:9">

        <decl_stmt pos:start="115:9" pos:end="115:83"><decl pos:start="115:9" pos:end="115:82"><type pos:start="115:9" pos:end="115:20"><name pos:start="115:9" pos:end="115:18">DiracFrame</name> <modifier pos:start="115:20" pos:end="115:20">*</modifier></type><name pos:start="115:21" pos:end="115:33">delayed_frame</name> <init pos:start="115:35" pos:end="115:82">= <expr pos:start="115:37" pos:end="115:82"><call pos:start="115:37" pos:end="115:82"><name pos:start="115:37" pos:end="115:48">remove_frame</name><argument_list pos:start="115:49" pos:end="115:82">(<argument pos:start="115:50" pos:end="115:64"><expr pos:start="115:50" pos:end="115:64"><name pos:start="115:50" pos:end="115:64"><name pos:start="115:50" pos:end="115:50">s</name><operator pos:start="115:51" pos:end="115:52">-&gt;</operator><name pos:start="115:53" pos:end="115:64">delay_frames</name></name></expr></argument>, <argument pos:start="115:67" pos:end="115:81"><expr pos:start="115:67" pos:end="115:81"><name pos:start="115:67" pos:end="115:81"><name pos:start="115:67" pos:end="115:67">s</name><operator pos:start="115:68" pos:end="115:69">-&gt;</operator><name pos:start="115:70" pos:end="115:81">frame_number</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:65"><expr pos:start="119:9" pos:end="119:64"><name pos:start="119:9" pos:end="119:45"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:26">current_picture</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:35">avframe</name><operator pos:start="119:36" pos:end="119:36">.</operator><name pos:start="119:37" pos:end="119:45">reference</name></name> <operator pos:start="119:47" pos:end="119:48">|=</operator> <name pos:start="119:50" pos:end="119:64">DELAYED_PIC_REF</name></expr>;</expr_stmt>



        <if_stmt pos:start="123:9" pos:end="147:9"><if pos:start="123:9" pos:end="147:9">if <condition pos:start="123:12" pos:end="123:70">(<expr pos:start="123:13" pos:end="123:69"><call pos:start="123:13" pos:end="123:69"><name pos:start="123:13" pos:end="123:21">add_frame</name><argument_list pos:start="123:22" pos:end="123:69">(<argument pos:start="123:23" pos:end="123:37"><expr pos:start="123:23" pos:end="123:37"><name pos:start="123:23" pos:end="123:37"><name pos:start="123:23" pos:end="123:23">s</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:37">delay_frames</name></name></expr></argument>, <argument pos:start="123:40" pos:end="123:48"><expr pos:start="123:40" pos:end="123:48"><name pos:start="123:40" pos:end="123:48">MAX_DELAY</name></expr></argument>, <argument pos:start="123:51" pos:end="123:68"><expr pos:start="123:51" pos:end="123:68"><name pos:start="123:51" pos:end="123:68"><name pos:start="123:51" pos:end="123:51">s</name><operator pos:start="123:52" pos:end="123:53">-&gt;</operator><name pos:start="123:54" pos:end="123:68">current_picture</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:72" pos:end="147:9">{<block_content pos:start="125:13" pos:end="145:70">

            <decl_stmt pos:start="125:13" pos:end="125:77"><decl pos:start="125:13" pos:end="125:76"><type pos:start="125:13" pos:end="125:15"><name pos:start="125:13" pos:end="125:15">int</name></type> <name pos:start="125:17" pos:end="125:23">min_num</name> <init pos:start="125:25" pos:end="125:76">= <expr pos:start="125:27" pos:end="125:76"><name pos:start="125:27" pos:end="125:44"><name pos:start="125:27" pos:end="125:27">s</name><operator pos:start="125:28" pos:end="125:29">-&gt;</operator><name pos:start="125:30" pos:end="125:41">delay_frames</name><index pos:start="125:42" pos:end="125:44">[<expr pos:start="125:43" pos:end="125:43"><literal type="number" pos:start="125:43" pos:end="125:43">0</literal></expr>]</index></name><operator pos:start="125:45" pos:end="125:46">-&gt;</operator><name pos:start="125:47" pos:end="125:76"><name pos:start="125:47" pos:end="125:53">avframe</name><operator pos:start="125:54" pos:end="125:54">.</operator><name pos:start="125:55" pos:end="125:76">display_picture_number</name></name></expr></init></decl>;</decl_stmt>

            <comment type="block" pos:start="127:13" pos:end="127:86">/* Too many delayed frames, so we display the frame with the lowest pts */</comment>

            <expr_stmt pos:start="129:13" pos:end="129:66"><expr pos:start="129:13" pos:end="129:65"><call pos:start="129:13" pos:end="129:65"><name pos:start="129:13" pos:end="129:18">av_log</name><argument_list pos:start="129:19" pos:end="129:65">(<argument pos:start="129:20" pos:end="129:24"><expr pos:start="129:20" pos:end="129:24"><name pos:start="129:20" pos:end="129:24">avctx</name></expr></argument>, <argument pos:start="129:27" pos:end="129:38"><expr pos:start="129:27" pos:end="129:38"><name pos:start="129:27" pos:end="129:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="129:41" pos:end="129:64"><expr pos:start="129:41" pos:end="129:64"><literal type="string" pos:start="129:41" pos:end="129:64">"Delay frame overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:47"><expr pos:start="131:13" pos:end="131:46"><name pos:start="131:13" pos:end="131:25">delayed_frame</name> <operator pos:start="131:27" pos:end="131:27">=</operator> <name pos:start="131:29" pos:end="131:46"><name pos:start="131:29" pos:end="131:29">s</name><operator pos:start="131:30" pos:end="131:31">-&gt;</operator><name pos:start="131:32" pos:end="131:43">delay_frames</name><index pos:start="131:44" pos:end="131:46">[<expr pos:start="131:45" pos:end="131:45"><literal type="number" pos:start="131:45" pos:end="131:45">0</literal></expr>]</index></name></expr>;</expr_stmt>



            <for pos:start="135:13" pos:end="139:81">for <control pos:start="135:17" pos:end="135:48">(<init pos:start="135:18" pos:end="135:23"><expr pos:start="135:18" pos:end="135:22"><name pos:start="135:18" pos:end="135:18">i</name> <operator pos:start="135:20" pos:end="135:20">=</operator> <literal type="number" pos:start="135:22" pos:end="135:22">1</literal></expr>;</init> <condition pos:start="135:25" pos:end="135:43"><expr pos:start="135:25" pos:end="135:42"><name pos:start="135:25" pos:end="135:42"><name pos:start="135:25" pos:end="135:25">s</name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:39">delay_frames</name><index pos:start="135:40" pos:end="135:42">[<expr pos:start="135:41" pos:end="135:41"><name pos:start="135:41" pos:end="135:41">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="135:45" pos:end="135:47"><expr pos:start="135:45" pos:end="135:47"><name pos:start="135:45" pos:end="135:45">i</name><operator pos:start="135:46" pos:end="135:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="137:17" pos:end="139:81"><block_content pos:start="137:17" pos:end="139:81">

                <if_stmt pos:start="137:17" pos:end="139:81"><if pos:start="137:17" pos:end="139:81">if <condition pos:start="137:20" pos:end="137:81">(<expr pos:start="137:21" pos:end="137:80"><name pos:start="137:21" pos:end="137:38"><name pos:start="137:21" pos:end="137:21">s</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:35">delay_frames</name><index pos:start="137:36" pos:end="137:38">[<expr pos:start="137:37" pos:end="137:37"><name pos:start="137:37" pos:end="137:37">i</name></expr>]</index></name><operator pos:start="137:39" pos:end="137:40">-&gt;</operator><name pos:start="137:41" pos:end="137:70"><name pos:start="137:41" pos:end="137:47">avframe</name><operator pos:start="137:48" pos:end="137:48">.</operator><name pos:start="137:49" pos:end="137:70">display_picture_number</name></name> <operator pos:start="137:72" pos:end="137:72">&lt;</operator> <name pos:start="137:74" pos:end="137:80">min_num</name></expr>)</condition><block type="pseudo" pos:start="139:21" pos:end="139:81"><block_content pos:start="139:21" pos:end="139:81">

                    <expr_stmt pos:start="139:21" pos:end="139:81"><expr pos:start="139:21" pos:end="139:80"><name pos:start="139:21" pos:end="139:27">min_num</name> <operator pos:start="139:29" pos:end="139:29">=</operator> <name pos:start="139:31" pos:end="139:48"><name pos:start="139:31" pos:end="139:31">s</name><operator pos:start="139:32" pos:end="139:33">-&gt;</operator><name pos:start="139:34" pos:end="139:45">delay_frames</name><index pos:start="139:46" pos:end="139:48">[<expr pos:start="139:47" pos:end="139:47"><name pos:start="139:47" pos:end="139:47">i</name></expr>]</index></name><operator pos:start="139:49" pos:end="139:50">-&gt;</operator><name pos:start="139:51" pos:end="139:80"><name pos:start="139:51" pos:end="139:57">avframe</name><operator pos:start="139:58" pos:end="139:58">.</operator><name pos:start="139:59" pos:end="139:80">display_picture_number</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



            <expr_stmt pos:start="143:13" pos:end="143:67"><expr pos:start="143:13" pos:end="143:66"><name pos:start="143:13" pos:end="143:25">delayed_frame</name> <operator pos:start="143:27" pos:end="143:27">=</operator> <call pos:start="143:29" pos:end="143:66"><name pos:start="143:29" pos:end="143:40">remove_frame</name><argument_list pos:start="143:41" pos:end="143:66">(<argument pos:start="143:42" pos:end="143:56"><expr pos:start="143:42" pos:end="143:56"><name pos:start="143:42" pos:end="143:56"><name pos:start="143:42" pos:end="143:42">s</name><operator pos:start="143:43" pos:end="143:44">-&gt;</operator><name pos:start="143:45" pos:end="143:56">delay_frames</name></name></expr></argument>, <argument pos:start="143:59" pos:end="143:65"><expr pos:start="143:59" pos:end="143:65"><name pos:start="143:59" pos:end="143:65">min_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:70"><expr pos:start="145:13" pos:end="145:69"><call pos:start="145:13" pos:end="145:69"><name pos:start="145:13" pos:end="145:21">add_frame</name><argument_list pos:start="145:22" pos:end="145:69">(<argument pos:start="145:23" pos:end="145:37"><expr pos:start="145:23" pos:end="145:37"><name pos:start="145:23" pos:end="145:37"><name pos:start="145:23" pos:end="145:23">s</name><operator pos:start="145:24" pos:end="145:25">-&gt;</operator><name pos:start="145:26" pos:end="145:37">delay_frames</name></name></expr></argument>, <argument pos:start="145:40" pos:end="145:48"><expr pos:start="145:40" pos:end="145:48"><name pos:start="145:40" pos:end="145:48">MAX_DELAY</name></expr></argument>, <argument pos:start="145:51" pos:end="145:68"><expr pos:start="145:51" pos:end="145:68"><name pos:start="145:51" pos:end="145:68"><name pos:start="145:51" pos:end="145:51">s</name><operator pos:start="145:52" pos:end="145:53">-&gt;</operator><name pos:start="145:54" pos:end="145:68">current_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="151:9" pos:end="159:9"><if pos:start="151:9" pos:end="159:9">if <condition pos:start="151:12" pos:end="151:26">(<expr pos:start="151:13" pos:end="151:25"><name pos:start="151:13" pos:end="151:25">delayed_frame</name></expr>)</condition> <block pos:start="151:28" pos:end="159:9">{<block_content pos:start="153:13" pos:end="157:41">

            <expr_stmt pos:start="153:13" pos:end="153:64"><expr pos:start="153:13" pos:end="153:63"><name pos:start="153:13" pos:end="153:44"><name pos:start="153:13" pos:end="153:25">delayed_frame</name><operator pos:start="153:26" pos:end="153:27">-&gt;</operator><name pos:start="153:28" pos:end="153:34">avframe</name><operator pos:start="153:35" pos:end="153:35">.</operator><name pos:start="153:36" pos:end="153:44">reference</name></name> <operator pos:start="153:46" pos:end="153:47">^=</operator> <name pos:start="153:49" pos:end="153:63">DELAYED_PIC_REF</name></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:53"><expr pos:start="155:13" pos:end="155:52"><operator pos:start="155:13" pos:end="155:13">*</operator><operator pos:start="155:14" pos:end="155:14">(</operator><name pos:start="155:15" pos:end="155:21">AVFrame</name><operator pos:start="155:22" pos:end="155:22">*</operator><operator pos:start="155:23" pos:end="155:23">)</operator><name pos:start="155:24" pos:end="155:27">data</name> <operator pos:start="155:29" pos:end="155:29">=</operator> <name pos:start="155:31" pos:end="155:52"><name pos:start="155:31" pos:end="155:43">delayed_frame</name><operator pos:start="155:44" pos:end="155:45">-&gt;</operator><name pos:start="155:46" pos:end="155:52">avframe</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:41"><expr pos:start="157:13" pos:end="157:40"><operator pos:start="157:13" pos:end="157:13">*</operator><name pos:start="157:14" pos:end="157:22">data_size</name> <operator pos:start="157:24" pos:end="157:24">=</operator> <sizeof pos:start="157:26" pos:end="157:40">sizeof<argument_list pos:start="157:32" pos:end="157:40">(<argument pos:start="157:33" pos:end="157:39"><expr pos:start="157:33" pos:end="157:39"><name pos:start="157:33" pos:end="157:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="161:7" pos:end="169:5">else if <condition pos:start="161:15" pos:end="161:85">(<expr pos:start="161:16" pos:end="161:84"><name pos:start="161:16" pos:end="161:65"><name pos:start="161:16" pos:end="161:16">s</name><operator pos:start="161:17" pos:end="161:18">-&gt;</operator><name pos:start="161:19" pos:end="161:33">current_picture</name><operator pos:start="161:34" pos:end="161:35">-&gt;</operator><name pos:start="161:36" pos:end="161:42">avframe</name><operator pos:start="161:43" pos:end="161:43">.</operator><name pos:start="161:44" pos:end="161:65">display_picture_number</name></name> <operator pos:start="161:67" pos:end="161:68">==</operator> <name pos:start="161:70" pos:end="161:84"><name pos:start="161:70" pos:end="161:70">s</name><operator pos:start="161:71" pos:end="161:72">-&gt;</operator><name pos:start="161:73" pos:end="161:84">frame_number</name></name></expr>)</condition> <block pos:start="161:87" pos:end="169:5">{<block_content pos:start="165:9" pos:end="167:37">

        <comment type="block" pos:start="163:9" pos:end="163:51">/* The right frame at the right time :-) */</comment>

        <expr_stmt pos:start="165:9" pos:end="165:54"><expr pos:start="165:9" pos:end="165:53"><operator pos:start="165:9" pos:end="165:9">*</operator><operator pos:start="165:10" pos:end="165:10">(</operator><name pos:start="165:11" pos:end="165:17">AVFrame</name><operator pos:start="165:18" pos:end="165:18">*</operator><operator pos:start="165:19" pos:end="165:19">)</operator><name pos:start="165:20" pos:end="165:23">data</name> <operator pos:start="165:25" pos:end="165:25">=</operator> <name pos:start="165:27" pos:end="165:53"><name pos:start="165:27" pos:end="165:27">s</name><operator pos:start="165:28" pos:end="165:29">-&gt;</operator><name pos:start="165:30" pos:end="165:44">current_picture</name><operator pos:start="165:45" pos:end="165:46">-&gt;</operator><name pos:start="165:47" pos:end="165:53">avframe</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:37"><expr pos:start="167:9" pos:end="167:36"><operator pos:start="167:9" pos:end="167:9">*</operator><name pos:start="167:10" pos:end="167:18">data_size</name> <operator pos:start="167:20" pos:end="167:20">=</operator> <sizeof pos:start="167:22" pos:end="167:36">sizeof<argument_list pos:start="167:28" pos:end="167:36">(<argument pos:start="167:29" pos:end="167:35"><expr pos:start="167:29" pos:end="167:35"><name pos:start="167:29" pos:end="167:35">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="173:5" pos:end="175:70"><if pos:start="173:5" pos:end="175:70">if <condition pos:start="173:8" pos:end="173:19">(<expr pos:start="173:9" pos:end="173:18"><operator pos:start="173:9" pos:end="173:9">*</operator><name pos:start="173:10" pos:end="173:18">data_size</name></expr>)</condition><block type="pseudo" pos:start="175:9" pos:end="175:70"><block_content pos:start="175:9" pos:end="175:70">

        <expr_stmt pos:start="175:9" pos:end="175:70"><expr pos:start="175:9" pos:end="175:69"><name pos:start="175:9" pos:end="175:23"><name pos:start="175:9" pos:end="175:9">s</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:23">frame_number</name></name> <operator pos:start="175:25" pos:end="175:25">=</operator> <name pos:start="175:27" pos:end="175:65"><name pos:start="175:27" pos:end="175:33">picture</name><operator pos:start="175:34" pos:end="175:35">-&gt;</operator><name pos:start="175:36" pos:end="175:42">avframe</name><operator pos:start="175:43" pos:end="175:43">.</operator><name pos:start="175:44" pos:end="175:65">display_picture_number</name></name> <operator pos:start="175:67" pos:end="175:67">+</operator> <literal type="number" pos:start="175:69" pos:end="175:69">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="179:5" pos:end="179:19">return <expr pos:start="179:12" pos:end="179:18"><name pos:start="179:12" pos:end="179:18">buf_idx</name></expr>;</return>

</block_content>}</block></function>
</unit>
