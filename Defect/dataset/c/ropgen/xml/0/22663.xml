<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22663.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">check_consistency</name><parameter_list pos:start="1:30" pos:end="1:47">(<parameter pos:start="1:31" pos:end="1:46"><decl pos:start="1:31" pos:end="1:46"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:42">FFFrameQueue</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">fq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="7:5" pos:end="22:0">

<cpp:if pos:start="5:1" pos:end="5:21">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:16">ASSERT_LEVEL</name> <operator pos:start="5:18" pos:end="5:19">&gt;=</operator> <literal type="number" pos:start="5:21" pos:end="5:21">2</literal></expr></cpp:if>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:23">nb_samples</name> <init pos:start="7:25" pos:end="7:27">= <expr pos:start="7:27" pos:end="7:27"><literal type="number" pos:start="7:27" pos:end="7:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:12">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:76"><expr pos:start="13:5" pos:end="13:75"><call pos:start="13:5" pos:end="13:75"><name pos:start="13:5" pos:end="13:14">av_assert0</name><argument_list pos:start="13:15" pos:end="13:75">(<argument pos:start="13:16" pos:end="13:74"><expr pos:start="13:16" pos:end="13:74"><name pos:start="13:16" pos:end="13:25"><name pos:start="13:16" pos:end="13:17">fq</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:25">queued</name></name> <operator pos:start="13:27" pos:end="13:28">==</operator> <name pos:start="13:30" pos:end="13:50"><name pos:start="13:30" pos:end="13:31">fq</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:50">total_frames_head</name></name> <operator pos:start="13:52" pos:end="13:52">-</operator> <name pos:start="13:54" pos:end="13:74"><name pos:start="13:54" pos:end="13:55">fq</name><operator pos:start="13:56" pos:end="13:57">-&gt;</operator><name pos:start="13:58" pos:end="13:74">total_frames_tail</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="15:5" pos:end="17:55">for <control pos:start="15:9" pos:end="15:36">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:31"><expr pos:start="15:17" pos:end="15:30"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:30"><name pos:start="15:21" pos:end="15:22">fq</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:30">queued</name></name></expr>;</condition> <incr pos:start="15:33" pos:end="15:35"><expr pos:start="15:33" pos:end="15:35"><name pos:start="15:33" pos:end="15:33">i</name><operator pos:start="15:34" pos:end="15:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="17:9" pos:end="17:55"><block_content pos:start="17:9" pos:end="17:55">

        <expr_stmt pos:start="17:9" pos:end="17:55"><expr pos:start="17:9" pos:end="17:54"><name pos:start="17:9" pos:end="17:18">nb_samples</name> <operator pos:start="17:20" pos:end="17:21">+=</operator> <call pos:start="17:23" pos:end="17:35"><name pos:start="17:23" pos:end="17:28">bucket</name><argument_list pos:start="17:29" pos:end="17:35">(<argument pos:start="17:30" pos:end="17:31"><expr pos:start="17:30" pos:end="17:31"><name pos:start="17:30" pos:end="17:31">fq</name></expr></argument>, <argument pos:start="17:34" pos:end="17:34"><expr pos:start="17:34" pos:end="17:34"><name pos:start="17:34" pos:end="17:34">i</name></expr></argument>)</argument_list></call><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:54"><name pos:start="17:38" pos:end="17:42">frame</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:54">nb_samples</name></name></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="19:5" pos:end="22:0"><expr pos:start="19:5" pos:end="19:77"><call pos:start="19:5" pos:end="19:77"><name pos:start="19:5" pos:end="19:14">av_assert0</name><argument_list pos:start="19:15" pos:end="19:77">(<argument pos:start="19:16" pos:end="19:76"><expr pos:start="19:16" pos:end="19:76"><name pos:start="19:16" pos:end="19:25">nb_samples</name> <operator pos:start="19:27" pos:end="19:28">==</operator> <name pos:start="19:30" pos:end="19:51"><name pos:start="19:30" pos:end="19:31">fq</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:51">total_samples_head</name></name> <operator pos:start="19:53" pos:end="19:53">-</operator> <name pos:start="19:55" pos:end="19:76"><name pos:start="19:55" pos:end="19:56">fq</name><operator pos:start="19:57" pos:end="19:58">-&gt;</operator><name pos:start="19:59" pos:end="19:76">total_samples_tail</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
