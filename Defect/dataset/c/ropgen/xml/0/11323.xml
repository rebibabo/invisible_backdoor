<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11323.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">sysctl_write</name><parameter_list pos:start="1:25" pos:end="3:39">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:62"><decl pos:start="1:40" pos:end="1:62"><type pos:start="1:40" pos:end="1:62"><name pos:start="1:40" pos:end="1:57">target_phys_addr_t</name></type> <name pos:start="1:59" pos:end="1:62">addr</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:78"><decl pos:start="1:65" pos:end="1:78"><type pos:start="1:65" pos:end="1:78"><name pos:start="1:65" pos:end="1:72">uint64_t</name></type> <name pos:start="1:74" pos:end="1:78">value</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:38"><decl pos:start="3:26" pos:end="3:38"><type pos:start="3:26" pos:end="3:38"><name pos:start="3:26" pos:end="3:33">unsigned</name></type> <name pos:start="3:35" pos:end="3:38">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="141:1">{<block_content pos:start="7:5" pos:end="139:5">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:24">MilkymistSysctlState</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:27">s</name> <init pos:start="7:29" pos:end="7:36">= <expr pos:start="7:31" pos:end="7:36"><name pos:start="7:31" pos:end="7:36">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:53"><expr pos:start="11:5" pos:end="11:52"><call pos:start="11:5" pos:end="11:52"><name pos:start="11:5" pos:end="11:39">trace_milkymist_sysctl_memory_write</name><argument_list pos:start="11:40" pos:end="11:52">(<argument pos:start="11:41" pos:end="11:44"><expr pos:start="11:41" pos:end="11:44"><name pos:start="11:41" pos:end="11:44">addr</name></expr></argument>, <argument pos:start="11:47" pos:end="11:51"><expr pos:start="11:47" pos:end="11:51"><name pos:start="11:47" pos:end="11:51">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:15"><expr pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:8">addr</name> <operator pos:start="15:10" pos:end="15:12">&gt;&gt;=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">2</literal></expr>;</expr_stmt>

    <switch pos:start="17:5" pos:end="139:5">switch <condition pos:start="17:12" pos:end="17:17">(<expr pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:16">addr</name></expr>)</condition> <block pos:start="17:19" pos:end="139:5">{<block_content pos:start="19:5" pos:end="137:14">

    <case pos:start="19:5" pos:end="19:20">case <expr pos:start="19:10" pos:end="19:19"><name pos:start="19:10" pos:end="19:19">R_GPIO_OUT</name></expr>:</case>

    <case pos:start="21:5" pos:end="21:22">case <expr pos:start="21:10" pos:end="21:21"><name pos:start="21:10" pos:end="21:21">R_GPIO_INTEN</name></expr>:</case>

    <case pos:start="23:5" pos:end="23:26">case <expr pos:start="23:10" pos:end="23:25"><name pos:start="23:10" pos:end="23:25">R_TIMER0_COUNTER</name></expr>:</case>

    <case pos:start="25:5" pos:end="25:26">case <expr pos:start="25:10" pos:end="25:25"><name pos:start="25:10" pos:end="25:25">R_TIMER1_COUNTER</name></expr>:</case>

    <case pos:start="27:5" pos:end="27:26">case <expr pos:start="27:10" pos:end="27:25"><name pos:start="27:10" pos:end="27:25">R_DBG_SCRATCHPAD</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:15">regs</name><index pos:start="29:16" pos:end="29:21">[<expr pos:start="29:17" pos:end="29:20"><name pos:start="29:17" pos:end="29:20">addr</name></expr>]</index></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:29">value</name></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:26">case <expr pos:start="33:10" pos:end="33:25"><name pos:start="33:10" pos:end="33:25">R_TIMER0_COMPARE</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:47"><expr pos:start="35:9" pos:end="35:46"><call pos:start="35:9" pos:end="35:46"><name pos:start="35:9" pos:end="35:24">ptimer_set_limit</name><argument_list pos:start="35:25" pos:end="35:46">(<argument pos:start="35:26" pos:end="35:35"><expr pos:start="35:26" pos:end="35:35"><name pos:start="35:26" pos:end="35:35"><name pos:start="35:26" pos:end="35:26">s</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:35">ptimer0</name></name></expr></argument>, <argument pos:start="35:38" pos:end="35:42"><expr pos:start="35:38" pos:end="35:42"><name pos:start="35:38" pos:end="35:42">value</name></expr></argument>, <argument pos:start="35:45" pos:end="35:45"><expr pos:start="35:45" pos:end="35:45"><literal type="number" pos:start="35:45" pos:end="35:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:30"><expr pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:15">regs</name><index pos:start="37:16" pos:end="37:21">[<expr pos:start="37:17" pos:end="37:20"><name pos:start="37:17" pos:end="37:20">addr</name></expr>]</index></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:29">value</name></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:26">case <expr pos:start="41:10" pos:end="41:25"><name pos:start="41:10" pos:end="41:25">R_TIMER1_COMPARE</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:47"><expr pos:start="43:9" pos:end="43:46"><call pos:start="43:9" pos:end="43:46"><name pos:start="43:9" pos:end="43:24">ptimer_set_limit</name><argument_list pos:start="43:25" pos:end="43:46">(<argument pos:start="43:26" pos:end="43:35"><expr pos:start="43:26" pos:end="43:35"><name pos:start="43:26" pos:end="43:35"><name pos:start="43:26" pos:end="43:26">s</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:35">ptimer1</name></name></expr></argument>, <argument pos:start="43:38" pos:end="43:42"><expr pos:start="43:38" pos:end="43:42"><name pos:start="43:38" pos:end="43:42">value</name></expr></argument>, <argument pos:start="43:45" pos:end="43:45"><expr pos:start="43:45" pos:end="43:45"><literal type="number" pos:start="43:45" pos:end="43:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:15">regs</name><index pos:start="45:16" pos:end="45:21">[<expr pos:start="45:17" pos:end="45:20"><name pos:start="45:17" pos:end="45:20">addr</name></expr>]</index></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:29">value</name></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:26">case <expr pos:start="49:10" pos:end="49:25"><name pos:start="49:10" pos:end="49:25">R_TIMER0_CONTROL</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:30"><expr pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:15">regs</name><index pos:start="51:16" pos:end="51:21">[<expr pos:start="51:17" pos:end="51:20"><name pos:start="51:17" pos:end="51:20">addr</name></expr>]</index></name> <operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:29">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="69:9"><if pos:start="53:9" pos:end="63:9">if <condition pos:start="53:12" pos:end="53:52">(<expr pos:start="53:13" pos:end="53:51"><name pos:start="53:13" pos:end="53:37"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:19">regs</name><index pos:start="53:20" pos:end="53:37">[<expr pos:start="53:21" pos:end="53:36"><name pos:start="53:21" pos:end="53:36">R_TIMER0_CONTROL</name></expr>]</index></name> <operator pos:start="53:39" pos:end="53:39">&amp;</operator> <name pos:start="53:41" pos:end="53:51">CTRL_ENABLE</name></expr>)</condition> <block pos:start="53:54" pos:end="63:9">{<block_content pos:start="55:13" pos:end="61:38">

            <expr_stmt pos:start="55:13" pos:end="55:50"><expr pos:start="55:13" pos:end="55:49"><call pos:start="55:13" pos:end="55:49"><name pos:start="55:13" pos:end="55:47">trace_milkymist_sysctl_start_timer0</name><argument_list pos:start="55:48" pos:end="55:49">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="59:75"><expr pos:start="57:13" pos:end="59:74"><call pos:start="57:13" pos:end="59:74"><name pos:start="57:13" pos:end="57:28">ptimer_set_count</name><argument_list pos:start="57:29" pos:end="59:74">(<argument pos:start="57:30" pos:end="57:39"><expr pos:start="57:30" pos:end="57:39"><name pos:start="57:30" pos:end="57:39"><name pos:start="57:30" pos:end="57:30">s</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:39">ptimer0</name></name></expr></argument>,

                    <argument pos:start="59:21" pos:end="59:73"><expr pos:start="59:21" pos:end="59:73"><name pos:start="59:21" pos:end="59:45"><name pos:start="59:21" pos:end="59:21">s</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:27">regs</name><index pos:start="59:28" pos:end="59:45">[<expr pos:start="59:29" pos:end="59:44"><name pos:start="59:29" pos:end="59:44">R_TIMER0_COMPARE</name></expr>]</index></name> <operator pos:start="59:47" pos:end="59:47">-</operator> <name pos:start="59:49" pos:end="59:73"><name pos:start="59:49" pos:end="59:49">s</name><operator pos:start="59:50" pos:end="59:51">-&gt;</operator><name pos:start="59:52" pos:end="59:55">regs</name><index pos:start="59:56" pos:end="59:73">[<expr pos:start="59:57" pos:end="59:72"><name pos:start="59:57" pos:end="59:72">R_TIMER0_COUNTER</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:38"><expr pos:start="61:13" pos:end="61:37"><call pos:start="61:13" pos:end="61:37"><name pos:start="61:13" pos:end="61:22">ptimer_run</name><argument_list pos:start="61:23" pos:end="61:37">(<argument pos:start="61:24" pos:end="61:33"><expr pos:start="61:24" pos:end="61:33"><name pos:start="61:24" pos:end="61:33"><name pos:start="61:24" pos:end="61:24">s</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:33">ptimer0</name></name></expr></argument>, <argument pos:start="61:36" pos:end="61:36"><expr pos:start="61:36" pos:end="61:36"><literal type="number" pos:start="61:36" pos:end="61:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="69:9">else <block pos:start="63:16" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:36">

            <expr_stmt pos:start="65:13" pos:end="65:49"><expr pos:start="65:13" pos:end="65:48"><call pos:start="65:13" pos:end="65:48"><name pos:start="65:13" pos:end="65:46">trace_milkymist_sysctl_stop_timer0</name><argument_list pos:start="65:47" pos:end="65:48">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:36"><expr pos:start="67:13" pos:end="67:35"><call pos:start="67:13" pos:end="67:35"><name pos:start="67:13" pos:end="67:23">ptimer_stop</name><argument_list pos:start="67:24" pos:end="67:35">(<argument pos:start="67:25" pos:end="67:34"><expr pos:start="67:25" pos:end="67:34"><name pos:start="67:25" pos:end="67:34"><name pos:start="67:25" pos:end="67:25">s</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:34">ptimer0</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:26">case <expr pos:start="73:10" pos:end="73:25"><name pos:start="73:10" pos:end="73:25">R_TIMER1_CONTROL</name></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:30"><expr pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:15">regs</name><index pos:start="75:16" pos:end="75:21">[<expr pos:start="75:17" pos:end="75:20"><name pos:start="75:17" pos:end="75:20">addr</name></expr>]</index></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <name pos:start="75:25" pos:end="75:29">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="93:9"><if pos:start="77:9" pos:end="87:9">if <condition pos:start="77:12" pos:end="77:52">(<expr pos:start="77:13" pos:end="77:51"><name pos:start="77:13" pos:end="77:37"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:19">regs</name><index pos:start="77:20" pos:end="77:37">[<expr pos:start="77:21" pos:end="77:36"><name pos:start="77:21" pos:end="77:36">R_TIMER1_CONTROL</name></expr>]</index></name> <operator pos:start="77:39" pos:end="77:39">&amp;</operator> <name pos:start="77:41" pos:end="77:51">CTRL_ENABLE</name></expr>)</condition> <block pos:start="77:54" pos:end="87:9">{<block_content pos:start="79:13" pos:end="85:38">

            <expr_stmt pos:start="79:13" pos:end="79:50"><expr pos:start="79:13" pos:end="79:49"><call pos:start="79:13" pos:end="79:49"><name pos:start="79:13" pos:end="79:47">trace_milkymist_sysctl_start_timer1</name><argument_list pos:start="79:48" pos:end="79:49">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="83:75"><expr pos:start="81:13" pos:end="83:74"><call pos:start="81:13" pos:end="83:74"><name pos:start="81:13" pos:end="81:28">ptimer_set_count</name><argument_list pos:start="81:29" pos:end="83:74">(<argument pos:start="81:30" pos:end="81:39"><expr pos:start="81:30" pos:end="81:39"><name pos:start="81:30" pos:end="81:39"><name pos:start="81:30" pos:end="81:30">s</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:39">ptimer1</name></name></expr></argument>,

                    <argument pos:start="83:21" pos:end="83:73"><expr pos:start="83:21" pos:end="83:73"><name pos:start="83:21" pos:end="83:45"><name pos:start="83:21" pos:end="83:21">s</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:27">regs</name><index pos:start="83:28" pos:end="83:45">[<expr pos:start="83:29" pos:end="83:44"><name pos:start="83:29" pos:end="83:44">R_TIMER1_COMPARE</name></expr>]</index></name> <operator pos:start="83:47" pos:end="83:47">-</operator> <name pos:start="83:49" pos:end="83:73"><name pos:start="83:49" pos:end="83:49">s</name><operator pos:start="83:50" pos:end="83:51">-&gt;</operator><name pos:start="83:52" pos:end="83:55">regs</name><index pos:start="83:56" pos:end="83:73">[<expr pos:start="83:57" pos:end="83:72"><name pos:start="83:57" pos:end="83:72">R_TIMER1_COUNTER</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:38"><expr pos:start="85:13" pos:end="85:37"><call pos:start="85:13" pos:end="85:37"><name pos:start="85:13" pos:end="85:22">ptimer_run</name><argument_list pos:start="85:23" pos:end="85:37">(<argument pos:start="85:24" pos:end="85:33"><expr pos:start="85:24" pos:end="85:33"><name pos:start="85:24" pos:end="85:33"><name pos:start="85:24" pos:end="85:24">s</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:33">ptimer1</name></name></expr></argument>, <argument pos:start="85:36" pos:end="85:36"><expr pos:start="85:36" pos:end="85:36"><literal type="number" pos:start="85:36" pos:end="85:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="87:11" pos:end="93:9">else <block pos:start="87:16" pos:end="93:9">{<block_content pos:start="89:13" pos:end="91:36">

            <expr_stmt pos:start="89:13" pos:end="89:49"><expr pos:start="89:13" pos:end="89:48"><call pos:start="89:13" pos:end="89:48"><name pos:start="89:13" pos:end="89:46">trace_milkymist_sysctl_stop_timer1</name><argument_list pos:start="89:47" pos:end="89:48">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:36"><expr pos:start="91:13" pos:end="91:35"><call pos:start="91:13" pos:end="91:35"><name pos:start="91:13" pos:end="91:23">ptimer_stop</name><argument_list pos:start="91:24" pos:end="91:35">(<argument pos:start="91:25" pos:end="91:34"><expr pos:start="91:25" pos:end="91:34"><name pos:start="91:25" pos:end="91:34"><name pos:start="91:25" pos:end="91:25">s</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:34">ptimer1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:16">case <expr pos:start="97:10" pos:end="97:15"><name pos:start="97:10" pos:end="97:15">R_ICAP</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:36"><expr pos:start="99:9" pos:end="99:35"><call pos:start="99:9" pos:end="99:35"><name pos:start="99:9" pos:end="99:25">sysctl_icap_write</name><argument_list pos:start="99:26" pos:end="99:35">(<argument pos:start="99:27" pos:end="99:27"><expr pos:start="99:27" pos:end="99:27"><name pos:start="99:27" pos:end="99:27">s</name></expr></argument>, <argument pos:start="99:30" pos:end="99:34"><expr pos:start="99:30" pos:end="99:34"><name pos:start="99:30" pos:end="99:34">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:26">case <expr pos:start="103:10" pos:end="103:25"><name pos:start="103:10" pos:end="103:25">R_DBG_WRITE_LOCK</name></expr>:</case>

        <expr_stmt pos:start="105:9" pos:end="105:26"><expr pos:start="105:9" pos:end="105:25"><name pos:start="105:9" pos:end="105:21"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:15">regs</name><index pos:start="105:16" pos:end="105:21">[<expr pos:start="105:17" pos:end="105:20"><name pos:start="105:17" pos:end="105:20">addr</name></expr>]</index></name> <operator pos:start="105:23" pos:end="105:23">=</operator> <literal type="number" pos:start="105:25" pos:end="105:25">1</literal></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    <case pos:start="109:5" pos:end="109:21">case <expr pos:start="109:10" pos:end="109:20"><name pos:start="109:10" pos:end="109:20">R_SYSTEM_ID</name></expr>:</case>

        <expr_stmt pos:start="111:9" pos:end="111:36"><expr pos:start="111:9" pos:end="111:35"><call pos:start="111:9" pos:end="111:35"><name pos:start="111:9" pos:end="111:33">qemu_system_reset_request</name><argument_list pos:start="111:34" pos:end="111:35">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>



    <case pos:start="117:5" pos:end="117:19">case <expr pos:start="117:10" pos:end="117:18"><name pos:start="117:10" pos:end="117:18">R_GPIO_IN</name></expr>:</case>

    <case pos:start="119:5" pos:end="119:25">case <expr pos:start="119:10" pos:end="119:24"><name pos:start="119:10" pos:end="119:24">R_CLK_FREQUENCY</name></expr>:</case>

    <case pos:start="121:5" pos:end="121:24">case <expr pos:start="121:10" pos:end="121:23"><name pos:start="121:10" pos:end="121:23">R_CAPABILITIES</name></expr>:</case>

        <expr_stmt pos:start="123:9" pos:end="125:43"><expr pos:start="123:9" pos:end="125:42"><call pos:start="123:9" pos:end="125:42"><name pos:start="123:9" pos:end="123:20">error_report</name><argument_list pos:start="123:21" pos:end="125:42">(<argument pos:start="123:22" pos:end="125:30"><expr pos:start="123:22" pos:end="125:30"><literal type="string" pos:start="123:22" pos:end="123:71">"milkymist_sysctl: write to read-only register 0x"</literal>

                <name pos:start="125:17" pos:end="125:30">TARGET_FMT_plx</name></expr></argument>, <argument pos:start="125:33" pos:end="125:41"><expr pos:start="125:33" pos:end="125:41"><name pos:start="125:33" pos:end="125:36">addr</name> <operator pos:start="125:38" pos:end="125:39">&lt;&lt;</operator> <literal type="number" pos:start="125:41" pos:end="125:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>



    <default pos:start="131:5" pos:end="131:12">default:</default>

        <expr_stmt pos:start="133:9" pos:end="135:43"><expr pos:start="133:9" pos:end="135:42"><call pos:start="133:9" pos:end="135:42"><name pos:start="133:9" pos:end="133:20">error_report</name><argument_list pos:start="133:21" pos:end="135:42">(<argument pos:start="133:22" pos:end="135:30"><expr pos:start="133:22" pos:end="135:30"><literal type="string" pos:start="133:22" pos:end="133:76">"milkymist_sysctl: write access to unknown register 0x"</literal>

                <name pos:start="135:17" pos:end="135:30">TARGET_FMT_plx</name></expr></argument>, <argument pos:start="135:33" pos:end="135:41"><expr pos:start="135:33" pos:end="135:41"><name pos:start="135:33" pos:end="135:36">addr</name> <operator pos:start="135:38" pos:end="135:39">&lt;&lt;</operator> <literal type="number" pos:start="135:41" pos:end="135:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
