<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9662.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">test_copy</name><parameter_list pos:start="1:22" pos:end="1:59">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><specifier pos:start="1:23" pos:end="1:27">const</specifier> <name pos:start="1:29" pos:end="1:35">AVCodec</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">c1</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:58"><decl pos:start="1:42" pos:end="1:58"><type pos:start="1:42" pos:end="1:58"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:54">AVCodec</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">c2</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:32">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">AVCodecContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:24">ctx1</name></decl>, <decl pos:start="5:27" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:20"><modifier pos:start="5:27" pos:end="5:27">*</modifier></type><name pos:start="5:28" pos:end="5:31">ctx2</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:82"><expr pos:start="7:5" pos:end="7:81"><call pos:start="7:5" pos:end="7:81"><name pos:start="7:5" pos:end="7:10">printf</name><argument_list pos:start="7:11" pos:end="7:81">(<argument pos:start="7:12" pos:end="7:32"><expr pos:start="7:12" pos:end="7:32"><literal type="string" pos:start="7:12" pos:end="7:32">"%s -&gt; %s\nclosed:\n"</literal></expr></argument>, <argument pos:start="7:35" pos:end="7:56"><expr pos:start="7:35" pos:end="7:56"><ternary pos:start="7:35" pos:end="7:56"><condition pos:start="7:35" pos:end="7:38"><expr pos:start="7:35" pos:end="7:36"><name pos:start="7:35" pos:end="7:36">c1</name></expr> ?</condition><then pos:start="7:40" pos:end="7:47"> <expr pos:start="7:40" pos:end="7:47"><name pos:start="7:40" pos:end="7:47"><name pos:start="7:40" pos:end="7:41">c1</name><operator pos:start="7:42" pos:end="7:43">-&gt;</operator><name pos:start="7:44" pos:end="7:47">name</name></name></expr> </then><else pos:start="7:49" pos:end="7:56">: <expr pos:start="7:51" pos:end="7:56"><literal type="string" pos:start="7:51" pos:end="7:56">"NULL"</literal></expr></else></ternary></expr></argument>, <argument pos:start="7:59" pos:end="7:80"><expr pos:start="7:59" pos:end="7:80"><ternary pos:start="7:59" pos:end="7:80"><condition pos:start="7:59" pos:end="7:62"><expr pos:start="7:59" pos:end="7:60"><name pos:start="7:59" pos:end="7:60">c2</name></expr> ?</condition><then pos:start="7:64" pos:end="7:71"> <expr pos:start="7:64" pos:end="7:71"><name pos:start="7:64" pos:end="7:71"><name pos:start="7:64" pos:end="7:65">c2</name><operator pos:start="7:66" pos:end="7:67">-&gt;</operator><name pos:start="7:68" pos:end="7:71">name</name></name></expr> </then><else pos:start="7:73" pos:end="7:80">: <expr pos:start="7:75" pos:end="7:80"><literal type="string" pos:start="7:75" pos:end="7:80">"NULL"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:38"><expr pos:start="9:5" pos:end="9:37"><name pos:start="9:5" pos:end="9:8">ctx1</name> <operator pos:start="9:10" pos:end="9:10">=</operator> <call pos:start="9:12" pos:end="9:37"><name pos:start="9:12" pos:end="9:33">avcodec_alloc_context3</name><argument_list pos:start="9:34" pos:end="9:37">(<argument pos:start="9:35" pos:end="9:36"><expr pos:start="9:35" pos:end="9:36"><name pos:start="9:35" pos:end="9:36">c1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:38"><expr pos:start="11:5" pos:end="11:37"><name pos:start="11:5" pos:end="11:8">ctx2</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="11:37"><name pos:start="11:12" pos:end="11:33">avcodec_alloc_context3</name><argument_list pos:start="11:34" pos:end="11:37">(<argument pos:start="11:35" pos:end="11:36"><expr pos:start="11:35" pos:end="11:36"><name pos:start="11:35" pos:end="11:36">c2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:37"><expr pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:8">ctx1</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:15">width</name></name> <operator pos:start="13:17" pos:end="13:17">=</operator> <name pos:start="13:19" pos:end="13:30"><name pos:start="13:19" pos:end="13:22">ctx1</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:30">height</name></name> <operator pos:start="13:32" pos:end="13:32">=</operator> <literal type="number" pos:start="13:34" pos:end="13:36">128</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:78">(<expr pos:start="15:9" pos:end="15:77"><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:12">ctx2</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:19">codec</name></name> <operator pos:start="15:21" pos:end="15:22">&amp;&amp;</operator> <name pos:start="15:24" pos:end="15:46"><name pos:start="15:24" pos:end="15:27">ctx2</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:34">codec</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:46">priv_class</name></name> <operator pos:start="15:48" pos:end="15:49">&amp;&amp;</operator> <name pos:start="15:51" pos:end="15:77"><name pos:start="15:51" pos:end="15:54">ctx2</name><operator pos:start="15:55" pos:end="15:56">-&gt;</operator><name pos:start="15:57" pos:end="15:61">codec</name><operator pos:start="15:62" pos:end="15:63">-&gt;</operator><name pos:start="15:64" pos:end="15:77">priv_data_size</name></name></expr>)</condition> <block pos:start="15:80" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:76">

        <expr_stmt pos:start="17:9" pos:end="17:53"><expr pos:start="17:9" pos:end="17:52"><call pos:start="17:9" pos:end="17:52"><name pos:start="17:9" pos:end="17:18">av_opt_set</name><argument_list pos:start="17:19" pos:end="17:52">(<argument pos:start="17:20" pos:end="17:34"><expr pos:start="17:20" pos:end="17:34"><name pos:start="17:20" pos:end="17:34"><name pos:start="17:20" pos:end="17:23">ctx2</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:34">priv_data</name></name></expr></argument>, <argument pos:start="17:37" pos:end="17:41"><expr pos:start="17:37" pos:end="17:41"><literal type="string" pos:start="17:37" pos:end="17:41">"num"</literal></expr></argument>, <argument pos:start="17:44" pos:end="17:48"><expr pos:start="17:44" pos:end="17:48"><literal type="string" pos:start="17:44" pos:end="17:48">"667"</literal></expr></argument>, <argument pos:start="17:51" pos:end="17:51"><expr pos:start="17:51" pos:end="17:51"><literal type="number" pos:start="17:51" pos:end="17:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:76"><expr pos:start="19:9" pos:end="19:75"><call pos:start="19:9" pos:end="19:75"><name pos:start="19:9" pos:end="19:18">av_opt_set</name><argument_list pos:start="19:19" pos:end="19:75">(<argument pos:start="19:20" pos:end="19:34"><expr pos:start="19:20" pos:end="19:34"><name pos:start="19:20" pos:end="19:34"><name pos:start="19:20" pos:end="19:23">ctx2</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:34">priv_data</name></name></expr></argument>, <argument pos:start="19:37" pos:end="19:41"><expr pos:start="19:37" pos:end="19:41"><literal type="string" pos:start="19:37" pos:end="19:41">"str"</literal></expr></argument>, <argument pos:start="19:44" pos:end="19:71"><expr pos:start="19:44" pos:end="19:71"><literal type="string" pos:start="19:44" pos:end="19:71">"i'm dest value before copy"</literal></expr></argument>, <argument pos:start="19:74" pos:end="19:74"><expr pos:start="19:74" pos:end="19:74"><literal type="number" pos:start="19:74" pos:end="19:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><call pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:24">avcodec_copy_context</name><argument_list pos:start="23:25" pos:end="23:36">(<argument pos:start="23:26" pos:end="23:29"><expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:29">ctx2</name></expr></argument>, <argument pos:start="23:32" pos:end="23:35"><expr pos:start="23:32" pos:end="23:35"><name pos:start="23:32" pos:end="23:35">ctx1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><call pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:25">test_copy_print_codec</name><argument_list pos:start="25:26" pos:end="25:31">(<argument pos:start="25:27" pos:end="25:30"><expr pos:start="25:27" pos:end="25:30"><name pos:start="25:27" pos:end="25:30">ctx1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><call pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:25">test_copy_print_codec</name><argument_list pos:start="27:26" pos:end="27:31">(<argument pos:start="27:27" pos:end="27:30"><expr pos:start="27:27" pos:end="27:30"><name pos:start="27:27" pos:end="27:30">ctx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="51:5"><if pos:start="29:5" pos:end="51:5">if <condition pos:start="29:8" pos:end="29:20">(<expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:12">ctx1</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:19">codec</name></name></expr>)</condition> <block pos:start="29:22" pos:end="51:5">{<block_content pos:start="31:9" pos:end="49:28">

        <expr_stmt pos:start="31:9" pos:end="31:28"><expr pos:start="31:9" pos:end="31:27"><call pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:14">printf</name><argument_list pos:start="31:15" pos:end="31:27">(<argument pos:start="31:16" pos:end="31:26"><expr pos:start="31:16" pos:end="31:26"><literal type="string" pos:start="31:16" pos:end="31:26">"opened:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:47"><expr pos:start="33:9" pos:end="33:46"><call pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:21">avcodec_open2</name><argument_list pos:start="33:22" pos:end="33:46">(<argument pos:start="33:23" pos:end="33:26"><expr pos:start="33:23" pos:end="33:26"><name pos:start="33:23" pos:end="33:26">ctx1</name></expr></argument>, <argument pos:start="33:29" pos:end="33:39"><expr pos:start="33:29" pos:end="33:39"><name pos:start="33:29" pos:end="33:39"><name pos:start="33:29" pos:end="33:32">ctx1</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:39">codec</name></name></expr></argument>, <argument pos:start="33:42" pos:end="33:45"><expr pos:start="33:42" pos:end="33:45"><name pos:start="33:42" pos:end="33:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:82">(<expr pos:start="35:13" pos:end="35:81"><name pos:start="35:13" pos:end="35:23"><name pos:start="35:13" pos:end="35:16">ctx2</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:23">codec</name></name> <operator pos:start="35:25" pos:end="35:26">&amp;&amp;</operator> <name pos:start="35:28" pos:end="35:50"><name pos:start="35:28" pos:end="35:31">ctx2</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:38">codec</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:50">priv_class</name></name> <operator pos:start="35:52" pos:end="35:53">&amp;&amp;</operator> <name pos:start="35:55" pos:end="35:81"><name pos:start="35:55" pos:end="35:58">ctx2</name><operator pos:start="35:59" pos:end="35:60">-&gt;</operator><name pos:start="35:61" pos:end="35:65">codec</name><operator pos:start="35:66" pos:end="35:67">-&gt;</operator><name pos:start="35:68" pos:end="35:81">priv_data_size</name></name></expr>)</condition> <block pos:start="35:84" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:80">

            <expr_stmt pos:start="37:13" pos:end="37:57"><expr pos:start="37:13" pos:end="37:56"><call pos:start="37:13" pos:end="37:56"><name pos:start="37:13" pos:end="37:22">av_opt_set</name><argument_list pos:start="37:23" pos:end="37:56">(<argument pos:start="37:24" pos:end="37:38"><expr pos:start="37:24" pos:end="37:38"><name pos:start="37:24" pos:end="37:38"><name pos:start="37:24" pos:end="37:27">ctx2</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:38">priv_data</name></name></expr></argument>, <argument pos:start="37:41" pos:end="37:45"><expr pos:start="37:41" pos:end="37:45"><literal type="string" pos:start="37:41" pos:end="37:45">"num"</literal></expr></argument>, <argument pos:start="37:48" pos:end="37:52"><expr pos:start="37:48" pos:end="37:52"><literal type="string" pos:start="37:48" pos:end="37:52">"667"</literal></expr></argument>, <argument pos:start="37:55" pos:end="37:55"><expr pos:start="37:55" pos:end="37:55"><literal type="number" pos:start="37:55" pos:end="37:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:80"><expr pos:start="39:13" pos:end="39:79"><call pos:start="39:13" pos:end="39:79"><name pos:start="39:13" pos:end="39:22">av_opt_set</name><argument_list pos:start="39:23" pos:end="39:79">(<argument pos:start="39:24" pos:end="39:38"><expr pos:start="39:24" pos:end="39:38"><name pos:start="39:24" pos:end="39:38"><name pos:start="39:24" pos:end="39:27">ctx2</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:38">priv_data</name></name></expr></argument>, <argument pos:start="39:41" pos:end="39:45"><expr pos:start="39:41" pos:end="39:45"><literal type="string" pos:start="39:41" pos:end="39:45">"str"</literal></expr></argument>, <argument pos:start="39:48" pos:end="39:75"><expr pos:start="39:48" pos:end="39:75"><literal type="string" pos:start="39:48" pos:end="39:75">"i'm dest value before copy"</literal></expr></argument>, <argument pos:start="39:78" pos:end="39:78"><expr pos:start="39:78" pos:end="39:78"><literal type="number" pos:start="39:78" pos:end="39:78">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:28">avcodec_copy_context</name><argument_list pos:start="43:29" pos:end="43:40">(<argument pos:start="43:30" pos:end="43:33"><expr pos:start="43:30" pos:end="43:33"><name pos:start="43:30" pos:end="43:33">ctx2</name></expr></argument>, <argument pos:start="43:36" pos:end="43:39"><expr pos:start="43:36" pos:end="43:39"><name pos:start="43:36" pos:end="43:39">ctx1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:36"><expr pos:start="45:9" pos:end="45:35"><call pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:29">test_copy_print_codec</name><argument_list pos:start="45:30" pos:end="45:35">(<argument pos:start="45:31" pos:end="45:34"><expr pos:start="45:31" pos:end="45:34"><name pos:start="45:31" pos:end="45:34">ctx1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:36"><expr pos:start="47:9" pos:end="47:35"><call pos:start="47:9" pos:end="47:35"><name pos:start="47:9" pos:end="47:29">test_copy_print_codec</name><argument_list pos:start="47:30" pos:end="47:35">(<argument pos:start="47:31" pos:end="47:34"><expr pos:start="47:31" pos:end="47:34"><name pos:start="47:31" pos:end="47:34">ctx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:28"><expr pos:start="49:9" pos:end="49:27"><call pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:21">avcodec_close</name><argument_list pos:start="49:22" pos:end="49:27">(<argument pos:start="49:23" pos:end="49:26"><expr pos:start="49:23" pos:end="49:26"><name pos:start="49:23" pos:end="49:26">ctx1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:32"><expr pos:start="53:5" pos:end="53:31"><call pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:24">avcodec_free_context</name><argument_list pos:start="53:25" pos:end="53:31">(<argument pos:start="53:26" pos:end="53:30"><expr pos:start="53:26" pos:end="53:30"><operator pos:start="53:26" pos:end="53:26">&amp;</operator><name pos:start="53:27" pos:end="53:30">ctx1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:32"><expr pos:start="55:5" pos:end="55:31"><call pos:start="55:5" pos:end="55:31"><name pos:start="55:5" pos:end="55:24">avcodec_free_context</name><argument_list pos:start="55:25" pos:end="55:31">(<argument pos:start="55:26" pos:end="55:30"><expr pos:start="55:26" pos:end="55:30"><operator pos:start="55:26" pos:end="55:26">&amp;</operator><name pos:start="55:27" pos:end="55:30">ctx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
