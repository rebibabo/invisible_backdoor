<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24248.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">create_filter</name><parameter_list pos:start="1:25" pos:end="3:80">(<parameter pos:start="1:26" pos:end="1:51"><decl pos:start="1:26" pos:end="1:51"><type pos:start="1:26" pos:end="1:51"><name pos:start="1:26" pos:end="1:40">AVFilterContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier><modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:51">filt_ctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:71"><decl pos:start="1:54" pos:end="1:71"><type pos:start="1:54" pos:end="1:71"><name pos:start="1:54" pos:end="1:66">AVFilterGraph</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">ctx</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:82"><decl pos:start="1:74" pos:end="1:82"><type pos:start="1:74" pos:end="1:82"><name pos:start="1:74" pos:end="1:76">int</name></type> <name pos:start="1:78" pos:end="1:82">index</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:46"><decl pos:start="3:26" pos:end="3:46"><type pos:start="3:26" pos:end="3:46"><specifier pos:start="3:26" pos:end="3:30">const</specifier> <name pos:start="3:32" pos:end="3:35">char</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:46">filt_name</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:64"><decl pos:start="3:49" pos:end="3:64"><type pos:start="3:49" pos:end="3:64"><specifier pos:start="3:49" pos:end="3:53">const</specifier> <name pos:start="3:55" pos:end="3:58">char</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:64">args</name></decl></parameter>, <parameter pos:start="3:67" pos:end="3:79"><decl pos:start="3:67" pos:end="3:79"><type pos:start="3:67" pos:end="3:79"><name pos:start="3:67" pos:end="3:70">void</name> <modifier pos:start="3:72" pos:end="3:72">*</modifier></type><name pos:start="3:73" pos:end="3:79">log_ctx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:13">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVFilter</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">filt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:22"><name pos:start="9:10" pos:end="9:18">inst_name</name><index pos:start="9:19" pos:end="9:22">[<expr pos:start="9:20" pos:end="9:21"><literal type="number" pos:start="9:20" pos:end="9:21">30</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:22"><name pos:start="11:10" pos:end="11:17">tmp_args</name><index pos:start="11:18" pos:end="11:22">[<expr pos:start="11:19" pos:end="11:21"><literal type="number" pos:start="11:19" pos:end="11:21">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:77"><expr pos:start="17:5" pos:end="17:76"><call pos:start="17:5" pos:end="17:76"><name pos:start="17:5" pos:end="17:12">snprintf</name><argument_list pos:start="17:13" pos:end="17:76">(<argument pos:start="17:14" pos:end="17:22"><expr pos:start="17:14" pos:end="17:22"><name pos:start="17:14" pos:end="17:22">inst_name</name></expr></argument>, <argument pos:start="17:25" pos:end="17:41"><expr pos:start="17:25" pos:end="17:41"><sizeof pos:start="17:25" pos:end="17:41">sizeof<argument_list pos:start="17:31" pos:end="17:41">(<argument pos:start="17:32" pos:end="17:40"><expr pos:start="17:32" pos:end="17:40"><name pos:start="17:32" pos:end="17:40">inst_name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:44" pos:end="17:57"><expr pos:start="17:44" pos:end="17:57"><literal type="string" pos:start="17:44" pos:end="17:57">"Parsed_%s_%d"</literal></expr></argument>, <argument pos:start="17:60" pos:end="17:68"><expr pos:start="17:60" pos:end="17:68"><name pos:start="17:60" pos:end="17:68">filt_name</name></expr></argument>, <argument pos:start="17:71" pos:end="17:75"><expr pos:start="17:71" pos:end="17:75"><name pos:start="17:71" pos:end="17:75">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:8">filt</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:42"><name pos:start="21:12" pos:end="21:31">avfilter_get_by_name</name><argument_list pos:start="21:32" pos:end="21:42">(<argument pos:start="21:33" pos:end="21:41"><expr pos:start="21:33" pos:end="21:41"><name pos:start="21:33" pos:end="21:41">filt_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:14">(<expr pos:start="25:9" pos:end="25:13"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:13">filt</name></expr>)</condition> <block pos:start="25:16" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:31">

        <expr_stmt pos:start="27:9" pos:end="29:52"><expr pos:start="27:9" pos:end="29:51"><call pos:start="27:9" pos:end="29:51"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="29:51">(<argument pos:start="27:16" pos:end="27:22"><expr pos:start="27:16" pos:end="27:22"><name pos:start="27:16" pos:end="27:22">log_ctx</name></expr></argument>, <argument pos:start="27:25" pos:end="27:36"><expr pos:start="27:25" pos:end="27:36"><name pos:start="27:25" pos:end="27:36">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="29:16" pos:end="29:39"><expr pos:start="29:16" pos:end="29:39"><literal type="string" pos:start="29:16" pos:end="29:39">"No such filter: '%s'\n"</literal></expr></argument>, <argument pos:start="29:42" pos:end="29:50"><expr pos:start="29:42" pos:end="29:50"><name pos:start="29:42" pos:end="29:50">filt_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><call pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:66"><expr pos:start="37:5" pos:end="37:65"><operator pos:start="37:5" pos:end="37:5">*</operator><name pos:start="37:6" pos:end="37:13">filt_ctx</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <call pos:start="37:17" pos:end="37:65"><name pos:start="37:17" pos:end="37:43">avfilter_graph_alloc_filter</name><argument_list pos:start="37:44" pos:end="37:65">(<argument pos:start="37:45" pos:end="37:47"><expr pos:start="37:45" pos:end="37:47"><name pos:start="37:45" pos:end="37:47">ctx</name></expr></argument>, <argument pos:start="37:50" pos:end="37:53"><expr pos:start="37:50" pos:end="37:53"><name pos:start="37:50" pos:end="37:53">filt</name></expr></argument>, <argument pos:start="37:56" pos:end="37:64"><expr pos:start="37:56" pos:end="37:64"><name pos:start="37:56" pos:end="37:64">inst_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:19">(<expr pos:start="39:9" pos:end="39:18"><operator pos:start="39:9" pos:end="39:9">!</operator><operator pos:start="39:10" pos:end="39:10">*</operator><name pos:start="39:11" pos:end="39:18">filt_ctx</name></expr>)</condition> <block pos:start="39:21" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:31">

        <expr_stmt pos:start="41:9" pos:end="43:58"><expr pos:start="41:9" pos:end="43:57"><call pos:start="41:9" pos:end="43:57"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="43:57">(<argument pos:start="41:16" pos:end="41:22"><expr pos:start="41:16" pos:end="41:22"><name pos:start="41:16" pos:end="41:22">log_ctx</name></expr></argument>, <argument pos:start="41:25" pos:end="41:36"><expr pos:start="41:25" pos:end="41:36"><name pos:start="41:25" pos:end="41:36">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="43:16" pos:end="43:45"><expr pos:start="43:16" pos:end="43:45"><literal type="string" pos:start="43:16" pos:end="43:45">"Error creating filter '%s'\n"</literal></expr></argument>, <argument pos:start="43:48" pos:end="43:56"><expr pos:start="43:48" pos:end="43:56"><name pos:start="43:48" pos:end="43:56">filt_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:31">return <expr pos:start="45:16" pos:end="45:30"><call pos:start="45:16" pos:end="45:30"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="61:5"><if pos:start="51:5" pos:end="61:5">if <condition pos:start="51:8" pos:end="53:28">(<expr pos:start="51:9" pos:end="53:27"><operator pos:start="51:9" pos:end="51:9">!</operator><call pos:start="51:10" pos:end="51:35"><name pos:start="51:10" pos:end="51:15">strcmp</name><argument_list pos:start="51:16" pos:end="51:35">(<argument pos:start="51:17" pos:end="51:25"><expr pos:start="51:17" pos:end="51:25"><name pos:start="51:17" pos:end="51:25">filt_name</name></expr></argument>, <argument pos:start="51:28" pos:end="51:34"><expr pos:start="51:28" pos:end="51:34"><literal type="string" pos:start="51:28" pos:end="51:34">"scale"</literal></expr></argument>)</argument_list></call> <operator pos:start="51:37" pos:end="51:38">&amp;&amp;</operator> <name pos:start="51:40" pos:end="51:43">args</name> <operator pos:start="51:45" pos:end="51:46">&amp;&amp;</operator> <operator pos:start="51:48" pos:end="51:48">!</operator><call pos:start="51:49" pos:end="51:69"><name pos:start="51:49" pos:end="51:54">strstr</name><argument_list pos:start="51:55" pos:end="51:69">(<argument pos:start="51:56" pos:end="51:59"><expr pos:start="51:56" pos:end="51:59"><name pos:start="51:56" pos:end="51:59">args</name></expr></argument>, <argument pos:start="51:62" pos:end="51:68"><expr pos:start="51:62" pos:end="51:68"><literal type="string" pos:start="51:62" pos:end="51:68">"flags"</literal></expr></argument>)</argument_list></call> <operator pos:start="51:71" pos:end="51:72">&amp;&amp;</operator>

        <name pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:11">ctx</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:27">scale_sws_opts</name></name></expr>)</condition> <block pos:start="53:30" pos:end="61:5">{<block_content pos:start="55:9" pos:end="59:24">

        <expr_stmt pos:start="55:9" pos:end="57:44"><expr pos:start="55:9" pos:end="57:43"><call pos:start="55:9" pos:end="57:43"><name pos:start="55:9" pos:end="55:16">snprintf</name><argument_list pos:start="55:17" pos:end="57:43">(<argument pos:start="55:18" pos:end="55:25"><expr pos:start="55:18" pos:end="55:25"><name pos:start="55:18" pos:end="55:25">tmp_args</name></expr></argument>, <argument pos:start="55:28" pos:end="55:43"><expr pos:start="55:28" pos:end="55:43"><sizeof pos:start="55:28" pos:end="55:43">sizeof<argument_list pos:start="55:34" pos:end="55:43">(<argument pos:start="55:35" pos:end="55:42"><expr pos:start="55:35" pos:end="55:42"><name pos:start="55:35" pos:end="55:42">tmp_args</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="55:46" pos:end="55:52"><expr pos:start="55:46" pos:end="55:52"><literal type="string" pos:start="55:46" pos:end="55:52">"%s:%s"</literal></expr></argument>,

                 <argument pos:start="57:18" pos:end="57:21"><expr pos:start="57:18" pos:end="57:21"><name pos:start="57:18" pos:end="57:21">args</name></expr></argument>, <argument pos:start="57:24" pos:end="57:42"><expr pos:start="57:24" pos:end="57:42"><name pos:start="57:24" pos:end="57:42"><name pos:start="57:24" pos:end="57:26">ctx</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:42">scale_sws_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:24"><expr pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:12">args</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:23">tmp_args</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:45"><expr pos:start="65:5" pos:end="65:44"><name pos:start="65:5" pos:end="65:7">ret</name> <operator pos:start="65:9" pos:end="65:9">=</operator> <call pos:start="65:11" pos:end="65:44"><name pos:start="65:11" pos:end="65:27">avfilter_init_str</name><argument_list pos:start="65:28" pos:end="65:44">(<argument pos:start="65:29" pos:end="65:37"><expr pos:start="65:29" pos:end="65:37"><operator pos:start="65:29" pos:end="65:29">*</operator><name pos:start="65:30" pos:end="65:37">filt_ctx</name></expr></argument>, <argument pos:start="65:40" pos:end="65:43"><expr pos:start="65:40" pos:end="65:43"><name pos:start="65:40" pos:end="65:43">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="81:5"><if pos:start="67:5" pos:end="81:5">if <condition pos:start="67:8" pos:end="67:16">(<expr pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">&lt;</operator> <literal type="number" pos:start="67:15" pos:end="67:15">0</literal></expr>)</condition> <block pos:start="67:18" pos:end="81:5">{<block_content pos:start="69:9" pos:end="79:19">

        <expr_stmt pos:start="69:9" pos:end="71:60"><expr pos:start="69:9" pos:end="71:59"><call pos:start="69:9" pos:end="71:59"><name pos:start="69:9" pos:end="69:14">av_log</name><argument_list pos:start="69:15" pos:end="71:59">(<argument pos:start="69:16" pos:end="69:22"><expr pos:start="69:16" pos:end="69:22"><name pos:start="69:16" pos:end="69:22">log_ctx</name></expr></argument>, <argument pos:start="69:25" pos:end="69:36"><expr pos:start="69:25" pos:end="69:36"><name pos:start="69:25" pos:end="69:36">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="71:16" pos:end="71:47"><expr pos:start="71:16" pos:end="71:47"><literal type="string" pos:start="71:16" pos:end="71:47">"Error initializing filter '%s'"</literal></expr></argument>, <argument pos:start="71:50" pos:end="71:58"><expr pos:start="71:50" pos:end="71:58"><name pos:start="71:50" pos:end="71:58">filt_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="75:67"><if pos:start="73:9" pos:end="75:67">if <condition pos:start="73:12" pos:end="73:17">(<expr pos:start="73:13" pos:end="73:16"><name pos:start="73:13" pos:end="73:16">args</name></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:67"><block_content pos:start="75:13" pos:end="75:67">

            <expr_stmt pos:start="75:13" pos:end="75:67"><expr pos:start="75:13" pos:end="75:66"><call pos:start="75:13" pos:end="75:66"><name pos:start="75:13" pos:end="75:18">av_log</name><argument_list pos:start="75:19" pos:end="75:66">(<argument pos:start="75:20" pos:end="75:26"><expr pos:start="75:20" pos:end="75:26"><name pos:start="75:20" pos:end="75:26">log_ctx</name></expr></argument>, <argument pos:start="75:29" pos:end="75:40"><expr pos:start="75:29" pos:end="75:40"><name pos:start="75:29" pos:end="75:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:43" pos:end="75:59"><expr pos:start="75:43" pos:end="75:59"><literal type="string" pos:start="75:43" pos:end="75:59">" with args '%s'"</literal></expr></argument>, <argument pos:start="75:62" pos:end="75:65"><expr pos:start="75:62" pos:end="75:65"><name pos:start="75:62" pos:end="75:65">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:44"><expr pos:start="77:9" pos:end="77:43"><call pos:start="77:9" pos:end="77:43"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="77:43">(<argument pos:start="77:16" pos:end="77:22"><expr pos:start="77:16" pos:end="77:22"><name pos:start="77:16" pos:end="77:22">log_ctx</name></expr></argument>, <argument pos:start="77:25" pos:end="77:36"><expr pos:start="77:25" pos:end="77:36"><name pos:start="77:25" pos:end="77:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:39" pos:end="77:42"><expr pos:start="77:39" pos:end="77:42"><literal type="string" pos:start="77:39" pos:end="77:42">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:19">return <expr pos:start="79:16" pos:end="79:18"><name pos:start="79:16" pos:end="79:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
