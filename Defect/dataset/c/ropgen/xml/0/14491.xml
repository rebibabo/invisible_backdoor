<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14491.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">restore_user_regs</name><parameter_list pos:start="1:29" pos:end="3:68">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:40">CPUPPCState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:58"><decl pos:start="3:30" pos:end="3:58"><type pos:start="3:30" pos:end="3:58"><name pos:start="3:30" pos:end="3:51"><name pos:start="3:30" pos:end="3:35">struct</name> <name pos:start="3:37" pos:end="3:51">target_mcontext</name></name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:58">frame</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:67"><decl pos:start="3:61" pos:end="3:67"><type pos:start="3:61" pos:end="3:67"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:67">sig</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="193:1">{<block_content pos:start="7:5" pos:end="191:13">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:24">save_r2</name> <init pos:start="7:26" pos:end="7:28">= <expr pos:start="7:28" pos:end="7:28"><literal type="number" pos:start="7:28" pos:end="7:28">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:20">msr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:20">ccr</name></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:13">(<expr pos:start="19:9" pos:end="19:12"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:12">sig</name></expr>)</condition> <block pos:start="19:15" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:30">

        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:15">save_r2</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <name pos:start="21:19" pos:end="21:29"><name pos:start="21:19" pos:end="21:21">env</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:26">gpr</name><index pos:start="21:27" pos:end="21:29">[<expr pos:start="21:28" pos:end="21:28"><literal type="number" pos:start="21:28" pos:end="21:28">2</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:37">/* Restore general registers.  */</comment>

    <for pos:start="29:5" pos:end="37:5">for <control pos:start="29:9" pos:end="29:46">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:41"><expr pos:start="29:17" pos:end="29:40"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <call pos:start="29:21" pos:end="29:40"><name pos:start="29:21" pos:end="29:30">ARRAY_SIZE</name><argument_list pos:start="29:31" pos:end="29:40">(<argument pos:start="29:32" pos:end="29:39"><expr pos:start="29:32" pos:end="29:39"><name pos:start="29:32" pos:end="29:39"><name pos:start="29:32" pos:end="29:34">env</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:39">gpr</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="29:43" pos:end="29:45"><expr pos:start="29:43" pos:end="29:45"><name pos:start="29:43" pos:end="29:43">i</name><operator pos:start="29:44" pos:end="29:45">++</operator></expr></incr>)</control> <block pos:start="29:48" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:9">

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:57">(<expr pos:start="31:13" pos:end="31:56"><call pos:start="31:13" pos:end="31:56"><name pos:start="31:13" pos:end="31:22">__get_user</name><argument_list pos:start="31:23" pos:end="31:56">(<argument pos:start="31:24" pos:end="31:34"><expr pos:start="31:24" pos:end="31:34"><name pos:start="31:24" pos:end="31:34"><name pos:start="31:24" pos:end="31:26">env</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:31">gpr</name><index pos:start="31:32" pos:end="31:34">[<expr pos:start="31:33" pos:end="31:33"><name pos:start="31:33" pos:end="31:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="31:37" pos:end="31:55"><expr pos:start="31:37" pos:end="31:55"><operator pos:start="31:37" pos:end="31:37">&amp;</operator><name pos:start="31:38" pos:end="31:55"><name pos:start="31:38" pos:end="31:42">frame</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:52">mc_gregs</name><index pos:start="31:53" pos:end="31:55">[<expr pos:start="31:54" pos:end="31:54"><name pos:start="31:54" pos:end="31:54">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:59" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:21">

            <return pos:start="33:13" pos:end="33:21">return <expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="39:5" pos:end="47:17"><if pos:start="39:5" pos:end="47:17">if <condition pos:start="39:8" pos:end="45:65">(<expr pos:start="39:9" pos:end="45:64"><call pos:start="39:9" pos:end="39:61"><name pos:start="39:9" pos:end="39:18">__get_user</name><argument_list pos:start="39:19" pos:end="39:61">(<argument pos:start="39:20" pos:end="39:27"><expr pos:start="39:20" pos:end="39:27"><name pos:start="39:20" pos:end="39:27"><name pos:start="39:20" pos:end="39:22">env</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:27">nip</name></name></expr></argument>, <argument pos:start="39:30" pos:end="39:60"><expr pos:start="39:30" pos:end="39:60"><operator pos:start="39:30" pos:end="39:30">&amp;</operator><name pos:start="39:31" pos:end="39:60"><name pos:start="39:31" pos:end="39:35">frame</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:45">mc_gregs</name><index pos:start="39:46" pos:end="39:60">[<expr pos:start="39:47" pos:end="39:59"><name pos:start="39:47" pos:end="39:59">TARGET_PT_NIP</name></expr>]</index></name></expr></argument>)</argument_list></call>

        <operator pos:start="41:9" pos:end="41:10">||</operator> <call pos:start="41:12" pos:end="41:64"><name pos:start="41:12" pos:end="41:21">__get_user</name><argument_list pos:start="41:22" pos:end="41:64">(<argument pos:start="41:23" pos:end="41:30"><expr pos:start="41:23" pos:end="41:30"><name pos:start="41:23" pos:end="41:30"><name pos:start="41:23" pos:end="41:25">env</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:30">ctr</name></name></expr></argument>, <argument pos:start="41:33" pos:end="41:63"><expr pos:start="41:33" pos:end="41:63"><operator pos:start="41:33" pos:end="41:33">&amp;</operator><name pos:start="41:34" pos:end="41:63"><name pos:start="41:34" pos:end="41:38">frame</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:48">mc_gregs</name><index pos:start="41:49" pos:end="41:63">[<expr pos:start="41:50" pos:end="41:62"><name pos:start="41:50" pos:end="41:62">TARGET_PT_CTR</name></expr>]</index></name></expr></argument>)</argument_list></call>

        <operator pos:start="43:9" pos:end="43:10">||</operator> <call pos:start="43:12" pos:end="43:63"><name pos:start="43:12" pos:end="43:21">__get_user</name><argument_list pos:start="43:22" pos:end="43:63">(<argument pos:start="43:23" pos:end="43:29"><expr pos:start="43:23" pos:end="43:29"><name pos:start="43:23" pos:end="43:29"><name pos:start="43:23" pos:end="43:25">env</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:29">lr</name></name></expr></argument>, <argument pos:start="43:32" pos:end="43:62"><expr pos:start="43:32" pos:end="43:62"><operator pos:start="43:32" pos:end="43:32">&amp;</operator><name pos:start="43:33" pos:end="43:62"><name pos:start="43:33" pos:end="43:37">frame</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:47">mc_gregs</name><index pos:start="43:48" pos:end="43:62">[<expr pos:start="43:49" pos:end="43:61"><name pos:start="43:49" pos:end="43:61">TARGET_PT_LNK</name></expr>]</index></name></expr></argument>)</argument_list></call>

        <operator pos:start="45:9" pos:end="45:10">||</operator> <call pos:start="45:12" pos:end="45:64"><name pos:start="45:12" pos:end="45:21">__get_user</name><argument_list pos:start="45:22" pos:end="45:64">(<argument pos:start="45:23" pos:end="45:30"><expr pos:start="45:23" pos:end="45:30"><name pos:start="45:23" pos:end="45:30"><name pos:start="45:23" pos:end="45:25">env</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:30">xer</name></name></expr></argument>, <argument pos:start="45:33" pos:end="45:63"><expr pos:start="45:33" pos:end="45:63"><operator pos:start="45:33" pos:end="45:33">&amp;</operator><name pos:start="45:34" pos:end="45:63"><name pos:start="45:34" pos:end="45:38">frame</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:48">mc_gregs</name><index pos:start="45:49" pos:end="45:63">[<expr pos:start="45:50" pos:end="45:62"><name pos:start="45:50" pos:end="45:62">TARGET_PT_XER</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:17"><block_content pos:start="47:9" pos:end="47:17">

        <return pos:start="47:9" pos:end="47:17">return <expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="51:17"><if pos:start="49:5" pos:end="51:17">if <condition pos:start="49:8" pos:end="49:57">(<expr pos:start="49:9" pos:end="49:56"><call pos:start="49:9" pos:end="49:56"><name pos:start="49:9" pos:end="49:18">__get_user</name><argument_list pos:start="49:19" pos:end="49:56">(<argument pos:start="49:20" pos:end="49:22"><expr pos:start="49:20" pos:end="49:22"><name pos:start="49:20" pos:end="49:22">ccr</name></expr></argument>, <argument pos:start="49:25" pos:end="49:55"><expr pos:start="49:25" pos:end="49:55"><operator pos:start="49:25" pos:end="49:25">&amp;</operator><name pos:start="49:26" pos:end="49:55"><name pos:start="49:26" pos:end="49:30">frame</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:40">mc_gregs</name><index pos:start="49:41" pos:end="49:55">[<expr pos:start="49:42" pos:end="49:54"><name pos:start="49:42" pos:end="49:54">TARGET_PT_CCR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:17"><block_content pos:start="51:9" pos:end="51:17">

        <return pos:start="51:9" pos:end="51:17">return <expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="55:5" pos:end="59:5">for <control pos:start="55:9" pos:end="55:46">(<init pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:10">i</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>;</init> <condition pos:start="55:17" pos:end="55:41"><expr pos:start="55:17" pos:end="55:40"><name pos:start="55:17" pos:end="55:17">i</name> <operator pos:start="55:19" pos:end="55:19">&lt;</operator> <call pos:start="55:21" pos:end="55:40"><name pos:start="55:21" pos:end="55:30">ARRAY_SIZE</name><argument_list pos:start="55:31" pos:end="55:40">(<argument pos:start="55:32" pos:end="55:39"><expr pos:start="55:32" pos:end="55:39"><name pos:start="55:32" pos:end="55:39"><name pos:start="55:32" pos:end="55:34">env</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:39">crf</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="55:43" pos:end="55:45"><expr pos:start="55:43" pos:end="55:45"><name pos:start="55:43" pos:end="55:43">i</name><operator pos:start="55:44" pos:end="55:45">++</operator></expr></incr>)</control> <block pos:start="55:48" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:58">

        <expr_stmt pos:start="57:9" pos:end="57:58"><expr pos:start="57:9" pos:end="57:57"><name pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:11">env</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:16">crf</name><index pos:start="57:17" pos:end="57:19">[<expr pos:start="57:18" pos:end="57:18"><name pos:start="57:18" pos:end="57:18">i</name></expr>]</index></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <operator pos:start="57:23" pos:end="57:23">(</operator><name pos:start="57:24" pos:end="57:26">ccr</name> <operator pos:start="57:28" pos:end="57:29">&gt;&gt;</operator> <operator pos:start="57:31" pos:end="57:31">(</operator><literal type="number" pos:start="57:32" pos:end="57:35">32</literal> <operator pos:start="57:35" pos:end="57:35">-</operator> <operator pos:start="57:37" pos:end="57:37">(</operator><operator pos:start="57:38" pos:end="57:38">(</operator><name pos:start="57:39" pos:end="57:39">i</name> <operator pos:start="57:41" pos:end="57:41">+</operator> <literal type="number" pos:start="57:43" pos:end="57:43">1</literal><operator pos:start="57:44" pos:end="57:44">)</operator> <operator pos:start="57:46" pos:end="57:46">*</operator> <literal type="number" pos:start="57:48" pos:end="57:48">4</literal><operator pos:start="57:49" pos:end="57:49">)</operator><operator pos:start="57:50" pos:end="57:50">)</operator><operator pos:start="57:51" pos:end="57:51">)</operator> <operator pos:start="57:53" pos:end="57:53">&amp;</operator> <literal type="number" pos:start="57:55" pos:end="57:57">0xf</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:13">(<expr pos:start="63:9" pos:end="63:12"><operator pos:start="63:9" pos:end="63:9">!</operator><name pos:start="63:10" pos:end="63:12">sig</name></expr>)</condition> <block pos:start="63:15" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:30">

        <expr_stmt pos:start="65:9" pos:end="65:30"><expr pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:11">env</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:16">gpr</name><index pos:start="65:17" pos:end="65:19">[<expr pos:start="65:18" pos:end="65:18"><literal type="number" pos:start="65:18" pos:end="65:18">2</literal></expr>]</index></name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:29">save_r2</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="69:5" pos:end="69:23">/* Restore MSR.  */</comment>

    <if_stmt pos:start="71:5" pos:end="73:17"><if pos:start="71:5" pos:end="73:17">if <condition pos:start="71:8" pos:end="71:57">(<expr pos:start="71:9" pos:end="71:56"><call pos:start="71:9" pos:end="71:56"><name pos:start="71:9" pos:end="71:18">__get_user</name><argument_list pos:start="71:19" pos:end="71:56">(<argument pos:start="71:20" pos:end="71:22"><expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">msr</name></expr></argument>, <argument pos:start="71:25" pos:end="71:55"><expr pos:start="71:25" pos:end="71:55"><operator pos:start="71:25" pos:end="71:25">&amp;</operator><name pos:start="71:26" pos:end="71:55"><name pos:start="71:26" pos:end="71:30">frame</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:40">mc_gregs</name><index pos:start="71:41" pos:end="71:55">[<expr pos:start="71:42" pos:end="71:54"><name pos:start="71:42" pos:end="71:54">TARGET_PT_MSR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:17"><block_content pos:start="73:9" pos:end="73:17">

        <return pos:start="73:9" pos:end="73:17">return <expr pos:start="73:16" pos:end="73:16"><literal type="number" pos:start="73:16" pos:end="73:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:75">/* If doing signal return, restore the previous little-endian mode.  */</comment>

    <if_stmt pos:start="79:5" pos:end="81:57"><if pos:start="79:5" pos:end="81:57">if <condition pos:start="79:8" pos:end="79:12">(<expr pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">sig</name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:57"><block_content pos:start="81:9" pos:end="81:57">

        <expr_stmt pos:start="81:9" pos:end="81:57"><expr pos:start="81:9" pos:end="81:56"><name pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:11">env</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:16">msr</name></name> <operator pos:start="81:18" pos:end="81:18">=</operator> <operator pos:start="81:20" pos:end="81:20">(</operator><name pos:start="81:21" pos:end="81:28"><name pos:start="81:21" pos:end="81:23">env</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:28">msr</name></name> <operator pos:start="81:30" pos:end="81:30">&amp;</operator> <operator pos:start="81:32" pos:end="81:32">~</operator><name pos:start="81:33" pos:end="81:38">MSR_LE</name><operator pos:start="81:39" pos:end="81:39">)</operator> <operator pos:start="81:41" pos:end="81:41">|</operator> <operator pos:start="81:43" pos:end="81:43">(</operator><name pos:start="81:44" pos:end="81:46">msr</name> <operator pos:start="81:48" pos:end="81:48">&amp;</operator> <name pos:start="81:50" pos:end="81:55">MSR_LE</name><operator pos:start="81:56" pos:end="81:56">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:50">/* Restore Altivec registers if necessary.  */</comment>

    <if_stmt pos:start="87:5" pos:end="117:5"><if pos:start="87:5" pos:end="117:5">if <condition pos:start="87:8" pos:end="87:39">(<expr pos:start="87:9" pos:end="87:38"><name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:11">env</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:24">insns_flags</name></name> <operator pos:start="87:26" pos:end="87:26">&amp;</operator> <name pos:start="87:28" pos:end="87:38">PPC_ALTIVEC</name></expr>)</condition> <block pos:start="87:41" pos:end="117:5">{<block_content pos:start="89:9" pos:end="115:21">

        <for pos:start="89:9" pos:end="105:9">for <control pos:start="89:13" pos:end="89:50">(<init pos:start="89:14" pos:end="89:19"><expr pos:start="89:14" pos:end="89:18"><name pos:start="89:14" pos:end="89:14">i</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:18">0</literal></expr>;</init> <condition pos:start="89:21" pos:end="89:45"><expr pos:start="89:21" pos:end="89:44"><name pos:start="89:21" pos:end="89:21">i</name> <operator pos:start="89:23" pos:end="89:23">&lt;</operator> <call pos:start="89:25" pos:end="89:44"><name pos:start="89:25" pos:end="89:34">ARRAY_SIZE</name><argument_list pos:start="89:35" pos:end="89:44">(<argument pos:start="89:36" pos:end="89:43"><expr pos:start="89:36" pos:end="89:43"><name pos:start="89:36" pos:end="89:43"><name pos:start="89:36" pos:end="89:38">env</name><operator pos:start="89:39" pos:end="89:40">-&gt;</operator><name pos:start="89:41" pos:end="89:43">avr</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="89:47" pos:end="89:49"><expr pos:start="89:47" pos:end="89:49"><name pos:start="89:47" pos:end="89:47">i</name><operator pos:start="89:48" pos:end="89:49">++</operator></expr></incr>)</control> <block pos:start="89:52" pos:end="105:9">{<block_content pos:start="91:13" pos:end="103:13">

            <decl_stmt pos:start="91:13" pos:end="91:42"><decl pos:start="91:13" pos:end="91:41"><type pos:start="91:13" pos:end="91:23"><name pos:start="91:13" pos:end="91:21">ppc_avr_t</name> <modifier pos:start="91:23" pos:end="91:23">*</modifier></type><name pos:start="91:24" pos:end="91:26">avr</name> <init pos:start="91:28" pos:end="91:41">= <expr pos:start="91:30" pos:end="91:41"><operator pos:start="91:30" pos:end="91:30">&amp;</operator><name pos:start="91:31" pos:end="91:41"><name pos:start="91:31" pos:end="91:33">env</name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:38">avr</name><index pos:start="91:39" pos:end="91:41">[<expr pos:start="91:40" pos:end="91:40"><name pos:start="91:40" pos:end="91:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="93:13" pos:end="93:58"><decl pos:start="93:13" pos:end="93:57"><type pos:start="93:13" pos:end="93:23"><name pos:start="93:13" pos:end="93:21">ppc_avr_t</name> <modifier pos:start="93:23" pos:end="93:23">*</modifier></type><name pos:start="93:24" pos:end="93:27">vreg</name> <init pos:start="93:29" pos:end="93:57">= <expr pos:start="93:31" pos:end="93:57"><operator pos:start="93:31" pos:end="93:31">&amp;</operator><name pos:start="93:32" pos:end="93:57"><name pos:start="93:32" pos:end="93:36">frame</name><operator pos:start="93:37" pos:end="93:38">-&gt;</operator><name pos:start="93:39" pos:end="93:46">mc_vregs</name><operator pos:start="93:47" pos:end="93:47">.</operator><name pos:start="93:48" pos:end="93:54">altivec</name><index pos:start="93:55" pos:end="93:57">[<expr pos:start="93:56" pos:end="93:56"><name pos:start="93:56" pos:end="93:56">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="97:13" pos:end="103:13"><if pos:start="97:13" pos:end="103:13">if <condition pos:start="97:16" pos:end="99:55">(<expr pos:start="97:17" pos:end="99:54"><call pos:start="97:17" pos:end="97:54"><name pos:start="97:17" pos:end="97:26">__get_user</name><argument_list pos:start="97:27" pos:end="97:54">(<argument pos:start="97:28" pos:end="97:38"><expr pos:start="97:28" pos:end="97:38"><name pos:start="97:28" pos:end="97:38"><name pos:start="97:28" pos:end="97:30">avr</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:35">u64</name><index pos:start="97:36" pos:end="97:38">[<expr pos:start="97:37" pos:end="97:37"><literal type="number" pos:start="97:37" pos:end="97:37">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="97:41" pos:end="97:53"><expr pos:start="97:41" pos:end="97:53"><operator pos:start="97:41" pos:end="97:41">&amp;</operator><name pos:start="97:42" pos:end="97:53"><name pos:start="97:42" pos:end="97:45">vreg</name><operator pos:start="97:46" pos:end="97:47">-&gt;</operator><name pos:start="97:48" pos:end="97:50">u64</name><index pos:start="97:51" pos:end="97:53">[<expr pos:start="97:52" pos:end="97:52"><literal type="number" pos:start="97:52" pos:end="97:52">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="97:56" pos:end="97:57">||</operator>

                <call pos:start="99:17" pos:end="99:54"><name pos:start="99:17" pos:end="99:26">__get_user</name><argument_list pos:start="99:27" pos:end="99:54">(<argument pos:start="99:28" pos:end="99:38"><expr pos:start="99:28" pos:end="99:38"><name pos:start="99:28" pos:end="99:38"><name pos:start="99:28" pos:end="99:30">avr</name><operator pos:start="99:31" pos:end="99:32">-&gt;</operator><name pos:start="99:33" pos:end="99:35">u64</name><index pos:start="99:36" pos:end="99:38">[<expr pos:start="99:37" pos:end="99:37"><literal type="number" pos:start="99:37" pos:end="99:37">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="99:41" pos:end="99:53"><expr pos:start="99:41" pos:end="99:53"><operator pos:start="99:41" pos:end="99:41">&amp;</operator><name pos:start="99:42" pos:end="99:53"><name pos:start="99:42" pos:end="99:45">vreg</name><operator pos:start="99:46" pos:end="99:47">-&gt;</operator><name pos:start="99:48" pos:end="99:50">u64</name><index pos:start="99:51" pos:end="99:53">[<expr pos:start="99:52" pos:end="99:52"><literal type="number" pos:start="99:52" pos:end="99:52">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:57" pos:end="103:13">{<block_content pos:start="101:17" pos:end="101:25">

                <return pos:start="101:17" pos:end="101:25">return <expr pos:start="101:24" pos:end="101:24"><literal type="number" pos:start="101:24" pos:end="101:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="107:9" pos:end="109:51">/* Set MSR_VEC in the saved MSR value to indicate that

           frame-&gt;mc_vregs contains valid data.  */</comment>

        <if_stmt pos:start="111:9" pos:end="115:21"><if pos:start="111:9" pos:end="115:21">if <condition pos:start="111:12" pos:end="113:78">(<expr pos:start="111:13" pos:end="113:77"><call pos:start="111:13" pos:end="113:77"><name pos:start="111:13" pos:end="111:22">__get_user</name><argument_list pos:start="111:23" pos:end="113:77">(<argument pos:start="111:24" pos:end="111:43"><expr pos:start="111:24" pos:end="111:43"><name pos:start="111:24" pos:end="111:43"><name pos:start="111:24" pos:end="111:26">env</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:31">spr</name><index pos:start="111:32" pos:end="111:43">[<expr pos:start="111:33" pos:end="111:42"><name pos:start="111:33" pos:end="111:42">SPR_VRSAVE</name></expr>]</index></name></expr></argument>,

                       <argument pos:start="113:24" pos:end="113:76"><expr pos:start="113:24" pos:end="113:76"><operator pos:start="113:24" pos:end="113:24">(</operator><name pos:start="113:25" pos:end="113:36">target_ulong</name> <operator pos:start="113:38" pos:end="113:38">*</operator><operator pos:start="113:39" pos:end="113:39">)</operator><operator pos:start="113:40" pos:end="113:40">(</operator><operator pos:start="113:41" pos:end="113:41">&amp;</operator><name pos:start="113:42" pos:end="113:68"><name pos:start="113:42" pos:end="113:46">frame</name><operator pos:start="113:47" pos:end="113:48">-&gt;</operator><name pos:start="113:49" pos:end="113:56">mc_vregs</name><operator pos:start="113:57" pos:end="113:57">.</operator><name pos:start="113:58" pos:end="113:64">altivec</name><index pos:start="113:65" pos:end="113:68">[<expr pos:start="113:66" pos:end="113:67"><literal type="number" pos:start="113:66" pos:end="113:67">32</literal></expr>]</index></name><operator pos:start="113:69" pos:end="113:69">.</operator><name pos:start="113:70" pos:end="113:75"><name pos:start="113:70" pos:end="113:72">u32</name><index pos:start="113:73" pos:end="113:75">[<expr pos:start="113:74" pos:end="113:74"><literal type="number" pos:start="113:74" pos:end="113:74">3</literal></expr>]</index></name><operator pos:start="113:76" pos:end="113:76">)</operator></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:21"><block_content pos:start="115:13" pos:end="115:21">

            <return pos:start="115:13" pos:end="115:21">return <expr pos:start="115:20" pos:end="115:20"><literal type="number" pos:start="115:20" pos:end="115:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="121:5" pos:end="121:44">/* Restore floating point registers.  */</comment>

    <if_stmt pos:start="123:5" pos:end="143:5"><if pos:start="123:5" pos:end="143:5">if <condition pos:start="123:8" pos:end="123:37">(<expr pos:start="123:9" pos:end="123:36"><name pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:11">env</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:24">insns_flags</name></name> <operator pos:start="123:26" pos:end="123:26">&amp;</operator> <name pos:start="123:28" pos:end="123:36">PPC_FLOAT</name></expr>)</condition> <block pos:start="123:39" pos:end="143:5">{<block_content pos:start="125:9" pos:end="141:38">

        <decl_stmt pos:start="125:9" pos:end="125:23"><decl pos:start="125:9" pos:end="125:22"><type pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:16">uint64_t</name></type> <name pos:start="125:18" pos:end="125:22">fpscr</name></decl>;</decl_stmt>

        <for pos:start="127:9" pos:end="135:9">for <control pos:start="127:13" pos:end="127:50">(<init pos:start="127:14" pos:end="127:19"><expr pos:start="127:14" pos:end="127:18"><name pos:start="127:14" pos:end="127:14">i</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="number" pos:start="127:18" pos:end="127:18">0</literal></expr>;</init> <condition pos:start="127:21" pos:end="127:45"><expr pos:start="127:21" pos:end="127:44"><name pos:start="127:21" pos:end="127:21">i</name> <operator pos:start="127:23" pos:end="127:23">&lt;</operator> <call pos:start="127:25" pos:end="127:44"><name pos:start="127:25" pos:end="127:34">ARRAY_SIZE</name><argument_list pos:start="127:35" pos:end="127:44">(<argument pos:start="127:36" pos:end="127:43"><expr pos:start="127:36" pos:end="127:43"><name pos:start="127:36" pos:end="127:43"><name pos:start="127:36" pos:end="127:38">env</name><operator pos:start="127:39" pos:end="127:40">-&gt;</operator><name pos:start="127:41" pos:end="127:43">fpr</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="127:47" pos:end="127:49"><expr pos:start="127:47" pos:end="127:49"><name pos:start="127:47" pos:end="127:47">i</name><operator pos:start="127:48" pos:end="127:49">++</operator></expr></incr>)</control> <block pos:start="127:52" pos:end="135:9">{<block_content pos:start="129:13" pos:end="133:13">

            <if_stmt pos:start="129:13" pos:end="133:13"><if pos:start="129:13" pos:end="133:13">if <condition pos:start="129:16" pos:end="129:61">(<expr pos:start="129:17" pos:end="129:60"><call pos:start="129:17" pos:end="129:60"><name pos:start="129:17" pos:end="129:26">__get_user</name><argument_list pos:start="129:27" pos:end="129:60">(<argument pos:start="129:28" pos:end="129:38"><expr pos:start="129:28" pos:end="129:38"><name pos:start="129:28" pos:end="129:38"><name pos:start="129:28" pos:end="129:30">env</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:35">fpr</name><index pos:start="129:36" pos:end="129:38">[<expr pos:start="129:37" pos:end="129:37"><name pos:start="129:37" pos:end="129:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="129:41" pos:end="129:59"><expr pos:start="129:41" pos:end="129:59"><operator pos:start="129:41" pos:end="129:41">&amp;</operator><name pos:start="129:42" pos:end="129:59"><name pos:start="129:42" pos:end="129:46">frame</name><operator pos:start="129:47" pos:end="129:48">-&gt;</operator><name pos:start="129:49" pos:end="129:56">mc_fregs</name><index pos:start="129:57" pos:end="129:59">[<expr pos:start="129:58" pos:end="129:58"><name pos:start="129:58" pos:end="129:58">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:63" pos:end="133:13">{<block_content pos:start="131:17" pos:end="131:25">

                <return pos:start="131:17" pos:end="131:25">return <expr pos:start="131:24" pos:end="131:24"><literal type="number" pos:start="131:24" pos:end="131:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="137:9" pos:end="139:21"><if pos:start="137:9" pos:end="139:21">if <condition pos:start="137:12" pos:end="137:52">(<expr pos:start="137:13" pos:end="137:51"><call pos:start="137:13" pos:end="137:51"><name pos:start="137:13" pos:end="137:22">__get_user</name><argument_list pos:start="137:23" pos:end="137:51">(<argument pos:start="137:24" pos:end="137:28"><expr pos:start="137:24" pos:end="137:28"><name pos:start="137:24" pos:end="137:28">fpscr</name></expr></argument>, <argument pos:start="137:31" pos:end="137:50"><expr pos:start="137:31" pos:end="137:50"><operator pos:start="137:31" pos:end="137:31">&amp;</operator><name pos:start="137:32" pos:end="137:50"><name pos:start="137:32" pos:end="137:36">frame</name><operator pos:start="137:37" pos:end="137:38">-&gt;</operator><name pos:start="137:39" pos:end="137:46">mc_fregs</name><index pos:start="137:47" pos:end="137:50">[<expr pos:start="137:48" pos:end="137:49"><literal type="number" pos:start="137:48" pos:end="137:49">32</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:21"><block_content pos:start="139:13" pos:end="139:21">

            <return pos:start="139:13" pos:end="139:21">return <expr pos:start="139:20" pos:end="139:20"><literal type="number" pos:start="139:20" pos:end="139:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:38"><expr pos:start="141:9" pos:end="141:37"><name pos:start="141:9" pos:end="141:18"><name pos:start="141:9" pos:end="141:11">env</name><operator pos:start="141:12" pos:end="141:13">-&gt;</operator><name pos:start="141:14" pos:end="141:18">fpscr</name></name> <operator pos:start="141:20" pos:end="141:20">=</operator> <operator pos:start="141:22" pos:end="141:22">(</operator><name pos:start="141:23" pos:end="141:30">uint32_t</name><operator pos:start="141:31" pos:end="141:31">)</operator> <name pos:start="141:33" pos:end="141:37">fpscr</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="147:5" pos:end="147:68">/* Save SPE registers.  The kernel only saves the high half.  */</comment>

    <if_stmt pos:start="149:5" pos:end="187:5"><if pos:start="149:5" pos:end="187:5">if <condition pos:start="149:8" pos:end="149:35">(<expr pos:start="149:9" pos:end="149:34"><name pos:start="149:9" pos:end="149:24"><name pos:start="149:9" pos:end="149:11">env</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:24">insns_flags</name></name> <operator pos:start="149:26" pos:end="149:26">&amp;</operator> <name pos:start="149:28" pos:end="149:34">PPC_SPE</name></expr>)</condition> <block pos:start="149:37" pos:end="187:5">{<block_content pos:start="153:9" pos:end="185:21">

<cpp:if pos:start="151:1" pos:end="151:25">#<cpp:directive pos:start="151:2" pos:end="151:3">if</cpp:directive> <expr pos:start="151:5" pos:end="151:25"><call pos:start="151:5" pos:end="151:25"><name pos:start="151:5" pos:end="151:11">defined</name><argument_list pos:start="151:12" pos:end="151:25">(<argument pos:start="151:13" pos:end="151:24"><expr pos:start="151:13" pos:end="151:24"><name pos:start="151:13" pos:end="151:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <for pos:start="153:9" pos:end="170:0">for <control pos:start="153:13" pos:end="153:50">(<init pos:start="153:14" pos:end="153:19"><expr pos:start="153:14" pos:end="153:18"><name pos:start="153:14" pos:end="153:14">i</name> <operator pos:start="153:16" pos:end="153:16">=</operator> <literal type="number" pos:start="153:18" pos:end="153:18">0</literal></expr>;</init> <condition pos:start="153:21" pos:end="153:45"><expr pos:start="153:21" pos:end="153:44"><name pos:start="153:21" pos:end="153:21">i</name> <operator pos:start="153:23" pos:end="153:23">&lt;</operator> <call pos:start="153:25" pos:end="153:44"><name pos:start="153:25" pos:end="153:34">ARRAY_SIZE</name><argument_list pos:start="153:35" pos:end="153:44">(<argument pos:start="153:36" pos:end="153:43"><expr pos:start="153:36" pos:end="153:43"><name pos:start="153:36" pos:end="153:43"><name pos:start="153:36" pos:end="153:38">env</name><operator pos:start="153:39" pos:end="153:40">-&gt;</operator><name pos:start="153:41" pos:end="153:43">gpr</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="153:47" pos:end="153:49"><expr pos:start="153:47" pos:end="153:49"><name pos:start="153:47" pos:end="153:47">i</name><operator pos:start="153:48" pos:end="153:49">++</operator></expr></incr>)</control> <block pos:start="153:52" pos:end="170:0">{<block_content pos:start="155:13" pos:end="165:74">

            <decl_stmt pos:start="155:13" pos:end="155:24"><decl pos:start="155:13" pos:end="155:23"><type pos:start="155:13" pos:end="155:20"><name pos:start="155:13" pos:end="155:20">uint32_t</name></type> <name pos:start="155:22" pos:end="155:23">hi</name></decl>;</decl_stmt>



            <if_stmt pos:start="159:13" pos:end="163:13"><if pos:start="159:13" pos:end="163:13">if <condition pos:start="159:16" pos:end="159:56">(<expr pos:start="159:17" pos:end="159:55"><call pos:start="159:17" pos:end="159:55"><name pos:start="159:17" pos:end="159:26">__get_user</name><argument_list pos:start="159:27" pos:end="159:55">(<argument pos:start="159:28" pos:end="159:29"><expr pos:start="159:28" pos:end="159:29"><name pos:start="159:28" pos:end="159:29">hi</name></expr></argument>, <argument pos:start="159:32" pos:end="159:54"><expr pos:start="159:32" pos:end="159:54"><operator pos:start="159:32" pos:end="159:32">&amp;</operator><name pos:start="159:33" pos:end="159:54"><name pos:start="159:33" pos:end="159:37">frame</name><operator pos:start="159:38" pos:end="159:39">-&gt;</operator><name pos:start="159:40" pos:end="159:47">mc_vregs</name><operator pos:start="159:48" pos:end="159:48">.</operator><name pos:start="159:49" pos:end="159:51">spe</name><index pos:start="159:52" pos:end="159:54">[<expr pos:start="159:53" pos:end="159:53"><name pos:start="159:53" pos:end="159:53">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:58" pos:end="163:13">{<block_content pos:start="161:17" pos:end="161:25">

                <return pos:start="161:17" pos:end="161:25">return <expr pos:start="161:24" pos:end="161:24"><literal type="number" pos:start="161:24" pos:end="161:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:74"><expr pos:start="165:13" pos:end="165:73"><name pos:start="165:13" pos:end="165:23"><name pos:start="165:13" pos:end="165:15">env</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:20">gpr</name><index pos:start="165:21" pos:end="165:23">[<expr pos:start="165:22" pos:end="165:22"><name pos:start="165:22" pos:end="165:22">i</name></expr>]</index></name> <operator pos:start="165:25" pos:end="165:25">=</operator> <operator pos:start="165:27" pos:end="165:27">(</operator><operator pos:start="165:28" pos:end="165:28">(</operator><name pos:start="165:29" pos:end="165:36">uint64_t</name><operator pos:start="165:37" pos:end="165:37">)</operator><name pos:start="165:38" pos:end="165:39">hi</name> <operator pos:start="165:41" pos:end="165:42">&lt;&lt;</operator> <literal type="number" pos:start="165:44" pos:end="165:45">32</literal><operator pos:start="165:46" pos:end="165:46">)</operator> <operator pos:start="165:48" pos:end="165:48">|</operator> <operator pos:start="165:50" pos:end="165:50">(</operator><operator pos:start="165:51" pos:end="165:51">(</operator><name pos:start="165:52" pos:end="165:59">uint32_t</name><operator pos:start="165:60" pos:end="165:60">)</operator> <name pos:start="165:62" pos:end="165:72"><name pos:start="165:62" pos:end="165:64">env</name><operator pos:start="165:65" pos:end="165:66">-&gt;</operator><name pos:start="165:67" pos:end="165:69">gpr</name><index pos:start="165:70" pos:end="165:72">[<expr pos:start="165:71" pos:end="165:71"><name pos:start="165:71" pos:end="165:71">i</name></expr>]</index></name><operator pos:start="165:73" pos:end="165:73">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

<cpp:else pos:start="169:1" pos:end="169:5">#<cpp:directive pos:start="169:2" pos:end="169:5">else</cpp:directive></cpp:else>

        <for pos:start="171:9" pos:end="182:0">for <control pos:start="171:13" pos:end="171:51">(<init pos:start="171:14" pos:end="171:19"><expr pos:start="171:14" pos:end="171:18"><name pos:start="171:14" pos:end="171:14">i</name> <operator pos:start="171:16" pos:end="171:16">=</operator> <literal type="number" pos:start="171:18" pos:end="171:18">0</literal></expr>;</init> <condition pos:start="171:21" pos:end="171:46"><expr pos:start="171:21" pos:end="171:45"><name pos:start="171:21" pos:end="171:21">i</name> <operator pos:start="171:23" pos:end="171:23">&lt;</operator> <call pos:start="171:25" pos:end="171:45"><name pos:start="171:25" pos:end="171:34">ARRAY_SIZE</name><argument_list pos:start="171:35" pos:end="171:45">(<argument pos:start="171:36" pos:end="171:44"><expr pos:start="171:36" pos:end="171:44"><name pos:start="171:36" pos:end="171:44"><name pos:start="171:36" pos:end="171:38">env</name><operator pos:start="171:39" pos:end="171:40">-&gt;</operator><name pos:start="171:41" pos:end="171:44">gprh</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="171:48" pos:end="171:50"><expr pos:start="171:48" pos:end="171:50"><name pos:start="171:48" pos:end="171:48">i</name><operator pos:start="171:49" pos:end="171:50">++</operator></expr></incr>)</control> <block pos:start="171:53" pos:end="182:0">{<block_content pos:start="173:13" pos:end="177:13">

            <if_stmt pos:start="173:13" pos:end="177:13"><if pos:start="173:13" pos:end="177:13">if <condition pos:start="173:16" pos:end="173:66">(<expr pos:start="173:17" pos:end="173:65"><call pos:start="173:17" pos:end="173:65"><name pos:start="173:17" pos:end="173:26">__get_user</name><argument_list pos:start="173:27" pos:end="173:65">(<argument pos:start="173:28" pos:end="173:39"><expr pos:start="173:28" pos:end="173:39"><name pos:start="173:28" pos:end="173:39"><name pos:start="173:28" pos:end="173:30">env</name><operator pos:start="173:31" pos:end="173:32">-&gt;</operator><name pos:start="173:33" pos:end="173:36">gprh</name><index pos:start="173:37" pos:end="173:39">[<expr pos:start="173:38" pos:end="173:38"><name pos:start="173:38" pos:end="173:38">i</name></expr>]</index></name></expr></argument>, <argument pos:start="173:42" pos:end="173:64"><expr pos:start="173:42" pos:end="173:64"><operator pos:start="173:42" pos:end="173:42">&amp;</operator><name pos:start="173:43" pos:end="173:64"><name pos:start="173:43" pos:end="173:47">frame</name><operator pos:start="173:48" pos:end="173:49">-&gt;</operator><name pos:start="173:50" pos:end="173:57">mc_vregs</name><operator pos:start="173:58" pos:end="173:58">.</operator><name pos:start="173:59" pos:end="173:61">spe</name><index pos:start="173:62" pos:end="173:64">[<expr pos:start="173:63" pos:end="173:63"><name pos:start="173:63" pos:end="173:63">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="173:68" pos:end="177:13">{<block_content pos:start="175:17" pos:end="175:25">

                <return pos:start="175:17" pos:end="175:25">return <expr pos:start="175:24" pos:end="175:24"><literal type="number" pos:start="175:24" pos:end="175:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

<cpp:endif pos:start="181:1" pos:end="181:6">#<cpp:directive pos:start="181:2" pos:end="181:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="183:9" pos:end="185:21"><if pos:start="183:9" pos:end="185:21">if <condition pos:start="183:12" pos:end="183:64">(<expr pos:start="183:13" pos:end="183:63"><call pos:start="183:13" pos:end="183:63"><name pos:start="183:13" pos:end="183:22">__get_user</name><argument_list pos:start="183:23" pos:end="183:63">(<argument pos:start="183:24" pos:end="183:36"><expr pos:start="183:24" pos:end="183:36"><name pos:start="183:24" pos:end="183:36"><name pos:start="183:24" pos:end="183:26">env</name><operator pos:start="183:27" pos:end="183:28">-&gt;</operator><name pos:start="183:29" pos:end="183:36">spe_fscr</name></name></expr></argument>, <argument pos:start="183:39" pos:end="183:62"><expr pos:start="183:39" pos:end="183:62"><operator pos:start="183:39" pos:end="183:39">&amp;</operator><name pos:start="183:40" pos:end="183:62"><name pos:start="183:40" pos:end="183:44">frame</name><operator pos:start="183:45" pos:end="183:46">-&gt;</operator><name pos:start="183:47" pos:end="183:54">mc_vregs</name><operator pos:start="183:55" pos:end="183:55">.</operator><name pos:start="183:56" pos:end="183:58">spe</name><index pos:start="183:59" pos:end="183:62">[<expr pos:start="183:60" pos:end="183:61"><literal type="number" pos:start="183:60" pos:end="183:61">32</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:21"><block_content pos:start="185:13" pos:end="185:21">

            <return pos:start="185:13" pos:end="185:21">return <expr pos:start="185:20" pos:end="185:20"><literal type="number" pos:start="185:20" pos:end="185:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="191:5" pos:end="191:13">return <expr pos:start="191:12" pos:end="191:12"><literal type="number" pos:start="191:12" pos:end="191:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
