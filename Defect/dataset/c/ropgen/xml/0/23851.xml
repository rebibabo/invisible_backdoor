<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23851.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">blkverify_open</name><parameter_list pos:start="1:26" pos:end="1:80">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:68"><decl pos:start="1:49" pos:end="1:68"><type pos:start="1:49" pos:end="1:68"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:68">filename</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:79"><decl pos:start="1:71" pos:end="1:79"><type pos:start="1:71" pos:end="1:79"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:79">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">BDRVBlkverifyState</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:25">s</name> <init pos:start="5:27" pos:end="5:38">= <expr pos:start="5:29" pos:end="5:38"><name pos:start="5:29" pos:end="5:38"><name pos:start="5:29" pos:end="5:30">bs</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:38">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">raw</name></decl>, <decl pos:start="9:16" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:10"><modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">c</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:37">/* Parse the blkverify: prefix */</comment>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:62">(<expr pos:start="15:9" pos:end="15:61"><call pos:start="15:9" pos:end="15:61"><name pos:start="15:9" pos:end="15:15">strncmp</name><argument_list pos:start="15:16" pos:end="15:61">(<argument pos:start="15:17" pos:end="15:24"><expr pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:24">filename</name></expr></argument>, <argument pos:start="15:27" pos:end="15:38"><expr pos:start="15:27" pos:end="15:38"><literal type="string" pos:start="15:27" pos:end="15:38">"blkverify:"</literal></expr></argument>, <argument pos:start="15:41" pos:end="15:60"><expr pos:start="15:41" pos:end="15:60"><call pos:start="15:41" pos:end="15:60"><name pos:start="15:41" pos:end="15:46">strlen</name><argument_list pos:start="15:47" pos:end="15:60">(<argument pos:start="15:48" pos:end="15:59"><expr pos:start="15:48" pos:end="15:59"><literal type="string" pos:start="15:48" pos:end="15:59">"blkverify:"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:64" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:23">

        <return pos:start="17:9" pos:end="17:23">return <expr pos:start="17:16" pos:end="17:22"><operator pos:start="17:16" pos:end="17:16">-</operator><name pos:start="17:17" pos:end="17:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:12">filename</name> <operator pos:start="21:14" pos:end="21:15">+=</operator> <call pos:start="21:17" pos:end="21:36"><name pos:start="21:17" pos:end="21:22">strlen</name><argument_list pos:start="21:23" pos:end="21:36">(<argument pos:start="21:24" pos:end="21:35"><expr pos:start="21:24" pos:end="21:35"><literal type="string" pos:start="21:24" pos:end="21:35">"blkverify:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:38">/* Parse the raw image filename */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:5">c</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <call pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:14">strchr</name><argument_list pos:start="27:15" pos:end="27:29">(<argument pos:start="27:16" pos:end="27:23"><expr pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:23">filename</name></expr></argument>, <argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><literal type="char" pos:start="27:26" pos:end="27:28">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:18">(<expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:9">c</name> <operator pos:start="29:11" pos:end="29:12">==</operator> <name pos:start="29:14" pos:end="29:17">NULL</name></expr>)</condition> <block pos:start="29:20" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:23">

        <return pos:start="31:9" pos:end="31:23">return <expr pos:start="31:16" pos:end="31:22"><operator pos:start="31:16" pos:end="31:16">-</operator><name pos:start="31:17" pos:end="31:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:7">raw</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:26"><name pos:start="37:11" pos:end="37:16">strdup</name><argument_list pos:start="37:17" pos:end="37:26">(<argument pos:start="37:18" pos:end="37:25"><expr pos:start="37:18" pos:end="37:25"><name pos:start="37:18" pos:end="37:25">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:7">raw</name><index pos:start="39:8" pos:end="39:21">[<expr pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:9">c</name> <operator pos:start="39:11" pos:end="39:11">-</operator> <name pos:start="39:13" pos:end="39:20">filename</name></expr>]</index></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <literal type="char" pos:start="39:25" pos:end="39:28">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:48"><expr pos:start="41:5" pos:end="41:47"><name pos:start="41:5" pos:end="41:7">ret</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:47"><name pos:start="41:11" pos:end="41:24">bdrv_file_open</name><argument_list pos:start="41:25" pos:end="41:47">(<argument pos:start="41:26" pos:end="41:34"><expr pos:start="41:26" pos:end="41:34"><operator pos:start="41:26" pos:end="41:26">&amp;</operator><name pos:start="41:27" pos:end="41:34"><name pos:start="41:27" pos:end="41:28">bs</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:34">file</name></name></expr></argument>, <argument pos:start="41:37" pos:end="41:39"><expr pos:start="41:37" pos:end="41:39"><name pos:start="41:37" pos:end="41:39">raw</name></expr></argument>, <argument pos:start="41:42" pos:end="41:46"><expr pos:start="41:42" pos:end="41:46"><name pos:start="41:42" pos:end="41:46">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:14"><expr pos:start="43:5" pos:end="43:13"><call pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:8">free</name><argument_list pos:start="43:9" pos:end="43:13">(<argument pos:start="43:10" pos:end="43:12"><expr pos:start="43:10" pos:end="43:12"><name pos:start="43:10" pos:end="43:12">raw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:16">(<expr pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">&lt;</operator> <literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>)</condition> <block pos:start="45:18" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:19">

        <return pos:start="47:9" pos:end="47:19">return <expr pos:start="47:16" pos:end="47:18"><name pos:start="47:16" pos:end="47:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:21"><expr pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:12">filename</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <name pos:start="51:16" pos:end="51:16">c</name> <operator pos:start="51:18" pos:end="51:18">+</operator> <literal type="number" pos:start="51:20" pos:end="51:20">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:28">/* Open the test file */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:32"><expr pos:start="57:5" pos:end="57:31"><name pos:start="57:5" pos:end="57:16"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:16">test_file</name></name> <operator pos:start="57:18" pos:end="57:18">=</operator> <call pos:start="57:20" pos:end="57:31"><name pos:start="57:20" pos:end="57:27">bdrv_new</name><argument_list pos:start="57:28" pos:end="57:31">(<argument pos:start="57:29" pos:end="57:30"><expr pos:start="57:29" pos:end="57:30"><literal type="string" pos:start="57:29" pos:end="57:30">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:57"><expr pos:start="59:5" pos:end="59:56"><name pos:start="59:5" pos:end="59:7">ret</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <call pos:start="59:11" pos:end="59:56"><name pos:start="59:11" pos:end="59:19">bdrv_open</name><argument_list pos:start="59:20" pos:end="59:56">(<argument pos:start="59:21" pos:end="59:32"><expr pos:start="59:21" pos:end="59:32"><name pos:start="59:21" pos:end="59:32"><name pos:start="59:21" pos:end="59:21">s</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:32">test_file</name></name></expr></argument>, <argument pos:start="59:35" pos:end="59:42"><expr pos:start="59:35" pos:end="59:42"><name pos:start="59:35" pos:end="59:42">filename</name></expr></argument>, <argument pos:start="59:45" pos:end="59:49"><expr pos:start="59:45" pos:end="59:49"><name pos:start="59:45" pos:end="59:49">flags</name></expr></argument>, <argument pos:start="59:52" pos:end="59:55"><expr pos:start="59:52" pos:end="59:55"><name pos:start="59:52" pos:end="59:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="69:5"><if pos:start="61:5" pos:end="69:5">if <condition pos:start="61:8" pos:end="61:16">(<expr pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">&lt;</operator> <literal type="number" pos:start="61:15" pos:end="61:15">0</literal></expr>)</condition> <block pos:start="61:18" pos:end="69:5">{<block_content pos:start="63:9" pos:end="67:19">

        <expr_stmt pos:start="63:9" pos:end="63:34"><expr pos:start="63:9" pos:end="63:33"><call pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:19">bdrv_delete</name><argument_list pos:start="63:20" pos:end="63:33">(<argument pos:start="63:21" pos:end="63:32"><expr pos:start="63:21" pos:end="63:32"><name pos:start="63:21" pos:end="63:32"><name pos:start="63:21" pos:end="63:21">s</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:32">test_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:28"><expr pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:20">test_file</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:27">NULL</name></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:19">return <expr pos:start="67:16" pos:end="67:18"><name pos:start="67:16" pos:end="67:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
