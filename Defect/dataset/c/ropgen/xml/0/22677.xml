<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22677.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:30">ff_ac3_encode_init</name><parameter_list pos:start="1:31" pos:end="1:53">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:15">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">AC3EncodeContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">s</name> <init pos:start="5:25" pos:end="5:42">= <expr pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:31">avctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:26">frame_size_58</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:12">avctx</name></name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:20">avctx</name></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:50"><expr pos:start="15:5" pos:end="15:49"><name pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:11">eac3</name></name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:29"><name pos:start="15:15" pos:end="15:19">avctx</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:29">codec_id</name></name> <operator pos:start="15:31" pos:end="15:32">==</operator> <name pos:start="15:34" pos:end="15:49">AV_CODEC_ID_EAC3</name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:25"><expr pos:start="19:5" pos:end="19:24"><call pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:22">ff_ac3_common_init</name><argument_list pos:start="19:23" pos:end="19:24">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:30"><expr pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:29"><name pos:start="23:11" pos:end="23:26">validate_options</name><argument_list pos:start="23:27" pos:end="23:29">(<argument pos:start="23:28" pos:end="23:28"><expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:19"><if pos:start="25:5" pos:end="27:19">if <condition pos:start="25:8" pos:end="25:12">(<expr pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">ret</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:19"><block_content pos:start="27:9" pos:end="27:19">

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:55"><expr pos:start="31:5" pos:end="31:54"><name pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:9">avctx</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:21">frame_size</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <name pos:start="31:25" pos:end="31:38">AC3_BLOCK_SIZE</name> <operator pos:start="31:40" pos:end="31:40">*</operator> <name pos:start="31:42" pos:end="31:54"><name pos:start="31:42" pos:end="31:42">s</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:54">num_blocks</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:9">avctx</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:16">delay</name></name>      <operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:38">AC3_BLOCK_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:50"><expr pos:start="37:5" pos:end="37:49"><name pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:21">bitstream_mode</name></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:49"><name pos:start="37:25" pos:end="37:29">avctx</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:49">audio_service_type</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:32"><if pos:start="39:5" pos:end="41:32">if <condition pos:start="39:8" pos:end="39:59">(<expr pos:start="39:9" pos:end="39:58"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:25">bitstream_mode</name></name> <operator pos:start="39:27" pos:end="39:28">==</operator> <name pos:start="39:30" pos:end="39:58">AV_AUDIO_SERVICE_TYPE_KARAOKE</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:32"><block_content pos:start="41:9" pos:end="41:32">

        <expr_stmt pos:start="41:9" pos:end="41:32"><expr pos:start="41:9" pos:end="41:31"><name pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:25">bitstream_mode</name></name> <operator pos:start="41:27" pos:end="41:27">=</operator> <literal type="number" pos:start="41:29" pos:end="41:31">0x7</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:27"><expr pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:19">bits_written</name></name>    <operator pos:start="45:24" pos:end="45:24">=</operator> <literal type="number" pos:start="45:26" pos:end="45:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:27"><expr pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:22">samples_written</name></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <literal type="number" pos:start="47:26" pos:end="47:26">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:57">/* calculate crc_inv for both possible frame sizes */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:79"><expr pos:start="53:5" pos:end="53:78"><name pos:start="53:5" pos:end="53:17">frame_size_58</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <operator pos:start="53:21" pos:end="53:21">(</operator><operator pos:start="53:22" pos:end="53:22">(</operator> <name pos:start="53:24" pos:end="53:36"><name pos:start="53:24" pos:end="53:24">s</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:36">frame_size</name></name>    <operator pos:start="53:41" pos:end="53:42">&gt;&gt;</operator> <literal type="number" pos:start="53:44" pos:end="53:44">2</literal><operator pos:start="53:45" pos:end="53:45">)</operator> <operator pos:start="53:47" pos:end="53:47">+</operator> <operator pos:start="53:49" pos:end="53:49">(</operator> <name pos:start="53:51" pos:end="53:63"><name pos:start="53:51" pos:end="53:51">s</name><operator pos:start="53:52" pos:end="53:53">-&gt;</operator><name pos:start="53:54" pos:end="53:63">frame_size</name></name>    <operator pos:start="53:68" pos:end="53:69">&gt;&gt;</operator> <literal type="number" pos:start="53:71" pos:end="53:71">4</literal><operator pos:start="53:72" pos:end="53:72">)</operator><operator pos:start="53:73" pos:end="53:73">)</operator> <operator pos:start="53:75" pos:end="53:76">&lt;&lt;</operator> <literal type="number" pos:start="53:78" pos:end="53:78">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:86"><expr pos:start="55:5" pos:end="55:85"><name pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:14">crc_inv</name><index pos:start="55:15" pos:end="55:17">[<expr pos:start="55:16" pos:end="55:16"><literal type="number" pos:start="55:16" pos:end="55:16">0</literal></expr>]</index></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <call pos:start="55:21" pos:end="55:85"><name pos:start="55:21" pos:end="55:28">pow_poly</name><argument_list pos:start="55:29" pos:end="55:85">(<argument pos:start="55:30" pos:end="55:46"><expr pos:start="55:30" pos:end="55:46"><operator pos:start="55:30" pos:end="55:30">(</operator><name pos:start="55:31" pos:end="55:40">CRC16_POLY</name> <operator pos:start="55:42" pos:end="55:43">&gt;&gt;</operator> <literal type="number" pos:start="55:45" pos:end="55:45">1</literal><operator pos:start="55:46" pos:end="55:46">)</operator></expr></argument>, <argument pos:start="55:49" pos:end="55:72"><expr pos:start="55:49" pos:end="55:72"><operator pos:start="55:49" pos:end="55:49">(</operator><literal type="number" pos:start="55:50" pos:end="55:50">8</literal> <operator pos:start="55:52" pos:end="55:52">*</operator> <name pos:start="55:54" pos:end="55:66">frame_size_58</name><operator pos:start="55:67" pos:end="55:67">)</operator> <operator pos:start="55:69" pos:end="55:69">-</operator> <literal type="number" pos:start="55:71" pos:end="55:72">16</literal></expr></argument>, <argument pos:start="55:75" pos:end="55:84"><expr pos:start="55:75" pos:end="55:84"><name pos:start="55:75" pos:end="55:84">CRC16_POLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:34">(<expr pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:20">bit_alloc</name><operator pos:start="57:21" pos:end="57:21">.</operator><name pos:start="57:22" pos:end="57:28">sr_code</name></name> <operator pos:start="57:30" pos:end="57:31">==</operator> <literal type="number" pos:start="57:33" pos:end="57:33">1</literal></expr>)</condition> <block pos:start="57:36" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:90">

        <expr_stmt pos:start="59:9" pos:end="59:83"><expr pos:start="59:9" pos:end="59:82"><name pos:start="59:9" pos:end="59:21">frame_size_58</name> <operator pos:start="59:23" pos:end="59:23">=</operator> <operator pos:start="59:25" pos:end="59:25">(</operator><operator pos:start="59:26" pos:end="59:26">(</operator><operator pos:start="59:27" pos:end="59:27">(</operator><name pos:start="59:28" pos:end="59:40"><name pos:start="59:28" pos:end="59:28">s</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:40">frame_size</name></name><operator pos:start="59:41" pos:end="59:41">+</operator><literal type="number" pos:start="59:42" pos:end="59:42">2</literal><operator pos:start="59:43" pos:end="59:43">)</operator> <operator pos:start="59:45" pos:end="59:46">&gt;&gt;</operator> <literal type="number" pos:start="59:48" pos:end="59:48">2</literal><operator pos:start="59:49" pos:end="59:49">)</operator> <operator pos:start="59:51" pos:end="59:51">+</operator> <operator pos:start="59:53" pos:end="59:53">(</operator><operator pos:start="59:54" pos:end="59:54">(</operator><name pos:start="59:55" pos:end="59:67"><name pos:start="59:55" pos:end="59:55">s</name><operator pos:start="59:56" pos:end="59:57">-&gt;</operator><name pos:start="59:58" pos:end="59:67">frame_size</name></name><operator pos:start="59:68" pos:end="59:68">+</operator><literal type="number" pos:start="59:69" pos:end="59:69">2</literal><operator pos:start="59:70" pos:end="59:70">)</operator> <operator pos:start="59:72" pos:end="59:73">&gt;&gt;</operator> <literal type="number" pos:start="59:75" pos:end="59:75">4</literal><operator pos:start="59:76" pos:end="59:76">)</operator><operator pos:start="59:77" pos:end="59:77">)</operator> <operator pos:start="59:79" pos:end="59:80">&lt;&lt;</operator> <literal type="number" pos:start="59:82" pos:end="59:82">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:90"><expr pos:start="61:9" pos:end="61:89"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:18">crc_inv</name><index pos:start="61:19" pos:end="61:21">[<expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">1</literal></expr>]</index></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <call pos:start="61:25" pos:end="61:89"><name pos:start="61:25" pos:end="61:32">pow_poly</name><argument_list pos:start="61:33" pos:end="61:89">(<argument pos:start="61:34" pos:end="61:50"><expr pos:start="61:34" pos:end="61:50"><operator pos:start="61:34" pos:end="61:34">(</operator><name pos:start="61:35" pos:end="61:44">CRC16_POLY</name> <operator pos:start="61:46" pos:end="61:47">&gt;&gt;</operator> <literal type="number" pos:start="61:49" pos:end="61:49">1</literal><operator pos:start="61:50" pos:end="61:50">)</operator></expr></argument>, <argument pos:start="61:53" pos:end="61:76"><expr pos:start="61:53" pos:end="61:76"><operator pos:start="61:53" pos:end="61:53">(</operator><literal type="number" pos:start="61:54" pos:end="61:54">8</literal> <operator pos:start="61:56" pos:end="61:56">*</operator> <name pos:start="61:58" pos:end="61:70">frame_size_58</name><operator pos:start="61:71" pos:end="61:71">)</operator> <operator pos:start="61:73" pos:end="61:73">-</operator> <literal type="number" pos:start="61:75" pos:end="61:76">16</literal></expr></argument>, <argument pos:start="61:79" pos:end="61:88"><expr pos:start="61:79" pos:end="61:88"><name pos:start="61:79" pos:end="61:88">CRC16_POLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:31">/* set function pointers */</comment>

    <if_stmt pos:start="69:5" pos:end="85:5"><if pos:start="69:5" pos:end="77:5">if <condition pos:start="69:8" pos:end="69:51">(<expr pos:start="69:9" pos:end="69:50"><name pos:start="69:9" pos:end="69:32">CONFIG_AC3_FIXED_ENCODER</name> <operator pos:start="69:34" pos:end="69:35">&amp;&amp;</operator> <name pos:start="69:37" pos:end="69:50"><name pos:start="69:37" pos:end="69:37">s</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:50">fixed_point</name></name></expr>)</condition> <block pos:start="69:53" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:79">

        <expr_stmt pos:start="71:9" pos:end="71:64"><expr pos:start="71:9" pos:end="71:63"><name pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:19">mdct_end</name></name>                     <operator pos:start="71:41" pos:end="71:41">=</operator> <name pos:start="71:43" pos:end="71:63">ff_ac3_fixed_mdct_end</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:65"><expr pos:start="73:9" pos:end="73:64"><name pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:20">mdct_init</name></name>                    <operator pos:start="73:41" pos:end="73:41">=</operator> <name pos:start="73:43" pos:end="73:64">ff_ac3_fixed_mdct_init</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:79"><expr pos:start="75:9" pos:end="75:78"><name pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:34">allocate_sample_buffers</name></name>      <operator pos:start="75:41" pos:end="75:41">=</operator> <name pos:start="75:43" pos:end="75:78">ff_ac3_fixed_allocate_sample_buffers</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="77:7" pos:end="85:5">else if <condition pos:start="77:15" pos:end="77:57">(<expr pos:start="77:16" pos:end="77:56"><name pos:start="77:16" pos:end="77:33">CONFIG_AC3_ENCODER</name> <operator pos:start="77:35" pos:end="77:36">||</operator> <name pos:start="77:38" pos:end="77:56">CONFIG_EAC3_ENCODER</name></expr>)</condition> <block pos:start="77:59" pos:end="85:5">{<block_content pos:start="79:9" pos:end="83:79">

        <expr_stmt pos:start="79:9" pos:end="79:64"><expr pos:start="79:9" pos:end="79:63"><name pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:19">mdct_end</name></name>                     <operator pos:start="79:41" pos:end="79:41">=</operator> <name pos:start="79:43" pos:end="79:63">ff_ac3_float_mdct_end</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:65"><expr pos:start="81:9" pos:end="81:64"><name pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:20">mdct_init</name></name>                    <operator pos:start="81:41" pos:end="81:41">=</operator> <name pos:start="81:43" pos:end="81:64">ff_ac3_float_mdct_init</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:79"><expr pos:start="83:9" pos:end="83:78"><name pos:start="83:9" pos:end="83:34"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:34">allocate_sample_buffers</name></name>      <operator pos:start="83:41" pos:end="83:41">=</operator> <name pos:start="83:43" pos:end="83:78">ff_ac3_float_allocate_sample_buffers</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="93:57"><if pos:start="87:5" pos:end="89:61">if <condition pos:start="87:8" pos:end="87:39">(<expr pos:start="87:9" pos:end="87:38"><name pos:start="87:9" pos:end="87:27">CONFIG_EAC3_ENCODER</name> <operator pos:start="87:29" pos:end="87:30">&amp;&amp;</operator> <name pos:start="87:32" pos:end="87:38"><name pos:start="87:32" pos:end="87:32">s</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:38">eac3</name></name></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:61"><block_content pos:start="89:9" pos:end="89:61">

        <expr_stmt pos:start="89:9" pos:end="89:61"><expr pos:start="89:9" pos:end="89:60"><name pos:start="89:9" pos:end="89:30"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:30">output_frame_header</name></name> <operator pos:start="89:32" pos:end="89:32">=</operator> <name pos:start="89:34" pos:end="89:60">ff_eac3_output_frame_header</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="91:5" pos:end="93:57">else<block type="pseudo" pos:start="93:9" pos:end="93:57"><block_content pos:start="93:9" pos:end="93:57">

        <expr_stmt pos:start="93:9" pos:end="93:57"><expr pos:start="93:9" pos:end="93:56"><name pos:start="93:9" pos:end="93:30"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:30">output_frame_header</name></name> <operator pos:start="93:32" pos:end="93:32">=</operator> <name pos:start="93:34" pos:end="93:56">ac3_output_frame_header</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:21"><expr pos:start="97:5" pos:end="97:20"><call pos:start="97:5" pos:end="97:20"><name pos:start="97:5" pos:end="97:17">set_bandwidth</name><argument_list pos:start="97:18" pos:end="97:20">(<argument pos:start="97:19" pos:end="97:19"><expr pos:start="97:19" pos:end="97:19"><name pos:start="97:19" pos:end="97:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:21"><expr pos:start="101:5" pos:end="101:20"><call pos:start="101:5" pos:end="101:20"><name pos:start="101:5" pos:end="101:17">exponent_init</name><argument_list pos:start="101:18" pos:end="101:20">(<argument pos:start="101:19" pos:end="101:19"><expr pos:start="101:19" pos:end="101:19"><name pos:start="101:19" pos:end="101:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:22"><expr pos:start="105:5" pos:end="105:21"><call pos:start="105:5" pos:end="105:21"><name pos:start="105:5" pos:end="105:18">bit_alloc_init</name><argument_list pos:start="105:19" pos:end="105:21">(<argument pos:start="105:20" pos:end="105:20"><expr pos:start="105:20" pos:end="105:20"><name pos:start="105:20" pos:end="105:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:26"><expr pos:start="109:5" pos:end="109:25"><name pos:start="109:5" pos:end="109:7">ret</name> <operator pos:start="109:9" pos:end="109:9">=</operator> <call pos:start="109:11" pos:end="109:25"><name pos:start="109:11" pos:end="109:22"><name pos:start="109:11" pos:end="109:11">s</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:22">mdct_init</name></name><argument_list pos:start="109:23" pos:end="109:25">(<argument pos:start="109:24" pos:end="109:24"><expr pos:start="109:24" pos:end="109:24"><name pos:start="109:24" pos:end="109:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="113:23"><if pos:start="111:5" pos:end="113:23">if <condition pos:start="111:8" pos:end="111:12">(<expr pos:start="111:9" pos:end="111:11"><name pos:start="111:9" pos:end="111:11">ret</name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:23"><block_content pos:start="113:9" pos:end="113:23">

        <goto pos:start="113:9" pos:end="113:23">goto <name pos:start="113:14" pos:end="113:22">init_fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:30"><expr pos:start="117:5" pos:end="117:29"><name pos:start="117:5" pos:end="117:7">ret</name> <operator pos:start="117:9" pos:end="117:9">=</operator> <call pos:start="117:11" pos:end="117:29"><name pos:start="117:11" pos:end="117:26">allocate_buffers</name><argument_list pos:start="117:27" pos:end="117:29">(<argument pos:start="117:28" pos:end="117:28"><expr pos:start="117:28" pos:end="117:28"><name pos:start="117:28" pos:end="117:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="121:23"><if pos:start="119:5" pos:end="121:23">if <condition pos:start="119:8" pos:end="119:12">(<expr pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:11">ret</name></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:23"><block_content pos:start="121:9" pos:end="121:23">

        <goto pos:start="121:9" pos:end="121:23">goto <name pos:start="121:14" pos:end="121:22">init_fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:31"><expr pos:start="125:5" pos:end="125:30"><call pos:start="125:5" pos:end="125:30"><name pos:start="125:5" pos:end="125:20">ff_audiodsp_init</name><argument_list pos:start="125:21" pos:end="125:30">(<argument pos:start="125:22" pos:end="125:29"><expr pos:start="125:22" pos:end="125:29"><operator pos:start="125:22" pos:end="125:22">&amp;</operator><name pos:start="125:23" pos:end="125:29"><name pos:start="125:23" pos:end="125:23">s</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:29">adsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:36"><expr pos:start="127:5" pos:end="127:35"><call pos:start="127:5" pos:end="127:35"><name pos:start="127:5" pos:end="127:18">ff_me_cmp_init</name><argument_list pos:start="127:19" pos:end="127:35">(<argument pos:start="127:20" pos:end="127:27"><expr pos:start="127:20" pos:end="127:27"><operator pos:start="127:20" pos:end="127:20">&amp;</operator><name pos:start="127:21" pos:end="127:27"><name pos:start="127:21" pos:end="127:21">s</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:27">mecc</name></name></expr></argument>, <argument pos:start="127:30" pos:end="127:34"><expr pos:start="127:30" pos:end="127:34"><name pos:start="127:30" pos:end="127:34">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:67"><expr pos:start="129:5" pos:end="129:66"><call pos:start="129:5" pos:end="129:66"><name pos:start="129:5" pos:end="129:18">ff_ac3dsp_init</name><argument_list pos:start="129:19" pos:end="129:66">(<argument pos:start="129:20" pos:end="129:29"><expr pos:start="129:20" pos:end="129:29"><operator pos:start="129:20" pos:end="129:20">&amp;</operator><name pos:start="129:21" pos:end="129:29"><name pos:start="129:21" pos:end="129:21">s</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:29">ac3dsp</name></name></expr></argument>, <argument pos:start="129:32" pos:end="129:65"><expr pos:start="129:32" pos:end="129:65"><name pos:start="129:32" pos:end="129:43"><name pos:start="129:32" pos:end="129:36">avctx</name><operator pos:start="129:37" pos:end="129:38">-&gt;</operator><name pos:start="129:39" pos:end="129:43">flags</name></name> <operator pos:start="129:45" pos:end="129:45">&amp;</operator> <name pos:start="129:47" pos:end="129:65">CODEC_FLAG_BITEXACT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:22"><expr pos:start="133:5" pos:end="133:21"><call pos:start="133:5" pos:end="133:21"><name pos:start="133:5" pos:end="133:18">dprint_options</name><argument_list pos:start="133:19" pos:end="133:21">(<argument pos:start="133:20" pos:end="133:20"><expr pos:start="133:20" pos:end="133:20"><name pos:start="133:20" pos:end="133:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="137:5" pos:end="137:13">return <expr pos:start="137:12" pos:end="137:12"><literal type="number" pos:start="137:12" pos:end="137:12">0</literal></expr>;</return>

<label pos:start="139:1" pos:end="139:10"><name pos:start="139:1" pos:end="139:9">init_fail</name>:</label>

    <expr_stmt pos:start="141:5" pos:end="141:31"><expr pos:start="141:5" pos:end="141:30"><call pos:start="141:5" pos:end="141:30"><name pos:start="141:5" pos:end="141:23">ff_ac3_encode_close</name><argument_list pos:start="141:24" pos:end="141:30">(<argument pos:start="141:25" pos:end="141:29"><expr pos:start="141:25" pos:end="141:29"><name pos:start="141:25" pos:end="141:29">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="143:5" pos:end="143:15">return <expr pos:start="143:12" pos:end="143:14"><name pos:start="143:12" pos:end="143:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
