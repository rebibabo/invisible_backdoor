<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10378.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">palmte_onoff_gpios</name><parameter_list pos:start="1:31" pos:end="1:65">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:53"><decl pos:start="1:46" pos:end="1:53"><type pos:start="1:46" pos:end="1:53"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:53">line</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:64"><decl pos:start="1:56" pos:end="1:64"><type pos:start="1:56" pos:end="1:64"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:64">level</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <switch pos:start="5:5" pos:end="49:5">switch <condition pos:start="5:12" pos:end="5:17">(<expr pos:start="5:13" pos:end="5:16"><name pos:start="5:13" pos:end="5:16">line</name></expr>)</condition> <block pos:start="5:19" pos:end="49:5">{<block_content pos:start="7:5" pos:end="47:14">

    <case pos:start="7:5" pos:end="7:11">case <expr pos:start="7:10" pos:end="7:10"><literal type="number" pos:start="7:10" pos:end="7:10">0</literal></expr>:</case>

        <expr_stmt pos:start="9:9" pos:end="11:60"><expr pos:start="9:9" pos:end="11:59"><call pos:start="9:9" pos:end="11:59"><name pos:start="9:9" pos:end="9:14">printf</name><argument_list pos:start="9:15" pos:end="11:59">(<argument pos:start="9:16" pos:end="9:54"><expr pos:start="9:16" pos:end="9:54"><literal type="string" pos:start="9:16" pos:end="9:54">"%s: current to MMC/SD card %sabled.\n"</literal></expr></argument>,

                        <argument pos:start="11:25" pos:end="11:36"><expr pos:start="11:25" pos:end="11:36"><name pos:start="11:25" pos:end="11:36">__FUNCTION__</name></expr></argument>, <argument pos:start="11:39" pos:end="11:58"><expr pos:start="11:39" pos:end="11:58"><ternary pos:start="11:39" pos:end="11:58"><condition pos:start="11:39" pos:end="11:45"><expr pos:start="11:39" pos:end="11:43"><name pos:start="11:39" pos:end="11:43">level</name></expr> ?</condition><then pos:start="11:47" pos:end="11:51"> <expr pos:start="11:47" pos:end="11:51"><literal type="string" pos:start="11:47" pos:end="11:51">"dis"</literal></expr> </then><else pos:start="11:53" pos:end="11:58">: <expr pos:start="11:55" pos:end="11:58"><literal type="string" pos:start="11:55" pos:end="11:58">"en"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="13:9" pos:end="13:14">break;</break>

    <case pos:start="15:5" pos:end="15:11">case <expr pos:start="15:10" pos:end="15:10"><literal type="number" pos:start="15:10" pos:end="15:10">1</literal></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="19:61"><expr pos:start="17:9" pos:end="19:60"><call pos:start="17:9" pos:end="19:60"><name pos:start="17:9" pos:end="17:14">printf</name><argument_list pos:start="17:15" pos:end="19:60">(<argument pos:start="17:16" pos:end="17:53"><expr pos:start="17:16" pos:end="17:53"><literal type="string" pos:start="17:16" pos:end="17:53">"%s: internal speaker amplifier %s.\n"</literal></expr></argument>,

                        <argument pos:start="19:25" pos:end="19:36"><expr pos:start="19:25" pos:end="19:36"><name pos:start="19:25" pos:end="19:36">__FUNCTION__</name></expr></argument>, <argument pos:start="19:39" pos:end="19:59"><expr pos:start="19:39" pos:end="19:59"><ternary pos:start="19:39" pos:end="19:59"><condition pos:start="19:39" pos:end="19:45"><expr pos:start="19:39" pos:end="19:43"><name pos:start="19:39" pos:end="19:43">level</name></expr> ?</condition><then pos:start="19:47" pos:end="19:52"> <expr pos:start="19:47" pos:end="19:52"><literal type="string" pos:start="19:47" pos:end="19:52">"down"</literal></expr> </then><else pos:start="19:54" pos:end="19:59">: <expr pos:start="19:56" pos:end="19:59"><literal type="string" pos:start="19:56" pos:end="19:59">"on"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>



    <comment type="block" pos:start="25:5" pos:end="25:73">/* These LCD &amp; Audio output signals have not been identified yet.  */</comment>

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">2</literal></expr>:</case>

    <case pos:start="29:5" pos:end="29:11">case <expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">3</literal></expr>:</case>

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">4</literal></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="35:72"><expr pos:start="33:9" pos:end="35:71"><call pos:start="33:9" pos:end="35:71"><name pos:start="33:9" pos:end="33:14">printf</name><argument_list pos:start="33:15" pos:end="35:71">(<argument pos:start="33:16" pos:end="33:37"><expr pos:start="33:16" pos:end="33:37"><literal type="string" pos:start="33:16" pos:end="33:37">"%s: LCD GPIO%i %s.\n"</literal></expr></argument>,

                        <argument pos:start="35:25" pos:end="35:36"><expr pos:start="35:25" pos:end="35:36"><name pos:start="35:25" pos:end="35:36">__FUNCTION__</name></expr></argument>, <argument pos:start="35:39" pos:end="35:46"><expr pos:start="35:39" pos:end="35:46"><name pos:start="35:39" pos:end="35:42">line</name> <operator pos:start="35:44" pos:end="35:44">-</operator> <literal type="number" pos:start="35:46" pos:end="35:46">1</literal></expr></argument>, <argument pos:start="35:49" pos:end="35:70"><expr pos:start="35:49" pos:end="35:70"><ternary pos:start="35:49" pos:end="35:70"><condition pos:start="35:49" pos:end="35:55"><expr pos:start="35:49" pos:end="35:53"><name pos:start="35:49" pos:end="35:53">level</name></expr> ?</condition><then pos:start="35:57" pos:end="35:62"> <expr pos:start="35:57" pos:end="35:62"><literal type="string" pos:start="35:57" pos:end="35:62">"high"</literal></expr> </then><else pos:start="35:64" pos:end="35:70">: <expr pos:start="35:66" pos:end="35:70"><literal type="string" pos:start="35:66" pos:end="35:70">"low"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:11">case <expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">5</literal></expr>:</case>

    <case pos:start="41:5" pos:end="41:11">case <expr pos:start="41:10" pos:end="41:10"><literal type="number" pos:start="41:10" pos:end="41:10">6</literal></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="45:72"><expr pos:start="43:9" pos:end="45:71"><call pos:start="43:9" pos:end="45:71"><name pos:start="43:9" pos:end="43:14">printf</name><argument_list pos:start="43:15" pos:end="45:71">(<argument pos:start="43:16" pos:end="43:39"><expr pos:start="43:16" pos:end="43:39"><literal type="string" pos:start="43:16" pos:end="43:39">"%s: Audio GPIO%i %s.\n"</literal></expr></argument>,

                        <argument pos:start="45:25" pos:end="45:36"><expr pos:start="45:25" pos:end="45:36"><name pos:start="45:25" pos:end="45:36">__FUNCTION__</name></expr></argument>, <argument pos:start="45:39" pos:end="45:46"><expr pos:start="45:39" pos:end="45:46"><name pos:start="45:39" pos:end="45:42">line</name> <operator pos:start="45:44" pos:end="45:44">-</operator> <literal type="number" pos:start="45:46" pos:end="45:46">4</literal></expr></argument>, <argument pos:start="45:49" pos:end="45:70"><expr pos:start="45:49" pos:end="45:70"><ternary pos:start="45:49" pos:end="45:70"><condition pos:start="45:49" pos:end="45:55"><expr pos:start="45:49" pos:end="45:53"><name pos:start="45:49" pos:end="45:53">level</name></expr> ?</condition><then pos:start="45:57" pos:end="45:62"> <expr pos:start="45:57" pos:end="45:62"><literal type="string" pos:start="45:57" pos:end="45:62">"high"</literal></expr> </then><else pos:start="45:64" pos:end="45:70">: <expr pos:start="45:66" pos:end="45:70"><literal type="string" pos:start="45:66" pos:end="45:70">"low"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
