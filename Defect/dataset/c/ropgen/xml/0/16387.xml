<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16387.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">bt_hci_done</name><parameter_list pos:start="1:24" pos:end="1:45">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:30">struct</name> <name pos:start="1:32" pos:end="1:38">HCIInfo</name></name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">info</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:16">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:19">bt_hci_s</name></name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">hci</name> <init pos:start="5:26" pos:end="5:46">= <expr pos:start="5:28" pos:end="5:46"><call pos:start="5:28" pos:end="5:46"><name pos:start="5:28" pos:end="5:40">hci_from_info</name><argument_list pos:start="5:41" pos:end="5:46">(<argument pos:start="5:42" pos:end="5:45"><expr pos:start="5:42" pos:end="5:45"><name pos:start="5:42" pos:end="5:45">info</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">handle</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><call pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:18">bt_device_done</name><argument_list pos:start="11:19" pos:end="11:32">(<argument pos:start="11:20" pos:end="11:31"><expr pos:start="11:20" pos:end="11:31"><operator pos:start="11:20" pos:end="11:20">&amp;</operator><name pos:start="11:21" pos:end="11:31"><name pos:start="11:21" pos:end="11:23">hci</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:31">device</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="17:46"><if pos:start="15:5" pos:end="17:46">if <condition pos:start="15:8" pos:end="15:29">(<expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:11">hci</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:19">device</name><operator pos:start="15:20" pos:end="15:20">.</operator><name pos:start="15:21" pos:end="15:28">lmp_name</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:46"><block_content pos:start="17:9" pos:end="17:46">

        <expr_stmt pos:start="17:9" pos:end="17:46"><expr pos:start="17:9" pos:end="17:45"><call pos:start="17:9" pos:end="17:45"><name pos:start="17:9" pos:end="17:14">g_free</name><argument_list pos:start="17:15" pos:end="17:45">(<argument pos:start="17:16" pos:end="17:44"><expr pos:start="17:16" pos:end="17:44"><operator pos:start="17:16" pos:end="17:16">(</operator><name pos:start="17:17" pos:end="17:20">void</name> <operator pos:start="17:22" pos:end="17:22">*</operator><operator pos:start="17:23" pos:end="17:23">)</operator> <name pos:start="17:25" pos:end="17:44"><name pos:start="17:25" pos:end="17:27">hci</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:35">device</name><operator pos:start="17:36" pos:end="17:36">.</operator><name pos:start="17:37" pos:end="17:44">lmp_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="25:32">/* Be gentle and send DISCONNECT to all connected peers and those

     * currently waiting for us to accept or reject a connection request.

     * This frees the links.  */</comment>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:27">(<expr pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:11">hci</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:26">conn_req_host</name></name></expr>)</condition> <block pos:start="27:29" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:15">

        <expr_stmt pos:start="29:9" pos:end="31:71"><expr pos:start="29:9" pos:end="31:70"><call pos:start="29:9" pos:end="31:70"><name pos:start="29:9" pos:end="29:32">bt_hci_connection_reject</name><argument_list pos:start="29:33" pos:end="31:70">(<argument pos:start="29:34" pos:end="29:36"><expr pos:start="29:34" pos:end="29:36"><name pos:start="29:34" pos:end="29:36">hci</name></expr></argument>,

                                 <argument pos:start="31:34" pos:end="31:51"><expr pos:start="31:34" pos:end="31:51"><name pos:start="31:34" pos:end="31:51"><name pos:start="31:34" pos:end="31:36">hci</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:51">conn_req_host</name></name></expr></argument>, <argument pos:start="31:54" pos:end="31:69"><expr pos:start="31:54" pos:end="31:69"><name pos:start="31:54" pos:end="31:69">HCI_OE_POWER_OFF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="39:5" pos:end="45:61">for <control pos:start="39:9" pos:end="41:78">(<init pos:start="39:10" pos:end="39:36"><expr pos:start="39:10" pos:end="39:35"><name pos:start="39:10" pos:end="39:15">handle</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:35">HCI_HANDLE_OFFSET</name></expr>;</init>

                    <condition pos:start="41:21" pos:end="41:67"><expr pos:start="41:21" pos:end="41:66"><name pos:start="41:21" pos:end="41:26">handle</name> <operator pos:start="41:28" pos:end="41:28">&lt;</operator> <operator pos:start="41:30" pos:end="41:30">(</operator><name pos:start="41:31" pos:end="41:47">HCI_HANDLE_OFFSET</name> <operator pos:start="41:49" pos:end="41:49">|</operator> <name pos:start="41:51" pos:end="41:65">HCI_HANDLES_MAX</name><operator pos:start="41:66" pos:end="41:66">)</operator></expr>;</condition> <incr pos:start="41:69" pos:end="41:77"><expr pos:start="41:69" pos:end="41:77"><name pos:start="41:69" pos:end="41:74">handle</name> <operator pos:start="41:76" pos:end="41:77">++</operator></expr></incr>)</control><block type="pseudo" pos:start="43:9" pos:end="45:61"><block_content pos:start="43:9" pos:end="45:61">

        <if_stmt pos:start="43:9" pos:end="45:61"><if pos:start="43:9" pos:end="45:61">if <condition pos:start="43:12" pos:end="43:44">(<expr pos:start="43:13" pos:end="43:43"><operator pos:start="43:13" pos:end="43:13">!</operator><call pos:start="43:14" pos:end="43:43"><name pos:start="43:14" pos:end="43:30">bt_hci_handle_bad</name><argument_list pos:start="43:31" pos:end="43:43">(<argument pos:start="43:32" pos:end="43:34"><expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:34">hci</name></expr></argument>, <argument pos:start="43:37" pos:end="43:42"><expr pos:start="43:37" pos:end="43:42"><name pos:start="43:37" pos:end="43:42">handle</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:61"><block_content pos:start="45:13" pos:end="45:61">

            <expr_stmt pos:start="45:13" pos:end="45:61"><expr pos:start="45:13" pos:end="45:60"><call pos:start="45:13" pos:end="45:60"><name pos:start="45:13" pos:end="45:29">bt_hci_disconnect</name><argument_list pos:start="45:30" pos:end="45:60">(<argument pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:33">hci</name></expr></argument>, <argument pos:start="45:36" pos:end="45:41"><expr pos:start="45:36" pos:end="45:41"><name pos:start="45:36" pos:end="45:41">handle</name></expr></argument>, <argument pos:start="45:44" pos:end="45:59"><expr pos:start="45:44" pos:end="45:59"><name pos:start="45:44" pos:end="45:59">HCI_OE_POWER_OFF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <comment type="block" pos:start="49:5" pos:end="63:46">/* TODO: this is not enough actually, there may be slaves from whom

     * we have requested a connection who will soon (or not) respond with

     * an accept or a reject, so we should also check if hci-&gt;lm.connecting

     * is non-zero and if so, avoid freeing the hci but otherwise disappear

     * from all qemu social life (e.g. stop scanning and request to be

     * removed from s-&gt;device.net) and arrange for

     * s-&gt;device.lmp_connection_complete to free the remaining bits once

     * hci-&gt;lm.awaiting_bdaddr[] is empty.  */</comment>



    <expr_stmt pos:start="67:5" pos:end="67:37"><expr pos:start="67:5" pos:end="67:36"><call pos:start="67:5" pos:end="67:36"><name pos:start="67:5" pos:end="67:14">timer_free</name><argument_list pos:start="67:15" pos:end="67:36">(<argument pos:start="67:16" pos:end="67:35"><expr pos:start="67:16" pos:end="67:35"><name pos:start="67:16" pos:end="67:35"><name pos:start="67:16" pos:end="67:18">hci</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:22">lm</name><operator pos:start="67:23" pos:end="67:23">.</operator><name pos:start="67:24" pos:end="67:35">inquiry_done</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:37"><expr pos:start="69:5" pos:end="69:36"><call pos:start="69:5" pos:end="69:36"><name pos:start="69:5" pos:end="69:14">timer_free</name><argument_list pos:start="69:15" pos:end="69:36">(<argument pos:start="69:16" pos:end="69:35"><expr pos:start="69:16" pos:end="69:35"><name pos:start="69:16" pos:end="69:35"><name pos:start="69:16" pos:end="69:18">hci</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:22">lm</name><operator pos:start="69:23" pos:end="69:23">.</operator><name pos:start="69:24" pos:end="69:35">inquiry_next</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:39"><expr pos:start="71:5" pos:end="71:38"><call pos:start="71:5" pos:end="71:38"><name pos:start="71:5" pos:end="71:14">timer_free</name><argument_list pos:start="71:15" pos:end="71:38">(<argument pos:start="71:16" pos:end="71:37"><expr pos:start="71:16" pos:end="71:37"><name pos:start="71:16" pos:end="71:37"><name pos:start="71:16" pos:end="71:18">hci</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:37">conn_accept_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:16"><expr pos:start="75:5" pos:end="75:15"><call pos:start="75:5" pos:end="75:15"><name pos:start="75:5" pos:end="75:10">g_free</name><argument_list pos:start="75:11" pos:end="75:15">(<argument pos:start="75:12" pos:end="75:14"><expr pos:start="75:12" pos:end="75:14"><name pos:start="75:12" pos:end="75:14">hci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
