<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20192.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">kbd_send_chars</name><parameter_list pos:start="1:27" pos:end="1:40">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:33"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">TextConsole</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:19"><name pos:start="9:13" pos:end="9:15">buf</name><index pos:start="9:16" pos:end="9:19">[<expr pos:start="9:17" pos:end="9:18"><literal type="number" pos:start="9:17" pos:end="9:18">16</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:36"><expr pos:start="13:5" pos:end="13:35"><name pos:start="13:5" pos:end="13:7">len</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:35"><name pos:start="13:11" pos:end="13:27">qemu_chr_can_read</name><argument_list pos:start="13:28" pos:end="13:35">(<argument pos:start="13:29" pos:end="13:34"><expr pos:start="13:29" pos:end="13:34"><name pos:start="13:29" pos:end="13:34"><name pos:start="13:29" pos:end="13:29">s</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:34">chr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:32"><if pos:start="15:5" pos:end="17:32">if <condition pos:start="15:8" pos:end="15:32">(<expr pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:11">len</name> <operator pos:start="15:13" pos:end="15:13">&gt;</operator> <name pos:start="15:15" pos:end="15:31"><name pos:start="15:15" pos:end="15:15">s</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:25">out_fifo</name><operator pos:start="15:26" pos:end="15:26">.</operator><name pos:start="15:27" pos:end="15:31">count</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:32"><block_content pos:start="17:9" pos:end="17:32">

        <expr_stmt pos:start="17:9" pos:end="17:32"><expr pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:11">len</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:31"><name pos:start="17:15" pos:end="17:15">s</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:25">out_fifo</name><operator pos:start="17:26" pos:end="17:26">.</operator><name pos:start="17:27" pos:end="17:31">count</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="29:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">len</name> <operator pos:start="19:13" pos:end="19:13">&gt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition> <block pos:start="19:18" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:40">

        <if_stmt pos:start="21:9" pos:end="23:30"><if pos:start="21:9" pos:end="23:30">if <condition pos:start="21:12" pos:end="21:30">(<expr pos:start="21:13" pos:end="21:29"><name pos:start="21:13" pos:end="21:15">len</name> <operator pos:start="21:17" pos:end="21:17">&gt;</operator> <sizeof pos:start="21:19" pos:end="21:29">sizeof<argument_list pos:start="21:25" pos:end="21:29">(<argument pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:28">buf</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:30"><block_content pos:start="23:13" pos:end="23:30">

            <expr_stmt pos:start="23:13" pos:end="23:30"><expr pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:15">len</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <sizeof pos:start="23:19" pos:end="23:29">sizeof<argument_list pos:start="23:25" pos:end="23:29">(<argument pos:start="23:26" pos:end="23:28"><expr pos:start="23:26" pos:end="23:28"><name pos:start="23:26" pos:end="23:28">buf</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:47"><expr pos:start="25:9" pos:end="25:46"><call pos:start="25:9" pos:end="25:46"><name pos:start="25:9" pos:end="25:22">qemu_fifo_read</name><argument_list pos:start="25:23" pos:end="25:46">(<argument pos:start="25:24" pos:end="25:35"><expr pos:start="25:24" pos:end="25:35"><operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:35"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:35">out_fifo</name></name></expr></argument>, <argument pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:40">buf</name></expr></argument>, <argument pos:start="25:43" pos:end="25:45"><expr pos:start="25:43" pos:end="25:45"><name pos:start="25:43" pos:end="25:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:40"><expr pos:start="27:9" pos:end="27:39"><call pos:start="27:9" pos:end="27:39"><name pos:start="27:9" pos:end="27:21">qemu_chr_read</name><argument_list pos:start="27:22" pos:end="27:39">(<argument pos:start="27:23" pos:end="27:28"><expr pos:start="27:23" pos:end="27:28"><name pos:start="27:23" pos:end="27:28"><name pos:start="27:23" pos:end="27:23">s</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:28">chr</name></name></expr></argument>, <argument pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><name pos:start="27:31" pos:end="27:33">buf</name></expr></argument>, <argument pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><name pos:start="27:36" pos:end="27:38">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="31:5" pos:end="33:50">/* characters are pending: we send them a bit later (XXX:

       horrible, should change char device API) */</comment>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:30">(<expr pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:19">out_fifo</name><operator pos:start="35:20" pos:end="35:20">.</operator><name pos:start="35:21" pos:end="35:25">count</name></name> <operator pos:start="35:27" pos:end="35:27">&gt;</operator> <literal type="number" pos:start="35:29" pos:end="35:29">0</literal></expr>)</condition> <block pos:start="35:32" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:67">

        <expr_stmt pos:start="37:9" pos:end="37:67"><expr pos:start="37:9" pos:end="37:66"><call pos:start="37:9" pos:end="37:66"><name pos:start="37:9" pos:end="37:22">qemu_mod_timer</name><argument_list pos:start="37:23" pos:end="37:66">(<argument pos:start="37:24" pos:end="37:35"><expr pos:start="37:24" pos:end="37:35"><name pos:start="37:24" pos:end="37:35"><name pos:start="37:24" pos:end="37:24">s</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:35">kbd_timer</name></name></expr></argument>, <argument pos:start="37:38" pos:end="37:65"><expr pos:start="37:38" pos:end="37:65"><call pos:start="37:38" pos:end="37:61"><name pos:start="37:38" pos:end="37:51">qemu_get_clock</name><argument_list pos:start="37:52" pos:end="37:61">(<argument pos:start="37:53" pos:end="37:60"><expr pos:start="37:53" pos:end="37:60"><name pos:start="37:53" pos:end="37:60">rt_clock</name></expr></argument>)</argument_list></call> <operator pos:start="37:63" pos:end="37:63">+</operator> <literal type="number" pos:start="37:65" pos:end="37:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
