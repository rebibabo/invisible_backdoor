<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26001.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">dhcp_decode</name><parameter_list pos:start="1:24" pos:end="3:57">(<parameter pos:start="1:25" pos:end="1:48"><decl pos:start="1:25" pos:end="1:48"><type pos:start="1:25" pos:end="1:48"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:36">struct</name> <name pos:start="1:38" pos:end="1:44">bootp_t</name></name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bp</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:53">int</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:64">pmsg_type</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:56"><decl pos:start="3:25" pos:end="3:56"><type pos:start="3:25" pos:end="3:56"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:44"><name pos:start="3:31" pos:end="3:36">struct</name> <name pos:start="3:38" pos:end="3:44">in_addr</name></name> <modifier pos:start="3:46" pos:end="3:46">*</modifier><modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:56">preq_addr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="91:1">{<block_content pos:start="7:5" pos:end="89:5">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">p</name></decl>, <decl pos:start="7:23" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:19"><modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:28">p_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">len</name></decl>, <decl pos:start="9:14" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:16">tag</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:19"><expr pos:start="13:5" pos:end="13:18"><operator pos:start="13:5" pos:end="13:5">*</operator><name pos:start="13:6" pos:end="13:14">pmsg_type</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><operator pos:start="15:5" pos:end="15:5">*</operator><name pos:start="15:6" pos:end="15:14">preq_addr</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <name pos:start="15:18" pos:end="15:21">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:20"><expr pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:5">p</name> <operator pos:start="19:7" pos:end="19:7">=</operator> <name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:10">bp</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:19">bp_vend</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:9">p_end</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:13">p</name> <operator pos:start="21:15" pos:end="21:15">+</operator> <name pos:start="21:17" pos:end="21:28">DHCP_OPT_LEN</name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:15"><if pos:start="23:5" pos:end="25:15">if <condition pos:start="23:8" pos:end="23:42">(<expr pos:start="23:9" pos:end="23:41"><call pos:start="23:9" pos:end="23:36"><name pos:start="23:9" pos:end="23:14">memcmp</name><argument_list pos:start="23:15" pos:end="23:36">(<argument pos:start="23:16" pos:end="23:16"><expr pos:start="23:16" pos:end="23:16"><name pos:start="23:16" pos:end="23:16">p</name></expr></argument>, <argument pos:start="23:19" pos:end="23:32"><expr pos:start="23:19" pos:end="23:32"><name pos:start="23:19" pos:end="23:32">rfc1533_cookie</name></expr></argument>, <argument pos:start="23:35" pos:end="23:35"><expr pos:start="23:35" pos:end="23:35"><literal type="number" pos:start="23:35" pos:end="23:35">4</literal></expr></argument>)</argument_list></call> <operator pos:start="23:38" pos:end="23:39">!=</operator> <literal type="number" pos:start="23:41" pos:end="23:41">0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:15"><block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:11"><expr pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:5">p</name> <operator pos:start="27:7" pos:end="27:8">+=</operator> <literal type="number" pos:start="27:10" pos:end="27:10">4</literal></expr>;</expr_stmt>

    <while pos:start="29:5" pos:end="83:5">while <condition pos:start="29:11" pos:end="29:21">(<expr pos:start="29:12" pos:end="29:20"><name pos:start="29:12" pos:end="29:12">p</name> <operator pos:start="29:14" pos:end="29:14">&lt;</operator> <name pos:start="29:16" pos:end="29:20">p_end</name></expr>)</condition> <block pos:start="29:23" pos:end="83:5">{<block_content pos:start="31:9" pos:end="81:9">

        <expr_stmt pos:start="31:9" pos:end="31:19"><expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:11">tag</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:18"><name pos:start="31:15" pos:end="31:15">p</name><index pos:start="31:16" pos:end="31:18">[<expr pos:start="31:17" pos:end="31:17"><literal type="number" pos:start="31:17" pos:end="31:17">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="81:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:31">(<expr pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:15">tag</name> <operator pos:start="33:17" pos:end="33:18">==</operator> <name pos:start="33:20" pos:end="33:30">RFC1533_PAD</name></expr>)</condition> <block pos:start="33:33" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:16">

            <expr_stmt pos:start="35:13" pos:end="35:16"><expr pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:13">p</name><operator pos:start="35:14" pos:end="35:15">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="37:11" pos:end="41:9">else if <condition pos:start="37:19" pos:end="37:38">(<expr pos:start="37:20" pos:end="37:37"><name pos:start="37:20" pos:end="37:22">tag</name> <operator pos:start="37:24" pos:end="37:25">==</operator> <name pos:start="37:27" pos:end="37:37">RFC1533_END</name></expr>)</condition> <block pos:start="37:40" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:18">

            <break pos:start="39:13" pos:end="39:18">break;</break>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="81:9">else <block pos:start="41:16" pos:end="81:9">{<block_content pos:start="43:13" pos:end="79:21">

            <expr_stmt pos:start="43:13" pos:end="43:16"><expr pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:13">p</name><operator pos:start="43:14" pos:end="43:15">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="47:22"><if pos:start="45:13" pos:end="47:22">if <condition pos:start="45:16" pos:end="45:27">(<expr pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:17">p</name> <operator pos:start="45:19" pos:end="45:20">&gt;=</operator> <name pos:start="45:22" pos:end="45:26">p_end</name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:22"><block_content pos:start="47:17" pos:end="47:22">

                <break pos:start="47:17" pos:end="47:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:23"><expr pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:15">len</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <operator pos:start="49:19" pos:end="49:19">*</operator><name pos:start="49:20" pos:end="49:20">p</name><operator pos:start="49:21" pos:end="49:22">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:55"><expr pos:start="51:13" pos:end="51:54"><call pos:start="51:13" pos:end="51:54"><name pos:start="51:13" pos:end="51:19">DPRINTF</name><argument_list pos:start="51:20" pos:end="51:54">(<argument pos:start="51:21" pos:end="51:43"><expr pos:start="51:21" pos:end="51:43"><literal type="string" pos:start="51:21" pos:end="51:43">"dhcp: tag=%d len=%d\n"</literal></expr></argument>, <argument pos:start="51:46" pos:end="51:48"><expr pos:start="51:46" pos:end="51:48"><name pos:start="51:46" pos:end="51:48">tag</name></expr></argument>, <argument pos:start="51:51" pos:end="51:53"><expr pos:start="51:51" pos:end="51:53"><name pos:start="51:51" pos:end="51:53">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <switch pos:start="55:13" pos:end="77:13">switch<condition pos:start="55:19" pos:end="55:23">(<expr pos:start="55:20" pos:end="55:22"><name pos:start="55:20" pos:end="55:22">tag</name></expr>)</condition> <block pos:start="55:25" pos:end="77:13">{<block_content pos:start="57:13" pos:end="75:22">

            <case pos:start="57:13" pos:end="57:34">case <expr pos:start="57:18" pos:end="57:33"><name pos:start="57:18" pos:end="57:33">RFC2132_MSG_TYPE</name></expr>:</case>

                <if_stmt pos:start="59:17" pos:end="61:38"><if pos:start="59:17" pos:end="61:38">if <condition pos:start="59:20" pos:end="59:29">(<expr pos:start="59:21" pos:end="59:28"><name pos:start="59:21" pos:end="59:23">len</name> <operator pos:start="59:25" pos:end="59:26">&gt;=</operator> <literal type="number" pos:start="59:28" pos:end="59:28">1</literal></expr>)</condition><block type="pseudo" pos:start="61:21" pos:end="61:38"><block_content pos:start="61:21" pos:end="61:38">

                    <expr_stmt pos:start="61:21" pos:end="61:38"><expr pos:start="61:21" pos:end="61:37"><operator pos:start="61:21" pos:end="61:21">*</operator><name pos:start="61:22" pos:end="61:30">pmsg_type</name> <operator pos:start="61:32" pos:end="61:32">=</operator> <name pos:start="61:34" pos:end="61:37"><name pos:start="61:34" pos:end="61:34">p</name><index pos:start="61:35" pos:end="61:37">[<expr pos:start="61:36" pos:end="61:36"><literal type="number" pos:start="61:36" pos:end="61:36">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="63:17" pos:end="63:22">break;</break>

            <case pos:start="65:13" pos:end="65:34">case <expr pos:start="65:18" pos:end="65:33"><name pos:start="65:18" pos:end="65:33">RFC2132_REQ_ADDR</name></expr>:</case>

                <if_stmt pos:start="67:17" pos:end="69:53"><if pos:start="67:17" pos:end="69:53">if <condition pos:start="67:20" pos:end="67:29">(<expr pos:start="67:21" pos:end="67:28"><name pos:start="67:21" pos:end="67:23">len</name> <operator pos:start="67:25" pos:end="67:26">&gt;=</operator> <literal type="number" pos:start="67:28" pos:end="67:28">4</literal></expr>)</condition><block type="pseudo" pos:start="69:21" pos:end="69:53"><block_content pos:start="69:21" pos:end="69:53">

                    <expr_stmt pos:start="69:21" pos:end="69:53"><expr pos:start="69:21" pos:end="69:52"><operator pos:start="69:21" pos:end="69:21">*</operator><name pos:start="69:22" pos:end="69:30">preq_addr</name> <operator pos:start="69:32" pos:end="69:32">=</operator> <operator pos:start="69:34" pos:end="69:34">(</operator>struct <name pos:start="69:42" pos:end="69:48">in_addr</name> <operator pos:start="69:50" pos:end="69:50">*</operator><operator pos:start="69:51" pos:end="69:51">)</operator><name pos:start="69:52" pos:end="69:52">p</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="71:17" pos:end="71:22">break;</break>

            <default pos:start="73:13" pos:end="73:20">default:</default>

                <break pos:start="75:17" pos:end="75:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="79:13" pos:end="79:21"><expr pos:start="79:13" pos:end="79:20"><name pos:start="79:13" pos:end="79:13">p</name> <operator pos:start="79:15" pos:end="79:16">+=</operator> <name pos:start="79:18" pos:end="79:20">len</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:73">(<expr pos:start="85:9" pos:end="85:72"><operator pos:start="85:9" pos:end="85:9">*</operator><name pos:start="85:10" pos:end="85:18">pmsg_type</name> <operator pos:start="85:20" pos:end="85:21">==</operator> <name pos:start="85:23" pos:end="85:33">DHCPREQUEST</name> <operator pos:start="85:35" pos:end="85:36">&amp;&amp;</operator> <operator pos:start="85:38" pos:end="85:38">!</operator><operator pos:start="85:39" pos:end="85:39">*</operator><name pos:start="85:40" pos:end="85:48">preq_addr</name> <operator pos:start="85:50" pos:end="85:51">&amp;&amp;</operator> <name pos:start="85:53" pos:end="85:72"><name pos:start="85:53" pos:end="85:54">bp</name><operator pos:start="85:55" pos:end="85:56">-&gt;</operator><name pos:start="85:57" pos:end="85:65">bp_ciaddr</name><operator pos:start="85:66" pos:end="85:66">.</operator><name pos:start="85:67" pos:end="85:72">s_addr</name></name></expr>)</condition> <block pos:start="85:75" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:36">

        <expr_stmt pos:start="87:9" pos:end="87:36"><expr pos:start="87:9" pos:end="87:35"><operator pos:start="87:9" pos:end="87:9">*</operator><name pos:start="87:10" pos:end="87:18">preq_addr</name> <operator pos:start="87:20" pos:end="87:20">=</operator> <operator pos:start="87:22" pos:end="87:22">&amp;</operator><name pos:start="87:23" pos:end="87:35"><name pos:start="87:23" pos:end="87:24">bp</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:35">bp_ciaddr</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
