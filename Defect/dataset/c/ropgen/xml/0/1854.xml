<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1854.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">PCIDevice</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:26">find_dev</name><parameter_list pos:start="1:27" pos:end="3:48">(<parameter pos:start="1:28" pos:end="1:50"><decl pos:start="1:28" pos:end="1:50"><type pos:start="1:28" pos:end="1:50"><name pos:start="1:28" pos:end="1:43">sPAPREnvironment</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">spapr</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:60">uint64_t</name></type> <name pos:start="1:62" pos:end="1:65">buid</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:47"><decl pos:start="3:28" pos:end="3:47"><type pos:start="3:28" pos:end="3:47"><name pos:start="3:28" pos:end="3:35">uint32_t</name></type> <name pos:start="3:37" pos:end="3:47">config_addr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="27:1">{<block_content pos:start="7:5" pos:end="25:53">

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">sPAPRPHBState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:23">sphb</name> <init pos:start="7:25" pos:end="7:47">= <expr pos:start="7:27" pos:end="7:47"><call pos:start="7:27" pos:end="7:47"><name pos:start="7:27" pos:end="7:34">find_phb</name><argument_list pos:start="7:35" pos:end="7:47">(<argument pos:start="7:36" pos:end="7:40"><expr pos:start="7:36" pos:end="7:40"><name pos:start="7:36" pos:end="7:40">spapr</name></expr></argument>, <argument pos:start="7:43" pos:end="7:46"><expr pos:start="7:43" pos:end="7:46"><name pos:start="7:43" pos:end="7:46">buid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">PCIHostState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">phb</name> <init pos:start="9:23" pos:end="9:45">= <expr pos:start="9:25" pos:end="9:45"><call pos:start="9:25" pos:end="9:45"><name pos:start="9:25" pos:end="9:39">PCI_HOST_BRIDGE</name><argument_list pos:start="9:40" pos:end="9:45">(<argument pos:start="9:41" pos:end="9:44"><expr pos:start="9:41" pos:end="9:44"><name pos:start="9:41" pos:end="9:44">sphb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">bus_num</name> <init pos:start="11:17" pos:end="11:44">= <expr pos:start="11:19" pos:end="11:44"><operator pos:start="11:19" pos:end="11:19">(</operator><name pos:start="11:20" pos:end="11:30">config_addr</name> <operator pos:start="11:32" pos:end="11:33">&gt;&gt;</operator> <literal type="number" pos:start="11:35" pos:end="11:36">16</literal><operator pos:start="11:37" pos:end="11:37">)</operator> <operator pos:start="11:39" pos:end="11:39">&amp;</operator> <literal type="number" pos:start="11:41" pos:end="11:44">0xFF</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">devfn</name> <init pos:start="13:15" pos:end="13:41">= <expr pos:start="13:17" pos:end="13:41"><operator pos:start="13:17" pos:end="13:17">(</operator><name pos:start="13:18" pos:end="13:28">config_addr</name> <operator pos:start="13:30" pos:end="13:31">&gt;&gt;</operator> <literal type="number" pos:start="13:33" pos:end="13:33">8</literal><operator pos:start="13:34" pos:end="13:34">)</operator> <operator pos:start="13:36" pos:end="13:36">&amp;</operator> <literal type="number" pos:start="13:38" pos:end="13:41">0xFF</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:13">(<expr pos:start="17:9" pos:end="17:12"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:12">phb</name></expr>)</condition> <block pos:start="17:15" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:20">

        <return pos:start="19:9" pos:end="19:20">return <expr pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="25:5" pos:end="25:53">return <expr pos:start="25:12" pos:end="25:52"><call pos:start="25:12" pos:end="25:52"><name pos:start="25:12" pos:end="25:26">pci_find_device</name><argument_list pos:start="25:27" pos:end="25:52">(<argument pos:start="25:28" pos:end="25:35"><expr pos:start="25:28" pos:end="25:35"><name pos:start="25:28" pos:end="25:35"><name pos:start="25:28" pos:end="25:30">phb</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:35">bus</name></name></expr></argument>, <argument pos:start="25:38" pos:end="25:44"><expr pos:start="25:38" pos:end="25:44"><name pos:start="25:38" pos:end="25:44">bus_num</name></expr></argument>, <argument pos:start="25:47" pos:end="25:51"><expr pos:start="25:47" pos:end="25:51"><name pos:start="25:47" pos:end="25:51">devfn</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
