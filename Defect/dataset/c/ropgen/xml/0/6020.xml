<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6020.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">nbd_co_writev_1</name><parameter_list pos:start="1:27" pos:end="5:38">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:43">BlockDriverState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">bs</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:67"><decl pos:start="1:50" pos:end="1:67"><type pos:start="1:50" pos:end="1:67"><name pos:start="1:50" pos:end="1:56">int64_t</name></type> <name pos:start="1:58" pos:end="1:67">sector_num</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:41"><decl pos:start="3:28" pos:end="3:41"><type pos:start="3:28" pos:end="3:41"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:41">nb_sectors</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:61"><decl pos:start="3:44" pos:end="3:61"><type pos:start="3:44" pos:end="3:61"><name pos:start="3:44" pos:end="3:55">QEMUIOVector</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:61">qiov</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:37"><decl pos:start="5:28" pos:end="5:37"><type pos:start="5:28" pos:end="5:37"><name pos:start="5:28" pos:end="5:30">int</name></type> <name pos:start="5:32" pos:end="5:37">offset</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="49:1">{<block_content pos:start="9:5" pos:end="47:24">

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">BDRVNBDState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name> <init pos:start="9:21" pos:end="9:32">= <expr pos:start="9:23" pos:end="9:32"><name pos:start="9:23" pos:end="9:32"><name pos:start="9:23" pos:end="9:24">bs</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:22">nbd_request</name></name></type> <name pos:start="11:24" pos:end="11:30">request</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:20">nbd_reply</name></name></type> <name pos:start="13:22" pos:end="13:26">reply</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:11">request</name><operator pos:start="17:12" pos:end="17:12">.</operator><name pos:start="17:13" pos:end="17:16">type</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:32">NBD_CMD_WRITE</name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:74">(<expr pos:start="19:9" pos:end="19:73"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:36"><name pos:start="19:10" pos:end="19:32">bdrv_enable_write_cache</name><argument_list pos:start="19:33" pos:end="19:36">(<argument pos:start="19:34" pos:end="19:35"><expr pos:start="19:34" pos:end="19:35"><name pos:start="19:34" pos:end="19:35">bs</name></expr></argument>)</argument_list></call> <operator pos:start="19:38" pos:end="19:39">&amp;&amp;</operator> <operator pos:start="19:41" pos:end="19:41">(</operator><name pos:start="19:42" pos:end="19:52"><name pos:start="19:42" pos:end="19:42">s</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:52">nbdflags</name></name> <operator pos:start="19:54" pos:end="19:54">&amp;</operator> <name pos:start="19:56" pos:end="19:72">NBD_FLAG_SEND_FUA</name><operator pos:start="19:73" pos:end="19:73">)</operator></expr>)</condition> <block pos:start="19:76" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:41">

        <expr_stmt pos:start="21:9" pos:end="21:41"><expr pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:15">request</name><operator pos:start="21:16" pos:end="21:16">.</operator><name pos:start="21:17" pos:end="21:20">type</name></name> <operator pos:start="21:22" pos:end="21:23">|=</operator> <name pos:start="21:25" pos:end="21:40">NBD_CMD_FLAG_FUA</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:11">request</name><operator pos:start="27:12" pos:end="27:12">.</operator><name pos:start="27:13" pos:end="27:16">from</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:29">sector_num</name> <operator pos:start="27:31" pos:end="27:31">*</operator> <literal type="number" pos:start="27:33" pos:end="27:35">512</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:11">request</name><operator pos:start="29:12" pos:end="29:12">.</operator><name pos:start="29:13" pos:end="29:15">len</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:28">nb_sectors</name> <operator pos:start="29:30" pos:end="29:30">*</operator> <literal type="number" pos:start="29:32" pos:end="29:34">512</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:37"><expr pos:start="33:5" pos:end="33:36"><call pos:start="33:5" pos:end="33:36"><name pos:start="33:5" pos:end="33:23">nbd_coroutine_start</name><argument_list pos:start="33:24" pos:end="33:36">(<argument pos:start="33:25" pos:end="33:25"><expr pos:start="33:25" pos:end="33:25"><name pos:start="33:25" pos:end="33:25">s</name></expr></argument>, <argument pos:start="33:28" pos:end="33:35"><expr pos:start="33:28" pos:end="33:35"><operator pos:start="33:28" pos:end="33:28">&amp;</operator><name pos:start="33:29" pos:end="33:35">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:66">(<expr pos:start="35:9" pos:end="35:65"><call pos:start="35:9" pos:end="35:59"><name pos:start="35:9" pos:end="35:27">nbd_co_send_request</name><argument_list pos:start="35:28" pos:end="35:59">(<argument pos:start="35:29" pos:end="35:29"><expr pos:start="35:29" pos:end="35:29"><name pos:start="35:29" pos:end="35:29">s</name></expr></argument>, <argument pos:start="35:32" pos:end="35:39"><expr pos:start="35:32" pos:end="35:39"><operator pos:start="35:32" pos:end="35:32">&amp;</operator><name pos:start="35:33" pos:end="35:39">request</name></expr></argument>, <argument pos:start="35:42" pos:end="35:50"><expr pos:start="35:42" pos:end="35:50"><name pos:start="35:42" pos:end="35:50"><name pos:start="35:42" pos:end="35:45">qiov</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:50">iov</name></name></expr></argument>, <argument pos:start="35:53" pos:end="35:58"><expr pos:start="35:53" pos:end="35:58"><name pos:start="35:53" pos:end="35:58">offset</name></expr></argument>)</argument_list></call> <operator pos:start="35:61" pos:end="35:62">==</operator> <operator pos:start="35:64" pos:end="35:64">-</operator><literal type="number" pos:start="35:65" pos:end="35:65">1</literal></expr>)</condition> <block pos:start="35:68" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:28">

        <expr_stmt pos:start="37:9" pos:end="37:28"><expr pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:13">reply</name><operator pos:start="37:14" pos:end="37:14">.</operator><name pos:start="37:15" pos:end="37:19">error</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:27">errno</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="43:5">else <block pos:start="39:12" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:59">

        <expr_stmt pos:start="41:9" pos:end="41:59"><expr pos:start="41:9" pos:end="41:58"><call pos:start="41:9" pos:end="41:58"><name pos:start="41:9" pos:end="41:28">nbd_co_receive_reply</name><argument_list pos:start="41:29" pos:end="41:58">(<argument pos:start="41:30" pos:end="41:30"><expr pos:start="41:30" pos:end="41:30"><name pos:start="41:30" pos:end="41:30">s</name></expr></argument>, <argument pos:start="41:33" pos:end="41:40"><expr pos:start="41:33" pos:end="41:40"><operator pos:start="41:33" pos:end="41:33">&amp;</operator><name pos:start="41:34" pos:end="41:40">request</name></expr></argument>, <argument pos:start="41:43" pos:end="41:48"><expr pos:start="41:43" pos:end="41:48"><operator pos:start="41:43" pos:end="41:43">&amp;</operator><name pos:start="41:44" pos:end="41:48">reply</name></expr></argument>, <argument pos:start="41:51" pos:end="41:54"><expr pos:start="41:51" pos:end="41:54"><name pos:start="41:51" pos:end="41:54">NULL</name></expr></argument>, <argument pos:start="41:57" pos:end="41:57"><expr pos:start="41:57" pos:end="41:57"><literal type="number" pos:start="41:57" pos:end="41:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:35"><expr pos:start="45:5" pos:end="45:34"><call pos:start="45:5" pos:end="45:34"><name pos:start="45:5" pos:end="45:21">nbd_coroutine_end</name><argument_list pos:start="45:22" pos:end="45:34">(<argument pos:start="45:23" pos:end="45:23"><expr pos:start="45:23" pos:end="45:23"><name pos:start="45:23" pos:end="45:23">s</name></expr></argument>, <argument pos:start="45:26" pos:end="45:33"><expr pos:start="45:26" pos:end="45:33"><operator pos:start="45:26" pos:end="45:26">&amp;</operator><name pos:start="45:27" pos:end="45:33">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="47:5" pos:end="47:24">return <expr pos:start="47:12" pos:end="47:23"><operator pos:start="47:12" pos:end="47:12">-</operator><name pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:17">reply</name><operator pos:start="47:18" pos:end="47:18">.</operator><name pos:start="47:19" pos:end="47:23">error</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
