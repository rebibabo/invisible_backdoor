<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1163.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">gboolean</name></type> <name pos:start="1:17" pos:end="1:35">gd_window_key_event</name><parameter_list pos:start="1:36" pos:end="1:86">(<parameter pos:start="1:37" pos:end="1:53"><decl pos:start="1:37" pos:end="1:53"><type pos:start="1:37" pos:end="1:53"><name pos:start="1:37" pos:end="1:45">GtkWidget</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:53">widget</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:71"><decl pos:start="1:56" pos:end="1:71"><type pos:start="1:56" pos:end="1:71"><name pos:start="1:56" pos:end="1:66">GdkEventKey</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">key</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:85"><decl pos:start="1:74" pos:end="1:85"><type pos:start="1:74" pos:end="1:85"><name pos:start="1:74" pos:end="1:77">void</name> <modifier pos:start="1:79" pos:end="1:79">*</modifier></type><name pos:start="1:80" pos:end="1:85">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:19">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">GtkDisplayState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:31">= <expr pos:start="5:26" pos:end="5:31"><name pos:start="5:26" pos:end="5:31">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">GtkAccelGroupEntry</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:31">entries</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">guint</name></type> <name pos:start="9:11" pos:end="9:19">n_entries</name> <init pos:start="9:21" pos:end="9:23">= <expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">gboolean</name></type> <name pos:start="11:14" pos:end="11:28">propagate_accel</name> <init pos:start="11:30" pos:end="11:35">= <expr pos:start="11:32" pos:end="11:35"><name pos:start="11:32" pos:end="11:35">TRUE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">gboolean</name></type> <name pos:start="13:14" pos:end="13:20">handled</name> <init pos:start="13:22" pos:end="13:28">= <expr pos:start="13:24" pos:end="13:28"><name pos:start="13:24" pos:end="13:28">FALSE</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:60"><expr pos:start="17:5" pos:end="19:59"><name pos:start="17:5" pos:end="17:11">entries</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="19:59"><name pos:start="17:15" pos:end="17:35">gtk_accel_group_query</name><argument_list pos:start="17:36" pos:end="19:59">(<argument pos:start="17:37" pos:end="17:50"><expr pos:start="17:37" pos:end="17:50"><name pos:start="17:37" pos:end="17:50"><name pos:start="17:37" pos:end="17:37">s</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:50">accel_group</name></name></expr></argument>, <argument pos:start="17:53" pos:end="17:63"><expr pos:start="17:53" pos:end="17:63"><name pos:start="17:53" pos:end="17:63"><name pos:start="17:53" pos:end="17:55">key</name><operator pos:start="17:56" pos:end="17:57">-&gt;</operator><name pos:start="17:58" pos:end="17:63">keyval</name></name></expr></argument>,

                                    <argument pos:start="19:37" pos:end="19:46"><expr pos:start="19:37" pos:end="19:46"><name pos:start="19:37" pos:end="19:46"><name pos:start="19:37" pos:end="19:39">key</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:46">state</name></name></expr></argument>, <argument pos:start="19:49" pos:end="19:58"><expr pos:start="19:49" pos:end="19:58"><operator pos:start="19:49" pos:end="19:49">&amp;</operator><name pos:start="19:50" pos:end="19:58">n_entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="33:5"><if pos:start="21:5" pos:end="33:5">if <condition pos:start="21:8" pos:end="21:18">(<expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:17">n_entries</name></expr>)</condition> <block pos:start="21:20" pos:end="33:5">{<block_content pos:start="23:9" pos:end="31:9">

        <decl_stmt pos:start="23:9" pos:end="23:75"><decl pos:start="23:9" pos:end="23:74"><type pos:start="23:9" pos:end="23:20"><specifier pos:start="23:9" pos:end="23:13">const</specifier> <name pos:start="23:15" pos:end="23:18">char</name> <modifier pos:start="23:20" pos:end="23:20">*</modifier></type><name pos:start="23:21" pos:end="23:25">quark</name> <init pos:start="23:27" pos:end="23:74">= <expr pos:start="23:29" pos:end="23:74"><call pos:start="23:29" pos:end="23:74"><name pos:start="23:29" pos:end="23:45">g_quark_to_string</name><argument_list pos:start="23:46" pos:end="23:74">(<argument pos:start="23:47" pos:end="23:73"><expr pos:start="23:47" pos:end="23:73"><name pos:start="23:47" pos:end="23:56"><name pos:start="23:47" pos:end="23:53">entries</name><index pos:start="23:54" pos:end="23:56">[<expr pos:start="23:55" pos:end="23:55"><literal type="number" pos:start="23:55" pos:end="23:55">0</literal></expr>]</index></name><operator pos:start="23:57" pos:end="23:57">.</operator><name pos:start="23:58" pos:end="23:73">accel_path_quark</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:74">(<expr pos:start="27:13" pos:end="27:73"><call pos:start="27:13" pos:end="27:32"><name pos:start="27:13" pos:end="27:29">gd_is_grab_active</name><argument_list pos:start="27:30" pos:end="27:32">(<argument pos:start="27:31" pos:end="27:31"><expr pos:start="27:31" pos:end="27:31"><name pos:start="27:31" pos:end="27:31">s</name></expr></argument>)</argument_list></call> <operator pos:start="27:34" pos:end="27:35">&amp;&amp;</operator> <call pos:start="27:37" pos:end="27:73"><name pos:start="27:37" pos:end="27:44">strstart</name><argument_list pos:start="27:45" pos:end="27:73">(<argument pos:start="27:46" pos:end="27:50"><expr pos:start="27:46" pos:end="27:50"><name pos:start="27:46" pos:end="27:50">quark</name></expr></argument>, <argument pos:start="27:53" pos:end="27:66"><expr pos:start="27:53" pos:end="27:66"><literal type="string" pos:start="27:53" pos:end="27:66">"&lt;QEMU&gt;/File/"</literal></expr></argument>, <argument pos:start="27:69" pos:end="27:72"><expr pos:start="27:69" pos:end="27:72"><name pos:start="27:69" pos:end="27:72">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:76" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:36">

            <expr_stmt pos:start="29:13" pos:end="29:36"><expr pos:start="29:13" pos:end="29:35"><name pos:start="29:13" pos:end="29:27">propagate_accel</name> <operator pos:start="29:29" pos:end="29:29">=</operator> <name pos:start="29:31" pos:end="29:35">FALSE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:36">(<expr pos:start="37:9" pos:end="37:35"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:16">handled</name> <operator pos:start="37:18" pos:end="37:19">&amp;&amp;</operator> <name pos:start="37:21" pos:end="37:35">propagate_accel</name></expr>)</condition> <block pos:start="37:38" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:67">

        <expr_stmt pos:start="39:9" pos:end="39:67"><expr pos:start="39:9" pos:end="39:66"><name pos:start="39:9" pos:end="39:15">handled</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:66"><name pos:start="39:19" pos:end="39:41">gtk_window_activate_key</name><argument_list pos:start="39:42" pos:end="39:66">(<argument pos:start="39:43" pos:end="39:60"><expr pos:start="39:43" pos:end="39:60"><call pos:start="39:43" pos:end="39:60"><name pos:start="39:43" pos:end="39:52">GTK_WINDOW</name><argument_list pos:start="39:53" pos:end="39:60">(<argument pos:start="39:54" pos:end="39:59"><expr pos:start="39:54" pos:end="39:59"><name pos:start="39:54" pos:end="39:59">widget</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:63" pos:end="39:65"><expr pos:start="39:63" pos:end="39:65"><name pos:start="39:63" pos:end="39:65">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:16">(<expr pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:15">handled</name></expr>)</condition> <block pos:start="43:18" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:33">

        <expr_stmt pos:start="45:9" pos:end="45:33"><expr pos:start="45:9" pos:end="45:32"><call pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:29">gtk_release_modifiers</name><argument_list pos:start="45:30" pos:end="45:32">(<argument pos:start="45:31" pos:end="45:31"><expr pos:start="45:31" pos:end="45:31"><name pos:start="45:31" pos:end="45:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="51:5">else <block pos:start="47:12" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:74">

        <expr_stmt pos:start="49:9" pos:end="49:74"><expr pos:start="49:9" pos:end="49:73"><name pos:start="49:9" pos:end="49:15">handled</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="49:73"><name pos:start="49:19" pos:end="49:48">gtk_window_propagate_key_event</name><argument_list pos:start="49:49" pos:end="49:73">(<argument pos:start="49:50" pos:end="49:67"><expr pos:start="49:50" pos:end="49:67"><call pos:start="49:50" pos:end="49:67"><name pos:start="49:50" pos:end="49:59">GTK_WINDOW</name><argument_list pos:start="49:60" pos:end="49:67">(<argument pos:start="49:61" pos:end="49:66"><expr pos:start="49:61" pos:end="49:66"><name pos:start="49:61" pos:end="49:66">widget</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:70" pos:end="49:72"><expr pos:start="49:70" pos:end="49:72"><name pos:start="49:70" pos:end="49:72">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="55:5" pos:end="55:19">return <expr pos:start="55:12" pos:end="55:18"><name pos:start="55:12" pos:end="55:18">handled</name></expr>;</return>

</block_content>}</block></function>
</unit>
