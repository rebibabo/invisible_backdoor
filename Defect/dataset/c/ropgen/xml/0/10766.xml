<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10766.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_p_block</name><parameter_list pos:start="1:26" pos:end="3:59">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:38">FourXContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">f</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:51">uint16_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">dst</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:66">uint16_t</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">src</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:35"><decl pos:start="3:27" pos:end="3:35"><type pos:start="3:27" pos:end="3:35"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:35">log2w</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:46"><decl pos:start="3:38" pos:end="3:46"><type pos:start="3:38" pos:end="3:46"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:46">log2h</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:58"><decl pos:start="3:49" pos:end="3:58"><type pos:start="3:49" pos:end="3:58"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:58">stride</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="125:1">{<block_content pos:start="7:5" pos:end="123:13">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:19">index</name> <init pos:start="7:21" pos:end="7:46">= <expr pos:start="7:23" pos:end="7:46"><name pos:start="7:23" pos:end="7:46"><name pos:start="7:23" pos:end="7:32">size2index</name><index pos:start="7:33" pos:end="7:39">[<expr pos:start="7:34" pos:end="7:38"><name pos:start="7:34" pos:end="7:38">log2h</name></expr>]</index><index pos:start="7:40" pos:end="7:46">[<expr pos:start="7:41" pos:end="7:45"><name pos:start="7:41" pos:end="7:45">log2w</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:15">h</name>     <init pos:start="9:21" pos:end="9:32">= <expr pos:start="9:23" pos:end="9:32"><literal type="number" pos:start="9:23" pos:end="9:23">1</literal> <operator pos:start="9:25" pos:end="9:26">&lt;&lt;</operator> <name pos:start="9:28" pos:end="9:32">log2h</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="15:55"><decl pos:start="11:5" pos:end="15:54"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">code</name>        <init pos:start="11:21" pos:end="15:54">= <expr pos:start="11:23" pos:end="15:54"><call pos:start="11:23" pos:end="15:54"><name pos:start="11:23" pos:end="11:30">get_vlc2</name><argument_list pos:start="11:31" pos:end="15:54">(<argument pos:start="11:32" pos:end="11:37"><expr pos:start="11:32" pos:end="11:37"><operator pos:start="11:32" pos:end="11:32">&amp;</operator><name pos:start="11:33" pos:end="11:37"><name pos:start="11:33" pos:end="11:33">f</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:37">gb</name></name></expr></argument>,

                               <argument pos:start="13:32" pos:end="13:80"><expr pos:start="13:32" pos:end="13:80"><name pos:start="13:32" pos:end="13:74"><name pos:start="13:32" pos:end="13:45">block_type_vlc</name><index pos:start="13:46" pos:end="13:67">[<expr pos:start="13:47" pos:end="13:66"><literal type="number" pos:start="13:47" pos:end="13:49">1</literal> <operator pos:start="13:49" pos:end="13:49">-</operator> <operator pos:start="13:51" pos:end="13:51">(</operator><name pos:start="13:52" pos:end="13:61"><name pos:start="13:52" pos:end="13:52">f</name><operator pos:start="13:53" pos:end="13:54">-&gt;</operator><name pos:start="13:55" pos:end="13:61">version</name></name> <operator pos:start="13:63" pos:end="13:63">&gt;</operator> <literal type="number" pos:start="13:65" pos:end="13:65">1</literal><operator pos:start="13:66" pos:end="13:66">)</operator></expr>]</index><index pos:start="13:68" pos:end="13:74">[<expr pos:start="13:69" pos:end="13:73"><name pos:start="13:69" pos:end="13:73">index</name></expr>]</index></name><operator pos:start="13:75" pos:end="13:75">.</operator><name pos:start="13:76" pos:end="13:80">table</name></expr></argument>,

                               <argument pos:start="15:32" pos:end="15:50"><expr pos:start="15:32" pos:end="15:50"><name pos:start="15:32" pos:end="15:50">BLOCK_TYPE_VLC_BITS</name></expr></argument>, <argument pos:start="15:53" pos:end="15:53"><expr pos:start="15:53" pos:end="15:53"><literal type="number" pos:start="15:53" pos:end="15:53">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:43"><decl pos:start="17:5" pos:end="17:42"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">uint16_t</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:19">start</name> <init pos:start="17:21" pos:end="17:42">= <expr pos:start="17:23" pos:end="17:42"><name pos:start="17:23" pos:end="17:42"><name pos:start="17:23" pos:end="17:23">f</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:42">last_frame_buffer</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:81"><decl pos:start="19:5" pos:end="19:80"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">uint16_t</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:17">end</name>   <init pos:start="19:21" pos:end="19:80">= <expr pos:start="19:23" pos:end="19:80"><name pos:start="19:23" pos:end="19:27">start</name> <operator pos:start="19:29" pos:end="19:29">+</operator> <name pos:start="19:31" pos:end="19:36">stride</name> <operator pos:start="19:38" pos:end="19:38">*</operator> <operator pos:start="19:40" pos:end="19:40">(</operator><name pos:start="19:41" pos:end="19:56"><name pos:start="19:41" pos:end="19:41">f</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:48">avctx</name><operator pos:start="19:49" pos:end="19:50">-&gt;</operator><name pos:start="19:51" pos:end="19:56">height</name></name> <operator pos:start="19:58" pos:end="19:58">-</operator> <name pos:start="19:60" pos:end="19:60">h</name> <operator pos:start="19:62" pos:end="19:62">+</operator> <literal type="number" pos:start="19:64" pos:end="19:64">1</literal><operator pos:start="19:65" pos:end="19:65">)</operator> <operator pos:start="19:67" pos:end="19:67">-</operator> <operator pos:start="19:69" pos:end="19:69">(</operator><literal type="number" pos:start="19:70" pos:end="19:70">1</literal> <operator pos:start="19:72" pos:end="19:73">&lt;&lt;</operator> <name pos:start="19:75" pos:end="19:79">log2w</name><operator pos:start="19:80" pos:end="19:80">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:20"><decl pos:start="23:5" pos:end="23:19"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:13">scale</name>   <init pos:start="23:17" pos:end="23:19">= <expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:20"><decl pos:start="25:5" pos:end="25:19"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">unsigned</name></type> <name pos:start="25:14" pos:end="25:15">dc</name> <init pos:start="25:17" pos:end="25:19">= <expr pos:start="25:19" pos:end="25:19"><literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="31:35"><if pos:start="29:5" pos:end="31:35">if <condition pos:start="29:8" pos:end="29:42">(<expr pos:start="29:9" pos:end="29:41"><name pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:12">code</name> <argument_list type="generic" pos:start="29:14" pos:end="29:26">&lt; <argument pos:start="29:16" pos:end="29:24"><expr pos:start="29:16" pos:end="29:24"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal> <operator pos:start="29:18" pos:end="29:19">||</operator> <name pos:start="29:21" pos:end="29:24">code</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="29:28" pos:end="29:28">6</literal> <operator pos:start="29:30" pos:end="29:31">||</operator> <name pos:start="29:33" pos:end="29:37">log2w</name> <operator pos:start="29:39" pos:end="29:39">&lt;</operator> <literal type="number" pos:start="29:41" pos:end="29:41">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:35"><block_content pos:start="31:9" pos:end="31:35">

        <return pos:start="31:9" pos:end="31:35">return <expr pos:start="31:16" pos:end="31:34"><name pos:start="31:16" pos:end="31:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="81:5"><if pos:start="35:5" pos:end="49:5">if <condition pos:start="35:8" pos:end="35:18">(<expr pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:12">code</name> <operator pos:start="35:14" pos:end="35:15">==</operator> <literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>)</condition> <block pos:start="35:20" pos:end="49:5">{<block_content pos:start="37:9" pos:end="47:52">

        <expr_stmt pos:start="37:9" pos:end="37:16"><expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:13">log2h</name><operator pos:start="37:14" pos:end="37:15">--</operator></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:23"><if pos:start="39:9" pos:end="41:23">if <condition pos:start="39:12" pos:end="39:74">(<expr pos:start="39:13" pos:end="39:73"><operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:16">ret</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:68"><name pos:start="39:20" pos:end="39:33">decode_p_block</name><argument_list pos:start="39:34" pos:end="39:68">(<argument pos:start="39:35" pos:end="39:35"><expr pos:start="39:35" pos:end="39:35"><name pos:start="39:35" pos:end="39:35">f</name></expr></argument>, <argument pos:start="39:38" pos:end="39:40"><expr pos:start="39:38" pos:end="39:40"><name pos:start="39:38" pos:end="39:40">dst</name></expr></argument>, <argument pos:start="39:43" pos:end="39:45"><expr pos:start="39:43" pos:end="39:45"><name pos:start="39:43" pos:end="39:45">src</name></expr></argument>, <argument pos:start="39:48" pos:end="39:52"><expr pos:start="39:48" pos:end="39:52"><name pos:start="39:48" pos:end="39:52">log2w</name></expr></argument>, <argument pos:start="39:55" pos:end="39:59"><expr pos:start="39:55" pos:end="39:59"><name pos:start="39:55" pos:end="39:59">log2h</name></expr></argument>, <argument pos:start="39:62" pos:end="39:67"><expr pos:start="39:62" pos:end="39:67"><name pos:start="39:62" pos:end="39:67">stride</name></expr></argument>)</argument_list></call><operator pos:start="39:69" pos:end="39:69">)</operator> <operator pos:start="39:71" pos:end="39:71">&lt;</operator> <literal type="number" pos:start="39:73" pos:end="39:73">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:23"><block_content pos:start="41:13" pos:end="41:23">

            <return pos:start="41:13" pos:end="41:23">return <expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <return pos:start="43:9" pos:end="47:52">return <expr pos:start="43:16" pos:end="47:51"><call pos:start="43:16" pos:end="47:51"><name pos:start="43:16" pos:end="43:29">decode_p_block</name><argument_list pos:start="43:30" pos:end="47:51">(<argument pos:start="43:31" pos:end="43:31"><expr pos:start="43:31" pos:end="43:31"><name pos:start="43:31" pos:end="43:31">f</name></expr></argument>, <argument pos:start="43:34" pos:end="43:56"><expr pos:start="43:34" pos:end="43:56"><name pos:start="43:34" pos:end="43:36">dst</name> <operator pos:start="43:38" pos:end="43:38">+</operator> <operator pos:start="43:40" pos:end="43:40">(</operator><name pos:start="43:41" pos:end="43:46">stride</name> <operator pos:start="43:48" pos:end="43:49">&lt;&lt;</operator> <name pos:start="43:51" pos:end="43:55">log2h</name><operator pos:start="43:56" pos:end="43:56">)</operator></expr></argument>,

                              <argument pos:start="45:31" pos:end="45:53"><expr pos:start="45:31" pos:end="45:53"><name pos:start="45:31" pos:end="45:33">src</name> <operator pos:start="45:35" pos:end="45:35">+</operator> <operator pos:start="45:37" pos:end="45:37">(</operator><name pos:start="45:38" pos:end="45:43">stride</name> <operator pos:start="45:45" pos:end="45:46">&lt;&lt;</operator> <name pos:start="45:48" pos:end="45:52">log2h</name><operator pos:start="45:53" pos:end="45:53">)</operator></expr></argument>,

                              <argument pos:start="47:31" pos:end="47:35"><expr pos:start="47:31" pos:end="47:35"><name pos:start="47:31" pos:end="47:35">log2w</name></expr></argument>, <argument pos:start="47:38" pos:end="47:42"><expr pos:start="47:38" pos:end="47:42"><name pos:start="47:38" pos:end="47:42">log2h</name></expr></argument>, <argument pos:start="47:45" pos:end="47:50"><expr pos:start="47:45" pos:end="47:50"><name pos:start="47:45" pos:end="47:50">stride</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="49:7" pos:end="63:5">else if <condition pos:start="49:15" pos:end="49:25">(<expr pos:start="49:16" pos:end="49:24"><name pos:start="49:16" pos:end="49:19">code</name> <operator pos:start="49:21" pos:end="49:22">==</operator> <literal type="number" pos:start="49:24" pos:end="49:24">2</literal></expr>)</condition> <block pos:start="49:27" pos:end="63:5">{<block_content pos:start="51:9" pos:end="61:52">

        <expr_stmt pos:start="51:9" pos:end="51:16"><expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:13">log2w</name><operator pos:start="51:14" pos:end="51:15">--</operator></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="55:23"><if pos:start="53:9" pos:end="55:23">if <condition pos:start="53:12" pos:end="53:75">(<expr pos:start="53:13" pos:end="53:74"><operator pos:start="53:13" pos:end="53:13">(</operator><name pos:start="53:14" pos:end="53:16">ret</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <call pos:start="53:20" pos:end="53:69"><name pos:start="53:20" pos:end="53:33">decode_p_block</name><argument_list pos:start="53:34" pos:end="53:69">(<argument pos:start="53:35" pos:end="53:35"><expr pos:start="53:35" pos:end="53:35"><name pos:start="53:35" pos:end="53:35">f</name></expr></argument>, <argument pos:start="53:38" pos:end="53:40"><expr pos:start="53:38" pos:end="53:40"><name pos:start="53:38" pos:end="53:40">dst</name></expr></argument> , <argument pos:start="53:44" pos:end="53:46"><expr pos:start="53:44" pos:end="53:46"><name pos:start="53:44" pos:end="53:46">src</name></expr></argument>, <argument pos:start="53:49" pos:end="53:53"><expr pos:start="53:49" pos:end="53:53"><name pos:start="53:49" pos:end="53:53">log2w</name></expr></argument>, <argument pos:start="53:56" pos:end="53:60"><expr pos:start="53:56" pos:end="53:60"><name pos:start="53:56" pos:end="53:60">log2h</name></expr></argument>, <argument pos:start="53:63" pos:end="53:68"><expr pos:start="53:63" pos:end="53:68"><name pos:start="53:63" pos:end="53:68">stride</name></expr></argument>)</argument_list></call><operator pos:start="53:70" pos:end="53:70">)</operator> <operator pos:start="53:72" pos:end="53:72">&lt;</operator> <literal type="number" pos:start="53:74" pos:end="53:74">0</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:23"><block_content pos:start="55:13" pos:end="55:23">

            <return pos:start="55:13" pos:end="55:23">return <expr pos:start="55:20" pos:end="55:22"><name pos:start="55:20" pos:end="55:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <return pos:start="57:9" pos:end="61:52">return <expr pos:start="57:16" pos:end="61:51"><call pos:start="57:16" pos:end="61:51"><name pos:start="57:16" pos:end="57:29">decode_p_block</name><argument_list pos:start="57:30" pos:end="61:51">(<argument pos:start="57:31" pos:end="57:31"><expr pos:start="57:31" pos:end="57:31"><name pos:start="57:31" pos:end="57:31">f</name></expr></argument>, <argument pos:start="57:34" pos:end="57:51"><expr pos:start="57:34" pos:end="57:51"><name pos:start="57:34" pos:end="57:36">dst</name> <operator pos:start="57:38" pos:end="57:38">+</operator> <operator pos:start="57:40" pos:end="57:40">(</operator><literal type="number" pos:start="57:41" pos:end="57:41">1</literal> <operator pos:start="57:43" pos:end="57:44">&lt;&lt;</operator> <name pos:start="57:46" pos:end="57:50">log2w</name><operator pos:start="57:51" pos:end="57:51">)</operator></expr></argument>,

                              <argument pos:start="59:31" pos:end="59:48"><expr pos:start="59:31" pos:end="59:48"><name pos:start="59:31" pos:end="59:33">src</name> <operator pos:start="59:35" pos:end="59:35">+</operator> <operator pos:start="59:37" pos:end="59:37">(</operator><literal type="number" pos:start="59:38" pos:end="59:38">1</literal> <operator pos:start="59:40" pos:end="59:41">&lt;&lt;</operator> <name pos:start="59:43" pos:end="59:47">log2w</name><operator pos:start="59:48" pos:end="59:48">)</operator></expr></argument>,

                              <argument pos:start="61:31" pos:end="61:35"><expr pos:start="61:31" pos:end="61:35"><name pos:start="61:31" pos:end="61:35">log2w</name></expr></argument>, <argument pos:start="61:38" pos:end="61:42"><expr pos:start="61:38" pos:end="61:42"><name pos:start="61:38" pos:end="61:42">log2h</name></expr></argument>, <argument pos:start="61:45" pos:end="61:50"><expr pos:start="61:45" pos:end="61:50"><name pos:start="61:45" pos:end="61:50">stride</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="63:7" pos:end="81:5">else if <condition pos:start="63:15" pos:end="63:25">(<expr pos:start="63:16" pos:end="63:24"><name pos:start="63:16" pos:end="63:19">code</name> <operator pos:start="63:21" pos:end="63:22">==</operator> <literal type="number" pos:start="63:24" pos:end="63:24">6</literal></expr>)</condition> <block pos:start="63:27" pos:end="81:5">{<block_content pos:start="65:9" pos:end="79:17">

        <if_stmt pos:start="65:9" pos:end="77:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:18">(<expr pos:start="65:13" pos:end="65:17"><name pos:start="65:13" pos:end="65:17">log2w</name></expr>)</condition> <block pos:start="65:20" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:55">

            <expr_stmt pos:start="67:13" pos:end="67:55"><expr pos:start="67:13" pos:end="67:54"><name pos:start="67:13" pos:end="67:18"><name pos:start="67:13" pos:end="67:15">dst</name><index pos:start="67:16" pos:end="67:18">[<expr pos:start="67:17" pos:end="67:17"><literal type="number" pos:start="67:17" pos:end="67:17">0</literal></expr>]</index></name>      <operator pos:start="67:25" pos:end="67:25">=</operator> <call pos:start="67:27" pos:end="67:54"><name pos:start="67:27" pos:end="67:46">bytestream2_get_le16</name><argument_list pos:start="67:47" pos:end="67:54">(<argument pos:start="67:48" pos:end="67:53"><expr pos:start="67:48" pos:end="67:53"><operator pos:start="67:48" pos:end="67:48">&amp;</operator><name pos:start="67:49" pos:end="67:53"><name pos:start="67:49" pos:end="67:49">f</name><operator pos:start="67:50" pos:end="67:51">-&gt;</operator><name pos:start="67:52" pos:end="67:53">g2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:55"><expr pos:start="69:13" pos:end="69:54"><name pos:start="69:13" pos:end="69:18"><name pos:start="69:13" pos:end="69:15">dst</name><index pos:start="69:16" pos:end="69:18">[<expr pos:start="69:17" pos:end="69:17"><literal type="number" pos:start="69:17" pos:end="69:17">1</literal></expr>]</index></name>      <operator pos:start="69:25" pos:end="69:25">=</operator> <call pos:start="69:27" pos:end="69:54"><name pos:start="69:27" pos:end="69:46">bytestream2_get_le16</name><argument_list pos:start="69:47" pos:end="69:54">(<argument pos:start="69:48" pos:end="69:53"><expr pos:start="69:48" pos:end="69:53"><operator pos:start="69:48" pos:end="69:48">&amp;</operator><name pos:start="69:49" pos:end="69:53"><name pos:start="69:49" pos:end="69:49">f</name><operator pos:start="69:50" pos:end="69:51">-&gt;</operator><name pos:start="69:52" pos:end="69:53">g2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="71:11" pos:end="77:9">else <block pos:start="71:16" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:55">

            <expr_stmt pos:start="73:13" pos:end="73:55"><expr pos:start="73:13" pos:end="73:54"><name pos:start="73:13" pos:end="73:18"><name pos:start="73:13" pos:end="73:15">dst</name><index pos:start="73:16" pos:end="73:18">[<expr pos:start="73:17" pos:end="73:17"><literal type="number" pos:start="73:17" pos:end="73:17">0</literal></expr>]</index></name>      <operator pos:start="73:25" pos:end="73:25">=</operator> <call pos:start="73:27" pos:end="73:54"><name pos:start="73:27" pos:end="73:46">bytestream2_get_le16</name><argument_list pos:start="73:47" pos:end="73:54">(<argument pos:start="73:48" pos:end="73:53"><expr pos:start="73:48" pos:end="73:53"><operator pos:start="73:48" pos:end="73:48">&amp;</operator><name pos:start="73:49" pos:end="73:53"><name pos:start="73:49" pos:end="73:49">f</name><operator pos:start="73:50" pos:end="73:51">-&gt;</operator><name pos:start="73:52" pos:end="73:53">g2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:55"><expr pos:start="75:13" pos:end="75:54"><name pos:start="75:13" pos:end="75:23"><name pos:start="75:13" pos:end="75:15">dst</name><index pos:start="75:16" pos:end="75:23">[<expr pos:start="75:17" pos:end="75:22"><name pos:start="75:17" pos:end="75:22">stride</name></expr>]</index></name> <operator pos:start="75:25" pos:end="75:25">=</operator> <call pos:start="75:27" pos:end="75:54"><name pos:start="75:27" pos:end="75:46">bytestream2_get_le16</name><argument_list pos:start="75:47" pos:end="75:54">(<argument pos:start="75:48" pos:end="75:53"><expr pos:start="75:48" pos:end="75:53"><operator pos:start="75:48" pos:end="75:48">&amp;</operator><name pos:start="75:49" pos:end="75:53"><name pos:start="75:49" pos:end="75:49">f</name><operator pos:start="75:50" pos:end="75:51">-&gt;</operator><name pos:start="75:52" pos:end="75:53">g2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="79:9" pos:end="79:17">return <expr pos:start="79:16" pos:end="79:16"><literal type="number" pos:start="79:16" pos:end="79:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="105:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:18">(<expr pos:start="85:9" pos:end="85:17"><name pos:start="85:9" pos:end="85:12">code</name> <operator pos:start="85:14" pos:end="85:15">==</operator> <literal type="number" pos:start="85:17" pos:end="85:17">0</literal></expr>)</condition> <block pos:start="85:20" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:51">

        <expr_stmt pos:start="87:9" pos:end="87:51"><expr pos:start="87:9" pos:end="87:50"><name pos:start="87:9" pos:end="87:11">src</name>  <operator pos:start="87:14" pos:end="87:15">+=</operator> <name pos:start="87:17" pos:end="87:50"><name pos:start="87:17" pos:end="87:17">f</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:21">mv</name><index pos:start="87:22" pos:end="87:50">[<expr pos:start="87:23" pos:end="87:49"><call pos:start="87:23" pos:end="87:49"><name pos:start="87:23" pos:end="87:42">bytestream2_get_byte</name><argument_list pos:start="87:43" pos:end="87:49">(<argument pos:start="87:44" pos:end="87:48"><expr pos:start="87:44" pos:end="87:48"><operator pos:start="87:44" pos:end="87:44">&amp;</operator><name pos:start="87:45" pos:end="87:48"><name pos:start="87:45" pos:end="87:45">f</name><operator pos:start="87:46" pos:end="87:47">-&gt;</operator><name pos:start="87:48" pos:end="87:48">g</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="89:7" pos:end="93:5">else if <condition pos:start="89:15" pos:end="89:44">(<expr pos:start="89:16" pos:end="89:43"><name pos:start="89:16" pos:end="89:19">code</name> <operator pos:start="89:21" pos:end="89:22">==</operator> <literal type="number" pos:start="89:24" pos:end="89:24">3</literal> <operator pos:start="89:26" pos:end="89:27">&amp;&amp;</operator> <name pos:start="89:29" pos:end="89:38"><name pos:start="89:29" pos:end="89:29">f</name><operator pos:start="89:30" pos:end="89:31">-&gt;</operator><name pos:start="89:32" pos:end="89:38">version</name></name> <operator pos:start="89:40" pos:end="89:41">&gt;=</operator> <literal type="number" pos:start="89:43" pos:end="89:43">2</literal></expr>)</condition> <block pos:start="89:46" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:17">

        <return pos:start="91:9" pos:end="91:17">return <expr pos:start="91:16" pos:end="91:16"><literal type="number" pos:start="91:16" pos:end="91:16">0</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="93:7" pos:end="99:5">else if <condition pos:start="93:15" pos:end="93:25">(<expr pos:start="93:16" pos:end="93:24"><name pos:start="93:16" pos:end="93:19">code</name> <operator pos:start="93:21" pos:end="93:22">==</operator> <literal type="number" pos:start="93:24" pos:end="93:24">4</literal></expr>)</condition> <block pos:start="93:27" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:45">

        <expr_stmt pos:start="95:9" pos:end="95:51"><expr pos:start="95:9" pos:end="95:50"><name pos:start="95:9" pos:end="95:11">src</name>  <operator pos:start="95:14" pos:end="95:15">+=</operator> <name pos:start="95:17" pos:end="95:50"><name pos:start="95:17" pos:end="95:17">f</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:21">mv</name><index pos:start="95:22" pos:end="95:50">[<expr pos:start="95:23" pos:end="95:49"><call pos:start="95:23" pos:end="95:49"><name pos:start="95:23" pos:end="95:42">bytestream2_get_byte</name><argument_list pos:start="95:43" pos:end="95:49">(<argument pos:start="95:44" pos:end="95:48"><expr pos:start="95:44" pos:end="95:48"><operator pos:start="95:44" pos:end="95:44">&amp;</operator><name pos:start="95:45" pos:end="95:48"><name pos:start="95:45" pos:end="95:45">f</name><operator pos:start="95:46" pos:end="95:47">-&gt;</operator><name pos:start="95:48" pos:end="95:48">g</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:45"><expr pos:start="97:9" pos:end="97:44"><name pos:start="97:9" pos:end="97:10">dc</name>    <operator pos:start="97:15" pos:end="97:15">=</operator> <call pos:start="97:17" pos:end="97:44"><name pos:start="97:17" pos:end="97:36">bytestream2_get_le16</name><argument_list pos:start="97:37" pos:end="97:44">(<argument pos:start="97:38" pos:end="97:43"><expr pos:start="97:38" pos:end="97:43"><operator pos:start="97:38" pos:end="97:38">&amp;</operator><name pos:start="97:39" pos:end="97:43"><name pos:start="97:39" pos:end="97:39">f</name><operator pos:start="97:40" pos:end="97:41">-&gt;</operator><name pos:start="97:42" pos:end="97:43">g2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="99:7" pos:end="105:5">else if <condition pos:start="99:15" pos:end="99:25">(<expr pos:start="99:16" pos:end="99:24"><name pos:start="99:16" pos:end="99:19">code</name> <operator pos:start="99:21" pos:end="99:22">==</operator> <literal type="number" pos:start="99:24" pos:end="99:24">5</literal></expr>)</condition> <block pos:start="99:27" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:45">

        <expr_stmt pos:start="101:9" pos:end="101:18"><expr pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:13">scale</name> <operator pos:start="101:15" pos:end="101:15">=</operator> <literal type="number" pos:start="101:17" pos:end="101:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:45"><expr pos:start="103:9" pos:end="103:44"><name pos:start="103:9" pos:end="103:10">dc</name>    <operator pos:start="103:15" pos:end="103:15">=</operator> <call pos:start="103:17" pos:end="103:44"><name pos:start="103:17" pos:end="103:36">bytestream2_get_le16</name><argument_list pos:start="103:37" pos:end="103:44">(<argument pos:start="103:38" pos:end="103:43"><expr pos:start="103:38" pos:end="103:43"><operator pos:start="103:38" pos:end="103:38">&amp;</operator><name pos:start="103:39" pos:end="103:43"><name pos:start="103:39" pos:end="103:39">f</name><operator pos:start="103:40" pos:end="103:41">-&gt;</operator><name pos:start="103:42" pos:end="103:43">g2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:33">(<expr pos:start="109:9" pos:end="109:32"><name pos:start="109:9" pos:end="109:13">start</name> <operator pos:start="109:15" pos:end="109:15">&gt;</operator> <name pos:start="109:17" pos:end="109:19">src</name> <operator pos:start="109:21" pos:end="109:22">||</operator> <name pos:start="109:24" pos:end="109:26">src</name> <operator pos:start="109:28" pos:end="109:28">&gt;</operator> <name pos:start="109:30" pos:end="109:32">end</name></expr>)</condition> <block pos:start="109:35" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:35">

        <expr_stmt pos:start="111:9" pos:end="111:58"><expr pos:start="111:9" pos:end="111:57"><call pos:start="111:9" pos:end="111:57"><name pos:start="111:9" pos:end="111:14">av_log</name><argument_list pos:start="111:15" pos:end="111:57">(<argument pos:start="111:16" pos:end="111:23"><expr pos:start="111:16" pos:end="111:23"><name pos:start="111:16" pos:end="111:23"><name pos:start="111:16" pos:end="111:16">f</name><operator pos:start="111:17" pos:end="111:18">-&gt;</operator><name pos:start="111:19" pos:end="111:23">avctx</name></name></expr></argument>, <argument pos:start="111:26" pos:end="111:37"><expr pos:start="111:26" pos:end="111:37"><name pos:start="111:26" pos:end="111:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="111:40" pos:end="111:56"><expr pos:start="111:40" pos:end="111:56"><literal type="string" pos:start="111:40" pos:end="111:56">"mv out of pic\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="113:9" pos:end="113:35">return <expr pos:start="113:16" pos:end="113:34"><name pos:start="113:16" pos:end="113:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:48"><expr pos:start="119:5" pos:end="119:47"><call pos:start="119:5" pos:end="119:47"><name pos:start="119:5" pos:end="119:8">mcdc</name><argument_list pos:start="119:9" pos:end="119:47">(<argument pos:start="119:10" pos:end="119:12"><expr pos:start="119:10" pos:end="119:12"><name pos:start="119:10" pos:end="119:12">dst</name></expr></argument>, <argument pos:start="119:15" pos:end="119:17"><expr pos:start="119:15" pos:end="119:17"><name pos:start="119:15" pos:end="119:17">src</name></expr></argument>, <argument pos:start="119:20" pos:end="119:24"><expr pos:start="119:20" pos:end="119:24"><name pos:start="119:20" pos:end="119:24">log2w</name></expr></argument>, <argument pos:start="119:27" pos:end="119:27"><expr pos:start="119:27" pos:end="119:27"><name pos:start="119:27" pos:end="119:27">h</name></expr></argument>, <argument pos:start="119:30" pos:end="119:35"><expr pos:start="119:30" pos:end="119:35"><name pos:start="119:30" pos:end="119:35">stride</name></expr></argument>, <argument pos:start="119:38" pos:end="119:42"><expr pos:start="119:38" pos:end="119:42"><name pos:start="119:38" pos:end="119:42">scale</name></expr></argument>, <argument pos:start="119:45" pos:end="119:46"><expr pos:start="119:45" pos:end="119:46"><name pos:start="119:45" pos:end="119:46">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
