<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12016.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">OutputStream</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:38">new_output_stream</name><parameter_list pos:start="1:39" pos:end="1:101">(<parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:53">OptionsContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">o</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:77"><decl pos:start="1:59" pos:end="1:77"><type pos:start="1:59" pos:end="1:77"><name pos:start="1:59" pos:end="1:73">AVFormatContext</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:77">oc</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:100"><decl pos:start="1:80" pos:end="1:100"><type pos:start="1:80" pos:end="1:100"><name pos:start="1:80" pos:end="1:95"><name pos:start="1:80" pos:end="1:83">enum</name> <name pos:start="1:85" pos:end="1:95">AVMediaType</name></name></type> <name pos:start="1:97" pos:end="1:100">type</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="199:1">{<block_content pos:start="5:5" pos:end="197:15">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">OutputStream</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:48">= <expr pos:start="7:20" pos:end="7:48"><call pos:start="7:20" pos:end="7:48"><name pos:start="7:20" pos:end="7:38">avformat_new_stream</name><argument_list pos:start="7:39" pos:end="7:48">(<argument pos:start="7:40" pos:end="7:41"><expr pos:start="7:40" pos:end="7:41"><name pos:start="7:40" pos:end="7:41">oc</name></expr></argument>, <argument pos:start="7:44" pos:end="7:47"><expr pos:start="7:44" pos:end="7:47"><name pos:start="7:44" pos:end="7:47">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">idx</name>      <init pos:start="9:18" pos:end="9:37">= <expr pos:start="9:20" pos:end="9:37"><name pos:start="9:20" pos:end="9:33"><name pos:start="9:20" pos:end="9:21">oc</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:33">nb_streams</name></name> <operator pos:start="9:35" pos:end="9:35">-</operator> <literal type="number" pos:start="9:37" pos:end="9:37">1</literal></expr></init></decl>, <decl pos:start="9:40" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:40" pos:end="9:42">ret</name> <init pos:start="9:44" pos:end="9:46">= <expr pos:start="9:46" pos:end="9:46"><literal type="number" pos:start="9:46" pos:end="9:46">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:22">max_frames</name> <init pos:start="11:24" pos:end="11:34">= <expr pos:start="11:26" pos:end="11:34"><name pos:start="11:26" pos:end="11:34">INT64_MAX</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:13">bsf</name> <init pos:start="13:15" pos:end="13:20">= <expr pos:start="13:17" pos:end="13:20"><name pos:start="13:17" pos:end="13:20">NULL</name></expr></init></decl>, <decl pos:start="13:23" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:10"><modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:27">next</name></decl>, <decl pos:start="13:30" pos:end="13:46"><type ref="prev" pos:start="13:5" pos:end="13:10"><modifier pos:start="13:30" pos:end="13:30">*</modifier></type><name pos:start="13:31" pos:end="13:39">codec_tag</name> <init pos:start="13:41" pos:end="13:46">= <expr pos:start="13:43" pos:end="13:46"><name pos:start="13:43" pos:end="13:46">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:54"><decl pos:start="15:5" pos:end="15:34"><type pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:28">AVBitStreamFilterContext</name> <modifier pos:start="15:30" pos:end="15:30">*</modifier></type><name pos:start="15:31" pos:end="15:34">bsfc</name></decl>, <decl pos:start="15:37" pos:end="15:53"><type ref="prev" pos:start="15:5" pos:end="15:30"><modifier pos:start="15:37" pos:end="15:37">*</modifier></type><name pos:start="15:38" pos:end="15:46">bsfc_prev</name> <init pos:start="15:48" pos:end="15:53">= <expr pos:start="15:50" pos:end="15:53"><name pos:start="15:50" pos:end="15:53">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">double</name></type> <name pos:start="17:12" pos:end="17:17">qscale</name> <init pos:start="17:19" pos:end="17:22">= <expr pos:start="17:21" pos:end="17:22"><operator pos:start="17:21" pos:end="17:21">-</operator><literal type="number" pos:start="17:22" pos:end="17:22">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:50"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:8">char</name> <modifier pos:start="19:10" pos:end="19:10">*</modifier></type><name pos:start="19:11" pos:end="19:13">buf</name> <init pos:start="19:15" pos:end="19:20">= <expr pos:start="19:17" pos:end="19:20"><name pos:start="19:17" pos:end="19:20">NULL</name></expr></init></decl>, <decl pos:start="19:23" pos:end="19:33"><type ref="prev" pos:start="19:5" pos:end="19:10"><modifier pos:start="19:23" pos:end="19:23">*</modifier></type><name pos:start="19:24" pos:end="19:26">arg</name> <init pos:start="19:28" pos:end="19:33">= <expr pos:start="19:30" pos:end="19:33"><name pos:start="19:30" pos:end="19:33">NULL</name></expr></init></decl>, <decl pos:start="19:36" pos:end="19:49"><type ref="prev" pos:start="19:5" pos:end="19:10"><modifier pos:start="19:36" pos:end="19:36">*</modifier></type><name pos:start="19:37" pos:end="19:42">preset</name> <init pos:start="19:44" pos:end="19:49">= <expr pos:start="19:46" pos:end="19:49"><name pos:start="19:46" pos:end="19:49">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:15">AVIOContext</name> <modifier pos:start="21:17" pos:end="21:17">*</modifier></type><name pos:start="21:18" pos:end="21:18">s</name> <init pos:start="21:20" pos:end="21:25">= <expr pos:start="21:22" pos:end="21:25"><name pos:start="21:22" pos:end="21:25">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:12">(<expr pos:start="25:9" pos:end="25:11"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:11">st</name></expr>)</condition> <block pos:start="25:14" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:24">

        <expr_stmt pos:start="27:9" pos:end="27:64"><expr pos:start="27:9" pos:end="27:63"><call pos:start="27:9" pos:end="27:63"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:63">(<argument pos:start="27:16" pos:end="27:19"><expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">NULL</name></expr></argument>, <argument pos:start="27:22" pos:end="27:33"><expr pos:start="27:22" pos:end="27:33"><name pos:start="27:22" pos:end="27:33">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="27:36" pos:end="27:62"><expr pos:start="27:36" pos:end="27:62"><literal type="string" pos:start="27:36" pos:end="27:62">"Could not alloc stream.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:24"><expr pos:start="29:9" pos:end="29:23"><call pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:20">exit_program</name><argument_list pos:start="29:21" pos:end="29:23">(<argument pos:start="29:22" pos:end="29:22"><expr pos:start="29:22" pos:end="29:22"><literal type="number" pos:start="29:22" pos:end="29:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="37:53"><if pos:start="35:5" pos:end="37:53">if <condition pos:start="35:8" pos:end="35:48">(<expr pos:start="35:9" pos:end="35:47"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:10">oc</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:22">nb_streams</name></name> <operator pos:start="35:24" pos:end="35:24">-</operator> <literal type="number" pos:start="35:26" pos:end="35:26">1</literal> <operator pos:start="35:28" pos:end="35:28">&lt;</operator> <name pos:start="35:30" pos:end="35:47"><name pos:start="35:30" pos:end="35:30">o</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:47">nb_streamid_map</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:53"><block_content pos:start="37:9" pos:end="37:53">

        <expr_stmt pos:start="37:9" pos:end="37:53"><expr pos:start="37:9" pos:end="37:52"><name pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:10">st</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:14">id</name></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:52"><name pos:start="37:18" pos:end="37:18">o</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:32">streamid_map</name><index pos:start="37:33" pos:end="37:52">[<expr pos:start="37:34" pos:end="37:51"><name pos:start="37:34" pos:end="37:47"><name pos:start="37:34" pos:end="37:35">oc</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:47">nb_streams</name></name> <operator pos:start="37:49" pos:end="37:49">-</operator> <literal type="number" pos:start="37:51" pos:end="37:51">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:55"><expr pos:start="41:5" pos:end="43:54"><name pos:start="41:5" pos:end="41:18">output_streams</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <call pos:start="41:22" pos:end="43:54"><name pos:start="41:22" pos:end="41:31">grow_array</name><argument_list pos:start="41:32" pos:end="43:54">(<argument pos:start="41:33" pos:end="41:46"><expr pos:start="41:33" pos:end="41:46"><name pos:start="41:33" pos:end="41:46">output_streams</name></expr></argument>, <argument pos:start="41:49" pos:end="41:71"><expr pos:start="41:49" pos:end="41:71"><sizeof pos:start="41:49" pos:end="41:71">sizeof<argument_list pos:start="41:55" pos:end="41:71">(<argument pos:start="41:56" pos:end="41:70"><expr pos:start="41:56" pos:end="41:70"><operator pos:start="41:56" pos:end="41:56">*</operator><name pos:start="41:57" pos:end="41:70">output_streams</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="41:74" pos:end="41:91"><expr pos:start="41:74" pos:end="41:91"><operator pos:start="41:74" pos:end="41:74">&amp;</operator><name pos:start="41:75" pos:end="41:91">nb_output_streams</name></expr></argument>,

                                <argument pos:start="43:33" pos:end="43:53"><expr pos:start="43:33" pos:end="43:53"><name pos:start="43:33" pos:end="43:49">nb_output_streams</name> <operator pos:start="43:51" pos:end="43:51">+</operator> <literal type="number" pos:start="43:53" pos:end="43:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:49"><expr pos:start="45:5" pos:end="45:48"><name pos:start="45:5" pos:end="45:7">ost</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <operator pos:start="45:11" pos:end="45:11">&amp;</operator><name pos:start="45:12" pos:end="45:48"><name pos:start="45:12" pos:end="45:25">output_streams</name><index pos:start="45:26" pos:end="45:48">[<expr pos:start="45:27" pos:end="45:47"><name pos:start="45:27" pos:end="45:43">nb_output_streams</name> <operator pos:start="45:45" pos:end="45:45">-</operator> <literal type="number" pos:start="45:47" pos:end="45:47">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:38"><expr pos:start="47:5" pos:end="47:37"><name pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:7">ost</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:19">file_index</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:37">nb_output_files</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:21"><expr pos:start="49:5" pos:end="49:20"><name pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:7">ost</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:14">index</name></name> <operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:20">idx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:20"><expr pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:11"><name pos:start="51:5" pos:end="51:7">ost</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:11">st</name></name>    <operator pos:start="51:16" pos:end="51:16">=</operator> <name pos:start="51:18" pos:end="51:19">st</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:33"><expr pos:start="53:5" pos:end="53:32"><name pos:start="53:5" pos:end="53:25"><name pos:start="53:5" pos:end="53:6">st</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:13">codec</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:25">codec_type</name></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:32">type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:45"><expr pos:start="55:5" pos:end="55:44"><name pos:start="55:5" pos:end="55:12"><name pos:start="55:5" pos:end="55:7">ost</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:12">enc</name></name> <operator pos:start="55:14" pos:end="55:14">=</operator> <call pos:start="55:16" pos:end="55:44"><name pos:start="55:16" pos:end="55:27">choose_codec</name><argument_list pos:start="55:28" pos:end="55:44">(<argument pos:start="55:29" pos:end="55:29"><expr pos:start="55:29" pos:end="55:29"><name pos:start="55:29" pos:end="55:29">o</name></expr></argument>, <argument pos:start="55:32" pos:end="55:33"><expr pos:start="55:32" pos:end="55:33"><name pos:start="55:32" pos:end="55:33">oc</name></expr></argument>, <argument pos:start="55:36" pos:end="55:37"><expr pos:start="55:36" pos:end="55:37"><name pos:start="55:36" pos:end="55:37">st</name></expr></argument>, <argument pos:start="55:40" pos:end="55:43"><expr pos:start="55:40" pos:end="55:43"><name pos:start="55:40" pos:end="55:43">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:17">(<expr pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:11">ost</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:16">enc</name></name></expr>)</condition> <block pos:start="57:19" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:73">

        <expr_stmt pos:start="59:9" pos:end="59:73"><expr pos:start="59:9" pos:end="59:72"><name pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:11">ost</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:17">opts</name></name>  <operator pos:start="59:20" pos:end="59:20">=</operator> <call pos:start="59:22" pos:end="59:72"><name pos:start="59:22" pos:end="59:38">filter_codec_opts</name><argument_list pos:start="59:39" pos:end="59:72">(<argument pos:start="59:40" pos:end="59:49"><expr pos:start="59:40" pos:end="59:49"><name pos:start="59:40" pos:end="59:49">codec_opts</name></expr></argument>, <argument pos:start="59:52" pos:end="59:63"><expr pos:start="59:52" pos:end="59:63"><name pos:start="59:52" pos:end="59:63"><name pos:start="59:52" pos:end="59:54">ost</name><operator pos:start="59:55" pos:end="59:56">-&gt;</operator><name pos:start="59:57" pos:end="59:59">enc</name><operator pos:start="59:60" pos:end="59:61">-&gt;</operator><name pos:start="59:62" pos:end="59:63">id</name></name></expr></argument>, <argument pos:start="59:66" pos:end="59:67"><expr pos:start="59:66" pos:end="59:67"><name pos:start="59:66" pos:end="59:67">oc</name></expr></argument>, <argument pos:start="59:70" pos:end="59:71"><expr pos:start="59:70" pos:end="59:71"><name pos:start="59:70" pos:end="59:71">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:55"><expr pos:start="65:5" pos:end="65:54"><call pos:start="65:5" pos:end="65:54"><name pos:start="65:5" pos:end="65:33">avcodec_get_context_defaults3</name><argument_list pos:start="65:34" pos:end="65:54">(<argument pos:start="65:35" pos:end="65:43"><expr pos:start="65:35" pos:end="65:43"><name pos:start="65:35" pos:end="65:43"><name pos:start="65:35" pos:end="65:36">st</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:43">codec</name></name></expr></argument>, <argument pos:start="65:46" pos:end="65:53"><expr pos:start="65:46" pos:end="65:53"><name pos:start="65:46" pos:end="65:53"><name pos:start="65:46" pos:end="65:48">ost</name><operator pos:start="65:49" pos:end="65:50">-&gt;</operator><name pos:start="65:51" pos:end="65:53">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:33"><expr pos:start="67:5" pos:end="67:32"><name pos:start="67:5" pos:end="67:25"><name pos:start="67:5" pos:end="67:6">st</name><operator pos:start="67:7" pos:end="67:8">-&gt;</operator><name pos:start="67:9" pos:end="67:13">codec</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:25">codec_type</name></name> <operator pos:start="67:27" pos:end="67:27">=</operator> <name pos:start="67:29" pos:end="67:32">type</name></expr>;</expr_stmt> <comment type="line" pos:start="67:35" pos:end="67:115">// XXX hack, avcodec_get_context_defaults2() sets type to unknown for stream copy</comment>



    <expr_stmt pos:start="71:5" pos:end="71:55"><expr pos:start="71:5" pos:end="71:54"><call pos:start="71:5" pos:end="71:54"><name pos:start="71:5" pos:end="71:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="71:25" pos:end="71:54">(<argument pos:start="71:26" pos:end="71:32"><expr pos:start="71:26" pos:end="71:32"><name pos:start="71:26" pos:end="71:32">presets</name></expr></argument>, <argument pos:start="71:35" pos:end="71:37"><expr pos:start="71:35" pos:end="71:37"><name pos:start="71:35" pos:end="71:37">str</name></expr></argument>, <argument pos:start="71:40" pos:end="71:45"><expr pos:start="71:40" pos:end="71:45"><name pos:start="71:40" pos:end="71:45">preset</name></expr></argument>, <argument pos:start="71:48" pos:end="71:49"><expr pos:start="71:48" pos:end="71:49"><name pos:start="71:48" pos:end="71:49">oc</name></expr></argument>, <argument pos:start="71:52" pos:end="71:53"><expr pos:start="71:52" pos:end="71:53"><name pos:start="71:52" pos:end="71:53">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="105:5"><if pos:start="73:5" pos:end="105:5">if <condition pos:start="73:8" pos:end="73:75">(<expr pos:start="73:9" pos:end="73:74"><name pos:start="73:9" pos:end="73:14">preset</name> <operator pos:start="73:16" pos:end="73:17">&amp;&amp;</operator> <operator pos:start="73:19" pos:end="73:19">(</operator><operator pos:start="73:20" pos:end="73:20">!</operator><operator pos:start="73:21" pos:end="73:21">(</operator><name pos:start="73:22" pos:end="73:24">ret</name> <operator pos:start="73:26" pos:end="73:26">=</operator> <call pos:start="73:28" pos:end="73:72"><name pos:start="73:28" pos:end="73:44">get_preset_file_2</name><argument_list pos:start="73:45" pos:end="73:72">(<argument pos:start="73:46" pos:end="73:51"><expr pos:start="73:46" pos:end="73:51"><name pos:start="73:46" pos:end="73:51">preset</name></expr></argument>, <argument pos:start="73:54" pos:end="73:67"><expr pos:start="73:54" pos:end="73:67"><name pos:start="73:54" pos:end="73:67"><name pos:start="73:54" pos:end="73:56">ost</name><operator pos:start="73:57" pos:end="73:58">-&gt;</operator><name pos:start="73:59" pos:end="73:61">enc</name><operator pos:start="73:62" pos:end="73:63">-&gt;</operator><name pos:start="73:64" pos:end="73:67">name</name></name></expr></argument>, <argument pos:start="73:70" pos:end="73:71"><expr pos:start="73:70" pos:end="73:71"><operator pos:start="73:70" pos:end="73:70">&amp;</operator><name pos:start="73:71" pos:end="73:71">s</name></expr></argument>)</argument_list></call><operator pos:start="73:73" pos:end="73:73">)</operator><operator pos:start="73:74" pos:end="73:74">)</operator></expr>)</condition> <block pos:start="73:77" pos:end="105:5">{<block_content pos:start="75:9" pos:end="103:22">

        <do pos:start="75:9" pos:end="101:34">do  <block pos:start="75:13" pos:end="101:9">{<block_content pos:start="77:13" pos:end="99:25">

            <expr_stmt pos:start="77:13" pos:end="77:30"><expr pos:start="77:13" pos:end="77:29"><name pos:start="77:13" pos:end="77:15">buf</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <call pos:start="77:19" pos:end="77:29"><name pos:start="77:19" pos:end="77:26">get_line</name><argument_list pos:start="77:27" pos:end="77:29">(<argument pos:start="77:28" pos:end="77:28"><expr pos:start="77:28" pos:end="77:28"><name pos:start="77:28" pos:end="77:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="85:13"><if pos:start="79:13" pos:end="85:13">if <condition pos:start="79:16" pos:end="79:41">(<expr pos:start="79:17" pos:end="79:40"><operator pos:start="79:17" pos:end="79:17">!</operator><name pos:start="79:18" pos:end="79:23"><name pos:start="79:18" pos:end="79:20">buf</name><index pos:start="79:21" pos:end="79:23">[<expr pos:start="79:22" pos:end="79:22"><literal type="number" pos:start="79:22" pos:end="79:22">0</literal></expr>]</index></name> <operator pos:start="79:25" pos:end="79:26">||</operator> <name pos:start="79:28" pos:end="79:33"><name pos:start="79:28" pos:end="79:30">buf</name><index pos:start="79:31" pos:end="79:33">[<expr pos:start="79:32" pos:end="79:32"><literal type="number" pos:start="79:32" pos:end="79:32">0</literal></expr>]</index></name> <operator pos:start="79:35" pos:end="79:36">==</operator> <literal type="char" pos:start="79:38" pos:end="79:40">'#'</literal></expr>)</condition> <block pos:start="79:43" pos:end="85:13">{<block_content pos:start="81:17" pos:end="83:25">

                <expr_stmt pos:start="81:17" pos:end="81:29"><expr pos:start="81:17" pos:end="81:28"><call pos:start="81:17" pos:end="81:28"><name pos:start="81:17" pos:end="81:23">av_free</name><argument_list pos:start="81:24" pos:end="81:28">(<argument pos:start="81:25" pos:end="81:27"><expr pos:start="81:25" pos:end="81:27"><name pos:start="81:25" pos:end="81:27">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="83:17" pos:end="83:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="87:13" pos:end="93:13"><if pos:start="87:13" pos:end="93:13">if <condition pos:start="87:16" pos:end="87:42">(<expr pos:start="87:17" pos:end="87:41"><operator pos:start="87:17" pos:end="87:17">!</operator><operator pos:start="87:18" pos:end="87:18">(</operator><name pos:start="87:19" pos:end="87:21">arg</name> <operator pos:start="87:23" pos:end="87:23">=</operator> <call pos:start="87:25" pos:end="87:40"><name pos:start="87:25" pos:end="87:30">strchr</name><argument_list pos:start="87:31" pos:end="87:40">(<argument pos:start="87:32" pos:end="87:34"><expr pos:start="87:32" pos:end="87:34"><name pos:start="87:32" pos:end="87:34">buf</name></expr></argument>, <argument pos:start="87:37" pos:end="87:39"><expr pos:start="87:37" pos:end="87:39"><literal type="char" pos:start="87:37" pos:end="87:39">'='</literal></expr></argument>)</argument_list></call><operator pos:start="87:41" pos:end="87:41">)</operator></expr>)</condition> <block pos:start="87:44" pos:end="93:13">{<block_content pos:start="89:17" pos:end="91:32">

                <expr_stmt pos:start="89:17" pos:end="89:87"><expr pos:start="89:17" pos:end="89:86"><call pos:start="89:17" pos:end="89:86"><name pos:start="89:17" pos:end="89:22">av_log</name><argument_list pos:start="89:23" pos:end="89:86">(<argument pos:start="89:24" pos:end="89:27"><expr pos:start="89:24" pos:end="89:27"><name pos:start="89:24" pos:end="89:27">NULL</name></expr></argument>, <argument pos:start="89:30" pos:end="89:41"><expr pos:start="89:30" pos:end="89:41"><name pos:start="89:30" pos:end="89:41">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="89:44" pos:end="89:85"><expr pos:start="89:44" pos:end="89:85"><literal type="string" pos:start="89:44" pos:end="89:85">"Invalid line found in the preset file.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:32"><expr pos:start="91:17" pos:end="91:31"><call pos:start="91:17" pos:end="91:31"><name pos:start="91:17" pos:end="91:28">exit_program</name><argument_list pos:start="91:29" pos:end="91:31">(<argument pos:start="91:30" pos:end="91:30"><expr pos:start="91:30" pos:end="91:30"><literal type="number" pos:start="91:30" pos:end="91:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:23"><expr pos:start="95:13" pos:end="95:22"><operator pos:start="95:13" pos:end="95:13">*</operator><name pos:start="95:14" pos:end="95:16">arg</name><operator pos:start="95:17" pos:end="95:18">++</operator> <operator pos:start="95:20" pos:end="95:20">=</operator> <literal type="number" pos:start="95:22" pos:end="95:22">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:70"><expr pos:start="97:13" pos:end="97:69"><call pos:start="97:13" pos:end="97:69"><name pos:start="97:13" pos:end="97:23">av_dict_set</name><argument_list pos:start="97:24" pos:end="97:69">(<argument pos:start="97:25" pos:end="97:34"><expr pos:start="97:25" pos:end="97:34"><operator pos:start="97:25" pos:end="97:25">&amp;</operator><name pos:start="97:26" pos:end="97:34"><name pos:start="97:26" pos:end="97:28">ost</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:34">opts</name></name></expr></argument>, <argument pos:start="97:37" pos:end="97:39"><expr pos:start="97:37" pos:end="97:39"><name pos:start="97:37" pos:end="97:39">buf</name></expr></argument>, <argument pos:start="97:42" pos:end="97:44"><expr pos:start="97:42" pos:end="97:44"><name pos:start="97:42" pos:end="97:44">arg</name></expr></argument>, <argument pos:start="97:47" pos:end="97:68"><expr pos:start="97:47" pos:end="97:68"><name pos:start="97:47" pos:end="97:68">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:25"><expr pos:start="99:13" pos:end="99:24"><call pos:start="99:13" pos:end="99:24"><name pos:start="99:13" pos:end="99:19">av_free</name><argument_list pos:start="99:20" pos:end="99:24">(<argument pos:start="99:21" pos:end="99:23"><expr pos:start="99:21" pos:end="99:23"><name pos:start="99:21" pos:end="99:23">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="101:17" pos:end="101:33">(<expr pos:start="101:18" pos:end="101:32"><operator pos:start="101:18" pos:end="101:18">!</operator><name pos:start="101:19" pos:end="101:32"><name pos:start="101:19" pos:end="101:19">s</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:32">eof_reached</name></name></expr>)</condition>;</do>

        <expr_stmt pos:start="103:9" pos:end="103:22"><expr pos:start="103:9" pos:end="103:21"><call pos:start="103:9" pos:end="103:21"><name pos:start="103:9" pos:end="103:18">avio_close</name><argument_list pos:start="103:19" pos:end="103:21">(<argument pos:start="103:20" pos:end="103:20"><expr pos:start="103:20" pos:end="103:20"><name pos:start="103:20" pos:end="103:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="107:5" pos:end="117:5"><if pos:start="107:5" pos:end="117:5">if <condition pos:start="107:8" pos:end="107:12">(<expr pos:start="107:9" pos:end="107:11"><name pos:start="107:9" pos:end="107:11">ret</name></expr>)</condition> <block pos:start="107:14" pos:end="117:5">{<block_content pos:start="109:9" pos:end="115:24">

        <expr_stmt pos:start="109:9" pos:end="113:52"><expr pos:start="109:9" pos:end="113:51"><call pos:start="109:9" pos:end="113:51"><name pos:start="109:9" pos:end="109:14">av_log</name><argument_list pos:start="109:15" pos:end="113:51">(<argument pos:start="109:16" pos:end="109:19"><expr pos:start="109:16" pos:end="109:19"><name pos:start="109:16" pos:end="109:19">NULL</name></expr></argument>, <argument pos:start="109:22" pos:end="109:33"><expr pos:start="109:22" pos:end="109:33"><name pos:start="109:22" pos:end="109:33">AV_LOG_FATAL</name></expr></argument>,

               <argument pos:start="111:16" pos:end="111:81"><expr pos:start="111:16" pos:end="111:81"><literal type="string" pos:start="111:16" pos:end="111:81">"Preset %s specified for stream %d:%d, but could not be opened.\n"</literal></expr></argument>,

               <argument pos:start="113:16" pos:end="113:21"><expr pos:start="113:16" pos:end="113:21"><name pos:start="113:16" pos:end="113:21">preset</name></expr></argument>, <argument pos:start="113:24" pos:end="113:38"><expr pos:start="113:24" pos:end="113:38"><name pos:start="113:24" pos:end="113:38"><name pos:start="113:24" pos:end="113:26">ost</name><operator pos:start="113:27" pos:end="113:28">-&gt;</operator><name pos:start="113:29" pos:end="113:38">file_index</name></name></expr></argument>, <argument pos:start="113:41" pos:end="113:50"><expr pos:start="113:41" pos:end="113:50"><name pos:start="113:41" pos:end="113:50"><name pos:start="113:41" pos:end="113:43">ost</name><operator pos:start="113:44" pos:end="113:45">-&gt;</operator><name pos:start="113:46" pos:end="113:50">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:24"><expr pos:start="115:9" pos:end="115:23"><call pos:start="115:9" pos:end="115:23"><name pos:start="115:9" pos:end="115:20">exit_program</name><argument_list pos:start="115:21" pos:end="115:23">(<argument pos:start="115:22" pos:end="115:22"><expr pos:start="115:22" pos:end="115:22"><literal type="number" pos:start="115:22" pos:end="115:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:62"><expr pos:start="121:5" pos:end="121:61"><call pos:start="121:5" pos:end="121:61"><name pos:start="121:5" pos:end="121:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="121:25" pos:end="121:61">(<argument pos:start="121:26" pos:end="121:35"><expr pos:start="121:26" pos:end="121:35"><name pos:start="121:26" pos:end="121:35">max_frames</name></expr></argument>, <argument pos:start="121:38" pos:end="121:40"><expr pos:start="121:38" pos:end="121:40"><name pos:start="121:38" pos:end="121:40">i64</name></expr></argument>, <argument pos:start="121:43" pos:end="121:52"><expr pos:start="121:43" pos:end="121:52"><name pos:start="121:43" pos:end="121:52">max_frames</name></expr></argument>, <argument pos:start="121:55" pos:end="121:56"><expr pos:start="121:55" pos:end="121:56"><name pos:start="121:55" pos:end="121:56">oc</name></expr></argument>, <argument pos:start="121:59" pos:end="121:60"><expr pos:start="121:59" pos:end="121:60"><name pos:start="121:59" pos:end="121:60">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:33"><expr pos:start="123:5" pos:end="123:32"><name pos:start="123:5" pos:end="123:19"><name pos:start="123:5" pos:end="123:7">ost</name><operator pos:start="123:8" pos:end="123:9">-&gt;</operator><name pos:start="123:10" pos:end="123:19">max_frames</name></name> <operator pos:start="123:21" pos:end="123:21">=</operator> <name pos:start="123:23" pos:end="123:32">max_frames</name></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:62"><expr pos:start="127:5" pos:end="127:61"><call pos:start="127:5" pos:end="127:61"><name pos:start="127:5" pos:end="127:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="127:25" pos:end="127:61">(<argument pos:start="127:26" pos:end="127:42"><expr pos:start="127:26" pos:end="127:42"><name pos:start="127:26" pos:end="127:42">bitstream_filters</name></expr></argument>, <argument pos:start="127:45" pos:end="127:47"><expr pos:start="127:45" pos:end="127:47"><name pos:start="127:45" pos:end="127:47">str</name></expr></argument>, <argument pos:start="127:50" pos:end="127:52"><expr pos:start="127:50" pos:end="127:52"><name pos:start="127:50" pos:end="127:52">bsf</name></expr></argument>, <argument pos:start="127:55" pos:end="127:56"><expr pos:start="127:55" pos:end="127:56"><name pos:start="127:55" pos:end="127:56">oc</name></expr></argument>, <argument pos:start="127:59" pos:end="127:60"><expr pos:start="127:59" pos:end="127:60"><name pos:start="127:59" pos:end="127:60">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="129:5" pos:end="157:5">while <condition pos:start="129:11" pos:end="129:15">(<expr pos:start="129:12" pos:end="129:14"><name pos:start="129:12" pos:end="129:14">bsf</name></expr>)</condition> <block pos:start="129:17" pos:end="157:5">{<block_content pos:start="131:9" pos:end="155:25">

        <if_stmt pos:start="131:9" pos:end="133:24"><if pos:start="131:9" pos:end="133:24">if <condition pos:start="131:12" pos:end="131:36">(<expr pos:start="131:13" pos:end="131:35"><name pos:start="131:13" pos:end="131:16">next</name> <operator pos:start="131:18" pos:end="131:18">=</operator> <call pos:start="131:20" pos:end="131:35"><name pos:start="131:20" pos:end="131:25">strchr</name><argument_list pos:start="131:26" pos:end="131:35">(<argument pos:start="131:27" pos:end="131:29"><expr pos:start="131:27" pos:end="131:29"><name pos:start="131:27" pos:end="131:29">bsf</name></expr></argument>, <argument pos:start="131:32" pos:end="131:34"><expr pos:start="131:32" pos:end="131:34"><literal type="char" pos:start="131:32" pos:end="131:34">','</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:24"><block_content pos:start="133:13" pos:end="133:24">

            <expr_stmt pos:start="133:13" pos:end="133:24"><expr pos:start="133:13" pos:end="133:23"><operator pos:start="133:13" pos:end="133:13">*</operator><name pos:start="133:14" pos:end="133:17">next</name><operator pos:start="133:18" pos:end="133:19">++</operator> <operator pos:start="133:21" pos:end="133:21">=</operator> <literal type="number" pos:start="133:23" pos:end="133:23">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="135:9" pos:end="141:9"><if pos:start="135:9" pos:end="141:9">if <condition pos:start="135:12" pos:end="135:52">(<expr pos:start="135:13" pos:end="135:51"><operator pos:start="135:13" pos:end="135:13">!</operator><operator pos:start="135:14" pos:end="135:14">(</operator><name pos:start="135:15" pos:end="135:18">bsfc</name> <operator pos:start="135:20" pos:end="135:20">=</operator> <call pos:start="135:22" pos:end="135:50"><name pos:start="135:22" pos:end="135:45">av_bitstream_filter_init</name><argument_list pos:start="135:46" pos:end="135:50">(<argument pos:start="135:47" pos:end="135:49"><expr pos:start="135:47" pos:end="135:49"><name pos:start="135:47" pos:end="135:49">bsf</name></expr></argument>)</argument_list></call><operator pos:start="135:51" pos:end="135:51">)</operator></expr>)</condition> <block pos:start="135:54" pos:end="141:9">{<block_content pos:start="137:13" pos:end="139:28">

            <expr_stmt pos:start="137:13" pos:end="137:77"><expr pos:start="137:13" pos:end="137:76"><call pos:start="137:13" pos:end="137:76"><name pos:start="137:13" pos:end="137:18">av_log</name><argument_list pos:start="137:19" pos:end="137:76">(<argument pos:start="137:20" pos:end="137:23"><expr pos:start="137:20" pos:end="137:23"><name pos:start="137:20" pos:end="137:23">NULL</name></expr></argument>, <argument pos:start="137:26" pos:end="137:37"><expr pos:start="137:26" pos:end="137:37"><name pos:start="137:26" pos:end="137:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="137:40" pos:end="137:70"><expr pos:start="137:40" pos:end="137:70"><literal type="string" pos:start="137:40" pos:end="137:70">"Unknown bitstream filter %s\n"</literal></expr></argument>, <argument pos:start="137:73" pos:end="137:75"><expr pos:start="137:73" pos:end="137:75"><name pos:start="137:73" pos:end="137:75">bsf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:28"><expr pos:start="139:13" pos:end="139:27"><call pos:start="139:13" pos:end="139:27"><name pos:start="139:13" pos:end="139:24">exit_program</name><argument_list pos:start="139:25" pos:end="139:27">(<argument pos:start="139:26" pos:end="139:26"><expr pos:start="139:26" pos:end="139:26"><literal type="number" pos:start="139:26" pos:end="139:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="143:9" pos:end="149:42"><if pos:start="143:9" pos:end="145:35">if <condition pos:start="143:12" pos:end="143:22">(<expr pos:start="143:13" pos:end="143:21"><name pos:start="143:13" pos:end="143:21">bsfc_prev</name></expr>)</condition><block type="pseudo" pos:start="145:13" pos:end="145:35"><block_content pos:start="145:13" pos:end="145:35">

            <expr_stmt pos:start="145:13" pos:end="145:35"><expr pos:start="145:13" pos:end="145:34"><name pos:start="145:13" pos:end="145:27"><name pos:start="145:13" pos:end="145:21">bsfc_prev</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:27">next</name></name> <operator pos:start="145:29" pos:end="145:29">=</operator> <name pos:start="145:31" pos:end="145:34">bsfc</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="147:9" pos:end="149:42">else<block type="pseudo" pos:start="149:13" pos:end="149:42"><block_content pos:start="149:13" pos:end="149:42">

            <expr_stmt pos:start="149:13" pos:end="149:42"><expr pos:start="149:13" pos:end="149:41"><name pos:start="149:13" pos:end="149:34"><name pos:start="149:13" pos:end="149:15">ost</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:34">bitstream_filters</name></name> <operator pos:start="149:36" pos:end="149:36">=</operator> <name pos:start="149:38" pos:end="149:41">bsfc</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="153:9" pos:end="153:25"><expr pos:start="153:9" pos:end="153:24"><name pos:start="153:9" pos:end="153:17">bsfc_prev</name> <operator pos:start="153:19" pos:end="153:19">=</operator> <name pos:start="153:21" pos:end="153:24">bsfc</name></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:25"><expr pos:start="155:9" pos:end="155:24"><name pos:start="155:9" pos:end="155:11">bsf</name>       <operator pos:start="155:19" pos:end="155:19">=</operator> <name pos:start="155:21" pos:end="155:24">next</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="161:5" pos:end="161:61"><expr pos:start="161:5" pos:end="161:60"><call pos:start="161:5" pos:end="161:60"><name pos:start="161:5" pos:end="161:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="161:25" pos:end="161:60">(<argument pos:start="161:26" pos:end="161:35"><expr pos:start="161:26" pos:end="161:35"><name pos:start="161:26" pos:end="161:35">codec_tags</name></expr></argument>, <argument pos:start="161:38" pos:end="161:40"><expr pos:start="161:38" pos:end="161:40"><name pos:start="161:38" pos:end="161:40">str</name></expr></argument>, <argument pos:start="161:43" pos:end="161:51"><expr pos:start="161:43" pos:end="161:51"><name pos:start="161:43" pos:end="161:51">codec_tag</name></expr></argument>, <argument pos:start="161:54" pos:end="161:55"><expr pos:start="161:54" pos:end="161:55"><name pos:start="161:54" pos:end="161:55">oc</name></expr></argument>, <argument pos:start="161:58" pos:end="161:59"><expr pos:start="161:58" pos:end="161:59"><name pos:start="161:58" pos:end="161:59">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="163:5" pos:end="173:5"><if pos:start="163:5" pos:end="173:5">if <condition pos:start="163:8" pos:end="163:18">(<expr pos:start="163:9" pos:end="163:17"><name pos:start="163:9" pos:end="163:17">codec_tag</name></expr>)</condition> <block pos:start="163:20" pos:end="173:5">{<block_content pos:start="165:9" pos:end="171:35">

        <decl_stmt pos:start="165:9" pos:end="165:51"><decl pos:start="165:9" pos:end="165:50"><type pos:start="165:9" pos:end="165:16"><name pos:start="165:9" pos:end="165:16">uint32_t</name></type> <name pos:start="165:18" pos:end="165:20">tag</name> <init pos:start="165:22" pos:end="165:50">= <expr pos:start="165:24" pos:end="165:50"><call pos:start="165:24" pos:end="165:50"><name pos:start="165:24" pos:end="165:29">strtol</name><argument_list pos:start="165:30" pos:end="165:50">(<argument pos:start="165:31" pos:end="165:39"><expr pos:start="165:31" pos:end="165:39"><name pos:start="165:31" pos:end="165:39">codec_tag</name></expr></argument>, <argument pos:start="165:42" pos:end="165:46"><expr pos:start="165:42" pos:end="165:46"><operator pos:start="165:42" pos:end="165:42">&amp;</operator><name pos:start="165:43" pos:end="165:46">next</name></expr></argument>, <argument pos:start="165:49" pos:end="165:49"><expr pos:start="165:49" pos:end="165:49"><literal type="number" pos:start="165:49" pos:end="165:49">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="167:9" pos:end="169:37"><if pos:start="167:9" pos:end="169:37">if <condition pos:start="167:12" pos:end="167:18">(<expr pos:start="167:13" pos:end="167:17"><operator pos:start="167:13" pos:end="167:13">*</operator><name pos:start="167:14" pos:end="167:17">next</name></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:37"><block_content pos:start="169:13" pos:end="169:37">

            <expr_stmt pos:start="169:13" pos:end="169:37"><expr pos:start="169:13" pos:end="169:36"><name pos:start="169:13" pos:end="169:15">tag</name> <operator pos:start="169:17" pos:end="169:17">=</operator> <call pos:start="169:19" pos:end="169:36"><name pos:start="169:19" pos:end="169:25">AV_RL32</name><argument_list pos:start="169:26" pos:end="169:36">(<argument pos:start="169:27" pos:end="169:35"><expr pos:start="169:27" pos:end="169:35"><name pos:start="169:27" pos:end="169:35">codec_tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:35"><expr pos:start="171:9" pos:end="171:34"><name pos:start="171:9" pos:end="171:28"><name pos:start="171:9" pos:end="171:10">st</name><operator pos:start="171:11" pos:end="171:12">-&gt;</operator><name pos:start="171:13" pos:end="171:17">codec</name><operator pos:start="171:18" pos:end="171:19">-&gt;</operator><name pos:start="171:20" pos:end="171:28">codec_tag</name></name> <operator pos:start="171:30" pos:end="171:30">=</operator> <name pos:start="171:32" pos:end="171:34">tag</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:54"><expr pos:start="177:5" pos:end="177:53"><call pos:start="177:5" pos:end="177:53"><name pos:start="177:5" pos:end="177:24">MATCH_PER_STREAM_OPT</name><argument_list pos:start="177:25" pos:end="177:53">(<argument pos:start="177:26" pos:end="177:31"><expr pos:start="177:26" pos:end="177:31"><name pos:start="177:26" pos:end="177:31">qscale</name></expr></argument>, <argument pos:start="177:34" pos:end="177:36"><expr pos:start="177:34" pos:end="177:36"><name pos:start="177:34" pos:end="177:36">dbl</name></expr></argument>, <argument pos:start="177:39" pos:end="177:44"><expr pos:start="177:39" pos:end="177:44"><name pos:start="177:39" pos:end="177:44">qscale</name></expr></argument>, <argument pos:start="177:47" pos:end="177:48"><expr pos:start="177:47" pos:end="177:48"><name pos:start="177:47" pos:end="177:48">oc</name></expr></argument>, <argument pos:start="177:51" pos:end="177:52"><expr pos:start="177:51" pos:end="177:52"><name pos:start="177:51" pos:end="177:52">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="179:5" pos:end="185:5"><if pos:start="179:5" pos:end="185:5">if <condition pos:start="179:8" pos:end="179:34">(<expr pos:start="179:9" pos:end="179:33"><name pos:start="179:9" pos:end="179:14">qscale</name> <operator pos:start="179:16" pos:end="179:17">&gt;=</operator> <literal type="number" pos:start="179:19" pos:end="179:19">0</literal> <operator pos:start="179:21" pos:end="179:22">||</operator> <name pos:start="179:24" pos:end="179:33">same_quant</name></expr>)</condition> <block pos:start="179:36" pos:end="185:5">{<block_content pos:start="181:9" pos:end="183:58">

        <expr_stmt pos:start="181:9" pos:end="181:46"><expr pos:start="181:9" pos:end="181:45"><name pos:start="181:9" pos:end="181:24"><name pos:start="181:9" pos:end="181:10">st</name><operator pos:start="181:11" pos:end="181:12">-&gt;</operator><name pos:start="181:13" pos:end="181:17">codec</name><operator pos:start="181:18" pos:end="181:19">-&gt;</operator><name pos:start="181:20" pos:end="181:24">flags</name></name> <operator pos:start="181:26" pos:end="181:27">|=</operator> <name pos:start="181:29" pos:end="181:45">CODEC_FLAG_QSCALE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:58"><expr pos:start="183:9" pos:end="183:57"><name pos:start="183:9" pos:end="183:33"><name pos:start="183:9" pos:end="183:10">st</name><operator pos:start="183:11" pos:end="183:12">-&gt;</operator><name pos:start="183:13" pos:end="183:17">codec</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:33">global_quality</name></name> <operator pos:start="183:35" pos:end="183:35">=</operator> <name pos:start="183:37" pos:end="183:48">FF_QP2LAMBDA</name> <operator pos:start="183:50" pos:end="183:50">*</operator> <name pos:start="183:52" pos:end="183:57">qscale</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="189:5" pos:end="191:53"><if pos:start="189:5" pos:end="191:53">if <condition pos:start="189:8" pos:end="189:48">(<expr pos:start="189:9" pos:end="189:47"><name pos:start="189:9" pos:end="189:26"><name pos:start="189:9" pos:end="189:10">oc</name><operator pos:start="189:11" pos:end="189:12">-&gt;</operator><name pos:start="189:13" pos:end="189:19">oformat</name><operator pos:start="189:20" pos:end="189:21">-&gt;</operator><name pos:start="189:22" pos:end="189:26">flags</name></name> <operator pos:start="189:28" pos:end="189:28">&amp;</operator> <name pos:start="189:30" pos:end="189:47">AVFMT_GLOBALHEADER</name></expr>)</condition><block type="pseudo" pos:start="191:9" pos:end="191:53"><block_content pos:start="191:9" pos:end="191:53">

        <expr_stmt pos:start="191:9" pos:end="191:53"><expr pos:start="191:9" pos:end="191:52"><name pos:start="191:9" pos:end="191:24"><name pos:start="191:9" pos:end="191:10">st</name><operator pos:start="191:11" pos:end="191:12">-&gt;</operator><name pos:start="191:13" pos:end="191:17">codec</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:24">flags</name></name> <operator pos:start="191:26" pos:end="191:27">|=</operator> <name pos:start="191:29" pos:end="191:52">CODEC_FLAG_GLOBAL_HEADER</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="195:5" pos:end="195:62"><expr pos:start="195:5" pos:end="195:61"><call pos:start="195:5" pos:end="195:61"><name pos:start="195:5" pos:end="195:18">av_opt_get_int</name><argument_list pos:start="195:19" pos:end="195:61">(<argument pos:start="195:20" pos:end="195:27"><expr pos:start="195:20" pos:end="195:27"><name pos:start="195:20" pos:end="195:27">sws_opts</name></expr></argument>, <argument pos:start="195:30" pos:end="195:40"><expr pos:start="195:30" pos:end="195:40"><literal type="string" pos:start="195:30" pos:end="195:40">"sws_flags"</literal></expr></argument>, <argument pos:start="195:43" pos:end="195:43"><expr pos:start="195:43" pos:end="195:43"><literal type="number" pos:start="195:43" pos:end="195:43">0</literal></expr></argument>, <argument pos:start="195:46" pos:end="195:60"><expr pos:start="195:46" pos:end="195:60"><operator pos:start="195:46" pos:end="195:46">&amp;</operator><name pos:start="195:47" pos:end="195:60"><name pos:start="195:47" pos:end="195:49">ost</name><operator pos:start="195:50" pos:end="195:51">-&gt;</operator><name pos:start="195:52" pos:end="195:60">sws_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="197:5" pos:end="197:15">return <expr pos:start="197:12" pos:end="197:14"><name pos:start="197:12" pos:end="197:14">ost</name></expr>;</return>

</block_content>}</block></function>
</unit>
