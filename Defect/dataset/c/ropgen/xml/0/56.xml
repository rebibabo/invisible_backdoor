<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/56.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">calculate_refcounts</name><parameter_list pos:start="1:31" pos:end="5:52">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:47">BlockDriverState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">bs</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:73"><decl pos:start="1:54" pos:end="1:73"><type pos:start="1:54" pos:end="1:73"><name pos:start="1:54" pos:end="1:68">BdrvCheckResult</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">res</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:48"><decl pos:start="3:32" pos:end="3:48"><type pos:start="3:32" pos:end="3:48"><name pos:start="3:32" pos:end="3:44">BdrvCheckMode</name></type> <name pos:start="3:46" pos:end="3:48">fix</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:75"><decl pos:start="3:51" pos:end="3:75"><type pos:start="3:51" pos:end="3:75"><name pos:start="3:51" pos:end="3:58">uint16_t</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier><modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:75">refcount_table</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:51"><decl pos:start="5:32" pos:end="5:51"><type pos:start="5:32" pos:end="5:51"><name pos:start="5:32" pos:end="5:38">int64_t</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:51">nb_clusters</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="107:1">{<block_content pos:start="9:5" pos:end="105:70">

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">BDRVQcowState</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:20">s</name> <init pos:start="9:22" pos:end="9:33">= <expr pos:start="9:24" pos:end="9:33"><name pos:start="9:24" pos:end="9:33"><name pos:start="9:24" pos:end="9:25">bs</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:13">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">QCowSnapshot</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:20">sn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:57"><expr pos:start="19:5" pos:end="19:56"><operator pos:start="19:5" pos:end="19:5">*</operator><name pos:start="19:6" pos:end="19:19">refcount_table</name> <operator pos:start="19:21" pos:end="19:21">=</operator> <call pos:start="19:23" pos:end="19:56"><name pos:start="19:23" pos:end="19:32">g_try_new0</name><argument_list pos:start="19:33" pos:end="19:56">(<argument pos:start="19:34" pos:end="19:41"><expr pos:start="19:34" pos:end="19:41"><name pos:start="19:34" pos:end="19:41">uint16_t</name></expr></argument>, <argument pos:start="19:44" pos:end="19:55"><expr pos:start="19:44" pos:end="19:55"><operator pos:start="19:44" pos:end="19:44">*</operator><name pos:start="19:45" pos:end="19:55">nb_clusters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:48">(<expr pos:start="21:9" pos:end="21:47"><operator pos:start="21:9" pos:end="21:9">*</operator><name pos:start="21:10" pos:end="21:20">nb_clusters</name> <operator pos:start="21:22" pos:end="21:23">&amp;&amp;</operator> <operator pos:start="21:25" pos:end="21:25">*</operator><name pos:start="21:26" pos:end="21:39">refcount_table</name> <operator pos:start="21:41" pos:end="21:42">==</operator> <name pos:start="21:44" pos:end="21:47">NULL</name></expr>)</condition> <block pos:start="21:50" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:23">

        <expr_stmt pos:start="23:9" pos:end="23:28"><expr pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:11">res</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:25">check_errors</name></name><operator pos:start="23:26" pos:end="23:27">++</operator></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:23">return <expr pos:start="25:16" pos:end="25:22"><operator pos:start="25:16" pos:end="25:16">-</operator><name pos:start="25:17" pos:end="25:22">ENOMEM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:16">/* header */</comment>

    <expr_stmt pos:start="33:5" pos:end="35:44"><expr pos:start="33:5" pos:end="35:43"><name pos:start="33:5" pos:end="33:7">ret</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="35:43"><name pos:start="33:11" pos:end="33:23">inc_refcounts</name><argument_list pos:start="33:24" pos:end="35:43">(<argument pos:start="33:25" pos:end="33:26"><expr pos:start="33:25" pos:end="33:26"><name pos:start="33:25" pos:end="33:26">bs</name></expr></argument>, <argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><name pos:start="33:29" pos:end="33:31">res</name></expr></argument>, <argument pos:start="33:34" pos:end="33:48"><expr pos:start="33:34" pos:end="33:48"><operator pos:start="33:34" pos:end="33:34">*</operator><name pos:start="33:35" pos:end="33:48">refcount_table</name></expr></argument>, <argument pos:start="33:51" pos:end="33:62"><expr pos:start="33:51" pos:end="33:62"><operator pos:start="33:51" pos:end="33:51">*</operator><name pos:start="33:52" pos:end="33:62">nb_clusters</name></expr></argument>,

                        <argument pos:start="35:25" pos:end="35:25"><expr pos:start="35:25" pos:end="35:25"><literal type="number" pos:start="35:25" pos:end="35:25">0</literal></expr></argument>, <argument pos:start="35:28" pos:end="35:42"><expr pos:start="35:28" pos:end="35:42"><name pos:start="35:28" pos:end="35:42"><name pos:start="35:28" pos:end="35:28">s</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:42">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">&lt;</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>)</condition> <block pos:start="37:18" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:19">

        <return pos:start="39:9" pos:end="39:19">return <expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:26">/* current L1 table */</comment>

    <expr_stmt pos:start="47:5" pos:end="49:78"><expr pos:start="47:5" pos:end="49:77"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="49:77"><name pos:start="47:11" pos:end="47:28">check_refcounts_l1</name><argument_list pos:start="47:29" pos:end="49:77">(<argument pos:start="47:30" pos:end="47:31"><expr pos:start="47:30" pos:end="47:31"><name pos:start="47:30" pos:end="47:31">bs</name></expr></argument>, <argument pos:start="47:34" pos:end="47:36"><expr pos:start="47:34" pos:end="47:36"><name pos:start="47:34" pos:end="47:36">res</name></expr></argument>, <argument pos:start="47:39" pos:end="47:53"><expr pos:start="47:39" pos:end="47:53"><operator pos:start="47:39" pos:end="47:39">*</operator><name pos:start="47:40" pos:end="47:53">refcount_table</name></expr></argument>, <argument pos:start="47:56" pos:end="47:67"><expr pos:start="47:56" pos:end="47:67"><operator pos:start="47:56" pos:end="47:56">*</operator><name pos:start="47:57" pos:end="47:67">nb_clusters</name></expr></argument>,

                             <argument pos:start="49:30" pos:end="49:47"><expr pos:start="49:30" pos:end="49:47"><name pos:start="49:30" pos:end="49:47"><name pos:start="49:30" pos:end="49:30">s</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:47">l1_table_offset</name></name></expr></argument>, <argument pos:start="49:50" pos:end="49:59"><expr pos:start="49:50" pos:end="49:59"><name pos:start="49:50" pos:end="49:59"><name pos:start="49:50" pos:end="49:50">s</name><operator pos:start="49:51" pos:end="49:52">-&gt;</operator><name pos:start="49:53" pos:end="49:59">l1_size</name></name></expr></argument>, <argument pos:start="49:62" pos:end="49:76"><expr pos:start="49:62" pos:end="49:76"><name pos:start="49:62" pos:end="49:76">CHECK_FRAG_INFO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:16">(<expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">&lt;</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>)</condition> <block pos:start="51:18" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:19">

        <return pos:start="53:9" pos:end="53:19">return <expr pos:start="53:16" pos:end="53:18"><name pos:start="53:16" pos:end="53:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:19">/* snapshots */</comment>

    <for pos:start="61:5" pos:end="75:5">for <control pos:start="61:9" pos:end="61:41">(<init pos:start="61:10" pos:end="61:15"><expr pos:start="61:10" pos:end="61:14"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <literal type="number" pos:start="61:14" pos:end="61:14">0</literal></expr>;</init> <condition pos:start="61:17" pos:end="61:36"><expr pos:start="61:17" pos:end="61:35"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:19">&lt;</operator> <name pos:start="61:21" pos:end="61:35"><name pos:start="61:21" pos:end="61:21">s</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:35">nb_snapshots</name></name></expr>;</condition> <incr pos:start="61:38" pos:end="61:40"><expr pos:start="61:38" pos:end="61:40"><name pos:start="61:38" pos:end="61:38">i</name><operator pos:start="61:39" pos:end="61:40">++</operator></expr></incr>)</control> <block pos:start="61:43" pos:end="75:5">{<block_content pos:start="63:9" pos:end="73:9">

        <expr_stmt pos:start="63:9" pos:end="63:30"><expr pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:10">sn</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <name pos:start="63:14" pos:end="63:25"><name pos:start="63:14" pos:end="63:14">s</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:25">snapshots</name></name> <operator pos:start="63:27" pos:end="63:27">+</operator> <name pos:start="63:29" pos:end="63:29">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="67:70"><expr pos:start="65:9" pos:end="67:69"><name pos:start="65:9" pos:end="65:11">ret</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <call pos:start="65:15" pos:end="67:69"><name pos:start="65:15" pos:end="65:32">check_refcounts_l1</name><argument_list pos:start="65:33" pos:end="67:69">(<argument pos:start="65:34" pos:end="65:35"><expr pos:start="65:34" pos:end="65:35"><name pos:start="65:34" pos:end="65:35">bs</name></expr></argument>, <argument pos:start="65:38" pos:end="65:40"><expr pos:start="65:38" pos:end="65:40"><name pos:start="65:38" pos:end="65:40">res</name></expr></argument>, <argument pos:start="65:43" pos:end="65:57"><expr pos:start="65:43" pos:end="65:57"><operator pos:start="65:43" pos:end="65:43">*</operator><name pos:start="65:44" pos:end="65:57">refcount_table</name></expr></argument>, <argument pos:start="65:60" pos:end="65:71"><expr pos:start="65:60" pos:end="65:71"><operator pos:start="65:60" pos:end="65:60">*</operator><name pos:start="65:61" pos:end="65:71">nb_clusters</name></expr></argument>,

                                 <argument pos:start="67:34" pos:end="67:52"><expr pos:start="67:34" pos:end="67:52"><name pos:start="67:34" pos:end="67:52"><name pos:start="67:34" pos:end="67:35">sn</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:52">l1_table_offset</name></name></expr></argument>, <argument pos:start="67:55" pos:end="67:65"><expr pos:start="67:55" pos:end="67:65"><name pos:start="67:55" pos:end="67:65"><name pos:start="67:55" pos:end="67:56">sn</name><operator pos:start="67:57" pos:end="67:58">-&gt;</operator><name pos:start="67:59" pos:end="67:65">l1_size</name></name></expr></argument>, <argument pos:start="67:68" pos:end="67:68"><expr pos:start="67:68" pos:end="67:68"><literal type="number" pos:start="67:68" pos:end="67:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:20">(<expr pos:start="69:13" pos:end="69:19"><name pos:start="69:13" pos:end="69:15">ret</name> <operator pos:start="69:17" pos:end="69:17">&lt;</operator> <literal type="number" pos:start="69:19" pos:end="69:19">0</literal></expr>)</condition> <block pos:start="69:22" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:23">

            <return pos:start="71:13" pos:end="71:23">return <expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="77:5" pos:end="79:64"><expr pos:start="77:5" pos:end="79:63"><name pos:start="77:5" pos:end="77:7">ret</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="79:63"><name pos:start="77:11" pos:end="77:23">inc_refcounts</name><argument_list pos:start="77:24" pos:end="79:63">(<argument pos:start="77:25" pos:end="77:26"><expr pos:start="77:25" pos:end="77:26"><name pos:start="77:25" pos:end="77:26">bs</name></expr></argument>, <argument pos:start="77:29" pos:end="77:31"><expr pos:start="77:29" pos:end="77:31"><name pos:start="77:29" pos:end="77:31">res</name></expr></argument>, <argument pos:start="77:34" pos:end="77:48"><expr pos:start="77:34" pos:end="77:48"><operator pos:start="77:34" pos:end="77:34">*</operator><name pos:start="77:35" pos:end="77:48">refcount_table</name></expr></argument>, <argument pos:start="77:51" pos:end="77:62"><expr pos:start="77:51" pos:end="77:62"><operator pos:start="77:51" pos:end="77:51">*</operator><name pos:start="77:52" pos:end="77:62">nb_clusters</name></expr></argument>,

                        <argument pos:start="79:25" pos:end="79:43"><expr pos:start="79:25" pos:end="79:43"><name pos:start="79:25" pos:end="79:43"><name pos:start="79:25" pos:end="79:25">s</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:43">snapshots_offset</name></name></expr></argument>, <argument pos:start="79:46" pos:end="79:62"><expr pos:start="79:46" pos:end="79:62"><name pos:start="79:46" pos:end="79:62"><name pos:start="79:46" pos:end="79:46">s</name><operator pos:start="79:47" pos:end="79:48">-&gt;</operator><name pos:start="79:49" pos:end="79:62">snapshots_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="85:5"><if pos:start="81:5" pos:end="85:5">if <condition pos:start="81:8" pos:end="81:16">(<expr pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:11">ret</name> <operator pos:start="81:13" pos:end="81:13">&lt;</operator> <literal type="number" pos:start="81:15" pos:end="81:15">0</literal></expr>)</condition> <block pos:start="81:18" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:19">

        <return pos:start="83:9" pos:end="83:19">return <expr pos:start="83:16" pos:end="83:18"><name pos:start="83:16" pos:end="83:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="89:5" pos:end="89:23">/* refcount data */</comment>

    <expr_stmt pos:start="91:5" pos:end="95:67"><expr pos:start="91:5" pos:end="95:66"><name pos:start="91:5" pos:end="91:7">ret</name> <operator pos:start="91:9" pos:end="91:9">=</operator> <call pos:start="91:11" pos:end="95:66"><name pos:start="91:11" pos:end="91:23">inc_refcounts</name><argument_list pos:start="91:24" pos:end="95:66">(<argument pos:start="91:25" pos:end="91:26"><expr pos:start="91:25" pos:end="91:26"><name pos:start="91:25" pos:end="91:26">bs</name></expr></argument>, <argument pos:start="91:29" pos:end="91:31"><expr pos:start="91:29" pos:end="91:31"><name pos:start="91:29" pos:end="91:31">res</name></expr></argument>, <argument pos:start="91:34" pos:end="91:48"><expr pos:start="91:34" pos:end="91:48"><operator pos:start="91:34" pos:end="91:34">*</operator><name pos:start="91:35" pos:end="91:48">refcount_table</name></expr></argument>, <argument pos:start="91:51" pos:end="91:62"><expr pos:start="91:51" pos:end="91:62"><operator pos:start="91:51" pos:end="91:51">*</operator><name pos:start="91:52" pos:end="91:62">nb_clusters</name></expr></argument>,

                        <argument pos:start="93:25" pos:end="93:48"><expr pos:start="93:25" pos:end="93:48"><name pos:start="93:25" pos:end="93:48"><name pos:start="93:25" pos:end="93:25">s</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:48">refcount_table_offset</name></name></expr></argument>,

                        <argument pos:start="95:25" pos:end="95:65"><expr pos:start="95:25" pos:end="95:65"><name pos:start="95:25" pos:end="95:46"><name pos:start="95:25" pos:end="95:25">s</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:46">refcount_table_size</name></name> <operator pos:start="95:48" pos:end="95:48">*</operator> <sizeof pos:start="95:50" pos:end="95:65">sizeof<argument_list pos:start="95:56" pos:end="95:65">(<argument pos:start="95:57" pos:end="95:64"><expr pos:start="95:57" pos:end="95:64"><name pos:start="95:57" pos:end="95:64">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="101:5"><if pos:start="97:5" pos:end="101:5">if <condition pos:start="97:8" pos:end="97:16">(<expr pos:start="97:9" pos:end="97:15"><name pos:start="97:9" pos:end="97:11">ret</name> <operator pos:start="97:13" pos:end="97:13">&lt;</operator> <literal type="number" pos:start="97:15" pos:end="97:15">0</literal></expr>)</condition> <block pos:start="97:18" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:19">

        <return pos:start="99:9" pos:end="99:19">return <expr pos:start="99:16" pos:end="99:18"><name pos:start="99:16" pos:end="99:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="105:5" pos:end="105:70">return <expr pos:start="105:12" pos:end="105:69"><call pos:start="105:12" pos:end="105:69"><name pos:start="105:12" pos:end="105:26">check_refblocks</name><argument_list pos:start="105:27" pos:end="105:69">(<argument pos:start="105:28" pos:end="105:29"><expr pos:start="105:28" pos:end="105:29"><name pos:start="105:28" pos:end="105:29">bs</name></expr></argument>, <argument pos:start="105:32" pos:end="105:34"><expr pos:start="105:32" pos:end="105:34"><name pos:start="105:32" pos:end="105:34">res</name></expr></argument>, <argument pos:start="105:37" pos:end="105:39"><expr pos:start="105:37" pos:end="105:39"><name pos:start="105:37" pos:end="105:39">fix</name></expr></argument>, <argument pos:start="105:42" pos:end="105:55"><expr pos:start="105:42" pos:end="105:55"><name pos:start="105:42" pos:end="105:55">refcount_table</name></expr></argument>, <argument pos:start="105:58" pos:end="105:68"><expr pos:start="105:58" pos:end="105:68"><name pos:start="105:58" pos:end="105:68">nb_clusters</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
