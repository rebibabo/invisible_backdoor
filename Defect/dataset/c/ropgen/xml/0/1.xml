<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1.c" pos:tabs="8"><function pos:start="1:1" pos:end="1763:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">transcode</name><parameter_list pos:start="1:21" pos:end="9:64">(<parameter pos:start="1:22" pos:end="1:51"><decl pos:start="1:22" pos:end="1:51"><type pos:start="1:22" pos:end="1:51"><name pos:start="1:22" pos:end="1:36">AVFormatContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier><modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:51">output_files</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:40"><decl pos:start="3:22" pos:end="3:40"><type pos:start="3:22" pos:end="3:40"><name pos:start="3:22" pos:end="3:24">int</name></type> <name pos:start="3:26" pos:end="3:40">nb_output_files</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:43"><decl pos:start="5:22" pos:end="5:43"><type pos:start="5:22" pos:end="5:43"><name pos:start="5:22" pos:end="5:30">InputFile</name> <modifier pos:start="5:32" pos:end="5:32">*</modifier></type><name pos:start="5:33" pos:end="5:43">input_files</name></decl></parameter>,

                     <parameter pos:start="7:22" pos:end="7:39"><decl pos:start="7:22" pos:end="7:39"><type pos:start="7:22" pos:end="7:39"><name pos:start="7:22" pos:end="7:24">int</name></type> <name pos:start="7:26" pos:end="7:39">nb_input_files</name></decl></parameter>,

                     <parameter pos:start="9:22" pos:end="9:43"><decl pos:start="9:22" pos:end="9:43"><type pos:start="9:22" pos:end="9:43"><name pos:start="9:22" pos:end="9:30">StreamMap</name> <modifier pos:start="9:32" pos:end="9:32">*</modifier></type><name pos:start="9:33" pos:end="9:43">stream_maps</name></decl></parameter>, <parameter pos:start="9:46" pos:end="9:63"><decl pos:start="9:46" pos:end="9:63"><type pos:start="9:46" pos:end="9:63"><name pos:start="9:46" pos:end="9:48">int</name></type> <name pos:start="9:50" pos:end="9:63">nb_stream_maps</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="1763:1">{<block_content pos:start="13:5" pos:end="1761:15">

    <decl_stmt pos:start="13:5" pos:end="13:51"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>, <decl pos:start="13:18" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:18">i</name></decl>, <decl pos:start="13:21" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:21">j</name></decl>, <decl pos:start="13:24" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:24">k</name></decl>, <decl pos:start="13:27" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:27" pos:end="13:27">n</name></decl>, <decl pos:start="13:30" pos:end="13:44"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:30" pos:end="13:40">nb_ostreams</name> <init pos:start="13:42" pos:end="13:44">= <expr pos:start="13:44" pos:end="13:44"><literal type="number" pos:start="13:44" pos:end="13:44">0</literal></expr></init></decl>, <decl pos:start="13:47" pos:end="13:50"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:47" pos:end="13:50">step</name></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:19">AVFormatContext</name> <modifier pos:start="17:21" pos:end="17:21">*</modifier></type><name pos:start="17:22" pos:end="17:23">is</name></decl>, <decl pos:start="17:26" pos:end="17:28"><type ref="prev" pos:start="17:5" pos:end="17:21"><modifier pos:start="17:26" pos:end="17:26">*</modifier></type><name pos:start="17:27" pos:end="17:28">os</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:35"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:18">AVCodecContext</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:25">codec</name></decl>, <decl pos:start="19:28" pos:end="19:34"><type ref="prev" pos:start="19:5" pos:end="19:20"><modifier pos:start="19:28" pos:end="19:28">*</modifier></type><name pos:start="19:29" pos:end="19:34">icodec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:42"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:16">OutputStream</name> <modifier pos:start="21:18" pos:end="21:18">*</modifier></type><name pos:start="21:19" pos:end="21:21">ost</name></decl>, <decl pos:start="21:24" pos:end="21:41"><type ref="prev" pos:start="21:5" pos:end="21:18"><modifier pos:start="21:24" pos:end="21:24">*</modifier><modifier pos:start="21:25" pos:end="21:25">*</modifier></type><name pos:start="21:26" pos:end="21:34">ost_table</name> <init pos:start="21:36" pos:end="21:41">= <expr pos:start="21:38" pos:end="21:41"><name pos:start="21:38" pos:end="21:41">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:15">InputStream</name> <modifier pos:start="23:17" pos:end="23:17">*</modifier></type><name pos:start="23:18" pos:end="23:20">ist</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:8">char</name></type> <name pos:start="25:10" pos:end="25:20"><name pos:start="25:10" pos:end="25:14">error</name><index pos:start="25:15" pos:end="25:20">[<expr pos:start="25:16" pos:end="25:19"><literal type="number" pos:start="25:16" pos:end="25:19">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:12"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">key</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:21"><decl pos:start="29:5" pos:end="29:20"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:16">want_sdp</name> <init pos:start="29:18" pos:end="29:20">= <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:37"><decl pos:start="31:5" pos:end="31:36"><type pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:11">uint8_t</name></type> <name pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:21">no_packet</name><index pos:start="31:22" pos:end="31:32">[<expr pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:31">MAX_FILES</name></expr>]</index></name><init pos:start="31:33" pos:end="31:36">=<expr pos:start="31:34" pos:end="31:36"><block pos:start="31:34" pos:end="31:36">{<expr pos:start="31:35" pos:end="31:35"><literal type="number" pos:start="31:35" pos:end="31:35">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:26"><decl pos:start="33:5" pos:end="33:25"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:23">no_packet_count</name><init pos:start="33:24" pos:end="33:25">=<expr pos:start="33:25" pos:end="33:25"><literal type="number" pos:start="33:25" pos:end="33:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:48"><decl pos:start="35:5" pos:end="35:47"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:26">nb_frame_threshold</name><index pos:start="35:27" pos:end="35:43">[<expr pos:start="35:28" pos:end="35:42"><name pos:start="35:28" pos:end="35:42">AVMEDIA_TYPE_NB</name></expr>]</index></name><init pos:start="35:44" pos:end="35:47">=<expr pos:start="35:45" pos:end="35:47"><block pos:start="35:45" pos:end="35:47">{<expr pos:start="35:46" pos:end="35:46"><literal type="number" pos:start="35:46" pos:end="35:46">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:40"><decl pos:start="37:5" pos:end="37:39"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:35"><name pos:start="37:9" pos:end="37:18">nb_streams</name><index pos:start="37:19" pos:end="37:35">[<expr pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:34">AVMEDIA_TYPE_NB</name></expr>]</index></name><init pos:start="37:36" pos:end="37:39">=<expr pos:start="37:37" pos:end="37:39"><block pos:start="37:37" pos:end="37:39">{<expr pos:start="37:38" pos:end="37:38"><literal type="number" pos:start="37:38" pos:end="37:38">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="41:5" pos:end="45:50"><if pos:start="41:5" pos:end="45:50">if <condition pos:start="41:8" pos:end="41:17">(<expr pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:16">rate_emu</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="45:50"><block_content pos:start="43:9" pos:end="45:50">

        <for pos:start="43:9" pos:end="45:50">for <control pos:start="43:13" pos:end="43:46">(<init pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">i</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:41"><expr pos:start="43:21" pos:end="43:40"><name pos:start="43:21" pos:end="43:21">i</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <name pos:start="43:25" pos:end="43:40">nb_input_streams</name></expr>;</condition> <incr pos:start="43:43" pos:end="43:45"><expr pos:start="43:43" pos:end="43:45"><name pos:start="43:43" pos:end="43:43">i</name><operator pos:start="43:44" pos:end="43:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:13" pos:end="45:50"><block_content pos:start="45:13" pos:end="45:50">

            <expr_stmt pos:start="45:13" pos:end="45:50"><expr pos:start="45:13" pos:end="45:49"><name pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:25">input_streams</name><index pos:start="45:26" pos:end="45:28">[<expr pos:start="45:27" pos:end="45:27"><name pos:start="45:27" pos:end="45:27">i</name></expr>]</index></name><operator pos:start="45:29" pos:end="45:29">.</operator><name pos:start="45:30" pos:end="45:34">start</name> <operator pos:start="45:36" pos:end="45:36">=</operator> <call pos:start="45:38" pos:end="45:49"><name pos:start="45:38" pos:end="45:47">av_gettime</name><argument_list pos:start="45:48" pos:end="45:49">()</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:28">/* output stream init */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:20"><expr pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:15">nb_ostreams</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>;</expr_stmt>

    <for pos:start="53:5" pos:end="71:5">for<control pos:start="53:8" pos:end="53:34">(<init pos:start="53:9" pos:end="53:12"><expr pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:9">i</name><operator pos:start="53:10" pos:end="53:10">=</operator><literal type="number" pos:start="53:11" pos:end="53:11">0</literal></expr>;</init><condition pos:start="53:13" pos:end="53:30"><expr pos:start="53:13" pos:end="53:29"><name pos:start="53:13" pos:end="53:13">i</name><operator pos:start="53:14" pos:end="53:14">&lt;</operator><name pos:start="53:15" pos:end="53:29">nb_output_files</name></expr>;</condition><incr pos:start="53:31" pos:end="53:33"><expr pos:start="53:31" pos:end="53:33"><name pos:start="53:31" pos:end="53:31">i</name><operator pos:start="53:32" pos:end="53:33">++</operator></expr></incr>)</control> <block pos:start="53:36" pos:end="71:5">{<block_content pos:start="55:9" pos:end="69:38">

        <expr_stmt pos:start="55:9" pos:end="55:29"><expr pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:10">os</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <name pos:start="55:14" pos:end="55:28"><name pos:start="55:14" pos:end="55:25">output_files</name><index pos:start="55:26" pos:end="55:28">[<expr pos:start="55:27" pos:end="55:27"><name pos:start="55:27" pos:end="55:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="67:9"><if pos:start="57:9" pos:end="67:9">if <condition pos:start="57:12" pos:end="57:71">(<expr pos:start="57:13" pos:end="57:70"><operator pos:start="57:13" pos:end="57:13">!</operator><name pos:start="57:14" pos:end="57:27"><name pos:start="57:14" pos:end="57:15">os</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:27">nb_streams</name></name> <operator pos:start="57:29" pos:end="57:30">&amp;&amp;</operator> <operator pos:start="57:32" pos:end="57:32">!</operator><operator pos:start="57:33" pos:end="57:33">(</operator><name pos:start="57:34" pos:end="57:51"><name pos:start="57:34" pos:end="57:35">os</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:44">oformat</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:51">flags</name></name> <operator pos:start="57:53" pos:end="57:53">&amp;</operator> <name pos:start="57:55" pos:end="57:69">AVFMT_NOSTREAMS</name><operator pos:start="57:70" pos:end="57:70">)</operator></expr>)</condition> <block pos:start="57:73" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:22">

            <expr_stmt pos:start="59:13" pos:end="59:77"><expr pos:start="59:13" pos:end="59:76"><call pos:start="59:13" pos:end="59:76"><name pos:start="59:13" pos:end="59:26">av_dump_format</name><argument_list pos:start="59:27" pos:end="59:76">(<argument pos:start="59:28" pos:end="59:42"><expr pos:start="59:28" pos:end="59:42"><name pos:start="59:28" pos:end="59:42"><name pos:start="59:28" pos:end="59:39">output_files</name><index pos:start="59:40" pos:end="59:42">[<expr pos:start="59:41" pos:end="59:41"><name pos:start="59:41" pos:end="59:41">i</name></expr>]</index></name></expr></argument>, <argument pos:start="59:45" pos:end="59:45"><expr pos:start="59:45" pos:end="59:45"><name pos:start="59:45" pos:end="59:45">i</name></expr></argument>, <argument pos:start="59:48" pos:end="59:72"><expr pos:start="59:48" pos:end="59:72"><name pos:start="59:48" pos:end="59:62"><name pos:start="59:48" pos:end="59:59">output_files</name><index pos:start="59:60" pos:end="59:62">[<expr pos:start="59:61" pos:end="59:61"><name pos:start="59:61" pos:end="59:61">i</name></expr>]</index></name><operator pos:start="59:63" pos:end="59:64">-&gt;</operator><name pos:start="59:65" pos:end="59:72">filename</name></expr></argument>, <argument pos:start="59:75" pos:end="59:75"><expr pos:start="59:75" pos:end="59:75"><literal type="number" pos:start="59:75" pos:end="59:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:80"><expr pos:start="61:13" pos:end="61:79"><call pos:start="61:13" pos:end="61:79"><name pos:start="61:13" pos:end="61:19">fprintf</name><argument_list pos:start="61:20" pos:end="61:79">(<argument pos:start="61:21" pos:end="61:26"><expr pos:start="61:21" pos:end="61:26"><name pos:start="61:21" pos:end="61:26">stderr</name></expr></argument>, <argument pos:start="61:29" pos:end="61:75"><expr pos:start="61:29" pos:end="61:75"><literal type="string" pos:start="61:29" pos:end="61:75">"Output file #%d does not contain any stream\n"</literal></expr></argument>, <argument pos:start="61:78" pos:end="61:78"><expr pos:start="61:78" pos:end="61:78"><name pos:start="61:78" pos:end="61:78">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:34"><expr pos:start="63:13" pos:end="63:33"><name pos:start="63:13" pos:end="63:15">ret</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="63:33"><name pos:start="63:19" pos:end="63:25">AVERROR</name><argument_list pos:start="63:26" pos:end="63:33">(<argument pos:start="63:27" pos:end="63:32"><expr pos:start="63:27" pos:end="63:32"><name pos:start="63:27" pos:end="63:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="65:13" pos:end="65:22">goto <name pos:start="65:18" pos:end="65:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:38"><expr pos:start="69:9" pos:end="69:37"><name pos:start="69:9" pos:end="69:19">nb_ostreams</name> <operator pos:start="69:21" pos:end="69:22">+=</operator> <name pos:start="69:24" pos:end="69:37"><name pos:start="69:24" pos:end="69:25">os</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:37">nb_streams</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="73:5" pos:end="81:5"><if pos:start="73:5" pos:end="81:5">if <condition pos:start="73:8" pos:end="73:60">(<expr pos:start="73:9" pos:end="73:59"><name pos:start="73:9" pos:end="73:22">nb_stream_maps</name> <operator pos:start="73:24" pos:end="73:24">&gt;</operator> <literal type="number" pos:start="73:26" pos:end="73:26">0</literal> <operator pos:start="73:28" pos:end="73:29">&amp;&amp;</operator> <name pos:start="73:31" pos:end="73:44">nb_stream_maps</name> <operator pos:start="73:46" pos:end="73:47">!=</operator> <name pos:start="73:49" pos:end="73:59">nb_ostreams</name></expr>)</condition> <block pos:start="73:62" pos:end="81:5">{<block_content pos:start="75:9" pos:end="79:18">

        <expr_stmt pos:start="75:9" pos:end="75:87"><expr pos:start="75:9" pos:end="75:86"><call pos:start="75:9" pos:end="75:86"><name pos:start="75:9" pos:end="75:15">fprintf</name><argument_list pos:start="75:16" pos:end="75:86">(<argument pos:start="75:17" pos:end="75:22"><expr pos:start="75:17" pos:end="75:22"><name pos:start="75:17" pos:end="75:22">stderr</name></expr></argument>, <argument pos:start="75:25" pos:end="75:85"><expr pos:start="75:25" pos:end="75:85"><literal type="string" pos:start="75:25" pos:end="75:85">"Number of stream maps must match number of output streams\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:30"><expr pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <call pos:start="77:15" pos:end="77:29"><name pos:start="77:15" pos:end="77:21">AVERROR</name><argument_list pos:start="77:22" pos:end="77:29">(<argument pos:start="77:23" pos:end="77:28"><expr pos:start="77:23" pos:end="77:28"><name pos:start="77:23" pos:end="77:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="79:9" pos:end="79:18">goto <name pos:start="79:14" pos:end="79:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:78">/* Sanity check the mapping args -- do the input files &amp; streams exist? */</comment>

    <for pos:start="87:5" pos:end="123:5">for<control pos:start="87:8" pos:end="87:33">(<init pos:start="87:9" pos:end="87:12"><expr pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:9">i</name><operator pos:start="87:10" pos:end="87:10">=</operator><literal type="number" pos:start="87:11" pos:end="87:11">0</literal></expr>;</init><condition pos:start="87:13" pos:end="87:29"><expr pos:start="87:13" pos:end="87:28"><name pos:start="87:13" pos:end="87:13">i</name><operator pos:start="87:14" pos:end="87:14">&lt;</operator><name pos:start="87:15" pos:end="87:28">nb_stream_maps</name></expr>;</condition><incr pos:start="87:30" pos:end="87:32"><expr pos:start="87:30" pos:end="87:32"><name pos:start="87:30" pos:end="87:30">i</name><operator pos:start="87:31" pos:end="87:32">++</operator></expr></incr>)</control> <block pos:start="87:35" pos:end="123:5">{<block_content pos:start="89:9" pos:end="121:9">

        <decl_stmt pos:start="89:9" pos:end="89:43"><decl pos:start="89:9" pos:end="89:42"><type pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:11">int</name></type> <name pos:start="89:13" pos:end="89:14">fi</name> <init pos:start="89:16" pos:end="89:42">= <expr pos:start="89:18" pos:end="89:42"><name pos:start="89:18" pos:end="89:31"><name pos:start="89:18" pos:end="89:28">stream_maps</name><index pos:start="89:29" pos:end="89:31">[<expr pos:start="89:30" pos:end="89:30"><name pos:start="89:30" pos:end="89:30">i</name></expr>]</index></name><operator pos:start="89:32" pos:end="89:32">.</operator><name pos:start="89:33" pos:end="89:42">file_index</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="91:9" pos:end="91:45"><decl pos:start="91:9" pos:end="91:44"><type pos:start="91:9" pos:end="91:11"><name pos:start="91:9" pos:end="91:11">int</name></type> <name pos:start="91:13" pos:end="91:14">si</name> <init pos:start="91:16" pos:end="91:44">= <expr pos:start="91:18" pos:end="91:44"><name pos:start="91:18" pos:end="91:31"><name pos:start="91:18" pos:end="91:28">stream_maps</name><index pos:start="91:29" pos:end="91:31">[<expr pos:start="91:30" pos:end="91:30"><name pos:start="91:30" pos:end="91:30">i</name></expr>]</index></name><operator pos:start="91:32" pos:end="91:32">.</operator><name pos:start="91:33" pos:end="91:44">stream_index</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="95:9" pos:end="105:9"><if pos:start="95:9" pos:end="105:9">if <condition pos:start="95:12" pos:end="97:63">(<expr pos:start="95:13" pos:end="97:62"><name pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:14">fi</name> <argument_list type="generic" pos:start="95:16" pos:end="95:26">&lt; <argument pos:start="95:18" pos:end="95:24"><expr pos:start="95:18" pos:end="95:24"><literal type="number" pos:start="95:18" pos:end="95:18">0</literal> <operator pos:start="95:20" pos:end="95:21">||</operator> <name pos:start="95:23" pos:end="95:24">fi</name></expr></argument> &gt;</argument_list></name> <name pos:start="95:28" pos:end="95:41">nb_input_files</name> <operator pos:start="95:43" pos:end="95:43">-</operator> <literal type="number" pos:start="95:45" pos:end="95:45">1</literal> <operator pos:start="95:47" pos:end="95:48">||</operator>

            <name pos:start="97:13" pos:end="97:26"><name pos:start="97:13" pos:end="97:14">si</name> <argument_list type="generic" pos:start="97:16" pos:end="97:26">&lt; <argument pos:start="97:18" pos:end="97:24"><expr pos:start="97:18" pos:end="97:24"><literal type="number" pos:start="97:18" pos:end="97:18">0</literal> <operator pos:start="97:20" pos:end="97:21">||</operator> <name pos:start="97:23" pos:end="97:24">si</name></expr></argument> &gt;</argument_list></name> <name pos:start="97:28" pos:end="97:42"><name pos:start="97:28" pos:end="97:38">input_files</name><index pos:start="97:39" pos:end="97:42">[<expr pos:start="97:40" pos:end="97:41"><name pos:start="97:40" pos:end="97:41">fi</name></expr>]</index></name><operator pos:start="97:43" pos:end="97:43">.</operator><name pos:start="97:44" pos:end="97:58"><name pos:start="97:44" pos:end="97:46">ctx</name><operator pos:start="97:47" pos:end="97:48">-&gt;</operator><name pos:start="97:49" pos:end="97:58">nb_streams</name></name> <operator pos:start="97:60" pos:end="97:60">-</operator> <literal type="number" pos:start="97:62" pos:end="97:62">1</literal></expr>)</condition> <block pos:start="97:65" pos:end="105:9">{<block_content pos:start="99:13" pos:end="103:22">

            <expr_stmt pos:start="99:13" pos:end="99:75"><expr pos:start="99:13" pos:end="99:74"><call pos:start="99:13" pos:end="99:74"><name pos:start="99:13" pos:end="99:19">fprintf</name><argument_list pos:start="99:20" pos:end="99:74">(<argument pos:start="99:21" pos:end="99:26"><expr pos:start="99:21" pos:end="99:26"><name pos:start="99:21" pos:end="99:26">stderr</name></expr></argument>,<argument pos:start="99:28" pos:end="99:65"><expr pos:start="99:28" pos:end="99:65"><literal type="string" pos:start="99:28" pos:end="99:65">"Could not find input stream #%d.%d\n"</literal></expr></argument>, <argument pos:start="99:68" pos:end="99:69"><expr pos:start="99:68" pos:end="99:69"><name pos:start="99:68" pos:end="99:69">fi</name></expr></argument>, <argument pos:start="99:72" pos:end="99:73"><expr pos:start="99:72" pos:end="99:73"><name pos:start="99:72" pos:end="99:73">si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:34"><expr pos:start="101:13" pos:end="101:33"><name pos:start="101:13" pos:end="101:15">ret</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <call pos:start="101:19" pos:end="101:33"><name pos:start="101:19" pos:end="101:25">AVERROR</name><argument_list pos:start="101:26" pos:end="101:33">(<argument pos:start="101:27" pos:end="101:32"><expr pos:start="101:27" pos:end="101:32"><name pos:start="101:27" pos:end="101:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="103:13" pos:end="103:22">goto <name pos:start="103:18" pos:end="103:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:44"><expr pos:start="107:9" pos:end="107:43"><name pos:start="107:9" pos:end="107:10">fi</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <name pos:start="107:14" pos:end="107:27"><name pos:start="107:14" pos:end="107:24">stream_maps</name><index pos:start="107:25" pos:end="107:27">[<expr pos:start="107:26" pos:end="107:26"><name pos:start="107:26" pos:end="107:26">i</name></expr>]</index></name><operator pos:start="107:28" pos:end="107:28">.</operator><name pos:start="107:29" pos:end="107:43">sync_file_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:46"><expr pos:start="109:9" pos:end="109:45"><name pos:start="109:9" pos:end="109:10">si</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <name pos:start="109:14" pos:end="109:27"><name pos:start="109:14" pos:end="109:24">stream_maps</name><index pos:start="109:25" pos:end="109:27">[<expr pos:start="109:26" pos:end="109:26"><name pos:start="109:26" pos:end="109:26">i</name></expr>]</index></name><operator pos:start="109:28" pos:end="109:28">.</operator><name pos:start="109:29" pos:end="109:45">sync_stream_index</name></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="121:9"><if pos:start="111:9" pos:end="121:9">if <condition pos:start="111:12" pos:end="113:63">(<expr pos:start="111:13" pos:end="113:62"><name pos:start="111:13" pos:end="111:26"><name pos:start="111:13" pos:end="111:14">fi</name> <argument_list type="generic" pos:start="111:16" pos:end="111:26">&lt; <argument pos:start="111:18" pos:end="111:24"><expr pos:start="111:18" pos:end="111:24"><literal type="number" pos:start="111:18" pos:end="111:18">0</literal> <operator pos:start="111:20" pos:end="111:21">||</operator> <name pos:start="111:23" pos:end="111:24">fi</name></expr></argument> &gt;</argument_list></name> <name pos:start="111:28" pos:end="111:41">nb_input_files</name> <operator pos:start="111:43" pos:end="111:43">-</operator> <literal type="number" pos:start="111:45" pos:end="111:45">1</literal> <operator pos:start="111:47" pos:end="111:48">||</operator>

            <name pos:start="113:13" pos:end="113:26"><name pos:start="113:13" pos:end="113:14">si</name> <argument_list type="generic" pos:start="113:16" pos:end="113:26">&lt; <argument pos:start="113:18" pos:end="113:24"><expr pos:start="113:18" pos:end="113:24"><literal type="number" pos:start="113:18" pos:end="113:18">0</literal> <operator pos:start="113:20" pos:end="113:21">||</operator> <name pos:start="113:23" pos:end="113:24">si</name></expr></argument> &gt;</argument_list></name> <name pos:start="113:28" pos:end="113:42"><name pos:start="113:28" pos:end="113:38">input_files</name><index pos:start="113:39" pos:end="113:42">[<expr pos:start="113:40" pos:end="113:41"><name pos:start="113:40" pos:end="113:41">fi</name></expr>]</index></name><operator pos:start="113:43" pos:end="113:43">.</operator><name pos:start="113:44" pos:end="113:58"><name pos:start="113:44" pos:end="113:46">ctx</name><operator pos:start="113:47" pos:end="113:48">-&gt;</operator><name pos:start="113:49" pos:end="113:58">nb_streams</name></name> <operator pos:start="113:60" pos:end="113:60">-</operator> <literal type="number" pos:start="113:62" pos:end="113:62">1</literal></expr>)</condition> <block pos:start="113:65" pos:end="121:9">{<block_content pos:start="115:13" pos:end="119:22">

            <expr_stmt pos:start="115:13" pos:end="115:74"><expr pos:start="115:13" pos:end="115:73"><call pos:start="115:13" pos:end="115:73"><name pos:start="115:13" pos:end="115:19">fprintf</name><argument_list pos:start="115:20" pos:end="115:73">(<argument pos:start="115:21" pos:end="115:26"><expr pos:start="115:21" pos:end="115:26"><name pos:start="115:21" pos:end="115:26">stderr</name></expr></argument>,<argument pos:start="115:28" pos:end="115:64"><expr pos:start="115:28" pos:end="115:64"><literal type="string" pos:start="115:28" pos:end="115:64">"Could not find sync stream #%d.%d\n"</literal></expr></argument>, <argument pos:start="115:67" pos:end="115:68"><expr pos:start="115:67" pos:end="115:68"><name pos:start="115:67" pos:end="115:68">fi</name></expr></argument>, <argument pos:start="115:71" pos:end="115:72"><expr pos:start="115:71" pos:end="115:72"><name pos:start="115:71" pos:end="115:72">si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:34"><expr pos:start="117:13" pos:end="117:33"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <call pos:start="117:19" pos:end="117:33"><name pos:start="117:19" pos:end="117:25">AVERROR</name><argument_list pos:start="117:26" pos:end="117:33">(<argument pos:start="117:27" pos:end="117:32"><expr pos:start="117:27" pos:end="117:32"><name pos:start="117:27" pos:end="117:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="119:13" pos:end="119:22">goto <name pos:start="119:18" pos:end="119:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="127:5" pos:end="127:65"><expr pos:start="127:5" pos:end="127:64"><name pos:start="127:5" pos:end="127:13">ost_table</name> <operator pos:start="127:15" pos:end="127:15">=</operator> <call pos:start="127:17" pos:end="127:64"><name pos:start="127:17" pos:end="127:26">av_mallocz</name><argument_list pos:start="127:27" pos:end="127:64">(<argument pos:start="127:28" pos:end="127:63"><expr pos:start="127:28" pos:end="127:63"><sizeof pos:start="127:28" pos:end="127:49">sizeof<argument_list pos:start="127:34" pos:end="127:49">(<argument pos:start="127:35" pos:end="127:48"><expr pos:start="127:35" pos:end="127:48"><name pos:start="127:35" pos:end="127:46">OutputStream</name> <operator pos:start="127:48" pos:end="127:48">*</operator></expr></argument>)</argument_list></sizeof> <operator pos:start="127:51" pos:end="127:51">*</operator> <name pos:start="127:53" pos:end="127:63">nb_ostreams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="131:18"><if pos:start="129:5" pos:end="131:18">if <condition pos:start="129:8" pos:end="129:19">(<expr pos:start="129:9" pos:end="129:18"><operator pos:start="129:9" pos:end="129:9">!</operator><name pos:start="129:10" pos:end="129:18">ost_table</name></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:18"><block_content pos:start="131:9" pos:end="131:18">

        <goto pos:start="131:9" pos:end="131:18">goto <name pos:start="131:14" pos:end="131:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="135:5" pos:end="145:5">for<control pos:start="135:8" pos:end="135:34">(<init pos:start="135:9" pos:end="135:12"><expr pos:start="135:9" pos:end="135:11"><name pos:start="135:9" pos:end="135:9">k</name><operator pos:start="135:10" pos:end="135:10">=</operator><literal type="number" pos:start="135:11" pos:end="135:11">0</literal></expr>;</init><condition pos:start="135:13" pos:end="135:30"><expr pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:13">k</name><operator pos:start="135:14" pos:end="135:14">&lt;</operator><name pos:start="135:15" pos:end="135:29">nb_output_files</name></expr>;</condition><incr pos:start="135:31" pos:end="135:33"><expr pos:start="135:31" pos:end="135:33"><name pos:start="135:31" pos:end="135:31">k</name><operator pos:start="135:32" pos:end="135:33">++</operator></expr></incr>)</control> <block pos:start="135:36" pos:end="145:5">{<block_content pos:start="137:9" pos:end="143:9">

        <expr_stmt pos:start="137:9" pos:end="137:29"><expr pos:start="137:9" pos:end="137:28"><name pos:start="137:9" pos:end="137:10">os</name> <operator pos:start="137:12" pos:end="137:12">=</operator> <name pos:start="137:14" pos:end="137:28"><name pos:start="137:14" pos:end="137:25">output_files</name><index pos:start="137:26" pos:end="137:28">[<expr pos:start="137:27" pos:end="137:27"><name pos:start="137:27" pos:end="137:27">k</name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="139:9" pos:end="143:9">for<control pos:start="139:12" pos:end="139:41">(<init pos:start="139:13" pos:end="139:16"><expr pos:start="139:13" pos:end="139:15"><name pos:start="139:13" pos:end="139:13">i</name><operator pos:start="139:14" pos:end="139:14">=</operator><literal type="number" pos:start="139:15" pos:end="139:15">0</literal></expr>;</init><condition pos:start="139:17" pos:end="139:33"><expr pos:start="139:17" pos:end="139:32"><name pos:start="139:17" pos:end="139:17">i</name><operator pos:start="139:18" pos:end="139:18">&lt;</operator><name pos:start="139:19" pos:end="139:32"><name pos:start="139:19" pos:end="139:20">os</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:32">nb_streams</name></name></expr>;</condition><incr pos:start="139:34" pos:end="139:40"><expr pos:start="139:34" pos:end="139:36"><name pos:start="139:34" pos:end="139:34">i</name><operator pos:start="139:35" pos:end="139:36">++</operator></expr><operator pos:start="139:37" pos:end="139:37">,</operator><expr pos:start="139:38" pos:end="139:40"><name pos:start="139:38" pos:end="139:38">n</name><operator pos:start="139:39" pos:end="139:40">++</operator></expr></incr>)</control> <block pos:start="139:43" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:60">

            <expr_stmt pos:start="141:13" pos:end="141:60"><expr pos:start="141:13" pos:end="141:59"><name pos:start="141:13" pos:end="141:57"><name pos:start="141:13" pos:end="141:22">nb_streams</name><index pos:start="141:23" pos:end="141:57">[<expr pos:start="141:24" pos:end="141:56"><name pos:start="141:24" pos:end="141:37"><name pos:start="141:24" pos:end="141:25">os</name><operator pos:start="141:26" pos:end="141:27">-&gt;</operator><name pos:start="141:28" pos:end="141:34">streams</name><index pos:start="141:35" pos:end="141:37">[<expr pos:start="141:36" pos:end="141:36"><name pos:start="141:36" pos:end="141:36">i</name></expr>]</index></name><operator pos:start="141:38" pos:end="141:39">-&gt;</operator><name pos:start="141:40" pos:end="141:56"><name pos:start="141:40" pos:end="141:44">codec</name><operator pos:start="141:45" pos:end="141:46">-&gt;</operator><name pos:start="141:47" pos:end="141:56">codec_type</name></name></expr>]</index></name><operator pos:start="141:58" pos:end="141:59">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <for pos:start="147:5" pos:end="205:5">for<control pos:start="147:8" pos:end="147:35">(<init pos:start="147:9" pos:end="147:19"><expr pos:start="147:9" pos:end="147:18"><name pos:start="147:9" pos:end="147:12">step</name><operator pos:start="147:13" pos:end="147:13">=</operator><literal type="number" pos:start="147:14" pos:end="147:14">1</literal><operator pos:start="147:15" pos:end="147:16">&lt;&lt;</operator><literal type="number" pos:start="147:17" pos:end="147:18">30</literal></expr>;</init> <condition pos:start="147:21" pos:end="147:25"><expr pos:start="147:21" pos:end="147:24"><name pos:start="147:21" pos:end="147:24">step</name></expr>;</condition> <incr pos:start="147:27" pos:end="147:34"><expr pos:start="147:27" pos:end="147:34"><name pos:start="147:27" pos:end="147:30">step</name><operator pos:start="147:31" pos:end="147:33">&gt;&gt;=</operator><literal type="number" pos:start="147:34" pos:end="147:34">1</literal></expr></incr>)</control><block pos:start="147:36" pos:end="205:5">{<block_content pos:start="149:9" pos:end="203:46">

        <decl_stmt pos:start="149:9" pos:end="149:47"><decl pos:start="149:9" pos:end="149:46"><type pos:start="149:9" pos:end="149:11"><name pos:start="149:9" pos:end="149:11">int</name></type> <name pos:start="149:13" pos:end="149:42"><name pos:start="149:13" pos:end="149:25">found_streams</name><index pos:start="149:26" pos:end="149:42">[<expr pos:start="149:27" pos:end="149:41"><name pos:start="149:27" pos:end="149:41">AVMEDIA_TYPE_NB</name></expr>]</index></name><init pos:start="149:43" pos:end="149:46">=<expr pos:start="149:44" pos:end="149:46"><block pos:start="149:44" pos:end="149:46">{<expr pos:start="149:45" pos:end="149:45"><literal type="number" pos:start="149:45" pos:end="149:45">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <for pos:start="151:9" pos:end="153:42">for<control pos:start="151:12" pos:end="151:40">(<init pos:start="151:13" pos:end="151:16"><expr pos:start="151:13" pos:end="151:15"><name pos:start="151:13" pos:end="151:13">j</name><operator pos:start="151:14" pos:end="151:14">=</operator><literal type="number" pos:start="151:15" pos:end="151:15">0</literal></expr>;</init> <condition pos:start="151:18" pos:end="151:35"><expr pos:start="151:18" pos:end="151:34"><name pos:start="151:18" pos:end="151:18">j</name><operator pos:start="151:19" pos:end="151:19">&lt;</operator><name pos:start="151:20" pos:end="151:34">AVMEDIA_TYPE_NB</name></expr>;</condition> <incr pos:start="151:37" pos:end="151:39"><expr pos:start="151:37" pos:end="151:39"><name pos:start="151:37" pos:end="151:37">j</name><operator pos:start="151:38" pos:end="151:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="153:13" pos:end="153:42"><block_content pos:start="153:13" pos:end="153:42">

            <expr_stmt pos:start="153:13" pos:end="153:42"><expr pos:start="153:13" pos:end="153:41"><name pos:start="153:13" pos:end="153:33"><name pos:start="153:13" pos:end="153:30">nb_frame_threshold</name><index pos:start="153:31" pos:end="153:33">[<expr pos:start="153:32" pos:end="153:32"><name pos:start="153:32" pos:end="153:32">j</name></expr>]</index></name> <operator pos:start="153:35" pos:end="153:36">+=</operator> <name pos:start="153:38" pos:end="153:41">step</name></expr>;</expr_stmt></block_content></block></for>



        <for pos:start="157:9" pos:end="197:9">for<control pos:start="157:12" pos:end="157:41">(<init pos:start="157:13" pos:end="157:16"><expr pos:start="157:13" pos:end="157:15"><name pos:start="157:13" pos:end="157:13">j</name><operator pos:start="157:14" pos:end="157:14">=</operator><literal type="number" pos:start="157:15" pos:end="157:15">0</literal></expr>;</init> <condition pos:start="157:18" pos:end="157:36"><expr pos:start="157:18" pos:end="157:35"><name pos:start="157:18" pos:end="157:18">j</name><operator pos:start="157:19" pos:end="157:19">&lt;</operator><name pos:start="157:20" pos:end="157:35">nb_input_streams</name></expr>;</condition> <incr pos:start="157:38" pos:end="157:40"><expr pos:start="157:38" pos:end="157:40"><name pos:start="157:38" pos:end="157:38">j</name><operator pos:start="157:39" pos:end="157:40">++</operator></expr></incr>)</control> <block pos:start="157:43" pos:end="197:9">{<block_content pos:start="159:13" pos:end="195:13">

            <decl_stmt pos:start="159:13" pos:end="159:23"><decl pos:start="159:13" pos:end="159:22"><type pos:start="159:13" pos:end="159:15"><name pos:start="159:13" pos:end="159:15">int</name></type> <name pos:start="159:17" pos:end="159:20">skip</name><init pos:start="159:21" pos:end="159:22">=<expr pos:start="159:22" pos:end="159:22"><literal type="number" pos:start="159:22" pos:end="159:22">0</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:36"><expr pos:start="161:13" pos:end="161:35"><name pos:start="161:13" pos:end="161:15">ist</name> <operator pos:start="161:17" pos:end="161:17">=</operator> <operator pos:start="161:19" pos:end="161:19">&amp;</operator><name pos:start="161:20" pos:end="161:35"><name pos:start="161:20" pos:end="161:32">input_streams</name><index pos:start="161:33" pos:end="161:35">[<expr pos:start="161:34" pos:end="161:34"><name pos:start="161:34" pos:end="161:34">j</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="163:13" pos:end="187:13"><if pos:start="163:13" pos:end="187:13">if<condition pos:start="163:15" pos:end="163:29">(<expr pos:start="163:16" pos:end="163:28"><name pos:start="163:16" pos:end="163:28">opt_programid</name></expr>)</condition><block pos:start="163:30" pos:end="187:13">{<block_content pos:start="165:17" pos:end="185:17">

                <decl_stmt pos:start="165:17" pos:end="165:26"><decl pos:start="165:17" pos:end="165:22"><type pos:start="165:17" pos:end="165:19"><name pos:start="165:17" pos:end="165:19">int</name></type> <name pos:start="165:21" pos:end="165:22">pi</name></decl>,<decl pos:start="165:24" pos:end="165:25"><type ref="prev" pos:start="165:17" pos:end="165:19"/><name pos:start="165:24" pos:end="165:25">si</name></decl>;</decl_stmt>

                <decl_stmt pos:start="167:17" pos:end="167:71"><decl pos:start="167:17" pos:end="167:70"><type pos:start="167:17" pos:end="167:33"><name pos:start="167:17" pos:end="167:31">AVFormatContext</name> <modifier pos:start="167:33" pos:end="167:33">*</modifier></type><name pos:start="167:34" pos:end="167:34">f</name><init pos:start="167:35" pos:end="167:70">= <expr pos:start="167:37" pos:end="167:70"><name pos:start="167:37" pos:end="167:66"><name pos:start="167:37" pos:end="167:47">input_files</name><index pos:start="167:48" pos:end="167:66">[ <expr pos:start="167:50" pos:end="167:64"><name pos:start="167:50" pos:end="167:64"><name pos:start="167:50" pos:end="167:52">ist</name><operator pos:start="167:53" pos:end="167:54">-&gt;</operator><name pos:start="167:55" pos:end="167:64">file_index</name></name></expr> ]</index></name><operator pos:start="167:67" pos:end="167:67">.</operator><name pos:start="167:68" pos:end="167:70">ctx</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:23"><expr pos:start="169:17" pos:end="169:22"><name pos:start="169:17" pos:end="169:20">skip</name><operator pos:start="169:21" pos:end="169:21">=</operator><literal type="number" pos:start="169:22" pos:end="169:22">1</literal></expr>;</expr_stmt>

                <for pos:start="171:17" pos:end="185:17">for<control pos:start="171:20" pos:end="171:50">(<init pos:start="171:21" pos:end="171:25"><expr pos:start="171:21" pos:end="171:24"><name pos:start="171:21" pos:end="171:22">pi</name><operator pos:start="171:23" pos:end="171:23">=</operator><literal type="number" pos:start="171:24" pos:end="171:24">0</literal></expr>;</init> <condition pos:start="171:27" pos:end="171:44"><expr pos:start="171:27" pos:end="171:43"><name pos:start="171:27" pos:end="171:28">pi</name><operator pos:start="171:29" pos:end="171:29">&lt;</operator><name pos:start="171:30" pos:end="171:43"><name pos:start="171:30" pos:end="171:30">f</name><operator pos:start="171:31" pos:end="171:32">-&gt;</operator><name pos:start="171:33" pos:end="171:43">nb_programs</name></name></expr>;</condition> <incr pos:start="171:46" pos:end="171:49"><expr pos:start="171:46" pos:end="171:49"><name pos:start="171:46" pos:end="171:47">pi</name><operator pos:start="171:48" pos:end="171:49">++</operator></expr></incr>)</control><block pos:start="171:51" pos:end="185:17">{<block_content pos:start="173:21" pos:end="183:25">

                    <decl_stmt pos:start="173:21" pos:end="173:50"><decl pos:start="173:21" pos:end="173:49"><type pos:start="173:21" pos:end="173:31"><name pos:start="173:21" pos:end="173:29">AVProgram</name> <modifier pos:start="173:31" pos:end="173:31">*</modifier></type><name pos:start="173:32" pos:end="173:32">p</name><init pos:start="173:33" pos:end="173:49">= <expr pos:start="173:35" pos:end="173:49"><name pos:start="173:35" pos:end="173:49"><name pos:start="173:35" pos:end="173:35">f</name><operator pos:start="173:36" pos:end="173:37">-&gt;</operator><name pos:start="173:38" pos:end="173:45">programs</name><index pos:start="173:46" pos:end="173:49">[<expr pos:start="173:47" pos:end="173:48"><name pos:start="173:47" pos:end="173:48">pi</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="175:21" pos:end="183:25"><if pos:start="175:21" pos:end="183:25">if<condition pos:start="175:23" pos:end="175:46">(<expr pos:start="175:24" pos:end="175:45"><name pos:start="175:24" pos:end="175:28"><name pos:start="175:24" pos:end="175:24">p</name><operator pos:start="175:25" pos:end="175:26">-&gt;</operator><name pos:start="175:27" pos:end="175:28">id</name></name> <operator pos:start="175:30" pos:end="175:31">==</operator> <name pos:start="175:33" pos:end="175:45">opt_programid</name></expr>)</condition><block type="pseudo" pos:start="177:25" pos:end="183:25"><block_content pos:start="177:25" pos:end="183:25">

                        <for pos:start="177:25" pos:end="183:25">for<control pos:start="177:28" pos:end="177:64">(<init pos:start="177:29" pos:end="177:33"><expr pos:start="177:29" pos:end="177:32"><name pos:start="177:29" pos:end="177:30">si</name><operator pos:start="177:31" pos:end="177:31">=</operator><literal type="number" pos:start="177:32" pos:end="177:32">0</literal></expr>;</init> <condition pos:start="177:35" pos:end="177:58"><expr pos:start="177:35" pos:end="177:57"><name pos:start="177:35" pos:end="177:36">si</name><operator pos:start="177:37" pos:end="177:37">&lt;</operator><name pos:start="177:38" pos:end="177:57"><name pos:start="177:38" pos:end="177:38">p</name><operator pos:start="177:39" pos:end="177:40">-&gt;</operator><name pos:start="177:41" pos:end="177:57">nb_stream_indexes</name></name></expr>;</condition> <incr pos:start="177:60" pos:end="177:63"><expr pos:start="177:60" pos:end="177:63"><name pos:start="177:60" pos:end="177:61">si</name><operator pos:start="177:62" pos:end="177:63">++</operator></expr></incr>)</control><block pos:start="177:65" pos:end="183:25">{<block_content pos:start="179:29" pos:end="181:39">

                            <if_stmt pos:start="179:29" pos:end="181:39"><if pos:start="179:29" pos:end="181:39">if<condition pos:start="179:31" pos:end="179:76">(<expr pos:start="179:32" pos:end="179:75"><name pos:start="179:32" pos:end="179:64"><name pos:start="179:32" pos:end="179:32">f</name><operator pos:start="179:33" pos:end="179:34">-&gt;</operator><name pos:start="179:35" pos:end="179:41">streams</name><index pos:start="179:42" pos:end="179:64">[ <expr pos:start="179:44" pos:end="179:62"><name pos:start="179:44" pos:end="179:62"><name pos:start="179:44" pos:end="179:44">p</name><operator pos:start="179:45" pos:end="179:46">-&gt;</operator><name pos:start="179:47" pos:end="179:58">stream_index</name><index pos:start="179:59" pos:end="179:62">[<expr pos:start="179:60" pos:end="179:61"><name pos:start="179:60" pos:end="179:61">si</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="179:66" pos:end="179:67">==</operator> <name pos:start="179:69" pos:end="179:75"><name pos:start="179:69" pos:end="179:71">ist</name><operator pos:start="179:72" pos:end="179:73">-&gt;</operator><name pos:start="179:74" pos:end="179:75">st</name></name></expr>)</condition><block type="pseudo" pos:start="181:33" pos:end="181:39"><block_content pos:start="181:33" pos:end="181:39">

                                <expr_stmt pos:start="181:33" pos:end="181:39"><expr pos:start="181:33" pos:end="181:38"><name pos:start="181:33" pos:end="181:36">skip</name><operator pos:start="181:37" pos:end="181:37">=</operator><literal type="number" pos:start="181:38" pos:end="181:38">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        </block_content>}</block></for></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="189:13" pos:end="195:13"><if pos:start="189:13" pos:end="195:13">if <condition pos:start="189:16" pos:end="191:99">(<expr pos:start="189:17" pos:end="191:98"><name pos:start="189:17" pos:end="189:28"><name pos:start="189:17" pos:end="189:19">ist</name><operator pos:start="189:20" pos:end="189:21">-&gt;</operator><name pos:start="189:22" pos:end="189:28">discard</name></name> <operator pos:start="189:30" pos:end="189:31">&amp;&amp;</operator> <name pos:start="189:33" pos:end="189:48"><name pos:start="189:33" pos:end="189:35">ist</name><operator pos:start="189:36" pos:end="189:37">-&gt;</operator><name pos:start="189:38" pos:end="189:39">st</name><operator pos:start="189:40" pos:end="189:41">-&gt;</operator><name pos:start="189:42" pos:end="189:48">discard</name></name> <operator pos:start="189:50" pos:end="189:51">!=</operator> <name pos:start="189:53" pos:end="189:65">AVDISCARD_ALL</name> <operator pos:start="189:67" pos:end="189:68">&amp;&amp;</operator> <operator pos:start="189:70" pos:end="189:70">!</operator><name pos:start="189:71" pos:end="189:74">skip</name>

                <operator pos:start="191:17" pos:end="191:18">&amp;&amp;</operator> <name pos:start="191:20" pos:end="191:65"><name pos:start="191:20" pos:end="191:37">nb_frame_threshold</name><index pos:start="191:38" pos:end="191:65">[<expr pos:start="191:39" pos:end="191:64"><name pos:start="191:39" pos:end="191:64"><name pos:start="191:39" pos:end="191:41">ist</name><operator pos:start="191:42" pos:end="191:43">-&gt;</operator><name pos:start="191:44" pos:end="191:45">st</name><operator pos:start="191:46" pos:end="191:47">-&gt;</operator><name pos:start="191:48" pos:end="191:52">codec</name><operator pos:start="191:53" pos:end="191:54">-&gt;</operator><name pos:start="191:55" pos:end="191:64">codec_type</name></name></expr>]</index></name> <operator pos:start="191:67" pos:end="191:68">&lt;=</operator> <name pos:start="191:70" pos:end="191:98"><name pos:start="191:70" pos:end="191:72">ist</name><operator pos:start="191:73" pos:end="191:74">-&gt;</operator><name pos:start="191:75" pos:end="191:76">st</name><operator pos:start="191:77" pos:end="191:78">-&gt;</operator><name pos:start="191:79" pos:end="191:98">codec_info_nb_frames</name></name></expr>)</condition><block pos:start="191:100" pos:end="195:13">{<block_content pos:start="193:17" pos:end="193:60">

                <expr_stmt pos:start="193:17" pos:end="193:60"><expr pos:start="193:17" pos:end="193:59"><name pos:start="193:17" pos:end="193:57"><name pos:start="193:17" pos:end="193:29">found_streams</name><index pos:start="193:30" pos:end="193:57">[<expr pos:start="193:31" pos:end="193:56"><name pos:start="193:31" pos:end="193:56"><name pos:start="193:31" pos:end="193:33">ist</name><operator pos:start="193:34" pos:end="193:35">-&gt;</operator><name pos:start="193:36" pos:end="193:37">st</name><operator pos:start="193:38" pos:end="193:39">-&gt;</operator><name pos:start="193:40" pos:end="193:44">codec</name><operator pos:start="193:45" pos:end="193:46">-&gt;</operator><name pos:start="193:47" pos:end="193:56">codec_type</name></name></expr>]</index></name><operator pos:start="193:58" pos:end="193:59">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <for pos:start="199:9" pos:end="203:46">for<control pos:start="199:12" pos:end="199:40">(<init pos:start="199:13" pos:end="199:16"><expr pos:start="199:13" pos:end="199:15"><name pos:start="199:13" pos:end="199:13">j</name><operator pos:start="199:14" pos:end="199:14">=</operator><literal type="number" pos:start="199:15" pos:end="199:15">0</literal></expr>;</init> <condition pos:start="199:18" pos:end="199:35"><expr pos:start="199:18" pos:end="199:34"><name pos:start="199:18" pos:end="199:18">j</name><operator pos:start="199:19" pos:end="199:19">&lt;</operator><name pos:start="199:20" pos:end="199:34">AVMEDIA_TYPE_NB</name></expr>;</condition> <incr pos:start="199:37" pos:end="199:39"><expr pos:start="199:37" pos:end="199:39"><name pos:start="199:37" pos:end="199:37">j</name><operator pos:start="199:38" pos:end="199:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="201:13" pos:end="203:46"><block_content pos:start="201:13" pos:end="203:46">

            <if_stmt pos:start="201:13" pos:end="203:46"><if pos:start="201:13" pos:end="203:46">if<condition pos:start="201:15" pos:end="201:48">(<expr pos:start="201:16" pos:end="201:47"><name pos:start="201:16" pos:end="201:31"><name pos:start="201:16" pos:end="201:28">found_streams</name><index pos:start="201:29" pos:end="201:31">[<expr pos:start="201:30" pos:end="201:30"><name pos:start="201:30" pos:end="201:30">j</name></expr>]</index></name> <operator pos:start="201:33" pos:end="201:33">&lt;</operator> <name pos:start="201:35" pos:end="201:47"><name pos:start="201:35" pos:end="201:44">nb_streams</name><index pos:start="201:45" pos:end="201:47">[<expr pos:start="201:46" pos:end="201:46"><name pos:start="201:46" pos:end="201:46">j</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="203:17" pos:end="203:46"><block_content pos:start="203:17" pos:end="203:46">

                <expr_stmt pos:start="203:17" pos:end="203:46"><expr pos:start="203:17" pos:end="203:45"><name pos:start="203:17" pos:end="203:37"><name pos:start="203:17" pos:end="203:34">nb_frame_threshold</name><index pos:start="203:35" pos:end="203:37">[<expr pos:start="203:36" pos:end="203:36"><name pos:start="203:36" pos:end="203:36">j</name></expr>]</index></name> <operator pos:start="203:39" pos:end="203:40">-=</operator> <name pos:start="203:42" pos:end="203:45">step</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="207:5" pos:end="207:10"><expr pos:start="207:5" pos:end="207:9"><name pos:start="207:5" pos:end="207:5">n</name> <operator pos:start="207:7" pos:end="207:7">=</operator> <literal type="number" pos:start="207:9" pos:end="207:9">0</literal></expr>;</expr_stmt>

    <for pos:start="209:5" pos:end="357:5">for<control pos:start="209:8" pos:end="209:34">(<init pos:start="209:9" pos:end="209:12"><expr pos:start="209:9" pos:end="209:11"><name pos:start="209:9" pos:end="209:9">k</name><operator pos:start="209:10" pos:end="209:10">=</operator><literal type="number" pos:start="209:11" pos:end="209:11">0</literal></expr>;</init><condition pos:start="209:13" pos:end="209:30"><expr pos:start="209:13" pos:end="209:29"><name pos:start="209:13" pos:end="209:13">k</name><operator pos:start="209:14" pos:end="209:14">&lt;</operator><name pos:start="209:15" pos:end="209:29">nb_output_files</name></expr>;</condition><incr pos:start="209:31" pos:end="209:33"><expr pos:start="209:31" pos:end="209:33"><name pos:start="209:31" pos:end="209:31">k</name><operator pos:start="209:32" pos:end="209:33">++</operator></expr></incr>)</control> <block pos:start="209:36" pos:end="357:5">{<block_content pos:start="211:9" pos:end="355:9">

        <expr_stmt pos:start="211:9" pos:end="211:29"><expr pos:start="211:9" pos:end="211:28"><name pos:start="211:9" pos:end="211:10">os</name> <operator pos:start="211:12" pos:end="211:12">=</operator> <name pos:start="211:14" pos:end="211:28"><name pos:start="211:14" pos:end="211:25">output_files</name><index pos:start="211:26" pos:end="211:28">[<expr pos:start="211:27" pos:end="211:27"><name pos:start="211:27" pos:end="211:27">k</name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="213:9" pos:end="355:9">for<control pos:start="213:12" pos:end="213:41">(<init pos:start="213:13" pos:end="213:16"><expr pos:start="213:13" pos:end="213:15"><name pos:start="213:13" pos:end="213:13">i</name><operator pos:start="213:14" pos:end="213:14">=</operator><literal type="number" pos:start="213:15" pos:end="213:15">0</literal></expr>;</init><condition pos:start="213:17" pos:end="213:33"><expr pos:start="213:17" pos:end="213:32"><name pos:start="213:17" pos:end="213:17">i</name><operator pos:start="213:18" pos:end="213:18">&lt;</operator><name pos:start="213:19" pos:end="213:32"><name pos:start="213:19" pos:end="213:20">os</name><operator pos:start="213:21" pos:end="213:22">-&gt;</operator><name pos:start="213:23" pos:end="213:32">nb_streams</name></name></expr>;</condition><incr pos:start="213:34" pos:end="213:40"><expr pos:start="213:34" pos:end="213:36"><name pos:start="213:34" pos:end="213:34">i</name><operator pos:start="213:35" pos:end="213:36">++</operator></expr><operator pos:start="213:37" pos:end="213:37">,</operator><expr pos:start="213:38" pos:end="213:40"><name pos:start="213:38" pos:end="213:38">n</name><operator pos:start="213:39" pos:end="213:40">++</operator></expr></incr>)</control> <block pos:start="213:43" pos:end="355:9">{<block_content pos:start="215:13" pos:end="353:65">

            <decl_stmt pos:start="215:13" pos:end="215:22"><decl pos:start="215:13" pos:end="215:21"><type pos:start="215:13" pos:end="215:15"><name pos:start="215:13" pos:end="215:15">int</name></type> <name pos:start="215:17" pos:end="215:21">found</name></decl>;</decl_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:63"><expr pos:start="217:13" pos:end="217:62"><name pos:start="217:13" pos:end="217:15">ost</name> <operator pos:start="217:17" pos:end="217:17">=</operator> <name pos:start="217:19" pos:end="217:30"><name pos:start="217:19" pos:end="217:27">ost_table</name><index pos:start="217:28" pos:end="217:30">[<expr pos:start="217:29" pos:end="217:29"><name pos:start="217:29" pos:end="217:29">n</name></expr>]</index></name> <operator pos:start="217:32" pos:end="217:32">=</operator> <name pos:start="217:34" pos:end="217:62"><name pos:start="217:34" pos:end="217:56">output_streams_for_file</name><index pos:start="217:57" pos:end="217:59">[<expr pos:start="217:58" pos:end="217:58"><name pos:start="217:58" pos:end="217:58">k</name></expr>]</index><index pos:start="217:60" pos:end="217:62">[<expr pos:start="217:61" pos:end="217:61"><name pos:start="217:61" pos:end="217:61">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="219:13" pos:end="343:13"><if pos:start="219:13" pos:end="247:13">if <condition pos:start="219:16" pos:end="219:35">(<expr pos:start="219:17" pos:end="219:34"><name pos:start="219:17" pos:end="219:30">nb_stream_maps</name> <operator pos:start="219:32" pos:end="219:32">&gt;</operator> <literal type="number" pos:start="219:34" pos:end="219:34">0</literal></expr>)</condition> <block pos:start="219:37" pos:end="247:13">{<block_content pos:start="221:17" pos:end="243:17">

                <expr_stmt pos:start="221:17" pos:end="223:48"><expr pos:start="221:17" pos:end="223:47"><name pos:start="221:17" pos:end="221:33"><name pos:start="221:17" pos:end="221:19">ost</name><operator pos:start="221:20" pos:end="221:21">-&gt;</operator><name pos:start="221:22" pos:end="221:33">source_index</name></name> <operator pos:start="221:35" pos:end="221:35">=</operator> <name pos:start="221:37" pos:end="221:74"><name pos:start="221:37" pos:end="221:47">input_files</name><index pos:start="221:48" pos:end="221:74">[<expr pos:start="221:49" pos:end="221:73"><name pos:start="221:49" pos:end="221:62"><name pos:start="221:49" pos:end="221:59">stream_maps</name><index pos:start="221:60" pos:end="221:62">[<expr pos:start="221:61" pos:end="221:61"><name pos:start="221:61" pos:end="221:61">n</name></expr>]</index></name><operator pos:start="221:63" pos:end="221:63">.</operator><name pos:start="221:64" pos:end="221:73">file_index</name></expr>]</index></name><operator pos:start="221:75" pos:end="221:75">.</operator><name pos:start="221:76" pos:end="221:84">ist_index</name> <operator pos:start="221:86" pos:end="221:86">+</operator>

                    <name pos:start="223:21" pos:end="223:34"><name pos:start="223:21" pos:end="223:31">stream_maps</name><index pos:start="223:32" pos:end="223:34">[<expr pos:start="223:33" pos:end="223:33"><name pos:start="223:33" pos:end="223:33">n</name></expr>]</index></name><operator pos:start="223:35" pos:end="223:35">.</operator><name pos:start="223:36" pos:end="223:47">stream_index</name></expr>;</expr_stmt>



                <comment type="block" pos:start="227:17" pos:end="227:62">/* Sanity check that the stream types match */</comment>

                <if_stmt pos:start="229:17" pos:end="243:17"><if pos:start="229:17" pos:end="243:17">if <condition pos:start="229:20" pos:end="229:105">(<expr pos:start="229:21" pos:end="229:104"><name pos:start="229:21" pos:end="229:52"><name pos:start="229:21" pos:end="229:33">input_streams</name><index pos:start="229:34" pos:end="229:52">[<expr pos:start="229:35" pos:end="229:51"><name pos:start="229:35" pos:end="229:51"><name pos:start="229:35" pos:end="229:37">ost</name><operator pos:start="229:38" pos:end="229:39">-&gt;</operator><name pos:start="229:40" pos:end="229:51">source_index</name></name></expr>]</index></name><operator pos:start="229:53" pos:end="229:53">.</operator><name pos:start="229:54" pos:end="229:74"><name pos:start="229:54" pos:end="229:55">st</name><operator pos:start="229:56" pos:end="229:57">-&gt;</operator><name pos:start="229:58" pos:end="229:62">codec</name><operator pos:start="229:63" pos:end="229:64">-&gt;</operator><name pos:start="229:65" pos:end="229:74">codec_type</name></name> <operator pos:start="229:76" pos:end="229:77">!=</operator> <name pos:start="229:79" pos:end="229:104"><name pos:start="229:79" pos:end="229:81">ost</name><operator pos:start="229:82" pos:end="229:83">-&gt;</operator><name pos:start="229:84" pos:end="229:85">st</name><operator pos:start="229:86" pos:end="229:87">-&gt;</operator><name pos:start="229:88" pos:end="229:92">codec</name><operator pos:start="229:93" pos:end="229:94">-&gt;</operator><name pos:start="229:95" pos:end="229:104">codec_type</name></name></expr>)</condition> <block pos:start="229:107" pos:end="243:17">{<block_content pos:start="231:21" pos:end="241:35">

                    <decl_stmt pos:start="231:21" pos:end="231:43"><decl pos:start="231:21" pos:end="231:42"><type pos:start="231:21" pos:end="231:23"><name pos:start="231:21" pos:end="231:23">int</name></type> <name pos:start="231:25" pos:end="231:25">i</name><init pos:start="231:26" pos:end="231:42">= <expr pos:start="231:28" pos:end="231:42"><name pos:start="231:28" pos:end="231:42"><name pos:start="231:28" pos:end="231:30">ost</name><operator pos:start="231:31" pos:end="231:32">-&gt;</operator><name pos:start="231:33" pos:end="231:42">file_index</name></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="233:21" pos:end="233:85"><expr pos:start="233:21" pos:end="233:84"><call pos:start="233:21" pos:end="233:84"><name pos:start="233:21" pos:end="233:34">av_dump_format</name><argument_list pos:start="233:35" pos:end="233:84">(<argument pos:start="233:36" pos:end="233:50"><expr pos:start="233:36" pos:end="233:50"><name pos:start="233:36" pos:end="233:50"><name pos:start="233:36" pos:end="233:47">output_files</name><index pos:start="233:48" pos:end="233:50">[<expr pos:start="233:49" pos:end="233:49"><name pos:start="233:49" pos:end="233:49">i</name></expr>]</index></name></expr></argument>, <argument pos:start="233:53" pos:end="233:53"><expr pos:start="233:53" pos:end="233:53"><name pos:start="233:53" pos:end="233:53">i</name></expr></argument>, <argument pos:start="233:56" pos:end="233:80"><expr pos:start="233:56" pos:end="233:80"><name pos:start="233:56" pos:end="233:70"><name pos:start="233:56" pos:end="233:67">output_files</name><index pos:start="233:68" pos:end="233:70">[<expr pos:start="233:69" pos:end="233:69"><name pos:start="233:69" pos:end="233:69">i</name></expr>]</index></name><operator pos:start="233:71" pos:end="233:72">-&gt;</operator><name pos:start="233:73" pos:end="233:80">filename</name></expr></argument>, <argument pos:start="233:83" pos:end="233:83"><expr pos:start="233:83" pos:end="233:83"><literal type="number" pos:start="233:83" pos:end="233:83">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="235:21" pos:end="239:53"><expr pos:start="235:21" pos:end="239:52"><call pos:start="235:21" pos:end="239:52"><name pos:start="235:21" pos:end="235:27">fprintf</name><argument_list pos:start="235:28" pos:end="239:52">(<argument pos:start="235:29" pos:end="235:34"><expr pos:start="235:29" pos:end="235:34"><name pos:start="235:29" pos:end="235:34">stderr</name></expr></argument>, <argument pos:start="235:37" pos:end="235:88"><expr pos:start="235:37" pos:end="235:88"><literal type="string" pos:start="235:37" pos:end="235:88">"Codec type mismatch for mapping #%d.%d -&gt; #%d.%d\n"</literal></expr></argument>,

                        <argument pos:start="237:25" pos:end="237:49"><expr pos:start="237:25" pos:end="237:49"><name pos:start="237:25" pos:end="237:38"><name pos:start="237:25" pos:end="237:35">stream_maps</name><index pos:start="237:36" pos:end="237:38">[<expr pos:start="237:37" pos:end="237:37"><name pos:start="237:37" pos:end="237:37">n</name></expr>]</index></name><operator pos:start="237:39" pos:end="237:39">.</operator><name pos:start="237:40" pos:end="237:49">file_index</name></expr></argument>, <argument pos:start="237:52" pos:end="237:78"><expr pos:start="237:52" pos:end="237:78"><name pos:start="237:52" pos:end="237:65"><name pos:start="237:52" pos:end="237:62">stream_maps</name><index pos:start="237:63" pos:end="237:65">[<expr pos:start="237:64" pos:end="237:64"><name pos:start="237:64" pos:end="237:64">n</name></expr>]</index></name><operator pos:start="237:66" pos:end="237:66">.</operator><name pos:start="237:67" pos:end="237:78">stream_index</name></expr></argument>,

                        <argument pos:start="239:25" pos:end="239:39"><expr pos:start="239:25" pos:end="239:39"><name pos:start="239:25" pos:end="239:39"><name pos:start="239:25" pos:end="239:27">ost</name><operator pos:start="239:28" pos:end="239:29">-&gt;</operator><name pos:start="239:30" pos:end="239:39">file_index</name></name></expr></argument>, <argument pos:start="239:42" pos:end="239:51"><expr pos:start="239:42" pos:end="239:51"><name pos:start="239:42" pos:end="239:51"><name pos:start="239:42" pos:end="239:44">ost</name><operator pos:start="239:45" pos:end="239:46">-&gt;</operator><name pos:start="239:47" pos:end="239:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="241:21" pos:end="241:35"><expr pos:start="241:21" pos:end="241:34"><call pos:start="241:21" pos:end="241:34"><name pos:start="241:21" pos:end="241:31">ffmpeg_exit</name><argument_list pos:start="241:32" pos:end="241:34">(<argument pos:start="241:33" pos:end="241:33"><expr pos:start="241:33" pos:end="241:33"><literal type="number" pos:start="241:33" pos:end="241:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



            </block_content>}</block></if> <else pos:start="247:15" pos:end="343:13">else <block pos:start="247:20" pos:end="343:13">{<block_content pos:start="251:17" pos:end="341:17">

                <comment type="block" pos:start="249:17" pos:end="249:104">/* get corresponding input stream index : we select the first one with the right type */</comment>

                <expr_stmt pos:start="251:17" pos:end="251:26"><expr pos:start="251:17" pos:end="251:25"><name pos:start="251:17" pos:end="251:21">found</name> <operator pos:start="251:23" pos:end="251:23">=</operator> <literal type="number" pos:start="251:25" pos:end="251:25">0</literal></expr>;</expr_stmt>

                <for pos:start="253:17" pos:end="299:17">for <control pos:start="253:21" pos:end="253:54">(<init pos:start="253:22" pos:end="253:27"><expr pos:start="253:22" pos:end="253:26"><name pos:start="253:22" pos:end="253:22">j</name> <operator pos:start="253:24" pos:end="253:24">=</operator> <literal type="number" pos:start="253:26" pos:end="253:26">0</literal></expr>;</init> <condition pos:start="253:29" pos:end="253:49"><expr pos:start="253:29" pos:end="253:48"><name pos:start="253:29" pos:end="253:29">j</name> <operator pos:start="253:31" pos:end="253:31">&lt;</operator> <name pos:start="253:33" pos:end="253:48">nb_input_streams</name></expr>;</condition> <incr pos:start="253:51" pos:end="253:53"><expr pos:start="253:51" pos:end="253:53"><name pos:start="253:51" pos:end="253:51">j</name><operator pos:start="253:52" pos:end="253:53">++</operator></expr></incr>)</control> <block pos:start="253:56" pos:end="299:17">{<block_content pos:start="255:21" pos:end="297:21">

                    <decl_stmt pos:start="255:21" pos:end="255:31"><decl pos:start="255:21" pos:end="255:30"><type pos:start="255:21" pos:end="255:23"><name pos:start="255:21" pos:end="255:23">int</name></type> <name pos:start="255:25" pos:end="255:28">skip</name><init pos:start="255:29" pos:end="255:30">=<expr pos:start="255:30" pos:end="255:30"><literal type="number" pos:start="255:30" pos:end="255:30">0</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="257:21" pos:end="257:44"><expr pos:start="257:21" pos:end="257:43"><name pos:start="257:21" pos:end="257:23">ist</name> <operator pos:start="257:25" pos:end="257:25">=</operator> <operator pos:start="257:27" pos:end="257:27">&amp;</operator><name pos:start="257:28" pos:end="257:43"><name pos:start="257:28" pos:end="257:40">input_streams</name><index pos:start="257:41" pos:end="257:43">[<expr pos:start="257:42" pos:end="257:42"><name pos:start="257:42" pos:end="257:42">j</name></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="259:21" pos:end="283:21"><if pos:start="259:21" pos:end="283:21">if<condition pos:start="259:23" pos:end="259:37">(<expr pos:start="259:24" pos:end="259:36"><name pos:start="259:24" pos:end="259:36">opt_programid</name></expr>)</condition><block pos:start="259:38" pos:end="283:21">{<block_content pos:start="261:25" pos:end="281:25">

                        <decl_stmt pos:start="261:25" pos:end="261:34"><decl pos:start="261:25" pos:end="261:30"><type pos:start="261:25" pos:end="261:27"><name pos:start="261:25" pos:end="261:27">int</name></type> <name pos:start="261:29" pos:end="261:30">pi</name></decl>,<decl pos:start="261:32" pos:end="261:33"><type ref="prev" pos:start="261:25" pos:end="261:27"/><name pos:start="261:32" pos:end="261:33">si</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="263:25" pos:end="263:78"><decl pos:start="263:25" pos:end="263:77"><type pos:start="263:25" pos:end="263:41"><name pos:start="263:25" pos:end="263:39">AVFormatContext</name> <modifier pos:start="263:41" pos:end="263:41">*</modifier></type><name pos:start="263:42" pos:end="263:42">f</name> <init pos:start="263:44" pos:end="263:77">= <expr pos:start="263:46" pos:end="263:77"><name pos:start="263:46" pos:end="263:73"><name pos:start="263:46" pos:end="263:56">input_files</name><index pos:start="263:57" pos:end="263:73">[<expr pos:start="263:58" pos:end="263:72"><name pos:start="263:58" pos:end="263:72"><name pos:start="263:58" pos:end="263:60">ist</name><operator pos:start="263:61" pos:end="263:62">-&gt;</operator><name pos:start="263:63" pos:end="263:72">file_index</name></name></expr>]</index></name><operator pos:start="263:74" pos:end="263:74">.</operator><name pos:start="263:75" pos:end="263:77">ctx</name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="265:25" pos:end="265:31"><expr pos:start="265:25" pos:end="265:30"><name pos:start="265:25" pos:end="265:28">skip</name><operator pos:start="265:29" pos:end="265:29">=</operator><literal type="number" pos:start="265:30" pos:end="265:30">1</literal></expr>;</expr_stmt>

                        <for pos:start="267:25" pos:end="281:25">for<control pos:start="267:28" pos:end="267:58">(<init pos:start="267:29" pos:end="267:33"><expr pos:start="267:29" pos:end="267:32"><name pos:start="267:29" pos:end="267:30">pi</name><operator pos:start="267:31" pos:end="267:31">=</operator><literal type="number" pos:start="267:32" pos:end="267:32">0</literal></expr>;</init> <condition pos:start="267:35" pos:end="267:52"><expr pos:start="267:35" pos:end="267:51"><name pos:start="267:35" pos:end="267:36">pi</name><operator pos:start="267:37" pos:end="267:37">&lt;</operator><name pos:start="267:38" pos:end="267:51"><name pos:start="267:38" pos:end="267:38">f</name><operator pos:start="267:39" pos:end="267:40">-&gt;</operator><name pos:start="267:41" pos:end="267:51">nb_programs</name></name></expr>;</condition> <incr pos:start="267:54" pos:end="267:57"><expr pos:start="267:54" pos:end="267:57"><name pos:start="267:54" pos:end="267:55">pi</name><operator pos:start="267:56" pos:end="267:57">++</operator></expr></incr>)</control><block pos:start="267:59" pos:end="281:25">{<block_content pos:start="269:29" pos:end="279:33">

                            <decl_stmt pos:start="269:29" pos:end="269:58"><decl pos:start="269:29" pos:end="269:57"><type pos:start="269:29" pos:end="269:39"><name pos:start="269:29" pos:end="269:37">AVProgram</name> <modifier pos:start="269:39" pos:end="269:39">*</modifier></type><name pos:start="269:40" pos:end="269:40">p</name><init pos:start="269:41" pos:end="269:57">= <expr pos:start="269:43" pos:end="269:57"><name pos:start="269:43" pos:end="269:57"><name pos:start="269:43" pos:end="269:43">f</name><operator pos:start="269:44" pos:end="269:45">-&gt;</operator><name pos:start="269:46" pos:end="269:53">programs</name><index pos:start="269:54" pos:end="269:57">[<expr pos:start="269:55" pos:end="269:56"><name pos:start="269:55" pos:end="269:56">pi</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                            <if_stmt pos:start="271:29" pos:end="279:33"><if pos:start="271:29" pos:end="279:33">if<condition pos:start="271:31" pos:end="271:54">(<expr pos:start="271:32" pos:end="271:53"><name pos:start="271:32" pos:end="271:36"><name pos:start="271:32" pos:end="271:32">p</name><operator pos:start="271:33" pos:end="271:34">-&gt;</operator><name pos:start="271:35" pos:end="271:36">id</name></name> <operator pos:start="271:38" pos:end="271:39">==</operator> <name pos:start="271:41" pos:end="271:53">opt_programid</name></expr>)</condition><block type="pseudo" pos:start="273:33" pos:end="279:33"><block_content pos:start="273:33" pos:end="279:33">

                                <for pos:start="273:33" pos:end="279:33">for<control pos:start="273:36" pos:end="273:72">(<init pos:start="273:37" pos:end="273:41"><expr pos:start="273:37" pos:end="273:40"><name pos:start="273:37" pos:end="273:38">si</name><operator pos:start="273:39" pos:end="273:39">=</operator><literal type="number" pos:start="273:40" pos:end="273:40">0</literal></expr>;</init> <condition pos:start="273:43" pos:end="273:66"><expr pos:start="273:43" pos:end="273:65"><name pos:start="273:43" pos:end="273:44">si</name><operator pos:start="273:45" pos:end="273:45">&lt;</operator><name pos:start="273:46" pos:end="273:65"><name pos:start="273:46" pos:end="273:46">p</name><operator pos:start="273:47" pos:end="273:48">-&gt;</operator><name pos:start="273:49" pos:end="273:65">nb_stream_indexes</name></name></expr>;</condition> <incr pos:start="273:68" pos:end="273:71"><expr pos:start="273:68" pos:end="273:71"><name pos:start="273:68" pos:end="273:69">si</name><operator pos:start="273:70" pos:end="273:71">++</operator></expr></incr>)</control><block pos:start="273:73" pos:end="279:33">{<block_content pos:start="275:37" pos:end="277:47">

                                    <if_stmt pos:start="275:37" pos:end="277:47"><if pos:start="275:37" pos:end="277:47">if<condition pos:start="275:39" pos:end="275:84">(<expr pos:start="275:40" pos:end="275:83"><name pos:start="275:40" pos:end="275:72"><name pos:start="275:40" pos:end="275:40">f</name><operator pos:start="275:41" pos:end="275:42">-&gt;</operator><name pos:start="275:43" pos:end="275:49">streams</name><index pos:start="275:50" pos:end="275:72">[ <expr pos:start="275:52" pos:end="275:70"><name pos:start="275:52" pos:end="275:70"><name pos:start="275:52" pos:end="275:52">p</name><operator pos:start="275:53" pos:end="275:54">-&gt;</operator><name pos:start="275:55" pos:end="275:66">stream_index</name><index pos:start="275:67" pos:end="275:70">[<expr pos:start="275:68" pos:end="275:69"><name pos:start="275:68" pos:end="275:69">si</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="275:74" pos:end="275:75">==</operator> <name pos:start="275:77" pos:end="275:83"><name pos:start="275:77" pos:end="275:79">ist</name><operator pos:start="275:80" pos:end="275:81">-&gt;</operator><name pos:start="275:82" pos:end="275:83">st</name></name></expr>)</condition><block type="pseudo" pos:start="277:41" pos:end="277:47"><block_content pos:start="277:41" pos:end="277:47">

                                        <expr_stmt pos:start="277:41" pos:end="277:47"><expr pos:start="277:41" pos:end="277:46"><name pos:start="277:41" pos:end="277:44">skip</name><operator pos:start="277:45" pos:end="277:45">=</operator><literal type="number" pos:start="277:46" pos:end="277:46">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                                </block_content>}</block></for></block_content></block></if></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="285:21" pos:end="297:21"><if pos:start="285:21" pos:end="297:21">if <condition pos:start="285:24" pos:end="289:104">(<expr pos:start="285:25" pos:end="289:103"><name pos:start="285:25" pos:end="285:36"><name pos:start="285:25" pos:end="285:27">ist</name><operator pos:start="285:28" pos:end="285:29">-&gt;</operator><name pos:start="285:30" pos:end="285:36">discard</name></name> <operator pos:start="285:38" pos:end="285:39">&amp;&amp;</operator> <name pos:start="285:41" pos:end="285:56"><name pos:start="285:41" pos:end="285:43">ist</name><operator pos:start="285:44" pos:end="285:45">-&gt;</operator><name pos:start="285:46" pos:end="285:47">st</name><operator pos:start="285:48" pos:end="285:49">-&gt;</operator><name pos:start="285:50" pos:end="285:56">discard</name></name> <operator pos:start="285:58" pos:end="285:59">!=</operator> <name pos:start="285:61" pos:end="285:73">AVDISCARD_ALL</name> <operator pos:start="285:75" pos:end="285:76">&amp;&amp;</operator> <operator pos:start="285:78" pos:end="285:78">!</operator><name pos:start="285:79" pos:end="285:82">skip</name> <operator pos:start="285:84" pos:end="285:85">&amp;&amp;</operator>

                        <name pos:start="287:25" pos:end="287:50"><name pos:start="287:25" pos:end="287:27">ist</name><operator pos:start="287:28" pos:end="287:29">-&gt;</operator><name pos:start="287:30" pos:end="287:31">st</name><operator pos:start="287:32" pos:end="287:33">-&gt;</operator><name pos:start="287:34" pos:end="287:38">codec</name><operator pos:start="287:39" pos:end="287:40">-&gt;</operator><name pos:start="287:41" pos:end="287:50">codec_type</name></name> <operator pos:start="287:52" pos:end="287:53">==</operator> <name pos:start="287:55" pos:end="287:80"><name pos:start="287:55" pos:end="287:57">ost</name><operator pos:start="287:58" pos:end="287:59">-&gt;</operator><name pos:start="287:60" pos:end="287:61">st</name><operator pos:start="287:62" pos:end="287:63">-&gt;</operator><name pos:start="287:64" pos:end="287:68">codec</name><operator pos:start="287:69" pos:end="287:70">-&gt;</operator><name pos:start="287:71" pos:end="287:80">codec_type</name></name> <operator pos:start="287:82" pos:end="287:83">&amp;&amp;</operator>

                        <name pos:start="289:25" pos:end="289:70"><name pos:start="289:25" pos:end="289:42">nb_frame_threshold</name><index pos:start="289:43" pos:end="289:70">[<expr pos:start="289:44" pos:end="289:69"><name pos:start="289:44" pos:end="289:69"><name pos:start="289:44" pos:end="289:46">ist</name><operator pos:start="289:47" pos:end="289:48">-&gt;</operator><name pos:start="289:49" pos:end="289:50">st</name><operator pos:start="289:51" pos:end="289:52">-&gt;</operator><name pos:start="289:53" pos:end="289:57">codec</name><operator pos:start="289:58" pos:end="289:59">-&gt;</operator><name pos:start="289:60" pos:end="289:69">codec_type</name></name></expr>]</index></name> <operator pos:start="289:72" pos:end="289:73">&lt;=</operator> <name pos:start="289:75" pos:end="289:103"><name pos:start="289:75" pos:end="289:77">ist</name><operator pos:start="289:78" pos:end="289:79">-&gt;</operator><name pos:start="289:80" pos:end="289:81">st</name><operator pos:start="289:82" pos:end="289:83">-&gt;</operator><name pos:start="289:84" pos:end="289:103">codec_info_nb_frames</name></name></expr>)</condition> <block pos:start="289:106" pos:end="297:21">{<block_content pos:start="291:29" pos:end="295:34">

                            <expr_stmt pos:start="291:29" pos:end="291:50"><expr pos:start="291:29" pos:end="291:49"><name pos:start="291:29" pos:end="291:45"><name pos:start="291:29" pos:end="291:31">ost</name><operator pos:start="291:32" pos:end="291:33">-&gt;</operator><name pos:start="291:34" pos:end="291:45">source_index</name></name> <operator pos:start="291:47" pos:end="291:47">=</operator> <name pos:start="291:49" pos:end="291:49">j</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="293:29" pos:end="293:38"><expr pos:start="293:29" pos:end="293:37"><name pos:start="293:29" pos:end="293:33">found</name> <operator pos:start="293:35" pos:end="293:35">=</operator> <literal type="number" pos:start="293:37" pos:end="293:37">1</literal></expr>;</expr_stmt>

                            <break pos:start="295:29" pos:end="295:34">break;</break>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>



                <if_stmt pos:start="303:17" pos:end="341:17"><if pos:start="303:17" pos:end="341:17">if <condition pos:start="303:20" pos:end="303:27">(<expr pos:start="303:21" pos:end="303:26"><operator pos:start="303:21" pos:end="303:21">!</operator><name pos:start="303:22" pos:end="303:26">found</name></expr>)</condition> <block pos:start="303:29" pos:end="341:17">{<block_content pos:start="305:21" pos:end="339:21">

                    <if_stmt pos:start="305:21" pos:end="325:21"><if pos:start="305:21" pos:end="325:21">if<condition pos:start="305:23" pos:end="305:39">(<expr pos:start="305:24" pos:end="305:38"><operator pos:start="305:24" pos:end="305:24">!</operator> <name pos:start="305:26" pos:end="305:38">opt_programid</name></expr>)</condition> <block pos:start="305:41" pos:end="325:21">{<block_content pos:start="309:25" pos:end="323:25">

                        <comment type="block" pos:start="307:25" pos:end="307:65">/* try again and reuse existing stream */</comment>

                        <for pos:start="309:25" pos:end="323:25">for <control pos:start="309:29" pos:end="309:62">(<init pos:start="309:30" pos:end="309:35"><expr pos:start="309:30" pos:end="309:34"><name pos:start="309:30" pos:end="309:30">j</name> <operator pos:start="309:32" pos:end="309:32">=</operator> <literal type="number" pos:start="309:34" pos:end="309:34">0</literal></expr>;</init> <condition pos:start="309:37" pos:end="309:57"><expr pos:start="309:37" pos:end="309:56"><name pos:start="309:37" pos:end="309:37">j</name> <operator pos:start="309:39" pos:end="309:39">&lt;</operator> <name pos:start="309:41" pos:end="309:56">nb_input_streams</name></expr>;</condition> <incr pos:start="309:59" pos:end="309:61"><expr pos:start="309:59" pos:end="309:61"><name pos:start="309:59" pos:end="309:59">j</name><operator pos:start="309:60" pos:end="309:61">++</operator></expr></incr>)</control> <block pos:start="309:64" pos:end="323:25">{<block_content pos:start="311:29" pos:end="321:29">

                            <expr_stmt pos:start="311:29" pos:end="311:52"><expr pos:start="311:29" pos:end="311:51"><name pos:start="311:29" pos:end="311:31">ist</name> <operator pos:start="311:33" pos:end="311:33">=</operator> <operator pos:start="311:35" pos:end="311:35">&amp;</operator><name pos:start="311:36" pos:end="311:51"><name pos:start="311:36" pos:end="311:48">input_streams</name><index pos:start="311:49" pos:end="311:51">[<expr pos:start="311:50" pos:end="311:50"><name pos:start="311:50" pos:end="311:50">j</name></expr>]</index></name></expr>;</expr_stmt>

                            <if_stmt pos:start="313:29" pos:end="321:29"><if pos:start="313:29" pos:end="321:29">if <condition pos:start="313:32" pos:end="315:69">(   <expr pos:start="313:36" pos:end="315:68"><name pos:start="313:36" pos:end="313:61"><name pos:start="313:36" pos:end="313:38">ist</name><operator pos:start="313:39" pos:end="313:40">-&gt;</operator><name pos:start="313:41" pos:end="313:42">st</name><operator pos:start="313:43" pos:end="313:44">-&gt;</operator><name pos:start="313:45" pos:end="313:49">codec</name><operator pos:start="313:50" pos:end="313:51">-&gt;</operator><name pos:start="313:52" pos:end="313:61">codec_type</name></name> <operator pos:start="313:63" pos:end="313:64">==</operator> <name pos:start="313:66" pos:end="313:91"><name pos:start="313:66" pos:end="313:68">ost</name><operator pos:start="313:69" pos:end="313:70">-&gt;</operator><name pos:start="313:71" pos:end="313:72">st</name><operator pos:start="313:73" pos:end="313:74">-&gt;</operator><name pos:start="313:75" pos:end="313:79">codec</name><operator pos:start="313:80" pos:end="313:81">-&gt;</operator><name pos:start="313:82" pos:end="313:91">codec_type</name></name>

                                <operator pos:start="315:33" pos:end="315:34">&amp;&amp;</operator> <name pos:start="315:36" pos:end="315:51"><name pos:start="315:36" pos:end="315:38">ist</name><operator pos:start="315:39" pos:end="315:40">-&gt;</operator><name pos:start="315:41" pos:end="315:42">st</name><operator pos:start="315:43" pos:end="315:44">-&gt;</operator><name pos:start="315:45" pos:end="315:51">discard</name></name> <operator pos:start="315:53" pos:end="315:54">!=</operator> <name pos:start="315:56" pos:end="315:68">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="315:71" pos:end="321:29">{<block_content pos:start="317:33" pos:end="319:42">

                                <expr_stmt pos:start="317:33" pos:end="317:54"><expr pos:start="317:33" pos:end="317:53"><name pos:start="317:33" pos:end="317:49"><name pos:start="317:33" pos:end="317:35">ost</name><operator pos:start="317:36" pos:end="317:37">-&gt;</operator><name pos:start="317:38" pos:end="317:49">source_index</name></name> <operator pos:start="317:51" pos:end="317:51">=</operator> <name pos:start="317:53" pos:end="317:53">j</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="319:33" pos:end="319:42"><expr pos:start="319:33" pos:end="319:41"><name pos:start="319:33" pos:end="319:37">found</name> <operator pos:start="319:39" pos:end="319:39">=</operator> <literal type="number" pos:start="319:41" pos:end="319:41">1</literal></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="327:21" pos:end="339:21"><if pos:start="327:21" pos:end="339:21">if <condition pos:start="327:24" pos:end="327:31">(<expr pos:start="327:25" pos:end="327:30"><operator pos:start="327:25" pos:end="327:25">!</operator><name pos:start="327:26" pos:end="327:30">found</name></expr>)</condition> <block pos:start="327:33" pos:end="339:21">{<block_content pos:start="329:25" pos:end="337:39">

                        <decl_stmt pos:start="329:25" pos:end="329:47"><decl pos:start="329:25" pos:end="329:46"><type pos:start="329:25" pos:end="329:27"><name pos:start="329:25" pos:end="329:27">int</name></type> <name pos:start="329:29" pos:end="329:29">i</name><init pos:start="329:30" pos:end="329:46">= <expr pos:start="329:32" pos:end="329:46"><name pos:start="329:32" pos:end="329:46"><name pos:start="329:32" pos:end="329:34">ost</name><operator pos:start="329:35" pos:end="329:36">-&gt;</operator><name pos:start="329:37" pos:end="329:46">file_index</name></name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="331:25" pos:end="331:89"><expr pos:start="331:25" pos:end="331:88"><call pos:start="331:25" pos:end="331:88"><name pos:start="331:25" pos:end="331:38">av_dump_format</name><argument_list pos:start="331:39" pos:end="331:88">(<argument pos:start="331:40" pos:end="331:54"><expr pos:start="331:40" pos:end="331:54"><name pos:start="331:40" pos:end="331:54"><name pos:start="331:40" pos:end="331:51">output_files</name><index pos:start="331:52" pos:end="331:54">[<expr pos:start="331:53" pos:end="331:53"><name pos:start="331:53" pos:end="331:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="331:57" pos:end="331:57"><expr pos:start="331:57" pos:end="331:57"><name pos:start="331:57" pos:end="331:57">i</name></expr></argument>, <argument pos:start="331:60" pos:end="331:84"><expr pos:start="331:60" pos:end="331:84"><name pos:start="331:60" pos:end="331:74"><name pos:start="331:60" pos:end="331:71">output_files</name><index pos:start="331:72" pos:end="331:74">[<expr pos:start="331:73" pos:end="331:73"><name pos:start="331:73" pos:end="331:73">i</name></expr>]</index></name><operator pos:start="331:75" pos:end="331:76">-&gt;</operator><name pos:start="331:77" pos:end="331:84">filename</name></expr></argument>, <argument pos:start="331:87" pos:end="331:87"><expr pos:start="331:87" pos:end="331:87"><literal type="number" pos:start="331:87" pos:end="331:87">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="333:25" pos:end="335:61"><expr pos:start="333:25" pos:end="335:60"><call pos:start="333:25" pos:end="335:60"><name pos:start="333:25" pos:end="333:31">fprintf</name><argument_list pos:start="333:32" pos:end="335:60">(<argument pos:start="333:33" pos:end="333:38"><expr pos:start="333:33" pos:end="333:38"><name pos:start="333:33" pos:end="333:38">stderr</name></expr></argument>, <argument pos:start="333:41" pos:end="333:101"><expr pos:start="333:41" pos:end="333:101"><literal type="string" pos:start="333:41" pos:end="333:101">"Could not find input stream matching output stream #%d.%d\n"</literal></expr></argument>,

                                <argument pos:start="335:33" pos:end="335:47"><expr pos:start="335:33" pos:end="335:47"><name pos:start="335:33" pos:end="335:47"><name pos:start="335:33" pos:end="335:35">ost</name><operator pos:start="335:36" pos:end="335:37">-&gt;</operator><name pos:start="335:38" pos:end="335:47">file_index</name></name></expr></argument>, <argument pos:start="335:50" pos:end="335:59"><expr pos:start="335:50" pos:end="335:59"><name pos:start="335:50" pos:end="335:59"><name pos:start="335:50" pos:end="335:52">ost</name><operator pos:start="335:53" pos:end="335:54">-&gt;</operator><name pos:start="335:55" pos:end="335:59">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="337:25" pos:end="337:39"><expr pos:start="337:25" pos:end="337:38"><call pos:start="337:25" pos:end="337:38"><name pos:start="337:25" pos:end="337:35">ffmpeg_exit</name><argument_list pos:start="337:36" pos:end="337:38">(<argument pos:start="337:37" pos:end="337:37"><expr pos:start="337:37" pos:end="337:37"><literal type="number" pos:start="337:37" pos:end="337:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="345:13" pos:end="345:52"><expr pos:start="345:13" pos:end="345:51"><name pos:start="345:13" pos:end="345:15">ist</name> <operator pos:start="345:17" pos:end="345:17">=</operator> <operator pos:start="345:19" pos:end="345:19">&amp;</operator><name pos:start="345:20" pos:end="345:51"><name pos:start="345:20" pos:end="345:32">input_streams</name><index pos:start="345:33" pos:end="345:51">[<expr pos:start="345:34" pos:end="345:50"><name pos:start="345:34" pos:end="345:50"><name pos:start="345:34" pos:end="345:36">ost</name><operator pos:start="345:37" pos:end="345:38">-&gt;</operator><name pos:start="345:39" pos:end="345:50">source_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="347:13" pos:end="347:29"><expr pos:start="347:13" pos:end="347:28"><name pos:start="347:13" pos:end="347:24"><name pos:start="347:13" pos:end="347:15">ist</name><operator pos:start="347:16" pos:end="347:17">-&gt;</operator><name pos:start="347:18" pos:end="347:24">discard</name></name> <operator pos:start="347:26" pos:end="347:26">=</operator> <literal type="number" pos:start="347:28" pos:end="347:28">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="353:65"><expr pos:start="349:13" pos:end="353:64"><name pos:start="349:13" pos:end="349:25"><name pos:start="349:13" pos:end="349:15">ost</name><operator pos:start="349:16" pos:end="349:17">-&gt;</operator><name pos:start="349:18" pos:end="349:25">sync_ist</name></name> <operator pos:start="349:27" pos:end="349:27">=</operator> <ternary pos:start="349:29" pos:end="353:64"><condition pos:start="349:29" pos:end="349:50"><expr pos:start="349:29" pos:end="349:48"><operator pos:start="349:29" pos:end="349:29">(</operator><name pos:start="349:30" pos:end="349:43">nb_stream_maps</name> <operator pos:start="349:45" pos:end="349:45">&gt;</operator> <literal type="number" pos:start="349:47" pos:end="349:47">0</literal><operator pos:start="349:48" pos:end="349:48">)</operator></expr> ?</condition><then pos:start="351:17" pos:end="353:58">

                <expr pos:start="351:17" pos:end="353:58"><operator pos:start="351:17" pos:end="351:17">&amp;</operator><name pos:start="351:18" pos:end="353:58"><name pos:start="351:18" pos:end="351:30">input_streams</name><index pos:start="351:31" pos:end="353:58">[<expr pos:start="351:32" pos:end="353:57"><name pos:start="351:32" pos:end="351:74"><name pos:start="351:32" pos:end="351:42">input_files</name><index pos:start="351:43" pos:end="351:74">[<expr pos:start="351:44" pos:end="351:73"><name pos:start="351:44" pos:end="351:57"><name pos:start="351:44" pos:end="351:54">stream_maps</name><index pos:start="351:55" pos:end="351:57">[<expr pos:start="351:56" pos:end="351:56"><name pos:start="351:56" pos:end="351:56">n</name></expr>]</index></name><operator pos:start="351:58" pos:end="351:58">.</operator><name pos:start="351:59" pos:end="351:73">sync_file_index</name></expr>]</index></name><operator pos:start="351:75" pos:end="351:75">.</operator><name pos:start="351:76" pos:end="351:84">ist_index</name> <operator pos:start="351:86" pos:end="351:86">+</operator>

                         <name pos:start="353:26" pos:end="353:39"><name pos:start="353:26" pos:end="353:36">stream_maps</name><index pos:start="353:37" pos:end="353:39">[<expr pos:start="353:38" pos:end="353:38"><name pos:start="353:38" pos:end="353:38">n</name></expr>]</index></name><operator pos:start="353:40" pos:end="353:40">.</operator><name pos:start="353:41" pos:end="353:57">sync_stream_index</name></expr>]</index></name></expr> </then><else pos:start="353:60" pos:end="353:64">: <expr pos:start="353:62" pos:end="353:64"><name pos:start="353:62" pos:end="353:64">ist</name></expr></else></ternary></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="361:5" pos:end="361:74">/* for each output stream, we compute the right encoding parameters */</comment>

    <for pos:start="363:5" pos:end="773:5">for<control pos:start="363:8" pos:end="363:30">(<init pos:start="363:9" pos:end="363:12"><expr pos:start="363:9" pos:end="363:11"><name pos:start="363:9" pos:end="363:9">i</name><operator pos:start="363:10" pos:end="363:10">=</operator><literal type="number" pos:start="363:11" pos:end="363:11">0</literal></expr>;</init><condition pos:start="363:13" pos:end="363:26"><expr pos:start="363:13" pos:end="363:25"><name pos:start="363:13" pos:end="363:13">i</name><operator pos:start="363:14" pos:end="363:14">&lt;</operator><name pos:start="363:15" pos:end="363:25">nb_ostreams</name></expr>;</condition><incr pos:start="363:27" pos:end="363:29"><expr pos:start="363:27" pos:end="363:29"><name pos:start="363:27" pos:end="363:27">i</name><operator pos:start="363:28" pos:end="363:29">++</operator></expr></incr>)</control> <block pos:start="363:32" pos:end="773:5">{<block_content pos:start="365:9" pos:end="771:9">

        <expr_stmt pos:start="365:9" pos:end="365:27"><expr pos:start="365:9" pos:end="365:26"><name pos:start="365:9" pos:end="365:11">ost</name> <operator pos:start="365:13" pos:end="365:13">=</operator> <name pos:start="365:15" pos:end="365:26"><name pos:start="365:15" pos:end="365:23">ost_table</name><index pos:start="365:24" pos:end="365:26">[<expr pos:start="365:25" pos:end="365:25"><name pos:start="365:25" pos:end="365:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="367:9" pos:end="367:43"><expr pos:start="367:9" pos:end="367:42"><name pos:start="367:9" pos:end="367:10">os</name> <operator pos:start="367:12" pos:end="367:12">=</operator> <name pos:start="367:14" pos:end="367:42"><name pos:start="367:14" pos:end="367:25">output_files</name><index pos:start="367:26" pos:end="367:42">[<expr pos:start="367:27" pos:end="367:41"><name pos:start="367:27" pos:end="367:41"><name pos:start="367:27" pos:end="367:29">ost</name><operator pos:start="367:30" pos:end="367:31">-&gt;</operator><name pos:start="367:32" pos:end="367:41">file_index</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="369:9" pos:end="369:48"><expr pos:start="369:9" pos:end="369:47"><name pos:start="369:9" pos:end="369:11">ist</name> <operator pos:start="369:13" pos:end="369:13">=</operator> <operator pos:start="369:15" pos:end="369:15">&amp;</operator><name pos:start="369:16" pos:end="369:47"><name pos:start="369:16" pos:end="369:28">input_streams</name><index pos:start="369:29" pos:end="369:47">[<expr pos:start="369:30" pos:end="369:46"><name pos:start="369:30" pos:end="369:46"><name pos:start="369:30" pos:end="369:32">ost</name><operator pos:start="369:33" pos:end="369:34">-&gt;</operator><name pos:start="369:35" pos:end="369:46">source_index</name></name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="373:9" pos:end="373:31"><expr pos:start="373:9" pos:end="373:30"><name pos:start="373:9" pos:end="373:13">codec</name> <operator pos:start="373:15" pos:end="373:15">=</operator> <name pos:start="373:17" pos:end="373:30"><name pos:start="373:17" pos:end="373:19">ost</name><operator pos:start="373:20" pos:end="373:21">-&gt;</operator><name pos:start="373:22" pos:end="373:23">st</name><operator pos:start="373:24" pos:end="373:25">-&gt;</operator><name pos:start="373:26" pos:end="373:30">codec</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:32"><expr pos:start="375:9" pos:end="375:31"><name pos:start="375:9" pos:end="375:14">icodec</name> <operator pos:start="375:16" pos:end="375:16">=</operator> <name pos:start="375:18" pos:end="375:31"><name pos:start="375:18" pos:end="375:20">ist</name><operator pos:start="375:21" pos:end="375:22">-&gt;</operator><name pos:start="375:23" pos:end="375:24">st</name><operator pos:start="375:25" pos:end="375:26">-&gt;</operator><name pos:start="375:27" pos:end="375:31">codec</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="379:9" pos:end="383:49"><if pos:start="379:9" pos:end="383:49">if <condition pos:start="379:12" pos:end="379:38">(<expr pos:start="379:13" pos:end="379:37"><name pos:start="379:13" pos:end="379:37">metadata_streams_autocopy</name></expr>)</condition><block type="pseudo" pos:start="381:13" pos:end="383:49"><block_content pos:start="381:13" pos:end="383:49">

            <expr_stmt pos:start="381:13" pos:end="383:49"><expr pos:start="381:13" pos:end="383:48"><call pos:start="381:13" pos:end="383:48"><name pos:start="381:13" pos:end="381:24">av_dict_copy</name><argument_list pos:start="381:25" pos:end="383:48">(<argument pos:start="381:26" pos:end="381:43"><expr pos:start="381:26" pos:end="381:43"><operator pos:start="381:26" pos:end="381:26">&amp;</operator><name pos:start="381:27" pos:end="381:43"><name pos:start="381:27" pos:end="381:29">ost</name><operator pos:start="381:30" pos:end="381:31">-&gt;</operator><name pos:start="381:32" pos:end="381:33">st</name><operator pos:start="381:34" pos:end="381:35">-&gt;</operator><name pos:start="381:36" pos:end="381:43">metadata</name></name></expr></argument>, <argument pos:start="381:46" pos:end="381:62"><expr pos:start="381:46" pos:end="381:62"><name pos:start="381:46" pos:end="381:62"><name pos:start="381:46" pos:end="381:48">ist</name><operator pos:start="381:49" pos:end="381:50">-&gt;</operator><name pos:start="381:51" pos:end="381:52">st</name><operator pos:start="381:53" pos:end="381:54">-&gt;</operator><name pos:start="381:55" pos:end="381:62">metadata</name></name></expr></argument>,

                         <argument pos:start="383:26" pos:end="383:47"><expr pos:start="383:26" pos:end="383:47"><name pos:start="383:26" pos:end="383:47">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="387:9" pos:end="387:52"><expr pos:start="387:9" pos:end="387:51"><name pos:start="387:9" pos:end="387:28"><name pos:start="387:9" pos:end="387:11">ost</name><operator pos:start="387:12" pos:end="387:13">-&gt;</operator><name pos:start="387:14" pos:end="387:15">st</name><operator pos:start="387:16" pos:end="387:17">-&gt;</operator><name pos:start="387:18" pos:end="387:28">disposition</name></name> <operator pos:start="387:30" pos:end="387:30">=</operator> <name pos:start="387:32" pos:end="387:51"><name pos:start="387:32" pos:end="387:34">ist</name><operator pos:start="387:35" pos:end="387:36">-&gt;</operator><name pos:start="387:37" pos:end="387:38">st</name><operator pos:start="387:39" pos:end="387:40">-&gt;</operator><name pos:start="387:41" pos:end="387:51">disposition</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="389:9" pos:end="389:64"><expr pos:start="389:9" pos:end="389:63"><name pos:start="389:9" pos:end="389:34"><name pos:start="389:9" pos:end="389:13">codec</name><operator pos:start="389:14" pos:end="389:15">-&gt;</operator><name pos:start="389:16" pos:end="389:34">bits_per_raw_sample</name></name><operator pos:start="389:35" pos:end="389:35">=</operator> <name pos:start="389:37" pos:end="389:63"><name pos:start="389:37" pos:end="389:42">icodec</name><operator pos:start="389:43" pos:end="389:44">-&gt;</operator><name pos:start="389:45" pos:end="389:63">bits_per_raw_sample</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="391:9" pos:end="391:71"><expr pos:start="391:9" pos:end="391:70"><name pos:start="391:9" pos:end="391:37"><name pos:start="391:9" pos:end="391:13">codec</name><operator pos:start="391:14" pos:end="391:15">-&gt;</operator><name pos:start="391:16" pos:end="391:37">chroma_sample_location</name></name> <operator pos:start="391:39" pos:end="391:39">=</operator> <name pos:start="391:41" pos:end="391:70"><name pos:start="391:41" pos:end="391:46">icodec</name><operator pos:start="391:47" pos:end="391:48">-&gt;</operator><name pos:start="391:49" pos:end="391:70">chroma_sample_location</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="395:9" pos:end="761:9"><if pos:start="395:9" pos:end="537:9">if <condition pos:start="395:12" pos:end="395:33">(<expr pos:start="395:13" pos:end="395:32"><name pos:start="395:13" pos:end="395:32"><name pos:start="395:13" pos:end="395:15">ost</name><operator pos:start="395:16" pos:end="395:17">-&gt;</operator><name pos:start="395:18" pos:end="395:19">st</name><operator pos:start="395:20" pos:end="395:21">-&gt;</operator><name pos:start="395:22" pos:end="395:32">stream_copy</name></name></expr>)</condition> <block pos:start="395:35" pos:end="537:9">{<block_content pos:start="397:13" pos:end="535:13">

            <decl_stmt pos:start="397:13" pos:end="397:98"><decl pos:start="397:13" pos:end="397:97"><type pos:start="397:13" pos:end="397:20"><name pos:start="397:13" pos:end="397:20">uint64_t</name></type> <name pos:start="397:22" pos:end="397:31">extra_size</name> <init pos:start="397:33" pos:end="397:97">= <expr pos:start="397:35" pos:end="397:97"><operator pos:start="397:35" pos:end="397:35">(</operator><name pos:start="397:36" pos:end="397:43">uint64_t</name><operator pos:start="397:44" pos:end="397:44">)</operator><name pos:start="397:45" pos:end="397:66"><name pos:start="397:45" pos:end="397:50">icodec</name><operator pos:start="397:51" pos:end="397:52">-&gt;</operator><name pos:start="397:53" pos:end="397:66">extradata_size</name></name> <operator pos:start="397:68" pos:end="397:68">+</operator> <name pos:start="397:70" pos:end="397:97">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="401:13" pos:end="403:26"><if pos:start="401:13" pos:end="403:26">if <condition pos:start="401:16" pos:end="401:37">(<expr pos:start="401:17" pos:end="401:36"><name pos:start="401:17" pos:end="401:26">extra_size</name> <operator pos:start="401:28" pos:end="401:28">&gt;</operator> <name pos:start="401:30" pos:end="401:36">INT_MAX</name></expr>)</condition><block type="pseudo" pos:start="403:17" pos:end="403:26"><block_content pos:start="403:17" pos:end="403:26">

                <goto pos:start="403:17" pos:end="403:26">goto <name pos:start="403:22" pos:end="403:25">fail</name>;</goto></block_content></block></if></if_stmt>



            <comment type="block" pos:start="407:13" pos:end="407:73">/* if stream_copy is selected, no need to decode or encode */</comment>

            <expr_stmt pos:start="409:13" pos:end="409:47"><expr pos:start="409:13" pos:end="409:46"><name pos:start="409:13" pos:end="409:27"><name pos:start="409:13" pos:end="409:17">codec</name><operator pos:start="409:18" pos:end="409:19">-&gt;</operator><name pos:start="409:20" pos:end="409:27">codec_id</name></name> <operator pos:start="409:29" pos:end="409:29">=</operator> <name pos:start="409:31" pos:end="409:46"><name pos:start="409:31" pos:end="409:36">icodec</name><operator pos:start="409:37" pos:end="409:38">-&gt;</operator><name pos:start="409:39" pos:end="409:46">codec_id</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="411:13" pos:end="411:51"><expr pos:start="411:13" pos:end="411:50"><name pos:start="411:13" pos:end="411:29"><name pos:start="411:13" pos:end="411:17">codec</name><operator pos:start="411:18" pos:end="411:19">-&gt;</operator><name pos:start="411:20" pos:end="411:29">codec_type</name></name> <operator pos:start="411:31" pos:end="411:31">=</operator> <name pos:start="411:33" pos:end="411:50"><name pos:start="411:33" pos:end="411:38">icodec</name><operator pos:start="411:39" pos:end="411:40">-&gt;</operator><name pos:start="411:41" pos:end="411:50">codec_type</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="415:13" pos:end="425:13"><if pos:start="415:13" pos:end="425:13">if<condition pos:start="415:15" pos:end="415:33">(<expr pos:start="415:16" pos:end="415:32"><operator pos:start="415:16" pos:end="415:16">!</operator><name pos:start="415:17" pos:end="415:32"><name pos:start="415:17" pos:end="415:21">codec</name><operator pos:start="415:22" pos:end="415:23">-&gt;</operator><name pos:start="415:24" pos:end="415:32">codec_tag</name></name></expr>)</condition><block pos:start="415:34" pos:end="425:13">{<block_content pos:start="417:17" pos:end="423:57">

                <if_stmt pos:start="417:17" pos:end="423:57"><if pos:start="417:17" pos:end="423:57">if<condition pos:start="417:19" pos:end="421:86">(   <expr pos:start="417:23" pos:end="421:85"><operator pos:start="417:23" pos:end="417:23">!</operator><name pos:start="417:24" pos:end="417:45"><name pos:start="417:24" pos:end="417:25">os</name><operator pos:start="417:26" pos:end="417:27">-&gt;</operator><name pos:start="417:28" pos:end="417:34">oformat</name><operator pos:start="417:35" pos:end="417:36">-&gt;</operator><name pos:start="417:37" pos:end="417:45">codec_tag</name></name>

                   <operator pos:start="419:20" pos:end="419:21">||</operator> <call pos:start="419:23" pos:end="419:81"><name pos:start="419:23" pos:end="419:37">av_codec_get_id</name> <argument_list pos:start="419:39" pos:end="419:81">(<argument pos:start="419:40" pos:end="419:61"><expr pos:start="419:40" pos:end="419:61"><name pos:start="419:40" pos:end="419:61"><name pos:start="419:40" pos:end="419:41">os</name><operator pos:start="419:42" pos:end="419:43">-&gt;</operator><name pos:start="419:44" pos:end="419:50">oformat</name><operator pos:start="419:51" pos:end="419:52">-&gt;</operator><name pos:start="419:53" pos:end="419:61">codec_tag</name></name></expr></argument>, <argument pos:start="419:64" pos:end="419:80"><expr pos:start="419:64" pos:end="419:80"><name pos:start="419:64" pos:end="419:80"><name pos:start="419:64" pos:end="419:69">icodec</name><operator pos:start="419:70" pos:end="419:71">-&gt;</operator><name pos:start="419:72" pos:end="419:80">codec_tag</name></name></expr></argument>)</argument_list></call> <operator pos:start="419:83" pos:end="419:84">==</operator> <name pos:start="419:86" pos:end="419:100"><name pos:start="419:86" pos:end="419:90">codec</name><operator pos:start="419:91" pos:end="419:92">-&gt;</operator><name pos:start="419:93" pos:end="419:100">codec_id</name></name>

                   <operator pos:start="421:20" pos:end="421:21">||</operator> <call pos:start="421:23" pos:end="421:80"><name pos:start="421:23" pos:end="421:38">av_codec_get_tag</name><argument_list pos:start="421:39" pos:end="421:80">(<argument pos:start="421:40" pos:end="421:61"><expr pos:start="421:40" pos:end="421:61"><name pos:start="421:40" pos:end="421:61"><name pos:start="421:40" pos:end="421:41">os</name><operator pos:start="421:42" pos:end="421:43">-&gt;</operator><name pos:start="421:44" pos:end="421:50">oformat</name><operator pos:start="421:51" pos:end="421:52">-&gt;</operator><name pos:start="421:53" pos:end="421:61">codec_tag</name></name></expr></argument>, <argument pos:start="421:64" pos:end="421:79"><expr pos:start="421:64" pos:end="421:79"><name pos:start="421:64" pos:end="421:79"><name pos:start="421:64" pos:end="421:69">icodec</name><operator pos:start="421:70" pos:end="421:71">-&gt;</operator><name pos:start="421:72" pos:end="421:79">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="421:82" pos:end="421:83">&lt;=</operator> <literal type="number" pos:start="421:85" pos:end="421:85">0</literal></expr>)</condition><block type="pseudo" pos:start="423:21" pos:end="423:57"><block_content pos:start="423:21" pos:end="423:57">

                    <expr_stmt pos:start="423:21" pos:end="423:57"><expr pos:start="423:21" pos:end="423:56"><name pos:start="423:21" pos:end="423:36"><name pos:start="423:21" pos:end="423:25">codec</name><operator pos:start="423:26" pos:end="423:27">-&gt;</operator><name pos:start="423:28" pos:end="423:36">codec_tag</name></name> <operator pos:start="423:38" pos:end="423:38">=</operator> <name pos:start="423:40" pos:end="423:56"><name pos:start="423:40" pos:end="423:45">icodec</name><operator pos:start="423:46" pos:end="423:47">-&gt;</operator><name pos:start="423:48" pos:end="423:56">codec_tag</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="429:13" pos:end="429:47"><expr pos:start="429:13" pos:end="429:46"><name pos:start="429:13" pos:end="429:27"><name pos:start="429:13" pos:end="429:17">codec</name><operator pos:start="429:18" pos:end="429:19">-&gt;</operator><name pos:start="429:20" pos:end="429:27">bit_rate</name></name> <operator pos:start="429:29" pos:end="429:29">=</operator> <name pos:start="429:31" pos:end="429:46"><name pos:start="429:31" pos:end="429:36">icodec</name><operator pos:start="429:37" pos:end="429:38">-&gt;</operator><name pos:start="429:39" pos:end="429:46">bit_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="431:13" pos:end="431:56"><expr pos:start="431:13" pos:end="431:55"><name pos:start="431:13" pos:end="431:30"><name pos:start="431:13" pos:end="431:17">codec</name><operator pos:start="431:18" pos:end="431:19">-&gt;</operator><name pos:start="431:20" pos:end="431:30">rc_max_rate</name></name>    <operator pos:start="431:35" pos:end="431:35">=</operator> <name pos:start="431:37" pos:end="431:55"><name pos:start="431:37" pos:end="431:42">icodec</name><operator pos:start="431:43" pos:end="431:44">-&gt;</operator><name pos:start="431:45" pos:end="431:55">rc_max_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="433:13" pos:end="433:59"><expr pos:start="433:13" pos:end="433:58"><name pos:start="433:13" pos:end="433:33"><name pos:start="433:13" pos:end="433:17">codec</name><operator pos:start="433:18" pos:end="433:19">-&gt;</operator><name pos:start="433:20" pos:end="433:33">rc_buffer_size</name></name> <operator pos:start="433:35" pos:end="433:35">=</operator> <name pos:start="433:37" pos:end="433:58"><name pos:start="433:37" pos:end="433:42">icodec</name><operator pos:start="433:43" pos:end="433:44">-&gt;</operator><name pos:start="433:45" pos:end="433:58">rc_buffer_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="435:13" pos:end="435:53"><expr pos:start="435:13" pos:end="435:52"><name pos:start="435:13" pos:end="435:28"><name pos:start="435:13" pos:end="435:17">codec</name><operator pos:start="435:18" pos:end="435:19">-&gt;</operator><name pos:start="435:20" pos:end="435:28">extradata</name></name><operator pos:start="435:29" pos:end="435:29">=</operator> <call pos:start="435:31" pos:end="435:52"><name pos:start="435:31" pos:end="435:40">av_mallocz</name><argument_list pos:start="435:41" pos:end="435:52">(<argument pos:start="435:42" pos:end="435:51"><expr pos:start="435:42" pos:end="435:51"><name pos:start="435:42" pos:end="435:51">extra_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="437:13" pos:end="439:26"><if pos:start="437:13" pos:end="439:26">if <condition pos:start="437:16" pos:end="437:34">(<expr pos:start="437:17" pos:end="437:33"><operator pos:start="437:17" pos:end="437:17">!</operator><name pos:start="437:18" pos:end="437:33"><name pos:start="437:18" pos:end="437:22">codec</name><operator pos:start="437:23" pos:end="437:24">-&gt;</operator><name pos:start="437:25" pos:end="437:33">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="439:17" pos:end="439:26"><block_content pos:start="439:17" pos:end="439:26">

                <goto pos:start="439:17" pos:end="439:26">goto <name pos:start="439:22" pos:end="439:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="441:13" pos:end="441:80"><expr pos:start="441:13" pos:end="441:79"><call pos:start="441:13" pos:end="441:79"><name pos:start="441:13" pos:end="441:18">memcpy</name><argument_list pos:start="441:19" pos:end="441:79">(<argument pos:start="441:20" pos:end="441:35"><expr pos:start="441:20" pos:end="441:35"><name pos:start="441:20" pos:end="441:35"><name pos:start="441:20" pos:end="441:24">codec</name><operator pos:start="441:25" pos:end="441:26">-&gt;</operator><name pos:start="441:27" pos:end="441:35">extradata</name></name></expr></argument>, <argument pos:start="441:38" pos:end="441:54"><expr pos:start="441:38" pos:end="441:54"><name pos:start="441:38" pos:end="441:54"><name pos:start="441:38" pos:end="441:43">icodec</name><operator pos:start="441:44" pos:end="441:45">-&gt;</operator><name pos:start="441:46" pos:end="441:54">extradata</name></name></expr></argument>, <argument pos:start="441:57" pos:end="441:78"><expr pos:start="441:57" pos:end="441:78"><name pos:start="441:57" pos:end="441:78"><name pos:start="441:57" pos:end="441:62">icodec</name><operator pos:start="441:63" pos:end="441:64">-&gt;</operator><name pos:start="441:65" pos:end="441:78">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="443:13" pos:end="443:58"><expr pos:start="443:13" pos:end="443:57"><name pos:start="443:13" pos:end="443:33"><name pos:start="443:13" pos:end="443:17">codec</name><operator pos:start="443:18" pos:end="443:19">-&gt;</operator><name pos:start="443:20" pos:end="443:33">extradata_size</name></name><operator pos:start="443:34" pos:end="443:34">=</operator> <name pos:start="443:36" pos:end="443:57"><name pos:start="443:36" pos:end="443:41">icodec</name><operator pos:start="443:42" pos:end="443:43">-&gt;</operator><name pos:start="443:44" pos:end="443:57">extradata_size</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="445:13" pos:end="457:54"><if pos:start="445:13" pos:end="455:13">if<condition pos:start="445:15" pos:end="445:146">(<expr pos:start="445:16" pos:end="445:145"><operator pos:start="445:16" pos:end="445:16">!</operator><name pos:start="445:17" pos:end="445:23">copy_tb</name> <operator pos:start="445:25" pos:end="445:26">&amp;&amp;</operator> <call pos:start="445:28" pos:end="445:52"><name pos:start="445:28" pos:end="445:33">av_q2d</name><argument_list pos:start="445:34" pos:end="445:52">(<argument pos:start="445:35" pos:end="445:51"><expr pos:start="445:35" pos:end="445:51"><name pos:start="445:35" pos:end="445:51"><name pos:start="445:35" pos:end="445:40">icodec</name><operator pos:start="445:41" pos:end="445:42">-&gt;</operator><name pos:start="445:43" pos:end="445:51">time_base</name></name></expr></argument>)</argument_list></call><operator pos:start="445:53" pos:end="445:53">*</operator><name pos:start="445:54" pos:end="445:76"><name pos:start="445:54" pos:end="445:59">icodec</name><operator pos:start="445:60" pos:end="445:61">-&gt;</operator><name pos:start="445:62" pos:end="445:76">ticks_per_frame</name></name> <operator pos:start="445:78" pos:end="445:78">&gt;</operator> <call pos:start="445:80" pos:end="445:105"><name pos:start="445:80" pos:end="445:85">av_q2d</name><argument_list pos:start="445:86" pos:end="445:105">(<argument pos:start="445:87" pos:end="445:104"><expr pos:start="445:87" pos:end="445:104"><name pos:start="445:87" pos:end="445:104"><name pos:start="445:87" pos:end="445:89">ist</name><operator pos:start="445:90" pos:end="445:91">-&gt;</operator><name pos:start="445:92" pos:end="445:93">st</name><operator pos:start="445:94" pos:end="445:95">-&gt;</operator><name pos:start="445:96" pos:end="445:104">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="445:107" pos:end="445:108">&amp;&amp;</operator> <call pos:start="445:110" pos:end="445:135"><name pos:start="445:110" pos:end="445:115">av_q2d</name><argument_list pos:start="445:116" pos:end="445:135">(<argument pos:start="445:117" pos:end="445:134"><expr pos:start="445:117" pos:end="445:134"><name pos:start="445:117" pos:end="445:134"><name pos:start="445:117" pos:end="445:119">ist</name><operator pos:start="445:120" pos:end="445:121">-&gt;</operator><name pos:start="445:122" pos:end="445:123">st</name><operator pos:start="445:124" pos:end="445:125">-&gt;</operator><name pos:start="445:126" pos:end="445:134">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="445:137" pos:end="445:137">&lt;</operator> <literal type="number" pos:start="445:139" pos:end="445:141">1.0</literal><operator pos:start="445:142" pos:end="445:142">/</operator><literal type="number" pos:start="445:143" pos:end="445:145">500</literal></expr>)</condition><block pos:start="445:147" pos:end="455:13">{<block_content pos:start="447:17" pos:end="453:79">

                <expr_stmt pos:start="447:17" pos:end="447:53"><expr pos:start="447:17" pos:end="447:52"><name pos:start="447:17" pos:end="447:32"><name pos:start="447:17" pos:end="447:21">codec</name><operator pos:start="447:22" pos:end="447:23">-&gt;</operator><name pos:start="447:24" pos:end="447:32">time_base</name></name> <operator pos:start="447:34" pos:end="447:34">=</operator> <name pos:start="447:36" pos:end="447:52"><name pos:start="447:36" pos:end="447:41">icodec</name><operator pos:start="447:42" pos:end="447:43">-&gt;</operator><name pos:start="447:44" pos:end="447:52">time_base</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="449:17" pos:end="449:64"><expr pos:start="449:17" pos:end="449:63"><name pos:start="449:17" pos:end="449:36"><name pos:start="449:17" pos:end="449:21">codec</name><operator pos:start="449:22" pos:end="449:23">-&gt;</operator><name pos:start="449:24" pos:end="449:32">time_base</name><operator pos:start="449:33" pos:end="449:33">.</operator><name pos:start="449:34" pos:end="449:36">num</name></name> <operator pos:start="449:38" pos:end="449:39">*=</operator> <name pos:start="449:41" pos:end="449:63"><name pos:start="449:41" pos:end="449:46">icodec</name><operator pos:start="449:47" pos:end="449:48">-&gt;</operator><name pos:start="449:49" pos:end="449:63">ticks_per_frame</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="451:17" pos:end="453:79"><expr pos:start="451:17" pos:end="453:78"><call pos:start="451:17" pos:end="453:78"><name pos:start="451:17" pos:end="451:25">av_reduce</name><argument_list pos:start="451:26" pos:end="453:78">(<argument pos:start="451:27" pos:end="451:47"><expr pos:start="451:27" pos:end="451:47"><operator pos:start="451:27" pos:end="451:27">&amp;</operator><name pos:start="451:28" pos:end="451:47"><name pos:start="451:28" pos:end="451:32">codec</name><operator pos:start="451:33" pos:end="451:34">-&gt;</operator><name pos:start="451:35" pos:end="451:43">time_base</name><operator pos:start="451:44" pos:end="451:44">.</operator><name pos:start="451:45" pos:end="451:47">num</name></name></expr></argument>, <argument pos:start="451:50" pos:end="451:70"><expr pos:start="451:50" pos:end="451:70"><operator pos:start="451:50" pos:end="451:50">&amp;</operator><name pos:start="451:51" pos:end="451:70"><name pos:start="451:51" pos:end="451:55">codec</name><operator pos:start="451:56" pos:end="451:57">-&gt;</operator><name pos:start="451:58" pos:end="451:66">time_base</name><operator pos:start="451:67" pos:end="451:67">.</operator><name pos:start="451:68" pos:end="451:70">den</name></name></expr></argument>,

                          <argument pos:start="453:27" pos:end="453:46"><expr pos:start="453:27" pos:end="453:46"><name pos:start="453:27" pos:end="453:46"><name pos:start="453:27" pos:end="453:31">codec</name><operator pos:start="453:32" pos:end="453:33">-&gt;</operator><name pos:start="453:34" pos:end="453:42">time_base</name><operator pos:start="453:43" pos:end="453:43">.</operator><name pos:start="453:44" pos:end="453:46">num</name></name></expr></argument>, <argument pos:start="453:49" pos:end="453:68"><expr pos:start="453:49" pos:end="453:68"><name pos:start="453:49" pos:end="453:68"><name pos:start="453:49" pos:end="453:53">codec</name><operator pos:start="453:54" pos:end="453:55">-&gt;</operator><name pos:start="453:56" pos:end="453:64">time_base</name><operator pos:start="453:65" pos:end="453:65">.</operator><name pos:start="453:66" pos:end="453:68">den</name></name></expr></argument>, <argument pos:start="453:71" pos:end="453:77"><expr pos:start="453:71" pos:end="453:77"><name pos:start="453:71" pos:end="453:77">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="455:14" pos:end="457:54">else<block type="pseudo" pos:start="457:17" pos:end="457:54"><block_content pos:start="457:17" pos:end="457:54">

                <expr_stmt pos:start="457:17" pos:end="457:54"><expr pos:start="457:17" pos:end="457:53"><name pos:start="457:17" pos:end="457:32"><name pos:start="457:17" pos:end="457:21">codec</name><operator pos:start="457:22" pos:end="457:23">-&gt;</operator><name pos:start="457:24" pos:end="457:32">time_base</name></name> <operator pos:start="457:34" pos:end="457:34">=</operator> <name pos:start="457:36" pos:end="457:53"><name pos:start="457:36" pos:end="457:38">ist</name><operator pos:start="457:39" pos:end="457:40">-&gt;</operator><name pos:start="457:41" pos:end="457:42">st</name><operator pos:start="457:43" pos:end="457:44">-&gt;</operator><name pos:start="457:45" pos:end="457:53">time_base</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <switch pos:start="459:13" pos:end="535:13">switch<condition pos:start="459:19" pos:end="459:37">(<expr pos:start="459:20" pos:end="459:36"><name pos:start="459:20" pos:end="459:36"><name pos:start="459:20" pos:end="459:24">codec</name><operator pos:start="459:25" pos:end="459:26">-&gt;</operator><name pos:start="459:27" pos:end="459:36">codec_type</name></name></expr>)</condition> <block pos:start="459:39" pos:end="535:13">{<block_content pos:start="461:13" pos:end="533:24">

            <case pos:start="461:13" pos:end="461:36">case <expr pos:start="461:18" pos:end="461:35"><name pos:start="461:18" pos:end="461:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <if_stmt pos:start="463:17" pos:end="469:17"><if pos:start="463:17" pos:end="469:17">if<condition pos:start="463:19" pos:end="463:39">(<expr pos:start="463:20" pos:end="463:38"><name pos:start="463:20" pos:end="463:31">audio_volume</name> <operator pos:start="463:33" pos:end="463:34">!=</operator> <literal type="number" pos:start="463:36" pos:end="463:38">256</literal></expr>)</condition> <block pos:start="463:41" pos:end="469:17">{<block_content pos:start="465:21" pos:end="467:35">

                    <expr_stmt pos:start="465:21" pos:end="465:104"><expr pos:start="465:21" pos:end="465:103"><call pos:start="465:21" pos:end="465:103"><name pos:start="465:21" pos:end="465:27">fprintf</name><argument_list pos:start="465:28" pos:end="465:103">(<argument pos:start="465:29" pos:end="465:34"><expr pos:start="465:29" pos:end="465:34"><name pos:start="465:29" pos:end="465:34">stderr</name></expr></argument>,<argument pos:start="465:36" pos:end="465:102"><expr pos:start="465:36" pos:end="465:102"><literal type="string" pos:start="465:36" pos:end="465:102">"-acodec copy and -vol are incompatible (frames are not decoded)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="467:21" pos:end="467:35"><expr pos:start="467:21" pos:end="467:34"><call pos:start="467:21" pos:end="467:34"><name pos:start="467:21" pos:end="467:31">ffmpeg_exit</name><argument_list pos:start="467:32" pos:end="467:34">(<argument pos:start="467:33" pos:end="467:33"><expr pos:start="467:33" pos:end="467:33"><literal type="number" pos:start="467:33" pos:end="467:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="471:17" pos:end="471:63"><expr pos:start="471:17" pos:end="471:62"><name pos:start="471:17" pos:end="471:37"><name pos:start="471:17" pos:end="471:21">codec</name><operator pos:start="471:22" pos:end="471:23">-&gt;</operator><name pos:start="471:24" pos:end="471:37">channel_layout</name></name> <operator pos:start="471:39" pos:end="471:39">=</operator> <name pos:start="471:41" pos:end="471:62"><name pos:start="471:41" pos:end="471:46">icodec</name><operator pos:start="471:47" pos:end="471:48">-&gt;</operator><name pos:start="471:49" pos:end="471:62">channel_layout</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="473:17" pos:end="473:57"><expr pos:start="473:17" pos:end="473:56"><name pos:start="473:17" pos:end="473:34"><name pos:start="473:17" pos:end="473:21">codec</name><operator pos:start="473:22" pos:end="473:23">-&gt;</operator><name pos:start="473:24" pos:end="473:34">sample_rate</name></name> <operator pos:start="473:36" pos:end="473:36">=</operator> <name pos:start="473:38" pos:end="473:56"><name pos:start="473:38" pos:end="473:43">icodec</name><operator pos:start="473:44" pos:end="473:45">-&gt;</operator><name pos:start="473:46" pos:end="473:56">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="475:17" pos:end="475:51"><expr pos:start="475:17" pos:end="475:50"><name pos:start="475:17" pos:end="475:31"><name pos:start="475:17" pos:end="475:21">codec</name><operator pos:start="475:22" pos:end="475:23">-&gt;</operator><name pos:start="475:24" pos:end="475:31">channels</name></name> <operator pos:start="475:33" pos:end="475:33">=</operator> <name pos:start="475:35" pos:end="475:50"><name pos:start="475:35" pos:end="475:40">icodec</name><operator pos:start="475:41" pos:end="475:42">-&gt;</operator><name pos:start="475:43" pos:end="475:50">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="477:17" pos:end="477:55"><expr pos:start="477:17" pos:end="477:54"><name pos:start="477:17" pos:end="477:33"><name pos:start="477:17" pos:end="477:21">codec</name><operator pos:start="477:22" pos:end="477:23">-&gt;</operator><name pos:start="477:24" pos:end="477:33">frame_size</name></name> <operator pos:start="477:35" pos:end="477:35">=</operator> <name pos:start="477:37" pos:end="477:54"><name pos:start="477:37" pos:end="477:42">icodec</name><operator pos:start="477:43" pos:end="477:44">-&gt;</operator><name pos:start="477:45" pos:end="477:54">frame_size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="479:17" pos:end="479:71"><expr pos:start="479:17" pos:end="479:70"><name pos:start="479:17" pos:end="479:41"><name pos:start="479:17" pos:end="479:21">codec</name><operator pos:start="479:22" pos:end="479:23">-&gt;</operator><name pos:start="479:24" pos:end="479:41">audio_service_type</name></name> <operator pos:start="479:43" pos:end="479:43">=</operator> <name pos:start="479:45" pos:end="479:70"><name pos:start="479:45" pos:end="479:50">icodec</name><operator pos:start="479:51" pos:end="479:52">-&gt;</operator><name pos:start="479:53" pos:end="479:70">audio_service_type</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="481:17" pos:end="481:56"><expr pos:start="481:17" pos:end="481:55"><name pos:start="481:17" pos:end="481:34"><name pos:start="481:17" pos:end="481:21">codec</name><operator pos:start="481:22" pos:end="481:23">-&gt;</operator><name pos:start="481:24" pos:end="481:34">block_align</name></name><operator pos:start="481:35" pos:end="481:35">=</operator> <name pos:start="481:37" pos:end="481:55"><name pos:start="481:37" pos:end="481:42">icodec</name><operator pos:start="481:43" pos:end="481:44">-&gt;</operator><name pos:start="481:45" pos:end="481:55">block_align</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="483:17" pos:end="485:42"><if pos:start="483:17" pos:end="485:42">if<condition pos:start="483:19" pos:end="483:78">(<expr pos:start="483:20" pos:end="483:77"><name pos:start="483:20" pos:end="483:37"><name pos:start="483:20" pos:end="483:24">codec</name><operator pos:start="483:25" pos:end="483:26">-&gt;</operator><name pos:start="483:27" pos:end="483:37">block_align</name></name> <operator pos:start="483:39" pos:end="483:40">==</operator> <literal type="number" pos:start="483:42" pos:end="483:42">1</literal> <operator pos:start="483:44" pos:end="483:45">&amp;&amp;</operator> <name pos:start="483:47" pos:end="483:61"><name pos:start="483:47" pos:end="483:51">codec</name><operator pos:start="483:52" pos:end="483:53">-&gt;</operator><name pos:start="483:54" pos:end="483:61">codec_id</name></name> <operator pos:start="483:63" pos:end="483:64">==</operator> <name pos:start="483:66" pos:end="483:77">CODEC_ID_MP3</name></expr>)</condition><block type="pseudo" pos:start="485:21" pos:end="485:42"><block_content pos:start="485:21" pos:end="485:42">

                    <expr_stmt pos:start="485:21" pos:end="485:42"><expr pos:start="485:21" pos:end="485:41"><name pos:start="485:21" pos:end="485:38"><name pos:start="485:21" pos:end="485:25">codec</name><operator pos:start="485:26" pos:end="485:27">-&gt;</operator><name pos:start="485:28" pos:end="485:38">block_align</name></name><operator pos:start="485:39" pos:end="485:39">=</operator> <literal type="number" pos:start="485:41" pos:end="485:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="487:17" pos:end="489:42"><if pos:start="487:17" pos:end="489:42">if<condition pos:start="487:19" pos:end="487:51">(<expr pos:start="487:20" pos:end="487:50"><name pos:start="487:20" pos:end="487:34"><name pos:start="487:20" pos:end="487:24">codec</name><operator pos:start="487:25" pos:end="487:26">-&gt;</operator><name pos:start="487:27" pos:end="487:34">codec_id</name></name> <operator pos:start="487:36" pos:end="487:37">==</operator> <name pos:start="487:39" pos:end="487:50">CODEC_ID_AC3</name></expr>)</condition><block type="pseudo" pos:start="489:21" pos:end="489:42"><block_content pos:start="489:21" pos:end="489:42">

                    <expr_stmt pos:start="489:21" pos:end="489:42"><expr pos:start="489:21" pos:end="489:41"><name pos:start="489:21" pos:end="489:38"><name pos:start="489:21" pos:end="489:25">codec</name><operator pos:start="489:26" pos:end="489:27">-&gt;</operator><name pos:start="489:28" pos:end="489:38">block_align</name></name><operator pos:start="489:39" pos:end="489:39">=</operator> <literal type="number" pos:start="489:41" pos:end="489:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="491:17" pos:end="491:22">break;</break>

            <case pos:start="493:13" pos:end="493:36">case <expr pos:start="493:18" pos:end="493:35"><name pos:start="493:18" pos:end="493:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <expr_stmt pos:start="495:17" pos:end="495:49"><expr pos:start="495:17" pos:end="495:48"><name pos:start="495:17" pos:end="495:30"><name pos:start="495:17" pos:end="495:21">codec</name><operator pos:start="495:22" pos:end="495:23">-&gt;</operator><name pos:start="495:24" pos:end="495:30">pix_fmt</name></name> <operator pos:start="495:32" pos:end="495:32">=</operator> <name pos:start="495:34" pos:end="495:48"><name pos:start="495:34" pos:end="495:39">icodec</name><operator pos:start="495:40" pos:end="495:41">-&gt;</operator><name pos:start="495:42" pos:end="495:48">pix_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="497:17" pos:end="497:45"><expr pos:start="497:17" pos:end="497:44"><name pos:start="497:17" pos:end="497:28"><name pos:start="497:17" pos:end="497:21">codec</name><operator pos:start="497:22" pos:end="497:23">-&gt;</operator><name pos:start="497:24" pos:end="497:28">width</name></name> <operator pos:start="497:30" pos:end="497:30">=</operator> <name pos:start="497:32" pos:end="497:44"><name pos:start="497:32" pos:end="497:37">icodec</name><operator pos:start="497:38" pos:end="497:39">-&gt;</operator><name pos:start="497:40" pos:end="497:44">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="499:17" pos:end="499:47"><expr pos:start="499:17" pos:end="499:46"><name pos:start="499:17" pos:end="499:29"><name pos:start="499:17" pos:end="499:21">codec</name><operator pos:start="499:22" pos:end="499:23">-&gt;</operator><name pos:start="499:24" pos:end="499:29">height</name></name> <operator pos:start="499:31" pos:end="499:31">=</operator> <name pos:start="499:33" pos:end="499:46"><name pos:start="499:33" pos:end="499:38">icodec</name><operator pos:start="499:39" pos:end="499:40">-&gt;</operator><name pos:start="499:41" pos:end="499:46">height</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="501:17" pos:end="501:59"><expr pos:start="501:17" pos:end="501:58"><name pos:start="501:17" pos:end="501:35"><name pos:start="501:17" pos:end="501:21">codec</name><operator pos:start="501:22" pos:end="501:23">-&gt;</operator><name pos:start="501:24" pos:end="501:35">has_b_frames</name></name> <operator pos:start="501:37" pos:end="501:37">=</operator> <name pos:start="501:39" pos:end="501:58"><name pos:start="501:39" pos:end="501:44">icodec</name><operator pos:start="501:45" pos:end="501:46">-&gt;</operator><name pos:start="501:47" pos:end="501:58">has_b_frames</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="503:17" pos:end="515:17"><if pos:start="503:17" pos:end="515:17">if <condition pos:start="503:20" pos:end="503:52">(<expr pos:start="503:21" pos:end="503:51"><operator pos:start="503:21" pos:end="503:21">!</operator><name pos:start="503:22" pos:end="503:51"><name pos:start="503:22" pos:end="503:26">codec</name><operator pos:start="503:27" pos:end="503:28">-&gt;</operator><name pos:start="503:29" pos:end="503:47">sample_aspect_ratio</name><operator pos:start="503:48" pos:end="503:48">.</operator><name pos:start="503:49" pos:end="503:51">num</name></name></expr>)</condition> <block pos:start="503:54" pos:end="515:17">{<block_content pos:start="505:21" pos:end="513:81">

                    <expr_stmt pos:start="505:21" pos:end="513:81"><expr pos:start="505:21" pos:end="513:80"><name pos:start="505:21" pos:end="505:46"><name pos:start="505:21" pos:end="505:25">codec</name><operator pos:start="505:26" pos:end="505:27">-&gt;</operator><name pos:start="505:28" pos:end="505:46">sample_aspect_ratio</name></name> <operator pos:start="505:48" pos:end="505:48">=</operator>

                    <name pos:start="507:21" pos:end="507:48"><name pos:start="507:21" pos:end="507:23">ost</name><operator pos:start="507:24" pos:end="507:25">-&gt;</operator><name pos:start="507:26" pos:end="507:27">st</name><operator pos:start="507:28" pos:end="507:29">-&gt;</operator><name pos:start="507:30" pos:end="507:48">sample_aspect_ratio</name></name> <operator pos:start="507:50" pos:end="507:50">=</operator>

                        <ternary pos:start="509:25" pos:end="513:80"><condition pos:start="509:25" pos:end="509:58"><expr pos:start="509:25" pos:end="509:56"><name pos:start="509:25" pos:end="509:56"><name pos:start="509:25" pos:end="509:27">ist</name><operator pos:start="509:28" pos:end="509:29">-&gt;</operator><name pos:start="509:30" pos:end="509:31">st</name><operator pos:start="509:32" pos:end="509:33">-&gt;</operator><name pos:start="509:34" pos:end="509:52">sample_aspect_ratio</name><operator pos:start="509:53" pos:end="509:53">.</operator><name pos:start="509:54" pos:end="509:56">num</name></name></expr> ?</condition><then pos:start="509:60" pos:end="509:87"> <expr pos:start="509:60" pos:end="509:87"><name pos:start="509:60" pos:end="509:87"><name pos:start="509:60" pos:end="509:62">ist</name><operator pos:start="509:63" pos:end="509:64">-&gt;</operator><name pos:start="509:65" pos:end="509:66">st</name><operator pos:start="509:67" pos:end="509:68">-&gt;</operator><name pos:start="509:69" pos:end="509:87">sample_aspect_ratio</name></name></expr> </then><else pos:start="509:89" pos:end="513:80">:

                        <expr pos:start="511:25" pos:end="513:80"><ternary pos:start="511:25" pos:end="513:80"><condition pos:start="511:25" pos:end="511:65"><expr pos:start="511:25" pos:end="511:63"><name pos:start="511:25" pos:end="511:63"><name pos:start="511:25" pos:end="511:27">ist</name><operator pos:start="511:28" pos:end="511:29">-&gt;</operator><name pos:start="511:30" pos:end="511:31">st</name><operator pos:start="511:32" pos:end="511:33">-&gt;</operator><name pos:start="511:34" pos:end="511:38">codec</name><operator pos:start="511:39" pos:end="511:40">-&gt;</operator><name pos:start="511:41" pos:end="511:59">sample_aspect_ratio</name><operator pos:start="511:60" pos:end="511:60">.</operator><name pos:start="511:61" pos:end="511:63">num</name></name></expr> ?</condition><then pos:start="513:25" pos:end="513:59">

                        <expr pos:start="513:25" pos:end="513:59"><name pos:start="513:25" pos:end="513:59"><name pos:start="513:25" pos:end="513:27">ist</name><operator pos:start="513:28" pos:end="513:29">-&gt;</operator><name pos:start="513:30" pos:end="513:31">st</name><operator pos:start="513:32" pos:end="513:33">-&gt;</operator><name pos:start="513:34" pos:end="513:38">codec</name><operator pos:start="513:39" pos:end="513:40">-&gt;</operator><name pos:start="513:41" pos:end="513:59">sample_aspect_ratio</name></name></expr> </then><else pos:start="513:61" pos:end="513:80">: <expr pos:start="513:63" pos:end="513:80"><operator pos:start="513:63" pos:end="513:63">(</operator><name pos:start="513:64" pos:end="513:73">AVRational</name><operator pos:start="513:74" pos:end="513:74">)</operator><block pos:start="513:75" pos:end="513:80">{<expr pos:start="513:76" pos:end="513:76"><literal type="number" pos:start="513:76" pos:end="513:76">0</literal></expr>, <expr pos:start="513:79" pos:end="513:79"><literal type="number" pos:start="513:79" pos:end="513:79">1</literal></expr>}</block></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="517:17" pos:end="517:22">break;</break>

            <case pos:start="519:13" pos:end="519:39">case <expr pos:start="519:18" pos:end="519:38"><name pos:start="519:18" pos:end="519:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="521:17" pos:end="521:45"><expr pos:start="521:17" pos:end="521:44"><name pos:start="521:17" pos:end="521:28"><name pos:start="521:17" pos:end="521:21">codec</name><operator pos:start="521:22" pos:end="521:23">-&gt;</operator><name pos:start="521:24" pos:end="521:28">width</name></name> <operator pos:start="521:30" pos:end="521:30">=</operator> <name pos:start="521:32" pos:end="521:44"><name pos:start="521:32" pos:end="521:37">icodec</name><operator pos:start="521:38" pos:end="521:39">-&gt;</operator><name pos:start="521:40" pos:end="521:44">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="523:17" pos:end="523:47"><expr pos:start="523:17" pos:end="523:46"><name pos:start="523:17" pos:end="523:29"><name pos:start="523:17" pos:end="523:21">codec</name><operator pos:start="523:22" pos:end="523:23">-&gt;</operator><name pos:start="523:24" pos:end="523:29">height</name></name> <operator pos:start="523:31" pos:end="523:31">=</operator> <name pos:start="523:33" pos:end="523:46"><name pos:start="523:33" pos:end="523:38">icodec</name><operator pos:start="523:39" pos:end="523:40">-&gt;</operator><name pos:start="523:41" pos:end="523:46">height</name></name></expr>;</expr_stmt>

                <break pos:start="525:17" pos:end="525:22">break;</break>

            <case pos:start="527:13" pos:end="527:35">case <expr pos:start="527:18" pos:end="527:34"><name pos:start="527:18" pos:end="527:34">AVMEDIA_TYPE_DATA</name></expr>:</case>

                <break pos:start="529:17" pos:end="529:22">break;</break>

            <default pos:start="531:13" pos:end="531:20">default:</default>

                <expr_stmt pos:start="533:17" pos:end="533:24"><expr pos:start="533:17" pos:end="533:23"><call pos:start="533:17" pos:end="533:23"><name pos:start="533:17" pos:end="533:21">abort</name><argument_list pos:start="533:22" pos:end="533:23">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="537:11" pos:end="761:9">else <block pos:start="537:16" pos:end="761:9">{<block_content pos:start="539:13" pos:end="759:13">

            <if_stmt pos:start="539:13" pos:end="541:74"><if pos:start="539:13" pos:end="541:74">if <condition pos:start="539:16" pos:end="539:26">(<expr pos:start="539:17" pos:end="539:25"><operator pos:start="539:17" pos:end="539:17">!</operator><name pos:start="539:18" pos:end="539:25"><name pos:start="539:18" pos:end="539:20">ost</name><operator pos:start="539:21" pos:end="539:22">-&gt;</operator><name pos:start="539:23" pos:end="539:25">enc</name></name></expr>)</condition><block type="pseudo" pos:start="541:17" pos:end="541:74"><block_content pos:start="541:17" pos:end="541:74">

                <expr_stmt pos:start="541:17" pos:end="541:74"><expr pos:start="541:17" pos:end="541:73"><name pos:start="541:17" pos:end="541:24"><name pos:start="541:17" pos:end="541:19">ost</name><operator pos:start="541:20" pos:end="541:21">-&gt;</operator><name pos:start="541:22" pos:end="541:24">enc</name></name> <operator pos:start="541:26" pos:end="541:26">=</operator> <call pos:start="541:28" pos:end="541:73"><name pos:start="541:28" pos:end="541:47">avcodec_find_encoder</name><argument_list pos:start="541:48" pos:end="541:73">(<argument pos:start="541:49" pos:end="541:72"><expr pos:start="541:49" pos:end="541:72"><name pos:start="541:49" pos:end="541:72"><name pos:start="541:49" pos:end="541:51">ost</name><operator pos:start="541:52" pos:end="541:53">-&gt;</operator><name pos:start="541:54" pos:end="541:55">st</name><operator pos:start="541:56" pos:end="541:57">-&gt;</operator><name pos:start="541:58" pos:end="541:62">codec</name><operator pos:start="541:63" pos:end="541:64">-&gt;</operator><name pos:start="541:65" pos:end="541:72">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <switch pos:start="543:13" pos:end="707:13">switch<condition pos:start="543:19" pos:end="543:37">(<expr pos:start="543:20" pos:end="543:36"><name pos:start="543:20" pos:end="543:36"><name pos:start="543:20" pos:end="543:24">codec</name><operator pos:start="543:25" pos:end="543:26">-&gt;</operator><name pos:start="543:27" pos:end="543:36">codec_type</name></name></expr>)</condition> <block pos:start="543:39" pos:end="707:13">{<block_content pos:start="545:13" pos:end="705:22">

            <case pos:start="545:13" pos:end="545:36">case <expr pos:start="545:18" pos:end="545:35"><name pos:start="545:18" pos:end="545:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <expr_stmt pos:start="547:17" pos:end="547:47"><expr pos:start="547:17" pos:end="547:46"><name pos:start="547:17" pos:end="547:25"><name pos:start="547:17" pos:end="547:19">ost</name><operator pos:start="547:20" pos:end="547:21">-&gt;</operator><name pos:start="547:22" pos:end="547:25">fifo</name></name><operator pos:start="547:26" pos:end="547:26">=</operator> <call pos:start="547:28" pos:end="547:46"><name pos:start="547:28" pos:end="547:40">av_fifo_alloc</name><argument_list pos:start="547:41" pos:end="547:46">(<argument pos:start="547:42" pos:end="547:45"><expr pos:start="547:42" pos:end="547:45"><literal type="number" pos:start="547:42" pos:end="547:45">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="549:17" pos:end="551:30"><if pos:start="549:17" pos:end="551:30">if<condition pos:start="549:19" pos:end="549:30">(<expr pos:start="549:20" pos:end="549:29"><operator pos:start="549:20" pos:end="549:20">!</operator><name pos:start="549:21" pos:end="549:29"><name pos:start="549:21" pos:end="549:23">ost</name><operator pos:start="549:24" pos:end="549:25">-&gt;</operator><name pos:start="549:26" pos:end="549:29">fifo</name></name></expr>)</condition><block type="pseudo" pos:start="551:21" pos:end="551:30"><block_content pos:start="551:21" pos:end="551:30">

                    <goto pos:start="551:21" pos:end="551:30">goto <name pos:start="551:26" pos:end="551:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="553:17" pos:end="553:91"><expr pos:start="553:17" pos:end="553:90"><name pos:start="553:17" pos:end="553:34"><name pos:start="553:17" pos:end="553:19">ost</name><operator pos:start="553:20" pos:end="553:21">-&gt;</operator><name pos:start="553:22" pos:end="553:34">reformat_pair</name></name> <operator pos:start="553:36" pos:end="553:36">=</operator> <call pos:start="553:38" pos:end="553:90"><name pos:start="553:38" pos:end="553:51">MAKE_SFMT_PAIR</name><argument_list pos:start="553:52" pos:end="553:90">(<argument pos:start="553:53" pos:end="553:70"><expr pos:start="553:53" pos:end="553:70"><name pos:start="553:53" pos:end="553:70">AV_SAMPLE_FMT_NONE</name></expr></argument>,<argument pos:start="553:72" pos:end="553:89"><expr pos:start="553:72" pos:end="553:89"><name pos:start="553:72" pos:end="553:89">AV_SAMPLE_FMT_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="555:17" pos:end="563:17"><if pos:start="555:17" pos:end="563:17">if <condition pos:start="555:20" pos:end="555:40">(<expr pos:start="555:21" pos:end="555:39"><operator pos:start="555:21" pos:end="555:21">!</operator><name pos:start="555:22" pos:end="555:39"><name pos:start="555:22" pos:end="555:26">codec</name><operator pos:start="555:27" pos:end="555:28">-&gt;</operator><name pos:start="555:29" pos:end="555:39">sample_rate</name></name></expr>)</condition> <block pos:start="555:42" pos:end="563:17">{<block_content pos:start="557:21" pos:end="561:62">

                    <expr_stmt pos:start="557:21" pos:end="557:61"><expr pos:start="557:21" pos:end="557:60"><name pos:start="557:21" pos:end="557:38"><name pos:start="557:21" pos:end="557:25">codec</name><operator pos:start="557:26" pos:end="557:27">-&gt;</operator><name pos:start="557:28" pos:end="557:38">sample_rate</name></name> <operator pos:start="557:40" pos:end="557:40">=</operator> <name pos:start="557:42" pos:end="557:60"><name pos:start="557:42" pos:end="557:47">icodec</name><operator pos:start="557:48" pos:end="557:49">-&gt;</operator><name pos:start="557:50" pos:end="557:60">sample_rate</name></name></expr>;</expr_stmt>

                    <if_stmt pos:start="559:21" pos:end="561:62"><if pos:start="559:21" pos:end="561:62">if <condition pos:start="559:24" pos:end="559:39">(<expr pos:start="559:25" pos:end="559:38"><name pos:start="559:25" pos:end="559:38"><name pos:start="559:25" pos:end="559:30">icodec</name><operator pos:start="559:31" pos:end="559:32">-&gt;</operator><name pos:start="559:33" pos:end="559:38">lowres</name></name></expr>)</condition><block type="pseudo" pos:start="561:25" pos:end="561:62"><block_content pos:start="561:25" pos:end="561:62">

                        <expr_stmt pos:start="561:25" pos:end="561:62"><expr pos:start="561:25" pos:end="561:61"><name pos:start="561:25" pos:end="561:42"><name pos:start="561:25" pos:end="561:29">codec</name><operator pos:start="561:30" pos:end="561:31">-&gt;</operator><name pos:start="561:32" pos:end="561:42">sample_rate</name></name> <operator pos:start="561:44" pos:end="561:46">&gt;&gt;=</operator> <name pos:start="561:48" pos:end="561:61"><name pos:start="561:48" pos:end="561:53">icodec</name><operator pos:start="561:54" pos:end="561:55">-&gt;</operator><name pos:start="561:56" pos:end="561:61">lowres</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="565:17" pos:end="565:54"><expr pos:start="565:17" pos:end="565:53"><call pos:start="565:17" pos:end="565:53"><name pos:start="565:17" pos:end="565:34">choose_sample_rate</name><argument_list pos:start="565:35" pos:end="565:53">(<argument pos:start="565:36" pos:end="565:42"><expr pos:start="565:36" pos:end="565:42"><name pos:start="565:36" pos:end="565:42"><name pos:start="565:36" pos:end="565:38">ost</name><operator pos:start="565:39" pos:end="565:40">-&gt;</operator><name pos:start="565:41" pos:end="565:42">st</name></name></expr></argument>, <argument pos:start="565:45" pos:end="565:52"><expr pos:start="565:45" pos:end="565:52"><name pos:start="565:45" pos:end="565:52"><name pos:start="565:45" pos:end="565:47">ost</name><operator pos:start="565:48" pos:end="565:49">-&gt;</operator><name pos:start="565:50" pos:end="565:52">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="567:17" pos:end="567:71"><expr pos:start="567:17" pos:end="567:70"><name pos:start="567:17" pos:end="567:32"><name pos:start="567:17" pos:end="567:21">codec</name><operator pos:start="567:22" pos:end="567:23">-&gt;</operator><name pos:start="567:24" pos:end="567:32">time_base</name></name> <operator pos:start="567:34" pos:end="567:34">=</operator> <operator pos:start="567:36" pos:end="567:36">(</operator><name pos:start="567:37" pos:end="567:46">AVRational</name><operator pos:start="567:47" pos:end="567:47">)</operator><block pos:start="567:48" pos:end="567:70">{<expr pos:start="567:49" pos:end="567:49"><literal type="number" pos:start="567:49" pos:end="567:49">1</literal></expr>, <expr pos:start="567:52" pos:end="567:69"><name pos:start="567:52" pos:end="567:69"><name pos:start="567:52" pos:end="567:56">codec</name><operator pos:start="567:57" pos:end="567:58">-&gt;</operator><name pos:start="567:59" pos:end="567:69">sample_rate</name></name></expr>}</block></expr>;</expr_stmt>

                <if_stmt pos:start="569:17" pos:end="571:59"><if pos:start="569:17" pos:end="571:59">if <condition pos:start="569:20" pos:end="569:60">(<expr pos:start="569:21" pos:end="569:59"><name pos:start="569:21" pos:end="569:37"><name pos:start="569:21" pos:end="569:25">codec</name><operator pos:start="569:26" pos:end="569:27">-&gt;</operator><name pos:start="569:28" pos:end="569:37">sample_fmt</name></name> <operator pos:start="569:39" pos:end="569:40">==</operator> <name pos:start="569:42" pos:end="569:59">AV_SAMPLE_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="571:21" pos:end="571:59"><block_content pos:start="571:21" pos:end="571:59">

                    <expr_stmt pos:start="571:21" pos:end="571:59"><expr pos:start="571:21" pos:end="571:58"><name pos:start="571:21" pos:end="571:37"><name pos:start="571:21" pos:end="571:25">codec</name><operator pos:start="571:26" pos:end="571:27">-&gt;</operator><name pos:start="571:28" pos:end="571:37">sample_fmt</name></name> <operator pos:start="571:39" pos:end="571:39">=</operator> <name pos:start="571:41" pos:end="571:58"><name pos:start="571:41" pos:end="571:46">icodec</name><operator pos:start="571:47" pos:end="571:48">-&gt;</operator><name pos:start="571:49" pos:end="571:58">sample_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="573:17" pos:end="573:53"><expr pos:start="573:17" pos:end="573:52"><call pos:start="573:17" pos:end="573:52"><name pos:start="573:17" pos:end="573:33">choose_sample_fmt</name><argument_list pos:start="573:34" pos:end="573:52">(<argument pos:start="573:35" pos:end="573:41"><expr pos:start="573:35" pos:end="573:41"><name pos:start="573:35" pos:end="573:41"><name pos:start="573:35" pos:end="573:37">ost</name><operator pos:start="573:38" pos:end="573:39">-&gt;</operator><name pos:start="573:40" pos:end="573:41">st</name></name></expr></argument>, <argument pos:start="573:44" pos:end="573:51"><expr pos:start="573:44" pos:end="573:51"><name pos:start="573:44" pos:end="573:51"><name pos:start="573:44" pos:end="573:46">ost</name><operator pos:start="573:47" pos:end="573:48">-&gt;</operator><name pos:start="573:49" pos:end="573:51">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="575:17" pos:end="581:17"><if pos:start="575:17" pos:end="581:17">if <condition pos:start="575:20" pos:end="575:37">(<expr pos:start="575:21" pos:end="575:36"><operator pos:start="575:21" pos:end="575:21">!</operator><name pos:start="575:22" pos:end="575:36"><name pos:start="575:22" pos:end="575:26">codec</name><operator pos:start="575:27" pos:end="575:28">-&gt;</operator><name pos:start="575:29" pos:end="575:36">channels</name></name></expr>)</condition> <block pos:start="575:39" pos:end="581:17">{<block_content pos:start="577:21" pos:end="579:67">

                    <expr_stmt pos:start="577:21" pos:end="577:55"><expr pos:start="577:21" pos:end="577:54"><name pos:start="577:21" pos:end="577:35"><name pos:start="577:21" pos:end="577:25">codec</name><operator pos:start="577:26" pos:end="577:27">-&gt;</operator><name pos:start="577:28" pos:end="577:35">channels</name></name> <operator pos:start="577:37" pos:end="577:37">=</operator> <name pos:start="577:39" pos:end="577:54"><name pos:start="577:39" pos:end="577:44">icodec</name><operator pos:start="577:45" pos:end="577:46">-&gt;</operator><name pos:start="577:47" pos:end="577:54">channels</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="579:21" pos:end="579:67"><expr pos:start="579:21" pos:end="579:66"><name pos:start="579:21" pos:end="579:41"><name pos:start="579:21" pos:end="579:25">codec</name><operator pos:start="579:26" pos:end="579:27">-&gt;</operator><name pos:start="579:28" pos:end="579:41">channel_layout</name></name> <operator pos:start="579:43" pos:end="579:43">=</operator> <name pos:start="579:45" pos:end="579:66"><name pos:start="579:45" pos:end="579:50">icodec</name><operator pos:start="579:51" pos:end="579:52">-&gt;</operator><name pos:start="579:53" pos:end="579:66">channel_layout</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="583:17" pos:end="585:46"><if pos:start="583:17" pos:end="585:46">if <condition pos:start="583:20" pos:end="583:96">(<expr pos:start="583:21" pos:end="583:95"><call pos:start="583:21" pos:end="583:76"><name pos:start="583:21" pos:end="583:53">av_get_channel_layout_nb_channels</name><argument_list pos:start="583:54" pos:end="583:76">(<argument pos:start="583:55" pos:end="583:75"><expr pos:start="583:55" pos:end="583:75"><name pos:start="583:55" pos:end="583:75"><name pos:start="583:55" pos:end="583:59">codec</name><operator pos:start="583:60" pos:end="583:61">-&gt;</operator><name pos:start="583:62" pos:end="583:75">channel_layout</name></name></expr></argument>)</argument_list></call> <operator pos:start="583:78" pos:end="583:79">!=</operator> <name pos:start="583:81" pos:end="583:95"><name pos:start="583:81" pos:end="583:85">codec</name><operator pos:start="583:86" pos:end="583:87">-&gt;</operator><name pos:start="583:88" pos:end="583:95">channels</name></name></expr>)</condition><block type="pseudo" pos:start="585:21" pos:end="585:46"><block_content pos:start="585:21" pos:end="585:46">

                    <expr_stmt pos:start="585:21" pos:end="585:46"><expr pos:start="585:21" pos:end="585:45"><name pos:start="585:21" pos:end="585:41"><name pos:start="585:21" pos:end="585:25">codec</name><operator pos:start="585:26" pos:end="585:27">-&gt;</operator><name pos:start="585:28" pos:end="585:41">channel_layout</name></name> <operator pos:start="585:43" pos:end="585:43">=</operator> <literal type="number" pos:start="585:45" pos:end="585:45">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="587:17" pos:end="587:105"><expr pos:start="587:17" pos:end="587:104"><name pos:start="587:17" pos:end="587:35"><name pos:start="587:17" pos:end="587:19">ost</name><operator pos:start="587:20" pos:end="587:21">-&gt;</operator><name pos:start="587:22" pos:end="587:35">audio_resample</name></name> <operator pos:start="587:37" pos:end="587:37">=</operator> <name pos:start="587:39" pos:end="587:56"><name pos:start="587:39" pos:end="587:43">codec</name><operator pos:start="587:44" pos:end="587:45">-&gt;</operator><name pos:start="587:46" pos:end="587:56">sample_rate</name></name> <operator pos:start="587:58" pos:end="587:59">!=</operator> <name pos:start="587:61" pos:end="587:79"><name pos:start="587:61" pos:end="587:66">icodec</name><operator pos:start="587:67" pos:end="587:68">-&gt;</operator><name pos:start="587:69" pos:end="587:79">sample_rate</name></name> <operator pos:start="587:81" pos:end="587:82">||</operator> <name pos:start="587:84" pos:end="587:100">audio_sync_method</name> <operator pos:start="587:102" pos:end="587:102">&gt;</operator> <literal type="number" pos:start="587:104" pos:end="587:104">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="589:17" pos:end="589:59"><expr pos:start="589:17" pos:end="589:58"><name pos:start="589:17" pos:end="589:40"><name pos:start="589:17" pos:end="589:22">icodec</name><operator pos:start="589:23" pos:end="589:24">-&gt;</operator><name pos:start="589:25" pos:end="589:40">request_channels</name></name> <operator pos:start="589:42" pos:end="589:42">=</operator> <name pos:start="589:44" pos:end="589:58"><name pos:start="589:44" pos:end="589:48">codec</name><operator pos:start="589:49" pos:end="589:50">-&gt;</operator><name pos:start="589:51" pos:end="589:58">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="591:17" pos:end="591:41"><expr pos:start="591:17" pos:end="591:40"><name pos:start="591:17" pos:end="591:36"><name pos:start="591:17" pos:end="591:19">ist</name><operator pos:start="591:20" pos:end="591:21">-&gt;</operator><name pos:start="591:22" pos:end="591:36">decoding_needed</name></name> <operator pos:start="591:38" pos:end="591:38">=</operator> <literal type="number" pos:start="591:40" pos:end="591:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="593:17" pos:end="593:41"><expr pos:start="593:17" pos:end="593:40"><name pos:start="593:17" pos:end="593:36"><name pos:start="593:17" pos:end="593:19">ost</name><operator pos:start="593:20" pos:end="593:21">-&gt;</operator><name pos:start="593:22" pos:end="593:36">encoding_needed</name></name> <operator pos:start="593:38" pos:end="593:38">=</operator> <literal type="number" pos:start="593:40" pos:end="593:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="595:17" pos:end="595:63"><expr pos:start="595:17" pos:end="595:62"><name pos:start="595:17" pos:end="595:40"><name pos:start="595:17" pos:end="595:19">ost</name><operator pos:start="595:20" pos:end="595:21">-&gt;</operator><name pos:start="595:22" pos:end="595:40">resample_sample_fmt</name></name>  <operator pos:start="595:43" pos:end="595:43">=</operator> <name pos:start="595:45" pos:end="595:62"><name pos:start="595:45" pos:end="595:50">icodec</name><operator pos:start="595:51" pos:end="595:52">-&gt;</operator><name pos:start="595:53" pos:end="595:62">sample_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="597:17" pos:end="597:64"><expr pos:start="597:17" pos:end="597:63"><name pos:start="597:17" pos:end="597:41"><name pos:start="597:17" pos:end="597:19">ost</name><operator pos:start="597:20" pos:end="597:21">-&gt;</operator><name pos:start="597:22" pos:end="597:41">resample_sample_rate</name></name> <operator pos:start="597:43" pos:end="597:43">=</operator> <name pos:start="597:45" pos:end="597:63"><name pos:start="597:45" pos:end="597:50">icodec</name><operator pos:start="597:51" pos:end="597:52">-&gt;</operator><name pos:start="597:53" pos:end="597:63">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="599:17" pos:end="599:61"><expr pos:start="599:17" pos:end="599:60"><name pos:start="599:17" pos:end="599:38"><name pos:start="599:17" pos:end="599:19">ost</name><operator pos:start="599:20" pos:end="599:21">-&gt;</operator><name pos:start="599:22" pos:end="599:38">resample_channels</name></name>    <operator pos:start="599:43" pos:end="599:43">=</operator> <name pos:start="599:45" pos:end="599:60"><name pos:start="599:45" pos:end="599:50">icodec</name><operator pos:start="599:51" pos:end="599:52">-&gt;</operator><name pos:start="599:53" pos:end="599:60">channels</name></name></expr>;</expr_stmt>

                <break pos:start="601:17" pos:end="601:22">break;</break>

            <case pos:start="603:13" pos:end="603:36">case <expr pos:start="603:18" pos:end="603:35"><name pos:start="603:18" pos:end="603:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <if_stmt pos:start="605:17" pos:end="607:53"><if pos:start="605:17" pos:end="607:53">if <condition pos:start="605:20" pos:end="605:51">(<expr pos:start="605:21" pos:end="605:50"><name pos:start="605:21" pos:end="605:34"><name pos:start="605:21" pos:end="605:25">codec</name><operator pos:start="605:26" pos:end="605:27">-&gt;</operator><name pos:start="605:28" pos:end="605:34">pix_fmt</name></name> <operator pos:start="605:36" pos:end="605:37">==</operator> <name pos:start="605:39" pos:end="605:50">PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="607:21" pos:end="607:53"><block_content pos:start="607:21" pos:end="607:53">

                    <expr_stmt pos:start="607:21" pos:end="607:53"><expr pos:start="607:21" pos:end="607:52"><name pos:start="607:21" pos:end="607:34"><name pos:start="607:21" pos:end="607:25">codec</name><operator pos:start="607:26" pos:end="607:27">-&gt;</operator><name pos:start="607:28" pos:end="607:34">pix_fmt</name></name> <operator pos:start="607:36" pos:end="607:36">=</operator> <name pos:start="607:38" pos:end="607:52"><name pos:start="607:38" pos:end="607:43">icodec</name><operator pos:start="607:44" pos:end="607:45">-&gt;</operator><name pos:start="607:46" pos:end="607:52">pix_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="609:17" pos:end="609:52"><expr pos:start="609:17" pos:end="609:51"><call pos:start="609:17" pos:end="609:51"><name pos:start="609:17" pos:end="609:32">choose_pixel_fmt</name><argument_list pos:start="609:33" pos:end="609:51">(<argument pos:start="609:34" pos:end="609:40"><expr pos:start="609:34" pos:end="609:40"><name pos:start="609:34" pos:end="609:40"><name pos:start="609:34" pos:end="609:36">ost</name><operator pos:start="609:37" pos:end="609:38">-&gt;</operator><name pos:start="609:39" pos:end="609:40">st</name></name></expr></argument>, <argument pos:start="609:43" pos:end="609:50"><expr pos:start="609:43" pos:end="609:50"><name pos:start="609:43" pos:end="609:50"><name pos:start="609:43" pos:end="609:45">ost</name><operator pos:start="609:46" pos:end="609:47">-&gt;</operator><name pos:start="609:48" pos:end="609:50">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="613:17" pos:end="619:17"><if pos:start="613:17" pos:end="619:17">if <condition pos:start="613:20" pos:end="613:60">(<expr pos:start="613:21" pos:end="613:59"><name pos:start="613:21" pos:end="613:43"><name pos:start="613:21" pos:end="613:23">ost</name><operator pos:start="613:24" pos:end="613:25">-&gt;</operator><name pos:start="613:26" pos:end="613:27">st</name><operator pos:start="613:28" pos:end="613:29">-&gt;</operator><name pos:start="613:30" pos:end="613:34">codec</name><operator pos:start="613:35" pos:end="613:36">-&gt;</operator><name pos:start="613:37" pos:end="613:43">pix_fmt</name></name> <operator pos:start="613:45" pos:end="613:46">==</operator> <name pos:start="613:48" pos:end="613:59">PIX_FMT_NONE</name></expr>)</condition> <block pos:start="613:62" pos:end="619:17">{<block_content pos:start="615:21" pos:end="617:35">

                    <expr_stmt pos:start="615:21" pos:end="615:97"><expr pos:start="615:21" pos:end="615:96"><call pos:start="615:21" pos:end="615:96"><name pos:start="615:21" pos:end="615:27">fprintf</name><argument_list pos:start="615:28" pos:end="615:96">(<argument pos:start="615:29" pos:end="615:34"><expr pos:start="615:29" pos:end="615:34"><name pos:start="615:29" pos:end="615:34">stderr</name></expr></argument>, <argument pos:start="615:37" pos:end="615:95"><expr pos:start="615:37" pos:end="615:95"><literal type="string" pos:start="615:37" pos:end="615:95">"Video pixel format is unknown, stream cannot be encoded\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="617:21" pos:end="617:35"><expr pos:start="617:21" pos:end="617:34"><call pos:start="617:21" pos:end="617:34"><name pos:start="617:21" pos:end="617:31">ffmpeg_exit</name><argument_list pos:start="617:32" pos:end="617:34">(<argument pos:start="617:33" pos:end="617:33"><expr pos:start="617:33" pos:end="617:33"><literal type="number" pos:start="617:33" pos:end="617:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="621:17" pos:end="625:72"><expr pos:start="621:17" pos:end="625:71"><name pos:start="621:17" pos:end="621:35"><name pos:start="621:17" pos:end="621:19">ost</name><operator pos:start="621:20" pos:end="621:21">-&gt;</operator><name pos:start="621:22" pos:end="621:35">video_resample</name></name> <operator pos:start="621:37" pos:end="621:37">=</operator> <name pos:start="621:39" pos:end="621:50"><name pos:start="621:39" pos:end="621:43">codec</name><operator pos:start="621:44" pos:end="621:45">-&gt;</operator><name pos:start="621:46" pos:end="621:50">width</name></name>   <operator pos:start="621:54" pos:end="621:55">!=</operator> <name pos:start="621:57" pos:end="621:69"><name pos:start="621:57" pos:end="621:62">icodec</name><operator pos:start="621:63" pos:end="621:64">-&gt;</operator><name pos:start="621:65" pos:end="621:69">width</name></name>  <operator pos:start="621:72" pos:end="621:73">||</operator>

                                      <name pos:start="623:39" pos:end="623:51"><name pos:start="623:39" pos:end="623:43">codec</name><operator pos:start="623:44" pos:end="623:45">-&gt;</operator><name pos:start="623:46" pos:end="623:51">height</name></name>  <operator pos:start="623:54" pos:end="623:55">!=</operator> <name pos:start="623:57" pos:end="623:70"><name pos:start="623:57" pos:end="623:62">icodec</name><operator pos:start="623:63" pos:end="623:64">-&gt;</operator><name pos:start="623:65" pos:end="623:70">height</name></name> <operator pos:start="623:72" pos:end="623:73">||</operator>

                                      <name pos:start="625:39" pos:end="625:52"><name pos:start="625:39" pos:end="625:43">codec</name><operator pos:start="625:44" pos:end="625:45">-&gt;</operator><name pos:start="625:46" pos:end="625:52">pix_fmt</name></name> <operator pos:start="625:54" pos:end="625:55">!=</operator> <name pos:start="625:57" pos:end="625:71"><name pos:start="625:57" pos:end="625:62">icodec</name><operator pos:start="625:63" pos:end="625:64">-&gt;</operator><name pos:start="625:65" pos:end="625:71">pix_fmt</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="627:17" pos:end="631:17"><if pos:start="627:17" pos:end="631:17">if <condition pos:start="627:20" pos:end="627:40">(<expr pos:start="627:21" pos:end="627:39"><name pos:start="627:21" pos:end="627:39"><name pos:start="627:21" pos:end="627:23">ost</name><operator pos:start="627:24" pos:end="627:25">-&gt;</operator><name pos:start="627:26" pos:end="627:39">video_resample</name></name></expr>)</condition> <block pos:start="627:42" pos:end="631:17">{<block_content pos:start="629:21" pos:end="629:74">

                    <expr_stmt pos:start="629:21" pos:end="629:74"><expr pos:start="629:21" pos:end="629:73"><name pos:start="629:21" pos:end="629:46"><name pos:start="629:21" pos:end="629:25">codec</name><operator pos:start="629:26" pos:end="629:27">-&gt;</operator><name pos:start="629:28" pos:end="629:46">bits_per_raw_sample</name></name><operator pos:start="629:47" pos:end="629:47">=</operator> <name pos:start="629:49" pos:end="629:73">frame_bits_per_raw_sample</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="633:17" pos:end="639:17"><if pos:start="633:17" pos:end="639:17">if <condition pos:start="633:20" pos:end="633:52">(<expr pos:start="633:21" pos:end="633:51"><operator pos:start="633:21" pos:end="633:21">!</operator><name pos:start="633:22" pos:end="633:33"><name pos:start="633:22" pos:end="633:26">codec</name><operator pos:start="633:27" pos:end="633:28">-&gt;</operator><name pos:start="633:29" pos:end="633:33">width</name></name> <operator pos:start="633:35" pos:end="633:36">||</operator> <operator pos:start="633:38" pos:end="633:38">!</operator><name pos:start="633:39" pos:end="633:51"><name pos:start="633:39" pos:end="633:43">codec</name><operator pos:start="633:44" pos:end="633:45">-&gt;</operator><name pos:start="633:46" pos:end="633:51">height</name></name></expr>)</condition> <block pos:start="633:54" pos:end="639:17">{<block_content pos:start="635:21" pos:end="637:51">

                    <expr_stmt pos:start="635:21" pos:end="635:50"><expr pos:start="635:21" pos:end="635:49"><name pos:start="635:21" pos:end="635:32"><name pos:start="635:21" pos:end="635:25">codec</name><operator pos:start="635:26" pos:end="635:27">-&gt;</operator><name pos:start="635:28" pos:end="635:32">width</name></name>  <operator pos:start="635:35" pos:end="635:35">=</operator> <name pos:start="635:37" pos:end="635:49"><name pos:start="635:37" pos:end="635:42">icodec</name><operator pos:start="635:43" pos:end="635:44">-&gt;</operator><name pos:start="635:45" pos:end="635:49">width</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="637:21" pos:end="637:51"><expr pos:start="637:21" pos:end="637:50"><name pos:start="637:21" pos:end="637:33"><name pos:start="637:21" pos:end="637:25">codec</name><operator pos:start="637:26" pos:end="637:27">-&gt;</operator><name pos:start="637:28" pos:end="637:33">height</name></name> <operator pos:start="637:35" pos:end="637:35">=</operator> <name pos:start="637:37" pos:end="637:50"><name pos:start="637:37" pos:end="637:42">icodec</name><operator pos:start="637:43" pos:end="637:44">-&gt;</operator><name pos:start="637:45" pos:end="637:50">height</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="641:17" pos:end="641:54"><expr pos:start="641:17" pos:end="641:53"><name pos:start="641:17" pos:end="641:36"><name pos:start="641:17" pos:end="641:19">ost</name><operator pos:start="641:20" pos:end="641:21">-&gt;</operator><name pos:start="641:22" pos:end="641:36">resample_height</name></name> <operator pos:start="641:38" pos:end="641:38">=</operator> <name pos:start="641:40" pos:end="641:53"><name pos:start="641:40" pos:end="641:45">icodec</name><operator pos:start="641:46" pos:end="641:47">-&gt;</operator><name pos:start="641:48" pos:end="641:53">height</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="643:17" pos:end="643:53"><expr pos:start="643:17" pos:end="643:52"><name pos:start="643:17" pos:end="643:35"><name pos:start="643:17" pos:end="643:19">ost</name><operator pos:start="643:20" pos:end="643:21">-&gt;</operator><name pos:start="643:22" pos:end="643:35">resample_width</name></name>  <operator pos:start="643:38" pos:end="643:38">=</operator> <name pos:start="643:40" pos:end="643:52"><name pos:start="643:40" pos:end="643:45">icodec</name><operator pos:start="643:46" pos:end="643:47">-&gt;</operator><name pos:start="643:48" pos:end="643:52">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="645:17" pos:end="645:55"><expr pos:start="645:17" pos:end="645:54"><name pos:start="645:17" pos:end="645:37"><name pos:start="645:17" pos:end="645:19">ost</name><operator pos:start="645:20" pos:end="645:21">-&gt;</operator><name pos:start="645:22" pos:end="645:37">resample_pix_fmt</name></name><operator pos:start="645:38" pos:end="645:38">=</operator> <name pos:start="645:40" pos:end="645:54"><name pos:start="645:40" pos:end="645:45">icodec</name><operator pos:start="645:46" pos:end="645:47">-&gt;</operator><name pos:start="645:48" pos:end="645:54">pix_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="647:17" pos:end="647:41"><expr pos:start="647:17" pos:end="647:40"><name pos:start="647:17" pos:end="647:36"><name pos:start="647:17" pos:end="647:19">ost</name><operator pos:start="647:20" pos:end="647:21">-&gt;</operator><name pos:start="647:22" pos:end="647:36">encoding_needed</name></name> <operator pos:start="647:38" pos:end="647:38">=</operator> <literal type="number" pos:start="647:40" pos:end="647:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="649:17" pos:end="649:41"><expr pos:start="649:17" pos:end="649:40"><name pos:start="649:17" pos:end="649:36"><name pos:start="649:17" pos:end="649:19">ist</name><operator pos:start="649:20" pos:end="649:21">-&gt;</operator><name pos:start="649:22" pos:end="649:36">decoding_needed</name></name> <operator pos:start="649:38" pos:end="649:38">=</operator> <literal type="number" pos:start="649:40" pos:end="649:40">1</literal></expr>;</expr_stmt>



                <if_stmt pos:start="653:17" pos:end="655:109"><if pos:start="653:17" pos:end="655:109">if <condition pos:start="653:20" pos:end="653:41">(<expr pos:start="653:21" pos:end="653:40"><operator pos:start="653:21" pos:end="653:21">!</operator><name pos:start="653:22" pos:end="653:40"><name pos:start="653:22" pos:end="653:24">ost</name><operator pos:start="653:25" pos:end="653:26">-&gt;</operator><name pos:start="653:27" pos:end="653:36">frame_rate</name><operator pos:start="653:37" pos:end="653:37">.</operator><name pos:start="653:38" pos:end="653:40">num</name></name></expr>)</condition><block type="pseudo" pos:start="655:21" pos:end="655:109"><block_content pos:start="655:21" pos:end="655:109">

                    <expr_stmt pos:start="655:21" pos:end="655:109"><expr pos:start="655:21" pos:end="655:108"><name pos:start="655:21" pos:end="655:35"><name pos:start="655:21" pos:end="655:23">ost</name><operator pos:start="655:24" pos:end="655:25">-&gt;</operator><name pos:start="655:26" pos:end="655:35">frame_rate</name></name> <operator pos:start="655:37" pos:end="655:37">=</operator> <ternary pos:start="655:39" pos:end="655:108"><condition pos:start="655:39" pos:end="655:65"><expr pos:start="655:39" pos:end="655:63"><name pos:start="655:39" pos:end="655:63"><name pos:start="655:39" pos:end="655:41">ist</name><operator pos:start="655:42" pos:end="655:43">-&gt;</operator><name pos:start="655:44" pos:end="655:45">st</name><operator pos:start="655:46" pos:end="655:47">-&gt;</operator><name pos:start="655:48" pos:end="655:59">r_frame_rate</name><operator pos:start="655:60" pos:end="655:60">.</operator><name pos:start="655:61" pos:end="655:63">num</name></name></expr> ?</condition><then pos:start="655:67" pos:end="655:87"> <expr pos:start="655:67" pos:end="655:87"><name pos:start="655:67" pos:end="655:87"><name pos:start="655:67" pos:end="655:69">ist</name><operator pos:start="655:70" pos:end="655:71">-&gt;</operator><name pos:start="655:72" pos:end="655:73">st</name><operator pos:start="655:74" pos:end="655:75">-&gt;</operator><name pos:start="655:76" pos:end="655:87">r_frame_rate</name></name></expr> </then><else pos:start="655:89" pos:end="655:108">: <expr pos:start="655:91" pos:end="655:108"><operator pos:start="655:91" pos:end="655:91">(</operator><name pos:start="655:92" pos:end="655:101">AVRational</name><operator pos:start="655:102" pos:end="655:102">)</operator><block pos:start="655:103" pos:end="655:108">{<expr pos:start="655:104" pos:end="655:105"><literal type="number" pos:start="655:104" pos:end="655:105">25</literal></expr>,<expr pos:start="655:107" pos:end="655:107"><literal type="number" pos:start="655:107" pos:end="655:107">1</literal></expr>}</block></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="657:17" pos:end="663:17"><if pos:start="657:17" pos:end="663:17">if <condition pos:start="657:20" pos:end="657:77">(<expr pos:start="657:21" pos:end="657:76"><name pos:start="657:21" pos:end="657:28"><name pos:start="657:21" pos:end="657:23">ost</name><operator pos:start="657:24" pos:end="657:25">-&gt;</operator><name pos:start="657:26" pos:end="657:28">enc</name></name> <operator pos:start="657:30" pos:end="657:31">&amp;&amp;</operator> <name pos:start="657:33" pos:end="657:62"><name pos:start="657:33" pos:end="657:35">ost</name><operator pos:start="657:36" pos:end="657:37">-&gt;</operator><name pos:start="657:38" pos:end="657:40">enc</name><operator pos:start="657:41" pos:end="657:42">-&gt;</operator><name pos:start="657:43" pos:end="657:62">supported_framerates</name></name> <operator pos:start="657:64" pos:end="657:65">&amp;&amp;</operator> <operator pos:start="657:67" pos:end="657:67">!</operator><name pos:start="657:68" pos:end="657:76">force_fps</name></expr>)</condition> <block pos:start="657:79" pos:end="663:17">{<block_content pos:start="659:21" pos:end="661:74">

                    <decl_stmt pos:start="659:21" pos:end="659:101"><decl pos:start="659:21" pos:end="659:100"><type pos:start="659:21" pos:end="659:23"><name pos:start="659:21" pos:end="659:23">int</name></type> <name pos:start="659:25" pos:end="659:27">idx</name> <init pos:start="659:29" pos:end="659:100">= <expr pos:start="659:31" pos:end="659:100"><call pos:start="659:31" pos:end="659:100"><name pos:start="659:31" pos:end="659:51">av_find_nearest_q_idx</name><argument_list pos:start="659:52" pos:end="659:100">(<argument pos:start="659:53" pos:end="659:67"><expr pos:start="659:53" pos:end="659:67"><name pos:start="659:53" pos:end="659:67"><name pos:start="659:53" pos:end="659:55">ost</name><operator pos:start="659:56" pos:end="659:57">-&gt;</operator><name pos:start="659:58" pos:end="659:67">frame_rate</name></name></expr></argument>, <argument pos:start="659:70" pos:end="659:99"><expr pos:start="659:70" pos:end="659:99"><name pos:start="659:70" pos:end="659:99"><name pos:start="659:70" pos:end="659:72">ost</name><operator pos:start="659:73" pos:end="659:74">-&gt;</operator><name pos:start="659:75" pos:end="659:77">enc</name><operator pos:start="659:78" pos:end="659:79">-&gt;</operator><name pos:start="659:80" pos:end="659:99">supported_framerates</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="661:21" pos:end="661:74"><expr pos:start="661:21" pos:end="661:73"><name pos:start="661:21" pos:end="661:35"><name pos:start="661:21" pos:end="661:23">ost</name><operator pos:start="661:24" pos:end="661:25">-&gt;</operator><name pos:start="661:26" pos:end="661:35">frame_rate</name></name> <operator pos:start="661:37" pos:end="661:37">=</operator> <name pos:start="661:39" pos:end="661:73"><name pos:start="661:39" pos:end="661:41">ost</name><operator pos:start="661:42" pos:end="661:43">-&gt;</operator><name pos:start="661:44" pos:end="661:46">enc</name><operator pos:start="661:47" pos:end="661:48">-&gt;</operator><name pos:start="661:49" pos:end="661:68">supported_framerates</name><index pos:start="661:69" pos:end="661:73">[<expr pos:start="661:70" pos:end="661:72"><name pos:start="661:70" pos:end="661:72">idx</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="665:17" pos:end="665:90"><expr pos:start="665:17" pos:end="665:89"><name pos:start="665:17" pos:end="665:32"><name pos:start="665:17" pos:end="665:21">codec</name><operator pos:start="665:22" pos:end="665:23">-&gt;</operator><name pos:start="665:24" pos:end="665:32">time_base</name></name> <operator pos:start="665:34" pos:end="665:34">=</operator> <operator pos:start="665:36" pos:end="665:36">(</operator><name pos:start="665:37" pos:end="665:46">AVRational</name><operator pos:start="665:47" pos:end="665:47">)</operator><block pos:start="665:48" pos:end="665:89">{<expr pos:start="665:49" pos:end="665:67"><name pos:start="665:49" pos:end="665:67"><name pos:start="665:49" pos:end="665:51">ost</name><operator pos:start="665:52" pos:end="665:53">-&gt;</operator><name pos:start="665:54" pos:end="665:63">frame_rate</name><operator pos:start="665:64" pos:end="665:64">.</operator><name pos:start="665:65" pos:end="665:67">den</name></name></expr>, <expr pos:start="665:70" pos:end="665:88"><name pos:start="665:70" pos:end="665:88"><name pos:start="665:70" pos:end="665:72">ost</name><operator pos:start="665:73" pos:end="665:74">-&gt;</operator><name pos:start="665:75" pos:end="665:84">frame_rate</name><operator pos:start="665:85" pos:end="665:85">.</operator><name pos:start="665:86" pos:end="665:88">num</name></name></expr>}</block></expr>;</expr_stmt>

                <if_stmt pos:start="667:17" pos:end="680:0"><if pos:start="667:17" pos:end="680:0">if<condition pos:start="667:19" pos:end="669:116">(   <expr pos:start="667:23" pos:end="669:115"><call pos:start="667:23" pos:end="667:46"><name pos:start="667:23" pos:end="667:28">av_q2d</name><argument_list pos:start="667:29" pos:end="667:46">(<argument pos:start="667:30" pos:end="667:45"><expr pos:start="667:30" pos:end="667:45"><name pos:start="667:30" pos:end="667:45"><name pos:start="667:30" pos:end="667:34">codec</name><operator pos:start="667:35" pos:end="667:36">-&gt;</operator><name pos:start="667:37" pos:end="667:45">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="667:48" pos:end="667:48">&lt;</operator> <literal type="number" pos:start="667:50" pos:end="667:54">0.001</literal> <operator pos:start="667:56" pos:end="667:57">&amp;&amp;</operator> <name pos:start="667:59" pos:end="667:75">video_sync_method</name>

                   <operator pos:start="669:20" pos:end="669:21">&amp;&amp;</operator> <operator pos:start="669:23" pos:end="669:23">(</operator><name pos:start="669:24" pos:end="669:40">video_sync_method</name><operator pos:start="669:41" pos:end="669:42">==</operator><literal type="number" pos:start="669:43" pos:end="669:43">1</literal> <operator pos:start="669:45" pos:end="669:46">||</operator> <operator pos:start="669:48" pos:end="669:48">(</operator><name pos:start="669:49" pos:end="669:65">video_sync_method</name><operator pos:start="669:66" pos:end="669:66">&lt;</operator><literal type="number" pos:start="669:67" pos:end="669:67">0</literal> <operator pos:start="669:69" pos:end="669:70">&amp;&amp;</operator> <operator pos:start="669:72" pos:end="669:72">!</operator><operator pos:start="669:73" pos:end="669:73">(</operator><name pos:start="669:74" pos:end="669:91"><name pos:start="669:74" pos:end="669:75">os</name><operator pos:start="669:76" pos:end="669:77">-&gt;</operator><name pos:start="669:78" pos:end="669:84">oformat</name><operator pos:start="669:85" pos:end="669:86">-&gt;</operator><name pos:start="669:87" pos:end="669:91">flags</name></name> <operator pos:start="669:93" pos:end="669:93">&amp;</operator> <name pos:start="669:95" pos:end="669:112">AVFMT_VARIABLE_FPS</name><operator pos:start="669:113" pos:end="669:113">)</operator><operator pos:start="669:114" pos:end="669:114">)</operator><operator pos:start="669:115" pos:end="669:115">)</operator></expr>)</condition><block pos:start="669:117" pos:end="680:0">{<block_content pos:start="671:21" pos:end="673:129">

                    <expr_stmt pos:start="671:21" pos:end="673:129"><expr pos:start="671:21" pos:end="673:128"><call pos:start="671:21" pos:end="673:128"><name pos:start="671:21" pos:end="671:26">av_log</name><argument_list pos:start="671:27" pos:end="673:128">(<argument pos:start="671:28" pos:end="671:29"><expr pos:start="671:28" pos:end="671:29"><name pos:start="671:28" pos:end="671:29">os</name></expr></argument>, <argument pos:start="671:32" pos:end="671:45"><expr pos:start="671:32" pos:end="671:45"><name pos:start="671:32" pos:end="671:45">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="671:48" pos:end="673:127"><expr pos:start="671:48" pos:end="673:127"><literal type="string" pos:start="671:48" pos:end="671:115">"Frame rate very high for a muxer not effciciently supporting it.\n"</literal>

                                               <literal type="string" pos:start="673:48" pos:end="673:127">"Please consider specifiying a lower framerate, a different muxer or -vsync 2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



<cpp:if pos:start="679:1" pos:end="679:19">#<cpp:directive pos:start="679:2" pos:end="679:3">if</cpp:directive> <expr pos:start="679:5" pos:end="679:19"><name pos:start="679:5" pos:end="679:19">CONFIG_AVFILTER</name></expr></cpp:if>

                <if_stmt pos:start="681:17" pos:end="690:0"><if pos:start="681:17" pos:end="690:0">if <condition pos:start="681:20" pos:end="681:54">(<expr pos:start="681:21" pos:end="681:53"><call pos:start="681:21" pos:end="681:53"><name pos:start="681:21" pos:end="681:43">configure_video_filters</name><argument_list pos:start="681:44" pos:end="681:53">(<argument pos:start="681:45" pos:end="681:47"><expr pos:start="681:45" pos:end="681:47"><name pos:start="681:45" pos:end="681:47">ist</name></expr></argument>, <argument pos:start="681:50" pos:end="681:52"><expr pos:start="681:50" pos:end="681:52"><name pos:start="681:50" pos:end="681:52">ost</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="681:56" pos:end="690:0">{<block_content pos:start="683:21" pos:end="685:28">

                    <expr_stmt pos:start="683:21" pos:end="683:64"><expr pos:start="683:21" pos:end="683:63"><call pos:start="683:21" pos:end="683:63"><name pos:start="683:21" pos:end="683:27">fprintf</name><argument_list pos:start="683:28" pos:end="683:63">(<argument pos:start="683:29" pos:end="683:34"><expr pos:start="683:29" pos:end="683:34"><name pos:start="683:29" pos:end="683:34">stderr</name></expr></argument>, <argument pos:start="683:37" pos:end="683:62"><expr pos:start="683:37" pos:end="683:62"><literal type="string" pos:start="683:37" pos:end="683:62">"Error opening filters!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="685:21" pos:end="685:28"><expr pos:start="685:21" pos:end="685:27"><call pos:start="685:21" pos:end="685:27"><name pos:start="685:21" pos:end="685:24">exit</name><argument_list pos:start="685:25" pos:end="685:27">(<argument pos:start="685:26" pos:end="685:26"><expr pos:start="685:26" pos:end="685:26"><literal type="number" pos:start="685:26" pos:end="685:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="689:1" pos:end="689:6">#<cpp:directive pos:start="689:2" pos:end="689:6">endif</cpp:directive></cpp:endif>

                <break pos:start="691:17" pos:end="691:22">break;</break>

            <case pos:start="693:13" pos:end="693:39">case <expr pos:start="693:18" pos:end="693:38"><name pos:start="693:18" pos:end="693:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="695:17" pos:end="695:41"><expr pos:start="695:17" pos:end="695:40"><name pos:start="695:17" pos:end="695:36"><name pos:start="695:17" pos:end="695:19">ost</name><operator pos:start="695:20" pos:end="695:21">-&gt;</operator><name pos:start="695:22" pos:end="695:36">encoding_needed</name></name> <operator pos:start="695:38" pos:end="695:38">=</operator> <literal type="number" pos:start="695:40" pos:end="695:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="697:17" pos:end="697:41"><expr pos:start="697:17" pos:end="697:40"><name pos:start="697:17" pos:end="697:36"><name pos:start="697:17" pos:end="697:19">ist</name><operator pos:start="697:20" pos:end="697:21">-&gt;</operator><name pos:start="697:22" pos:end="697:36">decoding_needed</name></name> <operator pos:start="697:38" pos:end="697:38">=</operator> <literal type="number" pos:start="697:40" pos:end="697:40">1</literal></expr>;</expr_stmt>

                <break pos:start="699:17" pos:end="699:22">break;</break>

            <default pos:start="701:13" pos:end="701:20">default:</default>

                <expr_stmt pos:start="703:17" pos:end="703:24"><expr pos:start="703:17" pos:end="703:23"><call pos:start="703:17" pos:end="703:23"><name pos:start="703:17" pos:end="703:21">abort</name><argument_list pos:start="703:22" pos:end="703:23">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="705:17" pos:end="705:22">break;</break>

            </block_content>}</block></switch>

            <comment type="block" pos:start="709:13" pos:end="709:31">/* two pass mode */</comment>

            <if_stmt pos:start="711:13" pos:end="759:13"><if pos:start="711:13" pos:end="759:13">if <condition pos:start="711:16" pos:end="713:71">(<expr pos:start="711:17" pos:end="713:70"><name pos:start="711:17" pos:end="711:36"><name pos:start="711:17" pos:end="711:19">ost</name><operator pos:start="711:20" pos:end="711:21">-&gt;</operator><name pos:start="711:22" pos:end="711:36">encoding_needed</name></name> <operator pos:start="711:38" pos:end="711:39">&amp;&amp;</operator> <name pos:start="711:41" pos:end="711:55"><name pos:start="711:41" pos:end="711:45">codec</name><operator pos:start="711:46" pos:end="711:47">-&gt;</operator><name pos:start="711:48" pos:end="711:55">codec_id</name></name> <operator pos:start="711:57" pos:end="711:58">!=</operator> <name pos:start="711:60" pos:end="711:72">CODEC_ID_H264</name> <operator pos:start="711:74" pos:end="711:75">&amp;&amp;</operator>

                <operator pos:start="713:17" pos:end="713:17">(</operator><name pos:start="713:18" pos:end="713:29"><name pos:start="713:18" pos:end="713:22">codec</name><operator pos:start="713:23" pos:end="713:24">-&gt;</operator><name pos:start="713:25" pos:end="713:29">flags</name></name> <operator pos:start="713:31" pos:end="713:31">&amp;</operator> <operator pos:start="713:33" pos:end="713:33">(</operator><name pos:start="713:34" pos:end="713:49">CODEC_FLAG_PASS1</name> <operator pos:start="713:51" pos:end="713:51">|</operator> <name pos:start="713:53" pos:end="713:68">CODEC_FLAG_PASS2</name><operator pos:start="713:69" pos:end="713:69">)</operator><operator pos:start="713:70" pos:end="713:70">)</operator></expr>)</condition> <block pos:start="713:73" pos:end="759:13">{<block_content pos:start="715:17" pos:end="757:17">

                <decl_stmt pos:start="715:17" pos:end="715:39"><decl pos:start="715:17" pos:end="715:38"><type pos:start="715:17" pos:end="715:20"><name pos:start="715:17" pos:end="715:20">char</name></type> <name pos:start="715:22" pos:end="715:38"><name pos:start="715:22" pos:end="715:32">logfilename</name><index pos:start="715:33" pos:end="715:38">[<expr pos:start="715:34" pos:end="715:37"><literal type="number" pos:start="715:34" pos:end="715:37">1024</literal></expr>]</index></name></decl>;</decl_stmt>

                <decl_stmt pos:start="717:17" pos:end="717:24"><decl pos:start="717:17" pos:end="717:23"><type pos:start="717:17" pos:end="717:22"><name pos:start="717:17" pos:end="717:20">FILE</name> <modifier pos:start="717:22" pos:end="717:22">*</modifier></type><name pos:start="717:23" pos:end="717:23">f</name></decl>;</decl_stmt>



                <expr_stmt pos:start="721:17" pos:end="725:28"><expr pos:start="721:17" pos:end="725:27"><call pos:start="721:17" pos:end="725:27"><name pos:start="721:17" pos:end="721:24">snprintf</name><argument_list pos:start="721:25" pos:end="725:27">(<argument pos:start="721:26" pos:end="721:36"><expr pos:start="721:26" pos:end="721:36"><name pos:start="721:26" pos:end="721:36">logfilename</name></expr></argument>, <argument pos:start="721:39" pos:end="721:57"><expr pos:start="721:39" pos:end="721:57"><sizeof pos:start="721:39" pos:end="721:57">sizeof<argument_list pos:start="721:45" pos:end="721:57">(<argument pos:start="721:46" pos:end="721:56"><expr pos:start="721:46" pos:end="721:56"><name pos:start="721:46" pos:end="721:56">logfilename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="721:60" pos:end="721:70"><expr pos:start="721:60" pos:end="721:70"><literal type="string" pos:start="721:60" pos:end="721:70">"%s-%d.log"</literal></expr></argument>,

                         <argument pos:start="723:26" pos:end="723:108"><expr pos:start="723:26" pos:end="723:108"><ternary pos:start="723:26" pos:end="723:108"><condition pos:start="723:26" pos:end="723:50"><expr pos:start="723:26" pos:end="723:48"><name pos:start="723:26" pos:end="723:48">pass_logfilename_prefix</name></expr> ?</condition><then pos:start="723:52" pos:end="723:74"> <expr pos:start="723:52" pos:end="723:74"><name pos:start="723:52" pos:end="723:74">pass_logfilename_prefix</name></expr> </then><else pos:start="723:76" pos:end="723:108">: <expr pos:start="723:78" pos:end="723:108"><name pos:start="723:78" pos:end="723:108">DEFAULT_PASS_LOGFILENAME_PREFIX</name></expr></else></ternary></expr></argument>,

                         <argument pos:start="725:26" pos:end="725:26"><expr pos:start="725:26" pos:end="725:26"><name pos:start="725:26" pos:end="725:26">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="727:17" pos:end="757:17"><if pos:start="727:17" pos:end="741:17">if <condition pos:start="727:20" pos:end="727:52">(<expr pos:start="727:21" pos:end="727:51"><name pos:start="727:21" pos:end="727:32"><name pos:start="727:21" pos:end="727:25">codec</name><operator pos:start="727:26" pos:end="727:27">-&gt;</operator><name pos:start="727:28" pos:end="727:32">flags</name></name> <operator pos:start="727:34" pos:end="727:34">&amp;</operator> <name pos:start="727:36" pos:end="727:51">CODEC_FLAG_PASS1</name></expr>)</condition> <block pos:start="727:54" pos:end="741:17">{<block_content pos:start="729:21" pos:end="739:37">

                    <expr_stmt pos:start="729:21" pos:end="729:49"><expr pos:start="729:21" pos:end="729:48"><name pos:start="729:21" pos:end="729:21">f</name> <operator pos:start="729:23" pos:end="729:23">=</operator> <call pos:start="729:25" pos:end="729:48"><name pos:start="729:25" pos:end="729:29">fopen</name><argument_list pos:start="729:30" pos:end="729:48">(<argument pos:start="729:31" pos:end="729:41"><expr pos:start="729:31" pos:end="729:41"><name pos:start="729:31" pos:end="729:41">logfilename</name></expr></argument>, <argument pos:start="729:44" pos:end="729:47"><expr pos:start="729:44" pos:end="729:47"><literal type="string" pos:start="729:44" pos:end="729:47">"wb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="731:21" pos:end="737:21"><if pos:start="731:21" pos:end="737:21">if <condition pos:start="731:24" pos:end="731:27">(<expr pos:start="731:25" pos:end="731:26"><operator pos:start="731:25" pos:end="731:25">!</operator><name pos:start="731:26" pos:end="731:26">f</name></expr>)</condition> <block pos:start="731:29" pos:end="737:21">{<block_content pos:start="733:25" pos:end="735:39">

                        <expr_stmt pos:start="733:25" pos:end="733:126"><expr pos:start="733:25" pos:end="733:125"><call pos:start="733:25" pos:end="733:125"><name pos:start="733:25" pos:end="733:31">fprintf</name><argument_list pos:start="733:32" pos:end="733:125">(<argument pos:start="733:33" pos:end="733:38"><expr pos:start="733:33" pos:end="733:38"><name pos:start="733:33" pos:end="733:38">stderr</name></expr></argument>, <argument pos:start="733:41" pos:end="733:94"><expr pos:start="733:41" pos:end="733:94"><literal type="string" pos:start="733:41" pos:end="733:94">"Cannot write log file '%s' for pass-1 encoding: %s\n"</literal></expr></argument>, <argument pos:start="733:97" pos:end="733:107"><expr pos:start="733:97" pos:end="733:107"><name pos:start="733:97" pos:end="733:107">logfilename</name></expr></argument>, <argument pos:start="733:110" pos:end="733:124"><expr pos:start="733:110" pos:end="733:124"><call pos:start="733:110" pos:end="733:124"><name pos:start="733:110" pos:end="733:117">strerror</name><argument_list pos:start="733:118" pos:end="733:124">(<argument pos:start="733:119" pos:end="733:123"><expr pos:start="733:119" pos:end="733:123"><name pos:start="733:119" pos:end="733:123">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="735:25" pos:end="735:39"><expr pos:start="735:25" pos:end="735:38"><call pos:start="735:25" pos:end="735:38"><name pos:start="735:25" pos:end="735:35">ffmpeg_exit</name><argument_list pos:start="735:36" pos:end="735:38">(<argument pos:start="735:37" pos:end="735:37"><expr pos:start="735:37" pos:end="735:37"><literal type="number" pos:start="735:37" pos:end="735:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="739:21" pos:end="739:37"><expr pos:start="739:21" pos:end="739:36"><name pos:start="739:21" pos:end="739:32"><name pos:start="739:21" pos:end="739:23">ost</name><operator pos:start="739:24" pos:end="739:25">-&gt;</operator><name pos:start="739:26" pos:end="739:32">logfile</name></name> <operator pos:start="739:34" pos:end="739:34">=</operator> <name pos:start="739:36" pos:end="739:36">f</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="741:19" pos:end="757:17">else <block pos:start="741:24" pos:end="757:17">{<block_content pos:start="743:21" pos:end="755:48">

                    <decl_stmt pos:start="743:21" pos:end="743:37"><decl pos:start="743:21" pos:end="743:36"><type pos:start="743:21" pos:end="743:27"><name pos:start="743:21" pos:end="743:24">char</name>  <modifier pos:start="743:27" pos:end="743:27">*</modifier></type><name pos:start="743:28" pos:end="743:36">logbuffer</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="745:21" pos:end="745:42"><decl pos:start="745:21" pos:end="745:41"><type pos:start="745:21" pos:end="745:26"><name pos:start="745:21" pos:end="745:26">size_t</name></type> <name pos:start="745:28" pos:end="745:41">logbuffer_size</name></decl>;</decl_stmt>

                    <if_stmt pos:start="747:21" pos:end="753:21"><if pos:start="747:21" pos:end="753:21">if <condition pos:start="747:24" pos:end="747:80">(<expr pos:start="747:25" pos:end="747:79"><call pos:start="747:25" pos:end="747:75"><name pos:start="747:25" pos:end="747:33">read_file</name><argument_list pos:start="747:34" pos:end="747:75">(<argument pos:start="747:35" pos:end="747:45"><expr pos:start="747:35" pos:end="747:45"><name pos:start="747:35" pos:end="747:45">logfilename</name></expr></argument>, <argument pos:start="747:48" pos:end="747:57"><expr pos:start="747:48" pos:end="747:57"><operator pos:start="747:48" pos:end="747:48">&amp;</operator><name pos:start="747:49" pos:end="747:57">logbuffer</name></expr></argument>, <argument pos:start="747:60" pos:end="747:74"><expr pos:start="747:60" pos:end="747:74"><operator pos:start="747:60" pos:end="747:60">&amp;</operator><name pos:start="747:61" pos:end="747:74">logbuffer_size</name></expr></argument>)</argument_list></call> <operator pos:start="747:77" pos:end="747:77">&lt;</operator> <literal type="number" pos:start="747:79" pos:end="747:79">0</literal></expr>)</condition> <block pos:start="747:82" pos:end="753:21">{<block_content pos:start="749:25" pos:end="751:39">

                        <expr_stmt pos:start="749:25" pos:end="749:106"><expr pos:start="749:25" pos:end="749:105"><call pos:start="749:25" pos:end="749:105"><name pos:start="749:25" pos:end="749:31">fprintf</name><argument_list pos:start="749:32" pos:end="749:105">(<argument pos:start="749:33" pos:end="749:38"><expr pos:start="749:33" pos:end="749:38"><name pos:start="749:33" pos:end="749:38">stderr</name></expr></argument>, <argument pos:start="749:41" pos:end="749:91"><expr pos:start="749:41" pos:end="749:91"><literal type="string" pos:start="749:41" pos:end="749:91">"Error reading log file '%s' for pass-2 encoding\n"</literal></expr></argument>, <argument pos:start="749:94" pos:end="749:104"><expr pos:start="749:94" pos:end="749:104"><name pos:start="749:94" pos:end="749:104">logfilename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="751:25" pos:end="751:39"><expr pos:start="751:25" pos:end="751:38"><call pos:start="751:25" pos:end="751:38"><name pos:start="751:25" pos:end="751:35">ffmpeg_exit</name><argument_list pos:start="751:36" pos:end="751:38">(<argument pos:start="751:37" pos:end="751:37"><expr pos:start="751:37" pos:end="751:37"><literal type="number" pos:start="751:37" pos:end="751:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="755:21" pos:end="755:48"><expr pos:start="755:21" pos:end="755:47"><name pos:start="755:21" pos:end="755:35"><name pos:start="755:21" pos:end="755:25">codec</name><operator pos:start="755:26" pos:end="755:27">-&gt;</operator><name pos:start="755:28" pos:end="755:35">stats_in</name></name> <operator pos:start="755:37" pos:end="755:37">=</operator> <name pos:start="755:39" pos:end="755:47">logbuffer</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="763:9" pos:end="771:9"><if pos:start="763:9" pos:end="771:9">if<condition pos:start="763:11" pos:end="763:51">(<expr pos:start="763:12" pos:end="763:50"><name pos:start="763:12" pos:end="763:28"><name pos:start="763:12" pos:end="763:16">codec</name><operator pos:start="763:17" pos:end="763:18">-&gt;</operator><name pos:start="763:19" pos:end="763:28">codec_type</name></name> <operator pos:start="763:30" pos:end="763:31">==</operator> <name pos:start="763:33" pos:end="763:50">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block pos:start="763:52" pos:end="771:9">{<block_content pos:start="767:13" pos:end="769:67">

            <comment type="block" pos:start="765:13" pos:end="765:86">/* maximum video buffer size is 6-bytes per pixel, plus DPX header size */</comment>

            <decl_stmt pos:start="767:13" pos:end="767:51"><decl pos:start="767:13" pos:end="767:50"><type pos:start="767:13" pos:end="767:15"><name pos:start="767:13" pos:end="767:15">int</name></type> <name pos:start="767:17" pos:end="767:20">size</name><init pos:start="767:21" pos:end="767:50">= <expr pos:start="767:23" pos:end="767:50"><name pos:start="767:23" pos:end="767:34"><name pos:start="767:23" pos:end="767:27">codec</name><operator pos:start="767:28" pos:end="767:29">-&gt;</operator><name pos:start="767:30" pos:end="767:34">width</name></name> <operator pos:start="767:36" pos:end="767:36">*</operator> <name pos:start="767:38" pos:end="767:50"><name pos:start="767:38" pos:end="767:42">codec</name><operator pos:start="767:43" pos:end="767:44">-&gt;</operator><name pos:start="767:45" pos:end="767:50">height</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="769:13" pos:end="769:67"><expr pos:start="769:13" pos:end="769:66"><name pos:start="769:13" pos:end="769:27">bit_buffer_size</name><operator pos:start="769:28" pos:end="769:28">=</operator> <call pos:start="769:30" pos:end="769:66"><name pos:start="769:30" pos:end="769:34">FFMAX</name><argument_list pos:start="769:35" pos:end="769:66">(<argument pos:start="769:36" pos:end="769:50"><expr pos:start="769:36" pos:end="769:50"><name pos:start="769:36" pos:end="769:50">bit_buffer_size</name></expr></argument>, <argument pos:start="769:53" pos:end="769:65"><expr pos:start="769:53" pos:end="769:65"><literal type="number" pos:start="769:53" pos:end="769:53">6</literal><operator pos:start="769:54" pos:end="769:54">*</operator><name pos:start="769:55" pos:end="769:58">size</name> <operator pos:start="769:60" pos:end="769:60">+</operator> <literal type="number" pos:start="769:62" pos:end="769:65">1664</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="777:5" pos:end="779:48"><if pos:start="777:5" pos:end="779:48">if <condition pos:start="777:8" pos:end="777:20">(<expr pos:start="777:9" pos:end="777:19"><operator pos:start="777:9" pos:end="777:9">!</operator><name pos:start="777:10" pos:end="777:19">bit_buffer</name></expr>)</condition><block type="pseudo" pos:start="779:9" pos:end="779:48"><block_content pos:start="779:9" pos:end="779:48">

        <expr_stmt pos:start="779:9" pos:end="779:48"><expr pos:start="779:9" pos:end="779:47"><name pos:start="779:9" pos:end="779:18">bit_buffer</name> <operator pos:start="779:20" pos:end="779:20">=</operator> <call pos:start="779:22" pos:end="779:47"><name pos:start="779:22" pos:end="779:30">av_malloc</name><argument_list pos:start="779:31" pos:end="779:47">(<argument pos:start="779:32" pos:end="779:46"><expr pos:start="779:32" pos:end="779:46"><name pos:start="779:32" pos:end="779:46">bit_buffer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="781:5" pos:end="791:5"><if pos:start="781:5" pos:end="791:5">if <condition pos:start="781:8" pos:end="781:20">(<expr pos:start="781:9" pos:end="781:19"><operator pos:start="781:9" pos:end="781:9">!</operator><name pos:start="781:10" pos:end="781:19">bit_buffer</name></expr>)</condition> <block pos:start="781:22" pos:end="791:5">{<block_content pos:start="783:9" pos:end="789:18">

        <expr_stmt pos:start="783:9" pos:end="785:33"><expr pos:start="783:9" pos:end="785:32"><call pos:start="783:9" pos:end="785:32"><name pos:start="783:9" pos:end="783:15">fprintf</name><argument_list pos:start="783:16" pos:end="785:32">(<argument pos:start="783:17" pos:end="783:22"><expr pos:start="783:17" pos:end="783:22"><name pos:start="783:17" pos:end="783:22">stderr</name></expr></argument>, <argument pos:start="783:25" pos:end="783:66"><expr pos:start="783:25" pos:end="783:66"><literal type="string" pos:start="783:25" pos:end="783:66">"Cannot allocate %d bytes output buffer\n"</literal></expr></argument>,

                <argument pos:start="785:17" pos:end="785:31"><expr pos:start="785:17" pos:end="785:31"><name pos:start="785:17" pos:end="785:31">bit_buffer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="787:9" pos:end="787:30"><expr pos:start="787:9" pos:end="787:29"><name pos:start="787:9" pos:end="787:11">ret</name> <operator pos:start="787:13" pos:end="787:13">=</operator> <call pos:start="787:15" pos:end="787:29"><name pos:start="787:15" pos:end="787:21">AVERROR</name><argument_list pos:start="787:22" pos:end="787:29">(<argument pos:start="787:23" pos:end="787:28"><expr pos:start="787:23" pos:end="787:28"><name pos:start="787:23" pos:end="787:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="789:9" pos:end="789:18">goto <name pos:start="789:14" pos:end="789:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="795:5" pos:end="795:27">/* open each encoder */</comment>

    <for pos:start="797:5" pos:end="863:5">for<control pos:start="797:8" pos:end="797:30">(<init pos:start="797:9" pos:end="797:12"><expr pos:start="797:9" pos:end="797:11"><name pos:start="797:9" pos:end="797:9">i</name><operator pos:start="797:10" pos:end="797:10">=</operator><literal type="number" pos:start="797:11" pos:end="797:11">0</literal></expr>;</init><condition pos:start="797:13" pos:end="797:26"><expr pos:start="797:13" pos:end="797:25"><name pos:start="797:13" pos:end="797:13">i</name><operator pos:start="797:14" pos:end="797:14">&lt;</operator><name pos:start="797:15" pos:end="797:25">nb_ostreams</name></expr>;</condition><incr pos:start="797:27" pos:end="797:29"><expr pos:start="797:27" pos:end="797:29"><name pos:start="797:27" pos:end="797:27">i</name><operator pos:start="797:28" pos:end="797:29">++</operator></expr></incr>)</control> <block pos:start="797:32" pos:end="863:5">{<block_content pos:start="799:9" pos:end="861:9">

        <expr_stmt pos:start="799:9" pos:end="799:27"><expr pos:start="799:9" pos:end="799:26"><name pos:start="799:9" pos:end="799:11">ost</name> <operator pos:start="799:13" pos:end="799:13">=</operator> <name pos:start="799:15" pos:end="799:26"><name pos:start="799:15" pos:end="799:23">ost_table</name><index pos:start="799:24" pos:end="799:26">[<expr pos:start="799:25" pos:end="799:25"><name pos:start="799:25" pos:end="799:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="801:9" pos:end="861:9"><if pos:start="801:9" pos:end="861:9">if <condition pos:start="801:12" pos:end="801:33">(<expr pos:start="801:13" pos:end="801:32"><name pos:start="801:13" pos:end="801:32"><name pos:start="801:13" pos:end="801:15">ost</name><operator pos:start="801:16" pos:end="801:17">-&gt;</operator><name pos:start="801:18" pos:end="801:32">encoding_needed</name></name></expr>)</condition> <block pos:start="801:35" pos:end="861:9">{<block_content pos:start="803:13" pos:end="859:57">

            <decl_stmt pos:start="803:13" pos:end="803:38"><decl pos:start="803:13" pos:end="803:37"><type pos:start="803:13" pos:end="803:21"><name pos:start="803:13" pos:end="803:19">AVCodec</name> <modifier pos:start="803:21" pos:end="803:21">*</modifier></type><name pos:start="803:22" pos:end="803:26">codec</name> <init pos:start="803:28" pos:end="803:37">= <expr pos:start="803:30" pos:end="803:37"><name pos:start="803:30" pos:end="803:37"><name pos:start="803:30" pos:end="803:32">ost</name><operator pos:start="803:33" pos:end="803:34">-&gt;</operator><name pos:start="803:35" pos:end="803:37">enc</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="805:13" pos:end="805:77"><decl pos:start="805:13" pos:end="805:76"><type pos:start="805:13" pos:end="805:28"><name pos:start="805:13" pos:end="805:26">AVCodecContext</name> <modifier pos:start="805:28" pos:end="805:28">*</modifier></type><name pos:start="805:29" pos:end="805:31">dec</name> <init pos:start="805:33" pos:end="805:76">= <expr pos:start="805:35" pos:end="805:76"><name pos:start="805:35" pos:end="805:66"><name pos:start="805:35" pos:end="805:47">input_streams</name><index pos:start="805:48" pos:end="805:66">[<expr pos:start="805:49" pos:end="805:65"><name pos:start="805:49" pos:end="805:65"><name pos:start="805:49" pos:end="805:51">ost</name><operator pos:start="805:52" pos:end="805:53">-&gt;</operator><name pos:start="805:54" pos:end="805:65">source_index</name></name></expr>]</index></name><operator pos:start="805:67" pos:end="805:67">.</operator><name pos:start="805:68" pos:end="805:76"><name pos:start="805:68" pos:end="805:69">st</name><operator pos:start="805:70" pos:end="805:71">-&gt;</operator><name pos:start="805:72" pos:end="805:76">codec</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="807:13" pos:end="817:13"><if pos:start="807:13" pos:end="817:13">if <condition pos:start="807:16" pos:end="807:23">(<expr pos:start="807:17" pos:end="807:22"><operator pos:start="807:17" pos:end="807:17">!</operator><name pos:start="807:18" pos:end="807:22">codec</name></expr>)</condition> <block pos:start="807:25" pos:end="817:13">{<block_content pos:start="809:17" pos:end="815:33">

                <expr_stmt pos:start="809:17" pos:end="811:80"><expr pos:start="809:17" pos:end="811:79"><call pos:start="809:17" pos:end="811:79"><name pos:start="809:17" pos:end="809:24">snprintf</name><argument_list pos:start="809:25" pos:end="811:79">(<argument pos:start="809:26" pos:end="809:30"><expr pos:start="809:26" pos:end="809:30"><name pos:start="809:26" pos:end="809:30">error</name></expr></argument>, <argument pos:start="809:33" pos:end="809:45"><expr pos:start="809:33" pos:end="809:45"><sizeof pos:start="809:33" pos:end="809:45">sizeof<argument_list pos:start="809:39" pos:end="809:45">(<argument pos:start="809:40" pos:end="809:44"><expr pos:start="809:40" pos:end="809:44"><name pos:start="809:40" pos:end="809:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="809:48" pos:end="809:105"><expr pos:start="809:48" pos:end="809:105"><literal type="string" pos:start="809:48" pos:end="809:105">"Encoder (codec id %d) not found for output stream #%d.%d"</literal></expr></argument>,

                         <argument pos:start="811:26" pos:end="811:49"><expr pos:start="811:26" pos:end="811:49"><name pos:start="811:26" pos:end="811:49"><name pos:start="811:26" pos:end="811:28">ost</name><operator pos:start="811:29" pos:end="811:30">-&gt;</operator><name pos:start="811:31" pos:end="811:32">st</name><operator pos:start="811:33" pos:end="811:34">-&gt;</operator><name pos:start="811:35" pos:end="811:39">codec</name><operator pos:start="811:40" pos:end="811:41">-&gt;</operator><name pos:start="811:42" pos:end="811:49">codec_id</name></name></expr></argument>, <argument pos:start="811:52" pos:end="811:66"><expr pos:start="811:52" pos:end="811:66"><name pos:start="811:52" pos:end="811:66"><name pos:start="811:52" pos:end="811:54">ost</name><operator pos:start="811:55" pos:end="811:56">-&gt;</operator><name pos:start="811:57" pos:end="811:66">file_index</name></name></expr></argument>, <argument pos:start="811:69" pos:end="811:78"><expr pos:start="811:69" pos:end="811:78"><name pos:start="811:69" pos:end="811:78"><name pos:start="811:69" pos:end="811:71">ost</name><operator pos:start="811:72" pos:end="811:73">-&gt;</operator><name pos:start="811:74" pos:end="811:78">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="813:17" pos:end="813:38"><expr pos:start="813:17" pos:end="813:37"><name pos:start="813:17" pos:end="813:19">ret</name> <operator pos:start="813:21" pos:end="813:21">=</operator> <call pos:start="813:23" pos:end="813:37"><name pos:start="813:23" pos:end="813:29">AVERROR</name><argument_list pos:start="813:30" pos:end="813:37">(<argument pos:start="813:31" pos:end="813:36"><expr pos:start="813:31" pos:end="813:36"><name pos:start="813:31" pos:end="813:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="815:17" pos:end="815:33">goto <name pos:start="815:22" pos:end="815:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="819:13" pos:end="835:13"><if pos:start="819:13" pos:end="835:13">if <condition pos:start="819:16" pos:end="819:37">(<expr pos:start="819:17" pos:end="819:36"><name pos:start="819:17" pos:end="819:36"><name pos:start="819:17" pos:end="819:19">dec</name><operator pos:start="819:20" pos:end="819:21">-&gt;</operator><name pos:start="819:22" pos:end="819:36">subtitle_header</name></name></expr>)</condition> <block pos:start="819:39" pos:end="835:13">{<block_content pos:start="821:17" pos:end="833:81">

                <expr_stmt pos:start="821:17" pos:end="821:87"><expr pos:start="821:17" pos:end="821:86"><name pos:start="821:17" pos:end="821:47"><name pos:start="821:17" pos:end="821:19">ost</name><operator pos:start="821:20" pos:end="821:21">-&gt;</operator><name pos:start="821:22" pos:end="821:23">st</name><operator pos:start="821:24" pos:end="821:25">-&gt;</operator><name pos:start="821:26" pos:end="821:30">codec</name><operator pos:start="821:31" pos:end="821:32">-&gt;</operator><name pos:start="821:33" pos:end="821:47">subtitle_header</name></name> <operator pos:start="821:49" pos:end="821:49">=</operator> <call pos:start="821:51" pos:end="821:86"><name pos:start="821:51" pos:end="821:59">av_malloc</name><argument_list pos:start="821:60" pos:end="821:86">(<argument pos:start="821:61" pos:end="821:85"><expr pos:start="821:61" pos:end="821:85"><name pos:start="821:61" pos:end="821:85"><name pos:start="821:61" pos:end="821:63">dec</name><operator pos:start="821:64" pos:end="821:65">-&gt;</operator><name pos:start="821:66" pos:end="821:85">subtitle_header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="823:17" pos:end="829:17"><if pos:start="823:17" pos:end="829:17">if <condition pos:start="823:20" pos:end="823:53">(<expr pos:start="823:21" pos:end="823:52"><operator pos:start="823:21" pos:end="823:21">!</operator><name pos:start="823:22" pos:end="823:52"><name pos:start="823:22" pos:end="823:24">ost</name><operator pos:start="823:25" pos:end="823:26">-&gt;</operator><name pos:start="823:27" pos:end="823:28">st</name><operator pos:start="823:29" pos:end="823:30">-&gt;</operator><name pos:start="823:31" pos:end="823:35">codec</name><operator pos:start="823:36" pos:end="823:37">-&gt;</operator><name pos:start="823:38" pos:end="823:52">subtitle_header</name></name></expr>)</condition> <block pos:start="823:55" pos:end="829:17">{<block_content pos:start="825:21" pos:end="827:37">

                    <expr_stmt pos:start="825:21" pos:end="825:42"><expr pos:start="825:21" pos:end="825:41"><name pos:start="825:21" pos:end="825:23">ret</name> <operator pos:start="825:25" pos:end="825:25">=</operator> <call pos:start="825:27" pos:end="825:41"><name pos:start="825:27" pos:end="825:33">AVERROR</name><argument_list pos:start="825:34" pos:end="825:41">(<argument pos:start="825:35" pos:end="825:40"><expr pos:start="825:35" pos:end="825:40"><name pos:start="825:35" pos:end="825:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="827:21" pos:end="827:37">goto <name pos:start="827:26" pos:end="827:36">dump_format</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="831:17" pos:end="831:105"><expr pos:start="831:17" pos:end="831:104"><call pos:start="831:17" pos:end="831:104"><name pos:start="831:17" pos:end="831:22">memcpy</name><argument_list pos:start="831:23" pos:end="831:104">(<argument pos:start="831:24" pos:end="831:54"><expr pos:start="831:24" pos:end="831:54"><name pos:start="831:24" pos:end="831:54"><name pos:start="831:24" pos:end="831:26">ost</name><operator pos:start="831:27" pos:end="831:28">-&gt;</operator><name pos:start="831:29" pos:end="831:30">st</name><operator pos:start="831:31" pos:end="831:32">-&gt;</operator><name pos:start="831:33" pos:end="831:37">codec</name><operator pos:start="831:38" pos:end="831:39">-&gt;</operator><name pos:start="831:40" pos:end="831:54">subtitle_header</name></name></expr></argument>, <argument pos:start="831:57" pos:end="831:76"><expr pos:start="831:57" pos:end="831:76"><name pos:start="831:57" pos:end="831:76"><name pos:start="831:57" pos:end="831:59">dec</name><operator pos:start="831:60" pos:end="831:61">-&gt;</operator><name pos:start="831:62" pos:end="831:76">subtitle_header</name></name></expr></argument>, <argument pos:start="831:79" pos:end="831:103"><expr pos:start="831:79" pos:end="831:103"><name pos:start="831:79" pos:end="831:103"><name pos:start="831:79" pos:end="831:81">dec</name><operator pos:start="831:82" pos:end="831:83">-&gt;</operator><name pos:start="831:84" pos:end="831:103">subtitle_header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="833:17" pos:end="833:81"><expr pos:start="833:17" pos:end="833:80"><name pos:start="833:17" pos:end="833:52"><name pos:start="833:17" pos:end="833:19">ost</name><operator pos:start="833:20" pos:end="833:21">-&gt;</operator><name pos:start="833:22" pos:end="833:23">st</name><operator pos:start="833:24" pos:end="833:25">-&gt;</operator><name pos:start="833:26" pos:end="833:30">codec</name><operator pos:start="833:31" pos:end="833:32">-&gt;</operator><name pos:start="833:33" pos:end="833:52">subtitle_header_size</name></name> <operator pos:start="833:54" pos:end="833:54">=</operator> <name pos:start="833:56" pos:end="833:80"><name pos:start="833:56" pos:end="833:58">dec</name><operator pos:start="833:59" pos:end="833:60">-&gt;</operator><name pos:start="833:61" pos:end="833:80">subtitle_header_size</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="837:13" pos:end="847:13"><if pos:start="837:13" pos:end="847:13">if <condition pos:start="837:16" pos:end="837:69">(<expr pos:start="837:17" pos:end="837:68"><call pos:start="837:17" pos:end="837:64"><name pos:start="837:17" pos:end="837:29">avcodec_open2</name><argument_list pos:start="837:30" pos:end="837:64">(<argument pos:start="837:31" pos:end="837:44"><expr pos:start="837:31" pos:end="837:44"><name pos:start="837:31" pos:end="837:44"><name pos:start="837:31" pos:end="837:33">ost</name><operator pos:start="837:34" pos:end="837:35">-&gt;</operator><name pos:start="837:36" pos:end="837:37">st</name><operator pos:start="837:38" pos:end="837:39">-&gt;</operator><name pos:start="837:40" pos:end="837:44">codec</name></name></expr></argument>, <argument pos:start="837:47" pos:end="837:51"><expr pos:start="837:47" pos:end="837:51"><name pos:start="837:47" pos:end="837:51">codec</name></expr></argument>, <argument pos:start="837:54" pos:end="837:63"><expr pos:start="837:54" pos:end="837:63"><operator pos:start="837:54" pos:end="837:54">&amp;</operator><name pos:start="837:55" pos:end="837:63"><name pos:start="837:55" pos:end="837:57">ost</name><operator pos:start="837:58" pos:end="837:59">-&gt;</operator><name pos:start="837:60" pos:end="837:63">opts</name></name></expr></argument>)</argument_list></call> <operator pos:start="837:66" pos:end="837:66">&lt;</operator> <literal type="number" pos:start="837:68" pos:end="837:68">0</literal></expr>)</condition> <block pos:start="837:71" pos:end="847:13">{<block_content pos:start="839:17" pos:end="845:33">

                <expr_stmt pos:start="839:17" pos:end="841:53"><expr pos:start="839:17" pos:end="841:52"><call pos:start="839:17" pos:end="841:52"><name pos:start="839:17" pos:end="839:24">snprintf</name><argument_list pos:start="839:25" pos:end="841:52">(<argument pos:start="839:26" pos:end="839:30"><expr pos:start="839:26" pos:end="839:30"><name pos:start="839:26" pos:end="839:30">error</name></expr></argument>, <argument pos:start="839:33" pos:end="839:45"><expr pos:start="839:33" pos:end="839:45"><sizeof pos:start="839:33" pos:end="839:45">sizeof<argument_list pos:start="839:39" pos:end="839:45">(<argument pos:start="839:40" pos:end="839:44"><expr pos:start="839:40" pos:end="839:44"><name pos:start="839:40" pos:end="839:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="839:48" pos:end="839:170"><expr pos:start="839:48" pos:end="839:170"><literal type="string" pos:start="839:48" pos:end="839:170">"Error while opening encoder for output stream #%d.%d - maybe incorrect parameters such as bit_rate, rate, width or height"</literal></expr></argument>,

                        <argument pos:start="841:25" pos:end="841:39"><expr pos:start="841:25" pos:end="841:39"><name pos:start="841:25" pos:end="841:39"><name pos:start="841:25" pos:end="841:27">ost</name><operator pos:start="841:28" pos:end="841:29">-&gt;</operator><name pos:start="841:30" pos:end="841:39">file_index</name></name></expr></argument>, <argument pos:start="841:42" pos:end="841:51"><expr pos:start="841:42" pos:end="841:51"><name pos:start="841:42" pos:end="841:51"><name pos:start="841:42" pos:end="841:44">ost</name><operator pos:start="841:45" pos:end="841:46">-&gt;</operator><name pos:start="841:47" pos:end="841:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="843:17" pos:end="843:38"><expr pos:start="843:17" pos:end="843:37"><name pos:start="843:17" pos:end="843:19">ret</name> <operator pos:start="843:21" pos:end="843:21">=</operator> <call pos:start="843:23" pos:end="843:37"><name pos:start="843:23" pos:end="843:29">AVERROR</name><argument_list pos:start="843:30" pos:end="843:37">(<argument pos:start="843:31" pos:end="843:36"><expr pos:start="843:31" pos:end="843:36"><name pos:start="843:31" pos:end="843:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="845:17" pos:end="845:33">goto <name pos:start="845:22" pos:end="845:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="849:13" pos:end="849:57"><expr pos:start="849:13" pos:end="849:56"><call pos:start="849:13" pos:end="849:56"><name pos:start="849:13" pos:end="849:37">assert_codec_experimental</name><argument_list pos:start="849:38" pos:end="849:56">(<argument pos:start="849:39" pos:end="849:52"><expr pos:start="849:39" pos:end="849:52"><name pos:start="849:39" pos:end="849:52"><name pos:start="849:39" pos:end="849:41">ost</name><operator pos:start="849:42" pos:end="849:43">-&gt;</operator><name pos:start="849:44" pos:end="849:45">st</name><operator pos:start="849:46" pos:end="849:47">-&gt;</operator><name pos:start="849:48" pos:end="849:52">codec</name></name></expr></argument>, <argument pos:start="849:55" pos:end="849:55"><expr pos:start="849:55" pos:end="849:55"><literal type="number" pos:start="849:55" pos:end="849:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="851:13" pos:end="851:40"><expr pos:start="851:13" pos:end="851:39"><call pos:start="851:13" pos:end="851:39"><name pos:start="851:13" pos:end="851:28">assert_avoptions</name><argument_list pos:start="851:29" pos:end="851:39">(<argument pos:start="851:30" pos:end="851:38"><expr pos:start="851:30" pos:end="851:38"><name pos:start="851:30" pos:end="851:38"><name pos:start="851:30" pos:end="851:32">ost</name><operator pos:start="851:33" pos:end="851:34">-&gt;</operator><name pos:start="851:35" pos:end="851:38">opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="853:13" pos:end="857:91"><if pos:start="853:13" pos:end="857:91">if <condition pos:start="853:16" pos:end="853:76">(<expr pos:start="853:17" pos:end="853:75"><name pos:start="853:17" pos:end="853:40"><name pos:start="853:17" pos:end="853:19">ost</name><operator pos:start="853:20" pos:end="853:21">-&gt;</operator><name pos:start="853:22" pos:end="853:23">st</name><operator pos:start="853:24" pos:end="853:25">-&gt;</operator><name pos:start="853:26" pos:end="853:30">codec</name><operator pos:start="853:31" pos:end="853:32">-&gt;</operator><name pos:start="853:33" pos:end="853:40">bit_rate</name></name> <operator pos:start="853:42" pos:end="853:43">&amp;&amp;</operator> <name pos:start="853:45" pos:end="853:68"><name pos:start="853:45" pos:end="853:47">ost</name><operator pos:start="853:48" pos:end="853:49">-&gt;</operator><name pos:start="853:50" pos:end="853:51">st</name><operator pos:start="853:52" pos:end="853:53">-&gt;</operator><name pos:start="853:54" pos:end="853:58">codec</name><operator pos:start="853:59" pos:end="853:60">-&gt;</operator><name pos:start="853:61" pos:end="853:68">bit_rate</name></name> <operator pos:start="853:70" pos:end="853:70">&lt;</operator> <literal type="number" pos:start="853:72" pos:end="853:75">1000</literal></expr>)</condition><block type="pseudo" pos:start="855:17" pos:end="857:91"><block_content pos:start="855:17" pos:end="857:91">

                <expr_stmt pos:start="855:17" pos:end="857:91"><expr pos:start="855:17" pos:end="857:90"><call pos:start="855:17" pos:end="857:90"><name pos:start="855:17" pos:end="855:22">av_log</name><argument_list pos:start="855:23" pos:end="857:90">(<argument pos:start="855:24" pos:end="855:27"><expr pos:start="855:24" pos:end="855:27"><name pos:start="855:24" pos:end="855:27">NULL</name></expr></argument>, <argument pos:start="855:30" pos:end="855:43"><expr pos:start="855:30" pos:end="855:43"><name pos:start="855:30" pos:end="855:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="855:46" pos:end="857:89"><expr pos:start="855:46" pos:end="857:89"><literal type="string" pos:start="855:46" pos:end="855:84">"The bitrate parameter is set too low."</literal>

                                             <literal type="string" pos:start="857:46" pos:end="857:89">"It takes bits/s as argument, not kbits/s\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="859:13" pos:end="859:57"><expr pos:start="859:13" pos:end="859:56"><name pos:start="859:13" pos:end="859:22">extra_size</name> <operator pos:start="859:24" pos:end="859:25">+=</operator> <name pos:start="859:27" pos:end="859:56"><name pos:start="859:27" pos:end="859:29">ost</name><operator pos:start="859:30" pos:end="859:31">-&gt;</operator><name pos:start="859:32" pos:end="859:33">st</name><operator pos:start="859:34" pos:end="859:35">-&gt;</operator><name pos:start="859:36" pos:end="859:40">codec</name><operator pos:start="859:41" pos:end="859:42">-&gt;</operator><name pos:start="859:43" pos:end="859:56">extradata_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="867:5" pos:end="867:27">/* open each decoder */</comment>

    <for pos:start="869:5" pos:end="915:5">for <control pos:start="869:9" pos:end="869:42">(<init pos:start="869:10" pos:end="869:15"><expr pos:start="869:10" pos:end="869:14"><name pos:start="869:10" pos:end="869:10">i</name> <operator pos:start="869:12" pos:end="869:12">=</operator> <literal type="number" pos:start="869:14" pos:end="869:14">0</literal></expr>;</init> <condition pos:start="869:17" pos:end="869:37"><expr pos:start="869:17" pos:end="869:36"><name pos:start="869:17" pos:end="869:17">i</name> <operator pos:start="869:19" pos:end="869:19">&lt;</operator> <name pos:start="869:21" pos:end="869:36">nb_input_streams</name></expr>;</condition> <incr pos:start="869:39" pos:end="869:41"><expr pos:start="869:39" pos:end="869:41"><name pos:start="869:39" pos:end="869:39">i</name><operator pos:start="869:40" pos:end="869:41">++</operator></expr></incr>)</control> <block pos:start="869:44" pos:end="915:5">{<block_content pos:start="871:9" pos:end="913:9">

        <expr_stmt pos:start="871:9" pos:end="871:32"><expr pos:start="871:9" pos:end="871:31"><name pos:start="871:9" pos:end="871:11">ist</name> <operator pos:start="871:13" pos:end="871:13">=</operator> <operator pos:start="871:15" pos:end="871:15">&amp;</operator><name pos:start="871:16" pos:end="871:31"><name pos:start="871:16" pos:end="871:28">input_streams</name><index pos:start="871:29" pos:end="871:31">[<expr pos:start="871:30" pos:end="871:30"><name pos:start="871:30" pos:end="871:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="873:9" pos:end="913:9"><if pos:start="873:9" pos:end="913:9">if <condition pos:start="873:12" pos:end="873:33">(<expr pos:start="873:13" pos:end="873:32"><name pos:start="873:13" pos:end="873:32"><name pos:start="873:13" pos:end="873:15">ist</name><operator pos:start="873:16" pos:end="873:17">-&gt;</operator><name pos:start="873:18" pos:end="873:32">decoding_needed</name></name></expr>)</condition> <block pos:start="873:35" pos:end="913:9">{<block_content pos:start="875:13" pos:end="907:40">

            <decl_stmt pos:start="875:13" pos:end="875:38"><decl pos:start="875:13" pos:end="875:37"><type pos:start="875:13" pos:end="875:21"><name pos:start="875:13" pos:end="875:19">AVCodec</name> <modifier pos:start="875:21" pos:end="875:21">*</modifier></type><name pos:start="875:22" pos:end="875:26">codec</name> <init pos:start="875:28" pos:end="875:37">= <expr pos:start="875:30" pos:end="875:37"><name pos:start="875:30" pos:end="875:37"><name pos:start="875:30" pos:end="875:32">ist</name><operator pos:start="875:33" pos:end="875:34">-&gt;</operator><name pos:start="875:35" pos:end="875:37">dec</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="877:13" pos:end="879:71"><if pos:start="877:13" pos:end="879:71">if <condition pos:start="877:16" pos:end="877:23">(<expr pos:start="877:17" pos:end="877:22"><operator pos:start="877:17" pos:end="877:17">!</operator><name pos:start="877:18" pos:end="877:22">codec</name></expr>)</condition><block type="pseudo" pos:start="879:17" pos:end="879:71"><block_content pos:start="879:17" pos:end="879:71">

                <expr_stmt pos:start="879:17" pos:end="879:71"><expr pos:start="879:17" pos:end="879:70"><name pos:start="879:17" pos:end="879:21">codec</name> <operator pos:start="879:23" pos:end="879:23">=</operator> <call pos:start="879:25" pos:end="879:70"><name pos:start="879:25" pos:end="879:44">avcodec_find_decoder</name><argument_list pos:start="879:45" pos:end="879:70">(<argument pos:start="879:46" pos:end="879:69"><expr pos:start="879:46" pos:end="879:69"><name pos:start="879:46" pos:end="879:69"><name pos:start="879:46" pos:end="879:48">ist</name><operator pos:start="879:49" pos:end="879:50">-&gt;</operator><name pos:start="879:51" pos:end="879:52">st</name><operator pos:start="879:53" pos:end="879:54">-&gt;</operator><name pos:start="879:55" pos:end="879:59">codec</name><operator pos:start="879:60" pos:end="879:61">-&gt;</operator><name pos:start="879:62" pos:end="879:69">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="881:13" pos:end="891:13"><if pos:start="881:13" pos:end="891:13">if <condition pos:start="881:16" pos:end="881:23">(<expr pos:start="881:17" pos:end="881:22"><operator pos:start="881:17" pos:end="881:17">!</operator><name pos:start="881:18" pos:end="881:22">codec</name></expr>)</condition> <block pos:start="881:25" pos:end="891:13">{<block_content pos:start="883:17" pos:end="889:33">

                <expr_stmt pos:start="883:17" pos:end="885:83"><expr pos:start="883:17" pos:end="885:82"><call pos:start="883:17" pos:end="885:82"><name pos:start="883:17" pos:end="883:24">snprintf</name><argument_list pos:start="883:25" pos:end="885:82">(<argument pos:start="883:26" pos:end="883:30"><expr pos:start="883:26" pos:end="883:30"><name pos:start="883:26" pos:end="883:30">error</name></expr></argument>, <argument pos:start="883:33" pos:end="883:45"><expr pos:start="883:33" pos:end="883:45"><sizeof pos:start="883:33" pos:end="883:45">sizeof<argument_list pos:start="883:39" pos:end="883:45">(<argument pos:start="883:40" pos:end="883:44"><expr pos:start="883:40" pos:end="883:44"><name pos:start="883:40" pos:end="883:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="883:48" pos:end="883:104"><expr pos:start="883:48" pos:end="883:104"><literal type="string" pos:start="883:48" pos:end="883:104">"Decoder (codec id %d) not found for input stream #%d.%d"</literal></expr></argument>,

                        <argument pos:start="885:25" pos:end="885:48"><expr pos:start="885:25" pos:end="885:48"><name pos:start="885:25" pos:end="885:48"><name pos:start="885:25" pos:end="885:27">ist</name><operator pos:start="885:28" pos:end="885:29">-&gt;</operator><name pos:start="885:30" pos:end="885:31">st</name><operator pos:start="885:32" pos:end="885:33">-&gt;</operator><name pos:start="885:34" pos:end="885:38">codec</name><operator pos:start="885:39" pos:end="885:40">-&gt;</operator><name pos:start="885:41" pos:end="885:48">codec_id</name></name></expr></argument>, <argument pos:start="885:51" pos:end="885:65"><expr pos:start="885:51" pos:end="885:65"><name pos:start="885:51" pos:end="885:65"><name pos:start="885:51" pos:end="885:53">ist</name><operator pos:start="885:54" pos:end="885:55">-&gt;</operator><name pos:start="885:56" pos:end="885:65">file_index</name></name></expr></argument>, <argument pos:start="885:68" pos:end="885:81"><expr pos:start="885:68" pos:end="885:81"><name pos:start="885:68" pos:end="885:81"><name pos:start="885:68" pos:end="885:70">ist</name><operator pos:start="885:71" pos:end="885:72">-&gt;</operator><name pos:start="885:73" pos:end="885:74">st</name><operator pos:start="885:75" pos:end="885:76">-&gt;</operator><name pos:start="885:77" pos:end="885:81">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="887:17" pos:end="887:38"><expr pos:start="887:17" pos:end="887:37"><name pos:start="887:17" pos:end="887:19">ret</name> <operator pos:start="887:21" pos:end="887:21">=</operator> <call pos:start="887:23" pos:end="887:37"><name pos:start="887:23" pos:end="887:29">AVERROR</name><argument_list pos:start="887:30" pos:end="887:37">(<argument pos:start="887:31" pos:end="887:36"><expr pos:start="887:31" pos:end="887:36"><name pos:start="887:31" pos:end="887:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="889:17" pos:end="889:33">goto <name pos:start="889:22" pos:end="889:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="893:13" pos:end="903:13"><if pos:start="893:13" pos:end="903:13">if <condition pos:start="893:16" pos:end="893:69">(<expr pos:start="893:17" pos:end="893:68"><call pos:start="893:17" pos:end="893:64"><name pos:start="893:17" pos:end="893:29">avcodec_open2</name><argument_list pos:start="893:30" pos:end="893:64">(<argument pos:start="893:31" pos:end="893:44"><expr pos:start="893:31" pos:end="893:44"><name pos:start="893:31" pos:end="893:44"><name pos:start="893:31" pos:end="893:33">ist</name><operator pos:start="893:34" pos:end="893:35">-&gt;</operator><name pos:start="893:36" pos:end="893:37">st</name><operator pos:start="893:38" pos:end="893:39">-&gt;</operator><name pos:start="893:40" pos:end="893:44">codec</name></name></expr></argument>, <argument pos:start="893:47" pos:end="893:51"><expr pos:start="893:47" pos:end="893:51"><name pos:start="893:47" pos:end="893:51">codec</name></expr></argument>, <argument pos:start="893:54" pos:end="893:63"><expr pos:start="893:54" pos:end="893:63"><operator pos:start="893:54" pos:end="893:54">&amp;</operator><name pos:start="893:55" pos:end="893:63"><name pos:start="893:55" pos:end="893:57">ist</name><operator pos:start="893:58" pos:end="893:59">-&gt;</operator><name pos:start="893:60" pos:end="893:63">opts</name></name></expr></argument>)</argument_list></call> <operator pos:start="893:66" pos:end="893:66">&lt;</operator> <literal type="number" pos:start="893:68" pos:end="893:68">0</literal></expr>)</condition> <block pos:start="893:71" pos:end="903:13">{<block_content pos:start="895:17" pos:end="901:33">

                <expr_stmt pos:start="895:17" pos:end="897:57"><expr pos:start="895:17" pos:end="897:56"><call pos:start="895:17" pos:end="897:56"><name pos:start="895:17" pos:end="895:24">snprintf</name><argument_list pos:start="895:25" pos:end="897:56">(<argument pos:start="895:26" pos:end="895:30"><expr pos:start="895:26" pos:end="895:30"><name pos:start="895:26" pos:end="895:30">error</name></expr></argument>, <argument pos:start="895:33" pos:end="895:45"><expr pos:start="895:33" pos:end="895:45"><sizeof pos:start="895:33" pos:end="895:45">sizeof<argument_list pos:start="895:39" pos:end="895:45">(<argument pos:start="895:40" pos:end="895:44"><expr pos:start="895:40" pos:end="895:44"><name pos:start="895:40" pos:end="895:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="895:48" pos:end="895:100"><expr pos:start="895:48" pos:end="895:100"><literal type="string" pos:start="895:48" pos:end="895:100">"Error while opening decoder for input stream #%d.%d"</literal></expr></argument>,

                        <argument pos:start="897:25" pos:end="897:39"><expr pos:start="897:25" pos:end="897:39"><name pos:start="897:25" pos:end="897:39"><name pos:start="897:25" pos:end="897:27">ist</name><operator pos:start="897:28" pos:end="897:29">-&gt;</operator><name pos:start="897:30" pos:end="897:39">file_index</name></name></expr></argument>, <argument pos:start="897:42" pos:end="897:55"><expr pos:start="897:42" pos:end="897:55"><name pos:start="897:42" pos:end="897:55"><name pos:start="897:42" pos:end="897:44">ist</name><operator pos:start="897:45" pos:end="897:46">-&gt;</operator><name pos:start="897:47" pos:end="897:48">st</name><operator pos:start="897:49" pos:end="897:50">-&gt;</operator><name pos:start="897:51" pos:end="897:55">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="899:17" pos:end="899:38"><expr pos:start="899:17" pos:end="899:37"><name pos:start="899:17" pos:end="899:19">ret</name> <operator pos:start="899:21" pos:end="899:21">=</operator> <call pos:start="899:23" pos:end="899:37"><name pos:start="899:23" pos:end="899:29">AVERROR</name><argument_list pos:start="899:30" pos:end="899:37">(<argument pos:start="899:31" pos:end="899:36"><expr pos:start="899:31" pos:end="899:36"><name pos:start="899:31" pos:end="899:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="901:17" pos:end="901:33">goto <name pos:start="901:22" pos:end="901:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="905:13" pos:end="905:57"><expr pos:start="905:13" pos:end="905:56"><call pos:start="905:13" pos:end="905:56"><name pos:start="905:13" pos:end="905:37">assert_codec_experimental</name><argument_list pos:start="905:38" pos:end="905:56">(<argument pos:start="905:39" pos:end="905:52"><expr pos:start="905:39" pos:end="905:52"><name pos:start="905:39" pos:end="905:52"><name pos:start="905:39" pos:end="905:41">ist</name><operator pos:start="905:42" pos:end="905:43">-&gt;</operator><name pos:start="905:44" pos:end="905:45">st</name><operator pos:start="905:46" pos:end="905:47">-&gt;</operator><name pos:start="905:48" pos:end="905:52">codec</name></name></expr></argument>, <argument pos:start="905:55" pos:end="905:55"><expr pos:start="905:55" pos:end="905:55"><literal type="number" pos:start="905:55" pos:end="905:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="907:13" pos:end="907:40"><expr pos:start="907:13" pos:end="907:39"><call pos:start="907:13" pos:end="907:39"><name pos:start="907:13" pos:end="907:28">assert_avoptions</name><argument_list pos:start="907:29" pos:end="907:39">(<argument pos:start="907:30" pos:end="907:38"><expr pos:start="907:30" pos:end="907:38"><name pos:start="907:30" pos:end="907:38"><name pos:start="907:30" pos:end="907:32">ost</name><operator pos:start="907:33" pos:end="907:34">-&gt;</operator><name pos:start="907:35" pos:end="907:38">opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="909:13" pos:end="909:67">//if (ist-&gt;st-&gt;codec-&gt;codec_type == AVMEDIA_TYPE_VIDEO)</comment>

            <comment type="line" pos:start="911:13" pos:end="911:67">//    ist-&gt;st-&gt;codec-&gt;flags |= CODEC_FLAG_REPEAT_FIELD;</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="919:5" pos:end="919:18">/* init pts */</comment>

    <for pos:start="921:5" pos:end="935:5">for <control pos:start="921:9" pos:end="921:42">(<init pos:start="921:10" pos:end="921:15"><expr pos:start="921:10" pos:end="921:14"><name pos:start="921:10" pos:end="921:10">i</name> <operator pos:start="921:12" pos:end="921:12">=</operator> <literal type="number" pos:start="921:14" pos:end="921:14">0</literal></expr>;</init> <condition pos:start="921:17" pos:end="921:37"><expr pos:start="921:17" pos:end="921:36"><name pos:start="921:17" pos:end="921:17">i</name> <operator pos:start="921:19" pos:end="921:19">&lt;</operator> <name pos:start="921:21" pos:end="921:36">nb_input_streams</name></expr>;</condition> <incr pos:start="921:39" pos:end="921:41"><expr pos:start="921:39" pos:end="921:41"><name pos:start="921:39" pos:end="921:39">i</name><operator pos:start="921:40" pos:end="921:41">++</operator></expr></incr>)</control> <block pos:start="921:44" pos:end="935:5">{<block_content pos:start="923:9" pos:end="933:26">

        <decl_stmt pos:start="923:9" pos:end="923:21"><decl pos:start="923:9" pos:end="923:20"><type pos:start="923:9" pos:end="923:18"><name pos:start="923:9" pos:end="923:16">AVStream</name> <modifier pos:start="923:18" pos:end="923:18">*</modifier></type><name pos:start="923:19" pos:end="923:20">st</name></decl>;</decl_stmt>

        <expr_stmt pos:start="925:9" pos:end="925:32"><expr pos:start="925:9" pos:end="925:31"><name pos:start="925:9" pos:end="925:11">ist</name> <operator pos:start="925:13" pos:end="925:13">=</operator> <operator pos:start="925:15" pos:end="925:15">&amp;</operator><name pos:start="925:16" pos:end="925:31"><name pos:start="925:16" pos:end="925:28">input_streams</name><index pos:start="925:29" pos:end="925:31">[<expr pos:start="925:30" pos:end="925:30"><name pos:start="925:30" pos:end="925:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="927:9" pos:end="927:20"><expr pos:start="927:9" pos:end="927:19"><name pos:start="927:9" pos:end="927:10">st</name><operator pos:start="927:11" pos:end="927:11">=</operator> <name pos:start="927:13" pos:end="927:19"><name pos:start="927:13" pos:end="927:15">ist</name><operator pos:start="927:16" pos:end="927:17">-&gt;</operator><name pos:start="927:18" pos:end="927:19">st</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="929:9" pos:end="929:116"><expr pos:start="929:9" pos:end="929:115"><name pos:start="929:9" pos:end="929:16"><name pos:start="929:9" pos:end="929:11">ist</name><operator pos:start="929:12" pos:end="929:13">-&gt;</operator><name pos:start="929:14" pos:end="929:16">pts</name></name> <operator pos:start="929:18" pos:end="929:18">=</operator> <ternary pos:start="929:20" pos:end="929:115"><condition pos:start="929:20" pos:end="929:43"><expr pos:start="929:20" pos:end="929:41"><name pos:start="929:20" pos:end="929:41"><name pos:start="929:20" pos:end="929:21">st</name><operator pos:start="929:22" pos:end="929:23">-&gt;</operator><name pos:start="929:24" pos:end="929:37">avg_frame_rate</name><operator pos:start="929:38" pos:end="929:38">.</operator><name pos:start="929:39" pos:end="929:41">num</name></name></expr> ?</condition><then pos:start="929:45" pos:end="929:111"> <expr pos:start="929:45" pos:end="929:111"><operator pos:start="929:45" pos:end="929:45">-</operator> <name pos:start="929:47" pos:end="929:69"><name pos:start="929:47" pos:end="929:48">st</name><operator pos:start="929:49" pos:end="929:50">-&gt;</operator><name pos:start="929:51" pos:end="929:55">codec</name><operator pos:start="929:56" pos:end="929:57">-&gt;</operator><name pos:start="929:58" pos:end="929:69">has_b_frames</name></name><operator pos:start="929:70" pos:end="929:70">*</operator><name pos:start="929:71" pos:end="929:82">AV_TIME_BASE</name> <operator pos:start="929:84" pos:end="929:84">/</operator> <call pos:start="929:86" pos:end="929:111"><name pos:start="929:86" pos:end="929:91">av_q2d</name><argument_list pos:start="929:92" pos:end="929:111">(<argument pos:start="929:93" pos:end="929:110"><expr pos:start="929:93" pos:end="929:110"><name pos:start="929:93" pos:end="929:110"><name pos:start="929:93" pos:end="929:94">st</name><operator pos:start="929:95" pos:end="929:96">-&gt;</operator><name pos:start="929:97" pos:end="929:110">avg_frame_rate</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="929:113" pos:end="929:115">: <expr pos:start="929:115" pos:end="929:115"><literal type="number" pos:start="929:115" pos:end="929:115">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="931:9" pos:end="931:39"><expr pos:start="931:9" pos:end="931:38"><name pos:start="931:9" pos:end="931:21"><name pos:start="931:9" pos:end="931:11">ist</name><operator pos:start="931:12" pos:end="931:13">-&gt;</operator><name pos:start="931:14" pos:end="931:21">next_pts</name></name> <operator pos:start="931:23" pos:end="931:23">=</operator> <name pos:start="931:25" pos:end="931:38">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="933:9" pos:end="933:26"><expr pos:start="933:9" pos:end="933:25"><name pos:start="933:9" pos:end="933:21"><name pos:start="933:9" pos:end="933:11">ist</name><operator pos:start="933:12" pos:end="933:13">-&gt;</operator><name pos:start="933:14" pos:end="933:21">is_start</name></name> <operator pos:start="933:23" pos:end="933:23">=</operator> <literal type="number" pos:start="933:25" pos:end="933:25">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="939:5" pos:end="939:63">/* set meta data information from input file if required */</comment>

    <for pos:start="941:5" pos:end="1033:5">for <control pos:start="941:9" pos:end="941:37">(<init pos:start="941:10" pos:end="941:13"><expr pos:start="941:10" pos:end="941:12"><name pos:start="941:10" pos:end="941:10">i</name><operator pos:start="941:11" pos:end="941:11">=</operator><literal type="number" pos:start="941:12" pos:end="941:12">0</literal></expr>;</init><condition pos:start="941:14" pos:end="941:33"><expr pos:start="941:14" pos:end="941:32"><name pos:start="941:14" pos:end="941:14">i</name><operator pos:start="941:15" pos:end="941:15">&lt;</operator><name pos:start="941:16" pos:end="941:32">nb_meta_data_maps</name></expr>;</condition><incr pos:start="941:34" pos:end="941:36"><expr pos:start="941:34" pos:end="941:36"><name pos:start="941:34" pos:end="941:34">i</name><operator pos:start="941:35" pos:end="941:36">++</operator></expr></incr>)</control> <block pos:start="941:39" pos:end="1033:5">{<block_content pos:start="943:9" pos:end="1031:64">

        <decl_stmt pos:start="943:9" pos:end="943:34"><decl pos:start="943:9" pos:end="943:33"><type pos:start="943:9" pos:end="943:25"><name pos:start="943:9" pos:end="943:23">AVFormatContext</name> <modifier pos:start="943:25" pos:end="943:25">*</modifier></type><name pos:start="943:26" pos:end="943:33"><name pos:start="943:26" pos:end="943:30">files</name><index pos:start="943:31" pos:end="943:33">[<expr pos:start="943:32" pos:end="943:32"><literal type="number" pos:start="943:32" pos:end="943:32">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="945:9" pos:end="945:34"><decl pos:start="945:9" pos:end="945:33"><type pos:start="945:9" pos:end="945:26"><name pos:start="945:9" pos:end="945:20">AVDictionary</name>    <modifier pos:start="945:25" pos:end="945:25">*</modifier><modifier pos:start="945:26" pos:end="945:26">*</modifier></type><name pos:start="945:27" pos:end="945:33"><name pos:start="945:27" pos:end="945:30">meta</name><index pos:start="945:31" pos:end="945:33">[<expr pos:start="945:32" pos:end="945:32"><literal type="number" pos:start="945:32" pos:end="945:32">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="947:9" pos:end="964:0"><decl pos:start="947:9" pos:end="947:13"><type pos:start="947:9" pos:end="947:11"><name pos:start="947:9" pos:end="947:11">int</name></type> <name pos:start="947:13" pos:end="947:13">j</name></decl>;</decl_stmt>



<cpp:define pos:start="951:1" pos:end="963:9">#<cpp:directive pos:start="951:2" pos:end="951:7">define</cpp:directive> <cpp:macro pos:start="951:9" pos:end="951:51"><name pos:start="951:9" pos:end="951:28">METADATA_CHECK_INDEX</name><parameter_list pos:start="951:29" pos:end="951:51">(<parameter pos:start="951:30" pos:end="951:34"><type pos:start="951:30" pos:end="951:34"><name pos:start="951:30" pos:end="951:34">index</name></type></parameter>, <parameter pos:start="951:37" pos:end="951:44"><type pos:start="951:37" pos:end="951:44"><name pos:start="951:37" pos:end="951:44">nb_elems</name></type></parameter>, <parameter pos:start="951:47" pos:end="951:50"><type pos:start="951:47" pos:end="951:50"><name pos:start="951:47" pos:end="951:50">desc</name></type></parameter>)</parameter_list></cpp:macro>\

        <cpp:value pos:start="953:9" pos:end="963:9">if ((index) &lt; 0 || (index) &gt;= (nb_elems)) {\

            snprintf(error, sizeof(error), "Invalid %s index %d while processing metadata maps\n",\

                     (desc), (index));\

            ret = AVERROR(EINVAL);\

            goto dump_format;\

        }</cpp:value></cpp:define>



        <decl_stmt pos:start="967:9" pos:end="967:55"><decl pos:start="967:9" pos:end="967:54"><type pos:start="967:9" pos:end="967:11"><name pos:start="967:9" pos:end="967:11">int</name></type> <name pos:start="967:13" pos:end="967:26">out_file_index</name> <init pos:start="967:28" pos:end="967:54">= <expr pos:start="967:30" pos:end="967:54"><name pos:start="967:30" pos:end="967:49"><name pos:start="967:30" pos:end="967:43">meta_data_maps</name><index pos:start="967:44" pos:end="967:46">[<expr pos:start="967:45" pos:end="967:45"><name pos:start="967:45" pos:end="967:45">i</name></expr>]</index><index pos:start="967:47" pos:end="967:49">[<expr pos:start="967:48" pos:end="967:48"><literal type="number" pos:start="967:48" pos:end="967:48">0</literal></expr>]</index></name><operator pos:start="967:50" pos:end="967:50">.</operator><name pos:start="967:51" pos:end="967:54">file</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="969:9" pos:end="969:54"><decl pos:start="969:9" pos:end="969:53"><type pos:start="969:9" pos:end="969:11"><name pos:start="969:9" pos:end="969:11">int</name></type> <name pos:start="969:13" pos:end="969:25">in_file_index</name> <init pos:start="969:27" pos:end="969:53">= <expr pos:start="969:29" pos:end="969:53"><name pos:start="969:29" pos:end="969:48"><name pos:start="969:29" pos:end="969:42">meta_data_maps</name><index pos:start="969:43" pos:end="969:45">[<expr pos:start="969:44" pos:end="969:44"><name pos:start="969:44" pos:end="969:44">i</name></expr>]</index><index pos:start="969:46" pos:end="969:48">[<expr pos:start="969:47" pos:end="969:47"><literal type="number" pos:start="969:47" pos:end="969:47">1</literal></expr>]</index></name><operator pos:start="969:49" pos:end="969:49">.</operator><name pos:start="969:50" pos:end="969:53">file</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="971:9" pos:end="973:21"><if pos:start="971:9" pos:end="973:21">if <condition pos:start="971:12" pos:end="971:52">(<expr pos:start="971:13" pos:end="971:51"><name pos:start="971:13" pos:end="971:25">in_file_index</name> <operator pos:start="971:27" pos:end="971:27">&lt;</operator> <literal type="number" pos:start="971:29" pos:end="971:29">0</literal> <operator pos:start="971:31" pos:end="971:32">||</operator> <name pos:start="971:34" pos:end="971:47">out_file_index</name> <operator pos:start="971:49" pos:end="971:49">&lt;</operator> <literal type="number" pos:start="971:51" pos:end="971:51">0</literal></expr>)</condition><block type="pseudo" pos:start="973:13" pos:end="973:21"><block_content pos:start="973:13" pos:end="973:21">

            <continue pos:start="973:13" pos:end="973:21">continue;</continue></block_content></block></if></if_stmt>

        <macro pos:start="975:9" pos:end="975:76"><name pos:start="975:9" pos:end="975:28">METADATA_CHECK_INDEX</name><argument_list pos:start="975:29" pos:end="975:76">(<argument pos:start="975:30" pos:end="975:43">out_file_index</argument>, <argument pos:start="975:46" pos:end="975:60">nb_output_files</argument>, <argument pos:start="975:63" pos:end="975:75"><literal type="string" pos:start="975:63" pos:end="975:75">"output file"</literal></argument>)</argument_list></macro>

        <macro pos:start="977:9" pos:end="977:73"><name pos:start="977:9" pos:end="977:28">METADATA_CHECK_INDEX</name><argument_list pos:start="977:29" pos:end="977:73">(<argument pos:start="977:30" pos:end="977:42">in_file_index</argument>, <argument pos:start="977:45" pos:end="977:58">nb_input_files</argument>, <argument pos:start="977:61" pos:end="977:72"><literal type="string" pos:start="977:61" pos:end="977:72">"input file"</literal></argument>)</argument_list></macro>



        <expr_stmt pos:start="981:9" pos:end="981:48"><expr pos:start="981:9" pos:end="981:47"><name pos:start="981:9" pos:end="981:16"><name pos:start="981:9" pos:end="981:13">files</name><index pos:start="981:14" pos:end="981:16">[<expr pos:start="981:15" pos:end="981:15"><literal type="number" pos:start="981:15" pos:end="981:15">0</literal></expr>]</index></name> <operator pos:start="981:18" pos:end="981:18">=</operator> <name pos:start="981:20" pos:end="981:47"><name pos:start="981:20" pos:end="981:31">output_files</name><index pos:start="981:32" pos:end="981:47">[<expr pos:start="981:33" pos:end="981:46"><name pos:start="981:33" pos:end="981:46">out_file_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="983:9" pos:end="983:50"><expr pos:start="983:9" pos:end="983:49"><name pos:start="983:9" pos:end="983:16"><name pos:start="983:9" pos:end="983:13">files</name><index pos:start="983:14" pos:end="983:16">[<expr pos:start="983:15" pos:end="983:15"><literal type="number" pos:start="983:15" pos:end="983:15">1</literal></expr>]</index></name> <operator pos:start="983:18" pos:end="983:18">=</operator> <name pos:start="983:20" pos:end="983:45"><name pos:start="983:20" pos:end="983:30">input_files</name><index pos:start="983:31" pos:end="983:45">[<expr pos:start="983:32" pos:end="983:44"><name pos:start="983:32" pos:end="983:44">in_file_index</name></expr>]</index></name><operator pos:start="983:46" pos:end="983:46">.</operator><name pos:start="983:47" pos:end="983:49">ctx</name></expr>;</expr_stmt>



        <for pos:start="987:9" pos:end="1027:9">for <control pos:start="987:13" pos:end="987:31">(<init pos:start="987:14" pos:end="987:19"><expr pos:start="987:14" pos:end="987:18"><name pos:start="987:14" pos:end="987:14">j</name> <operator pos:start="987:16" pos:end="987:16">=</operator> <literal type="number" pos:start="987:18" pos:end="987:18">0</literal></expr>;</init> <condition pos:start="987:21" pos:end="987:26"><expr pos:start="987:21" pos:end="987:25"><name pos:start="987:21" pos:end="987:21">j</name> <operator pos:start="987:23" pos:end="987:23">&lt;</operator> <literal type="number" pos:start="987:25" pos:end="987:25">2</literal></expr>;</condition> <incr pos:start="987:28" pos:end="987:30"><expr pos:start="987:28" pos:end="987:30"><name pos:start="987:28" pos:end="987:28">j</name><operator pos:start="987:29" pos:end="987:30">++</operator></expr></incr>)</control> <block pos:start="987:33" pos:end="1027:9">{<block_content pos:start="989:13" pos:end="1025:13">

            <decl_stmt pos:start="989:13" pos:end="989:53"><decl pos:start="989:13" pos:end="989:52"><type pos:start="989:13" pos:end="989:25"><name pos:start="989:13" pos:end="989:23">MetadataMap</name> <modifier pos:start="989:25" pos:end="989:25">*</modifier></type><name pos:start="989:26" pos:end="989:28">map</name> <init pos:start="989:30" pos:end="989:52">= <expr pos:start="989:32" pos:end="989:52"><operator pos:start="989:32" pos:end="989:32">&amp;</operator><name pos:start="989:33" pos:end="989:52"><name pos:start="989:33" pos:end="989:46">meta_data_maps</name><index pos:start="989:47" pos:end="989:49">[<expr pos:start="989:48" pos:end="989:48"><name pos:start="989:48" pos:end="989:48">i</name></expr>]</index><index pos:start="989:50" pos:end="989:52">[<expr pos:start="989:51" pos:end="989:51"><name pos:start="989:51" pos:end="989:51">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <switch pos:start="993:13" pos:end="1025:13">switch <condition pos:start="993:20" pos:end="993:30">(<expr pos:start="993:21" pos:end="993:29"><name pos:start="993:21" pos:end="993:29"><name pos:start="993:21" pos:end="993:23">map</name><operator pos:start="993:24" pos:end="993:25">-&gt;</operator><name pos:start="993:26" pos:end="993:29">type</name></name></expr>)</condition> <block pos:start="993:32" pos:end="1025:13">{<block_content pos:start="995:13" pos:end="1023:22">

            <case pos:start="995:13" pos:end="995:21">case <expr pos:start="995:18" pos:end="995:20"><literal type="char" pos:start="995:18" pos:end="995:20">'g'</literal></expr>:</case>

                <expr_stmt pos:start="997:17" pos:end="997:46"><expr pos:start="997:17" pos:end="997:45"><name pos:start="997:17" pos:end="997:23"><name pos:start="997:17" pos:end="997:20">meta</name><index pos:start="997:21" pos:end="997:23">[<expr pos:start="997:22" pos:end="997:22"><name pos:start="997:22" pos:end="997:22">j</name></expr>]</index></name> <operator pos:start="997:25" pos:end="997:25">=</operator> <operator pos:start="997:27" pos:end="997:27">&amp;</operator><name pos:start="997:28" pos:end="997:35"><name pos:start="997:28" pos:end="997:32">files</name><index pos:start="997:33" pos:end="997:35">[<expr pos:start="997:34" pos:end="997:34"><name pos:start="997:34" pos:end="997:34">j</name></expr>]</index></name><operator pos:start="997:36" pos:end="997:37">-&gt;</operator><name pos:start="997:38" pos:end="997:45">metadata</name></expr>;</expr_stmt>

                <break pos:start="999:17" pos:end="999:22">break;</break>

            <case pos:start="1001:13" pos:end="1001:21">case <expr pos:start="1001:18" pos:end="1001:20"><literal type="char" pos:start="1001:18" pos:end="1001:20">'s'</literal></expr>:</case>

                <macro pos:start="1003:17" pos:end="1003:80"><name pos:start="1003:17" pos:end="1003:36">METADATA_CHECK_INDEX</name><argument_list pos:start="1003:37" pos:end="1003:80">(<argument pos:start="1003:38" pos:end="1003:47">map-&gt;index</argument>, <argument pos:start="1003:50" pos:end="1003:69">files[j]-&gt;nb_streams</argument>, <argument pos:start="1003:72" pos:end="1003:79"><literal type="string" pos:start="1003:72" pos:end="1003:79">"stream"</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="1005:17" pos:end="1005:67"><expr pos:start="1005:17" pos:end="1005:66"><name pos:start="1005:17" pos:end="1005:23"><name pos:start="1005:17" pos:end="1005:20">meta</name><index pos:start="1005:21" pos:end="1005:23">[<expr pos:start="1005:22" pos:end="1005:22"><name pos:start="1005:22" pos:end="1005:22">j</name></expr>]</index></name> <operator pos:start="1005:25" pos:end="1005:25">=</operator> <operator pos:start="1005:27" pos:end="1005:27">&amp;</operator><name pos:start="1005:28" pos:end="1005:35"><name pos:start="1005:28" pos:end="1005:32">files</name><index pos:start="1005:33" pos:end="1005:35">[<expr pos:start="1005:34" pos:end="1005:34"><name pos:start="1005:34" pos:end="1005:34">j</name></expr>]</index></name><operator pos:start="1005:36" pos:end="1005:37">-&gt;</operator><name pos:start="1005:38" pos:end="1005:56"><name pos:start="1005:38" pos:end="1005:44">streams</name><index pos:start="1005:45" pos:end="1005:56">[<expr pos:start="1005:46" pos:end="1005:55"><name pos:start="1005:46" pos:end="1005:55"><name pos:start="1005:46" pos:end="1005:48">map</name><operator pos:start="1005:49" pos:end="1005:50">-&gt;</operator><name pos:start="1005:51" pos:end="1005:55">index</name></name></expr>]</index></name><operator pos:start="1005:57" pos:end="1005:58">-&gt;</operator><name pos:start="1005:59" pos:end="1005:66">metadata</name></expr>;</expr_stmt>

                <break pos:start="1007:17" pos:end="1007:22">break;</break>

            <case pos:start="1009:13" pos:end="1009:21">case <expr pos:start="1009:18" pos:end="1009:20"><literal type="char" pos:start="1009:18" pos:end="1009:20">'c'</literal></expr>:</case>

                <macro pos:start="1011:17" pos:end="1011:82"><name pos:start="1011:17" pos:end="1011:36">METADATA_CHECK_INDEX</name><argument_list pos:start="1011:37" pos:end="1011:82">(<argument pos:start="1011:38" pos:end="1011:47">map-&gt;index</argument>, <argument pos:start="1011:50" pos:end="1011:70">files[j]-&gt;nb_chapters</argument>, <argument pos:start="1011:73" pos:end="1011:81"><literal type="string" pos:start="1011:73" pos:end="1011:81">"chapter"</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="1013:17" pos:end="1013:68"><expr pos:start="1013:17" pos:end="1013:67"><name pos:start="1013:17" pos:end="1013:23"><name pos:start="1013:17" pos:end="1013:20">meta</name><index pos:start="1013:21" pos:end="1013:23">[<expr pos:start="1013:22" pos:end="1013:22"><name pos:start="1013:22" pos:end="1013:22">j</name></expr>]</index></name> <operator pos:start="1013:25" pos:end="1013:25">=</operator> <operator pos:start="1013:27" pos:end="1013:27">&amp;</operator><name pos:start="1013:28" pos:end="1013:35"><name pos:start="1013:28" pos:end="1013:32">files</name><index pos:start="1013:33" pos:end="1013:35">[<expr pos:start="1013:34" pos:end="1013:34"><name pos:start="1013:34" pos:end="1013:34">j</name></expr>]</index></name><operator pos:start="1013:36" pos:end="1013:37">-&gt;</operator><name pos:start="1013:38" pos:end="1013:57"><name pos:start="1013:38" pos:end="1013:45">chapters</name><index pos:start="1013:46" pos:end="1013:57">[<expr pos:start="1013:47" pos:end="1013:56"><name pos:start="1013:47" pos:end="1013:56"><name pos:start="1013:47" pos:end="1013:49">map</name><operator pos:start="1013:50" pos:end="1013:51">-&gt;</operator><name pos:start="1013:52" pos:end="1013:56">index</name></name></expr>]</index></name><operator pos:start="1013:58" pos:end="1013:59">-&gt;</operator><name pos:start="1013:60" pos:end="1013:67">metadata</name></expr>;</expr_stmt>

                <break pos:start="1015:17" pos:end="1015:22">break;</break>

            <case pos:start="1017:13" pos:end="1017:21">case <expr pos:start="1017:18" pos:end="1017:20"><literal type="char" pos:start="1017:18" pos:end="1017:20">'p'</literal></expr>:</case>

                <macro pos:start="1019:17" pos:end="1019:82"><name pos:start="1019:17" pos:end="1019:36">METADATA_CHECK_INDEX</name><argument_list pos:start="1019:37" pos:end="1019:82">(<argument pos:start="1019:38" pos:end="1019:47">map-&gt;index</argument>, <argument pos:start="1019:50" pos:end="1019:70">files[j]-&gt;nb_programs</argument>, <argument pos:start="1019:73" pos:end="1019:81"><literal type="string" pos:start="1019:73" pos:end="1019:81">"program"</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="1021:17" pos:end="1021:68"><expr pos:start="1021:17" pos:end="1021:67"><name pos:start="1021:17" pos:end="1021:23"><name pos:start="1021:17" pos:end="1021:20">meta</name><index pos:start="1021:21" pos:end="1021:23">[<expr pos:start="1021:22" pos:end="1021:22"><name pos:start="1021:22" pos:end="1021:22">j</name></expr>]</index></name> <operator pos:start="1021:25" pos:end="1021:25">=</operator> <operator pos:start="1021:27" pos:end="1021:27">&amp;</operator><name pos:start="1021:28" pos:end="1021:35"><name pos:start="1021:28" pos:end="1021:32">files</name><index pos:start="1021:33" pos:end="1021:35">[<expr pos:start="1021:34" pos:end="1021:34"><name pos:start="1021:34" pos:end="1021:34">j</name></expr>]</index></name><operator pos:start="1021:36" pos:end="1021:37">-&gt;</operator><name pos:start="1021:38" pos:end="1021:57"><name pos:start="1021:38" pos:end="1021:45">programs</name><index pos:start="1021:46" pos:end="1021:57">[<expr pos:start="1021:47" pos:end="1021:56"><name pos:start="1021:47" pos:end="1021:56"><name pos:start="1021:47" pos:end="1021:49">map</name><operator pos:start="1021:50" pos:end="1021:51">-&gt;</operator><name pos:start="1021:52" pos:end="1021:56">index</name></name></expr>]</index></name><operator pos:start="1021:58" pos:end="1021:59">-&gt;</operator><name pos:start="1021:60" pos:end="1021:67">metadata</name></expr>;</expr_stmt>

                <break pos:start="1023:17" pos:end="1023:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></for>



        <expr_stmt pos:start="1031:9" pos:end="1031:64"><expr pos:start="1031:9" pos:end="1031:63"><call pos:start="1031:9" pos:end="1031:63"><name pos:start="1031:9" pos:end="1031:20">av_dict_copy</name><argument_list pos:start="1031:21" pos:end="1031:63">(<argument pos:start="1031:22" pos:end="1031:28"><expr pos:start="1031:22" pos:end="1031:28"><name pos:start="1031:22" pos:end="1031:28"><name pos:start="1031:22" pos:end="1031:25">meta</name><index pos:start="1031:26" pos:end="1031:28">[<expr pos:start="1031:27" pos:end="1031:27"><literal type="number" pos:start="1031:27" pos:end="1031:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1031:31" pos:end="1031:38"><expr pos:start="1031:31" pos:end="1031:38"><operator pos:start="1031:31" pos:end="1031:31">*</operator><name pos:start="1031:32" pos:end="1031:38"><name pos:start="1031:32" pos:end="1031:35">meta</name><index pos:start="1031:36" pos:end="1031:38">[<expr pos:start="1031:37" pos:end="1031:37"><literal type="number" pos:start="1031:37" pos:end="1031:37">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="1031:41" pos:end="1031:62"><expr pos:start="1031:41" pos:end="1031:62"><name pos:start="1031:41" pos:end="1031:62">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1037:5" pos:end="1037:41">/* copy global metadata by default */</comment>

    <if_stmt pos:start="1039:5" pos:end="1049:5"><if pos:start="1039:5" pos:end="1049:5">if <condition pos:start="1039:8" pos:end="1039:33">(<expr pos:start="1039:9" pos:end="1039:32"><name pos:start="1039:9" pos:end="1039:32">metadata_global_autocopy</name></expr>)</condition> <block pos:start="1039:35" pos:end="1049:5">{<block_content pos:start="1043:9" pos:end="1047:49">



        <for pos:start="1043:9" pos:end="1047:49">for <control pos:start="1043:13" pos:end="1043:45">(<init pos:start="1043:14" pos:end="1043:19"><expr pos:start="1043:14" pos:end="1043:18"><name pos:start="1043:14" pos:end="1043:14">i</name> <operator pos:start="1043:16" pos:end="1043:16">=</operator> <literal type="number" pos:start="1043:18" pos:end="1043:18">0</literal></expr>;</init> <condition pos:start="1043:21" pos:end="1043:40"><expr pos:start="1043:21" pos:end="1043:39"><name pos:start="1043:21" pos:end="1043:21">i</name> <operator pos:start="1043:23" pos:end="1043:23">&lt;</operator> <name pos:start="1043:25" pos:end="1043:39">nb_output_files</name></expr>;</condition> <incr pos:start="1043:42" pos:end="1043:44"><expr pos:start="1043:42" pos:end="1043:44"><name pos:start="1043:42" pos:end="1043:42">i</name><operator pos:start="1043:43" pos:end="1043:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1045:13" pos:end="1047:49"><block_content pos:start="1045:13" pos:end="1047:49">

            <expr_stmt pos:start="1045:13" pos:end="1047:49"><expr pos:start="1045:13" pos:end="1047:48"><call pos:start="1045:13" pos:end="1047:48"><name pos:start="1045:13" pos:end="1045:24">av_dict_copy</name><argument_list pos:start="1045:25" pos:end="1047:48">(<argument pos:start="1045:26" pos:end="1045:51"><expr pos:start="1045:26" pos:end="1045:51"><operator pos:start="1045:26" pos:end="1045:26">&amp;</operator><name pos:start="1045:27" pos:end="1045:41"><name pos:start="1045:27" pos:end="1045:38">output_files</name><index pos:start="1045:39" pos:end="1045:41">[<expr pos:start="1045:40" pos:end="1045:40"><name pos:start="1045:40" pos:end="1045:40">i</name></expr>]</index></name><operator pos:start="1045:42" pos:end="1045:43">-&gt;</operator><name pos:start="1045:44" pos:end="1045:51">metadata</name></expr></argument>, <argument pos:start="1045:54" pos:end="1045:81"><expr pos:start="1045:54" pos:end="1045:81"><name pos:start="1045:54" pos:end="1045:67"><name pos:start="1045:54" pos:end="1045:64">input_files</name><index pos:start="1045:65" pos:end="1045:67">[<expr pos:start="1045:66" pos:end="1045:66"><literal type="number" pos:start="1045:66" pos:end="1045:66">0</literal></expr>]</index></name><operator pos:start="1045:68" pos:end="1045:68">.</operator><name pos:start="1045:69" pos:end="1045:81"><name pos:start="1045:69" pos:end="1045:71">ctx</name><operator pos:start="1045:72" pos:end="1045:73">-&gt;</operator><name pos:start="1045:74" pos:end="1045:81">metadata</name></name></expr></argument>,

                         <argument pos:start="1047:26" pos:end="1047:47"><expr pos:start="1047:26" pos:end="1047:47"><name pos:start="1047:26" pos:end="1047:47">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="1053:5" pos:end="1053:49">/* copy chapters according to chapter maps */</comment>

    <for pos:start="1055:5" pos:end="1089:5">for <control pos:start="1055:9" pos:end="1055:41">(<init pos:start="1055:10" pos:end="1055:15"><expr pos:start="1055:10" pos:end="1055:14"><name pos:start="1055:10" pos:end="1055:10">i</name> <operator pos:start="1055:12" pos:end="1055:12">=</operator> <literal type="number" pos:start="1055:14" pos:end="1055:14">0</literal></expr>;</init> <condition pos:start="1055:17" pos:end="1055:36"><expr pos:start="1055:17" pos:end="1055:35"><name pos:start="1055:17" pos:end="1055:17">i</name> <operator pos:start="1055:19" pos:end="1055:19">&lt;</operator> <name pos:start="1055:21" pos:end="1055:35">nb_chapter_maps</name></expr>;</condition> <incr pos:start="1055:38" pos:end="1055:40"><expr pos:start="1055:38" pos:end="1055:40"><name pos:start="1055:38" pos:end="1055:38">i</name><operator pos:start="1055:39" pos:end="1055:40">++</operator></expr></incr>)</control> <block pos:start="1055:43" pos:end="1089:5">{<block_content pos:start="1057:9" pos:end="1087:39">

        <decl_stmt pos:start="1057:9" pos:end="1057:46"><decl pos:start="1057:9" pos:end="1057:45"><type pos:start="1057:9" pos:end="1057:11"><name pos:start="1057:9" pos:end="1057:11">int</name></type> <name pos:start="1057:13" pos:end="1057:18">infile</name>  <init pos:start="1057:21" pos:end="1057:45">= <expr pos:start="1057:23" pos:end="1057:45"><name pos:start="1057:23" pos:end="1057:37"><name pos:start="1057:23" pos:end="1057:34">chapter_maps</name><index pos:start="1057:35" pos:end="1057:37">[<expr pos:start="1057:36" pos:end="1057:36"><name pos:start="1057:36" pos:end="1057:36">i</name></expr>]</index></name><operator pos:start="1057:38" pos:end="1057:38">.</operator><name pos:start="1057:39" pos:end="1057:45">in_file</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="1059:9" pos:end="1059:47"><decl pos:start="1059:9" pos:end="1059:46"><type pos:start="1059:9" pos:end="1059:11"><name pos:start="1059:9" pos:end="1059:11">int</name></type> <name pos:start="1059:13" pos:end="1059:19">outfile</name> <init pos:start="1059:21" pos:end="1059:46">= <expr pos:start="1059:23" pos:end="1059:46"><name pos:start="1059:23" pos:end="1059:37"><name pos:start="1059:23" pos:end="1059:34">chapter_maps</name><index pos:start="1059:35" pos:end="1059:37">[<expr pos:start="1059:36" pos:end="1059:36"><name pos:start="1059:36" pos:end="1059:36">i</name></expr>]</index></name><operator pos:start="1059:38" pos:end="1059:38">.</operator><name pos:start="1059:39" pos:end="1059:46">out_file</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="1063:9" pos:end="1065:21"><if pos:start="1063:9" pos:end="1065:21">if <condition pos:start="1063:12" pos:end="1063:38">(<expr pos:start="1063:13" pos:end="1063:37"><name pos:start="1063:13" pos:end="1063:18">infile</name> <operator pos:start="1063:20" pos:end="1063:20">&lt;</operator> <literal type="number" pos:start="1063:22" pos:end="1063:22">0</literal> <operator pos:start="1063:24" pos:end="1063:25">||</operator> <name pos:start="1063:27" pos:end="1063:33">outfile</name> <operator pos:start="1063:35" pos:end="1063:35">&lt;</operator> <literal type="number" pos:start="1063:37" pos:end="1063:37">0</literal></expr>)</condition><block type="pseudo" pos:start="1065:13" pos:end="1065:21"><block_content pos:start="1065:13" pos:end="1065:21">

            <continue pos:start="1065:13" pos:end="1065:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="1067:9" pos:end="1075:9"><if pos:start="1067:9" pos:end="1075:9">if <condition pos:start="1067:12" pos:end="1067:37">(<expr pos:start="1067:13" pos:end="1067:36"><name pos:start="1067:13" pos:end="1067:18">infile</name> <operator pos:start="1067:20" pos:end="1067:21">&gt;=</operator> <name pos:start="1067:23" pos:end="1067:36">nb_input_files</name></expr>)</condition> <block pos:start="1067:39" pos:end="1075:9">{<block_content pos:start="1069:13" pos:end="1073:29">

            <expr_stmt pos:start="1069:13" pos:end="1069:104"><expr pos:start="1069:13" pos:end="1069:103"><call pos:start="1069:13" pos:end="1069:103"><name pos:start="1069:13" pos:end="1069:20">snprintf</name><argument_list pos:start="1069:21" pos:end="1069:103">(<argument pos:start="1069:22" pos:end="1069:26"><expr pos:start="1069:22" pos:end="1069:26"><name pos:start="1069:22" pos:end="1069:26">error</name></expr></argument>, <argument pos:start="1069:29" pos:end="1069:41"><expr pos:start="1069:29" pos:end="1069:41"><sizeof pos:start="1069:29" pos:end="1069:41">sizeof<argument_list pos:start="1069:35" pos:end="1069:41">(<argument pos:start="1069:36" pos:end="1069:40"><expr pos:start="1069:36" pos:end="1069:40"><name pos:start="1069:36" pos:end="1069:40">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1069:44" pos:end="1069:94"><expr pos:start="1069:44" pos:end="1069:94"><literal type="string" pos:start="1069:44" pos:end="1069:94">"Invalid input file index %d in chapter mapping.\n"</literal></expr></argument>, <argument pos:start="1069:97" pos:end="1069:102"><expr pos:start="1069:97" pos:end="1069:102"><name pos:start="1069:97" pos:end="1069:102">infile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1071:13" pos:end="1071:34"><expr pos:start="1071:13" pos:end="1071:33"><name pos:start="1071:13" pos:end="1071:15">ret</name> <operator pos:start="1071:17" pos:end="1071:17">=</operator> <call pos:start="1071:19" pos:end="1071:33"><name pos:start="1071:19" pos:end="1071:25">AVERROR</name><argument_list pos:start="1071:26" pos:end="1071:33">(<argument pos:start="1071:27" pos:end="1071:32"><expr pos:start="1071:27" pos:end="1071:32"><name pos:start="1071:27" pos:end="1071:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1073:13" pos:end="1073:29">goto <name pos:start="1073:18" pos:end="1073:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="1077:9" pos:end="1085:9"><if pos:start="1077:9" pos:end="1085:9">if <condition pos:start="1077:12" pos:end="1077:39">(<expr pos:start="1077:13" pos:end="1077:38"><name pos:start="1077:13" pos:end="1077:19">outfile</name> <operator pos:start="1077:21" pos:end="1077:22">&gt;=</operator> <name pos:start="1077:24" pos:end="1077:38">nb_output_files</name></expr>)</condition> <block pos:start="1077:41" pos:end="1085:9">{<block_content pos:start="1079:13" pos:end="1083:29">

            <expr_stmt pos:start="1079:13" pos:end="1079:105"><expr pos:start="1079:13" pos:end="1079:104"><call pos:start="1079:13" pos:end="1079:104"><name pos:start="1079:13" pos:end="1079:20">snprintf</name><argument_list pos:start="1079:21" pos:end="1079:104">(<argument pos:start="1079:22" pos:end="1079:26"><expr pos:start="1079:22" pos:end="1079:26"><name pos:start="1079:22" pos:end="1079:26">error</name></expr></argument>, <argument pos:start="1079:29" pos:end="1079:41"><expr pos:start="1079:29" pos:end="1079:41"><sizeof pos:start="1079:29" pos:end="1079:41">sizeof<argument_list pos:start="1079:35" pos:end="1079:41">(<argument pos:start="1079:36" pos:end="1079:40"><expr pos:start="1079:36" pos:end="1079:40"><name pos:start="1079:36" pos:end="1079:40">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1079:44" pos:end="1079:95"><expr pos:start="1079:44" pos:end="1079:95"><literal type="string" pos:start="1079:44" pos:end="1079:95">"Invalid output file index %d in chapter mapping.\n"</literal></expr></argument>,<argument pos:start="1079:97" pos:end="1079:103"><expr pos:start="1079:97" pos:end="1079:103"><name pos:start="1079:97" pos:end="1079:103">outfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1081:13" pos:end="1081:34"><expr pos:start="1081:13" pos:end="1081:33"><name pos:start="1081:13" pos:end="1081:15">ret</name> <operator pos:start="1081:17" pos:end="1081:17">=</operator> <call pos:start="1081:19" pos:end="1081:33"><name pos:start="1081:19" pos:end="1081:25">AVERROR</name><argument_list pos:start="1081:26" pos:end="1081:33">(<argument pos:start="1081:27" pos:end="1081:32"><expr pos:start="1081:27" pos:end="1081:32"><name pos:start="1081:27" pos:end="1081:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1083:13" pos:end="1083:29">goto <name pos:start="1083:18" pos:end="1083:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1087:9" pos:end="1087:39"><expr pos:start="1087:9" pos:end="1087:38"><call pos:start="1087:9" pos:end="1087:38"><name pos:start="1087:9" pos:end="1087:21">copy_chapters</name><argument_list pos:start="1087:22" pos:end="1087:38">(<argument pos:start="1087:23" pos:end="1087:28"><expr pos:start="1087:23" pos:end="1087:28"><name pos:start="1087:23" pos:end="1087:28">infile</name></expr></argument>, <argument pos:start="1087:31" pos:end="1087:37"><expr pos:start="1087:31" pos:end="1087:37"><name pos:start="1087:31" pos:end="1087:37">outfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1093:5" pos:end="1093:62">/* copy chapters from the first input file that has them*/</comment>

    <if_stmt pos:start="1095:5" pos:end="1113:9"><if pos:start="1095:5" pos:end="1113:9">if <condition pos:start="1095:8" pos:end="1095:25">(<expr pos:start="1095:9" pos:end="1095:24"><operator pos:start="1095:9" pos:end="1095:9">!</operator><name pos:start="1095:10" pos:end="1095:24">nb_chapter_maps</name></expr>)</condition><block type="pseudo" pos:start="1097:9" pos:end="1113:9"><block_content pos:start="1097:9" pos:end="1113:9">

        <for pos:start="1097:9" pos:end="1113:9">for <control pos:start="1097:13" pos:end="1097:44">(<init pos:start="1097:14" pos:end="1097:19"><expr pos:start="1097:14" pos:end="1097:18"><name pos:start="1097:14" pos:end="1097:14">i</name> <operator pos:start="1097:16" pos:end="1097:16">=</operator> <literal type="number" pos:start="1097:18" pos:end="1097:18">0</literal></expr>;</init> <condition pos:start="1097:21" pos:end="1097:39"><expr pos:start="1097:21" pos:end="1097:38"><name pos:start="1097:21" pos:end="1097:21">i</name> <operator pos:start="1097:23" pos:end="1097:23">&lt;</operator> <name pos:start="1097:25" pos:end="1097:38">nb_input_files</name></expr>;</condition> <incr pos:start="1097:41" pos:end="1097:43"><expr pos:start="1097:41" pos:end="1097:43"><name pos:start="1097:41" pos:end="1097:41">i</name><operator pos:start="1097:42" pos:end="1097:43">++</operator></expr></incr>)</control> <block pos:start="1097:46" pos:end="1113:9">{<block_content pos:start="1099:13" pos:end="1111:18">

            <if_stmt pos:start="1099:13" pos:end="1101:25"><if pos:start="1099:13" pos:end="1101:25">if <condition pos:start="1099:16" pos:end="1099:49">(<expr pos:start="1099:17" pos:end="1099:48"><operator pos:start="1099:17" pos:end="1099:17">!</operator><name pos:start="1099:18" pos:end="1099:31"><name pos:start="1099:18" pos:end="1099:28">input_files</name><index pos:start="1099:29" pos:end="1099:31">[<expr pos:start="1099:30" pos:end="1099:30"><name pos:start="1099:30" pos:end="1099:30">i</name></expr>]</index></name><operator pos:start="1099:32" pos:end="1099:32">.</operator><name pos:start="1099:33" pos:end="1099:48"><name pos:start="1099:33" pos:end="1099:35">ctx</name><operator pos:start="1099:36" pos:end="1099:37">-&gt;</operator><name pos:start="1099:38" pos:end="1099:48">nb_chapters</name></name></expr>)</condition><block type="pseudo" pos:start="1101:17" pos:end="1101:25"><block_content pos:start="1101:17" pos:end="1101:25">

                <continue pos:start="1101:17" pos:end="1101:25">continue;</continue></block_content></block></if></if_stmt>



            <for pos:start="1105:13" pos:end="1109:37">for <control pos:start="1105:17" pos:end="1105:49">(<init pos:start="1105:18" pos:end="1105:23"><expr pos:start="1105:18" pos:end="1105:22"><name pos:start="1105:18" pos:end="1105:18">j</name> <operator pos:start="1105:20" pos:end="1105:20">=</operator> <literal type="number" pos:start="1105:22" pos:end="1105:22">0</literal></expr>;</init> <condition pos:start="1105:25" pos:end="1105:44"><expr pos:start="1105:25" pos:end="1105:43"><name pos:start="1105:25" pos:end="1105:25">j</name> <operator pos:start="1105:27" pos:end="1105:27">&lt;</operator> <name pos:start="1105:29" pos:end="1105:43">nb_output_files</name></expr>;</condition> <incr pos:start="1105:46" pos:end="1105:48"><expr pos:start="1105:46" pos:end="1105:48"><name pos:start="1105:46" pos:end="1105:46">j</name><operator pos:start="1105:47" pos:end="1105:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1107:17" pos:end="1109:37"><block_content pos:start="1107:17" pos:end="1109:37">

                <if_stmt pos:start="1107:17" pos:end="1109:37"><if pos:start="1107:17" pos:end="1109:37">if <condition pos:start="1107:20" pos:end="1107:52">(<expr pos:start="1107:21" pos:end="1107:51"><operator pos:start="1107:21" pos:end="1107:21">(</operator><name pos:start="1107:22" pos:end="1107:24">ret</name> <operator pos:start="1107:26" pos:end="1107:26">=</operator> <call pos:start="1107:28" pos:end="1107:46"><name pos:start="1107:28" pos:end="1107:40">copy_chapters</name><argument_list pos:start="1107:41" pos:end="1107:46">(<argument pos:start="1107:42" pos:end="1107:42"><expr pos:start="1107:42" pos:end="1107:42"><name pos:start="1107:42" pos:end="1107:42">i</name></expr></argument>, <argument pos:start="1107:45" pos:end="1107:45"><expr pos:start="1107:45" pos:end="1107:45"><name pos:start="1107:45" pos:end="1107:45">j</name></expr></argument>)</argument_list></call><operator pos:start="1107:47" pos:end="1107:47">)</operator> <operator pos:start="1107:49" pos:end="1107:49">&lt;</operator> <literal type="number" pos:start="1107:51" pos:end="1107:51">0</literal></expr>)</condition><block type="pseudo" pos:start="1109:21" pos:end="1109:37"><block_content pos:start="1109:21" pos:end="1109:37">

                    <goto pos:start="1109:21" pos:end="1109:37">goto <name pos:start="1109:26" pos:end="1109:36">dump_format</name>;</goto></block_content></block></if></if_stmt></block_content></block></for>

            <break pos:start="1111:13" pos:end="1111:18">break;</break>

        </block_content>}</block></for></block_content></block></if></if_stmt>



    <comment type="block" pos:start="1117:5" pos:end="1117:43">/* open files and write file headers */</comment>

    <for pos:start="1119:5" pos:end="1141:5">for<control pos:start="1119:8" pos:end="1119:34">(<init pos:start="1119:9" pos:end="1119:12"><expr pos:start="1119:9" pos:end="1119:11"><name pos:start="1119:9" pos:end="1119:9">i</name><operator pos:start="1119:10" pos:end="1119:10">=</operator><literal type="number" pos:start="1119:11" pos:end="1119:11">0</literal></expr>;</init><condition pos:start="1119:13" pos:end="1119:30"><expr pos:start="1119:13" pos:end="1119:29"><name pos:start="1119:13" pos:end="1119:13">i</name><operator pos:start="1119:14" pos:end="1119:14">&lt;</operator><name pos:start="1119:15" pos:end="1119:29">nb_output_files</name></expr>;</condition><incr pos:start="1119:31" pos:end="1119:33"><expr pos:start="1119:31" pos:end="1119:33"><name pos:start="1119:31" pos:end="1119:31">i</name><operator pos:start="1119:32" pos:end="1119:33">++</operator></expr></incr>)</control> <block pos:start="1119:36" pos:end="1141:5">{<block_content pos:start="1121:9" pos:end="1139:9">

        <expr_stmt pos:start="1121:9" pos:end="1121:29"><expr pos:start="1121:9" pos:end="1121:28"><name pos:start="1121:9" pos:end="1121:10">os</name> <operator pos:start="1121:12" pos:end="1121:12">=</operator> <name pos:start="1121:14" pos:end="1121:28"><name pos:start="1121:14" pos:end="1121:25">output_files</name><index pos:start="1121:26" pos:end="1121:28">[<expr pos:start="1121:27" pos:end="1121:27"><name pos:start="1121:27" pos:end="1121:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1123:9" pos:end="1131:9"><if pos:start="1123:9" pos:end="1131:9">if <condition pos:start="1123:12" pos:end="1123:59">(<expr pos:start="1123:13" pos:end="1123:58"><call pos:start="1123:13" pos:end="1123:54"><name pos:start="1123:13" pos:end="1123:33">avformat_write_header</name><argument_list pos:start="1123:34" pos:end="1123:54">(<argument pos:start="1123:35" pos:end="1123:36"><expr pos:start="1123:35" pos:end="1123:36"><name pos:start="1123:35" pos:end="1123:36">os</name></expr></argument>, <argument pos:start="1123:39" pos:end="1123:53"><expr pos:start="1123:39" pos:end="1123:53"><operator pos:start="1123:39" pos:end="1123:39">&amp;</operator><name pos:start="1123:40" pos:end="1123:53"><name pos:start="1123:40" pos:end="1123:50">output_opts</name><index pos:start="1123:51" pos:end="1123:53">[<expr pos:start="1123:52" pos:end="1123:52"><name pos:start="1123:52" pos:end="1123:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="1123:56" pos:end="1123:56">&lt;</operator> <literal type="number" pos:start="1123:58" pos:end="1123:58">0</literal></expr>)</condition> <block pos:start="1123:61" pos:end="1131:9">{<block_content pos:start="1125:13" pos:end="1129:29">

            <expr_stmt pos:start="1125:13" pos:end="1125:123"><expr pos:start="1125:13" pos:end="1125:122"><call pos:start="1125:13" pos:end="1125:122"><name pos:start="1125:13" pos:end="1125:20">snprintf</name><argument_list pos:start="1125:21" pos:end="1125:122">(<argument pos:start="1125:22" pos:end="1125:26"><expr pos:start="1125:22" pos:end="1125:26"><name pos:start="1125:22" pos:end="1125:26">error</name></expr></argument>, <argument pos:start="1125:29" pos:end="1125:41"><expr pos:start="1125:29" pos:end="1125:41"><sizeof pos:start="1125:29" pos:end="1125:41">sizeof<argument_list pos:start="1125:35" pos:end="1125:41">(<argument pos:start="1125:36" pos:end="1125:40"><expr pos:start="1125:36" pos:end="1125:40"><name pos:start="1125:36" pos:end="1125:40">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1125:44" pos:end="1125:118"><expr pos:start="1125:44" pos:end="1125:118"><literal type="string" pos:start="1125:44" pos:end="1125:118">"Could not write header for output file #%d (incorrect codec parameters ?)"</literal></expr></argument>, <argument pos:start="1125:121" pos:end="1125:121"><expr pos:start="1125:121" pos:end="1125:121"><name pos:start="1125:121" pos:end="1125:121">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1127:13" pos:end="1127:34"><expr pos:start="1127:13" pos:end="1127:33"><name pos:start="1127:13" pos:end="1127:15">ret</name> <operator pos:start="1127:17" pos:end="1127:17">=</operator> <call pos:start="1127:19" pos:end="1127:33"><name pos:start="1127:19" pos:end="1127:25">AVERROR</name><argument_list pos:start="1127:26" pos:end="1127:33">(<argument pos:start="1127:27" pos:end="1127:32"><expr pos:start="1127:27" pos:end="1127:32"><name pos:start="1127:27" pos:end="1127:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1129:13" pos:end="1129:29">goto <name pos:start="1129:18" pos:end="1129:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1133:9" pos:end="1133:41"><expr pos:start="1133:9" pos:end="1133:40"><call pos:start="1133:9" pos:end="1133:40"><name pos:start="1133:9" pos:end="1133:24">assert_avoptions</name><argument_list pos:start="1133:25" pos:end="1133:40">(<argument pos:start="1133:26" pos:end="1133:39"><expr pos:start="1133:26" pos:end="1133:39"><name pos:start="1133:26" pos:end="1133:39"><name pos:start="1133:26" pos:end="1133:36">output_opts</name><index pos:start="1133:37" pos:end="1133:39">[<expr pos:start="1133:38" pos:end="1133:38"><name pos:start="1133:38" pos:end="1133:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1135:9" pos:end="1139:9"><if pos:start="1135:9" pos:end="1139:9">if <condition pos:start="1135:12" pos:end="1135:58">(<expr pos:start="1135:13" pos:end="1135:57"><call pos:start="1135:13" pos:end="1135:57"><name pos:start="1135:13" pos:end="1135:18">strcmp</name><argument_list pos:start="1135:19" pos:end="1135:57">(<argument pos:start="1135:20" pos:end="1135:49"><expr pos:start="1135:20" pos:end="1135:49"><name pos:start="1135:20" pos:end="1135:34"><name pos:start="1135:20" pos:end="1135:31">output_files</name><index pos:start="1135:32" pos:end="1135:34">[<expr pos:start="1135:33" pos:end="1135:33"><name pos:start="1135:33" pos:end="1135:33">i</name></expr>]</index></name><operator pos:start="1135:35" pos:end="1135:36">-&gt;</operator><name pos:start="1135:37" pos:end="1135:49"><name pos:start="1135:37" pos:end="1135:43">oformat</name><operator pos:start="1135:44" pos:end="1135:45">-&gt;</operator><name pos:start="1135:46" pos:end="1135:49">name</name></name></expr></argument>, <argument pos:start="1135:52" pos:end="1135:56"><expr pos:start="1135:52" pos:end="1135:56"><literal type="string" pos:start="1135:52" pos:end="1135:56">"rtp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1135:60" pos:end="1139:9">{<block_content pos:start="1137:13" pos:end="1137:25">

            <expr_stmt pos:start="1137:13" pos:end="1137:25"><expr pos:start="1137:13" pos:end="1137:24"><name pos:start="1137:13" pos:end="1137:20">want_sdp</name> <operator pos:start="1137:22" pos:end="1137:22">=</operator> <literal type="number" pos:start="1137:24" pos:end="1137:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



 <label pos:start="1145:2" pos:end="1145:13"><name pos:start="1145:2" pos:end="1145:12">dump_format</name>:</label>

    <comment type="block" pos:start="1147:5" pos:end="1149:24">/* dump the file output parameters - cannot be done before in case

       of stream copy */</comment>

    <for pos:start="1151:5" pos:end="1155:5">for<control pos:start="1151:8" pos:end="1151:34">(<init pos:start="1151:9" pos:end="1151:12"><expr pos:start="1151:9" pos:end="1151:11"><name pos:start="1151:9" pos:end="1151:9">i</name><operator pos:start="1151:10" pos:end="1151:10">=</operator><literal type="number" pos:start="1151:11" pos:end="1151:11">0</literal></expr>;</init><condition pos:start="1151:13" pos:end="1151:30"><expr pos:start="1151:13" pos:end="1151:29"><name pos:start="1151:13" pos:end="1151:13">i</name><operator pos:start="1151:14" pos:end="1151:14">&lt;</operator><name pos:start="1151:15" pos:end="1151:29">nb_output_files</name></expr>;</condition><incr pos:start="1151:31" pos:end="1151:33"><expr pos:start="1151:31" pos:end="1151:33"><name pos:start="1151:31" pos:end="1151:31">i</name><operator pos:start="1151:32" pos:end="1151:33">++</operator></expr></incr>)</control> <block pos:start="1151:36" pos:end="1155:5">{<block_content pos:start="1153:9" pos:end="1153:73">

        <expr_stmt pos:start="1153:9" pos:end="1153:73"><expr pos:start="1153:9" pos:end="1153:72"><call pos:start="1153:9" pos:end="1153:72"><name pos:start="1153:9" pos:end="1153:22">av_dump_format</name><argument_list pos:start="1153:23" pos:end="1153:72">(<argument pos:start="1153:24" pos:end="1153:38"><expr pos:start="1153:24" pos:end="1153:38"><name pos:start="1153:24" pos:end="1153:38"><name pos:start="1153:24" pos:end="1153:35">output_files</name><index pos:start="1153:36" pos:end="1153:38">[<expr pos:start="1153:37" pos:end="1153:37"><name pos:start="1153:37" pos:end="1153:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="1153:41" pos:end="1153:41"><expr pos:start="1153:41" pos:end="1153:41"><name pos:start="1153:41" pos:end="1153:41">i</name></expr></argument>, <argument pos:start="1153:44" pos:end="1153:68"><expr pos:start="1153:44" pos:end="1153:68"><name pos:start="1153:44" pos:end="1153:58"><name pos:start="1153:44" pos:end="1153:55">output_files</name><index pos:start="1153:56" pos:end="1153:58">[<expr pos:start="1153:57" pos:end="1153:57"><name pos:start="1153:57" pos:end="1153:57">i</name></expr>]</index></name><operator pos:start="1153:59" pos:end="1153:60">-&gt;</operator><name pos:start="1153:61" pos:end="1153:68">filename</name></expr></argument>, <argument pos:start="1153:71" pos:end="1153:71"><expr pos:start="1153:71" pos:end="1153:71"><literal type="number" pos:start="1153:71" pos:end="1153:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1159:5" pos:end="1159:33">/* dump the stream mapping */</comment>

    <if_stmt pos:start="1161:5" pos:end="1191:5"><if pos:start="1161:5" pos:end="1191:5">if <condition pos:start="1161:8" pos:end="1161:21">(<expr pos:start="1161:9" pos:end="1161:20"><name pos:start="1161:9" pos:end="1161:15">verbose</name> <operator pos:start="1161:17" pos:end="1161:18">&gt;=</operator> <literal type="number" pos:start="1161:20" pos:end="1161:20">0</literal></expr>)</condition> <block pos:start="1161:23" pos:end="1191:5">{<block_content pos:start="1163:9" pos:end="1189:9">

        <expr_stmt pos:start="1163:9" pos:end="1163:45"><expr pos:start="1163:9" pos:end="1163:44"><call pos:start="1163:9" pos:end="1163:44"><name pos:start="1163:9" pos:end="1163:15">fprintf</name><argument_list pos:start="1163:16" pos:end="1163:44">(<argument pos:start="1163:17" pos:end="1163:22"><expr pos:start="1163:17" pos:end="1163:22"><name pos:start="1163:17" pos:end="1163:22">stderr</name></expr></argument>, <argument pos:start="1163:25" pos:end="1163:43"><expr pos:start="1163:25" pos:end="1163:43"><literal type="string" pos:start="1163:25" pos:end="1163:43">"Stream mapping:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="1165:9" pos:end="1189:9">for<control pos:start="1165:12" pos:end="1165:34">(<init pos:start="1165:13" pos:end="1165:16"><expr pos:start="1165:13" pos:end="1165:15"><name pos:start="1165:13" pos:end="1165:13">i</name><operator pos:start="1165:14" pos:end="1165:14">=</operator><literal type="number" pos:start="1165:15" pos:end="1165:15">0</literal></expr>;</init><condition pos:start="1165:17" pos:end="1165:30"><expr pos:start="1165:17" pos:end="1165:29"><name pos:start="1165:17" pos:end="1165:17">i</name><operator pos:start="1165:18" pos:end="1165:18">&lt;</operator><name pos:start="1165:19" pos:end="1165:29">nb_ostreams</name></expr>;</condition><incr pos:start="1165:31" pos:end="1165:33"><expr pos:start="1165:31" pos:end="1165:33"><name pos:start="1165:31" pos:end="1165:31">i</name><operator pos:start="1165:32" pos:end="1165:33">++</operator></expr></incr>)</control> <block pos:start="1165:36" pos:end="1189:9">{<block_content pos:start="1167:13" pos:end="1187:34">

            <expr_stmt pos:start="1167:13" pos:end="1167:31"><expr pos:start="1167:13" pos:end="1167:30"><name pos:start="1167:13" pos:end="1167:15">ost</name> <operator pos:start="1167:17" pos:end="1167:17">=</operator> <name pos:start="1167:19" pos:end="1167:30"><name pos:start="1167:19" pos:end="1167:27">ost_table</name><index pos:start="1167:28" pos:end="1167:30">[<expr pos:start="1167:29" pos:end="1167:29"><name pos:start="1167:29" pos:end="1167:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1169:13" pos:end="1177:32"><expr pos:start="1169:13" pos:end="1177:31"><call pos:start="1169:13" pos:end="1177:31"><name pos:start="1169:13" pos:end="1169:19">fprintf</name><argument_list pos:start="1169:20" pos:end="1177:31">(<argument pos:start="1169:21" pos:end="1169:26"><expr pos:start="1169:21" pos:end="1169:26"><name pos:start="1169:21" pos:end="1169:26">stderr</name></expr></argument>, <argument pos:start="1169:29" pos:end="1169:55"><expr pos:start="1169:29" pos:end="1169:55"><literal type="string" pos:start="1169:29" pos:end="1169:55">"  Stream #%d.%d -&gt; #%d.%d"</literal></expr></argument>,

                    <argument pos:start="1171:21" pos:end="1171:63"><expr pos:start="1171:21" pos:end="1171:63"><name pos:start="1171:21" pos:end="1171:52"><name pos:start="1171:21" pos:end="1171:33">input_streams</name><index pos:start="1171:34" pos:end="1171:52">[<expr pos:start="1171:35" pos:end="1171:51"><name pos:start="1171:35" pos:end="1171:51"><name pos:start="1171:35" pos:end="1171:37">ost</name><operator pos:start="1171:38" pos:end="1171:39">-&gt;</operator><name pos:start="1171:40" pos:end="1171:51">source_index</name></name></expr>]</index></name><operator pos:start="1171:53" pos:end="1171:53">.</operator><name pos:start="1171:54" pos:end="1171:63">file_index</name></expr></argument>,

                    <argument pos:start="1173:21" pos:end="1173:62"><expr pos:start="1173:21" pos:end="1173:62"><name pos:start="1173:21" pos:end="1173:52"><name pos:start="1173:21" pos:end="1173:33">input_streams</name><index pos:start="1173:34" pos:end="1173:52">[<expr pos:start="1173:35" pos:end="1173:51"><name pos:start="1173:35" pos:end="1173:51"><name pos:start="1173:35" pos:end="1173:37">ost</name><operator pos:start="1173:38" pos:end="1173:39">-&gt;</operator><name pos:start="1173:40" pos:end="1173:51">source_index</name></name></expr>]</index></name><operator pos:start="1173:53" pos:end="1173:53">.</operator><name pos:start="1173:54" pos:end="1173:62"><name pos:start="1173:54" pos:end="1173:55">st</name><operator pos:start="1173:56" pos:end="1173:57">-&gt;</operator><name pos:start="1173:58" pos:end="1173:62">index</name></name></expr></argument>,

                    <argument pos:start="1175:21" pos:end="1175:35"><expr pos:start="1175:21" pos:end="1175:35"><name pos:start="1175:21" pos:end="1175:35"><name pos:start="1175:21" pos:end="1175:23">ost</name><operator pos:start="1175:24" pos:end="1175:25">-&gt;</operator><name pos:start="1175:26" pos:end="1175:35">file_index</name></name></expr></argument>,

                    <argument pos:start="1177:21" pos:end="1177:30"><expr pos:start="1177:21" pos:end="1177:30"><name pos:start="1177:21" pos:end="1177:30"><name pos:start="1177:21" pos:end="1177:23">ost</name><operator pos:start="1177:24" pos:end="1177:25">-&gt;</operator><name pos:start="1177:26" pos:end="1177:30">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1179:13" pos:end="1185:50"><if pos:start="1179:13" pos:end="1185:50">if <condition pos:start="1179:16" pos:end="1179:67">(<expr pos:start="1179:17" pos:end="1179:66"><name pos:start="1179:17" pos:end="1179:29"><name pos:start="1179:17" pos:end="1179:19">ost</name><operator pos:start="1179:20" pos:end="1179:21">-&gt;</operator><name pos:start="1179:22" pos:end="1179:29">sync_ist</name></name> <operator pos:start="1179:31" pos:end="1179:32">!=</operator> <operator pos:start="1179:34" pos:end="1179:34">&amp;</operator><name pos:start="1179:35" pos:end="1179:66"><name pos:start="1179:35" pos:end="1179:47">input_streams</name><index pos:start="1179:48" pos:end="1179:66">[<expr pos:start="1179:49" pos:end="1179:65"><name pos:start="1179:49" pos:end="1179:65"><name pos:start="1179:49" pos:end="1179:51">ost</name><operator pos:start="1179:52" pos:end="1179:53">-&gt;</operator><name pos:start="1179:54" pos:end="1179:65">source_index</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="1181:17" pos:end="1185:50"><block_content pos:start="1181:17" pos:end="1185:50">

                <expr_stmt pos:start="1181:17" pos:end="1185:50"><expr pos:start="1181:17" pos:end="1185:49"><call pos:start="1181:17" pos:end="1185:49"><name pos:start="1181:17" pos:end="1181:23">fprintf</name><argument_list pos:start="1181:24" pos:end="1185:49">(<argument pos:start="1181:25" pos:end="1181:30"><expr pos:start="1181:25" pos:end="1181:30"><name pos:start="1181:25" pos:end="1181:30">stderr</name></expr></argument>, <argument pos:start="1181:33" pos:end="1181:48"><expr pos:start="1181:33" pos:end="1181:48"><literal type="string" pos:start="1181:33" pos:end="1181:48">" [sync #%d.%d]"</literal></expr></argument>,

                        <argument pos:start="1183:25" pos:end="1183:49"><expr pos:start="1183:25" pos:end="1183:49"><name pos:start="1183:25" pos:end="1183:49"><name pos:start="1183:25" pos:end="1183:27">ost</name><operator pos:start="1183:28" pos:end="1183:29">-&gt;</operator><name pos:start="1183:30" pos:end="1183:37">sync_ist</name><operator pos:start="1183:38" pos:end="1183:39">-&gt;</operator><name pos:start="1183:40" pos:end="1183:49">file_index</name></name></expr></argument>,

                        <argument pos:start="1185:25" pos:end="1185:48"><expr pos:start="1185:25" pos:end="1185:48"><name pos:start="1185:25" pos:end="1185:48"><name pos:start="1185:25" pos:end="1185:27">ost</name><operator pos:start="1185:28" pos:end="1185:29">-&gt;</operator><name pos:start="1185:30" pos:end="1185:37">sync_ist</name><operator pos:start="1185:38" pos:end="1185:39">-&gt;</operator><name pos:start="1185:40" pos:end="1185:41">st</name><operator pos:start="1185:42" pos:end="1185:43">-&gt;</operator><name pos:start="1185:44" pos:end="1185:48">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1187:13" pos:end="1187:34"><expr pos:start="1187:13" pos:end="1187:33"><call pos:start="1187:13" pos:end="1187:33"><name pos:start="1187:13" pos:end="1187:19">fprintf</name><argument_list pos:start="1187:20" pos:end="1187:33">(<argument pos:start="1187:21" pos:end="1187:26"><expr pos:start="1187:21" pos:end="1187:26"><name pos:start="1187:21" pos:end="1187:26">stderr</name></expr></argument>, <argument pos:start="1187:29" pos:end="1187:32"><expr pos:start="1187:29" pos:end="1187:32"><literal type="string" pos:start="1187:29" pos:end="1187:32">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1195:5" pos:end="1201:5"><if pos:start="1195:5" pos:end="1201:5">if <condition pos:start="1195:8" pos:end="1195:12">(<expr pos:start="1195:9" pos:end="1195:11"><name pos:start="1195:9" pos:end="1195:11">ret</name></expr>)</condition> <block pos:start="1195:14" pos:end="1201:5">{<block_content pos:start="1197:9" pos:end="1199:18">

        <expr_stmt pos:start="1197:9" pos:end="1197:39"><expr pos:start="1197:9" pos:end="1197:38"><call pos:start="1197:9" pos:end="1197:38"><name pos:start="1197:9" pos:end="1197:15">fprintf</name><argument_list pos:start="1197:16" pos:end="1197:38">(<argument pos:start="1197:17" pos:end="1197:22"><expr pos:start="1197:17" pos:end="1197:22"><name pos:start="1197:17" pos:end="1197:22">stderr</name></expr></argument>, <argument pos:start="1197:25" pos:end="1197:30"><expr pos:start="1197:25" pos:end="1197:30"><literal type="string" pos:start="1197:25" pos:end="1197:30">"%s\n"</literal></expr></argument>, <argument pos:start="1197:33" pos:end="1197:37"><expr pos:start="1197:33" pos:end="1197:37"><name pos:start="1197:33" pos:end="1197:37">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1199:9" pos:end="1199:18">goto <name pos:start="1199:14" pos:end="1199:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1205:5" pos:end="1209:5"><if pos:start="1205:5" pos:end="1209:5">if <condition pos:start="1205:8" pos:end="1205:17">(<expr pos:start="1205:9" pos:end="1205:16"><name pos:start="1205:9" pos:end="1205:16">want_sdp</name></expr>)</condition> <block pos:start="1205:19" pos:end="1209:5">{<block_content pos:start="1207:9" pos:end="1207:49">

        <expr_stmt pos:start="1207:9" pos:end="1207:49"><expr pos:start="1207:9" pos:end="1207:48"><call pos:start="1207:9" pos:end="1207:48"><name pos:start="1207:9" pos:end="1207:17">print_sdp</name><argument_list pos:start="1207:18" pos:end="1207:48">(<argument pos:start="1207:19" pos:end="1207:30"><expr pos:start="1207:19" pos:end="1207:30"><name pos:start="1207:19" pos:end="1207:30">output_files</name></expr></argument>, <argument pos:start="1207:33" pos:end="1207:47"><expr pos:start="1207:33" pos:end="1207:47"><name pos:start="1207:33" pos:end="1207:47">nb_output_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1213:5" pos:end="1221:5"><if pos:start="1213:5" pos:end="1221:5">if <condition pos:start="1213:8" pos:end="1213:21">(<expr pos:start="1213:9" pos:end="1213:20"><operator pos:start="1213:9" pos:end="1213:9">!</operator><name pos:start="1213:10" pos:end="1213:20">using_stdin</name></expr>)</condition> <block pos:start="1213:23" pos:end="1221:5">{<block_content pos:start="1215:9" pos:end="1219:51">

        <if_stmt pos:start="1215:9" pos:end="1217:65"><if pos:start="1215:9" pos:end="1217:65">if<condition pos:start="1215:11" pos:end="1215:24">(<expr pos:start="1215:12" pos:end="1215:23"><name pos:start="1215:12" pos:end="1215:18">verbose</name> <operator pos:start="1215:20" pos:end="1215:21">&gt;=</operator> <literal type="number" pos:start="1215:23" pos:end="1215:23">0</literal></expr>)</condition><block type="pseudo" pos:start="1217:13" pos:end="1217:65"><block_content pos:start="1217:13" pos:end="1217:65">

            <expr_stmt pos:start="1217:13" pos:end="1217:65"><expr pos:start="1217:13" pos:end="1217:64"><call pos:start="1217:13" pos:end="1217:64"><name pos:start="1217:13" pos:end="1217:19">fprintf</name><argument_list pos:start="1217:20" pos:end="1217:64">(<argument pos:start="1217:21" pos:end="1217:26"><expr pos:start="1217:21" pos:end="1217:26"><name pos:start="1217:21" pos:end="1217:26">stderr</name></expr></argument>, <argument pos:start="1217:29" pos:end="1217:63"><expr pos:start="1217:29" pos:end="1217:63"><literal type="string" pos:start="1217:29" pos:end="1217:63">"Press [q] to stop, [?] for help\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1219:9" pos:end="1219:51"><expr pos:start="1219:9" pos:end="1219:50"><call pos:start="1219:9" pos:end="1219:50"><name pos:start="1219:9" pos:end="1219:29">avio_set_interrupt_cb</name><argument_list pos:start="1219:30" pos:end="1219:50">(<argument pos:start="1219:31" pos:end="1219:49"><expr pos:start="1219:31" pos:end="1219:49"><name pos:start="1219:31" pos:end="1219:49">decode_interrupt_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1223:5" pos:end="1223:16"><expr pos:start="1223:5" pos:end="1223:15"><call pos:start="1223:5" pos:end="1223:15"><name pos:start="1223:5" pos:end="1223:13">term_init</name><argument_list pos:start="1223:14" pos:end="1223:15">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="1227:5" pos:end="1227:31"><expr pos:start="1227:5" pos:end="1227:30"><name pos:start="1227:5" pos:end="1227:15">timer_start</name> <operator pos:start="1227:17" pos:end="1227:17">=</operator> <call pos:start="1227:19" pos:end="1227:30"><name pos:start="1227:19" pos:end="1227:28">av_gettime</name><argument_list pos:start="1227:29" pos:end="1227:30">()</argument_list></call></expr>;</expr_stmt>



    <for pos:start="1231:5" pos:end="1613:5">for<control pos:start="1231:8" pos:end="1231:33">(<init pos:start="1231:9" pos:end="1231:9">;</init> <condition pos:start="1231:11" pos:end="1231:32"><expr pos:start="1231:11" pos:end="1231:31"><name pos:start="1231:11" pos:end="1231:26">received_sigterm</name> <operator pos:start="1231:28" pos:end="1231:29">==</operator> <literal type="number" pos:start="1231:31" pos:end="1231:31">0</literal></expr>;</condition><incr/>)</control> <block pos:start="1231:35" pos:end="1613:5">{<block_content pos:start="1233:9" pos:end="1611:62">

        <decl_stmt pos:start="1233:9" pos:end="1233:34"><decl pos:start="1233:9" pos:end="1233:22"><type pos:start="1233:9" pos:end="1233:11"><name pos:start="1233:9" pos:end="1233:11">int</name></type> <name pos:start="1233:13" pos:end="1233:22">file_index</name></decl>, <decl pos:start="1233:25" pos:end="1233:33"><type ref="prev" pos:start="1233:9" pos:end="1233:11"/><name pos:start="1233:25" pos:end="1233:33">ist_index</name></decl>;</decl_stmt>

        <decl_stmt pos:start="1235:9" pos:end="1235:21"><decl pos:start="1235:9" pos:end="1235:20"><type pos:start="1235:9" pos:end="1235:16"><name pos:start="1235:9" pos:end="1235:16">AVPacket</name></type> <name pos:start="1235:18" pos:end="1235:20">pkt</name></decl>;</decl_stmt>

        <decl_stmt pos:start="1237:9" pos:end="1237:24"><decl pos:start="1237:9" pos:end="1237:23"><type pos:start="1237:9" pos:end="1237:14"><name pos:start="1237:9" pos:end="1237:14">double</name></type> <name pos:start="1237:16" pos:end="1237:23">ipts_min</name></decl>;</decl_stmt>

        <decl_stmt pos:start="1239:9" pos:end="1239:24"><decl pos:start="1239:9" pos:end="1239:23"><type pos:start="1239:9" pos:end="1239:14"><name pos:start="1239:9" pos:end="1239:14">double</name></type> <name pos:start="1239:16" pos:end="1239:23">opts_min</name></decl>;</decl_stmt>



    <label pos:start="1243:5" pos:end="1243:9"><name pos:start="1243:5" pos:end="1243:8">redo</name>:</label>

        <expr_stmt pos:start="1245:9" pos:end="1245:24"><expr pos:start="1245:9" pos:end="1245:23"><name pos:start="1245:9" pos:end="1245:16">ipts_min</name><operator pos:start="1245:17" pos:end="1245:17">=</operator> <literal type="number" pos:start="1245:19" pos:end="1245:23">1e100</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1247:9" pos:end="1247:24"><expr pos:start="1247:9" pos:end="1247:23"><name pos:start="1247:9" pos:end="1247:16">opts_min</name><operator pos:start="1247:17" pos:end="1247:17">=</operator> <literal type="number" pos:start="1247:19" pos:end="1247:23">1e100</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="1249:9" pos:end="1249:35">/* if 'q' pressed, exits */</comment>

        <if_stmt pos:start="1251:9" pos:end="1349:9"><if pos:start="1251:9" pos:end="1349:9">if <condition pos:start="1251:12" pos:end="1251:25">(<expr pos:start="1251:13" pos:end="1251:24"><operator pos:start="1251:13" pos:end="1251:13">!</operator><name pos:start="1251:14" pos:end="1251:24">using_stdin</name></expr>)</condition> <block pos:start="1251:27" pos:end="1349:9">{<block_content pos:start="1253:13" pos:end="1347:13">

            <if_stmt pos:start="1253:13" pos:end="1255:22"><if pos:start="1253:13" pos:end="1255:22">if <condition pos:start="1253:16" pos:end="1253:26">(<expr pos:start="1253:17" pos:end="1253:25"><name pos:start="1253:17" pos:end="1253:25">q_pressed</name></expr>)</condition><block type="pseudo" pos:start="1255:17" pos:end="1255:22"><block_content pos:start="1255:17" pos:end="1255:22">

                <break pos:start="1255:17" pos:end="1255:22">break;</break></block_content></block></if></if_stmt>

            <comment type="block" pos:start="1257:13" pos:end="1257:45">/* read_key() returns 0 on EOF */</comment>

            <expr_stmt pos:start="1259:13" pos:end="1259:29"><expr pos:start="1259:13" pos:end="1259:28"><name pos:start="1259:13" pos:end="1259:15">key</name> <operator pos:start="1259:17" pos:end="1259:17">=</operator> <call pos:start="1259:19" pos:end="1259:28"><name pos:start="1259:19" pos:end="1259:26">read_key</name><argument_list pos:start="1259:27" pos:end="1259:28">()</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1261:13" pos:end="1263:22"><if pos:start="1261:13" pos:end="1263:22">if <condition pos:start="1261:16" pos:end="1261:27">(<expr pos:start="1261:17" pos:end="1261:26"><name pos:start="1261:17" pos:end="1261:19">key</name> <operator pos:start="1261:21" pos:end="1261:22">==</operator> <literal type="char" pos:start="1261:24" pos:end="1261:26">'q'</literal></expr>)</condition><block type="pseudo" pos:start="1263:17" pos:end="1263:22"><block_content pos:start="1263:17" pos:end="1263:22">

                <break pos:start="1263:17" pos:end="1263:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="1265:13" pos:end="1265:38"><if pos:start="1265:13" pos:end="1265:38">if <condition pos:start="1265:16" pos:end="1265:27">(<expr pos:start="1265:17" pos:end="1265:26"><name pos:start="1265:17" pos:end="1265:19">key</name> <operator pos:start="1265:21" pos:end="1265:22">==</operator> <literal type="char" pos:start="1265:24" pos:end="1265:26">'+'</literal></expr>)</condition><block type="pseudo" pos:start="1265:29" pos:end="1265:38"><block_content pos:start="1265:29" pos:end="1265:38"> <expr_stmt pos:start="1265:29" pos:end="1265:38"><expr pos:start="1265:29" pos:end="1265:37"><name pos:start="1265:29" pos:end="1265:35">verbose</name><operator pos:start="1265:36" pos:end="1265:37">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1267:13" pos:end="1267:38"><if pos:start="1267:13" pos:end="1267:38">if <condition pos:start="1267:16" pos:end="1267:27">(<expr pos:start="1267:17" pos:end="1267:26"><name pos:start="1267:17" pos:end="1267:19">key</name> <operator pos:start="1267:21" pos:end="1267:22">==</operator> <literal type="char" pos:start="1267:24" pos:end="1267:26">'-'</literal></expr>)</condition><block type="pseudo" pos:start="1267:29" pos:end="1267:38"><block_content pos:start="1267:29" pos:end="1267:38"> <expr_stmt pos:start="1267:29" pos:end="1267:38"><expr pos:start="1267:29" pos:end="1267:37"><name pos:start="1267:29" pos:end="1267:35">verbose</name><operator pos:start="1267:36" pos:end="1267:37">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1269:13" pos:end="1269:45"><if pos:start="1269:13" pos:end="1269:45">if <condition pos:start="1269:16" pos:end="1269:27">(<expr pos:start="1269:17" pos:end="1269:26"><name pos:start="1269:17" pos:end="1269:19">key</name> <operator pos:start="1269:21" pos:end="1269:22">==</operator> <literal type="char" pos:start="1269:24" pos:end="1269:26">'s'</literal></expr>)</condition><block type="pseudo" pos:start="1269:29" pos:end="1269:45"><block_content pos:start="1269:29" pos:end="1269:45"> <expr_stmt pos:start="1269:29" pos:end="1269:45"><expr pos:start="1269:29" pos:end="1269:44"><name pos:start="1269:29" pos:end="1269:35">qp_hist</name>     <operator pos:start="1269:41" pos:end="1269:42">^=</operator> <literal type="number" pos:start="1269:44" pos:end="1269:44">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1271:13" pos:end="1287:13"><if pos:start="1271:13" pos:end="1287:13">if <condition pos:start="1271:16" pos:end="1271:27">(<expr pos:start="1271:17" pos:end="1271:26"><name pos:start="1271:17" pos:end="1271:19">key</name> <operator pos:start="1271:21" pos:end="1271:22">==</operator> <literal type="char" pos:start="1271:24" pos:end="1271:26">'h'</literal></expr>)</condition><block pos:start="1271:28" pos:end="1287:13">{<block_content pos:start="1273:17" pos:end="1285:47">

                <if_stmt pos:start="1273:17" pos:end="1283:36"><if pos:start="1273:17" pos:end="1277:17">if <condition pos:start="1273:20" pos:end="1273:32">(<expr pos:start="1273:21" pos:end="1273:31"><name pos:start="1273:21" pos:end="1273:31">do_hex_dump</name></expr>)</condition><block pos:start="1273:33" pos:end="1277:17">{<block_content pos:start="1275:21" pos:end="1275:50">

                    <expr_stmt pos:start="1275:21" pos:end="1275:50"><expr pos:start="1275:21" pos:end="1275:49"><name pos:start="1275:21" pos:end="1275:31">do_hex_dump</name> <operator pos:start="1275:33" pos:end="1275:33">=</operator> <name pos:start="1275:35" pos:end="1275:45">do_pkt_dump</name> <operator pos:start="1275:47" pos:end="1275:47">=</operator> <literal type="number" pos:start="1275:49" pos:end="1275:49">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="1277:19" pos:end="1281:17">else if<condition pos:start="1277:26" pos:end="1277:38">(<expr pos:start="1277:27" pos:end="1277:37"><name pos:start="1277:27" pos:end="1277:37">do_pkt_dump</name></expr>)</condition><block pos:start="1277:39" pos:end="1281:17">{<block_content pos:start="1279:21" pos:end="1279:36">

                    <expr_stmt pos:start="1279:21" pos:end="1279:36"><expr pos:start="1279:21" pos:end="1279:35"><name pos:start="1279:21" pos:end="1279:31">do_hex_dump</name> <operator pos:start="1279:33" pos:end="1279:33">=</operator> <literal type="number" pos:start="1279:35" pos:end="1279:35">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1281:19" pos:end="1283:36">else<block type="pseudo" pos:start="1283:21" pos:end="1283:36"><block_content pos:start="1283:21" pos:end="1283:36">

                    <expr_stmt pos:start="1283:21" pos:end="1283:36"><expr pos:start="1283:21" pos:end="1283:35"><name pos:start="1283:21" pos:end="1283:31">do_pkt_dump</name> <operator pos:start="1283:33" pos:end="1283:33">=</operator> <literal type="number" pos:start="1283:35" pos:end="1283:35">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="1285:17" pos:end="1285:47"><expr pos:start="1285:17" pos:end="1285:46"><call pos:start="1285:17" pos:end="1285:46"><name pos:start="1285:17" pos:end="1285:32">av_log_set_level</name><argument_list pos:start="1285:33" pos:end="1285:46">(<argument pos:start="1285:34" pos:end="1285:45"><expr pos:start="1285:34" pos:end="1285:45"><name pos:start="1285:34" pos:end="1285:45">AV_LOG_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1289:13" pos:end="1325:13"><if pos:start="1289:13" pos:end="1325:13">if <condition pos:start="1289:16" pos:end="1289:41">(<expr pos:start="1289:17" pos:end="1289:40"><name pos:start="1289:17" pos:end="1289:19">key</name> <operator pos:start="1289:21" pos:end="1289:22">==</operator> <literal type="char" pos:start="1289:24" pos:end="1289:26">'d'</literal> <operator pos:start="1289:28" pos:end="1289:29">||</operator> <name pos:start="1289:31" pos:end="1289:33">key</name> <operator pos:start="1289:35" pos:end="1289:36">==</operator> <literal type="char" pos:start="1289:38" pos:end="1289:40">'D'</literal></expr>)</condition><block pos:start="1289:42" pos:end="1325:13">{<block_content pos:start="1291:17" pos:end="1323:52">

                <decl_stmt pos:start="1291:17" pos:end="1291:28"><decl pos:start="1291:17" pos:end="1291:27"><type pos:start="1291:17" pos:end="1291:19"><name pos:start="1291:17" pos:end="1291:19">int</name></type> <name pos:start="1291:21" pos:end="1291:25">debug</name><init pos:start="1291:26" pos:end="1291:27">=<expr pos:start="1291:27" pos:end="1291:27"><literal type="number" pos:start="1291:27" pos:end="1291:27">0</literal></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="1293:17" pos:end="1305:40"><if pos:start="1293:17" pos:end="1303:17">if<condition pos:start="1293:19" pos:end="1293:30">(<expr pos:start="1293:20" pos:end="1293:29"><name pos:start="1293:20" pos:end="1293:22">key</name> <operator pos:start="1293:24" pos:end="1293:25">==</operator> <literal type="char" pos:start="1293:27" pos:end="1293:29">'D'</literal></expr>)</condition> <block pos:start="1293:32" pos:end="1303:17">{<block_content pos:start="1295:21" pos:end="1301:39">

                    <expr_stmt pos:start="1295:21" pos:end="1295:65"><expr pos:start="1295:21" pos:end="1295:64"><name pos:start="1295:21" pos:end="1295:25">debug</name> <operator pos:start="1295:27" pos:end="1295:27">=</operator> <name pos:start="1295:29" pos:end="1295:44"><name pos:start="1295:29" pos:end="1295:41">input_streams</name><index pos:start="1295:42" pos:end="1295:44">[<expr pos:start="1295:43" pos:end="1295:43"><literal type="number" pos:start="1295:43" pos:end="1295:43">0</literal></expr>]</index></name><operator pos:start="1295:45" pos:end="1295:45">.</operator><name pos:start="1295:46" pos:end="1295:61"><name pos:start="1295:46" pos:end="1295:47">st</name><operator pos:start="1295:48" pos:end="1295:49">-&gt;</operator><name pos:start="1295:50" pos:end="1295:54">codec</name><operator pos:start="1295:55" pos:end="1295:56">-&gt;</operator><name pos:start="1295:57" pos:end="1295:61">debug</name></name><operator pos:start="1295:62" pos:end="1295:63">&lt;&lt;</operator><literal type="number" pos:start="1295:64" pos:end="1295:64">1</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="1297:21" pos:end="1297:41"><if pos:start="1297:21" pos:end="1297:41">if<condition pos:start="1297:23" pos:end="1297:30">(<expr pos:start="1297:24" pos:end="1297:29"><operator pos:start="1297:24" pos:end="1297:24">!</operator><name pos:start="1297:25" pos:end="1297:29">debug</name></expr>)</condition><block type="pseudo" pos:start="1297:32" pos:end="1297:41"><block_content pos:start="1297:32" pos:end="1297:41"> <expr_stmt pos:start="1297:32" pos:end="1297:41"><expr pos:start="1297:32" pos:end="1297:40"><name pos:start="1297:32" pos:end="1297:36">debug</name> <operator pos:start="1297:38" pos:end="1297:38">=</operator> <literal type="number" pos:start="1297:40" pos:end="1297:40">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <while pos:start="1299:21" pos:end="1301:39">while<condition pos:start="1299:26" pos:end="1299:92">(<expr pos:start="1299:27" pos:end="1299:91"><name pos:start="1299:27" pos:end="1299:31">debug</name> <operator pos:start="1299:33" pos:end="1299:33">&amp;</operator> <operator pos:start="1299:35" pos:end="1299:35">(</operator><name pos:start="1299:36" pos:end="1299:53">FF_DEBUG_DCT_COEFF</name><operator pos:start="1299:54" pos:end="1299:54">|</operator><name pos:start="1299:55" pos:end="1299:69">FF_DEBUG_VIS_QP</name><operator pos:start="1299:70" pos:end="1299:70">|</operator><name pos:start="1299:71" pos:end="1299:90">FF_DEBUG_VIS_MB_TYPE</name><operator pos:start="1299:91" pos:end="1299:91">)</operator></expr>)</condition><block type="pseudo" pos:start="1301:25" pos:end="1301:39"><block_content pos:start="1301:25" pos:end="1301:39"> <comment type="line" pos:start="1299:94" pos:end="1299:124">//unsupported, would just crash</comment>

                        <expr_stmt pos:start="1301:25" pos:end="1301:39"><expr pos:start="1301:25" pos:end="1301:38"><name pos:start="1301:25" pos:end="1301:29">debug</name> <operator pos:start="1301:31" pos:end="1301:32">+=</operator> <name pos:start="1301:34" pos:end="1301:38">debug</name></expr>;</expr_stmt></block_content></block></while>

                </block_content>}</block></if><else pos:start="1303:18" pos:end="1305:40">else<block type="pseudo" pos:start="1305:21" pos:end="1305:40"><block_content pos:start="1305:21" pos:end="1305:40">

                    <expr_stmt pos:start="1305:21" pos:end="1305:40"><expr pos:start="1305:21" pos:end="1305:39"><call pos:start="1305:21" pos:end="1305:39"><name pos:start="1305:21" pos:end="1305:25">scanf</name><argument_list pos:start="1305:26" pos:end="1305:39">(<argument pos:start="1305:27" pos:end="1305:30"><expr pos:start="1305:27" pos:end="1305:30"><literal type="string" pos:start="1305:27" pos:end="1305:30">"%d"</literal></expr></argument>, <argument pos:start="1305:33" pos:end="1305:38"><expr pos:start="1305:33" pos:end="1305:38"><operator pos:start="1305:33" pos:end="1305:33">&amp;</operator><name pos:start="1305:34" pos:end="1305:38">debug</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <for pos:start="1307:17" pos:end="1311:17">for<control pos:start="1307:20" pos:end="1307:47">(<init pos:start="1307:21" pos:end="1307:24"><expr pos:start="1307:21" pos:end="1307:23"><name pos:start="1307:21" pos:end="1307:21">i</name><operator pos:start="1307:22" pos:end="1307:22">=</operator><literal type="number" pos:start="1307:23" pos:end="1307:23">0</literal></expr>;</init><condition pos:start="1307:25" pos:end="1307:43"><expr pos:start="1307:25" pos:end="1307:42"><name pos:start="1307:25" pos:end="1307:25">i</name><operator pos:start="1307:26" pos:end="1307:26">&lt;</operator><name pos:start="1307:27" pos:end="1307:42">nb_input_streams</name></expr>;</condition><incr pos:start="1307:44" pos:end="1307:46"><expr pos:start="1307:44" pos:end="1307:46"><name pos:start="1307:44" pos:end="1307:44">i</name><operator pos:start="1307:45" pos:end="1307:46">++</operator></expr></incr>)</control> <block pos:start="1307:49" pos:end="1311:17">{<block_content pos:start="1309:21" pos:end="1309:62">

                    <expr_stmt pos:start="1309:21" pos:end="1309:62"><expr pos:start="1309:21" pos:end="1309:61"><name pos:start="1309:21" pos:end="1309:36"><name pos:start="1309:21" pos:end="1309:33">input_streams</name><index pos:start="1309:34" pos:end="1309:36">[<expr pos:start="1309:35" pos:end="1309:35"><name pos:start="1309:35" pos:end="1309:35">i</name></expr>]</index></name><operator pos:start="1309:37" pos:end="1309:37">.</operator><name pos:start="1309:38" pos:end="1309:53"><name pos:start="1309:38" pos:end="1309:39">st</name><operator pos:start="1309:40" pos:end="1309:41">-&gt;</operator><name pos:start="1309:42" pos:end="1309:46">codec</name><operator pos:start="1309:47" pos:end="1309:48">-&gt;</operator><name pos:start="1309:49" pos:end="1309:53">debug</name></name> <operator pos:start="1309:55" pos:end="1309:55">=</operator> <name pos:start="1309:57" pos:end="1309:61">debug</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <for pos:start="1313:17" pos:end="1319:17">for<control pos:start="1313:20" pos:end="1313:42">(<init pos:start="1313:21" pos:end="1313:24"><expr pos:start="1313:21" pos:end="1313:23"><name pos:start="1313:21" pos:end="1313:21">i</name><operator pos:start="1313:22" pos:end="1313:22">=</operator><literal type="number" pos:start="1313:23" pos:end="1313:23">0</literal></expr>;</init><condition pos:start="1313:25" pos:end="1313:38"><expr pos:start="1313:25" pos:end="1313:37"><name pos:start="1313:25" pos:end="1313:25">i</name><operator pos:start="1313:26" pos:end="1313:26">&lt;</operator><name pos:start="1313:27" pos:end="1313:37">nb_ostreams</name></expr>;</condition><incr pos:start="1313:39" pos:end="1313:41"><expr pos:start="1313:39" pos:end="1313:41"><name pos:start="1313:39" pos:end="1313:39">i</name><operator pos:start="1313:40" pos:end="1313:41">++</operator></expr></incr>)</control> <block pos:start="1313:44" pos:end="1319:17">{<block_content pos:start="1315:21" pos:end="1317:50">

                    <expr_stmt pos:start="1315:21" pos:end="1315:39"><expr pos:start="1315:21" pos:end="1315:38"><name pos:start="1315:21" pos:end="1315:23">ost</name> <operator pos:start="1315:25" pos:end="1315:25">=</operator> <name pos:start="1315:27" pos:end="1315:38"><name pos:start="1315:27" pos:end="1315:35">ost_table</name><index pos:start="1315:36" pos:end="1315:38">[<expr pos:start="1315:37" pos:end="1315:37"><name pos:start="1315:37" pos:end="1315:37">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="1317:21" pos:end="1317:50"><expr pos:start="1317:21" pos:end="1317:49"><name pos:start="1317:21" pos:end="1317:41"><name pos:start="1317:21" pos:end="1317:23">ost</name><operator pos:start="1317:24" pos:end="1317:25">-&gt;</operator><name pos:start="1317:26" pos:end="1317:27">st</name><operator pos:start="1317:28" pos:end="1317:29">-&gt;</operator><name pos:start="1317:30" pos:end="1317:34">codec</name><operator pos:start="1317:35" pos:end="1317:36">-&gt;</operator><name pos:start="1317:37" pos:end="1317:41">debug</name></name> <operator pos:start="1317:43" pos:end="1317:43">=</operator> <name pos:start="1317:45" pos:end="1317:49">debug</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="1321:17" pos:end="1321:57"><if pos:start="1321:17" pos:end="1321:57">if<condition pos:start="1321:19" pos:end="1321:25">(<expr pos:start="1321:20" pos:end="1321:24"><name pos:start="1321:20" pos:end="1321:24">debug</name></expr>)</condition><block type="pseudo" pos:start="1321:27" pos:end="1321:57"><block_content pos:start="1321:27" pos:end="1321:57"> <expr_stmt pos:start="1321:27" pos:end="1321:57"><expr pos:start="1321:27" pos:end="1321:56"><call pos:start="1321:27" pos:end="1321:56"><name pos:start="1321:27" pos:end="1321:42">av_log_set_level</name><argument_list pos:start="1321:43" pos:end="1321:56">(<argument pos:start="1321:44" pos:end="1321:55"><expr pos:start="1321:44" pos:end="1321:55"><name pos:start="1321:44" pos:end="1321:55">AV_LOG_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1323:17" pos:end="1323:52"><expr pos:start="1323:17" pos:end="1323:51"><call pos:start="1323:17" pos:end="1323:51"><name pos:start="1323:17" pos:end="1323:23">fprintf</name><argument_list pos:start="1323:24" pos:end="1323:51">(<argument pos:start="1323:25" pos:end="1323:30"><expr pos:start="1323:25" pos:end="1323:30"><name pos:start="1323:25" pos:end="1323:30">stderr</name></expr></argument>,<argument pos:start="1323:32" pos:end="1323:43"><expr pos:start="1323:32" pos:end="1323:43"><literal type="string" pos:start="1323:32" pos:end="1323:43">"debug=%d\n"</literal></expr></argument>, <argument pos:start="1323:46" pos:end="1323:50"><expr pos:start="1323:46" pos:end="1323:50"><name pos:start="1323:46" pos:end="1323:50">debug</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1327:13" pos:end="1347:13"><if pos:start="1327:13" pos:end="1347:13">if <condition pos:start="1327:16" pos:end="1327:27">(<expr pos:start="1327:17" pos:end="1327:26"><name pos:start="1327:17" pos:end="1327:19">key</name> <operator pos:start="1327:21" pos:end="1327:22">==</operator> <literal type="char" pos:start="1327:24" pos:end="1327:26">'?'</literal></expr>)</condition><block pos:start="1327:28" pos:end="1347:13">{<block_content pos:start="1329:17" pos:end="1345:18">

                <expr_stmt pos:start="1329:17" pos:end="1345:18"><expr pos:start="1329:17" pos:end="1345:17"><call pos:start="1329:17" pos:end="1345:17"><name pos:start="1329:17" pos:end="1329:23">fprintf</name><argument_list pos:start="1329:24" pos:end="1345:17">(<argument pos:start="1329:25" pos:end="1329:30"><expr pos:start="1329:25" pos:end="1329:30"><name pos:start="1329:25" pos:end="1329:30">stderr</name></expr></argument>, <argument pos:start="1329:33" pos:end="1343:60"><expr pos:start="1329:33" pos:end="1343:60"><literal type="string" pos:start="1329:33" pos:end="1329:51">"key    function\n"</literal>

                                <literal type="string" pos:start="1331:33" pos:end="1331:57">"?      show this help\n"</literal>

                                <literal type="string" pos:start="1333:33" pos:end="1333:61">"+      increase verbosity\n"</literal>

                                <literal type="string" pos:start="1335:33" pos:end="1335:61">"-      decrease verbosity\n"</literal>

                                <literal type="string" pos:start="1337:33" pos:end="1337:78">"D      cycle through available debug modes\n"</literal>

                                <literal type="string" pos:start="1339:33" pos:end="1339:95">"h      dump packets/hex press to cycle through the 3 states\n"</literal>

                                <literal type="string" pos:start="1341:33" pos:end="1341:47">"q      quit\n"</literal>

                                <literal type="string" pos:start="1343:33" pos:end="1343:60">"s      Show QP histogram\n"</literal></expr></argument>

                )</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="1353:9" pos:end="1355:33">/* select the stream that we must read now by looking at the

           smallest output pts */</comment>

        <expr_stmt pos:start="1357:9" pos:end="1357:24"><expr pos:start="1357:9" pos:end="1357:23"><name pos:start="1357:9" pos:end="1357:18">file_index</name> <operator pos:start="1357:20" pos:end="1357:20">=</operator> <operator pos:start="1357:22" pos:end="1357:22">-</operator><literal type="number" pos:start="1357:23" pos:end="1357:23">1</literal></expr>;</expr_stmt>

        <for pos:start="1359:9" pos:end="1405:9">for<control pos:start="1359:12" pos:end="1359:34">(<init pos:start="1359:13" pos:end="1359:16"><expr pos:start="1359:13" pos:end="1359:15"><name pos:start="1359:13" pos:end="1359:13">i</name><operator pos:start="1359:14" pos:end="1359:14">=</operator><literal type="number" pos:start="1359:15" pos:end="1359:15">0</literal></expr>;</init><condition pos:start="1359:17" pos:end="1359:30"><expr pos:start="1359:17" pos:end="1359:29"><name pos:start="1359:17" pos:end="1359:17">i</name><operator pos:start="1359:18" pos:end="1359:18">&lt;</operator><name pos:start="1359:19" pos:end="1359:29">nb_ostreams</name></expr>;</condition><incr pos:start="1359:31" pos:end="1359:33"><expr pos:start="1359:31" pos:end="1359:33"><name pos:start="1359:31" pos:end="1359:31">i</name><operator pos:start="1359:32" pos:end="1359:33">++</operator></expr></incr>)</control> <block pos:start="1359:36" pos:end="1405:9">{<block_content pos:start="1361:13" pos:end="1403:13">

            <decl_stmt pos:start="1361:13" pos:end="1361:30"><decl pos:start="1361:13" pos:end="1361:23"><type pos:start="1361:13" pos:end="1361:18"><name pos:start="1361:13" pos:end="1361:18">double</name></type> <name pos:start="1361:20" pos:end="1361:23">ipts</name></decl>, <decl pos:start="1361:26" pos:end="1361:29"><type ref="prev" pos:start="1361:13" pos:end="1361:18"/><name pos:start="1361:26" pos:end="1361:29">opts</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1363:13" pos:end="1363:31"><expr pos:start="1363:13" pos:end="1363:30"><name pos:start="1363:13" pos:end="1363:15">ost</name> <operator pos:start="1363:17" pos:end="1363:17">=</operator> <name pos:start="1363:19" pos:end="1363:30"><name pos:start="1363:19" pos:end="1363:27">ost_table</name><index pos:start="1363:28" pos:end="1363:30">[<expr pos:start="1363:29" pos:end="1363:29"><name pos:start="1363:29" pos:end="1363:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1365:13" pos:end="1365:47"><expr pos:start="1365:13" pos:end="1365:46"><name pos:start="1365:13" pos:end="1365:14">os</name> <operator pos:start="1365:16" pos:end="1365:16">=</operator> <name pos:start="1365:18" pos:end="1365:46"><name pos:start="1365:18" pos:end="1365:29">output_files</name><index pos:start="1365:30" pos:end="1365:46">[<expr pos:start="1365:31" pos:end="1365:45"><name pos:start="1365:31" pos:end="1365:45"><name pos:start="1365:31" pos:end="1365:33">ost</name><operator pos:start="1365:34" pos:end="1365:35">-&gt;</operator><name pos:start="1365:36" pos:end="1365:45">file_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1367:13" pos:end="1367:52"><expr pos:start="1367:13" pos:end="1367:51"><name pos:start="1367:13" pos:end="1367:15">ist</name> <operator pos:start="1367:17" pos:end="1367:17">=</operator> <operator pos:start="1367:19" pos:end="1367:19">&amp;</operator><name pos:start="1367:20" pos:end="1367:51"><name pos:start="1367:20" pos:end="1367:32">input_streams</name><index pos:start="1367:33" pos:end="1367:51">[<expr pos:start="1367:34" pos:end="1367:50"><name pos:start="1367:34" pos:end="1367:50"><name pos:start="1367:34" pos:end="1367:36">ost</name><operator pos:start="1367:37" pos:end="1367:38">-&gt;</operator><name pos:start="1367:39" pos:end="1367:50">source_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="1369:13" pos:end="1371:25"><if pos:start="1369:13" pos:end="1371:25">if<condition pos:start="1369:15" pos:end="1369:73">(<expr pos:start="1369:16" pos:end="1369:72"><name pos:start="1369:16" pos:end="1369:42"><name pos:start="1369:16" pos:end="1369:18">ist</name><operator pos:start="1369:19" pos:end="1369:20">-&gt;</operator><name pos:start="1369:21" pos:end="1369:42">is_past_recording_time</name></name> <operator pos:start="1369:44" pos:end="1369:45">||</operator> <name pos:start="1369:47" pos:end="1369:72"><name pos:start="1369:47" pos:end="1369:55">no_packet</name><index pos:start="1369:56" pos:end="1369:72">[<expr pos:start="1369:57" pos:end="1369:71"><name pos:start="1369:57" pos:end="1369:71"><name pos:start="1369:57" pos:end="1369:59">ist</name><operator pos:start="1369:60" pos:end="1369:61">-&gt;</operator><name pos:start="1369:62" pos:end="1369:71">file_index</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="1371:17" pos:end="1371:25"><block_content pos:start="1371:17" pos:end="1371:25">

                <continue pos:start="1371:17" pos:end="1371:25">continue;</continue></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1373:17" pos:end="1373:69"><expr pos:start="1373:17" pos:end="1373:68"><name pos:start="1373:17" pos:end="1373:20">opts</name> <operator pos:start="1373:22" pos:end="1373:22">=</operator> <name pos:start="1373:24" pos:end="1373:39"><name pos:start="1373:24" pos:end="1373:26">ost</name><operator pos:start="1373:27" pos:end="1373:28">-&gt;</operator><name pos:start="1373:29" pos:end="1373:30">st</name><operator pos:start="1373:31" pos:end="1373:32">-&gt;</operator><name pos:start="1373:33" pos:end="1373:35">pts</name><operator pos:start="1373:36" pos:end="1373:36">.</operator><name pos:start="1373:37" pos:end="1373:39">val</name></name> <operator pos:start="1373:41" pos:end="1373:41">*</operator> <call pos:start="1373:43" pos:end="1373:68"><name pos:start="1373:43" pos:end="1373:48">av_q2d</name><argument_list pos:start="1373:49" pos:end="1373:68">(<argument pos:start="1373:50" pos:end="1373:67"><expr pos:start="1373:50" pos:end="1373:67"><name pos:start="1373:50" pos:end="1373:67"><name pos:start="1373:50" pos:end="1373:52">ost</name><operator pos:start="1373:53" pos:end="1373:54">-&gt;</operator><name pos:start="1373:55" pos:end="1373:56">st</name><operator pos:start="1373:57" pos:end="1373:58">-&gt;</operator><name pos:start="1373:59" pos:end="1373:67">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1375:13" pos:end="1375:36"><expr pos:start="1375:13" pos:end="1375:35"><name pos:start="1375:13" pos:end="1375:16">ipts</name> <operator pos:start="1375:18" pos:end="1375:18">=</operator> <operator pos:start="1375:20" pos:end="1375:20">(</operator><name pos:start="1375:21" pos:end="1375:26">double</name><operator pos:start="1375:27" pos:end="1375:27">)</operator><name pos:start="1375:28" pos:end="1375:35"><name pos:start="1375:28" pos:end="1375:30">ist</name><operator pos:start="1375:31" pos:end="1375:32">-&gt;</operator><name pos:start="1375:33" pos:end="1375:35">pts</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="1377:13" pos:end="1395:13"><if pos:start="1377:13" pos:end="1395:13">if <condition pos:start="1377:16" pos:end="1377:58">(<expr pos:start="1377:17" pos:end="1377:57"><operator pos:start="1377:17" pos:end="1377:17">!</operator><name pos:start="1377:18" pos:end="1377:45"><name pos:start="1377:18" pos:end="1377:28">input_files</name><index pos:start="1377:29" pos:end="1377:45">[<expr pos:start="1377:30" pos:end="1377:44"><name pos:start="1377:30" pos:end="1377:44"><name pos:start="1377:30" pos:end="1377:32">ist</name><operator pos:start="1377:33" pos:end="1377:34">-&gt;</operator><name pos:start="1377:35" pos:end="1377:44">file_index</name></name></expr>]</index></name><operator pos:start="1377:46" pos:end="1377:46">.</operator><name pos:start="1377:47" pos:end="1377:57">eof_reached</name></expr>)</condition><block pos:start="1377:59" pos:end="1395:13">{<block_content pos:start="1379:17" pos:end="1393:17">

                <if_stmt pos:start="1379:17" pos:end="1385:17"><if pos:start="1379:17" pos:end="1385:17">if<condition pos:start="1379:19" pos:end="1379:35">(<expr pos:start="1379:20" pos:end="1379:34"><name pos:start="1379:20" pos:end="1379:23">ipts</name> <operator pos:start="1379:25" pos:end="1379:25">&lt;</operator> <name pos:start="1379:27" pos:end="1379:34">ipts_min</name></expr>)</condition> <block pos:start="1379:37" pos:end="1385:17">{<block_content pos:start="1381:21" pos:end="1383:65">

                    <expr_stmt pos:start="1381:21" pos:end="1381:36"><expr pos:start="1381:21" pos:end="1381:35"><name pos:start="1381:21" pos:end="1381:28">ipts_min</name> <operator pos:start="1381:30" pos:end="1381:30">=</operator> <name pos:start="1381:32" pos:end="1381:35">ipts</name></expr>;</expr_stmt>

                    <if_stmt pos:start="1383:21" pos:end="1383:65"><if pos:start="1383:21" pos:end="1383:65">if<condition pos:start="1383:23" pos:end="1383:35">(<expr pos:start="1383:24" pos:end="1383:33"><name pos:start="1383:24" pos:end="1383:33">input_sync</name></expr> )</condition><block type="pseudo" pos:start="1383:37" pos:end="1383:65"><block_content pos:start="1383:37" pos:end="1383:65"> <expr_stmt pos:start="1383:37" pos:end="1383:65"><expr pos:start="1383:37" pos:end="1383:64"><name pos:start="1383:37" pos:end="1383:46">file_index</name> <operator pos:start="1383:48" pos:end="1383:48">=</operator> <name pos:start="1383:50" pos:end="1383:64"><name pos:start="1383:50" pos:end="1383:52">ist</name><operator pos:start="1383:53" pos:end="1383:54">-&gt;</operator><name pos:start="1383:55" pos:end="1383:64">file_index</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="1387:17" pos:end="1393:17"><if pos:start="1387:17" pos:end="1393:17">if<condition pos:start="1387:19" pos:end="1387:35">(<expr pos:start="1387:20" pos:end="1387:34"><name pos:start="1387:20" pos:end="1387:23">opts</name> <operator pos:start="1387:25" pos:end="1387:25">&lt;</operator> <name pos:start="1387:27" pos:end="1387:34">opts_min</name></expr>)</condition> <block pos:start="1387:37" pos:end="1393:17">{<block_content pos:start="1389:21" pos:end="1391:65">

                    <expr_stmt pos:start="1389:21" pos:end="1389:36"><expr pos:start="1389:21" pos:end="1389:35"><name pos:start="1389:21" pos:end="1389:28">opts_min</name> <operator pos:start="1389:30" pos:end="1389:30">=</operator> <name pos:start="1389:32" pos:end="1389:35">opts</name></expr>;</expr_stmt>

                    <if_stmt pos:start="1391:21" pos:end="1391:65"><if pos:start="1391:21" pos:end="1391:65">if<condition pos:start="1391:23" pos:end="1391:35">(<expr pos:start="1391:24" pos:end="1391:34"><operator pos:start="1391:24" pos:end="1391:24">!</operator><name pos:start="1391:25" pos:end="1391:34">input_sync</name></expr>)</condition><block type="pseudo" pos:start="1391:37" pos:end="1391:65"><block_content pos:start="1391:37" pos:end="1391:65"> <expr_stmt pos:start="1391:37" pos:end="1391:65"><expr pos:start="1391:37" pos:end="1391:64"><name pos:start="1391:37" pos:end="1391:46">file_index</name> <operator pos:start="1391:48" pos:end="1391:48">=</operator> <name pos:start="1391:50" pos:end="1391:64"><name pos:start="1391:50" pos:end="1391:52">ist</name><operator pos:start="1391:53" pos:end="1391:54">-&gt;</operator><name pos:start="1391:55" pos:end="1391:64">file_index</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1397:13" pos:end="1403:13"><if pos:start="1397:13" pos:end="1403:13">if<condition pos:start="1397:15" pos:end="1397:75">(<expr pos:start="1397:16" pos:end="1397:74"><name pos:start="1397:16" pos:end="1397:32"><name pos:start="1397:16" pos:end="1397:18">ost</name><operator pos:start="1397:19" pos:end="1397:20">-&gt;</operator><name pos:start="1397:21" pos:end="1397:32">frame_number</name></name> <operator pos:start="1397:34" pos:end="1397:35">&gt;=</operator> <name pos:start="1397:37" pos:end="1397:74"><name pos:start="1397:37" pos:end="1397:46">max_frames</name><index pos:start="1397:47" pos:end="1397:74">[<expr pos:start="1397:48" pos:end="1397:73"><name pos:start="1397:48" pos:end="1397:73"><name pos:start="1397:48" pos:end="1397:50">ost</name><operator pos:start="1397:51" pos:end="1397:52">-&gt;</operator><name pos:start="1397:53" pos:end="1397:54">st</name><operator pos:start="1397:55" pos:end="1397:56">-&gt;</operator><name pos:start="1397:57" pos:end="1397:61">codec</name><operator pos:start="1397:62" pos:end="1397:63">-&gt;</operator><name pos:start="1397:64" pos:end="1397:73">codec_type</name></name></expr>]</index></name></expr>)</condition><block pos:start="1397:76" pos:end="1403:13">{<block_content pos:start="1399:17" pos:end="1401:22">

                <expr_stmt pos:start="1399:17" pos:end="1399:31"><expr pos:start="1399:17" pos:end="1399:30"><name pos:start="1399:17" pos:end="1399:26">file_index</name><operator pos:start="1399:27" pos:end="1399:27">=</operator> <operator pos:start="1399:29" pos:end="1399:29">-</operator><literal type="number" pos:start="1399:30" pos:end="1399:30">1</literal></expr>;</expr_stmt>

                <break pos:start="1401:17" pos:end="1401:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="1407:9" pos:end="1407:37">/* if none, if is finished */</comment>

        <if_stmt pos:start="1409:9" pos:end="1425:9"><if pos:start="1409:9" pos:end="1425:9">if <condition pos:start="1409:12" pos:end="1409:27">(<expr pos:start="1409:13" pos:end="1409:26"><name pos:start="1409:13" pos:end="1409:22">file_index</name> <operator pos:start="1409:24" pos:end="1409:24">&lt;</operator> <literal type="number" pos:start="1409:26" pos:end="1409:26">0</literal></expr>)</condition> <block pos:start="1409:29" pos:end="1425:9">{<block_content pos:start="1411:13" pos:end="1423:18">

            <if_stmt pos:start="1411:13" pos:end="1421:13"><if pos:start="1411:13" pos:end="1421:13">if<condition pos:start="1411:15" pos:end="1411:31">(<expr pos:start="1411:16" pos:end="1411:30"><name pos:start="1411:16" pos:end="1411:30">no_packet_count</name></expr>)</condition><block pos:start="1411:32" pos:end="1421:13">{<block_content pos:start="1413:17" pos:end="1419:25">

                <expr_stmt pos:start="1413:17" pos:end="1413:34"><expr pos:start="1413:17" pos:end="1413:33"><name pos:start="1413:17" pos:end="1413:31">no_packet_count</name><operator pos:start="1413:32" pos:end="1413:32">=</operator><literal type="number" pos:start="1413:33" pos:end="1413:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1415:17" pos:end="1415:56"><expr pos:start="1415:17" pos:end="1415:55"><call pos:start="1415:17" pos:end="1415:55"><name pos:start="1415:17" pos:end="1415:22">memset</name><argument_list pos:start="1415:23" pos:end="1415:55">(<argument pos:start="1415:24" pos:end="1415:32"><expr pos:start="1415:24" pos:end="1415:32"><name pos:start="1415:24" pos:end="1415:32">no_packet</name></expr></argument>, <argument pos:start="1415:35" pos:end="1415:35"><expr pos:start="1415:35" pos:end="1415:35"><literal type="number" pos:start="1415:35" pos:end="1415:35">0</literal></expr></argument>, <argument pos:start="1415:38" pos:end="1415:54"><expr pos:start="1415:38" pos:end="1415:54"><sizeof pos:start="1415:38" pos:end="1415:54">sizeof<argument_list pos:start="1415:44" pos:end="1415:54">(<argument pos:start="1415:45" pos:end="1415:53"><expr pos:start="1415:45" pos:end="1415:53"><name pos:start="1415:45" pos:end="1415:53">no_packet</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1417:17" pos:end="1417:30"><expr pos:start="1417:17" pos:end="1417:29"><call pos:start="1417:17" pos:end="1417:29"><name pos:start="1417:17" pos:end="1417:22">usleep</name><argument_list pos:start="1417:23" pos:end="1417:29">(<argument pos:start="1417:24" pos:end="1417:28"><expr pos:start="1417:24" pos:end="1417:28"><literal type="number" pos:start="1417:24" pos:end="1417:28">10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="1419:17" pos:end="1419:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1423:13" pos:end="1423:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="1429:9" pos:end="1429:44">/* finish if limit size exhausted */</comment>

        <if_stmt pos:start="1431:9" pos:end="1433:18"><if pos:start="1431:9" pos:end="1433:18">if <condition pos:start="1431:12" pos:end="1431:84">(<expr pos:start="1431:13" pos:end="1431:83"><name pos:start="1431:13" pos:end="1431:26">limit_filesize</name> <operator pos:start="1431:28" pos:end="1431:29">!=</operator> <literal type="number" pos:start="1431:31" pos:end="1431:31">0</literal> <operator pos:start="1431:33" pos:end="1431:34">&amp;&amp;</operator> <name pos:start="1431:36" pos:end="1431:49">limit_filesize</name> <operator pos:start="1431:51" pos:end="1431:52">&lt;=</operator> <call pos:start="1431:54" pos:end="1431:83"><name pos:start="1431:54" pos:end="1431:62">avio_tell</name><argument_list pos:start="1431:63" pos:end="1431:83">(<argument pos:start="1431:64" pos:end="1431:82"><expr pos:start="1431:64" pos:end="1431:82"><name pos:start="1431:64" pos:end="1431:78"><name pos:start="1431:64" pos:end="1431:75">output_files</name><index pos:start="1431:76" pos:end="1431:78">[<expr pos:start="1431:77" pos:end="1431:77"><literal type="number" pos:start="1431:77" pos:end="1431:77">0</literal></expr>]</index></name><operator pos:start="1431:79" pos:end="1431:80">-&gt;</operator><name pos:start="1431:81" pos:end="1431:82">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1433:13" pos:end="1433:18"><block_content pos:start="1433:13" pos:end="1433:18">

            <break pos:start="1433:13" pos:end="1433:18">break;</break></block_content></block></if></if_stmt>



        <comment type="block" pos:start="1437:9" pos:end="1437:60">/* read a frame from it and output it in the fifo */</comment>

        <expr_stmt pos:start="1439:9" pos:end="1439:41"><expr pos:start="1439:9" pos:end="1439:40"><name pos:start="1439:9" pos:end="1439:10">is</name> <operator pos:start="1439:12" pos:end="1439:12">=</operator> <name pos:start="1439:14" pos:end="1439:36"><name pos:start="1439:14" pos:end="1439:24">input_files</name><index pos:start="1439:25" pos:end="1439:36">[<expr pos:start="1439:26" pos:end="1439:35"><name pos:start="1439:26" pos:end="1439:35">file_index</name></expr>]</index></name><operator pos:start="1439:37" pos:end="1439:37">.</operator><name pos:start="1439:38" pos:end="1439:40">ctx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="1441:9" pos:end="1441:37"><expr pos:start="1441:9" pos:end="1441:36"><name pos:start="1441:9" pos:end="1441:11">ret</name><operator pos:start="1441:12" pos:end="1441:12">=</operator> <call pos:start="1441:14" pos:end="1441:36"><name pos:start="1441:14" pos:end="1441:26">av_read_frame</name><argument_list pos:start="1441:27" pos:end="1441:36">(<argument pos:start="1441:28" pos:end="1441:29"><expr pos:start="1441:28" pos:end="1441:29"><name pos:start="1441:28" pos:end="1441:29">is</name></expr></argument>, <argument pos:start="1441:32" pos:end="1441:35"><expr pos:start="1441:32" pos:end="1441:35"><operator pos:start="1441:32" pos:end="1441:32">&amp;</operator><name pos:start="1441:33" pos:end="1441:35">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1443:9" pos:end="1451:9"><if pos:start="1443:9" pos:end="1451:9">if<condition pos:start="1443:11" pos:end="1443:34">(<expr pos:start="1443:12" pos:end="1443:33"><name pos:start="1443:12" pos:end="1443:14">ret</name> <operator pos:start="1443:16" pos:end="1443:17">==</operator> <call pos:start="1443:19" pos:end="1443:33"><name pos:start="1443:19" pos:end="1443:25">AVERROR</name><argument_list pos:start="1443:26" pos:end="1443:33">(<argument pos:start="1443:27" pos:end="1443:32"><expr pos:start="1443:27" pos:end="1443:32"><name pos:start="1443:27" pos:end="1443:32">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="1443:35" pos:end="1451:9">{<block_content pos:start="1445:13" pos:end="1449:21">

            <expr_stmt pos:start="1445:13" pos:end="1445:36"><expr pos:start="1445:13" pos:end="1445:35"><name pos:start="1445:13" pos:end="1445:33"><name pos:start="1445:13" pos:end="1445:21">no_packet</name><index pos:start="1445:22" pos:end="1445:33">[<expr pos:start="1445:23" pos:end="1445:32"><name pos:start="1445:23" pos:end="1445:32">file_index</name></expr>]</index></name><operator pos:start="1445:34" pos:end="1445:34">=</operator><literal type="number" pos:start="1445:35" pos:end="1445:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="1447:13" pos:end="1447:30"><expr pos:start="1447:13" pos:end="1447:29"><name pos:start="1447:13" pos:end="1447:27">no_packet_count</name><operator pos:start="1447:28" pos:end="1447:29">++</operator></expr>;</expr_stmt>

            <continue pos:start="1449:13" pos:end="1449:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="1453:9" pos:end="1465:9"><if pos:start="1453:9" pos:end="1465:9">if <condition pos:start="1453:12" pos:end="1453:20">(<expr pos:start="1453:13" pos:end="1453:19"><name pos:start="1453:13" pos:end="1453:15">ret</name> <operator pos:start="1453:17" pos:end="1453:17">&lt;</operator> <literal type="number" pos:start="1453:19" pos:end="1453:19">0</literal></expr>)</condition> <block pos:start="1453:22" pos:end="1465:9">{<block_content pos:start="1455:13" pos:end="1463:25">

            <expr_stmt pos:start="1455:13" pos:end="1455:52"><expr pos:start="1455:13" pos:end="1455:51"><name pos:start="1455:13" pos:end="1455:35"><name pos:start="1455:13" pos:end="1455:23">input_files</name><index pos:start="1455:24" pos:end="1455:35">[<expr pos:start="1455:25" pos:end="1455:34"><name pos:start="1455:25" pos:end="1455:34">file_index</name></expr>]</index></name><operator pos:start="1455:36" pos:end="1455:36">.</operator><name pos:start="1455:37" pos:end="1455:47">eof_reached</name> <operator pos:start="1455:49" pos:end="1455:49">=</operator> <literal type="number" pos:start="1455:51" pos:end="1455:51">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1457:13" pos:end="1463:25"><if pos:start="1457:13" pos:end="1459:22">if <condition pos:start="1457:16" pos:end="1457:29">(<expr pos:start="1457:17" pos:end="1457:28"><name pos:start="1457:17" pos:end="1457:28">opt_shortest</name></expr>)</condition><block type="pseudo" pos:start="1459:17" pos:end="1459:22"><block_content pos:start="1459:17" pos:end="1459:22">

                <break pos:start="1459:17" pos:end="1459:22">break;</break></block_content></block></if>

            <else pos:start="1461:13" pos:end="1463:25">else<block type="pseudo" pos:start="1463:17" pos:end="1463:25"><block_content pos:start="1463:17" pos:end="1463:25">

                <continue pos:start="1463:17" pos:end="1463:25">continue;</continue></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="1469:9" pos:end="1469:26"><expr pos:start="1469:9" pos:end="1469:25"><name pos:start="1469:9" pos:end="1469:23">no_packet_count</name><operator pos:start="1469:24" pos:end="1469:24">=</operator><literal type="number" pos:start="1469:25" pos:end="1469:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1471:9" pos:end="1471:48"><expr pos:start="1471:9" pos:end="1471:47"><call pos:start="1471:9" pos:end="1471:47"><name pos:start="1471:9" pos:end="1471:14">memset</name><argument_list pos:start="1471:15" pos:end="1471:47">(<argument pos:start="1471:16" pos:end="1471:24"><expr pos:start="1471:16" pos:end="1471:24"><name pos:start="1471:16" pos:end="1471:24">no_packet</name></expr></argument>, <argument pos:start="1471:27" pos:end="1471:27"><expr pos:start="1471:27" pos:end="1471:27"><literal type="number" pos:start="1471:27" pos:end="1471:27">0</literal></expr></argument>, <argument pos:start="1471:30" pos:end="1471:46"><expr pos:start="1471:30" pos:end="1471:46"><sizeof pos:start="1471:30" pos:end="1471:46">sizeof<argument_list pos:start="1471:36" pos:end="1471:46">(<argument pos:start="1471:37" pos:end="1471:45"><expr pos:start="1471:37" pos:end="1471:45"><name pos:start="1471:37" pos:end="1471:45">no_packet</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="1475:9" pos:end="1481:9"><if pos:start="1475:9" pos:end="1481:9">if <condition pos:start="1475:12" pos:end="1475:24">(<expr pos:start="1475:13" pos:end="1475:23"><name pos:start="1475:13" pos:end="1475:23">do_pkt_dump</name></expr>)</condition> <block pos:start="1475:26" pos:end="1481:9">{<block_content pos:start="1477:13" pos:end="1479:60">

            <expr_stmt pos:start="1477:13" pos:end="1479:60"><expr pos:start="1477:13" pos:end="1479:59"><call pos:start="1477:13" pos:end="1479:59"><name pos:start="1477:13" pos:end="1477:28">av_pkt_dump_log2</name><argument_list pos:start="1477:29" pos:end="1479:59">(<argument pos:start="1477:30" pos:end="1477:33"><expr pos:start="1477:30" pos:end="1477:33"><name pos:start="1477:30" pos:end="1477:33">NULL</name></expr></argument>, <argument pos:start="1477:36" pos:end="1477:47"><expr pos:start="1477:36" pos:end="1477:47"><name pos:start="1477:36" pos:end="1477:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="1477:50" pos:end="1477:53"><expr pos:start="1477:50" pos:end="1477:53"><operator pos:start="1477:50" pos:end="1477:50">&amp;</operator><name pos:start="1477:51" pos:end="1477:53">pkt</name></expr></argument>, <argument pos:start="1477:56" pos:end="1477:66"><expr pos:start="1477:56" pos:end="1477:66"><name pos:start="1477:56" pos:end="1477:66">do_hex_dump</name></expr></argument>,

                             <argument pos:start="1479:30" pos:end="1479:58"><expr pos:start="1479:30" pos:end="1479:58"><name pos:start="1479:30" pos:end="1479:58"><name pos:start="1479:30" pos:end="1479:31">is</name><operator pos:start="1479:32" pos:end="1479:33">-&gt;</operator><name pos:start="1479:34" pos:end="1479:40">streams</name><index pos:start="1479:41" pos:end="1479:58">[<expr pos:start="1479:42" pos:end="1479:57"><name pos:start="1479:42" pos:end="1479:57"><name pos:start="1479:42" pos:end="1479:44">pkt</name><operator pos:start="1479:45" pos:end="1479:45">.</operator><name pos:start="1479:46" pos:end="1479:57">stream_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="1483:9" pos:end="1485:52">/* the following test is needed in case new streams appear

           dynamically in stream : we ignore them */</comment>

        <if_stmt pos:start="1487:9" pos:end="1489:32"><if pos:start="1487:9" pos:end="1489:32">if <condition pos:start="1487:12" pos:end="1487:72">(<expr pos:start="1487:13" pos:end="1487:71"><name pos:start="1487:13" pos:end="1487:28"><name pos:start="1487:13" pos:end="1487:15">pkt</name><operator pos:start="1487:16" pos:end="1487:16">.</operator><name pos:start="1487:17" pos:end="1487:28">stream_index</name></name> <operator pos:start="1487:30" pos:end="1487:31">&gt;=</operator> <name pos:start="1487:33" pos:end="1487:55"><name pos:start="1487:33" pos:end="1487:43">input_files</name><index pos:start="1487:44" pos:end="1487:55">[<expr pos:start="1487:45" pos:end="1487:54"><name pos:start="1487:45" pos:end="1487:54">file_index</name></expr>]</index></name><operator pos:start="1487:56" pos:end="1487:56">.</operator><name pos:start="1487:57" pos:end="1487:71"><name pos:start="1487:57" pos:end="1487:59">ctx</name><operator pos:start="1487:60" pos:end="1487:61">-&gt;</operator><name pos:start="1487:62" pos:end="1487:71">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="1489:13" pos:end="1489:32"><block_content pos:start="1489:13" pos:end="1489:32">

            <goto pos:start="1489:13" pos:end="1489:32">goto <name pos:start="1489:18" pos:end="1489:31">discard_packet</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1491:9" pos:end="1491:73"><expr pos:start="1491:9" pos:end="1491:72"><name pos:start="1491:9" pos:end="1491:17">ist_index</name> <operator pos:start="1491:19" pos:end="1491:19">=</operator> <name pos:start="1491:21" pos:end="1491:43"><name pos:start="1491:21" pos:end="1491:31">input_files</name><index pos:start="1491:32" pos:end="1491:43">[<expr pos:start="1491:33" pos:end="1491:42"><name pos:start="1491:33" pos:end="1491:42">file_index</name></expr>]</index></name><operator pos:start="1491:44" pos:end="1491:44">.</operator><name pos:start="1491:45" pos:end="1491:53">ist_index</name> <operator pos:start="1491:55" pos:end="1491:55">+</operator> <name pos:start="1491:57" pos:end="1491:72"><name pos:start="1491:57" pos:end="1491:59">pkt</name><operator pos:start="1491:60" pos:end="1491:60">.</operator><name pos:start="1491:61" pos:end="1491:72">stream_index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1493:9" pos:end="1493:40"><expr pos:start="1493:9" pos:end="1493:39"><name pos:start="1493:9" pos:end="1493:11">ist</name> <operator pos:start="1493:13" pos:end="1493:13">=</operator> <operator pos:start="1493:15" pos:end="1493:15">&amp;</operator><name pos:start="1493:16" pos:end="1493:39"><name pos:start="1493:16" pos:end="1493:28">input_streams</name><index pos:start="1493:29" pos:end="1493:39">[<expr pos:start="1493:30" pos:end="1493:38"><name pos:start="1493:30" pos:end="1493:38">ist_index</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1495:9" pos:end="1497:32"><if pos:start="1495:9" pos:end="1497:32">if <condition pos:start="1495:12" pos:end="1495:25">(<expr pos:start="1495:13" pos:end="1495:24"><name pos:start="1495:13" pos:end="1495:24"><name pos:start="1495:13" pos:end="1495:15">ist</name><operator pos:start="1495:16" pos:end="1495:17">-&gt;</operator><name pos:start="1495:18" pos:end="1495:24">discard</name></name></expr>)</condition><block type="pseudo" pos:start="1497:13" pos:end="1497:32"><block_content pos:start="1497:13" pos:end="1497:32">

            <goto pos:start="1497:13" pos:end="1497:32">goto <name pos:start="1497:18" pos:end="1497:31">discard_packet</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="1501:9" pos:end="1503:112"><if pos:start="1501:9" pos:end="1503:112">if <condition pos:start="1501:12" pos:end="1501:38">(<expr pos:start="1501:13" pos:end="1501:37"><name pos:start="1501:13" pos:end="1501:19"><name pos:start="1501:13" pos:end="1501:15">pkt</name><operator pos:start="1501:16" pos:end="1501:16">.</operator><name pos:start="1501:17" pos:end="1501:19">dts</name></name> <operator pos:start="1501:21" pos:end="1501:22">!=</operator> <name pos:start="1501:24" pos:end="1501:37">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1503:13" pos:end="1503:112"><block_content pos:start="1503:13" pos:end="1503:112">

            <expr_stmt pos:start="1503:13" pos:end="1503:112"><expr pos:start="1503:13" pos:end="1503:111"><name pos:start="1503:13" pos:end="1503:19"><name pos:start="1503:13" pos:end="1503:15">pkt</name><operator pos:start="1503:16" pos:end="1503:16">.</operator><name pos:start="1503:17" pos:end="1503:19">dts</name></name> <operator pos:start="1503:21" pos:end="1503:22">+=</operator> <call pos:start="1503:24" pos:end="1503:111"><name pos:start="1503:24" pos:end="1503:35">av_rescale_q</name><argument_list pos:start="1503:36" pos:end="1503:111">(<argument pos:start="1503:37" pos:end="1503:74"><expr pos:start="1503:37" pos:end="1503:74"><name pos:start="1503:37" pos:end="1503:64"><name pos:start="1503:37" pos:end="1503:47">input_files</name><index pos:start="1503:48" pos:end="1503:64">[<expr pos:start="1503:49" pos:end="1503:63"><name pos:start="1503:49" pos:end="1503:63"><name pos:start="1503:49" pos:end="1503:51">ist</name><operator pos:start="1503:52" pos:end="1503:53">-&gt;</operator><name pos:start="1503:54" pos:end="1503:63">file_index</name></name></expr>]</index></name><operator pos:start="1503:65" pos:end="1503:65">.</operator><name pos:start="1503:66" pos:end="1503:74">ts_offset</name></expr></argument>, <argument pos:start="1503:77" pos:end="1503:90"><expr pos:start="1503:77" pos:end="1503:90"><name pos:start="1503:77" pos:end="1503:90">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1503:93" pos:end="1503:110"><expr pos:start="1503:93" pos:end="1503:110"><name pos:start="1503:93" pos:end="1503:110"><name pos:start="1503:93" pos:end="1503:95">ist</name><operator pos:start="1503:96" pos:end="1503:97">-&gt;</operator><name pos:start="1503:98" pos:end="1503:99">st</name><operator pos:start="1503:100" pos:end="1503:101">-&gt;</operator><name pos:start="1503:102" pos:end="1503:110">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="1505:9" pos:end="1507:112"><if pos:start="1505:9" pos:end="1507:112">if <condition pos:start="1505:12" pos:end="1505:38">(<expr pos:start="1505:13" pos:end="1505:37"><name pos:start="1505:13" pos:end="1505:19"><name pos:start="1505:13" pos:end="1505:15">pkt</name><operator pos:start="1505:16" pos:end="1505:16">.</operator><name pos:start="1505:17" pos:end="1505:19">pts</name></name> <operator pos:start="1505:21" pos:end="1505:22">!=</operator> <name pos:start="1505:24" pos:end="1505:37">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1507:13" pos:end="1507:112"><block_content pos:start="1507:13" pos:end="1507:112">

            <expr_stmt pos:start="1507:13" pos:end="1507:112"><expr pos:start="1507:13" pos:end="1507:111"><name pos:start="1507:13" pos:end="1507:19"><name pos:start="1507:13" pos:end="1507:15">pkt</name><operator pos:start="1507:16" pos:end="1507:16">.</operator><name pos:start="1507:17" pos:end="1507:19">pts</name></name> <operator pos:start="1507:21" pos:end="1507:22">+=</operator> <call pos:start="1507:24" pos:end="1507:111"><name pos:start="1507:24" pos:end="1507:35">av_rescale_q</name><argument_list pos:start="1507:36" pos:end="1507:111">(<argument pos:start="1507:37" pos:end="1507:74"><expr pos:start="1507:37" pos:end="1507:74"><name pos:start="1507:37" pos:end="1507:64"><name pos:start="1507:37" pos:end="1507:47">input_files</name><index pos:start="1507:48" pos:end="1507:64">[<expr pos:start="1507:49" pos:end="1507:63"><name pos:start="1507:49" pos:end="1507:63"><name pos:start="1507:49" pos:end="1507:51">ist</name><operator pos:start="1507:52" pos:end="1507:53">-&gt;</operator><name pos:start="1507:54" pos:end="1507:63">file_index</name></name></expr>]</index></name><operator pos:start="1507:65" pos:end="1507:65">.</operator><name pos:start="1507:66" pos:end="1507:74">ts_offset</name></expr></argument>, <argument pos:start="1507:77" pos:end="1507:90"><expr pos:start="1507:77" pos:end="1507:90"><name pos:start="1507:77" pos:end="1507:90">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1507:93" pos:end="1507:110"><expr pos:start="1507:93" pos:end="1507:110"><name pos:start="1507:93" pos:end="1507:110"><name pos:start="1507:93" pos:end="1507:95">ist</name><operator pos:start="1507:96" pos:end="1507:97">-&gt;</operator><name pos:start="1507:98" pos:end="1507:99">st</name><operator pos:start="1507:100" pos:end="1507:101">-&gt;</operator><name pos:start="1507:102" pos:end="1507:110">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="1511:9" pos:end="1521:9"><if pos:start="1511:9" pos:end="1521:9">if <condition pos:start="1511:12" pos:end="1511:26">(<expr pos:start="1511:13" pos:end="1511:25"><name pos:start="1511:13" pos:end="1511:25"><name pos:start="1511:13" pos:end="1511:15">ist</name><operator pos:start="1511:16" pos:end="1511:17">-&gt;</operator><name pos:start="1511:18" pos:end="1511:25">ts_scale</name></name></expr>)</condition> <block pos:start="1511:28" pos:end="1521:9">{<block_content pos:start="1513:13" pos:end="1519:41">

            <if_stmt pos:start="1513:13" pos:end="1515:41"><if pos:start="1513:13" pos:end="1515:41">if<condition pos:start="1513:15" pos:end="1513:41">(<expr pos:start="1513:16" pos:end="1513:40"><name pos:start="1513:16" pos:end="1513:22"><name pos:start="1513:16" pos:end="1513:18">pkt</name><operator pos:start="1513:19" pos:end="1513:19">.</operator><name pos:start="1513:20" pos:end="1513:22">pts</name></name> <operator pos:start="1513:24" pos:end="1513:25">!=</operator> <name pos:start="1513:27" pos:end="1513:40">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1515:17" pos:end="1515:41"><block_content pos:start="1515:17" pos:end="1515:41">

                <expr_stmt pos:start="1515:17" pos:end="1515:41"><expr pos:start="1515:17" pos:end="1515:40"><name pos:start="1515:17" pos:end="1515:23"><name pos:start="1515:17" pos:end="1515:19">pkt</name><operator pos:start="1515:20" pos:end="1515:20">.</operator><name pos:start="1515:21" pos:end="1515:23">pts</name></name> <operator pos:start="1515:25" pos:end="1515:26">*=</operator> <name pos:start="1515:28" pos:end="1515:40"><name pos:start="1515:28" pos:end="1515:30">ist</name><operator pos:start="1515:31" pos:end="1515:32">-&gt;</operator><name pos:start="1515:33" pos:end="1515:40">ts_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1517:13" pos:end="1519:41"><if pos:start="1517:13" pos:end="1519:41">if<condition pos:start="1517:15" pos:end="1517:41">(<expr pos:start="1517:16" pos:end="1517:40"><name pos:start="1517:16" pos:end="1517:22"><name pos:start="1517:16" pos:end="1517:18">pkt</name><operator pos:start="1517:19" pos:end="1517:19">.</operator><name pos:start="1517:20" pos:end="1517:22">dts</name></name> <operator pos:start="1517:24" pos:end="1517:25">!=</operator> <name pos:start="1517:27" pos:end="1517:40">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1519:17" pos:end="1519:41"><block_content pos:start="1519:17" pos:end="1519:41">

                <expr_stmt pos:start="1519:17" pos:end="1519:41"><expr pos:start="1519:17" pos:end="1519:40"><name pos:start="1519:17" pos:end="1519:23"><name pos:start="1519:17" pos:end="1519:19">pkt</name><operator pos:start="1519:20" pos:end="1519:20">.</operator><name pos:start="1519:21" pos:end="1519:23">dts</name></name> <operator pos:start="1519:25" pos:end="1519:26">*=</operator> <name pos:start="1519:28" pos:end="1519:40"><name pos:start="1519:28" pos:end="1519:30">ist</name><operator pos:start="1519:31" pos:end="1519:32">-&gt;</operator><name pos:start="1519:33" pos:end="1519:40">ts_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="1525:1" pos:end="1525:169">//        fprintf(stderr, "next:%"PRId64" dts:%"PRId64" off:%"PRId64" %d\n", ist-&gt;next_pts, pkt.dts, input_files[ist-&gt;file_index].ts_offset, ist-&gt;st-&gt;codec-&gt;codec_type);</comment>

        <if_stmt pos:start="1527:9" pos:end="1553:9"><if pos:start="1527:9" pos:end="1553:9">if <condition pos:start="1527:12" pos:end="1529:55">(<expr pos:start="1527:13" pos:end="1529:54"><name pos:start="1527:13" pos:end="1527:19"><name pos:start="1527:13" pos:end="1527:15">pkt</name><operator pos:start="1527:16" pos:end="1527:16">.</operator><name pos:start="1527:17" pos:end="1527:19">dts</name></name> <operator pos:start="1527:21" pos:end="1527:22">!=</operator> <name pos:start="1527:24" pos:end="1527:37">AV_NOPTS_VALUE</name> <operator pos:start="1527:39" pos:end="1527:40">&amp;&amp;</operator> <name pos:start="1527:42" pos:end="1527:54"><name pos:start="1527:42" pos:end="1527:44">ist</name><operator pos:start="1527:45" pos:end="1527:46">-&gt;</operator><name pos:start="1527:47" pos:end="1527:54">next_pts</name></name> <operator pos:start="1527:56" pos:end="1527:57">!=</operator> <name pos:start="1527:59" pos:end="1527:72">AV_NOPTS_VALUE</name>

            <operator pos:start="1529:13" pos:end="1529:14">&amp;&amp;</operator> <operator pos:start="1529:16" pos:end="1529:16">(</operator><name pos:start="1529:17" pos:end="1529:34"><name pos:start="1529:17" pos:end="1529:18">is</name><operator pos:start="1529:19" pos:end="1529:20">-&gt;</operator><name pos:start="1529:21" pos:end="1529:27">iformat</name><operator pos:start="1529:28" pos:end="1529:29">-&gt;</operator><name pos:start="1529:30" pos:end="1529:34">flags</name></name> <operator pos:start="1529:36" pos:end="1529:36">&amp;</operator> <name pos:start="1529:38" pos:end="1529:53">AVFMT_TS_DISCONT</name><operator pos:start="1529:54" pos:end="1529:54">)</operator></expr>)</condition> <block pos:start="1529:57" pos:end="1553:9">{<block_content pos:start="1531:13" pos:end="1551:13">

            <decl_stmt pos:start="1531:13" pos:end="1531:87"><decl pos:start="1531:13" pos:end="1531:86"><type pos:start="1531:13" pos:end="1531:19"><name pos:start="1531:13" pos:end="1531:19">int64_t</name></type> <name pos:start="1531:21" pos:end="1531:27">pkt_dts</name><init pos:start="1531:28" pos:end="1531:86">= <expr pos:start="1531:30" pos:end="1531:86"><call pos:start="1531:30" pos:end="1531:86"><name pos:start="1531:30" pos:end="1531:41">av_rescale_q</name><argument_list pos:start="1531:42" pos:end="1531:86">(<argument pos:start="1531:43" pos:end="1531:49"><expr pos:start="1531:43" pos:end="1531:49"><name pos:start="1531:43" pos:end="1531:49"><name pos:start="1531:43" pos:end="1531:45">pkt</name><operator pos:start="1531:46" pos:end="1531:46">.</operator><name pos:start="1531:47" pos:end="1531:49">dts</name></name></expr></argument>, <argument pos:start="1531:52" pos:end="1531:69"><expr pos:start="1531:52" pos:end="1531:69"><name pos:start="1531:52" pos:end="1531:69"><name pos:start="1531:52" pos:end="1531:54">ist</name><operator pos:start="1531:55" pos:end="1531:56">-&gt;</operator><name pos:start="1531:57" pos:end="1531:58">st</name><operator pos:start="1531:59" pos:end="1531:60">-&gt;</operator><name pos:start="1531:61" pos:end="1531:69">time_base</name></name></expr></argument>, <argument pos:start="1531:72" pos:end="1531:85"><expr pos:start="1531:72" pos:end="1531:85"><name pos:start="1531:72" pos:end="1531:85">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1533:13" pos:end="1533:51"><decl pos:start="1533:13" pos:end="1533:50"><type pos:start="1533:13" pos:end="1533:19"><name pos:start="1533:13" pos:end="1533:19">int64_t</name></type> <name pos:start="1533:21" pos:end="1533:25">delta</name><init pos:start="1533:26" pos:end="1533:50">= <expr pos:start="1533:28" pos:end="1533:50"><name pos:start="1533:28" pos:end="1533:34">pkt_dts</name> <operator pos:start="1533:36" pos:end="1533:36">-</operator> <name pos:start="1533:38" pos:end="1533:50"><name pos:start="1533:38" pos:end="1533:40">ist</name><operator pos:start="1533:41" pos:end="1533:42">-&gt;</operator><name pos:start="1533:43" pos:end="1533:50">next_pts</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="1535:13" pos:end="1551:13"><if pos:start="1535:13" pos:end="1551:13">if<condition pos:start="1535:15" pos:end="1535:102">(<expr pos:start="1535:16" pos:end="1535:101"><operator pos:start="1535:16" pos:end="1535:16">(</operator><call pos:start="1535:17" pos:end="1535:28"><name pos:start="1535:17" pos:end="1535:21">FFABS</name><argument_list pos:start="1535:22" pos:end="1535:28">(<argument pos:start="1535:23" pos:end="1535:27"><expr pos:start="1535:23" pos:end="1535:27"><name pos:start="1535:23" pos:end="1535:27">delta</name></expr></argument>)</argument_list></call> <operator pos:start="1535:30" pos:end="1535:30">&gt;</operator> <literal type="number" pos:start="1535:32" pos:end="1535:34">1LL</literal><operator pos:start="1535:35" pos:end="1535:35">*</operator><name pos:start="1535:36" pos:end="1535:54">dts_delta_threshold</name><operator pos:start="1535:55" pos:end="1535:55">*</operator><name pos:start="1535:56" pos:end="1535:67">AV_TIME_BASE</name> <operator pos:start="1535:69" pos:end="1535:70">||</operator> <name pos:start="1535:72" pos:end="1535:78">pkt_dts</name><operator pos:start="1535:79" pos:end="1535:79">+</operator><literal type="number" pos:start="1535:80" pos:end="1535:80">1</literal><operator pos:start="1535:81" pos:end="1535:81">&lt;</operator><name pos:start="1535:82" pos:end="1535:89"><name pos:start="1535:82" pos:end="1535:84">ist</name><operator pos:start="1535:85" pos:end="1535:86">-&gt;</operator><name pos:start="1535:87" pos:end="1535:89">pts</name></name><operator pos:start="1535:90" pos:end="1535:90">)</operator><operator pos:start="1535:91" pos:end="1535:92">&amp;&amp;</operator> <operator pos:start="1535:94" pos:end="1535:94">!</operator><name pos:start="1535:95" pos:end="1535:101">copy_ts</name></expr>)</condition><block pos:start="1535:103" pos:end="1551:13">{<block_content pos:start="1537:17" pos:end="1549:86">

                <expr_stmt pos:start="1537:17" pos:end="1537:64"><expr pos:start="1537:17" pos:end="1537:63"><name pos:start="1537:17" pos:end="1537:44"><name pos:start="1537:17" pos:end="1537:27">input_files</name><index pos:start="1537:28" pos:end="1537:44">[<expr pos:start="1537:29" pos:end="1537:43"><name pos:start="1537:29" pos:end="1537:43"><name pos:start="1537:29" pos:end="1537:31">ist</name><operator pos:start="1537:32" pos:end="1537:33">-&gt;</operator><name pos:start="1537:34" pos:end="1537:43">file_index</name></name></expr>]</index></name><operator pos:start="1537:45" pos:end="1537:45">.</operator><name pos:start="1537:46" pos:end="1537:54">ts_offset</name> <operator pos:start="1537:56" pos:end="1537:57">-=</operator> <name pos:start="1537:59" pos:end="1537:63">delta</name></expr>;</expr_stmt>

                <if_stmt pos:start="1539:17" pos:end="1543:75"><if pos:start="1539:17" pos:end="1543:75">if <condition pos:start="1539:20" pos:end="1539:32">(<expr pos:start="1539:21" pos:end="1539:31"><name pos:start="1539:21" pos:end="1539:27">verbose</name> <operator pos:start="1539:29" pos:end="1539:29">&gt;</operator> <literal type="number" pos:start="1539:31" pos:end="1539:31">2</literal></expr>)</condition><block type="pseudo" pos:start="1541:21" pos:end="1543:75"><block_content pos:start="1541:21" pos:end="1543:75">

                    <expr_stmt pos:start="1541:21" pos:end="1543:75"><expr pos:start="1541:21" pos:end="1543:74"><call pos:start="1541:21" pos:end="1543:74"><name pos:start="1541:21" pos:end="1541:27">fprintf</name><argument_list pos:start="1541:28" pos:end="1543:74">(<argument pos:start="1541:29" pos:end="1541:34"><expr pos:start="1541:29" pos:end="1541:34"><name pos:start="1541:29" pos:end="1541:34">stderr</name></expr></argument>, <argument pos:start="1541:37" pos:end="1541:96"><expr pos:start="1541:37" pos:end="1541:96"><literal type="string" pos:start="1541:37" pos:end="1541:63">"timestamp discontinuity %"</literal><name pos:start="1541:64" pos:end="1541:69">PRId64</name><literal type="string" pos:start="1541:70" pos:end="1541:86">", new offset= %"</literal><name pos:start="1541:87" pos:end="1541:92">PRId64</name><literal type="string" pos:start="1541:93" pos:end="1541:96">"\n"</literal></expr></argument>,

                            <argument pos:start="1543:29" pos:end="1543:33"><expr pos:start="1543:29" pos:end="1543:33"><name pos:start="1543:29" pos:end="1543:33">delta</name></expr></argument>, <argument pos:start="1543:36" pos:end="1543:73"><expr pos:start="1543:36" pos:end="1543:73"><name pos:start="1543:36" pos:end="1543:63"><name pos:start="1543:36" pos:end="1543:46">input_files</name><index pos:start="1543:47" pos:end="1543:63">[<expr pos:start="1543:48" pos:end="1543:62"><name pos:start="1543:48" pos:end="1543:62"><name pos:start="1543:48" pos:end="1543:50">ist</name><operator pos:start="1543:51" pos:end="1543:52">-&gt;</operator><name pos:start="1543:53" pos:end="1543:62">file_index</name></name></expr>]</index></name><operator pos:start="1543:64" pos:end="1543:64">.</operator><name pos:start="1543:65" pos:end="1543:73">ts_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1545:17" pos:end="1545:82"><expr pos:start="1545:17" pos:end="1545:81"><name pos:start="1545:17" pos:end="1545:23"><name pos:start="1545:17" pos:end="1545:19">pkt</name><operator pos:start="1545:20" pos:end="1545:20">.</operator><name pos:start="1545:21" pos:end="1545:23">dts</name></name><operator pos:start="1545:24" pos:end="1545:25">-=</operator> <call pos:start="1545:27" pos:end="1545:81"><name pos:start="1545:27" pos:end="1545:38">av_rescale_q</name><argument_list pos:start="1545:39" pos:end="1545:81">(<argument pos:start="1545:40" pos:end="1545:44"><expr pos:start="1545:40" pos:end="1545:44"><name pos:start="1545:40" pos:end="1545:44">delta</name></expr></argument>, <argument pos:start="1545:47" pos:end="1545:60"><expr pos:start="1545:47" pos:end="1545:60"><name pos:start="1545:47" pos:end="1545:60">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1545:63" pos:end="1545:80"><expr pos:start="1545:63" pos:end="1545:80"><name pos:start="1545:63" pos:end="1545:80"><name pos:start="1545:63" pos:end="1545:65">ist</name><operator pos:start="1545:66" pos:end="1545:67">-&gt;</operator><name pos:start="1545:68" pos:end="1545:69">st</name><operator pos:start="1545:70" pos:end="1545:71">-&gt;</operator><name pos:start="1545:72" pos:end="1545:80">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1547:17" pos:end="1549:86"><if pos:start="1547:17" pos:end="1549:86">if<condition pos:start="1547:19" pos:end="1547:45">(<expr pos:start="1547:20" pos:end="1547:44"><name pos:start="1547:20" pos:end="1547:26"><name pos:start="1547:20" pos:end="1547:22">pkt</name><operator pos:start="1547:23" pos:end="1547:23">.</operator><name pos:start="1547:24" pos:end="1547:26">pts</name></name> <operator pos:start="1547:28" pos:end="1547:29">!=</operator> <name pos:start="1547:31" pos:end="1547:44">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="1549:21" pos:end="1549:86"><block_content pos:start="1549:21" pos:end="1549:86">

                    <expr_stmt pos:start="1549:21" pos:end="1549:86"><expr pos:start="1549:21" pos:end="1549:85"><name pos:start="1549:21" pos:end="1549:27"><name pos:start="1549:21" pos:end="1549:23">pkt</name><operator pos:start="1549:24" pos:end="1549:24">.</operator><name pos:start="1549:25" pos:end="1549:27">pts</name></name><operator pos:start="1549:28" pos:end="1549:29">-=</operator> <call pos:start="1549:31" pos:end="1549:85"><name pos:start="1549:31" pos:end="1549:42">av_rescale_q</name><argument_list pos:start="1549:43" pos:end="1549:85">(<argument pos:start="1549:44" pos:end="1549:48"><expr pos:start="1549:44" pos:end="1549:48"><name pos:start="1549:44" pos:end="1549:48">delta</name></expr></argument>, <argument pos:start="1549:51" pos:end="1549:64"><expr pos:start="1549:51" pos:end="1549:64"><name pos:start="1549:51" pos:end="1549:64">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="1549:67" pos:end="1549:84"><expr pos:start="1549:67" pos:end="1549:84"><name pos:start="1549:67" pos:end="1549:84"><name pos:start="1549:67" pos:end="1549:69">ist</name><operator pos:start="1549:70" pos:end="1549:71">-&gt;</operator><name pos:start="1549:72" pos:end="1549:73">st</name><operator pos:start="1549:74" pos:end="1549:75">-&gt;</operator><name pos:start="1549:76" pos:end="1549:84">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="1557:9" pos:end="1557:48">/* finish if recording time exhausted */</comment>

        <if_stmt pos:start="1559:9" pos:end="1575:9"><if pos:start="1559:9" pos:end="1575:9">if <condition pos:start="1559:12" pos:end="1569:18">(<expr pos:start="1559:13" pos:end="1569:17"><name pos:start="1559:13" pos:end="1559:26">recording_time</name> <operator pos:start="1559:28" pos:end="1559:29">!=</operator> <name pos:start="1559:31" pos:end="1559:39">INT64_MAX</name> <operator pos:start="1559:41" pos:end="1559:42">&amp;&amp;</operator>

            <operator pos:start="1561:13" pos:end="1561:13">(</operator><ternary pos:start="1561:14" pos:end="1567:110"><condition pos:start="1561:14" pos:end="1561:40"><expr pos:start="1561:14" pos:end="1561:38"><name pos:start="1561:14" pos:end="1561:20"><name pos:start="1561:14" pos:end="1561:16">pkt</name><operator pos:start="1561:17" pos:end="1561:17">.</operator><name pos:start="1561:18" pos:end="1561:20">pts</name></name> <operator pos:start="1561:22" pos:end="1561:23">!=</operator> <name pos:start="1561:25" pos:end="1561:38">AV_NOPTS_VALUE</name></expr> ?</condition><then pos:start="1563:17" pos:end="1563:113">

                <macro pos:start="1563:17" pos:end="1563:113"><name pos:start="1563:17" pos:end="1563:29">av_compare_ts</name><argument_list pos:start="1563:30" pos:end="1563:113">(<argument pos:start="1563:31" pos:end="1563:37">pkt.pts</argument>, <argument pos:start="1563:40" pos:end="1563:57">ist-&gt;st-&gt;time_base</argument>, <argument pos:start="1563:60" pos:end="1563:86">recording_time + start_time</argument>, <argument pos:start="1563:89" pos:end="1563:102">(AVRational){<literal type="number" pos:start="1563:102" pos:end="1563:102">1</literal></argument>, <argument pos:start="1563:105" pos:end="1563:112"><literal type="number" pos:start="1563:105" pos:end="1563:111">1000000</literal>}</argument>)</argument_list></macro>

                    </then><else pos:start="1565:21" pos:end="1567:110">:

                <macro pos:start="1567:17" pos:end="1567:110"><name pos:start="1567:17" pos:end="1567:29">av_compare_ts</name><argument_list pos:start="1567:30" pos:end="1567:110">(<argument pos:start="1567:31" pos:end="1567:38">ist-&gt;pts</argument>, <argument pos:start="1567:41" pos:end="1567:54">AV_TIME_BASE_Q</argument>, <argument pos:start="1567:57" pos:end="1567:83">recording_time + start_time</argument>, <argument pos:start="1567:86" pos:end="1567:99">(AVRational){<literal type="number" pos:start="1567:99" pos:end="1567:99">1</literal></argument>, <argument pos:start="1567:102" pos:end="1567:109"><literal type="number" pos:start="1567:102" pos:end="1567:108">1000000</literal>}</argument>)</argument_list></macro>

            <expr/></else></ternary><operator pos:start="1569:13" pos:end="1569:13">)</operator><operator pos:start="1569:14" pos:end="1569:15">&gt;=</operator> <literal type="number" pos:start="1569:17" pos:end="1569:17">0</literal></expr>)</condition> <block pos:start="1569:20" pos:end="1575:9">{<block_content pos:start="1571:13" pos:end="1573:32">

            <expr_stmt pos:start="1571:13" pos:end="1571:44"><expr pos:start="1571:13" pos:end="1571:43"><name pos:start="1571:13" pos:end="1571:39"><name pos:start="1571:13" pos:end="1571:15">ist</name><operator pos:start="1571:16" pos:end="1571:17">-&gt;</operator><name pos:start="1571:18" pos:end="1571:39">is_past_recording_time</name></name> <operator pos:start="1571:41" pos:end="1571:41">=</operator> <literal type="number" pos:start="1571:43" pos:end="1571:43">1</literal></expr>;</expr_stmt>

            <goto pos:start="1573:13" pos:end="1573:32">goto <name pos:start="1573:18" pos:end="1573:31">discard_packet</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="1579:9" pos:end="1579:93">//fprintf(stderr,"read #%d.%d size=%d\n", ist-&gt;file_index, ist-&gt;st-&gt;index, pkt.size);</comment>

        <if_stmt pos:start="1581:9" pos:end="1599:9"><if pos:start="1581:9" pos:end="1599:9">if <condition pos:start="1581:12" pos:end="1581:76">(<expr pos:start="1581:13" pos:end="1581:75"><call pos:start="1581:13" pos:end="1581:71"><name pos:start="1581:13" pos:end="1581:25">output_packet</name><argument_list pos:start="1581:26" pos:end="1581:71">(<argument pos:start="1581:27" pos:end="1581:29"><expr pos:start="1581:27" pos:end="1581:29"><name pos:start="1581:27" pos:end="1581:29">ist</name></expr></argument>, <argument pos:start="1581:32" pos:end="1581:40"><expr pos:start="1581:32" pos:end="1581:40"><name pos:start="1581:32" pos:end="1581:40">ist_index</name></expr></argument>, <argument pos:start="1581:43" pos:end="1581:51"><expr pos:start="1581:43" pos:end="1581:51"><name pos:start="1581:43" pos:end="1581:51">ost_table</name></expr></argument>, <argument pos:start="1581:54" pos:end="1581:64"><expr pos:start="1581:54" pos:end="1581:64"><name pos:start="1581:54" pos:end="1581:64">nb_ostreams</name></expr></argument>, <argument pos:start="1581:67" pos:end="1581:70"><expr pos:start="1581:67" pos:end="1581:70"><operator pos:start="1581:67" pos:end="1581:67">&amp;</operator><name pos:start="1581:68" pos:end="1581:70">pkt</name></expr></argument>)</argument_list></call> <operator pos:start="1581:73" pos:end="1581:73">&lt;</operator> <literal type="number" pos:start="1581:75" pos:end="1581:75">0</literal></expr>)</condition> <block pos:start="1581:78" pos:end="1599:9">{<block_content pos:start="1585:13" pos:end="1597:22">



            <if_stmt pos:start="1585:13" pos:end="1589:57"><if pos:start="1585:13" pos:end="1589:57">if <condition pos:start="1585:16" pos:end="1585:29">(<expr pos:start="1585:17" pos:end="1585:28"><name pos:start="1585:17" pos:end="1585:23">verbose</name> <operator pos:start="1585:25" pos:end="1585:26">&gt;=</operator> <literal type="number" pos:start="1585:28" pos:end="1585:28">0</literal></expr>)</condition><block type="pseudo" pos:start="1587:17" pos:end="1589:57"><block_content pos:start="1587:17" pos:end="1589:57">

                <expr_stmt pos:start="1587:17" pos:end="1589:57"><expr pos:start="1587:17" pos:end="1589:56"><call pos:start="1587:17" pos:end="1589:56"><name pos:start="1587:17" pos:end="1587:23">fprintf</name><argument_list pos:start="1587:24" pos:end="1589:56">(<argument pos:start="1587:25" pos:end="1587:30"><expr pos:start="1587:25" pos:end="1587:30"><name pos:start="1587:25" pos:end="1587:30">stderr</name></expr></argument>, <argument pos:start="1587:33" pos:end="1587:70"><expr pos:start="1587:33" pos:end="1587:70"><literal type="string" pos:start="1587:33" pos:end="1587:70">"Error while decoding stream #%d.%d\n"</literal></expr></argument>,

                        <argument pos:start="1589:25" pos:end="1589:39"><expr pos:start="1589:25" pos:end="1589:39"><name pos:start="1589:25" pos:end="1589:39"><name pos:start="1589:25" pos:end="1589:27">ist</name><operator pos:start="1589:28" pos:end="1589:29">-&gt;</operator><name pos:start="1589:30" pos:end="1589:39">file_index</name></name></expr></argument>, <argument pos:start="1589:42" pos:end="1589:55"><expr pos:start="1589:42" pos:end="1589:55"><name pos:start="1589:42" pos:end="1589:55"><name pos:start="1589:42" pos:end="1589:44">ist</name><operator pos:start="1589:45" pos:end="1589:46">-&gt;</operator><name pos:start="1589:47" pos:end="1589:48">st</name><operator pos:start="1589:49" pos:end="1589:50">-&gt;</operator><name pos:start="1589:51" pos:end="1589:55">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1591:13" pos:end="1593:31"><if pos:start="1591:13" pos:end="1593:31">if <condition pos:start="1591:16" pos:end="1591:30">(<expr pos:start="1591:17" pos:end="1591:29"><name pos:start="1591:17" pos:end="1591:29">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="1593:17" pos:end="1593:31"><block_content pos:start="1593:17" pos:end="1593:31">

                <expr_stmt pos:start="1593:17" pos:end="1593:31"><expr pos:start="1593:17" pos:end="1593:30"><call pos:start="1593:17" pos:end="1593:30"><name pos:start="1593:17" pos:end="1593:27">ffmpeg_exit</name><argument_list pos:start="1593:28" pos:end="1593:30">(<argument pos:start="1593:29" pos:end="1593:29"><expr pos:start="1593:29" pos:end="1593:29"><literal type="number" pos:start="1593:29" pos:end="1593:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1595:13" pos:end="1595:33"><expr pos:start="1595:13" pos:end="1595:32"><call pos:start="1595:13" pos:end="1595:32"><name pos:start="1595:13" pos:end="1595:26">av_free_packet</name><argument_list pos:start="1595:27" pos:end="1595:32">(<argument pos:start="1595:28" pos:end="1595:31"><expr pos:start="1595:28" pos:end="1595:31"><operator pos:start="1595:28" pos:end="1595:28">&amp;</operator><name pos:start="1595:29" pos:end="1595:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1597:13" pos:end="1597:22">goto <name pos:start="1597:18" pos:end="1597:21">redo</name>;</goto>

        </block_content>}</block></if></if_stmt>



    <label pos:start="1603:5" pos:end="1603:19"><name pos:start="1603:5" pos:end="1603:18">discard_packet</name>:</label>

        <expr_stmt pos:start="1605:9" pos:end="1605:29"><expr pos:start="1605:9" pos:end="1605:28"><call pos:start="1605:9" pos:end="1605:28"><name pos:start="1605:9" pos:end="1605:22">av_free_packet</name><argument_list pos:start="1605:23" pos:end="1605:28">(<argument pos:start="1605:24" pos:end="1605:27"><expr pos:start="1605:24" pos:end="1605:27"><operator pos:start="1605:24" pos:end="1605:24">&amp;</operator><name pos:start="1605:25" pos:end="1605:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="1609:9" pos:end="1609:75">/* dump report by using the output first video and audio streams */</comment>

        <expr_stmt pos:start="1611:9" pos:end="1611:62"><expr pos:start="1611:9" pos:end="1611:61"><call pos:start="1611:9" pos:end="1611:61"><name pos:start="1611:9" pos:end="1611:20">print_report</name><argument_list pos:start="1611:21" pos:end="1611:61">(<argument pos:start="1611:22" pos:end="1611:33"><expr pos:start="1611:22" pos:end="1611:33"><name pos:start="1611:22" pos:end="1611:33">output_files</name></expr></argument>, <argument pos:start="1611:36" pos:end="1611:44"><expr pos:start="1611:36" pos:end="1611:44"><name pos:start="1611:36" pos:end="1611:44">ost_table</name></expr></argument>, <argument pos:start="1611:47" pos:end="1611:57"><expr pos:start="1611:47" pos:end="1611:57"><name pos:start="1611:47" pos:end="1611:57">nb_ostreams</name></expr></argument>, <argument pos:start="1611:60" pos:end="1611:60"><expr pos:start="1611:60" pos:end="1611:60"><literal type="number" pos:start="1611:60" pos:end="1611:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1617:5" pos:end="1617:65">/* at the end of stream, we must flush the decoder buffers */</comment>

    <for pos:start="1619:5" pos:end="1629:5">for <control pos:start="1619:9" pos:end="1619:42">(<init pos:start="1619:10" pos:end="1619:15"><expr pos:start="1619:10" pos:end="1619:14"><name pos:start="1619:10" pos:end="1619:10">i</name> <operator pos:start="1619:12" pos:end="1619:12">=</operator> <literal type="number" pos:start="1619:14" pos:end="1619:14">0</literal></expr>;</init> <condition pos:start="1619:17" pos:end="1619:37"><expr pos:start="1619:17" pos:end="1619:36"><name pos:start="1619:17" pos:end="1619:17">i</name> <operator pos:start="1619:19" pos:end="1619:19">&lt;</operator> <name pos:start="1619:21" pos:end="1619:36">nb_input_streams</name></expr>;</condition> <incr pos:start="1619:39" pos:end="1619:41"><expr pos:start="1619:39" pos:end="1619:41"><name pos:start="1619:39" pos:end="1619:39">i</name><operator pos:start="1619:40" pos:end="1619:41">++</operator></expr></incr>)</control> <block pos:start="1619:44" pos:end="1629:5">{<block_content pos:start="1621:9" pos:end="1627:9">

        <expr_stmt pos:start="1621:9" pos:end="1621:32"><expr pos:start="1621:9" pos:end="1621:31"><name pos:start="1621:9" pos:end="1621:11">ist</name> <operator pos:start="1621:13" pos:end="1621:13">=</operator> <operator pos:start="1621:15" pos:end="1621:15">&amp;</operator><name pos:start="1621:16" pos:end="1621:31"><name pos:start="1621:16" pos:end="1621:28">input_streams</name><index pos:start="1621:29" pos:end="1621:31">[<expr pos:start="1621:30" pos:end="1621:30"><name pos:start="1621:30" pos:end="1621:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1623:9" pos:end="1627:9"><if pos:start="1623:9" pos:end="1627:9">if <condition pos:start="1623:12" pos:end="1623:33">(<expr pos:start="1623:13" pos:end="1623:32"><name pos:start="1623:13" pos:end="1623:32"><name pos:start="1623:13" pos:end="1623:15">ist</name><operator pos:start="1623:16" pos:end="1623:17">-&gt;</operator><name pos:start="1623:18" pos:end="1623:32">decoding_needed</name></name></expr>)</condition> <block pos:start="1623:35" pos:end="1627:9">{<block_content pos:start="1625:13" pos:end="1625:64">

            <expr_stmt pos:start="1625:13" pos:end="1625:64"><expr pos:start="1625:13" pos:end="1625:63"><call pos:start="1625:13" pos:end="1625:63"><name pos:start="1625:13" pos:end="1625:25">output_packet</name><argument_list pos:start="1625:26" pos:end="1625:63">(<argument pos:start="1625:27" pos:end="1625:29"><expr pos:start="1625:27" pos:end="1625:29"><name pos:start="1625:27" pos:end="1625:29">ist</name></expr></argument>, <argument pos:start="1625:32" pos:end="1625:32"><expr pos:start="1625:32" pos:end="1625:32"><name pos:start="1625:32" pos:end="1625:32">i</name></expr></argument>, <argument pos:start="1625:35" pos:end="1625:43"><expr pos:start="1625:35" pos:end="1625:43"><name pos:start="1625:35" pos:end="1625:43">ost_table</name></expr></argument>, <argument pos:start="1625:46" pos:end="1625:56"><expr pos:start="1625:46" pos:end="1625:56"><name pos:start="1625:46" pos:end="1625:56">nb_ostreams</name></expr></argument>, <argument pos:start="1625:59" pos:end="1625:62"><expr pos:start="1625:59" pos:end="1625:62"><name pos:start="1625:59" pos:end="1625:62">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="1633:5" pos:end="1633:16"><expr pos:start="1633:5" pos:end="1633:15"><call pos:start="1633:5" pos:end="1633:15"><name pos:start="1633:5" pos:end="1633:13">term_exit</name><argument_list pos:start="1633:14" pos:end="1633:15">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="1637:5" pos:end="1637:52">/* write the trailer if needed and close file */</comment>

    <for pos:start="1639:5" pos:end="1645:5">for<control pos:start="1639:8" pos:end="1639:34">(<init pos:start="1639:9" pos:end="1639:12"><expr pos:start="1639:9" pos:end="1639:11"><name pos:start="1639:9" pos:end="1639:9">i</name><operator pos:start="1639:10" pos:end="1639:10">=</operator><literal type="number" pos:start="1639:11" pos:end="1639:11">0</literal></expr>;</init><condition pos:start="1639:13" pos:end="1639:30"><expr pos:start="1639:13" pos:end="1639:29"><name pos:start="1639:13" pos:end="1639:13">i</name><operator pos:start="1639:14" pos:end="1639:14">&lt;</operator><name pos:start="1639:15" pos:end="1639:29">nb_output_files</name></expr>;</condition><incr pos:start="1639:31" pos:end="1639:33"><expr pos:start="1639:31" pos:end="1639:33"><name pos:start="1639:31" pos:end="1639:31">i</name><operator pos:start="1639:32" pos:end="1639:33">++</operator></expr></incr>)</control> <block pos:start="1639:36" pos:end="1645:5">{<block_content pos:start="1641:9" pos:end="1643:29">

        <expr_stmt pos:start="1641:9" pos:end="1641:29"><expr pos:start="1641:9" pos:end="1641:28"><name pos:start="1641:9" pos:end="1641:10">os</name> <operator pos:start="1641:12" pos:end="1641:12">=</operator> <name pos:start="1641:14" pos:end="1641:28"><name pos:start="1641:14" pos:end="1641:25">output_files</name><index pos:start="1641:26" pos:end="1641:28">[<expr pos:start="1641:27" pos:end="1641:27"><name pos:start="1641:27" pos:end="1641:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1643:9" pos:end="1643:29"><expr pos:start="1643:9" pos:end="1643:28"><call pos:start="1643:9" pos:end="1643:28"><name pos:start="1643:9" pos:end="1643:24">av_write_trailer</name><argument_list pos:start="1643:25" pos:end="1643:28">(<argument pos:start="1643:26" pos:end="1643:27"><expr pos:start="1643:26" pos:end="1643:27"><name pos:start="1643:26" pos:end="1643:27">os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1649:5" pos:end="1649:64">/* dump report by using the first video and audio streams */</comment>

    <expr_stmt pos:start="1651:5" pos:end="1651:58"><expr pos:start="1651:5" pos:end="1651:57"><call pos:start="1651:5" pos:end="1651:57"><name pos:start="1651:5" pos:end="1651:16">print_report</name><argument_list pos:start="1651:17" pos:end="1651:57">(<argument pos:start="1651:18" pos:end="1651:29"><expr pos:start="1651:18" pos:end="1651:29"><name pos:start="1651:18" pos:end="1651:29">output_files</name></expr></argument>, <argument pos:start="1651:32" pos:end="1651:40"><expr pos:start="1651:32" pos:end="1651:40"><name pos:start="1651:32" pos:end="1651:40">ost_table</name></expr></argument>, <argument pos:start="1651:43" pos:end="1651:53"><expr pos:start="1651:43" pos:end="1651:53"><name pos:start="1651:43" pos:end="1651:53">nb_ostreams</name></expr></argument>, <argument pos:start="1651:56" pos:end="1651:56"><expr pos:start="1651:56" pos:end="1651:56"><literal type="number" pos:start="1651:56" pos:end="1651:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="1655:5" pos:end="1655:28">/* close each encoder */</comment>

    <for pos:start="1657:5" pos:end="1675:5">for<control pos:start="1657:8" pos:end="1657:30">(<init pos:start="1657:9" pos:end="1657:12"><expr pos:start="1657:9" pos:end="1657:11"><name pos:start="1657:9" pos:end="1657:9">i</name><operator pos:start="1657:10" pos:end="1657:10">=</operator><literal type="number" pos:start="1657:11" pos:end="1657:11">0</literal></expr>;</init><condition pos:start="1657:13" pos:end="1657:26"><expr pos:start="1657:13" pos:end="1657:25"><name pos:start="1657:13" pos:end="1657:13">i</name><operator pos:start="1657:14" pos:end="1657:14">&lt;</operator><name pos:start="1657:15" pos:end="1657:25">nb_ostreams</name></expr>;</condition><incr pos:start="1657:27" pos:end="1657:29"><expr pos:start="1657:27" pos:end="1657:29"><name pos:start="1657:27" pos:end="1657:27">i</name><operator pos:start="1657:28" pos:end="1657:29">++</operator></expr></incr>)</control> <block pos:start="1657:32" pos:end="1675:5">{<block_content pos:start="1659:9" pos:end="1674:0">

        <expr_stmt pos:start="1659:9" pos:end="1659:27"><expr pos:start="1659:9" pos:end="1659:26"><name pos:start="1659:9" pos:end="1659:11">ost</name> <operator pos:start="1659:13" pos:end="1659:13">=</operator> <name pos:start="1659:15" pos:end="1659:26"><name pos:start="1659:15" pos:end="1659:23">ost_table</name><index pos:start="1659:24" pos:end="1659:26">[<expr pos:start="1659:25" pos:end="1659:25"><name pos:start="1659:25" pos:end="1659:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1661:9" pos:end="1670:0"><if pos:start="1661:9" pos:end="1670:0">if <condition pos:start="1661:12" pos:end="1661:33">(<expr pos:start="1661:13" pos:end="1661:32"><name pos:start="1661:13" pos:end="1661:32"><name pos:start="1661:13" pos:end="1661:15">ost</name><operator pos:start="1661:16" pos:end="1661:17">-&gt;</operator><name pos:start="1661:18" pos:end="1661:32">encoding_needed</name></name></expr>)</condition> <block pos:start="1661:35" pos:end="1670:0">{<block_content pos:start="1663:13" pos:end="1665:42">

            <expr_stmt pos:start="1663:13" pos:end="1663:48"><expr pos:start="1663:13" pos:end="1663:47"><call pos:start="1663:13" pos:end="1663:47"><name pos:start="1663:13" pos:end="1663:20">av_freep</name><argument_list pos:start="1663:21" pos:end="1663:47">(<argument pos:start="1663:22" pos:end="1663:46"><expr pos:start="1663:22" pos:end="1663:46"><operator pos:start="1663:22" pos:end="1663:22">&amp;</operator><name pos:start="1663:23" pos:end="1663:46"><name pos:start="1663:23" pos:end="1663:25">ost</name><operator pos:start="1663:26" pos:end="1663:27">-&gt;</operator><name pos:start="1663:28" pos:end="1663:29">st</name><operator pos:start="1663:30" pos:end="1663:31">-&gt;</operator><name pos:start="1663:32" pos:end="1663:36">codec</name><operator pos:start="1663:37" pos:end="1663:38">-&gt;</operator><name pos:start="1663:39" pos:end="1663:46">stats_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1665:13" pos:end="1665:42"><expr pos:start="1665:13" pos:end="1665:41"><call pos:start="1665:13" pos:end="1665:41"><name pos:start="1665:13" pos:end="1665:25">avcodec_close</name><argument_list pos:start="1665:26" pos:end="1665:41">(<argument pos:start="1665:27" pos:end="1665:40"><expr pos:start="1665:27" pos:end="1665:40"><name pos:start="1665:27" pos:end="1665:40"><name pos:start="1665:27" pos:end="1665:29">ost</name><operator pos:start="1665:30" pos:end="1665:31">-&gt;</operator><name pos:start="1665:32" pos:end="1665:33">st</name><operator pos:start="1665:34" pos:end="1665:35">-&gt;</operator><name pos:start="1665:36" pos:end="1665:40">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:if pos:start="1669:1" pos:end="1669:19">#<cpp:directive pos:start="1669:2" pos:end="1669:3">if</cpp:directive> <expr pos:start="1669:5" pos:end="1669:19"><name pos:start="1669:5" pos:end="1669:19">CONFIG_AVFILTER</name></expr></cpp:if>

        <expr_stmt pos:start="1671:9" pos:end="1674:0"><expr pos:start="1671:9" pos:end="1671:40"><call pos:start="1671:9" pos:end="1671:40"><name pos:start="1671:9" pos:end="1671:27">avfilter_graph_free</name><argument_list pos:start="1671:28" pos:end="1671:40">(<argument pos:start="1671:29" pos:end="1671:39"><expr pos:start="1671:29" pos:end="1671:39"><operator pos:start="1671:29" pos:end="1671:29">&amp;</operator><name pos:start="1671:30" pos:end="1671:39"><name pos:start="1671:30" pos:end="1671:32">ost</name><operator pos:start="1671:33" pos:end="1671:34">-&gt;</operator><name pos:start="1671:35" pos:end="1671:39">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1673:1" pos:end="1673:6">#<cpp:directive pos:start="1673:2" pos:end="1673:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></for>



    <comment type="block" pos:start="1679:5" pos:end="1679:28">/* close each decoder */</comment>

    <for pos:start="1681:5" pos:end="1691:5">for <control pos:start="1681:9" pos:end="1681:42">(<init pos:start="1681:10" pos:end="1681:15"><expr pos:start="1681:10" pos:end="1681:14"><name pos:start="1681:10" pos:end="1681:10">i</name> <operator pos:start="1681:12" pos:end="1681:12">=</operator> <literal type="number" pos:start="1681:14" pos:end="1681:14">0</literal></expr>;</init> <condition pos:start="1681:17" pos:end="1681:37"><expr pos:start="1681:17" pos:end="1681:36"><name pos:start="1681:17" pos:end="1681:17">i</name> <operator pos:start="1681:19" pos:end="1681:19">&lt;</operator> <name pos:start="1681:21" pos:end="1681:36">nb_input_streams</name></expr>;</condition> <incr pos:start="1681:39" pos:end="1681:41"><expr pos:start="1681:39" pos:end="1681:41"><name pos:start="1681:39" pos:end="1681:39">i</name><operator pos:start="1681:40" pos:end="1681:41">++</operator></expr></incr>)</control> <block pos:start="1681:44" pos:end="1691:5">{<block_content pos:start="1683:9" pos:end="1689:9">

        <expr_stmt pos:start="1683:9" pos:end="1683:32"><expr pos:start="1683:9" pos:end="1683:31"><name pos:start="1683:9" pos:end="1683:11">ist</name> <operator pos:start="1683:13" pos:end="1683:13">=</operator> <operator pos:start="1683:15" pos:end="1683:15">&amp;</operator><name pos:start="1683:16" pos:end="1683:31"><name pos:start="1683:16" pos:end="1683:28">input_streams</name><index pos:start="1683:29" pos:end="1683:31">[<expr pos:start="1683:30" pos:end="1683:30"><name pos:start="1683:30" pos:end="1683:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="1685:9" pos:end="1689:9"><if pos:start="1685:9" pos:end="1689:9">if <condition pos:start="1685:12" pos:end="1685:33">(<expr pos:start="1685:13" pos:end="1685:32"><name pos:start="1685:13" pos:end="1685:32"><name pos:start="1685:13" pos:end="1685:15">ist</name><operator pos:start="1685:16" pos:end="1685:17">-&gt;</operator><name pos:start="1685:18" pos:end="1685:32">decoding_needed</name></name></expr>)</condition> <block pos:start="1685:35" pos:end="1689:9">{<block_content pos:start="1687:13" pos:end="1687:42">

            <expr_stmt pos:start="1687:13" pos:end="1687:42"><expr pos:start="1687:13" pos:end="1687:41"><call pos:start="1687:13" pos:end="1687:41"><name pos:start="1687:13" pos:end="1687:25">avcodec_close</name><argument_list pos:start="1687:26" pos:end="1687:41">(<argument pos:start="1687:27" pos:end="1687:40"><expr pos:start="1687:27" pos:end="1687:40"><name pos:start="1687:27" pos:end="1687:40"><name pos:start="1687:27" pos:end="1687:29">ist</name><operator pos:start="1687:30" pos:end="1687:31">-&gt;</operator><name pos:start="1687:32" pos:end="1687:33">st</name><operator pos:start="1687:34" pos:end="1687:35">-&gt;</operator><name pos:start="1687:36" pos:end="1687:40">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1695:5" pos:end="1695:20">/* finished ! */</comment>

    <expr_stmt pos:start="1697:5" pos:end="1697:12"><expr pos:start="1697:5" pos:end="1697:11"><name pos:start="1697:5" pos:end="1697:7">ret</name> <operator pos:start="1697:9" pos:end="1697:9">=</operator> <literal type="number" pos:start="1697:11" pos:end="1697:11">0</literal></expr>;</expr_stmt>



 <label pos:start="1701:2" pos:end="1701:6"><name pos:start="1701:2" pos:end="1701:5">fail</name>:</label>

    <expr_stmt pos:start="1703:5" pos:end="1703:26"><expr pos:start="1703:5" pos:end="1703:25"><call pos:start="1703:5" pos:end="1703:25"><name pos:start="1703:5" pos:end="1703:12">av_freep</name><argument_list pos:start="1703:13" pos:end="1703:25">(<argument pos:start="1703:14" pos:end="1703:24"><expr pos:start="1703:14" pos:end="1703:24"><operator pos:start="1703:14" pos:end="1703:14">&amp;</operator><name pos:start="1703:15" pos:end="1703:24">bit_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1707:5" pos:end="1759:5"><if pos:start="1707:5" pos:end="1759:5">if <condition pos:start="1707:8" pos:end="1707:18">(<expr pos:start="1707:9" pos:end="1707:17"><name pos:start="1707:9" pos:end="1707:17">ost_table</name></expr>)</condition> <block pos:start="1707:20" pos:end="1759:5">{<block_content pos:start="1709:9" pos:end="1757:27">

        <for pos:start="1709:9" pos:end="1755:9">for<control pos:start="1709:12" pos:end="1709:34">(<init pos:start="1709:13" pos:end="1709:16"><expr pos:start="1709:13" pos:end="1709:15"><name pos:start="1709:13" pos:end="1709:13">i</name><operator pos:start="1709:14" pos:end="1709:14">=</operator><literal type="number" pos:start="1709:15" pos:end="1709:15">0</literal></expr>;</init><condition pos:start="1709:17" pos:end="1709:30"><expr pos:start="1709:17" pos:end="1709:29"><name pos:start="1709:17" pos:end="1709:17">i</name><operator pos:start="1709:18" pos:end="1709:18">&lt;</operator><name pos:start="1709:19" pos:end="1709:29">nb_ostreams</name></expr>;</condition><incr pos:start="1709:31" pos:end="1709:33"><expr pos:start="1709:31" pos:end="1709:33"><name pos:start="1709:31" pos:end="1709:31">i</name><operator pos:start="1709:32" pos:end="1709:33">++</operator></expr></incr>)</control> <block pos:start="1709:36" pos:end="1755:9">{<block_content pos:start="1711:13" pos:end="1753:13">

            <expr_stmt pos:start="1711:13" pos:end="1711:31"><expr pos:start="1711:13" pos:end="1711:30"><name pos:start="1711:13" pos:end="1711:15">ost</name> <operator pos:start="1711:17" pos:end="1711:17">=</operator> <name pos:start="1711:19" pos:end="1711:30"><name pos:start="1711:19" pos:end="1711:27">ost_table</name><index pos:start="1711:28" pos:end="1711:30">[<expr pos:start="1711:29" pos:end="1711:29"><name pos:start="1711:29" pos:end="1711:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="1713:13" pos:end="1753:13"><if pos:start="1713:13" pos:end="1753:13">if <condition pos:start="1713:16" pos:end="1713:20">(<expr pos:start="1713:17" pos:end="1713:19"><name pos:start="1713:17" pos:end="1713:19">ost</name></expr>)</condition> <block pos:start="1713:22" pos:end="1753:13">{<block_content pos:start="1715:17" pos:end="1751:29">

                <if_stmt pos:start="1715:17" pos:end="1717:57"><if pos:start="1715:17" pos:end="1717:57">if <condition pos:start="1715:20" pos:end="1715:41">(<expr pos:start="1715:21" pos:end="1715:40"><name pos:start="1715:21" pos:end="1715:40"><name pos:start="1715:21" pos:end="1715:23">ost</name><operator pos:start="1715:24" pos:end="1715:25">-&gt;</operator><name pos:start="1715:26" pos:end="1715:27">st</name><operator pos:start="1715:28" pos:end="1715:29">-&gt;</operator><name pos:start="1715:30" pos:end="1715:40">stream_copy</name></name></expr>)</condition><block type="pseudo" pos:start="1717:21" pos:end="1717:57"><block_content pos:start="1717:21" pos:end="1717:57">

                    <expr_stmt pos:start="1717:21" pos:end="1717:57"><expr pos:start="1717:21" pos:end="1717:56"><call pos:start="1717:21" pos:end="1717:56"><name pos:start="1717:21" pos:end="1717:28">av_freep</name><argument_list pos:start="1717:29" pos:end="1717:56">(<argument pos:start="1717:30" pos:end="1717:55"><expr pos:start="1717:30" pos:end="1717:55"><operator pos:start="1717:30" pos:end="1717:30">&amp;</operator><name pos:start="1717:31" pos:end="1717:55"><name pos:start="1717:31" pos:end="1717:33">ost</name><operator pos:start="1717:34" pos:end="1717:35">-&gt;</operator><name pos:start="1717:36" pos:end="1717:37">st</name><operator pos:start="1717:38" pos:end="1717:39">-&gt;</operator><name pos:start="1717:40" pos:end="1717:44">codec</name><operator pos:start="1717:45" pos:end="1717:46">-&gt;</operator><name pos:start="1717:47" pos:end="1717:55">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1719:17" pos:end="1725:17"><if pos:start="1719:17" pos:end="1725:17">if <condition pos:start="1719:20" pos:end="1719:33">(<expr pos:start="1719:21" pos:end="1719:32"><name pos:start="1719:21" pos:end="1719:32"><name pos:start="1719:21" pos:end="1719:23">ost</name><operator pos:start="1719:24" pos:end="1719:25">-&gt;</operator><name pos:start="1719:26" pos:end="1719:32">logfile</name></name></expr>)</condition> <block pos:start="1719:35" pos:end="1725:17">{<block_content pos:start="1721:21" pos:end="1723:40">

                    <expr_stmt pos:start="1721:21" pos:end="1721:41"><expr pos:start="1721:21" pos:end="1721:40"><call pos:start="1721:21" pos:end="1721:40"><name pos:start="1721:21" pos:end="1721:26">fclose</name><argument_list pos:start="1721:27" pos:end="1721:40">(<argument pos:start="1721:28" pos:end="1721:39"><expr pos:start="1721:28" pos:end="1721:39"><name pos:start="1721:28" pos:end="1721:39"><name pos:start="1721:28" pos:end="1721:30">ost</name><operator pos:start="1721:31" pos:end="1721:32">-&gt;</operator><name pos:start="1721:33" pos:end="1721:39">logfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1723:21" pos:end="1723:40"><expr pos:start="1723:21" pos:end="1723:39"><name pos:start="1723:21" pos:end="1723:32"><name pos:start="1723:21" pos:end="1723:23">ost</name><operator pos:start="1723:24" pos:end="1723:25">-&gt;</operator><name pos:start="1723:26" pos:end="1723:32">logfile</name></name> <operator pos:start="1723:34" pos:end="1723:34">=</operator> <name pos:start="1723:36" pos:end="1723:39">NULL</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1727:17" pos:end="1727:40"><expr pos:start="1727:17" pos:end="1727:39"><call pos:start="1727:17" pos:end="1727:39"><name pos:start="1727:17" pos:end="1727:28">av_fifo_free</name><argument_list pos:start="1727:29" pos:end="1727:39">(<argument pos:start="1727:30" pos:end="1727:38"><expr pos:start="1727:30" pos:end="1727:38"><name pos:start="1727:30" pos:end="1727:38"><name pos:start="1727:30" pos:end="1727:32">ost</name><operator pos:start="1727:33" pos:end="1727:34">-&gt;</operator><name pos:start="1727:35" pos:end="1727:38">fifo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="1727:42" pos:end="1729:75">/* works even if fifo is not

                                             initialized but set to zero */</comment>

                <expr_stmt pos:start="1731:17" pos:end="1731:59"><expr pos:start="1731:17" pos:end="1731:58"><call pos:start="1731:17" pos:end="1731:58"><name pos:start="1731:17" pos:end="1731:24">av_freep</name><argument_list pos:start="1731:25" pos:end="1731:58">(<argument pos:start="1731:26" pos:end="1731:57"><expr pos:start="1731:26" pos:end="1731:57"><operator pos:start="1731:26" pos:end="1731:26">&amp;</operator><name pos:start="1731:27" pos:end="1731:57"><name pos:start="1731:27" pos:end="1731:29">ost</name><operator pos:start="1731:30" pos:end="1731:31">-&gt;</operator><name pos:start="1731:32" pos:end="1731:33">st</name><operator pos:start="1731:34" pos:end="1731:35">-&gt;</operator><name pos:start="1731:36" pos:end="1731:40">codec</name><operator pos:start="1731:41" pos:end="1731:42">-&gt;</operator><name pos:start="1731:43" pos:end="1731:57">subtitle_header</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1733:17" pos:end="1733:53"><expr pos:start="1733:17" pos:end="1733:52"><call pos:start="1733:17" pos:end="1733:52"><name pos:start="1733:17" pos:end="1733:23">av_free</name><argument_list pos:start="1733:24" pos:end="1733:52">(<argument pos:start="1733:25" pos:end="1733:51"><expr pos:start="1733:25" pos:end="1733:51"><name pos:start="1733:25" pos:end="1733:51"><name pos:start="1733:25" pos:end="1733:27">ost</name><operator pos:start="1733:28" pos:end="1733:29">-&gt;</operator><name pos:start="1733:30" pos:end="1733:43">resample_frame</name><operator pos:start="1733:44" pos:end="1733:44">.</operator><name pos:start="1733:45" pos:end="1733:48">data</name><index pos:start="1733:49" pos:end="1733:51">[<expr pos:start="1733:50" pos:end="1733:50"><literal type="number" pos:start="1733:50" pos:end="1733:50">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1735:17" pos:end="1735:44"><expr pos:start="1735:17" pos:end="1735:43"><call pos:start="1735:17" pos:end="1735:43"><name pos:start="1735:17" pos:end="1735:23">av_free</name><argument_list pos:start="1735:24" pos:end="1735:43">(<argument pos:start="1735:25" pos:end="1735:42"><expr pos:start="1735:25" pos:end="1735:42"><name pos:start="1735:25" pos:end="1735:42"><name pos:start="1735:25" pos:end="1735:27">ost</name><operator pos:start="1735:28" pos:end="1735:29">-&gt;</operator><name pos:start="1735:30" pos:end="1735:42">forced_kf_pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1737:17" pos:end="1739:59"><if pos:start="1737:17" pos:end="1739:59">if <condition pos:start="1737:20" pos:end="1737:40">(<expr pos:start="1737:21" pos:end="1737:39"><name pos:start="1737:21" pos:end="1737:39"><name pos:start="1737:21" pos:end="1737:23">ost</name><operator pos:start="1737:24" pos:end="1737:25">-&gt;</operator><name pos:start="1737:26" pos:end="1737:39">video_resample</name></name></expr>)</condition><block type="pseudo" pos:start="1739:21" pos:end="1739:59"><block_content pos:start="1739:21" pos:end="1739:59">

                    <expr_stmt pos:start="1739:21" pos:end="1739:59"><expr pos:start="1739:21" pos:end="1739:58"><call pos:start="1739:21" pos:end="1739:58"><name pos:start="1739:21" pos:end="1739:35">sws_freeContext</name><argument_list pos:start="1739:36" pos:end="1739:58">(<argument pos:start="1739:37" pos:end="1739:57"><expr pos:start="1739:37" pos:end="1739:57"><name pos:start="1739:37" pos:end="1739:57"><name pos:start="1739:37" pos:end="1739:39">ost</name><operator pos:start="1739:40" pos:end="1739:41">-&gt;</operator><name pos:start="1739:42" pos:end="1739:57">img_resample_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1741:17" pos:end="1743:56"><if pos:start="1741:17" pos:end="1743:56">if <condition pos:start="1741:20" pos:end="1741:34">(<expr pos:start="1741:21" pos:end="1741:33"><name pos:start="1741:21" pos:end="1741:33"><name pos:start="1741:21" pos:end="1741:23">ost</name><operator pos:start="1741:24" pos:end="1741:25">-&gt;</operator><name pos:start="1741:26" pos:end="1741:33">resample</name></name></expr>)</condition><block type="pseudo" pos:start="1743:21" pos:end="1743:56"><block_content pos:start="1743:21" pos:end="1743:56">

                    <expr_stmt pos:start="1743:21" pos:end="1743:56"><expr pos:start="1743:21" pos:end="1743:55"><call pos:start="1743:21" pos:end="1743:55"><name pos:start="1743:21" pos:end="1743:40">audio_resample_close</name><argument_list pos:start="1743:41" pos:end="1743:55">(<argument pos:start="1743:42" pos:end="1743:54"><expr pos:start="1743:42" pos:end="1743:54"><name pos:start="1743:42" pos:end="1743:54"><name pos:start="1743:42" pos:end="1743:44">ost</name><operator pos:start="1743:45" pos:end="1743:46">-&gt;</operator><name pos:start="1743:47" pos:end="1743:54">resample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1745:17" pos:end="1747:61"><if pos:start="1745:17" pos:end="1747:61">if <condition pos:start="1745:20" pos:end="1745:38">(<expr pos:start="1745:21" pos:end="1745:37"><name pos:start="1745:21" pos:end="1745:37"><name pos:start="1745:21" pos:end="1745:23">ost</name><operator pos:start="1745:24" pos:end="1745:25">-&gt;</operator><name pos:start="1745:26" pos:end="1745:37">reformat_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="1747:21" pos:end="1747:61"><block_content pos:start="1747:21" pos:end="1747:61">

                    <expr_stmt pos:start="1747:21" pos:end="1747:61"><expr pos:start="1747:21" pos:end="1747:60"><call pos:start="1747:21" pos:end="1747:60"><name pos:start="1747:21" pos:end="1747:41">av_audio_convert_free</name><argument_list pos:start="1747:42" pos:end="1747:60">(<argument pos:start="1747:43" pos:end="1747:59"><expr pos:start="1747:43" pos:end="1747:59"><name pos:start="1747:43" pos:end="1747:59"><name pos:start="1747:43" pos:end="1747:45">ost</name><operator pos:start="1747:46" pos:end="1747:47">-&gt;</operator><name pos:start="1747:48" pos:end="1747:59">reformat_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1749:17" pos:end="1749:41"><expr pos:start="1749:17" pos:end="1749:40"><call pos:start="1749:17" pos:end="1749:40"><name pos:start="1749:17" pos:end="1749:28">av_dict_free</name><argument_list pos:start="1749:29" pos:end="1749:40">(<argument pos:start="1749:30" pos:end="1749:39"><expr pos:start="1749:30" pos:end="1749:39"><operator pos:start="1749:30" pos:end="1749:30">&amp;</operator><name pos:start="1749:31" pos:end="1749:39"><name pos:start="1749:31" pos:end="1749:33">ost</name><operator pos:start="1749:34" pos:end="1749:35">-&gt;</operator><name pos:start="1749:36" pos:end="1749:39">opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1751:17" pos:end="1751:29"><expr pos:start="1751:17" pos:end="1751:28"><call pos:start="1751:17" pos:end="1751:28"><name pos:start="1751:17" pos:end="1751:23">av_free</name><argument_list pos:start="1751:24" pos:end="1751:28">(<argument pos:start="1751:25" pos:end="1751:27"><expr pos:start="1751:25" pos:end="1751:27"><name pos:start="1751:25" pos:end="1751:27">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="1757:9" pos:end="1757:27"><expr pos:start="1757:9" pos:end="1757:26"><call pos:start="1757:9" pos:end="1757:26"><name pos:start="1757:9" pos:end="1757:15">av_free</name><argument_list pos:start="1757:16" pos:end="1757:26">(<argument pos:start="1757:17" pos:end="1757:25"><expr pos:start="1757:17" pos:end="1757:25"><name pos:start="1757:17" pos:end="1757:25">ost_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="1761:5" pos:end="1761:15">return <expr pos:start="1761:12" pos:end="1761:14"><name pos:start="1761:12" pos:end="1761:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
