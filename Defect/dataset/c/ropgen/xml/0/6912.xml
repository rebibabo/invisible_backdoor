<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6912.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">ast_write_trailer</name><parameter_list pos:start="1:29" pos:end="1:48">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ASTMuxContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">ast</name> <init pos:start="7:24" pos:end="7:37">= <expr pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">enc</name> <init pos:start="9:25" pos:end="9:46">= <expr pos:start="9:27" pos:end="9:46"><name pos:start="9:27" pos:end="9:39"><name pos:start="9:27" pos:end="9:27">s</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:36">streams</name><index pos:start="9:37" pos:end="9:39">[<expr pos:start="9:38" pos:end="9:38"><literal type="number" pos:start="9:38" pos:end="9:38">0</literal></expr>]</index></name><operator pos:start="9:40" pos:end="9:41">-&gt;</operator><name pos:start="9:42" pos:end="9:46">codec</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:21">file_size</name> <init pos:start="11:23" pos:end="11:37">= <expr pos:start="11:25" pos:end="11:37"><call pos:start="11:25" pos:end="11:37"><name pos:start="11:25" pos:end="11:33">avio_tell</name><argument_list pos:start="11:34" pos:end="11:37">(<argument pos:start="11:35" pos:end="11:36"><expr pos:start="11:35" pos:end="11:36"><name pos:start="11:35" pos:end="11:36">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:85"><decl pos:start="13:5" pos:end="13:84"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:19">samples</name> <init pos:start="13:21" pos:end="13:84">= <expr pos:start="13:23" pos:end="13:84"><operator pos:start="13:23" pos:end="13:23">(</operator><name pos:start="13:24" pos:end="13:32">file_size</name> <operator pos:start="13:34" pos:end="13:34">-</operator> <literal type="number" pos:start="13:36" pos:end="13:39">64</literal> <operator pos:start="13:39" pos:end="13:39">-</operator> <operator pos:start="13:41" pos:end="13:41">(</operator><literal type="number" pos:start="13:42" pos:end="13:43">32</literal> <operator pos:start="13:45" pos:end="13:45">*</operator> <name pos:start="13:47" pos:end="13:63"><name pos:start="13:47" pos:end="13:49">enc</name><operator pos:start="13:50" pos:end="13:51">-&gt;</operator><name pos:start="13:52" pos:end="13:63">frame_number</name></name><operator pos:start="13:64" pos:end="13:64">)</operator><operator pos:start="13:65" pos:end="13:65">)</operator> <operator pos:start="13:67" pos:end="13:67">/</operator> <name pos:start="13:69" pos:end="13:84"><name pos:start="13:69" pos:end="13:71">enc</name><operator pos:start="13:72" pos:end="13:73">-&gt;</operator><name pos:start="13:74" pos:end="13:84">block_align</name></name></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="13:87" pos:end="13:108">/* PCM_S16BE_PLANAR */</comment>



    <expr_stmt pos:start="17:5" pos:end="17:67"><expr pos:start="17:5" pos:end="17:66"><call pos:start="17:5" pos:end="17:66"><name pos:start="17:5" pos:end="17:10">av_log</name><argument_list pos:start="17:11" pos:end="17:66">(<argument pos:start="17:12" pos:end="17:12"><expr pos:start="17:12" pos:end="17:12"><name pos:start="17:12" pos:end="17:12">s</name></expr></argument>, <argument pos:start="17:15" pos:end="17:26"><expr pos:start="17:15" pos:end="17:26"><name pos:start="17:15" pos:end="17:26">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="17:29" pos:end="17:56"><expr pos:start="17:29" pos:end="17:56"><literal type="string" pos:start="17:29" pos:end="17:46">"total samples: %"</literal><name pos:start="17:47" pos:end="17:52">PRId64</name><literal type="string" pos:start="17:53" pos:end="17:56">"\n"</literal></expr></argument>, <argument pos:start="17:59" pos:end="17:65"><expr pos:start="17:59" pos:end="17:65"><name pos:start="17:59" pos:end="17:65">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="105:5"><if pos:start="21:5" pos:end="105:5">if <condition pos:start="21:8" pos:end="21:24">(<expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:13">pb</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:23">seekable</name></name></expr>)</condition> <block pos:start="21:26" pos:end="105:5">{<block_content pos:start="25:9" pos:end="103:23">

        <comment type="block" pos:start="23:9" pos:end="23:31">/* Number of samples */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:46"><expr pos:start="25:9" pos:end="25:45"><call pos:start="25:9" pos:end="25:45"><name pos:start="25:9" pos:end="25:17">avio_seek</name><argument_list pos:start="25:18" pos:end="25:45">(<argument pos:start="25:19" pos:end="25:20"><expr pos:start="25:19" pos:end="25:20"><name pos:start="25:19" pos:end="25:20">pb</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:25">ast</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:34">samples</name></name></expr></argument>, <argument pos:start="25:37" pos:end="25:44"><expr pos:start="25:37" pos:end="25:44"><name pos:start="25:37" pos:end="25:44">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:31"><expr pos:start="27:9" pos:end="27:30"><call pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:17">avio_wb32</name><argument_list pos:start="27:18" pos:end="27:30">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">pb</name></expr></argument>, <argument pos:start="27:23" pos:end="27:29"><expr pos:start="27:23" pos:end="27:29"><name pos:start="27:23" pos:end="27:29">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="31:9" pos:end="31:35">/* Loopstart if provided */</comment>

        <if_stmt pos:start="33:9" pos:end="49:29"><if pos:start="33:9" pos:end="47:9">if <condition pos:start="33:12" pos:end="33:31">(<expr pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:15">ast</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:26">loopstart</name></name> <operator pos:start="33:28" pos:end="33:28">&gt;</operator> <literal type="number" pos:start="33:30" pos:end="33:30">0</literal></expr>)</condition> <block pos:start="33:33" pos:end="47:9">{<block_content pos:start="35:9" pos:end="45:38">

        <if_stmt pos:start="35:9" pos:end="45:38"><if pos:start="35:9" pos:end="43:9">if <condition pos:start="35:12" pos:end="35:38">(<expr pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:15">ast</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:26">loopstart</name></name> <operator pos:start="35:28" pos:end="35:29">&gt;=</operator> <name pos:start="35:31" pos:end="35:37">samples</name></expr>)</condition> <block pos:start="35:40" pos:end="43:9">{<block_content pos:start="37:13" pos:end="41:29">

            <expr_stmt pos:start="37:13" pos:end="37:95"><expr pos:start="37:13" pos:end="37:94"><call pos:start="37:13" pos:end="37:94"><name pos:start="37:13" pos:end="37:18">av_log</name><argument_list pos:start="37:19" pos:end="37:94">(<argument pos:start="37:20" pos:end="37:20"><expr pos:start="37:20" pos:end="37:20"><name pos:start="37:20" pos:end="37:20">s</name></expr></argument>, <argument pos:start="37:23" pos:end="37:36"><expr pos:start="37:23" pos:end="37:36"><name pos:start="37:23" pos:end="37:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="37:39" pos:end="37:93"><expr pos:start="37:39" pos:end="37:93"><literal type="string" pos:start="37:39" pos:end="37:93">"Loopstart value is out of range and will be ignored\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:32"><expr pos:start="39:13" pos:end="39:31"><name pos:start="39:13" pos:end="39:26"><name pos:start="39:13" pos:end="39:15">ast</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:26">loopstart</name></name> <operator pos:start="39:28" pos:end="39:28">=</operator> <operator pos:start="39:30" pos:end="39:30">-</operator><literal type="number" pos:start="39:31" pos:end="39:31">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:29"><expr pos:start="41:13" pos:end="41:28"><call pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:21">avio_skip</name><argument_list pos:start="41:22" pos:end="41:28">(<argument pos:start="41:23" pos:end="41:24"><expr pos:start="41:23" pos:end="41:24"><name pos:start="41:23" pos:end="41:24">pb</name></expr></argument>, <argument pos:start="41:27" pos:end="41:27"><expr pos:start="41:27" pos:end="41:27"><literal type="number" pos:start="41:27" pos:end="41:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="45:38">else<block type="pseudo" pos:start="45:9" pos:end="45:38"><block_content pos:start="45:9" pos:end="45:38">

        <expr_stmt pos:start="45:9" pos:end="45:38"><expr pos:start="45:9" pos:end="45:37"><call pos:start="45:9" pos:end="45:37"><name pos:start="45:9" pos:end="45:17">avio_wb32</name><argument_list pos:start="45:18" pos:end="45:37">(<argument pos:start="45:19" pos:end="45:20"><expr pos:start="45:19" pos:end="45:20"><name pos:start="45:19" pos:end="45:20">pb</name></expr></argument>, <argument pos:start="45:23" pos:end="45:36"><expr pos:start="45:23" pos:end="45:36"><name pos:start="45:23" pos:end="45:36"><name pos:start="45:23" pos:end="45:25">ast</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:36">loopstart</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="49:29">else<block type="pseudo" pos:start="49:13" pos:end="49:29"><block_content pos:start="49:13" pos:end="49:29">

            <expr_stmt pos:start="49:13" pos:end="49:29"><expr pos:start="49:13" pos:end="49:28"><call pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:21">avio_skip</name><argument_list pos:start="49:22" pos:end="49:28">(<argument pos:start="49:23" pos:end="49:24"><expr pos:start="49:23" pos:end="49:24"><name pos:start="49:23" pos:end="49:24">pb</name></expr></argument>, <argument pos:start="49:27" pos:end="49:27"><expr pos:start="49:27" pos:end="49:27"><literal type="number" pos:start="49:27" pos:end="49:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <comment type="block" pos:start="53:9" pos:end="53:68">/* Loopend if provided. Otherwise number of samples again */</comment>

        <if_stmt pos:start="55:9" pos:end="71:9"><if pos:start="55:9" pos:end="67:9">if <condition pos:start="55:12" pos:end="55:48">(<expr pos:start="55:13" pos:end="55:47"><name pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:15">ast</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:24">loopend</name></name> <operator pos:start="55:26" pos:end="55:27">&amp;&amp;</operator> <name pos:start="55:29" pos:end="55:42"><name pos:start="55:29" pos:end="55:31">ast</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:42">loopstart</name></name> <operator pos:start="55:44" pos:end="55:45">&gt;=</operator> <literal type="number" pos:start="55:47" pos:end="55:47">0</literal></expr>)</condition> <block pos:start="55:50" pos:end="67:9">{<block_content pos:start="57:13" pos:end="65:40">

            <if_stmt pos:start="57:13" pos:end="63:13"><if pos:start="57:13" pos:end="63:13">if <condition pos:start="57:16" pos:end="57:39">(<expr pos:start="57:17" pos:end="57:38"><name pos:start="57:17" pos:end="57:28"><name pos:start="57:17" pos:end="57:19">ast</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:28">loopend</name></name> <operator pos:start="57:30" pos:end="57:30">&gt;</operator> <name pos:start="57:32" pos:end="57:38">samples</name></expr>)</condition> <block pos:start="57:41" pos:end="63:13">{<block_content pos:start="59:17" pos:end="61:39">

                <expr_stmt pos:start="59:17" pos:end="59:97"><expr pos:start="59:17" pos:end="59:96"><call pos:start="59:17" pos:end="59:96"><name pos:start="59:17" pos:end="59:22">av_log</name><argument_list pos:start="59:23" pos:end="59:96">(<argument pos:start="59:24" pos:end="59:24"><expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">s</name></expr></argument>, <argument pos:start="59:27" pos:end="59:40"><expr pos:start="59:27" pos:end="59:40"><name pos:start="59:27" pos:end="59:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="59:43" pos:end="59:95"><expr pos:start="59:43" pos:end="59:95"><literal type="string" pos:start="59:43" pos:end="59:95">"Loopend value is out of range and will be ignored\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:39"><expr pos:start="61:17" pos:end="61:38"><name pos:start="61:17" pos:end="61:28"><name pos:start="61:17" pos:end="61:19">ast</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:28">loopend</name></name> <operator pos:start="61:30" pos:end="61:30">=</operator> <name pos:start="61:32" pos:end="61:38">samples</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:40"><expr pos:start="65:13" pos:end="65:39"><call pos:start="65:13" pos:end="65:39"><name pos:start="65:13" pos:end="65:21">avio_wb32</name><argument_list pos:start="65:22" pos:end="65:39">(<argument pos:start="65:23" pos:end="65:24"><expr pos:start="65:23" pos:end="65:24"><name pos:start="65:23" pos:end="65:24">pb</name></expr></argument>, <argument pos:start="65:27" pos:end="65:38"><expr pos:start="65:27" pos:end="65:38"><name pos:start="65:27" pos:end="65:38"><name pos:start="65:27" pos:end="65:29">ast</name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:38">loopend</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="67:11" pos:end="71:9">else <block pos:start="67:16" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:35">

            <expr_stmt pos:start="69:13" pos:end="69:35"><expr pos:start="69:13" pos:end="69:34"><call pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:21">avio_wb32</name><argument_list pos:start="69:22" pos:end="69:34">(<argument pos:start="69:23" pos:end="69:24"><expr pos:start="69:23" pos:end="69:24"><name pos:start="69:23" pos:end="69:24">pb</name></expr></argument>, <argument pos:start="69:27" pos:end="69:33"><expr pos:start="69:27" pos:end="69:33"><name pos:start="69:27" pos:end="69:33">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="75:9" pos:end="75:33">/* Size of first block */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:32"><expr pos:start="77:9" pos:end="77:31"><call pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:17">avio_wb32</name><argument_list pos:start="77:18" pos:end="77:31">(<argument pos:start="77:19" pos:end="77:20"><expr pos:start="77:19" pos:end="77:20"><name pos:start="77:19" pos:end="77:20">pb</name></expr></argument>, <argument pos:start="77:23" pos:end="77:30"><expr pos:start="77:23" pos:end="77:30"><name pos:start="77:23" pos:end="77:30"><name pos:start="77:23" pos:end="77:25">ast</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:30">fbs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="81:9" pos:end="81:36">/* File size minus header */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:43"><expr pos:start="83:9" pos:end="83:42"><call pos:start="83:9" pos:end="83:42"><name pos:start="83:9" pos:end="83:17">avio_seek</name><argument_list pos:start="83:18" pos:end="83:42">(<argument pos:start="83:19" pos:end="83:20"><expr pos:start="83:19" pos:end="83:20"><name pos:start="83:19" pos:end="83:20">pb</name></expr></argument>, <argument pos:start="83:23" pos:end="83:31"><expr pos:start="83:23" pos:end="83:31"><name pos:start="83:23" pos:end="83:31"><name pos:start="83:23" pos:end="83:25">ast</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:31">size</name></name></expr></argument>, <argument pos:start="83:34" pos:end="83:41"><expr pos:start="83:34" pos:end="83:41"><name pos:start="83:34" pos:end="83:41">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:38"><expr pos:start="85:9" pos:end="85:37"><call pos:start="85:9" pos:end="85:37"><name pos:start="85:9" pos:end="85:17">avio_wb32</name><argument_list pos:start="85:18" pos:end="85:37">(<argument pos:start="85:19" pos:end="85:20"><expr pos:start="85:19" pos:end="85:20"><name pos:start="85:19" pos:end="85:20">pb</name></expr></argument>, <argument pos:start="85:23" pos:end="85:36"><expr pos:start="85:23" pos:end="85:36"><name pos:start="85:23" pos:end="85:31">file_size</name> <operator pos:start="85:33" pos:end="85:33">-</operator> <literal type="number" pos:start="85:35" pos:end="85:36">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="89:9" pos:end="89:23">/* Loop flag */</comment>

        <if_stmt pos:start="91:9" pos:end="97:9"><if pos:start="91:9" pos:end="97:9">if <condition pos:start="91:12" pos:end="91:32">(<expr pos:start="91:13" pos:end="91:31"><name pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:15">ast</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:26">loopstart</name></name> <operator pos:start="91:28" pos:end="91:29">&gt;=</operator> <literal type="number" pos:start="91:31" pos:end="91:31">0</literal></expr>)</condition> <block pos:start="91:34" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:34">

            <expr_stmt pos:start="93:13" pos:end="93:29"><expr pos:start="93:13" pos:end="93:28"><call pos:start="93:13" pos:end="93:28"><name pos:start="93:13" pos:end="93:21">avio_skip</name><argument_list pos:start="93:22" pos:end="93:28">(<argument pos:start="93:23" pos:end="93:24"><expr pos:start="93:23" pos:end="93:24"><name pos:start="93:23" pos:end="93:24">pb</name></expr></argument>, <argument pos:start="93:27" pos:end="93:27"><expr pos:start="93:27" pos:end="93:27"><literal type="number" pos:start="93:27" pos:end="93:27">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:34"><expr pos:start="95:13" pos:end="95:33"><call pos:start="95:13" pos:end="95:33"><name pos:start="95:13" pos:end="95:21">avio_wb16</name><argument_list pos:start="95:22" pos:end="95:33">(<argument pos:start="95:23" pos:end="95:24"><expr pos:start="95:23" pos:end="95:24"><name pos:start="95:23" pos:end="95:24">pb</name></expr></argument>, <argument pos:start="95:27" pos:end="95:32"><expr pos:start="95:27" pos:end="95:32"><literal type="number" pos:start="95:27" pos:end="95:32">0xFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:43"><expr pos:start="101:9" pos:end="101:42"><call pos:start="101:9" pos:end="101:42"><name pos:start="101:9" pos:end="101:17">avio_seek</name><argument_list pos:start="101:18" pos:end="101:42">(<argument pos:start="101:19" pos:end="101:20"><expr pos:start="101:19" pos:end="101:20"><name pos:start="101:19" pos:end="101:20">pb</name></expr></argument>, <argument pos:start="101:23" pos:end="101:31"><expr pos:start="101:23" pos:end="101:31"><name pos:start="101:23" pos:end="101:31">file_size</name></expr></argument>, <argument pos:start="101:34" pos:end="101:41"><expr pos:start="101:34" pos:end="101:41"><name pos:start="101:34" pos:end="101:41">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:23"><expr pos:start="103:9" pos:end="103:22"><call pos:start="103:9" pos:end="103:22"><name pos:start="103:9" pos:end="103:18">avio_flush</name><argument_list pos:start="103:19" pos:end="103:22">(<argument pos:start="103:20" pos:end="103:21"><expr pos:start="103:20" pos:end="103:21"><name pos:start="103:20" pos:end="103:21">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
