<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8560.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">handle_secondary_tcp_pkt</name><parameter_list pos:start="1:36" pos:end="5:48">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:50">NetFilterState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">nf</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:52"><decl pos:start="3:37" pos:end="3:52"><type pos:start="3:37" pos:end="3:52"><name pos:start="3:37" pos:end="3:46">Connection</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:52">conn</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:47"><decl pos:start="5:37" pos:end="5:47"><type pos:start="5:37" pos:end="5:47"><name pos:start="5:37" pos:end="5:42">Packet</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:47">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="67:1">{<block_content pos:start="9:5" pos:end="65:13">

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:17">tcphdr</name></name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:26">tcp_pkt</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:53"><expr pos:start="13:5" pos:end="13:52"><name pos:start="13:5" pos:end="13:11">tcp_pkt</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <operator pos:start="13:15" pos:end="13:15">(</operator>struct <name pos:start="13:23" pos:end="13:28">tcphdr</name> <operator pos:start="13:30" pos:end="13:30">*</operator><operator pos:start="13:31" pos:end="13:31">)</operator><name pos:start="13:32" pos:end="13:52"><name pos:start="13:32" pos:end="13:34">pkt</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:52">transport_header</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="29:5"><if pos:start="17:5" pos:end="29:5">if <condition pos:start="17:8" pos:end="17:64">(<expr pos:start="17:9" pos:end="17:63"><call pos:start="17:9" pos:end="17:63"><name pos:start="17:9" pos:end="17:29">trace_event_get_state</name><argument_list pos:start="17:30" pos:end="17:63">(<argument pos:start="17:31" pos:end="17:62"><expr pos:start="17:31" pos:end="17:62"><name pos:start="17:31" pos:end="17:62">TRACE_COLO_FILTER_REWRITER_DEBUG</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:66" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:61">

        <expr_stmt pos:start="19:9" pos:end="25:39"><expr pos:start="19:9" pos:end="25:38"><call pos:start="19:9" pos:end="25:38"><name pos:start="19:9" pos:end="19:43">trace_colo_filter_rewriter_pkt_info</name><argument_list pos:start="19:44" pos:end="25:38">(<argument pos:start="19:45" pos:end="19:52"><expr pos:start="19:45" pos:end="19:52"><name pos:start="19:45" pos:end="19:52">__func__</name></expr></argument>,

                    <argument pos:start="21:21" pos:end="21:46"><expr pos:start="21:21" pos:end="21:46"><call pos:start="21:21" pos:end="21:46"><name pos:start="21:21" pos:end="21:29">inet_ntoa</name><argument_list pos:start="21:30" pos:end="21:46">(<argument pos:start="21:31" pos:end="21:45"><expr pos:start="21:31" pos:end="21:45"><name pos:start="21:31" pos:end="21:45"><name pos:start="21:31" pos:end="21:33">pkt</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:37">ip</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:45">ip_src</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:49" pos:end="21:74"><expr pos:start="21:49" pos:end="21:74"><call pos:start="21:49" pos:end="21:74"><name pos:start="21:49" pos:end="21:57">inet_ntoa</name><argument_list pos:start="21:58" pos:end="21:74">(<argument pos:start="21:59" pos:end="21:73"><expr pos:start="21:59" pos:end="21:73"><name pos:start="21:59" pos:end="21:73"><name pos:start="21:59" pos:end="21:61">pkt</name><operator pos:start="21:62" pos:end="21:63">-&gt;</operator><name pos:start="21:64" pos:end="21:65">ip</name><operator pos:start="21:66" pos:end="21:67">-&gt;</operator><name pos:start="21:68" pos:end="21:73">ip_dst</name></name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="23:21" pos:end="23:42"><expr pos:start="23:21" pos:end="23:42"><call pos:start="23:21" pos:end="23:42"><name pos:start="23:21" pos:end="23:25">ntohl</name><argument_list pos:start="23:26" pos:end="23:42">(<argument pos:start="23:27" pos:end="23:41"><expr pos:start="23:27" pos:end="23:41"><name pos:start="23:27" pos:end="23:41"><name pos:start="23:27" pos:end="23:33">tcp_pkt</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:41">th_seq</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:45" pos:end="23:66"><expr pos:start="23:45" pos:end="23:66"><call pos:start="23:45" pos:end="23:66"><name pos:start="23:45" pos:end="23:49">ntohl</name><argument_list pos:start="23:50" pos:end="23:66">(<argument pos:start="23:51" pos:end="23:65"><expr pos:start="23:51" pos:end="23:65"><name pos:start="23:51" pos:end="23:65"><name pos:start="23:51" pos:end="23:57">tcp_pkt</name><operator pos:start="23:58" pos:end="23:59">-&gt;</operator><name pos:start="23:60" pos:end="23:65">th_ack</name></name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="25:21" pos:end="25:37"><expr pos:start="25:21" pos:end="25:37"><name pos:start="25:21" pos:end="25:37"><name pos:start="25:21" pos:end="25:27">tcp_pkt</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:37">th_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:61"><expr pos:start="27:9" pos:end="27:60"><call pos:start="27:9" pos:end="27:60"><name pos:start="27:9" pos:end="27:46">trace_colo_filter_rewriter_conn_offset</name><argument_list pos:start="27:47" pos:end="27:60">(<argument pos:start="27:48" pos:end="27:59"><expr pos:start="27:48" pos:end="27:59"><name pos:start="27:48" pos:end="27:59"><name pos:start="27:48" pos:end="27:51">conn</name><operator pos:start="27:52" pos:end="27:53">-&gt;</operator><name pos:start="27:54" pos:end="27:59">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="47:5"><if pos:start="33:5" pos:end="47:5">if <condition pos:start="33:8" pos:end="33:71">(<expr pos:start="33:9" pos:end="33:70"><operator pos:start="33:9" pos:end="33:9">(</operator><operator pos:start="33:10" pos:end="33:10">(</operator><name pos:start="33:11" pos:end="33:27"><name pos:start="33:11" pos:end="33:17">tcp_pkt</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:27">th_flags</name></name> <operator pos:start="33:29" pos:end="33:29">&amp;</operator> <operator pos:start="33:31" pos:end="33:31">(</operator><name pos:start="33:32" pos:end="33:37">TH_ACK</name> <operator pos:start="33:39" pos:end="33:39">|</operator> <name pos:start="33:41" pos:end="33:46">TH_SYN</name><operator pos:start="33:47" pos:end="33:47">)</operator><operator pos:start="33:48" pos:end="33:48">)</operator> <operator pos:start="33:50" pos:end="33:51">==</operator> <operator pos:start="33:53" pos:end="33:53">(</operator><name pos:start="33:54" pos:end="33:59">TH_ACK</name> <operator pos:start="33:61" pos:end="33:61">|</operator> <name pos:start="33:63" pos:end="33:68">TH_SYN</name><operator pos:start="33:69" pos:end="33:69">)</operator><operator pos:start="33:70" pos:end="33:70">)</operator></expr>)</condition> <block pos:start="33:73" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:46">

        <comment type="block" pos:start="35:9" pos:end="43:11">/*

         * save offset = secondary_seq and then

         * in handle_primary_tcp_pkt make offset

         * = secondary_seq - primary_seq

         */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:46"><expr pos:start="45:9" pos:end="45:45"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:12">conn</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:20">offset</name></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <call pos:start="45:24" pos:end="45:45"><name pos:start="45:24" pos:end="45:28">ntohl</name><argument_list pos:start="45:29" pos:end="45:45">(<argument pos:start="45:30" pos:end="45:44"><expr pos:start="45:30" pos:end="45:44"><name pos:start="45:30" pos:end="45:44"><name pos:start="45:30" pos:end="45:36">tcp_pkt</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:44">th_seq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="61:5"><if pos:start="51:5" pos:end="61:5">if <condition pos:start="51:8" pos:end="51:58">(<expr pos:start="51:9" pos:end="51:57"><operator pos:start="51:9" pos:end="51:9">(</operator><name pos:start="51:10" pos:end="51:26"><name pos:start="51:10" pos:end="51:16">tcp_pkt</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:26">th_flags</name></name> <operator pos:start="51:28" pos:end="51:28">&amp;</operator> <operator pos:start="51:30" pos:end="51:30">(</operator><name pos:start="51:31" pos:end="51:36">TH_ACK</name> <operator pos:start="51:38" pos:end="51:38">|</operator> <name pos:start="51:40" pos:end="51:45">TH_SYN</name><operator pos:start="51:46" pos:end="51:46">)</operator><operator pos:start="51:47" pos:end="51:47">)</operator> <operator pos:start="51:49" pos:end="51:50">==</operator> <name pos:start="51:52" pos:end="51:57">TH_ACK</name></expr>)</condition> <block pos:start="51:60" pos:end="61:5">{<block_content pos:start="55:9" pos:end="59:64">

        <comment type="block" pos:start="53:9" pos:end="53:61">/* handle packets to the primary from the secondary*/</comment>

        <expr_stmt pos:start="55:9" pos:end="55:71"><expr pos:start="55:9" pos:end="55:70"><name pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:15">tcp_pkt</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:23">th_seq</name></name> <operator pos:start="55:25" pos:end="55:25">=</operator> <call pos:start="55:27" pos:end="55:70"><name pos:start="55:27" pos:end="55:31">htonl</name><argument_list pos:start="55:32" pos:end="55:70">(<argument pos:start="55:33" pos:end="55:69"><expr pos:start="55:33" pos:end="55:69"><call pos:start="55:33" pos:end="55:54"><name pos:start="55:33" pos:end="55:37">ntohl</name><argument_list pos:start="55:38" pos:end="55:54">(<argument pos:start="55:39" pos:end="55:53"><expr pos:start="55:39" pos:end="55:53"><name pos:start="55:39" pos:end="55:53"><name pos:start="55:39" pos:end="55:45">tcp_pkt</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:53">th_seq</name></name></expr></argument>)</argument_list></call> <operator pos:start="55:56" pos:end="55:56">-</operator> <name pos:start="55:58" pos:end="55:69"><name pos:start="55:58" pos:end="55:61">conn</name><operator pos:start="55:62" pos:end="55:63">-&gt;</operator><name pos:start="55:64" pos:end="55:69">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:64"><expr pos:start="59:9" pos:end="59:63"><call pos:start="59:9" pos:end="59:63"><name pos:start="59:9" pos:end="59:30">net_checksum_calculate</name><argument_list pos:start="59:31" pos:end="59:63">(<argument pos:start="59:32" pos:end="59:51"><expr pos:start="59:32" pos:end="59:51"><operator pos:start="59:32" pos:end="59:32">(</operator><name pos:start="59:33" pos:end="59:39">uint8_t</name> <operator pos:start="59:41" pos:end="59:41">*</operator><operator pos:start="59:42" pos:end="59:42">)</operator><name pos:start="59:43" pos:end="59:51"><name pos:start="59:43" pos:end="59:45">pkt</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:51">data</name></name></expr></argument>, <argument pos:start="59:54" pos:end="59:62"><expr pos:start="59:54" pos:end="59:62"><name pos:start="59:54" pos:end="59:62"><name pos:start="59:54" pos:end="59:56">pkt</name><operator pos:start="59:57" pos:end="59:58">-&gt;</operator><name pos:start="59:59" pos:end="59:62">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
