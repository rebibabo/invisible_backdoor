<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1490.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:40">tight_send_framebuffer_update</name><parameter_list pos:start="1:41" pos:end="3:54">(<parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:49">VncState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">vs</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:60"><decl pos:start="1:56" pos:end="1:60"><type pos:start="1:56" pos:end="1:60"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:60">x</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:67"><decl pos:start="1:63" pos:end="1:67"><type pos:start="1:63" pos:end="1:67"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:67">y</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:46"><decl pos:start="3:42" pos:end="3:46"><type pos:start="3:42" pos:end="3:46"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:46">w</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:53"><decl pos:start="3:49" pos:end="3:53"><type pos:start="3:49" pos:end="3:53"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:53">h</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:65">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">max_rows</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="21:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="13:69">(<expr pos:start="11:9" pos:end="13:68"><name pos:start="11:9" pos:end="11:39"><name pos:start="11:9" pos:end="11:10">vs</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:20">clientds</name><operator pos:start="11:21" pos:end="11:21">.</operator><name pos:start="11:22" pos:end="11:23">pf</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:39">bytes_per_pixel</name></name> <operator pos:start="11:41" pos:end="11:42">==</operator> <literal type="number" pos:start="11:44" pos:end="11:44">4</literal> <operator pos:start="11:46" pos:end="11:47">&amp;&amp;</operator> <name pos:start="11:49" pos:end="11:68"><name pos:start="11:49" pos:end="11:50">vs</name><operator pos:start="11:51" pos:end="11:52">-&gt;</operator><name pos:start="11:53" pos:end="11:60">clientds</name><operator pos:start="11:61" pos:end="11:61">.</operator><name pos:start="11:62" pos:end="11:63">pf</name><operator pos:start="11:64" pos:end="11:64">.</operator><name pos:start="11:65" pos:end="11:68">rmax</name></name> <operator pos:start="11:70" pos:end="11:71">==</operator> <literal type="number" pos:start="11:73" pos:end="11:76">0xFF</literal> <operator pos:start="11:78" pos:end="11:79">&amp;&amp;</operator>

        <name pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:10">vs</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:20">clientds</name><operator pos:start="13:21" pos:end="13:21">.</operator><name pos:start="13:22" pos:end="13:23">pf</name><operator pos:start="13:24" pos:end="13:24">.</operator><name pos:start="13:25" pos:end="13:28">bmax</name></name> <operator pos:start="13:30" pos:end="13:31">==</operator> <literal type="number" pos:start="13:33" pos:end="13:36">0xFF</literal> <operator pos:start="13:38" pos:end="13:39">&amp;&amp;</operator> <name pos:start="13:41" pos:end="13:60"><name pos:start="13:41" pos:end="13:42">vs</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:52">clientds</name><operator pos:start="13:53" pos:end="13:53">.</operator><name pos:start="13:54" pos:end="13:55">pf</name><operator pos:start="13:56" pos:end="13:56">.</operator><name pos:start="13:57" pos:end="13:60">gmax</name></name> <operator pos:start="13:62" pos:end="13:63">==</operator> <literal type="number" pos:start="13:65" pos:end="13:68">0xFF</literal></expr>)</condition> <block pos:start="13:71" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:33">

        <expr_stmt pos:start="15:9" pos:end="15:33"><expr pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:10">vs</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:17">tight</name><operator pos:start="15:18" pos:end="15:18">.</operator><name pos:start="15:19" pos:end="15:25">pixel24</name></name> <operator pos:start="15:27" pos:end="15:27">=</operator> <name pos:start="15:29" pos:end="15:32">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="21:5">else <block pos:start="17:12" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:34">

        <expr_stmt pos:start="19:9" pos:end="19:34"><expr pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:10">vs</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:17">tight</name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:25">pixel24</name></name> <operator pos:start="19:27" pos:end="19:27">=</operator> <name pos:start="19:29" pos:end="19:33">false</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:32">(<expr pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:10">vs</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:17">tight</name><operator pos:start="25:18" pos:end="25:18">.</operator><name pos:start="25:19" pos:end="25:25">quality</name></name> <operator pos:start="25:27" pos:end="25:28">!=</operator> <operator pos:start="25:30" pos:end="25:30">-</operator><literal type="number" pos:start="25:31" pos:end="25:31">1</literal></expr>)</condition> <block pos:start="25:34" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:9">

        <decl_stmt pos:start="27:9" pos:end="27:54"><decl pos:start="27:9" pos:end="27:53"><type pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:14">double</name></type> <name pos:start="27:16" pos:end="27:19">freq</name> <init pos:start="27:21" pos:end="27:53">= <expr pos:start="27:23" pos:end="27:53"><call pos:start="27:23" pos:end="27:53"><name pos:start="27:23" pos:end="27:37">vnc_update_freq</name><argument_list pos:start="27:38" pos:end="27:53">(<argument pos:start="27:39" pos:end="27:40"><expr pos:start="27:39" pos:end="27:40"><name pos:start="27:39" pos:end="27:40">vs</name></expr></argument>, <argument pos:start="27:43" pos:end="27:43"><expr pos:start="27:43" pos:end="27:43"><name pos:start="27:43" pos:end="27:43">x</name></expr></argument>, <argument pos:start="27:46" pos:end="27:46"><expr pos:start="27:46" pos:end="27:46"><name pos:start="27:46" pos:end="27:46">y</name></expr></argument>, <argument pos:start="27:49" pos:end="27:49"><expr pos:start="27:49" pos:end="27:49"><name pos:start="27:49" pos:end="27:49">w</name></expr></argument>, <argument pos:start="27:52" pos:end="27:52"><expr pos:start="27:52" pos:end="27:52"><name pos:start="27:52" pos:end="27:52">h</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:74">(<expr pos:start="31:13" pos:end="31:73"><name pos:start="31:13" pos:end="31:16">freq</name> <operator pos:start="31:18" pos:end="31:18">&gt;</operator> <name pos:start="31:20" pos:end="31:53"><name pos:start="31:20" pos:end="31:34">tight_jpeg_conf</name><index pos:start="31:35" pos:end="31:53">[<expr pos:start="31:36" pos:end="31:52"><name pos:start="31:36" pos:end="31:52"><name pos:start="31:36" pos:end="31:37">vs</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:44">tight</name><operator pos:start="31:45" pos:end="31:45">.</operator><name pos:start="31:46" pos:end="31:52">quality</name></name></expr>]</index></name><operator pos:start="31:54" pos:end="31:54">.</operator><name pos:start="31:55" pos:end="31:73">jpeg_freq_threshold</name></expr>)</condition> <block pos:start="31:76" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:59">

            <return pos:start="33:13" pos:end="33:59">return <expr pos:start="33:20" pos:end="33:58"><call pos:start="33:20" pos:end="33:58"><name pos:start="33:20" pos:end="33:35">send_rect_simple</name><argument_list pos:start="33:36" pos:end="33:58">(<argument pos:start="33:37" pos:end="33:38"><expr pos:start="33:37" pos:end="33:38"><name pos:start="33:37" pos:end="33:38">vs</name></expr></argument>, <argument pos:start="33:41" pos:end="33:41"><expr pos:start="33:41" pos:end="33:41"><name pos:start="33:41" pos:end="33:41">x</name></expr></argument>, <argument pos:start="33:44" pos:end="33:44"><expr pos:start="33:44" pos:end="33:44"><name pos:start="33:44" pos:end="33:44">y</name></expr></argument>, <argument pos:start="33:47" pos:end="33:47"><expr pos:start="33:47" pos:end="33:47"><name pos:start="33:47" pos:end="33:47">w</name></expr></argument>, <argument pos:start="33:50" pos:end="33:50"><expr pos:start="33:50" pos:end="33:50"><name pos:start="33:50" pos:end="33:50">h</name></expr></argument>, <argument pos:start="33:53" pos:end="33:57"><expr pos:start="33:53" pos:end="33:57"><name pos:start="33:53" pos:end="33:57">false</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:46">(<expr pos:start="41:9" pos:end="41:45"><name pos:start="41:9" pos:end="41:9">w</name> <operator pos:start="41:11" pos:end="41:11">*</operator> <name pos:start="41:13" pos:end="41:13">h</name> <operator pos:start="41:15" pos:end="41:15">&lt;</operator> <name pos:start="41:17" pos:end="41:45">VNC_TIGHT_MIN_SPLIT_RECT_SIZE</name></expr>)</condition> <block pos:start="41:48" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:54">

        <return pos:start="43:9" pos:end="43:54">return <expr pos:start="43:16" pos:end="43:53"><call pos:start="43:16" pos:end="43:53"><name pos:start="43:16" pos:end="43:31">send_rect_simple</name><argument_list pos:start="43:32" pos:end="43:53">(<argument pos:start="43:33" pos:end="43:34"><expr pos:start="43:33" pos:end="43:34"><name pos:start="43:33" pos:end="43:34">vs</name></expr></argument>, <argument pos:start="43:37" pos:end="43:37"><expr pos:start="43:37" pos:end="43:37"><name pos:start="43:37" pos:end="43:37">x</name></expr></argument>, <argument pos:start="43:40" pos:end="43:40"><expr pos:start="43:40" pos:end="43:40"><name pos:start="43:40" pos:end="43:40">y</name></expr></argument>, <argument pos:start="43:43" pos:end="43:43"><expr pos:start="43:43" pos:end="43:43"><name pos:start="43:43" pos:end="43:43">w</name></expr></argument>, <argument pos:start="43:46" pos:end="43:46"><expr pos:start="43:46" pos:end="43:46"><name pos:start="43:46" pos:end="43:46">h</name></expr></argument>, <argument pos:start="43:49" pos:end="43:52"><expr pos:start="43:49" pos:end="43:52"><name pos:start="43:49" pos:end="43:52">true</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:70">/* Calculate maximum number of rows in one non-solid rectangle. */</comment>



    <expr_stmt pos:start="53:5" pos:end="53:63"><expr pos:start="53:5" pos:end="53:62"><name pos:start="53:5" pos:end="53:12">max_rows</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <name pos:start="53:16" pos:end="53:48"><name pos:start="53:16" pos:end="53:25">tight_conf</name><index pos:start="53:26" pos:end="53:48">[<expr pos:start="53:27" pos:end="53:47"><name pos:start="53:27" pos:end="53:47"><name pos:start="53:27" pos:end="53:28">vs</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:35">tight</name><operator pos:start="53:36" pos:end="53:36">.</operator><name pos:start="53:37" pos:end="53:47">compression</name></name></expr>]</index></name><operator pos:start="53:49" pos:end="53:49">.</operator><name pos:start="53:50" pos:end="53:62">max_rect_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:73"><expr pos:start="55:5" pos:end="55:72"><name pos:start="55:5" pos:end="55:12">max_rows</name> <operator pos:start="55:14" pos:end="55:15">/=</operator> <call pos:start="55:17" pos:end="55:72"><name pos:start="55:17" pos:end="55:19">MIN</name><argument_list pos:start="55:20" pos:end="55:72">(<argument pos:start="55:21" pos:end="55:68"><expr pos:start="55:21" pos:end="55:68"><name pos:start="55:21" pos:end="55:53"><name pos:start="55:21" pos:end="55:30">tight_conf</name><index pos:start="55:31" pos:end="55:53">[<expr pos:start="55:32" pos:end="55:52"><name pos:start="55:32" pos:end="55:52"><name pos:start="55:32" pos:end="55:33">vs</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:40">tight</name><operator pos:start="55:41" pos:end="55:41">.</operator><name pos:start="55:42" pos:end="55:52">compression</name></name></expr>]</index></name><operator pos:start="55:54" pos:end="55:54">.</operator><name pos:start="55:55" pos:end="55:68">max_rect_width</name></expr></argument>, <argument pos:start="55:71" pos:end="55:71"><expr pos:start="55:71" pos:end="55:71"><name pos:start="55:71" pos:end="55:71">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="59:5" pos:end="59:65">return <expr pos:start="59:12" pos:end="59:64"><call pos:start="59:12" pos:end="59:64"><name pos:start="59:12" pos:end="59:38">find_large_solid_color_rect</name><argument_list pos:start="59:39" pos:end="59:64">(<argument pos:start="59:40" pos:end="59:41"><expr pos:start="59:40" pos:end="59:41"><name pos:start="59:40" pos:end="59:41">vs</name></expr></argument>, <argument pos:start="59:44" pos:end="59:44"><expr pos:start="59:44" pos:end="59:44"><name pos:start="59:44" pos:end="59:44">x</name></expr></argument>, <argument pos:start="59:47" pos:end="59:47"><expr pos:start="59:47" pos:end="59:47"><name pos:start="59:47" pos:end="59:47">y</name></expr></argument>, <argument pos:start="59:50" pos:end="59:50"><expr pos:start="59:50" pos:end="59:50"><name pos:start="59:50" pos:end="59:50">w</name></expr></argument>, <argument pos:start="59:53" pos:end="59:53"><expr pos:start="59:53" pos:end="59:53"><name pos:start="59:53" pos:end="59:53">h</name></expr></argument>, <argument pos:start="59:56" pos:end="59:63"><expr pos:start="59:56" pos:end="59:63"><name pos:start="59:56" pos:end="59:63">max_rows</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
