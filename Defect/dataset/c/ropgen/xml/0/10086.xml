<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10086.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">optimize_flags_init</name><parameter_list pos:start="1:25" pos:end="1:30">(<parameter pos:start="1:26" pos:end="1:29"><decl pos:start="1:26" pos:end="1:29"><type pos:start="1:26" pos:end="1:29"><name pos:start="1:26" pos:end="1:29">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="130:0">

    <expr_stmt pos:start="5:5" pos:end="5:55"><expr pos:start="5:5" pos:end="5:54"><name pos:start="5:5" pos:end="5:11">cpu_env</name> <operator pos:start="5:13" pos:end="5:13">=</operator> <call pos:start="5:15" pos:end="5:54"><name pos:start="5:15" pos:end="5:36">tcg_global_reg_new_ptr</name><argument_list pos:start="5:37" pos:end="5:54">(<argument pos:start="5:38" pos:end="5:46"><expr pos:start="5:38" pos:end="5:46"><name pos:start="5:38" pos:end="5:46">TCG_AREG0</name></expr></argument>, <argument pos:start="5:49" pos:end="5:53"><expr pos:start="5:49" pos:end="5:53"><literal type="string" pos:start="5:49" pos:end="5:53">"env"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="9:78"><expr pos:start="7:5" pos:end="9:77"><name pos:start="7:5" pos:end="7:13">cpu_cc_op</name> <operator pos:start="7:15" pos:end="7:15">=</operator> <call pos:start="7:17" pos:end="9:77"><name pos:start="7:17" pos:end="7:38">tcg_global_mem_new_i32</name><argument_list pos:start="7:39" pos:end="9:77">(<argument pos:start="7:40" pos:end="7:48"><expr pos:start="7:40" pos:end="7:48"><name pos:start="7:40" pos:end="7:48">TCG_AREG0</name></expr></argument>,

                                       <argument pos:start="9:40" pos:end="9:67"><expr pos:start="9:40" pos:end="9:67"><call pos:start="9:40" pos:end="9:67"><name pos:start="9:40" pos:end="9:47">offsetof</name><argument_list pos:start="9:48" pos:end="9:67">(<argument pos:start="9:49" pos:end="9:59"><expr pos:start="9:49" pos:end="9:59"><name pos:start="9:49" pos:end="9:59">CPUX86State</name></expr></argument>, <argument pos:start="9:62" pos:end="9:66"><expr pos:start="9:62" pos:end="9:66"><name pos:start="9:62" pos:end="9:66">cc_op</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="9:70" pos:end="9:76"><expr pos:start="9:70" pos:end="9:76"><literal type="string" pos:start="9:70" pos:end="9:76">"cc_op"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="13:46"><expr pos:start="11:5" pos:end="13:45"><name pos:start="11:5" pos:end="11:14">cpu_cc_src</name> <operator pos:start="11:16" pos:end="11:16">=</operator> <call pos:start="11:18" pos:end="13:45"><name pos:start="11:18" pos:end="11:35">tcg_global_mem_new</name><argument_list pos:start="11:36" pos:end="13:45">(<argument pos:start="11:37" pos:end="11:45"><expr pos:start="11:37" pos:end="11:45"><name pos:start="11:37" pos:end="11:45">TCG_AREG0</name></expr></argument>, <argument pos:start="11:48" pos:end="11:76"><expr pos:start="11:48" pos:end="11:76"><call pos:start="11:48" pos:end="11:76"><name pos:start="11:48" pos:end="11:55">offsetof</name><argument_list pos:start="11:56" pos:end="11:76">(<argument pos:start="11:57" pos:end="11:67"><expr pos:start="11:57" pos:end="11:67"><name pos:start="11:57" pos:end="11:67">CPUX86State</name></expr></argument>, <argument pos:start="11:70" pos:end="11:75"><expr pos:start="11:70" pos:end="11:75"><name pos:start="11:70" pos:end="11:75">cc_src</name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="13:37" pos:end="13:44"><expr pos:start="13:37" pos:end="13:44"><literal type="string" pos:start="13:37" pos:end="13:44">"cc_src"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="22:0"><expr pos:start="15:5" pos:end="17:45"><name pos:start="15:5" pos:end="15:14">cpu_cc_dst</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="17:45"><name pos:start="15:18" pos:end="15:35">tcg_global_mem_new</name><argument_list pos:start="15:36" pos:end="17:45">(<argument pos:start="15:37" pos:end="15:45"><expr pos:start="15:37" pos:end="15:45"><name pos:start="15:37" pos:end="15:45">TCG_AREG0</name></expr></argument>, <argument pos:start="15:48" pos:end="15:76"><expr pos:start="15:48" pos:end="15:76"><call pos:start="15:48" pos:end="15:76"><name pos:start="15:48" pos:end="15:55">offsetof</name><argument_list pos:start="15:56" pos:end="15:76">(<argument pos:start="15:57" pos:end="15:67"><expr pos:start="15:57" pos:end="15:67"><name pos:start="15:57" pos:end="15:67">CPUX86State</name></expr></argument>, <argument pos:start="15:70" pos:end="15:75"><expr pos:start="15:70" pos:end="15:75"><name pos:start="15:70" pos:end="15:75">cc_dst</name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="17:37" pos:end="17:44"><expr pos:start="17:37" pos:end="17:44"><literal type="string" pos:start="17:37" pos:end="17:44">"cc_dst"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="21:1" pos:end="21:20">#<cpp:directive pos:start="21:2" pos:end="21:6">ifdef</cpp:directive> <name pos:start="21:8" pos:end="21:20">TARGET_X86_64</name></cpp:ifdef>

    <expr_stmt pos:start="23:5" pos:end="25:88"><expr pos:start="23:5" pos:end="25:87"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:12">cpu_regs</name><index pos:start="23:13" pos:end="23:19">[<expr pos:start="23:14" pos:end="23:18"><name pos:start="23:14" pos:end="23:18">R_EAX</name></expr>]</index></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <call pos:start="23:23" pos:end="25:87"><name pos:start="23:23" pos:end="23:44">tcg_global_mem_new_i64</name><argument_list pos:start="23:45" pos:end="25:87">(<argument pos:start="23:46" pos:end="23:54"><expr pos:start="23:46" pos:end="23:54"><name pos:start="23:46" pos:end="23:54">TCG_AREG0</name></expr></argument>,

                                             <argument pos:start="25:46" pos:end="25:79"><expr pos:start="25:46" pos:end="25:79"><call pos:start="25:46" pos:end="25:79"><name pos:start="25:46" pos:end="25:53">offsetof</name><argument_list pos:start="25:54" pos:end="25:79">(<argument pos:start="25:55" pos:end="25:65"><expr pos:start="25:55" pos:end="25:65"><name pos:start="25:55" pos:end="25:65">CPUX86State</name></expr></argument>, <argument pos:start="25:68" pos:end="25:78"><expr pos:start="25:68" pos:end="25:78"><name pos:start="25:68" pos:end="25:78"><name pos:start="25:68" pos:end="25:71">regs</name><index pos:start="25:72" pos:end="25:78">[<expr pos:start="25:73" pos:end="25:77"><name pos:start="25:73" pos:end="25:77">R_EAX</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:82" pos:end="25:86"><expr pos:start="25:82" pos:end="25:86"><literal type="string" pos:start="25:82" pos:end="25:86">"rax"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="29:88"><expr pos:start="27:5" pos:end="29:87"><name pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:12">cpu_regs</name><index pos:start="27:13" pos:end="27:19">[<expr pos:start="27:14" pos:end="27:18"><name pos:start="27:14" pos:end="27:18">R_ECX</name></expr>]</index></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <call pos:start="27:23" pos:end="29:87"><name pos:start="27:23" pos:end="27:44">tcg_global_mem_new_i64</name><argument_list pos:start="27:45" pos:end="29:87">(<argument pos:start="27:46" pos:end="27:54"><expr pos:start="27:46" pos:end="27:54"><name pos:start="27:46" pos:end="27:54">TCG_AREG0</name></expr></argument>,

                                             <argument pos:start="29:46" pos:end="29:79"><expr pos:start="29:46" pos:end="29:79"><call pos:start="29:46" pos:end="29:79"><name pos:start="29:46" pos:end="29:53">offsetof</name><argument_list pos:start="29:54" pos:end="29:79">(<argument pos:start="29:55" pos:end="29:65"><expr pos:start="29:55" pos:end="29:65"><name pos:start="29:55" pos:end="29:65">CPUX86State</name></expr></argument>, <argument pos:start="29:68" pos:end="29:78"><expr pos:start="29:68" pos:end="29:78"><name pos:start="29:68" pos:end="29:78"><name pos:start="29:68" pos:end="29:71">regs</name><index pos:start="29:72" pos:end="29:78">[<expr pos:start="29:73" pos:end="29:77"><name pos:start="29:73" pos:end="29:77">R_ECX</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:82" pos:end="29:86"><expr pos:start="29:82" pos:end="29:86"><literal type="string" pos:start="29:82" pos:end="29:86">"rcx"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="33:88"><expr pos:start="31:5" pos:end="33:87"><name pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:12">cpu_regs</name><index pos:start="31:13" pos:end="31:19">[<expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:18">R_EDX</name></expr>]</index></name> <operator pos:start="31:21" pos:end="31:21">=</operator> <call pos:start="31:23" pos:end="33:87"><name pos:start="31:23" pos:end="31:44">tcg_global_mem_new_i64</name><argument_list pos:start="31:45" pos:end="33:87">(<argument pos:start="31:46" pos:end="31:54"><expr pos:start="31:46" pos:end="31:54"><name pos:start="31:46" pos:end="31:54">TCG_AREG0</name></expr></argument>,

                                             <argument pos:start="33:46" pos:end="33:79"><expr pos:start="33:46" pos:end="33:79"><call pos:start="33:46" pos:end="33:79"><name pos:start="33:46" pos:end="33:53">offsetof</name><argument_list pos:start="33:54" pos:end="33:79">(<argument pos:start="33:55" pos:end="33:65"><expr pos:start="33:55" pos:end="33:65"><name pos:start="33:55" pos:end="33:65">CPUX86State</name></expr></argument>, <argument pos:start="33:68" pos:end="33:78"><expr pos:start="33:68" pos:end="33:78"><name pos:start="33:68" pos:end="33:78"><name pos:start="33:68" pos:end="33:71">regs</name><index pos:start="33:72" pos:end="33:78">[<expr pos:start="33:73" pos:end="33:77"><name pos:start="33:73" pos:end="33:77">R_EDX</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:82" pos:end="33:86"><expr pos:start="33:82" pos:end="33:86"><literal type="string" pos:start="33:82" pos:end="33:86">"rdx"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:88"><expr pos:start="35:5" pos:end="37:87"><name pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:12">cpu_regs</name><index pos:start="35:13" pos:end="35:19">[<expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:18">R_EBX</name></expr>]</index></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <call pos:start="35:23" pos:end="37:87"><name pos:start="35:23" pos:end="35:44">tcg_global_mem_new_i64</name><argument_list pos:start="35:45" pos:end="37:87">(<argument pos:start="35:46" pos:end="35:54"><expr pos:start="35:46" pos:end="35:54"><name pos:start="35:46" pos:end="35:54">TCG_AREG0</name></expr></argument>,

                                             <argument pos:start="37:46" pos:end="37:79"><expr pos:start="37:46" pos:end="37:79"><call pos:start="37:46" pos:end="37:79"><name pos:start="37:46" pos:end="37:53">offsetof</name><argument_list pos:start="37:54" pos:end="37:79">(<argument pos:start="37:55" pos:end="37:65"><expr pos:start="37:55" pos:end="37:65"><name pos:start="37:55" pos:end="37:65">CPUX86State</name></expr></argument>, <argument pos:start="37:68" pos:end="37:78"><expr pos:start="37:68" pos:end="37:78"><name pos:start="37:68" pos:end="37:78"><name pos:start="37:68" pos:end="37:71">regs</name><index pos:start="37:72" pos:end="37:78">[<expr pos:start="37:73" pos:end="37:77"><name pos:start="37:73" pos:end="37:77">R_EBX</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:82" pos:end="37:86"><expr pos:start="37:82" pos:end="37:86"><literal type="string" pos:start="37:82" pos:end="37:86">"rbx"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="41:88"><expr pos:start="39:5" pos:end="41:87"><name pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:12">cpu_regs</name><index pos:start="39:13" pos:end="39:19">[<expr pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:18">R_ESP</name></expr>]</index></name> <operator pos:start="39:21" pos:end="39:21">=</operator> <call pos:start="39:23" pos:end="41:87"><name pos:start="39:23" pos:end="39:44">tcg_global_mem_new_i64</name><argument_list pos:start="39:45" pos:end="41:87">(<argument pos:start="39:46" pos:end="39:54"><expr pos:start="39:46" pos:end="39:54"><name pos:start="39:46" pos:end="39:54">TCG_AREG0</name></expr></argument>,

                                             <argument pos:start="41:46" pos:end="41:79"><expr pos:start="41:46" pos:end="41:79"><call pos:start="41:46" pos:end="41:79"><name pos:start="41:46" pos:end="41:53">offsetof</name><argument_list pos:start="41:54" pos:end="41:79">(<argument pos:start="41:55" pos:end="41:65"><expr pos:start="41:55" pos:end="41:65"><name pos:start="41:55" pos:end="41:65">CPUX86State</name></expr></argument>, <argument pos:start="41:68" pos:end="41:78"><expr pos:start="41:68" pos:end="41:78"><name pos:start="41:68" pos:end="41:78"><name pos:start="41:68" pos:end="41:71">regs</name><index pos:start="41:72" pos:end="41:78">[<expr pos:start="41:73" pos:end="41:77"><name pos:start="41:73" pos:end="41:77">R_ESP</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:82" pos:end="41:86"><expr pos:start="41:82" pos:end="41:86"><literal type="string" pos:start="41:82" pos:end="41:86">"rsp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:88"><expr pos:start="43:5" pos:end="45:87"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:12">cpu_regs</name><index pos:start="43:13" pos:end="43:19">[<expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:18">R_EBP</name></expr>]</index></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <call pos:start="43:23" pos:end="45:87"><name pos:start="43:23" pos:end="43:44">tcg_global_mem_new_i64</name><argument_list pos:start="43:45" pos:end="45:87">(<argument pos:start="43:46" pos:end="43:54"><expr pos:start="43:46" pos:end="43:54"><name pos:start="43:46" pos:end="43:54">TCG_AREG0</name></expr></argument>,

                                             <argument pos:start="45:46" pos:end="45:79"><expr pos:start="45:46" pos:end="45:79"><call pos:start="45:46" pos:end="45:79"><name pos:start="45:46" pos:end="45:53">offsetof</name><argument_list pos:start="45:54" pos:end="45:79">(<argument pos:start="45:55" pos:end="45:65"><expr pos:start="45:55" pos:end="45:65"><name pos:start="45:55" pos:end="45:65">CPUX86State</name></expr></argument>, <argument pos:start="45:68" pos:end="45:78"><expr pos:start="45:68" pos:end="45:78"><name pos:start="45:68" pos:end="45:78"><name pos:start="45:68" pos:end="45:71">regs</name><index pos:start="45:72" pos:end="45:78">[<expr pos:start="45:73" pos:end="45:77"><name pos:start="45:73" pos:end="45:77">R_EBP</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:82" pos:end="45:86"><expr pos:start="45:82" pos:end="45:86"><literal type="string" pos:start="45:82" pos:end="45:86">"rbp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="49:88"><expr pos:start="47:5" pos:end="49:87"><name pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:12">cpu_regs</name><index pos:start="47:13" pos:end="47:19">[<expr pos:start="47:14" pos:end="47:18"><name pos:start="47:14" pos:end="47:18">R_ESI</name></expr>]</index></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <call pos:start="47:23" pos:end="49:87"><name pos:start="47:23" pos:end="47:44">tcg_global_mem_new_i64</name><argument_list pos:start="47:45" pos:end="49:87">(<argument pos:start="47:46" pos:end="47:54"><expr pos:start="47:46" pos:end="47:54"><name pos:start="47:46" pos:end="47:54">TCG_AREG0</name></expr></argument>,

                                             <argument pos:start="49:46" pos:end="49:79"><expr pos:start="49:46" pos:end="49:79"><call pos:start="49:46" pos:end="49:79"><name pos:start="49:46" pos:end="49:53">offsetof</name><argument_list pos:start="49:54" pos:end="49:79">(<argument pos:start="49:55" pos:end="49:65"><expr pos:start="49:55" pos:end="49:65"><name pos:start="49:55" pos:end="49:65">CPUX86State</name></expr></argument>, <argument pos:start="49:68" pos:end="49:78"><expr pos:start="49:68" pos:end="49:78"><name pos:start="49:68" pos:end="49:78"><name pos:start="49:68" pos:end="49:71">regs</name><index pos:start="49:72" pos:end="49:78">[<expr pos:start="49:73" pos:end="49:77"><name pos:start="49:73" pos:end="49:77">R_ESI</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:82" pos:end="49:86"><expr pos:start="49:82" pos:end="49:86"><literal type="string" pos:start="49:82" pos:end="49:86">"rsi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="53:88"><expr pos:start="51:5" pos:end="53:87"><name pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:12">cpu_regs</name><index pos:start="51:13" pos:end="51:19">[<expr pos:start="51:14" pos:end="51:18"><name pos:start="51:14" pos:end="51:18">R_EDI</name></expr>]</index></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <call pos:start="51:23" pos:end="53:87"><name pos:start="51:23" pos:end="51:44">tcg_global_mem_new_i64</name><argument_list pos:start="51:45" pos:end="53:87">(<argument pos:start="51:46" pos:end="51:54"><expr pos:start="51:46" pos:end="51:54"><name pos:start="51:46" pos:end="51:54">TCG_AREG0</name></expr></argument>,

                                             <argument pos:start="53:46" pos:end="53:79"><expr pos:start="53:46" pos:end="53:79"><call pos:start="53:46" pos:end="53:79"><name pos:start="53:46" pos:end="53:53">offsetof</name><argument_list pos:start="53:54" pos:end="53:79">(<argument pos:start="53:55" pos:end="53:65"><expr pos:start="53:55" pos:end="53:65"><name pos:start="53:55" pos:end="53:65">CPUX86State</name></expr></argument>, <argument pos:start="53:68" pos:end="53:78"><expr pos:start="53:68" pos:end="53:78"><name pos:start="53:68" pos:end="53:78"><name pos:start="53:68" pos:end="53:71">regs</name><index pos:start="53:72" pos:end="53:78">[<expr pos:start="53:73" pos:end="53:77"><name pos:start="53:73" pos:end="53:77">R_EDI</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="53:82" pos:end="53:86"><expr pos:start="53:82" pos:end="53:86"><literal type="string" pos:start="53:82" pos:end="53:86">"rdi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="57:79"><expr pos:start="55:5" pos:end="57:78"><name pos:start="55:5" pos:end="55:15"><name pos:start="55:5" pos:end="55:12">cpu_regs</name><index pos:start="55:13" pos:end="55:15">[<expr pos:start="55:14" pos:end="55:14"><literal type="number" pos:start="55:14" pos:end="55:14">8</literal></expr>]</index></name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="57:78"><name pos:start="55:19" pos:end="55:40">tcg_global_mem_new_i64</name><argument_list pos:start="55:41" pos:end="57:78">(<argument pos:start="55:42" pos:end="55:50"><expr pos:start="55:42" pos:end="55:50"><name pos:start="55:42" pos:end="55:50">TCG_AREG0</name></expr></argument>,

                                         <argument pos:start="57:42" pos:end="57:71"><expr pos:start="57:42" pos:end="57:71"><call pos:start="57:42" pos:end="57:71"><name pos:start="57:42" pos:end="57:49">offsetof</name><argument_list pos:start="57:50" pos:end="57:71">(<argument pos:start="57:51" pos:end="57:61"><expr pos:start="57:51" pos:end="57:61"><name pos:start="57:51" pos:end="57:61">CPUX86State</name></expr></argument>, <argument pos:start="57:64" pos:end="57:70"><expr pos:start="57:64" pos:end="57:70"><name pos:start="57:64" pos:end="57:70"><name pos:start="57:64" pos:end="57:67">regs</name><index pos:start="57:68" pos:end="57:70">[<expr pos:start="57:69" pos:end="57:69"><literal type="number" pos:start="57:69" pos:end="57:69">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="57:74" pos:end="57:77"><expr pos:start="57:74" pos:end="57:77"><literal type="string" pos:start="57:74" pos:end="57:77">"r8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="61:80"><expr pos:start="59:5" pos:end="61:79"><name pos:start="59:5" pos:end="59:15"><name pos:start="59:5" pos:end="59:12">cpu_regs</name><index pos:start="59:13" pos:end="59:15">[<expr pos:start="59:14" pos:end="59:14"><literal type="number" pos:start="59:14" pos:end="59:14">9</literal></expr>]</index></name> <operator pos:start="59:17" pos:end="59:17">=</operator> <call pos:start="59:19" pos:end="61:79"><name pos:start="59:19" pos:end="59:40">tcg_global_mem_new_i64</name><argument_list pos:start="59:41" pos:end="61:79">(<argument pos:start="59:42" pos:end="59:50"><expr pos:start="59:42" pos:end="59:50"><name pos:start="59:42" pos:end="59:50">TCG_AREG0</name></expr></argument>,

                                          <argument pos:start="61:43" pos:end="61:72"><expr pos:start="61:43" pos:end="61:72"><call pos:start="61:43" pos:end="61:72"><name pos:start="61:43" pos:end="61:50">offsetof</name><argument_list pos:start="61:51" pos:end="61:72">(<argument pos:start="61:52" pos:end="61:62"><expr pos:start="61:52" pos:end="61:62"><name pos:start="61:52" pos:end="61:62">CPUX86State</name></expr></argument>, <argument pos:start="61:65" pos:end="61:71"><expr pos:start="61:65" pos:end="61:71"><name pos:start="61:65" pos:end="61:71"><name pos:start="61:65" pos:end="61:68">regs</name><index pos:start="61:69" pos:end="61:71">[<expr pos:start="61:70" pos:end="61:70"><literal type="number" pos:start="61:70" pos:end="61:70">9</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:75" pos:end="61:78"><expr pos:start="61:75" pos:end="61:78"><literal type="string" pos:start="61:75" pos:end="61:78">"r9"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="65:82"><expr pos:start="63:5" pos:end="65:81"><name pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:12">cpu_regs</name><index pos:start="63:13" pos:end="63:16">[<expr pos:start="63:14" pos:end="63:15"><literal type="number" pos:start="63:14" pos:end="63:15">10</literal></expr>]</index></name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="65:81"><name pos:start="63:20" pos:end="63:41">tcg_global_mem_new_i64</name><argument_list pos:start="63:42" pos:end="65:81">(<argument pos:start="63:43" pos:end="63:51"><expr pos:start="63:43" pos:end="63:51"><name pos:start="63:43" pos:end="63:51">TCG_AREG0</name></expr></argument>,

                                          <argument pos:start="65:43" pos:end="65:73"><expr pos:start="65:43" pos:end="65:73"><call pos:start="65:43" pos:end="65:73"><name pos:start="65:43" pos:end="65:50">offsetof</name><argument_list pos:start="65:51" pos:end="65:73">(<argument pos:start="65:52" pos:end="65:62"><expr pos:start="65:52" pos:end="65:62"><name pos:start="65:52" pos:end="65:62">CPUX86State</name></expr></argument>, <argument pos:start="65:65" pos:end="65:72"><expr pos:start="65:65" pos:end="65:72"><name pos:start="65:65" pos:end="65:72"><name pos:start="65:65" pos:end="65:68">regs</name><index pos:start="65:69" pos:end="65:72">[<expr pos:start="65:70" pos:end="65:71"><literal type="number" pos:start="65:70" pos:end="65:71">10</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="65:76" pos:end="65:80"><expr pos:start="65:76" pos:end="65:80"><literal type="string" pos:start="65:76" pos:end="65:80">"r10"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="69:82"><expr pos:start="67:5" pos:end="69:81"><name pos:start="67:5" pos:end="67:16"><name pos:start="67:5" pos:end="67:12">cpu_regs</name><index pos:start="67:13" pos:end="67:16">[<expr pos:start="67:14" pos:end="67:15"><literal type="number" pos:start="67:14" pos:end="67:15">11</literal></expr>]</index></name> <operator pos:start="67:18" pos:end="67:18">=</operator> <call pos:start="67:20" pos:end="69:81"><name pos:start="67:20" pos:end="67:41">tcg_global_mem_new_i64</name><argument_list pos:start="67:42" pos:end="69:81">(<argument pos:start="67:43" pos:end="67:51"><expr pos:start="67:43" pos:end="67:51"><name pos:start="67:43" pos:end="67:51">TCG_AREG0</name></expr></argument>,

                                          <argument pos:start="69:43" pos:end="69:73"><expr pos:start="69:43" pos:end="69:73"><call pos:start="69:43" pos:end="69:73"><name pos:start="69:43" pos:end="69:50">offsetof</name><argument_list pos:start="69:51" pos:end="69:73">(<argument pos:start="69:52" pos:end="69:62"><expr pos:start="69:52" pos:end="69:62"><name pos:start="69:52" pos:end="69:62">CPUX86State</name></expr></argument>, <argument pos:start="69:65" pos:end="69:72"><expr pos:start="69:65" pos:end="69:72"><name pos:start="69:65" pos:end="69:72"><name pos:start="69:65" pos:end="69:68">regs</name><index pos:start="69:69" pos:end="69:72">[<expr pos:start="69:70" pos:end="69:71"><literal type="number" pos:start="69:70" pos:end="69:71">11</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:76" pos:end="69:80"><expr pos:start="69:76" pos:end="69:80"><literal type="string" pos:start="69:76" pos:end="69:80">"r11"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="73:82"><expr pos:start="71:5" pos:end="73:81"><name pos:start="71:5" pos:end="71:16"><name pos:start="71:5" pos:end="71:12">cpu_regs</name><index pos:start="71:13" pos:end="71:16">[<expr pos:start="71:14" pos:end="71:15"><literal type="number" pos:start="71:14" pos:end="71:15">12</literal></expr>]</index></name> <operator pos:start="71:18" pos:end="71:18">=</operator> <call pos:start="71:20" pos:end="73:81"><name pos:start="71:20" pos:end="71:41">tcg_global_mem_new_i64</name><argument_list pos:start="71:42" pos:end="73:81">(<argument pos:start="71:43" pos:end="71:51"><expr pos:start="71:43" pos:end="71:51"><name pos:start="71:43" pos:end="71:51">TCG_AREG0</name></expr></argument>,

                                          <argument pos:start="73:43" pos:end="73:73"><expr pos:start="73:43" pos:end="73:73"><call pos:start="73:43" pos:end="73:73"><name pos:start="73:43" pos:end="73:50">offsetof</name><argument_list pos:start="73:51" pos:end="73:73">(<argument pos:start="73:52" pos:end="73:62"><expr pos:start="73:52" pos:end="73:62"><name pos:start="73:52" pos:end="73:62">CPUX86State</name></expr></argument>, <argument pos:start="73:65" pos:end="73:72"><expr pos:start="73:65" pos:end="73:72"><name pos:start="73:65" pos:end="73:72"><name pos:start="73:65" pos:end="73:68">regs</name><index pos:start="73:69" pos:end="73:72">[<expr pos:start="73:70" pos:end="73:71"><literal type="number" pos:start="73:70" pos:end="73:71">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="73:76" pos:end="73:80"><expr pos:start="73:76" pos:end="73:80"><literal type="string" pos:start="73:76" pos:end="73:80">"r12"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="77:82"><expr pos:start="75:5" pos:end="77:81"><name pos:start="75:5" pos:end="75:16"><name pos:start="75:5" pos:end="75:12">cpu_regs</name><index pos:start="75:13" pos:end="75:16">[<expr pos:start="75:14" pos:end="75:15"><literal type="number" pos:start="75:14" pos:end="75:15">13</literal></expr>]</index></name> <operator pos:start="75:18" pos:end="75:18">=</operator> <call pos:start="75:20" pos:end="77:81"><name pos:start="75:20" pos:end="75:41">tcg_global_mem_new_i64</name><argument_list pos:start="75:42" pos:end="77:81">(<argument pos:start="75:43" pos:end="75:51"><expr pos:start="75:43" pos:end="75:51"><name pos:start="75:43" pos:end="75:51">TCG_AREG0</name></expr></argument>,

                                          <argument pos:start="77:43" pos:end="77:73"><expr pos:start="77:43" pos:end="77:73"><call pos:start="77:43" pos:end="77:73"><name pos:start="77:43" pos:end="77:50">offsetof</name><argument_list pos:start="77:51" pos:end="77:73">(<argument pos:start="77:52" pos:end="77:62"><expr pos:start="77:52" pos:end="77:62"><name pos:start="77:52" pos:end="77:62">CPUX86State</name></expr></argument>, <argument pos:start="77:65" pos:end="77:72"><expr pos:start="77:65" pos:end="77:72"><name pos:start="77:65" pos:end="77:72"><name pos:start="77:65" pos:end="77:68">regs</name><index pos:start="77:69" pos:end="77:72">[<expr pos:start="77:70" pos:end="77:71"><literal type="number" pos:start="77:70" pos:end="77:71">13</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:76" pos:end="77:80"><expr pos:start="77:76" pos:end="77:80"><literal type="string" pos:start="77:76" pos:end="77:80">"r13"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="81:82"><expr pos:start="79:5" pos:end="81:81"><name pos:start="79:5" pos:end="79:16"><name pos:start="79:5" pos:end="79:12">cpu_regs</name><index pos:start="79:13" pos:end="79:16">[<expr pos:start="79:14" pos:end="79:15"><literal type="number" pos:start="79:14" pos:end="79:15">14</literal></expr>]</index></name> <operator pos:start="79:18" pos:end="79:18">=</operator> <call pos:start="79:20" pos:end="81:81"><name pos:start="79:20" pos:end="79:41">tcg_global_mem_new_i64</name><argument_list pos:start="79:42" pos:end="81:81">(<argument pos:start="79:43" pos:end="79:51"><expr pos:start="79:43" pos:end="79:51"><name pos:start="79:43" pos:end="79:51">TCG_AREG0</name></expr></argument>,

                                          <argument pos:start="81:43" pos:end="81:73"><expr pos:start="81:43" pos:end="81:73"><call pos:start="81:43" pos:end="81:73"><name pos:start="81:43" pos:end="81:50">offsetof</name><argument_list pos:start="81:51" pos:end="81:73">(<argument pos:start="81:52" pos:end="81:62"><expr pos:start="81:52" pos:end="81:62"><name pos:start="81:52" pos:end="81:62">CPUX86State</name></expr></argument>, <argument pos:start="81:65" pos:end="81:72"><expr pos:start="81:65" pos:end="81:72"><name pos:start="81:65" pos:end="81:72"><name pos:start="81:65" pos:end="81:68">regs</name><index pos:start="81:69" pos:end="81:72">[<expr pos:start="81:70" pos:end="81:71"><literal type="number" pos:start="81:70" pos:end="81:71">14</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="81:76" pos:end="81:80"><expr pos:start="81:76" pos:end="81:80"><literal type="string" pos:start="81:76" pos:end="81:80">"r14"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="88:0"><expr pos:start="83:5" pos:end="85:81"><name pos:start="83:5" pos:end="83:16"><name pos:start="83:5" pos:end="83:12">cpu_regs</name><index pos:start="83:13" pos:end="83:16">[<expr pos:start="83:14" pos:end="83:15"><literal type="number" pos:start="83:14" pos:end="83:15">15</literal></expr>]</index></name> <operator pos:start="83:18" pos:end="83:18">=</operator> <call pos:start="83:20" pos:end="85:81"><name pos:start="83:20" pos:end="83:41">tcg_global_mem_new_i64</name><argument_list pos:start="83:42" pos:end="85:81">(<argument pos:start="83:43" pos:end="83:51"><expr pos:start="83:43" pos:end="83:51"><name pos:start="83:43" pos:end="83:51">TCG_AREG0</name></expr></argument>,

                                          <argument pos:start="85:43" pos:end="85:73"><expr pos:start="85:43" pos:end="85:73"><call pos:start="85:43" pos:end="85:73"><name pos:start="85:43" pos:end="85:50">offsetof</name><argument_list pos:start="85:51" pos:end="85:73">(<argument pos:start="85:52" pos:end="85:62"><expr pos:start="85:52" pos:end="85:62"><name pos:start="85:52" pos:end="85:62">CPUX86State</name></expr></argument>, <argument pos:start="85:65" pos:end="85:72"><expr pos:start="85:65" pos:end="85:72"><name pos:start="85:65" pos:end="85:72"><name pos:start="85:65" pos:end="85:68">regs</name><index pos:start="85:69" pos:end="85:72">[<expr pos:start="85:70" pos:end="85:71"><literal type="number" pos:start="85:70" pos:end="85:71">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:76" pos:end="85:80"><expr pos:start="85:76" pos:end="85:80"><literal type="string" pos:start="85:76" pos:end="85:80">"r15"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="87:1" pos:end="87:5">#<cpp:directive pos:start="87:2" pos:end="87:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="89:5" pos:end="91:88"><expr pos:start="89:5" pos:end="91:87"><name pos:start="89:5" pos:end="89:19"><name pos:start="89:5" pos:end="89:12">cpu_regs</name><index pos:start="89:13" pos:end="89:19">[<expr pos:start="89:14" pos:end="89:18"><name pos:start="89:14" pos:end="89:18">R_EAX</name></expr>]</index></name> <operator pos:start="89:21" pos:end="89:21">=</operator> <call pos:start="89:23" pos:end="91:87"><name pos:start="89:23" pos:end="89:44">tcg_global_mem_new_i32</name><argument_list pos:start="89:45" pos:end="91:87">(<argument pos:start="89:46" pos:end="89:54"><expr pos:start="89:46" pos:end="89:54"><name pos:start="89:46" pos:end="89:54">TCG_AREG0</name></expr></argument>,

                                             <argument pos:start="91:46" pos:end="91:79"><expr pos:start="91:46" pos:end="91:79"><call pos:start="91:46" pos:end="91:79"><name pos:start="91:46" pos:end="91:53">offsetof</name><argument_list pos:start="91:54" pos:end="91:79">(<argument pos:start="91:55" pos:end="91:65"><expr pos:start="91:55" pos:end="91:65"><name pos:start="91:55" pos:end="91:65">CPUX86State</name></expr></argument>, <argument pos:start="91:68" pos:end="91:78"><expr pos:start="91:68" pos:end="91:78"><name pos:start="91:68" pos:end="91:78"><name pos:start="91:68" pos:end="91:71">regs</name><index pos:start="91:72" pos:end="91:78">[<expr pos:start="91:73" pos:end="91:77"><name pos:start="91:73" pos:end="91:77">R_EAX</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="91:82" pos:end="91:86"><expr pos:start="91:82" pos:end="91:86"><literal type="string" pos:start="91:82" pos:end="91:86">"eax"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="95:88"><expr pos:start="93:5" pos:end="95:87"><name pos:start="93:5" pos:end="93:19"><name pos:start="93:5" pos:end="93:12">cpu_regs</name><index pos:start="93:13" pos:end="93:19">[<expr pos:start="93:14" pos:end="93:18"><name pos:start="93:14" pos:end="93:18">R_ECX</name></expr>]</index></name> <operator pos:start="93:21" pos:end="93:21">=</operator> <call pos:start="93:23" pos:end="95:87"><name pos:start="93:23" pos:end="93:44">tcg_global_mem_new_i32</name><argument_list pos:start="93:45" pos:end="95:87">(<argument pos:start="93:46" pos:end="93:54"><expr pos:start="93:46" pos:end="93:54"><name pos:start="93:46" pos:end="93:54">TCG_AREG0</name></expr></argument>,

                                             <argument pos:start="95:46" pos:end="95:79"><expr pos:start="95:46" pos:end="95:79"><call pos:start="95:46" pos:end="95:79"><name pos:start="95:46" pos:end="95:53">offsetof</name><argument_list pos:start="95:54" pos:end="95:79">(<argument pos:start="95:55" pos:end="95:65"><expr pos:start="95:55" pos:end="95:65"><name pos:start="95:55" pos:end="95:65">CPUX86State</name></expr></argument>, <argument pos:start="95:68" pos:end="95:78"><expr pos:start="95:68" pos:end="95:78"><name pos:start="95:68" pos:end="95:78"><name pos:start="95:68" pos:end="95:71">regs</name><index pos:start="95:72" pos:end="95:78">[<expr pos:start="95:73" pos:end="95:77"><name pos:start="95:73" pos:end="95:77">R_ECX</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="95:82" pos:end="95:86"><expr pos:start="95:82" pos:end="95:86"><literal type="string" pos:start="95:82" pos:end="95:86">"ecx"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="99:88"><expr pos:start="97:5" pos:end="99:87"><name pos:start="97:5" pos:end="97:19"><name pos:start="97:5" pos:end="97:12">cpu_regs</name><index pos:start="97:13" pos:end="97:19">[<expr pos:start="97:14" pos:end="97:18"><name pos:start="97:14" pos:end="97:18">R_EDX</name></expr>]</index></name> <operator pos:start="97:21" pos:end="97:21">=</operator> <call pos:start="97:23" pos:end="99:87"><name pos:start="97:23" pos:end="97:44">tcg_global_mem_new_i32</name><argument_list pos:start="97:45" pos:end="99:87">(<argument pos:start="97:46" pos:end="97:54"><expr pos:start="97:46" pos:end="97:54"><name pos:start="97:46" pos:end="97:54">TCG_AREG0</name></expr></argument>,

                                             <argument pos:start="99:46" pos:end="99:79"><expr pos:start="99:46" pos:end="99:79"><call pos:start="99:46" pos:end="99:79"><name pos:start="99:46" pos:end="99:53">offsetof</name><argument_list pos:start="99:54" pos:end="99:79">(<argument pos:start="99:55" pos:end="99:65"><expr pos:start="99:55" pos:end="99:65"><name pos:start="99:55" pos:end="99:65">CPUX86State</name></expr></argument>, <argument pos:start="99:68" pos:end="99:78"><expr pos:start="99:68" pos:end="99:78"><name pos:start="99:68" pos:end="99:78"><name pos:start="99:68" pos:end="99:71">regs</name><index pos:start="99:72" pos:end="99:78">[<expr pos:start="99:73" pos:end="99:77"><name pos:start="99:73" pos:end="99:77">R_EDX</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:82" pos:end="99:86"><expr pos:start="99:82" pos:end="99:86"><literal type="string" pos:start="99:82" pos:end="99:86">"edx"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="103:88"><expr pos:start="101:5" pos:end="103:87"><name pos:start="101:5" pos:end="101:19"><name pos:start="101:5" pos:end="101:12">cpu_regs</name><index pos:start="101:13" pos:end="101:19">[<expr pos:start="101:14" pos:end="101:18"><name pos:start="101:14" pos:end="101:18">R_EBX</name></expr>]</index></name> <operator pos:start="101:21" pos:end="101:21">=</operator> <call pos:start="101:23" pos:end="103:87"><name pos:start="101:23" pos:end="101:44">tcg_global_mem_new_i32</name><argument_list pos:start="101:45" pos:end="103:87">(<argument pos:start="101:46" pos:end="101:54"><expr pos:start="101:46" pos:end="101:54"><name pos:start="101:46" pos:end="101:54">TCG_AREG0</name></expr></argument>,

                                             <argument pos:start="103:46" pos:end="103:79"><expr pos:start="103:46" pos:end="103:79"><call pos:start="103:46" pos:end="103:79"><name pos:start="103:46" pos:end="103:53">offsetof</name><argument_list pos:start="103:54" pos:end="103:79">(<argument pos:start="103:55" pos:end="103:65"><expr pos:start="103:55" pos:end="103:65"><name pos:start="103:55" pos:end="103:65">CPUX86State</name></expr></argument>, <argument pos:start="103:68" pos:end="103:78"><expr pos:start="103:68" pos:end="103:78"><name pos:start="103:68" pos:end="103:78"><name pos:start="103:68" pos:end="103:71">regs</name><index pos:start="103:72" pos:end="103:78">[<expr pos:start="103:73" pos:end="103:77"><name pos:start="103:73" pos:end="103:77">R_EBX</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="103:82" pos:end="103:86"><expr pos:start="103:82" pos:end="103:86"><literal type="string" pos:start="103:82" pos:end="103:86">"ebx"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="107:88"><expr pos:start="105:5" pos:end="107:87"><name pos:start="105:5" pos:end="105:19"><name pos:start="105:5" pos:end="105:12">cpu_regs</name><index pos:start="105:13" pos:end="105:19">[<expr pos:start="105:14" pos:end="105:18"><name pos:start="105:14" pos:end="105:18">R_ESP</name></expr>]</index></name> <operator pos:start="105:21" pos:end="105:21">=</operator> <call pos:start="105:23" pos:end="107:87"><name pos:start="105:23" pos:end="105:44">tcg_global_mem_new_i32</name><argument_list pos:start="105:45" pos:end="107:87">(<argument pos:start="105:46" pos:end="105:54"><expr pos:start="105:46" pos:end="105:54"><name pos:start="105:46" pos:end="105:54">TCG_AREG0</name></expr></argument>,

                                             <argument pos:start="107:46" pos:end="107:79"><expr pos:start="107:46" pos:end="107:79"><call pos:start="107:46" pos:end="107:79"><name pos:start="107:46" pos:end="107:53">offsetof</name><argument_list pos:start="107:54" pos:end="107:79">(<argument pos:start="107:55" pos:end="107:65"><expr pos:start="107:55" pos:end="107:65"><name pos:start="107:55" pos:end="107:65">CPUX86State</name></expr></argument>, <argument pos:start="107:68" pos:end="107:78"><expr pos:start="107:68" pos:end="107:78"><name pos:start="107:68" pos:end="107:78"><name pos:start="107:68" pos:end="107:71">regs</name><index pos:start="107:72" pos:end="107:78">[<expr pos:start="107:73" pos:end="107:77"><name pos:start="107:73" pos:end="107:77">R_ESP</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="107:82" pos:end="107:86"><expr pos:start="107:82" pos:end="107:86"><literal type="string" pos:start="107:82" pos:end="107:86">"esp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="111:88"><expr pos:start="109:5" pos:end="111:87"><name pos:start="109:5" pos:end="109:19"><name pos:start="109:5" pos:end="109:12">cpu_regs</name><index pos:start="109:13" pos:end="109:19">[<expr pos:start="109:14" pos:end="109:18"><name pos:start="109:14" pos:end="109:18">R_EBP</name></expr>]</index></name> <operator pos:start="109:21" pos:end="109:21">=</operator> <call pos:start="109:23" pos:end="111:87"><name pos:start="109:23" pos:end="109:44">tcg_global_mem_new_i32</name><argument_list pos:start="109:45" pos:end="111:87">(<argument pos:start="109:46" pos:end="109:54"><expr pos:start="109:46" pos:end="109:54"><name pos:start="109:46" pos:end="109:54">TCG_AREG0</name></expr></argument>,

                                             <argument pos:start="111:46" pos:end="111:79"><expr pos:start="111:46" pos:end="111:79"><call pos:start="111:46" pos:end="111:79"><name pos:start="111:46" pos:end="111:53">offsetof</name><argument_list pos:start="111:54" pos:end="111:79">(<argument pos:start="111:55" pos:end="111:65"><expr pos:start="111:55" pos:end="111:65"><name pos:start="111:55" pos:end="111:65">CPUX86State</name></expr></argument>, <argument pos:start="111:68" pos:end="111:78"><expr pos:start="111:68" pos:end="111:78"><name pos:start="111:68" pos:end="111:78"><name pos:start="111:68" pos:end="111:71">regs</name><index pos:start="111:72" pos:end="111:78">[<expr pos:start="111:73" pos:end="111:77"><name pos:start="111:73" pos:end="111:77">R_EBP</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="111:82" pos:end="111:86"><expr pos:start="111:82" pos:end="111:86"><literal type="string" pos:start="111:82" pos:end="111:86">"ebp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="115:88"><expr pos:start="113:5" pos:end="115:87"><name pos:start="113:5" pos:end="113:19"><name pos:start="113:5" pos:end="113:12">cpu_regs</name><index pos:start="113:13" pos:end="113:19">[<expr pos:start="113:14" pos:end="113:18"><name pos:start="113:14" pos:end="113:18">R_ESI</name></expr>]</index></name> <operator pos:start="113:21" pos:end="113:21">=</operator> <call pos:start="113:23" pos:end="115:87"><name pos:start="113:23" pos:end="113:44">tcg_global_mem_new_i32</name><argument_list pos:start="113:45" pos:end="115:87">(<argument pos:start="113:46" pos:end="113:54"><expr pos:start="113:46" pos:end="113:54"><name pos:start="113:46" pos:end="113:54">TCG_AREG0</name></expr></argument>,

                                             <argument pos:start="115:46" pos:end="115:79"><expr pos:start="115:46" pos:end="115:79"><call pos:start="115:46" pos:end="115:79"><name pos:start="115:46" pos:end="115:53">offsetof</name><argument_list pos:start="115:54" pos:end="115:79">(<argument pos:start="115:55" pos:end="115:65"><expr pos:start="115:55" pos:end="115:65"><name pos:start="115:55" pos:end="115:65">CPUX86State</name></expr></argument>, <argument pos:start="115:68" pos:end="115:78"><expr pos:start="115:68" pos:end="115:78"><name pos:start="115:68" pos:end="115:78"><name pos:start="115:68" pos:end="115:71">regs</name><index pos:start="115:72" pos:end="115:78">[<expr pos:start="115:73" pos:end="115:77"><name pos:start="115:73" pos:end="115:77">R_ESI</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="115:82" pos:end="115:86"><expr pos:start="115:82" pos:end="115:86"><literal type="string" pos:start="115:82" pos:end="115:86">"esi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="130:0"><expr pos:start="117:5" pos:end="119:87"><name pos:start="117:5" pos:end="117:19"><name pos:start="117:5" pos:end="117:12">cpu_regs</name><index pos:start="117:13" pos:end="117:19">[<expr pos:start="117:14" pos:end="117:18"><name pos:start="117:14" pos:end="117:18">R_EDI</name></expr>]</index></name> <operator pos:start="117:21" pos:end="117:21">=</operator> <call pos:start="117:23" pos:end="119:87"><name pos:start="117:23" pos:end="117:44">tcg_global_mem_new_i32</name><argument_list pos:start="117:45" pos:end="119:87">(<argument pos:start="117:46" pos:end="117:54"><expr pos:start="117:46" pos:end="117:54"><name pos:start="117:46" pos:end="117:54">TCG_AREG0</name></expr></argument>,

                                             <argument pos:start="119:46" pos:end="119:79"><expr pos:start="119:46" pos:end="119:79"><call pos:start="119:46" pos:end="119:79"><name pos:start="119:46" pos:end="119:53">offsetof</name><argument_list pos:start="119:54" pos:end="119:79">(<argument pos:start="119:55" pos:end="119:65"><expr pos:start="119:55" pos:end="119:65"><name pos:start="119:55" pos:end="119:65">CPUX86State</name></expr></argument>, <argument pos:start="119:68" pos:end="119:78"><expr pos:start="119:68" pos:end="119:78"><name pos:start="119:68" pos:end="119:78"><name pos:start="119:68" pos:end="119:71">regs</name><index pos:start="119:72" pos:end="119:78">[<expr pos:start="119:73" pos:end="119:77"><name pos:start="119:73" pos:end="119:77">R_EDI</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="119:82" pos:end="119:86"><expr pos:start="119:82" pos:end="119:86"><literal type="string" pos:start="119:82" pos:end="119:86">"edi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="121:1" pos:end="121:6">#<cpp:directive pos:start="121:2" pos:end="121:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="125:5" pos:end="125:26">/* register helpers */</comment>

<cpp:define pos:start="127:1" pos:end="127:20">#<cpp:directive pos:start="127:2" pos:end="127:7">define</cpp:directive> <cpp:macro pos:start="127:9" pos:end="127:18"><name pos:start="127:9" pos:end="127:18">GEN_HELPER</name></cpp:macro> <cpp:value pos:start="127:20" pos:end="127:20">2</cpp:value></cpp:define>

<cpp:include pos:start="129:1" pos:end="129:19">#<cpp:directive pos:start="129:2" pos:end="129:8">include</cpp:directive> <cpp:file pos:start="129:10" pos:end="129:19">"helper.h"</cpp:file></cpp:include>

</block_content>}</block></function>
</unit>
