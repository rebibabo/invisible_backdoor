<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8620.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:25">migration_is_blocked</name><parameter_list pos:start="1:26" pos:end="1:39">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:34"><name pos:start="1:27" pos:end="1:31">Error</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier><modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:38">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:17">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:40">(<expr pos:start="5:9" pos:end="5:39"><call pos:start="5:9" pos:end="5:39"><name pos:start="5:9" pos:end="5:33">qemu_savevm_state_blocked</name><argument_list pos:start="5:34" pos:end="5:39">(<argument pos:start="5:35" pos:end="5:38"><expr pos:start="5:35" pos:end="5:38"><name pos:start="5:35" pos:end="5:38">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:42" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:20">

        <return pos:start="7:9" pos:end="7:20">return <expr pos:start="7:16" pos:end="7:19"><name pos:start="7:16" pos:end="7:19">true</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:26">migration_blockers</name></expr>)</condition> <block pos:start="13:29" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:20">

        <expr_stmt pos:start="15:9" pos:end="15:53"><expr pos:start="15:9" pos:end="15:52"><operator pos:start="15:9" pos:end="15:9">*</operator><name pos:start="15:10" pos:end="15:13">errp</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <call pos:start="15:17" pos:end="15:52"><name pos:start="15:17" pos:end="15:26">error_copy</name><argument_list pos:start="15:27" pos:end="15:52">(<argument pos:start="15:28" pos:end="15:51"><expr pos:start="15:28" pos:end="15:51"><name pos:start="15:28" pos:end="15:51"><name pos:start="15:28" pos:end="15:45">migration_blockers</name><operator pos:start="15:46" pos:end="15:47">-&gt;</operator><name pos:start="15:48" pos:end="15:51">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">true</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="23:5" pos:end="23:17">return <expr pos:start="23:12" pos:end="23:16"><name pos:start="23:12" pos:end="23:16">false</name></expr>;</return>

</block_content>}</block></function>
</unit>
