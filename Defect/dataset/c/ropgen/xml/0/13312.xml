<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13312.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_stss</name><parameter_list pos:start="1:25" pos:end="1:72">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:53">ByteIOContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">pb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:66">MOVAtom</name></type> <name pos:start="1:68" pos:end="1:71">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name> <init pos:start="5:18" pos:end="5:54">= <expr pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:20">c</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:24">fc</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:33">streams</name><index pos:start="5:34" pos:end="5:54">[<expr pos:start="5:35" pos:end="5:53"><name pos:start="5:35" pos:end="5:51"><name pos:start="5:35" pos:end="5:35">c</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:39">fc</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:51">nb_streams</name></name><operator pos:start="5:52" pos:end="5:52">-</operator><literal type="number" pos:start="5:53" pos:end="5:53">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name> <init pos:start="7:26" pos:end="7:40">= <expr pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:29">st</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">i</name></decl>, <decl pos:start="9:21" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:21" pos:end="9:27">entries</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><call pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">get_byte</name><argument_list pos:start="13:13" pos:end="13:16">(<argument pos:start="13:14" pos:end="13:15"><expr pos:start="13:14" pos:end="13:15"><name pos:start="13:14" pos:end="13:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="13:19" pos:end="13:31">/* version */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:17"><expr pos:start="15:5" pos:end="15:16"><call pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">get_be24</name><argument_list pos:start="15:13" pos:end="15:16">(<argument pos:start="15:14" pos:end="15:15"><expr pos:start="15:14" pos:end="15:15"><name pos:start="15:14" pos:end="15:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="15:19" pos:end="15:29">/* flags */</comment>



    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:11">entries</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:26"><name pos:start="19:15" pos:end="19:22">get_be32</name><argument_list pos:start="19:23" pos:end="19:26">(<argument pos:start="19:24" pos:end="19:25"><expr pos:start="19:24" pos:end="19:25"><name pos:start="19:24" pos:end="19:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:53"><expr pos:start="23:5" pos:end="23:52"><call pos:start="23:5" pos:end="23:52"><name pos:start="23:5" pos:end="23:11">dprintf</name><argument_list pos:start="23:12" pos:end="23:52">(<argument pos:start="23:13" pos:end="23:17"><expr pos:start="23:13" pos:end="23:17"><name pos:start="23:13" pos:end="23:17"><name pos:start="23:13" pos:end="23:13">c</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:17">fc</name></name></expr></argument>, <argument pos:start="23:20" pos:end="23:42"><expr pos:start="23:20" pos:end="23:42"><literal type="string" pos:start="23:20" pos:end="23:42">"keyframe_count = %d\n"</literal></expr></argument>, <argument pos:start="23:45" pos:end="23:51"><expr pos:start="23:45" pos:end="23:51"><name pos:start="23:45" pos:end="23:51">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="29:18"><if pos:start="27:5" pos:end="29:18">if<condition pos:start="27:7" pos:end="27:41">(<expr pos:start="27:8" pos:end="27:40"><name pos:start="27:8" pos:end="27:14">entries</name> <operator pos:start="27:16" pos:end="27:17">&gt;=</operator> <name pos:start="27:19" pos:end="27:26">UINT_MAX</name> <operator pos:start="27:28" pos:end="27:28">/</operator> <sizeof pos:start="27:30" pos:end="27:40">sizeof<argument_list pos:start="27:36" pos:end="27:40">(<argument pos:start="27:37" pos:end="27:39"><expr pos:start="27:37" pos:end="27:39"><name pos:start="27:37" pos:end="27:39">int</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:53"><expr pos:start="31:5" pos:end="31:52"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:6">sc</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:17">keyframes</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:52"><name pos:start="31:21" pos:end="31:29">av_malloc</name><argument_list pos:start="31:30" pos:end="31:52">(<argument pos:start="31:31" pos:end="31:51"><expr pos:start="31:31" pos:end="31:51"><name pos:start="31:31" pos:end="31:37">entries</name> <operator pos:start="31:39" pos:end="31:39">*</operator> <sizeof pos:start="31:41" pos:end="31:51">sizeof<argument_list pos:start="31:47" pos:end="31:51">(<argument pos:start="31:48" pos:end="31:50"><expr pos:start="31:48" pos:end="31:50"><name pos:start="31:48" pos:end="31:50">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:31"><if pos:start="33:5" pos:end="35:31">if <condition pos:start="33:8" pos:end="33:23">(<expr pos:start="33:9" pos:end="33:22"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:22"><name pos:start="33:10" pos:end="33:11">sc</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:22">keyframes</name></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:31"><block_content pos:start="35:9" pos:end="35:31">

        <return pos:start="35:9" pos:end="35:31">return <expr pos:start="35:16" pos:end="35:30"><call pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:22">AVERROR</name><argument_list pos:start="35:23" pos:end="35:30">(<argument pos:start="35:24" pos:end="35:29"><expr pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:6">sc</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:22">keyframe_count</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:32">entries</name></expr>;</expr_stmt>



    <for pos:start="41:5" pos:end="47:5">for<control pos:start="41:8" pos:end="41:28">(<init pos:start="41:9" pos:end="41:12"><expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:9">i</name><operator pos:start="41:10" pos:end="41:10">=</operator><literal type="number" pos:start="41:11" pos:end="41:11">0</literal></expr>;</init> <condition pos:start="41:14" pos:end="41:23"><expr pos:start="41:14" pos:end="41:22"><name pos:start="41:14" pos:end="41:14">i</name><operator pos:start="41:15" pos:end="41:15">&lt;</operator><name pos:start="41:16" pos:end="41:22">entries</name></expr>;</condition> <incr pos:start="41:25" pos:end="41:27"><expr pos:start="41:25" pos:end="41:27"><name pos:start="41:25" pos:end="41:25">i</name><operator pos:start="41:26" pos:end="41:27">++</operator></expr></incr>)</control> <block pos:start="41:30" pos:end="47:5">{<block_content pos:start="43:9" pos:end="43:40">

        <expr_stmt pos:start="43:9" pos:end="43:40"><expr pos:start="43:9" pos:end="43:39"><name pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:10">sc</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:21">keyframes</name><index pos:start="43:22" pos:end="43:24">[<expr pos:start="43:23" pos:end="43:23"><name pos:start="43:23" pos:end="43:23">i</name></expr>]</index></name> <operator pos:start="43:26" pos:end="43:26">=</operator> <call pos:start="43:28" pos:end="43:39"><name pos:start="43:28" pos:end="43:35">get_be32</name><argument_list pos:start="43:36" pos:end="43:39">(<argument pos:start="43:37" pos:end="43:38"><expr pos:start="43:37" pos:end="43:38"><name pos:start="43:37" pos:end="43:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="45:9" pos:end="45:63">//dprintf(c-&gt;fc, "keyframes[]=%d\n", sc-&gt;keyframes[i]);</comment>

    </block_content>}</block></for>

    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
