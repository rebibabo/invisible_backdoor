<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24808.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">ff_thread_report_progress</name><parameter_list pos:start="1:31" pos:end="1:64">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:42">ThreadFrame</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">f</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:52"><decl pos:start="1:48" pos:end="1:52"><type pos:start="1:48" pos:end="1:52"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:52">n</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:63"><decl pos:start="1:55" pos:end="1:63"><type pos:start="1:55" pos:end="1:63"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:63">field</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:45">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">PerThreadContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:79"><decl pos:start="7:5" pos:end="7:78"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">atomic_int</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:24">progress</name> <init pos:start="7:26" pos:end="7:78">= <expr pos:start="7:28" pos:end="7:78"><ternary pos:start="7:28" pos:end="7:78"><condition pos:start="7:28" pos:end="7:40"><expr pos:start="7:28" pos:end="7:38"><name pos:start="7:28" pos:end="7:38"><name pos:start="7:28" pos:end="7:28">f</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:38">progress</name></name></expr> ?</condition><then pos:start="7:42" pos:end="7:71"> <expr pos:start="7:42" pos:end="7:71"><operator pos:start="7:42" pos:end="7:42">(</operator><name pos:start="7:43" pos:end="7:52">atomic_int</name><operator pos:start="7:53" pos:end="7:53">*</operator><operator pos:start="7:54" pos:end="7:54">)</operator><name pos:start="7:55" pos:end="7:71"><name pos:start="7:55" pos:end="7:55">f</name><operator pos:start="7:56" pos:end="7:57">-&gt;</operator><name pos:start="7:58" pos:end="7:65">progress</name><operator pos:start="7:66" pos:end="7:67">-&gt;</operator><name pos:start="7:68" pos:end="7:71">data</name></name></expr> </then><else pos:start="7:73" pos:end="7:78">: <expr pos:start="7:75" pos:end="7:78"><name pos:start="7:75" pos:end="7:78">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:15"><if pos:start="11:5" pos:end="15:15">if <condition pos:start="11:8" pos:end="13:74">(<expr pos:start="11:9" pos:end="13:73"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:17">progress</name> <operator pos:start="11:19" pos:end="11:20">||</operator>

        <call pos:start="13:9" pos:end="13:68"><name pos:start="13:9" pos:end="13:28">atomic_load_explicit</name><argument_list pos:start="13:29" pos:end="13:68">(<argument pos:start="13:30" pos:end="13:45"><expr pos:start="13:30" pos:end="13:45"><operator pos:start="13:30" pos:end="13:30">&amp;</operator><name pos:start="13:31" pos:end="13:45"><name pos:start="13:31" pos:end="13:38">progress</name><index pos:start="13:39" pos:end="13:45">[<expr pos:start="13:40" pos:end="13:44"><name pos:start="13:40" pos:end="13:44">field</name></expr>]</index></name></expr></argument>, <argument pos:start="13:48" pos:end="13:67"><expr pos:start="13:48" pos:end="13:67"><name pos:start="13:48" pos:end="13:67">memory_order_acquire</name></expr></argument>)</argument_list></call> <operator pos:start="13:70" pos:end="13:71">&gt;=</operator> <name pos:start="13:73" pos:end="13:73">n</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:15"><block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:39"><expr pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:5">p</name> <operator pos:start="19:7" pos:end="19:7">=</operator> <name pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:9">f</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:16">owner</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:26">internal</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:38">thread_ctx</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:88"><if pos:start="23:5" pos:end="25:88">if <condition pos:start="23:8" pos:end="23:41">(<expr pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:9">f</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:16">owner</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:23">debug</name></name><operator pos:start="23:24" pos:end="23:24">&amp;</operator><name pos:start="23:25" pos:end="23:40">FF_DEBUG_THREADS</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:88"><block_content pos:start="25:9" pos:end="25:88">

        <expr_stmt pos:start="25:9" pos:end="25:88"><expr pos:start="25:9" pos:end="25:87"><call pos:start="25:9" pos:end="25:87"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:87">(<argument pos:start="25:16" pos:end="25:23"><expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:16">f</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:23">owner</name></name></expr></argument>, <argument pos:start="25:26" pos:end="25:37"><expr pos:start="25:26" pos:end="25:37"><name pos:start="25:26" pos:end="25:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="25:40" pos:end="25:66"><expr pos:start="25:40" pos:end="25:66"><literal type="string" pos:start="25:40" pos:end="25:66">"%p finished %d field %d\n"</literal></expr></argument>, <argument pos:start="25:69" pos:end="25:76"><expr pos:start="25:69" pos:end="25:76"><name pos:start="25:69" pos:end="25:76">progress</name></expr></argument>, <argument pos:start="25:79" pos:end="25:79"><expr pos:start="25:79" pos:end="25:79"><name pos:start="25:79" pos:end="25:79">n</name></expr></argument>, <argument pos:start="25:82" pos:end="25:86"><expr pos:start="25:82" pos:end="25:86"><name pos:start="25:82" pos:end="25:86">field</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:43"><expr pos:start="29:5" pos:end="29:42"><call pos:start="29:5" pos:end="29:42"><name pos:start="29:5" pos:end="29:22">pthread_mutex_lock</name><argument_list pos:start="29:23" pos:end="29:42">(<argument pos:start="29:24" pos:end="29:41"><expr pos:start="29:24" pos:end="29:41"><operator pos:start="29:24" pos:end="29:24">&amp;</operator><name pos:start="29:25" pos:end="29:41"><name pos:start="29:25" pos:end="29:25">p</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:41">progress_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><call pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:16">atomic_store</name><argument_list pos:start="33:17" pos:end="33:37">(<argument pos:start="33:18" pos:end="33:33"><expr pos:start="33:18" pos:end="33:33"><operator pos:start="33:18" pos:end="33:18">&amp;</operator><name pos:start="33:19" pos:end="33:33"><name pos:start="33:19" pos:end="33:26">progress</name><index pos:start="33:27" pos:end="33:33">[<expr pos:start="33:28" pos:end="33:32"><name pos:start="33:28" pos:end="33:32">field</name></expr>]</index></name></expr></argument>, <argument pos:start="33:36" pos:end="33:36"><expr pos:start="33:36" pos:end="33:36"><name pos:start="33:36" pos:end="33:36">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:46"><expr pos:start="37:5" pos:end="37:45"><call pos:start="37:5" pos:end="37:45"><name pos:start="37:5" pos:end="37:26">pthread_cond_broadcast</name><argument_list pos:start="37:27" pos:end="37:45">(<argument pos:start="37:28" pos:end="37:44"><expr pos:start="37:28" pos:end="37:44"><operator pos:start="37:28" pos:end="37:28">&amp;</operator><name pos:start="37:29" pos:end="37:44"><name pos:start="37:29" pos:end="37:29">p</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:44">progress_cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:45"><expr pos:start="39:5" pos:end="39:44"><call pos:start="39:5" pos:end="39:44"><name pos:start="39:5" pos:end="39:24">pthread_mutex_unlock</name><argument_list pos:start="39:25" pos:end="39:44">(<argument pos:start="39:26" pos:end="39:43"><expr pos:start="39:26" pos:end="39:43"><operator pos:start="39:26" pos:end="39:26">&amp;</operator><name pos:start="39:27" pos:end="39:43"><name pos:start="39:27" pos:end="39:27">p</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:43">progress_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
