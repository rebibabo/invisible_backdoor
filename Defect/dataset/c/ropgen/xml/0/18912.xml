<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18912.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">spapr_powerdown_req</name><parameter_list pos:start="1:32" pos:end="1:58">(<parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:43"><name pos:start="1:33" pos:end="1:40">Notifier</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">n</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:49">void</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:57">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:77">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">sPAPRMachineState</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:28">spapr</name> <init pos:start="5:30" pos:end="5:64">= <expr pos:start="5:32" pos:end="5:64"><call pos:start="5:32" pos:end="5:64"><name pos:start="5:32" pos:end="5:44">SPAPR_MACHINE</name><argument_list pos:start="5:45" pos:end="5:64">(<argument pos:start="5:46" pos:end="5:63"><expr pos:start="5:46" pos:end="5:63"><call pos:start="5:46" pos:end="5:63"><name pos:start="5:46" pos:end="5:61">qdev_get_machine</name><argument_list pos:start="5:62" pos:end="5:63">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:25">rtas_error_log</name></name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:30">hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:30"><name pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:28">rtas_event_log_v6</name></name> <modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:35">v6hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:36"><name pos:start="11:5" pos:end="11:34"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:34">rtas_event_log_v6_maina</name></name> <modifier pos:start="11:36" pos:end="11:36">*</modifier></type><name pos:start="11:37" pos:end="11:41">maina</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:34">rtas_event_log_v6_mainb</name></name> <modifier pos:start="13:36" pos:end="13:36">*</modifier></type><name pos:start="13:37" pos:end="13:41">mainb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:39"><type pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:33">rtas_event_log_v6_epow</name></name> <modifier pos:start="15:35" pos:end="15:35">*</modifier></type><name pos:start="15:36" pos:end="15:39">epow</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:24">epow_log_full</name></name> <modifier pos:start="17:26" pos:end="17:26">*</modifier></type><name pos:start="17:27" pos:end="17:34">new_epow</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:12">new_epow</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:43"><name pos:start="21:16" pos:end="21:24">g_malloc0</name><argument_list pos:start="21:25" pos:end="21:43">(<argument pos:start="21:26" pos:end="21:42"><expr pos:start="21:26" pos:end="21:42"><sizeof pos:start="21:26" pos:end="21:42">sizeof<argument_list pos:start="21:32" pos:end="21:42">(<argument pos:start="21:33" pos:end="21:41"><expr pos:start="21:33" pos:end="21:41"><operator pos:start="21:33" pos:end="21:33">*</operator><name pos:start="21:34" pos:end="21:41">new_epow</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:7">hdr</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <operator pos:start="23:11" pos:end="23:11">&amp;</operator><name pos:start="23:12" pos:end="23:24"><name pos:start="23:12" pos:end="23:19">new_epow</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:24">hdr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:9">v6hdr</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <operator pos:start="25:13" pos:end="25:13">&amp;</operator><name pos:start="25:14" pos:end="25:28"><name pos:start="25:14" pos:end="25:21">new_epow</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:28">v6hdr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:9">maina</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <operator pos:start="27:13" pos:end="27:13">&amp;</operator><name pos:start="27:14" pos:end="27:28"><name pos:start="27:14" pos:end="27:21">new_epow</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:28">maina</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:9">mainb</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <operator pos:start="29:13" pos:end="29:13">&amp;</operator><name pos:start="29:14" pos:end="29:28"><name pos:start="29:14" pos:end="29:21">new_epow</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:28">mainb</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:8">epow</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <operator pos:start="31:12" pos:end="31:12">&amp;</operator><name pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:20">new_epow</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:26">epow</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="43:53"><expr pos:start="35:5" pos:end="43:52"><name pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:7">hdr</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:16">summary</name></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="43:52"><name pos:start="35:20" pos:end="35:30">cpu_to_be32</name><argument_list pos:start="35:31" pos:end="43:52">(<argument pos:start="35:32" pos:end="43:51"><expr pos:start="35:32" pos:end="43:51"><name pos:start="35:32" pos:end="35:49">RTAS_LOG_VERSION_6</name>

                               <operator pos:start="37:32" pos:end="37:32">|</operator> <name pos:start="37:34" pos:end="37:56">RTAS_LOG_SEVERITY_EVENT</name>

                               <operator pos:start="39:32" pos:end="39:32">|</operator> <name pos:start="39:34" pos:end="39:67">RTAS_LOG_DISPOSITION_NOT_RECOVERED</name>

                               <operator pos:start="41:32" pos:end="41:32">|</operator> <name pos:start="41:34" pos:end="41:63">RTAS_LOG_OPTIONAL_PART_PRESENT</name>

                               <operator pos:start="43:32" pos:end="43:32">|</operator> <name pos:start="43:34" pos:end="43:51">RTAS_LOG_TYPE_EPOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="47:64"><expr pos:start="45:5" pos:end="47:63"><name pos:start="45:5" pos:end="45:24"><name pos:start="45:5" pos:end="45:7">hdr</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:24">extended_length</name></name> <operator pos:start="45:26" pos:end="45:26">=</operator> <call pos:start="45:28" pos:end="47:63"><name pos:start="45:28" pos:end="45:38">cpu_to_be32</name><argument_list pos:start="45:39" pos:end="47:63">(<argument pos:start="45:40" pos:end="47:62"><expr pos:start="45:40" pos:end="47:62"><sizeof pos:start="45:40" pos:end="45:56">sizeof<argument_list pos:start="45:46" pos:end="45:56">(<argument pos:start="45:47" pos:end="45:55"><expr pos:start="45:47" pos:end="45:55"><operator pos:start="45:47" pos:end="45:47">*</operator><name pos:start="45:48" pos:end="45:55">new_epow</name></expr></argument>)</argument_list></sizeof>

                                       <operator pos:start="47:40" pos:end="47:40">-</operator> <sizeof pos:start="47:42" pos:end="47:62">sizeof<argument_list pos:start="47:48" pos:end="47:62">(<argument pos:start="47:49" pos:end="47:61"><expr pos:start="47:49" pos:end="47:61"><name pos:start="47:49" pos:end="47:61"><name pos:start="47:49" pos:end="47:56">new_epow</name><operator pos:start="47:57" pos:end="47:58">-&gt;</operator><name pos:start="47:59" pos:end="47:61">hdr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:28"><expr pos:start="51:5" pos:end="51:27"><call pos:start="51:5" pos:end="51:27"><name pos:start="51:5" pos:end="51:20">spapr_init_v6hdr</name><argument_list pos:start="51:21" pos:end="51:27">(<argument pos:start="51:22" pos:end="51:26"><expr pos:start="51:22" pos:end="51:26"><name pos:start="51:22" pos:end="51:26">v6hdr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:61"><expr pos:start="53:5" pos:end="53:60"><call pos:start="53:5" pos:end="53:60"><name pos:start="53:5" pos:end="53:20">spapr_init_maina</name><argument_list pos:start="53:21" pos:end="53:60">(<argument pos:start="53:22" pos:end="53:26"><expr pos:start="53:22" pos:end="53:26"><name pos:start="53:22" pos:end="53:26">maina</name></expr></argument>, <argument pos:start="53:29" pos:end="53:29"><expr pos:start="53:29" pos:end="53:29"><literal type="number" pos:start="53:29" pos:end="53:29">3</literal></expr></argument> <comment type="block" pos:start="53:31" pos:end="53:59">/* Main-A, Main-B and EPOW */</comment>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:70"><expr pos:start="57:5" pos:end="57:69"><name pos:start="57:5" pos:end="57:25"><name pos:start="57:5" pos:end="57:9">mainb</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:14">hdr</name><operator pos:start="57:15" pos:end="57:15">.</operator><name pos:start="57:16" pos:end="57:25">section_id</name></name> <operator pos:start="57:27" pos:end="57:27">=</operator> <call pos:start="57:29" pos:end="57:69"><name pos:start="57:29" pos:end="57:39">cpu_to_be16</name><argument_list pos:start="57:40" pos:end="57:69">(<argument pos:start="57:41" pos:end="57:68"><expr pos:start="57:41" pos:end="57:68"><name pos:start="57:41" pos:end="57:68">RTAS_LOG_V6_SECTION_ID_MAINB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:60"><expr pos:start="59:5" pos:end="59:59"><name pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:9">mainb</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:14">hdr</name><operator pos:start="59:15" pos:end="59:15">.</operator><name pos:start="59:16" pos:end="59:29">section_length</name></name> <operator pos:start="59:31" pos:end="59:31">=</operator> <call pos:start="59:33" pos:end="59:59"><name pos:start="59:33" pos:end="59:43">cpu_to_be16</name><argument_list pos:start="59:44" pos:end="59:59">(<argument pos:start="59:45" pos:end="59:58"><expr pos:start="59:45" pos:end="59:58"><sizeof pos:start="59:45" pos:end="59:58">sizeof<argument_list pos:start="59:51" pos:end="59:58">(<argument pos:start="59:52" pos:end="59:57"><expr pos:start="59:52" pos:end="59:57"><operator pos:start="59:52" pos:end="59:52">*</operator><name pos:start="59:53" pos:end="59:57">mainb</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="61:5" pos:end="61:57">/* FIXME: section version, subtype and creator id? */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:31"><expr pos:start="63:5" pos:end="63:30"><name pos:start="63:5" pos:end="63:23"><name pos:start="63:5" pos:end="63:9">mainb</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:23">subsystem_id</name></name> <operator pos:start="63:25" pos:end="63:25">=</operator> <literal type="number" pos:start="63:27" pos:end="63:30">0xa0</literal></expr>;</expr_stmt> <comment type="block" pos:start="63:33" pos:end="63:58">/* External environment */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:33"><expr pos:start="65:5" pos:end="65:32"><name pos:start="65:5" pos:end="65:25"><name pos:start="65:5" pos:end="65:9">mainb</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:25">event_severity</name></name> <operator pos:start="65:27" pos:end="65:27">=</operator> <literal type="number" pos:start="65:29" pos:end="65:32">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="65:35" pos:end="65:65">/* Informational / non-error */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:32"><expr pos:start="67:5" pos:end="67:31"><name pos:start="67:5" pos:end="67:24"><name pos:start="67:5" pos:end="67:9">mainb</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:24">event_subtype</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <literal type="number" pos:start="67:28" pos:end="67:31">0xd0</literal></expr>;</expr_stmt> <comment type="block" pos:start="67:34" pos:end="67:54">/* Normal shutdown */</comment>



    <expr_stmt pos:start="71:5" pos:end="71:68"><expr pos:start="71:5" pos:end="71:67"><name pos:start="71:5" pos:end="71:24"><name pos:start="71:5" pos:end="71:8">epow</name><operator pos:start="71:9" pos:end="71:10">-&gt;</operator><name pos:start="71:11" pos:end="71:13">hdr</name><operator pos:start="71:14" pos:end="71:14">.</operator><name pos:start="71:15" pos:end="71:24">section_id</name></name> <operator pos:start="71:26" pos:end="71:26">=</operator> <call pos:start="71:28" pos:end="71:67"><name pos:start="71:28" pos:end="71:38">cpu_to_be16</name><argument_list pos:start="71:39" pos:end="71:67">(<argument pos:start="71:40" pos:end="71:66"><expr pos:start="71:40" pos:end="71:66"><name pos:start="71:40" pos:end="71:66">RTAS_LOG_V6_SECTION_ID_EPOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:58"><expr pos:start="73:5" pos:end="73:57"><name pos:start="73:5" pos:end="73:28"><name pos:start="73:5" pos:end="73:8">epow</name><operator pos:start="73:9" pos:end="73:10">-&gt;</operator><name pos:start="73:11" pos:end="73:13">hdr</name><operator pos:start="73:14" pos:end="73:14">.</operator><name pos:start="73:15" pos:end="73:28">section_length</name></name> <operator pos:start="73:30" pos:end="73:30">=</operator> <call pos:start="73:32" pos:end="73:57"><name pos:start="73:32" pos:end="73:42">cpu_to_be16</name><argument_list pos:start="73:43" pos:end="73:57">(<argument pos:start="73:44" pos:end="73:56"><expr pos:start="73:44" pos:end="73:56"><sizeof pos:start="73:44" pos:end="73:56">sizeof<argument_list pos:start="73:50" pos:end="73:56">(<argument pos:start="73:51" pos:end="73:55"><expr pos:start="73:51" pos:end="73:55"><operator pos:start="73:51" pos:end="73:51">*</operator><name pos:start="73:52" pos:end="73:55">epow</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:34"><expr pos:start="75:5" pos:end="75:33"><name pos:start="75:5" pos:end="75:29"><name pos:start="75:5" pos:end="75:8">epow</name><operator pos:start="75:9" pos:end="75:10">-&gt;</operator><name pos:start="75:11" pos:end="75:13">hdr</name><operator pos:start="75:14" pos:end="75:14">.</operator><name pos:start="75:15" pos:end="75:29">section_version</name></name> <operator pos:start="75:31" pos:end="75:31">=</operator> <literal type="number" pos:start="75:33" pos:end="75:33">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="75:36" pos:end="75:67">/* includes extended modifier */</comment>

    <comment type="block" pos:start="77:5" pos:end="77:48">/* FIXME: section subtype and creator id? */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:65"><expr pos:start="79:5" pos:end="79:64"><name pos:start="79:5" pos:end="79:22"><name pos:start="79:5" pos:end="79:8">epow</name><operator pos:start="79:9" pos:end="79:10">-&gt;</operator><name pos:start="79:11" pos:end="79:22">sensor_value</name></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:64">RTAS_LOG_V6_EPOW_ACTION_SYSTEM_SHUTDOWN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:60"><expr pos:start="81:5" pos:end="81:59"><name pos:start="81:5" pos:end="81:24"><name pos:start="81:5" pos:end="81:8">epow</name><operator pos:start="81:9" pos:end="81:10">-&gt;</operator><name pos:start="81:11" pos:end="81:24">event_modifier</name></name> <operator pos:start="81:26" pos:end="81:26">=</operator> <name pos:start="81:28" pos:end="81:59">RTAS_LOG_V6_EPOW_MODIFIER_NORMAL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:76"><expr pos:start="83:5" pos:end="83:75"><name pos:start="83:5" pos:end="83:27"><name pos:start="83:5" pos:end="83:8">epow</name><operator pos:start="83:9" pos:end="83:10">-&gt;</operator><name pos:start="83:11" pos:end="83:27">extended_modifier</name></name> <operator pos:start="83:29" pos:end="83:29">=</operator> <name pos:start="83:31" pos:end="83:75">RTAS_LOG_V6_EPOW_XMODIFIER_PARTITION_SPECIFIC</name></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:55"><expr pos:start="87:5" pos:end="87:54"><call pos:start="87:5" pos:end="87:54"><name pos:start="87:5" pos:end="87:24">rtas_event_log_queue</name><argument_list pos:start="87:25" pos:end="87:54">(<argument pos:start="87:26" pos:end="87:43"><expr pos:start="87:26" pos:end="87:43"><name pos:start="87:26" pos:end="87:43">RTAS_LOG_TYPE_EPOW</name></expr></argument>, <argument pos:start="87:46" pos:end="87:53"><expr pos:start="87:46" pos:end="87:53"><name pos:start="87:46" pos:end="87:53">new_epow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="95:77"><expr pos:start="91:5" pos:end="95:76"><call pos:start="91:5" pos:end="95:76"><name pos:start="91:5" pos:end="91:18">qemu_irq_pulse</name><argument_list pos:start="91:19" pos:end="95:76">(<argument pos:start="91:20" pos:end="95:75"><expr pos:start="91:20" pos:end="95:75"><call pos:start="91:20" pos:end="95:75"><name pos:start="91:20" pos:end="91:32">xics_get_qirq</name><argument_list pos:start="91:33" pos:end="95:75">(<argument pos:start="91:34" pos:end="91:51"><expr pos:start="91:34" pos:end="91:51"><call pos:start="91:34" pos:end="91:51"><name pos:start="91:34" pos:end="91:44">XICS_FABRIC</name><argument_list pos:start="91:45" pos:end="91:51">(<argument pos:start="91:46" pos:end="91:50"><expr pos:start="91:46" pos:end="91:50"><name pos:start="91:46" pos:end="91:50">spapr</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="93:34" pos:end="95:74"><expr pos:start="93:34" pos:end="95:74"><call pos:start="93:34" pos:end="95:74"><name pos:start="93:34" pos:end="93:54">rtas_event_log_to_irq</name><argument_list pos:start="93:55" pos:end="95:74">(<argument pos:start="93:56" pos:end="93:60"><expr pos:start="93:56" pos:end="93:60"><name pos:start="93:56" pos:end="93:60">spapr</name></expr></argument>,

                                                       <argument pos:start="95:56" pos:end="95:73"><expr pos:start="95:56" pos:end="95:73"><name pos:start="95:56" pos:end="95:73">RTAS_LOG_TYPE_EPOW</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
