<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8481.c" pos:tabs="8"><function pos:start="1:1" pos:end="251:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">decode_vui</name><parameter_list pos:start="1:23" pos:end="1:52">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:34">HEVCContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:46">HEVCSPS</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">sps</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="251:1">{<block_content pos:start="5:5" pos:end="249:5">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:7">VUI</name> <modifier pos:start="5:9" pos:end="5:9">*</modifier></type><name pos:start="5:10" pos:end="5:12">vui</name>          <init pos:start="5:23" pos:end="5:33">= <expr pos:start="5:25" pos:end="5:33"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:33"><name pos:start="5:26" pos:end="5:28">sps</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:33">vui</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:38">= <expr pos:start="7:25" pos:end="7:38"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:38"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:34">HEVClc</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:38">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">GetBitContext</name></type> <name pos:start="9:19" pos:end="9:24">backup</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">sar_present</name></decl>, <decl pos:start="11:22" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:24">alt</name> <init pos:start="11:26" pos:end="11:28">= <expr pos:start="11:28" pos:end="11:28"><literal type="number" pos:start="11:28" pos:end="11:28">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:53"><expr pos:start="15:5" pos:end="15:52"><call pos:start="15:5" pos:end="15:52"><name pos:start="15:5" pos:end="15:10">av_log</name><argument_list pos:start="15:11" pos:end="15:52">(<argument pos:start="15:12" pos:end="15:19"><expr pos:start="15:12" pos:end="15:19"><name pos:start="15:12" pos:end="15:19"><name pos:start="15:12" pos:end="15:12">s</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:19">avctx</name></name></expr></argument>, <argument pos:start="15:22" pos:end="15:33"><expr pos:start="15:22" pos:end="15:33"><name pos:start="15:22" pos:end="15:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="15:36" pos:end="15:51"><expr pos:start="15:36" pos:end="15:51"><literal type="string" pos:start="15:36" pos:end="15:51">"Decoding VUI\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:15">sar_present</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <call pos:start="19:19" pos:end="19:31"><name pos:start="19:19" pos:end="19:27">get_bits1</name><argument_list pos:start="19:28" pos:end="19:31">(<argument pos:start="19:29" pos:end="19:30"><expr pos:start="19:29" pos:end="19:30"><name pos:start="19:29" pos:end="19:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="41:5"><if pos:start="21:5" pos:end="41:5">if <condition pos:start="21:8" pos:end="21:20">(<expr pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:19">sar_present</name></expr>)</condition> <block pos:start="21:22" pos:end="41:5">{<block_content pos:start="23:9" pos:end="39:56">

        <decl_stmt pos:start="23:9" pos:end="23:42"><decl pos:start="23:9" pos:end="23:41"><type pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:15">uint8_t</name></type> <name pos:start="23:17" pos:end="23:23">sar_idx</name> <init pos:start="23:25" pos:end="23:41">= <expr pos:start="23:27" pos:end="23:41"><call pos:start="23:27" pos:end="23:41"><name pos:start="23:27" pos:end="23:34">get_bits</name><argument_list pos:start="23:35" pos:end="23:41">(<argument pos:start="23:36" pos:end="23:37"><expr pos:start="23:36" pos:end="23:37"><name pos:start="23:36" pos:end="23:37">gb</name></expr></argument>, <argument pos:start="23:40" pos:end="23:40"><expr pos:start="23:40" pos:end="23:40"><literal type="number" pos:start="23:40" pos:end="23:40">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="25:9" pos:end="39:56"><if pos:start="25:9" pos:end="27:40">if <condition pos:start="25:12" pos:end="25:46">(<expr pos:start="25:13" pos:end="25:45"><name pos:start="25:13" pos:end="25:19">sar_idx</name> <operator pos:start="25:21" pos:end="25:21">&lt;</operator> <call pos:start="25:23" pos:end="25:45"><name pos:start="25:23" pos:end="25:36">FF_ARRAY_ELEMS</name><argument_list pos:start="25:37" pos:end="25:45">(<argument pos:start="25:38" pos:end="25:44"><expr pos:start="25:38" pos:end="25:44"><name pos:start="25:38" pos:end="25:44">vui_sar</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:40"><block_content pos:start="27:13" pos:end="27:40">

            <expr_stmt pos:start="27:13" pos:end="27:40"><expr pos:start="27:13" pos:end="27:39"><name pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:15">vui</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:20">sar</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:39"><name pos:start="27:24" pos:end="27:30">vui_sar</name><index pos:start="27:31" pos:end="27:39">[<expr pos:start="27:32" pos:end="27:38"><name pos:start="27:32" pos:end="27:38">sar_idx</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="29:9" pos:end="35:9">else if <condition pos:start="29:17" pos:end="29:32">(<expr pos:start="29:18" pos:end="29:31"><name pos:start="29:18" pos:end="29:24">sar_idx</name> <operator pos:start="29:26" pos:end="29:27">==</operator> <literal type="number" pos:start="29:29" pos:end="29:31">255</literal></expr>)</condition> <block pos:start="29:34" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:44">

            <expr_stmt pos:start="31:13" pos:end="31:44"><expr pos:start="31:13" pos:end="31:43"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:15">vui</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:20">sar</name><operator pos:start="31:21" pos:end="31:21">.</operator><name pos:start="31:22" pos:end="31:24">num</name></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <call pos:start="31:28" pos:end="31:43"><name pos:start="31:28" pos:end="31:35">get_bits</name><argument_list pos:start="31:36" pos:end="31:43">(<argument pos:start="31:37" pos:end="31:38"><expr pos:start="31:37" pos:end="31:38"><name pos:start="31:37" pos:end="31:38">gb</name></expr></argument>, <argument pos:start="31:41" pos:end="31:42"><expr pos:start="31:41" pos:end="31:42"><literal type="number" pos:start="31:41" pos:end="31:42">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:44"><expr pos:start="33:13" pos:end="33:43"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:15">vui</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:20">sar</name><operator pos:start="33:21" pos:end="33:21">.</operator><name pos:start="33:22" pos:end="33:24">den</name></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <call pos:start="33:28" pos:end="33:43"><name pos:start="33:28" pos:end="33:35">get_bits</name><argument_list pos:start="33:36" pos:end="33:43">(<argument pos:start="33:37" pos:end="33:38"><expr pos:start="33:37" pos:end="33:38"><name pos:start="33:37" pos:end="33:38">gb</name></expr></argument>, <argument pos:start="33:41" pos:end="33:42"><expr pos:start="33:41" pos:end="33:42"><literal type="number" pos:start="33:41" pos:end="33:42">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="35:11" pos:end="39:56">else<block type="pseudo" pos:start="37:13" pos:end="39:56"><block_content pos:start="37:13" pos:end="39:56">

            <expr_stmt pos:start="37:13" pos:end="39:56"><expr pos:start="37:13" pos:end="39:55"><call pos:start="37:13" pos:end="39:55"><name pos:start="37:13" pos:end="37:18">av_log</name><argument_list pos:start="37:19" pos:end="39:55">(<argument pos:start="37:20" pos:end="37:27"><expr pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:27">avctx</name></name></expr></argument>, <argument pos:start="37:30" pos:end="37:43"><expr pos:start="37:30" pos:end="37:43"><name pos:start="37:30" pos:end="37:43">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="39:20" pos:end="39:45"><expr pos:start="39:20" pos:end="39:45"><literal type="string" pos:start="39:20" pos:end="39:45">"Unknown SAR index: %u.\n"</literal></expr></argument>, <argument pos:start="39:48" pos:end="39:54"><expr pos:start="39:48" pos:end="39:54"><name pos:start="39:48" pos:end="39:54">sar_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:52"><expr pos:start="45:5" pos:end="45:51"><name pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:7">vui</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:35">overscan_info_present_flag</name></name> <operator pos:start="45:37" pos:end="45:37">=</operator> <call pos:start="45:39" pos:end="45:51"><name pos:start="45:39" pos:end="45:47">get_bits1</name><argument_list pos:start="45:48" pos:end="45:51">(<argument pos:start="45:49" pos:end="45:50"><expr pos:start="45:49" pos:end="45:50"><name pos:start="45:49" pos:end="45:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:55"><if pos:start="47:5" pos:end="49:55">if <condition pos:start="47:8" pos:end="47:40">(<expr pos:start="47:9" pos:end="47:39"><name pos:start="47:9" pos:end="47:39"><name pos:start="47:9" pos:end="47:11">vui</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:39">overscan_info_present_flag</name></name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:55"><block_content pos:start="49:9" pos:end="49:55">

        <expr_stmt pos:start="49:9" pos:end="49:55"><expr pos:start="49:9" pos:end="49:54"><name pos:start="49:9" pos:end="49:38"><name pos:start="49:9" pos:end="49:11">vui</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:38">overscan_appropriate_flag</name></name> <operator pos:start="49:40" pos:end="49:40">=</operator> <call pos:start="49:42" pos:end="49:54"><name pos:start="49:42" pos:end="49:50">get_bits1</name><argument_list pos:start="49:51" pos:end="49:54">(<argument pos:start="49:52" pos:end="49:53"><expr pos:start="49:52" pos:end="49:53"><name pos:start="49:52" pos:end="49:53">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:56"><expr pos:start="53:5" pos:end="53:55"><name pos:start="53:5" pos:end="53:39"><name pos:start="53:5" pos:end="53:7">vui</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:39">video_signal_type_present_flag</name></name> <operator pos:start="53:41" pos:end="53:41">=</operator> <call pos:start="53:43" pos:end="53:55"><name pos:start="53:43" pos:end="53:51">get_bits1</name><argument_list pos:start="53:52" pos:end="53:55">(<argument pos:start="53:53" pos:end="53:54"><expr pos:start="53:53" pos:end="53:54"><name pos:start="53:53" pos:end="53:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="93:5"><if pos:start="55:5" pos:end="93:5">if <condition pos:start="55:8" pos:end="55:44">(<expr pos:start="55:9" pos:end="55:43"><name pos:start="55:9" pos:end="55:43"><name pos:start="55:9" pos:end="55:11">vui</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:43">video_signal_type_present_flag</name></name></expr>)</condition> <block pos:start="55:46" pos:end="93:5">{<block_content pos:start="57:9" pos:end="91:9">

        <expr_stmt pos:start="57:9" pos:end="57:63"><expr pos:start="57:9" pos:end="57:62"><name pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:11">vui</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:25">video_format</name></name>                    <operator pos:start="57:46" pos:end="57:46">=</operator> <call pos:start="57:48" pos:end="57:62"><name pos:start="57:48" pos:end="57:55">get_bits</name><argument_list pos:start="57:56" pos:end="57:62">(<argument pos:start="57:57" pos:end="57:58"><expr pos:start="57:57" pos:end="57:58"><name pos:start="57:57" pos:end="57:58">gb</name></expr></argument>, <argument pos:start="57:61" pos:end="57:61"><expr pos:start="57:61" pos:end="57:61"><literal type="number" pos:start="57:61" pos:end="57:61">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:61"><expr pos:start="59:9" pos:end="59:60"><name pos:start="59:9" pos:end="59:34"><name pos:start="59:9" pos:end="59:11">vui</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:34">video_full_range_flag</name></name>           <operator pos:start="59:46" pos:end="59:46">=</operator> <call pos:start="59:48" pos:end="59:60"><name pos:start="59:48" pos:end="59:56">get_bits1</name><argument_list pos:start="59:57" pos:end="59:60">(<argument pos:start="59:58" pos:end="59:59"><expr pos:start="59:58" pos:end="59:59"><name pos:start="59:58" pos:end="59:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:61"><expr pos:start="61:9" pos:end="61:60"><name pos:start="61:9" pos:end="61:44"><name pos:start="61:9" pos:end="61:11">vui</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:44">colour_description_present_flag</name></name> <operator pos:start="61:46" pos:end="61:46">=</operator> <call pos:start="61:48" pos:end="61:60"><name pos:start="61:48" pos:end="61:56">get_bits1</name><argument_list pos:start="61:57" pos:end="61:60">(<argument pos:start="61:58" pos:end="61:59"><expr pos:start="61:58" pos:end="61:59"><name pos:start="61:58" pos:end="61:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="65:47"><if pos:start="63:9" pos:end="65:47">if <condition pos:start="63:12" pos:end="63:77">(<expr pos:start="63:13" pos:end="63:76"><name pos:start="63:13" pos:end="63:38"><name pos:start="63:13" pos:end="63:15">vui</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:38">video_full_range_flag</name></name> <operator pos:start="63:40" pos:end="63:41">&amp;&amp;</operator> <name pos:start="63:43" pos:end="63:54"><name pos:start="63:43" pos:end="63:45">sps</name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:54">pix_fmt</name></name> <operator pos:start="63:56" pos:end="63:57">==</operator> <name pos:start="63:59" pos:end="63:76">AV_PIX_FMT_YUV420P</name></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:47"><block_content pos:start="65:13" pos:end="65:47">

            <expr_stmt pos:start="65:13" pos:end="65:47"><expr pos:start="65:13" pos:end="65:46"><name pos:start="65:13" pos:end="65:24"><name pos:start="65:13" pos:end="65:15">sps</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:24">pix_fmt</name></name> <operator pos:start="65:26" pos:end="65:26">=</operator> <name pos:start="65:28" pos:end="65:46">AV_PIX_FMT_YUVJ420P</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="67:9" pos:end="91:9"><if pos:start="67:9" pos:end="91:9">if <condition pos:start="67:12" pos:end="67:49">(<expr pos:start="67:13" pos:end="67:48"><name pos:start="67:13" pos:end="67:48"><name pos:start="67:13" pos:end="67:15">vui</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:48">colour_description_present_flag</name></name></expr>)</condition> <block pos:start="67:51" pos:end="91:9">{<block_content pos:start="69:13" pos:end="89:59">

            <expr_stmt pos:start="69:13" pos:end="69:59"><expr pos:start="69:13" pos:end="69:58"><name pos:start="69:13" pos:end="69:33"><name pos:start="69:13" pos:end="69:15">vui</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:33">colour_primaries</name></name>        <operator pos:start="69:42" pos:end="69:42">=</operator> <call pos:start="69:44" pos:end="69:58"><name pos:start="69:44" pos:end="69:51">get_bits</name><argument_list pos:start="69:52" pos:end="69:58">(<argument pos:start="69:53" pos:end="69:54"><expr pos:start="69:53" pos:end="69:54"><name pos:start="69:53" pos:end="69:54">gb</name></expr></argument>, <argument pos:start="69:57" pos:end="69:57"><expr pos:start="69:57" pos:end="69:57"><literal type="number" pos:start="69:57" pos:end="69:57">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:59"><expr pos:start="71:13" pos:end="71:58"><name pos:start="71:13" pos:end="71:40"><name pos:start="71:13" pos:end="71:15">vui</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:40">transfer_characteristic</name></name> <operator pos:start="71:42" pos:end="71:42">=</operator> <call pos:start="71:44" pos:end="71:58"><name pos:start="71:44" pos:end="71:51">get_bits</name><argument_list pos:start="71:52" pos:end="71:58">(<argument pos:start="71:53" pos:end="71:54"><expr pos:start="71:53" pos:end="71:54"><name pos:start="71:53" pos:end="71:54">gb</name></expr></argument>, <argument pos:start="71:57" pos:end="71:57"><expr pos:start="71:57" pos:end="71:57"><literal type="number" pos:start="71:57" pos:end="71:57">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:59"><expr pos:start="73:13" pos:end="73:58"><name pos:start="73:13" pos:end="73:30"><name pos:start="73:13" pos:end="73:15">vui</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:30">matrix_coeffs</name></name>           <operator pos:start="73:42" pos:end="73:42">=</operator> <call pos:start="73:44" pos:end="73:58"><name pos:start="73:44" pos:end="73:51">get_bits</name><argument_list pos:start="73:52" pos:end="73:58">(<argument pos:start="73:53" pos:end="73:54"><expr pos:start="73:53" pos:end="73:54"><name pos:start="73:53" pos:end="73:54">gb</name></expr></argument>, <argument pos:start="73:57" pos:end="73:57"><expr pos:start="73:57" pos:end="73:57"><literal type="number" pos:start="73:57" pos:end="73:57">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="line" pos:start="77:13" pos:end="77:50">// Set invalid values to "unspecified"</comment>

            <if_stmt pos:start="79:13" pos:end="81:62"><if pos:start="79:13" pos:end="81:62">if <condition pos:start="79:16" pos:end="79:54">(<expr pos:start="79:17" pos:end="79:53"><name pos:start="79:17" pos:end="79:37"><name pos:start="79:17" pos:end="79:19">vui</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:37">colour_primaries</name></name> <operator pos:start="79:39" pos:end="79:40">&gt;=</operator> <name pos:start="79:42" pos:end="79:53">AVCOL_PRI_NB</name></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:62"><block_content pos:start="81:17" pos:end="81:62">

                <expr_stmt pos:start="81:17" pos:end="81:62"><expr pos:start="81:17" pos:end="81:61"><name pos:start="81:17" pos:end="81:37"><name pos:start="81:17" pos:end="81:19">vui</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:37">colour_primaries</name></name> <operator pos:start="81:39" pos:end="81:39">=</operator> <name pos:start="81:41" pos:end="81:61">AVCOL_PRI_UNSPECIFIED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="83:13" pos:end="85:69"><if pos:start="83:13" pos:end="85:69">if <condition pos:start="83:16" pos:end="83:61">(<expr pos:start="83:17" pos:end="83:60"><name pos:start="83:17" pos:end="83:44"><name pos:start="83:17" pos:end="83:19">vui</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:44">transfer_characteristic</name></name> <operator pos:start="83:46" pos:end="83:47">&gt;=</operator> <name pos:start="83:49" pos:end="83:60">AVCOL_TRC_NB</name></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:69"><block_content pos:start="85:17" pos:end="85:69">

                <expr_stmt pos:start="85:17" pos:end="85:69"><expr pos:start="85:17" pos:end="85:68"><name pos:start="85:17" pos:end="85:44"><name pos:start="85:17" pos:end="85:19">vui</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:44">transfer_characteristic</name></name> <operator pos:start="85:46" pos:end="85:46">=</operator> <name pos:start="85:48" pos:end="85:68">AVCOL_TRC_UNSPECIFIED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="87:13" pos:end="89:59"><if pos:start="87:13" pos:end="89:59">if <condition pos:start="87:16" pos:end="87:51">(<expr pos:start="87:17" pos:end="87:50"><name pos:start="87:17" pos:end="87:34"><name pos:start="87:17" pos:end="87:19">vui</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:34">matrix_coeffs</name></name> <operator pos:start="87:36" pos:end="87:37">&gt;=</operator> <name pos:start="87:39" pos:end="87:50">AVCOL_SPC_NB</name></expr>)</condition><block type="pseudo" pos:start="89:17" pos:end="89:59"><block_content pos:start="89:17" pos:end="89:59">

                <expr_stmt pos:start="89:17" pos:end="89:59"><expr pos:start="89:17" pos:end="89:58"><name pos:start="89:17" pos:end="89:34"><name pos:start="89:17" pos:end="89:19">vui</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:34">matrix_coeffs</name></name> <operator pos:start="89:36" pos:end="89:36">=</operator> <name pos:start="89:38" pos:end="89:58">AVCOL_SPC_UNSPECIFIED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:54"><expr pos:start="97:5" pos:end="97:53"><name pos:start="97:5" pos:end="97:37"><name pos:start="97:5" pos:end="97:7">vui</name><operator pos:start="97:8" pos:end="97:9">-&gt;</operator><name pos:start="97:10" pos:end="97:37">chroma_loc_info_present_flag</name></name> <operator pos:start="97:39" pos:end="97:39">=</operator> <call pos:start="97:41" pos:end="97:53"><name pos:start="97:41" pos:end="97:49">get_bits1</name><argument_list pos:start="97:50" pos:end="97:53">(<argument pos:start="97:51" pos:end="97:52"><expr pos:start="97:51" pos:end="97:52"><name pos:start="97:51" pos:end="97:52">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:42">(<expr pos:start="99:9" pos:end="99:41"><name pos:start="99:9" pos:end="99:41"><name pos:start="99:9" pos:end="99:11">vui</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:41">chroma_loc_info_present_flag</name></name></expr>)</condition> <block pos:start="99:44" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:74">

        <expr_stmt pos:start="101:9" pos:end="101:74"><expr pos:start="101:9" pos:end="101:73"><name pos:start="101:9" pos:end="101:45"><name pos:start="101:9" pos:end="101:11">vui</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:45">chroma_sample_loc_type_top_field</name></name>    <operator pos:start="101:50" pos:end="101:50">=</operator> <call pos:start="101:52" pos:end="101:73"><name pos:start="101:52" pos:end="101:69">get_ue_golomb_long</name><argument_list pos:start="101:70" pos:end="101:73">(<argument pos:start="101:71" pos:end="101:72"><expr pos:start="101:71" pos:end="101:72"><name pos:start="101:71" pos:end="101:72">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:74"><expr pos:start="103:9" pos:end="103:73"><name pos:start="103:9" pos:end="103:48"><name pos:start="103:9" pos:end="103:11">vui</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:48">chroma_sample_loc_type_bottom_field</name></name> <operator pos:start="103:50" pos:end="103:50">=</operator> <call pos:start="103:52" pos:end="103:73"><name pos:start="103:52" pos:end="103:69">get_ue_golomb_long</name><argument_list pos:start="103:70" pos:end="103:73">(<argument pos:start="103:71" pos:end="103:72"><expr pos:start="103:71" pos:end="103:72"><name pos:start="103:71" pos:end="103:72">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:55"><expr pos:start="109:5" pos:end="109:54"><name pos:start="109:5" pos:end="109:38"><name pos:start="109:5" pos:end="109:7">vui</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:38">neutra_chroma_indication_flag</name></name> <operator pos:start="109:40" pos:end="109:40">=</operator> <call pos:start="109:42" pos:end="109:54"><name pos:start="109:42" pos:end="109:50">get_bits1</name><argument_list pos:start="109:51" pos:end="109:54">(<argument pos:start="109:52" pos:end="109:53"><expr pos:start="109:52" pos:end="109:53"><name pos:start="109:52" pos:end="109:53">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:55"><expr pos:start="111:5" pos:end="111:54"><name pos:start="111:5" pos:end="111:23"><name pos:start="111:5" pos:end="111:7">vui</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:23">field_seq_flag</name></name>                <operator pos:start="111:40" pos:end="111:40">=</operator> <call pos:start="111:42" pos:end="111:54"><name pos:start="111:42" pos:end="111:50">get_bits1</name><argument_list pos:start="111:51" pos:end="111:54">(<argument pos:start="111:52" pos:end="111:53"><expr pos:start="111:52" pos:end="111:53"><name pos:start="111:52" pos:end="111:53">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:55"><expr pos:start="113:5" pos:end="113:54"><name pos:start="113:5" pos:end="113:38"><name pos:start="113:5" pos:end="113:7">vui</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:38">frame_field_info_present_flag</name></name> <operator pos:start="113:40" pos:end="113:40">=</operator> <call pos:start="113:42" pos:end="113:54"><name pos:start="113:42" pos:end="113:50">get_bits1</name><argument_list pos:start="113:51" pos:end="113:54">(<argument pos:start="113:52" pos:end="113:53"><expr pos:start="113:52" pos:end="113:53"><name pos:start="113:52" pos:end="113:53">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:53"><expr pos:start="117:5" pos:end="117:52"><name pos:start="117:5" pos:end="117:36"><name pos:start="117:5" pos:end="117:7">vui</name><operator pos:start="117:8" pos:end="117:9">-&gt;</operator><name pos:start="117:10" pos:end="117:36">default_display_window_flag</name></name> <operator pos:start="117:38" pos:end="117:38">=</operator> <call pos:start="117:40" pos:end="117:52"><name pos:start="117:40" pos:end="117:48">get_bits1</name><argument_list pos:start="117:49" pos:end="117:52">(<argument pos:start="117:50" pos:end="117:51"><expr pos:start="117:50" pos:end="117:51"><name pos:start="117:50" pos:end="117:51">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="119:5" pos:end="119:61">// Backup context in case an alternate header is detected</comment>

    <if_stmt pos:start="121:5" pos:end="123:44"><if pos:start="121:5" pos:end="123:44">if<condition pos:start="121:7" pos:end="121:32">( <expr pos:start="121:9" pos:end="121:31"><call pos:start="121:9" pos:end="121:25"><name pos:start="121:9" pos:end="121:21">get_bits_left</name><argument_list pos:start="121:22" pos:end="121:25">(<argument pos:start="121:23" pos:end="121:24"><expr pos:start="121:23" pos:end="121:24"><name pos:start="121:23" pos:end="121:24">gb</name></expr></argument>)</argument_list></call> <operator pos:start="121:27" pos:end="121:28">&gt;=</operator> <literal type="number" pos:start="121:30" pos:end="121:31">66</literal></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:44"><block_content pos:start="123:9" pos:end="123:44">

        <expr_stmt pos:start="123:9" pos:end="123:44"><expr pos:start="123:9" pos:end="123:43"><call pos:start="123:9" pos:end="123:43"><name pos:start="123:9" pos:end="123:14">memcpy</name><argument_list pos:start="123:15" pos:end="123:43">(<argument pos:start="123:16" pos:end="123:22"><expr pos:start="123:16" pos:end="123:22"><operator pos:start="123:16" pos:end="123:16">&amp;</operator><name pos:start="123:17" pos:end="123:22">backup</name></expr></argument>, <argument pos:start="123:25" pos:end="123:26"><expr pos:start="123:25" pos:end="123:26"><name pos:start="123:25" pos:end="123:26">gb</name></expr></argument>, <argument pos:start="123:29" pos:end="123:42"><expr pos:start="123:29" pos:end="123:42"><sizeof pos:start="123:29" pos:end="123:42">sizeof<argument_list pos:start="123:35" pos:end="123:42">(<argument pos:start="123:36" pos:end="123:41"><expr pos:start="123:36" pos:end="123:41"><name pos:start="123:36" pos:end="123:41">backup</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="127:5" pos:end="171:5"><if pos:start="127:5" pos:end="171:5">if <condition pos:start="127:8" pos:end="127:41">(<expr pos:start="127:9" pos:end="127:40"><name pos:start="127:9" pos:end="127:40"><name pos:start="127:9" pos:end="127:11">vui</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:40">default_display_window_flag</name></name></expr>)</condition> <block pos:start="127:43" pos:end="171:5">{<block_content pos:start="131:9" pos:end="169:9">

        <comment type="line" pos:start="129:9" pos:end="129:41">//TODO: * 2 is only valid for 420</comment>

        <expr_stmt pos:start="131:9" pos:end="131:69"><expr pos:start="131:9" pos:end="131:68"><name pos:start="131:9" pos:end="131:37"><name pos:start="131:9" pos:end="131:11">vui</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:25">def_disp_win</name><operator pos:start="131:26" pos:end="131:26">.</operator><name pos:start="131:27" pos:end="131:37">left_offset</name></name>   <operator pos:start="131:41" pos:end="131:41">=</operator> <call pos:start="131:43" pos:end="131:64"><name pos:start="131:43" pos:end="131:60">get_ue_golomb_long</name><argument_list pos:start="131:61" pos:end="131:64">(<argument pos:start="131:62" pos:end="131:63"><expr pos:start="131:62" pos:end="131:63"><name pos:start="131:62" pos:end="131:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="131:66" pos:end="131:66">*</operator> <literal type="number" pos:start="131:68" pos:end="131:68">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:69"><expr pos:start="133:9" pos:end="133:68"><name pos:start="133:9" pos:end="133:38"><name pos:start="133:9" pos:end="133:11">vui</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:25">def_disp_win</name><operator pos:start="133:26" pos:end="133:26">.</operator><name pos:start="133:27" pos:end="133:38">right_offset</name></name>  <operator pos:start="133:41" pos:end="133:41">=</operator> <call pos:start="133:43" pos:end="133:64"><name pos:start="133:43" pos:end="133:60">get_ue_golomb_long</name><argument_list pos:start="133:61" pos:end="133:64">(<argument pos:start="133:62" pos:end="133:63"><expr pos:start="133:62" pos:end="133:63"><name pos:start="133:62" pos:end="133:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="133:66" pos:end="133:66">*</operator> <literal type="number" pos:start="133:68" pos:end="133:68">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:69"><expr pos:start="135:9" pos:end="135:68"><name pos:start="135:9" pos:end="135:36"><name pos:start="135:9" pos:end="135:11">vui</name><operator pos:start="135:12" pos:end="135:13">-&gt;</operator><name pos:start="135:14" pos:end="135:25">def_disp_win</name><operator pos:start="135:26" pos:end="135:26">.</operator><name pos:start="135:27" pos:end="135:36">top_offset</name></name>    <operator pos:start="135:41" pos:end="135:41">=</operator> <call pos:start="135:43" pos:end="135:64"><name pos:start="135:43" pos:end="135:60">get_ue_golomb_long</name><argument_list pos:start="135:61" pos:end="135:64">(<argument pos:start="135:62" pos:end="135:63"><expr pos:start="135:62" pos:end="135:63"><name pos:start="135:62" pos:end="135:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="135:66" pos:end="135:66">*</operator> <literal type="number" pos:start="135:68" pos:end="135:68">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:69"><expr pos:start="137:9" pos:end="137:68"><name pos:start="137:9" pos:end="137:39"><name pos:start="137:9" pos:end="137:11">vui</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:25">def_disp_win</name><operator pos:start="137:26" pos:end="137:26">.</operator><name pos:start="137:27" pos:end="137:39">bottom_offset</name></name> <operator pos:start="137:41" pos:end="137:41">=</operator> <call pos:start="137:43" pos:end="137:64"><name pos:start="137:43" pos:end="137:60">get_ue_golomb_long</name><argument_list pos:start="137:61" pos:end="137:64">(<argument pos:start="137:62" pos:end="137:63"><expr pos:start="137:62" pos:end="137:63"><name pos:start="137:62" pos:end="137:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="137:66" pos:end="137:66">*</operator> <literal type="number" pos:start="137:68" pos:end="137:68">2</literal></expr>;</expr_stmt>



        <if_stmt pos:start="141:9" pos:end="169:9"><if pos:start="141:9" pos:end="169:9">if <condition pos:start="141:12" pos:end="143:55">(<expr pos:start="141:13" pos:end="143:54"><name pos:start="141:13" pos:end="141:31"><name pos:start="141:13" pos:end="141:13">s</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:31">apply_defdispwin</name></name> <operator pos:start="141:33" pos:end="141:34">&amp;&amp;</operator>

            <name pos:start="143:13" pos:end="143:28"><name pos:start="143:13" pos:end="143:13">s</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:20">avctx</name><operator pos:start="143:21" pos:end="143:22">-&gt;</operator><name pos:start="143:23" pos:end="143:28">flags2</name></name> <operator pos:start="143:30" pos:end="143:30">&amp;</operator> <name pos:start="143:32" pos:end="143:54">CODEC_FLAG2_IGNORE_CROP</name></expr>)</condition> <block pos:start="143:57" pos:end="169:9">{<block_content pos:start="145:13" pos:end="167:48">

            <expr_stmt pos:start="145:13" pos:end="157:52"><expr pos:start="145:13" pos:end="157:51"><call pos:start="145:13" pos:end="157:51"><name pos:start="145:13" pos:end="145:18">av_log</name><argument_list pos:start="145:19" pos:end="157:51">(<argument pos:start="145:20" pos:end="145:27"><expr pos:start="145:20" pos:end="145:27"><name pos:start="145:20" pos:end="145:27"><name pos:start="145:20" pos:end="145:20">s</name><operator pos:start="145:21" pos:end="145:22">-&gt;</operator><name pos:start="145:23" pos:end="145:27">avctx</name></name></expr></argument>, <argument pos:start="145:30" pos:end="145:41"><expr pos:start="145:30" pos:end="145:41"><name pos:start="145:30" pos:end="145:41">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="147:20" pos:end="149:62"><expr pos:start="147:20" pos:end="149:62"><literal type="string" pos:start="147:20" pos:end="147:60">"discarding vui default display window, "</literal>

                   <literal type="string" pos:start="149:20" pos:end="149:62">"original values are l:%u r:%u t:%u b:%u\n"</literal></expr></argument>,

                   <argument pos:start="151:20" pos:end="151:48"><expr pos:start="151:20" pos:end="151:48"><name pos:start="151:20" pos:end="151:48"><name pos:start="151:20" pos:end="151:22">vui</name><operator pos:start="151:23" pos:end="151:24">-&gt;</operator><name pos:start="151:25" pos:end="151:36">def_disp_win</name><operator pos:start="151:37" pos:end="151:37">.</operator><name pos:start="151:38" pos:end="151:48">left_offset</name></name></expr></argument>,

                   <argument pos:start="153:20" pos:end="153:49"><expr pos:start="153:20" pos:end="153:49"><name pos:start="153:20" pos:end="153:49"><name pos:start="153:20" pos:end="153:22">vui</name><operator pos:start="153:23" pos:end="153:24">-&gt;</operator><name pos:start="153:25" pos:end="153:36">def_disp_win</name><operator pos:start="153:37" pos:end="153:37">.</operator><name pos:start="153:38" pos:end="153:49">right_offset</name></name></expr></argument>,

                   <argument pos:start="155:20" pos:end="155:47"><expr pos:start="155:20" pos:end="155:47"><name pos:start="155:20" pos:end="155:47"><name pos:start="155:20" pos:end="155:22">vui</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:36">def_disp_win</name><operator pos:start="155:37" pos:end="155:37">.</operator><name pos:start="155:38" pos:end="155:47">top_offset</name></name></expr></argument>,

                   <argument pos:start="157:20" pos:end="157:50"><expr pos:start="157:20" pos:end="157:50"><name pos:start="157:20" pos:end="157:50"><name pos:start="157:20" pos:end="157:22">vui</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:36">def_disp_win</name><operator pos:start="157:37" pos:end="157:37">.</operator><name pos:start="157:38" pos:end="157:50">bottom_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="161:13" pos:end="167:48"><expr pos:start="161:13" pos:end="167:47"><name pos:start="161:13" pos:end="161:41"><name pos:start="161:13" pos:end="161:15">vui</name><operator pos:start="161:16" pos:end="161:17">-&gt;</operator><name pos:start="161:18" pos:end="161:29">def_disp_win</name><operator pos:start="161:30" pos:end="161:30">.</operator><name pos:start="161:31" pos:end="161:41">left_offset</name></name>   <operator pos:start="161:45" pos:end="161:45">=</operator>

            <name pos:start="163:13" pos:end="163:42"><name pos:start="163:13" pos:end="163:15">vui</name><operator pos:start="163:16" pos:end="163:17">-&gt;</operator><name pos:start="163:18" pos:end="163:29">def_disp_win</name><operator pos:start="163:30" pos:end="163:30">.</operator><name pos:start="163:31" pos:end="163:42">right_offset</name></name>  <operator pos:start="163:45" pos:end="163:45">=</operator>

            <name pos:start="165:13" pos:end="165:40"><name pos:start="165:13" pos:end="165:15">vui</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:29">def_disp_win</name><operator pos:start="165:30" pos:end="165:30">.</operator><name pos:start="165:31" pos:end="165:40">top_offset</name></name>    <operator pos:start="165:45" pos:end="165:45">=</operator>

            <name pos:start="167:13" pos:end="167:43"><name pos:start="167:13" pos:end="167:15">vui</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:29">def_disp_win</name><operator pos:start="167:30" pos:end="167:30">.</operator><name pos:start="167:31" pos:end="167:43">bottom_offset</name></name> <operator pos:start="167:45" pos:end="167:45">=</operator> <literal type="number" pos:start="167:47" pos:end="167:47">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:54"><expr pos:start="175:5" pos:end="175:53"><name pos:start="175:5" pos:end="175:37"><name pos:start="175:5" pos:end="175:7">vui</name><operator pos:start="175:8" pos:end="175:9">-&gt;</operator><name pos:start="175:10" pos:end="175:37">vui_timing_info_present_flag</name></name> <operator pos:start="175:39" pos:end="175:39">=</operator> <call pos:start="175:41" pos:end="175:53"><name pos:start="175:41" pos:end="175:49">get_bits1</name><argument_list pos:start="175:50" pos:end="175:53">(<argument pos:start="175:51" pos:end="175:52"><expr pos:start="175:51" pos:end="175:52"><name pos:start="175:51" pos:end="175:52">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="179:5" pos:end="225:5"><if pos:start="179:5" pos:end="225:5">if <condition pos:start="179:8" pos:end="179:42">(<expr pos:start="179:9" pos:end="179:41"><name pos:start="179:9" pos:end="179:41"><name pos:start="179:9" pos:end="179:11">vui</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:41">vui_timing_info_present_flag</name></name></expr>)</condition> <block pos:start="179:44" pos:end="225:5">{<block_content pos:start="181:9" pos:end="223:50">

        <if_stmt pos:start="181:9" pos:end="199:9"><if pos:start="181:9" pos:end="199:9">if<condition pos:start="181:11" pos:end="181:35">( <expr pos:start="181:13" pos:end="181:34"><call pos:start="181:13" pos:end="181:29"><name pos:start="181:13" pos:end="181:25">get_bits_left</name><argument_list pos:start="181:26" pos:end="181:29">(<argument pos:start="181:27" pos:end="181:28"><expr pos:start="181:27" pos:end="181:28"><name pos:start="181:27" pos:end="181:28">gb</name></expr></argument>)</argument_list></call> <operator pos:start="181:31" pos:end="181:31">&lt;</operator> <literal type="number" pos:start="181:33" pos:end="181:34">66</literal></expr>)</condition> <block pos:start="181:37" pos:end="199:9">{<block_content pos:start="187:13" pos:end="197:20">

            <comment type="line" pos:start="183:13" pos:end="183:68">// The alternate syntax seem to have timing info located</comment>

            <comment type="line" pos:start="185:13" pos:end="185:56">// at where def_disp_win is normally located</comment>

            <expr_stmt pos:start="187:13" pos:end="189:68"><expr pos:start="187:13" pos:end="189:67"><call pos:start="187:13" pos:end="189:67"><name pos:start="187:13" pos:end="187:18">av_log</name><argument_list pos:start="187:19" pos:end="189:67">(<argument pos:start="187:20" pos:end="187:27"><expr pos:start="187:20" pos:end="187:27"><name pos:start="187:20" pos:end="187:27"><name pos:start="187:20" pos:end="187:20">s</name><operator pos:start="187:21" pos:end="187:22">-&gt;</operator><name pos:start="187:23" pos:end="187:27">avctx</name></name></expr></argument>, <argument pos:start="187:30" pos:end="187:43"><expr pos:start="187:30" pos:end="187:43"><name pos:start="187:30" pos:end="187:43">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="189:20" pos:end="189:66"><expr pos:start="189:20" pos:end="189:66"><literal type="string" pos:start="189:20" pos:end="189:66">"Strange VUI timing information, retrying...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:49"><expr pos:start="191:13" pos:end="191:48"><name pos:start="191:13" pos:end="191:44"><name pos:start="191:13" pos:end="191:15">vui</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:44">default_display_window_flag</name></name> <operator pos:start="191:46" pos:end="191:46">=</operator> <literal type="number" pos:start="191:48" pos:end="191:48">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:69"><expr pos:start="193:13" pos:end="193:68"><call pos:start="193:13" pos:end="193:68"><name pos:start="193:13" pos:end="193:18">memset</name><argument_list pos:start="193:19" pos:end="193:68">(<argument pos:start="193:20" pos:end="193:37"><expr pos:start="193:20" pos:end="193:37"><operator pos:start="193:20" pos:end="193:20">&amp;</operator><name pos:start="193:21" pos:end="193:37"><name pos:start="193:21" pos:end="193:23">vui</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:37">def_disp_win</name></name></expr></argument>, <argument pos:start="193:40" pos:end="193:40"><expr pos:start="193:40" pos:end="193:40"><literal type="number" pos:start="193:40" pos:end="193:40">0</literal></expr></argument>, <argument pos:start="193:43" pos:end="193:67"><expr pos:start="193:43" pos:end="193:67"><sizeof pos:start="193:43" pos:end="193:67">sizeof<argument_list pos:start="193:49" pos:end="193:67">(<argument pos:start="193:50" pos:end="193:66"><expr pos:start="193:50" pos:end="193:66"><name pos:start="193:50" pos:end="193:66"><name pos:start="193:50" pos:end="193:52">vui</name><operator pos:start="193:53" pos:end="193:54">-&gt;</operator><name pos:start="193:55" pos:end="193:66">def_disp_win</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:48"><expr pos:start="195:13" pos:end="195:47"><call pos:start="195:13" pos:end="195:47"><name pos:start="195:13" pos:end="195:18">memcpy</name><argument_list pos:start="195:19" pos:end="195:47">(<argument pos:start="195:20" pos:end="195:21"><expr pos:start="195:20" pos:end="195:21"><name pos:start="195:20" pos:end="195:21">gb</name></expr></argument>, <argument pos:start="195:24" pos:end="195:30"><expr pos:start="195:24" pos:end="195:30"><operator pos:start="195:24" pos:end="195:24">&amp;</operator><name pos:start="195:25" pos:end="195:30">backup</name></expr></argument>, <argument pos:start="195:33" pos:end="195:46"><expr pos:start="195:33" pos:end="195:46"><sizeof pos:start="195:33" pos:end="195:46">sizeof<argument_list pos:start="195:39" pos:end="195:46">(<argument pos:start="195:40" pos:end="195:45"><expr pos:start="195:40" pos:end="195:45"><name pos:start="195:40" pos:end="195:45">backup</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:20"><expr pos:start="197:13" pos:end="197:19"><name pos:start="197:13" pos:end="197:15">alt</name> <operator pos:start="197:17" pos:end="197:17">=</operator> <literal type="number" pos:start="197:19" pos:end="197:19">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:73"><expr pos:start="201:9" pos:end="201:72"><name pos:start="201:9" pos:end="201:34"><name pos:start="201:9" pos:end="201:11">vui</name><operator pos:start="201:12" pos:end="201:13">-&gt;</operator><name pos:start="201:14" pos:end="201:34">vui_num_units_in_tick</name></name>               <operator pos:start="201:50" pos:end="201:50">=</operator> <call pos:start="201:52" pos:end="201:72"><name pos:start="201:52" pos:end="201:64">get_bits_long</name><argument_list pos:start="201:65" pos:end="201:72">(<argument pos:start="201:66" pos:end="201:67"><expr pos:start="201:66" pos:end="201:67"><name pos:start="201:66" pos:end="201:67">gb</name></expr></argument>, <argument pos:start="201:70" pos:end="201:71"><expr pos:start="201:70" pos:end="201:71"><literal type="number" pos:start="201:70" pos:end="201:71">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:73"><expr pos:start="203:9" pos:end="203:72"><name pos:start="203:9" pos:end="203:27"><name pos:start="203:9" pos:end="203:11">vui</name><operator pos:start="203:12" pos:end="203:13">-&gt;</operator><name pos:start="203:14" pos:end="203:27">vui_time_scale</name></name>                      <operator pos:start="203:50" pos:end="203:50">=</operator> <call pos:start="203:52" pos:end="203:72"><name pos:start="203:52" pos:end="203:64">get_bits_long</name><argument_list pos:start="203:65" pos:end="203:72">(<argument pos:start="203:66" pos:end="203:67"><expr pos:start="203:66" pos:end="203:67"><name pos:start="203:66" pos:end="203:67">gb</name></expr></argument>, <argument pos:start="203:70" pos:end="203:71"><expr pos:start="203:70" pos:end="203:71"><literal type="number" pos:start="203:70" pos:end="203:71">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="205:9" pos:end="211:9"><if pos:start="205:9" pos:end="211:9">if <condition pos:start="205:12" pos:end="205:16">(<expr pos:start="205:13" pos:end="205:15"><name pos:start="205:13" pos:end="205:15">alt</name></expr>)</condition> <block pos:start="205:18" pos:end="211:9">{<block_content pos:start="207:13" pos:end="209:68">

            <expr_stmt pos:start="207:13" pos:end="209:68"><expr pos:start="207:13" pos:end="209:67"><call pos:start="207:13" pos:end="209:67"><name pos:start="207:13" pos:end="207:18">av_log</name><argument_list pos:start="207:19" pos:end="209:67">(<argument pos:start="207:20" pos:end="207:27"><expr pos:start="207:20" pos:end="207:27"><name pos:start="207:20" pos:end="207:27"><name pos:start="207:20" pos:end="207:20">s</name><operator pos:start="207:21" pos:end="207:22">-&gt;</operator><name pos:start="207:23" pos:end="207:27">avctx</name></name></expr></argument>, <argument pos:start="207:30" pos:end="207:40"><expr pos:start="207:30" pos:end="207:40"><name pos:start="207:30" pos:end="207:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="207:43" pos:end="207:65"><expr pos:start="207:43" pos:end="207:65"><literal type="string" pos:start="207:43" pos:end="207:65">"Retry got %i/%i fps\n"</literal></expr></argument>,

                   <argument pos:start="209:20" pos:end="209:38"><expr pos:start="209:20" pos:end="209:38"><name pos:start="209:20" pos:end="209:38"><name pos:start="209:20" pos:end="209:22">vui</name><operator pos:start="209:23" pos:end="209:24">-&gt;</operator><name pos:start="209:25" pos:end="209:38">vui_time_scale</name></name></expr></argument>, <argument pos:start="209:41" pos:end="209:66"><expr pos:start="209:41" pos:end="209:66"><name pos:start="209:41" pos:end="209:66"><name pos:start="209:41" pos:end="209:43">vui</name><operator pos:start="209:44" pos:end="209:45">-&gt;</operator><name pos:start="209:46" pos:end="209:66">vui_num_units_in_tick</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:65"><expr pos:start="213:9" pos:end="213:64"><name pos:start="213:9" pos:end="213:48"><name pos:start="213:9" pos:end="213:11">vui</name><operator pos:start="213:12" pos:end="213:13">-&gt;</operator><name pos:start="213:14" pos:end="213:48">vui_poc_proportional_to_timing_flag</name></name> <operator pos:start="213:50" pos:end="213:50">=</operator> <call pos:start="213:52" pos:end="213:64"><name pos:start="213:52" pos:end="213:60">get_bits1</name><argument_list pos:start="213:61" pos:end="213:64">(<argument pos:start="213:62" pos:end="213:63"><expr pos:start="213:62" pos:end="213:63"><name pos:start="213:62" pos:end="213:63">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="215:9" pos:end="217:76"><if pos:start="215:9" pos:end="217:76">if <condition pos:start="215:12" pos:end="215:53">(<expr pos:start="215:13" pos:end="215:52"><name pos:start="215:13" pos:end="215:52"><name pos:start="215:13" pos:end="215:15">vui</name><operator pos:start="215:16" pos:end="215:17">-&gt;</operator><name pos:start="215:18" pos:end="215:52">vui_poc_proportional_to_timing_flag</name></name></expr>)</condition><block type="pseudo" pos:start="217:13" pos:end="217:76"><block_content pos:start="217:13" pos:end="217:76">

            <expr_stmt pos:start="217:13" pos:end="217:76"><expr pos:start="217:13" pos:end="217:75"><name pos:start="217:13" pos:end="217:50"><name pos:start="217:13" pos:end="217:15">vui</name><operator pos:start="217:16" pos:end="217:17">-&gt;</operator><name pos:start="217:18" pos:end="217:50">vui_num_ticks_poc_diff_one_minus1</name></name> <operator pos:start="217:52" pos:end="217:52">=</operator> <call pos:start="217:54" pos:end="217:75"><name pos:start="217:54" pos:end="217:71">get_ue_golomb_long</name><argument_list pos:start="217:72" pos:end="217:75">(<argument pos:start="217:73" pos:end="217:74"><expr pos:start="217:73" pos:end="217:74"><name pos:start="217:73" pos:end="217:74">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:61"><expr pos:start="219:9" pos:end="219:60"><name pos:start="219:9" pos:end="219:44"><name pos:start="219:9" pos:end="219:11">vui</name><operator pos:start="219:12" pos:end="219:13">-&gt;</operator><name pos:start="219:14" pos:end="219:44">vui_hrd_parameters_present_flag</name></name> <operator pos:start="219:46" pos:end="219:46">=</operator> <call pos:start="219:48" pos:end="219:60"><name pos:start="219:48" pos:end="219:56">get_bits1</name><argument_list pos:start="219:57" pos:end="219:60">(<argument pos:start="219:58" pos:end="219:59"><expr pos:start="219:58" pos:end="219:59"><name pos:start="219:58" pos:end="219:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="221:9" pos:end="223:50"><if pos:start="221:9" pos:end="223:50">if <condition pos:start="221:12" pos:end="221:49">(<expr pos:start="221:13" pos:end="221:48"><name pos:start="221:13" pos:end="221:48"><name pos:start="221:13" pos:end="221:15">vui</name><operator pos:start="221:16" pos:end="221:17">-&gt;</operator><name pos:start="221:18" pos:end="221:48">vui_hrd_parameters_present_flag</name></name></expr>)</condition><block type="pseudo" pos:start="223:13" pos:end="223:50"><block_content pos:start="223:13" pos:end="223:50">

            <expr_stmt pos:start="223:13" pos:end="223:50"><expr pos:start="223:13" pos:end="223:49"><call pos:start="223:13" pos:end="223:49"><name pos:start="223:13" pos:end="223:22">decode_hrd</name><argument_list pos:start="223:23" pos:end="223:49">(<argument pos:start="223:24" pos:end="223:24"><expr pos:start="223:24" pos:end="223:24"><name pos:start="223:24" pos:end="223:24">s</name></expr></argument>, <argument pos:start="223:27" pos:end="223:27"><expr pos:start="223:27" pos:end="223:27"><literal type="number" pos:start="223:27" pos:end="223:27">1</literal></expr></argument>, <argument pos:start="223:30" pos:end="223:48"><expr pos:start="223:30" pos:end="223:48"><name pos:start="223:30" pos:end="223:48"><name pos:start="223:30" pos:end="223:32">sps</name><operator pos:start="223:33" pos:end="223:34">-&gt;</operator><name pos:start="223:35" pos:end="223:48">max_sub_layers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="229:5" pos:end="229:52"><expr pos:start="229:5" pos:end="229:51"><name pos:start="229:5" pos:end="229:35"><name pos:start="229:5" pos:end="229:7">vui</name><operator pos:start="229:8" pos:end="229:9">-&gt;</operator><name pos:start="229:10" pos:end="229:35">bitstream_restriction_flag</name></name> <operator pos:start="229:37" pos:end="229:37">=</operator> <call pos:start="229:39" pos:end="229:51"><name pos:start="229:39" pos:end="229:47">get_bits1</name><argument_list pos:start="229:48" pos:end="229:51">(<argument pos:start="229:49" pos:end="229:50"><expr pos:start="229:49" pos:end="229:50"><name pos:start="229:49" pos:end="229:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="231:5" pos:end="249:5"><if pos:start="231:5" pos:end="249:5">if <condition pos:start="231:8" pos:end="231:40">(<expr pos:start="231:9" pos:end="231:39"><name pos:start="231:9" pos:end="231:39"><name pos:start="231:9" pos:end="231:11">vui</name><operator pos:start="231:12" pos:end="231:13">-&gt;</operator><name pos:start="231:14" pos:end="231:39">bitstream_restriction_flag</name></name></expr>)</condition> <block pos:start="231:42" pos:end="249:5">{<block_content pos:start="233:9" pos:end="247:78">

        <expr_stmt pos:start="233:9" pos:end="233:69"><expr pos:start="233:9" pos:end="233:68"><name pos:start="233:9" pos:end="233:39"><name pos:start="233:9" pos:end="233:11">vui</name><operator pos:start="233:12" pos:end="233:13">-&gt;</operator><name pos:start="233:14" pos:end="233:39">tiles_fixed_structure_flag</name></name>              <operator pos:start="233:54" pos:end="233:54">=</operator> <call pos:start="233:56" pos:end="233:68"><name pos:start="233:56" pos:end="233:64">get_bits1</name><argument_list pos:start="233:65" pos:end="233:68">(<argument pos:start="233:66" pos:end="233:67"><expr pos:start="233:66" pos:end="233:67"><name pos:start="233:66" pos:end="233:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:69"><expr pos:start="235:9" pos:end="235:68"><name pos:start="235:9" pos:end="235:52"><name pos:start="235:9" pos:end="235:11">vui</name><operator pos:start="235:12" pos:end="235:13">-&gt;</operator><name pos:start="235:14" pos:end="235:52">motion_vectors_over_pic_boundaries_flag</name></name> <operator pos:start="235:54" pos:end="235:54">=</operator> <call pos:start="235:56" pos:end="235:68"><name pos:start="235:56" pos:end="235:64">get_bits1</name><argument_list pos:start="235:65" pos:end="235:68">(<argument pos:start="235:66" pos:end="235:67"><expr pos:start="235:66" pos:end="235:67"><name pos:start="235:66" pos:end="235:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:69"><expr pos:start="237:9" pos:end="237:68"><name pos:start="237:9" pos:end="237:42"><name pos:start="237:9" pos:end="237:11">vui</name><operator pos:start="237:12" pos:end="237:13">-&gt;</operator><name pos:start="237:14" pos:end="237:42">restricted_ref_pic_lists_flag</name></name>           <operator pos:start="237:54" pos:end="237:54">=</operator> <call pos:start="237:56" pos:end="237:68"><name pos:start="237:56" pos:end="237:64">get_bits1</name><argument_list pos:start="237:65" pos:end="237:68">(<argument pos:start="237:66" pos:end="237:67"><expr pos:start="237:66" pos:end="237:67"><name pos:start="237:66" pos:end="237:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:78"><expr pos:start="239:9" pos:end="239:77"><name pos:start="239:9" pos:end="239:41"><name pos:start="239:9" pos:end="239:11">vui</name><operator pos:start="239:12" pos:end="239:13">-&gt;</operator><name pos:start="239:14" pos:end="239:41">min_spatial_segmentation_idc</name></name>            <operator pos:start="239:54" pos:end="239:54">=</operator> <call pos:start="239:56" pos:end="239:77"><name pos:start="239:56" pos:end="239:73">get_ue_golomb_long</name><argument_list pos:start="239:74" pos:end="239:77">(<argument pos:start="239:75" pos:end="239:76"><expr pos:start="239:75" pos:end="239:76"><name pos:start="239:75" pos:end="239:76">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:78"><expr pos:start="241:9" pos:end="241:77"><name pos:start="241:9" pos:end="241:36"><name pos:start="241:9" pos:end="241:11">vui</name><operator pos:start="241:12" pos:end="241:13">-&gt;</operator><name pos:start="241:14" pos:end="241:36">max_bytes_per_pic_denom</name></name>                 <operator pos:start="241:54" pos:end="241:54">=</operator> <call pos:start="241:56" pos:end="241:77"><name pos:start="241:56" pos:end="241:73">get_ue_golomb_long</name><argument_list pos:start="241:74" pos:end="241:77">(<argument pos:start="241:75" pos:end="241:76"><expr pos:start="241:75" pos:end="241:76"><name pos:start="241:75" pos:end="241:76">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:78"><expr pos:start="243:9" pos:end="243:77"><name pos:start="243:9" pos:end="243:38"><name pos:start="243:9" pos:end="243:11">vui</name><operator pos:start="243:12" pos:end="243:13">-&gt;</operator><name pos:start="243:14" pos:end="243:38">max_bits_per_min_cu_denom</name></name>               <operator pos:start="243:54" pos:end="243:54">=</operator> <call pos:start="243:56" pos:end="243:77"><name pos:start="243:56" pos:end="243:73">get_ue_golomb_long</name><argument_list pos:start="243:74" pos:end="243:77">(<argument pos:start="243:75" pos:end="243:76"><expr pos:start="243:75" pos:end="243:76"><name pos:start="243:75" pos:end="243:76">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:78"><expr pos:start="245:9" pos:end="245:77"><name pos:start="245:9" pos:end="245:42"><name pos:start="245:9" pos:end="245:11">vui</name><operator pos:start="245:12" pos:end="245:13">-&gt;</operator><name pos:start="245:14" pos:end="245:42">log2_max_mv_length_horizontal</name></name>           <operator pos:start="245:54" pos:end="245:54">=</operator> <call pos:start="245:56" pos:end="245:77"><name pos:start="245:56" pos:end="245:73">get_ue_golomb_long</name><argument_list pos:start="245:74" pos:end="245:77">(<argument pos:start="245:75" pos:end="245:76"><expr pos:start="245:75" pos:end="245:76"><name pos:start="245:75" pos:end="245:76">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:78"><expr pos:start="247:9" pos:end="247:77"><name pos:start="247:9" pos:end="247:40"><name pos:start="247:9" pos:end="247:11">vui</name><operator pos:start="247:12" pos:end="247:13">-&gt;</operator><name pos:start="247:14" pos:end="247:40">log2_max_mv_length_vertical</name></name>             <operator pos:start="247:54" pos:end="247:54">=</operator> <call pos:start="247:56" pos:end="247:77"><name pos:start="247:56" pos:end="247:73">get_ue_golomb_long</name><argument_list pos:start="247:74" pos:end="247:77">(<argument pos:start="247:75" pos:end="247:76"><expr pos:start="247:75" pos:end="247:76"><name pos:start="247:75" pos:end="247:76">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
