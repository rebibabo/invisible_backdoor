<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4631.c" pos:tabs="8"><function pos:start="1:1" pos:end="219:1"><type pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:16">TranslationBlock</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:29">tb_gen_code</name><parameter_list pos:start="1:30" pos:end="5:52">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:38">CPUState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">cpu</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:45"><decl pos:start="3:31" pos:end="3:45"><type pos:start="3:31" pos:end="3:45"><name pos:start="3:31" pos:end="3:42">target_ulong</name></type> <name pos:start="3:44" pos:end="3:45">pc</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:67"><decl pos:start="3:48" pos:end="3:67"><type pos:start="3:48" pos:end="3:67"><name pos:start="3:48" pos:end="3:59">target_ulong</name></type> <name pos:start="3:61" pos:end="3:67">cs_base</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:39"><decl pos:start="5:31" pos:end="5:39"><type pos:start="5:31" pos:end="5:39"><name pos:start="5:31" pos:end="5:33">int</name></type> <name pos:start="5:35" pos:end="5:39">flags</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:51"><decl pos:start="5:42" pos:end="5:51"><type pos:start="5:42" pos:end="5:51"><name pos:start="5:42" pos:end="5:44">int</name></type> <name pos:start="5:46" pos:end="5:51">cflags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="219:1">{<block_content pos:start="9:5" pos:end="217:14">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">CPUArchState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">env</name> <init pos:start="9:23" pos:end="9:36">= <expr pos:start="9:25" pos:end="9:36"><name pos:start="9:25" pos:end="9:36"><name pos:start="9:25" pos:end="9:27">cpu</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:36">env_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">TranslationBlock</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:24">tb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:18">tb_page_addr_t</name></type> <name pos:start="13:20" pos:end="13:26">phys_pc</name></decl>, <decl pos:start="13:29" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:18"/><name pos:start="13:29" pos:end="13:38">phys_page2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:27">virt_page2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:17">tcg_insn_unit</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:31">gen_code_buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="22:0"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:21">gen_code_size</name></decl>, <decl pos:start="19:24" pos:end="19:34"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:24" pos:end="19:34">search_size</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="21:1" pos:end="21:22">#<cpp:directive pos:start="21:2" pos:end="21:6">ifdef</cpp:directive> <name pos:start="21:8" pos:end="21:22">CONFIG_PROFILER</name></cpp:ifdef>

    <decl_stmt pos:start="23:5" pos:end="26:0"><decl pos:start="23:5" pos:end="23:14"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">int64_t</name></type> <name pos:start="23:13" pos:end="23:14">ti</name></decl>;</decl_stmt>

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:11">phys_pc</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:41"><name pos:start="29:15" pos:end="29:32">get_page_addr_code</name><argument_list pos:start="29:33" pos:end="29:41">(<argument pos:start="29:34" pos:end="29:36"><expr pos:start="29:34" pos:end="29:36"><name pos:start="29:34" pos:end="29:36">env</name></expr></argument>, <argument pos:start="29:39" pos:end="29:40"><expr pos:start="29:39" pos:end="29:40"><name pos:start="29:39" pos:end="29:40">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:19">(<expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:18">use_icount</name></expr>)</condition> <block pos:start="31:21" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:32">

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:14">cflags</name> <operator pos:start="33:16" pos:end="33:17">|=</operator> <name pos:start="33:19" pos:end="33:31">CF_USE_ICOUNT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:22"><expr pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:6">tb</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <call pos:start="39:10" pos:end="39:21"><name pos:start="39:10" pos:end="39:17">tb_alloc</name><argument_list pos:start="39:18" pos:end="39:21">(<argument pos:start="39:19" pos:end="39:20"><expr pos:start="39:19" pos:end="39:20"><name pos:start="39:19" pos:end="39:20">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="59:5"><if pos:start="41:5" pos:end="59:5">if <condition pos:start="41:8" pos:end="41:22">(<expr pos:start="41:9" pos:end="41:21"><call pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:16">unlikely</name><argument_list pos:start="41:17" pos:end="41:21">(<argument pos:start="41:18" pos:end="41:20"><expr pos:start="41:18" pos:end="41:20"><operator pos:start="41:18" pos:end="41:18">!</operator><name pos:start="41:19" pos:end="41:20">tb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:24" pos:end="59:5">{<block_content pos:start="43:2" pos:end="57:47">

 <label pos:start="43:2" pos:end="43:17"><name pos:start="43:2" pos:end="43:16">buffer_overflow</name>:</label>

        <comment type="block" pos:start="45:9" pos:end="45:32">/* flush must be done */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:22"><expr pos:start="47:9" pos:end="47:21"><call pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:16">tb_flush</name><argument_list pos:start="47:17" pos:end="47:21">(<argument pos:start="47:18" pos:end="47:20"><expr pos:start="47:18" pos:end="47:20"><name pos:start="47:18" pos:end="47:20">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="49:9" pos:end="49:39">/* cannot fail at this point */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:26"><expr pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:10">tb</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <call pos:start="51:14" pos:end="51:25"><name pos:start="51:14" pos:end="51:21">tb_alloc</name><argument_list pos:start="51:22" pos:end="51:25">(<argument pos:start="51:23" pos:end="51:24"><expr pos:start="51:23" pos:end="51:24"><name pos:start="51:23" pos:end="51:24">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:27"><expr pos:start="53:9" pos:end="53:26"><call pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:14">assert</name><argument_list pos:start="53:15" pos:end="53:26">(<argument pos:start="53:16" pos:end="53:25"><expr pos:start="53:16" pos:end="53:25"><name pos:start="53:16" pos:end="53:17">tb</name> <operator pos:start="53:19" pos:end="53:20">!=</operator> <name pos:start="53:22" pos:end="53:25">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="55:9" pos:end="55:59">/* Don't forget to invalidate previous TB info.  */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:47"><expr pos:start="57:9" pos:end="57:46"><name pos:start="57:9" pos:end="57:42"><name pos:start="57:9" pos:end="57:15">tcg_ctx</name><operator pos:start="57:16" pos:end="57:16">.</operator><name pos:start="57:17" pos:end="57:22">tb_ctx</name><operator pos:start="57:23" pos:end="57:23">.</operator><name pos:start="57:24" pos:end="57:42">tb_invalidated_flag</name></name> <operator pos:start="57:44" pos:end="57:44">=</operator> <literal type="number" pos:start="57:46" pos:end="57:46">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:40"><expr pos:start="63:5" pos:end="63:39"><name pos:start="63:5" pos:end="63:16">gen_code_buf</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <name pos:start="63:20" pos:end="63:39"><name pos:start="63:20" pos:end="63:26">tcg_ctx</name><operator pos:start="63:27" pos:end="63:27">.</operator><name pos:start="63:28" pos:end="63:39">code_gen_ptr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:30"><expr pos:start="65:5" pos:end="65:29"><name pos:start="65:5" pos:end="65:14"><name pos:start="65:5" pos:end="65:6">tb</name><operator pos:start="65:7" pos:end="65:8">-&gt;</operator><name pos:start="65:9" pos:end="65:14">tc_ptr</name></name> <operator pos:start="65:16" pos:end="65:16">=</operator> <name pos:start="65:18" pos:end="65:29">gen_code_buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:26"><expr pos:start="67:5" pos:end="67:25"><name pos:start="67:5" pos:end="67:15"><name pos:start="67:5" pos:end="67:6">tb</name><operator pos:start="67:7" pos:end="67:8">-&gt;</operator><name pos:start="67:9" pos:end="67:15">cs_base</name></name> <operator pos:start="67:17" pos:end="67:17">=</operator> <name pos:start="67:19" pos:end="67:25">cs_base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:22"><expr pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:13"><name pos:start="69:5" pos:end="69:6">tb</name><operator pos:start="69:7" pos:end="69:8">-&gt;</operator><name pos:start="69:9" pos:end="69:13">flags</name></name> <operator pos:start="69:15" pos:end="69:15">=</operator> <name pos:start="69:17" pos:end="69:21">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="76:0"><expr pos:start="71:5" pos:end="71:23"><name pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:6">tb</name><operator pos:start="71:7" pos:end="71:8">-&gt;</operator><name pos:start="71:9" pos:end="71:14">cflags</name></name> <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:23">cflags</name></expr>;</expr_stmt>



<cpp:ifdef pos:start="75:1" pos:end="75:22">#<cpp:directive pos:start="75:2" pos:end="75:6">ifdef</cpp:directive> <name pos:start="75:8" pos:end="75:22">CONFIG_PROFILER</name></cpp:ifdef>

    <expr_stmt pos:start="77:5" pos:end="77:24"><expr pos:start="77:5" pos:end="77:23"><name pos:start="77:5" pos:end="77:21"><name pos:start="77:5" pos:end="77:11">tcg_ctx</name><operator pos:start="77:12" pos:end="77:12">.</operator><name pos:start="77:13" pos:end="77:21">tb_count1</name></name><operator pos:start="77:22" pos:end="77:23">++</operator></expr>;</expr_stmt> <comment type="block" pos:start="77:26" pos:end="79:36">/* includes aborted translations because of

                       exceptions */</comment>

    <expr_stmt pos:start="81:5" pos:end="84:0"><expr pos:start="81:5" pos:end="81:27"><name pos:start="81:5" pos:end="81:6">ti</name> <operator pos:start="81:8" pos:end="81:8">=</operator> <call pos:start="81:10" pos:end="81:27"><name pos:start="81:10" pos:end="81:25">profile_getclock</name><argument_list pos:start="81:26" pos:end="81:27">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="83:1" pos:end="83:6">#<cpp:directive pos:start="83:2" pos:end="83:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="87:5" pos:end="87:29"><expr pos:start="87:5" pos:end="87:28"><call pos:start="87:5" pos:end="87:28"><name pos:start="87:5" pos:end="87:18">tcg_func_start</name><argument_list pos:start="87:19" pos:end="87:28">(<argument pos:start="87:20" pos:end="87:27"><expr pos:start="87:20" pos:end="87:27"><operator pos:start="87:20" pos:end="87:20">&amp;</operator><name pos:start="87:21" pos:end="87:27">tcg_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:35"><expr pos:start="91:5" pos:end="91:34"><call pos:start="91:5" pos:end="91:34"><name pos:start="91:5" pos:end="91:25">gen_intermediate_code</name><argument_list pos:start="91:26" pos:end="91:34">(<argument pos:start="91:27" pos:end="91:29"><expr pos:start="91:27" pos:end="91:29"><name pos:start="91:27" pos:end="91:29">env</name></expr></argument>, <argument pos:start="91:32" pos:end="91:33"><expr pos:start="91:32" pos:end="91:33"><name pos:start="91:32" pos:end="91:33">tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:50"><expr pos:start="95:5" pos:end="95:49"><call pos:start="95:5" pos:end="95:49"><name pos:start="95:5" pos:end="95:25">trace_translate_block</name><argument_list pos:start="95:26" pos:end="95:49">(<argument pos:start="95:27" pos:end="95:28"><expr pos:start="95:27" pos:end="95:28"><name pos:start="95:27" pos:end="95:28">tb</name></expr></argument>, <argument pos:start="95:31" pos:end="95:36"><expr pos:start="95:31" pos:end="95:36"><name pos:start="95:31" pos:end="95:36"><name pos:start="95:31" pos:end="95:32">tb</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:36">pc</name></name></expr></argument>, <argument pos:start="95:39" pos:end="95:48"><expr pos:start="95:39" pos:end="95:48"><name pos:start="95:39" pos:end="95:48"><name pos:start="95:39" pos:end="95:40">tb</name><operator pos:start="95:41" pos:end="95:42">-&gt;</operator><name pos:start="95:43" pos:end="95:48">tc_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:31">/* generate machine code */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:35"><expr pos:start="101:5" pos:end="101:34"><name pos:start="101:5" pos:end="101:25"><name pos:start="101:5" pos:end="101:6">tb</name><operator pos:start="101:7" pos:end="101:8">-&gt;</operator><name pos:start="101:9" pos:end="101:22">tb_next_offset</name><index pos:start="101:23" pos:end="101:25">[<expr pos:start="101:24" pos:end="101:24"><literal type="number" pos:start="101:24" pos:end="101:24">0</literal></expr>]</index></name> <operator pos:start="101:27" pos:end="101:27">=</operator> <literal type="number" pos:start="101:29" pos:end="101:34">0xffff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:35"><expr pos:start="103:5" pos:end="103:34"><name pos:start="103:5" pos:end="103:25"><name pos:start="103:5" pos:end="103:6">tb</name><operator pos:start="103:7" pos:end="103:8">-&gt;</operator><name pos:start="103:9" pos:end="103:22">tb_next_offset</name><index pos:start="103:23" pos:end="103:25">[<expr pos:start="103:24" pos:end="103:24"><literal type="number" pos:start="103:24" pos:end="103:24">1</literal></expr>]</index></name> <operator pos:start="103:27" pos:end="103:27">=</operator> <literal type="number" pos:start="103:29" pos:end="103:34">0xffff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="108:0"><expr pos:start="105:5" pos:end="105:47"><name pos:start="105:5" pos:end="105:26"><name pos:start="105:5" pos:end="105:11">tcg_ctx</name><operator pos:start="105:12" pos:end="105:12">.</operator><name pos:start="105:13" pos:end="105:26">tb_next_offset</name></name> <operator pos:start="105:28" pos:end="105:28">=</operator> <name pos:start="105:30" pos:end="105:47"><name pos:start="105:30" pos:end="105:31">tb</name><operator pos:start="105:32" pos:end="105:33">-&gt;</operator><name pos:start="105:34" pos:end="105:47">tb_next_offset</name></name></expr>;</expr_stmt>

<cpp:ifdef pos:start="107:1" pos:end="107:22">#<cpp:directive pos:start="107:2" pos:end="107:6">ifdef</cpp:directive> <name pos:start="107:8" pos:end="107:22">USE_DIRECT_JUMP</name></cpp:ifdef>

    <expr_stmt pos:start="109:5" pos:end="109:46"><expr pos:start="109:5" pos:end="109:45"><name pos:start="109:5" pos:end="109:25"><name pos:start="109:5" pos:end="109:11">tcg_ctx</name><operator pos:start="109:12" pos:end="109:12">.</operator><name pos:start="109:13" pos:end="109:25">tb_jmp_offset</name></name> <operator pos:start="109:27" pos:end="109:27">=</operator> <name pos:start="109:29" pos:end="109:45"><name pos:start="109:29" pos:end="109:30">tb</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:45">tb_jmp_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="114:0"><expr pos:start="111:5" pos:end="111:26"><name pos:start="111:5" pos:end="111:19"><name pos:start="111:5" pos:end="111:11">tcg_ctx</name><operator pos:start="111:12" pos:end="111:12">.</operator><name pos:start="111:13" pos:end="111:19">tb_next</name></name> <operator pos:start="111:21" pos:end="111:21">=</operator> <name pos:start="111:23" pos:end="111:26">NULL</name></expr>;</expr_stmt>

<cpp:else pos:start="113:1" pos:end="113:5">#<cpp:directive pos:start="113:2" pos:end="113:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="115:5" pos:end="115:33"><expr pos:start="115:5" pos:end="115:32"><name pos:start="115:5" pos:end="115:25"><name pos:start="115:5" pos:end="115:11">tcg_ctx</name><operator pos:start="115:12" pos:end="115:12">.</operator><name pos:start="115:13" pos:end="115:25">tb_jmp_offset</name></name> <operator pos:start="115:27" pos:end="115:27">=</operator> <name pos:start="115:29" pos:end="115:32">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="124:0"><expr pos:start="117:5" pos:end="117:33"><name pos:start="117:5" pos:end="117:19"><name pos:start="117:5" pos:end="117:11">tcg_ctx</name><operator pos:start="117:12" pos:end="117:12">.</operator><name pos:start="117:13" pos:end="117:19">tb_next</name></name> <operator pos:start="117:21" pos:end="117:21">=</operator> <name pos:start="117:23" pos:end="117:33"><name pos:start="117:23" pos:end="117:24">tb</name><operator pos:start="117:25" pos:end="117:26">-&gt;</operator><name pos:start="117:27" pos:end="117:33">tb_next</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="119:1" pos:end="119:6">#<cpp:directive pos:start="119:2" pos:end="119:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="123:1" pos:end="123:22">#<cpp:directive pos:start="123:2" pos:end="123:6">ifdef</cpp:directive> <name pos:start="123:8" pos:end="123:22">CONFIG_PROFILER</name></cpp:ifdef>

    <expr_stmt pos:start="125:5" pos:end="125:23"><expr pos:start="125:5" pos:end="125:22"><name pos:start="125:5" pos:end="125:20"><name pos:start="125:5" pos:end="125:11">tcg_ctx</name><operator pos:start="125:12" pos:end="125:12">.</operator><name pos:start="125:13" pos:end="125:20">tb_count</name></name><operator pos:start="125:21" pos:end="125:22">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:51"><expr pos:start="127:5" pos:end="127:50"><name pos:start="127:5" pos:end="127:23"><name pos:start="127:5" pos:end="127:11">tcg_ctx</name><operator pos:start="127:12" pos:end="127:12">.</operator><name pos:start="127:13" pos:end="127:23">interm_time</name></name> <operator pos:start="127:25" pos:end="127:26">+=</operator> <call pos:start="127:28" pos:end="127:45"><name pos:start="127:28" pos:end="127:43">profile_getclock</name><argument_list pos:start="127:44" pos:end="127:45">()</argument_list></call> <operator pos:start="127:47" pos:end="127:47">-</operator> <name pos:start="127:49" pos:end="127:50">ti</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="132:0"><expr pos:start="129:5" pos:end="129:43"><name pos:start="129:5" pos:end="129:21"><name pos:start="129:5" pos:end="129:11">tcg_ctx</name><operator pos:start="129:12" pos:end="129:12">.</operator><name pos:start="129:13" pos:end="129:21">code_time</name></name> <operator pos:start="129:23" pos:end="129:24">-=</operator> <call pos:start="129:26" pos:end="129:43"><name pos:start="129:26" pos:end="129:41">profile_getclock</name><argument_list pos:start="129:42" pos:end="129:43">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="131:1" pos:end="131:6">#<cpp:directive pos:start="131:2" pos:end="131:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="135:5" pos:end="143:76">/* ??? Overflow could be handled better here.  In particular, we

       don't need to re-do gen_intermediate_code, nor should we re-do

       the tcg optimization currently hidden inside tcg_gen_code.  All

       that should be required is to flush the TBs, allocate a new TB,

       re-initialize it per above, and re-do the actual code generation.  */</comment>

    <expr_stmt pos:start="145:5" pos:end="145:57"><expr pos:start="145:5" pos:end="145:56"><name pos:start="145:5" pos:end="145:17">gen_code_size</name> <operator pos:start="145:19" pos:end="145:19">=</operator> <call pos:start="145:21" pos:end="145:56"><name pos:start="145:21" pos:end="145:32">tcg_gen_code</name><argument_list pos:start="145:33" pos:end="145:56">(<argument pos:start="145:34" pos:end="145:41"><expr pos:start="145:34" pos:end="145:41"><operator pos:start="145:34" pos:end="145:34">&amp;</operator><name pos:start="145:35" pos:end="145:41">tcg_ctx</name></expr></argument>, <argument pos:start="145:44" pos:end="145:55"><expr pos:start="145:44" pos:end="145:55"><name pos:start="145:44" pos:end="145:55">gen_code_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="147:5" pos:end="151:5"><if pos:start="147:5" pos:end="151:5">if <condition pos:start="147:8" pos:end="147:36">(<expr pos:start="147:9" pos:end="147:35"><call pos:start="147:9" pos:end="147:35"><name pos:start="147:9" pos:end="147:16">unlikely</name><argument_list pos:start="147:17" pos:end="147:35">(<argument pos:start="147:18" pos:end="147:34"><expr pos:start="147:18" pos:end="147:34"><name pos:start="147:18" pos:end="147:30">gen_code_size</name> <operator pos:start="147:32" pos:end="147:32">&lt;</operator> <literal type="number" pos:start="147:34" pos:end="147:34">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="147:38" pos:end="151:5">{<block_content pos:start="149:9" pos:end="149:29">

        <goto pos:start="149:9" pos:end="149:29">goto <name pos:start="149:14" pos:end="149:28">buffer_overflow</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:74"><expr pos:start="153:5" pos:end="153:73"><name pos:start="153:5" pos:end="153:15">search_size</name> <operator pos:start="153:17" pos:end="153:17">=</operator> <call pos:start="153:19" pos:end="153:73"><name pos:start="153:19" pos:end="153:31">encode_search</name><argument_list pos:start="153:32" pos:end="153:73">(<argument pos:start="153:33" pos:end="153:34"><expr pos:start="153:33" pos:end="153:34"><name pos:start="153:33" pos:end="153:34">tb</name></expr></argument>, <argument pos:start="153:37" pos:end="153:72"><expr pos:start="153:37" pos:end="153:72"><operator pos:start="153:37" pos:end="153:37">(</operator><name pos:start="153:38" pos:end="153:41">void</name> <operator pos:start="153:43" pos:end="153:43">*</operator><operator pos:start="153:44" pos:end="153:44">)</operator><name pos:start="153:45" pos:end="153:56">gen_code_buf</name> <operator pos:start="153:58" pos:end="153:58">+</operator> <name pos:start="153:60" pos:end="153:72">gen_code_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="164:0"><if pos:start="155:5" pos:end="164:0">if <condition pos:start="155:8" pos:end="155:34">(<expr pos:start="155:9" pos:end="155:33"><call pos:start="155:9" pos:end="155:33"><name pos:start="155:9" pos:end="155:16">unlikely</name><argument_list pos:start="155:17" pos:end="155:33">(<argument pos:start="155:18" pos:end="155:32"><expr pos:start="155:18" pos:end="155:32"><name pos:start="155:18" pos:end="155:28">search_size</name> <operator pos:start="155:30" pos:end="155:30">&lt;</operator> <literal type="number" pos:start="155:32" pos:end="155:32">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="155:36" pos:end="164:0">{<block_content pos:start="157:9" pos:end="157:29">

        <goto pos:start="157:9" pos:end="157:29">goto <name pos:start="157:14" pos:end="157:28">buffer_overflow</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="163:1" pos:end="163:22">#<cpp:directive pos:start="163:2" pos:end="163:6">ifdef</cpp:directive> <name pos:start="163:8" pos:end="163:22">CONFIG_PROFILER</name></cpp:ifdef>

    <expr_stmt pos:start="165:5" pos:end="165:44"><expr pos:start="165:5" pos:end="165:43"><name pos:start="165:5" pos:end="165:21"><name pos:start="165:5" pos:end="165:11">tcg_ctx</name><operator pos:start="165:12" pos:end="165:12">.</operator><name pos:start="165:13" pos:end="165:21">code_time</name></name> <operator pos:start="165:23" pos:end="165:24">+=</operator> <call pos:start="165:26" pos:end="165:43"><name pos:start="165:26" pos:end="165:41">profile_getclock</name><argument_list pos:start="165:42" pos:end="165:43">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:36"><expr pos:start="167:5" pos:end="167:35"><name pos:start="167:5" pos:end="167:23"><name pos:start="167:5" pos:end="167:11">tcg_ctx</name><operator pos:start="167:12" pos:end="167:12">.</operator><name pos:start="167:13" pos:end="167:23">code_in_len</name></name> <operator pos:start="167:25" pos:end="167:26">+=</operator> <name pos:start="167:28" pos:end="167:35"><name pos:start="167:28" pos:end="167:29">tb</name><operator pos:start="167:30" pos:end="167:31">-&gt;</operator><name pos:start="167:32" pos:end="167:35">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:42"><expr pos:start="169:5" pos:end="169:41"><name pos:start="169:5" pos:end="169:24"><name pos:start="169:5" pos:end="169:11">tcg_ctx</name><operator pos:start="169:12" pos:end="169:12">.</operator><name pos:start="169:13" pos:end="169:24">code_out_len</name></name> <operator pos:start="169:26" pos:end="169:27">+=</operator> <name pos:start="169:29" pos:end="169:41">gen_code_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="178:0"><expr pos:start="171:5" pos:end="171:41"><name pos:start="171:5" pos:end="171:26"><name pos:start="171:5" pos:end="171:11">tcg_ctx</name><operator pos:start="171:12" pos:end="171:12">.</operator><name pos:start="171:13" pos:end="171:26">search_out_len</name></name> <operator pos:start="171:28" pos:end="171:29">+=</operator> <name pos:start="171:31" pos:end="171:41">search_size</name></expr>;</expr_stmt>

<cpp:endif pos:start="173:1" pos:end="173:6">#<cpp:directive pos:start="173:2" pos:end="173:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="177:1" pos:end="177:18">#<cpp:directive pos:start="177:2" pos:end="177:6">ifdef</cpp:directive> <name pos:start="177:8" pos:end="177:18">DEBUG_DISAS</name></cpp:ifdef>

    <if_stmt pos:start="179:5" pos:end="192:0"><if pos:start="179:5" pos:end="192:0">if <condition pos:start="179:8" pos:end="179:47">(<expr pos:start="179:9" pos:end="179:46"><call pos:start="179:9" pos:end="179:46"><name pos:start="179:9" pos:end="179:26">qemu_loglevel_mask</name><argument_list pos:start="179:27" pos:end="179:46">(<argument pos:start="179:28" pos:end="179:45"><expr pos:start="179:28" pos:end="179:45"><name pos:start="179:28" pos:end="179:45">CPU_LOG_TB_OUT_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="179:49" pos:end="192:0">{<block_content pos:start="181:9" pos:end="187:25">

        <expr_stmt pos:start="181:9" pos:end="181:52"><expr pos:start="181:9" pos:end="181:51"><call pos:start="181:9" pos:end="181:51"><name pos:start="181:9" pos:end="181:16">qemu_log</name><argument_list pos:start="181:17" pos:end="181:51">(<argument pos:start="181:18" pos:end="181:35"><expr pos:start="181:18" pos:end="181:35"><literal type="string" pos:start="181:18" pos:end="181:35">"OUT: [size=%d]\n"</literal></expr></argument>, <argument pos:start="181:38" pos:end="181:50"><expr pos:start="181:38" pos:end="181:50"><name pos:start="181:38" pos:end="181:50">gen_code_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:45"><expr pos:start="183:9" pos:end="183:44"><call pos:start="183:9" pos:end="183:44"><name pos:start="183:9" pos:end="183:17">log_disas</name><argument_list pos:start="183:18" pos:end="183:44">(<argument pos:start="183:19" pos:end="183:28"><expr pos:start="183:19" pos:end="183:28"><name pos:start="183:19" pos:end="183:28"><name pos:start="183:19" pos:end="183:20">tb</name><operator pos:start="183:21" pos:end="183:22">-&gt;</operator><name pos:start="183:23" pos:end="183:28">tc_ptr</name></name></expr></argument>, <argument pos:start="183:31" pos:end="183:43"><expr pos:start="183:31" pos:end="183:43"><name pos:start="183:31" pos:end="183:43">gen_code_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:23"><expr pos:start="185:9" pos:end="185:22"><call pos:start="185:9" pos:end="185:22"><name pos:start="185:9" pos:end="185:16">qemu_log</name><argument_list pos:start="185:17" pos:end="185:22">(<argument pos:start="185:18" pos:end="185:21"><expr pos:start="185:18" pos:end="185:21"><literal type="string" pos:start="185:18" pos:end="185:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:25"><expr pos:start="187:9" pos:end="187:24"><call pos:start="187:9" pos:end="187:24"><name pos:start="187:9" pos:end="187:22">qemu_log_flush</name><argument_list pos:start="187:23" pos:end="187:24">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="191:1" pos:end="191:6">#<cpp:directive pos:start="191:2" pos:end="191:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="195:5" pos:end="199:33"><expr pos:start="195:5" pos:end="199:32"><name pos:start="195:5" pos:end="195:24"><name pos:start="195:5" pos:end="195:11">tcg_ctx</name><operator pos:start="195:12" pos:end="195:12">.</operator><name pos:start="195:13" pos:end="195:24">code_gen_ptr</name></name> <operator pos:start="195:26" pos:end="195:26">=</operator> <operator pos:start="195:28" pos:end="195:28">(</operator><name pos:start="195:29" pos:end="195:32">void</name> <operator pos:start="195:34" pos:end="195:34">*</operator><operator pos:start="195:35" pos:end="195:35">)</operator>

        <call pos:start="197:9" pos:end="199:32"><name pos:start="197:9" pos:end="197:16">ROUND_UP</name><argument_list pos:start="197:17" pos:end="199:32">(<argument pos:start="197:18" pos:end="197:70"><expr pos:start="197:18" pos:end="197:70"><operator pos:start="197:18" pos:end="197:18">(</operator><name pos:start="197:19" pos:end="197:27">uintptr_t</name><operator pos:start="197:28" pos:end="197:28">)</operator><name pos:start="197:29" pos:end="197:40">gen_code_buf</name> <operator pos:start="197:42" pos:end="197:42">+</operator> <name pos:start="197:44" pos:end="197:56">gen_code_size</name> <operator pos:start="197:58" pos:end="197:58">+</operator> <name pos:start="197:60" pos:end="197:70">search_size</name></expr></argument>,

                 <argument pos:start="199:18" pos:end="199:31"><expr pos:start="199:18" pos:end="199:31"><name pos:start="199:18" pos:end="199:31">CODE_GEN_ALIGN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="203:5" pos:end="203:35">/* check next page if needed */</comment>

    <expr_stmt pos:start="205:5" pos:end="205:56"><expr pos:start="205:5" pos:end="205:55"><name pos:start="205:5" pos:end="205:14">virt_page2</name> <operator pos:start="205:16" pos:end="205:16">=</operator> <operator pos:start="205:18" pos:end="205:18">(</operator><name pos:start="205:19" pos:end="205:20">pc</name> <operator pos:start="205:22" pos:end="205:22">+</operator> <name pos:start="205:24" pos:end="205:31"><name pos:start="205:24" pos:end="205:25">tb</name><operator pos:start="205:26" pos:end="205:27">-&gt;</operator><name pos:start="205:28" pos:end="205:31">size</name></name> <operator pos:start="205:33" pos:end="205:33">-</operator> <literal type="number" pos:start="205:35" pos:end="205:35">1</literal><operator pos:start="205:36" pos:end="205:36">)</operator> <operator pos:start="205:38" pos:end="205:38">&amp;</operator> <name pos:start="205:40" pos:end="205:55">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:20"><expr pos:start="207:5" pos:end="207:19"><name pos:start="207:5" pos:end="207:14">phys_page2</name> <operator pos:start="207:16" pos:end="207:16">=</operator> <operator pos:start="207:18" pos:end="207:18">-</operator><literal type="number" pos:start="207:19" pos:end="207:19">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="209:5" pos:end="213:5"><if pos:start="209:5" pos:end="213:5">if <condition pos:start="209:8" pos:end="209:46">(<expr pos:start="209:9" pos:end="209:45"><operator pos:start="209:9" pos:end="209:9">(</operator><name pos:start="209:10" pos:end="209:11">pc</name> <operator pos:start="209:13" pos:end="209:13">&amp;</operator> <name pos:start="209:15" pos:end="209:30">TARGET_PAGE_MASK</name><operator pos:start="209:31" pos:end="209:31">)</operator> <operator pos:start="209:33" pos:end="209:34">!=</operator> <name pos:start="209:36" pos:end="209:45">virt_page2</name></expr>)</condition> <block pos:start="209:48" pos:end="213:5">{<block_content pos:start="211:9" pos:end="211:57">

        <expr_stmt pos:start="211:9" pos:end="211:57"><expr pos:start="211:9" pos:end="211:56"><name pos:start="211:9" pos:end="211:18">phys_page2</name> <operator pos:start="211:20" pos:end="211:20">=</operator> <call pos:start="211:22" pos:end="211:56"><name pos:start="211:22" pos:end="211:39">get_page_addr_code</name><argument_list pos:start="211:40" pos:end="211:56">(<argument pos:start="211:41" pos:end="211:43"><expr pos:start="211:41" pos:end="211:43"><name pos:start="211:41" pos:end="211:43">env</name></expr></argument>, <argument pos:start="211:46" pos:end="211:55"><expr pos:start="211:46" pos:end="211:55"><name pos:start="211:46" pos:end="211:55">virt_page2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:42"><expr pos:start="215:5" pos:end="215:41"><call pos:start="215:5" pos:end="215:41"><name pos:start="215:5" pos:end="215:16">tb_link_page</name><argument_list pos:start="215:17" pos:end="215:41">(<argument pos:start="215:18" pos:end="215:19"><expr pos:start="215:18" pos:end="215:19"><name pos:start="215:18" pos:end="215:19">tb</name></expr></argument>, <argument pos:start="215:22" pos:end="215:28"><expr pos:start="215:22" pos:end="215:28"><name pos:start="215:22" pos:end="215:28">phys_pc</name></expr></argument>, <argument pos:start="215:31" pos:end="215:40"><expr pos:start="215:31" pos:end="215:40"><name pos:start="215:31" pos:end="215:40">phys_page2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="217:5" pos:end="217:14">return <expr pos:start="217:12" pos:end="217:13"><name pos:start="217:12" pos:end="217:13">tb</name></expr>;</return>

</block_content>}</block></function>
</unit>
