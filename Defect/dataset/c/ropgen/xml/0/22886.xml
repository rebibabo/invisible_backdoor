<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22886.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_dxva2_decode_init</name><parameter_list pos:start="1:25" pos:end="1:47">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="205:1">{<block_content pos:start="5:5" pos:end="203:15">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:58"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">FFDXVASharedContext</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:29">sctx</name> <init pos:start="5:31" pos:end="5:58">= <expr pos:start="5:33" pos:end="5:58"><call pos:start="5:33" pos:end="5:58"><name pos:start="5:33" pos:end="5:51">DXVA_SHARED_CONTEXT</name><argument_list pos:start="5:52" pos:end="5:58">(<argument pos:start="5:53" pos:end="5:57"><expr pos:start="5:53" pos:end="5:57"><name pos:start="5:53" pos:end="5:57">avctx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">AVHWFramesContext</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:33">frames_ctx</name> <init pos:start="7:35" pos:end="7:40">= <expr pos:start="7:37" pos:end="7:40"><name pos:start="7:37" pos:end="7:40">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="13:5" pos:end="13:15">// Old API.</comment>

    <if_stmt pos:start="15:5" pos:end="17:17"><if pos:start="15:5" pos:end="17:17">if <condition pos:start="15:8" pos:end="15:31">(<expr pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:13">avctx</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:30">hwaccel_context</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="21:5" pos:end="21:56">// (avctx-&gt;pix_fmt is not updated yet at this point)</comment>

    <expr_stmt pos:start="23:5" pos:end="23:44"><expr pos:start="23:5" pos:end="23:43"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:8">sctx</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:17">pix_fmt</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:43"><name pos:start="23:21" pos:end="23:25">avctx</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:34">hwaccel</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:43">pix_fmt</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="29:79">(<expr pos:start="27:9" pos:end="29:78"><name pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:13">avctx</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:23">codec_id</name></name> <operator pos:start="27:25" pos:end="27:26">==</operator> <name pos:start="27:28" pos:end="27:43">AV_CODEC_ID_H264</name> <operator pos:start="27:45" pos:end="27:46">&amp;&amp;</operator>

        <operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:23"><name pos:start="29:10" pos:end="29:14">avctx</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:23">profile</name></name> <operator pos:start="29:25" pos:end="29:25">&amp;</operator> <operator pos:start="29:27" pos:end="29:27">~</operator><name pos:start="29:28" pos:end="29:54">FF_PROFILE_H264_CONSTRAINED</name><operator pos:start="29:55" pos:end="29:55">)</operator> <operator pos:start="29:57" pos:end="29:57">&gt;</operator> <name pos:start="29:59" pos:end="29:78">FF_PROFILE_H264_HIGH</name></expr>)</condition> <block pos:start="29:81" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:32">

        <expr_stmt pos:start="31:9" pos:end="31:105"><expr pos:start="31:9" pos:end="31:104"><call pos:start="31:9" pos:end="31:104"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:104">(<argument pos:start="31:16" pos:end="31:20"><expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:20">avctx</name></expr></argument>, <argument pos:start="31:23" pos:end="31:36"><expr pos:start="31:23" pos:end="31:36"><name pos:start="31:23" pos:end="31:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="31:39" pos:end="31:88"><expr pos:start="31:39" pos:end="31:88"><literal type="string" pos:start="31:39" pos:end="31:88">"Unsupported H.264 profile for DXVA HWAccel: %d\n"</literal></expr></argument>,<argument pos:start="31:90" pos:end="31:103"><expr pos:start="31:90" pos:end="31:103"><name pos:start="31:90" pos:end="31:103"><name pos:start="31:90" pos:end="31:94">avctx</name><operator pos:start="31:95" pos:end="31:96">-&gt;</operator><name pos:start="31:97" pos:end="31:103">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:32">return <expr pos:start="33:16" pos:end="33:31"><call pos:start="33:16" pos:end="33:31"><name pos:start="33:16" pos:end="33:22">AVERROR</name><argument_list pos:start="33:23" pos:end="33:31">(<argument pos:start="33:24" pos:end="33:30"><expr pos:start="33:24" pos:end="33:30"><name pos:start="33:24" pos:end="33:30">ENOTSUP</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="41:92">(<expr pos:start="39:9" pos:end="41:91"><name pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:13">avctx</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:23">codec_id</name></name> <operator pos:start="39:25" pos:end="39:26">==</operator> <name pos:start="39:28" pos:end="39:43">AV_CODEC_ID_HEVC</name> <operator pos:start="39:45" pos:end="39:46">&amp;&amp;</operator>

        <name pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:13">avctx</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:22">profile</name></name> <operator pos:start="41:24" pos:end="41:25">!=</operator> <name pos:start="41:27" pos:end="41:46">FF_PROFILE_HEVC_MAIN</name> <operator pos:start="41:48" pos:end="41:49">&amp;&amp;</operator> <name pos:start="41:51" pos:end="41:64"><name pos:start="41:51" pos:end="41:55">avctx</name><operator pos:start="41:56" pos:end="41:57">-&gt;</operator><name pos:start="41:58" pos:end="41:64">profile</name></name> <operator pos:start="41:66" pos:end="41:67">!=</operator> <name pos:start="41:69" pos:end="41:91">FF_PROFILE_HEVC_MAIN_10</name></expr>)</condition> <block pos:start="41:94" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:32">

        <expr_stmt pos:start="43:9" pos:end="43:105"><expr pos:start="43:9" pos:end="43:104"><call pos:start="43:9" pos:end="43:104"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:104">(<argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">avctx</name></expr></argument>, <argument pos:start="43:23" pos:end="43:36"><expr pos:start="43:23" pos:end="43:36"><name pos:start="43:23" pos:end="43:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="43:39" pos:end="43:87"><expr pos:start="43:39" pos:end="43:87"><literal type="string" pos:start="43:39" pos:end="43:87">"Unsupported HEVC profile for DXVA HWAccel: %d\n"</literal></expr></argument>, <argument pos:start="43:90" pos:end="43:103"><expr pos:start="43:90" pos:end="43:103"><name pos:start="43:90" pos:end="43:103"><name pos:start="43:90" pos:end="43:94">avctx</name><operator pos:start="43:95" pos:end="43:96">-&gt;</operator><name pos:start="43:97" pos:end="43:103">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:32">return <expr pos:start="45:16" pos:end="45:31"><call pos:start="45:16" pos:end="45:31"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:31">(<argument pos:start="45:24" pos:end="45:30"><expr pos:start="45:24" pos:end="45:30"><name pos:start="45:24" pos:end="45:30">ENOTSUP</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:55">(<expr pos:start="51:9" pos:end="51:54"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:29"><name pos:start="51:10" pos:end="51:14">avctx</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:29">hw_frames_ctx</name></name> <operator pos:start="51:31" pos:end="51:32">&amp;&amp;</operator> <operator pos:start="51:34" pos:end="51:34">!</operator><name pos:start="51:35" pos:end="51:54"><name pos:start="51:35" pos:end="51:39">avctx</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:54">hw_device_ctx</name></name></expr>)</condition> <block pos:start="51:57" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:31">

        <expr_stmt pos:start="53:9" pos:end="53:122"><expr pos:start="53:9" pos:end="53:121"><call pos:start="53:9" pos:end="53:121"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:121">(<argument pos:start="53:16" pos:end="53:20"><expr pos:start="53:16" pos:end="53:20"><name pos:start="53:16" pos:end="53:20">avctx</name></expr></argument>, <argument pos:start="53:23" pos:end="53:34"><expr pos:start="53:23" pos:end="53:34"><name pos:start="53:23" pos:end="53:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:37" pos:end="53:120"><expr pos:start="53:37" pos:end="53:120"><literal type="string" pos:start="53:37" pos:end="53:120">"Either a hw_frames_ctx or a hw_device_ctx needs to be set for hardware decoding.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:31">return <expr pos:start="55:16" pos:end="55:30"><call pos:start="55:16" pos:end="55:30"><name pos:start="55:16" pos:end="55:22">AVERROR</name><argument_list pos:start="55:23" pos:end="55:30">(<argument pos:start="55:24" pos:end="55:29"><expr pos:start="55:24" pos:end="55:29"><name pos:start="55:24" pos:end="55:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="89:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:29">(<expr pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:13">avctx</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:28">hw_frames_ctx</name></name></expr>)</condition> <block pos:start="61:31" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:68">

        <expr_stmt pos:start="63:9" pos:end="63:68"><expr pos:start="63:9" pos:end="63:67"><name pos:start="63:9" pos:end="63:18">frames_ctx</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <operator pos:start="63:22" pos:end="63:22">(</operator><name pos:start="63:23" pos:end="63:39">AVHWFramesContext</name><operator pos:start="63:40" pos:end="63:40">*</operator><operator pos:start="63:41" pos:end="63:41">)</operator><name pos:start="63:42" pos:end="63:67"><name pos:start="63:42" pos:end="63:46">avctx</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:61">hw_frames_ctx</name><operator pos:start="63:62" pos:end="63:63">-&gt;</operator><name pos:start="63:64" pos:end="63:67">data</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="89:5">else <block pos:start="65:12" pos:end="89:5">{<block_content pos:start="67:9" pos:end="87:22">

        <expr_stmt pos:start="67:9" pos:end="67:74"><expr pos:start="67:9" pos:end="67:73"><name pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:13">avctx</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:28">hw_frames_ctx</name></name> <operator pos:start="67:30" pos:end="67:30">=</operator> <call pos:start="67:32" pos:end="67:73"><name pos:start="67:32" pos:end="67:51">av_hwframe_ctx_alloc</name><argument_list pos:start="67:52" pos:end="67:73">(<argument pos:start="67:53" pos:end="67:72"><expr pos:start="67:53" pos:end="67:72"><name pos:start="67:53" pos:end="67:72"><name pos:start="67:53" pos:end="67:57">avctx</name><operator pos:start="67:58" pos:end="67:59">-&gt;</operator><name pos:start="67:60" pos:end="67:72">hw_device_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:35"><if pos:start="69:9" pos:end="71:35">if <condition pos:start="69:12" pos:end="69:34">(<expr pos:start="69:13" pos:end="69:33"><operator pos:start="69:13" pos:end="69:13">!</operator><name pos:start="69:14" pos:end="69:33"><name pos:start="69:14" pos:end="69:18">avctx</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:33">hw_frames_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:35"><block_content pos:start="71:13" pos:end="71:35">

            <return pos:start="71:13" pos:end="71:35">return <expr pos:start="71:20" pos:end="71:34"><call pos:start="71:20" pos:end="71:34"><name pos:start="71:20" pos:end="71:26">AVERROR</name><argument_list pos:start="71:27" pos:end="71:34">(<argument pos:start="71:28" pos:end="71:33"><expr pos:start="71:28" pos:end="71:33"><name pos:start="71:28" pos:end="71:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:68"><expr pos:start="75:9" pos:end="75:67"><name pos:start="75:9" pos:end="75:18">frames_ctx</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <operator pos:start="75:22" pos:end="75:22">(</operator><name pos:start="75:23" pos:end="75:39">AVHWFramesContext</name><operator pos:start="75:40" pos:end="75:40">*</operator><operator pos:start="75:41" pos:end="75:41">)</operator><name pos:start="75:42" pos:end="75:67"><name pos:start="75:42" pos:end="75:46">avctx</name><operator pos:start="75:47" pos:end="75:48">-&gt;</operator><name pos:start="75:49" pos:end="75:61">hw_frames_ctx</name><operator pos:start="75:62" pos:end="75:63">-&gt;</operator><name pos:start="75:64" pos:end="75:67">data</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:48"><expr pos:start="79:9" pos:end="79:47"><call pos:start="79:9" pos:end="79:47"><name pos:start="79:9" pos:end="79:28">dxva_adjust_hwframes</name><argument_list pos:start="79:29" pos:end="79:47">(<argument pos:start="79:30" pos:end="79:34"><expr pos:start="79:30" pos:end="79:34"><name pos:start="79:30" pos:end="79:34">avctx</name></expr></argument>, <argument pos:start="79:37" pos:end="79:46"><expr pos:start="79:37" pos:end="79:46"><name pos:start="79:37" pos:end="79:46">frames_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:56"><expr pos:start="83:9" pos:end="83:55"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:55"><name pos:start="83:15" pos:end="83:33">av_hwframe_ctx_init</name><argument_list pos:start="83:34" pos:end="83:55">(<argument pos:start="83:35" pos:end="83:54"><expr pos:start="83:35" pos:end="83:54"><name pos:start="83:35" pos:end="83:54"><name pos:start="83:35" pos:end="83:39">avctx</name><operator pos:start="83:40" pos:end="83:41">-&gt;</operator><name pos:start="83:42" pos:end="83:54">hw_frames_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="87:22"><if pos:start="85:9" pos:end="87:22">if <condition pos:start="85:12" pos:end="85:20">(<expr pos:start="85:13" pos:end="85:19"><name pos:start="85:13" pos:end="85:15">ret</name> <operator pos:start="85:17" pos:end="85:17">&lt;</operator> <literal type="number" pos:start="85:19" pos:end="85:19">0</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:22"><block_content pos:start="87:13" pos:end="87:22">

            <goto pos:start="87:13" pos:end="87:22">goto <name pos:start="87:18" pos:end="87:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:46"><expr pos:start="93:5" pos:end="93:45"><name pos:start="93:5" pos:end="93:20"><name pos:start="93:5" pos:end="93:8">sctx</name><operator pos:start="93:9" pos:end="93:10">-&gt;</operator><name pos:start="93:11" pos:end="93:20">device_ctx</name></name> <operator pos:start="93:22" pos:end="93:22">=</operator> <name pos:start="93:24" pos:end="93:45"><name pos:start="93:24" pos:end="93:33">frames_ctx</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:45">device_ctx</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="97:5" pos:end="114:0"><if pos:start="97:5" pos:end="114:0">if <condition pos:start="97:8" pos:end="101:67">(<expr pos:start="97:9" pos:end="101:66"><name pos:start="97:9" pos:end="97:26"><name pos:start="97:9" pos:end="97:18">frames_ctx</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:26">format</name></name> <operator pos:start="97:28" pos:end="97:29">!=</operator> <name pos:start="97:31" pos:end="97:43"><name pos:start="97:31" pos:end="97:34">sctx</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:43">pix_fmt</name></name> <operator pos:start="97:45" pos:end="97:46">||</operator>

        <operator pos:start="99:9" pos:end="99:9">!</operator><operator pos:start="99:10" pos:end="99:10">(</operator><operator pos:start="99:11" pos:end="99:11">(</operator><name pos:start="99:12" pos:end="99:24"><name pos:start="99:12" pos:end="99:15">sctx</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:24">pix_fmt</name></name> <operator pos:start="99:26" pos:end="99:27">==</operator> <name pos:start="99:29" pos:end="99:44">AV_PIX_FMT_D3D11</name> <operator pos:start="99:46" pos:end="99:47">&amp;&amp;</operator> <name pos:start="99:49" pos:end="99:62">CONFIG_D3D11VA</name><operator pos:start="99:63" pos:end="99:63">)</operator> <operator pos:start="99:65" pos:end="99:66">||</operator>

          <operator pos:start="101:11" pos:end="101:11">(</operator><name pos:start="101:12" pos:end="101:24"><name pos:start="101:12" pos:end="101:15">sctx</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:24">pix_fmt</name></name> <operator pos:start="101:26" pos:end="101:27">==</operator> <name pos:start="101:29" pos:end="101:48">AV_PIX_FMT_DXVA2_VLD</name> <operator pos:start="101:50" pos:end="101:51">&amp;&amp;</operator> <name pos:start="101:53" pos:end="101:64">CONFIG_DXVA2</name><operator pos:start="101:65" pos:end="101:65">)</operator><operator pos:start="101:66" pos:end="101:66">)</operator></expr>)</condition> <block pos:start="101:69" pos:end="114:0">{<block_content pos:start="103:9" pos:end="107:18">

        <expr_stmt pos:start="103:9" pos:end="103:69"><expr pos:start="103:9" pos:end="103:68"><call pos:start="103:9" pos:end="103:68"><name pos:start="103:9" pos:end="103:14">av_log</name><argument_list pos:start="103:15" pos:end="103:68">(<argument pos:start="103:16" pos:end="103:20"><expr pos:start="103:16" pos:end="103:20"><name pos:start="103:16" pos:end="103:20">avctx</name></expr></argument>, <argument pos:start="103:23" pos:end="103:34"><expr pos:start="103:23" pos:end="103:34"><name pos:start="103:23" pos:end="103:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="103:37" pos:end="103:67"><expr pos:start="103:37" pos:end="103:67"><literal type="string" pos:start="103:37" pos:end="103:67">"Invalid pixfmt for hwaccel!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:30"><expr pos:start="105:9" pos:end="105:29"><name pos:start="105:9" pos:end="105:11">ret</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="105:29"><name pos:start="105:15" pos:end="105:21">AVERROR</name><argument_list pos:start="105:22" pos:end="105:29">(<argument pos:start="105:23" pos:end="105:28"><expr pos:start="105:23" pos:end="105:28"><name pos:start="105:23" pos:end="105:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="107:9" pos:end="107:18">goto <name pos:start="107:14" pos:end="107:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="113:1" pos:end="113:18">#<cpp:directive pos:start="113:2" pos:end="113:3">if</cpp:directive> <expr pos:start="113:5" pos:end="113:18"><name pos:start="113:5" pos:end="113:18">CONFIG_D3D11VA</name></expr></cpp:if>

    <if_stmt pos:start="115:5" pos:end="158:0"><if pos:start="115:5" pos:end="158:0">if <condition pos:start="115:8" pos:end="115:42">(<expr pos:start="115:9" pos:end="115:41"><name pos:start="115:9" pos:end="115:21"><name pos:start="115:9" pos:end="115:12">sctx</name><operator pos:start="115:13" pos:end="115:14">-&gt;</operator><name pos:start="115:15" pos:end="115:21">pix_fmt</name></name> <operator pos:start="115:23" pos:end="115:24">==</operator> <name pos:start="115:26" pos:end="115:41">AV_PIX_FMT_D3D11</name></expr>)</condition> <block pos:start="115:44" pos:end="158:0">{<block_content pos:start="117:9" pos:end="149:56">

        <decl_stmt pos:start="117:9" pos:end="117:77"><decl pos:start="117:9" pos:end="117:76"><type pos:start="117:9" pos:end="117:32"><name pos:start="117:9" pos:end="117:30">AVD3D11VADeviceContext</name> <modifier pos:start="117:32" pos:end="117:32">*</modifier></type><name pos:start="117:33" pos:end="117:44">device_hwctx</name> <init pos:start="117:46" pos:end="117:76">= <expr pos:start="117:48" pos:end="117:76"><name pos:start="117:48" pos:end="117:76"><name pos:start="117:48" pos:end="117:57">frames_ctx</name><operator pos:start="117:58" pos:end="117:59">-&gt;</operator><name pos:start="117:60" pos:end="117:69">device_ctx</name><operator pos:start="117:70" pos:end="117:71">-&gt;</operator><name pos:start="117:72" pos:end="117:76">hwctx</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="119:9" pos:end="119:57"><decl pos:start="119:9" pos:end="119:56"><type pos:start="119:9" pos:end="119:26"><name pos:start="119:9" pos:end="119:24">AVD3D11VAContext</name> <modifier pos:start="119:26" pos:end="119:26">*</modifier></type><name pos:start="119:27" pos:end="119:35">d3d11_ctx</name> <init pos:start="119:37" pos:end="119:56">= <expr pos:start="119:39" pos:end="119:56"><operator pos:start="119:39" pos:end="119:39">&amp;</operator><name pos:start="119:40" pos:end="119:56"><name pos:start="119:40" pos:end="119:43">sctx</name><operator pos:start="119:44" pos:end="119:45">-&gt;</operator><name pos:start="119:46" pos:end="119:48">ctx</name><operator pos:start="119:49" pos:end="119:49">.</operator><name pos:start="119:50" pos:end="119:56">d3d11va</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="121:9" pos:end="121:19"><decl pos:start="121:9" pos:end="121:18"><type pos:start="121:9" pos:end="121:15"><name pos:start="121:9" pos:end="121:15">HRESULT</name></type> <name pos:start="121:17" pos:end="121:18">hr</name></decl>;</decl_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:29"><expr pos:start="125:9" pos:end="125:28"><call pos:start="125:9" pos:end="125:28"><name pos:start="125:9" pos:end="125:21">ff_dxva2_lock</name><argument_list pos:start="125:22" pos:end="125:28">(<argument pos:start="125:23" pos:end="125:27"><expr pos:start="125:23" pos:end="125:27"><name pos:start="125:23" pos:end="125:27">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:44"><expr pos:start="127:9" pos:end="127:43"><name pos:start="127:9" pos:end="127:11">ret</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <call pos:start="127:15" pos:end="127:43"><name pos:start="127:15" pos:end="127:36">d3d11va_create_decoder</name><argument_list pos:start="127:37" pos:end="127:43">(<argument pos:start="127:38" pos:end="127:42"><expr pos:start="127:38" pos:end="127:42"><name pos:start="127:38" pos:end="127:42">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:31"><expr pos:start="129:9" pos:end="129:30"><call pos:start="129:9" pos:end="129:30"><name pos:start="129:9" pos:end="129:23">ff_dxva2_unlock</name><argument_list pos:start="129:24" pos:end="129:30">(<argument pos:start="129:25" pos:end="129:29"><expr pos:start="129:25" pos:end="129:29"><name pos:start="129:25" pos:end="129:29">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="133:22"><if pos:start="131:9" pos:end="133:22">if <condition pos:start="131:12" pos:end="131:20">(<expr pos:start="131:13" pos:end="131:19"><name pos:start="131:13" pos:end="131:15">ret</name> <operator pos:start="131:17" pos:end="131:17">&lt;</operator> <literal type="number" pos:start="131:19" pos:end="131:19">0</literal></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:22"><block_content pos:start="133:13" pos:end="133:22">

            <goto pos:start="133:13" pos:end="133:22">goto <name pos:start="133:18" pos:end="133:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:55"><expr pos:start="137:9" pos:end="137:54"><name pos:start="137:9" pos:end="137:26"><name pos:start="137:9" pos:end="137:17">d3d11_ctx</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:26">decoder</name></name>       <operator pos:start="137:34" pos:end="137:34">=</operator> <name pos:start="137:36" pos:end="137:54"><name pos:start="137:36" pos:end="137:39">sctx</name><operator pos:start="137:40" pos:end="137:41">-&gt;</operator><name pos:start="137:42" pos:end="137:54">d3d11_decoder</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:63"><expr pos:start="139:9" pos:end="139:62"><name pos:start="139:9" pos:end="139:32"><name pos:start="139:9" pos:end="139:17">d3d11_ctx</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:32">video_context</name></name> <operator pos:start="139:34" pos:end="139:34">=</operator> <name pos:start="139:36" pos:end="139:62"><name pos:start="139:36" pos:end="139:47">device_hwctx</name><operator pos:start="139:48" pos:end="139:49">-&gt;</operator><name pos:start="139:50" pos:end="139:62">video_context</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:55"><expr pos:start="141:9" pos:end="141:54"><name pos:start="141:9" pos:end="141:22"><name pos:start="141:9" pos:end="141:17">d3d11_ctx</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:22">cfg</name></name>           <operator pos:start="141:34" pos:end="141:34">=</operator> <operator pos:start="141:36" pos:end="141:36">&amp;</operator><name pos:start="141:37" pos:end="141:54"><name pos:start="141:37" pos:end="141:40">sctx</name><operator pos:start="141:41" pos:end="141:42">-&gt;</operator><name pos:start="141:43" pos:end="141:54">d3d11_config</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:56"><expr pos:start="143:9" pos:end="143:55"><name pos:start="143:9" pos:end="143:32"><name pos:start="143:9" pos:end="143:17">d3d11_ctx</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:32">surface_count</name></name> <operator pos:start="143:34" pos:end="143:34">=</operator> <name pos:start="143:36" pos:end="143:55"><name pos:start="143:36" pos:end="143:39">sctx</name><operator pos:start="143:40" pos:end="143:41">-&gt;</operator><name pos:start="143:42" pos:end="143:55">nb_d3d11_views</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:53"><expr pos:start="145:9" pos:end="145:52"><name pos:start="145:9" pos:end="145:26"><name pos:start="145:9" pos:end="145:17">d3d11_ctx</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:26">surface</name></name>       <operator pos:start="145:34" pos:end="145:34">=</operator> <name pos:start="145:36" pos:end="145:52"><name pos:start="145:36" pos:end="145:39">sctx</name><operator pos:start="145:40" pos:end="145:41">-&gt;</operator><name pos:start="145:42" pos:end="145:52">d3d11_views</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:52"><expr pos:start="147:9" pos:end="147:51"><name pos:start="147:9" pos:end="147:29"><name pos:start="147:9" pos:end="147:17">d3d11_ctx</name><operator pos:start="147:18" pos:end="147:19">-&gt;</operator><name pos:start="147:20" pos:end="147:29">workaround</name></name>    <operator pos:start="147:34" pos:end="147:34">=</operator> <name pos:start="147:36" pos:end="147:51"><name pos:start="147:36" pos:end="147:39">sctx</name><operator pos:start="147:40" pos:end="147:41">-&gt;</operator><name pos:start="147:42" pos:end="147:51">workaround</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:56"><expr pos:start="149:9" pos:end="149:55"><name pos:start="149:9" pos:end="149:32"><name pos:start="149:9" pos:end="149:17">d3d11_ctx</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:32">context_mutex</name></name> <operator pos:start="149:34" pos:end="149:34">=</operator> <name pos:start="149:36" pos:end="149:55">INVALID_HANDLE_VALUE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="153:1" pos:end="153:6">#<cpp:directive pos:start="153:2" pos:end="153:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="157:1" pos:end="157:16">#<cpp:directive pos:start="157:2" pos:end="157:3">if</cpp:directive> <expr pos:start="157:5" pos:end="157:16"><name pos:start="157:5" pos:end="157:16">CONFIG_DXVA2</name></expr></cpp:if>

    <if_stmt pos:start="159:5" pos:end="192:0"><if pos:start="159:5" pos:end="192:0">if <condition pos:start="159:8" pos:end="159:46">(<expr pos:start="159:9" pos:end="159:45"><name pos:start="159:9" pos:end="159:21"><name pos:start="159:9" pos:end="159:12">sctx</name><operator pos:start="159:13" pos:end="159:14">-&gt;</operator><name pos:start="159:15" pos:end="159:21">pix_fmt</name></name> <operator pos:start="159:23" pos:end="159:24">==</operator> <name pos:start="159:26" pos:end="159:45">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition> <block pos:start="159:48" pos:end="192:0">{<block_content pos:start="161:9" pos:end="187:51">

        <decl_stmt pos:start="161:9" pos:end="161:63"><decl pos:start="161:9" pos:end="161:62"><type pos:start="161:9" pos:end="161:30"><name pos:start="161:9" pos:end="161:28">AVDXVA2FramesContext</name> <modifier pos:start="161:30" pos:end="161:30">*</modifier></type><name pos:start="161:31" pos:end="161:42">frames_hwctx</name> <init pos:start="161:44" pos:end="161:62">= <expr pos:start="161:46" pos:end="161:62"><name pos:start="161:46" pos:end="161:62"><name pos:start="161:46" pos:end="161:55">frames_ctx</name><operator pos:start="161:56" pos:end="161:57">-&gt;</operator><name pos:start="161:58" pos:end="161:62">hwctx</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="163:9" pos:end="163:57"><decl pos:start="163:9" pos:end="163:56"><type pos:start="163:9" pos:end="163:29"><name pos:start="163:9" pos:end="163:27"><name pos:start="163:9" pos:end="163:14">struct</name> <name pos:start="163:16" pos:end="163:27">dxva_context</name></name> <modifier pos:start="163:29" pos:end="163:29">*</modifier></type><name pos:start="163:30" pos:end="163:37">dxva_ctx</name> <init pos:start="163:39" pos:end="163:56">= <expr pos:start="163:41" pos:end="163:56"><operator pos:start="163:41" pos:end="163:41">&amp;</operator><name pos:start="163:42" pos:end="163:56"><name pos:start="163:42" pos:end="163:45">sctx</name><operator pos:start="163:46" pos:end="163:47">-&gt;</operator><name pos:start="163:48" pos:end="163:50">ctx</name><operator pos:start="163:51" pos:end="163:51">.</operator><name pos:start="163:52" pos:end="163:56">dxva2</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="167:9" pos:end="167:29"><expr pos:start="167:9" pos:end="167:28"><call pos:start="167:9" pos:end="167:28"><name pos:start="167:9" pos:end="167:21">ff_dxva2_lock</name><argument_list pos:start="167:22" pos:end="167:28">(<argument pos:start="167:23" pos:end="167:27"><expr pos:start="167:23" pos:end="167:27"><name pos:start="167:23" pos:end="167:27">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:42"><expr pos:start="169:9" pos:end="169:41"><name pos:start="169:9" pos:end="169:11">ret</name> <operator pos:start="169:13" pos:end="169:13">=</operator> <call pos:start="169:15" pos:end="169:41"><name pos:start="169:15" pos:end="169:34">dxva2_create_decoder</name><argument_list pos:start="169:35" pos:end="169:41">(<argument pos:start="169:36" pos:end="169:40"><expr pos:start="169:36" pos:end="169:40"><name pos:start="169:36" pos:end="169:40">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:31"><expr pos:start="171:9" pos:end="171:30"><call pos:start="171:9" pos:end="171:30"><name pos:start="171:9" pos:end="171:23">ff_dxva2_unlock</name><argument_list pos:start="171:24" pos:end="171:30">(<argument pos:start="171:25" pos:end="171:29"><expr pos:start="171:25" pos:end="171:29"><name pos:start="171:25" pos:end="171:29">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="175:22"><if pos:start="173:9" pos:end="175:22">if <condition pos:start="173:12" pos:end="173:20">(<expr pos:start="173:13" pos:end="173:19"><name pos:start="173:13" pos:end="173:15">ret</name> <operator pos:start="173:17" pos:end="173:17">&lt;</operator> <literal type="number" pos:start="173:19" pos:end="173:19">0</literal></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:22"><block_content pos:start="175:13" pos:end="175:22">

            <goto pos:start="175:13" pos:end="175:22">goto <name pos:start="175:18" pos:end="175:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="179:9" pos:end="179:54"><expr pos:start="179:9" pos:end="179:53"><name pos:start="179:9" pos:end="179:25"><name pos:start="179:9" pos:end="179:16">dxva_ctx</name><operator pos:start="179:17" pos:end="179:18">-&gt;</operator><name pos:start="179:19" pos:end="179:25">decoder</name></name>       <operator pos:start="179:33" pos:end="179:33">=</operator> <name pos:start="179:35" pos:end="179:53"><name pos:start="179:35" pos:end="179:38">sctx</name><operator pos:start="179:39" pos:end="179:40">-&gt;</operator><name pos:start="179:41" pos:end="179:53">dxva2_decoder</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:54"><expr pos:start="181:9" pos:end="181:53"><name pos:start="181:9" pos:end="181:21"><name pos:start="181:9" pos:end="181:16">dxva_ctx</name><operator pos:start="181:17" pos:end="181:18">-&gt;</operator><name pos:start="181:19" pos:end="181:21">cfg</name></name>           <operator pos:start="181:33" pos:end="181:33">=</operator> <operator pos:start="181:35" pos:end="181:35">&amp;</operator><name pos:start="181:36" pos:end="181:53"><name pos:start="181:36" pos:end="181:39">sctx</name><operator pos:start="181:40" pos:end="181:41">-&gt;</operator><name pos:start="181:42" pos:end="181:53">dxva2_config</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:57"><expr pos:start="183:9" pos:end="183:56"><name pos:start="183:9" pos:end="183:25"><name pos:start="183:9" pos:end="183:16">dxva_ctx</name><operator pos:start="183:17" pos:end="183:18">-&gt;</operator><name pos:start="183:19" pos:end="183:25">surface</name></name>       <operator pos:start="183:33" pos:end="183:33">=</operator> <name pos:start="183:35" pos:end="183:56"><name pos:start="183:35" pos:end="183:46">frames_hwctx</name><operator pos:start="183:47" pos:end="183:48">-&gt;</operator><name pos:start="183:49" pos:end="183:56">surfaces</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:60"><expr pos:start="185:9" pos:end="185:59"><name pos:start="185:9" pos:end="185:31"><name pos:start="185:9" pos:end="185:16">dxva_ctx</name><operator pos:start="185:17" pos:end="185:18">-&gt;</operator><name pos:start="185:19" pos:end="185:31">surface_count</name></name> <operator pos:start="185:33" pos:end="185:33">=</operator> <name pos:start="185:35" pos:end="185:59"><name pos:start="185:35" pos:end="185:46">frames_hwctx</name><operator pos:start="185:47" pos:end="185:48">-&gt;</operator><name pos:start="185:49" pos:end="185:59">nb_surfaces</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:51"><expr pos:start="187:9" pos:end="187:50"><name pos:start="187:9" pos:end="187:28"><name pos:start="187:9" pos:end="187:16">dxva_ctx</name><operator pos:start="187:17" pos:end="187:18">-&gt;</operator><name pos:start="187:19" pos:end="187:28">workaround</name></name>    <operator pos:start="187:33" pos:end="187:33">=</operator> <name pos:start="187:35" pos:end="187:50"><name pos:start="187:35" pos:end="187:38">sctx</name><operator pos:start="187:39" pos:end="187:40">-&gt;</operator><name pos:start="187:41" pos:end="187:50">workaround</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="191:1" pos:end="191:6">#<cpp:directive pos:start="191:2" pos:end="191:6">endif</cpp:directive></cpp:endif>



    <return pos:start="195:5" pos:end="195:13">return <expr pos:start="195:12" pos:end="195:12"><literal type="number" pos:start="195:12" pos:end="195:12">0</literal></expr>;</return>



<label pos:start="199:1" pos:end="199:5"><name pos:start="199:1" pos:end="199:4">fail</name>:</label>

    <expr_stmt pos:start="201:5" pos:end="201:34"><expr pos:start="201:5" pos:end="201:33"><call pos:start="201:5" pos:end="201:33"><name pos:start="201:5" pos:end="201:26">ff_dxva2_decode_uninit</name><argument_list pos:start="201:27" pos:end="201:33">(<argument pos:start="201:28" pos:end="201:32"><expr pos:start="201:28" pos:end="201:32"><name pos:start="201:28" pos:end="201:32">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="203:5" pos:end="203:15">return <expr pos:start="203:12" pos:end="203:14"><name pos:start="203:12" pos:end="203:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
