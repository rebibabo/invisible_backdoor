<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8616.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:43"><name pos:start="1:1" pos:end="1:20">petalogix_ml605_init</name><argument_list pos:start="1:21" pos:end="1:43">(<argument pos:start="1:22" pos:end="1:42">MachineState *machine</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="255:1">{<block_content pos:start="5:5" pos:end="251:46">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:14">ram_addr_t</name></type> <name pos:start="5:16" pos:end="5:23">ram_size</name> <init pos:start="5:25" pos:end="5:43">= <expr pos:start="5:27" pos:end="5:43"><name pos:start="5:27" pos:end="5:43"><name pos:start="5:27" pos:end="5:33">machine</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:43">ram_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:57"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">MemoryRegion</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:35">address_space_mem</name> <init pos:start="7:37" pos:end="7:57">= <expr pos:start="7:39" pos:end="7:57"><call pos:start="7:39" pos:end="7:57"><name pos:start="7:39" pos:end="7:55">get_system_memory</name><argument_list pos:start="7:56" pos:end="7:57">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DeviceState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">dev</name></decl>, <decl pos:start="9:23" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:17"><modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:26">dma</name></decl>, <decl pos:start="9:29" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:17"><modifier pos:start="9:29" pos:end="9:29">*</modifier></type><name pos:start="9:30" pos:end="9:33">eth0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:10">Object</name> <modifier pos:start="11:12" pos:end="11:12">*</modifier></type><name pos:start="11:13" pos:end="11:14">ds</name></decl>, <decl pos:start="11:17" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:12"><modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">cs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">MicroBlazeCPU</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:22">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">SysBusDevice</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:24">busdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">DriveInfo</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:20">dinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:57"><decl pos:start="21:5" pos:end="21:56"><type pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:16">MemoryRegion</name> <modifier pos:start="21:18" pos:end="21:18">*</modifier></type><name pos:start="21:19" pos:end="21:31">phys_lmb_bram</name> <init pos:start="21:33" pos:end="21:56">= <expr pos:start="21:35" pos:end="21:56"><call pos:start="21:35" pos:end="21:56"><name pos:start="21:35" pos:end="21:39">g_new</name><argument_list pos:start="21:40" pos:end="21:56">(<argument pos:start="21:41" pos:end="21:52"><expr pos:start="21:41" pos:end="21:52"><name pos:start="21:41" pos:end="21:52">MemoryRegion</name></expr></argument>, <argument pos:start="21:55" pos:end="21:55"><expr pos:start="21:55" pos:end="21:55"><literal type="number" pos:start="21:55" pos:end="21:55">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:52"><decl pos:start="23:5" pos:end="23:51"><type pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:16">MemoryRegion</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:26">phys_ram</name> <init pos:start="23:28" pos:end="23:51">= <expr pos:start="23:30" pos:end="23:51"><call pos:start="23:30" pos:end="23:51"><name pos:start="23:30" pos:end="23:34">g_new</name><argument_list pos:start="23:35" pos:end="23:51">(<argument pos:start="23:36" pos:end="23:47"><expr pos:start="23:36" pos:end="23:47"><name pos:start="23:36" pos:end="23:47">MemoryRegion</name></expr></argument>, <argument pos:start="23:50" pos:end="23:50"><expr pos:start="23:50" pos:end="23:50"><literal type="number" pos:start="23:50" pos:end="23:50">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">qemu_irq</name></type> <name pos:start="25:14" pos:end="25:20"><name pos:start="25:14" pos:end="25:16">irq</name><index pos:start="25:17" pos:end="25:20">[<expr pos:start="25:18" pos:end="25:19"><literal type="number" pos:start="25:18" pos:end="25:19">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:19">/* init CPUs */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:58"><expr pos:start="31:5" pos:end="31:57"><name pos:start="31:5" pos:end="31:7">cpu</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:57"><name pos:start="31:11" pos:end="31:24">MICROBLAZE_CPU</name><argument_list pos:start="31:25" pos:end="31:57">(<argument pos:start="31:26" pos:end="31:56"><expr pos:start="31:26" pos:end="31:56"><call pos:start="31:26" pos:end="31:56"><name pos:start="31:26" pos:end="31:35">object_new</name><argument_list pos:start="31:36" pos:end="31:56">(<argument pos:start="31:37" pos:end="31:55"><expr pos:start="31:37" pos:end="31:55"><name pos:start="31:37" pos:end="31:55">TYPE_MICROBLAZE_CPU</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:74"><expr pos:start="33:5" pos:end="33:73"><call pos:start="33:5" pos:end="33:73"><name pos:start="33:5" pos:end="33:28">object_property_set_bool</name><argument_list pos:start="33:29" pos:end="33:73">(<argument pos:start="33:30" pos:end="33:40"><expr pos:start="33:30" pos:end="33:40"><call pos:start="33:30" pos:end="33:40"><name pos:start="33:30" pos:end="33:35">OBJECT</name><argument_list pos:start="33:36" pos:end="33:40">(<argument pos:start="33:37" pos:end="33:39"><expr pos:start="33:37" pos:end="33:39"><name pos:start="33:37" pos:end="33:39">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:43" pos:end="33:46"><expr pos:start="33:43" pos:end="33:46"><name pos:start="33:43" pos:end="33:46">true</name></expr></argument>, <argument pos:start="33:49" pos:end="33:58"><expr pos:start="33:49" pos:end="33:58"><literal type="string" pos:start="33:49" pos:end="33:58">"realized"</literal></expr></argument>, <argument pos:start="33:61" pos:end="33:72"><expr pos:start="33:61" pos:end="33:72"><operator pos:start="33:61" pos:end="33:61">&amp;</operator><name pos:start="33:62" pos:end="33:72">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:48">/* Attach emulated BRAM through the LMB.  */</comment>

    <expr_stmt pos:start="39:5" pos:end="41:56"><expr pos:start="39:5" pos:end="41:55"><call pos:start="39:5" pos:end="41:55"><name pos:start="39:5" pos:end="39:26">memory_region_init_ram</name><argument_list pos:start="39:27" pos:end="41:55">(<argument pos:start="39:28" pos:end="39:40"><expr pos:start="39:28" pos:end="39:40"><name pos:start="39:28" pos:end="39:40">phys_lmb_bram</name></expr></argument>, <argument pos:start="39:43" pos:end="39:46"><expr pos:start="39:43" pos:end="39:46"><name pos:start="39:43" pos:end="39:46">NULL</name></expr></argument>, <argument pos:start="39:49" pos:end="39:74"><expr pos:start="39:49" pos:end="39:74"><literal type="string" pos:start="39:49" pos:end="39:74">"petalogix_ml605.lmb_bram"</literal></expr></argument>,

                           <argument pos:start="41:28" pos:end="41:40"><expr pos:start="41:28" pos:end="41:40"><name pos:start="41:28" pos:end="41:40">LMB_BRAM_SIZE</name></expr></argument>, <argument pos:start="41:43" pos:end="41:54"><expr pos:start="41:43" pos:end="41:54"><operator pos:start="41:43" pos:end="41:43">&amp;</operator><name pos:start="41:44" pos:end="41:54">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:47"><expr pos:start="43:5" pos:end="43:46"><call pos:start="43:5" pos:end="43:46"><name pos:start="43:5" pos:end="43:31">vmstate_register_ram_global</name><argument_list pos:start="43:32" pos:end="43:46">(<argument pos:start="43:33" pos:end="43:45"><expr pos:start="43:33" pos:end="43:45"><name pos:start="43:33" pos:end="43:45">phys_lmb_bram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:78"><expr pos:start="45:5" pos:end="45:77"><call pos:start="45:5" pos:end="45:77"><name pos:start="45:5" pos:end="45:31">memory_region_add_subregion</name><argument_list pos:start="45:32" pos:end="45:77">(<argument pos:start="45:33" pos:end="45:49"><expr pos:start="45:33" pos:end="45:49"><name pos:start="45:33" pos:end="45:49">address_space_mem</name></expr></argument>, <argument pos:start="45:52" pos:end="45:61"><expr pos:start="45:52" pos:end="45:61"><literal type="number" pos:start="45:52" pos:end="45:61">0x00000000</literal></expr></argument>, <argument pos:start="45:64" pos:end="45:76"><expr pos:start="45:64" pos:end="45:76"><name pos:start="45:64" pos:end="45:76">phys_lmb_bram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="51:41"><expr pos:start="49:5" pos:end="51:40"><call pos:start="49:5" pos:end="51:40"><name pos:start="49:5" pos:end="49:26">memory_region_init_ram</name><argument_list pos:start="49:27" pos:end="51:40">(<argument pos:start="49:28" pos:end="49:35"><expr pos:start="49:28" pos:end="49:35"><name pos:start="49:28" pos:end="49:35">phys_ram</name></expr></argument>, <argument pos:start="49:38" pos:end="49:41"><expr pos:start="49:38" pos:end="49:41"><name pos:start="49:38" pos:end="49:41">NULL</name></expr></argument>, <argument pos:start="49:44" pos:end="49:64"><expr pos:start="49:44" pos:end="49:64"><literal type="string" pos:start="49:44" pos:end="49:64">"petalogix_ml605.ram"</literal></expr></argument>, <argument pos:start="49:67" pos:end="49:74"><expr pos:start="49:67" pos:end="49:74"><name pos:start="49:67" pos:end="49:74">ram_size</name></expr></argument>,

                           <argument pos:start="51:28" pos:end="51:39"><expr pos:start="51:28" pos:end="51:39"><operator pos:start="51:28" pos:end="51:28">&amp;</operator><name pos:start="51:29" pos:end="51:39">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:42"><expr pos:start="53:5" pos:end="53:41"><call pos:start="53:5" pos:end="53:41"><name pos:start="53:5" pos:end="53:31">vmstate_register_ram_global</name><argument_list pos:start="53:32" pos:end="53:41">(<argument pos:start="53:33" pos:end="53:40"><expr pos:start="53:33" pos:end="53:40"><name pos:start="53:33" pos:end="53:40">phys_ram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:78"><expr pos:start="55:5" pos:end="55:77"><call pos:start="55:5" pos:end="55:77"><name pos:start="55:5" pos:end="55:31">memory_region_add_subregion</name><argument_list pos:start="55:32" pos:end="55:77">(<argument pos:start="55:33" pos:end="55:49"><expr pos:start="55:33" pos:end="55:49"><name pos:start="55:33" pos:end="55:49">address_space_mem</name></expr></argument>, <argument pos:start="55:52" pos:end="55:66"><expr pos:start="55:52" pos:end="55:66"><name pos:start="55:52" pos:end="55:66">MEMORY_BASEADDR</name></expr></argument>, <argument pos:start="55:69" pos:end="55:76"><expr pos:start="55:69" pos:end="55:76"><name pos:start="55:69" pos:end="55:76">phys_ram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:39"><expr pos:start="59:5" pos:end="59:38"><name pos:start="59:5" pos:end="59:9">dinfo</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <call pos:start="59:13" pos:end="59:38"><name pos:start="59:13" pos:end="59:21">drive_get</name><argument_list pos:start="59:22" pos:end="59:38">(<argument pos:start="59:23" pos:end="59:31"><expr pos:start="59:23" pos:end="59:31"><name pos:start="59:23" pos:end="59:31">IF_PFLASH</name></expr></argument>, <argument pos:start="59:34" pos:end="59:34"><expr pos:start="59:34" pos:end="59:34"><literal type="number" pos:start="59:34" pos:end="59:34">0</literal></expr></argument>, <argument pos:start="59:37" pos:end="59:37"><expr pos:start="59:37" pos:end="59:37"><literal type="number" pos:start="59:37" pos:end="59:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="61:5" pos:end="63:46">/* 5th parameter 2 means bank-width

     * 10th paremeter 0 means little-endian */</comment>

    <expr_stmt pos:start="65:5" pos:end="73:57"><expr pos:start="65:5" pos:end="73:56"><call pos:start="65:5" pos:end="73:56"><name pos:start="65:5" pos:end="65:25">pflash_cfi01_register</name><argument_list pos:start="65:26" pos:end="73:56">(<argument pos:start="65:27" pos:end="65:40"><expr pos:start="65:27" pos:end="65:40"><name pos:start="65:27" pos:end="65:40">FLASH_BASEADDR</name></expr></argument>,

                          <argument pos:start="67:27" pos:end="67:30"><expr pos:start="67:27" pos:end="67:30"><name pos:start="67:27" pos:end="67:30">NULL</name></expr></argument>, <argument pos:start="67:33" pos:end="67:55"><expr pos:start="67:33" pos:end="67:55"><literal type="string" pos:start="67:33" pos:end="67:55">"petalogix_ml605.flash"</literal></expr></argument>, <argument pos:start="67:58" pos:end="67:67"><expr pos:start="67:58" pos:end="67:67"><name pos:start="67:58" pos:end="67:67">FLASH_SIZE</name></expr></argument>,

                          <argument pos:start="69:27" pos:end="69:75"><expr pos:start="69:27" pos:end="69:75"><ternary pos:start="69:27" pos:end="69:75"><condition pos:start="69:27" pos:end="69:33"><expr pos:start="69:27" pos:end="69:31"><name pos:start="69:27" pos:end="69:31">dinfo</name></expr> ?</condition><then pos:start="69:35" pos:end="69:68"> <expr pos:start="69:35" pos:end="69:68"><call pos:start="69:35" pos:end="69:68"><name pos:start="69:35" pos:end="69:40">blk_bs</name><argument_list pos:start="69:41" pos:end="69:68">(<argument pos:start="69:42" pos:end="69:67"><expr pos:start="69:42" pos:end="69:67"><call pos:start="69:42" pos:end="69:67"><name pos:start="69:42" pos:end="69:60">blk_by_legacy_dinfo</name><argument_list pos:start="69:61" pos:end="69:67">(<argument pos:start="69:62" pos:end="69:66"><expr pos:start="69:62" pos:end="69:66"><name pos:start="69:62" pos:end="69:66">dinfo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> </then><else pos:start="69:70" pos:end="69:75">: <expr pos:start="69:72" pos:end="69:75"><name pos:start="69:72" pos:end="69:75">NULL</name></expr></else></ternary></expr></argument>,

                          <argument pos:start="71:27" pos:end="71:37"><expr pos:start="71:27" pos:end="71:37"><operator pos:start="71:27" pos:end="71:27">(</operator><literal type="number" pos:start="71:28" pos:end="71:29">64</literal> <operator pos:start="71:31" pos:end="71:31">*</operator> <literal type="number" pos:start="71:33" pos:end="71:36">1024</literal><operator pos:start="71:37" pos:end="71:37">)</operator></expr></argument>, <argument pos:start="71:40" pos:end="71:55"><expr pos:start="71:40" pos:end="71:55"><name pos:start="71:40" pos:end="71:49">FLASH_SIZE</name> <operator pos:start="71:51" pos:end="71:52">&gt;&gt;</operator> <literal type="number" pos:start="71:54" pos:end="71:55">16</literal></expr></argument>,

                          <argument pos:start="73:27" pos:end="73:27"><expr pos:start="73:27" pos:end="73:27"><literal type="number" pos:start="73:27" pos:end="73:27">2</literal></expr></argument>, <argument pos:start="73:30" pos:end="73:33"><expr pos:start="73:30" pos:end="73:33"><literal type="number" pos:start="73:30" pos:end="73:33">0x89</literal></expr></argument>, <argument pos:start="73:36" pos:end="73:39"><expr pos:start="73:36" pos:end="73:39"><literal type="number" pos:start="73:36" pos:end="73:39">0x18</literal></expr></argument>, <argument pos:start="73:42" pos:end="73:47"><expr pos:start="73:42" pos:end="73:47"><literal type="number" pos:start="73:42" pos:end="73:47">0x0000</literal></expr></argument>, <argument pos:start="73:50" pos:end="73:52"><expr pos:start="73:50" pos:end="73:52"><literal type="number" pos:start="73:50" pos:end="73:52">0x0</literal></expr></argument>, <argument pos:start="73:55" pos:end="73:55"><expr pos:start="73:55" pos:end="73:55"><literal type="number" pos:start="73:55" pos:end="73:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="79:5" pos:end="79:45"><expr pos:start="79:5" pos:end="79:44"><name pos:start="79:5" pos:end="79:7">dev</name> <operator pos:start="79:9" pos:end="79:9">=</operator> <call pos:start="79:11" pos:end="79:44"><name pos:start="79:11" pos:end="79:21">qdev_create</name><argument_list pos:start="79:22" pos:end="79:44">(<argument pos:start="79:23" pos:end="79:26"><expr pos:start="79:23" pos:end="79:26"><name pos:start="79:23" pos:end="79:26">NULL</name></expr></argument>, <argument pos:start="79:29" pos:end="79:43"><expr pos:start="79:29" pos:end="79:43"><literal type="string" pos:start="79:29" pos:end="79:43">"xlnx.xps-intc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:62"><expr pos:start="81:5" pos:end="81:61"><call pos:start="81:5" pos:end="81:61"><name pos:start="81:5" pos:end="81:24">qdev_prop_set_uint32</name><argument_list pos:start="81:25" pos:end="81:61">(<argument pos:start="81:26" pos:end="81:28"><expr pos:start="81:26" pos:end="81:28"><name pos:start="81:26" pos:end="81:28">dev</name></expr></argument>, <argument pos:start="81:31" pos:end="81:44"><expr pos:start="81:31" pos:end="81:44"><literal type="string" pos:start="81:31" pos:end="81:44">"kind-of-intr"</literal></expr></argument>, <argument pos:start="81:47" pos:end="81:60"><expr pos:start="81:47" pos:end="81:60"><literal type="number" pos:start="81:47" pos:end="81:47">1</literal> <operator pos:start="81:49" pos:end="81:50">&lt;&lt;</operator> <name pos:start="81:52" pos:end="81:60">TIMER_IRQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:26"><expr pos:start="83:5" pos:end="83:25"><call pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:20">qdev_init_nofail</name><argument_list pos:start="83:21" pos:end="83:25">(<argument pos:start="83:22" pos:end="83:24"><expr pos:start="83:22" pos:end="83:24"><name pos:start="83:22" pos:end="83:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:59"><expr pos:start="85:5" pos:end="85:58"><call pos:start="85:5" pos:end="85:58"><name pos:start="85:5" pos:end="85:19">sysbus_mmio_map</name><argument_list pos:start="85:20" pos:end="85:58">(<argument pos:start="85:21" pos:end="85:39"><expr pos:start="85:21" pos:end="85:39"><call pos:start="85:21" pos:end="85:39"><name pos:start="85:21" pos:end="85:34">SYS_BUS_DEVICE</name><argument_list pos:start="85:35" pos:end="85:39">(<argument pos:start="85:36" pos:end="85:38"><expr pos:start="85:36" pos:end="85:38"><name pos:start="85:36" pos:end="85:38">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:42" pos:end="85:42"><expr pos:start="85:42" pos:end="85:42"><literal type="number" pos:start="85:42" pos:end="85:42">0</literal></expr></argument>, <argument pos:start="85:45" pos:end="85:57"><expr pos:start="85:45" pos:end="85:57"><name pos:start="85:45" pos:end="85:57">INTC_BASEADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="89:66"><expr pos:start="87:5" pos:end="89:65"><call pos:start="87:5" pos:end="89:65"><name pos:start="87:5" pos:end="87:22">sysbus_connect_irq</name><argument_list pos:start="87:23" pos:end="89:65">(<argument pos:start="87:24" pos:end="87:42"><expr pos:start="87:24" pos:end="87:42"><call pos:start="87:24" pos:end="87:42"><name pos:start="87:24" pos:end="87:37">SYS_BUS_DEVICE</name><argument_list pos:start="87:38" pos:end="87:42">(<argument pos:start="87:39" pos:end="87:41"><expr pos:start="87:39" pos:end="87:41"><name pos:start="87:39" pos:end="87:41">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="87:45" pos:end="87:45"><expr pos:start="87:45" pos:end="87:45"><literal type="number" pos:start="87:45" pos:end="87:45">0</literal></expr></argument>,

                       <argument pos:start="89:24" pos:end="89:64"><expr pos:start="89:24" pos:end="89:64"><call pos:start="89:24" pos:end="89:64"><name pos:start="89:24" pos:end="89:39">qdev_get_gpio_in</name><argument_list pos:start="89:40" pos:end="89:64">(<argument pos:start="89:41" pos:end="89:51"><expr pos:start="89:41" pos:end="89:51"><call pos:start="89:41" pos:end="89:51"><name pos:start="89:41" pos:end="89:46">DEVICE</name><argument_list pos:start="89:47" pos:end="89:51">(<argument pos:start="89:48" pos:end="89:50"><expr pos:start="89:48" pos:end="89:50"><name pos:start="89:48" pos:end="89:50">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="89:54" pos:end="89:63"><expr pos:start="89:54" pos:end="89:63"><name pos:start="89:54" pos:end="89:63">MB_CPU_IRQ</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="91:5" pos:end="95:5">for <control pos:start="91:9" pos:end="91:28">(<init pos:start="91:10" pos:end="91:15"><expr pos:start="91:10" pos:end="91:14"><name pos:start="91:10" pos:end="91:10">i</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <literal type="number" pos:start="91:14" pos:end="91:14">0</literal></expr>;</init> <condition pos:start="91:17" pos:end="91:23"><expr pos:start="91:17" pos:end="91:22"><name pos:start="91:17" pos:end="91:17">i</name> <operator pos:start="91:19" pos:end="91:19">&lt;</operator> <literal type="number" pos:start="91:21" pos:end="91:22">32</literal></expr>;</condition> <incr pos:start="91:25" pos:end="91:27"><expr pos:start="91:25" pos:end="91:27"><name pos:start="91:25" pos:end="91:25">i</name><operator pos:start="91:26" pos:end="91:27">++</operator></expr></incr>)</control> <block pos:start="91:30" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:42">

        <expr_stmt pos:start="93:9" pos:end="93:42"><expr pos:start="93:9" pos:end="93:41"><name pos:start="93:9" pos:end="93:14"><name pos:start="93:9" pos:end="93:11">irq</name><index pos:start="93:12" pos:end="93:14">[<expr pos:start="93:13" pos:end="93:13"><name pos:start="93:13" pos:end="93:13">i</name></expr>]</index></name> <operator pos:start="93:16" pos:end="93:16">=</operator> <call pos:start="93:18" pos:end="93:41"><name pos:start="93:18" pos:end="93:33">qdev_get_gpio_in</name><argument_list pos:start="93:34" pos:end="93:41">(<argument pos:start="93:35" pos:end="93:37"><expr pos:start="93:35" pos:end="93:37"><name pos:start="93:35" pos:end="93:37">dev</name></expr></argument>, <argument pos:start="93:40" pos:end="93:40"><expr pos:start="93:40" pos:end="93:40"><name pos:start="93:40" pos:end="93:40">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="99:5" pos:end="103:41"><expr pos:start="99:5" pos:end="103:40"><call pos:start="99:5" pos:end="103:40"><name pos:start="99:5" pos:end="99:18">serial_mm_init</name><argument_list pos:start="99:19" pos:end="103:40">(<argument pos:start="99:20" pos:end="99:36"><expr pos:start="99:20" pos:end="99:36"><name pos:start="99:20" pos:end="99:36">address_space_mem</name></expr></argument>, <argument pos:start="99:39" pos:end="99:65"><expr pos:start="99:39" pos:end="99:65"><name pos:start="99:39" pos:end="99:56">UART16550_BASEADDR</name> <operator pos:start="99:58" pos:end="99:58">+</operator> <literal type="number" pos:start="99:60" pos:end="99:65">0x1000</literal></expr></argument>, <argument pos:start="99:68" pos:end="99:68"><expr pos:start="99:68" pos:end="99:68"><literal type="number" pos:start="99:68" pos:end="99:68">2</literal></expr></argument>,

                   <argument pos:start="101:20" pos:end="101:37"><expr pos:start="101:20" pos:end="101:37"><name pos:start="101:20" pos:end="101:37"><name pos:start="101:20" pos:end="101:22">irq</name><index pos:start="101:23" pos:end="101:37">[<expr pos:start="101:24" pos:end="101:36"><name pos:start="101:24" pos:end="101:36">UART16550_IRQ</name></expr>]</index></name></expr></argument>, <argument pos:start="101:40" pos:end="101:45"><expr pos:start="101:40" pos:end="101:45"><literal type="number" pos:start="101:40" pos:end="101:45">115200</literal></expr></argument>, <argument pos:start="101:48" pos:end="101:60"><expr pos:start="101:48" pos:end="101:60"><name pos:start="101:48" pos:end="101:60"><name pos:start="101:48" pos:end="101:57">serial_hds</name><index pos:start="101:58" pos:end="101:60">[<expr pos:start="101:59" pos:end="101:59"><literal type="number" pos:start="101:59" pos:end="101:59">0</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="103:20" pos:end="103:39"><expr pos:start="103:20" pos:end="103:39"><name pos:start="103:20" pos:end="103:39">DEVICE_LITTLE_ENDIAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="107:5" pos:end="107:39">/* 2 timers at irq 2 @ 100 Mhz.  */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:46"><expr pos:start="109:5" pos:end="109:45"><name pos:start="109:5" pos:end="109:7">dev</name> <operator pos:start="109:9" pos:end="109:9">=</operator> <call pos:start="109:11" pos:end="109:45"><name pos:start="109:11" pos:end="109:21">qdev_create</name><argument_list pos:start="109:22" pos:end="109:45">(<argument pos:start="109:23" pos:end="109:26"><expr pos:start="109:23" pos:end="109:26"><name pos:start="109:23" pos:end="109:26">NULL</name></expr></argument>, <argument pos:start="109:29" pos:end="109:44"><expr pos:start="109:29" pos:end="109:44"><literal type="string" pos:start="109:29" pos:end="109:44">"xlnx.xps-timer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:51"><expr pos:start="111:5" pos:end="111:50"><call pos:start="111:5" pos:end="111:50"><name pos:start="111:5" pos:end="111:24">qdev_prop_set_uint32</name><argument_list pos:start="111:25" pos:end="111:50">(<argument pos:start="111:26" pos:end="111:28"><expr pos:start="111:26" pos:end="111:28"><name pos:start="111:26" pos:end="111:28">dev</name></expr></argument>, <argument pos:start="111:31" pos:end="111:46"><expr pos:start="111:31" pos:end="111:46"><literal type="string" pos:start="111:31" pos:end="111:46">"one-timer-only"</literal></expr></argument>, <argument pos:start="111:49" pos:end="111:49"><expr pos:start="111:49" pos:end="111:49"><literal type="number" pos:start="111:49" pos:end="111:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:64"><expr pos:start="113:5" pos:end="113:63"><call pos:start="113:5" pos:end="113:63"><name pos:start="113:5" pos:end="113:24">qdev_prop_set_uint32</name><argument_list pos:start="113:25" pos:end="113:63">(<argument pos:start="113:26" pos:end="113:28"><expr pos:start="113:26" pos:end="113:28"><name pos:start="113:26" pos:end="113:28">dev</name></expr></argument>, <argument pos:start="113:31" pos:end="113:47"><expr pos:start="113:31" pos:end="113:47"><literal type="string" pos:start="113:31" pos:end="113:47">"clock-frequency"</literal></expr></argument>, <argument pos:start="113:50" pos:end="113:62"><expr pos:start="113:50" pos:end="113:62"><literal type="number" pos:start="113:50" pos:end="113:52">100</literal> <operator pos:start="113:54" pos:end="113:54">*</operator> <literal type="number" pos:start="113:56" pos:end="113:62">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:26"><expr pos:start="115:5" pos:end="115:25"><call pos:start="115:5" pos:end="115:25"><name pos:start="115:5" pos:end="115:20">qdev_init_nofail</name><argument_list pos:start="115:21" pos:end="115:25">(<argument pos:start="115:22" pos:end="115:24"><expr pos:start="115:22" pos:end="115:24"><name pos:start="115:22" pos:end="115:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:60"><expr pos:start="117:5" pos:end="117:59"><call pos:start="117:5" pos:end="117:59"><name pos:start="117:5" pos:end="117:19">sysbus_mmio_map</name><argument_list pos:start="117:20" pos:end="117:59">(<argument pos:start="117:21" pos:end="117:39"><expr pos:start="117:21" pos:end="117:39"><call pos:start="117:21" pos:end="117:39"><name pos:start="117:21" pos:end="117:34">SYS_BUS_DEVICE</name><argument_list pos:start="117:35" pos:end="117:39">(<argument pos:start="117:36" pos:end="117:38"><expr pos:start="117:36" pos:end="117:38"><name pos:start="117:36" pos:end="117:38">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="117:42" pos:end="117:42"><expr pos:start="117:42" pos:end="117:42"><literal type="number" pos:start="117:42" pos:end="117:42">0</literal></expr></argument>, <argument pos:start="117:45" pos:end="117:58"><expr pos:start="117:45" pos:end="117:58"><name pos:start="117:45" pos:end="117:58">TIMER_BASEADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:63"><expr pos:start="119:5" pos:end="119:62"><call pos:start="119:5" pos:end="119:62"><name pos:start="119:5" pos:end="119:22">sysbus_connect_irq</name><argument_list pos:start="119:23" pos:end="119:62">(<argument pos:start="119:24" pos:end="119:42"><expr pos:start="119:24" pos:end="119:42"><call pos:start="119:24" pos:end="119:42"><name pos:start="119:24" pos:end="119:37">SYS_BUS_DEVICE</name><argument_list pos:start="119:38" pos:end="119:42">(<argument pos:start="119:39" pos:end="119:41"><expr pos:start="119:39" pos:end="119:41"><name pos:start="119:39" pos:end="119:41">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="119:45" pos:end="119:45"><expr pos:start="119:45" pos:end="119:45"><literal type="number" pos:start="119:45" pos:end="119:45">0</literal></expr></argument>, <argument pos:start="119:48" pos:end="119:61"><expr pos:start="119:48" pos:end="119:61"><name pos:start="119:48" pos:end="119:61"><name pos:start="119:48" pos:end="119:50">irq</name><index pos:start="119:51" pos:end="119:61">[<expr pos:start="119:52" pos:end="119:60"><name pos:start="119:52" pos:end="119:60">TIMER_IRQ</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="123:5" pos:end="123:46">/* axi ethernet and dma initialization. */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:60"><expr pos:start="125:5" pos:end="125:59"><call pos:start="125:5" pos:end="125:59"><name pos:start="125:5" pos:end="125:24">qemu_check_nic_model</name><argument_list pos:start="125:25" pos:end="125:59">(<argument pos:start="125:26" pos:end="125:37"><expr pos:start="125:26" pos:end="125:37"><operator pos:start="125:26" pos:end="125:26">&amp;</operator><name pos:start="125:27" pos:end="125:37"><name pos:start="125:27" pos:end="125:34">nd_table</name><index pos:start="125:35" pos:end="125:37">[<expr pos:start="125:36" pos:end="125:36"><literal type="number" pos:start="125:36" pos:end="125:36">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="125:40" pos:end="125:58"><expr pos:start="125:40" pos:end="125:58"><literal type="string" pos:start="125:40" pos:end="125:58">"xlnx.axi-ethernet"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:50"><expr pos:start="127:5" pos:end="127:49"><name pos:start="127:5" pos:end="127:8">eth0</name> <operator pos:start="127:10" pos:end="127:10">=</operator> <call pos:start="127:12" pos:end="127:49"><name pos:start="127:12" pos:end="127:22">qdev_create</name><argument_list pos:start="127:23" pos:end="127:49">(<argument pos:start="127:24" pos:end="127:27"><expr pos:start="127:24" pos:end="127:27"><name pos:start="127:24" pos:end="127:27">NULL</name></expr></argument>, <argument pos:start="127:30" pos:end="127:48"><expr pos:start="127:30" pos:end="127:48"><literal type="string" pos:start="127:30" pos:end="127:48">"xlnx.axi-ethernet"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:44"><expr pos:start="129:5" pos:end="129:43"><name pos:start="129:5" pos:end="129:7">dma</name> <operator pos:start="129:9" pos:end="129:9">=</operator> <call pos:start="129:11" pos:end="129:43"><name pos:start="129:11" pos:end="129:21">qdev_create</name><argument_list pos:start="129:22" pos:end="129:43">(<argument pos:start="129:23" pos:end="129:26"><expr pos:start="129:23" pos:end="129:26"><name pos:start="129:23" pos:end="129:26">NULL</name></expr></argument>, <argument pos:start="129:29" pos:end="129:42"><expr pos:start="129:29" pos:end="129:42"><literal type="string" pos:start="129:29" pos:end="129:42">"xlnx.axi-dma"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="133:5" pos:end="133:45">/* FIXME: attach to the sysbus instead */</comment>

    <expr_stmt pos:start="135:5" pos:end="137:36"><expr pos:start="135:5" pos:end="137:35"><call pos:start="135:5" pos:end="137:35"><name pos:start="135:5" pos:end="135:29">object_property_add_child</name><argument_list pos:start="135:30" pos:end="137:35">(<argument pos:start="135:31" pos:end="135:48"><expr pos:start="135:31" pos:end="135:48"><call pos:start="135:31" pos:end="135:48"><name pos:start="135:31" pos:end="135:46">qdev_get_machine</name><argument_list pos:start="135:47" pos:end="135:48">()</argument_list></call></expr></argument>, <argument pos:start="135:51" pos:end="135:62"><expr pos:start="135:51" pos:end="135:62"><literal type="string" pos:start="135:51" pos:end="135:62">"xilinx-eth"</literal></expr></argument>, <argument pos:start="135:65" pos:end="135:76"><expr pos:start="135:65" pos:end="135:76"><call pos:start="135:65" pos:end="135:76"><name pos:start="135:65" pos:end="135:70">OBJECT</name><argument_list pos:start="135:71" pos:end="135:76">(<argument pos:start="135:72" pos:end="135:75"><expr pos:start="135:72" pos:end="135:75"><name pos:start="135:72" pos:end="135:75">eth0</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="137:31" pos:end="137:34"><expr pos:start="137:31" pos:end="137:34"><name pos:start="137:31" pos:end="137:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="141:36"><expr pos:start="139:5" pos:end="141:35"><call pos:start="139:5" pos:end="141:35"><name pos:start="139:5" pos:end="139:29">object_property_add_child</name><argument_list pos:start="139:30" pos:end="141:35">(<argument pos:start="139:31" pos:end="139:48"><expr pos:start="139:31" pos:end="139:48"><call pos:start="139:31" pos:end="139:48"><name pos:start="139:31" pos:end="139:46">qdev_get_machine</name><argument_list pos:start="139:47" pos:end="139:48">()</argument_list></call></expr></argument>, <argument pos:start="139:51" pos:end="139:62"><expr pos:start="139:51" pos:end="139:62"><literal type="string" pos:start="139:51" pos:end="139:62">"xilinx-dma"</literal></expr></argument>, <argument pos:start="139:65" pos:end="139:75"><expr pos:start="139:65" pos:end="139:75"><call pos:start="139:65" pos:end="139:75"><name pos:start="139:65" pos:end="139:70">OBJECT</name><argument_list pos:start="139:71" pos:end="139:75">(<argument pos:start="139:72" pos:end="139:74"><expr pos:start="139:72" pos:end="139:74"><name pos:start="139:72" pos:end="139:74">dma</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="141:31" pos:end="141:34"><expr pos:start="141:31" pos:end="141:34"><name pos:start="141:31" pos:end="141:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="147:70"><expr pos:start="145:5" pos:end="147:69"><name pos:start="145:5" pos:end="145:6">ds</name> <operator pos:start="145:8" pos:end="145:8">=</operator> <call pos:start="145:10" pos:end="147:69"><name pos:start="145:10" pos:end="145:33">object_property_get_link</name><argument_list pos:start="145:34" pos:end="147:69">(<argument pos:start="145:35" pos:end="145:45"><expr pos:start="145:35" pos:end="145:45"><call pos:start="145:35" pos:end="145:45"><name pos:start="145:35" pos:end="145:40">OBJECT</name><argument_list pos:start="145:41" pos:end="145:45">(<argument pos:start="145:42" pos:end="145:44"><expr pos:start="145:42" pos:end="145:44"><name pos:start="145:42" pos:end="145:44">dma</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="147:35" pos:end="147:62"><expr pos:start="147:35" pos:end="147:62"><literal type="string" pos:start="147:35" pos:end="147:62">"axistream-connected-target"</literal></expr></argument>, <argument pos:start="147:65" pos:end="147:68"><expr pos:start="147:65" pos:end="147:68"><name pos:start="147:65" pos:end="147:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="151:78"><expr pos:start="149:5" pos:end="151:77"><name pos:start="149:5" pos:end="149:6">cs</name> <operator pos:start="149:8" pos:end="149:8">=</operator> <call pos:start="149:10" pos:end="151:77"><name pos:start="149:10" pos:end="149:33">object_property_get_link</name><argument_list pos:start="149:34" pos:end="151:77">(<argument pos:start="149:35" pos:end="149:45"><expr pos:start="149:35" pos:end="149:45"><call pos:start="149:35" pos:end="149:45"><name pos:start="149:35" pos:end="149:40">OBJECT</name><argument_list pos:start="149:41" pos:end="149:45">(<argument pos:start="149:42" pos:end="149:44"><expr pos:start="149:42" pos:end="149:44"><name pos:start="149:42" pos:end="149:44">dma</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="151:35" pos:end="151:70"><expr pos:start="151:35" pos:end="151:70"><literal type="string" pos:start="151:35" pos:end="151:70">"axistream-control-connected-target"</literal></expr></argument>, <argument pos:start="151:73" pos:end="151:76"><expr pos:start="151:73" pos:end="151:76"><name pos:start="151:73" pos:end="151:76">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:48"><expr pos:start="153:5" pos:end="153:47"><call pos:start="153:5" pos:end="153:47"><name pos:start="153:5" pos:end="153:27">qdev_set_nic_properties</name><argument_list pos:start="153:28" pos:end="153:47">(<argument pos:start="153:29" pos:end="153:32"><expr pos:start="153:29" pos:end="153:32"><name pos:start="153:29" pos:end="153:32">eth0</name></expr></argument>, <argument pos:start="153:35" pos:end="153:46"><expr pos:start="153:35" pos:end="153:46"><operator pos:start="153:35" pos:end="153:35">&amp;</operator><name pos:start="153:36" pos:end="153:46"><name pos:start="153:36" pos:end="153:43">nd_table</name><index pos:start="153:44" pos:end="153:46">[<expr pos:start="153:45" pos:end="153:45"><literal type="number" pos:start="153:45" pos:end="153:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:48"><expr pos:start="155:5" pos:end="155:47"><call pos:start="155:5" pos:end="155:47"><name pos:start="155:5" pos:end="155:24">qdev_prop_set_uint32</name><argument_list pos:start="155:25" pos:end="155:47">(<argument pos:start="155:26" pos:end="155:29"><expr pos:start="155:26" pos:end="155:29"><name pos:start="155:26" pos:end="155:29">eth0</name></expr></argument>, <argument pos:start="155:32" pos:end="155:38"><expr pos:start="155:32" pos:end="155:38"><literal type="string" pos:start="155:32" pos:end="155:38">"rxmem"</literal></expr></argument>, <argument pos:start="155:41" pos:end="155:46"><expr pos:start="155:41" pos:end="155:46"><literal type="number" pos:start="155:41" pos:end="155:46">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:48"><expr pos:start="157:5" pos:end="157:47"><call pos:start="157:5" pos:end="157:47"><name pos:start="157:5" pos:end="157:24">qdev_prop_set_uint32</name><argument_list pos:start="157:25" pos:end="157:47">(<argument pos:start="157:26" pos:end="157:29"><expr pos:start="157:26" pos:end="157:29"><name pos:start="157:26" pos:end="157:29">eth0</name></expr></argument>, <argument pos:start="157:32" pos:end="157:38"><expr pos:start="157:32" pos:end="157:38"><literal type="string" pos:start="157:32" pos:end="157:38">"txmem"</literal></expr></argument>, <argument pos:start="157:41" pos:end="157:46"><expr pos:start="157:41" pos:end="157:46"><literal type="number" pos:start="157:41" pos:end="157:46">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="161:66"><expr pos:start="159:5" pos:end="161:65"><call pos:start="159:5" pos:end="161:65"><name pos:start="159:5" pos:end="159:28">object_property_set_link</name><argument_list pos:start="159:29" pos:end="161:65">(<argument pos:start="159:30" pos:end="159:41"><expr pos:start="159:30" pos:end="159:41"><call pos:start="159:30" pos:end="159:41"><name pos:start="159:30" pos:end="159:35">OBJECT</name><argument_list pos:start="159:36" pos:end="159:41">(<argument pos:start="159:37" pos:end="159:40"><expr pos:start="159:37" pos:end="159:40"><name pos:start="159:37" pos:end="159:40">eth0</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="159:44" pos:end="159:53"><expr pos:start="159:44" pos:end="159:53"><call pos:start="159:44" pos:end="159:53"><name pos:start="159:44" pos:end="159:49">OBJECT</name><argument_list pos:start="159:50" pos:end="159:53">(<argument pos:start="159:51" pos:end="159:52"><expr pos:start="159:51" pos:end="159:52"><name pos:start="159:51" pos:end="159:52">ds</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="161:30" pos:end="161:50"><expr pos:start="161:30" pos:end="161:50"><literal type="string" pos:start="161:30" pos:end="161:50">"axistream-connected"</literal></expr></argument>, <argument pos:start="161:53" pos:end="161:64"><expr pos:start="161:53" pos:end="161:64"><operator pos:start="161:53" pos:end="161:53">&amp;</operator><name pos:start="161:54" pos:end="161:64">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="165:74"><expr pos:start="163:5" pos:end="165:73"><call pos:start="163:5" pos:end="165:73"><name pos:start="163:5" pos:end="163:28">object_property_set_link</name><argument_list pos:start="163:29" pos:end="165:73">(<argument pos:start="163:30" pos:end="163:41"><expr pos:start="163:30" pos:end="163:41"><call pos:start="163:30" pos:end="163:41"><name pos:start="163:30" pos:end="163:35">OBJECT</name><argument_list pos:start="163:36" pos:end="163:41">(<argument pos:start="163:37" pos:end="163:40"><expr pos:start="163:37" pos:end="163:40"><name pos:start="163:37" pos:end="163:40">eth0</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="163:44" pos:end="163:53"><expr pos:start="163:44" pos:end="163:53"><call pos:start="163:44" pos:end="163:53"><name pos:start="163:44" pos:end="163:49">OBJECT</name><argument_list pos:start="163:50" pos:end="163:53">(<argument pos:start="163:51" pos:end="163:52"><expr pos:start="163:51" pos:end="163:52"><name pos:start="163:51" pos:end="163:52">cs</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="165:30" pos:end="165:58"><expr pos:start="165:30" pos:end="165:58"><literal type="string" pos:start="165:30" pos:end="165:58">"axistream-control-connected"</literal></expr></argument>, <argument pos:start="165:61" pos:end="165:72"><expr pos:start="165:61" pos:end="165:72"><operator pos:start="165:61" pos:end="165:61">&amp;</operator><name pos:start="165:62" pos:end="165:72">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:27"><expr pos:start="167:5" pos:end="167:26"><call pos:start="167:5" pos:end="167:26"><name pos:start="167:5" pos:end="167:20">qdev_init_nofail</name><argument_list pos:start="167:21" pos:end="167:26">(<argument pos:start="167:22" pos:end="167:25"><expr pos:start="167:22" pos:end="167:25"><name pos:start="167:22" pos:end="167:25">eth0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:63"><expr pos:start="169:5" pos:end="169:62"><call pos:start="169:5" pos:end="169:62"><name pos:start="169:5" pos:end="169:19">sysbus_mmio_map</name><argument_list pos:start="169:20" pos:end="169:62">(<argument pos:start="169:21" pos:end="169:40"><expr pos:start="169:21" pos:end="169:40"><call pos:start="169:21" pos:end="169:40"><name pos:start="169:21" pos:end="169:34">SYS_BUS_DEVICE</name><argument_list pos:start="169:35" pos:end="169:40">(<argument pos:start="169:36" pos:end="169:39"><expr pos:start="169:36" pos:end="169:39"><name pos:start="169:36" pos:end="169:39">eth0</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="169:43" pos:end="169:43"><expr pos:start="169:43" pos:end="169:43"><literal type="number" pos:start="169:43" pos:end="169:43">0</literal></expr></argument>, <argument pos:start="169:46" pos:end="169:61"><expr pos:start="169:46" pos:end="169:61"><name pos:start="169:46" pos:end="169:61">AXIENET_BASEADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:66"><expr pos:start="171:5" pos:end="171:65"><call pos:start="171:5" pos:end="171:65"><name pos:start="171:5" pos:end="171:22">sysbus_connect_irq</name><argument_list pos:start="171:23" pos:end="171:65">(<argument pos:start="171:24" pos:end="171:43"><expr pos:start="171:24" pos:end="171:43"><call pos:start="171:24" pos:end="171:43"><name pos:start="171:24" pos:end="171:37">SYS_BUS_DEVICE</name><argument_list pos:start="171:38" pos:end="171:43">(<argument pos:start="171:39" pos:end="171:42"><expr pos:start="171:39" pos:end="171:42"><name pos:start="171:39" pos:end="171:42">eth0</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="171:46" pos:end="171:46"><expr pos:start="171:46" pos:end="171:46"><literal type="number" pos:start="171:46" pos:end="171:46">0</literal></expr></argument>, <argument pos:start="171:49" pos:end="171:64"><expr pos:start="171:49" pos:end="171:64"><name pos:start="171:49" pos:end="171:64"><name pos:start="171:49" pos:end="171:51">irq</name><index pos:start="171:52" pos:end="171:64">[<expr pos:start="171:53" pos:end="171:63"><name pos:start="171:53" pos:end="171:63">AXIENET_IRQ</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="175:5" pos:end="177:70"><expr pos:start="175:5" pos:end="177:69"><name pos:start="175:5" pos:end="175:6">ds</name> <operator pos:start="175:8" pos:end="175:8">=</operator> <call pos:start="175:10" pos:end="177:69"><name pos:start="175:10" pos:end="175:33">object_property_get_link</name><argument_list pos:start="175:34" pos:end="177:69">(<argument pos:start="175:35" pos:end="175:46"><expr pos:start="175:35" pos:end="175:46"><call pos:start="175:35" pos:end="175:46"><name pos:start="175:35" pos:end="175:40">OBJECT</name><argument_list pos:start="175:41" pos:end="175:46">(<argument pos:start="175:42" pos:end="175:45"><expr pos:start="175:42" pos:end="175:45"><name pos:start="175:42" pos:end="175:45">eth0</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="177:35" pos:end="177:62"><expr pos:start="177:35" pos:end="177:62"><literal type="string" pos:start="177:35" pos:end="177:62">"axistream-connected-target"</literal></expr></argument>, <argument pos:start="177:65" pos:end="177:68"><expr pos:start="177:65" pos:end="177:68"><name pos:start="177:65" pos:end="177:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="181:78"><expr pos:start="179:5" pos:end="181:77"><name pos:start="179:5" pos:end="179:6">cs</name> <operator pos:start="179:8" pos:end="179:8">=</operator> <call pos:start="179:10" pos:end="181:77"><name pos:start="179:10" pos:end="179:33">object_property_get_link</name><argument_list pos:start="179:34" pos:end="181:77">(<argument pos:start="179:35" pos:end="179:46"><expr pos:start="179:35" pos:end="179:46"><call pos:start="179:35" pos:end="179:46"><name pos:start="179:35" pos:end="179:40">OBJECT</name><argument_list pos:start="179:41" pos:end="179:46">(<argument pos:start="179:42" pos:end="179:45"><expr pos:start="179:42" pos:end="179:45"><name pos:start="179:42" pos:end="179:45">eth0</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="181:35" pos:end="181:70"><expr pos:start="181:35" pos:end="181:70"><literal type="string" pos:start="181:35" pos:end="181:70">"axistream-control-connected-target"</literal></expr></argument>, <argument pos:start="181:73" pos:end="181:76"><expr pos:start="181:73" pos:end="181:76"><name pos:start="181:73" pos:end="181:76">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:55"><expr pos:start="183:5" pos:end="183:54"><call pos:start="183:5" pos:end="183:54"><name pos:start="183:5" pos:end="183:24">qdev_prop_set_uint32</name><argument_list pos:start="183:25" pos:end="183:54">(<argument pos:start="183:26" pos:end="183:28"><expr pos:start="183:26" pos:end="183:28"><name pos:start="183:26" pos:end="183:28">dma</name></expr></argument>, <argument pos:start="183:31" pos:end="183:38"><expr pos:start="183:31" pos:end="183:38"><literal type="string" pos:start="183:31" pos:end="183:38">"freqhz"</literal></expr></argument>, <argument pos:start="183:41" pos:end="183:53"><expr pos:start="183:41" pos:end="183:53"><literal type="number" pos:start="183:41" pos:end="183:43">100</literal> <operator pos:start="183:45" pos:end="183:45">*</operator> <literal type="number" pos:start="183:47" pos:end="183:53">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="187:66"><expr pos:start="185:5" pos:end="187:65"><call pos:start="185:5" pos:end="187:65"><name pos:start="185:5" pos:end="185:28">object_property_set_link</name><argument_list pos:start="185:29" pos:end="187:65">(<argument pos:start="185:30" pos:end="185:40"><expr pos:start="185:30" pos:end="185:40"><call pos:start="185:30" pos:end="185:40"><name pos:start="185:30" pos:end="185:35">OBJECT</name><argument_list pos:start="185:36" pos:end="185:40">(<argument pos:start="185:37" pos:end="185:39"><expr pos:start="185:37" pos:end="185:39"><name pos:start="185:37" pos:end="185:39">dma</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="185:43" pos:end="185:52"><expr pos:start="185:43" pos:end="185:52"><call pos:start="185:43" pos:end="185:52"><name pos:start="185:43" pos:end="185:48">OBJECT</name><argument_list pos:start="185:49" pos:end="185:52">(<argument pos:start="185:50" pos:end="185:51"><expr pos:start="185:50" pos:end="185:51"><name pos:start="185:50" pos:end="185:51">ds</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="187:30" pos:end="187:50"><expr pos:start="187:30" pos:end="187:50"><literal type="string" pos:start="187:30" pos:end="187:50">"axistream-connected"</literal></expr></argument>, <argument pos:start="187:53" pos:end="187:64"><expr pos:start="187:53" pos:end="187:64"><operator pos:start="187:53" pos:end="187:53">&amp;</operator><name pos:start="187:54" pos:end="187:64">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="191:74"><expr pos:start="189:5" pos:end="191:73"><call pos:start="189:5" pos:end="191:73"><name pos:start="189:5" pos:end="189:28">object_property_set_link</name><argument_list pos:start="189:29" pos:end="191:73">(<argument pos:start="189:30" pos:end="189:40"><expr pos:start="189:30" pos:end="189:40"><call pos:start="189:30" pos:end="189:40"><name pos:start="189:30" pos:end="189:35">OBJECT</name><argument_list pos:start="189:36" pos:end="189:40">(<argument pos:start="189:37" pos:end="189:39"><expr pos:start="189:37" pos:end="189:39"><name pos:start="189:37" pos:end="189:39">dma</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="189:43" pos:end="189:52"><expr pos:start="189:43" pos:end="189:52"><call pos:start="189:43" pos:end="189:52"><name pos:start="189:43" pos:end="189:48">OBJECT</name><argument_list pos:start="189:49" pos:end="189:52">(<argument pos:start="189:50" pos:end="189:51"><expr pos:start="189:50" pos:end="189:51"><name pos:start="189:50" pos:end="189:51">cs</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="191:30" pos:end="191:58"><expr pos:start="191:30" pos:end="191:58"><literal type="string" pos:start="191:30" pos:end="191:58">"axistream-control-connected"</literal></expr></argument>, <argument pos:start="191:61" pos:end="191:72"><expr pos:start="191:61" pos:end="191:72"><operator pos:start="191:61" pos:end="191:61">&amp;</operator><name pos:start="191:62" pos:end="191:72">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:26"><expr pos:start="193:5" pos:end="193:25"><call pos:start="193:5" pos:end="193:25"><name pos:start="193:5" pos:end="193:20">qdev_init_nofail</name><argument_list pos:start="193:21" pos:end="193:25">(<argument pos:start="193:22" pos:end="193:24"><expr pos:start="193:22" pos:end="193:24"><name pos:start="193:22" pos:end="193:24">dma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:61"><expr pos:start="195:5" pos:end="195:60"><call pos:start="195:5" pos:end="195:60"><name pos:start="195:5" pos:end="195:19">sysbus_mmio_map</name><argument_list pos:start="195:20" pos:end="195:60">(<argument pos:start="195:21" pos:end="195:39"><expr pos:start="195:21" pos:end="195:39"><call pos:start="195:21" pos:end="195:39"><name pos:start="195:21" pos:end="195:34">SYS_BUS_DEVICE</name><argument_list pos:start="195:35" pos:end="195:39">(<argument pos:start="195:36" pos:end="195:38"><expr pos:start="195:36" pos:end="195:38"><name pos:start="195:36" pos:end="195:38">dma</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="195:42" pos:end="195:42"><expr pos:start="195:42" pos:end="195:42"><literal type="number" pos:start="195:42" pos:end="195:42">0</literal></expr></argument>, <argument pos:start="195:45" pos:end="195:59"><expr pos:start="195:45" pos:end="195:59"><name pos:start="195:45" pos:end="195:59">AXIDMA_BASEADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:65"><expr pos:start="197:5" pos:end="197:64"><call pos:start="197:5" pos:end="197:64"><name pos:start="197:5" pos:end="197:22">sysbus_connect_irq</name><argument_list pos:start="197:23" pos:end="197:64">(<argument pos:start="197:24" pos:end="197:42"><expr pos:start="197:24" pos:end="197:42"><call pos:start="197:24" pos:end="197:42"><name pos:start="197:24" pos:end="197:37">SYS_BUS_DEVICE</name><argument_list pos:start="197:38" pos:end="197:42">(<argument pos:start="197:39" pos:end="197:41"><expr pos:start="197:39" pos:end="197:41"><name pos:start="197:39" pos:end="197:41">dma</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="197:45" pos:end="197:45"><expr pos:start="197:45" pos:end="197:45"><literal type="number" pos:start="197:45" pos:end="197:45">0</literal></expr></argument>, <argument pos:start="197:48" pos:end="197:63"><expr pos:start="197:48" pos:end="197:63"><name pos:start="197:48" pos:end="197:63"><name pos:start="197:48" pos:end="197:50">irq</name><index pos:start="197:51" pos:end="197:63">[<expr pos:start="197:52" pos:end="197:62"><name pos:start="197:52" pos:end="197:62">AXIDMA_IRQ0</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:65"><expr pos:start="199:5" pos:end="199:64"><call pos:start="199:5" pos:end="199:64"><name pos:start="199:5" pos:end="199:22">sysbus_connect_irq</name><argument_list pos:start="199:23" pos:end="199:64">(<argument pos:start="199:24" pos:end="199:42"><expr pos:start="199:24" pos:end="199:42"><call pos:start="199:24" pos:end="199:42"><name pos:start="199:24" pos:end="199:37">SYS_BUS_DEVICE</name><argument_list pos:start="199:38" pos:end="199:42">(<argument pos:start="199:39" pos:end="199:41"><expr pos:start="199:39" pos:end="199:41"><name pos:start="199:39" pos:end="199:41">dma</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="199:45" pos:end="199:45"><expr pos:start="199:45" pos:end="199:45"><literal type="number" pos:start="199:45" pos:end="199:45">1</literal></expr></argument>, <argument pos:start="199:48" pos:end="199:63"><expr pos:start="199:48" pos:end="199:63"><name pos:start="199:48" pos:end="199:63"><name pos:start="199:48" pos:end="199:50">irq</name><index pos:start="199:51" pos:end="199:63">[<expr pos:start="199:52" pos:end="199:62"><name pos:start="199:52" pos:end="199:62">AXIDMA_IRQ1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <block pos:start="203:5" pos:end="241:5">{<block_content pos:start="205:9" pos:end="239:9">

        <decl_stmt pos:start="205:9" pos:end="205:20"><decl pos:start="205:9" pos:end="205:19"><type pos:start="205:9" pos:end="205:16"><name pos:start="205:9" pos:end="205:14">SSIBus</name> <modifier pos:start="205:16" pos:end="205:16">*</modifier></type><name pos:start="205:17" pos:end="205:19">spi</name></decl>;</decl_stmt>



        <expr_stmt pos:start="209:9" pos:end="209:48"><expr pos:start="209:9" pos:end="209:47"><name pos:start="209:9" pos:end="209:11">dev</name> <operator pos:start="209:13" pos:end="209:13">=</operator> <call pos:start="209:15" pos:end="209:47"><name pos:start="209:15" pos:end="209:25">qdev_create</name><argument_list pos:start="209:26" pos:end="209:47">(<argument pos:start="209:27" pos:end="209:30"><expr pos:start="209:27" pos:end="209:30"><name pos:start="209:27" pos:end="209:30">NULL</name></expr></argument>, <argument pos:start="209:33" pos:end="209:46"><expr pos:start="209:33" pos:end="209:46"><literal type="string" pos:start="209:33" pos:end="209:46">"xlnx.xps-spi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:65"><expr pos:start="211:9" pos:end="211:64"><call pos:start="211:9" pos:end="211:64"><name pos:start="211:9" pos:end="211:27">qdev_prop_set_uint8</name><argument_list pos:start="211:28" pos:end="211:64">(<argument pos:start="211:29" pos:end="211:31"><expr pos:start="211:29" pos:end="211:31"><name pos:start="211:29" pos:end="211:31">dev</name></expr></argument>, <argument pos:start="211:34" pos:end="211:46"><expr pos:start="211:34" pos:end="211:46"><literal type="string" pos:start="211:34" pos:end="211:46">"num-ss-bits"</literal></expr></argument>, <argument pos:start="211:49" pos:end="211:63"><expr pos:start="211:49" pos:end="211:63"><name pos:start="211:49" pos:end="211:63">NUM_SPI_FLASHES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:30"><expr pos:start="213:9" pos:end="213:29"><call pos:start="213:9" pos:end="213:29"><name pos:start="213:9" pos:end="213:24">qdev_init_nofail</name><argument_list pos:start="213:25" pos:end="213:29">(<argument pos:start="213:26" pos:end="213:28"><expr pos:start="213:26" pos:end="213:28"><name pos:start="213:26" pos:end="213:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:37"><expr pos:start="215:9" pos:end="215:36"><name pos:start="215:9" pos:end="215:14">busdev</name> <operator pos:start="215:16" pos:end="215:16">=</operator> <call pos:start="215:18" pos:end="215:36"><name pos:start="215:18" pos:end="215:31">SYS_BUS_DEVICE</name><argument_list pos:start="215:32" pos:end="215:36">(<argument pos:start="215:33" pos:end="215:35"><expr pos:start="215:33" pos:end="215:35"><name pos:start="215:33" pos:end="215:35">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:49"><expr pos:start="217:9" pos:end="217:48"><call pos:start="217:9" pos:end="217:48"><name pos:start="217:9" pos:end="217:23">sysbus_mmio_map</name><argument_list pos:start="217:24" pos:end="217:48">(<argument pos:start="217:25" pos:end="217:30"><expr pos:start="217:25" pos:end="217:30"><name pos:start="217:25" pos:end="217:30">busdev</name></expr></argument>, <argument pos:start="217:33" pos:end="217:33"><expr pos:start="217:33" pos:end="217:33"><literal type="number" pos:start="217:33" pos:end="217:33">0</literal></expr></argument>, <argument pos:start="217:36" pos:end="217:47"><expr pos:start="217:36" pos:end="217:47"><name pos:start="217:36" pos:end="217:47">SPI_BASEADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:52"><expr pos:start="219:9" pos:end="219:51"><call pos:start="219:9" pos:end="219:51"><name pos:start="219:9" pos:end="219:26">sysbus_connect_irq</name><argument_list pos:start="219:27" pos:end="219:51">(<argument pos:start="219:28" pos:end="219:33"><expr pos:start="219:28" pos:end="219:33"><name pos:start="219:28" pos:end="219:33">busdev</name></expr></argument>, <argument pos:start="219:36" pos:end="219:36"><expr pos:start="219:36" pos:end="219:36"><literal type="number" pos:start="219:36" pos:end="219:36">0</literal></expr></argument>, <argument pos:start="219:39" pos:end="219:50"><expr pos:start="219:39" pos:end="219:50"><name pos:start="219:39" pos:end="219:50"><name pos:start="219:39" pos:end="219:41">irq</name><index pos:start="219:42" pos:end="219:50">[<expr pos:start="219:43" pos:end="219:49"><name pos:start="219:43" pos:end="219:49">SPI_IRQ</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="223:9" pos:end="223:55"><expr pos:start="223:9" pos:end="223:54"><name pos:start="223:9" pos:end="223:11">spi</name> <operator pos:start="223:13" pos:end="223:13">=</operator> <operator pos:start="223:15" pos:end="223:15">(</operator><name pos:start="223:16" pos:end="223:21">SSIBus</name> <operator pos:start="223:23" pos:end="223:23">*</operator><operator pos:start="223:24" pos:end="223:24">)</operator><call pos:start="223:25" pos:end="223:54"><name pos:start="223:25" pos:end="223:42">qdev_get_child_bus</name><argument_list pos:start="223:43" pos:end="223:54">(<argument pos:start="223:44" pos:end="223:46"><expr pos:start="223:44" pos:end="223:46"><name pos:start="223:44" pos:end="223:46">dev</name></expr></argument>, <argument pos:start="223:49" pos:end="223:53"><expr pos:start="223:49" pos:end="223:53"><literal type="string" pos:start="223:49" pos:end="223:53">"spi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="227:9" pos:end="239:9">for <control pos:start="227:13" pos:end="227:45">(<init pos:start="227:14" pos:end="227:19"><expr pos:start="227:14" pos:end="227:18"><name pos:start="227:14" pos:end="227:14">i</name> <operator pos:start="227:16" pos:end="227:16">=</operator> <literal type="number" pos:start="227:18" pos:end="227:18">0</literal></expr>;</init> <condition pos:start="227:21" pos:end="227:40"><expr pos:start="227:21" pos:end="227:39"><name pos:start="227:21" pos:end="227:21">i</name> <operator pos:start="227:23" pos:end="227:23">&lt;</operator> <name pos:start="227:25" pos:end="227:39">NUM_SPI_FLASHES</name></expr>;</condition> <incr pos:start="227:42" pos:end="227:44"><expr pos:start="227:42" pos:end="227:44"><name pos:start="227:42" pos:end="227:42">i</name><operator pos:start="227:43" pos:end="227:44">++</operator></expr></incr>)</control> <block pos:start="227:47" pos:end="239:9">{<block_content pos:start="229:13" pos:end="237:53">

            <decl_stmt pos:start="229:13" pos:end="229:29"><decl pos:start="229:13" pos:end="229:28"><type pos:start="229:13" pos:end="229:20"><name pos:start="229:13" pos:end="229:20">qemu_irq</name></type> <name pos:start="229:22" pos:end="229:28">cs_line</name></decl>;</decl_stmt>



            <expr_stmt pos:start="233:13" pos:end="233:51"><expr pos:start="233:13" pos:end="233:50"><name pos:start="233:13" pos:end="233:15">dev</name> <operator pos:start="233:17" pos:end="233:17">=</operator> <call pos:start="233:19" pos:end="233:50"><name pos:start="233:19" pos:end="233:34">ssi_create_slave</name><argument_list pos:start="233:35" pos:end="233:50">(<argument pos:start="233:36" pos:end="233:38"><expr pos:start="233:36" pos:end="233:38"><name pos:start="233:36" pos:end="233:38">spi</name></expr></argument>, <argument pos:start="233:41" pos:end="233:49"><expr pos:start="233:41" pos:end="233:49"><literal type="string" pos:start="233:41" pos:end="233:49">"n25q128"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:66"><expr pos:start="235:13" pos:end="235:65"><name pos:start="235:13" pos:end="235:19">cs_line</name> <operator pos:start="235:21" pos:end="235:21">=</operator> <call pos:start="235:23" pos:end="235:65"><name pos:start="235:23" pos:end="235:44">qdev_get_gpio_in_named</name><argument_list pos:start="235:45" pos:end="235:65">(<argument pos:start="235:46" pos:end="235:48"><expr pos:start="235:46" pos:end="235:48"><name pos:start="235:46" pos:end="235:48">dev</name></expr></argument>, <argument pos:start="235:51" pos:end="235:61"><expr pos:start="235:51" pos:end="235:61"><name pos:start="235:51" pos:end="235:61">SSI_GPIO_CS</name></expr></argument>, <argument pos:start="235:64" pos:end="235:64"><expr pos:start="235:64" pos:end="235:64"><literal type="number" pos:start="235:64" pos:end="235:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:53"><expr pos:start="237:13" pos:end="237:52"><call pos:start="237:13" pos:end="237:52"><name pos:start="237:13" pos:end="237:30">sysbus_connect_irq</name><argument_list pos:start="237:31" pos:end="237:52">(<argument pos:start="237:32" pos:end="237:37"><expr pos:start="237:32" pos:end="237:37"><name pos:start="237:32" pos:end="237:37">busdev</name></expr></argument>, <argument pos:start="237:40" pos:end="237:42"><expr pos:start="237:40" pos:end="237:42"><name pos:start="237:40" pos:end="237:40">i</name><operator pos:start="237:41" pos:end="237:41">+</operator><literal type="number" pos:start="237:42" pos:end="237:42">1</literal></expr></argument>, <argument pos:start="237:45" pos:end="237:51"><expr pos:start="237:45" pos:end="237:51"><name pos:start="237:45" pos:end="237:51">cs_line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block>



    <expr_stmt pos:start="245:5" pos:end="251:46"><expr pos:start="245:5" pos:end="251:45"><call pos:start="245:5" pos:end="251:45"><name pos:start="245:5" pos:end="245:26">microblaze_load_kernel</name><argument_list pos:start="245:27" pos:end="251:45">(<argument pos:start="245:28" pos:end="245:30"><expr pos:start="245:28" pos:end="245:30"><name pos:start="245:28" pos:end="245:30">cpu</name></expr></argument>, <argument pos:start="245:33" pos:end="245:47"><expr pos:start="245:33" pos:end="245:47"><name pos:start="245:33" pos:end="245:47">MEMORY_BASEADDR</name></expr></argument>, <argument pos:start="245:50" pos:end="245:57"><expr pos:start="245:50" pos:end="245:57"><name pos:start="245:50" pos:end="245:57">ram_size</name></expr></argument>,

                           <argument pos:start="247:28" pos:end="247:51"><expr pos:start="247:28" pos:end="247:51"><name pos:start="247:28" pos:end="247:51"><name pos:start="247:28" pos:end="247:34">machine</name><operator pos:start="247:35" pos:end="247:36">-&gt;</operator><name pos:start="247:37" pos:end="247:51">initrd_filename</name></name></expr></argument>,

                           <argument pos:start="249:28" pos:end="249:50"><expr pos:start="249:28" pos:end="249:50"><name pos:start="249:28" pos:end="249:50">BINARY_DEVICE_TREE_FILE</name></expr></argument>,

                           <argument pos:start="251:28" pos:end="251:44"><expr pos:start="251:28" pos:end="251:44"><name pos:start="251:28" pos:end="251:44">machine_cpu_reset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



</block_content>}</block>
</unit>
