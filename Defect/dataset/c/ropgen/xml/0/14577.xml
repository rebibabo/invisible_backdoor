<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14577.c" pos:tabs="8"><function pos:start="1:1" pos:end="269:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_pnm_decode_header</name><parameter_list pos:start="1:25" pos:end="1:69">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:68"><decl pos:start="1:49" pos:end="1:68"><type pos:start="1:49" pos:end="1:68"><name pos:start="1:49" pos:end="1:58">PNMContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier> <specifier pos:start="1:62" pos:end="1:66">const</specifier></type> <name pos:start="1:68" pos:end="1:68">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="269:1">{<block_content pos:start="5:5" pos:end="267:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:17"><name pos:start="5:10" pos:end="5:13">buf1</name><index pos:start="5:14" pos:end="5:17">[<expr pos:start="5:15" pos:end="5:16"><literal type="number" pos:start="5:15" pos:end="5:16">32</literal></expr>]</index></name></decl>, <decl pos:start="5:20" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:8"/><name pos:start="5:20" pos:end="5:33"><name pos:start="5:20" pos:end="5:29">tuple_type</name><index pos:start="5:30" pos:end="5:33">[<expr pos:start="5:31" pos:end="5:32"><literal type="number" pos:start="5:31" pos:end="5:32">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">h</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">w</name></decl>, <decl pos:start="7:15" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:19">depth</name></decl>, <decl pos:start="7:22" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:27">maxval</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:35"><expr pos:start="11:5" pos:end="11:34"><call pos:start="11:5" pos:end="11:34"><name pos:start="11:5" pos:end="11:11">pnm_get</name><argument_list pos:start="11:12" pos:end="11:34">(<argument pos:start="11:13" pos:end="11:13"><expr pos:start="11:13" pos:end="11:13"><name pos:start="11:13" pos:end="11:13">s</name></expr></argument>, <argument pos:start="11:16" pos:end="11:19"><expr pos:start="11:16" pos:end="11:19"><name pos:start="11:16" pos:end="11:19">buf1</name></expr></argument>, <argument pos:start="11:22" pos:end="11:33"><expr pos:start="11:22" pos:end="11:33"><sizeof pos:start="11:22" pos:end="11:33">sizeof<argument_list pos:start="11:28" pos:end="11:33">(<argument pos:start="11:29" pos:end="11:32"><expr pos:start="11:29" pos:end="11:32"><name pos:start="11:29" pos:end="11:32">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:11">type</name></name><operator pos:start="13:12" pos:end="13:12">=</operator> <name pos:start="13:14" pos:end="13:20"><name pos:start="13:14" pos:end="13:17">buf1</name><index pos:start="13:18" pos:end="13:20">[<expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">1</literal></expr>]</index></name><operator pos:start="13:21" pos:end="13:21">-</operator><literal type="char" pos:start="13:22" pos:end="13:24">'0'</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:35"><if pos:start="15:5" pos:end="17:35">if<condition pos:start="15:7" pos:end="15:22">(<expr pos:start="15:8" pos:end="15:21"><name pos:start="15:8" pos:end="15:14"><name pos:start="15:8" pos:end="15:11">buf1</name><index pos:start="15:12" pos:end="15:14">[<expr pos:start="15:13" pos:end="15:13"><literal type="number" pos:start="15:13" pos:end="15:13">0</literal></expr>]</index></name> <operator pos:start="15:16" pos:end="15:17">!=</operator> <literal type="char" pos:start="15:19" pos:end="15:21">'P'</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:35"><block_content pos:start="17:9" pos:end="17:35">

        <return pos:start="17:9" pos:end="17:35">return <expr pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="171:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:33">(<expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:15">type</name></name><operator pos:start="21:16" pos:end="21:17">==</operator><literal type="number" pos:start="21:18" pos:end="21:18">1</literal> <operator pos:start="21:20" pos:end="21:21">||</operator> <name pos:start="21:23" pos:end="21:29"><name pos:start="21:23" pos:end="21:23">s</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:29">type</name></name><operator pos:start="21:30" pos:end="21:31">==</operator><literal type="number" pos:start="21:32" pos:end="21:32">4</literal></expr>)</condition> <block pos:start="21:35" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:46">

        <expr_stmt pos:start="23:9" pos:end="23:46"><expr pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:13">avctx</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:22">pix_fmt</name></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <name pos:start="23:26" pos:end="23:45">AV_PIX_FMT_MONOWHITE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="35:5">else if <condition pos:start="25:15" pos:end="25:40">(<expr pos:start="25:16" pos:end="25:39"><name pos:start="25:16" pos:end="25:22"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:22">type</name></name><operator pos:start="25:23" pos:end="25:24">==</operator><literal type="number" pos:start="25:25" pos:end="25:25">2</literal> <operator pos:start="25:27" pos:end="25:28">||</operator> <name pos:start="25:30" pos:end="25:36"><name pos:start="25:30" pos:end="25:30">s</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:36">type</name></name><operator pos:start="25:37" pos:end="25:38">==</operator><literal type="number" pos:start="25:39" pos:end="25:39">5</literal></expr>)</condition> <block pos:start="25:42" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:46">

        <if_stmt pos:start="27:9" pos:end="33:46"><if pos:start="27:9" pos:end="29:48">if <condition pos:start="27:12" pos:end="27:50">(<expr pos:start="27:13" pos:end="27:49"><name pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:17">avctx</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:27">codec_id</name></name> <operator pos:start="27:29" pos:end="27:30">==</operator> <name pos:start="27:32" pos:end="27:49">AV_CODEC_ID_PGMYUV</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:48"><block_content pos:start="29:13" pos:end="29:48">

            <expr_stmt pos:start="29:13" pos:end="29:48"><expr pos:start="29:13" pos:end="29:47"><name pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:17">avctx</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:26">pix_fmt</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <name pos:start="29:30" pos:end="29:47">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="31:9" pos:end="33:46">else<block type="pseudo" pos:start="33:13" pos:end="33:46"><block_content pos:start="33:13" pos:end="33:46">

            <expr_stmt pos:start="33:13" pos:end="33:46"><expr pos:start="33:13" pos:end="33:45"><name pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:17">avctx</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:26">pix_fmt</name></name> <operator pos:start="33:28" pos:end="33:28">=</operator> <name pos:start="33:30" pos:end="33:45">AV_PIX_FMT_GRAY8</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="39:5">else if <condition pos:start="35:15" pos:end="35:40">(<expr pos:start="35:16" pos:end="35:39"><name pos:start="35:16" pos:end="35:22"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:22">type</name></name><operator pos:start="35:23" pos:end="35:24">==</operator><literal type="number" pos:start="35:25" pos:end="35:25">3</literal> <operator pos:start="35:27" pos:end="35:28">||</operator> <name pos:start="35:30" pos:end="35:36"><name pos:start="35:30" pos:end="35:30">s</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:36">type</name></name><operator pos:start="35:37" pos:end="35:38">==</operator><literal type="number" pos:start="35:39" pos:end="35:39">6</literal></expr>)</condition> <block pos:start="35:42" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:42">

        <expr_stmt pos:start="37:9" pos:end="37:42"><expr pos:start="37:9" pos:end="37:41"><name pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:13">avctx</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:22">pix_fmt</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:41">AV_PIX_FMT_RGB24</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="39:7" pos:end="167:5">else if <condition pos:start="39:15" pos:end="39:26">(<expr pos:start="39:16" pos:end="39:25"><name pos:start="39:16" pos:end="39:22"><name pos:start="39:16" pos:end="39:16">s</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:22">type</name></name><operator pos:start="39:23" pos:end="39:24">==</operator><literal type="number" pos:start="39:25" pos:end="39:25">7</literal></expr>)</condition> <block pos:start="39:28" pos:end="167:5">{<block_content pos:start="41:9" pos:end="165:17">

        <expr_stmt pos:start="41:9" pos:end="41:20"><expr pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:9">w</name>      <operator pos:start="41:16" pos:end="41:16">=</operator> <operator pos:start="41:18" pos:end="41:18">-</operator><literal type="number" pos:start="41:19" pos:end="41:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:20"><expr pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:9">h</name>      <operator pos:start="43:16" pos:end="43:16">=</operator> <operator pos:start="43:18" pos:end="43:18">-</operator><literal type="number" pos:start="43:19" pos:end="43:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:20"><expr pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:14">maxval</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <operator pos:start="45:18" pos:end="45:18">-</operator><literal type="number" pos:start="45:19" pos:end="45:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:20"><expr pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:13">depth</name>  <operator pos:start="47:16" pos:end="47:16">=</operator> <operator pos:start="47:18" pos:end="47:18">-</operator><literal type="number" pos:start="47:19" pos:end="47:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:18">tuple_type</name><index pos:start="49:19" pos:end="49:21">[<expr pos:start="49:20" pos:end="49:20"><literal type="number" pos:start="49:20" pos:end="49:20">0</literal></expr>]</index></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <literal type="char" pos:start="49:25" pos:end="49:28">'\0'</literal></expr>;</expr_stmt>

        <for pos:start="51:9" pos:end="97:9">for <control pos:start="51:13" pos:end="51:16">(<init pos:start="51:14" pos:end="51:14">;</init><condition pos:start="51:15" pos:end="51:15">;</condition><incr/>)</control> <block pos:start="51:18" pos:end="97:9">{<block_content pos:start="53:13" pos:end="95:13">

            <expr_stmt pos:start="53:13" pos:end="53:43"><expr pos:start="53:13" pos:end="53:42"><call pos:start="53:13" pos:end="53:42"><name pos:start="53:13" pos:end="53:19">pnm_get</name><argument_list pos:start="53:20" pos:end="53:42">(<argument pos:start="53:21" pos:end="53:21"><expr pos:start="53:21" pos:end="53:21"><name pos:start="53:21" pos:end="53:21">s</name></expr></argument>, <argument pos:start="53:24" pos:end="53:27"><expr pos:start="53:24" pos:end="53:27"><name pos:start="53:24" pos:end="53:27">buf1</name></expr></argument>, <argument pos:start="53:30" pos:end="53:41"><expr pos:start="53:30" pos:end="53:41"><sizeof pos:start="53:30" pos:end="53:41">sizeof<argument_list pos:start="53:36" pos:end="53:41">(<argument pos:start="53:37" pos:end="53:40"><expr pos:start="53:37" pos:end="53:40"><name pos:start="53:37" pos:end="53:40">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="95:13"><if pos:start="55:13" pos:end="61:13">if <condition pos:start="55:16" pos:end="55:39">(<expr pos:start="55:17" pos:end="55:38"><operator pos:start="55:17" pos:end="55:17">!</operator><call pos:start="55:18" pos:end="55:38"><name pos:start="55:18" pos:end="55:23">strcmp</name><argument_list pos:start="55:24" pos:end="55:38">(<argument pos:start="55:25" pos:end="55:28"><expr pos:start="55:25" pos:end="55:28"><name pos:start="55:25" pos:end="55:28">buf1</name></expr></argument>, <argument pos:start="55:31" pos:end="55:37"><expr pos:start="55:31" pos:end="55:37"><literal type="string" pos:start="55:31" pos:end="55:37">"WIDTH"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:41" pos:end="61:13">{<block_content pos:start="57:17" pos:end="59:43">

                <expr_stmt pos:start="57:17" pos:end="57:47"><expr pos:start="57:17" pos:end="57:46"><call pos:start="57:17" pos:end="57:46"><name pos:start="57:17" pos:end="57:23">pnm_get</name><argument_list pos:start="57:24" pos:end="57:46">(<argument pos:start="57:25" pos:end="57:25"><expr pos:start="57:25" pos:end="57:25"><name pos:start="57:25" pos:end="57:25">s</name></expr></argument>, <argument pos:start="57:28" pos:end="57:31"><expr pos:start="57:28" pos:end="57:31"><name pos:start="57:28" pos:end="57:31">buf1</name></expr></argument>, <argument pos:start="57:34" pos:end="57:45"><expr pos:start="57:34" pos:end="57:45"><sizeof pos:start="57:34" pos:end="57:45">sizeof<argument_list pos:start="57:40" pos:end="57:45">(<argument pos:start="57:41" pos:end="57:44"><expr pos:start="57:41" pos:end="57:44"><name pos:start="57:41" pos:end="57:44">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:43"><expr pos:start="59:17" pos:end="59:42"><name pos:start="59:17" pos:end="59:17">w</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <call pos:start="59:21" pos:end="59:42"><name pos:start="59:21" pos:end="59:26">strtol</name><argument_list pos:start="59:27" pos:end="59:42">(<argument pos:start="59:28" pos:end="59:31"><expr pos:start="59:28" pos:end="59:31"><name pos:start="59:28" pos:end="59:31">buf1</name></expr></argument>, <argument pos:start="59:34" pos:end="59:37"><expr pos:start="59:34" pos:end="59:37"><name pos:start="59:34" pos:end="59:37">NULL</name></expr></argument>, <argument pos:start="59:40" pos:end="59:41"><expr pos:start="59:40" pos:end="59:41"><literal type="number" pos:start="59:40" pos:end="59:41">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="61:15" pos:end="67:13">else if <condition pos:start="61:23" pos:end="61:47">(<expr pos:start="61:24" pos:end="61:46"><operator pos:start="61:24" pos:end="61:24">!</operator><call pos:start="61:25" pos:end="61:46"><name pos:start="61:25" pos:end="61:30">strcmp</name><argument_list pos:start="61:31" pos:end="61:46">(<argument pos:start="61:32" pos:end="61:35"><expr pos:start="61:32" pos:end="61:35"><name pos:start="61:32" pos:end="61:35">buf1</name></expr></argument>, <argument pos:start="61:38" pos:end="61:45"><expr pos:start="61:38" pos:end="61:45"><literal type="string" pos:start="61:38" pos:end="61:45">"HEIGHT"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:49" pos:end="67:13">{<block_content pos:start="63:17" pos:end="65:43">

                <expr_stmt pos:start="63:17" pos:end="63:47"><expr pos:start="63:17" pos:end="63:46"><call pos:start="63:17" pos:end="63:46"><name pos:start="63:17" pos:end="63:23">pnm_get</name><argument_list pos:start="63:24" pos:end="63:46">(<argument pos:start="63:25" pos:end="63:25"><expr pos:start="63:25" pos:end="63:25"><name pos:start="63:25" pos:end="63:25">s</name></expr></argument>, <argument pos:start="63:28" pos:end="63:31"><expr pos:start="63:28" pos:end="63:31"><name pos:start="63:28" pos:end="63:31">buf1</name></expr></argument>, <argument pos:start="63:34" pos:end="63:45"><expr pos:start="63:34" pos:end="63:45"><sizeof pos:start="63:34" pos:end="63:45">sizeof<argument_list pos:start="63:40" pos:end="63:45">(<argument pos:start="63:41" pos:end="63:44"><expr pos:start="63:41" pos:end="63:44"><name pos:start="63:41" pos:end="63:44">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:43"><expr pos:start="65:17" pos:end="65:42"><name pos:start="65:17" pos:end="65:17">h</name> <operator pos:start="65:19" pos:end="65:19">=</operator> <call pos:start="65:21" pos:end="65:42"><name pos:start="65:21" pos:end="65:26">strtol</name><argument_list pos:start="65:27" pos:end="65:42">(<argument pos:start="65:28" pos:end="65:31"><expr pos:start="65:28" pos:end="65:31"><name pos:start="65:28" pos:end="65:31">buf1</name></expr></argument>, <argument pos:start="65:34" pos:end="65:37"><expr pos:start="65:34" pos:end="65:37"><name pos:start="65:34" pos:end="65:37">NULL</name></expr></argument>, <argument pos:start="65:40" pos:end="65:41"><expr pos:start="65:40" pos:end="65:41"><literal type="number" pos:start="65:40" pos:end="65:41">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="67:15" pos:end="73:13">else if <condition pos:start="67:23" pos:end="67:46">(<expr pos:start="67:24" pos:end="67:45"><operator pos:start="67:24" pos:end="67:24">!</operator><call pos:start="67:25" pos:end="67:45"><name pos:start="67:25" pos:end="67:30">strcmp</name><argument_list pos:start="67:31" pos:end="67:45">(<argument pos:start="67:32" pos:end="67:35"><expr pos:start="67:32" pos:end="67:35"><name pos:start="67:32" pos:end="67:35">buf1</name></expr></argument>, <argument pos:start="67:38" pos:end="67:44"><expr pos:start="67:38" pos:end="67:44"><literal type="string" pos:start="67:38" pos:end="67:44">"DEPTH"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:48" pos:end="73:13">{<block_content pos:start="69:17" pos:end="71:47">

                <expr_stmt pos:start="69:17" pos:end="69:47"><expr pos:start="69:17" pos:end="69:46"><call pos:start="69:17" pos:end="69:46"><name pos:start="69:17" pos:end="69:23">pnm_get</name><argument_list pos:start="69:24" pos:end="69:46">(<argument pos:start="69:25" pos:end="69:25"><expr pos:start="69:25" pos:end="69:25"><name pos:start="69:25" pos:end="69:25">s</name></expr></argument>, <argument pos:start="69:28" pos:end="69:31"><expr pos:start="69:28" pos:end="69:31"><name pos:start="69:28" pos:end="69:31">buf1</name></expr></argument>, <argument pos:start="69:34" pos:end="69:45"><expr pos:start="69:34" pos:end="69:45"><sizeof pos:start="69:34" pos:end="69:45">sizeof<argument_list pos:start="69:40" pos:end="69:45">(<argument pos:start="69:41" pos:end="69:44"><expr pos:start="69:41" pos:end="69:44"><name pos:start="69:41" pos:end="69:44">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:47"><expr pos:start="71:17" pos:end="71:46"><name pos:start="71:17" pos:end="71:21">depth</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <call pos:start="71:25" pos:end="71:46"><name pos:start="71:25" pos:end="71:30">strtol</name><argument_list pos:start="71:31" pos:end="71:46">(<argument pos:start="71:32" pos:end="71:35"><expr pos:start="71:32" pos:end="71:35"><name pos:start="71:32" pos:end="71:35">buf1</name></expr></argument>, <argument pos:start="71:38" pos:end="71:41"><expr pos:start="71:38" pos:end="71:41"><name pos:start="71:38" pos:end="71:41">NULL</name></expr></argument>, <argument pos:start="71:44" pos:end="71:45"><expr pos:start="71:44" pos:end="71:45"><literal type="number" pos:start="71:44" pos:end="71:45">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="73:15" pos:end="79:13">else if <condition pos:start="73:23" pos:end="73:47">(<expr pos:start="73:24" pos:end="73:46"><operator pos:start="73:24" pos:end="73:24">!</operator><call pos:start="73:25" pos:end="73:46"><name pos:start="73:25" pos:end="73:30">strcmp</name><argument_list pos:start="73:31" pos:end="73:46">(<argument pos:start="73:32" pos:end="73:35"><expr pos:start="73:32" pos:end="73:35"><name pos:start="73:32" pos:end="73:35">buf1</name></expr></argument>, <argument pos:start="73:38" pos:end="73:45"><expr pos:start="73:38" pos:end="73:45"><literal type="string" pos:start="73:38" pos:end="73:45">"MAXVAL"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:49" pos:end="79:13">{<block_content pos:start="75:17" pos:end="77:48">

                <expr_stmt pos:start="75:17" pos:end="75:47"><expr pos:start="75:17" pos:end="75:46"><call pos:start="75:17" pos:end="75:46"><name pos:start="75:17" pos:end="75:23">pnm_get</name><argument_list pos:start="75:24" pos:end="75:46">(<argument pos:start="75:25" pos:end="75:25"><expr pos:start="75:25" pos:end="75:25"><name pos:start="75:25" pos:end="75:25">s</name></expr></argument>, <argument pos:start="75:28" pos:end="75:31"><expr pos:start="75:28" pos:end="75:31"><name pos:start="75:28" pos:end="75:31">buf1</name></expr></argument>, <argument pos:start="75:34" pos:end="75:45"><expr pos:start="75:34" pos:end="75:45"><sizeof pos:start="75:34" pos:end="75:45">sizeof<argument_list pos:start="75:40" pos:end="75:45">(<argument pos:start="75:41" pos:end="75:44"><expr pos:start="75:41" pos:end="75:44"><name pos:start="75:41" pos:end="75:44">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:48"><expr pos:start="77:17" pos:end="77:47"><name pos:start="77:17" pos:end="77:22">maxval</name> <operator pos:start="77:24" pos:end="77:24">=</operator> <call pos:start="77:26" pos:end="77:47"><name pos:start="77:26" pos:end="77:31">strtol</name><argument_list pos:start="77:32" pos:end="77:47">(<argument pos:start="77:33" pos:end="77:36"><expr pos:start="77:33" pos:end="77:36"><name pos:start="77:33" pos:end="77:36">buf1</name></expr></argument>, <argument pos:start="77:39" pos:end="77:42"><expr pos:start="77:39" pos:end="77:42"><name pos:start="77:39" pos:end="77:42">NULL</name></expr></argument>, <argument pos:start="77:45" pos:end="77:46"><expr pos:start="77:45" pos:end="77:46"><literal type="number" pos:start="77:45" pos:end="77:46">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="79:15" pos:end="87:13">else if <condition pos:start="79:23" pos:end="83:50">(<expr pos:start="79:24" pos:end="83:49"><operator pos:start="79:24" pos:end="79:24">!</operator><call pos:start="79:25" pos:end="79:48"><name pos:start="79:25" pos:end="79:30">strcmp</name><argument_list pos:start="79:31" pos:end="79:48">(<argument pos:start="79:32" pos:end="79:35"><expr pos:start="79:32" pos:end="79:35"><name pos:start="79:32" pos:end="79:35">buf1</name></expr></argument>, <argument pos:start="79:38" pos:end="79:47"><expr pos:start="79:38" pos:end="79:47"><literal type="string" pos:start="79:38" pos:end="79:47">"TUPLTYPE"</literal></expr></argument>)</argument_list></call> <operator pos:start="79:50" pos:end="79:51">||</operator>

                       <comment type="block" pos:start="81:24" pos:end="81:67">/* libavcodec used to write invalid files */</comment>

                       <operator pos:start="83:24" pos:end="83:24">!</operator><call pos:start="83:25" pos:end="83:49"><name pos:start="83:25" pos:end="83:30">strcmp</name><argument_list pos:start="83:31" pos:end="83:49">(<argument pos:start="83:32" pos:end="83:35"><expr pos:start="83:32" pos:end="83:35"><name pos:start="83:32" pos:end="83:35">buf1</name></expr></argument>, <argument pos:start="83:38" pos:end="83:48"><expr pos:start="83:38" pos:end="83:48"><literal type="string" pos:start="83:38" pos:end="83:48">"TUPLETYPE"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="83:52" pos:end="87:13">{<block_content pos:start="85:17" pos:end="85:59">

                <expr_stmt pos:start="85:17" pos:end="85:59"><expr pos:start="85:17" pos:end="85:58"><call pos:start="85:17" pos:end="85:58"><name pos:start="85:17" pos:end="85:23">pnm_get</name><argument_list pos:start="85:24" pos:end="85:58">(<argument pos:start="85:25" pos:end="85:25"><expr pos:start="85:25" pos:end="85:25"><name pos:start="85:25" pos:end="85:25">s</name></expr></argument>, <argument pos:start="85:28" pos:end="85:37"><expr pos:start="85:28" pos:end="85:37"><name pos:start="85:28" pos:end="85:37">tuple_type</name></expr></argument>, <argument pos:start="85:40" pos:end="85:57"><expr pos:start="85:40" pos:end="85:57"><sizeof pos:start="85:40" pos:end="85:57">sizeof<argument_list pos:start="85:46" pos:end="85:57">(<argument pos:start="85:47" pos:end="85:56"><expr pos:start="85:47" pos:end="85:56"><name pos:start="85:47" pos:end="85:56">tuple_type</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="87:15" pos:end="91:13">else if <condition pos:start="87:23" pos:end="87:47">(<expr pos:start="87:24" pos:end="87:46"><operator pos:start="87:24" pos:end="87:24">!</operator><call pos:start="87:25" pos:end="87:46"><name pos:start="87:25" pos:end="87:30">strcmp</name><argument_list pos:start="87:31" pos:end="87:46">(<argument pos:start="87:32" pos:end="87:35"><expr pos:start="87:32" pos:end="87:35"><name pos:start="87:32" pos:end="87:35">buf1</name></expr></argument>, <argument pos:start="87:38" pos:end="87:45"><expr pos:start="87:38" pos:end="87:45"><literal type="string" pos:start="87:38" pos:end="87:45">"ENDHDR"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:49" pos:end="91:13">{<block_content pos:start="89:17" pos:end="89:22">

                <break pos:start="89:17" pos:end="89:22">break;</break>

            </block_content>}</block></if> <else pos:start="91:15" pos:end="95:13">else <block pos:start="91:20" pos:end="95:13">{<block_content pos:start="93:17" pos:end="93:43">

                <return pos:start="93:17" pos:end="93:43">return <expr pos:start="93:24" pos:end="93:42"><name pos:start="93:24" pos:end="93:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="99:9" pos:end="99:45">/* check that all tags are present */</comment>

        <if_stmt pos:start="101:9" pos:end="103:39"><if pos:start="101:9" pos:end="103:39">if <condition pos:start="101:12" pos:end="101:160">(<expr pos:start="101:13" pos:end="101:159"><name pos:start="101:13" pos:end="101:13">w</name> <operator pos:start="101:15" pos:end="101:16">&lt;=</operator> <literal type="number" pos:start="101:18" pos:end="101:18">0</literal> <operator pos:start="101:20" pos:end="101:21">||</operator> <name pos:start="101:23" pos:end="101:23">h</name> <operator pos:start="101:25" pos:end="101:26">&lt;=</operator> <literal type="number" pos:start="101:28" pos:end="101:28">0</literal> <operator pos:start="101:30" pos:end="101:31">||</operator> <name pos:start="101:33" pos:end="101:38">maxval</name> <operator pos:start="101:40" pos:end="101:41">&lt;=</operator> <literal type="number" pos:start="101:43" pos:end="101:43">0</literal> <operator pos:start="101:45" pos:end="101:46">||</operator> <name pos:start="101:48" pos:end="101:52">depth</name> <operator pos:start="101:54" pos:end="101:55">&lt;=</operator> <literal type="number" pos:start="101:57" pos:end="101:57">0</literal> <operator pos:start="101:59" pos:end="101:60">||</operator> <name pos:start="101:62" pos:end="101:74"><name pos:start="101:62" pos:end="101:71">tuple_type</name><index pos:start="101:72" pos:end="101:74">[<expr pos:start="101:73" pos:end="101:73"><literal type="number" pos:start="101:73" pos:end="101:73">0</literal></expr>]</index></name> <operator pos:start="101:76" pos:end="101:77">==</operator> <literal type="char" pos:start="101:79" pos:end="101:82">'\0'</literal> <operator pos:start="101:84" pos:end="101:85">||</operator> <call pos:start="101:87" pos:end="101:121"><name pos:start="101:87" pos:end="101:105">av_image_check_size</name><argument_list pos:start="101:106" pos:end="101:121">(<argument pos:start="101:107" pos:end="101:107"><expr pos:start="101:107" pos:end="101:107"><name pos:start="101:107" pos:end="101:107">w</name></expr></argument>, <argument pos:start="101:110" pos:end="101:110"><expr pos:start="101:110" pos:end="101:110"><name pos:start="101:110" pos:end="101:110">h</name></expr></argument>, <argument pos:start="101:113" pos:end="101:113"><expr pos:start="101:113" pos:end="101:113"><literal type="number" pos:start="101:113" pos:end="101:113">0</literal></expr></argument>, <argument pos:start="101:116" pos:end="101:120"><expr pos:start="101:116" pos:end="101:120"><name pos:start="101:116" pos:end="101:120">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="101:123" pos:end="101:124">||</operator> <name pos:start="101:126" pos:end="101:138"><name pos:start="101:126" pos:end="101:126">s</name><operator pos:start="101:127" pos:end="101:128">-&gt;</operator><name pos:start="101:129" pos:end="101:138">bytestream</name></name> <operator pos:start="101:140" pos:end="101:141">&gt;=</operator> <name pos:start="101:143" pos:end="101:159"><name pos:start="101:143" pos:end="101:143">s</name><operator pos:start="101:144" pos:end="101:145">-&gt;</operator><name pos:start="101:146" pos:end="101:159">bytestream_end</name></name></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:39"><block_content pos:start="103:13" pos:end="103:39">

            <return pos:start="103:13" pos:end="103:39">return <expr pos:start="103:20" pos:end="103:38"><name pos:start="103:20" pos:end="103:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:26"><expr pos:start="107:9" pos:end="107:25"><name pos:start="107:9" pos:end="107:20"><name pos:start="107:9" pos:end="107:13">avctx</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:20">width</name></name>  <operator pos:start="107:23" pos:end="107:23">=</operator> <name pos:start="107:25" pos:end="107:25">w</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:26"><expr pos:start="109:9" pos:end="109:25"><name pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:13">avctx</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:21">height</name></name> <operator pos:start="109:23" pos:end="109:23">=</operator> <name pos:start="109:25" pos:end="109:25">h</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:31"><expr pos:start="111:9" pos:end="111:30"><name pos:start="111:9" pos:end="111:17"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:17">maxval</name></name>     <operator pos:start="111:23" pos:end="111:23">=</operator> <name pos:start="111:25" pos:end="111:30">maxval</name></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="163:9"><if pos:start="113:9" pos:end="129:9">if <condition pos:start="113:12" pos:end="113:23">(<expr pos:start="113:13" pos:end="113:22"><name pos:start="113:13" pos:end="113:17">depth</name> <operator pos:start="113:19" pos:end="113:20">==</operator> <literal type="number" pos:start="113:22" pos:end="113:22">1</literal></expr>)</condition> <block pos:start="113:25" pos:end="129:9">{<block_content pos:start="115:13" pos:end="127:13">

            <if_stmt pos:start="115:13" pos:end="127:13"><if pos:start="115:13" pos:end="119:13">if <condition pos:start="115:16" pos:end="115:28">(<expr pos:start="115:17" pos:end="115:27"><name pos:start="115:17" pos:end="115:22">maxval</name> <operator pos:start="115:24" pos:end="115:25">==</operator> <literal type="number" pos:start="115:27" pos:end="115:27">1</literal></expr>)</condition> <block pos:start="115:30" pos:end="119:13">{<block_content pos:start="117:17" pos:end="117:54">

                <expr_stmt pos:start="117:17" pos:end="117:54"><expr pos:start="117:17" pos:end="117:53"><name pos:start="117:17" pos:end="117:30"><name pos:start="117:17" pos:end="117:21">avctx</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:30">pix_fmt</name></name> <operator pos:start="117:32" pos:end="117:32">=</operator> <name pos:start="117:34" pos:end="117:53">AV_PIX_FMT_MONOBLACK</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="119:15" pos:end="123:13">else if <condition pos:start="119:23" pos:end="119:36">(<expr pos:start="119:24" pos:end="119:35"><name pos:start="119:24" pos:end="119:29">maxval</name> <operator pos:start="119:31" pos:end="119:31">&lt;</operator> <literal type="number" pos:start="119:33" pos:end="119:35">256</literal></expr>)</condition> <block pos:start="119:38" pos:end="123:13">{<block_content pos:start="121:17" pos:end="121:50">

                <expr_stmt pos:start="121:17" pos:end="121:50"><expr pos:start="121:17" pos:end="121:49"><name pos:start="121:17" pos:end="121:30"><name pos:start="121:17" pos:end="121:21">avctx</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:30">pix_fmt</name></name> <operator pos:start="121:32" pos:end="121:32">=</operator> <name pos:start="121:34" pos:end="121:49">AV_PIX_FMT_GRAY8</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="123:15" pos:end="127:13">else <block pos:start="123:20" pos:end="127:13">{<block_content pos:start="125:17" pos:end="125:51">

                <expr_stmt pos:start="125:17" pos:end="125:51"><expr pos:start="125:17" pos:end="125:50"><name pos:start="125:17" pos:end="125:30"><name pos:start="125:17" pos:end="125:21">avctx</name><operator pos:start="125:22" pos:end="125:23">-&gt;</operator><name pos:start="125:24" pos:end="125:30">pix_fmt</name></name> <operator pos:start="125:32" pos:end="125:32">=</operator> <name pos:start="125:34" pos:end="125:50">AV_PIX_FMT_GRAY16</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="129:11" pos:end="135:9">else if <condition pos:start="129:19" pos:end="129:30">(<expr pos:start="129:20" pos:end="129:29"><name pos:start="129:20" pos:end="129:24">depth</name> <operator pos:start="129:26" pos:end="129:27">==</operator> <literal type="number" pos:start="129:29" pos:end="129:29">2</literal></expr>)</condition> <block pos:start="129:32" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:51">

            <if_stmt pos:start="131:13" pos:end="133:51"><if pos:start="131:13" pos:end="133:51">if <condition pos:start="131:16" pos:end="131:30">(<expr pos:start="131:17" pos:end="131:29"><name pos:start="131:17" pos:end="131:22">maxval</name> <operator pos:start="131:24" pos:end="131:25">==</operator> <literal type="number" pos:start="131:27" pos:end="131:29">255</literal></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:51"><block_content pos:start="133:17" pos:end="133:51">

                <expr_stmt pos:start="133:17" pos:end="133:51"><expr pos:start="133:17" pos:end="133:50"><name pos:start="133:17" pos:end="133:30"><name pos:start="133:17" pos:end="133:21">avctx</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:30">pix_fmt</name></name> <operator pos:start="133:32" pos:end="133:32">=</operator> <name pos:start="133:34" pos:end="133:50">AV_PIX_FMT_GRAY8A</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="135:11" pos:end="147:9">else if <condition pos:start="135:19" pos:end="135:30">(<expr pos:start="135:20" pos:end="135:29"><name pos:start="135:20" pos:end="135:24">depth</name> <operator pos:start="135:26" pos:end="135:27">==</operator> <literal type="number" pos:start="135:29" pos:end="135:29">3</literal></expr>)</condition> <block pos:start="135:32" pos:end="147:9">{<block_content pos:start="137:13" pos:end="145:13">

            <if_stmt pos:start="137:13" pos:end="145:13"><if pos:start="137:13" pos:end="141:13">if <condition pos:start="137:16" pos:end="137:29">(<expr pos:start="137:17" pos:end="137:28"><name pos:start="137:17" pos:end="137:22">maxval</name> <operator pos:start="137:24" pos:end="137:24">&lt;</operator> <literal type="number" pos:start="137:26" pos:end="137:28">256</literal></expr>)</condition> <block pos:start="137:31" pos:end="141:13">{<block_content pos:start="139:17" pos:end="139:50">

                <expr_stmt pos:start="139:17" pos:end="139:50"><expr pos:start="139:17" pos:end="139:49"><name pos:start="139:17" pos:end="139:30"><name pos:start="139:17" pos:end="139:21">avctx</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:30">pix_fmt</name></name> <operator pos:start="139:32" pos:end="139:32">=</operator> <name pos:start="139:34" pos:end="139:49">AV_PIX_FMT_RGB24</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="141:15" pos:end="145:13">else <block pos:start="141:20" pos:end="145:13">{<block_content pos:start="143:17" pos:end="143:50">

                <expr_stmt pos:start="143:17" pos:end="143:50"><expr pos:start="143:17" pos:end="143:49"><name pos:start="143:17" pos:end="143:30"><name pos:start="143:17" pos:end="143:21">avctx</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:30">pix_fmt</name></name> <operator pos:start="143:32" pos:end="143:32">=</operator> <name pos:start="143:34" pos:end="143:49">AV_PIX_FMT_RGB48</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="147:11" pos:end="159:9">else if <condition pos:start="147:19" pos:end="147:30">(<expr pos:start="147:20" pos:end="147:29"><name pos:start="147:20" pos:end="147:24">depth</name> <operator pos:start="147:26" pos:end="147:27">==</operator> <literal type="number" pos:start="147:29" pos:end="147:29">4</literal></expr>)</condition> <block pos:start="147:32" pos:end="159:9">{<block_content pos:start="149:13" pos:end="157:13">

            <if_stmt pos:start="149:13" pos:end="157:13"><if pos:start="149:13" pos:end="153:13">if <condition pos:start="149:16" pos:end="149:29">(<expr pos:start="149:17" pos:end="149:28"><name pos:start="149:17" pos:end="149:22">maxval</name> <operator pos:start="149:24" pos:end="149:24">&lt;</operator> <literal type="number" pos:start="149:26" pos:end="149:28">256</literal></expr>)</condition> <block pos:start="149:31" pos:end="153:13">{<block_content pos:start="151:17" pos:end="151:49">

                <expr_stmt pos:start="151:17" pos:end="151:49"><expr pos:start="151:17" pos:end="151:48"><name pos:start="151:17" pos:end="151:30"><name pos:start="151:17" pos:end="151:21">avctx</name><operator pos:start="151:22" pos:end="151:23">-&gt;</operator><name pos:start="151:24" pos:end="151:30">pix_fmt</name></name> <operator pos:start="151:32" pos:end="151:32">=</operator> <name pos:start="151:34" pos:end="151:48">AV_PIX_FMT_RGBA</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="153:15" pos:end="157:13">else <block pos:start="153:20" pos:end="157:13">{<block_content pos:start="155:17" pos:end="155:51">

                <expr_stmt pos:start="155:17" pos:end="155:51"><expr pos:start="155:17" pos:end="155:50"><name pos:start="155:17" pos:end="155:30"><name pos:start="155:17" pos:end="155:21">avctx</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:30">pix_fmt</name></name> <operator pos:start="155:32" pos:end="155:32">=</operator> <name pos:start="155:34" pos:end="155:50">AV_PIX_FMT_RGBA64</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="159:11" pos:end="163:9">else <block pos:start="159:16" pos:end="163:9">{<block_content pos:start="161:13" pos:end="161:39">

            <return pos:start="161:13" pos:end="161:39">return <expr pos:start="161:20" pos:end="161:38"><name pos:start="161:20" pos:end="161:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

        <return pos:start="165:9" pos:end="165:17">return <expr pos:start="165:16" pos:end="165:16"><literal type="number" pos:start="165:16" pos:end="165:16">0</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="167:7" pos:end="171:5">else <block pos:start="167:12" pos:end="171:5">{<block_content pos:start="169:9" pos:end="169:35">

        <return pos:start="169:9" pos:end="169:35">return <expr pos:start="169:16" pos:end="169:34"><name pos:start="169:16" pos:end="169:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:35"><expr pos:start="173:5" pos:end="173:34"><call pos:start="173:5" pos:end="173:34"><name pos:start="173:5" pos:end="173:11">pnm_get</name><argument_list pos:start="173:12" pos:end="173:34">(<argument pos:start="173:13" pos:end="173:13"><expr pos:start="173:13" pos:end="173:13"><name pos:start="173:13" pos:end="173:13">s</name></expr></argument>, <argument pos:start="173:16" pos:end="173:19"><expr pos:start="173:16" pos:end="173:19"><name pos:start="173:16" pos:end="173:19">buf1</name></expr></argument>, <argument pos:start="173:22" pos:end="173:33"><expr pos:start="173:22" pos:end="173:33"><sizeof pos:start="173:22" pos:end="173:33">sizeof<argument_list pos:start="173:28" pos:end="173:33">(<argument pos:start="173:29" pos:end="173:32"><expr pos:start="173:29" pos:end="173:32"><name pos:start="173:29" pos:end="173:32">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:19"><expr pos:start="175:5" pos:end="175:18"><name pos:start="175:5" pos:end="175:5">w</name> <operator pos:start="175:7" pos:end="175:7">=</operator> <call pos:start="175:9" pos:end="175:18"><name pos:start="175:9" pos:end="175:12">atoi</name><argument_list pos:start="175:13" pos:end="175:18">(<argument pos:start="175:14" pos:end="175:17"><expr pos:start="175:14" pos:end="175:17"><name pos:start="175:14" pos:end="175:17">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:35"><expr pos:start="177:5" pos:end="177:34"><call pos:start="177:5" pos:end="177:34"><name pos:start="177:5" pos:end="177:11">pnm_get</name><argument_list pos:start="177:12" pos:end="177:34">(<argument pos:start="177:13" pos:end="177:13"><expr pos:start="177:13" pos:end="177:13"><name pos:start="177:13" pos:end="177:13">s</name></expr></argument>, <argument pos:start="177:16" pos:end="177:19"><expr pos:start="177:16" pos:end="177:19"><name pos:start="177:16" pos:end="177:19">buf1</name></expr></argument>, <argument pos:start="177:22" pos:end="177:33"><expr pos:start="177:22" pos:end="177:33"><sizeof pos:start="177:22" pos:end="177:33">sizeof<argument_list pos:start="177:28" pos:end="177:33">(<argument pos:start="177:29" pos:end="177:32"><expr pos:start="177:29" pos:end="177:32"><name pos:start="177:29" pos:end="177:32">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:19"><expr pos:start="179:5" pos:end="179:18"><name pos:start="179:5" pos:end="179:5">h</name> <operator pos:start="179:7" pos:end="179:7">=</operator> <call pos:start="179:9" pos:end="179:18"><name pos:start="179:9" pos:end="179:12">atoi</name><argument_list pos:start="179:13" pos:end="179:18">(<argument pos:start="179:14" pos:end="179:17"><expr pos:start="179:14" pos:end="179:17"><name pos:start="179:14" pos:end="179:17">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="181:5" pos:end="183:35"><if pos:start="181:5" pos:end="183:35">if<condition pos:start="181:7" pos:end="181:101">(<expr pos:start="181:8" pos:end="181:100"><name pos:start="181:8" pos:end="181:8">w</name> <operator pos:start="181:10" pos:end="181:11">&lt;=</operator> <literal type="number" pos:start="181:13" pos:end="181:13">0</literal> <operator pos:start="181:15" pos:end="181:16">||</operator> <name pos:start="181:18" pos:end="181:18">h</name> <operator pos:start="181:20" pos:end="181:21">&lt;=</operator> <literal type="number" pos:start="181:23" pos:end="181:23">0</literal> <operator pos:start="181:25" pos:end="181:26">||</operator> <call pos:start="181:28" pos:end="181:62"><name pos:start="181:28" pos:end="181:46">av_image_check_size</name><argument_list pos:start="181:47" pos:end="181:62">(<argument pos:start="181:48" pos:end="181:48"><expr pos:start="181:48" pos:end="181:48"><name pos:start="181:48" pos:end="181:48">w</name></expr></argument>, <argument pos:start="181:51" pos:end="181:51"><expr pos:start="181:51" pos:end="181:51"><name pos:start="181:51" pos:end="181:51">h</name></expr></argument>, <argument pos:start="181:54" pos:end="181:54"><expr pos:start="181:54" pos:end="181:54"><literal type="number" pos:start="181:54" pos:end="181:54">0</literal></expr></argument>, <argument pos:start="181:57" pos:end="181:61"><expr pos:start="181:57" pos:end="181:61"><name pos:start="181:57" pos:end="181:61">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="181:64" pos:end="181:65">||</operator> <name pos:start="181:67" pos:end="181:79"><name pos:start="181:67" pos:end="181:67">s</name><operator pos:start="181:68" pos:end="181:69">-&gt;</operator><name pos:start="181:70" pos:end="181:79">bytestream</name></name> <operator pos:start="181:81" pos:end="181:82">&gt;=</operator> <name pos:start="181:84" pos:end="181:100"><name pos:start="181:84" pos:end="181:84">s</name><operator pos:start="181:85" pos:end="181:86">-&gt;</operator><name pos:start="181:87" pos:end="181:100">bytestream_end</name></name></expr>)</condition><block type="pseudo" pos:start="183:9" pos:end="183:35"><block_content pos:start="183:9" pos:end="183:35">

        <return pos:start="183:9" pos:end="183:35">return <expr pos:start="183:16" pos:end="183:34"><name pos:start="183:16" pos:end="183:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:22"><expr pos:start="187:5" pos:end="187:21"><name pos:start="187:5" pos:end="187:16"><name pos:start="187:5" pos:end="187:9">avctx</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:16">width</name></name>  <operator pos:start="187:19" pos:end="187:19">=</operator> <name pos:start="187:21" pos:end="187:21">w</name></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:22"><expr pos:start="189:5" pos:end="189:21"><name pos:start="189:5" pos:end="189:17"><name pos:start="189:5" pos:end="189:9">avctx</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:17">height</name></name> <operator pos:start="189:19" pos:end="189:19">=</operator> <name pos:start="189:21" pos:end="189:21">h</name></expr>;</expr_stmt>



    <if_stmt pos:start="193:5" pos:end="245:20"><if pos:start="193:5" pos:end="243:5">if <condition pos:start="193:8" pos:end="193:89">(<expr pos:start="193:9" pos:end="193:88"><name pos:start="193:9" pos:end="193:22"><name pos:start="193:9" pos:end="193:13">avctx</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:22">pix_fmt</name></name> <operator pos:start="193:24" pos:end="193:25">!=</operator> <name pos:start="193:27" pos:end="193:46">AV_PIX_FMT_MONOWHITE</name> <operator pos:start="193:48" pos:end="193:49">&amp;&amp;</operator> <name pos:start="193:51" pos:end="193:64"><name pos:start="193:51" pos:end="193:55">avctx</name><operator pos:start="193:56" pos:end="193:57">-&gt;</operator><name pos:start="193:58" pos:end="193:64">pix_fmt</name></name> <operator pos:start="193:66" pos:end="193:67">!=</operator> <name pos:start="193:69" pos:end="193:88">AV_PIX_FMT_MONOBLACK</name></expr>)</condition> <block pos:start="193:91" pos:end="243:5">{<block_content pos:start="195:9" pos:end="241:9">

        <expr_stmt pos:start="195:9" pos:end="195:39"><expr pos:start="195:9" pos:end="195:38"><call pos:start="195:9" pos:end="195:38"><name pos:start="195:9" pos:end="195:15">pnm_get</name><argument_list pos:start="195:16" pos:end="195:38">(<argument pos:start="195:17" pos:end="195:17"><expr pos:start="195:17" pos:end="195:17"><name pos:start="195:17" pos:end="195:17">s</name></expr></argument>, <argument pos:start="195:20" pos:end="195:23"><expr pos:start="195:20" pos:end="195:23"><name pos:start="195:20" pos:end="195:23">buf1</name></expr></argument>, <argument pos:start="195:26" pos:end="195:37"><expr pos:start="195:26" pos:end="195:37"><sizeof pos:start="195:26" pos:end="195:37">sizeof<argument_list pos:start="195:32" pos:end="195:37">(<argument pos:start="195:33" pos:end="195:36"><expr pos:start="195:33" pos:end="195:36"><name pos:start="195:33" pos:end="195:36">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:31"><expr pos:start="197:9" pos:end="197:30"><name pos:start="197:9" pos:end="197:17"><name pos:start="197:9" pos:end="197:9">s</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:17">maxval</name></name> <operator pos:start="197:19" pos:end="197:19">=</operator> <call pos:start="197:21" pos:end="197:30"><name pos:start="197:21" pos:end="197:24">atoi</name><argument_list pos:start="197:25" pos:end="197:30">(<argument pos:start="197:26" pos:end="197:29"><expr pos:start="197:26" pos:end="197:29"><name pos:start="197:26" pos:end="197:29">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="199:9" pos:end="205:9"><if pos:start="199:9" pos:end="205:9">if <condition pos:start="199:12" pos:end="199:27">(<expr pos:start="199:13" pos:end="199:26"><name pos:start="199:13" pos:end="199:21"><name pos:start="199:13" pos:end="199:13">s</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:21">maxval</name></name> <operator pos:start="199:23" pos:end="199:24">&lt;=</operator> <literal type="number" pos:start="199:26" pos:end="199:26">0</literal></expr>)</condition> <block pos:start="199:29" pos:end="205:9">{<block_content pos:start="201:13" pos:end="203:28">

            <expr_stmt pos:start="201:13" pos:end="201:75"><expr pos:start="201:13" pos:end="201:74"><call pos:start="201:13" pos:end="201:74"><name pos:start="201:13" pos:end="201:18">av_log</name><argument_list pos:start="201:19" pos:end="201:74">(<argument pos:start="201:20" pos:end="201:24"><expr pos:start="201:20" pos:end="201:24"><name pos:start="201:20" pos:end="201:24">avctx</name></expr></argument>, <argument pos:start="201:27" pos:end="201:38"><expr pos:start="201:27" pos:end="201:38"><name pos:start="201:27" pos:end="201:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="201:41" pos:end="201:62"><expr pos:start="201:41" pos:end="201:62"><literal type="string" pos:start="201:41" pos:end="201:62">"Invalid maxval: %d\n"</literal></expr></argument>, <argument pos:start="201:65" pos:end="201:73"><expr pos:start="201:65" pos:end="201:73"><name pos:start="201:65" pos:end="201:73"><name pos:start="201:65" pos:end="201:65">s</name><operator pos:start="201:66" pos:end="201:67">-&gt;</operator><name pos:start="201:68" pos:end="201:73">maxval</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:28"><expr pos:start="203:13" pos:end="203:27"><name pos:start="203:13" pos:end="203:21"><name pos:start="203:13" pos:end="203:13">s</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:21">maxval</name></name> <operator pos:start="203:23" pos:end="203:23">=</operator> <literal type="number" pos:start="203:25" pos:end="203:27">255</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="207:9" pos:end="241:9"><if pos:start="207:9" pos:end="241:9">if <condition pos:start="207:12" pos:end="207:29">(<expr pos:start="207:13" pos:end="207:28"><name pos:start="207:13" pos:end="207:21"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:21">maxval</name></name> <operator pos:start="207:23" pos:end="207:24">&gt;=</operator> <literal type="number" pos:start="207:26" pos:end="207:28">256</literal></expr>)</condition> <block pos:start="207:31" pos:end="241:9">{<block_content pos:start="209:13" pos:end="239:13">

            <if_stmt pos:start="209:13" pos:end="239:13"><if pos:start="209:13" pos:end="213:13">if <condition pos:start="209:16" pos:end="209:51">(<expr pos:start="209:17" pos:end="209:50"><name pos:start="209:17" pos:end="209:30"><name pos:start="209:17" pos:end="209:21">avctx</name><operator pos:start="209:22" pos:end="209:23">-&gt;</operator><name pos:start="209:24" pos:end="209:30">pix_fmt</name></name> <operator pos:start="209:32" pos:end="209:33">==</operator> <name pos:start="209:35" pos:end="209:50">AV_PIX_FMT_GRAY8</name></expr>)</condition> <block pos:start="209:53" pos:end="213:13">{<block_content pos:start="211:17" pos:end="211:51">

                <expr_stmt pos:start="211:17" pos:end="211:51"><expr pos:start="211:17" pos:end="211:50"><name pos:start="211:17" pos:end="211:30"><name pos:start="211:17" pos:end="211:21">avctx</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:30">pix_fmt</name></name> <operator pos:start="211:32" pos:end="211:32">=</operator> <name pos:start="211:34" pos:end="211:50">AV_PIX_FMT_GRAY16</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="213:15" pos:end="217:13">else if <condition pos:start="213:23" pos:end="213:58">(<expr pos:start="213:24" pos:end="213:57"><name pos:start="213:24" pos:end="213:37"><name pos:start="213:24" pos:end="213:28">avctx</name><operator pos:start="213:29" pos:end="213:30">-&gt;</operator><name pos:start="213:31" pos:end="213:37">pix_fmt</name></name> <operator pos:start="213:39" pos:end="213:40">==</operator> <name pos:start="213:42" pos:end="213:57">AV_PIX_FMT_RGB24</name></expr>)</condition> <block pos:start="213:60" pos:end="217:13">{<block_content pos:start="215:17" pos:end="215:50">

                <expr_stmt pos:start="215:17" pos:end="215:50"><expr pos:start="215:17" pos:end="215:49"><name pos:start="215:17" pos:end="215:30"><name pos:start="215:17" pos:end="215:21">avctx</name><operator pos:start="215:22" pos:end="215:23">-&gt;</operator><name pos:start="215:24" pos:end="215:30">pix_fmt</name></name> <operator pos:start="215:32" pos:end="215:32">=</operator> <name pos:start="215:34" pos:end="215:49">AV_PIX_FMT_RGB48</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="217:15" pos:end="231:13">else if <condition pos:start="217:23" pos:end="217:81">(<expr pos:start="217:24" pos:end="217:80"><name pos:start="217:24" pos:end="217:37"><name pos:start="217:24" pos:end="217:28">avctx</name><operator pos:start="217:29" pos:end="217:30">-&gt;</operator><name pos:start="217:31" pos:end="217:37">pix_fmt</name></name> <operator pos:start="217:39" pos:end="217:40">==</operator> <name pos:start="217:42" pos:end="217:59">AV_PIX_FMT_YUV420P</name> <operator pos:start="217:61" pos:end="217:62">&amp;&amp;</operator> <name pos:start="217:64" pos:end="217:72"><name pos:start="217:64" pos:end="217:64">s</name><operator pos:start="217:65" pos:end="217:66">-&gt;</operator><name pos:start="217:67" pos:end="217:72">maxval</name></name> <operator pos:start="217:74" pos:end="217:74">&lt;</operator> <literal type="number" pos:start="217:76" pos:end="217:80">65536</literal></expr>)</condition> <block pos:start="217:83" pos:end="231:13">{<block_content pos:start="219:17" pos:end="229:58">

                <if_stmt pos:start="219:17" pos:end="229:58"><if pos:start="219:17" pos:end="221:57">if <condition pos:start="219:20" pos:end="219:36">(<expr pos:start="219:21" pos:end="219:35"><name pos:start="219:21" pos:end="219:29"><name pos:start="219:21" pos:end="219:21">s</name><operator pos:start="219:22" pos:end="219:23">-&gt;</operator><name pos:start="219:24" pos:end="219:29">maxval</name></name> <operator pos:start="219:31" pos:end="219:31">&lt;</operator> <literal type="number" pos:start="219:33" pos:end="219:35">512</literal></expr>)</condition><block type="pseudo" pos:start="221:21" pos:end="221:57"><block_content pos:start="221:21" pos:end="221:57">

                    <expr_stmt pos:start="221:21" pos:end="221:57"><expr pos:start="221:21" pos:end="221:56"><name pos:start="221:21" pos:end="221:34"><name pos:start="221:21" pos:end="221:25">avctx</name><operator pos:start="221:26" pos:end="221:27">-&gt;</operator><name pos:start="221:28" pos:end="221:34">pix_fmt</name></name> <operator pos:start="221:36" pos:end="221:36">=</operator> <name pos:start="221:38" pos:end="221:56">AV_PIX_FMT_YUV420P9</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="223:17" pos:end="225:58">else if <condition pos:start="223:25" pos:end="223:42">(<expr pos:start="223:26" pos:end="223:41"><name pos:start="223:26" pos:end="223:34"><name pos:start="223:26" pos:end="223:26">s</name><operator pos:start="223:27" pos:end="223:28">-&gt;</operator><name pos:start="223:29" pos:end="223:34">maxval</name></name> <operator pos:start="223:36" pos:end="223:36">&lt;</operator> <literal type="number" pos:start="223:38" pos:end="223:41">1024</literal></expr>)</condition><block type="pseudo" pos:start="225:21" pos:end="225:58"><block_content pos:start="225:21" pos:end="225:58">

                    <expr_stmt pos:start="225:21" pos:end="225:58"><expr pos:start="225:21" pos:end="225:57"><name pos:start="225:21" pos:end="225:34"><name pos:start="225:21" pos:end="225:25">avctx</name><operator pos:start="225:26" pos:end="225:27">-&gt;</operator><name pos:start="225:28" pos:end="225:34">pix_fmt</name></name> <operator pos:start="225:36" pos:end="225:36">=</operator> <name pos:start="225:38" pos:end="225:57">AV_PIX_FMT_YUV420P10</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="227:17" pos:end="229:58">else<block type="pseudo" pos:start="229:21" pos:end="229:58"><block_content pos:start="229:21" pos:end="229:58">

                    <expr_stmt pos:start="229:21" pos:end="229:58"><expr pos:start="229:21" pos:end="229:57"><name pos:start="229:21" pos:end="229:34"><name pos:start="229:21" pos:end="229:25">avctx</name><operator pos:start="229:26" pos:end="229:27">-&gt;</operator><name pos:start="229:28" pos:end="229:34">pix_fmt</name></name> <operator pos:start="229:36" pos:end="229:36">=</operator> <name pos:start="229:38" pos:end="229:57">AV_PIX_FMT_YUV420P16</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="231:15" pos:end="239:13">else <block pos:start="231:20" pos:end="239:13">{<block_content pos:start="233:17" pos:end="237:43">

                <expr_stmt pos:start="233:17" pos:end="233:74"><expr pos:start="233:17" pos:end="233:73"><call pos:start="233:17" pos:end="233:73"><name pos:start="233:17" pos:end="233:22">av_log</name><argument_list pos:start="233:23" pos:end="233:73">(<argument pos:start="233:24" pos:end="233:28"><expr pos:start="233:24" pos:end="233:28"><name pos:start="233:24" pos:end="233:28">avctx</name></expr></argument>, <argument pos:start="233:31" pos:end="233:42"><expr pos:start="233:31" pos:end="233:42"><name pos:start="233:31" pos:end="233:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="233:45" pos:end="233:72"><expr pos:start="233:45" pos:end="233:72"><literal type="string" pos:start="233:45" pos:end="233:72">"Unsupported pixel format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="235:17" pos:end="235:49"><expr pos:start="235:17" pos:end="235:48"><name pos:start="235:17" pos:end="235:30"><name pos:start="235:17" pos:end="235:21">avctx</name><operator pos:start="235:22" pos:end="235:23">-&gt;</operator><name pos:start="235:24" pos:end="235:30">pix_fmt</name></name> <operator pos:start="235:32" pos:end="235:32">=</operator> <name pos:start="235:34" pos:end="235:48">AV_PIX_FMT_NONE</name></expr>;</expr_stmt>

                <return pos:start="237:17" pos:end="237:43">return <expr pos:start="237:24" pos:end="237:42"><name pos:start="237:24" pos:end="237:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="243:6" pos:end="245:20">else<block type="pseudo" pos:start="245:9" pos:end="245:20"><block_content pos:start="245:9" pos:end="245:20">

        <expr_stmt pos:start="245:9" pos:end="245:20"><expr pos:start="245:9" pos:end="245:19"><name pos:start="245:9" pos:end="245:17"><name pos:start="245:9" pos:end="245:9">s</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:17">maxval</name></name><operator pos:start="245:18" pos:end="245:18">=</operator><literal type="number" pos:start="245:19" pos:end="245:19">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <comment type="block" pos:start="247:5" pos:end="247:30">/* more check if YUV420 */</comment>

    <if_stmt pos:start="249:5" pos:end="265:5"><if pos:start="249:5" pos:end="265:5">if <condition pos:start="249:8" pos:end="249:76">(<expr pos:start="249:9" pos:end="249:75"><call pos:start="249:9" pos:end="249:43"><name pos:start="249:9" pos:end="249:27">av_pix_fmt_desc_get</name><argument_list pos:start="249:28" pos:end="249:43">(<argument pos:start="249:29" pos:end="249:42"><expr pos:start="249:29" pos:end="249:42"><name pos:start="249:29" pos:end="249:42"><name pos:start="249:29" pos:end="249:33">avctx</name><operator pos:start="249:34" pos:end="249:35">-&gt;</operator><name pos:start="249:36" pos:end="249:42">pix_fmt</name></name></expr></argument>)</argument_list></call><operator pos:start="249:44" pos:end="249:45">-&gt;</operator><name pos:start="249:46" pos:end="249:50">flags</name> <operator pos:start="249:52" pos:end="249:52">&amp;</operator> <name pos:start="249:54" pos:end="249:75">AV_PIX_FMT_FLAG_PLANAR</name></expr>)</condition> <block pos:start="249:78" pos:end="265:5">{<block_content pos:start="251:9" pos:end="263:26">

        <if_stmt pos:start="251:9" pos:end="253:39"><if pos:start="251:9" pos:end="253:39">if <condition pos:start="251:12" pos:end="251:36">(<expr pos:start="251:13" pos:end="251:35"><operator pos:start="251:13" pos:end="251:13">(</operator><name pos:start="251:14" pos:end="251:25"><name pos:start="251:14" pos:end="251:18">avctx</name><operator pos:start="251:19" pos:end="251:20">-&gt;</operator><name pos:start="251:21" pos:end="251:25">width</name></name> <operator pos:start="251:27" pos:end="251:27">&amp;</operator> <literal type="number" pos:start="251:29" pos:end="251:29">1</literal><operator pos:start="251:30" pos:end="251:30">)</operator> <operator pos:start="251:32" pos:end="251:33">!=</operator> <literal type="number" pos:start="251:35" pos:end="251:35">0</literal></expr>)</condition><block type="pseudo" pos:start="253:13" pos:end="253:39"><block_content pos:start="253:13" pos:end="253:39">

            <return pos:start="253:13" pos:end="253:39">return <expr pos:start="253:20" pos:end="253:38"><name pos:start="253:20" pos:end="253:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:32"><expr pos:start="255:9" pos:end="255:31"><name pos:start="255:9" pos:end="255:9">h</name> <operator pos:start="255:11" pos:end="255:11">=</operator> <operator pos:start="255:13" pos:end="255:13">(</operator><name pos:start="255:14" pos:end="255:26"><name pos:start="255:14" pos:end="255:18">avctx</name><operator pos:start="255:19" pos:end="255:20">-&gt;</operator><name pos:start="255:21" pos:end="255:26">height</name></name> <operator pos:start="255:28" pos:end="255:28">*</operator> <literal type="number" pos:start="255:30" pos:end="255:30">2</literal><operator pos:start="255:31" pos:end="255:31">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="257:9" pos:end="259:39"><if pos:start="257:9" pos:end="259:39">if <condition pos:start="257:12" pos:end="257:25">(<expr pos:start="257:13" pos:end="257:24"><operator pos:start="257:13" pos:end="257:13">(</operator><name pos:start="257:14" pos:end="257:14">h</name> <operator pos:start="257:16" pos:end="257:16">%</operator> <literal type="number" pos:start="257:18" pos:end="257:18">3</literal><operator pos:start="257:19" pos:end="257:19">)</operator> <operator pos:start="257:21" pos:end="257:22">!=</operator> <literal type="number" pos:start="257:24" pos:end="257:24">0</literal></expr>)</condition><block type="pseudo" pos:start="259:13" pos:end="259:39"><block_content pos:start="259:13" pos:end="259:39">

            <return pos:start="259:13" pos:end="259:39">return <expr pos:start="259:20" pos:end="259:38"><name pos:start="259:20" pos:end="259:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="261:9" pos:end="261:15"><expr pos:start="261:9" pos:end="261:14"><name pos:start="261:9" pos:end="261:9">h</name> <operator pos:start="261:11" pos:end="261:12">/=</operator> <literal type="number" pos:start="261:14" pos:end="261:14">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="263:9" pos:end="263:26"><expr pos:start="263:9" pos:end="263:25"><name pos:start="263:9" pos:end="263:21"><name pos:start="263:9" pos:end="263:13">avctx</name><operator pos:start="263:14" pos:end="263:15">-&gt;</operator><name pos:start="263:16" pos:end="263:21">height</name></name> <operator pos:start="263:23" pos:end="263:23">=</operator> <name pos:start="263:25" pos:end="263:25">h</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="267:5" pos:end="267:13">return <expr pos:start="267:12" pos:end="267:12"><literal type="number" pos:start="267:12" pos:end="267:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
