<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22209.c" pos:tabs="8"><function pos:start="1:1" pos:end="261:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">cpu_x86_handle_mmu_fault</name><parameter_list pos:start="1:29" pos:end="3:71">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:40">CPUX86State</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">uint32_t</name></type> <name pos:start="1:57" pos:end="1:60">addr</name></decl></parameter>, 

                             <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:41">is_write</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:54"><decl pos:start="3:44" pos:end="3:54"><type pos:start="3:44" pos:end="3:54"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:54">is_user</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:70"><decl pos:start="3:57" pos:end="3:70"><type pos:start="3:57" pos:end="3:70"><name pos:start="3:57" pos:end="3:59">int</name></type> <name pos:start="3:61" pos:end="3:70">is_softmmu</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="261:1">{<block_content pos:start="7:5" pos:end="259:13">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:20">pde_ptr</name></decl>, <decl pos:start="7:23" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:30">pte_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">pde</name></decl>, <decl pos:start="9:19" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:19" pos:end="9:21">pte</name></decl>, <decl pos:start="9:24" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:24" pos:end="9:32">virt_addr</name></decl>, <decl pos:start="9:35" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:35" pos:end="9:38">ptep</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">error_code</name></decl>, <decl pos:start="11:21" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:28">is_dirty</name></decl>, <decl pos:start="11:31" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:31" pos:end="11:34">prot</name></decl>, <decl pos:start="11:37" pos:end="11:45"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:37" pos:end="11:45">page_size</name></decl>, <decl pos:start="11:48" pos:end="11:50"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:48" pos:end="11:50">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="18:0"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">long</name></type> <name pos:start="13:19" pos:end="13:23">paddr</name></decl>, <decl pos:start="13:26" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:17"/><name pos:start="13:26" pos:end="13:30">vaddr</name></decl>, <decl pos:start="13:33" pos:end="13:43"><type ref="prev" pos:start="13:5" pos:end="13:17"/><name pos:start="13:33" pos:end="13:43">page_offset</name></decl>;</decl_stmt>

    

<cpp:if pos:start="17:1" pos:end="17:22">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:22"><call pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:11">defined</name><argument_list pos:start="17:12" pos:end="17:22">(<argument pos:start="17:13" pos:end="17:21"><expr pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:21">DEBUG_MMU</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="19:5" pos:end="24:0"><expr pos:start="19:5" pos:end="21:45"><call pos:start="19:5" pos:end="21:45"><name pos:start="19:5" pos:end="19:10">printf</name><argument_list pos:start="19:11" pos:end="21:45">(<argument pos:start="19:12" pos:end="19:56"><expr pos:start="19:12" pos:end="19:56"><literal type="string" pos:start="19:12" pos:end="19:56">"MMU fault: addr=0x%08x w=%d u=%d eip=%08x\n"</literal></expr></argument>, 

           <argument pos:start="21:12" pos:end="21:15"><expr pos:start="21:12" pos:end="21:15"><name pos:start="21:12" pos:end="21:15">addr</name></expr></argument>, <argument pos:start="21:18" pos:end="21:25"><expr pos:start="21:18" pos:end="21:25"><name pos:start="21:18" pos:end="21:25">is_write</name></expr></argument>, <argument pos:start="21:28" pos:end="21:34"><expr pos:start="21:28" pos:end="21:34"><name pos:start="21:28" pos:end="21:34">is_user</name></expr></argument>, <argument pos:start="21:37" pos:end="21:44"><expr pos:start="21:37" pos:end="21:44"><name pos:start="21:37" pos:end="21:44"><name pos:start="21:37" pos:end="21:39">env</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:44">eip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:28">(<expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:11">env</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:27">user_mode_only</name></name></expr>)</condition> <block pos:start="27:30" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:22">

        <comment type="block" pos:start="29:9" pos:end="29:38">/* user mode only emulation */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:23"><expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:18">error_code</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:22">goto <name pos:start="33:14" pos:end="33:21">do_fault</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="51:5"><if pos:start="39:5" pos:end="51:5">if <condition pos:start="39:8" pos:end="39:36">(<expr pos:start="39:9" pos:end="39:35"><operator pos:start="39:9" pos:end="39:9">!</operator><operator pos:start="39:10" pos:end="39:10">(</operator><name pos:start="39:11" pos:end="39:20"><name pos:start="39:11" pos:end="39:13">env</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:17">cr</name><index pos:start="39:18" pos:end="39:20">[<expr pos:start="39:19" pos:end="39:19"><literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>]</index></name> <operator pos:start="39:22" pos:end="39:22">&amp;</operator> <name pos:start="39:24" pos:end="39:34">CR0_PG_MASK</name><operator pos:start="39:35" pos:end="39:35">)</operator></expr>)</condition> <block pos:start="39:38" pos:end="51:5">{<block_content pos:start="41:9" pos:end="49:24">

        <expr_stmt pos:start="41:9" pos:end="41:19"><expr pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:11">pte</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:18">addr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:44"><expr pos:start="43:9" pos:end="43:43"><name pos:start="43:9" pos:end="43:17">virt_addr</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:24">addr</name> <operator pos:start="43:26" pos:end="43:26">&amp;</operator> <name pos:start="43:28" pos:end="43:43">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:38"><expr pos:start="45:9" pos:end="45:37"><name pos:start="45:9" pos:end="45:12">prot</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <name pos:start="45:16" pos:end="45:24">PROT_READ</name> <operator pos:start="45:26" pos:end="45:26">|</operator> <name pos:start="45:28" pos:end="45:37">PROT_WRITE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:25"><expr pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:17">page_size</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <literal type="number" pos:start="47:21" pos:end="47:24">4096</literal></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:24">goto <name pos:start="49:14" pos:end="49:23">do_mapping</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:30">/* page directory entry */</comment>

    <expr_stmt pos:start="57:5" pos:end="59:67"><expr pos:start="57:5" pos:end="59:66"><name pos:start="57:5" pos:end="57:11">pde_ptr</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:27">phys_ram_base</name> <operator pos:start="57:29" pos:end="57:29">+</operator> 

        <operator pos:start="59:9" pos:end="59:9">(</operator><operator pos:start="59:10" pos:end="59:10">(</operator><operator pos:start="59:11" pos:end="59:11">(</operator><name pos:start="59:12" pos:end="59:21"><name pos:start="59:12" pos:end="59:14">env</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:18">cr</name><index pos:start="59:19" pos:end="59:21">[<expr pos:start="59:20" pos:end="59:20"><literal type="number" pos:start="59:20" pos:end="59:20">3</literal></expr>]</index></name> <operator pos:start="59:23" pos:end="59:23">&amp;</operator> <operator pos:start="59:25" pos:end="59:25">~</operator><literal type="number" pos:start="59:26" pos:end="59:30">0xfff</literal><operator pos:start="59:31" pos:end="59:31">)</operator> <operator pos:start="59:33" pos:end="59:33">+</operator> <operator pos:start="59:35" pos:end="59:35">(</operator><operator pos:start="59:36" pos:end="59:36">(</operator><name pos:start="59:37" pos:end="59:40">addr</name> <operator pos:start="59:42" pos:end="59:43">&gt;&gt;</operator> <literal type="number" pos:start="59:45" pos:end="59:46">20</literal><operator pos:start="59:47" pos:end="59:47">)</operator> <operator pos:start="59:49" pos:end="59:49">&amp;</operator> <operator pos:start="59:51" pos:end="59:51">~</operator><literal type="number" pos:start="59:52" pos:end="59:52">3</literal><operator pos:start="59:53" pos:end="59:53">)</operator><operator pos:start="59:54" pos:end="59:54">)</operator> <operator pos:start="59:56" pos:end="59:56">&amp;</operator> <name pos:start="59:58" pos:end="59:65">a20_mask</name><operator pos:start="59:66" pos:end="59:66">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:27"><expr pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:7">pde</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <call pos:start="61:11" pos:end="61:26"><name pos:start="61:11" pos:end="61:17">ldl_raw</name><argument_list pos:start="61:18" pos:end="61:26">(<argument pos:start="61:19" pos:end="61:25"><expr pos:start="61:19" pos:end="61:25"><name pos:start="61:19" pos:end="61:25">pde_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:33">(<expr pos:start="63:9" pos:end="63:32"><operator pos:start="63:9" pos:end="63:9">!</operator><operator pos:start="63:10" pos:end="63:10">(</operator><name pos:start="63:11" pos:end="63:13">pde</name> <operator pos:start="63:15" pos:end="63:15">&amp;</operator> <name pos:start="63:17" pos:end="63:31">PG_PRESENT_MASK</name><operator pos:start="63:32" pos:end="63:32">)</operator></expr>)</condition> <block pos:start="63:35" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:22">

        <expr_stmt pos:start="65:9" pos:end="65:23"><expr pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:18">error_code</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>;</expr_stmt>

        <goto pos:start="67:9" pos:end="67:22">goto <name pos:start="67:14" pos:end="67:21">do_fault</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="71:5" pos:end="71:51">/* if PSE bit is set, then we use a 4MB page */</comment>

    <if_stmt pos:start="73:5" pos:end="189:5"><if pos:start="73:5" pos:end="119:5">if <condition pos:start="73:8" pos:end="73:59">(<expr pos:start="73:9" pos:end="73:58"><operator pos:start="73:9" pos:end="73:9">(</operator><name pos:start="73:10" pos:end="73:12">pde</name> <operator pos:start="73:14" pos:end="73:14">&amp;</operator> <name pos:start="73:16" pos:end="73:26">PG_PSE_MASK</name><operator pos:start="73:27" pos:end="73:27">)</operator> <operator pos:start="73:29" pos:end="73:30">&amp;&amp;</operator> <operator pos:start="73:32" pos:end="73:32">(</operator><name pos:start="73:33" pos:end="73:42"><name pos:start="73:33" pos:end="73:35">env</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:39">cr</name><index pos:start="73:40" pos:end="73:42">[<expr pos:start="73:41" pos:end="73:41"><literal type="number" pos:start="73:41" pos:end="73:41">4</literal></expr>]</index></name> <operator pos:start="73:44" pos:end="73:44">&amp;</operator> <name pos:start="73:46" pos:end="73:57">CR4_PSE_MASK</name><operator pos:start="73:58" pos:end="73:58">)</operator></expr>)</condition> <block pos:start="73:61" pos:end="119:5">{<block_content pos:start="75:9" pos:end="117:39">

        <if_stmt pos:start="75:9" pos:end="93:9"><if pos:start="75:9" pos:end="85:9">if <condition pos:start="75:12" pos:end="75:20">(<expr pos:start="75:13" pos:end="75:19"><name pos:start="75:13" pos:end="75:19">is_user</name></expr>)</condition> <block pos:start="75:22" pos:end="85:9">{<block_content pos:start="77:13" pos:end="83:38">

            <if_stmt pos:start="77:13" pos:end="79:38"><if pos:start="77:13" pos:end="79:38">if <condition pos:start="77:16" pos:end="77:38">(<expr pos:start="77:17" pos:end="77:37"><operator pos:start="77:17" pos:end="77:17">!</operator><operator pos:start="77:18" pos:end="77:18">(</operator><name pos:start="77:19" pos:end="77:21">pde</name> <operator pos:start="77:23" pos:end="77:23">&amp;</operator> <name pos:start="77:25" pos:end="77:36">PG_USER_MASK</name><operator pos:start="77:37" pos:end="77:37">)</operator></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:38"><block_content pos:start="79:17" pos:end="79:38">

                <goto pos:start="79:17" pos:end="79:38">goto <name pos:start="79:22" pos:end="79:37">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="81:13" pos:end="83:38"><if pos:start="81:13" pos:end="83:38">if <condition pos:start="81:16" pos:end="81:48">(<expr pos:start="81:17" pos:end="81:47"><name pos:start="81:17" pos:end="81:24">is_write</name> <operator pos:start="81:26" pos:end="81:27">&amp;&amp;</operator> <operator pos:start="81:29" pos:end="81:29">!</operator><operator pos:start="81:30" pos:end="81:30">(</operator><name pos:start="81:31" pos:end="81:33">pde</name> <operator pos:start="81:35" pos:end="81:35">&amp;</operator> <name pos:start="81:37" pos:end="81:46">PG_RW_MASK</name><operator pos:start="81:47" pos:end="81:47">)</operator></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:38"><block_content pos:start="83:17" pos:end="83:38">

                <goto pos:start="83:17" pos:end="83:38">goto <name pos:start="83:22" pos:end="83:37">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="85:11" pos:end="93:9">else <block pos:start="85:16" pos:end="93:9">{<block_content pos:start="87:13" pos:end="91:38">

            <if_stmt pos:start="87:13" pos:end="91:38"><if pos:start="87:13" pos:end="91:38">if <condition pos:start="87:16" pos:end="89:48">(<expr pos:start="87:17" pos:end="89:47"><operator pos:start="87:17" pos:end="87:17">(</operator><name pos:start="87:18" pos:end="87:27"><name pos:start="87:18" pos:end="87:20">env</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:24">cr</name><index pos:start="87:25" pos:end="87:27">[<expr pos:start="87:26" pos:end="87:26"><literal type="number" pos:start="87:26" pos:end="87:26">0</literal></expr>]</index></name> <operator pos:start="87:29" pos:end="87:29">&amp;</operator> <name pos:start="87:31" pos:end="87:41">CR0_WP_MASK</name><operator pos:start="87:42" pos:end="87:42">)</operator> <operator pos:start="87:44" pos:end="87:45">&amp;&amp;</operator> <operator pos:start="87:47" pos:end="87:47">(</operator><name pos:start="87:48" pos:end="87:50">pde</name> <operator pos:start="87:52" pos:end="87:52">&amp;</operator> <name pos:start="87:54" pos:end="87:65">PG_USER_MASK</name><operator pos:start="87:66" pos:end="87:66">)</operator> <operator pos:start="87:68" pos:end="87:69">&amp;&amp;</operator>

                <name pos:start="89:17" pos:end="89:24">is_write</name> <operator pos:start="89:26" pos:end="89:27">&amp;&amp;</operator> <operator pos:start="89:29" pos:end="89:29">!</operator><operator pos:start="89:30" pos:end="89:30">(</operator><name pos:start="89:31" pos:end="89:33">pde</name> <operator pos:start="89:35" pos:end="89:35">&amp;</operator> <name pos:start="89:37" pos:end="89:46">PG_RW_MASK</name><operator pos:start="89:47" pos:end="89:47">)</operator></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:38"><block_content pos:start="91:17" pos:end="91:38"> 

                <goto pos:start="91:17" pos:end="91:38">goto <name pos:start="91:22" pos:end="91:37">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:54"><expr pos:start="95:9" pos:end="95:53"><name pos:start="95:9" pos:end="95:16">is_dirty</name> <operator pos:start="95:18" pos:end="95:18">=</operator> <name pos:start="95:20" pos:end="95:27">is_write</name> <operator pos:start="95:29" pos:end="95:30">&amp;&amp;</operator> <operator pos:start="95:32" pos:end="95:32">!</operator><operator pos:start="95:33" pos:end="95:33">(</operator><name pos:start="95:34" pos:end="95:36">pde</name> <operator pos:start="95:38" pos:end="95:38">&amp;</operator> <name pos:start="95:40" pos:end="95:52">PG_DIRTY_MASK</name><operator pos:start="95:53" pos:end="95:53">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="107:9"><if pos:start="97:9" pos:end="107:9">if <condition pos:start="97:12" pos:end="97:50">(<expr pos:start="97:13" pos:end="97:49"><operator pos:start="97:13" pos:end="97:13">!</operator><operator pos:start="97:14" pos:end="97:14">(</operator><name pos:start="97:15" pos:end="97:17">pde</name> <operator pos:start="97:19" pos:end="97:19">&amp;</operator> <name pos:start="97:21" pos:end="97:36">PG_ACCESSED_MASK</name><operator pos:start="97:37" pos:end="97:37">)</operator> <operator pos:start="97:39" pos:end="97:40">||</operator> <name pos:start="97:42" pos:end="97:49">is_dirty</name></expr>)</condition> <block pos:start="97:52" pos:end="107:9">{<block_content pos:start="99:13" pos:end="105:34">

            <expr_stmt pos:start="99:13" pos:end="99:36"><expr pos:start="99:13" pos:end="99:35"><name pos:start="99:13" pos:end="99:15">pde</name> <operator pos:start="99:17" pos:end="99:18">|=</operator> <name pos:start="99:20" pos:end="99:35">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="103:37"><if pos:start="101:13" pos:end="103:37">if <condition pos:start="101:16" pos:end="101:25">(<expr pos:start="101:17" pos:end="101:24"><name pos:start="101:17" pos:end="101:24">is_dirty</name></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:37"><block_content pos:start="103:17" pos:end="103:37">

                <expr_stmt pos:start="103:17" pos:end="103:37"><expr pos:start="103:17" pos:end="103:36"><name pos:start="103:17" pos:end="103:19">pde</name> <operator pos:start="103:21" pos:end="103:22">|=</operator> <name pos:start="103:24" pos:end="103:36">PG_DIRTY_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:34"><expr pos:start="105:13" pos:end="105:33"><call pos:start="105:13" pos:end="105:33"><name pos:start="105:13" pos:end="105:19">stl_raw</name><argument_list pos:start="105:20" pos:end="105:33">(<argument pos:start="105:21" pos:end="105:27"><expr pos:start="105:21" pos:end="105:27"><name pos:start="105:21" pos:end="105:27">pde_ptr</name></expr></argument>, <argument pos:start="105:30" pos:end="105:32"><expr pos:start="105:30" pos:end="105:32"><name pos:start="105:30" pos:end="105:32">pde</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        

        <expr_stmt pos:start="111:9" pos:end="111:32"><expr pos:start="111:9" pos:end="111:31"><name pos:start="111:9" pos:end="111:11">pte</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <name pos:start="111:15" pos:end="111:17">pde</name> <operator pos:start="111:19" pos:end="111:19">&amp;</operator> <operator pos:start="111:21" pos:end="111:21">~</operator><literal type="number" pos:start="111:22" pos:end="111:31">0x003ff000</literal></expr>;</expr_stmt> <comment type="block" pos:start="111:34" pos:end="111:51">/* align to 4MB */</comment>

        <expr_stmt pos:start="113:9" pos:end="113:19"><expr pos:start="113:9" pos:end="113:18"><name pos:start="113:9" pos:end="113:12">ptep</name> <operator pos:start="113:14" pos:end="113:14">=</operator> <name pos:start="113:16" pos:end="113:18">pte</name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:32"><expr pos:start="115:9" pos:end="115:31"><name pos:start="115:9" pos:end="115:17">page_size</name> <operator pos:start="115:19" pos:end="115:19">=</operator> <literal type="number" pos:start="115:21" pos:end="115:24">4096</literal> <operator pos:start="115:26" pos:end="115:26">*</operator> <literal type="number" pos:start="115:28" pos:end="115:31">1024</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:39"><expr pos:start="117:9" pos:end="117:38"><name pos:start="117:9" pos:end="117:17">virt_addr</name> <operator pos:start="117:19" pos:end="117:19">=</operator> <name pos:start="117:21" pos:end="117:24">addr</name> <operator pos:start="117:26" pos:end="117:26">&amp;</operator> <operator pos:start="117:28" pos:end="117:28">~</operator><literal type="number" pos:start="117:29" pos:end="117:38">0x003fffff</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="119:7" pos:end="189:5">else <block pos:start="119:12" pos:end="189:5">{<block_content pos:start="121:9" pos:end="187:34">

        <if_stmt pos:start="121:9" pos:end="127:9"><if pos:start="121:9" pos:end="127:9">if <condition pos:start="121:12" pos:end="121:38">(<expr pos:start="121:13" pos:end="121:37"><operator pos:start="121:13" pos:end="121:13">!</operator><operator pos:start="121:14" pos:end="121:14">(</operator><name pos:start="121:15" pos:end="121:17">pde</name> <operator pos:start="121:19" pos:end="121:19">&amp;</operator> <name pos:start="121:21" pos:end="121:36">PG_ACCESSED_MASK</name><operator pos:start="121:37" pos:end="121:37">)</operator></expr>)</condition> <block pos:start="121:40" pos:end="127:9">{<block_content pos:start="123:13" pos:end="125:34">

            <expr_stmt pos:start="123:13" pos:end="123:36"><expr pos:start="123:13" pos:end="123:35"><name pos:start="123:13" pos:end="123:15">pde</name> <operator pos:start="123:17" pos:end="123:18">|=</operator> <name pos:start="123:20" pos:end="123:35">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:34"><expr pos:start="125:13" pos:end="125:33"><call pos:start="125:13" pos:end="125:33"><name pos:start="125:13" pos:end="125:19">stl_raw</name><argument_list pos:start="125:20" pos:end="125:33">(<argument pos:start="125:21" pos:end="125:27"><expr pos:start="125:21" pos:end="125:27"><name pos:start="125:21" pos:end="125:27">pde_ptr</name></expr></argument>, <argument pos:start="125:30" pos:end="125:32"><expr pos:start="125:30" pos:end="125:32"><name pos:start="125:30" pos:end="125:32">pde</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="131:9" pos:end="131:34">/* page directory entry */</comment>

        <expr_stmt pos:start="133:9" pos:end="135:67"><expr pos:start="133:9" pos:end="135:66"><name pos:start="133:9" pos:end="133:15">pte_ptr</name> <operator pos:start="133:17" pos:end="133:17">=</operator> <name pos:start="133:19" pos:end="133:31">phys_ram_base</name> <operator pos:start="133:33" pos:end="133:33">+</operator> 

            <operator pos:start="135:13" pos:end="135:13">(</operator><operator pos:start="135:14" pos:end="135:14">(</operator><operator pos:start="135:15" pos:end="135:15">(</operator><name pos:start="135:16" pos:end="135:18">pde</name> <operator pos:start="135:20" pos:end="135:20">&amp;</operator> <operator pos:start="135:22" pos:end="135:22">~</operator><literal type="number" pos:start="135:23" pos:end="135:27">0xfff</literal><operator pos:start="135:28" pos:end="135:28">)</operator> <operator pos:start="135:30" pos:end="135:30">+</operator> <operator pos:start="135:32" pos:end="135:32">(</operator><operator pos:start="135:33" pos:end="135:33">(</operator><name pos:start="135:34" pos:end="135:37">addr</name> <operator pos:start="135:39" pos:end="135:40">&gt;&gt;</operator> <literal type="number" pos:start="135:42" pos:end="135:43">10</literal><operator pos:start="135:44" pos:end="135:44">)</operator> <operator pos:start="135:46" pos:end="135:46">&amp;</operator> <literal type="number" pos:start="135:48" pos:end="135:52">0xffc</literal><operator pos:start="135:53" pos:end="135:53">)</operator><operator pos:start="135:54" pos:end="135:54">)</operator> <operator pos:start="135:56" pos:end="135:56">&amp;</operator> <name pos:start="135:58" pos:end="135:65">a20_mask</name><operator pos:start="135:66" pos:end="135:66">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:31"><expr pos:start="137:9" pos:end="137:30"><name pos:start="137:9" pos:end="137:11">pte</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <call pos:start="137:15" pos:end="137:30"><name pos:start="137:15" pos:end="137:21">ldl_raw</name><argument_list pos:start="137:22" pos:end="137:30">(<argument pos:start="137:23" pos:end="137:29"><expr pos:start="137:23" pos:end="137:29"><name pos:start="137:23" pos:end="137:29">pte_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="145:9"><if pos:start="139:9" pos:end="145:9">if <condition pos:start="139:12" pos:end="139:37">(<expr pos:start="139:13" pos:end="139:36"><operator pos:start="139:13" pos:end="139:13">!</operator><operator pos:start="139:14" pos:end="139:14">(</operator><name pos:start="139:15" pos:end="139:17">pte</name> <operator pos:start="139:19" pos:end="139:19">&amp;</operator> <name pos:start="139:21" pos:end="139:35">PG_PRESENT_MASK</name><operator pos:start="139:36" pos:end="139:36">)</operator></expr>)</condition> <block pos:start="139:39" pos:end="145:9">{<block_content pos:start="141:13" pos:end="143:26">

            <expr_stmt pos:start="141:13" pos:end="141:27"><expr pos:start="141:13" pos:end="141:26"><name pos:start="141:13" pos:end="141:22">error_code</name> <operator pos:start="141:24" pos:end="141:24">=</operator> <literal type="number" pos:start="141:26" pos:end="141:26">0</literal></expr>;</expr_stmt>

            <goto pos:start="143:13" pos:end="143:26">goto <name pos:start="143:18" pos:end="143:25">do_fault</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="147:9" pos:end="147:57">/* combine pde and pte user and rw protections */</comment>

        <expr_stmt pos:start="149:9" pos:end="149:25"><expr pos:start="149:9" pos:end="149:24"><name pos:start="149:9" pos:end="149:12">ptep</name> <operator pos:start="149:14" pos:end="149:14">=</operator> <name pos:start="149:16" pos:end="149:18">pte</name> <operator pos:start="149:20" pos:end="149:20">&amp;</operator> <name pos:start="149:22" pos:end="149:24">pde</name></expr>;</expr_stmt>

        <if_stmt pos:start="151:9" pos:end="169:9"><if pos:start="151:9" pos:end="161:9">if <condition pos:start="151:12" pos:end="151:20">(<expr pos:start="151:13" pos:end="151:19"><name pos:start="151:13" pos:end="151:19">is_user</name></expr>)</condition> <block pos:start="151:22" pos:end="161:9">{<block_content pos:start="153:13" pos:end="159:38">

            <if_stmt pos:start="153:13" pos:end="155:38"><if pos:start="153:13" pos:end="155:38">if <condition pos:start="153:16" pos:end="153:39">(<expr pos:start="153:17" pos:end="153:38"><operator pos:start="153:17" pos:end="153:17">!</operator><operator pos:start="153:18" pos:end="153:18">(</operator><name pos:start="153:19" pos:end="153:22">ptep</name> <operator pos:start="153:24" pos:end="153:24">&amp;</operator> <name pos:start="153:26" pos:end="153:37">PG_USER_MASK</name><operator pos:start="153:38" pos:end="153:38">)</operator></expr>)</condition><block type="pseudo" pos:start="155:17" pos:end="155:38"><block_content pos:start="155:17" pos:end="155:38">

                <goto pos:start="155:17" pos:end="155:38">goto <name pos:start="155:22" pos:end="155:37">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="157:13" pos:end="159:38"><if pos:start="157:13" pos:end="159:38">if <condition pos:start="157:16" pos:end="157:49">(<expr pos:start="157:17" pos:end="157:48"><name pos:start="157:17" pos:end="157:24">is_write</name> <operator pos:start="157:26" pos:end="157:27">&amp;&amp;</operator> <operator pos:start="157:29" pos:end="157:29">!</operator><operator pos:start="157:30" pos:end="157:30">(</operator><name pos:start="157:31" pos:end="157:34">ptep</name> <operator pos:start="157:36" pos:end="157:36">&amp;</operator> <name pos:start="157:38" pos:end="157:47">PG_RW_MASK</name><operator pos:start="157:48" pos:end="157:48">)</operator></expr>)</condition><block type="pseudo" pos:start="159:17" pos:end="159:38"><block_content pos:start="159:17" pos:end="159:38">

                <goto pos:start="159:17" pos:end="159:38">goto <name pos:start="159:22" pos:end="159:37">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="161:11" pos:end="169:9">else <block pos:start="161:16" pos:end="169:9">{<block_content pos:start="163:13" pos:end="167:38">

            <if_stmt pos:start="163:13" pos:end="167:38"><if pos:start="163:13" pos:end="167:38">if <condition pos:start="163:16" pos:end="165:49">(<expr pos:start="163:17" pos:end="165:48"><operator pos:start="163:17" pos:end="163:17">(</operator><name pos:start="163:18" pos:end="163:27"><name pos:start="163:18" pos:end="163:20">env</name><operator pos:start="163:21" pos:end="163:22">-&gt;</operator><name pos:start="163:23" pos:end="163:24">cr</name><index pos:start="163:25" pos:end="163:27">[<expr pos:start="163:26" pos:end="163:26"><literal type="number" pos:start="163:26" pos:end="163:26">0</literal></expr>]</index></name> <operator pos:start="163:29" pos:end="163:29">&amp;</operator> <name pos:start="163:31" pos:end="163:41">CR0_WP_MASK</name><operator pos:start="163:42" pos:end="163:42">)</operator> <operator pos:start="163:44" pos:end="163:45">&amp;&amp;</operator> <operator pos:start="163:47" pos:end="163:47">(</operator><name pos:start="163:48" pos:end="163:51">ptep</name> <operator pos:start="163:53" pos:end="163:53">&amp;</operator> <name pos:start="163:55" pos:end="163:66">PG_USER_MASK</name><operator pos:start="163:67" pos:end="163:67">)</operator> <operator pos:start="163:69" pos:end="163:70">&amp;&amp;</operator>

                <name pos:start="165:17" pos:end="165:24">is_write</name> <operator pos:start="165:26" pos:end="165:27">&amp;&amp;</operator> <operator pos:start="165:29" pos:end="165:29">!</operator><operator pos:start="165:30" pos:end="165:30">(</operator><name pos:start="165:31" pos:end="165:34">ptep</name> <operator pos:start="165:36" pos:end="165:36">&amp;</operator> <name pos:start="165:38" pos:end="165:47">PG_RW_MASK</name><operator pos:start="165:48" pos:end="165:48">)</operator></expr>)</condition><block type="pseudo" pos:start="167:17" pos:end="167:38"><block_content pos:start="167:17" pos:end="167:38"> 

                <goto pos:start="167:17" pos:end="167:38">goto <name pos:start="167:22" pos:end="167:37">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:54"><expr pos:start="171:9" pos:end="171:53"><name pos:start="171:9" pos:end="171:16">is_dirty</name> <operator pos:start="171:18" pos:end="171:18">=</operator> <name pos:start="171:20" pos:end="171:27">is_write</name> <operator pos:start="171:29" pos:end="171:30">&amp;&amp;</operator> <operator pos:start="171:32" pos:end="171:32">!</operator><operator pos:start="171:33" pos:end="171:33">(</operator><name pos:start="171:34" pos:end="171:36">pte</name> <operator pos:start="171:38" pos:end="171:38">&amp;</operator> <name pos:start="171:40" pos:end="171:52">PG_DIRTY_MASK</name><operator pos:start="171:53" pos:end="171:53">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="183:9"><if pos:start="173:9" pos:end="183:9">if <condition pos:start="173:12" pos:end="173:50">(<expr pos:start="173:13" pos:end="173:49"><operator pos:start="173:13" pos:end="173:13">!</operator><operator pos:start="173:14" pos:end="173:14">(</operator><name pos:start="173:15" pos:end="173:17">pte</name> <operator pos:start="173:19" pos:end="173:19">&amp;</operator> <name pos:start="173:21" pos:end="173:36">PG_ACCESSED_MASK</name><operator pos:start="173:37" pos:end="173:37">)</operator> <operator pos:start="173:39" pos:end="173:40">||</operator> <name pos:start="173:42" pos:end="173:49">is_dirty</name></expr>)</condition> <block pos:start="173:52" pos:end="183:9">{<block_content pos:start="175:13" pos:end="181:34">

            <expr_stmt pos:start="175:13" pos:end="175:36"><expr pos:start="175:13" pos:end="175:35"><name pos:start="175:13" pos:end="175:15">pte</name> <operator pos:start="175:17" pos:end="175:18">|=</operator> <name pos:start="175:20" pos:end="175:35">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

            <if_stmt pos:start="177:13" pos:end="179:37"><if pos:start="177:13" pos:end="179:37">if <condition pos:start="177:16" pos:end="177:25">(<expr pos:start="177:17" pos:end="177:24"><name pos:start="177:17" pos:end="177:24">is_dirty</name></expr>)</condition><block type="pseudo" pos:start="179:17" pos:end="179:37"><block_content pos:start="179:17" pos:end="179:37">

                <expr_stmt pos:start="179:17" pos:end="179:37"><expr pos:start="179:17" pos:end="179:36"><name pos:start="179:17" pos:end="179:19">pte</name> <operator pos:start="179:21" pos:end="179:22">|=</operator> <name pos:start="179:24" pos:end="179:36">PG_DIRTY_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:34"><expr pos:start="181:13" pos:end="181:33"><call pos:start="181:13" pos:end="181:33"><name pos:start="181:13" pos:end="181:19">stl_raw</name><argument_list pos:start="181:20" pos:end="181:33">(<argument pos:start="181:21" pos:end="181:27"><expr pos:start="181:21" pos:end="181:27"><name pos:start="181:21" pos:end="181:27">pte_ptr</name></expr></argument>, <argument pos:start="181:30" pos:end="181:32"><expr pos:start="181:30" pos:end="181:32"><name pos:start="181:30" pos:end="181:32">pte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:25"><expr pos:start="185:9" pos:end="185:24"><name pos:start="185:9" pos:end="185:17">page_size</name> <operator pos:start="185:19" pos:end="185:19">=</operator> <literal type="number" pos:start="185:21" pos:end="185:24">4096</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:34"><expr pos:start="187:9" pos:end="187:33"><name pos:start="187:9" pos:end="187:17">virt_addr</name> <operator pos:start="187:19" pos:end="187:19">=</operator> <name pos:start="187:21" pos:end="187:24">addr</name> <operator pos:start="187:26" pos:end="187:26">&amp;</operator> <operator pos:start="187:28" pos:end="187:28">~</operator><literal type="number" pos:start="187:29" pos:end="187:33">0xfff</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="193:5" pos:end="193:40">/* the page can be put in the TLB */</comment>

    <expr_stmt pos:start="195:5" pos:end="195:21"><expr pos:start="195:5" pos:end="195:20"><name pos:start="195:5" pos:end="195:8">prot</name> <operator pos:start="195:10" pos:end="195:10">=</operator> <name pos:start="195:12" pos:end="195:20">PROT_READ</name></expr>;</expr_stmt>

    <if_stmt pos:start="197:5" pos:end="219:5"><if pos:start="197:5" pos:end="219:5">if <condition pos:start="197:8" pos:end="197:28">(<expr pos:start="197:9" pos:end="197:27"><name pos:start="197:9" pos:end="197:11">pte</name> <operator pos:start="197:13" pos:end="197:13">&amp;</operator> <name pos:start="197:15" pos:end="197:27">PG_DIRTY_MASK</name></expr>)</condition> <block pos:start="197:30" pos:end="219:5">{<block_content pos:start="203:9" pos:end="217:9">

        <comment type="block" pos:start="199:9" pos:end="201:30">/* only set write access if already dirty... otherwise wait

           for dirty access */</comment>

        <if_stmt pos:start="203:9" pos:end="217:9"><if pos:start="203:9" pos:end="209:9">if <condition pos:start="203:12" pos:end="203:20">(<expr pos:start="203:13" pos:end="203:19"><name pos:start="203:13" pos:end="203:19">is_user</name></expr>)</condition> <block pos:start="203:22" pos:end="209:9">{<block_content pos:start="205:13" pos:end="207:35">

            <if_stmt pos:start="205:13" pos:end="207:35"><if pos:start="205:13" pos:end="207:35">if <condition pos:start="205:16" pos:end="205:34">(<expr pos:start="205:17" pos:end="205:33"><name pos:start="205:17" pos:end="205:20">ptep</name> <operator pos:start="205:22" pos:end="205:22">&amp;</operator> <name pos:start="205:24" pos:end="205:33">PG_RW_MASK</name></expr>)</condition><block type="pseudo" pos:start="207:17" pos:end="207:35"><block_content pos:start="207:17" pos:end="207:35">

                <expr_stmt pos:start="207:17" pos:end="207:35"><expr pos:start="207:17" pos:end="207:34"><name pos:start="207:17" pos:end="207:20">prot</name> <operator pos:start="207:22" pos:end="207:23">|=</operator> <name pos:start="207:25" pos:end="207:34">PROT_WRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="209:11" pos:end="217:9">else <block pos:start="209:16" pos:end="217:9">{<block_content pos:start="211:13" pos:end="215:35">

            <if_stmt pos:start="211:13" pos:end="215:35"><if pos:start="211:13" pos:end="215:35">if <condition pos:start="211:16" pos:end="213:36">(<expr pos:start="211:17" pos:end="213:35"><operator pos:start="211:17" pos:end="211:17">!</operator><operator pos:start="211:18" pos:end="211:18">(</operator><name pos:start="211:19" pos:end="211:28"><name pos:start="211:19" pos:end="211:21">env</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:25">cr</name><index pos:start="211:26" pos:end="211:28">[<expr pos:start="211:27" pos:end="211:27"><literal type="number" pos:start="211:27" pos:end="211:27">0</literal></expr>]</index></name> <operator pos:start="211:30" pos:end="211:30">&amp;</operator> <name pos:start="211:32" pos:end="211:42">CR0_WP_MASK</name><operator pos:start="211:43" pos:end="211:43">)</operator> <operator pos:start="211:45" pos:end="211:46">||</operator> <operator pos:start="211:48" pos:end="211:48">!</operator><operator pos:start="211:49" pos:end="211:49">(</operator><name pos:start="211:50" pos:end="211:53">ptep</name> <operator pos:start="211:55" pos:end="211:55">&amp;</operator> <name pos:start="211:57" pos:end="211:68">PG_USER_MASK</name><operator pos:start="211:69" pos:end="211:69">)</operator> <operator pos:start="211:71" pos:end="211:72">||</operator>

                <operator pos:start="213:17" pos:end="213:17">(</operator><name pos:start="213:18" pos:end="213:21">ptep</name> <operator pos:start="213:23" pos:end="213:23">&amp;</operator> <name pos:start="213:25" pos:end="213:34">PG_RW_MASK</name><operator pos:start="213:35" pos:end="213:35">)</operator></expr>)</condition><block type="pseudo" pos:start="215:17" pos:end="215:35"><block_content pos:start="215:17" pos:end="215:35">

                <expr_stmt pos:start="215:17" pos:end="215:35"><expr pos:start="215:17" pos:end="215:34"><name pos:start="215:17" pos:end="215:20">prot</name> <operator pos:start="215:22" pos:end="215:23">|=</operator> <name pos:start="215:25" pos:end="215:34">PROT_WRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



 <label pos:start="223:2" pos:end="223:12"><name pos:start="223:2" pos:end="223:11">do_mapping</name>:</label>

    <expr_stmt pos:start="225:5" pos:end="225:25"><expr pos:start="225:5" pos:end="225:24"><name pos:start="225:5" pos:end="225:7">pte</name> <operator pos:start="225:9" pos:end="225:9">=</operator> <name pos:start="225:11" pos:end="225:13">pte</name> <operator pos:start="225:15" pos:end="225:15">&amp;</operator> <name pos:start="225:17" pos:end="225:24">a20_mask</name></expr>;</expr_stmt>



    <comment type="block" pos:start="229:5" pos:end="231:35">/* Even if 4MB pages, we map only one 4KB page in the cache to

       avoid filling it too fast */</comment>

    <expr_stmt pos:start="233:5" pos:end="233:62"><expr pos:start="233:5" pos:end="233:61"><name pos:start="233:5" pos:end="233:15">page_offset</name> <operator pos:start="233:17" pos:end="233:17">=</operator> <operator pos:start="233:19" pos:end="233:19">(</operator><name pos:start="233:20" pos:end="233:23">addr</name> <operator pos:start="233:25" pos:end="233:25">&amp;</operator> <name pos:start="233:27" pos:end="233:42">TARGET_PAGE_MASK</name><operator pos:start="233:43" pos:end="233:43">)</operator> <operator pos:start="233:45" pos:end="233:45">&amp;</operator> <operator pos:start="233:47" pos:end="233:47">(</operator><name pos:start="233:48" pos:end="233:56">page_size</name> <operator pos:start="233:58" pos:end="233:58">-</operator> <literal type="number" pos:start="233:60" pos:end="233:60">1</literal><operator pos:start="233:61" pos:end="233:61">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:51"><expr pos:start="235:5" pos:end="235:50"><name pos:start="235:5" pos:end="235:9">paddr</name> <operator pos:start="235:11" pos:end="235:11">=</operator> <operator pos:start="235:13" pos:end="235:13">(</operator><name pos:start="235:14" pos:end="235:16">pte</name> <operator pos:start="235:18" pos:end="235:18">&amp;</operator> <name pos:start="235:20" pos:end="235:35">TARGET_PAGE_MASK</name><operator pos:start="235:36" pos:end="235:36">)</operator> <operator pos:start="235:38" pos:end="235:38">+</operator> <name pos:start="235:40" pos:end="235:50">page_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:36"><expr pos:start="237:5" pos:end="237:35"><name pos:start="237:5" pos:end="237:9">vaddr</name> <operator pos:start="237:11" pos:end="237:11">=</operator> <name pos:start="237:13" pos:end="237:21">virt_addr</name> <operator pos:start="237:23" pos:end="237:23">+</operator> <name pos:start="237:25" pos:end="237:35">page_offset</name></expr>;</expr_stmt>

    

    <expr_stmt pos:start="241:5" pos:end="241:69"><expr pos:start="241:5" pos:end="241:68"><name pos:start="241:5" pos:end="241:7">ret</name> <operator pos:start="241:9" pos:end="241:9">=</operator> <call pos:start="241:11" pos:end="241:68"><name pos:start="241:11" pos:end="241:22">tlb_set_page</name><argument_list pos:start="241:23" pos:end="241:68">(<argument pos:start="241:24" pos:end="241:26"><expr pos:start="241:24" pos:end="241:26"><name pos:start="241:24" pos:end="241:26">env</name></expr></argument>, <argument pos:start="241:29" pos:end="241:33"><expr pos:start="241:29" pos:end="241:33"><name pos:start="241:29" pos:end="241:33">vaddr</name></expr></argument>, <argument pos:start="241:36" pos:end="241:40"><expr pos:start="241:36" pos:end="241:40"><name pos:start="241:36" pos:end="241:40">paddr</name></expr></argument>, <argument pos:start="241:43" pos:end="241:46"><expr pos:start="241:43" pos:end="241:46"><name pos:start="241:43" pos:end="241:46">prot</name></expr></argument>, <argument pos:start="241:49" pos:end="241:55"><expr pos:start="241:49" pos:end="241:55"><name pos:start="241:49" pos:end="241:55">is_user</name></expr></argument>, <argument pos:start="241:58" pos:end="241:67"><expr pos:start="241:58" pos:end="241:67"><name pos:start="241:58" pos:end="241:67">is_softmmu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="243:5" pos:end="243:15">return <expr pos:start="243:12" pos:end="243:14"><name pos:start="243:12" pos:end="243:14">ret</name></expr>;</return>

 <label pos:start="245:2" pos:end="245:18"><name pos:start="245:2" pos:end="245:17">do_fault_protect</name>:</label>

    <expr_stmt pos:start="247:5" pos:end="247:33"><expr pos:start="247:5" pos:end="247:32"><name pos:start="247:5" pos:end="247:14">error_code</name> <operator pos:start="247:16" pos:end="247:16">=</operator> <name pos:start="247:18" pos:end="247:32">PG_ERROR_P_MASK</name></expr>;</expr_stmt>

 <label pos:start="249:2" pos:end="249:10"><name pos:start="249:2" pos:end="249:9">do_fault</name>:</label>

    <expr_stmt pos:start="251:5" pos:end="251:22"><expr pos:start="251:5" pos:end="251:21"><name pos:start="251:5" pos:end="251:14"><name pos:start="251:5" pos:end="251:7">env</name><operator pos:start="251:8" pos:end="251:9">-&gt;</operator><name pos:start="251:10" pos:end="251:11">cr</name><index pos:start="251:12" pos:end="251:14">[<expr pos:start="251:13" pos:end="251:13"><literal type="number" pos:start="251:13" pos:end="251:13">2</literal></expr>]</index></name> <operator pos:start="251:16" pos:end="251:16">=</operator> <name pos:start="251:18" pos:end="251:21">addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:64"><expr pos:start="253:5" pos:end="253:63"><name pos:start="253:5" pos:end="253:19"><name pos:start="253:5" pos:end="253:7">env</name><operator pos:start="253:8" pos:end="253:9">-&gt;</operator><name pos:start="253:10" pos:end="253:19">error_code</name></name> <operator pos:start="253:21" pos:end="253:21">=</operator> <operator pos:start="253:23" pos:end="253:23">(</operator><name pos:start="253:24" pos:end="253:31">is_write</name> <operator pos:start="253:33" pos:end="253:34">&lt;&lt;</operator> <name pos:start="253:36" pos:end="253:49">PG_ERROR_W_BIT</name><operator pos:start="253:50" pos:end="253:50">)</operator> <operator pos:start="253:52" pos:end="253:52">|</operator> <name pos:start="253:54" pos:end="253:63">error_code</name></expr>;</expr_stmt>

    <if_stmt pos:start="255:5" pos:end="257:43"><if pos:start="255:5" pos:end="257:43">if <condition pos:start="255:8" pos:end="255:16">(<expr pos:start="255:9" pos:end="255:15"><name pos:start="255:9" pos:end="255:15">is_user</name></expr>)</condition><block type="pseudo" pos:start="257:9" pos:end="257:43"><block_content pos:start="257:9" pos:end="257:43">

        <expr_stmt pos:start="257:9" pos:end="257:43"><expr pos:start="257:9" pos:end="257:42"><name pos:start="257:9" pos:end="257:23"><name pos:start="257:9" pos:end="257:11">env</name><operator pos:start="257:12" pos:end="257:13">-&gt;</operator><name pos:start="257:14" pos:end="257:23">error_code</name></name> <operator pos:start="257:25" pos:end="257:26">|=</operator> <name pos:start="257:28" pos:end="257:42">PG_ERROR_U_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="259:5" pos:end="259:13">return <expr pos:start="259:12" pos:end="259:12"><literal type="number" pos:start="259:12" pos:end="259:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
