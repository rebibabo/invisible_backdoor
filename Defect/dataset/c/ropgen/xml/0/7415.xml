<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7415.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">virtio_scsi_push_event</name><parameter_list pos:start="1:35" pos:end="3:67">(<parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:45">VirtIOSCSI</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:65"><decl pos:start="1:51" pos:end="1:65"><type pos:start="1:51" pos:end="1:65"><name pos:start="1:51" pos:end="1:60">SCSIDevice</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">dev</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:49"><decl pos:start="3:36" pos:end="3:49"><type pos:start="3:36" pos:end="3:49"><name pos:start="3:36" pos:end="3:43">uint32_t</name></type> <name pos:start="3:45" pos:end="3:49">event</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:66"><decl pos:start="3:52" pos:end="3:66"><type pos:start="3:52" pos:end="3:66"><name pos:start="3:52" pos:end="3:59">uint32_t</name></type> <name pos:start="3:61" pos:end="3:66">reason</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:34">

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">VirtIOSCSICommon</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">vs</name> <init pos:start="7:26" pos:end="7:48">= <expr pos:start="7:28" pos:end="7:48"><call pos:start="7:28" pos:end="7:48"><name pos:start="7:28" pos:end="7:45">VIRTIO_SCSI_COMMON</name><argument_list pos:start="7:46" pos:end="7:48">(<argument pos:start="7:47" pos:end="7:47"><expr pos:start="7:47" pos:end="7:47"><name pos:start="7:47" pos:end="7:47">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">VirtIOSCSIReq</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">req</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">VirtIOSCSIEvent</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:24">evt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">VirtIODevice</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:22">vdev</name> <init pos:start="13:24" pos:end="13:41">= <expr pos:start="13:26" pos:end="13:41"><call pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:38">VIRTIO_DEVICE</name><argument_list pos:start="13:39" pos:end="13:41">(<argument pos:start="13:40" pos:end="13:40"><expr pos:start="13:40" pos:end="13:40"><name pos:start="13:40" pos:end="13:40">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">in_size</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:52">(<expr pos:start="19:9" pos:end="19:51"><operator pos:start="19:9" pos:end="19:9">!</operator><operator pos:start="19:10" pos:end="19:10">(</operator><name pos:start="19:11" pos:end="19:22"><name pos:start="19:11" pos:end="19:14">vdev</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:22">status</name></name> <operator pos:start="19:24" pos:end="19:24">&amp;</operator> <name pos:start="19:26" pos:end="19:50">VIRTIO_CONFIG_S_DRIVER_OK</name><operator pos:start="19:51" pos:end="19:51">)</operator></expr>)</condition> <block pos:start="19:54" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:15">

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:47"><expr pos:start="27:5" pos:end="27:46"><name pos:start="27:5" pos:end="27:7">req</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:46"><name pos:start="27:11" pos:end="27:29">virtio_scsi_pop_req</name><argument_list pos:start="27:30" pos:end="27:46">(<argument pos:start="27:31" pos:end="27:31"><expr pos:start="27:31" pos:end="27:31"><name pos:start="27:31" pos:end="27:31">s</name></expr></argument>, <argument pos:start="27:34" pos:end="27:45"><expr pos:start="27:34" pos:end="27:45"><name pos:start="27:34" pos:end="27:45"><name pos:start="27:34" pos:end="27:35">vs</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:45">event_vq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:13">(<expr pos:start="29:9" pos:end="29:12"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:12">req</name></expr>)</condition> <block pos:start="29:15" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:15">

        <expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:25">events_dropped</name></name> <operator pos:start="31:27" pos:end="31:27">=</operator> <name pos:start="31:29" pos:end="31:32">true</name></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:51">(<expr pos:start="39:9" pos:end="39:50"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:11">req</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:17">elem</name><operator pos:start="39:18" pos:end="39:18">.</operator><name pos:start="39:19" pos:end="39:25">out_num</name></name> <operator pos:start="39:27" pos:end="39:28">||</operator> <name pos:start="39:30" pos:end="39:45"><name pos:start="39:30" pos:end="39:32">req</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:38">elem</name><operator pos:start="39:39" pos:end="39:39">.</operator><name pos:start="39:40" pos:end="39:45">in_num</name></name> <operator pos:start="39:47" pos:end="39:48">!=</operator> <literal type="number" pos:start="39:50" pos:end="39:50">1</literal></expr>)</condition> <block pos:start="39:53" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:30">

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><call pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:27">virtio_scsi_bad_req</name><argument_list pos:start="41:28" pos:end="41:29">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:26">(<expr pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:25">events_dropped</name></name></expr>)</condition> <block pos:start="47:28" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:34">

        <expr_stmt pos:start="49:9" pos:end="49:45"><expr pos:start="49:9" pos:end="49:44"><name pos:start="49:9" pos:end="49:13">event</name> <operator pos:start="49:15" pos:end="49:16">|=</operator> <name pos:start="49:18" pos:end="49:44">VIRTIO_SCSI_T_EVENTS_MISSED</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:34"><expr pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:25">events_dropped</name></name> <operator pos:start="51:27" pos:end="51:27">=</operator> <name pos:start="51:29" pos:end="51:33">false</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:41"><expr pos:start="57:5" pos:end="57:40"><name pos:start="57:5" pos:end="57:11">in_size</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:32"><name pos:start="57:15" pos:end="57:17">req</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:23">elem</name><operator pos:start="57:24" pos:end="57:24">.</operator><name pos:start="57:25" pos:end="57:29">in_sg</name><index pos:start="57:30" pos:end="57:32">[<expr pos:start="57:31" pos:end="57:31"><literal type="number" pos:start="57:31" pos:end="57:31">0</literal></expr>]</index></name><operator pos:start="57:33" pos:end="57:33">.</operator><name pos:start="57:34" pos:end="57:40">iov_len</name></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:42">(<expr pos:start="59:9" pos:end="59:41"><name pos:start="59:9" pos:end="59:15">in_size</name> <operator pos:start="59:17" pos:end="59:17">&lt;</operator> <sizeof pos:start="59:19" pos:end="59:41">sizeof<argument_list pos:start="59:25" pos:end="59:41">(<argument pos:start="59:26" pos:end="59:40"><expr pos:start="59:26" pos:end="59:40"><name pos:start="59:26" pos:end="59:40">VirtIOSCSIEvent</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="59:44" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:30">

        <expr_stmt pos:start="61:9" pos:end="61:30"><expr pos:start="61:9" pos:end="61:29"><call pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:27">virtio_scsi_bad_req</name><argument_list pos:start="61:28" pos:end="61:29">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:26"><expr pos:start="67:5" pos:end="67:25"><name pos:start="67:5" pos:end="67:7">evt</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <name pos:start="67:11" pos:end="67:25"><name pos:start="67:11" pos:end="67:13">req</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:19">resp</name><operator pos:start="67:20" pos:end="67:20">.</operator><name pos:start="67:21" pos:end="67:25">event</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:44"><expr pos:start="69:5" pos:end="69:43"><call pos:start="69:5" pos:end="69:43"><name pos:start="69:5" pos:end="69:10">memset</name><argument_list pos:start="69:11" pos:end="69:43">(<argument pos:start="69:12" pos:end="69:14"><expr pos:start="69:12" pos:end="69:14"><name pos:start="69:12" pos:end="69:14">evt</name></expr></argument>, <argument pos:start="69:17" pos:end="69:17"><expr pos:start="69:17" pos:end="69:17"><literal type="number" pos:start="69:17" pos:end="69:17">0</literal></expr></argument>, <argument pos:start="69:20" pos:end="69:42"><expr pos:start="69:20" pos:end="69:42"><sizeof pos:start="69:20" pos:end="69:42">sizeof<argument_list pos:start="69:26" pos:end="69:42">(<argument pos:start="69:27" pos:end="69:41"><expr pos:start="69:27" pos:end="69:41"><name pos:start="69:27" pos:end="69:41">VirtIOSCSIEvent</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:23"><expr pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:7">evt</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:14">event</name></name> <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:22">event</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:25"><expr pos:start="73:5" pos:end="73:24"><name pos:start="73:5" pos:end="73:15"><name pos:start="73:5" pos:end="73:7">evt</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:15">reason</name></name> <operator pos:start="73:17" pos:end="73:17">=</operator> <name pos:start="73:19" pos:end="73:24">reason</name></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="97:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:13">(<expr pos:start="75:9" pos:end="75:12"><operator pos:start="75:9" pos:end="75:9">!</operator><name pos:start="75:10" pos:end="75:12">dev</name></expr>)</condition> <block pos:start="75:15" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:53">

        <expr_stmt pos:start="77:9" pos:end="77:53"><expr pos:start="77:9" pos:end="77:52"><call pos:start="77:9" pos:end="77:52"><name pos:start="77:9" pos:end="77:14">assert</name><argument_list pos:start="77:15" pos:end="77:52">(<argument pos:start="77:16" pos:end="77:51"><expr pos:start="77:16" pos:end="77:51"><name pos:start="77:16" pos:end="77:20">event</name> <operator pos:start="77:22" pos:end="77:23">==</operator> <name pos:start="77:25" pos:end="77:51">VIRTIO_SCSI_T_EVENTS_MISSED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="97:5">else <block pos:start="79:12" pos:end="97:5">{<block_content pos:start="81:9" pos:end="95:38">

        <expr_stmt pos:start="81:9" pos:end="81:24"><expr pos:start="81:9" pos:end="81:23"><name pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:11">evt</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:16">lun</name><index pos:start="81:17" pos:end="81:19">[<expr pos:start="81:18" pos:end="81:18"><literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr>]</index></name> <operator pos:start="81:21" pos:end="81:21">=</operator> <literal type="number" pos:start="81:23" pos:end="81:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:30"><expr pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:19"><name pos:start="83:9" pos:end="83:11">evt</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:16">lun</name><index pos:start="83:17" pos:end="83:19">[<expr pos:start="83:18" pos:end="83:18"><literal type="number" pos:start="83:18" pos:end="83:18">1</literal></expr>]</index></name> <operator pos:start="83:21" pos:end="83:21">=</operator> <name pos:start="83:23" pos:end="83:29"><name pos:start="83:23" pos:end="83:25">dev</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:29">id</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="87:9" pos:end="87:79">/* Linux wants us to keep the same encoding we use for REPORT LUNS.  */</comment>

        <if_stmt pos:start="89:9" pos:end="93:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:28">(<expr pos:start="89:13" pos:end="89:27"><name pos:start="89:13" pos:end="89:20"><name pos:start="89:13" pos:end="89:15">dev</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:20">lun</name></name> <operator pos:start="89:22" pos:end="89:23">&gt;=</operator> <literal type="number" pos:start="89:25" pos:end="89:27">256</literal></expr>)</condition> <block pos:start="89:30" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:49">

            <expr_stmt pos:start="91:13" pos:end="91:49"><expr pos:start="91:13" pos:end="91:48"><name pos:start="91:13" pos:end="91:23"><name pos:start="91:13" pos:end="91:15">evt</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:20">lun</name><index pos:start="91:21" pos:end="91:23">[<expr pos:start="91:22" pos:end="91:22"><literal type="number" pos:start="91:22" pos:end="91:22">2</literal></expr>]</index></name> <operator pos:start="91:25" pos:end="91:25">=</operator> <operator pos:start="91:27" pos:end="91:27">(</operator><name pos:start="91:28" pos:end="91:35"><name pos:start="91:28" pos:end="91:30">dev</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:35">lun</name></name> <operator pos:start="91:37" pos:end="91:38">&gt;&gt;</operator> <literal type="number" pos:start="91:40" pos:end="91:40">8</literal><operator pos:start="91:41" pos:end="91:41">)</operator> <operator pos:start="91:43" pos:end="91:43">|</operator> <literal type="number" pos:start="91:45" pos:end="91:48">0x40</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:38"><expr pos:start="95:9" pos:end="95:37"><name pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:11">evt</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:16">lun</name><index pos:start="95:17" pos:end="95:19">[<expr pos:start="95:18" pos:end="95:18"><literal type="number" pos:start="95:18" pos:end="95:18">3</literal></expr>]</index></name> <operator pos:start="95:21" pos:end="95:21">=</operator> <name pos:start="95:23" pos:end="95:30"><name pos:start="95:23" pos:end="95:25">dev</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:30">lun</name></name> <operator pos:start="95:32" pos:end="95:32">&amp;</operator> <literal type="number" pos:start="95:34" pos:end="95:37">0xFF</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:34"><expr pos:start="99:5" pos:end="99:33"><call pos:start="99:5" pos:end="99:33"><name pos:start="99:5" pos:end="99:28">virtio_scsi_complete_req</name><argument_list pos:start="99:29" pos:end="99:33">(<argument pos:start="99:30" pos:end="99:32"><expr pos:start="99:30" pos:end="99:32"><name pos:start="99:30" pos:end="99:32">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
