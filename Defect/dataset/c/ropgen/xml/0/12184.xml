<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12184.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">ty_read_packet</name><parameter_list pos:start="1:26" pos:end="1:60">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:54">AVPacket</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">TYDemuxContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">ty</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">TyRecHdr</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">rec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:20">rec_size</name> <init pos:start="11:22" pos:end="11:24">= <expr pos:start="11:24" pos:end="11:24"><literal type="number" pos:start="11:24" pos:end="11:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:27"><if pos:start="17:5" pos:end="19:27">if <condition pos:start="17:8" pos:end="17:22">(<expr pos:start="17:9" pos:end="17:21"><call pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:17">avio_feof</name><argument_list pos:start="17:18" pos:end="17:21">(<argument pos:start="17:19" pos:end="17:20"><expr pos:start="17:19" pos:end="17:20"><name pos:start="17:19" pos:end="17:20">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:27"><block_content pos:start="19:9" pos:end="19:27">

        <return pos:start="19:9" pos:end="19:27">return <expr pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <while pos:start="23:5" pos:end="93:5">while <condition pos:start="23:11" pos:end="23:20">(<expr pos:start="23:12" pos:end="23:19"><name pos:start="23:12" pos:end="23:14">ret</name> <operator pos:start="23:16" pos:end="23:17">&lt;=</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>)</condition> <block pos:start="23:22" pos:end="93:5">{<block_content pos:start="25:9" pos:end="91:9">

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:59">(<expr pos:start="25:13" pos:end="25:58"><name pos:start="25:13" pos:end="25:27"><name pos:start="25:13" pos:end="25:14">ty</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:27">first_chunk</name></name> <operator pos:start="25:29" pos:end="25:30">||</operator> <name pos:start="25:32" pos:end="25:42"><name pos:start="25:32" pos:end="25:33">ty</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:42">cur_rec</name></name> <operator pos:start="25:44" pos:end="25:45">&gt;=</operator> <name pos:start="25:47" pos:end="25:58"><name pos:start="25:47" pos:end="25:48">ty</name><operator pos:start="25:49" pos:end="25:50">-&gt;</operator><name pos:start="25:51" pos:end="25:58">num_recs</name></name></expr>)</condition> <block pos:start="25:61" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:35">

            <if_stmt pos:start="27:13" pos:end="29:35"><if pos:start="27:13" pos:end="29:35">if <condition pos:start="27:16" pos:end="27:54">(<expr pos:start="27:17" pos:end="27:53"><call pos:start="27:17" pos:end="27:28"><name pos:start="27:17" pos:end="27:25">get_chunk</name><argument_list pos:start="27:26" pos:end="27:28">(<argument pos:start="27:27" pos:end="27:27"><expr pos:start="27:27" pos:end="27:27"><name pos:start="27:27" pos:end="27:27">s</name></expr></argument>)</argument_list></call> <operator pos:start="27:30" pos:end="27:30">&lt;</operator> <literal type="number" pos:start="27:32" pos:end="27:32">0</literal> <operator pos:start="27:34" pos:end="27:35">||</operator> <name pos:start="27:37" pos:end="27:48"><name pos:start="27:37" pos:end="27:38">ty</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:48">num_recs</name></name> <operator pos:start="27:50" pos:end="27:51">==</operator> <literal type="number" pos:start="27:53" pos:end="27:53">0</literal></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:35"><block_content pos:start="29:17" pos:end="29:35">

                <return pos:start="29:17" pos:end="29:35">return <expr pos:start="29:24" pos:end="29:34"><name pos:start="29:24" pos:end="29:34">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:11">rec</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <operator pos:start="35:15" pos:end="35:15">&amp;</operator><name pos:start="35:16" pos:end="35:40"><name pos:start="35:16" pos:end="35:17">ty</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:27">rec_hdrs</name><index pos:start="35:28" pos:end="35:40">[<expr pos:start="35:29" pos:end="35:39"><name pos:start="35:29" pos:end="35:39"><name pos:start="35:29" pos:end="35:30">ty</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:39">cur_rec</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:33"><expr pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:16">rec_size</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <name pos:start="37:20" pos:end="37:32"><name pos:start="37:20" pos:end="37:22">rec</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:32">rec_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:22"><expr pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:10">ty</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:19">cur_rec</name></name><operator pos:start="39:20" pos:end="39:21">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="43:9" pos:end="45:21"><if pos:start="43:9" pos:end="45:21">if <condition pos:start="43:12" pos:end="43:26">(<expr pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:20">rec_size</name> <operator pos:start="43:22" pos:end="43:23">&lt;=</operator> <literal type="number" pos:start="43:25" pos:end="43:25">0</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:21"><block_content pos:start="45:13" pos:end="45:21">

            <continue pos:start="45:13" pos:end="45:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="49:9" pos:end="51:39"><if pos:start="49:9" pos:end="51:39">if <condition pos:start="49:12" pos:end="49:59">(<expr pos:start="49:13" pos:end="49:58"><name pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:14">ty</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:29">cur_chunk_pos</name></name> <operator pos:start="49:31" pos:end="49:31">+</operator> <name pos:start="49:33" pos:end="49:45"><name pos:start="49:33" pos:end="49:35">rec</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:45">rec_size</name></name> <operator pos:start="49:47" pos:end="49:47">&gt;</operator> <name pos:start="49:49" pos:end="49:58">CHUNK_SIZE</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:39"><block_content pos:start="51:13" pos:end="51:39">

            <return pos:start="51:13" pos:end="51:39">return <expr pos:start="51:20" pos:end="51:38"><name pos:start="51:20" pos:end="51:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="55:9" pos:end="57:31"><if pos:start="55:9" pos:end="57:31">if <condition pos:start="55:12" pos:end="55:26">(<expr pos:start="55:13" pos:end="55:25"><call pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:21">avio_feof</name><argument_list pos:start="55:22" pos:end="55:25">(<argument pos:start="55:23" pos:end="55:24"><expr pos:start="55:23" pos:end="55:24"><name pos:start="55:23" pos:end="55:24">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:31"><block_content pos:start="57:13" pos:end="57:31">

            <return pos:start="57:13" pos:end="57:31">return <expr pos:start="57:20" pos:end="57:30"><name pos:start="57:20" pos:end="57:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



        <switch pos:start="61:9" pos:end="91:9">switch <condition pos:start="61:16" pos:end="61:30">(<expr pos:start="61:17" pos:end="61:29"><name pos:start="61:17" pos:end="61:29"><name pos:start="61:17" pos:end="61:19">rec</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:29">rec_type</name></name></expr>)</condition> <block pos:start="61:32" pos:end="91:9">{<block_content pos:start="63:9" pos:end="89:18">

        <case pos:start="63:9" pos:end="63:22">case <expr pos:start="63:14" pos:end="63:21"><name pos:start="63:14" pos:end="63:21">VIDEO_ID</name></expr>:</case>

            <expr_stmt pos:start="65:13" pos:end="65:43"><expr pos:start="65:13" pos:end="65:42"><name pos:start="65:13" pos:end="65:15">ret</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <call pos:start="65:19" pos:end="65:42"><name pos:start="65:19" pos:end="65:29">demux_video</name><argument_list pos:start="65:30" pos:end="65:42">(<argument pos:start="65:31" pos:end="65:31"><expr pos:start="65:31" pos:end="65:31"><name pos:start="65:31" pos:end="65:31">s</name></expr></argument>, <argument pos:start="65:34" pos:end="65:36"><expr pos:start="65:34" pos:end="65:36"><name pos:start="65:34" pos:end="65:36">rec</name></expr></argument>, <argument pos:start="65:39" pos:end="65:41"><expr pos:start="65:39" pos:end="65:41"><name pos:start="65:39" pos:end="65:41">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        <case pos:start="69:9" pos:end="69:22">case <expr pos:start="69:14" pos:end="69:21"><name pos:start="69:14" pos:end="69:21">AUDIO_ID</name></expr>:</case>

            <expr_stmt pos:start="71:13" pos:end="71:43"><expr pos:start="71:13" pos:end="71:42"><name pos:start="71:13" pos:end="71:15">ret</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <call pos:start="71:19" pos:end="71:42"><name pos:start="71:19" pos:end="71:29">demux_audio</name><argument_list pos:start="71:30" pos:end="71:42">(<argument pos:start="71:31" pos:end="71:31"><expr pos:start="71:31" pos:end="71:31"><name pos:start="71:31" pos:end="71:31">s</name></expr></argument>, <argument pos:start="71:34" pos:end="71:36"><expr pos:start="71:34" pos:end="71:36"><name pos:start="71:34" pos:end="71:36">rec</name></expr></argument>, <argument pos:start="71:39" pos:end="71:41"><expr pos:start="71:39" pos:end="71:41"><name pos:start="71:39" pos:end="71:41">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        <default pos:start="75:9" pos:end="75:16">default:</default>

            <expr_stmt pos:start="77:13" pos:end="77:70"><expr pos:start="77:13" pos:end="77:69"><call pos:start="77:13" pos:end="77:69"><name pos:start="77:13" pos:end="77:19">ff_dlog</name><argument_list pos:start="77:20" pos:end="77:69">(<argument pos:start="77:21" pos:end="77:21"><expr pos:start="77:21" pos:end="77:21"><name pos:start="77:21" pos:end="77:21">s</name></expr></argument>, <argument pos:start="77:24" pos:end="77:53"><expr pos:start="77:24" pos:end="77:53"><literal type="string" pos:start="77:24" pos:end="77:53">"Invalid record type 0x%02x\n"</literal></expr></argument>, <argument pos:start="77:56" pos:end="77:68"><expr pos:start="77:56" pos:end="77:68"><name pos:start="77:56" pos:end="77:68"><name pos:start="77:56" pos:end="77:58">rec</name><operator pos:start="77:59" pos:end="77:60">-&gt;</operator><name pos:start="77:61" pos:end="77:68">rec_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <case pos:start="79:9" pos:end="79:18">case <expr pos:start="79:14" pos:end="79:17"><literal type="number" pos:start="79:14" pos:end="79:17">0x01</literal></expr>:</case>

        <case pos:start="81:9" pos:end="81:18">case <expr pos:start="81:14" pos:end="81:17"><literal type="number" pos:start="81:14" pos:end="81:17">0x02</literal></expr>:</case>

        <case pos:start="83:9" pos:end="83:18">case <expr pos:start="83:14" pos:end="83:17"><literal type="number" pos:start="83:14" pos:end="83:17">0x03</literal></expr>:</case> <comment type="block" pos:start="83:20" pos:end="83:43">/* TiVo data services */</comment>

        <case pos:start="85:9" pos:end="85:18">case <expr pos:start="85:14" pos:end="85:17"><literal type="number" pos:start="85:14" pos:end="85:17">0x05</literal></expr>:</case> <comment type="block" pos:start="85:20" pos:end="85:52">/* unknown, but seen regularly */</comment>

            <expr_stmt pos:start="87:13" pos:end="87:47"><expr pos:start="87:13" pos:end="87:46"><name pos:start="87:13" pos:end="87:29"><name pos:start="87:13" pos:end="87:14">ty</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:29">cur_chunk_pos</name></name> <operator pos:start="87:31" pos:end="87:32">+=</operator> <name pos:start="87:34" pos:end="87:46"><name pos:start="87:34" pos:end="87:36">rec</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:46">rec_size</name></name></expr>;</expr_stmt>

            <break pos:start="89:13" pos:end="89:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></while>



    <return pos:start="97:5" pos:end="97:13">return <expr pos:start="97:12" pos:end="97:12"><literal type="number" pos:start="97:12" pos:end="97:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
