<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23084.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name> <name pos:start="1:13" pos:end="1:24">coroutine_fn</name></type> <name pos:start="1:26" pos:end="1:47">do_perform_cow_encrypt</name><parameter_list pos:start="1:48" pos:end="9:63">(<parameter pos:start="1:49" pos:end="1:68"><decl pos:start="1:49" pos:end="1:68"><type pos:start="1:49" pos:end="1:68"><name pos:start="1:49" pos:end="1:64">BlockDriverState</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:68">bs</name></decl></parameter>,

                                                <parameter pos:start="3:49" pos:end="3:75"><decl pos:start="3:49" pos:end="3:75"><type pos:start="3:49" pos:end="3:75"><name pos:start="3:49" pos:end="3:56">uint64_t</name></type> <name pos:start="3:58" pos:end="3:75">src_cluster_offset</name></decl></parameter>,

                                                <parameter pos:start="5:49" pos:end="5:74"><decl pos:start="5:49" pos:end="5:74"><type pos:start="5:49" pos:end="5:74"><name pos:start="5:49" pos:end="5:56">unsigned</name></type> <name pos:start="5:58" pos:end="5:74">offset_in_cluster</name></decl></parameter>,

                                                <parameter pos:start="7:49" pos:end="7:63"><decl pos:start="7:49" pos:end="7:63"><type pos:start="7:49" pos:end="7:63"><name pos:start="7:49" pos:end="7:55">uint8_t</name> <modifier pos:start="7:57" pos:end="7:57">*</modifier></type><name pos:start="7:58" pos:end="7:63">buffer</name></decl></parameter>,

                                                <parameter pos:start="9:49" pos:end="9:62"><decl pos:start="9:49" pos:end="9:62"><type pos:start="9:49" pos:end="9:62"><name pos:start="9:49" pos:end="9:56">unsigned</name></type> <name pos:start="9:58" pos:end="9:62">bytes</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="39:1">{<block_content pos:start="13:5" pos:end="37:16">

    <if_stmt pos:start="13:5" pos:end="35:5"><if pos:start="13:5" pos:end="35:5">if <condition pos:start="13:8" pos:end="13:31">(<expr pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:13">bytes</name> <operator pos:start="13:15" pos:end="13:16">&amp;&amp;</operator> <name pos:start="13:18" pos:end="13:30"><name pos:start="13:18" pos:end="13:19">bs</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:30">encrypted</name></name></expr>)</condition> <block pos:start="13:33" pos:end="35:5">{<block_content pos:start="15:9" pos:end="33:9">

        <decl_stmt pos:start="15:9" pos:end="15:39"><decl pos:start="15:9" pos:end="15:38"><type pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:22">BDRVQcow2State</name> <modifier pos:start="15:24" pos:end="15:24">*</modifier></type><name pos:start="15:25" pos:end="15:25">s</name> <init pos:start="15:27" pos:end="15:38">= <expr pos:start="15:29" pos:end="15:38"><name pos:start="15:29" pos:end="15:38"><name pos:start="15:29" pos:end="15:30">bs</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:38">opaque</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="19:45"><decl pos:start="17:9" pos:end="19:44"><type pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:15">int64_t</name></type> <name pos:start="17:17" pos:end="17:22">sector</name> <init pos:start="17:24" pos:end="19:44">= <expr pos:start="17:26" pos:end="19:44"><operator pos:start="17:26" pos:end="17:26">(</operator><name pos:start="17:27" pos:end="17:44">src_cluster_offset</name> <operator pos:start="17:46" pos:end="17:46">+</operator> <name pos:start="17:48" pos:end="17:64">offset_in_cluster</name><operator pos:start="17:65" pos:end="17:65">)</operator>

                         <operator pos:start="19:26" pos:end="19:27">&gt;&gt;</operator> <name pos:start="19:29" pos:end="19:44">BDRV_SECTOR_BITS</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><call pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:14">assert</name><argument_list pos:start="21:15" pos:end="21:25">(<argument pos:start="21:16" pos:end="21:24"><expr pos:start="21:16" pos:end="21:24"><name pos:start="21:16" pos:end="21:24"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:24">cipher</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:61"><expr pos:start="23:9" pos:end="23:60"><call pos:start="23:9" pos:end="23:60"><name pos:start="23:9" pos:end="23:14">assert</name><argument_list pos:start="23:15" pos:end="23:60">(<argument pos:start="23:16" pos:end="23:59"><expr pos:start="23:16" pos:end="23:59"><operator pos:start="23:16" pos:end="23:16">(</operator><name pos:start="23:17" pos:end="23:33">offset_in_cluster</name> <operator pos:start="23:35" pos:end="23:35">&amp;</operator> <operator pos:start="23:37" pos:end="23:37">~</operator><name pos:start="23:38" pos:end="23:53">BDRV_SECTOR_MASK</name><operator pos:start="23:54" pos:end="23:54">)</operator> <operator pos:start="23:56" pos:end="23:57">==</operator> <literal type="number" pos:start="23:59" pos:end="23:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:49"><expr pos:start="25:9" pos:end="25:48"><call pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:14">assert</name><argument_list pos:start="25:15" pos:end="25:48">(<argument pos:start="25:16" pos:end="25:47"><expr pos:start="25:16" pos:end="25:47"><operator pos:start="25:16" pos:end="25:16">(</operator><name pos:start="25:17" pos:end="25:21">bytes</name> <operator pos:start="25:23" pos:end="25:23">&amp;</operator> <operator pos:start="25:25" pos:end="25:25">~</operator><name pos:start="25:26" pos:end="25:41">BDRV_SECTOR_MASK</name><operator pos:start="25:42" pos:end="25:42">)</operator> <operator pos:start="25:44" pos:end="25:45">==</operator> <literal type="number" pos:start="25:47" pos:end="25:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="29:77">(<expr pos:start="27:13" pos:end="29:76"><call pos:start="27:13" pos:end="29:72"><name pos:start="27:13" pos:end="27:33">qcow2_encrypt_sectors</name><argument_list pos:start="27:34" pos:end="29:72">(<argument pos:start="27:35" pos:end="27:35"><expr pos:start="27:35" pos:end="27:35"><name pos:start="27:35" pos:end="27:35">s</name></expr></argument>, <argument pos:start="27:38" pos:end="27:43"><expr pos:start="27:38" pos:end="27:43"><name pos:start="27:38" pos:end="27:43">sector</name></expr></argument>, <argument pos:start="27:46" pos:end="27:51"><expr pos:start="27:46" pos:end="27:51"><name pos:start="27:46" pos:end="27:51">buffer</name></expr></argument>,

                                  <argument pos:start="29:35" pos:end="29:59"><expr pos:start="29:35" pos:end="29:59"><name pos:start="29:35" pos:end="29:39">bytes</name> <operator pos:start="29:41" pos:end="29:42">&gt;&gt;</operator> <name pos:start="29:44" pos:end="29:59">BDRV_SECTOR_BITS</name></expr></argument>, <argument pos:start="29:62" pos:end="29:65"><expr pos:start="29:62" pos:end="29:65"><name pos:start="29:62" pos:end="29:65">true</name></expr></argument>, <argument pos:start="29:68" pos:end="29:71"><expr pos:start="29:68" pos:end="29:71"><name pos:start="29:68" pos:end="29:71">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="29:74" pos:end="29:74">&lt;</operator> <literal type="number" pos:start="29:76" pos:end="29:76">0</literal></expr>)</condition> <block pos:start="29:79" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:25">

            <return pos:start="31:13" pos:end="31:25">return <expr pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:24">false</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="37:5" pos:end="37:16">return <expr pos:start="37:12" pos:end="37:15"><name pos:start="37:12" pos:end="37:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
