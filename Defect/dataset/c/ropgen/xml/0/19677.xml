<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19677.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">restore_median</name><parameter_list pos:start="1:27" pos:end="3:72">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:34">uint8_t</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">src</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:49"><decl pos:start="1:42" pos:end="1:49"><type pos:start="1:42" pos:end="1:49"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:49">step</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:61">stride</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:36"><decl pos:start="3:28" pos:end="3:36"><type pos:start="3:28" pos:end="3:36"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:36">width</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:48"><decl pos:start="3:39" pos:end="3:48"><type pos:start="3:39" pos:end="3:48"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:48">height</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:60"><decl pos:start="3:51" pos:end="3:60"><type pos:start="3:51" pos:end="3:60"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:60">slices</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:71"><decl pos:start="3:63" pos:end="3:71"><type pos:start="3:63" pos:end="3:71"><name pos:start="3:63" pos:end="3:65">int</name></type> <name pos:start="3:67" pos:end="3:71">rmode</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="97:1">{<block_content pos:start="7:5" pos:end="95:5">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:19">slice</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">A</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">B</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">C</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:17">bsrc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">slice_start</name></decl>, <decl pos:start="13:22" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:33">slice_height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:19">cmask</name> <init pos:start="15:21" pos:end="15:28">= <expr pos:start="15:23" pos:end="15:28"><operator pos:start="15:23" pos:end="15:23">~</operator><name pos:start="15:24" pos:end="15:28">rmode</name></expr></init></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="95:5">for <control pos:start="19:9" pos:end="19:44">(<init pos:start="19:10" pos:end="19:19"><expr pos:start="19:10" pos:end="19:18"><name pos:start="19:10" pos:end="19:14">slice</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</init> <condition pos:start="19:21" pos:end="19:35"><expr pos:start="19:21" pos:end="19:34"><name pos:start="19:21" pos:end="19:25">slice</name> <operator pos:start="19:27" pos:end="19:27">&lt;</operator> <name pos:start="19:29" pos:end="19:34">slices</name></expr>;</condition> <incr pos:start="19:37" pos:end="19:43"><expr pos:start="19:37" pos:end="19:43"><name pos:start="19:37" pos:end="19:41">slice</name><operator pos:start="19:42" pos:end="19:43">++</operator></expr></incr>)</control> <block pos:start="19:46" pos:end="95:5">{<block_content pos:start="21:9" pos:end="93:9">

        <expr_stmt pos:start="21:9" pos:end="21:59"><expr pos:start="21:9" pos:end="21:58"><name pos:start="21:9" pos:end="21:19">slice_start</name>  <operator pos:start="21:22" pos:end="21:22">=</operator> <operator pos:start="21:24" pos:end="21:24">(</operator><operator pos:start="21:25" pos:end="21:25">(</operator><name pos:start="21:26" pos:end="21:30">slice</name> <operator pos:start="21:32" pos:end="21:32">*</operator> <name pos:start="21:34" pos:end="21:39">height</name><operator pos:start="21:40" pos:end="21:40">)</operator> <operator pos:start="21:42" pos:end="21:42">/</operator> <name pos:start="21:44" pos:end="21:49">slices</name><operator pos:start="21:50" pos:end="21:50">)</operator> <operator pos:start="21:52" pos:end="21:52">&amp;</operator> <name pos:start="21:54" pos:end="21:58">cmask</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="25:35"><expr pos:start="23:9" pos:end="25:34"><name pos:start="23:9" pos:end="23:20">slice_height</name> <operator pos:start="23:22" pos:end="23:22">=</operator> <operator pos:start="23:24" pos:end="23:24">(</operator><operator pos:start="23:25" pos:end="23:25">(</operator><operator pos:start="23:26" pos:end="23:26">(</operator><operator pos:start="23:27" pos:end="23:27">(</operator><name pos:start="23:28" pos:end="23:32">slice</name> <operator pos:start="23:34" pos:end="23:34">+</operator> <literal type="number" pos:start="23:36" pos:end="23:36">1</literal><operator pos:start="23:37" pos:end="23:37">)</operator> <operator pos:start="23:39" pos:end="23:39">*</operator> <name pos:start="23:41" pos:end="23:46">height</name><operator pos:start="23:47" pos:end="23:47">)</operator> <operator pos:start="23:49" pos:end="23:49">/</operator> <name pos:start="23:51" pos:end="23:56">slices</name><operator pos:start="23:57" pos:end="23:57">)</operator> <operator pos:start="23:59" pos:end="23:59">&amp;</operator> <name pos:start="23:61" pos:end="23:65">cmask</name><operator pos:start="23:66" pos:end="23:66">)</operator> <operator pos:start="23:68" pos:end="23:68">-</operator>

                       <name pos:start="25:24" pos:end="25:34">slice_start</name></expr>;</expr_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:42"><expr pos:start="29:9" pos:end="29:41"><name pos:start="29:9" pos:end="29:12">bsrc</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:18">src</name> <operator pos:start="29:20" pos:end="29:20">+</operator> <name pos:start="29:22" pos:end="29:32">slice_start</name> <operator pos:start="29:34" pos:end="29:34">*</operator> <name pos:start="29:36" pos:end="29:41">stride</name></expr>;</expr_stmt>



        <comment type="line" pos:start="33:9" pos:end="33:49">// first line - left neighbour prediction</comment>

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:12">bsrc</name><index pos:start="35:13" pos:end="35:15">[<expr pos:start="35:14" pos:end="35:14"><literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>]</index></name> <operator pos:start="35:17" pos:end="35:18">+=</operator> <literal type="number" pos:start="35:20" pos:end="35:23">0x80</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:20"><expr pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:9">A</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <name pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:16">bsrc</name><index pos:start="37:17" pos:end="37:19">[<expr pos:start="37:18" pos:end="37:18"><literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="39:9" pos:end="45:9">for <control pos:start="39:13" pos:end="39:51">(<init pos:start="39:14" pos:end="39:22"><expr pos:start="39:14" pos:end="39:21"><name pos:start="39:14" pos:end="39:14">i</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:21">step</name></expr>;</init> <condition pos:start="39:24" pos:end="39:40"><expr pos:start="39:24" pos:end="39:39"><name pos:start="39:24" pos:end="39:24">i</name> <operator pos:start="39:26" pos:end="39:26">&lt;</operator> <name pos:start="39:28" pos:end="39:32">width</name> <operator pos:start="39:34" pos:end="39:34">*</operator> <name pos:start="39:36" pos:end="39:39">step</name></expr>;</condition> <incr pos:start="39:42" pos:end="39:50"><expr pos:start="39:42" pos:end="39:50"><name pos:start="39:42" pos:end="39:42">i</name> <operator pos:start="39:44" pos:end="39:45">+=</operator> <name pos:start="39:47" pos:end="39:50">step</name></expr></incr>)</control> <block pos:start="39:53" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:31">

            <expr_stmt pos:start="41:13" pos:end="41:25"><expr pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:16">bsrc</name><index pos:start="41:17" pos:end="41:19">[<expr pos:start="41:18" pos:end="41:18"><name pos:start="41:18" pos:end="41:18">i</name></expr>]</index></name> <operator pos:start="41:21" pos:end="41:22">+=</operator> <name pos:start="41:24" pos:end="41:24">A</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:31"><expr pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:13">A</name>        <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:30"><name pos:start="43:24" pos:end="43:27">bsrc</name><index pos:start="43:28" pos:end="43:30">[<expr pos:start="43:29" pos:end="43:29"><name pos:start="43:29" pos:end="43:29">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="47:9" pos:end="47:23"><expr pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:12">bsrc</name> <operator pos:start="47:14" pos:end="47:15">+=</operator> <name pos:start="47:17" pos:end="47:22">stride</name></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="51:21"><if pos:start="49:9" pos:end="51:21">if <condition pos:start="49:12" pos:end="49:30">(<expr pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:24">slice_height</name> <operator pos:start="49:26" pos:end="49:27">==</operator> <literal type="number" pos:start="49:29" pos:end="49:29">1</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:21"><block_content pos:start="51:13" pos:end="51:21">

            <continue pos:start="51:13" pos:end="51:21">continue;</continue></block_content></block></if></if_stmt>

        <comment type="line" pos:start="53:9" pos:end="53:79">// second line - first element has top prediction, the rest uses median</comment>

        <expr_stmt pos:start="55:9" pos:end="55:33"><expr pos:start="55:9" pos:end="55:32"><name pos:start="55:9" pos:end="55:9">C</name>        <operator pos:start="55:18" pos:end="55:18">=</operator> <name pos:start="55:20" pos:end="55:32"><name pos:start="55:20" pos:end="55:23">bsrc</name><index pos:start="55:24" pos:end="55:32">[<expr pos:start="55:25" pos:end="55:31"><operator pos:start="55:25" pos:end="55:25">-</operator><name pos:start="55:26" pos:end="55:31">stride</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:12">bsrc</name><index pos:start="57:13" pos:end="57:15">[<expr pos:start="57:14" pos:end="57:14"><literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>]</index></name> <operator pos:start="57:17" pos:end="57:18">+=</operator> <name pos:start="57:20" pos:end="57:20">C</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:27"><expr pos:start="59:9" pos:end="59:26"><name pos:start="59:9" pos:end="59:9">A</name>        <operator pos:start="59:18" pos:end="59:18">=</operator> <name pos:start="59:20" pos:end="59:26"><name pos:start="59:20" pos:end="59:23">bsrc</name><index pos:start="59:24" pos:end="59:26">[<expr pos:start="59:25" pos:end="59:25"><literal type="number" pos:start="59:25" pos:end="59:25">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="61:9" pos:end="71:9">for <control pos:start="61:13" pos:end="61:51">(<init pos:start="61:14" pos:end="61:22"><expr pos:start="61:14" pos:end="61:21"><name pos:start="61:14" pos:end="61:14">i</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <name pos:start="61:18" pos:end="61:21">step</name></expr>;</init> <condition pos:start="61:24" pos:end="61:40"><expr pos:start="61:24" pos:end="61:39"><name pos:start="61:24" pos:end="61:24">i</name> <operator pos:start="61:26" pos:end="61:26">&lt;</operator> <name pos:start="61:28" pos:end="61:32">width</name> <operator pos:start="61:34" pos:end="61:34">*</operator> <name pos:start="61:36" pos:end="61:39">step</name></expr>;</condition> <incr pos:start="61:42" pos:end="61:50"><expr pos:start="61:42" pos:end="61:50"><name pos:start="61:42" pos:end="61:42">i</name> <operator pos:start="61:44" pos:end="61:45">+=</operator> <name pos:start="61:47" pos:end="61:50">step</name></expr></incr>)</control> <block pos:start="61:53" pos:end="71:9">{<block_content pos:start="63:13" pos:end="69:31">

            <expr_stmt pos:start="63:13" pos:end="63:40"><expr pos:start="63:13" pos:end="63:39"><name pos:start="63:13" pos:end="63:13">B</name>        <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:39"><name pos:start="63:24" pos:end="63:27">bsrc</name><index pos:start="63:28" pos:end="63:39">[<expr pos:start="63:29" pos:end="63:38"><name pos:start="63:29" pos:end="63:29">i</name> <operator pos:start="63:31" pos:end="63:31">-</operator> <name pos:start="63:33" pos:end="63:38">stride</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:60"><expr pos:start="65:13" pos:end="65:59"><name pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:16">bsrc</name><index pos:start="65:17" pos:end="65:19">[<expr pos:start="65:18" pos:end="65:18"><name pos:start="65:18" pos:end="65:18">i</name></expr>]</index></name> <operator pos:start="65:21" pos:end="65:22">+=</operator> <call pos:start="65:24" pos:end="65:59"><name pos:start="65:24" pos:end="65:31">mid_pred</name><argument_list pos:start="65:32" pos:end="65:59">(<argument pos:start="65:33" pos:end="65:33"><expr pos:start="65:33" pos:end="65:33"><name pos:start="65:33" pos:end="65:33">A</name></expr></argument>, <argument pos:start="65:36" pos:end="65:36"><expr pos:start="65:36" pos:end="65:36"><name pos:start="65:36" pos:end="65:36">B</name></expr></argument>, <argument pos:start="65:39" pos:end="65:58"><expr pos:start="65:39" pos:end="65:58"><operator pos:start="65:39" pos:end="65:39">(</operator><name pos:start="65:40" pos:end="65:46">uint8_t</name><operator pos:start="65:47" pos:end="65:47">)</operator><operator pos:start="65:48" pos:end="65:48">(</operator><name pos:start="65:49" pos:end="65:49">A</name> <operator pos:start="65:51" pos:end="65:51">+</operator> <name pos:start="65:53" pos:end="65:53">B</name> <operator pos:start="65:55" pos:end="65:55">-</operator> <name pos:start="65:57" pos:end="65:57">C</name><operator pos:start="65:58" pos:end="65:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:25"><expr pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:13">C</name>        <operator pos:start="67:22" pos:end="67:22">=</operator> <name pos:start="67:24" pos:end="67:24">B</name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:31"><expr pos:start="69:13" pos:end="69:30"><name pos:start="69:13" pos:end="69:13">A</name>        <operator pos:start="69:22" pos:end="69:22">=</operator> <name pos:start="69:24" pos:end="69:30"><name pos:start="69:24" pos:end="69:27">bsrc</name><index pos:start="69:28" pos:end="69:30">[<expr pos:start="69:29" pos:end="69:29"><name pos:start="69:29" pos:end="69:29">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="73:9" pos:end="73:23"><expr pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:12">bsrc</name> <operator pos:start="73:14" pos:end="73:15">+=</operator> <name pos:start="73:17" pos:end="73:22">stride</name></expr>;</expr_stmt>

        <comment type="line" pos:start="75:9" pos:end="75:61">// the rest of lines use continuous median prediction</comment>

        <for pos:start="77:9" pos:end="93:9">for <control pos:start="77:13" pos:end="77:42">(<init pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:18"><name pos:start="77:14" pos:end="77:14">j</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="number" pos:start="77:18" pos:end="77:18">2</literal></expr>;</init> <condition pos:start="77:21" pos:end="77:37"><expr pos:start="77:21" pos:end="77:36"><name pos:start="77:21" pos:end="77:21">j</name> <operator pos:start="77:23" pos:end="77:23">&lt;</operator> <name pos:start="77:25" pos:end="77:36">slice_height</name></expr>;</condition> <incr pos:start="77:39" pos:end="77:41"><expr pos:start="77:39" pos:end="77:41"><name pos:start="77:39" pos:end="77:39">j</name><operator pos:start="77:40" pos:end="77:41">++</operator></expr></incr>)</control> <block pos:start="77:44" pos:end="93:9">{<block_content pos:start="79:13" pos:end="91:27">

            <for pos:start="79:13" pos:end="89:13">for <control pos:start="79:17" pos:end="79:52">(<init pos:start="79:18" pos:end="79:23"><expr pos:start="79:18" pos:end="79:22"><name pos:start="79:18" pos:end="79:18">i</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <literal type="number" pos:start="79:22" pos:end="79:22">0</literal></expr>;</init> <condition pos:start="79:25" pos:end="79:41"><expr pos:start="79:25" pos:end="79:40"><name pos:start="79:25" pos:end="79:25">i</name> <operator pos:start="79:27" pos:end="79:27">&lt;</operator> <name pos:start="79:29" pos:end="79:33">width</name> <operator pos:start="79:35" pos:end="79:35">*</operator> <name pos:start="79:37" pos:end="79:40">step</name></expr>;</condition> <incr pos:start="79:43" pos:end="79:51"><expr pos:start="79:43" pos:end="79:51"><name pos:start="79:43" pos:end="79:43">i</name> <operator pos:start="79:45" pos:end="79:46">+=</operator> <name pos:start="79:48" pos:end="79:51">step</name></expr></incr>)</control> <block pos:start="79:54" pos:end="89:13">{<block_content pos:start="81:17" pos:end="87:35">

                <expr_stmt pos:start="81:17" pos:end="81:44"><expr pos:start="81:17" pos:end="81:43"><name pos:start="81:17" pos:end="81:17">B</name>        <operator pos:start="81:26" pos:end="81:26">=</operator> <name pos:start="81:28" pos:end="81:43"><name pos:start="81:28" pos:end="81:31">bsrc</name><index pos:start="81:32" pos:end="81:43">[<expr pos:start="81:33" pos:end="81:42"><name pos:start="81:33" pos:end="81:33">i</name> <operator pos:start="81:35" pos:end="81:35">-</operator> <name pos:start="81:37" pos:end="81:42">stride</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:64"><expr pos:start="83:17" pos:end="83:63"><name pos:start="83:17" pos:end="83:23"><name pos:start="83:17" pos:end="83:20">bsrc</name><index pos:start="83:21" pos:end="83:23">[<expr pos:start="83:22" pos:end="83:22"><name pos:start="83:22" pos:end="83:22">i</name></expr>]</index></name> <operator pos:start="83:25" pos:end="83:26">+=</operator> <call pos:start="83:28" pos:end="83:63"><name pos:start="83:28" pos:end="83:35">mid_pred</name><argument_list pos:start="83:36" pos:end="83:63">(<argument pos:start="83:37" pos:end="83:37"><expr pos:start="83:37" pos:end="83:37"><name pos:start="83:37" pos:end="83:37">A</name></expr></argument>, <argument pos:start="83:40" pos:end="83:40"><expr pos:start="83:40" pos:end="83:40"><name pos:start="83:40" pos:end="83:40">B</name></expr></argument>, <argument pos:start="83:43" pos:end="83:62"><expr pos:start="83:43" pos:end="83:62"><operator pos:start="83:43" pos:end="83:43">(</operator><name pos:start="83:44" pos:end="83:50">uint8_t</name><operator pos:start="83:51" pos:end="83:51">)</operator><operator pos:start="83:52" pos:end="83:52">(</operator><name pos:start="83:53" pos:end="83:53">A</name> <operator pos:start="83:55" pos:end="83:55">+</operator> <name pos:start="83:57" pos:end="83:57">B</name> <operator pos:start="83:59" pos:end="83:59">-</operator> <name pos:start="83:61" pos:end="83:61">C</name><operator pos:start="83:62" pos:end="83:62">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:29"><expr pos:start="85:17" pos:end="85:28"><name pos:start="85:17" pos:end="85:17">C</name>        <operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:28">B</name></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:35"><expr pos:start="87:17" pos:end="87:34"><name pos:start="87:17" pos:end="87:17">A</name>        <operator pos:start="87:26" pos:end="87:26">=</operator> <name pos:start="87:28" pos:end="87:34"><name pos:start="87:28" pos:end="87:31">bsrc</name><index pos:start="87:32" pos:end="87:34">[<expr pos:start="87:33" pos:end="87:33"><name pos:start="87:33" pos:end="87:33">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="91:13" pos:end="91:27"><expr pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:16">bsrc</name> <operator pos:start="91:18" pos:end="91:19">+=</operator> <name pos:start="91:21" pos:end="91:26">stride</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
