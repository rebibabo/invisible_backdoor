<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6830.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">flic_decode_init</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:13">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">FlicDecodeContext</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:43">= <expr pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:32">avctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:66"><decl pos:start="7:5" pos:end="7:65"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:29">fli_header</name> <init pos:start="7:31" pos:end="7:65">= <expr pos:start="7:33" pos:end="7:65"><operator pos:start="7:33" pos:end="7:33">(</operator><name pos:start="7:34" pos:end="7:41">unsigned</name> <name pos:start="7:43" pos:end="7:46">char</name> <operator pos:start="7:48" pos:end="7:48">*</operator><operator pos:start="7:49" pos:end="7:49">)</operator><name pos:start="7:50" pos:end="7:65"><name pos:start="7:50" pos:end="7:54">avctx</name><operator pos:start="7:55" pos:end="7:56">-&gt;</operator><name pos:start="7:57" pos:end="7:65">extradata</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">depth</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="15:37">(<expr pos:start="13:9" pos:end="15:36"><name pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:13">avctx</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:29">extradata_size</name></name> <operator pos:start="13:31" pos:end="13:32">!=</operator> <literal type="number" pos:start="13:34" pos:end="13:35">12</literal> <operator pos:start="13:37" pos:end="13:38">&amp;&amp;</operator>

        <name pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:13">avctx</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:29">extradata_size</name></name> <operator pos:start="15:31" pos:end="15:32">!=</operator> <literal type="number" pos:start="15:34" pos:end="15:36">128</literal></expr>)</condition> <block pos:start="15:39" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:35">

        <expr_stmt pos:start="17:9" pos:end="17:79"><expr pos:start="17:9" pos:end="17:78"><call pos:start="17:9" pos:end="17:78"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="17:78">(<argument pos:start="17:16" pos:end="17:20"><expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:20">avctx</name></expr></argument>, <argument pos:start="17:23" pos:end="17:34"><expr pos:start="17:23" pos:end="17:34"><name pos:start="17:23" pos:end="17:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="17:37" pos:end="17:77"><expr pos:start="17:37" pos:end="17:77"><literal type="string" pos:start="17:37" pos:end="17:77">"Expected extradata of 12 or 128 bytes\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:35">return <expr pos:start="19:16" pos:end="19:34"><name pos:start="19:16" pos:end="19:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:12">avctx</name></name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:20">avctx</name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:15">fli_type</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <call pos:start="29:19" pos:end="29:41"><name pos:start="29:19" pos:end="29:25">AV_RL16</name><argument_list pos:start="29:26" pos:end="29:41">(<argument pos:start="29:27" pos:end="29:40"><expr pos:start="29:27" pos:end="29:40"><operator pos:start="29:27" pos:end="29:27">&amp;</operator><name pos:start="29:28" pos:end="29:40"><name pos:start="29:28" pos:end="29:37">fli_header</name><index pos:start="29:38" pos:end="29:40">[<expr pos:start="29:39" pos:end="29:39"><literal type="number" pos:start="29:39" pos:end="29:39">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="29:44" pos:end="29:90">/* Might be overridden if a Magic Carpet FLC */</comment>



    <expr_stmt pos:start="33:5" pos:end="33:14"><expr pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:9">depth</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <literal type="number" pos:start="33:13" pos:end="33:13">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="47:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:39">(<expr pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:16">avctx</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:32">extradata_size</name></name> <operator pos:start="35:34" pos:end="35:35">==</operator> <literal type="number" pos:start="35:37" pos:end="35:38">12</literal></expr>)</condition> <block pos:start="35:41" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:18">

        <comment type="block" pos:start="37:9" pos:end="37:48">/* special case for magic carpet FLIs */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:59"><expr pos:start="39:9" pos:end="39:58"><name pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:19">fli_type</name></name> <operator pos:start="39:21" pos:end="39:21">=</operator> <name pos:start="39:23" pos:end="39:58">FLC_MAGIC_CARPET_SYNTHETIC_TYPE_CODE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:18"><expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:13">depth</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <literal type="number" pos:start="41:17" pos:end="41:17">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="47:5">else <block pos:start="43:12" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:41">

        <expr_stmt pos:start="45:9" pos:end="45:41"><expr pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:13">depth</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:40"><name pos:start="45:17" pos:end="45:23">AV_RL16</name><argument_list pos:start="45:24" pos:end="45:40">(<argument pos:start="45:25" pos:end="45:39"><expr pos:start="45:25" pos:end="45:39"><operator pos:start="45:25" pos:end="45:25">&amp;</operator><name pos:start="45:26" pos:end="45:39"><name pos:start="45:26" pos:end="45:35">fli_header</name><index pos:start="45:36" pos:end="45:39">[<expr pos:start="45:37" pos:end="45:38"><literal type="number" pos:start="45:37" pos:end="45:38">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:19">(<expr pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:13">depth</name> <operator pos:start="51:15" pos:end="51:16">==</operator> <literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr>)</condition> <block pos:start="51:21" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:18">

        <expr_stmt pos:start="53:9" pos:end="53:18"><expr pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:13">depth</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <literal type="number" pos:start="53:17" pos:end="53:17">8</literal></expr>;</expr_stmt> <comment type="block" pos:start="53:20" pos:end="53:96">/* Some FLC generators set depth to zero, when they mean 8Bpp. Fix up here */</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:60">(<expr pos:start="59:9" pos:end="59:59"><operator pos:start="59:9" pos:end="59:9">(</operator><name pos:start="59:10" pos:end="59:20"><name pos:start="59:10" pos:end="59:10">s</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:20">fli_type</name></name> <operator pos:start="59:22" pos:end="59:23">==</operator> <name pos:start="59:25" pos:end="59:41">FLC_FLX_TYPE_CODE</name><operator pos:start="59:42" pos:end="59:42">)</operator> <operator pos:start="59:44" pos:end="59:45">&amp;&amp;</operator> <operator pos:start="59:47" pos:end="59:47">(</operator><name pos:start="59:48" pos:end="59:52">depth</name> <operator pos:start="59:54" pos:end="59:55">==</operator> <literal type="number" pos:start="59:57" pos:end="59:58">16</literal><operator pos:start="59:59" pos:end="59:59">)</operator></expr>)</condition> <block pos:start="59:62" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:19">

        <expr_stmt pos:start="61:9" pos:end="61:19"><expr pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:13">depth</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <literal type="number" pos:start="61:17" pos:end="61:18">15</literal></expr>;</expr_stmt> <comment type="block" pos:start="61:21" pos:end="61:96">/* Original Autodesk FLX's say the depth is 16Bpp when it is really 15Bpp */</comment>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="67:5" pos:end="87:5">switch <condition pos:start="67:12" pos:end="67:18">(<expr pos:start="67:13" pos:end="67:17"><name pos:start="67:13" pos:end="67:17">depth</name></expr>)</condition> <block pos:start="67:20" pos:end="87:5">{<block_content pos:start="69:9" pos:end="85:45">

        <case pos:start="69:9" pos:end="69:17">case <expr pos:start="69:14" pos:end="69:14"><literal type="number" pos:start="69:14" pos:end="69:14">8</literal></expr>  :</case> <expr_stmt pos:start="69:19" pos:end="69:51"><expr pos:start="69:19" pos:end="69:50"><name pos:start="69:19" pos:end="69:32"><name pos:start="69:19" pos:end="69:23">avctx</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:32">pix_fmt</name></name> <operator pos:start="69:34" pos:end="69:34">=</operator> <name pos:start="69:36" pos:end="69:50">AV_PIX_FMT_PAL8</name></expr>;</expr_stmt> <break pos:start="69:53" pos:end="69:58">break;</break>

        <case pos:start="71:9" pos:end="71:17">case <expr pos:start="71:14" pos:end="71:15"><literal type="number" pos:start="71:14" pos:end="71:15">15</literal></expr> :</case> <expr_stmt pos:start="71:19" pos:end="71:53"><expr pos:start="71:19" pos:end="71:52"><name pos:start="71:19" pos:end="71:32"><name pos:start="71:19" pos:end="71:23">avctx</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:32">pix_fmt</name></name> <operator pos:start="71:34" pos:end="71:34">=</operator> <name pos:start="71:36" pos:end="71:52">AV_PIX_FMT_RGB555</name></expr>;</expr_stmt> <break pos:start="71:55" pos:end="71:60">break;</break>

        <case pos:start="73:9" pos:end="73:17">case <expr pos:start="73:14" pos:end="73:15"><literal type="number" pos:start="73:14" pos:end="73:15">16</literal></expr> :</case> <expr_stmt pos:start="73:19" pos:end="73:53"><expr pos:start="73:19" pos:end="73:52"><name pos:start="73:19" pos:end="73:32"><name pos:start="73:19" pos:end="73:23">avctx</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:32">pix_fmt</name></name> <operator pos:start="73:34" pos:end="73:34">=</operator> <name pos:start="73:36" pos:end="73:52">AV_PIX_FMT_RGB565</name></expr>;</expr_stmt> <break pos:start="73:55" pos:end="73:60">break;</break>

        <case pos:start="75:9" pos:end="75:17">case <expr pos:start="75:14" pos:end="75:15"><literal type="number" pos:start="75:14" pos:end="75:15">24</literal></expr> :</case> <expr_stmt pos:start="75:19" pos:end="75:52"><expr pos:start="75:19" pos:end="75:51"><name pos:start="75:19" pos:end="75:32"><name pos:start="75:19" pos:end="75:23">avctx</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:32">pix_fmt</name></name> <operator pos:start="75:34" pos:end="75:34">=</operator> <name pos:start="75:36" pos:end="75:51">AV_PIX_FMT_BGR24</name></expr>;</expr_stmt> <comment type="block" pos:start="75:54" pos:end="75:108">/* Supposedly BGR, but havent any files to test with */</comment>

                  <expr_stmt pos:start="77:19" pos:end="77:102"><expr pos:start="77:19" pos:end="77:101"><call pos:start="77:19" pos:end="77:101"><name pos:start="77:19" pos:end="77:24">av_log</name><argument_list pos:start="77:25" pos:end="77:101">(<argument pos:start="77:26" pos:end="77:30"><expr pos:start="77:26" pos:end="77:30"><name pos:start="77:26" pos:end="77:30">avctx</name></expr></argument>, <argument pos:start="77:33" pos:end="77:44"><expr pos:start="77:33" pos:end="77:44"><name pos:start="77:33" pos:end="77:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:47" pos:end="77:100"><expr pos:start="77:47" pos:end="77:100"><literal type="string" pos:start="77:47" pos:end="77:100">"24Bpp FLC/FLX is unsupported due to no test files.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  <return pos:start="79:19" pos:end="79:46">return <expr pos:start="79:26" pos:end="79:45"><name pos:start="79:26" pos:end="79:45">AVERROR_PATCHWELCOME</name></expr>;</return>

        <default pos:start="81:9" pos:end="81:17">default :</default>

                  <expr_stmt pos:start="83:19" pos:end="83:105"><expr pos:start="83:19" pos:end="83:104"><call pos:start="83:19" pos:end="83:104"><name pos:start="83:19" pos:end="83:24">av_log</name><argument_list pos:start="83:25" pos:end="83:104">(<argument pos:start="83:26" pos:end="83:30"><expr pos:start="83:26" pos:end="83:30"><name pos:start="83:26" pos:end="83:30">avctx</name></expr></argument>, <argument pos:start="83:33" pos:end="83:44"><expr pos:start="83:33" pos:end="83:44"><name pos:start="83:33" pos:end="83:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:47" pos:end="83:97"><expr pos:start="83:47" pos:end="83:97"><literal type="string" pos:start="83:47" pos:end="83:97">"Unknown FLC/FLX depth of %d Bpp is unsupported.\n"</literal></expr></argument>,<argument pos:start="83:99" pos:end="83:103"><expr pos:start="83:99" pos:end="83:103"><name pos:start="83:99" pos:end="83:103">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  <return pos:start="85:19" pos:end="85:45">return <expr pos:start="85:26" pos:end="85:44"><name pos:start="85:26" pos:end="85:44">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="91:5" pos:end="91:28"><expr pos:start="91:5" pos:end="91:27"><name pos:start="91:5" pos:end="91:20"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:12">frame</name><operator pos:start="91:13" pos:end="91:13">.</operator><name pos:start="91:14" pos:end="91:17">data</name><index pos:start="91:18" pos:end="91:20">[<expr pos:start="91:19" pos:end="91:19"><literal type="number" pos:start="91:19" pos:end="91:19">0</literal></expr>]</index></name> <operator pos:start="91:22" pos:end="91:22">=</operator> <name pos:start="91:24" pos:end="91:27">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:23"><expr pos:start="93:5" pos:end="93:22"><name pos:start="93:5" pos:end="93:18"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:18">new_palette</name></name> <operator pos:start="93:20" pos:end="93:20">=</operator> <literal type="number" pos:start="93:22" pos:end="93:22">0</literal></expr>;</expr_stmt>



    <return pos:start="97:5" pos:end="97:13">return <expr pos:start="97:12" pos:end="97:12"><literal type="number" pos:start="97:12" pos:end="97:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
