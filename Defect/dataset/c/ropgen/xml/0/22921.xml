<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22921.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">mpegts_write_section1</name><parameter_list pos:start="1:33" pos:end="5:55">(<parameter pos:start="1:34" pos:end="1:49"><decl pos:start="1:34" pos:end="1:49"><type pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:46">MpegTSSection</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:58"><decl pos:start="1:52" pos:end="1:58"><type pos:start="1:52" pos:end="1:58"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:58">tid</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:66"><decl pos:start="1:61" pos:end="1:66"><type pos:start="1:61" pos:end="1:66"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:66">id</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:44"><decl pos:start="3:34" pos:end="3:44"><type pos:start="3:34" pos:end="3:44"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:44">version</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:57"><decl pos:start="3:47" pos:end="3:57"><type pos:start="3:47" pos:end="3:57"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:57">sec_num</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:75"><decl pos:start="3:60" pos:end="3:75"><type pos:start="3:60" pos:end="3:75"><name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:75">last_sec_num</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:45"><decl pos:start="5:34" pos:end="5:45"><type pos:start="5:34" pos:end="5:45"><name pos:start="5:34" pos:end="5:40">uint8_t</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier></type><name pos:start="5:43" pos:end="5:45">buf</name></decl></parameter>, <parameter pos:start="5:48" pos:end="5:54"><decl pos:start="5:48" pos:end="5:54"><type pos:start="5:48" pos:end="5:54"><name pos:start="5:48" pos:end="5:50">int</name></type> <name pos:start="5:52" pos:end="5:54">len</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="51:1">{<block_content pos:start="9:5" pos:end="49:13">

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:25"><name pos:start="9:13" pos:end="9:19">section</name><index pos:start="9:20" pos:end="9:25">[<expr pos:start="9:21" pos:end="9:24"><literal type="number" pos:start="9:21" pos:end="9:24">1024</literal></expr>]</index></name></decl>, <decl pos:start="9:28" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:11"><modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:29">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:24">tot_len</name></decl>;</decl_stmt>

    <comment type="block" pos:start="13:5" pos:end="13:60">/* reserved_future_use field must be set to 1 for SDT */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:58"><decl pos:start="15:5" pos:end="15:57"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:22">flags</name> <init pos:start="15:24" pos:end="15:57">= <expr pos:start="15:26" pos:end="15:57"><ternary pos:start="15:26" pos:end="15:57"><condition pos:start="15:26" pos:end="15:41"><expr pos:start="15:26" pos:end="15:39"><name pos:start="15:26" pos:end="15:28">tid</name> <operator pos:start="15:30" pos:end="15:31">==</operator> <name pos:start="15:33" pos:end="15:39">SDT_TID</name></expr> ?</condition><then pos:start="15:43" pos:end="15:48"> <expr pos:start="15:43" pos:end="15:48"><literal type="number" pos:start="15:43" pos:end="15:48">0xf000</literal></expr> </then><else pos:start="15:50" pos:end="15:57">: <expr pos:start="15:52" pos:end="15:57"><literal type="number" pos:start="15:52" pos:end="15:57">0xb000</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:11">tot_len</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <literal type="number" pos:start="19:15" pos:end="19:17">3</literal> <operator pos:start="19:17" pos:end="19:17">+</operator> <literal type="number" pos:start="19:19" pos:end="19:21">5</literal> <operator pos:start="19:21" pos:end="19:21">+</operator> <name pos:start="19:23" pos:end="19:25">len</name> <operator pos:start="19:27" pos:end="19:27">+</operator> <literal type="number" pos:start="19:29" pos:end="19:29">4</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="21:5" pos:end="21:30">/* check if not too big */</comment>

    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:23">(<expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:15">tot_len</name> <operator pos:start="23:17" pos:end="23:17">&gt;</operator> <literal type="number" pos:start="23:19" pos:end="23:22">1024</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:19"><expr pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:5">q</name>    <operator pos:start="29:10" pos:end="29:10">=</operator> <name pos:start="29:12" pos:end="29:18">section</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:15"><expr pos:start="31:5" pos:end="31:14"><operator pos:start="31:5" pos:end="31:5">*</operator><name pos:start="31:6" pos:end="31:6">q</name><operator pos:start="31:7" pos:end="31:8">++</operator> <operator pos:start="31:10" pos:end="31:10">=</operator> <name pos:start="31:12" pos:end="31:14">tid</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:37"><expr pos:start="33:5" pos:end="33:36"><call pos:start="33:5" pos:end="33:36"><name pos:start="33:5" pos:end="33:9">put16</name><argument_list pos:start="33:10" pos:end="33:36">(<argument pos:start="33:11" pos:end="33:12"><expr pos:start="33:11" pos:end="33:12"><operator pos:start="33:11" pos:end="33:11">&amp;</operator><name pos:start="33:12" pos:end="33:12">q</name></expr></argument>, <argument pos:start="33:15" pos:end="33:35"><expr pos:start="33:15" pos:end="33:35"><name pos:start="33:15" pos:end="33:19">flags</name> <operator pos:start="33:21" pos:end="33:21">|</operator> <operator pos:start="33:23" pos:end="33:23">(</operator><name pos:start="33:24" pos:end="33:26">len</name> <operator pos:start="33:28" pos:end="33:28">+</operator> <literal type="number" pos:start="33:30" pos:end="33:32">5</literal> <operator pos:start="33:32" pos:end="33:32">+</operator> <literal type="number" pos:start="33:34" pos:end="33:34">4</literal><operator pos:start="33:35" pos:end="33:35">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="33:39" pos:end="33:70">/* 5 byte header + 4 byte CRC */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:18"><expr pos:start="35:5" pos:end="35:17"><call pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:9">put16</name><argument_list pos:start="35:10" pos:end="35:17">(<argument pos:start="35:11" pos:end="35:12"><expr pos:start="35:11" pos:end="35:12"><operator pos:start="35:11" pos:end="35:11">&amp;</operator><name pos:start="35:12" pos:end="35:12">q</name></expr></argument>, <argument pos:start="35:15" pos:end="35:16"><expr pos:start="35:15" pos:end="35:16"><name pos:start="35:15" pos:end="35:16">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><operator pos:start="37:5" pos:end="37:5">*</operator><name pos:start="37:6" pos:end="37:6">q</name><operator pos:start="37:7" pos:end="37:8">++</operator> <operator pos:start="37:10" pos:end="37:10">=</operator> <literal type="number" pos:start="37:12" pos:end="37:15">0xc1</literal> <operator pos:start="37:17" pos:end="37:17">|</operator> <operator pos:start="37:19" pos:end="37:19">(</operator><name pos:start="37:20" pos:end="37:26">version</name> <operator pos:start="37:28" pos:end="37:29">&lt;&lt;</operator> <literal type="number" pos:start="37:31" pos:end="37:31">1</literal><operator pos:start="37:32" pos:end="37:32">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="37:35" pos:end="37:66">/* current_next_indicator = 1 */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><operator pos:start="39:5" pos:end="39:5">*</operator><name pos:start="39:6" pos:end="39:6">q</name><operator pos:start="39:7" pos:end="39:8">++</operator> <operator pos:start="39:10" pos:end="39:10">=</operator> <name pos:start="39:12" pos:end="39:18">sec_num</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:24"><expr pos:start="41:5" pos:end="41:23"><operator pos:start="41:5" pos:end="41:5">*</operator><name pos:start="41:6" pos:end="41:6">q</name><operator pos:start="41:7" pos:end="41:8">++</operator> <operator pos:start="41:10" pos:end="41:10">=</operator> <name pos:start="41:12" pos:end="41:23">last_sec_num</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:24"><expr pos:start="43:5" pos:end="43:23"><call pos:start="43:5" pos:end="43:23"><name pos:start="43:5" pos:end="43:10">memcpy</name><argument_list pos:start="43:11" pos:end="43:23">(<argument pos:start="43:12" pos:end="43:12"><expr pos:start="43:12" pos:end="43:12"><name pos:start="43:12" pos:end="43:12">q</name></expr></argument>, <argument pos:start="43:15" pos:end="43:17"><expr pos:start="43:15" pos:end="43:17"><name pos:start="43:15" pos:end="43:17">buf</name></expr></argument>, <argument pos:start="43:20" pos:end="43:22"><expr pos:start="43:20" pos:end="43:22"><name pos:start="43:20" pos:end="43:22">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:46"><expr pos:start="47:5" pos:end="47:45"><call pos:start="47:5" pos:end="47:45"><name pos:start="47:5" pos:end="47:24">mpegts_write_section</name><argument_list pos:start="47:25" pos:end="47:45">(<argument pos:start="47:26" pos:end="47:26"><expr pos:start="47:26" pos:end="47:26"><name pos:start="47:26" pos:end="47:26">s</name></expr></argument>, <argument pos:start="47:29" pos:end="47:35"><expr pos:start="47:29" pos:end="47:35"><name pos:start="47:29" pos:end="47:35">section</name></expr></argument>, <argument pos:start="47:38" pos:end="47:44"><expr pos:start="47:38" pos:end="47:44"><name pos:start="47:38" pos:end="47:44">tot_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
