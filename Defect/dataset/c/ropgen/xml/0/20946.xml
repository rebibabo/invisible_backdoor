<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20946.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">TileExcp</name></type> <name pos:start="1:17" pos:end="1:25">decode_x0</name><parameter_list pos:start="1:26" pos:end="1:70">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:38">DisasContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">dc</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:69"><decl pos:start="1:45" pos:end="1:69"><type pos:start="1:45" pos:end="1:69"><name pos:start="1:45" pos:end="1:62">tilegx_bundle_bits</name></type> <name pos:start="1:64" pos:end="1:69">bundle</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:5">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">unsigned</name></type> <name pos:start="5:14" pos:end="5:16">opc</name> <init pos:start="5:18" pos:end="5:40">= <expr pos:start="5:20" pos:end="5:40"><call pos:start="5:20" pos:end="5:40"><name pos:start="5:20" pos:end="5:32">get_Opcode_X0</name><argument_list pos:start="5:33" pos:end="5:40">(<argument pos:start="5:34" pos:end="5:39"><expr pos:start="5:34" pos:end="5:39"><name pos:start="5:34" pos:end="5:39">bundle</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:17">dest</name> <init pos:start="7:19" pos:end="7:39">= <expr pos:start="7:21" pos:end="7:39"><call pos:start="7:21" pos:end="7:39"><name pos:start="7:21" pos:end="7:31">get_Dest_X0</name><argument_list pos:start="7:32" pos:end="7:39">(<argument pos:start="7:33" pos:end="7:38"><expr pos:start="7:33" pos:end="7:38"><name pos:start="7:33" pos:end="7:38">bundle</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:17">srca</name> <init pos:start="9:19" pos:end="9:39">= <expr pos:start="9:21" pos:end="9:39"><call pos:start="9:21" pos:end="9:39"><name pos:start="9:21" pos:end="9:31">get_SrcA_X0</name><argument_list pos:start="9:32" pos:end="9:39">(<argument pos:start="9:33" pos:end="9:38"><expr pos:start="9:33" pos:end="9:38"><name pos:start="9:33" pos:end="9:38">bundle</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:16">ext</name></decl>, <decl pos:start="11:19" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:19" pos:end="11:22">srcb</name></decl>, <decl pos:start="11:25" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:25" pos:end="11:27">bfs</name></decl>, <decl pos:start="11:30" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:30" pos:end="11:32">bfe</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">imm</name></decl>;</decl_stmt>



    <switch pos:start="17:5" pos:end="85:5">switch <condition pos:start="17:12" pos:end="17:16">(<expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">opc</name></expr>)</condition> <block pos:start="17:18" pos:end="85:5">{<block_content pos:start="19:5" pos:end="83:48">

    <case pos:start="19:5" pos:end="19:25">case <expr pos:start="19:10" pos:end="19:24"><name pos:start="19:10" pos:end="19:24">RRR_0_OPCODE_X0</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:48"><expr pos:start="21:9" pos:end="21:47"><name pos:start="21:9" pos:end="21:11">ext</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:47"><name pos:start="21:15" pos:end="21:39">get_RRROpcodeExtension_X0</name><argument_list pos:start="21:40" pos:end="21:47">(<argument pos:start="21:41" pos:end="21:46"><expr pos:start="21:41" pos:end="21:46"><name pos:start="21:41" pos:end="21:46">bundle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:41">(<expr pos:start="23:13" pos:end="23:40"><name pos:start="23:13" pos:end="23:15">ext</name> <operator pos:start="23:17" pos:end="23:18">==</operator> <name pos:start="23:20" pos:end="23:40">UNARY_RRR_0_OPCODE_X0</name></expr>)</condition> <block pos:start="23:43" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:67">

            <expr_stmt pos:start="25:13" pos:end="25:54"><expr pos:start="25:13" pos:end="25:53"><name pos:start="25:13" pos:end="25:15">ext</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:53"><name pos:start="25:19" pos:end="25:45">get_UnaryOpcodeExtension_X0</name><argument_list pos:start="25:46" pos:end="25:53">(<argument pos:start="25:47" pos:end="25:52"><expr pos:start="25:47" pos:end="25:52"><name pos:start="25:47" pos:end="25:52">bundle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:67">return <expr pos:start="27:20" pos:end="27:66"><call pos:start="27:20" pos:end="27:66"><name pos:start="27:20" pos:end="27:32">gen_rr_opcode</name><argument_list pos:start="27:33" pos:end="27:66">(<argument pos:start="27:34" pos:end="27:35"><expr pos:start="27:34" pos:end="27:35"><name pos:start="27:34" pos:end="27:35">dc</name></expr></argument>, <argument pos:start="27:38" pos:end="27:53"><expr pos:start="27:38" pos:end="27:53"><call pos:start="27:38" pos:end="27:53"><name pos:start="27:38" pos:end="27:39">OE</name><argument_list pos:start="27:40" pos:end="27:53">(<argument pos:start="27:41" pos:end="27:43"><expr pos:start="27:41" pos:end="27:43"><name pos:start="27:41" pos:end="27:43">opc</name></expr></argument>, <argument pos:start="27:46" pos:end="27:48"><expr pos:start="27:46" pos:end="27:48"><name pos:start="27:46" pos:end="27:48">ext</name></expr></argument>, <argument pos:start="27:51" pos:end="27:52"><expr pos:start="27:51" pos:end="27:52"><name pos:start="27:51" pos:end="27:52">X0</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:56" pos:end="27:59"><expr pos:start="27:56" pos:end="27:59"><name pos:start="27:56" pos:end="27:59">dest</name></expr></argument>, <argument pos:start="27:62" pos:end="27:65"><expr pos:start="27:62" pos:end="27:65"><name pos:start="27:62" pos:end="27:65">srca</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:12">srcb</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:34"><name pos:start="31:16" pos:end="31:26">get_SrcB_X0</name><argument_list pos:start="31:27" pos:end="31:34">(<argument pos:start="31:28" pos:end="31:33"><expr pos:start="31:28" pos:end="31:33"><name pos:start="31:28" pos:end="31:33">bundle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:70">return <expr pos:start="33:16" pos:end="33:69"><call pos:start="33:16" pos:end="33:69"><name pos:start="33:16" pos:end="33:29">gen_rrr_opcode</name><argument_list pos:start="33:30" pos:end="33:69">(<argument pos:start="33:31" pos:end="33:32"><expr pos:start="33:31" pos:end="33:32"><name pos:start="33:31" pos:end="33:32">dc</name></expr></argument>, <argument pos:start="33:35" pos:end="33:50"><expr pos:start="33:35" pos:end="33:50"><call pos:start="33:35" pos:end="33:50"><name pos:start="33:35" pos:end="33:36">OE</name><argument_list pos:start="33:37" pos:end="33:50">(<argument pos:start="33:38" pos:end="33:40"><expr pos:start="33:38" pos:end="33:40"><name pos:start="33:38" pos:end="33:40">opc</name></expr></argument>, <argument pos:start="33:43" pos:end="33:45"><expr pos:start="33:43" pos:end="33:45"><name pos:start="33:43" pos:end="33:45">ext</name></expr></argument>, <argument pos:start="33:48" pos:end="33:49"><expr pos:start="33:48" pos:end="33:49"><name pos:start="33:48" pos:end="33:49">X0</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:53" pos:end="33:56"><expr pos:start="33:53" pos:end="33:56"><name pos:start="33:53" pos:end="33:56">dest</name></expr></argument>, <argument pos:start="33:59" pos:end="33:62"><expr pos:start="33:59" pos:end="33:62"><name pos:start="33:59" pos:end="33:62">srca</name></expr></argument>, <argument pos:start="33:65" pos:end="33:68"><expr pos:start="33:65" pos:end="33:68"><name pos:start="33:65" pos:end="33:68">srcb</name></expr></argument>)</argument_list></call></expr>;</return>



    <case pos:start="37:5" pos:end="37:25">case <expr pos:start="37:10" pos:end="37:24"><name pos:start="37:10" pos:end="37:24">SHIFT_OPCODE_X0</name></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:50"><expr pos:start="39:9" pos:end="39:49"><name pos:start="39:9" pos:end="39:11">ext</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:49"><name pos:start="39:15" pos:end="39:41">get_ShiftOpcodeExtension_X0</name><argument_list pos:start="39:42" pos:end="39:49">(<argument pos:start="39:43" pos:end="39:48"><expr pos:start="39:43" pos:end="39:48"><name pos:start="39:43" pos:end="39:48">bundle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:11">imm</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:34"><name pos:start="41:15" pos:end="41:26">get_ShAmt_X0</name><argument_list pos:start="41:27" pos:end="41:34">(<argument pos:start="41:28" pos:end="41:33"><expr pos:start="41:28" pos:end="41:33"><name pos:start="41:28" pos:end="41:33">bundle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:69">return <expr pos:start="43:16" pos:end="43:68"><call pos:start="43:16" pos:end="43:68"><name pos:start="43:16" pos:end="43:29">gen_rri_opcode</name><argument_list pos:start="43:30" pos:end="43:68">(<argument pos:start="43:31" pos:end="43:32"><expr pos:start="43:31" pos:end="43:32"><name pos:start="43:31" pos:end="43:32">dc</name></expr></argument>, <argument pos:start="43:35" pos:end="43:50"><expr pos:start="43:35" pos:end="43:50"><call pos:start="43:35" pos:end="43:50"><name pos:start="43:35" pos:end="43:36">OE</name><argument_list pos:start="43:37" pos:end="43:50">(<argument pos:start="43:38" pos:end="43:40"><expr pos:start="43:38" pos:end="43:40"><name pos:start="43:38" pos:end="43:40">opc</name></expr></argument>, <argument pos:start="43:43" pos:end="43:45"><expr pos:start="43:43" pos:end="43:45"><name pos:start="43:43" pos:end="43:45">ext</name></expr></argument>, <argument pos:start="43:48" pos:end="43:49"><expr pos:start="43:48" pos:end="43:49"><name pos:start="43:48" pos:end="43:49">X0</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:53" pos:end="43:56"><expr pos:start="43:53" pos:end="43:56"><name pos:start="43:53" pos:end="43:56">dest</name></expr></argument>, <argument pos:start="43:59" pos:end="43:62"><expr pos:start="43:59" pos:end="43:62"><name pos:start="43:59" pos:end="43:62">srca</name></expr></argument>, <argument pos:start="43:65" pos:end="43:67"><expr pos:start="43:65" pos:end="43:67"><name pos:start="43:65" pos:end="43:67">imm</name></expr></argument>)</argument_list></call></expr>;</return>



    <case pos:start="47:5" pos:end="47:24">case <expr pos:start="47:10" pos:end="47:23"><name pos:start="47:10" pos:end="47:23">IMM8_OPCODE_X0</name></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:49"><expr pos:start="49:9" pos:end="49:48"><name pos:start="49:9" pos:end="49:11">ext</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:48"><name pos:start="49:15" pos:end="49:40">get_Imm8OpcodeExtension_X0</name><argument_list pos:start="49:41" pos:end="49:48">(<argument pos:start="49:42" pos:end="49:47"><expr pos:start="49:42" pos:end="49:47"><name pos:start="49:42" pos:end="49:47">bundle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:42"><expr pos:start="51:9" pos:end="51:41"><name pos:start="51:9" pos:end="51:11">imm</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <operator pos:start="51:15" pos:end="51:15">(</operator><name pos:start="51:16" pos:end="51:21">int8_t</name><operator pos:start="51:22" pos:end="51:22">)</operator><call pos:start="51:23" pos:end="51:41"><name pos:start="51:23" pos:end="51:33">get_Imm8_X0</name><argument_list pos:start="51:34" pos:end="51:41">(<argument pos:start="51:35" pos:end="51:40"><expr pos:start="51:35" pos:end="51:40"><name pos:start="51:35" pos:end="51:40">bundle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:69">return <expr pos:start="53:16" pos:end="53:68"><call pos:start="53:16" pos:end="53:68"><name pos:start="53:16" pos:end="53:29">gen_rri_opcode</name><argument_list pos:start="53:30" pos:end="53:68">(<argument pos:start="53:31" pos:end="53:32"><expr pos:start="53:31" pos:end="53:32"><name pos:start="53:31" pos:end="53:32">dc</name></expr></argument>, <argument pos:start="53:35" pos:end="53:50"><expr pos:start="53:35" pos:end="53:50"><call pos:start="53:35" pos:end="53:50"><name pos:start="53:35" pos:end="53:36">OE</name><argument_list pos:start="53:37" pos:end="53:50">(<argument pos:start="53:38" pos:end="53:40"><expr pos:start="53:38" pos:end="53:40"><name pos:start="53:38" pos:end="53:40">opc</name></expr></argument>, <argument pos:start="53:43" pos:end="53:45"><expr pos:start="53:43" pos:end="53:45"><name pos:start="53:43" pos:end="53:45">ext</name></expr></argument>, <argument pos:start="53:48" pos:end="53:49"><expr pos:start="53:48" pos:end="53:49"><name pos:start="53:48" pos:end="53:49">X0</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="53:53" pos:end="53:56"><expr pos:start="53:53" pos:end="53:56"><name pos:start="53:53" pos:end="53:56">dest</name></expr></argument>, <argument pos:start="53:59" pos:end="53:62"><expr pos:start="53:59" pos:end="53:62"><name pos:start="53:59" pos:end="53:62">srca</name></expr></argument>, <argument pos:start="53:65" pos:end="53:67"><expr pos:start="53:65" pos:end="53:67"><name pos:start="53:65" pos:end="53:67">imm</name></expr></argument>)</argument_list></call></expr>;</return>



    <case pos:start="57:5" pos:end="57:22">case <expr pos:start="57:10" pos:end="57:21"><name pos:start="57:10" pos:end="57:21">BF_OPCODE_X0</name></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:47"><expr pos:start="59:9" pos:end="59:46"><name pos:start="59:9" pos:end="59:11">ext</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:46"><name pos:start="59:15" pos:end="59:38">get_BFOpcodeExtension_X0</name><argument_list pos:start="59:39" pos:end="59:46">(<argument pos:start="59:40" pos:end="59:45"><expr pos:start="59:40" pos:end="59:45"><name pos:start="59:40" pos:end="59:45">bundle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:37"><expr pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:11">bfs</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <call pos:start="61:15" pos:end="61:36"><name pos:start="61:15" pos:end="61:28">get_BFStart_X0</name><argument_list pos:start="61:29" pos:end="61:36">(<argument pos:start="61:30" pos:end="61:35"><expr pos:start="61:30" pos:end="61:35"><name pos:start="61:30" pos:end="61:35">bundle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:11">bfe</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="63:34"><name pos:start="63:15" pos:end="63:26">get_BFEnd_X0</name><argument_list pos:start="63:27" pos:end="63:34">(<argument pos:start="63:28" pos:end="63:33"><expr pos:start="63:28" pos:end="63:33"><name pos:start="63:28" pos:end="63:33">bundle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:63">return <expr pos:start="65:16" pos:end="65:62"><call pos:start="65:16" pos:end="65:62"><name pos:start="65:16" pos:end="65:31">gen_bf_opcode_x0</name><argument_list pos:start="65:32" pos:end="65:62">(<argument pos:start="65:33" pos:end="65:34"><expr pos:start="65:33" pos:end="65:34"><name pos:start="65:33" pos:end="65:34">dc</name></expr></argument>, <argument pos:start="65:37" pos:end="65:39"><expr pos:start="65:37" pos:end="65:39"><name pos:start="65:37" pos:end="65:39">ext</name></expr></argument>, <argument pos:start="65:42" pos:end="65:45"><expr pos:start="65:42" pos:end="65:45"><name pos:start="65:42" pos:end="65:45">dest</name></expr></argument>, <argument pos:start="65:48" pos:end="65:51"><expr pos:start="65:48" pos:end="65:51"><name pos:start="65:48" pos:end="65:51">srca</name></expr></argument>, <argument pos:start="65:54" pos:end="65:56"><expr pos:start="65:54" pos:end="65:56"><name pos:start="65:54" pos:end="65:56">bfs</name></expr></argument>, <argument pos:start="65:59" pos:end="65:61"><expr pos:start="65:59" pos:end="65:61"><name pos:start="65:59" pos:end="65:61">bfe</name></expr></argument>)</argument_list></call></expr>;</return>



    <case pos:start="69:5" pos:end="69:25">case <expr pos:start="69:10" pos:end="69:24"><name pos:start="69:10" pos:end="69:24">ADDLI_OPCODE_X0</name></expr>:</case>

    <case pos:start="71:5" pos:end="71:30">case <expr pos:start="71:10" pos:end="71:29"><name pos:start="71:10" pos:end="71:29">SHL16INSLI_OPCODE_X0</name></expr>:</case>

    <case pos:start="73:5" pos:end="73:26">case <expr pos:start="73:10" pos:end="73:25"><name pos:start="73:10" pos:end="73:25">ADDXLI_OPCODE_X0</name></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:44"><expr pos:start="75:9" pos:end="75:43"><name pos:start="75:9" pos:end="75:11">imm</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <operator pos:start="75:15" pos:end="75:15">(</operator><name pos:start="75:16" pos:end="75:22">int16_t</name><operator pos:start="75:23" pos:end="75:23">)</operator><call pos:start="75:24" pos:end="75:43"><name pos:start="75:24" pos:end="75:35">get_Imm16_X0</name><argument_list pos:start="75:36" pos:end="75:43">(<argument pos:start="75:37" pos:end="75:42"><expr pos:start="75:37" pos:end="75:42"><name pos:start="75:37" pos:end="75:42">bundle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:67">return <expr pos:start="77:16" pos:end="77:66"><call pos:start="77:16" pos:end="77:66"><name pos:start="77:16" pos:end="77:29">gen_rri_opcode</name><argument_list pos:start="77:30" pos:end="77:66">(<argument pos:start="77:31" pos:end="77:32"><expr pos:start="77:31" pos:end="77:32"><name pos:start="77:31" pos:end="77:32">dc</name></expr></argument>, <argument pos:start="77:35" pos:end="77:48"><expr pos:start="77:35" pos:end="77:48"><call pos:start="77:35" pos:end="77:48"><name pos:start="77:35" pos:end="77:36">OE</name><argument_list pos:start="77:37" pos:end="77:48">(<argument pos:start="77:38" pos:end="77:40"><expr pos:start="77:38" pos:end="77:40"><name pos:start="77:38" pos:end="77:40">opc</name></expr></argument>, <argument pos:start="77:43" pos:end="77:43"><expr pos:start="77:43" pos:end="77:43"><literal type="number" pos:start="77:43" pos:end="77:43">0</literal></expr></argument>, <argument pos:start="77:46" pos:end="77:47"><expr pos:start="77:46" pos:end="77:47"><name pos:start="77:46" pos:end="77:47">X0</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:51" pos:end="77:54"><expr pos:start="77:51" pos:end="77:54"><name pos:start="77:51" pos:end="77:54">dest</name></expr></argument>, <argument pos:start="77:57" pos:end="77:60"><expr pos:start="77:57" pos:end="77:60"><name pos:start="77:57" pos:end="77:60">srca</name></expr></argument>, <argument pos:start="77:63" pos:end="77:65"><expr pos:start="77:63" pos:end="77:65"><name pos:start="77:63" pos:end="77:65">imm</name></expr></argument>)</argument_list></call></expr>;</return>



    <default pos:start="81:5" pos:end="81:12">default:</default>

        <return pos:start="83:9" pos:end="83:48">return <expr pos:start="83:16" pos:end="83:47"><name pos:start="83:16" pos:end="83:47">TILEGX_EXCP_OPCODE_UNIMPLEMENTED</name></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
