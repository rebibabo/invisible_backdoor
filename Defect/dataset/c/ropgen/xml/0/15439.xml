<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15439.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">rtas_event_log_queue</name><parameter_list pos:start="1:33" pos:end="1:74">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:36">int</name></type> <name pos:start="1:38" pos:end="1:45">log_type</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">data</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:73"><decl pos:start="1:60" pos:end="1:73"><type pos:start="1:60" pos:end="1:73"><name pos:start="1:60" pos:end="1:63">bool</name></type> <name pos:start="1:65" pos:end="1:73">exception</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:60">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">sPAPRMachineState</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:28">spapr</name> <init pos:start="5:30" pos:end="5:64">= <expr pos:start="5:32" pos:end="5:64"><call pos:start="5:32" pos:end="5:64"><name pos:start="5:32" pos:end="5:44">SPAPR_MACHINE</name><argument_list pos:start="5:45" pos:end="5:64">(<argument pos:start="5:46" pos:end="5:63"><expr pos:start="5:46" pos:end="5:63"><call pos:start="5:46" pos:end="5:63"><name pos:start="5:46" pos:end="5:61">qdev_get_machine</name><argument_list pos:start="5:62" pos:end="5:63">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:61"><decl pos:start="7:5" pos:end="7:60"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">sPAPREventLogEntry</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:29">entry</name> <init pos:start="7:31" pos:end="7:60">= <expr pos:start="7:33" pos:end="7:60"><call pos:start="7:33" pos:end="7:60"><name pos:start="7:33" pos:end="7:37">g_new</name><argument_list pos:start="7:38" pos:end="7:60">(<argument pos:start="7:39" pos:end="7:56"><expr pos:start="7:39" pos:end="7:56"><name pos:start="7:39" pos:end="7:56">sPAPREventLogEntry</name></expr></argument>, <argument pos:start="7:59" pos:end="7:59"><expr pos:start="7:59" pos:end="7:59"><literal type="number" pos:start="7:59" pos:end="7:59">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:19"><expr pos:start="11:5" pos:end="11:18"><call pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:12">g_assert</name><argument_list pos:start="11:13" pos:end="11:18">(<argument pos:start="11:14" pos:end="11:17"><expr pos:start="11:14" pos:end="11:17"><name pos:start="11:14" pos:end="11:17">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:9">entry</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:19">log_type</name></name> <operator pos:start="13:21" pos:end="13:21">=</operator> <name pos:start="13:23" pos:end="13:30">log_type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:9">entry</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:20">exception</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <name pos:start="15:24" pos:end="15:32">exception</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:9">entry</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:15">data</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:22">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:60"><expr pos:start="19:5" pos:end="19:59"><call pos:start="19:5" pos:end="19:59"><name pos:start="19:5" pos:end="19:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="19:23" pos:end="19:59">(<argument pos:start="19:24" pos:end="19:45"><expr pos:start="19:24" pos:end="19:45"><operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:45"><name pos:start="19:25" pos:end="19:29">spapr</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:45">pending_events</name></name></expr></argument>, <argument pos:start="19:48" pos:end="19:52"><expr pos:start="19:48" pos:end="19:52"><name pos:start="19:48" pos:end="19:52">entry</name></expr></argument>, <argument pos:start="19:55" pos:end="19:58"><expr pos:start="19:55" pos:end="19:58"><name pos:start="19:55" pos:end="19:58">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
