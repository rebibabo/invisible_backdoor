<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7072.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">USBDevice</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:30">usb_msd_init</name><parameter_list pos:start="1:31" pos:end="1:65">(<parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:37">USBBus</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">bus</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:64"><decl pos:start="1:45" pos:end="1:64"><type pos:start="1:45" pos:end="1:64"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:64">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:15">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:14"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:17">nr</name><init pos:start="5:18" pos:end="5:19">=<expr pos:start="5:19" pos:end="5:19"><literal type="number" pos:start="5:19" pos:end="5:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:14"><name pos:start="7:10" pos:end="7:11">id</name><index pos:start="7:12" pos:end="7:14">[<expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">8</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">QemuOpts</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">DriveInfo</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:20">dinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">USBDevice</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:18">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:18">p1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:16"><name pos:start="17:10" pos:end="17:12">fmt</name><index pos:start="17:13" pos:end="17:16">[<expr pos:start="17:14" pos:end="17:15"><literal type="number" pos:start="17:14" pos:end="17:15">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:55">/* parse -usbdevice disk: syntax into drive opts */</comment>

    <do pos:start="23:5" pos:end="29:20">do <block pos:start="23:8" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:70">

        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><call pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:16">snprintf</name><argument_list pos:start="25:17" pos:end="25:47">(<argument pos:start="25:18" pos:end="25:19"><expr pos:start="25:18" pos:end="25:19"><name pos:start="25:18" pos:end="25:19">id</name></expr></argument>, <argument pos:start="25:22" pos:end="25:31"><expr pos:start="25:22" pos:end="25:31"><sizeof pos:start="25:22" pos:end="25:31">sizeof<argument_list pos:start="25:28" pos:end="25:31">(<argument pos:start="25:29" pos:end="25:30"><expr pos:start="25:29" pos:end="25:30"><name pos:start="25:29" pos:end="25:30">id</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:34" pos:end="25:40"><expr pos:start="25:34" pos:end="25:40"><literal type="string" pos:start="25:34" pos:end="25:40">"usb%d"</literal></expr></argument>, <argument pos:start="25:43" pos:end="25:46"><expr pos:start="25:43" pos:end="25:46"><name pos:start="25:43" pos:end="25:44">nr</name><operator pos:start="25:45" pos:end="25:46">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:70"><expr pos:start="27:9" pos:end="27:69"><name pos:start="27:9" pos:end="27:12">opts</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:69"><name pos:start="27:16" pos:end="27:31">qemu_opts_create</name><argument_list pos:start="27:32" pos:end="27:69">(<argument pos:start="27:33" pos:end="27:55"><expr pos:start="27:33" pos:end="27:55"><call pos:start="27:33" pos:end="27:55"><name pos:start="27:33" pos:end="27:46">qemu_find_opts</name><argument_list pos:start="27:47" pos:end="27:55">(<argument pos:start="27:48" pos:end="27:54"><expr pos:start="27:48" pos:end="27:54"><literal type="string" pos:start="27:48" pos:end="27:54">"drive"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:58" pos:end="27:59"><expr pos:start="27:58" pos:end="27:59"><name pos:start="27:58" pos:end="27:59">id</name></expr></argument>, <argument pos:start="27:62" pos:end="27:62"><expr pos:start="27:62" pos:end="27:62"><literal type="number" pos:start="27:62" pos:end="27:62">1</literal></expr></argument>, <argument pos:start="27:65" pos:end="27:68"><expr pos:start="27:65" pos:end="27:68"><name pos:start="27:65" pos:end="27:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="29:13" pos:end="29:19">(<expr pos:start="29:14" pos:end="29:18"><operator pos:start="29:14" pos:end="29:14">!</operator><name pos:start="29:15" pos:end="29:18">opts</name></expr>)</condition>;</do>



    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:6">p1</name> <operator pos:start="33:8" pos:end="33:8">=</operator> <call pos:start="33:10" pos:end="33:30"><name pos:start="33:10" pos:end="33:15">strchr</name><argument_list pos:start="33:16" pos:end="33:30">(<argument pos:start="33:17" pos:end="33:24"><expr pos:start="33:17" pos:end="33:24"><name pos:start="33:17" pos:end="33:24">filename</name></expr></argument>, <argument pos:start="33:27" pos:end="33:29"><expr pos:start="33:27" pos:end="33:29"><literal type="char" pos:start="33:27" pos:end="33:29">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="59:5"><if pos:start="35:5" pos:end="59:5">if <condition pos:start="35:8" pos:end="35:13">(<expr pos:start="35:9" pos:end="35:12"><name pos:start="35:9" pos:end="35:10">p1</name><operator pos:start="35:11" pos:end="35:12">++</operator></expr>)</condition> <block pos:start="35:15" pos:end="59:5">{<block_content pos:start="37:9" pos:end="57:22">

        <decl_stmt pos:start="37:9" pos:end="37:23"><decl pos:start="37:9" pos:end="37:22"><type pos:start="37:9" pos:end="37:20"><specifier pos:start="37:9" pos:end="37:13">const</specifier> <name pos:start="37:15" pos:end="37:18">char</name> <modifier pos:start="37:20" pos:end="37:20">*</modifier></type><name pos:start="37:21" pos:end="37:22">p2</name></decl>;</decl_stmt>



        <if_stmt pos:start="41:9" pos:end="55:9"><if pos:start="41:9" pos:end="49:9">if <condition pos:start="41:12" pos:end="41:47">(<expr pos:start="41:13" pos:end="41:46"><call pos:start="41:13" pos:end="41:46"><name pos:start="41:13" pos:end="41:20">strstart</name><argument_list pos:start="41:21" pos:end="41:46">(<argument pos:start="41:22" pos:end="41:29"><expr pos:start="41:22" pos:end="41:29"><name pos:start="41:22" pos:end="41:29">filename</name></expr></argument>, <argument pos:start="41:32" pos:end="41:40"><expr pos:start="41:32" pos:end="41:40"><literal type="string" pos:start="41:32" pos:end="41:40">"format="</literal></expr></argument>, <argument pos:start="41:43" pos:end="41:45"><expr pos:start="41:43" pos:end="41:45"><operator pos:start="41:43" pos:end="41:43">&amp;</operator><name pos:start="41:44" pos:end="41:45">p2</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:49" pos:end="49:9">{<block_content pos:start="43:13" pos:end="47:46">

            <decl_stmt pos:start="43:13" pos:end="43:48"><decl pos:start="43:13" pos:end="43:47"><type pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">int</name></type> <name pos:start="43:17" pos:end="43:19">len</name> <init pos:start="43:21" pos:end="43:47">= <expr pos:start="43:23" pos:end="43:47"><call pos:start="43:23" pos:end="43:47"><name pos:start="43:23" pos:end="43:25">MIN</name><argument_list pos:start="43:26" pos:end="43:47">(<argument pos:start="43:27" pos:end="43:33"><expr pos:start="43:27" pos:end="43:33"><name pos:start="43:27" pos:end="43:28">p1</name> <operator pos:start="43:30" pos:end="43:30">-</operator> <name pos:start="43:32" pos:end="43:33">p2</name></expr></argument>, <argument pos:start="43:36" pos:end="43:46"><expr pos:start="43:36" pos:end="43:46"><sizeof pos:start="43:36" pos:end="43:46">sizeof<argument_list pos:start="43:42" pos:end="43:46">(<argument pos:start="43:43" pos:end="43:45"><expr pos:start="43:43" pos:end="43:45"><name pos:start="43:43" pos:end="43:45">fmt</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:34"><expr pos:start="45:13" pos:end="45:33"><call pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:19">pstrcpy</name><argument_list pos:start="45:20" pos:end="45:33">(<argument pos:start="45:21" pos:end="45:23"><expr pos:start="45:21" pos:end="45:23"><name pos:start="45:21" pos:end="45:23">fmt</name></expr></argument>, <argument pos:start="45:26" pos:end="45:28"><expr pos:start="45:26" pos:end="45:28"><name pos:start="45:26" pos:end="45:28">len</name></expr></argument>, <argument pos:start="45:31" pos:end="45:32"><expr pos:start="45:31" pos:end="45:32"><name pos:start="45:31" pos:end="45:32">p2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:46"><expr pos:start="47:13" pos:end="47:45"><call pos:start="47:13" pos:end="47:45"><name pos:start="47:13" pos:end="47:24">qemu_opt_set</name><argument_list pos:start="47:25" pos:end="47:45">(<argument pos:start="47:26" pos:end="47:29"><expr pos:start="47:26" pos:end="47:29"><name pos:start="47:26" pos:end="47:29">opts</name></expr></argument>, <argument pos:start="47:32" pos:end="47:39"><expr pos:start="47:32" pos:end="47:39"><literal type="string" pos:start="47:32" pos:end="47:39">"format"</literal></expr></argument>, <argument pos:start="47:42" pos:end="47:44"><expr pos:start="47:42" pos:end="47:44"><name pos:start="47:42" pos:end="47:44">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="49:11" pos:end="55:9">else if <condition pos:start="49:19" pos:end="49:36">(<expr pos:start="49:20" pos:end="49:35"><operator pos:start="49:20" pos:end="49:20">*</operator><name pos:start="49:21" pos:end="49:28">filename</name> <operator pos:start="49:30" pos:end="49:31">!=</operator> <literal type="char" pos:start="49:33" pos:end="49:35">':'</literal></expr>)</condition> <block pos:start="49:38" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:24">

            <expr_stmt pos:start="51:13" pos:end="51:78"><expr pos:start="51:13" pos:end="51:77"><call pos:start="51:13" pos:end="51:77"><name pos:start="51:13" pos:end="51:24">error_report</name><argument_list pos:start="51:25" pos:end="51:77">(<argument pos:start="51:26" pos:end="51:66"><expr pos:start="51:26" pos:end="51:66"><literal type="string" pos:start="51:26" pos:end="51:66">"unrecognized USB mass-storage option %s"</literal></expr></argument>, <argument pos:start="51:69" pos:end="51:76"><expr pos:start="51:69" pos:end="51:76"><name pos:start="51:69" pos:end="51:76">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:24">return <expr pos:start="53:20" pos:end="53:23"><name pos:start="53:20" pos:end="53:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:22"><expr pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:16">filename</name> <operator pos:start="57:18" pos:end="57:18">=</operator> <name pos:start="57:20" pos:end="57:21">p1</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:19">(<expr pos:start="61:9" pos:end="61:18"><operator pos:start="61:9" pos:end="61:9">!</operator><operator pos:start="61:10" pos:end="61:10">*</operator><name pos:start="61:11" pos:end="61:18">filename</name></expr>)</condition> <block pos:start="61:21" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:20">

        <expr_stmt pos:start="63:9" pos:end="63:58"><expr pos:start="63:9" pos:end="63:57"><call pos:start="63:9" pos:end="63:57"><name pos:start="63:9" pos:end="63:20">error_report</name><argument_list pos:start="63:21" pos:end="63:57">(<argument pos:start="63:22" pos:end="63:56"><expr pos:start="63:22" pos:end="63:56"><literal type="string" pos:start="63:22" pos:end="63:56">"block device specification needed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:20">return <expr pos:start="65:16" pos:end="65:19"><name pos:start="65:16" pos:end="65:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:41"><expr pos:start="69:5" pos:end="69:40"><call pos:start="69:5" pos:end="69:40"><name pos:start="69:5" pos:end="69:16">qemu_opt_set</name><argument_list pos:start="69:17" pos:end="69:40">(<argument pos:start="69:18" pos:end="69:21"><expr pos:start="69:18" pos:end="69:21"><name pos:start="69:18" pos:end="69:21">opts</name></expr></argument>, <argument pos:start="69:24" pos:end="69:29"><expr pos:start="69:24" pos:end="69:29"><literal type="string" pos:start="69:24" pos:end="69:29">"file"</literal></expr></argument>, <argument pos:start="69:32" pos:end="69:39"><expr pos:start="69:32" pos:end="69:39"><name pos:start="69:32" pos:end="69:39">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:37"><expr pos:start="71:5" pos:end="71:36"><call pos:start="71:5" pos:end="71:36"><name pos:start="71:5" pos:end="71:16">qemu_opt_set</name><argument_list pos:start="71:17" pos:end="71:36">(<argument pos:start="71:18" pos:end="71:21"><expr pos:start="71:18" pos:end="71:21"><name pos:start="71:18" pos:end="71:21">opts</name></expr></argument>, <argument pos:start="71:24" pos:end="71:27"><expr pos:start="71:24" pos:end="71:27"><literal type="string" pos:start="71:24" pos:end="71:27">"if"</literal></expr></argument>, <argument pos:start="71:30" pos:end="71:35"><expr pos:start="71:30" pos:end="71:35"><literal type="string" pos:start="71:30" pos:end="71:35">"none"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:27">/* create host drive */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:31"><expr pos:start="77:5" pos:end="77:30"><name pos:start="77:5" pos:end="77:9">dinfo</name> <operator pos:start="77:11" pos:end="77:11">=</operator> <call pos:start="77:13" pos:end="77:30"><name pos:start="77:13" pos:end="77:21">drive_new</name><argument_list pos:start="77:22" pos:end="77:30">(<argument pos:start="77:23" pos:end="77:26"><expr pos:start="77:23" pos:end="77:26"><name pos:start="77:23" pos:end="77:26">opts</name></expr></argument>, <argument pos:start="77:29" pos:end="77:29"><expr pos:start="77:29" pos:end="77:29"><literal type="number" pos:start="77:29" pos:end="77:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:15">(<expr pos:start="79:9" pos:end="79:14"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:14">dinfo</name></expr>)</condition> <block pos:start="79:17" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:20">

        <expr_stmt pos:start="81:9" pos:end="81:28"><expr pos:start="81:9" pos:end="81:27"><call pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:21">qemu_opts_del</name><argument_list pos:start="81:22" pos:end="81:27">(<argument pos:start="81:23" pos:end="81:26"><expr pos:start="81:23" pos:end="81:26"><name pos:start="81:23" pos:end="81:26">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:20">return <expr pos:start="83:16" pos:end="83:19"><name pos:start="83:16" pos:end="83:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="89:5" pos:end="89:29">/* create guest device */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:41"><expr pos:start="91:5" pos:end="91:40"><name pos:start="91:5" pos:end="91:7">dev</name> <operator pos:start="91:9" pos:end="91:9">=</operator> <call pos:start="91:11" pos:end="91:40"><name pos:start="91:11" pos:end="91:20">usb_create</name><argument_list pos:start="91:21" pos:end="91:40">(<argument pos:start="91:22" pos:end="91:24"><expr pos:start="91:22" pos:end="91:24"><name pos:start="91:22" pos:end="91:24">bus</name></expr></argument>, <argument pos:start="91:27" pos:end="91:39"><expr pos:start="91:27" pos:end="91:39"><literal type="string" pos:start="91:27" pos:end="91:39">"usb-storage"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="97:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:13">(<expr pos:start="93:9" pos:end="93:12"><operator pos:start="93:9" pos:end="93:9">!</operator><name pos:start="93:10" pos:end="93:12">dev</name></expr>)</condition> <block pos:start="93:15" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:20">

        <return pos:start="95:9" pos:end="95:20">return <expr pos:start="95:16" pos:end="95:19"><name pos:start="95:16" pos:end="95:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="99:5" pos:end="107:5"><if pos:start="99:5" pos:end="107:5">if <condition pos:start="99:8" pos:end="101:68">(<expr pos:start="99:9" pos:end="101:67"><call pos:start="99:9" pos:end="101:63"><name pos:start="99:9" pos:end="99:27">qdev_prop_set_drive</name><argument_list pos:start="99:28" pos:end="101:63">(<argument pos:start="99:29" pos:end="99:38"><expr pos:start="99:29" pos:end="99:38"><operator pos:start="99:29" pos:end="99:29">&amp;</operator><name pos:start="99:30" pos:end="99:38"><name pos:start="99:30" pos:end="99:32">dev</name><operator pos:start="99:33" pos:end="99:34">-&gt;</operator><name pos:start="99:35" pos:end="99:38">qdev</name></name></expr></argument>, <argument pos:start="99:41" pos:end="99:47"><expr pos:start="99:41" pos:end="99:47"><literal type="string" pos:start="99:41" pos:end="99:47">"drive"</literal></expr></argument>,

                            <argument pos:start="101:29" pos:end="101:62"><expr pos:start="101:29" pos:end="101:62"><call pos:start="101:29" pos:end="101:62"><name pos:start="101:29" pos:end="101:34">blk_bs</name><argument_list pos:start="101:35" pos:end="101:62">(<argument pos:start="101:36" pos:end="101:61"><expr pos:start="101:36" pos:end="101:61"><call pos:start="101:36" pos:end="101:61"><name pos:start="101:36" pos:end="101:54">blk_by_legacy_dinfo</name><argument_list pos:start="101:55" pos:end="101:61">(<argument pos:start="101:56" pos:end="101:60"><expr pos:start="101:56" pos:end="101:60"><name pos:start="101:56" pos:end="101:60">dinfo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="101:65" pos:end="101:65">&lt;</operator> <literal type="number" pos:start="101:67" pos:end="101:67">0</literal></expr>)</condition> <block pos:start="101:70" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:20">

        <expr_stmt pos:start="103:9" pos:end="103:37"><expr pos:start="103:9" pos:end="103:36"><call pos:start="103:9" pos:end="103:36"><name pos:start="103:9" pos:end="103:23">object_unparent</name><argument_list pos:start="103:24" pos:end="103:36">(<argument pos:start="103:25" pos:end="103:35"><expr pos:start="103:25" pos:end="103:35"><call pos:start="103:25" pos:end="103:35"><name pos:start="103:25" pos:end="103:30">OBJECT</name><argument_list pos:start="103:31" pos:end="103:35">(<argument pos:start="103:32" pos:end="103:34"><expr pos:start="103:32" pos:end="103:34"><name pos:start="103:32" pos:end="103:34">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="105:9" pos:end="105:20">return <expr pos:start="105:16" pos:end="105:19"><name pos:start="105:16" pos:end="105:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="109:5" pos:end="111:20"><if pos:start="109:5" pos:end="111:20">if <condition pos:start="109:8" pos:end="109:34">(<expr pos:start="109:9" pos:end="109:33"><call pos:start="109:9" pos:end="109:29"><name pos:start="109:9" pos:end="109:17">qdev_init</name><argument_list pos:start="109:18" pos:end="109:29">(<argument pos:start="109:19" pos:end="109:28"><expr pos:start="109:19" pos:end="109:28"><operator pos:start="109:19" pos:end="109:19">&amp;</operator><name pos:start="109:20" pos:end="109:28"><name pos:start="109:20" pos:end="109:22">dev</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:28">qdev</name></name></expr></argument>)</argument_list></call> <operator pos:start="109:31" pos:end="109:31">&lt;</operator> <literal type="number" pos:start="109:33" pos:end="109:33">0</literal></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:20"><block_content pos:start="111:9" pos:end="111:20">

        <return pos:start="111:9" pos:end="111:20">return <expr pos:start="111:16" pos:end="111:19"><name pos:start="111:16" pos:end="111:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="115:5" pos:end="115:15">return <expr pos:start="115:12" pos:end="115:14"><name pos:start="115:12" pos:end="115:14">dev</name></expr>;</return>

</block_content>}</block></function>
</unit>
