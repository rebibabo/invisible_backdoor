<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8000.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">virtio_setup_block</name><parameter_list pos:start="1:24" pos:end="1:51">(<parameter pos:start="1:25" pos:end="1:50"><decl pos:start="1:25" pos:end="1:50"><type pos:start="1:25" pos:end="1:50"><name pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:30">struct</name> <name pos:start="1:32" pos:end="1:44">subchannel_id</name></name></type> <name pos:start="1:46" pos:end="1:50">schid</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:5">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:24">vq_info_block</name></name></type> <name pos:start="5:26" pos:end="5:29">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:26">vq_config_block</name></name></type> <name pos:start="7:28" pos:end="7:33">config</name> <init pos:start="7:35" pos:end="7:38">= <expr pos:start="7:37" pos:end="7:38"><block pos:start="7:37" pos:end="7:38">{}</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><call pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:16">virtio_reset</name><argument_list pos:start="11:17" pos:end="11:23">(<argument pos:start="11:18" pos:end="11:22"><expr pos:start="11:18" pos:end="11:22"><name pos:start="11:18" pos:end="11:22">schid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:10">config</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:16">index</name></name> <operator pos:start="15:18" pos:end="15:18">=</operator> <literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:70">(<expr pos:start="17:9" pos:end="17:69"><call pos:start="17:9" pos:end="17:69"><name pos:start="17:9" pos:end="17:15">run_ccw</name><argument_list pos:start="17:16" pos:end="17:69">(<argument pos:start="17:17" pos:end="17:21"><expr pos:start="17:17" pos:end="17:21"><name pos:start="17:17" pos:end="17:21">schid</name></expr></argument>, <argument pos:start="17:24" pos:end="17:43"><expr pos:start="17:24" pos:end="17:43"><name pos:start="17:24" pos:end="17:43">CCW_CMD_READ_VQ_CONF</name></expr></argument>, <argument pos:start="17:46" pos:end="17:52"><expr pos:start="17:46" pos:end="17:52"><operator pos:start="17:46" pos:end="17:46">&amp;</operator><name pos:start="17:47" pos:end="17:52">config</name></expr></argument>, <argument pos:start="17:55" pos:end="17:68"><expr pos:start="17:55" pos:end="17:68"><sizeof pos:start="17:55" pos:end="17:68">sizeof<argument_list pos:start="17:61" pos:end="17:68">(<argument pos:start="17:62" pos:end="17:67"><expr pos:start="17:62" pos:end="17:67"><name pos:start="17:62" pos:end="17:67">config</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:72" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:67">

        <expr_stmt pos:start="19:9" pos:end="19:67"><expr pos:start="19:9" pos:end="19:66"><call pos:start="19:9" pos:end="19:66"><name pos:start="19:9" pos:end="19:20">virtio_panic</name><argument_list pos:start="19:21" pos:end="19:66">(<argument pos:start="19:22" pos:end="19:65"><expr pos:start="19:22" pos:end="19:65"><literal type="string" pos:start="19:22" pos:end="19:65">"Could not get block device configuration\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="25:43"><expr pos:start="23:5" pos:end="25:42"><call pos:start="23:5" pos:end="25:42"><name pos:start="23:5" pos:end="23:14">vring_init</name><argument_list pos:start="23:15" pos:end="25:42">(<argument pos:start="23:16" pos:end="23:21"><expr pos:start="23:16" pos:end="23:21"><operator pos:start="23:16" pos:end="23:16">&amp;</operator><name pos:start="23:17" pos:end="23:21">block</name></expr></argument>, <argument pos:start="23:24" pos:end="23:33"><expr pos:start="23:24" pos:end="23:33"><name pos:start="23:24" pos:end="23:33"><name pos:start="23:24" pos:end="23:29">config</name><operator pos:start="23:30" pos:end="23:30">.</operator><name pos:start="23:31" pos:end="23:33">num</name></name></expr></argument>, <argument pos:start="23:36" pos:end="23:61"><expr pos:start="23:36" pos:end="23:61"><operator pos:start="23:36" pos:end="23:36">(</operator><name pos:start="23:37" pos:end="23:40">void</name><operator pos:start="23:41" pos:end="23:41">*</operator><operator pos:start="23:42" pos:end="23:42">)</operator><operator pos:start="23:43" pos:end="23:43">(</operator><literal type="number" pos:start="23:44" pos:end="23:46">100</literal> <operator pos:start="23:48" pos:end="23:48">*</operator> <literal type="number" pos:start="23:50" pos:end="23:53">1024</literal> <operator pos:start="23:55" pos:end="23:55">*</operator> <literal type="number" pos:start="23:57" pos:end="23:60">1024</literal><operator pos:start="23:61" pos:end="23:61">)</operator></expr></argument>,

               <argument pos:start="25:16" pos:end="25:41"><expr pos:start="25:16" pos:end="25:41"><name pos:start="25:16" pos:end="25:41">KVM_S390_VIRTIO_RING_ALIGN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:8">info</name><operator pos:start="29:9" pos:end="29:9">.</operator><name pos:start="29:10" pos:end="29:14">queue</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <operator pos:start="29:18" pos:end="29:18">(</operator><literal type="number" pos:start="29:19" pos:end="29:24">100ULL</literal> <operator pos:start="29:26" pos:end="29:26">*</operator> <literal type="number" pos:start="29:28" pos:end="29:34">1024ULL</literal><operator pos:start="29:35" pos:end="29:35">*</operator> <literal type="number" pos:start="29:37" pos:end="29:43">1024ULL</literal><operator pos:start="29:44" pos:end="29:44">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:44"><expr pos:start="31:5" pos:end="31:43"><name pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:8">info</name><operator pos:start="31:9" pos:end="31:9">.</operator><name pos:start="31:10" pos:end="31:14">align</name></name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:43">KVM_S390_VIRTIO_RING_ALIGN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:8">info</name><operator pos:start="33:9" pos:end="33:9">.</operator><name pos:start="33:10" pos:end="33:14">index</name></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:8">info</name><operator pos:start="35:9" pos:end="35:9">.</operator><name pos:start="35:10" pos:end="35:12">num</name></name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:25"><name pos:start="35:16" pos:end="35:21">config</name><operator pos:start="35:22" pos:end="35:22">.</operator><name pos:start="35:23" pos:end="35:25">num</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:24"><expr pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:9">block</name><operator pos:start="37:10" pos:end="37:10">.</operator><name pos:start="37:11" pos:end="37:15">schid</name></name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:23">schid</name></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:61">(<expr pos:start="41:9" pos:end="41:60"><operator pos:start="41:9" pos:end="41:9">!</operator><call pos:start="41:10" pos:end="41:60"><name pos:start="41:10" pos:end="41:16">run_ccw</name><argument_list pos:start="41:17" pos:end="41:60">(<argument pos:start="41:18" pos:end="41:22"><expr pos:start="41:18" pos:end="41:22"><name pos:start="41:18" pos:end="41:22">schid</name></expr></argument>, <argument pos:start="41:25" pos:end="41:38"><expr pos:start="41:25" pos:end="41:38"><name pos:start="41:25" pos:end="41:38">CCW_CMD_SET_VQ</name></expr></argument>, <argument pos:start="41:41" pos:end="41:45"><expr pos:start="41:41" pos:end="41:45"><operator pos:start="41:41" pos:end="41:41">&amp;</operator><name pos:start="41:42" pos:end="41:45">info</name></expr></argument>, <argument pos:start="41:48" pos:end="41:59"><expr pos:start="41:48" pos:end="41:59"><sizeof pos:start="41:48" pos:end="41:59">sizeof<argument_list pos:start="41:54" pos:end="41:59">(<argument pos:start="41:55" pos:end="41:58"><expr pos:start="41:55" pos:end="41:58"><name pos:start="41:55" pos:end="41:58">info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:63" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:60">

        <expr_stmt pos:start="43:9" pos:end="43:60"><expr pos:start="43:9" pos:end="43:59"><call pos:start="43:9" pos:end="43:59"><name pos:start="43:9" pos:end="43:25">virtio_set_status</name><argument_list pos:start="43:26" pos:end="43:59">(<argument pos:start="43:27" pos:end="43:31"><expr pos:start="43:27" pos:end="43:31"><name pos:start="43:27" pos:end="43:31">schid</name></expr></argument>, <argument pos:start="43:34" pos:end="43:58"><expr pos:start="43:34" pos:end="43:58"><name pos:start="43:34" pos:end="43:58">VIRTIO_CONFIG_S_DRIVER_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
