<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25346.c" pos:tabs="8"><function pos:start="1:1" pos:end="273:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:12">const</specifier> <name pos:start="1:14" pos:end="1:17">char</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:29">srt_to_ass</name><parameter_list pos:start="1:30" pos:end="3:77">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:62"><decl pos:start="1:54" pos:end="1:62"><type pos:start="1:54" pos:end="1:62"><name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">out</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:77"><decl pos:start="1:65" pos:end="1:77"><type pos:start="1:65" pos:end="1:77"><name pos:start="1:65" pos:end="1:68">char</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:77">out_end</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:44"><decl pos:start="3:31" pos:end="3:44"><type pos:start="3:31" pos:end="3:44"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:40">char</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:44">in</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:52"><decl pos:start="3:47" pos:end="3:52"><type pos:start="3:47" pos:end="3:52"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:52">x1</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:60"><decl pos:start="3:55" pos:end="3:60"><type pos:start="3:55" pos:end="3:60"><name pos:start="3:55" pos:end="3:57">int</name></type> <name pos:start="3:59" pos:end="3:60">y1</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:68"><decl pos:start="3:63" pos:end="3:68"><type pos:start="3:63" pos:end="3:68"><name pos:start="3:63" pos:end="3:65">int</name></type> <name pos:start="3:67" pos:end="3:68">x2</name></decl></parameter>, <parameter pos:start="3:71" pos:end="3:76"><decl pos:start="3:71" pos:end="3:76"><type pos:start="3:71" pos:end="3:76"><name pos:start="3:71" pos:end="3:73">int</name></type> <name pos:start="3:75" pos:end="3:76">y2</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="273:1">{<block_content pos:start="7:5" pos:end="271:14">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:10">c</name></decl>, <decl pos:start="7:13" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:8"><modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">param</name></decl>, <decl pos:start="7:21" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:21" pos:end="7:31"><name pos:start="7:21" pos:end="7:26">buffer</name><index pos:start="7:27" pos:end="7:31">[<expr pos:start="7:28" pos:end="7:30"><literal type="number" pos:start="7:28" pos:end="7:30">128</literal></expr>]</index></name></decl>, <decl pos:start="7:34" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:34" pos:end="7:41"><name pos:start="7:34" pos:end="7:36">tmp</name><index pos:start="7:37" pos:end="7:41">[<expr pos:start="7:38" pos:end="7:40"><literal type="number" pos:start="7:38" pos:end="7:40">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:66"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">len</name></decl>, <decl pos:start="9:14" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:22">tag_close</name></decl>, <decl pos:start="9:25" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:28">sptr</name> <init pos:start="9:30" pos:end="9:32">= <expr pos:start="9:32" pos:end="9:32"><literal type="number" pos:start="9:32" pos:end="9:32">1</literal></expr></init></decl>, <decl pos:start="9:35" pos:end="9:48"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:35" pos:end="9:44">line_start</name> <init pos:start="9:46" pos:end="9:48">= <expr pos:start="9:48" pos:end="9:48"><literal type="number" pos:start="9:48" pos:end="9:48">1</literal></expr></init></decl>, <decl pos:start="9:51" pos:end="9:56"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:51" pos:end="9:52">an</name> <init pos:start="9:54" pos:end="9:56">= <expr pos:start="9:56" pos:end="9:56"><literal type="number" pos:start="9:56" pos:end="9:56">0</literal></expr></init></decl>, <decl pos:start="9:59" pos:end="9:65"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:59" pos:end="9:61">end</name> <init pos:start="9:63" pos:end="9:65">= <expr pos:start="9:65" pos:end="9:65"><literal type="number" pos:start="9:65" pos:end="9:65">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">SrtStack</name></type> <name pos:start="11:14" pos:end="11:22"><name pos:start="11:14" pos:end="11:18">stack</name><index pos:start="11:19" pos:end="11:22">[<expr pos:start="11:20" pos:end="11:21"><literal type="number" pos:start="11:20" pos:end="11:21">16</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:9">stack</name><index pos:start="15:10" pos:end="15:12">[<expr pos:start="15:11" pos:end="15:11"><literal type="number" pos:start="15:11" pos:end="15:11">0</literal></expr>]</index></name><operator pos:start="15:13" pos:end="15:13">.</operator><name pos:start="15:14" pos:end="15:19"><name pos:start="15:14" pos:end="15:16">tag</name><index pos:start="15:17" pos:end="15:19">[<expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>]</index></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:50"><expr pos:start="17:5" pos:end="17:49"><call pos:start="17:5" pos:end="17:49"><name pos:start="17:5" pos:end="17:10">strcpy</name><argument_list pos:start="17:11" pos:end="17:49">(<argument pos:start="17:12" pos:end="17:37"><expr pos:start="17:12" pos:end="17:37"><name pos:start="17:12" pos:end="17:19"><name pos:start="17:12" pos:end="17:16">stack</name><index pos:start="17:17" pos:end="17:19">[<expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>]</index></name><operator pos:start="17:20" pos:end="17:20">.</operator><name pos:start="17:21" pos:end="17:37"><name pos:start="17:21" pos:end="17:25">param</name><index pos:start="17:26" pos:end="17:37">[<expr pos:start="17:27" pos:end="17:36"><name pos:start="17:27" pos:end="17:36">PARAM_SIZE</name></expr>]</index></name></expr></argument>,  <argument pos:start="17:41" pos:end="17:48"><expr pos:start="17:41" pos:end="17:48"><literal type="string" pos:start="17:41" pos:end="17:48">"{\\fs}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:49"><expr pos:start="19:5" pos:end="19:48"><call pos:start="19:5" pos:end="19:48"><name pos:start="19:5" pos:end="19:10">strcpy</name><argument_list pos:start="19:11" pos:end="19:48">(<argument pos:start="19:12" pos:end="19:38"><expr pos:start="19:12" pos:end="19:38"><name pos:start="19:12" pos:end="19:19"><name pos:start="19:12" pos:end="19:16">stack</name><index pos:start="19:17" pos:end="19:19">[<expr pos:start="19:18" pos:end="19:18"><literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>]</index></name><operator pos:start="19:20" pos:end="19:20">.</operator><name pos:start="19:21" pos:end="19:38"><name pos:start="19:21" pos:end="19:25">param</name><index pos:start="19:26" pos:end="19:38">[<expr pos:start="19:27" pos:end="19:37"><name pos:start="19:27" pos:end="19:37">PARAM_COLOR</name></expr>]</index></name></expr></argument>, <argument pos:start="19:41" pos:end="19:47"><expr pos:start="19:41" pos:end="19:47"><literal type="string" pos:start="19:41" pos:end="19:47">"{\\c}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:50"><expr pos:start="21:5" pos:end="21:49"><call pos:start="21:5" pos:end="21:49"><name pos:start="21:5" pos:end="21:10">strcpy</name><argument_list pos:start="21:11" pos:end="21:49">(<argument pos:start="21:12" pos:end="21:37"><expr pos:start="21:12" pos:end="21:37"><name pos:start="21:12" pos:end="21:19"><name pos:start="21:12" pos:end="21:16">stack</name><index pos:start="21:17" pos:end="21:19">[<expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>]</index></name><operator pos:start="21:20" pos:end="21:20">.</operator><name pos:start="21:21" pos:end="21:37"><name pos:start="21:21" pos:end="21:25">param</name><index pos:start="21:26" pos:end="21:37">[<expr pos:start="21:27" pos:end="21:36"><name pos:start="21:27" pos:end="21:36">PARAM_FACE</name></expr>]</index></name></expr></argument>,  <argument pos:start="21:41" pos:end="21:48"><expr pos:start="21:41" pos:end="21:48"><literal type="string" pos:start="21:41" pos:end="21:48">"{\\fn}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:27">(<expr pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:10">x1</name> <operator pos:start="25:12" pos:end="25:13">&gt;=</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal> <operator pos:start="25:17" pos:end="25:18">&amp;&amp;</operator> <name pos:start="25:20" pos:end="25:21">y1</name> <operator pos:start="25:23" pos:end="25:24">&gt;=</operator> <literal type="number" pos:start="25:26" pos:end="25:26">0</literal></expr>)</condition> <block pos:start="25:29" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:79">

        <if_stmt pos:start="27:9" pos:end="35:79"><if pos:start="27:9" pos:end="31:76">if <condition pos:start="27:12" pos:end="27:57">(<expr pos:start="27:13" pos:end="27:56"><name pos:start="27:13" pos:end="27:14">x2</name> <operator pos:start="27:16" pos:end="27:17">&gt;=</operator> <literal type="number" pos:start="27:19" pos:end="27:19">0</literal> <operator pos:start="27:21" pos:end="27:22">&amp;&amp;</operator> <name pos:start="27:24" pos:end="27:25">y2</name> <operator pos:start="27:27" pos:end="27:28">&gt;=</operator> <literal type="number" pos:start="27:30" pos:end="27:30">0</literal> <operator pos:start="27:32" pos:end="27:33">&amp;&amp;</operator> <operator pos:start="27:35" pos:end="27:35">(</operator><name pos:start="27:36" pos:end="27:37">x2</name> <operator pos:start="27:39" pos:end="27:40">!=</operator> <name pos:start="27:42" pos:end="27:43">x1</name> <operator pos:start="27:45" pos:end="27:46">||</operator> <name pos:start="27:48" pos:end="27:49">y2</name> <operator pos:start="27:51" pos:end="27:52">!=</operator> <name pos:start="27:54" pos:end="27:55">y1</name><operator pos:start="27:56" pos:end="27:56">)</operator></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="31:76"><block_content pos:start="29:13" pos:end="31:76">

            <expr_stmt pos:start="29:13" pos:end="31:76"><expr pos:start="29:13" pos:end="31:75"><name pos:start="29:13" pos:end="29:15">out</name> <operator pos:start="29:17" pos:end="29:18">+=</operator> <call pos:start="29:20" pos:end="31:75"><name pos:start="29:20" pos:end="29:27">snprintf</name><argument_list pos:start="29:28" pos:end="31:75">(<argument pos:start="29:29" pos:end="29:31"><expr pos:start="29:29" pos:end="29:31"><name pos:start="29:29" pos:end="29:31">out</name></expr></argument>, <argument pos:start="29:34" pos:end="29:44"><expr pos:start="29:34" pos:end="29:44"><name pos:start="29:34" pos:end="29:40">out_end</name><operator pos:start="29:41" pos:end="29:41">-</operator><name pos:start="29:42" pos:end="29:44">out</name></expr></argument>,

                            <argument pos:start="31:29" pos:end="31:58"><expr pos:start="31:29" pos:end="31:58"><literal type="string" pos:start="31:29" pos:end="31:58">"{\\an1}{\\move(%d,%d,%d,%d)}"</literal></expr></argument>, <argument pos:start="31:61" pos:end="31:62"><expr pos:start="31:61" pos:end="31:62"><name pos:start="31:61" pos:end="31:62">x1</name></expr></argument>, <argument pos:start="31:65" pos:end="31:66"><expr pos:start="31:65" pos:end="31:66"><name pos:start="31:65" pos:end="31:66">y1</name></expr></argument>, <argument pos:start="31:69" pos:end="31:70"><expr pos:start="31:69" pos:end="31:70"><name pos:start="31:69" pos:end="31:70">x2</name></expr></argument>, <argument pos:start="31:73" pos:end="31:74"><expr pos:start="31:73" pos:end="31:74"><name pos:start="31:73" pos:end="31:74">y2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="33:9" pos:end="35:79">else<block type="pseudo" pos:start="35:13" pos:end="35:79"><block_content pos:start="35:13" pos:end="35:79">

            <expr_stmt pos:start="35:13" pos:end="35:79"><expr pos:start="35:13" pos:end="35:78"><name pos:start="35:13" pos:end="35:15">out</name> <operator pos:start="35:17" pos:end="35:18">+=</operator> <call pos:start="35:20" pos:end="35:78"><name pos:start="35:20" pos:end="35:27">snprintf</name><argument_list pos:start="35:28" pos:end="35:78">(<argument pos:start="35:29" pos:end="35:31"><expr pos:start="35:29" pos:end="35:31"><name pos:start="35:29" pos:end="35:31">out</name></expr></argument>, <argument pos:start="35:34" pos:end="35:44"><expr pos:start="35:34" pos:end="35:44"><name pos:start="35:34" pos:end="35:40">out_end</name><operator pos:start="35:41" pos:end="35:41">-</operator><name pos:start="35:42" pos:end="35:44">out</name></expr></argument>, <argument pos:start="35:47" pos:end="35:69"><expr pos:start="35:47" pos:end="35:69"><literal type="string" pos:start="35:47" pos:end="35:69">"{\\an1}{\\pos(%d,%d)}"</literal></expr></argument>, <argument pos:start="35:72" pos:end="35:73"><expr pos:start="35:72" pos:end="35:73"><name pos:start="35:72" pos:end="35:73">x1</name></expr></argument>, <argument pos:start="35:76" pos:end="35:77"><expr pos:start="35:76" pos:end="35:77"><name pos:start="35:76" pos:end="35:77">y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="41:5" pos:end="255:5">for <control pos:start="41:9" pos:end="41:46">(<init pos:start="41:10" pos:end="41:10">;</init> <condition pos:start="41:12" pos:end="41:40"><expr pos:start="41:12" pos:end="41:39"><name pos:start="41:12" pos:end="41:14">out</name> <operator pos:start="41:16" pos:end="41:16">&lt;</operator> <name pos:start="41:18" pos:end="41:24">out_end</name> <operator pos:start="41:26" pos:end="41:27">&amp;&amp;</operator> <operator pos:start="41:29" pos:end="41:29">!</operator><name pos:start="41:30" pos:end="41:32">end</name> <operator pos:start="41:34" pos:end="41:35">&amp;&amp;</operator> <operator pos:start="41:37" pos:end="41:37">*</operator><name pos:start="41:38" pos:end="41:39">in</name></expr>;</condition> <incr pos:start="41:42" pos:end="41:45"><expr pos:start="41:42" pos:end="41:45"><name pos:start="41:42" pos:end="41:43">in</name><operator pos:start="41:44" pos:end="41:45">++</operator></expr></incr>)</control> <block pos:start="41:48" pos:end="255:5">{<block_content pos:start="43:9" pos:end="253:27">

        <switch pos:start="43:9" pos:end="249:9">switch <condition pos:start="43:16" pos:end="43:20">(<expr pos:start="43:17" pos:end="43:19"><operator pos:start="43:17" pos:end="43:17">*</operator><name pos:start="43:18" pos:end="43:19">in</name></expr>)</condition> <block pos:start="43:22" pos:end="249:9">{<block_content pos:start="45:9" pos:end="247:18">

        <case pos:start="45:9" pos:end="45:18">case <expr pos:start="45:14" pos:end="45:17"><literal type="char" pos:start="45:14" pos:end="45:17">'\r'</literal></expr>:</case>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <case pos:start="49:9" pos:end="49:18">case <expr pos:start="49:14" pos:end="49:17"><literal type="char" pos:start="49:14" pos:end="49:17">'\n'</literal></expr>:</case>

            <if_stmt pos:start="51:13" pos:end="57:13"><if pos:start="51:13" pos:end="57:13">if <condition pos:start="51:16" pos:end="51:27">(<expr pos:start="51:17" pos:end="51:26"><name pos:start="51:17" pos:end="51:26">line_start</name></expr>)</condition> <block pos:start="51:29" pos:end="57:13">{<block_content pos:start="53:17" pos:end="55:22">

                <expr_stmt pos:start="53:17" pos:end="53:24"><expr pos:start="53:17" pos:end="53:23"><name pos:start="53:17" pos:end="53:19">end</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <literal type="number" pos:start="53:23" pos:end="53:23">1</literal></expr>;</expr_stmt>

                <break pos:start="55:17" pos:end="55:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <while pos:start="59:13" pos:end="61:22">while <condition pos:start="59:19" pos:end="59:34">(<expr pos:start="59:20" pos:end="59:33"><name pos:start="59:20" pos:end="59:26"><name pos:start="59:20" pos:end="59:22">out</name><index pos:start="59:23" pos:end="59:26">[<expr pos:start="59:24" pos:end="59:25"><operator pos:start="59:24" pos:end="59:24">-</operator><literal type="number" pos:start="59:25" pos:end="59:25">1</literal></expr>]</index></name> <operator pos:start="59:28" pos:end="59:29">==</operator> <literal type="char" pos:start="59:31" pos:end="59:33">' '</literal></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:22"><block_content pos:start="61:17" pos:end="61:22">

                <expr_stmt pos:start="61:17" pos:end="61:22"><expr pos:start="61:17" pos:end="61:21"><name pos:start="61:17" pos:end="61:19">out</name><operator pos:start="61:20" pos:end="61:21">--</operator></expr>;</expr_stmt></block_content></block></while>

            <expr_stmt pos:start="63:13" pos:end="63:53"><expr pos:start="63:13" pos:end="63:52"><name pos:start="63:13" pos:end="63:15">out</name> <operator pos:start="63:17" pos:end="63:18">+=</operator> <call pos:start="63:20" pos:end="63:52"><name pos:start="63:20" pos:end="63:27">snprintf</name><argument_list pos:start="63:28" pos:end="63:52">(<argument pos:start="63:29" pos:end="63:31"><expr pos:start="63:29" pos:end="63:31"><name pos:start="63:29" pos:end="63:31">out</name></expr></argument>, <argument pos:start="63:34" pos:end="63:44"><expr pos:start="63:34" pos:end="63:44"><name pos:start="63:34" pos:end="63:40">out_end</name><operator pos:start="63:41" pos:end="63:41">-</operator><name pos:start="63:42" pos:end="63:44">out</name></expr></argument>, <argument pos:start="63:47" pos:end="63:51"><expr pos:start="63:47" pos:end="63:51"><literal type="string" pos:start="63:47" pos:end="63:51">"\\N"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:27"><expr pos:start="65:13" pos:end="65:26"><name pos:start="65:13" pos:end="65:22">line_start</name> <operator pos:start="65:24" pos:end="65:24">=</operator> <literal type="number" pos:start="65:26" pos:end="65:26">1</literal></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        <case pos:start="69:9" pos:end="69:17">case <expr pos:start="69:14" pos:end="69:16"><literal type="char" pos:start="69:14" pos:end="69:16">' '</literal></expr>:</case>

            <if_stmt pos:start="71:13" pos:end="73:29"><if pos:start="71:13" pos:end="73:29">if <condition pos:start="71:16" pos:end="71:28">(<expr pos:start="71:17" pos:end="71:27"><operator pos:start="71:17" pos:end="71:17">!</operator><name pos:start="71:18" pos:end="71:27">line_start</name></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:29"><block_content pos:start="73:17" pos:end="73:29">

                <expr_stmt pos:start="73:17" pos:end="73:29"><expr pos:start="73:17" pos:end="73:28"><operator pos:start="73:17" pos:end="73:17">*</operator><name pos:start="73:18" pos:end="73:20">out</name><operator pos:start="73:21" pos:end="73:22">++</operator> <operator pos:start="73:24" pos:end="73:24">=</operator> <operator pos:start="73:26" pos:end="73:26">*</operator><name pos:start="73:27" pos:end="73:28">in</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:17">case <expr pos:start="77:14" pos:end="77:16"><literal type="char" pos:start="77:14" pos:end="77:16">'{'</literal></expr>:</case>    <comment type="block" pos:start="77:22" pos:end="79:71">/* skip all {\xxx} substrings except for {\an%d}

                        and all microdvd like styles such as {Y:xxx} */</comment>

            <expr_stmt pos:start="81:13" pos:end="81:54"><expr pos:start="81:13" pos:end="81:53"><name pos:start="81:13" pos:end="81:14">an</name> <operator pos:start="81:16" pos:end="81:17">+=</operator> <call pos:start="81:19" pos:end="81:48"><name pos:start="81:19" pos:end="81:24">sscanf</name><argument_list pos:start="81:25" pos:end="81:48">(<argument pos:start="81:26" pos:end="81:27"><expr pos:start="81:26" pos:end="81:27"><name pos:start="81:26" pos:end="81:27">in</name></expr></argument>, <argument pos:start="81:30" pos:end="81:43"><expr pos:start="81:30" pos:end="81:43"><literal type="string" pos:start="81:30" pos:end="81:43">"{\\an%*1u}%c"</literal></expr></argument>, <argument pos:start="81:46" pos:end="81:47"><expr pos:start="81:46" pos:end="81:47"><operator pos:start="81:46" pos:end="81:46">&amp;</operator><name pos:start="81:47" pos:end="81:47">c</name></expr></argument>)</argument_list></call> <operator pos:start="81:50" pos:end="81:51">==</operator> <literal type="number" pos:start="81:53" pos:end="81:53">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="83:13" pos:end="91:29"><if pos:start="83:13" pos:end="89:13">if <condition pos:start="83:16" pos:end="85:73">(<expr pos:start="83:17" pos:end="85:72"><operator pos:start="83:17" pos:end="83:17">(</operator><name pos:start="83:18" pos:end="83:19">an</name> <operator pos:start="83:21" pos:end="83:22">!=</operator> <literal type="number" pos:start="83:24" pos:end="83:24">1</literal> <operator pos:start="83:26" pos:end="83:27">&amp;&amp;</operator> <call pos:start="83:29" pos:end="83:66"><name pos:start="83:29" pos:end="83:34">sscanf</name><argument_list pos:start="83:35" pos:end="83:66">(<argument pos:start="83:36" pos:end="83:37"><expr pos:start="83:36" pos:end="83:37"><name pos:start="83:36" pos:end="83:37">in</name></expr></argument>, <argument pos:start="83:40" pos:end="83:55"><expr pos:start="83:40" pos:end="83:55"><literal type="string" pos:start="83:40" pos:end="83:55">"{\\%*[^}]}%n%c"</literal></expr></argument>, <argument pos:start="83:58" pos:end="83:61"><expr pos:start="83:58" pos:end="83:61"><operator pos:start="83:58" pos:end="83:58">&amp;</operator><name pos:start="83:59" pos:end="83:61">len</name></expr></argument>, <argument pos:start="83:64" pos:end="83:65"><expr pos:start="83:64" pos:end="83:65"><operator pos:start="83:64" pos:end="83:64">&amp;</operator><name pos:start="83:65" pos:end="83:65">c</name></expr></argument>)</argument_list></call> <operator pos:start="83:68" pos:end="83:68">&gt;</operator> <literal type="number" pos:start="83:70" pos:end="83:70">0</literal><operator pos:start="83:71" pos:end="83:71">)</operator> <operator pos:start="83:73" pos:end="83:74">||</operator>

                <call pos:start="85:17" pos:end="85:68"><name pos:start="85:17" pos:end="85:22">sscanf</name><argument_list pos:start="85:23" pos:end="85:68">(<argument pos:start="85:24" pos:end="85:25"><expr pos:start="85:24" pos:end="85:25"><name pos:start="85:24" pos:end="85:25">in</name></expr></argument>, <argument pos:start="85:28" pos:end="85:57"><expr pos:start="85:28" pos:end="85:57"><literal type="string" pos:start="85:28" pos:end="85:57">"{%*1[CcFfoPSsYy]:%*[^}]}%n%c"</literal></expr></argument>, <argument pos:start="85:60" pos:end="85:63"><expr pos:start="85:60" pos:end="85:63"><operator pos:start="85:60" pos:end="85:60">&amp;</operator><name pos:start="85:61" pos:end="85:63">len</name></expr></argument>, <argument pos:start="85:66" pos:end="85:67"><expr pos:start="85:66" pos:end="85:67"><operator pos:start="85:66" pos:end="85:66">&amp;</operator><name pos:start="85:67" pos:end="85:67">c</name></expr></argument>)</argument_list></call> <operator pos:start="85:70" pos:end="85:70">&gt;</operator> <literal type="number" pos:start="85:72" pos:end="85:72">0</literal></expr>)</condition> <block pos:start="85:75" pos:end="89:13">{<block_content pos:start="87:17" pos:end="87:30">

                <expr_stmt pos:start="87:17" pos:end="87:30"><expr pos:start="87:17" pos:end="87:29"><name pos:start="87:17" pos:end="87:18">in</name> <operator pos:start="87:20" pos:end="87:21">+=</operator> <name pos:start="87:23" pos:end="87:25">len</name> <operator pos:start="87:27" pos:end="87:27">-</operator> <literal type="number" pos:start="87:29" pos:end="87:29">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="89:15" pos:end="91:29">else<block type="pseudo" pos:start="91:17" pos:end="91:29"><block_content pos:start="91:17" pos:end="91:29">

                <expr_stmt pos:start="91:17" pos:end="91:29"><expr pos:start="91:17" pos:end="91:28"><operator pos:start="91:17" pos:end="91:17">*</operator><name pos:start="91:18" pos:end="91:20">out</name><operator pos:start="91:21" pos:end="91:22">++</operator> <operator pos:start="91:24" pos:end="91:24">=</operator> <operator pos:start="91:26" pos:end="91:26">*</operator><name pos:start="91:27" pos:end="91:28">in</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:17">case <expr pos:start="95:14" pos:end="95:16"><literal type="char" pos:start="95:14" pos:end="95:16">'&lt;'</literal></expr>:</case>

            <expr_stmt pos:start="97:13" pos:end="97:37"><expr pos:start="97:13" pos:end="97:36"><name pos:start="97:13" pos:end="97:21">tag_close</name> <operator pos:start="97:23" pos:end="97:23">=</operator> <name pos:start="97:25" pos:end="97:29"><name pos:start="97:25" pos:end="97:26">in</name><index pos:start="97:27" pos:end="97:29">[<expr pos:start="97:28" pos:end="97:28"><literal type="number" pos:start="97:28" pos:end="97:28">1</literal></expr>]</index></name> <operator pos:start="97:31" pos:end="97:32">==</operator> <literal type="char" pos:start="97:34" pos:end="97:36">'/'</literal></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="241:13"><if pos:start="99:13" pos:end="241:13">if <condition pos:start="99:16" pos:end="99:78">(<expr pos:start="99:17" pos:end="99:77"><call pos:start="99:17" pos:end="99:72"><name pos:start="99:17" pos:end="99:22">sscanf</name><argument_list pos:start="99:23" pos:end="99:72">(<argument pos:start="99:24" pos:end="99:37"><expr pos:start="99:24" pos:end="99:37"><name pos:start="99:24" pos:end="99:25">in</name><operator pos:start="99:26" pos:end="99:26">+</operator><name pos:start="99:27" pos:end="99:35">tag_close</name><operator pos:start="99:36" pos:end="99:36">+</operator><literal type="number" pos:start="99:37" pos:end="99:37">1</literal></expr></argument>, <argument pos:start="99:40" pos:end="99:54"><expr pos:start="99:40" pos:end="99:54"><literal type="string" pos:start="99:40" pos:end="99:54">"%127[^&gt;]&gt;%n%c"</literal></expr></argument>, <argument pos:start="99:57" pos:end="99:62"><expr pos:start="99:57" pos:end="99:62"><name pos:start="99:57" pos:end="99:62">buffer</name></expr></argument>, <argument pos:start="99:65" pos:end="99:68"><expr pos:start="99:65" pos:end="99:68"><operator pos:start="99:65" pos:end="99:65">&amp;</operator><name pos:start="99:66" pos:end="99:68">len</name></expr></argument>,<argument pos:start="99:70" pos:end="99:71"><expr pos:start="99:70" pos:end="99:71"><operator pos:start="99:70" pos:end="99:70">&amp;</operator><name pos:start="99:71" pos:end="99:71">c</name></expr></argument>)</argument_list></call> <operator pos:start="99:74" pos:end="99:75">&gt;=</operator> <literal type="number" pos:start="99:77" pos:end="99:77">2</literal></expr>)</condition> <block pos:start="99:80" pos:end="241:13">{<block_content pos:start="101:17" pos:end="239:17">

                <if_stmt pos:start="101:17" pos:end="103:33"><if pos:start="101:17" pos:end="103:33">if <condition pos:start="101:20" pos:end="101:50">(<expr pos:start="101:21" pos:end="101:49"><operator pos:start="101:21" pos:end="101:21">(</operator><name pos:start="101:22" pos:end="101:26">param</name> <operator pos:start="101:28" pos:end="101:28">=</operator> <call pos:start="101:30" pos:end="101:48"><name pos:start="101:30" pos:end="101:35">strchr</name><argument_list pos:start="101:36" pos:end="101:48">(<argument pos:start="101:37" pos:end="101:42"><expr pos:start="101:37" pos:end="101:42"><name pos:start="101:37" pos:end="101:42">buffer</name></expr></argument>, <argument pos:start="101:45" pos:end="101:47"><expr pos:start="101:45" pos:end="101:47"><literal type="char" pos:start="101:45" pos:end="101:47">' '</literal></expr></argument>)</argument_list></call><operator pos:start="101:49" pos:end="101:49">)</operator></expr>)</condition><block type="pseudo" pos:start="103:21" pos:end="103:33"><block_content pos:start="103:21" pos:end="103:33">

                    <expr_stmt pos:start="103:21" pos:end="103:33"><expr pos:start="103:21" pos:end="103:32"><operator pos:start="103:21" pos:end="103:21">*</operator><name pos:start="103:22" pos:end="103:26">param</name><operator pos:start="103:27" pos:end="103:28">++</operator> <operator pos:start="103:30" pos:end="103:30">=</operator> <literal type="number" pos:start="103:32" pos:end="103:32">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="105:17" pos:end="239:17"><if pos:start="105:17" pos:end="239:17">if <condition pos:start="105:20" pos:end="107:83">(<expr pos:start="105:21" pos:end="107:82"><operator pos:start="105:21" pos:end="105:21">(</operator><operator pos:start="105:22" pos:end="105:22">!</operator><name pos:start="105:23" pos:end="105:31">tag_close</name> <operator pos:start="105:33" pos:end="105:34">&amp;&amp;</operator> <name pos:start="105:36" pos:end="105:39">sptr</name> <operator pos:start="105:41" pos:end="105:41">&lt;</operator> <call pos:start="105:43" pos:end="105:63"><name pos:start="105:43" pos:end="105:56">FF_ARRAY_ELEMS</name><argument_list pos:start="105:57" pos:end="105:63">(<argument pos:start="105:58" pos:end="105:62"><expr pos:start="105:58" pos:end="105:62"><name pos:start="105:58" pos:end="105:62">stack</name></expr></argument>)</argument_list></call><operator pos:start="105:64" pos:end="105:64">)</operator> <operator pos:start="105:66" pos:end="105:67">||</operator>

                    <operator pos:start="107:21" pos:end="107:21">(</operator> <name pos:start="107:23" pos:end="107:31">tag_close</name> <operator pos:start="107:33" pos:end="107:34">&amp;&amp;</operator> <name pos:start="107:36" pos:end="107:39">sptr</name> <operator pos:start="107:41" pos:end="107:41">&gt;</operator> <literal type="number" pos:start="107:43" pos:end="107:43">0</literal> <operator pos:start="107:45" pos:end="107:46">&amp;&amp;</operator> <operator pos:start="107:48" pos:end="107:48">!</operator><call pos:start="107:49" pos:end="107:81"><name pos:start="107:49" pos:end="107:54">strcmp</name><argument_list pos:start="107:55" pos:end="107:81">(<argument pos:start="107:56" pos:end="107:72"><expr pos:start="107:56" pos:end="107:72"><name pos:start="107:56" pos:end="107:68"><name pos:start="107:56" pos:end="107:60">stack</name><index pos:start="107:61" pos:end="107:68">[<expr pos:start="107:62" pos:end="107:67"><name pos:start="107:62" pos:end="107:65">sptr</name><operator pos:start="107:66" pos:end="107:66">-</operator><literal type="number" pos:start="107:67" pos:end="107:67">1</literal></expr>]</index></name><operator pos:start="107:69" pos:end="107:69">.</operator><name pos:start="107:70" pos:end="107:72">tag</name></expr></argument>, <argument pos:start="107:75" pos:end="107:80"><expr pos:start="107:75" pos:end="107:80"><name pos:start="107:75" pos:end="107:80">buffer</name></expr></argument>)</argument_list></call><operator pos:start="107:82" pos:end="107:82">)</operator></expr>)</condition> <block pos:start="107:85" pos:end="239:17">{<block_content pos:start="109:21" pos:end="237:26">

                    <decl_stmt pos:start="109:21" pos:end="109:42"><decl pos:start="109:21" pos:end="109:25"><type pos:start="109:21" pos:end="109:23"><name pos:start="109:21" pos:end="109:23">int</name></type> <name pos:start="109:25" pos:end="109:25">i</name></decl>, <decl pos:start="109:28" pos:end="109:28"><type ref="prev" pos:start="109:21" pos:end="109:23"/><name pos:start="109:28" pos:end="109:28">j</name></decl>, <decl pos:start="109:31" pos:end="109:41"><type ref="prev" pos:start="109:21" pos:end="109:23"/><name pos:start="109:31" pos:end="109:37">unknown</name> <init pos:start="109:39" pos:end="109:41">= <expr pos:start="109:41" pos:end="109:41"><literal type="number" pos:start="109:41" pos:end="109:41">0</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:42"><expr pos:start="111:21" pos:end="111:41"><name pos:start="111:21" pos:end="111:22">in</name> <operator pos:start="111:24" pos:end="111:25">+=</operator> <name pos:start="111:27" pos:end="111:29">len</name> <operator pos:start="111:31" pos:end="111:31">+</operator> <name pos:start="111:33" pos:end="111:41">tag_close</name></expr>;</expr_stmt>

                    <if_stmt pos:start="113:21" pos:end="115:62"><if pos:start="113:21" pos:end="115:62">if <condition pos:start="113:24" pos:end="113:35">(<expr pos:start="113:25" pos:end="113:34"><operator pos:start="113:25" pos:end="113:25">!</operator><name pos:start="113:26" pos:end="113:34">tag_close</name></expr>)</condition><block type="pseudo" pos:start="115:25" pos:end="115:62"><block_content pos:start="115:25" pos:end="115:62">

                        <expr_stmt pos:start="115:25" pos:end="115:62"><expr pos:start="115:25" pos:end="115:61"><call pos:start="115:25" pos:end="115:61"><name pos:start="115:25" pos:end="115:30">memset</name><argument_list pos:start="115:31" pos:end="115:61">(<argument pos:start="115:32" pos:end="115:41"><expr pos:start="115:32" pos:end="115:41"><name pos:start="115:32" pos:end="115:36">stack</name><operator pos:start="115:37" pos:end="115:37">+</operator><name pos:start="115:38" pos:end="115:41">sptr</name></expr></argument>, <argument pos:start="115:44" pos:end="115:44"><expr pos:start="115:44" pos:end="115:44"><literal type="number" pos:start="115:44" pos:end="115:44">0</literal></expr></argument>, <argument pos:start="115:47" pos:end="115:60"><expr pos:start="115:47" pos:end="115:60"><sizeof pos:start="115:47" pos:end="115:60">sizeof<argument_list pos:start="115:53" pos:end="115:60">(<argument pos:start="115:54" pos:end="115:59"><expr pos:start="115:54" pos:end="115:59"><operator pos:start="115:54" pos:end="115:54">*</operator><name pos:start="115:55" pos:end="115:59">stack</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="117:21" pos:end="219:21"><if pos:start="117:21" pos:end="207:21">if <condition pos:start="117:24" pos:end="117:48">(<expr pos:start="117:25" pos:end="117:47"><operator pos:start="117:25" pos:end="117:25">!</operator><call pos:start="117:26" pos:end="117:47"><name pos:start="117:26" pos:end="117:31">strcmp</name><argument_list pos:start="117:32" pos:end="117:47">(<argument pos:start="117:33" pos:end="117:38"><expr pos:start="117:33" pos:end="117:38"><name pos:start="117:33" pos:end="117:38">buffer</name></expr></argument>, <argument pos:start="117:41" pos:end="117:46"><expr pos:start="117:41" pos:end="117:46"><literal type="string" pos:start="117:41" pos:end="117:46">"font"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:50" pos:end="207:21">{<block_content pos:start="119:25" pos:end="205:25">

                        <if_stmt pos:start="119:25" pos:end="205:25"><if pos:start="119:25" pos:end="137:25">if <condition pos:start="119:28" pos:end="119:38">(<expr pos:start="119:29" pos:end="119:37"><name pos:start="119:29" pos:end="119:37">tag_close</name></expr>)</condition> <block pos:start="119:40" pos:end="137:25">{<block_content pos:start="121:29" pos:end="135:41">

                            <for pos:start="121:29" pos:end="135:41">for <control pos:start="121:33" pos:end="121:61">(<init pos:start="121:34" pos:end="121:50"><expr pos:start="121:34" pos:end="121:49"><name pos:start="121:34" pos:end="121:34">i</name><operator pos:start="121:35" pos:end="121:35">=</operator><name pos:start="121:36" pos:end="121:47">PARAM_NUMBER</name><operator pos:start="121:48" pos:end="121:48">-</operator><literal type="number" pos:start="121:49" pos:end="121:49">1</literal></expr>;</init> <condition pos:start="121:52" pos:end="121:56"><expr pos:start="121:52" pos:end="121:55"><name pos:start="121:52" pos:end="121:52">i</name><operator pos:start="121:53" pos:end="121:54">&gt;=</operator><literal type="number" pos:start="121:55" pos:end="121:55">0</literal></expr>;</condition> <incr pos:start="121:58" pos:end="121:60"><expr pos:start="121:58" pos:end="121:60"><name pos:start="121:58" pos:end="121:58">i</name><operator pos:start="121:59" pos:end="121:60">--</operator></expr></incr>)</control><block type="pseudo" pos:start="123:33" pos:end="135:41"><block_content pos:start="123:33" pos:end="135:41">

                                <if_stmt pos:start="123:33" pos:end="135:41"><if pos:start="123:33" pos:end="135:41">if <condition pos:start="123:36" pos:end="123:62">(<expr pos:start="123:37" pos:end="123:61"><name pos:start="123:37" pos:end="123:49"><name pos:start="123:37" pos:end="123:41">stack</name><index pos:start="123:42" pos:end="123:49">[<expr pos:start="123:43" pos:end="123:48"><name pos:start="123:43" pos:end="123:46">sptr</name><operator pos:start="123:47" pos:end="123:47">-</operator><literal type="number" pos:start="123:48" pos:end="123:48">1</literal></expr>]</index></name><operator pos:start="123:50" pos:end="123:50">.</operator><name pos:start="123:51" pos:end="123:61"><name pos:start="123:51" pos:end="123:55">param</name><index pos:start="123:56" pos:end="123:58">[<expr pos:start="123:57" pos:end="123:57"><name pos:start="123:57" pos:end="123:57">i</name></expr>]</index><index pos:start="123:59" pos:end="123:61">[<expr pos:start="123:60" pos:end="123:60"><literal type="number" pos:start="123:60" pos:end="123:60">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="125:37" pos:end="135:41"><block_content pos:start="125:37" pos:end="135:41">

                                    <for pos:start="125:37" pos:end="135:41">for <control pos:start="125:41" pos:end="125:61">(<init pos:start="125:42" pos:end="125:50"><expr pos:start="125:42" pos:end="125:49"><name pos:start="125:42" pos:end="125:42">j</name><operator pos:start="125:43" pos:end="125:43">=</operator><name pos:start="125:44" pos:end="125:47">sptr</name><operator pos:start="125:48" pos:end="125:48">-</operator><literal type="number" pos:start="125:49" pos:end="125:49">2</literal></expr>;</init> <condition pos:start="125:52" pos:end="125:56"><expr pos:start="125:52" pos:end="125:55"><name pos:start="125:52" pos:end="125:52">j</name><operator pos:start="125:53" pos:end="125:54">&gt;=</operator><literal type="number" pos:start="125:55" pos:end="125:55">0</literal></expr>;</condition> <incr pos:start="125:58" pos:end="125:60"><expr pos:start="125:58" pos:end="125:60"><name pos:start="125:58" pos:end="125:58">j</name><operator pos:start="125:59" pos:end="125:60">--</operator></expr></incr>)</control><block type="pseudo" pos:start="127:41" pos:end="135:41"><block_content pos:start="127:41" pos:end="135:41">

                                        <if_stmt pos:start="127:41" pos:end="135:41"><if pos:start="127:41" pos:end="135:41">if <condition pos:start="127:44" pos:end="127:65">(<expr pos:start="127:45" pos:end="127:64"><name pos:start="127:45" pos:end="127:52"><name pos:start="127:45" pos:end="127:49">stack</name><index pos:start="127:50" pos:end="127:52">[<expr pos:start="127:51" pos:end="127:51"><name pos:start="127:51" pos:end="127:51">j</name></expr>]</index></name><operator pos:start="127:53" pos:end="127:53">.</operator><name pos:start="127:54" pos:end="127:64"><name pos:start="127:54" pos:end="127:58">param</name><index pos:start="127:59" pos:end="127:61">[<expr pos:start="127:60" pos:end="127:60"><name pos:start="127:60" pos:end="127:60">i</name></expr>]</index><index pos:start="127:62" pos:end="127:64">[<expr pos:start="127:63" pos:end="127:63"><literal type="number" pos:start="127:63" pos:end="127:63">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="127:67" pos:end="135:41">{<block_content pos:start="129:45" pos:end="133:50">

                                            <expr_stmt pos:start="129:45" pos:end="131:85"><expr pos:start="129:45" pos:end="131:84"><name pos:start="129:45" pos:end="129:47">out</name> <operator pos:start="129:49" pos:end="129:50">+=</operator> <call pos:start="129:52" pos:end="131:84"><name pos:start="129:52" pos:end="129:59">snprintf</name><argument_list pos:start="129:60" pos:end="131:84">(<argument pos:start="129:61" pos:end="129:63"><expr pos:start="129:61" pos:end="129:63"><name pos:start="129:61" pos:end="129:63">out</name></expr></argument>, <argument pos:start="129:66" pos:end="129:76"><expr pos:start="129:66" pos:end="129:76"><name pos:start="129:66" pos:end="129:72">out_end</name><operator pos:start="129:73" pos:end="129:73">-</operator><name pos:start="129:74" pos:end="129:76">out</name></expr></argument>,

                                                            <argument pos:start="131:61" pos:end="131:64"><expr pos:start="131:61" pos:end="131:64"><literal type="string" pos:start="131:61" pos:end="131:64">"%s"</literal></expr></argument>, <argument pos:start="131:67" pos:end="131:83"><expr pos:start="131:67" pos:end="131:83"><name pos:start="131:67" pos:end="131:74"><name pos:start="131:67" pos:end="131:71">stack</name><index pos:start="131:72" pos:end="131:74">[<expr pos:start="131:73" pos:end="131:73"><name pos:start="131:73" pos:end="131:73">j</name></expr>]</index></name><operator pos:start="131:75" pos:end="131:75">.</operator><name pos:start="131:76" pos:end="131:83"><name pos:start="131:76" pos:end="131:80">param</name><index pos:start="131:81" pos:end="131:83">[<expr pos:start="131:82" pos:end="131:82"><name pos:start="131:82" pos:end="131:82">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                            <break pos:start="133:45" pos:end="133:50">break;</break>

                                        </block_content>}</block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for>

                        </block_content>}</block></if> <else pos:start="137:27" pos:end="205:25">else <block pos:start="137:32" pos:end="205:25">{<block_content pos:start="139:29" pos:end="203:80">

                            <while pos:start="139:29" pos:end="195:29">while <condition pos:start="139:35" pos:end="139:41">(<expr pos:start="139:36" pos:end="139:40"><name pos:start="139:36" pos:end="139:40">param</name></expr>)</condition> <block pos:start="139:43" pos:end="195:29">{<block_content pos:start="141:33" pos:end="193:44">

                                <if_stmt pos:start="141:33" pos:end="189:33"><if pos:start="141:33" pos:end="157:33">if <condition pos:start="141:36" pos:end="141:64">(<expr pos:start="141:37" pos:end="141:63"><operator pos:start="141:37" pos:end="141:37">!</operator><call pos:start="141:38" pos:end="141:63"><name pos:start="141:38" pos:end="141:44">strncmp</name><argument_list pos:start="141:45" pos:end="141:63">(<argument pos:start="141:46" pos:end="141:50"><expr pos:start="141:46" pos:end="141:50"><name pos:start="141:46" pos:end="141:50">param</name></expr></argument>, <argument pos:start="141:53" pos:end="141:59"><expr pos:start="141:53" pos:end="141:59"><literal type="string" pos:start="141:53" pos:end="141:59">"size="</literal></expr></argument>, <argument pos:start="141:62" pos:end="141:62"><expr pos:start="141:62" pos:end="141:62"><literal type="number" pos:start="141:62" pos:end="141:62">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="141:66" pos:end="157:33">{<block_content pos:start="143:37" pos:end="155:37">

                                    <decl_stmt pos:start="143:37" pos:end="143:55"><decl pos:start="143:37" pos:end="143:54"><type pos:start="143:37" pos:end="143:44"><name pos:start="143:37" pos:end="143:44">unsigned</name></type> <name pos:start="143:46" pos:end="143:54">font_size</name></decl>;</decl_stmt>

                                    <expr_stmt pos:start="145:37" pos:end="145:67"><expr pos:start="145:37" pos:end="145:66"><name pos:start="145:37" pos:end="145:41">param</name> <operator pos:start="145:43" pos:end="145:44">+=</operator> <literal type="number" pos:start="145:46" pos:end="145:48">5</literal> <operator pos:start="145:48" pos:end="145:48">+</operator> <operator pos:start="145:50" pos:end="145:50">(</operator><name pos:start="145:51" pos:end="145:58"><name pos:start="145:51" pos:end="145:55">param</name><index pos:start="145:56" pos:end="145:58">[<expr pos:start="145:57" pos:end="145:57"><literal type="number" pos:start="145:57" pos:end="145:57">5</literal></expr>]</index></name> <operator pos:start="145:60" pos:end="145:61">==</operator> <literal type="char" pos:start="145:63" pos:end="145:65">'"'</literal><operator pos:start="145:66" pos:end="145:66">)</operator></expr>;</expr_stmt>

                                    <if_stmt pos:start="147:37" pos:end="155:37"><if pos:start="147:37" pos:end="155:37">if <condition pos:start="147:40" pos:end="147:77">(<expr pos:start="147:41" pos:end="147:76"><call pos:start="147:41" pos:end="147:71"><name pos:start="147:41" pos:end="147:46">sscanf</name><argument_list pos:start="147:47" pos:end="147:71">(<argument pos:start="147:48" pos:end="147:52"><expr pos:start="147:48" pos:end="147:52"><name pos:start="147:48" pos:end="147:52">param</name></expr></argument>, <argument pos:start="147:55" pos:end="147:58"><expr pos:start="147:55" pos:end="147:58"><literal type="string" pos:start="147:55" pos:end="147:58">"%u"</literal></expr></argument>, <argument pos:start="147:61" pos:end="147:70"><expr pos:start="147:61" pos:end="147:70"><operator pos:start="147:61" pos:end="147:61">&amp;</operator><name pos:start="147:62" pos:end="147:70">font_size</name></expr></argument>)</argument_list></call> <operator pos:start="147:73" pos:end="147:74">==</operator> <literal type="number" pos:start="147:76" pos:end="147:76">1</literal></expr>)</condition> <block pos:start="147:79" pos:end="155:37">{<block_content pos:start="149:41" pos:end="153:68">

                                        <expr_stmt pos:start="149:41" pos:end="153:68"><expr pos:start="149:41" pos:end="153:67"><call pos:start="149:41" pos:end="153:67"><name pos:start="149:41" pos:end="149:48">snprintf</name><argument_list pos:start="149:49" pos:end="153:67">(<argument pos:start="149:50" pos:end="149:78"><expr pos:start="149:50" pos:end="149:78"><name pos:start="149:50" pos:end="149:60"><name pos:start="149:50" pos:end="149:54">stack</name><index pos:start="149:55" pos:end="149:60">[<expr pos:start="149:56" pos:end="149:59"><name pos:start="149:56" pos:end="149:59">sptr</name></expr>]</index></name><operator pos:start="149:61" pos:end="149:61">.</operator><name pos:start="149:62" pos:end="149:78"><name pos:start="149:62" pos:end="149:66">param</name><index pos:start="149:67" pos:end="149:78">[<expr pos:start="149:68" pos:end="149:77"><name pos:start="149:68" pos:end="149:77">PARAM_SIZE</name></expr>]</index></name></expr></argument>,

                                             <argument pos:start="151:46" pos:end="151:79"><expr pos:start="151:46" pos:end="151:79"><sizeof pos:start="151:46" pos:end="151:79">sizeof<argument_list pos:start="151:52" pos:end="151:79">(<argument pos:start="151:53" pos:end="151:78"><expr pos:start="151:53" pos:end="151:78"><name pos:start="151:53" pos:end="151:60"><name pos:start="151:53" pos:end="151:57">stack</name><index pos:start="151:58" pos:end="151:60">[<expr pos:start="151:59" pos:end="151:59"><literal type="number" pos:start="151:59" pos:end="151:59">0</literal></expr>]</index></name><operator pos:start="151:61" pos:end="151:61">.</operator><name pos:start="151:62" pos:end="151:78"><name pos:start="151:62" pos:end="151:66">param</name><index pos:start="151:67" pos:end="151:78">[<expr pos:start="151:68" pos:end="151:77"><name pos:start="151:68" pos:end="151:77">PARAM_SIZE</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                             <argument pos:start="153:46" pos:end="153:55"><expr pos:start="153:46" pos:end="153:55"><literal type="string" pos:start="153:46" pos:end="153:55">"{\\fs%u}"</literal></expr></argument>, <argument pos:start="153:58" pos:end="153:66"><expr pos:start="153:58" pos:end="153:66"><name pos:start="153:58" pos:end="153:66">font_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    </block_content>}</block></if></if_stmt>

                                </block_content>}</block></if> <if type="elseif" pos:start="157:35" pos:end="169:33">else if <condition pos:start="157:43" pos:end="157:72">(<expr pos:start="157:44" pos:end="157:71"><operator pos:start="157:44" pos:end="157:44">!</operator><call pos:start="157:45" pos:end="157:71"><name pos:start="157:45" pos:end="157:51">strncmp</name><argument_list pos:start="157:52" pos:end="157:71">(<argument pos:start="157:53" pos:end="157:57"><expr pos:start="157:53" pos:end="157:57"><name pos:start="157:53" pos:end="157:57">param</name></expr></argument>, <argument pos:start="157:60" pos:end="157:67"><expr pos:start="157:60" pos:end="157:67"><literal type="string" pos:start="157:60" pos:end="157:67">"color="</literal></expr></argument>, <argument pos:start="157:70" pos:end="157:70"><expr pos:start="157:70" pos:end="157:70"><literal type="number" pos:start="157:70" pos:end="157:70">6</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="157:74" pos:end="169:33">{<block_content pos:start="159:37" pos:end="167:73">

                                    <expr_stmt pos:start="159:37" pos:end="159:67"><expr pos:start="159:37" pos:end="159:66"><name pos:start="159:37" pos:end="159:41">param</name> <operator pos:start="159:43" pos:end="159:44">+=</operator> <literal type="number" pos:start="159:46" pos:end="159:48">6</literal> <operator pos:start="159:48" pos:end="159:48">+</operator> <operator pos:start="159:50" pos:end="159:50">(</operator><name pos:start="159:51" pos:end="159:58"><name pos:start="159:51" pos:end="159:55">param</name><index pos:start="159:56" pos:end="159:58">[<expr pos:start="159:57" pos:end="159:57"><literal type="number" pos:start="159:57" pos:end="159:57">6</literal></expr>]</index></name> <operator pos:start="159:60" pos:end="159:61">==</operator> <literal type="char" pos:start="159:63" pos:end="159:65">'"'</literal><operator pos:start="159:66" pos:end="159:66">)</operator></expr>;</expr_stmt>

                                    <expr_stmt pos:start="161:37" pos:end="167:73"><expr pos:start="161:37" pos:end="167:72"><call pos:start="161:37" pos:end="167:72"><name pos:start="161:37" pos:end="161:44">snprintf</name><argument_list pos:start="161:45" pos:end="167:72">(<argument pos:start="161:46" pos:end="161:75"><expr pos:start="161:46" pos:end="161:75"><name pos:start="161:46" pos:end="161:56"><name pos:start="161:46" pos:end="161:50">stack</name><index pos:start="161:51" pos:end="161:56">[<expr pos:start="161:52" pos:end="161:55"><name pos:start="161:52" pos:end="161:55">sptr</name></expr>]</index></name><operator pos:start="161:57" pos:end="161:57">.</operator><name pos:start="161:58" pos:end="161:75"><name pos:start="161:58" pos:end="161:62">param</name><index pos:start="161:63" pos:end="161:75">[<expr pos:start="161:64" pos:end="161:74"><name pos:start="161:64" pos:end="161:74">PARAM_COLOR</name></expr>]</index></name></expr></argument>,

                                         <argument pos:start="163:42" pos:end="163:76"><expr pos:start="163:42" pos:end="163:76"><sizeof pos:start="163:42" pos:end="163:76">sizeof<argument_list pos:start="163:48" pos:end="163:76">(<argument pos:start="163:49" pos:end="163:75"><expr pos:start="163:49" pos:end="163:75"><name pos:start="163:49" pos:end="163:56"><name pos:start="163:49" pos:end="163:53">stack</name><index pos:start="163:54" pos:end="163:56">[<expr pos:start="163:55" pos:end="163:55"><literal type="number" pos:start="163:55" pos:end="163:55">0</literal></expr>]</index></name><operator pos:start="163:57" pos:end="163:57">.</operator><name pos:start="163:58" pos:end="163:75"><name pos:start="163:58" pos:end="163:62">param</name><index pos:start="163:63" pos:end="163:75">[<expr pos:start="163:64" pos:end="163:74"><name pos:start="163:64" pos:end="163:74">PARAM_COLOR</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                         <argument pos:start="165:42" pos:end="165:53"><expr pos:start="165:42" pos:end="165:53"><literal type="string" pos:start="165:42" pos:end="165:53">"{\\c&amp;H%X&amp;}"</literal></expr></argument>,

                                         <argument pos:start="167:42" pos:end="167:71"><expr pos:start="167:42" pos:end="167:71"><call pos:start="167:42" pos:end="167:71"><name pos:start="167:42" pos:end="167:57">html_color_parse</name><argument_list pos:start="167:58" pos:end="167:71">(<argument pos:start="167:59" pos:end="167:63"><expr pos:start="167:59" pos:end="167:63"><name pos:start="167:59" pos:end="167:63">avctx</name></expr></argument>, <argument pos:start="167:66" pos:end="167:70"><expr pos:start="167:66" pos:end="167:70"><name pos:start="167:66" pos:end="167:70">param</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                </block_content>}</block></if> <if type="elseif" pos:start="169:35" pos:end="189:33">else if <condition pos:start="169:43" pos:end="169:71">(<expr pos:start="169:44" pos:end="169:70"><operator pos:start="169:44" pos:end="169:44">!</operator><call pos:start="169:45" pos:end="169:70"><name pos:start="169:45" pos:end="169:51">strncmp</name><argument_list pos:start="169:52" pos:end="169:70">(<argument pos:start="169:53" pos:end="169:57"><expr pos:start="169:53" pos:end="169:57"><name pos:start="169:53" pos:end="169:57">param</name></expr></argument>, <argument pos:start="169:60" pos:end="169:66"><expr pos:start="169:60" pos:end="169:66"><literal type="string" pos:start="169:60" pos:end="169:66">"face="</literal></expr></argument>, <argument pos:start="169:69" pos:end="169:69"><expr pos:start="169:69" pos:end="169:69"><literal type="number" pos:start="169:69" pos:end="169:69">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="169:73" pos:end="189:33">{<block_content pos:start="171:37" pos:end="187:62">

                                    <expr_stmt pos:start="171:37" pos:end="171:67"><expr pos:start="171:37" pos:end="171:66"><name pos:start="171:37" pos:end="171:41">param</name> <operator pos:start="171:43" pos:end="171:44">+=</operator> <literal type="number" pos:start="171:46" pos:end="171:48">5</literal> <operator pos:start="171:48" pos:end="171:48">+</operator> <operator pos:start="171:50" pos:end="171:50">(</operator><name pos:start="171:51" pos:end="171:58"><name pos:start="171:51" pos:end="171:55">param</name><index pos:start="171:56" pos:end="171:58">[<expr pos:start="171:57" pos:end="171:57"><literal type="number" pos:start="171:57" pos:end="171:57">5</literal></expr>]</index></name> <operator pos:start="171:60" pos:end="171:61">==</operator> <literal type="char" pos:start="171:63" pos:end="171:65">'"'</literal><operator pos:start="171:66" pos:end="171:66">)</operator></expr>;</expr_stmt>

                                    <expr_stmt pos:start="173:37" pos:end="175:80"><expr pos:start="173:37" pos:end="175:79"><name pos:start="173:37" pos:end="173:39">len</name> <operator pos:start="173:41" pos:end="173:41">=</operator> <call pos:start="173:43" pos:end="175:79"><name pos:start="173:43" pos:end="173:49">strcspn</name><argument_list pos:start="173:50" pos:end="175:79">(<argument pos:start="173:51" pos:end="173:55"><expr pos:start="173:51" pos:end="173:55"><name pos:start="173:51" pos:end="173:55">param</name></expr></argument>,

                                                  <argument pos:start="175:51" pos:end="175:78"><expr pos:start="175:51" pos:end="175:78"><ternary pos:start="175:51" pos:end="175:78"><condition pos:start="175:51" pos:end="175:68"><expr pos:start="175:51" pos:end="175:66"><name pos:start="175:51" pos:end="175:59"><name pos:start="175:51" pos:end="175:55">param</name><index pos:start="175:56" pos:end="175:59">[<expr pos:start="175:57" pos:end="175:58"><operator pos:start="175:57" pos:end="175:57">-</operator><literal type="number" pos:start="175:58" pos:end="175:58">1</literal></expr>]</index></name> <operator pos:start="175:61" pos:end="175:62">==</operator> <literal type="char" pos:start="175:64" pos:end="175:66">'"'</literal></expr> ?</condition><then pos:start="175:70" pos:end="175:73"> <expr pos:start="175:70" pos:end="175:73"><literal type="string" pos:start="175:70" pos:end="175:73">"\""</literal></expr> </then><else pos:start="175:75" pos:end="175:78">:<expr pos:start="175:76" pos:end="175:78"><literal type="string" pos:start="175:76" pos:end="175:78">" "</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="177:37" pos:end="179:74"><expr pos:start="177:37" pos:end="179:73"><call pos:start="177:37" pos:end="179:73"><name pos:start="177:37" pos:end="177:46">av_strlcpy</name><argument_list pos:start="177:47" pos:end="179:73">(<argument pos:start="177:48" pos:end="177:50"><expr pos:start="177:48" pos:end="177:50"><name pos:start="177:48" pos:end="177:50">tmp</name></expr></argument>, <argument pos:start="177:53" pos:end="177:57"><expr pos:start="177:53" pos:end="177:57"><name pos:start="177:53" pos:end="177:57">param</name></expr></argument>,

                                               <argument pos:start="179:48" pos:end="179:72"><expr pos:start="179:48" pos:end="179:72"><call pos:start="179:48" pos:end="179:72"><name pos:start="179:48" pos:end="179:52">FFMIN</name><argument_list pos:start="179:53" pos:end="179:72">(<argument pos:start="179:54" pos:end="179:64"><expr pos:start="179:54" pos:end="179:64"><sizeof pos:start="179:54" pos:end="179:64">sizeof<argument_list pos:start="179:60" pos:end="179:64">(<argument pos:start="179:61" pos:end="179:63"><expr pos:start="179:61" pos:end="179:63"><name pos:start="179:61" pos:end="179:63">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="179:67" pos:end="179:71"><expr pos:start="179:67" pos:end="179:71"><name pos:start="179:67" pos:end="179:69">len</name><operator pos:start="179:70" pos:end="179:70">+</operator><literal type="number" pos:start="179:71" pos:end="179:71">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="181:37" pos:end="181:49"><expr pos:start="181:37" pos:end="181:48"><name pos:start="181:37" pos:end="181:41">param</name> <operator pos:start="181:43" pos:end="181:44">+=</operator> <name pos:start="181:46" pos:end="181:48">len</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="183:37" pos:end="187:62"><expr pos:start="183:37" pos:end="187:61"><call pos:start="183:37" pos:end="187:61"><name pos:start="183:37" pos:end="183:44">snprintf</name><argument_list pos:start="183:45" pos:end="187:61">(<argument pos:start="183:46" pos:end="183:74"><expr pos:start="183:46" pos:end="183:74"><name pos:start="183:46" pos:end="183:56"><name pos:start="183:46" pos:end="183:50">stack</name><index pos:start="183:51" pos:end="183:56">[<expr pos:start="183:52" pos:end="183:55"><name pos:start="183:52" pos:end="183:55">sptr</name></expr>]</index></name><operator pos:start="183:57" pos:end="183:57">.</operator><name pos:start="183:58" pos:end="183:74"><name pos:start="183:58" pos:end="183:62">param</name><index pos:start="183:63" pos:end="183:74">[<expr pos:start="183:64" pos:end="183:73"><name pos:start="183:64" pos:end="183:73">PARAM_FACE</name></expr>]</index></name></expr></argument>,

                                             <argument pos:start="185:46" pos:end="185:79"><expr pos:start="185:46" pos:end="185:79"><sizeof pos:start="185:46" pos:end="185:79">sizeof<argument_list pos:start="185:52" pos:end="185:79">(<argument pos:start="185:53" pos:end="185:78"><expr pos:start="185:53" pos:end="185:78"><name pos:start="185:53" pos:end="185:60"><name pos:start="185:53" pos:end="185:57">stack</name><index pos:start="185:58" pos:end="185:60">[<expr pos:start="185:59" pos:end="185:59"><literal type="number" pos:start="185:59" pos:end="185:59">0</literal></expr>]</index></name><operator pos:start="185:61" pos:end="185:61">.</operator><name pos:start="185:62" pos:end="185:78"><name pos:start="185:62" pos:end="185:66">param</name><index pos:start="185:67" pos:end="185:78">[<expr pos:start="185:68" pos:end="185:77"><name pos:start="185:68" pos:end="185:77">PARAM_FACE</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                             <argument pos:start="187:46" pos:end="187:55"><expr pos:start="187:46" pos:end="187:55"><literal type="string" pos:start="187:46" pos:end="187:55">"{\\fn%s}"</literal></expr></argument>, <argument pos:start="187:58" pos:end="187:60"><expr pos:start="187:58" pos:end="187:60"><name pos:start="187:58" pos:end="187:60">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                </block_content>}</block></if></if_stmt>

                                <if_stmt pos:start="191:33" pos:end="193:44"><if pos:start="191:33" pos:end="193:44">if <condition pos:start="191:36" pos:end="191:65">(<expr pos:start="191:37" pos:end="191:64"><operator pos:start="191:37" pos:end="191:37">(</operator><name pos:start="191:38" pos:end="191:42">param</name> <operator pos:start="191:44" pos:end="191:44">=</operator> <call pos:start="191:46" pos:end="191:63"><name pos:start="191:46" pos:end="191:51">strchr</name><argument_list pos:start="191:52" pos:end="191:63">(<argument pos:start="191:53" pos:end="191:57"><expr pos:start="191:53" pos:end="191:57"><name pos:start="191:53" pos:end="191:57">param</name></expr></argument>, <argument pos:start="191:60" pos:end="191:62"><expr pos:start="191:60" pos:end="191:62"><literal type="char" pos:start="191:60" pos:end="191:62">' '</literal></expr></argument>)</argument_list></call><operator pos:start="191:64" pos:end="191:64">)</operator></expr>)</condition><block type="pseudo" pos:start="193:37" pos:end="193:44"><block_content pos:start="193:37" pos:end="193:44">

                                    <expr_stmt pos:start="193:37" pos:end="193:44"><expr pos:start="193:37" pos:end="193:43"><name pos:start="193:37" pos:end="193:41">param</name><operator pos:start="193:42" pos:end="193:43">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            </block_content>}</block></while>

                            <for pos:start="197:29" pos:end="203:80">for <control pos:start="197:33" pos:end="197:58">(<init pos:start="197:34" pos:end="197:37"><expr pos:start="197:34" pos:end="197:36"><name pos:start="197:34" pos:end="197:34">i</name><operator pos:start="197:35" pos:end="197:35">=</operator><literal type="number" pos:start="197:36" pos:end="197:36">0</literal></expr>;</init> <condition pos:start="197:39" pos:end="197:53"><expr pos:start="197:39" pos:end="197:52"><name pos:start="197:39" pos:end="197:39">i</name><operator pos:start="197:40" pos:end="197:40">&lt;</operator><name pos:start="197:41" pos:end="197:52">PARAM_NUMBER</name></expr>;</condition> <incr pos:start="197:55" pos:end="197:57"><expr pos:start="197:55" pos:end="197:57"><name pos:start="197:55" pos:end="197:55">i</name><operator pos:start="197:56" pos:end="197:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="199:33" pos:end="203:80"><block_content pos:start="199:33" pos:end="203:80">

                                <if_stmt pos:start="199:33" pos:end="203:80"><if pos:start="199:33" pos:end="203:80">if <condition pos:start="199:36" pos:end="199:60">(<expr pos:start="199:37" pos:end="199:59"><name pos:start="199:37" pos:end="199:47"><name pos:start="199:37" pos:end="199:41">stack</name><index pos:start="199:42" pos:end="199:47">[<expr pos:start="199:43" pos:end="199:46"><name pos:start="199:43" pos:end="199:46">sptr</name></expr>]</index></name><operator pos:start="199:48" pos:end="199:48">.</operator><name pos:start="199:49" pos:end="199:59"><name pos:start="199:49" pos:end="199:53">param</name><index pos:start="199:54" pos:end="199:56">[<expr pos:start="199:55" pos:end="199:55"><name pos:start="199:55" pos:end="199:55">i</name></expr>]</index><index pos:start="199:57" pos:end="199:59">[<expr pos:start="199:58" pos:end="199:58"><literal type="number" pos:start="199:58" pos:end="199:58">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="201:37" pos:end="203:80"><block_content pos:start="201:37" pos:end="203:80">

                                    <expr_stmt pos:start="201:37" pos:end="203:80"><expr pos:start="201:37" pos:end="203:79"><name pos:start="201:37" pos:end="201:39">out</name> <operator pos:start="201:41" pos:end="201:42">+=</operator> <call pos:start="201:44" pos:end="203:79"><name pos:start="201:44" pos:end="201:51">snprintf</name><argument_list pos:start="201:52" pos:end="203:79">(<argument pos:start="201:53" pos:end="201:55"><expr pos:start="201:53" pos:end="201:55"><name pos:start="201:53" pos:end="201:55">out</name></expr></argument>, <argument pos:start="201:58" pos:end="201:68"><expr pos:start="201:58" pos:end="201:68"><name pos:start="201:58" pos:end="201:64">out_end</name><operator pos:start="201:65" pos:end="201:65">-</operator><name pos:start="201:66" pos:end="201:68">out</name></expr></argument>,

                                                    <argument pos:start="203:53" pos:end="203:56"><expr pos:start="203:53" pos:end="203:56"><literal type="string" pos:start="203:53" pos:end="203:56">"%s"</literal></expr></argument>, <argument pos:start="203:59" pos:end="203:78"><expr pos:start="203:59" pos:end="203:78"><name pos:start="203:59" pos:end="203:69"><name pos:start="203:59" pos:end="203:63">stack</name><index pos:start="203:64" pos:end="203:69">[<expr pos:start="203:65" pos:end="203:68"><name pos:start="203:65" pos:end="203:68">sptr</name></expr>]</index></name><operator pos:start="203:70" pos:end="203:70">.</operator><name pos:start="203:71" pos:end="203:78"><name pos:start="203:71" pos:end="203:75">param</name><index pos:start="203:76" pos:end="203:78">[<expr pos:start="203:77" pos:end="203:77"><name pos:start="203:77" pos:end="203:77">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="207:23" pos:end="213:21">else if <condition pos:start="207:31" pos:end="207:73">(<expr pos:start="207:32" pos:end="207:72"><operator pos:start="207:32" pos:end="207:32">!</operator><name pos:start="207:33" pos:end="207:41"><name pos:start="207:33" pos:end="207:38">buffer</name><index pos:start="207:39" pos:end="207:41">[<expr pos:start="207:40" pos:end="207:40"><literal type="number" pos:start="207:40" pos:end="207:40">1</literal></expr>]</index></name> <operator pos:start="207:43" pos:end="207:44">&amp;&amp;</operator> <call pos:start="207:46" pos:end="207:67"><name pos:start="207:46" pos:end="207:51">strspn</name><argument_list pos:start="207:52" pos:end="207:67">(<argument pos:start="207:53" pos:end="207:58"><expr pos:start="207:53" pos:end="207:58"><name pos:start="207:53" pos:end="207:58">buffer</name></expr></argument>, <argument pos:start="207:61" pos:end="207:66"><expr pos:start="207:61" pos:end="207:66"><literal type="string" pos:start="207:61" pos:end="207:66">"bisu"</literal></expr></argument>)</argument_list></call> <operator pos:start="207:69" pos:end="207:70">==</operator> <literal type="number" pos:start="207:72" pos:end="207:72">1</literal></expr>)</condition> <block pos:start="207:75" pos:end="213:21">{<block_content pos:start="209:25" pos:end="211:75">

                        <expr_stmt pos:start="209:25" pos:end="211:75"><expr pos:start="209:25" pos:end="211:74"><name pos:start="209:25" pos:end="209:27">out</name> <operator pos:start="209:29" pos:end="209:30">+=</operator> <call pos:start="209:32" pos:end="211:74"><name pos:start="209:32" pos:end="209:39">snprintf</name><argument_list pos:start="209:40" pos:end="211:74">(<argument pos:start="209:41" pos:end="209:43"><expr pos:start="209:41" pos:end="209:43"><name pos:start="209:41" pos:end="209:43">out</name></expr></argument>, <argument pos:start="209:46" pos:end="209:56"><expr pos:start="209:46" pos:end="209:56"><name pos:start="209:46" pos:end="209:52">out_end</name><operator pos:start="209:53" pos:end="209:53">-</operator><name pos:start="209:54" pos:end="209:56">out</name></expr></argument>,

                                        <argument pos:start="211:41" pos:end="211:50"><expr pos:start="211:41" pos:end="211:50"><literal type="string" pos:start="211:41" pos:end="211:50">"{\\%c%d}"</literal></expr></argument>, <argument pos:start="211:53" pos:end="211:61"><expr pos:start="211:53" pos:end="211:61"><name pos:start="211:53" pos:end="211:61"><name pos:start="211:53" pos:end="211:58">buffer</name><index pos:start="211:59" pos:end="211:61">[<expr pos:start="211:60" pos:end="211:60"><literal type="number" pos:start="211:60" pos:end="211:60">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="211:64" pos:end="211:73"><expr pos:start="211:64" pos:end="211:73"><operator pos:start="211:64" pos:end="211:64">!</operator><name pos:start="211:65" pos:end="211:73">tag_close</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="213:23" pos:end="219:21">else <block pos:start="213:28" pos:end="219:21">{<block_content pos:start="215:25" pos:end="217:68">

                        <expr_stmt pos:start="215:25" pos:end="215:36"><expr pos:start="215:25" pos:end="215:35"><name pos:start="215:25" pos:end="215:31">unknown</name> <operator pos:start="215:33" pos:end="215:33">=</operator> <literal type="number" pos:start="215:35" pos:end="215:35">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="217:25" pos:end="217:68"><expr pos:start="217:25" pos:end="217:67"><call pos:start="217:25" pos:end="217:67"><name pos:start="217:25" pos:end="217:32">snprintf</name><argument_list pos:start="217:33" pos:end="217:67">(<argument pos:start="217:34" pos:end="217:36"><expr pos:start="217:34" pos:end="217:36"><name pos:start="217:34" pos:end="217:36">tmp</name></expr></argument>, <argument pos:start="217:39" pos:end="217:49"><expr pos:start="217:39" pos:end="217:49"><sizeof pos:start="217:39" pos:end="217:49">sizeof<argument_list pos:start="217:45" pos:end="217:49">(<argument pos:start="217:46" pos:end="217:48"><expr pos:start="217:46" pos:end="217:48"><name pos:start="217:46" pos:end="217:48">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="217:52" pos:end="217:58"><expr pos:start="217:52" pos:end="217:58"><literal type="string" pos:start="217:52" pos:end="217:58">"&lt;/%s&gt;"</literal></expr></argument>, <argument pos:start="217:61" pos:end="217:66"><expr pos:start="217:61" pos:end="217:66"><name pos:start="217:61" pos:end="217:66">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="221:21" pos:end="235:57"><if pos:start="221:21" pos:end="225:21">if <condition pos:start="221:24" pos:end="221:34">(<expr pos:start="221:25" pos:end="221:33"><name pos:start="221:25" pos:end="221:33">tag_close</name></expr>)</condition> <block pos:start="221:36" pos:end="225:21">{<block_content pos:start="223:25" pos:end="223:31">

                        <expr_stmt pos:start="223:25" pos:end="223:31"><expr pos:start="223:25" pos:end="223:30"><name pos:start="223:25" pos:end="223:28">sptr</name><operator pos:start="223:29" pos:end="223:30">--</operator></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="225:23" pos:end="231:21">else if <condition pos:start="225:31" pos:end="225:59">(<expr pos:start="225:32" pos:end="225:58"><name pos:start="225:32" pos:end="225:38">unknown</name> <operator pos:start="225:40" pos:end="225:41">&amp;&amp;</operator> <operator pos:start="225:43" pos:end="225:43">!</operator><call pos:start="225:44" pos:end="225:58"><name pos:start="225:44" pos:end="225:49">strstr</name><argument_list pos:start="225:50" pos:end="225:58">(<argument pos:start="225:51" pos:end="225:52"><expr pos:start="225:51" pos:end="225:52"><name pos:start="225:51" pos:end="225:52">in</name></expr></argument>, <argument pos:start="225:55" pos:end="225:57"><expr pos:start="225:55" pos:end="225:57"><name pos:start="225:55" pos:end="225:57">tmp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="225:61" pos:end="231:21">{<block_content pos:start="227:25" pos:end="229:37">

                        <expr_stmt pos:start="227:25" pos:end="227:46"><expr pos:start="227:25" pos:end="227:45"><name pos:start="227:25" pos:end="227:26">in</name> <operator pos:start="227:28" pos:end="227:29">-=</operator> <name pos:start="227:31" pos:end="227:33">len</name> <operator pos:start="227:35" pos:end="227:35">+</operator> <name pos:start="227:37" pos:end="227:45">tag_close</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="229:25" pos:end="229:37"><expr pos:start="229:25" pos:end="229:36"><operator pos:start="229:25" pos:end="229:25">*</operator><name pos:start="229:26" pos:end="229:28">out</name><operator pos:start="229:29" pos:end="229:30">++</operator> <operator pos:start="229:32" pos:end="229:32">=</operator> <operator pos:start="229:34" pos:end="229:34">*</operator><name pos:start="229:35" pos:end="229:36">in</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="231:23" pos:end="235:57">else<block type="pseudo" pos:start="233:25" pos:end="235:57"><block_content pos:start="233:25" pos:end="235:57">

                        <expr_stmt pos:start="233:25" pos:end="235:57"><expr pos:start="233:25" pos:end="235:56"><call pos:start="233:25" pos:end="235:56"><name pos:start="233:25" pos:end="233:34">av_strlcpy</name><argument_list pos:start="233:35" pos:end="235:56">(<argument pos:start="233:36" pos:end="233:52"><expr pos:start="233:36" pos:end="233:52"><name pos:start="233:36" pos:end="233:48"><name pos:start="233:36" pos:end="233:40">stack</name><index pos:start="233:41" pos:end="233:48">[<expr pos:start="233:42" pos:end="233:47"><name pos:start="233:42" pos:end="233:45">sptr</name><operator pos:start="233:46" pos:end="233:47">++</operator></expr>]</index></name><operator pos:start="233:49" pos:end="233:49">.</operator><name pos:start="233:50" pos:end="233:52">tag</name></expr></argument>, <argument pos:start="233:55" pos:end="233:60"><expr pos:start="233:55" pos:end="233:60"><name pos:start="233:55" pos:end="233:60">buffer</name></expr></argument>,

                                   <argument pos:start="235:36" pos:end="235:55"><expr pos:start="235:36" pos:end="235:55"><sizeof pos:start="235:36" pos:end="235:55">sizeof<argument_list pos:start="235:42" pos:end="235:55">(<argument pos:start="235:43" pos:end="235:54"><expr pos:start="235:43" pos:end="235:54"><name pos:start="235:43" pos:end="235:50"><name pos:start="235:43" pos:end="235:47">stack</name><index pos:start="235:48" pos:end="235:50">[<expr pos:start="235:49" pos:end="235:49"><literal type="number" pos:start="235:49" pos:end="235:49">0</literal></expr>]</index></name><operator pos:start="235:51" pos:end="235:51">.</operator><name pos:start="235:52" pos:end="235:54">tag</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <break pos:start="237:21" pos:end="237:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        <default pos:start="243:9" pos:end="243:16">default:</default>

            <expr_stmt pos:start="245:13" pos:end="245:25"><expr pos:start="245:13" pos:end="245:24"><operator pos:start="245:13" pos:end="245:13">*</operator><name pos:start="245:14" pos:end="245:16">out</name><operator pos:start="245:17" pos:end="245:18">++</operator> <operator pos:start="245:20" pos:end="245:20">=</operator> <operator pos:start="245:22" pos:end="245:22">*</operator><name pos:start="245:23" pos:end="245:24">in</name></expr>;</expr_stmt>

            <break pos:start="247:13" pos:end="247:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="251:9" pos:end="253:27"><if pos:start="251:9" pos:end="253:27">if <condition pos:start="251:12" pos:end="251:53">(<expr pos:start="251:13" pos:end="251:52"><operator pos:start="251:13" pos:end="251:13">*</operator><name pos:start="251:14" pos:end="251:15">in</name> <operator pos:start="251:17" pos:end="251:18">!=</operator> <literal type="char" pos:start="251:20" pos:end="251:22">' '</literal> <operator pos:start="251:24" pos:end="251:25">&amp;&amp;</operator> <operator pos:start="251:27" pos:end="251:27">*</operator><name pos:start="251:28" pos:end="251:29">in</name> <operator pos:start="251:31" pos:end="251:32">!=</operator> <literal type="char" pos:start="251:34" pos:end="251:37">'\r'</literal> <operator pos:start="251:39" pos:end="251:40">&amp;&amp;</operator> <operator pos:start="251:42" pos:end="251:42">*</operator><name pos:start="251:43" pos:end="251:44">in</name> <operator pos:start="251:46" pos:end="251:47">!=</operator> <literal type="char" pos:start="251:49" pos:end="251:52">'\n'</literal></expr>)</condition><block type="pseudo" pos:start="253:13" pos:end="253:27"><block_content pos:start="253:13" pos:end="253:27">

            <expr_stmt pos:start="253:13" pos:end="253:27"><expr pos:start="253:13" pos:end="253:26"><name pos:start="253:13" pos:end="253:22">line_start</name> <operator pos:start="253:24" pos:end="253:24">=</operator> <literal type="number" pos:start="253:26" pos:end="253:26">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="259:5" pos:end="259:32"><expr pos:start="259:5" pos:end="259:31"><name pos:start="259:5" pos:end="259:7">out</name> <operator pos:start="259:9" pos:end="259:9">=</operator> <call pos:start="259:11" pos:end="259:31"><name pos:start="259:11" pos:end="259:15">FFMIN</name><argument_list pos:start="259:16" pos:end="259:31">(<argument pos:start="259:17" pos:end="259:19"><expr pos:start="259:17" pos:end="259:19"><name pos:start="259:17" pos:end="259:19">out</name></expr></argument>, <argument pos:start="259:22" pos:end="259:30"><expr pos:start="259:22" pos:end="259:30"><name pos:start="259:22" pos:end="259:28">out_end</name><operator pos:start="259:29" pos:end="259:29">-</operator><literal type="number" pos:start="259:30" pos:end="259:30">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="261:5" pos:end="263:17">while <condition pos:start="261:11" pos:end="261:37">(<expr pos:start="261:12" pos:end="261:36"><operator pos:start="261:12" pos:end="261:12">!</operator><call pos:start="261:13" pos:end="261:36"><name pos:start="261:13" pos:end="261:19">strncmp</name><argument_list pos:start="261:20" pos:end="261:36">(<argument pos:start="261:21" pos:end="261:25"><expr pos:start="261:21" pos:end="261:25"><name pos:start="261:21" pos:end="261:23">out</name><operator pos:start="261:24" pos:end="261:24">-</operator><literal type="number" pos:start="261:25" pos:end="261:25">2</literal></expr></argument>, <argument pos:start="261:28" pos:end="261:32"><expr pos:start="261:28" pos:end="261:32"><literal type="string" pos:start="261:28" pos:end="261:32">"\\N"</literal></expr></argument>, <argument pos:start="261:35" pos:end="261:35"><expr pos:start="261:35" pos:end="261:35"><literal type="number" pos:start="261:35" pos:end="261:35">2</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="263:9" pos:end="263:17"><block_content pos:start="263:9" pos:end="263:17">

        <expr_stmt pos:start="263:9" pos:end="263:17"><expr pos:start="263:9" pos:end="263:16"><name pos:start="263:9" pos:end="263:11">out</name> <operator pos:start="263:13" pos:end="263:14">-=</operator> <literal type="number" pos:start="263:16" pos:end="263:16">2</literal></expr>;</expr_stmt></block_content></block></while>

    <while pos:start="265:5" pos:end="267:14">while <condition pos:start="265:11" pos:end="265:26">(<expr pos:start="265:12" pos:end="265:25"><name pos:start="265:12" pos:end="265:18"><name pos:start="265:12" pos:end="265:14">out</name><index pos:start="265:15" pos:end="265:18">[<expr pos:start="265:16" pos:end="265:17"><operator pos:start="265:16" pos:end="265:16">-</operator><literal type="number" pos:start="265:17" pos:end="265:17">1</literal></expr>]</index></name> <operator pos:start="265:20" pos:end="265:21">==</operator> <literal type="char" pos:start="265:23" pos:end="265:25">' '</literal></expr>)</condition><block type="pseudo" pos:start="267:9" pos:end="267:14"><block_content pos:start="267:9" pos:end="267:14">

        <expr_stmt pos:start="267:9" pos:end="267:14"><expr pos:start="267:9" pos:end="267:13"><name pos:start="267:9" pos:end="267:11">out</name><operator pos:start="267:12" pos:end="267:13">--</operator></expr>;</expr_stmt></block_content></block></while>

    <expr_stmt pos:start="269:5" pos:end="269:46"><expr pos:start="269:5" pos:end="269:45"><name pos:start="269:5" pos:end="269:7">out</name> <operator pos:start="269:9" pos:end="269:10">+=</operator> <call pos:start="269:12" pos:end="269:45"><name pos:start="269:12" pos:end="269:19">snprintf</name><argument_list pos:start="269:20" pos:end="269:45">(<argument pos:start="269:21" pos:end="269:23"><expr pos:start="269:21" pos:end="269:23"><name pos:start="269:21" pos:end="269:23">out</name></expr></argument>, <argument pos:start="269:26" pos:end="269:36"><expr pos:start="269:26" pos:end="269:36"><name pos:start="269:26" pos:end="269:32">out_end</name><operator pos:start="269:33" pos:end="269:33">-</operator><name pos:start="269:34" pos:end="269:36">out</name></expr></argument>, <argument pos:start="269:39" pos:end="269:44"><expr pos:start="269:39" pos:end="269:44"><literal type="string" pos:start="269:39" pos:end="269:44">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="271:5" pos:end="271:14">return <expr pos:start="271:12" pos:end="271:13"><name pos:start="271:12" pos:end="271:13">in</name></expr>;</return>

</block_content>}</block></function>
</unit>
