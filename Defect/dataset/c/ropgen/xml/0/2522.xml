<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2522.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">bdrv_commit</name><parameter_list pos:start="1:16" pos:end="1:37">(<parameter pos:start="1:17" pos:end="1:36"><decl pos:start="1:17" pos:end="1:36"><type pos:start="1:17" pos:end="1:34"><name pos:start="1:17" pos:end="1:32">BlockDriverState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:36">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="201:1">{<block_content pos:start="5:5" pos:end="199:15">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">BlockDriver</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">drv</name> <init pos:start="5:22" pos:end="5:30">= <expr pos:start="5:24" pos:end="5:30"><name pos:start="5:24" pos:end="5:30"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:30">drv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:18">sector</name></decl>, <decl pos:start="7:21" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:21" pos:end="7:33">total_sectors</name></decl>, <decl pos:start="7:36" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:36" pos:end="7:41">length</name></decl>, <decl pos:start="7:44" pos:end="7:57"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:44" pos:end="7:57">backing_length</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">n</name></decl>, <decl pos:start="9:12" pos:end="9:13"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:13">ro</name></decl>, <decl pos:start="9:16" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:25">open_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">buf</name> <init pos:start="13:18" pos:end="13:23">= <expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:27"><name pos:start="15:10" pos:end="15:17">filename</name><index pos:start="15:18" pos:end="15:27">[<expr pos:start="15:19" pos:end="15:26"><name pos:start="15:19" pos:end="15:26">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:26"><if pos:start="19:5" pos:end="21:26">if <condition pos:start="19:8" pos:end="19:13">(<expr pos:start="19:9" pos:end="19:12"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:12">drv</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:26"><block_content pos:start="21:9" pos:end="21:26">

        <return pos:start="21:9" pos:end="21:26">return <expr pos:start="21:16" pos:end="21:25"><operator pos:start="21:16" pos:end="21:16">-</operator><name pos:start="21:17" pos:end="21:25">ENOMEDIUM</name></expr>;</return></block_content></block></if></if_stmt>

    

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:24">(<expr pos:start="25:9" pos:end="25:23"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:23"><name pos:start="25:10" pos:end="25:11">bs</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:23">backing_hd</name></name></expr>)</condition> <block pos:start="25:26" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:24">

        <return pos:start="27:9" pos:end="27:24">return <expr pos:start="27:16" pos:end="27:23"><operator pos:start="27:16" pos:end="27:16">-</operator><name pos:start="27:17" pos:end="27:23">ENOTSUP</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:55">(<expr pos:start="33:9" pos:end="33:54"><call pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:19">bdrv_in_use</name><argument_list pos:start="33:20" pos:end="33:23">(<argument pos:start="33:21" pos:end="33:22"><expr pos:start="33:21" pos:end="33:22"><name pos:start="33:21" pos:end="33:22">bs</name></expr></argument>)</argument_list></call> <operator pos:start="33:25" pos:end="33:26">||</operator> <call pos:start="33:28" pos:end="33:54"><name pos:start="33:28" pos:end="33:38">bdrv_in_use</name><argument_list pos:start="33:39" pos:end="33:54">(<argument pos:start="33:40" pos:end="33:53"><expr pos:start="33:40" pos:end="33:53"><name pos:start="33:40" pos:end="33:53"><name pos:start="33:40" pos:end="33:41">bs</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:53">backing_hd</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:57" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:22">

        <return pos:start="35:9" pos:end="35:22">return <expr pos:start="35:16" pos:end="35:21"><operator pos:start="35:16" pos:end="35:16">-</operator><name pos:start="35:17" pos:end="35:21">EBUSY</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:6">ro</name> <operator pos:start="41:8" pos:end="41:8">=</operator> <name pos:start="41:10" pos:end="41:34"><name pos:start="41:10" pos:end="41:11">bs</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:23">backing_hd</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:34">read_only</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="43:5" pos:end="43:69">/* Use pstrcpy (not strncpy): filename must be NUL-terminated. */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:66"><expr pos:start="45:5" pos:end="45:65"><call pos:start="45:5" pos:end="45:65"><name pos:start="45:5" pos:end="45:11">pstrcpy</name><argument_list pos:start="45:12" pos:end="45:65">(<argument pos:start="45:13" pos:end="45:20"><expr pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:20">filename</name></expr></argument>, <argument pos:start="45:23" pos:end="45:38"><expr pos:start="45:23" pos:end="45:38"><sizeof pos:start="45:23" pos:end="45:38">sizeof<argument_list pos:start="45:29" pos:end="45:38">(<argument pos:start="45:30" pos:end="45:37"><expr pos:start="45:30" pos:end="45:37"><name pos:start="45:30" pos:end="45:37">filename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="45:41" pos:end="45:64"><expr pos:start="45:41" pos:end="45:64"><name pos:start="45:41" pos:end="45:64"><name pos:start="45:41" pos:end="45:42">bs</name><operator pos:start="45:43" pos:end="45:44">-&gt;</operator><name pos:start="45:45" pos:end="45:54">backing_hd</name><operator pos:start="45:55" pos:end="45:56">-&gt;</operator><name pos:start="45:57" pos:end="45:64">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:45"><expr pos:start="47:5" pos:end="47:44"><name pos:start="47:5" pos:end="47:14">open_flags</name> <operator pos:start="47:16" pos:end="47:16">=</operator>  <name pos:start="47:19" pos:end="47:44"><name pos:start="47:19" pos:end="47:20">bs</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:32">backing_hd</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:44">open_flags</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:11">(<expr pos:start="51:9" pos:end="51:10"><name pos:start="51:9" pos:end="51:10">ro</name></expr>)</condition> <block pos:start="51:13" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:9">

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:72">(<expr pos:start="53:13" pos:end="53:71"><call pos:start="53:13" pos:end="53:71"><name pos:start="53:13" pos:end="53:23">bdrv_reopen</name><argument_list pos:start="53:24" pos:end="53:71">(<argument pos:start="53:25" pos:end="53:38"><expr pos:start="53:25" pos:end="53:38"><name pos:start="53:25" pos:end="53:38"><name pos:start="53:25" pos:end="53:26">bs</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:38">backing_hd</name></name></expr></argument>, <argument pos:start="53:41" pos:end="53:64"><expr pos:start="53:41" pos:end="53:64"><name pos:start="53:41" pos:end="53:50">open_flags</name> <operator pos:start="53:52" pos:end="53:52">|</operator> <name pos:start="53:54" pos:end="53:64">BDRV_O_RDWR</name></expr></argument>, <argument pos:start="53:67" pos:end="53:70"><expr pos:start="53:67" pos:end="53:70"><name pos:start="53:67" pos:end="53:70">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:74" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:27">

            <return pos:start="55:13" pos:end="55:27">return <expr pos:start="55:20" pos:end="55:26"><operator pos:start="55:20" pos:end="55:20">-</operator><name pos:start="55:21" pos:end="55:26">EACCES</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:32"><expr pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:10">length</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <call pos:start="63:14" pos:end="63:31"><name pos:start="63:14" pos:end="63:27">bdrv_getlength</name><argument_list pos:start="63:28" pos:end="63:31">(<argument pos:start="63:29" pos:end="63:30"><expr pos:start="63:29" pos:end="63:30"><name pos:start="63:29" pos:end="63:30">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:19">(<expr pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:14">length</name> <operator pos:start="65:16" pos:end="65:16">&lt;</operator> <literal type="number" pos:start="65:18" pos:end="65:18">0</literal></expr>)</condition> <block pos:start="65:21" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:24">

        <expr_stmt pos:start="67:9" pos:end="67:21"><expr pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <name pos:start="67:15" pos:end="67:20">length</name></expr>;</expr_stmt>

        <goto pos:start="69:9" pos:end="69:24">goto <name pos:start="69:14" pos:end="69:23">ro_cleanup</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:52"><expr pos:start="75:5" pos:end="75:51"><name pos:start="75:5" pos:end="75:18">backing_length</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <call pos:start="75:22" pos:end="75:51"><name pos:start="75:22" pos:end="75:35">bdrv_getlength</name><argument_list pos:start="75:36" pos:end="75:51">(<argument pos:start="75:37" pos:end="75:50"><expr pos:start="75:37" pos:end="75:50"><name pos:start="75:37" pos:end="75:50"><name pos:start="75:37" pos:end="75:38">bs</name><operator pos:start="75:39" pos:end="75:40">-&gt;</operator><name pos:start="75:41" pos:end="75:50">backing_hd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:27">(<expr pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:22">backing_length</name> <operator pos:start="77:24" pos:end="77:24">&lt;</operator> <literal type="number" pos:start="77:26" pos:end="77:26">0</literal></expr>)</condition> <block pos:start="77:29" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:24">

        <expr_stmt pos:start="79:9" pos:end="79:29"><expr pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <name pos:start="79:15" pos:end="79:28">backing_length</name></expr>;</expr_stmt>

        <goto pos:start="81:9" pos:end="81:24">goto <name pos:start="81:14" pos:end="81:23">ro_cleanup</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="87:5" pos:end="91:33">/* If our top snapshot is larger than the backing file image,

     * grow the backing file image if possible.  If not possible,

     * we must return an error */</comment>

    <if_stmt pos:start="93:5" pos:end="103:5"><if pos:start="93:5" pos:end="103:5">if <condition pos:start="93:8" pos:end="93:32">(<expr pos:start="93:9" pos:end="93:31"><name pos:start="93:9" pos:end="93:14">length</name> <operator pos:start="93:16" pos:end="93:16">&gt;</operator> <name pos:start="93:18" pos:end="93:31">backing_length</name></expr>)</condition> <block pos:start="93:34" pos:end="103:5">{<block_content pos:start="95:9" pos:end="101:9">

        <expr_stmt pos:start="95:9" pos:end="95:52"><expr pos:start="95:9" pos:end="95:51"><name pos:start="95:9" pos:end="95:11">ret</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <call pos:start="95:15" pos:end="95:51"><name pos:start="95:15" pos:end="95:27">bdrv_truncate</name><argument_list pos:start="95:28" pos:end="95:51">(<argument pos:start="95:29" pos:end="95:42"><expr pos:start="95:29" pos:end="95:42"><name pos:start="95:29" pos:end="95:42"><name pos:start="95:29" pos:end="95:30">bs</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:42">backing_hd</name></name></expr></argument>, <argument pos:start="95:45" pos:end="95:50"><expr pos:start="95:45" pos:end="95:50"><name pos:start="95:45" pos:end="95:50">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="101:9"><if pos:start="97:9" pos:end="101:9">if <condition pos:start="97:12" pos:end="97:20">(<expr pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:15">ret</name> <operator pos:start="97:17" pos:end="97:17">&lt;</operator> <literal type="number" pos:start="97:19" pos:end="97:19">0</literal></expr>)</condition> <block pos:start="97:22" pos:end="101:9">{<block_content pos:start="99:13" pos:end="99:28">

            <goto pos:start="99:13" pos:end="99:28">goto <name pos:start="99:18" pos:end="99:27">ro_cleanup</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:47"><expr pos:start="107:5" pos:end="107:46"><name pos:start="107:5" pos:end="107:17">total_sectors</name> <operator pos:start="107:19" pos:end="107:19">=</operator> <name pos:start="107:21" pos:end="107:26">length</name> <operator pos:start="107:28" pos:end="107:29">&gt;&gt;</operator> <name pos:start="107:31" pos:end="107:46">BDRV_SECTOR_BITS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:58"><expr pos:start="109:5" pos:end="109:57"><name pos:start="109:5" pos:end="109:7">buf</name> <operator pos:start="109:9" pos:end="109:9">=</operator> <call pos:start="109:11" pos:end="109:57"><name pos:start="109:11" pos:end="109:18">g_malloc</name><argument_list pos:start="109:19" pos:end="109:57">(<argument pos:start="109:20" pos:end="109:56"><expr pos:start="109:20" pos:end="109:56"><name pos:start="109:20" pos:end="109:37">COMMIT_BUF_SECTORS</name> <operator pos:start="109:39" pos:end="109:39">*</operator> <name pos:start="109:41" pos:end="109:56">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="113:5" pos:end="145:5">for <control pos:start="113:9" pos:end="113:57">(<init pos:start="113:10" pos:end="113:20"><expr pos:start="113:10" pos:end="113:19"><name pos:start="113:10" pos:end="113:15">sector</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <literal type="number" pos:start="113:19" pos:end="113:19">0</literal></expr>;</init> <condition pos:start="113:22" pos:end="113:44"><expr pos:start="113:22" pos:end="113:43"><name pos:start="113:22" pos:end="113:27">sector</name> <operator pos:start="113:29" pos:end="113:29">&lt;</operator> <name pos:start="113:31" pos:end="113:43">total_sectors</name></expr>;</condition> <incr pos:start="113:46" pos:end="113:56"><expr pos:start="113:46" pos:end="113:56"><name pos:start="113:46" pos:end="113:51">sector</name> <operator pos:start="113:53" pos:end="113:54">+=</operator> <name pos:start="113:56" pos:end="113:56">n</name></expr></incr>)</control> <block pos:start="113:59" pos:end="145:5">{<block_content pos:start="115:9" pos:end="143:9">

        <expr_stmt pos:start="115:9" pos:end="115:68"><expr pos:start="115:9" pos:end="115:67"><name pos:start="115:9" pos:end="115:11">ret</name> <operator pos:start="115:13" pos:end="115:13">=</operator> <call pos:start="115:15" pos:end="115:67"><name pos:start="115:15" pos:end="115:31">bdrv_is_allocated</name><argument_list pos:start="115:32" pos:end="115:67">(<argument pos:start="115:33" pos:end="115:34"><expr pos:start="115:33" pos:end="115:34"><name pos:start="115:33" pos:end="115:34">bs</name></expr></argument>, <argument pos:start="115:37" pos:end="115:42"><expr pos:start="115:37" pos:end="115:42"><name pos:start="115:37" pos:end="115:42">sector</name></expr></argument>, <argument pos:start="115:45" pos:end="115:62"><expr pos:start="115:45" pos:end="115:62"><name pos:start="115:45" pos:end="115:62">COMMIT_BUF_SECTORS</name></expr></argument>, <argument pos:start="115:65" pos:end="115:66"><expr pos:start="115:65" pos:end="115:66"><operator pos:start="115:65" pos:end="115:65">&amp;</operator><name pos:start="115:66" pos:end="115:66">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="121:9"><if pos:start="117:9" pos:end="121:9">if <condition pos:start="117:12" pos:end="117:20">(<expr pos:start="117:13" pos:end="117:19"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">&lt;</operator> <literal type="number" pos:start="117:19" pos:end="117:19">0</literal></expr>)</condition> <block pos:start="117:22" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:28">

            <goto pos:start="119:13" pos:end="119:28">goto <name pos:start="119:18" pos:end="119:27">ro_cleanup</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="123:9" pos:end="143:9"><if pos:start="123:9" pos:end="143:9">if <condition pos:start="123:12" pos:end="123:16">(<expr pos:start="123:13" pos:end="123:15"><name pos:start="123:13" pos:end="123:15">ret</name></expr>)</condition> <block pos:start="123:18" pos:end="143:9">{<block_content pos:start="125:13" pos:end="141:13">

            <expr_stmt pos:start="125:13" pos:end="125:48"><expr pos:start="125:13" pos:end="125:47"><name pos:start="125:13" pos:end="125:15">ret</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <call pos:start="125:19" pos:end="125:47"><name pos:start="125:19" pos:end="125:27">bdrv_read</name><argument_list pos:start="125:28" pos:end="125:47">(<argument pos:start="125:29" pos:end="125:30"><expr pos:start="125:29" pos:end="125:30"><name pos:start="125:29" pos:end="125:30">bs</name></expr></argument>, <argument pos:start="125:33" pos:end="125:38"><expr pos:start="125:33" pos:end="125:38"><name pos:start="125:33" pos:end="125:38">sector</name></expr></argument>, <argument pos:start="125:41" pos:end="125:43"><expr pos:start="125:41" pos:end="125:43"><name pos:start="125:41" pos:end="125:43">buf</name></expr></argument>, <argument pos:start="125:46" pos:end="125:46"><expr pos:start="125:46" pos:end="125:46"><name pos:start="125:46" pos:end="125:46">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="131:13"><if pos:start="127:13" pos:end="131:13">if <condition pos:start="127:16" pos:end="127:24">(<expr pos:start="127:17" pos:end="127:23"><name pos:start="127:17" pos:end="127:19">ret</name> <operator pos:start="127:21" pos:end="127:21">&lt;</operator> <literal type="number" pos:start="127:23" pos:end="127:23">0</literal></expr>)</condition> <block pos:start="127:26" pos:end="131:13">{<block_content pos:start="129:17" pos:end="129:32">

                <goto pos:start="129:17" pos:end="129:32">goto <name pos:start="129:22" pos:end="129:31">ro_cleanup</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="135:13" pos:end="135:61"><expr pos:start="135:13" pos:end="135:60"><name pos:start="135:13" pos:end="135:15">ret</name> <operator pos:start="135:17" pos:end="135:17">=</operator> <call pos:start="135:19" pos:end="135:60"><name pos:start="135:19" pos:end="135:28">bdrv_write</name><argument_list pos:start="135:29" pos:end="135:60">(<argument pos:start="135:30" pos:end="135:43"><expr pos:start="135:30" pos:end="135:43"><name pos:start="135:30" pos:end="135:43"><name pos:start="135:30" pos:end="135:31">bs</name><operator pos:start="135:32" pos:end="135:33">-&gt;</operator><name pos:start="135:34" pos:end="135:43">backing_hd</name></name></expr></argument>, <argument pos:start="135:46" pos:end="135:51"><expr pos:start="135:46" pos:end="135:51"><name pos:start="135:46" pos:end="135:51">sector</name></expr></argument>, <argument pos:start="135:54" pos:end="135:56"><expr pos:start="135:54" pos:end="135:56"><name pos:start="135:54" pos:end="135:56">buf</name></expr></argument>, <argument pos:start="135:59" pos:end="135:59"><expr pos:start="135:59" pos:end="135:59"><name pos:start="135:59" pos:end="135:59">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="137:13" pos:end="141:13"><if pos:start="137:13" pos:end="141:13">if <condition pos:start="137:16" pos:end="137:24">(<expr pos:start="137:17" pos:end="137:23"><name pos:start="137:17" pos:end="137:19">ret</name> <operator pos:start="137:21" pos:end="137:21">&lt;</operator> <literal type="number" pos:start="137:23" pos:end="137:23">0</literal></expr>)</condition> <block pos:start="137:26" pos:end="141:13">{<block_content pos:start="139:17" pos:end="139:32">

                <goto pos:start="139:17" pos:end="139:32">goto <name pos:start="139:22" pos:end="139:31">ro_cleanup</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="149:5" pos:end="161:5"><if pos:start="149:5" pos:end="161:5">if <condition pos:start="149:8" pos:end="149:29">(<expr pos:start="149:9" pos:end="149:28"><name pos:start="149:9" pos:end="149:28"><name pos:start="149:9" pos:end="149:11">drv</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:28">bdrv_make_empty</name></name></expr>)</condition> <block pos:start="149:31" pos:end="161:5">{<block_content pos:start="151:9" pos:end="159:23">

        <expr_stmt pos:start="151:9" pos:end="151:39"><expr pos:start="151:9" pos:end="151:38"><name pos:start="151:9" pos:end="151:11">ret</name> <operator pos:start="151:13" pos:end="151:13">=</operator> <call pos:start="151:15" pos:end="151:38"><name pos:start="151:15" pos:end="151:34"><name pos:start="151:15" pos:end="151:17">drv</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:34">bdrv_make_empty</name></name><argument_list pos:start="151:35" pos:end="151:38">(<argument pos:start="151:36" pos:end="151:37"><expr pos:start="151:36" pos:end="151:37"><name pos:start="151:36" pos:end="151:37">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="153:9" pos:end="157:9"><if pos:start="153:9" pos:end="157:9">if <condition pos:start="153:12" pos:end="153:20">(<expr pos:start="153:13" pos:end="153:19"><name pos:start="153:13" pos:end="153:15">ret</name> <operator pos:start="153:17" pos:end="153:17">&lt;</operator> <literal type="number" pos:start="153:19" pos:end="153:19">0</literal></expr>)</condition> <block pos:start="153:22" pos:end="157:9">{<block_content pos:start="155:13" pos:end="155:28">

            <goto pos:start="155:13" pos:end="155:28">goto <name pos:start="155:18" pos:end="155:27">ro_cleanup</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:23"><expr pos:start="159:9" pos:end="159:22"><call pos:start="159:9" pos:end="159:22"><name pos:start="159:9" pos:end="159:18">bdrv_flush</name><argument_list pos:start="159:19" pos:end="159:22">(<argument pos:start="159:20" pos:end="159:21"><expr pos:start="159:20" pos:end="159:21"><name pos:start="159:20" pos:end="159:21">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="165:5" pos:end="171:7">/*

     * Make sure all data we wrote to the backing device is actually

     * stable on disk.

     */</comment>

    <if_stmt pos:start="173:5" pos:end="177:5"><if pos:start="173:5" pos:end="177:5">if <condition pos:start="173:8" pos:end="173:23">(<expr pos:start="173:9" pos:end="173:22"><name pos:start="173:9" pos:end="173:22"><name pos:start="173:9" pos:end="173:10">bs</name><operator pos:start="173:11" pos:end="173:12">-&gt;</operator><name pos:start="173:13" pos:end="173:22">backing_hd</name></name></expr>)</condition> <block pos:start="173:25" pos:end="177:5">{<block_content pos:start="175:9" pos:end="175:35">

        <expr_stmt pos:start="175:9" pos:end="175:35"><expr pos:start="175:9" pos:end="175:34"><call pos:start="175:9" pos:end="175:34"><name pos:start="175:9" pos:end="175:18">bdrv_flush</name><argument_list pos:start="175:19" pos:end="175:34">(<argument pos:start="175:20" pos:end="175:33"><expr pos:start="175:20" pos:end="175:33"><name pos:start="175:20" pos:end="175:33"><name pos:start="175:20" pos:end="175:21">bs</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:33">backing_hd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:12"><expr pos:start="181:5" pos:end="181:11"><name pos:start="181:5" pos:end="181:7">ret</name> <operator pos:start="181:9" pos:end="181:9">=</operator> <literal type="number" pos:start="181:11" pos:end="181:11">0</literal></expr>;</expr_stmt>

<label pos:start="183:1" pos:end="183:11"><name pos:start="183:1" pos:end="183:10">ro_cleanup</name>:</label>

    <expr_stmt pos:start="185:5" pos:end="185:16"><expr pos:start="185:5" pos:end="185:15"><call pos:start="185:5" pos:end="185:15"><name pos:start="185:5" pos:end="185:10">g_free</name><argument_list pos:start="185:11" pos:end="185:15">(<argument pos:start="185:12" pos:end="185:14"><expr pos:start="185:12" pos:end="185:14"><name pos:start="185:12" pos:end="185:14">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="189:5" pos:end="195:5"><if pos:start="189:5" pos:end="195:5">if <condition pos:start="189:8" pos:end="189:11">(<expr pos:start="189:9" pos:end="189:10"><name pos:start="189:9" pos:end="189:10">ro</name></expr>)</condition> <block pos:start="189:13" pos:end="195:5">{<block_content pos:start="193:9" pos:end="193:69">

        <comment type="block" pos:start="191:9" pos:end="191:40">/* ignoring error return here */</comment>

        <expr_stmt pos:start="193:9" pos:end="193:69"><expr pos:start="193:9" pos:end="193:68"><call pos:start="193:9" pos:end="193:68"><name pos:start="193:9" pos:end="193:19">bdrv_reopen</name><argument_list pos:start="193:20" pos:end="193:68">(<argument pos:start="193:21" pos:end="193:34"><expr pos:start="193:21" pos:end="193:34"><name pos:start="193:21" pos:end="193:34"><name pos:start="193:21" pos:end="193:22">bs</name><operator pos:start="193:23" pos:end="193:24">-&gt;</operator><name pos:start="193:25" pos:end="193:34">backing_hd</name></name></expr></argument>, <argument pos:start="193:37" pos:end="193:61"><expr pos:start="193:37" pos:end="193:61"><name pos:start="193:37" pos:end="193:46">open_flags</name> <operator pos:start="193:48" pos:end="193:48">&amp;</operator> <operator pos:start="193:50" pos:end="193:50">~</operator><name pos:start="193:51" pos:end="193:61">BDRV_O_RDWR</name></expr></argument>, <argument pos:start="193:64" pos:end="193:67"><expr pos:start="193:64" pos:end="193:67"><name pos:start="193:64" pos:end="193:67">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="199:5" pos:end="199:15">return <expr pos:start="199:12" pos:end="199:14"><name pos:start="199:12" pos:end="199:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
