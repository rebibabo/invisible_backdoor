<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1363.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">lsi_transfer_data</name><parameter_list pos:start="1:30" pos:end="1:61">(<parameter pos:start="1:31" pos:end="1:46"><decl pos:start="1:31" pos:end="1:46"><type pos:start="1:31" pos:end="1:46"><name pos:start="1:31" pos:end="1:41">SCSIRequest</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">req</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:56">uint32_t</name></type> <name pos:start="1:58" pos:end="1:60">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <decl_stmt pos:start="5:5" pos:end="5:71"><decl pos:start="5:5" pos:end="5:70"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">LSIState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name> <init pos:start="5:17" pos:end="5:70">= <expr pos:start="5:19" pos:end="5:70"><call pos:start="5:19" pos:end="5:70"><name pos:start="5:19" pos:end="5:27">DO_UPCAST</name><argument_list pos:start="5:28" pos:end="5:70">(<argument pos:start="5:29" pos:end="5:36"><expr pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:36">LSIState</name></expr></argument>, <argument pos:start="5:39" pos:end="5:46"><expr pos:start="5:39" pos:end="5:46"><name pos:start="5:39" pos:end="5:46"><name pos:start="5:39" pos:end="5:41">dev</name><operator pos:start="5:42" pos:end="5:42">.</operator><name pos:start="5:43" pos:end="5:46">qdev</name></name></expr></argument>, <argument pos:start="5:49" pos:end="5:69"><expr pos:start="5:49" pos:end="5:69"><name pos:start="5:49" pos:end="5:69"><name pos:start="5:49" pos:end="5:51">req</name><operator pos:start="5:52" pos:end="5:53">-&gt;</operator><name pos:start="5:54" pos:end="5:56">bus</name><operator pos:start="5:57" pos:end="5:58">-&gt;</operator><name pos:start="5:59" pos:end="5:62">qbus</name><operator pos:start="5:63" pos:end="5:63">.</operator><name pos:start="5:64" pos:end="5:69">parent</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">out</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="21:5"><if pos:start="11:5" pos:end="21:5">if <condition pos:start="11:8" pos:end="13:61">(<expr pos:start="11:9" pos:end="13:60"><name pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:18">waiting</name></name> <operator pos:start="11:20" pos:end="11:21">==</operator> <literal type="number" pos:start="11:23" pos:end="11:23">1</literal> <operator pos:start="11:25" pos:end="11:26">||</operator> <operator pos:start="11:28" pos:end="11:28">!</operator><name pos:start="11:29" pos:end="11:38"><name pos:start="11:29" pos:end="11:29">s</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:38">current</name></name> <operator pos:start="11:40" pos:end="11:41">||</operator> <name pos:start="11:43" pos:end="11:58"><name pos:start="11:43" pos:end="11:45">req</name><operator pos:start="11:46" pos:end="11:47">-&gt;</operator><name pos:start="11:48" pos:end="11:58">hba_private</name></name> <operator pos:start="11:60" pos:end="11:61">!=</operator> <name pos:start="11:63" pos:end="11:72"><name pos:start="11:63" pos:end="11:63">s</name><operator pos:start="11:64" pos:end="11:65">-&gt;</operator><name pos:start="11:66" pos:end="11:72">current</name></name> <operator pos:start="11:74" pos:end="11:75">||</operator>

        <operator pos:start="13:9" pos:end="13:9">(</operator><call pos:start="13:10" pos:end="13:26"><name pos:start="13:10" pos:end="13:23">lsi_irq_on_rsl</name><argument_list pos:start="13:24" pos:end="13:26">(<argument pos:start="13:25" pos:end="13:25"><expr pos:start="13:25" pos:end="13:25"><name pos:start="13:25" pos:end="13:25">s</name></expr></argument>)</argument_list></call> <operator pos:start="13:28" pos:end="13:29">&amp;&amp;</operator> <operator pos:start="13:31" pos:end="13:31">!</operator><operator pos:start="13:32" pos:end="13:32">(</operator><name pos:start="13:33" pos:end="13:41"><name pos:start="13:33" pos:end="13:33">s</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:41">scntl1</name></name> <operator pos:start="13:43" pos:end="13:43">&amp;</operator> <name pos:start="13:45" pos:end="13:58">LSI_SCNTL1_CON</name><operator pos:start="13:59" pos:end="13:59">)</operator><operator pos:start="13:60" pos:end="13:60">)</operator></expr>)</condition> <block pos:start="13:63" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:9">

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:39">(<expr pos:start="15:13" pos:end="15:38"><call pos:start="15:13" pos:end="15:38"><name pos:start="15:13" pos:end="15:25">lsi_queue_req</name><argument_list pos:start="15:26" pos:end="15:38">(<argument pos:start="15:27" pos:end="15:27"><expr pos:start="15:27" pos:end="15:27"><name pos:start="15:27" pos:end="15:27">s</name></expr></argument>, <argument pos:start="15:30" pos:end="15:32"><expr pos:start="15:30" pos:end="15:32"><name pos:start="15:30" pos:end="15:32">req</name></expr></argument>, <argument pos:start="15:35" pos:end="15:37"><expr pos:start="15:35" pos:end="15:37"><name pos:start="15:35" pos:end="15:37">len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:41" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:19">

            <return pos:start="17:13" pos:end="17:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:47"><expr pos:start="25:5" pos:end="25:46"><name pos:start="25:5" pos:end="25:7">out</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <operator pos:start="25:11" pos:end="25:11">(</operator><name pos:start="25:12" pos:end="25:20"><name pos:start="25:12" pos:end="25:12">s</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:20">sstat1</name></name> <operator pos:start="25:22" pos:end="25:22">&amp;</operator> <name pos:start="25:24" pos:end="25:33">PHASE_MASK</name><operator pos:start="25:34" pos:end="25:34">)</operator> <operator pos:start="25:36" pos:end="25:37">==</operator> <name pos:start="25:39" pos:end="25:46">PHASE_DO</name></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:36">/* host adapter (re)connected */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:59"><expr pos:start="31:5" pos:end="31:58"><call pos:start="31:5" pos:end="31:58"><name pos:start="31:5" pos:end="31:11">DPRINTF</name><argument_list pos:start="31:12" pos:end="31:58">(<argument pos:start="31:13" pos:end="31:42"><expr pos:start="31:13" pos:end="31:42"><literal type="string" pos:start="31:13" pos:end="31:42">"Data ready tag=0x%x len=%d\n"</literal></expr></argument>, <argument pos:start="31:45" pos:end="31:52"><expr pos:start="31:45" pos:end="31:52"><name pos:start="31:45" pos:end="31:52"><name pos:start="31:45" pos:end="31:47">req</name><operator pos:start="31:48" pos:end="31:49">-&gt;</operator><name pos:start="31:50" pos:end="31:52">tag</name></name></expr></argument>, <argument pos:start="31:55" pos:end="31:57"><expr pos:start="31:55" pos:end="31:57"><name pos:start="31:55" pos:end="31:57">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:14">current</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:23">dma_len</name></name> <operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:29">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:28"><expr pos:start="35:5" pos:end="35:27"><name pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:23">command_complete</name></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <literal type="number" pos:start="35:27" pos:end="35:27">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="49:5"><if pos:start="37:5" pos:end="49:5">if <condition pos:start="37:8" pos:end="37:19">(<expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:18">waiting</name></name></expr>)</condition> <block pos:start="37:21" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:9">

        <if_stmt pos:start="39:9" pos:end="47:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:43">(<expr pos:start="39:13" pos:end="39:42"><name pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:22">waiting</name></name> <operator pos:start="39:24" pos:end="39:25">==</operator> <literal type="number" pos:start="39:27" pos:end="39:27">1</literal> <operator pos:start="39:29" pos:end="39:30">||</operator> <name pos:start="39:32" pos:end="39:37"><name pos:start="39:32" pos:end="39:32">s</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:37">dbc</name></name> <operator pos:start="39:39" pos:end="39:40">==</operator> <literal type="number" pos:start="39:42" pos:end="39:42">0</literal></expr>)</condition> <block pos:start="39:45" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:33">

            <expr_stmt pos:start="41:13" pos:end="41:33"><expr pos:start="41:13" pos:end="41:32"><call pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:29">lsi_resume_script</name><argument_list pos:start="41:30" pos:end="41:32">(<argument pos:start="41:31" pos:end="41:31"><expr pos:start="41:31" pos:end="41:31"><name pos:start="41:31" pos:end="41:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="47:9">else <block pos:start="43:16" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:31">

            <expr_stmt pos:start="45:13" pos:end="45:31"><expr pos:start="45:13" pos:end="45:30"><call pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:22">lsi_do_dma</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:24"><expr pos:start="45:24" pos:end="45:24"><name pos:start="45:24" pos:end="45:24">s</name></expr></argument>, <argument pos:start="45:27" pos:end="45:29"><expr pos:start="45:27" pos:end="45:29"><name pos:start="45:27" pos:end="45:29">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
