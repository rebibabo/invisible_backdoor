<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25003.c" pos:tabs="8"><function pos:start="1:1" pos:end="255:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">css_interpret_ccw</name><parameter_list pos:start="1:29" pos:end="3:50">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:37">SubchDev</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">sch</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:59"><decl pos:start="1:45" pos:end="1:59"><type pos:start="1:45" pos:end="1:59"><name pos:start="1:45" pos:end="1:50">hwaddr</name></type> <name pos:start="1:52" pos:end="1:59">ccw_addr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:49"><decl pos:start="3:30" pos:end="3:49"><type pos:start="3:30" pos:end="3:49"><name pos:start="3:30" pos:end="3:33">bool</name></type> <name pos:start="3:35" pos:end="3:49">suspend_allowed</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="255:1">{<block_content pos:start="7:5" pos:end="253:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:18">check_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">CCW1</name></type> <name pos:start="13:10" pos:end="13:12">ccw</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:18">(<expr pos:start="17:9" pos:end="17:17"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:17">ccw_addr</name></expr>)</condition> <block pos:start="17:20" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:20">

        <return pos:start="19:9" pos:end="19:20">return <expr pos:start="19:16" pos:end="19:19"><operator pos:start="19:16" pos:end="19:16">-</operator><name pos:start="19:17" pos:end="19:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="23:5" pos:end="23:72">/* Check doubleword aligned and 31 or 24 (fmt 0) bit addressable. */</comment>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:62">(<expr pos:start="25:9" pos:end="25:61"><name pos:start="25:9" pos:end="25:16">ccw_addr</name> <operator pos:start="25:18" pos:end="25:18">&amp;</operator> <operator pos:start="25:20" pos:end="25:20">(</operator><ternary pos:start="25:21" pos:end="25:60"><condition pos:start="25:21" pos:end="25:36"><expr pos:start="25:21" pos:end="25:34"><name pos:start="25:21" pos:end="25:34"><name pos:start="25:21" pos:end="25:23">sch</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:34">ccw_fmt_1</name></name></expr> ?</condition><then pos:start="25:38" pos:end="25:47"> <expr pos:start="25:38" pos:end="25:47"><literal type="number" pos:start="25:38" pos:end="25:47">0x80000007</literal></expr> </then><else pos:start="25:49" pos:end="25:60">: <expr pos:start="25:51" pos:end="25:60"><literal type="number" pos:start="25:51" pos:end="25:60">0xff000007</literal></expr></else></ternary><operator pos:start="25:61" pos:end="25:61">)</operator></expr>)</condition> <block pos:start="25:64" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:23">

        <return pos:start="27:9" pos:end="27:23">return <expr pos:start="27:16" pos:end="27:22"><operator pos:start="27:16" pos:end="27:16">-</operator><name pos:start="27:17" pos:end="27:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:78">/* Translate everything to format-1 ccws - the information is the same. */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:56"><expr pos:start="35:5" pos:end="35:55"><name pos:start="35:5" pos:end="35:7">ccw</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:55"><name pos:start="35:11" pos:end="35:29">copy_ccw_from_guest</name><argument_list pos:start="35:30" pos:end="35:55">(<argument pos:start="35:31" pos:end="35:38"><expr pos:start="35:31" pos:end="35:38"><name pos:start="35:31" pos:end="35:38">ccw_addr</name></expr></argument>, <argument pos:start="35:41" pos:end="35:54"><expr pos:start="35:41" pos:end="35:54"><name pos:start="35:41" pos:end="35:54"><name pos:start="35:41" pos:end="35:43">sch</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:54">ccw_fmt_1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:42">/* Check for invalid command codes. */</comment>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:35">(<expr pos:start="41:9" pos:end="41:34"><operator pos:start="41:9" pos:end="41:9">(</operator><name pos:start="41:10" pos:end="41:21"><name pos:start="41:10" pos:end="41:12">ccw</name><operator pos:start="41:13" pos:end="41:13">.</operator><name pos:start="41:14" pos:end="41:21">cmd_code</name></name> <operator pos:start="41:23" pos:end="41:23">&amp;</operator> <literal type="number" pos:start="41:25" pos:end="41:28">0x0f</literal><operator pos:start="41:29" pos:end="41:29">)</operator> <operator pos:start="41:31" pos:end="41:32">==</operator> <literal type="number" pos:start="41:34" pos:end="41:34">0</literal></expr>)</condition> <block pos:start="41:37" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:23">

        <return pos:start="43:9" pos:end="43:23">return <expr pos:start="43:16" pos:end="43:22"><operator pos:start="43:16" pos:end="43:16">-</operator><name pos:start="43:17" pos:end="43:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="49:37">(<expr pos:start="47:9" pos:end="49:36"><operator pos:start="47:9" pos:end="47:9">(</operator><operator pos:start="47:10" pos:end="47:10">(</operator><name pos:start="47:11" pos:end="47:22"><name pos:start="47:11" pos:end="47:13">ccw</name><operator pos:start="47:14" pos:end="47:14">.</operator><name pos:start="47:15" pos:end="47:22">cmd_code</name></name> <operator pos:start="47:24" pos:end="47:24">&amp;</operator> <literal type="number" pos:start="47:26" pos:end="47:29">0x0f</literal><operator pos:start="47:30" pos:end="47:30">)</operator> <operator pos:start="47:32" pos:end="47:33">==</operator> <name pos:start="47:35" pos:end="47:45">CCW_CMD_TIC</name><operator pos:start="47:46" pos:end="47:46">)</operator> <operator pos:start="47:48" pos:end="47:49">&amp;&amp;</operator>

        <operator pos:start="49:9" pos:end="49:9">(</operator><operator pos:start="49:10" pos:end="49:10">(</operator><name pos:start="49:11" pos:end="49:22"><name pos:start="49:11" pos:end="49:13">ccw</name><operator pos:start="49:14" pos:end="49:14">.</operator><name pos:start="49:15" pos:end="49:22">cmd_code</name></name> <operator pos:start="49:24" pos:end="49:24">&amp;</operator> <literal type="number" pos:start="49:26" pos:end="49:29">0xf0</literal><operator pos:start="49:30" pos:end="49:30">)</operator> <operator pos:start="49:32" pos:end="49:33">!=</operator> <literal type="number" pos:start="49:35" pos:end="49:35">0</literal><operator pos:start="49:36" pos:end="49:36">)</operator></expr>)</condition> <block pos:start="49:39" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:23">

        <return pos:start="51:9" pos:end="51:23">return <expr pos:start="51:16" pos:end="51:22"><operator pos:start="51:16" pos:end="51:16">-</operator><name pos:start="51:17" pos:end="51:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="57:38">(<expr pos:start="55:9" pos:end="57:37"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:23"><name pos:start="55:10" pos:end="55:12">sch</name><operator pos:start="55:13" pos:end="55:14">-&gt;</operator><name pos:start="55:15" pos:end="55:23">ccw_fmt_1</name></name> <operator pos:start="55:25" pos:end="55:26">&amp;&amp;</operator> <operator pos:start="55:28" pos:end="55:28">(</operator><name pos:start="55:29" pos:end="55:37"><name pos:start="55:29" pos:end="55:31">ccw</name><operator pos:start="55:32" pos:end="55:32">.</operator><name pos:start="55:33" pos:end="55:37">count</name></name> <operator pos:start="55:39" pos:end="55:40">==</operator> <literal type="number" pos:start="55:42" pos:end="55:42">0</literal><operator pos:start="55:43" pos:end="55:43">)</operator> <operator pos:start="55:45" pos:end="55:46">&amp;&amp;</operator>

        <operator pos:start="57:9" pos:end="57:9">(</operator><name pos:start="57:10" pos:end="57:21"><name pos:start="57:10" pos:end="57:12">ccw</name><operator pos:start="57:13" pos:end="57:13">.</operator><name pos:start="57:14" pos:end="57:21">cmd_code</name></name> <operator pos:start="57:23" pos:end="57:24">!=</operator> <name pos:start="57:26" pos:end="57:36">CCW_CMD_TIC</name><operator pos:start="57:37" pos:end="57:37">)</operator></expr>)</condition> <block pos:start="57:40" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:23">

        <return pos:start="59:9" pos:end="59:23">return <expr pos:start="59:16" pos:end="59:22"><operator pos:start="59:16" pos:end="59:16">-</operator><name pos:start="59:17" pos:end="59:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:32">/* We don't support MIDA. */</comment>

    <if_stmt pos:start="67:5" pos:end="71:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:34">(<expr pos:start="67:9" pos:end="67:33"><name pos:start="67:9" pos:end="67:17"><name pos:start="67:9" pos:end="67:11">ccw</name><operator pos:start="67:12" pos:end="67:12">.</operator><name pos:start="67:13" pos:end="67:17">flags</name></name> <operator pos:start="67:19" pos:end="67:19">&amp;</operator> <name pos:start="67:21" pos:end="67:33">CCW_FLAG_MIDA</name></expr>)</condition> <block pos:start="67:36" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:23">

        <return pos:start="69:9" pos:end="69:23">return <expr pos:start="69:16" pos:end="69:22"><operator pos:start="69:16" pos:end="69:16">-</operator><name pos:start="69:17" pos:end="69:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:37">(<expr pos:start="75:9" pos:end="75:36"><name pos:start="75:9" pos:end="75:17"><name pos:start="75:9" pos:end="75:11">ccw</name><operator pos:start="75:12" pos:end="75:12">.</operator><name pos:start="75:13" pos:end="75:17">flags</name></name> <operator pos:start="75:19" pos:end="75:19">&amp;</operator> <name pos:start="75:21" pos:end="75:36">CCW_FLAG_SUSPEND</name></expr>)</condition> <block pos:start="75:39" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:56">

        <return pos:start="77:9" pos:end="77:56">return <expr pos:start="77:16" pos:end="77:55"><ternary pos:start="77:16" pos:end="77:55"><condition pos:start="77:16" pos:end="77:32"><expr pos:start="77:16" pos:end="77:30"><name pos:start="77:16" pos:end="77:30">suspend_allowed</name></expr> ?</condition><then pos:start="77:34" pos:end="77:45"> <expr pos:start="77:34" pos:end="77:45"><operator pos:start="77:34" pos:end="77:34">-</operator><name pos:start="77:35" pos:end="77:45">EINPROGRESS</name></expr> </then><else pos:start="77:47" pos:end="77:55">: <expr pos:start="77:49" pos:end="77:55"><operator pos:start="77:49" pos:end="77:49">-</operator><name pos:start="77:50" pos:end="77:55">EINVAL</name></expr></else></ternary></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:76"><expr pos:start="83:5" pos:end="83:75"><name pos:start="83:5" pos:end="83:13">check_len</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <operator pos:start="83:17" pos:end="83:17">!</operator><operator pos:start="83:18" pos:end="83:18">(</operator><operator pos:start="83:19" pos:end="83:19">(</operator><name pos:start="83:20" pos:end="83:28"><name pos:start="83:20" pos:end="83:22">ccw</name><operator pos:start="83:23" pos:end="83:23">.</operator><name pos:start="83:24" pos:end="83:28">flags</name></name> <operator pos:start="83:30" pos:end="83:30">&amp;</operator> <name pos:start="83:32" pos:end="83:43">CCW_FLAG_SLI</name><operator pos:start="83:44" pos:end="83:44">)</operator> <operator pos:start="83:46" pos:end="83:47">&amp;&amp;</operator> <operator pos:start="83:49" pos:end="83:49">!</operator><operator pos:start="83:50" pos:end="83:50">(</operator><name pos:start="83:51" pos:end="83:59"><name pos:start="83:51" pos:end="83:53">ccw</name><operator pos:start="83:54" pos:end="83:54">.</operator><name pos:start="83:55" pos:end="83:59">flags</name></name> <operator pos:start="83:61" pos:end="83:61">&amp;</operator> <name pos:start="83:63" pos:end="83:73">CCW_FLAG_DC</name><operator pos:start="83:74" pos:end="83:74">)</operator><operator pos:start="83:75" pos:end="83:75">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="97:5"><if pos:start="87:5" pos:end="97:5">if <condition pos:start="87:8" pos:end="87:17">(<expr pos:start="87:9" pos:end="87:16"><operator pos:start="87:9" pos:end="87:9">!</operator><name pos:start="87:10" pos:end="87:16"><name pos:start="87:10" pos:end="87:12">ccw</name><operator pos:start="87:13" pos:end="87:13">.</operator><name pos:start="87:14" pos:end="87:16">cda</name></name></expr>)</condition> <block pos:start="87:19" pos:end="97:5">{<block_content pos:start="89:9" pos:end="95:31">

        <if_stmt pos:start="89:9" pos:end="93:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:40">(<expr pos:start="89:13" pos:end="89:39"><name pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:15">sch</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:32">ccw_no_data_cnt</name></name> <operator pos:start="89:34" pos:end="89:35">==</operator> <literal type="number" pos:start="89:37" pos:end="89:39">255</literal></expr>)</condition> <block pos:start="89:42" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:27">

            <return pos:start="91:13" pos:end="91:27">return <expr pos:start="91:20" pos:end="91:26"><operator pos:start="91:20" pos:end="91:20">-</operator><name pos:start="91:21" pos:end="91:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:31"><expr pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:11">sch</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:28">ccw_no_data_cnt</name></name><operator pos:start="95:29" pos:end="95:30">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="101:5" pos:end="101:30">/* Look at the command. */</comment>

    <switch pos:start="103:5" pos:end="233:5">switch <condition pos:start="103:12" pos:end="103:25">(<expr pos:start="103:13" pos:end="103:24"><name pos:start="103:13" pos:end="103:24"><name pos:start="103:13" pos:end="103:15">ccw</name><operator pos:start="103:16" pos:end="103:16">.</operator><name pos:start="103:17" pos:end="103:24">cmd_code</name></name></expr>)</condition> <block pos:start="103:27" pos:end="233:5">{<block_content pos:start="105:5" pos:end="231:14">

    <case pos:start="105:5" pos:end="105:22">case <expr pos:start="105:10" pos:end="105:21"><name pos:start="105:10" pos:end="105:21">CCW_CMD_NOOP</name></expr>:</case>

        <comment type="block" pos:start="107:9" pos:end="107:28">/* Nothing to do. */</comment>

        <expr_stmt pos:start="109:9" pos:end="109:16"><expr pos:start="109:9" pos:end="109:15"><name pos:start="109:9" pos:end="109:11">ret</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <literal type="number" pos:start="109:15" pos:end="109:15">0</literal></expr>;</expr_stmt>

        <break pos:start="111:9" pos:end="111:14">break;</break>

    <case pos:start="113:5" pos:end="113:29">case <expr pos:start="113:10" pos:end="113:28"><name pos:start="113:10" pos:end="113:28">CCW_CMD_BASIC_SENSE</name></expr>:</case>

        <if_stmt pos:start="115:9" pos:end="125:9"><if pos:start="115:9" pos:end="125:9">if <condition pos:start="115:12" pos:end="115:22">(<expr pos:start="115:13" pos:end="115:21"><name pos:start="115:13" pos:end="115:21">check_len</name></expr>)</condition> <block pos:start="115:24" pos:end="125:9">{<block_content pos:start="117:13" pos:end="123:13">

            <if_stmt pos:start="117:13" pos:end="123:13"><if pos:start="117:13" pos:end="123:13">if <condition pos:start="117:16" pos:end="117:53">(<expr pos:start="117:17" pos:end="117:52"><name pos:start="117:17" pos:end="117:25"><name pos:start="117:17" pos:end="117:19">ccw</name><operator pos:start="117:20" pos:end="117:20">.</operator><name pos:start="117:21" pos:end="117:25">count</name></name> <operator pos:start="117:27" pos:end="117:28">!=</operator> <sizeof pos:start="117:30" pos:end="117:52">sizeof<argument_list pos:start="117:36" pos:end="117:52">(<argument pos:start="117:37" pos:end="117:51"><expr pos:start="117:37" pos:end="117:51"><name pos:start="117:37" pos:end="117:51"><name pos:start="117:37" pos:end="117:39">sch</name><operator pos:start="117:40" pos:end="117:41">-&gt;</operator><name pos:start="117:42" pos:end="117:51">sense_data</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="117:55" pos:end="123:13">{<block_content pos:start="119:17" pos:end="121:22">

                <expr_stmt pos:start="119:17" pos:end="119:30"><expr pos:start="119:17" pos:end="119:29"><name pos:start="119:17" pos:end="119:19">ret</name> <operator pos:start="119:21" pos:end="119:21">=</operator> <operator pos:start="119:23" pos:end="119:23">-</operator><name pos:start="119:24" pos:end="119:29">EINVAL</name></expr>;</expr_stmt>

                <break pos:start="121:17" pos:end="121:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:54"><expr pos:start="127:9" pos:end="127:53"><name pos:start="127:9" pos:end="127:11">len</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <call pos:start="127:15" pos:end="127:53"><name pos:start="127:15" pos:end="127:17">MIN</name><argument_list pos:start="127:18" pos:end="127:53">(<argument pos:start="127:19" pos:end="127:27"><expr pos:start="127:19" pos:end="127:27"><name pos:start="127:19" pos:end="127:27"><name pos:start="127:19" pos:end="127:21">ccw</name><operator pos:start="127:22" pos:end="127:22">.</operator><name pos:start="127:23" pos:end="127:27">count</name></name></expr></argument>, <argument pos:start="127:30" pos:end="127:52"><expr pos:start="127:30" pos:end="127:52"><sizeof pos:start="127:30" pos:end="127:52">sizeof<argument_list pos:start="127:36" pos:end="127:52">(<argument pos:start="127:37" pos:end="127:51"><expr pos:start="127:37" pos:end="127:51"><name pos:start="127:37" pos:end="127:51"><name pos:start="127:37" pos:end="127:39">sch</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:51">sense_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:65"><expr pos:start="129:9" pos:end="129:64"><call pos:start="129:9" pos:end="129:64"><name pos:start="129:9" pos:end="129:33">cpu_physical_memory_write</name><argument_list pos:start="129:34" pos:end="129:64">(<argument pos:start="129:35" pos:end="129:41"><expr pos:start="129:35" pos:end="129:41"><name pos:start="129:35" pos:end="129:41"><name pos:start="129:35" pos:end="129:37">ccw</name><operator pos:start="129:38" pos:end="129:38">.</operator><name pos:start="129:39" pos:end="129:41">cda</name></name></expr></argument>, <argument pos:start="129:44" pos:end="129:58"><expr pos:start="129:44" pos:end="129:58"><name pos:start="129:44" pos:end="129:58"><name pos:start="129:44" pos:end="129:46">sch</name><operator pos:start="129:47" pos:end="129:48">-&gt;</operator><name pos:start="129:49" pos:end="129:58">sense_data</name></name></expr></argument>, <argument pos:start="129:61" pos:end="129:63"><expr pos:start="129:61" pos:end="129:63"><name pos:start="129:61" pos:end="129:63">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:54"><expr pos:start="131:9" pos:end="131:53"><name pos:start="131:9" pos:end="131:35"><name pos:start="131:9" pos:end="131:11">sch</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:24">curr_status</name><operator pos:start="131:25" pos:end="131:25">.</operator><name pos:start="131:26" pos:end="131:29">scsw</name><operator pos:start="131:30" pos:end="131:30">.</operator><name pos:start="131:31" pos:end="131:35">count</name></name> <operator pos:start="131:37" pos:end="131:37">=</operator> <name pos:start="131:39" pos:end="131:47"><name pos:start="131:39" pos:end="131:41">ccw</name><operator pos:start="131:42" pos:end="131:42">.</operator><name pos:start="131:43" pos:end="131:47">count</name></name> <operator pos:start="131:49" pos:end="131:49">-</operator> <name pos:start="131:51" pos:end="131:53">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:60"><expr pos:start="133:9" pos:end="133:59"><call pos:start="133:9" pos:end="133:59"><name pos:start="133:9" pos:end="133:14">memset</name><argument_list pos:start="133:15" pos:end="133:59">(<argument pos:start="133:16" pos:end="133:30"><expr pos:start="133:16" pos:end="133:30"><name pos:start="133:16" pos:end="133:30"><name pos:start="133:16" pos:end="133:18">sch</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:30">sense_data</name></name></expr></argument>, <argument pos:start="133:33" pos:end="133:33"><expr pos:start="133:33" pos:end="133:33"><literal type="number" pos:start="133:33" pos:end="133:33">0</literal></expr></argument>, <argument pos:start="133:36" pos:end="133:58"><expr pos:start="133:36" pos:end="133:58"><sizeof pos:start="133:36" pos:end="133:58">sizeof<argument_list pos:start="133:42" pos:end="133:58">(<argument pos:start="133:43" pos:end="133:57"><expr pos:start="133:43" pos:end="133:57"><name pos:start="133:43" pos:end="133:57"><name pos:start="133:43" pos:end="133:45">sch</name><operator pos:start="133:46" pos:end="133:47">-&gt;</operator><name pos:start="133:48" pos:end="133:57">sense_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:16"><expr pos:start="135:9" pos:end="135:15"><name pos:start="135:9" pos:end="135:11">ret</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <literal type="number" pos:start="135:15" pos:end="135:15">0</literal></expr>;</expr_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>

    <case pos:start="139:5" pos:end="139:26">case <expr pos:start="139:10" pos:end="139:25"><name pos:start="139:10" pos:end="139:25">CCW_CMD_SENSE_ID</name></expr>:</case>

    <block pos:start="141:5" pos:end="191:5">{<block_content pos:start="143:9" pos:end="189:14">

        <decl_stmt pos:start="143:9" pos:end="143:25"><decl pos:start="143:9" pos:end="143:24"><type pos:start="143:9" pos:end="143:15"><name pos:start="143:9" pos:end="143:15">SenseId</name></type> <name pos:start="143:17" pos:end="143:24">sense_id</name></decl>;</decl_stmt>



        <expr_stmt pos:start="147:9" pos:end="147:52"><expr pos:start="147:9" pos:end="147:51"><call pos:start="147:9" pos:end="147:51"><name pos:start="147:9" pos:end="147:30">copy_sense_id_to_guest</name><argument_list pos:start="147:31" pos:end="147:51">(<argument pos:start="147:32" pos:end="147:40"><expr pos:start="147:32" pos:end="147:40"><operator pos:start="147:32" pos:end="147:32">&amp;</operator><name pos:start="147:33" pos:end="147:40">sense_id</name></expr></argument>, <argument pos:start="147:43" pos:end="147:50"><expr pos:start="147:43" pos:end="147:50"><operator pos:start="147:43" pos:end="147:43">&amp;</operator><name pos:start="147:44" pos:end="147:50"><name pos:start="147:44" pos:end="147:46">sch</name><operator pos:start="147:47" pos:end="147:48">-&gt;</operator><name pos:start="147:49" pos:end="147:50">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="149:9" pos:end="149:54">/* Sense ID information is device specific. */</comment>

        <if_stmt pos:start="151:9" pos:end="161:9"><if pos:start="151:9" pos:end="161:9">if <condition pos:start="151:12" pos:end="151:22">(<expr pos:start="151:13" pos:end="151:21"><name pos:start="151:13" pos:end="151:21">check_len</name></expr>)</condition> <block pos:start="151:24" pos:end="161:9">{<block_content pos:start="153:13" pos:end="159:13">

            <if_stmt pos:start="153:13" pos:end="159:13"><if pos:start="153:13" pos:end="159:13">if <condition pos:start="153:16" pos:end="153:46">(<expr pos:start="153:17" pos:end="153:45"><name pos:start="153:17" pos:end="153:25"><name pos:start="153:17" pos:end="153:19">ccw</name><operator pos:start="153:20" pos:end="153:20">.</operator><name pos:start="153:21" pos:end="153:25">count</name></name> <operator pos:start="153:27" pos:end="153:28">!=</operator> <sizeof pos:start="153:30" pos:end="153:45">sizeof<argument_list pos:start="153:36" pos:end="153:45">(<argument pos:start="153:37" pos:end="153:44"><expr pos:start="153:37" pos:end="153:44"><name pos:start="153:37" pos:end="153:44">sense_id</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="153:48" pos:end="159:13">{<block_content pos:start="155:17" pos:end="157:22">

                <expr_stmt pos:start="155:17" pos:end="155:30"><expr pos:start="155:17" pos:end="155:29"><name pos:start="155:17" pos:end="155:19">ret</name> <operator pos:start="155:21" pos:end="155:21">=</operator> <operator pos:start="155:23" pos:end="155:23">-</operator><name pos:start="155:24" pos:end="155:29">EINVAL</name></expr>;</expr_stmt>

                <break pos:start="157:17" pos:end="157:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:47"><expr pos:start="163:9" pos:end="163:46"><name pos:start="163:9" pos:end="163:11">len</name> <operator pos:start="163:13" pos:end="163:13">=</operator> <call pos:start="163:15" pos:end="163:46"><name pos:start="163:15" pos:end="163:17">MIN</name><argument_list pos:start="163:18" pos:end="163:46">(<argument pos:start="163:19" pos:end="163:27"><expr pos:start="163:19" pos:end="163:27"><name pos:start="163:19" pos:end="163:27"><name pos:start="163:19" pos:end="163:21">ccw</name><operator pos:start="163:22" pos:end="163:22">.</operator><name pos:start="163:23" pos:end="163:27">count</name></name></expr></argument>, <argument pos:start="163:30" pos:end="163:45"><expr pos:start="163:30" pos:end="163:45"><sizeof pos:start="163:30" pos:end="163:45">sizeof<argument_list pos:start="163:36" pos:end="163:45">(<argument pos:start="163:37" pos:end="163:44"><expr pos:start="163:37" pos:end="163:44"><name pos:start="163:37" pos:end="163:44">sense_id</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="165:9" pos:end="171:11">/*

         * Only indicate 0xff in the first sense byte if we actually

         * have enough place to store at least bytes 0-3.

         */</comment>

        <if_stmt pos:start="173:9" pos:end="181:9"><if pos:start="173:9" pos:end="177:9">if <condition pos:start="173:12" pos:end="173:21">(<expr pos:start="173:13" pos:end="173:20"><name pos:start="173:13" pos:end="173:15">len</name> <operator pos:start="173:17" pos:end="173:18">&gt;=</operator> <literal type="number" pos:start="173:20" pos:end="173:20">4</literal></expr>)</condition> <block pos:start="173:23" pos:end="177:9">{<block_content pos:start="175:13" pos:end="175:37">

            <expr_stmt pos:start="175:13" pos:end="175:37"><expr pos:start="175:13" pos:end="175:36"><name pos:start="175:13" pos:end="175:29"><name pos:start="175:13" pos:end="175:20">sense_id</name><operator pos:start="175:21" pos:end="175:21">.</operator><name pos:start="175:22" pos:end="175:29">reserved</name></name> <operator pos:start="175:31" pos:end="175:31">=</operator> <literal type="number" pos:start="175:33" pos:end="175:36">0xff</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="177:11" pos:end="181:9">else <block pos:start="177:16" pos:end="181:9">{<block_content pos:start="179:13" pos:end="179:34">

            <expr_stmt pos:start="179:13" pos:end="179:34"><expr pos:start="179:13" pos:end="179:33"><name pos:start="179:13" pos:end="179:29"><name pos:start="179:13" pos:end="179:20">sense_id</name><operator pos:start="179:21" pos:end="179:21">.</operator><name pos:start="179:22" pos:end="179:29">reserved</name></name> <operator pos:start="179:31" pos:end="179:31">=</operator> <literal type="number" pos:start="179:33" pos:end="179:33">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:59"><expr pos:start="183:9" pos:end="183:58"><call pos:start="183:9" pos:end="183:58"><name pos:start="183:9" pos:end="183:33">cpu_physical_memory_write</name><argument_list pos:start="183:34" pos:end="183:58">(<argument pos:start="183:35" pos:end="183:41"><expr pos:start="183:35" pos:end="183:41"><name pos:start="183:35" pos:end="183:41"><name pos:start="183:35" pos:end="183:37">ccw</name><operator pos:start="183:38" pos:end="183:38">.</operator><name pos:start="183:39" pos:end="183:41">cda</name></name></expr></argument>, <argument pos:start="183:44" pos:end="183:52"><expr pos:start="183:44" pos:end="183:52"><operator pos:start="183:44" pos:end="183:44">&amp;</operator><name pos:start="183:45" pos:end="183:52">sense_id</name></expr></argument>, <argument pos:start="183:55" pos:end="183:57"><expr pos:start="183:55" pos:end="183:57"><name pos:start="183:55" pos:end="183:57">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:54"><expr pos:start="185:9" pos:end="185:53"><name pos:start="185:9" pos:end="185:35"><name pos:start="185:9" pos:end="185:11">sch</name><operator pos:start="185:12" pos:end="185:13">-&gt;</operator><name pos:start="185:14" pos:end="185:24">curr_status</name><operator pos:start="185:25" pos:end="185:25">.</operator><name pos:start="185:26" pos:end="185:29">scsw</name><operator pos:start="185:30" pos:end="185:30">.</operator><name pos:start="185:31" pos:end="185:35">count</name></name> <operator pos:start="185:37" pos:end="185:37">=</operator> <name pos:start="185:39" pos:end="185:47"><name pos:start="185:39" pos:end="185:41">ccw</name><operator pos:start="185:42" pos:end="185:42">.</operator><name pos:start="185:43" pos:end="185:47">count</name></name> <operator pos:start="185:49" pos:end="185:49">-</operator> <name pos:start="185:51" pos:end="185:53">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:16"><expr pos:start="187:9" pos:end="187:15"><name pos:start="187:9" pos:end="187:11">ret</name> <operator pos:start="187:13" pos:end="187:13">=</operator> <literal type="number" pos:start="187:15" pos:end="187:15">0</literal></expr>;</expr_stmt>

        <break pos:start="189:9" pos:end="189:14">break;</break>

    </block_content>}</block>

    <case pos:start="193:5" pos:end="193:21">case <expr pos:start="193:10" pos:end="193:20"><name pos:start="193:10" pos:end="193:20">CCW_CMD_TIC</name></expr>:</case>

        <if_stmt pos:start="195:9" pos:end="201:9"><if pos:start="195:9" pos:end="201:9">if <condition pos:start="195:12" pos:end="195:75">(<expr pos:start="195:13" pos:end="195:74"><name pos:start="195:13" pos:end="195:31"><name pos:start="195:13" pos:end="195:15">sch</name><operator pos:start="195:16" pos:end="195:17">-&gt;</operator><name pos:start="195:18" pos:end="195:31">last_cmd_valid</name></name> <operator pos:start="195:33" pos:end="195:34">&amp;&amp;</operator> <operator pos:start="195:36" pos:end="195:36">(</operator><name pos:start="195:37" pos:end="195:58"><name pos:start="195:37" pos:end="195:39">sch</name><operator pos:start="195:40" pos:end="195:41">-&gt;</operator><name pos:start="195:42" pos:end="195:49">last_cmd</name><operator pos:start="195:50" pos:end="195:50">.</operator><name pos:start="195:51" pos:end="195:58">cmd_code</name></name> <operator pos:start="195:60" pos:end="195:61">==</operator> <name pos:start="195:63" pos:end="195:73">CCW_CMD_TIC</name><operator pos:start="195:74" pos:end="195:74">)</operator></expr>)</condition> <block pos:start="195:77" pos:end="201:9">{<block_content pos:start="197:13" pos:end="199:18">

            <expr_stmt pos:start="197:13" pos:end="197:26"><expr pos:start="197:13" pos:end="197:25"><name pos:start="197:13" pos:end="197:15">ret</name> <operator pos:start="197:17" pos:end="197:17">=</operator> <operator pos:start="197:19" pos:end="197:19">-</operator><name pos:start="197:20" pos:end="197:25">EINVAL</name></expr>;</expr_stmt>

            <break pos:start="199:13" pos:end="199:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="203:9" pos:end="209:9"><if pos:start="203:9" pos:end="209:9">if <condition pos:start="203:12" pos:end="203:52">(<expr pos:start="203:13" pos:end="203:51"><name pos:start="203:13" pos:end="203:21"><name pos:start="203:13" pos:end="203:15">ccw</name><operator pos:start="203:16" pos:end="203:16">.</operator><name pos:start="203:17" pos:end="203:21">flags</name></name> <operator pos:start="203:23" pos:end="203:23">&amp;</operator> <operator pos:start="203:25" pos:end="203:25">(</operator><name pos:start="203:26" pos:end="203:36">CCW_FLAG_CC</name> <operator pos:start="203:38" pos:end="203:38">|</operator> <name pos:start="203:40" pos:end="203:50">CCW_FLAG_DC</name><operator pos:start="203:51" pos:end="203:51">)</operator></expr>)</condition> <block pos:start="203:54" pos:end="209:9">{<block_content pos:start="205:13" pos:end="207:18">

            <expr_stmt pos:start="205:13" pos:end="205:26"><expr pos:start="205:13" pos:end="205:25"><name pos:start="205:13" pos:end="205:15">ret</name> <operator pos:start="205:17" pos:end="205:17">=</operator> <operator pos:start="205:19" pos:end="205:19">-</operator><name pos:start="205:20" pos:end="205:25">EINVAL</name></expr>;</expr_stmt>

            <break pos:start="207:13" pos:end="207:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:36"><expr pos:start="211:9" pos:end="211:35"><name pos:start="211:9" pos:end="211:25"><name pos:start="211:9" pos:end="211:11">sch</name><operator pos:start="211:12" pos:end="211:13">-&gt;</operator><name pos:start="211:14" pos:end="211:25">channel_prog</name></name> <operator pos:start="211:27" pos:end="211:27">=</operator> <name pos:start="211:29" pos:end="211:35"><name pos:start="211:29" pos:end="211:31">ccw</name><operator pos:start="211:32" pos:end="211:32">.</operator><name pos:start="211:33" pos:end="211:35">cda</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:22"><expr pos:start="213:9" pos:end="213:21"><name pos:start="213:9" pos:end="213:11">ret</name> <operator pos:start="213:13" pos:end="213:13">=</operator> <operator pos:start="213:15" pos:end="213:15">-</operator><name pos:start="213:16" pos:end="213:21">EAGAIN</name></expr>;</expr_stmt>

        <break pos:start="215:9" pos:end="215:14">break;</break>

    <default pos:start="217:5" pos:end="217:12">default:</default>

        <if_stmt pos:start="219:9" pos:end="229:9"><if pos:start="219:9" pos:end="225:9">if <condition pos:start="219:12" pos:end="219:24">(<expr pos:start="219:13" pos:end="219:23"><name pos:start="219:13" pos:end="219:23"><name pos:start="219:13" pos:end="219:15">sch</name><operator pos:start="219:16" pos:end="219:17">-&gt;</operator><name pos:start="219:18" pos:end="219:23">ccw_cb</name></name></expr>)</condition> <block pos:start="219:26" pos:end="225:9">{<block_content pos:start="223:13" pos:end="223:40">

            <comment type="block" pos:start="221:13" pos:end="221:50">/* Handle device specific commands. */</comment>

            <expr_stmt pos:start="223:13" pos:end="223:40"><expr pos:start="223:13" pos:end="223:39"><name pos:start="223:13" pos:end="223:15">ret</name> <operator pos:start="223:17" pos:end="223:17">=</operator> <call pos:start="223:19" pos:end="223:39"><name pos:start="223:19" pos:end="223:29"><name pos:start="223:19" pos:end="223:21">sch</name><operator pos:start="223:22" pos:end="223:23">-&gt;</operator><name pos:start="223:24" pos:end="223:29">ccw_cb</name></name><argument_list pos:start="223:30" pos:end="223:39">(<argument pos:start="223:31" pos:end="223:33"><expr pos:start="223:31" pos:end="223:33"><name pos:start="223:31" pos:end="223:33">sch</name></expr></argument>, <argument pos:start="223:36" pos:end="223:38"><expr pos:start="223:36" pos:end="223:38"><name pos:start="223:36" pos:end="223:38">ccw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="225:11" pos:end="229:9">else <block pos:start="225:16" pos:end="229:9">{<block_content pos:start="227:13" pos:end="227:26">

            <expr_stmt pos:start="227:13" pos:end="227:26"><expr pos:start="227:13" pos:end="227:25"><name pos:start="227:13" pos:end="227:15">ret</name> <operator pos:start="227:17" pos:end="227:17">=</operator> <operator pos:start="227:19" pos:end="227:19">-</operator><name pos:start="227:20" pos:end="227:25">ENOSYS</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="231:9" pos:end="231:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="235:5" pos:end="235:24"><expr pos:start="235:5" pos:end="235:23"><name pos:start="235:5" pos:end="235:17"><name pos:start="235:5" pos:end="235:7">sch</name><operator pos:start="235:8" pos:end="235:9">-&gt;</operator><name pos:start="235:10" pos:end="235:17">last_cmd</name></name> <operator pos:start="235:19" pos:end="235:19">=</operator> <name pos:start="235:21" pos:end="235:23">ccw</name></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:31"><expr pos:start="237:5" pos:end="237:30"><name pos:start="237:5" pos:end="237:23"><name pos:start="237:5" pos:end="237:7">sch</name><operator pos:start="237:8" pos:end="237:9">-&gt;</operator><name pos:start="237:10" pos:end="237:23">last_cmd_valid</name></name> <operator pos:start="237:25" pos:end="237:25">=</operator> <name pos:start="237:27" pos:end="237:30">true</name></expr>;</expr_stmt>

    <if_stmt pos:start="239:5" pos:end="249:5"><if pos:start="239:5" pos:end="249:5">if <condition pos:start="239:8" pos:end="239:17">(<expr pos:start="239:9" pos:end="239:16"><name pos:start="239:9" pos:end="239:11">ret</name> <operator pos:start="239:13" pos:end="239:14">==</operator> <literal type="number" pos:start="239:16" pos:end="239:16">0</literal></expr>)</condition> <block pos:start="239:19" pos:end="249:5">{<block_content pos:start="241:9" pos:end="247:9">

        <if_stmt pos:start="241:9" pos:end="247:9"><if pos:start="241:9" pos:end="247:9">if <condition pos:start="241:12" pos:end="241:36">(<expr pos:start="241:13" pos:end="241:35"><name pos:start="241:13" pos:end="241:21"><name pos:start="241:13" pos:end="241:15">ccw</name><operator pos:start="241:16" pos:end="241:16">.</operator><name pos:start="241:17" pos:end="241:21">flags</name></name> <operator pos:start="241:23" pos:end="241:23">&amp;</operator> <name pos:start="241:25" pos:end="241:35">CCW_FLAG_CC</name></expr>)</condition> <block pos:start="241:38" pos:end="247:9">{<block_content pos:start="243:13" pos:end="245:26">

            <expr_stmt pos:start="243:13" pos:end="243:35"><expr pos:start="243:13" pos:end="243:34"><name pos:start="243:13" pos:end="243:29"><name pos:start="243:13" pos:end="243:15">sch</name><operator pos:start="243:16" pos:end="243:17">-&gt;</operator><name pos:start="243:18" pos:end="243:29">channel_prog</name></name> <operator pos:start="243:31" pos:end="243:32">+=</operator> <literal type="number" pos:start="243:34" pos:end="243:34">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:26"><expr pos:start="245:13" pos:end="245:25"><name pos:start="245:13" pos:end="245:15">ret</name> <operator pos:start="245:17" pos:end="245:17">=</operator> <operator pos:start="245:19" pos:end="245:19">-</operator><name pos:start="245:20" pos:end="245:25">EAGAIN</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="253:5" pos:end="253:15">return <expr pos:start="253:12" pos:end="253:14"><name pos:start="253:12" pos:end="253:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
