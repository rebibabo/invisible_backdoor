<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19035.c" pos:tabs="8"><function pos:start="1:1" pos:end="305:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">nut_write_packet</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list><block pos:start="1:63" pos:end="305:1">{<block_content pos:start="3:5" pos:end="303:13">

    <decl_stmt pos:start="3:5" pos:end="3:35"><decl pos:start="3:5" pos:end="3:34"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14">NUTContext</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:19">nut</name> <init pos:start="3:21" pos:end="3:34">= <expr pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:23">s</name><operator pos:start="3:24" pos:end="3:25">-&gt;</operator><name pos:start="3:26" pos:end="3:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">StreamContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">nus</name><init pos:start="5:23" pos:end="5:55">= <expr pos:start="5:25" pos:end="5:55"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:55"><name pos:start="5:26" pos:end="5:28">nut</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:36">stream</name><index pos:start="5:37" pos:end="5:55">[<expr pos:start="5:38" pos:end="5:54"><name pos:start="5:38" pos:end="5:54"><name pos:start="5:38" pos:end="5:40">pkt</name><operator pos:start="5:41" pos:end="5:42">-&gt;</operator><name pos:start="5:43" pos:end="5:54">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">bc</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>, <decl pos:start="7:30" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:17"><modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:36">dyn_bc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">FrameCode</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:17">fc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:21">coded_pts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:85"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">best_length</name></decl>, <decl pos:start="13:22" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:31">frame_code</name></decl>, <decl pos:start="13:34" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:34" pos:end="13:38">flags</name></decl>, <decl pos:start="13:41" pos:end="13:52"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:41" pos:end="13:52">needed_flags</name></decl>, <decl pos:start="13:55" pos:end="13:55"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:55" pos:end="13:55">i</name></decl>, <decl pos:start="13:58" pos:end="13:67"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:58" pos:end="13:67">header_idx</name></decl>, <decl pos:start="13:70" pos:end="13:84"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:70" pos:end="13:84">best_header_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:53"><decl pos:start="15:5" pos:end="15:52"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">key_frame</name> <init pos:start="15:19" pos:end="15:52">= <expr pos:start="15:21" pos:end="15:52"><operator pos:start="15:21" pos:end="15:21">!</operator><operator pos:start="15:22" pos:end="15:22">!</operator><operator pos:start="15:23" pos:end="15:23">(</operator><name pos:start="15:24" pos:end="15:33"><name pos:start="15:24" pos:end="15:26">pkt</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:33">flags</name></name> <operator pos:start="15:35" pos:end="15:35">&amp;</operator> <name pos:start="15:37" pos:end="15:51">AV_PKT_FLAG_KEY</name><operator pos:start="15:52" pos:end="15:52">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">store_sp</name><init pos:start="17:17" pos:end="17:18">=<expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if<condition pos:start="23:7" pos:end="23:20">(<expr pos:start="23:8" pos:end="23:19"><name pos:start="23:8" pos:end="23:15"><name pos:start="23:8" pos:end="23:10">pkt</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:15">pts</name></name> <operator pos:start="23:17" pos:end="23:17">&lt;</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:29"><if pos:start="29:5" pos:end="31:29">if<condition pos:start="29:7" pos:end="29:54">(<expr pos:start="29:8" pos:end="29:53"><literal type="number" pos:start="29:8" pos:end="29:10">1LL</literal><operator pos:start="29:11" pos:end="29:12">&lt;&lt;</operator><operator pos:start="29:13" pos:end="29:13">(</operator><literal type="number" pos:start="29:14" pos:end="29:16">20</literal><operator pos:start="29:16" pos:end="29:16">+</operator><literal type="number" pos:start="29:17" pos:end="29:17">3</literal><operator pos:start="29:18" pos:end="29:18">*</operator><name pos:start="29:19" pos:end="29:35"><name pos:start="29:19" pos:end="29:21">nut</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:35">header_count</name></name><operator pos:start="29:36" pos:end="29:36">)</operator> <operator pos:start="29:38" pos:end="29:39">&lt;=</operator> <call pos:start="29:41" pos:end="29:53"><name pos:start="29:41" pos:end="29:49">avio_tell</name><argument_list pos:start="29:50" pos:end="29:53">(<argument pos:start="29:51" pos:end="29:52"><expr pos:start="29:51" pos:end="29:52"><name pos:start="29:51" pos:end="29:52">bc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:29"><block_content pos:start="31:9" pos:end="31:29">

        <expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><call pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:21">write_headers</name><argument_list pos:start="31:22" pos:end="31:28">(<argument pos:start="31:23" pos:end="31:23"><expr pos:start="31:23" pos:end="31:23"><name pos:start="31:23" pos:end="31:23">s</name></expr></argument>, <argument pos:start="31:26" pos:end="31:27"><expr pos:start="31:26" pos:end="31:27"><name pos:start="31:26" pos:end="31:27">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="37:20"><if pos:start="35:5" pos:end="37:20">if<condition pos:start="35:7" pos:end="35:50">(<expr pos:start="35:8" pos:end="35:49"><name pos:start="35:8" pos:end="35:16">key_frame</name> <operator pos:start="35:18" pos:end="35:19">&amp;&amp;</operator> <operator pos:start="35:21" pos:end="35:21">!</operator><operator pos:start="35:22" pos:end="35:22">(</operator><name pos:start="35:23" pos:end="35:37"><name pos:start="35:23" pos:end="35:25">nus</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:37">last_flags</name></name> <operator pos:start="35:39" pos:end="35:39">&amp;</operator> <name pos:start="35:41" pos:end="35:48">FLAG_KEY</name><operator pos:start="35:49" pos:end="35:49">)</operator></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:20"><block_content pos:start="37:9" pos:end="37:20">

        <expr_stmt pos:start="37:9" pos:end="37:20"><expr pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:16">store_sp</name><operator pos:start="37:17" pos:end="37:17">=</operator> <literal type="number" pos:start="37:19" pos:end="37:19">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="43:20"><if pos:start="41:5" pos:end="43:20">if<condition pos:start="41:7" pos:end="41:100">(<expr pos:start="41:8" pos:end="41:99"><name pos:start="41:8" pos:end="41:16"><name pos:start="41:8" pos:end="41:10">pkt</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:16">size</name></name> <operator pos:start="41:18" pos:end="41:18">+</operator> <literal type="number" pos:start="41:20" pos:end="41:38">30</literal><comment type="block" pos:start="41:22" pos:end="41:36">/*FIXME check*/</comment> <operator pos:start="41:38" pos:end="41:38">+</operator> <call pos:start="41:40" pos:end="41:52"><name pos:start="41:40" pos:end="41:48">avio_tell</name><argument_list pos:start="41:49" pos:end="41:52">(<argument pos:start="41:50" pos:end="41:51"><expr pos:start="41:50" pos:end="41:51"><name pos:start="41:50" pos:end="41:51">bc</name></expr></argument>)</argument_list></call> <operator pos:start="41:54" pos:end="41:55">&gt;=</operator> <name pos:start="41:57" pos:end="41:79"><name pos:start="41:57" pos:end="41:59">nut</name><operator pos:start="41:60" pos:end="41:61">-&gt;</operator><name pos:start="41:62" pos:end="41:79">last_syncpoint_pos</name></name> <operator pos:start="41:81" pos:end="41:81">+</operator> <name pos:start="41:83" pos:end="41:99"><name pos:start="41:83" pos:end="41:85">nut</name><operator pos:start="41:86" pos:end="41:87">-&gt;</operator><name pos:start="41:88" pos:end="41:99">max_distance</name></name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:20"><block_content pos:start="43:9" pos:end="43:20">

        <expr_stmt pos:start="43:9" pos:end="43:20"><expr pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:16">store_sp</name><operator pos:start="43:17" pos:end="43:17">=</operator> <literal type="number" pos:start="43:19" pos:end="43:19">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



<comment type="line" pos:start="47:1" pos:end="47:49">//FIXME: Ensure store_sp is 1 in the first place.</comment>



    <if_stmt pos:start="51:5" pos:end="105:5"><if pos:start="51:5" pos:end="105:5">if<condition pos:start="51:7" pos:end="51:16">(<expr pos:start="51:8" pos:end="51:15"><name pos:start="51:8" pos:end="51:15">store_sp</name></expr>)</condition><block pos:start="51:17" pos:end="105:5">{<block_content pos:start="53:9" pos:end="103:75">

        <decl_stmt pos:start="53:9" pos:end="53:48"><decl pos:start="53:9" pos:end="53:21"><type pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:17">Syncpoint</name> <modifier pos:start="53:19" pos:end="53:19">*</modifier></type><name pos:start="53:20" pos:end="53:21">sp</name></decl>, <decl pos:start="53:24" pos:end="53:47"><type ref="prev" pos:start="53:9" pos:end="53:19"/><name pos:start="53:24" pos:end="53:28">dummy</name><init pos:start="53:29" pos:end="53:47">= <expr pos:start="53:31" pos:end="53:47"><block pos:start="53:31" pos:end="53:47">{<expr pos:start="53:32" pos:end="53:46"><operator pos:start="53:32" pos:end="53:32">.</operator><name pos:start="53:33" pos:end="53:35">pos</name><operator pos:start="53:36" pos:end="53:36">=</operator> <name pos:start="53:38" pos:end="53:46">INT64_MAX</name></expr>}</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:56"><expr pos:start="57:9" pos:end="57:55"><call pos:start="57:9" pos:end="57:55"><name pos:start="57:9" pos:end="57:23">ff_nut_reset_ts</name><argument_list pos:start="57:24" pos:end="57:55">(<argument pos:start="57:25" pos:end="57:27"><expr pos:start="57:25" pos:end="57:27"><name pos:start="57:25" pos:end="57:27">nut</name></expr></argument>, <argument pos:start="57:30" pos:end="57:44"><expr pos:start="57:30" pos:end="57:44"><operator pos:start="57:30" pos:end="57:30">*</operator><name pos:start="57:31" pos:end="57:44"><name pos:start="57:31" pos:end="57:33">nus</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:44">time_base</name></name></expr></argument>, <argument pos:start="57:47" pos:end="57:54"><expr pos:start="57:47" pos:end="57:54"><name pos:start="57:47" pos:end="57:54"><name pos:start="57:47" pos:end="57:49">pkt</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:54">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="59:9" pos:end="75:9">for<control pos:start="59:12" pos:end="59:38">(<init pos:start="59:13" pos:end="59:16"><expr pos:start="59:13" pos:end="59:15"><name pos:start="59:13" pos:end="59:13">i</name><operator pos:start="59:14" pos:end="59:14">=</operator><literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr>;</init> <condition pos:start="59:18" pos:end="59:33"><expr pos:start="59:18" pos:end="59:32"><name pos:start="59:18" pos:end="59:18">i</name><operator pos:start="59:19" pos:end="59:19">&lt;</operator><name pos:start="59:20" pos:end="59:32"><name pos:start="59:20" pos:end="59:20">s</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:32">nb_streams</name></name></expr>;</condition> <incr pos:start="59:35" pos:end="59:37"><expr pos:start="59:35" pos:end="59:37"><name pos:start="59:35" pos:end="59:35">i</name><operator pos:start="59:36" pos:end="59:37">++</operator></expr></incr>)</control><block pos:start="59:39" pos:end="75:9">{<block_content pos:start="61:13" pos:end="73:83">

            <decl_stmt pos:start="61:13" pos:end="61:40"><decl pos:start="61:13" pos:end="61:39"><type pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:20">AVStream</name> <modifier pos:start="61:22" pos:end="61:22">*</modifier></type><name pos:start="61:23" pos:end="61:24">st</name><init pos:start="61:25" pos:end="61:39">= <expr pos:start="61:27" pos:end="61:39"><name pos:start="61:27" pos:end="61:39"><name pos:start="61:27" pos:end="61:27">s</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:36">streams</name><index pos:start="61:37" pos:end="61:39">[<expr pos:start="61:38" pos:end="61:38"><name pos:start="61:38" pos:end="61:38">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="63:13" pos:end="69:31"><decl pos:start="63:13" pos:end="69:30"><type pos:start="63:13" pos:end="63:19"><name pos:start="63:13" pos:end="63:19">int64_t</name></type> <name pos:start="63:21" pos:end="63:26">dts_tb</name> <init pos:start="63:28" pos:end="69:30">= <expr pos:start="63:30" pos:end="69:30"><call pos:start="63:30" pos:end="69:30"><name pos:start="63:30" pos:end="63:43">av_rescale_rnd</name><argument_list pos:start="63:44" pos:end="69:30">(<argument pos:start="63:45" pos:end="63:52"><expr pos:start="63:45" pos:end="63:52"><name pos:start="63:45" pos:end="63:52"><name pos:start="63:45" pos:end="63:47">pkt</name><operator pos:start="63:48" pos:end="63:49">-&gt;</operator><name pos:start="63:50" pos:end="63:52">dts</name></name></expr></argument>,

                <argument pos:start="65:17" pos:end="65:76"><expr pos:start="65:17" pos:end="65:76"><name pos:start="65:17" pos:end="65:35"><name pos:start="65:17" pos:end="65:19">nus</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:30">time_base</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:35">num</name></name> <operator pos:start="65:37" pos:end="65:37">*</operator> <operator pos:start="65:39" pos:end="65:39">(</operator><name pos:start="65:40" pos:end="65:46">int64_t</name><operator pos:start="65:47" pos:end="65:47">)</operator><name pos:start="65:48" pos:end="65:61"><name pos:start="65:48" pos:end="65:50">nut</name><operator pos:start="65:51" pos:end="65:52">-&gt;</operator><name pos:start="65:53" pos:end="65:58">stream</name><index pos:start="65:59" pos:end="65:61">[<expr pos:start="65:60" pos:end="65:60"><name pos:start="65:60" pos:end="65:60">i</name></expr>]</index></name><operator pos:start="65:62" pos:end="65:62">.</operator><name pos:start="65:63" pos:end="65:76"><name pos:start="65:63" pos:end="65:71">time_base</name><operator pos:start="65:72" pos:end="65:73">-&gt;</operator><name pos:start="65:74" pos:end="65:76">den</name></name></expr></argument>,

                <argument pos:start="67:17" pos:end="67:76"><expr pos:start="67:17" pos:end="67:76"><name pos:start="67:17" pos:end="67:35"><name pos:start="67:17" pos:end="67:19">nus</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:30">time_base</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:35">den</name></name> <operator pos:start="67:37" pos:end="67:37">*</operator> <operator pos:start="67:39" pos:end="67:39">(</operator><name pos:start="67:40" pos:end="67:46">int64_t</name><operator pos:start="67:47" pos:end="67:47">)</operator><name pos:start="67:48" pos:end="67:61"><name pos:start="67:48" pos:end="67:50">nut</name><operator pos:start="67:51" pos:end="67:52">-&gt;</operator><name pos:start="67:53" pos:end="67:58">stream</name><index pos:start="67:59" pos:end="67:61">[<expr pos:start="67:60" pos:end="67:60"><name pos:start="67:60" pos:end="67:60">i</name></expr>]</index></name><operator pos:start="67:62" pos:end="67:62">.</operator><name pos:start="67:63" pos:end="67:76"><name pos:start="67:63" pos:end="67:71">time_base</name><operator pos:start="67:72" pos:end="67:73">-&gt;</operator><name pos:start="67:74" pos:end="67:76">num</name></name></expr></argument>,

                <argument pos:start="69:17" pos:end="69:29"><expr pos:start="69:17" pos:end="69:29"><name pos:start="69:17" pos:end="69:29">AV_ROUND_DOWN</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="71:13" pos:end="71:83"><decl pos:start="71:13" pos:end="71:82"><type pos:start="71:13" pos:end="71:15"><name pos:start="71:13" pos:end="71:15">int</name></type> <name pos:start="71:17" pos:end="71:21">index</name><init pos:start="71:22" pos:end="71:82">= <expr pos:start="71:24" pos:end="71:82"><call pos:start="71:24" pos:end="71:82"><name pos:start="71:24" pos:end="71:48">av_index_search_timestamp</name><argument_list pos:start="71:49" pos:end="71:82">(<argument pos:start="71:50" pos:end="71:51"><expr pos:start="71:50" pos:end="71:51"><name pos:start="71:50" pos:end="71:51">st</name></expr></argument>, <argument pos:start="71:54" pos:end="71:59"><expr pos:start="71:54" pos:end="71:59"><name pos:start="71:54" pos:end="71:59">dts_tb</name></expr></argument>, <argument pos:start="71:62" pos:end="71:81"><expr pos:start="71:62" pos:end="71:81"><name pos:start="71:62" pos:end="71:81">AVSEEK_FLAG_BACKWARD</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="73:13" pos:end="73:83"><if pos:start="73:13" pos:end="73:83">if<condition pos:start="73:15" pos:end="73:24">(<expr pos:start="73:16" pos:end="73:23"><name pos:start="73:16" pos:end="73:20">index</name><operator pos:start="73:21" pos:end="73:22">&gt;=</operator><literal type="number" pos:start="73:23" pos:end="73:23">0</literal></expr>)</condition><block type="pseudo" pos:start="73:26" pos:end="73:83"><block_content pos:start="73:26" pos:end="73:83"> <expr_stmt pos:start="73:26" pos:end="73:83"><expr pos:start="73:26" pos:end="73:82"><name pos:start="73:26" pos:end="73:34"><name pos:start="73:26" pos:end="73:30">dummy</name><operator pos:start="73:31" pos:end="73:31">.</operator><name pos:start="73:32" pos:end="73:34">pos</name></name><operator pos:start="73:35" pos:end="73:35">=</operator> <call pos:start="73:37" pos:end="73:82"><name pos:start="73:37" pos:end="73:41">FFMIN</name><argument_list pos:start="73:42" pos:end="73:82">(<argument pos:start="73:43" pos:end="73:51"><expr pos:start="73:43" pos:end="73:51"><name pos:start="73:43" pos:end="73:51"><name pos:start="73:43" pos:end="73:47">dummy</name><operator pos:start="73:48" pos:end="73:48">.</operator><name pos:start="73:49" pos:end="73:51">pos</name></name></expr></argument>, <argument pos:start="73:54" pos:end="73:81"><expr pos:start="73:54" pos:end="73:81"><name pos:start="73:54" pos:end="73:77"><name pos:start="73:54" pos:end="73:55">st</name><operator pos:start="73:56" pos:end="73:57">-&gt;</operator><name pos:start="73:58" pos:end="73:70">index_entries</name><index pos:start="73:71" pos:end="73:77">[<expr pos:start="73:72" pos:end="73:76"><name pos:start="73:72" pos:end="73:76">index</name></expr>]</index></name><operator pos:start="73:78" pos:end="73:78">.</operator><name pos:start="73:79" pos:end="73:81">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="77:9" pos:end="79:25"><if pos:start="77:9" pos:end="79:25">if<condition pos:start="77:11" pos:end="77:34">(<expr pos:start="77:12" pos:end="77:33"><name pos:start="77:12" pos:end="77:20"><name pos:start="77:12" pos:end="77:16">dummy</name><operator pos:start="77:17" pos:end="77:17">.</operator><name pos:start="77:18" pos:end="77:20">pos</name></name> <operator pos:start="77:22" pos:end="77:23">==</operator> <name pos:start="77:25" pos:end="77:33">INT64_MAX</name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:25"><block_content pos:start="79:13" pos:end="79:25">

            <expr_stmt pos:start="79:13" pos:end="79:25"><expr pos:start="79:13" pos:end="79:24"><name pos:start="79:13" pos:end="79:21"><name pos:start="79:13" pos:end="79:17">dummy</name><operator pos:start="79:18" pos:end="79:18">.</operator><name pos:start="79:19" pos:end="79:21">pos</name></name><operator pos:start="79:22" pos:end="79:22">=</operator> <literal type="number" pos:start="79:24" pos:end="79:24">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="83:31"><expr pos:start="81:9" pos:end="83:30"><name pos:start="81:9" pos:end="81:10">sp</name><operator pos:start="81:11" pos:end="81:11">=</operator> <call pos:start="81:13" pos:end="83:30"><name pos:start="81:13" pos:end="81:24">av_tree_find</name><argument_list pos:start="81:25" pos:end="83:30">(<argument pos:start="81:26" pos:end="81:40"><expr pos:start="81:26" pos:end="81:40"><name pos:start="81:26" pos:end="81:40"><name pos:start="81:26" pos:end="81:28">nut</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:40">syncpoints</name></name></expr></argument>, <argument pos:start="81:43" pos:end="81:48"><expr pos:start="81:43" pos:end="81:48"><operator pos:start="81:43" pos:end="81:43">&amp;</operator><name pos:start="81:44" pos:end="81:48">dummy</name></expr></argument>, <argument pos:start="81:51" pos:end="81:76"><expr pos:start="81:51" pos:end="81:76"><operator pos:start="81:51" pos:end="81:51">(</operator><name pos:start="81:52" pos:end="81:55">void</name> <operator pos:start="81:57" pos:end="81:57">*</operator><operator pos:start="81:58" pos:end="81:58">)</operator> <name pos:start="81:60" pos:end="81:76">ff_nut_sp_pos_cmp</name></expr></argument>,

                         <argument pos:start="83:26" pos:end="83:29"><expr pos:start="83:26" pos:end="83:29"><name pos:start="83:26" pos:end="83:29">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:47"><expr pos:start="87:9" pos:end="87:46"><name pos:start="87:9" pos:end="87:31"><name pos:start="87:9" pos:end="87:11">nut</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:31">last_syncpoint_pos</name></name><operator pos:start="87:32" pos:end="87:32">=</operator> <call pos:start="87:34" pos:end="87:46"><name pos:start="87:34" pos:end="87:42">avio_tell</name><argument_list pos:start="87:43" pos:end="87:46">(<argument pos:start="87:44" pos:end="87:45"><expr pos:start="87:44" pos:end="87:45"><name pos:start="87:44" pos:end="87:45">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:41"><expr pos:start="89:9" pos:end="89:40"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:40"><name pos:start="89:15" pos:end="89:31">avio_open_dyn_buf</name><argument_list pos:start="89:32" pos:end="89:40">(<argument pos:start="89:33" pos:end="89:39"><expr pos:start="89:33" pos:end="89:39"><operator pos:start="89:33" pos:end="89:33">&amp;</operator><name pos:start="89:34" pos:end="89:39">dyn_bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="93:23"><if pos:start="91:9" pos:end="93:23">if<condition pos:start="91:11" pos:end="91:19">(<expr pos:start="91:12" pos:end="91:18"><name pos:start="91:12" pos:end="91:14">ret</name> <operator pos:start="91:16" pos:end="91:16">&lt;</operator> <literal type="number" pos:start="91:18" pos:end="91:18">0</literal></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:23"><block_content pos:start="93:13" pos:end="93:23">

            <return pos:start="93:13" pos:end="93:23">return <expr pos:start="93:20" pos:end="93:22"><name pos:start="93:20" pos:end="93:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:54"><expr pos:start="95:9" pos:end="95:53"><call pos:start="95:9" pos:end="95:53"><name pos:start="95:9" pos:end="95:14">put_tt</name><argument_list pos:start="95:15" pos:end="95:53">(<argument pos:start="95:16" pos:end="95:18"><expr pos:start="95:16" pos:end="95:18"><name pos:start="95:16" pos:end="95:18">nut</name></expr></argument>, <argument pos:start="95:21" pos:end="95:34"><expr pos:start="95:21" pos:end="95:34"><name pos:start="95:21" pos:end="95:34"><name pos:start="95:21" pos:end="95:23">nus</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:34">time_base</name></name></expr></argument>, <argument pos:start="95:37" pos:end="95:42"><expr pos:start="95:37" pos:end="95:42"><name pos:start="95:37" pos:end="95:42">dyn_bc</name></expr></argument>, <argument pos:start="95:45" pos:end="95:52"><expr pos:start="95:45" pos:end="95:52"><name pos:start="95:45" pos:end="95:52"><name pos:start="95:45" pos:end="95:47">pkt</name><operator pos:start="95:48" pos:end="95:49">-&gt;</operator><name pos:start="95:50" pos:end="95:52">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:74"><expr pos:start="97:9" pos:end="97:73"><call pos:start="97:9" pos:end="97:73"><name pos:start="97:9" pos:end="97:16">ff_put_v</name><argument_list pos:start="97:17" pos:end="97:73">(<argument pos:start="97:18" pos:end="97:23"><expr pos:start="97:18" pos:end="97:23"><name pos:start="97:18" pos:end="97:23">dyn_bc</name></expr></argument>, <argument pos:start="97:26" pos:end="97:72"><expr pos:start="97:26" pos:end="97:72"><ternary pos:start="97:26" pos:end="97:72"><condition pos:start="97:26" pos:end="97:29"><expr pos:start="97:26" pos:end="97:27"><name pos:start="97:26" pos:end="97:27">sp</name></expr> ?</condition><then pos:start="97:31" pos:end="97:68"> <expr pos:start="97:31" pos:end="97:68"><operator pos:start="97:31" pos:end="97:31">(</operator><name pos:start="97:32" pos:end="97:54"><name pos:start="97:32" pos:end="97:34">nut</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:54">last_syncpoint_pos</name></name> <operator pos:start="97:56" pos:end="97:56">-</operator> <name pos:start="97:58" pos:end="97:64"><name pos:start="97:58" pos:end="97:59">sp</name><operator pos:start="97:60" pos:end="97:61">-&gt;</operator><name pos:start="97:62" pos:end="97:64">pos</name></name><operator pos:start="97:65" pos:end="97:65">)</operator><operator pos:start="97:66" pos:end="97:67">&gt;&gt;</operator><literal type="number" pos:start="97:68" pos:end="97:68">4</literal></expr> </then><else pos:start="97:70" pos:end="97:72">: <expr pos:start="97:72" pos:end="97:72"><literal type="number" pos:start="97:72" pos:end="97:72">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:60"><expr pos:start="99:9" pos:end="99:59"><call pos:start="99:9" pos:end="99:59"><name pos:start="99:9" pos:end="99:18">put_packet</name><argument_list pos:start="99:19" pos:end="99:59">(<argument pos:start="99:20" pos:end="99:22"><expr pos:start="99:20" pos:end="99:22"><name pos:start="99:20" pos:end="99:22">nut</name></expr></argument>, <argument pos:start="99:25" pos:end="99:26"><expr pos:start="99:25" pos:end="99:26"><name pos:start="99:25" pos:end="99:26">bc</name></expr></argument>, <argument pos:start="99:29" pos:end="99:34"><expr pos:start="99:29" pos:end="99:34"><name pos:start="99:29" pos:end="99:34">dyn_bc</name></expr></argument>, <argument pos:start="99:37" pos:end="99:37"><expr pos:start="99:37" pos:end="99:37"><literal type="number" pos:start="99:37" pos:end="99:37">1</literal></expr></argument>, <argument pos:start="99:40" pos:end="99:58"><expr pos:start="99:40" pos:end="99:58"><name pos:start="99:40" pos:end="99:58">SYNCPOINT_STARTCODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:75"><expr pos:start="103:9" pos:end="103:74"><call pos:start="103:9" pos:end="103:74"><name pos:start="103:9" pos:end="103:21">ff_nut_add_sp</name><argument_list pos:start="103:22" pos:end="103:74">(<argument pos:start="103:23" pos:end="103:25"><expr pos:start="103:23" pos:end="103:25"><name pos:start="103:23" pos:end="103:25">nut</name></expr></argument>, <argument pos:start="103:28" pos:end="103:50"><expr pos:start="103:28" pos:end="103:50"><name pos:start="103:28" pos:end="103:50"><name pos:start="103:28" pos:end="103:30">nut</name><operator pos:start="103:31" pos:end="103:32">-&gt;</operator><name pos:start="103:33" pos:end="103:50">last_syncpoint_pos</name></name></expr></argument>, <argument pos:start="103:53" pos:end="103:53"><expr pos:start="103:53" pos:end="103:53"><literal type="number" pos:start="103:53" pos:end="103:53">0</literal></expr></argument><comment type="block" pos:start="103:54" pos:end="103:63">/*unused*/</comment>, <argument pos:start="103:66" pos:end="103:73"><expr pos:start="103:66" pos:end="103:73"><name pos:start="103:66" pos:end="103:73"><name pos:start="103:66" pos:end="103:68">pkt</name><operator pos:start="103:69" pos:end="103:70">-&gt;</operator><name pos:start="103:71" pos:end="103:73">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:48"><expr pos:start="107:5" pos:end="107:47"><call pos:start="107:5" pos:end="107:47"><name pos:start="107:5" pos:end="107:14">av_assert0</name><argument_list pos:start="107:15" pos:end="107:47">(<argument pos:start="107:16" pos:end="107:46"><expr pos:start="107:16" pos:end="107:46"><name pos:start="107:16" pos:end="107:28"><name pos:start="107:16" pos:end="107:18">nus</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:28">last_pts</name></name> <operator pos:start="107:30" pos:end="107:31">!=</operator> <name pos:start="107:33" pos:end="107:46">AV_NOPTS_VALUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:55"><expr pos:start="111:5" pos:end="111:54"><name pos:start="111:5" pos:end="111:13">coded_pts</name> <operator pos:start="111:15" pos:end="111:15">=</operator> <name pos:start="111:17" pos:end="111:24"><name pos:start="111:17" pos:end="111:19">pkt</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:24">pts</name></name> <operator pos:start="111:26" pos:end="111:26">&amp;</operator> <operator pos:start="111:28" pos:end="111:28">(</operator><operator pos:start="111:29" pos:end="111:29">(</operator><literal type="number" pos:start="111:30" pos:end="111:30">1</literal><operator pos:start="111:31" pos:end="111:32">&lt;&lt;</operator><name pos:start="111:33" pos:end="111:50"><name pos:start="111:33" pos:end="111:35">nus</name><operator pos:start="111:36" pos:end="111:37">-&gt;</operator><name pos:start="111:38" pos:end="111:50">msb_pts_shift</name></name><operator pos:start="111:51" pos:end="111:51">)</operator><operator pos:start="111:52" pos:end="111:52">-</operator><literal type="number" pos:start="111:53" pos:end="111:53">1</literal><operator pos:start="111:54" pos:end="111:54">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="115:54"><if pos:start="113:5" pos:end="115:54">if<condition pos:start="113:7" pos:end="113:47">(<expr pos:start="113:8" pos:end="113:46"><call pos:start="113:8" pos:end="113:34"><name pos:start="113:8" pos:end="113:18">ff_lsb2full</name><argument_list pos:start="113:19" pos:end="113:34">(<argument pos:start="113:20" pos:end="113:22"><expr pos:start="113:20" pos:end="113:22"><name pos:start="113:20" pos:end="113:22">nus</name></expr></argument>, <argument pos:start="113:25" pos:end="113:33"><expr pos:start="113:25" pos:end="113:33"><name pos:start="113:25" pos:end="113:33">coded_pts</name></expr></argument>)</argument_list></call> <operator pos:start="113:36" pos:end="113:37">!=</operator> <name pos:start="113:39" pos:end="113:46"><name pos:start="113:39" pos:end="113:41">pkt</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:46">pts</name></name></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:54"><block_content pos:start="115:9" pos:end="115:54">

        <expr_stmt pos:start="115:9" pos:end="115:54"><expr pos:start="115:9" pos:end="115:53"><name pos:start="115:9" pos:end="115:17">coded_pts</name><operator pos:start="115:18" pos:end="115:18">=</operator> <name pos:start="115:20" pos:end="115:27"><name pos:start="115:20" pos:end="115:22">pkt</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:27">pts</name></name> <operator pos:start="115:29" pos:end="115:29">+</operator> <operator pos:start="115:31" pos:end="115:31">(</operator><literal type="number" pos:start="115:32" pos:end="115:32">1</literal><operator pos:start="115:33" pos:end="115:34">&lt;&lt;</operator><name pos:start="115:35" pos:end="115:52"><name pos:start="115:35" pos:end="115:37">nus</name><operator pos:start="115:38" pos:end="115:39">-&gt;</operator><name pos:start="115:40" pos:end="115:52">msb_pts_shift</name></name><operator pos:start="115:53" pos:end="115:53">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:52"><expr pos:start="119:5" pos:end="119:51"><name pos:start="119:5" pos:end="119:19">best_header_idx</name><operator pos:start="119:20" pos:end="119:20">=</operator> <call pos:start="119:22" pos:end="119:51"><name pos:start="119:22" pos:end="119:41">find_best_header_idx</name><argument_list pos:start="119:42" pos:end="119:51">(<argument pos:start="119:43" pos:end="119:45"><expr pos:start="119:43" pos:end="119:45"><name pos:start="119:43" pos:end="119:45">nut</name></expr></argument>, <argument pos:start="119:48" pos:end="119:50"><expr pos:start="119:48" pos:end="119:50"><name pos:start="119:48" pos:end="119:50">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:24"><expr pos:start="123:5" pos:end="123:23"><name pos:start="123:5" pos:end="123:15">best_length</name><operator pos:start="123:16" pos:end="123:16">=</operator><name pos:start="123:17" pos:end="123:23">INT_MAX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:19"><expr pos:start="125:5" pos:end="125:18"><name pos:start="125:5" pos:end="125:14">frame_code</name><operator pos:start="125:15" pos:end="125:15">=</operator> <operator pos:start="125:17" pos:end="125:17">-</operator><literal type="number" pos:start="125:18" pos:end="125:18">1</literal></expr>;</expr_stmt>

    <for pos:start="127:5" pos:end="233:5">for<control pos:start="127:8" pos:end="127:24">(<init pos:start="127:9" pos:end="127:12"><expr pos:start="127:9" pos:end="127:11"><name pos:start="127:9" pos:end="127:9">i</name><operator pos:start="127:10" pos:end="127:10">=</operator><literal type="number" pos:start="127:11" pos:end="127:11">0</literal></expr>;</init> <condition pos:start="127:14" pos:end="127:19"><expr pos:start="127:14" pos:end="127:18"><name pos:start="127:14" pos:end="127:14">i</name><operator pos:start="127:15" pos:end="127:15">&lt;</operator><literal type="number" pos:start="127:16" pos:end="127:18">256</literal></expr>;</condition> <incr pos:start="127:21" pos:end="127:23"><expr pos:start="127:21" pos:end="127:23"><name pos:start="127:21" pos:end="127:21">i</name><operator pos:start="127:22" pos:end="127:23">++</operator></expr></incr>)</control><block pos:start="127:25" pos:end="233:5">{<block_content pos:start="129:9" pos:end="231:9">

        <decl_stmt pos:start="129:9" pos:end="129:22"><decl pos:start="129:9" pos:end="129:21"><type pos:start="129:9" pos:end="129:11"><name pos:start="129:9" pos:end="129:11">int</name></type> <name pos:start="129:13" pos:end="129:18">length</name><init pos:start="129:19" pos:end="129:21">= <expr pos:start="129:21" pos:end="129:21"><literal type="number" pos:start="129:21" pos:end="129:21">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="131:9" pos:end="131:43"><decl pos:start="131:9" pos:end="131:42"><type pos:start="131:9" pos:end="131:19"><name pos:start="131:9" pos:end="131:17">FrameCode</name> <modifier pos:start="131:19" pos:end="131:19">*</modifier></type><name pos:start="131:20" pos:end="131:21">fc</name><init pos:start="131:22" pos:end="131:42">= <expr pos:start="131:24" pos:end="131:42"><operator pos:start="131:24" pos:end="131:24">&amp;</operator><name pos:start="131:25" pos:end="131:42"><name pos:start="131:25" pos:end="131:27">nut</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:39">frame_code</name><index pos:start="131:40" pos:end="131:42">[<expr pos:start="131:41" pos:end="131:41"><name pos:start="131:41" pos:end="131:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="133:9" pos:end="133:29"><decl pos:start="133:9" pos:end="133:28"><type pos:start="133:9" pos:end="133:11"><name pos:start="133:9" pos:end="133:11">int</name></type> <name pos:start="133:13" pos:end="133:17">flags</name><init pos:start="133:18" pos:end="133:28">= <expr pos:start="133:20" pos:end="133:28"><name pos:start="133:20" pos:end="133:28"><name pos:start="133:20" pos:end="133:21">fc</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:28">flags</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="137:9" pos:end="139:21"><if pos:start="137:9" pos:end="139:21">if<condition pos:start="137:11" pos:end="137:32">(<expr pos:start="137:12" pos:end="137:31"><name pos:start="137:12" pos:end="137:16">flags</name> <operator pos:start="137:18" pos:end="137:18">&amp;</operator> <name pos:start="137:20" pos:end="137:31">FLAG_INVALID</name></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:21"><block_content pos:start="139:13" pos:end="139:21">

            <continue pos:start="139:13" pos:end="139:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:58"><expr pos:start="141:9" pos:end="141:57"><name pos:start="141:9" pos:end="141:20">needed_flags</name><operator pos:start="141:21" pos:end="141:21">=</operator> <call pos:start="141:23" pos:end="141:57"><name pos:start="141:23" pos:end="141:38">get_needed_flags</name><argument_list pos:start="141:39" pos:end="141:57">(<argument pos:start="141:40" pos:end="141:42"><expr pos:start="141:40" pos:end="141:42"><name pos:start="141:40" pos:end="141:42">nut</name></expr></argument>, <argument pos:start="141:45" pos:end="141:47"><expr pos:start="141:45" pos:end="141:47"><name pos:start="141:45" pos:end="141:47">nus</name></expr></argument>, <argument pos:start="141:50" pos:end="141:51"><expr pos:start="141:50" pos:end="141:51"><name pos:start="141:50" pos:end="141:51">fc</name></expr></argument>, <argument pos:start="141:54" pos:end="141:56"><expr pos:start="141:54" pos:end="141:56"><name pos:start="141:54" pos:end="141:56">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="145:9" pos:end="151:9"><if pos:start="145:9" pos:end="151:9">if<condition pos:start="145:11" pos:end="145:30">(<expr pos:start="145:12" pos:end="145:29"><name pos:start="145:12" pos:end="145:16">flags</name> <operator pos:start="145:18" pos:end="145:18">&amp;</operator> <name pos:start="145:20" pos:end="145:29">FLAG_CODED</name></expr>)</condition><block pos:start="145:31" pos:end="151:9">{<block_content pos:start="147:13" pos:end="149:33">

            <expr_stmt pos:start="147:13" pos:end="147:21"><expr pos:start="147:13" pos:end="147:20"><name pos:start="147:13" pos:end="147:18">length</name><operator pos:start="147:19" pos:end="147:20">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:33"><expr pos:start="149:13" pos:end="149:32"><name pos:start="149:13" pos:end="149:17">flags</name> <operator pos:start="149:19" pos:end="149:19">=</operator> <name pos:start="149:21" pos:end="149:32">needed_flags</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="155:9" pos:end="157:21"><if pos:start="155:9" pos:end="157:21">if<condition pos:start="155:11" pos:end="155:50">(<expr pos:start="155:12" pos:end="155:49"><operator pos:start="155:12" pos:end="155:12">(</operator><name pos:start="155:13" pos:end="155:17">flags</name> <operator pos:start="155:19" pos:end="155:19">&amp;</operator> <name pos:start="155:21" pos:end="155:32">needed_flags</name><operator pos:start="155:33" pos:end="155:33">)</operator> <operator pos:start="155:35" pos:end="155:36">!=</operator> <name pos:start="155:38" pos:end="155:49">needed_flags</name></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:21"><block_content pos:start="157:13" pos:end="157:21">

            <continue pos:start="157:13" pos:end="157:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="161:9" pos:end="163:21"><if pos:start="161:9" pos:end="163:21">if<condition pos:start="161:11" pos:end="161:45">(<expr pos:start="161:12" pos:end="161:44"><operator pos:start="161:12" pos:end="161:12">(</operator><name pos:start="161:13" pos:end="161:17">flags</name> <operator pos:start="161:19" pos:end="161:19">^</operator> <name pos:start="161:21" pos:end="161:32">needed_flags</name><operator pos:start="161:33" pos:end="161:33">)</operator> <operator pos:start="161:35" pos:end="161:35">&amp;</operator> <name pos:start="161:37" pos:end="161:44">FLAG_KEY</name></expr>)</condition><block type="pseudo" pos:start="163:13" pos:end="163:21"><block_content pos:start="163:13" pos:end="163:21">

            <continue pos:start="163:13" pos:end="163:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="167:9" pos:end="169:56"><if pos:start="167:9" pos:end="169:56">if<condition pos:start="167:11" pos:end="167:34">(<expr pos:start="167:12" pos:end="167:33"><name pos:start="167:12" pos:end="167:16">flags</name> <operator pos:start="167:18" pos:end="167:18">&amp;</operator> <name pos:start="167:20" pos:end="167:33">FLAG_STREAM_ID</name></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:56"><block_content pos:start="169:13" pos:end="169:56">

            <expr_stmt pos:start="169:13" pos:end="169:56"><expr pos:start="169:13" pos:end="169:55"><name pos:start="169:13" pos:end="169:18">length</name><operator pos:start="169:19" pos:end="169:20">+=</operator> <call pos:start="169:22" pos:end="169:55"><name pos:start="169:22" pos:end="169:36">ff_get_v_length</name><argument_list pos:start="169:37" pos:end="169:55">(<argument pos:start="169:38" pos:end="169:54"><expr pos:start="169:38" pos:end="169:54"><name pos:start="169:38" pos:end="169:54"><name pos:start="169:38" pos:end="169:40">pkt</name><operator pos:start="169:41" pos:end="169:42">-&gt;</operator><name pos:start="169:43" pos:end="169:54">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="173:9" pos:end="175:21"><if pos:start="173:9" pos:end="175:21">if<condition pos:start="173:11" pos:end="173:52">(<expr pos:start="173:12" pos:end="173:51"><name pos:start="173:12" pos:end="173:20"><name pos:start="173:12" pos:end="173:14">pkt</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:20">size</name></name> <operator pos:start="173:22" pos:end="173:22">%</operator> <name pos:start="173:24" pos:end="173:35"><name pos:start="173:24" pos:end="173:25">fc</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:35">size_mul</name></name> <operator pos:start="173:37" pos:end="173:38">!=</operator> <name pos:start="173:40" pos:end="173:51"><name pos:start="173:40" pos:end="173:41">fc</name><operator pos:start="173:42" pos:end="173:43">-&gt;</operator><name pos:start="173:44" pos:end="173:51">size_lsb</name></name></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:21"><block_content pos:start="175:13" pos:end="175:21">

            <continue pos:start="175:13" pos:end="175:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="177:9" pos:end="179:64"><if pos:start="177:9" pos:end="179:64">if<condition pos:start="177:11" pos:end="177:33">(<expr pos:start="177:12" pos:end="177:32"><name pos:start="177:12" pos:end="177:16">flags</name> <operator pos:start="177:18" pos:end="177:18">&amp;</operator> <name pos:start="177:20" pos:end="177:32">FLAG_SIZE_MSB</name></expr>)</condition><block type="pseudo" pos:start="179:13" pos:end="179:64"><block_content pos:start="179:13" pos:end="179:64">

            <expr_stmt pos:start="179:13" pos:end="179:64"><expr pos:start="179:13" pos:end="179:63"><name pos:start="179:13" pos:end="179:18">length</name> <operator pos:start="179:20" pos:end="179:21">+=</operator> <call pos:start="179:23" pos:end="179:63"><name pos:start="179:23" pos:end="179:37">ff_get_v_length</name><argument_list pos:start="179:38" pos:end="179:63">(<argument pos:start="179:39" pos:end="179:62"><expr pos:start="179:39" pos:end="179:62"><name pos:start="179:39" pos:end="179:47"><name pos:start="179:39" pos:end="179:41">pkt</name><operator pos:start="179:42" pos:end="179:43">-&gt;</operator><name pos:start="179:44" pos:end="179:47">size</name></name> <operator pos:start="179:49" pos:end="179:49">/</operator> <name pos:start="179:51" pos:end="179:62"><name pos:start="179:51" pos:end="179:52">fc</name><operator pos:start="179:53" pos:end="179:54">-&gt;</operator><name pos:start="179:55" pos:end="179:62">size_mul</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="183:9" pos:end="185:22"><if pos:start="183:9" pos:end="185:22">if<condition pos:start="183:11" pos:end="183:33">(<expr pos:start="183:12" pos:end="183:32"><name pos:start="183:12" pos:end="183:16">flags</name> <operator pos:start="183:18" pos:end="183:18">&amp;</operator> <name pos:start="183:20" pos:end="183:32">FLAG_CHECKSUM</name></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:22"><block_content pos:start="185:13" pos:end="185:22">

            <expr_stmt pos:start="185:13" pos:end="185:22"><expr pos:start="185:13" pos:end="185:21"><name pos:start="185:13" pos:end="185:18">length</name><operator pos:start="185:19" pos:end="185:20">+=</operator><literal type="number" pos:start="185:21" pos:end="185:21">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="189:9" pos:end="191:49"><if pos:start="189:9" pos:end="191:49">if<condition pos:start="189:11" pos:end="189:34">(<expr pos:start="189:12" pos:end="189:33"><name pos:start="189:12" pos:end="189:16">flags</name> <operator pos:start="189:18" pos:end="189:18">&amp;</operator> <name pos:start="189:20" pos:end="189:33">FLAG_CODED_PTS</name></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:49"><block_content pos:start="191:13" pos:end="191:49">

            <expr_stmt pos:start="191:13" pos:end="191:49"><expr pos:start="191:13" pos:end="191:48"><name pos:start="191:13" pos:end="191:18">length</name> <operator pos:start="191:20" pos:end="191:21">+=</operator> <call pos:start="191:23" pos:end="191:48"><name pos:start="191:23" pos:end="191:37">ff_get_v_length</name><argument_list pos:start="191:38" pos:end="191:48">(<argument pos:start="191:39" pos:end="191:47"><expr pos:start="191:39" pos:end="191:47"><name pos:start="191:39" pos:end="191:47">coded_pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="195:9" pos:end="201:9"><if pos:start="195:9" pos:end="201:9">if<condition pos:start="195:11" pos:end="197:83">(   <expr pos:start="195:15" pos:end="197:82"><operator pos:start="195:15" pos:end="195:15">(</operator><name pos:start="195:16" pos:end="195:20">flags</name> <operator pos:start="195:22" pos:end="195:22">&amp;</operator> <name pos:start="195:24" pos:end="195:33">FLAG_CODED</name><operator pos:start="195:34" pos:end="195:34">)</operator>

           <operator pos:start="197:12" pos:end="197:13">&amp;&amp;</operator> <name pos:start="197:15" pos:end="197:46"><name pos:start="197:15" pos:end="197:17">nut</name><operator pos:start="197:18" pos:end="197:19">-&gt;</operator><name pos:start="197:20" pos:end="197:29">header_len</name><index pos:start="197:30" pos:end="197:46">[<expr pos:start="197:31" pos:end="197:45"><name pos:start="197:31" pos:end="197:45">best_header_idx</name></expr>]</index></name> <operator pos:start="197:48" pos:end="197:48">&gt;</operator> <name pos:start="197:50" pos:end="197:80"><name pos:start="197:50" pos:end="197:52">nut</name><operator pos:start="197:53" pos:end="197:54">-&gt;</operator><name pos:start="197:55" pos:end="197:64">header_len</name><index pos:start="197:65" pos:end="197:80">[<expr pos:start="197:66" pos:end="197:79"><name pos:start="197:66" pos:end="197:79"><name pos:start="197:66" pos:end="197:67">fc</name><operator pos:start="197:68" pos:end="197:69">-&gt;</operator><name pos:start="197:70" pos:end="197:79">header_idx</name></name></expr>]</index></name><operator pos:start="197:81" pos:end="197:81">+</operator><literal type="number" pos:start="197:82" pos:end="197:82">1</literal></expr>)</condition><block pos:start="197:84" pos:end="201:9">{<block_content pos:start="199:13" pos:end="199:37">

            <expr_stmt pos:start="199:13" pos:end="199:37"><expr pos:start="199:13" pos:end="199:36"><name pos:start="199:13" pos:end="199:17">flags</name> <operator pos:start="199:19" pos:end="199:20">|=</operator> <name pos:start="199:22" pos:end="199:36">FLAG_HEADER_IDX</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="205:9" pos:end="213:9"><if pos:start="205:9" pos:end="209:9">if<condition pos:start="205:11" pos:end="205:35">(<expr pos:start="205:12" pos:end="205:34"><name pos:start="205:12" pos:end="205:16">flags</name> <operator pos:start="205:18" pos:end="205:18">&amp;</operator> <name pos:start="205:20" pos:end="205:34">FLAG_HEADER_IDX</name></expr>)</condition><block pos:start="205:36" pos:end="209:9">{<block_content pos:start="207:13" pos:end="207:59">

            <expr_stmt pos:start="207:13" pos:end="207:59"><expr pos:start="207:13" pos:end="207:58"><name pos:start="207:13" pos:end="207:18">length</name> <operator pos:start="207:20" pos:end="207:21">+=</operator> <literal type="number" pos:start="207:23" pos:end="207:25">1</literal> <operator pos:start="207:25" pos:end="207:25">-</operator> <name pos:start="207:27" pos:end="207:58"><name pos:start="207:27" pos:end="207:29">nut</name><operator pos:start="207:30" pos:end="207:31">-&gt;</operator><name pos:start="207:32" pos:end="207:41">header_len</name><index pos:start="207:42" pos:end="207:58">[<expr pos:start="207:43" pos:end="207:57"><name pos:start="207:43" pos:end="207:57">best_header_idx</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="209:10" pos:end="213:9">else<block pos:start="209:14" pos:end="213:9">{<block_content pos:start="211:13" pos:end="211:54">

            <expr_stmt pos:start="211:13" pos:end="211:54"><expr pos:start="211:13" pos:end="211:53"><name pos:start="211:13" pos:end="211:18">length</name> <operator pos:start="211:20" pos:end="211:21">-=</operator> <name pos:start="211:23" pos:end="211:53"><name pos:start="211:23" pos:end="211:25">nut</name><operator pos:start="211:26" pos:end="211:27">-&gt;</operator><name pos:start="211:28" pos:end="211:37">header_len</name><index pos:start="211:38" pos:end="211:53">[<expr pos:start="211:39" pos:end="211:52"><name pos:start="211:39" pos:end="211:52"><name pos:start="211:39" pos:end="211:40">fc</name><operator pos:start="211:41" pos:end="211:42">-&gt;</operator><name pos:start="211:43" pos:end="211:52">header_idx</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="217:9" pos:end="217:18"><expr pos:start="217:9" pos:end="217:17"><name pos:start="217:9" pos:end="217:14">length</name><operator pos:start="217:15" pos:end="217:16">*=</operator><literal type="number" pos:start="217:17" pos:end="217:17">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:43"><expr pos:start="219:9" pos:end="219:42"><name pos:start="219:9" pos:end="219:14">length</name><operator pos:start="219:15" pos:end="219:16">+=</operator> <operator pos:start="219:18" pos:end="219:18">!</operator><operator pos:start="219:19" pos:end="219:19">(</operator><name pos:start="219:20" pos:end="219:24">flags</name> <operator pos:start="219:26" pos:end="219:26">&amp;</operator> <name pos:start="219:28" pos:end="219:41">FLAG_CODED_PTS</name><operator pos:start="219:42" pos:end="219:42">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:42"><expr pos:start="221:9" pos:end="221:41"><name pos:start="221:9" pos:end="221:14">length</name><operator pos:start="221:15" pos:end="221:16">+=</operator> <operator pos:start="221:18" pos:end="221:18">!</operator><operator pos:start="221:19" pos:end="221:19">(</operator><name pos:start="221:20" pos:end="221:24">flags</name> <operator pos:start="221:26" pos:end="221:26">&amp;</operator> <name pos:start="221:28" pos:end="221:40">FLAG_CHECKSUM</name><operator pos:start="221:41" pos:end="221:41">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="225:9" pos:end="231:9"><if pos:start="225:9" pos:end="231:9">if<condition pos:start="225:11" pos:end="225:32">(<expr pos:start="225:12" pos:end="225:31"><name pos:start="225:12" pos:end="225:17">length</name> <operator pos:start="225:19" pos:end="225:19">&lt;</operator> <name pos:start="225:21" pos:end="225:31">best_length</name></expr>)</condition><block pos:start="225:33" pos:end="231:9">{<block_content pos:start="227:13" pos:end="229:25">

            <expr_stmt pos:start="227:13" pos:end="227:32"><expr pos:start="227:13" pos:end="227:31"><name pos:start="227:13" pos:end="227:23">best_length</name><operator pos:start="227:24" pos:end="227:24">=</operator> <name pos:start="227:26" pos:end="227:31">length</name></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:25"><expr pos:start="229:13" pos:end="229:24"><name pos:start="229:13" pos:end="229:22">frame_code</name><operator pos:start="229:23" pos:end="229:23">=</operator><name pos:start="229:24" pos:end="229:24">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="235:5" pos:end="235:33"><expr pos:start="235:5" pos:end="235:32"><call pos:start="235:5" pos:end="235:32"><name pos:start="235:5" pos:end="235:14">av_assert0</name><argument_list pos:start="235:15" pos:end="235:32">(<argument pos:start="235:16" pos:end="235:31"><expr pos:start="235:16" pos:end="235:31"><name pos:start="235:16" pos:end="235:25">frame_code</name> <operator pos:start="235:27" pos:end="235:28">!=</operator> <operator pos:start="235:30" pos:end="235:30">-</operator><literal type="number" pos:start="235:31" pos:end="235:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:37"><expr pos:start="237:5" pos:end="237:36"><name pos:start="237:5" pos:end="237:6">fc</name><operator pos:start="237:7" pos:end="237:7">=</operator> <operator pos:start="237:9" pos:end="237:9">&amp;</operator><name pos:start="237:10" pos:end="237:36"><name pos:start="237:10" pos:end="237:12">nut</name><operator pos:start="237:13" pos:end="237:14">-&gt;</operator><name pos:start="237:15" pos:end="237:24">frame_code</name><index pos:start="237:25" pos:end="237:36">[<expr pos:start="237:26" pos:end="237:35"><name pos:start="237:26" pos:end="237:35">frame_code</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:21"><expr pos:start="239:5" pos:end="239:20"><name pos:start="239:5" pos:end="239:9">flags</name><operator pos:start="239:10" pos:end="239:10">=</operator> <name pos:start="239:12" pos:end="239:20"><name pos:start="239:12" pos:end="239:13">fc</name><operator pos:start="239:14" pos:end="239:15">-&gt;</operator><name pos:start="239:16" pos:end="239:20">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:54"><expr pos:start="241:5" pos:end="241:53"><name pos:start="241:5" pos:end="241:16">needed_flags</name><operator pos:start="241:17" pos:end="241:17">=</operator> <call pos:start="241:19" pos:end="241:53"><name pos:start="241:19" pos:end="241:34">get_needed_flags</name><argument_list pos:start="241:35" pos:end="241:53">(<argument pos:start="241:36" pos:end="241:38"><expr pos:start="241:36" pos:end="241:38"><name pos:start="241:36" pos:end="241:38">nut</name></expr></argument>, <argument pos:start="241:41" pos:end="241:43"><expr pos:start="241:41" pos:end="241:43"><name pos:start="241:41" pos:end="241:43">nus</name></expr></argument>, <argument pos:start="241:46" pos:end="241:47"><expr pos:start="241:46" pos:end="241:47"><name pos:start="241:46" pos:end="241:47">fc</name></expr></argument>, <argument pos:start="241:50" pos:end="241:52"><expr pos:start="241:50" pos:end="241:52"><name pos:start="241:50" pos:end="241:52">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:31"><expr pos:start="243:5" pos:end="243:30"><name pos:start="243:5" pos:end="243:14">header_idx</name><operator pos:start="243:15" pos:end="243:15">=</operator> <name pos:start="243:17" pos:end="243:30"><name pos:start="243:17" pos:end="243:18">fc</name><operator pos:start="243:19" pos:end="243:20">-&gt;</operator><name pos:start="243:21" pos:end="243:30">header_idx</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="247:5" pos:end="247:53"><expr pos:start="247:5" pos:end="247:52"><call pos:start="247:5" pos:end="247:52"><name pos:start="247:5" pos:end="247:22">ffio_init_checksum</name><argument_list pos:start="247:23" pos:end="247:52">(<argument pos:start="247:24" pos:end="247:25"><expr pos:start="247:24" pos:end="247:25"><name pos:start="247:24" pos:end="247:25">bc</name></expr></argument>, <argument pos:start="247:28" pos:end="247:48"><expr pos:start="247:28" pos:end="247:48"><name pos:start="247:28" pos:end="247:48">ff_crc04C11DB7_update</name></expr></argument>, <argument pos:start="247:51" pos:end="247:51"><expr pos:start="247:51" pos:end="247:51"><literal type="number" pos:start="247:51" pos:end="247:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:28"><expr pos:start="249:5" pos:end="249:27"><call pos:start="249:5" pos:end="249:27"><name pos:start="249:5" pos:end="249:11">avio_w8</name><argument_list pos:start="249:12" pos:end="249:27">(<argument pos:start="249:13" pos:end="249:14"><expr pos:start="249:13" pos:end="249:14"><name pos:start="249:13" pos:end="249:14">bc</name></expr></argument>, <argument pos:start="249:17" pos:end="249:26"><expr pos:start="249:17" pos:end="249:26"><name pos:start="249:17" pos:end="249:26">frame_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="251:5" pos:end="257:5"><if pos:start="251:5" pos:end="257:5">if<condition pos:start="251:7" pos:end="251:26">(<expr pos:start="251:8" pos:end="251:25"><name pos:start="251:8" pos:end="251:12">flags</name> <operator pos:start="251:14" pos:end="251:14">&amp;</operator> <name pos:start="251:16" pos:end="251:25">FLAG_CODED</name></expr>)</condition><block pos:start="251:27" pos:end="257:5">{<block_content pos:start="253:9" pos:end="255:29">

        <expr_stmt pos:start="253:9" pos:end="253:59"><expr pos:start="253:9" pos:end="253:58"><call pos:start="253:9" pos:end="253:58"><name pos:start="253:9" pos:end="253:16">ff_put_v</name><argument_list pos:start="253:17" pos:end="253:58">(<argument pos:start="253:18" pos:end="253:19"><expr pos:start="253:18" pos:end="253:19"><name pos:start="253:18" pos:end="253:19">bc</name></expr></argument>, <argument pos:start="253:22" pos:end="253:57"><expr pos:start="253:22" pos:end="253:57"><operator pos:start="253:22" pos:end="253:22">(</operator><name pos:start="253:23" pos:end="253:27">flags</name><operator pos:start="253:28" pos:end="253:28">^</operator><name pos:start="253:29" pos:end="253:40">needed_flags</name><operator pos:start="253:41" pos:end="253:41">)</operator> <operator pos:start="253:43" pos:end="253:43">&amp;</operator> <operator pos:start="253:45" pos:end="253:45">~</operator><operator pos:start="253:46" pos:end="253:46">(</operator><name pos:start="253:47" pos:end="253:56">FLAG_CODED</name><operator pos:start="253:57" pos:end="253:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:29"><expr pos:start="255:9" pos:end="255:28"><name pos:start="255:9" pos:end="255:13">flags</name> <operator pos:start="255:15" pos:end="255:15">=</operator> <name pos:start="255:17" pos:end="255:28">needed_flags</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="259:5" pos:end="259:64"><if pos:start="259:5" pos:end="259:64">if<condition pos:start="259:7" pos:end="259:30">(<expr pos:start="259:8" pos:end="259:29"><name pos:start="259:8" pos:end="259:12">flags</name> <operator pos:start="259:14" pos:end="259:14">&amp;</operator> <name pos:start="259:16" pos:end="259:29">FLAG_STREAM_ID</name></expr>)</condition><block type="pseudo" pos:start="259:33" pos:end="259:64"><block_content pos:start="259:33" pos:end="259:64">  <expr_stmt pos:start="259:33" pos:end="259:64"><expr pos:start="259:33" pos:end="259:63"><call pos:start="259:33" pos:end="259:63"><name pos:start="259:33" pos:end="259:40">ff_put_v</name><argument_list pos:start="259:41" pos:end="259:63">(<argument pos:start="259:42" pos:end="259:43"><expr pos:start="259:42" pos:end="259:43"><name pos:start="259:42" pos:end="259:43">bc</name></expr></argument>, <argument pos:start="259:46" pos:end="259:62"><expr pos:start="259:46" pos:end="259:62"><name pos:start="259:46" pos:end="259:62"><name pos:start="259:46" pos:end="259:48">pkt</name><operator pos:start="259:49" pos:end="259:50">-&gt;</operator><name pos:start="259:51" pos:end="259:62">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="261:5" pos:end="261:56"><if pos:start="261:5" pos:end="261:56">if<condition pos:start="261:7" pos:end="261:30">(<expr pos:start="261:8" pos:end="261:29"><name pos:start="261:8" pos:end="261:12">flags</name> <operator pos:start="261:14" pos:end="261:14">&amp;</operator> <name pos:start="261:16" pos:end="261:29">FLAG_CODED_PTS</name></expr>)</condition><block type="pseudo" pos:start="261:33" pos:end="261:56"><block_content pos:start="261:33" pos:end="261:56">  <expr_stmt pos:start="261:33" pos:end="261:56"><expr pos:start="261:33" pos:end="261:55"><call pos:start="261:33" pos:end="261:55"><name pos:start="261:33" pos:end="261:40">ff_put_v</name><argument_list pos:start="261:41" pos:end="261:55">(<argument pos:start="261:42" pos:end="261:43"><expr pos:start="261:42" pos:end="261:43"><name pos:start="261:42" pos:end="261:43">bc</name></expr></argument>, <argument pos:start="261:46" pos:end="261:54"><expr pos:start="261:46" pos:end="261:54"><name pos:start="261:46" pos:end="261:54">coded_pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="263:5" pos:end="263:71"><if pos:start="263:5" pos:end="263:71">if<condition pos:start="263:7" pos:end="263:29">(<expr pos:start="263:8" pos:end="263:28"><name pos:start="263:8" pos:end="263:12">flags</name> <operator pos:start="263:14" pos:end="263:14">&amp;</operator> <name pos:start="263:16" pos:end="263:28">FLAG_SIZE_MSB</name></expr>)</condition><block type="pseudo" pos:start="263:33" pos:end="263:71"><block_content pos:start="263:33" pos:end="263:71">   <expr_stmt pos:start="263:33" pos:end="263:71"><expr pos:start="263:33" pos:end="263:70"><call pos:start="263:33" pos:end="263:70"><name pos:start="263:33" pos:end="263:40">ff_put_v</name><argument_list pos:start="263:41" pos:end="263:70">(<argument pos:start="263:42" pos:end="263:43"><expr pos:start="263:42" pos:end="263:43"><name pos:start="263:42" pos:end="263:43">bc</name></expr></argument>, <argument pos:start="263:46" pos:end="263:69"><expr pos:start="263:46" pos:end="263:69"><name pos:start="263:46" pos:end="263:54"><name pos:start="263:46" pos:end="263:48">pkt</name><operator pos:start="263:49" pos:end="263:50">-&gt;</operator><name pos:start="263:51" pos:end="263:54">size</name></name> <operator pos:start="263:56" pos:end="263:56">/</operator> <name pos:start="263:58" pos:end="263:69"><name pos:start="263:58" pos:end="263:59">fc</name><operator pos:start="263:60" pos:end="263:61">-&gt;</operator><name pos:start="263:62" pos:end="263:69">size_mul</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="265:5" pos:end="265:74"><if pos:start="265:5" pos:end="265:74">if<condition pos:start="265:7" pos:end="265:31">(<expr pos:start="265:8" pos:end="265:30"><name pos:start="265:8" pos:end="265:12">flags</name> <operator pos:start="265:14" pos:end="265:14">&amp;</operator> <name pos:start="265:16" pos:end="265:30">FLAG_HEADER_IDX</name></expr>)</condition><block type="pseudo" pos:start="265:33" pos:end="265:74"><block_content pos:start="265:33" pos:end="265:74"> <expr_stmt pos:start="265:33" pos:end="265:74"><expr pos:start="265:33" pos:end="265:73"><call pos:start="265:33" pos:end="265:73"><name pos:start="265:33" pos:end="265:40">ff_put_v</name><argument_list pos:start="265:41" pos:end="265:73">(<argument pos:start="265:42" pos:end="265:43"><expr pos:start="265:42" pos:end="265:43"><name pos:start="265:42" pos:end="265:43">bc</name></expr></argument>, <argument pos:start="265:46" pos:end="265:72"><expr pos:start="265:46" pos:end="265:72"><name pos:start="265:46" pos:end="265:55">header_idx</name><operator pos:start="265:56" pos:end="265:56">=</operator> <name pos:start="265:58" pos:end="265:72">best_header_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="269:5" pos:end="271:54"><if pos:start="269:5" pos:end="269:69">if<condition pos:start="269:7" pos:end="269:29">(<expr pos:start="269:8" pos:end="269:28"><name pos:start="269:8" pos:end="269:12">flags</name> <operator pos:start="269:14" pos:end="269:14">&amp;</operator> <name pos:start="269:16" pos:end="269:28">FLAG_CHECKSUM</name></expr>)</condition><block type="pseudo" pos:start="269:33" pos:end="269:69"><block_content pos:start="269:33" pos:end="269:69">   <expr_stmt pos:start="269:33" pos:end="269:69"><expr pos:start="269:33" pos:end="269:68"><call pos:start="269:33" pos:end="269:68"><name pos:start="269:33" pos:end="269:41">avio_wl32</name><argument_list pos:start="269:42" pos:end="269:68">(<argument pos:start="269:43" pos:end="269:44"><expr pos:start="269:43" pos:end="269:44"><name pos:start="269:43" pos:end="269:44">bc</name></expr></argument>, <argument pos:start="269:47" pos:end="269:67"><expr pos:start="269:47" pos:end="269:67"><call pos:start="269:47" pos:end="269:67"><name pos:start="269:47" pos:end="269:63">ffio_get_checksum</name><argument_list pos:start="269:64" pos:end="269:67">(<argument pos:start="269:65" pos:end="269:66"><expr pos:start="269:65" pos:end="269:66"><name pos:start="269:65" pos:end="269:66">bc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="271:5" pos:end="271:54">else<block type="pseudo" pos:start="271:33" pos:end="271:54"><block_content pos:start="271:33" pos:end="271:54">                        <expr_stmt pos:start="271:33" pos:end="271:54"><expr pos:start="271:33" pos:end="271:53"><call pos:start="271:33" pos:end="271:53"><name pos:start="271:33" pos:end="271:49">ffio_get_checksum</name><argument_list pos:start="271:50" pos:end="271:53">(<argument pos:start="271:51" pos:end="271:52"><expr pos:start="271:51" pos:end="271:52"><name pos:start="271:51" pos:end="271:52">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="275:5" pos:end="275:101"><expr pos:start="275:5" pos:end="275:100"><call pos:start="275:5" pos:end="275:100"><name pos:start="275:5" pos:end="275:14">avio_write</name><argument_list pos:start="275:15" pos:end="275:100">(<argument pos:start="275:16" pos:end="275:17"><expr pos:start="275:16" pos:end="275:17"><name pos:start="275:16" pos:end="275:17">bc</name></expr></argument>, <argument pos:start="275:20" pos:end="275:58"><expr pos:start="275:20" pos:end="275:58"><name pos:start="275:20" pos:end="275:28"><name pos:start="275:20" pos:end="275:22">pkt</name><operator pos:start="275:23" pos:end="275:24">-&gt;</operator><name pos:start="275:25" pos:end="275:28">data</name></name> <operator pos:start="275:30" pos:end="275:30">+</operator> <name pos:start="275:32" pos:end="275:58"><name pos:start="275:32" pos:end="275:34">nut</name><operator pos:start="275:35" pos:end="275:36">-&gt;</operator><name pos:start="275:37" pos:end="275:46">header_len</name><index pos:start="275:47" pos:end="275:58">[<expr pos:start="275:48" pos:end="275:57"><name pos:start="275:48" pos:end="275:57">header_idx</name></expr>]</index></name></expr></argument>, <argument pos:start="275:61" pos:end="275:99"><expr pos:start="275:61" pos:end="275:99"><name pos:start="275:61" pos:end="275:69"><name pos:start="275:61" pos:end="275:63">pkt</name><operator pos:start="275:64" pos:end="275:65">-&gt;</operator><name pos:start="275:66" pos:end="275:69">size</name></name> <operator pos:start="275:71" pos:end="275:71">-</operator> <name pos:start="275:73" pos:end="275:99"><name pos:start="275:73" pos:end="275:75">nut</name><operator pos:start="275:76" pos:end="275:77">-&gt;</operator><name pos:start="275:78" pos:end="275:87">header_len</name><index pos:start="275:88" pos:end="275:99">[<expr pos:start="275:89" pos:end="275:98"><name pos:start="275:89" pos:end="275:98">header_idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="277:5" pos:end="277:27"><expr pos:start="277:5" pos:end="277:26"><name pos:start="277:5" pos:end="277:19"><name pos:start="277:5" pos:end="277:7">nus</name><operator pos:start="277:8" pos:end="277:9">-&gt;</operator><name pos:start="277:10" pos:end="277:19">last_flags</name></name><operator pos:start="277:20" pos:end="277:20">=</operator> <name pos:start="277:22" pos:end="277:26">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="279:5" pos:end="279:28"><expr pos:start="279:5" pos:end="279:27"><name pos:start="279:5" pos:end="279:17"><name pos:start="279:5" pos:end="279:7">nus</name><operator pos:start="279:8" pos:end="279:9">-&gt;</operator><name pos:start="279:10" pos:end="279:17">last_pts</name></name><operator pos:start="279:18" pos:end="279:18">=</operator> <name pos:start="279:20" pos:end="279:27"><name pos:start="279:20" pos:end="279:22">pkt</name><operator pos:start="279:23" pos:end="279:24">-&gt;</operator><name pos:start="279:25" pos:end="279:27">pts</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="283:5" pos:end="283:40">//FIXME just store one per syncpoint</comment>

    <if_stmt pos:start="285:5" pos:end="299:30"><if pos:start="285:5" pos:end="299:30">if<condition pos:start="285:7" pos:end="285:24">(<expr pos:start="285:8" pos:end="285:23"><name pos:start="285:8" pos:end="285:12">flags</name> <operator pos:start="285:14" pos:end="285:14">&amp;</operator> <name pos:start="285:16" pos:end="285:23">FLAG_KEY</name></expr>)</condition><block type="pseudo" pos:start="287:9" pos:end="299:30"><block_content pos:start="287:9" pos:end="299:30">

        <expr_stmt pos:start="287:9" pos:end="299:30"><expr pos:start="287:9" pos:end="299:29"><call pos:start="287:9" pos:end="299:29"><name pos:start="287:9" pos:end="287:26">av_add_index_entry</name><argument_list pos:start="287:27" pos:end="299:29">(

            <argument pos:start="289:13" pos:end="289:41"><expr pos:start="289:13" pos:end="289:41"><name pos:start="289:13" pos:end="289:41"><name pos:start="289:13" pos:end="289:13">s</name><operator pos:start="289:14" pos:end="289:15">-&gt;</operator><name pos:start="289:16" pos:end="289:22">streams</name><index pos:start="289:23" pos:end="289:41">[<expr pos:start="289:24" pos:end="289:40"><name pos:start="289:24" pos:end="289:40"><name pos:start="289:24" pos:end="289:26">pkt</name><operator pos:start="289:27" pos:end="289:28">-&gt;</operator><name pos:start="289:29" pos:end="289:40">stream_index</name></name></expr>]</index></name></expr></argument>,

            <argument pos:start="291:13" pos:end="291:35"><expr pos:start="291:13" pos:end="291:35"><name pos:start="291:13" pos:end="291:35"><name pos:start="291:13" pos:end="291:15">nut</name><operator pos:start="291:16" pos:end="291:17">-&gt;</operator><name pos:start="291:18" pos:end="291:35">last_syncpoint_pos</name></name></expr></argument>,

            <argument pos:start="293:13" pos:end="293:20"><expr pos:start="293:13" pos:end="293:20"><name pos:start="293:13" pos:end="293:20"><name pos:start="293:13" pos:end="293:15">pkt</name><operator pos:start="293:16" pos:end="293:17">-&gt;</operator><name pos:start="293:18" pos:end="293:20">pts</name></name></expr></argument>,

            <argument pos:start="295:13" pos:end="295:13"><expr pos:start="295:13" pos:end="295:13"><literal type="number" pos:start="295:13" pos:end="295:13">0</literal></expr></argument>,

            <argument pos:start="297:13" pos:end="297:13"><expr pos:start="297:13" pos:end="297:13"><literal type="number" pos:start="297:13" pos:end="297:13">0</literal></expr></argument>,

            <argument pos:start="299:13" pos:end="299:28"><expr pos:start="299:13" pos:end="299:28"><name pos:start="299:13" pos:end="299:28">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="303:5" pos:end="303:13">return <expr pos:start="303:12" pos:end="303:12"><literal type="number" pos:start="303:12" pos:end="303:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
