<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19329.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">blk_insert_bs</name><parameter_list pos:start="1:19" pos:end="1:59">(<parameter pos:start="1:20" pos:end="1:36"><decl pos:start="1:20" pos:end="1:36"><type pos:start="1:20" pos:end="1:36"><name pos:start="1:20" pos:end="1:31">BlockBackend</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">blk</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:58"><decl pos:start="1:39" pos:end="1:58"><type pos:start="1:39" pos:end="1:58"><name pos:start="1:39" pos:end="1:54">BlockDriverState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:5">

    <expr_stmt pos:start="5:5" pos:end="5:17"><expr pos:start="5:5" pos:end="5:16"><call pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">bdrv_ref</name><argument_list pos:start="5:13" pos:end="5:16">(<argument pos:start="5:14" pos:end="5:15"><expr pos:start="5:14" pos:end="5:15"><name pos:start="5:14" pos:end="5:15">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:69"><expr pos:start="7:5" pos:end="7:68"><name pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:7">blk</name><operator pos:start="7:8" pos:end="7:9">-&gt;</operator><name pos:start="7:10" pos:end="7:13">root</name></name> <operator pos:start="7:15" pos:end="7:15">=</operator> <call pos:start="7:17" pos:end="7:68"><name pos:start="7:17" pos:end="7:38">bdrv_root_attach_child</name><argument_list pos:start="7:39" pos:end="7:68">(<argument pos:start="7:40" pos:end="7:41"><expr pos:start="7:40" pos:end="7:41"><name pos:start="7:40" pos:end="7:41">bs</name></expr></argument>, <argument pos:start="7:44" pos:end="7:49"><expr pos:start="7:44" pos:end="7:49"><literal type="string" pos:start="7:44" pos:end="7:49">"root"</literal></expr></argument>, <argument pos:start="7:52" pos:end="7:62"><expr pos:start="7:52" pos:end="7:62"><operator pos:start="7:52" pos:end="7:52">&amp;</operator><name pos:start="7:53" pos:end="7:62">child_root</name></expr></argument>, <argument pos:start="7:65" pos:end="7:67"><expr pos:start="7:65" pos:end="7:67"><name pos:start="7:65" pos:end="7:67">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:57"><expr pos:start="11:5" pos:end="11:56"><call pos:start="11:5" pos:end="11:56"><name pos:start="11:5" pos:end="11:24">notifier_list_notify</name><argument_list pos:start="11:25" pos:end="11:56">(<argument pos:start="11:26" pos:end="11:50"><expr pos:start="11:26" pos:end="11:50"><operator pos:start="11:26" pos:end="11:26">&amp;</operator><name pos:start="11:27" pos:end="11:50"><name pos:start="11:27" pos:end="11:29">blk</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:50">insert_bs_notifiers</name></name></expr></argument>, <argument pos:start="11:53" pos:end="11:55"><expr pos:start="11:53" pos:end="11:55"><name pos:start="11:53" pos:end="11:55">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:35">(<expr pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:11">blk</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:19">public</name><operator pos:start="13:20" pos:end="13:20">.</operator><name pos:start="13:21" pos:end="13:34">throttle_state</name></name></expr>)</condition> <block pos:start="13:37" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:68">

        <expr_stmt pos:start="15:9" pos:end="17:68"><expr pos:start="15:9" pos:end="17:67"><call pos:start="15:9" pos:end="17:67"><name pos:start="15:9" pos:end="15:42">throttle_timers_attach_aio_context</name><argument_list pos:start="15:43" pos:end="17:67">(

            <argument pos:start="17:13" pos:end="17:40"><expr pos:start="17:13" pos:end="17:40"><operator pos:start="17:13" pos:end="17:13">&amp;</operator><name pos:start="17:14" pos:end="17:40"><name pos:start="17:14" pos:end="17:16">blk</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:24">public</name><operator pos:start="17:25" pos:end="17:25">.</operator><name pos:start="17:26" pos:end="17:40">throttle_timers</name></name></expr></argument>, <argument pos:start="17:43" pos:end="17:66"><expr pos:start="17:43" pos:end="17:66"><call pos:start="17:43" pos:end="17:66"><name pos:start="17:43" pos:end="17:62">bdrv_get_aio_context</name><argument_list pos:start="17:63" pos:end="17:66">(<argument pos:start="17:64" pos:end="17:65"><expr pos:start="17:64" pos:end="17:65"><name pos:start="17:64" pos:end="17:65">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
