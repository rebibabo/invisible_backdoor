<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6592.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">virtio_blk_load_device</name><parameter_list pos:start="1:34" pos:end="3:49">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:46">VirtIODevice</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">vdev</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:65"><decl pos:start="1:55" pos:end="1:65"><type pos:start="1:55" pos:end="1:65"><name pos:start="1:55" pos:end="1:62">QEMUFile</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:65">f</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:48"><decl pos:start="3:35" pos:end="3:48"><type pos:start="3:35" pos:end="3:48"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:48">version_id</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:13">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">VirtIOBlock</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:37">= <expr pos:start="7:22" pos:end="7:37"><call pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:31">VIRTIO_BLK</name><argument_list pos:start="7:32" pos:end="7:37">(<argument pos:start="7:33" pos:end="7:36"><expr pos:start="7:33" pos:end="7:36"><name pos:start="7:33" pos:end="7:36">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <while pos:start="11:5" pos:end="49:5">while <condition pos:start="11:11" pos:end="11:29">(<expr pos:start="11:12" pos:end="11:28"><call pos:start="11:12" pos:end="11:28"><name pos:start="11:12" pos:end="11:25">qemu_get_sbyte</name><argument_list pos:start="11:26" pos:end="11:28">(<argument pos:start="11:27" pos:end="11:27"><expr pos:start="11:27" pos:end="11:27"><name pos:start="11:27" pos:end="11:27">f</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:31" pos:end="49:5">{<block_content pos:start="13:9" pos:end="47:20">

        <decl_stmt pos:start="13:9" pos:end="13:43"><decl pos:start="13:9" pos:end="13:42"><type pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:16">unsigned</name></type> <name pos:start="13:18" pos:end="13:21">nvqs</name> <init pos:start="13:23" pos:end="13:42">= <expr pos:start="13:25" pos:end="13:42"><name pos:start="13:25" pos:end="13:42"><name pos:start="13:25" pos:end="13:25">s</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:31">conf</name><operator pos:start="13:32" pos:end="13:32">.</operator><name pos:start="13:33" pos:end="13:42">num_queues</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:28"><decl pos:start="15:9" pos:end="15:27"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">unsigned</name></type> <name pos:start="15:18" pos:end="15:23">vq_idx</name> <init pos:start="15:25" pos:end="15:27">= <expr pos:start="15:27" pos:end="15:27"><literal type="number" pos:start="15:27" pos:end="15:27">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:28"><decl pos:start="17:9" pos:end="17:27"><type pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:22">VirtIOBlockReq</name> <modifier pos:start="17:24" pos:end="17:24">*</modifier></type><name pos:start="17:25" pos:end="17:27">req</name></decl>;</decl_stmt>



        <if_stmt pos:start="21:9" pos:end="37:9"><if pos:start="21:9" pos:end="37:9">if <condition pos:start="21:12" pos:end="21:21">(<expr pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:16">nvqs</name> <operator pos:start="21:18" pos:end="21:18">&gt;</operator> <literal type="number" pos:start="21:20" pos:end="21:20">1</literal></expr>)</condition> <block pos:start="21:23" pos:end="37:9">{<block_content pos:start="23:13" pos:end="35:13">

            <expr_stmt pos:start="23:13" pos:end="23:38"><expr pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:18">vq_idx</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <call pos:start="23:22" pos:end="23:37"><name pos:start="23:22" pos:end="23:34">qemu_get_be32</name><argument_list pos:start="23:35" pos:end="23:37">(<argument pos:start="23:36" pos:end="23:36"><expr pos:start="23:36" pos:end="23:36"><name pos:start="23:36" pos:end="23:36">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="27:13" pos:end="35:13"><if pos:start="27:13" pos:end="35:13">if <condition pos:start="27:16" pos:end="27:31">(<expr pos:start="27:17" pos:end="27:30"><name pos:start="27:17" pos:end="27:22">vq_idx</name> <operator pos:start="27:24" pos:end="27:25">&gt;=</operator> <name pos:start="27:27" pos:end="27:30">nvqs</name></expr>)</condition> <block pos:start="27:33" pos:end="35:13">{<block_content pos:start="29:17" pos:end="33:31">

                <expr_stmt pos:start="29:17" pos:end="31:37"><expr pos:start="29:17" pos:end="31:36"><call pos:start="29:17" pos:end="31:36"><name pos:start="29:17" pos:end="29:28">error_report</name><argument_list pos:start="29:29" pos:end="31:36">(<argument pos:start="29:30" pos:end="29:75"><expr pos:start="29:30" pos:end="29:75"><literal type="string" pos:start="29:30" pos:end="29:75">"Invalid virtqueue index in request list: %#x"</literal></expr></argument>,

                             <argument pos:start="31:30" pos:end="31:35"><expr pos:start="31:30" pos:end="31:35"><name pos:start="31:30" pos:end="31:35">vq_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="33:17" pos:end="33:31">return <expr pos:start="33:24" pos:end="33:30"><operator pos:start="33:24" pos:end="33:24">-</operator><name pos:start="33:25" pos:end="33:30">EINVAL</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:68"><expr pos:start="41:9" pos:end="41:67"><name pos:start="41:9" pos:end="41:11">req</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:67"><name pos:start="41:15" pos:end="41:40">qemu_get_virtqueue_element</name><argument_list pos:start="41:41" pos:end="41:67">(<argument pos:start="41:42" pos:end="41:42"><expr pos:start="41:42" pos:end="41:42"><name pos:start="41:42" pos:end="41:42">f</name></expr></argument>, <argument pos:start="41:45" pos:end="41:66"><expr pos:start="41:45" pos:end="41:66"><sizeof pos:start="41:45" pos:end="41:66">sizeof<argument_list pos:start="41:51" pos:end="41:66">(<argument pos:start="41:52" pos:end="41:65"><expr pos:start="41:52" pos:end="41:65"><name pos:start="41:52" pos:end="41:65">VirtIOBlockReq</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:72"><expr pos:start="43:9" pos:end="43:71"><call pos:start="43:9" pos:end="43:71"><name pos:start="43:9" pos:end="43:31">virtio_blk_init_request</name><argument_list pos:start="43:32" pos:end="43:71">(<argument pos:start="43:33" pos:end="43:33"><expr pos:start="43:33" pos:end="43:33"><name pos:start="43:33" pos:end="43:33">s</name></expr></argument>, <argument pos:start="43:36" pos:end="43:65"><expr pos:start="43:36" pos:end="43:65"><call pos:start="43:36" pos:end="43:65"><name pos:start="43:36" pos:end="43:51">virtio_get_queue</name><argument_list pos:start="43:52" pos:end="43:65">(<argument pos:start="43:53" pos:end="43:56"><expr pos:start="43:53" pos:end="43:56"><name pos:start="43:53" pos:end="43:56">vdev</name></expr></argument>, <argument pos:start="43:59" pos:end="43:64"><expr pos:start="43:59" pos:end="43:64"><name pos:start="43:59" pos:end="43:64">vq_idx</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:68" pos:end="43:70"><expr pos:start="43:68" pos:end="43:70"><name pos:start="43:68" pos:end="43:70">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:26"><expr pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:11">req</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:17">next</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:25"><name pos:start="45:21" pos:end="45:21">s</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:25">rq</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:20"><expr pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:13"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:13">rq</name></name> <operator pos:start="47:15" pos:end="47:15">=</operator> <name pos:start="47:17" pos:end="47:19">req</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
