<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16534.c" pos:tabs="8"><function pos:start="1:1" pos:end="375:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:29">get_segment</name><parameter_list pos:start="1:30" pos:end="3:67">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:38">CPUState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">env</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:59"><decl pos:start="1:46" pos:end="1:59"><type pos:start="1:46" pos:end="1:59"><name pos:start="1:46" pos:end="1:54">mmu_ctx_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">ctx</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:48"><decl pos:start="3:31" pos:end="3:48"><type pos:start="3:31" pos:end="3:48"><name pos:start="3:31" pos:end="3:42">target_ulong</name></type> <name pos:start="3:44" pos:end="3:48">eaddr</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:56"><decl pos:start="3:51" pos:end="3:56"><type pos:start="3:51" pos:end="3:56"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:56">rw</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:66"><decl pos:start="3:59" pos:end="3:66"><type pos:start="3:59" pos:end="3:66"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:66">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="375:1">{<block_content pos:start="7:5" pos:end="373:15">

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">target_phys_addr_t</name></type> <name pos:start="7:24" pos:end="7:26">sdr</name></decl>, <decl pos:start="7:29" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:22"/><name pos:start="7:29" pos:end="7:32">hash</name></decl>, <decl pos:start="7:35" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:22"/><name pos:start="7:35" pos:end="7:38">mask</name></decl>, <decl pos:start="7:41" pos:end="7:48"><type ref="prev" pos:start="7:5" pos:end="7:22"/><name pos:start="7:41" pos:end="7:48">sdr_mask</name></decl>, <decl pos:start="7:51" pos:end="7:59"><type ref="prev" pos:start="7:5" pos:end="7:22"/><name pos:start="7:51" pos:end="7:59">htab_mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:19">sr</name></decl>, <decl pos:start="9:22" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:22" pos:end="9:25">vsid</name></decl>, <decl pos:start="9:28" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:28" pos:end="9:36">vsid_mask</name></decl>, <decl pos:start="9:39" pos:end="9:43"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:39" pos:end="9:43">pgidx</name></decl>, <decl pos:start="9:46" pos:end="9:54"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:46" pos:end="9:54">page_mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">ds</name></decl>, <decl pos:start="11:13" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:19">vsid_sh</name></decl>, <decl pos:start="11:22" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:27">sdr_sh</name></decl>, <decl pos:start="11:30" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:30" pos:end="11:31">pr</name></decl>, <decl pos:start="11:34" pos:end="11:49"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:34" pos:end="11:49">target_page_bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:17">ret2</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="20:0"><expr pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:6">pr</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:15">msr_pr</name></expr>;</expr_stmt>

<cpp:if pos:start="19:1" pos:end="19:25">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:25"><call pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:11">defined</name><argument_list pos:start="19:12" pos:end="19:25">(<argument pos:start="19:13" pos:end="19:24"><expr pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="21:5" pos:end="105:5"><if pos:start="21:5" pos:end="65:5">if <condition pos:start="21:8" pos:end="21:40">(<expr pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:11">env</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:22">mmu_model</name></name> <operator pos:start="21:24" pos:end="21:24">&amp;</operator> <name pos:start="21:26" pos:end="21:39">POWERPC_MMU_64</name></expr>)</condition> <block pos:start="21:42" pos:end="65:5">{<block_content pos:start="23:9" pos:end="63:27">

        <decl_stmt pos:start="23:9" pos:end="23:23"><decl pos:start="23:9" pos:end="23:22"><type pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:17">ppc_slb_t</name> <modifier pos:start="23:19" pos:end="23:19">*</modifier></type><name pos:start="23:20" pos:end="23:22">slb</name></decl>;</decl_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:32"><expr pos:start="27:9" pos:end="27:31"><call pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:15">LOG_MMU</name><argument_list pos:start="27:16" pos:end="27:31">(<argument pos:start="27:17" pos:end="27:30"><expr pos:start="27:17" pos:end="27:30"><literal type="string" pos:start="27:17" pos:end="27:30">"Check SLBs\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:37"><expr pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:11">slb</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:36"><name pos:start="29:15" pos:end="29:24">slb_lookup</name><argument_list pos:start="29:25" pos:end="29:36">(<argument pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><name pos:start="29:26" pos:end="29:28">env</name></expr></argument>, <argument pos:start="29:31" pos:end="29:35"><expr pos:start="29:31" pos:end="29:35"><name pos:start="29:31" pos:end="29:35">eaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:17">(<expr pos:start="31:13" pos:end="31:16"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:16">slb</name></expr>)</condition> <block pos:start="31:19" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:22">

            <return pos:start="33:13" pos:end="33:22">return <expr pos:start="33:20" pos:end="33:21"><operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">5</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:61"><expr pos:start="39:9" pos:end="39:60"><name pos:start="39:9" pos:end="39:12">vsid</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <operator pos:start="39:16" pos:end="39:16">(</operator><name pos:start="39:17" pos:end="39:25"><name pos:start="39:17" pos:end="39:19">slb</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:25">vsid</name></name> <operator pos:start="39:27" pos:end="39:27">&amp;</operator> <name pos:start="39:29" pos:end="39:41">SLB_VSID_VSID</name><operator pos:start="39:42" pos:end="39:42">)</operator> <operator pos:start="39:44" pos:end="39:45">&gt;&gt;</operator> <name pos:start="39:47" pos:end="39:60">SLB_VSID_SHIFT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:39"><expr pos:start="41:9" pos:end="41:38"><name pos:start="41:9" pos:end="41:17">page_mask</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <operator pos:start="41:21" pos:end="41:21">~</operator><name pos:start="41:22" pos:end="41:38">SEGMENT_MASK_256M</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="45:54"><expr pos:start="43:9" pos:end="45:53"><name pos:start="43:9" pos:end="43:24">target_page_bits</name> <operator pos:start="43:26" pos:end="43:26">=</operator> <ternary pos:start="43:28" pos:end="45:53"><condition pos:start="43:28" pos:end="45:13"><expr pos:start="43:28" pos:end="43:51"><operator pos:start="43:28" pos:end="43:28">(</operator><name pos:start="43:29" pos:end="43:37"><name pos:start="43:29" pos:end="43:31">slb</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:37">vsid</name></name> <operator pos:start="43:39" pos:end="43:39">&amp;</operator> <name pos:start="43:41" pos:end="43:50">SLB_VSID_L</name><operator pos:start="43:51" pos:end="43:51">)</operator></expr>

            ?</condition><then pos:start="45:15" pos:end="45:34"> <expr pos:start="45:15" pos:end="45:34"><name pos:start="45:15" pos:end="45:34">TARGET_PAGE_BITS_16M</name></expr> </then><else pos:start="45:36" pos:end="45:53">: <expr pos:start="45:38" pos:end="45:53"><name pos:start="45:38" pos:end="45:53">TARGET_PAGE_BITS</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="49:51"><expr pos:start="47:9" pos:end="49:50"><name pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:11">ctx</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:16">key</name></name> <operator pos:start="47:18" pos:end="47:18">=</operator> <operator pos:start="47:20" pos:end="47:20">!</operator><operator pos:start="47:21" pos:end="47:21">!</operator><operator pos:start="47:22" pos:end="47:22">(</operator><ternary pos:start="47:23" pos:end="49:49"><condition pos:start="47:23" pos:end="47:26"><expr pos:start="47:23" pos:end="47:24"><name pos:start="47:23" pos:end="47:24">pr</name></expr> ?</condition><then pos:start="47:28" pos:end="47:52"> <expr pos:start="47:28" pos:end="47:52"><operator pos:start="47:28" pos:end="47:28">(</operator><name pos:start="47:29" pos:end="47:37"><name pos:start="47:29" pos:end="47:31">slb</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:37">vsid</name></name> <operator pos:start="47:39" pos:end="47:39">&amp;</operator> <name pos:start="47:41" pos:end="47:51">SLB_VSID_KP</name><operator pos:start="47:52" pos:end="47:52">)</operator></expr>

                      </then><else pos:start="49:23" pos:end="49:49">: <expr pos:start="49:25" pos:end="49:49"><operator pos:start="49:25" pos:end="49:25">(</operator><name pos:start="49:26" pos:end="49:34"><name pos:start="49:26" pos:end="49:28">slb</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:34">vsid</name></name> <operator pos:start="49:36" pos:end="49:36">&amp;</operator> <name pos:start="49:38" pos:end="49:48">SLB_VSID_KS</name><operator pos:start="49:49" pos:end="49:49">)</operator></expr></else></ternary><operator pos:start="49:50" pos:end="49:50">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:15"><expr pos:start="51:9" pos:end="51:14"><name pos:start="51:9" pos:end="51:10">ds</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:45"><expr pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:11">ctx</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:15">nx</name></name> <operator pos:start="53:17" pos:end="53:17">=</operator> <operator pos:start="53:19" pos:end="53:19">!</operator><operator pos:start="53:20" pos:end="53:20">!</operator><operator pos:start="53:21" pos:end="53:21">(</operator><name pos:start="53:22" pos:end="53:30"><name pos:start="53:22" pos:end="53:24">slb</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:30">vsid</name></name> <operator pos:start="53:32" pos:end="53:32">&amp;</operator> <name pos:start="53:34" pos:end="53:43">SLB_VSID_N</name><operator pos:start="53:44" pos:end="53:44">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:27"><expr pos:start="55:9" pos:end="55:26"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:11">ctx</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:18">eaddr</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:26">eaddr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:42"><expr pos:start="57:9" pos:end="57:41"><name pos:start="57:9" pos:end="57:17">vsid_mask</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <literal type="number" pos:start="57:21" pos:end="57:41">0x00003FFFFFFFFF80ULL</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:20"><expr pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:15">vsid_sh</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <literal type="number" pos:start="59:19" pos:end="59:19">7</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:20"><expr pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:14">sdr_sh</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:19">18</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:27"><expr pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:16">sdr_mask</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <literal type="number" pos:start="63:20" pos:end="63:26">0x3FF80</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="105:5">else

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="67:8" pos:end="67:34">/* defined(TARGET_PPC64) */</comment>

    <block pos:start="69:5" pos:end="105:5">{<block_content pos:start="71:9" pos:end="103:56">

        <expr_stmt pos:start="71:9" pos:end="71:34"><expr pos:start="71:9" pos:end="71:33"><name pos:start="71:9" pos:end="71:10">sr</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <name pos:start="71:14" pos:end="71:33"><name pos:start="71:14" pos:end="71:16">env</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:20">sr</name><index pos:start="71:21" pos:end="71:33">[<expr pos:start="71:22" pos:end="71:32"><name pos:start="71:22" pos:end="71:26">eaddr</name> <operator pos:start="71:28" pos:end="71:29">&gt;&gt;</operator> <literal type="number" pos:start="71:31" pos:end="71:32">28</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:31"><expr pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:17">page_mask</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <literal type="number" pos:start="73:21" pos:end="73:30">0x0FFFFFFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="77:62"><expr pos:start="75:9" pos:end="77:61"><name pos:start="75:9" pos:end="75:16"><name pos:start="75:9" pos:end="75:11">ctx</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:16">key</name></name> <operator pos:start="75:18" pos:end="75:18">=</operator> <ternary pos:start="75:20" pos:end="77:61"><condition pos:start="75:20" pos:end="77:55"><expr pos:start="75:20" pos:end="77:53"><operator pos:start="75:20" pos:end="75:20">(</operator><operator pos:start="75:21" pos:end="75:21">(</operator><operator pos:start="75:22" pos:end="75:22">(</operator><name pos:start="75:23" pos:end="75:24">sr</name> <operator pos:start="75:26" pos:end="75:26">&amp;</operator> <literal type="number" pos:start="75:28" pos:end="75:37">0x20000000</literal><operator pos:start="75:38" pos:end="75:38">)</operator> <operator pos:start="75:40" pos:end="75:41">&amp;&amp;</operator> <operator pos:start="75:43" pos:end="75:43">(</operator><name pos:start="75:44" pos:end="75:45">pr</name> <operator pos:start="75:47" pos:end="75:48">!=</operator> <literal type="number" pos:start="75:50" pos:end="75:50">0</literal><operator pos:start="75:51" pos:end="75:51">)</operator><operator pos:start="75:52" pos:end="75:52">)</operator> <operator pos:start="75:54" pos:end="75:55">||</operator>

                    <operator pos:start="77:21" pos:end="77:21">(</operator><operator pos:start="77:22" pos:end="77:22">(</operator><name pos:start="77:23" pos:end="77:24">sr</name> <operator pos:start="77:26" pos:end="77:26">&amp;</operator> <literal type="number" pos:start="77:28" pos:end="77:37">0x40000000</literal><operator pos:start="77:38" pos:end="77:38">)</operator> <operator pos:start="77:40" pos:end="77:41">&amp;&amp;</operator> <operator pos:start="77:43" pos:end="77:43">(</operator><name pos:start="77:44" pos:end="77:45">pr</name> <operator pos:start="77:47" pos:end="77:48">==</operator> <literal type="number" pos:start="77:50" pos:end="77:50">0</literal><operator pos:start="77:51" pos:end="77:51">)</operator><operator pos:start="77:52" pos:end="77:52">)</operator><operator pos:start="77:53" pos:end="77:53">)</operator></expr> ?</condition><then pos:start="77:57" pos:end="77:57"> <expr pos:start="77:57" pos:end="77:57"><literal type="number" pos:start="77:57" pos:end="77:57">1</literal></expr> </then><else pos:start="77:59" pos:end="77:61">: <expr pos:start="77:61" pos:end="77:61"><literal type="number" pos:start="77:61" pos:end="77:61">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:37"><expr pos:start="79:9" pos:end="79:36"><name pos:start="79:9" pos:end="79:10">ds</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <ternary pos:start="79:14" pos:end="79:36"><condition pos:start="79:14" pos:end="79:30"><expr pos:start="79:14" pos:end="79:28"><name pos:start="79:14" pos:end="79:15">sr</name> <operator pos:start="79:17" pos:end="79:17">&amp;</operator> <literal type="number" pos:start="79:19" pos:end="79:28">0x80000000</literal></expr> ?</condition><then pos:start="79:32" pos:end="79:32"> <expr pos:start="79:32" pos:end="79:32"><literal type="number" pos:start="79:32" pos:end="79:32">1</literal></expr> </then><else pos:start="79:34" pos:end="79:36">: <expr pos:start="79:36" pos:end="79:36"><literal type="number" pos:start="79:36" pos:end="79:36">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:42"><expr pos:start="81:9" pos:end="81:41"><name pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:11">ctx</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:15">nx</name></name> <operator pos:start="81:17" pos:end="81:17">=</operator> <ternary pos:start="81:19" pos:end="81:41"><condition pos:start="81:19" pos:end="81:35"><expr pos:start="81:19" pos:end="81:33"><name pos:start="81:19" pos:end="81:20">sr</name> <operator pos:start="81:22" pos:end="81:22">&amp;</operator> <literal type="number" pos:start="81:24" pos:end="81:33">0x10000000</literal></expr> ?</condition><then pos:start="81:37" pos:end="81:37"> <expr pos:start="81:37" pos:end="81:37"><literal type="number" pos:start="81:37" pos:end="81:37">1</literal></expr> </then><else pos:start="81:39" pos:end="81:41">: <expr pos:start="81:41" pos:end="81:41"><literal type="number" pos:start="81:41" pos:end="81:41">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:31"><expr pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:12">vsid</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <name pos:start="83:16" pos:end="83:17">sr</name> <operator pos:start="83:19" pos:end="83:19">&amp;</operator> <literal type="number" pos:start="83:21" pos:end="83:30">0x00FFFFFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:31"><expr pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:17">vsid_mask</name> <operator pos:start="85:19" pos:end="85:19">=</operator> <literal type="number" pos:start="85:21" pos:end="85:30">0x01FFFFC0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:20"><expr pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:15">vsid_sh</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <literal type="number" pos:start="87:19" pos:end="87:19">6</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:20"><expr pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:14">sdr_sh</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:19">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:26"><expr pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:16">sdr_mask</name> <operator pos:start="91:18" pos:end="91:18">=</operator> <literal type="number" pos:start="91:20" pos:end="91:25">0xFFC0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:44"><expr pos:start="93:9" pos:end="93:43"><name pos:start="93:9" pos:end="93:24">target_page_bits</name> <operator pos:start="93:26" pos:end="93:26">=</operator> <name pos:start="93:28" pos:end="93:43">TARGET_PAGE_BITS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="103:56"><expr pos:start="95:9" pos:end="103:55"><call pos:start="95:9" pos:end="103:55"><name pos:start="95:9" pos:end="95:15">LOG_MMU</name><argument_list pos:start="95:16" pos:end="103:55">(<argument pos:start="95:17" pos:end="99:46"><expr pos:start="95:17" pos:end="99:46"><literal type="string" pos:start="95:17" pos:end="95:34">"Check segment v="</literal> <name pos:start="95:36" pos:end="95:48">TARGET_FMT_lx</name> <literal type="string" pos:start="95:50" pos:end="95:55">" %d "</literal> <name pos:start="95:57" pos:end="95:69">TARGET_FMT_lx</name> <literal type="string" pos:start="95:71" pos:end="95:77">" nip="</literal>

                <name pos:start="97:17" pos:end="97:29">TARGET_FMT_lx</name> <literal type="string" pos:start="97:31" pos:end="97:36">" lr="</literal> <name pos:start="97:38" pos:end="97:50">TARGET_FMT_lx</name>

                <literal type="string" pos:start="99:17" pos:end="99:46">" ir=%d dr=%d pr=%d %d t=%d\n"</literal></expr></argument>,

                <argument pos:start="101:17" pos:end="101:21"><expr pos:start="101:17" pos:end="101:21"><name pos:start="101:17" pos:end="101:21">eaddr</name></expr></argument>, <argument pos:start="101:24" pos:end="101:41"><expr pos:start="101:24" pos:end="101:41"><operator pos:start="101:24" pos:end="101:24">(</operator><name pos:start="101:25" pos:end="101:27">int</name><operator pos:start="101:28" pos:end="101:28">)</operator><operator pos:start="101:29" pos:end="101:29">(</operator><name pos:start="101:30" pos:end="101:34">eaddr</name> <operator pos:start="101:36" pos:end="101:37">&gt;&gt;</operator> <literal type="number" pos:start="101:39" pos:end="101:40">28</literal><operator pos:start="101:41" pos:end="101:41">)</operator></expr></argument>, <argument pos:start="101:44" pos:end="101:45"><expr pos:start="101:44" pos:end="101:45"><name pos:start="101:44" pos:end="101:45">sr</name></expr></argument>, <argument pos:start="101:48" pos:end="101:55"><expr pos:start="101:48" pos:end="101:55"><name pos:start="101:48" pos:end="101:55"><name pos:start="101:48" pos:end="101:50">env</name><operator pos:start="101:51" pos:end="101:52">-&gt;</operator><name pos:start="101:53" pos:end="101:55">nip</name></name></expr></argument>, <argument pos:start="101:58" pos:end="101:64"><expr pos:start="101:58" pos:end="101:64"><name pos:start="101:58" pos:end="101:64"><name pos:start="101:58" pos:end="101:60">env</name><operator pos:start="101:61" pos:end="101:62">-&gt;</operator><name pos:start="101:63" pos:end="101:64">lr</name></name></expr></argument>, <argument pos:start="101:67" pos:end="101:77"><expr pos:start="101:67" pos:end="101:77"><operator pos:start="101:67" pos:end="101:67">(</operator><name pos:start="101:68" pos:end="101:70">int</name><operator pos:start="101:71" pos:end="101:71">)</operator><name pos:start="101:72" pos:end="101:77">msr_ir</name></expr></argument>,

                <argument pos:start="103:17" pos:end="103:27"><expr pos:start="103:17" pos:end="103:27"><operator pos:start="103:17" pos:end="103:17">(</operator><name pos:start="103:18" pos:end="103:20">int</name><operator pos:start="103:21" pos:end="103:21">)</operator><name pos:start="103:22" pos:end="103:27">msr_dr</name></expr></argument>, <argument pos:start="103:30" pos:end="103:44"><expr pos:start="103:30" pos:end="103:44"><ternary pos:start="103:30" pos:end="103:44"><condition pos:start="103:30" pos:end="103:38"><expr pos:start="103:30" pos:end="103:36"><name pos:start="103:30" pos:end="103:31">pr</name> <operator pos:start="103:33" pos:end="103:34">!=</operator> <literal type="number" pos:start="103:36" pos:end="103:36">0</literal></expr> ?</condition><then pos:start="103:40" pos:end="103:40"> <expr pos:start="103:40" pos:end="103:40"><literal type="number" pos:start="103:40" pos:end="103:40">1</literal></expr> </then><else pos:start="103:42" pos:end="103:44">: <expr pos:start="103:44" pos:end="103:44"><literal type="number" pos:start="103:44" pos:end="103:44">0</literal></expr></else></ternary></expr></argument>, <argument pos:start="103:47" pos:end="103:48"><expr pos:start="103:47" pos:end="103:48"><name pos:start="103:47" pos:end="103:48">rw</name></expr></argument>, <argument pos:start="103:51" pos:end="103:54"><expr pos:start="103:51" pos:end="103:54"><name pos:start="103:51" pos:end="103:54">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="109:41"><expr pos:start="107:5" pos:end="109:40"><call pos:start="107:5" pos:end="109:40"><name pos:start="107:5" pos:end="107:11">LOG_MMU</name><argument_list pos:start="107:12" pos:end="109:40">(<argument pos:start="107:13" pos:end="107:70"><expr pos:start="107:13" pos:end="107:70"><literal type="string" pos:start="107:13" pos:end="107:51">"pte segment: key=%d ds %d nx %d vsid "</literal> <name pos:start="107:53" pos:end="107:65">TARGET_FMT_lx</name> <literal type="string" pos:start="107:67" pos:end="107:70">"\n"</literal></expr></argument>,

            <argument pos:start="109:13" pos:end="109:20"><expr pos:start="109:13" pos:end="109:20"><name pos:start="109:13" pos:end="109:20"><name pos:start="109:13" pos:end="109:15">ctx</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:20">key</name></name></expr></argument>, <argument pos:start="109:23" pos:end="109:24"><expr pos:start="109:23" pos:end="109:24"><name pos:start="109:23" pos:end="109:24">ds</name></expr></argument>, <argument pos:start="109:27" pos:end="109:33"><expr pos:start="109:27" pos:end="109:33"><name pos:start="109:27" pos:end="109:33"><name pos:start="109:27" pos:end="109:29">ctx</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:33">nx</name></name></expr></argument>, <argument pos:start="109:36" pos:end="109:39"><expr pos:start="109:36" pos:end="109:39"><name pos:start="109:36" pos:end="109:39">vsid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:13"><expr pos:start="111:5" pos:end="111:12"><name pos:start="111:5" pos:end="111:7">ret</name> <operator pos:start="111:9" pos:end="111:9">=</operator> <operator pos:start="111:11" pos:end="111:11">-</operator><literal type="number" pos:start="111:12" pos:end="111:12">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="369:5"><if pos:start="113:5" pos:end="295:5">if <condition pos:start="113:8" pos:end="113:12">(<expr pos:start="113:9" pos:end="113:11"><operator pos:start="113:9" pos:end="113:9">!</operator><name pos:start="113:10" pos:end="113:11">ds</name></expr>)</condition> <block pos:start="113:14" pos:end="295:5">{<block_content pos:start="117:9" pos:end="293:9">

        <comment type="block" pos:start="115:9" pos:end="115:62">/* Check if instruction fetch is allowed, if needed */</comment>

        <if_stmt pos:start="117:9" pos:end="293:9"><if pos:start="117:9" pos:end="287:9">if <condition pos:start="117:12" pos:end="117:48">(<expr pos:start="117:13" pos:end="117:47"><name pos:start="117:13" pos:end="117:16">type</name> <operator pos:start="117:18" pos:end="117:19">!=</operator> <name pos:start="117:21" pos:end="117:31">ACCESS_CODE</name> <operator pos:start="117:33" pos:end="117:34">||</operator> <name pos:start="117:36" pos:end="117:42"><name pos:start="117:36" pos:end="117:38">ctx</name><operator pos:start="117:39" pos:end="117:40">-&gt;</operator><name pos:start="117:41" pos:end="117:42">nx</name></name> <operator pos:start="117:44" pos:end="117:45">==</operator> <literal type="number" pos:start="117:47" pos:end="117:47">0</literal></expr>)</condition> <block pos:start="117:50" pos:end="287:9">{<block_content pos:start="123:13" pos:end="286:0">

            <comment type="block" pos:start="119:13" pos:end="119:42">/* Page address translation */</comment>

            <comment type="block" pos:start="121:13" pos:end="121:39">/* Primary table address */</comment>

            <expr_stmt pos:start="123:13" pos:end="123:28"><expr pos:start="123:13" pos:end="123:27"><name pos:start="123:13" pos:end="123:15">sdr</name> <operator pos:start="123:17" pos:end="123:17">=</operator> <name pos:start="123:19" pos:end="123:27"><name pos:start="123:19" pos:end="123:21">env</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:27">sdr1</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="128:0"><expr pos:start="125:13" pos:end="125:59"><name pos:start="125:13" pos:end="125:17">pgidx</name> <operator pos:start="125:19" pos:end="125:19">=</operator> <operator pos:start="125:21" pos:end="125:21">(</operator><name pos:start="125:22" pos:end="125:26">eaddr</name> <operator pos:start="125:28" pos:end="125:28">&amp;</operator> <name pos:start="125:30" pos:end="125:38">page_mask</name><operator pos:start="125:39" pos:end="125:39">)</operator> <operator pos:start="125:41" pos:end="125:42">&gt;&gt;</operator> <name pos:start="125:44" pos:end="125:59">target_page_bits</name></expr>;</expr_stmt>

<cpp:if pos:start="127:1" pos:end="127:25">#<cpp:directive pos:start="127:2" pos:end="127:3">if</cpp:directive> <expr pos:start="127:5" pos:end="127:25"><call pos:start="127:5" pos:end="127:25"><name pos:start="127:5" pos:end="127:11">defined</name><argument_list pos:start="127:12" pos:end="127:25">(<argument pos:start="127:13" pos:end="127:24"><expr pos:start="127:13" pos:end="127:24"><name pos:start="127:13" pos:end="127:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="129:13" pos:end="147:13"><if pos:start="129:13" pos:end="137:13">if <condition pos:start="129:16" pos:end="129:48">(<expr pos:start="129:17" pos:end="129:47"><name pos:start="129:17" pos:end="129:30"><name pos:start="129:17" pos:end="129:19">env</name><operator pos:start="129:20" pos:end="129:21">-&gt;</operator><name pos:start="129:22" pos:end="129:30">mmu_model</name></name> <operator pos:start="129:32" pos:end="129:32">&amp;</operator> <name pos:start="129:34" pos:end="129:47">POWERPC_MMU_64</name></expr>)</condition> <block pos:start="129:50" pos:end="137:13">{<block_content pos:start="131:17" pos:end="135:63">

                <expr_stmt pos:start="131:17" pos:end="131:62"><expr pos:start="131:17" pos:end="131:61"><name pos:start="131:17" pos:end="131:25">htab_mask</name> <operator pos:start="131:27" pos:end="131:27">=</operator> <literal type="number" pos:start="131:29" pos:end="131:38">0x0FFFFFFF</literal> <operator pos:start="131:40" pos:end="131:41">&gt;&gt;</operator> <operator pos:start="131:43" pos:end="131:43">(</operator><literal type="number" pos:start="131:44" pos:end="131:47">28</literal> <operator pos:start="131:47" pos:end="131:47">-</operator> <operator pos:start="131:49" pos:end="131:49">(</operator><name pos:start="131:50" pos:end="131:52">sdr</name> <operator pos:start="131:54" pos:end="131:54">&amp;</operator> <literal type="number" pos:start="131:56" pos:end="131:59">0x1F</literal><operator pos:start="131:60" pos:end="131:60">)</operator><operator pos:start="131:61" pos:end="131:61">)</operator></expr>;</expr_stmt>

                <comment type="block" pos:start="133:17" pos:end="133:58">/* XXX: this is false for 1 TB segments */</comment>

                <expr_stmt pos:start="135:17" pos:end="135:63"><expr pos:start="135:17" pos:end="135:62"><name pos:start="135:17" pos:end="135:20">hash</name> <operator pos:start="135:22" pos:end="135:22">=</operator> <operator pos:start="135:24" pos:end="135:24">(</operator><operator pos:start="135:25" pos:end="135:25">(</operator><name pos:start="135:26" pos:end="135:29">vsid</name> <operator pos:start="135:31" pos:end="135:31">^</operator> <name pos:start="135:33" pos:end="135:37">pgidx</name><operator pos:start="135:38" pos:end="135:38">)</operator> <operator pos:start="135:40" pos:end="135:41">&lt;&lt;</operator> <name pos:start="135:43" pos:end="135:49">vsid_sh</name><operator pos:start="135:50" pos:end="135:50">)</operator> <operator pos:start="135:52" pos:end="135:52">&amp;</operator> <name pos:start="135:54" pos:end="135:62">vsid_mask</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="137:15" pos:end="147:13">else

<cpp:endif pos:start="139:1" pos:end="139:6">#<cpp:directive pos:start="139:2" pos:end="139:6">endif</cpp:directive></cpp:endif>

            <block pos:start="141:13" pos:end="147:13">{<block_content pos:start="143:17" pos:end="145:63">

                <expr_stmt pos:start="143:17" pos:end="143:45"><expr pos:start="143:17" pos:end="143:44"><name pos:start="143:17" pos:end="143:25">htab_mask</name> <operator pos:start="143:27" pos:end="143:27">=</operator> <name pos:start="143:29" pos:end="143:31">sdr</name> <operator pos:start="143:33" pos:end="143:33">&amp;</operator> <literal type="number" pos:start="143:35" pos:end="143:44">0x000001FF</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:63"><expr pos:start="145:17" pos:end="145:62"><name pos:start="145:17" pos:end="145:20">hash</name> <operator pos:start="145:22" pos:end="145:22">=</operator> <operator pos:start="145:24" pos:end="145:24">(</operator><operator pos:start="145:25" pos:end="145:25">(</operator><name pos:start="145:26" pos:end="145:29">vsid</name> <operator pos:start="145:31" pos:end="145:31">^</operator> <name pos:start="145:33" pos:end="145:37">pgidx</name><operator pos:start="145:38" pos:end="145:38">)</operator> <operator pos:start="145:40" pos:end="145:41">&lt;&lt;</operator> <name pos:start="145:43" pos:end="145:49">vsid_sh</name><operator pos:start="145:50" pos:end="145:50">)</operator> <operator pos:start="145:52" pos:end="145:52">&amp;</operator> <name pos:start="145:54" pos:end="145:62">vsid_mask</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:52"><expr pos:start="149:13" pos:end="149:51"><name pos:start="149:13" pos:end="149:16">mask</name> <operator pos:start="149:18" pos:end="149:18">=</operator> <operator pos:start="149:20" pos:end="149:20">(</operator><name pos:start="149:21" pos:end="149:29">htab_mask</name> <operator pos:start="149:31" pos:end="149:32">&lt;&lt;</operator> <name pos:start="149:34" pos:end="149:39">sdr_sh</name><operator pos:start="149:40" pos:end="149:40">)</operator> <operator pos:start="149:42" pos:end="149:42">|</operator> <name pos:start="149:44" pos:end="149:51">sdr_mask</name></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="155:56"><expr pos:start="151:13" pos:end="155:55"><call pos:start="151:13" pos:end="155:55"><name pos:start="151:13" pos:end="151:19">LOG_MMU</name><argument_list pos:start="151:20" pos:end="155:55">(<argument pos:start="151:21" pos:end="153:66"><expr pos:start="151:21" pos:end="153:66"><literal type="string" pos:start="151:21" pos:end="151:26">"sdr "</literal> <name pos:start="151:28" pos:end="151:41">TARGET_FMT_plx</name> <literal type="string" pos:start="151:43" pos:end="151:56">" sh %d hash "</literal> <name pos:start="151:58" pos:end="151:71">TARGET_FMT_plx</name>

                    <literal type="string" pos:start="153:21" pos:end="153:28">" mask "</literal> <name pos:start="153:30" pos:end="153:43">TARGET_FMT_plx</name> <literal type="string" pos:start="153:45" pos:end="153:47">" "</literal> <name pos:start="153:49" pos:end="153:61">TARGET_FMT_lx</name> <literal type="string" pos:start="153:63" pos:end="153:66">"\n"</literal></expr></argument>,

                    <argument pos:start="155:21" pos:end="155:23"><expr pos:start="155:21" pos:end="155:23"><name pos:start="155:21" pos:end="155:23">sdr</name></expr></argument>, <argument pos:start="155:26" pos:end="155:31"><expr pos:start="155:26" pos:end="155:31"><name pos:start="155:26" pos:end="155:31">sdr_sh</name></expr></argument>, <argument pos:start="155:34" pos:end="155:37"><expr pos:start="155:34" pos:end="155:37"><name pos:start="155:34" pos:end="155:37">hash</name></expr></argument>, <argument pos:start="155:40" pos:end="155:43"><expr pos:start="155:40" pos:end="155:43"><name pos:start="155:40" pos:end="155:43">mask</name></expr></argument>, <argument pos:start="155:46" pos:end="155:54"><expr pos:start="155:46" pos:end="155:54"><name pos:start="155:46" pos:end="155:54">page_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:66"><expr pos:start="157:13" pos:end="157:65"><name pos:start="157:13" pos:end="157:27"><name pos:start="157:13" pos:end="157:15">ctx</name><operator pos:start="157:16" pos:end="157:17">-&gt;</operator><name pos:start="157:18" pos:end="157:24">pg_addr</name><index pos:start="157:25" pos:end="157:27">[<expr pos:start="157:26" pos:end="157:26"><literal type="number" pos:start="157:26" pos:end="157:26">0</literal></expr>]</index></name> <operator pos:start="157:29" pos:end="157:29">=</operator> <call pos:start="157:31" pos:end="157:65"><name pos:start="157:31" pos:end="157:40">get_pgaddr</name><argument_list pos:start="157:41" pos:end="157:65">(<argument pos:start="157:42" pos:end="157:44"><expr pos:start="157:42" pos:end="157:44"><name pos:start="157:42" pos:end="157:44">sdr</name></expr></argument>, <argument pos:start="157:47" pos:end="157:52"><expr pos:start="157:47" pos:end="157:52"><name pos:start="157:47" pos:end="157:52">sdr_sh</name></expr></argument>, <argument pos:start="157:55" pos:end="157:58"><expr pos:start="157:55" pos:end="157:58"><name pos:start="157:55" pos:end="157:58">hash</name></expr></argument>, <argument pos:start="157:61" pos:end="157:64"><expr pos:start="157:61" pos:end="157:64"><name pos:start="157:61" pos:end="157:64">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="159:13" pos:end="159:41">/* Secondary table address */</comment>

            <expr_stmt pos:start="161:13" pos:end="161:39"><expr pos:start="161:13" pos:end="161:38"><name pos:start="161:13" pos:end="161:16">hash</name> <operator pos:start="161:18" pos:end="161:18">=</operator> <operator pos:start="161:20" pos:end="161:20">(</operator><operator pos:start="161:21" pos:end="161:21">~</operator><name pos:start="161:22" pos:end="161:25">hash</name><operator pos:start="161:26" pos:end="161:26">)</operator> <operator pos:start="161:28" pos:end="161:28">&amp;</operator> <name pos:start="161:30" pos:end="161:38">vsid_mask</name></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="165:75"><expr pos:start="163:13" pos:end="165:74"><call pos:start="163:13" pos:end="165:74"><name pos:start="163:13" pos:end="163:19">LOG_MMU</name><argument_list pos:start="163:20" pos:end="165:74">(<argument pos:start="163:21" pos:end="165:48"><expr pos:start="163:21" pos:end="165:48"><literal type="string" pos:start="163:21" pos:end="163:26">"sdr "</literal> <name pos:start="163:28" pos:end="163:41">TARGET_FMT_plx</name> <literal type="string" pos:start="163:43" pos:end="163:56">" sh %d hash "</literal> <name pos:start="163:58" pos:end="163:71">TARGET_FMT_plx</name>

                    <literal type="string" pos:start="165:21" pos:end="165:28">" mask "</literal> <name pos:start="165:30" pos:end="165:43">TARGET_FMT_plx</name> <literal type="string" pos:start="165:45" pos:end="165:48">"\n"</literal></expr></argument>, <argument pos:start="165:51" pos:end="165:53"><expr pos:start="165:51" pos:end="165:53"><name pos:start="165:51" pos:end="165:53">sdr</name></expr></argument>, <argument pos:start="165:56" pos:end="165:61"><expr pos:start="165:56" pos:end="165:61"><name pos:start="165:56" pos:end="165:61">sdr_sh</name></expr></argument>, <argument pos:start="165:64" pos:end="165:67"><expr pos:start="165:64" pos:end="165:67"><name pos:start="165:64" pos:end="165:67">hash</name></expr></argument>, <argument pos:start="165:70" pos:end="165:73"><expr pos:start="165:70" pos:end="165:73"><name pos:start="165:70" pos:end="165:73">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="170:0"><expr pos:start="167:13" pos:end="167:65"><name pos:start="167:13" pos:end="167:27"><name pos:start="167:13" pos:end="167:15">ctx</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:24">pg_addr</name><index pos:start="167:25" pos:end="167:27">[<expr pos:start="167:26" pos:end="167:26"><literal type="number" pos:start="167:26" pos:end="167:26">1</literal></expr>]</index></name> <operator pos:start="167:29" pos:end="167:29">=</operator> <call pos:start="167:31" pos:end="167:65"><name pos:start="167:31" pos:end="167:40">get_pgaddr</name><argument_list pos:start="167:41" pos:end="167:65">(<argument pos:start="167:42" pos:end="167:44"><expr pos:start="167:42" pos:end="167:44"><name pos:start="167:42" pos:end="167:44">sdr</name></expr></argument>, <argument pos:start="167:47" pos:end="167:52"><expr pos:start="167:47" pos:end="167:52"><name pos:start="167:47" pos:end="167:52">sdr_sh</name></expr></argument>, <argument pos:start="167:55" pos:end="167:58"><expr pos:start="167:55" pos:end="167:58"><name pos:start="167:55" pos:end="167:58">hash</name></expr></argument>, <argument pos:start="167:61" pos:end="167:64"><expr pos:start="167:61" pos:end="167:64"><name pos:start="167:61" pos:end="167:64">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="169:1" pos:end="169:25">#<cpp:directive pos:start="169:2" pos:end="169:3">if</cpp:directive> <expr pos:start="169:5" pos:end="169:25"><call pos:start="169:5" pos:end="169:25"><name pos:start="169:5" pos:end="169:11">defined</name><argument_list pos:start="169:12" pos:end="169:25">(<argument pos:start="169:13" pos:end="169:24"><expr pos:start="169:13" pos:end="169:24"><name pos:start="169:13" pos:end="169:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="171:13" pos:end="195:13"><if pos:start="171:13" pos:end="187:13">if <condition pos:start="171:16" pos:end="171:48">(<expr pos:start="171:17" pos:end="171:47"><name pos:start="171:17" pos:end="171:30"><name pos:start="171:17" pos:end="171:19">env</name><operator pos:start="171:20" pos:end="171:21">-&gt;</operator><name pos:start="171:22" pos:end="171:30">mmu_model</name></name> <operator pos:start="171:32" pos:end="171:32">&amp;</operator> <name pos:start="171:34" pos:end="171:47">POWERPC_MMU_64</name></expr>)</condition> <block pos:start="171:50" pos:end="187:13">{<block_content pos:start="175:17" pos:end="185:17">

                <comment type="block" pos:start="173:17" pos:end="173:72">/* Only 5 bits of the page index are used in the AVPN */</comment>

                <if_stmt pos:start="175:17" pos:end="185:17"><if pos:start="175:17" pos:end="181:17">if <condition pos:start="175:20" pos:end="175:42">(<expr pos:start="175:21" pos:end="175:41"><name pos:start="175:21" pos:end="175:36">target_page_bits</name> <operator pos:start="175:38" pos:end="175:38">&gt;</operator> <literal type="number" pos:start="175:40" pos:end="175:41">23</literal></expr>)</condition> <block pos:start="175:44" pos:end="181:17">{<block_content pos:start="177:21" pos:end="179:77">

                    <expr_stmt pos:start="177:21" pos:end="179:77"><expr pos:start="177:21" pos:end="179:76"><name pos:start="177:21" pos:end="177:29"><name pos:start="177:21" pos:end="177:23">ctx</name><operator pos:start="177:24" pos:end="177:25">-&gt;</operator><name pos:start="177:26" pos:end="177:29">ptem</name></name> <operator pos:start="177:31" pos:end="177:31">=</operator> <operator pos:start="177:33" pos:end="177:33">(</operator><name pos:start="177:34" pos:end="177:37">vsid</name> <operator pos:start="177:39" pos:end="177:40">&lt;&lt;</operator> <literal type="number" pos:start="177:42" pos:end="177:43">12</literal><operator pos:start="177:44" pos:end="177:44">)</operator> <operator pos:start="177:46" pos:end="177:46">|</operator>

                                <operator pos:start="179:33" pos:end="179:33">(</operator><operator pos:start="179:34" pos:end="179:34">(</operator><name pos:start="179:35" pos:end="179:39">pgidx</name> <operator pos:start="179:41" pos:end="179:42">&lt;&lt;</operator> <operator pos:start="179:44" pos:end="179:44">(</operator><name pos:start="179:45" pos:end="179:60">target_page_bits</name> <operator pos:start="179:62" pos:end="179:62">-</operator> <literal type="number" pos:start="179:64" pos:end="179:65">16</literal><operator pos:start="179:66" pos:end="179:66">)</operator><operator pos:start="179:67" pos:end="179:67">)</operator> <operator pos:start="179:69" pos:end="179:69">&amp;</operator> <literal type="number" pos:start="179:71" pos:end="179:75">0xF80</literal><operator pos:start="179:76" pos:end="179:76">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="181:19" pos:end="185:17">else <block pos:start="181:24" pos:end="185:17">{<block_content pos:start="183:21" pos:end="183:71">

                    <expr_stmt pos:start="183:21" pos:end="183:71"><expr pos:start="183:21" pos:end="183:70"><name pos:start="183:21" pos:end="183:29"><name pos:start="183:21" pos:end="183:23">ctx</name><operator pos:start="183:24" pos:end="183:25">-&gt;</operator><name pos:start="183:26" pos:end="183:29">ptem</name></name> <operator pos:start="183:31" pos:end="183:31">=</operator> <operator pos:start="183:33" pos:end="183:33">(</operator><name pos:start="183:34" pos:end="183:37">vsid</name> <operator pos:start="183:39" pos:end="183:40">&lt;&lt;</operator> <literal type="number" pos:start="183:42" pos:end="183:43">12</literal><operator pos:start="183:44" pos:end="183:44">)</operator> <operator pos:start="183:46" pos:end="183:46">|</operator> <operator pos:start="183:48" pos:end="183:48">(</operator><operator pos:start="183:49" pos:end="183:49">(</operator><name pos:start="183:50" pos:end="183:54">pgidx</name> <operator pos:start="183:56" pos:end="183:57">&gt;&gt;</operator> <literal type="number" pos:start="183:59" pos:end="183:59">4</literal><operator pos:start="183:60" pos:end="183:60">)</operator> <operator pos:start="183:62" pos:end="183:62">&amp;</operator> <literal type="number" pos:start="183:64" pos:end="183:69">0x0F80</literal><operator pos:start="183:70" pos:end="183:70">)</operator></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="187:15" pos:end="195:13">else

<cpp:endif pos:start="189:1" pos:end="189:6">#<cpp:directive pos:start="189:2" pos:end="189:6">endif</cpp:directive></cpp:endif>

            <block pos:start="191:13" pos:end="195:13">{<block_content pos:start="193:17" pos:end="193:56">

                <expr_stmt pos:start="193:17" pos:end="193:56"><expr pos:start="193:17" pos:end="193:55"><name pos:start="193:17" pos:end="193:25"><name pos:start="193:17" pos:end="193:19">ctx</name><operator pos:start="193:20" pos:end="193:21">-&gt;</operator><name pos:start="193:22" pos:end="193:25">ptem</name></name> <operator pos:start="193:27" pos:end="193:27">=</operator> <operator pos:start="193:29" pos:end="193:29">(</operator><name pos:start="193:30" pos:end="193:33">vsid</name> <operator pos:start="193:35" pos:end="193:36">&lt;&lt;</operator> <literal type="number" pos:start="193:38" pos:end="193:38">7</literal><operator pos:start="193:39" pos:end="193:39">)</operator> <operator pos:start="193:41" pos:end="193:41">|</operator> <operator pos:start="193:43" pos:end="193:43">(</operator><name pos:start="193:44" pos:end="193:48">pgidx</name> <operator pos:start="193:50" pos:end="193:51">&gt;&gt;</operator> <literal type="number" pos:start="193:53" pos:end="193:54">10</literal><operator pos:start="193:55" pos:end="193:55">)</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <comment type="block" pos:start="197:13" pos:end="197:63">/* Initialize real address with an invalid value */</comment>

            <expr_stmt pos:start="199:13" pos:end="199:51"><expr pos:start="199:13" pos:end="199:50"><name pos:start="199:13" pos:end="199:22"><name pos:start="199:13" pos:end="199:15">ctx</name><operator pos:start="199:16" pos:end="199:17">-&gt;</operator><name pos:start="199:18" pos:end="199:22">raddr</name></name> <operator pos:start="199:24" pos:end="199:24">=</operator> <operator pos:start="199:26" pos:end="199:26">(</operator><name pos:start="199:27" pos:end="199:44">target_phys_addr_t</name><operator pos:start="199:45" pos:end="199:45">)</operator><operator pos:start="199:46" pos:end="199:46">-</operator><literal type="number" pos:start="199:47" pos:end="199:50">1ULL</literal></expr>;</expr_stmt>

            <if_stmt pos:start="201:13" pos:end="250:0"><if pos:start="201:13" pos:end="209:13">if <condition pos:start="201:16" pos:end="203:66">(<expr pos:start="201:17" pos:end="203:65"><call pos:start="201:17" pos:end="203:65"><name pos:start="201:17" pos:end="201:24">unlikely</name><argument_list pos:start="201:25" pos:end="203:65">(<argument pos:start="201:26" pos:end="203:64"><expr pos:start="201:26" pos:end="203:64"><name pos:start="201:26" pos:end="201:39"><name pos:start="201:26" pos:end="201:28">env</name><operator pos:start="201:29" pos:end="201:30">-&gt;</operator><name pos:start="201:31" pos:end="201:39">mmu_model</name></name> <operator pos:start="201:41" pos:end="201:42">==</operator> <name pos:start="201:44" pos:end="201:63">POWERPC_MMU_SOFT_6xx</name> <operator pos:start="201:65" pos:end="201:66">||</operator>

                         <name pos:start="203:26" pos:end="203:39"><name pos:start="203:26" pos:end="203:28">env</name><operator pos:start="203:29" pos:end="203:30">-&gt;</operator><name pos:start="203:31" pos:end="203:39">mmu_model</name></name> <operator pos:start="203:41" pos:end="203:42">==</operator> <name pos:start="203:44" pos:end="203:64">POWERPC_MMU_SOFT_74xx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="203:68" pos:end="209:13">{<block_content pos:start="207:17" pos:end="207:66">

                <comment type="block" pos:start="205:17" pos:end="205:41">/* Software TLB search */</comment>

                <expr_stmt pos:start="207:17" pos:end="207:66"><expr pos:start="207:17" pos:end="207:65"><name pos:start="207:17" pos:end="207:19">ret</name> <operator pos:start="207:21" pos:end="207:21">=</operator> <call pos:start="207:23" pos:end="207:65"><name pos:start="207:23" pos:end="207:38">ppc6xx_tlb_check</name><argument_list pos:start="207:39" pos:end="207:65">(<argument pos:start="207:40" pos:end="207:42"><expr pos:start="207:40" pos:end="207:42"><name pos:start="207:40" pos:end="207:42">env</name></expr></argument>, <argument pos:start="207:45" pos:end="207:47"><expr pos:start="207:45" pos:end="207:47"><name pos:start="207:45" pos:end="207:47">ctx</name></expr></argument>, <argument pos:start="207:50" pos:end="207:54"><expr pos:start="207:50" pos:end="207:54"><name pos:start="207:50" pos:end="207:54">eaddr</name></expr></argument>, <argument pos:start="207:57" pos:end="207:58"><expr pos:start="207:57" pos:end="207:58"><name pos:start="207:57" pos:end="207:58">rw</name></expr></argument>, <argument pos:start="207:61" pos:end="207:64"><expr pos:start="207:61" pos:end="207:64"><name pos:start="207:61" pos:end="207:64">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="209:15" pos:end="250:0">else <block pos:start="209:20" pos:end="250:0">{<block_content pos:start="211:17" pos:end="245:17">

                <expr_stmt pos:start="211:17" pos:end="217:65"><expr pos:start="211:17" pos:end="217:64"><call pos:start="211:17" pos:end="217:64"><name pos:start="211:17" pos:end="211:23">LOG_MMU</name><argument_list pos:start="211:24" pos:end="217:64">(<argument pos:start="211:25" pos:end="215:55"><expr pos:start="211:25" pos:end="215:55"><literal type="string" pos:start="211:25" pos:end="211:33">"0 sdr1="</literal> <name pos:start="211:35" pos:end="211:48">TARGET_FMT_plx</name> <literal type="string" pos:start="211:50" pos:end="211:57">" vsid="</literal> <name pos:start="211:59" pos:end="211:71">TARGET_FMT_lx</name> <literal type="string" pos:start="211:73" pos:end="211:75">" "</literal>

                        <literal type="string" pos:start="213:25" pos:end="213:30">"api="</literal> <name pos:start="213:32" pos:end="213:44">TARGET_FMT_lx</name> <literal type="string" pos:start="213:46" pos:end="213:53">" hash="</literal> <name pos:start="213:55" pos:end="213:68">TARGET_FMT_plx</name>

                        <literal type="string" pos:start="215:25" pos:end="215:35">" pg_addr="</literal> <name pos:start="215:37" pos:end="215:50">TARGET_FMT_plx</name> <literal type="string" pos:start="215:52" pos:end="215:55">"\n"</literal></expr></argument>,

                        <argument pos:start="217:25" pos:end="217:27"><expr pos:start="217:25" pos:end="217:27"><name pos:start="217:25" pos:end="217:27">sdr</name></expr></argument>, <argument pos:start="217:30" pos:end="217:33"><expr pos:start="217:30" pos:end="217:33"><name pos:start="217:30" pos:end="217:33">vsid</name></expr></argument>, <argument pos:start="217:36" pos:end="217:40"><expr pos:start="217:36" pos:end="217:40"><name pos:start="217:36" pos:end="217:40">pgidx</name></expr></argument>, <argument pos:start="217:43" pos:end="217:46"><expr pos:start="217:43" pos:end="217:46"><name pos:start="217:43" pos:end="217:46">hash</name></expr></argument>, <argument pos:start="217:49" pos:end="217:63"><expr pos:start="217:49" pos:end="217:63"><name pos:start="217:49" pos:end="217:63"><name pos:start="217:49" pos:end="217:51">ctx</name><operator pos:start="217:52" pos:end="217:53">-&gt;</operator><name pos:start="217:54" pos:end="217:60">pg_addr</name><index pos:start="217:61" pos:end="217:63">[<expr pos:start="217:62" pos:end="217:62"><literal type="number" pos:start="217:62" pos:end="217:62">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="219:17" pos:end="219:42">/* Primary table lookup */</comment>

                <expr_stmt pos:start="221:17" pos:end="221:72"><expr pos:start="221:17" pos:end="221:71"><name pos:start="221:17" pos:end="221:19">ret</name> <operator pos:start="221:21" pos:end="221:21">=</operator> <call pos:start="221:23" pos:end="221:71"><name pos:start="221:23" pos:end="221:30">find_pte</name><argument_list pos:start="221:31" pos:end="221:71">(<argument pos:start="221:32" pos:end="221:34"><expr pos:start="221:32" pos:end="221:34"><name pos:start="221:32" pos:end="221:34">env</name></expr></argument>, <argument pos:start="221:37" pos:end="221:39"><expr pos:start="221:37" pos:end="221:39"><name pos:start="221:37" pos:end="221:39">ctx</name></expr></argument>, <argument pos:start="221:42" pos:end="221:42"><expr pos:start="221:42" pos:end="221:42"><literal type="number" pos:start="221:42" pos:end="221:42">0</literal></expr></argument>, <argument pos:start="221:45" pos:end="221:46"><expr pos:start="221:45" pos:end="221:46"><name pos:start="221:45" pos:end="221:46">rw</name></expr></argument>, <argument pos:start="221:49" pos:end="221:52"><expr pos:start="221:49" pos:end="221:52"><name pos:start="221:49" pos:end="221:52">type</name></expr></argument>, <argument pos:start="221:55" pos:end="221:70"><expr pos:start="221:55" pos:end="221:70"><name pos:start="221:55" pos:end="221:70">target_page_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="223:17" pos:end="245:17"><if pos:start="223:17" pos:end="245:17">if <condition pos:start="223:20" pos:end="223:28">(<expr pos:start="223:21" pos:end="223:27"><name pos:start="223:21" pos:end="223:23">ret</name> <operator pos:start="223:25" pos:end="223:25">&lt;</operator> <literal type="number" pos:start="223:27" pos:end="223:27">0</literal></expr>)</condition> <block pos:start="223:30" pos:end="245:17">{<block_content pos:start="227:21" pos:end="243:35">

                    <comment type="block" pos:start="225:21" pos:end="225:48">/* Secondary table lookup */</comment>

                    <if_stmt pos:start="227:21" pos:end="235:62"><if pos:start="227:21" pos:end="235:62">if <condition pos:start="227:24" pos:end="227:44">(<expr pos:start="227:25" pos:end="227:43"><name pos:start="227:25" pos:end="227:29">eaddr</name> <operator pos:start="227:31" pos:end="227:32">!=</operator> <literal type="number" pos:start="227:34" pos:end="227:43">0xEFFFFFFF</literal></expr>)</condition><block type="pseudo" pos:start="229:25" pos:end="235:62"><block_content pos:start="229:25" pos:end="235:62">

                        <expr_stmt pos:start="229:25" pos:end="235:62"><expr pos:start="229:25" pos:end="235:61"><call pos:start="229:25" pos:end="235:61"><name pos:start="229:25" pos:end="229:31">LOG_MMU</name><argument_list pos:start="229:32" pos:end="235:61">(<argument pos:start="229:33" pos:end="233:63"><expr pos:start="229:33" pos:end="233:63"><literal type="string" pos:start="229:33" pos:end="229:41">"1 sdr1="</literal> <name pos:start="229:43" pos:end="229:56">TARGET_FMT_plx</name> <literal type="string" pos:start="229:58" pos:end="229:65">" vsid="</literal> <name pos:start="229:67" pos:end="229:79">TARGET_FMT_lx</name> <literal type="string" pos:start="229:81" pos:end="229:83">" "</literal>

                                <literal type="string" pos:start="231:33" pos:end="231:38">"api="</literal> <name pos:start="231:40" pos:end="231:52">TARGET_FMT_lx</name> <literal type="string" pos:start="231:54" pos:end="231:61">" hash="</literal> <name pos:start="231:63" pos:end="231:76">TARGET_FMT_plx</name>

                                <literal type="string" pos:start="233:33" pos:end="233:43">" pg_addr="</literal> <name pos:start="233:45" pos:end="233:58">TARGET_FMT_plx</name> <literal type="string" pos:start="233:60" pos:end="233:63">"\n"</literal></expr></argument>, <argument pos:start="233:66" pos:end="233:68"><expr pos:start="233:66" pos:end="233:68"><name pos:start="233:66" pos:end="233:68">sdr</name></expr></argument>, <argument pos:start="233:71" pos:end="233:74"><expr pos:start="233:71" pos:end="233:74"><name pos:start="233:71" pos:end="233:74">vsid</name></expr></argument>,

                                <argument pos:start="235:33" pos:end="235:37"><expr pos:start="235:33" pos:end="235:37"><name pos:start="235:33" pos:end="235:37">pgidx</name></expr></argument>, <argument pos:start="235:40" pos:end="235:43"><expr pos:start="235:40" pos:end="235:43"><name pos:start="235:40" pos:end="235:43">hash</name></expr></argument>, <argument pos:start="235:46" pos:end="235:60"><expr pos:start="235:46" pos:end="235:60"><name pos:start="235:46" pos:end="235:60"><name pos:start="235:46" pos:end="235:48">ctx</name><operator pos:start="235:49" pos:end="235:50">-&gt;</operator><name pos:start="235:51" pos:end="235:57">pg_addr</name><index pos:start="235:58" pos:end="235:60">[<expr pos:start="235:59" pos:end="235:59"><literal type="number" pos:start="235:59" pos:end="235:59">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="237:21" pos:end="239:54"><expr pos:start="237:21" pos:end="239:53"><name pos:start="237:21" pos:end="237:24">ret2</name> <operator pos:start="237:26" pos:end="237:26">=</operator> <call pos:start="237:28" pos:end="239:53"><name pos:start="237:28" pos:end="237:35">find_pte</name><argument_list pos:start="237:36" pos:end="239:53">(<argument pos:start="237:37" pos:end="237:39"><expr pos:start="237:37" pos:end="237:39"><name pos:start="237:37" pos:end="237:39">env</name></expr></argument>, <argument pos:start="237:42" pos:end="237:44"><expr pos:start="237:42" pos:end="237:44"><name pos:start="237:42" pos:end="237:44">ctx</name></expr></argument>, <argument pos:start="237:47" pos:end="237:47"><expr pos:start="237:47" pos:end="237:47"><literal type="number" pos:start="237:47" pos:end="237:47">1</literal></expr></argument>, <argument pos:start="237:50" pos:end="237:51"><expr pos:start="237:50" pos:end="237:51"><name pos:start="237:50" pos:end="237:51">rw</name></expr></argument>, <argument pos:start="237:54" pos:end="237:57"><expr pos:start="237:54" pos:end="237:57"><name pos:start="237:54" pos:end="237:57">type</name></expr></argument>,

                                    <argument pos:start="239:37" pos:end="239:52"><expr pos:start="239:37" pos:end="239:52"><name pos:start="239:37" pos:end="239:52">target_page_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="241:21" pos:end="243:35"><if pos:start="241:21" pos:end="243:35">if <condition pos:start="241:24" pos:end="241:35">(<expr pos:start="241:25" pos:end="241:34"><name pos:start="241:25" pos:end="241:28">ret2</name> <operator pos:start="241:30" pos:end="241:31">!=</operator> <operator pos:start="241:33" pos:end="241:33">-</operator><literal type="number" pos:start="241:34" pos:end="241:34">1</literal></expr>)</condition><block type="pseudo" pos:start="243:25" pos:end="243:35"><block_content pos:start="243:25" pos:end="243:35">

                        <expr_stmt pos:start="243:25" pos:end="243:35"><expr pos:start="243:25" pos:end="243:34"><name pos:start="243:25" pos:end="243:27">ret</name> <operator pos:start="243:29" pos:end="243:29">=</operator> <name pos:start="243:31" pos:end="243:34">ret2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

<cpp:if pos:start="249:1" pos:end="249:30">#<cpp:directive pos:start="249:2" pos:end="249:3">if</cpp:directive> <expr pos:start="249:5" pos:end="249:30"><call pos:start="249:5" pos:end="249:30"><name pos:start="249:5" pos:end="249:11">defined</name> <argument_list pos:start="249:13" pos:end="249:30">(<argument pos:start="249:14" pos:end="249:29"><expr pos:start="249:14" pos:end="249:29"><name pos:start="249:14" pos:end="249:29">DUMP_PAGE_TABLES</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="251:13" pos:end="286:0"><if pos:start="251:13" pos:end="286:0">if <condition pos:start="251:16" pos:end="251:35">(<expr pos:start="251:17" pos:end="251:34"><call pos:start="251:17" pos:end="251:34"><name pos:start="251:17" pos:end="251:32">qemu_log_enabled</name><argument_list pos:start="251:33" pos:end="251:34">()</argument_list></call></expr>)</condition> <block pos:start="251:37" pos:end="286:0">{<block_content pos:start="253:17" pos:end="281:17">

                <decl_stmt pos:start="253:17" pos:end="253:43"><decl pos:start="253:17" pos:end="253:42"><type pos:start="253:17" pos:end="253:34"><name pos:start="253:17" pos:end="253:34">target_phys_addr_t</name></type> <name pos:start="253:36" pos:end="253:42">curaddr</name></decl>;</decl_stmt>

                <decl_stmt pos:start="255:17" pos:end="255:40"><decl pos:start="255:17" pos:end="255:27"><type pos:start="255:17" pos:end="255:24"><name pos:start="255:17" pos:end="255:24">uint32_t</name></type> <name pos:start="255:26" pos:end="255:27">a0</name></decl>, <decl pos:start="255:30" pos:end="255:31"><type ref="prev" pos:start="255:17" pos:end="255:24"/><name pos:start="255:30" pos:end="255:31">a1</name></decl>, <decl pos:start="255:34" pos:end="255:35"><type ref="prev" pos:start="255:17" pos:end="255:24"/><name pos:start="255:34" pos:end="255:35">a2</name></decl>, <decl pos:start="255:38" pos:end="255:39"><type ref="prev" pos:start="255:17" pos:end="255:24"/><name pos:start="255:38" pos:end="255:39">a3</name></decl>;</decl_stmt>

                <expr_stmt pos:start="257:17" pos:end="259:49"><expr pos:start="257:17" pos:end="259:48"><call pos:start="257:17" pos:end="259:48"><name pos:start="257:17" pos:end="257:24">qemu_log</name><argument_list pos:start="257:25" pos:end="259:48">(<argument pos:start="257:26" pos:end="259:29"><expr pos:start="257:26" pos:end="259:29"><literal type="string" pos:start="257:26" pos:end="257:39">"Page table: "</literal> <name pos:start="257:41" pos:end="257:54">TARGET_FMT_plx</name> <literal type="string" pos:start="257:56" pos:end="257:62">" len "</literal> <name pos:start="257:64" pos:end="257:77">TARGET_FMT_plx</name>

                         <literal type="string" pos:start="259:26" pos:end="259:29">"\n"</literal></expr></argument>, <argument pos:start="259:32" pos:end="259:34"><expr pos:start="259:32" pos:end="259:34"><name pos:start="259:32" pos:end="259:34">sdr</name></expr></argument>, <argument pos:start="259:37" pos:end="259:47"><expr pos:start="259:37" pos:end="259:47"><name pos:start="259:37" pos:end="259:40">mask</name> <operator pos:start="259:42" pos:end="259:42">+</operator> <literal type="number" pos:start="259:44" pos:end="259:47">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="261:17" pos:end="281:17">for <control pos:start="261:21" pos:end="263:35">(<init pos:start="261:22" pos:end="261:35"><expr pos:start="261:22" pos:end="261:34"><name pos:start="261:22" pos:end="261:28">curaddr</name> <operator pos:start="261:30" pos:end="261:30">=</operator> <name pos:start="261:32" pos:end="261:34">sdr</name></expr>;</init> <condition pos:start="261:37" pos:end="261:66"><expr pos:start="261:37" pos:end="261:65"><name pos:start="261:37" pos:end="261:43">curaddr</name> <operator pos:start="261:45" pos:end="261:45">&lt;</operator> <operator pos:start="261:47" pos:end="261:47">(</operator><name pos:start="261:48" pos:end="261:50">sdr</name> <operator pos:start="261:52" pos:end="261:52">+</operator> <name pos:start="261:54" pos:end="261:57">mask</name> <operator pos:start="261:59" pos:end="261:59">+</operator> <literal type="number" pos:start="261:61" pos:end="261:64">0x80</literal><operator pos:start="261:65" pos:end="261:65">)</operator></expr>;</condition>

                     <incr pos:start="263:22" pos:end="263:34"><expr pos:start="263:22" pos:end="263:34"><name pos:start="263:22" pos:end="263:28">curaddr</name> <operator pos:start="263:30" pos:end="263:31">+=</operator> <literal type="number" pos:start="263:33" pos:end="263:34">16</literal></expr></incr>)</control> <block pos:start="263:37" pos:end="281:17">{<block_content pos:start="265:21" pos:end="279:21">

                    <expr_stmt pos:start="265:21" pos:end="265:43"><expr pos:start="265:21" pos:end="265:42"><name pos:start="265:21" pos:end="265:22">a0</name> <operator pos:start="265:24" pos:end="265:24">=</operator> <call pos:start="265:26" pos:end="265:42"><name pos:start="265:26" pos:end="265:33">ldl_phys</name><argument_list pos:start="265:34" pos:end="265:42">(<argument pos:start="265:35" pos:end="265:41"><expr pos:start="265:35" pos:end="265:41"><name pos:start="265:35" pos:end="265:41">curaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="267:21" pos:end="267:47"><expr pos:start="267:21" pos:end="267:46"><name pos:start="267:21" pos:end="267:22">a1</name> <operator pos:start="267:24" pos:end="267:24">=</operator> <call pos:start="267:26" pos:end="267:46"><name pos:start="267:26" pos:end="267:33">ldl_phys</name><argument_list pos:start="267:34" pos:end="267:46">(<argument pos:start="267:35" pos:end="267:45"><expr pos:start="267:35" pos:end="267:45"><name pos:start="267:35" pos:end="267:41">curaddr</name> <operator pos:start="267:43" pos:end="267:43">+</operator> <literal type="number" pos:start="267:45" pos:end="267:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="269:21" pos:end="269:47"><expr pos:start="269:21" pos:end="269:46"><name pos:start="269:21" pos:end="269:22">a2</name> <operator pos:start="269:24" pos:end="269:24">=</operator> <call pos:start="269:26" pos:end="269:46"><name pos:start="269:26" pos:end="269:33">ldl_phys</name><argument_list pos:start="269:34" pos:end="269:46">(<argument pos:start="269:35" pos:end="269:45"><expr pos:start="269:35" pos:end="269:45"><name pos:start="269:35" pos:end="269:41">curaddr</name> <operator pos:start="269:43" pos:end="269:43">+</operator> <literal type="number" pos:start="269:45" pos:end="269:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="271:21" pos:end="271:48"><expr pos:start="271:21" pos:end="271:47"><name pos:start="271:21" pos:end="271:22">a3</name> <operator pos:start="271:24" pos:end="271:24">=</operator> <call pos:start="271:26" pos:end="271:47"><name pos:start="271:26" pos:end="271:33">ldl_phys</name><argument_list pos:start="271:34" pos:end="271:47">(<argument pos:start="271:35" pos:end="271:46"><expr pos:start="271:35" pos:end="271:46"><name pos:start="271:35" pos:end="271:41">curaddr</name> <operator pos:start="271:43" pos:end="271:43">+</operator> <literal type="number" pos:start="271:45" pos:end="271:46">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="273:21" pos:end="279:21"><if pos:start="273:21" pos:end="279:21">if <condition pos:start="273:24" pos:end="273:65">(<expr pos:start="273:25" pos:end="273:64"><name pos:start="273:25" pos:end="273:26">a0</name> <operator pos:start="273:28" pos:end="273:29">!=</operator> <literal type="number" pos:start="273:31" pos:end="273:31">0</literal> <operator pos:start="273:33" pos:end="273:34">||</operator> <name pos:start="273:36" pos:end="273:37">a1</name> <operator pos:start="273:39" pos:end="273:40">!=</operator> <literal type="number" pos:start="273:42" pos:end="273:42">0</literal> <operator pos:start="273:44" pos:end="273:45">||</operator> <name pos:start="273:47" pos:end="273:48">a2</name> <operator pos:start="273:50" pos:end="273:51">!=</operator> <literal type="number" pos:start="273:53" pos:end="273:53">0</literal> <operator pos:start="273:55" pos:end="273:56">||</operator> <name pos:start="273:58" pos:end="273:59">a3</name> <operator pos:start="273:61" pos:end="273:62">!=</operator> <literal type="number" pos:start="273:64" pos:end="273:64">0</literal></expr>)</condition> <block pos:start="273:67" pos:end="279:21">{<block_content pos:start="275:25" pos:end="277:58">

                        <expr_stmt pos:start="275:25" pos:end="277:58"><expr pos:start="275:25" pos:end="277:57"><call pos:start="275:25" pos:end="277:57"><name pos:start="275:25" pos:end="275:32">qemu_log</name><argument_list pos:start="275:33" pos:end="277:57">(<argument pos:start="275:34" pos:end="275:73"><expr pos:start="275:34" pos:end="275:73"><name pos:start="275:34" pos:end="275:47">TARGET_FMT_plx</name> <literal type="string" pos:start="275:49" pos:end="275:73">": %08x %08x %08x %08x\n"</literal></expr></argument>,

                                 <argument pos:start="277:34" pos:end="277:40"><expr pos:start="277:34" pos:end="277:40"><name pos:start="277:34" pos:end="277:40">curaddr</name></expr></argument>, <argument pos:start="277:43" pos:end="277:44"><expr pos:start="277:43" pos:end="277:44"><name pos:start="277:43" pos:end="277:44">a0</name></expr></argument>, <argument pos:start="277:47" pos:end="277:48"><expr pos:start="277:47" pos:end="277:48"><name pos:start="277:47" pos:end="277:48">a1</name></expr></argument>, <argument pos:start="277:51" pos:end="277:52"><expr pos:start="277:51" pos:end="277:52"><name pos:start="277:51" pos:end="277:52">a2</name></expr></argument>, <argument pos:start="277:55" pos:end="277:56"><expr pos:start="277:55" pos:end="277:56"><name pos:start="277:55" pos:end="277:56">a3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="285:1" pos:end="285:6">#<cpp:directive pos:start="285:2" pos:end="285:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <else pos:start="287:11" pos:end="293:9">else <block pos:start="287:16" pos:end="293:9">{<block_content pos:start="289:13" pos:end="291:21">

            <expr_stmt pos:start="289:13" pos:end="289:43"><expr pos:start="289:13" pos:end="289:42"><call pos:start="289:13" pos:end="289:42"><name pos:start="289:13" pos:end="289:19">LOG_MMU</name><argument_list pos:start="289:20" pos:end="289:42">(<argument pos:start="289:21" pos:end="289:41"><expr pos:start="289:21" pos:end="289:41"><literal type="string" pos:start="289:21" pos:end="289:41">"No access allowed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:21"><expr pos:start="291:13" pos:end="291:20"><name pos:start="291:13" pos:end="291:15">ret</name> <operator pos:start="291:17" pos:end="291:17">=</operator> <operator pos:start="291:19" pos:end="291:19">-</operator><literal type="number" pos:start="291:20" pos:end="291:20">3</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="295:7" pos:end="369:5">else <block pos:start="295:12" pos:end="369:5">{<block_content pos:start="297:9" pos:end="367:9">

        <expr_stmt pos:start="297:9" pos:end="297:37"><expr pos:start="297:9" pos:end="297:36"><call pos:start="297:9" pos:end="297:36"><name pos:start="297:9" pos:end="297:15">LOG_MMU</name><argument_list pos:start="297:16" pos:end="297:36">(<argument pos:start="297:17" pos:end="297:35"><expr pos:start="297:17" pos:end="297:35"><literal type="string" pos:start="297:17" pos:end="297:35">"direct store...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="299:9" pos:end="299:63">/* Direct-store segment : absolutely *BUGGY* for now */</comment>

        <switch pos:start="301:9" pos:end="355:9">switch <condition pos:start="301:16" pos:end="301:21">(<expr pos:start="301:17" pos:end="301:20"><name pos:start="301:17" pos:end="301:20">type</name></expr>)</condition> <block pos:start="301:23" pos:end="355:9">{<block_content pos:start="303:9" pos:end="353:22">

        <case pos:start="303:9" pos:end="303:24">case <expr pos:start="303:14" pos:end="303:23"><name pos:start="303:14" pos:end="303:23">ACCESS_INT</name></expr>:</case>

            <comment type="block" pos:start="305:13" pos:end="305:58">/* Integer load/store : only access allowed */</comment>

            <break pos:start="307:13" pos:end="307:18">break;</break>

        <case pos:start="309:9" pos:end="309:25">case <expr pos:start="309:14" pos:end="309:24"><name pos:start="309:14" pos:end="309:24">ACCESS_CODE</name></expr>:</case>

            <comment type="block" pos:start="311:13" pos:end="311:64">/* No code fetch is allowed in direct-store areas */</comment>

            <return pos:start="313:13" pos:end="313:22">return <expr pos:start="313:20" pos:end="313:21"><operator pos:start="313:20" pos:end="313:20">-</operator><literal type="number" pos:start="313:21" pos:end="313:21">4</literal></expr>;</return>

        <case pos:start="315:9" pos:end="315:26">case <expr pos:start="315:14" pos:end="315:25"><name pos:start="315:14" pos:end="315:25">ACCESS_FLOAT</name></expr>:</case>

            <comment type="block" pos:start="317:13" pos:end="317:43">/* Floating point load/store */</comment>

            <return pos:start="319:13" pos:end="319:22">return <expr pos:start="319:20" pos:end="319:21"><operator pos:start="319:20" pos:end="319:20">-</operator><literal type="number" pos:start="319:21" pos:end="319:21">4</literal></expr>;</return>

        <case pos:start="321:9" pos:end="321:24">case <expr pos:start="321:14" pos:end="321:23"><name pos:start="321:14" pos:end="321:23">ACCESS_RES</name></expr>:</case>

            <comment type="block" pos:start="323:13" pos:end="323:40">/* lwarx, ldarx or srwcx. */</comment>

            <return pos:start="325:13" pos:end="325:22">return <expr pos:start="325:20" pos:end="325:21"><operator pos:start="325:20" pos:end="325:20">-</operator><literal type="number" pos:start="325:21" pos:end="325:21">4</literal></expr>;</return>

        <case pos:start="327:9" pos:end="327:26">case <expr pos:start="327:14" pos:end="327:25"><name pos:start="327:14" pos:end="327:25">ACCESS_CACHE</name></expr>:</case>

            <comment type="block" pos:start="329:13" pos:end="329:70">/* dcba, dcbt, dcbtst, dcbf, dcbi, dcbst, dcbz, or icbi */</comment>

            <comment type="block" pos:start="331:13" pos:end="335:15">/* Should make the instruction do no-op.

             * As it already do no-op, it's quite easy :-)

             */</comment>

            <expr_stmt pos:start="337:13" pos:end="337:31"><expr pos:start="337:13" pos:end="337:30"><name pos:start="337:13" pos:end="337:22"><name pos:start="337:13" pos:end="337:15">ctx</name><operator pos:start="337:16" pos:end="337:17">-&gt;</operator><name pos:start="337:18" pos:end="337:22">raddr</name></name> <operator pos:start="337:24" pos:end="337:24">=</operator> <name pos:start="337:26" pos:end="337:30">eaddr</name></expr>;</expr_stmt>

            <return pos:start="339:13" pos:end="339:21">return <expr pos:start="339:20" pos:end="339:20"><literal type="number" pos:start="339:20" pos:end="339:20">0</literal></expr>;</return>

        <case pos:start="341:9" pos:end="341:24">case <expr pos:start="341:14" pos:end="341:23"><name pos:start="341:14" pos:end="341:23">ACCESS_EXT</name></expr>:</case>

            <comment type="block" pos:start="343:13" pos:end="343:32">/* eciwx or ecowx */</comment>

            <return pos:start="345:13" pos:end="345:22">return <expr pos:start="345:20" pos:end="345:21"><operator pos:start="345:20" pos:end="345:20">-</operator><literal type="number" pos:start="345:21" pos:end="345:21">4</literal></expr>;</return>

        <default pos:start="347:9" pos:end="347:16">default:</default>

            <expr_stmt pos:start="349:13" pos:end="351:49"><expr pos:start="349:13" pos:end="351:48"><call pos:start="349:13" pos:end="351:48"><name pos:start="349:13" pos:end="349:20">qemu_log</name><argument_list pos:start="349:21" pos:end="351:48">(<argument pos:start="349:22" pos:end="351:47"><expr pos:start="349:22" pos:end="351:47"><literal type="string" pos:start="349:22" pos:end="349:58">"ERROR: instruction should not need "</literal>

                        <literal type="string" pos:start="351:25" pos:end="351:47">"address translation\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="353:13" pos:end="353:22">return <expr pos:start="353:20" pos:end="353:21"><operator pos:start="353:20" pos:end="353:20">-</operator><literal type="number" pos:start="353:21" pos:end="353:21">4</literal></expr>;</return>

        </block_content>}</block></switch>

        <if_stmt pos:start="357:9" pos:end="367:9"><if pos:start="357:9" pos:end="363:9">if <condition pos:start="357:12" pos:end="357:69">(<expr pos:start="357:13" pos:end="357:68"><operator pos:start="357:13" pos:end="357:13">(</operator><name pos:start="357:14" pos:end="357:15">rw</name> <operator pos:start="357:17" pos:end="357:18">==</operator> <literal type="number" pos:start="357:20" pos:end="357:20">1</literal> <operator pos:start="357:22" pos:end="357:23">||</operator> <name pos:start="357:25" pos:end="357:32"><name pos:start="357:25" pos:end="357:27">ctx</name><operator pos:start="357:28" pos:end="357:29">-&gt;</operator><name pos:start="357:30" pos:end="357:32">key</name></name> <operator pos:start="357:34" pos:end="357:35">!=</operator> <literal type="number" pos:start="357:37" pos:end="357:37">1</literal><operator pos:start="357:38" pos:end="357:38">)</operator> <operator pos:start="357:40" pos:end="357:41">&amp;&amp;</operator> <operator pos:start="357:43" pos:end="357:43">(</operator><name pos:start="357:44" pos:end="357:45">rw</name> <operator pos:start="357:47" pos:end="357:48">==</operator> <literal type="number" pos:start="357:50" pos:end="357:50">0</literal> <operator pos:start="357:52" pos:end="357:53">||</operator> <name pos:start="357:55" pos:end="357:62"><name pos:start="357:55" pos:end="357:57">ctx</name><operator pos:start="357:58" pos:end="357:59">-&gt;</operator><name pos:start="357:60" pos:end="357:62">key</name></name> <operator pos:start="357:64" pos:end="357:65">!=</operator> <literal type="number" pos:start="357:67" pos:end="357:67">0</literal><operator pos:start="357:68" pos:end="357:68">)</operator></expr>)</condition> <block pos:start="357:71" pos:end="363:9">{<block_content pos:start="359:13" pos:end="361:20">

            <expr_stmt pos:start="359:13" pos:end="359:31"><expr pos:start="359:13" pos:end="359:30"><name pos:start="359:13" pos:end="359:22"><name pos:start="359:13" pos:end="359:15">ctx</name><operator pos:start="359:16" pos:end="359:17">-&gt;</operator><name pos:start="359:18" pos:end="359:22">raddr</name></name> <operator pos:start="359:24" pos:end="359:24">=</operator> <name pos:start="359:26" pos:end="359:30">eaddr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:20"><expr pos:start="361:13" pos:end="361:19"><name pos:start="361:13" pos:end="361:15">ret</name> <operator pos:start="361:17" pos:end="361:17">=</operator> <literal type="number" pos:start="361:19" pos:end="361:19">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="363:11" pos:end="367:9">else <block pos:start="363:16" pos:end="367:9">{<block_content pos:start="365:13" pos:end="365:21">

            <expr_stmt pos:start="365:13" pos:end="365:21"><expr pos:start="365:13" pos:end="365:20"><name pos:start="365:13" pos:end="365:15">ret</name> <operator pos:start="365:17" pos:end="365:17">=</operator> <operator pos:start="365:19" pos:end="365:19">-</operator><literal type="number" pos:start="365:20" pos:end="365:20">2</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="373:5" pos:end="373:15">return <expr pos:start="373:12" pos:end="373:14"><name pos:start="373:12" pos:end="373:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
