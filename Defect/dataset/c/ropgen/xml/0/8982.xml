<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8982.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:27">vnc_tls_push</name><parameter_list pos:start="1:28" pos:end="5:39">(<parameter pos:start="1:29" pos:end="1:60"><decl pos:start="1:29" pos:end="1:60"><type pos:start="1:29" pos:end="1:60"><name pos:start="1:29" pos:end="1:50">gnutls_transport_ptr_t</name></type> <name pos:start="1:52" pos:end="1:60">transport</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:44"><decl pos:start="3:29" pos:end="3:44"><type pos:start="3:29" pos:end="3:44"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:38">void</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:44">data</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:38"><decl pos:start="5:29" pos:end="5:38"><type pos:start="5:29" pos:end="5:38"><name pos:start="5:29" pos:end="5:34">size_t</name></type> <name pos:start="5:36" pos:end="5:38">len</name></decl></parameter>)</parameter_list> <block pos:start="5:41" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:15">

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:19">VncState</name></name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">vs</name> <init pos:start="7:25" pos:end="7:54">= <expr pos:start="7:27" pos:end="7:54"><operator pos:start="7:27" pos:end="7:27">(</operator>struct <name pos:start="7:35" pos:end="7:42">VncState</name> <operator pos:start="7:44" pos:end="7:44">*</operator><operator pos:start="7:45" pos:end="7:45">)</operator><name pos:start="7:46" pos:end="7:54">transport</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



 <label pos:start="13:2" pos:end="13:7"><name pos:start="13:2" pos:end="13:6">retry</name>:</label>

    <expr_stmt pos:start="15:5" pos:end="15:40"><expr pos:start="15:5" pos:end="15:39"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:39"><name pos:start="15:11" pos:end="15:14">send</name><argument_list pos:start="15:15" pos:end="15:39">(<argument pos:start="15:16" pos:end="15:24"><expr pos:start="15:16" pos:end="15:24"><name pos:start="15:16" pos:end="15:24"><name pos:start="15:16" pos:end="15:17">vs</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:24">csock</name></name></expr></argument>, <argument pos:start="15:27" pos:end="15:30"><expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">data</name></expr></argument>, <argument pos:start="15:33" pos:end="15:35"><expr pos:start="15:33" pos:end="15:35"><name pos:start="15:33" pos:end="15:35">len</name></expr></argument>, <argument pos:start="15:38" pos:end="15:38"><expr pos:start="15:38" pos:end="15:38"><literal type="number" pos:start="15:38" pos:end="15:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">&lt;</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>)</condition> <block pos:start="17:18" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:18">

	<if_stmt pos:start="19:9" pos:end="21:23"><if pos:start="19:9" pos:end="21:23">if <condition pos:start="19:12" pos:end="19:27">(<expr pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:17">errno</name> <operator pos:start="19:19" pos:end="19:20">==</operator> <name pos:start="19:22" pos:end="19:26">EINTR</name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:23"><block_content pos:start="21:13" pos:end="21:23">

	    <goto pos:start="21:13" pos:end="21:23">goto <name pos:start="21:18" pos:end="21:22">retry</name>;</goto></block_content></block></if></if_stmt>

	<return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="27:5" pos:end="27:15">return <expr pos:start="27:12" pos:end="27:14"><name pos:start="27:12" pos:end="27:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
