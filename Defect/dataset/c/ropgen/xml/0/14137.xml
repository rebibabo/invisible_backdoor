<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14137.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">wv_read_header</name><parameter_list pos:start="1:26" pos:end="1:45">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">WVContext</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">wc</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:6">wc</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:20">block_parsed</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="31:5">for <control pos:start="17:9" pos:end="17:12">(<init pos:start="17:10" pos:end="17:10">;</init><condition pos:start="17:11" pos:end="17:11">;</condition><incr/>)</control> <block pos:start="17:14" pos:end="31:5">{<block_content pos:start="19:9" pos:end="29:18">

        <if_stmt pos:start="19:9" pos:end="21:23"><if pos:start="19:9" pos:end="21:23">if <condition pos:start="19:12" pos:end="19:55">(<expr pos:start="19:13" pos:end="19:54"><operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:16">ret</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <call pos:start="19:20" pos:end="19:49"><name pos:start="19:20" pos:end="19:39">wv_read_block_header</name><argument_list pos:start="19:40" pos:end="19:49">(<argument pos:start="19:41" pos:end="19:41"><expr pos:start="19:41" pos:end="19:41"><name pos:start="19:41" pos:end="19:41">s</name></expr></argument>, <argument pos:start="19:44" pos:end="19:45"><expr pos:start="19:44" pos:end="19:45"><name pos:start="19:44" pos:end="19:45">pb</name></expr></argument>, <argument pos:start="19:48" pos:end="19:48"><expr pos:start="19:48" pos:end="19:48"><literal type="number" pos:start="19:48" pos:end="19:48">0</literal></expr></argument>)</argument_list></call><operator pos:start="19:50" pos:end="19:50">)</operator> <operator pos:start="19:52" pos:end="19:52">&lt;</operator> <literal type="number" pos:start="19:54" pos:end="19:54">0</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:23"><block_content pos:start="21:13" pos:end="21:23">

            <return pos:start="21:13" pos:end="21:23">return <expr pos:start="21:20" pos:end="21:22"><name pos:start="21:20" pos:end="21:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="29:18"><if pos:start="23:9" pos:end="25:44">if <condition pos:start="23:12" pos:end="23:32">(<expr pos:start="23:13" pos:end="23:31"><operator pos:start="23:13" pos:end="23:13">!</operator><call pos:start="23:14" pos:end="23:31"><name pos:start="23:14" pos:end="23:20">AV_RN32</name><argument_list pos:start="23:21" pos:end="23:31">(<argument pos:start="23:22" pos:end="23:30"><expr pos:start="23:22" pos:end="23:30"><name pos:start="23:22" pos:end="23:30"><name pos:start="23:22" pos:end="23:23">wc</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:30">extra</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:44"><block_content pos:start="25:13" pos:end="25:44">

            <expr_stmt pos:start="25:13" pos:end="25:44"><expr pos:start="25:13" pos:end="25:43"><call pos:start="25:13" pos:end="25:43"><name pos:start="25:13" pos:end="25:21">avio_skip</name><argument_list pos:start="25:22" pos:end="25:43">(<argument pos:start="25:23" pos:end="25:24"><expr pos:start="25:23" pos:end="25:24"><name pos:start="25:23" pos:end="25:24">pb</name></expr></argument>, <argument pos:start="25:27" pos:end="25:42"><expr pos:start="25:27" pos:end="25:42"><name pos:start="25:27" pos:end="25:37"><name pos:start="25:27" pos:end="25:28">wc</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:37">blksize</name></name> <operator pos:start="25:39" pos:end="25:39">-</operator> <literal type="number" pos:start="25:41" pos:end="25:42">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="27:9" pos:end="29:18">else<block type="pseudo" pos:start="29:13" pos:end="29:18"><block_content pos:start="29:13" pos:end="29:18">

            <break pos:start="29:13" pos:end="29:18">break;</break></block_content></block></else></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="35:5" pos:end="35:48">/* now we are ready: build format streams */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:38"><expr pos:start="37:5" pos:end="37:37"><name pos:start="37:5" pos:end="37:6">st</name> <operator pos:start="37:8" pos:end="37:8">=</operator> <call pos:start="37:10" pos:end="37:37"><name pos:start="37:10" pos:end="37:28">avformat_new_stream</name><argument_list pos:start="37:29" pos:end="37:37">(<argument pos:start="37:30" pos:end="37:30"><expr pos:start="37:30" pos:end="37:30"><name pos:start="37:30" pos:end="37:30">s</name></expr></argument>, <argument pos:start="37:33" pos:end="37:36"><expr pos:start="37:33" pos:end="37:36"><name pos:start="37:33" pos:end="37:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:31"><if pos:start="39:5" pos:end="41:31">if <condition pos:start="39:8" pos:end="39:12">(<expr pos:start="39:9" pos:end="39:11"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:11">st</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:31"><block_content pos:start="41:9" pos:end="41:31">

        <return pos:start="41:9" pos:end="41:31">return <expr pos:start="41:16" pos:end="41:30"><call pos:start="41:16" pos:end="41:30"><name pos:start="41:16" pos:end="41:22">AVERROR</name><argument_list pos:start="41:23" pos:end="41:30">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:58"><expr pos:start="43:5" pos:end="43:57"><name pos:start="43:5" pos:end="43:25"><name pos:start="43:5" pos:end="43:6">st</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:13">codec</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:25">codec_type</name></name>            <operator pos:start="43:38" pos:end="43:38">=</operator> <name pos:start="43:40" pos:end="43:57">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:59"><expr pos:start="45:5" pos:end="45:58"><name pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:6">st</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:13">codec</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:23">codec_id</name></name>              <operator pos:start="45:38" pos:end="45:38">=</operator> <name pos:start="45:40" pos:end="45:58">AV_CODEC_ID_WAVPACK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:48"><expr pos:start="47:5" pos:end="47:47"><name pos:start="47:5" pos:end="47:23"><name pos:start="47:5" pos:end="47:6">st</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:13">codec</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:23">channels</name></name>              <operator pos:start="47:38" pos:end="47:38">=</operator> <name pos:start="47:40" pos:end="47:47"><name pos:start="47:40" pos:end="47:41">wc</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:47">chan</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:50"><expr pos:start="49:5" pos:end="49:49"><name pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:6">st</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:13">codec</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:29">channel_layout</name></name>        <operator pos:start="49:38" pos:end="49:38">=</operator> <name pos:start="49:40" pos:end="49:49"><name pos:start="49:40" pos:end="49:41">wc</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:49">chmask</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:48"><expr pos:start="51:5" pos:end="51:47"><name pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:6">st</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:13">codec</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:26">sample_rate</name></name>           <operator pos:start="51:38" pos:end="51:38">=</operator> <name pos:start="51:40" pos:end="51:47"><name pos:start="51:40" pos:end="51:41">wc</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:47">rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:47"><expr pos:start="53:5" pos:end="53:46"><name pos:start="53:5" pos:end="53:36"><name pos:start="53:5" pos:end="53:6">st</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:13">codec</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:36">bits_per_coded_sample</name></name> <operator pos:start="53:38" pos:end="53:38">=</operator> <name pos:start="53:40" pos:end="53:46"><name pos:start="53:40" pos:end="53:41">wc</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:46">bpp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:45"><expr pos:start="55:5" pos:end="55:44"><call pos:start="55:5" pos:end="55:44"><name pos:start="55:5" pos:end="55:23">avpriv_set_pts_info</name><argument_list pos:start="55:24" pos:end="55:44">(<argument pos:start="55:25" pos:end="55:26"><expr pos:start="55:25" pos:end="55:26"><name pos:start="55:25" pos:end="55:26">st</name></expr></argument>, <argument pos:start="55:29" pos:end="55:30"><expr pos:start="55:29" pos:end="55:30"><literal type="number" pos:start="55:29" pos:end="55:30">64</literal></expr></argument>, <argument pos:start="55:33" pos:end="55:33"><expr pos:start="55:33" pos:end="55:33"><literal type="number" pos:start="55:33" pos:end="55:33">1</literal></expr></argument>, <argument pos:start="55:36" pos:end="55:43"><expr pos:start="55:36" pos:end="55:43"><name pos:start="55:36" pos:end="55:43"><name pos:start="55:36" pos:end="55:37">wc</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:43">rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:23"><expr pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:6">st</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:18">start_time</name></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:33"><expr pos:start="59:5" pos:end="59:32"><name pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:6">st</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:16">duration</name></name>   <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:32"><name pos:start="59:22" pos:end="59:23">wc</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:32">samples</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="75:5"><if pos:start="63:5" pos:end="75:5">if <condition pos:start="63:8" pos:end="63:24">(<expr pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:13">pb</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:23">seekable</name></name></expr>)</condition> <block pos:start="63:26" pos:end="75:5">{<block_content pos:start="65:9" pos:end="73:40">

        <decl_stmt pos:start="65:9" pos:end="65:39"><decl pos:start="65:9" pos:end="65:38"><type pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:15">int64_t</name></type> <name pos:start="65:17" pos:end="65:19">cur</name> <init pos:start="65:21" pos:end="65:38">= <expr pos:start="65:23" pos:end="65:38"><call pos:start="65:23" pos:end="65:38"><name pos:start="65:23" pos:end="65:31">avio_tell</name><argument_list pos:start="65:32" pos:end="65:38">(<argument pos:start="65:33" pos:end="65:37"><expr pos:start="65:33" pos:end="65:37"><name pos:start="65:33" pos:end="65:37"><name pos:start="65:33" pos:end="65:33">s</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:37">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:47"><expr pos:start="67:9" pos:end="67:46"><name pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:10">wc</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:24">apetag_start</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <call pos:start="67:28" pos:end="67:46"><name pos:start="67:28" pos:end="67:43">ff_ape_parse_tag</name><argument_list pos:start="67:44" pos:end="67:46">(<argument pos:start="67:45" pos:end="67:45"><expr pos:start="67:45" pos:end="67:45"><name pos:start="67:45" pos:end="67:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:29"><if pos:start="69:9" pos:end="71:29">if <condition pos:start="69:12" pos:end="69:71">(<expr pos:start="69:13" pos:end="69:70"><operator pos:start="69:13" pos:end="69:13">!</operator><call pos:start="69:14" pos:end="69:70"><name pos:start="69:14" pos:end="69:24">av_dict_get</name><argument_list pos:start="69:25" pos:end="69:70">(<argument pos:start="69:26" pos:end="69:36"><expr pos:start="69:26" pos:end="69:36"><name pos:start="69:26" pos:end="69:36"><name pos:start="69:26" pos:end="69:26">s</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:36">metadata</name></name></expr></argument>, <argument pos:start="69:39" pos:end="69:40"><expr pos:start="69:39" pos:end="69:40"><literal type="string" pos:start="69:39" pos:end="69:40">""</literal></expr></argument>, <argument pos:start="69:43" pos:end="69:46"><expr pos:start="69:43" pos:end="69:46"><name pos:start="69:43" pos:end="69:46">NULL</name></expr></argument>, <argument pos:start="69:49" pos:end="69:69"><expr pos:start="69:49" pos:end="69:69"><name pos:start="69:49" pos:end="69:69">AV_DICT_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:29"><block_content pos:start="71:13" pos:end="71:29">

            <expr_stmt pos:start="71:13" pos:end="71:29"><expr pos:start="71:13" pos:end="71:28"><call pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:25">ff_id3v1_read</name><argument_list pos:start="71:26" pos:end="71:28">(<argument pos:start="71:27" pos:end="71:27"><expr pos:start="71:27" pos:end="71:27"><name pos:start="71:27" pos:end="71:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:40"><expr pos:start="73:9" pos:end="73:39"><call pos:start="73:9" pos:end="73:39"><name pos:start="73:9" pos:end="73:17">avio_seek</name><argument_list pos:start="73:18" pos:end="73:39">(<argument pos:start="73:19" pos:end="73:23"><expr pos:start="73:19" pos:end="73:23"><name pos:start="73:19" pos:end="73:23"><name pos:start="73:19" pos:end="73:19">s</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:23">pb</name></name></expr></argument>, <argument pos:start="73:26" pos:end="73:28"><expr pos:start="73:26" pos:end="73:28"><name pos:start="73:26" pos:end="73:28">cur</name></expr></argument>, <argument pos:start="73:31" pos:end="73:38"><expr pos:start="73:31" pos:end="73:38"><name pos:start="73:31" pos:end="73:38">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
