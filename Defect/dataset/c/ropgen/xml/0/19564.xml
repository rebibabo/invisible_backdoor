<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19564.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">tcg_out_movi</name><parameter_list pos:start="1:25" pos:end="3:57">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">TCGContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:47">TCGType</name></type> <name pos:start="1:49" pos:end="1:52">type</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:35"><decl pos:start="3:26" pos:end="3:35"><type pos:start="3:26" pos:end="3:35"><name pos:start="3:26" pos:end="3:31">TCGReg</name></type> <name pos:start="3:33" pos:end="3:35">ret</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:56"><decl pos:start="3:38" pos:end="3:56"><type pos:start="3:38" pos:end="3:56"><name pos:start="3:38" pos:end="3:52">tcg_target_long</name></type> <name pos:start="3:54" pos:end="3:56">arg</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="83:1">{<block_content pos:start="7:5" pos:end="81:5">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:19">tcg_target_long</name></type> <name pos:start="7:21" pos:end="7:22">hi</name></decl>, <decl pos:start="7:25" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:19"/><name pos:start="7:25" pos:end="7:26">lo</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:54">/* A 13-bit constant sign-extended to 64-bits.  */</comment>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:30">(<expr pos:start="13:9" pos:end="13:29"><call pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:20">check_fit_tl</name><argument_list pos:start="13:21" pos:end="13:29">(<argument pos:start="13:22" pos:end="13:24"><expr pos:start="13:22" pos:end="13:24"><name pos:start="13:22" pos:end="13:24">arg</name></expr></argument>, <argument pos:start="13:27" pos:end="13:28"><expr pos:start="13:27" pos:end="13:28"><literal type="number" pos:start="13:27" pos:end="13:28">13</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:32" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:40"><expr pos:start="15:9" pos:end="15:39"><call pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:26">tcg_out_movi_imm13</name><argument_list pos:start="15:27" pos:end="15:39">(<argument pos:start="15:28" pos:end="15:28"><expr pos:start="15:28" pos:end="15:28"><name pos:start="15:28" pos:end="15:28">s</name></expr></argument>, <argument pos:start="15:31" pos:end="15:33"><expr pos:start="15:31" pos:end="15:33"><name pos:start="15:31" pos:end="15:33">ret</name></expr></argument>, <argument pos:start="15:36" pos:end="15:38"><expr pos:start="15:36" pos:end="15:38"><name pos:start="15:36" pos:end="15:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:65">/* A 32-bit constant, or 32-bit zero-extended to 64-bits.  */</comment>

    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:53">(<expr pos:start="25:9" pos:end="25:52"><name pos:start="25:9" pos:end="25:12">type</name> <operator pos:start="25:14" pos:end="25:15">==</operator> <name pos:start="25:17" pos:end="25:28">TCG_TYPE_I32</name> <operator pos:start="25:30" pos:end="25:31">||</operator> <name pos:start="25:33" pos:end="25:35">arg</name> <operator pos:start="25:37" pos:end="25:38">==</operator> <operator pos:start="25:40" pos:end="25:40">(</operator><name pos:start="25:41" pos:end="25:48">uint32_t</name><operator pos:start="25:49" pos:end="25:49">)</operator><name pos:start="25:50" pos:end="25:52">arg</name></expr>)</condition> <block pos:start="25:55" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:15">

        <expr_stmt pos:start="27:9" pos:end="27:35"><expr pos:start="27:9" pos:end="27:34"><call pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:21">tcg_out_sethi</name><argument_list pos:start="27:22" pos:end="27:34">(<argument pos:start="27:23" pos:end="27:23"><expr pos:start="27:23" pos:end="27:23"><name pos:start="27:23" pos:end="27:23">s</name></expr></argument>, <argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:28">ret</name></expr></argument>, <argument pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><name pos:start="27:31" pos:end="27:33">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:24">(<expr pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:15">arg</name> <operator pos:start="29:17" pos:end="29:17">&amp;</operator> <literal type="number" pos:start="29:19" pos:end="29:23">0x3ff</literal></expr>)</condition> <block pos:start="29:26" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:63">

            <expr_stmt pos:start="31:13" pos:end="31:63"><expr pos:start="31:13" pos:end="31:62"><call pos:start="31:13" pos:end="31:62"><name pos:start="31:13" pos:end="31:26">tcg_out_arithi</name><argument_list pos:start="31:27" pos:end="31:62">(<argument pos:start="31:28" pos:end="31:28"><expr pos:start="31:28" pos:end="31:28"><name pos:start="31:28" pos:end="31:28">s</name></expr></argument>, <argument pos:start="31:31" pos:end="31:33"><expr pos:start="31:31" pos:end="31:33"><name pos:start="31:31" pos:end="31:33">ret</name></expr></argument>, <argument pos:start="31:36" pos:end="31:38"><expr pos:start="31:36" pos:end="31:38"><name pos:start="31:36" pos:end="31:38">ret</name></expr></argument>, <argument pos:start="31:41" pos:end="31:51"><expr pos:start="31:41" pos:end="31:51"><name pos:start="31:41" pos:end="31:43">arg</name> <operator pos:start="31:45" pos:end="31:45">&amp;</operator> <literal type="number" pos:start="31:47" pos:end="31:51">0x3ff</literal></expr></argument>, <argument pos:start="31:54" pos:end="31:61"><expr pos:start="31:54" pos:end="31:61"><name pos:start="31:54" pos:end="31:61">ARITH_OR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:54">/* A 32-bit constant sign-extended to 64-bits.  */</comment>

    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:30">(<expr pos:start="43:9" pos:end="43:29"><call pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:20">check_fit_tl</name><argument_list pos:start="43:21" pos:end="43:29">(<argument pos:start="43:22" pos:end="43:24"><expr pos:start="43:22" pos:end="43:24"><name pos:start="43:22" pos:end="43:24">arg</name></expr></argument>, <argument pos:start="43:27" pos:end="43:28"><expr pos:start="43:27" pos:end="43:28"><literal type="number" pos:start="43:27" pos:end="43:28">32</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:32" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:15">

        <expr_stmt pos:start="45:9" pos:end="45:36"><expr pos:start="45:9" pos:end="45:35"><call pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:21">tcg_out_sethi</name><argument_list pos:start="45:22" pos:end="45:35">(<argument pos:start="45:23" pos:end="45:23"><expr pos:start="45:23" pos:end="45:23"><name pos:start="45:23" pos:end="45:23">s</name></expr></argument>, <argument pos:start="45:26" pos:end="45:28"><expr pos:start="45:26" pos:end="45:28"><name pos:start="45:26" pos:end="45:28">ret</name></expr></argument>, <argument pos:start="45:31" pos:end="45:34"><expr pos:start="45:31" pos:end="45:34"><operator pos:start="45:31" pos:end="45:31">~</operator><name pos:start="45:32" pos:end="45:34">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:71"><expr pos:start="47:9" pos:end="47:70"><call pos:start="47:9" pos:end="47:70"><name pos:start="47:9" pos:end="47:22">tcg_out_arithi</name><argument_list pos:start="47:23" pos:end="47:70">(<argument pos:start="47:24" pos:end="47:24"><expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">s</name></expr></argument>, <argument pos:start="47:27" pos:end="47:29"><expr pos:start="47:27" pos:end="47:29"><name pos:start="47:27" pos:end="47:29">ret</name></expr></argument>, <argument pos:start="47:32" pos:end="47:34"><expr pos:start="47:32" pos:end="47:34"><name pos:start="47:32" pos:end="47:34">ret</name></expr></argument>, <argument pos:start="47:37" pos:end="47:58"><expr pos:start="47:37" pos:end="47:58"><operator pos:start="47:37" pos:end="47:37">(</operator><name pos:start="47:38" pos:end="47:40">arg</name> <operator pos:start="47:42" pos:end="47:42">&amp;</operator> <literal type="number" pos:start="47:44" pos:end="47:48">0x3ff</literal><operator pos:start="47:49" pos:end="47:49">)</operator> <operator pos:start="47:51" pos:end="47:51">|</operator> <operator pos:start="47:53" pos:end="47:53">-</operator><literal type="number" pos:start="47:54" pos:end="47:58">0x400</literal></expr></argument>, <argument pos:start="47:61" pos:end="47:69"><expr pos:start="47:61" pos:end="47:69"><name pos:start="47:61" pos:end="47:69">ARITH_XOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:61">/* A 64-bit constant decomposed into 2 32-bit pieces.  */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:22"><expr pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:6">lo</name> <operator pos:start="57:8" pos:end="57:8">=</operator> <operator pos:start="57:10" pos:end="57:10">(</operator><name pos:start="57:11" pos:end="57:17">int32_t</name><operator pos:start="57:18" pos:end="57:18">)</operator><name pos:start="57:19" pos:end="57:21">arg</name></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="81:5"><if pos:start="59:5" pos:end="69:5">if <condition pos:start="59:8" pos:end="59:29">(<expr pos:start="59:9" pos:end="59:28"><call pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:20">check_fit_tl</name><argument_list pos:start="59:21" pos:end="59:28">(<argument pos:start="59:22" pos:end="59:23"><expr pos:start="59:22" pos:end="59:23"><name pos:start="59:22" pos:end="59:23">lo</name></expr></argument>, <argument pos:start="59:26" pos:end="59:27"><expr pos:start="59:26" pos:end="59:27"><literal type="number" pos:start="59:26" pos:end="59:27">13</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:31" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:51">

        <expr_stmt pos:start="61:9" pos:end="61:30"><expr pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:10">hi</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <operator pos:start="61:14" pos:end="61:14">(</operator><name pos:start="61:15" pos:end="61:17">arg</name> <operator pos:start="61:19" pos:end="61:19">-</operator> <name pos:start="61:21" pos:end="61:22">lo</name><operator pos:start="61:23" pos:end="61:23">)</operator> <operator pos:start="61:25" pos:end="61:26">&gt;&gt;</operator> <literal type="number" pos:start="61:28" pos:end="61:29">32</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:47"><expr pos:start="63:9" pos:end="63:46"><call pos:start="63:9" pos:end="63:46"><name pos:start="63:9" pos:end="63:20">tcg_out_movi</name><argument_list pos:start="63:21" pos:end="63:46">(<argument pos:start="63:22" pos:end="63:22"><expr pos:start="63:22" pos:end="63:22"><name pos:start="63:22" pos:end="63:22">s</name></expr></argument>, <argument pos:start="63:25" pos:end="63:36"><expr pos:start="63:25" pos:end="63:36"><name pos:start="63:25" pos:end="63:36">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="63:39" pos:end="63:41"><expr pos:start="63:39" pos:end="63:41"><name pos:start="63:39" pos:end="63:41">ret</name></expr></argument>, <argument pos:start="63:44" pos:end="63:45"><expr pos:start="63:44" pos:end="63:45"><name pos:start="63:44" pos:end="63:45">hi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:52"><expr pos:start="65:9" pos:end="65:51"><call pos:start="65:9" pos:end="65:51"><name pos:start="65:9" pos:end="65:22">tcg_out_arithi</name><argument_list pos:start="65:23" pos:end="65:51">(<argument pos:start="65:24" pos:end="65:24"><expr pos:start="65:24" pos:end="65:24"><name pos:start="65:24" pos:end="65:24">s</name></expr></argument>, <argument pos:start="65:27" pos:end="65:29"><expr pos:start="65:27" pos:end="65:29"><name pos:start="65:27" pos:end="65:29">ret</name></expr></argument>, <argument pos:start="65:32" pos:end="65:34"><expr pos:start="65:32" pos:end="65:34"><name pos:start="65:32" pos:end="65:34">ret</name></expr></argument>, <argument pos:start="65:37" pos:end="65:38"><expr pos:start="65:37" pos:end="65:38"><literal type="number" pos:start="65:37" pos:end="65:38">32</literal></expr></argument>, <argument pos:start="65:41" pos:end="65:50"><expr pos:start="65:41" pos:end="65:50"><name pos:start="65:41" pos:end="65:50">SHIFT_SLLX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:51"><expr pos:start="67:9" pos:end="67:50"><call pos:start="67:9" pos:end="67:50"><name pos:start="67:9" pos:end="67:22">tcg_out_arithi</name><argument_list pos:start="67:23" pos:end="67:50">(<argument pos:start="67:24" pos:end="67:24"><expr pos:start="67:24" pos:end="67:24"><name pos:start="67:24" pos:end="67:24">s</name></expr></argument>, <argument pos:start="67:27" pos:end="67:29"><expr pos:start="67:27" pos:end="67:29"><name pos:start="67:27" pos:end="67:29">ret</name></expr></argument>, <argument pos:start="67:32" pos:end="67:34"><expr pos:start="67:32" pos:end="67:34"><name pos:start="67:32" pos:end="67:34">ret</name></expr></argument>, <argument pos:start="67:37" pos:end="67:38"><expr pos:start="67:37" pos:end="67:38"><name pos:start="67:37" pos:end="67:38">lo</name></expr></argument>, <argument pos:start="67:41" pos:end="67:49"><expr pos:start="67:41" pos:end="67:49"><name pos:start="67:41" pos:end="67:49">ARITH_ADD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="81:5">else <block pos:start="69:12" pos:end="81:5">{<block_content pos:start="71:9" pos:end="79:57">

        <expr_stmt pos:start="71:9" pos:end="71:23"><expr pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:10">hi</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <name pos:start="71:14" pos:end="71:16">arg</name> <operator pos:start="71:18" pos:end="71:19">&gt;&gt;</operator> <literal type="number" pos:start="71:21" pos:end="71:22">32</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:47"><expr pos:start="73:9" pos:end="73:46"><call pos:start="73:9" pos:end="73:46"><name pos:start="73:9" pos:end="73:20">tcg_out_movi</name><argument_list pos:start="73:21" pos:end="73:46">(<argument pos:start="73:22" pos:end="73:22"><expr pos:start="73:22" pos:end="73:22"><name pos:start="73:22" pos:end="73:22">s</name></expr></argument>, <argument pos:start="73:25" pos:end="73:36"><expr pos:start="73:25" pos:end="73:36"><name pos:start="73:25" pos:end="73:36">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="73:39" pos:end="73:41"><expr pos:start="73:39" pos:end="73:41"><name pos:start="73:39" pos:end="73:41">ret</name></expr></argument>, <argument pos:start="73:44" pos:end="73:45"><expr pos:start="73:44" pos:end="73:45"><name pos:start="73:44" pos:end="73:45">hi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:54"><expr pos:start="75:9" pos:end="75:53"><call pos:start="75:9" pos:end="75:53"><name pos:start="75:9" pos:end="75:20">tcg_out_movi</name><argument_list pos:start="75:21" pos:end="75:53">(<argument pos:start="75:22" pos:end="75:22"><expr pos:start="75:22" pos:end="75:22"><name pos:start="75:22" pos:end="75:22">s</name></expr></argument>, <argument pos:start="75:25" pos:end="75:36"><expr pos:start="75:25" pos:end="75:36"><name pos:start="75:25" pos:end="75:36">TCG_TYPE_I32</name></expr></argument>, <argument pos:start="75:39" pos:end="75:48"><expr pos:start="75:39" pos:end="75:48"><name pos:start="75:39" pos:end="75:48">TCG_REG_T2</name></expr></argument>, <argument pos:start="75:51" pos:end="75:52"><expr pos:start="75:51" pos:end="75:52"><name pos:start="75:51" pos:end="75:52">lo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:52"><expr pos:start="77:9" pos:end="77:51"><call pos:start="77:9" pos:end="77:51"><name pos:start="77:9" pos:end="77:22">tcg_out_arithi</name><argument_list pos:start="77:23" pos:end="77:51">(<argument pos:start="77:24" pos:end="77:24"><expr pos:start="77:24" pos:end="77:24"><name pos:start="77:24" pos:end="77:24">s</name></expr></argument>, <argument pos:start="77:27" pos:end="77:29"><expr pos:start="77:27" pos:end="77:29"><name pos:start="77:27" pos:end="77:29">ret</name></expr></argument>, <argument pos:start="77:32" pos:end="77:34"><expr pos:start="77:32" pos:end="77:34"><name pos:start="77:32" pos:end="77:34">ret</name></expr></argument>, <argument pos:start="77:37" pos:end="77:38"><expr pos:start="77:37" pos:end="77:38"><literal type="number" pos:start="77:37" pos:end="77:38">32</literal></expr></argument>, <argument pos:start="77:41" pos:end="77:50"><expr pos:start="77:41" pos:end="77:50"><name pos:start="77:41" pos:end="77:50">SHIFT_SLLX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:57"><expr pos:start="79:9" pos:end="79:56"><call pos:start="79:9" pos:end="79:56"><name pos:start="79:9" pos:end="79:21">tcg_out_arith</name><argument_list pos:start="79:22" pos:end="79:56">(<argument pos:start="79:23" pos:end="79:23"><expr pos:start="79:23" pos:end="79:23"><name pos:start="79:23" pos:end="79:23">s</name></expr></argument>, <argument pos:start="79:26" pos:end="79:28"><expr pos:start="79:26" pos:end="79:28"><name pos:start="79:26" pos:end="79:28">ret</name></expr></argument>, <argument pos:start="79:31" pos:end="79:33"><expr pos:start="79:31" pos:end="79:33"><name pos:start="79:31" pos:end="79:33">ret</name></expr></argument>, <argument pos:start="79:36" pos:end="79:45"><expr pos:start="79:36" pos:end="79:45"><name pos:start="79:36" pos:end="79:45">TCG_REG_T2</name></expr></argument>, <argument pos:start="79:48" pos:end="79:55"><expr pos:start="79:48" pos:end="79:55"><name pos:start="79:48" pos:end="79:55">ARITH_OR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
