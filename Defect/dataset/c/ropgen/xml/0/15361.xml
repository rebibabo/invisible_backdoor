<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15361.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">put_cabac</name><parameter_list pos:start="1:22" pos:end="1:70">(<parameter pos:start="1:23" pos:end="1:37"><decl pos:start="1:23" pos:end="1:37"><type pos:start="1:23" pos:end="1:37"><name pos:start="1:23" pos:end="1:34">CABACContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">c</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:60"><decl pos:start="1:40" pos:end="1:60"><type pos:start="1:40" pos:end="1:60"><name pos:start="1:40" pos:end="1:46">uint8_t</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier> <specifier pos:start="1:50" pos:end="1:54">const</specifier></type> <name pos:start="1:56" pos:end="1:60">state</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:69"><decl pos:start="1:63" pos:end="1:69"><type pos:start="1:63" pos:end="1:69"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:69">bit</name></decl></parameter>)</parameter_list><block pos:start="1:71" pos:end="27:1">{<block_content pos:start="3:5" pos:end="25:28">

    <decl_stmt pos:start="3:5" pos:end="3:64"><decl pos:start="3:5" pos:end="3:63"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:16">RangeLPS</name><init pos:start="3:17" pos:end="3:63">= <expr pos:start="3:19" pos:end="3:63"><name pos:start="3:19" pos:end="3:63"><name pos:start="3:19" pos:end="3:35">ff_h264_lps_range</name><index pos:start="3:36" pos:end="3:63">[<expr pos:start="3:37" pos:end="3:62"><literal type="number" pos:start="3:37" pos:end="3:37">2</literal><operator pos:start="3:38" pos:end="3:38">*</operator><operator pos:start="3:39" pos:end="3:39">(</operator><name pos:start="3:40" pos:end="3:47"><name pos:start="3:40" pos:end="3:40">c</name><operator pos:start="3:41" pos:end="3:42">-&gt;</operator><name pos:start="3:43" pos:end="3:47">range</name></name><operator pos:start="3:48" pos:end="3:48">&amp;</operator><literal type="number" pos:start="3:49" pos:end="3:52">0xC0</literal><operator pos:start="3:53" pos:end="3:53">)</operator> <operator pos:start="3:55" pos:end="3:55">+</operator> <operator pos:start="3:57" pos:end="3:57">*</operator><name pos:start="3:58" pos:end="3:62">state</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="7:5" pos:end="21:5"><if pos:start="7:5" pos:end="13:5">if<condition pos:start="7:7" pos:end="7:27">(<expr pos:start="7:8" pos:end="7:26"><name pos:start="7:8" pos:end="7:10">bit</name> <operator pos:start="7:12" pos:end="7:13">==</operator> <operator pos:start="7:15" pos:end="7:15">(</operator><operator pos:start="7:16" pos:end="7:16">(</operator><operator pos:start="7:17" pos:end="7:17">*</operator><name pos:start="7:18" pos:end="7:22">state</name><operator pos:start="7:23" pos:end="7:23">)</operator><operator pos:start="7:24" pos:end="7:24">&amp;</operator><literal type="number" pos:start="7:25" pos:end="7:25">1</literal><operator pos:start="7:26" pos:end="7:26">)</operator></expr>)</condition><block pos:start="7:28" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:42">

        <expr_stmt pos:start="9:9" pos:end="9:29"><expr pos:start="9:9" pos:end="9:28"><name pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:9">c</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:16">range</name></name> <operator pos:start="9:18" pos:end="9:19">-=</operator> <name pos:start="9:21" pos:end="9:28">RangeLPS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:42"><expr pos:start="11:9" pos:end="11:41"><operator pos:start="11:9" pos:end="11:9">*</operator><name pos:start="11:10" pos:end="11:14">state</name><operator pos:start="11:15" pos:end="11:15">=</operator> <name pos:start="11:17" pos:end="11:41"><name pos:start="11:17" pos:end="11:33">ff_h264_mps_state</name><index pos:start="11:34" pos:end="11:41">[<expr pos:start="11:35" pos:end="11:40"><operator pos:start="11:35" pos:end="11:35">*</operator><name pos:start="11:36" pos:end="11:40">state</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="13:6" pos:end="21:5">else<block pos:start="13:10" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:42">

        <expr_stmt pos:start="15:9" pos:end="15:38"><expr pos:start="15:9" pos:end="15:37"><name pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:9">c</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:14">low</name></name> <operator pos:start="15:16" pos:end="15:17">+=</operator> <name pos:start="15:19" pos:end="15:26"><name pos:start="15:19" pos:end="15:19">c</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:26">range</name></name> <operator pos:start="15:28" pos:end="15:28">-</operator> <name pos:start="15:30" pos:end="15:37">RangeLPS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:28"><expr pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:9">c</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:16">range</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:27">RangeLPS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:42"><expr pos:start="19:9" pos:end="19:41"><operator pos:start="19:9" pos:end="19:9">*</operator><name pos:start="19:10" pos:end="19:14">state</name><operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:41"><name pos:start="19:17" pos:end="19:33">ff_h264_lps_state</name><index pos:start="19:34" pos:end="19:41">[<expr pos:start="19:35" pos:end="19:40"><operator pos:start="19:35" pos:end="19:35">*</operator><name pos:start="19:36" pos:end="19:40">state</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><call pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:24">renorm_cabac_encoder</name><argument_list pos:start="25:25" pos:end="25:27">(<argument pos:start="25:26" pos:end="25:26"><expr pos:start="25:26" pos:end="25:26"><name pos:start="25:26" pos:end="25:26">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
