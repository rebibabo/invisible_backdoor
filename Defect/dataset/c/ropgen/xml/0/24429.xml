<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24429.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">decode_profile_tier_level</name><parameter_list pos:start="1:37" pos:end="3:53">(<parameter pos:start="1:38" pos:end="1:54"><decl pos:start="1:38" pos:end="1:54"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:50">GetBitContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">gb</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:77"><decl pos:start="1:57" pos:end="1:77"><type pos:start="1:57" pos:end="1:77"><name pos:start="1:57" pos:end="1:70">AVCodecContext</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:77">avctx</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:52"><decl pos:start="3:39" pos:end="3:52"><type pos:start="3:39" pos:end="3:52"><name pos:start="3:39" pos:end="3:47">PTLCommon</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:52">ptl</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:13">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:18"><if pos:start="11:5" pos:end="13:18">if <condition pos:start="11:8" pos:end="11:58">(<expr pos:start="11:9" pos:end="11:57"><call pos:start="11:9" pos:end="11:25"><name pos:start="11:9" pos:end="11:21">get_bits_left</name><argument_list pos:start="11:22" pos:end="11:25">(<argument pos:start="11:23" pos:end="11:24"><expr pos:start="11:23" pos:end="11:24"><name pos:start="11:23" pos:end="11:24">gb</name></expr></argument>)</argument_list></call> <operator pos:start="11:27" pos:end="11:27">&lt;</operator> <literal type="number" pos:start="11:29" pos:end="11:30">2</literal><operator pos:start="11:30" pos:end="11:30">+</operator><literal type="number" pos:start="11:31" pos:end="11:32">1</literal><operator pos:start="11:32" pos:end="11:32">+</operator><literal type="number" pos:start="11:33" pos:end="11:35">5</literal> <operator pos:start="11:35" pos:end="11:35">+</operator> <literal type="number" pos:start="11:37" pos:end="11:40">32</literal> <operator pos:start="11:40" pos:end="11:40">+</operator> <literal type="number" pos:start="11:42" pos:end="11:44">4</literal> <operator pos:start="11:44" pos:end="11:44">+</operator> <literal type="number" pos:start="11:46" pos:end="11:49">16</literal> <operator pos:start="11:49" pos:end="11:49">+</operator> <literal type="number" pos:start="11:51" pos:end="11:54">16</literal> <operator pos:start="11:54" pos:end="11:54">+</operator> <literal type="number" pos:start="11:56" pos:end="11:57">12</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:18"><block_content pos:start="13:9" pos:end="13:18">

        <return pos:start="13:9" pos:end="13:18">return <expr pos:start="13:16" pos:end="13:17"><operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:7">ptl</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:22">profile_space</name></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <call pos:start="17:26" pos:end="17:40"><name pos:start="17:26" pos:end="17:33">get_bits</name><argument_list pos:start="17:34" pos:end="17:40">(<argument pos:start="17:35" pos:end="17:36"><expr pos:start="17:35" pos:end="17:36"><name pos:start="17:35" pos:end="17:36">gb</name></expr></argument>, <argument pos:start="17:39" pos:end="17:39"><expr pos:start="17:39" pos:end="17:39"><literal type="number" pos:start="17:39" pos:end="17:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:39"><expr pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:7">ptl</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:18">tier_flag</name></name>     <operator pos:start="19:24" pos:end="19:24">=</operator> <call pos:start="19:26" pos:end="19:38"><name pos:start="19:26" pos:end="19:34">get_bits1</name><argument_list pos:start="19:35" pos:end="19:38">(<argument pos:start="19:36" pos:end="19:37"><expr pos:start="19:36" pos:end="19:37"><name pos:start="19:36" pos:end="19:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:7">ptl</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:20">profile_idc</name></name>   <operator pos:start="21:24" pos:end="21:24">=</operator> <call pos:start="21:26" pos:end="21:40"><name pos:start="21:26" pos:end="21:33">get_bits</name><argument_list pos:start="21:34" pos:end="21:40">(<argument pos:start="21:35" pos:end="21:36"><expr pos:start="21:35" pos:end="21:36"><name pos:start="21:35" pos:end="21:36">gb</name></expr></argument>, <argument pos:start="21:39" pos:end="21:39"><expr pos:start="21:39" pos:end="21:39"><literal type="number" pos:start="21:39" pos:end="21:39">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="41:86"><if pos:start="23:5" pos:end="25:64">if <condition pos:start="23:8" pos:end="23:49">(<expr pos:start="23:9" pos:end="23:48"><name pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:11">ptl</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:24">profile_idc</name></name> <operator pos:start="23:26" pos:end="23:27">==</operator> <name pos:start="23:29" pos:end="23:48">FF_PROFILE_HEVC_MAIN</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:64"><block_content pos:start="25:9" pos:end="25:64">

        <expr_stmt pos:start="25:9" pos:end="25:64"><expr pos:start="25:9" pos:end="25:63"><call pos:start="25:9" pos:end="25:63"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:63">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="25:37" pos:end="25:62"><expr pos:start="25:37" pos:end="25:62"><literal type="string" pos:start="25:37" pos:end="25:62">"Main profile bitstream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="27:5" pos:end="29:67">else if <condition pos:start="27:13" pos:end="27:57">(<expr pos:start="27:14" pos:end="27:56"><name pos:start="27:14" pos:end="27:29"><name pos:start="27:14" pos:end="27:16">ptl</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:29">profile_idc</name></name> <operator pos:start="27:31" pos:end="27:32">==</operator> <name pos:start="27:34" pos:end="27:56">FF_PROFILE_HEVC_MAIN_10</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:67"><block_content pos:start="29:9" pos:end="29:67">

        <expr_stmt pos:start="29:9" pos:end="29:67"><expr pos:start="29:9" pos:end="29:66"><call pos:start="29:9" pos:end="29:66"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:66">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">avctx</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="29:37" pos:end="29:65"><expr pos:start="29:37" pos:end="29:65"><literal type="string" pos:start="29:37" pos:end="29:65">"Main 10 profile bitstream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="31:5" pos:end="33:78">else if <condition pos:start="31:13" pos:end="31:68">(<expr pos:start="31:14" pos:end="31:67"><name pos:start="31:14" pos:end="31:29"><name pos:start="31:14" pos:end="31:16">ptl</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:29">profile_idc</name></name> <operator pos:start="31:31" pos:end="31:32">==</operator> <name pos:start="31:34" pos:end="31:67">FF_PROFILE_HEVC_MAIN_STILL_PICTURE</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:78"><block_content pos:start="33:9" pos:end="33:78">

        <expr_stmt pos:start="33:9" pos:end="33:78"><expr pos:start="33:9" pos:end="33:77"><call pos:start="33:9" pos:end="33:77"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:77">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="33:37" pos:end="33:76"><expr pos:start="33:37" pos:end="33:76"><literal type="string" pos:start="33:37" pos:end="33:76">"Main Still Picture profile bitstream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="35:5" pos:end="37:75">else if <condition pos:start="35:13" pos:end="35:54">(<expr pos:start="35:14" pos:end="35:53"><name pos:start="35:14" pos:end="35:29"><name pos:start="35:14" pos:end="35:16">ptl</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:29">profile_idc</name></name> <operator pos:start="35:31" pos:end="35:32">==</operator> <name pos:start="35:34" pos:end="35:53">FF_PROFILE_HEVC_REXT</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:75"><block_content pos:start="37:9" pos:end="37:75">

        <expr_stmt pos:start="37:9" pos:end="37:75"><expr pos:start="37:9" pos:end="37:74"><call pos:start="37:9" pos:end="37:74"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:74">(<argument pos:start="37:16" pos:end="37:20"><expr pos:start="37:16" pos:end="37:20"><name pos:start="37:16" pos:end="37:20">avctx</name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="37:37" pos:end="37:73"><expr pos:start="37:37" pos:end="37:73"><literal type="string" pos:start="37:37" pos:end="37:73">"Range Extension profile bitstream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="39:5" pos:end="41:86">else<block type="pseudo" pos:start="41:9" pos:end="41:86"><block_content pos:start="41:9" pos:end="41:86">

        <expr_stmt pos:start="41:9" pos:end="41:86"><expr pos:start="41:9" pos:end="41:85"><call pos:start="41:9" pos:end="41:85"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:85">(<argument pos:start="41:16" pos:end="41:20"><expr pos:start="41:16" pos:end="41:20"><name pos:start="41:16" pos:end="41:20">avctx</name></expr></argument>, <argument pos:start="41:23" pos:end="41:36"><expr pos:start="41:23" pos:end="41:36"><name pos:start="41:23" pos:end="41:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="41:39" pos:end="41:66"><expr pos:start="41:39" pos:end="41:66"><literal type="string" pos:start="41:39" pos:end="41:66">"Unknown HEVC profile: %d\n"</literal></expr></argument>, <argument pos:start="41:69" pos:end="41:84"><expr pos:start="41:69" pos:end="41:84"><name pos:start="41:69" pos:end="41:84"><name pos:start="41:69" pos:end="41:71">ptl</name><operator pos:start="41:72" pos:end="41:73">-&gt;</operator><name pos:start="41:74" pos:end="41:84">profile_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <for pos:start="45:5" pos:end="47:59">for <control pos:start="45:9" pos:end="45:28">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:23"><expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <literal type="number" pos:start="45:21" pos:end="45:22">32</literal></expr>;</condition> <incr pos:start="45:25" pos:end="45:27"><expr pos:start="45:25" pos:end="45:27"><name pos:start="45:25" pos:end="45:25">i</name><operator pos:start="45:26" pos:end="45:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:9" pos:end="47:59"><block_content pos:start="47:9" pos:end="47:59">

        <expr_stmt pos:start="47:9" pos:end="47:59"><expr pos:start="47:9" pos:end="47:58"><name pos:start="47:9" pos:end="47:42"><name pos:start="47:9" pos:end="47:11">ptl</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:39">profile_compatibility_flag</name><index pos:start="47:40" pos:end="47:42">[<expr pos:start="47:41" pos:end="47:41"><name pos:start="47:41" pos:end="47:41">i</name></expr>]</index></name> <operator pos:start="47:44" pos:end="47:44">=</operator> <call pos:start="47:46" pos:end="47:58"><name pos:start="47:46" pos:end="47:54">get_bits1</name><argument_list pos:start="47:55" pos:end="47:58">(<argument pos:start="47:56" pos:end="47:57"><expr pos:start="47:56" pos:end="47:57"><name pos:start="47:56" pos:end="47:57">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="49:5" pos:end="49:52"><expr pos:start="49:5" pos:end="49:51"><name pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:7">ptl</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:32">progressive_source_flag</name></name>    <operator pos:start="49:37" pos:end="49:37">=</operator> <call pos:start="49:39" pos:end="49:51"><name pos:start="49:39" pos:end="49:47">get_bits1</name><argument_list pos:start="49:48" pos:end="49:51">(<argument pos:start="49:49" pos:end="49:50"><expr pos:start="49:49" pos:end="49:50"><name pos:start="49:49" pos:end="49:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:52"><expr pos:start="51:5" pos:end="51:51"><name pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:7">ptl</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:31">interlaced_source_flag</name></name>     <operator pos:start="51:37" pos:end="51:37">=</operator> <call pos:start="51:39" pos:end="51:51"><name pos:start="51:39" pos:end="51:47">get_bits1</name><argument_list pos:start="51:48" pos:end="51:51">(<argument pos:start="51:49" pos:end="51:50"><expr pos:start="51:49" pos:end="51:50"><name pos:start="51:49" pos:end="51:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:52"><expr pos:start="53:5" pos:end="53:51"><name pos:start="53:5" pos:end="53:35"><name pos:start="53:5" pos:end="53:7">ptl</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:35">non_packed_constraint_flag</name></name> <operator pos:start="53:37" pos:end="53:37">=</operator> <call pos:start="53:39" pos:end="53:51"><name pos:start="53:39" pos:end="53:47">get_bits1</name><argument_list pos:start="53:48" pos:end="53:51">(<argument pos:start="53:49" pos:end="53:50"><expr pos:start="53:49" pos:end="53:50"><name pos:start="53:49" pos:end="53:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:52"><expr pos:start="55:5" pos:end="55:51"><name pos:start="55:5" pos:end="55:35"><name pos:start="55:5" pos:end="55:7">ptl</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:35">frame_only_constraint_flag</name></name> <operator pos:start="55:37" pos:end="55:37">=</operator> <call pos:start="55:39" pos:end="55:51"><name pos:start="55:39" pos:end="55:47">get_bits1</name><argument_list pos:start="55:48" pos:end="55:51">(<argument pos:start="55:49" pos:end="55:50"><expr pos:start="55:49" pos:end="55:50"><name pos:start="55:49" pos:end="55:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:22"><expr pos:start="59:5" pos:end="59:21"><call pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:13">skip_bits</name><argument_list pos:start="59:14" pos:end="59:21">(<argument pos:start="59:15" pos:end="59:16"><expr pos:start="59:15" pos:end="59:16"><name pos:start="59:15" pos:end="59:16">gb</name></expr></argument>, <argument pos:start="59:19" pos:end="59:20"><expr pos:start="59:19" pos:end="59:20"><literal type="number" pos:start="59:19" pos:end="59:20">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="59:24" pos:end="59:57">// XXX_reserved_zero_44bits[0..15]</comment>

    <expr_stmt pos:start="61:5" pos:end="61:22"><expr pos:start="61:5" pos:end="61:21"><call pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:13">skip_bits</name><argument_list pos:start="61:14" pos:end="61:21">(<argument pos:start="61:15" pos:end="61:16"><expr pos:start="61:15" pos:end="61:16"><name pos:start="61:15" pos:end="61:16">gb</name></expr></argument>, <argument pos:start="61:19" pos:end="61:20"><expr pos:start="61:19" pos:end="61:20"><literal type="number" pos:start="61:19" pos:end="61:20">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="61:24" pos:end="61:58">// XXX_reserved_zero_44bits[16..31]</comment>

    <expr_stmt pos:start="63:5" pos:end="63:22"><expr pos:start="63:5" pos:end="63:21"><call pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:13">skip_bits</name><argument_list pos:start="63:14" pos:end="63:21">(<argument pos:start="63:15" pos:end="63:16"><expr pos:start="63:15" pos:end="63:16"><name pos:start="63:15" pos:end="63:16">gb</name></expr></argument>, <argument pos:start="63:19" pos:end="63:20"><expr pos:start="63:19" pos:end="63:20"><literal type="number" pos:start="63:19" pos:end="63:20">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="63:24" pos:end="63:58">// XXX_reserved_zero_44bits[32..43]</comment>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
