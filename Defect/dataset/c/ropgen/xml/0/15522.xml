<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15522.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">glib_pollfds_fill</name><parameter_list pos:start="1:30" pos:end="1:51">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:39"><name pos:start="1:31" pos:end="1:37">int64_t</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:50">cur_timeout</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:66">

    <decl_stmt pos:start="5:5" pos:end="5:53"><decl pos:start="5:5" pos:end="5:52"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">GMainContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:25">context</name> <init pos:start="5:27" pos:end="5:52">= <expr pos:start="5:29" pos:end="5:52"><call pos:start="5:29" pos:end="5:52"><name pos:start="5:29" pos:end="5:50">g_main_context_default</name><argument_list pos:start="5:51" pos:end="5:52">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">timeout</name> <init pos:start="7:17" pos:end="7:19">= <expr pos:start="7:19" pos:end="7:19"><literal type="number" pos:start="7:19" pos:end="7:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:22">timeout_ns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">n</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:51"><expr pos:start="15:5" pos:end="15:50"><call pos:start="15:5" pos:end="15:50"><name pos:start="15:5" pos:end="15:26">g_main_context_prepare</name><argument_list pos:start="15:27" pos:end="15:50">(<argument pos:start="15:28" pos:end="15:34"><expr pos:start="15:28" pos:end="15:34"><name pos:start="15:28" pos:end="15:34">context</name></expr></argument>, <argument pos:start="15:37" pos:end="15:49"><expr pos:start="15:37" pos:end="15:49"><operator pos:start="15:37" pos:end="15:37">&amp;</operator><name pos:start="15:38" pos:end="15:49">max_priority</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:20">glib_pollfds_idx</name> <operator pos:start="19:22" pos:end="19:22">=</operator> <name pos:start="19:24" pos:end="19:36"><name pos:start="19:24" pos:end="19:31">gpollfds</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:36">len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:5">n</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <name pos:start="21:9" pos:end="21:23">glib_n_poll_fds</name></expr>;</expr_stmt>

    <do pos:start="23:5" pos:end="37:35">do <block pos:start="23:8" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:50">

        <decl_stmt pos:start="25:9" pos:end="25:22"><decl pos:start="25:9" pos:end="25:21"><type pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:15">GPollFD</name> <modifier pos:start="25:17" pos:end="25:17">*</modifier></type><name pos:start="25:18" pos:end="25:21">pfds</name></decl>;</decl_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:23">glib_n_poll_fds</name> <operator pos:start="27:25" pos:end="27:25">=</operator> <name pos:start="27:27" pos:end="27:27">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:71"><expr pos:start="29:9" pos:end="29:70"><call pos:start="29:9" pos:end="29:70"><name pos:start="29:9" pos:end="29:24">g_array_set_size</name><argument_list pos:start="29:25" pos:end="29:70">(<argument pos:start="29:26" pos:end="29:33"><expr pos:start="29:26" pos:end="29:33"><name pos:start="29:26" pos:end="29:33">gpollfds</name></expr></argument>, <argument pos:start="29:36" pos:end="29:69"><expr pos:start="29:36" pos:end="29:69"><name pos:start="29:36" pos:end="29:51">glib_pollfds_idx</name> <operator pos:start="29:53" pos:end="29:53">+</operator> <name pos:start="29:55" pos:end="29:69">glib_n_poll_fds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:67"><expr pos:start="31:9" pos:end="31:66"><name pos:start="31:9" pos:end="31:12">pfds</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <operator pos:start="31:16" pos:end="31:16">&amp;</operator><call pos:start="31:17" pos:end="31:66"><name pos:start="31:17" pos:end="31:29">g_array_index</name><argument_list pos:start="31:30" pos:end="31:66">(<argument pos:start="31:31" pos:end="31:38"><expr pos:start="31:31" pos:end="31:38"><name pos:start="31:31" pos:end="31:38">gpollfds</name></expr></argument>, <argument pos:start="31:41" pos:end="31:47"><expr pos:start="31:41" pos:end="31:47"><name pos:start="31:41" pos:end="31:47">GPollFD</name></expr></argument>, <argument pos:start="31:50" pos:end="31:65"><expr pos:start="31:50" pos:end="31:65"><name pos:start="31:50" pos:end="31:65">glib_pollfds_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="35:50"><expr pos:start="33:9" pos:end="35:49"><name pos:start="33:9" pos:end="33:9">n</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <call pos:start="33:13" pos:end="35:49"><name pos:start="33:13" pos:end="33:32">g_main_context_query</name><argument_list pos:start="33:33" pos:end="35:49">(<argument pos:start="33:34" pos:end="33:40"><expr pos:start="33:34" pos:end="33:40"><name pos:start="33:34" pos:end="33:40">context</name></expr></argument>, <argument pos:start="33:43" pos:end="33:54"><expr pos:start="33:43" pos:end="33:54"><name pos:start="33:43" pos:end="33:54">max_priority</name></expr></argument>, <argument pos:start="33:57" pos:end="33:64"><expr pos:start="33:57" pos:end="33:64"><operator pos:start="33:57" pos:end="33:57">&amp;</operator><name pos:start="33:58" pos:end="33:64">timeout</name></expr></argument>, <argument pos:start="33:67" pos:end="33:70"><expr pos:start="33:67" pos:end="33:70"><name pos:start="33:67" pos:end="33:70">pfds</name></expr></argument>,

                                 <argument pos:start="35:34" pos:end="35:48"><expr pos:start="35:34" pos:end="35:48"><name pos:start="35:34" pos:end="35:48">glib_n_poll_fds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="37:13" pos:end="37:34">(<expr pos:start="37:14" pos:end="37:33"><name pos:start="37:14" pos:end="37:14">n</name> <operator pos:start="37:16" pos:end="37:17">!=</operator> <name pos:start="37:19" pos:end="37:33">glib_n_poll_fds</name></expr>)</condition>;</do>



    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:20">(<expr pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:15">timeout</name> <operator pos:start="41:17" pos:end="41:17">&lt;</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition> <block pos:start="41:22" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:24">

        <expr_stmt pos:start="43:9" pos:end="43:24"><expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:18">timeout_ns</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <operator pos:start="43:22" pos:end="43:22">-</operator><literal type="number" pos:start="43:23" pos:end="43:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="49:5">else <block pos:start="45:12" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:58">

        <expr_stmt pos:start="47:9" pos:end="47:58"><expr pos:start="47:9" pos:end="47:57"><name pos:start="47:9" pos:end="47:18">timeout_ns</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <operator pos:start="47:22" pos:end="47:22">(</operator><name pos:start="47:23" pos:end="47:29">int64_t</name><operator pos:start="47:30" pos:end="47:30">)</operator><name pos:start="47:31" pos:end="47:37">timeout</name> <operator pos:start="47:39" pos:end="47:39">*</operator> <operator pos:start="47:41" pos:end="47:41">(</operator><name pos:start="47:42" pos:end="47:48">int64_t</name><operator pos:start="47:49" pos:end="47:49">)</operator><name pos:start="47:50" pos:end="47:57">SCALE_MS</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:66"><expr pos:start="53:5" pos:end="53:65"><operator pos:start="53:5" pos:end="53:5">*</operator><name pos:start="53:6" pos:end="53:16">cur_timeout</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <call pos:start="53:20" pos:end="53:65"><name pos:start="53:20" pos:end="53:39">qemu_soonest_timeout</name><argument_list pos:start="53:40" pos:end="53:65">(<argument pos:start="53:41" pos:end="53:50"><expr pos:start="53:41" pos:end="53:50"><name pos:start="53:41" pos:end="53:50">timeout_ns</name></expr></argument>, <argument pos:start="53:53" pos:end="53:64"><expr pos:start="53:53" pos:end="53:64"><operator pos:start="53:53" pos:end="53:53">*</operator><name pos:start="53:54" pos:end="53:64">cur_timeout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
