<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23860.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">qxl_blit</name><parameter_list pos:start="1:21" pos:end="1:54">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:33">PCIQXLDevice</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">qxl</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:47">QXLRect</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">rect</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:5">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">DisplaySurface</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:27">surface</name> <init pos:start="5:29" pos:end="5:64">= <expr pos:start="5:31" pos:end="5:64"><call pos:start="5:31" pos:end="5:64"><name pos:start="5:31" pos:end="5:50">qemu_console_surface</name><argument_list pos:start="5:51" pos:end="5:64">(<argument pos:start="5:52" pos:end="5:63"><expr pos:start="5:52" pos:end="5:63"><name pos:start="5:52" pos:end="5:63"><name pos:start="5:52" pos:end="5:54">qxl</name><operator pos:start="5:55" pos:end="5:56">-&gt;</operator><name pos:start="5:57" pos:end="5:59">vga</name><operator pos:start="5:60" pos:end="5:60">.</operator><name pos:start="5:61" pos:end="5:63">con</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">dst</name> <init pos:start="7:18" pos:end="7:40">= <expr pos:start="7:20" pos:end="7:40"><call pos:start="7:20" pos:end="7:40"><name pos:start="7:20" pos:end="7:31">surface_data</name><argument_list pos:start="7:32" pos:end="7:40">(<argument pos:start="7:33" pos:end="7:39"><expr pos:start="7:33" pos:end="7:39"><name pos:start="7:33" pos:end="7:39">surface</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">len</name></decl>, <decl pos:start="11:14" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:14">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:34">(<expr pos:start="15:9" pos:end="15:33"><call pos:start="15:9" pos:end="15:33"><name pos:start="15:9" pos:end="15:24">is_buffer_shared</name><argument_list pos:start="15:25" pos:end="15:33">(<argument pos:start="15:26" pos:end="15:32"><expr pos:start="15:26" pos:end="15:32"><name pos:start="15:26" pos:end="15:32">surface</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:36" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:33">(<expr pos:start="21:9" pos:end="21:32"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:32"><name pos:start="21:10" pos:end="21:12">qxl</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:27">guest_primary</name><operator pos:start="21:28" pos:end="21:28">.</operator><name pos:start="21:29" pos:end="21:32">data</name></name></expr>)</condition> <block pos:start="21:35" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:76">

        <expr_stmt pos:start="23:9" pos:end="23:58"><expr pos:start="23:9" pos:end="23:57"><call pos:start="23:9" pos:end="23:57"><name pos:start="23:9" pos:end="23:55">trace_qxl_render_blit_guest_primary_initialized</name><argument_list pos:start="23:56" pos:end="23:57">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:76"><expr pos:start="25:9" pos:end="25:75"><name pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:11">qxl</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:26">guest_primary</name><operator pos:start="25:27" pos:end="25:27">.</operator><name pos:start="25:28" pos:end="25:31">data</name></name> <operator pos:start="25:33" pos:end="25:33">=</operator> <call pos:start="25:35" pos:end="25:75"><name pos:start="25:35" pos:end="25:59">memory_region_get_ram_ptr</name><argument_list pos:start="25:60" pos:end="25:75">(<argument pos:start="25:61" pos:end="25:74"><expr pos:start="25:61" pos:end="25:74"><operator pos:start="25:61" pos:end="25:61">&amp;</operator><name pos:start="25:62" pos:end="25:74"><name pos:start="25:62" pos:end="25:64">qxl</name><operator pos:start="25:65" pos:end="25:66">-&gt;</operator><name pos:start="25:67" pos:end="25:69">vga</name><operator pos:start="25:70" pos:end="25:70">.</operator><name pos:start="25:71" pos:end="25:74">vram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:62"><expr pos:start="29:5" pos:end="31:61"><call pos:start="29:5" pos:end="31:61"><name pos:start="29:5" pos:end="29:25">trace_qxl_render_blit</name><argument_list pos:start="29:26" pos:end="31:61">(<argument pos:start="29:27" pos:end="29:55"><expr pos:start="29:27" pos:end="29:55"><name pos:start="29:27" pos:end="29:55"><name pos:start="29:27" pos:end="29:29">qxl</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:44">guest_primary</name><operator pos:start="29:45" pos:end="29:45">.</operator><name pos:start="29:46" pos:end="29:55">qxl_stride</name></name></expr></argument>,

            <argument pos:start="31:13" pos:end="31:22"><expr pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:16">rect</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:22">left</name></name></expr></argument>, <argument pos:start="31:25" pos:end="31:35"><expr pos:start="31:25" pos:end="31:35"><name pos:start="31:25" pos:end="31:35"><name pos:start="31:25" pos:end="31:28">rect</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:35">right</name></name></expr></argument>, <argument pos:start="31:38" pos:end="31:46"><expr pos:start="31:38" pos:end="31:46"><name pos:start="31:38" pos:end="31:46"><name pos:start="31:38" pos:end="31:41">rect</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:46">top</name></name></expr></argument>, <argument pos:start="31:49" pos:end="31:60"><expr pos:start="31:49" pos:end="31:60"><name pos:start="31:49" pos:end="31:60"><name pos:start="31:49" pos:end="31:52">rect</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:60">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:34"><expr pos:start="33:5" pos:end="33:33"><name pos:start="33:5" pos:end="33:7">src</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <name pos:start="33:11" pos:end="33:33"><name pos:start="33:11" pos:end="33:13">qxl</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:28">guest_primary</name><operator pos:start="33:29" pos:end="33:29">.</operator><name pos:start="33:30" pos:end="33:33">data</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="49:5"><if pos:start="35:5" pos:end="45:5">if <condition pos:start="35:8" pos:end="35:42">(<expr pos:start="35:9" pos:end="35:41"><name pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:11">qxl</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:26">guest_primary</name><operator pos:start="35:27" pos:end="35:27">.</operator><name pos:start="35:28" pos:end="35:37">qxl_stride</name></name> <operator pos:start="35:39" pos:end="35:39">&lt;</operator> <literal type="number" pos:start="35:41" pos:end="35:41">0</literal></expr>)</condition> <block pos:start="35:44" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:42">

        <comment type="block" pos:start="37:9" pos:end="39:41">/* qxl surface is upside down, walk src scanlines

         * in reverse order to flip it */</comment>

        <expr_stmt pos:start="41:9" pos:end="43:42"><expr pos:start="41:9" pos:end="43:41"><name pos:start="41:9" pos:end="41:11">src</name> <operator pos:start="41:13" pos:end="41:14">+=</operator> <operator pos:start="41:16" pos:end="41:16">(</operator><name pos:start="41:17" pos:end="41:49"><name pos:start="41:17" pos:end="41:19">qxl</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:34">guest_primary</name><operator pos:start="41:35" pos:end="41:35">.</operator><name pos:start="41:36" pos:end="41:42">surface</name><operator pos:start="41:43" pos:end="41:43">.</operator><name pos:start="41:44" pos:end="41:49">height</name></name> <operator pos:start="41:51" pos:end="41:51">-</operator> <name pos:start="41:53" pos:end="41:61"><name pos:start="41:53" pos:end="41:56">rect</name><operator pos:start="41:57" pos:end="41:58">-&gt;</operator><name pos:start="41:59" pos:end="41:61">top</name></name> <operator pos:start="41:63" pos:end="41:63">-</operator> <literal type="number" pos:start="41:65" pos:end="41:65">1</literal><operator pos:start="41:66" pos:end="41:66">)</operator> <operator pos:start="41:68" pos:end="41:68">*</operator>

            <name pos:start="43:13" pos:end="43:41"><name pos:start="43:13" pos:end="43:15">qxl</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:30">guest_primary</name><operator pos:start="43:31" pos:end="43:31">.</operator><name pos:start="43:32" pos:end="43:41">abs_stride</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="49:5">else <block pos:start="45:12" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:57">

        <expr_stmt pos:start="47:9" pos:end="47:57"><expr pos:start="47:9" pos:end="47:56"><name pos:start="47:9" pos:end="47:11">src</name> <operator pos:start="47:13" pos:end="47:14">+=</operator> <name pos:start="47:16" pos:end="47:24"><name pos:start="47:16" pos:end="47:19">rect</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:24">top</name></name> <operator pos:start="47:26" pos:end="47:26">*</operator> <name pos:start="47:28" pos:end="47:56"><name pos:start="47:28" pos:end="47:30">qxl</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:45">guest_primary</name><operator pos:start="47:46" pos:end="47:46">.</operator><name pos:start="47:47" pos:end="47:56">abs_stride</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:54"><expr pos:start="51:5" pos:end="51:53"><name pos:start="51:5" pos:end="51:7">dst</name> <operator pos:start="51:9" pos:end="51:10">+=</operator> <name pos:start="51:12" pos:end="51:20"><name pos:start="51:12" pos:end="51:15">rect</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:20">top</name></name>  <operator pos:start="51:23" pos:end="51:23">*</operator> <name pos:start="51:25" pos:end="51:53"><name pos:start="51:25" pos:end="51:27">qxl</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:42">guest_primary</name><operator pos:start="51:43" pos:end="51:43">.</operator><name pos:start="51:44" pos:end="51:53">abs_stride</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:52"><expr pos:start="53:5" pos:end="53:51"><name pos:start="53:5" pos:end="53:7">src</name> <operator pos:start="53:9" pos:end="53:10">+=</operator> <name pos:start="53:12" pos:end="53:21"><name pos:start="53:12" pos:end="53:15">rect</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:21">left</name></name> <operator pos:start="53:23" pos:end="53:23">*</operator> <name pos:start="53:25" pos:end="53:51"><name pos:start="53:25" pos:end="53:27">qxl</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:42">guest_primary</name><operator pos:start="53:43" pos:end="53:43">.</operator><name pos:start="53:44" pos:end="53:51">bytes_pp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:52"><expr pos:start="55:5" pos:end="55:51"><name pos:start="55:5" pos:end="55:7">dst</name> <operator pos:start="55:9" pos:end="55:10">+=</operator> <name pos:start="55:12" pos:end="55:21"><name pos:start="55:12" pos:end="55:15">rect</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:21">left</name></name> <operator pos:start="55:23" pos:end="55:23">*</operator> <name pos:start="55:25" pos:end="55:51"><name pos:start="55:25" pos:end="55:27">qxl</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:42">guest_primary</name><operator pos:start="55:43" pos:end="55:43">.</operator><name pos:start="55:44" pos:end="55:51">bytes_pp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:68"><expr pos:start="57:5" pos:end="57:67"><name pos:start="57:5" pos:end="57:7">len</name>  <operator pos:start="57:10" pos:end="57:10">=</operator> <operator pos:start="57:12" pos:end="57:12">(</operator><name pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:16">rect</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:23">right</name></name> <operator pos:start="57:25" pos:end="57:25">-</operator> <name pos:start="57:27" pos:end="57:36"><name pos:start="57:27" pos:end="57:30">rect</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:36">left</name></name><operator pos:start="57:37" pos:end="57:37">)</operator> <operator pos:start="57:39" pos:end="57:39">*</operator> <name pos:start="57:41" pos:end="57:67"><name pos:start="57:41" pos:end="57:43">qxl</name><operator pos:start="57:44" pos:end="57:45">-&gt;</operator><name pos:start="57:46" pos:end="57:58">guest_primary</name><operator pos:start="57:59" pos:end="57:59">.</operator><name pos:start="57:60" pos:end="57:67">bytes_pp</name></name></expr>;</expr_stmt>



    <for pos:start="61:5" pos:end="69:5">for <control pos:start="61:9" pos:end="61:46">(<init pos:start="61:10" pos:end="61:23"><expr pos:start="61:10" pos:end="61:22"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <name pos:start="61:14" pos:end="61:22"><name pos:start="61:14" pos:end="61:17">rect</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:22">top</name></name></expr>;</init> <condition pos:start="61:25" pos:end="61:41"><expr pos:start="61:25" pos:end="61:40"><name pos:start="61:25" pos:end="61:25">i</name> <operator pos:start="61:27" pos:end="61:27">&lt;</operator> <name pos:start="61:29" pos:end="61:40"><name pos:start="61:29" pos:end="61:32">rect</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:40">bottom</name></name></expr>;</condition> <incr pos:start="61:43" pos:end="61:45"><expr pos:start="61:43" pos:end="61:45"><name pos:start="61:43" pos:end="61:43">i</name><operator pos:start="61:44" pos:end="61:45">++</operator></expr></incr>)</control> <block pos:start="61:48" pos:end="69:5">{<block_content pos:start="63:9" pos:end="67:45">

        <expr_stmt pos:start="63:9" pos:end="63:30"><expr pos:start="63:9" pos:end="63:29"><call pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:14">memcpy</name><argument_list pos:start="63:15" pos:end="63:29">(<argument pos:start="63:16" pos:end="63:18"><expr pos:start="63:16" pos:end="63:18"><name pos:start="63:16" pos:end="63:18">dst</name></expr></argument>, <argument pos:start="63:21" pos:end="63:23"><expr pos:start="63:21" pos:end="63:23"><name pos:start="63:21" pos:end="63:23">src</name></expr></argument>, <argument pos:start="63:26" pos:end="63:28"><expr pos:start="63:26" pos:end="63:28"><name pos:start="63:26" pos:end="63:28">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:45"><expr pos:start="65:9" pos:end="65:44"><name pos:start="65:9" pos:end="65:11">dst</name> <operator pos:start="65:13" pos:end="65:14">+=</operator> <name pos:start="65:16" pos:end="65:44"><name pos:start="65:16" pos:end="65:18">qxl</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:33">guest_primary</name><operator pos:start="65:34" pos:end="65:34">.</operator><name pos:start="65:35" pos:end="65:44">abs_stride</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:45"><expr pos:start="67:9" pos:end="67:44"><name pos:start="67:9" pos:end="67:11">src</name> <operator pos:start="67:13" pos:end="67:14">+=</operator> <name pos:start="67:16" pos:end="67:44"><name pos:start="67:16" pos:end="67:18">qxl</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:33">guest_primary</name><operator pos:start="67:34" pos:end="67:34">.</operator><name pos:start="67:35" pos:end="67:44">qxl_stride</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
