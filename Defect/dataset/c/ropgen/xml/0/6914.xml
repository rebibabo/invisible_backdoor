<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6914.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">audio_read_packet</name><parameter_list pos:start="1:29" pos:end="1:64">(<parameter pos:start="1:30" pos:end="1:48"><decl pos:start="1:30" pos:end="1:48"><type pos:start="1:30" pos:end="1:48"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">s1</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:58">AVPacket</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AlsaData</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name>  <init pos:start="5:18" pos:end="5:32">= <expr pos:start="5:20" pos:end="5:32"><name pos:start="5:20" pos:end="5:32"><name pos:start="5:20" pos:end="5:21">s1</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:33">= <expr pos:start="7:20" pos:end="7:33"><name pos:start="7:20" pos:end="7:33"><name pos:start="7:20" pos:end="7:21">s1</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:30">streams</name><index pos:start="7:31" pos:end="7:33">[<expr pos:start="7:32" pos:end="7:32"><literal type="number" pos:start="7:32" pos:end="7:32">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:20">snd_htimestamp_t</name></type> <name pos:start="11:22" pos:end="11:30">timestamp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:21">snd_pcm_uframes_t</name></type> <name pos:start="13:23" pos:end="13:30">ts_delay</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:47">(<expr pos:start="17:9" pos:end="17:46"><call pos:start="17:9" pos:end="17:42"><name pos:start="17:9" pos:end="17:21">av_new_packet</name><argument_list pos:start="17:22" pos:end="17:42">(<argument pos:start="17:23" pos:end="17:25"><expr pos:start="17:23" pos:end="17:25"><name pos:start="17:23" pos:end="17:25">pkt</name></expr></argument>, <argument pos:start="17:28" pos:end="17:41"><expr pos:start="17:28" pos:end="17:41"><name pos:start="17:28" pos:end="17:41"><name pos:start="17:28" pos:end="17:28">s</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:41">period_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:44" pos:end="17:44">&lt;</operator> <literal type="number" pos:start="17:46" pos:end="17:46">0</literal></expr>)</condition> <block pos:start="17:49" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:28">

        <return pos:start="19:9" pos:end="19:28">return <expr pos:start="19:16" pos:end="19:27"><call pos:start="19:16" pos:end="19:27"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:27">(<argument pos:start="19:24" pos:end="19:26"><expr pos:start="19:24" pos:end="19:26"><name pos:start="19:24" pos:end="19:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="25:5" pos:end="51:5">while <condition pos:start="25:11" pos:end="25:81">(<expr pos:start="25:12" pos:end="25:80"><operator pos:start="25:12" pos:end="25:12">(</operator><name pos:start="25:13" pos:end="25:15">res</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:75"><name pos:start="25:19" pos:end="25:31">snd_pcm_readi</name><argument_list pos:start="25:32" pos:end="25:75">(<argument pos:start="25:33" pos:end="25:36"><expr pos:start="25:33" pos:end="25:36"><name pos:start="25:33" pos:end="25:36"><name pos:start="25:33" pos:end="25:33">s</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:36">h</name></name></expr></argument>, <argument pos:start="25:39" pos:end="25:47"><expr pos:start="25:39" pos:end="25:47"><name pos:start="25:39" pos:end="25:47"><name pos:start="25:39" pos:end="25:41">pkt</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:47">data</name></name></expr></argument>, <argument pos:start="25:50" pos:end="25:74"><expr pos:start="25:50" pos:end="25:74"><name pos:start="25:50" pos:end="25:58"><name pos:start="25:50" pos:end="25:52">pkt</name><operator pos:start="25:53" pos:end="25:54">-&gt;</operator><name pos:start="25:55" pos:end="25:58">size</name></name> <operator pos:start="25:60" pos:end="25:60">/</operator> <name pos:start="25:62" pos:end="25:74"><name pos:start="25:62" pos:end="25:62">s</name><operator pos:start="25:63" pos:end="25:64">-&gt;</operator><name pos:start="25:65" pos:end="25:74">frame_size</name></name></expr></argument>)</argument_list></call><operator pos:start="25:76" pos:end="25:76">)</operator> <operator pos:start="25:78" pos:end="25:78">&lt;</operator> <literal type="number" pos:start="25:80" pos:end="25:80">0</literal></expr>)</condition> <block pos:start="25:83" pos:end="51:5">{<block_content pos:start="27:9" pos:end="49:9">

        <if_stmt pos:start="27:9" pos:end="35:9"><if pos:start="27:9" pos:end="35:9">if <condition pos:start="27:12" pos:end="27:27">(<expr pos:start="27:13" pos:end="27:26"><name pos:start="27:13" pos:end="27:15">res</name> <operator pos:start="27:17" pos:end="27:18">==</operator> <operator pos:start="27:20" pos:end="27:20">-</operator><name pos:start="27:21" pos:end="27:26">EAGAIN</name></expr>)</condition> <block pos:start="27:29" pos:end="35:9">{<block_content pos:start="29:13" pos:end="33:35">

            <expr_stmt pos:start="29:13" pos:end="29:32"><expr pos:start="29:13" pos:end="29:31"><call pos:start="29:13" pos:end="29:31"><name pos:start="29:13" pos:end="29:26">av_free_packet</name><argument_list pos:start="29:27" pos:end="29:31">(<argument pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <return pos:start="33:13" pos:end="33:35">return <expr pos:start="33:20" pos:end="33:34"><call pos:start="33:20" pos:end="33:34"><name pos:start="33:20" pos:end="33:26">AVERROR</name><argument_list pos:start="33:27" pos:end="33:34">(<argument pos:start="33:28" pos:end="33:33"><expr pos:start="33:28" pos:end="33:33"><name pos:start="33:28" pos:end="33:33">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="49:9"><if pos:start="37:9" pos:end="49:9">if <condition pos:start="37:12" pos:end="37:46">(<expr pos:start="37:13" pos:end="37:45"><call pos:start="37:13" pos:end="37:41"><name pos:start="37:13" pos:end="37:32">ff_alsa_xrun_recover</name><argument_list pos:start="37:33" pos:end="37:41">(<argument pos:start="37:34" pos:end="37:35"><expr pos:start="37:34" pos:end="37:35"><name pos:start="37:34" pos:end="37:35">s1</name></expr></argument>, <argument pos:start="37:38" pos:end="37:40"><expr pos:start="37:38" pos:end="37:40"><name pos:start="37:38" pos:end="37:40">res</name></expr></argument>)</argument_list></call> <operator pos:start="37:43" pos:end="37:43">&lt;</operator> <literal type="number" pos:start="37:45" pos:end="37:45">0</literal></expr>)</condition> <block pos:start="37:48" pos:end="49:9">{<block_content pos:start="39:13" pos:end="47:32">

            <expr_stmt pos:start="39:13" pos:end="41:38"><expr pos:start="39:13" pos:end="41:37"><call pos:start="39:13" pos:end="41:37"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="41:37">(<argument pos:start="39:20" pos:end="39:21"><expr pos:start="39:20" pos:end="39:21"><name pos:start="39:20" pos:end="39:21">s1</name></expr></argument>, <argument pos:start="39:24" pos:end="39:35"><expr pos:start="39:24" pos:end="39:35"><name pos:start="39:24" pos:end="39:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:38" pos:end="39:60"><expr pos:start="39:38" pos:end="39:60"><literal type="string" pos:start="39:38" pos:end="39:60">"ALSA read error: %s\n"</literal></expr></argument>,

                   <argument pos:start="41:20" pos:end="41:36"><expr pos:start="41:20" pos:end="41:36"><call pos:start="41:20" pos:end="41:36"><name pos:start="41:20" pos:end="41:31">snd_strerror</name><argument_list pos:start="41:32" pos:end="41:36">(<argument pos:start="41:33" pos:end="41:35"><expr pos:start="41:33" pos:end="41:35"><name pos:start="41:33" pos:end="41:35">res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:32"><expr pos:start="43:13" pos:end="43:31"><call pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:26">av_free_packet</name><argument_list pos:start="43:27" pos:end="43:31">(<argument pos:start="43:28" pos:end="43:30"><expr pos:start="43:28" pos:end="43:30"><name pos:start="43:28" pos:end="43:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <return pos:start="47:13" pos:end="47:32">return <expr pos:start="47:20" pos:end="47:31"><call pos:start="47:20" pos:end="47:31"><name pos:start="47:20" pos:end="47:26">AVERROR</name><argument_list pos:start="47:27" pos:end="47:31">(<argument pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="55:5" pos:end="55:52"><expr pos:start="55:5" pos:end="55:51"><call pos:start="55:5" pos:end="55:51"><name pos:start="55:5" pos:end="55:22">snd_pcm_htimestamp</name><argument_list pos:start="55:23" pos:end="55:51">(<argument pos:start="55:24" pos:end="55:27"><expr pos:start="55:24" pos:end="55:27"><name pos:start="55:24" pos:end="55:27"><name pos:start="55:24" pos:end="55:24">s</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:27">h</name></name></expr></argument>, <argument pos:start="55:30" pos:end="55:38"><expr pos:start="55:30" pos:end="55:38"><operator pos:start="55:30" pos:end="55:30">&amp;</operator><name pos:start="55:31" pos:end="55:38">ts_delay</name></expr></argument>, <argument pos:start="55:41" pos:end="55:50"><expr pos:start="55:41" pos:end="55:50"><operator pos:start="55:41" pos:end="55:41">&amp;</operator><name pos:start="55:42" pos:end="55:50">timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:20"><expr pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:12">ts_delay</name> <operator pos:start="57:14" pos:end="57:15">+=</operator> <name pos:start="57:17" pos:end="57:19">res</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="65:51"><expr pos:start="59:5" pos:end="65:50"><name pos:start="59:5" pos:end="59:12"><name pos:start="59:5" pos:end="59:7">pkt</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:12">pts</name></name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:31"><name pos:start="59:16" pos:end="59:24">timestamp</name><operator pos:start="59:25" pos:end="59:25">.</operator><name pos:start="59:26" pos:end="59:31">tv_sec</name></name> <operator pos:start="59:33" pos:end="59:33">*</operator> <literal type="number" pos:start="59:35" pos:end="61:16">1000000LL</literal>

               <operator pos:start="61:16" pos:end="61:16">+</operator> <operator pos:start="61:18" pos:end="61:18">(</operator><name pos:start="61:19" pos:end="61:35"><name pos:start="61:19" pos:end="61:27">timestamp</name><operator pos:start="61:28" pos:end="61:28">.</operator><name pos:start="61:29" pos:end="61:35">tv_nsec</name></name> <operator pos:start="61:37" pos:end="61:37">*</operator> <name pos:start="61:39" pos:end="61:60"><name pos:start="61:39" pos:end="61:40">st</name><operator pos:start="61:41" pos:end="61:42">-&gt;</operator><name pos:start="61:43" pos:end="61:47">codec</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:60">sample_rate</name></name>

                  <operator pos:start="63:19" pos:end="63:19">-</operator> <name pos:start="63:21" pos:end="63:28">ts_delay</name> <operator pos:start="63:30" pos:end="63:30">*</operator> <literal type="number" pos:start="63:32" pos:end="63:45">1000000000LL</literal> <operator pos:start="63:45" pos:end="63:45">+</operator> <name pos:start="63:47" pos:end="63:68"><name pos:start="63:47" pos:end="63:48">st</name><operator pos:start="63:49" pos:end="63:50">-&gt;</operator><name pos:start="63:51" pos:end="63:55">codec</name><operator pos:start="63:56" pos:end="63:57">-&gt;</operator><name pos:start="63:58" pos:end="63:68">sample_rate</name></name> <operator pos:start="63:70" pos:end="63:70">*</operator> <literal type="number" pos:start="63:72" pos:end="63:76">500LL</literal><operator pos:start="63:77" pos:end="63:77">)</operator>

               <operator pos:start="65:16" pos:end="65:16">/</operator> <operator pos:start="65:18" pos:end="65:18">(</operator><name pos:start="65:19" pos:end="65:40"><name pos:start="65:19" pos:end="65:20">st</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:27">codec</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:40">sample_rate</name></name> <operator pos:start="65:42" pos:end="65:42">*</operator> <literal type="number" pos:start="65:44" pos:end="65:49">1000LL</literal><operator pos:start="65:50" pos:end="65:50">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:36"><expr pos:start="69:5" pos:end="69:35"><name pos:start="69:5" pos:end="69:13"><name pos:start="69:5" pos:end="69:7">pkt</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:13">size</name></name> <operator pos:start="69:15" pos:end="69:15">=</operator> <name pos:start="69:17" pos:end="69:19">res</name> <operator pos:start="69:21" pos:end="69:21">*</operator> <name pos:start="69:23" pos:end="69:35"><name pos:start="69:23" pos:end="69:23">s</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:35">frame_size</name></name></expr>;</expr_stmt>



    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
