<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4684.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">dump_stream_format</name><parameter_list pos:start="1:31" pos:end="1:84">(<parameter pos:start="1:32" pos:end="1:50"><decl pos:start="1:32" pos:end="1:50"><type pos:start="1:32" pos:end="1:50"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">ic</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:57"><decl pos:start="1:53" pos:end="1:57"><type pos:start="1:53" pos:end="1:57"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:57">i</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:68">index</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:83"><decl pos:start="1:71" pos:end="1:83"><type pos:start="1:71" pos:end="1:83"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:83">is_output</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:36">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:17"><name pos:start="5:10" pos:end="5:12">buf</name><index pos:start="5:13" pos:end="5:17">[<expr pos:start="5:14" pos:end="5:16"><literal type="number" pos:start="5:14" pos:end="5:16">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:70"><decl pos:start="7:5" pos:end="7:69"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">flags</name> <init pos:start="7:15" pos:end="7:69">= <expr pos:start="7:17" pos:end="7:69"><operator pos:start="7:17" pos:end="7:17">(</operator><ternary pos:start="7:18" pos:end="7:68"><condition pos:start="7:18" pos:end="7:28"><expr pos:start="7:18" pos:end="7:26"><name pos:start="7:18" pos:end="7:26">is_output</name></expr> ?</condition><then pos:start="7:30" pos:end="7:47"> <expr pos:start="7:30" pos:end="7:47"><name pos:start="7:30" pos:end="7:47"><name pos:start="7:30" pos:end="7:31">ic</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:40">oformat</name><operator pos:start="7:41" pos:end="7:42">-&gt;</operator><name pos:start="7:43" pos:end="7:47">flags</name></name></expr> </then><else pos:start="7:49" pos:end="7:68">: <expr pos:start="7:51" pos:end="7:68"><name pos:start="7:51" pos:end="7:68"><name pos:start="7:51" pos:end="7:52">ic</name><operator pos:start="7:53" pos:end="7:54">-&gt;</operator><name pos:start="7:55" pos:end="7:61">iformat</name><operator pos:start="7:62" pos:end="7:63">-&gt;</operator><name pos:start="7:64" pos:end="7:68">flags</name></name></expr></else></ternary><operator pos:start="7:69" pos:end="7:69">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name> <init pos:start="9:18" pos:end="9:33">= <expr pos:start="9:20" pos:end="9:33"><name pos:start="9:20" pos:end="9:33"><name pos:start="9:20" pos:end="9:21">ic</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:30">streams</name><index pos:start="9:31" pos:end="9:33">[<expr pos:start="9:32" pos:end="9:32"><name pos:start="9:32" pos:end="9:32">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:57"><decl pos:start="11:5" pos:end="11:56"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">g</name> <init pos:start="11:11" pos:end="11:56">= <expr pos:start="11:13" pos:end="11:56"><call pos:start="11:13" pos:end="11:56"><name pos:start="11:13" pos:end="11:18">ff_gcd</name><argument_list pos:start="11:19" pos:end="11:56">(<argument pos:start="11:20" pos:end="11:36"><expr pos:start="11:20" pos:end="11:36"><name pos:start="11:20" pos:end="11:36"><name pos:start="11:20" pos:end="11:21">st</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:32">time_base</name><operator pos:start="11:33" pos:end="11:33">.</operator><name pos:start="11:34" pos:end="11:36">num</name></name></expr></argument>, <argument pos:start="11:39" pos:end="11:55"><expr pos:start="11:39" pos:end="11:55"><name pos:start="11:39" pos:end="11:55"><name pos:start="11:39" pos:end="11:40">st</name><operator pos:start="11:41" pos:end="11:42">-&gt;</operator><name pos:start="11:43" pos:end="11:51">time_base</name><operator pos:start="11:52" pos:end="11:52">.</operator><name pos:start="11:53" pos:end="11:55">den</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:59"><expr pos:start="13:5" pos:end="13:58"><call pos:start="13:5" pos:end="13:58"><name pos:start="13:5" pos:end="13:18">avcodec_string</name><argument_list pos:start="13:19" pos:end="13:58">(<argument pos:start="13:20" pos:end="13:22"><expr pos:start="13:20" pos:end="13:22"><name pos:start="13:20" pos:end="13:22">buf</name></expr></argument>, <argument pos:start="13:25" pos:end="13:35"><expr pos:start="13:25" pos:end="13:35"><sizeof pos:start="13:25" pos:end="13:35">sizeof<argument_list pos:start="13:31" pos:end="13:35">(<argument pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:34"><name pos:start="13:32" pos:end="13:34">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="13:38" pos:end="13:46"><expr pos:start="13:38" pos:end="13:46"><name pos:start="13:38" pos:end="13:46"><name pos:start="13:38" pos:end="13:39">st</name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:46">codec</name></name></expr></argument>, <argument pos:start="13:49" pos:end="13:57"><expr pos:start="13:49" pos:end="13:57"><name pos:start="13:49" pos:end="13:57">is_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:61"><expr pos:start="15:5" pos:end="15:60"><call pos:start="15:5" pos:end="15:60"><name pos:start="15:5" pos:end="15:10">av_log</name><argument_list pos:start="15:11" pos:end="15:60">(<argument pos:start="15:12" pos:end="15:15"><expr pos:start="15:12" pos:end="15:15"><name pos:start="15:12" pos:end="15:15">NULL</name></expr></argument>, <argument pos:start="15:18" pos:end="15:28"><expr pos:start="15:18" pos:end="15:28"><name pos:start="15:18" pos:end="15:28">AV_LOG_INFO</name></expr></argument>, <argument pos:start="15:31" pos:end="15:49"><expr pos:start="15:31" pos:end="15:49"><literal type="string" pos:start="15:31" pos:end="15:49">"    Stream #%d.%d"</literal></expr></argument>, <argument pos:start="15:52" pos:end="15:56"><expr pos:start="15:52" pos:end="15:56"><name pos:start="15:52" pos:end="15:56">index</name></expr></argument>, <argument pos:start="15:59" pos:end="15:59"><expr pos:start="15:59" pos:end="15:59"><name pos:start="15:59" pos:end="15:59">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="17:5" pos:end="17:63">/* the pid is an important information, so we display it */</comment>

    <comment type="block" pos:start="19:5" pos:end="19:35">/* XXX: add a generic system */</comment>

    <if_stmt pos:start="21:5" pos:end="23:52"><if pos:start="21:5" pos:end="23:52">if <condition pos:start="21:8" pos:end="21:31">(<expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:13">flags</name> <operator pos:start="21:15" pos:end="21:15">&amp;</operator> <name pos:start="21:17" pos:end="21:30">AVFMT_SHOW_IDS</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:52"><block_content pos:start="23:9" pos:end="23:52">

        <expr_stmt pos:start="23:9" pos:end="23:52"><expr pos:start="23:9" pos:end="23:51"><call pos:start="23:9" pos:end="23:51"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:51">(<argument pos:start="23:16" pos:end="23:19"><expr pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:19">NULL</name></expr></argument>, <argument pos:start="23:22" pos:end="23:32"><expr pos:start="23:22" pos:end="23:32"><name pos:start="23:22" pos:end="23:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="23:35" pos:end="23:42"><expr pos:start="23:35" pos:end="23:42"><literal type="string" pos:start="23:35" pos:end="23:42">"[0x%x]"</literal></expr></argument>, <argument pos:start="23:45" pos:end="23:50"><expr pos:start="23:45" pos:end="23:50"><name pos:start="23:45" pos:end="23:50"><name pos:start="23:45" pos:end="23:46">st</name><operator pos:start="23:47" pos:end="23:48">-&gt;</operator><name pos:start="23:49" pos:end="23:50">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="27:56"><if pos:start="25:5" pos:end="27:56">if <condition pos:start="25:8" pos:end="25:33">(<expr pos:start="25:9" pos:end="25:32"><call pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:14">strlen</name><argument_list pos:start="25:15" pos:end="25:28">(<argument pos:start="25:16" pos:end="25:27"><expr pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:17">st</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:27">language</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:30" pos:end="25:30">&gt;</operator> <literal type="number" pos:start="25:32" pos:end="25:32">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:56"><block_content pos:start="27:9" pos:end="27:56">

        <expr_stmt pos:start="27:9" pos:end="27:56"><expr pos:start="27:9" pos:end="27:55"><call pos:start="27:9" pos:end="27:55"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:55">(<argument pos:start="27:16" pos:end="27:19"><expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">NULL</name></expr></argument>, <argument pos:start="27:22" pos:end="27:32"><expr pos:start="27:22" pos:end="27:32"><name pos:start="27:22" pos:end="27:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="27:35" pos:end="27:40"><expr pos:start="27:35" pos:end="27:40"><literal type="string" pos:start="27:35" pos:end="27:40">"(%s)"</literal></expr></argument>, <argument pos:start="27:43" pos:end="27:54"><expr pos:start="27:43" pos:end="27:54"><name pos:start="27:43" pos:end="27:54"><name pos:start="27:43" pos:end="27:44">st</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:54">language</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:84"><expr pos:start="29:5" pos:end="29:83"><call pos:start="29:5" pos:end="29:83"><name pos:start="29:5" pos:end="29:10">av_log</name><argument_list pos:start="29:11" pos:end="29:83">(<argument pos:start="29:12" pos:end="29:15"><expr pos:start="29:12" pos:end="29:15"><name pos:start="29:12" pos:end="29:15">NULL</name></expr></argument>, <argument pos:start="29:18" pos:end="29:29"><expr pos:start="29:18" pos:end="29:29"><name pos:start="29:18" pos:end="29:29">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="29:32" pos:end="29:40"><expr pos:start="29:32" pos:end="29:40"><literal type="string" pos:start="29:32" pos:end="29:40">", %d/%d"</literal></expr></argument>, <argument pos:start="29:43" pos:end="29:61"><expr pos:start="29:43" pos:end="29:61"><name pos:start="29:43" pos:end="29:59"><name pos:start="29:43" pos:end="29:44">st</name><operator pos:start="29:45" pos:end="29:46">-&gt;</operator><name pos:start="29:47" pos:end="29:55">time_base</name><operator pos:start="29:56" pos:end="29:56">.</operator><name pos:start="29:57" pos:end="29:59">num</name></name><operator pos:start="29:60" pos:end="29:60">/</operator><name pos:start="29:61" pos:end="29:61">g</name></expr></argument>, <argument pos:start="29:64" pos:end="29:82"><expr pos:start="29:64" pos:end="29:82"><name pos:start="29:64" pos:end="29:80"><name pos:start="29:64" pos:end="29:65">st</name><operator pos:start="29:66" pos:end="29:67">-&gt;</operator><name pos:start="29:68" pos:end="29:76">time_base</name><operator pos:start="29:77" pos:end="29:77">.</operator><name pos:start="29:78" pos:end="29:80">den</name></name><operator pos:start="29:81" pos:end="29:81">/</operator><name pos:start="29:82" pos:end="29:82">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:43"><expr pos:start="31:5" pos:end="31:42"><call pos:start="31:5" pos:end="31:42"><name pos:start="31:5" pos:end="31:10">av_log</name><argument_list pos:start="31:11" pos:end="31:42">(<argument pos:start="31:12" pos:end="31:15"><expr pos:start="31:12" pos:end="31:15"><name pos:start="31:12" pos:end="31:15">NULL</name></expr></argument>, <argument pos:start="31:18" pos:end="31:28"><expr pos:start="31:18" pos:end="31:28"><name pos:start="31:18" pos:end="31:28">AV_LOG_INFO</name></expr></argument>, <argument pos:start="31:31" pos:end="31:36"><expr pos:start="31:31" pos:end="31:36"><literal type="string" pos:start="31:31" pos:end="31:36">": %s"</literal></expr></argument>, <argument pos:start="31:39" pos:end="31:41"><expr pos:start="31:39" pos:end="31:41"><name pos:start="31:39" pos:end="31:41">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="47:5"><if pos:start="33:5" pos:end="47:5">if<condition pos:start="33:7" pos:end="33:49">(<expr pos:start="33:8" pos:end="33:48"><name pos:start="33:8" pos:end="33:28"><name pos:start="33:8" pos:end="33:9">st</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:16">codec</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:28">codec_type</name></name> <operator pos:start="33:30" pos:end="33:31">==</operator> <name pos:start="33:33" pos:end="33:48">CODEC_TYPE_VIDEO</name></expr>)</condition><block pos:start="33:50" pos:end="47:5">{<block_content pos:start="35:9" pos:end="45:88">

        <if_stmt pos:start="35:9" pos:end="45:88"><if pos:start="35:9" pos:end="37:82">if<condition pos:start="35:11" pos:end="35:56">(<expr pos:start="35:12" pos:end="35:55"><name pos:start="35:12" pos:end="35:31"><name pos:start="35:12" pos:end="35:13">st</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:27">r_frame_rate</name><operator pos:start="35:28" pos:end="35:28">.</operator><name pos:start="35:29" pos:end="35:31">den</name></name> <operator pos:start="35:33" pos:end="35:34">&amp;&amp;</operator> <name pos:start="35:36" pos:end="35:55"><name pos:start="35:36" pos:end="35:37">st</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:51">r_frame_rate</name><operator pos:start="35:52" pos:end="35:52">.</operator><name pos:start="35:53" pos:end="35:55">num</name></name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:82"><block_content pos:start="37:13" pos:end="37:82">

            <expr_stmt pos:start="37:13" pos:end="37:82"><expr pos:start="37:13" pos:end="37:81"><call pos:start="37:13" pos:end="37:81"><name pos:start="37:13" pos:end="37:18">av_log</name><argument_list pos:start="37:19" pos:end="37:81">(<argument pos:start="37:20" pos:end="37:23"><expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">NULL</name></expr></argument>, <argument pos:start="37:26" pos:end="37:36"><expr pos:start="37:26" pos:end="37:36"><name pos:start="37:26" pos:end="37:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="37:39" pos:end="37:54"><expr pos:start="37:39" pos:end="37:54"><literal type="string" pos:start="37:39" pos:end="37:54">", %5.2f fps(r)"</literal></expr></argument>, <argument pos:start="37:57" pos:end="37:80"><expr pos:start="37:57" pos:end="37:80"><call pos:start="37:57" pos:end="37:80"><name pos:start="37:57" pos:end="37:62">av_q2d</name><argument_list pos:start="37:63" pos:end="37:80">(<argument pos:start="37:64" pos:end="37:79"><expr pos:start="37:64" pos:end="37:79"><name pos:start="37:64" pos:end="37:79"><name pos:start="37:64" pos:end="37:65">st</name><operator pos:start="37:66" pos:end="37:67">-&gt;</operator><name pos:start="37:68" pos:end="37:79">r_frame_rate</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<comment type="block" pos:start="39:1" pos:end="41:83">/*      else if(st-&gt;time_base.den &amp;&amp; st-&gt;time_base.num)

            av_log(NULL, AV_LOG_INFO, ", %5.2f fps(m)", 1/av_q2d(st-&gt;time_base));*/</comment>

        <else pos:start="43:9" pos:end="45:88">else<block type="pseudo" pos:start="45:13" pos:end="45:88"><block_content pos:start="45:13" pos:end="45:88">

            <expr_stmt pos:start="45:13" pos:end="45:88"><expr pos:start="45:13" pos:end="45:87"><call pos:start="45:13" pos:end="45:87"><name pos:start="45:13" pos:end="45:18">av_log</name><argument_list pos:start="45:19" pos:end="45:87">(<argument pos:start="45:20" pos:end="45:23"><expr pos:start="45:20" pos:end="45:23"><name pos:start="45:20" pos:end="45:23">NULL</name></expr></argument>, <argument pos:start="45:26" pos:end="45:36"><expr pos:start="45:26" pos:end="45:36"><name pos:start="45:26" pos:end="45:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="45:39" pos:end="45:54"><expr pos:start="45:39" pos:end="45:54"><literal type="string" pos:start="45:39" pos:end="45:54">", %5.2f fps(c)"</literal></expr></argument>, <argument pos:start="45:57" pos:end="45:86"><expr pos:start="45:57" pos:end="45:86"><literal type="number" pos:start="45:57" pos:end="45:57">1</literal><operator pos:start="45:58" pos:end="45:58">/</operator><call pos:start="45:59" pos:end="45:86"><name pos:start="45:59" pos:end="45:64">av_q2d</name><argument_list pos:start="45:65" pos:end="45:86">(<argument pos:start="45:66" pos:end="45:85"><expr pos:start="45:66" pos:end="45:85"><name pos:start="45:66" pos:end="45:85"><name pos:start="45:66" pos:end="45:67">st</name><operator pos:start="45:68" pos:end="45:69">-&gt;</operator><name pos:start="45:70" pos:end="45:74">codec</name><operator pos:start="45:75" pos:end="45:76">-&gt;</operator><name pos:start="45:77" pos:end="45:85">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:36"><expr pos:start="49:5" pos:end="49:35"><call pos:start="49:5" pos:end="49:35"><name pos:start="49:5" pos:end="49:10">av_log</name><argument_list pos:start="49:11" pos:end="49:35">(<argument pos:start="49:12" pos:end="49:15"><expr pos:start="49:12" pos:end="49:15"><name pos:start="49:12" pos:end="49:15">NULL</name></expr></argument>, <argument pos:start="49:18" pos:end="49:28"><expr pos:start="49:18" pos:end="49:28"><name pos:start="49:18" pos:end="49:28">AV_LOG_INFO</name></expr></argument>, <argument pos:start="49:31" pos:end="49:34"><expr pos:start="49:31" pos:end="49:34"><literal type="string" pos:start="49:31" pos:end="49:34">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
