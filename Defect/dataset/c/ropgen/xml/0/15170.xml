<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15170.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ppc6xx_tlb_check</name> <parameter_list pos:start="1:29" pos:end="3:73">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:37">CPUState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">env</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:58"><decl pos:start="1:45" pos:end="1:58"><type pos:start="1:45" pos:end="1:58"><name pos:start="1:45" pos:end="1:53">mmu_ctx_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">ctx</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:47"><decl pos:start="3:30" pos:end="3:47"><type pos:start="3:30" pos:end="3:47"><name pos:start="3:30" pos:end="3:41">target_ulong</name></type> <name pos:start="3:43" pos:end="3:47">eaddr</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:55"><decl pos:start="3:50" pos:end="3:55"><type pos:start="3:50" pos:end="3:55"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:55">rw</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:72"><decl pos:start="3:58" pos:end="3:72"><type pos:start="3:58" pos:end="3:72"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:72">access_type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="147:1">{<block_content pos:start="7:5" pos:end="145:15">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">ppc6xx_tlb_t</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">tlb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">nr</name></decl>, <decl pos:start="9:13" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:16">best</name></decl>, <decl pos:start="9:19" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:21">way</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:14"><expr pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:8">best</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <operator pos:start="15:12" pos:end="15:12">-</operator><literal type="number" pos:start="15:13" pos:end="15:13">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:13"><expr pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <operator pos:start="17:11" pos:end="17:11">-</operator><literal type="number" pos:start="17:12" pos:end="17:12">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="17:15" pos:end="17:32">/* No TLB found */</comment>

    <for pos:start="19:5" pos:end="119:5">for <control pos:start="19:9" pos:end="19:44">(<init pos:start="19:10" pos:end="19:17"><expr pos:start="19:10" pos:end="19:16"><name pos:start="19:10" pos:end="19:12">way</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</init> <condition pos:start="19:19" pos:end="19:37"><expr pos:start="19:19" pos:end="19:36"><name pos:start="19:19" pos:end="19:21">way</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <name pos:start="19:25" pos:end="19:36"><name pos:start="19:25" pos:end="19:27">env</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:36">nb_ways</name></name></expr>;</condition> <incr pos:start="19:39" pos:end="19:43"><expr pos:start="19:39" pos:end="19:43"><name pos:start="19:39" pos:end="19:41">way</name><operator pos:start="19:42" pos:end="19:43">++</operator></expr></incr>)</control> <block pos:start="19:46" pos:end="119:5">{<block_content pos:start="21:9" pos:end="117:9">

        <expr_stmt pos:start="21:9" pos:end="23:67"><expr pos:start="21:9" pos:end="23:66"><name pos:start="21:9" pos:end="21:10">nr</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <call pos:start="21:14" pos:end="23:66"><name pos:start="21:14" pos:end="21:30">ppc6xx_tlb_getnum</name><argument_list pos:start="21:31" pos:end="23:66">(<argument pos:start="21:32" pos:end="21:34"><expr pos:start="21:32" pos:end="21:34"><name pos:start="21:32" pos:end="21:34">env</name></expr></argument>, <argument pos:start="21:37" pos:end="21:41"><expr pos:start="21:37" pos:end="21:41"><name pos:start="21:37" pos:end="21:41">eaddr</name></expr></argument>, <argument pos:start="21:44" pos:end="21:46"><expr pos:start="21:44" pos:end="21:46"><name pos:start="21:44" pos:end="21:46">way</name></expr></argument>,

                               <argument pos:start="23:32" pos:end="23:65"><expr pos:start="23:32" pos:end="23:65"><ternary pos:start="23:32" pos:end="23:65"><condition pos:start="23:32" pos:end="23:59"><expr pos:start="23:32" pos:end="23:57"><name pos:start="23:32" pos:end="23:42">access_type</name> <operator pos:start="23:44" pos:end="23:45">==</operator> <name pos:start="23:47" pos:end="23:57">ACCESS_CODE</name></expr> ?</condition><then pos:start="23:61" pos:end="23:61"> <expr pos:start="23:61" pos:end="23:61"><literal type="number" pos:start="23:61" pos:end="23:61">1</literal></expr> </then><else pos:start="23:63" pos:end="23:65">: <expr pos:start="23:65" pos:end="23:65"><literal type="number" pos:start="23:65" pos:end="23:65">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:11">tlb</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <operator pos:start="25:15" pos:end="25:15">&amp;</operator><name pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:18">env</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:23">tlb</name><index pos:start="25:24" pos:end="25:27">[<expr pos:start="25:25" pos:end="25:26"><name pos:start="25:25" pos:end="25:26">nr</name></expr>]</index></name><operator pos:start="25:28" pos:end="25:28">.</operator><name pos:start="25:29" pos:end="25:32">tlb6</name></expr>;</expr_stmt>

        <comment type="block" pos:start="27:9" pos:end="27:72">/* This test "emulates" the PTE index match for hardware TLBs */</comment>

        <if_stmt pos:start="29:9" pos:end="54:0"><if pos:start="29:9" pos:end="54:0">if <condition pos:start="29:12" pos:end="29:51">(<expr pos:start="29:13" pos:end="29:50"><operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:18">eaddr</name> <operator pos:start="29:20" pos:end="29:20">&amp;</operator> <name pos:start="29:22" pos:end="29:37">TARGET_PAGE_MASK</name><operator pos:start="29:38" pos:end="29:38">)</operator> <operator pos:start="29:40" pos:end="29:41">!=</operator> <name pos:start="29:43" pos:end="29:50"><name pos:start="29:43" pos:end="29:45">tlb</name><operator pos:start="29:46" pos:end="29:47">-&gt;</operator><name pos:start="29:48" pos:end="29:50">EPN</name></name></expr>)</condition> <block pos:start="29:53" pos:end="54:0">{<block_content pos:start="33:13" pos:end="49:21">

<cpp:if pos:start="31:1" pos:end="31:32">#<cpp:directive pos:start="31:2" pos:end="31:3">if</cpp:directive> <expr pos:start="31:5" pos:end="31:32"><call pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:11">defined</name> <argument_list pos:start="31:13" pos:end="31:32">(<argument pos:start="31:14" pos:end="31:31"><expr pos:start="31:14" pos:end="31:31"><name pos:start="31:14" pos:end="31:31">DEBUG_SOFTWARE_TLB</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="33:13" pos:end="48:0"><if pos:start="33:13" pos:end="48:0">if <condition pos:start="33:16" pos:end="33:30">(<expr pos:start="33:17" pos:end="33:29"><name pos:start="33:17" pos:end="33:24">loglevel</name> <operator pos:start="33:26" pos:end="33:27">!=</operator> <literal type="number" pos:start="33:29" pos:end="33:29">0</literal></expr>)</condition> <block pos:start="33:32" pos:end="48:0">{<block_content pos:start="35:17" pos:end="43:70">

                <expr_stmt pos:start="35:17" pos:end="43:70"><expr pos:start="35:17" pos:end="43:69"><call pos:start="35:17" pos:end="43:69"><name pos:start="35:17" pos:end="35:23">fprintf</name><argument_list pos:start="35:24" pos:end="43:69">(<argument pos:start="35:25" pos:end="35:31"><expr pos:start="35:25" pos:end="35:31"><name pos:start="35:25" pos:end="35:31">logfile</name></expr></argument>, <argument pos:start="35:34" pos:end="37:42"><expr pos:start="35:34" pos:end="37:42"><literal type="string" pos:start="35:34" pos:end="35:49">"TLB %d/%d %s ["</literal> <name pos:start="35:51" pos:end="35:55">ADDRX</name> <literal type="string" pos:start="35:57" pos:end="35:59">" "</literal> <name pos:start="35:61" pos:end="35:65">ADDRX</name>

                        <literal type="string" pos:start="37:25" pos:end="37:31">"] &lt;&gt; "</literal> <name pos:start="37:33" pos:end="37:37">ADDRX</name> <literal type="string" pos:start="37:39" pos:end="37:42">"\n"</literal></expr></argument>,

                        <argument pos:start="39:25" pos:end="39:26"><expr pos:start="39:25" pos:end="39:26"><name pos:start="39:25" pos:end="39:26">nr</name></expr></argument>, <argument pos:start="39:29" pos:end="39:39"><expr pos:start="39:29" pos:end="39:39"><name pos:start="39:29" pos:end="39:39"><name pos:start="39:29" pos:end="39:31">env</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:39">nb_tlb</name></name></expr></argument>,

                        <argument pos:start="41:25" pos:end="41:67"><expr pos:start="41:25" pos:end="41:67"><ternary pos:start="41:25" pos:end="41:67"><condition pos:start="41:25" pos:end="41:49"><expr pos:start="41:25" pos:end="41:47"><call pos:start="41:25" pos:end="41:47"><name pos:start="41:25" pos:end="41:36">pte_is_valid</name><argument_list pos:start="41:37" pos:end="41:47">(<argument pos:start="41:38" pos:end="41:46"><expr pos:start="41:38" pos:end="41:46"><name pos:start="41:38" pos:end="41:46"><name pos:start="41:38" pos:end="41:40">tlb</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:46">pte0</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="41:51" pos:end="41:57"> <expr pos:start="41:51" pos:end="41:57"><literal type="string" pos:start="41:51" pos:end="41:57">"valid"</literal></expr> </then><else pos:start="41:59" pos:end="41:67">: <expr pos:start="41:61" pos:end="41:67"><literal type="string" pos:start="41:61" pos:end="41:67">"inval"</literal></expr></else></ternary></expr></argument>,

                        <argument pos:start="43:25" pos:end="43:32"><expr pos:start="43:25" pos:end="43:32"><name pos:start="43:25" pos:end="43:32"><name pos:start="43:25" pos:end="43:27">tlb</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:32">EPN</name></name></expr></argument>, <argument pos:start="43:35" pos:end="43:61"><expr pos:start="43:35" pos:end="43:61"><name pos:start="43:35" pos:end="43:42"><name pos:start="43:35" pos:end="43:37">tlb</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:42">EPN</name></name> <operator pos:start="43:44" pos:end="43:44">+</operator> <name pos:start="43:46" pos:end="43:61">TARGET_PAGE_SIZE</name></expr></argument>, <argument pos:start="43:64" pos:end="43:68"><expr pos:start="43:64" pos:end="43:68"><name pos:start="43:64" pos:end="43:68">eaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

            <continue pos:start="49:13" pos:end="49:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

<cpp:if pos:start="53:1" pos:end="53:32">#<cpp:directive pos:start="53:2" pos:end="53:3">if</cpp:directive> <expr pos:start="53:5" pos:end="53:32"><call pos:start="53:5" pos:end="53:32"><name pos:start="53:5" pos:end="53:11">defined</name> <argument_list pos:start="53:13" pos:end="53:32">(<argument pos:start="53:14" pos:end="53:31"><expr pos:start="53:14" pos:end="53:31"><name pos:start="53:14" pos:end="53:31">DEBUG_SOFTWARE_TLB</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="55:9" pos:end="72:0"><if pos:start="55:9" pos:end="72:0">if <condition pos:start="55:12" pos:end="55:26">(<expr pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:20">loglevel</name> <operator pos:start="55:22" pos:end="55:23">!=</operator> <literal type="number" pos:start="55:25" pos:end="55:25">0</literal></expr>)</condition> <block pos:start="55:28" pos:end="72:0">{<block_content pos:start="57:13" pos:end="67:76">

            <expr_stmt pos:start="57:13" pos:end="67:76"><expr pos:start="57:13" pos:end="67:75"><call pos:start="57:13" pos:end="67:75"><name pos:start="57:13" pos:end="57:19">fprintf</name><argument_list pos:start="57:20" pos:end="67:75">(<argument pos:start="57:21" pos:end="57:27"><expr pos:start="57:21" pos:end="57:27"><name pos:start="57:21" pos:end="57:27">logfile</name></expr></argument>, <argument pos:start="57:30" pos:end="59:30"><expr pos:start="57:30" pos:end="59:30"><literal type="string" pos:start="57:30" pos:end="57:44">"TLB %d/%d %s "</literal> <name pos:start="57:46" pos:end="57:50">ADDRX</name> <literal type="string" pos:start="57:52" pos:end="57:57">" &lt;&gt; "</literal> <name pos:start="57:59" pos:end="57:63">ADDRX</name> <literal type="string" pos:start="57:65" pos:end="57:67">" "</literal> <name pos:start="57:69" pos:end="57:73">ADDRX</name>

                    <literal type="string" pos:start="59:21" pos:end="59:30">" %c %c\n"</literal></expr></argument>,

                    <argument pos:start="61:21" pos:end="61:22"><expr pos:start="61:21" pos:end="61:22"><name pos:start="61:21" pos:end="61:22">nr</name></expr></argument>, <argument pos:start="61:25" pos:end="61:35"><expr pos:start="61:25" pos:end="61:35"><name pos:start="61:25" pos:end="61:35"><name pos:start="61:25" pos:end="61:27">env</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:35">nb_tlb</name></name></expr></argument>,

                    <argument pos:start="63:21" pos:end="63:63"><expr pos:start="63:21" pos:end="63:63"><ternary pos:start="63:21" pos:end="63:63"><condition pos:start="63:21" pos:end="63:45"><expr pos:start="63:21" pos:end="63:43"><call pos:start="63:21" pos:end="63:43"><name pos:start="63:21" pos:end="63:32">pte_is_valid</name><argument_list pos:start="63:33" pos:end="63:43">(<argument pos:start="63:34" pos:end="63:42"><expr pos:start="63:34" pos:end="63:42"><name pos:start="63:34" pos:end="63:42"><name pos:start="63:34" pos:end="63:36">tlb</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:42">pte0</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="63:47" pos:end="63:53"> <expr pos:start="63:47" pos:end="63:53"><literal type="string" pos:start="63:47" pos:end="63:53">"valid"</literal></expr> </then><else pos:start="63:55" pos:end="63:63">: <expr pos:start="63:57" pos:end="63:63"><literal type="string" pos:start="63:57" pos:end="63:63">"inval"</literal></expr></else></ternary></expr></argument>,

                    <argument pos:start="65:21" pos:end="65:28"><expr pos:start="65:21" pos:end="65:28"><name pos:start="65:21" pos:end="65:28"><name pos:start="65:21" pos:end="65:23">tlb</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:28">EPN</name></name></expr></argument>, <argument pos:start="65:31" pos:end="65:35"><expr pos:start="65:31" pos:end="65:35"><name pos:start="65:31" pos:end="65:35">eaddr</name></expr></argument>, <argument pos:start="65:38" pos:end="65:46"><expr pos:start="65:38" pos:end="65:46"><name pos:start="65:38" pos:end="65:46"><name pos:start="65:38" pos:end="65:40">tlb</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:46">pte1</name></name></expr></argument>,

                    <argument pos:start="67:21" pos:end="67:34"><expr pos:start="67:21" pos:end="67:34"><ternary pos:start="67:21" pos:end="67:34"><condition pos:start="67:21" pos:end="67:24"><expr pos:start="67:21" pos:end="67:22"><name pos:start="67:21" pos:end="67:22">rw</name></expr> ?</condition><then pos:start="67:26" pos:end="67:28"> <expr pos:start="67:26" pos:end="67:28"><literal type="char" pos:start="67:26" pos:end="67:28">'S'</literal></expr> </then><else pos:start="67:30" pos:end="67:34">: <expr pos:start="67:32" pos:end="67:34"><literal type="char" pos:start="67:32" pos:end="67:34">'L'</literal></expr></else></ternary></expr></argument>, <argument pos:start="67:37" pos:end="67:74"><expr pos:start="67:37" pos:end="67:74"><ternary pos:start="67:37" pos:end="67:74"><condition pos:start="67:37" pos:end="67:64"><expr pos:start="67:37" pos:end="67:62"><name pos:start="67:37" pos:end="67:47">access_type</name> <operator pos:start="67:49" pos:end="67:50">==</operator> <name pos:start="67:52" pos:end="67:62">ACCESS_CODE</name></expr> ?</condition><then pos:start="67:66" pos:end="67:68"> <expr pos:start="67:66" pos:end="67:68"><literal type="char" pos:start="67:66" pos:end="67:68">'I'</literal></expr> </then><else pos:start="67:70" pos:end="67:74">: <expr pos:start="67:72" pos:end="67:74"><literal type="char" pos:start="67:72" pos:end="67:74">'D'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>

        <switch pos:start="73:9" pos:end="117:9">switch <condition pos:start="73:16" pos:end="73:62">(<expr pos:start="73:17" pos:end="73:61"><call pos:start="73:17" pos:end="73:61"><name pos:start="73:17" pos:end="73:27">pte32_check</name><argument_list pos:start="73:28" pos:end="73:61">(<argument pos:start="73:29" pos:end="73:31"><expr pos:start="73:29" pos:end="73:31"><name pos:start="73:29" pos:end="73:31">ctx</name></expr></argument>, <argument pos:start="73:34" pos:end="73:42"><expr pos:start="73:34" pos:end="73:42"><name pos:start="73:34" pos:end="73:42"><name pos:start="73:34" pos:end="73:36">tlb</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:42">pte0</name></name></expr></argument>, <argument pos:start="73:45" pos:end="73:53"><expr pos:start="73:45" pos:end="73:53"><name pos:start="73:45" pos:end="73:53"><name pos:start="73:45" pos:end="73:47">tlb</name><operator pos:start="73:48" pos:end="73:49">-&gt;</operator><name pos:start="73:50" pos:end="73:53">pte1</name></name></expr></argument>, <argument pos:start="73:56" pos:end="73:56"><expr pos:start="73:56" pos:end="73:56"><literal type="number" pos:start="73:56" pos:end="73:56">0</literal></expr></argument>, <argument pos:start="73:59" pos:end="73:60"><expr pos:start="73:59" pos:end="73:60"><name pos:start="73:59" pos:end="73:60">rw</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:64" pos:end="117:9">{<block_content pos:start="75:9" pos:end="115:22">

        <case pos:start="75:9" pos:end="75:16">case <expr pos:start="75:14" pos:end="75:15"><operator pos:start="75:14" pos:end="75:14">-</operator><literal type="number" pos:start="75:15" pos:end="75:15">3</literal></expr>:</case>

            <comment type="block" pos:start="77:13" pos:end="77:35">/* TLB inconsistency */</comment>

            <return pos:start="79:13" pos:end="79:22">return <expr pos:start="79:20" pos:end="79:21"><operator pos:start="79:20" pos:end="79:20">-</operator><literal type="number" pos:start="79:21" pos:end="79:21">1</literal></expr>;</return>

        <case pos:start="81:9" pos:end="81:16">case <expr pos:start="81:14" pos:end="81:15"><operator pos:start="81:14" pos:end="81:14">-</operator><literal type="number" pos:start="81:15" pos:end="81:15">2</literal></expr>:</case>

            <comment type="block" pos:start="83:13" pos:end="83:34">/* Access violation */</comment>

            <expr_stmt pos:start="85:13" pos:end="85:21"><expr pos:start="85:13" pos:end="85:20"><name pos:start="85:13" pos:end="85:15">ret</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <operator pos:start="85:19" pos:end="85:19">-</operator><literal type="number" pos:start="85:20" pos:end="85:20">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:22"><expr pos:start="87:13" pos:end="87:21"><name pos:start="87:13" pos:end="87:16">best</name> <operator pos:start="87:18" pos:end="87:18">=</operator> <name pos:start="87:20" pos:end="87:21">nr</name></expr>;</expr_stmt>

            <break pos:start="89:13" pos:end="89:18">break;</break>

        <case pos:start="91:9" pos:end="91:16">case <expr pos:start="91:14" pos:end="91:15"><operator pos:start="91:14" pos:end="91:14">-</operator><literal type="number" pos:start="91:15" pos:end="91:15">1</literal></expr>:</case>

        <default pos:start="93:9" pos:end="93:16">default:</default>

            <comment type="block" pos:start="95:13" pos:end="95:26">/* No match */</comment>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        <case pos:start="99:9" pos:end="99:15">case <expr pos:start="99:14" pos:end="99:14"><literal type="number" pos:start="99:14" pos:end="99:14">0</literal></expr>:</case>

            <comment type="block" pos:start="101:13" pos:end="101:32">/* access granted */</comment>

            <comment type="block" pos:start="103:13" pos:end="109:15">/* XXX: we should go on looping to check all TLBs consistency

             *      but we can speed-up the whole thing as the

             *      result would be undefined if TLBs are not consistent.

             */</comment>

            <expr_stmt pos:start="111:13" pos:end="111:20"><expr pos:start="111:13" pos:end="111:19"><name pos:start="111:13" pos:end="111:15">ret</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <literal type="number" pos:start="111:19" pos:end="111:19">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:22"><expr pos:start="113:13" pos:end="113:21"><name pos:start="113:13" pos:end="113:16">best</name> <operator pos:start="113:18" pos:end="113:18">=</operator> <name pos:start="113:20" pos:end="113:21">nr</name></expr>;</expr_stmt>

            <goto pos:start="115:13" pos:end="115:22">goto <name pos:start="115:18" pos:end="115:21">done</name>;</goto>

        </block_content>}</block></switch>

    </block_content>}</block></for>

    <if_stmt pos:start="121:5" pos:end="141:5"><if pos:start="121:5" pos:end="141:5">if <condition pos:start="121:8" pos:end="121:19">(<expr pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:12">best</name> <operator pos:start="121:14" pos:end="121:15">!=</operator> <operator pos:start="121:17" pos:end="121:17">-</operator><literal type="number" pos:start="121:18" pos:end="121:18">1</literal></expr>)</condition> <block pos:start="121:21" pos:end="141:5">{<block_content pos:start="123:5" pos:end="139:66">

    <label pos:start="123:5" pos:end="126:0"><name pos:start="123:5" pos:end="123:8">done</name>:</label>

<cpp:if pos:start="125:1" pos:end="125:32">#<cpp:directive pos:start="125:2" pos:end="125:3">if</cpp:directive> <expr pos:start="125:5" pos:end="125:32"><call pos:start="125:5" pos:end="125:32"><name pos:start="125:5" pos:end="125:11">defined</name> <argument_list pos:start="125:13" pos:end="125:32">(<argument pos:start="125:14" pos:end="125:31"><expr pos:start="125:14" pos:end="125:31"><name pos:start="125:14" pos:end="125:31">DEBUG_SOFTWARE_TLB</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="127:9" pos:end="136:0"><if pos:start="127:9" pos:end="136:0">if <condition pos:start="127:12" pos:end="127:26">(<expr pos:start="127:13" pos:end="127:25"><name pos:start="127:13" pos:end="127:20">loglevel</name> <operator pos:start="127:22" pos:end="127:23">!=</operator> <literal type="number" pos:start="127:25" pos:end="127:25">0</literal></expr>)</condition> <block pos:start="127:28" pos:end="136:0">{<block_content pos:start="129:13" pos:end="131:67">

            <expr_stmt pos:start="129:13" pos:end="131:67"><expr pos:start="129:13" pos:end="131:66"><call pos:start="129:13" pos:end="131:66"><name pos:start="129:13" pos:end="129:19">fprintf</name><argument_list pos:start="129:20" pos:end="131:66">(<argument pos:start="129:21" pos:end="129:27"><expr pos:start="129:21" pos:end="129:27"><name pos:start="129:21" pos:end="129:27">logfile</name></expr></argument>, <argument pos:start="129:30" pos:end="129:77"><expr pos:start="129:30" pos:end="129:77"><literal type="string" pos:start="129:30" pos:end="129:77">"found TLB at addr 0x%08lx prot=0x%01x ret=%d\n"</literal></expr></argument>,

                    <argument pos:start="131:21" pos:end="131:49"><expr pos:start="131:21" pos:end="131:49"><name pos:start="131:21" pos:end="131:30"><name pos:start="131:21" pos:end="131:23">ctx</name><operator pos:start="131:24" pos:end="131:25">-&gt;</operator><name pos:start="131:26" pos:end="131:30">raddr</name></name> <operator pos:start="131:32" pos:end="131:32">&amp;</operator> <name pos:start="131:34" pos:end="131:49">TARGET_PAGE_MASK</name></expr></argument>, <argument pos:start="131:52" pos:end="131:60"><expr pos:start="131:52" pos:end="131:60"><name pos:start="131:52" pos:end="131:60"><name pos:start="131:52" pos:end="131:54">ctx</name><operator pos:start="131:55" pos:end="131:56">-&gt;</operator><name pos:start="131:57" pos:end="131:60">prot</name></name></expr></argument>, <argument pos:start="131:63" pos:end="131:65"><expr pos:start="131:63" pos:end="131:65"><name pos:start="131:63" pos:end="131:65">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="135:1" pos:end="135:6">#<cpp:directive pos:start="135:2" pos:end="135:6">endif</cpp:directive></cpp:endif>

        <comment type="block" pos:start="137:9" pos:end="137:31">/* Update page flags */</comment>

        <expr_stmt pos:start="139:9" pos:end="139:66"><expr pos:start="139:9" pos:end="139:65"><call pos:start="139:9" pos:end="139:65"><name pos:start="139:9" pos:end="139:24">pte_update_flags</name><argument_list pos:start="139:25" pos:end="139:65">(<argument pos:start="139:26" pos:end="139:28"><expr pos:start="139:26" pos:end="139:28"><name pos:start="139:26" pos:end="139:28">ctx</name></expr></argument>, <argument pos:start="139:31" pos:end="139:55"><expr pos:start="139:31" pos:end="139:55"><operator pos:start="139:31" pos:end="139:31">&amp;</operator><name pos:start="139:32" pos:end="139:45"><name pos:start="139:32" pos:end="139:34">env</name><operator pos:start="139:35" pos:end="139:36">-&gt;</operator><name pos:start="139:37" pos:end="139:39">tlb</name><index pos:start="139:40" pos:end="139:45">[<expr pos:start="139:41" pos:end="139:44"><name pos:start="139:41" pos:end="139:44">best</name></expr>]</index></name><operator pos:start="139:46" pos:end="139:46">.</operator><name pos:start="139:47" pos:end="139:55"><name pos:start="139:47" pos:end="139:50">tlb6</name><operator pos:start="139:51" pos:end="139:51">.</operator><name pos:start="139:52" pos:end="139:55">pte1</name></name></expr></argument>, <argument pos:start="139:58" pos:end="139:60"><expr pos:start="139:58" pos:end="139:60"><name pos:start="139:58" pos:end="139:60">ret</name></expr></argument>, <argument pos:start="139:63" pos:end="139:64"><expr pos:start="139:63" pos:end="139:64"><name pos:start="139:63" pos:end="139:64">rw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="145:5" pos:end="145:15">return <expr pos:start="145:12" pos:end="145:14"><name pos:start="145:12" pos:end="145:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
