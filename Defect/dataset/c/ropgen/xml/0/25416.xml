<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25416.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">avisynth_read_packet_video</name><parameter_list pos:start="1:38" pos:end="3:50">(<parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><name pos:start="1:39" pos:end="1:53">AVFormatContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">s</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:66">AVPacket</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">pkt</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:49"><decl pos:start="3:39" pos:end="3:49"><type pos:start="3:39" pos:end="3:49"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:49">discard</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="183:1">{<block_content pos:start="7:5" pos:end="181:13">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AviSynthContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">avs</name> <init pos:start="7:26" pos:end="7:39">= <expr pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVS_VideoFrame</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">char</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:24">dst_p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:25"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:18">unsigned</name> <name pos:start="13:20" pos:end="13:23">char</name> <modifier pos:start="13:25" pos:end="13:25">*</modifier></type><name pos:start="13:26" pos:end="13:30">src_p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:55"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">n</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">i</name></decl>, <decl pos:start="15:15" pos:end="15:19"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:15" pos:end="15:19">plane</name></decl>, <decl pos:start="15:22" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:22" pos:end="15:28">rowsize</name></decl>, <decl pos:start="15:31" pos:end="15:41"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:31" pos:end="15:41">planeheight</name></decl>, <decl pos:start="15:44" pos:end="15:48"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:44" pos:end="15:48">pitch</name></decl>, <decl pos:start="15:51" pos:end="15:54"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:51" pos:end="15:54">bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:21">error</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:27"><if pos:start="21:5" pos:end="23:27">if <condition pos:start="21:8" pos:end="21:47">(<expr pos:start="21:9" pos:end="21:46"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:11">avs</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:23">curr_frame</name></name> <operator pos:start="21:25" pos:end="21:26">&gt;=</operator> <name pos:start="21:28" pos:end="21:46"><name pos:start="21:28" pos:end="21:30">avs</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:34">vi</name><operator pos:start="21:35" pos:end="21:36">-&gt;</operator><name pos:start="21:37" pos:end="21:46">num_frames</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:27"><block_content pos:start="23:9" pos:end="23:27">

        <return pos:start="23:9" pos:end="23:27">return <expr pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:77">/* This must happen even if the stream is discarded to prevent desync. */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:5">n</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <name pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:11">avs</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:23">curr_frame</name></name><operator pos:start="29:24" pos:end="29:25">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="38:0"><if pos:start="31:5" pos:end="38:0">if <condition pos:start="31:8" pos:end="31:16">(<expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:15">discard</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="38:0"><block_content pos:start="33:9" pos:end="38:0">

        <return pos:start="33:9" pos:end="38:0">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



<cpp:ifdef pos:start="37:1" pos:end="37:21">#<cpp:directive pos:start="37:2" pos:end="37:6">ifdef</cpp:directive> <name pos:start="37:8" pos:end="37:21">USING_AVISYNTH</name></cpp:ifdef>

    <comment type="block" pos:start="39:5" pos:end="43:59">/* Define the bpp values for the new AviSynth 2.6 colorspaces.

     * Since AvxSynth doesn't have these functions, special-case

     * it in order to avoid implicit declaration errors. */</comment>



    <if_stmt pos:start="47:5" pos:end="68:0"><if pos:start="47:5" pos:end="49:18">if <condition pos:start="47:8" pos:end="47:41">(<expr pos:start="47:9" pos:end="47:40"><call pos:start="47:9" pos:end="47:40"><name pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:19">avs_library</name><operator pos:start="47:20" pos:end="47:20">.</operator><name pos:start="47:21" pos:end="47:31">avs_is_yv24</name></name><argument_list pos:start="47:32" pos:end="47:40">(<argument pos:start="47:33" pos:end="47:39"><expr pos:start="47:33" pos:end="47:39"><name pos:start="47:33" pos:end="47:39"><name pos:start="47:33" pos:end="47:35">avs</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:39">vi</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:18"><block_content pos:start="49:9" pos:end="49:18">

        <expr_stmt pos:start="49:9" pos:end="49:18"><expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:12">bits</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <literal type="number" pos:start="49:16" pos:end="49:17">24</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="51:5" pos:end="53:18">else if <condition pos:start="51:13" pos:end="51:46">(<expr pos:start="51:14" pos:end="51:45"><call pos:start="51:14" pos:end="51:45"><name pos:start="51:14" pos:end="51:36"><name pos:start="51:14" pos:end="51:24">avs_library</name><operator pos:start="51:25" pos:end="51:25">.</operator><name pos:start="51:26" pos:end="51:36">avs_is_yv16</name></name><argument_list pos:start="51:37" pos:end="51:45">(<argument pos:start="51:38" pos:end="51:44"><expr pos:start="51:38" pos:end="51:44"><name pos:start="51:38" pos:end="51:44"><name pos:start="51:38" pos:end="51:40">avs</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:44">vi</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:18"><block_content pos:start="53:9" pos:end="53:18">

        <expr_stmt pos:start="53:9" pos:end="53:18"><expr pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:12">bits</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <literal type="number" pos:start="53:16" pos:end="53:17">16</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="55:5" pos:end="57:18">else if <condition pos:start="55:13" pos:end="55:47">(<expr pos:start="55:14" pos:end="55:46"><call pos:start="55:14" pos:end="55:46"><name pos:start="55:14" pos:end="55:37"><name pos:start="55:14" pos:end="55:24">avs_library</name><operator pos:start="55:25" pos:end="55:25">.</operator><name pos:start="55:26" pos:end="55:37">avs_is_yv411</name></name><argument_list pos:start="55:38" pos:end="55:46">(<argument pos:start="55:39" pos:end="55:45"><expr pos:start="55:39" pos:end="55:45"><name pos:start="55:39" pos:end="55:45"><name pos:start="55:39" pos:end="55:41">avs</name><operator pos:start="55:42" pos:end="55:43">-&gt;</operator><name pos:start="55:44" pos:end="55:45">vi</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:18"><block_content pos:start="57:9" pos:end="57:18">

        <expr_stmt pos:start="57:9" pos:end="57:18"><expr pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:12">bits</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <literal type="number" pos:start="57:16" pos:end="57:17">12</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="59:5" pos:end="61:17">else if <condition pos:start="59:13" pos:end="59:44">(<expr pos:start="59:14" pos:end="59:43"><call pos:start="59:14" pos:end="59:43"><name pos:start="59:14" pos:end="59:34"><name pos:start="59:14" pos:end="59:24">avs_library</name><operator pos:start="59:25" pos:end="59:25">.</operator><name pos:start="59:26" pos:end="59:34">avs_is_y8</name></name><argument_list pos:start="59:35" pos:end="59:43">(<argument pos:start="59:36" pos:end="59:42"><expr pos:start="59:36" pos:end="59:42"><name pos:start="59:36" pos:end="59:42"><name pos:start="59:36" pos:end="59:38">avs</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:42">vi</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:17"><block_content pos:start="61:9" pos:end="61:17">

        <expr_stmt pos:start="61:9" pos:end="61:17"><expr pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:12">bits</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <literal type="number" pos:start="61:16" pos:end="61:16">8</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="63:5" pos:end="68:0">else<block type="pseudo" pos:start="65:9" pos:end="68:0"><block_content pos:start="65:9" pos:end="68:0">

        <expr_stmt pos:start="65:9" pos:end="68:0"><expr pos:start="65:9" pos:end="65:54"><name pos:start="65:9" pos:end="65:12">bits</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <call pos:start="65:16" pos:end="65:54"><name pos:start="65:16" pos:end="65:45"><name pos:start="65:16" pos:end="65:26">avs_library</name><operator pos:start="65:27" pos:end="65:27">.</operator><name pos:start="65:28" pos:end="65:45">avs_bits_per_pixel</name></name><argument_list pos:start="65:46" pos:end="65:54">(<argument pos:start="65:47" pos:end="65:53"><expr pos:start="65:47" pos:end="65:53"><name pos:start="65:47" pos:end="65:53"><name pos:start="65:47" pos:end="65:49">avs</name><operator pos:start="65:50" pos:end="65:51">-&gt;</operator><name pos:start="65:52" pos:end="65:53">vi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:else pos:start="67:1" pos:end="67:5">#<cpp:directive pos:start="67:2" pos:end="67:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="69:5" pos:end="72:0"><expr pos:start="69:5" pos:end="69:38"><name pos:start="69:5" pos:end="69:8">bits</name> <operator pos:start="69:10" pos:end="69:10">=</operator> <call pos:start="69:12" pos:end="69:38"><name pos:start="69:12" pos:end="69:29">avs_bits_per_pixel</name><argument_list pos:start="69:30" pos:end="69:38">(<argument pos:start="69:31" pos:end="69:37"><expr pos:start="69:31" pos:end="69:37"><name pos:start="69:31" pos:end="69:37"><name pos:start="69:31" pos:end="69:33">avs</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:37">vi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="75:5" pos:end="77:21">/* Without the cast to int64_t, calculation overflows at about 9k x 9k

     * resolution. */</comment>

    <expr_stmt pos:start="79:5" pos:end="81:56"><expr pos:start="79:5" pos:end="81:55"><name pos:start="79:5" pos:end="79:13"><name pos:start="79:5" pos:end="79:7">pkt</name><operator pos:start="79:8" pos:end="79:9">-&gt;</operator><name pos:start="79:10" pos:end="79:13">size</name></name> <operator pos:start="79:15" pos:end="79:15">=</operator> <operator pos:start="79:17" pos:end="79:17">(</operator><operator pos:start="79:18" pos:end="79:18">(</operator><operator pos:start="79:19" pos:end="79:19">(</operator><name pos:start="79:20" pos:end="79:26">int64_t</name><operator pos:start="79:27" pos:end="79:27">)</operator><name pos:start="79:28" pos:end="79:41"><name pos:start="79:28" pos:end="79:30">avs</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:34">vi</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:41">width</name></name> <operator pos:start="79:43" pos:end="79:43">*</operator>

                  <operator pos:start="81:19" pos:end="81:19">(</operator><name pos:start="81:20" pos:end="81:26">int64_t</name><operator pos:start="81:27" pos:end="81:27">)</operator><name pos:start="81:28" pos:end="81:42"><name pos:start="81:28" pos:end="81:30">avs</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:34">vi</name><operator pos:start="81:35" pos:end="81:36">-&gt;</operator><name pos:start="81:37" pos:end="81:42">height</name></name><operator pos:start="81:43" pos:end="81:43">)</operator> <operator pos:start="81:45" pos:end="81:45">*</operator> <name pos:start="81:47" pos:end="81:50">bits</name><operator pos:start="81:51" pos:end="81:51">)</operator> <operator pos:start="81:53" pos:end="81:53">/</operator> <literal type="number" pos:start="81:55" pos:end="81:55">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="85:31"><if pos:start="83:5" pos:end="85:31">if <condition pos:start="83:8" pos:end="83:19">(<expr pos:start="83:9" pos:end="83:18"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:18"><name pos:start="83:10" pos:end="83:12">pkt</name><operator pos:start="83:13" pos:end="83:14">-&gt;</operator><name pos:start="83:15" pos:end="83:18">size</name></name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:31"><block_content pos:start="85:9" pos:end="85:31">

        <return pos:start="85:9" pos:end="85:31">return <expr pos:start="85:16" pos:end="85:30"><name pos:start="85:16" pos:end="85:30">AVERROR_UNKNOWN</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="91:31"><if pos:start="89:5" pos:end="91:31">if <condition pos:start="89:8" pos:end="89:42">(<expr pos:start="89:9" pos:end="89:41"><call pos:start="89:9" pos:end="89:37"><name pos:start="89:9" pos:end="89:21">av_new_packet</name><argument_list pos:start="89:22" pos:end="89:37">(<argument pos:start="89:23" pos:end="89:25"><expr pos:start="89:23" pos:end="89:25"><name pos:start="89:23" pos:end="89:25">pkt</name></expr></argument>, <argument pos:start="89:28" pos:end="89:36"><expr pos:start="89:28" pos:end="89:36"><name pos:start="89:28" pos:end="89:36"><name pos:start="89:28" pos:end="89:30">pkt</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:36">size</name></name></expr></argument>)</argument_list></call> <operator pos:start="89:39" pos:end="89:39">&lt;</operator> <literal type="number" pos:start="89:41" pos:end="89:41">0</literal></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:31"><block_content pos:start="91:9" pos:end="91:31">

        <return pos:start="91:9" pos:end="91:31">return <expr pos:start="91:16" pos:end="91:30"><call pos:start="91:16" pos:end="91:30"><name pos:start="91:16" pos:end="91:22">AVERROR</name><argument_list pos:start="91:23" pos:end="91:30">(<argument pos:start="91:24" pos:end="91:29"><expr pos:start="91:24" pos:end="91:29"><name pos:start="91:24" pos:end="91:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:22"><expr pos:start="95:5" pos:end="95:21"><name pos:start="95:5" pos:end="95:12"><name pos:start="95:5" pos:end="95:7">pkt</name><operator pos:start="95:8" pos:end="95:9">-&gt;</operator><name pos:start="95:10" pos:end="95:12">pts</name></name>      <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:21">n</name></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:22"><expr pos:start="97:5" pos:end="97:21"><name pos:start="97:5" pos:end="97:12"><name pos:start="97:5" pos:end="97:7">pkt</name><operator pos:start="97:8" pos:end="97:9">-&gt;</operator><name pos:start="97:10" pos:end="97:12">dts</name></name>      <operator pos:start="97:19" pos:end="97:19">=</operator> <name pos:start="97:21" pos:end="97:21">n</name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:22"><expr pos:start="99:5" pos:end="99:21"><name pos:start="99:5" pos:end="99:17"><name pos:start="99:5" pos:end="99:7">pkt</name><operator pos:start="99:8" pos:end="99:9">-&gt;</operator><name pos:start="99:10" pos:end="99:17">duration</name></name> <operator pos:start="99:19" pos:end="99:19">=</operator> <literal type="number" pos:start="99:21" pos:end="99:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:41"><expr pos:start="101:5" pos:end="101:40"><name pos:start="101:5" pos:end="101:21"><name pos:start="101:5" pos:end="101:7">pkt</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:21">stream_index</name></name> <operator pos:start="101:23" pos:end="101:23">=</operator> <name pos:start="101:25" pos:end="101:40"><name pos:start="101:25" pos:end="101:27">avs</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:40">curr_stream</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:52"><expr pos:start="105:5" pos:end="105:51"><name pos:start="105:5" pos:end="105:9">frame</name> <operator pos:start="105:11" pos:end="105:11">=</operator> <call pos:start="105:13" pos:end="105:51"><name pos:start="105:13" pos:end="105:37"><name pos:start="105:13" pos:end="105:23">avs_library</name><operator pos:start="105:24" pos:end="105:24">.</operator><name pos:start="105:25" pos:end="105:37">avs_get_frame</name></name><argument_list pos:start="105:38" pos:end="105:51">(<argument pos:start="105:39" pos:end="105:47"><expr pos:start="105:39" pos:end="105:47"><name pos:start="105:39" pos:end="105:47"><name pos:start="105:39" pos:end="105:41">avs</name><operator pos:start="105:42" pos:end="105:43">-&gt;</operator><name pos:start="105:44" pos:end="105:47">clip</name></name></expr></argument>, <argument pos:start="105:50" pos:end="105:50"><expr pos:start="105:50" pos:end="105:50"><name pos:start="105:50" pos:end="105:50">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:54"><expr pos:start="107:5" pos:end="107:53"><name pos:start="107:5" pos:end="107:9">error</name> <operator pos:start="107:11" pos:end="107:11">=</operator> <call pos:start="107:13" pos:end="107:53"><name pos:start="107:13" pos:end="107:42"><name pos:start="107:13" pos:end="107:23">avs_library</name><operator pos:start="107:24" pos:end="107:24">.</operator><name pos:start="107:25" pos:end="107:42">avs_clip_get_error</name></name><argument_list pos:start="107:43" pos:end="107:53">(<argument pos:start="107:44" pos:end="107:52"><expr pos:start="107:44" pos:end="107:52"><name pos:start="107:44" pos:end="107:52"><name pos:start="107:44" pos:end="107:46">avs</name><operator pos:start="107:47" pos:end="107:48">-&gt;</operator><name pos:start="107:49" pos:end="107:52">clip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="119:5"><if pos:start="109:5" pos:end="119:5">if <condition pos:start="109:8" pos:end="109:14">(<expr pos:start="109:9" pos:end="109:13"><name pos:start="109:9" pos:end="109:13">error</name></expr>)</condition> <block pos:start="109:16" pos:end="119:5">{<block_content pos:start="111:9" pos:end="117:31">

        <expr_stmt pos:start="111:9" pos:end="111:47"><expr pos:start="111:9" pos:end="111:46"><call pos:start="111:9" pos:end="111:46"><name pos:start="111:9" pos:end="111:14">av_log</name><argument_list pos:start="111:15" pos:end="111:46">(<argument pos:start="111:16" pos:end="111:16"><expr pos:start="111:16" pos:end="111:16"><name pos:start="111:16" pos:end="111:16">s</name></expr></argument>, <argument pos:start="111:19" pos:end="111:30"><expr pos:start="111:19" pos:end="111:30"><name pos:start="111:19" pos:end="111:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="111:33" pos:end="111:38"><expr pos:start="111:33" pos:end="111:38"><literal type="string" pos:start="111:33" pos:end="111:38">"%s\n"</literal></expr></argument>, <argument pos:start="111:41" pos:end="111:45"><expr pos:start="111:41" pos:end="111:45"><name pos:start="111:41" pos:end="111:45">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:23"><expr pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:18"><name pos:start="113:9" pos:end="113:11">avs</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:18">error</name></name> <operator pos:start="113:20" pos:end="113:20">=</operator> <literal type="number" pos:start="113:22" pos:end="113:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:29"><expr pos:start="115:9" pos:end="115:28"><call pos:start="115:9" pos:end="115:28"><name pos:start="115:9" pos:end="115:23">av_packet_unref</name><argument_list pos:start="115:24" pos:end="115:28">(<argument pos:start="115:25" pos:end="115:27"><expr pos:start="115:25" pos:end="115:27"><name pos:start="115:25" pos:end="115:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="117:9" pos:end="117:31">return <expr pos:start="117:16" pos:end="117:30"><name pos:start="117:16" pos:end="117:30">AVERROR_UNKNOWN</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:22"><expr pos:start="123:5" pos:end="123:21"><name pos:start="123:5" pos:end="123:9">dst_p</name> <operator pos:start="123:11" pos:end="123:11">=</operator> <name pos:start="123:13" pos:end="123:21"><name pos:start="123:13" pos:end="123:15">pkt</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:21">data</name></name></expr>;</expr_stmt>

    <for pos:start="125:5" pos:end="175:5">for <control pos:start="125:9" pos:end="125:39">(<init pos:start="125:10" pos:end="125:15"><expr pos:start="125:10" pos:end="125:14"><name pos:start="125:10" pos:end="125:10">i</name> <operator pos:start="125:12" pos:end="125:12">=</operator> <literal type="number" pos:start="125:14" pos:end="125:14">0</literal></expr>;</init> <condition pos:start="125:17" pos:end="125:34"><expr pos:start="125:17" pos:end="125:33"><name pos:start="125:17" pos:end="125:17">i</name> <operator pos:start="125:19" pos:end="125:19">&lt;</operator> <name pos:start="125:21" pos:end="125:33"><name pos:start="125:21" pos:end="125:23">avs</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:33">n_planes</name></name></expr>;</condition> <incr pos:start="125:36" pos:end="125:38"><expr pos:start="125:36" pos:end="125:38"><name pos:start="125:36" pos:end="125:36">i</name><operator pos:start="125:37" pos:end="125:38">++</operator></expr></incr>)</control> <block pos:start="125:41" pos:end="175:5">{<block_content pos:start="127:9" pos:end="173:39">

        <expr_stmt pos:start="127:9" pos:end="130:0"><expr pos:start="127:9" pos:end="127:30"><name pos:start="127:9" pos:end="127:13">plane</name> <operator pos:start="127:15" pos:end="127:15">=</operator> <name pos:start="127:17" pos:end="127:30"><name pos:start="127:17" pos:end="127:19">avs</name><operator pos:start="127:20" pos:end="127:21">-&gt;</operator><name pos:start="127:22" pos:end="127:27">planes</name><index pos:start="127:28" pos:end="127:30">[<expr pos:start="127:29" pos:end="127:29"><name pos:start="127:29" pos:end="127:29">i</name></expr>]</index></name></expr>;</expr_stmt>

<cpp:ifdef pos:start="129:1" pos:end="129:21">#<cpp:directive pos:start="129:2" pos:end="129:6">ifdef</cpp:directive> <name pos:start="129:8" pos:end="129:21">USING_AVISYNTH</name></cpp:ifdef>

        <expr_stmt pos:start="131:9" pos:end="131:61"><expr pos:start="131:9" pos:end="131:60"><name pos:start="131:9" pos:end="131:13">src_p</name> <operator pos:start="131:15" pos:end="131:15">=</operator> <call pos:start="131:17" pos:end="131:60"><name pos:start="131:17" pos:end="131:46"><name pos:start="131:17" pos:end="131:27">avs_library</name><operator pos:start="131:28" pos:end="131:28">.</operator><name pos:start="131:29" pos:end="131:46">avs_get_read_ptr_p</name></name><argument_list pos:start="131:47" pos:end="131:60">(<argument pos:start="131:48" pos:end="131:52"><expr pos:start="131:48" pos:end="131:52"><name pos:start="131:48" pos:end="131:52">frame</name></expr></argument>, <argument pos:start="131:55" pos:end="131:59"><expr pos:start="131:55" pos:end="131:59"><name pos:start="131:55" pos:end="131:59">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:58"><expr pos:start="133:9" pos:end="133:57"><name pos:start="133:9" pos:end="133:13">pitch</name> <operator pos:start="133:15" pos:end="133:15">=</operator> <call pos:start="133:17" pos:end="133:57"><name pos:start="133:17" pos:end="133:43"><name pos:start="133:17" pos:end="133:27">avs_library</name><operator pos:start="133:28" pos:end="133:28">.</operator><name pos:start="133:29" pos:end="133:43">avs_get_pitch_p</name></name><argument_list pos:start="133:44" pos:end="133:57">(<argument pos:start="133:45" pos:end="133:49"><expr pos:start="133:45" pos:end="133:49"><name pos:start="133:45" pos:end="133:49">frame</name></expr></argument>, <argument pos:start="133:52" pos:end="133:56"><expr pos:start="133:52" pos:end="133:56"><name pos:start="133:52" pos:end="133:56">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:67"><expr pos:start="137:9" pos:end="137:66"><name pos:start="137:9" pos:end="137:15">rowsize</name>     <operator pos:start="137:21" pos:end="137:21">=</operator> <call pos:start="137:23" pos:end="137:66"><name pos:start="137:23" pos:end="137:52"><name pos:start="137:23" pos:end="137:33">avs_library</name><operator pos:start="137:34" pos:end="137:34">.</operator><name pos:start="137:35" pos:end="137:52">avs_get_row_size_p</name></name><argument_list pos:start="137:53" pos:end="137:66">(<argument pos:start="137:54" pos:end="137:58"><expr pos:start="137:54" pos:end="137:58"><name pos:start="137:54" pos:end="137:58">frame</name></expr></argument>, <argument pos:start="137:61" pos:end="137:65"><expr pos:start="137:61" pos:end="137:65"><name pos:start="137:61" pos:end="137:65">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="142:0"><expr pos:start="139:9" pos:end="139:64"><name pos:start="139:9" pos:end="139:19">planeheight</name> <operator pos:start="139:21" pos:end="139:21">=</operator> <call pos:start="139:23" pos:end="139:64"><name pos:start="139:23" pos:end="139:50"><name pos:start="139:23" pos:end="139:33">avs_library</name><operator pos:start="139:34" pos:end="139:34">.</operator><name pos:start="139:35" pos:end="139:50">avs_get_height_p</name></name><argument_list pos:start="139:51" pos:end="139:64">(<argument pos:start="139:52" pos:end="139:56"><expr pos:start="139:52" pos:end="139:56"><name pos:start="139:52" pos:end="139:56">frame</name></expr></argument>, <argument pos:start="139:59" pos:end="139:63"><expr pos:start="139:59" pos:end="139:63"><name pos:start="139:59" pos:end="139:63">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="141:1" pos:end="141:5">#<cpp:directive pos:start="141:2" pos:end="141:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="143:9" pos:end="143:49"><expr pos:start="143:9" pos:end="143:48"><name pos:start="143:9" pos:end="143:13">src_p</name> <operator pos:start="143:15" pos:end="143:15">=</operator> <call pos:start="143:17" pos:end="143:48"><name pos:start="143:17" pos:end="143:34">avs_get_read_ptr_p</name><argument_list pos:start="143:35" pos:end="143:48">(<argument pos:start="143:36" pos:end="143:40"><expr pos:start="143:36" pos:end="143:40"><name pos:start="143:36" pos:end="143:40">frame</name></expr></argument>, <argument pos:start="143:43" pos:end="143:47"><expr pos:start="143:43" pos:end="143:47"><name pos:start="143:43" pos:end="143:47">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:46"><expr pos:start="145:9" pos:end="145:45"><name pos:start="145:9" pos:end="145:13">pitch</name> <operator pos:start="145:15" pos:end="145:15">=</operator> <call pos:start="145:17" pos:end="145:45"><name pos:start="145:17" pos:end="145:31">avs_get_pitch_p</name><argument_list pos:start="145:32" pos:end="145:45">(<argument pos:start="145:33" pos:end="145:37"><expr pos:start="145:33" pos:end="145:37"><name pos:start="145:33" pos:end="145:37">frame</name></expr></argument>, <argument pos:start="145:40" pos:end="145:44"><expr pos:start="145:40" pos:end="145:44"><name pos:start="145:40" pos:end="145:44">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="149:9" pos:end="149:55"><expr pos:start="149:9" pos:end="149:54"><name pos:start="149:9" pos:end="149:15">rowsize</name>     <operator pos:start="149:21" pos:end="149:21">=</operator> <call pos:start="149:23" pos:end="149:54"><name pos:start="149:23" pos:end="149:40">avs_get_row_size_p</name><argument_list pos:start="149:41" pos:end="149:54">(<argument pos:start="149:42" pos:end="149:46"><expr pos:start="149:42" pos:end="149:46"><name pos:start="149:42" pos:end="149:46">frame</name></expr></argument>, <argument pos:start="149:49" pos:end="149:53"><expr pos:start="149:49" pos:end="149:53"><name pos:start="149:49" pos:end="149:53">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="154:0"><expr pos:start="151:9" pos:end="151:52"><name pos:start="151:9" pos:end="151:19">planeheight</name> <operator pos:start="151:21" pos:end="151:21">=</operator> <call pos:start="151:23" pos:end="151:52"><name pos:start="151:23" pos:end="151:38">avs_get_height_p</name><argument_list pos:start="151:39" pos:end="151:52">(<argument pos:start="151:40" pos:end="151:44"><expr pos:start="151:40" pos:end="151:44"><name pos:start="151:40" pos:end="151:44">frame</name></expr></argument>, <argument pos:start="151:47" pos:end="151:51"><expr pos:start="151:47" pos:end="151:51"><name pos:start="151:47" pos:end="151:51">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="153:1" pos:end="153:6">#<cpp:directive pos:start="153:2" pos:end="153:6">endif</cpp:directive></cpp:endif>



        <comment type="block" pos:start="157:9" pos:end="157:29">/* Flip RGB video. */</comment>

        <if_stmt pos:start="159:9" pos:end="165:9"><if pos:start="159:9" pos:end="165:9">if <condition pos:start="159:12" pos:end="159:57">(<expr pos:start="159:13" pos:end="159:56"><call pos:start="159:13" pos:end="159:33"><name pos:start="159:13" pos:end="159:24">avs_is_rgb24</name><argument_list pos:start="159:25" pos:end="159:33">(<argument pos:start="159:26" pos:end="159:32"><expr pos:start="159:26" pos:end="159:32"><name pos:start="159:26" pos:end="159:32"><name pos:start="159:26" pos:end="159:28">avs</name><operator pos:start="159:29" pos:end="159:30">-&gt;</operator><name pos:start="159:31" pos:end="159:32">vi</name></name></expr></argument>)</argument_list></call> <operator pos:start="159:35" pos:end="159:36">||</operator> <call pos:start="159:38" pos:end="159:56"><name pos:start="159:38" pos:end="159:47">avs_is_rgb</name><argument_list pos:start="159:48" pos:end="159:56">(<argument pos:start="159:49" pos:end="159:55"><expr pos:start="159:49" pos:end="159:55"><name pos:start="159:49" pos:end="159:55"><name pos:start="159:49" pos:end="159:51">avs</name><operator pos:start="159:52" pos:end="159:53">-&gt;</operator><name pos:start="159:54" pos:end="159:55">vi</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:59" pos:end="165:9">{<block_content pos:start="161:13" pos:end="163:27">

            <expr_stmt pos:start="161:13" pos:end="161:54"><expr pos:start="161:13" pos:end="161:53"><name pos:start="161:13" pos:end="161:17">src_p</name> <operator pos:start="161:19" pos:end="161:19">=</operator> <name pos:start="161:21" pos:end="161:25">src_p</name> <operator pos:start="161:27" pos:end="161:27">+</operator> <operator pos:start="161:29" pos:end="161:29">(</operator><name pos:start="161:30" pos:end="161:40">planeheight</name> <operator pos:start="161:42" pos:end="161:42">-</operator> <literal type="number" pos:start="161:44" pos:end="161:44">1</literal><operator pos:start="161:45" pos:end="161:45">)</operator> <operator pos:start="161:47" pos:end="161:47">*</operator> <name pos:start="161:49" pos:end="161:53">pitch</name></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:27"><expr pos:start="163:13" pos:end="163:26"><name pos:start="163:13" pos:end="163:17">pitch</name> <operator pos:start="163:19" pos:end="163:19">=</operator> <operator pos:start="163:21" pos:end="163:21">-</operator><name pos:start="163:22" pos:end="163:26">pitch</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="169:9" pos:end="171:55"><expr pos:start="169:9" pos:end="171:54"><call pos:start="169:9" pos:end="171:54"><name pos:start="169:9" pos:end="169:31"><name pos:start="169:9" pos:end="169:19">avs_library</name><operator pos:start="169:20" pos:end="169:20">.</operator><name pos:start="169:21" pos:end="169:31">avs_bit_blt</name></name><argument_list pos:start="169:32" pos:end="171:54">(<argument pos:start="169:33" pos:end="169:40"><expr pos:start="169:33" pos:end="169:40"><name pos:start="169:33" pos:end="169:40"><name pos:start="169:33" pos:end="169:35">avs</name><operator pos:start="169:36" pos:end="169:37">-&gt;</operator><name pos:start="169:38" pos:end="169:40">env</name></name></expr></argument>, <argument pos:start="169:43" pos:end="169:47"><expr pos:start="169:43" pos:end="169:47"><name pos:start="169:43" pos:end="169:47">dst_p</name></expr></argument>, <argument pos:start="169:50" pos:end="169:56"><expr pos:start="169:50" pos:end="169:56"><name pos:start="169:50" pos:end="169:56">rowsize</name></expr></argument>, <argument pos:start="169:59" pos:end="169:63"><expr pos:start="169:59" pos:end="169:63"><name pos:start="169:59" pos:end="169:63">src_p</name></expr></argument>, <argument pos:start="169:66" pos:end="169:70"><expr pos:start="169:66" pos:end="169:70"><name pos:start="169:66" pos:end="169:70">pitch</name></expr></argument>,

                                 <argument pos:start="171:34" pos:end="171:40"><expr pos:start="171:34" pos:end="171:40"><name pos:start="171:34" pos:end="171:40">rowsize</name></expr></argument>, <argument pos:start="171:43" pos:end="171:53"><expr pos:start="171:43" pos:end="171:53"><name pos:start="171:43" pos:end="171:53">planeheight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:39"><expr pos:start="173:9" pos:end="173:38"><name pos:start="173:9" pos:end="173:13">dst_p</name> <operator pos:start="173:15" pos:end="173:16">+=</operator> <name pos:start="173:18" pos:end="173:24">rowsize</name> <operator pos:start="173:26" pos:end="173:26">*</operator> <name pos:start="173:28" pos:end="173:38">planeheight</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="179:5" pos:end="179:47"><expr pos:start="179:5" pos:end="179:46"><call pos:start="179:5" pos:end="179:46"><name pos:start="179:5" pos:end="179:39"><name pos:start="179:5" pos:end="179:15">avs_library</name><operator pos:start="179:16" pos:end="179:16">.</operator><name pos:start="179:17" pos:end="179:39">avs_release_video_frame</name></name><argument_list pos:start="179:40" pos:end="179:46">(<argument pos:start="179:41" pos:end="179:45"><expr pos:start="179:41" pos:end="179:45"><name pos:start="179:41" pos:end="179:45">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="181:5" pos:end="181:13">return <expr pos:start="181:12" pos:end="181:12"><literal type="number" pos:start="181:12" pos:end="181:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
