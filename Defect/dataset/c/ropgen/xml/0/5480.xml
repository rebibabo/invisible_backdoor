<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5480.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">ehci_state_fetchitd</name><parameter_list pos:start="1:31" pos:end="1:58">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:40">EHCIState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">ehci</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:57"><decl pos:start="1:49" pos:end="1:57"><type pos:start="1:49" pos:end="1:57"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:57">async</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:18">entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">EHCIitd</name></type> <name pos:start="7:13" pos:end="7:15">itd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:19"><expr pos:start="11:5" pos:end="11:18"><call pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:18">(<argument pos:start="11:12" pos:end="11:17"><expr pos:start="11:12" pos:end="11:17"><operator pos:start="11:12" pos:end="11:12">!</operator><name pos:start="11:13" pos:end="11:17">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:45"><expr pos:start="13:5" pos:end="13:44"><name pos:start="13:5" pos:end="13:9">entry</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:44"><name pos:start="13:13" pos:end="13:31">ehci_get_fetch_addr</name><argument_list pos:start="13:32" pos:end="13:44">(<argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">ehci</name></expr></argument>, <argument pos:start="13:39" pos:end="13:43"><expr pos:start="13:39" pos:end="13:43"><name pos:start="13:39" pos:end="13:43">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:37"><expr pos:start="17:5" pos:end="19:36"><call pos:start="17:5" pos:end="19:36"><name pos:start="17:5" pos:end="17:14">get_dwords</name><argument_list pos:start="17:15" pos:end="19:36">(<argument pos:start="17:16" pos:end="17:31"><expr pos:start="17:16" pos:end="17:31"><call pos:start="17:16" pos:end="17:31"><name pos:start="17:16" pos:end="17:24">NLPTR_GET</name><argument_list pos:start="17:25" pos:end="17:31">(<argument pos:start="17:26" pos:end="17:30"><expr pos:start="17:26" pos:end="17:30"><name pos:start="17:26" pos:end="17:30">entry</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="17:33" pos:end="17:49"><expr pos:start="17:33" pos:end="17:49"><operator pos:start="17:33" pos:end="17:33">(</operator><name pos:start="17:34" pos:end="17:41">uint32_t</name> <operator pos:start="17:43" pos:end="17:43">*</operator><operator pos:start="17:44" pos:end="17:44">)</operator> <operator pos:start="17:46" pos:end="17:46">&amp;</operator><name pos:start="17:47" pos:end="17:49">itd</name></expr></argument>,

               <argument pos:start="19:16" pos:end="19:35"><expr pos:start="19:16" pos:end="19:35"><sizeof pos:start="19:16" pos:end="19:30">sizeof<argument_list pos:start="19:22" pos:end="19:30">(<argument pos:start="19:23" pos:end="19:29"><expr pos:start="19:23" pos:end="19:29"><name pos:start="19:23" pos:end="19:29">EHCIitd</name></expr></argument>)</argument_list></sizeof> <operator pos:start="19:32" pos:end="19:33">&gt;&gt;</operator> <literal type="number" pos:start="19:35" pos:end="19:35">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><call pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:18">ehci_trace_itd</name><argument_list pos:start="21:19" pos:end="21:37">(<argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">ehci</name></expr></argument>, <argument pos:start="21:26" pos:end="21:30"><expr pos:start="21:26" pos:end="21:30"><name pos:start="21:26" pos:end="21:30">entry</name></expr></argument>, <argument pos:start="21:33" pos:end="21:36"><expr pos:start="21:33" pos:end="21:36"><operator pos:start="21:33" pos:end="21:33">&amp;</operator><name pos:start="21:34" pos:end="21:36">itd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:42">(<expr pos:start="25:9" pos:end="25:41"><call pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:24">ehci_process_itd</name><argument_list pos:start="25:25" pos:end="25:36">(<argument pos:start="25:26" pos:end="25:29"><expr pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:29">ehci</name></expr></argument>, <argument pos:start="25:32" pos:end="25:35"><expr pos:start="25:32" pos:end="25:35"><operator pos:start="25:32" pos:end="25:32">&amp;</operator><name pos:start="25:33" pos:end="25:35">itd</name></expr></argument>)</argument_list></call> <operator pos:start="25:38" pos:end="25:39">!=</operator> <literal type="number" pos:start="25:41" pos:end="25:41">0</literal></expr>)</condition> <block pos:start="25:44" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:38"><expr pos:start="33:5" pos:end="35:37"><call pos:start="33:5" pos:end="35:37"><name pos:start="33:5" pos:end="33:14">put_dwords</name><argument_list pos:start="33:15" pos:end="35:37">(<argument pos:start="33:16" pos:end="33:31"><expr pos:start="33:16" pos:end="33:31"><call pos:start="33:16" pos:end="33:31"><name pos:start="33:16" pos:end="33:24">NLPTR_GET</name><argument_list pos:start="33:25" pos:end="33:31">(<argument pos:start="33:26" pos:end="33:30"><expr pos:start="33:26" pos:end="33:30"><name pos:start="33:26" pos:end="33:30">entry</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:34" pos:end="33:50"><expr pos:start="33:34" pos:end="33:50"><operator pos:start="33:34" pos:end="33:34">(</operator><name pos:start="33:35" pos:end="33:42">uint32_t</name> <operator pos:start="33:44" pos:end="33:44">*</operator><operator pos:start="33:45" pos:end="33:45">)</operator> <operator pos:start="33:47" pos:end="33:47">&amp;</operator><name pos:start="33:48" pos:end="33:50">itd</name></expr></argument>,

                <argument pos:start="35:17" pos:end="35:36"><expr pos:start="35:17" pos:end="35:36"><sizeof pos:start="35:17" pos:end="35:31">sizeof<argument_list pos:start="35:23" pos:end="35:31">(<argument pos:start="35:24" pos:end="35:30"><expr pos:start="35:24" pos:end="35:30"><name pos:start="35:24" pos:end="35:30">EHCIitd</name></expr></argument>)</argument_list></sizeof> <operator pos:start="35:33" pos:end="35:34">&gt;&gt;</operator> <literal type="number" pos:start="35:36" pos:end="35:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:47"><expr pos:start="37:5" pos:end="37:46"><call pos:start="37:5" pos:end="37:46"><name pos:start="37:5" pos:end="37:23">ehci_set_fetch_addr</name><argument_list pos:start="37:24" pos:end="37:46">(<argument pos:start="37:25" pos:end="37:28"><expr pos:start="37:25" pos:end="37:28"><name pos:start="37:25" pos:end="37:28">ehci</name></expr></argument>, <argument pos:start="37:31" pos:end="37:35"><expr pos:start="37:31" pos:end="37:35"><name pos:start="37:31" pos:end="37:35">async</name></expr></argument>, <argument pos:start="37:38" pos:end="37:45"><expr pos:start="37:38" pos:end="37:45"><name pos:start="37:38" pos:end="37:45"><name pos:start="37:38" pos:end="37:40">itd</name><operator pos:start="37:41" pos:end="37:41">.</operator><name pos:start="37:42" pos:end="37:45">next</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:48"><expr pos:start="39:5" pos:end="39:47"><call pos:start="39:5" pos:end="39:47"><name pos:start="39:5" pos:end="39:18">ehci_set_state</name><argument_list pos:start="39:19" pos:end="39:47">(<argument pos:start="39:20" pos:end="39:23"><expr pos:start="39:20" pos:end="39:23"><name pos:start="39:20" pos:end="39:23">ehci</name></expr></argument>, <argument pos:start="39:26" pos:end="39:30"><expr pos:start="39:26" pos:end="39:30"><name pos:start="39:26" pos:end="39:30">async</name></expr></argument>, <argument pos:start="39:33" pos:end="39:46"><expr pos:start="39:33" pos:end="39:46"><name pos:start="39:33" pos:end="39:46">EST_FETCHENTRY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
