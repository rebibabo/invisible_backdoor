<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8703.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">ivi_process_empty_tile</name><parameter_list pos:start="1:34" pos:end="3:66">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:55"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">avctx</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:74"><decl pos:start="1:58" pos:end="1:74"><type pos:start="1:58" pos:end="1:74"><name pos:start="1:58" pos:end="1:68">IVIBandDesc</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:74">band</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:47"><decl pos:start="3:35" pos:end="3:47"><type pos:start="3:35" pos:end="3:47"><name pos:start="3:35" pos:end="3:41">IVITile</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:47">tile</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:65"><decl pos:start="3:50" pos:end="3:65"><type pos:start="3:50" pos:end="3:65"><name pos:start="3:50" pos:end="3:56">int32_t</name></type> <name pos:start="3:58" pos:end="3:65">mv_scale</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="201:1">{<block_content pos:start="7:5" pos:end="199:13">

    <decl_stmt pos:start="7:5" pos:end="7:77"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type>             <name pos:start="7:21" pos:end="7:21">x</name></decl>, <decl pos:start="7:24" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:24">y</name></decl>, <decl pos:start="7:27" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:27" pos:end="7:33">need_mc</name></decl>, <decl pos:start="7:36" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:36" pos:end="7:38">mbn</name></decl>, <decl pos:start="7:41" pos:end="7:43"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:41" pos:end="7:43">blk</name></decl>, <decl pos:start="7:46" pos:end="7:55"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:46" pos:end="7:55">num_blocks</name></decl>, <decl pos:start="7:58" pos:end="7:61"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:58" pos:end="7:61">mv_x</name></decl>, <decl pos:start="7:64" pos:end="7:67"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:64" pos:end="7:67">mv_y</name></decl>, <decl pos:start="7:70" pos:end="7:76"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:70" pos:end="7:76">mc_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type>             <name pos:start="9:21" pos:end="9:24">offs</name></decl>, <decl pos:start="9:27" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:35">mb_offset</name></decl>, <decl pos:start="9:38" pos:end="9:47"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:38" pos:end="9:47">row_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:13">IVIMbInfo</name>       <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:23">mb</name></decl>, <decl pos:start="11:26" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:21"><modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:32">ref_mb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:21"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">int16_t</name>   <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:24">src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:11">int16_t</name>         <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:24">dst</name></decl>;</decl_stmt>

    <function_decl pos:start="17:5" pos:end="19:42"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">void</name></type> (<modifier pos:start="17:11" pos:end="17:11">*</modifier><name pos:start="17:12" pos:end="17:27">mc_no_delta_func</name>)<parameter_list pos:start="17:29" pos:end="19:41">(<parameter pos:start="17:30" pos:end="17:41"><decl pos:start="17:30" pos:end="17:41"><type pos:start="17:30" pos:end="17:41"><name pos:start="17:30" pos:end="17:36">int16_t</name> <modifier pos:start="17:38" pos:end="17:38">*</modifier></type><name pos:start="17:39" pos:end="17:41">buf</name></decl></parameter>, <parameter pos:start="17:44" pos:end="17:65"><decl pos:start="17:44" pos:end="17:65"><type pos:start="17:44" pos:end="17:65"><specifier pos:start="17:44" pos:end="17:48">const</specifier> <name pos:start="17:50" pos:end="17:56">int16_t</name> <modifier pos:start="17:58" pos:end="17:58">*</modifier></type><name pos:start="17:59" pos:end="17:65">ref_buf</name></decl></parameter>, <parameter pos:start="17:68" pos:end="17:81"><decl pos:start="17:68" pos:end="17:81"><type pos:start="17:68" pos:end="17:81"><name pos:start="17:68" pos:end="17:75">uint32_t</name></type> <name pos:start="17:77" pos:end="17:81">pitch</name></decl></parameter>,

                             <parameter pos:start="19:30" pos:end="19:40"><decl pos:start="19:30" pos:end="19:40"><type pos:start="19:30" pos:end="19:40"><name pos:start="19:30" pos:end="19:32">int</name></type> <name pos:start="19:34" pos:end="19:40">mc_type</name></decl></parameter>)</parameter_list>;</function_decl>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="23:84">(<expr pos:start="23:9" pos:end="23:83"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:12">tile</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:21">num_MBs</name></name> <operator pos:start="23:23" pos:end="23:24">!=</operator> <call pos:start="23:26" pos:end="23:83"><name pos:start="23:26" pos:end="23:41">IVI_MBs_PER_TILE</name><argument_list pos:start="23:42" pos:end="23:83">(<argument pos:start="23:43" pos:end="23:53"><expr pos:start="23:43" pos:end="23:53"><name pos:start="23:43" pos:end="23:53"><name pos:start="23:43" pos:end="23:46">tile</name><operator pos:start="23:47" pos:end="23:48">-&gt;</operator><name pos:start="23:49" pos:end="23:53">width</name></name></expr></argument>, <argument pos:start="23:56" pos:end="23:67"><expr pos:start="23:56" pos:end="23:67"><name pos:start="23:56" pos:end="23:67"><name pos:start="23:56" pos:end="23:59">tile</name><operator pos:start="23:60" pos:end="23:61">-&gt;</operator><name pos:start="23:62" pos:end="23:67">height</name></name></expr></argument>, <argument pos:start="23:70" pos:end="23:82"><expr pos:start="23:70" pos:end="23:82"><name pos:start="23:70" pos:end="23:82"><name pos:start="23:70" pos:end="23:73">band</name><operator pos:start="23:74" pos:end="23:75">-&gt;</operator><name pos:start="23:76" pos:end="23:82">mb_size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:86" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:35">

        <expr_stmt pos:start="25:9" pos:end="29:90"><expr pos:start="25:9" pos:end="29:89"><call pos:start="25:9" pos:end="29:89"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="29:89">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:37" pos:end="27:60"><expr pos:start="25:37" pos:end="27:60"><literal type="string" pos:start="25:37" pos:end="25:72">"Allocated tile size %d mismatches "</literal>

               <literal type="string" pos:start="27:16" pos:end="27:60">"parameters %d in ivi_process_empty_tile()\n"</literal></expr></argument>,

               <argument pos:start="29:16" pos:end="29:28"><expr pos:start="29:16" pos:end="29:28"><name pos:start="29:16" pos:end="29:28"><name pos:start="29:16" pos:end="29:19">tile</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:28">num_MBs</name></name></expr></argument>, <argument pos:start="29:31" pos:end="29:88"><expr pos:start="29:31" pos:end="29:88"><call pos:start="29:31" pos:end="29:88"><name pos:start="29:31" pos:end="29:46">IVI_MBs_PER_TILE</name><argument_list pos:start="29:47" pos:end="29:88">(<argument pos:start="29:48" pos:end="29:58"><expr pos:start="29:48" pos:end="29:58"><name pos:start="29:48" pos:end="29:58"><name pos:start="29:48" pos:end="29:51">tile</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:58">width</name></name></expr></argument>, <argument pos:start="29:61" pos:end="29:72"><expr pos:start="29:61" pos:end="29:72"><name pos:start="29:61" pos:end="29:72"><name pos:start="29:61" pos:end="29:64">tile</name><operator pos:start="29:65" pos:end="29:66">-&gt;</operator><name pos:start="29:67" pos:end="29:72">height</name></name></expr></argument>, <argument pos:start="29:75" pos:end="29:87"><expr pos:start="29:75" pos:end="29:87"><name pos:start="29:75" pos:end="29:87"><name pos:start="29:75" pos:end="29:78">band</name><operator pos:start="29:79" pos:end="29:80">-&gt;</operator><name pos:start="29:81" pos:end="29:87">mb_size</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:35">return <expr pos:start="31:16" pos:end="31:34"><name pos:start="31:16" pos:end="31:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:55"><expr pos:start="37:5" pos:end="37:54"><name pos:start="37:5" pos:end="37:8">offs</name>       <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:27"><name pos:start="37:18" pos:end="37:21">tile</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:27">ypos</name></name> <operator pos:start="37:29" pos:end="37:29">*</operator> <name pos:start="37:31" pos:end="37:41"><name pos:start="37:31" pos:end="37:34">band</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:41">pitch</name></name> <operator pos:start="37:43" pos:end="37:43">+</operator> <name pos:start="37:45" pos:end="37:54"><name pos:start="37:45" pos:end="37:48">tile</name><operator pos:start="37:49" pos:end="37:50">-&gt;</operator><name pos:start="37:51" pos:end="37:54">xpos</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:27"><expr pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:6">mb</name>         <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:26"><name pos:start="39:18" pos:end="39:21">tile</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:26">mbs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:10">ref_mb</name>     <operator pos:start="41:16" pos:end="41:16">=</operator> <name pos:start="41:18" pos:end="41:30"><name pos:start="41:18" pos:end="41:21">tile</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:30">ref_mbs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:45"><expr pos:start="43:5" pos:end="43:44"><name pos:start="43:5" pos:end="43:14">row_offset</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:30"><name pos:start="43:18" pos:end="43:21">band</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:30">mb_size</name></name> <operator pos:start="43:32" pos:end="43:32">*</operator> <name pos:start="43:34" pos:end="43:44"><name pos:start="43:34" pos:end="43:37">band</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:44">pitch</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:19"><expr pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:11">need_mc</name>    <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="45:21" pos:end="45:52">/* reset the mc tracking flag */</comment>



    <for pos:start="49:5" pos:end="125:5">for <control pos:start="49:9" pos:end="49:77">(<init pos:start="49:10" pos:end="49:24"><expr pos:start="49:10" pos:end="49:23"><name pos:start="49:10" pos:end="49:10">y</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <name pos:start="49:14" pos:end="49:23"><name pos:start="49:14" pos:end="49:17">tile</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:23">ypos</name></name></expr>;</init> <condition pos:start="49:26" pos:end="49:57"><expr pos:start="49:26" pos:end="49:56"><name pos:start="49:26" pos:end="49:26">y</name> <operator pos:start="49:28" pos:end="49:28">&lt;</operator> <operator pos:start="49:30" pos:end="49:30">(</operator><name pos:start="49:31" pos:end="49:40"><name pos:start="49:31" pos:end="49:34">tile</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:40">ypos</name></name> <operator pos:start="49:42" pos:end="49:42">+</operator> <name pos:start="49:44" pos:end="49:55"><name pos:start="49:44" pos:end="49:47">tile</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:55">height</name></name><operator pos:start="49:56" pos:end="49:56">)</operator></expr>;</condition> <incr pos:start="49:59" pos:end="49:76"><expr pos:start="49:59" pos:end="49:76"><name pos:start="49:59" pos:end="49:59">y</name> <operator pos:start="49:61" pos:end="49:62">+=</operator> <name pos:start="49:64" pos:end="49:76"><name pos:start="49:64" pos:end="49:67">band</name><operator pos:start="49:68" pos:end="49:69">-&gt;</operator><name pos:start="49:70" pos:end="49:76">mb_size</name></name></expr></incr>)</control> <block pos:start="49:79" pos:end="125:5">{<block_content pos:start="51:9" pos:end="123:27">

        <expr_stmt pos:start="51:9" pos:end="51:25"><expr pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:17">mb_offset</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:24">offs</name></expr>;</expr_stmt>



        <for pos:start="55:9" pos:end="121:9">for <control pos:start="55:13" pos:end="55:80">(<init pos:start="55:14" pos:end="55:28"><expr pos:start="55:14" pos:end="55:27"><name pos:start="55:14" pos:end="55:14">x</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <name pos:start="55:18" pos:end="55:27"><name pos:start="55:18" pos:end="55:21">tile</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:27">xpos</name></name></expr>;</init> <condition pos:start="55:30" pos:end="55:60"><expr pos:start="55:30" pos:end="55:59"><name pos:start="55:30" pos:end="55:30">x</name> <operator pos:start="55:32" pos:end="55:32">&lt;</operator> <operator pos:start="55:34" pos:end="55:34">(</operator><name pos:start="55:35" pos:end="55:44"><name pos:start="55:35" pos:end="55:38">tile</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:44">xpos</name></name> <operator pos:start="55:46" pos:end="55:46">+</operator> <name pos:start="55:48" pos:end="55:58"><name pos:start="55:48" pos:end="55:51">tile</name><operator pos:start="55:52" pos:end="55:53">-&gt;</operator><name pos:start="55:54" pos:end="55:58">width</name></name><operator pos:start="55:59" pos:end="55:59">)</operator></expr>;</condition> <incr pos:start="55:62" pos:end="55:79"><expr pos:start="55:62" pos:end="55:79"><name pos:start="55:62" pos:end="55:62">x</name> <operator pos:start="55:64" pos:end="55:65">+=</operator> <name pos:start="55:67" pos:end="55:79"><name pos:start="55:67" pos:end="55:70">band</name><operator pos:start="55:71" pos:end="55:72">-&gt;</operator><name pos:start="55:73" pos:end="55:79">mb_size</name></name></expr></incr>)</control> <block pos:start="55:82" pos:end="121:9">{<block_content pos:start="57:13" pos:end="119:39">

            <expr_stmt pos:start="57:13" pos:end="57:29"><expr pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:14">mb</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:20">xpos</name></name>     <operator pos:start="57:26" pos:end="57:26">=</operator> <name pos:start="57:28" pos:end="57:28">x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:29"><expr pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:14">mb</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:20">ypos</name></name>     <operator pos:start="59:26" pos:end="59:26">=</operator> <name pos:start="59:28" pos:end="59:28">y</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:37"><expr pos:start="61:13" pos:end="61:36"><name pos:start="61:13" pos:end="61:24"><name pos:start="61:13" pos:end="61:14">mb</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:24">buf_offs</name></name> <operator pos:start="61:26" pos:end="61:26">=</operator> <name pos:start="61:28" pos:end="61:36">mb_offset</name></expr>;</expr_stmt>



            <expr_stmt pos:start="65:13" pos:end="65:25"><expr pos:start="65:13" pos:end="65:24"><name pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:14">mb</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:20">type</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <literal type="number" pos:start="65:24" pos:end="65:24">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="65:27" pos:end="65:64">/* set the macroblocks type = INTER */</comment>

            <expr_stmt pos:start="67:13" pos:end="67:25"><expr pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:19"><name pos:start="67:13" pos:end="67:14">mb</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:19">cbp</name></name>  <operator pos:start="67:22" pos:end="67:22">=</operator> <literal type="number" pos:start="67:24" pos:end="67:24">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="67:27" pos:end="67:52">/* all blocks are empty */</comment>



            <if_stmt pos:start="71:13" pos:end="79:13"><if pos:start="71:13" pos:end="79:13">if <condition pos:start="71:16" pos:end="71:73">(<expr pos:start="71:17" pos:end="71:72"><operator pos:start="71:17" pos:end="71:17">!</operator><name pos:start="71:18" pos:end="71:37"><name pos:start="71:18" pos:end="71:21">band</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:37">qdelta_present</name></name> <operator pos:start="71:39" pos:end="71:40">&amp;&amp;</operator> <operator pos:start="71:42" pos:end="71:42">!</operator><name pos:start="71:43" pos:end="71:53"><name pos:start="71:43" pos:end="71:46">band</name><operator pos:start="71:47" pos:end="71:48">-&gt;</operator><name pos:start="71:49" pos:end="71:53">plane</name></name> <operator pos:start="71:55" pos:end="71:56">&amp;&amp;</operator> <operator pos:start="71:58" pos:end="71:58">!</operator><name pos:start="71:59" pos:end="71:72"><name pos:start="71:59" pos:end="71:62">band</name><operator pos:start="71:63" pos:end="71:64">-&gt;</operator><name pos:start="71:65" pos:end="71:72">band_num</name></name></expr>)</condition> <block pos:start="71:75" pos:end="79:13">{<block_content pos:start="73:17" pos:end="77:32">

                <expr_stmt pos:start="73:17" pos:end="73:47"><expr pos:start="73:17" pos:end="73:46"><name pos:start="73:17" pos:end="73:27"><name pos:start="73:17" pos:end="73:18">mb</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:27">q_delta</name></name> <operator pos:start="73:29" pos:end="73:29">=</operator> <name pos:start="73:31" pos:end="73:46"><name pos:start="73:31" pos:end="73:34">band</name><operator pos:start="73:35" pos:end="73:36">-&gt;</operator><name pos:start="73:37" pos:end="73:46">glob_quant</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:32"><expr pos:start="75:17" pos:end="75:31"><name pos:start="75:17" pos:end="75:24"><name pos:start="75:17" pos:end="75:18">mb</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:24">mv_x</name></name>    <operator pos:start="75:29" pos:end="75:29">=</operator> <literal type="number" pos:start="75:31" pos:end="75:31">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:32"><expr pos:start="77:17" pos:end="77:31"><name pos:start="77:17" pos:end="77:24"><name pos:start="77:17" pos:end="77:18">mb</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:24">mv_y</name></name>    <operator pos:start="77:29" pos:end="77:29">=</operator> <literal type="number" pos:start="77:31" pos:end="77:31">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="83:13" pos:end="85:46"><if pos:start="83:13" pos:end="85:46">if <condition pos:start="83:16" pos:end="83:47">(<expr pos:start="83:17" pos:end="83:46"><name pos:start="83:17" pos:end="83:36"><name pos:start="83:17" pos:end="83:20">band</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:36">inherit_qdelta</name></name> <operator pos:start="83:38" pos:end="83:39">&amp;&amp;</operator> <name pos:start="83:41" pos:end="83:46">ref_mb</name></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:46"><block_content pos:start="85:17" pos:end="85:46">

                <expr_stmt pos:start="85:17" pos:end="85:46"><expr pos:start="85:17" pos:end="85:45"><name pos:start="85:17" pos:end="85:27"><name pos:start="85:17" pos:end="85:18">mb</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:27">q_delta</name></name> <operator pos:start="85:29" pos:end="85:29">=</operator> <name pos:start="85:31" pos:end="85:45"><name pos:start="85:31" pos:end="85:36">ref_mb</name><operator pos:start="85:37" pos:end="85:38">-&gt;</operator><name pos:start="85:39" pos:end="85:45">q_delta</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="89:13" pos:end="109:13"><if pos:start="89:13" pos:end="109:13">if <condition pos:start="89:16" pos:end="89:33">(<expr pos:start="89:17" pos:end="89:32"><name pos:start="89:17" pos:end="89:32"><name pos:start="89:17" pos:end="89:20">band</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:32">inherit_mv</name></name></expr>)</condition> <block pos:start="89:35" pos:end="109:13">{<block_content pos:start="93:17" pos:end="107:48">

                <comment type="block" pos:start="91:17" pos:end="91:47">/* motion vector inheritance */</comment>

                <if_stmt pos:start="93:17" pos:end="105:17"><if pos:start="93:17" pos:end="99:17">if <condition pos:start="93:20" pos:end="93:29">(<expr pos:start="93:21" pos:end="93:28"><name pos:start="93:21" pos:end="93:28">mv_scale</name></expr>)</condition> <block pos:start="93:31" pos:end="99:17">{<block_content pos:start="95:21" pos:end="97:68">

                    <expr_stmt pos:start="95:21" pos:end="95:68"><expr pos:start="95:21" pos:end="95:67"><name pos:start="95:21" pos:end="95:28"><name pos:start="95:21" pos:end="95:22">mb</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:28">mv_x</name></name> <operator pos:start="95:30" pos:end="95:30">=</operator> <call pos:start="95:32" pos:end="95:67"><name pos:start="95:32" pos:end="95:43">ivi_scale_mv</name><argument_list pos:start="95:44" pos:end="95:67">(<argument pos:start="95:45" pos:end="95:56"><expr pos:start="95:45" pos:end="95:56"><name pos:start="95:45" pos:end="95:56"><name pos:start="95:45" pos:end="95:50">ref_mb</name><operator pos:start="95:51" pos:end="95:52">-&gt;</operator><name pos:start="95:53" pos:end="95:56">mv_x</name></name></expr></argument>, <argument pos:start="95:59" pos:end="95:66"><expr pos:start="95:59" pos:end="95:66"><name pos:start="95:59" pos:end="95:66">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="97:21" pos:end="97:68"><expr pos:start="97:21" pos:end="97:67"><name pos:start="97:21" pos:end="97:28"><name pos:start="97:21" pos:end="97:22">mb</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:28">mv_y</name></name> <operator pos:start="97:30" pos:end="97:30">=</operator> <call pos:start="97:32" pos:end="97:67"><name pos:start="97:32" pos:end="97:43">ivi_scale_mv</name><argument_list pos:start="97:44" pos:end="97:67">(<argument pos:start="97:45" pos:end="97:56"><expr pos:start="97:45" pos:end="97:56"><name pos:start="97:45" pos:end="97:56"><name pos:start="97:45" pos:end="97:50">ref_mb</name><operator pos:start="97:51" pos:end="97:52">-&gt;</operator><name pos:start="97:53" pos:end="97:56">mv_y</name></name></expr></argument>, <argument pos:start="97:59" pos:end="97:66"><expr pos:start="97:59" pos:end="97:66"><name pos:start="97:59" pos:end="97:66">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="99:19" pos:end="105:17">else <block pos:start="99:24" pos:end="105:17">{<block_content pos:start="101:21" pos:end="103:44">

                    <expr_stmt pos:start="101:21" pos:end="101:44"><expr pos:start="101:21" pos:end="101:43"><name pos:start="101:21" pos:end="101:28"><name pos:start="101:21" pos:end="101:22">mb</name><operator pos:start="101:23" pos:end="101:24">-&gt;</operator><name pos:start="101:25" pos:end="101:28">mv_x</name></name> <operator pos:start="101:30" pos:end="101:30">=</operator> <name pos:start="101:32" pos:end="101:43"><name pos:start="101:32" pos:end="101:37">ref_mb</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:43">mv_x</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="103:21" pos:end="103:44"><expr pos:start="103:21" pos:end="103:43"><name pos:start="103:21" pos:end="103:28"><name pos:start="103:21" pos:end="103:22">mb</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:28">mv_y</name></name> <operator pos:start="103:30" pos:end="103:30">=</operator> <name pos:start="103:32" pos:end="103:43"><name pos:start="103:32" pos:end="103:37">ref_mb</name><operator pos:start="103:38" pos:end="103:39">-&gt;</operator><name pos:start="103:40" pos:end="103:43">mv_y</name></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:48"><expr pos:start="107:17" pos:end="107:47"><name pos:start="107:17" pos:end="107:23">need_mc</name> <operator pos:start="107:25" pos:end="107:26">|=</operator> <name pos:start="107:28" pos:end="107:35"><name pos:start="107:28" pos:end="107:29">mb</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:35">mv_x</name></name> <operator pos:start="107:37" pos:end="107:38">||</operator> <name pos:start="107:40" pos:end="107:47"><name pos:start="107:40" pos:end="107:41">mb</name><operator pos:start="107:42" pos:end="107:43">-&gt;</operator><name pos:start="107:44" pos:end="107:47">mv_y</name></name></expr>;</expr_stmt> <comment type="block" pos:start="107:50" pos:end="107:87">/* tracking non-zero motion vectors */</comment>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="113:13" pos:end="113:17"><expr pos:start="113:13" pos:end="113:16"><name pos:start="113:13" pos:end="113:14">mb</name><operator pos:start="113:15" pos:end="113:16">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="117:25"><if pos:start="115:13" pos:end="117:25">if <condition pos:start="115:16" pos:end="115:23">(<expr pos:start="115:17" pos:end="115:22"><name pos:start="115:17" pos:end="115:22">ref_mb</name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:25"><block_content pos:start="117:17" pos:end="117:25">

                <expr_stmt pos:start="117:17" pos:end="117:25"><expr pos:start="117:17" pos:end="117:24"><name pos:start="117:17" pos:end="117:22">ref_mb</name><operator pos:start="117:23" pos:end="117:24">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:39"><expr pos:start="119:13" pos:end="119:38"><name pos:start="119:13" pos:end="119:21">mb_offset</name> <operator pos:start="119:23" pos:end="119:24">+=</operator> <name pos:start="119:26" pos:end="119:38"><name pos:start="119:26" pos:end="119:29">band</name><operator pos:start="119:30" pos:end="119:31">-&gt;</operator><name pos:start="119:32" pos:end="119:38">mb_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></for> <comment type="line" pos:start="121:11" pos:end="121:18">// for x</comment>

        <expr_stmt pos:start="123:9" pos:end="123:27"><expr pos:start="123:9" pos:end="123:26"><name pos:start="123:9" pos:end="123:12">offs</name> <operator pos:start="123:14" pos:end="123:15">+=</operator> <name pos:start="123:17" pos:end="123:26">row_offset</name></expr>;</expr_stmt>

    </block_content>}</block></for> <comment type="line" pos:start="125:7" pos:end="125:14">// for y</comment>



    <if_stmt pos:start="129:5" pos:end="195:5"><if pos:start="129:5" pos:end="177:5">if <condition pos:start="129:8" pos:end="129:36">(<expr pos:start="129:9" pos:end="129:35"><name pos:start="129:9" pos:end="129:24"><name pos:start="129:9" pos:end="129:12">band</name><operator pos:start="129:13" pos:end="129:14">-&gt;</operator><name pos:start="129:15" pos:end="129:24">inherit_mv</name></name> <operator pos:start="129:26" pos:end="129:27">&amp;&amp;</operator> <name pos:start="129:29" pos:end="129:35">need_mc</name></expr>)</condition> <block pos:start="129:38" pos:end="177:5">{<block_content pos:start="131:9" pos:end="175:9"> <comment type="block" pos:start="129:40" pos:end="129:118">/* apply motion compensation if there is at least one non-zero motion vector */</comment>

        <expr_stmt pos:start="131:9" pos:end="131:63"><expr pos:start="131:9" pos:end="131:62"><name pos:start="131:9" pos:end="131:18">num_blocks</name> <operator pos:start="131:20" pos:end="131:20">=</operator> <ternary pos:start="131:22" pos:end="131:62"><condition pos:start="131:22" pos:end="131:56"><expr pos:start="131:22" pos:end="131:54"><operator pos:start="131:22" pos:end="131:22">(</operator><name pos:start="131:23" pos:end="131:35"><name pos:start="131:23" pos:end="131:26">band</name><operator pos:start="131:27" pos:end="131:28">-&gt;</operator><name pos:start="131:29" pos:end="131:35">mb_size</name></name> <operator pos:start="131:37" pos:end="131:38">!=</operator> <name pos:start="131:40" pos:end="131:53"><name pos:start="131:40" pos:end="131:43">band</name><operator pos:start="131:44" pos:end="131:45">-&gt;</operator><name pos:start="131:46" pos:end="131:53">blk_size</name></name><operator pos:start="131:54" pos:end="131:54">)</operator></expr> ?</condition><then pos:start="131:58" pos:end="131:58"> <expr pos:start="131:58" pos:end="131:58"><literal type="number" pos:start="131:58" pos:end="131:58">4</literal></expr> </then><else pos:start="131:60" pos:end="131:62">: <expr pos:start="131:62" pos:end="131:62"><literal type="number" pos:start="131:62" pos:end="131:62">1</literal></expr></else></ternary></expr>;</expr_stmt> <comment type="block" pos:start="131:65" pos:end="131:93">/* number of blocks per mb */</comment>

        <expr_stmt pos:start="133:9" pos:end="135:74"><expr pos:start="133:9" pos:end="135:73"><name pos:start="133:9" pos:end="133:24">mc_no_delta_func</name> <operator pos:start="133:26" pos:end="133:26">=</operator> <ternary pos:start="133:28" pos:end="135:73"><condition pos:start="133:28" pos:end="133:50"><expr pos:start="133:28" pos:end="133:48"><operator pos:start="133:28" pos:end="133:28">(</operator><name pos:start="133:29" pos:end="133:42"><name pos:start="133:29" pos:end="133:32">band</name><operator pos:start="133:33" pos:end="133:34">-&gt;</operator><name pos:start="133:35" pos:end="133:42">blk_size</name></name> <operator pos:start="133:44" pos:end="133:45">==</operator> <literal type="number" pos:start="133:47" pos:end="133:47">8</literal><operator pos:start="133:48" pos:end="133:48">)</operator></expr> ?</condition><then pos:start="133:52" pos:end="133:73"> <expr pos:start="133:52" pos:end="133:73"><name pos:start="133:52" pos:end="133:73">ff_ivi_mc_8x8_no_delta</name></expr>

                                                 </then><else pos:start="135:50" pos:end="135:73">: <expr pos:start="135:52" pos:end="135:73"><name pos:start="135:52" pos:end="135:73">ff_ivi_mc_4x4_no_delta</name></expr></else></ternary></expr>;</expr_stmt>



        <for pos:start="139:9" pos:end="175:9">for <control pos:start="139:13" pos:end="139:71">(<init pos:start="139:14" pos:end="139:37"><expr pos:start="139:14" pos:end="139:20"><name pos:start="139:14" pos:end="139:16">mbn</name> <operator pos:start="139:18" pos:end="139:18">=</operator> <literal type="number" pos:start="139:20" pos:end="139:20">0</literal></expr><operator pos:start="139:21" pos:end="139:21">,</operator> <expr pos:start="139:23" pos:end="139:36"><name pos:start="139:23" pos:end="139:24">mb</name> <operator pos:start="139:26" pos:end="139:26">=</operator> <name pos:start="139:28" pos:end="139:36"><name pos:start="139:28" pos:end="139:31">tile</name><operator pos:start="139:32" pos:end="139:33">-&gt;</operator><name pos:start="139:34" pos:end="139:36">mbs</name></name></expr>;</init> <condition pos:start="139:39" pos:end="139:58"><expr pos:start="139:39" pos:end="139:57"><name pos:start="139:39" pos:end="139:41">mbn</name> <operator pos:start="139:43" pos:end="139:43">&lt;</operator> <name pos:start="139:45" pos:end="139:57"><name pos:start="139:45" pos:end="139:48">tile</name><operator pos:start="139:49" pos:end="139:50">-&gt;</operator><name pos:start="139:51" pos:end="139:57">num_MBs</name></name></expr>;</condition> <incr pos:start="139:60" pos:end="139:70"><expr pos:start="139:60" pos:end="139:63"><name pos:start="139:60" pos:end="139:61">mb</name><operator pos:start="139:62" pos:end="139:63">++</operator></expr><operator pos:start="139:64" pos:end="139:64">,</operator> <expr pos:start="139:66" pos:end="139:70"><name pos:start="139:66" pos:end="139:68">mbn</name><operator pos:start="139:69" pos:end="139:70">++</operator></expr></incr>)</control> <block pos:start="139:73" pos:end="175:9">{<block_content pos:start="141:13" pos:end="173:13">

            <expr_stmt pos:start="141:13" pos:end="141:28"><expr pos:start="141:13" pos:end="141:27"><name pos:start="141:13" pos:end="141:16">mv_x</name> <operator pos:start="141:18" pos:end="141:18">=</operator> <name pos:start="141:20" pos:end="141:27"><name pos:start="141:20" pos:end="141:21">mb</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:27">mv_x</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:28"><expr pos:start="143:13" pos:end="143:27"><name pos:start="143:13" pos:end="143:16">mv_y</name> <operator pos:start="143:18" pos:end="143:18">=</operator> <name pos:start="143:20" pos:end="143:27"><name pos:start="143:20" pos:end="143:21">mb</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:27">mv_y</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="145:13" pos:end="157:13"><if pos:start="145:13" pos:end="149:13">if <condition pos:start="145:16" pos:end="145:34">(<expr pos:start="145:17" pos:end="145:33"><operator pos:start="145:17" pos:end="145:17">!</operator><name pos:start="145:18" pos:end="145:33"><name pos:start="145:18" pos:end="145:21">band</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:33">is_halfpel</name></name></expr>)</condition> <block pos:start="145:36" pos:end="149:13">{<block_content pos:start="147:17" pos:end="147:28">

                <expr_stmt pos:start="147:17" pos:end="147:28"><expr pos:start="147:17" pos:end="147:27"><name pos:start="147:17" pos:end="147:23">mc_type</name> <operator pos:start="147:25" pos:end="147:25">=</operator> <literal type="number" pos:start="147:27" pos:end="147:27">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="147:30" pos:end="147:63">/* we have only fullpel vectors */</comment>

            </block_content>}</block></if> <else pos:start="149:15" pos:end="157:13">else <block pos:start="149:20" pos:end="157:13">{<block_content pos:start="151:17" pos:end="155:27">

                <expr_stmt pos:start="151:17" pos:end="151:57"><expr pos:start="151:17" pos:end="151:56"><name pos:start="151:17" pos:end="151:23">mc_type</name> <operator pos:start="151:25" pos:end="151:25">=</operator> <operator pos:start="151:27" pos:end="151:27">(</operator><operator pos:start="151:28" pos:end="151:28">(</operator><name pos:start="151:29" pos:end="151:32">mv_y</name> <operator pos:start="151:34" pos:end="151:34">&amp;</operator> <literal type="number" pos:start="151:36" pos:end="151:36">1</literal><operator pos:start="151:37" pos:end="151:37">)</operator> <operator pos:start="151:39" pos:end="151:40">&lt;&lt;</operator> <literal type="number" pos:start="151:42" pos:end="151:42">1</literal><operator pos:start="151:43" pos:end="151:43">)</operator> <operator pos:start="151:45" pos:end="151:45">|</operator> <operator pos:start="151:47" pos:end="151:47">(</operator><name pos:start="151:48" pos:end="151:51">mv_x</name> <operator pos:start="151:53" pos:end="151:53">&amp;</operator> <literal type="number" pos:start="151:55" pos:end="151:55">1</literal><operator pos:start="151:56" pos:end="151:56">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:27"><expr pos:start="153:17" pos:end="153:26"><name pos:start="153:17" pos:end="153:20">mv_x</name> <operator pos:start="153:22" pos:end="153:24">&gt;&gt;=</operator> <literal type="number" pos:start="153:26" pos:end="153:26">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:27"><expr pos:start="155:17" pos:end="155:26"><name pos:start="155:17" pos:end="155:20">mv_y</name> <operator pos:start="155:22" pos:end="155:24">&gt;&gt;=</operator> <literal type="number" pos:start="155:26" pos:end="155:26">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="155:29" pos:end="155:75">/* convert halfpel vectors into fullpel ones */</comment>

            </block_content>}</block></else></if_stmt>



            <for pos:start="161:13" pos:end="173:13">for <control pos:start="161:17" pos:end="161:50">(<init pos:start="161:18" pos:end="161:25"><expr pos:start="161:18" pos:end="161:24"><name pos:start="161:18" pos:end="161:20">blk</name> <operator pos:start="161:22" pos:end="161:22">=</operator> <literal type="number" pos:start="161:24" pos:end="161:24">0</literal></expr>;</init> <condition pos:start="161:27" pos:end="161:43"><expr pos:start="161:27" pos:end="161:42"><name pos:start="161:27" pos:end="161:29">blk</name> <operator pos:start="161:31" pos:end="161:31">&lt;</operator> <name pos:start="161:33" pos:end="161:42">num_blocks</name></expr>;</condition> <incr pos:start="161:45" pos:end="161:49"><expr pos:start="161:45" pos:end="161:49"><name pos:start="161:45" pos:end="161:47">blk</name><operator pos:start="161:48" pos:end="161:49">++</operator></expr></incr>)</control> <block pos:start="161:52" pos:end="173:13">{<block_content pos:start="165:17" pos:end="171:55">

                <comment type="block" pos:start="163:17" pos:end="163:83">/* adjust block position in the buffer according with its number */</comment>

                <expr_stmt pos:start="165:17" pos:end="165:95"><expr pos:start="165:17" pos:end="165:94"><name pos:start="165:17" pos:end="165:20">offs</name> <operator pos:start="165:22" pos:end="165:22">=</operator> <name pos:start="165:24" pos:end="165:35"><name pos:start="165:24" pos:end="165:25">mb</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:35">buf_offs</name></name> <operator pos:start="165:37" pos:end="165:37">+</operator> <name pos:start="165:39" pos:end="165:52"><name pos:start="165:39" pos:end="165:42">band</name><operator pos:start="165:43" pos:end="165:44">-&gt;</operator><name pos:start="165:45" pos:end="165:52">blk_size</name></name> <operator pos:start="165:54" pos:end="165:54">*</operator> <operator pos:start="165:56" pos:end="165:56">(</operator><operator pos:start="165:57" pos:end="165:57">(</operator><name pos:start="165:58" pos:end="165:60">blk</name> <operator pos:start="165:62" pos:end="165:62">&amp;</operator> <literal type="number" pos:start="165:64" pos:end="165:64">1</literal><operator pos:start="165:65" pos:end="165:65">)</operator> <operator pos:start="165:67" pos:end="165:67">+</operator> <operator pos:start="165:69" pos:end="165:69">!</operator><operator pos:start="165:70" pos:end="165:70">!</operator><operator pos:start="165:71" pos:end="165:71">(</operator><name pos:start="165:72" pos:end="165:74">blk</name> <operator pos:start="165:76" pos:end="165:76">&amp;</operator> <literal type="number" pos:start="165:78" pos:end="165:78">2</literal><operator pos:start="165:79" pos:end="165:79">)</operator> <operator pos:start="165:81" pos:end="165:81">*</operator> <name pos:start="165:83" pos:end="165:93"><name pos:start="165:83" pos:end="165:86">band</name><operator pos:start="165:87" pos:end="165:88">-&gt;</operator><name pos:start="165:89" pos:end="165:93">pitch</name></name><operator pos:start="165:94" pos:end="165:94">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="171:55"><expr pos:start="167:17" pos:end="171:54"><call pos:start="167:17" pos:end="171:54"><name pos:start="167:17" pos:end="167:32">mc_no_delta_func</name><argument_list pos:start="167:33" pos:end="171:54">(<argument pos:start="167:34" pos:end="167:49"><expr pos:start="167:34" pos:end="167:49"><name pos:start="167:34" pos:end="167:42"><name pos:start="167:34" pos:end="167:37">band</name><operator pos:start="167:38" pos:end="167:39">-&gt;</operator><name pos:start="167:40" pos:end="167:42">buf</name></name> <operator pos:start="167:44" pos:end="167:44">+</operator> <name pos:start="167:46" pos:end="167:49">offs</name></expr></argument>,

                                 <argument pos:start="169:34" pos:end="169:81"><expr pos:start="169:34" pos:end="169:81"><name pos:start="169:34" pos:end="169:46"><name pos:start="169:34" pos:end="169:37">band</name><operator pos:start="169:38" pos:end="169:39">-&gt;</operator><name pos:start="169:40" pos:end="169:46">ref_buf</name></name> <operator pos:start="169:48" pos:end="169:48">+</operator> <name pos:start="169:50" pos:end="169:53">offs</name> <operator pos:start="169:55" pos:end="169:55">+</operator> <name pos:start="169:57" pos:end="169:60">mv_y</name> <operator pos:start="169:62" pos:end="169:62">*</operator> <name pos:start="169:64" pos:end="169:74"><name pos:start="169:64" pos:end="169:67">band</name><operator pos:start="169:68" pos:end="169:69">-&gt;</operator><name pos:start="169:70" pos:end="169:74">pitch</name></name> <operator pos:start="169:76" pos:end="169:76">+</operator> <name pos:start="169:78" pos:end="169:81">mv_x</name></expr></argument>,

                                 <argument pos:start="171:34" pos:end="171:44"><expr pos:start="171:34" pos:end="171:44"><name pos:start="171:34" pos:end="171:44"><name pos:start="171:34" pos:end="171:37">band</name><operator pos:start="171:38" pos:end="171:39">-&gt;</operator><name pos:start="171:40" pos:end="171:44">pitch</name></name></expr></argument>, <argument pos:start="171:47" pos:end="171:53"><expr pos:start="171:47" pos:end="171:53"><name pos:start="171:47" pos:end="171:53">mc_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="177:7" pos:end="195:5">else <block pos:start="177:12" pos:end="195:5">{<block_content pos:start="181:9" pos:end="193:9">

        <comment type="block" pos:start="179:9" pos:end="179:68">/* copy data from the reference tile into the current one */</comment>

        <expr_stmt pos:start="181:9" pos:end="181:68"><expr pos:start="181:9" pos:end="181:67"><name pos:start="181:9" pos:end="181:11">src</name> <operator pos:start="181:13" pos:end="181:13">=</operator> <name pos:start="181:15" pos:end="181:27"><name pos:start="181:15" pos:end="181:18">band</name><operator pos:start="181:19" pos:end="181:20">-&gt;</operator><name pos:start="181:21" pos:end="181:27">ref_buf</name></name> <operator pos:start="181:29" pos:end="181:29">+</operator> <name pos:start="181:31" pos:end="181:40"><name pos:start="181:31" pos:end="181:34">tile</name><operator pos:start="181:35" pos:end="181:36">-&gt;</operator><name pos:start="181:37" pos:end="181:40">ypos</name></name> <operator pos:start="181:42" pos:end="181:42">*</operator> <name pos:start="181:44" pos:end="181:54"><name pos:start="181:44" pos:end="181:47">band</name><operator pos:start="181:48" pos:end="181:49">-&gt;</operator><name pos:start="181:50" pos:end="181:54">pitch</name></name> <operator pos:start="181:56" pos:end="181:56">+</operator> <name pos:start="181:58" pos:end="181:67"><name pos:start="181:58" pos:end="181:61">tile</name><operator pos:start="181:62" pos:end="181:63">-&gt;</operator><name pos:start="181:64" pos:end="181:67">xpos</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:68"><expr pos:start="183:9" pos:end="183:67"><name pos:start="183:9" pos:end="183:11">dst</name> <operator pos:start="183:13" pos:end="183:13">=</operator> <name pos:start="183:15" pos:end="183:23"><name pos:start="183:15" pos:end="183:18">band</name><operator pos:start="183:19" pos:end="183:20">-&gt;</operator><name pos:start="183:21" pos:end="183:23">buf</name></name>     <operator pos:start="183:29" pos:end="183:29">+</operator> <name pos:start="183:31" pos:end="183:40"><name pos:start="183:31" pos:end="183:34">tile</name><operator pos:start="183:35" pos:end="183:36">-&gt;</operator><name pos:start="183:37" pos:end="183:40">ypos</name></name> <operator pos:start="183:42" pos:end="183:42">*</operator> <name pos:start="183:44" pos:end="183:54"><name pos:start="183:44" pos:end="183:47">band</name><operator pos:start="183:48" pos:end="183:49">-&gt;</operator><name pos:start="183:50" pos:end="183:54">pitch</name></name> <operator pos:start="183:56" pos:end="183:56">+</operator> <name pos:start="183:58" pos:end="183:67"><name pos:start="183:58" pos:end="183:61">tile</name><operator pos:start="183:62" pos:end="183:63">-&gt;</operator><name pos:start="183:64" pos:end="183:67">xpos</name></name></expr>;</expr_stmt>

        <for pos:start="185:9" pos:end="193:9">for <control pos:start="185:13" pos:end="185:42">(<init pos:start="185:14" pos:end="185:19"><expr pos:start="185:14" pos:end="185:18"><name pos:start="185:14" pos:end="185:14">y</name> <operator pos:start="185:16" pos:end="185:16">=</operator> <literal type="number" pos:start="185:18" pos:end="185:18">0</literal></expr>;</init> <condition pos:start="185:21" pos:end="185:37"><expr pos:start="185:21" pos:end="185:36"><name pos:start="185:21" pos:end="185:21">y</name> <operator pos:start="185:23" pos:end="185:23">&lt;</operator> <name pos:start="185:25" pos:end="185:36"><name pos:start="185:25" pos:end="185:28">tile</name><operator pos:start="185:29" pos:end="185:30">-&gt;</operator><name pos:start="185:31" pos:end="185:36">height</name></name></expr>;</condition> <incr pos:start="185:39" pos:end="185:41"><expr pos:start="185:39" pos:end="185:41"><name pos:start="185:39" pos:end="185:39">y</name><operator pos:start="185:40" pos:end="185:41">++</operator></expr></incr>)</control> <block pos:start="185:44" pos:end="193:9">{<block_content pos:start="187:13" pos:end="191:31">

            <expr_stmt pos:start="187:13" pos:end="187:63"><expr pos:start="187:13" pos:end="187:62"><call pos:start="187:13" pos:end="187:62"><name pos:start="187:13" pos:end="187:18">memcpy</name><argument_list pos:start="187:19" pos:end="187:62">(<argument pos:start="187:20" pos:end="187:22"><expr pos:start="187:20" pos:end="187:22"><name pos:start="187:20" pos:end="187:22">dst</name></expr></argument>, <argument pos:start="187:25" pos:end="187:27"><expr pos:start="187:25" pos:end="187:27"><name pos:start="187:25" pos:end="187:27">src</name></expr></argument>, <argument pos:start="187:30" pos:end="187:61"><expr pos:start="187:30" pos:end="187:61"><name pos:start="187:30" pos:end="187:40"><name pos:start="187:30" pos:end="187:33">tile</name><operator pos:start="187:34" pos:end="187:35">-&gt;</operator><name pos:start="187:36" pos:end="187:40">width</name></name><operator pos:start="187:41" pos:end="187:41">*</operator><sizeof pos:start="187:42" pos:end="187:61">sizeof<argument_list pos:start="187:48" pos:end="187:61">(<argument pos:start="187:49" pos:end="187:60"><expr pos:start="187:49" pos:end="187:60"><name pos:start="187:49" pos:end="187:60"><name pos:start="187:49" pos:end="187:52">band</name><operator pos:start="187:53" pos:end="187:54">-&gt;</operator><name pos:start="187:55" pos:end="187:57">buf</name><index pos:start="187:58" pos:end="187:60">[<expr pos:start="187:59" pos:end="187:59"><literal type="number" pos:start="187:59" pos:end="187:59">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:31"><expr pos:start="189:13" pos:end="189:30"><name pos:start="189:13" pos:end="189:15">src</name> <operator pos:start="189:17" pos:end="189:18">+=</operator> <name pos:start="189:20" pos:end="189:30"><name pos:start="189:20" pos:end="189:23">band</name><operator pos:start="189:24" pos:end="189:25">-&gt;</operator><name pos:start="189:26" pos:end="189:30">pitch</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:31"><expr pos:start="191:13" pos:end="191:30"><name pos:start="191:13" pos:end="191:15">dst</name> <operator pos:start="191:17" pos:end="191:18">+=</operator> <name pos:start="191:20" pos:end="191:30"><name pos:start="191:20" pos:end="191:23">band</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:30">pitch</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <return pos:start="199:5" pos:end="199:13">return <expr pos:start="199:12" pos:end="199:12"><literal type="number" pos:start="199:12" pos:end="199:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
