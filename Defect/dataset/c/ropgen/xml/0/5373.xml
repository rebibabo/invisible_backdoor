<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5373.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">do_branch</name><parameter_list pos:start="1:22" pos:end="3:34">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:38"><name pos:start="1:23" pos:end="1:34">DisasContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">dc</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:47">int32_t</name></type> <name pos:start="1:49" pos:end="1:54">offset</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:69"><decl pos:start="1:57" pos:end="1:69"><type pos:start="1:57" pos:end="1:69"><name pos:start="1:57" pos:end="1:64">uint32_t</name></type> <name pos:start="1:66" pos:end="1:69">insn</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:77"><decl pos:start="1:72" pos:end="1:77"><type pos:start="1:72" pos:end="1:77"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:77">cc</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:33"><decl pos:start="3:23" pos:end="3:33"><type pos:start="3:23" pos:end="3:33"><name pos:start="3:23" pos:end="3:26">TCGv</name></type> <name pos:start="3:28" pos:end="3:33">r_cond</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="77:1">{<block_content pos:start="7:5" pos:end="75:5">

    <decl_stmt pos:start="7:5" pos:end="7:70"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:21">cond</name> <init pos:start="7:23" pos:end="7:45">= <expr pos:start="7:25" pos:end="7:45"><call pos:start="7:25" pos:end="7:45"><name pos:start="7:25" pos:end="7:33">GET_FIELD</name><argument_list pos:start="7:34" pos:end="7:45">(<argument pos:start="7:35" pos:end="7:38"><expr pos:start="7:35" pos:end="7:38"><name pos:start="7:35" pos:end="7:38">insn</name></expr></argument>, <argument pos:start="7:41" pos:end="7:41"><expr pos:start="7:41" pos:end="7:41"><literal type="number" pos:start="7:41" pos:end="7:41">3</literal></expr></argument>, <argument pos:start="7:44" pos:end="7:44"><expr pos:start="7:44" pos:end="7:44"><literal type="number" pos:start="7:44" pos:end="7:44">6</literal></expr></argument>)</argument_list></call></expr></init></decl>, <decl pos:start="7:48" pos:end="7:69"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:48" pos:end="7:48">a</name> <init pos:start="7:50" pos:end="7:69">= <expr pos:start="7:52" pos:end="7:69"><operator pos:start="7:52" pos:end="7:52">(</operator><name pos:start="7:53" pos:end="7:56">insn</name> <operator pos:start="7:58" pos:end="7:58">&amp;</operator> <operator pos:start="7:60" pos:end="7:60">(</operator><literal type="number" pos:start="7:61" pos:end="7:61">1</literal> <operator pos:start="7:63" pos:end="7:64">&lt;&lt;</operator> <literal type="number" pos:start="7:66" pos:end="7:67">29</literal><operator pos:start="7:68" pos:end="7:68">)</operator><operator pos:start="7:69" pos:end="7:69">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:23">target</name> <init pos:start="9:25" pos:end="9:41">= <expr pos:start="9:27" pos:end="9:41"><name pos:start="9:27" pos:end="9:32"><name pos:start="9:27" pos:end="9:28">dc</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:32">pc</name></name> <operator pos:start="9:34" pos:end="9:34">+</operator> <name pos:start="9:36" pos:end="9:41">offset</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="75:5"><if pos:start="13:5" pos:end="31:5">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:12">cond</name> <operator pos:start="13:14" pos:end="13:15">==</operator> <literal type="number" pos:start="13:17" pos:end="13:19">0x0</literal></expr>)</condition> <block pos:start="13:22" pos:end="31:5">{<block_content pos:start="17:9" pos:end="29:9">

        <comment type="block" pos:start="15:9" pos:end="15:37">/* unconditional not taken */</comment>

        <if_stmt pos:start="17:9" pos:end="29:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:14">(<expr pos:start="17:13" pos:end="17:13"><name pos:start="17:13" pos:end="17:13">a</name></expr>)</condition> <block pos:start="17:16" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:33">

            <expr_stmt pos:start="19:13" pos:end="19:33"><expr pos:start="19:13" pos:end="19:32"><name pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:14">dc</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:18">pc</name></name> <operator pos:start="19:20" pos:end="19:20">=</operator> <name pos:start="19:22" pos:end="19:28"><name pos:start="19:22" pos:end="19:23">dc</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:28">npc</name></name> <operator pos:start="19:30" pos:end="19:30">+</operator> <literal type="number" pos:start="19:32" pos:end="19:32">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:33"><expr pos:start="21:13" pos:end="21:32"><name pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:14">dc</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:19">npc</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:28"><name pos:start="21:23" pos:end="21:24">dc</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:28">pc</name></name> <operator pos:start="21:30" pos:end="21:30">+</operator> <literal type="number" pos:start="21:32" pos:end="21:32">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="23:11" pos:end="29:9">else <block pos:start="23:16" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:33">

            <expr_stmt pos:start="25:13" pos:end="25:29"><expr pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:14">dc</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:18">pc</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:28"><name pos:start="25:22" pos:end="25:23">dc</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:28">npc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:33"><expr pos:start="27:13" pos:end="27:32"><name pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:14">dc</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:19">npc</name></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <name pos:start="27:23" pos:end="27:28"><name pos:start="27:23" pos:end="27:24">dc</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:28">pc</name></name> <operator pos:start="27:30" pos:end="27:30">+</operator> <literal type="number" pos:start="27:32" pos:end="27:32">4</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="31:7" pos:end="51:5">else if <condition pos:start="31:15" pos:end="31:27">(<expr pos:start="31:16" pos:end="31:26"><name pos:start="31:16" pos:end="31:19">cond</name> <operator pos:start="31:21" pos:end="31:22">==</operator> <literal type="number" pos:start="31:24" pos:end="31:26">0x8</literal></expr>)</condition> <block pos:start="31:29" pos:end="51:5">{<block_content pos:start="35:9" pos:end="49:9">

        <comment type="block" pos:start="33:9" pos:end="33:33">/* unconditional taken */</comment>

        <if_stmt pos:start="35:9" pos:end="49:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:14">(<expr pos:start="35:13" pos:end="35:13"><name pos:start="35:13" pos:end="35:13">a</name></expr>)</condition> <block pos:start="35:16" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:33">

            <expr_stmt pos:start="37:13" pos:end="37:28"><expr pos:start="37:13" pos:end="37:27"><name pos:start="37:13" pos:end="37:18"><name pos:start="37:13" pos:end="37:14">dc</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:18">pc</name></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:27">target</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:33"><expr pos:start="39:13" pos:end="39:32"><name pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:14">dc</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:19">npc</name></name> <operator pos:start="39:21" pos:end="39:21">=</operator> <name pos:start="39:23" pos:end="39:28"><name pos:start="39:23" pos:end="39:24">dc</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:28">pc</name></name> <operator pos:start="39:30" pos:end="39:30">+</operator> <literal type="number" pos:start="39:32" pos:end="39:32">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="49:9">else <block pos:start="41:16" pos:end="49:9">{<block_content pos:start="43:13" pos:end="47:44">

            <expr_stmt pos:start="43:13" pos:end="43:29"><expr pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:18"><name pos:start="43:13" pos:end="43:14">dc</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:18">pc</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:28"><name pos:start="43:22" pos:end="43:23">dc</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:28">npc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:29"><expr pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:14">dc</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:19">npc</name></name> <operator pos:start="45:21" pos:end="45:21">=</operator> <name pos:start="45:23" pos:end="45:28">target</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:44"><expr pos:start="47:13" pos:end="47:43"><call pos:start="47:13" pos:end="47:43"><name pos:start="47:13" pos:end="47:26">tcg_gen_mov_tl</name><argument_list pos:start="47:27" pos:end="47:43">(<argument pos:start="47:28" pos:end="47:33"><expr pos:start="47:28" pos:end="47:33"><name pos:start="47:28" pos:end="47:33">cpu_pc</name></expr></argument>, <argument pos:start="47:36" pos:end="47:42"><expr pos:start="47:36" pos:end="47:42"><name pos:start="47:36" pos:end="47:42">cpu_npc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="75:5">else <block pos:start="51:12" pos:end="75:5">{<block_content pos:start="53:9" pos:end="73:9">

        <expr_stmt pos:start="53:9" pos:end="53:31"><expr pos:start="53:9" pos:end="53:30"><call pos:start="53:9" pos:end="53:30"><name pos:start="53:9" pos:end="53:18">flush_cond</name><argument_list pos:start="53:19" pos:end="53:30">(<argument pos:start="53:20" pos:end="53:21"><expr pos:start="53:20" pos:end="53:21"><name pos:start="53:20" pos:end="53:21">dc</name></expr></argument>, <argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29">r_cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:39"><expr pos:start="55:9" pos:end="55:38"><call pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:16">gen_cond</name><argument_list pos:start="55:17" pos:end="55:38">(<argument pos:start="55:18" pos:end="55:23"><expr pos:start="55:18" pos:end="55:23"><name pos:start="55:18" pos:end="55:23">r_cond</name></expr></argument>, <argument pos:start="55:26" pos:end="55:27"><expr pos:start="55:26" pos:end="55:27"><name pos:start="55:26" pos:end="55:27">cc</name></expr></argument>, <argument pos:start="55:30" pos:end="55:33"><expr pos:start="55:30" pos:end="55:33"><name pos:start="55:30" pos:end="55:33">cond</name></expr></argument>, <argument pos:start="55:36" pos:end="55:37"><expr pos:start="55:36" pos:end="55:37"><name pos:start="55:36" pos:end="55:37">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="73:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:14">(<expr pos:start="57:13" pos:end="57:13"><name pos:start="57:13" pos:end="57:13">a</name></expr>)</condition> <block pos:start="57:16" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:26">

            <expr_stmt pos:start="59:13" pos:end="59:54"><expr pos:start="59:13" pos:end="59:53"><call pos:start="59:13" pos:end="59:53"><name pos:start="59:13" pos:end="59:24">gen_branch_a</name><argument_list pos:start="59:25" pos:end="59:53">(<argument pos:start="59:26" pos:end="59:27"><expr pos:start="59:26" pos:end="59:27"><name pos:start="59:26" pos:end="59:27">dc</name></expr></argument>, <argument pos:start="59:30" pos:end="59:35"><expr pos:start="59:30" pos:end="59:35"><name pos:start="59:30" pos:end="59:35">target</name></expr></argument>, <argument pos:start="59:38" pos:end="59:44"><expr pos:start="59:38" pos:end="59:44"><name pos:start="59:38" pos:end="59:44"><name pos:start="59:38" pos:end="59:39">dc</name><operator pos:start="59:40" pos:end="59:41">-&gt;</operator><name pos:start="59:42" pos:end="59:44">npc</name></name></expr></argument>, <argument pos:start="59:47" pos:end="59:52"><expr pos:start="59:47" pos:end="59:52"><name pos:start="59:47" pos:end="59:52">r_cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:26"><expr pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:21"><name pos:start="61:13" pos:end="61:14">dc</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:21">is_br</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <literal type="number" pos:start="61:25" pos:end="61:25">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="73:9">else <block pos:start="63:16" pos:end="73:9">{<block_content pos:start="65:13" pos:end="71:30">

            <expr_stmt pos:start="65:13" pos:end="65:29"><expr pos:start="65:13" pos:end="65:28"><name pos:start="65:13" pos:end="65:18"><name pos:start="65:13" pos:end="65:14">dc</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:18">pc</name></name> <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:28"><name pos:start="65:22" pos:end="65:23">dc</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:28">npc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:36"><expr pos:start="67:13" pos:end="67:35"><name pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:14">dc</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:23">jump_pc</name><index pos:start="67:24" pos:end="67:26">[<expr pos:start="67:25" pos:end="67:25"><literal type="number" pos:start="67:25" pos:end="67:25">0</literal></expr>]</index></name> <operator pos:start="67:28" pos:end="67:28">=</operator> <name pos:start="67:30" pos:end="67:35">target</name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:41"><expr pos:start="69:13" pos:end="69:40"><name pos:start="69:13" pos:end="69:26"><name pos:start="69:13" pos:end="69:14">dc</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:23">jump_pc</name><index pos:start="69:24" pos:end="69:26">[<expr pos:start="69:25" pos:end="69:25"><literal type="number" pos:start="69:25" pos:end="69:25">1</literal></expr>]</index></name> <operator pos:start="69:28" pos:end="69:28">=</operator> <name pos:start="69:30" pos:end="69:36"><name pos:start="69:30" pos:end="69:31">dc</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:36">npc</name></name> <operator pos:start="69:38" pos:end="69:38">+</operator> <literal type="number" pos:start="69:40" pos:end="69:40">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:30"><expr pos:start="71:13" pos:end="71:29"><name pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:14">dc</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:19">npc</name></name> <operator pos:start="71:21" pos:end="71:21">=</operator> <name pos:start="71:23" pos:end="71:29">JUMP_PC</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
