<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13954.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">parse_options</name><parameter_list pos:start="1:19" pos:end="3:60">(<parameter pos:start="1:20" pos:end="1:27"><decl pos:start="1:20" pos:end="1:27"><type pos:start="1:20" pos:end="1:27"><name pos:start="1:20" pos:end="1:22">int</name></type> <name pos:start="1:24" pos:end="1:27">argc</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:40"><decl pos:start="1:30" pos:end="1:40"><type pos:start="1:30" pos:end="1:40"><name pos:start="1:30" pos:end="1:33">char</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier><modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:40">argv</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:66"><decl pos:start="1:43" pos:end="1:66"><type pos:start="1:43" pos:end="1:66"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:57">OptionDef</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:66">options</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:59"><function_decl pos:start="3:20" pos:end="3:59"><type pos:start="3:20" pos:end="3:23"><name pos:start="3:20" pos:end="3:23">void</name></type> (<modifier pos:start="3:26" pos:end="3:26">*</modifier> <name pos:start="3:28" pos:end="3:45">parse_arg_function</name>)<parameter_list pos:start="3:47" pos:end="3:59">(<parameter pos:start="3:48" pos:end="3:58"><decl pos:start="3:48" pos:end="3:58"><type pos:start="3:48" pos:end="3:58"><specifier pos:start="3:48" pos:end="3:52">const</specifier> <name pos:start="3:54" pos:end="3:57">char</name><modifier pos:start="3:58" pos:end="3:58">*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="135:1">{<block_content pos:start="7:5" pos:end="133:5">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">opt</name></decl>, <decl pos:start="7:22" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:16"><modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">arg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">optindex</name></decl>, <decl pos:start="9:19" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:31">handleoptions</name><init pos:start="9:32" pos:end="9:33">=<expr pos:start="9:33" pos:end="9:33"><literal type="number" pos:start="9:33" pos:end="9:33">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:21"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:19">OptionDef</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:23">po</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:23">/* parse options */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">optindex</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <literal type="number" pos:start="17:16" pos:end="17:16">1</literal></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="133:5">while <condition pos:start="19:11" pos:end="19:27">(<expr pos:start="19:12" pos:end="19:26"><name pos:start="19:12" pos:end="19:19">optindex</name> <operator pos:start="19:21" pos:end="19:21">&lt;</operator> <name pos:start="19:23" pos:end="19:26">argc</name></expr>)</condition> <block pos:start="19:29" pos:end="133:5">{<block_content pos:start="21:9" pos:end="131:9">

        <expr_stmt pos:start="21:9" pos:end="21:31"><expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:11">opt</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:30"><name pos:start="21:15" pos:end="21:18">argv</name><index pos:start="21:19" pos:end="21:30">[<expr pos:start="21:20" pos:end="21:29"><name pos:start="21:20" pos:end="21:27">optindex</name><operator pos:start="21:28" pos:end="21:29">++</operator></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="25:9" pos:end="131:9"><if pos:start="25:9" pos:end="125:9">if <condition pos:start="25:12" pos:end="25:61">(<expr pos:start="25:13" pos:end="25:60"><name pos:start="25:13" pos:end="25:25">handleoptions</name> <operator pos:start="25:27" pos:end="25:28">&amp;&amp;</operator> <name pos:start="25:30" pos:end="25:35"><name pos:start="25:30" pos:end="25:32">opt</name><index pos:start="25:33" pos:end="25:35">[<expr pos:start="25:34" pos:end="25:34"><literal type="number" pos:start="25:34" pos:end="25:34">0</literal></expr>]</index></name> <operator pos:start="25:37" pos:end="25:38">==</operator> <literal type="char" pos:start="25:40" pos:end="25:42">'-'</literal> <operator pos:start="25:44" pos:end="25:45">&amp;&amp;</operator> <name pos:start="25:47" pos:end="25:52"><name pos:start="25:47" pos:end="25:49">opt</name><index pos:start="25:50" pos:end="25:52">[<expr pos:start="25:51" pos:end="25:51"><literal type="number" pos:start="25:51" pos:end="25:51">1</literal></expr>]</index></name> <operator pos:start="25:54" pos:end="25:55">!=</operator> <literal type="char" pos:start="25:57" pos:end="25:60">'\0'</literal></expr>)</condition> <block pos:start="25:63" pos:end="125:9">{<block_content pos:start="27:13" pos:end="123:24">

            <decl_stmt pos:start="27:13" pos:end="27:29"><decl pos:start="27:13" pos:end="27:28"><type pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">int</name></type> <name pos:start="27:17" pos:end="27:24">bool_val</name> <init pos:start="27:26" pos:end="27:28">= <expr pos:start="27:28" pos:end="27:28"><literal type="number" pos:start="27:28" pos:end="27:28">1</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="29:13" pos:end="35:13"><if pos:start="29:13" pos:end="35:13">if <condition pos:start="29:16" pos:end="29:48">(<expr pos:start="29:17" pos:end="29:47"><name pos:start="29:17" pos:end="29:22"><name pos:start="29:17" pos:end="29:19">opt</name><index pos:start="29:20" pos:end="29:22">[<expr pos:start="29:21" pos:end="29:21"><literal type="number" pos:start="29:21" pos:end="29:21">1</literal></expr>]</index></name> <operator pos:start="29:24" pos:end="29:25">==</operator> <literal type="char" pos:start="29:27" pos:end="29:29">'-'</literal> <operator pos:start="29:31" pos:end="29:32">&amp;&amp;</operator> <name pos:start="29:34" pos:end="29:39"><name pos:start="29:34" pos:end="29:36">opt</name><index pos:start="29:37" pos:end="29:39">[<expr pos:start="29:38" pos:end="29:38"><literal type="number" pos:start="29:38" pos:end="29:38">2</literal></expr>]</index></name> <operator pos:start="29:41" pos:end="29:42">==</operator> <literal type="char" pos:start="29:44" pos:end="29:47">'\0'</literal></expr>)</condition> <block pos:start="29:50" pos:end="35:13">{<block_content pos:start="31:17" pos:end="33:25">

                <expr_stmt pos:start="31:17" pos:end="31:34"><expr pos:start="31:17" pos:end="31:33"><name pos:start="31:17" pos:end="31:29">handleoptions</name> <operator pos:start="31:31" pos:end="31:31">=</operator> <literal type="number" pos:start="31:33" pos:end="31:33">0</literal></expr>;</expr_stmt>

                <continue pos:start="33:17" pos:end="33:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:18"><expr pos:start="37:13" pos:end="37:17"><name pos:start="37:13" pos:end="37:15">opt</name><operator pos:start="37:16" pos:end="37:17">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:42"><expr pos:start="39:13" pos:end="39:41"><name pos:start="39:13" pos:end="39:14">po</name><operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:41"><name pos:start="39:17" pos:end="39:27">find_option</name><argument_list pos:start="39:28" pos:end="39:41">(<argument pos:start="39:29" pos:end="39:35"><expr pos:start="39:29" pos:end="39:35"><name pos:start="39:29" pos:end="39:35">options</name></expr></argument>, <argument pos:start="39:38" pos:end="39:40"><expr pos:start="39:38" pos:end="39:40"><name pos:start="39:38" pos:end="39:40">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="53:13"><if pos:start="41:13" pos:end="53:13">if <condition pos:start="41:16" pos:end="41:60">(<expr pos:start="41:17" pos:end="41:59"><operator pos:start="41:17" pos:end="41:17">!</operator><name pos:start="41:18" pos:end="41:25"><name pos:start="41:18" pos:end="41:19">po</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:25">name</name></name> <operator pos:start="41:27" pos:end="41:28">&amp;&amp;</operator> <name pos:start="41:30" pos:end="41:35"><name pos:start="41:30" pos:end="41:32">opt</name><index pos:start="41:33" pos:end="41:35">[<expr pos:start="41:34" pos:end="41:34"><literal type="number" pos:start="41:34" pos:end="41:34">0</literal></expr>]</index></name> <operator pos:start="41:37" pos:end="41:38">==</operator> <literal type="char" pos:start="41:40" pos:end="41:42">'n'</literal> <operator pos:start="41:44" pos:end="41:45">&amp;&amp;</operator> <name pos:start="41:47" pos:end="41:52"><name pos:start="41:47" pos:end="41:49">opt</name><index pos:start="41:50" pos:end="41:52">[<expr pos:start="41:51" pos:end="41:51"><literal type="number" pos:start="41:51" pos:end="41:51">1</literal></expr>]</index></name> <operator pos:start="41:54" pos:end="41:55">==</operator> <literal type="char" pos:start="41:57" pos:end="41:59">'o'</literal></expr>)</condition> <block pos:start="41:62" pos:end="53:13">{<block_content pos:start="45:17" pos:end="51:29">

                <comment type="block" pos:start="43:17" pos:end="43:45">/* handle 'no' bool option */</comment>

                <expr_stmt pos:start="45:17" pos:end="45:51"><expr pos:start="45:17" pos:end="45:50"><name pos:start="45:17" pos:end="45:18">po</name> <operator pos:start="45:20" pos:end="45:20">=</operator> <call pos:start="45:22" pos:end="45:50"><name pos:start="45:22" pos:end="45:32">find_option</name><argument_list pos:start="45:33" pos:end="45:50">(<argument pos:start="45:34" pos:end="45:40"><expr pos:start="45:34" pos:end="45:40"><name pos:start="45:34" pos:end="45:40">options</name></expr></argument>, <argument pos:start="45:43" pos:end="45:49"><expr pos:start="45:43" pos:end="45:49"><name pos:start="45:43" pos:end="45:45">opt</name> <operator pos:start="45:47" pos:end="45:47">+</operator> <literal type="number" pos:start="45:49" pos:end="45:49">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="47:17" pos:end="49:37"><if pos:start="47:17" pos:end="49:37">if <condition pos:start="47:20" pos:end="47:58">(<expr pos:start="47:21" pos:end="47:57"><operator pos:start="47:21" pos:end="47:21">!</operator><operator pos:start="47:22" pos:end="47:22">(</operator><name pos:start="47:23" pos:end="47:30"><name pos:start="47:23" pos:end="47:24">po</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:30">name</name></name> <operator pos:start="47:32" pos:end="47:33">&amp;&amp;</operator> <operator pos:start="47:35" pos:end="47:35">(</operator><name pos:start="47:36" pos:end="47:44"><name pos:start="47:36" pos:end="47:37">po</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:44">flags</name></name> <operator pos:start="47:46" pos:end="47:46">&amp;</operator> <name pos:start="47:48" pos:end="47:55">OPT_BOOL</name><operator pos:start="47:56" pos:end="47:56">)</operator><operator pos:start="47:57" pos:end="47:57">)</operator></expr>)</condition><block type="pseudo" pos:start="49:21" pos:end="49:37"><block_content pos:start="49:21" pos:end="49:37">

                    <goto pos:start="49:21" pos:end="49:37">goto <name pos:start="49:26" pos:end="49:36">unknown_opt</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:29"><expr pos:start="51:17" pos:end="51:28"><name pos:start="51:17" pos:end="51:24">bool_val</name> <operator pos:start="51:26" pos:end="51:26">=</operator> <literal type="number" pos:start="51:28" pos:end="51:28">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="55:13" pos:end="57:52"><if pos:start="55:13" pos:end="57:52">if <condition pos:start="55:16" pos:end="55:26">(<expr pos:start="55:17" pos:end="55:25"><operator pos:start="55:17" pos:end="55:17">!</operator><name pos:start="55:18" pos:end="55:25"><name pos:start="55:18" pos:end="55:19">po</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:25">name</name></name></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:52"><block_content pos:start="57:17" pos:end="57:52">

                <expr_stmt pos:start="57:17" pos:end="57:52"><expr pos:start="57:17" pos:end="57:51"><name pos:start="57:17" pos:end="57:18">po</name><operator pos:start="57:19" pos:end="57:19">=</operator> <call pos:start="57:21" pos:end="57:51"><name pos:start="57:21" pos:end="57:31">find_option</name><argument_list pos:start="57:32" pos:end="57:51">(<argument pos:start="57:33" pos:end="57:39"><expr pos:start="57:33" pos:end="57:39"><name pos:start="57:33" pos:end="57:39">options</name></expr></argument>, <argument pos:start="57:42" pos:end="57:50"><expr pos:start="57:42" pos:end="57:50"><literal type="string" pos:start="57:42" pos:end="57:50">"default"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="59:13" pos:end="67:13"><if pos:start="59:13" pos:end="67:13">if <condition pos:start="59:16" pos:end="59:26">(<expr pos:start="59:17" pos:end="59:25"><operator pos:start="59:17" pos:end="59:17">!</operator><name pos:start="59:18" pos:end="59:25"><name pos:start="59:18" pos:end="59:19">po</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:25">name</name></name></expr>)</condition> <block pos:start="59:28" pos:end="67:13">{<block_content pos:start="61:1" pos:end="65:24">

<label pos:start="61:1" pos:end="61:12"><name pos:start="61:1" pos:end="61:11">unknown_opt</name>:</label>

                <expr_stmt pos:start="63:17" pos:end="63:80"><expr pos:start="63:17" pos:end="63:79"><call pos:start="63:17" pos:end="63:79"><name pos:start="63:17" pos:end="63:23">fprintf</name><argument_list pos:start="63:24" pos:end="63:79">(<argument pos:start="63:25" pos:end="63:30"><expr pos:start="63:25" pos:end="63:30"><name pos:start="63:25" pos:end="63:30">stderr</name></expr></argument>, <argument pos:start="63:33" pos:end="63:64"><expr pos:start="63:33" pos:end="63:64"><literal type="string" pos:start="63:33" pos:end="63:64">"%s: unrecognized option '%s'\n"</literal></expr></argument>, <argument pos:start="63:67" pos:end="63:73"><expr pos:start="63:67" pos:end="63:73"><name pos:start="63:67" pos:end="63:73"><name pos:start="63:67" pos:end="63:70">argv</name><index pos:start="63:71" pos:end="63:73">[<expr pos:start="63:72" pos:end="63:72"><literal type="number" pos:start="63:72" pos:end="63:72">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="63:76" pos:end="63:78"><expr pos:start="63:76" pos:end="63:78"><name pos:start="63:76" pos:end="63:78">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:24"><expr pos:start="65:17" pos:end="65:23"><call pos:start="65:17" pos:end="65:23"><name pos:start="65:17" pos:end="65:20">exit</name><argument_list pos:start="65:21" pos:end="65:23">(<argument pos:start="65:22" pos:end="65:22"><expr pos:start="65:22" pos:end="65:22"><literal type="number" pos:start="65:22" pos:end="65:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:23"><expr pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:15">arg</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <name pos:start="69:19" pos:end="69:22">NULL</name></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="83:13"><if pos:start="71:13" pos:end="83:13">if <condition pos:start="71:16" pos:end="71:36">(<expr pos:start="71:17" pos:end="71:35"><name pos:start="71:17" pos:end="71:25"><name pos:start="71:17" pos:end="71:18">po</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:25">flags</name></name> <operator pos:start="71:27" pos:end="71:27">&amp;</operator> <name pos:start="71:29" pos:end="71:35">HAS_ARG</name></expr>)</condition> <block pos:start="71:38" pos:end="83:13">{<block_content pos:start="73:17" pos:end="81:17">

                <expr_stmt pos:start="73:17" pos:end="73:39"><expr pos:start="73:17" pos:end="73:38"><name pos:start="73:17" pos:end="73:19">arg</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <name pos:start="73:23" pos:end="73:38"><name pos:start="73:23" pos:end="73:26">argv</name><index pos:start="73:27" pos:end="73:38">[<expr pos:start="73:28" pos:end="73:37"><name pos:start="73:28" pos:end="73:35">optindex</name><operator pos:start="73:36" pos:end="73:37">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="75:17" pos:end="81:17"><if pos:start="75:17" pos:end="81:17">if <condition pos:start="75:20" pos:end="75:25">(<expr pos:start="75:21" pos:end="75:24"><operator pos:start="75:21" pos:end="75:21">!</operator><name pos:start="75:22" pos:end="75:24">arg</name></expr>)</condition> <block pos:start="75:27" pos:end="81:17">{<block_content pos:start="77:21" pos:end="79:28">

                    <expr_stmt pos:start="77:21" pos:end="77:92"><expr pos:start="77:21" pos:end="77:91"><call pos:start="77:21" pos:end="77:91"><name pos:start="77:21" pos:end="77:27">fprintf</name><argument_list pos:start="77:28" pos:end="77:91">(<argument pos:start="77:29" pos:end="77:34"><expr pos:start="77:29" pos:end="77:34"><name pos:start="77:29" pos:end="77:34">stderr</name></expr></argument>, <argument pos:start="77:37" pos:end="77:76"><expr pos:start="77:37" pos:end="77:76"><literal type="string" pos:start="77:37" pos:end="77:76">"%s: missing argument for option '%s'\n"</literal></expr></argument>, <argument pos:start="77:79" pos:end="77:85"><expr pos:start="77:79" pos:end="77:85"><name pos:start="77:79" pos:end="77:85"><name pos:start="77:79" pos:end="77:82">argv</name><index pos:start="77:83" pos:end="77:85">[<expr pos:start="77:84" pos:end="77:84"><literal type="number" pos:start="77:84" pos:end="77:84">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="77:88" pos:end="77:90"><expr pos:start="77:88" pos:end="77:90"><name pos:start="77:88" pos:end="77:90">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="79:21" pos:end="79:28"><expr pos:start="79:21" pos:end="79:27"><call pos:start="79:21" pos:end="79:27"><name pos:start="79:21" pos:end="79:24">exit</name><argument_list pos:start="79:25" pos:end="79:27">(<argument pos:start="79:26" pos:end="79:26"><expr pos:start="79:26" pos:end="79:26"><literal type="number" pos:start="79:26" pos:end="79:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="85:13" pos:end="119:13"><if pos:start="85:13" pos:end="93:13">if <condition pos:start="85:16" pos:end="85:39">(<expr pos:start="85:17" pos:end="85:38"><name pos:start="85:17" pos:end="85:25"><name pos:start="85:17" pos:end="85:18">po</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:25">flags</name></name> <operator pos:start="85:27" pos:end="85:27">&amp;</operator> <name pos:start="85:29" pos:end="85:38">OPT_STRING</name></expr>)</condition> <block pos:start="85:41" pos:end="93:13">{<block_content pos:start="87:17" pos:end="91:37">

                <decl_stmt pos:start="87:17" pos:end="87:26"><decl pos:start="87:17" pos:end="87:25"><type pos:start="87:17" pos:end="87:22"><name pos:start="87:17" pos:end="87:20">char</name> <modifier pos:start="87:22" pos:end="87:22">*</modifier></type><name pos:start="87:23" pos:end="87:25">str</name></decl>;</decl_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:37"><expr pos:start="89:17" pos:end="89:36"><name pos:start="89:17" pos:end="89:19">str</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <call pos:start="89:23" pos:end="89:36"><name pos:start="89:23" pos:end="89:31">av_strdup</name><argument_list pos:start="89:32" pos:end="89:36">(<argument pos:start="89:33" pos:end="89:35"><expr pos:start="89:33" pos:end="89:35"><name pos:start="89:33" pos:end="89:35">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:37"><expr pos:start="91:17" pos:end="91:36"><operator pos:start="91:17" pos:end="91:17">*</operator><name pos:start="91:18" pos:end="91:30"><name pos:start="91:18" pos:end="91:19">po</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:22">u</name><operator pos:start="91:23" pos:end="91:23">.</operator><name pos:start="91:24" pos:end="91:30">str_arg</name></name> <operator pos:start="91:32" pos:end="91:32">=</operator> <name pos:start="91:34" pos:end="91:36">str</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="93:15" pos:end="97:13">else if <condition pos:start="93:23" pos:end="93:44">(<expr pos:start="93:24" pos:end="93:43"><name pos:start="93:24" pos:end="93:32"><name pos:start="93:24" pos:end="93:25">po</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:32">flags</name></name> <operator pos:start="93:34" pos:end="93:34">&amp;</operator> <name pos:start="93:36" pos:end="93:43">OPT_BOOL</name></expr>)</condition> <block pos:start="93:46" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:42">

                <expr_stmt pos:start="95:17" pos:end="95:42"><expr pos:start="95:17" pos:end="95:41"><operator pos:start="95:17" pos:end="95:17">*</operator><name pos:start="95:18" pos:end="95:30"><name pos:start="95:18" pos:end="95:19">po</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:22">u</name><operator pos:start="95:23" pos:end="95:23">.</operator><name pos:start="95:24" pos:end="95:30">int_arg</name></name> <operator pos:start="95:32" pos:end="95:32">=</operator> <name pos:start="95:34" pos:end="95:41">bool_val</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="97:15" pos:end="101:13">else if <condition pos:start="97:23" pos:end="97:43">(<expr pos:start="97:24" pos:end="97:42"><name pos:start="97:24" pos:end="97:32"><name pos:start="97:24" pos:end="97:25">po</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:32">flags</name></name> <operator pos:start="97:34" pos:end="97:34">&amp;</operator> <name pos:start="97:36" pos:end="97:42">OPT_INT</name></expr>)</condition> <block pos:start="97:45" pos:end="101:13">{<block_content pos:start="99:17" pos:end="99:92">

                <expr_stmt pos:start="99:17" pos:end="99:92"><expr pos:start="99:17" pos:end="99:91"><operator pos:start="99:17" pos:end="99:17">*</operator><name pos:start="99:18" pos:end="99:30"><name pos:start="99:18" pos:end="99:19">po</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:22">u</name><operator pos:start="99:23" pos:end="99:23">.</operator><name pos:start="99:24" pos:end="99:30">int_arg</name></name> <operator pos:start="99:32" pos:end="99:32">=</operator> <call pos:start="99:34" pos:end="99:91"><name pos:start="99:34" pos:end="99:52">parse_number_or_die</name><argument_list pos:start="99:53" pos:end="99:91">(<argument pos:start="99:54" pos:end="99:56"><expr pos:start="99:54" pos:end="99:56"><name pos:start="99:54" pos:end="99:56">opt</name></expr></argument>, <argument pos:start="99:59" pos:end="99:61"><expr pos:start="99:59" pos:end="99:61"><name pos:start="99:59" pos:end="99:61">arg</name></expr></argument>, <argument pos:start="99:64" pos:end="99:72"><expr pos:start="99:64" pos:end="99:72"><name pos:start="99:64" pos:end="99:72">OPT_INT64</name></expr></argument>, <argument pos:start="99:75" pos:end="99:81"><expr pos:start="99:75" pos:end="99:81"><name pos:start="99:75" pos:end="99:81">INT_MIN</name></expr></argument>, <argument pos:start="99:84" pos:end="99:90"><expr pos:start="99:84" pos:end="99:90"><name pos:start="99:84" pos:end="99:90">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="101:15" pos:end="105:13">else if <condition pos:start="101:23" pos:end="101:45">(<expr pos:start="101:24" pos:end="101:44"><name pos:start="101:24" pos:end="101:32"><name pos:start="101:24" pos:end="101:25">po</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:32">flags</name></name> <operator pos:start="101:34" pos:end="101:34">&amp;</operator> <name pos:start="101:36" pos:end="101:44">OPT_INT64</name></expr>)</condition> <block pos:start="101:47" pos:end="105:13">{<block_content pos:start="103:17" pos:end="103:98">

                <expr_stmt pos:start="103:17" pos:end="103:98"><expr pos:start="103:17" pos:end="103:97"><operator pos:start="103:17" pos:end="103:17">*</operator><name pos:start="103:18" pos:end="103:32"><name pos:start="103:18" pos:end="103:19">po</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:22">u</name><operator pos:start="103:23" pos:end="103:23">.</operator><name pos:start="103:24" pos:end="103:32">int64_arg</name></name> <operator pos:start="103:34" pos:end="103:34">=</operator> <call pos:start="103:36" pos:end="103:97"><name pos:start="103:36" pos:end="103:54">parse_number_or_die</name><argument_list pos:start="103:55" pos:end="103:97">(<argument pos:start="103:56" pos:end="103:58"><expr pos:start="103:56" pos:end="103:58"><name pos:start="103:56" pos:end="103:58">opt</name></expr></argument>, <argument pos:start="103:61" pos:end="103:63"><expr pos:start="103:61" pos:end="103:63"><name pos:start="103:61" pos:end="103:63">arg</name></expr></argument>, <argument pos:start="103:66" pos:end="103:74"><expr pos:start="103:66" pos:end="103:74"><name pos:start="103:66" pos:end="103:74">OPT_INT64</name></expr></argument>, <argument pos:start="103:77" pos:end="103:85"><expr pos:start="103:77" pos:end="103:85"><name pos:start="103:77" pos:end="103:85">INT64_MIN</name></expr></argument>, <argument pos:start="103:88" pos:end="103:96"><expr pos:start="103:88" pos:end="103:96"><name pos:start="103:88" pos:end="103:96">INT64_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="105:15" pos:end="109:13">else if <condition pos:start="105:23" pos:end="105:45">(<expr pos:start="105:24" pos:end="105:44"><name pos:start="105:24" pos:end="105:32"><name pos:start="105:24" pos:end="105:25">po</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:32">flags</name></name> <operator pos:start="105:34" pos:end="105:34">&amp;</operator> <name pos:start="105:36" pos:end="105:44">OPT_FLOAT</name></expr>)</condition> <block pos:start="105:47" pos:end="109:13">{<block_content pos:start="107:17" pos:end="107:95">

                <expr_stmt pos:start="107:17" pos:end="107:95"><expr pos:start="107:17" pos:end="107:94"><operator pos:start="107:17" pos:end="107:17">*</operator><name pos:start="107:18" pos:end="107:32"><name pos:start="107:18" pos:end="107:19">po</name><operator pos:start="107:20" pos:end="107:21">-&gt;</operator><name pos:start="107:22" pos:end="107:22">u</name><operator pos:start="107:23" pos:end="107:23">.</operator><name pos:start="107:24" pos:end="107:32">float_arg</name></name> <operator pos:start="107:34" pos:end="107:34">=</operator> <call pos:start="107:36" pos:end="107:94"><name pos:start="107:36" pos:end="107:54">parse_number_or_die</name><argument_list pos:start="107:55" pos:end="107:94">(<argument pos:start="107:56" pos:end="107:58"><expr pos:start="107:56" pos:end="107:58"><name pos:start="107:56" pos:end="107:58">opt</name></expr></argument>, <argument pos:start="107:61" pos:end="107:63"><expr pos:start="107:61" pos:end="107:63"><name pos:start="107:61" pos:end="107:63">arg</name></expr></argument>, <argument pos:start="107:66" pos:end="107:74"><expr pos:start="107:66" pos:end="107:74"><name pos:start="107:66" pos:end="107:74">OPT_FLOAT</name></expr></argument>, <argument pos:start="107:77" pos:end="107:84"><expr pos:start="107:77" pos:end="107:84"><operator pos:start="107:77" pos:end="107:77">-</operator><literal type="number" pos:start="107:78" pos:end="107:80">1.0</literal><operator pos:start="107:81" pos:end="107:81">/</operator><literal type="number" pos:start="107:82" pos:end="107:84">0.0</literal></expr></argument>, <argument pos:start="107:87" pos:end="107:93"><expr pos:start="107:87" pos:end="107:93"><literal type="number" pos:start="107:87" pos:end="107:89">1.0</literal><operator pos:start="107:90" pos:end="107:90">/</operator><literal type="number" pos:start="107:91" pos:end="107:93">0.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="109:15" pos:end="115:13">else if <condition pos:start="109:23" pos:end="109:45">(<expr pos:start="109:24" pos:end="109:44"><name pos:start="109:24" pos:end="109:32"><name pos:start="109:24" pos:end="109:25">po</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:32">flags</name></name> <operator pos:start="109:34" pos:end="109:34">&amp;</operator> <name pos:start="109:36" pos:end="109:44">OPT_FUNC2</name></expr>)</condition> <block pos:start="109:47" pos:end="115:13">{<block_content pos:start="111:17" pos:end="113:37">

                <if_stmt pos:start="111:17" pos:end="113:37"><if pos:start="111:17" pos:end="113:37">if<condition pos:start="111:19" pos:end="111:47">(<expr pos:start="111:20" pos:end="111:46"><call pos:start="111:20" pos:end="111:44"><name pos:start="111:20" pos:end="111:34"><name pos:start="111:20" pos:end="111:21">po</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:24">u</name><operator pos:start="111:25" pos:end="111:25">.</operator><name pos:start="111:26" pos:end="111:34">func2_arg</name></name><argument_list pos:start="111:35" pos:end="111:44">(<argument pos:start="111:36" pos:end="111:38"><expr pos:start="111:36" pos:end="111:38"><name pos:start="111:36" pos:end="111:38">opt</name></expr></argument>, <argument pos:start="111:41" pos:end="111:43"><expr pos:start="111:41" pos:end="111:43"><name pos:start="111:41" pos:end="111:43">arg</name></expr></argument>)</argument_list></call><operator pos:start="111:45" pos:end="111:45">&lt;</operator><literal type="number" pos:start="111:46" pos:end="111:46">0</literal></expr>)</condition><block type="pseudo" pos:start="113:21" pos:end="113:37"><block_content pos:start="113:21" pos:end="113:37">

                    <goto pos:start="113:21" pos:end="113:37">goto <name pos:start="113:26" pos:end="113:36">unknown_opt</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="115:15" pos:end="119:13">else <block pos:start="115:20" pos:end="119:13">{<block_content pos:start="117:17" pos:end="117:36">

                <expr_stmt pos:start="117:17" pos:end="117:36"><expr pos:start="117:17" pos:end="117:35"><call pos:start="117:17" pos:end="117:35"><name pos:start="117:17" pos:end="117:30"><name pos:start="117:17" pos:end="117:18">po</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:21">u</name><operator pos:start="117:22" pos:end="117:22">.</operator><name pos:start="117:23" pos:end="117:30">func_arg</name></name><argument_list pos:start="117:31" pos:end="117:35">(<argument pos:start="117:32" pos:end="117:34"><expr pos:start="117:32" pos:end="117:34"><name pos:start="117:32" pos:end="117:34">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="121:13" pos:end="123:24"><if pos:start="121:13" pos:end="123:24">if<condition pos:start="121:15" pos:end="121:36">(<expr pos:start="121:16" pos:end="121:35"><name pos:start="121:16" pos:end="121:24"><name pos:start="121:16" pos:end="121:17">po</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:24">flags</name></name> <operator pos:start="121:26" pos:end="121:26">&amp;</operator> <name pos:start="121:28" pos:end="121:35">OPT_EXIT</name></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:24"><block_content pos:start="123:17" pos:end="123:24">

                <expr_stmt pos:start="123:17" pos:end="123:24"><expr pos:start="123:17" pos:end="123:23"><call pos:start="123:17" pos:end="123:23"><name pos:start="123:17" pos:end="123:20">exit</name><argument_list pos:start="123:21" pos:end="123:23">(<argument pos:start="123:22" pos:end="123:22"><expr pos:start="123:22" pos:end="123:22"><literal type="number" pos:start="123:22" pos:end="123:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="125:11" pos:end="131:9">else <block pos:start="125:16" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:40">

            <if_stmt pos:start="127:13" pos:end="129:40"><if pos:start="127:13" pos:end="129:40">if <condition pos:start="127:16" pos:end="127:35">(<expr pos:start="127:17" pos:end="127:34"><name pos:start="127:17" pos:end="127:34">parse_arg_function</name></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:40"><block_content pos:start="129:17" pos:end="129:40">

                <expr_stmt pos:start="129:17" pos:end="129:40"><expr pos:start="129:17" pos:end="129:39"><call pos:start="129:17" pos:end="129:39"><name pos:start="129:17" pos:end="129:34">parse_arg_function</name><argument_list pos:start="129:35" pos:end="129:39">(<argument pos:start="129:36" pos:end="129:38"><expr pos:start="129:36" pos:end="129:38"><name pos:start="129:36" pos:end="129:38">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
