<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16572.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:30">encode_init</name><parameter_list pos:start="1:31" pos:end="1:59">(<parameter pos:start="1:32" pos:end="1:58"><decl pos:start="1:32" pos:end="1:58"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name><modifier pos:start="1:46" pos:end="1:46">*</modifier></type> <name pos:start="1:48" pos:end="1:58">avc_context</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="225:1">{<block_content pos:start="5:5" pos:end="223:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">th_info</name></type> <name pos:start="5:13" pos:end="5:18">t_info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">th_comment</name></type> <name pos:start="7:16" pos:end="7:24">t_comment</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">ogg_packet</name></type> <name pos:start="9:16" pos:end="9:23">o_packet</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:23">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:45"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">TheoraContext</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:20">h</name> <init pos:start="13:22" pos:end="13:45">= <expr pos:start="13:24" pos:end="13:45"><name pos:start="13:24" pos:end="13:45"><name pos:start="13:24" pos:end="13:34">avc_context</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:46"><decl pos:start="15:5" pos:end="15:45"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:21">gop_size</name> <init pos:start="15:23" pos:end="15:45">= <expr pos:start="15:25" pos:end="15:45"><name pos:start="15:25" pos:end="15:45"><name pos:start="15:25" pos:end="15:35">avc_context</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:45">gop_size</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:39">/* Set up the theora_info struct */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><call pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:16">th_info_init</name><argument_list pos:start="21:17" pos:end="21:25">(<argument pos:start="21:18" pos:end="21:24"><expr pos:start="21:18" pos:end="21:24"><operator pos:start="21:18" pos:end="21:18">&amp;</operator><name pos:start="21:19" pos:end="21:24">t_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:59"><expr pos:start="23:5" pos:end="23:58"><name pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:10">t_info</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:22">frame_width</name></name>  <operator pos:start="23:25" pos:end="23:25">=</operator> <call pos:start="23:27" pos:end="23:58"><name pos:start="23:27" pos:end="23:33">FFALIGN</name><argument_list pos:start="23:34" pos:end="23:58">(<argument pos:start="23:35" pos:end="23:52"><expr pos:start="23:35" pos:end="23:52"><name pos:start="23:35" pos:end="23:52"><name pos:start="23:35" pos:end="23:45">avc_context</name><operator pos:start="23:46" pos:end="23:47">-&gt;</operator><name pos:start="23:48" pos:end="23:52">width</name></name></expr></argument>,  <argument pos:start="23:56" pos:end="23:57"><expr pos:start="23:56" pos:end="23:57"><literal type="number" pos:start="23:56" pos:end="23:57">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:59"><expr pos:start="25:5" pos:end="25:58"><name pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:10">t_info</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:23">frame_height</name></name> <operator pos:start="25:25" pos:end="25:25">=</operator> <call pos:start="25:27" pos:end="25:58"><name pos:start="25:27" pos:end="25:33">FFALIGN</name><argument_list pos:start="25:34" pos:end="25:58">(<argument pos:start="25:35" pos:end="25:53"><expr pos:start="25:35" pos:end="25:53"><name pos:start="25:35" pos:end="25:53"><name pos:start="25:35" pos:end="25:45">avc_context</name><operator pos:start="25:46" pos:end="25:47">-&gt;</operator><name pos:start="25:48" pos:end="25:53">height</name></name></expr></argument>, <argument pos:start="25:56" pos:end="25:57"><expr pos:start="25:56" pos:end="25:57"><literal type="number" pos:start="25:56" pos:end="25:57">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:10">t_info</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:20">pic_width</name></name>    <operator pos:start="27:25" pos:end="27:25">=</operator> <name pos:start="27:27" pos:end="27:44"><name pos:start="27:27" pos:end="27:37">avc_context</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:44">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:46"><expr pos:start="29:5" pos:end="29:45"><name pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:10">t_info</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:21">pic_height</name></name>   <operator pos:start="29:25" pos:end="29:25">=</operator> <name pos:start="29:27" pos:end="29:45"><name pos:start="29:27" pos:end="29:37">avc_context</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:45">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:28"><expr pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:10">t_info</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:16">pic_x</name></name>        <operator pos:start="31:25" pos:end="31:25">=</operator> <literal type="number" pos:start="31:27" pos:end="31:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:10">t_info</name><operator pos:start="33:11" pos:end="33:11">.</operator><name pos:start="33:12" pos:end="33:16">pic_y</name></name>        <operator pos:start="33:25" pos:end="33:25">=</operator> <literal type="number" pos:start="33:27" pos:end="33:27">0</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="35:5" pos:end="37:75">/* Swap numerator and denominator as time_base in AVCodecContext gives the

     * time period between frames, but theora_info needs the framerate.  */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:56"><expr pos:start="39:5" pos:end="39:55"><name pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:10">t_info</name><operator pos:start="39:11" pos:end="39:11">.</operator><name pos:start="39:12" pos:end="39:24">fps_numerator</name></name>   <operator pos:start="39:28" pos:end="39:28">=</operator> <name pos:start="39:30" pos:end="39:55"><name pos:start="39:30" pos:end="39:40">avc_context</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:51">time_base</name><operator pos:start="39:52" pos:end="39:52">.</operator><name pos:start="39:53" pos:end="39:55">den</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:56"><expr pos:start="41:5" pos:end="41:55"><name pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:10">t_info</name><operator pos:start="41:11" pos:end="41:11">.</operator><name pos:start="41:12" pos:end="41:26">fps_denominator</name></name> <operator pos:start="41:28" pos:end="41:28">=</operator> <name pos:start="41:30" pos:end="41:55"><name pos:start="41:30" pos:end="41:40">avc_context</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:51">time_base</name><operator pos:start="41:52" pos:end="41:52">.</operator><name pos:start="41:53" pos:end="41:55">num</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="55:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:45">(<expr pos:start="43:9" pos:end="43:44"><name pos:start="43:9" pos:end="43:44"><name pos:start="43:9" pos:end="43:19">avc_context</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:40">sample_aspect_ratio</name><operator pos:start="43:41" pos:end="43:41">.</operator><name pos:start="43:42" pos:end="43:44">num</name></name></expr>)</condition> <block pos:start="43:47" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:73">

        <expr_stmt pos:start="45:9" pos:end="45:73"><expr pos:start="45:9" pos:end="45:72"><name pos:start="45:9" pos:end="45:31"><name pos:start="45:9" pos:end="45:14">t_info</name><operator pos:start="45:15" pos:end="45:15">.</operator><name pos:start="45:16" pos:end="45:31">aspect_numerator</name></name>   <operator pos:start="45:35" pos:end="45:35">=</operator> <name pos:start="45:37" pos:end="45:72"><name pos:start="45:37" pos:end="45:47">avc_context</name><operator pos:start="45:48" pos:end="45:49">-&gt;</operator><name pos:start="45:50" pos:end="45:68">sample_aspect_ratio</name><operator pos:start="45:69" pos:end="45:69">.</operator><name pos:start="45:70" pos:end="45:72">num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:73"><expr pos:start="47:9" pos:end="47:72"><name pos:start="47:9" pos:end="47:33"><name pos:start="47:9" pos:end="47:14">t_info</name><operator pos:start="47:15" pos:end="47:15">.</operator><name pos:start="47:16" pos:end="47:33">aspect_denominator</name></name> <operator pos:start="47:35" pos:end="47:35">=</operator> <name pos:start="47:37" pos:end="47:72"><name pos:start="47:37" pos:end="47:47">avc_context</name><operator pos:start="47:48" pos:end="47:49">-&gt;</operator><name pos:start="47:50" pos:end="47:68">sample_aspect_ratio</name><operator pos:start="47:69" pos:end="47:69">.</operator><name pos:start="47:70" pos:end="47:72">den</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="55:5">else <block pos:start="49:12" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:38">

        <expr_stmt pos:start="51:9" pos:end="51:38"><expr pos:start="51:9" pos:end="51:37"><name pos:start="51:9" pos:end="51:31"><name pos:start="51:9" pos:end="51:14">t_info</name><operator pos:start="51:15" pos:end="51:15">.</operator><name pos:start="51:16" pos:end="51:31">aspect_numerator</name></name>   <operator pos:start="51:35" pos:end="51:35">=</operator> <literal type="number" pos:start="51:37" pos:end="51:37">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:38"><expr pos:start="53:9" pos:end="53:37"><name pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:14">t_info</name><operator pos:start="53:15" pos:end="53:15">.</operator><name pos:start="53:16" pos:end="53:33">aspect_denominator</name></name> <operator pos:start="53:35" pos:end="53:35">=</operator> <literal type="number" pos:start="53:37" pos:end="53:37">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="59:5" pos:end="69:46"><if pos:start="59:5" pos:end="61:47">if <condition pos:start="59:8" pos:end="59:57">(<expr pos:start="59:9" pos:end="59:56"><name pos:start="59:9" pos:end="59:36"><name pos:start="59:9" pos:end="59:19">avc_context</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:36">color_primaries</name></name> <operator pos:start="59:38" pos:end="59:39">==</operator> <name pos:start="59:41" pos:end="59:56">AVCOL_PRI_BT470M</name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:47"><block_content pos:start="61:9" pos:end="61:47">

        <expr_stmt pos:start="61:9" pos:end="61:47"><expr pos:start="61:9" pos:end="61:46"><name pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:14">t_info</name><operator pos:start="61:15" pos:end="61:15">.</operator><name pos:start="61:16" pos:end="61:25">colorspace</name></name> <operator pos:start="61:27" pos:end="61:27">=</operator> <name pos:start="61:29" pos:end="61:46">TH_CS_ITU_REC_470M</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="63:5" pos:end="65:48">else if <condition pos:start="63:13" pos:end="63:63">(<expr pos:start="63:14" pos:end="63:62"><name pos:start="63:14" pos:end="63:41"><name pos:start="63:14" pos:end="63:24">avc_context</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:41">color_primaries</name></name> <operator pos:start="63:43" pos:end="63:44">==</operator> <name pos:start="63:46" pos:end="63:62">AVCOL_PRI_BT470BG</name></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:48"><block_content pos:start="65:9" pos:end="65:48">

        <expr_stmt pos:start="65:9" pos:end="65:48"><expr pos:start="65:9" pos:end="65:47"><name pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:14">t_info</name><operator pos:start="65:15" pos:end="65:15">.</operator><name pos:start="65:16" pos:end="65:25">colorspace</name></name> <operator pos:start="65:27" pos:end="65:27">=</operator> <name pos:start="65:29" pos:end="65:47">TH_CS_ITU_REC_470BG</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="67:5" pos:end="69:46">else<block type="pseudo" pos:start="69:9" pos:end="69:46"><block_content pos:start="69:9" pos:end="69:46">

        <expr_stmt pos:start="69:9" pos:end="69:46"><expr pos:start="69:9" pos:end="69:45"><name pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:14">t_info</name><operator pos:start="69:15" pos:end="69:15">.</operator><name pos:start="69:16" pos:end="69:25">colorspace</name></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <name pos:start="69:29" pos:end="69:45">TH_CS_UNSPECIFIED</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="73:5" pos:end="91:5"><if pos:start="73:5" pos:end="75:37">if <condition pos:start="73:8" pos:end="73:51">(<expr pos:start="73:9" pos:end="73:50"><name pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:19">avc_context</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:28">pix_fmt</name></name> <operator pos:start="73:30" pos:end="73:31">==</operator> <name pos:start="73:33" pos:end="73:50">AV_PIX_FMT_YUV420P</name></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:37"><block_content pos:start="75:9" pos:end="75:37">

        <expr_stmt pos:start="75:9" pos:end="75:37"><expr pos:start="75:9" pos:end="75:36"><name pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:14">t_info</name><operator pos:start="75:15" pos:end="75:15">.</operator><name pos:start="75:16" pos:end="75:24">pixel_fmt</name></name> <operator pos:start="75:26" pos:end="75:26">=</operator> <name pos:start="75:28" pos:end="75:36">TH_PF_420</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="77:5" pos:end="79:37">else if <condition pos:start="77:13" pos:end="77:56">(<expr pos:start="77:14" pos:end="77:55"><name pos:start="77:14" pos:end="77:33"><name pos:start="77:14" pos:end="77:24">avc_context</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:33">pix_fmt</name></name> <operator pos:start="77:35" pos:end="77:36">==</operator> <name pos:start="77:38" pos:end="77:55">AV_PIX_FMT_YUV422P</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:37"><block_content pos:start="79:9" pos:end="79:37">

        <expr_stmt pos:start="79:9" pos:end="79:37"><expr pos:start="79:9" pos:end="79:36"><name pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:14">t_info</name><operator pos:start="79:15" pos:end="79:15">.</operator><name pos:start="79:16" pos:end="79:24">pixel_fmt</name></name> <operator pos:start="79:26" pos:end="79:26">=</operator> <name pos:start="79:28" pos:end="79:36">TH_PF_422</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="81:5" pos:end="83:37">else if <condition pos:start="81:13" pos:end="81:56">(<expr pos:start="81:14" pos:end="81:55"><name pos:start="81:14" pos:end="81:33"><name pos:start="81:14" pos:end="81:24">avc_context</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:33">pix_fmt</name></name> <operator pos:start="81:35" pos:end="81:36">==</operator> <name pos:start="81:38" pos:end="81:55">AV_PIX_FMT_YUV444P</name></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:37"><block_content pos:start="83:9" pos:end="83:37">

        <expr_stmt pos:start="83:9" pos:end="83:37"><expr pos:start="83:9" pos:end="83:36"><name pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:14">t_info</name><operator pos:start="83:15" pos:end="83:15">.</operator><name pos:start="83:16" pos:end="83:24">pixel_fmt</name></name> <operator pos:start="83:26" pos:end="83:26">=</operator> <name pos:start="83:28" pos:end="83:36">TH_PF_444</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="85:5" pos:end="91:5">else <block pos:start="85:10" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:18">

        <expr_stmt pos:start="87:9" pos:end="87:67"><expr pos:start="87:9" pos:end="87:66"><call pos:start="87:9" pos:end="87:66"><name pos:start="87:9" pos:end="87:14">av_log</name><argument_list pos:start="87:15" pos:end="87:66">(<argument pos:start="87:16" pos:end="87:26"><expr pos:start="87:16" pos:end="87:26"><name pos:start="87:16" pos:end="87:26">avc_context</name></expr></argument>, <argument pos:start="87:29" pos:end="87:40"><expr pos:start="87:29" pos:end="87:40"><name pos:start="87:29" pos:end="87:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:43" pos:end="87:65"><expr pos:start="87:43" pos:end="87:65"><literal type="string" pos:start="87:43" pos:end="87:65">"Unsupported pix_fmt\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="89:9" pos:end="89:18">return <expr pos:start="89:16" pos:end="89:17"><operator pos:start="89:16" pos:end="89:16">-</operator><literal type="number" pos:start="89:17" pos:end="89:17">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="93:5" pos:end="95:67"><expr pos:start="93:5" pos:end="95:66"><call pos:start="93:5" pos:end="95:66"><name pos:start="93:5" pos:end="93:36">av_pix_fmt_get_chroma_sub_sample</name><argument_list pos:start="93:37" pos:end="95:66">(<argument pos:start="93:38" pos:end="93:57"><expr pos:start="93:38" pos:end="93:57"><name pos:start="93:38" pos:end="93:57"><name pos:start="93:38" pos:end="93:48">avc_context</name><operator pos:start="93:49" pos:end="93:50">-&gt;</operator><name pos:start="93:51" pos:end="93:57">pix_fmt</name></name></expr></argument>,

                                     <argument pos:start="95:38" pos:end="95:50"><expr pos:start="95:38" pos:end="95:50"><operator pos:start="95:38" pos:end="95:38">&amp;</operator><name pos:start="95:39" pos:end="95:50"><name pos:start="95:39" pos:end="95:39">h</name><operator pos:start="95:40" pos:end="95:41">-&gt;</operator><name pos:start="95:42" pos:end="95:50">uv_hshift</name></name></expr></argument>, <argument pos:start="95:53" pos:end="95:65"><expr pos:start="95:53" pos:end="95:65"><operator pos:start="95:53" pos:end="95:53">&amp;</operator><name pos:start="95:54" pos:end="95:65"><name pos:start="95:54" pos:end="95:54">h</name><operator pos:start="95:55" pos:end="95:56">-&gt;</operator><name pos:start="95:57" pos:end="95:65">uv_vshift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="99:5" pos:end="121:5"><if pos:start="99:5" pos:end="115:5">if <condition pos:start="99:8" pos:end="99:47">(<expr pos:start="99:9" pos:end="99:46"><name pos:start="99:9" pos:end="99:26"><name pos:start="99:9" pos:end="99:19">avc_context</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:26">flags</name></name> <operator pos:start="99:28" pos:end="99:28">&amp;</operator> <name pos:start="99:30" pos:end="99:46">CODEC_FLAG_QSCALE</name></expr>)</condition> <block pos:start="99:49" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:34">

        <comment type="block" pos:start="101:9" pos:end="109:11">/* to be constant with the libvorbis implementation, clip global_quality to 0 - 10

           Theora accepts a quality parameter p, which is:

                * 0 &lt;= p &lt;=63

                * an int value

         */</comment>

        <expr_stmt pos:start="111:9" pos:end="111:105"><expr pos:start="111:9" pos:end="111:104"><name pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:14">t_info</name><operator pos:start="111:15" pos:end="111:15">.</operator><name pos:start="111:16" pos:end="111:22">quality</name></name>        <operator pos:start="111:31" pos:end="111:31">=</operator> <call pos:start="111:33" pos:end="111:98"><name pos:start="111:33" pos:end="111:40">av_clipf</name><argument_list pos:start="111:41" pos:end="111:98">(<argument pos:start="111:42" pos:end="111:90"><expr pos:start="111:42" pos:end="111:90"><name pos:start="111:42" pos:end="111:68"><name pos:start="111:42" pos:end="111:52">avc_context</name><operator pos:start="111:53" pos:end="111:54">-&gt;</operator><name pos:start="111:55" pos:end="111:68">global_quality</name></name> <operator pos:start="111:70" pos:end="111:70">/</operator> <operator pos:start="111:72" pos:end="111:72">(</operator><name pos:start="111:73" pos:end="111:77">float</name><operator pos:start="111:78" pos:end="111:78">)</operator><name pos:start="111:79" pos:end="111:90">FF_QP2LAMBDA</name></expr></argument>, <argument pos:start="111:93" pos:end="111:93"><expr pos:start="111:93" pos:end="111:93"><literal type="number" pos:start="111:93" pos:end="111:93">0</literal></expr></argument>, <argument pos:start="111:96" pos:end="111:97"><expr pos:start="111:96" pos:end="111:97"><literal type="number" pos:start="111:96" pos:end="111:97">10</literal></expr></argument>)</argument_list></call> <operator pos:start="111:100" pos:end="111:100">*</operator> <literal type="number" pos:start="111:102" pos:end="111:104">6.3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:34"><expr pos:start="113:9" pos:end="113:33"><name pos:start="113:9" pos:end="113:29"><name pos:start="113:9" pos:end="113:14">t_info</name><operator pos:start="113:15" pos:end="113:15">.</operator><name pos:start="113:16" pos:end="113:29">target_bitrate</name></name> <operator pos:start="113:31" pos:end="113:31">=</operator> <literal type="number" pos:start="113:33" pos:end="113:33">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="115:7" pos:end="121:5">else <block pos:start="115:12" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:34">

        <expr_stmt pos:start="117:9" pos:end="117:54"><expr pos:start="117:9" pos:end="117:53"><name pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:14">t_info</name><operator pos:start="117:15" pos:end="117:15">.</operator><name pos:start="117:16" pos:end="117:29">target_bitrate</name></name> <operator pos:start="117:31" pos:end="117:31">=</operator> <name pos:start="117:33" pos:end="117:53"><name pos:start="117:33" pos:end="117:43">avc_context</name><operator pos:start="117:44" pos:end="117:45">-&gt;</operator><name pos:start="117:46" pos:end="117:53">bit_rate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:34"><expr pos:start="119:9" pos:end="119:33"><name pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:14">t_info</name><operator pos:start="119:15" pos:end="119:15">.</operator><name pos:start="119:16" pos:end="119:22">quality</name></name>        <operator pos:start="119:31" pos:end="119:31">=</operator> <literal type="number" pos:start="119:33" pos:end="119:33">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="125:5" pos:end="125:34">/* Now initialise libtheora */</comment>

    <expr_stmt pos:start="127:5" pos:end="127:42"><expr pos:start="127:5" pos:end="127:41"><name pos:start="127:5" pos:end="127:14"><name pos:start="127:5" pos:end="127:5">h</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:14">t_state</name></name> <operator pos:start="127:16" pos:end="127:16">=</operator> <call pos:start="127:18" pos:end="127:41"><name pos:start="127:18" pos:end="127:32">th_encode_alloc</name><argument_list pos:start="127:33" pos:end="127:41">(<argument pos:start="127:34" pos:end="127:40"><expr pos:start="127:34" pos:end="127:40"><operator pos:start="127:34" pos:end="127:34">&amp;</operator><name pos:start="127:35" pos:end="127:40">t_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="135:5"><if pos:start="129:5" pos:end="135:5">if <condition pos:start="129:8" pos:end="129:20">(<expr pos:start="129:9" pos:end="129:19"><operator pos:start="129:9" pos:end="129:9">!</operator><name pos:start="129:10" pos:end="129:19"><name pos:start="129:10" pos:end="129:10">h</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:19">t_state</name></name></expr>)</condition> <block pos:start="129:22" pos:end="135:5">{<block_content pos:start="131:9" pos:end="133:18">

        <expr_stmt pos:start="131:9" pos:end="131:73"><expr pos:start="131:9" pos:end="131:72"><call pos:start="131:9" pos:end="131:72"><name pos:start="131:9" pos:end="131:14">av_log</name><argument_list pos:start="131:15" pos:end="131:72">(<argument pos:start="131:16" pos:end="131:26"><expr pos:start="131:16" pos:end="131:26"><name pos:start="131:16" pos:end="131:26">avc_context</name></expr></argument>, <argument pos:start="131:29" pos:end="131:40"><expr pos:start="131:29" pos:end="131:40"><name pos:start="131:29" pos:end="131:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="131:43" pos:end="131:71"><expr pos:start="131:43" pos:end="131:71"><literal type="string" pos:start="131:43" pos:end="131:71">"theora_encode_init failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="133:9" pos:end="133:18">return <expr pos:start="133:16" pos:end="133:17"><operator pos:start="133:16" pos:end="133:16">-</operator><literal type="number" pos:start="133:17" pos:end="133:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:64"><expr pos:start="139:5" pos:end="139:63"><name pos:start="139:5" pos:end="139:20"><name pos:start="139:5" pos:end="139:5">h</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:20">keyframe_mask</name></name> <operator pos:start="139:22" pos:end="139:22">=</operator> <operator pos:start="139:24" pos:end="139:24">(</operator><literal type="number" pos:start="139:25" pos:end="139:25">1</literal> <operator pos:start="139:27" pos:end="139:28">&lt;&lt;</operator> <name pos:start="139:30" pos:end="139:58"><name pos:start="139:30" pos:end="139:35">t_info</name><operator pos:start="139:36" pos:end="139:36">.</operator><name pos:start="139:37" pos:end="139:58">keyframe_granule_shift</name></name><operator pos:start="139:59" pos:end="139:59">)</operator> <operator pos:start="139:61" pos:end="139:61">-</operator> <literal type="number" pos:start="139:63" pos:end="139:63">1</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="141:5" pos:end="141:37">/* Clear up theora_info struct */</comment>

    <expr_stmt pos:start="143:5" pos:end="143:27"><expr pos:start="143:5" pos:end="143:26"><call pos:start="143:5" pos:end="143:26"><name pos:start="143:5" pos:end="143:17">th_info_clear</name><argument_list pos:start="143:18" pos:end="143:26">(<argument pos:start="143:19" pos:end="143:25"><expr pos:start="143:19" pos:end="143:25"><operator pos:start="143:19" pos:end="143:19">&amp;</operator><name pos:start="143:20" pos:end="143:25">t_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="147:5" pos:end="155:5"><if pos:start="147:5" pos:end="155:5">if <condition pos:start="147:8" pos:end="149:51">(<expr pos:start="147:9" pos:end="149:50"><call pos:start="147:9" pos:end="149:50"><name pos:start="147:9" pos:end="147:21">th_encode_ctl</name><argument_list pos:start="147:22" pos:end="149:50">(<argument pos:start="147:23" pos:end="147:32"><expr pos:start="147:23" pos:end="147:32"><name pos:start="147:23" pos:end="147:32"><name pos:start="147:23" pos:end="147:23">h</name><operator pos:start="147:24" pos:end="147:25">-&gt;</operator><name pos:start="147:26" pos:end="147:32">t_state</name></name></expr></argument>, <argument pos:start="147:35" pos:end="147:72"><expr pos:start="147:35" pos:end="147:72"><name pos:start="147:35" pos:end="147:72">TH_ENCCTL_SET_KEYFRAME_FREQUENCY_FORCE</name></expr></argument>,

                      <argument pos:start="149:23" pos:end="149:31"><expr pos:start="149:23" pos:end="149:31"><operator pos:start="149:23" pos:end="149:23">&amp;</operator><name pos:start="149:24" pos:end="149:31">gop_size</name></expr></argument>, <argument pos:start="149:34" pos:end="149:49"><expr pos:start="149:34" pos:end="149:49"><sizeof pos:start="149:34" pos:end="149:49">sizeof<argument_list pos:start="149:40" pos:end="149:49">(<argument pos:start="149:41" pos:end="149:48"><expr pos:start="149:41" pos:end="149:48"><name pos:start="149:41" pos:end="149:48">gop_size</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="149:53" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:18">

        <expr_stmt pos:start="151:9" pos:end="151:70"><expr pos:start="151:9" pos:end="151:69"><call pos:start="151:9" pos:end="151:69"><name pos:start="151:9" pos:end="151:14">av_log</name><argument_list pos:start="151:15" pos:end="151:69">(<argument pos:start="151:16" pos:end="151:26"><expr pos:start="151:16" pos:end="151:26"><name pos:start="151:16" pos:end="151:26">avc_context</name></expr></argument>, <argument pos:start="151:29" pos:end="151:40"><expr pos:start="151:29" pos:end="151:40"><name pos:start="151:29" pos:end="151:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="151:43" pos:end="151:68"><expr pos:start="151:43" pos:end="151:68"><literal type="string" pos:start="151:43" pos:end="151:68">"Error setting GOP size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="153:9" pos:end="153:18">return <expr pos:start="153:16" pos:end="153:17"><operator pos:start="153:16" pos:end="153:16">-</operator><literal type="number" pos:start="153:17" pos:end="153:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="159:5" pos:end="159:75">// need to enable 2 pass (via TH_ENCCTL_2PASS_) before encoding headers</comment>

    <if_stmt pos:start="161:5" pos:end="173:5"><if pos:start="161:5" pos:end="167:5">if <condition pos:start="161:8" pos:end="161:46">(<expr pos:start="161:9" pos:end="161:45"><name pos:start="161:9" pos:end="161:26"><name pos:start="161:9" pos:end="161:19">avc_context</name><operator pos:start="161:20" pos:end="161:21">-&gt;</operator><name pos:start="161:22" pos:end="161:26">flags</name></name> <operator pos:start="161:28" pos:end="161:28">&amp;</operator> <name pos:start="161:30" pos:end="161:45">CODEC_FLAG_PASS1</name></expr>)</condition> <block pos:start="161:48" pos:end="167:5">{<block_content pos:start="163:9" pos:end="165:22">

        <if_stmt pos:start="163:9" pos:end="165:22"><if pos:start="163:9" pos:end="165:22">if <condition pos:start="163:12" pos:end="163:38">(<expr pos:start="163:13" pos:end="163:37"><call pos:start="163:13" pos:end="163:37"><name pos:start="163:13" pos:end="163:21">get_stats</name><argument_list pos:start="163:22" pos:end="163:37">(<argument pos:start="163:23" pos:end="163:33"><expr pos:start="163:23" pos:end="163:33"><name pos:start="163:23" pos:end="163:33">avc_context</name></expr></argument>, <argument pos:start="163:36" pos:end="163:36"><expr pos:start="163:36" pos:end="163:36"><literal type="number" pos:start="163:36" pos:end="163:36">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:22"><block_content pos:start="165:13" pos:end="165:22">

            <return pos:start="165:13" pos:end="165:22">return <expr pos:start="165:20" pos:end="165:21"><operator pos:start="165:20" pos:end="165:20">-</operator><literal type="number" pos:start="165:21" pos:end="165:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="167:7" pos:end="173:5">else if <condition pos:start="167:15" pos:end="167:53">(<expr pos:start="167:16" pos:end="167:52"><name pos:start="167:16" pos:end="167:33"><name pos:start="167:16" pos:end="167:26">avc_context</name><operator pos:start="167:27" pos:end="167:28">-&gt;</operator><name pos:start="167:29" pos:end="167:33">flags</name></name> <operator pos:start="167:35" pos:end="167:35">&amp;</operator> <name pos:start="167:37" pos:end="167:52">CODEC_FLAG_PASS2</name></expr>)</condition> <block pos:start="167:55" pos:end="173:5">{<block_content pos:start="169:9" pos:end="171:22">

        <if_stmt pos:start="169:9" pos:end="171:22"><if pos:start="169:9" pos:end="171:22">if <condition pos:start="169:12" pos:end="169:38">(<expr pos:start="169:13" pos:end="169:37"><call pos:start="169:13" pos:end="169:37"><name pos:start="169:13" pos:end="169:24">submit_stats</name><argument_list pos:start="169:25" pos:end="169:37">(<argument pos:start="169:26" pos:end="169:36"><expr pos:start="169:26" pos:end="169:36"><name pos:start="169:26" pos:end="169:36">avc_context</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="171:13" pos:end="171:22"><block_content pos:start="171:13" pos:end="171:22">

            <return pos:start="171:13" pos:end="171:22">return <expr pos:start="171:20" pos:end="171:21"><operator pos:start="171:20" pos:end="171:20">-</operator><literal type="number" pos:start="171:21" pos:end="171:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="177:5" pos:end="189:6">/*

        Output first header packet consisting of theora

        header, comment, and tables.



        Each one is prefixed with a 16bit size, then they

        are concatenated together into libavcodec's extradata.

    */</comment>

    <expr_stmt pos:start="191:5" pos:end="191:15"><expr pos:start="191:5" pos:end="191:14"><name pos:start="191:5" pos:end="191:10">offset</name> <operator pos:start="191:12" pos:end="191:12">=</operator> <literal type="number" pos:start="191:14" pos:end="191:14">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="195:5" pos:end="195:17">/* Headers */</comment>

    <expr_stmt pos:start="197:5" pos:end="197:32"><expr pos:start="197:5" pos:end="197:31"><call pos:start="197:5" pos:end="197:31"><name pos:start="197:5" pos:end="197:19">th_comment_init</name><argument_list pos:start="197:20" pos:end="197:31">(<argument pos:start="197:21" pos:end="197:30"><expr pos:start="197:21" pos:end="197:30"><operator pos:start="197:21" pos:end="197:21">&amp;</operator><name pos:start="197:22" pos:end="197:30">t_comment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="201:5" pos:end="205:22">while <condition pos:start="201:11" pos:end="201:68">(<expr pos:start="201:12" pos:end="201:67"><call pos:start="201:12" pos:end="201:67"><name pos:start="201:12" pos:end="201:32">th_encode_flushheader</name><argument_list pos:start="201:33" pos:end="201:67">(<argument pos:start="201:34" pos:end="201:43"><expr pos:start="201:34" pos:end="201:43"><name pos:start="201:34" pos:end="201:43"><name pos:start="201:34" pos:end="201:34">h</name><operator pos:start="201:35" pos:end="201:36">-&gt;</operator><name pos:start="201:37" pos:end="201:43">t_state</name></name></expr></argument>, <argument pos:start="201:46" pos:end="201:55"><expr pos:start="201:46" pos:end="201:55"><operator pos:start="201:46" pos:end="201:46">&amp;</operator><name pos:start="201:47" pos:end="201:55">t_comment</name></expr></argument>, <argument pos:start="201:58" pos:end="201:66"><expr pos:start="201:58" pos:end="201:66"><operator pos:start="201:58" pos:end="201:58">&amp;</operator><name pos:start="201:59" pos:end="201:66">o_packet</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="203:9" pos:end="205:22"><block_content pos:start="203:9" pos:end="205:22">

        <if_stmt pos:start="203:9" pos:end="205:22"><if pos:start="203:9" pos:end="205:22">if <condition pos:start="203:12" pos:end="203:64">(<expr pos:start="203:13" pos:end="203:63"><call pos:start="203:13" pos:end="203:63"><name pos:start="203:13" pos:end="203:30">concatenate_packet</name><argument_list pos:start="203:31" pos:end="203:63">(<argument pos:start="203:32" pos:end="203:38"><expr pos:start="203:32" pos:end="203:38"><operator pos:start="203:32" pos:end="203:32">&amp;</operator><name pos:start="203:33" pos:end="203:38">offset</name></expr></argument>, <argument pos:start="203:41" pos:end="203:51"><expr pos:start="203:41" pos:end="203:51"><name pos:start="203:41" pos:end="203:51">avc_context</name></expr></argument>, <argument pos:start="203:54" pos:end="203:62"><expr pos:start="203:54" pos:end="203:62"><operator pos:start="203:54" pos:end="203:54">&amp;</operator><name pos:start="203:55" pos:end="203:62">o_packet</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="205:13" pos:end="205:22"><block_content pos:start="205:13" pos:end="205:22">

            <return pos:start="205:13" pos:end="205:22">return <expr pos:start="205:20" pos:end="205:21"><operator pos:start="205:20" pos:end="205:20">-</operator><literal type="number" pos:start="205:21" pos:end="205:21">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></while>



    <expr_stmt pos:start="209:5" pos:end="209:33"><expr pos:start="209:5" pos:end="209:32"><call pos:start="209:5" pos:end="209:32"><name pos:start="209:5" pos:end="209:20">th_comment_clear</name><argument_list pos:start="209:21" pos:end="209:32">(<argument pos:start="209:22" pos:end="209:31"><expr pos:start="209:22" pos:end="209:31"><operator pos:start="209:22" pos:end="209:22">&amp;</operator><name pos:start="209:23" pos:end="209:31">t_comment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="213:5" pos:end="213:35">/* Set up the output AVFrame */</comment>

    <expr_stmt pos:start="215:5" pos:end="215:48"><expr pos:start="215:5" pos:end="215:47"><name pos:start="215:5" pos:end="215:28"><name pos:start="215:5" pos:end="215:15">avc_context</name><operator pos:start="215:16" pos:end="215:17">-&gt;</operator><name pos:start="215:18" pos:end="215:28">coded_frame</name></name> <operator pos:start="215:30" pos:end="215:30">=</operator> <call pos:start="215:32" pos:end="215:47"><name pos:start="215:32" pos:end="215:45">av_frame_alloc</name><argument_list pos:start="215:46" pos:end="215:47">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="217:5" pos:end="219:31"><if pos:start="217:5" pos:end="219:31">if <condition pos:start="217:8" pos:end="217:34">(<expr pos:start="217:9" pos:end="217:33"><operator pos:start="217:9" pos:end="217:9">!</operator><name pos:start="217:10" pos:end="217:33"><name pos:start="217:10" pos:end="217:20">avc_context</name><operator pos:start="217:21" pos:end="217:22">-&gt;</operator><name pos:start="217:23" pos:end="217:33">coded_frame</name></name></expr>)</condition><block type="pseudo" pos:start="219:9" pos:end="219:31"><block_content pos:start="219:9" pos:end="219:31">

        <return pos:start="219:9" pos:end="219:31">return <expr pos:start="219:16" pos:end="219:30"><call pos:start="219:16" pos:end="219:30"><name pos:start="219:16" pos:end="219:22">AVERROR</name><argument_list pos:start="219:23" pos:end="219:30">(<argument pos:start="219:24" pos:end="219:29"><expr pos:start="219:24" pos:end="219:29"><name pos:start="219:24" pos:end="219:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="223:5" pos:end="223:13">return <expr pos:start="223:12" pos:end="223:12"><literal type="number" pos:start="223:12" pos:end="223:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
