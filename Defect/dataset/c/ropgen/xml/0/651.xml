<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/651.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">validate_options</name><parameter_list pos:start="1:36" pos:end="1:79">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:57"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:78"><decl pos:start="1:60" pos:end="1:78"><type pos:start="1:60" pos:end="1:78"><name pos:start="1:60" pos:end="1:75">AC3EncodeContext</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:78">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="17:5">if <condition pos:start="9:8" pos:end="9:31">(<expr pos:start="9:9" pos:end="9:30"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:30"><name pos:start="9:10" pos:end="9:14">avctx</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:30">channel_layout</name></name></expr>)</condition> <block pos:start="9:33" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:63">

        <expr_stmt pos:start="11:9" pos:end="15:63"><expr pos:start="11:9" pos:end="15:62"><call pos:start="11:9" pos:end="15:62"><name pos:start="11:9" pos:end="11:14">av_log</name><argument_list pos:start="11:15" pos:end="15:62">(<argument pos:start="11:16" pos:end="11:20"><expr pos:start="11:16" pos:end="11:20"><name pos:start="11:16" pos:end="11:20">avctx</name></expr></argument>, <argument pos:start="11:23" pos:end="11:36"><expr pos:start="11:23" pos:end="11:36"><name pos:start="11:23" pos:end="11:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="11:39" pos:end="15:61"><expr pos:start="11:39" pos:end="15:61"><literal type="string" pos:start="11:39" pos:end="11:73">"No channel layout specified. The "</literal>

                                      <literal type="string" pos:start="13:39" pos:end="13:78">"encoder will guess the layout, but it "</literal>

                                      <literal type="string" pos:start="15:39" pos:end="15:61">"might be incorrect.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:69">(<expr pos:start="19:9" pos:end="19:68"><call pos:start="19:9" pos:end="19:68"><name pos:start="19:9" pos:end="19:24">set_channel_info</name><argument_list pos:start="19:25" pos:end="19:68">(<argument pos:start="19:26" pos:end="19:26"><expr pos:start="19:26" pos:end="19:26"><name pos:start="19:26" pos:end="19:26">s</name></expr></argument>, <argument pos:start="19:29" pos:end="19:43"><expr pos:start="19:29" pos:end="19:43"><name pos:start="19:29" pos:end="19:43"><name pos:start="19:29" pos:end="19:33">avctx</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:43">channels</name></name></expr></argument>, <argument pos:start="19:46" pos:end="19:67"><expr pos:start="19:46" pos:end="19:67"><operator pos:start="19:46" pos:end="19:46">&amp;</operator><name pos:start="19:47" pos:end="19:67"><name pos:start="19:47" pos:end="19:51">avctx</name><operator pos:start="19:52" pos:end="19:53">-&gt;</operator><name pos:start="19:54" pos:end="19:67">channel_layout</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:71" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:64"><expr pos:start="21:9" pos:end="21:63"><call pos:start="21:9" pos:end="21:63"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:63">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">avctx</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:37" pos:end="21:62"><expr pos:start="21:37" pos:end="21:62"><literal type="string" pos:start="21:37" pos:end="21:62">"invalid channel layout\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:19">/* frequency */</comment>

    <for pos:start="31:5" pos:end="39:5">for <control pos:start="31:9" pos:end="31:27">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:22"><expr pos:start="31:17" pos:end="31:21"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <literal type="number" pos:start="31:21" pos:end="31:21">3</literal></expr>;</condition> <incr pos:start="31:24" pos:end="31:26"><expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:24">i</name><operator pos:start="31:25" pos:end="31:26">++</operator></expr></incr>)</control> <block pos:start="31:29" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:27">

        <for pos:start="33:9" pos:end="37:27">for <control pos:start="33:13" pos:end="33:31">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">j</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:26"><expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:21">j</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <literal type="number" pos:start="33:25" pos:end="33:25">3</literal></expr>;</condition> <incr pos:start="33:28" pos:end="33:30"><expr pos:start="33:28" pos:end="33:30"><name pos:start="33:28" pos:end="33:28">j</name><operator pos:start="33:29" pos:end="33:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:13" pos:end="37:27"><block_content pos:start="35:13" pos:end="37:27">

            <if_stmt pos:start="35:13" pos:end="37:27"><if pos:start="35:13" pos:end="37:27">if <condition pos:start="35:16" pos:end="35:71">(<expr pos:start="35:17" pos:end="35:70"><operator pos:start="35:17" pos:end="35:17">(</operator><name pos:start="35:18" pos:end="35:42"><name pos:start="35:18" pos:end="35:39">ff_ac3_sample_rate_tab</name><index pos:start="35:40" pos:end="35:42">[<expr pos:start="35:41" pos:end="35:41"><name pos:start="35:41" pos:end="35:41">j</name></expr>]</index></name> <operator pos:start="35:44" pos:end="35:45">&gt;&gt;</operator> <name pos:start="35:47" pos:end="35:47">i</name><operator pos:start="35:48" pos:end="35:48">)</operator> <operator pos:start="35:50" pos:end="35:51">==</operator> <name pos:start="35:53" pos:end="35:70"><name pos:start="35:53" pos:end="35:57">avctx</name><operator pos:start="35:58" pos:end="35:59">-&gt;</operator><name pos:start="35:60" pos:end="35:70">sample_rate</name></name></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:27"><block_content pos:start="37:17" pos:end="37:27">

                <goto pos:start="37:17" pos:end="37:27">goto <name pos:start="37:22" pos:end="37:26">found</name>;</goto></block_content></block></if></if_stmt></block_content></block></for>

    </block_content>}</block></for>

    <return pos:start="41:5" pos:end="41:14">return <expr pos:start="41:12" pos:end="41:13"><operator pos:start="41:12" pos:end="41:12">-</operator><literal type="number" pos:start="41:13" pos:end="41:13">1</literal></expr>;</return>

 <label pos:start="43:2" pos:end="43:7"><name pos:start="43:2" pos:end="43:6">found</name>:</label>

    <expr_stmt pos:start="45:5" pos:end="45:47"><expr pos:start="45:5" pos:end="45:46"><name pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:18">sample_rate</name></name>        <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:46"><name pos:start="45:29" pos:end="45:33">avctx</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:46">sample_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:30"><expr pos:start="47:5" pos:end="47:29"><name pos:start="47:5" pos:end="47:25"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:16">bit_alloc</name><operator pos:start="47:17" pos:end="47:17">.</operator><name pos:start="47:18" pos:end="47:25">sr_shift</name></name> <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:29">i</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:30"><expr pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:24"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:16">bit_alloc</name><operator pos:start="49:17" pos:end="49:17">.</operator><name pos:start="49:18" pos:end="49:24">sr_code</name></name>  <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:29">j</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:54"><expr pos:start="51:5" pos:end="51:53"><name pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:19">bitstream_id</name></name>       <operator pos:start="51:27" pos:end="51:27">=</operator> <literal type="number" pos:start="51:29" pos:end="51:31">8</literal> <operator pos:start="51:31" pos:end="51:31">+</operator> <name pos:start="51:33" pos:end="51:53"><name pos:start="51:33" pos:end="51:33">s</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:44">bit_alloc</name><operator pos:start="51:45" pos:end="51:45">.</operator><name pos:start="51:46" pos:end="51:53">sr_shift</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:30"><expr pos:start="53:5" pos:end="53:29"><name pos:start="53:5" pos:end="53:21"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:21">bitstream_mode</name></name>     <operator pos:start="53:27" pos:end="53:27">=</operator> <literal type="number" pos:start="53:29" pos:end="53:29">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="53:32" pos:end="53:64">/* complete main audio service */</comment>



    <comment type="block" pos:start="57:5" pos:end="57:30">/* bitrate &amp; frame size */</comment>

    <for pos:start="59:5" pos:end="65:5">for <control pos:start="59:9" pos:end="59:28">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:23"><expr pos:start="59:17" pos:end="59:22"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <literal type="number" pos:start="59:21" pos:end="59:22">19</literal></expr>;</condition> <incr pos:start="59:25" pos:end="59:27"><expr pos:start="59:25" pos:end="59:27"><name pos:start="59:25" pos:end="59:25">i</name><operator pos:start="59:26" pos:end="59:27">++</operator></expr></incr>)</control> <block pos:start="59:30" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:18">

        <if_stmt pos:start="61:9" pos:end="63:18"><if pos:start="61:9" pos:end="63:18">if <condition pos:start="61:12" pos:end="61:85">(<expr pos:start="61:13" pos:end="61:84"><operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:34"><name pos:start="61:14" pos:end="61:31">ff_ac3_bitrate_tab</name><index pos:start="61:32" pos:end="61:34">[<expr pos:start="61:33" pos:end="61:33"><name pos:start="61:33" pos:end="61:33">i</name></expr>]</index></name> <operator pos:start="61:36" pos:end="61:37">&gt;&gt;</operator> <name pos:start="61:39" pos:end="61:59"><name pos:start="61:39" pos:end="61:39">s</name><operator pos:start="61:40" pos:end="61:41">-&gt;</operator><name pos:start="61:42" pos:end="61:50">bit_alloc</name><operator pos:start="61:51" pos:end="61:51">.</operator><name pos:start="61:52" pos:end="61:59">sr_shift</name></name><operator pos:start="61:60" pos:end="61:60">)</operator><operator pos:start="61:61" pos:end="61:61">*</operator><literal type="number" pos:start="61:62" pos:end="61:65">1000</literal> <operator pos:start="61:67" pos:end="61:68">==</operator> <name pos:start="61:70" pos:end="61:84"><name pos:start="61:70" pos:end="61:74">avctx</name><operator pos:start="61:75" pos:end="61:76">-&gt;</operator><name pos:start="61:77" pos:end="61:84">bit_rate</name></name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:18"><block_content pos:start="63:13" pos:end="63:18">

            <break pos:start="63:13" pos:end="63:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="67:5" pos:end="69:18"><if pos:start="67:5" pos:end="69:18">if <condition pos:start="67:8" pos:end="67:16">(<expr pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:9">i</name> <operator pos:start="67:11" pos:end="67:12">==</operator> <literal type="number" pos:start="67:14" pos:end="67:15">19</literal></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:18"><block_content pos:start="69:9" pos:end="69:18">

        <return pos:start="69:9" pos:end="69:18">return <expr pos:start="69:16" pos:end="69:17"><operator pos:start="69:16" pos:end="69:16">-</operator><literal type="number" pos:start="69:17" pos:end="69:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:41"><expr pos:start="71:5" pos:end="71:40"><name pos:start="71:5" pos:end="71:15"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:15">bit_rate</name></name>        <operator pos:start="71:24" pos:end="71:24">=</operator> <name pos:start="71:26" pos:end="71:40"><name pos:start="71:26" pos:end="71:30">avctx</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:40">bit_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:32"><expr pos:start="73:5" pos:end="73:31"><name pos:start="73:5" pos:end="73:22"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:22">frame_size_code</name></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <name pos:start="73:26" pos:end="73:26">i</name> <operator pos:start="73:28" pos:end="73:29">&lt;&lt;</operator> <literal type="number" pos:start="73:31" pos:end="73:31">1</literal></expr>;</expr_stmt>



    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
