<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25425.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:32">avpriv_tak_parse_streaminfo</name><parameter_list pos:start="1:33" pos:end="1:69">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:46">GetBitContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">gb</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:68"><decl pos:start="1:53" pos:end="1:68"><type pos:start="1:53" pos:end="1:68"><name pos:start="1:53" pos:end="1:65">TAKStreamInfo</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:68">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:70">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:25">channel_mask</name> <init pos:start="5:27" pos:end="5:29">= <expr pos:start="5:29" pos:end="5:29"><literal type="number" pos:start="5:29" pos:end="5:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">frame_type</name></decl>, <decl pos:start="7:21" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:21">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:52"><expr pos:start="11:5" pos:end="11:51"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:12">codec</name></name> <operator pos:start="11:14" pos:end="11:14">=</operator> <call pos:start="11:16" pos:end="11:51"><name pos:start="11:16" pos:end="11:23">get_bits</name><argument_list pos:start="11:24" pos:end="11:51">(<argument pos:start="11:25" pos:end="11:26"><expr pos:start="11:25" pos:end="11:26"><name pos:start="11:25" pos:end="11:26">gb</name></expr></argument>, <argument pos:start="11:29" pos:end="11:50"><expr pos:start="11:29" pos:end="11:50"><name pos:start="11:29" pos:end="11:50">TAK_ENCODER_CODEC_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:44"><expr pos:start="13:5" pos:end="13:43"><call pos:start="13:5" pos:end="13:43"><name pos:start="13:5" pos:end="13:13">skip_bits</name><argument_list pos:start="13:14" pos:end="13:43">(<argument pos:start="13:15" pos:end="13:16"><expr pos:start="13:15" pos:end="13:16"><name pos:start="13:15" pos:end="13:16">gb</name></expr></argument>, <argument pos:start="13:19" pos:end="13:42"><expr pos:start="13:19" pos:end="13:42"><name pos:start="13:19" pos:end="13:42">TAK_ENCODER_PROFILE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:60"><expr pos:start="17:5" pos:end="17:59"><name pos:start="17:5" pos:end="17:14">frame_type</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="17:59"><name pos:start="17:18" pos:end="17:25">get_bits</name><argument_list pos:start="17:26" pos:end="17:59">(<argument pos:start="17:27" pos:end="17:28"><expr pos:start="17:27" pos:end="17:28"><name pos:start="17:27" pos:end="17:28">gb</name></expr></argument>, <argument pos:start="17:31" pos:end="17:58"><expr pos:start="17:31" pos:end="17:58"><name pos:start="17:31" pos:end="17:58">TAK_SIZE_FRAME_DURATION_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:59"><expr pos:start="19:5" pos:end="19:58"><name pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:14">samples</name></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:58"><name pos:start="19:18" pos:end="19:27">get_bits64</name><argument_list pos:start="19:28" pos:end="19:58">(<argument pos:start="19:29" pos:end="19:30"><expr pos:start="19:29" pos:end="19:30"><name pos:start="19:29" pos:end="19:30">gb</name></expr></argument>, <argument pos:start="19:33" pos:end="19:57"><expr pos:start="19:33" pos:end="19:57"><name pos:start="19:33" pos:end="19:57">TAK_SIZE_SAMPLES_NUM_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:61"><expr pos:start="23:5" pos:end="23:60"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:16">data_type</name></name>   <operator pos:start="23:20" pos:end="23:20">=</operator> <call pos:start="23:22" pos:end="23:60"><name pos:start="23:22" pos:end="23:29">get_bits</name><argument_list pos:start="23:30" pos:end="23:60">(<argument pos:start="23:31" pos:end="23:32"><expr pos:start="23:31" pos:end="23:32"><name pos:start="23:31" pos:end="23:32">gb</name></expr></argument>, <argument pos:start="23:35" pos:end="23:59"><expr pos:start="23:35" pos:end="23:59"><name pos:start="23:35" pos:end="23:59">TAK_FORMAT_DATA_TYPE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:41"><expr pos:start="25:5" pos:end="27:40"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:18">sample_rate</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <call pos:start="25:22" pos:end="25:62"><name pos:start="25:22" pos:end="25:29">get_bits</name><argument_list pos:start="25:30" pos:end="25:62">(<argument pos:start="25:31" pos:end="25:32"><expr pos:start="25:31" pos:end="25:32"><name pos:start="25:31" pos:end="25:32">gb</name></expr></argument>, <argument pos:start="25:35" pos:end="25:61"><expr pos:start="25:35" pos:end="25:61"><name pos:start="25:35" pos:end="25:61">TAK_FORMAT_SAMPLE_RATE_BITS</name></expr></argument>)</argument_list></call> <operator pos:start="25:64" pos:end="25:64">+</operator>

                     <name pos:start="27:22" pos:end="27:40">TAK_SAMPLE_RATE_MIN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:33"><expr pos:start="29:5" pos:end="31:32"><name pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:10">bps</name></name>         <operator pos:start="29:20" pos:end="29:20">=</operator> <call pos:start="29:22" pos:end="29:54"><name pos:start="29:22" pos:end="29:29">get_bits</name><argument_list pos:start="29:30" pos:end="29:54">(<argument pos:start="29:31" pos:end="29:32"><expr pos:start="29:31" pos:end="29:32"><name pos:start="29:31" pos:end="29:32">gb</name></expr></argument>, <argument pos:start="29:35" pos:end="29:53"><expr pos:start="29:35" pos:end="29:53"><name pos:start="29:35" pos:end="29:53">TAK_FORMAT_BPS_BITS</name></expr></argument>)</argument_list></call> <operator pos:start="29:56" pos:end="29:56">+</operator>

                     <name pos:start="31:22" pos:end="31:32">TAK_BPS_MIN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:38"><expr pos:start="33:5" pos:end="35:37"><name pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:15">channels</name></name>    <operator pos:start="33:20" pos:end="33:20">=</operator> <call pos:start="33:22" pos:end="33:58"><name pos:start="33:22" pos:end="33:29">get_bits</name><argument_list pos:start="33:30" pos:end="33:58">(<argument pos:start="33:31" pos:end="33:32"><expr pos:start="33:31" pos:end="33:32"><name pos:start="33:31" pos:end="33:32">gb</name></expr></argument>, <argument pos:start="33:35" pos:end="33:57"><expr pos:start="33:35" pos:end="33:57"><name pos:start="33:35" pos:end="33:57">TAK_FORMAT_CHANNEL_BITS</name></expr></argument>)</argument_list></call> <operator pos:start="33:60" pos:end="33:60">+</operator>

                     <name pos:start="35:22" pos:end="35:37">TAK_CHANNELS_MIN</name></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="59:5"><if pos:start="39:5" pos:end="59:5">if <condition pos:start="39:8" pos:end="39:22">(<expr pos:start="39:9" pos:end="39:21"><call pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:17">get_bits1</name><argument_list pos:start="39:18" pos:end="39:21">(<argument pos:start="39:19" pos:end="39:20"><expr pos:start="39:19" pos:end="39:20"><name pos:start="39:19" pos:end="39:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:24" pos:end="59:5">{<block_content pos:start="41:9" pos:end="57:9">

        <expr_stmt pos:start="41:9" pos:end="41:45"><expr pos:start="41:9" pos:end="41:44"><call pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:17">skip_bits</name><argument_list pos:start="41:18" pos:end="41:44">(<argument pos:start="41:19" pos:end="41:20"><expr pos:start="41:19" pos:end="41:20"><name pos:start="41:19" pos:end="41:20">gb</name></expr></argument>, <argument pos:start="41:23" pos:end="41:43"><expr pos:start="41:23" pos:end="41:43"><name pos:start="41:23" pos:end="41:43">TAK_FORMAT_VALID_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="57:9"><if pos:start="43:9" pos:end="57:9">if <condition pos:start="43:12" pos:end="43:26">(<expr pos:start="43:13" pos:end="43:25"><call pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:21">get_bits1</name><argument_list pos:start="43:22" pos:end="43:25">(<argument pos:start="43:23" pos:end="43:24"><expr pos:start="43:23" pos:end="43:24"><name pos:start="43:23" pos:end="43:24">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:28" pos:end="57:9">{<block_content pos:start="45:13" pos:end="55:13">

            <for pos:start="45:13" pos:end="55:13">for <control pos:start="45:17" pos:end="45:45">(<init pos:start="45:18" pos:end="45:23"><expr pos:start="45:18" pos:end="45:22"><name pos:start="45:18" pos:end="45:18">i</name> <operator pos:start="45:20" pos:end="45:20">=</operator> <literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr>;</init> <condition pos:start="45:25" pos:end="45:40"><expr pos:start="45:25" pos:end="45:39"><name pos:start="45:25" pos:end="45:25">i</name> <operator pos:start="45:27" pos:end="45:27">&lt;</operator> <name pos:start="45:29" pos:end="45:39"><name pos:start="45:29" pos:end="45:29">s</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:39">channels</name></name></expr>;</condition> <incr pos:start="45:42" pos:end="45:44"><expr pos:start="45:42" pos:end="45:44"><name pos:start="45:42" pos:end="45:42">i</name><operator pos:start="45:43" pos:end="45:44">++</operator></expr></incr>)</control> <block pos:start="45:47" pos:end="55:13">{<block_content pos:start="47:17" pos:end="53:63">

                <decl_stmt pos:start="47:17" pos:end="47:68"><decl pos:start="47:17" pos:end="47:67"><type pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:19">int</name></type> <name pos:start="47:21" pos:end="47:25">value</name> <init pos:start="47:27" pos:end="47:67">= <expr pos:start="47:29" pos:end="47:67"><call pos:start="47:29" pos:end="47:67"><name pos:start="47:29" pos:end="47:36">get_bits</name><argument_list pos:start="47:37" pos:end="47:67">(<argument pos:start="47:38" pos:end="47:39"><expr pos:start="47:38" pos:end="47:39"><name pos:start="47:38" pos:end="47:39">gb</name></expr></argument>, <argument pos:start="47:42" pos:end="47:66"><expr pos:start="47:42" pos:end="47:66"><name pos:start="47:42" pos:end="47:66">TAK_FORMAT_CH_LAYOUT_BITS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="51:17" pos:end="53:63"><if pos:start="51:17" pos:end="53:63">if <condition pos:start="51:20" pos:end="51:64">(<expr pos:start="51:21" pos:end="51:63"><name pos:start="51:21" pos:end="51:25">value</name> <operator pos:start="51:27" pos:end="51:27">&lt;</operator> <call pos:start="51:29" pos:end="51:63"><name pos:start="51:29" pos:end="51:42">FF_ARRAY_ELEMS</name><argument_list pos:start="51:43" pos:end="51:63">(<argument pos:start="51:44" pos:end="51:62"><expr pos:start="51:44" pos:end="51:62"><name pos:start="51:44" pos:end="51:62">tak_channel_layouts</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:21" pos:end="53:63"><block_content pos:start="53:21" pos:end="53:63">

                    <expr_stmt pos:start="53:21" pos:end="53:63"><expr pos:start="53:21" pos:end="53:62"><name pos:start="53:21" pos:end="53:32">channel_mask</name> <operator pos:start="53:34" pos:end="53:35">|=</operator> <name pos:start="53:37" pos:end="53:62"><name pos:start="53:37" pos:end="53:55">tak_channel_layouts</name><index pos:start="53:56" pos:end="53:62">[<expr pos:start="53:57" pos:end="53:61"><name pos:start="53:57" pos:end="53:61">value</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:36"><expr pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:16">ch_layout</name></name>     <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:35">channel_mask</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:70"><expr pos:start="65:5" pos:end="65:69"><name pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:20">frame_samples</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <call pos:start="65:24" pos:end="65:69"><name pos:start="65:24" pos:end="65:41">tak_get_nb_samples</name><argument_list pos:start="65:42" pos:end="65:69">(<argument pos:start="65:43" pos:end="65:56"><expr pos:start="65:43" pos:end="65:56"><name pos:start="65:43" pos:end="65:56"><name pos:start="65:43" pos:end="65:43">s</name><operator pos:start="65:44" pos:end="65:45">-&gt;</operator><name pos:start="65:46" pos:end="65:56">sample_rate</name></name></expr></argument>, <argument pos:start="65:59" pos:end="65:68"><expr pos:start="65:59" pos:end="65:68"><name pos:start="65:59" pos:end="65:68">frame_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
