<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5442.c" pos:tabs="8"><function pos:start="1:1" pos:end="281:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">transcode_video</name><parameter_list pos:start="1:27" pos:end="1:112">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:38">InputStream</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">ist</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:53">AVPacket</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">pkt</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:75"><decl pos:start="1:61" pos:end="1:75"><type pos:start="1:61" pos:end="1:75"><name pos:start="1:61" pos:end="1:63">int</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:75">got_output</name></decl></parameter>, <parameter pos:start="1:78" pos:end="1:93"><decl pos:start="1:78" pos:end="1:93"><type pos:start="1:78" pos:end="1:93"><name pos:start="1:78" pos:end="1:84">int64_t</name> <modifier pos:start="1:86" pos:end="1:86">*</modifier></type><name pos:start="1:87" pos:end="1:93">pkt_pts</name></decl></parameter>, <parameter pos:start="1:96" pos:end="1:111"><decl pos:start="1:96" pos:end="1:111"><type pos:start="1:96" pos:end="1:111"><name pos:start="1:96" pos:end="1:102">int64_t</name> <modifier pos:start="1:104" pos:end="1:104">*</modifier></type><name pos:start="1:105" pos:end="1:111">pkt_dts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="281:1">{<block_content pos:start="5:5" pos:end="279:15">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVFrame</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:26">decoded_frame</name></decl>, <decl pos:start="5:29" pos:end="5:50"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:43">filtered_frame</name> <init pos:start="5:45" pos:end="5:50">= <expr pos:start="5:47" pos:end="5:50"><name pos:start="5:47" pos:end="5:50">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">void</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:24">buffer_to_free</name> <init pos:start="7:26" pos:end="7:31">= <expr pos:start="7:28" pos:end="7:31"><name pos:start="7:28" pos:end="7:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">ret</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="14:0"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">float</name></type> <name pos:start="11:11" pos:end="11:17">quality</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="13:1" pos:end="13:19">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:19">CONFIG_AVFILTER</name></expr></cpp:if>

    <decl_stmt pos:start="15:5" pos:end="18:0"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:23">frame_available</name> <init pos:start="15:25" pos:end="15:27">= <expr pos:start="15:27" pos:end="15:27"><literal type="number" pos:start="15:27" pos:end="15:27">1</literal></expr></init></decl>;</decl_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">duration</name><init pos:start="19:17" pos:end="19:18">=<expr pos:start="19:18" pos:end="19:18"><literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:35"><decl pos:start="21:5" pos:end="21:34"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">int64_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:34">best_effort_timestamp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:36"><decl pos:start="23:5" pos:end="23:35"><type pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:14">AVRational</name> <modifier pos:start="23:16" pos:end="23:16">*</modifier></type><name pos:start="23:17" pos:end="23:35">frame_sample_aspect</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="33:55"><if pos:start="27:5" pos:end="29:31">if <condition pos:start="27:8" pos:end="27:77">(<expr pos:start="27:9" pos:end="27:76"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:27"><name pos:start="27:10" pos:end="27:12">ist</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:27">decoded_frame</name></name> <operator pos:start="27:29" pos:end="27:30">&amp;&amp;</operator> <operator pos:start="27:32" pos:end="27:32">!</operator><operator pos:start="27:33" pos:end="27:33">(</operator><name pos:start="27:34" pos:end="27:51"><name pos:start="27:34" pos:end="27:36">ist</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:51">decoded_frame</name></name> <operator pos:start="27:53" pos:end="27:53">=</operator> <call pos:start="27:55" pos:end="27:75"><name pos:start="27:55" pos:end="27:73">avcodec_alloc_frame</name><argument_list pos:start="27:74" pos:end="27:75">()</argument_list></call><operator pos:start="27:76" pos:end="27:76">)</operator></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:31"><block_content pos:start="29:9" pos:end="29:31">

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>

    <else pos:start="31:5" pos:end="33:55">else<block type="pseudo" pos:start="33:9" pos:end="33:55"><block_content pos:start="33:9" pos:end="33:55">

        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><call pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:34">avcodec_get_frame_defaults</name><argument_list pos:start="33:35" pos:end="33:54">(<argument pos:start="33:36" pos:end="33:53"><expr pos:start="33:36" pos:end="33:53"><name pos:start="33:36" pos:end="33:53"><name pos:start="33:36" pos:end="33:38">ist</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:53">decoded_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:39"><expr pos:start="35:5" pos:end="35:38"><name pos:start="35:5" pos:end="35:17">decoded_frame</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:38"><name pos:start="35:21" pos:end="35:23">ist</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:38">decoded_frame</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:25"><expr pos:start="37:5" pos:end="37:24"><name pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:7">pkt</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:12">pts</name></name>  <operator pos:start="37:15" pos:end="37:15">=</operator> <operator pos:start="37:17" pos:end="37:17">*</operator><name pos:start="37:18" pos:end="37:24">pkt_pts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:7">pkt</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:12">dts</name></name>  <operator pos:start="39:15" pos:end="39:15">=</operator> <operator pos:start="39:17" pos:end="39:17">*</operator><name pos:start="39:18" pos:end="39:24">pkt_dts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><operator pos:start="41:5" pos:end="41:5">*</operator><name pos:start="41:6" pos:end="41:12">pkt_pts</name>  <operator pos:start="41:15" pos:end="41:15">=</operator> <name pos:start="41:17" pos:end="41:30">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="59:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:22">(<expr pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:11">pkt</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:21">duration</name></name></expr>)</condition> <block pos:start="45:24" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:83">

        <expr_stmt pos:start="47:9" pos:end="47:83"><expr pos:start="47:9" pos:end="47:82"><name pos:start="47:9" pos:end="47:16">duration</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:82"><name pos:start="47:20" pos:end="47:31">av_rescale_q</name><argument_list pos:start="47:32" pos:end="47:82">(<argument pos:start="47:33" pos:end="47:45"><expr pos:start="47:33" pos:end="47:45"><name pos:start="47:33" pos:end="47:45"><name pos:start="47:33" pos:end="47:35">pkt</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:45">duration</name></name></expr></argument>, <argument pos:start="47:48" pos:end="47:65"><expr pos:start="47:48" pos:end="47:65"><name pos:start="47:48" pos:end="47:65"><name pos:start="47:48" pos:end="47:50">ist</name><operator pos:start="47:51" pos:end="47:52">-&gt;</operator><name pos:start="47:53" pos:end="47:54">st</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:65">time_base</name></name></expr></argument>, <argument pos:start="47:68" pos:end="47:81"><expr pos:start="47:68" pos:end="47:81"><name pos:start="47:68" pos:end="47:81">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="49:7" pos:end="59:5">else if<condition pos:start="49:14" pos:end="49:49">(<expr pos:start="49:15" pos:end="49:48"><name pos:start="49:15" pos:end="49:43"><name pos:start="49:15" pos:end="49:17">ist</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:21">st</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:28">codec</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:39">time_base</name><operator pos:start="49:40" pos:end="49:40">.</operator><name pos:start="49:41" pos:end="49:43">num</name></name> <operator pos:start="49:45" pos:end="49:46">!=</operator> <literal type="number" pos:start="49:48" pos:end="49:48">0</literal></expr>)</condition> <block pos:start="49:51" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:56">

        <decl_stmt pos:start="51:9" pos:end="51:102"><decl pos:start="51:9" pos:end="51:101"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:17">ticks</name><init pos:start="51:18" pos:end="51:101">= <expr pos:start="51:20" pos:end="51:101"><ternary pos:start="51:20" pos:end="51:101"><condition pos:start="51:20" pos:end="51:36"><expr pos:start="51:20" pos:end="51:34"><name pos:start="51:20" pos:end="51:34"><name pos:start="51:20" pos:end="51:22">ist</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:26">st</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:34">parser</name></name></expr> ?</condition><then pos:start="51:38" pos:end="51:67"> <expr pos:start="51:38" pos:end="51:67"><name pos:start="51:38" pos:end="51:65"><name pos:start="51:38" pos:end="51:40">ist</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:44">st</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:52">parser</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:65">repeat_pict</name></name><operator pos:start="51:66" pos:end="51:66">+</operator><literal type="number" pos:start="51:67" pos:end="51:67">1</literal></expr> </then><else pos:start="51:69" pos:end="51:101">: <expr pos:start="51:71" pos:end="51:101"><name pos:start="51:71" pos:end="51:101"><name pos:start="51:71" pos:end="51:73">ist</name><operator pos:start="51:74" pos:end="51:75">-&gt;</operator><name pos:start="51:76" pos:end="51:77">st</name><operator pos:start="51:78" pos:end="51:79">-&gt;</operator><name pos:start="51:80" pos:end="51:84">codec</name><operator pos:start="51:85" pos:end="51:86">-&gt;</operator><name pos:start="51:87" pos:end="51:101">ticks_per_frame</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="53:9" pos:end="57:56"><expr pos:start="53:9" pos:end="57:55"><name pos:start="53:9" pos:end="53:16">duration</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <operator pos:start="53:20" pos:end="53:20">(</operator><operator pos:start="53:21" pos:end="53:21">(</operator><name pos:start="53:22" pos:end="53:28">int64_t</name><operator pos:start="53:29" pos:end="53:29">)</operator><name pos:start="53:30" pos:end="53:41">AV_TIME_BASE</name> <operator pos:start="53:43" pos:end="53:43">*</operator>

                          <name pos:start="55:27" pos:end="55:55"><name pos:start="55:27" pos:end="55:29">ist</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:33">st</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:40">codec</name><operator pos:start="55:41" pos:end="55:42">-&gt;</operator><name pos:start="55:43" pos:end="55:51">time_base</name><operator pos:start="55:52" pos:end="55:52">.</operator><name pos:start="55:53" pos:end="55:55">num</name></name> <operator pos:start="55:57" pos:end="55:57">*</operator> <name pos:start="55:59" pos:end="55:63">ticks</name><operator pos:start="55:64" pos:end="55:64">)</operator> <operator pos:start="55:66" pos:end="55:66">/</operator>

                          <name pos:start="57:27" pos:end="57:55"><name pos:start="57:27" pos:end="57:29">ist</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:33">st</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:40">codec</name><operator pos:start="57:41" pos:end="57:42">-&gt;</operator><name pos:start="57:43" pos:end="57:51">time_base</name><operator pos:start="57:52" pos:end="57:52">.</operator><name pos:start="57:53" pos:end="57:55">den</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="69:34"><if pos:start="63:5" pos:end="67:5">if<condition pos:start="63:7" pos:end="63:46">(<expr pos:start="63:8" pos:end="63:45"><operator pos:start="63:8" pos:end="63:8">*</operator><name pos:start="63:9" pos:end="63:15">pkt_dts</name> <operator pos:start="63:17" pos:end="63:18">!=</operator> <name pos:start="63:20" pos:end="63:33">AV_NOPTS_VALUE</name> <operator pos:start="63:35" pos:end="63:36">&amp;&amp;</operator> <name pos:start="63:38" pos:end="63:45">duration</name></expr>)</condition> <block pos:start="63:48" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:29">

        <expr_stmt pos:start="65:9" pos:end="65:29"><expr pos:start="65:9" pos:end="65:28"><operator pos:start="65:9" pos:end="65:9">*</operator><name pos:start="65:10" pos:end="65:16">pkt_dts</name> <operator pos:start="65:18" pos:end="65:19">+=</operator> <name pos:start="65:21" pos:end="65:28">duration</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="67:6" pos:end="69:34">else<block type="pseudo" pos:start="69:9" pos:end="69:34"><block_content pos:start="69:9" pos:end="69:34">

        <expr_stmt pos:start="69:9" pos:end="69:34"><expr pos:start="69:9" pos:end="69:33"><operator pos:start="69:9" pos:end="69:9">*</operator><name pos:start="69:10" pos:end="69:16">pkt_dts</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:33">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="75:64"><expr pos:start="73:5" pos:end="75:63"><name pos:start="73:5" pos:end="73:7">ret</name> <operator pos:start="73:9" pos:end="73:9">=</operator> <call pos:start="73:11" pos:end="75:63"><name pos:start="73:11" pos:end="73:31">avcodec_decode_video2</name><argument_list pos:start="73:32" pos:end="75:63">(<argument pos:start="73:33" pos:end="73:46"><expr pos:start="73:33" pos:end="73:46"><name pos:start="73:33" pos:end="73:46"><name pos:start="73:33" pos:end="73:35">ist</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:39">st</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:46">codec</name></name></expr></argument>,

                                <argument pos:start="75:33" pos:end="75:45"><expr pos:start="75:33" pos:end="75:45"><name pos:start="75:33" pos:end="75:45">decoded_frame</name></expr></argument>, <argument pos:start="75:48" pos:end="75:57"><expr pos:start="75:48" pos:end="75:57"><name pos:start="75:48" pos:end="75:57">got_output</name></expr></argument>, <argument pos:start="75:60" pos:end="75:62"><expr pos:start="75:60" pos:end="75:62"><name pos:start="75:60" pos:end="75:62">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="79:19"><if pos:start="77:5" pos:end="79:19">if <condition pos:start="77:8" pos:end="77:16">(<expr pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">&lt;</operator> <literal type="number" pos:start="77:15" pos:end="77:15">0</literal></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:19"><block_content pos:start="79:9" pos:end="79:19">

        <return pos:start="79:9" pos:end="79:19">return <expr pos:start="79:16" pos:end="79:18"><name pos:start="79:16" pos:end="79:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:54"><expr pos:start="83:5" pos:end="83:53"><name pos:start="83:5" pos:end="83:11">quality</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <ternary pos:start="83:15" pos:end="83:53"><condition pos:start="83:15" pos:end="83:26"><expr pos:start="83:15" pos:end="83:24"><name pos:start="83:15" pos:end="83:24">same_quant</name></expr> ?</condition><then pos:start="83:28" pos:end="83:49"> <expr pos:start="83:28" pos:end="83:49"><name pos:start="83:28" pos:end="83:49"><name pos:start="83:28" pos:end="83:40">decoded_frame</name><operator pos:start="83:41" pos:end="83:42">-&gt;</operator><name pos:start="83:43" pos:end="83:49">quality</name></name></expr> </then><else pos:start="83:51" pos:end="83:53">: <expr pos:start="83:53" pos:end="83:53"><literal type="number" pos:start="83:53" pos:end="83:53">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="91:5"><if pos:start="85:5" pos:end="91:5">if <condition pos:start="85:8" pos:end="85:21">(<expr pos:start="85:9" pos:end="85:20"><operator pos:start="85:9" pos:end="85:9">!</operator><operator pos:start="85:10" pos:end="85:10">*</operator><name pos:start="85:11" pos:end="85:20">got_output</name></expr>)</condition> <block pos:start="85:23" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:19">

        <comment type="block" pos:start="87:9" pos:end="87:28">/* no picture yet */</comment>

        <return pos:start="89:9" pos:end="89:19">return <expr pos:start="89:16" pos:end="89:18"><name pos:start="89:16" pos:end="89:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:105"><expr pos:start="95:5" pos:end="95:104"><name pos:start="95:5" pos:end="95:25">best_effort_timestamp</name><operator pos:start="95:26" pos:end="95:26">=</operator> <call pos:start="95:28" pos:end="95:104"><name pos:start="95:28" pos:end="95:37">av_opt_ptr</name><argument_list pos:start="95:38" pos:end="95:104">(<argument pos:start="95:39" pos:end="95:63"><expr pos:start="95:39" pos:end="95:63"><call pos:start="95:39" pos:end="95:63"><name pos:start="95:39" pos:end="95:61">avcodec_get_frame_class</name><argument_list pos:start="95:62" pos:end="95:63">()</argument_list></call></expr></argument>, <argument pos:start="95:66" pos:end="95:78"><expr pos:start="95:66" pos:end="95:78"><name pos:start="95:66" pos:end="95:78">decoded_frame</name></expr></argument>, <argument pos:start="95:81" pos:end="95:103"><expr pos:start="95:81" pos:end="95:103"><literal type="string" pos:start="95:81" pos:end="95:103">"best_effort_timestamp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="99:58"><if pos:start="97:5" pos:end="99:58">if<condition pos:start="97:7" pos:end="97:48">(<expr pos:start="97:8" pos:end="97:47"><operator pos:start="97:8" pos:end="97:8">*</operator><name pos:start="97:9" pos:end="97:29">best_effort_timestamp</name> <operator pos:start="97:31" pos:end="97:32">!=</operator> <name pos:start="97:34" pos:end="97:47">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:58"><block_content pos:start="99:9" pos:end="99:58">

        <expr_stmt pos:start="99:9" pos:end="99:58"><expr pos:start="99:9" pos:end="99:57"><name pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:11">ist</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:21">next_pts</name></name> <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:32"><name pos:start="99:25" pos:end="99:27">ist</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:32">pts</name></name> <operator pos:start="99:34" pos:end="99:34">=</operator> <operator pos:start="99:36" pos:end="99:36">*</operator><name pos:start="99:37" pos:end="99:57">best_effort_timestamp</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:30"><expr pos:start="103:5" pos:end="103:29"><name pos:start="103:5" pos:end="103:17"><name pos:start="103:5" pos:end="103:7">ist</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:17">next_pts</name></name> <operator pos:start="103:19" pos:end="103:20">+=</operator> <name pos:start="103:22" pos:end="103:29">duration</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:18"><expr pos:start="105:5" pos:end="105:17"><name pos:start="105:5" pos:end="105:13"><name pos:start="105:5" pos:end="105:7">pkt</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:13">size</name></name> <operator pos:start="105:15" pos:end="105:15">=</operator> <literal type="number" pos:start="105:17" pos:end="105:17">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="114:0"><expr pos:start="109:5" pos:end="109:77"><call pos:start="109:5" pos:end="109:77"><name pos:start="109:5" pos:end="109:27">pre_process_video_frame</name><argument_list pos:start="109:28" pos:end="109:77">(<argument pos:start="109:29" pos:end="109:31"><expr pos:start="109:29" pos:end="109:31"><name pos:start="109:29" pos:end="109:31">ist</name></expr></argument>, <argument pos:start="109:34" pos:end="109:59"><expr pos:start="109:34" pos:end="109:59"><operator pos:start="109:34" pos:end="109:34">(</operator><name pos:start="109:35" pos:end="109:43">AVPicture</name> <operator pos:start="109:45" pos:end="109:45">*</operator><operator pos:start="109:46" pos:end="109:46">)</operator><name pos:start="109:47" pos:end="109:59">decoded_frame</name></expr></argument>, <argument pos:start="109:62" pos:end="109:76"><expr pos:start="109:62" pos:end="109:76"><operator pos:start="109:62" pos:end="109:62">&amp;</operator><name pos:start="109:63" pos:end="109:76">buffer_to_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="113:1" pos:end="113:19">#<cpp:directive pos:start="113:2" pos:end="113:3">if</cpp:directive> <expr pos:start="113:5" pos:end="113:19"><name pos:start="113:5" pos:end="113:19">CONFIG_AVFILTER</name></expr></cpp:if>

    <expr_stmt pos:start="115:5" pos:end="115:101"><expr pos:start="115:5" pos:end="115:100"><name pos:start="115:5" pos:end="115:23">frame_sample_aspect</name><operator pos:start="115:24" pos:end="115:24">=</operator> <call pos:start="115:26" pos:end="115:100"><name pos:start="115:26" pos:end="115:35">av_opt_ptr</name><argument_list pos:start="115:36" pos:end="115:100">(<argument pos:start="115:37" pos:end="115:61"><expr pos:start="115:37" pos:end="115:61"><call pos:start="115:37" pos:end="115:61"><name pos:start="115:37" pos:end="115:59">avcodec_get_frame_class</name><argument_list pos:start="115:60" pos:end="115:61">()</argument_list></call></expr></argument>, <argument pos:start="115:64" pos:end="115:76"><expr pos:start="115:64" pos:end="115:76"><name pos:start="115:64" pos:end="115:76">decoded_frame</name></expr></argument>, <argument pos:start="115:79" pos:end="115:99"><expr pos:start="115:79" pos:end="115:99"><literal type="string" pos:start="115:79" pos:end="115:99">"sample_aspect_ratio"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="117:5" pos:end="174:0">for<control pos:start="117:8" pos:end="117:36">(<init pos:start="117:9" pos:end="117:12"><expr pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:9">i</name><operator pos:start="117:10" pos:end="117:10">=</operator><literal type="number" pos:start="117:11" pos:end="117:11">0</literal></expr>;</init><condition pos:start="117:13" pos:end="117:32"><expr pos:start="117:13" pos:end="117:31"><name pos:start="117:13" pos:end="117:13">i</name><operator pos:start="117:14" pos:end="117:14">&lt;</operator><name pos:start="117:15" pos:end="117:31">nb_output_streams</name></expr>;</condition><incr pos:start="117:33" pos:end="117:35"><expr pos:start="117:33" pos:end="117:35"><name pos:start="117:33" pos:end="117:33">i</name><operator pos:start="117:34" pos:end="117:35">++</operator></expr></incr>)</control> <block pos:start="117:38" pos:end="174:0">{<block_content pos:start="119:9" pos:end="169:9">

        <decl_stmt pos:start="119:9" pos:end="119:53"><decl pos:start="119:9" pos:end="119:52"><type pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:20">OutputStream</name> <modifier pos:start="119:22" pos:end="119:22">*</modifier></type><name pos:start="119:23" pos:end="119:25">ost</name> <init pos:start="119:27" pos:end="119:52">= <expr pos:start="119:29" pos:end="119:52"><name pos:start="119:29" pos:end="119:31">ost</name> <operator pos:start="119:33" pos:end="119:33">=</operator> <operator pos:start="119:35" pos:end="119:35">&amp;</operator><name pos:start="119:36" pos:end="119:52"><name pos:start="119:36" pos:end="119:49">output_streams</name><index pos:start="119:50" pos:end="119:52">[<expr pos:start="119:51" pos:end="119:51"><name pos:start="119:51" pos:end="119:51">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="121:9" pos:end="169:9"><if pos:start="121:9" pos:end="169:9">if<condition pos:start="121:11" pos:end="121:46">(<expr pos:start="121:12" pos:end="121:45"><call pos:start="121:12" pos:end="121:45"><name pos:start="121:12" pos:end="121:35">check_output_constraints</name><argument_list pos:start="121:36" pos:end="121:45">(<argument pos:start="121:37" pos:end="121:39"><expr pos:start="121:37" pos:end="121:39"><name pos:start="121:37" pos:end="121:39">ist</name></expr></argument>, <argument pos:start="121:42" pos:end="121:44"><expr pos:start="121:42" pos:end="121:44"><name pos:start="121:42" pos:end="121:44">ost</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="121:47" pos:end="169:9">{<block_content pos:start="123:13" pos:end="167:13">

            <if_stmt pos:start="123:13" pos:end="125:68"><if pos:start="123:13" pos:end="125:68">if <condition pos:start="123:16" pos:end="123:42">(<expr pos:start="123:17" pos:end="123:41"><operator pos:start="123:17" pos:end="123:17">!</operator><name pos:start="123:18" pos:end="123:41"><name pos:start="123:18" pos:end="123:36">frame_sample_aspect</name><operator pos:start="123:37" pos:end="123:38">-&gt;</operator><name pos:start="123:39" pos:end="123:41">num</name></name></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:68"><block_content pos:start="125:17" pos:end="125:68">

                <expr_stmt pos:start="125:17" pos:end="125:68"><expr pos:start="125:17" pos:end="125:67"><operator pos:start="125:17" pos:end="125:17">*</operator><name pos:start="125:18" pos:end="125:36">frame_sample_aspect</name> <operator pos:start="125:38" pos:end="125:38">=</operator> <name pos:start="125:40" pos:end="125:67"><name pos:start="125:40" pos:end="125:42">ist</name><operator pos:start="125:43" pos:end="125:44">-&gt;</operator><name pos:start="125:45" pos:end="125:46">st</name><operator pos:start="125:47" pos:end="125:48">-&gt;</operator><name pos:start="125:49" pos:end="125:67">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:42"><expr pos:start="127:13" pos:end="127:41"><name pos:start="127:13" pos:end="127:30"><name pos:start="127:13" pos:end="127:25">decoded_frame</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:30">pts</name></name> <operator pos:start="127:32" pos:end="127:32">=</operator> <name pos:start="127:34" pos:end="127:41"><name pos:start="127:34" pos:end="127:36">ist</name><operator pos:start="127:37" pos:end="127:38">-&gt;</operator><name pos:start="127:39" pos:end="127:41">pts</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="129:13" pos:end="167:13"><if pos:start="129:13" pos:end="159:13">if <condition pos:start="129:16" pos:end="129:25">(<expr pos:start="129:17" pos:end="129:24"><name pos:start="129:17" pos:end="129:24"><name pos:start="129:17" pos:end="129:19">ist</name><operator pos:start="129:20" pos:end="129:21">-&gt;</operator><name pos:start="129:22" pos:end="129:24">dr1</name></name></expr>)</condition> <block pos:start="129:27" pos:end="159:13">{<block_content pos:start="131:17" pos:end="157:65">

                <decl_stmt pos:start="131:17" pos:end="131:62"><decl pos:start="131:17" pos:end="131:61"><type pos:start="131:17" pos:end="131:34"><name pos:start="131:17" pos:end="131:27">FrameBuffer</name>      <modifier pos:start="131:34" pos:end="131:34">*</modifier></type><name pos:start="131:35" pos:end="131:37">buf</name> <init pos:start="131:39" pos:end="131:61">= <expr pos:start="131:41" pos:end="131:61"><name pos:start="131:41" pos:end="131:61"><name pos:start="131:41" pos:end="131:53">decoded_frame</name><operator pos:start="131:54" pos:end="131:55">-&gt;</operator><name pos:start="131:56" pos:end="131:61">opaque</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="133:17" pos:end="141:69"><decl pos:start="133:17" pos:end="141:68"><type pos:start="133:17" pos:end="133:35"><name pos:start="133:17" pos:end="133:33">AVFilterBufferRef</name> <modifier pos:start="133:35" pos:end="133:35">*</modifier></type><name pos:start="133:36" pos:end="133:37">fb</name> <init pos:start="133:39" pos:end="141:68">= <expr pos:start="133:41" pos:end="141:68"><call pos:start="133:41" pos:end="141:68"><name pos:start="133:41" pos:end="133:81">avfilter_get_video_buffer_ref_from_arrays</name><argument_list pos:start="133:82" pos:end="141:68">(

                                            <argument pos:start="135:45" pos:end="135:63"><expr pos:start="135:45" pos:end="135:63"><name pos:start="135:45" pos:end="135:63"><name pos:start="135:45" pos:end="135:57">decoded_frame</name><operator pos:start="135:58" pos:end="135:59">-&gt;</operator><name pos:start="135:60" pos:end="135:63">data</name></name></expr></argument>, <argument pos:start="135:66" pos:end="135:88"><expr pos:start="135:66" pos:end="135:88"><name pos:start="135:66" pos:end="135:88"><name pos:start="135:66" pos:end="135:78">decoded_frame</name><operator pos:start="135:79" pos:end="135:80">-&gt;</operator><name pos:start="135:81" pos:end="135:88">linesize</name></name></expr></argument>,

                                            <argument pos:start="137:45" pos:end="137:75"><expr pos:start="137:45" pos:end="137:75"><name pos:start="137:45" pos:end="137:56">AV_PERM_READ</name> <operator pos:start="137:58" pos:end="137:58">|</operator> <name pos:start="137:60" pos:end="137:75">AV_PERM_PRESERVE</name></expr></argument>,

                                            <argument pos:start="139:45" pos:end="139:65"><expr pos:start="139:45" pos:end="139:65"><name pos:start="139:45" pos:end="139:65"><name pos:start="139:45" pos:end="139:47">ist</name><operator pos:start="139:48" pos:end="139:49">-&gt;</operator><name pos:start="139:50" pos:end="139:51">st</name><operator pos:start="139:52" pos:end="139:53">-&gt;</operator><name pos:start="139:54" pos:end="139:58">codec</name><operator pos:start="139:59" pos:end="139:60">-&gt;</operator><name pos:start="139:61" pos:end="139:65">width</name></name></expr></argument>, <argument pos:start="139:68" pos:end="139:89"><expr pos:start="139:68" pos:end="139:89"><name pos:start="139:68" pos:end="139:89"><name pos:start="139:68" pos:end="139:70">ist</name><operator pos:start="139:71" pos:end="139:72">-&gt;</operator><name pos:start="139:73" pos:end="139:74">st</name><operator pos:start="139:75" pos:end="139:76">-&gt;</operator><name pos:start="139:77" pos:end="139:81">codec</name><operator pos:start="139:82" pos:end="139:83">-&gt;</operator><name pos:start="139:84" pos:end="139:89">height</name></name></expr></argument>,

                                            <argument pos:start="141:45" pos:end="141:67"><expr pos:start="141:45" pos:end="141:67"><name pos:start="141:45" pos:end="141:67"><name pos:start="141:45" pos:end="141:47">ist</name><operator pos:start="141:48" pos:end="141:49">-&gt;</operator><name pos:start="141:50" pos:end="141:51">st</name><operator pos:start="141:52" pos:end="141:53">-&gt;</operator><name pos:start="141:54" pos:end="141:58">codec</name><operator pos:start="141:59" pos:end="141:60">-&gt;</operator><name pos:start="141:61" pos:end="141:67">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="145:17" pos:end="145:61"><expr pos:start="145:17" pos:end="145:60"><call pos:start="145:17" pos:end="145:60"><name pos:start="145:17" pos:end="145:41">avfilter_copy_frame_props</name><argument_list pos:start="145:42" pos:end="145:60">(<argument pos:start="145:43" pos:end="145:44"><expr pos:start="145:43" pos:end="145:44"><name pos:start="145:43" pos:end="145:44">fb</name></expr></argument>, <argument pos:start="145:47" pos:end="145:59"><expr pos:start="145:47" pos:end="145:59"><name pos:start="145:47" pos:end="145:59">decoded_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:51"><expr pos:start="147:17" pos:end="147:50"><name pos:start="147:17" pos:end="147:23"><name pos:start="147:17" pos:end="147:18">fb</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:23">pts</name></name>                 <operator pos:start="147:41" pos:end="147:41">=</operator> <name pos:start="147:43" pos:end="147:50"><name pos:start="147:43" pos:end="147:45">ist</name><operator pos:start="147:46" pos:end="147:47">-&gt;</operator><name pos:start="147:48" pos:end="147:50">pts</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:46"><expr pos:start="149:17" pos:end="149:45"><name pos:start="149:17" pos:end="149:29"><name pos:start="149:17" pos:end="149:18">fb</name><operator pos:start="149:19" pos:end="149:20">-&gt;</operator><name pos:start="149:21" pos:end="149:23">buf</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:29">priv</name></name>           <operator pos:start="149:41" pos:end="149:41">=</operator> <name pos:start="149:43" pos:end="149:45">buf</name></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:64"><expr pos:start="151:17" pos:end="151:63"><name pos:start="151:17" pos:end="151:29"><name pos:start="151:17" pos:end="151:18">fb</name><operator pos:start="151:19" pos:end="151:20">-&gt;</operator><name pos:start="151:21" pos:end="151:23">buf</name><operator pos:start="151:24" pos:end="151:25">-&gt;</operator><name pos:start="151:26" pos:end="151:29">free</name></name>           <operator pos:start="151:41" pos:end="151:41">=</operator> <name pos:start="151:43" pos:end="151:63">filter_release_buffer</name></expr>;</expr_stmt>



                <expr_stmt pos:start="155:17" pos:end="155:32"><expr pos:start="155:17" pos:end="155:31"><name pos:start="155:17" pos:end="155:29"><name pos:start="155:17" pos:end="155:19">buf</name><operator pos:start="155:20" pos:end="155:21">-&gt;</operator><name pos:start="155:22" pos:end="155:29">refcount</name></name><operator pos:start="155:30" pos:end="155:31">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:65"><expr pos:start="157:17" pos:end="157:64"><call pos:start="157:17" pos:end="157:64"><name pos:start="157:17" pos:end="157:35">av_buffersrc_buffer</name><argument_list pos:start="157:36" pos:end="157:64">(<argument pos:start="157:37" pos:end="157:59"><expr pos:start="157:37" pos:end="157:59"><name pos:start="157:37" pos:end="157:59"><name pos:start="157:37" pos:end="157:39">ost</name><operator pos:start="157:40" pos:end="157:41">-&gt;</operator><name pos:start="157:42" pos:end="157:59">input_video_filter</name></name></expr></argument>, <argument pos:start="157:62" pos:end="157:63"><expr pos:start="157:62" pos:end="157:63"><name pos:start="157:62" pos:end="157:63">fb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="159:15" pos:end="167:13">else

            if<condition pos:start="161:15" pos:end="161:114">(<expr pos:start="161:16" pos:end="161:113"><operator pos:start="161:16" pos:end="161:16">(</operator><call pos:start="161:17" pos:end="161:108"><name pos:start="161:17" pos:end="161:40">av_vsrc_buffer_add_frame</name><argument_list pos:start="161:41" pos:end="161:108">(<argument pos:start="161:42" pos:end="161:64"><expr pos:start="161:42" pos:end="161:64"><name pos:start="161:42" pos:end="161:64"><name pos:start="161:42" pos:end="161:44">ost</name><operator pos:start="161:45" pos:end="161:46">-&gt;</operator><name pos:start="161:47" pos:end="161:64">input_video_filter</name></name></expr></argument>, <argument pos:start="161:67" pos:end="161:79"><expr pos:start="161:67" pos:end="161:79"><name pos:start="161:67" pos:end="161:79">decoded_frame</name></expr></argument>, <argument pos:start="161:82" pos:end="161:107"><expr pos:start="161:82" pos:end="161:107"><name pos:start="161:82" pos:end="161:107">AV_VSRC_BUF_FLAG_OVERWRITE</name></expr></argument>)</argument_list></call><operator pos:start="161:109" pos:end="161:109">)</operator> <operator pos:start="161:111" pos:end="161:111">&lt;</operator> <literal type="number" pos:start="161:113" pos:end="161:113">0</literal></expr>)</condition><block pos:start="161:115" pos:end="167:13">{<block_content pos:start="163:17" pos:end="165:32">

                <expr_stmt pos:start="163:17" pos:end="163:88"><expr pos:start="163:17" pos:end="163:87"><call pos:start="163:17" pos:end="163:87"><name pos:start="163:17" pos:end="163:22">av_log</name><argument_list pos:start="163:23" pos:end="163:87">(<argument pos:start="163:24" pos:end="163:24"><expr pos:start="163:24" pos:end="163:24"><literal type="number" pos:start="163:24" pos:end="163:24">0</literal></expr></argument>, <argument pos:start="163:27" pos:end="163:38"><expr pos:start="163:27" pos:end="163:38"><name pos:start="163:27" pos:end="163:38">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="163:41" pos:end="163:86"><expr pos:start="163:41" pos:end="163:86"><literal type="string" pos:start="163:41" pos:end="163:86">"Failed to inject frame into filter network\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:32"><expr pos:start="165:17" pos:end="165:31"><call pos:start="165:17" pos:end="165:31"><name pos:start="165:17" pos:end="165:28">exit_program</name><argument_list pos:start="165:29" pos:end="165:31">(<argument pos:start="165:30" pos:end="165:30"><expr pos:start="165:30" pos:end="165:30"><literal type="number" pos:start="165:30" pos:end="165:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<cpp:endif pos:start="173:1" pos:end="173:6">#<cpp:directive pos:start="173:2" pos:end="173:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="177:5" pos:end="177:24"><expr pos:start="177:5" pos:end="177:23"><call pos:start="177:5" pos:end="177:23"><name pos:start="177:5" pos:end="177:18">rate_emu_sleep</name><argument_list pos:start="177:19" pos:end="177:23">(<argument pos:start="177:20" pos:end="177:22"><expr pos:start="177:20" pos:end="177:22"><name pos:start="177:20" pos:end="177:22">ist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="181:5" pos:end="273:5">for <control pos:start="181:9" pos:end="181:43">(<init pos:start="181:10" pos:end="181:15"><expr pos:start="181:10" pos:end="181:14"><name pos:start="181:10" pos:end="181:10">i</name> <operator pos:start="181:12" pos:end="181:12">=</operator> <literal type="number" pos:start="181:14" pos:end="181:14">0</literal></expr>;</init> <condition pos:start="181:17" pos:end="181:38"><expr pos:start="181:17" pos:end="181:37"><name pos:start="181:17" pos:end="181:17">i</name> <operator pos:start="181:19" pos:end="181:19">&lt;</operator> <name pos:start="181:21" pos:end="181:37">nb_output_streams</name></expr>;</condition> <incr pos:start="181:40" pos:end="181:42"><expr pos:start="181:40" pos:end="181:42"><name pos:start="181:40" pos:end="181:40">i</name><operator pos:start="181:41" pos:end="181:42">++</operator></expr></incr>)</control> <block pos:start="181:45" pos:end="273:5">{<block_content pos:start="183:9" pos:end="272:0">

        <decl_stmt pos:start="183:9" pos:end="183:47"><decl pos:start="183:9" pos:end="183:46"><type pos:start="183:9" pos:end="183:22"><name pos:start="183:9" pos:end="183:20">OutputStream</name> <modifier pos:start="183:22" pos:end="183:22">*</modifier></type><name pos:start="183:23" pos:end="183:25">ost</name> <init pos:start="183:27" pos:end="183:46">= <expr pos:start="183:29" pos:end="183:46"><operator pos:start="183:29" pos:end="183:29">&amp;</operator><name pos:start="183:30" pos:end="183:46"><name pos:start="183:30" pos:end="183:43">output_streams</name><index pos:start="183:44" pos:end="183:46">[<expr pos:start="183:45" pos:end="183:45"><name pos:start="183:45" pos:end="183:45">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="185:9" pos:end="185:23"><decl pos:start="185:9" pos:end="185:22"><type pos:start="185:9" pos:end="185:11"><name pos:start="185:9" pos:end="185:11">int</name></type> <name pos:start="185:13" pos:end="185:22">frame_size</name></decl>;</decl_stmt>



        <if_stmt pos:start="189:9" pos:end="196:0"><if pos:start="189:9" pos:end="196:0">if <condition pos:start="189:12" pos:end="189:73">(<expr pos:start="189:13" pos:end="189:72"><operator pos:start="189:13" pos:end="189:13">!</operator><call pos:start="189:14" pos:end="189:47"><name pos:start="189:14" pos:end="189:37">check_output_constraints</name><argument_list pos:start="189:38" pos:end="189:47">(<argument pos:start="189:39" pos:end="189:41"><expr pos:start="189:39" pos:end="189:41"><name pos:start="189:39" pos:end="189:41">ist</name></expr></argument>, <argument pos:start="189:44" pos:end="189:46"><expr pos:start="189:44" pos:end="189:46"><name pos:start="189:44" pos:end="189:46">ost</name></expr></argument>)</argument_list></call> <operator pos:start="189:49" pos:end="189:50">||</operator> <operator pos:start="189:52" pos:end="189:52">!</operator><name pos:start="189:53" pos:end="189:72"><name pos:start="189:53" pos:end="189:55">ost</name><operator pos:start="189:56" pos:end="189:57">-&gt;</operator><name pos:start="189:58" pos:end="189:72">encoding_needed</name></name></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="196:0"><block_content pos:start="191:13" pos:end="196:0">

            <continue pos:start="191:13" pos:end="196:0">continue;</continue></block_content></block></if></if_stmt>



<cpp:if pos:start="195:1" pos:end="195:19">#<cpp:directive pos:start="195:2" pos:end="195:3">if</cpp:directive> <expr pos:start="195:5" pos:end="195:19"><name pos:start="195:5" pos:end="195:19">CONFIG_AVFILTER</name></expr></cpp:if>

        <if_stmt pos:start="197:9" pos:end="201:9"><if pos:start="197:9" pos:end="201:9">if <condition pos:start="197:12" pos:end="197:36">(<expr pos:start="197:13" pos:end="197:35"><name pos:start="197:13" pos:end="197:35"><name pos:start="197:13" pos:end="197:15">ost</name><operator pos:start="197:16" pos:end="197:17">-&gt;</operator><name pos:start="197:18" pos:end="197:35">input_video_filter</name></name></expr>)</condition> <block pos:start="197:38" pos:end="201:9">{<block_content pos:start="199:13" pos:end="199:81">

            <expr_stmt pos:start="199:13" pos:end="199:81"><expr pos:start="199:13" pos:end="199:80"><name pos:start="199:13" pos:end="199:27">frame_available</name> <operator pos:start="199:29" pos:end="199:29">=</operator> <call pos:start="199:31" pos:end="199:80"><name pos:start="199:31" pos:end="199:54">av_buffersink_poll_frame</name><argument_list pos:start="199:55" pos:end="199:80">(<argument pos:start="199:56" pos:end="199:79"><expr pos:start="199:56" pos:end="199:79"><name pos:start="199:56" pos:end="199:79"><name pos:start="199:56" pos:end="199:58">ost</name><operator pos:start="199:59" pos:end="199:60">-&gt;</operator><name pos:start="199:61" pos:end="199:79">output_video_filter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <while pos:start="203:9" pos:end="272:0">while <condition pos:start="203:15" pos:end="203:31">(<expr pos:start="203:16" pos:end="203:30"><name pos:start="203:16" pos:end="203:30">frame_available</name></expr>)</condition> <block pos:start="203:33" pos:end="272:0">{<block_content pos:start="205:13" pos:end="267:47">

            <if_stmt pos:start="205:13" pos:end="239:13"><if pos:start="205:13" pos:end="239:13">if <condition pos:start="205:16" pos:end="205:41">(<expr pos:start="205:17" pos:end="205:40"><name pos:start="205:17" pos:end="205:40"><name pos:start="205:17" pos:end="205:19">ost</name><operator pos:start="205:20" pos:end="205:21">-&gt;</operator><name pos:start="205:22" pos:end="205:40">output_video_filter</name></name></expr>)</condition> <block pos:start="205:43" pos:end="239:13">{<block_content pos:start="207:17" pos:end="237:17">

                <decl_stmt pos:start="207:17" pos:end="207:87"><decl pos:start="207:17" pos:end="207:86"><type pos:start="207:17" pos:end="207:26"><name pos:start="207:17" pos:end="207:26">AVRational</name></type> <name pos:start="207:28" pos:end="207:37">ist_pts_tb</name> <init pos:start="207:39" pos:end="207:86">= <expr pos:start="207:41" pos:end="207:86"><name pos:start="207:41" pos:end="207:75"><name pos:start="207:41" pos:end="207:43">ost</name><operator pos:start="207:44" pos:end="207:45">-&gt;</operator><name pos:start="207:46" pos:end="207:64">output_video_filter</name><operator pos:start="207:65" pos:end="207:66">-&gt;</operator><name pos:start="207:67" pos:end="207:72">inputs</name><index pos:start="207:73" pos:end="207:75">[<expr pos:start="207:74" pos:end="207:74"><literal type="number" pos:start="207:74" pos:end="207:74">0</literal></expr>]</index></name><operator pos:start="207:76" pos:end="207:77">-&gt;</operator><name pos:start="207:78" pos:end="207:86">time_base</name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="209:17" pos:end="215:17"><if pos:start="209:17" pos:end="215:17">if <condition pos:start="209:20" pos:end="209:96">(<expr pos:start="209:21" pos:end="209:95"><call pos:start="209:21" pos:end="209:91"><name pos:start="209:21" pos:end="209:48">av_buffersink_get_buffer_ref</name><argument_list pos:start="209:49" pos:end="209:91">(<argument pos:start="209:50" pos:end="209:73"><expr pos:start="209:50" pos:end="209:73"><name pos:start="209:50" pos:end="209:73"><name pos:start="209:50" pos:end="209:52">ost</name><operator pos:start="209:53" pos:end="209:54">-&gt;</operator><name pos:start="209:55" pos:end="209:73">output_video_filter</name></name></expr></argument>, <argument pos:start="209:76" pos:end="209:87"><expr pos:start="209:76" pos:end="209:87"><operator pos:start="209:76" pos:end="209:76">&amp;</operator><name pos:start="209:77" pos:end="209:87"><name pos:start="209:77" pos:end="209:79">ost</name><operator pos:start="209:80" pos:end="209:81">-&gt;</operator><name pos:start="209:82" pos:end="209:87">picref</name></name></expr></argument>, <argument pos:start="209:90" pos:end="209:90"><expr pos:start="209:90" pos:end="209:90"><literal type="number" pos:start="209:90" pos:end="209:90">0</literal></expr></argument>)</argument_list></call> <operator pos:start="209:93" pos:end="209:93">&lt;</operator> <literal type="number" pos:start="209:95" pos:end="209:95">0</literal></expr>)</condition><block pos:start="209:97" pos:end="215:17">{<block_content pos:start="211:21" pos:end="213:30">

                    <expr_stmt pos:start="211:21" pos:end="211:119"><expr pos:start="211:21" pos:end="211:118"><call pos:start="211:21" pos:end="211:118"><name pos:start="211:21" pos:end="211:26">av_log</name><argument_list pos:start="211:27" pos:end="211:118">(<argument pos:start="211:28" pos:end="211:28"><expr pos:start="211:28" pos:end="211:28"><literal type="number" pos:start="211:28" pos:end="211:28">0</literal></expr></argument>, <argument pos:start="211:31" pos:end="211:44"><expr pos:start="211:31" pos:end="211:44"><name pos:start="211:31" pos:end="211:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="211:47" pos:end="211:117"><expr pos:start="211:47" pos:end="211:117"><literal type="string" pos:start="211:47" pos:end="211:117">"AV Filter told us it has a frame available but failed to output one\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="213:21" pos:end="213:30">goto <name pos:start="213:26" pos:end="213:29">cont</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="217:17" pos:end="225:68"><if pos:start="217:17" pos:end="223:17">if <condition pos:start="217:20" pos:end="217:91">(<expr pos:start="217:21" pos:end="217:90"><operator pos:start="217:21" pos:end="217:21">!</operator><name pos:start="217:22" pos:end="217:40"><name pos:start="217:22" pos:end="217:24">ist</name><operator pos:start="217:25" pos:end="217:26">-&gt;</operator><name pos:start="217:27" pos:end="217:40">filtered_frame</name></name> <operator pos:start="217:42" pos:end="217:43">&amp;&amp;</operator> <operator pos:start="217:45" pos:end="217:45">!</operator><operator pos:start="217:46" pos:end="217:46">(</operator><name pos:start="217:47" pos:end="217:65"><name pos:start="217:47" pos:end="217:49">ist</name><operator pos:start="217:50" pos:end="217:51">-&gt;</operator><name pos:start="217:52" pos:end="217:65">filtered_frame</name></name> <operator pos:start="217:67" pos:end="217:67">=</operator> <call pos:start="217:69" pos:end="217:89"><name pos:start="217:69" pos:end="217:87">avcodec_alloc_frame</name><argument_list pos:start="217:88" pos:end="217:89">()</argument_list></call><operator pos:start="217:90" pos:end="217:90">)</operator></expr>)</condition> <block pos:start="217:93" pos:end="223:17">{<block_content pos:start="219:21" pos:end="221:43">

                    <expr_stmt pos:start="219:21" pos:end="219:44"><expr pos:start="219:21" pos:end="219:43"><call pos:start="219:21" pos:end="219:43"><name pos:start="219:21" pos:end="219:27">av_free</name><argument_list pos:start="219:28" pos:end="219:43">(<argument pos:start="219:29" pos:end="219:42"><expr pos:start="219:29" pos:end="219:42"><name pos:start="219:29" pos:end="219:42">buffer_to_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="221:21" pos:end="221:43">return <expr pos:start="221:28" pos:end="221:42"><call pos:start="221:28" pos:end="221:42"><name pos:start="221:28" pos:end="221:34">AVERROR</name><argument_list pos:start="221:35" pos:end="221:42">(<argument pos:start="221:36" pos:end="221:41"><expr pos:start="221:36" pos:end="221:41"><name pos:start="221:36" pos:end="221:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if> <else pos:start="223:19" pos:end="225:68">else<block type="pseudo" pos:start="225:21" pos:end="225:68"><block_content pos:start="225:21" pos:end="225:68">

                    <expr_stmt pos:start="225:21" pos:end="225:68"><expr pos:start="225:21" pos:end="225:67"><call pos:start="225:21" pos:end="225:67"><name pos:start="225:21" pos:end="225:46">avcodec_get_frame_defaults</name><argument_list pos:start="225:47" pos:end="225:67">(<argument pos:start="225:48" pos:end="225:66"><expr pos:start="225:48" pos:end="225:66"><name pos:start="225:48" pos:end="225:66"><name pos:start="225:48" pos:end="225:50">ist</name><operator pos:start="225:51" pos:end="225:52">-&gt;</operator><name pos:start="225:53" pos:end="225:66">filtered_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:53"><expr pos:start="227:17" pos:end="227:52"><name pos:start="227:17" pos:end="227:30">filtered_frame</name> <operator pos:start="227:32" pos:end="227:32">=</operator> <name pos:start="227:34" pos:end="227:52"><name pos:start="227:34" pos:end="227:36">ist</name><operator pos:start="227:37" pos:end="227:38">-&gt;</operator><name pos:start="227:39" pos:end="227:52">filtered_frame</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="229:17" pos:end="229:48"><expr pos:start="229:17" pos:end="229:47"><operator pos:start="229:17" pos:end="229:17">*</operator><name pos:start="229:18" pos:end="229:31">filtered_frame</name><operator pos:start="229:32" pos:end="229:32">=</operator> <operator pos:start="229:34" pos:end="229:34">*</operator><name pos:start="229:35" pos:end="229:47">decoded_frame</name></expr>;</expr_stmt> <comment type="line" pos:start="229:50" pos:end="229:67">//for me_threshold</comment>

                <if_stmt pos:start="231:17" pos:end="237:17"><if pos:start="231:17" pos:end="237:17">if <condition pos:start="231:20" pos:end="231:32">(<expr pos:start="231:21" pos:end="231:31"><name pos:start="231:21" pos:end="231:31"><name pos:start="231:21" pos:end="231:23">ost</name><operator pos:start="231:24" pos:end="231:25">-&gt;</operator><name pos:start="231:26" pos:end="231:31">picref</name></name></expr>)</condition> <block pos:start="231:34" pos:end="237:17">{<block_content pos:start="233:21" pos:end="235:90">

                    <expr_stmt pos:start="233:21" pos:end="233:91"><expr pos:start="233:21" pos:end="233:90"><call pos:start="233:21" pos:end="233:90"><name pos:start="233:21" pos:end="233:61">avfilter_fill_frame_from_video_buffer_ref</name><argument_list pos:start="233:62" pos:end="233:90">(<argument pos:start="233:63" pos:end="233:76"><expr pos:start="233:63" pos:end="233:76"><name pos:start="233:63" pos:end="233:76">filtered_frame</name></expr></argument>, <argument pos:start="233:79" pos:end="233:89"><expr pos:start="233:79" pos:end="233:89"><name pos:start="233:79" pos:end="233:89"><name pos:start="233:79" pos:end="233:81">ost</name><operator pos:start="233:82" pos:end="233:83">-&gt;</operator><name pos:start="233:84" pos:end="233:89">picref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="235:21" pos:end="235:90"><expr pos:start="235:21" pos:end="235:89"><name pos:start="235:21" pos:end="235:28"><name pos:start="235:21" pos:end="235:23">ist</name><operator pos:start="235:24" pos:end="235:25">-&gt;</operator><name pos:start="235:26" pos:end="235:28">pts</name></name> <operator pos:start="235:30" pos:end="235:30">=</operator> <call pos:start="235:32" pos:end="235:89"><name pos:start="235:32" pos:end="235:43">av_rescale_q</name><argument_list pos:start="235:44" pos:end="235:89">(<argument pos:start="235:45" pos:end="235:60"><expr pos:start="235:45" pos:end="235:60"><name pos:start="235:45" pos:end="235:60"><name pos:start="235:45" pos:end="235:47">ost</name><operator pos:start="235:48" pos:end="235:49">-&gt;</operator><name pos:start="235:50" pos:end="235:55">picref</name><operator pos:start="235:56" pos:end="235:57">-&gt;</operator><name pos:start="235:58" pos:end="235:60">pts</name></name></expr></argument>, <argument pos:start="235:63" pos:end="235:72"><expr pos:start="235:63" pos:end="235:72"><name pos:start="235:63" pos:end="235:72">ist_pts_tb</name></expr></argument>, <argument pos:start="235:75" pos:end="235:88"><expr pos:start="235:75" pos:end="235:88"><name pos:start="235:75" pos:end="235:88">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="241:13" pos:end="246:0"><if pos:start="241:13" pos:end="246:0">if <condition pos:start="241:16" pos:end="241:63">(<expr pos:start="241:17" pos:end="241:62"><name pos:start="241:17" pos:end="241:34"><name pos:start="241:17" pos:end="241:19">ost</name><operator pos:start="241:20" pos:end="241:21">-&gt;</operator><name pos:start="241:22" pos:end="241:27">picref</name><operator pos:start="241:28" pos:end="241:29">-&gt;</operator><name pos:start="241:30" pos:end="241:34">video</name></name> <operator pos:start="241:36" pos:end="241:37">&amp;&amp;</operator> <operator pos:start="241:39" pos:end="241:39">!</operator><name pos:start="241:40" pos:end="241:62"><name pos:start="241:40" pos:end="241:42">ost</name><operator pos:start="241:43" pos:end="241:44">-&gt;</operator><name pos:start="241:45" pos:end="241:62">frame_aspect_ratio</name></name></expr>)</condition><block type="pseudo" pos:start="243:17" pos:end="246:0"><block_content pos:start="243:17" pos:end="246:0">

                <expr_stmt pos:start="243:17" pos:end="246:0"><expr pos:start="243:17" pos:end="243:93"><name pos:start="243:17" pos:end="243:51"><name pos:start="243:17" pos:end="243:19">ost</name><operator pos:start="243:20" pos:end="243:21">-&gt;</operator><name pos:start="243:22" pos:end="243:23">st</name><operator pos:start="243:24" pos:end="243:25">-&gt;</operator><name pos:start="243:26" pos:end="243:30">codec</name><operator pos:start="243:31" pos:end="243:32">-&gt;</operator><name pos:start="243:33" pos:end="243:51">sample_aspect_ratio</name></name> <operator pos:start="243:53" pos:end="243:53">=</operator> <name pos:start="243:55" pos:end="243:93"><name pos:start="243:55" pos:end="243:57">ost</name><operator pos:start="243:58" pos:end="243:59">-&gt;</operator><name pos:start="243:60" pos:end="243:65">picref</name><operator pos:start="243:66" pos:end="243:67">-&gt;</operator><name pos:start="243:68" pos:end="243:72">video</name><operator pos:start="243:73" pos:end="243:74">-&gt;</operator><name pos:start="243:75" pos:end="243:93">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:else pos:start="245:1" pos:end="245:5">#<cpp:directive pos:start="245:2" pos:end="245:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="247:13" pos:end="250:0"><expr pos:start="247:13" pos:end="247:42"><name pos:start="247:13" pos:end="247:26">filtered_frame</name> <operator pos:start="247:28" pos:end="247:28">=</operator> <name pos:start="247:30" pos:end="247:42">decoded_frame</name></expr>;</expr_stmt>

<cpp:endif pos:start="249:1" pos:end="249:6">#<cpp:directive pos:start="249:2" pos:end="249:6">endif</cpp:directive></cpp:endif>



            <expr_stmt pos:start="253:13" pos:end="255:80"><expr pos:start="253:13" pos:end="255:79"><call pos:start="253:13" pos:end="255:79"><name pos:start="253:13" pos:end="253:24">do_video_out</name><argument_list pos:start="253:25" pos:end="255:79">(<argument pos:start="253:26" pos:end="253:58"><expr pos:start="253:26" pos:end="253:58"><name pos:start="253:26" pos:end="253:54"><name pos:start="253:26" pos:end="253:37">output_files</name><index pos:start="253:38" pos:end="253:54">[<expr pos:start="253:39" pos:end="253:53"><name pos:start="253:39" pos:end="253:53"><name pos:start="253:39" pos:end="253:41">ost</name><operator pos:start="253:42" pos:end="253:43">-&gt;</operator><name pos:start="253:44" pos:end="253:53">file_index</name></name></expr>]</index></name><operator pos:start="253:55" pos:end="253:55">.</operator><name pos:start="253:56" pos:end="253:58">ctx</name></expr></argument>, <argument pos:start="253:61" pos:end="253:63"><expr pos:start="253:61" pos:end="253:63"><name pos:start="253:61" pos:end="253:63">ost</name></expr></argument>, <argument pos:start="253:66" pos:end="253:68"><expr pos:start="253:66" pos:end="253:68"><name pos:start="253:66" pos:end="253:68">ist</name></expr></argument>, <argument pos:start="253:71" pos:end="253:84"><expr pos:start="253:71" pos:end="253:84"><name pos:start="253:71" pos:end="253:84">filtered_frame</name></expr></argument>, <argument pos:start="253:87" pos:end="253:97"><expr pos:start="253:87" pos:end="253:97"><operator pos:start="253:87" pos:end="253:87">&amp;</operator><name pos:start="253:88" pos:end="253:97">frame_size</name></expr></argument>,

                         <argument pos:start="255:26" pos:end="255:78"><expr pos:start="255:26" pos:end="255:78"><ternary pos:start="255:26" pos:end="255:78"><condition pos:start="255:26" pos:end="255:37"><expr pos:start="255:26" pos:end="255:35"><name pos:start="255:26" pos:end="255:35">same_quant</name></expr> ?</condition><then pos:start="255:39" pos:end="255:45"> <expr pos:start="255:39" pos:end="255:45"><name pos:start="255:39" pos:end="255:45">quality</name></expr> </then><else pos:start="255:47" pos:end="255:78">: <expr pos:start="255:49" pos:end="255:78"><name pos:start="255:49" pos:end="255:78"><name pos:start="255:49" pos:end="255:51">ost</name><operator pos:start="255:52" pos:end="255:53">-&gt;</operator><name pos:start="255:54" pos:end="255:55">st</name><operator pos:start="255:56" pos:end="255:57">-&gt;</operator><name pos:start="255:58" pos:end="255:62">codec</name><operator pos:start="255:63" pos:end="255:64">-&gt;</operator><name pos:start="255:65" pos:end="255:78">global_quality</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="257:13" pos:end="262:0"><if pos:start="257:13" pos:end="262:0">if <condition pos:start="257:16" pos:end="257:46">(<expr pos:start="257:17" pos:end="257:45"><name pos:start="257:17" pos:end="257:31">vstats_filename</name> <operator pos:start="257:33" pos:end="257:34">&amp;&amp;</operator> <name pos:start="257:36" pos:end="257:45">frame_size</name></expr>)</condition><block type="pseudo" pos:start="259:17" pos:end="262:0"><block_content pos:start="259:17" pos:end="262:0">

                <expr_stmt pos:start="259:17" pos:end="262:0"><expr pos:start="259:17" pos:end="259:82"><call pos:start="259:17" pos:end="259:82"><name pos:start="259:17" pos:end="259:30">do_video_stats</name><argument_list pos:start="259:31" pos:end="259:82">(<argument pos:start="259:32" pos:end="259:64"><expr pos:start="259:32" pos:end="259:64"><name pos:start="259:32" pos:end="259:60"><name pos:start="259:32" pos:end="259:43">output_files</name><index pos:start="259:44" pos:end="259:60">[<expr pos:start="259:45" pos:end="259:59"><name pos:start="259:45" pos:end="259:59"><name pos:start="259:45" pos:end="259:47">ost</name><operator pos:start="259:48" pos:end="259:49">-&gt;</operator><name pos:start="259:50" pos:end="259:59">file_index</name></name></expr>]</index></name><operator pos:start="259:61" pos:end="259:61">.</operator><name pos:start="259:62" pos:end="259:64">ctx</name></expr></argument>, <argument pos:start="259:67" pos:end="259:69"><expr pos:start="259:67" pos:end="259:69"><name pos:start="259:67" pos:end="259:69">ost</name></expr></argument>, <argument pos:start="259:72" pos:end="259:81"><expr pos:start="259:72" pos:end="259:81"><name pos:start="259:72" pos:end="259:81">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:if pos:start="261:1" pos:end="261:19">#<cpp:directive pos:start="261:2" pos:end="261:3">if</cpp:directive> <expr pos:start="261:5" pos:end="261:19"><name pos:start="261:5" pos:end="261:19">CONFIG_AVFILTER</name></expr></cpp:if>

            <label pos:start="263:13" pos:end="263:17"><name pos:start="263:13" pos:end="263:16">cont</name>:</label>

            <expr_stmt pos:start="265:13" pos:end="265:109"><expr pos:start="265:13" pos:end="265:108"><name pos:start="265:13" pos:end="265:27">frame_available</name> <operator pos:start="265:29" pos:end="265:29">=</operator> <name pos:start="265:31" pos:end="265:54"><name pos:start="265:31" pos:end="265:33">ost</name><operator pos:start="265:34" pos:end="265:35">-&gt;</operator><name pos:start="265:36" pos:end="265:54">output_video_filter</name></name> <operator pos:start="265:56" pos:end="265:57">&amp;&amp;</operator> <call pos:start="265:59" pos:end="265:108"><name pos:start="265:59" pos:end="265:82">av_buffersink_poll_frame</name><argument_list pos:start="265:83" pos:end="265:108">(<argument pos:start="265:84" pos:end="265:107"><expr pos:start="265:84" pos:end="265:107"><name pos:start="265:84" pos:end="265:107"><name pos:start="265:84" pos:end="265:86">ost</name><operator pos:start="265:87" pos:end="265:88">-&gt;</operator><name pos:start="265:89" pos:end="265:107">output_video_filter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:47"><expr pos:start="267:13" pos:end="267:46"><call pos:start="267:13" pos:end="267:46"><name pos:start="267:13" pos:end="267:33">avfilter_unref_buffer</name><argument_list pos:start="267:34" pos:end="267:46">(<argument pos:start="267:35" pos:end="267:45"><expr pos:start="267:35" pos:end="267:45"><name pos:start="267:35" pos:end="267:45"><name pos:start="267:35" pos:end="267:37">ost</name><operator pos:start="267:38" pos:end="267:39">-&gt;</operator><name pos:start="267:40" pos:end="267:45">picref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

<cpp:endif pos:start="271:1" pos:end="271:6">#<cpp:directive pos:start="271:2" pos:end="271:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></for>



    <expr_stmt pos:start="277:5" pos:end="277:28"><expr pos:start="277:5" pos:end="277:27"><call pos:start="277:5" pos:end="277:27"><name pos:start="277:5" pos:end="277:11">av_free</name><argument_list pos:start="277:12" pos:end="277:27">(<argument pos:start="277:13" pos:end="277:26"><expr pos:start="277:13" pos:end="277:26"><name pos:start="277:13" pos:end="277:26">buffer_to_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="279:5" pos:end="279:15">return <expr pos:start="279:12" pos:end="279:14"><name pos:start="279:12" pos:end="279:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
