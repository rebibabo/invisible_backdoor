<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4541.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">net_init_netmap</name><parameter_list pos:start="1:20" pos:end="3:73">(<parameter pos:start="1:21" pos:end="1:48"><decl pos:start="1:21" pos:end="1:48"><type pos:start="1:21" pos:end="1:48"><specifier pos:start="1:21" pos:end="1:25">const</specifier> <name pos:start="1:27" pos:end="1:42">NetClientOptions</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">opts</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:36"><decl pos:start="3:21" pos:end="3:36"><type pos:start="3:21" pos:end="3:36"><specifier pos:start="3:21" pos:end="3:25">const</specifier> <name pos:start="3:27" pos:end="3:30">char</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:36">name</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:58"><decl pos:start="3:39" pos:end="3:58"><type pos:start="3:39" pos:end="3:58"><name pos:start="3:39" pos:end="3:52">NetClientState</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:58">peer</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:72"><decl pos:start="3:61" pos:end="3:72"><type pos:start="3:61" pos:end="3:72"><name pos:start="3:61" pos:end="3:65">Error</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier><modifier pos:start="3:68" pos:end="3:68">*</modifier></type><name pos:start="3:69" pos:end="3:72">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:13">

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:31"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:29">NetdevNetmapOptions</name> <modifier pos:start="7:31" pos:end="7:31">*</modifier></type><name pos:start="7:32" pos:end="7:42">netmap_opts</name> <init pos:start="7:44" pos:end="7:59">= <expr pos:start="7:46" pos:end="7:59"><name pos:start="7:46" pos:end="7:59"><name pos:start="7:46" pos:end="7:49">opts</name><operator pos:start="7:50" pos:end="7:51">-&gt;</operator><name pos:start="7:52" pos:end="7:52">u</name><operator pos:start="7:53" pos:end="7:53">.</operator><name pos:start="7:54" pos:end="7:59">netmap</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:18">nm_desc</name></name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">nmd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">NetClientState</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:22">nc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:14">err</name> <init pos:start="13:16" pos:end="13:21">= <expr pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:15">NetmapState</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:18">s</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:7">nmd</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:40"><name pos:start="19:11" pos:end="19:21">netmap_open</name><argument_list pos:start="19:22" pos:end="19:40">(<argument pos:start="19:23" pos:end="19:33"><expr pos:start="19:23" pos:end="19:33"><name pos:start="19:23" pos:end="19:33">netmap_opts</name></expr></argument>, <argument pos:start="19:36" pos:end="19:39"><expr pos:start="19:36" pos:end="19:39"><operator pos:start="19:36" pos:end="19:36">&amp;</operator><name pos:start="19:37" pos:end="19:39">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">err</name></expr>)</condition> <block pos:start="21:14" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:18">

        <expr_stmt pos:start="23:9" pos:end="23:35"><expr pos:start="23:9" pos:end="23:34"><call pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:23">error_propagate</name><argument_list pos:start="23:24" pos:end="23:34">(<argument pos:start="23:25" pos:end="23:28"><expr pos:start="23:25" pos:end="23:28"><name pos:start="23:25" pos:end="23:28">errp</name></expr></argument>, <argument pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="29:5" pos:end="29:28">/* Create the object. */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:69"><expr pos:start="31:5" pos:end="31:68"><name pos:start="31:5" pos:end="31:6">nc</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:68"><name pos:start="31:10" pos:end="31:28">qemu_new_net_client</name><argument_list pos:start="31:29" pos:end="31:68">(<argument pos:start="31:30" pos:end="31:45"><expr pos:start="31:30" pos:end="31:45"><operator pos:start="31:30" pos:end="31:30">&amp;</operator><name pos:start="31:31" pos:end="31:45">net_netmap_info</name></expr></argument>, <argument pos:start="31:48" pos:end="31:51"><expr pos:start="31:48" pos:end="31:51"><name pos:start="31:48" pos:end="31:51">peer</name></expr></argument>, <argument pos:start="31:54" pos:end="31:61"><expr pos:start="31:54" pos:end="31:61"><literal type="string" pos:start="31:54" pos:end="31:61">"netmap"</literal></expr></argument>, <argument pos:start="31:64" pos:end="31:67"><expr pos:start="31:64" pos:end="31:67"><name pos:start="31:64" pos:end="31:67">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:5">s</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <call pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:17">DO_UPCAST</name><argument_list pos:start="33:18" pos:end="33:38">(<argument pos:start="33:19" pos:end="33:29"><expr pos:start="33:19" pos:end="33:29"><name pos:start="33:19" pos:end="33:29">NetmapState</name></expr></argument>, <argument pos:start="33:32" pos:end="33:33"><expr pos:start="33:32" pos:end="33:33"><name pos:start="33:32" pos:end="33:33">nc</name></expr></argument>, <argument pos:start="33:36" pos:end="33:37"><expr pos:start="33:36" pos:end="33:37"><name pos:start="33:36" pos:end="33:37">nc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:17"><expr pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:10"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:10">nmd</name></name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:16">nmd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:9"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:9">tx</name></name> <operator pos:start="37:11" pos:end="37:11">=</operator> <call pos:start="37:13" pos:end="37:39"><name pos:start="37:13" pos:end="37:25">NETMAP_TXRING</name><argument_list pos:start="37:26" pos:end="37:39">(<argument pos:start="37:27" pos:end="37:35"><expr pos:start="37:27" pos:end="37:35"><name pos:start="37:27" pos:end="37:35"><name pos:start="37:27" pos:end="37:29">nmd</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:35">nifp</name></name></expr></argument>, <argument pos:start="37:38" pos:end="37:38"><expr pos:start="37:38" pos:end="37:38"><literal type="number" pos:start="37:38" pos:end="37:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:9"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:9">rx</name></name> <operator pos:start="39:11" pos:end="39:11">=</operator> <call pos:start="39:13" pos:end="39:39"><name pos:start="39:13" pos:end="39:25">NETMAP_RXRING</name><argument_list pos:start="39:26" pos:end="39:39">(<argument pos:start="39:27" pos:end="39:35"><expr pos:start="39:27" pos:end="39:35"><name pos:start="39:27" pos:end="39:35"><name pos:start="39:27" pos:end="39:29">nmd</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:35">nifp</name></name></expr></argument>, <argument pos:start="39:38" pos:end="39:38"><expr pos:start="39:38" pos:end="39:38"><literal type="number" pos:start="39:38" pos:end="39:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:24"><expr pos:start="41:5" pos:end="41:23"><name pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:19">vnet_hdr_len</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <literal type="number" pos:start="41:23" pos:end="41:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:63"><expr pos:start="43:5" pos:end="43:62"><call pos:start="43:5" pos:end="43:62"><name pos:start="43:5" pos:end="43:11">pstrcpy</name><argument_list pos:start="43:12" pos:end="43:62">(<argument pos:start="43:13" pos:end="43:21"><expr pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:21">ifname</name></name></expr></argument>, <argument pos:start="43:24" pos:end="43:40"><expr pos:start="43:24" pos:end="43:40"><sizeof pos:start="43:24" pos:end="43:40">sizeof<argument_list pos:start="43:30" pos:end="43:40">(<argument pos:start="43:31" pos:end="43:39"><expr pos:start="43:31" pos:end="43:39"><name pos:start="43:31" pos:end="43:39"><name pos:start="43:31" pos:end="43:31">s</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:39">ifname</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="43:43" pos:end="43:61"><expr pos:start="43:43" pos:end="43:61"><name pos:start="43:43" pos:end="43:61"><name pos:start="43:43" pos:end="43:53">netmap_opts</name><operator pos:start="43:54" pos:end="43:55">-&gt;</operator><name pos:start="43:56" pos:end="43:61">ifname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><call pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:20">netmap_read_poll</name><argument_list pos:start="45:21" pos:end="45:29">(<argument pos:start="45:22" pos:end="45:22"><expr pos:start="45:22" pos:end="45:22"><name pos:start="45:22" pos:end="45:22">s</name></expr></argument>, <argument pos:start="45:25" pos:end="45:28"><expr pos:start="45:25" pos:end="45:28"><name pos:start="45:25" pos:end="45:28">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="45:32" pos:end="45:67">/* Initially only poll for reads. */</comment>



    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
