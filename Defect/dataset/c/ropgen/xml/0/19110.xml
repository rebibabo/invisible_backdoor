<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19110.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name> <name pos:start="1:16" pos:end="1:27">coroutine_fn</name></type> <name pos:start="1:29" pos:end="1:51">vdi_co_get_block_status</name><parameter_list pos:start="1:52" pos:end="3:54">(<parameter pos:start="1:53" pos:end="1:72"><decl pos:start="1:53" pos:end="1:72"><type pos:start="1:53" pos:end="1:72"><name pos:start="1:53" pos:end="1:68">BlockDriverState</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:72">bs</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:26"><decl pos:start="3:9" pos:end="3:26"><type pos:start="3:9" pos:end="3:26"><name pos:start="3:9" pos:end="3:15">int64_t</name></type> <name pos:start="3:17" pos:end="3:26">sector_num</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:42">nb_sectors</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:53"><decl pos:start="3:45" pos:end="3:53"><type pos:start="3:45" pos:end="3:53"><name pos:start="3:45" pos:end="3:47">int</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:53">pnum</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="9:5" pos:end="51:62">

    <comment type="block" pos:start="7:5" pos:end="7:78">/* TODO: Check for too large sector_num (in bdrv_is_allocated or here). */</comment>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">BDRVVdiState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name> <init pos:start="9:21" pos:end="9:48">= <expr pos:start="9:23" pos:end="9:48"><operator pos:start="9:23" pos:end="9:23">(</operator><name pos:start="9:24" pos:end="9:35">BDRVVdiState</name> <operator pos:start="9:37" pos:end="9:37">*</operator><operator pos:start="9:38" pos:end="9:38">)</operator><name pos:start="9:39" pos:end="9:48"><name pos:start="9:39" pos:end="9:40">bs</name><operator pos:start="9:41" pos:end="9:42">-&gt;</operator><name pos:start="9:43" pos:end="9:48">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:54"><decl pos:start="11:5" pos:end="11:53"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:21">bmap_index</name> <init pos:start="11:23" pos:end="11:53">= <expr pos:start="11:25" pos:end="11:53"><name pos:start="11:25" pos:end="11:34">sector_num</name> <operator pos:start="11:36" pos:end="11:36">/</operator> <name pos:start="11:38" pos:end="11:53"><name pos:start="11:38" pos:end="11:38">s</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:53">block_sectors</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:59"><decl pos:start="13:5" pos:end="13:58"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">size_t</name></type> <name pos:start="13:12" pos:end="13:26">sector_in_block</name> <init pos:start="13:28" pos:end="13:58">= <expr pos:start="13:30" pos:end="13:58"><name pos:start="13:30" pos:end="13:39">sector_num</name> <operator pos:start="13:41" pos:end="13:41">%</operator> <name pos:start="13:43" pos:end="13:58"><name pos:start="13:43" pos:end="13:43">s</name><operator pos:start="13:44" pos:end="13:45">-&gt;</operator><name pos:start="13:46" pos:end="13:58">block_sectors</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:55"><decl pos:start="15:5" pos:end="15:54"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">n_sectors</name> <init pos:start="15:19" pos:end="15:54">= <expr pos:start="15:21" pos:end="15:54"><name pos:start="15:21" pos:end="15:36"><name pos:start="15:21" pos:end="15:21">s</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:36">block_sectors</name></name> <operator pos:start="15:38" pos:end="15:38">-</operator> <name pos:start="15:40" pos:end="15:54">sector_in_block</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:59"><decl pos:start="17:5" pos:end="17:58"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:23">bmap_entry</name> <init pos:start="17:25" pos:end="17:58">= <expr pos:start="17:27" pos:end="17:58"><call pos:start="17:27" pos:end="17:58"><name pos:start="17:27" pos:end="17:37">le32_to_cpu</name><argument_list pos:start="17:38" pos:end="17:58">(<argument pos:start="17:39" pos:end="17:57"><expr pos:start="17:39" pos:end="17:57"><name pos:start="17:39" pos:end="17:57"><name pos:start="17:39" pos:end="17:39">s</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:45">bmap</name><index pos:start="17:46" pos:end="17:57">[<expr pos:start="17:47" pos:end="17:56"><name pos:start="17:47" pos:end="17:56">bmap_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint64_t</name></type> <name pos:start="19:14" pos:end="19:19">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:15"><decl pos:start="21:5" pos:end="21:14"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:14">result</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:74"><expr pos:start="25:5" pos:end="25:73"><call pos:start="25:5" pos:end="25:73"><name pos:start="25:5" pos:end="25:10">logout</name><argument_list pos:start="25:11" pos:end="25:73">(<argument pos:start="25:12" pos:end="25:38"><expr pos:start="25:12" pos:end="25:38"><literal type="string" pos:start="25:12" pos:end="25:18">"%p, %"</literal> <name pos:start="25:20" pos:end="25:25">PRId64</name> <literal type="string" pos:start="25:27" pos:end="25:38">", %d, %p\n"</literal></expr></argument>, <argument pos:start="25:41" pos:end="25:42"><expr pos:start="25:41" pos:end="25:42"><name pos:start="25:41" pos:end="25:42">bs</name></expr></argument>, <argument pos:start="25:45" pos:end="25:54"><expr pos:start="25:45" pos:end="25:54"><name pos:start="25:45" pos:end="25:54">sector_num</name></expr></argument>, <argument pos:start="25:57" pos:end="25:66"><expr pos:start="25:57" pos:end="25:66"><name pos:start="25:57" pos:end="25:66">nb_sectors</name></expr></argument>, <argument pos:start="25:69" pos:end="25:72"><expr pos:start="25:69" pos:end="25:72"><name pos:start="25:69" pos:end="25:72">pnum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:31">(<expr pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:17">n_sectors</name> <operator pos:start="27:19" pos:end="27:19">&gt;</operator> <name pos:start="27:21" pos:end="27:30">nb_sectors</name></expr>)</condition> <block pos:start="27:33" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:31">

        <expr_stmt pos:start="29:9" pos:end="29:31"><expr pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:17">n_sectors</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:30">nb_sectors</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:22"><expr pos:start="33:5" pos:end="33:21"><operator pos:start="33:5" pos:end="33:5">*</operator><name pos:start="33:6" pos:end="33:9">pnum</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <name pos:start="33:13" pos:end="33:21">n_sectors</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:10">result</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <call pos:start="35:14" pos:end="35:41"><name pos:start="35:14" pos:end="35:29">VDI_IS_ALLOCATED</name><argument_list pos:start="35:30" pos:end="35:41">(<argument pos:start="35:31" pos:end="35:40"><expr pos:start="35:31" pos:end="35:40"><name pos:start="35:31" pos:end="35:40">bmap_entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:15">result</name></expr>)</condition> <block pos:start="37:18" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:17">

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="49:60"><expr pos:start="45:5" pos:end="49:59"><name pos:start="45:5" pos:end="45:10">offset</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:34"><name pos:start="45:14" pos:end="45:14">s</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:22">header</name><operator pos:start="45:23" pos:end="45:23">.</operator><name pos:start="45:24" pos:end="45:34">offset_data</name></name> <operator pos:start="45:36" pos:end="45:36">+</operator>

                              <operator pos:start="47:31" pos:end="47:31">(</operator><name pos:start="47:32" pos:end="47:39">uint64_t</name><operator pos:start="47:40" pos:end="47:40">)</operator><name pos:start="47:41" pos:end="47:50">bmap_entry</name> <operator pos:start="47:52" pos:end="47:52">*</operator> <name pos:start="47:54" pos:end="47:66"><name pos:start="47:54" pos:end="47:54">s</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:66">block_size</name></name> <operator pos:start="47:68" pos:end="47:68">+</operator>

                              <name pos:start="49:31" pos:end="49:45">sector_in_block</name> <operator pos:start="49:47" pos:end="49:47">*</operator> <name pos:start="49:49" pos:end="49:59">SECTOR_SIZE</name></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:62">return <expr pos:start="51:12" pos:end="51:61"><name pos:start="51:12" pos:end="51:26">BDRV_BLOCK_DATA</name> <operator pos:start="51:28" pos:end="51:28">|</operator> <name pos:start="51:30" pos:end="51:52">BDRV_BLOCK_OFFSET_VALID</name> <operator pos:start="51:54" pos:end="51:54">|</operator> <name pos:start="51:56" pos:end="51:61">offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
