<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8656.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">qemu_acl</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:23">qemu_acl_init</name><parameter_list pos:start="1:24" pos:end="1:44">(<parameter pos:start="1:25" pos:end="1:43"><decl pos:start="1:25" pos:end="1:43"><type pos:start="1:25" pos:end="1:36"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:43">aclname</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:15">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">qemu_acl</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">acl</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:33"><expr pos:start="9:5" pos:end="9:32"><name pos:start="9:5" pos:end="9:7">acl</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:32"><name pos:start="9:11" pos:end="9:23">qemu_acl_find</name><argument_list pos:start="9:24" pos:end="9:32">(<argument pos:start="9:25" pos:end="9:31"><expr pos:start="9:25" pos:end="9:31"><name pos:start="9:25" pos:end="9:31">aclname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="13:19"><if pos:start="11:5" pos:end="13:19">if <condition pos:start="11:8" pos:end="11:12">(<expr pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">acl</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:19"><block_content pos:start="13:9" pos:end="13:19">

        <return pos:start="13:9" pos:end="13:19">return <expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">acl</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:7">acl</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:35"><name pos:start="17:11" pos:end="17:21">qemu_malloc</name><argument_list pos:start="17:22" pos:end="17:35">(<argument pos:start="17:23" pos:end="17:34"><expr pos:start="17:23" pos:end="17:34"><sizeof pos:start="17:23" pos:end="17:34">sizeof<argument_list pos:start="17:29" pos:end="17:34">(<argument pos:start="17:30" pos:end="17:33"><expr pos:start="17:30" pos:end="17:33"><operator pos:start="17:30" pos:end="17:30">*</operator><name pos:start="17:31" pos:end="17:33">acl</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:40"><expr pos:start="19:5" pos:end="19:39"><name pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:7">acl</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:16">aclname</name></name> <operator pos:start="19:18" pos:end="19:18">=</operator> <call pos:start="19:20" pos:end="19:39"><name pos:start="19:20" pos:end="19:30">qemu_strdup</name><argument_list pos:start="19:31" pos:end="19:39">(<argument pos:start="19:32" pos:end="19:38"><expr pos:start="19:32" pos:end="19:38"><name pos:start="19:32" pos:end="19:38">aclname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="21:5" pos:end="25:32">/* Deny by default, so there is no window of "open

     * access" between QEMU starting, and the user setting

     * up ACLs in the monitor */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:25"><expr pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:7">acl</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:20">defaultDeny</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <literal type="number" pos:start="27:24" pos:end="27:24">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:7">acl</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:17">nentries</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><call pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:14">TAILQ_INIT</name><argument_list pos:start="33:15" pos:end="33:29">(<argument pos:start="33:16" pos:end="33:28"><expr pos:start="33:16" pos:end="33:28"><operator pos:start="33:16" pos:end="33:16">&amp;</operator><name pos:start="33:17" pos:end="33:28"><name pos:start="33:17" pos:end="33:19">acl</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:28">entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:58"><expr pos:start="37:5" pos:end="37:57"><name pos:start="37:5" pos:end="37:8">acls</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:57"><name pos:start="37:12" pos:end="37:23">qemu_realloc</name><argument_list pos:start="37:24" pos:end="37:57">(<argument pos:start="37:25" pos:end="37:28"><expr pos:start="37:25" pos:end="37:28"><name pos:start="37:25" pos:end="37:28">acls</name></expr></argument>, <argument pos:start="37:31" pos:end="37:56"><expr pos:start="37:31" pos:end="37:56"><sizeof pos:start="37:31" pos:end="37:43">sizeof<argument_list pos:start="37:37" pos:end="37:43">(<argument pos:start="37:38" pos:end="37:42"><expr pos:start="37:38" pos:end="37:42"><operator pos:start="37:38" pos:end="37:38">*</operator><name pos:start="37:39" pos:end="37:42">acls</name></expr></argument>)</argument_list></sizeof> <operator pos:start="37:45" pos:end="37:45">*</operator> <operator pos:start="37:47" pos:end="37:47">(</operator><name pos:start="37:48" pos:end="37:52">nacls</name> <operator pos:start="37:54" pos:end="37:54">+</operator><literal type="number" pos:start="37:55" pos:end="37:55">1</literal><operator pos:start="37:56" pos:end="37:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:22"><expr pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:15"><name pos:start="39:5" pos:end="39:8">acls</name><index pos:start="39:9" pos:end="39:15">[<expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:14">nacls</name></expr>]</index></name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:21">acl</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:12"><expr pos:start="41:5" pos:end="41:11"><name pos:start="41:5" pos:end="41:9">nacls</name><operator pos:start="41:10" pos:end="41:11">++</operator></expr>;</expr_stmt>



    <return pos:start="45:5" pos:end="45:15">return <expr pos:start="45:12" pos:end="45:14"><name pos:start="45:12" pos:end="45:14">acl</name></expr>;</return>

</block_content>}</block></function>
</unit>
