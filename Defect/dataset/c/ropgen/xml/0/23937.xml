<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23937.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">qxl_post_load</name><parameter_list pos:start="1:25" pos:end="1:51">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:50"><decl pos:start="1:40" pos:end="1:50"><type pos:start="1:40" pos:end="1:50"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:50">version</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:13">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:16">PCIQXLDevice</name><modifier pos:start="5:17" pos:end="5:17">*</modifier></type> <name pos:start="5:19" pos:end="5:19">d</name> <init pos:start="5:21" pos:end="5:28">= <expr pos:start="5:23" pos:end="5:28"><name pos:start="5:23" pos:end="5:28">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:22">ram_start</name> <init pos:start="7:24" pos:end="7:40">= <expr pos:start="7:26" pos:end="7:40"><name pos:start="7:26" pos:end="7:40"><name pos:start="7:26" pos:end="7:26">d</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:31">vga</name><operator pos:start="7:32" pos:end="7:32">.</operator><name pos:start="7:33" pos:end="7:40">vram_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">QXLCommandExt</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:23">cmds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">in</name></decl>, <decl pos:start="11:13" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:15">out</name></decl>, <decl pos:start="11:18" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:18">i</name></decl>, <decl pos:start="11:21" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:27">newmode</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><call pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:10">dprint</name><argument_list pos:start="15:11" pos:end="15:45">(<argument pos:start="15:12" pos:end="15:12"><expr pos:start="15:12" pos:end="15:12"><name pos:start="15:12" pos:end="15:12">d</name></expr></argument>, <argument pos:start="15:15" pos:end="15:15"><expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">1</literal></expr></argument>, <argument pos:start="15:18" pos:end="15:30"><expr pos:start="15:18" pos:end="15:30"><literal type="string" pos:start="15:18" pos:end="15:30">"%s: start\n"</literal></expr></argument>, <argument pos:start="15:33" pos:end="15:44"><expr pos:start="15:33" pos:end="15:44"><name pos:start="15:33" pos:end="15:44">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:54"><expr pos:start="19:5" pos:end="19:53"><call pos:start="19:5" pos:end="19:53"><name pos:start="19:5" pos:end="19:10">assert</name><argument_list pos:start="19:11" pos:end="19:53">(<argument pos:start="19:12" pos:end="19:52"><expr pos:start="19:12" pos:end="19:52"><name pos:start="19:12" pos:end="19:33"><name pos:start="19:12" pos:end="19:12">d</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:33">last_release_offset</name></name> <operator pos:start="19:35" pos:end="19:35">&lt;</operator> <name pos:start="19:37" pos:end="19:52"><name pos:start="19:37" pos:end="19:37">d</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:42">vga</name><operator pos:start="19:43" pos:end="19:43">.</operator><name pos:start="19:44" pos:end="19:52">vram_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:36">(<expr pos:start="21:9" pos:end="21:35"><name pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:9">d</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:30">last_release_offset</name></name> <operator pos:start="21:32" pos:end="21:33">==</operator> <literal type="number" pos:start="21:35" pos:end="21:35">0</literal></expr>)</condition> <block pos:start="21:38" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:31">

        <expr_stmt pos:start="23:9" pos:end="23:31"><expr pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:9">d</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:23">last_release</name></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <name pos:start="23:27" pos:end="23:30">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="29:5">else <block pos:start="25:12" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:81">

        <expr_stmt pos:start="27:9" pos:end="27:81"><expr pos:start="27:9" pos:end="27:80"><name pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:9">d</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:23">last_release</name></name> <operator pos:start="27:25" pos:end="27:25">=</operator> <operator pos:start="27:27" pos:end="27:27">(</operator><name pos:start="27:28" pos:end="27:41">QXLReleaseInfo</name> <operator pos:start="27:43" pos:end="27:43">*</operator><operator pos:start="27:44" pos:end="27:44">)</operator><operator pos:start="27:45" pos:end="27:45">(</operator><name pos:start="27:46" pos:end="27:54">ram_start</name> <operator pos:start="27:56" pos:end="27:56">+</operator> <name pos:start="27:58" pos:end="27:79"><name pos:start="27:58" pos:end="27:58">d</name><operator pos:start="27:59" pos:end="27:60">-&gt;</operator><name pos:start="27:61" pos:end="27:79">last_release_offset</name></name><operator pos:start="27:80" pos:end="27:80">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:68"><expr pos:start="33:5" pos:end="33:67"><name pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:5">d</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:12">modes</name></name> <operator pos:start="33:14" pos:end="33:14">=</operator> <operator pos:start="33:16" pos:end="33:16">(</operator><name pos:start="33:17" pos:end="33:24">QXLModes</name><operator pos:start="33:25" pos:end="33:25">*</operator><operator pos:start="33:26" pos:end="33:26">)</operator><operator pos:start="33:27" pos:end="33:27">(</operator><operator pos:start="33:28" pos:end="33:28">(</operator><name pos:start="33:29" pos:end="33:35">uint8_t</name><operator pos:start="33:36" pos:end="33:36">*</operator><operator pos:start="33:37" pos:end="33:37">)</operator><name pos:start="33:38" pos:end="33:43"><name pos:start="33:38" pos:end="33:38">d</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:43">rom</name></name> <operator pos:start="33:45" pos:end="33:45">+</operator> <name pos:start="33:47" pos:end="33:66"><name pos:start="33:47" pos:end="33:47">d</name><operator pos:start="33:48" pos:end="33:49">-&gt;</operator><name pos:start="33:50" pos:end="33:52">rom</name><operator pos:start="33:53" pos:end="33:54">-&gt;</operator><name pos:start="33:55" pos:end="33:66">modes_offset</name></name><operator pos:start="33:67" pos:end="33:67">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="39:37"><expr pos:start="37:5" pos:end="39:36"><call pos:start="37:5" pos:end="39:36"><name pos:start="37:5" pos:end="37:10">dprint</name><argument_list pos:start="37:11" pos:end="39:36">(<argument pos:start="37:12" pos:end="37:12"><expr pos:start="37:12" pos:end="37:12"><name pos:start="37:12" pos:end="37:12">d</name></expr></argument>, <argument pos:start="37:15" pos:end="37:15"><expr pos:start="37:15" pos:end="37:15"><literal type="number" pos:start="37:15" pos:end="37:15">1</literal></expr></argument>, <argument pos:start="37:18" pos:end="37:42"><expr pos:start="37:18" pos:end="37:42"><literal type="string" pos:start="37:18" pos:end="37:42">"%s: restore mode (%s)\n"</literal></expr></argument>, <argument pos:start="37:45" pos:end="37:56"><expr pos:start="37:45" pos:end="37:56"><name pos:start="37:45" pos:end="37:56">__FUNCTION__</name></expr></argument>,

        <argument pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:35"><call pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:26">qxl_mode_to_string</name><argument_list pos:start="39:27" pos:end="39:35">(<argument pos:start="39:28" pos:end="39:34"><expr pos:start="39:28" pos:end="39:34"><name pos:start="39:28" pos:end="39:34"><name pos:start="39:28" pos:end="39:28">d</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:34">mode</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:22"><expr pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:11">newmode</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:21"><name pos:start="41:15" pos:end="41:15">d</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:21">mode</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:11"><name pos:start="43:5" pos:end="43:5">d</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:11">mode</name></name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:32">QXL_MODE_UNDEFINED</name></expr>;</expr_stmt>

    <switch pos:start="45:5" pos:end="119:5">switch <condition pos:start="45:12" pos:end="45:20">(<expr pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:19">newmode</name></expr>)</condition> <block pos:start="45:22" pos:end="119:5">{<block_content pos:start="47:5" pos:end="117:14">

    <case pos:start="47:5" pos:end="47:28">case <expr pos:start="47:10" pos:end="47:27"><name pos:start="47:10" pos:end="47:27">QXL_MODE_UNDEFINED</name></expr>:</case>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:22">case <expr pos:start="51:10" pos:end="51:21"><name pos:start="51:10" pos:end="51:21">QXL_MODE_VGA</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><call pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:26">qxl_enter_vga_mode</name><argument_list pos:start="53:27" pos:end="53:29">(<argument pos:start="53:28" pos:end="53:28"><expr pos:start="53:28" pos:end="53:28"><name pos:start="53:28" pos:end="53:28">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:25">case <expr pos:start="57:10" pos:end="57:24"><name pos:start="57:10" pos:end="57:24">QXL_MODE_NATIVE</name></expr>:</case>

        <for pos:start="59:9" pos:end="69:9">for <control pos:start="59:13" pos:end="59:42">(<init pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:14">i</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>;</init> <condition pos:start="59:21" pos:end="59:37"><expr pos:start="59:21" pos:end="59:36"><name pos:start="59:21" pos:end="59:21">i</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <name pos:start="59:25" pos:end="59:36">NUM_MEMSLOTS</name></expr>;</condition> <incr pos:start="59:39" pos:end="59:41"><expr pos:start="59:39" pos:end="59:41"><name pos:start="59:39" pos:end="59:39">i</name><operator pos:start="59:40" pos:end="59:41">++</operator></expr></incr>)</control> <block pos:start="59:44" pos:end="69:9">{<block_content pos:start="61:13" pos:end="67:47">

            <if_stmt pos:start="61:13" pos:end="65:13"><if pos:start="61:13" pos:end="65:13">if <condition pos:start="61:16" pos:end="61:42">(<expr pos:start="61:17" pos:end="61:41"><operator pos:start="61:17" pos:end="61:17">!</operator><name pos:start="61:18" pos:end="61:34"><name pos:start="61:18" pos:end="61:18">d</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:31">guest_slots</name><index pos:start="61:32" pos:end="61:34">[<expr pos:start="61:33" pos:end="61:33"><name pos:start="61:33" pos:end="61:33">i</name></expr>]</index></name><operator pos:start="61:35" pos:end="61:35">.</operator><name pos:start="61:36" pos:end="61:41">active</name></expr>)</condition> <block pos:start="61:44" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:25">

                <continue pos:start="63:17" pos:end="63:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:47"><expr pos:start="67:13" pos:end="67:46"><call pos:start="67:13" pos:end="67:46"><name pos:start="67:13" pos:end="67:27">qxl_add_memslot</name><argument_list pos:start="67:28" pos:end="67:46">(<argument pos:start="67:29" pos:end="67:29"><expr pos:start="67:29" pos:end="67:29"><name pos:start="67:29" pos:end="67:29">d</name></expr></argument>, <argument pos:start="67:32" pos:end="67:32"><expr pos:start="67:32" pos:end="67:32"><name pos:start="67:32" pos:end="67:32">i</name></expr></argument>, <argument pos:start="67:35" pos:end="67:35"><expr pos:start="67:35" pos:end="67:35"><literal type="number" pos:start="67:35" pos:end="67:35">0</literal></expr></argument>, <argument pos:start="67:38" pos:end="67:45"><expr pos:start="67:38" pos:end="67:45"><name pos:start="67:38" pos:end="67:45">QXL_SYNC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="71:9" pos:end="71:49"><expr pos:start="71:9" pos:end="71:48"><call pos:start="71:9" pos:end="71:48"><name pos:start="71:9" pos:end="71:32">qxl_create_guest_primary</name><argument_list pos:start="71:33" pos:end="71:48">(<argument pos:start="71:34" pos:end="71:34"><expr pos:start="71:34" pos:end="71:34"><name pos:start="71:34" pos:end="71:34">d</name></expr></argument>, <argument pos:start="71:37" pos:end="71:37"><expr pos:start="71:37" pos:end="71:37"><literal type="number" pos:start="71:37" pos:end="71:37">1</literal></expr></argument>, <argument pos:start="71:40" pos:end="71:47"><expr pos:start="71:40" pos:end="71:47"><name pos:start="71:40" pos:end="71:47">QXL_SYNC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="75:9" pos:end="75:59">/* replay surface-create and cursor-set commands */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:69"><expr pos:start="77:9" pos:end="77:68"><name pos:start="77:9" pos:end="77:12">cmds</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <call pos:start="77:16" pos:end="77:68"><name pos:start="77:16" pos:end="77:24">g_malloc0</name><argument_list pos:start="77:25" pos:end="77:68">(<argument pos:start="77:26" pos:end="77:67"><expr pos:start="77:26" pos:end="77:67"><sizeof pos:start="77:26" pos:end="77:46">sizeof<argument_list pos:start="77:32" pos:end="77:46">(<argument pos:start="77:33" pos:end="77:45"><expr pos:start="77:33" pos:end="77:45"><name pos:start="77:33" pos:end="77:45">QXLCommandExt</name></expr></argument>)</argument_list></sizeof> <operator pos:start="77:48" pos:end="77:48">*</operator> <operator pos:start="77:50" pos:end="77:50">(</operator><name pos:start="77:51" pos:end="77:62">NUM_SURFACES</name> <operator pos:start="77:64" pos:end="77:64">+</operator> <literal type="number" pos:start="77:66" pos:end="77:66">1</literal><operator pos:start="77:67" pos:end="77:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="79:9" pos:end="95:9">for <control pos:start="79:13" pos:end="79:54">(<init pos:start="79:14" pos:end="79:29"><expr pos:start="79:14" pos:end="79:19"><name pos:start="79:14" pos:end="79:15">in</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <literal type="number" pos:start="79:19" pos:end="79:19">0</literal></expr><operator pos:start="79:20" pos:end="79:20">,</operator> <expr pos:start="79:22" pos:end="79:28"><name pos:start="79:22" pos:end="79:24">out</name> <operator pos:start="79:26" pos:end="79:26">=</operator> <literal type="number" pos:start="79:28" pos:end="79:28">0</literal></expr>;</init> <condition pos:start="79:31" pos:end="79:48"><expr pos:start="79:31" pos:end="79:47"><name pos:start="79:31" pos:end="79:32">in</name> <operator pos:start="79:34" pos:end="79:34">&lt;</operator> <name pos:start="79:36" pos:end="79:47">NUM_SURFACES</name></expr>;</condition> <incr pos:start="79:50" pos:end="79:53"><expr pos:start="79:50" pos:end="79:53"><name pos:start="79:50" pos:end="79:51">in</name><operator pos:start="79:52" pos:end="79:53">++</operator></expr></incr>)</control> <block pos:start="79:56" pos:end="95:9">{<block_content pos:start="81:13" pos:end="93:18">

            <if_stmt pos:start="81:13" pos:end="85:13"><if pos:start="81:13" pos:end="85:13">if <condition pos:start="81:16" pos:end="81:48">(<expr pos:start="81:17" pos:end="81:47"><name pos:start="81:17" pos:end="81:42"><name pos:start="81:17" pos:end="81:17">d</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:33">guest_surfaces</name><operator pos:start="81:34" pos:end="81:34">.</operator><name pos:start="81:35" pos:end="81:38">cmds</name><index pos:start="81:39" pos:end="81:42">[<expr pos:start="81:40" pos:end="81:41"><name pos:start="81:40" pos:end="81:41">in</name></expr>]</index></name> <operator pos:start="81:44" pos:end="81:45">==</operator> <literal type="number" pos:start="81:47" pos:end="81:47">0</literal></expr>)</condition> <block pos:start="81:50" pos:end="85:13">{<block_content pos:start="83:17" pos:end="83:25">

                <continue pos:start="83:17" pos:end="83:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:60"><expr pos:start="87:13" pos:end="87:59"><name pos:start="87:13" pos:end="87:21"><name pos:start="87:13" pos:end="87:16">cmds</name><index pos:start="87:17" pos:end="87:21">[<expr pos:start="87:18" pos:end="87:20"><name pos:start="87:18" pos:end="87:20">out</name></expr>]</index></name><operator pos:start="87:22" pos:end="87:22">.</operator><name pos:start="87:23" pos:end="87:30"><name pos:start="87:23" pos:end="87:25">cmd</name><operator pos:start="87:26" pos:end="87:26">.</operator><name pos:start="87:27" pos:end="87:30">data</name></name> <operator pos:start="87:32" pos:end="87:32">=</operator> <name pos:start="87:34" pos:end="87:59"><name pos:start="87:34" pos:end="87:34">d</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:50">guest_surfaces</name><operator pos:start="87:51" pos:end="87:51">.</operator><name pos:start="87:52" pos:end="87:55">cmds</name><index pos:start="87:56" pos:end="87:59">[<expr pos:start="87:57" pos:end="87:58"><name pos:start="87:57" pos:end="87:58">in</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:49"><expr pos:start="89:13" pos:end="89:48"><name pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:16">cmds</name><index pos:start="89:17" pos:end="89:21">[<expr pos:start="89:18" pos:end="89:20"><name pos:start="89:18" pos:end="89:20">out</name></expr>]</index></name><operator pos:start="89:22" pos:end="89:22">.</operator><name pos:start="89:23" pos:end="89:30"><name pos:start="89:23" pos:end="89:25">cmd</name><operator pos:start="89:26" pos:end="89:26">.</operator><name pos:start="89:27" pos:end="89:30">type</name></name> <operator pos:start="89:32" pos:end="89:32">=</operator> <name pos:start="89:34" pos:end="89:48">QXL_CMD_SURFACE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:53"><expr pos:start="91:13" pos:end="91:52"><name pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:16">cmds</name><index pos:start="91:17" pos:end="91:21">[<expr pos:start="91:18" pos:end="91:20"><name pos:start="91:18" pos:end="91:20">out</name></expr>]</index></name><operator pos:start="91:22" pos:end="91:22">.</operator><name pos:start="91:23" pos:end="91:30">group_id</name> <operator pos:start="91:32" pos:end="91:32">=</operator> <name pos:start="91:34" pos:end="91:52">MEMSLOT_GROUP_GUEST</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:18"><expr pos:start="93:13" pos:end="93:17"><name pos:start="93:13" pos:end="93:15">out</name><operator pos:start="93:16" pos:end="93:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="97:9" pos:end="97:45"><expr pos:start="97:9" pos:end="97:44"><name pos:start="97:9" pos:end="97:17"><name pos:start="97:9" pos:end="97:12">cmds</name><index pos:start="97:13" pos:end="97:17">[<expr pos:start="97:14" pos:end="97:16"><name pos:start="97:14" pos:end="97:16">out</name></expr>]</index></name><operator pos:start="97:18" pos:end="97:18">.</operator><name pos:start="97:19" pos:end="97:26"><name pos:start="97:19" pos:end="97:21">cmd</name><operator pos:start="97:22" pos:end="97:22">.</operator><name pos:start="97:23" pos:end="97:26">data</name></name> <operator pos:start="97:28" pos:end="97:28">=</operator> <name pos:start="97:30" pos:end="97:44"><name pos:start="97:30" pos:end="97:30">d</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:44">guest_cursor</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:44"><expr pos:start="99:9" pos:end="99:43"><name pos:start="99:9" pos:end="99:17"><name pos:start="99:9" pos:end="99:12">cmds</name><index pos:start="99:13" pos:end="99:17">[<expr pos:start="99:14" pos:end="99:16"><name pos:start="99:14" pos:end="99:16">out</name></expr>]</index></name><operator pos:start="99:18" pos:end="99:18">.</operator><name pos:start="99:19" pos:end="99:26"><name pos:start="99:19" pos:end="99:21">cmd</name><operator pos:start="99:22" pos:end="99:22">.</operator><name pos:start="99:23" pos:end="99:26">type</name></name> <operator pos:start="99:28" pos:end="99:28">=</operator> <name pos:start="99:30" pos:end="99:43">QXL_CMD_CURSOR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:49"><expr pos:start="101:9" pos:end="101:48"><name pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:12">cmds</name><index pos:start="101:13" pos:end="101:17">[<expr pos:start="101:14" pos:end="101:16"><name pos:start="101:14" pos:end="101:16">out</name></expr>]</index></name><operator pos:start="101:18" pos:end="101:18">.</operator><name pos:start="101:19" pos:end="101:26">group_id</name> <operator pos:start="101:28" pos:end="101:28">=</operator> <name pos:start="101:30" pos:end="101:48">MEMSLOT_GROUP_GUEST</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:14"><expr pos:start="103:9" pos:end="103:13"><name pos:start="103:9" pos:end="103:11">out</name><operator pos:start="103:12" pos:end="103:13">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:48"><expr pos:start="105:9" pos:end="105:47"><call pos:start="105:9" pos:end="105:47"><name pos:start="105:9" pos:end="105:33">qxl_spice_loadvm_commands</name><argument_list pos:start="105:34" pos:end="105:47">(<argument pos:start="105:35" pos:end="105:35"><expr pos:start="105:35" pos:end="105:35"><name pos:start="105:35" pos:end="105:35">d</name></expr></argument>, <argument pos:start="105:38" pos:end="105:41"><expr pos:start="105:38" pos:end="105:41"><name pos:start="105:38" pos:end="105:41">cmds</name></expr></argument>, <argument pos:start="105:44" pos:end="105:46"><expr pos:start="105:44" pos:end="105:46"><name pos:start="105:44" pos:end="105:46">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:21"><expr pos:start="107:9" pos:end="107:20"><call pos:start="107:9" pos:end="107:20"><name pos:start="107:9" pos:end="107:14">g_free</name><argument_list pos:start="107:15" pos:end="107:20">(<argument pos:start="107:16" pos:end="107:19"><expr pos:start="107:16" pos:end="107:19"><name pos:start="107:16" pos:end="107:19">cmds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <break pos:start="111:9" pos:end="111:14">break;</break>

    <case pos:start="113:5" pos:end="113:25">case <expr pos:start="113:10" pos:end="113:24"><name pos:start="113:10" pos:end="113:24">QXL_MODE_COMPAT</name></expr>:</case>

        <expr_stmt pos:start="115:9" pos:end="115:47"><expr pos:start="115:9" pos:end="115:46"><call pos:start="115:9" pos:end="115:46"><name pos:start="115:9" pos:end="115:20">qxl_set_mode</name><argument_list pos:start="115:21" pos:end="115:46">(<argument pos:start="115:22" pos:end="115:22"><expr pos:start="115:22" pos:end="115:22"><name pos:start="115:22" pos:end="115:22">d</name></expr></argument>, <argument pos:start="115:25" pos:end="115:42"><expr pos:start="115:25" pos:end="115:42"><name pos:start="115:25" pos:end="115:42"><name pos:start="115:25" pos:end="115:25">d</name><operator pos:start="115:26" pos:end="115:27">-&gt;</operator><name pos:start="115:28" pos:end="115:37">shadow_rom</name><operator pos:start="115:38" pos:end="115:38">.</operator><name pos:start="115:39" pos:end="115:42">mode</name></name></expr></argument>, <argument pos:start="115:45" pos:end="115:45"><expr pos:start="115:45" pos:end="115:45"><literal type="number" pos:start="115:45" pos:end="115:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="117:9" pos:end="117:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="121:5" pos:end="121:45"><expr pos:start="121:5" pos:end="121:44"><call pos:start="121:5" pos:end="121:44"><name pos:start="121:5" pos:end="121:10">dprint</name><argument_list pos:start="121:11" pos:end="121:44">(<argument pos:start="121:12" pos:end="121:12"><expr pos:start="121:12" pos:end="121:12"><name pos:start="121:12" pos:end="121:12">d</name></expr></argument>, <argument pos:start="121:15" pos:end="121:15"><expr pos:start="121:15" pos:end="121:15"><literal type="number" pos:start="121:15" pos:end="121:15">1</literal></expr></argument>, <argument pos:start="121:18" pos:end="121:29"><expr pos:start="121:18" pos:end="121:29"><literal type="string" pos:start="121:18" pos:end="121:29">"%s: done\n"</literal></expr></argument>, <argument pos:start="121:32" pos:end="121:43"><expr pos:start="121:32" pos:end="121:43"><name pos:start="121:32" pos:end="121:43">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><literal type="number" pos:start="125:12" pos:end="125:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
