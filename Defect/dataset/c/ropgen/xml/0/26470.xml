<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26470.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">ftp_auth</name><parameter_list pos:start="1:20" pos:end="1:34">(<parameter pos:start="1:21" pos:end="1:33"><decl pos:start="1:21" pos:end="1:33"><type pos:start="1:21" pos:end="1:32"><name pos:start="1:21" pos:end="1:30">FTPContext</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:13">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">user</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>, <decl pos:start="5:30" pos:end="5:41"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:34">pass</name> <init pos:start="5:36" pos:end="5:41">= <expr pos:start="5:38" pos:end="5:41"><name pos:start="5:38" pos:end="5:41">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:85"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:13">end</name> <init pos:start="7:15" pos:end="7:20">= <expr pos:start="7:17" pos:end="7:20"><name pos:start="7:17" pos:end="7:20">NULL</name></expr></init></decl>, <decl pos:start="7:23" pos:end="7:46"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:23" pos:end="7:46"><name pos:start="7:23" pos:end="7:25">buf</name><index pos:start="7:26" pos:end="7:46">[<expr pos:start="7:27" pos:end="7:45"><name pos:start="7:27" pos:end="7:45">CONTROL_BUFFER_SIZE</name></expr>]</index></name></decl>, <decl pos:start="7:49" pos:end="7:84"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:49" pos:end="7:84"><name pos:start="7:49" pos:end="7:59">credencials</name><index pos:start="7:60" pos:end="7:84">[<expr pos:start="7:61" pos:end="7:83"><name pos:start="7:61" pos:end="7:83">CREDENTIALS_BUFFER_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:26"><name pos:start="11:15" pos:end="11:24">user_codes</name><index pos:start="11:25" pos:end="11:26">[]</index></name> <init pos:start="11:28" pos:end="11:42">= <expr pos:start="11:30" pos:end="11:42"><block pos:start="11:30" pos:end="11:42">{<expr pos:start="11:31" pos:end="11:33"><literal type="number" pos:start="11:31" pos:end="11:33">331</literal></expr>, <expr pos:start="11:36" pos:end="11:38"><literal type="number" pos:start="11:36" pos:end="11:38">230</literal></expr>, <expr pos:start="11:41" pos:end="11:41"><literal type="number" pos:start="11:41" pos:end="11:41">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:26"><name pos:start="13:15" pos:end="13:24">pass_codes</name><index pos:start="13:25" pos:end="13:26">[]</index></name> <init pos:start="13:28" pos:end="13:37">= <expr pos:start="13:30" pos:end="13:37"><block pos:start="13:30" pos:end="13:37">{<expr pos:start="13:31" pos:end="13:33"><literal type="number" pos:start="13:31" pos:end="13:33">230</literal></expr>, <expr pos:start="13:36" pos:end="13:36"><literal type="number" pos:start="13:36" pos:end="13:36">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:73">/* Authentication may be repeated, original string has to be saved */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:65"><expr pos:start="19:5" pos:end="19:64"><call pos:start="19:5" pos:end="19:64"><name pos:start="19:5" pos:end="19:14">av_strlcpy</name><argument_list pos:start="19:15" pos:end="19:64">(<argument pos:start="19:16" pos:end="19:26"><expr pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:26">credencials</name></expr></argument>, <argument pos:start="19:29" pos:end="19:42"><expr pos:start="19:29" pos:end="19:42"><name pos:start="19:29" pos:end="19:42"><name pos:start="19:29" pos:end="19:29">s</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:42">credencials</name></name></expr></argument>, <argument pos:start="19:45" pos:end="19:63"><expr pos:start="19:45" pos:end="19:63"><sizeof pos:start="19:45" pos:end="19:63">sizeof<argument_list pos:start="19:51" pos:end="19:63">(<argument pos:start="19:52" pos:end="19:62"><expr pos:start="19:52" pos:end="19:62"><name pos:start="19:52" pos:end="19:62">credencials</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:8">user</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:44"><name pos:start="23:12" pos:end="23:20">av_strtok</name><argument_list pos:start="23:21" pos:end="23:44">(<argument pos:start="23:22" pos:end="23:32"><expr pos:start="23:22" pos:end="23:32"><name pos:start="23:22" pos:end="23:32">credencials</name></expr></argument>, <argument pos:start="23:35" pos:end="23:37"><expr pos:start="23:35" pos:end="23:37"><literal type="string" pos:start="23:35" pos:end="23:37">":"</literal></expr></argument>, <argument pos:start="23:40" pos:end="23:43"><expr pos:start="23:40" pos:end="23:43"><operator pos:start="23:40" pos:end="23:40">&amp;</operator><name pos:start="23:41" pos:end="23:43">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:8">pass</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:36"><name pos:start="25:12" pos:end="25:20">av_strtok</name><argument_list pos:start="25:21" pos:end="25:36">(<argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:24">end</name></expr></argument>, <argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><literal type="string" pos:start="25:27" pos:end="25:29">":"</literal></expr></argument>, <argument pos:start="25:32" pos:end="25:35"><expr pos:start="25:32" pos:end="25:35"><operator pos:start="25:32" pos:end="25:32">&amp;</operator><name pos:start="25:33" pos:end="25:35">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:14">(<expr pos:start="29:9" pos:end="29:13"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:13">user</name></expr>)</condition> <block pos:start="29:16" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:76">

        <expr_stmt pos:start="31:9" pos:end="31:27"><expr pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:12">user</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <literal type="string" pos:start="31:16" pos:end="31:26">"anonymous"</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:76"><expr pos:start="33:9" pos:end="33:75"><name pos:start="33:9" pos:end="33:12">pass</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <ternary pos:start="33:16" pos:end="33:75"><condition pos:start="33:16" pos:end="33:38"><expr pos:start="33:16" pos:end="33:36"><name pos:start="33:16" pos:end="33:36"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:36">anonymous_password</name></name></expr> ?</condition><then pos:start="33:40" pos:end="33:60"> <expr pos:start="33:40" pos:end="33:60"><name pos:start="33:40" pos:end="33:60"><name pos:start="33:40" pos:end="33:40">s</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:60">anonymous_password</name></name></expr> </then><else pos:start="33:62" pos:end="33:75">: <expr pos:start="33:64" pos:end="33:75"><literal type="string" pos:start="33:64" pos:end="33:75">"nopassword"</literal></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:52"><expr pos:start="39:5" pos:end="39:51"><call pos:start="39:5" pos:end="39:51"><name pos:start="39:5" pos:end="39:12">snprintf</name><argument_list pos:start="39:13" pos:end="39:51">(<argument pos:start="39:14" pos:end="39:16"><expr pos:start="39:14" pos:end="39:16"><name pos:start="39:14" pos:end="39:16">buf</name></expr></argument>, <argument pos:start="39:19" pos:end="39:29"><expr pos:start="39:19" pos:end="39:29"><sizeof pos:start="39:19" pos:end="39:29">sizeof<argument_list pos:start="39:25" pos:end="39:29">(<argument pos:start="39:26" pos:end="39:28"><expr pos:start="39:26" pos:end="39:28"><name pos:start="39:26" pos:end="39:28">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:32" pos:end="39:44"><expr pos:start="39:32" pos:end="39:44"><literal type="string" pos:start="39:32" pos:end="39:44">"USER %s\r\n"</literal></expr></argument>, <argument pos:start="39:47" pos:end="39:50"><expr pos:start="39:47" pos:end="39:50"><name pos:start="39:47" pos:end="39:50">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:53"><expr pos:start="41:5" pos:end="41:52"><name pos:start="41:5" pos:end="41:7">err</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:52"><name pos:start="41:11" pos:end="41:26">ftp_send_command</name><argument_list pos:start="41:27" pos:end="41:52">(<argument pos:start="41:28" pos:end="41:28"><expr pos:start="41:28" pos:end="41:28"><name pos:start="41:28" pos:end="41:28">s</name></expr></argument>, <argument pos:start="41:31" pos:end="41:33"><expr pos:start="41:31" pos:end="41:33"><name pos:start="41:31" pos:end="41:33">buf</name></expr></argument>, <argument pos:start="41:36" pos:end="41:45"><expr pos:start="41:36" pos:end="41:45"><name pos:start="41:36" pos:end="41:45">user_codes</name></expr></argument>, <argument pos:start="41:48" pos:end="41:51"><expr pos:start="41:48" pos:end="41:51"><name pos:start="41:48" pos:end="41:51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="55:5"><if pos:start="43:5" pos:end="55:5">if <condition pos:start="43:8" pos:end="43:19">(<expr pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:11">err</name> <operator pos:start="43:13" pos:end="43:14">==</operator> <literal type="number" pos:start="43:16" pos:end="43:18">331</literal></expr>)</condition> <block pos:start="43:21" pos:end="55:5">{<block_content pos:start="45:9" pos:end="53:35">

        <if_stmt pos:start="45:9" pos:end="53:35"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:17">(<expr pos:start="45:13" pos:end="45:16"><name pos:start="45:13" pos:end="45:16">pass</name></expr>)</condition> <block pos:start="45:19" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:61">

            <expr_stmt pos:start="47:13" pos:end="47:60"><expr pos:start="47:13" pos:end="47:59"><call pos:start="47:13" pos:end="47:59"><name pos:start="47:13" pos:end="47:20">snprintf</name><argument_list pos:start="47:21" pos:end="47:59">(<argument pos:start="47:22" pos:end="47:24"><expr pos:start="47:22" pos:end="47:24"><name pos:start="47:22" pos:end="47:24">buf</name></expr></argument>, <argument pos:start="47:27" pos:end="47:37"><expr pos:start="47:27" pos:end="47:37"><sizeof pos:start="47:27" pos:end="47:37">sizeof<argument_list pos:start="47:33" pos:end="47:37">(<argument pos:start="47:34" pos:end="47:36"><expr pos:start="47:34" pos:end="47:36"><name pos:start="47:34" pos:end="47:36">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="47:40" pos:end="47:52"><expr pos:start="47:40" pos:end="47:52"><literal type="string" pos:start="47:40" pos:end="47:52">"PASS %s\r\n"</literal></expr></argument>, <argument pos:start="47:55" pos:end="47:58"><expr pos:start="47:55" pos:end="47:58"><name pos:start="47:55" pos:end="47:58">pass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:61"><expr pos:start="49:13" pos:end="49:60"><name pos:start="49:13" pos:end="49:15">err</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="49:60"><name pos:start="49:19" pos:end="49:34">ftp_send_command</name><argument_list pos:start="49:35" pos:end="49:60">(<argument pos:start="49:36" pos:end="49:36"><expr pos:start="49:36" pos:end="49:36"><name pos:start="49:36" pos:end="49:36">s</name></expr></argument>, <argument pos:start="49:39" pos:end="49:41"><expr pos:start="49:39" pos:end="49:41"><name pos:start="49:39" pos:end="49:41">buf</name></expr></argument>, <argument pos:start="49:44" pos:end="49:53"><expr pos:start="49:44" pos:end="49:53"><name pos:start="49:44" pos:end="49:53">pass_codes</name></expr></argument>, <argument pos:start="49:56" pos:end="49:59"><expr pos:start="49:56" pos:end="49:59"><name pos:start="49:56" pos:end="49:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="53:35">else<block type="pseudo" pos:start="53:13" pos:end="53:35"><block_content pos:start="53:13" pos:end="53:35">

            <return pos:start="53:13" pos:end="53:35">return <expr pos:start="53:20" pos:end="53:34"><call pos:start="53:20" pos:end="53:34"><name pos:start="53:20" pos:end="53:26">AVERROR</name><argument_list pos:start="53:27" pos:end="53:34">(<argument pos:start="53:28" pos:end="53:33"><expr pos:start="53:28" pos:end="53:33"><name pos:start="53:28" pos:end="53:33">EACCES</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="59:31"><if pos:start="57:5" pos:end="59:31">if <condition pos:start="57:8" pos:end="57:13">(<expr pos:start="57:9" pos:end="57:12"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:12">err</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:31"><block_content pos:start="59:9" pos:end="59:31">

        <return pos:start="59:9" pos:end="59:31">return <expr pos:start="59:16" pos:end="59:30"><call pos:start="59:16" pos:end="59:30"><name pos:start="59:16" pos:end="59:22">AVERROR</name><argument_list pos:start="59:23" pos:end="59:30">(<argument pos:start="59:24" pos:end="59:29"><expr pos:start="59:24" pos:end="59:29"><name pos:start="59:24" pos:end="59:29">EACCES</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
