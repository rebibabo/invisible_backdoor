<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26602.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">xan_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:55">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:40"><decl pos:start="5:29" pos:end="5:40"><type pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:35">uint8_t</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:40">buf</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:54"><decl pos:start="5:43" pos:end="5:54"><type pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:54">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="87:1">{<block_content pos:start="9:5" pos:end="85:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">XanContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">s</name> <init pos:start="9:19" pos:end="9:36">= <expr pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:25">avctx</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:55"><decl pos:start="11:5" pos:end="11:54"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">AVPaletteControl</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:37">palette_control</name> <init pos:start="11:39" pos:end="11:54">= <expr pos:start="11:41" pos:end="11:54"><name pos:start="11:41" pos:end="11:54"><name pos:start="11:41" pos:end="11:45">avctx</name><operator pos:start="11:46" pos:end="11:47">-&gt;</operator><name pos:start="11:48" pos:end="11:54">palctrl</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">keyframe</name> <init pos:start="13:18" pos:end="13:20">= <expr pos:start="13:20" pos:end="13:20"><literal type="number" pos:start="13:20" pos:end="13:20">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="31:5"><if pos:start="17:5" pos:end="31:5">if <condition pos:start="17:8" pos:end="17:41">(<expr pos:start="17:9" pos:end="17:40"><name pos:start="17:9" pos:end="17:40"><name pos:start="17:9" pos:end="17:23">palette_control</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:40">palette_changed</name></name></expr>)</condition> <block pos:start="17:43" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:21">

        <comment type="block" pos:start="19:9" pos:end="19:64">/* load the new palette and reset the palette control */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:59"><expr pos:start="21:9" pos:end="21:58"><call pos:start="21:9" pos:end="21:58"><name pos:start="21:9" pos:end="21:29">xan_wc3_build_palette</name><argument_list pos:start="21:30" pos:end="21:58">(<argument pos:start="21:31" pos:end="21:31"><expr pos:start="21:31" pos:end="21:31"><name pos:start="21:31" pos:end="21:31">s</name></expr></argument>, <argument pos:start="21:34" pos:end="21:57"><expr pos:start="21:34" pos:end="21:57"><name pos:start="21:34" pos:end="21:57"><name pos:start="21:34" pos:end="21:48">palette_control</name><operator pos:start="21:49" pos:end="21:50">-&gt;</operator><name pos:start="21:51" pos:end="21:57">palette</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="23:9" pos:end="23:56">/* If pal8 we clear flag when we copy palette */</comment>

        <if_stmt pos:start="25:9" pos:end="27:49"><if pos:start="25:9" pos:end="27:49">if <condition pos:start="25:12" pos:end="25:46">(<expr pos:start="25:13" pos:end="25:45"><name pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:20">avctx</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:29">pix_fmt</name></name> <operator pos:start="25:31" pos:end="25:32">!=</operator> <name pos:start="25:34" pos:end="25:45">PIX_FMT_PAL8</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:49"><block_content pos:start="27:13" pos:end="27:49">

            <expr_stmt pos:start="27:13" pos:end="27:49"><expr pos:start="27:13" pos:end="27:48"><name pos:start="27:13" pos:end="27:44"><name pos:start="27:13" pos:end="27:27">palette_control</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:44">palette_changed</name></name> <operator pos:start="27:46" pos:end="27:46">=</operator> <literal type="number" pos:start="27:48" pos:end="27:48">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:21"><expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:16">keyframe</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <literal type="number" pos:start="29:20" pos:end="29:20">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:52">(<expr pos:start="35:9" pos:end="35:51"><call pos:start="35:9" pos:end="35:51"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:13">avctx</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:25">get_buffer</name></name><argument_list pos:start="35:26" pos:end="35:51">(<argument pos:start="35:27" pos:end="35:31"><expr pos:start="35:27" pos:end="35:31"><name pos:start="35:27" pos:end="35:31">avctx</name></expr></argument>, <argument pos:start="35:34" pos:end="35:50"><expr pos:start="35:34" pos:end="35:50"><operator pos:start="35:34" pos:end="35:34">&amp;</operator><name pos:start="35:35" pos:end="35:50"><name pos:start="35:35" pos:end="35:35">s</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:50">current_frame</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:54" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:18">

        <expr_stmt pos:start="37:9" pos:end="37:77"><expr pos:start="37:9" pos:end="37:76"><call pos:start="37:9" pos:end="37:76"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:76">(<argument pos:start="37:16" pos:end="37:23"><expr pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:23">avctx</name></name></expr></argument>, <argument pos:start="37:26" pos:end="37:37"><expr pos:start="37:26" pos:end="37:37"><name pos:start="37:26" pos:end="37:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:40" pos:end="37:75"><expr pos:start="37:40" pos:end="37:75"><literal type="string" pos:start="37:40" pos:end="37:75">"  Xan Video: get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:35"><expr pos:start="43:5" pos:end="43:34"><name pos:start="43:5" pos:end="43:30"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:20">current_frame</name><operator pos:start="43:21" pos:end="43:21">.</operator><name pos:start="43:22" pos:end="43:30">reference</name></name> <operator pos:start="43:32" pos:end="43:32">=</operator> <literal type="number" pos:start="43:34" pos:end="43:34">3</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:17"><expr pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:10"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:10">buf</name></name> <operator pos:start="47:12" pos:end="47:12">=</operator> <name pos:start="47:14" pos:end="47:16">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:23"><expr pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:11"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:11">size</name></name> <operator pos:start="49:13" pos:end="49:13">=</operator> <name pos:start="49:15" pos:end="49:22">buf_size</name></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="59:32"><if pos:start="53:5" pos:end="55:32">if <condition pos:start="53:8" pos:end="53:45">(<expr pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:13">avctx</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:20">codec</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:24">id</name></name> <operator pos:start="53:26" pos:end="53:27">==</operator> <name pos:start="53:29" pos:end="53:44">CODEC_ID_XAN_WC3</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:32"><block_content pos:start="55:9" pos:end="55:32">

        <expr_stmt pos:start="55:9" pos:end="55:32"><expr pos:start="55:9" pos:end="55:31"><call pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:28">xan_wc3_decode_frame</name><argument_list pos:start="55:29" pos:end="55:31">(<argument pos:start="55:30" pos:end="55:30"><expr pos:start="55:30" pos:end="55:30"><name pos:start="55:30" pos:end="55:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="57:5" pos:end="59:32">else if <condition pos:start="57:13" pos:end="57:50">(<expr pos:start="57:14" pos:end="57:49"><name pos:start="57:14" pos:end="57:29"><name pos:start="57:14" pos:end="57:18">avctx</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:25">codec</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:29">id</name></name> <operator pos:start="57:31" pos:end="57:32">==</operator> <name pos:start="57:34" pos:end="57:49">CODEC_ID_XAN_WC4</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:32"><block_content pos:start="59:9" pos:end="59:32">

        <expr_stmt pos:start="59:9" pos:end="59:32"><expr pos:start="59:9" pos:end="59:31"><call pos:start="59:9" pos:end="59:31"><name pos:start="59:9" pos:end="59:28">xan_wc4_decode_frame</name><argument_list pos:start="59:29" pos:end="59:31">(<argument pos:start="59:30" pos:end="59:30"><expr pos:start="59:30" pos:end="59:30"><name pos:start="59:30" pos:end="59:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:51">/* release the last frame if it is allocated */</comment>

    <if_stmt pos:start="65:5" pos:end="67:53"><if pos:start="65:5" pos:end="67:53">if <condition pos:start="65:8" pos:end="65:30">(<expr pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:21">last_frame</name><operator pos:start="65:22" pos:end="65:22">.</operator><name pos:start="65:23" pos:end="65:26">data</name><index pos:start="65:27" pos:end="65:29">[<expr pos:start="65:28" pos:end="65:28"><literal type="number" pos:start="65:28" pos:end="65:28">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:53"><block_content pos:start="67:9" pos:end="67:53">

        <expr_stmt pos:start="67:9" pos:end="67:53"><expr pos:start="67:9" pos:end="67:52"><call pos:start="67:9" pos:end="67:52"><name pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:13">avctx</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:29">release_buffer</name></name><argument_list pos:start="67:30" pos:end="67:52">(<argument pos:start="67:31" pos:end="67:35"><expr pos:start="67:31" pos:end="67:35"><name pos:start="67:31" pos:end="67:35">avctx</name></expr></argument>, <argument pos:start="67:38" pos:end="67:51"><expr pos:start="67:38" pos:end="67:51"><operator pos:start="67:38" pos:end="67:38">&amp;</operator><name pos:start="67:39" pos:end="67:51"><name pos:start="67:39" pos:end="67:39">s</name><operator pos:start="67:40" pos:end="67:41">-&gt;</operator><name pos:start="67:42" pos:end="67:51">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:24">/* shuffle frames */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:37"><expr pos:start="73:5" pos:end="73:36"><name pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:17">last_frame</name></name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:36"><name pos:start="73:21" pos:end="73:21">s</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:36">current_frame</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:33"><expr pos:start="77:5" pos:end="77:32"><operator pos:start="77:5" pos:end="77:5">*</operator><name pos:start="77:6" pos:end="77:14">data_size</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <sizeof pos:start="77:18" pos:end="77:32">sizeof<argument_list pos:start="77:24" pos:end="77:32">(<argument pos:start="77:25" pos:end="77:31"><expr pos:start="77:25" pos:end="77:31"><name pos:start="77:25" pos:end="77:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:39"><expr pos:start="79:5" pos:end="79:38"><operator pos:start="79:5" pos:end="79:5">*</operator><operator pos:start="79:6" pos:end="79:6">(</operator><name pos:start="79:7" pos:end="79:13">AVFrame</name><operator pos:start="79:14" pos:end="79:14">*</operator><operator pos:start="79:15" pos:end="79:15">)</operator><name pos:start="79:16" pos:end="79:19">data</name> <operator pos:start="79:21" pos:end="79:21">=</operator> <name pos:start="79:23" pos:end="79:38"><name pos:start="79:23" pos:end="79:23">s</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:38">current_frame</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:63">/* always report that the buffer was completely consumed */</comment>

    <return pos:start="85:5" pos:end="85:20">return <expr pos:start="85:12" pos:end="85:19"><name pos:start="85:12" pos:end="85:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
