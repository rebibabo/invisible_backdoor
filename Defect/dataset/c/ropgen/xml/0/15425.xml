<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15425.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:10">BlockAIOCB</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:34">thread_pool_submit_aio</name><parameter_list pos:start="1:35" pos:end="5:46">(<parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:45">ThreadPool</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">pool</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:28"><decl pos:start="3:9" pos:end="3:28"><type pos:start="3:9" pos:end="3:28"><name pos:start="3:9" pos:end="3:22">ThreadPoolFunc</name> <modifier pos:start="3:24" pos:end="3:24">*</modifier></type><name pos:start="3:25" pos:end="3:28">func</name></decl></parameter>, <parameter pos:start="3:31" pos:end="3:39"><decl pos:start="3:31" pos:end="3:39"><type pos:start="3:31" pos:end="3:39"><name pos:start="3:31" pos:end="3:34">void</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:39">arg</name></decl></parameter>,

        <parameter pos:start="5:9" pos:end="5:31"><decl pos:start="5:9" pos:end="5:31"><type pos:start="5:9" pos:end="5:31"><name pos:start="5:9" pos:end="5:27">BlockCompletionFunc</name> <modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:31">cb</name></decl></parameter>, <parameter pos:start="5:34" pos:end="5:45"><decl pos:start="5:34" pos:end="5:45"><type pos:start="5:34" pos:end="5:45"><name pos:start="5:34" pos:end="5:37">void</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier></type><name pos:start="5:40" pos:end="5:45">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="49:1">{<block_content pos:start="9:5" pos:end="47:24">

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">ThreadPoolElement</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:26">req</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:66"><expr pos:start="13:5" pos:end="13:65"><name pos:start="13:5" pos:end="13:7">req</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:65"><name pos:start="13:11" pos:end="13:22">qemu_aio_get</name><argument_list pos:start="13:23" pos:end="13:65">(<argument pos:start="13:24" pos:end="13:46"><expr pos:start="13:24" pos:end="13:46"><operator pos:start="13:24" pos:end="13:24">&amp;</operator><name pos:start="13:25" pos:end="13:46">thread_pool_aiocb_info</name></expr></argument>, <argument pos:start="13:49" pos:end="13:52"><expr pos:start="13:49" pos:end="13:52"><name pos:start="13:49" pos:end="13:52">NULL</name></expr></argument>, <argument pos:start="13:55" pos:end="13:56"><expr pos:start="13:55" pos:end="13:56"><name pos:start="13:55" pos:end="13:56">cb</name></expr></argument>, <argument pos:start="13:59" pos:end="13:64"><expr pos:start="13:59" pos:end="13:64"><name pos:start="13:59" pos:end="13:64">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:7">req</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:13">func</name></name> <operator pos:start="15:15" pos:end="15:15">=</operator> <name pos:start="15:17" pos:end="15:20">func</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:7">req</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:12">arg</name></name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:18">arg</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:7">req</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:14">state</name></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <name pos:start="19:18" pos:end="19:30">THREAD_QUEUED</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:7">req</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:13">pool</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:20">pool</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:45"><expr pos:start="25:5" pos:end="25:44"><call pos:start="25:5" pos:end="25:44"><name pos:start="25:5" pos:end="25:21">QLIST_INSERT_HEAD</name><argument_list pos:start="25:22" pos:end="25:44">(<argument pos:start="25:23" pos:end="25:33"><expr pos:start="25:23" pos:end="25:33"><operator pos:start="25:23" pos:end="25:23">&amp;</operator><name pos:start="25:24" pos:end="25:33"><name pos:start="25:24" pos:end="25:27">pool</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:33">head</name></name></expr></argument>, <argument pos:start="25:36" pos:end="25:38"><expr pos:start="25:36" pos:end="25:38"><name pos:start="25:36" pos:end="25:38">req</name></expr></argument>, <argument pos:start="25:41" pos:end="25:43"><expr pos:start="25:41" pos:end="25:43"><name pos:start="25:41" pos:end="25:43">all</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><call pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:28">trace_thread_pool_submit</name><argument_list pos:start="29:29" pos:end="29:44">(<argument pos:start="29:30" pos:end="29:33"><expr pos:start="29:30" pos:end="29:33"><name pos:start="29:30" pos:end="29:33">pool</name></expr></argument>, <argument pos:start="29:36" pos:end="29:38"><expr pos:start="29:36" pos:end="29:38"><name pos:start="29:36" pos:end="29:38">req</name></expr></argument>, <argument pos:start="29:41" pos:end="29:43"><expr pos:start="29:41" pos:end="29:43"><name pos:start="29:41" pos:end="29:43">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><call pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:19">qemu_mutex_lock</name><argument_list pos:start="33:20" pos:end="33:32">(<argument pos:start="33:21" pos:end="33:31"><expr pos:start="33:21" pos:end="33:31"><operator pos:start="33:21" pos:end="33:21">&amp;</operator><name pos:start="33:22" pos:end="33:31"><name pos:start="33:22" pos:end="33:25">pool</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:73">(<expr pos:start="35:9" pos:end="35:72"><name pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:12">pool</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:26">idle_threads</name></name> <operator pos:start="35:28" pos:end="35:29">==</operator> <literal type="number" pos:start="35:31" pos:end="35:31">0</literal> <operator pos:start="35:33" pos:end="35:34">&amp;&amp;</operator> <name pos:start="35:36" pos:end="35:52"><name pos:start="35:36" pos:end="35:39">pool</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:52">cur_threads</name></name> <operator pos:start="35:54" pos:end="35:54">&lt;</operator> <name pos:start="35:56" pos:end="35:72"><name pos:start="35:56" pos:end="35:59">pool</name><operator pos:start="35:60" pos:end="35:61">-&gt;</operator><name pos:start="35:62" pos:end="35:72">max_threads</name></name></expr>)</condition> <block pos:start="35:75" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:27">

        <expr_stmt pos:start="37:9" pos:end="37:27"><expr pos:start="37:9" pos:end="37:26"><call pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:20">spawn_thread</name><argument_list pos:start="37:21" pos:end="37:26">(<argument pos:start="37:22" pos:end="37:25"><expr pos:start="37:22" pos:end="37:25"><name pos:start="37:22" pos:end="37:25">pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:55"><expr pos:start="41:5" pos:end="41:54"><call pos:start="41:5" pos:end="41:54"><name pos:start="41:5" pos:end="41:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="41:23" pos:end="41:54">(<argument pos:start="41:24" pos:end="41:42"><expr pos:start="41:24" pos:end="41:42"><operator pos:start="41:24" pos:end="41:24">&amp;</operator><name pos:start="41:25" pos:end="41:42"><name pos:start="41:25" pos:end="41:28">pool</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:42">request_list</name></name></expr></argument>, <argument pos:start="41:45" pos:end="41:47"><expr pos:start="41:45" pos:end="41:47"><name pos:start="41:45" pos:end="41:47">req</name></expr></argument>, <argument pos:start="41:50" pos:end="41:53"><expr pos:start="41:50" pos:end="41:53"><name pos:start="41:50" pos:end="41:53">reqs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:35"><expr pos:start="43:5" pos:end="43:34"><call pos:start="43:5" pos:end="43:34"><name pos:start="43:5" pos:end="43:21">qemu_mutex_unlock</name><argument_list pos:start="43:22" pos:end="43:34">(<argument pos:start="43:23" pos:end="43:33"><expr pos:start="43:23" pos:end="43:33"><operator pos:start="43:23" pos:end="43:23">&amp;</operator><name pos:start="43:24" pos:end="43:33"><name pos:start="43:24" pos:end="43:27">pool</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:33">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><call pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:17">qemu_sem_post</name><argument_list pos:start="45:18" pos:end="45:29">(<argument pos:start="45:19" pos:end="45:28"><expr pos:start="45:19" pos:end="45:28"><operator pos:start="45:19" pos:end="45:19">&amp;</operator><name pos:start="45:20" pos:end="45:28"><name pos:start="45:20" pos:end="45:23">pool</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:28">sem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="47:5" pos:end="47:24">return <expr pos:start="47:12" pos:end="47:23"><operator pos:start="47:12" pos:end="47:12">&amp;</operator><name pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:15">req</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:23">common</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
