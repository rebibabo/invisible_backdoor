<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1585.c" pos:tabs="8"><function pos:start="1:1" pos:end="243:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_p_mbs</name><parameter_list pos:start="1:24" pos:end="1:38">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:34">VC9Context</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="243:1">{<block_content pos:start="5:5" pos:end="241:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">x</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">y</name></decl>, <decl pos:start="5:15" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:24">current_mb</name> <init pos:start="5:26" pos:end="5:28">= <expr pos:start="5:28" pos:end="5:28"><literal type="number" pos:start="5:28" pos:end="5:28">0</literal></expr></init></decl>, <decl pos:start="5:31" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:31" pos:end="5:31">i</name></decl>;</decl_stmt> <comment type="block" pos:start="5:34" pos:end="5:61">/* MB/Block Position info */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">skip_mb_bit</name> <init pos:start="7:21" pos:end="7:23">= <expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">0</literal></expr></init></decl>, <decl pos:start="7:26" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:26" pos:end="7:30">cbpcy</name></decl>;</decl_stmt> <comment type="block" pos:start="7:33" pos:end="7:47">/* MB/B skip */</comment>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">hybrid_pred</name></decl>, <decl pos:start="9:22" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:28">ac_pred</name></decl>;</decl_stmt> <comment type="block" pos:start="9:31" pos:end="9:52">/* Prediction types */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:21">mb_has_coeffs</name> <init pos:start="11:23" pos:end="11:25">= <expr pos:start="11:25" pos:end="11:25"><literal type="number" pos:start="11:25" pos:end="11:25">1</literal></expr></init></decl>  <comment type="block" pos:start="11:28" pos:end="11:42">/* last_flag */</comment>, <decl pos:start="11:45" pos:end="11:55"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:45" pos:end="11:55">mb_is_intra</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">dmv_x</name></decl>, <decl pos:start="13:16" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:20">dmv_y</name></decl>;</decl_stmt> <comment type="block" pos:start="13:23" pos:end="13:54">/* Differential MV components */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">mv_mode_bit</name> <init pos:start="15:21" pos:end="15:23">= <expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="15:26" pos:end="15:56">/* mv_mode_bit: 1MV=0, 4MV=0 */</comment>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">mqdiff</name></decl>, <decl pos:start="17:17" pos:end="17:22"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:17" pos:end="17:22">mquant</name></decl>;</decl_stmt> <comment type="block" pos:start="17:25" pos:end="17:45">/* MB quantization */</comment>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">tt_block</name></decl>;</decl_stmt> <comment type="block" pos:start="19:19" pos:end="19:41">/* MB Transform type */</comment>

    <decl_stmt pos:start="21:5" pos:end="23:49"><decl pos:start="21:5" pos:end="21:57"><type pos:start="21:5" pos:end="21:20"><specifier pos:start="21:5" pos:end="21:10">static</specifier> <specifier pos:start="21:12" pos:end="21:16">const</specifier> <name pos:start="21:18" pos:end="21:20">int</name></type> <name pos:start="21:22" pos:end="21:34"><name pos:start="21:22" pos:end="21:31">size_table</name><index pos:start="21:32" pos:end="21:34">[<expr pos:start="21:33" pos:end="21:33"><literal type="number" pos:start="21:33" pos:end="21:33">6</literal></expr>]</index></name> <init pos:start="21:36" pos:end="21:57">= <expr pos:start="21:38" pos:end="21:57"><block pos:start="21:38" pos:end="21:57">{ <expr pos:start="21:40" pos:end="21:40"><literal type="number" pos:start="21:40" pos:end="21:40">0</literal></expr>, <expr pos:start="21:43" pos:end="21:43"><literal type="number" pos:start="21:43" pos:end="21:43">2</literal></expr>, <expr pos:start="21:46" pos:end="21:46"><literal type="number" pos:start="21:46" pos:end="21:46">3</literal></expr>, <expr pos:start="21:49" pos:end="21:49"><literal type="number" pos:start="21:49" pos:end="21:49">4</literal></expr>, <expr pos:start="21:52" pos:end="21:52"><literal type="number" pos:start="21:52" pos:end="21:52">5</literal></expr>, <expr pos:start="21:55" pos:end="21:55"><literal type="number" pos:start="21:55" pos:end="21:55">8</literal></expr> }</block></expr></init></decl>,

        <decl pos:start="23:9" pos:end="23:48"><type ref="prev" pos:start="21:5" pos:end="21:20"/><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:20">offset_table</name><index pos:start="23:21" pos:end="23:23">[<expr pos:start="23:22" pos:end="23:22"><literal type="number" pos:start="23:22" pos:end="23:22">6</literal></expr>]</index></name> <init pos:start="23:25" pos:end="23:48">= <expr pos:start="23:27" pos:end="23:48"><block pos:start="23:27" pos:end="23:48">{ <expr pos:start="23:29" pos:end="23:29"><literal type="number" pos:start="23:29" pos:end="23:29">0</literal></expr>, <expr pos:start="23:32" pos:end="23:32"><literal type="number" pos:start="23:32" pos:end="23:32">1</literal></expr>, <expr pos:start="23:35" pos:end="23:35"><literal type="number" pos:start="23:35" pos:end="23:35">3</literal></expr>, <expr pos:start="23:38" pos:end="23:38"><literal type="number" pos:start="23:38" pos:end="23:38">7</literal></expr>, <expr pos:start="23:41" pos:end="23:42"><literal type="number" pos:start="23:41" pos:end="23:42">15</literal></expr>, <expr pos:start="23:45" pos:end="23:46"><literal type="number" pos:start="23:45" pos:end="23:46">31</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:11"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">k_x</name></decl>, <decl pos:start="25:14" pos:end="25:16"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:14" pos:end="25:16">k_y</name></decl>;</decl_stmt> <comment type="block" pos:start="25:19" pos:end="25:47">/* Long MV fixed bitlength */</comment>

    <decl_stmt pos:start="27:5" pos:end="27:30"><decl pos:start="27:5" pos:end="27:17"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:17">hpel_flag</name></decl>, <decl pos:start="27:20" pos:end="27:29"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:20" pos:end="27:29">intra_flag</name></decl>;</decl_stmt> <comment type="block" pos:start="27:32" pos:end="27:55">/* Some MB properties */</comment>

    <decl_stmt pos:start="29:5" pos:end="29:22"><decl pos:start="29:5" pos:end="29:13"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:13">index</name></decl>, <decl pos:start="29:16" pos:end="29:21"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:16" pos:end="29:21">index1</name></decl>;</decl_stmt> <comment type="block" pos:start="29:24" pos:end="29:40">/* LUT indices */</comment>

    <decl_stmt pos:start="31:5" pos:end="31:18"><decl pos:start="31:5" pos:end="31:11"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:11">val</name></decl>, <decl pos:start="31:14" pos:end="31:17"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:14" pos:end="31:17">sign</name></decl>;</decl_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:43">/* Select ttmb table depending on pq */</comment>

    <if_stmt pos:start="37:5" pos:end="41:40"><if pos:start="37:5" pos:end="37:50">if <condition pos:start="37:8" pos:end="37:18">(<expr pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:9">v</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:13">pq</name></name> <operator pos:start="37:15" pos:end="37:15">&lt;</operator> <literal type="number" pos:start="37:17" pos:end="37:17">5</literal></expr>)</condition><block type="pseudo" pos:start="37:20" pos:end="37:50"><block_content pos:start="37:20" pos:end="37:50"> <expr_stmt pos:start="37:20" pos:end="37:50"><expr pos:start="37:20" pos:end="37:49"><name pos:start="37:20" pos:end="37:30"><name pos:start="37:20" pos:end="37:20">v</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:30">ttmb_vlc</name></name> <operator pos:start="37:32" pos:end="37:32">=</operator> <operator pos:start="37:34" pos:end="37:34">&amp;</operator><name pos:start="37:35" pos:end="37:49"><name pos:start="37:35" pos:end="37:46">vc9_ttmb_vlc</name><index pos:start="37:47" pos:end="37:49">[<expr pos:start="37:48" pos:end="37:48"><literal type="number" pos:start="37:48" pos:end="37:48">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="39:5" pos:end="39:56">else if <condition pos:start="39:13" pos:end="39:24">(<expr pos:start="39:14" pos:end="39:23"><name pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">v</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:18">pq</name></name> <operator pos:start="39:20" pos:end="39:20">&lt;</operator> <literal type="number" pos:start="39:22" pos:end="39:23">13</literal></expr>)</condition><block type="pseudo" pos:start="39:26" pos:end="39:56"><block_content pos:start="39:26" pos:end="39:56"> <expr_stmt pos:start="39:26" pos:end="39:56"><expr pos:start="39:26" pos:end="39:55"><name pos:start="39:26" pos:end="39:36"><name pos:start="39:26" pos:end="39:26">v</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:36">ttmb_vlc</name></name> <operator pos:start="39:38" pos:end="39:38">=</operator> <operator pos:start="39:40" pos:end="39:40">&amp;</operator><name pos:start="39:41" pos:end="39:55"><name pos:start="39:41" pos:end="39:52">vc9_ttmb_vlc</name><index pos:start="39:53" pos:end="39:55">[<expr pos:start="39:54" pos:end="39:54"><literal type="number" pos:start="39:54" pos:end="39:54">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="41:5" pos:end="41:40">else<block type="pseudo" pos:start="41:10" pos:end="41:40"><block_content pos:start="41:10" pos:end="41:40"> <expr_stmt pos:start="41:10" pos:end="41:40"><expr pos:start="41:10" pos:end="41:39"><name pos:start="41:10" pos:end="41:20"><name pos:start="41:10" pos:end="41:10">v</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:20">ttmb_vlc</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <operator pos:start="41:24" pos:end="41:24">&amp;</operator><name pos:start="41:25" pos:end="41:39"><name pos:start="41:25" pos:end="41:36">vc9_ttmb_vlc</name><index pos:start="41:37" pos:end="41:39">[<expr pos:start="41:38" pos:end="41:38"><literal type="number" pos:start="41:38" pos:end="41:38">2</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:37">/* Select proper long MV range */</comment>

    <switch pos:start="47:5" pos:end="59:5">switch <condition pos:start="47:12" pos:end="47:23">(<expr pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:13">v</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:22">mvrange</name></name></expr>)</condition>

    <block pos:start="49:5" pos:end="59:5">{<block_content pos:start="51:5" pos:end="57:53">

    <case pos:start="51:5" pos:end="51:11">case <expr pos:start="51:10" pos:end="51:10"><literal type="number" pos:start="51:10" pos:end="51:10">1</literal></expr>:</case> <expr_stmt pos:start="51:13" pos:end="51:21"><expr pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:15">k_x</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <literal type="number" pos:start="51:19" pos:end="51:20">10</literal></expr>;</expr_stmt> <expr_stmt pos:start="51:23" pos:end="51:30"><expr pos:start="51:23" pos:end="51:29"><name pos:start="51:23" pos:end="51:25">k_y</name> <operator pos:start="51:27" pos:end="51:27">=</operator> <literal type="number" pos:start="51:29" pos:end="51:29">9</literal></expr>;</expr_stmt> <break pos:start="51:32" pos:end="51:37">break;</break>

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">2</literal></expr>:</case> <expr_stmt pos:start="53:13" pos:end="53:21"><expr pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:15">k_x</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <literal type="number" pos:start="53:19" pos:end="53:20">12</literal></expr>;</expr_stmt> <expr_stmt pos:start="53:23" pos:end="53:31"><expr pos:start="53:23" pos:end="53:30"><name pos:start="53:23" pos:end="53:25">k_y</name> <operator pos:start="53:27" pos:end="53:27">=</operator> <literal type="number" pos:start="53:29" pos:end="53:30">10</literal></expr>;</expr_stmt> <break pos:start="53:33" pos:end="53:38">break;</break>

    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">3</literal></expr>:</case> <expr_stmt pos:start="55:13" pos:end="55:21"><expr pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:15">k_x</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <literal type="number" pos:start="55:19" pos:end="55:20">13</literal></expr>;</expr_stmt> <expr_stmt pos:start="55:23" pos:end="55:31"><expr pos:start="55:23" pos:end="55:30"><name pos:start="55:23" pos:end="55:25">k_y</name> <operator pos:start="55:27" pos:end="55:27">=</operator> <literal type="number" pos:start="55:29" pos:end="55:30">11</literal></expr>;</expr_stmt> <break pos:start="55:33" pos:end="55:38">break;</break>

    <default pos:start="57:5" pos:end="57:12">default:</default> <comment type="block" pos:start="57:14" pos:end="57:28">/*case 0 too */</comment> <expr_stmt pos:start="57:30" pos:end="57:37"><expr pos:start="57:30" pos:end="57:36"><name pos:start="57:30" pos:end="57:32">k_x</name> <operator pos:start="57:34" pos:end="57:34">=</operator> <literal type="number" pos:start="57:36" pos:end="57:36">9</literal></expr>;</expr_stmt> <expr_stmt pos:start="57:39" pos:end="57:46"><expr pos:start="57:39" pos:end="57:45"><name pos:start="57:39" pos:end="57:41">k_y</name> <operator pos:start="57:43" pos:end="57:43">=</operator> <literal type="number" pos:start="57:45" pos:end="57:45">8</literal></expr>;</expr_stmt> <break pos:start="57:48" pos:end="57:53">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="63:5" pos:end="63:31"><expr pos:start="63:5" pos:end="63:30"><name pos:start="63:5" pos:end="63:13">hpel_flag</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:26"><name pos:start="63:17" pos:end="63:17">v</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:26">mv_mode</name></name> <operator pos:start="63:28" pos:end="63:28">&amp;</operator> <literal type="number" pos:start="63:30" pos:end="63:30">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="63:33" pos:end="63:50">//MV_PMODE is HPEL</comment>

    <expr_stmt pos:start="65:5" pos:end="65:21"><expr pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:7">k_x</name> <operator pos:start="65:9" pos:end="65:10">-=</operator> <name pos:start="65:12" pos:end="65:20">hpel_flag</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:21"><expr pos:start="67:5" pos:end="67:20"><name pos:start="67:5" pos:end="67:7">k_y</name> <operator pos:start="67:9" pos:end="67:10">-=</operator> <name pos:start="67:12" pos:end="67:20">hpel_flag</name></expr>;</expr_stmt>



    <for pos:start="71:5" pos:end="239:5">for <control pos:start="71:9" pos:end="71:34">(<init pos:start="71:10" pos:end="71:13"><expr pos:start="71:10" pos:end="71:12"><name pos:start="71:10" pos:end="71:10">y</name><operator pos:start="71:11" pos:end="71:11">=</operator><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</init> <condition pos:start="71:15" pos:end="71:29"><expr pos:start="71:15" pos:end="71:28"><name pos:start="71:15" pos:end="71:15">y</name><operator pos:start="71:16" pos:end="71:16">&lt;</operator><name pos:start="71:17" pos:end="71:28"><name pos:start="71:17" pos:end="71:17">v</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:28">height_mb</name></name></expr>;</condition> <incr pos:start="71:31" pos:end="71:33"><expr pos:start="71:31" pos:end="71:33"><name pos:start="71:31" pos:end="71:31">y</name><operator pos:start="71:32" pos:end="71:33">++</operator></expr></incr>)</control>

    <block pos:start="73:5" pos:end="239:5">{<block_content pos:start="75:9" pos:end="237:21">

        <for pos:start="75:9" pos:end="235:9">for <control pos:start="75:13" pos:end="75:37">(<init pos:start="75:14" pos:end="75:17"><expr pos:start="75:14" pos:end="75:16"><name pos:start="75:14" pos:end="75:14">x</name><operator pos:start="75:15" pos:end="75:15">=</operator><literal type="number" pos:start="75:16" pos:end="75:16">0</literal></expr>;</init> <condition pos:start="75:19" pos:end="75:32"><expr pos:start="75:19" pos:end="75:31"><name pos:start="75:19" pos:end="75:19">x</name><operator pos:start="75:20" pos:end="75:20">&lt;</operator><name pos:start="75:21" pos:end="75:31"><name pos:start="75:21" pos:end="75:21">v</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:31">width_mb</name></name></expr>;</condition> <incr pos:start="75:34" pos:end="75:36"><expr pos:start="75:34" pos:end="75:36"><name pos:start="75:34" pos:end="75:34">x</name><operator pos:start="75:35" pos:end="75:36">++</operator></expr></incr>)</control>

        <block pos:start="77:9" pos:end="235:9">{<block_content pos:start="79:13" pos:end="233:13">

            <if_stmt pos:start="79:13" pos:end="81:50"><if pos:start="79:13" pos:end="81:50">if <condition pos:start="79:16" pos:end="79:48">(<expr pos:start="79:17" pos:end="79:47"><name pos:start="79:17" pos:end="79:47"><name pos:start="79:17" pos:end="79:17">v</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:35">mv_type_mb_plane</name><index pos:start="79:36" pos:end="79:47">[<expr pos:start="79:37" pos:end="79:46"><name pos:start="79:37" pos:end="79:46">current_mb</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:50"><block_content pos:start="81:17" pos:end="81:50">

                <expr_stmt pos:start="81:17" pos:end="81:50"><expr pos:start="81:17" pos:end="81:49"><name pos:start="81:17" pos:end="81:27">mv_mode_bit</name> <operator pos:start="81:29" pos:end="81:29">=</operator> <call pos:start="81:31" pos:end="81:49"><name pos:start="81:31" pos:end="81:38">get_bits</name><argument_list pos:start="81:39" pos:end="81:49">(<argument pos:start="81:40" pos:end="81:45"><expr pos:start="81:40" pos:end="81:45"><operator pos:start="81:40" pos:end="81:40">&amp;</operator><name pos:start="81:41" pos:end="81:45"><name pos:start="81:41" pos:end="81:41">v</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:45">gb</name></name></expr></argument>, <argument pos:start="81:48" pos:end="81:48"><expr pos:start="81:48" pos:end="81:48"><literal type="number" pos:start="81:48" pos:end="81:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="83:13" pos:end="85:50"><if pos:start="83:13" pos:end="85:50">if <condition pos:start="83:16" pos:end="83:18">(<expr pos:start="83:17" pos:end="83:17"><literal type="number" pos:start="83:17" pos:end="83:17">0</literal></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:50"><block_content pos:start="85:17" pos:end="85:50"> <comment type="line" pos:start="83:20" pos:end="83:38">//skipmb is rawmode</comment>

                <expr_stmt pos:start="85:17" pos:end="85:50"><expr pos:start="85:17" pos:end="85:49"><name pos:start="85:17" pos:end="85:27">skip_mb_bit</name> <operator pos:start="85:29" pos:end="85:29">=</operator> <call pos:start="85:31" pos:end="85:49"><name pos:start="85:31" pos:end="85:38">get_bits</name><argument_list pos:start="85:39" pos:end="85:49">(<argument pos:start="85:40" pos:end="85:45"><expr pos:start="85:40" pos:end="85:45"><operator pos:start="85:40" pos:end="85:40">&amp;</operator><name pos:start="85:41" pos:end="85:45"><name pos:start="85:41" pos:end="85:41">v</name><operator pos:start="85:42" pos:end="85:43">-&gt;</operator><name pos:start="85:44" pos:end="85:45">gb</name></name></expr></argument>, <argument pos:start="85:48" pos:end="85:48"><expr pos:start="85:48" pos:end="85:48"><literal type="number" pos:start="85:48" pos:end="85:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="87:13" pos:end="233:13"><if pos:start="87:13" pos:end="155:13">if <condition pos:start="87:16" pos:end="87:29">(<expr pos:start="87:17" pos:end="87:28"><operator pos:start="87:17" pos:end="87:17">!</operator><name pos:start="87:18" pos:end="87:28">mv_mode_bit</name></expr>)</condition> <comment type="block" pos:start="87:31" pos:end="87:44">/* 1MV mode */</comment>

            <block pos:start="89:13" pos:end="155:13">{<block_content pos:start="91:17" pos:end="153:17">

                <if_stmt pos:start="91:17" pos:end="153:17"><if pos:start="91:17" pos:end="139:17">if <condition pos:start="91:20" pos:end="91:50">(<expr pos:start="91:21" pos:end="91:49"><operator pos:start="91:21" pos:end="91:21">!</operator><name pos:start="91:22" pos:end="91:49"><name pos:start="91:22" pos:end="91:22">v</name><operator pos:start="91:23" pos:end="91:24">-&gt;</operator><name pos:start="91:25" pos:end="91:37">skip_mb_plane</name><index pos:start="91:38" pos:end="91:49">[<expr pos:start="91:39" pos:end="91:48"><name pos:start="91:39" pos:end="91:48">current_mb</name></expr>]</index></name></expr>)</condition>

                <block pos:start="93:17" pos:end="139:17">{<block_content pos:start="95:21" pos:end="135:66">

                    <expr_stmt pos:start="95:21" pos:end="95:33"><expr pos:start="95:21" pos:end="95:32"><call pos:start="95:21" pos:end="95:32"><name pos:start="95:21" pos:end="95:30">GET_MVDATA</name><argument_list pos:start="95:31" pos:end="95:32">()</argument_list></call></expr>;</expr_stmt>



                    <comment type="block" pos:start="99:21" pos:end="99:51">/* hybrid mv pred, 8.3.5.3.4 */</comment>

                    <if_stmt pos:start="101:21" pos:end="105:58"><if pos:start="101:21" pos:end="105:58">if <condition pos:start="101:24" pos:end="103:56">(<expr pos:start="101:25" pos:end="103:55"><name pos:start="101:25" pos:end="101:34"><name pos:start="101:25" pos:end="101:25">v</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:34">mv_mode</name></name> <operator pos:start="101:36" pos:end="101:37">==</operator> <name pos:start="101:39" pos:end="101:50">MV_PMODE_1MV</name> <operator pos:start="101:52" pos:end="101:53">||</operator>

                        <name pos:start="103:25" pos:end="103:34"><name pos:start="103:25" pos:end="103:25">v</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:34">mv_mode</name></name> <operator pos:start="103:36" pos:end="103:37">==</operator> <name pos:start="103:39" pos:end="103:55">MV_PMODE_MIXED_MV</name></expr>)</condition><block type="pseudo" pos:start="105:25" pos:end="105:58"><block_content pos:start="105:25" pos:end="105:58">

                        <expr_stmt pos:start="105:25" pos:end="105:58"><expr pos:start="105:25" pos:end="105:57"><name pos:start="105:25" pos:end="105:35">hybrid_pred</name> <operator pos:start="105:37" pos:end="105:37">=</operator> <call pos:start="105:39" pos:end="105:57"><name pos:start="105:39" pos:end="105:46">get_bits</name><argument_list pos:start="105:47" pos:end="105:57">(<argument pos:start="105:48" pos:end="105:53"><expr pos:start="105:48" pos:end="105:53"><operator pos:start="105:48" pos:end="105:48">&amp;</operator><name pos:start="105:49" pos:end="105:53"><name pos:start="105:49" pos:end="105:49">v</name><operator pos:start="105:50" pos:end="105:51">-&gt;</operator><name pos:start="105:52" pos:end="105:53">gb</name></name></expr></argument>, <argument pos:start="105:56" pos:end="105:56"><expr pos:start="105:56" pos:end="105:56"><literal type="number" pos:start="105:56" pos:end="105:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="107:21" pos:end="129:21"><if pos:start="107:21" pos:end="115:21">if <condition pos:start="107:24" pos:end="107:54">(<expr pos:start="107:25" pos:end="107:53"><name pos:start="107:25" pos:end="107:35">mb_is_intra</name> <operator pos:start="107:37" pos:end="107:38">&amp;&amp;</operator> <operator pos:start="107:40" pos:end="107:40">!</operator><name pos:start="107:41" pos:end="107:53">mb_has_coeffs</name></expr>)</condition>

                    <block pos:start="109:21" pos:end="115:21">{<block_content pos:start="111:25" pos:end="113:54">

                        <expr_stmt pos:start="111:25" pos:end="111:37"><expr pos:start="111:25" pos:end="111:36"><call pos:start="111:25" pos:end="111:36"><name pos:start="111:25" pos:end="111:34">GET_MQUANT</name><argument_list pos:start="111:35" pos:end="111:36">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="113:25" pos:end="113:54"><expr pos:start="113:25" pos:end="113:53"><name pos:start="113:25" pos:end="113:31">ac_pred</name> <operator pos:start="113:33" pos:end="113:33">=</operator> <call pos:start="113:35" pos:end="113:53"><name pos:start="113:35" pos:end="113:42">get_bits</name><argument_list pos:start="113:43" pos:end="113:53">(<argument pos:start="113:44" pos:end="113:49"><expr pos:start="113:44" pos:end="113:49"><operator pos:start="113:44" pos:end="113:44">&amp;</operator><name pos:start="113:45" pos:end="113:49"><name pos:start="113:45" pos:end="113:45">v</name><operator pos:start="113:46" pos:end="113:47">-&gt;</operator><name pos:start="113:48" pos:end="113:49">gb</name></name></expr></argument>, <argument pos:start="113:52" pos:end="113:52"><expr pos:start="113:52" pos:end="113:52"><literal type="number" pos:start="113:52" pos:end="113:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if>

                    <if type="elseif" pos:start="117:21" pos:end="129:21">else if <condition pos:start="117:29" pos:end="117:43">(<expr pos:start="117:30" pos:end="117:42"><name pos:start="117:30" pos:end="117:42">mb_has_coeffs</name></expr>)</condition>

                    <block pos:start="119:21" pos:end="129:21">{<block_content pos:start="121:25" pos:end="127:37">

                        <if_stmt pos:start="121:25" pos:end="121:71"><if pos:start="121:25" pos:end="121:71">if <condition pos:start="121:28" pos:end="121:40">(<expr pos:start="121:29" pos:end="121:39"><name pos:start="121:29" pos:end="121:39">mb_is_intra</name></expr>)</condition><block type="pseudo" pos:start="121:42" pos:end="121:71"><block_content pos:start="121:42" pos:end="121:71"> <expr_stmt pos:start="121:42" pos:end="121:71"><expr pos:start="121:42" pos:end="121:70"><name pos:start="121:42" pos:end="121:48">ac_pred</name> <operator pos:start="121:50" pos:end="121:50">=</operator> <call pos:start="121:52" pos:end="121:70"><name pos:start="121:52" pos:end="121:59">get_bits</name><argument_list pos:start="121:60" pos:end="121:70">(<argument pos:start="121:61" pos:end="121:66"><expr pos:start="121:61" pos:end="121:66"><operator pos:start="121:61" pos:end="121:61">&amp;</operator><name pos:start="121:62" pos:end="121:66"><name pos:start="121:62" pos:end="121:62">v</name><operator pos:start="121:63" pos:end="121:64">-&gt;</operator><name pos:start="121:65" pos:end="121:66">gb</name></name></expr></argument>, <argument pos:start="121:69" pos:end="121:69"><expr pos:start="121:69" pos:end="121:69"><literal type="number" pos:start="121:69" pos:end="121:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="123:25" pos:end="125:66"><expr pos:start="123:25" pos:end="125:65"><name pos:start="123:25" pos:end="123:29">cbpcy</name> <operator pos:start="123:31" pos:end="123:31">=</operator> <call pos:start="123:33" pos:end="125:65"><name pos:start="123:33" pos:end="123:40">get_vlc2</name><argument_list pos:start="123:41" pos:end="125:65">(<argument pos:start="123:42" pos:end="123:47"><expr pos:start="123:42" pos:end="123:47"><operator pos:start="123:42" pos:end="123:42">&amp;</operator><name pos:start="123:43" pos:end="123:47"><name pos:start="123:43" pos:end="123:43">v</name><operator pos:start="123:44" pos:end="123:45">-&gt;</operator><name pos:start="123:46" pos:end="123:47">gb</name></name></expr></argument>, <argument pos:start="123:50" pos:end="123:68"><expr pos:start="123:50" pos:end="123:68"><name pos:start="123:50" pos:end="123:68"><name pos:start="123:50" pos:end="123:50">v</name><operator pos:start="123:51" pos:end="123:52">-&gt;</operator><name pos:start="123:53" pos:end="123:61">cbpcy_vlc</name><operator pos:start="123:62" pos:end="123:63">-&gt;</operator><name pos:start="123:64" pos:end="123:68">table</name></name></expr></argument>,

                                         <argument pos:start="125:42" pos:end="125:61"><expr pos:start="125:42" pos:end="125:61"><name pos:start="125:42" pos:end="125:61">VC9_CBPCY_P_VLC_BITS</name></expr></argument>, <argument pos:start="125:64" pos:end="125:64"><expr pos:start="125:64" pos:end="125:64"><literal type="number" pos:start="125:64" pos:end="125:64">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="127:25" pos:end="127:37"><expr pos:start="127:25" pos:end="127:36"><call pos:start="127:25" pos:end="127:36"><name pos:start="127:25" pos:end="127:34">GET_MQUANT</name><argument_list pos:start="127:35" pos:end="127:36">()</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="131:21" pos:end="135:66"><if pos:start="131:21" pos:end="135:66">if <condition pos:start="131:24" pos:end="131:34">(<expr pos:start="131:25" pos:end="131:33"><operator pos:start="131:25" pos:end="131:25">!</operator><name pos:start="131:26" pos:end="131:33"><name pos:start="131:26" pos:end="131:26">v</name><operator pos:start="131:27" pos:end="131:28">-&gt;</operator><name pos:start="131:29" pos:end="131:33">ttmbf</name></name></expr>)</condition><block type="pseudo" pos:start="133:25" pos:end="135:66"><block_content pos:start="133:25" pos:end="135:66">

                        <expr_stmt pos:start="133:25" pos:end="135:66"><expr pos:start="133:25" pos:end="135:65"><name pos:start="133:25" pos:end="133:32"><name pos:start="133:25" pos:end="133:25">v</name><operator pos:start="133:26" pos:end="133:27">-&gt;</operator><name pos:start="133:28" pos:end="133:32">ttfrm</name></name> <operator pos:start="133:34" pos:end="133:34">=</operator> <call pos:start="133:36" pos:end="135:65"><name pos:start="133:36" pos:end="133:43">get_vlc2</name><argument_list pos:start="133:44" pos:end="135:65">(<argument pos:start="133:45" pos:end="133:50"><expr pos:start="133:45" pos:end="133:50"><operator pos:start="133:45" pos:end="133:45">&amp;</operator><name pos:start="133:46" pos:end="133:50"><name pos:start="133:46" pos:end="133:46">v</name><operator pos:start="133:47" pos:end="133:48">-&gt;</operator><name pos:start="133:49" pos:end="133:50">gb</name></name></expr></argument>, <argument pos:start="133:53" pos:end="133:70"><expr pos:start="133:53" pos:end="133:70"><name pos:start="133:53" pos:end="133:70"><name pos:start="133:53" pos:end="133:53">v</name><operator pos:start="133:54" pos:end="133:55">-&gt;</operator><name pos:start="133:56" pos:end="133:63">ttmb_vlc</name><operator pos:start="133:64" pos:end="133:65">-&gt;</operator><name pos:start="133:66" pos:end="133:70">table</name></name></expr></argument>,

                                            <argument pos:start="135:45" pos:end="135:61"><expr pos:start="135:45" pos:end="135:61"><name pos:start="135:45" pos:end="135:61">VC9_TTMB_VLC_BITS</name></expr></argument>, <argument pos:start="135:64" pos:end="135:64"><expr pos:start="135:64" pos:end="135:64"><literal type="number" pos:start="135:64" pos:end="135:64">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <comment type="line" pos:start="137:21" pos:end="137:58">//Decode blocks from that mb wrt cbpcy</comment>

                </block_content>}</block></if>

                <else pos:start="141:17" pos:end="153:17">else <comment type="line" pos:start="141:22" pos:end="141:30">//Skipped</comment>

                <block pos:start="143:17" pos:end="153:17">{<block_content pos:start="147:21" pos:end="151:58">

                    <comment type="block" pos:start="145:21" pos:end="145:51">/* hybrid mv pred, 8.3.5.3.4 */</comment>

                    <if_stmt pos:start="147:21" pos:end="151:58"><if pos:start="147:21" pos:end="151:58">if <condition pos:start="147:24" pos:end="149:56">(<expr pos:start="147:25" pos:end="149:55"><name pos:start="147:25" pos:end="147:34"><name pos:start="147:25" pos:end="147:25">v</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:34">mv_mode</name></name> <operator pos:start="147:36" pos:end="147:37">==</operator> <name pos:start="147:39" pos:end="147:50">MV_PMODE_1MV</name> <operator pos:start="147:52" pos:end="147:53">||</operator>

                        <name pos:start="149:25" pos:end="149:34"><name pos:start="149:25" pos:end="149:25">v</name><operator pos:start="149:26" pos:end="149:27">-&gt;</operator><name pos:start="149:28" pos:end="149:34">mv_mode</name></name> <operator pos:start="149:36" pos:end="149:37">==</operator> <name pos:start="149:39" pos:end="149:55">MV_PMODE_MIXED_MV</name></expr>)</condition><block type="pseudo" pos:start="151:25" pos:end="151:58"><block_content pos:start="151:25" pos:end="151:58">

                        <expr_stmt pos:start="151:25" pos:end="151:58"><expr pos:start="151:25" pos:end="151:57"><name pos:start="151:25" pos:end="151:35">hybrid_pred</name> <operator pos:start="151:37" pos:end="151:37">=</operator> <call pos:start="151:39" pos:end="151:57"><name pos:start="151:39" pos:end="151:46">get_bits</name><argument_list pos:start="151:47" pos:end="151:57">(<argument pos:start="151:48" pos:end="151:53"><expr pos:start="151:48" pos:end="151:53"><operator pos:start="151:48" pos:end="151:48">&amp;</operator><name pos:start="151:49" pos:end="151:53"><name pos:start="151:49" pos:end="151:49">v</name><operator pos:start="151:50" pos:end="151:51">-&gt;</operator><name pos:start="151:52" pos:end="151:53">gb</name></name></expr></argument>, <argument pos:start="151:56" pos:end="151:56"><expr pos:start="151:56" pos:end="151:56"><literal type="number" pos:start="151:56" pos:end="151:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <comment type="line" pos:start="155:15" pos:end="155:24">//1MV mode</comment>

            <else pos:start="157:13" pos:end="233:13">else <comment type="line" pos:start="157:18" pos:end="157:27">//4MV mode</comment>

            <block pos:start="159:13" pos:end="233:13">{<block_content pos:start="161:15" pos:end="231:17">

              <if_stmt pos:start="161:15" pos:end="231:17"><if pos:start="161:15" pos:end="211:17">if <condition pos:start="161:18" pos:end="161:67">(<expr pos:start="161:19" pos:end="161:47"><operator pos:start="161:19" pos:end="161:19">!</operator><name pos:start="161:20" pos:end="161:47"><name pos:start="161:20" pos:end="161:20">v</name><operator pos:start="161:21" pos:end="161:22">-&gt;</operator><name pos:start="161:23" pos:end="161:35">skip_mb_plane</name><index pos:start="161:36" pos:end="161:47">[<expr pos:start="161:37" pos:end="161:46"><name pos:start="161:37" pos:end="161:46">current_mb</name></expr>]</index></name></expr> <comment type="block" pos:start="161:49" pos:end="161:66">/* unskipped MB */</comment>)</condition>

                <block pos:start="163:17" pos:end="211:17">{<block_content pos:start="165:21" pos:end="209:21">

                    <expr_stmt pos:start="165:21" pos:end="167:62"><expr pos:start="165:21" pos:end="167:61"><name pos:start="165:21" pos:end="165:25">cbpcy</name> <operator pos:start="165:27" pos:end="165:27">=</operator> <call pos:start="165:29" pos:end="167:61"><name pos:start="165:29" pos:end="165:36">get_vlc2</name><argument_list pos:start="165:37" pos:end="167:61">(<argument pos:start="165:38" pos:end="165:43"><expr pos:start="165:38" pos:end="165:43"><operator pos:start="165:38" pos:end="165:38">&amp;</operator><name pos:start="165:39" pos:end="165:43"><name pos:start="165:39" pos:end="165:39">v</name><operator pos:start="165:40" pos:end="165:41">-&gt;</operator><name pos:start="165:42" pos:end="165:43">gb</name></name></expr></argument>, <argument pos:start="165:46" pos:end="165:64"><expr pos:start="165:46" pos:end="165:64"><name pos:start="165:46" pos:end="165:64"><name pos:start="165:46" pos:end="165:46">v</name><operator pos:start="165:47" pos:end="165:48">-&gt;</operator><name pos:start="165:49" pos:end="165:57">cbpcy_vlc</name><operator pos:start="165:58" pos:end="165:59">-&gt;</operator><name pos:start="165:60" pos:end="165:64">table</name></name></expr></argument>,

                                     <argument pos:start="167:38" pos:end="167:57"><expr pos:start="167:38" pos:end="167:57"><name pos:start="167:38" pos:end="167:57">VC9_CBPCY_P_VLC_BITS</name></expr></argument>, <argument pos:start="167:60" pos:end="167:60"><expr pos:start="167:60" pos:end="167:60"><literal type="number" pos:start="167:60" pos:end="167:60">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="169:21" pos:end="209:21">for <control pos:start="169:25" pos:end="169:39">(<init pos:start="169:26" pos:end="169:29"><expr pos:start="169:26" pos:end="169:28"><name pos:start="169:26" pos:end="169:26">i</name><operator pos:start="169:27" pos:end="169:27">=</operator><literal type="number" pos:start="169:28" pos:end="169:28">0</literal></expr>;</init> <condition pos:start="169:31" pos:end="169:34"><expr pos:start="169:31" pos:end="169:33"><name pos:start="169:31" pos:end="169:31">i</name><operator pos:start="169:32" pos:end="169:32">&lt;</operator><literal type="number" pos:start="169:33" pos:end="169:33">4</literal></expr>;</condition> <incr pos:start="169:36" pos:end="169:38"><expr pos:start="169:36" pos:end="169:38"><name pos:start="169:36" pos:end="169:36">i</name><operator pos:start="169:37" pos:end="169:38">++</operator></expr></incr>)</control> <comment type="line" pos:start="169:41" pos:end="169:60">//For all 4 Y blocks</comment>

                    <block pos:start="171:21" pos:end="209:21">{<block_content pos:start="173:25" pos:end="207:36">

                        <if_stmt pos:start="173:25" pos:end="179:25"><if pos:start="173:25" pos:end="179:25">if <condition pos:start="173:28" pos:end="173:74">(<expr pos:start="173:29" pos:end="173:42"><name pos:start="173:29" pos:end="173:33">cbpcy</name> <operator pos:start="173:35" pos:end="173:35">&amp;</operator> <operator pos:start="173:37" pos:end="173:37">(</operator><literal type="number" pos:start="173:38" pos:end="173:38">1</literal><operator pos:start="173:39" pos:end="173:40">&lt;&lt;</operator><literal type="number" pos:start="173:41" pos:end="173:41">6</literal><operator pos:start="173:42" pos:end="173:42">)</operator></expr> <comment type="block" pos:start="173:44" pos:end="173:73">/* cbpcy set for this block */</comment>)</condition>

                        <block pos:start="175:25" pos:end="179:25">{<block_content pos:start="177:29" pos:end="177:41">

                            <expr_stmt pos:start="177:29" pos:end="177:41"><expr pos:start="177:29" pos:end="177:40"><call pos:start="177:29" pos:end="177:40"><name pos:start="177:29" pos:end="177:38">GET_MVDATA</name><argument_list pos:start="177:39" pos:end="177:40">()</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="181:25" pos:end="183:62"><if pos:start="181:25" pos:end="183:62">if <condition pos:start="181:28" pos:end="181:78">(<expr pos:start="181:29" pos:end="181:59"><name pos:start="181:29" pos:end="181:38"><name pos:start="181:29" pos:end="181:29">v</name><operator pos:start="181:30" pos:end="181:31">-&gt;</operator><name pos:start="181:32" pos:end="181:38">mv_mode</name></name> <operator pos:start="181:40" pos:end="181:41">==</operator> <name pos:start="181:43" pos:end="181:59">MV_PMODE_MIXED_MV</name></expr> <comment type="block" pos:start="181:61" pos:end="181:77">/* Hybrid pred */</comment>)</condition><block type="pseudo" pos:start="183:29" pos:end="183:62"><block_content pos:start="183:29" pos:end="183:62">

                            <expr_stmt pos:start="183:29" pos:end="183:62"><expr pos:start="183:29" pos:end="183:61"><name pos:start="183:29" pos:end="183:39">hybrid_pred</name> <operator pos:start="183:41" pos:end="183:41">=</operator> <call pos:start="183:43" pos:end="183:61"><name pos:start="183:43" pos:end="183:50">get_bits</name><argument_list pos:start="183:51" pos:end="183:61">(<argument pos:start="183:52" pos:end="183:57"><expr pos:start="183:52" pos:end="183:57"><operator pos:start="183:52" pos:end="183:52">&amp;</operator><name pos:start="183:53" pos:end="183:57"><name pos:start="183:53" pos:end="183:53">v</name><operator pos:start="183:54" pos:end="183:55">-&gt;</operator><name pos:start="183:56" pos:end="183:57">gb</name></name></expr></argument>, <argument pos:start="183:60" pos:end="183:60"><expr pos:start="183:60" pos:end="183:60"><literal type="number" pos:start="183:60" pos:end="183:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="185:25" pos:end="185:37"><expr pos:start="185:25" pos:end="185:36"><call pos:start="185:25" pos:end="185:36"><name pos:start="185:25" pos:end="185:34">GET_MQUANT</name><argument_list pos:start="185:35" pos:end="185:36">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="187:25" pos:end="191:58"><if pos:start="187:25" pos:end="191:58">if <condition pos:start="187:28" pos:end="189:69">(<expr pos:start="187:29" pos:end="189:33"><name pos:start="187:29" pos:end="187:39">mb_is_intra</name> <comment type="block" pos:start="187:41" pos:end="187:74">/* One of the 4 blocks is intra */</comment> <operator pos:start="187:76" pos:end="187:77">&amp;&amp;</operator>

                            <name pos:start="189:29" pos:end="189:33">index</name></expr> <comment type="block" pos:start="189:35" pos:end="189:68">/* non-zero pred for that block */</comment>)</condition><block type="pseudo" pos:start="191:29" pos:end="191:58"><block_content pos:start="191:29" pos:end="191:58">

                            <expr_stmt pos:start="191:29" pos:end="191:58"><expr pos:start="191:29" pos:end="191:57"><name pos:start="191:29" pos:end="191:35">ac_pred</name> <operator pos:start="191:37" pos:end="191:37">=</operator> <call pos:start="191:39" pos:end="191:57"><name pos:start="191:39" pos:end="191:46">get_bits</name><argument_list pos:start="191:47" pos:end="191:57">(<argument pos:start="191:48" pos:end="191:53"><expr pos:start="191:48" pos:end="191:53"><operator pos:start="191:48" pos:end="191:48">&amp;</operator><name pos:start="191:49" pos:end="191:53"><name pos:start="191:49" pos:end="191:49">v</name><operator pos:start="191:50" pos:end="191:51">-&gt;</operator><name pos:start="191:52" pos:end="191:53">gb</name></name></expr></argument>, <argument pos:start="191:56" pos:end="191:56"><expr pos:start="191:56" pos:end="191:56"><literal type="number" pos:start="191:56" pos:end="191:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="193:25" pos:end="197:70"><if pos:start="193:25" pos:end="197:70">if <condition pos:start="193:28" pos:end="193:38">(<expr pos:start="193:29" pos:end="193:37"><operator pos:start="193:29" pos:end="193:29">!</operator><name pos:start="193:30" pos:end="193:37"><name pos:start="193:30" pos:end="193:30">v</name><operator pos:start="193:31" pos:end="193:32">-&gt;</operator><name pos:start="193:33" pos:end="193:37">ttmbf</name></name></expr>)</condition><block type="pseudo" pos:start="195:29" pos:end="197:70"><block_content pos:start="195:29" pos:end="197:70">

                            <expr_stmt pos:start="195:29" pos:end="197:70"><expr pos:start="195:29" pos:end="197:69"><name pos:start="195:29" pos:end="195:36">tt_block</name> <operator pos:start="195:38" pos:end="195:38">=</operator> <call pos:start="195:40" pos:end="197:69"><name pos:start="195:40" pos:end="195:47">get_vlc2</name><argument_list pos:start="195:48" pos:end="197:69">(<argument pos:start="195:49" pos:end="195:54"><expr pos:start="195:49" pos:end="195:54"><operator pos:start="195:49" pos:end="195:49">&amp;</operator><name pos:start="195:50" pos:end="195:54"><name pos:start="195:50" pos:end="195:50">v</name><operator pos:start="195:51" pos:end="195:52">-&gt;</operator><name pos:start="195:53" pos:end="195:54">gb</name></name></expr></argument>, <argument pos:start="195:57" pos:end="195:74"><expr pos:start="195:57" pos:end="195:74"><name pos:start="195:57" pos:end="195:74"><name pos:start="195:57" pos:end="195:57">v</name><operator pos:start="195:58" pos:end="195:59">-&gt;</operator><name pos:start="195:60" pos:end="195:67">ttmb_vlc</name><operator pos:start="195:68" pos:end="195:69">-&gt;</operator><name pos:start="195:70" pos:end="195:74">table</name></name></expr></argument>,

                                                <argument pos:start="197:49" pos:end="197:65"><expr pos:start="197:49" pos:end="197:65"><name pos:start="197:49" pos:end="197:65">VC9_TTMB_VLC_BITS</name></expr></argument>, <argument pos:start="197:68" pos:end="197:68"><expr pos:start="197:68" pos:end="197:68"><literal type="number" pos:start="197:68" pos:end="197:68">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            

                        <comment type="block" pos:start="201:25" pos:end="201:60">/* TODO: Process blocks wrt cbpcy */</comment>

            

                        <comment type="block" pos:start="205:25" pos:end="205:58">/* Prepare cbpcy for next block */</comment>

                        <expr_stmt pos:start="207:25" pos:end="207:36"><expr pos:start="207:25" pos:end="207:35"><name pos:start="207:25" pos:end="207:29">cbpcy</name> <operator pos:start="207:31" pos:end="207:33">&lt;&lt;=</operator> <literal type="number" pos:start="207:35" pos:end="207:35">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if>

                <else pos:start="213:17" pos:end="231:17">else <comment type="line" pos:start="213:22" pos:end="213:33">//Skipped MB</comment>

                <block pos:start="215:17" pos:end="231:17">{<block_content pos:start="217:21" pos:end="229:21">

                    <for pos:start="217:21" pos:end="229:21">for <control pos:start="217:25" pos:end="217:39">(<init pos:start="217:26" pos:end="217:29"><expr pos:start="217:26" pos:end="217:28"><name pos:start="217:26" pos:end="217:26">i</name><operator pos:start="217:27" pos:end="217:27">=</operator><literal type="number" pos:start="217:28" pos:end="217:28">0</literal></expr>;</init> <condition pos:start="217:31" pos:end="217:34"><expr pos:start="217:31" pos:end="217:33"><name pos:start="217:31" pos:end="217:31">i</name><operator pos:start="217:32" pos:end="217:32">&lt;</operator><literal type="number" pos:start="217:33" pos:end="217:33">4</literal></expr>;</condition> <incr pos:start="217:36" pos:end="217:38"><expr pos:start="217:36" pos:end="217:38"><name pos:start="217:36" pos:end="217:36">i</name><operator pos:start="217:37" pos:end="217:38">++</operator></expr></incr>)</control> <comment type="line" pos:start="217:41" pos:end="217:56">//All 4 Y blocks</comment>

                    <block pos:start="219:21" pos:end="229:21">{<block_content pos:start="221:25" pos:end="223:62">

                        <if_stmt pos:start="221:25" pos:end="223:62"><if pos:start="221:25" pos:end="223:62">if <condition pos:start="221:28" pos:end="221:78">(<expr pos:start="221:29" pos:end="221:59"><name pos:start="221:29" pos:end="221:38"><name pos:start="221:29" pos:end="221:29">v</name><operator pos:start="221:30" pos:end="221:31">-&gt;</operator><name pos:start="221:32" pos:end="221:38">mv_mode</name></name> <operator pos:start="221:40" pos:end="221:41">==</operator> <name pos:start="221:43" pos:end="221:59">MV_PMODE_MIXED_MV</name></expr> <comment type="block" pos:start="221:61" pos:end="221:77">/* Hybrid pred */</comment>)</condition><block type="pseudo" pos:start="223:29" pos:end="223:62"><block_content pos:start="223:29" pos:end="223:62">

                            <expr_stmt pos:start="223:29" pos:end="223:62"><expr pos:start="223:29" pos:end="223:61"><name pos:start="223:29" pos:end="223:39">hybrid_pred</name> <operator pos:start="223:41" pos:end="223:41">=</operator> <call pos:start="223:43" pos:end="223:61"><name pos:start="223:43" pos:end="223:50">get_bits</name><argument_list pos:start="223:51" pos:end="223:61">(<argument pos:start="223:52" pos:end="223:57"><expr pos:start="223:52" pos:end="223:57"><operator pos:start="223:52" pos:end="223:52">&amp;</operator><name pos:start="223:53" pos:end="223:57"><name pos:start="223:53" pos:end="223:53">v</name><operator pos:start="223:54" pos:end="223:55">-&gt;</operator><name pos:start="223:56" pos:end="223:57">gb</name></name></expr></argument>, <argument pos:start="223:60" pos:end="223:60"><expr pos:start="223:60" pos:end="223:60"><literal type="number" pos:start="223:60" pos:end="223:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        

                        <comment type="block" pos:start="227:25" pos:end="227:49">/* FIXME: do something */</comment>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="237:9" pos:end="237:21"><expr pos:start="237:9" pos:end="237:20"><name pos:start="237:9" pos:end="237:18">current_mb</name><operator pos:start="237:19" pos:end="237:20">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="241:5" pos:end="241:13">return <expr pos:start="241:12" pos:end="241:12"><literal type="number" pos:start="241:12" pos:end="241:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
