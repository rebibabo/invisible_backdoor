<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26220.c" pos:tabs="8"><function pos:start="1:1" pos:end="397:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">wm8750_tx</name><parameter_list pos:start="1:21" pos:end="1:49">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:29">I2CSlave</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">i2c</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:43">uint8_t</name></type> <name pos:start="1:45" pos:end="1:48">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="397:1">{<block_content pos:start="5:5" pos:end="395:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">WM8750State</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:32">= <expr pos:start="5:22" pos:end="5:32"><call pos:start="5:22" pos:end="5:32"><name pos:start="5:22" pos:end="5:27">WM8750</name><argument_list pos:start="5:28" pos:end="5:32">(<argument pos:start="5:29" pos:end="5:31"><expr pos:start="5:29" pos:end="5:31"><name pos:start="5:29" pos:end="5:31">i2c</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:15">cmd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:18">value</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="23:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="13:24">(<expr pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:18">i2c_len</name></name> <operator pos:start="13:20" pos:end="13:21">&gt;=</operator> <literal type="number" pos:start="13:23" pos:end="13:23">2</literal></expr>)</condition> <block pos:start="13:26" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:17">

<cpp:ifdef pos:start="15:1" pos:end="15:14">#<cpp:directive pos:start="15:2" pos:end="15:6">ifdef</cpp:directive> <name pos:start="15:8" pos:end="15:14">VERBOSE</name></cpp:ifdef>

        <expr_stmt pos:start="17:9" pos:end="20:0"><expr pos:start="17:9" pos:end="17:69"><call pos:start="17:9" pos:end="17:69"><name pos:start="17:9" pos:end="17:14">printf</name><argument_list pos:start="17:15" pos:end="17:69">(<argument pos:start="17:16" pos:end="17:46"><expr pos:start="17:16" pos:end="17:46"><literal type="string" pos:start="17:16" pos:end="17:46">"%s: long message (%i bytes)\n"</literal></expr></argument>, <argument pos:start="17:49" pos:end="17:56"><expr pos:start="17:49" pos:end="17:56"><name pos:start="17:49" pos:end="17:56">__func__</name></expr></argument>, <argument pos:start="17:59" pos:end="17:68"><expr pos:start="17:59" pos:end="17:68"><name pos:start="17:59" pos:end="17:68"><name pos:start="17:59" pos:end="17:59">s</name><operator pos:start="17:60" pos:end="17:61">-&gt;</operator><name pos:start="17:62" pos:end="17:68">i2c_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:15">i2c_data</name><index pos:start="25:16" pos:end="25:30">[<expr pos:start="25:17" pos:end="25:29"><name pos:start="25:17" pos:end="25:26"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:26">i2c_len</name></name> <operator pos:start="25:28" pos:end="25:29">++</operator></expr>]</index></name> <operator pos:start="25:32" pos:end="25:32">=</operator> <name pos:start="25:34" pos:end="25:37">data</name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:17"><if pos:start="27:5" pos:end="29:17">if <condition pos:start="27:8" pos:end="27:24">(<expr pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:18">i2c_len</name></name> <operator pos:start="27:20" pos:end="27:21">!=</operator> <literal type="number" pos:start="27:23" pos:end="27:23">2</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:17"><block_content pos:start="29:9" pos:end="29:17">

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:7">cmd</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <name pos:start="33:11" pos:end="33:24"><name pos:start="33:11" pos:end="33:11">s</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:21">i2c_data</name><index pos:start="33:22" pos:end="33:24">[<expr pos:start="33:23" pos:end="33:23"><literal type="number" pos:start="33:23" pos:end="33:23">0</literal></expr>]</index></name> <operator pos:start="33:26" pos:end="33:27">&gt;&gt;</operator> <literal type="number" pos:start="33:29" pos:end="33:29">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:61"><expr pos:start="35:5" pos:end="35:60"><name pos:start="35:5" pos:end="35:9">value</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <operator pos:start="35:13" pos:end="35:13">(</operator><operator pos:start="35:14" pos:end="35:14">(</operator><name pos:start="35:15" pos:end="35:28"><name pos:start="35:15" pos:end="35:15">s</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:25">i2c_data</name><index pos:start="35:26" pos:end="35:28">[<expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">0</literal></expr>]</index></name> <operator pos:start="35:30" pos:end="35:31">&lt;&lt;</operator> <literal type="number" pos:start="35:33" pos:end="35:33">8</literal><operator pos:start="35:34" pos:end="35:34">)</operator> <operator pos:start="35:36" pos:end="35:36">|</operator> <name pos:start="35:38" pos:end="35:51"><name pos:start="35:38" pos:end="35:38">s</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:48">i2c_data</name><index pos:start="35:49" pos:end="35:51">[<expr pos:start="35:50" pos:end="35:50"><literal type="number" pos:start="35:50" pos:end="35:50">1</literal></expr>]</index></name><operator pos:start="35:52" pos:end="35:52">)</operator> <operator pos:start="35:54" pos:end="35:54">&amp;</operator> <literal type="number" pos:start="35:56" pos:end="35:60">0x1ff</literal></expr>;</expr_stmt>



    <switch pos:start="39:5" pos:end="391:5">switch <condition pos:start="39:12" pos:end="39:16">(<expr pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">cmd</name></expr>)</condition> <block pos:start="39:18" pos:end="391:5">{<block_content pos:start="41:5" pos:end="390:0">

    <case pos:start="41:5" pos:end="41:23">case <expr pos:start="41:10" pos:end="41:22"><name pos:start="41:10" pos:end="41:22">WM8750_LADCIN</name></expr>:</case>	<comment type="block" pos:start="41:25" pos:end="41:60">/* ADC Signal Path Control (Left) */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:47"><expr pos:start="43:9" pos:end="43:46"><name pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:15">diff</name><index pos:start="43:16" pos:end="43:18">[<expr pos:start="43:17" pos:end="43:17"><literal type="number" pos:start="43:17" pos:end="43:17">0</literal></expr>]</index></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <operator pos:start="43:22" pos:end="43:22">(</operator><operator pos:start="43:23" pos:end="43:23">(</operator><operator pos:start="43:24" pos:end="43:24">(</operator><name pos:start="43:25" pos:end="43:29">value</name> <operator pos:start="43:31" pos:end="43:32">&gt;&gt;</operator> <literal type="number" pos:start="43:34" pos:end="43:34">6</literal><operator pos:start="43:35" pos:end="43:35">)</operator> <operator pos:start="43:37" pos:end="43:37">&amp;</operator> <literal type="number" pos:start="43:39" pos:end="43:39">3</literal><operator pos:start="43:40" pos:end="43:40">)</operator> <operator pos:start="43:42" pos:end="43:43">==</operator> <literal type="number" pos:start="43:45" pos:end="43:45">3</literal><operator pos:start="43:46" pos:end="43:46">)</operator></expr>;</expr_stmt>	<comment type="block" pos:start="43:49" pos:end="43:60">/* LINSEL */</comment>

        <if_stmt pos:start="45:9" pos:end="51:65"><if pos:start="45:9" pos:end="47:52">if <condition pos:start="45:12" pos:end="45:23">(<expr pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:19">diff</name><index pos:start="45:20" pos:end="45:22">[<expr pos:start="45:21" pos:end="45:21"><literal type="number" pos:start="45:21" pos:end="45:21">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:52"><block_content pos:start="47:13" pos:end="47:52">

            <expr_stmt pos:start="47:13" pos:end="47:52"><expr pos:start="47:13" pos:end="47:51"><name pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:17">in</name><index pos:start="47:18" pos:end="47:20">[<expr pos:start="47:19" pos:end="47:19"><literal type="number" pos:start="47:19" pos:end="47:19">0</literal></expr>]</index></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <operator pos:start="47:24" pos:end="47:24">&amp;</operator><name pos:start="47:25" pos:end="47:51"><name pos:start="47:25" pos:end="47:25">s</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:36">adc_voice</name><index pos:start="47:37" pos:end="47:51">[<expr pos:start="47:38" pos:end="47:50"><literal type="number" pos:start="47:38" pos:end="47:40">0</literal> <operator pos:start="47:40" pos:end="47:40">+</operator> <name pos:start="47:42" pos:end="47:46"><name pos:start="47:42" pos:end="47:42">s</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:46">ds</name></name> <operator pos:start="47:48" pos:end="47:48">*</operator> <literal type="number" pos:start="47:50" pos:end="47:50">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="49:9" pos:end="51:65">else<block type="pseudo" pos:start="51:13" pos:end="51:65"><block_content pos:start="51:13" pos:end="51:65">

            <expr_stmt pos:start="51:13" pos:end="51:65"><expr pos:start="51:13" pos:end="51:64"><name pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:17">in</name><index pos:start="51:18" pos:end="51:20">[<expr pos:start="51:19" pos:end="51:19"><literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>]</index></name> <operator pos:start="51:22" pos:end="51:22">=</operator> <operator pos:start="51:24" pos:end="51:24">&amp;</operator><name pos:start="51:25" pos:end="51:64"><name pos:start="51:25" pos:end="51:25">s</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:36">adc_voice</name><index pos:start="51:37" pos:end="51:64">[<expr pos:start="51:38" pos:end="51:63"><operator pos:start="51:38" pos:end="51:38">(</operator><operator pos:start="51:39" pos:end="51:39">(</operator><name pos:start="51:40" pos:end="51:44">value</name> <operator pos:start="51:46" pos:end="51:47">&gt;&gt;</operator> <literal type="number" pos:start="51:49" pos:end="51:49">6</literal><operator pos:start="51:50" pos:end="51:50">)</operator> <operator pos:start="51:52" pos:end="51:52">&amp;</operator> <literal type="number" pos:start="51:54" pos:end="51:54">3</literal><operator pos:start="51:55" pos:end="51:55">)</operator> <operator pos:start="51:57" pos:end="51:57">*</operator> <literal type="number" pos:start="51:59" pos:end="51:61">1</literal> <operator pos:start="51:61" pos:end="51:61">+</operator> <literal type="number" pos:start="51:63" pos:end="51:63">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>



    <case pos:start="57:5" pos:end="57:23">case <expr pos:start="57:10" pos:end="57:22"><name pos:start="57:10" pos:end="57:22">WM8750_RADCIN</name></expr>:</case>	<comment type="block" pos:start="57:25" pos:end="57:61">/* ADC Signal Path Control (Right) */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:47"><expr pos:start="59:9" pos:end="59:46"><name pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:15">diff</name><index pos:start="59:16" pos:end="59:18">[<expr pos:start="59:17" pos:end="59:17"><literal type="number" pos:start="59:17" pos:end="59:17">1</literal></expr>]</index></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <operator pos:start="59:22" pos:end="59:22">(</operator><operator pos:start="59:23" pos:end="59:23">(</operator><operator pos:start="59:24" pos:end="59:24">(</operator><name pos:start="59:25" pos:end="59:29">value</name> <operator pos:start="59:31" pos:end="59:32">&gt;&gt;</operator> <literal type="number" pos:start="59:34" pos:end="59:34">6</literal><operator pos:start="59:35" pos:end="59:35">)</operator> <operator pos:start="59:37" pos:end="59:37">&amp;</operator> <literal type="number" pos:start="59:39" pos:end="59:39">3</literal><operator pos:start="59:40" pos:end="59:40">)</operator> <operator pos:start="59:42" pos:end="59:43">==</operator> <literal type="number" pos:start="59:45" pos:end="59:45">3</literal><operator pos:start="59:46" pos:end="59:46">)</operator></expr>;</expr_stmt>	<comment type="block" pos:start="59:49" pos:end="59:60">/* RINSEL */</comment>

        <if_stmt pos:start="61:9" pos:end="67:65"><if pos:start="61:9" pos:end="63:52">if <condition pos:start="61:12" pos:end="61:23">(<expr pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:19">diff</name><index pos:start="61:20" pos:end="61:22">[<expr pos:start="61:21" pos:end="61:21"><literal type="number" pos:start="61:21" pos:end="61:21">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:52"><block_content pos:start="63:13" pos:end="63:52">

            <expr_stmt pos:start="63:13" pos:end="63:52"><expr pos:start="63:13" pos:end="63:51"><name pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:17">in</name><index pos:start="63:18" pos:end="63:20">[<expr pos:start="63:19" pos:end="63:19"><literal type="number" pos:start="63:19" pos:end="63:19">1</literal></expr>]</index></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <operator pos:start="63:24" pos:end="63:24">&amp;</operator><name pos:start="63:25" pos:end="63:51"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:36">adc_voice</name><index pos:start="63:37" pos:end="63:51">[<expr pos:start="63:38" pos:end="63:50"><literal type="number" pos:start="63:38" pos:end="63:40">0</literal> <operator pos:start="63:40" pos:end="63:40">+</operator> <name pos:start="63:42" pos:end="63:46"><name pos:start="63:42" pos:end="63:42">s</name><operator pos:start="63:43" pos:end="63:44">-&gt;</operator><name pos:start="63:45" pos:end="63:46">ds</name></name> <operator pos:start="63:48" pos:end="63:48">*</operator> <literal type="number" pos:start="63:50" pos:end="63:50">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="65:9" pos:end="67:65">else<block type="pseudo" pos:start="67:13" pos:end="67:65"><block_content pos:start="67:13" pos:end="67:65">

            <expr_stmt pos:start="67:13" pos:end="67:65"><expr pos:start="67:13" pos:end="67:64"><name pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:17">in</name><index pos:start="67:18" pos:end="67:20">[<expr pos:start="67:19" pos:end="67:19"><literal type="number" pos:start="67:19" pos:end="67:19">1</literal></expr>]</index></name> <operator pos:start="67:22" pos:end="67:22">=</operator> <operator pos:start="67:24" pos:end="67:24">&amp;</operator><name pos:start="67:25" pos:end="67:64"><name pos:start="67:25" pos:end="67:25">s</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:36">adc_voice</name><index pos:start="67:37" pos:end="67:64">[<expr pos:start="67:38" pos:end="67:63"><operator pos:start="67:38" pos:end="67:38">(</operator><operator pos:start="67:39" pos:end="67:39">(</operator><name pos:start="67:40" pos:end="67:44">value</name> <operator pos:start="67:46" pos:end="67:47">&gt;&gt;</operator> <literal type="number" pos:start="67:49" pos:end="67:49">6</literal><operator pos:start="67:50" pos:end="67:50">)</operator> <operator pos:start="67:52" pos:end="67:52">&amp;</operator> <literal type="number" pos:start="67:54" pos:end="67:54">3</literal><operator pos:start="67:55" pos:end="67:55">)</operator> <operator pos:start="67:57" pos:end="67:57">*</operator> <literal type="number" pos:start="67:59" pos:end="67:61">1</literal> <operator pos:start="67:61" pos:end="67:61">+</operator> <literal type="number" pos:start="67:63" pos:end="67:63">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>



    <case pos:start="73:5" pos:end="73:22">case <expr pos:start="73:10" pos:end="73:21"><name pos:start="73:10" pos:end="73:21">WM8750_ADCIN</name></expr>:</case>	<comment type="block" pos:start="73:25" pos:end="73:44">/* ADC Input Mode */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:33"><expr pos:start="75:9" pos:end="75:32"><name pos:start="75:9" pos:end="75:13"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:13">ds</name></name> <operator pos:start="75:15" pos:end="75:15">=</operator> <operator pos:start="75:17" pos:end="75:17">(</operator><name pos:start="75:18" pos:end="75:22">value</name> <operator pos:start="75:24" pos:end="75:25">&gt;&gt;</operator> <literal type="number" pos:start="75:27" pos:end="75:27">8</literal><operator pos:start="75:28" pos:end="75:28">)</operator> <operator pos:start="75:30" pos:end="75:30">&amp;</operator> <literal type="number" pos:start="75:32" pos:end="75:32">1</literal></expr>;</expr_stmt>	<comment type="block" pos:start="75:41" pos:end="75:48">/* DS */</comment>

        <if_stmt pos:start="77:9" pos:end="79:52"><if pos:start="77:9" pos:end="79:52">if <condition pos:start="77:12" pos:end="77:23">(<expr pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:19">diff</name><index pos:start="77:20" pos:end="77:22">[<expr pos:start="77:21" pos:end="77:21"><literal type="number" pos:start="77:21" pos:end="77:21">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:52"><block_content pos:start="79:13" pos:end="79:52">

            <expr_stmt pos:start="79:13" pos:end="79:52"><expr pos:start="79:13" pos:end="79:51"><name pos:start="79:13" pos:end="79:20"><name pos:start="79:13" pos:end="79:13">s</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:17">in</name><index pos:start="79:18" pos:end="79:20">[<expr pos:start="79:19" pos:end="79:19"><literal type="number" pos:start="79:19" pos:end="79:19">0</literal></expr>]</index></name> <operator pos:start="79:22" pos:end="79:22">=</operator> <operator pos:start="79:24" pos:end="79:24">&amp;</operator><name pos:start="79:25" pos:end="79:51"><name pos:start="79:25" pos:end="79:25">s</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:36">adc_voice</name><index pos:start="79:37" pos:end="79:51">[<expr pos:start="79:38" pos:end="79:50"><literal type="number" pos:start="79:38" pos:end="79:40">0</literal> <operator pos:start="79:40" pos:end="79:40">+</operator> <name pos:start="79:42" pos:end="79:46"><name pos:start="79:42" pos:end="79:42">s</name><operator pos:start="79:43" pos:end="79:44">-&gt;</operator><name pos:start="79:45" pos:end="79:46">ds</name></name> <operator pos:start="79:48" pos:end="79:48">*</operator> <literal type="number" pos:start="79:50" pos:end="79:50">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="81:9" pos:end="83:52"><if pos:start="81:9" pos:end="83:52">if <condition pos:start="81:12" pos:end="81:23">(<expr pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:19">diff</name><index pos:start="81:20" pos:end="81:22">[<expr pos:start="81:21" pos:end="81:21"><literal type="number" pos:start="81:21" pos:end="81:21">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:52"><block_content pos:start="83:13" pos:end="83:52">

            <expr_stmt pos:start="83:13" pos:end="83:52"><expr pos:start="83:13" pos:end="83:51"><name pos:start="83:13" pos:end="83:20"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:17">in</name><index pos:start="83:18" pos:end="83:20">[<expr pos:start="83:19" pos:end="83:19"><literal type="number" pos:start="83:19" pos:end="83:19">1</literal></expr>]</index></name> <operator pos:start="83:22" pos:end="83:22">=</operator> <operator pos:start="83:24" pos:end="83:24">&amp;</operator><name pos:start="83:25" pos:end="83:51"><name pos:start="83:25" pos:end="83:25">s</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:36">adc_voice</name><index pos:start="83:37" pos:end="83:51">[<expr pos:start="83:38" pos:end="83:50"><literal type="number" pos:start="83:38" pos:end="83:40">0</literal> <operator pos:start="83:40" pos:end="83:40">+</operator> <name pos:start="83:42" pos:end="83:46"><name pos:start="83:42" pos:end="83:42">s</name><operator pos:start="83:43" pos:end="83:44">-&gt;</operator><name pos:start="83:45" pos:end="83:46">ds</name></name> <operator pos:start="83:48" pos:end="83:48">*</operator> <literal type="number" pos:start="83:50" pos:end="83:50">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:41"><expr pos:start="85:9" pos:end="85:40"><name pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:18">monomix</name><index pos:start="85:19" pos:end="85:21">[<expr pos:start="85:20" pos:end="85:20"><literal type="number" pos:start="85:20" pos:end="85:20">0</literal></expr>]</index></name> <operator pos:start="85:23" pos:end="85:23">=</operator> <operator pos:start="85:25" pos:end="85:25">(</operator><name pos:start="85:26" pos:end="85:30">value</name> <operator pos:start="85:32" pos:end="85:33">&gt;&gt;</operator> <literal type="number" pos:start="85:35" pos:end="85:35">6</literal><operator pos:start="85:36" pos:end="85:36">)</operator> <operator pos:start="85:38" pos:end="85:38">&amp;</operator> <literal type="number" pos:start="85:40" pos:end="85:40">3</literal></expr>;</expr_stmt>	<comment type="block" pos:start="85:49" pos:end="85:61">/* MONOMIX */</comment>

        <break pos:start="87:9" pos:end="87:14">break;</break>



    <case pos:start="91:5" pos:end="91:23">case <expr pos:start="91:10" pos:end="91:22"><name pos:start="91:10" pos:end="91:22">WM8750_ADCTL1</name></expr>:</case>	<comment type="block" pos:start="91:25" pos:end="91:52">/* Additional Control (1) */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:41"><expr pos:start="93:9" pos:end="93:40"><name pos:start="93:9" pos:end="93:21"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:18">monomix</name><index pos:start="93:19" pos:end="93:21">[<expr pos:start="93:20" pos:end="93:20"><literal type="number" pos:start="93:20" pos:end="93:20">1</literal></expr>]</index></name> <operator pos:start="93:23" pos:end="93:23">=</operator> <operator pos:start="93:25" pos:end="93:25">(</operator><name pos:start="93:26" pos:end="93:30">value</name> <operator pos:start="93:32" pos:end="93:33">&gt;&gt;</operator> <literal type="number" pos:start="93:35" pos:end="93:35">1</literal><operator pos:start="93:36" pos:end="93:36">)</operator> <operator pos:start="93:38" pos:end="93:38">&amp;</operator> <literal type="number" pos:start="93:40" pos:end="93:40">1</literal></expr>;</expr_stmt>	<comment type="block" pos:start="93:49" pos:end="93:62">/* DMONOMIX */</comment>

        <break pos:start="95:9" pos:end="95:14">break;</break>



    <case pos:start="99:5" pos:end="99:21">case <expr pos:start="99:10" pos:end="99:20"><name pos:start="99:10" pos:end="99:20">WM8750_PWR1</name></expr>:</case>	<comment type="block" pos:start="99:25" pos:end="99:50">/* Power Management (1) */</comment>

        <expr_stmt pos:start="101:9" pos:end="101:44"><expr pos:start="101:9" pos:end="101:43"><name pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:17">enable</name></name> <operator pos:start="101:19" pos:end="101:19">=</operator> <operator pos:start="101:21" pos:end="101:21">(</operator><operator pos:start="101:22" pos:end="101:22">(</operator><name pos:start="101:23" pos:end="101:27">value</name> <operator pos:start="101:29" pos:end="101:30">&gt;&gt;</operator> <literal type="number" pos:start="101:32" pos:end="101:32">6</literal><operator pos:start="101:33" pos:end="101:33">)</operator> <operator pos:start="101:35" pos:end="101:35">&amp;</operator> <literal type="number" pos:start="101:37" pos:end="101:37">7</literal><operator pos:start="101:38" pos:end="101:38">)</operator> <operator pos:start="101:40" pos:end="101:41">==</operator> <literal type="number" pos:start="101:43" pos:end="101:43">3</literal></expr>;</expr_stmt>	<comment type="block" pos:start="101:49" pos:end="101:67">/* VMIDSEL, VREF */</comment>

        <expr_stmt pos:start="103:9" pos:end="103:29"><expr pos:start="103:9" pos:end="103:28"><call pos:start="103:9" pos:end="103:28"><name pos:start="103:9" pos:end="103:25">wm8750_set_format</name><argument_list pos:start="103:26" pos:end="103:28">(<argument pos:start="103:27" pos:end="103:27"><expr pos:start="103:27" pos:end="103:27"><name pos:start="103:27" pos:end="103:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>



    <case pos:start="109:5" pos:end="109:23">case <expr pos:start="109:10" pos:end="109:22"><name pos:start="109:10" pos:end="109:22">WM8750_LINVOL</name></expr>:</case>	<comment type="block" pos:start="109:25" pos:end="109:46">/* Left Channel PGA */</comment>

        <expr_stmt pos:start="111:9" pos:end="111:35"><expr pos:start="111:9" pos:end="111:34"><name pos:start="111:9" pos:end="111:19"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:16">invol</name><index pos:start="111:17" pos:end="111:19">[<expr pos:start="111:18" pos:end="111:18"><literal type="number" pos:start="111:18" pos:end="111:18">0</literal></expr>]</index></name> <operator pos:start="111:21" pos:end="111:21">=</operator> <name pos:start="111:23" pos:end="111:27">value</name> <operator pos:start="111:29" pos:end="111:29">&amp;</operator> <literal type="number" pos:start="111:31" pos:end="111:34">0x3f</literal></expr>;</expr_stmt>		<comment type="block" pos:start="111:49" pos:end="111:60">/* LINVOL */</comment>

        <expr_stmt pos:start="113:9" pos:end="113:40"><expr pos:start="113:9" pos:end="113:39"><name pos:start="113:9" pos:end="113:20"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:17">inmute</name><index pos:start="113:18" pos:end="113:20">[<expr pos:start="113:19" pos:end="113:19"><literal type="number" pos:start="113:19" pos:end="113:19">0</literal></expr>]</index></name> <operator pos:start="113:22" pos:end="113:22">=</operator> <operator pos:start="113:24" pos:end="113:24">(</operator><name pos:start="113:25" pos:end="113:29">value</name> <operator pos:start="113:31" pos:end="113:32">&gt;&gt;</operator> <literal type="number" pos:start="113:34" pos:end="113:34">7</literal><operator pos:start="113:35" pos:end="113:35">)</operator> <operator pos:start="113:37" pos:end="113:37">&amp;</operator> <literal type="number" pos:start="113:39" pos:end="113:39">1</literal></expr>;</expr_stmt>	<comment type="block" pos:start="113:49" pos:end="113:61">/* LINMUTE */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:29"><expr pos:start="115:9" pos:end="115:28"><call pos:start="115:9" pos:end="115:28"><name pos:start="115:9" pos:end="115:25">wm8750_vol_update</name><argument_list pos:start="115:26" pos:end="115:28">(<argument pos:start="115:27" pos:end="115:27"><expr pos:start="115:27" pos:end="115:27"><name pos:start="115:27" pos:end="115:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="117:9" pos:end="117:14">break;</break>



    <case pos:start="121:5" pos:end="121:23">case <expr pos:start="121:10" pos:end="121:22"><name pos:start="121:10" pos:end="121:22">WM8750_RINVOL</name></expr>:</case>	<comment type="block" pos:start="121:25" pos:end="121:47">/* Right Channel PGA */</comment>

        <expr_stmt pos:start="123:9" pos:end="123:35"><expr pos:start="123:9" pos:end="123:34"><name pos:start="123:9" pos:end="123:19"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:16">invol</name><index pos:start="123:17" pos:end="123:19">[<expr pos:start="123:18" pos:end="123:18"><literal type="number" pos:start="123:18" pos:end="123:18">1</literal></expr>]</index></name> <operator pos:start="123:21" pos:end="123:21">=</operator> <name pos:start="123:23" pos:end="123:27">value</name> <operator pos:start="123:29" pos:end="123:29">&amp;</operator> <literal type="number" pos:start="123:31" pos:end="123:34">0x3f</literal></expr>;</expr_stmt>		<comment type="block" pos:start="123:49" pos:end="123:60">/* RINVOL */</comment>

        <expr_stmt pos:start="125:9" pos:end="125:40"><expr pos:start="125:9" pos:end="125:39"><name pos:start="125:9" pos:end="125:20"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:17">inmute</name><index pos:start="125:18" pos:end="125:20">[<expr pos:start="125:19" pos:end="125:19"><literal type="number" pos:start="125:19" pos:end="125:19">1</literal></expr>]</index></name> <operator pos:start="125:22" pos:end="125:22">=</operator> <operator pos:start="125:24" pos:end="125:24">(</operator><name pos:start="125:25" pos:end="125:29">value</name> <operator pos:start="125:31" pos:end="125:32">&gt;&gt;</operator> <literal type="number" pos:start="125:34" pos:end="125:34">7</literal><operator pos:start="125:35" pos:end="125:35">)</operator> <operator pos:start="125:37" pos:end="125:37">&amp;</operator> <literal type="number" pos:start="125:39" pos:end="125:39">1</literal></expr>;</expr_stmt>	<comment type="block" pos:start="125:49" pos:end="125:61">/* RINMUTE */</comment>

        <expr_stmt pos:start="127:9" pos:end="127:29"><expr pos:start="127:9" pos:end="127:28"><call pos:start="127:9" pos:end="127:28"><name pos:start="127:9" pos:end="127:25">wm8750_vol_update</name><argument_list pos:start="127:26" pos:end="127:28">(<argument pos:start="127:27" pos:end="127:27"><expr pos:start="127:27" pos:end="127:27"><name pos:start="127:27" pos:end="127:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="129:9" pos:end="129:14">break;</break>



    <case pos:start="133:5" pos:end="133:23">case <expr pos:start="133:10" pos:end="133:22"><name pos:start="133:10" pos:end="133:22">WM8750_ADCDAC</name></expr>:</case>	<comment type="block" pos:start="133:25" pos:end="133:49">/* ADC and DAC Control */</comment>

        <expr_stmt pos:start="135:9" pos:end="135:34"><expr pos:start="135:9" pos:end="135:33"><name pos:start="135:9" pos:end="135:14"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:14">pol</name></name> <operator pos:start="135:16" pos:end="135:16">=</operator> <operator pos:start="135:18" pos:end="135:18">(</operator><name pos:start="135:19" pos:end="135:23">value</name> <operator pos:start="135:25" pos:end="135:26">&gt;&gt;</operator> <literal type="number" pos:start="135:28" pos:end="135:28">5</literal><operator pos:start="135:29" pos:end="135:29">)</operator> <operator pos:start="135:31" pos:end="135:31">&amp;</operator> <literal type="number" pos:start="135:33" pos:end="135:33">3</literal></expr>;</expr_stmt>		<comment type="block" pos:start="135:49" pos:end="135:60">/* ADCPOL */</comment>

        <expr_stmt pos:start="137:9" pos:end="137:35"><expr pos:start="137:9" pos:end="137:34"><name pos:start="137:9" pos:end="137:15"><name pos:start="137:9" pos:end="137:9">s</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:15">mute</name></name> <operator pos:start="137:17" pos:end="137:17">=</operator> <operator pos:start="137:19" pos:end="137:19">(</operator><name pos:start="137:20" pos:end="137:24">value</name> <operator pos:start="137:26" pos:end="137:27">&gt;&gt;</operator> <literal type="number" pos:start="137:29" pos:end="137:29">3</literal><operator pos:start="137:30" pos:end="137:30">)</operator> <operator pos:start="137:32" pos:end="137:32">&amp;</operator> <literal type="number" pos:start="137:34" pos:end="137:34">1</literal></expr>;</expr_stmt>		<comment type="block" pos:start="137:49" pos:end="137:59">/* DACMU */</comment>

        <expr_stmt pos:start="139:9" pos:end="139:29"><expr pos:start="139:9" pos:end="139:28"><call pos:start="139:9" pos:end="139:28"><name pos:start="139:9" pos:end="139:25">wm8750_vol_update</name><argument_list pos:start="139:26" pos:end="139:28">(<argument pos:start="139:27" pos:end="139:27"><expr pos:start="139:27" pos:end="139:27"><name pos:start="139:27" pos:end="139:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="141:9" pos:end="141:14">break;</break>



    <case pos:start="145:5" pos:end="145:23">case <expr pos:start="145:10" pos:end="145:22"><name pos:start="145:10" pos:end="145:22">WM8750_ADCTL3</name></expr>:</case>	<comment type="block" pos:start="145:25" pos:end="145:52">/* Additional Control (3) */</comment>

        <break pos:start="147:9" pos:end="147:14">break;</break>



    <case pos:start="151:5" pos:end="151:21">case <expr pos:start="151:10" pos:end="151:20"><name pos:start="151:10" pos:end="151:20">WM8750_LADC</name></expr>:</case>	<comment type="block" pos:start="151:25" pos:end="151:53">/* Left ADC Digital Volume */</comment>

        <expr_stmt pos:start="153:9" pos:end="153:35"><expr pos:start="153:9" pos:end="153:34"><name pos:start="153:9" pos:end="153:19"><name pos:start="153:9" pos:end="153:9">s</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:16">invol</name><index pos:start="153:17" pos:end="153:19">[<expr pos:start="153:18" pos:end="153:18"><literal type="number" pos:start="153:18" pos:end="153:18">2</literal></expr>]</index></name> <operator pos:start="153:21" pos:end="153:21">=</operator> <name pos:start="153:23" pos:end="153:27">value</name> <operator pos:start="153:29" pos:end="153:29">&amp;</operator> <literal type="number" pos:start="153:31" pos:end="153:34">0xff</literal></expr>;</expr_stmt>		<comment type="block" pos:start="153:49" pos:end="153:61">/* LADCVOL */</comment>

        <expr_stmt pos:start="155:9" pos:end="155:29"><expr pos:start="155:9" pos:end="155:28"><call pos:start="155:9" pos:end="155:28"><name pos:start="155:9" pos:end="155:25">wm8750_vol_update</name><argument_list pos:start="155:26" pos:end="155:28">(<argument pos:start="155:27" pos:end="155:27"><expr pos:start="155:27" pos:end="155:27"><name pos:start="155:27" pos:end="155:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="157:9" pos:end="157:14">break;</break>



    <case pos:start="161:5" pos:end="161:21">case <expr pos:start="161:10" pos:end="161:20"><name pos:start="161:10" pos:end="161:20">WM8750_RADC</name></expr>:</case>	<comment type="block" pos:start="161:25" pos:end="161:54">/* Right ADC Digital Volume */</comment>

        <expr_stmt pos:start="163:9" pos:end="163:35"><expr pos:start="163:9" pos:end="163:34"><name pos:start="163:9" pos:end="163:19"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:16">invol</name><index pos:start="163:17" pos:end="163:19">[<expr pos:start="163:18" pos:end="163:18"><literal type="number" pos:start="163:18" pos:end="163:18">3</literal></expr>]</index></name> <operator pos:start="163:21" pos:end="163:21">=</operator> <name pos:start="163:23" pos:end="163:27">value</name> <operator pos:start="163:29" pos:end="163:29">&amp;</operator> <literal type="number" pos:start="163:31" pos:end="163:34">0xff</literal></expr>;</expr_stmt>		<comment type="block" pos:start="163:49" pos:end="163:61">/* RADCVOL */</comment>

        <expr_stmt pos:start="165:9" pos:end="165:29"><expr pos:start="165:9" pos:end="165:28"><call pos:start="165:9" pos:end="165:28"><name pos:start="165:9" pos:end="165:25">wm8750_vol_update</name><argument_list pos:start="165:26" pos:end="165:28">(<argument pos:start="165:27" pos:end="165:27"><expr pos:start="165:27" pos:end="165:27"><name pos:start="165:27" pos:end="165:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="167:9" pos:end="167:14">break;</break>



    <case pos:start="171:5" pos:end="171:21">case <expr pos:start="171:10" pos:end="171:20"><name pos:start="171:10" pos:end="171:20">WM8750_ALC1</name></expr>:</case>	<comment type="block" pos:start="171:25" pos:end="171:45">/* ALC Control (1) */</comment>

        <expr_stmt pos:start="173:9" pos:end="173:34"><expr pos:start="173:9" pos:end="173:33"><name pos:start="173:9" pos:end="173:14"><name pos:start="173:9" pos:end="173:9">s</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:14">alc</name></name> <operator pos:start="173:16" pos:end="173:16">=</operator> <operator pos:start="173:18" pos:end="173:18">(</operator><name pos:start="173:19" pos:end="173:23">value</name> <operator pos:start="173:25" pos:end="173:26">&gt;&gt;</operator> <literal type="number" pos:start="173:28" pos:end="173:28">7</literal><operator pos:start="173:29" pos:end="173:29">)</operator> <operator pos:start="173:31" pos:end="173:31">&amp;</operator> <literal type="number" pos:start="173:33" pos:end="173:33">3</literal></expr>;</expr_stmt>		<comment type="block" pos:start="173:49" pos:end="173:60">/* ALCSEL */</comment>

        <break pos:start="175:9" pos:end="175:14">break;</break>



    <case pos:start="179:5" pos:end="179:22">case <expr pos:start="179:10" pos:end="179:21"><name pos:start="179:10" pos:end="179:21">WM8750_NGATE</name></expr>:</case>	<comment type="block" pos:start="179:25" pos:end="179:48">/* Noise Gate Control */</comment>

    <case pos:start="181:5" pos:end="181:19">case <expr pos:start="181:10" pos:end="181:18"><name pos:start="181:10" pos:end="181:18">WM8750_3D</name></expr>:</case>	<comment type="block" pos:start="181:25" pos:end="181:40">/* 3D enhance */</comment>

        <break pos:start="183:9" pos:end="183:14">break;</break>



    <case pos:start="187:5" pos:end="187:21">case <expr pos:start="187:10" pos:end="187:20"><name pos:start="187:10" pos:end="187:20">WM8750_LDAC</name></expr>:</case>	<comment type="block" pos:start="187:25" pos:end="187:57">/* Left Channel Digital Volume */</comment>

        <expr_stmt pos:start="189:9" pos:end="189:36"><expr pos:start="189:9" pos:end="189:35"><name pos:start="189:9" pos:end="189:20"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:17">outvol</name><index pos:start="189:18" pos:end="189:20">[<expr pos:start="189:19" pos:end="189:19"><literal type="number" pos:start="189:19" pos:end="189:19">0</literal></expr>]</index></name> <operator pos:start="189:22" pos:end="189:22">=</operator> <name pos:start="189:24" pos:end="189:28">value</name> <operator pos:start="189:30" pos:end="189:30">&amp;</operator> <literal type="number" pos:start="189:32" pos:end="189:35">0xff</literal></expr>;</expr_stmt>		<comment type="block" pos:start="189:49" pos:end="189:61">/* LDACVOL */</comment>

        <expr_stmt pos:start="191:9" pos:end="191:29"><expr pos:start="191:9" pos:end="191:28"><call pos:start="191:9" pos:end="191:28"><name pos:start="191:9" pos:end="191:25">wm8750_vol_update</name><argument_list pos:start="191:26" pos:end="191:28">(<argument pos:start="191:27" pos:end="191:27"><expr pos:start="191:27" pos:end="191:27"><name pos:start="191:27" pos:end="191:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="193:9" pos:end="193:14">break;</break>



    <case pos:start="197:5" pos:end="197:21">case <expr pos:start="197:10" pos:end="197:20"><name pos:start="197:10" pos:end="197:20">WM8750_RDAC</name></expr>:</case>	<comment type="block" pos:start="197:25" pos:end="197:58">/* Right Channel Digital Volume */</comment>

        <expr_stmt pos:start="199:9" pos:end="199:36"><expr pos:start="199:9" pos:end="199:35"><name pos:start="199:9" pos:end="199:20"><name pos:start="199:9" pos:end="199:9">s</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:17">outvol</name><index pos:start="199:18" pos:end="199:20">[<expr pos:start="199:19" pos:end="199:19"><literal type="number" pos:start="199:19" pos:end="199:19">1</literal></expr>]</index></name> <operator pos:start="199:22" pos:end="199:22">=</operator> <name pos:start="199:24" pos:end="199:28">value</name> <operator pos:start="199:30" pos:end="199:30">&amp;</operator> <literal type="number" pos:start="199:32" pos:end="199:35">0xff</literal></expr>;</expr_stmt>		<comment type="block" pos:start="199:49" pos:end="199:61">/* RDACVOL */</comment>

        <expr_stmt pos:start="201:9" pos:end="201:29"><expr pos:start="201:9" pos:end="201:28"><call pos:start="201:9" pos:end="201:28"><name pos:start="201:9" pos:end="201:25">wm8750_vol_update</name><argument_list pos:start="201:26" pos:end="201:28">(<argument pos:start="201:27" pos:end="201:27"><expr pos:start="201:27" pos:end="201:27"><name pos:start="201:27" pos:end="201:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="203:9" pos:end="203:14">break;</break>



    <case pos:start="207:5" pos:end="207:21">case <expr pos:start="207:10" pos:end="207:20"><name pos:start="207:10" pos:end="207:20">WM8750_BASS</name></expr>:</case>	<comment type="block" pos:start="207:25" pos:end="207:42">/* Bass Control */</comment>

        <break pos:start="209:9" pos:end="209:14">break;</break>



    <case pos:start="213:5" pos:end="213:23">case <expr pos:start="213:10" pos:end="213:22"><name pos:start="213:10" pos:end="213:22">WM8750_LOUTM1</name></expr>:</case>	<comment type="block" pos:start="213:25" pos:end="213:52">/* Left Mixer Control (1) */</comment>

        <expr_stmt pos:start="215:9" pos:end="215:38"><expr pos:start="215:9" pos:end="215:37"><name pos:start="215:9" pos:end="215:18"><name pos:start="215:9" pos:end="215:9">s</name><operator pos:start="215:10" pos:end="215:11">-&gt;</operator><name pos:start="215:12" pos:end="215:15">path</name><index pos:start="215:16" pos:end="215:18">[<expr pos:start="215:17" pos:end="215:17"><literal type="number" pos:start="215:17" pos:end="215:17">0</literal></expr>]</index></name> <operator pos:start="215:20" pos:end="215:20">=</operator> <operator pos:start="215:22" pos:end="215:22">(</operator><name pos:start="215:23" pos:end="215:27">value</name> <operator pos:start="215:29" pos:end="215:30">&gt;&gt;</operator> <literal type="number" pos:start="215:32" pos:end="215:32">8</literal><operator pos:start="215:33" pos:end="215:33">)</operator> <operator pos:start="215:35" pos:end="215:35">&amp;</operator> <literal type="number" pos:start="215:37" pos:end="215:37">1</literal></expr>;</expr_stmt>		<comment type="block" pos:start="215:49" pos:end="215:59">/* LD2LO */</comment>

        <comment type="block" pos:start="217:9" pos:end="217:48">/* TODO: mute/unmute respective paths */</comment>

        <expr_stmt pos:start="219:9" pos:end="219:29"><expr pos:start="219:9" pos:end="219:28"><call pos:start="219:9" pos:end="219:28"><name pos:start="219:9" pos:end="219:25">wm8750_vol_update</name><argument_list pos:start="219:26" pos:end="219:28">(<argument pos:start="219:27" pos:end="219:27"><expr pos:start="219:27" pos:end="219:27"><name pos:start="219:27" pos:end="219:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="221:9" pos:end="221:14">break;</break>



    <case pos:start="225:5" pos:end="225:23">case <expr pos:start="225:10" pos:end="225:22"><name pos:start="225:10" pos:end="225:22">WM8750_LOUTM2</name></expr>:</case>	<comment type="block" pos:start="225:25" pos:end="225:52">/* Left Mixer Control (2) */</comment>

        <expr_stmt pos:start="227:9" pos:end="227:38"><expr pos:start="227:9" pos:end="227:37"><name pos:start="227:9" pos:end="227:18"><name pos:start="227:9" pos:end="227:9">s</name><operator pos:start="227:10" pos:end="227:11">-&gt;</operator><name pos:start="227:12" pos:end="227:15">path</name><index pos:start="227:16" pos:end="227:18">[<expr pos:start="227:17" pos:end="227:17"><literal type="number" pos:start="227:17" pos:end="227:17">1</literal></expr>]</index></name> <operator pos:start="227:20" pos:end="227:20">=</operator> <operator pos:start="227:22" pos:end="227:22">(</operator><name pos:start="227:23" pos:end="227:27">value</name> <operator pos:start="227:29" pos:end="227:30">&gt;&gt;</operator> <literal type="number" pos:start="227:32" pos:end="227:32">8</literal><operator pos:start="227:33" pos:end="227:33">)</operator> <operator pos:start="227:35" pos:end="227:35">&amp;</operator> <literal type="number" pos:start="227:37" pos:end="227:37">1</literal></expr>;</expr_stmt>		<comment type="block" pos:start="227:49" pos:end="227:59">/* RD2LO */</comment>

        <comment type="block" pos:start="229:9" pos:end="229:48">/* TODO: mute/unmute respective paths */</comment>

        <expr_stmt pos:start="231:9" pos:end="231:29"><expr pos:start="231:9" pos:end="231:28"><call pos:start="231:9" pos:end="231:28"><name pos:start="231:9" pos:end="231:25">wm8750_vol_update</name><argument_list pos:start="231:26" pos:end="231:28">(<argument pos:start="231:27" pos:end="231:27"><expr pos:start="231:27" pos:end="231:27"><name pos:start="231:27" pos:end="231:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="233:9" pos:end="233:14">break;</break>



    <case pos:start="237:5" pos:end="237:23">case <expr pos:start="237:10" pos:end="237:22"><name pos:start="237:10" pos:end="237:22">WM8750_ROUTM1</name></expr>:</case>	<comment type="block" pos:start="237:25" pos:end="237:53">/* Right Mixer Control (1) */</comment>

        <expr_stmt pos:start="239:9" pos:end="239:38"><expr pos:start="239:9" pos:end="239:37"><name pos:start="239:9" pos:end="239:18"><name pos:start="239:9" pos:end="239:9">s</name><operator pos:start="239:10" pos:end="239:11">-&gt;</operator><name pos:start="239:12" pos:end="239:15">path</name><index pos:start="239:16" pos:end="239:18">[<expr pos:start="239:17" pos:end="239:17"><literal type="number" pos:start="239:17" pos:end="239:17">2</literal></expr>]</index></name> <operator pos:start="239:20" pos:end="239:20">=</operator> <operator pos:start="239:22" pos:end="239:22">(</operator><name pos:start="239:23" pos:end="239:27">value</name> <operator pos:start="239:29" pos:end="239:30">&gt;&gt;</operator> <literal type="number" pos:start="239:32" pos:end="239:32">8</literal><operator pos:start="239:33" pos:end="239:33">)</operator> <operator pos:start="239:35" pos:end="239:35">&amp;</operator> <literal type="number" pos:start="239:37" pos:end="239:37">1</literal></expr>;</expr_stmt>		<comment type="block" pos:start="239:49" pos:end="239:59">/* LD2RO */</comment>

        <comment type="block" pos:start="241:9" pos:end="241:48">/* TODO: mute/unmute respective paths */</comment>

        <expr_stmt pos:start="243:9" pos:end="243:29"><expr pos:start="243:9" pos:end="243:28"><call pos:start="243:9" pos:end="243:28"><name pos:start="243:9" pos:end="243:25">wm8750_vol_update</name><argument_list pos:start="243:26" pos:end="243:28">(<argument pos:start="243:27" pos:end="243:27"><expr pos:start="243:27" pos:end="243:27"><name pos:start="243:27" pos:end="243:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="245:9" pos:end="245:14">break;</break>



    <case pos:start="249:5" pos:end="249:23">case <expr pos:start="249:10" pos:end="249:22"><name pos:start="249:10" pos:end="249:22">WM8750_ROUTM2</name></expr>:</case>	<comment type="block" pos:start="249:25" pos:end="249:53">/* Right Mixer Control (2) */</comment>

        <expr_stmt pos:start="251:9" pos:end="251:38"><expr pos:start="251:9" pos:end="251:37"><name pos:start="251:9" pos:end="251:18"><name pos:start="251:9" pos:end="251:9">s</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:15">path</name><index pos:start="251:16" pos:end="251:18">[<expr pos:start="251:17" pos:end="251:17"><literal type="number" pos:start="251:17" pos:end="251:17">3</literal></expr>]</index></name> <operator pos:start="251:20" pos:end="251:20">=</operator> <operator pos:start="251:22" pos:end="251:22">(</operator><name pos:start="251:23" pos:end="251:27">value</name> <operator pos:start="251:29" pos:end="251:30">&gt;&gt;</operator> <literal type="number" pos:start="251:32" pos:end="251:32">8</literal><operator pos:start="251:33" pos:end="251:33">)</operator> <operator pos:start="251:35" pos:end="251:35">&amp;</operator> <literal type="number" pos:start="251:37" pos:end="251:37">1</literal></expr>;</expr_stmt>		<comment type="block" pos:start="251:49" pos:end="251:59">/* RD2RO */</comment>

        <comment type="block" pos:start="253:9" pos:end="253:48">/* TODO: mute/unmute respective paths */</comment>

        <expr_stmt pos:start="255:9" pos:end="255:29"><expr pos:start="255:9" pos:end="255:28"><call pos:start="255:9" pos:end="255:28"><name pos:start="255:9" pos:end="255:25">wm8750_vol_update</name><argument_list pos:start="255:26" pos:end="255:28">(<argument pos:start="255:27" pos:end="255:27"><expr pos:start="255:27" pos:end="255:27"><name pos:start="255:27" pos:end="255:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="257:9" pos:end="257:14">break;</break>



    <case pos:start="261:5" pos:end="261:23">case <expr pos:start="261:10" pos:end="261:22"><name pos:start="261:10" pos:end="261:22">WM8750_MOUTM1</name></expr>:</case>	<comment type="block" pos:start="261:25" pos:end="261:52">/* Mono Mixer Control (1) */</comment>

        <expr_stmt pos:start="263:9" pos:end="263:39"><expr pos:start="263:9" pos:end="263:38"><name pos:start="263:9" pos:end="263:19"><name pos:start="263:9" pos:end="263:9">s</name><operator pos:start="263:10" pos:end="263:11">-&gt;</operator><name pos:start="263:12" pos:end="263:16">mpath</name><index pos:start="263:17" pos:end="263:19">[<expr pos:start="263:18" pos:end="263:18"><literal type="number" pos:start="263:18" pos:end="263:18">0</literal></expr>]</index></name> <operator pos:start="263:21" pos:end="263:21">=</operator> <operator pos:start="263:23" pos:end="263:23">(</operator><name pos:start="263:24" pos:end="263:28">value</name> <operator pos:start="263:30" pos:end="263:31">&gt;&gt;</operator> <literal type="number" pos:start="263:33" pos:end="263:33">8</literal><operator pos:start="263:34" pos:end="263:34">)</operator> <operator pos:start="263:36" pos:end="263:36">&amp;</operator> <literal type="number" pos:start="263:38" pos:end="263:38">1</literal></expr>;</expr_stmt>		<comment type="block" pos:start="263:49" pos:end="263:59">/* LD2MO */</comment>

        <comment type="block" pos:start="265:9" pos:end="265:48">/* TODO: mute/unmute respective paths */</comment>

        <expr_stmt pos:start="267:9" pos:end="267:29"><expr pos:start="267:9" pos:end="267:28"><call pos:start="267:9" pos:end="267:28"><name pos:start="267:9" pos:end="267:25">wm8750_vol_update</name><argument_list pos:start="267:26" pos:end="267:28">(<argument pos:start="267:27" pos:end="267:27"><expr pos:start="267:27" pos:end="267:27"><name pos:start="267:27" pos:end="267:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="269:9" pos:end="269:14">break;</break>



    <case pos:start="273:5" pos:end="273:23">case <expr pos:start="273:10" pos:end="273:22"><name pos:start="273:10" pos:end="273:22">WM8750_MOUTM2</name></expr>:</case>	<comment type="block" pos:start="273:25" pos:end="273:52">/* Mono Mixer Control (2) */</comment>

        <expr_stmt pos:start="275:9" pos:end="275:39"><expr pos:start="275:9" pos:end="275:38"><name pos:start="275:9" pos:end="275:19"><name pos:start="275:9" pos:end="275:9">s</name><operator pos:start="275:10" pos:end="275:11">-&gt;</operator><name pos:start="275:12" pos:end="275:16">mpath</name><index pos:start="275:17" pos:end="275:19">[<expr pos:start="275:18" pos:end="275:18"><literal type="number" pos:start="275:18" pos:end="275:18">1</literal></expr>]</index></name> <operator pos:start="275:21" pos:end="275:21">=</operator> <operator pos:start="275:23" pos:end="275:23">(</operator><name pos:start="275:24" pos:end="275:28">value</name> <operator pos:start="275:30" pos:end="275:31">&gt;&gt;</operator> <literal type="number" pos:start="275:33" pos:end="275:33">8</literal><operator pos:start="275:34" pos:end="275:34">)</operator> <operator pos:start="275:36" pos:end="275:36">&amp;</operator> <literal type="number" pos:start="275:38" pos:end="275:38">1</literal></expr>;</expr_stmt>		<comment type="block" pos:start="275:49" pos:end="275:59">/* RD2MO */</comment>

        <comment type="block" pos:start="277:9" pos:end="277:48">/* TODO: mute/unmute respective paths */</comment>

        <expr_stmt pos:start="279:9" pos:end="279:29"><expr pos:start="279:9" pos:end="279:28"><call pos:start="279:9" pos:end="279:28"><name pos:start="279:9" pos:end="279:25">wm8750_vol_update</name><argument_list pos:start="279:26" pos:end="279:28">(<argument pos:start="279:27" pos:end="279:27"><expr pos:start="279:27" pos:end="279:27"><name pos:start="279:27" pos:end="279:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="281:9" pos:end="281:14">break;</break>



    <case pos:start="285:5" pos:end="285:23">case <expr pos:start="285:10" pos:end="285:22"><name pos:start="285:10" pos:end="285:22">WM8750_LOUT1V</name></expr>:</case>	<comment type="block" pos:start="285:25" pos:end="285:42">/* LOUT1 Volume */</comment>

        <expr_stmt pos:start="287:9" pos:end="287:36"><expr pos:start="287:9" pos:end="287:35"><name pos:start="287:9" pos:end="287:20"><name pos:start="287:9" pos:end="287:9">s</name><operator pos:start="287:10" pos:end="287:11">-&gt;</operator><name pos:start="287:12" pos:end="287:17">outvol</name><index pos:start="287:18" pos:end="287:20">[<expr pos:start="287:19" pos:end="287:19"><literal type="number" pos:start="287:19" pos:end="287:19">2</literal></expr>]</index></name> <operator pos:start="287:22" pos:end="287:22">=</operator> <name pos:start="287:24" pos:end="287:28">value</name> <operator pos:start="287:30" pos:end="287:30">&amp;</operator> <literal type="number" pos:start="287:32" pos:end="287:35">0x7f</literal></expr>;</expr_stmt>		<comment type="block" pos:start="287:49" pos:end="287:62">/* LOUT1VOL */</comment>

        <expr_stmt pos:start="289:9" pos:end="289:29"><expr pos:start="289:9" pos:end="289:28"><call pos:start="289:9" pos:end="289:28"><name pos:start="289:9" pos:end="289:25">wm8750_vol_update</name><argument_list pos:start="289:26" pos:end="289:28">(<argument pos:start="289:27" pos:end="289:27"><expr pos:start="289:27" pos:end="289:27"><name pos:start="289:27" pos:end="289:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="291:9" pos:end="291:14">break;</break>



    <case pos:start="295:5" pos:end="295:23">case <expr pos:start="295:10" pos:end="295:22"><name pos:start="295:10" pos:end="295:22">WM8750_LOUT2V</name></expr>:</case>	<comment type="block" pos:start="295:25" pos:end="295:42">/* LOUT2 Volume */</comment>

        <expr_stmt pos:start="297:9" pos:end="297:36"><expr pos:start="297:9" pos:end="297:35"><name pos:start="297:9" pos:end="297:20"><name pos:start="297:9" pos:end="297:9">s</name><operator pos:start="297:10" pos:end="297:11">-&gt;</operator><name pos:start="297:12" pos:end="297:17">outvol</name><index pos:start="297:18" pos:end="297:20">[<expr pos:start="297:19" pos:end="297:19"><literal type="number" pos:start="297:19" pos:end="297:19">4</literal></expr>]</index></name> <operator pos:start="297:22" pos:end="297:22">=</operator> <name pos:start="297:24" pos:end="297:28">value</name> <operator pos:start="297:30" pos:end="297:30">&amp;</operator> <literal type="number" pos:start="297:32" pos:end="297:35">0x7f</literal></expr>;</expr_stmt>		<comment type="block" pos:start="297:49" pos:end="297:62">/* LOUT2VOL */</comment>

        <expr_stmt pos:start="299:9" pos:end="299:29"><expr pos:start="299:9" pos:end="299:28"><call pos:start="299:9" pos:end="299:28"><name pos:start="299:9" pos:end="299:25">wm8750_vol_update</name><argument_list pos:start="299:26" pos:end="299:28">(<argument pos:start="299:27" pos:end="299:27"><expr pos:start="299:27" pos:end="299:27"><name pos:start="299:27" pos:end="299:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="301:9" pos:end="301:14">break;</break>



    <case pos:start="305:5" pos:end="305:23">case <expr pos:start="305:10" pos:end="305:22"><name pos:start="305:10" pos:end="305:22">WM8750_ROUT1V</name></expr>:</case>	<comment type="block" pos:start="305:25" pos:end="305:42">/* ROUT1 Volume */</comment>

        <expr_stmt pos:start="307:9" pos:end="307:36"><expr pos:start="307:9" pos:end="307:35"><name pos:start="307:9" pos:end="307:20"><name pos:start="307:9" pos:end="307:9">s</name><operator pos:start="307:10" pos:end="307:11">-&gt;</operator><name pos:start="307:12" pos:end="307:17">outvol</name><index pos:start="307:18" pos:end="307:20">[<expr pos:start="307:19" pos:end="307:19"><literal type="number" pos:start="307:19" pos:end="307:19">3</literal></expr>]</index></name> <operator pos:start="307:22" pos:end="307:22">=</operator> <name pos:start="307:24" pos:end="307:28">value</name> <operator pos:start="307:30" pos:end="307:30">&amp;</operator> <literal type="number" pos:start="307:32" pos:end="307:35">0x7f</literal></expr>;</expr_stmt>		<comment type="block" pos:start="307:49" pos:end="307:62">/* ROUT1VOL */</comment>

        <expr_stmt pos:start="309:9" pos:end="309:29"><expr pos:start="309:9" pos:end="309:28"><call pos:start="309:9" pos:end="309:28"><name pos:start="309:9" pos:end="309:25">wm8750_vol_update</name><argument_list pos:start="309:26" pos:end="309:28">(<argument pos:start="309:27" pos:end="309:27"><expr pos:start="309:27" pos:end="309:27"><name pos:start="309:27" pos:end="309:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="311:9" pos:end="311:14">break;</break>



    <case pos:start="315:5" pos:end="315:23">case <expr pos:start="315:10" pos:end="315:22"><name pos:start="315:10" pos:end="315:22">WM8750_ROUT2V</name></expr>:</case>	<comment type="block" pos:start="315:25" pos:end="315:42">/* ROUT2 Volume */</comment>

        <expr_stmt pos:start="317:9" pos:end="317:36"><expr pos:start="317:9" pos:end="317:35"><name pos:start="317:9" pos:end="317:20"><name pos:start="317:9" pos:end="317:9">s</name><operator pos:start="317:10" pos:end="317:11">-&gt;</operator><name pos:start="317:12" pos:end="317:17">outvol</name><index pos:start="317:18" pos:end="317:20">[<expr pos:start="317:19" pos:end="317:19"><literal type="number" pos:start="317:19" pos:end="317:19">5</literal></expr>]</index></name> <operator pos:start="317:22" pos:end="317:22">=</operator> <name pos:start="317:24" pos:end="317:28">value</name> <operator pos:start="317:30" pos:end="317:30">&amp;</operator> <literal type="number" pos:start="317:32" pos:end="317:35">0x7f</literal></expr>;</expr_stmt>		<comment type="block" pos:start="317:49" pos:end="317:62">/* ROUT2VOL */</comment>

        <expr_stmt pos:start="319:9" pos:end="319:29"><expr pos:start="319:9" pos:end="319:28"><call pos:start="319:9" pos:end="319:28"><name pos:start="319:9" pos:end="319:25">wm8750_vol_update</name><argument_list pos:start="319:26" pos:end="319:28">(<argument pos:start="319:27" pos:end="319:27"><expr pos:start="319:27" pos:end="319:27"><name pos:start="319:27" pos:end="319:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="321:9" pos:end="321:14">break;</break>



    <case pos:start="325:5" pos:end="325:22">case <expr pos:start="325:10" pos:end="325:21"><name pos:start="325:10" pos:end="325:21">WM8750_MOUTV</name></expr>:</case>	<comment type="block" pos:start="325:25" pos:end="325:44">/* MONOOUT Volume */</comment>

        <expr_stmt pos:start="327:9" pos:end="327:36"><expr pos:start="327:9" pos:end="327:35"><name pos:start="327:9" pos:end="327:20"><name pos:start="327:9" pos:end="327:9">s</name><operator pos:start="327:10" pos:end="327:11">-&gt;</operator><name pos:start="327:12" pos:end="327:17">outvol</name><index pos:start="327:18" pos:end="327:20">[<expr pos:start="327:19" pos:end="327:19"><literal type="number" pos:start="327:19" pos:end="327:19">6</literal></expr>]</index></name> <operator pos:start="327:22" pos:end="327:22">=</operator> <name pos:start="327:24" pos:end="327:28">value</name> <operator pos:start="327:30" pos:end="327:30">&amp;</operator> <literal type="number" pos:start="327:32" pos:end="327:35">0x7f</literal></expr>;</expr_stmt>		<comment type="block" pos:start="327:49" pos:end="327:64">/* MONOOUTVOL */</comment>

        <expr_stmt pos:start="329:9" pos:end="329:29"><expr pos:start="329:9" pos:end="329:28"><call pos:start="329:9" pos:end="329:28"><name pos:start="329:9" pos:end="329:25">wm8750_vol_update</name><argument_list pos:start="329:26" pos:end="329:28">(<argument pos:start="329:27" pos:end="329:27"><expr pos:start="329:27" pos:end="329:27"><name pos:start="329:27" pos:end="329:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="331:9" pos:end="331:14">break;</break>



    <case pos:start="335:5" pos:end="335:23">case <expr pos:start="335:10" pos:end="335:22"><name pos:start="335:10" pos:end="335:22">WM8750_ADCTL2</name></expr>:</case>	<comment type="block" pos:start="335:25" pos:end="335:52">/* Additional Control (2) */</comment>

        <break pos:start="337:9" pos:end="337:14">break;</break>



    <case pos:start="341:5" pos:end="341:21">case <expr pos:start="341:10" pos:end="341:20"><name pos:start="341:10" pos:end="341:20">WM8750_PWR2</name></expr>:</case>	<comment type="block" pos:start="341:25" pos:end="341:50">/* Power Management (2) */</comment>

        <expr_stmt pos:start="343:9" pos:end="343:32"><expr pos:start="343:9" pos:end="343:31"><name pos:start="343:9" pos:end="343:16"><name pos:start="343:9" pos:end="343:9">s</name><operator pos:start="343:10" pos:end="343:11">-&gt;</operator><name pos:start="343:12" pos:end="343:16">power</name></name> <operator pos:start="343:18" pos:end="343:18">=</operator> <name pos:start="343:20" pos:end="343:24">value</name> <operator pos:start="343:26" pos:end="343:26">&amp;</operator> <literal type="number" pos:start="343:28" pos:end="343:31">0x7e</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="345:9" pos:end="345:48">/* TODO: mute/unmute respective paths */</comment>

        <expr_stmt pos:start="347:9" pos:end="347:29"><expr pos:start="347:9" pos:end="347:28"><call pos:start="347:9" pos:end="347:28"><name pos:start="347:9" pos:end="347:25">wm8750_vol_update</name><argument_list pos:start="347:26" pos:end="347:28">(<argument pos:start="347:27" pos:end="347:27"><expr pos:start="347:27" pos:end="347:27"><name pos:start="347:27" pos:end="347:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="349:9" pos:end="349:14">break;</break>



    <case pos:start="353:5" pos:end="353:22">case <expr pos:start="353:10" pos:end="353:21"><name pos:start="353:10" pos:end="353:21">WM8750_IFACE</name></expr>:</case>	<comment type="block" pos:start="353:25" pos:end="353:60">/* Digital Audio Interface Format */</comment>

        <expr_stmt pos:start="355:9" pos:end="355:26"><expr pos:start="355:9" pos:end="355:25"><name pos:start="355:9" pos:end="355:17"><name pos:start="355:9" pos:end="355:9">s</name><operator pos:start="355:10" pos:end="355:11">-&gt;</operator><name pos:start="355:12" pos:end="355:17">format</name></name> <operator pos:start="355:19" pos:end="355:19">=</operator> <name pos:start="355:21" pos:end="355:25">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="357:9" pos:end="357:37"><expr pos:start="357:9" pos:end="357:36"><name pos:start="357:9" pos:end="357:17"><name pos:start="357:9" pos:end="357:9">s</name><operator pos:start="357:10" pos:end="357:11">-&gt;</operator><name pos:start="357:12" pos:end="357:17">master</name></name> <operator pos:start="357:19" pos:end="357:19">=</operator> <operator pos:start="357:21" pos:end="357:21">(</operator><name pos:start="357:22" pos:end="357:26">value</name> <operator pos:start="357:28" pos:end="357:29">&gt;&gt;</operator> <literal type="number" pos:start="357:31" pos:end="357:31">6</literal><operator pos:start="357:32" pos:end="357:32">)</operator> <operator pos:start="357:34" pos:end="357:34">&amp;</operator> <literal type="number" pos:start="357:36" pos:end="357:36">1</literal></expr>;</expr_stmt>			<comment type="block" pos:start="357:57" pos:end="357:64">/* MS */</comment>

        <expr_stmt pos:start="359:9" pos:end="359:40"><expr pos:start="359:9" pos:end="359:39"><call pos:start="359:9" pos:end="359:39"><name pos:start="359:9" pos:end="359:25">wm8750_clk_update</name><argument_list pos:start="359:26" pos:end="359:39">(<argument pos:start="359:27" pos:end="359:27"><expr pos:start="359:27" pos:end="359:27"><name pos:start="359:27" pos:end="359:27">s</name></expr></argument>, <argument pos:start="359:30" pos:end="359:38"><expr pos:start="359:30" pos:end="359:38"><name pos:start="359:30" pos:end="359:38"><name pos:start="359:30" pos:end="359:30">s</name><operator pos:start="359:31" pos:end="359:32">-&gt;</operator><name pos:start="359:33" pos:end="359:38">master</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="361:9" pos:end="361:14">break;</break>



    <case pos:start="365:5" pos:end="365:22">case <expr pos:start="365:10" pos:end="365:21"><name pos:start="365:10" pos:end="365:21">WM8750_SRATE</name></expr>:</case>	<comment type="block" pos:start="365:25" pos:end="365:62">/* Clocking and Sample Rate Control */</comment>

        <expr_stmt pos:start="367:9" pos:end="367:54"><expr pos:start="367:9" pos:end="367:53"><name pos:start="367:9" pos:end="367:15"><name pos:start="367:9" pos:end="367:9">s</name><operator pos:start="367:10" pos:end="367:11">-&gt;</operator><name pos:start="367:12" pos:end="367:15">rate</name></name> <operator pos:start="367:17" pos:end="367:17">=</operator> <operator pos:start="367:19" pos:end="367:19">&amp;</operator><name pos:start="367:20" pos:end="367:53"><name pos:start="367:20" pos:end="367:32">wm_rate_table</name><index pos:start="367:33" pos:end="367:53">[<expr pos:start="367:34" pos:end="367:52"><operator pos:start="367:34" pos:end="367:34">(</operator><name pos:start="367:35" pos:end="367:39">value</name> <operator pos:start="367:41" pos:end="367:42">&gt;&gt;</operator> <literal type="number" pos:start="367:44" pos:end="367:44">1</literal><operator pos:start="367:45" pos:end="367:45">)</operator> <operator pos:start="367:47" pos:end="367:47">&amp;</operator> <literal type="number" pos:start="367:49" pos:end="367:52">0x1f</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="369:9" pos:end="369:32"><expr pos:start="369:9" pos:end="369:31"><call pos:start="369:9" pos:end="369:31"><name pos:start="369:9" pos:end="369:25">wm8750_clk_update</name><argument_list pos:start="369:26" pos:end="369:31">(<argument pos:start="369:27" pos:end="369:27"><expr pos:start="369:27" pos:end="369:27"><name pos:start="369:27" pos:end="369:27">s</name></expr></argument>, <argument pos:start="369:30" pos:end="369:30"><expr pos:start="369:30" pos:end="369:30"><literal type="number" pos:start="369:30" pos:end="369:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="371:9" pos:end="371:14">break;</break>



    <case pos:start="375:5" pos:end="375:22">case <expr pos:start="375:10" pos:end="375:21"><name pos:start="375:10" pos:end="375:21">WM8750_RESET</name></expr>:</case>	<comment type="block" pos:start="375:25" pos:end="375:35">/* Reset */</comment>

        <expr_stmt pos:start="377:9" pos:end="377:35"><expr pos:start="377:9" pos:end="377:34"><call pos:start="377:9" pos:end="377:34"><name pos:start="377:9" pos:end="377:20">wm8750_reset</name><argument_list pos:start="377:21" pos:end="377:34">(<argument pos:start="377:22" pos:end="377:33"><expr pos:start="377:22" pos:end="377:33"><call pos:start="377:22" pos:end="377:33"><name pos:start="377:22" pos:end="377:30">I2C_SLAVE</name><argument_list pos:start="377:31" pos:end="377:33">(<argument pos:start="377:32" pos:end="377:32"><expr pos:start="377:32" pos:end="377:32"><name pos:start="377:32" pos:end="377:32">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="379:9" pos:end="384:0">break;</break>



<cpp:ifdef pos:start="383:1" pos:end="383:14">#<cpp:directive pos:start="383:2" pos:end="383:6">ifdef</cpp:directive> <name pos:start="383:8" pos:end="383:14">VERBOSE</name></cpp:ifdef>

    <default pos:start="385:5" pos:end="385:12">default:</default>

        <expr_stmt pos:start="387:9" pos:end="390:0"><expr pos:start="387:9" pos:end="387:64"><call pos:start="387:9" pos:end="387:64"><name pos:start="387:9" pos:end="387:14">printf</name><argument_list pos:start="387:15" pos:end="387:64">(<argument pos:start="387:16" pos:end="387:44"><expr pos:start="387:16" pos:end="387:44"><literal type="string" pos:start="387:16" pos:end="387:44">"%s: unknown register %02x\n"</literal></expr></argument>, <argument pos:start="387:47" pos:end="387:58"><expr pos:start="387:47" pos:end="387:58"><name pos:start="387:47" pos:end="387:58">__FUNCTION__</name></expr></argument>, <argument pos:start="387:61" pos:end="387:63"><expr pos:start="387:61" pos:end="387:63"><name pos:start="387:61" pos:end="387:63">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="389:1" pos:end="389:6">#<cpp:directive pos:start="389:2" pos:end="389:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></switch>



    <return pos:start="395:5" pos:end="395:13">return <expr pos:start="395:12" pos:end="395:12"><literal type="number" pos:start="395:12" pos:end="395:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
