<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11617.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:26">check_ap</name><parameter_list pos:start="1:27" pos:end="5:43">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:38">CPUARMState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">env</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:62"><decl pos:start="1:46" pos:end="1:62"><type pos:start="1:46" pos:end="1:62"><name pos:start="1:46" pos:end="1:54">ARMMMUIdx</name></type> <name pos:start="1:56" pos:end="1:62">mmu_idx</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:33"><decl pos:start="3:28" pos:end="3:33"><type pos:start="3:28" pos:end="3:33"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:33">ap</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:50"><decl pos:start="3:36" pos:end="3:50"><type pos:start="3:36" pos:end="3:50"><name pos:start="3:36" pos:end="3:38">int</name></type> <name pos:start="3:40" pos:end="3:50">domain_prot</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:42"><decl pos:start="5:28" pos:end="5:42"><type pos:start="5:28" pos:end="5:42"><name pos:start="5:28" pos:end="5:30">int</name></type> <name pos:start="5:32" pos:end="5:42">access_type</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="115:1">{<block_content pos:start="9:5" pos:end="113:5">

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">prot_ro</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:16">is_user</name> <init pos:start="11:18" pos:end="11:47">= <expr pos:start="11:20" pos:end="11:47"><call pos:start="11:20" pos:end="11:47"><name pos:start="11:20" pos:end="11:33">regime_is_user</name><argument_list pos:start="11:34" pos:end="11:47">(<argument pos:start="11:35" pos:end="11:37"><expr pos:start="11:35" pos:end="11:37"><name pos:start="11:35" pos:end="11:37">env</name></expr></argument>, <argument pos:start="11:40" pos:end="11:46"><expr pos:start="11:40" pos:end="11:46"><name pos:start="11:40" pos:end="11:46">mmu_idx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:25">(<expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:19">domain_prot</name> <operator pos:start="15:21" pos:end="15:22">==</operator> <literal type="number" pos:start="15:24" pos:end="15:24">3</literal></expr>)</condition> <block pos:start="15:27" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:38">

        <return pos:start="17:9" pos:end="17:38">return <expr pos:start="17:16" pos:end="17:37"><name pos:start="17:16" pos:end="17:24">PAGE_READ</name> <operator pos:start="17:26" pos:end="17:26">|</operator> <name pos:start="17:28" pos:end="17:37">PAGE_WRITE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:25">(<expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:19">access_type</name> <operator pos:start="23:21" pos:end="23:22">==</operator> <literal type="number" pos:start="23:24" pos:end="23:24">1</literal></expr>)</condition> <block pos:start="23:27" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:20">

        <expr_stmt pos:start="25:9" pos:end="25:20"><expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:15">prot_ro</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="31:5">else <block pos:start="27:12" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:28">

        <expr_stmt pos:start="29:9" pos:end="29:28"><expr pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:15">prot_ro</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:27">PAGE_READ</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <switch pos:start="35:5" pos:end="113:5">switch <condition pos:start="35:12" pos:end="35:15">(<expr pos:start="35:13" pos:end="35:14"><name pos:start="35:13" pos:end="35:14">ap</name></expr>)</condition> <block pos:start="35:17" pos:end="113:5">{<block_content pos:start="37:5" pos:end="111:16">

    <case pos:start="37:5" pos:end="37:11">case <expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">0</literal></expr>:</case>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:45">(<expr pos:start="39:13" pos:end="39:44"><call pos:start="39:13" pos:end="39:44"><name pos:start="39:13" pos:end="39:23">arm_feature</name><argument_list pos:start="39:24" pos:end="39:44">(<argument pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:27">env</name></expr></argument>, <argument pos:start="39:30" pos:end="39:43"><expr pos:start="39:30" pos:end="39:43"><name pos:start="39:30" pos:end="39:43">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:47" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:21">

            <return pos:start="41:13" pos:end="41:21">return <expr pos:start="41:20" pos:end="41:20"><literal type="number" pos:start="41:20" pos:end="41:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:29">(<expr pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:23">access_type</name> <operator pos:start="45:25" pos:end="45:26">==</operator> <literal type="number" pos:start="45:28" pos:end="45:28">1</literal></expr>)</condition> <block pos:start="45:31" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:21">

            <return pos:start="47:13" pos:end="47:21">return <expr pos:start="47:20" pos:end="47:20"><literal type="number" pos:start="47:20" pos:end="47:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="51:9" pos:end="65:9">switch <condition pos:start="51:16" pos:end="51:65">(<expr pos:start="51:17" pos:end="51:64"><call pos:start="51:17" pos:end="51:42"><name pos:start="51:17" pos:end="51:28">regime_sctlr</name><argument_list pos:start="51:29" pos:end="51:42">(<argument pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><name pos:start="51:30" pos:end="51:32">env</name></expr></argument>, <argument pos:start="51:35" pos:end="51:41"><expr pos:start="51:35" pos:end="51:41"><name pos:start="51:35" pos:end="51:41">mmu_idx</name></expr></argument>)</argument_list></call> <operator pos:start="51:44" pos:end="51:44">&amp;</operator> <operator pos:start="51:46" pos:end="51:46">(</operator><name pos:start="51:47" pos:end="51:53">SCTLR_S</name> <operator pos:start="51:55" pos:end="51:55">|</operator> <name pos:start="51:57" pos:end="51:63">SCTLR_R</name><operator pos:start="51:64" pos:end="51:64">)</operator></expr>)</condition> <block pos:start="51:67" pos:end="65:9">{<block_content pos:start="53:9" pos:end="63:21">

        <case pos:start="53:9" pos:end="53:21">case <expr pos:start="53:14" pos:end="53:20"><name pos:start="53:14" pos:end="53:20">SCTLR_S</name></expr>:</case>

            <return pos:start="55:13" pos:end="55:43">return <expr pos:start="55:20" pos:end="55:42"><ternary pos:start="55:20" pos:end="55:42"><condition pos:start="55:20" pos:end="55:28"><expr pos:start="55:20" pos:end="55:26"><name pos:start="55:20" pos:end="55:26">is_user</name></expr> ?</condition><then pos:start="55:30" pos:end="55:30"> <expr pos:start="55:30" pos:end="55:30"><literal type="number" pos:start="55:30" pos:end="55:30">0</literal></expr> </then><else pos:start="55:32" pos:end="55:42">: <expr pos:start="55:34" pos:end="55:42"><name pos:start="55:34" pos:end="55:42">PAGE_READ</name></expr></else></ternary></expr>;</return>

        <case pos:start="57:9" pos:end="57:21">case <expr pos:start="57:14" pos:end="57:20"><name pos:start="57:14" pos:end="57:20">SCTLR_R</name></expr>:</case>

            <return pos:start="59:13" pos:end="59:29">return <expr pos:start="59:20" pos:end="59:28"><name pos:start="59:20" pos:end="59:28">PAGE_READ</name></expr>;</return>

        <default pos:start="61:9" pos:end="61:16">default:</default>

            <return pos:start="63:13" pos:end="63:21">return <expr pos:start="63:20" pos:end="63:20"><literal type="number" pos:start="63:20" pos:end="63:20">0</literal></expr>;</return>

        </block_content>}</block></switch>

    <case pos:start="67:5" pos:end="67:11">case <expr pos:start="67:10" pos:end="67:10"><literal type="number" pos:start="67:10" pos:end="67:10">1</literal></expr>:</case>

        <return pos:start="69:9" pos:end="69:52">return <expr pos:start="69:16" pos:end="69:51"><ternary pos:start="69:16" pos:end="69:51"><condition pos:start="69:16" pos:end="69:24"><expr pos:start="69:16" pos:end="69:22"><name pos:start="69:16" pos:end="69:22">is_user</name></expr> ?</condition><then pos:start="69:26" pos:end="69:26"> <expr pos:start="69:26" pos:end="69:26"><literal type="number" pos:start="69:26" pos:end="69:26">0</literal></expr> </then><else pos:start="69:28" pos:end="69:51">: <expr pos:start="69:30" pos:end="69:51"><name pos:start="69:30" pos:end="69:38">PAGE_READ</name> <operator pos:start="69:40" pos:end="69:40">|</operator> <name pos:start="69:42" pos:end="69:51">PAGE_WRITE</name></expr></else></ternary></expr>;</return>

    <case pos:start="71:5" pos:end="71:11">case <expr pos:start="71:10" pos:end="71:10"><literal type="number" pos:start="71:10" pos:end="71:10">2</literal></expr>:</case>

        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:20">(<expr pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:19">is_user</name></expr>)</condition> <block pos:start="73:22" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:27">

            <return pos:start="75:13" pos:end="75:27">return <expr pos:start="75:20" pos:end="75:26"><name pos:start="75:20" pos:end="75:26">prot_ro</name></expr>;</return>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="81:9">else <block pos:start="77:16" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:42">

            <return pos:start="79:13" pos:end="79:42">return <expr pos:start="79:20" pos:end="79:41"><name pos:start="79:20" pos:end="79:28">PAGE_READ</name> <operator pos:start="79:30" pos:end="79:30">|</operator> <name pos:start="79:32" pos:end="79:41">PAGE_WRITE</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

    <case pos:start="83:5" pos:end="83:11">case <expr pos:start="83:10" pos:end="83:10"><literal type="number" pos:start="83:10" pos:end="83:10">3</literal></expr>:</case>

        <return pos:start="85:9" pos:end="85:38">return <expr pos:start="85:16" pos:end="85:37"><name pos:start="85:16" pos:end="85:24">PAGE_READ</name> <operator pos:start="85:26" pos:end="85:26">|</operator> <name pos:start="85:28" pos:end="85:37">PAGE_WRITE</name></expr>;</return>

    <case pos:start="87:5" pos:end="87:11">case <expr pos:start="87:10" pos:end="87:10"><literal type="number" pos:start="87:10" pos:end="87:10">4</literal></expr>:</case> <comment type="block" pos:start="87:13" pos:end="87:28">/* Reserved.  */</comment>

        <return pos:start="89:9" pos:end="89:17">return <expr pos:start="89:16" pos:end="89:16"><literal type="number" pos:start="89:16" pos:end="89:16">0</literal></expr>;</return>

    <case pos:start="91:5" pos:end="91:11">case <expr pos:start="91:10" pos:end="91:10"><literal type="number" pos:start="91:10" pos:end="91:10">5</literal></expr>:</case>

        <return pos:start="93:9" pos:end="93:37">return <expr pos:start="93:16" pos:end="93:36"><ternary pos:start="93:16" pos:end="93:36"><condition pos:start="93:16" pos:end="93:24"><expr pos:start="93:16" pos:end="93:22"><name pos:start="93:16" pos:end="93:22">is_user</name></expr> ?</condition><then pos:start="93:26" pos:end="93:26"> <expr pos:start="93:26" pos:end="93:26"><literal type="number" pos:start="93:26" pos:end="93:26">0</literal></expr> </then><else pos:start="93:28" pos:end="93:36">: <expr pos:start="93:30" pos:end="93:36"><name pos:start="93:30" pos:end="93:36">prot_ro</name></expr></else></ternary></expr>;</return>

    <case pos:start="95:5" pos:end="95:11">case <expr pos:start="95:10" pos:end="95:10"><literal type="number" pos:start="95:10" pos:end="95:10">6</literal></expr>:</case>

        <return pos:start="97:9" pos:end="97:23">return <expr pos:start="97:16" pos:end="97:22"><name pos:start="97:16" pos:end="97:22">prot_ro</name></expr>;</return>

    <case pos:start="99:5" pos:end="99:11">case <expr pos:start="99:10" pos:end="99:10"><literal type="number" pos:start="99:10" pos:end="99:10">7</literal></expr>:</case>

        <if_stmt pos:start="101:9" pos:end="105:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:47">(<expr pos:start="101:13" pos:end="101:46"><operator pos:start="101:13" pos:end="101:13">!</operator><call pos:start="101:14" pos:end="101:46"><name pos:start="101:14" pos:end="101:24">arm_feature</name><argument_list pos:start="101:25" pos:end="101:46">(<argument pos:start="101:26" pos:end="101:28"><expr pos:start="101:26" pos:end="101:28"><name pos:start="101:26" pos:end="101:28">env</name></expr></argument>, <argument pos:start="101:31" pos:end="101:45"><expr pos:start="101:31" pos:end="101:45"><name pos:start="101:31" pos:end="101:45">ARM_FEATURE_V6K</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:49" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:21">

            <return pos:start="103:13" pos:end="103:21">return <expr pos:start="103:20" pos:end="103:20"><literal type="number" pos:start="103:20" pos:end="103:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="107:9" pos:end="107:23">return <expr pos:start="107:16" pos:end="107:22"><name pos:start="107:16" pos:end="107:22">prot_ro</name></expr>;</return>

    <default pos:start="109:5" pos:end="109:12">default:</default>

        <expr_stmt pos:start="111:9" pos:end="111:16"><expr pos:start="111:9" pos:end="111:15"><call pos:start="111:9" pos:end="111:15"><name pos:start="111:9" pos:end="111:13">abort</name><argument_list pos:start="111:14" pos:end="111:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
