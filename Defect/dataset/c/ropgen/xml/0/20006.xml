<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20006.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:16">check</name><parameter_list pos:start="1:17" pos:end="1:68">(<parameter pos:start="1:18" pos:end="1:32"><decl pos:start="1:18" pos:end="1:32"><type pos:start="1:18" pos:end="1:32"><name pos:start="1:18" pos:end="1:28">AVIOContext</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:32">pb</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:45"><decl pos:start="1:35" pos:end="1:45"><type pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:41">int64_t</name></type> <name pos:start="1:43" pos:end="1:45">pos</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:67"><decl pos:start="1:48" pos:end="1:67"><type pos:start="1:48" pos:end="1:67"><name pos:start="1:48" pos:end="1:55">uint32_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:67">ret_header</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:25">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:15">ret</name> <init pos:start="5:17" pos:end="5:46">= <expr pos:start="5:19" pos:end="5:46"><call pos:start="5:19" pos:end="5:46"><name pos:start="5:19" pos:end="5:27">avio_seek</name><argument_list pos:start="5:28" pos:end="5:46">(<argument pos:start="5:29" pos:end="5:30"><expr pos:start="5:29" pos:end="5:30"><name pos:start="5:29" pos:end="5:30">pb</name></expr></argument>, <argument pos:start="5:33" pos:end="5:35"><expr pos:start="5:33" pos:end="5:35"><name pos:start="5:33" pos:end="5:35">pos</name></expr></argument>, <argument pos:start="5:38" pos:end="5:45"><expr pos:start="5:38" pos:end="5:45"><name pos:start="5:38" pos:end="5:45">SEEK_SET</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:19">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:19">MPADecodeHeader</name></type> <name pos:start="9:21" pos:end="9:22">sd</name></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="13:19"><if pos:start="11:5" pos:end="13:19">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:13">&lt;</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:19"><block_content pos:start="13:9" pos:end="13:19">

        <return pos:start="13:9" pos:end="13:19">return <expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:10">header</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:26"><name pos:start="17:14" pos:end="17:22">avio_rb32</name><argument_list pos:start="17:23" pos:end="17:26">(<argument pos:start="17:24" pos:end="17:25"><expr pos:start="17:24" pos:end="17:25"><name pos:start="17:24" pos:end="17:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:18"><if pos:start="19:5" pos:end="21:18">if <condition pos:start="19:8" pos:end="19:40">(<expr pos:start="19:9" pos:end="19:39"><call pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:27">ff_mpa_check_header</name><argument_list pos:start="19:28" pos:end="19:35">(<argument pos:start="19:29" pos:end="19:34"><expr pos:start="19:29" pos:end="19:34"><name pos:start="19:29" pos:end="19:34">header</name></expr></argument>)</argument_list></call> <operator pos:start="19:37" pos:end="19:37">&lt;</operator> <literal type="number" pos:start="19:39" pos:end="19:39">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:18"><block_content pos:start="21:9" pos:end="21:18">

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:57">(<expr pos:start="23:9" pos:end="23:56"><call pos:start="23:9" pos:end="23:51"><name pos:start="23:9" pos:end="23:38">avpriv_mpegaudio_decode_header</name><argument_list pos:start="23:39" pos:end="23:51">(<argument pos:start="23:40" pos:end="23:42"><expr pos:start="23:40" pos:end="23:42"><operator pos:start="23:40" pos:end="23:40">&amp;</operator><name pos:start="23:41" pos:end="23:42">sd</name></expr></argument>, <argument pos:start="23:45" pos:end="23:50"><expr pos:start="23:45" pos:end="23:50"><name pos:start="23:45" pos:end="23:50">header</name></expr></argument>)</argument_list></call> <operator pos:start="23:53" pos:end="23:54">==</operator> <literal type="number" pos:start="23:56" pos:end="23:56">1</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:29"><if pos:start="29:5" pos:end="31:29">if <condition pos:start="29:8" pos:end="29:19">(<expr pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:18">ret_header</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:29"><block_content pos:start="31:9" pos:end="31:29">

        <expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><operator pos:start="31:9" pos:end="31:9">*</operator><name pos:start="31:10" pos:end="31:19">ret_header</name> <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:28">header</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="33:5" pos:end="33:25">return <expr pos:start="33:12" pos:end="33:24"><name pos:start="33:12" pos:end="33:24"><name pos:start="33:12" pos:end="33:13">sd</name><operator pos:start="33:14" pos:end="33:14">.</operator><name pos:start="33:15" pos:end="33:24">frame_size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
