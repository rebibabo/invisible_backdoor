<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27055.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">vdi_open</name><parameter_list pos:start="1:20" pos:end="3:33">(<parameter pos:start="1:21" pos:end="1:40"><decl pos:start="1:21" pos:end="1:40"><type pos:start="1:21" pos:end="1:40"><name pos:start="1:21" pos:end="1:36">BlockDriverState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">bs</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:47">QDict</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:56">options</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:67"><decl pos:start="1:59" pos:end="1:67"><type pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:67">flags</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:32"><decl pos:start="3:21" pos:end="3:32"><type pos:start="3:21" pos:end="3:32"><name pos:start="3:21" pos:end="3:25">Error</name> <modifier pos:start="3:27" pos:end="3:27">*</modifier><modifier pos:start="3:28" pos:end="3:28">*</modifier></type><name pos:start="3:29" pos:end="3:32">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="199:1">{<block_content pos:start="7:5" pos:end="197:15">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">BDRVVdiState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:32">= <expr pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:24">bs</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">VdiHeader</name></type> <name pos:start="9:15" pos:end="9:20">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:20">bmap_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><call pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:10">logout</name><argument_list pos:start="17:11" pos:end="17:16">(<argument pos:start="17:12" pos:end="17:15"><expr pos:start="17:12" pos:end="17:15"><literal type="string" pos:start="17:12" pos:end="17:15">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:56"><expr pos:start="21:5" pos:end="21:55"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:55"><name pos:start="21:11" pos:end="21:19">bdrv_read</name><argument_list pos:start="21:20" pos:end="21:55">(<argument pos:start="21:21" pos:end="21:28"><expr pos:start="21:21" pos:end="21:28"><name pos:start="21:21" pos:end="21:28"><name pos:start="21:21" pos:end="21:22">bs</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:28">file</name></name></expr></argument>, <argument pos:start="21:31" pos:end="21:31"><expr pos:start="21:31" pos:end="21:31"><literal type="number" pos:start="21:31" pos:end="21:31">0</literal></expr></argument>, <argument pos:start="21:34" pos:end="21:51"><expr pos:start="21:34" pos:end="21:51"><operator pos:start="21:34" pos:end="21:34">(</operator><name pos:start="21:35" pos:end="21:41">uint8_t</name> <operator pos:start="21:43" pos:end="21:43">*</operator><operator pos:start="21:44" pos:end="21:44">)</operator><operator pos:start="21:45" pos:end="21:45">&amp;</operator><name pos:start="21:46" pos:end="21:51">header</name></expr></argument>, <argument pos:start="21:54" pos:end="21:54"><expr pos:start="21:54" pos:end="21:54"><literal type="number" pos:start="21:54" pos:end="21:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">&lt;</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>)</condition> <block pos:start="23:18" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:18">

        <goto pos:start="25:9" pos:end="25:18">goto <name pos:start="25:14" pos:end="25:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="34:0"><expr pos:start="31:5" pos:end="31:30"><call pos:start="31:5" pos:end="31:30"><name pos:start="31:5" pos:end="31:21">vdi_header_to_cpu</name><argument_list pos:start="31:22" pos:end="31:30">(<argument pos:start="31:23" pos:end="31:29"><expr pos:start="31:23" pos:end="31:29"><operator pos:start="31:23" pos:end="31:23">&amp;</operator><name pos:start="31:24" pos:end="31:29">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="33:1" pos:end="33:29">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:29"><call pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:11">defined</name><argument_list pos:start="33:12" pos:end="33:29">(<argument pos:start="33:13" pos:end="33:28"><expr pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:28">CONFIG_VDI_DEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="35:5" pos:end="38:0"><expr pos:start="35:5" pos:end="35:29"><call pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:20">vdi_header_print</name><argument_list pos:start="35:21" pos:end="35:29">(<argument pos:start="35:22" pos:end="35:28"><expr pos:start="35:22" pos:end="35:28"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:28">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="41:5" pos:end="55:5"><if pos:start="41:5" pos:end="55:5">if <condition pos:start="41:8" pos:end="41:44">(<expr pos:start="41:9" pos:end="41:43"><name pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:14">header</name><operator pos:start="41:15" pos:end="41:15">.</operator><name pos:start="41:16" pos:end="41:24">disk_size</name></name> <operator pos:start="41:26" pos:end="41:26">%</operator> <name pos:start="41:28" pos:end="41:38">SECTOR_SIZE</name> <operator pos:start="41:40" pos:end="41:41">!=</operator> <literal type="number" pos:start="41:43" pos:end="41:43">0</literal></expr>)</condition> <block pos:start="41:46" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:47">

        <comment type="block" pos:start="43:9" pos:end="47:26">/* 'VBoxManage convertfromraw' can create images with odd disk sizes.

           We accept them but round the disk size to the next multiple of

           SECTOR_SIZE. */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:76"><expr pos:start="49:9" pos:end="49:75"><call pos:start="49:9" pos:end="49:75"><name pos:start="49:9" pos:end="49:14">logout</name><argument_list pos:start="49:15" pos:end="49:75">(<argument pos:start="49:16" pos:end="49:56"><expr pos:start="49:16" pos:end="49:56"><literal type="string" pos:start="49:16" pos:end="49:32">"odd disk size %"</literal> <name pos:start="49:34" pos:end="49:39">PRIu64</name> <literal type="string" pos:start="49:41" pos:end="49:56">" B, round up\n"</literal></expr></argument>, <argument pos:start="49:59" pos:end="49:74"><expr pos:start="49:59" pos:end="49:74"><name pos:start="49:59" pos:end="49:74"><name pos:start="49:59" pos:end="49:64">header</name><operator pos:start="49:65" pos:end="49:65">.</operator><name pos:start="49:66" pos:end="49:74">disk_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:44"><expr pos:start="51:9" pos:end="51:43"><name pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:14">header</name><operator pos:start="51:15" pos:end="51:15">.</operator><name pos:start="51:16" pos:end="51:24">disk_size</name></name> <operator pos:start="51:26" pos:end="51:27">+=</operator> <name pos:start="51:29" pos:end="51:39">SECTOR_SIZE</name> <operator pos:start="51:41" pos:end="51:41">-</operator> <literal type="number" pos:start="51:43" pos:end="51:43">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:47"><expr pos:start="53:9" pos:end="53:46"><name pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:14">header</name><operator pos:start="53:15" pos:end="53:15">.</operator><name pos:start="53:16" pos:end="53:24">disk_size</name></name> <operator pos:start="53:26" pos:end="53:27">&amp;=</operator> <operator pos:start="53:29" pos:end="53:29">~</operator><operator pos:start="53:30" pos:end="53:30">(</operator><name pos:start="53:31" pos:end="53:41">SECTOR_SIZE</name> <operator pos:start="53:43" pos:end="53:43">-</operator> <literal type="number" pos:start="53:45" pos:end="53:45">1</literal><operator pos:start="53:46" pos:end="53:46">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="139:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="59:42">(<expr pos:start="59:9" pos:end="59:41"><name pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:14">header</name><operator pos:start="59:15" pos:end="59:15">.</operator><name pos:start="59:16" pos:end="59:24">signature</name></name> <operator pos:start="59:26" pos:end="59:27">!=</operator> <name pos:start="59:29" pos:end="59:41">VDI_SIGNATURE</name></expr>)</condition> <block pos:start="59:44" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:18">

        <expr_stmt pos:start="61:9" pos:end="61:61"><expr pos:start="61:9" pos:end="61:60"><call pos:start="61:9" pos:end="61:60"><name pos:start="61:9" pos:end="61:14">logout</name><argument_list pos:start="61:15" pos:end="61:60">(<argument pos:start="61:16" pos:end="61:41"><expr pos:start="61:16" pos:end="61:41"><literal type="string" pos:start="61:16" pos:end="61:41">"bad vdi signature %08x\n"</literal></expr></argument>, <argument pos:start="61:44" pos:end="61:59"><expr pos:start="61:44" pos:end="61:59"><name pos:start="61:44" pos:end="61:59"><name pos:start="61:44" pos:end="61:49">header</name><operator pos:start="61:50" pos:end="61:50">.</operator><name pos:start="61:51" pos:end="61:59">signature</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:27"><expr pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <operator pos:start="63:15" pos:end="63:15">-</operator><name pos:start="63:16" pos:end="63:26">EMEDIUMTYPE</name></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:18">goto <name pos:start="65:14" pos:end="65:17">fail</name>;</goto>

    </block_content>}</block></if> <if type="elseif" pos:start="67:7" pos:end="77:5">else if <condition pos:start="67:15" pos:end="67:49">(<expr pos:start="67:16" pos:end="67:48"><name pos:start="67:16" pos:end="67:29"><name pos:start="67:16" pos:end="67:21">header</name><operator pos:start="67:22" pos:end="67:22">.</operator><name pos:start="67:23" pos:end="67:29">version</name></name> <operator pos:start="67:31" pos:end="67:32">!=</operator> <name pos:start="67:34" pos:end="67:48">VDI_VERSION_1_1</name></expr>)</condition> <block pos:start="67:51" pos:end="77:5">{<block_content pos:start="69:9" pos:end="75:18">

        <expr_stmt pos:start="69:9" pos:end="71:62"><expr pos:start="69:9" pos:end="71:61"><call pos:start="69:9" pos:end="71:61"><name pos:start="69:9" pos:end="69:14">logout</name><argument_list pos:start="69:15" pos:end="71:61">(<argument pos:start="69:16" pos:end="69:44"><expr pos:start="69:16" pos:end="69:44"><literal type="string" pos:start="69:16" pos:end="69:44">"unsupported version %u.%u\n"</literal></expr></argument>,

               <argument pos:start="71:16" pos:end="71:35"><expr pos:start="71:16" pos:end="71:35"><name pos:start="71:16" pos:end="71:29"><name pos:start="71:16" pos:end="71:21">header</name><operator pos:start="71:22" pos:end="71:22">.</operator><name pos:start="71:23" pos:end="71:29">version</name></name> <operator pos:start="71:31" pos:end="71:32">&gt;&gt;</operator> <literal type="number" pos:start="71:34" pos:end="71:35">16</literal></expr></argument>, <argument pos:start="71:38" pos:end="71:60"><expr pos:start="71:38" pos:end="71:60"><name pos:start="71:38" pos:end="71:51"><name pos:start="71:38" pos:end="71:43">header</name><operator pos:start="71:44" pos:end="71:44">.</operator><name pos:start="71:45" pos:end="71:51">version</name></name> <operator pos:start="71:53" pos:end="71:53">&amp;</operator> <literal type="number" pos:start="71:55" pos:end="71:60">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:23"><expr pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <operator pos:start="73:15" pos:end="73:15">-</operator><name pos:start="73:16" pos:end="73:22">ENOTSUP</name></expr>;</expr_stmt>

        <goto pos:start="75:9" pos:end="75:18">goto <name pos:start="75:14" pos:end="75:17">fail</name>;</goto>

    </block_content>}</block></if> <if type="elseif" pos:start="77:7" pos:end="87:5">else if <condition pos:start="77:15" pos:end="77:53">(<expr pos:start="77:16" pos:end="77:52"><name pos:start="77:16" pos:end="77:33"><name pos:start="77:16" pos:end="77:21">header</name><operator pos:start="77:22" pos:end="77:22">.</operator><name pos:start="77:23" pos:end="77:33">offset_bmap</name></name> <operator pos:start="77:35" pos:end="77:35">%</operator> <name pos:start="77:37" pos:end="77:47">SECTOR_SIZE</name> <operator pos:start="77:49" pos:end="77:50">!=</operator> <literal type="number" pos:start="77:52" pos:end="77:52">0</literal></expr>)</condition> <block pos:start="77:55" pos:end="87:5">{<block_content pos:start="81:9" pos:end="85:18">

        <comment type="block" pos:start="79:9" pos:end="79:74">/* We only support block maps which start on a sector boundary. */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:76"><expr pos:start="81:9" pos:end="81:75"><call pos:start="81:9" pos:end="81:75"><name pos:start="81:9" pos:end="81:14">logout</name><argument_list pos:start="81:15" pos:end="81:75">(<argument pos:start="81:16" pos:end="81:54"><expr pos:start="81:16" pos:end="81:54"><literal type="string" pos:start="81:16" pos:end="81:54">"unsupported block map offset 0x%x B\n"</literal></expr></argument>, <argument pos:start="81:57" pos:end="81:74"><expr pos:start="81:57" pos:end="81:74"><name pos:start="81:57" pos:end="81:74"><name pos:start="81:57" pos:end="81:62">header</name><operator pos:start="81:63" pos:end="81:63">.</operator><name pos:start="81:64" pos:end="81:74">offset_bmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:23"><expr pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <operator pos:start="83:15" pos:end="83:15">-</operator><name pos:start="83:16" pos:end="83:22">ENOTSUP</name></expr>;</expr_stmt>

        <goto pos:start="85:9" pos:end="85:18">goto <name pos:start="85:14" pos:end="85:17">fail</name>;</goto>

    </block_content>}</block></if> <if type="elseif" pos:start="87:7" pos:end="97:5">else if <condition pos:start="87:15" pos:end="87:53">(<expr pos:start="87:16" pos:end="87:52"><name pos:start="87:16" pos:end="87:33"><name pos:start="87:16" pos:end="87:21">header</name><operator pos:start="87:22" pos:end="87:22">.</operator><name pos:start="87:23" pos:end="87:33">offset_data</name></name> <operator pos:start="87:35" pos:end="87:35">%</operator> <name pos:start="87:37" pos:end="87:47">SECTOR_SIZE</name> <operator pos:start="87:49" pos:end="87:50">!=</operator> <literal type="number" pos:start="87:52" pos:end="87:52">0</literal></expr>)</condition> <block pos:start="87:55" pos:end="97:5">{<block_content pos:start="91:9" pos:end="95:18">

        <comment type="block" pos:start="89:9" pos:end="89:75">/* We only support data blocks which start on a sector boundary. */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:71"><expr pos:start="91:9" pos:end="91:70"><call pos:start="91:9" pos:end="91:70"><name pos:start="91:9" pos:end="91:14">logout</name><argument_list pos:start="91:15" pos:end="91:70">(<argument pos:start="91:16" pos:end="91:49"><expr pos:start="91:16" pos:end="91:49"><literal type="string" pos:start="91:16" pos:end="91:49">"unsupported data offset 0x%x B\n"</literal></expr></argument>, <argument pos:start="91:52" pos:end="91:69"><expr pos:start="91:52" pos:end="91:69"><name pos:start="91:52" pos:end="91:69"><name pos:start="91:52" pos:end="91:57">header</name><operator pos:start="91:58" pos:end="91:58">.</operator><name pos:start="91:59" pos:end="91:69">offset_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:23"><expr pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <operator pos:start="93:15" pos:end="93:15">-</operator><name pos:start="93:16" pos:end="93:22">ENOTSUP</name></expr>;</expr_stmt>

        <goto pos:start="95:9" pos:end="95:18">goto <name pos:start="95:14" pos:end="95:17">fail</name>;</goto>

    </block_content>}</block></if> <if type="elseif" pos:start="97:7" pos:end="105:5">else if <condition pos:start="97:15" pos:end="97:49">(<expr pos:start="97:16" pos:end="97:48"><name pos:start="97:16" pos:end="97:33"><name pos:start="97:16" pos:end="97:21">header</name><operator pos:start="97:22" pos:end="97:22">.</operator><name pos:start="97:23" pos:end="97:33">sector_size</name></name> <operator pos:start="97:35" pos:end="97:36">!=</operator> <name pos:start="97:38" pos:end="97:48">SECTOR_SIZE</name></expr>)</condition> <block pos:start="97:51" pos:end="105:5">{<block_content pos:start="99:9" pos:end="103:18">

        <expr_stmt pos:start="99:9" pos:end="99:69"><expr pos:start="99:9" pos:end="99:68"><call pos:start="99:9" pos:end="99:68"><name pos:start="99:9" pos:end="99:14">logout</name><argument_list pos:start="99:15" pos:end="99:68">(<argument pos:start="99:16" pos:end="99:47"><expr pos:start="99:16" pos:end="99:47"><literal type="string" pos:start="99:16" pos:end="99:47">"unsupported sector size %u B\n"</literal></expr></argument>, <argument pos:start="99:50" pos:end="99:67"><expr pos:start="99:50" pos:end="99:67"><name pos:start="99:50" pos:end="99:67"><name pos:start="99:50" pos:end="99:55">header</name><operator pos:start="99:56" pos:end="99:56">.</operator><name pos:start="99:57" pos:end="99:67">sector_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:23"><expr pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <operator pos:start="101:15" pos:end="101:15">-</operator><name pos:start="101:16" pos:end="101:22">ENOTSUP</name></expr>;</expr_stmt>

        <goto pos:start="103:9" pos:end="103:18">goto <name pos:start="103:14" pos:end="103:17">fail</name>;</goto>

    </block_content>}</block></if> <if type="elseif" pos:start="105:7" pos:end="113:5">else if <condition pos:start="105:15" pos:end="105:44">(<expr pos:start="105:16" pos:end="105:43"><name pos:start="105:16" pos:end="105:32"><name pos:start="105:16" pos:end="105:21">header</name><operator pos:start="105:22" pos:end="105:22">.</operator><name pos:start="105:23" pos:end="105:32">block_size</name></name> <operator pos:start="105:34" pos:end="105:35">!=</operator> <literal type="number" pos:start="105:37" pos:end="105:37">1</literal> <operator pos:start="105:39" pos:end="105:39">*</operator> <name pos:start="105:41" pos:end="105:43">MiB</name></expr>)</condition> <block pos:start="105:46" pos:end="113:5">{<block_content pos:start="107:9" pos:end="111:18">

        <expr_stmt pos:start="107:9" pos:end="107:67"><expr pos:start="107:9" pos:end="107:66"><call pos:start="107:9" pos:end="107:66"><name pos:start="107:9" pos:end="107:14">logout</name><argument_list pos:start="107:15" pos:end="107:66">(<argument pos:start="107:16" pos:end="107:46"><expr pos:start="107:16" pos:end="107:46"><literal type="string" pos:start="107:16" pos:end="107:46">"unsupported block size %u B\n"</literal></expr></argument>, <argument pos:start="107:49" pos:end="107:65"><expr pos:start="107:49" pos:end="107:65"><name pos:start="107:49" pos:end="107:65"><name pos:start="107:49" pos:end="107:54">header</name><operator pos:start="107:55" pos:end="107:55">.</operator><name pos:start="107:56" pos:end="107:65">block_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:23"><expr pos:start="109:9" pos:end="109:22"><name pos:start="109:9" pos:end="109:11">ret</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <operator pos:start="109:15" pos:end="109:15">-</operator><name pos:start="109:16" pos:end="109:22">ENOTSUP</name></expr>;</expr_stmt>

        <goto pos:start="111:9" pos:end="111:18">goto <name pos:start="111:14" pos:end="111:17">fail</name>;</goto>

    </block_content>}</block></if> <if type="elseif" pos:start="113:7" pos:end="123:5">else if <condition pos:start="113:15" pos:end="115:68">(<expr pos:start="113:16" pos:end="115:67"><name pos:start="113:16" pos:end="113:31"><name pos:start="113:16" pos:end="113:21">header</name><operator pos:start="113:22" pos:end="113:22">.</operator><name pos:start="113:23" pos:end="113:31">disk_size</name></name> <operator pos:start="113:33" pos:end="113:33">&gt;</operator>

               <operator pos:start="115:16" pos:end="115:16">(</operator><name pos:start="115:17" pos:end="115:24">uint64_t</name><operator pos:start="115:25" pos:end="115:25">)</operator><name pos:start="115:26" pos:end="115:47"><name pos:start="115:26" pos:end="115:31">header</name><operator pos:start="115:32" pos:end="115:32">.</operator><name pos:start="115:33" pos:end="115:47">blocks_in_image</name></name> <operator pos:start="115:49" pos:end="115:49">*</operator> <name pos:start="115:51" pos:end="115:67"><name pos:start="115:51" pos:end="115:56">header</name><operator pos:start="115:57" pos:end="115:57">.</operator><name pos:start="115:58" pos:end="115:67">block_size</name></name></expr>)</condition> <block pos:start="115:70" pos:end="123:5">{<block_content pos:start="117:9" pos:end="121:18">

        <expr_stmt pos:start="117:9" pos:end="117:74"><expr pos:start="117:9" pos:end="117:73"><call pos:start="117:9" pos:end="117:73"><name pos:start="117:9" pos:end="117:14">logout</name><argument_list pos:start="117:15" pos:end="117:73">(<argument pos:start="117:16" pos:end="117:54"><expr pos:start="117:16" pos:end="117:54"><literal type="string" pos:start="117:16" pos:end="117:40">"unsupported disk size %"</literal> <name pos:start="117:42" pos:end="117:47">PRIu64</name> <literal type="string" pos:start="117:49" pos:end="117:54">" B\n"</literal></expr></argument>, <argument pos:start="117:57" pos:end="117:72"><expr pos:start="117:57" pos:end="117:72"><name pos:start="117:57" pos:end="117:72"><name pos:start="117:57" pos:end="117:62">header</name><operator pos:start="117:63" pos:end="117:63">.</operator><name pos:start="117:64" pos:end="117:72">disk_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:23"><expr pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:11">ret</name> <operator pos:start="119:13" pos:end="119:13">=</operator> <operator pos:start="119:15" pos:end="119:15">-</operator><name pos:start="119:16" pos:end="119:22">ENOTSUP</name></expr>;</expr_stmt>

        <goto pos:start="121:9" pos:end="121:18">goto <name pos:start="121:14" pos:end="121:17">fail</name>;</goto>

    </block_content>}</block></if> <if type="elseif" pos:start="123:7" pos:end="131:5">else if <condition pos:start="123:15" pos:end="123:47">(<expr pos:start="123:16" pos:end="123:46"><operator pos:start="123:16" pos:end="123:16">!</operator><call pos:start="123:17" pos:end="123:46"><name pos:start="123:17" pos:end="123:28">uuid_is_null</name><argument_list pos:start="123:29" pos:end="123:46">(<argument pos:start="123:30" pos:end="123:45"><expr pos:start="123:30" pos:end="123:45"><name pos:start="123:30" pos:end="123:45"><name pos:start="123:30" pos:end="123:35">header</name><operator pos:start="123:36" pos:end="123:36">.</operator><name pos:start="123:37" pos:end="123:45">uuid_link</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:49" pos:end="131:5">{<block_content pos:start="125:9" pos:end="129:18">

        <expr_stmt pos:start="125:9" pos:end="125:48"><expr pos:start="125:9" pos:end="125:47"><call pos:start="125:9" pos:end="125:47"><name pos:start="125:9" pos:end="125:14">logout</name><argument_list pos:start="125:15" pos:end="125:47">(<argument pos:start="125:16" pos:end="125:46"><expr pos:start="125:16" pos:end="125:46"><literal type="string" pos:start="125:16" pos:end="125:46">"link uuid != 0, unsupported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:23"><expr pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:11">ret</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <operator pos:start="127:15" pos:end="127:15">-</operator><name pos:start="127:16" pos:end="127:22">ENOTSUP</name></expr>;</expr_stmt>

        <goto pos:start="129:9" pos:end="129:18">goto <name pos:start="129:14" pos:end="129:17">fail</name>;</goto>

    </block_content>}</block></if> <if type="elseif" pos:start="131:7" pos:end="139:5">else if <condition pos:start="131:15" pos:end="131:49">(<expr pos:start="131:16" pos:end="131:48"><operator pos:start="131:16" pos:end="131:16">!</operator><call pos:start="131:17" pos:end="131:48"><name pos:start="131:17" pos:end="131:28">uuid_is_null</name><argument_list pos:start="131:29" pos:end="131:48">(<argument pos:start="131:30" pos:end="131:47"><expr pos:start="131:30" pos:end="131:47"><name pos:start="131:30" pos:end="131:47"><name pos:start="131:30" pos:end="131:35">header</name><operator pos:start="131:36" pos:end="131:36">.</operator><name pos:start="131:37" pos:end="131:47">uuid_parent</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="131:51" pos:end="139:5">{<block_content pos:start="133:9" pos:end="137:18">

        <expr_stmt pos:start="133:9" pos:end="133:50"><expr pos:start="133:9" pos:end="133:49"><call pos:start="133:9" pos:end="133:49"><name pos:start="133:9" pos:end="133:14">logout</name><argument_list pos:start="133:15" pos:end="133:49">(<argument pos:start="133:16" pos:end="133:48"><expr pos:start="133:16" pos:end="133:48"><literal type="string" pos:start="133:16" pos:end="133:48">"parent uuid != 0, unsupported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:23"><expr pos:start="135:9" pos:end="135:22"><name pos:start="135:9" pos:end="135:11">ret</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <operator pos:start="135:15" pos:end="135:15">-</operator><name pos:start="135:16" pos:end="135:22">ENOTSUP</name></expr>;</expr_stmt>

        <goto pos:start="137:9" pos:end="137:18">goto <name pos:start="137:14" pos:end="137:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:55"><expr pos:start="143:5" pos:end="143:54"><name pos:start="143:5" pos:end="143:21"><name pos:start="143:5" pos:end="143:6">bs</name><operator pos:start="143:7" pos:end="143:8">-&gt;</operator><name pos:start="143:9" pos:end="143:21">total_sectors</name></name> <operator pos:start="143:23" pos:end="143:23">=</operator> <name pos:start="143:25" pos:end="143:40"><name pos:start="143:25" pos:end="143:30">header</name><operator pos:start="143:31" pos:end="143:31">.</operator><name pos:start="143:32" pos:end="143:40">disk_size</name></name> <operator pos:start="143:42" pos:end="143:42">/</operator> <name pos:start="143:44" pos:end="143:54">SECTOR_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:38"><expr pos:start="147:5" pos:end="147:37"><name pos:start="147:5" pos:end="147:17"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:17">block_size</name></name> <operator pos:start="147:19" pos:end="147:19">=</operator> <name pos:start="147:21" pos:end="147:37"><name pos:start="147:21" pos:end="147:26">header</name><operator pos:start="147:27" pos:end="147:27">.</operator><name pos:start="147:28" pos:end="147:37">block_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:55"><expr pos:start="149:5" pos:end="149:54"><name pos:start="149:5" pos:end="149:20"><name pos:start="149:5" pos:end="149:5">s</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:20">block_sectors</name></name> <operator pos:start="149:22" pos:end="149:22">=</operator> <name pos:start="149:24" pos:end="149:40"><name pos:start="149:24" pos:end="149:29">header</name><operator pos:start="149:30" pos:end="149:30">.</operator><name pos:start="149:31" pos:end="149:40">block_size</name></name> <operator pos:start="149:42" pos:end="149:42">/</operator> <name pos:start="149:44" pos:end="149:54">SECTOR_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:54"><expr pos:start="151:5" pos:end="151:53"><name pos:start="151:5" pos:end="151:18"><name pos:start="151:5" pos:end="151:5">s</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:18">bmap_sector</name></name> <operator pos:start="151:20" pos:end="151:20">=</operator> <name pos:start="151:22" pos:end="151:39"><name pos:start="151:22" pos:end="151:27">header</name><operator pos:start="151:28" pos:end="151:28">.</operator><name pos:start="151:29" pos:end="151:39">offset_bmap</name></name> <operator pos:start="151:41" pos:end="151:41">/</operator> <name pos:start="151:43" pos:end="151:53">SECTOR_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:23"><expr pos:start="153:5" pos:end="153:22"><name pos:start="153:5" pos:end="153:13"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:13">header</name></name> <operator pos:start="153:15" pos:end="153:15">=</operator> <name pos:start="153:17" pos:end="153:22">header</name></expr>;</expr_stmt>



    <expr_stmt pos:start="157:5" pos:end="157:58"><expr pos:start="157:5" pos:end="157:57"><name pos:start="157:5" pos:end="157:13">bmap_size</name> <operator pos:start="157:15" pos:end="157:15">=</operator> <name pos:start="157:17" pos:end="157:38"><name pos:start="157:17" pos:end="157:22">header</name><operator pos:start="157:23" pos:end="157:23">.</operator><name pos:start="157:24" pos:end="157:38">blocks_in_image</name></name> <operator pos:start="157:40" pos:end="157:40">*</operator> <sizeof pos:start="157:42" pos:end="157:57">sizeof<argument_list pos:start="157:48" pos:end="157:57">(<argument pos:start="157:49" pos:end="157:56"><expr pos:start="157:49" pos:end="157:56"><name pos:start="157:49" pos:end="157:56">uint32_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:60"><expr pos:start="159:5" pos:end="159:59"><name pos:start="159:5" pos:end="159:13">bmap_size</name> <operator pos:start="159:15" pos:end="159:15">=</operator> <operator pos:start="159:17" pos:end="159:17">(</operator><name pos:start="159:18" pos:end="159:26">bmap_size</name> <operator pos:start="159:28" pos:end="159:28">+</operator> <name pos:start="159:30" pos:end="159:40">SECTOR_SIZE</name> <operator pos:start="159:42" pos:end="159:42">-</operator> <literal type="number" pos:start="159:44" pos:end="159:44">1</literal><operator pos:start="159:45" pos:end="159:45">)</operator> <operator pos:start="159:47" pos:end="159:47">/</operator> <name pos:start="159:49" pos:end="159:59">SECTOR_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:48"><expr pos:start="161:5" pos:end="161:47"><name pos:start="161:5" pos:end="161:11"><name pos:start="161:5" pos:end="161:5">s</name><operator pos:start="161:6" pos:end="161:7">-&gt;</operator><name pos:start="161:8" pos:end="161:11">bmap</name></name> <operator pos:start="161:13" pos:end="161:13">=</operator> <call pos:start="161:15" pos:end="161:47"><name pos:start="161:15" pos:end="161:22">g_malloc</name><argument_list pos:start="161:23" pos:end="161:47">(<argument pos:start="161:24" pos:end="161:46"><expr pos:start="161:24" pos:end="161:46"><name pos:start="161:24" pos:end="161:32">bmap_size</name> <operator pos:start="161:34" pos:end="161:34">*</operator> <name pos:start="161:36" pos:end="161:46">SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:77"><expr pos:start="163:5" pos:end="163:76"><name pos:start="163:5" pos:end="163:7">ret</name> <operator pos:start="163:9" pos:end="163:9">=</operator> <call pos:start="163:11" pos:end="163:76"><name pos:start="163:11" pos:end="163:19">bdrv_read</name><argument_list pos:start="163:20" pos:end="163:76">(<argument pos:start="163:21" pos:end="163:28"><expr pos:start="163:21" pos:end="163:28"><name pos:start="163:21" pos:end="163:28"><name pos:start="163:21" pos:end="163:22">bs</name><operator pos:start="163:23" pos:end="163:24">-&gt;</operator><name pos:start="163:25" pos:end="163:28">file</name></name></expr></argument>, <argument pos:start="163:31" pos:end="163:44"><expr pos:start="163:31" pos:end="163:44"><name pos:start="163:31" pos:end="163:44"><name pos:start="163:31" pos:end="163:31">s</name><operator pos:start="163:32" pos:end="163:33">-&gt;</operator><name pos:start="163:34" pos:end="163:44">bmap_sector</name></name></expr></argument>, <argument pos:start="163:47" pos:end="163:64"><expr pos:start="163:47" pos:end="163:64"><operator pos:start="163:47" pos:end="163:47">(</operator><name pos:start="163:48" pos:end="163:54">uint8_t</name> <operator pos:start="163:56" pos:end="163:56">*</operator><operator pos:start="163:57" pos:end="163:57">)</operator><name pos:start="163:58" pos:end="163:64"><name pos:start="163:58" pos:end="163:58">s</name><operator pos:start="163:59" pos:end="163:60">-&gt;</operator><name pos:start="163:61" pos:end="163:64">bmap</name></name></expr></argument>, <argument pos:start="163:67" pos:end="163:75"><expr pos:start="163:67" pos:end="163:75"><name pos:start="163:67" pos:end="163:75">bmap_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="165:5" pos:end="169:5"><if pos:start="165:5" pos:end="169:5">if <condition pos:start="165:8" pos:end="165:16">(<expr pos:start="165:9" pos:end="165:15"><name pos:start="165:9" pos:end="165:11">ret</name> <operator pos:start="165:13" pos:end="165:13">&lt;</operator> <literal type="number" pos:start="165:15" pos:end="165:15">0</literal></expr>)</condition> <block pos:start="165:18" pos:end="169:5">{<block_content pos:start="167:9" pos:end="167:28">

        <goto pos:start="167:9" pos:end="167:28">goto <name pos:start="167:14" pos:end="167:27">fail_free_bmap</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="173:5" pos:end="173:52">/* Disable migration when vdi images are used */</comment>

    <expr_stmt pos:start="175:5" pos:end="179:56"><expr pos:start="175:5" pos:end="179:55"><call pos:start="175:5" pos:end="179:55"><name pos:start="175:5" pos:end="175:13">error_set</name><argument_list pos:start="175:14" pos:end="179:55">(<argument pos:start="175:15" pos:end="175:35"><expr pos:start="175:15" pos:end="175:35"><operator pos:start="175:15" pos:end="175:15">&amp;</operator><name pos:start="175:16" pos:end="175:35"><name pos:start="175:16" pos:end="175:16">s</name><operator pos:start="175:17" pos:end="175:18">-&gt;</operator><name pos:start="175:19" pos:end="175:35">migration_blocker</name></name></expr></argument>,

              <argument pos:start="177:15" pos:end="177:53"><expr pos:start="177:15" pos:end="177:53"><name pos:start="177:15" pos:end="177:53">QERR_BLOCK_FORMAT_FEATURE_NOT_SUPPORTED</name></expr></argument>,

              <argument pos:start="179:15" pos:end="179:19"><expr pos:start="179:15" pos:end="179:19"><literal type="string" pos:start="179:15" pos:end="179:19">"vdi"</literal></expr></argument>, <argument pos:start="179:22" pos:end="179:36"><expr pos:start="179:22" pos:end="179:36"><name pos:start="179:22" pos:end="179:36"><name pos:start="179:22" pos:end="179:23">bs</name><operator pos:start="179:24" pos:end="179:25">-&gt;</operator><name pos:start="179:26" pos:end="179:36">device_name</name></name></expr></argument>, <argument pos:start="179:39" pos:end="179:54"><expr pos:start="179:39" pos:end="179:54"><literal type="string" pos:start="179:39" pos:end="179:54">"live migration"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:46"><expr pos:start="181:5" pos:end="181:45"><call pos:start="181:5" pos:end="181:45"><name pos:start="181:5" pos:end="181:23">migrate_add_blocker</name><argument_list pos:start="181:24" pos:end="181:45">(<argument pos:start="181:25" pos:end="181:44"><expr pos:start="181:25" pos:end="181:44"><name pos:start="181:25" pos:end="181:44"><name pos:start="181:25" pos:end="181:25">s</name><operator pos:start="181:26" pos:end="181:27">-&gt;</operator><name pos:start="181:28" pos:end="181:44">migration_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="185:5" pos:end="185:13">return <expr pos:start="185:12" pos:end="185:12"><literal type="number" pos:start="185:12" pos:end="185:12">0</literal></expr>;</return>



 <label pos:start="189:2" pos:end="189:16"><name pos:start="189:2" pos:end="189:15">fail_free_bmap</name>:</label>

    <expr_stmt pos:start="191:5" pos:end="191:20"><expr pos:start="191:5" pos:end="191:19"><call pos:start="191:5" pos:end="191:19"><name pos:start="191:5" pos:end="191:10">g_free</name><argument_list pos:start="191:11" pos:end="191:19">(<argument pos:start="191:12" pos:end="191:18"><expr pos:start="191:12" pos:end="191:18"><name pos:start="191:12" pos:end="191:18"><name pos:start="191:12" pos:end="191:12">s</name><operator pos:start="191:13" pos:end="191:14">-&gt;</operator><name pos:start="191:15" pos:end="191:18">bmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



 <label pos:start="195:2" pos:end="195:6"><name pos:start="195:2" pos:end="195:5">fail</name>:</label>

    <return pos:start="197:5" pos:end="197:15">return <expr pos:start="197:12" pos:end="197:14"><name pos:start="197:12" pos:end="197:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
