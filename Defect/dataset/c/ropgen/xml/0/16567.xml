<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16567.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:30">msix_vector_masked</name><parameter_list pos:start="1:31" pos:end="1:79">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:40">PCIDevice</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">dev</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:66"><decl pos:start="1:48" pos:end="1:66"><type pos:start="1:48" pos:end="1:66"><name pos:start="1:48" pos:end="1:55">unsigned</name> <name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:66">vector</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:78"><decl pos:start="1:69" pos:end="1:78"><type pos:start="1:69" pos:end="1:78"><name pos:start="1:69" pos:end="1:72">bool</name></type> <name pos:start="1:74" pos:end="1:78">fmask</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:36">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:50"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">unsigned</name></type> <name pos:start="5:14" pos:end="5:19">offset</name> <init pos:start="5:21" pos:end="5:50">= <expr pos:start="5:23" pos:end="5:50"><name pos:start="5:23" pos:end="5:28">vector</name> <operator pos:start="5:30" pos:end="5:30">*</operator> <name pos:start="5:32" pos:end="5:50">PCI_MSIX_ENTRY_SIZE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:80"><decl pos:start="7:5" pos:end="7:79"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">uint32_t</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">data</name> <init pos:start="7:20" pos:end="7:79">= <expr pos:start="7:22" pos:end="7:79"><operator pos:start="7:22" pos:end="7:22">(</operator><name pos:start="7:23" pos:end="7:30">uint32_t</name> <operator pos:start="7:32" pos:end="7:32">*</operator><operator pos:start="7:33" pos:end="7:33">)</operator><operator pos:start="7:34" pos:end="7:34">&amp;</operator><name pos:start="7:35" pos:end="7:79"><name pos:start="7:35" pos:end="7:37">dev</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:49">msix_table</name><index pos:start="7:50" pos:end="7:79">[<expr pos:start="7:51" pos:end="7:78"><name pos:start="7:51" pos:end="7:56">offset</name> <operator pos:start="7:58" pos:end="7:58">+</operator> <name pos:start="7:60" pos:end="7:78">PCI_MSIX_ENTRY_DATA</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <comment type="block" pos:start="9:5" pos:end="11:54">/* MSIs on Xen can be remapped into pirqs. In those cases, masking

     * and unmasking go through the PV evtchn path. */</comment>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:31">(<expr pos:start="13:9" pos:end="13:30"><call pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:23">xen_is_pirq_msi</name><argument_list pos:start="13:24" pos:end="13:30">(<argument pos:start="13:25" pos:end="13:29"><expr pos:start="13:25" pos:end="13:29"><operator pos:start="13:25" pos:end="13:25">*</operator><name pos:start="13:26" pos:end="13:29">data</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:33" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:21">

        <return pos:start="15:9" pos:end="15:21">return <expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="19:5" pos:end="21:36">return <expr pos:start="19:12" pos:end="21:35"><name pos:start="19:12" pos:end="19:16">fmask</name> <operator pos:start="19:18" pos:end="19:19">||</operator> <name pos:start="19:21" pos:end="19:72"><name pos:start="19:21" pos:end="19:23">dev</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:35">msix_table</name><index pos:start="19:36" pos:end="19:72">[<expr pos:start="19:37" pos:end="19:71"><name pos:start="19:37" pos:end="19:42">offset</name> <operator pos:start="19:44" pos:end="19:44">+</operator> <name pos:start="19:46" pos:end="19:71">PCI_MSIX_ENTRY_VECTOR_CTRL</name></expr>]</index></name> <operator pos:start="19:74" pos:end="19:74">&amp;</operator>

        <name pos:start="21:9" pos:end="21:35">PCI_MSIX_ENTRY_CTRL_MASKBIT</name></expr>;</return>

</block_content>}</block></function>
</unit>
