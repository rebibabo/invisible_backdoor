<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19958.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:13">AUD_write</name> <parameter_list pos:start="1:15" pos:end="1:51">(<parameter pos:start="1:16" pos:end="1:29"><decl pos:start="1:16" pos:end="1:29"><type pos:start="1:16" pos:end="1:29"><name pos:start="1:16" pos:end="1:25">SWVoiceOut</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:29">sw</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:40"><decl pos:start="1:32" pos:end="1:40"><type pos:start="1:32" pos:end="1:40"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">buf</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:50"><decl pos:start="1:43" pos:end="1:50"><type pos:start="1:43" pos:end="1:50"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:50">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:17">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">bytes</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:12">(<expr pos:start="9:9" pos:end="9:11"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:11">sw</name></expr>)</condition> <block pos:start="9:14" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:20">

        <comment type="block" pos:start="11:9" pos:end="11:35">/* XXX: Consider options */</comment>

        <return pos:start="13:9" pos:end="13:20">return <expr pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:19">size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:25">(<expr pos:start="19:9" pos:end="19:24"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:24"><name pos:start="19:10" pos:end="19:11">sw</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:15">hw</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:24">enabled</name></name></expr>)</condition> <block pos:start="19:27" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:17">

        <expr_stmt pos:start="21:9" pos:end="21:63"><expr pos:start="21:9" pos:end="21:62"><call pos:start="21:9" pos:end="21:62"><name pos:start="21:9" pos:end="21:13">dolog</name> <argument_list pos:start="21:15" pos:end="21:62">(<argument pos:start="21:16" pos:end="21:47"><expr pos:start="21:16" pos:end="21:47"><literal type="string" pos:start="21:16" pos:end="21:47">"Writing to disabled voice %s\n"</literal></expr></argument>, <argument pos:start="21:50" pos:end="21:61"><expr pos:start="21:50" pos:end="21:61"><call pos:start="21:50" pos:end="21:61"><name pos:start="21:50" pos:end="21:56">SW_NAME</name> <argument_list pos:start="21:58" pos:end="21:61">(<argument pos:start="21:59" pos:end="21:60"><expr pos:start="21:59" pos:end="21:60"><name pos:start="21:59" pos:end="21:60">sw</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:51"><expr pos:start="29:5" pos:end="29:50"><name pos:start="29:5" pos:end="29:9">bytes</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:50"><name pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:14">sw</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:18">hw</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:27">pcm_ops</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:34">write</name></name> <argument_list pos:start="29:36" pos:end="29:50">(<argument pos:start="29:37" pos:end="29:38"><expr pos:start="29:37" pos:end="29:38"><name pos:start="29:37" pos:end="29:38">sw</name></expr></argument>, <argument pos:start="29:41" pos:end="29:43"><expr pos:start="29:41" pos:end="29:43"><name pos:start="29:41" pos:end="29:43">buf</name></expr></argument>, <argument pos:start="29:46" pos:end="29:49"><expr pos:start="29:46" pos:end="29:49"><name pos:start="29:46" pos:end="29:49">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="31:5" pos:end="31:17">return <expr pos:start="31:12" pos:end="31:16"><name pos:start="31:12" pos:end="31:16">bytes</name></expr>;</return>

</block_content>}</block></function>
</unit>
