<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11297.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:47">mpeg2_fast_decode_block_intra</name><parameter_list pos:start="1:48" pos:end="1:89">(<parameter pos:start="1:49" pos:end="1:65"><decl pos:start="1:49" pos:end="1:65"><type pos:start="1:49" pos:end="1:65"><name pos:start="1:49" pos:end="1:62">MpegEncContext</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:65">s</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:81"><decl pos:start="1:68" pos:end="1:81"><type pos:start="1:68" pos:end="1:81"><name pos:start="1:68" pos:end="1:74">int16_t</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:81">block</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:88"><decl pos:start="1:84" pos:end="1:88"><type pos:start="1:84" pos:end="1:88"><name pos:start="1:84" pos:end="1:86">int</name></type> <name pos:start="1:88" pos:end="1:88">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">level</name></decl>, <decl pos:start="5:16" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:17">dc</name></decl>, <decl pos:start="5:20" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:23">diff</name></decl>, <decl pos:start="5:26" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:26" pos:end="5:26">j</name></decl>, <decl pos:start="5:29" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:31">run</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">component</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">RLTable</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:15">rl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:55"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type> <name pos:start="11:15" pos:end="11:23">scantable</name> <init pos:start="11:25" pos:end="11:55">= <expr pos:start="11:27" pos:end="11:55"><name pos:start="11:27" pos:end="11:55"><name pos:start="11:27" pos:end="11:27">s</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:44">intra_scantable</name><operator pos:start="11:45" pos:end="11:45">.</operator><name pos:start="11:46" pos:end="11:55">permutated</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:20"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:18">uint16_t</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:32">quant_matrix</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:20">qscale</name> <init pos:start="15:22" pos:end="15:32">= <expr pos:start="15:24" pos:end="15:32"><name pos:start="15:24" pos:end="15:32"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:32">qscale</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:24">/* DC coefficient */</comment>

    <if_stmt pos:start="21:5" pos:end="33:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:14">(<expr pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:9">n</name> <operator pos:start="21:11" pos:end="21:11">&lt;</operator> <literal type="number" pos:start="21:13" pos:end="21:13">4</literal></expr>)</condition> <block pos:start="21:16" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:22">

        <expr_stmt pos:start="23:9" pos:end="23:39"><expr pos:start="23:9" pos:end="23:38"><name pos:start="23:9" pos:end="23:20">quant_matrix</name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:38"><name pos:start="23:24" pos:end="23:24">s</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:38">intra_matrix</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:22"><expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:17">component</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="33:5">else <block pos:start="27:12" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:32">

        <expr_stmt pos:start="29:9" pos:end="29:46"><expr pos:start="29:9" pos:end="29:45"><name pos:start="29:9" pos:end="29:20">quant_matrix</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:45"><name pos:start="29:24" pos:end="29:24">s</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:45">chroma_intra_matrix</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:17">component</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <operator pos:start="31:21" pos:end="31:21">(</operator><name pos:start="31:22" pos:end="31:22">n</name> <operator pos:start="31:24" pos:end="31:24">&amp;</operator> <literal type="number" pos:start="31:26" pos:end="31:26">1</literal><operator pos:start="31:27" pos:end="31:27">)</operator> <operator pos:start="31:29" pos:end="31:29">+</operator> <literal type="number" pos:start="31:31" pos:end="31:31">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:8">diff</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <call pos:start="35:12" pos:end="35:39"><name pos:start="35:12" pos:end="35:20">decode_dc</name><argument_list pos:start="35:21" pos:end="35:39">(<argument pos:start="35:22" pos:end="35:27"><expr pos:start="35:22" pos:end="35:27"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:27"><name pos:start="35:23" pos:end="35:23">s</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:27">gb</name></name></expr></argument>, <argument pos:start="35:30" pos:end="35:38"><expr pos:start="35:30" pos:end="35:38"><name pos:start="35:30" pos:end="35:38">component</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if <condition pos:start="37:8" pos:end="37:23">(<expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:12">diff</name> <operator pos:start="37:14" pos:end="37:15">&gt;=</operator> <literal type="number" pos:start="37:17" pos:end="37:22">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:6">dc</name> <operator pos:start="41:8" pos:end="41:8">=</operator> <name pos:start="41:10" pos:end="41:30"><name pos:start="41:10" pos:end="41:10">s</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:19">last_dc</name><index pos:start="41:20" pos:end="41:30">[<expr pos:start="41:21" pos:end="41:29"><name pos:start="41:21" pos:end="41:29">component</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:15"><expr pos:start="43:5" pos:end="43:14"><name pos:start="43:5" pos:end="43:6">dc</name> <operator pos:start="43:8" pos:end="43:9">+=</operator> <name pos:start="43:11" pos:end="43:14">diff</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:31"><expr pos:start="45:5" pos:end="45:30"><name pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:14">last_dc</name><index pos:start="45:15" pos:end="45:25">[<expr pos:start="45:16" pos:end="45:24"><name pos:start="45:16" pos:end="45:24">component</name></expr>]</index></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:30">dc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:49"><expr pos:start="47:5" pos:end="47:48"><name pos:start="47:5" pos:end="47:12"><name pos:start="47:5" pos:end="47:9">block</name><index pos:start="47:10" pos:end="47:12">[<expr pos:start="47:11" pos:end="47:11"><literal type="number" pos:start="47:11" pos:end="47:11">0</literal></expr>]</index></name> <operator pos:start="47:14" pos:end="47:14">=</operator> <name pos:start="47:16" pos:end="47:17">dc</name> <operator pos:start="47:19" pos:end="47:20">&lt;&lt;</operator> <operator pos:start="47:22" pos:end="47:22">(</operator><literal type="number" pos:start="47:23" pos:end="47:25">3</literal> <operator pos:start="47:25" pos:end="47:25">-</operator> <name pos:start="47:27" pos:end="47:47"><name pos:start="47:27" pos:end="47:27">s</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:47">intra_dc_precision</name></name><operator pos:start="47:48" pos:end="47:48">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:26"><if pos:start="49:5" pos:end="51:26">if <condition pos:start="49:8" pos:end="49:28">(<expr pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:27">intra_vlc_format</name></name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:26"><block_content pos:start="51:9" pos:end="51:26">

        <expr_stmt pos:start="51:9" pos:end="51:26"><expr pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:10">rl</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <operator pos:start="51:14" pos:end="51:14">&amp;</operator><name pos:start="51:15" pos:end="51:25">ff_rl_mpeg2</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="53:5" pos:end="55:26">else<block type="pseudo" pos:start="55:9" pos:end="55:26"><block_content pos:start="55:9" pos:end="55:26">

        <expr_stmt pos:start="55:9" pos:end="55:26"><expr pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:10">rl</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <operator pos:start="55:14" pos:end="55:14">&amp;</operator><name pos:start="55:15" pos:end="55:25">ff_rl_mpeg1</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <block pos:start="59:5" pos:end="125:5">{<block_content pos:start="61:9" pos:end="123:33">

        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><call pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:19">OPEN_READER</name><argument_list pos:start="61:20" pos:end="61:31">(<argument pos:start="61:21" pos:end="61:22"><expr pos:start="61:21" pos:end="61:22"><name pos:start="61:21" pos:end="61:22">re</name></expr></argument>, <argument pos:start="61:25" pos:end="61:30"><expr pos:start="61:25" pos:end="61:30"><operator pos:start="61:25" pos:end="61:25">&amp;</operator><name pos:start="61:26" pos:end="61:30"><name pos:start="61:26" pos:end="61:26">s</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:30">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="63:9" pos:end="63:51">/* now quantify &amp; encode AC coefficients */</comment>

        <for pos:start="65:9" pos:end="121:9">for <control pos:start="65:13" pos:end="65:16">(<init pos:start="65:14" pos:end="65:14">;</init><condition pos:start="65:15" pos:end="65:15">;</condition><incr/>)</control> <block pos:start="65:18" pos:end="121:9">{<block_content pos:start="67:13" pos:end="119:29">

            <expr_stmt pos:start="67:13" pos:end="67:37"><expr pos:start="67:13" pos:end="67:36"><call pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:24">UPDATE_CACHE</name><argument_list pos:start="67:25" pos:end="67:36">(<argument pos:start="67:26" pos:end="67:27"><expr pos:start="67:26" pos:end="67:27"><name pos:start="67:26" pos:end="67:27">re</name></expr></argument>, <argument pos:start="67:30" pos:end="67:35"><expr pos:start="67:30" pos:end="67:35"><operator pos:start="67:30" pos:end="67:30">&amp;</operator><name pos:start="67:31" pos:end="67:35"><name pos:start="67:31" pos:end="67:31">s</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:82"><expr pos:start="69:13" pos:end="69:81"><call pos:start="69:13" pos:end="69:81"><name pos:start="69:13" pos:end="69:22">GET_RL_VLC</name><argument_list pos:start="69:23" pos:end="69:81">(<argument pos:start="69:24" pos:end="69:28"><expr pos:start="69:24" pos:end="69:28"><name pos:start="69:24" pos:end="69:28">level</name></expr></argument>, <argument pos:start="69:31" pos:end="69:33"><expr pos:start="69:31" pos:end="69:33"><name pos:start="69:31" pos:end="69:33">run</name></expr></argument>, <argument pos:start="69:36" pos:end="69:37"><expr pos:start="69:36" pos:end="69:37"><name pos:start="69:36" pos:end="69:37">re</name></expr></argument>, <argument pos:start="69:40" pos:end="69:45"><expr pos:start="69:40" pos:end="69:45"><operator pos:start="69:40" pos:end="69:40">&amp;</operator><name pos:start="69:41" pos:end="69:45"><name pos:start="69:41" pos:end="69:41">s</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:45">gb</name></name></expr></argument>, <argument pos:start="69:48" pos:end="69:60"><expr pos:start="69:48" pos:end="69:60"><name pos:start="69:48" pos:end="69:60"><name pos:start="69:48" pos:end="69:49">rl</name><operator pos:start="69:50" pos:end="69:51">-&gt;</operator><name pos:start="69:52" pos:end="69:57">rl_vlc</name><index pos:start="69:58" pos:end="69:60">[<expr pos:start="69:59" pos:end="69:59"><literal type="number" pos:start="69:59" pos:end="69:59">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="69:63" pos:end="69:74"><expr pos:start="69:63" pos:end="69:74"><name pos:start="69:63" pos:end="69:74">TEX_VLC_BITS</name></expr></argument>, <argument pos:start="69:77" pos:end="69:77"><expr pos:start="69:77" pos:end="69:77"><literal type="number" pos:start="69:77" pos:end="69:77">2</literal></expr></argument>, <argument pos:start="69:80" pos:end="69:80"><expr pos:start="69:80" pos:end="69:80"><literal type="number" pos:start="69:80" pos:end="69:80">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="73:13" pos:end="115:13"><if pos:start="73:13" pos:end="77:13">if <condition pos:start="73:16" pos:end="73:29">(<expr pos:start="73:17" pos:end="73:28"><name pos:start="73:17" pos:end="73:21">level</name> <operator pos:start="73:23" pos:end="73:24">==</operator> <literal type="number" pos:start="73:26" pos:end="73:28">127</literal></expr>)</condition> <block pos:start="73:31" pos:end="77:13">{<block_content pos:start="75:17" pos:end="75:22">

                <break pos:start="75:17" pos:end="75:22">break;</break>

            </block_content>}</block></if> <if type="elseif" pos:start="77:15" pos:end="89:13">else if <condition pos:start="77:23" pos:end="77:34">(<expr pos:start="77:24" pos:end="77:33"><name pos:start="77:24" pos:end="77:28">level</name> <operator pos:start="77:30" pos:end="77:31">!=</operator> <literal type="number" pos:start="77:33" pos:end="77:33">0</literal></expr>)</condition> <block pos:start="77:36" pos:end="89:13">{<block_content pos:start="79:17" pos:end="87:46">

                <expr_stmt pos:start="79:17" pos:end="79:33"><expr pos:start="79:17" pos:end="79:32"><name pos:start="79:17" pos:end="79:25">scantable</name> <operator pos:start="79:27" pos:end="79:28">+=</operator> <name pos:start="79:30" pos:end="79:32">run</name></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:31"><expr pos:start="81:17" pos:end="81:30"><name pos:start="81:17" pos:end="81:17">j</name> <operator pos:start="81:19" pos:end="81:19">=</operator> <operator pos:start="81:21" pos:end="81:21">*</operator><name pos:start="81:22" pos:end="81:30">scantable</name></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:64"><expr pos:start="83:17" pos:end="83:63"><name pos:start="83:17" pos:end="83:21">level</name> <operator pos:start="83:23" pos:end="83:23">=</operator> <operator pos:start="83:25" pos:end="83:25">(</operator><name pos:start="83:26" pos:end="83:30">level</name> <operator pos:start="83:32" pos:end="83:32">*</operator> <name pos:start="83:34" pos:end="83:39">qscale</name> <operator pos:start="83:41" pos:end="83:41">*</operator> <name pos:start="83:43" pos:end="83:57"><name pos:start="83:43" pos:end="83:54">quant_matrix</name><index pos:start="83:55" pos:end="83:57">[<expr pos:start="83:56" pos:end="83:56"><name pos:start="83:56" pos:end="83:56">j</name></expr>]</index></name><operator pos:start="83:58" pos:end="83:58">)</operator> <operator pos:start="83:60" pos:end="83:61">&gt;&gt;</operator> <literal type="number" pos:start="83:63" pos:end="83:63">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:88"><expr pos:start="85:17" pos:end="85:87"><name pos:start="85:17" pos:end="85:21">level</name> <operator pos:start="85:23" pos:end="85:23">=</operator> <operator pos:start="85:25" pos:end="85:25">(</operator><name pos:start="85:26" pos:end="85:30">level</name> <operator pos:start="85:32" pos:end="85:32">^</operator> <call pos:start="85:34" pos:end="85:58"><name pos:start="85:34" pos:end="85:43">SHOW_SBITS</name><argument_list pos:start="85:44" pos:end="85:58">(<argument pos:start="85:45" pos:end="85:46"><expr pos:start="85:45" pos:end="85:46"><name pos:start="85:45" pos:end="85:46">re</name></expr></argument>, <argument pos:start="85:49" pos:end="85:54"><expr pos:start="85:49" pos:end="85:54"><operator pos:start="85:49" pos:end="85:49">&amp;</operator><name pos:start="85:50" pos:end="85:54"><name pos:start="85:50" pos:end="85:50">s</name><operator pos:start="85:51" pos:end="85:52">-&gt;</operator><name pos:start="85:53" pos:end="85:54">gb</name></name></expr></argument>, <argument pos:start="85:57" pos:end="85:57"><expr pos:start="85:57" pos:end="85:57"><literal type="number" pos:start="85:57" pos:end="85:57">1</literal></expr></argument>)</argument_list></call><operator pos:start="85:59" pos:end="85:59">)</operator> <operator pos:start="85:61" pos:end="85:61">-</operator> <call pos:start="85:63" pos:end="85:87"><name pos:start="85:63" pos:end="85:72">SHOW_SBITS</name><argument_list pos:start="85:73" pos:end="85:87">(<argument pos:start="85:74" pos:end="85:75"><expr pos:start="85:74" pos:end="85:75"><name pos:start="85:74" pos:end="85:75">re</name></expr></argument>, <argument pos:start="85:78" pos:end="85:83"><expr pos:start="85:78" pos:end="85:83"><operator pos:start="85:78" pos:end="85:78">&amp;</operator><name pos:start="85:79" pos:end="85:83"><name pos:start="85:79" pos:end="85:79">s</name><operator pos:start="85:80" pos:end="85:81">-&gt;</operator><name pos:start="85:82" pos:end="85:83">gb</name></name></expr></argument>, <argument pos:start="85:86" pos:end="85:86"><expr pos:start="85:86" pos:end="85:86"><literal type="number" pos:start="85:86" pos:end="85:86">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:46"><expr pos:start="87:17" pos:end="87:45"><call pos:start="87:17" pos:end="87:45"><name pos:start="87:17" pos:end="87:30">LAST_SKIP_BITS</name><argument_list pos:start="87:31" pos:end="87:45">(<argument pos:start="87:32" pos:end="87:33"><expr pos:start="87:32" pos:end="87:33"><name pos:start="87:32" pos:end="87:33">re</name></expr></argument>, <argument pos:start="87:36" pos:end="87:41"><expr pos:start="87:36" pos:end="87:41"><operator pos:start="87:36" pos:end="87:36">&amp;</operator><name pos:start="87:37" pos:end="87:41"><name pos:start="87:37" pos:end="87:37">s</name><operator pos:start="87:38" pos:end="87:39">-&gt;</operator><name pos:start="87:40" pos:end="87:41">gb</name></name></expr></argument>, <argument pos:start="87:44" pos:end="87:44"><expr pos:start="87:44" pos:end="87:44"><literal type="number" pos:start="87:44" pos:end="87:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="89:15" pos:end="115:13">else <block pos:start="89:20" pos:end="115:13">{<block_content pos:start="93:17" pos:end="113:17">

                <comment type="block" pos:start="91:17" pos:end="91:28">/* escape */</comment>

                <expr_stmt pos:start="93:17" pos:end="93:52"><expr pos:start="93:17" pos:end="93:51"><name pos:start="93:17" pos:end="93:19">run</name> <operator pos:start="93:21" pos:end="93:21">=</operator> <call pos:start="93:23" pos:end="93:47"><name pos:start="93:23" pos:end="93:32">SHOW_UBITS</name><argument_list pos:start="93:33" pos:end="93:47">(<argument pos:start="93:34" pos:end="93:35"><expr pos:start="93:34" pos:end="93:35"><name pos:start="93:34" pos:end="93:35">re</name></expr></argument>, <argument pos:start="93:38" pos:end="93:43"><expr pos:start="93:38" pos:end="93:43"><operator pos:start="93:38" pos:end="93:38">&amp;</operator><name pos:start="93:39" pos:end="93:43"><name pos:start="93:39" pos:end="93:39">s</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:43">gb</name></name></expr></argument>, <argument pos:start="93:46" pos:end="93:46"><expr pos:start="93:46" pos:end="93:46"><literal type="number" pos:start="93:46" pos:end="93:46">6</literal></expr></argument>)</argument_list></call> <operator pos:start="93:49" pos:end="93:49">+</operator> <literal type="number" pos:start="93:51" pos:end="93:51">1</literal></expr>;</expr_stmt> <expr_stmt pos:start="93:54" pos:end="93:83"><expr pos:start="93:54" pos:end="93:82"><call pos:start="93:54" pos:end="93:82"><name pos:start="93:54" pos:end="93:67">LAST_SKIP_BITS</name><argument_list pos:start="93:68" pos:end="93:82">(<argument pos:start="93:69" pos:end="93:70"><expr pos:start="93:69" pos:end="93:70"><name pos:start="93:69" pos:end="93:70">re</name></expr></argument>, <argument pos:start="93:73" pos:end="93:78"><expr pos:start="93:73" pos:end="93:78"><operator pos:start="93:73" pos:end="93:73">&amp;</operator><name pos:start="93:74" pos:end="93:78"><name pos:start="93:74" pos:end="93:74">s</name><operator pos:start="93:75" pos:end="93:76">-&gt;</operator><name pos:start="93:77" pos:end="93:78">gb</name></name></expr></argument>, <argument pos:start="93:81" pos:end="93:81"><expr pos:start="93:81" pos:end="93:81"><literal type="number" pos:start="93:81" pos:end="93:81">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:41"><expr pos:start="95:17" pos:end="95:40"><call pos:start="95:17" pos:end="95:40"><name pos:start="95:17" pos:end="95:28">UPDATE_CACHE</name><argument_list pos:start="95:29" pos:end="95:40">(<argument pos:start="95:30" pos:end="95:31"><expr pos:start="95:30" pos:end="95:31"><name pos:start="95:30" pos:end="95:31">re</name></expr></argument>, <argument pos:start="95:34" pos:end="95:39"><expr pos:start="95:34" pos:end="95:39"><operator pos:start="95:34" pos:end="95:34">&amp;</operator><name pos:start="95:35" pos:end="95:39"><name pos:start="95:35" pos:end="95:35">s</name><operator pos:start="95:36" pos:end="95:37">-&gt;</operator><name pos:start="95:38" pos:end="95:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:51"><expr pos:start="97:17" pos:end="97:50"><name pos:start="97:17" pos:end="97:21">level</name> <operator pos:start="97:23" pos:end="97:23">=</operator> <call pos:start="97:25" pos:end="97:50"><name pos:start="97:25" pos:end="97:34">SHOW_SBITS</name><argument_list pos:start="97:35" pos:end="97:50">(<argument pos:start="97:36" pos:end="97:37"><expr pos:start="97:36" pos:end="97:37"><name pos:start="97:36" pos:end="97:37">re</name></expr></argument>, <argument pos:start="97:40" pos:end="97:45"><expr pos:start="97:40" pos:end="97:45"><operator pos:start="97:40" pos:end="97:40">&amp;</operator><name pos:start="97:41" pos:end="97:45"><name pos:start="97:41" pos:end="97:41">s</name><operator pos:start="97:42" pos:end="97:43">-&gt;</operator><name pos:start="97:44" pos:end="97:45">gb</name></name></expr></argument>, <argument pos:start="97:48" pos:end="97:49"><expr pos:start="97:48" pos:end="97:49"><literal type="number" pos:start="97:48" pos:end="97:49">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="97:53" pos:end="97:78"><expr pos:start="97:53" pos:end="97:77"><call pos:start="97:53" pos:end="97:77"><name pos:start="97:53" pos:end="97:61">SKIP_BITS</name><argument_list pos:start="97:62" pos:end="97:77">(<argument pos:start="97:63" pos:end="97:64"><expr pos:start="97:63" pos:end="97:64"><name pos:start="97:63" pos:end="97:64">re</name></expr></argument>, <argument pos:start="97:67" pos:end="97:72"><expr pos:start="97:67" pos:end="97:72"><operator pos:start="97:67" pos:end="97:67">&amp;</operator><name pos:start="97:68" pos:end="97:72"><name pos:start="97:68" pos:end="97:68">s</name><operator pos:start="97:69" pos:end="97:70">-&gt;</operator><name pos:start="97:71" pos:end="97:72">gb</name></name></expr></argument>, <argument pos:start="97:75" pos:end="97:76"><expr pos:start="97:75" pos:end="97:76"><literal type="number" pos:start="97:75" pos:end="97:76">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:33"><expr pos:start="99:17" pos:end="99:32"><name pos:start="99:17" pos:end="99:25">scantable</name> <operator pos:start="99:27" pos:end="99:28">+=</operator> <name pos:start="99:30" pos:end="99:32">run</name></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:31"><expr pos:start="101:17" pos:end="101:30"><name pos:start="101:17" pos:end="101:17">j</name> <operator pos:start="101:19" pos:end="101:19">=</operator> <operator pos:start="101:21" pos:end="101:21">*</operator><name pos:start="101:22" pos:end="101:30">scantable</name></expr>;</expr_stmt>

                <if_stmt pos:start="103:17" pos:end="113:17"><if pos:start="103:17" pos:end="109:17">if <condition pos:start="103:20" pos:end="103:30">(<expr pos:start="103:21" pos:end="103:29"><name pos:start="103:21" pos:end="103:25">level</name> <operator pos:start="103:27" pos:end="103:27">&lt;</operator> <literal type="number" pos:start="103:29" pos:end="103:29">0</literal></expr>)</condition> <block pos:start="103:32" pos:end="109:17">{<block_content pos:start="105:21" pos:end="107:35">

                    <expr_stmt pos:start="105:21" pos:end="105:69"><expr pos:start="105:21" pos:end="105:68"><name pos:start="105:21" pos:end="105:25">level</name> <operator pos:start="105:27" pos:end="105:27">=</operator> <operator pos:start="105:29" pos:end="105:29">(</operator><operator pos:start="105:30" pos:end="105:30">-</operator><name pos:start="105:31" pos:end="105:35">level</name> <operator pos:start="105:37" pos:end="105:37">*</operator> <name pos:start="105:39" pos:end="105:44">qscale</name> <operator pos:start="105:46" pos:end="105:46">*</operator> <name pos:start="105:48" pos:end="105:62"><name pos:start="105:48" pos:end="105:59">quant_matrix</name><index pos:start="105:60" pos:end="105:62">[<expr pos:start="105:61" pos:end="105:61"><name pos:start="105:61" pos:end="105:61">j</name></expr>]</index></name><operator pos:start="105:63" pos:end="105:63">)</operator> <operator pos:start="105:65" pos:end="105:66">&gt;&gt;</operator> <literal type="number" pos:start="105:68" pos:end="105:68">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="107:21" pos:end="107:35"><expr pos:start="107:21" pos:end="107:34"><name pos:start="107:21" pos:end="107:25">level</name> <operator pos:start="107:27" pos:end="107:27">=</operator> <operator pos:start="107:29" pos:end="107:29">-</operator><name pos:start="107:30" pos:end="107:34">level</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="109:19" pos:end="113:17">else <block pos:start="109:24" pos:end="113:17">{<block_content pos:start="111:21" pos:end="111:68">

                    <expr_stmt pos:start="111:21" pos:end="111:68"><expr pos:start="111:21" pos:end="111:67"><name pos:start="111:21" pos:end="111:25">level</name> <operator pos:start="111:27" pos:end="111:27">=</operator> <operator pos:start="111:29" pos:end="111:29">(</operator><name pos:start="111:30" pos:end="111:34">level</name> <operator pos:start="111:36" pos:end="111:36">*</operator> <name pos:start="111:38" pos:end="111:43">qscale</name> <operator pos:start="111:45" pos:end="111:45">*</operator> <name pos:start="111:47" pos:end="111:61"><name pos:start="111:47" pos:end="111:58">quant_matrix</name><index pos:start="111:59" pos:end="111:61">[<expr pos:start="111:60" pos:end="111:60"><name pos:start="111:60" pos:end="111:60">j</name></expr>]</index></name><operator pos:start="111:62" pos:end="111:62">)</operator> <operator pos:start="111:64" pos:end="111:65">&gt;&gt;</operator> <literal type="number" pos:start="111:67" pos:end="111:67">4</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="119:13" pos:end="119:29"><expr pos:start="119:13" pos:end="119:28"><name pos:start="119:13" pos:end="119:20"><name pos:start="119:13" pos:end="119:17">block</name><index pos:start="119:18" pos:end="119:20">[<expr pos:start="119:19" pos:end="119:19"><name pos:start="119:19" pos:end="119:19">j</name></expr>]</index></name> <operator pos:start="119:22" pos:end="119:22">=</operator> <name pos:start="119:24" pos:end="119:28">level</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="123:9" pos:end="123:33"><expr pos:start="123:9" pos:end="123:32"><call pos:start="123:9" pos:end="123:32"><name pos:start="123:9" pos:end="123:20">CLOSE_READER</name><argument_list pos:start="123:21" pos:end="123:32">(<argument pos:start="123:22" pos:end="123:23"><expr pos:start="123:22" pos:end="123:23"><name pos:start="123:22" pos:end="123:23">re</name></expr></argument>, <argument pos:start="123:26" pos:end="123:31"><expr pos:start="123:26" pos:end="123:31"><operator pos:start="123:26" pos:end="123:26">&amp;</operator><name pos:start="123:27" pos:end="123:31"><name pos:start="123:27" pos:end="123:27">s</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="129:5" pos:end="129:71"><expr pos:start="129:5" pos:end="129:70"><name pos:start="129:5" pos:end="129:26"><name pos:start="129:5" pos:end="129:5">s</name><operator pos:start="129:6" pos:end="129:7">-&gt;</operator><name pos:start="129:8" pos:end="129:23">block_last_index</name><index pos:start="129:24" pos:end="129:26">[<expr pos:start="129:25" pos:end="129:25"><name pos:start="129:25" pos:end="129:25">n</name></expr>]</index></name> <operator pos:start="129:28" pos:end="129:28">=</operator> <name pos:start="129:30" pos:end="129:38">scantable</name> <operator pos:start="129:40" pos:end="129:40">-</operator> <name pos:start="129:42" pos:end="129:70"><name pos:start="129:42" pos:end="129:42">s</name><operator pos:start="129:43" pos:end="129:44">-&gt;</operator><name pos:start="129:45" pos:end="129:59">intra_scantable</name><operator pos:start="129:60" pos:end="129:60">.</operator><name pos:start="129:61" pos:end="129:70">permutated</name></name></expr>;</expr_stmt>

    <return pos:start="131:5" pos:end="131:13">return <expr pos:start="131:12" pos:end="131:12"><literal type="number" pos:start="131:12" pos:end="131:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
