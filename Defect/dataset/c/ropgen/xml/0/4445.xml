<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4445.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">bdrv_open_common</name><parameter_list pos:start="1:28" pos:end="3:32">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:44">BlockDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:70"><decl pos:start="1:51" pos:end="1:70"><type pos:start="1:51" pos:end="1:70"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:60">char</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:70">filename</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:13"><type pos:start="3:5" pos:end="3:13"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:13">flags</name></decl></parameter>, <parameter pos:start="3:16" pos:end="3:31"><decl pos:start="3:16" pos:end="3:31"><type pos:start="3:16" pos:end="3:31"><name pos:start="3:16" pos:end="3:26">BlockDriver</name> <modifier pos:start="3:28" pos:end="3:28">*</modifier></type><name pos:start="3:29" pos:end="3:31">drv</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="157:1">{<block_content pos:start="7:5" pos:end="155:15">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:23">open_flags</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><call pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:23">(<argument pos:start="11:12" pos:end="11:22"><expr pos:start="11:12" pos:end="11:22"><name pos:start="11:12" pos:end="11:14">drv</name> <operator pos:start="11:16" pos:end="11:17">!=</operator> <name pos:start="11:19" pos:end="11:22">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:66"><expr pos:start="15:5" pos:end="15:65"><call pos:start="15:5" pos:end="15:65"><name pos:start="15:5" pos:end="15:26">trace_bdrv_open_common</name><argument_list pos:start="15:27" pos:end="15:65">(<argument pos:start="15:28" pos:end="15:29"><expr pos:start="15:28" pos:end="15:29"><name pos:start="15:28" pos:end="15:29">bs</name></expr></argument>, <argument pos:start="15:32" pos:end="15:39"><expr pos:start="15:32" pos:end="15:39"><name pos:start="15:32" pos:end="15:39">filename</name></expr></argument>, <argument pos:start="15:42" pos:end="15:46"><expr pos:start="15:42" pos:end="15:46"><name pos:start="15:42" pos:end="15:46">flags</name></expr></argument>, <argument pos:start="15:49" pos:end="15:64"><expr pos:start="15:49" pos:end="15:64"><name pos:start="15:49" pos:end="15:64"><name pos:start="15:49" pos:end="15:51">drv</name><operator pos:start="15:52" pos:end="15:53">-&gt;</operator><name pos:start="15:54" pos:end="15:64">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:20"><expr pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:6">bs</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:12">file</name></name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:6">bs</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:21">total_sectors</name></name> <operator pos:start="21:23" pos:end="21:23">=</operator> <literal type="number" pos:start="21:25" pos:end="21:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:6">bs</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:17">encrypted</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <literal type="number" pos:start="23:21" pos:end="23:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:22"><expr pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:6">bs</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:17">valid_key</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:6">bs</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:18">open_flags</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:26">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:6">bs</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:24">buffer_alignment</name></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <literal type="number" pos:start="29:28" pos:end="29:30">512</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:58"><expr pos:start="33:5" pos:end="33:57"><call pos:start="33:5" pos:end="33:57"><name pos:start="33:5" pos:end="33:11">pstrcpy</name><argument_list pos:start="33:12" pos:end="33:57">(<argument pos:start="33:13" pos:end="33:24"><expr pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:14">bs</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:24">filename</name></name></expr></argument>, <argument pos:start="33:27" pos:end="33:46"><expr pos:start="33:27" pos:end="33:46"><sizeof pos:start="33:27" pos:end="33:46">sizeof<argument_list pos:start="33:33" pos:end="33:46">(<argument pos:start="33:34" pos:end="33:45"><expr pos:start="33:34" pos:end="33:45"><name pos:start="33:34" pos:end="33:45"><name pos:start="33:34" pos:end="33:35">bs</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:45">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:49" pos:end="33:56"><expr pos:start="33:49" pos:end="33:56"><name pos:start="33:49" pos:end="33:56">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:56">(<expr pos:start="37:9" pos:end="37:55"><name pos:start="37:9" pos:end="37:26">use_bdrv_whitelist</name> <operator pos:start="37:28" pos:end="37:29">&amp;&amp;</operator> <operator pos:start="37:31" pos:end="37:31">!</operator><call pos:start="37:32" pos:end="37:55"><name pos:start="37:32" pos:end="37:50">bdrv_is_whitelisted</name><argument_list pos:start="37:51" pos:end="37:55">(<argument pos:start="37:52" pos:end="37:54"><expr pos:start="37:52" pos:end="37:54"><name pos:start="37:52" pos:end="37:54">drv</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:58" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:24">

        <return pos:start="39:9" pos:end="39:24">return <expr pos:start="39:16" pos:end="39:23"><operator pos:start="39:16" pos:end="39:16">-</operator><name pos:start="39:17" pos:end="39:23">ENOTSUP</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:18"><expr pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:11"><name pos:start="45:5" pos:end="45:6">bs</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:11">drv</name></name> <operator pos:start="45:13" pos:end="45:13">=</operator> <name pos:start="45:15" pos:end="45:17">drv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:47"><expr pos:start="47:5" pos:end="47:46"><name pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:6">bs</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:14">opaque</name></name> <operator pos:start="47:16" pos:end="47:16">=</operator> <call pos:start="47:18" pos:end="47:46"><name pos:start="47:18" pos:end="47:26">g_malloc0</name><argument_list pos:start="47:27" pos:end="47:46">(<argument pos:start="47:28" pos:end="47:45"><expr pos:start="47:28" pos:end="47:45"><name pos:start="47:28" pos:end="47:45"><name pos:start="47:28" pos:end="47:30">drv</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:45">instance_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="53:35"><if pos:start="51:5" pos:end="53:35">if <condition pos:start="51:8" pos:end="51:32">(<expr pos:start="51:9" pos:end="51:31"><name pos:start="51:9" pos:end="51:13">flags</name> <operator pos:start="51:15" pos:end="51:15">&amp;</operator> <name pos:start="51:17" pos:end="51:31">BDRV_O_CACHE_WB</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:35"><block_content pos:start="53:9" pos:end="53:35">

        <expr_stmt pos:start="53:9" pos:end="53:35"><expr pos:start="53:9" pos:end="53:34"><name pos:start="53:9" pos:end="53:30"><name pos:start="53:9" pos:end="53:10">bs</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:30">enable_write_cache</name></name> <operator pos:start="53:32" pos:end="53:32">=</operator> <literal type="number" pos:start="53:34" pos:end="53:34">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="63:7">/*

     * Clear flags that are internal to the block layer before opening the

     * image.

     */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:64"><expr pos:start="65:5" pos:end="65:63"><name pos:start="65:5" pos:end="65:14">open_flags</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <name pos:start="65:18" pos:end="65:22">flags</name> <operator pos:start="65:24" pos:end="65:24">&amp;</operator> <operator pos:start="65:26" pos:end="65:26">~</operator><operator pos:start="65:27" pos:end="65:27">(</operator><name pos:start="65:28" pos:end="65:42">BDRV_O_SNAPSHOT</name> <operator pos:start="65:44" pos:end="65:44">|</operator> <name pos:start="65:46" pos:end="65:62">BDRV_O_NO_BACKING</name><operator pos:start="65:63" pos:end="65:63">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="73:7">/*

     * Snapshots should be writable.

     */</comment>

    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:25">(<expr pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:10">bs</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:24">is_temporary</name></name></expr>)</condition> <block pos:start="75:27" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:34">

        <expr_stmt pos:start="77:9" pos:end="77:34"><expr pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:18">open_flags</name> <operator pos:start="77:20" pos:end="77:21">|=</operator> <name pos:start="77:23" pos:end="77:33">BDRV_O_RDWR</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:61">/* Open the image, either directly or using a protocol */</comment>

    <if_stmt pos:start="85:5" pos:end="99:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:28">(<expr pos:start="85:9" pos:end="85:27"><name pos:start="85:9" pos:end="85:27"><name pos:start="85:9" pos:end="85:11">drv</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:27">bdrv_file_open</name></name></expr>)</condition> <block pos:start="85:30" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:60">

        <expr_stmt pos:start="87:9" pos:end="87:60"><expr pos:start="87:9" pos:end="87:59"><name pos:start="87:9" pos:end="87:11">ret</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <call pos:start="87:15" pos:end="87:59"><name pos:start="87:15" pos:end="87:33"><name pos:start="87:15" pos:end="87:17">drv</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:33">bdrv_file_open</name></name><argument_list pos:start="87:34" pos:end="87:59">(<argument pos:start="87:35" pos:end="87:36"><expr pos:start="87:35" pos:end="87:36"><name pos:start="87:35" pos:end="87:36">bs</name></expr></argument>, <argument pos:start="87:39" pos:end="87:46"><expr pos:start="87:39" pos:end="87:46"><name pos:start="87:39" pos:end="87:46">filename</name></expr></argument>, <argument pos:start="87:49" pos:end="87:58"><expr pos:start="87:49" pos:end="87:58"><name pos:start="87:49" pos:end="87:58">open_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="99:5">else <block pos:start="89:12" pos:end="99:5">{<block_content pos:start="91:9" pos:end="97:9">

        <expr_stmt pos:start="91:9" pos:end="91:62"><expr pos:start="91:9" pos:end="91:61"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <call pos:start="91:15" pos:end="91:61"><name pos:start="91:15" pos:end="91:28">bdrv_file_open</name><argument_list pos:start="91:29" pos:end="91:61">(<argument pos:start="91:30" pos:end="91:38"><expr pos:start="91:30" pos:end="91:38"><operator pos:start="91:30" pos:end="91:30">&amp;</operator><name pos:start="91:31" pos:end="91:38"><name pos:start="91:31" pos:end="91:32">bs</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:38">file</name></name></expr></argument>, <argument pos:start="91:41" pos:end="91:48"><expr pos:start="91:41" pos:end="91:48"><name pos:start="91:41" pos:end="91:48">filename</name></expr></argument>, <argument pos:start="91:51" pos:end="91:60"><expr pos:start="91:51" pos:end="91:60"><name pos:start="91:51" pos:end="91:60">open_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="97:9"><if pos:start="93:9" pos:end="97:9">if <condition pos:start="93:12" pos:end="93:21">(<expr pos:start="93:13" pos:end="93:20"><name pos:start="93:13" pos:end="93:15">ret</name> <operator pos:start="93:17" pos:end="93:18">&gt;=</operator> <literal type="number" pos:start="93:20" pos:end="93:20">0</literal></expr>)</condition> <block pos:start="93:23" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:49">

            <expr_stmt pos:start="95:13" pos:end="95:49"><expr pos:start="95:13" pos:end="95:48"><name pos:start="95:13" pos:end="95:15">ret</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <call pos:start="95:19" pos:end="95:48"><name pos:start="95:19" pos:end="95:32"><name pos:start="95:19" pos:end="95:21">drv</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:32">bdrv_open</name></name><argument_list pos:start="95:33" pos:end="95:48">(<argument pos:start="95:34" pos:end="95:35"><expr pos:start="95:34" pos:end="95:35"><name pos:start="95:34" pos:end="95:35">bs</name></expr></argument>, <argument pos:start="95:38" pos:end="95:47"><expr pos:start="95:38" pos:end="95:47"><name pos:start="95:38" pos:end="95:47">open_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="103:5" pos:end="107:5"><if pos:start="103:5" pos:end="107:5">if <condition pos:start="103:8" pos:end="103:16">(<expr pos:start="103:9" pos:end="103:15"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">&lt;</operator> <literal type="number" pos:start="103:15" pos:end="103:15">0</literal></expr>)</condition> <block pos:start="103:18" pos:end="107:5">{<block_content pos:start="105:9" pos:end="105:27">

        <goto pos:start="105:9" pos:end="105:27">goto <name pos:start="105:14" pos:end="105:26">free_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:69"><expr pos:start="111:5" pos:end="111:68"><name pos:start="111:5" pos:end="111:22"><name pos:start="111:5" pos:end="111:6">bs</name><operator pos:start="111:7" pos:end="111:8">-&gt;</operator><name pos:start="111:9" pos:end="111:22">keep_read_only</name></name> <operator pos:start="111:24" pos:end="111:24">=</operator> <name pos:start="111:26" pos:end="111:38"><name pos:start="111:26" pos:end="111:27">bs</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:38">read_only</name></name> <operator pos:start="111:40" pos:end="111:40">=</operator> <operator pos:start="111:42" pos:end="111:42">!</operator><operator pos:start="111:43" pos:end="111:43">(</operator><name pos:start="111:44" pos:end="111:53">open_flags</name> <operator pos:start="111:55" pos:end="111:55">&amp;</operator> <name pos:start="111:57" pos:end="111:67">BDRV_O_RDWR</name><operator pos:start="111:68" pos:end="111:68">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:55"><expr pos:start="115:5" pos:end="115:54"><name pos:start="115:5" pos:end="115:7">ret</name> <operator pos:start="115:9" pos:end="115:9">=</operator> <call pos:start="115:11" pos:end="115:54"><name pos:start="115:11" pos:end="115:31">refresh_total_sectors</name><argument_list pos:start="115:32" pos:end="115:54">(<argument pos:start="115:33" pos:end="115:34"><expr pos:start="115:33" pos:end="115:34"><name pos:start="115:33" pos:end="115:34">bs</name></expr></argument>, <argument pos:start="115:37" pos:end="115:53"><expr pos:start="115:37" pos:end="115:53"><name pos:start="115:37" pos:end="115:53"><name pos:start="115:37" pos:end="115:38">bs</name><operator pos:start="115:39" pos:end="115:40">-&gt;</operator><name pos:start="115:41" pos:end="115:53">total_sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="126:0"><if pos:start="117:5" pos:end="126:0">if <condition pos:start="117:8" pos:end="117:16">(<expr pos:start="117:9" pos:end="117:15"><name pos:start="117:9" pos:end="117:11">ret</name> <operator pos:start="117:13" pos:end="117:13">&lt;</operator> <literal type="number" pos:start="117:15" pos:end="117:15">0</literal></expr>)</condition> <block pos:start="117:18" pos:end="126:0">{<block_content pos:start="119:9" pos:end="119:27">

        <goto pos:start="119:9" pos:end="119:27">goto <name pos:start="119:14" pos:end="119:26">free_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:ifndef pos:start="125:1" pos:end="125:14">#<cpp:directive pos:start="125:2" pos:end="125:7">ifndef</cpp:directive> <name pos:start="125:9" pos:end="125:14">_WIN32</name></cpp:ifndef>

    <if_stmt pos:start="127:5" pos:end="134:0"><if pos:start="127:5" pos:end="134:0">if <condition pos:start="127:8" pos:end="127:25">(<expr pos:start="127:9" pos:end="127:24"><name pos:start="127:9" pos:end="127:24"><name pos:start="127:9" pos:end="127:10">bs</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:24">is_temporary</name></name></expr>)</condition> <block pos:start="127:27" pos:end="134:0">{<block_content pos:start="129:9" pos:end="129:25">

        <expr_stmt pos:start="129:9" pos:end="129:25"><expr pos:start="129:9" pos:end="129:24"><call pos:start="129:9" pos:end="129:24"><name pos:start="129:9" pos:end="129:14">unlink</name><argument_list pos:start="129:15" pos:end="129:24">(<argument pos:start="129:16" pos:end="129:23"><expr pos:start="129:16" pos:end="129:23"><name pos:start="129:16" pos:end="129:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="133:1" pos:end="133:6">#<cpp:directive pos:start="133:2" pos:end="133:6">endif</cpp:directive></cpp:endif>

    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>



<label pos:start="139:1" pos:end="139:14"><name pos:start="139:1" pos:end="139:13">free_and_fail</name>:</label>

    <if_stmt pos:start="141:5" pos:end="147:5"><if pos:start="141:5" pos:end="147:5">if <condition pos:start="141:8" pos:end="141:17">(<expr pos:start="141:9" pos:end="141:16"><name pos:start="141:9" pos:end="141:16"><name pos:start="141:9" pos:end="141:10">bs</name><operator pos:start="141:11" pos:end="141:12">-&gt;</operator><name pos:start="141:13" pos:end="141:16">file</name></name></expr>)</condition> <block pos:start="141:19" pos:end="147:5">{<block_content pos:start="143:9" pos:end="145:24">

        <expr_stmt pos:start="143:9" pos:end="143:30"><expr pos:start="143:9" pos:end="143:29"><call pos:start="143:9" pos:end="143:29"><name pos:start="143:9" pos:end="143:19">bdrv_delete</name><argument_list pos:start="143:20" pos:end="143:29">(<argument pos:start="143:21" pos:end="143:28"><expr pos:start="143:21" pos:end="143:28"><name pos:start="143:21" pos:end="143:28"><name pos:start="143:21" pos:end="143:22">bs</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:28">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:24"><expr pos:start="145:9" pos:end="145:23"><name pos:start="145:9" pos:end="145:16"><name pos:start="145:9" pos:end="145:10">bs</name><operator pos:start="145:11" pos:end="145:12">-&gt;</operator><name pos:start="145:13" pos:end="145:16">file</name></name> <operator pos:start="145:18" pos:end="145:18">=</operator> <name pos:start="145:20" pos:end="145:23">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:23"><expr pos:start="149:5" pos:end="149:22"><call pos:start="149:5" pos:end="149:22"><name pos:start="149:5" pos:end="149:10">g_free</name><argument_list pos:start="149:11" pos:end="149:22">(<argument pos:start="149:12" pos:end="149:21"><expr pos:start="149:12" pos:end="149:21"><name pos:start="149:12" pos:end="149:21"><name pos:start="149:12" pos:end="149:13">bs</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:21">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:22"><expr pos:start="151:5" pos:end="151:21"><name pos:start="151:5" pos:end="151:14"><name pos:start="151:5" pos:end="151:6">bs</name><operator pos:start="151:7" pos:end="151:8">-&gt;</operator><name pos:start="151:9" pos:end="151:14">opaque</name></name> <operator pos:start="151:16" pos:end="151:16">=</operator> <name pos:start="151:18" pos:end="151:21">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:19"><expr pos:start="153:5" pos:end="153:18"><name pos:start="153:5" pos:end="153:11"><name pos:start="153:5" pos:end="153:6">bs</name><operator pos:start="153:7" pos:end="153:8">-&gt;</operator><name pos:start="153:9" pos:end="153:11">drv</name></name> <operator pos:start="153:13" pos:end="153:13">=</operator> <name pos:start="153:15" pos:end="153:18">NULL</name></expr>;</expr_stmt>

    <return pos:start="155:5" pos:end="155:15">return <expr pos:start="155:12" pos:end="155:14"><name pos:start="155:12" pos:end="155:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
