<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6450.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">idct_put_altivec</name><parameter_list pos:start="1:22" pos:end="1:69">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:29">uint8_t</name><modifier pos:start="1:30" pos:end="1:30">*</modifier></type> <name pos:start="1:32" pos:end="1:35">dest</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:47"><decl pos:start="1:38" pos:end="1:47"><type pos:start="1:38" pos:end="1:47"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:47">stride</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:68"><decl pos:start="1:50" pos:end="1:68"><type pos:start="1:50" pos:end="1:68"><name pos:start="1:50" pos:end="1:61">vector_s16_t</name><modifier pos:start="1:62" pos:end="1:62">*</modifier></type> <name pos:start="1:64" pos:end="1:68">block</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:1" pos:end="62:0">

<expr_stmt pos:start="5:1" pos:end="8:0"><expr pos:start="5:1" pos:end="5:44"><call pos:start="5:1" pos:end="5:44"><name pos:start="5:1" pos:end="5:19">POWERPC_TBL_DECLARE</name><argument_list pos:start="5:20" pos:end="5:44">(<argument pos:start="5:21" pos:end="5:40"><expr pos:start="5:21" pos:end="5:40"><name pos:start="5:21" pos:end="5:40">altivec_idct_put_num</name></expr></argument>, <argument pos:start="5:43" pos:end="5:43"><expr pos:start="5:43" pos:end="5:43"><literal type="number" pos:start="5:43" pos:end="5:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="7:1" pos:end="7:35">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:35">ALTIVEC_USE_REFERENCE_C_CODE</name></cpp:ifdef>

<expr_stmt pos:start="9:1" pos:end="9:49"><expr pos:start="9:1" pos:end="9:48"><call pos:start="9:1" pos:end="9:48"><name pos:start="9:1" pos:end="9:23">POWERPC_TBL_START_COUNT</name><argument_list pos:start="9:24" pos:end="9:48">(<argument pos:start="9:25" pos:end="9:44"><expr pos:start="9:25" pos:end="9:44"><name pos:start="9:25" pos:end="9:44">altivec_idct_put_num</name></expr></argument>, <argument pos:start="9:47" pos:end="9:47"><expr pos:start="9:47" pos:end="9:47"><literal type="number" pos:start="9:47" pos:end="9:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:71"><decl pos:start="11:5" pos:end="11:70"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">void</name></type> <name pos:start="11:10" pos:end="11:24">simple_idct_put</name><argument_list pos:start="11:25" pos:end="11:70">(<argument pos:start="11:26" pos:end="11:38"><expr pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:32">uint8_t</name> <operator pos:start="11:34" pos:end="11:34">*</operator><name pos:start="11:35" pos:end="11:38">dest</name></expr></argument>, <argument pos:start="11:41" pos:end="11:53"><expr pos:start="11:41" pos:end="11:53"><name pos:start="11:41" pos:end="11:43">int</name> <name pos:start="11:45" pos:end="11:53">line_size</name></expr></argument>, <argument pos:start="11:56" pos:end="11:69"><expr pos:start="11:56" pos:end="11:69"><name pos:start="11:56" pos:end="11:62">int16_t</name> <operator pos:start="11:64" pos:end="11:64">*</operator><name pos:start="11:65" pos:end="11:69">block</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:51"><expr pos:start="13:5" pos:end="13:50"><call pos:start="13:5" pos:end="13:50"><name pos:start="13:5" pos:end="13:19">simple_idct_put</name><argument_list pos:start="13:20" pos:end="13:50">(<argument pos:start="13:21" pos:end="13:24"><expr pos:start="13:21" pos:end="13:24"><name pos:start="13:21" pos:end="13:24">dest</name></expr></argument>, <argument pos:start="13:27" pos:end="13:32"><expr pos:start="13:27" pos:end="13:32"><name pos:start="13:27" pos:end="13:32">stride</name></expr></argument>, <argument pos:start="13:35" pos:end="13:49"><expr pos:start="13:35" pos:end="13:49"><operator pos:start="13:35" pos:end="13:35">(</operator><name pos:start="13:36" pos:end="13:42">int16_t</name><operator pos:start="13:43" pos:end="13:43">*</operator><operator pos:start="13:44" pos:end="13:44">)</operator><name pos:start="13:45" pos:end="13:49">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt pos:start="15:1" pos:end="18:0"><expr pos:start="15:1" pos:end="15:47"><call pos:start="15:1" pos:end="15:47"><name pos:start="15:1" pos:end="15:22">POWERPC_TBL_STOP_COUNT</name><argument_list pos:start="15:23" pos:end="15:47">(<argument pos:start="15:24" pos:end="15:43"><expr pos:start="15:24" pos:end="15:43"><name pos:start="15:24" pos:end="15:43">altivec_idct_put_num</name></expr></argument>, <argument pos:start="15:46" pos:end="15:46"><expr pos:start="15:46" pos:end="15:46"><literal type="number" pos:start="15:46" pos:end="15:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="17:1" pos:end="17:5">#<cpp:directive pos:start="17:2" pos:end="17:5">else</cpp:directive></cpp:else> <comment type="block" pos:start="17:7" pos:end="17:40">/* ALTIVEC_USE_REFERENCE_C_CODE */</comment>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:15">vector_u8_t</name></type> <name pos:start="19:17" pos:end="19:19">tmp</name></decl>;</decl_stmt>



<expr_stmt pos:start="23:1" pos:end="23:49"><expr pos:start="23:1" pos:end="23:48"><call pos:start="23:1" pos:end="23:48"><name pos:start="23:1" pos:end="23:23">POWERPC_TBL_START_COUNT</name><argument_list pos:start="23:24" pos:end="23:48">(<argument pos:start="23:25" pos:end="23:44"><expr pos:start="23:25" pos:end="23:44"><name pos:start="23:25" pos:end="23:44">altivec_idct_put_num</name></expr></argument>, <argument pos:start="23:47" pos:end="23:47"><expr pos:start="23:47" pos:end="23:47"><literal type="number" pos:start="23:47" pos:end="23:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <decl_stmt pos:start="27:5" pos:end="41:39"><decl pos:start="27:5" pos:end="41:38"><type pos:start="27:5" pos:end="38:0"><name pos:start="27:5" pos:end="38:0">IDCT</name></type>



<cpp:define pos:start="31:1" pos:end="37:57">#<cpp:directive pos:start="31:2" pos:end="31:7">define</cpp:directive> <cpp:macro pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:12">COPY</name><parameter_list pos:start="31:13" pos:end="31:22">(<parameter pos:start="31:14" pos:end="31:17"><type pos:start="31:14" pos:end="31:17"><name pos:start="31:14" pos:end="31:17">dest</name></type></parameter>,<parameter pos:start="31:19" pos:end="31:21"><type pos:start="31:19" pos:end="31:21"><name pos:start="31:19" pos:end="31:21">src</name></type></parameter>)</parameter_list></cpp:macro>						\

    <cpp:value pos:start="33:5" pos:end="37:57">tmp = vec_packsu (src, src);				\

    vec_ste ((vector_u32_t)tmp, 0, (unsigned int *)dest);	\

    vec_ste ((vector_u32_t)tmp, 4, (unsigned int *)dest);</cpp:value></cpp:define>



    <name pos:start="41:5" pos:end="41:8">COPY</name> <argument_list pos:start="41:10" pos:end="41:20">(<argument pos:start="41:11" pos:end="41:14"><expr pos:start="41:11" pos:end="41:14"><name pos:start="41:11" pos:end="41:14">dest</name></expr></argument>, <argument pos:start="41:17" pos:end="41:19"><expr pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:19">vx0</name></expr></argument>)</argument_list>	<name pos:start="41:25" pos:end="41:28">dest</name> += <name pos:start="41:33" pos:end="41:38">stride</name></decl>;</decl_stmt>

    <macro pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:8">COPY</name> <argument_list pos:start="43:10" pos:end="43:20">(<argument pos:start="43:11" pos:end="43:14">dest</argument>, <argument pos:start="43:17" pos:end="43:19">vx1</argument>)</argument_list></macro>	<expr_stmt pos:start="43:25" pos:end="43:39"><expr pos:start="43:25" pos:end="43:38"><name pos:start="43:25" pos:end="43:28">dest</name> <operator pos:start="43:30" pos:end="43:31">+=</operator> <name pos:start="43:33" pos:end="43:38">stride</name></expr>;</expr_stmt>

    <macro pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:8">COPY</name> <argument_list pos:start="45:10" pos:end="45:20">(<argument pos:start="45:11" pos:end="45:14">dest</argument>, <argument pos:start="45:17" pos:end="45:19">vx2</argument>)</argument_list></macro>	<expr_stmt pos:start="45:25" pos:end="45:39"><expr pos:start="45:25" pos:end="45:38"><name pos:start="45:25" pos:end="45:28">dest</name> <operator pos:start="45:30" pos:end="45:31">+=</operator> <name pos:start="45:33" pos:end="45:38">stride</name></expr>;</expr_stmt>

    <macro pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:8">COPY</name> <argument_list pos:start="47:10" pos:end="47:20">(<argument pos:start="47:11" pos:end="47:14">dest</argument>, <argument pos:start="47:17" pos:end="47:19">vx3</argument>)</argument_list></macro>	<expr_stmt pos:start="47:25" pos:end="47:39"><expr pos:start="47:25" pos:end="47:38"><name pos:start="47:25" pos:end="47:28">dest</name> <operator pos:start="47:30" pos:end="47:31">+=</operator> <name pos:start="47:33" pos:end="47:38">stride</name></expr>;</expr_stmt>

    <macro pos:start="49:5" pos:end="49:20"><name pos:start="49:5" pos:end="49:8">COPY</name> <argument_list pos:start="49:10" pos:end="49:20">(<argument pos:start="49:11" pos:end="49:14">dest</argument>, <argument pos:start="49:17" pos:end="49:19">vx4</argument>)</argument_list></macro>	<expr_stmt pos:start="49:25" pos:end="49:39"><expr pos:start="49:25" pos:end="49:38"><name pos:start="49:25" pos:end="49:28">dest</name> <operator pos:start="49:30" pos:end="49:31">+=</operator> <name pos:start="49:33" pos:end="49:38">stride</name></expr>;</expr_stmt>

    <macro pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:8">COPY</name> <argument_list pos:start="51:10" pos:end="51:20">(<argument pos:start="51:11" pos:end="51:14">dest</argument>, <argument pos:start="51:17" pos:end="51:19">vx5</argument>)</argument_list></macro>	<expr_stmt pos:start="51:25" pos:end="51:39"><expr pos:start="51:25" pos:end="51:38"><name pos:start="51:25" pos:end="51:28">dest</name> <operator pos:start="51:30" pos:end="51:31">+=</operator> <name pos:start="51:33" pos:end="51:38">stride</name></expr>;</expr_stmt>

    <macro pos:start="53:5" pos:end="53:20"><name pos:start="53:5" pos:end="53:8">COPY</name> <argument_list pos:start="53:10" pos:end="53:20">(<argument pos:start="53:11" pos:end="53:14">dest</argument>, <argument pos:start="53:17" pos:end="53:19">vx6</argument>)</argument_list></macro>	<expr_stmt pos:start="53:25" pos:end="53:39"><expr pos:start="53:25" pos:end="53:38"><name pos:start="53:25" pos:end="53:28">dest</name> <operator pos:start="53:30" pos:end="53:31">+=</operator> <name pos:start="53:33" pos:end="53:38">stride</name></expr>;</expr_stmt>

    <macro pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:8">COPY</name> <argument_list pos:start="55:10" pos:end="55:20">(<argument pos:start="55:11" pos:end="55:14">dest</argument>, <argument pos:start="55:17" pos:end="55:19">vx7</argument>)</argument_list></macro>



<expr_stmt pos:start="59:1" pos:end="62:0"><expr pos:start="59:1" pos:end="59:47"><call pos:start="59:1" pos:end="59:47"><name pos:start="59:1" pos:end="59:22">POWERPC_TBL_STOP_COUNT</name><argument_list pos:start="59:23" pos:end="59:47">(<argument pos:start="59:24" pos:end="59:43"><expr pos:start="59:24" pos:end="59:43"><name pos:start="59:24" pos:end="59:43">altivec_idct_put_num</name></expr></argument>, <argument pos:start="59:46" pos:end="59:46"><expr pos:start="59:46" pos:end="59:46"><literal type="number" pos:start="59:46" pos:end="59:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="61:1" pos:end="61:6">#<cpp:directive pos:start="61:2" pos:end="61:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="61:8" pos:end="61:41">/* ALTIVEC_USE_REFERENCE_C_CODE */</comment>

</block_content>}</block></function>
</unit>
