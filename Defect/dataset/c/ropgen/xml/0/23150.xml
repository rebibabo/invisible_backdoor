<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23150.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">pxa2xx_gpio_set</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:50"><decl pos:start="1:43" pos:end="1:50"><type pos:start="1:43" pos:end="1:50"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:50">line</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:61"><decl pos:start="1:53" pos:end="1:61"><type pos:start="1:53" pos:end="1:61"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:61">level</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:5">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">PXA2xxGPIOInfo</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:49">= <expr pos:start="5:25" pos:end="5:49"><operator pos:start="5:25" pos:end="5:25">(</operator><name pos:start="5:26" pos:end="5:39">PXA2xxGPIOInfo</name> <operator pos:start="5:41" pos:end="5:41">*</operator><operator pos:start="5:42" pos:end="5:42">)</operator> <name pos:start="5:44" pos:end="5:49">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:17">cpu</name> <init pos:start="7:19" pos:end="7:31">= <expr pos:start="7:21" pos:end="7:31"><call pos:start="7:21" pos:end="7:31"><name pos:start="7:21" pos:end="7:23">CPU</name><argument_list pos:start="7:24" pos:end="7:31">(<argument pos:start="7:25" pos:end="7:30"><expr pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:30">cpu</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">bank</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:17">mask</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:25">(<expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:12">line</name> <operator pos:start="15:14" pos:end="15:15">&gt;=</operator> <name pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:17">s</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:24">lines</name></name></expr>)</condition> <block pos:start="15:27" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <expr_stmt pos:start="17:9" pos:end="17:59"><expr pos:start="17:9" pos:end="17:58"><call pos:start="17:9" pos:end="17:58"><name pos:start="17:9" pos:end="17:14">printf</name><argument_list pos:start="17:15" pos:end="17:58">(<argument pos:start="17:16" pos:end="17:37"><expr pos:start="17:16" pos:end="17:37"><literal type="string" pos:start="17:16" pos:end="17:37">"%s: No GPIO pin %i\n"</literal></expr></argument>, <argument pos:start="17:40" pos:end="17:51"><expr pos:start="17:40" pos:end="17:51"><name pos:start="17:40" pos:end="17:51">__FUNCTION__</name></expr></argument>, <argument pos:start="17:54" pos:end="17:57"><expr pos:start="17:54" pos:end="17:57"><name pos:start="17:54" pos:end="17:57">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:8">bank</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <name pos:start="25:12" pos:end="25:15">line</name> <operator pos:start="25:17" pos:end="25:18">&gt;&gt;</operator> <literal type="number" pos:start="25:20" pos:end="25:20">5</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:8">mask</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <literal type="number" pos:start="27:12" pos:end="27:13">1U</literal> <operator pos:start="27:15" pos:end="27:16">&lt;&lt;</operator> <operator pos:start="27:18" pos:end="27:18">(</operator><name pos:start="27:19" pos:end="27:22">line</name> <operator pos:start="27:24" pos:end="27:24">&amp;</operator> <literal type="number" pos:start="27:26" pos:end="27:27">31</literal><operator pos:start="27:28" pos:end="27:28">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="47:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:14">(<expr pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:13">level</name></expr>)</condition> <block pos:start="31:16" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:32">

        <expr_stmt pos:start="33:9" pos:end="35:49"><expr pos:start="33:9" pos:end="35:48"><name pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:17">status</name><index pos:start="33:18" pos:end="33:23">[<expr pos:start="33:19" pos:end="33:22"><name pos:start="33:19" pos:end="33:22">bank</name></expr>]</index></name> <operator pos:start="33:25" pos:end="33:26">|=</operator> <name pos:start="33:28" pos:end="33:42"><name pos:start="33:28" pos:end="33:28">s</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:36">rising</name><index pos:start="33:37" pos:end="33:42">[<expr pos:start="33:38" pos:end="33:41"><name pos:start="33:38" pos:end="33:41">bank</name></expr>]</index></name> <operator pos:start="33:44" pos:end="33:44">&amp;</operator> <name pos:start="33:46" pos:end="33:49">mask</name> <operator pos:start="33:51" pos:end="33:51">&amp;</operator>

                <operator pos:start="35:17" pos:end="35:17">~</operator><name pos:start="35:18" pos:end="35:32"><name pos:start="35:18" pos:end="35:18">s</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:26">ilevel</name><index pos:start="35:27" pos:end="35:32">[<expr pos:start="35:28" pos:end="35:31"><name pos:start="35:28" pos:end="35:31">bank</name></expr>]</index></name> <operator pos:start="35:34" pos:end="35:34">&amp;</operator> <operator pos:start="35:36" pos:end="35:36">~</operator><name pos:start="35:37" pos:end="35:48"><name pos:start="35:37" pos:end="35:37">s</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:42">dir</name><index pos:start="35:43" pos:end="35:48">[<expr pos:start="35:44" pos:end="35:47"><name pos:start="35:44" pos:end="35:47">bank</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:17">ilevel</name><index pos:start="37:18" pos:end="37:23">[<expr pos:start="37:19" pos:end="37:22"><name pos:start="37:19" pos:end="37:22">bank</name></expr>]</index></name> <operator pos:start="37:25" pos:end="37:26">|=</operator> <name pos:start="37:28" pos:end="37:31">mask</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="47:5">else <block pos:start="39:12" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:33">

        <expr_stmt pos:start="41:9" pos:end="43:48"><expr pos:start="41:9" pos:end="43:47"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:17">status</name><index pos:start="41:18" pos:end="41:23">[<expr pos:start="41:19" pos:end="41:22"><name pos:start="41:19" pos:end="41:22">bank</name></expr>]</index></name> <operator pos:start="41:25" pos:end="41:26">|=</operator> <name pos:start="41:28" pos:end="41:43"><name pos:start="41:28" pos:end="41:28">s</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:37">falling</name><index pos:start="41:38" pos:end="41:43">[<expr pos:start="41:39" pos:end="41:42"><name pos:start="41:39" pos:end="41:42">bank</name></expr>]</index></name> <operator pos:start="41:45" pos:end="41:45">&amp;</operator> <name pos:start="41:47" pos:end="41:50">mask</name> <operator pos:start="41:52" pos:end="41:52">&amp;</operator>

                <name pos:start="43:17" pos:end="43:31"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:25">ilevel</name><index pos:start="43:26" pos:end="43:31">[<expr pos:start="43:27" pos:end="43:30"><name pos:start="43:27" pos:end="43:30">bank</name></expr>]</index></name> <operator pos:start="43:33" pos:end="43:33">&amp;</operator> <operator pos:start="43:35" pos:end="43:35">~</operator><name pos:start="43:36" pos:end="43:47"><name pos:start="43:36" pos:end="43:36">s</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:41">dir</name><index pos:start="43:42" pos:end="43:47">[<expr pos:start="43:43" pos:end="43:46"><name pos:start="43:43" pos:end="43:46">bank</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:33"><expr pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:17">ilevel</name><index pos:start="45:18" pos:end="45:23">[<expr pos:start="45:19" pos:end="45:22"><name pos:start="45:19" pos:end="45:22">bank</name></expr>]</index></name> <operator pos:start="45:25" pos:end="45:26">&amp;=</operator> <operator pos:start="45:28" pos:end="45:28">~</operator><name pos:start="45:29" pos:end="45:32">mask</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="51:5" pos:end="53:34"><if pos:start="51:5" pos:end="53:34">if <condition pos:start="51:8" pos:end="51:31">(<expr pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:17">status</name><index pos:start="51:18" pos:end="51:23">[<expr pos:start="51:19" pos:end="51:22"><name pos:start="51:19" pos:end="51:22">bank</name></expr>]</index></name> <operator pos:start="51:25" pos:end="51:25">&amp;</operator> <name pos:start="51:27" pos:end="51:30">mask</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:34"><block_content pos:start="53:9" pos:end="53:34">

        <expr_stmt pos:start="53:9" pos:end="53:34"><expr pos:start="53:9" pos:end="53:33"><call pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:30">pxa2xx_gpio_irq_update</name><argument_list pos:start="53:31" pos:end="53:33">(<argument pos:start="53:32" pos:end="53:32"><expr pos:start="53:32" pos:end="53:32"><name pos:start="53:32" pos:end="53:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:23">/* Wake-up GPIOs */</comment>

    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:71">(<expr pos:start="59:9" pos:end="59:70"><name pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:11">cpu</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:19">halted</name></name> <operator pos:start="59:21" pos:end="59:22">&amp;&amp;</operator> <operator pos:start="59:24" pos:end="59:24">(</operator><name pos:start="59:25" pos:end="59:28">mask</name> <operator pos:start="59:30" pos:end="59:30">&amp;</operator> <operator pos:start="59:32" pos:end="59:32">~</operator><name pos:start="59:33" pos:end="59:44"><name pos:start="59:33" pos:end="59:33">s</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:38">dir</name><index pos:start="59:39" pos:end="59:44">[<expr pos:start="59:40" pos:end="59:43"><name pos:start="59:40" pos:end="59:43">bank</name></expr>]</index></name> <operator pos:start="59:46" pos:end="59:46">&amp;</operator> <name pos:start="59:48" pos:end="59:69"><name pos:start="59:48" pos:end="59:63">pxa2xx_gpio_wake</name><index pos:start="59:64" pos:end="59:69">[<expr pos:start="59:65" pos:end="59:68"><name pos:start="59:65" pos:end="59:68">bank</name></expr>]</index></name><operator pos:start="59:70" pos:end="59:70">)</operator></expr>)</condition> <block pos:start="59:73" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:49">

        <expr_stmt pos:start="61:9" pos:end="61:49"><expr pos:start="61:9" pos:end="61:48"><call pos:start="61:9" pos:end="61:48"><name pos:start="61:9" pos:end="61:21">cpu_interrupt</name><argument_list pos:start="61:22" pos:end="61:48">(<argument pos:start="61:23" pos:end="61:25"><expr pos:start="61:23" pos:end="61:25"><name pos:start="61:23" pos:end="61:25">cpu</name></expr></argument>, <argument pos:start="61:28" pos:end="61:47"><expr pos:start="61:28" pos:end="61:47"><name pos:start="61:28" pos:end="61:47">CPU_INTERRUPT_EXITTB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
