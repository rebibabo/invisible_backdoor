<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1229.c" pos:tabs="8"><function pos:start="1:1" pos:end="185:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:34">get_cluster_offset</name><parameter_list pos:start="1:35" pos:end="7:66">(<parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:55"><name pos:start="1:36" pos:end="1:51">BlockDriverState</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">bs</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:54"><decl pos:start="3:37" pos:end="3:54"><type pos:start="3:37" pos:end="3:54"><name pos:start="3:37" pos:end="3:46">VmdkExtent</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:54">extent</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:56"><decl pos:start="5:37" pos:end="5:56"><type pos:start="5:37" pos:end="5:56"><name pos:start="5:37" pos:end="5:48">VmdkMetaData</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:56">m_data</name></decl></parameter>,

                                    <parameter pos:start="7:37" pos:end="7:51"><decl pos:start="7:37" pos:end="7:51"><type pos:start="7:37" pos:end="7:51"><name pos:start="7:37" pos:end="7:44">uint64_t</name></type> <name pos:start="7:46" pos:end="7:51">offset</name></decl></parameter>, <parameter pos:start="7:54" pos:end="7:65"><decl pos:start="7:54" pos:end="7:65"><type pos:start="7:54" pos:end="7:65"><name pos:start="7:54" pos:end="7:56">int</name></type> <name pos:start="7:58" pos:end="7:65">allocate</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="185:1">{<block_content pos:start="11:5" pos:end="183:26">

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:25">l1_index</name></decl>, <decl pos:start="11:28" pos:end="11:36"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:28" pos:end="11:36">l2_offset</name></decl>, <decl pos:start="11:39" pos:end="11:46"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:39" pos:end="11:46">l2_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">min_index</name></decl>, <decl pos:start="13:20" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:20">i</name></decl>, <decl pos:start="13:23" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:23" pos:end="13:23">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:43"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:22">min_count</name></decl>, <decl pos:start="15:25" pos:end="15:33"><type ref="prev" pos:start="15:5" pos:end="15:12"><modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:33">l2_table</name></decl>, <decl pos:start="15:36" pos:end="15:42"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:36" pos:end="15:38">tmp</name> <init pos:start="15:40" pos:end="15:42">= <expr pos:start="15:42" pos:end="15:42"><literal type="number" pos:start="15:42" pos:end="15:42">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:27">cluster_offset</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:26"><if pos:start="21:5" pos:end="23:26">if <condition pos:start="21:8" pos:end="21:15">(<expr pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:14">m_data</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:26"><block_content pos:start="23:9" pos:end="23:26">

        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:14">m_data</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:21">valid</name></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <literal type="number" pos:start="23:25" pos:end="23:25">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:56"><expr pos:start="27:5" pos:end="27:55"><name pos:start="27:5" pos:end="27:12">l1_index</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <operator pos:start="27:16" pos:end="27:16">(</operator><name pos:start="27:17" pos:end="27:22">offset</name> <operator pos:start="27:24" pos:end="27:25">&gt;&gt;</operator> <literal type="number" pos:start="27:27" pos:end="27:27">9</literal><operator pos:start="27:28" pos:end="27:28">)</operator> <operator pos:start="27:30" pos:end="27:30">/</operator> <name pos:start="27:32" pos:end="27:55"><name pos:start="27:32" pos:end="27:37">extent</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:55">l1_entry_sectors</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:36">(<expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:16">l1_index</name> <operator pos:start="29:18" pos:end="29:19">&gt;=</operator> <name pos:start="29:21" pos:end="29:35"><name pos:start="29:21" pos:end="29:26">extent</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:35">l1_size</name></name></expr>)</condition> <block pos:start="29:38" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:17">

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:43"><expr pos:start="35:5" pos:end="35:42"><name pos:start="35:5" pos:end="35:13">l2_offset</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:42"><name pos:start="35:17" pos:end="35:22">extent</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:32">l1_table</name><index pos:start="35:33" pos:end="35:42">[<expr pos:start="35:34" pos:end="35:41"><name pos:start="35:34" pos:end="35:41">l1_index</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:19">(<expr pos:start="37:9" pos:end="37:18"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:18">l2_offset</name></expr>)</condition> <block pos:start="37:21" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:17">

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="43:5" pos:end="65:5">for <control pos:start="43:9" pos:end="43:39">(<init pos:start="43:10" pos:end="43:15"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">i</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:34"><expr pos:start="43:17" pos:end="43:33"><name pos:start="43:17" pos:end="43:17">i</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <name pos:start="43:21" pos:end="43:33">L2_CACHE_SIZE</name></expr>;</condition> <incr pos:start="43:36" pos:end="43:38"><expr pos:start="43:36" pos:end="43:38"><name pos:start="43:36" pos:end="43:36">i</name><operator pos:start="43:37" pos:end="43:38">++</operator></expr></incr>)</control> <block pos:start="43:41" pos:end="65:5">{<block_content pos:start="45:9" pos:end="63:9">

        <if_stmt pos:start="45:9" pos:end="63:9"><if pos:start="45:9" pos:end="63:9">if <condition pos:start="45:12" pos:end="45:53">(<expr pos:start="45:13" pos:end="45:52"><name pos:start="45:13" pos:end="45:21">l2_offset</name> <operator pos:start="45:23" pos:end="45:24">==</operator> <name pos:start="45:26" pos:end="45:52"><name pos:start="45:26" pos:end="45:31">extent</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:49">l2_cache_offsets</name><index pos:start="45:50" pos:end="45:52">[<expr pos:start="45:51" pos:end="45:51"><name pos:start="45:51" pos:end="45:51">i</name></expr>]</index></name></expr>)</condition> <block pos:start="45:55" pos:end="63:9">{<block_content pos:start="49:13" pos:end="61:23">

            <comment type="block" pos:start="47:13" pos:end="47:41">/* increment the hit count */</comment>

            <if_stmt pos:start="49:13" pos:end="57:13"><if pos:start="49:13" pos:end="57:13">if <condition pos:start="49:16" pos:end="49:59">(<expr pos:start="49:17" pos:end="49:58"><operator pos:start="49:17" pos:end="49:18">++</operator><name pos:start="49:19" pos:end="49:44"><name pos:start="49:19" pos:end="49:24">extent</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:41">l2_cache_counts</name><index pos:start="49:42" pos:end="49:44">[<expr pos:start="49:43" pos:end="49:43"><name pos:start="49:43" pos:end="49:43">i</name></expr>]</index></name> <operator pos:start="49:46" pos:end="49:47">==</operator> <literal type="number" pos:start="49:49" pos:end="49:58">0xffffffff</literal></expr>)</condition> <block pos:start="49:61" pos:end="57:13">{<block_content pos:start="51:17" pos:end="55:17">

                <for pos:start="51:17" pos:end="55:17">for <control pos:start="51:21" pos:end="51:51">(<init pos:start="51:22" pos:end="51:27"><expr pos:start="51:22" pos:end="51:26"><name pos:start="51:22" pos:end="51:22">j</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <literal type="number" pos:start="51:26" pos:end="51:26">0</literal></expr>;</init> <condition pos:start="51:29" pos:end="51:46"><expr pos:start="51:29" pos:end="51:45"><name pos:start="51:29" pos:end="51:29">j</name> <operator pos:start="51:31" pos:end="51:31">&lt;</operator> <name pos:start="51:33" pos:end="51:45">L2_CACHE_SIZE</name></expr>;</condition> <incr pos:start="51:48" pos:end="51:50"><expr pos:start="51:48" pos:end="51:50"><name pos:start="51:48" pos:end="51:48">j</name><operator pos:start="51:49" pos:end="51:50">++</operator></expr></incr>)</control> <block pos:start="51:53" pos:end="55:17">{<block_content pos:start="53:21" pos:end="53:53">

                    <expr_stmt pos:start="53:21" pos:end="53:53"><expr pos:start="53:21" pos:end="53:52"><name pos:start="53:21" pos:end="53:46"><name pos:start="53:21" pos:end="53:26">extent</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:43">l2_cache_counts</name><index pos:start="53:44" pos:end="53:46">[<expr pos:start="53:45" pos:end="53:45"><name pos:start="53:45" pos:end="53:45">j</name></expr>]</index></name> <operator pos:start="53:48" pos:end="53:50">&gt;&gt;=</operator> <literal type="number" pos:start="53:52" pos:end="53:52">1</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:64"><expr pos:start="59:13" pos:end="59:63"><name pos:start="59:13" pos:end="59:20">l2_table</name> <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:39"><name pos:start="59:24" pos:end="59:29">extent</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:39">l2_cache</name></name> <operator pos:start="59:41" pos:end="59:41">+</operator> <operator pos:start="59:43" pos:end="59:43">(</operator><name pos:start="59:44" pos:end="59:44">i</name> <operator pos:start="59:46" pos:end="59:46">*</operator> <name pos:start="59:48" pos:end="59:62"><name pos:start="59:48" pos:end="59:53">extent</name><operator pos:start="59:54" pos:end="59:55">-&gt;</operator><name pos:start="59:56" pos:end="59:62">l2_size</name></name><operator pos:start="59:63" pos:end="59:63">)</operator></expr>;</expr_stmt>

            <goto pos:start="61:13" pos:end="61:23">goto <name pos:start="61:18" pos:end="61:22">found</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="67:5" pos:end="67:59">/* not found: load a new entry in the least used one */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:18"><expr pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:13">min_index</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <literal type="number" pos:start="69:17" pos:end="69:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:27"><expr pos:start="71:5" pos:end="71:26"><name pos:start="71:5" pos:end="71:13">min_count</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <literal type="number" pos:start="71:17" pos:end="71:26">0xffffffff</literal></expr>;</expr_stmt>

    <for pos:start="73:5" pos:end="83:5">for <control pos:start="73:9" pos:end="73:39">(<init pos:start="73:10" pos:end="73:15"><expr pos:start="73:10" pos:end="73:14"><name pos:start="73:10" pos:end="73:10">i</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>;</init> <condition pos:start="73:17" pos:end="73:34"><expr pos:start="73:17" pos:end="73:33"><name pos:start="73:17" pos:end="73:17">i</name> <operator pos:start="73:19" pos:end="73:19">&lt;</operator> <name pos:start="73:21" pos:end="73:33">L2_CACHE_SIZE</name></expr>;</condition> <incr pos:start="73:36" pos:end="73:38"><expr pos:start="73:36" pos:end="73:38"><name pos:start="73:36" pos:end="73:36">i</name><operator pos:start="73:37" pos:end="73:38">++</operator></expr></incr>)</control> <block pos:start="73:41" pos:end="83:5">{<block_content pos:start="75:9" pos:end="81:9">

        <if_stmt pos:start="75:9" pos:end="81:9"><if pos:start="75:9" pos:end="81:9">if <condition pos:start="75:12" pos:end="75:51">(<expr pos:start="75:13" pos:end="75:50"><name pos:start="75:13" pos:end="75:38"><name pos:start="75:13" pos:end="75:18">extent</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:35">l2_cache_counts</name><index pos:start="75:36" pos:end="75:38">[<expr pos:start="75:37" pos:end="75:37"><name pos:start="75:37" pos:end="75:37">i</name></expr>]</index></name> <operator pos:start="75:40" pos:end="75:40">&lt;</operator> <name pos:start="75:42" pos:end="75:50">min_count</name></expr>)</condition> <block pos:start="75:53" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:26">

            <expr_stmt pos:start="77:13" pos:end="77:51"><expr pos:start="77:13" pos:end="77:50"><name pos:start="77:13" pos:end="77:21">min_count</name> <operator pos:start="77:23" pos:end="77:23">=</operator> <name pos:start="77:25" pos:end="77:50"><name pos:start="77:25" pos:end="77:30">extent</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:47">l2_cache_counts</name><index pos:start="77:48" pos:end="77:50">[<expr pos:start="77:49" pos:end="77:49"><name pos:start="77:49" pos:end="77:49">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:26"><expr pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:21">min_index</name> <operator pos:start="79:23" pos:end="79:23">=</operator> <name pos:start="79:25" pos:end="79:25">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="85:5" pos:end="85:64"><expr pos:start="85:5" pos:end="85:63"><name pos:start="85:5" pos:end="85:12">l2_table</name> <operator pos:start="85:14" pos:end="85:14">=</operator> <name pos:start="85:16" pos:end="85:31"><name pos:start="85:16" pos:end="85:21">extent</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:31">l2_cache</name></name> <operator pos:start="85:33" pos:end="85:33">+</operator> <operator pos:start="85:35" pos:end="85:35">(</operator><name pos:start="85:36" pos:end="85:44">min_index</name> <operator pos:start="85:46" pos:end="85:46">*</operator> <name pos:start="85:48" pos:end="85:62"><name pos:start="85:48" pos:end="85:53">extent</name><operator pos:start="85:54" pos:end="85:55">-&gt;</operator><name pos:start="85:56" pos:end="85:62">l2_size</name></name><operator pos:start="85:63" pos:end="85:63">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="101:5"><if pos:start="87:5" pos:end="101:5">if <condition pos:start="87:8" pos:end="97:52">(<expr pos:start="87:9" pos:end="97:51"><call pos:start="87:9" pos:end="97:13"><name pos:start="87:9" pos:end="87:18">bdrv_pread</name><argument_list pos:start="87:19" pos:end="97:13">(

                <argument pos:start="89:17" pos:end="89:28"><expr pos:start="89:17" pos:end="89:28"><name pos:start="89:17" pos:end="89:28"><name pos:start="89:17" pos:end="89:22">extent</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:28">file</name></name></expr></argument>,

                <argument pos:start="91:17" pos:end="91:40"><expr pos:start="91:17" pos:end="91:40"><operator pos:start="91:17" pos:end="91:17">(</operator><name pos:start="91:18" pos:end="91:24">int64_t</name><operator pos:start="91:25" pos:end="91:25">)</operator><name pos:start="91:26" pos:end="91:34">l2_offset</name> <operator pos:start="91:36" pos:end="91:36">*</operator> <literal type="number" pos:start="91:38" pos:end="91:40">512</literal></expr></argument>,

                <argument pos:start="93:17" pos:end="93:24"><expr pos:start="93:17" pos:end="93:24"><name pos:start="93:17" pos:end="93:24">l2_table</name></expr></argument>,

                <argument pos:start="95:17" pos:end="95:50"><expr pos:start="95:17" pos:end="95:50"><name pos:start="95:17" pos:end="95:31"><name pos:start="95:17" pos:end="95:22">extent</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:31">l2_size</name></name> <operator pos:start="95:33" pos:end="95:33">*</operator> <sizeof pos:start="95:35" pos:end="95:50">sizeof<argument_list pos:start="95:41" pos:end="95:50">(<argument pos:start="95:42" pos:end="95:49"><expr pos:start="95:42" pos:end="95:49"><name pos:start="95:42" pos:end="95:49">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>

            )</argument_list></call> <operator pos:start="97:15" pos:end="97:16">!=</operator> <name pos:start="97:18" pos:end="97:32"><name pos:start="97:18" pos:end="97:23">extent</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:32">l2_size</name></name> <operator pos:start="97:34" pos:end="97:34">*</operator> <sizeof pos:start="97:36" pos:end="97:51">sizeof<argument_list pos:start="97:42" pos:end="97:51">(<argument pos:start="97:43" pos:end="97:50"><expr pos:start="97:43" pos:end="97:50"><name pos:start="97:43" pos:end="97:50">uint32_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="97:54" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:17">

        <return pos:start="99:9" pos:end="99:17">return <expr pos:start="99:16" pos:end="99:16"><literal type="number" pos:start="99:16" pos:end="99:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:52"><expr pos:start="105:5" pos:end="105:51"><name pos:start="105:5" pos:end="105:39"><name pos:start="105:5" pos:end="105:10">extent</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:28">l2_cache_offsets</name><index pos:start="105:29" pos:end="105:39">[<expr pos:start="105:30" pos:end="105:38"><name pos:start="105:30" pos:end="105:38">min_index</name></expr>]</index></name> <operator pos:start="105:41" pos:end="105:41">=</operator> <name pos:start="105:43" pos:end="105:51">l2_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:43"><expr pos:start="107:5" pos:end="107:42"><name pos:start="107:5" pos:end="107:38"><name pos:start="107:5" pos:end="107:10">extent</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:27">l2_cache_counts</name><index pos:start="107:28" pos:end="107:38">[<expr pos:start="107:29" pos:end="107:37"><name pos:start="107:29" pos:end="107:37">min_index</name></expr>]</index></name> <operator pos:start="107:40" pos:end="107:40">=</operator> <literal type="number" pos:start="107:42" pos:end="107:42">1</literal></expr>;</expr_stmt>

 <label pos:start="109:2" pos:end="109:7"><name pos:start="109:2" pos:end="109:6">found</name>:</label>

    <expr_stmt pos:start="111:5" pos:end="111:75"><expr pos:start="111:5" pos:end="111:74"><name pos:start="111:5" pos:end="111:12">l2_index</name> <operator pos:start="111:14" pos:end="111:14">=</operator> <operator pos:start="111:16" pos:end="111:16">(</operator><operator pos:start="111:17" pos:end="111:17">(</operator><name pos:start="111:18" pos:end="111:23">offset</name> <operator pos:start="111:25" pos:end="111:26">&gt;&gt;</operator> <literal type="number" pos:start="111:28" pos:end="111:28">9</literal><operator pos:start="111:29" pos:end="111:29">)</operator> <operator pos:start="111:31" pos:end="111:31">/</operator> <name pos:start="111:33" pos:end="111:55"><name pos:start="111:33" pos:end="111:38">extent</name><operator pos:start="111:39" pos:end="111:40">-&gt;</operator><name pos:start="111:41" pos:end="111:55">cluster_sectors</name></name><operator pos:start="111:56" pos:end="111:56">)</operator> <operator pos:start="111:58" pos:end="111:58">%</operator> <name pos:start="111:60" pos:end="111:74"><name pos:start="111:60" pos:end="111:65">extent</name><operator pos:start="111:66" pos:end="111:67">-&gt;</operator><name pos:start="111:68" pos:end="111:74">l2_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:53"><expr pos:start="113:5" pos:end="113:52"><name pos:start="113:5" pos:end="113:18">cluster_offset</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <call pos:start="113:22" pos:end="113:52"><name pos:start="113:22" pos:end="113:32">le32_to_cpu</name><argument_list pos:start="113:33" pos:end="113:52">(<argument pos:start="113:34" pos:end="113:51"><expr pos:start="113:34" pos:end="113:51"><name pos:start="113:34" pos:end="113:51"><name pos:start="113:34" pos:end="113:41">l2_table</name><index pos:start="113:42" pos:end="113:51">[<expr pos:start="113:43" pos:end="113:50"><name pos:start="113:43" pos:end="113:50">l2_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="117:5" pos:end="179:5"><if pos:start="117:5" pos:end="179:5">if <condition pos:start="117:8" pos:end="117:24">(<expr pos:start="117:9" pos:end="117:23"><operator pos:start="117:9" pos:end="117:9">!</operator><name pos:start="117:10" pos:end="117:23">cluster_offset</name></expr>)</condition> <block pos:start="117:26" pos:end="179:5">{<block_content pos:start="119:9" pos:end="177:9">

        <if_stmt pos:start="119:9" pos:end="121:21"><if pos:start="119:9" pos:end="121:21">if <condition pos:start="119:12" pos:end="119:22">(<expr pos:start="119:13" pos:end="119:21"><operator pos:start="119:13" pos:end="119:13">!</operator><name pos:start="119:14" pos:end="119:21">allocate</name></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:21"><block_content pos:start="121:13" pos:end="121:21">

            <return pos:start="121:13" pos:end="121:21">return <expr pos:start="121:20" pos:end="121:20"><literal type="number" pos:start="121:20" pos:end="121:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <comment type="line" pos:start="125:9" pos:end="125:73">// Avoid the L2 tables update for the images that have snapshots.</comment>

        <expr_stmt pos:start="127:9" pos:end="127:54"><expr pos:start="127:9" pos:end="127:53"><name pos:start="127:9" pos:end="127:22">cluster_offset</name> <operator pos:start="127:24" pos:end="127:24">=</operator> <call pos:start="127:26" pos:end="127:53"><name pos:start="127:26" pos:end="127:39">bdrv_getlength</name><argument_list pos:start="127:40" pos:end="127:53">(<argument pos:start="127:41" pos:end="127:52"><expr pos:start="127:41" pos:end="127:52"><name pos:start="127:41" pos:end="127:52"><name pos:start="127:41" pos:end="127:46">extent</name><operator pos:start="127:47" pos:end="127:48">-&gt;</operator><name pos:start="127:49" pos:end="127:52">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="135:10"><expr pos:start="129:9" pos:end="135:9"><call pos:start="129:9" pos:end="135:9"><name pos:start="129:9" pos:end="129:21">bdrv_truncate</name><argument_list pos:start="129:22" pos:end="135:9">(

            <argument pos:start="131:13" pos:end="131:24"><expr pos:start="131:13" pos:end="131:24"><name pos:start="131:13" pos:end="131:24"><name pos:start="131:13" pos:end="131:18">extent</name><operator pos:start="131:19" pos:end="131:20">-&gt;</operator><name pos:start="131:21" pos:end="131:24">file</name></name></expr></argument>,

            <argument pos:start="133:13" pos:end="133:59"><expr pos:start="133:13" pos:end="133:59"><name pos:start="133:13" pos:end="133:26">cluster_offset</name> <operator pos:start="133:28" pos:end="133:28">+</operator> <operator pos:start="133:30" pos:end="133:30">(</operator><name pos:start="133:31" pos:end="133:53"><name pos:start="133:31" pos:end="133:36">extent</name><operator pos:start="133:37" pos:end="133:38">-&gt;</operator><name pos:start="133:39" pos:end="133:53">cluster_sectors</name></name> <operator pos:start="133:55" pos:end="133:56">&lt;&lt;</operator> <literal type="number" pos:start="133:58" pos:end="133:58">9</literal><operator pos:start="133:59" pos:end="133:59">)</operator></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="139:9" pos:end="139:29"><expr pos:start="139:9" pos:end="139:28"><name pos:start="139:9" pos:end="139:22">cluster_offset</name> <operator pos:start="139:24" pos:end="139:26">&gt;&gt;=</operator> <literal type="number" pos:start="139:28" pos:end="139:28">9</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:42"><expr pos:start="141:9" pos:end="141:41"><name pos:start="141:9" pos:end="141:11">tmp</name> <operator pos:start="141:13" pos:end="141:13">=</operator> <call pos:start="141:15" pos:end="141:41"><name pos:start="141:15" pos:end="141:25">cpu_to_le32</name><argument_list pos:start="141:26" pos:end="141:41">(<argument pos:start="141:27" pos:end="141:40"><expr pos:start="141:27" pos:end="141:40"><name pos:start="141:27" pos:end="141:40">cluster_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:33"><expr pos:start="143:9" pos:end="143:32"><name pos:start="143:9" pos:end="143:26"><name pos:start="143:9" pos:end="143:16">l2_table</name><index pos:start="143:17" pos:end="143:26">[<expr pos:start="143:18" pos:end="143:25"><name pos:start="143:18" pos:end="143:25">l2_index</name></expr>]</index></name> <operator pos:start="143:28" pos:end="143:28">=</operator> <name pos:start="143:30" pos:end="143:32">tmp</name></expr>;</expr_stmt>



        <comment type="block" pos:start="147:9" pos:end="155:11">/* First of all we write grain itself, to avoid race condition

         * that may to corrupt the image.

         * This problem may occur because of insufficient space on host disk

         * or inappropriate VM shutdown.

         */</comment>

        <if_stmt pos:start="157:9" pos:end="161:21"><if pos:start="157:9" pos:end="161:21">if <condition pos:start="157:12" pos:end="159:68">(<expr pos:start="157:13" pos:end="159:67"><call pos:start="157:13" pos:end="159:61"><name pos:start="157:13" pos:end="157:29">get_whole_cluster</name><argument_list pos:start="157:30" pos:end="159:61">(

                <argument pos:start="159:17" pos:end="159:18"><expr pos:start="159:17" pos:end="159:18"><name pos:start="159:17" pos:end="159:18">bs</name></expr></argument>, <argument pos:start="159:21" pos:end="159:26"><expr pos:start="159:21" pos:end="159:26"><name pos:start="159:21" pos:end="159:26">extent</name></expr></argument>, <argument pos:start="159:29" pos:end="159:42"><expr pos:start="159:29" pos:end="159:42"><name pos:start="159:29" pos:end="159:42">cluster_offset</name></expr></argument>, <argument pos:start="159:45" pos:end="159:50"><expr pos:start="159:45" pos:end="159:50"><name pos:start="159:45" pos:end="159:50">offset</name></expr></argument>, <argument pos:start="159:53" pos:end="159:60"><expr pos:start="159:53" pos:end="159:60"><name pos:start="159:53" pos:end="159:60">allocate</name></expr></argument>)</argument_list></call> <operator pos:start="159:63" pos:end="159:64">==</operator> <operator pos:start="159:66" pos:end="159:66">-</operator><literal type="number" pos:start="159:67" pos:end="159:67">1</literal></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:21"><block_content pos:start="161:13" pos:end="161:21">

            <return pos:start="161:13" pos:end="161:21">return <expr pos:start="161:20" pos:end="161:20"><literal type="number" pos:start="161:20" pos:end="161:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="165:9" pos:end="177:9"><if pos:start="165:9" pos:end="177:9">if <condition pos:start="165:12" pos:end="165:19">(<expr pos:start="165:13" pos:end="165:18"><name pos:start="165:13" pos:end="165:18">m_data</name></expr>)</condition> <block pos:start="165:21" pos:end="177:9">{<block_content pos:start="167:13" pos:end="175:30">

            <expr_stmt pos:start="167:13" pos:end="167:33"><expr pos:start="167:13" pos:end="167:32"><name pos:start="167:13" pos:end="167:26"><name pos:start="167:13" pos:end="167:18">m_data</name><operator pos:start="167:19" pos:end="167:20">-&gt;</operator><name pos:start="167:21" pos:end="167:26">offset</name></name> <operator pos:start="167:28" pos:end="167:28">=</operator> <name pos:start="167:30" pos:end="167:32">tmp</name></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:40"><expr pos:start="169:13" pos:end="169:39"><name pos:start="169:13" pos:end="169:28"><name pos:start="169:13" pos:end="169:18">m_data</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:28">l1_index</name></name> <operator pos:start="169:30" pos:end="169:30">=</operator> <name pos:start="169:32" pos:end="169:39">l1_index</name></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:40"><expr pos:start="171:13" pos:end="171:39"><name pos:start="171:13" pos:end="171:28"><name pos:start="171:13" pos:end="171:18">m_data</name><operator pos:start="171:19" pos:end="171:20">-&gt;</operator><name pos:start="171:21" pos:end="171:28">l2_index</name></name> <operator pos:start="171:30" pos:end="171:30">=</operator> <name pos:start="171:32" pos:end="171:39">l2_index</name></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:42"><expr pos:start="173:13" pos:end="173:41"><name pos:start="173:13" pos:end="173:29"><name pos:start="173:13" pos:end="173:18">m_data</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:29">l2_offset</name></name> <operator pos:start="173:31" pos:end="173:31">=</operator> <name pos:start="173:33" pos:end="173:41">l2_offset</name></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:30"><expr pos:start="175:13" pos:end="175:29"><name pos:start="175:13" pos:end="175:25"><name pos:start="175:13" pos:end="175:18">m_data</name><operator pos:start="175:19" pos:end="175:20">-&gt;</operator><name pos:start="175:21" pos:end="175:25">valid</name></name> <operator pos:start="175:27" pos:end="175:27">=</operator> <literal type="number" pos:start="175:29" pos:end="175:29">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:25"><expr pos:start="181:5" pos:end="181:24"><name pos:start="181:5" pos:end="181:18">cluster_offset</name> <operator pos:start="181:20" pos:end="181:22">&lt;&lt;=</operator> <literal type="number" pos:start="181:24" pos:end="181:24">9</literal></expr>;</expr_stmt>

    <return pos:start="183:5" pos:end="183:26">return <expr pos:start="183:12" pos:end="183:25"><name pos:start="183:12" pos:end="183:25">cluster_offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
