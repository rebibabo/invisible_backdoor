<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13961.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:15"><name pos:start="1:1" pos:end="1:8">uint32_t</name> <name pos:start="1:10" pos:end="1:15">HELPER</name></type>(<name pos:start="1:17" pos:end="1:23">v7m_mrs</name>)<parameter_list pos:start="1:25" pos:end="1:56">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:36">CPUARMState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">env</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:51">uint32_t</name></type> <name pos:start="1:53" pos:end="1:55">reg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:5">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:15">el</name> <init pos:start="7:17" pos:end="7:37">= <expr pos:start="7:19" pos:end="7:37"><call pos:start="7:19" pos:end="7:37"><name pos:start="7:19" pos:end="7:32">arm_current_el</name><argument_list pos:start="7:33" pos:end="7:37">(<argument pos:start="7:34" pos:end="7:36"><expr pos:start="7:34" pos:end="7:36"><name pos:start="7:34" pos:end="7:36">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:60">/* First handle registers which unprivileged can read */</comment>



    <switch pos:start="15:5" pos:end="43:5">switch <condition pos:start="15:12" pos:end="15:16">(<expr pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">reg</name></expr>)</condition> <block pos:start="15:18" pos:end="43:5">{<block_content pos:start="17:5" pos:end="41:32">

    <case pos:start="17:5" pos:end="17:17">case <expr pos:start="17:10" pos:end="17:16"><literal type="number" pos:start="17:10" pos:end="17:10">0</literal> <operator pos:start="17:12" pos:end="17:14">...</operator> <literal type="number" pos:start="17:16" pos:end="17:16">7</literal></expr>:</case> <comment type="block" pos:start="17:19" pos:end="17:39">/* xPSR sub-fields */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:17"><expr pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:12">mask</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:28">(<expr pos:start="21:13" pos:end="21:27"><operator pos:start="21:13" pos:end="21:13">(</operator><name pos:start="21:14" pos:end="21:16">reg</name> <operator pos:start="21:18" pos:end="21:18">&amp;</operator> <literal type="number" pos:start="21:20" pos:end="21:20">1</literal><operator pos:start="21:21" pos:end="21:21">)</operator> <operator pos:start="21:23" pos:end="21:24">&amp;&amp;</operator> <name pos:start="21:26" pos:end="21:27">el</name></expr>)</condition> <block pos:start="21:30" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:30">

            <expr_stmt pos:start="23:13" pos:end="23:30"><expr pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:16">mask</name> <operator pos:start="23:18" pos:end="23:19">|=</operator> <name pos:start="23:21" pos:end="23:29">XPSR_EXCP</name></expr>;</expr_stmt> <comment type="block" pos:start="23:32" pos:end="23:65">/* IPSR (unpriv. reads as zero) */</comment>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:23">(<expr pos:start="27:13" pos:end="27:22"><operator pos:start="27:13" pos:end="27:13">!</operator><operator pos:start="27:14" pos:end="27:14">(</operator><name pos:start="27:15" pos:end="27:17">reg</name> <operator pos:start="27:19" pos:end="27:19">&amp;</operator> <literal type="number" pos:start="27:21" pos:end="27:21">4</literal><operator pos:start="27:22" pos:end="27:22">)</operator></expr>)</condition> <block pos:start="27:25" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:39">

            <expr_stmt pos:start="29:13" pos:end="29:39"><expr pos:start="29:13" pos:end="29:38"><name pos:start="29:13" pos:end="29:16">mask</name> <operator pos:start="29:18" pos:end="29:19">|=</operator> <name pos:start="29:21" pos:end="29:29">XPSR_NZCV</name> <operator pos:start="29:31" pos:end="29:31">|</operator> <name pos:start="29:33" pos:end="29:38">XPSR_Q</name></expr>;</expr_stmt> <comment type="block" pos:start="29:41" pos:end="29:50">/* APSR */</comment>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="33:9" pos:end="33:32">/* EPSR reads as zero */</comment>

        <return pos:start="35:9" pos:end="35:37">return <expr pos:start="35:16" pos:end="35:36"><call pos:start="35:16" pos:end="35:29"><name pos:start="35:16" pos:end="35:24">xpsr_read</name><argument_list pos:start="35:25" pos:end="35:29">(<argument pos:start="35:26" pos:end="35:28"><expr pos:start="35:26" pos:end="35:28"><name pos:start="35:26" pos:end="35:28">env</name></expr></argument>)</argument_list></call> <operator pos:start="35:31" pos:end="35:31">&amp;</operator> <name pos:start="35:33" pos:end="35:36">mask</name></expr>;</return>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:12">case <expr pos:start="39:10" pos:end="39:11"><literal type="number" pos:start="39:10" pos:end="39:11">20</literal></expr>:</case> <comment type="block" pos:start="39:14" pos:end="39:26">/* CONTROL */</comment>

        <return pos:start="41:9" pos:end="41:32">return <expr pos:start="41:16" pos:end="41:31"><name pos:start="41:16" pos:end="41:31"><name pos:start="41:16" pos:end="41:18">env</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:23">v7m</name><operator pos:start="41:24" pos:end="41:24">.</operator><name pos:start="41:25" pos:end="41:31">control</name></name></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:16">(<expr pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:10">el</name> <operator pos:start="47:12" pos:end="47:13">==</operator> <literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>)</condition> <block pos:start="47:18" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:17">

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return> <comment type="block" pos:start="49:19" pos:end="49:57">/* unprivileged reads others as zero */</comment>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="55:5" pos:end="91:5">switch <condition pos:start="55:12" pos:end="55:16">(<expr pos:start="55:13" pos:end="55:15"><name pos:start="55:13" pos:end="55:15">reg</name></expr>)</condition> <block pos:start="55:18" pos:end="91:5">{<block_content pos:start="57:5" pos:end="89:17">

    <case pos:start="57:5" pos:end="57:11">case <expr pos:start="57:10" pos:end="57:10"><literal type="number" pos:start="57:10" pos:end="57:10">8</literal></expr>:</case> <comment type="block" pos:start="57:13" pos:end="57:21">/* MSP */</comment>

        <return pos:start="59:9" pos:end="61:46">return <expr pos:start="59:16" pos:end="61:45"><ternary pos:start="59:16" pos:end="61:45"><condition pos:start="59:16" pos:end="59:62"><expr pos:start="59:16" pos:end="59:60"><operator pos:start="59:16" pos:end="59:16">(</operator><name pos:start="59:17" pos:end="59:32"><name pos:start="59:17" pos:end="59:19">env</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:24">v7m</name><operator pos:start="59:25" pos:end="59:25">.</operator><name pos:start="59:26" pos:end="59:32">control</name></name> <operator pos:start="59:34" pos:end="59:34">&amp;</operator> <name pos:start="59:36" pos:end="59:59">R_V7M_CONTROL_SPSEL_MASK</name><operator pos:start="59:60" pos:end="59:60">)</operator></expr> ?</condition><then pos:start="61:13" pos:end="61:29">

            <expr pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:15">env</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:20">v7m</name><operator pos:start="61:21" pos:end="61:21">.</operator><name pos:start="61:22" pos:end="61:29">other_sp</name></name></expr> </then><else pos:start="61:31" pos:end="61:45">: <expr pos:start="61:33" pos:end="61:45"><name pos:start="61:33" pos:end="61:45"><name pos:start="61:33" pos:end="61:35">env</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:41">regs</name><index pos:start="61:42" pos:end="61:45">[<expr pos:start="61:43" pos:end="61:44"><literal type="number" pos:start="61:43" pos:end="61:44">13</literal></expr>]</index></name></expr></else></ternary></expr>;</return>

    <case pos:start="63:5" pos:end="63:11">case <expr pos:start="63:10" pos:end="63:10"><literal type="number" pos:start="63:10" pos:end="63:10">9</literal></expr>:</case> <comment type="block" pos:start="63:13" pos:end="63:21">/* PSP */</comment>

        <return pos:start="65:9" pos:end="67:46">return <expr pos:start="65:16" pos:end="67:45"><ternary pos:start="65:16" pos:end="67:45"><condition pos:start="65:16" pos:end="65:62"><expr pos:start="65:16" pos:end="65:60"><operator pos:start="65:16" pos:end="65:16">(</operator><name pos:start="65:17" pos:end="65:32"><name pos:start="65:17" pos:end="65:19">env</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:24">v7m</name><operator pos:start="65:25" pos:end="65:25">.</operator><name pos:start="65:26" pos:end="65:32">control</name></name> <operator pos:start="65:34" pos:end="65:34">&amp;</operator> <name pos:start="65:36" pos:end="65:59">R_V7M_CONTROL_SPSEL_MASK</name><operator pos:start="65:60" pos:end="65:60">)</operator></expr> ?</condition><then pos:start="67:13" pos:end="67:25">

            <expr pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:15">env</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:21">regs</name><index pos:start="67:22" pos:end="67:25">[<expr pos:start="67:23" pos:end="67:24"><literal type="number" pos:start="67:23" pos:end="67:24">13</literal></expr>]</index></name></expr> </then><else pos:start="67:27" pos:end="67:45">: <expr pos:start="67:29" pos:end="67:45"><name pos:start="67:29" pos:end="67:45"><name pos:start="67:29" pos:end="67:31">env</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:36">v7m</name><operator pos:start="67:37" pos:end="67:37">.</operator><name pos:start="67:38" pos:end="67:45">other_sp</name></name></expr></else></ternary></expr>;</return>

    <case pos:start="69:5" pos:end="69:12">case <expr pos:start="69:10" pos:end="69:11"><literal type="number" pos:start="69:10" pos:end="69:11">16</literal></expr>:</case> <comment type="block" pos:start="69:14" pos:end="69:26">/* PRIMASK */</comment>

        <return pos:start="71:9" pos:end="71:49">return <expr pos:start="71:16" pos:end="71:48"><name pos:start="71:16" pos:end="71:48"><name pos:start="71:16" pos:end="71:18">env</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:23">v7m</name><operator pos:start="71:24" pos:end="71:24">.</operator><name pos:start="71:25" pos:end="71:31">primask</name><index pos:start="71:32" pos:end="71:48">[<expr pos:start="71:33" pos:end="71:47"><name pos:start="71:33" pos:end="71:47"><name pos:start="71:33" pos:end="71:35">env</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:40">v7m</name><operator pos:start="71:41" pos:end="71:41">.</operator><name pos:start="71:42" pos:end="71:47">secure</name></name></expr>]</index></name></expr>;</return>

    <case pos:start="73:5" pos:end="73:12">case <expr pos:start="73:10" pos:end="73:11"><literal type="number" pos:start="73:10" pos:end="73:11">17</literal></expr>:</case> <comment type="block" pos:start="73:14" pos:end="73:26">/* BASEPRI */</comment>

    <case pos:start="75:5" pos:end="75:12">case <expr pos:start="75:10" pos:end="75:11"><literal type="number" pos:start="75:10" pos:end="75:11">18</literal></expr>:</case> <comment type="block" pos:start="75:14" pos:end="75:30">/* BASEPRI_MAX */</comment>

        <return pos:start="77:9" pos:end="77:49">return <expr pos:start="77:16" pos:end="77:48"><name pos:start="77:16" pos:end="77:48"><name pos:start="77:16" pos:end="77:18">env</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:23">v7m</name><operator pos:start="77:24" pos:end="77:24">.</operator><name pos:start="77:25" pos:end="77:31">basepri</name><index pos:start="77:32" pos:end="77:48">[<expr pos:start="77:33" pos:end="77:47"><name pos:start="77:33" pos:end="77:47"><name pos:start="77:33" pos:end="77:35">env</name><operator pos:start="77:36" pos:end="77:37">-&gt;</operator><name pos:start="77:38" pos:end="77:40">v7m</name><operator pos:start="77:41" pos:end="77:41">.</operator><name pos:start="77:42" pos:end="77:47">secure</name></name></expr>]</index></name></expr>;</return>

    <case pos:start="79:5" pos:end="79:12">case <expr pos:start="79:10" pos:end="79:11"><literal type="number" pos:start="79:10" pos:end="79:11">19</literal></expr>:</case> <comment type="block" pos:start="79:14" pos:end="79:28">/* FAULTMASK */</comment>

        <return pos:start="81:9" pos:end="81:51">return <expr pos:start="81:16" pos:end="81:50"><name pos:start="81:16" pos:end="81:50"><name pos:start="81:16" pos:end="81:18">env</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:23">v7m</name><operator pos:start="81:24" pos:end="81:24">.</operator><name pos:start="81:25" pos:end="81:33">faultmask</name><index pos:start="81:34" pos:end="81:50">[<expr pos:start="81:35" pos:end="81:49"><name pos:start="81:35" pos:end="81:49"><name pos:start="81:35" pos:end="81:37">env</name><operator pos:start="81:38" pos:end="81:39">-&gt;</operator><name pos:start="81:40" pos:end="81:42">v7m</name><operator pos:start="81:43" pos:end="81:43">.</operator><name pos:start="81:44" pos:end="81:49">secure</name></name></expr>]</index></name></expr>;</return>

    <default pos:start="83:5" pos:end="83:12">default:</default>

        <expr_stmt pos:start="85:9" pos:end="87:62"><expr pos:start="85:9" pos:end="87:61"><call pos:start="85:9" pos:end="87:61"><name pos:start="85:9" pos:end="85:21">qemu_log_mask</name><argument_list pos:start="85:22" pos:end="87:61">(<argument pos:start="85:23" pos:end="85:37"><expr pos:start="85:23" pos:end="85:37"><name pos:start="85:23" pos:end="85:37">LOG_GUEST_ERROR</name></expr></argument>, <argument pos:start="85:40" pos:end="87:55"><expr pos:start="85:40" pos:end="87:55"><literal type="string" pos:start="85:40" pos:end="85:72">"Attempt to read unknown special"</literal>

                                       <literal type="string" pos:start="87:40" pos:end="87:55">" register %d\n"</literal></expr></argument>, <argument pos:start="87:58" pos:end="87:60"><expr pos:start="87:58" pos:end="87:60"><name pos:start="87:58" pos:end="87:60">reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="89:9" pos:end="89:17">return <expr pos:start="89:16" pos:end="89:16"><literal type="number" pos:start="89:16" pos:end="89:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
