<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/597.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">trigger_access_exception</name><parameter_list pos:start="1:37" pos:end="3:65">(<parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><name pos:start="1:38" pos:end="1:50">CPUS390XState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">env</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:70"><decl pos:start="1:58" pos:end="1:70"><type pos:start="1:58" pos:end="1:70"><name pos:start="1:58" pos:end="1:65">uint32_t</name></type> <name pos:start="1:67" pos:end="1:70">type</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:50"><decl pos:start="3:38" pos:end="3:50"><type pos:start="3:38" pos:end="3:50"><name pos:start="3:38" pos:end="3:45">uint32_t</name></type> <name pos:start="3:47" pos:end="3:50">ilen</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:64"><decl pos:start="3:53" pos:end="3:64"><type pos:start="3:53" pos:end="3:64"><name pos:start="3:53" pos:end="3:60">uint64_t</name></type> <name pos:start="3:62" pos:end="3:64">tec</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="23:5">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">S390CPU</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">cpu</name> <init pos:start="7:18" pos:end="7:40">= <expr pos:start="7:20" pos:end="7:40"><call pos:start="7:20" pos:end="7:40"><name pos:start="7:20" pos:end="7:35">s390_env_get_cpu</name><argument_list pos:start="7:36" pos:end="7:40">(<argument pos:start="7:37" pos:end="7:39"><expr pos:start="7:37" pos:end="7:39"><name pos:start="7:37" pos:end="7:39">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><call pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:19">kvm_enabled</name><argument_list pos:start="11:20" pos:end="11:21">()</argument_list></call></expr>)</condition> <block pos:start="11:24" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:50">

        <expr_stmt pos:start="13:9" pos:end="13:50"><expr pos:start="13:9" pos:end="13:49"><call pos:start="13:9" pos:end="13:49"><name pos:start="13:9" pos:end="13:33">kvm_s390_access_exception</name><argument_list pos:start="13:34" pos:end="13:49">(<argument pos:start="13:35" pos:end="13:37"><expr pos:start="13:35" pos:end="13:37"><name pos:start="13:35" pos:end="13:37">cpu</name></expr></argument>, <argument pos:start="13:40" pos:end="13:43"><expr pos:start="13:40" pos:end="13:43"><name pos:start="13:40" pos:end="13:43">type</name></expr></argument>, <argument pos:start="13:46" pos:end="13:48"><expr pos:start="13:46" pos:end="13:48"><name pos:start="13:46" pos:end="13:48">tec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="23:5">else <block pos:start="15:12" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:47">

        <decl_stmt pos:start="17:9" pos:end="17:32"><decl pos:start="17:9" pos:end="17:31"><type pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:16">CPUState</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:20">cs</name> <init pos:start="17:22" pos:end="17:31">= <expr pos:start="17:24" pos:end="17:31"><call pos:start="17:24" pos:end="17:31"><name pos:start="17:24" pos:end="17:26">CPU</name><argument_list pos:start="17:27" pos:end="17:31">(<argument pos:start="17:28" pos:end="17:30"><expr pos:start="17:28" pos:end="17:30"><name pos:start="17:28" pos:end="17:30">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:76"><expr pos:start="19:9" pos:end="19:75"><call pos:start="19:9" pos:end="19:75"><name pos:start="19:9" pos:end="19:16">stq_phys</name><argument_list pos:start="19:17" pos:end="19:75">(<argument pos:start="19:18" pos:end="19:23"><expr pos:start="19:18" pos:end="19:23"><name pos:start="19:18" pos:end="19:23"><name pos:start="19:18" pos:end="19:19">cs</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:23">as</name></name></expr></argument>, <argument pos:start="19:26" pos:end="19:69"><expr pos:start="19:26" pos:end="19:69"><name pos:start="19:26" pos:end="19:33"><name pos:start="19:26" pos:end="19:28">env</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:33">psa</name></name> <operator pos:start="19:35" pos:end="19:35">+</operator> <call pos:start="19:37" pos:end="19:69"><name pos:start="19:37" pos:end="19:44">offsetof</name><argument_list pos:start="19:45" pos:end="19:69">(<argument pos:start="19:46" pos:end="19:52"><expr pos:start="19:46" pos:end="19:52"><name pos:start="19:46" pos:end="19:52">LowCore</name></expr></argument>, <argument pos:start="19:55" pos:end="19:68"><expr pos:start="19:55" pos:end="19:68"><name pos:start="19:55" pos:end="19:68">trans_exc_code</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:72" pos:end="19:74"><expr pos:start="19:72" pos:end="19:74"><name pos:start="19:72" pos:end="19:74">tec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:47"><expr pos:start="21:9" pos:end="21:46"><call pos:start="21:9" pos:end="21:46"><name pos:start="21:9" pos:end="21:29">trigger_pgm_exception</name><argument_list pos:start="21:30" pos:end="21:46">(<argument pos:start="21:31" pos:end="21:33"><expr pos:start="21:31" pos:end="21:33"><name pos:start="21:31" pos:end="21:33">env</name></expr></argument>, <argument pos:start="21:36" pos:end="21:39"><expr pos:start="21:36" pos:end="21:39"><name pos:start="21:36" pos:end="21:39">type</name></expr></argument>, <argument pos:start="21:42" pos:end="21:45"><expr pos:start="21:42" pos:end="21:45"><name pos:start="21:42" pos:end="21:45">ilen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
