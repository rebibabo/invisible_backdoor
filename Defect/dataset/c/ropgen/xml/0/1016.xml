<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1016.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:12"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name><modifier pos:start="1:12" pos:end="1:12">*</modifier></type> <name pos:start="1:14" pos:end="1:32">mpjpeg_get_boundary</name><parameter_list pos:start="1:33" pos:end="1:49">(<parameter pos:start="1:34" pos:end="1:48"><decl pos:start="1:34" pos:end="1:48"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:44">AVIOContext</name><modifier pos:start="1:45" pos:end="1:45">*</modifier></type> <name pos:start="1:47" pos:end="1:48">pb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:15">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:22">mime_type</name> <init pos:start="5:24" pos:end="5:29">= <expr pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:21">start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">res</name> <init pos:start="11:18" pos:end="11:23">= <expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type>     <name pos:start="13:13" pos:end="13:15">len</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:56">/* get MIME type, and skip to the first parameter */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:68"><expr pos:start="19:5" pos:end="19:67"><call pos:start="19:5" pos:end="19:67"><name pos:start="19:5" pos:end="19:14">av_opt_get</name><argument_list pos:start="19:15" pos:end="19:67">(<argument pos:start="19:16" pos:end="19:17"><expr pos:start="19:16" pos:end="19:17"><name pos:start="19:16" pos:end="19:17">pb</name></expr></argument>, <argument pos:start="19:20" pos:end="19:30"><expr pos:start="19:20" pos:end="19:30"><literal type="string" pos:start="19:20" pos:end="19:30">"mime_type"</literal></expr></argument>, <argument pos:start="19:33" pos:end="19:54"><expr pos:start="19:33" pos:end="19:54"><name pos:start="19:33" pos:end="19:54">AV_OPT_SEARCH_CHILDREN</name></expr></argument>, <argument pos:start="19:57" pos:end="19:66"><expr pos:start="19:57" pos:end="19:66"><operator pos:start="19:57" pos:end="19:57">&amp;</operator><name pos:start="19:58" pos:end="19:66">mime_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:9">start</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:21">mime_type</name></expr>;</expr_stmt>

    <while pos:start="23:5" pos:end="57:5">while <condition pos:start="23:11" pos:end="23:43">(<expr pos:start="23:12" pos:end="23:42"><name pos:start="23:12" pos:end="23:16">start</name> <operator pos:start="23:18" pos:end="23:19">!=</operator> <name pos:start="23:21" pos:end="23:24">NULL</name> <operator pos:start="23:26" pos:end="23:27">&amp;&amp;</operator> <operator pos:start="23:29" pos:end="23:29">*</operator><name pos:start="23:30" pos:end="23:34">start</name> <operator pos:start="23:36" pos:end="23:37">!=</operator> <literal type="char" pos:start="23:39" pos:end="23:42">'\0'</literal></expr>)</condition> <block pos:start="23:45" pos:end="57:5">{<block_content pos:start="25:9" pos:end="55:9">

        <expr_stmt pos:start="25:9" pos:end="25:35"><expr pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:13">start</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <call pos:start="25:17" pos:end="25:34"><name pos:start="25:17" pos:end="25:22">strchr</name><argument_list pos:start="25:23" pos:end="25:34">(<argument pos:start="25:24" pos:end="25:28"><expr pos:start="25:24" pos:end="25:28"><name pos:start="25:24" pos:end="25:28">start</name></expr></argument>, <argument pos:start="25:31" pos:end="25:33"><expr pos:start="25:31" pos:end="25:33"><literal type="char" pos:start="25:31" pos:end="25:33">';'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:28"><if pos:start="27:9" pos:end="29:28">if <condition pos:start="27:12" pos:end="27:18">(<expr pos:start="27:13" pos:end="27:17"><name pos:start="27:13" pos:end="27:17">start</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:28"><block_content pos:start="29:13" pos:end="29:28">

            <expr_stmt pos:start="29:13" pos:end="29:28"><expr pos:start="29:13" pos:end="29:27"><name pos:start="29:13" pos:end="29:17">start</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:25">start</name><operator pos:start="29:26" pos:end="29:26">+</operator><literal type="number" pos:start="29:27" pos:end="29:27">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <while pos:start="33:9" pos:end="35:20">while <condition pos:start="33:15" pos:end="33:34">(<expr pos:start="33:16" pos:end="33:33"><call pos:start="33:16" pos:end="33:33"><name pos:start="33:16" pos:end="33:25">av_isspace</name><argument_list pos:start="33:26" pos:end="33:33">(<argument pos:start="33:27" pos:end="33:32"><expr pos:start="33:27" pos:end="33:32"><operator pos:start="33:27" pos:end="33:27">*</operator><name pos:start="33:28" pos:end="33:32">start</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:20"><block_content pos:start="35:13" pos:end="35:20">

            <expr_stmt pos:start="35:13" pos:end="35:20"><expr pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:17">start</name><operator pos:start="35:18" pos:end="35:19">++</operator></expr>;</expr_stmt></block_content></block></while>



        <if_stmt pos:start="39:9" pos:end="55:9"><if pos:start="39:9" pos:end="55:9">if <condition pos:start="39:12" pos:end="39:54">(<expr pos:start="39:13" pos:end="39:53"><operator pos:start="39:13" pos:end="39:13">!</operator><call pos:start="39:14" pos:end="39:53"><name pos:start="39:14" pos:end="39:25">av_stristart</name><argument_list pos:start="39:26" pos:end="39:53">(<argument pos:start="39:27" pos:end="39:31"><expr pos:start="39:27" pos:end="39:31"><name pos:start="39:27" pos:end="39:31">start</name></expr></argument>, <argument pos:start="39:34" pos:end="39:44"><expr pos:start="39:34" pos:end="39:44"><literal type="string" pos:start="39:34" pos:end="39:44">"boundary="</literal></expr></argument>, <argument pos:start="39:47" pos:end="39:52"><expr pos:start="39:47" pos:end="39:52"><operator pos:start="39:47" pos:end="39:47">&amp;</operator><name pos:start="39:48" pos:end="39:52">start</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:56" pos:end="55:9">{<block_content pos:start="41:13" pos:end="53:18">

            <expr_stmt pos:start="41:13" pos:end="41:37"><expr pos:start="41:13" pos:end="41:36"><name pos:start="41:13" pos:end="41:15">end</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:36"><name pos:start="41:19" pos:end="41:24">strchr</name><argument_list pos:start="41:25" pos:end="41:36">(<argument pos:start="41:26" pos:end="41:30"><expr pos:start="41:26" pos:end="41:30"><name pos:start="41:26" pos:end="41:30">start</name></expr></argument>, <argument pos:start="41:33" pos:end="41:35"><expr pos:start="41:33" pos:end="41:35"><literal type="char" pos:start="41:33" pos:end="41:35">';'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="49:36"><if pos:start="43:13" pos:end="45:38">if <condition pos:start="43:16" pos:end="43:20">(<expr pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">end</name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:38"><block_content pos:start="45:17" pos:end="45:38">

                <expr_stmt pos:start="45:17" pos:end="45:38"><expr pos:start="45:17" pos:end="45:37"><name pos:start="45:17" pos:end="45:19">len</name> <operator pos:start="45:21" pos:end="45:21">=</operator> <name pos:start="45:23" pos:end="45:25">end</name> <operator pos:start="45:27" pos:end="45:27">-</operator> <name pos:start="45:29" pos:end="45:33">start</name> <operator pos:start="45:35" pos:end="45:35">-</operator> <literal type="number" pos:start="45:37" pos:end="45:37">1</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="47:13" pos:end="49:36">else<block type="pseudo" pos:start="49:17" pos:end="49:36"><block_content pos:start="49:17" pos:end="49:36">

                <expr_stmt pos:start="49:17" pos:end="49:36"><expr pos:start="49:17" pos:end="49:35"><name pos:start="49:17" pos:end="49:19">len</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <call pos:start="49:23" pos:end="49:35"><name pos:start="49:23" pos:end="49:28">strlen</name><argument_list pos:start="49:29" pos:end="49:35">(<argument pos:start="49:30" pos:end="49:34"><expr pos:start="49:30" pos:end="49:34"><name pos:start="49:30" pos:end="49:34">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:41"><expr pos:start="51:13" pos:end="51:40"><name pos:start="51:13" pos:end="51:15">res</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <call pos:start="51:19" pos:end="51:40"><name pos:start="51:19" pos:end="51:28">av_strndup</name><argument_list pos:start="51:29" pos:end="51:40">(<argument pos:start="51:30" pos:end="51:34"><expr pos:start="51:30" pos:end="51:34"><name pos:start="51:30" pos:end="51:34">start</name></expr></argument>, <argument pos:start="51:37" pos:end="51:39"><expr pos:start="51:37" pos:end="51:39"><name pos:start="51:37" pos:end="51:39">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="61:5" pos:end="61:25"><expr pos:start="61:5" pos:end="61:24"><call pos:start="61:5" pos:end="61:24"><name pos:start="61:5" pos:end="61:12">av_freep</name><argument_list pos:start="61:13" pos:end="61:24">(<argument pos:start="61:14" pos:end="61:23"><expr pos:start="61:14" pos:end="61:23"><operator pos:start="61:14" pos:end="61:14">&amp;</operator><name pos:start="61:15" pos:end="61:23">mime_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="63:5" pos:end="63:15">return <expr pos:start="63:12" pos:end="63:14"><name pos:start="63:12" pos:end="63:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
