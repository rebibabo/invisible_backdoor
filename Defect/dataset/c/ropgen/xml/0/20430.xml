<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20430.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">gen_jump</name><parameter_list pos:start="1:21" pos:end="1:80">(<parameter pos:start="1:22" pos:end="1:37"><decl pos:start="1:22" pos:end="1:37"><type pos:start="1:22" pos:end="1:37"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:37">dc</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:47">uint32_t</name></type> <name pos:start="1:49" pos:end="1:51">imm</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:61">uint32_t</name></type> <name pos:start="1:63" pos:end="1:65">reg</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:79"><decl pos:start="1:68" pos:end="1:79"><type pos:start="1:68" pos:end="1:79"><name pos:start="1:68" pos:end="1:75">uint32_t</name></type> <name pos:start="1:77" pos:end="1:79">op0</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:23">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:16">target_ulong</name></type> <name pos:start="5:18" pos:end="5:23">tmp_pc</name></decl>;</decl_stmt>

    <comment type="block" pos:start="7:5" pos:end="7:25">/* N26, 26bits imm */</comment>

    <expr_stmt pos:start="9:5" pos:end="9:48"><expr pos:start="9:5" pos:end="9:47"><name pos:start="9:5" pos:end="9:10">tmp_pc</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <call pos:start="9:14" pos:end="9:38"><name pos:start="9:14" pos:end="9:24">sign_extend</name><argument_list pos:start="9:25" pos:end="9:38">(<argument pos:start="9:26" pos:end="9:33"><expr pos:start="9:26" pos:end="9:33"><operator pos:start="9:26" pos:end="9:26">(</operator><name pos:start="9:27" pos:end="9:29">imm</name><operator pos:start="9:30" pos:end="9:31">&lt;&lt;</operator><literal type="number" pos:start="9:32" pos:end="9:32">2</literal><operator pos:start="9:33" pos:end="9:33">)</operator></expr></argument>, <argument pos:start="9:36" pos:end="9:37"><expr pos:start="9:36" pos:end="9:37"><literal type="number" pos:start="9:36" pos:end="9:37">26</literal></expr></argument>)</argument_list></call> <operator pos:start="9:40" pos:end="9:40">+</operator> <name pos:start="9:42" pos:end="9:47"><name pos:start="9:42" pos:end="9:43">dc</name><operator pos:start="9:44" pos:end="9:45">-&gt;</operator><name pos:start="9:46" pos:end="9:47">pc</name></name></expr>;</expr_stmt>



    <switch pos:start="13:5" pos:end="77:5">switch <condition pos:start="13:12" pos:end="13:16">(<expr pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:15">op0</name></expr>)</condition> <block pos:start="13:18" pos:end="77:5">{<block_content pos:start="15:5" pos:end="75:14">

    <case pos:start="15:5" pos:end="15:14">case <expr pos:start="15:10" pos:end="15:13"><literal type="number" pos:start="15:10" pos:end="15:13">0x00</literal></expr>:</case>     <comment type="block" pos:start="15:20" pos:end="15:28">/* l.j */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:40"><expr pos:start="17:9" pos:end="17:39"><call pos:start="17:9" pos:end="17:39"><name pos:start="17:9" pos:end="17:23">tcg_gen_movi_tl</name><argument_list pos:start="17:24" pos:end="17:39">(<argument pos:start="17:25" pos:end="17:30"><expr pos:start="17:25" pos:end="17:30"><name pos:start="17:25" pos:end="17:30">jmp_pc</name></expr></argument>, <argument pos:start="17:33" pos:end="17:38"><expr pos:start="17:33" pos:end="17:38"><name pos:start="17:33" pos:end="17:38">tmp_pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:14">case <expr pos:start="21:10" pos:end="21:13"><literal type="number" pos:start="21:10" pos:end="21:13">0x01</literal></expr>:</case>     <comment type="block" pos:start="21:20" pos:end="21:30">/* l.jal */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:48"><expr pos:start="23:9" pos:end="23:47"><call pos:start="23:9" pos:end="23:47"><name pos:start="23:9" pos:end="23:23">tcg_gen_movi_tl</name><argument_list pos:start="23:24" pos:end="23:47">(<argument pos:start="23:25" pos:end="23:32"><expr pos:start="23:25" pos:end="23:32"><name pos:start="23:25" pos:end="23:32"><name pos:start="23:25" pos:end="23:29">cpu_R</name><index pos:start="23:30" pos:end="23:32">[<expr pos:start="23:31" pos:end="23:31"><literal type="number" pos:start="23:31" pos:end="23:31">9</literal></expr>]</index></name></expr></argument>, <argument pos:start="23:35" pos:end="23:46"><expr pos:start="23:35" pos:end="23:46"><operator pos:start="23:35" pos:end="23:35">(</operator><name pos:start="23:36" pos:end="23:41"><name pos:start="23:36" pos:end="23:37">dc</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:41">pc</name></name> <operator pos:start="23:43" pos:end="23:43">+</operator> <literal type="number" pos:start="23:45" pos:end="23:45">8</literal><operator pos:start="23:46" pos:end="23:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:40"><expr pos:start="25:9" pos:end="25:39"><call pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:23">tcg_gen_movi_tl</name><argument_list pos:start="25:24" pos:end="25:39">(<argument pos:start="25:25" pos:end="25:30"><expr pos:start="25:25" pos:end="25:30"><name pos:start="25:25" pos:end="25:30">jmp_pc</name></expr></argument>, <argument pos:start="25:33" pos:end="25:38"><expr pos:start="25:33" pos:end="25:38"><name pos:start="25:33" pos:end="25:38">tmp_pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:14">case <expr pos:start="29:10" pos:end="29:13"><literal type="number" pos:start="29:10" pos:end="29:13">0x03</literal></expr>:</case>     <comment type="block" pos:start="29:20" pos:end="29:30">/* l.bnf */</comment>

    <case pos:start="31:5" pos:end="31:14">case <expr pos:start="31:10" pos:end="31:13"><literal type="number" pos:start="31:10" pos:end="31:13">0x04</literal></expr>:</case>     <comment type="block" pos:start="31:20" pos:end="31:30">/* l.bf  */</comment>

        <block pos:start="33:9" pos:end="53:9">{<block_content pos:start="35:13" pos:end="51:32">

            <decl_stmt pos:start="35:13" pos:end="35:38"><decl pos:start="35:13" pos:end="35:37"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:19">lab</name> <init pos:start="35:21" pos:end="35:37">= <expr pos:start="35:23" pos:end="35:37"><call pos:start="35:23" pos:end="35:37"><name pos:start="35:23" pos:end="35:35">gen_new_label</name><argument_list pos:start="35:36" pos:end="35:37">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:39"><decl pos:start="37:13" pos:end="37:38"><type pos:start="37:13" pos:end="37:16"><name pos:start="37:13" pos:end="37:16">TCGv</name></type> <name pos:start="37:18" pos:end="37:21">sr_f</name> <init pos:start="37:23" pos:end="37:38">= <expr pos:start="37:25" pos:end="37:38"><call pos:start="37:25" pos:end="37:38"><name pos:start="37:25" pos:end="37:36">tcg_temp_new</name><argument_list pos:start="37:37" pos:end="37:38">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:46"><expr pos:start="39:13" pos:end="39:45"><call pos:start="39:13" pos:end="39:45"><name pos:start="39:13" pos:end="39:27">tcg_gen_movi_tl</name><argument_list pos:start="39:28" pos:end="39:45">(<argument pos:start="39:29" pos:end="39:34"><expr pos:start="39:29" pos:end="39:34"><name pos:start="39:29" pos:end="39:34">jmp_pc</name></expr></argument>, <argument pos:start="39:37" pos:end="39:44"><expr pos:start="39:37" pos:end="39:44"><name pos:start="39:37" pos:end="39:42"><name pos:start="39:37" pos:end="39:38">dc</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:42">pc</name></name><operator pos:start="39:43" pos:end="39:43">+</operator><literal type="number" pos:start="39:44" pos:end="39:44">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:48"><expr pos:start="41:13" pos:end="41:47"><call pos:start="41:13" pos:end="41:47"><name pos:start="41:13" pos:end="41:27">tcg_gen_andi_tl</name><argument_list pos:start="41:28" pos:end="41:47">(<argument pos:start="41:29" pos:end="41:32"><expr pos:start="41:29" pos:end="41:32"><name pos:start="41:29" pos:end="41:32">sr_f</name></expr></argument>, <argument pos:start="41:35" pos:end="41:40"><expr pos:start="41:35" pos:end="41:40"><name pos:start="41:35" pos:end="41:40">cpu_sr</name></expr></argument>, <argument pos:start="41:43" pos:end="41:46"><expr pos:start="41:43" pos:end="41:46"><name pos:start="41:43" pos:end="41:46">SR_F</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="45:49"><expr pos:start="43:13" pos:end="45:48"><call pos:start="43:13" pos:end="45:48"><name pos:start="43:13" pos:end="43:31">tcg_gen_brcondi_i32</name><argument_list pos:start="43:32" pos:end="45:48">(<argument pos:start="43:33" pos:end="43:71"><expr pos:start="43:33" pos:end="43:71"><ternary pos:start="43:33" pos:end="43:71"><condition pos:start="43:33" pos:end="43:45"><expr pos:start="43:33" pos:end="43:43"><name pos:start="43:33" pos:end="43:35">op0</name> <operator pos:start="43:37" pos:end="43:38">==</operator> <literal type="number" pos:start="43:40" pos:end="43:43">0x03</literal></expr> ?</condition><then pos:start="43:47" pos:end="43:57"> <expr pos:start="43:47" pos:end="43:57"><name pos:start="43:47" pos:end="43:57">TCG_COND_EQ</name></expr> </then><else pos:start="43:59" pos:end="43:71">: <expr pos:start="43:61" pos:end="43:71"><name pos:start="43:61" pos:end="43:71">TCG_COND_NE</name></expr></else></ternary></expr></argument>,

                                <argument pos:start="45:33" pos:end="45:36"><expr pos:start="45:33" pos:end="45:36"><name pos:start="45:33" pos:end="45:36">sr_f</name></expr></argument>, <argument pos:start="45:39" pos:end="45:42"><expr pos:start="45:39" pos:end="45:42"><name pos:start="45:39" pos:end="45:42">SR_F</name></expr></argument>, <argument pos:start="45:45" pos:end="45:47"><expr pos:start="45:45" pos:end="45:47"><name pos:start="45:45" pos:end="45:47">lab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:44"><expr pos:start="47:13" pos:end="47:43"><call pos:start="47:13" pos:end="47:43"><name pos:start="47:13" pos:end="47:27">tcg_gen_movi_tl</name><argument_list pos:start="47:28" pos:end="47:43">(<argument pos:start="47:29" pos:end="47:34"><expr pos:start="47:29" pos:end="47:34"><name pos:start="47:29" pos:end="47:34">jmp_pc</name></expr></argument>, <argument pos:start="47:37" pos:end="47:42"><expr pos:start="47:37" pos:end="47:42"><name pos:start="47:37" pos:end="47:42">tmp_pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:31"><expr pos:start="49:13" pos:end="49:30"><call pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:25">gen_set_label</name><argument_list pos:start="49:26" pos:end="49:30">(<argument pos:start="49:27" pos:end="49:29"><expr pos:start="49:27" pos:end="49:29"><name pos:start="49:27" pos:end="49:29">lab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:32"><expr pos:start="51:13" pos:end="51:31"><call pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:25">tcg_temp_free</name><argument_list pos:start="51:26" pos:end="51:31">(<argument pos:start="51:27" pos:end="51:30"><expr pos:start="51:27" pos:end="51:30"><name pos:start="51:27" pos:end="51:30">sr_f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:14">case <expr pos:start="57:10" pos:end="57:13"><literal type="number" pos:start="57:10" pos:end="57:13">0x11</literal></expr>:</case>     <comment type="block" pos:start="57:20" pos:end="57:29">/* l.jr */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:43"><expr pos:start="59:9" pos:end="59:42"><call pos:start="59:9" pos:end="59:42"><name pos:start="59:9" pos:end="59:22">tcg_gen_mov_tl</name><argument_list pos:start="59:23" pos:end="59:42">(<argument pos:start="59:24" pos:end="59:29"><expr pos:start="59:24" pos:end="59:29"><name pos:start="59:24" pos:end="59:29">jmp_pc</name></expr></argument>, <argument pos:start="59:32" pos:end="59:41"><expr pos:start="59:32" pos:end="59:41"><name pos:start="59:32" pos:end="59:41"><name pos:start="59:32" pos:end="59:36">cpu_R</name><index pos:start="59:37" pos:end="59:41">[<expr pos:start="59:38" pos:end="59:40"><name pos:start="59:38" pos:end="59:40">reg</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:14">case <expr pos:start="63:10" pos:end="63:13"><literal type="number" pos:start="63:10" pos:end="63:13">0x12</literal></expr>:</case>     <comment type="block" pos:start="63:20" pos:end="63:31">/* l.jalr */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:48"><expr pos:start="65:9" pos:end="65:47"><call pos:start="65:9" pos:end="65:47"><name pos:start="65:9" pos:end="65:23">tcg_gen_movi_tl</name><argument_list pos:start="65:24" pos:end="65:47">(<argument pos:start="65:25" pos:end="65:32"><expr pos:start="65:25" pos:end="65:32"><name pos:start="65:25" pos:end="65:32"><name pos:start="65:25" pos:end="65:29">cpu_R</name><index pos:start="65:30" pos:end="65:32">[<expr pos:start="65:31" pos:end="65:31"><literal type="number" pos:start="65:31" pos:end="65:31">9</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:35" pos:end="65:46"><expr pos:start="65:35" pos:end="65:46"><operator pos:start="65:35" pos:end="65:35">(</operator><name pos:start="65:36" pos:end="65:41"><name pos:start="65:36" pos:end="65:37">dc</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:41">pc</name></name> <operator pos:start="65:43" pos:end="65:43">+</operator> <literal type="number" pos:start="65:45" pos:end="65:45">8</literal><operator pos:start="65:46" pos:end="65:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:43"><expr pos:start="67:9" pos:end="67:42"><call pos:start="67:9" pos:end="67:42"><name pos:start="67:9" pos:end="67:22">tcg_gen_mov_tl</name><argument_list pos:start="67:23" pos:end="67:42">(<argument pos:start="67:24" pos:end="67:29"><expr pos:start="67:24" pos:end="67:29"><name pos:start="67:24" pos:end="67:29">jmp_pc</name></expr></argument>, <argument pos:start="67:32" pos:end="67:41"><expr pos:start="67:32" pos:end="67:41"><name pos:start="67:32" pos:end="67:41"><name pos:start="67:32" pos:end="67:36">cpu_R</name><index pos:start="67:37" pos:end="67:41">[<expr pos:start="67:38" pos:end="67:40"><name pos:start="67:38" pos:end="67:40">reg</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <default pos:start="71:5" pos:end="71:12">default:</default>

        <expr_stmt pos:start="73:9" pos:end="73:34"><expr pos:start="73:9" pos:end="73:33"><call pos:start="73:9" pos:end="73:33"><name pos:start="73:9" pos:end="73:29">gen_illegal_exception</name><argument_list pos:start="73:30" pos:end="73:33">(<argument pos:start="73:31" pos:end="73:32"><expr pos:start="73:31" pos:end="73:32"><name pos:start="73:31" pos:end="73:32">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="81:5" pos:end="81:27"><expr pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:22"><name pos:start="81:5" pos:end="81:6">dc</name><operator pos:start="81:7" pos:end="81:8">-&gt;</operator><name pos:start="81:9" pos:end="81:22">delayed_branch</name></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <literal type="number" pos:start="81:26" pos:end="81:26">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:27"><expr pos:start="83:5" pos:end="83:26"><name pos:start="83:5" pos:end="83:16"><name pos:start="83:5" pos:end="83:6">dc</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:16">tb_flags</name></name> <operator pos:start="83:18" pos:end="83:19">|=</operator> <name pos:start="83:21" pos:end="83:26">D_FLAG</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:23"><expr pos:start="85:5" pos:end="85:22"><call pos:start="85:5" pos:end="85:22"><name pos:start="85:5" pos:end="85:18">gen_sync_flags</name><argument_list pos:start="85:19" pos:end="85:22">(<argument pos:start="85:20" pos:end="85:21"><expr pos:start="85:20" pos:end="85:21"><name pos:start="85:20" pos:end="85:21">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
