<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12600.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">alloc_sequence_buffers</name><parameter_list pos:start="1:34" pos:end="1:50">(<parameter pos:start="1:35" pos:end="1:49"><decl pos:start="1:35" pos:end="1:49"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:46">DiracContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:13">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:48"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">sbwidth</name>  <init pos:start="5:18" pos:end="5:48">= <expr pos:start="5:20" pos:end="5:48"><call pos:start="5:20" pos:end="5:48"><name pos:start="5:20" pos:end="5:27">DIVRNDUP</name><argument_list pos:start="5:28" pos:end="5:48">(<argument pos:start="5:29" pos:end="5:43"><expr pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:37">source</name><operator pos:start="5:38" pos:end="5:38">.</operator><name pos:start="5:39" pos:end="5:43">width</name></name></expr></argument>,  <argument pos:start="5:47" pos:end="5:47"><expr pos:start="5:47" pos:end="5:47"><literal type="number" pos:start="5:47" pos:end="5:47">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">sbheight</name> <init pos:start="7:18" pos:end="7:48">= <expr pos:start="7:20" pos:end="7:48"><call pos:start="7:20" pos:end="7:48"><name pos:start="7:20" pos:end="7:27">DIVRNDUP</name><argument_list pos:start="7:28" pos:end="7:48">(<argument pos:start="7:29" pos:end="7:44"><expr pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:37">source</name><operator pos:start="7:38" pos:end="7:38">.</operator><name pos:start="7:39" pos:end="7:44">height</name></name></expr></argument>, <argument pos:start="7:47" pos:end="7:47"><expr pos:start="7:47" pos:end="7:47"><literal type="number" pos:start="7:47" pos:end="7:47">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">w</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">h</name></decl>, <decl pos:start="9:18" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:28">top_padding</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:61">/* todo: think more about this / use or set Plane here */</comment>

    <for pos:start="15:5" pos:end="55:5">for <control pos:start="15:9" pos:end="15:27">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:22"><expr pos:start="15:17" pos:end="15:21"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <literal type="number" pos:start="15:21" pos:end="15:21">3</literal></expr>;</condition> <incr pos:start="15:24" pos:end="15:26"><expr pos:start="15:24" pos:end="15:26"><name pos:start="15:24" pos:end="15:24">i</name><operator pos:start="15:25" pos:end="15:26">++</operator></expr></incr>)</control> <block pos:start="15:29" pos:end="55:5">{<block_content pos:start="17:9" pos:end="53:35">

        <decl_stmt pos:start="17:9" pos:end="17:69"><decl pos:start="17:9" pos:end="17:68"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:21">max_xblen</name> <init pos:start="17:23" pos:end="17:68">= <expr pos:start="17:25" pos:end="17:68"><name pos:start="17:25" pos:end="17:37">MAX_BLOCKSIZE</name> <operator pos:start="17:39" pos:end="17:40">&gt;&gt;</operator> <operator pos:start="17:42" pos:end="17:42">(</operator><ternary pos:start="17:43" pos:end="17:67"><condition pos:start="17:43" pos:end="17:45"><expr pos:start="17:43" pos:end="17:43"><name pos:start="17:43" pos:end="17:43">i</name></expr> ?</condition><then pos:start="17:47" pos:end="17:63"> <expr pos:start="17:47" pos:end="17:63"><name pos:start="17:47" pos:end="17:63"><name pos:start="17:47" pos:end="17:47">s</name><operator pos:start="17:48" pos:end="17:49">-&gt;</operator><name pos:start="17:50" pos:end="17:63">chroma_x_shift</name></name></expr> </then><else pos:start="17:65" pos:end="17:67">: <expr pos:start="17:67" pos:end="17:67"><literal type="number" pos:start="17:67" pos:end="17:67">0</literal></expr></else></ternary><operator pos:start="17:68" pos:end="17:68">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:69"><decl pos:start="19:9" pos:end="19:68"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:21">max_yblen</name> <init pos:start="19:23" pos:end="19:68">= <expr pos:start="19:25" pos:end="19:68"><name pos:start="19:25" pos:end="19:37">MAX_BLOCKSIZE</name> <operator pos:start="19:39" pos:end="19:40">&gt;&gt;</operator> <operator pos:start="19:42" pos:end="19:42">(</operator><ternary pos:start="19:43" pos:end="19:67"><condition pos:start="19:43" pos:end="19:45"><expr pos:start="19:43" pos:end="19:43"><name pos:start="19:43" pos:end="19:43">i</name></expr> ?</condition><then pos:start="19:47" pos:end="19:63"> <expr pos:start="19:47" pos:end="19:63"><name pos:start="19:47" pos:end="19:63"><name pos:start="19:47" pos:end="19:47">s</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:63">chroma_y_shift</name></name></expr> </then><else pos:start="19:65" pos:end="19:67">: <expr pos:start="19:67" pos:end="19:67"><literal type="number" pos:start="19:67" pos:end="19:67">0</literal></expr></else></ternary><operator pos:start="19:68" pos:end="19:68">)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:60"><expr pos:start="21:9" pos:end="21:59"><name pos:start="21:9" pos:end="21:9">w</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:27"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:21">source</name><operator pos:start="21:22" pos:end="21:22">.</operator><name pos:start="21:23" pos:end="21:27">width</name></name>  <operator pos:start="21:30" pos:end="21:31">&gt;&gt;</operator> <operator pos:start="21:33" pos:end="21:33">(</operator><ternary pos:start="21:34" pos:end="21:58"><condition pos:start="21:34" pos:end="21:36"><expr pos:start="21:34" pos:end="21:34"><name pos:start="21:34" pos:end="21:34">i</name></expr> ?</condition><then pos:start="21:38" pos:end="21:54"> <expr pos:start="21:38" pos:end="21:54"><name pos:start="21:38" pos:end="21:54"><name pos:start="21:38" pos:end="21:38">s</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:54">chroma_x_shift</name></name></expr> </then><else pos:start="21:56" pos:end="21:58">: <expr pos:start="21:58" pos:end="21:58"><literal type="number" pos:start="21:58" pos:end="21:58">0</literal></expr></else></ternary><operator pos:start="21:59" pos:end="21:59">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:60"><expr pos:start="23:9" pos:end="23:59"><name pos:start="23:9" pos:end="23:9">h</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <name pos:start="23:13" pos:end="23:28"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:21">source</name><operator pos:start="23:22" pos:end="23:22">.</operator><name pos:start="23:23" pos:end="23:28">height</name></name> <operator pos:start="23:30" pos:end="23:31">&gt;&gt;</operator> <operator pos:start="23:33" pos:end="23:33">(</operator><ternary pos:start="23:34" pos:end="23:58"><condition pos:start="23:34" pos:end="23:36"><expr pos:start="23:34" pos:end="23:34"><name pos:start="23:34" pos:end="23:34">i</name></expr> ?</condition><then pos:start="23:38" pos:end="23:54"> <expr pos:start="23:38" pos:end="23:54"><name pos:start="23:38" pos:end="23:54"><name pos:start="23:38" pos:end="23:38">s</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:54">chroma_y_shift</name></name></expr> </then><else pos:start="23:56" pos:end="23:58">: <expr pos:start="23:58" pos:end="23:58"><literal type="number" pos:start="23:58" pos:end="23:58">0</literal></expr></else></ternary><operator pos:start="23:59" pos:end="23:59">)</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="27:9" pos:end="35:26">/* we allocate the max we support here since num decompositions can

         * change from frame to frame. Stride is aligned to 16 for SIMD, and

         * 1&lt;&lt;MAX_DWT_LEVELS top padding to avoid if(y&gt;0) in arith decoding

         * MAX_BLOCKSIZE padding for MC: blocks can spill up to half of that

         * on each side */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:60"><expr pos:start="37:9" pos:end="37:59"><name pos:start="37:9" pos:end="37:19">top_padding</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <call pos:start="37:23" pos:end="37:59"><name pos:start="37:23" pos:end="37:27">FFMAX</name><argument_list pos:start="37:28" pos:end="37:59">(<argument pos:start="37:29" pos:end="37:45"><expr pos:start="37:29" pos:end="37:45"><literal type="number" pos:start="37:29" pos:end="37:29">1</literal><operator pos:start="37:30" pos:end="37:31">&lt;&lt;</operator><name pos:start="37:32" pos:end="37:45">MAX_DWT_LEVELS</name></expr></argument>, <argument pos:start="37:48" pos:end="37:58"><expr pos:start="37:48" pos:end="37:58"><name pos:start="37:48" pos:end="37:56">max_yblen</name><operator pos:start="37:57" pos:end="37:57">/</operator><literal type="number" pos:start="37:58" pos:end="37:58">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:56"><expr pos:start="39:9" pos:end="39:55"><name pos:start="39:9" pos:end="39:9">w</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <call pos:start="39:13" pos:end="39:55"><name pos:start="39:13" pos:end="39:19">FFALIGN</name><argument_list pos:start="39:20" pos:end="39:55">(<argument pos:start="39:21" pos:end="39:51"><expr pos:start="39:21" pos:end="39:51"><call pos:start="39:21" pos:end="39:51"><name pos:start="39:21" pos:end="39:32">CALC_PADDING</name><argument_list pos:start="39:33" pos:end="39:51">(<argument pos:start="39:34" pos:end="39:34"><expr pos:start="39:34" pos:end="39:34"><name pos:start="39:34" pos:end="39:34">w</name></expr></argument>, <argument pos:start="39:37" pos:end="39:50"><expr pos:start="39:37" pos:end="39:50"><name pos:start="39:37" pos:end="39:50">MAX_DWT_LEVELS</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:54" pos:end="39:54"><expr pos:start="39:54" pos:end="39:54"><literal type="number" pos:start="39:54" pos:end="39:54">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="39:58" pos:end="39:98">/* FIXME: Should this be 16 for SSE??? */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:72"><expr pos:start="41:9" pos:end="41:71"><name pos:start="41:9" pos:end="41:9">h</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <name pos:start="41:13" pos:end="41:23">top_padding</name> <operator pos:start="41:25" pos:end="41:25">+</operator> <call pos:start="41:27" pos:end="41:57"><name pos:start="41:27" pos:end="41:38">CALC_PADDING</name><argument_list pos:start="41:39" pos:end="41:57">(<argument pos:start="41:40" pos:end="41:40"><expr pos:start="41:40" pos:end="41:40"><name pos:start="41:40" pos:end="41:40">h</name></expr></argument>, <argument pos:start="41:43" pos:end="41:56"><expr pos:start="41:43" pos:end="41:56"><name pos:start="41:43" pos:end="41:56">MAX_DWT_LEVELS</name></expr></argument>)</argument_list></call> <operator pos:start="41:59" pos:end="41:59">+</operator> <name pos:start="41:61" pos:end="41:69">max_yblen</name><operator pos:start="41:70" pos:end="41:70">/</operator><literal type="number" pos:start="41:71" pos:end="41:71">2</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:90"><expr pos:start="45:9" pos:end="45:89"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:16">plane</name><index pos:start="45:17" pos:end="45:19">[<expr pos:start="45:18" pos:end="45:18"><name pos:start="45:18" pos:end="45:18">i</name></expr>]</index></name><operator pos:start="45:20" pos:end="45:20">.</operator><name pos:start="45:21" pos:end="45:33">idwt_buf_base</name> <operator pos:start="45:35" pos:end="45:35">=</operator> <call pos:start="45:37" pos:end="45:89"><name pos:start="45:37" pos:end="45:52">av_mallocz_array</name><argument_list pos:start="45:53" pos:end="45:89">(<argument pos:start="45:54" pos:end="45:66"><expr pos:start="45:54" pos:end="45:66"><operator pos:start="45:54" pos:end="45:54">(</operator><name pos:start="45:55" pos:end="45:55">w</name><operator pos:start="45:56" pos:end="45:56">+</operator><name pos:start="45:57" pos:end="45:65">max_xblen</name><operator pos:start="45:66" pos:end="45:66">)</operator></expr></argument>, <argument pos:start="45:69" pos:end="45:88"><expr pos:start="45:69" pos:end="45:88"><name pos:start="45:69" pos:end="45:69">h</name> <operator pos:start="45:71" pos:end="45:71">*</operator> <sizeof pos:start="45:73" pos:end="45:88">sizeof<argument_list pos:start="45:79" pos:end="45:88">(<argument pos:start="45:80" pos:end="45:87"><expr pos:start="45:80" pos:end="45:87"><name pos:start="45:80" pos:end="45:87">IDWTELEM</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:78"><expr pos:start="47:9" pos:end="47:77"><name pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:16">plane</name><index pos:start="47:17" pos:end="47:19">[<expr pos:start="47:18" pos:end="47:18"><name pos:start="47:18" pos:end="47:18">i</name></expr>]</index></name><operator pos:start="47:20" pos:end="47:20">.</operator><name pos:start="47:21" pos:end="47:28">idwt_tmp</name>      <operator pos:start="47:35" pos:end="47:35">=</operator> <call pos:start="47:37" pos:end="47:77"><name pos:start="47:37" pos:end="47:51">av_malloc_array</name><argument_list pos:start="47:52" pos:end="47:77">(<argument pos:start="47:53" pos:end="47:58"><expr pos:start="47:53" pos:end="47:58"><operator pos:start="47:53" pos:end="47:53">(</operator><name pos:start="47:54" pos:end="47:54">w</name><operator pos:start="47:55" pos:end="47:55">+</operator><literal type="number" pos:start="47:56" pos:end="47:57">16</literal><operator pos:start="47:58" pos:end="47:58">)</operator></expr></argument>, <argument pos:start="47:61" pos:end="47:76"><expr pos:start="47:61" pos:end="47:76"><sizeof pos:start="47:61" pos:end="47:76">sizeof<argument_list pos:start="47:67" pos:end="47:76">(<argument pos:start="47:68" pos:end="47:75"><expr pos:start="47:68" pos:end="47:75"><name pos:start="47:68" pos:end="47:75">IDWTELEM</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:78"><expr pos:start="49:9" pos:end="49:77"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:16">plane</name><index pos:start="49:17" pos:end="49:19">[<expr pos:start="49:18" pos:end="49:18"><name pos:start="49:18" pos:end="49:18">i</name></expr>]</index></name><operator pos:start="49:20" pos:end="49:20">.</operator><name pos:start="49:21" pos:end="49:28">idwt_buf</name>      <operator pos:start="49:35" pos:end="49:35">=</operator> <name pos:start="49:37" pos:end="49:47"><name pos:start="49:37" pos:end="49:37">s</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:44">plane</name><index pos:start="49:45" pos:end="49:47">[<expr pos:start="49:46" pos:end="49:46"><name pos:start="49:46" pos:end="49:46">i</name></expr>]</index></name><operator pos:start="49:48" pos:end="49:48">.</operator><name pos:start="49:49" pos:end="49:61">idwt_buf_base</name> <operator pos:start="49:63" pos:end="49:63">+</operator> <name pos:start="49:65" pos:end="49:75">top_padding</name><operator pos:start="49:76" pos:end="49:76">*</operator><name pos:start="49:77" pos:end="49:77">w</name></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="53:35"><if pos:start="51:9" pos:end="53:35">if <condition pos:start="51:12" pos:end="51:64">(<expr pos:start="51:13" pos:end="51:63"><operator pos:start="51:13" pos:end="51:13">!</operator><name pos:start="51:14" pos:end="51:24"><name pos:start="51:14" pos:end="51:14">s</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:21">plane</name><index pos:start="51:22" pos:end="51:24">[<expr pos:start="51:23" pos:end="51:23"><name pos:start="51:23" pos:end="51:23">i</name></expr>]</index></name><operator pos:start="51:25" pos:end="51:25">.</operator><name pos:start="51:26" pos:end="51:38">idwt_buf_base</name> <operator pos:start="51:40" pos:end="51:41">||</operator> <operator pos:start="51:43" pos:end="51:43">!</operator><name pos:start="51:44" pos:end="51:54"><name pos:start="51:44" pos:end="51:44">s</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:51">plane</name><index pos:start="51:52" pos:end="51:54">[<expr pos:start="51:53" pos:end="51:53"><name pos:start="51:53" pos:end="51:53">i</name></expr>]</index></name><operator pos:start="51:55" pos:end="51:55">.</operator><name pos:start="51:56" pos:end="51:63">idwt_tmp</name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:35"><block_content pos:start="53:13" pos:end="53:35">

            <return pos:start="53:13" pos:end="53:35">return <expr pos:start="53:20" pos:end="53:34"><call pos:start="53:20" pos:end="53:34"><name pos:start="53:20" pos:end="53:26">AVERROR</name><argument_list pos:start="53:27" pos:end="53:34">(<argument pos:start="53:28" pos:end="53:33"><expr pos:start="53:28" pos:end="53:33"><name pos:start="53:28" pos:end="53:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="59:5" pos:end="59:24"><expr pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:5">w</name> <operator pos:start="59:7" pos:end="59:7">=</operator> <name pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:17">source</name><operator pos:start="59:18" pos:end="59:18">.</operator><name pos:start="59:19" pos:end="59:23">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:25"><expr pos:start="61:5" pos:end="61:24"><name pos:start="61:5" pos:end="61:5">h</name> <operator pos:start="61:7" pos:end="61:7">=</operator> <name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:17">source</name><operator pos:start="61:18" pos:end="61:18">.</operator><name pos:start="61:19" pos:end="61:24">height</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:48">/* fixme: allocate using real stride here */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:53"><expr pos:start="67:5" pos:end="67:52"><name pos:start="67:5" pos:end="67:14"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:14">sbsplit</name></name>  <operator pos:start="67:17" pos:end="67:17">=</operator> <call pos:start="67:19" pos:end="67:52"><name pos:start="67:19" pos:end="67:33">av_malloc_array</name><argument_list pos:start="67:34" pos:end="67:52">(<argument pos:start="67:35" pos:end="67:41"><expr pos:start="67:35" pos:end="67:41"><name pos:start="67:35" pos:end="67:41">sbwidth</name></expr></argument>, <argument pos:start="67:44" pos:end="67:51"><expr pos:start="67:44" pos:end="67:51"><name pos:start="67:44" pos:end="67:51">sbheight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:81"><expr pos:start="69:5" pos:end="69:80"><name pos:start="69:5" pos:end="69:15"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:15">blmotion</name></name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:80"><name pos:start="69:19" pos:end="69:33">av_malloc_array</name><argument_list pos:start="69:34" pos:end="69:80">(<argument pos:start="69:35" pos:end="69:41"><expr pos:start="69:35" pos:end="69:41"><name pos:start="69:35" pos:end="69:41">sbwidth</name></expr></argument>, <argument pos:start="69:44" pos:end="69:79"><expr pos:start="69:44" pos:end="69:79"><name pos:start="69:44" pos:end="69:51">sbheight</name> <operator pos:start="69:53" pos:end="69:53">*</operator> <literal type="number" pos:start="69:55" pos:end="69:56">16</literal> <operator pos:start="69:58" pos:end="69:58">*</operator> <sizeof pos:start="69:60" pos:end="69:79">sizeof<argument_list pos:start="69:66" pos:end="69:79">(<argument pos:start="69:67" pos:end="69:78"><expr pos:start="69:67" pos:end="69:78"><operator pos:start="69:67" pos:end="69:67">*</operator><name pos:start="69:68" pos:end="69:78"><name pos:start="69:68" pos:end="69:68">s</name><operator pos:start="69:69" pos:end="69:70">-&gt;</operator><name pos:start="69:71" pos:end="69:78">blmotion</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:69"><expr pos:start="71:5" pos:end="71:68"><name pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:27">edge_emu_buffer_base</name></name> <operator pos:start="71:29" pos:end="71:29">=</operator> <call pos:start="71:31" pos:end="71:68"><name pos:start="71:31" pos:end="71:45">av_malloc_array</name><argument_list pos:start="71:46" pos:end="71:68">(<argument pos:start="71:47" pos:end="71:52"><expr pos:start="71:47" pos:end="71:52"><operator pos:start="71:47" pos:end="71:47">(</operator><name pos:start="71:48" pos:end="71:48">w</name><operator pos:start="71:49" pos:end="71:49">+</operator><literal type="number" pos:start="71:50" pos:end="71:51">64</literal><operator pos:start="71:52" pos:end="71:52">)</operator></expr></argument>, <argument pos:start="71:55" pos:end="71:67"><expr pos:start="71:55" pos:end="71:67"><name pos:start="71:55" pos:end="71:67">MAX_BLOCKSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:96"><expr pos:start="75:5" pos:end="75:95"><name pos:start="75:5" pos:end="75:12"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:12">mctmp</name></name>     <operator pos:start="75:18" pos:end="75:18">=</operator> <call pos:start="75:20" pos:end="75:95"><name pos:start="75:20" pos:end="75:34">av_malloc_array</name><argument_list pos:start="75:35" pos:end="75:95">(<argument pos:start="75:36" pos:end="75:55"><expr pos:start="75:36" pos:end="75:55"><operator pos:start="75:36" pos:end="75:36">(</operator><name pos:start="75:37" pos:end="75:37">w</name><operator pos:start="75:38" pos:end="75:38">+</operator><literal type="number" pos:start="75:39" pos:end="75:41">64</literal><operator pos:start="75:41" pos:end="75:41">+</operator><name pos:start="75:42" pos:end="75:54">MAX_BLOCKSIZE</name><operator pos:start="75:55" pos:end="75:55">)</operator></expr></argument>, <argument pos:start="75:58" pos:end="75:94"><expr pos:start="75:58" pos:end="75:94"><operator pos:start="75:58" pos:end="75:58">(</operator><name pos:start="75:59" pos:end="75:59">h</name><operator pos:start="75:60" pos:end="75:60">+</operator><name pos:start="75:61" pos:end="75:73">MAX_BLOCKSIZE</name><operator pos:start="75:74" pos:end="75:74">)</operator> <operator pos:start="75:76" pos:end="75:76">*</operator> <sizeof pos:start="75:78" pos:end="75:94">sizeof<argument_list pos:start="75:84" pos:end="75:94">(<argument pos:start="75:85" pos:end="75:93"><expr pos:start="75:85" pos:end="75:93"><operator pos:start="75:85" pos:end="75:85">*</operator><name pos:start="75:86" pos:end="75:93"><name pos:start="75:86" pos:end="75:86">s</name><operator pos:start="75:87" pos:end="75:88">-&gt;</operator><name pos:start="75:89" pos:end="75:93">mctmp</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:58"><expr pos:start="77:5" pos:end="77:57"><name pos:start="77:5" pos:end="77:16"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:16">mcscratch</name></name> <operator pos:start="77:18" pos:end="77:18">=</operator> <call pos:start="77:20" pos:end="77:57"><name pos:start="77:20" pos:end="77:34">av_malloc_array</name><argument_list pos:start="77:35" pos:end="77:57">(<argument pos:start="77:36" pos:end="77:41"><expr pos:start="77:36" pos:end="77:41"><operator pos:start="77:36" pos:end="77:36">(</operator><name pos:start="77:37" pos:end="77:37">w</name><operator pos:start="77:38" pos:end="77:38">+</operator><literal type="number" pos:start="77:39" pos:end="77:40">64</literal><operator pos:start="77:41" pos:end="77:41">)</operator></expr></argument>, <argument pos:start="77:44" pos:end="77:56"><expr pos:start="77:44" pos:end="77:56"><name pos:start="77:44" pos:end="77:56">MAX_BLOCKSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="83:31"><if pos:start="81:5" pos:end="83:31">if <condition pos:start="81:8" pos:end="81:66">(<expr pos:start="81:9" pos:end="81:65"><operator pos:start="81:9" pos:end="81:9">!</operator><name pos:start="81:10" pos:end="81:19"><name pos:start="81:10" pos:end="81:10">s</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:19">sbsplit</name></name> <operator pos:start="81:21" pos:end="81:22">||</operator> <operator pos:start="81:24" pos:end="81:24">!</operator><name pos:start="81:25" pos:end="81:35"><name pos:start="81:25" pos:end="81:25">s</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:35">blmotion</name></name> <operator pos:start="81:37" pos:end="81:38">||</operator> <operator pos:start="81:40" pos:end="81:40">!</operator><name pos:start="81:41" pos:end="81:48"><name pos:start="81:41" pos:end="81:41">s</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:48">mctmp</name></name> <operator pos:start="81:50" pos:end="81:51">||</operator> <operator pos:start="81:53" pos:end="81:53">!</operator><name pos:start="81:54" pos:end="81:65"><name pos:start="81:54" pos:end="81:54">s</name><operator pos:start="81:55" pos:end="81:56">-&gt;</operator><name pos:start="81:57" pos:end="81:65">mcscratch</name></name></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:31"><block_content pos:start="83:9" pos:end="83:31">

        <return pos:start="83:9" pos:end="83:31">return <expr pos:start="83:16" pos:end="83:30"><call pos:start="83:16" pos:end="83:30"><name pos:start="83:16" pos:end="83:22">AVERROR</name><argument_list pos:start="83:23" pos:end="83:30">(<argument pos:start="83:24" pos:end="83:29"><expr pos:start="83:24" pos:end="83:29"><name pos:start="83:24" pos:end="83:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
