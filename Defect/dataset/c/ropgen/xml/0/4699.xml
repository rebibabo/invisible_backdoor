<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4699.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">av_force_cpu_flags</name><parameter_list pos:start="1:24" pos:end="1:32">(<parameter pos:start="1:25" pos:end="1:31"><decl pos:start="1:25" pos:end="1:31"><type pos:start="1:25" pos:end="1:27"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:31">arg</name></decl></parameter>)</parameter_list><block pos:start="1:33" pos:end="51:1">{<block_content pos:start="3:5" pos:end="49:24">

    <if_stmt pos:start="3:5" pos:end="43:5"><if pos:start="3:5" pos:end="43:5">if <condition pos:start="3:8" pos:end="37:36">(   <expr pos:start="3:12" pos:end="37:35"><operator pos:start="3:12" pos:end="3:12">(</operator><name pos:start="3:13" pos:end="3:15">arg</name> <operator pos:start="3:17" pos:end="3:17">&amp;</operator> <operator pos:start="3:19" pos:end="3:19">(</operator> <name pos:start="3:21" pos:end="3:37">AV_CPU_FLAG_3DNOW</name>    <operator pos:start="3:42" pos:end="3:42">|</operator>

                    <name pos:start="5:21" pos:end="5:40">AV_CPU_FLAG_3DNOWEXT</name> <operator pos:start="5:42" pos:end="5:42">|</operator>

                    <name pos:start="7:21" pos:end="7:38">AV_CPU_FLAG_MMXEXT</name>   <operator pos:start="7:42" pos:end="7:42">|</operator>

                    <name pos:start="9:21" pos:end="9:35">AV_CPU_FLAG_SSE</name>      <operator pos:start="9:42" pos:end="9:42">|</operator>

                    <name pos:start="11:21" pos:end="11:36">AV_CPU_FLAG_SSE2</name>     <operator pos:start="11:42" pos:end="11:42">|</operator>

                    <name pos:start="13:21" pos:end="13:40">AV_CPU_FLAG_SSE2SLOW</name> <operator pos:start="13:42" pos:end="13:42">|</operator>

                    <name pos:start="15:21" pos:end="15:36">AV_CPU_FLAG_SSE3</name>     <operator pos:start="15:42" pos:end="15:42">|</operator>

                    <name pos:start="17:21" pos:end="17:40">AV_CPU_FLAG_SSE3SLOW</name> <operator pos:start="17:42" pos:end="17:42">|</operator>

                    <name pos:start="19:21" pos:end="19:37">AV_CPU_FLAG_SSSE3</name>    <operator pos:start="19:42" pos:end="19:42">|</operator>

                    <name pos:start="21:21" pos:end="21:36">AV_CPU_FLAG_SSE4</name>     <operator pos:start="21:42" pos:end="21:42">|</operator>

                    <name pos:start="23:21" pos:end="23:37">AV_CPU_FLAG_SSE42</name>    <operator pos:start="23:42" pos:end="23:42">|</operator>

                    <name pos:start="25:21" pos:end="25:35">AV_CPU_FLAG_AVX</name>      <operator pos:start="25:42" pos:end="25:42">|</operator>

                    <name pos:start="27:21" pos:end="27:39">AV_CPU_FLAG_AVXSLOW</name>  <operator pos:start="27:42" pos:end="27:42">|</operator>

                    <name pos:start="29:21" pos:end="29:35">AV_CPU_FLAG_XOP</name>      <operator pos:start="29:42" pos:end="29:42">|</operator>

                    <name pos:start="31:21" pos:end="31:36">AV_CPU_FLAG_FMA3</name>     <operator pos:start="31:42" pos:end="31:42">|</operator>

                    <name pos:start="33:21" pos:end="33:36">AV_CPU_FLAG_FMA4</name>     <operator pos:start="33:42" pos:end="33:42">|</operator>

                    <name pos:start="35:21" pos:end="35:36">AV_CPU_FLAG_AVX2</name>     <operator pos:start="35:42" pos:end="35:42">)</operator><operator pos:start="35:43" pos:end="35:43">)</operator>

        <operator pos:start="37:9" pos:end="37:10">&amp;&amp;</operator> <operator pos:start="37:12" pos:end="37:12">!</operator><operator pos:start="37:13" pos:end="37:13">(</operator><name pos:start="37:14" pos:end="37:16">arg</name> <operator pos:start="37:18" pos:end="37:18">&amp;</operator> <name pos:start="37:20" pos:end="37:34">AV_CPU_FLAG_MMX</name><operator pos:start="37:35" pos:end="37:35">)</operator></expr>)</condition> <block pos:start="37:38" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:31">

        <expr_stmt pos:start="39:9" pos:end="39:73"><expr pos:start="39:9" pos:end="39:72"><call pos:start="39:9" pos:end="39:72"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:72">(<argument pos:start="39:16" pos:end="39:19"><expr pos:start="39:16" pos:end="39:19"><name pos:start="39:16" pos:end="39:19">NULL</name></expr></argument>, <argument pos:start="39:22" pos:end="39:35"><expr pos:start="39:22" pos:end="39:35"><name pos:start="39:22" pos:end="39:35">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="39:38" pos:end="39:71"><expr pos:start="39:38" pos:end="39:71"><literal type="string" pos:start="39:38" pos:end="39:71">"MMX implied by specified flags\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:11">arg</name> <operator pos:start="41:13" pos:end="41:14">|=</operator> <name pos:start="41:16" pos:end="41:30">AV_CPU_FLAG_MMX</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:18"><expr pos:start="47:5" pos:end="47:17"><name pos:start="47:5" pos:end="47:9">flags</name>   <operator pos:start="47:13" pos:end="47:13">=</operator> <name pos:start="47:15" pos:end="47:17">arg</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:11">checked</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <name pos:start="49:15" pos:end="49:17">arg</name> <operator pos:start="49:19" pos:end="49:20">!=</operator> <operator pos:start="49:22" pos:end="49:22">-</operator><literal type="number" pos:start="49:23" pos:end="49:23">1</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
