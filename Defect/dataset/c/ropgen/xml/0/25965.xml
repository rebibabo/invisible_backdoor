<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25965.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">do_interrupt_real</name><parameter_list pos:start="1:30" pos:end="3:55">(<parameter pos:start="1:31" pos:end="1:39"><decl pos:start="1:31" pos:end="1:39"><type pos:start="1:31" pos:end="1:39"><name pos:start="1:31" pos:end="1:33">int</name></type> <name pos:start="1:35" pos:end="1:39">intno</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:51"><decl pos:start="1:42" pos:end="1:51"><type pos:start="1:42" pos:end="1:51"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:51">is_int</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:67"><decl pos:start="1:54" pos:end="1:67"><type pos:start="1:54" pos:end="1:67"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:67">error_code</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:54"><decl pos:start="3:34" pos:end="3:54"><type pos:start="3:34" pos:end="3:54"><name pos:start="3:34" pos:end="3:41">unsigned</name> <name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:54">next_eip</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="73:1">{<block_content pos:start="7:5" pos:end="71:60">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">SegmentCache</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">dt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">ptr</name></decl>, <decl pos:start="9:19" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">ssp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">selector</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:19">offset</name></decl>, <decl pos:start="13:22" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:22" pos:end="13:24">esp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:19">old_cs</name></decl>, <decl pos:start="15:22" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:22" pos:end="15:28">old_eip</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:31">/* real mode (simpler !) */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:6">dt</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <operator pos:start="21:10" pos:end="21:10">&amp;</operator><name pos:start="21:11" pos:end="21:18"><name pos:start="21:11" pos:end="21:13">env</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:18">idt</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:55"><if pos:start="23:5" pos:end="25:55">if <condition pos:start="23:8" pos:end="23:34">(<expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:13">intno</name> <operator pos:start="23:15" pos:end="23:15">*</operator> <literal type="number" pos:start="23:17" pos:end="23:19">4</literal> <operator pos:start="23:19" pos:end="23:19">+</operator> <literal type="number" pos:start="23:21" pos:end="23:21">3</literal> <operator pos:start="23:23" pos:end="23:23">&gt;</operator> <name pos:start="23:25" pos:end="23:33"><name pos:start="23:25" pos:end="23:26">dt</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:33">limit</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:55"><block_content pos:start="25:9" pos:end="25:55">

        <expr_stmt pos:start="25:9" pos:end="25:55"><expr pos:start="25:9" pos:end="25:54"><call pos:start="25:9" pos:end="25:54"><name pos:start="25:9" pos:end="25:27">raise_exception_err</name><argument_list pos:start="25:28" pos:end="25:54">(<argument pos:start="25:29" pos:end="25:38"><expr pos:start="25:29" pos:end="25:38"><name pos:start="25:29" pos:end="25:38">EXCP0D_GPF</name></expr></argument>, <argument pos:start="25:41" pos:end="25:53"><expr pos:start="25:41" pos:end="25:53"><name pos:start="25:41" pos:end="25:45">intno</name> <operator pos:start="25:47" pos:end="25:47">*</operator> <literal type="number" pos:start="25:49" pos:end="25:51">8</literal> <operator pos:start="25:51" pos:end="25:51">+</operator> <literal type="number" pos:start="25:53" pos:end="25:53">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:31"><expr pos:start="27:5" pos:end="27:30"><name pos:start="27:5" pos:end="27:7">ptr</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <name pos:start="27:11" pos:end="27:18"><name pos:start="27:11" pos:end="27:12">dt</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:18">base</name></name> <operator pos:start="27:20" pos:end="27:20">+</operator> <name pos:start="27:22" pos:end="27:26">intno</name> <operator pos:start="27:28" pos:end="27:28">*</operator> <literal type="number" pos:start="27:30" pos:end="27:30">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:23"><expr pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:10">offset</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:22"><name pos:start="29:14" pos:end="29:17">lduw</name><argument_list pos:start="29:18" pos:end="29:22">(<argument pos:start="29:19" pos:end="29:21"><expr pos:start="29:19" pos:end="29:21"><name pos:start="29:19" pos:end="29:21">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:12">selector</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:28"><name pos:start="31:16" pos:end="31:19">lduw</name><argument_list pos:start="31:20" pos:end="31:28">(<argument pos:start="31:21" pos:end="31:27"><expr pos:start="31:21" pos:end="31:27"><name pos:start="31:21" pos:end="31:23">ptr</name> <operator pos:start="31:25" pos:end="31:25">+</operator> <literal type="number" pos:start="31:27" pos:end="31:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:7">esp</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <name pos:start="33:11" pos:end="33:26"><name pos:start="33:11" pos:end="33:13">env</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:19">regs</name><index pos:start="33:20" pos:end="33:26">[<expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:25">R_ESP</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:7">ssp</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <name pos:start="35:11" pos:end="35:25"><name pos:start="35:11" pos:end="35:13">env</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:19">segs</name><index pos:start="35:20" pos:end="35:25">[<expr pos:start="35:21" pos:end="35:24"><name pos:start="35:21" pos:end="35:24">R_SS</name></expr>]</index></name><operator pos:start="35:26" pos:end="35:26">.</operator><name pos:start="35:27" pos:end="35:30">base</name></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:27"><if pos:start="37:5" pos:end="39:27">if <condition pos:start="37:8" pos:end="37:15">(<expr pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:14">is_int</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:27"><block_content pos:start="39:9" pos:end="39:27">

        <expr_stmt pos:start="39:9" pos:end="39:27"><expr pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:15">old_eip</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:26">next_eip</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="41:5" pos:end="43:27">else<block type="pseudo" pos:start="43:9" pos:end="43:27"><block_content pos:start="43:9" pos:end="43:27">

        <expr_stmt pos:start="43:9" pos:end="43:27"><expr pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:15">old_eip</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:26"><name pos:start="43:19" pos:end="43:21">env</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:26">eip</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:38"><expr pos:start="45:5" pos:end="45:37"><name pos:start="45:5" pos:end="45:10">old_cs</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:28"><name pos:start="45:14" pos:end="45:16">env</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:22">segs</name><index pos:start="45:23" pos:end="45:28">[<expr pos:start="45:24" pos:end="45:27"><name pos:start="45:24" pos:end="45:27">R_CS</name></expr>]</index></name><operator pos:start="45:29" pos:end="45:29">.</operator><name pos:start="45:30" pos:end="45:37">selector</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:13"><expr pos:start="47:5" pos:end="47:12"><name pos:start="47:5" pos:end="47:7">esp</name> <operator pos:start="47:9" pos:end="47:10">-=</operator> <literal type="number" pos:start="47:12" pos:end="47:12">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:48"><expr pos:start="49:5" pos:end="49:47"><call pos:start="49:5" pos:end="49:47"><name pos:start="49:5" pos:end="49:7">stw</name><argument_list pos:start="49:8" pos:end="49:47">(<argument pos:start="49:9" pos:end="49:28"><expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:11">ssp</name> <operator pos:start="49:13" pos:end="49:13">+</operator> <operator pos:start="49:15" pos:end="49:15">(</operator><name pos:start="49:16" pos:end="49:18">esp</name> <operator pos:start="49:20" pos:end="49:20">&amp;</operator> <literal type="number" pos:start="49:22" pos:end="49:27">0xffff</literal><operator pos:start="49:28" pos:end="49:28">)</operator></expr></argument>, <argument pos:start="49:31" pos:end="49:46"><expr pos:start="49:31" pos:end="49:46"><call pos:start="49:31" pos:end="49:46"><name pos:start="49:31" pos:end="49:44">compute_eflags</name><argument_list pos:start="49:45" pos:end="49:46">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:13"><expr pos:start="51:5" pos:end="51:12"><name pos:start="51:5" pos:end="51:7">esp</name> <operator pos:start="51:9" pos:end="51:10">-=</operator> <literal type="number" pos:start="51:12" pos:end="51:12">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:38"><expr pos:start="53:5" pos:end="53:37"><call pos:start="53:5" pos:end="53:37"><name pos:start="53:5" pos:end="53:7">stw</name><argument_list pos:start="53:8" pos:end="53:37">(<argument pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:11">ssp</name> <operator pos:start="53:13" pos:end="53:13">+</operator> <operator pos:start="53:15" pos:end="53:15">(</operator><name pos:start="53:16" pos:end="53:18">esp</name> <operator pos:start="53:20" pos:end="53:20">&amp;</operator> <literal type="number" pos:start="53:22" pos:end="53:27">0xffff</literal><operator pos:start="53:28" pos:end="53:28">)</operator></expr></argument>, <argument pos:start="53:31" pos:end="53:36"><expr pos:start="53:31" pos:end="53:36"><name pos:start="53:31" pos:end="53:36">old_cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:13"><expr pos:start="55:5" pos:end="55:12"><name pos:start="55:5" pos:end="55:7">esp</name> <operator pos:start="55:9" pos:end="55:10">-=</operator> <literal type="number" pos:start="55:12" pos:end="55:12">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:39"><expr pos:start="57:5" pos:end="57:38"><call pos:start="57:5" pos:end="57:38"><name pos:start="57:5" pos:end="57:7">stw</name><argument_list pos:start="57:8" pos:end="57:38">(<argument pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:11">ssp</name> <operator pos:start="57:13" pos:end="57:13">+</operator> <operator pos:start="57:15" pos:end="57:15">(</operator><name pos:start="57:16" pos:end="57:18">esp</name> <operator pos:start="57:20" pos:end="57:20">&amp;</operator> <literal type="number" pos:start="57:22" pos:end="57:27">0xffff</literal><operator pos:start="57:28" pos:end="57:28">)</operator></expr></argument>, <argument pos:start="57:31" pos:end="57:37"><expr pos:start="57:31" pos:end="57:37"><name pos:start="57:31" pos:end="57:37">old_eip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <comment type="block" pos:start="61:5" pos:end="61:32">/* update processor state */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:69"><expr pos:start="63:5" pos:end="63:68"><name pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:7">env</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:13">regs</name><index pos:start="63:14" pos:end="63:20">[<expr pos:start="63:15" pos:end="63:19"><name pos:start="63:15" pos:end="63:19">R_ESP</name></expr>]</index></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <operator pos:start="63:24" pos:end="63:24">(</operator><name pos:start="63:25" pos:end="63:40"><name pos:start="63:25" pos:end="63:27">env</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:33">regs</name><index pos:start="63:34" pos:end="63:40">[<expr pos:start="63:35" pos:end="63:39"><name pos:start="63:35" pos:end="63:39">R_ESP</name></expr>]</index></name> <operator pos:start="63:42" pos:end="63:42">&amp;</operator> <operator pos:start="63:44" pos:end="63:44">~</operator><literal type="number" pos:start="63:45" pos:end="63:50">0xffff</literal><operator pos:start="63:51" pos:end="63:51">)</operator> <operator pos:start="63:53" pos:end="63:53">|</operator> <operator pos:start="63:55" pos:end="63:55">(</operator><name pos:start="63:56" pos:end="63:58">esp</name> <operator pos:start="63:60" pos:end="63:60">&amp;</operator> <literal type="number" pos:start="63:62" pos:end="63:67">0xffff</literal><operator pos:start="63:68" pos:end="63:68">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:22"><expr pos:start="65:5" pos:end="65:21"><name pos:start="65:5" pos:end="65:12"><name pos:start="65:5" pos:end="65:7">env</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:12">eip</name></name> <operator pos:start="65:14" pos:end="65:14">=</operator> <name pos:start="65:16" pos:end="65:21">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:40"><expr pos:start="67:5" pos:end="67:39"><name pos:start="67:5" pos:end="67:19"><name pos:start="67:5" pos:end="67:7">env</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:13">segs</name><index pos:start="67:14" pos:end="67:19">[<expr pos:start="67:15" pos:end="67:18"><name pos:start="67:15" pos:end="67:18">R_CS</name></expr>]</index></name><operator pos:start="67:20" pos:end="67:20">.</operator><name pos:start="67:21" pos:end="67:28">selector</name> <operator pos:start="67:30" pos:end="67:30">=</operator> <name pos:start="67:32" pos:end="67:39">selector</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:54"><expr pos:start="69:5" pos:end="69:53"><name pos:start="69:5" pos:end="69:19"><name pos:start="69:5" pos:end="69:7">env</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:13">segs</name><index pos:start="69:14" pos:end="69:19">[<expr pos:start="69:15" pos:end="69:18"><name pos:start="69:15" pos:end="69:18">R_CS</name></expr>]</index></name><operator pos:start="69:20" pos:end="69:20">.</operator><name pos:start="69:21" pos:end="69:24">base</name> <operator pos:start="69:26" pos:end="69:26">=</operator> <operator pos:start="69:28" pos:end="69:28">(</operator><name pos:start="69:29" pos:end="69:35">uint8_t</name> <operator pos:start="69:37" pos:end="69:37">*</operator><operator pos:start="69:38" pos:end="69:38">)</operator><operator pos:start="69:39" pos:end="69:39">(</operator><name pos:start="69:40" pos:end="69:47">selector</name> <operator pos:start="69:49" pos:end="69:50">&lt;&lt;</operator> <literal type="number" pos:start="69:52" pos:end="69:52">4</literal><operator pos:start="69:53" pos:end="69:53">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:60"><expr pos:start="71:5" pos:end="71:59"><name pos:start="71:5" pos:end="71:15"><name pos:start="71:5" pos:end="71:7">env</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:15">eflags</name></name> <operator pos:start="71:17" pos:end="71:18">&amp;=</operator> <operator pos:start="71:20" pos:end="71:20">~</operator><operator pos:start="71:21" pos:end="71:21">(</operator><name pos:start="71:22" pos:end="71:28">IF_MASK</name> <operator pos:start="71:30" pos:end="71:30">|</operator> <name pos:start="71:32" pos:end="71:38">TF_MASK</name> <operator pos:start="71:40" pos:end="71:40">|</operator> <name pos:start="71:42" pos:end="71:48">AC_MASK</name> <operator pos:start="71:50" pos:end="71:50">|</operator> <name pos:start="71:52" pos:end="71:58">RF_MASK</name><operator pos:start="71:59" pos:end="71:59">)</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
