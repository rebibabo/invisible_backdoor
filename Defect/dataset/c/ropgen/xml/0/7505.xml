<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7505.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">nbd_parse_uri</name><parameter_list pos:start="1:25" pos:end="1:62">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><specifier pos:start="1:26" pos:end="1:30">const</specifier> <name pos:start="1:32" pos:end="1:35">char</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:45">filename</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:61"><decl pos:start="1:48" pos:end="1:61"><type pos:start="1:48" pos:end="1:61"><name pos:start="1:48" pos:end="1:52">QDict</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:61">options</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="157:1">{<block_content pos:start="5:5" pos:end="155:15">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:7">URI</name> <modifier pos:start="5:9" pos:end="5:9">*</modifier></type><name pos:start="5:10" pos:end="5:12">uri</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">QueryParams</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">qp</name> <init pos:start="9:21" pos:end="9:26">= <expr pos:start="9:23" pos:end="9:26"><name pos:start="9:23" pos:end="9:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">bool</name></type> <name pos:start="13:10" pos:end="13:16">is_unix</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:30"><expr pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:7">uri</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:29"><name pos:start="17:11" pos:end="17:19">uri_parse</name><argument_list pos:start="17:20" pos:end="17:29">(<argument pos:start="17:21" pos:end="17:28"><expr pos:start="17:21" pos:end="17:28"><name pos:start="17:21" pos:end="17:28">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:13">(<expr pos:start="19:9" pos:end="19:12"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:12">uri</name></expr>)</condition> <block pos:start="19:15" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:23">

        <return pos:start="21:9" pos:end="21:23">return <expr pos:start="21:16" pos:end="21:22"><operator pos:start="21:16" pos:end="21:16">-</operator><name pos:start="21:17" pos:end="21:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:19">/* transport */</comment>

    <if_stmt pos:start="29:5" pos:end="47:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:36">(<expr pos:start="29:9" pos:end="29:35"><operator pos:start="29:9" pos:end="29:9">!</operator><call pos:start="29:10" pos:end="29:35"><name pos:start="29:10" pos:end="29:15">strcmp</name><argument_list pos:start="29:16" pos:end="29:35">(<argument pos:start="29:17" pos:end="29:27"><expr pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:19">uri</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:27">scheme</name></name></expr></argument>, <argument pos:start="29:30" pos:end="29:34"><expr pos:start="29:30" pos:end="29:34"><literal type="string" pos:start="29:30" pos:end="29:34">"nbd"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:38" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:24">

        <expr_stmt pos:start="31:9" pos:end="31:24"><expr pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:15">is_unix</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:23">false</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="33:7" pos:end="37:5">else if <condition pos:start="33:15" pos:end="33:47">(<expr pos:start="33:16" pos:end="33:46"><operator pos:start="33:16" pos:end="33:16">!</operator><call pos:start="33:17" pos:end="33:46"><name pos:start="33:17" pos:end="33:22">strcmp</name><argument_list pos:start="33:23" pos:end="33:46">(<argument pos:start="33:24" pos:end="33:34"><expr pos:start="33:24" pos:end="33:34"><name pos:start="33:24" pos:end="33:34"><name pos:start="33:24" pos:end="33:26">uri</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:34">scheme</name></name></expr></argument>, <argument pos:start="33:37" pos:end="33:45"><expr pos:start="33:37" pos:end="33:45"><literal type="string" pos:start="33:37" pos:end="33:45">"nbd+tcp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:49" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:24">

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:15">is_unix</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:23">false</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="37:7" pos:end="41:5">else if <condition pos:start="37:15" pos:end="37:48">(<expr pos:start="37:16" pos:end="37:47"><operator pos:start="37:16" pos:end="37:16">!</operator><call pos:start="37:17" pos:end="37:47"><name pos:start="37:17" pos:end="37:22">strcmp</name><argument_list pos:start="37:23" pos:end="37:47">(<argument pos:start="37:24" pos:end="37:34"><expr pos:start="37:24" pos:end="37:34"><name pos:start="37:24" pos:end="37:34"><name pos:start="37:24" pos:end="37:26">uri</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:34">scheme</name></name></expr></argument>, <argument pos:start="37:37" pos:end="37:46"><expr pos:start="37:37" pos:end="37:46"><literal type="string" pos:start="37:37" pos:end="37:46">"nbd+unix"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:50" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:23">

        <expr_stmt pos:start="39:9" pos:end="39:23"><expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:15">is_unix</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:22">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="47:5">else <block pos:start="41:12" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:17">

        <expr_stmt pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <operator pos:start="43:15" pos:end="43:15">-</operator><name pos:start="43:16" pos:end="43:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:17">goto <name pos:start="45:14" pos:end="45:16">out</name>;</goto>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:36"><expr pos:start="51:5" pos:end="51:35"><name pos:start="51:5" pos:end="51:5">p</name> <operator pos:start="51:7" pos:end="51:7">=</operator> <ternary pos:start="51:9" pos:end="51:35"><condition pos:start="51:9" pos:end="51:19"><expr pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:11">uri</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:17">path</name></name></expr> ?</condition><then pos:start="51:21" pos:end="51:29"> <expr pos:start="51:21" pos:end="51:29"><name pos:start="51:21" pos:end="51:29"><name pos:start="51:21" pos:end="51:23">uri</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:29">path</name></name></expr> </then><else pos:start="51:31" pos:end="51:35">: <expr pos:start="51:33" pos:end="51:35"><literal type="string" pos:start="51:33" pos:end="51:35">"/"</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:24"><expr pos:start="53:5" pos:end="53:23"><name pos:start="53:5" pos:end="53:5">p</name> <operator pos:start="53:7" pos:end="53:8">+=</operator> <call pos:start="53:10" pos:end="53:23"><name pos:start="53:10" pos:end="53:15">strspn</name><argument_list pos:start="53:16" pos:end="53:23">(<argument pos:start="53:17" pos:end="53:17"><expr pos:start="53:17" pos:end="53:17"><name pos:start="53:17" pos:end="53:17">p</name></expr></argument>, <argument pos:start="53:20" pos:end="53:22"><expr pos:start="53:20" pos:end="53:22"><literal type="string" pos:start="53:20" pos:end="53:22">"/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:13">(<expr pos:start="55:9" pos:end="55:12"><name pos:start="55:9" pos:end="55:12"><name pos:start="55:9" pos:end="55:9">p</name><index pos:start="55:10" pos:end="55:12">[<expr pos:start="55:11" pos:end="55:11"><literal type="number" pos:start="55:11" pos:end="55:11">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="55:15" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:58">

        <expr_stmt pos:start="57:9" pos:end="57:58"><expr pos:start="57:9" pos:end="57:57"><call pos:start="57:9" pos:end="57:57"><name pos:start="57:9" pos:end="57:17">qdict_put</name><argument_list pos:start="57:18" pos:end="57:57">(<argument pos:start="57:19" pos:end="57:25"><expr pos:start="57:19" pos:end="57:25"><name pos:start="57:19" pos:end="57:25">options</name></expr></argument>, <argument pos:start="57:28" pos:end="57:35"><expr pos:start="57:28" pos:end="57:35"><literal type="string" pos:start="57:28" pos:end="57:35">"export"</literal></expr></argument>, <argument pos:start="57:38" pos:end="57:56"><expr pos:start="57:38" pos:end="57:56"><call pos:start="57:38" pos:end="57:56"><name pos:start="57:38" pos:end="57:53">qstring_from_str</name><argument_list pos:start="57:54" pos:end="57:56">(<argument pos:start="57:55" pos:end="57:55"><expr pos:start="57:55" pos:end="57:55"><name pos:start="57:55" pos:end="57:55">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:40"><expr pos:start="63:5" pos:end="63:39"><name pos:start="63:5" pos:end="63:6">qp</name> <operator pos:start="63:8" pos:end="63:8">=</operator> <call pos:start="63:10" pos:end="63:39"><name pos:start="63:10" pos:end="63:27">query_params_parse</name><argument_list pos:start="63:28" pos:end="63:39">(<argument pos:start="63:29" pos:end="63:38"><expr pos:start="63:29" pos:end="63:38"><name pos:start="63:29" pos:end="63:38"><name pos:start="63:29" pos:end="63:31">uri</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:38">query</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:64">(<expr pos:start="65:9" pos:end="65:63"><name pos:start="65:9" pos:end="65:13"><name pos:start="65:9" pos:end="65:10">qp</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:13">n</name></name> <operator pos:start="65:15" pos:end="65:15">&gt;</operator> <literal type="number" pos:start="65:17" pos:end="65:17">1</literal> <operator pos:start="65:19" pos:end="65:20">||</operator> <operator pos:start="65:22" pos:end="65:22">(</operator><name pos:start="65:23" pos:end="65:29">is_unix</name> <operator pos:start="65:31" pos:end="65:32">&amp;&amp;</operator> <operator pos:start="65:34" pos:end="65:34">!</operator><name pos:start="65:35" pos:end="65:39"><name pos:start="65:35" pos:end="65:36">qp</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:39">n</name></name><operator pos:start="65:40" pos:end="65:40">)</operator> <operator pos:start="65:42" pos:end="65:43">||</operator> <operator pos:start="65:45" pos:end="65:45">(</operator><operator pos:start="65:46" pos:end="65:46">!</operator><name pos:start="65:47" pos:end="65:53">is_unix</name> <operator pos:start="65:55" pos:end="65:56">&amp;&amp;</operator> <name pos:start="65:58" pos:end="65:62"><name pos:start="65:58" pos:end="65:59">qp</name><operator pos:start="65:60" pos:end="65:61">-&gt;</operator><name pos:start="65:62" pos:end="65:62">n</name></name><operator pos:start="65:63" pos:end="65:63">)</operator></expr>)</condition> <block pos:start="65:66" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:17">

        <expr_stmt pos:start="67:9" pos:end="67:22"><expr pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <operator pos:start="67:15" pos:end="67:15">-</operator><name pos:start="67:16" pos:end="67:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="69:9" pos:end="69:17">goto <name pos:start="69:14" pos:end="69:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="141:5"><if pos:start="75:5" pos:end="93:5">if <condition pos:start="75:8" pos:end="75:16">(<expr pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:15">is_unix</name></expr>)</condition> <block pos:start="75:18" pos:end="93:5">{<block_content pos:start="79:9" pos:end="91:52">

        <comment type="block" pos:start="77:9" pos:end="77:44">/* nbd+unix:///export?socket=path */</comment>

        <if_stmt pos:start="79:9" pos:end="85:9"><if pos:start="79:9" pos:end="85:9">if <condition pos:start="79:12" pos:end="79:72">(<expr pos:start="79:13" pos:end="79:71"><name pos:start="79:13" pos:end="79:23"><name pos:start="79:13" pos:end="79:15">uri</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:23">server</name></name> <operator pos:start="79:25" pos:end="79:26">||</operator> <name pos:start="79:28" pos:end="79:36"><name pos:start="79:28" pos:end="79:30">uri</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:36">port</name></name> <operator pos:start="79:38" pos:end="79:39">||</operator> <call pos:start="79:41" pos:end="79:71"><name pos:start="79:41" pos:end="79:46">strcmp</name><argument_list pos:start="79:47" pos:end="79:71">(<argument pos:start="79:48" pos:end="79:60"><expr pos:start="79:48" pos:end="79:60"><name pos:start="79:48" pos:end="79:55"><name pos:start="79:48" pos:end="79:49">qp</name><operator pos:start="79:50" pos:end="79:51">-&gt;</operator><name pos:start="79:52" pos:end="79:52">p</name><index pos:start="79:53" pos:end="79:55">[<expr pos:start="79:54" pos:end="79:54"><literal type="number" pos:start="79:54" pos:end="79:54">0</literal></expr>]</index></name><operator pos:start="79:56" pos:end="79:56">.</operator><name pos:start="79:57" pos:end="79:60">name</name></expr></argument>, <argument pos:start="79:63" pos:end="79:70"><expr pos:start="79:63" pos:end="79:70"><literal type="string" pos:start="79:63" pos:end="79:70">"socket"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:74" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:21">

            <expr_stmt pos:start="81:13" pos:end="81:26"><expr pos:start="81:13" pos:end="81:25"><name pos:start="81:13" pos:end="81:15">ret</name> <operator pos:start="81:17" pos:end="81:17">=</operator> <operator pos:start="81:19" pos:end="81:19">-</operator><name pos:start="81:20" pos:end="81:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="83:13" pos:end="83:21">goto <name pos:start="83:18" pos:end="83:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:68"><expr pos:start="87:9" pos:end="87:67"><call pos:start="87:9" pos:end="87:67"><name pos:start="87:9" pos:end="87:17">qdict_put</name><argument_list pos:start="87:18" pos:end="87:67">(<argument pos:start="87:19" pos:end="87:25"><expr pos:start="87:19" pos:end="87:25"><name pos:start="87:19" pos:end="87:25">options</name></expr></argument>, <argument pos:start="87:28" pos:end="87:40"><expr pos:start="87:28" pos:end="87:40"><literal type="string" pos:start="87:28" pos:end="87:40">"server.type"</literal></expr></argument>, <argument pos:start="87:43" pos:end="87:66"><expr pos:start="87:43" pos:end="87:66"><call pos:start="87:43" pos:end="87:66"><name pos:start="87:43" pos:end="87:58">qstring_from_str</name><argument_list pos:start="87:59" pos:end="87:66">(<argument pos:start="87:60" pos:end="87:65"><expr pos:start="87:60" pos:end="87:65"><literal type="string" pos:start="87:60" pos:end="87:65">"unix"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="91:52"><expr pos:start="89:9" pos:end="91:51"><call pos:start="89:9" pos:end="91:51"><name pos:start="89:9" pos:end="89:17">qdict_put</name><argument_list pos:start="89:18" pos:end="91:51">(<argument pos:start="89:19" pos:end="89:25"><expr pos:start="89:19" pos:end="89:25"><name pos:start="89:19" pos:end="89:25">options</name></expr></argument>, <argument pos:start="89:28" pos:end="89:45"><expr pos:start="89:28" pos:end="89:45"><literal type="string" pos:start="89:28" pos:end="89:45">"server.data.path"</literal></expr></argument>,

                  <argument pos:start="91:19" pos:end="91:50"><expr pos:start="91:19" pos:end="91:50"><call pos:start="91:19" pos:end="91:50"><name pos:start="91:19" pos:end="91:34">qstring_from_str</name><argument_list pos:start="91:35" pos:end="91:50">(<argument pos:start="91:36" pos:end="91:49"><expr pos:start="91:36" pos:end="91:49"><name pos:start="91:36" pos:end="91:43"><name pos:start="91:36" pos:end="91:37">qp</name><operator pos:start="91:38" pos:end="91:39">-&gt;</operator><name pos:start="91:40" pos:end="91:40">p</name><index pos:start="91:41" pos:end="91:43">[<expr pos:start="91:42" pos:end="91:42"><literal type="number" pos:start="91:42" pos:end="91:42">0</literal></expr>]</index></name><operator pos:start="91:44" pos:end="91:44">.</operator><name pos:start="91:45" pos:end="91:49">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="93:7" pos:end="141:5">else <block pos:start="93:12" pos:end="141:5">{<block_content pos:start="95:9" pos:end="139:25">

        <decl_stmt pos:start="95:9" pos:end="95:22"><decl pos:start="95:9" pos:end="95:21"><type pos:start="95:9" pos:end="95:17"><name pos:start="95:9" pos:end="95:15">QString</name> <modifier pos:start="95:17" pos:end="95:17">*</modifier></type><name pos:start="95:18" pos:end="95:21">host</name></decl>;</decl_stmt>

        <decl_stmt pos:start="97:9" pos:end="97:23"><decl pos:start="97:9" pos:end="97:22"><type pos:start="97:9" pos:end="97:14"><name pos:start="97:9" pos:end="97:12">char</name> <modifier pos:start="97:14" pos:end="97:14">*</modifier></type><name pos:start="97:15" pos:end="97:22">port_str</name></decl>;</decl_stmt>



        <comment type="block" pos:start="101:9" pos:end="101:44">/* nbd[+tcp]://host[:port]/export */</comment>

        <if_stmt pos:start="103:9" pos:end="109:9"><if pos:start="103:9" pos:end="109:9">if <condition pos:start="103:12" pos:end="103:25">(<expr pos:start="103:13" pos:end="103:24"><operator pos:start="103:13" pos:end="103:13">!</operator><name pos:start="103:14" pos:end="103:24"><name pos:start="103:14" pos:end="103:16">uri</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:24">server</name></name></expr>)</condition> <block pos:start="103:27" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:21">

            <expr_stmt pos:start="105:13" pos:end="105:26"><expr pos:start="105:13" pos:end="105:25"><name pos:start="105:13" pos:end="105:15">ret</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <operator pos:start="105:19" pos:end="105:19">-</operator><name pos:start="105:20" pos:end="105:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="107:13" pos:end="107:21">goto <name pos:start="107:18" pos:end="107:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="113:9" pos:end="113:52">/* strip braces from literal IPv6 address */</comment>

        <if_stmt pos:start="115:9" pos:end="125:9"><if pos:start="115:9" pos:end="121:9">if <condition pos:start="115:12" pos:end="115:34">(<expr pos:start="115:13" pos:end="115:33"><name pos:start="115:13" pos:end="115:26"><name pos:start="115:13" pos:end="115:15">uri</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:23">server</name><index pos:start="115:24" pos:end="115:26">[<expr pos:start="115:25" pos:end="115:25"><literal type="number" pos:start="115:25" pos:end="115:25">0</literal></expr>]</index></name> <operator pos:start="115:28" pos:end="115:29">==</operator> <literal type="char" pos:start="115:31" pos:end="115:33">'['</literal></expr>)</condition> <block pos:start="115:36" pos:end="121:9">{<block_content pos:start="117:13" pos:end="119:64">

            <expr_stmt pos:start="117:13" pos:end="119:64"><expr pos:start="117:13" pos:end="119:63"><name pos:start="117:13" pos:end="117:16">host</name> <operator pos:start="117:18" pos:end="117:18">=</operator> <call pos:start="117:20" pos:end="119:63"><name pos:start="117:20" pos:end="117:38">qstring_from_substr</name><argument_list pos:start="117:39" pos:end="119:63">(<argument pos:start="117:40" pos:end="117:50"><expr pos:start="117:40" pos:end="117:50"><name pos:start="117:40" pos:end="117:50"><name pos:start="117:40" pos:end="117:42">uri</name><operator pos:start="117:43" pos:end="117:44">-&gt;</operator><name pos:start="117:45" pos:end="117:50">server</name></name></expr></argument>, <argument pos:start="117:53" pos:end="117:53"><expr pos:start="117:53" pos:end="117:53"><literal type="number" pos:start="117:53" pos:end="117:53">1</literal></expr></argument>,

                                       <argument pos:start="119:40" pos:end="119:62"><expr pos:start="119:40" pos:end="119:62"><call pos:start="119:40" pos:end="119:58"><name pos:start="119:40" pos:end="119:45">strlen</name><argument_list pos:start="119:46" pos:end="119:58">(<argument pos:start="119:47" pos:end="119:57"><expr pos:start="119:47" pos:end="119:57"><name pos:start="119:47" pos:end="119:57"><name pos:start="119:47" pos:end="119:49">uri</name><operator pos:start="119:50" pos:end="119:51">-&gt;</operator><name pos:start="119:52" pos:end="119:57">server</name></name></expr></argument>)</argument_list></call> <operator pos:start="119:60" pos:end="119:60">-</operator> <literal type="number" pos:start="119:62" pos:end="119:62">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="121:11" pos:end="125:9">else <block pos:start="121:16" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:49">

            <expr_stmt pos:start="123:13" pos:end="123:49"><expr pos:start="123:13" pos:end="123:48"><name pos:start="123:13" pos:end="123:16">host</name> <operator pos:start="123:18" pos:end="123:18">=</operator> <call pos:start="123:20" pos:end="123:48"><name pos:start="123:20" pos:end="123:35">qstring_from_str</name><argument_list pos:start="123:36" pos:end="123:48">(<argument pos:start="123:37" pos:end="123:47"><expr pos:start="123:37" pos:end="123:47"><name pos:start="123:37" pos:end="123:47"><name pos:start="123:37" pos:end="123:39">uri</name><operator pos:start="123:40" pos:end="123:41">-&gt;</operator><name pos:start="123:42" pos:end="123:47">server</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:68"><expr pos:start="129:9" pos:end="129:67"><call pos:start="129:9" pos:end="129:67"><name pos:start="129:9" pos:end="129:17">qdict_put</name><argument_list pos:start="129:18" pos:end="129:67">(<argument pos:start="129:19" pos:end="129:25"><expr pos:start="129:19" pos:end="129:25"><name pos:start="129:19" pos:end="129:25">options</name></expr></argument>, <argument pos:start="129:28" pos:end="129:40"><expr pos:start="129:28" pos:end="129:40"><literal type="string" pos:start="129:28" pos:end="129:40">"server.type"</literal></expr></argument>, <argument pos:start="129:43" pos:end="129:66"><expr pos:start="129:43" pos:end="129:66"><call pos:start="129:43" pos:end="129:66"><name pos:start="129:43" pos:end="129:58">qstring_from_str</name><argument_list pos:start="129:59" pos:end="129:66">(<argument pos:start="129:60" pos:end="129:65"><expr pos:start="129:60" pos:end="129:65"><literal type="string" pos:start="129:60" pos:end="129:65">"inet"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:53"><expr pos:start="131:9" pos:end="131:52"><call pos:start="131:9" pos:end="131:52"><name pos:start="131:9" pos:end="131:17">qdict_put</name><argument_list pos:start="131:18" pos:end="131:52">(<argument pos:start="131:19" pos:end="131:25"><expr pos:start="131:19" pos:end="131:25"><name pos:start="131:19" pos:end="131:25">options</name></expr></argument>, <argument pos:start="131:28" pos:end="131:45"><expr pos:start="131:28" pos:end="131:45"><literal type="string" pos:start="131:28" pos:end="131:45">"server.data.host"</literal></expr></argument>, <argument pos:start="131:48" pos:end="131:51"><expr pos:start="131:48" pos:end="131:51"><name pos:start="131:48" pos:end="131:51">host</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="135:9" pos:end="135:72"><expr pos:start="135:9" pos:end="135:71"><name pos:start="135:9" pos:end="135:16">port_str</name> <operator pos:start="135:18" pos:end="135:18">=</operator> <call pos:start="135:20" pos:end="135:71"><name pos:start="135:20" pos:end="135:34">g_strdup_printf</name><argument_list pos:start="135:35" pos:end="135:71">(<argument pos:start="135:36" pos:end="135:39"><expr pos:start="135:36" pos:end="135:39"><literal type="string" pos:start="135:36" pos:end="135:39">"%d"</literal></expr></argument>, <argument pos:start="135:42" pos:end="135:70"><expr pos:start="135:42" pos:end="135:70"><ternary pos:start="135:42" pos:end="135:70"><condition pos:start="135:42" pos:end="135:52"><expr pos:start="135:42" pos:end="135:50"><name pos:start="135:42" pos:end="135:50"><name pos:start="135:42" pos:end="135:44">uri</name><operator pos:start="135:45" pos:end="135:46">-&gt;</operator><name pos:start="135:47" pos:end="135:50">port</name></name></expr> ?</condition><then/><else pos:start="135:53" pos:end="135:70">: <expr pos:start="135:55" pos:end="135:70"><name pos:start="135:55" pos:end="135:70">NBD_DEFAULT_PORT</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:75"><expr pos:start="137:9" pos:end="137:74"><call pos:start="137:9" pos:end="137:74"><name pos:start="137:9" pos:end="137:17">qdict_put</name><argument_list pos:start="137:18" pos:end="137:74">(<argument pos:start="137:19" pos:end="137:25"><expr pos:start="137:19" pos:end="137:25"><name pos:start="137:19" pos:end="137:25">options</name></expr></argument>, <argument pos:start="137:28" pos:end="137:45"><expr pos:start="137:28" pos:end="137:45"><literal type="string" pos:start="137:28" pos:end="137:45">"server.data.port"</literal></expr></argument>, <argument pos:start="137:48" pos:end="137:73"><expr pos:start="137:48" pos:end="137:73"><call pos:start="137:48" pos:end="137:73"><name pos:start="137:48" pos:end="137:63">qstring_from_str</name><argument_list pos:start="137:64" pos:end="137:73">(<argument pos:start="137:65" pos:end="137:72"><expr pos:start="137:65" pos:end="137:72"><name pos:start="137:65" pos:end="137:72">port_str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:25"><expr pos:start="139:9" pos:end="139:24"><call pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:14">g_free</name><argument_list pos:start="139:15" pos:end="139:24">(<argument pos:start="139:16" pos:end="139:23"><expr pos:start="139:16" pos:end="139:23"><name pos:start="139:16" pos:end="139:23">port_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="145:1" pos:end="145:4"><name pos:start="145:1" pos:end="145:3">out</name>:</label>

    <if_stmt pos:start="147:5" pos:end="151:5"><if pos:start="147:5" pos:end="151:5">if <condition pos:start="147:8" pos:end="147:11">(<expr pos:start="147:9" pos:end="147:10"><name pos:start="147:9" pos:end="147:10">qp</name></expr>)</condition> <block pos:start="147:13" pos:end="151:5">{<block_content pos:start="149:9" pos:end="149:30">

        <expr_stmt pos:start="149:9" pos:end="149:30"><expr pos:start="149:9" pos:end="149:29"><call pos:start="149:9" pos:end="149:29"><name pos:start="149:9" pos:end="149:25">query_params_free</name><argument_list pos:start="149:26" pos:end="149:29">(<argument pos:start="149:27" pos:end="149:28"><expr pos:start="149:27" pos:end="149:28"><name pos:start="149:27" pos:end="149:28">qp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:18"><expr pos:start="153:5" pos:end="153:17"><call pos:start="153:5" pos:end="153:17"><name pos:start="153:5" pos:end="153:12">uri_free</name><argument_list pos:start="153:13" pos:end="153:17">(<argument pos:start="153:14" pos:end="153:16"><expr pos:start="153:14" pos:end="153:16"><name pos:start="153:14" pos:end="153:16">uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="155:5" pos:end="155:15">return <expr pos:start="155:12" pos:end="155:14"><name pos:start="155:12" pos:end="155:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
