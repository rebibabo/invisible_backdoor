<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18119.c" pos:tabs="8"><function pos:start="1:1" pos:end="327:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">helper_vmrun</name><parameter_list pos:start="1:18" pos:end="1:36">(<parameter pos:start="1:19" pos:end="1:35"><decl pos:start="1:19" pos:end="1:35"><type pos:start="1:19" pos:end="1:30"><name pos:start="1:19" pos:end="1:30">target_ulong</name></type> <name pos:start="1:32" pos:end="1:35">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="327:1">{<block_content pos:start="5:5" pos:end="325:20">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:22">event_inj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:20">int_ctl</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:60"><if pos:start="11:5" pos:end="13:60">if <condition pos:start="11:8" pos:end="11:37">(<expr pos:start="11:9" pos:end="11:36"><name pos:start="11:9" pos:end="11:16">loglevel</name> <operator pos:start="11:18" pos:end="11:18">&amp;</operator> <name pos:start="11:20" pos:end="11:36">CPU_LOG_TB_IN_ASM</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:60"><block_content pos:start="13:9" pos:end="13:60">

        <expr_stmt pos:start="13:9" pos:end="13:60"><expr pos:start="13:9" pos:end="13:59"><call pos:start="13:9" pos:end="13:59"><name pos:start="13:9" pos:end="13:15">fprintf</name><argument_list pos:start="13:16" pos:end="13:59">(<argument pos:start="13:17" pos:end="13:23"><expr pos:start="13:17" pos:end="13:23"><name pos:start="13:17" pos:end="13:23">logfile</name></expr></argument>,<argument pos:start="13:25" pos:end="13:52"><expr pos:start="13:25" pos:end="13:52"><literal type="string" pos:start="13:25" pos:end="13:33">"vmrun! "</literal> <name pos:start="13:35" pos:end="13:47">TARGET_FMT_lx</name> <literal type="string" pos:start="13:49" pos:end="13:52">"\n"</literal></expr></argument>, <argument pos:start="13:55" pos:end="13:58"><expr pos:start="13:55" pos:end="13:58"><name pos:start="13:55" pos:end="13:58">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:7">env</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:16">vm_vmcb</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:23">addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:18"><expr pos:start="19:5" pos:end="19:17"><call pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:15">regs_to_env</name><argument_list pos:start="19:16" pos:end="19:17">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:54">/* save the current CPU state in the hsave page */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:83"><expr pos:start="25:5" pos:end="25:82"><call pos:start="25:5" pos:end="25:82"><name pos:start="25:5" pos:end="25:12">stq_phys</name><argument_list pos:start="25:13" pos:end="25:82">(<argument pos:start="25:14" pos:end="25:66"><expr pos:start="25:14" pos:end="25:66"><name pos:start="25:14" pos:end="25:26"><name pos:start="25:14" pos:end="25:16">env</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:26">vm_hsave</name></name> <operator pos:start="25:28" pos:end="25:28">+</operator> <call pos:start="25:30" pos:end="25:66"><name pos:start="25:30" pos:end="25:37">offsetof</name><argument_list pos:start="25:38" pos:end="25:66">(<argument pos:start="25:39" pos:end="25:49"><expr pos:start="25:39" pos:end="25:49">struct <name pos:start="25:46" pos:end="25:49">vmcb</name></expr></argument>, <argument pos:start="25:52" pos:end="25:65"><expr pos:start="25:52" pos:end="25:65"><name pos:start="25:52" pos:end="25:65"><name pos:start="25:52" pos:end="25:55">save</name><operator pos:start="25:56" pos:end="25:56">.</operator><name pos:start="25:57" pos:end="25:60">gdtr</name><operator pos:start="25:61" pos:end="25:61">.</operator><name pos:start="25:62" pos:end="25:65">base</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:69" pos:end="25:81"><expr pos:start="25:69" pos:end="25:81"><name pos:start="25:69" pos:end="25:81"><name pos:start="25:69" pos:end="25:71">env</name><operator pos:start="25:72" pos:end="25:73">-&gt;</operator><name pos:start="25:74" pos:end="25:76">gdt</name><operator pos:start="25:77" pos:end="25:77">.</operator><name pos:start="25:78" pos:end="25:81">base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:85"><expr pos:start="27:5" pos:end="27:84"><call pos:start="27:5" pos:end="27:84"><name pos:start="27:5" pos:end="27:12">stl_phys</name><argument_list pos:start="27:13" pos:end="27:84">(<argument pos:start="27:14" pos:end="27:67"><expr pos:start="27:14" pos:end="27:67"><name pos:start="27:14" pos:end="27:26"><name pos:start="27:14" pos:end="27:16">env</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:26">vm_hsave</name></name> <operator pos:start="27:28" pos:end="27:28">+</operator> <call pos:start="27:30" pos:end="27:67"><name pos:start="27:30" pos:end="27:37">offsetof</name><argument_list pos:start="27:38" pos:end="27:67">(<argument pos:start="27:39" pos:end="27:49"><expr pos:start="27:39" pos:end="27:49">struct <name pos:start="27:46" pos:end="27:49">vmcb</name></expr></argument>, <argument pos:start="27:52" pos:end="27:66"><expr pos:start="27:52" pos:end="27:66"><name pos:start="27:52" pos:end="27:66"><name pos:start="27:52" pos:end="27:55">save</name><operator pos:start="27:56" pos:end="27:56">.</operator><name pos:start="27:57" pos:end="27:60">gdtr</name><operator pos:start="27:61" pos:end="27:61">.</operator><name pos:start="27:62" pos:end="27:66">limit</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:70" pos:end="27:83"><expr pos:start="27:70" pos:end="27:83"><name pos:start="27:70" pos:end="27:83"><name pos:start="27:70" pos:end="27:72">env</name><operator pos:start="27:73" pos:end="27:74">-&gt;</operator><name pos:start="27:75" pos:end="27:77">gdt</name><operator pos:start="27:78" pos:end="27:78">.</operator><name pos:start="27:79" pos:end="27:83">limit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:83"><expr pos:start="31:5" pos:end="31:82"><call pos:start="31:5" pos:end="31:82"><name pos:start="31:5" pos:end="31:12">stq_phys</name><argument_list pos:start="31:13" pos:end="31:82">(<argument pos:start="31:14" pos:end="31:66"><expr pos:start="31:14" pos:end="31:66"><name pos:start="31:14" pos:end="31:26"><name pos:start="31:14" pos:end="31:16">env</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:26">vm_hsave</name></name> <operator pos:start="31:28" pos:end="31:28">+</operator> <call pos:start="31:30" pos:end="31:66"><name pos:start="31:30" pos:end="31:37">offsetof</name><argument_list pos:start="31:38" pos:end="31:66">(<argument pos:start="31:39" pos:end="31:49"><expr pos:start="31:39" pos:end="31:49">struct <name pos:start="31:46" pos:end="31:49">vmcb</name></expr></argument>, <argument pos:start="31:52" pos:end="31:65"><expr pos:start="31:52" pos:end="31:65"><name pos:start="31:52" pos:end="31:65"><name pos:start="31:52" pos:end="31:55">save</name><operator pos:start="31:56" pos:end="31:56">.</operator><name pos:start="31:57" pos:end="31:60">idtr</name><operator pos:start="31:61" pos:end="31:61">.</operator><name pos:start="31:62" pos:end="31:65">base</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:69" pos:end="31:81"><expr pos:start="31:69" pos:end="31:81"><name pos:start="31:69" pos:end="31:81"><name pos:start="31:69" pos:end="31:71">env</name><operator pos:start="31:72" pos:end="31:73">-&gt;</operator><name pos:start="31:74" pos:end="31:76">idt</name><operator pos:start="31:77" pos:end="31:77">.</operator><name pos:start="31:78" pos:end="31:81">base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:85"><expr pos:start="33:5" pos:end="33:84"><call pos:start="33:5" pos:end="33:84"><name pos:start="33:5" pos:end="33:12">stl_phys</name><argument_list pos:start="33:13" pos:end="33:84">(<argument pos:start="33:14" pos:end="33:67"><expr pos:start="33:14" pos:end="33:67"><name pos:start="33:14" pos:end="33:26"><name pos:start="33:14" pos:end="33:16">env</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:26">vm_hsave</name></name> <operator pos:start="33:28" pos:end="33:28">+</operator> <call pos:start="33:30" pos:end="33:67"><name pos:start="33:30" pos:end="33:37">offsetof</name><argument_list pos:start="33:38" pos:end="33:67">(<argument pos:start="33:39" pos:end="33:49"><expr pos:start="33:39" pos:end="33:49">struct <name pos:start="33:46" pos:end="33:49">vmcb</name></expr></argument>, <argument pos:start="33:52" pos:end="33:66"><expr pos:start="33:52" pos:end="33:66"><name pos:start="33:52" pos:end="33:66"><name pos:start="33:52" pos:end="33:55">save</name><operator pos:start="33:56" pos:end="33:56">.</operator><name pos:start="33:57" pos:end="33:60">idtr</name><operator pos:start="33:61" pos:end="33:61">.</operator><name pos:start="33:62" pos:end="33:66">limit</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:70" pos:end="33:83"><expr pos:start="33:70" pos:end="33:83"><name pos:start="33:70" pos:end="33:83"><name pos:start="33:70" pos:end="33:72">env</name><operator pos:start="33:73" pos:end="33:74">-&gt;</operator><name pos:start="33:75" pos:end="33:77">idt</name><operator pos:start="33:78" pos:end="33:78">.</operator><name pos:start="33:79" pos:end="33:83">limit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:74"><expr pos:start="37:5" pos:end="37:73"><call pos:start="37:5" pos:end="37:73"><name pos:start="37:5" pos:end="37:12">stq_phys</name><argument_list pos:start="37:13" pos:end="37:73">(<argument pos:start="37:14" pos:end="37:60"><expr pos:start="37:14" pos:end="37:60"><name pos:start="37:14" pos:end="37:26"><name pos:start="37:14" pos:end="37:16">env</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:26">vm_hsave</name></name> <operator pos:start="37:28" pos:end="37:28">+</operator> <call pos:start="37:30" pos:end="37:60"><name pos:start="37:30" pos:end="37:37">offsetof</name><argument_list pos:start="37:38" pos:end="37:60">(<argument pos:start="37:39" pos:end="37:49"><expr pos:start="37:39" pos:end="37:49">struct <name pos:start="37:46" pos:end="37:49">vmcb</name></expr></argument>, <argument pos:start="37:52" pos:end="37:59"><expr pos:start="37:52" pos:end="37:59"><name pos:start="37:52" pos:end="37:59"><name pos:start="37:52" pos:end="37:55">save</name><operator pos:start="37:56" pos:end="37:56">.</operator><name pos:start="37:57" pos:end="37:59">cr0</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:63" pos:end="37:72"><expr pos:start="37:63" pos:end="37:72"><name pos:start="37:63" pos:end="37:72"><name pos:start="37:63" pos:end="37:65">env</name><operator pos:start="37:66" pos:end="37:67">-&gt;</operator><name pos:start="37:68" pos:end="37:69">cr</name><index pos:start="37:70" pos:end="37:72">[<expr pos:start="37:71" pos:end="37:71"><literal type="number" pos:start="37:71" pos:end="37:71">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:74"><expr pos:start="39:5" pos:end="39:73"><call pos:start="39:5" pos:end="39:73"><name pos:start="39:5" pos:end="39:12">stq_phys</name><argument_list pos:start="39:13" pos:end="39:73">(<argument pos:start="39:14" pos:end="39:60"><expr pos:start="39:14" pos:end="39:60"><name pos:start="39:14" pos:end="39:26"><name pos:start="39:14" pos:end="39:16">env</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:26">vm_hsave</name></name> <operator pos:start="39:28" pos:end="39:28">+</operator> <call pos:start="39:30" pos:end="39:60"><name pos:start="39:30" pos:end="39:37">offsetof</name><argument_list pos:start="39:38" pos:end="39:60">(<argument pos:start="39:39" pos:end="39:49"><expr pos:start="39:39" pos:end="39:49">struct <name pos:start="39:46" pos:end="39:49">vmcb</name></expr></argument>, <argument pos:start="39:52" pos:end="39:59"><expr pos:start="39:52" pos:end="39:59"><name pos:start="39:52" pos:end="39:59"><name pos:start="39:52" pos:end="39:55">save</name><operator pos:start="39:56" pos:end="39:56">.</operator><name pos:start="39:57" pos:end="39:59">cr2</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:63" pos:end="39:72"><expr pos:start="39:63" pos:end="39:72"><name pos:start="39:63" pos:end="39:72"><name pos:start="39:63" pos:end="39:65">env</name><operator pos:start="39:66" pos:end="39:67">-&gt;</operator><name pos:start="39:68" pos:end="39:69">cr</name><index pos:start="39:70" pos:end="39:72">[<expr pos:start="39:71" pos:end="39:71"><literal type="number" pos:start="39:71" pos:end="39:71">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:74"><expr pos:start="41:5" pos:end="41:73"><call pos:start="41:5" pos:end="41:73"><name pos:start="41:5" pos:end="41:12">stq_phys</name><argument_list pos:start="41:13" pos:end="41:73">(<argument pos:start="41:14" pos:end="41:60"><expr pos:start="41:14" pos:end="41:60"><name pos:start="41:14" pos:end="41:26"><name pos:start="41:14" pos:end="41:16">env</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:26">vm_hsave</name></name> <operator pos:start="41:28" pos:end="41:28">+</operator> <call pos:start="41:30" pos:end="41:60"><name pos:start="41:30" pos:end="41:37">offsetof</name><argument_list pos:start="41:38" pos:end="41:60">(<argument pos:start="41:39" pos:end="41:49"><expr pos:start="41:39" pos:end="41:49">struct <name pos:start="41:46" pos:end="41:49">vmcb</name></expr></argument>, <argument pos:start="41:52" pos:end="41:59"><expr pos:start="41:52" pos:end="41:59"><name pos:start="41:52" pos:end="41:59"><name pos:start="41:52" pos:end="41:55">save</name><operator pos:start="41:56" pos:end="41:56">.</operator><name pos:start="41:57" pos:end="41:59">cr3</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:63" pos:end="41:72"><expr pos:start="41:63" pos:end="41:72"><name pos:start="41:63" pos:end="41:72"><name pos:start="41:63" pos:end="41:65">env</name><operator pos:start="41:66" pos:end="41:67">-&gt;</operator><name pos:start="41:68" pos:end="41:69">cr</name><index pos:start="41:70" pos:end="41:72">[<expr pos:start="41:71" pos:end="41:71"><literal type="number" pos:start="41:71" pos:end="41:71">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:74"><expr pos:start="43:5" pos:end="43:73"><call pos:start="43:5" pos:end="43:73"><name pos:start="43:5" pos:end="43:12">stq_phys</name><argument_list pos:start="43:13" pos:end="43:73">(<argument pos:start="43:14" pos:end="43:60"><expr pos:start="43:14" pos:end="43:60"><name pos:start="43:14" pos:end="43:26"><name pos:start="43:14" pos:end="43:16">env</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:26">vm_hsave</name></name> <operator pos:start="43:28" pos:end="43:28">+</operator> <call pos:start="43:30" pos:end="43:60"><name pos:start="43:30" pos:end="43:37">offsetof</name><argument_list pos:start="43:38" pos:end="43:60">(<argument pos:start="43:39" pos:end="43:49"><expr pos:start="43:39" pos:end="43:49">struct <name pos:start="43:46" pos:end="43:49">vmcb</name></expr></argument>, <argument pos:start="43:52" pos:end="43:59"><expr pos:start="43:52" pos:end="43:59"><name pos:start="43:52" pos:end="43:59"><name pos:start="43:52" pos:end="43:55">save</name><operator pos:start="43:56" pos:end="43:56">.</operator><name pos:start="43:57" pos:end="43:59">cr4</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:63" pos:end="43:72"><expr pos:start="43:63" pos:end="43:72"><name pos:start="43:63" pos:end="43:72"><name pos:start="43:63" pos:end="43:65">env</name><operator pos:start="43:66" pos:end="43:67">-&gt;</operator><name pos:start="43:68" pos:end="43:69">cr</name><index pos:start="43:70" pos:end="43:72">[<expr pos:start="43:71" pos:end="43:71"><literal type="number" pos:start="43:71" pos:end="43:71">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:74"><expr pos:start="45:5" pos:end="45:73"><call pos:start="45:5" pos:end="45:73"><name pos:start="45:5" pos:end="45:12">stq_phys</name><argument_list pos:start="45:13" pos:end="45:73">(<argument pos:start="45:14" pos:end="45:60"><expr pos:start="45:14" pos:end="45:60"><name pos:start="45:14" pos:end="45:26"><name pos:start="45:14" pos:end="45:16">env</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:26">vm_hsave</name></name> <operator pos:start="45:28" pos:end="45:28">+</operator> <call pos:start="45:30" pos:end="45:60"><name pos:start="45:30" pos:end="45:37">offsetof</name><argument_list pos:start="45:38" pos:end="45:60">(<argument pos:start="45:39" pos:end="45:49"><expr pos:start="45:39" pos:end="45:49">struct <name pos:start="45:46" pos:end="45:49">vmcb</name></expr></argument>, <argument pos:start="45:52" pos:end="45:59"><expr pos:start="45:52" pos:end="45:59"><name pos:start="45:52" pos:end="45:59"><name pos:start="45:52" pos:end="45:55">save</name><operator pos:start="45:56" pos:end="45:56">.</operator><name pos:start="45:57" pos:end="45:59">cr8</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:63" pos:end="45:72"><expr pos:start="45:63" pos:end="45:72"><name pos:start="45:63" pos:end="45:72"><name pos:start="45:63" pos:end="45:65">env</name><operator pos:start="45:66" pos:end="45:67">-&gt;</operator><name pos:start="45:68" pos:end="45:69">cr</name><index pos:start="45:70" pos:end="45:72">[<expr pos:start="45:71" pos:end="45:71"><literal type="number" pos:start="45:71" pos:end="45:71">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:74"><expr pos:start="47:5" pos:end="47:73"><call pos:start="47:5" pos:end="47:73"><name pos:start="47:5" pos:end="47:12">stq_phys</name><argument_list pos:start="47:13" pos:end="47:73">(<argument pos:start="47:14" pos:end="47:60"><expr pos:start="47:14" pos:end="47:60"><name pos:start="47:14" pos:end="47:26"><name pos:start="47:14" pos:end="47:16">env</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:26">vm_hsave</name></name> <operator pos:start="47:28" pos:end="47:28">+</operator> <call pos:start="47:30" pos:end="47:60"><name pos:start="47:30" pos:end="47:37">offsetof</name><argument_list pos:start="47:38" pos:end="47:60">(<argument pos:start="47:39" pos:end="47:49"><expr pos:start="47:39" pos:end="47:49">struct <name pos:start="47:46" pos:end="47:49">vmcb</name></expr></argument>, <argument pos:start="47:52" pos:end="47:59"><expr pos:start="47:52" pos:end="47:59"><name pos:start="47:52" pos:end="47:59"><name pos:start="47:52" pos:end="47:55">save</name><operator pos:start="47:56" pos:end="47:56">.</operator><name pos:start="47:57" pos:end="47:59">dr6</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:63" pos:end="47:72"><expr pos:start="47:63" pos:end="47:72"><name pos:start="47:63" pos:end="47:72"><name pos:start="47:63" pos:end="47:65">env</name><operator pos:start="47:66" pos:end="47:67">-&gt;</operator><name pos:start="47:68" pos:end="47:69">dr</name><index pos:start="47:70" pos:end="47:72">[<expr pos:start="47:71" pos:end="47:71"><literal type="number" pos:start="47:71" pos:end="47:71">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:74"><expr pos:start="49:5" pos:end="49:73"><call pos:start="49:5" pos:end="49:73"><name pos:start="49:5" pos:end="49:12">stq_phys</name><argument_list pos:start="49:13" pos:end="49:73">(<argument pos:start="49:14" pos:end="49:60"><expr pos:start="49:14" pos:end="49:60"><name pos:start="49:14" pos:end="49:26"><name pos:start="49:14" pos:end="49:16">env</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:26">vm_hsave</name></name> <operator pos:start="49:28" pos:end="49:28">+</operator> <call pos:start="49:30" pos:end="49:60"><name pos:start="49:30" pos:end="49:37">offsetof</name><argument_list pos:start="49:38" pos:end="49:60">(<argument pos:start="49:39" pos:end="49:49"><expr pos:start="49:39" pos:end="49:49">struct <name pos:start="49:46" pos:end="49:49">vmcb</name></expr></argument>, <argument pos:start="49:52" pos:end="49:59"><expr pos:start="49:52" pos:end="49:59"><name pos:start="49:52" pos:end="49:59"><name pos:start="49:52" pos:end="49:55">save</name><operator pos:start="49:56" pos:end="49:56">.</operator><name pos:start="49:57" pos:end="49:59">dr7</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:63" pos:end="49:72"><expr pos:start="49:63" pos:end="49:72"><name pos:start="49:63" pos:end="49:72"><name pos:start="49:63" pos:end="49:65">env</name><operator pos:start="49:66" pos:end="49:67">-&gt;</operator><name pos:start="49:68" pos:end="49:69">dr</name><index pos:start="49:70" pos:end="49:72">[<expr pos:start="49:71" pos:end="49:71"><literal type="number" pos:start="49:71" pos:end="49:71">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:74"><expr pos:start="53:5" pos:end="53:73"><call pos:start="53:5" pos:end="53:73"><name pos:start="53:5" pos:end="53:12">stq_phys</name><argument_list pos:start="53:13" pos:end="53:73">(<argument pos:start="53:14" pos:end="53:61"><expr pos:start="53:14" pos:end="53:61"><name pos:start="53:14" pos:end="53:26"><name pos:start="53:14" pos:end="53:16">env</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:26">vm_hsave</name></name> <operator pos:start="53:28" pos:end="53:28">+</operator> <call pos:start="53:30" pos:end="53:61"><name pos:start="53:30" pos:end="53:37">offsetof</name><argument_list pos:start="53:38" pos:end="53:61">(<argument pos:start="53:39" pos:end="53:49"><expr pos:start="53:39" pos:end="53:49">struct <name pos:start="53:46" pos:end="53:49">vmcb</name></expr></argument>, <argument pos:start="53:52" pos:end="53:60"><expr pos:start="53:52" pos:end="53:60"><name pos:start="53:52" pos:end="53:60"><name pos:start="53:52" pos:end="53:55">save</name><operator pos:start="53:56" pos:end="53:56">.</operator><name pos:start="53:57" pos:end="53:60">efer</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="53:64" pos:end="53:72"><expr pos:start="53:64" pos:end="53:72"><name pos:start="53:64" pos:end="53:72"><name pos:start="53:64" pos:end="53:66">env</name><operator pos:start="53:67" pos:end="53:68">-&gt;</operator><name pos:start="53:69" pos:end="53:72">efer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:83"><expr pos:start="55:5" pos:end="55:82"><call pos:start="55:5" pos:end="55:82"><name pos:start="55:5" pos:end="55:12">stq_phys</name><argument_list pos:start="55:13" pos:end="55:82">(<argument pos:start="55:14" pos:end="55:63"><expr pos:start="55:14" pos:end="55:63"><name pos:start="55:14" pos:end="55:26"><name pos:start="55:14" pos:end="55:16">env</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:26">vm_hsave</name></name> <operator pos:start="55:28" pos:end="55:28">+</operator> <call pos:start="55:30" pos:end="55:63"><name pos:start="55:30" pos:end="55:37">offsetof</name><argument_list pos:start="55:38" pos:end="55:63">(<argument pos:start="55:39" pos:end="55:49"><expr pos:start="55:39" pos:end="55:49">struct <name pos:start="55:46" pos:end="55:49">vmcb</name></expr></argument>, <argument pos:start="55:52" pos:end="55:62"><expr pos:start="55:52" pos:end="55:62"><name pos:start="55:52" pos:end="55:62"><name pos:start="55:52" pos:end="55:55">save</name><operator pos:start="55:56" pos:end="55:56">.</operator><name pos:start="55:57" pos:end="55:62">rflags</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="55:66" pos:end="55:81"><expr pos:start="55:66" pos:end="55:81"><call pos:start="55:66" pos:end="55:81"><name pos:start="55:66" pos:end="55:79">compute_eflags</name><argument_list pos:start="55:80" pos:end="55:81">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:48"><expr pos:start="59:5" pos:end="59:47"><call pos:start="59:5" pos:end="59:47"><name pos:start="59:5" pos:end="59:16">SVM_SAVE_SEG</name><argument_list pos:start="59:17" pos:end="59:47">(<argument pos:start="59:18" pos:end="59:30"><expr pos:start="59:18" pos:end="59:30"><name pos:start="59:18" pos:end="59:30"><name pos:start="59:18" pos:end="59:20">env</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:30">vm_hsave</name></name></expr></argument>, <argument pos:start="59:33" pos:end="59:42"><expr pos:start="59:33" pos:end="59:42"><name pos:start="59:33" pos:end="59:42"><name pos:start="59:33" pos:end="59:36">segs</name><index pos:start="59:37" pos:end="59:42">[<expr pos:start="59:38" pos:end="59:41"><name pos:start="59:38" pos:end="59:41">R_ES</name></expr>]</index></name></expr></argument>, <argument pos:start="59:45" pos:end="59:46"><expr pos:start="59:45" pos:end="59:46"><name pos:start="59:45" pos:end="59:46">es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:48"><expr pos:start="61:5" pos:end="61:47"><call pos:start="61:5" pos:end="61:47"><name pos:start="61:5" pos:end="61:16">SVM_SAVE_SEG</name><argument_list pos:start="61:17" pos:end="61:47">(<argument pos:start="61:18" pos:end="61:30"><expr pos:start="61:18" pos:end="61:30"><name pos:start="61:18" pos:end="61:30"><name pos:start="61:18" pos:end="61:20">env</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:30">vm_hsave</name></name></expr></argument>, <argument pos:start="61:33" pos:end="61:42"><expr pos:start="61:33" pos:end="61:42"><name pos:start="61:33" pos:end="61:42"><name pos:start="61:33" pos:end="61:36">segs</name><index pos:start="61:37" pos:end="61:42">[<expr pos:start="61:38" pos:end="61:41"><name pos:start="61:38" pos:end="61:41">R_CS</name></expr>]</index></name></expr></argument>, <argument pos:start="61:45" pos:end="61:46"><expr pos:start="61:45" pos:end="61:46"><name pos:start="61:45" pos:end="61:46">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:48"><expr pos:start="63:5" pos:end="63:47"><call pos:start="63:5" pos:end="63:47"><name pos:start="63:5" pos:end="63:16">SVM_SAVE_SEG</name><argument_list pos:start="63:17" pos:end="63:47">(<argument pos:start="63:18" pos:end="63:30"><expr pos:start="63:18" pos:end="63:30"><name pos:start="63:18" pos:end="63:30"><name pos:start="63:18" pos:end="63:20">env</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:30">vm_hsave</name></name></expr></argument>, <argument pos:start="63:33" pos:end="63:42"><expr pos:start="63:33" pos:end="63:42"><name pos:start="63:33" pos:end="63:42"><name pos:start="63:33" pos:end="63:36">segs</name><index pos:start="63:37" pos:end="63:42">[<expr pos:start="63:38" pos:end="63:41"><name pos:start="63:38" pos:end="63:41">R_SS</name></expr>]</index></name></expr></argument>, <argument pos:start="63:45" pos:end="63:46"><expr pos:start="63:45" pos:end="63:46"><name pos:start="63:45" pos:end="63:46">ss</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:48"><expr pos:start="65:5" pos:end="65:47"><call pos:start="65:5" pos:end="65:47"><name pos:start="65:5" pos:end="65:16">SVM_SAVE_SEG</name><argument_list pos:start="65:17" pos:end="65:47">(<argument pos:start="65:18" pos:end="65:30"><expr pos:start="65:18" pos:end="65:30"><name pos:start="65:18" pos:end="65:30"><name pos:start="65:18" pos:end="65:20">env</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:30">vm_hsave</name></name></expr></argument>, <argument pos:start="65:33" pos:end="65:42"><expr pos:start="65:33" pos:end="65:42"><name pos:start="65:33" pos:end="65:42"><name pos:start="65:33" pos:end="65:36">segs</name><index pos:start="65:37" pos:end="65:42">[<expr pos:start="65:38" pos:end="65:41"><name pos:start="65:38" pos:end="65:41">R_DS</name></expr>]</index></name></expr></argument>, <argument pos:start="65:45" pos:end="65:46"><expr pos:start="65:45" pos:end="65:46"><name pos:start="65:45" pos:end="65:46">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:67"><expr pos:start="69:5" pos:end="69:66"><call pos:start="69:5" pos:end="69:66"><name pos:start="69:5" pos:end="69:12">stq_phys</name><argument_list pos:start="69:13" pos:end="69:66">(<argument pos:start="69:14" pos:end="69:60"><expr pos:start="69:14" pos:end="69:60"><name pos:start="69:14" pos:end="69:26"><name pos:start="69:14" pos:end="69:16">env</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:26">vm_hsave</name></name> <operator pos:start="69:28" pos:end="69:28">+</operator> <call pos:start="69:30" pos:end="69:60"><name pos:start="69:30" pos:end="69:37">offsetof</name><argument_list pos:start="69:38" pos:end="69:60">(<argument pos:start="69:39" pos:end="69:49"><expr pos:start="69:39" pos:end="69:49">struct <name pos:start="69:46" pos:end="69:49">vmcb</name></expr></argument>, <argument pos:start="69:52" pos:end="69:59"><expr pos:start="69:52" pos:end="69:59"><name pos:start="69:52" pos:end="69:59"><name pos:start="69:52" pos:end="69:55">save</name><operator pos:start="69:56" pos:end="69:56">.</operator><name pos:start="69:57" pos:end="69:59">rip</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:63" pos:end="69:65"><expr pos:start="69:63" pos:end="69:65"><name pos:start="69:63" pos:end="69:65">EIP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:67"><expr pos:start="71:5" pos:end="71:66"><call pos:start="71:5" pos:end="71:66"><name pos:start="71:5" pos:end="71:12">stq_phys</name><argument_list pos:start="71:13" pos:end="71:66">(<argument pos:start="71:14" pos:end="71:60"><expr pos:start="71:14" pos:end="71:60"><name pos:start="71:14" pos:end="71:26"><name pos:start="71:14" pos:end="71:16">env</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:26">vm_hsave</name></name> <operator pos:start="71:28" pos:end="71:28">+</operator> <call pos:start="71:30" pos:end="71:60"><name pos:start="71:30" pos:end="71:37">offsetof</name><argument_list pos:start="71:38" pos:end="71:60">(<argument pos:start="71:39" pos:end="71:49"><expr pos:start="71:39" pos:end="71:49">struct <name pos:start="71:46" pos:end="71:49">vmcb</name></expr></argument>, <argument pos:start="71:52" pos:end="71:59"><expr pos:start="71:52" pos:end="71:59"><name pos:start="71:52" pos:end="71:59"><name pos:start="71:52" pos:end="71:55">save</name><operator pos:start="71:56" pos:end="71:56">.</operator><name pos:start="71:57" pos:end="71:59">rsp</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="71:63" pos:end="71:65"><expr pos:start="71:63" pos:end="71:65"><name pos:start="71:63" pos:end="71:65">ESP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:67"><expr pos:start="73:5" pos:end="73:66"><call pos:start="73:5" pos:end="73:66"><name pos:start="73:5" pos:end="73:12">stq_phys</name><argument_list pos:start="73:13" pos:end="73:66">(<argument pos:start="73:14" pos:end="73:60"><expr pos:start="73:14" pos:end="73:60"><name pos:start="73:14" pos:end="73:26"><name pos:start="73:14" pos:end="73:16">env</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:26">vm_hsave</name></name> <operator pos:start="73:28" pos:end="73:28">+</operator> <call pos:start="73:30" pos:end="73:60"><name pos:start="73:30" pos:end="73:37">offsetof</name><argument_list pos:start="73:38" pos:end="73:60">(<argument pos:start="73:39" pos:end="73:49"><expr pos:start="73:39" pos:end="73:49">struct <name pos:start="73:46" pos:end="73:49">vmcb</name></expr></argument>, <argument pos:start="73:52" pos:end="73:59"><expr pos:start="73:52" pos:end="73:59"><name pos:start="73:52" pos:end="73:59"><name pos:start="73:52" pos:end="73:55">save</name><operator pos:start="73:56" pos:end="73:56">.</operator><name pos:start="73:57" pos:end="73:59">rax</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="73:63" pos:end="73:65"><expr pos:start="73:63" pos:end="73:65"><name pos:start="73:63" pos:end="73:65">EAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="77:5" pos:end="79:26">/* load the interception bitmaps so we do not need to access the

       vmcb in svm mode */</comment>

    <comment type="block" pos:start="81:5" pos:end="83:24">/* We shift all the intercept bits so we can OR them with the TB

       flags later on */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:139"><expr pos:start="85:5" pos:end="85:138"><name pos:start="85:5" pos:end="85:18"><name pos:start="85:5" pos:end="85:7">env</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:18">intercept</name></name>            <operator pos:start="85:31" pos:end="85:31">=</operator> <operator pos:start="85:33" pos:end="85:33">(</operator><call pos:start="85:34" pos:end="85:98"><name pos:start="85:34" pos:end="85:41">ldq_phys</name><argument_list pos:start="85:42" pos:end="85:98">(<argument pos:start="85:43" pos:end="85:97"><expr pos:start="85:43" pos:end="85:97"><name pos:start="85:43" pos:end="85:54"><name pos:start="85:43" pos:end="85:45">env</name><operator pos:start="85:46" pos:end="85:47">-&gt;</operator><name pos:start="85:48" pos:end="85:54">vm_vmcb</name></name> <operator pos:start="85:56" pos:end="85:56">+</operator> <call pos:start="85:58" pos:end="85:97"><name pos:start="85:58" pos:end="85:65">offsetof</name><argument_list pos:start="85:66" pos:end="85:97">(<argument pos:start="85:67" pos:end="85:77"><expr pos:start="85:67" pos:end="85:77">struct <name pos:start="85:74" pos:end="85:77">vmcb</name></expr></argument>, <argument pos:start="85:80" pos:end="85:96"><expr pos:start="85:80" pos:end="85:96"><name pos:start="85:80" pos:end="85:96"><name pos:start="85:80" pos:end="85:86">control</name><operator pos:start="85:87" pos:end="85:87">.</operator><name pos:start="85:88" pos:end="85:96">intercept</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="85:100" pos:end="85:101">&lt;&lt;</operator> <name pos:start="85:103" pos:end="85:116">INTERCEPT_INTR</name><operator pos:start="85:117" pos:end="85:117">)</operator> <operator pos:start="85:119" pos:end="85:119">|</operator> <name pos:start="85:121" pos:end="85:138">INTERCEPT_SVM_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:107"><expr pos:start="87:5" pos:end="87:106"><name pos:start="87:5" pos:end="87:26"><name pos:start="87:5" pos:end="87:7">env</name><operator pos:start="87:8" pos:end="87:9">-&gt;</operator><name pos:start="87:10" pos:end="87:26">intercept_cr_read</name></name>    <operator pos:start="87:31" pos:end="87:31">=</operator> <call pos:start="87:33" pos:end="87:106"><name pos:start="87:33" pos:end="87:41">lduw_phys</name><argument_list pos:start="87:42" pos:end="87:106">(<argument pos:start="87:43" pos:end="87:105"><expr pos:start="87:43" pos:end="87:105"><name pos:start="87:43" pos:end="87:54"><name pos:start="87:43" pos:end="87:45">env</name><operator pos:start="87:46" pos:end="87:47">-&gt;</operator><name pos:start="87:48" pos:end="87:54">vm_vmcb</name></name> <operator pos:start="87:56" pos:end="87:56">+</operator> <call pos:start="87:58" pos:end="87:105"><name pos:start="87:58" pos:end="87:65">offsetof</name><argument_list pos:start="87:66" pos:end="87:105">(<argument pos:start="87:67" pos:end="87:77"><expr pos:start="87:67" pos:end="87:77">struct <name pos:start="87:74" pos:end="87:77">vmcb</name></expr></argument>, <argument pos:start="87:80" pos:end="87:104"><expr pos:start="87:80" pos:end="87:104"><name pos:start="87:80" pos:end="87:104"><name pos:start="87:80" pos:end="87:86">control</name><operator pos:start="87:87" pos:end="87:87">.</operator><name pos:start="87:88" pos:end="87:104">intercept_cr_read</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:108"><expr pos:start="89:5" pos:end="89:107"><name pos:start="89:5" pos:end="89:27"><name pos:start="89:5" pos:end="89:7">env</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:27">intercept_cr_write</name></name>   <operator pos:start="89:31" pos:end="89:31">=</operator> <call pos:start="89:33" pos:end="89:107"><name pos:start="89:33" pos:end="89:41">lduw_phys</name><argument_list pos:start="89:42" pos:end="89:107">(<argument pos:start="89:43" pos:end="89:106"><expr pos:start="89:43" pos:end="89:106"><name pos:start="89:43" pos:end="89:54"><name pos:start="89:43" pos:end="89:45">env</name><operator pos:start="89:46" pos:end="89:47">-&gt;</operator><name pos:start="89:48" pos:end="89:54">vm_vmcb</name></name> <operator pos:start="89:56" pos:end="89:56">+</operator> <call pos:start="89:58" pos:end="89:106"><name pos:start="89:58" pos:end="89:65">offsetof</name><argument_list pos:start="89:66" pos:end="89:106">(<argument pos:start="89:67" pos:end="89:77"><expr pos:start="89:67" pos:end="89:77">struct <name pos:start="89:74" pos:end="89:77">vmcb</name></expr></argument>, <argument pos:start="89:80" pos:end="89:105"><expr pos:start="89:80" pos:end="89:105"><name pos:start="89:80" pos:end="89:105"><name pos:start="89:80" pos:end="89:86">control</name><operator pos:start="89:87" pos:end="89:87">.</operator><name pos:start="89:88" pos:end="89:105">intercept_cr_write</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:107"><expr pos:start="91:5" pos:end="91:106"><name pos:start="91:5" pos:end="91:26"><name pos:start="91:5" pos:end="91:7">env</name><operator pos:start="91:8" pos:end="91:9">-&gt;</operator><name pos:start="91:10" pos:end="91:26">intercept_dr_read</name></name>    <operator pos:start="91:31" pos:end="91:31">=</operator> <call pos:start="91:33" pos:end="91:106"><name pos:start="91:33" pos:end="91:41">lduw_phys</name><argument_list pos:start="91:42" pos:end="91:106">(<argument pos:start="91:43" pos:end="91:105"><expr pos:start="91:43" pos:end="91:105"><name pos:start="91:43" pos:end="91:54"><name pos:start="91:43" pos:end="91:45">env</name><operator pos:start="91:46" pos:end="91:47">-&gt;</operator><name pos:start="91:48" pos:end="91:54">vm_vmcb</name></name> <operator pos:start="91:56" pos:end="91:56">+</operator> <call pos:start="91:58" pos:end="91:105"><name pos:start="91:58" pos:end="91:65">offsetof</name><argument_list pos:start="91:66" pos:end="91:105">(<argument pos:start="91:67" pos:end="91:77"><expr pos:start="91:67" pos:end="91:77">struct <name pos:start="91:74" pos:end="91:77">vmcb</name></expr></argument>, <argument pos:start="91:80" pos:end="91:104"><expr pos:start="91:80" pos:end="91:104"><name pos:start="91:80" pos:end="91:104"><name pos:start="91:80" pos:end="91:86">control</name><operator pos:start="91:87" pos:end="91:87">.</operator><name pos:start="91:88" pos:end="91:104">intercept_dr_read</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:108"><expr pos:start="93:5" pos:end="93:107"><name pos:start="93:5" pos:end="93:27"><name pos:start="93:5" pos:end="93:7">env</name><operator pos:start="93:8" pos:end="93:9">-&gt;</operator><name pos:start="93:10" pos:end="93:27">intercept_dr_write</name></name>   <operator pos:start="93:31" pos:end="93:31">=</operator> <call pos:start="93:33" pos:end="93:107"><name pos:start="93:33" pos:end="93:41">lduw_phys</name><argument_list pos:start="93:42" pos:end="93:107">(<argument pos:start="93:43" pos:end="93:106"><expr pos:start="93:43" pos:end="93:106"><name pos:start="93:43" pos:end="93:54"><name pos:start="93:43" pos:end="93:45">env</name><operator pos:start="93:46" pos:end="93:47">-&gt;</operator><name pos:start="93:48" pos:end="93:54">vm_vmcb</name></name> <operator pos:start="93:56" pos:end="93:56">+</operator> <call pos:start="93:58" pos:end="93:106"><name pos:start="93:58" pos:end="93:65">offsetof</name><argument_list pos:start="93:66" pos:end="93:106">(<argument pos:start="93:67" pos:end="93:77"><expr pos:start="93:67" pos:end="93:77">struct <name pos:start="93:74" pos:end="93:77">vmcb</name></expr></argument>, <argument pos:start="93:80" pos:end="93:105"><expr pos:start="93:80" pos:end="93:105"><name pos:start="93:80" pos:end="93:105"><name pos:start="93:80" pos:end="93:86">control</name><operator pos:start="93:87" pos:end="93:87">.</operator><name pos:start="93:88" pos:end="93:105">intercept_dr_write</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:109"><expr pos:start="95:5" pos:end="95:108"><name pos:start="95:5" pos:end="95:29"><name pos:start="95:5" pos:end="95:7">env</name><operator pos:start="95:8" pos:end="95:9">-&gt;</operator><name pos:start="95:10" pos:end="95:29">intercept_exceptions</name></name> <operator pos:start="95:31" pos:end="95:31">=</operator> <call pos:start="95:33" pos:end="95:108"><name pos:start="95:33" pos:end="95:40">ldl_phys</name><argument_list pos:start="95:41" pos:end="95:108">(<argument pos:start="95:42" pos:end="95:107"><expr pos:start="95:42" pos:end="95:107"><name pos:start="95:42" pos:end="95:53"><name pos:start="95:42" pos:end="95:44">env</name><operator pos:start="95:45" pos:end="95:46">-&gt;</operator><name pos:start="95:47" pos:end="95:53">vm_vmcb</name></name> <operator pos:start="95:55" pos:end="95:55">+</operator> <call pos:start="95:57" pos:end="95:107"><name pos:start="95:57" pos:end="95:64">offsetof</name><argument_list pos:start="95:65" pos:end="95:107">(<argument pos:start="95:66" pos:end="95:76"><expr pos:start="95:66" pos:end="95:76">struct <name pos:start="95:73" pos:end="95:76">vmcb</name></expr></argument>, <argument pos:start="95:79" pos:end="95:106"><expr pos:start="95:79" pos:end="95:106"><name pos:start="95:79" pos:end="95:106"><name pos:start="95:79" pos:end="95:85">control</name><operator pos:start="95:86" pos:end="95:86">.</operator><name pos:start="95:87" pos:end="95:106">intercept_exceptions</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:84"><expr pos:start="99:5" pos:end="99:83"><name pos:start="99:5" pos:end="99:17"><name pos:start="99:5" pos:end="99:7">env</name><operator pos:start="99:8" pos:end="99:9">-&gt;</operator><name pos:start="99:10" pos:end="99:12">gdt</name><operator pos:start="99:13" pos:end="99:13">.</operator><name pos:start="99:14" pos:end="99:17">base</name></name>  <operator pos:start="99:20" pos:end="99:20">=</operator> <call pos:start="99:22" pos:end="99:83"><name pos:start="99:22" pos:end="99:29">ldq_phys</name><argument_list pos:start="99:30" pos:end="99:83">(<argument pos:start="99:31" pos:end="99:82"><expr pos:start="99:31" pos:end="99:82"><name pos:start="99:31" pos:end="99:42"><name pos:start="99:31" pos:end="99:33">env</name><operator pos:start="99:34" pos:end="99:35">-&gt;</operator><name pos:start="99:36" pos:end="99:42">vm_vmcb</name></name> <operator pos:start="99:44" pos:end="99:44">+</operator> <call pos:start="99:46" pos:end="99:82"><name pos:start="99:46" pos:end="99:53">offsetof</name><argument_list pos:start="99:54" pos:end="99:82">(<argument pos:start="99:55" pos:end="99:65"><expr pos:start="99:55" pos:end="99:65">struct <name pos:start="99:62" pos:end="99:65">vmcb</name></expr></argument>, <argument pos:start="99:68" pos:end="99:81"><expr pos:start="99:68" pos:end="99:81"><name pos:start="99:68" pos:end="99:81"><name pos:start="99:68" pos:end="99:71">save</name><operator pos:start="99:72" pos:end="99:72">.</operator><name pos:start="99:73" pos:end="99:76">gdtr</name><operator pos:start="99:77" pos:end="99:77">.</operator><name pos:start="99:78" pos:end="99:81">base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:85"><expr pos:start="101:5" pos:end="101:84"><name pos:start="101:5" pos:end="101:18"><name pos:start="101:5" pos:end="101:7">env</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:12">gdt</name><operator pos:start="101:13" pos:end="101:13">.</operator><name pos:start="101:14" pos:end="101:18">limit</name></name> <operator pos:start="101:20" pos:end="101:20">=</operator> <call pos:start="101:22" pos:end="101:84"><name pos:start="101:22" pos:end="101:29">ldl_phys</name><argument_list pos:start="101:30" pos:end="101:84">(<argument pos:start="101:31" pos:end="101:83"><expr pos:start="101:31" pos:end="101:83"><name pos:start="101:31" pos:end="101:42"><name pos:start="101:31" pos:end="101:33">env</name><operator pos:start="101:34" pos:end="101:35">-&gt;</operator><name pos:start="101:36" pos:end="101:42">vm_vmcb</name></name> <operator pos:start="101:44" pos:end="101:44">+</operator> <call pos:start="101:46" pos:end="101:83"><name pos:start="101:46" pos:end="101:53">offsetof</name><argument_list pos:start="101:54" pos:end="101:83">(<argument pos:start="101:55" pos:end="101:65"><expr pos:start="101:55" pos:end="101:65">struct <name pos:start="101:62" pos:end="101:65">vmcb</name></expr></argument>, <argument pos:start="101:68" pos:end="101:82"><expr pos:start="101:68" pos:end="101:82"><name pos:start="101:68" pos:end="101:82"><name pos:start="101:68" pos:end="101:71">save</name><operator pos:start="101:72" pos:end="101:72">.</operator><name pos:start="101:73" pos:end="101:76">gdtr</name><operator pos:start="101:77" pos:end="101:77">.</operator><name pos:start="101:78" pos:end="101:82">limit</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:84"><expr pos:start="105:5" pos:end="105:83"><name pos:start="105:5" pos:end="105:17"><name pos:start="105:5" pos:end="105:7">env</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:12">idt</name><operator pos:start="105:13" pos:end="105:13">.</operator><name pos:start="105:14" pos:end="105:17">base</name></name>  <operator pos:start="105:20" pos:end="105:20">=</operator> <call pos:start="105:22" pos:end="105:83"><name pos:start="105:22" pos:end="105:29">ldq_phys</name><argument_list pos:start="105:30" pos:end="105:83">(<argument pos:start="105:31" pos:end="105:82"><expr pos:start="105:31" pos:end="105:82"><name pos:start="105:31" pos:end="105:42"><name pos:start="105:31" pos:end="105:33">env</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:42">vm_vmcb</name></name> <operator pos:start="105:44" pos:end="105:44">+</operator> <call pos:start="105:46" pos:end="105:82"><name pos:start="105:46" pos:end="105:53">offsetof</name><argument_list pos:start="105:54" pos:end="105:82">(<argument pos:start="105:55" pos:end="105:65"><expr pos:start="105:55" pos:end="105:65">struct <name pos:start="105:62" pos:end="105:65">vmcb</name></expr></argument>, <argument pos:start="105:68" pos:end="105:81"><expr pos:start="105:68" pos:end="105:81"><name pos:start="105:68" pos:end="105:81"><name pos:start="105:68" pos:end="105:71">save</name><operator pos:start="105:72" pos:end="105:72">.</operator><name pos:start="105:73" pos:end="105:76">idtr</name><operator pos:start="105:77" pos:end="105:77">.</operator><name pos:start="105:78" pos:end="105:81">base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:85"><expr pos:start="107:5" pos:end="107:84"><name pos:start="107:5" pos:end="107:18"><name pos:start="107:5" pos:end="107:7">env</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:12">idt</name><operator pos:start="107:13" pos:end="107:13">.</operator><name pos:start="107:14" pos:end="107:18">limit</name></name> <operator pos:start="107:20" pos:end="107:20">=</operator> <call pos:start="107:22" pos:end="107:84"><name pos:start="107:22" pos:end="107:29">ldl_phys</name><argument_list pos:start="107:30" pos:end="107:84">(<argument pos:start="107:31" pos:end="107:83"><expr pos:start="107:31" pos:end="107:83"><name pos:start="107:31" pos:end="107:42"><name pos:start="107:31" pos:end="107:33">env</name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:42">vm_vmcb</name></name> <operator pos:start="107:44" pos:end="107:44">+</operator> <call pos:start="107:46" pos:end="107:83"><name pos:start="107:46" pos:end="107:53">offsetof</name><argument_list pos:start="107:54" pos:end="107:83">(<argument pos:start="107:55" pos:end="107:65"><expr pos:start="107:55" pos:end="107:65">struct <name pos:start="107:62" pos:end="107:65">vmcb</name></expr></argument>, <argument pos:start="107:68" pos:end="107:82"><expr pos:start="107:68" pos:end="107:82"><name pos:start="107:68" pos:end="107:82"><name pos:start="107:68" pos:end="107:71">save</name><operator pos:start="107:72" pos:end="107:72">.</operator><name pos:start="107:73" pos:end="107:76">idtr</name><operator pos:start="107:77" pos:end="107:77">.</operator><name pos:start="107:78" pos:end="107:82">limit</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="111:5" pos:end="111:63">/* clear exit_info_2 so we behave like the real hardware */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:75"><expr pos:start="113:5" pos:end="113:74"><call pos:start="113:5" pos:end="113:74"><name pos:start="113:5" pos:end="113:12">stq_phys</name><argument_list pos:start="113:13" pos:end="113:74">(<argument pos:start="113:14" pos:end="113:70"><expr pos:start="113:14" pos:end="113:70"><name pos:start="113:14" pos:end="113:25"><name pos:start="113:14" pos:end="113:16">env</name><operator pos:start="113:17" pos:end="113:18">-&gt;</operator><name pos:start="113:19" pos:end="113:25">vm_vmcb</name></name> <operator pos:start="113:27" pos:end="113:27">+</operator> <call pos:start="113:29" pos:end="113:70"><name pos:start="113:29" pos:end="113:36">offsetof</name><argument_list pos:start="113:37" pos:end="113:70">(<argument pos:start="113:38" pos:end="113:48"><expr pos:start="113:38" pos:end="113:48">struct <name pos:start="113:45" pos:end="113:48">vmcb</name></expr></argument>, <argument pos:start="113:51" pos:end="113:69"><expr pos:start="113:51" pos:end="113:69"><name pos:start="113:51" pos:end="113:69"><name pos:start="113:51" pos:end="113:57">control</name><operator pos:start="113:58" pos:end="113:58">.</operator><name pos:start="113:59" pos:end="113:69">exit_info_2</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="113:73" pos:end="113:73"><expr pos:start="113:73" pos:end="113:73"><literal type="number" pos:start="113:73" pos:end="113:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:86"><expr pos:start="117:5" pos:end="117:85"><call pos:start="117:5" pos:end="117:85"><name pos:start="117:5" pos:end="117:22">cpu_x86_update_cr0</name><argument_list pos:start="117:23" pos:end="117:85">(<argument pos:start="117:24" pos:end="117:26"><expr pos:start="117:24" pos:end="117:26"><name pos:start="117:24" pos:end="117:26">env</name></expr></argument>, <argument pos:start="117:29" pos:end="117:84"><expr pos:start="117:29" pos:end="117:84"><call pos:start="117:29" pos:end="117:84"><name pos:start="117:29" pos:end="117:36">ldq_phys</name><argument_list pos:start="117:37" pos:end="117:84">(<argument pos:start="117:38" pos:end="117:83"><expr pos:start="117:38" pos:end="117:83"><name pos:start="117:38" pos:end="117:49"><name pos:start="117:38" pos:end="117:40">env</name><operator pos:start="117:41" pos:end="117:42">-&gt;</operator><name pos:start="117:43" pos:end="117:49">vm_vmcb</name></name> <operator pos:start="117:51" pos:end="117:51">+</operator> <call pos:start="117:53" pos:end="117:83"><name pos:start="117:53" pos:end="117:60">offsetof</name><argument_list pos:start="117:61" pos:end="117:83">(<argument pos:start="117:62" pos:end="117:72"><expr pos:start="117:62" pos:end="117:72">struct <name pos:start="117:69" pos:end="117:72">vmcb</name></expr></argument>, <argument pos:start="117:75" pos:end="117:82"><expr pos:start="117:75" pos:end="117:82"><name pos:start="117:75" pos:end="117:82"><name pos:start="117:75" pos:end="117:78">save</name><operator pos:start="117:79" pos:end="117:79">.</operator><name pos:start="117:80" pos:end="117:82">cr0</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:86"><expr pos:start="119:5" pos:end="119:85"><call pos:start="119:5" pos:end="119:85"><name pos:start="119:5" pos:end="119:22">cpu_x86_update_cr4</name><argument_list pos:start="119:23" pos:end="119:85">(<argument pos:start="119:24" pos:end="119:26"><expr pos:start="119:24" pos:end="119:26"><name pos:start="119:24" pos:end="119:26">env</name></expr></argument>, <argument pos:start="119:29" pos:end="119:84"><expr pos:start="119:29" pos:end="119:84"><call pos:start="119:29" pos:end="119:84"><name pos:start="119:29" pos:end="119:36">ldq_phys</name><argument_list pos:start="119:37" pos:end="119:84">(<argument pos:start="119:38" pos:end="119:83"><expr pos:start="119:38" pos:end="119:83"><name pos:start="119:38" pos:end="119:49"><name pos:start="119:38" pos:end="119:40">env</name><operator pos:start="119:41" pos:end="119:42">-&gt;</operator><name pos:start="119:43" pos:end="119:49">vm_vmcb</name></name> <operator pos:start="119:51" pos:end="119:51">+</operator> <call pos:start="119:53" pos:end="119:83"><name pos:start="119:53" pos:end="119:60">offsetof</name><argument_list pos:start="119:61" pos:end="119:83">(<argument pos:start="119:62" pos:end="119:72"><expr pos:start="119:62" pos:end="119:72">struct <name pos:start="119:69" pos:end="119:72">vmcb</name></expr></argument>, <argument pos:start="119:75" pos:end="119:82"><expr pos:start="119:75" pos:end="119:82"><name pos:start="119:75" pos:end="119:82"><name pos:start="119:75" pos:end="119:78">save</name><operator pos:start="119:79" pos:end="119:79">.</operator><name pos:start="119:80" pos:end="119:82">cr4</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:86"><expr pos:start="121:5" pos:end="121:85"><call pos:start="121:5" pos:end="121:85"><name pos:start="121:5" pos:end="121:22">cpu_x86_update_cr3</name><argument_list pos:start="121:23" pos:end="121:85">(<argument pos:start="121:24" pos:end="121:26"><expr pos:start="121:24" pos:end="121:26"><name pos:start="121:24" pos:end="121:26">env</name></expr></argument>, <argument pos:start="121:29" pos:end="121:84"><expr pos:start="121:29" pos:end="121:84"><call pos:start="121:29" pos:end="121:84"><name pos:start="121:29" pos:end="121:36">ldq_phys</name><argument_list pos:start="121:37" pos:end="121:84">(<argument pos:start="121:38" pos:end="121:83"><expr pos:start="121:38" pos:end="121:83"><name pos:start="121:38" pos:end="121:49"><name pos:start="121:38" pos:end="121:40">env</name><operator pos:start="121:41" pos:end="121:42">-&gt;</operator><name pos:start="121:43" pos:end="121:49">vm_vmcb</name></name> <operator pos:start="121:51" pos:end="121:51">+</operator> <call pos:start="121:53" pos:end="121:83"><name pos:start="121:53" pos:end="121:60">offsetof</name><argument_list pos:start="121:61" pos:end="121:83">(<argument pos:start="121:62" pos:end="121:72"><expr pos:start="121:62" pos:end="121:72">struct <name pos:start="121:69" pos:end="121:72">vmcb</name></expr></argument>, <argument pos:start="121:75" pos:end="121:82"><expr pos:start="121:75" pos:end="121:82"><name pos:start="121:75" pos:end="121:82"><name pos:start="121:75" pos:end="121:78">save</name><operator pos:start="121:79" pos:end="121:79">.</operator><name pos:start="121:80" pos:end="121:82">cr3</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:74"><expr pos:start="123:5" pos:end="123:73"><name pos:start="123:5" pos:end="123:14"><name pos:start="123:5" pos:end="123:7">env</name><operator pos:start="123:8" pos:end="123:9">-&gt;</operator><name pos:start="123:10" pos:end="123:11">cr</name><index pos:start="123:12" pos:end="123:14">[<expr pos:start="123:13" pos:end="123:13"><literal type="number" pos:start="123:13" pos:end="123:13">2</literal></expr>]</index></name> <operator pos:start="123:16" pos:end="123:16">=</operator> <call pos:start="123:18" pos:end="123:73"><name pos:start="123:18" pos:end="123:25">ldq_phys</name><argument_list pos:start="123:26" pos:end="123:73">(<argument pos:start="123:27" pos:end="123:72"><expr pos:start="123:27" pos:end="123:72"><name pos:start="123:27" pos:end="123:38"><name pos:start="123:27" pos:end="123:29">env</name><operator pos:start="123:30" pos:end="123:31">-&gt;</operator><name pos:start="123:32" pos:end="123:38">vm_vmcb</name></name> <operator pos:start="123:40" pos:end="123:40">+</operator> <call pos:start="123:42" pos:end="123:72"><name pos:start="123:42" pos:end="123:49">offsetof</name><argument_list pos:start="123:50" pos:end="123:72">(<argument pos:start="123:51" pos:end="123:61"><expr pos:start="123:51" pos:end="123:61">struct <name pos:start="123:58" pos:end="123:61">vmcb</name></expr></argument>, <argument pos:start="123:64" pos:end="123:71"><expr pos:start="123:64" pos:end="123:71"><name pos:start="123:64" pos:end="123:71"><name pos:start="123:64" pos:end="123:67">save</name><operator pos:start="123:68" pos:end="123:68">.</operator><name pos:start="123:69" pos:end="123:71">cr2</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:78"><expr pos:start="125:5" pos:end="125:77"><name pos:start="125:5" pos:end="125:11">int_ctl</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <call pos:start="125:15" pos:end="125:77"><name pos:start="125:15" pos:end="125:22">ldl_phys</name><argument_list pos:start="125:23" pos:end="125:77">(<argument pos:start="125:24" pos:end="125:76"><expr pos:start="125:24" pos:end="125:76"><name pos:start="125:24" pos:end="125:35"><name pos:start="125:24" pos:end="125:26">env</name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:35">vm_vmcb</name></name> <operator pos:start="125:37" pos:end="125:37">+</operator> <call pos:start="125:39" pos:end="125:76"><name pos:start="125:39" pos:end="125:46">offsetof</name><argument_list pos:start="125:47" pos:end="125:76">(<argument pos:start="125:48" pos:end="125:58"><expr pos:start="125:48" pos:end="125:58">struct <name pos:start="125:55" pos:end="125:58">vmcb</name></expr></argument>, <argument pos:start="125:61" pos:end="125:75"><expr pos:start="125:61" pos:end="125:75"><name pos:start="125:61" pos:end="125:75"><name pos:start="125:61" pos:end="125:67">control</name><operator pos:start="125:68" pos:end="125:68">.</operator><name pos:start="125:69" pos:end="125:75">int_ctl</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="127:5" pos:end="142:0"><if pos:start="127:5" pos:end="142:0">if <condition pos:start="127:8" pos:end="127:38">(<expr pos:start="127:9" pos:end="127:37"><name pos:start="127:9" pos:end="127:15">int_ctl</name> <operator pos:start="127:17" pos:end="127:17">&amp;</operator> <name pos:start="127:19" pos:end="127:37">V_INTR_MASKING_MASK</name></expr>)</condition> <block pos:start="127:40" pos:end="142:0">{<block_content pos:start="129:9" pos:end="135:39">

        <expr_stmt pos:start="129:9" pos:end="129:42"><expr pos:start="129:9" pos:end="129:41"><name pos:start="129:9" pos:end="129:18"><name pos:start="129:9" pos:end="129:11">env</name><operator pos:start="129:12" pos:end="129:13">-&gt;</operator><name pos:start="129:14" pos:end="129:15">cr</name><index pos:start="129:16" pos:end="129:18">[<expr pos:start="129:17" pos:end="129:17"><literal type="number" pos:start="129:17" pos:end="129:17">8</literal></expr>]</index></name> <operator pos:start="129:20" pos:end="129:20">=</operator> <name pos:start="129:22" pos:end="129:28">int_ctl</name> <operator pos:start="129:30" pos:end="129:30">&amp;</operator> <name pos:start="129:32" pos:end="129:41">V_TPR_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:42"><expr pos:start="131:9" pos:end="131:41"><call pos:start="131:9" pos:end="131:41"><name pos:start="131:9" pos:end="131:24">cpu_set_apic_tpr</name><argument_list pos:start="131:25" pos:end="131:41">(<argument pos:start="131:26" pos:end="131:28"><expr pos:start="131:26" pos:end="131:28"><name pos:start="131:26" pos:end="131:28">env</name></expr></argument>, <argument pos:start="131:31" pos:end="131:40"><expr pos:start="131:31" pos:end="131:40"><name pos:start="131:31" pos:end="131:40"><name pos:start="131:31" pos:end="131:33">env</name><operator pos:start="131:34" pos:end="131:35">-&gt;</operator><name pos:start="131:36" pos:end="131:37">cr</name><index pos:start="131:38" pos:end="131:40">[<expr pos:start="131:39" pos:end="131:39"><literal type="number" pos:start="131:39" pos:end="131:39">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="133:9" pos:end="135:39"><if pos:start="133:9" pos:end="135:39">if <condition pos:start="133:12" pos:end="133:34">(<expr pos:start="133:13" pos:end="133:33"><name pos:start="133:13" pos:end="133:23"><name pos:start="133:13" pos:end="133:15">env</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:23">eflags</name></name> <operator pos:start="133:25" pos:end="133:25">&amp;</operator> <name pos:start="133:27" pos:end="133:33">IF_MASK</name></expr>)</condition><block type="pseudo" pos:start="135:13" pos:end="135:39"><block_content pos:start="135:13" pos:end="135:39">

            <expr_stmt pos:start="135:13" pos:end="135:39"><expr pos:start="135:13" pos:end="135:38"><name pos:start="135:13" pos:end="135:23"><name pos:start="135:13" pos:end="135:15">env</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:23">hflags</name></name> <operator pos:start="135:25" pos:end="135:26">|=</operator> <name pos:start="135:28" pos:end="135:38">HF_HIF_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="141:1" pos:end="141:20">#<cpp:directive pos:start="141:2" pos:end="141:6">ifdef</cpp:directive> <name pos:start="141:8" pos:end="141:20">TARGET_X86_64</name></cpp:ifdef>

    <expr_stmt pos:start="143:5" pos:end="143:74"><expr pos:start="143:5" pos:end="143:73"><name pos:start="143:5" pos:end="143:13"><name pos:start="143:5" pos:end="143:7">env</name><operator pos:start="143:8" pos:end="143:9">-&gt;</operator><name pos:start="143:10" pos:end="143:13">efer</name></name> <operator pos:start="143:15" pos:end="143:15">=</operator> <call pos:start="143:17" pos:end="143:73"><name pos:start="143:17" pos:end="143:24">ldq_phys</name><argument_list pos:start="143:25" pos:end="143:73">(<argument pos:start="143:26" pos:end="143:72"><expr pos:start="143:26" pos:end="143:72"><name pos:start="143:26" pos:end="143:37"><name pos:start="143:26" pos:end="143:28">env</name><operator pos:start="143:29" pos:end="143:30">-&gt;</operator><name pos:start="143:31" pos:end="143:37">vm_vmcb</name></name> <operator pos:start="143:39" pos:end="143:39">+</operator> <call pos:start="143:41" pos:end="143:72"><name pos:start="143:41" pos:end="143:48">offsetof</name><argument_list pos:start="143:49" pos:end="143:72">(<argument pos:start="143:50" pos:end="143:60"><expr pos:start="143:50" pos:end="143:60">struct <name pos:start="143:57" pos:end="143:60">vmcb</name></expr></argument>, <argument pos:start="143:63" pos:end="143:71"><expr pos:start="143:63" pos:end="143:71"><name pos:start="143:63" pos:end="143:71"><name pos:start="143:63" pos:end="143:66">save</name><operator pos:start="143:67" pos:end="143:67">.</operator><name pos:start="143:68" pos:end="143:71">efer</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:32"><expr pos:start="145:5" pos:end="145:31"><name pos:start="145:5" pos:end="145:15"><name pos:start="145:5" pos:end="145:7">env</name><operator pos:start="145:8" pos:end="145:9">-&gt;</operator><name pos:start="145:10" pos:end="145:15">hflags</name></name> <operator pos:start="145:17" pos:end="145:18">&amp;=</operator> <operator pos:start="145:20" pos:end="145:20">~</operator><name pos:start="145:21" pos:end="145:31">HF_LMA_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="147:5" pos:end="152:0"><if pos:start="147:5" pos:end="152:0">if <condition pos:start="147:8" pos:end="147:33">(<expr pos:start="147:9" pos:end="147:32"><name pos:start="147:9" pos:end="147:17"><name pos:start="147:9" pos:end="147:11">env</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:17">efer</name></name> <operator pos:start="147:19" pos:end="147:19">&amp;</operator> <name pos:start="147:21" pos:end="147:32">MSR_EFER_LMA</name></expr>)</condition><block type="pseudo" pos:start="149:8" pos:end="152:0"><block_content pos:start="149:8" pos:end="152:0">

       <expr_stmt pos:start="149:8" pos:end="152:0"><expr pos:start="149:8" pos:end="149:33"><name pos:start="149:8" pos:end="149:18"><name pos:start="149:8" pos:end="149:10">env</name><operator pos:start="149:11" pos:end="149:12">-&gt;</operator><name pos:start="149:13" pos:end="149:18">hflags</name></name> <operator pos:start="149:20" pos:end="149:21">|=</operator> <name pos:start="149:23" pos:end="149:33">HF_LMA_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="151:1" pos:end="151:6">#<cpp:directive pos:start="151:2" pos:end="151:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="153:5" pos:end="153:20"><expr pos:start="153:5" pos:end="153:19"><name pos:start="153:5" pos:end="153:15"><name pos:start="153:5" pos:end="153:7">env</name><operator pos:start="153:8" pos:end="153:9">-&gt;</operator><name pos:start="153:10" pos:end="153:15">eflags</name></name> <operator pos:start="153:17" pos:end="153:17">=</operator> <literal type="number" pos:start="153:19" pos:end="153:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="157:70"><expr pos:start="155:5" pos:end="157:69"><call pos:start="155:5" pos:end="157:69"><name pos:start="155:5" pos:end="155:15">load_eflags</name><argument_list pos:start="155:16" pos:end="157:69">(<argument pos:start="155:17" pos:end="155:75"><expr pos:start="155:17" pos:end="155:75"><call pos:start="155:17" pos:end="155:75"><name pos:start="155:17" pos:end="155:24">ldq_phys</name><argument_list pos:start="155:25" pos:end="155:75">(<argument pos:start="155:26" pos:end="155:74"><expr pos:start="155:26" pos:end="155:74"><name pos:start="155:26" pos:end="155:37"><name pos:start="155:26" pos:end="155:28">env</name><operator pos:start="155:29" pos:end="155:30">-&gt;</operator><name pos:start="155:31" pos:end="155:37">vm_vmcb</name></name> <operator pos:start="155:39" pos:end="155:39">+</operator> <call pos:start="155:41" pos:end="155:74"><name pos:start="155:41" pos:end="155:48">offsetof</name><argument_list pos:start="155:49" pos:end="155:74">(<argument pos:start="155:50" pos:end="155:60"><expr pos:start="155:50" pos:end="155:60">struct <name pos:start="155:57" pos:end="155:60">vmcb</name></expr></argument>, <argument pos:start="155:63" pos:end="155:73"><expr pos:start="155:63" pos:end="155:73"><name pos:start="155:63" pos:end="155:73"><name pos:start="155:63" pos:end="155:66">save</name><operator pos:start="155:67" pos:end="155:67">.</operator><name pos:start="155:68" pos:end="155:73">rflags</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="157:17" pos:end="157:68"><expr pos:start="157:17" pos:end="157:68"><operator pos:start="157:17" pos:end="157:17">~</operator><operator pos:start="157:18" pos:end="157:18">(</operator><name pos:start="157:19" pos:end="157:22">CC_O</name> <operator pos:start="157:24" pos:end="157:24">|</operator> <name pos:start="157:26" pos:end="157:29">CC_S</name> <operator pos:start="157:31" pos:end="157:31">|</operator> <name pos:start="157:33" pos:end="157:36">CC_Z</name> <operator pos:start="157:38" pos:end="157:38">|</operator> <name pos:start="157:40" pos:end="157:43">CC_A</name> <operator pos:start="157:45" pos:end="157:45">|</operator> <name pos:start="157:47" pos:end="157:50">CC_P</name> <operator pos:start="157:52" pos:end="157:52">|</operator> <name pos:start="157:54" pos:end="157:57">CC_C</name> <operator pos:start="157:59" pos:end="157:59">|</operator> <name pos:start="157:61" pos:end="157:67">DF_MASK</name><operator pos:start="157:68" pos:end="157:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:25"><expr pos:start="159:5" pos:end="159:24"><name pos:start="159:5" pos:end="159:9">CC_OP</name> <operator pos:start="159:11" pos:end="159:11">=</operator> <name pos:start="159:13" pos:end="159:24">CC_OP_EFLAGS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:24"><expr pos:start="161:5" pos:end="161:23"><name pos:start="161:5" pos:end="161:10">CC_DST</name> <operator pos:start="161:12" pos:end="161:12">=</operator> <literal type="number" pos:start="161:14" pos:end="161:23">0xffffffff</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:39"><expr pos:start="165:5" pos:end="165:38"><call pos:start="165:5" pos:end="165:38"><name pos:start="165:5" pos:end="165:16">SVM_LOAD_SEG</name><argument_list pos:start="165:17" pos:end="165:38">(<argument pos:start="165:18" pos:end="165:29"><expr pos:start="165:18" pos:end="165:29"><name pos:start="165:18" pos:end="165:29"><name pos:start="165:18" pos:end="165:20">env</name><operator pos:start="165:21" pos:end="165:22">-&gt;</operator><name pos:start="165:23" pos:end="165:29">vm_vmcb</name></name></expr></argument>, <argument pos:start="165:32" pos:end="165:33"><expr pos:start="165:32" pos:end="165:33"><name pos:start="165:32" pos:end="165:33">ES</name></expr></argument>, <argument pos:start="165:36" pos:end="165:37"><expr pos:start="165:36" pos:end="165:37"><name pos:start="165:36" pos:end="165:37">es</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:39"><expr pos:start="167:5" pos:end="167:38"><call pos:start="167:5" pos:end="167:38"><name pos:start="167:5" pos:end="167:16">SVM_LOAD_SEG</name><argument_list pos:start="167:17" pos:end="167:38">(<argument pos:start="167:18" pos:end="167:29"><expr pos:start="167:18" pos:end="167:29"><name pos:start="167:18" pos:end="167:29"><name pos:start="167:18" pos:end="167:20">env</name><operator pos:start="167:21" pos:end="167:22">-&gt;</operator><name pos:start="167:23" pos:end="167:29">vm_vmcb</name></name></expr></argument>, <argument pos:start="167:32" pos:end="167:33"><expr pos:start="167:32" pos:end="167:33"><name pos:start="167:32" pos:end="167:33">CS</name></expr></argument>, <argument pos:start="167:36" pos:end="167:37"><expr pos:start="167:36" pos:end="167:37"><name pos:start="167:36" pos:end="167:37">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:39"><expr pos:start="169:5" pos:end="169:38"><call pos:start="169:5" pos:end="169:38"><name pos:start="169:5" pos:end="169:16">SVM_LOAD_SEG</name><argument_list pos:start="169:17" pos:end="169:38">(<argument pos:start="169:18" pos:end="169:29"><expr pos:start="169:18" pos:end="169:29"><name pos:start="169:18" pos:end="169:29"><name pos:start="169:18" pos:end="169:20">env</name><operator pos:start="169:21" pos:end="169:22">-&gt;</operator><name pos:start="169:23" pos:end="169:29">vm_vmcb</name></name></expr></argument>, <argument pos:start="169:32" pos:end="169:33"><expr pos:start="169:32" pos:end="169:33"><name pos:start="169:32" pos:end="169:33">SS</name></expr></argument>, <argument pos:start="169:36" pos:end="169:37"><expr pos:start="169:36" pos:end="169:37"><name pos:start="169:36" pos:end="169:37">ss</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:39"><expr pos:start="171:5" pos:end="171:38"><call pos:start="171:5" pos:end="171:38"><name pos:start="171:5" pos:end="171:16">SVM_LOAD_SEG</name><argument_list pos:start="171:17" pos:end="171:38">(<argument pos:start="171:18" pos:end="171:29"><expr pos:start="171:18" pos:end="171:29"><name pos:start="171:18" pos:end="171:29"><name pos:start="171:18" pos:end="171:20">env</name><operator pos:start="171:21" pos:end="171:22">-&gt;</operator><name pos:start="171:23" pos:end="171:29">vm_vmcb</name></name></expr></argument>, <argument pos:start="171:32" pos:end="171:33"><expr pos:start="171:32" pos:end="171:33"><name pos:start="171:32" pos:end="171:33">DS</name></expr></argument>, <argument pos:start="171:36" pos:end="171:37"><expr pos:start="171:36" pos:end="171:37"><name pos:start="171:36" pos:end="171:37">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:67"><expr pos:start="175:5" pos:end="175:66"><name pos:start="175:5" pos:end="175:7">EIP</name> <operator pos:start="175:9" pos:end="175:9">=</operator> <call pos:start="175:11" pos:end="175:66"><name pos:start="175:11" pos:end="175:18">ldq_phys</name><argument_list pos:start="175:19" pos:end="175:66">(<argument pos:start="175:20" pos:end="175:65"><expr pos:start="175:20" pos:end="175:65"><name pos:start="175:20" pos:end="175:31"><name pos:start="175:20" pos:end="175:22">env</name><operator pos:start="175:23" pos:end="175:24">-&gt;</operator><name pos:start="175:25" pos:end="175:31">vm_vmcb</name></name> <operator pos:start="175:33" pos:end="175:33">+</operator> <call pos:start="175:35" pos:end="175:65"><name pos:start="175:35" pos:end="175:42">offsetof</name><argument_list pos:start="175:43" pos:end="175:65">(<argument pos:start="175:44" pos:end="175:54"><expr pos:start="175:44" pos:end="175:54">struct <name pos:start="175:51" pos:end="175:54">vmcb</name></expr></argument>, <argument pos:start="175:57" pos:end="175:64"><expr pos:start="175:57" pos:end="175:64"><name pos:start="175:57" pos:end="175:64"><name pos:start="175:57" pos:end="175:60">save</name><operator pos:start="175:61" pos:end="175:61">.</operator><name pos:start="175:62" pos:end="175:64">rip</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:19"><expr pos:start="177:5" pos:end="177:18"><name pos:start="177:5" pos:end="177:12"><name pos:start="177:5" pos:end="177:7">env</name><operator pos:start="177:8" pos:end="177:9">-&gt;</operator><name pos:start="177:10" pos:end="177:12">eip</name></name> <operator pos:start="177:14" pos:end="177:14">=</operator> <name pos:start="177:16" pos:end="177:18">EIP</name></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:67"><expr pos:start="179:5" pos:end="179:66"><name pos:start="179:5" pos:end="179:7">ESP</name> <operator pos:start="179:9" pos:end="179:9">=</operator> <call pos:start="179:11" pos:end="179:66"><name pos:start="179:11" pos:end="179:18">ldq_phys</name><argument_list pos:start="179:19" pos:end="179:66">(<argument pos:start="179:20" pos:end="179:65"><expr pos:start="179:20" pos:end="179:65"><name pos:start="179:20" pos:end="179:31"><name pos:start="179:20" pos:end="179:22">env</name><operator pos:start="179:23" pos:end="179:24">-&gt;</operator><name pos:start="179:25" pos:end="179:31">vm_vmcb</name></name> <operator pos:start="179:33" pos:end="179:33">+</operator> <call pos:start="179:35" pos:end="179:65"><name pos:start="179:35" pos:end="179:42">offsetof</name><argument_list pos:start="179:43" pos:end="179:65">(<argument pos:start="179:44" pos:end="179:54"><expr pos:start="179:44" pos:end="179:54">struct <name pos:start="179:51" pos:end="179:54">vmcb</name></expr></argument>, <argument pos:start="179:57" pos:end="179:64"><expr pos:start="179:57" pos:end="179:64"><name pos:start="179:57" pos:end="179:64"><name pos:start="179:57" pos:end="179:60">save</name><operator pos:start="179:61" pos:end="179:61">.</operator><name pos:start="179:62" pos:end="179:64">rsp</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:67"><expr pos:start="181:5" pos:end="181:66"><name pos:start="181:5" pos:end="181:7">EAX</name> <operator pos:start="181:9" pos:end="181:9">=</operator> <call pos:start="181:11" pos:end="181:66"><name pos:start="181:11" pos:end="181:18">ldq_phys</name><argument_list pos:start="181:19" pos:end="181:66">(<argument pos:start="181:20" pos:end="181:65"><expr pos:start="181:20" pos:end="181:65"><name pos:start="181:20" pos:end="181:31"><name pos:start="181:20" pos:end="181:22">env</name><operator pos:start="181:23" pos:end="181:24">-&gt;</operator><name pos:start="181:25" pos:end="181:31">vm_vmcb</name></name> <operator pos:start="181:33" pos:end="181:33">+</operator> <call pos:start="181:35" pos:end="181:65"><name pos:start="181:35" pos:end="181:42">offsetof</name><argument_list pos:start="181:43" pos:end="181:65">(<argument pos:start="181:44" pos:end="181:54"><expr pos:start="181:44" pos:end="181:54">struct <name pos:start="181:51" pos:end="181:54">vmcb</name></expr></argument>, <argument pos:start="181:57" pos:end="181:64"><expr pos:start="181:57" pos:end="181:64"><name pos:start="181:57" pos:end="181:64"><name pos:start="181:57" pos:end="181:60">save</name><operator pos:start="181:61" pos:end="181:61">.</operator><name pos:start="181:62" pos:end="181:64">rax</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:74"><expr pos:start="183:5" pos:end="183:73"><name pos:start="183:5" pos:end="183:14"><name pos:start="183:5" pos:end="183:7">env</name><operator pos:start="183:8" pos:end="183:9">-&gt;</operator><name pos:start="183:10" pos:end="183:11">dr</name><index pos:start="183:12" pos:end="183:14">[<expr pos:start="183:13" pos:end="183:13"><literal type="number" pos:start="183:13" pos:end="183:13">7</literal></expr>]</index></name> <operator pos:start="183:16" pos:end="183:16">=</operator> <call pos:start="183:18" pos:end="183:73"><name pos:start="183:18" pos:end="183:25">ldq_phys</name><argument_list pos:start="183:26" pos:end="183:73">(<argument pos:start="183:27" pos:end="183:72"><expr pos:start="183:27" pos:end="183:72"><name pos:start="183:27" pos:end="183:38"><name pos:start="183:27" pos:end="183:29">env</name><operator pos:start="183:30" pos:end="183:31">-&gt;</operator><name pos:start="183:32" pos:end="183:38">vm_vmcb</name></name> <operator pos:start="183:40" pos:end="183:40">+</operator> <call pos:start="183:42" pos:end="183:72"><name pos:start="183:42" pos:end="183:49">offsetof</name><argument_list pos:start="183:50" pos:end="183:72">(<argument pos:start="183:51" pos:end="183:61"><expr pos:start="183:51" pos:end="183:61">struct <name pos:start="183:58" pos:end="183:61">vmcb</name></expr></argument>, <argument pos:start="183:64" pos:end="183:71"><expr pos:start="183:64" pos:end="183:71"><name pos:start="183:64" pos:end="183:71"><name pos:start="183:64" pos:end="183:67">save</name><operator pos:start="183:68" pos:end="183:68">.</operator><name pos:start="183:69" pos:end="183:71">dr7</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:74"><expr pos:start="185:5" pos:end="185:73"><name pos:start="185:5" pos:end="185:14"><name pos:start="185:5" pos:end="185:7">env</name><operator pos:start="185:8" pos:end="185:9">-&gt;</operator><name pos:start="185:10" pos:end="185:11">dr</name><index pos:start="185:12" pos:end="185:14">[<expr pos:start="185:13" pos:end="185:13"><literal type="number" pos:start="185:13" pos:end="185:13">6</literal></expr>]</index></name> <operator pos:start="185:16" pos:end="185:16">=</operator> <call pos:start="185:18" pos:end="185:73"><name pos:start="185:18" pos:end="185:25">ldq_phys</name><argument_list pos:start="185:26" pos:end="185:73">(<argument pos:start="185:27" pos:end="185:72"><expr pos:start="185:27" pos:end="185:72"><name pos:start="185:27" pos:end="185:38"><name pos:start="185:27" pos:end="185:29">env</name><operator pos:start="185:30" pos:end="185:31">-&gt;</operator><name pos:start="185:32" pos:end="185:38">vm_vmcb</name></name> <operator pos:start="185:40" pos:end="185:40">+</operator> <call pos:start="185:42" pos:end="185:72"><name pos:start="185:42" pos:end="185:49">offsetof</name><argument_list pos:start="185:50" pos:end="185:72">(<argument pos:start="185:51" pos:end="185:61"><expr pos:start="185:51" pos:end="185:61">struct <name pos:start="185:58" pos:end="185:61">vmcb</name></expr></argument>, <argument pos:start="185:64" pos:end="185:71"><expr pos:start="185:64" pos:end="185:71"><name pos:start="185:64" pos:end="185:71"><name pos:start="185:64" pos:end="185:67">save</name><operator pos:start="185:68" pos:end="185:68">.</operator><name pos:start="185:69" pos:end="185:71">dr6</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:84"><expr pos:start="187:5" pos:end="187:83"><call pos:start="187:5" pos:end="187:83"><name pos:start="187:5" pos:end="187:19">cpu_x86_set_cpl</name><argument_list pos:start="187:20" pos:end="187:83">(<argument pos:start="187:21" pos:end="187:23"><expr pos:start="187:21" pos:end="187:23"><name pos:start="187:21" pos:end="187:23">env</name></expr></argument>, <argument pos:start="187:26" pos:end="187:82"><expr pos:start="187:26" pos:end="187:82"><call pos:start="187:26" pos:end="187:82"><name pos:start="187:26" pos:end="187:34">ldub_phys</name><argument_list pos:start="187:35" pos:end="187:82">(<argument pos:start="187:36" pos:end="187:81"><expr pos:start="187:36" pos:end="187:81"><name pos:start="187:36" pos:end="187:47"><name pos:start="187:36" pos:end="187:38">env</name><operator pos:start="187:39" pos:end="187:40">-&gt;</operator><name pos:start="187:41" pos:end="187:47">vm_vmcb</name></name> <operator pos:start="187:49" pos:end="187:49">+</operator> <call pos:start="187:51" pos:end="187:81"><name pos:start="187:51" pos:end="187:58">offsetof</name><argument_list pos:start="187:59" pos:end="187:81">(<argument pos:start="187:60" pos:end="187:70"><expr pos:start="187:60" pos:end="187:70">struct <name pos:start="187:67" pos:end="187:70">vmcb</name></expr></argument>, <argument pos:start="187:73" pos:end="187:80"><expr pos:start="187:73" pos:end="187:80"><name pos:start="187:73" pos:end="187:80"><name pos:start="187:73" pos:end="187:76">save</name><operator pos:start="187:77" pos:end="187:77">.</operator><name pos:start="187:78" pos:end="187:80">cpl</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="191:5" pos:end="191:47">/* FIXME: guest state consistency checks */</comment>



    <switch pos:start="195:5" pos:end="209:5">switch<condition pos:start="195:11" pos:end="195:76">(<expr pos:start="195:12" pos:end="195:75"><call pos:start="195:12" pos:end="195:75"><name pos:start="195:12" pos:end="195:20">ldub_phys</name><argument_list pos:start="195:21" pos:end="195:75">(<argument pos:start="195:22" pos:end="195:74"><expr pos:start="195:22" pos:end="195:74"><name pos:start="195:22" pos:end="195:33"><name pos:start="195:22" pos:end="195:24">env</name><operator pos:start="195:25" pos:end="195:26">-&gt;</operator><name pos:start="195:27" pos:end="195:33">vm_vmcb</name></name> <operator pos:start="195:35" pos:end="195:35">+</operator> <call pos:start="195:37" pos:end="195:74"><name pos:start="195:37" pos:end="195:44">offsetof</name><argument_list pos:start="195:45" pos:end="195:74">(<argument pos:start="195:46" pos:end="195:56"><expr pos:start="195:46" pos:end="195:56">struct <name pos:start="195:53" pos:end="195:56">vmcb</name></expr></argument>, <argument pos:start="195:59" pos:end="195:73"><expr pos:start="195:59" pos:end="195:73"><name pos:start="195:59" pos:end="195:73"><name pos:start="195:59" pos:end="195:65">control</name><operator pos:start="195:66" pos:end="195:66">.</operator><name pos:start="195:67" pos:end="195:73">tlb_ctl</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="195:78" pos:end="209:5">{<block_content pos:start="197:9" pos:end="207:14">

        <case pos:start="197:9" pos:end="197:36">case <expr pos:start="197:14" pos:end="197:35"><name pos:start="197:14" pos:end="197:35">TLB_CONTROL_DO_NOTHING</name></expr>:</case>

            <break pos:start="199:13" pos:end="199:18">break;</break>

        <case pos:start="201:9" pos:end="201:40">case <expr pos:start="201:14" pos:end="201:39"><name pos:start="201:14" pos:end="201:39">TLB_CONTROL_FLUSH_ALL_ASID</name></expr>:</case>

            <comment type="block" pos:start="203:13" pos:end="203:73">/* FIXME: this is not 100% correct but should work for now */</comment>

            <expr_stmt pos:start="205:13" pos:end="205:30"><expr pos:start="205:13" pos:end="205:29"><call pos:start="205:13" pos:end="205:29"><name pos:start="205:13" pos:end="205:21">tlb_flush</name><argument_list pos:start="205:22" pos:end="205:29">(<argument pos:start="205:23" pos:end="205:25"><expr pos:start="205:23" pos:end="205:25"><name pos:start="205:23" pos:end="205:25">env</name></expr></argument>, <argument pos:start="205:28" pos:end="205:28"><expr pos:start="205:28" pos:end="205:28"><literal type="number" pos:start="205:28" pos:end="205:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="207:9" pos:end="207:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="213:5" pos:end="213:18"><expr pos:start="213:5" pos:end="213:17"><call pos:start="213:5" pos:end="213:17"><name pos:start="213:5" pos:end="213:15">helper_stgi</name><argument_list pos:start="213:16" pos:end="213:17">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="217:5" pos:end="217:18"><expr pos:start="217:5" pos:end="217:17"><call pos:start="217:5" pos:end="217:17"><name pos:start="217:5" pos:end="217:15">regs_to_env</name><argument_list pos:start="217:16" pos:end="217:17">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="221:5" pos:end="221:42">/* maybe we need to inject an event */</comment>

    <expr_stmt pos:start="223:5" pos:end="223:82"><expr pos:start="223:5" pos:end="223:81"><name pos:start="223:5" pos:end="223:13">event_inj</name> <operator pos:start="223:15" pos:end="223:15">=</operator> <call pos:start="223:17" pos:end="223:81"><name pos:start="223:17" pos:end="223:24">ldl_phys</name><argument_list pos:start="223:25" pos:end="223:81">(<argument pos:start="223:26" pos:end="223:80"><expr pos:start="223:26" pos:end="223:80"><name pos:start="223:26" pos:end="223:37"><name pos:start="223:26" pos:end="223:28">env</name><operator pos:start="223:29" pos:end="223:30">-&gt;</operator><name pos:start="223:31" pos:end="223:37">vm_vmcb</name></name> <operator pos:start="223:39" pos:end="223:39">+</operator> <call pos:start="223:41" pos:end="223:80"><name pos:start="223:41" pos:end="223:48">offsetof</name><argument_list pos:start="223:49" pos:end="223:80">(<argument pos:start="223:50" pos:end="223:60"><expr pos:start="223:50" pos:end="223:60">struct <name pos:start="223:57" pos:end="223:60">vmcb</name></expr></argument>, <argument pos:start="223:63" pos:end="223:79"><expr pos:start="223:63" pos:end="223:79"><name pos:start="223:63" pos:end="223:79"><name pos:start="223:63" pos:end="223:69">control</name><operator pos:start="223:70" pos:end="223:70">.</operator><name pos:start="223:71" pos:end="223:79">event_inj</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="225:5" pos:end="315:5"><if pos:start="225:5" pos:end="315:5">if <condition pos:start="225:8" pos:end="225:37">(<expr pos:start="225:9" pos:end="225:36"><name pos:start="225:9" pos:end="225:17">event_inj</name> <operator pos:start="225:19" pos:end="225:19">&amp;</operator> <name pos:start="225:21" pos:end="225:36">SVM_EVTINJ_VALID</name></expr>)</condition> <block pos:start="225:39" pos:end="315:5">{<block_content pos:start="227:9" pos:end="313:82">

        <decl_stmt pos:start="227:9" pos:end="227:57"><decl pos:start="227:9" pos:end="227:56"><type pos:start="227:9" pos:end="227:15"><name pos:start="227:9" pos:end="227:15">uint8_t</name></type> <name pos:start="227:17" pos:end="227:22">vector</name> <init pos:start="227:24" pos:end="227:56">= <expr pos:start="227:26" pos:end="227:56"><name pos:start="227:26" pos:end="227:34">event_inj</name> <operator pos:start="227:36" pos:end="227:36">&amp;</operator> <name pos:start="227:38" pos:end="227:56">SVM_EVTINJ_VEC_MASK</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="229:9" pos:end="229:62"><decl pos:start="229:9" pos:end="229:61"><type pos:start="229:9" pos:end="229:16"><name pos:start="229:9" pos:end="229:16">uint16_t</name></type> <name pos:start="229:18" pos:end="229:26">valid_err</name> <init pos:start="229:28" pos:end="229:61">= <expr pos:start="229:30" pos:end="229:61"><name pos:start="229:30" pos:end="229:38">event_inj</name> <operator pos:start="229:40" pos:end="229:40">&amp;</operator> <name pos:start="229:42" pos:end="229:61">SVM_EVTINJ_VALID_ERR</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="231:9" pos:end="231:103"><decl pos:start="231:9" pos:end="231:102"><type pos:start="231:9" pos:end="231:16"><name pos:start="231:9" pos:end="231:16">uint32_t</name></type> <name pos:start="231:18" pos:end="231:30">event_inj_err</name> <init pos:start="231:32" pos:end="231:102">= <expr pos:start="231:34" pos:end="231:102"><call pos:start="231:34" pos:end="231:102"><name pos:start="231:34" pos:end="231:41">ldl_phys</name><argument_list pos:start="231:42" pos:end="231:102">(<argument pos:start="231:43" pos:end="231:101"><expr pos:start="231:43" pos:end="231:101"><name pos:start="231:43" pos:end="231:54"><name pos:start="231:43" pos:end="231:45">env</name><operator pos:start="231:46" pos:end="231:47">-&gt;</operator><name pos:start="231:48" pos:end="231:54">vm_vmcb</name></name> <operator pos:start="231:56" pos:end="231:56">+</operator> <call pos:start="231:58" pos:end="231:101"><name pos:start="231:58" pos:end="231:65">offsetof</name><argument_list pos:start="231:66" pos:end="231:101">(<argument pos:start="231:67" pos:end="231:77"><expr pos:start="231:67" pos:end="231:77">struct <name pos:start="231:74" pos:end="231:77">vmcb</name></expr></argument>, <argument pos:start="231:80" pos:end="231:100"><expr pos:start="231:80" pos:end="231:100"><name pos:start="231:80" pos:end="231:100"><name pos:start="231:80" pos:end="231:86">control</name><operator pos:start="231:87" pos:end="231:87">.</operator><name pos:start="231:88" pos:end="231:100">event_inj_err</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:105"><expr pos:start="233:9" pos:end="233:104"><call pos:start="233:9" pos:end="233:104"><name pos:start="233:9" pos:end="233:16">stl_phys</name><argument_list pos:start="233:17" pos:end="233:104">(<argument pos:start="233:18" pos:end="233:72"><expr pos:start="233:18" pos:end="233:72"><name pos:start="233:18" pos:end="233:29"><name pos:start="233:18" pos:end="233:20">env</name><operator pos:start="233:21" pos:end="233:22">-&gt;</operator><name pos:start="233:23" pos:end="233:29">vm_vmcb</name></name> <operator pos:start="233:31" pos:end="233:31">+</operator> <call pos:start="233:33" pos:end="233:72"><name pos:start="233:33" pos:end="233:40">offsetof</name><argument_list pos:start="233:41" pos:end="233:72">(<argument pos:start="233:42" pos:end="233:52"><expr pos:start="233:42" pos:end="233:52">struct <name pos:start="233:49" pos:end="233:52">vmcb</name></expr></argument>, <argument pos:start="233:55" pos:end="233:71"><expr pos:start="233:55" pos:end="233:71"><name pos:start="233:55" pos:end="233:71"><name pos:start="233:55" pos:end="233:61">control</name><operator pos:start="233:62" pos:end="233:62">.</operator><name pos:start="233:63" pos:end="233:71">event_inj</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="233:75" pos:end="233:103"><expr pos:start="233:75" pos:end="233:103"><name pos:start="233:75" pos:end="233:83">event_inj</name> <operator pos:start="233:85" pos:end="233:85">&amp;</operator> <operator pos:start="233:87" pos:end="233:87">~</operator><name pos:start="233:88" pos:end="233:103">SVM_EVTINJ_VALID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="237:9" pos:end="239:61"><if pos:start="237:9" pos:end="239:61">if <condition pos:start="237:12" pos:end="237:41">(<expr pos:start="237:13" pos:end="237:40"><name pos:start="237:13" pos:end="237:20">loglevel</name> <operator pos:start="237:22" pos:end="237:22">&amp;</operator> <name pos:start="237:24" pos:end="237:40">CPU_LOG_TB_IN_ASM</name></expr>)</condition><block type="pseudo" pos:start="239:13" pos:end="239:61"><block_content pos:start="239:13" pos:end="239:61">

            <expr_stmt pos:start="239:13" pos:end="239:61"><expr pos:start="239:13" pos:end="239:60"><call pos:start="239:13" pos:end="239:60"><name pos:start="239:13" pos:end="239:19">fprintf</name><argument_list pos:start="239:20" pos:end="239:60">(<argument pos:start="239:21" pos:end="239:27"><expr pos:start="239:21" pos:end="239:27"><name pos:start="239:21" pos:end="239:27">logfile</name></expr></argument>, <argument pos:start="239:30" pos:end="239:48"><expr pos:start="239:30" pos:end="239:48"><literal type="string" pos:start="239:30" pos:end="239:48">"Injecting(%#hx): "</literal></expr></argument>, <argument pos:start="239:51" pos:end="239:59"><expr pos:start="239:51" pos:end="239:59"><name pos:start="239:51" pos:end="239:59">valid_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <comment type="block" pos:start="241:9" pos:end="241:48">/* FIXME: need to implement valid_err */</comment>

        <switch pos:start="243:9" pos:end="309:9">switch <condition pos:start="243:16" pos:end="243:49">(<expr pos:start="243:17" pos:end="243:48"><name pos:start="243:17" pos:end="243:25">event_inj</name> <operator pos:start="243:27" pos:end="243:27">&amp;</operator> <name pos:start="243:29" pos:end="243:48">SVM_EVTINJ_TYPE_MASK</name></expr>)</condition> <block pos:start="243:51" pos:end="309:9">{<block_content pos:start="245:9" pos:end="307:22">

        <case pos:start="245:9" pos:end="245:34">case <expr pos:start="245:14" pos:end="245:33"><name pos:start="245:14" pos:end="245:33">SVM_EVTINJ_TYPE_INTR</name></expr>:</case>

                <expr_stmt pos:start="247:17" pos:end="247:46"><expr pos:start="247:17" pos:end="247:45"><name pos:start="247:17" pos:end="247:36"><name pos:start="247:17" pos:end="247:19">env</name><operator pos:start="247:20" pos:end="247:21">-&gt;</operator><name pos:start="247:22" pos:end="247:36">exception_index</name></name> <operator pos:start="247:38" pos:end="247:38">=</operator> <name pos:start="247:40" pos:end="247:45">vector</name></expr>;</expr_stmt>

                <expr_stmt pos:start="249:17" pos:end="249:48"><expr pos:start="249:17" pos:end="249:47"><name pos:start="249:17" pos:end="249:31"><name pos:start="249:17" pos:end="249:19">env</name><operator pos:start="249:20" pos:end="249:21">-&gt;</operator><name pos:start="249:22" pos:end="249:31">error_code</name></name> <operator pos:start="249:33" pos:end="249:33">=</operator> <name pos:start="249:35" pos:end="249:47">event_inj_err</name></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:42"><expr pos:start="251:17" pos:end="251:41"><name pos:start="251:17" pos:end="251:37"><name pos:start="251:17" pos:end="251:19">env</name><operator pos:start="251:20" pos:end="251:21">-&gt;</operator><name pos:start="251:22" pos:end="251:37">exception_is_int</name></name> <operator pos:start="251:39" pos:end="251:39">=</operator> <literal type="number" pos:start="251:41" pos:end="251:41">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:45"><expr pos:start="253:17" pos:end="253:44"><name pos:start="253:17" pos:end="253:39"><name pos:start="253:17" pos:end="253:19">env</name><operator pos:start="253:20" pos:end="253:21">-&gt;</operator><name pos:start="253:22" pos:end="253:39">exception_next_eip</name></name> <operator pos:start="253:41" pos:end="253:41">=</operator> <operator pos:start="253:43" pos:end="253:43">-</operator><literal type="number" pos:start="253:44" pos:end="253:44">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="255:17" pos:end="257:45"><if pos:start="255:17" pos:end="257:45">if <condition pos:start="255:20" pos:end="255:49">(<expr pos:start="255:21" pos:end="255:48"><name pos:start="255:21" pos:end="255:28">loglevel</name> <operator pos:start="255:30" pos:end="255:30">&amp;</operator> <name pos:start="255:32" pos:end="255:48">CPU_LOG_TB_IN_ASM</name></expr>)</condition><block type="pseudo" pos:start="257:21" pos:end="257:45"><block_content pos:start="257:21" pos:end="257:45">

                    <expr_stmt pos:start="257:21" pos:end="257:45"><expr pos:start="257:21" pos:end="257:44"><call pos:start="257:21" pos:end="257:44"><name pos:start="257:21" pos:end="257:27">fprintf</name><argument_list pos:start="257:28" pos:end="257:44">(<argument pos:start="257:29" pos:end="257:35"><expr pos:start="257:29" pos:end="257:35"><name pos:start="257:29" pos:end="257:35">logfile</name></expr></argument>, <argument pos:start="257:38" pos:end="257:43"><expr pos:start="257:38" pos:end="257:43"><literal type="string" pos:start="257:38" pos:end="257:43">"INTR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="259:17" pos:end="259:22">break;</break>

        <case pos:start="261:9" pos:end="261:33">case <expr pos:start="261:14" pos:end="261:32"><name pos:start="261:14" pos:end="261:32">SVM_EVTINJ_TYPE_NMI</name></expr>:</case>

                <expr_stmt pos:start="263:17" pos:end="263:46"><expr pos:start="263:17" pos:end="263:45"><name pos:start="263:17" pos:end="263:36"><name pos:start="263:17" pos:end="263:19">env</name><operator pos:start="263:20" pos:end="263:21">-&gt;</operator><name pos:start="263:22" pos:end="263:36">exception_index</name></name> <operator pos:start="263:38" pos:end="263:38">=</operator> <name pos:start="263:40" pos:end="263:45">vector</name></expr>;</expr_stmt>

                <expr_stmt pos:start="265:17" pos:end="265:48"><expr pos:start="265:17" pos:end="265:47"><name pos:start="265:17" pos:end="265:31"><name pos:start="265:17" pos:end="265:19">env</name><operator pos:start="265:20" pos:end="265:21">-&gt;</operator><name pos:start="265:22" pos:end="265:31">error_code</name></name> <operator pos:start="265:33" pos:end="265:33">=</operator> <name pos:start="265:35" pos:end="265:47">event_inj_err</name></expr>;</expr_stmt>

                <expr_stmt pos:start="267:17" pos:end="267:42"><expr pos:start="267:17" pos:end="267:41"><name pos:start="267:17" pos:end="267:37"><name pos:start="267:17" pos:end="267:19">env</name><operator pos:start="267:20" pos:end="267:21">-&gt;</operator><name pos:start="267:22" pos:end="267:37">exception_is_int</name></name> <operator pos:start="267:39" pos:end="267:39">=</operator> <literal type="number" pos:start="267:41" pos:end="267:41">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="269:17" pos:end="269:46"><expr pos:start="269:17" pos:end="269:45"><name pos:start="269:17" pos:end="269:39"><name pos:start="269:17" pos:end="269:19">env</name><operator pos:start="269:20" pos:end="269:21">-&gt;</operator><name pos:start="269:22" pos:end="269:39">exception_next_eip</name></name> <operator pos:start="269:41" pos:end="269:41">=</operator> <name pos:start="269:43" pos:end="269:45">EIP</name></expr>;</expr_stmt>

                <if_stmt pos:start="271:17" pos:end="273:44"><if pos:start="271:17" pos:end="273:44">if <condition pos:start="271:20" pos:end="271:49">(<expr pos:start="271:21" pos:end="271:48"><name pos:start="271:21" pos:end="271:28">loglevel</name> <operator pos:start="271:30" pos:end="271:30">&amp;</operator> <name pos:start="271:32" pos:end="271:48">CPU_LOG_TB_IN_ASM</name></expr>)</condition><block type="pseudo" pos:start="273:21" pos:end="273:44"><block_content pos:start="273:21" pos:end="273:44">

                    <expr_stmt pos:start="273:21" pos:end="273:44"><expr pos:start="273:21" pos:end="273:43"><call pos:start="273:21" pos:end="273:43"><name pos:start="273:21" pos:end="273:27">fprintf</name><argument_list pos:start="273:28" pos:end="273:43">(<argument pos:start="273:29" pos:end="273:35"><expr pos:start="273:29" pos:end="273:35"><name pos:start="273:29" pos:end="273:35">logfile</name></expr></argument>, <argument pos:start="273:38" pos:end="273:42"><expr pos:start="273:38" pos:end="273:42"><literal type="string" pos:start="273:38" pos:end="273:42">"NMI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="275:17" pos:end="275:22">break;</break>

        <case pos:start="277:9" pos:end="277:35">case <expr pos:start="277:14" pos:end="277:34"><name pos:start="277:14" pos:end="277:34">SVM_EVTINJ_TYPE_EXEPT</name></expr>:</case>

                <expr_stmt pos:start="279:17" pos:end="279:46"><expr pos:start="279:17" pos:end="279:45"><name pos:start="279:17" pos:end="279:36"><name pos:start="279:17" pos:end="279:19">env</name><operator pos:start="279:20" pos:end="279:21">-&gt;</operator><name pos:start="279:22" pos:end="279:36">exception_index</name></name> <operator pos:start="279:38" pos:end="279:38">=</operator> <name pos:start="279:40" pos:end="279:45">vector</name></expr>;</expr_stmt>

                <expr_stmt pos:start="281:17" pos:end="281:48"><expr pos:start="281:17" pos:end="281:47"><name pos:start="281:17" pos:end="281:31"><name pos:start="281:17" pos:end="281:19">env</name><operator pos:start="281:20" pos:end="281:21">-&gt;</operator><name pos:start="281:22" pos:end="281:31">error_code</name></name> <operator pos:start="281:33" pos:end="281:33">=</operator> <name pos:start="281:35" pos:end="281:47">event_inj_err</name></expr>;</expr_stmt>

                <expr_stmt pos:start="283:17" pos:end="283:42"><expr pos:start="283:17" pos:end="283:41"><name pos:start="283:17" pos:end="283:37"><name pos:start="283:17" pos:end="283:19">env</name><operator pos:start="283:20" pos:end="283:21">-&gt;</operator><name pos:start="283:22" pos:end="283:37">exception_is_int</name></name> <operator pos:start="283:39" pos:end="283:39">=</operator> <literal type="number" pos:start="283:41" pos:end="283:41">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="285:17" pos:end="285:45"><expr pos:start="285:17" pos:end="285:44"><name pos:start="285:17" pos:end="285:39"><name pos:start="285:17" pos:end="285:19">env</name><operator pos:start="285:20" pos:end="285:21">-&gt;</operator><name pos:start="285:22" pos:end="285:39">exception_next_eip</name></name> <operator pos:start="285:41" pos:end="285:41">=</operator> <operator pos:start="285:43" pos:end="285:43">-</operator><literal type="number" pos:start="285:44" pos:end="285:44">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="287:17" pos:end="289:46"><if pos:start="287:17" pos:end="289:46">if <condition pos:start="287:20" pos:end="287:49">(<expr pos:start="287:21" pos:end="287:48"><name pos:start="287:21" pos:end="287:28">loglevel</name> <operator pos:start="287:30" pos:end="287:30">&amp;</operator> <name pos:start="287:32" pos:end="287:48">CPU_LOG_TB_IN_ASM</name></expr>)</condition><block type="pseudo" pos:start="289:21" pos:end="289:46"><block_content pos:start="289:21" pos:end="289:46">

                    <expr_stmt pos:start="289:21" pos:end="289:46"><expr pos:start="289:21" pos:end="289:45"><call pos:start="289:21" pos:end="289:45"><name pos:start="289:21" pos:end="289:27">fprintf</name><argument_list pos:start="289:28" pos:end="289:45">(<argument pos:start="289:29" pos:end="289:35"><expr pos:start="289:29" pos:end="289:35"><name pos:start="289:29" pos:end="289:35">logfile</name></expr></argument>, <argument pos:start="289:38" pos:end="289:44"><expr pos:start="289:38" pos:end="289:44"><literal type="string" pos:start="289:38" pos:end="289:44">"EXEPT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="291:17" pos:end="291:22">break;</break>

        <case pos:start="293:9" pos:end="293:34">case <expr pos:start="293:14" pos:end="293:33"><name pos:start="293:14" pos:end="293:33">SVM_EVTINJ_TYPE_SOFT</name></expr>:</case>

                <expr_stmt pos:start="295:17" pos:end="295:46"><expr pos:start="295:17" pos:end="295:45"><name pos:start="295:17" pos:end="295:36"><name pos:start="295:17" pos:end="295:19">env</name><operator pos:start="295:20" pos:end="295:21">-&gt;</operator><name pos:start="295:22" pos:end="295:36">exception_index</name></name> <operator pos:start="295:38" pos:end="295:38">=</operator> <name pos:start="295:40" pos:end="295:45">vector</name></expr>;</expr_stmt>

                <expr_stmt pos:start="297:17" pos:end="297:48"><expr pos:start="297:17" pos:end="297:47"><name pos:start="297:17" pos:end="297:31"><name pos:start="297:17" pos:end="297:19">env</name><operator pos:start="297:20" pos:end="297:21">-&gt;</operator><name pos:start="297:22" pos:end="297:31">error_code</name></name> <operator pos:start="297:33" pos:end="297:33">=</operator> <name pos:start="297:35" pos:end="297:47">event_inj_err</name></expr>;</expr_stmt>

                <expr_stmt pos:start="299:17" pos:end="299:42"><expr pos:start="299:17" pos:end="299:41"><name pos:start="299:17" pos:end="299:37"><name pos:start="299:17" pos:end="299:19">env</name><operator pos:start="299:20" pos:end="299:21">-&gt;</operator><name pos:start="299:22" pos:end="299:37">exception_is_int</name></name> <operator pos:start="299:39" pos:end="299:39">=</operator> <literal type="number" pos:start="299:41" pos:end="299:41">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="301:17" pos:end="301:46"><expr pos:start="301:17" pos:end="301:45"><name pos:start="301:17" pos:end="301:39"><name pos:start="301:17" pos:end="301:19">env</name><operator pos:start="301:20" pos:end="301:21">-&gt;</operator><name pos:start="301:22" pos:end="301:39">exception_next_eip</name></name> <operator pos:start="301:41" pos:end="301:41">=</operator> <name pos:start="301:43" pos:end="301:45">EIP</name></expr>;</expr_stmt>

                <if_stmt pos:start="303:17" pos:end="305:45"><if pos:start="303:17" pos:end="305:45">if <condition pos:start="303:20" pos:end="303:49">(<expr pos:start="303:21" pos:end="303:48"><name pos:start="303:21" pos:end="303:28">loglevel</name> <operator pos:start="303:30" pos:end="303:30">&amp;</operator> <name pos:start="303:32" pos:end="303:48">CPU_LOG_TB_IN_ASM</name></expr>)</condition><block type="pseudo" pos:start="305:21" pos:end="305:45"><block_content pos:start="305:21" pos:end="305:45">

                    <expr_stmt pos:start="305:21" pos:end="305:45"><expr pos:start="305:21" pos:end="305:44"><call pos:start="305:21" pos:end="305:44"><name pos:start="305:21" pos:end="305:27">fprintf</name><argument_list pos:start="305:28" pos:end="305:44">(<argument pos:start="305:29" pos:end="305:35"><expr pos:start="305:29" pos:end="305:35"><name pos:start="305:29" pos:end="305:35">logfile</name></expr></argument>, <argument pos:start="305:38" pos:end="305:43"><expr pos:start="305:38" pos:end="305:43"><literal type="string" pos:start="305:38" pos:end="305:43">"SOFT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="307:17" pos:end="307:22">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="311:9" pos:end="313:82"><if pos:start="311:9" pos:end="313:82">if <condition pos:start="311:12" pos:end="311:41">(<expr pos:start="311:13" pos:end="311:40"><name pos:start="311:13" pos:end="311:20">loglevel</name> <operator pos:start="311:22" pos:end="311:22">&amp;</operator> <name pos:start="311:24" pos:end="311:40">CPU_LOG_TB_IN_ASM</name></expr>)</condition><block type="pseudo" pos:start="313:13" pos:end="313:82"><block_content pos:start="313:13" pos:end="313:82">

            <expr_stmt pos:start="313:13" pos:end="313:82"><expr pos:start="313:13" pos:end="313:81"><call pos:start="313:13" pos:end="313:81"><name pos:start="313:13" pos:end="313:19">fprintf</name><argument_list pos:start="313:20" pos:end="313:81">(<argument pos:start="313:21" pos:end="313:27"><expr pos:start="313:21" pos:end="313:27"><name pos:start="313:21" pos:end="313:27">logfile</name></expr></argument>, <argument pos:start="313:30" pos:end="313:41"><expr pos:start="313:30" pos:end="313:41"><literal type="string" pos:start="313:30" pos:end="313:41">" %#x %#x\n"</literal></expr></argument>, <argument pos:start="313:44" pos:end="313:63"><expr pos:start="313:44" pos:end="313:63"><name pos:start="313:44" pos:end="313:63"><name pos:start="313:44" pos:end="313:46">env</name><operator pos:start="313:47" pos:end="313:48">-&gt;</operator><name pos:start="313:49" pos:end="313:63">exception_index</name></name></expr></argument>, <argument pos:start="313:66" pos:end="313:80"><expr pos:start="313:66" pos:end="313:80"><name pos:start="313:66" pos:end="313:80"><name pos:start="313:66" pos:end="313:68">env</name><operator pos:start="313:69" pos:end="313:70">-&gt;</operator><name pos:start="313:71" pos:end="313:80">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="317:5" pos:end="321:5"><if pos:start="317:5" pos:end="321:5">if <condition pos:start="317:8" pos:end="317:69">(<expr pos:start="317:9" pos:end="317:68"><operator pos:start="317:9" pos:end="317:9">(</operator><name pos:start="317:10" pos:end="317:16">int_ctl</name> <operator pos:start="317:18" pos:end="317:18">&amp;</operator> <name pos:start="317:20" pos:end="317:29">V_IRQ_MASK</name><operator pos:start="317:30" pos:end="317:30">)</operator> <operator pos:start="317:32" pos:end="317:33">||</operator> <operator pos:start="317:35" pos:end="317:35">(</operator><name pos:start="317:36" pos:end="317:49"><name pos:start="317:36" pos:end="317:38">env</name><operator pos:start="317:39" pos:end="317:40">-&gt;</operator><name pos:start="317:41" pos:end="317:49">intercept</name></name> <operator pos:start="317:51" pos:end="317:51">&amp;</operator> <name pos:start="317:53" pos:end="317:67">INTERCEPT_VINTR</name><operator pos:start="317:68" pos:end="317:68">)</operator></expr>)</condition> <block pos:start="317:71" pos:end="321:5">{<block_content pos:start="319:9" pos:end="319:53">

        <expr_stmt pos:start="319:9" pos:end="319:53"><expr pos:start="319:9" pos:end="319:52"><name pos:start="319:9" pos:end="319:30"><name pos:start="319:9" pos:end="319:11">env</name><operator pos:start="319:12" pos:end="319:13">-&gt;</operator><name pos:start="319:14" pos:end="319:30">interrupt_request</name></name> <operator pos:start="319:32" pos:end="319:33">|=</operator> <name pos:start="319:35" pos:end="319:52">CPU_INTERRUPT_VIRQ</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="325:5" pos:end="325:20"><expr pos:start="325:5" pos:end="325:19"><call pos:start="325:5" pos:end="325:19"><name pos:start="325:5" pos:end="325:17">cpu_loop_exit</name><argument_list pos:start="325:18" pos:end="325:19">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
