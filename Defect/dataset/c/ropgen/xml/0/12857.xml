<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12857.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">gen_rlwnm</name><parameter_list pos:start="1:22" pos:end="1:40">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:36"><name pos:start="1:23" pos:end="1:34">DisasContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:51">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:15">mb</name></decl>, <decl pos:start="5:18" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:18" pos:end="5:19">me</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:25"><expr pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:6">mb</name> <operator pos:start="7:8" pos:end="7:8">=</operator> <call pos:start="7:10" pos:end="7:24"><name pos:start="7:10" pos:end="7:11">MB</name><argument_list pos:start="7:12" pos:end="7:24">(<argument pos:start="7:13" pos:end="7:23"><expr pos:start="7:13" pos:end="7:23"><name pos:start="7:13" pos:end="7:23"><name pos:start="7:13" pos:end="7:15">ctx</name><operator pos:start="7:16" pos:end="7:17">-&gt;</operator><name pos:start="7:18" pos:end="7:23">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:25"><expr pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:6">me</name> <operator pos:start="9:8" pos:end="9:8">=</operator> <call pos:start="9:10" pos:end="9:24"><name pos:start="9:10" pos:end="9:11">ME</name><argument_list pos:start="9:12" pos:end="9:24">(<argument pos:start="9:13" pos:end="9:23"><expr pos:start="9:13" pos:end="9:23"><name pos:start="9:13" pos:end="9:23"><name pos:start="9:13" pos:end="9:15">ctx</name><operator pos:start="9:16" pos:end="9:17">-&gt;</operator><name pos:start="9:18" pos:end="9:23">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="91:5"><if pos:start="13:5" pos:end="35:5">if <condition pos:start="13:8" pos:end="13:36">(<expr pos:start="13:9" pos:end="13:35"><call pos:start="13:9" pos:end="13:35"><name pos:start="13:9" pos:end="13:14">likely</name><argument_list pos:start="13:15" pos:end="13:35">(<argument pos:start="13:16" pos:end="13:34"><expr pos:start="13:16" pos:end="13:34"><name pos:start="13:16" pos:end="13:17">mb</name> <operator pos:start="13:19" pos:end="13:20">==</operator> <literal type="number" pos:start="13:22" pos:end="13:22">0</literal> <operator pos:start="13:24" pos:end="13:25">&amp;&amp;</operator> <name pos:start="13:27" pos:end="13:28">me</name> <operator pos:start="13:30" pos:end="13:31">==</operator> <literal type="number" pos:start="13:33" pos:end="13:34">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:38" pos:end="35:5">{<block_content pos:start="15:9" pos:end="33:30">

        <decl_stmt pos:start="15:9" pos:end="15:24"><decl pos:start="15:9" pos:end="15:19"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">TCGv_i32</name></type> <name pos:start="15:18" pos:end="15:19">t0</name></decl>, <decl pos:start="15:22" pos:end="15:23"><type ref="prev" pos:start="15:9" pos:end="15:16"/><name pos:start="15:22" pos:end="15:23">t1</name></decl>;</decl_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:32"><expr pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:10">t0</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:31"><name pos:start="17:14" pos:end="17:29">tcg_temp_new_i32</name><argument_list pos:start="17:30" pos:end="17:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:32"><expr pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:10">t1</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <call pos:start="19:14" pos:end="19:31"><name pos:start="19:14" pos:end="19:29">tcg_temp_new_i32</name><argument_list pos:start="19:30" pos:end="19:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:59"><expr pos:start="21:9" pos:end="21:58"><call pos:start="21:9" pos:end="21:58"><name pos:start="21:9" pos:end="21:28">tcg_gen_trunc_tl_i32</name><argument_list pos:start="21:29" pos:end="21:58">(<argument pos:start="21:30" pos:end="21:31"><expr pos:start="21:30" pos:end="21:31"><name pos:start="21:30" pos:end="21:31">t0</name></expr></argument>, <argument pos:start="21:34" pos:end="21:57"><expr pos:start="21:34" pos:end="21:57"><name pos:start="21:34" pos:end="21:57"><name pos:start="21:34" pos:end="21:40">cpu_gpr</name><index pos:start="21:41" pos:end="21:57">[<expr pos:start="21:42" pos:end="21:56"><call pos:start="21:42" pos:end="21:56"><name pos:start="21:42" pos:end="21:43">rB</name><argument_list pos:start="21:44" pos:end="21:56">(<argument pos:start="21:45" pos:end="21:55"><expr pos:start="21:45" pos:end="21:55"><name pos:start="21:45" pos:end="21:55"><name pos:start="21:45" pos:end="21:47">ctx</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:55">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:59"><expr pos:start="23:9" pos:end="23:58"><call pos:start="23:9" pos:end="23:58"><name pos:start="23:9" pos:end="23:28">tcg_gen_trunc_tl_i32</name><argument_list pos:start="23:29" pos:end="23:58">(<argument pos:start="23:30" pos:end="23:31"><expr pos:start="23:30" pos:end="23:31"><name pos:start="23:30" pos:end="23:31">t1</name></expr></argument>, <argument pos:start="23:34" pos:end="23:57"><expr pos:start="23:34" pos:end="23:57"><name pos:start="23:34" pos:end="23:57"><name pos:start="23:34" pos:end="23:40">cpu_gpr</name><index pos:start="23:41" pos:end="23:57">[<expr pos:start="23:42" pos:end="23:56"><call pos:start="23:42" pos:end="23:56"><name pos:start="23:42" pos:end="23:43">rS</name><argument_list pos:start="23:44" pos:end="23:56">(<argument pos:start="23:45" pos:end="23:55"><expr pos:start="23:45" pos:end="23:55"><name pos:start="23:45" pos:end="23:55"><name pos:start="23:45" pos:end="23:47">ctx</name><operator pos:start="23:48" pos:end="23:49">-&gt;</operator><name pos:start="23:50" pos:end="23:55">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><call pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:24">tcg_gen_andi_i32</name><argument_list pos:start="25:25" pos:end="25:38">(<argument pos:start="25:26" pos:end="25:27"><expr pos:start="25:26" pos:end="25:27"><name pos:start="25:26" pos:end="25:27">t0</name></expr></argument>, <argument pos:start="25:30" pos:end="25:31"><expr pos:start="25:30" pos:end="25:31"><name pos:start="25:30" pos:end="25:31">t0</name></expr></argument>, <argument pos:start="25:34" pos:end="25:37"><expr pos:start="25:34" pos:end="25:37"><literal type="number" pos:start="25:34" pos:end="25:37">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:37"><expr pos:start="27:9" pos:end="27:36"><call pos:start="27:9" pos:end="27:36"><name pos:start="27:9" pos:end="27:24">tcg_gen_rotl_i32</name><argument_list pos:start="27:25" pos:end="27:36">(<argument pos:start="27:26" pos:end="27:27"><expr pos:start="27:26" pos:end="27:27"><name pos:start="27:26" pos:end="27:27">t1</name></expr></argument>, <argument pos:start="27:30" pos:end="27:31"><expr pos:start="27:30" pos:end="27:31"><name pos:start="27:30" pos:end="27:31">t1</name></expr></argument>, <argument pos:start="27:34" pos:end="27:35"><expr pos:start="27:34" pos:end="27:35"><name pos:start="27:34" pos:end="27:35">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:58"><expr pos:start="29:9" pos:end="29:57"><call pos:start="29:9" pos:end="29:57"><name pos:start="29:9" pos:end="29:27">tcg_gen_extu_i32_tl</name><argument_list pos:start="29:28" pos:end="29:57">(<argument pos:start="29:29" pos:end="29:52"><expr pos:start="29:29" pos:end="29:52"><name pos:start="29:29" pos:end="29:52"><name pos:start="29:29" pos:end="29:35">cpu_gpr</name><index pos:start="29:36" pos:end="29:52">[<expr pos:start="29:37" pos:end="29:51"><call pos:start="29:37" pos:end="29:51"><name pos:start="29:37" pos:end="29:38">rA</name><argument_list pos:start="29:39" pos:end="29:51">(<argument pos:start="29:40" pos:end="29:50"><expr pos:start="29:40" pos:end="29:50"><name pos:start="29:40" pos:end="29:50"><name pos:start="29:40" pos:end="29:42">ctx</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:50">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="29:55" pos:end="29:56"><expr pos:start="29:55" pos:end="29:56"><name pos:start="29:55" pos:end="29:56">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:30"><expr pos:start="31:9" pos:end="31:29"><call pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:25">tcg_temp_free_i32</name><argument_list pos:start="31:26" pos:end="31:29">(<argument pos:start="31:27" pos:end="31:28"><expr pos:start="31:27" pos:end="31:28"><name pos:start="31:27" pos:end="31:28">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><call pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:25">tcg_temp_free_i32</name><argument_list pos:start="33:26" pos:end="33:29">(<argument pos:start="33:27" pos:end="33:28"><expr pos:start="33:27" pos:end="33:28"><name pos:start="33:27" pos:end="33:28">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="91:5">else <block pos:start="35:12" pos:end="91:5">{<block_content pos:start="37:9" pos:end="89:26">

        <decl_stmt pos:start="37:9" pos:end="40:0"><decl pos:start="37:9" pos:end="37:15"><type pos:start="37:9" pos:end="37:12"><name pos:start="37:9" pos:end="37:12">TCGv</name></type> <name pos:start="37:14" pos:end="37:15">t0</name></decl>;</decl_stmt>

<cpp:if pos:start="39:1" pos:end="39:25">#<cpp:directive pos:start="39:2" pos:end="39:3">if</cpp:directive> <expr pos:start="39:5" pos:end="39:25"><call pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:11">defined</name><argument_list pos:start="39:12" pos:end="39:25">(<argument pos:start="39:13" pos:end="39:24"><expr pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <decl_stmt pos:start="41:9" pos:end="44:0"><decl pos:start="41:9" pos:end="41:15"><type pos:start="41:9" pos:end="41:12"><name pos:start="41:9" pos:end="41:12">TCGv</name></type> <name pos:start="41:14" pos:end="41:15">t1</name></decl>;</decl_stmt>

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>



        <expr_stmt pos:start="47:9" pos:end="47:28"><expr pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:10">t0</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="47:27"><name pos:start="47:14" pos:end="47:25">tcg_temp_new</name><argument_list pos:start="47:26" pos:end="47:27">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="52:0"><expr pos:start="49:9" pos:end="49:59"><call pos:start="49:9" pos:end="49:59"><name pos:start="49:9" pos:end="49:23">tcg_gen_andi_tl</name><argument_list pos:start="49:24" pos:end="49:59">(<argument pos:start="49:25" pos:end="49:26"><expr pos:start="49:25" pos:end="49:26"><name pos:start="49:25" pos:end="49:26">t0</name></expr></argument>, <argument pos:start="49:29" pos:end="49:52"><expr pos:start="49:29" pos:end="49:52"><name pos:start="49:29" pos:end="49:52"><name pos:start="49:29" pos:end="49:35">cpu_gpr</name><index pos:start="49:36" pos:end="49:52">[<expr pos:start="49:37" pos:end="49:51"><call pos:start="49:37" pos:end="49:51"><name pos:start="49:37" pos:end="49:38">rB</name><argument_list pos:start="49:39" pos:end="49:51">(<argument pos:start="49:40" pos:end="49:50"><expr pos:start="49:40" pos:end="49:50"><name pos:start="49:40" pos:end="49:50"><name pos:start="49:40" pos:end="49:42">ctx</name><operator pos:start="49:43" pos:end="49:44">-&gt;</operator><name pos:start="49:45" pos:end="49:50">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="49:55" pos:end="49:58"><expr pos:start="49:55" pos:end="49:58"><literal type="number" pos:start="49:55" pos:end="49:58">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="51:1" pos:end="51:25">#<cpp:directive pos:start="51:2" pos:end="51:3">if</cpp:directive> <expr pos:start="51:5" pos:end="51:25"><call pos:start="51:5" pos:end="51:25"><name pos:start="51:5" pos:end="51:11">defined</name><argument_list pos:start="51:12" pos:end="51:25">(<argument pos:start="51:13" pos:end="51:24"><expr pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="53:9" pos:end="53:32"><expr pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:10">t1</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <call pos:start="53:14" pos:end="53:31"><name pos:start="53:14" pos:end="53:29">tcg_temp_new_i64</name><argument_list pos:start="53:30" pos:end="53:31">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="57:62"><expr pos:start="55:9" pos:end="57:61"><call pos:start="55:9" pos:end="57:61"><name pos:start="55:9" pos:end="55:27">tcg_gen_deposit_i64</name><argument_list pos:start="55:28" pos:end="57:61">(<argument pos:start="55:29" pos:end="55:30"><expr pos:start="55:29" pos:end="55:30"><name pos:start="55:29" pos:end="55:30">t1</name></expr></argument>, <argument pos:start="55:33" pos:end="55:56"><expr pos:start="55:33" pos:end="55:56"><name pos:start="55:33" pos:end="55:56"><name pos:start="55:33" pos:end="55:39">cpu_gpr</name><index pos:start="55:40" pos:end="55:56">[<expr pos:start="55:41" pos:end="55:55"><call pos:start="55:41" pos:end="55:55"><name pos:start="55:41" pos:end="55:42">rS</name><argument_list pos:start="55:43" pos:end="55:55">(<argument pos:start="55:44" pos:end="55:54"><expr pos:start="55:44" pos:end="55:54"><name pos:start="55:44" pos:end="55:54"><name pos:start="55:44" pos:end="55:46">ctx</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:54">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>,

                            <argument pos:start="57:29" pos:end="57:52"><expr pos:start="57:29" pos:end="57:52"><name pos:start="57:29" pos:end="57:52"><name pos:start="57:29" pos:end="57:35">cpu_gpr</name><index pos:start="57:36" pos:end="57:52">[<expr pos:start="57:37" pos:end="57:51"><call pos:start="57:37" pos:end="57:51"><name pos:start="57:37" pos:end="57:38">rS</name><argument_list pos:start="57:39" pos:end="57:51">(<argument pos:start="57:40" pos:end="57:50"><expr pos:start="57:40" pos:end="57:50"><name pos:start="57:40" pos:end="57:50"><name pos:start="57:40" pos:end="57:42">ctx</name><operator pos:start="57:43" pos:end="57:44">-&gt;</operator><name pos:start="57:45" pos:end="57:50">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="57:55" pos:end="57:56"><expr pos:start="57:55" pos:end="57:56"><literal type="number" pos:start="57:55" pos:end="57:56">32</literal></expr></argument>, <argument pos:start="57:59" pos:end="57:60"><expr pos:start="57:59" pos:end="57:60"><literal type="number" pos:start="57:59" pos:end="57:60">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:37"><expr pos:start="59:9" pos:end="59:36"><call pos:start="59:9" pos:end="59:36"><name pos:start="59:9" pos:end="59:24">tcg_gen_rotl_i64</name><argument_list pos:start="59:25" pos:end="59:36">(<argument pos:start="59:26" pos:end="59:27"><expr pos:start="59:26" pos:end="59:27"><name pos:start="59:26" pos:end="59:27">t0</name></expr></argument>, <argument pos:start="59:30" pos:end="59:31"><expr pos:start="59:30" pos:end="59:31"><name pos:start="59:30" pos:end="59:31">t1</name></expr></argument>, <argument pos:start="59:34" pos:end="59:35"><expr pos:start="59:34" pos:end="59:35"><name pos:start="59:34" pos:end="59:35">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="64:0"><expr pos:start="61:9" pos:end="61:29"><call pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:25">tcg_temp_free_i64</name><argument_list pos:start="61:26" pos:end="61:29">(<argument pos:start="61:27" pos:end="61:28"><expr pos:start="61:27" pos:end="61:28"><name pos:start="61:27" pos:end="61:28">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="63:1" pos:end="63:5">#<cpp:directive pos:start="63:2" pos:end="63:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="65:9" pos:end="68:0"><expr pos:start="65:9" pos:end="65:58"><call pos:start="65:9" pos:end="65:58"><name pos:start="65:9" pos:end="65:24">tcg_gen_rotl_i32</name><argument_list pos:start="65:25" pos:end="65:58">(<argument pos:start="65:26" pos:end="65:27"><expr pos:start="65:26" pos:end="65:27"><name pos:start="65:26" pos:end="65:27">t0</name></expr></argument>, <argument pos:start="65:30" pos:end="65:53"><expr pos:start="65:30" pos:end="65:53"><name pos:start="65:30" pos:end="65:53"><name pos:start="65:30" pos:end="65:36">cpu_gpr</name><index pos:start="65:37" pos:end="65:53">[<expr pos:start="65:38" pos:end="65:52"><call pos:start="65:38" pos:end="65:52"><name pos:start="65:38" pos:end="65:39">rS</name><argument_list pos:start="65:40" pos:end="65:52">(<argument pos:start="65:41" pos:end="65:51"><expr pos:start="65:41" pos:end="65:51"><name pos:start="65:41" pos:end="65:51"><name pos:start="65:41" pos:end="65:43">ctx</name><operator pos:start="65:44" pos:end="65:45">-&gt;</operator><name pos:start="65:46" pos:end="65:51">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="65:56" pos:end="65:57"><expr pos:start="65:56" pos:end="65:57"><name pos:start="65:56" pos:end="65:57">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="69:9" pos:end="87:9"><if pos:start="69:9" pos:end="81:9">if <condition pos:start="69:12" pos:end="69:42">(<expr pos:start="69:13" pos:end="69:41"><call pos:start="69:13" pos:end="69:41"><name pos:start="69:13" pos:end="69:20">unlikely</name><argument_list pos:start="69:21" pos:end="69:41">(<argument pos:start="69:22" pos:end="69:40"><expr pos:start="69:22" pos:end="69:40"><name pos:start="69:22" pos:end="69:23">mb</name> <operator pos:start="69:25" pos:end="69:26">!=</operator> <literal type="number" pos:start="69:28" pos:end="69:28">0</literal> <operator pos:start="69:30" pos:end="69:31">||</operator> <name pos:start="69:33" pos:end="69:34">me</name> <operator pos:start="69:36" pos:end="69:37">!=</operator> <literal type="number" pos:start="69:39" pos:end="69:40">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:44" pos:end="81:9">{<block_content pos:start="73:13" pos:end="79:72">

<cpp:if pos:start="71:1" pos:end="71:25">#<cpp:directive pos:start="71:2" pos:end="71:3">if</cpp:directive> <expr pos:start="71:5" pos:end="71:25"><call pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:11">defined</name><argument_list pos:start="71:12" pos:end="71:25">(<argument pos:start="71:13" pos:end="71:24"><expr pos:start="71:13" pos:end="71:24"><name pos:start="71:13" pos:end="71:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <expr_stmt pos:start="73:13" pos:end="73:21"><expr pos:start="73:13" pos:end="73:20"><name pos:start="73:13" pos:end="73:14">mb</name> <operator pos:start="73:16" pos:end="73:17">+=</operator> <literal type="number" pos:start="73:19" pos:end="73:20">32</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="78:0"><expr pos:start="75:13" pos:end="75:20"><name pos:start="75:13" pos:end="75:14">me</name> <operator pos:start="75:16" pos:end="75:17">+=</operator> <literal type="number" pos:start="75:19" pos:end="75:20">32</literal></expr>;</expr_stmt>

<cpp:endif pos:start="77:1" pos:end="77:6">#<cpp:directive pos:start="77:2" pos:end="77:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="79:13" pos:end="79:72"><expr pos:start="79:13" pos:end="79:71"><call pos:start="79:13" pos:end="79:71"><name pos:start="79:13" pos:end="79:27">tcg_gen_andi_tl</name><argument_list pos:start="79:28" pos:end="79:71">(<argument pos:start="79:29" pos:end="79:52"><expr pos:start="79:29" pos:end="79:52"><name pos:start="79:29" pos:end="79:52"><name pos:start="79:29" pos:end="79:35">cpu_gpr</name><index pos:start="79:36" pos:end="79:52">[<expr pos:start="79:37" pos:end="79:51"><call pos:start="79:37" pos:end="79:51"><name pos:start="79:37" pos:end="79:38">rA</name><argument_list pos:start="79:39" pos:end="79:51">(<argument pos:start="79:40" pos:end="79:50"><expr pos:start="79:40" pos:end="79:50"><name pos:start="79:40" pos:end="79:50"><name pos:start="79:40" pos:end="79:42">ctx</name><operator pos:start="79:43" pos:end="79:44">-&gt;</operator><name pos:start="79:45" pos:end="79:50">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="79:55" pos:end="79:56"><expr pos:start="79:55" pos:end="79:56"><name pos:start="79:55" pos:end="79:56">t0</name></expr></argument>, <argument pos:start="79:59" pos:end="79:70"><expr pos:start="79:59" pos:end="79:70"><call pos:start="79:59" pos:end="79:70"><name pos:start="79:59" pos:end="79:62">MASK</name><argument_list pos:start="79:63" pos:end="79:70">(<argument pos:start="79:64" pos:end="79:65"><expr pos:start="79:64" pos:end="79:65"><name pos:start="79:64" pos:end="79:65">mb</name></expr></argument>, <argument pos:start="79:68" pos:end="79:69"><expr pos:start="79:68" pos:end="79:69"><name pos:start="79:68" pos:end="79:69">me</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="81:11" pos:end="87:9">else <block pos:start="81:16" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:57">

            <expr_stmt pos:start="83:13" pos:end="83:50"><expr pos:start="83:13" pos:end="83:49"><call pos:start="83:13" pos:end="83:49"><name pos:start="83:13" pos:end="83:27">tcg_gen_andi_tl</name><argument_list pos:start="83:28" pos:end="83:49">(<argument pos:start="83:29" pos:end="83:30"><expr pos:start="83:29" pos:end="83:30"><name pos:start="83:29" pos:end="83:30">t0</name></expr></argument>, <argument pos:start="83:33" pos:end="83:34"><expr pos:start="83:33" pos:end="83:34"><name pos:start="83:33" pos:end="83:34">t0</name></expr></argument>, <argument pos:start="83:37" pos:end="83:48"><expr pos:start="83:37" pos:end="83:48"><call pos:start="83:37" pos:end="83:48"><name pos:start="83:37" pos:end="83:40">MASK</name><argument_list pos:start="83:41" pos:end="83:48">(<argument pos:start="83:42" pos:end="83:43"><expr pos:start="83:42" pos:end="83:43"><literal type="number" pos:start="83:42" pos:end="83:43">32</literal></expr></argument>, <argument pos:start="83:46" pos:end="83:47"><expr pos:start="83:46" pos:end="83:47"><literal type="number" pos:start="83:46" pos:end="83:47">63</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:57"><expr pos:start="85:13" pos:end="85:56"><call pos:start="85:13" pos:end="85:56"><name pos:start="85:13" pos:end="85:26">tcg_gen_mov_tl</name><argument_list pos:start="85:27" pos:end="85:56">(<argument pos:start="85:28" pos:end="85:51"><expr pos:start="85:28" pos:end="85:51"><name pos:start="85:28" pos:end="85:51"><name pos:start="85:28" pos:end="85:34">cpu_gpr</name><index pos:start="85:35" pos:end="85:51">[<expr pos:start="85:36" pos:end="85:50"><call pos:start="85:36" pos:end="85:50"><name pos:start="85:36" pos:end="85:37">rA</name><argument_list pos:start="85:38" pos:end="85:50">(<argument pos:start="85:39" pos:end="85:49"><expr pos:start="85:39" pos:end="85:49"><name pos:start="85:39" pos:end="85:49"><name pos:start="85:39" pos:end="85:41">ctx</name><operator pos:start="85:42" pos:end="85:43">-&gt;</operator><name pos:start="85:44" pos:end="85:49">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="85:54" pos:end="85:55"><expr pos:start="85:54" pos:end="85:55"><name pos:start="85:54" pos:end="85:55">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:26"><expr pos:start="89:9" pos:end="89:25"><call pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:21">tcg_temp_free</name><argument_list pos:start="89:22" pos:end="89:25">(<argument pos:start="89:23" pos:end="89:24"><expr pos:start="89:23" pos:end="89:24"><name pos:start="89:23" pos:end="89:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="93:5" pos:end="95:51"><if pos:start="93:5" pos:end="95:51">if <condition pos:start="93:8" pos:end="93:39">(<expr pos:start="93:9" pos:end="93:38"><call pos:start="93:9" pos:end="93:38"><name pos:start="93:9" pos:end="93:16">unlikely</name><argument_list pos:start="93:17" pos:end="93:38">(<argument pos:start="93:18" pos:end="93:37"><expr pos:start="93:18" pos:end="93:37"><call pos:start="93:18" pos:end="93:32"><name pos:start="93:18" pos:end="93:19">Rc</name><argument_list pos:start="93:20" pos:end="93:32">(<argument pos:start="93:21" pos:end="93:31"><expr pos:start="93:21" pos:end="93:31"><name pos:start="93:21" pos:end="93:31"><name pos:start="93:21" pos:end="93:23">ctx</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:31">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="93:34" pos:end="93:35">!=</operator> <literal type="number" pos:start="93:37" pos:end="93:37">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:51"><block_content pos:start="95:9" pos:end="95:51">

        <expr_stmt pos:start="95:9" pos:end="95:51"><expr pos:start="95:9" pos:end="95:50"><call pos:start="95:9" pos:end="95:50"><name pos:start="95:9" pos:end="95:19">gen_set_Rc0</name><argument_list pos:start="95:20" pos:end="95:50">(<argument pos:start="95:21" pos:end="95:23"><expr pos:start="95:21" pos:end="95:23"><name pos:start="95:21" pos:end="95:23">ctx</name></expr></argument>, <argument pos:start="95:26" pos:end="95:49"><expr pos:start="95:26" pos:end="95:49"><name pos:start="95:26" pos:end="95:49"><name pos:start="95:26" pos:end="95:32">cpu_gpr</name><index pos:start="95:33" pos:end="95:49">[<expr pos:start="95:34" pos:end="95:48"><call pos:start="95:34" pos:end="95:48"><name pos:start="95:34" pos:end="95:35">rA</name><argument_list pos:start="95:36" pos:end="95:48">(<argument pos:start="95:37" pos:end="95:47"><expr pos:start="95:37" pos:end="95:47"><name pos:start="95:37" pos:end="95:47"><name pos:start="95:37" pos:end="95:39">ctx</name><operator pos:start="95:40" pos:end="95:41">-&gt;</operator><name pos:start="95:42" pos:end="95:47">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
