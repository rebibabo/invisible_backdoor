<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17003.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">piix3_initfn</name><parameter_list pos:start="1:24" pos:end="1:39">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:33">PCIDevice</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:13">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">PIIX3State</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">d</name> <init pos:start="5:19" pos:end="5:51">= <expr pos:start="5:21" pos:end="5:51"><call pos:start="5:21" pos:end="5:51"><name pos:start="5:21" pos:end="5:29">DO_UPCAST</name><argument_list pos:start="5:30" pos:end="5:51">(<argument pos:start="5:31" pos:end="5:40"><expr pos:start="5:31" pos:end="5:40"><name pos:start="5:31" pos:end="5:40">PIIX3State</name></expr></argument>, <argument pos:start="5:43" pos:end="5:45"><expr pos:start="5:43" pos:end="5:45"><name pos:start="5:43" pos:end="5:45">dev</name></expr></argument>, <argument pos:start="5:48" pos:end="5:50"><expr pos:start="5:48" pos:end="5:50"><name pos:start="5:48" pos:end="5:50">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:21">pci_conf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:30"><expr pos:start="11:5" pos:end="11:29"><call pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:15">isa_bus_new</name><argument_list pos:start="11:16" pos:end="11:29">(<argument pos:start="11:17" pos:end="11:28"><expr pos:start="11:17" pos:end="11:28"><operator pos:start="11:17" pos:end="11:17">&amp;</operator><name pos:start="11:18" pos:end="11:28"><name pos:start="11:18" pos:end="11:18">d</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:23">dev</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:28">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:12">pci_conf</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:28"><name pos:start="15:16" pos:end="15:16">d</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:21">dev</name><operator pos:start="15:22" pos:end="15:22">.</operator><name pos:start="15:23" pos:end="15:28">config</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:60"><expr pos:start="17:5" pos:end="17:59"><call pos:start="17:5" pos:end="17:59"><name pos:start="17:5" pos:end="17:28">pci_config_set_vendor_id</name><argument_list pos:start="17:29" pos:end="17:59">(<argument pos:start="17:30" pos:end="17:37"><expr pos:start="17:30" pos:end="17:37"><name pos:start="17:30" pos:end="17:37">pci_conf</name></expr></argument>, <argument pos:start="17:40" pos:end="17:58"><expr pos:start="17:40" pos:end="17:58"><name pos:start="17:40" pos:end="17:58">PCI_VENDOR_ID_INTEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:70"><expr pos:start="19:5" pos:end="19:69"><call pos:start="19:5" pos:end="19:69"><name pos:start="19:5" pos:end="19:28">pci_config_set_device_id</name><argument_list pos:start="19:29" pos:end="19:69">(<argument pos:start="19:30" pos:end="19:37"><expr pos:start="19:30" pos:end="19:37"><name pos:start="19:30" pos:end="19:37">pci_conf</name></expr></argument>, <argument pos:start="19:40" pos:end="19:68"><expr pos:start="19:40" pos:end="19:68"><name pos:start="19:40" pos:end="19:68">PCI_DEVICE_ID_INTEL_82371SB_0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="19:72" pos:end="19:115">// 82371SB PIIX3 PCI-to-ISA bridge (Step A1)</comment>

    <expr_stmt pos:start="21:5" pos:end="21:57"><expr pos:start="21:5" pos:end="21:56"><call pos:start="21:5" pos:end="21:56"><name pos:start="21:5" pos:end="21:24">pci_config_set_class</name><argument_list pos:start="21:25" pos:end="21:56">(<argument pos:start="21:26" pos:end="21:33"><expr pos:start="21:26" pos:end="21:33"><name pos:start="21:26" pos:end="21:33">pci_conf</name></expr></argument>, <argument pos:start="21:36" pos:end="21:55"><expr pos:start="21:36" pos:end="21:55"><name pos:start="21:36" pos:end="21:55">PCI_CLASS_BRIDGE_ISA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="25:64"><expr pos:start="23:5" pos:end="25:63"><name pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:12">pci_conf</name><index pos:start="23:13" pos:end="23:29">[<expr pos:start="23:14" pos:end="23:28"><name pos:start="23:14" pos:end="23:28">PCI_HEADER_TYPE</name></expr>]</index></name> <operator pos:start="23:31" pos:end="23:31">=</operator>

        <name pos:start="25:9" pos:end="25:30">PCI_HEADER_TYPE_NORMAL</name> <operator pos:start="25:32" pos:end="25:32">|</operator> <name pos:start="25:34" pos:end="25:63">PCI_HEADER_TYPE_MULTI_FUNCTION</name></expr>;</expr_stmt> <comment type="line" pos:start="25:66" pos:end="25:108">// header_type = PCI_multifunction, generic</comment>



    <expr_stmt pos:start="29:5" pos:end="29:40"><expr pos:start="29:5" pos:end="29:39"><call pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:23">qemu_register_reset</name><argument_list pos:start="29:24" pos:end="29:39">(<argument pos:start="29:25" pos:end="29:35"><expr pos:start="29:25" pos:end="29:35"><name pos:start="29:25" pos:end="29:35">piix3_reset</name></expr></argument>, <argument pos:start="29:38" pos:end="29:38"><expr pos:start="29:38" pos:end="29:38"><name pos:start="29:38" pos:end="29:38">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
