<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13925.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">svq1_encode_frame</name><parameter_list pos:start="1:29" pos:end="3:66">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:60">AVPacket</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">pkt</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:48"><decl pos:start="3:30" pos:end="3:48"><type pos:start="3:30" pos:end="3:48"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">AVFrame</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:48">pict</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:65"><decl pos:start="3:51" pos:end="3:65"><type pos:start="3:51" pos:end="3:65"><name pos:start="3:51" pos:end="3:53">int</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:65">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="137:1">{<block_content pos:start="7:5" pos:end="135:13">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:18">SVQ1EncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier><specifier pos:start="7:21" pos:end="7:25">const</specifier></type> <name pos:start="7:27" pos:end="7:27">s</name> <init pos:start="7:29" pos:end="7:46">= <expr pos:start="7:31" pos:end="7:46"><name pos:start="7:31" pos:end="7:46"><name pos:start="7:31" pos:end="7:35">avctx</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:46">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier><specifier pos:start="9:14" pos:end="9:18">const</specifier></type> <name pos:start="9:20" pos:end="9:20">p</name>        <init pos:start="9:29" pos:end="9:48">= <expr pos:start="9:31" pos:end="9:48"><name pos:start="9:31" pos:end="9:48"><name pos:start="9:31" pos:end="9:35">avctx</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:48">coded_frame</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="25:5">if <condition pos:start="15:8" pos:end="19:73">(<expr pos:start="15:9" pos:end="19:72"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:18"><name pos:start="15:10" pos:end="15:12">pkt</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:18">data</name></name> <operator pos:start="15:20" pos:end="15:21">&amp;&amp;</operator>

        <operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:12">ret</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="19:67"><name pos:start="17:16" pos:end="17:28">av_new_packet</name><argument_list pos:start="17:29" pos:end="19:67">(<argument pos:start="17:30" pos:end="17:32"><expr pos:start="17:30" pos:end="17:32"><name pos:start="17:30" pos:end="17:32">pkt</name></expr></argument>, <argument pos:start="17:35" pos:end="19:66"><expr pos:start="17:35" pos:end="19:66"><name pos:start="17:35" pos:end="17:50"><name pos:start="17:35" pos:end="17:35">s</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:50">y_block_width</name></name> <operator pos:start="17:52" pos:end="17:52">*</operator> <name pos:start="17:54" pos:end="17:70"><name pos:start="17:54" pos:end="17:54">s</name><operator pos:start="17:55" pos:end="17:56">-&gt;</operator><name pos:start="17:57" pos:end="17:70">y_block_height</name></name> <operator pos:start="17:72" pos:end="17:72">*</operator>

                             <name pos:start="19:30" pos:end="19:41">MAX_MB_BYTES</name> <operator pos:start="19:43" pos:end="19:43">*</operator> <literal type="number" pos:start="19:45" pos:end="19:47">3</literal> <operator pos:start="19:47" pos:end="19:47">+</operator> <name pos:start="19:49" pos:end="19:66">FF_MIN_BUFFER_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="19:68" pos:end="19:68">)</operator> <operator pos:start="19:70" pos:end="19:70">&lt;</operator> <literal type="number" pos:start="19:72" pos:end="19:72">0</literal></expr>)</condition> <block pos:start="19:75" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:19">

        <expr_stmt pos:start="21:9" pos:end="21:70"><expr pos:start="21:9" pos:end="21:69"><call pos:start="21:9" pos:end="21:69"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:69">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">avctx</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:37" pos:end="21:68"><expr pos:start="21:37" pos:end="21:68"><literal type="string" pos:start="21:37" pos:end="21:68">"Error getting output packet.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:45">(<expr pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:13">avctx</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:22">pix_fmt</name></name> <operator pos:start="29:24" pos:end="29:25">!=</operator> <name pos:start="29:27" pos:end="29:44">AV_PIX_FMT_YUV410P</name></expr>)</condition> <block pos:start="29:47" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:18">

        <expr_stmt pos:start="31:9" pos:end="31:66"><expr pos:start="31:9" pos:end="31:65"><call pos:start="31:9" pos:end="31:65"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:65">(<argument pos:start="31:16" pos:end="31:20"><expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:20">avctx</name></expr></argument>, <argument pos:start="31:23" pos:end="31:34"><expr pos:start="31:23" pos:end="31:34"><name pos:start="31:23" pos:end="31:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:37" pos:end="31:64"><expr pos:start="31:37" pos:end="31:64"><literal type="string" pos:start="31:37" pos:end="31:64">"unsupported pixel format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:37">(<expr pos:start="39:9" pos:end="39:36"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:36"><name pos:start="39:10" pos:end="39:10">s</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:27">current_picture</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:33">data</name><index pos:start="39:34" pos:end="39:36">[<expr pos:start="39:35" pos:end="39:35"><literal type="number" pos:start="39:35" pos:end="39:35">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="39:39" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:23">

        <expr_stmt pos:start="41:9" pos:end="41:58"><expr pos:start="41:9" pos:end="41:57"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:57"><name pos:start="41:15" pos:end="41:27">ff_get_buffer</name><argument_list pos:start="41:28" pos:end="41:57">(<argument pos:start="41:29" pos:end="41:33"><expr pos:start="41:29" pos:end="41:33"><name pos:start="41:29" pos:end="41:33">avctx</name></expr></argument>, <argument pos:start="41:36" pos:end="41:53"><expr pos:start="41:36" pos:end="41:53"><name pos:start="41:36" pos:end="41:53"><name pos:start="41:36" pos:end="41:36">s</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:53">current_picture</name></name></expr></argument>, <argument pos:start="41:56" pos:end="41:56"><expr pos:start="41:56" pos:end="41:56"><literal type="number" pos:start="41:56" pos:end="41:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="45:23"><if pos:start="43:9" pos:end="45:23">if <condition pos:start="43:12" pos:end="43:20">(<expr pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:15">ret</name> <operator pos:start="43:17" pos:end="43:17">&lt;</operator> <literal type="number" pos:start="43:19" pos:end="43:19">0</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:23"><block_content pos:start="45:13" pos:end="45:23">

            <return pos:start="45:13" pos:end="45:23">return <expr pos:start="45:20" pos:end="45:22"><name pos:start="45:20" pos:end="45:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="57:5">if <condition pos:start="49:8" pos:end="49:34">(<expr pos:start="49:9" pos:end="49:33"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:33"><name pos:start="49:10" pos:end="49:10">s</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:24">last_picture</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:30">data</name><index pos:start="49:31" pos:end="49:33">[<expr pos:start="49:32" pos:end="49:32"><literal type="number" pos:start="49:32" pos:end="49:32">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="49:36" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:23">

        <expr_stmt pos:start="51:9" pos:end="51:55"><expr pos:start="51:9" pos:end="51:54"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:54"><name pos:start="51:15" pos:end="51:27">ff_get_buffer</name><argument_list pos:start="51:28" pos:end="51:54">(<argument pos:start="51:29" pos:end="51:33"><expr pos:start="51:29" pos:end="51:33"><name pos:start="51:29" pos:end="51:33">avctx</name></expr></argument>, <argument pos:start="51:36" pos:end="51:50"><expr pos:start="51:36" pos:end="51:50"><name pos:start="51:36" pos:end="51:50"><name pos:start="51:36" pos:end="51:36">s</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:50">last_picture</name></name></expr></argument>, <argument pos:start="51:53" pos:end="51:53"><expr pos:start="51:53" pos:end="51:53"><literal type="number" pos:start="51:53" pos:end="51:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="55:23"><if pos:start="53:9" pos:end="55:23">if <condition pos:start="53:12" pos:end="53:20">(<expr pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:15">ret</name> <operator pos:start="53:17" pos:end="53:17">&lt;</operator> <literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:23"><block_content pos:start="55:13" pos:end="55:23">

            <return pos:start="55:13" pos:end="55:23">return <expr pos:start="55:20" pos:end="55:22"><name pos:start="55:20" pos:end="55:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="59:23">(<expr pos:start="59:9" pos:end="59:22"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:22"><name pos:start="59:10" pos:end="59:10">s</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:22">scratchbuf</name></name></expr>)</condition> <block pos:start="59:25" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:35">

        <expr_stmt pos:start="61:9" pos:end="61:76"><expr pos:start="61:9" pos:end="61:75"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:21">scratchbuf</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <call pos:start="61:25" pos:end="61:75"><name pos:start="61:25" pos:end="61:33">av_malloc</name><argument_list pos:start="61:34" pos:end="61:75">(<argument pos:start="61:35" pos:end="61:74"><expr pos:start="61:35" pos:end="61:74"><name pos:start="61:35" pos:end="61:65"><name pos:start="61:35" pos:end="61:35">s</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:52">current_picture</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:62">linesize</name><index pos:start="61:63" pos:end="61:65">[<expr pos:start="61:64" pos:end="61:64"><literal type="number" pos:start="61:64" pos:end="61:64">0</literal></expr>]</index></name> <operator pos:start="61:67" pos:end="61:67">*</operator> <literal type="number" pos:start="61:69" pos:end="61:70">16</literal> <operator pos:start="61:72" pos:end="61:72">*</operator> <literal type="number" pos:start="61:74" pos:end="61:74">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="65:35"><if pos:start="63:9" pos:end="65:35">if <condition pos:start="63:12" pos:end="63:27">(<expr pos:start="63:13" pos:end="63:26"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:26"><name pos:start="63:14" pos:end="63:14">s</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:26">scratchbuf</name></name></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:35"><block_content pos:start="65:13" pos:end="65:35">

            <return pos:start="65:13" pos:end="65:35">return <expr pos:start="65:20" pos:end="65:34"><call pos:start="65:20" pos:end="65:34"><name pos:start="65:20" pos:end="65:26">AVERROR</name><argument_list pos:start="65:27" pos:end="65:34">(<argument pos:start="65:28" pos:end="65:33"><expr pos:start="65:28" pos:end="65:33"><name pos:start="65:28" pos:end="65:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:58"><expr pos:start="71:5" pos:end="71:57"><call pos:start="71:5" pos:end="71:57"><name pos:start="71:5" pos:end="71:10">FFSWAP</name><argument_list pos:start="71:11" pos:end="71:57">(<argument pos:start="71:12" pos:end="71:19"><expr pos:start="71:12" pos:end="71:19"><name pos:start="71:12" pos:end="71:18">AVFrame</name><operator pos:start="71:19" pos:end="71:19">*</operator></expr></argument>, <argument pos:start="71:22" pos:end="71:39"><expr pos:start="71:22" pos:end="71:39"><name pos:start="71:22" pos:end="71:39"><name pos:start="71:22" pos:end="71:22">s</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:39">current_picture</name></name></expr></argument>, <argument pos:start="71:42" pos:end="71:56"><expr pos:start="71:42" pos:end="71:56"><name pos:start="71:42" pos:end="71:56"><name pos:start="71:42" pos:end="71:42">s</name><operator pos:start="71:43" pos:end="71:44">-&gt;</operator><name pos:start="71:45" pos:end="71:56">last_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:48"><expr pos:start="75:5" pos:end="75:47"><call pos:start="75:5" pos:end="75:47"><name pos:start="75:5" pos:end="75:17">init_put_bits</name><argument_list pos:start="75:18" pos:end="75:47">(<argument pos:start="75:19" pos:end="75:24"><expr pos:start="75:19" pos:end="75:24"><operator pos:start="75:19" pos:end="75:19">&amp;</operator><name pos:start="75:20" pos:end="75:24"><name pos:start="75:20" pos:end="75:20">s</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:24">pb</name></name></expr></argument>, <argument pos:start="75:27" pos:end="75:35"><expr pos:start="75:27" pos:end="75:35"><name pos:start="75:27" pos:end="75:35"><name pos:start="75:27" pos:end="75:29">pkt</name><operator pos:start="75:30" pos:end="75:31">-&gt;</operator><name pos:start="75:32" pos:end="75:35">data</name></name></expr></argument>, <argument pos:start="75:38" pos:end="75:46"><expr pos:start="75:38" pos:end="75:46"><name pos:start="75:38" pos:end="75:46"><name pos:start="75:38" pos:end="75:40">pkt</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:46">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="81:57"><expr pos:start="79:5" pos:end="81:56"><name pos:start="79:5" pos:end="79:16"><name pos:start="79:5" pos:end="79:5">p</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:16">pict_type</name></name> <operator pos:start="79:18" pos:end="79:18">=</operator> <ternary pos:start="79:20" pos:end="81:56"><condition pos:start="79:20" pos:end="79:77"><expr pos:start="79:20" pos:end="79:75"><name pos:start="79:20" pos:end="79:34"><name pos:start="79:20" pos:end="79:24">avctx</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:34">gop_size</name></name> <operator pos:start="79:36" pos:end="79:37">&amp;&amp;</operator> <name pos:start="79:39" pos:end="79:57"><name pos:start="79:39" pos:end="79:43">avctx</name><operator pos:start="79:44" pos:end="79:45">-&gt;</operator><name pos:start="79:46" pos:end="79:57">frame_number</name></name> <operator pos:start="79:59" pos:end="79:59">%</operator> <name pos:start="79:61" pos:end="79:75"><name pos:start="79:61" pos:end="79:65">avctx</name><operator pos:start="79:66" pos:end="79:67">-&gt;</operator><name pos:start="79:68" pos:end="79:75">gop_size</name></name></expr> ?</condition><then pos:start="81:20" pos:end="81:36">

                   <expr pos:start="81:20" pos:end="81:36"><name pos:start="81:20" pos:end="81:36">AV_PICTURE_TYPE_P</name></expr> </then><else pos:start="81:38" pos:end="81:56">: <expr pos:start="81:40" pos:end="81:56"><name pos:start="81:40" pos:end="81:56">AV_PICTURE_TYPE_I</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:53"><expr pos:start="83:5" pos:end="83:52"><name pos:start="83:5" pos:end="83:16"><name pos:start="83:5" pos:end="83:5">p</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:16">key_frame</name></name> <operator pos:start="83:18" pos:end="83:18">=</operator> <name pos:start="83:20" pos:end="83:31"><name pos:start="83:20" pos:end="83:20">p</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:31">pict_type</name></name> <operator pos:start="83:33" pos:end="83:34">==</operator> <name pos:start="83:36" pos:end="83:52">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:33"><expr pos:start="85:5" pos:end="85:32"><name pos:start="85:5" pos:end="85:14"><name pos:start="85:5" pos:end="85:5">p</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:14">quality</name></name>   <operator pos:start="85:18" pos:end="85:18">=</operator> <name pos:start="85:20" pos:end="85:32"><name pos:start="85:20" pos:end="85:23">pict</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:32">quality</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:39"><expr pos:start="89:5" pos:end="89:38"><call pos:start="89:5" pos:end="89:38"><name pos:start="89:5" pos:end="89:21">svq1_write_header</name><argument_list pos:start="89:22" pos:end="89:38">(<argument pos:start="89:23" pos:end="89:23"><expr pos:start="89:23" pos:end="89:23"><name pos:start="89:23" pos:end="89:23">s</name></expr></argument>, <argument pos:start="89:26" pos:end="89:37"><expr pos:start="89:26" pos:end="89:37"><name pos:start="89:26" pos:end="89:37"><name pos:start="89:26" pos:end="89:26">p</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:37">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="91:5" pos:end="109:22">for <control pos:start="91:9" pos:end="91:27">(<init pos:start="91:10" pos:end="91:15"><expr pos:start="91:10" pos:end="91:14"><name pos:start="91:10" pos:end="91:10">i</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <literal type="number" pos:start="91:14" pos:end="91:14">0</literal></expr>;</init> <condition pos:start="91:17" pos:end="91:22"><expr pos:start="91:17" pos:end="91:21"><name pos:start="91:17" pos:end="91:17">i</name> <operator pos:start="91:19" pos:end="91:19">&lt;</operator> <literal type="number" pos:start="91:21" pos:end="91:21">3</literal></expr>;</condition> <incr pos:start="91:24" pos:end="91:26"><expr pos:start="91:24" pos:end="91:26"><name pos:start="91:24" pos:end="91:24">i</name><operator pos:start="91:25" pos:end="91:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="93:9" pos:end="109:22"><block_content pos:start="93:9" pos:end="109:22">

        <if_stmt pos:start="93:9" pos:end="109:22"><if pos:start="93:9" pos:end="109:22">if <condition pos:start="93:12" pos:end="107:67">(<expr pos:start="93:13" pos:end="107:66"><call pos:start="93:13" pos:end="107:62"><name pos:start="93:13" pos:end="93:29">svq1_encode_plane</name><argument_list pos:start="93:30" pos:end="107:62">(<argument pos:start="93:31" pos:end="93:31"><expr pos:start="93:31" pos:end="93:31"><name pos:start="93:31" pos:end="93:31">s</name></expr></argument>, <argument pos:start="93:34" pos:end="93:34"><expr pos:start="93:34" pos:end="93:34"><name pos:start="93:34" pos:end="93:34">i</name></expr></argument>,

                              <argument pos:start="95:31" pos:end="95:43"><expr pos:start="95:31" pos:end="95:43"><name pos:start="95:31" pos:end="95:43"><name pos:start="95:31" pos:end="95:34">pict</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:40">data</name><index pos:start="95:41" pos:end="95:43">[<expr pos:start="95:42" pos:end="95:42"><name pos:start="95:42" pos:end="95:42">i</name></expr>]</index></name></expr></argument>,

                              <argument pos:start="97:31" pos:end="97:54"><expr pos:start="97:31" pos:end="97:54"><name pos:start="97:31" pos:end="97:54"><name pos:start="97:31" pos:end="97:31">s</name><operator pos:start="97:32" pos:end="97:33">-&gt;</operator><name pos:start="97:34" pos:end="97:45">last_picture</name><operator pos:start="97:46" pos:end="97:47">-&gt;</operator><name pos:start="97:48" pos:end="97:51">data</name><index pos:start="97:52" pos:end="97:54">[<expr pos:start="97:53" pos:end="97:53"><name pos:start="97:53" pos:end="97:53">i</name></expr>]</index></name></expr></argument>,

                              <argument pos:start="99:31" pos:end="99:57"><expr pos:start="99:31" pos:end="99:57"><name pos:start="99:31" pos:end="99:57"><name pos:start="99:31" pos:end="99:31">s</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:48">current_picture</name><operator pos:start="99:49" pos:end="99:50">-&gt;</operator><name pos:start="99:51" pos:end="99:54">data</name><index pos:start="99:55" pos:end="99:57">[<expr pos:start="99:56" pos:end="99:56"><name pos:start="99:56" pos:end="99:56">i</name></expr>]</index></name></expr></argument>,

                              <argument pos:start="101:31" pos:end="101:59"><expr pos:start="101:31" pos:end="101:59"><name pos:start="101:31" pos:end="101:44"><name pos:start="101:31" pos:end="101:31">s</name><operator pos:start="101:32" pos:end="101:33">-&gt;</operator><name pos:start="101:34" pos:end="101:44">frame_width</name></name>  <operator pos:start="101:47" pos:end="101:47">/</operator> <operator pos:start="101:49" pos:end="101:49">(</operator><ternary pos:start="101:50" pos:end="101:58"><condition pos:start="101:50" pos:end="101:52"><expr pos:start="101:50" pos:end="101:50"><name pos:start="101:50" pos:end="101:50">i</name></expr> ?</condition><then pos:start="101:54" pos:end="101:54"> <expr pos:start="101:54" pos:end="101:54"><literal type="number" pos:start="101:54" pos:end="101:54">4</literal></expr> </then><else pos:start="101:56" pos:end="101:58">: <expr pos:start="101:58" pos:end="101:58"><literal type="number" pos:start="101:58" pos:end="101:58">1</literal></expr></else></ternary><operator pos:start="101:59" pos:end="101:59">)</operator></expr></argument>,

                              <argument pos:start="103:31" pos:end="103:59"><expr pos:start="103:31" pos:end="103:59"><name pos:start="103:31" pos:end="103:45"><name pos:start="103:31" pos:end="103:31">s</name><operator pos:start="103:32" pos:end="103:33">-&gt;</operator><name pos:start="103:34" pos:end="103:45">frame_height</name></name> <operator pos:start="103:47" pos:end="103:47">/</operator> <operator pos:start="103:49" pos:end="103:49">(</operator><ternary pos:start="103:50" pos:end="103:58"><condition pos:start="103:50" pos:end="103:52"><expr pos:start="103:50" pos:end="103:50"><name pos:start="103:50" pos:end="103:50">i</name></expr> ?</condition><then pos:start="103:54" pos:end="103:54"> <expr pos:start="103:54" pos:end="103:54"><literal type="number" pos:start="103:54" pos:end="103:54">4</literal></expr> </then><else pos:start="103:56" pos:end="103:58">: <expr pos:start="103:58" pos:end="103:58"><literal type="number" pos:start="103:58" pos:end="103:58">1</literal></expr></else></ternary><operator pos:start="103:59" pos:end="103:59">)</operator></expr></argument>,

                              <argument pos:start="105:31" pos:end="105:47"><expr pos:start="105:31" pos:end="105:47"><name pos:start="105:31" pos:end="105:47"><name pos:start="105:31" pos:end="105:34">pict</name><operator pos:start="105:35" pos:end="105:36">-&gt;</operator><name pos:start="105:37" pos:end="105:44">linesize</name><index pos:start="105:45" pos:end="105:47">[<expr pos:start="105:46" pos:end="105:46"><name pos:start="105:46" pos:end="105:46">i</name></expr>]</index></name></expr></argument>,

                              <argument pos:start="107:31" pos:end="107:61"><expr pos:start="107:31" pos:end="107:61"><name pos:start="107:31" pos:end="107:61"><name pos:start="107:31" pos:end="107:31">s</name><operator pos:start="107:32" pos:end="107:33">-&gt;</operator><name pos:start="107:34" pos:end="107:48">current_picture</name><operator pos:start="107:49" pos:end="107:50">-&gt;</operator><name pos:start="107:51" pos:end="107:58">linesize</name><index pos:start="107:59" pos:end="107:61">[<expr pos:start="107:60" pos:end="107:60"><name pos:start="107:60" pos:end="107:60">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="107:64" pos:end="107:64">&lt;</operator> <literal type="number" pos:start="107:66" pos:end="107:66">0</literal></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:22"><block_content pos:start="109:13" pos:end="109:22">

            <return pos:start="109:13" pos:end="109:22">return <expr pos:start="109:20" pos:end="109:21"><operator pos:start="109:20" pos:end="109:20">-</operator><literal type="number" pos:start="109:21" pos:end="109:21">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>



    <comment type="line" pos:start="113:5" pos:end="113:37">// avpriv_align_put_bits(&amp;s-&gt;pb);</comment>

    <while pos:start="115:5" pos:end="117:31">while <condition pos:start="115:11" pos:end="115:39">(<expr pos:start="115:12" pos:end="115:38"><call pos:start="115:12" pos:end="115:33"><name pos:start="115:12" pos:end="115:25">put_bits_count</name><argument_list pos:start="115:26" pos:end="115:33">(<argument pos:start="115:27" pos:end="115:32"><expr pos:start="115:27" pos:end="115:32"><operator pos:start="115:27" pos:end="115:27">&amp;</operator><name pos:start="115:28" pos:end="115:32"><name pos:start="115:28" pos:end="115:28">s</name><operator pos:start="115:29" pos:end="115:30">-&gt;</operator><name pos:start="115:31" pos:end="115:32">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="115:35" pos:end="115:35">&amp;</operator> <literal type="number" pos:start="115:37" pos:end="115:38">31</literal></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:31"><block_content pos:start="117:9" pos:end="117:31">

        <expr_stmt pos:start="117:9" pos:end="117:31"><expr pos:start="117:9" pos:end="117:30"><call pos:start="117:9" pos:end="117:30"><name pos:start="117:9" pos:end="117:16">put_bits</name><argument_list pos:start="117:17" pos:end="117:30">(<argument pos:start="117:18" pos:end="117:23"><expr pos:start="117:18" pos:end="117:23"><operator pos:start="117:18" pos:end="117:18">&amp;</operator><name pos:start="117:19" pos:end="117:23"><name pos:start="117:19" pos:end="117:19">s</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:23">pb</name></name></expr></argument>, <argument pos:start="117:26" pos:end="117:26"><expr pos:start="117:26" pos:end="117:26"><literal type="number" pos:start="117:26" pos:end="117:26">1</literal></expr></argument>, <argument pos:start="117:29" pos:end="117:29"><expr pos:start="117:29" pos:end="117:29"><literal type="number" pos:start="117:29" pos:end="117:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <expr_stmt pos:start="121:5" pos:end="121:27"><expr pos:start="121:5" pos:end="121:26"><call pos:start="121:5" pos:end="121:26"><name pos:start="121:5" pos:end="121:18">flush_put_bits</name><argument_list pos:start="121:19" pos:end="121:26">(<argument pos:start="121:20" pos:end="121:25"><expr pos:start="121:20" pos:end="121:25"><operator pos:start="121:20" pos:end="121:20">&amp;</operator><name pos:start="121:21" pos:end="121:25"><name pos:start="121:21" pos:end="121:21">s</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:43"><expr pos:start="125:5" pos:end="125:42"><name pos:start="125:5" pos:end="125:13"><name pos:start="125:5" pos:end="125:7">pkt</name><operator pos:start="125:8" pos:end="125:9">-&gt;</operator><name pos:start="125:10" pos:end="125:13">size</name></name> <operator pos:start="125:15" pos:end="125:15">=</operator> <call pos:start="125:17" pos:end="125:38"><name pos:start="125:17" pos:end="125:30">put_bits_count</name><argument_list pos:start="125:31" pos:end="125:38">(<argument pos:start="125:32" pos:end="125:37"><expr pos:start="125:32" pos:end="125:37"><operator pos:start="125:32" pos:end="125:32">&amp;</operator><name pos:start="125:33" pos:end="125:37"><name pos:start="125:33" pos:end="125:33">s</name><operator pos:start="125:34" pos:end="125:35">-&gt;</operator><name pos:start="125:36" pos:end="125:37">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="125:40" pos:end="125:40">/</operator> <literal type="number" pos:start="125:42" pos:end="125:42">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="127:5" pos:end="129:38"><if pos:start="127:5" pos:end="129:38">if <condition pos:start="127:8" pos:end="127:42">(<expr pos:start="127:9" pos:end="127:41"><name pos:start="127:9" pos:end="127:20"><name pos:start="127:9" pos:end="127:9">p</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:20">pict_type</name></name> <operator pos:start="127:22" pos:end="127:23">==</operator> <name pos:start="127:25" pos:end="127:41">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:38"><block_content pos:start="129:9" pos:end="129:38">

        <expr_stmt pos:start="129:9" pos:end="129:38"><expr pos:start="129:9" pos:end="129:37"><name pos:start="129:9" pos:end="129:18"><name pos:start="129:9" pos:end="129:11">pkt</name><operator pos:start="129:12" pos:end="129:13">-&gt;</operator><name pos:start="129:14" pos:end="129:18">flags</name></name> <operator pos:start="129:20" pos:end="129:21">|=</operator> <name pos:start="129:23" pos:end="129:37">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:20"><expr pos:start="131:5" pos:end="131:19"><operator pos:start="131:5" pos:end="131:5">*</operator><name pos:start="131:6" pos:end="131:15">got_packet</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <literal type="number" pos:start="131:19" pos:end="131:19">1</literal></expr>;</expr_stmt>



    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
