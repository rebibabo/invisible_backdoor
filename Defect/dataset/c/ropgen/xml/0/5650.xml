<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5650.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">v9fs_lcreate</name><parameter_list pos:start="1:25" pos:end="1:38">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:31"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:28">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:16">dfid</name></decl>, <decl pos:start="5:19" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:19" pos:end="5:23">flags</name></decl>, <decl pos:start="5:26" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:26" pos:end="5:29">mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">gid_t</name></type> <name pos:start="7:11" pos:end="7:13">gid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">ssize_t</name></type> <name pos:start="9:13" pos:end="9:15">err</name> <init pos:start="9:17" pos:end="9:19">= <expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">ssize_t</name></type> <name pos:start="11:13" pos:end="11:18">offset</name> <init pos:start="11:20" pos:end="11:22">= <expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">V9fsString</name></type> <name pos:start="13:16" pos:end="13:19">name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">V9fsFidState</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:15">stat</name></name></type> <name pos:start="17:17" pos:end="17:21">stbuf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">V9fsQID</name></type> <name pos:start="19:13" pos:end="19:15">qid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int32_t</name></type> <name pos:start="21:13" pos:end="21:18">iounit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:26"><decl pos:start="23:5" pos:end="23:25"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:11">V9fsPDU</name> <modifier pos:start="23:13" pos:end="23:13">*</modifier></type><name pos:start="23:14" pos:end="23:16">pdu</name> <init pos:start="23:18" pos:end="23:25">= <expr pos:start="23:20" pos:end="23:25"><name pos:start="23:20" pos:end="23:25">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:31"><expr pos:start="27:5" pos:end="29:30"><call pos:start="27:5" pos:end="29:30"><name pos:start="27:5" pos:end="27:17">pdu_unmarshal</name><argument_list pos:start="27:18" pos:end="29:30">(<argument pos:start="27:19" pos:end="27:21"><expr pos:start="27:19" pos:end="27:21"><name pos:start="27:19" pos:end="27:21">pdu</name></expr></argument>, <argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">offset</name></expr></argument>, <argument pos:start="27:32" pos:end="27:38"><expr pos:start="27:32" pos:end="27:38"><literal type="string" pos:start="27:32" pos:end="27:38">"dsddd"</literal></expr></argument>, <argument pos:start="27:41" pos:end="27:45"><expr pos:start="27:41" pos:end="27:45"><operator pos:start="27:41" pos:end="27:41">&amp;</operator><name pos:start="27:42" pos:end="27:45">dfid</name></expr></argument>, <argument pos:start="27:48" pos:end="27:52"><expr pos:start="27:48" pos:end="27:52"><operator pos:start="27:48" pos:end="27:48">&amp;</operator><name pos:start="27:49" pos:end="27:52">name</name></expr></argument>, <argument pos:start="27:55" pos:end="27:60"><expr pos:start="27:55" pos:end="27:60"><operator pos:start="27:55" pos:end="27:55">&amp;</operator><name pos:start="27:56" pos:end="27:60">flags</name></expr></argument>,

                  <argument pos:start="29:19" pos:end="29:23"><expr pos:start="29:19" pos:end="29:23"><operator pos:start="29:19" pos:end="29:19">&amp;</operator><name pos:start="29:20" pos:end="29:23">mode</name></expr></argument>, <argument pos:start="29:26" pos:end="29:29"><expr pos:start="29:26" pos:end="29:29"><operator pos:start="29:26" pos:end="29:26">&amp;</operator><name pos:start="29:27" pos:end="29:29">gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:66"><expr pos:start="31:5" pos:end="31:65"><call pos:start="31:5" pos:end="31:65"><name pos:start="31:5" pos:end="31:22">trace_v9fs_lcreate</name><argument_list pos:start="31:23" pos:end="31:65">(<argument pos:start="31:24" pos:end="31:31"><expr pos:start="31:24" pos:end="31:31"><name pos:start="31:24" pos:end="31:31"><name pos:start="31:24" pos:end="31:26">pdu</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:31">tag</name></name></expr></argument>, <argument pos:start="31:34" pos:end="31:40"><expr pos:start="31:34" pos:end="31:40"><name pos:start="31:34" pos:end="31:40"><name pos:start="31:34" pos:end="31:36">pdu</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:40">id</name></name></expr></argument>, <argument pos:start="31:43" pos:end="31:46"><expr pos:start="31:43" pos:end="31:46"><name pos:start="31:43" pos:end="31:46">dfid</name></expr></argument>, <argument pos:start="31:49" pos:end="31:53"><expr pos:start="31:49" pos:end="31:53"><name pos:start="31:49" pos:end="31:53">flags</name></expr></argument>, <argument pos:start="31:56" pos:end="31:59"><expr pos:start="31:56" pos:end="31:59"><name pos:start="31:56" pos:end="31:59">mode</name></expr></argument>, <argument pos:start="31:62" pos:end="31:64"><expr pos:start="31:62" pos:end="31:64"><name pos:start="31:62" pos:end="31:64">gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:8">fidp</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <call pos:start="35:12" pos:end="35:29"><name pos:start="35:12" pos:end="35:18">get_fid</name><argument_list pos:start="35:19" pos:end="35:29">(<argument pos:start="35:20" pos:end="35:22"><expr pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:22">pdu</name></expr></argument>, <argument pos:start="35:25" pos:end="35:28"><expr pos:start="35:25" pos:end="35:28"><name pos:start="35:25" pos:end="35:28">dfid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:21">(<expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:12">fidp</name> <operator pos:start="37:14" pos:end="37:15">==</operator> <name pos:start="37:17" pos:end="37:20">NULL</name></expr>)</condition> <block pos:start="37:23" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:23">

        <expr_stmt pos:start="39:9" pos:end="39:22"><expr pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:11">err</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <operator pos:start="39:15" pos:end="39:15">-</operator><name pos:start="39:16" pos:end="39:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="41:9" pos:end="41:23">goto <name pos:start="41:14" pos:end="41:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:46"><expr pos:start="47:5" pos:end="47:45"><name pos:start="47:5" pos:end="47:9">flags</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <call pos:start="47:13" pos:end="47:45"><name pos:start="47:13" pos:end="47:30">get_dotl_openflags</name><argument_list pos:start="47:31" pos:end="47:45">(<argument pos:start="47:32" pos:end="47:37"><expr pos:start="47:32" pos:end="47:37"><name pos:start="47:32" pos:end="47:37"><name pos:start="47:32" pos:end="47:34">pdu</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:37">s</name></name></expr></argument>, <argument pos:start="47:40" pos:end="47:44"><expr pos:start="47:40" pos:end="47:44"><name pos:start="47:40" pos:end="47:44">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="51:55"><expr pos:start="49:5" pos:end="51:54"><name pos:start="49:5" pos:end="49:7">err</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="51:54"><name pos:start="49:11" pos:end="49:23">v9fs_co_open2</name><argument_list pos:start="49:24" pos:end="51:54">(<argument pos:start="49:25" pos:end="49:27"><expr pos:start="49:25" pos:end="49:27"><name pos:start="49:25" pos:end="49:27">pdu</name></expr></argument>, <argument pos:start="49:30" pos:end="49:33"><expr pos:start="49:30" pos:end="49:33"><name pos:start="49:30" pos:end="49:33">fidp</name></expr></argument>, <argument pos:start="49:36" pos:end="49:40"><expr pos:start="49:36" pos:end="49:40"><operator pos:start="49:36" pos:end="49:36">&amp;</operator><name pos:start="49:37" pos:end="49:40">name</name></expr></argument>, <argument pos:start="49:43" pos:end="49:45"><expr pos:start="49:43" pos:end="49:45"><name pos:start="49:43" pos:end="49:45">gid</name></expr></argument>,

                        <argument pos:start="51:25" pos:end="51:39"><expr pos:start="51:25" pos:end="51:39"><name pos:start="51:25" pos:end="51:29">flags</name> <operator pos:start="51:31" pos:end="51:31">|</operator> <name pos:start="51:33" pos:end="51:39">O_CREAT</name></expr></argument>, <argument pos:start="51:42" pos:end="51:45"><expr pos:start="51:42" pos:end="51:45"><name pos:start="51:42" pos:end="51:45">mode</name></expr></argument>, <argument pos:start="51:48" pos:end="51:53"><expr pos:start="51:48" pos:end="51:53"><operator pos:start="51:48" pos:end="51:48">&amp;</operator><name pos:start="51:49" pos:end="51:53">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:16">(<expr pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:11">err</name> <operator pos:start="53:13" pos:end="53:13">&lt;</operator> <literal type="number" pos:start="53:15" pos:end="53:15">0</literal></expr>)</condition> <block pos:start="53:18" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:17">

        <goto pos:start="55:9" pos:end="55:17">goto <name pos:start="55:14" pos:end="55:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:33"><expr pos:start="59:5" pos:end="59:32"><name pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:8">fidp</name><operator pos:start="59:9" pos:end="59:10">-&gt;</operator><name pos:start="59:11" pos:end="59:18">fid_type</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:32">P9_FID_FILE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:29"><expr pos:start="61:5" pos:end="61:28"><name pos:start="61:5" pos:end="61:20"><name pos:start="61:5" pos:end="61:8">fidp</name><operator pos:start="61:9" pos:end="61:10">-&gt;</operator><name pos:start="61:11" pos:end="61:20">open_flags</name></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:28">flags</name></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="75:5"><if pos:start="63:5" pos:end="75:5">if <condition pos:start="63:8" pos:end="63:23">(<expr pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:13">flags</name> <operator pos:start="63:15" pos:end="63:15">&amp;</operator> <name pos:start="63:17" pos:end="63:22">O_EXCL</name></expr>)</condition> <block pos:start="63:25" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:43">

        <comment type="block" pos:start="65:9" pos:end="71:11">/*

         * We let the host file system do O_EXCL check

         * We should not reclaim such fd

         */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:43"><expr pos:start="73:9" pos:end="73:42"><name pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:12">fidp</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:19">flags</name></name> <operator pos:start="73:21" pos:end="73:22">|=</operator> <name pos:start="73:24" pos:end="73:42">FID_NON_RECLAIMABLE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:43"><expr pos:start="77:5" pos:end="77:42"><name pos:start="77:5" pos:end="77:10">iounit</name> <operator pos:start="77:12" pos:end="77:12">=</operator>  <call pos:start="77:15" pos:end="77:42"><name pos:start="77:15" pos:end="77:24">get_iounit</name><argument_list pos:start="77:25" pos:end="77:42">(<argument pos:start="77:26" pos:end="77:28"><expr pos:start="77:26" pos:end="77:28"><name pos:start="77:26" pos:end="77:28">pdu</name></expr></argument>, <argument pos:start="77:31" pos:end="77:41"><expr pos:start="77:31" pos:end="77:41"><operator pos:start="77:31" pos:end="77:31">&amp;</operator><name pos:start="77:32" pos:end="77:41"><name pos:start="77:32" pos:end="77:35">fidp</name><operator pos:start="77:36" pos:end="77:37">-&gt;</operator><name pos:start="77:38" pos:end="77:41">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:30"><expr pos:start="79:5" pos:end="79:29"><call pos:start="79:5" pos:end="79:29"><name pos:start="79:5" pos:end="79:15">stat_to_qid</name><argument_list pos:start="79:16" pos:end="79:29">(<argument pos:start="79:17" pos:end="79:22"><expr pos:start="79:17" pos:end="79:22"><operator pos:start="79:17" pos:end="79:17">&amp;</operator><name pos:start="79:18" pos:end="79:22">stbuf</name></expr></argument>, <argument pos:start="79:25" pos:end="79:28"><expr pos:start="79:25" pos:end="79:28"><operator pos:start="79:25" pos:end="79:25">&amp;</operator><name pos:start="79:26" pos:end="79:28">qid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:59"><expr pos:start="81:5" pos:end="81:58"><name pos:start="81:5" pos:end="81:10">offset</name> <operator pos:start="81:12" pos:end="81:13">+=</operator> <call pos:start="81:15" pos:end="81:58"><name pos:start="81:15" pos:end="81:25">pdu_marshal</name><argument_list pos:start="81:26" pos:end="81:58">(<argument pos:start="81:27" pos:end="81:29"><expr pos:start="81:27" pos:end="81:29"><name pos:start="81:27" pos:end="81:29">pdu</name></expr></argument>, <argument pos:start="81:32" pos:end="81:37"><expr pos:start="81:32" pos:end="81:37"><name pos:start="81:32" pos:end="81:37">offset</name></expr></argument>, <argument pos:start="81:40" pos:end="81:43"><expr pos:start="81:40" pos:end="81:43"><literal type="string" pos:start="81:40" pos:end="81:43">"Qd"</literal></expr></argument>, <argument pos:start="81:46" pos:end="81:49"><expr pos:start="81:46" pos:end="81:49"><operator pos:start="81:46" pos:end="81:46">&amp;</operator><name pos:start="81:47" pos:end="81:49">qid</name></expr></argument>, <argument pos:start="81:52" pos:end="81:57"><expr pos:start="81:52" pos:end="81:57"><name pos:start="81:52" pos:end="81:57">iounit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:17"><expr pos:start="83:5" pos:end="83:16"><name pos:start="83:5" pos:end="83:7">err</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <name pos:start="83:11" pos:end="83:16">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="87:71"><expr pos:start="85:5" pos:end="87:70"><call pos:start="85:5" pos:end="87:70"><name pos:start="85:5" pos:end="85:29">trace_v9fs_lcreate_return</name><argument_list pos:start="85:30" pos:end="87:70">(<argument pos:start="85:31" pos:end="85:38"><expr pos:start="85:31" pos:end="85:38"><name pos:start="85:31" pos:end="85:38"><name pos:start="85:31" pos:end="85:33">pdu</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:38">tag</name></name></expr></argument>, <argument pos:start="85:41" pos:end="85:47"><expr pos:start="85:41" pos:end="85:47"><name pos:start="85:41" pos:end="85:47"><name pos:start="85:41" pos:end="85:43">pdu</name><operator pos:start="85:44" pos:end="85:45">-&gt;</operator><name pos:start="85:46" pos:end="85:47">id</name></name></expr></argument>,

                              <argument pos:start="87:31" pos:end="87:38"><expr pos:start="87:31" pos:end="87:38"><name pos:start="87:31" pos:end="87:38"><name pos:start="87:31" pos:end="87:33">qid</name><operator pos:start="87:34" pos:end="87:34">.</operator><name pos:start="87:35" pos:end="87:38">type</name></name></expr></argument>, <argument pos:start="87:41" pos:end="87:51"><expr pos:start="87:41" pos:end="87:51"><name pos:start="87:41" pos:end="87:51"><name pos:start="87:41" pos:end="87:43">qid</name><operator pos:start="87:44" pos:end="87:44">.</operator><name pos:start="87:45" pos:end="87:51">version</name></name></expr></argument>, <argument pos:start="87:54" pos:end="87:61"><expr pos:start="87:54" pos:end="87:61"><name pos:start="87:54" pos:end="87:61"><name pos:start="87:54" pos:end="87:56">qid</name><operator pos:start="87:57" pos:end="87:57">.</operator><name pos:start="87:58" pos:end="87:61">path</name></name></expr></argument>, <argument pos:start="87:64" pos:end="87:69"><expr pos:start="87:64" pos:end="87:69"><name pos:start="87:64" pos:end="87:69">iounit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="89:1" pos:end="89:4"><name pos:start="89:1" pos:end="89:3">out</name>:</label>

    <expr_stmt pos:start="91:5" pos:end="91:23"><expr pos:start="91:5" pos:end="91:22"><call pos:start="91:5" pos:end="91:22"><name pos:start="91:5" pos:end="91:11">put_fid</name><argument_list pos:start="91:12" pos:end="91:22">(<argument pos:start="91:13" pos:end="91:15"><expr pos:start="91:13" pos:end="91:15"><name pos:start="91:13" pos:end="91:15">pdu</name></expr></argument>, <argument pos:start="91:18" pos:end="91:21"><expr pos:start="91:18" pos:end="91:21"><name pos:start="91:18" pos:end="91:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="93:1" pos:end="93:10"><name pos:start="93:1" pos:end="93:9">out_nofid</name>:</label>

    <expr_stmt pos:start="95:5" pos:end="95:35"><expr pos:start="95:5" pos:end="95:34"><call pos:start="95:5" pos:end="95:34"><name pos:start="95:5" pos:end="95:16">complete_pdu</name><argument_list pos:start="95:17" pos:end="95:34">(<argument pos:start="95:18" pos:end="95:23"><expr pos:start="95:18" pos:end="95:23"><name pos:start="95:18" pos:end="95:23"><name pos:start="95:18" pos:end="95:20">pdu</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:23">s</name></name></expr></argument>, <argument pos:start="95:26" pos:end="95:28"><expr pos:start="95:26" pos:end="95:28"><name pos:start="95:26" pos:end="95:28">pdu</name></expr></argument>, <argument pos:start="95:31" pos:end="95:33"><expr pos:start="95:31" pos:end="95:33"><name pos:start="95:31" pos:end="95:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:28"><expr pos:start="97:5" pos:end="97:27"><call pos:start="97:5" pos:end="97:27"><name pos:start="97:5" pos:end="97:20">v9fs_string_free</name><argument_list pos:start="97:21" pos:end="97:27">(<argument pos:start="97:22" pos:end="97:26"><expr pos:start="97:22" pos:end="97:26"><operator pos:start="97:22" pos:end="97:22">&amp;</operator><name pos:start="97:23" pos:end="97:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
