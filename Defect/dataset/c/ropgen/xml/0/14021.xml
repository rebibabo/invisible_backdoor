<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14021.c" pos:tabs="8"><function pos:start="1:1" pos:end="297:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">id3v2_parse</name><parameter_list pos:start="1:24" pos:end="3:67">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:51"><decl pos:start="1:45" pos:end="1:51"><type pos:start="1:45" pos:end="1:51"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:51">len</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:68"><decl pos:start="1:54" pos:end="1:68"><type pos:start="1:54" pos:end="1:68"><name pos:start="1:54" pos:end="1:60">uint8_t</name></type> <name pos:start="1:62" pos:end="1:68">version</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:37"><decl pos:start="3:25" pos:end="3:37"><type pos:start="3:25" pos:end="3:37"><name pos:start="3:25" pos:end="3:31">uint8_t</name></type> <name pos:start="3:33" pos:end="3:37">flags</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:66"><decl pos:start="3:40" pos:end="3:66"><type pos:start="3:40" pos:end="3:66"><name pos:start="3:40" pos:end="3:53">ID3v2ExtraMeta</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier><modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:66">extra_meta</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="297:1">{<block_content pos:start="7:5" pos:end="295:11">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">isv34</name></decl>, <decl pos:start="7:16" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:19">tlen</name></decl>, <decl pos:start="7:22" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:27">unsync</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:15"><name pos:start="9:10" pos:end="9:12">tag</name><index pos:start="9:13" pos:end="9:15">[<expr pos:start="9:14" pos:end="9:14"><literal type="number" pos:start="9:14" pos:end="9:14">5</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:16">next</name></decl>, <decl pos:start="11:19" pos:end="11:46"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:19" pos:end="11:21">end</name> <init pos:start="11:23" pos:end="11:46">= <expr pos:start="11:25" pos:end="11:46"><call pos:start="11:25" pos:end="11:40"><name pos:start="11:25" pos:end="11:33">avio_tell</name><argument_list pos:start="11:34" pos:end="11:40">(<argument pos:start="11:35" pos:end="11:39"><expr pos:start="11:35" pos:end="11:39"><name pos:start="11:35" pos:end="11:39"><name pos:start="11:35" pos:end="11:35">s</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:39">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="11:42" pos:end="11:42">+</operator> <name pos:start="11:44" pos:end="11:46">len</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">taghdrlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:22">reason</name> <init pos:start="15:24" pos:end="15:29">= <expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:15">AVIOContext</name></type> <name pos:start="17:17" pos:end="17:18">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:15">AVIOContext</name> <modifier pos:start="19:17" pos:end="19:17">*</modifier></type><name pos:start="19:18" pos:end="19:20">pbx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:33"><decl pos:start="21:5" pos:end="21:32"><type pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:17">char</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:25">buffer</name> <init pos:start="21:27" pos:end="21:32">= <expr pos:start="21:29" pos:end="21:32"><name pos:start="21:29" pos:end="21:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:30"><decl pos:start="23:5" pos:end="23:29"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:19">buffer_size</name>       <init pos:start="23:27" pos:end="23:29">= <expr pos:start="23:29" pos:end="23:29"><literal type="number" pos:start="23:29" pos:end="23:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:34"><decl pos:start="25:5" pos:end="25:33"><type pos:start="25:5" pos:end="25:23"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:21">ID3v2EMFunc</name> <modifier pos:start="25:23" pos:end="25:23">*</modifier></type><name pos:start="25:24" pos:end="25:33">extra_func</name></decl>;</decl_stmt>



    <switch pos:start="29:5" pos:end="67:5">switch <condition pos:start="29:12" pos:end="29:20">(<expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:19">version</name></expr>)</condition> <block pos:start="29:22" pos:end="67:5">{<block_content pos:start="31:5" pos:end="65:19">

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">2</literal></expr>:</case>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:25">(<expr pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:17">flags</name> <operator pos:start="33:19" pos:end="33:19">&amp;</operator> <literal type="number" pos:start="33:21" pos:end="33:24">0x40</literal></expr>)</condition> <block pos:start="33:27" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:23">

            <expr_stmt pos:start="35:13" pos:end="35:35"><expr pos:start="35:13" pos:end="35:34"><name pos:start="35:13" pos:end="35:18">reason</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <literal type="string" pos:start="35:22" pos:end="35:34">"compression"</literal></expr>;</expr_stmt>

            <goto pos:start="37:13" pos:end="37:23">goto <name pos:start="37:18" pos:end="37:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:22"><expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:13">isv34</name>     <operator pos:start="41:19" pos:end="41:19">=</operator> <literal type="number" pos:start="41:21" pos:end="41:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:17">taghdrlen</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <literal type="number" pos:start="43:21" pos:end="43:21">6</literal></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>



    <case pos:start="49:5" pos:end="49:11">case <expr pos:start="49:10" pos:end="49:10"><literal type="number" pos:start="49:10" pos:end="49:10">3</literal></expr>:</case>

    <case pos:start="51:5" pos:end="51:11">case <expr pos:start="51:10" pos:end="51:10"><literal type="number" pos:start="51:10" pos:end="51:10">4</literal></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:13">isv34</name>     <operator pos:start="53:19" pos:end="53:19">=</operator> <literal type="number" pos:start="53:21" pos:end="53:21">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:17">taghdrlen</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <literal type="number" pos:start="55:21" pos:end="55:22">10</literal></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>



    <default pos:start="61:5" pos:end="61:12">default:</default>

        <expr_stmt pos:start="63:9" pos:end="63:27"><expr pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:14">reason</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <literal type="string" pos:start="63:18" pos:end="63:26">"version"</literal></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:19">goto <name pos:start="65:14" pos:end="65:18">error</name>;</goto>

    </block_content>}</block></switch>



    <expr_stmt pos:start="71:5" pos:end="71:26"><expr pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:10">unsync</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <name pos:start="71:14" pos:end="71:18">flags</name> <operator pos:start="71:20" pos:end="71:20">&amp;</operator> <literal type="number" pos:start="71:22" pos:end="71:25">0x80</literal></expr>;</expr_stmt>



    <if_stmt pos:start="75:5" pos:end="97:5"><if pos:start="75:5" pos:end="97:5">if <condition pos:start="75:8" pos:end="75:30">(<expr pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:13">isv34</name> <operator pos:start="75:15" pos:end="75:16">&amp;&amp;</operator> <name pos:start="75:18" pos:end="75:22">flags</name> <operator pos:start="75:24" pos:end="75:24">&amp;</operator> <literal type="number" pos:start="75:26" pos:end="75:29">0x40</literal></expr>)</condition> <block pos:start="75:32" pos:end="97:5">{<block_content pos:start="77:9" pos:end="95:33"> <comment type="block" pos:start="75:34" pos:end="75:81">/* Extended header present, just skip over it */</comment>

        <decl_stmt pos:start="77:9" pos:end="77:40"><decl pos:start="77:9" pos:end="77:39"><type pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:11">int</name></type> <name pos:start="77:13" pos:end="77:18">extlen</name> <init pos:start="77:20" pos:end="77:39">= <expr pos:start="77:22" pos:end="77:39"><call pos:start="77:22" pos:end="77:39"><name pos:start="77:22" pos:end="77:29">get_size</name><argument_list pos:start="77:30" pos:end="77:39">(<argument pos:start="77:31" pos:end="77:35"><expr pos:start="77:31" pos:end="77:35"><name pos:start="77:31" pos:end="77:35"><name pos:start="77:31" pos:end="77:31">s</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:35">pb</name></name></expr></argument>, <argument pos:start="77:38" pos:end="77:38"><expr pos:start="77:38" pos:end="77:38"><literal type="number" pos:start="77:38" pos:end="77:38">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="79:9" pos:end="83:24"><if pos:start="79:9" pos:end="83:24">if <condition pos:start="79:12" pos:end="79:25">(<expr pos:start="79:13" pos:end="79:24"><name pos:start="79:13" pos:end="79:19">version</name> <operator pos:start="79:21" pos:end="79:22">==</operator> <literal type="number" pos:start="79:24" pos:end="79:24">4</literal></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:24"><block_content pos:start="83:13" pos:end="83:24">

            <comment type="block" pos:start="81:13" pos:end="81:76">/* In v2.4 the length includes the length field we just read. */</comment>

            <expr_stmt pos:start="83:13" pos:end="83:24"><expr pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:18">extlen</name> <operator pos:start="83:20" pos:end="83:21">-=</operator> <literal type="number" pos:start="83:23" pos:end="83:23">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="87:9" pos:end="93:9"><if pos:start="87:9" pos:end="93:9">if <condition pos:start="87:12" pos:end="87:23">(<expr pos:start="87:13" pos:end="87:22"><name pos:start="87:13" pos:end="87:18">extlen</name> <operator pos:start="87:20" pos:end="87:20">&lt;</operator> <literal type="number" pos:start="87:22" pos:end="87:22">0</literal></expr>)</condition> <block pos:start="87:25" pos:end="93:9">{<block_content pos:start="89:13" pos:end="91:23">

            <expr_stmt pos:start="89:13" pos:end="89:54"><expr pos:start="89:13" pos:end="89:53"><name pos:start="89:13" pos:end="89:18">reason</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <literal type="string" pos:start="89:22" pos:end="89:53">"invalid extended header length"</literal></expr>;</expr_stmt>

            <goto pos:start="91:13" pos:end="91:23">goto <name pos:start="91:18" pos:end="91:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:33"><expr pos:start="95:9" pos:end="95:32"><call pos:start="95:9" pos:end="95:32"><name pos:start="95:9" pos:end="95:17">avio_skip</name><argument_list pos:start="95:18" pos:end="95:32">(<argument pos:start="95:19" pos:end="95:23"><expr pos:start="95:19" pos:end="95:23"><name pos:start="95:19" pos:end="95:23"><name pos:start="95:19" pos:end="95:19">s</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:23">pb</name></name></expr></argument>, <argument pos:start="95:26" pos:end="95:31"><expr pos:start="95:26" pos:end="95:31"><name pos:start="95:26" pos:end="95:31">extlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <while pos:start="101:5" pos:end="271:5">while <condition pos:start="101:11" pos:end="101:28">(<expr pos:start="101:12" pos:end="101:27"><name pos:start="101:12" pos:end="101:14">len</name> <operator pos:start="101:16" pos:end="101:17">&gt;=</operator> <name pos:start="101:19" pos:end="101:27">taghdrlen</name></expr>)</condition> <block pos:start="101:30" pos:end="271:5">{<block_content pos:start="103:9" pos:end="269:41">

        <decl_stmt pos:start="103:9" pos:end="103:32"><decl pos:start="103:9" pos:end="103:31"><type pos:start="103:9" pos:end="103:20"><name pos:start="103:9" pos:end="103:16">unsigned</name> <name pos:start="103:18" pos:end="103:20">int</name></type> <name pos:start="103:22" pos:end="103:27">tflags</name> <init pos:start="103:29" pos:end="103:31">= <expr pos:start="103:31" pos:end="103:31"><literal type="number" pos:start="103:31" pos:end="103:31">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="105:9" pos:end="105:32"><decl pos:start="105:9" pos:end="105:31"><type pos:start="105:9" pos:end="105:11"><name pos:start="105:9" pos:end="105:11">int</name></type> <name pos:start="105:13" pos:end="105:19">tunsync</name>         <init pos:start="105:29" pos:end="105:31">= <expr pos:start="105:31" pos:end="105:31"><literal type="number" pos:start="105:31" pos:end="105:31">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="109:9" pos:end="135:9"><if pos:start="109:9" pos:end="127:9">if <condition pos:start="109:12" pos:end="109:18">(<expr pos:start="109:13" pos:end="109:17"><name pos:start="109:13" pos:end="109:17">isv34</name></expr>)</condition> <block pos:start="109:20" pos:end="127:9">{<block_content pos:start="111:13" pos:end="125:50">

            <expr_stmt pos:start="111:13" pos:end="111:37"><expr pos:start="111:13" pos:end="111:36"><call pos:start="111:13" pos:end="111:36"><name pos:start="111:13" pos:end="111:21">avio_read</name><argument_list pos:start="111:22" pos:end="111:36">(<argument pos:start="111:23" pos:end="111:27"><expr pos:start="111:23" pos:end="111:27"><name pos:start="111:23" pos:end="111:27"><name pos:start="111:23" pos:end="111:23">s</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:27">pb</name></name></expr></argument>, <argument pos:start="111:30" pos:end="111:32"><expr pos:start="111:30" pos:end="111:32"><name pos:start="111:30" pos:end="111:32">tag</name></expr></argument>, <argument pos:start="111:35" pos:end="111:35"><expr pos:start="111:35" pos:end="111:35"><literal type="number" pos:start="111:35" pos:end="111:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:23"><expr pos:start="113:13" pos:end="113:22"><name pos:start="113:13" pos:end="113:18"><name pos:start="113:13" pos:end="113:15">tag</name><index pos:start="113:16" pos:end="113:18">[<expr pos:start="113:17" pos:end="113:17"><literal type="number" pos:start="113:17" pos:end="113:17">4</literal></expr>]</index></name> <operator pos:start="113:20" pos:end="113:20">=</operator> <literal type="number" pos:start="113:22" pos:end="113:22">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="121:42"><if pos:start="115:13" pos:end="119:13">if <condition pos:start="115:16" pos:end="115:29">(<expr pos:start="115:17" pos:end="115:28"><name pos:start="115:17" pos:end="115:23">version</name> <operator pos:start="115:25" pos:end="115:26">==</operator> <literal type="number" pos:start="115:28" pos:end="115:28">3</literal></expr>)</condition> <block pos:start="115:31" pos:end="119:13">{<block_content pos:start="117:17" pos:end="117:40">

                <expr_stmt pos:start="117:17" pos:end="117:40"><expr pos:start="117:17" pos:end="117:39"><name pos:start="117:17" pos:end="117:20">tlen</name> <operator pos:start="117:22" pos:end="117:22">=</operator> <call pos:start="117:24" pos:end="117:39"><name pos:start="117:24" pos:end="117:32">avio_rb32</name><argument_list pos:start="117:33" pos:end="117:39">(<argument pos:start="117:34" pos:end="117:38"><expr pos:start="117:34" pos:end="117:38"><name pos:start="117:34" pos:end="117:38"><name pos:start="117:34" pos:end="117:34">s</name><operator pos:start="117:35" pos:end="117:36">-&gt;</operator><name pos:start="117:37" pos:end="117:38">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="119:15" pos:end="121:42">else<block type="pseudo" pos:start="121:17" pos:end="121:42"><block_content pos:start="121:17" pos:end="121:42">

                <expr_stmt pos:start="121:17" pos:end="121:42"><expr pos:start="121:17" pos:end="121:41"><name pos:start="121:17" pos:end="121:20">tlen</name> <operator pos:start="121:22" pos:end="121:22">=</operator> <call pos:start="121:24" pos:end="121:41"><name pos:start="121:24" pos:end="121:31">get_size</name><argument_list pos:start="121:32" pos:end="121:41">(<argument pos:start="121:33" pos:end="121:37"><expr pos:start="121:33" pos:end="121:37"><name pos:start="121:33" pos:end="121:37"><name pos:start="121:33" pos:end="121:33">s</name><operator pos:start="121:34" pos:end="121:35">-&gt;</operator><name pos:start="121:36" pos:end="121:37">pb</name></name></expr></argument>, <argument pos:start="121:40" pos:end="121:40"><expr pos:start="121:40" pos:end="121:40"><literal type="number" pos:start="121:40" pos:end="121:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:39"><expr pos:start="123:13" pos:end="123:38"><name pos:start="123:13" pos:end="123:18">tflags</name>  <operator pos:start="123:21" pos:end="123:21">=</operator> <call pos:start="123:23" pos:end="123:38"><name pos:start="123:23" pos:end="123:31">avio_rb16</name><argument_list pos:start="123:32" pos:end="123:38">(<argument pos:start="123:33" pos:end="123:37"><expr pos:start="123:33" pos:end="123:37"><name pos:start="123:33" pos:end="123:37"><name pos:start="123:33" pos:end="123:33">s</name><operator pos:start="123:34" pos:end="123:35">-&gt;</operator><name pos:start="123:36" pos:end="123:37">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:50"><expr pos:start="125:13" pos:end="125:49"><name pos:start="125:13" pos:end="125:19">tunsync</name> <operator pos:start="125:21" pos:end="125:21">=</operator> <name pos:start="125:23" pos:end="125:28">tflags</name> <operator pos:start="125:30" pos:end="125:30">&amp;</operator> <name pos:start="125:32" pos:end="125:49">ID3v2_FLAG_UNSYNCH</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="127:11" pos:end="135:9">else <block pos:start="127:16" pos:end="135:9">{<block_content pos:start="129:13" pos:end="133:38">

            <expr_stmt pos:start="129:13" pos:end="129:37"><expr pos:start="129:13" pos:end="129:36"><call pos:start="129:13" pos:end="129:36"><name pos:start="129:13" pos:end="129:21">avio_read</name><argument_list pos:start="129:22" pos:end="129:36">(<argument pos:start="129:23" pos:end="129:27"><expr pos:start="129:23" pos:end="129:27"><name pos:start="129:23" pos:end="129:27"><name pos:start="129:23" pos:end="129:23">s</name><operator pos:start="129:24" pos:end="129:25">-&gt;</operator><name pos:start="129:26" pos:end="129:27">pb</name></name></expr></argument>, <argument pos:start="129:30" pos:end="129:32"><expr pos:start="129:30" pos:end="129:32"><name pos:start="129:30" pos:end="129:32">tag</name></expr></argument>, <argument pos:start="129:35" pos:end="129:35"><expr pos:start="129:35" pos:end="129:35"><literal type="number" pos:start="129:35" pos:end="129:35">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:23"><expr pos:start="131:13" pos:end="131:22"><name pos:start="131:13" pos:end="131:18"><name pos:start="131:13" pos:end="131:15">tag</name><index pos:start="131:16" pos:end="131:18">[<expr pos:start="131:17" pos:end="131:17"><literal type="number" pos:start="131:17" pos:end="131:17">3</literal></expr>]</index></name> <operator pos:start="131:20" pos:end="131:20">=</operator> <literal type="number" pos:start="131:22" pos:end="131:22">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:38"><expr pos:start="133:13" pos:end="133:37"><name pos:start="133:13" pos:end="133:16">tlen</name>   <operator pos:start="133:20" pos:end="133:20">=</operator> <call pos:start="133:22" pos:end="133:37"><name pos:start="133:22" pos:end="133:30">avio_rb24</name><argument_list pos:start="133:31" pos:end="133:37">(<argument pos:start="133:32" pos:end="133:36"><expr pos:start="133:32" pos:end="133:36"><name pos:start="133:32" pos:end="133:36"><name pos:start="133:32" pos:end="133:32">s</name><operator pos:start="133:33" pos:end="133:34">-&gt;</operator><name pos:start="133:35" pos:end="133:36">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="137:9" pos:end="147:9"><if pos:start="137:9" pos:end="147:9">if <condition pos:start="137:12" pos:end="137:47">(<expr pos:start="137:13" pos:end="137:46"><name pos:start="137:13" pos:end="137:30"><name pos:start="137:13" pos:end="137:16">tlen</name> <argument_list type="generic" pos:start="137:18" pos:end="137:30">&lt; <argument pos:start="137:20" pos:end="137:28"><expr pos:start="137:20" pos:end="137:28"><literal type="number" pos:start="137:20" pos:end="137:20">0</literal> <operator pos:start="137:22" pos:end="137:23">||</operator> <name pos:start="137:25" pos:end="137:28">tlen</name></expr></argument> &gt;</argument_list></name> <name pos:start="137:32" pos:end="137:34">len</name> <operator pos:start="137:36" pos:end="137:36">-</operator> <name pos:start="137:38" pos:end="137:46">taghdrlen</name></expr>)</condition> <block pos:start="137:49" pos:end="147:9">{<block_content pos:start="139:13" pos:end="145:18">

            <expr_stmt pos:start="139:13" pos:end="143:24"><expr pos:start="139:13" pos:end="143:23"><call pos:start="139:13" pos:end="143:23"><name pos:start="139:13" pos:end="139:18">av_log</name><argument_list pos:start="139:19" pos:end="143:23">(<argument pos:start="139:20" pos:end="139:20"><expr pos:start="139:20" pos:end="139:20"><name pos:start="139:20" pos:end="139:20">s</name></expr></argument>, <argument pos:start="139:23" pos:end="139:36"><expr pos:start="139:23" pos:end="139:36"><name pos:start="139:23" pos:end="139:36">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="141:20" pos:end="141:74"><expr pos:start="141:20" pos:end="141:74"><literal type="string" pos:start="141:20" pos:end="141:74">"Invalid size in frame %s, skipping the rest of tag.\n"</literal></expr></argument>,

                   <argument pos:start="143:20" pos:end="143:22"><expr pos:start="143:20" pos:end="143:22"><name pos:start="143:20" pos:end="143:22">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="145:13" pos:end="145:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:32"><expr pos:start="149:9" pos:end="149:31"><name pos:start="149:9" pos:end="149:11">len</name> <operator pos:start="149:13" pos:end="149:14">-=</operator> <name pos:start="149:16" pos:end="149:24">taghdrlen</name> <operator pos:start="149:26" pos:end="149:26">+</operator> <name pos:start="149:28" pos:end="149:31">tlen</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:39"><expr pos:start="151:9" pos:end="151:38"><name pos:start="151:9" pos:end="151:12">next</name> <operator pos:start="151:14" pos:end="151:14">=</operator> <call pos:start="151:16" pos:end="151:31"><name pos:start="151:16" pos:end="151:24">avio_tell</name><argument_list pos:start="151:25" pos:end="151:31">(<argument pos:start="151:26" pos:end="151:30"><expr pos:start="151:26" pos:end="151:30"><name pos:start="151:26" pos:end="151:30"><name pos:start="151:26" pos:end="151:26">s</name><operator pos:start="151:27" pos:end="151:28">-&gt;</operator><name pos:start="151:29" pos:end="151:30">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="151:33" pos:end="151:33">+</operator> <name pos:start="151:35" pos:end="151:38">tlen</name></expr>;</expr_stmt>



        <if_stmt pos:start="155:9" pos:end="165:9"><if pos:start="155:9" pos:end="165:9">if <condition pos:start="155:12" pos:end="155:18">(<expr pos:start="155:13" pos:end="155:17"><operator pos:start="155:13" pos:end="155:13">!</operator><name pos:start="155:14" pos:end="155:17">tlen</name></expr>)</condition> <block pos:start="155:20" pos:end="165:9">{<block_content pos:start="157:13" pos:end="163:21">

            <if_stmt pos:start="157:13" pos:end="161:28"><if pos:start="157:13" pos:end="161:28">if <condition pos:start="157:16" pos:end="157:23">(<expr pos:start="157:17" pos:end="157:22"><name pos:start="157:17" pos:end="157:22"><name pos:start="157:17" pos:end="157:19">tag</name><index pos:start="157:20" pos:end="157:22">[<expr pos:start="157:21" pos:end="157:21"><literal type="number" pos:start="157:21" pos:end="157:21">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="159:17" pos:end="161:28"><block_content pos:start="159:17" pos:end="161:28">

                <expr_stmt pos:start="159:17" pos:end="161:28"><expr pos:start="159:17" pos:end="161:27"><call pos:start="159:17" pos:end="161:27"><name pos:start="159:17" pos:end="159:22">av_log</name><argument_list pos:start="159:23" pos:end="161:27">(<argument pos:start="159:24" pos:end="159:24"><expr pos:start="159:24" pos:end="159:24"><name pos:start="159:24" pos:end="159:24">s</name></expr></argument>, <argument pos:start="159:27" pos:end="159:38"><expr pos:start="159:27" pos:end="159:38"><name pos:start="159:27" pos:end="159:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="159:41" pos:end="159:77"><expr pos:start="159:41" pos:end="159:77"><literal type="string" pos:start="159:41" pos:end="159:77">"Invalid empty frame %s, skipping.\n"</literal></expr></argument>,

                       <argument pos:start="161:24" pos:end="161:26"><expr pos:start="161:24" pos:end="161:26"><name pos:start="161:24" pos:end="161:26">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <continue pos:start="163:13" pos:end="163:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="169:9" pos:end="175:9"><if pos:start="169:9" pos:end="175:9">if <condition pos:start="169:12" pos:end="169:40">(<expr pos:start="169:13" pos:end="169:39"><name pos:start="169:13" pos:end="169:18">tflags</name> <operator pos:start="169:20" pos:end="169:20">&amp;</operator> <name pos:start="169:22" pos:end="169:39">ID3v2_FLAG_DATALEN</name></expr>)</condition> <block pos:start="169:42" pos:end="175:9">{<block_content pos:start="171:13" pos:end="173:22">

            <expr_stmt pos:start="171:13" pos:end="171:29"><expr pos:start="171:13" pos:end="171:28"><call pos:start="171:13" pos:end="171:28"><name pos:start="171:13" pos:end="171:21">avio_rb32</name><argument_list pos:start="171:22" pos:end="171:28">(<argument pos:start="171:23" pos:end="171:27"><expr pos:start="171:23" pos:end="171:27"><name pos:start="171:23" pos:end="171:27"><name pos:start="171:23" pos:end="171:23">s</name><operator pos:start="171:24" pos:end="171:25">-&gt;</operator><name pos:start="171:26" pos:end="171:27">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:22"><expr pos:start="173:13" pos:end="173:21"><name pos:start="173:13" pos:end="173:16">tlen</name> <operator pos:start="173:18" pos:end="173:19">-=</operator> <literal type="number" pos:start="173:21" pos:end="173:21">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="179:9" pos:end="263:9"><if pos:start="179:9" pos:end="189:9">if <condition pos:start="179:12" pos:end="179:70">(<expr pos:start="179:13" pos:end="179:69"><name pos:start="179:13" pos:end="179:18">tflags</name> <operator pos:start="179:20" pos:end="179:20">&amp;</operator> <operator pos:start="179:22" pos:end="179:22">(</operator><name pos:start="179:23" pos:end="179:43">ID3v2_FLAG_ENCRYPTION</name> <operator pos:start="179:45" pos:end="179:45">|</operator> <name pos:start="179:47" pos:end="179:68">ID3v2_FLAG_COMPRESSION</name><operator pos:start="179:69" pos:end="179:69">)</operator></expr>)</condition> <block pos:start="179:72" pos:end="189:9">{<block_content pos:start="181:13" pos:end="185:35">

            <expr_stmt pos:start="181:13" pos:end="183:75"><expr pos:start="181:13" pos:end="183:74"><call pos:start="181:13" pos:end="183:74"><name pos:start="181:13" pos:end="181:18">av_log</name><argument_list pos:start="181:19" pos:end="183:74">(<argument pos:start="181:20" pos:end="181:20"><expr pos:start="181:20" pos:end="181:20"><name pos:start="181:20" pos:end="181:20">s</name></expr></argument>, <argument pos:start="181:23" pos:end="181:36"><expr pos:start="181:23" pos:end="181:36"><name pos:start="181:23" pos:end="181:36">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="183:20" pos:end="183:68"><expr pos:start="183:20" pos:end="183:68"><literal type="string" pos:start="183:20" pos:end="183:68">"Skipping encrypted/compressed ID3v2 frame %s.\n"</literal></expr></argument>, <argument pos:start="183:71" pos:end="183:73"><expr pos:start="183:71" pos:end="183:73"><name pos:start="183:71" pos:end="183:73">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:35"><expr pos:start="185:13" pos:end="185:34"><call pos:start="185:13" pos:end="185:34"><name pos:start="185:13" pos:end="185:21">avio_skip</name><argument_list pos:start="185:22" pos:end="185:34">(<argument pos:start="185:23" pos:end="185:27"><expr pos:start="185:23" pos:end="185:27"><name pos:start="185:23" pos:end="185:27"><name pos:start="185:23" pos:end="185:23">s</name><operator pos:start="185:24" pos:end="185:25">-&gt;</operator><name pos:start="185:26" pos:end="185:27">pb</name></name></expr></argument>, <argument pos:start="185:30" pos:end="185:33"><expr pos:start="185:30" pos:end="185:33"><name pos:start="185:30" pos:end="185:33">tlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="187:9" pos:end="187:62">/* check for text tag or supported special meta tag */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="189:11" pos:end="253:9">else if <condition pos:start="189:19" pos:end="193:68">(<expr pos:start="189:20" pos:end="193:67"><name pos:start="189:20" pos:end="189:25"><name pos:start="189:20" pos:end="189:22">tag</name><index pos:start="189:23" pos:end="189:25">[<expr pos:start="189:24" pos:end="189:24"><literal type="number" pos:start="189:24" pos:end="189:24">0</literal></expr>]</index></name> <operator pos:start="189:27" pos:end="189:28">==</operator> <literal type="char" pos:start="189:30" pos:end="189:32">'T'</literal> <operator pos:start="189:34" pos:end="189:35">||</operator>

                   <operator pos:start="191:20" pos:end="191:20">(</operator><name pos:start="191:21" pos:end="191:30">extra_meta</name> <operator pos:start="191:32" pos:end="191:33">&amp;&amp;</operator>

                    <operator pos:start="193:21" pos:end="193:21">(</operator><name pos:start="193:22" pos:end="193:31">extra_func</name> <operator pos:start="193:33" pos:end="193:33">=</operator> <call pos:start="193:35" pos:end="193:65"><name pos:start="193:35" pos:end="193:53">get_extra_meta_func</name><argument_list pos:start="193:54" pos:end="193:65">(<argument pos:start="193:55" pos:end="193:57"><expr pos:start="193:55" pos:end="193:57"><name pos:start="193:55" pos:end="193:57">tag</name></expr></argument>, <argument pos:start="193:60" pos:end="193:64"><expr pos:start="193:60" pos:end="193:64"><name pos:start="193:60" pos:end="193:64">isv34</name></expr></argument>)</argument_list></call><operator pos:start="193:66" pos:end="193:66">)</operator><operator pos:start="193:67" pos:end="193:67">)</operator></expr>)</condition> <block pos:start="193:70" pos:end="253:9">{<block_content pos:start="195:13" pos:end="251:64">

            <if_stmt pos:start="195:13" pos:end="239:13"><if pos:start="195:13" pos:end="235:13">if <condition pos:start="195:16" pos:end="195:34">(<expr pos:start="195:17" pos:end="195:33"><name pos:start="195:17" pos:end="195:22">unsync</name> <operator pos:start="195:24" pos:end="195:25">||</operator> <name pos:start="195:27" pos:end="195:33">tunsync</name></expr>)</condition> <block pos:start="195:36" pos:end="235:13">{<block_content pos:start="197:17" pos:end="233:27">

                <decl_stmt pos:start="197:17" pos:end="197:54"><decl pos:start="197:17" pos:end="197:53"><type pos:start="197:17" pos:end="197:23"><name pos:start="197:17" pos:end="197:23">int64_t</name></type> <name pos:start="197:25" pos:end="197:27">end</name> <init pos:start="197:29" pos:end="197:53">= <expr pos:start="197:31" pos:end="197:53"><call pos:start="197:31" pos:end="197:46"><name pos:start="197:31" pos:end="197:39">avio_tell</name><argument_list pos:start="197:40" pos:end="197:46">(<argument pos:start="197:41" pos:end="197:45"><expr pos:start="197:41" pos:end="197:45"><name pos:start="197:41" pos:end="197:45"><name pos:start="197:41" pos:end="197:41">s</name><operator pos:start="197:42" pos:end="197:43">-&gt;</operator><name pos:start="197:44" pos:end="197:45">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="197:48" pos:end="197:48">+</operator> <name pos:start="197:50" pos:end="197:53">tlen</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="199:17" pos:end="199:27"><decl pos:start="199:17" pos:end="199:26"><type pos:start="199:17" pos:end="199:25"><name pos:start="199:17" pos:end="199:23">uint8_t</name> <modifier pos:start="199:25" pos:end="199:25">*</modifier></type><name pos:start="199:26" pos:end="199:26">b</name></decl>;</decl_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:60"><expr pos:start="201:17" pos:end="201:59"><call pos:start="201:17" pos:end="201:59"><name pos:start="201:17" pos:end="201:30">av_fast_malloc</name><argument_list pos:start="201:31" pos:end="201:59">(<argument pos:start="201:32" pos:end="201:38"><expr pos:start="201:32" pos:end="201:38"><operator pos:start="201:32" pos:end="201:32">&amp;</operator><name pos:start="201:33" pos:end="201:38">buffer</name></expr></argument>, <argument pos:start="201:41" pos:end="201:52"><expr pos:start="201:41" pos:end="201:52"><operator pos:start="201:41" pos:end="201:41">&amp;</operator><name pos:start="201:42" pos:end="201:52">buffer_size</name></expr></argument>, <argument pos:start="201:55" pos:end="201:58"><expr pos:start="201:55" pos:end="201:58"><name pos:start="201:55" pos:end="201:58">tlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="203:17" pos:end="209:17"><if pos:start="203:17" pos:end="209:17">if <condition pos:start="203:20" pos:end="203:28">(<expr pos:start="203:21" pos:end="203:27"><operator pos:start="203:21" pos:end="203:21">!</operator><name pos:start="203:22" pos:end="203:27">buffer</name></expr>)</condition> <block pos:start="203:30" pos:end="209:17">{<block_content pos:start="205:21" pos:end="207:30">

                    <expr_stmt pos:start="205:21" pos:end="205:80"><expr pos:start="205:21" pos:end="205:79"><call pos:start="205:21" pos:end="205:79"><name pos:start="205:21" pos:end="205:26">av_log</name><argument_list pos:start="205:27" pos:end="205:79">(<argument pos:start="205:28" pos:end="205:28"><expr pos:start="205:28" pos:end="205:28"><name pos:start="205:28" pos:end="205:28">s</name></expr></argument>, <argument pos:start="205:31" pos:end="205:42"><expr pos:start="205:31" pos:end="205:42"><name pos:start="205:31" pos:end="205:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="205:45" pos:end="205:72"><expr pos:start="205:45" pos:end="205:72"><literal type="string" pos:start="205:45" pos:end="205:72">"Failed to alloc %d bytes\n"</literal></expr></argument>, <argument pos:start="205:75" pos:end="205:78"><expr pos:start="205:75" pos:end="205:78"><name pos:start="205:75" pos:end="205:78">tlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="207:21" pos:end="207:30">goto <name pos:start="207:26" pos:end="207:29">seek</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:27"><expr pos:start="211:17" pos:end="211:26"><name pos:start="211:17" pos:end="211:17">b</name> <operator pos:start="211:19" pos:end="211:19">=</operator> <name pos:start="211:21" pos:end="211:26">buffer</name></expr>;</expr_stmt>

                <while pos:start="213:17" pos:end="225:17">while <condition pos:start="213:23" pos:end="213:46">(<expr pos:start="213:24" pos:end="213:45"><call pos:start="213:24" pos:end="213:39"><name pos:start="213:24" pos:end="213:32">avio_tell</name><argument_list pos:start="213:33" pos:end="213:39">(<argument pos:start="213:34" pos:end="213:38"><expr pos:start="213:34" pos:end="213:38"><name pos:start="213:34" pos:end="213:38"><name pos:start="213:34" pos:end="213:34">s</name><operator pos:start="213:35" pos:end="213:36">-&gt;</operator><name pos:start="213:37" pos:end="213:38">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="213:41" pos:end="213:41">&lt;</operator> <name pos:start="213:43" pos:end="213:45">end</name></expr>)</condition> <block pos:start="213:48" pos:end="225:17">{<block_content pos:start="215:21" pos:end="223:21">

                    <expr_stmt pos:start="215:21" pos:end="215:42"><expr pos:start="215:21" pos:end="215:41"><operator pos:start="215:21" pos:end="215:21">*</operator><name pos:start="215:22" pos:end="215:22">b</name><operator pos:start="215:23" pos:end="215:24">++</operator> <operator pos:start="215:26" pos:end="215:26">=</operator> <call pos:start="215:28" pos:end="215:41"><name pos:start="215:28" pos:end="215:34">avio_r8</name><argument_list pos:start="215:35" pos:end="215:41">(<argument pos:start="215:36" pos:end="215:40"><expr pos:start="215:36" pos:end="215:40"><name pos:start="215:36" pos:end="215:40"><name pos:start="215:36" pos:end="215:36">s</name><operator pos:start="215:37" pos:end="215:38">-&gt;</operator><name pos:start="215:39" pos:end="215:40">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="217:21" pos:end="223:21"><if pos:start="217:21" pos:end="223:21">if <condition pos:start="217:24" pos:end="217:71">(<expr pos:start="217:25" pos:end="217:70"><operator pos:start="217:25" pos:end="217:25">*</operator><operator pos:start="217:26" pos:end="217:26">(</operator><name pos:start="217:27" pos:end="217:27">b</name> <operator pos:start="217:29" pos:end="217:29">-</operator> <literal type="number" pos:start="217:31" pos:end="217:31">1</literal><operator pos:start="217:32" pos:end="217:32">)</operator> <operator pos:start="217:34" pos:end="217:35">==</operator> <literal type="number" pos:start="217:37" pos:end="217:40">0xff</literal> <operator pos:start="217:42" pos:end="217:43">&amp;&amp;</operator> <call pos:start="217:45" pos:end="217:60"><name pos:start="217:45" pos:end="217:53">avio_tell</name><argument_list pos:start="217:54" pos:end="217:60">(<argument pos:start="217:55" pos:end="217:59"><expr pos:start="217:55" pos:end="217:59"><name pos:start="217:55" pos:end="217:59"><name pos:start="217:55" pos:end="217:55">s</name><operator pos:start="217:56" pos:end="217:57">-&gt;</operator><name pos:start="217:58" pos:end="217:59">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="217:62" pos:end="217:62">&lt;</operator> <name pos:start="217:64" pos:end="217:66">end</name> <operator pos:start="217:68" pos:end="217:68">-</operator> <literal type="number" pos:start="217:70" pos:end="217:70">1</literal></expr>)</condition> <block pos:start="217:73" pos:end="223:21">{<block_content pos:start="219:25" pos:end="221:58">

                        <decl_stmt pos:start="219:25" pos:end="219:53"><decl pos:start="219:25" pos:end="219:52"><type pos:start="219:25" pos:end="219:31"><name pos:start="219:25" pos:end="219:31">uint8_t</name></type> <name pos:start="219:33" pos:end="219:35">val</name> <init pos:start="219:37" pos:end="219:52">= <expr pos:start="219:39" pos:end="219:52"><call pos:start="219:39" pos:end="219:52"><name pos:start="219:39" pos:end="219:45">avio_r8</name><argument_list pos:start="219:46" pos:end="219:52">(<argument pos:start="219:47" pos:end="219:51"><expr pos:start="219:47" pos:end="219:51"><name pos:start="219:47" pos:end="219:51"><name pos:start="219:47" pos:end="219:47">s</name><operator pos:start="219:48" pos:end="219:49">-&gt;</operator><name pos:start="219:50" pos:end="219:51">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="221:25" pos:end="221:58"><expr pos:start="221:25" pos:end="221:57"><operator pos:start="221:25" pos:end="221:25">*</operator><name pos:start="221:26" pos:end="221:26">b</name><operator pos:start="221:27" pos:end="221:28">++</operator> <operator pos:start="221:30" pos:end="221:30">=</operator> <ternary pos:start="221:32" pos:end="221:57"><condition pos:start="221:32" pos:end="221:36"><expr pos:start="221:32" pos:end="221:34"><name pos:start="221:32" pos:end="221:34">val</name></expr> ?</condition><then pos:start="221:38" pos:end="221:40"> <expr pos:start="221:38" pos:end="221:40"><name pos:start="221:38" pos:end="221:40">val</name></expr> </then><else pos:start="221:42" pos:end="221:57">: <expr pos:start="221:44" pos:end="221:57"><call pos:start="221:44" pos:end="221:57"><name pos:start="221:44" pos:end="221:50">avio_r8</name><argument_list pos:start="221:51" pos:end="221:57">(<argument pos:start="221:52" pos:end="221:56"><expr pos:start="221:52" pos:end="221:56"><name pos:start="221:52" pos:end="221:56"><name pos:start="221:52" pos:end="221:52">s</name><operator pos:start="221:53" pos:end="221:54">-&gt;</operator><name pos:start="221:55" pos:end="221:56">pb</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></while>

                <expr_stmt pos:start="227:17" pos:end="229:40"><expr pos:start="227:17" pos:end="229:39"><call pos:start="227:17" pos:end="229:39"><name pos:start="227:17" pos:end="227:33">ffio_init_context</name><argument_list pos:start="227:34" pos:end="229:39">(<argument pos:start="227:35" pos:end="227:37"><expr pos:start="227:35" pos:end="227:37"><operator pos:start="227:35" pos:end="227:35">&amp;</operator><name pos:start="227:36" pos:end="227:37">pb</name></expr></argument>, <argument pos:start="227:40" pos:end="227:45"><expr pos:start="227:40" pos:end="227:45"><name pos:start="227:40" pos:end="227:45">buffer</name></expr></argument>, <argument pos:start="227:48" pos:end="227:57"><expr pos:start="227:48" pos:end="227:57"><name pos:start="227:48" pos:end="227:48">b</name> <operator pos:start="227:50" pos:end="227:50">-</operator> <name pos:start="227:52" pos:end="227:57">buffer</name></expr></argument>, <argument pos:start="227:60" pos:end="227:60"><expr pos:start="227:60" pos:end="227:60"><literal type="number" pos:start="227:60" pos:end="227:60">0</literal></expr></argument>, <argument pos:start="227:63" pos:end="227:66"><expr pos:start="227:63" pos:end="227:66"><name pos:start="227:63" pos:end="227:66">NULL</name></expr></argument>, <argument pos:start="227:69" pos:end="227:72"><expr pos:start="227:69" pos:end="227:72"><name pos:start="227:69" pos:end="227:72">NULL</name></expr></argument>, <argument pos:start="227:75" pos:end="227:78"><expr pos:start="227:75" pos:end="227:78"><name pos:start="227:75" pos:end="227:78">NULL</name></expr></argument>,

                                  <argument pos:start="229:35" pos:end="229:38"><expr pos:start="229:35" pos:end="229:38"><name pos:start="229:35" pos:end="229:38">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:34"><expr pos:start="231:17" pos:end="231:33"><name pos:start="231:17" pos:end="231:20">tlen</name> <operator pos:start="231:22" pos:end="231:22">=</operator> <name pos:start="231:24" pos:end="231:24">b</name> <operator pos:start="231:26" pos:end="231:26">-</operator> <name pos:start="231:28" pos:end="231:33">buffer</name></expr>;</expr_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:27"><expr pos:start="233:17" pos:end="233:26"><name pos:start="233:17" pos:end="233:19">pbx</name>  <operator pos:start="233:22" pos:end="233:22">=</operator> <operator pos:start="233:24" pos:end="233:24">&amp;</operator><name pos:start="233:25" pos:end="233:26">pb</name></expr>;</expr_stmt> <comment type="line" pos:start="233:29" pos:end="233:52">// read from sync buffer</comment>

            </block_content>}</block></if> <else pos:start="235:15" pos:end="239:13">else <block pos:start="235:20" pos:end="239:13">{<block_content pos:start="237:17" pos:end="237:28">

                <expr_stmt pos:start="237:17" pos:end="237:28"><expr pos:start="237:17" pos:end="237:27"><name pos:start="237:17" pos:end="237:19">pbx</name> <operator pos:start="237:21" pos:end="237:21">=</operator> <name pos:start="237:23" pos:end="237:27"><name pos:start="237:23" pos:end="237:23">s</name><operator pos:start="237:24" pos:end="237:25">-&gt;</operator><name pos:start="237:26" pos:end="237:27">pb</name></name></expr>;</expr_stmt> <comment type="line" pos:start="237:30" pos:end="237:56">// read straight from input</comment>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="241:13" pos:end="251:64"><if pos:start="241:13" pos:end="245:45">if <condition pos:start="241:16" pos:end="241:30">(<expr pos:start="241:17" pos:end="241:29"><name pos:start="241:17" pos:end="241:22"><name pos:start="241:17" pos:end="241:19">tag</name><index pos:start="241:20" pos:end="241:22">[<expr pos:start="241:21" pos:end="241:21"><literal type="number" pos:start="241:21" pos:end="241:21">0</literal></expr>]</index></name> <operator pos:start="241:24" pos:end="241:25">==</operator> <literal type="char" pos:start="241:27" pos:end="241:29">'T'</literal></expr>)</condition><block type="pseudo" pos:start="245:17" pos:end="245:45"><block_content pos:start="245:17" pos:end="245:45">

                <comment type="block" pos:start="243:17" pos:end="243:36">/* parse text tag */</comment>

                <expr_stmt pos:start="245:17" pos:end="245:45"><expr pos:start="245:17" pos:end="245:44"><call pos:start="245:17" pos:end="245:44"><name pos:start="245:17" pos:end="245:25">read_ttag</name><argument_list pos:start="245:26" pos:end="245:44">(<argument pos:start="245:27" pos:end="245:27"><expr pos:start="245:27" pos:end="245:27"><name pos:start="245:27" pos:end="245:27">s</name></expr></argument>, <argument pos:start="245:30" pos:end="245:32"><expr pos:start="245:30" pos:end="245:32"><name pos:start="245:30" pos:end="245:32">pbx</name></expr></argument>, <argument pos:start="245:35" pos:end="245:38"><expr pos:start="245:35" pos:end="245:38"><name pos:start="245:35" pos:end="245:38">tlen</name></expr></argument>, <argument pos:start="245:41" pos:end="245:43"><expr pos:start="245:41" pos:end="245:43"><name pos:start="245:41" pos:end="245:43">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="247:13" pos:end="251:64">else<block type="pseudo" pos:start="251:17" pos:end="251:64"><block_content pos:start="251:17" pos:end="251:64">

                <comment type="block" pos:start="249:17" pos:end="249:44">/* parse special meta tag */</comment>

                <expr_stmt pos:start="251:17" pos:end="251:64"><expr pos:start="251:17" pos:end="251:63"><call pos:start="251:17" pos:end="251:63"><name pos:start="251:17" pos:end="251:32"><name pos:start="251:17" pos:end="251:26">extra_func</name><operator pos:start="251:27" pos:end="251:28">-&gt;</operator><name pos:start="251:29" pos:end="251:32">read</name></name><argument_list pos:start="251:33" pos:end="251:63">(<argument pos:start="251:34" pos:end="251:34"><expr pos:start="251:34" pos:end="251:34"><name pos:start="251:34" pos:end="251:34">s</name></expr></argument>, <argument pos:start="251:37" pos:end="251:39"><expr pos:start="251:37" pos:end="251:39"><name pos:start="251:37" pos:end="251:39">pbx</name></expr></argument>, <argument pos:start="251:42" pos:end="251:45"><expr pos:start="251:42" pos:end="251:45"><name pos:start="251:42" pos:end="251:45">tlen</name></expr></argument>, <argument pos:start="251:48" pos:end="251:50"><expr pos:start="251:48" pos:end="251:50"><name pos:start="251:48" pos:end="251:50">tag</name></expr></argument>, <argument pos:start="251:53" pos:end="251:62"><expr pos:start="251:53" pos:end="251:62"><name pos:start="251:53" pos:end="251:62">extra_meta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="253:11" pos:end="263:9">else if <condition pos:start="253:19" pos:end="253:27">(<expr pos:start="253:20" pos:end="253:26"><operator pos:start="253:20" pos:end="253:20">!</operator><name pos:start="253:21" pos:end="253:26"><name pos:start="253:21" pos:end="253:23">tag</name><index pos:start="253:24" pos:end="253:26">[<expr pos:start="253:25" pos:end="253:25"><literal type="number" pos:start="253:25" pos:end="253:25">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="253:29" pos:end="263:9">{<block_content pos:start="255:13" pos:end="261:18">

            <if_stmt pos:start="255:13" pos:end="257:80"><if pos:start="255:13" pos:end="257:80">if <condition pos:start="255:16" pos:end="255:23">(<expr pos:start="255:17" pos:end="255:22"><name pos:start="255:17" pos:end="255:22"><name pos:start="255:17" pos:end="255:19">tag</name><index pos:start="255:20" pos:end="255:22">[<expr pos:start="255:21" pos:end="255:21"><literal type="number" pos:start="255:21" pos:end="255:21">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="257:17" pos:end="257:80"><block_content pos:start="257:17" pos:end="257:80">

                <expr_stmt pos:start="257:17" pos:end="257:80"><expr pos:start="257:17" pos:end="257:79"><call pos:start="257:17" pos:end="257:79"><name pos:start="257:17" pos:end="257:22">av_log</name><argument_list pos:start="257:23" pos:end="257:79">(<argument pos:start="257:24" pos:end="257:24"><expr pos:start="257:24" pos:end="257:24"><name pos:start="257:24" pos:end="257:24">s</name></expr></argument>, <argument pos:start="257:27" pos:end="257:40"><expr pos:start="257:27" pos:end="257:40"><name pos:start="257:27" pos:end="257:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="257:43" pos:end="257:78"><expr pos:start="257:43" pos:end="257:78"><literal type="string" pos:start="257:43" pos:end="257:78">"invalid frame id, assuming padding"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="259:13" pos:end="259:35"><expr pos:start="259:13" pos:end="259:34"><call pos:start="259:13" pos:end="259:34"><name pos:start="259:13" pos:end="259:21">avio_skip</name><argument_list pos:start="259:22" pos:end="259:34">(<argument pos:start="259:23" pos:end="259:27"><expr pos:start="259:23" pos:end="259:27"><name pos:start="259:23" pos:end="259:27"><name pos:start="259:23" pos:end="259:23">s</name><operator pos:start="259:24" pos:end="259:25">-&gt;</operator><name pos:start="259:26" pos:end="259:27">pb</name></name></expr></argument>, <argument pos:start="259:30" pos:end="259:33"><expr pos:start="259:30" pos:end="259:33"><name pos:start="259:30" pos:end="259:33">tlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="261:13" pos:end="261:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="265:9" pos:end="265:32">/* Skip to end of tag */</comment>

<label pos:start="267:1" pos:end="267:5"><name pos:start="267:1" pos:end="267:4">seek</name>:</label>

        <expr_stmt pos:start="269:9" pos:end="269:41"><expr pos:start="269:9" pos:end="269:40"><call pos:start="269:9" pos:end="269:40"><name pos:start="269:9" pos:end="269:17">avio_seek</name><argument_list pos:start="269:18" pos:end="269:40">(<argument pos:start="269:19" pos:end="269:23"><expr pos:start="269:19" pos:end="269:23"><name pos:start="269:19" pos:end="269:23"><name pos:start="269:19" pos:end="269:19">s</name><operator pos:start="269:20" pos:end="269:21">-&gt;</operator><name pos:start="269:22" pos:end="269:23">pb</name></name></expr></argument>, <argument pos:start="269:26" pos:end="269:29"><expr pos:start="269:26" pos:end="269:29"><name pos:start="269:26" pos:end="269:29">next</name></expr></argument>, <argument pos:start="269:32" pos:end="269:39"><expr pos:start="269:32" pos:end="269:39"><name pos:start="269:32" pos:end="269:39">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="275:5" pos:end="275:54">/* Footer preset, always 10 bytes, skip over it */</comment>

    <if_stmt pos:start="277:5" pos:end="279:18"><if pos:start="277:5" pos:end="279:18">if <condition pos:start="277:8" pos:end="277:37">(<expr pos:start="277:9" pos:end="277:36"><name pos:start="277:9" pos:end="277:15">version</name> <operator pos:start="277:17" pos:end="277:18">==</operator> <literal type="number" pos:start="277:20" pos:end="277:20">4</literal> <operator pos:start="277:22" pos:end="277:23">&amp;&amp;</operator> <name pos:start="277:25" pos:end="277:29">flags</name> <operator pos:start="277:31" pos:end="277:31">&amp;</operator> <literal type="number" pos:start="277:33" pos:end="277:36">0x10</literal></expr>)</condition><block type="pseudo" pos:start="279:9" pos:end="279:18"><block_content pos:start="279:9" pos:end="279:18">

        <expr_stmt pos:start="279:9" pos:end="279:18"><expr pos:start="279:9" pos:end="279:17"><name pos:start="279:9" pos:end="279:11">end</name> <operator pos:start="279:13" pos:end="279:14">+=</operator> <literal type="number" pos:start="279:16" pos:end="279:17">10</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



<label pos:start="283:1" pos:end="283:6"><name pos:start="283:1" pos:end="283:5">error</name>:</label>

    <if_stmt pos:start="285:5" pos:end="289:32"><if pos:start="285:5" pos:end="289:32">if <condition pos:start="285:8" pos:end="285:15">(<expr pos:start="285:9" pos:end="285:14"><name pos:start="285:9" pos:end="285:14">reason</name></expr>)</condition><block type="pseudo" pos:start="287:9" pos:end="289:32"><block_content pos:start="287:9" pos:end="289:32">

        <expr_stmt pos:start="287:9" pos:end="289:32"><expr pos:start="287:9" pos:end="289:31"><call pos:start="287:9" pos:end="289:31"><name pos:start="287:9" pos:end="287:14">av_log</name><argument_list pos:start="287:15" pos:end="289:31">(<argument pos:start="287:16" pos:end="287:16"><expr pos:start="287:16" pos:end="287:16"><name pos:start="287:16" pos:end="287:16">s</name></expr></argument>, <argument pos:start="287:19" pos:end="287:29"><expr pos:start="287:19" pos:end="287:29"><name pos:start="287:19" pos:end="287:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="287:32" pos:end="287:73"><expr pos:start="287:32" pos:end="287:73"><literal type="string" pos:start="287:32" pos:end="287:73">"ID3v2.%d tag skipped, cannot handle %s\n"</literal></expr></argument>,

               <argument pos:start="289:16" pos:end="289:22"><expr pos:start="289:16" pos:end="289:22"><name pos:start="289:16" pos:end="289:22">version</name></expr></argument>, <argument pos:start="289:25" pos:end="289:30"><expr pos:start="289:25" pos:end="289:30"><name pos:start="289:25" pos:end="289:30">reason</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="291:5" pos:end="291:36"><expr pos:start="291:5" pos:end="291:35"><call pos:start="291:5" pos:end="291:35"><name pos:start="291:5" pos:end="291:13">avio_seek</name><argument_list pos:start="291:14" pos:end="291:35">(<argument pos:start="291:15" pos:end="291:19"><expr pos:start="291:15" pos:end="291:19"><name pos:start="291:15" pos:end="291:19"><name pos:start="291:15" pos:end="291:15">s</name><operator pos:start="291:16" pos:end="291:17">-&gt;</operator><name pos:start="291:18" pos:end="291:19">pb</name></name></expr></argument>, <argument pos:start="291:22" pos:end="291:24"><expr pos:start="291:22" pos:end="291:24"><name pos:start="291:22" pos:end="291:24">end</name></expr></argument>, <argument pos:start="291:27" pos:end="291:34"><expr pos:start="291:27" pos:end="291:34"><name pos:start="291:27" pos:end="291:34">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="293:20"><expr pos:start="293:5" pos:end="293:19"><call pos:start="293:5" pos:end="293:19"><name pos:start="293:5" pos:end="293:11">av_free</name><argument_list pos:start="293:12" pos:end="293:19">(<argument pos:start="293:13" pos:end="293:18"><expr pos:start="293:13" pos:end="293:18"><name pos:start="293:13" pos:end="293:18">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="295:5" pos:end="295:11">return;</return>

</block_content>}</block></function>
</unit>
