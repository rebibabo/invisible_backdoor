<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23038.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">idct_add_altivec</name><parameter_list pos:start="1:22" pos:end="1:69">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:29">uint8_t</name><modifier pos:start="1:30" pos:end="1:30">*</modifier></type> <name pos:start="1:32" pos:end="1:35">dest</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:47"><decl pos:start="1:38" pos:end="1:47"><type pos:start="1:38" pos:end="1:47"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:47">stride</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:68"><decl pos:start="1:50" pos:end="1:68"><type pos:start="1:50" pos:end="1:68"><name pos:start="1:50" pos:end="1:61">vector_s16_t</name><modifier pos:start="1:62" pos:end="1:62">*</modifier></type> <name pos:start="1:64" pos:end="1:68">block</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:1" pos:end="90:0">

<expr_stmt pos:start="5:1" pos:end="8:0"><expr pos:start="5:1" pos:end="5:44"><call pos:start="5:1" pos:end="5:44"><name pos:start="5:1" pos:end="5:19">POWERPC_TBL_DECLARE</name><argument_list pos:start="5:20" pos:end="5:44">(<argument pos:start="5:21" pos:end="5:40"><expr pos:start="5:21" pos:end="5:40"><name pos:start="5:21" pos:end="5:40">altivec_idct_add_num</name></expr></argument>, <argument pos:start="5:43" pos:end="5:43"><expr pos:start="5:43" pos:end="5:43"><literal type="number" pos:start="5:43" pos:end="5:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="7:1" pos:end="7:35">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:35">ALTIVEC_USE_REFERENCE_C_CODE</name></cpp:ifdef>

<expr_stmt pos:start="9:1" pos:end="9:49"><expr pos:start="9:1" pos:end="9:48"><call pos:start="9:1" pos:end="9:48"><name pos:start="9:1" pos:end="9:23">POWERPC_TBL_START_COUNT</name><argument_list pos:start="9:24" pos:end="9:48">(<argument pos:start="9:25" pos:end="9:44"><expr pos:start="9:25" pos:end="9:44"><name pos:start="9:25" pos:end="9:44">altivec_idct_add_num</name></expr></argument>, <argument pos:start="9:47" pos:end="9:47"><expr pos:start="9:47" pos:end="9:47"><literal type="number" pos:start="9:47" pos:end="9:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:71"><decl pos:start="11:5" pos:end="11:70"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">void</name></type> <name pos:start="11:10" pos:end="11:24">simple_idct_add</name><argument_list pos:start="11:25" pos:end="11:70">(<argument pos:start="11:26" pos:end="11:38"><expr pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:32">uint8_t</name> <operator pos:start="11:34" pos:end="11:34">*</operator><name pos:start="11:35" pos:end="11:38">dest</name></expr></argument>, <argument pos:start="11:41" pos:end="11:53"><expr pos:start="11:41" pos:end="11:53"><name pos:start="11:41" pos:end="11:43">int</name> <name pos:start="11:45" pos:end="11:53">line_size</name></expr></argument>, <argument pos:start="11:56" pos:end="11:69"><expr pos:start="11:56" pos:end="11:69"><name pos:start="11:56" pos:end="11:62">int16_t</name> <operator pos:start="11:64" pos:end="11:64">*</operator><name pos:start="11:65" pos:end="11:69">block</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:51"><expr pos:start="13:5" pos:end="13:50"><call pos:start="13:5" pos:end="13:50"><name pos:start="13:5" pos:end="13:19">simple_idct_add</name><argument_list pos:start="13:20" pos:end="13:50">(<argument pos:start="13:21" pos:end="13:24"><expr pos:start="13:21" pos:end="13:24"><name pos:start="13:21" pos:end="13:24">dest</name></expr></argument>, <argument pos:start="13:27" pos:end="13:32"><expr pos:start="13:27" pos:end="13:32"><name pos:start="13:27" pos:end="13:32">stride</name></expr></argument>, <argument pos:start="13:35" pos:end="13:49"><expr pos:start="13:35" pos:end="13:49"><operator pos:start="13:35" pos:end="13:35">(</operator><name pos:start="13:36" pos:end="13:42">int16_t</name><operator pos:start="13:43" pos:end="13:43">*</operator><operator pos:start="13:44" pos:end="13:44">)</operator><name pos:start="13:45" pos:end="13:49">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt pos:start="15:1" pos:end="18:0"><expr pos:start="15:1" pos:end="15:47"><call pos:start="15:1" pos:end="15:47"><name pos:start="15:1" pos:end="15:22">POWERPC_TBL_STOP_COUNT</name><argument_list pos:start="15:23" pos:end="15:47">(<argument pos:start="15:24" pos:end="15:43"><expr pos:start="15:24" pos:end="15:43"><name pos:start="15:24" pos:end="15:43">altivec_idct_add_num</name></expr></argument>, <argument pos:start="15:46" pos:end="15:46"><expr pos:start="15:46" pos:end="15:46"><literal type="number" pos:start="15:46" pos:end="15:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="17:1" pos:end="17:5">#<cpp:directive pos:start="17:2" pos:end="17:5">else</cpp:directive></cpp:else> <comment type="block" pos:start="17:7" pos:end="17:40">/* ALTIVEC_USE_REFERENCE_C_CODE */</comment>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:15">vector_u8_t</name></type> <name pos:start="19:17" pos:end="19:19">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:28"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:16">vector_s16_t</name></type> <name pos:start="21:18" pos:end="21:21">tmp2</name></decl>, <decl pos:start="21:24" pos:end="21:27"><type ref="prev" pos:start="21:5" pos:end="21:16"/><name pos:start="21:24" pos:end="21:27">tmp3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:22"><decl pos:start="23:5" pos:end="23:21"><type pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:15">vector_u8_t</name></type> <name pos:start="23:17" pos:end="23:21">perm0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:22"><decl pos:start="25:5" pos:end="25:21"><type pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:15">vector_u8_t</name></type> <name pos:start="25:17" pos:end="25:21">perm1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:26"><decl pos:start="27:5" pos:end="27:18"><type pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:15">vector_u8_t</name></type> <name pos:start="27:17" pos:end="27:18">p0</name></decl>, <decl pos:start="27:21" pos:end="27:22"><type ref="prev" pos:start="27:5" pos:end="27:15"/><name pos:start="27:21" pos:end="27:22">p1</name></decl>, <decl pos:start="27:25" pos:end="27:25"><type ref="prev" pos:start="27:5" pos:end="27:15"/><name pos:start="27:25" pos:end="27:25">p</name></decl>;</decl_stmt>



<expr_stmt pos:start="31:1" pos:end="31:49"><expr pos:start="31:1" pos:end="31:48"><call pos:start="31:1" pos:end="31:48"><name pos:start="31:1" pos:end="31:23">POWERPC_TBL_START_COUNT</name><argument_list pos:start="31:24" pos:end="31:48">(<argument pos:start="31:25" pos:end="31:44"><expr pos:start="31:25" pos:end="31:44"><name pos:start="31:25" pos:end="31:44">altivec_idct_add_num</name></expr></argument>, <argument pos:start="31:47" pos:end="31:47"><expr pos:start="31:47" pos:end="31:47"><literal type="number" pos:start="31:47" pos:end="31:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <decl_stmt pos:start="35:5" pos:end="39:28"><decl pos:start="35:5" pos:end="39:27"><type pos:start="35:5" pos:end="35:8"><name pos:start="35:5" pos:end="35:8">IDCT</name></type>



    <name pos:start="39:5" pos:end="39:6">p0</name> <init pos:start="39:8" pos:end="39:27">= <expr pos:start="39:10" pos:end="39:27"><call pos:start="39:10" pos:end="39:27"><name pos:start="39:10" pos:end="39:17">vec_lvsl</name> <argument_list pos:start="39:19" pos:end="39:27">(<argument pos:start="39:20" pos:end="39:20"><expr pos:start="39:20" pos:end="39:20"><literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr></argument>, <argument pos:start="39:23" pos:end="39:26"><expr pos:start="39:23" pos:end="39:26"><name pos:start="39:23" pos:end="39:26">dest</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:6">p1</name> <operator pos:start="41:8" pos:end="41:8">=</operator> <call pos:start="41:10" pos:end="41:32"><name pos:start="41:10" pos:end="41:17">vec_lvsl</name> <argument_list pos:start="41:19" pos:end="41:32">(<argument pos:start="41:20" pos:end="41:25"><expr pos:start="41:20" pos:end="41:25"><name pos:start="41:20" pos:end="41:25">stride</name></expr></argument>, <argument pos:start="41:28" pos:end="41:31"><expr pos:start="41:28" pos:end="41:31"><name pos:start="41:28" pos:end="41:31">dest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:26"><expr pos:start="43:5" pos:end="43:25"><name pos:start="43:5" pos:end="43:5">p</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <call pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:20">vec_splat_u8</name> <argument_list pos:start="43:22" pos:end="43:25">(<argument pos:start="43:23" pos:end="43:24"><expr pos:start="43:23" pos:end="43:24"><operator pos:start="43:23" pos:end="43:23">-</operator><literal type="number" pos:start="43:24" pos:end="43:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:31"><expr pos:start="45:5" pos:end="45:30"><name pos:start="45:5" pos:end="45:9">perm0</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <call pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:22">vec_mergeh</name> <argument_list pos:start="45:24" pos:end="45:30">(<argument pos:start="45:25" pos:end="45:25"><expr pos:start="45:25" pos:end="45:25"><name pos:start="45:25" pos:end="45:25">p</name></expr></argument>, <argument pos:start="45:28" pos:end="45:29"><expr pos:start="45:28" pos:end="45:29"><name pos:start="45:28" pos:end="45:29">p0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="66:0"><expr pos:start="47:5" pos:end="47:30"><name pos:start="47:5" pos:end="47:9">perm1</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <call pos:start="47:13" pos:end="47:30"><name pos:start="47:13" pos:end="47:22">vec_mergeh</name> <argument_list pos:start="47:24" pos:end="47:30">(<argument pos:start="47:25" pos:end="47:25"><expr pos:start="47:25" pos:end="47:25"><name pos:start="47:25" pos:end="47:25">p</name></expr></argument>, <argument pos:start="47:28" pos:end="47:29"><expr pos:start="47:28" pos:end="47:29"><name pos:start="47:28" pos:end="47:29">p1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:define pos:start="51:1" pos:end="65:57">#<cpp:directive pos:start="51:2" pos:end="51:7">define</cpp:directive> <cpp:macro pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:11">ADD</name><parameter_list pos:start="51:12" pos:end="51:26">(<parameter pos:start="51:13" pos:end="51:16"><type pos:start="51:13" pos:end="51:16"><name pos:start="51:13" pos:end="51:16">dest</name></type></parameter>,<parameter pos:start="51:18" pos:end="51:20"><type pos:start="51:18" pos:end="51:20"><name pos:start="51:18" pos:end="51:20">src</name></type></parameter>,<parameter pos:start="51:22" pos:end="51:25"><type pos:start="51:22" pos:end="51:25"><name pos:start="51:22" pos:end="51:25">perm</name></type></parameter>)</parameter_list></cpp:macro>						\

    <comment type="block" pos:start="53:5" pos:end="53:48">/* *(uint64_t *)&amp;tmp = *(uint64_t *)dest; */</comment>			\

    <cpp:value pos:start="55:5" pos:end="65:57">tmp = vec_ld (0, dest);						\

    tmp2 = (vector_s16_t)vec_perm (tmp, (vector_u8_t)zero, perm);	\

    tmp3 = vec_adds (tmp2, src);					\

    tmp = vec_packsu (tmp3, tmp3);					\

    vec_ste ((vector_u32_t)tmp, 0, (unsigned int *)dest);		\

    vec_ste ((vector_u32_t)tmp, 4, (unsigned int *)dest);</cpp:value></cpp:define>



    <macro pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:7">ADD</name> <argument_list pos:start="69:9" pos:end="69:26">(<argument pos:start="69:10" pos:end="69:13">dest</argument>, <argument pos:start="69:16" pos:end="69:18">vx0</argument>, <argument pos:start="69:21" pos:end="69:25">perm0</argument>)</argument_list></macro>	<expr_stmt pos:start="69:33" pos:end="69:47"><expr pos:start="69:33" pos:end="69:46"><name pos:start="69:33" pos:end="69:36">dest</name> <operator pos:start="69:38" pos:end="69:39">+=</operator> <name pos:start="69:41" pos:end="69:46">stride</name></expr>;</expr_stmt>

    <macro pos:start="71:5" pos:end="71:26"><name pos:start="71:5" pos:end="71:7">ADD</name> <argument_list pos:start="71:9" pos:end="71:26">(<argument pos:start="71:10" pos:end="71:13">dest</argument>, <argument pos:start="71:16" pos:end="71:18">vx1</argument>, <argument pos:start="71:21" pos:end="71:25">perm1</argument>)</argument_list></macro>	<expr_stmt pos:start="71:33" pos:end="71:47"><expr pos:start="71:33" pos:end="71:46"><name pos:start="71:33" pos:end="71:36">dest</name> <operator pos:start="71:38" pos:end="71:39">+=</operator> <name pos:start="71:41" pos:end="71:46">stride</name></expr>;</expr_stmt>

    <macro pos:start="73:5" pos:end="73:26"><name pos:start="73:5" pos:end="73:7">ADD</name> <argument_list pos:start="73:9" pos:end="73:26">(<argument pos:start="73:10" pos:end="73:13">dest</argument>, <argument pos:start="73:16" pos:end="73:18">vx2</argument>, <argument pos:start="73:21" pos:end="73:25">perm0</argument>)</argument_list></macro>	<expr_stmt pos:start="73:33" pos:end="73:47"><expr pos:start="73:33" pos:end="73:46"><name pos:start="73:33" pos:end="73:36">dest</name> <operator pos:start="73:38" pos:end="73:39">+=</operator> <name pos:start="73:41" pos:end="73:46">stride</name></expr>;</expr_stmt>

    <macro pos:start="75:5" pos:end="75:26"><name pos:start="75:5" pos:end="75:7">ADD</name> <argument_list pos:start="75:9" pos:end="75:26">(<argument pos:start="75:10" pos:end="75:13">dest</argument>, <argument pos:start="75:16" pos:end="75:18">vx3</argument>, <argument pos:start="75:21" pos:end="75:25">perm1</argument>)</argument_list></macro>	<expr_stmt pos:start="75:33" pos:end="75:47"><expr pos:start="75:33" pos:end="75:46"><name pos:start="75:33" pos:end="75:36">dest</name> <operator pos:start="75:38" pos:end="75:39">+=</operator> <name pos:start="75:41" pos:end="75:46">stride</name></expr>;</expr_stmt>

    <macro pos:start="77:5" pos:end="77:26"><name pos:start="77:5" pos:end="77:7">ADD</name> <argument_list pos:start="77:9" pos:end="77:26">(<argument pos:start="77:10" pos:end="77:13">dest</argument>, <argument pos:start="77:16" pos:end="77:18">vx4</argument>, <argument pos:start="77:21" pos:end="77:25">perm0</argument>)</argument_list></macro>	<expr_stmt pos:start="77:33" pos:end="77:47"><expr pos:start="77:33" pos:end="77:46"><name pos:start="77:33" pos:end="77:36">dest</name> <operator pos:start="77:38" pos:end="77:39">+=</operator> <name pos:start="77:41" pos:end="77:46">stride</name></expr>;</expr_stmt>

    <macro pos:start="79:5" pos:end="79:26"><name pos:start="79:5" pos:end="79:7">ADD</name> <argument_list pos:start="79:9" pos:end="79:26">(<argument pos:start="79:10" pos:end="79:13">dest</argument>, <argument pos:start="79:16" pos:end="79:18">vx5</argument>, <argument pos:start="79:21" pos:end="79:25">perm1</argument>)</argument_list></macro>	<expr_stmt pos:start="79:33" pos:end="79:47"><expr pos:start="79:33" pos:end="79:46"><name pos:start="79:33" pos:end="79:36">dest</name> <operator pos:start="79:38" pos:end="79:39">+=</operator> <name pos:start="79:41" pos:end="79:46">stride</name></expr>;</expr_stmt>

    <macro pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:7">ADD</name> <argument_list pos:start="81:9" pos:end="81:26">(<argument pos:start="81:10" pos:end="81:13">dest</argument>, <argument pos:start="81:16" pos:end="81:18">vx6</argument>, <argument pos:start="81:21" pos:end="81:25">perm0</argument>)</argument_list></macro>	<expr_stmt pos:start="81:33" pos:end="81:47"><expr pos:start="81:33" pos:end="81:46"><name pos:start="81:33" pos:end="81:36">dest</name> <operator pos:start="81:38" pos:end="81:39">+=</operator> <name pos:start="81:41" pos:end="81:46">stride</name></expr>;</expr_stmt>

    <macro pos:start="83:5" pos:end="83:26"><name pos:start="83:5" pos:end="83:7">ADD</name> <argument_list pos:start="83:9" pos:end="83:26">(<argument pos:start="83:10" pos:end="83:13">dest</argument>, <argument pos:start="83:16" pos:end="83:18">vx7</argument>, <argument pos:start="83:21" pos:end="83:25">perm1</argument>)</argument_list></macro>



<expr_stmt pos:start="87:1" pos:end="90:0"><expr pos:start="87:1" pos:end="87:47"><call pos:start="87:1" pos:end="87:47"><name pos:start="87:1" pos:end="87:22">POWERPC_TBL_STOP_COUNT</name><argument_list pos:start="87:23" pos:end="87:47">(<argument pos:start="87:24" pos:end="87:43"><expr pos:start="87:24" pos:end="87:43"><name pos:start="87:24" pos:end="87:43">altivec_idct_add_num</name></expr></argument>, <argument pos:start="87:46" pos:end="87:46"><expr pos:start="87:46" pos:end="87:46"><literal type="number" pos:start="87:46" pos:end="87:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="89:8" pos:end="89:41">/* ALTIVEC_USE_REFERENCE_C_CODE */</comment>

</block_content>}</block></function>
</unit>
