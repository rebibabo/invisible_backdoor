<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18046.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">finish_write_pci_config</name><parameter_list pos:start="1:36" pos:end="5:68">(<parameter pos:start="1:37" pos:end="1:59"><decl pos:start="1:37" pos:end="1:59"><type pos:start="1:37" pos:end="1:59"><name pos:start="1:37" pos:end="1:52">sPAPREnvironment</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">spapr</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:74"><decl pos:start="1:62" pos:end="1:74"><type pos:start="1:62" pos:end="1:74"><name pos:start="1:62" pos:end="1:69">uint64_t</name></type> <name pos:start="1:71" pos:end="1:74">buid</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:49"><decl pos:start="3:37" pos:end="3:49"><type pos:start="3:37" pos:end="3:49"><name pos:start="3:37" pos:end="3:44">uint32_t</name></type> <name pos:start="3:46" pos:end="3:49">addr</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:64"><decl pos:start="3:52" pos:end="3:64"><type pos:start="3:52" pos:end="3:64"><name pos:start="3:52" pos:end="3:59">uint32_t</name></type> <name pos:start="3:61" pos:end="3:64">size</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:48"><decl pos:start="5:37" pos:end="5:48"><type pos:start="5:37" pos:end="5:48"><name pos:start="5:37" pos:end="5:44">uint32_t</name></type> <name pos:start="5:46" pos:end="5:48">val</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:67"><decl pos:start="5:51" pos:end="5:67"><type pos:start="5:51" pos:end="5:67"><name pos:start="5:51" pos:end="5:62">target_ulong</name></type> <name pos:start="5:64" pos:end="5:67">rets</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="53:1">{<block_content pos:start="9:5" pos:end="51:39">

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">PCIDevice</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:22">pci_dev</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:50">(<expr pos:start="13:9" pos:end="13:49"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:13">size</name> <operator pos:start="13:15" pos:end="13:16">!=</operator> <literal type="number" pos:start="13:18" pos:end="13:18">1</literal><operator pos:start="13:19" pos:end="13:19">)</operator> <operator pos:start="13:21" pos:end="13:22">&amp;&amp;</operator> <operator pos:start="13:24" pos:end="13:24">(</operator><name pos:start="13:25" pos:end="13:28">size</name> <operator pos:start="13:30" pos:end="13:31">!=</operator> <literal type="number" pos:start="13:33" pos:end="13:33">2</literal><operator pos:start="13:34" pos:end="13:34">)</operator> <operator pos:start="13:36" pos:end="13:37">&amp;&amp;</operator> <operator pos:start="13:39" pos:end="13:39">(</operator><name pos:start="13:40" pos:end="13:43">size</name> <operator pos:start="13:45" pos:end="13:46">!=</operator> <literal type="number" pos:start="13:48" pos:end="13:48">4</literal><operator pos:start="13:49" pos:end="13:49">)</operator></expr>)</condition> <block pos:start="13:52" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:15">

        <comment type="block" pos:start="15:9" pos:end="15:44">/* access must be 1, 2 or 4 bytes */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:44"><expr pos:start="17:9" pos:end="17:43"><call pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:15">rtas_st</name><argument_list pos:start="17:16" pos:end="17:43">(<argument pos:start="17:17" pos:end="17:20"><expr pos:start="17:17" pos:end="17:20"><name pos:start="17:17" pos:end="17:20">rets</name></expr></argument>, <argument pos:start="17:23" pos:end="17:23"><expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr></argument>, <argument pos:start="17:26" pos:end="17:42"><expr pos:start="17:26" pos:end="17:42"><name pos:start="17:26" pos:end="17:42">RTAS_OUT_HW_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:42"><expr pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:11">pci_dev</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:41"><name pos:start="25:15" pos:end="25:22">find_dev</name><argument_list pos:start="25:23" pos:end="25:41">(<argument pos:start="25:24" pos:end="25:28"><expr pos:start="25:24" pos:end="25:28"><name pos:start="25:24" pos:end="25:28">spapr</name></expr></argument>, <argument pos:start="25:31" pos:end="25:34"><expr pos:start="25:31" pos:end="25:34"><name pos:start="25:31" pos:end="25:34">buid</name></expr></argument>, <argument pos:start="25:37" pos:end="25:40"><expr pos:start="25:37" pos:end="25:40"><name pos:start="25:37" pos:end="25:40">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:8">addr</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:33"><name pos:start="27:12" pos:end="27:27">rtas_pci_cfgaddr</name><argument_list pos:start="27:28" pos:end="27:33">(<argument pos:start="27:29" pos:end="27:32"><expr pos:start="27:29" pos:end="27:32"><name pos:start="27:29" pos:end="27:32">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="41:5"><if pos:start="31:5" pos:end="41:5">if <condition pos:start="31:8" pos:end="31:72">(<expr pos:start="31:9" pos:end="31:71"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:16">pci_dev</name> <operator pos:start="31:18" pos:end="31:19">||</operator> <operator pos:start="31:21" pos:end="31:21">(</operator><name pos:start="31:22" pos:end="31:25">addr</name> <operator pos:start="31:27" pos:end="31:27">%</operator> <name pos:start="31:29" pos:end="31:32">size</name><operator pos:start="31:33" pos:end="31:33">)</operator> <operator pos:start="31:35" pos:end="31:36">||</operator> <operator pos:start="31:38" pos:end="31:38">(</operator><name pos:start="31:39" pos:end="31:42">addr</name> <operator pos:start="31:44" pos:end="31:45">&gt;=</operator> <call pos:start="31:47" pos:end="31:70"><name pos:start="31:47" pos:end="31:61">pci_config_size</name><argument_list pos:start="31:62" pos:end="31:70">(<argument pos:start="31:63" pos:end="31:69"><expr pos:start="31:63" pos:end="31:69"><name pos:start="31:63" pos:end="31:69">pci_dev</name></expr></argument>)</argument_list></call><operator pos:start="31:71" pos:end="31:71">)</operator></expr>)</condition> <block pos:start="31:74" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:15">

        <comment type="block" pos:start="33:9" pos:end="35:31">/* Access must be to a valid device, within bounds and

         * naturally aligned */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:44"><expr pos:start="37:9" pos:end="37:43"><call pos:start="37:9" pos:end="37:43"><name pos:start="37:9" pos:end="37:15">rtas_st</name><argument_list pos:start="37:16" pos:end="37:43">(<argument pos:start="37:17" pos:end="37:20"><expr pos:start="37:17" pos:end="37:20"><name pos:start="37:17" pos:end="37:20">rets</name></expr></argument>, <argument pos:start="37:23" pos:end="37:23"><expr pos:start="37:23" pos:end="37:23"><literal type="number" pos:start="37:23" pos:end="37:23">0</literal></expr></argument>, <argument pos:start="37:26" pos:end="37:42"><expr pos:start="37:26" pos:end="37:42"><name pos:start="37:26" pos:end="37:42">RTAS_OUT_HW_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="47:44"><expr pos:start="45:5" pos:end="47:43"><call pos:start="45:5" pos:end="47:43"><name pos:start="45:5" pos:end="45:32">pci_host_config_write_common</name><argument_list pos:start="45:33" pos:end="47:43">(<argument pos:start="45:34" pos:end="45:40"><expr pos:start="45:34" pos:end="45:40"><name pos:start="45:34" pos:end="45:40">pci_dev</name></expr></argument>, <argument pos:start="45:43" pos:end="45:46"><expr pos:start="45:43" pos:end="45:46"><name pos:start="45:43" pos:end="45:46">addr</name></expr></argument>, <argument pos:start="45:49" pos:end="45:72"><expr pos:start="45:49" pos:end="45:72"><call pos:start="45:49" pos:end="45:72"><name pos:start="45:49" pos:end="45:63">pci_config_size</name><argument_list pos:start="45:64" pos:end="45:72">(<argument pos:start="45:65" pos:end="45:71"><expr pos:start="45:65" pos:end="45:71"><name pos:start="45:65" pos:end="45:71">pci_dev</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="47:34" pos:end="47:36"><expr pos:start="47:34" pos:end="47:36"><name pos:start="47:34" pos:end="47:36">val</name></expr></argument>, <argument pos:start="47:39" pos:end="47:42"><expr pos:start="47:39" pos:end="47:42"><name pos:start="47:39" pos:end="47:42">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:39"><expr pos:start="51:5" pos:end="51:38"><call pos:start="51:5" pos:end="51:38"><name pos:start="51:5" pos:end="51:11">rtas_st</name><argument_list pos:start="51:12" pos:end="51:38">(<argument pos:start="51:13" pos:end="51:16"><expr pos:start="51:13" pos:end="51:16"><name pos:start="51:13" pos:end="51:16">rets</name></expr></argument>, <argument pos:start="51:19" pos:end="51:19"><expr pos:start="51:19" pos:end="51:19"><literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr></argument>, <argument pos:start="51:22" pos:end="51:37"><expr pos:start="51:22" pos:end="51:37"><name pos:start="51:22" pos:end="51:37">RTAS_OUT_SUCCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
