<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2935.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:29">ff_interleave_add_packet</name><parameter_list pos:start="1:30" pos:end="3:88">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:58">AVPacket</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">pkt</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:87"><function_decl pos:start="3:31" pos:end="3:87"><type pos:start="3:31" pos:end="3:33"><name pos:start="3:31" pos:end="3:33">int</name></type> (<modifier pos:start="3:36" pos:end="3:36">*</modifier><name pos:start="3:37" pos:end="3:43">compare</name>)<parameter_list pos:start="3:45" pos:end="3:87">(<parameter pos:start="3:46" pos:end="3:62"><decl pos:start="3:46" pos:end="3:62"><type pos:start="3:46" pos:end="3:62"><name pos:start="3:46" pos:end="3:60">AVFormatContext</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type></decl></parameter>, <parameter pos:start="3:65" pos:end="3:74"><decl pos:start="3:65" pos:end="3:74"><type pos:start="3:65" pos:end="3:74"><name pos:start="3:65" pos:end="3:72">AVPacket</name> <modifier pos:start="3:74" pos:end="3:74">*</modifier></type></decl></parameter>, <parameter pos:start="3:77" pos:end="3:86"><decl pos:start="3:77" pos:end="3:86"><type pos:start="3:77" pos:end="3:86"><name pos:start="3:77" pos:end="3:84">AVPacket</name> <modifier pos:start="3:86" pos:end="3:86">*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="77:1">{<block_content pos:start="7:5" pos:end="75:69">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:16">AVPacketList</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier><modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:29">next_point</name></decl>, <decl pos:start="7:32" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:19"><modifier pos:start="7:32" pos:end="7:32">*</modifier></type><name pos:start="7:33" pos:end="7:41">this_pktl</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:54"><expr pos:start="11:5" pos:end="11:53"><name pos:start="11:5" pos:end="11:13">this_pktl</name>      <operator pos:start="11:20" pos:end="11:20">=</operator> <call pos:start="11:22" pos:end="11:53"><name pos:start="11:22" pos:end="11:31">av_mallocz</name><argument_list pos:start="11:32" pos:end="11:53">(<argument pos:start="11:33" pos:end="11:52"><expr pos:start="11:33" pos:end="11:52"><sizeof pos:start="11:33" pos:end="11:52">sizeof<argument_list pos:start="11:39" pos:end="11:52">(<argument pos:start="11:40" pos:end="11:51"><expr pos:start="11:40" pos:end="11:51"><name pos:start="11:40" pos:end="11:51">AVPacketList</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="16:0"><expr pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:13">this_pktl</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:18">pkt</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <operator pos:start="13:22" pos:end="13:22">*</operator><name pos:start="13:23" pos:end="13:25">pkt</name></expr>;</expr_stmt>

<cpp:if pos:start="15:1" pos:end="15:26">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:26">FF_API_DESTRUCT_PACKET</name></expr></cpp:if>

<decl_stmt pos:start="17:1" pos:end="19:26"><decl pos:start="17:1" pos:end="19:25"><type pos:start="17:1" pos:end="17:31"><name pos:start="17:1" pos:end="17:31">FF_DISABLE_DEPRECATION_WARNINGS</name></type>

    <name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:7">pkt</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:17">destruct</name></name>  <init pos:start="19:20" pos:end="19:25">= <expr pos:start="19:22" pos:end="19:25"><name pos:start="19:22" pos:end="19:25">NULL</name></expr></init></decl>;</decl_stmt>           <comment type="line" pos:start="19:38" pos:end="19:78">// do not free original but only the copy</comment>

<decl_stmt pos:start="21:1" pos:end="25:26"><decl pos:start="21:1" pos:end="25:25"><type pos:start="21:1" pos:end="24:0"><name pos:start="21:1" pos:end="24:0">FF_ENABLE_DEPRECATION_WARNINGS</name></type>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

    <name pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:7">pkt</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:12">buf</name></name>       <init pos:start="25:20" pos:end="25:25">= <expr pos:start="25:22" pos:end="25:25"><name pos:start="25:22" pos:end="25:25">NULL</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><call pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:17">av_dup_packet</name><argument_list pos:start="27:18" pos:end="27:34">(<argument pos:start="27:19" pos:end="27:33"><expr pos:start="27:19" pos:end="27:33"><operator pos:start="27:19" pos:end="27:19">&amp;</operator><name pos:start="27:20" pos:end="27:33"><name pos:start="27:20" pos:end="27:28">this_pktl</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:33">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="27:38" pos:end="27:90">// duplicate the packet if it uses non-alloced memory</comment>



    <if_stmt pos:start="31:5" pos:end="37:39"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:61">(<expr pos:start="31:9" pos:end="31:60"><name pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:18">streams</name><index pos:start="31:19" pos:end="31:37">[<expr pos:start="31:20" pos:end="31:36"><name pos:start="31:20" pos:end="31:36"><name pos:start="31:20" pos:end="31:22">pkt</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:36">stream_index</name></name></expr>]</index></name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:60">last_in_packet_buffer</name></expr>)</condition> <block pos:start="31:63" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:83">

        <expr_stmt pos:start="33:9" pos:end="33:83"><expr pos:start="33:9" pos:end="33:82"><name pos:start="33:9" pos:end="33:18">next_point</name> <operator pos:start="33:20" pos:end="33:20">=</operator> <operator pos:start="33:22" pos:end="33:22">&amp;</operator><operator pos:start="33:23" pos:end="33:23">(</operator><name pos:start="33:24" pos:end="33:52"><name pos:start="33:24" pos:end="33:24">s</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:33">streams</name><index pos:start="33:34" pos:end="33:52">[<expr pos:start="33:35" pos:end="33:51"><name pos:start="33:35" pos:end="33:51"><name pos:start="33:35" pos:end="33:37">pkt</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:51">stream_index</name></name></expr>]</index></name><operator pos:start="33:53" pos:end="33:54">-&gt;</operator><name pos:start="33:55" pos:end="33:81"><name pos:start="33:55" pos:end="33:75">last_in_packet_buffer</name><operator pos:start="33:76" pos:end="33:77">-&gt;</operator><name pos:start="33:78" pos:end="33:81">next</name></name><operator pos:start="33:82" pos:end="33:82">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="37:39">else<block type="pseudo" pos:start="37:9" pos:end="37:39"><block_content pos:start="37:9" pos:end="37:39">

        <expr_stmt pos:start="37:9" pos:end="37:39"><expr pos:start="37:9" pos:end="37:38"><name pos:start="37:9" pos:end="37:18">next_point</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <operator pos:start="37:22" pos:end="37:22">&amp;</operator><name pos:start="37:23" pos:end="37:38"><name pos:start="37:23" pos:end="37:23">s</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:38">packet_buffer</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="41:5" pos:end="57:5"><if pos:start="41:5" pos:end="57:5">if <condition pos:start="41:8" pos:end="41:20">(<expr pos:start="41:9" pos:end="41:19"><operator pos:start="41:9" pos:end="41:9">*</operator><name pos:start="41:10" pos:end="41:19">next_point</name></expr>)</condition> <block pos:start="41:22" pos:end="57:5">{<block_content pos:start="43:9" pos:end="55:9">

        <if_stmt pos:start="43:9" pos:end="55:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="43:56">(<expr pos:start="43:13" pos:end="43:55"><call pos:start="43:13" pos:end="43:55"><name pos:start="43:13" pos:end="43:19">compare</name><argument_list pos:start="43:20" pos:end="43:55">(<argument pos:start="43:21" pos:end="43:21"><expr pos:start="43:21" pos:end="43:21"><name pos:start="43:21" pos:end="43:21">s</name></expr></argument>, <argument pos:start="43:24" pos:end="43:49"><expr pos:start="43:24" pos:end="43:49"><operator pos:start="43:24" pos:end="43:24">&amp;</operator><name pos:start="43:25" pos:end="43:49"><name pos:start="43:25" pos:end="43:25">s</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:44">packet_buffer_end</name><operator pos:start="43:45" pos:end="43:46">-&gt;</operator><name pos:start="43:47" pos:end="43:49">pkt</name></name></expr></argument>, <argument pos:start="43:52" pos:end="43:54"><expr pos:start="43:52" pos:end="43:54"><name pos:start="43:52" pos:end="43:54">pkt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:58" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:31">

            <while pos:start="45:13" pos:end="47:50">while <condition pos:start="45:19" pos:end="45:57">(<expr pos:start="45:20" pos:end="45:56"><operator pos:start="45:20" pos:end="45:20">!</operator><call pos:start="45:21" pos:end="45:56"><name pos:start="45:21" pos:end="45:27">compare</name><argument_list pos:start="45:28" pos:end="45:56">(<argument pos:start="45:29" pos:end="45:29"><expr pos:start="45:29" pos:end="45:29"><name pos:start="45:29" pos:end="45:29">s</name></expr></argument>, <argument pos:start="45:32" pos:end="45:50"><expr pos:start="45:32" pos:end="45:50"><operator pos:start="45:32" pos:end="45:32">&amp;</operator><name pos:start="45:33" pos:end="45:50"><operator pos:start="45:33" pos:end="45:33">(</operator><operator pos:start="45:34" pos:end="45:34">*</operator><name pos:start="45:35" pos:end="45:44">next_point</name><operator pos:start="45:45" pos:end="45:45">)</operator><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:50">pkt</name></name></expr></argument>, <argument pos:start="45:53" pos:end="45:55"><expr pos:start="45:53" pos:end="45:55"><name pos:start="45:53" pos:end="45:55">pkt</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:50"><block_content pos:start="47:17" pos:end="47:50">

                <expr_stmt pos:start="47:17" pos:end="47:50"><expr pos:start="47:17" pos:end="47:49"><name pos:start="47:17" pos:end="47:26">next_point</name> <operator pos:start="47:28" pos:end="47:28">=</operator> <operator pos:start="47:30" pos:end="47:30">&amp;</operator><name pos:start="47:31" pos:end="47:49"><operator pos:start="47:31" pos:end="47:31">(</operator><operator pos:start="47:32" pos:end="47:32">*</operator><name pos:start="47:33" pos:end="47:42">next_point</name><operator pos:start="47:43" pos:end="47:43">)</operator><operator pos:start="47:44" pos:end="47:45">-&gt;</operator><name pos:start="47:46" pos:end="47:49">next</name></name></expr>;</expr_stmt></block_content></block></while>

            <goto pos:start="49:13" pos:end="49:31">goto <name pos:start="49:18" pos:end="49:30">next_non_null</name>;</goto>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="55:9">else <block pos:start="51:16" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:55">

            <expr_stmt pos:start="53:13" pos:end="53:55"><expr pos:start="53:13" pos:end="53:54"><name pos:start="53:13" pos:end="53:22">next_point</name> <operator pos:start="53:24" pos:end="53:24">=</operator> <operator pos:start="53:26" pos:end="53:26">&amp;</operator><operator pos:start="53:27" pos:end="53:27">(</operator><name pos:start="53:28" pos:end="53:53"><name pos:start="53:28" pos:end="53:28">s</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:47">packet_buffer_end</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:53">next</name></name><operator pos:start="53:54" pos:end="53:54">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:25"><expr pos:start="59:5" pos:end="59:24"><call pos:start="59:5" pos:end="59:24"><name pos:start="59:5" pos:end="59:10">assert</name><argument_list pos:start="59:11" pos:end="59:24">(<argument pos:start="59:12" pos:end="59:23"><expr pos:start="59:12" pos:end="59:23"><operator pos:start="59:12" pos:end="59:12">!</operator><operator pos:start="59:13" pos:end="59:13">*</operator><name pos:start="59:14" pos:end="59:23">next_point</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:37"><expr pos:start="63:5" pos:end="63:36"><name pos:start="63:5" pos:end="63:24"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:24">packet_buffer_end</name></name> <operator pos:start="63:26" pos:end="63:26">=</operator> <name pos:start="63:28" pos:end="63:36">this_pktl</name></expr>;</expr_stmt>

<label pos:start="65:1" pos:end="65:14"><name pos:start="65:1" pos:end="65:13">next_non_null</name>:</label>



    <expr_stmt pos:start="69:5" pos:end="69:34"><expr pos:start="69:5" pos:end="69:33"><name pos:start="69:5" pos:end="69:19"><name pos:start="69:5" pos:end="69:13">this_pktl</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:19">next</name></name> <operator pos:start="69:21" pos:end="69:21">=</operator> <operator pos:start="69:23" pos:end="69:23">*</operator><name pos:start="69:24" pos:end="69:33">next_point</name></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="75:69"><expr pos:start="73:5" pos:end="75:68"><name pos:start="73:5" pos:end="73:33"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:14">streams</name><index pos:start="73:15" pos:end="73:33">[<expr pos:start="73:16" pos:end="73:32"><name pos:start="73:16" pos:end="73:32"><name pos:start="73:16" pos:end="73:18">pkt</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:32">stream_index</name></name></expr>]</index></name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:56">last_in_packet_buffer</name> <operator pos:start="73:58" pos:end="73:58">=</operator>

        <operator pos:start="75:9" pos:end="75:9">*</operator><name pos:start="75:10" pos:end="75:19">next_point</name>                                      <operator pos:start="75:58" pos:end="75:58">=</operator> <name pos:start="75:60" pos:end="75:68">this_pktl</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
