<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23083.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:25">qemu_anon_ram_alloc</name><parameter_list pos:start="1:26" pos:end="1:38">(<parameter pos:start="1:27" pos:end="1:37"><decl pos:start="1:27" pos:end="1:37"><type pos:start="1:27" pos:end="1:32"><name pos:start="1:27" pos:end="1:32">size_t</name></type> <name pos:start="1:34" pos:end="1:37">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:15">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">void</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:13">ptr</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="13:33">/* FIXME: this is not exactly optimal solution since VirtualAlloc

       has 64Kb granularity, but at least it guarantees us that the

       memory is page aligned. */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:63"><expr pos:start="15:5" pos:end="15:62"><name pos:start="15:5" pos:end="15:7">ptr</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:62"><name pos:start="15:11" pos:end="15:22">VirtualAlloc</name><argument_list pos:start="15:23" pos:end="15:62">(<argument pos:start="15:24" pos:end="15:27"><expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">NULL</name></expr></argument>, <argument pos:start="15:30" pos:end="15:33"><expr pos:start="15:30" pos:end="15:33"><name pos:start="15:30" pos:end="15:33">size</name></expr></argument>, <argument pos:start="15:36" pos:end="15:45"><expr pos:start="15:36" pos:end="15:45"><name pos:start="15:36" pos:end="15:45">MEM_COMMIT</name></expr></argument>, <argument pos:start="15:48" pos:end="15:61"><expr pos:start="15:48" pos:end="15:61"><name pos:start="15:48" pos:end="15:61">PAGE_READWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><call pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:29">trace_qemu_anon_ram_alloc</name><argument_list pos:start="17:30" pos:end="17:40">(<argument pos:start="17:31" pos:end="17:34"><expr pos:start="17:31" pos:end="17:34"><name pos:start="17:31" pos:end="17:34">size</name></expr></argument>, <argument pos:start="17:37" pos:end="17:39"><expr pos:start="17:37" pos:end="17:39"><name pos:start="17:37" pos:end="17:39">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="19:5" pos:end="19:15">return <expr pos:start="19:12" pos:end="19:14"><name pos:start="19:12" pos:end="19:14">ptr</name></expr>;</return>

</block_content>}</block></function>
</unit>
