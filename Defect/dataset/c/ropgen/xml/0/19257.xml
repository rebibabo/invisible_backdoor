<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19257.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">generate_bootsect</name><parameter_list pos:start="1:30" pos:end="3:77">(<parameter pos:start="1:31" pos:end="1:59"><decl pos:start="1:31" pos:end="1:59"><type pos:start="1:31" pos:end="1:59"><name pos:start="1:31" pos:end="1:48">target_phys_addr_t</name></type> <name pos:start="1:50" pos:end="1:59">option_rom</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:45"><decl pos:start="3:31" pos:end="3:45"><type pos:start="3:31" pos:end="3:42"><name pos:start="3:31" pos:end="3:38">uint32_t</name></type> <name pos:start="3:40" pos:end="3:45"><name pos:start="3:40" pos:end="3:42">gpr</name><index pos:start="3:43" pos:end="3:45">[<expr pos:start="3:44" pos:end="3:44"><literal type="number" pos:start="3:44" pos:end="3:44">8</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:63"><decl pos:start="3:48" pos:end="3:63"><type pos:start="3:48" pos:end="3:60"><name pos:start="3:48" pos:end="3:55">uint16_t</name></type> <name pos:start="3:57" pos:end="3:63"><name pos:start="3:57" pos:end="3:60">segs</name><index pos:start="3:61" pos:end="3:63">[<expr pos:start="3:62" pos:end="3:62"><literal type="number" pos:start="3:62" pos:end="3:62">6</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="3:66" pos:end="3:76"><decl pos:start="3:66" pos:end="3:76"><type pos:start="3:66" pos:end="3:76"><name pos:start="3:66" pos:end="3:73">uint16_t</name></type> <name pos:start="3:75" pos:end="3:76">ip</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="153:1">{<block_content pos:start="7:5" pos:end="151:53">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:20"><name pos:start="7:13" pos:end="7:15">rom</name><index pos:start="7:16" pos:end="7:20">[<expr pos:start="7:17" pos:end="7:19"><literal type="number" pos:start="7:17" pos:end="7:19">512</literal></expr>]</index></name></decl>, <decl pos:start="7:23" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:11"><modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">p</name></decl>, <decl pos:start="7:27" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:11"><modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:32">reloc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:15">sum</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:32"><expr pos:start="15:5" pos:end="15:31"><call pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:31">(<argument pos:start="15:12" pos:end="15:14"><expr pos:start="15:12" pos:end="15:14"><name pos:start="15:12" pos:end="15:14">rom</name></expr></argument>, <argument pos:start="15:17" pos:end="15:17"><expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></argument>, <argument pos:start="15:20" pos:end="15:30"><expr pos:start="15:20" pos:end="15:30"><sizeof pos:start="15:20" pos:end="15:30">sizeof<argument_list pos:start="15:26" pos:end="15:30">(<argument pos:start="15:27" pos:end="15:29"><expr pos:start="15:27" pos:end="15:29"><name pos:start="15:27" pos:end="15:29">rom</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:12"><expr pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:5">p</name> <operator pos:start="19:7" pos:end="19:7">=</operator> <name pos:start="19:9" pos:end="19:11">rom</name></expr>;</expr_stmt>

    <comment type="block" pos:start="21:5" pos:end="21:51">/* Make sure we have an option rom signature */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:16"><expr pos:start="23:5" pos:end="23:15"><operator pos:start="23:5" pos:end="23:5">*</operator><name pos:start="23:6" pos:end="23:6">p</name><operator pos:start="23:7" pos:end="23:8">++</operator> <operator pos:start="23:10" pos:end="23:10">=</operator> <literal type="number" pos:start="23:12" pos:end="23:15">0x55</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:16"><expr pos:start="25:5" pos:end="25:15"><operator pos:start="25:5" pos:end="25:5">*</operator><name pos:start="25:6" pos:end="25:6">p</name><operator pos:start="25:7" pos:end="25:8">++</operator> <operator pos:start="25:10" pos:end="25:10">=</operator> <literal type="number" pos:start="25:12" pos:end="25:15">0xaa</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:28">/* ROM size in sectors*/</comment>

    <expr_stmt pos:start="31:5" pos:end="31:13"><expr pos:start="31:5" pos:end="31:12"><operator pos:start="31:5" pos:end="31:5">*</operator><name pos:start="31:6" pos:end="31:6">p</name><operator pos:start="31:7" pos:end="31:8">++</operator> <operator pos:start="31:10" pos:end="31:10">=</operator> <literal type="number" pos:start="31:12" pos:end="31:12">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:20">/* Hook int19 */</comment>



    <expr_stmt pos:start="39:5" pos:end="39:16"><expr pos:start="39:5" pos:end="39:15"><operator pos:start="39:5" pos:end="39:5">*</operator><name pos:start="39:6" pos:end="39:6">p</name><operator pos:start="39:7" pos:end="39:8">++</operator> <operator pos:start="39:10" pos:end="39:10">=</operator> <literal type="number" pos:start="39:12" pos:end="39:15">0x50</literal></expr>;</expr_stmt>		<comment type="block" pos:start="39:33" pos:end="39:45">/* push ax */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:16"><expr pos:start="41:5" pos:end="41:15"><operator pos:start="41:5" pos:end="41:5">*</operator><name pos:start="41:6" pos:end="41:6">p</name><operator pos:start="41:7" pos:end="41:8">++</operator> <operator pos:start="41:10" pos:end="41:10">=</operator> <literal type="number" pos:start="41:12" pos:end="41:15">0x1e</literal></expr>;</expr_stmt>		<comment type="block" pos:start="41:33" pos:end="41:45">/* push ds */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:16"><expr pos:start="43:5" pos:end="43:15"><operator pos:start="43:5" pos:end="43:5">*</operator><name pos:start="43:6" pos:end="43:6">p</name><operator pos:start="43:7" pos:end="43:8">++</operator> <operator pos:start="43:10" pos:end="43:10">=</operator> <literal type="number" pos:start="43:12" pos:end="43:15">0x31</literal></expr>;</expr_stmt> <expr_stmt pos:start="43:18" pos:end="43:29"><expr pos:start="43:18" pos:end="43:28"><operator pos:start="43:18" pos:end="43:18">*</operator><name pos:start="43:19" pos:end="43:19">p</name><operator pos:start="43:20" pos:end="43:21">++</operator> <operator pos:start="43:23" pos:end="43:23">=</operator> <literal type="number" pos:start="43:25" pos:end="43:28">0xc0</literal></expr>;</expr_stmt>	<comment type="block" pos:start="43:33" pos:end="43:48">/* xor ax, ax */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:16"><expr pos:start="45:5" pos:end="45:15"><operator pos:start="45:5" pos:end="45:5">*</operator><name pos:start="45:6" pos:end="45:6">p</name><operator pos:start="45:7" pos:end="45:8">++</operator> <operator pos:start="45:10" pos:end="45:10">=</operator> <literal type="number" pos:start="45:12" pos:end="45:15">0x8e</literal></expr>;</expr_stmt> <expr_stmt pos:start="45:18" pos:end="45:29"><expr pos:start="45:18" pos:end="45:28"><operator pos:start="45:18" pos:end="45:18">*</operator><name pos:start="45:19" pos:end="45:19">p</name><operator pos:start="45:20" pos:end="45:21">++</operator> <operator pos:start="45:23" pos:end="45:23">=</operator> <literal type="number" pos:start="45:25" pos:end="45:28">0xd8</literal></expr>;</expr_stmt>	<comment type="block" pos:start="45:33" pos:end="45:48">/* mov ax, ds */</comment>



    <expr_stmt pos:start="49:5" pos:end="49:16"><expr pos:start="49:5" pos:end="49:15"><operator pos:start="49:5" pos:end="49:5">*</operator><name pos:start="49:6" pos:end="49:6">p</name><operator pos:start="49:7" pos:end="49:8">++</operator> <operator pos:start="49:10" pos:end="49:10">=</operator> <literal type="number" pos:start="49:12" pos:end="49:15">0xc7</literal></expr>;</expr_stmt> <expr_stmt pos:start="49:18" pos:end="49:29"><expr pos:start="49:18" pos:end="49:28"><operator pos:start="49:18" pos:end="49:18">*</operator><name pos:start="49:19" pos:end="49:19">p</name><operator pos:start="49:20" pos:end="49:21">++</operator> <operator pos:start="49:23" pos:end="49:23">=</operator> <literal type="number" pos:start="49:25" pos:end="49:28">0x06</literal></expr>;</expr_stmt>   <comment type="block" pos:start="49:33" pos:end="49:55">/* movvw _start,0x64 */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:16"><expr pos:start="51:5" pos:end="51:15"><operator pos:start="51:5" pos:end="51:5">*</operator><name pos:start="51:6" pos:end="51:6">p</name><operator pos:start="51:7" pos:end="51:8">++</operator> <operator pos:start="51:10" pos:end="51:10">=</operator> <literal type="number" pos:start="51:12" pos:end="51:15">0x64</literal></expr>;</expr_stmt> <expr_stmt pos:start="51:18" pos:end="51:29"><expr pos:start="51:18" pos:end="51:28"><operator pos:start="51:18" pos:end="51:18">*</operator><name pos:start="51:19" pos:end="51:19">p</name><operator pos:start="51:20" pos:end="51:21">++</operator> <operator pos:start="51:23" pos:end="51:23">=</operator> <literal type="number" pos:start="51:25" pos:end="51:28">0x00</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:14"><expr pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:9">reloc</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <name pos:start="53:13" pos:end="53:13">p</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:16"><expr pos:start="55:5" pos:end="55:15"><operator pos:start="55:5" pos:end="55:5">*</operator><name pos:start="55:6" pos:end="55:6">p</name><operator pos:start="55:7" pos:end="55:8">++</operator> <operator pos:start="55:10" pos:end="55:10">=</operator> <literal type="number" pos:start="55:12" pos:end="55:15">0x00</literal></expr>;</expr_stmt> <expr_stmt pos:start="55:18" pos:end="55:29"><expr pos:start="55:18" pos:end="55:28"><operator pos:start="55:18" pos:end="55:18">*</operator><name pos:start="55:19" pos:end="55:19">p</name><operator pos:start="55:20" pos:end="55:21">++</operator> <operator pos:start="55:23" pos:end="55:23">=</operator> <literal type="number" pos:start="55:25" pos:end="55:28">0x00</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:16"><expr pos:start="59:5" pos:end="59:15"><operator pos:start="59:5" pos:end="59:5">*</operator><name pos:start="59:6" pos:end="59:6">p</name><operator pos:start="59:7" pos:end="59:8">++</operator> <operator pos:start="59:10" pos:end="59:10">=</operator> <literal type="number" pos:start="59:12" pos:end="59:15">0x8c</literal></expr>;</expr_stmt> <expr_stmt pos:start="59:18" pos:end="59:29"><expr pos:start="59:18" pos:end="59:28"><operator pos:start="59:18" pos:end="59:18">*</operator><name pos:start="59:19" pos:end="59:19">p</name><operator pos:start="59:20" pos:end="59:21">++</operator> <operator pos:start="59:23" pos:end="59:23">=</operator> <literal type="number" pos:start="59:25" pos:end="59:28">0x0e</literal></expr>;</expr_stmt>   <comment type="block" pos:start="59:33" pos:end="59:49">/* mov cs,0x66 */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:16"><expr pos:start="61:5" pos:end="61:15"><operator pos:start="61:5" pos:end="61:5">*</operator><name pos:start="61:6" pos:end="61:6">p</name><operator pos:start="61:7" pos:end="61:8">++</operator> <operator pos:start="61:10" pos:end="61:10">=</operator> <literal type="number" pos:start="61:12" pos:end="61:15">0x66</literal></expr>;</expr_stmt> <expr_stmt pos:start="61:18" pos:end="61:29"><expr pos:start="61:18" pos:end="61:28"><operator pos:start="61:18" pos:end="61:18">*</operator><name pos:start="61:19" pos:end="61:19">p</name><operator pos:start="61:20" pos:end="61:21">++</operator> <operator pos:start="61:23" pos:end="61:23">=</operator> <literal type="number" pos:start="61:25" pos:end="61:28">0x00</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:16"><expr pos:start="65:5" pos:end="65:15"><operator pos:start="65:5" pos:end="65:5">*</operator><name pos:start="65:6" pos:end="65:6">p</name><operator pos:start="65:7" pos:end="65:8">++</operator> <operator pos:start="65:10" pos:end="65:10">=</operator> <literal type="number" pos:start="65:12" pos:end="65:15">0x1f</literal></expr>;</expr_stmt>		<comment type="block" pos:start="65:33" pos:end="65:44">/* pop ds */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:16"><expr pos:start="67:5" pos:end="67:15"><operator pos:start="67:5" pos:end="67:5">*</operator><name pos:start="67:6" pos:end="67:6">p</name><operator pos:start="67:7" pos:end="67:8">++</operator> <operator pos:start="67:10" pos:end="67:10">=</operator> <literal type="number" pos:start="67:12" pos:end="67:15">0x58</literal></expr>;</expr_stmt>		<comment type="block" pos:start="67:33" pos:end="67:44">/* pop ax */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:16"><expr pos:start="69:5" pos:end="69:15"><operator pos:start="69:5" pos:end="69:5">*</operator><name pos:start="69:6" pos:end="69:6">p</name><operator pos:start="69:7" pos:end="69:8">++</operator> <operator pos:start="69:10" pos:end="69:10">=</operator> <literal type="number" pos:start="69:12" pos:end="69:15">0xcb</literal></expr>;</expr_stmt>		<comment type="block" pos:start="69:33" pos:end="69:42">/* lret */</comment>



    <comment type="block" pos:start="73:5" pos:end="73:21">/* Actual code */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:23"><expr pos:start="75:5" pos:end="75:22"><operator pos:start="75:5" pos:end="75:5">*</operator><name pos:start="75:6" pos:end="75:10">reloc</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <operator pos:start="75:14" pos:end="75:14">(</operator><name pos:start="75:15" pos:end="75:15">p</name> <operator pos:start="75:17" pos:end="75:17">-</operator> <name pos:start="75:19" pos:end="75:21">rom</name><operator pos:start="75:22" pos:end="75:22">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:16"><expr pos:start="79:5" pos:end="79:15"><operator pos:start="79:5" pos:end="79:5">*</operator><name pos:start="79:6" pos:end="79:6">p</name><operator pos:start="79:7" pos:end="79:8">++</operator> <operator pos:start="79:10" pos:end="79:10">=</operator> <literal type="number" pos:start="79:12" pos:end="79:15">0xfa</literal></expr>;</expr_stmt>		<comment type="block" pos:start="79:33" pos:end="79:41">/* CLI */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:16"><expr pos:start="81:5" pos:end="81:15"><operator pos:start="81:5" pos:end="81:5">*</operator><name pos:start="81:6" pos:end="81:6">p</name><operator pos:start="81:7" pos:end="81:8">++</operator> <operator pos:start="81:10" pos:end="81:10">=</operator> <literal type="number" pos:start="81:12" pos:end="81:15">0xfc</literal></expr>;</expr_stmt>		<comment type="block" pos:start="81:33" pos:end="81:41">/* CLD */</comment>



    <for pos:start="85:5" pos:end="103:5">for <control pos:start="85:9" pos:end="85:27">(<init pos:start="85:10" pos:end="85:15"><expr pos:start="85:10" pos:end="85:14"><name pos:start="85:10" pos:end="85:10">i</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <literal type="number" pos:start="85:14" pos:end="85:14">0</literal></expr>;</init> <condition pos:start="85:17" pos:end="85:22"><expr pos:start="85:17" pos:end="85:21"><name pos:start="85:17" pos:end="85:17">i</name> <operator pos:start="85:19" pos:end="85:19">&lt;</operator> <literal type="number" pos:start="85:21" pos:end="85:21">6</literal></expr>;</condition> <incr pos:start="85:24" pos:end="85:26"><expr pos:start="85:24" pos:end="85:26"><name pos:start="85:24" pos:end="85:24">i</name><operator pos:start="85:25" pos:end="85:26">++</operator></expr></incr>)</control> <block pos:start="85:29" pos:end="103:5">{<block_content pos:start="87:9" pos:end="101:31">

	<if_stmt pos:start="87:9" pos:end="89:21"><if pos:start="87:9" pos:end="89:21">if <condition pos:start="87:12" pos:end="87:19">(<expr pos:start="87:13" pos:end="87:18"><name pos:start="87:13" pos:end="87:13">i</name> <operator pos:start="87:15" pos:end="87:16">==</operator> <literal type="number" pos:start="87:18" pos:end="87:18">1</literal></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:21"><block_content pos:start="89:13" pos:end="89:21">		<comment type="block" pos:start="87:33" pos:end="87:45">/* Skip CS */</comment>

	    <continue pos:start="89:13" pos:end="89:21">continue;</continue></block_content></block></if></if_stmt>



	<expr_stmt pos:start="93:9" pos:end="93:20"><expr pos:start="93:9" pos:end="93:19"><operator pos:start="93:9" pos:end="93:9">*</operator><name pos:start="93:10" pos:end="93:10">p</name><operator pos:start="93:11" pos:end="93:12">++</operator> <operator pos:start="93:14" pos:end="93:14">=</operator> <literal type="number" pos:start="93:16" pos:end="93:19">0xb8</literal></expr>;</expr_stmt>		<comment type="block" pos:start="93:33" pos:end="93:50">/* MOV AX,imm16 */</comment>

	<expr_stmt pos:start="95:9" pos:end="95:23"><expr pos:start="95:9" pos:end="95:22"><operator pos:start="95:9" pos:end="95:9">*</operator><name pos:start="95:10" pos:end="95:10">p</name><operator pos:start="95:11" pos:end="95:12">++</operator> <operator pos:start="95:14" pos:end="95:14">=</operator> <name pos:start="95:16" pos:end="95:22"><name pos:start="95:16" pos:end="95:19">segs</name><index pos:start="95:20" pos:end="95:22">[<expr pos:start="95:21" pos:end="95:21"><name pos:start="95:21" pos:end="95:21">i</name></expr>]</index></name></expr>;</expr_stmt>

	<expr_stmt pos:start="97:9" pos:end="97:28"><expr pos:start="97:9" pos:end="97:27"><operator pos:start="97:9" pos:end="97:9">*</operator><name pos:start="97:10" pos:end="97:10">p</name><operator pos:start="97:11" pos:end="97:12">++</operator> <operator pos:start="97:14" pos:end="97:14">=</operator> <name pos:start="97:16" pos:end="97:22"><name pos:start="97:16" pos:end="97:19">segs</name><index pos:start="97:20" pos:end="97:22">[<expr pos:start="97:21" pos:end="97:21"><name pos:start="97:21" pos:end="97:21">i</name></expr>]</index></name> <operator pos:start="97:24" pos:end="97:25">&gt;&gt;</operator> <literal type="number" pos:start="97:27" pos:end="97:27">8</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="99:9" pos:end="99:20"><expr pos:start="99:9" pos:end="99:19"><operator pos:start="99:9" pos:end="99:9">*</operator><name pos:start="99:10" pos:end="99:10">p</name><operator pos:start="99:11" pos:end="99:12">++</operator> <operator pos:start="99:14" pos:end="99:14">=</operator> <literal type="number" pos:start="99:16" pos:end="99:19">0x8e</literal></expr>;</expr_stmt>		<comment type="block" pos:start="99:33" pos:end="99:50">/* MOV &lt;seg&gt;,AX */</comment>

	<expr_stmt pos:start="101:9" pos:end="101:31"><expr pos:start="101:9" pos:end="101:30"><operator pos:start="101:9" pos:end="101:9">*</operator><name pos:start="101:10" pos:end="101:10">p</name><operator pos:start="101:11" pos:end="101:12">++</operator> <operator pos:start="101:14" pos:end="101:14">=</operator> <literal type="number" pos:start="101:16" pos:end="101:21">0xc0</literal> <operator pos:start="101:21" pos:end="101:21">+</operator> <operator pos:start="101:23" pos:end="101:23">(</operator><name pos:start="101:24" pos:end="101:24">i</name> <operator pos:start="101:26" pos:end="101:27">&lt;&lt;</operator> <literal type="number" pos:start="101:29" pos:end="101:29">3</literal><operator pos:start="101:30" pos:end="101:30">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="107:5" pos:end="121:5">for <control pos:start="107:9" pos:end="107:27">(<init pos:start="107:10" pos:end="107:15"><expr pos:start="107:10" pos:end="107:14"><name pos:start="107:10" pos:end="107:10">i</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <literal type="number" pos:start="107:14" pos:end="107:14">0</literal></expr>;</init> <condition pos:start="107:17" pos:end="107:22"><expr pos:start="107:17" pos:end="107:21"><name pos:start="107:17" pos:end="107:17">i</name> <operator pos:start="107:19" pos:end="107:19">&lt;</operator> <literal type="number" pos:start="107:21" pos:end="107:21">8</literal></expr>;</condition> <incr pos:start="107:24" pos:end="107:26"><expr pos:start="107:24" pos:end="107:26"><name pos:start="107:24" pos:end="107:24">i</name><operator pos:start="107:25" pos:end="107:26">++</operator></expr></incr>)</control> <block pos:start="107:29" pos:end="121:5">{<block_content pos:start="109:9" pos:end="119:28">

	<expr_stmt pos:start="109:9" pos:end="109:20"><expr pos:start="109:9" pos:end="109:19"><operator pos:start="109:9" pos:end="109:9">*</operator><name pos:start="109:10" pos:end="109:10">p</name><operator pos:start="109:11" pos:end="109:12">++</operator> <operator pos:start="109:14" pos:end="109:14">=</operator> <literal type="number" pos:start="109:16" pos:end="109:19">0x66</literal></expr>;</expr_stmt>		<comment type="block" pos:start="109:33" pos:end="109:57">/* 32-bit operand size */</comment>

	<expr_stmt pos:start="111:9" pos:end="111:24"><expr pos:start="111:9" pos:end="111:23"><operator pos:start="111:9" pos:end="111:9">*</operator><name pos:start="111:10" pos:end="111:10">p</name><operator pos:start="111:11" pos:end="111:12">++</operator> <operator pos:start="111:14" pos:end="111:14">=</operator> <literal type="number" pos:start="111:16" pos:end="111:21">0xb8</literal> <operator pos:start="111:21" pos:end="111:21">+</operator> <name pos:start="111:23" pos:end="111:23">i</name></expr>;</expr_stmt>	<comment type="block" pos:start="111:33" pos:end="111:53">/* MOV &lt;reg&gt;,imm32 */</comment>

	<expr_stmt pos:start="113:9" pos:end="113:22"><expr pos:start="113:9" pos:end="113:21"><operator pos:start="113:9" pos:end="113:9">*</operator><name pos:start="113:10" pos:end="113:10">p</name><operator pos:start="113:11" pos:end="113:12">++</operator> <operator pos:start="113:14" pos:end="113:14">=</operator> <name pos:start="113:16" pos:end="113:21"><name pos:start="113:16" pos:end="113:18">gpr</name><index pos:start="113:19" pos:end="113:21">[<expr pos:start="113:20" pos:end="113:20"><name pos:start="113:20" pos:end="113:20">i</name></expr>]</index></name></expr>;</expr_stmt>

	<expr_stmt pos:start="115:9" pos:end="115:27"><expr pos:start="115:9" pos:end="115:26"><operator pos:start="115:9" pos:end="115:9">*</operator><name pos:start="115:10" pos:end="115:10">p</name><operator pos:start="115:11" pos:end="115:12">++</operator> <operator pos:start="115:14" pos:end="115:14">=</operator> <name pos:start="115:16" pos:end="115:21"><name pos:start="115:16" pos:end="115:18">gpr</name><index pos:start="115:19" pos:end="115:21">[<expr pos:start="115:20" pos:end="115:20"><name pos:start="115:20" pos:end="115:20">i</name></expr>]</index></name> <operator pos:start="115:23" pos:end="115:24">&gt;&gt;</operator> <literal type="number" pos:start="115:26" pos:end="115:26">8</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="117:9" pos:end="117:28"><expr pos:start="117:9" pos:end="117:27"><operator pos:start="117:9" pos:end="117:9">*</operator><name pos:start="117:10" pos:end="117:10">p</name><operator pos:start="117:11" pos:end="117:12">++</operator> <operator pos:start="117:14" pos:end="117:14">=</operator> <name pos:start="117:16" pos:end="117:21"><name pos:start="117:16" pos:end="117:18">gpr</name><index pos:start="117:19" pos:end="117:21">[<expr pos:start="117:20" pos:end="117:20"><name pos:start="117:20" pos:end="117:20">i</name></expr>]</index></name> <operator pos:start="117:23" pos:end="117:24">&gt;&gt;</operator> <literal type="number" pos:start="117:26" pos:end="117:27">16</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="119:9" pos:end="119:28"><expr pos:start="119:9" pos:end="119:27"><operator pos:start="119:9" pos:end="119:9">*</operator><name pos:start="119:10" pos:end="119:10">p</name><operator pos:start="119:11" pos:end="119:12">++</operator> <operator pos:start="119:14" pos:end="119:14">=</operator> <name pos:start="119:16" pos:end="119:21"><name pos:start="119:16" pos:end="119:18">gpr</name><index pos:start="119:19" pos:end="119:21">[<expr pos:start="119:20" pos:end="119:20"><name pos:start="119:20" pos:end="119:20">i</name></expr>]</index></name> <operator pos:start="119:23" pos:end="119:24">&gt;&gt;</operator> <literal type="number" pos:start="119:26" pos:end="119:27">24</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="125:5" pos:end="125:16"><expr pos:start="125:5" pos:end="125:15"><operator pos:start="125:5" pos:end="125:5">*</operator><name pos:start="125:6" pos:end="125:6">p</name><operator pos:start="125:7" pos:end="125:8">++</operator> <operator pos:start="125:10" pos:end="125:10">=</operator> <literal type="number" pos:start="125:12" pos:end="125:15">0xea</literal></expr>;</expr_stmt>		<comment type="block" pos:start="125:33" pos:end="125:45">/* JMP FAR */</comment>

    <expr_stmt pos:start="127:5" pos:end="127:14"><expr pos:start="127:5" pos:end="127:13"><operator pos:start="127:5" pos:end="127:5">*</operator><name pos:start="127:6" pos:end="127:6">p</name><operator pos:start="127:7" pos:end="127:8">++</operator> <operator pos:start="127:10" pos:end="127:10">=</operator> <name pos:start="127:12" pos:end="127:13">ip</name></expr>;</expr_stmt>			<comment type="block" pos:start="127:33" pos:end="127:40">/* IP */</comment>

    <expr_stmt pos:start="129:5" pos:end="129:19"><expr pos:start="129:5" pos:end="129:18"><operator pos:start="129:5" pos:end="129:5">*</operator><name pos:start="129:6" pos:end="129:6">p</name><operator pos:start="129:7" pos:end="129:8">++</operator> <operator pos:start="129:10" pos:end="129:10">=</operator> <name pos:start="129:12" pos:end="129:13">ip</name> <operator pos:start="129:15" pos:end="129:16">&gt;&gt;</operator> <literal type="number" pos:start="129:18" pos:end="129:18">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:19"><expr pos:start="131:5" pos:end="131:18"><operator pos:start="131:5" pos:end="131:5">*</operator><name pos:start="131:6" pos:end="131:6">p</name><operator pos:start="131:7" pos:end="131:8">++</operator> <operator pos:start="131:10" pos:end="131:10">=</operator> <name pos:start="131:12" pos:end="131:18"><name pos:start="131:12" pos:end="131:15">segs</name><index pos:start="131:16" pos:end="131:18">[<expr pos:start="131:17" pos:end="131:17"><literal type="number" pos:start="131:17" pos:end="131:17">1</literal></expr>]</index></name></expr>;</expr_stmt>		<comment type="block" pos:start="131:33" pos:end="131:40">/* CS */</comment>

    <expr_stmt pos:start="133:5" pos:end="133:24"><expr pos:start="133:5" pos:end="133:23"><operator pos:start="133:5" pos:end="133:5">*</operator><name pos:start="133:6" pos:end="133:6">p</name><operator pos:start="133:7" pos:end="133:8">++</operator> <operator pos:start="133:10" pos:end="133:10">=</operator> <name pos:start="133:12" pos:end="133:18"><name pos:start="133:12" pos:end="133:15">segs</name><index pos:start="133:16" pos:end="133:18">[<expr pos:start="133:17" pos:end="133:17"><literal type="number" pos:start="133:17" pos:end="133:17">1</literal></expr>]</index></name> <operator pos:start="133:20" pos:end="133:21">&gt;&gt;</operator> <literal type="number" pos:start="133:23" pos:end="133:23">8</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="137:5" pos:end="137:18">/* sign rom */</comment>

    <expr_stmt pos:start="139:5" pos:end="139:12"><expr pos:start="139:5" pos:end="139:11"><name pos:start="139:5" pos:end="139:7">sum</name> <operator pos:start="139:9" pos:end="139:9">=</operator> <literal type="number" pos:start="139:11" pos:end="139:11">0</literal></expr>;</expr_stmt>

    <for pos:start="141:5" pos:end="143:22">for <control pos:start="141:9" pos:end="141:43">(<init pos:start="141:10" pos:end="141:15"><expr pos:start="141:10" pos:end="141:14"><name pos:start="141:10" pos:end="141:10">i</name> <operator pos:start="141:12" pos:end="141:12">=</operator> <literal type="number" pos:start="141:14" pos:end="141:14">0</literal></expr>;</init> <condition pos:start="141:17" pos:end="141:38"><expr pos:start="141:17" pos:end="141:37"><name pos:start="141:17" pos:end="141:17">i</name> <operator pos:start="141:19" pos:end="141:19">&lt;</operator> <operator pos:start="141:21" pos:end="141:21">(</operator><sizeof pos:start="141:22" pos:end="141:32">sizeof<argument_list pos:start="141:28" pos:end="141:32">(<argument pos:start="141:29" pos:end="141:31"><expr pos:start="141:29" pos:end="141:31"><name pos:start="141:29" pos:end="141:31">rom</name></expr></argument>)</argument_list></sizeof> <operator pos:start="141:34" pos:end="141:34">-</operator> <literal type="number" pos:start="141:36" pos:end="141:36">1</literal><operator pos:start="141:37" pos:end="141:37">)</operator></expr>;</condition> <incr pos:start="141:40" pos:end="141:42"><expr pos:start="141:40" pos:end="141:42"><name pos:start="141:40" pos:end="141:40">i</name><operator pos:start="141:41" pos:end="141:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="143:9" pos:end="143:22"><block_content pos:start="143:9" pos:end="143:22">

        <expr_stmt pos:start="143:9" pos:end="143:22"><expr pos:start="143:9" pos:end="143:21"><name pos:start="143:9" pos:end="143:11">sum</name> <operator pos:start="143:13" pos:end="143:14">+=</operator> <name pos:start="143:16" pos:end="143:21"><name pos:start="143:16" pos:end="143:18">rom</name><index pos:start="143:19" pos:end="143:21">[<expr pos:start="143:20" pos:end="143:20"><name pos:start="143:20" pos:end="143:20">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="145:5" pos:end="145:32"><expr pos:start="145:5" pos:end="145:31"><name pos:start="145:5" pos:end="145:24"><name pos:start="145:5" pos:end="145:7">rom</name><index pos:start="145:8" pos:end="145:24">[<expr pos:start="145:9" pos:end="145:23"><sizeof pos:start="145:9" pos:end="145:19">sizeof<argument_list pos:start="145:15" pos:end="145:19">(<argument pos:start="145:16" pos:end="145:18"><expr pos:start="145:16" pos:end="145:18"><name pos:start="145:16" pos:end="145:18">rom</name></expr></argument>)</argument_list></sizeof> <operator pos:start="145:21" pos:end="145:21">-</operator> <literal type="number" pos:start="145:23" pos:end="145:23">1</literal></expr>]</index></name> <operator pos:start="145:26" pos:end="145:26">=</operator> <operator pos:start="145:28" pos:end="145:28">-</operator><name pos:start="145:29" pos:end="145:31">sum</name></expr>;</expr_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:64"><expr pos:start="149:5" pos:end="149:63"><call pos:start="149:5" pos:end="149:63"><name pos:start="149:5" pos:end="149:33">cpu_physical_memory_write_rom</name><argument_list pos:start="149:34" pos:end="149:63">(<argument pos:start="149:35" pos:end="149:44"><expr pos:start="149:35" pos:end="149:44"><name pos:start="149:35" pos:end="149:44">option_rom</name></expr></argument>, <argument pos:start="149:47" pos:end="149:49"><expr pos:start="149:47" pos:end="149:49"><name pos:start="149:47" pos:end="149:49">rom</name></expr></argument>, <argument pos:start="149:52" pos:end="149:62"><expr pos:start="149:52" pos:end="149:62"><sizeof pos:start="149:52" pos:end="149:62">sizeof<argument_list pos:start="149:58" pos:end="149:62">(<argument pos:start="149:59" pos:end="149:61"><expr pos:start="149:59" pos:end="149:61"><name pos:start="149:59" pos:end="149:61">rom</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:53"><expr pos:start="151:5" pos:end="151:52"><call pos:start="151:5" pos:end="151:52"><name pos:start="151:5" pos:end="151:26">option_rom_setup_reset</name><argument_list pos:start="151:27" pos:end="151:52">(<argument pos:start="151:28" pos:end="151:37"><expr pos:start="151:28" pos:end="151:37"><name pos:start="151:28" pos:end="151:37">option_rom</name></expr></argument>, <argument pos:start="151:40" pos:end="151:51"><expr pos:start="151:40" pos:end="151:51"><sizeof pos:start="151:40" pos:end="151:51">sizeof <argument_list pos:start="151:47" pos:end="151:51">(<argument pos:start="151:48" pos:end="151:50"><expr pos:start="151:48" pos:end="151:50"><name pos:start="151:48" pos:end="151:50">rom</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
