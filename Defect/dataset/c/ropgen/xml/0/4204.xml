<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4204.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:29">do_data_compress</name><parameter_list pos:start="1:30" pos:end="1:43">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:36"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:16">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">CompressParam</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:24">param</name> <init pos:start="5:26" pos:end="5:33">= <expr pos:start="5:28" pos:end="5:33"><name pos:start="5:28" pos:end="5:33">opaque</name></expr></init></decl>;</decl_stmt>



    <while pos:start="9:5" pos:end="51:5">while <condition pos:start="9:11" pos:end="9:29">(<expr pos:start="9:12" pos:end="9:28"><operator pos:start="9:12" pos:end="9:12">!</operator><name pos:start="9:13" pos:end="9:28">quit_comp_thread</name></expr>)</condition> <block pos:start="9:31" pos:end="51:5">{<block_content pos:start="11:9" pos:end="49:42">

        <expr_stmt pos:start="11:9" pos:end="11:39"><expr pos:start="11:9" pos:end="11:38"><call pos:start="11:9" pos:end="11:38"><name pos:start="11:9" pos:end="11:23">qemu_mutex_lock</name><argument_list pos:start="11:24" pos:end="11:38">(<argument pos:start="11:25" pos:end="11:37"><expr pos:start="11:25" pos:end="11:37"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:37"><name pos:start="11:26" pos:end="11:30">param</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:37">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="13:9" pos:end="23:11">/* Re-check the quit_comp_thread in case of

         * terminate_compression_threads is called just before

         * qemu_mutex_lock(&amp;param-&gt;mutex) and after

         * while(!quit_comp_thread), re-check it here can make

         * sure the compression thread terminate as expected.

         */</comment>

        <while pos:start="25:9" pos:end="29:9">while <condition pos:start="25:15" pos:end="25:50">(<expr pos:start="25:16" pos:end="25:49"><operator pos:start="25:16" pos:end="25:16">!</operator><name pos:start="25:17" pos:end="25:28"><name pos:start="25:17" pos:end="25:21">param</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:28">start</name></name> <operator pos:start="25:30" pos:end="25:31">&amp;&amp;</operator> <operator pos:start="25:33" pos:end="25:33">!</operator><name pos:start="25:34" pos:end="25:49">quit_comp_thread</name></expr>)</condition> <block pos:start="25:52" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:56">

            <expr_stmt pos:start="27:13" pos:end="27:56"><expr pos:start="27:13" pos:end="27:55"><call pos:start="27:13" pos:end="27:55"><name pos:start="27:13" pos:end="27:26">qemu_cond_wait</name><argument_list pos:start="27:27" pos:end="27:55">(<argument pos:start="27:28" pos:end="27:39"><expr pos:start="27:28" pos:end="27:39"><operator pos:start="27:28" pos:end="27:28">&amp;</operator><name pos:start="27:29" pos:end="27:39"><name pos:start="27:29" pos:end="27:33">param</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:39">cond</name></name></expr></argument>, <argument pos:start="27:42" pos:end="27:54"><expr pos:start="27:42" pos:end="27:54"><operator pos:start="27:42" pos:end="27:42">&amp;</operator><name pos:start="27:43" pos:end="27:54"><name pos:start="27:43" pos:end="27:47">param</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:54">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:30">(<expr pos:start="31:13" pos:end="31:29"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:29">quit_comp_thread</name></expr>)</condition> <block pos:start="31:32" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:40">

            <expr_stmt pos:start="33:13" pos:end="33:40"><expr pos:start="33:13" pos:end="33:39"><call pos:start="33:13" pos:end="33:39"><name pos:start="33:13" pos:end="33:32">do_compress_ram_page</name><argument_list pos:start="33:33" pos:end="33:39">(<argument pos:start="33:34" pos:end="33:38"><expr pos:start="33:34" pos:end="33:38"><name pos:start="33:34" pos:end="33:38">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:29"><expr pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:13">param</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:20">start</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:28">false</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:41"><expr pos:start="39:9" pos:end="39:40"><call pos:start="39:9" pos:end="39:40"><name pos:start="39:9" pos:end="39:25">qemu_mutex_unlock</name><argument_list pos:start="39:26" pos:end="39:40">(<argument pos:start="39:27" pos:end="39:39"><expr pos:start="39:27" pos:end="39:39"><operator pos:start="39:27" pos:end="39:27">&amp;</operator><name pos:start="39:28" pos:end="39:39"><name pos:start="39:28" pos:end="39:32">param</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:39">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:40"><expr pos:start="43:9" pos:end="43:39"><call pos:start="43:9" pos:end="43:39"><name pos:start="43:9" pos:end="43:23">qemu_mutex_lock</name><argument_list pos:start="43:24" pos:end="43:39">(<argument pos:start="43:25" pos:end="43:38"><expr pos:start="43:25" pos:end="43:38"><name pos:start="43:25" pos:end="43:38">comp_done_lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:27"><expr pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:13">param</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:19">done</name></name> <operator pos:start="45:21" pos:end="45:21">=</operator> <name pos:start="45:23" pos:end="45:26">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:41"><expr pos:start="47:9" pos:end="47:40"><call pos:start="47:9" pos:end="47:40"><name pos:start="47:9" pos:end="47:24">qemu_cond_signal</name><argument_list pos:start="47:25" pos:end="47:40">(<argument pos:start="47:26" pos:end="47:39"><expr pos:start="47:26" pos:end="47:39"><name pos:start="47:26" pos:end="47:39">comp_done_cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:42"><expr pos:start="49:9" pos:end="49:41"><call pos:start="49:9" pos:end="49:41"><name pos:start="49:9" pos:end="49:25">qemu_mutex_unlock</name><argument_list pos:start="49:26" pos:end="49:41">(<argument pos:start="49:27" pos:end="49:40"><expr pos:start="49:27" pos:end="49:40"><name pos:start="49:27" pos:end="49:40">comp_done_lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="55:5" pos:end="55:16">return <expr pos:start="55:12" pos:end="55:15"><name pos:start="55:12" pos:end="55:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
