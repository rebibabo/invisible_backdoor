<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15450.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:36">gen_op_arith_divd</name><parameter_list pos:start="1:37" pos:end="3:73">(<parameter pos:start="1:38" pos:end="1:54"><decl pos:start="1:38" pos:end="1:54"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:49">DisasContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">ctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:64"><decl pos:start="1:57" pos:end="1:64"><type pos:start="1:57" pos:end="1:64"><name pos:start="1:57" pos:end="1:60">TCGv</name></type> <name pos:start="1:62" pos:end="1:64">ret</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:75"><decl pos:start="1:67" pos:end="1:75"><type pos:start="1:67" pos:end="1:75"><name pos:start="1:67" pos:end="1:70">TCGv</name></type> <name pos:start="1:72" pos:end="1:75">arg1</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:46"><decl pos:start="3:38" pos:end="3:46"><type pos:start="3:38" pos:end="3:46"><name pos:start="3:38" pos:end="3:41">TCGv</name></type> <name pos:start="3:43" pos:end="3:46">arg2</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:56"><decl pos:start="3:49" pos:end="3:56"><type pos:start="3:49" pos:end="3:56"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:56">sign</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:72"><decl pos:start="3:59" pos:end="3:72"><type pos:start="3:59" pos:end="3:72"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:72">compute_ov</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="67:1">{<block_content pos:start="7:5" pos:end="65:30">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">l1</name> <init pos:start="7:12" pos:end="7:28">= <expr pos:start="7:14" pos:end="7:28"><call pos:start="7:14" pos:end="7:28"><name pos:start="7:14" pos:end="7:26">gen_new_label</name><argument_list pos:start="7:27" pos:end="7:28">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">l2</name> <init pos:start="9:12" pos:end="9:28">= <expr pos:start="9:14" pos:end="9:28"><call pos:start="9:14" pos:end="9:28"><name pos:start="9:14" pos:end="9:26">gen_new_label</name><argument_list pos:start="9:27" pos:end="9:28">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:50"><expr pos:start="13:5" pos:end="13:49"><call pos:start="13:5" pos:end="13:49"><name pos:start="13:5" pos:end="13:23">tcg_gen_brcondi_i64</name><argument_list pos:start="13:24" pos:end="13:49">(<argument pos:start="13:25" pos:end="13:35"><expr pos:start="13:25" pos:end="13:35"><name pos:start="13:25" pos:end="13:35">TCG_COND_EQ</name></expr></argument>, <argument pos:start="13:38" pos:end="13:41"><expr pos:start="13:38" pos:end="13:41"><name pos:start="13:38" pos:end="13:41">arg2</name></expr></argument>, <argument pos:start="13:44" pos:end="13:44"><expr pos:start="13:44" pos:end="13:44"><literal type="number" pos:start="13:44" pos:end="13:44">0</literal></expr></argument>, <argument pos:start="13:47" pos:end="13:48"><expr pos:start="13:47" pos:end="13:48"><name pos:start="13:47" pos:end="13:48">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="31:5"><if pos:start="15:5" pos:end="27:5">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><name pos:start="15:9" pos:end="15:12">sign</name></expr>)</condition> <block pos:start="15:15" pos:end="27:5">{<block_content pos:start="17:9" pos:end="25:41">

        <decl_stmt pos:start="17:9" pos:end="17:33"><decl pos:start="17:9" pos:end="17:32"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:14">l3</name> <init pos:start="17:16" pos:end="17:32">= <expr pos:start="17:18" pos:end="17:32"><call pos:start="17:18" pos:end="17:32"><name pos:start="17:18" pos:end="17:30">gen_new_label</name><argument_list pos:start="17:31" pos:end="17:32">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:55"><expr pos:start="19:9" pos:end="19:54"><call pos:start="19:9" pos:end="19:54"><name pos:start="19:9" pos:end="19:27">tcg_gen_brcondi_i64</name><argument_list pos:start="19:28" pos:end="19:54">(<argument pos:start="19:29" pos:end="19:39"><expr pos:start="19:29" pos:end="19:39"><name pos:start="19:29" pos:end="19:39">TCG_COND_NE</name></expr></argument>, <argument pos:start="19:42" pos:end="19:45"><expr pos:start="19:42" pos:end="19:45"><name pos:start="19:42" pos:end="19:45">arg2</name></expr></argument>, <argument pos:start="19:48" pos:end="19:49"><expr pos:start="19:48" pos:end="19:49"><operator pos:start="19:48" pos:end="19:48">-</operator><literal type="number" pos:start="19:49" pos:end="19:49">1</literal></expr></argument>, <argument pos:start="19:52" pos:end="19:53"><expr pos:start="19:52" pos:end="19:53"><name pos:start="19:52" pos:end="19:53">l3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:62"><expr pos:start="21:9" pos:end="21:61"><call pos:start="21:9" pos:end="21:61"><name pos:start="21:9" pos:end="21:27">tcg_gen_brcondi_i64</name><argument_list pos:start="21:28" pos:end="21:61">(<argument pos:start="21:29" pos:end="21:39"><expr pos:start="21:29" pos:end="21:39"><name pos:start="21:29" pos:end="21:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="21:42" pos:end="21:45"><expr pos:start="21:42" pos:end="21:45"><name pos:start="21:42" pos:end="21:45">arg1</name></expr></argument>, <argument pos:start="21:48" pos:end="21:56"><expr pos:start="21:48" pos:end="21:56"><name pos:start="21:48" pos:end="21:56">INT64_MIN</name></expr></argument>, <argument pos:start="21:59" pos:end="21:60"><expr pos:start="21:59" pos:end="21:60"><name pos:start="21:59" pos:end="21:60">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><call pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:21">gen_set_label</name><argument_list pos:start="23:22" pos:end="23:25">(<argument pos:start="23:23" pos:end="23:24"><expr pos:start="23:23" pos:end="23:24"><name pos:start="23:23" pos:end="23:24">l3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:41"><expr pos:start="25:9" pos:end="25:40"><call pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:23">tcg_gen_div_i64</name><argument_list pos:start="25:24" pos:end="25:40">(<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">ret</name></expr></argument>, <argument pos:start="25:30" pos:end="25:33"><expr pos:start="25:30" pos:end="25:33"><name pos:start="25:30" pos:end="25:33">arg1</name></expr></argument>, <argument pos:start="25:36" pos:end="25:39"><expr pos:start="25:36" pos:end="25:39"><name pos:start="25:36" pos:end="25:39">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="31:5">else <block pos:start="27:12" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:42">

        <expr_stmt pos:start="29:9" pos:end="29:42"><expr pos:start="29:9" pos:end="29:41"><call pos:start="29:9" pos:end="29:41"><name pos:start="29:9" pos:end="29:24">tcg_gen_divu_i64</name><argument_list pos:start="29:25" pos:end="29:41">(<argument pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><name pos:start="29:26" pos:end="29:28">ret</name></expr></argument>, <argument pos:start="29:31" pos:end="29:34"><expr pos:start="29:31" pos:end="29:34"><name pos:start="29:31" pos:end="29:34">arg1</name></expr></argument>, <argument pos:start="29:37" pos:end="29:40"><expr pos:start="29:37" pos:end="29:40"><name pos:start="29:37" pos:end="29:40">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:19">(<expr pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:18">compute_ov</name></expr>)</condition> <block pos:start="33:21" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:35">

        <expr_stmt pos:start="35:9" pos:end="35:35"><expr pos:start="35:9" pos:end="35:34"><call pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:23">tcg_gen_movi_tl</name><argument_list pos:start="35:24" pos:end="35:34">(<argument pos:start="35:25" pos:end="35:30"><expr pos:start="35:25" pos:end="35:30"><name pos:start="35:25" pos:end="35:30">cpu_ov</name></expr></argument>, <argument pos:start="35:33" pos:end="35:33"><expr pos:start="35:33" pos:end="35:33"><literal type="number" pos:start="35:33" pos:end="35:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><call pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:14">tcg_gen_br</name><argument_list pos:start="39:15" pos:end="39:18">(<argument pos:start="39:16" pos:end="39:17"><expr pos:start="39:16" pos:end="39:17"><name pos:start="39:16" pos:end="39:17">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:22"><expr pos:start="41:5" pos:end="41:21"><call pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:17">gen_set_label</name><argument_list pos:start="41:18" pos:end="41:21">(<argument pos:start="41:19" pos:end="41:20"><expr pos:start="41:19" pos:end="41:20"><name pos:start="41:19" pos:end="41:20">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:13">(<expr pos:start="43:9" pos:end="43:12"><name pos:start="43:9" pos:end="43:12">sign</name></expr>)</condition> <block pos:start="43:15" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:40">

        <expr_stmt pos:start="45:9" pos:end="45:40"><expr pos:start="45:9" pos:end="45:39"><call pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:24">tcg_gen_sari_i64</name><argument_list pos:start="45:25" pos:end="45:39">(<argument pos:start="45:26" pos:end="45:28"><expr pos:start="45:26" pos:end="45:28"><name pos:start="45:26" pos:end="45:28">ret</name></expr></argument>, <argument pos:start="45:31" pos:end="45:34"><expr pos:start="45:31" pos:end="45:34"><name pos:start="45:31" pos:end="45:34">arg1</name></expr></argument>, <argument pos:start="45:37" pos:end="45:38"><expr pos:start="45:37" pos:end="45:38"><literal type="number" pos:start="45:37" pos:end="45:38">63</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="51:5">else <block pos:start="47:12" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:33">

        <expr_stmt pos:start="49:9" pos:end="49:33"><expr pos:start="49:9" pos:end="49:32"><call pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:24">tcg_gen_movi_i64</name><argument_list pos:start="49:25" pos:end="49:32">(<argument pos:start="49:26" pos:end="49:28"><expr pos:start="49:26" pos:end="49:28"><name pos:start="49:26" pos:end="49:28">ret</name></expr></argument>, <argument pos:start="49:31" pos:end="49:31"><expr pos:start="49:31" pos:end="49:31"><literal type="number" pos:start="49:31" pos:end="49:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:19">(<expr pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:18">compute_ov</name></expr>)</condition> <block pos:start="53:21" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:35">

        <expr_stmt pos:start="55:9" pos:end="55:35"><expr pos:start="55:9" pos:end="55:34"><call pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:23">tcg_gen_movi_tl</name><argument_list pos:start="55:24" pos:end="55:34">(<argument pos:start="55:25" pos:end="55:30"><expr pos:start="55:25" pos:end="55:30"><name pos:start="55:25" pos:end="55:30">cpu_ov</name></expr></argument>, <argument pos:start="55:33" pos:end="55:33"><expr pos:start="55:33" pos:end="55:33"><literal type="number" pos:start="55:33" pos:end="55:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:35"><expr pos:start="57:9" pos:end="57:34"><call pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:23">tcg_gen_movi_tl</name><argument_list pos:start="57:24" pos:end="57:34">(<argument pos:start="57:25" pos:end="57:30"><expr pos:start="57:25" pos:end="57:30"><name pos:start="57:25" pos:end="57:30">cpu_so</name></expr></argument>, <argument pos:start="57:33" pos:end="57:33"><expr pos:start="57:33" pos:end="57:33"><literal type="number" pos:start="57:33" pos:end="57:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:22"><expr pos:start="61:5" pos:end="61:21"><call pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:17">gen_set_label</name><argument_list pos:start="61:18" pos:end="61:21">(<argument pos:start="61:19" pos:end="61:20"><expr pos:start="61:19" pos:end="61:20"><name pos:start="61:19" pos:end="61:20">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="65:30"><if pos:start="63:5" pos:end="65:30">if <condition pos:start="63:8" pos:end="63:39">(<expr pos:start="63:9" pos:end="63:38"><call pos:start="63:9" pos:end="63:38"><name pos:start="63:9" pos:end="63:16">unlikely</name><argument_list pos:start="63:17" pos:end="63:38">(<argument pos:start="63:18" pos:end="63:37"><expr pos:start="63:18" pos:end="63:37"><call pos:start="63:18" pos:end="63:32"><name pos:start="63:18" pos:end="63:19">Rc</name><argument_list pos:start="63:20" pos:end="63:32">(<argument pos:start="63:21" pos:end="63:31"><expr pos:start="63:21" pos:end="63:31"><name pos:start="63:21" pos:end="63:31"><name pos:start="63:21" pos:end="63:23">ctx</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:31">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="63:34" pos:end="63:35">!=</operator> <literal type="number" pos:start="63:37" pos:end="63:37">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:30"><block_content pos:start="65:9" pos:end="65:30">

        <expr_stmt pos:start="65:9" pos:end="65:30"><expr pos:start="65:9" pos:end="65:29"><call pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:19">gen_set_Rc0</name><argument_list pos:start="65:20" pos:end="65:29">(<argument pos:start="65:21" pos:end="65:23"><expr pos:start="65:21" pos:end="65:23"><name pos:start="65:21" pos:end="65:23">ctx</name></expr></argument>, <argument pos:start="65:26" pos:end="65:28"><expr pos:start="65:26" pos:end="65:28"><name pos:start="65:26" pos:end="65:28">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
