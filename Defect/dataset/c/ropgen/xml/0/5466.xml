<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5466.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">nvdimm_build_ssdt</name><parameter_list pos:start="1:30" pos:end="5:52">(<parameter pos:start="1:31" pos:end="1:49"><decl pos:start="1:31" pos:end="1:49"><type pos:start="1:31" pos:end="1:49"><name pos:start="1:31" pos:end="1:36">GSList</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:49">device_list</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:72"><decl pos:start="1:52" pos:end="1:72"><type pos:start="1:52" pos:end="1:72"><name pos:start="1:52" pos:end="1:57">GArray</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:72">table_offsets</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:48"><decl pos:start="3:31" pos:end="3:48"><type pos:start="3:31" pos:end="3:48"><name pos:start="3:31" pos:end="3:36">GArray</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:48">table_data</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:68"><decl pos:start="3:51" pos:end="3:68"><type pos:start="3:51" pos:end="3:68"><name pos:start="3:51" pos:end="3:60">BIOSLinker</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:68">linker</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:51"><decl pos:start="5:31" pos:end="5:51"><type pos:start="5:31" pos:end="5:51"><name pos:start="5:31" pos:end="5:36">GArray</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:51">dsm_dma_arrea</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="113:1">{<block_content pos:start="9:5" pos:end="111:25">

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:7">Aml</name> <modifier pos:start="9:9" pos:end="9:9">*</modifier></type><name pos:start="9:10" pos:end="9:13">ssdt</name></decl>, <decl pos:start="9:16" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:9"><modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:24">sb_scope</name></decl>, <decl pos:start="9:27" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:9"><modifier pos:start="9:27" pos:end="9:27">*</modifier></type><name pos:start="9:28" pos:end="9:30">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:23">mem_addr_offset</name></decl>, <decl pos:start="11:26" pos:end="11:36"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:26" pos:end="11:36">nvdimm_ssdt</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><call pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:18">acpi_add_table</name><argument_list pos:start="15:19" pos:end="15:45">(<argument pos:start="15:20" pos:end="15:32"><expr pos:start="15:20" pos:end="15:32"><name pos:start="15:20" pos:end="15:32">table_offsets</name></expr></argument>, <argument pos:start="15:35" pos:end="15:44"><expr pos:start="15:35" pos:end="15:44"><name pos:start="15:35" pos:end="15:44">table_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:8">ssdt</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:31"><name pos:start="19:12" pos:end="19:29">init_aml_allocator</name><argument_list pos:start="19:30" pos:end="19:31">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:55"><expr pos:start="21:5" pos:end="21:54"><call pos:start="21:5" pos:end="21:54"><name pos:start="21:5" pos:end="21:18">acpi_data_push</name><argument_list pos:start="21:19" pos:end="21:54">(<argument pos:start="21:20" pos:end="21:28"><expr pos:start="21:20" pos:end="21:28"><name pos:start="21:20" pos:end="21:28"><name pos:start="21:20" pos:end="21:23">ssdt</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:28">buf</name></name></expr></argument>, <argument pos:start="21:31" pos:end="21:53"><expr pos:start="21:31" pos:end="21:53"><sizeof pos:start="21:31" pos:end="21:53">sizeof<argument_list pos:start="21:37" pos:end="21:53">(<argument pos:start="21:38" pos:end="21:52"><expr pos:start="21:38" pos:end="21:52"><name pos:start="21:38" pos:end="21:52">AcpiTableHeader</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:12">sb_scope</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:33"><name pos:start="25:16" pos:end="25:24">aml_scope</name><argument_list pos:start="25:25" pos:end="25:33">(<argument pos:start="25:26" pos:end="25:32"><expr pos:start="25:26" pos:end="25:32"><literal type="string" pos:start="25:26" pos:end="25:32">"\\_SB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:7">dev</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:28"><name pos:start="29:11" pos:end="29:20">aml_device</name><argument_list pos:start="29:21" pos:end="29:28">(<argument pos:start="29:22" pos:end="29:27"><expr pos:start="29:22" pos:end="29:27"><literal type="string" pos:start="29:22" pos:end="29:27">"NVDR"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="53:7">/*

     * ACPI 6.0: 9.20 NVDIMM Devices:

     *

     * The ACPI Name Space device uses _HID of ACPI0012 to identify the root

     * NVDIMM interface device. Platform firmware is required to contain one

     * such device in _SB scope if NVDIMMs support is exposed by platform to

     * OSPM.

     * For each NVDIMM present or intended to be supported by platform,

     * platform firmware also exposes an ACPI Namespace Device under the

     * root device.

     */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:67"><expr pos:start="55:5" pos:end="55:66"><call pos:start="55:5" pos:end="55:66"><name pos:start="55:5" pos:end="55:14">aml_append</name><argument_list pos:start="55:15" pos:end="55:66">(<argument pos:start="55:16" pos:end="55:18"><expr pos:start="55:16" pos:end="55:18"><name pos:start="55:16" pos:end="55:18">dev</name></expr></argument>, <argument pos:start="55:21" pos:end="55:65"><expr pos:start="55:21" pos:end="55:65"><call pos:start="55:21" pos:end="55:65"><name pos:start="55:21" pos:end="55:33">aml_name_decl</name><argument_list pos:start="55:34" pos:end="55:65">(<argument pos:start="55:35" pos:end="55:40"><expr pos:start="55:35" pos:end="55:40"><literal type="string" pos:start="55:35" pos:end="55:40">"_HID"</literal></expr></argument>, <argument pos:start="55:43" pos:end="55:64"><expr pos:start="55:43" pos:end="55:64"><call pos:start="55:43" pos:end="55:64"><name pos:start="55:43" pos:end="55:52">aml_string</name><argument_list pos:start="55:53" pos:end="55:64">(<argument pos:start="55:54" pos:end="55:63"><expr pos:start="55:54" pos:end="55:63"><literal type="string" pos:start="55:54" pos:end="55:63">"ACPI0012"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:33"><expr pos:start="59:5" pos:end="59:32"><call pos:start="59:5" pos:end="59:32"><name pos:start="59:5" pos:end="59:27">nvdimm_build_common_dsm</name><argument_list pos:start="59:28" pos:end="59:32">(<argument pos:start="59:29" pos:end="59:31"><expr pos:start="59:29" pos:end="59:31"><name pos:start="59:29" pos:end="59:31">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:40">/* 0 is reserved for root device. */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:36"><expr pos:start="65:5" pos:end="65:35"><call pos:start="65:5" pos:end="65:35"><name pos:start="65:5" pos:end="65:27">nvdimm_build_device_dsm</name><argument_list pos:start="65:28" pos:end="65:35">(<argument pos:start="65:29" pos:end="65:31"><expr pos:start="65:29" pos:end="65:31"><name pos:start="65:29" pos:end="65:31">dev</name></expr></argument>, <argument pos:start="65:34" pos:end="65:34"><expr pos:start="65:34" pos:end="65:34"><literal type="number" pos:start="65:34" pos:end="65:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:50"><expr pos:start="69:5" pos:end="69:49"><call pos:start="69:5" pos:end="69:49"><name pos:start="69:5" pos:end="69:31">nvdimm_build_nvdimm_devices</name><argument_list pos:start="69:32" pos:end="69:49">(<argument pos:start="69:33" pos:end="69:43"><expr pos:start="69:33" pos:end="69:43"><name pos:start="69:33" pos:end="69:43">device_list</name></expr></argument>, <argument pos:start="69:46" pos:end="69:48"><expr pos:start="69:46" pos:end="69:48"><name pos:start="69:46" pos:end="69:48">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:30"><expr pos:start="73:5" pos:end="73:29"><call pos:start="73:5" pos:end="73:29"><name pos:start="73:5" pos:end="73:14">aml_append</name><argument_list pos:start="73:15" pos:end="73:29">(<argument pos:start="73:16" pos:end="73:23"><expr pos:start="73:16" pos:end="73:23"><name pos:start="73:16" pos:end="73:23">sb_scope</name></expr></argument>, <argument pos:start="73:26" pos:end="73:28"><expr pos:start="73:26" pos:end="73:28"><name pos:start="73:26" pos:end="73:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:31"><expr pos:start="75:5" pos:end="75:30"><call pos:start="75:5" pos:end="75:30"><name pos:start="75:5" pos:end="75:14">aml_append</name><argument_list pos:start="75:15" pos:end="75:30">(<argument pos:start="75:16" pos:end="75:19"><expr pos:start="75:16" pos:end="75:19"><name pos:start="75:16" pos:end="75:19">ssdt</name></expr></argument>, <argument pos:start="75:22" pos:end="75:29"><expr pos:start="75:22" pos:end="75:29"><name pos:start="75:22" pos:end="75:29">sb_scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:34"><expr pos:start="79:5" pos:end="79:33"><name pos:start="79:5" pos:end="79:15">nvdimm_ssdt</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:33"><name pos:start="79:19" pos:end="79:28">table_data</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:33">len</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:69">/* copy AML table into ACPI tables blob and patch header there */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:69"><expr pos:start="85:5" pos:end="85:68"><call pos:start="85:5" pos:end="85:68"><name pos:start="85:5" pos:end="85:23">g_array_append_vals</name><argument_list pos:start="85:24" pos:end="85:68">(<argument pos:start="85:25" pos:end="85:34"><expr pos:start="85:25" pos:end="85:34"><name pos:start="85:25" pos:end="85:34">table_data</name></expr></argument>, <argument pos:start="85:37" pos:end="85:51"><expr pos:start="85:37" pos:end="85:51"><name pos:start="85:37" pos:end="85:51"><name pos:start="85:37" pos:end="85:40">ssdt</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:45">buf</name><operator pos:start="85:46" pos:end="85:47">-&gt;</operator><name pos:start="85:48" pos:end="85:51">data</name></name></expr></argument>, <argument pos:start="85:54" pos:end="85:67"><expr pos:start="85:54" pos:end="85:67"><name pos:start="85:54" pos:end="85:67"><name pos:start="85:54" pos:end="85:57">ssdt</name><operator pos:start="85:58" pos:end="85:59">-&gt;</operator><name pos:start="85:60" pos:end="85:62">buf</name><operator pos:start="85:63" pos:end="85:64">-&gt;</operator><name pos:start="85:65" pos:end="85:67">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="89:69"><expr pos:start="87:5" pos:end="89:68"><name pos:start="87:5" pos:end="87:19">mem_addr_offset</name> <operator pos:start="87:21" pos:end="87:21">=</operator> <call pos:start="87:23" pos:end="89:68"><name pos:start="87:23" pos:end="87:46">build_append_named_dword</name><argument_list pos:start="87:47" pos:end="89:68">(<argument pos:start="87:48" pos:end="87:57"><expr pos:start="87:48" pos:end="87:57"><name pos:start="87:48" pos:end="87:57">table_data</name></expr></argument>,

                                               <argument pos:start="89:48" pos:end="89:67"><expr pos:start="89:48" pos:end="89:67"><name pos:start="89:48" pos:end="89:67">NVDIMM_ACPI_MEM_ADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="97:75"><expr pos:start="93:5" pos:end="97:74"><call pos:start="93:5" pos:end="97:74"><name pos:start="93:5" pos:end="93:28">bios_linker_loader_alloc</name><argument_list pos:start="93:29" pos:end="97:74">(<argument pos:start="93:30" pos:end="93:35"><expr pos:start="93:30" pos:end="93:35"><name pos:start="93:30" pos:end="93:35">linker</name></expr></argument>,

                             <argument pos:start="95:30" pos:end="95:48"><expr pos:start="95:30" pos:end="95:48"><name pos:start="95:30" pos:end="95:48">NVDIMM_DSM_MEM_FILE</name></expr></argument>, <argument pos:start="95:51" pos:end="95:63"><expr pos:start="95:51" pos:end="95:63"><name pos:start="95:51" pos:end="95:63">dsm_dma_arrea</name></expr></argument>,

                             <argument pos:start="97:30" pos:end="97:48"><expr pos:start="97:30" pos:end="97:48"><sizeof pos:start="97:30" pos:end="97:48">sizeof<argument_list pos:start="97:36" pos:end="97:48">(<argument pos:start="97:37" pos:end="97:47"><expr pos:start="97:37" pos:end="97:47"><name pos:start="97:37" pos:end="97:47">NvdimmDsmIn</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="97:51" pos:end="97:55"><expr pos:start="97:51" pos:end="97:55"><name pos:start="97:51" pos:end="97:55">false</name></expr></argument> <comment type="block" pos:start="97:57" pos:end="97:73">/* high memory */</comment>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="103:32"><expr pos:start="99:5" pos:end="103:31"><call pos:start="99:5" pos:end="103:31"><name pos:start="99:5" pos:end="99:34">bios_linker_loader_add_pointer</name><argument_list pos:start="99:35" pos:end="103:31">(<argument pos:start="99:36" pos:end="99:41"><expr pos:start="99:36" pos:end="99:41"><name pos:start="99:36" pos:end="99:41">linker</name></expr></argument>,

        <argument pos:start="101:9" pos:end="101:29"><expr pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:29">ACPI_BUILD_TABLE_FILE</name></expr></argument>, <argument pos:start="101:32" pos:end="101:46"><expr pos:start="101:32" pos:end="101:46"><name pos:start="101:32" pos:end="101:46">mem_addr_offset</name></expr></argument>, <argument pos:start="101:49" pos:end="101:64"><expr pos:start="101:49" pos:end="101:64"><sizeof pos:start="101:49" pos:end="101:64">sizeof<argument_list pos:start="101:55" pos:end="101:64">(<argument pos:start="101:56" pos:end="101:63"><expr pos:start="101:56" pos:end="101:63"><name pos:start="101:56" pos:end="101:63">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>,

        <argument pos:start="103:9" pos:end="103:27"><expr pos:start="103:9" pos:end="103:27"><name pos:start="103:9" pos:end="103:27">NVDIMM_DSM_MEM_FILE</name></expr></argument>, <argument pos:start="103:30" pos:end="103:30"><expr pos:start="103:30" pos:end="103:30"><literal type="number" pos:start="103:30" pos:end="103:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="109:66"><expr pos:start="105:5" pos:end="109:65"><call pos:start="105:5" pos:end="109:65"><name pos:start="105:5" pos:end="105:16">build_header</name><argument_list pos:start="105:17" pos:end="109:65">(<argument pos:start="105:18" pos:end="105:23"><expr pos:start="105:18" pos:end="105:23"><name pos:start="105:18" pos:end="105:23">linker</name></expr></argument>, <argument pos:start="105:26" pos:end="105:35"><expr pos:start="105:26" pos:end="105:35"><name pos:start="105:26" pos:end="105:35">table_data</name></expr></argument>,

        <argument pos:start="107:9" pos:end="107:48"><expr pos:start="107:9" pos:end="107:48"><operator pos:start="107:9" pos:end="107:9">(</operator><name pos:start="107:10" pos:end="107:13">void</name> <operator pos:start="107:15" pos:end="107:15">*</operator><operator pos:start="107:16" pos:end="107:16">)</operator><operator pos:start="107:17" pos:end="107:17">(</operator><name pos:start="107:18" pos:end="107:33"><name pos:start="107:18" pos:end="107:27">table_data</name><operator pos:start="107:28" pos:end="107:29">-&gt;</operator><name pos:start="107:30" pos:end="107:33">data</name></name> <operator pos:start="107:35" pos:end="107:35">+</operator> <name pos:start="107:37" pos:end="107:47">nvdimm_ssdt</name><operator pos:start="107:48" pos:end="107:48">)</operator></expr></argument>,

        <argument pos:start="109:9" pos:end="109:14"><expr pos:start="109:9" pos:end="109:14"><literal type="string" pos:start="109:9" pos:end="109:14">"SSDT"</literal></expr></argument>, <argument pos:start="109:17" pos:end="109:45"><expr pos:start="109:17" pos:end="109:45"><name pos:start="109:17" pos:end="109:31"><name pos:start="109:17" pos:end="109:26">table_data</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:31">len</name></name> <operator pos:start="109:33" pos:end="109:33">-</operator> <name pos:start="109:35" pos:end="109:45">nvdimm_ssdt</name></expr></argument>, <argument pos:start="109:48" pos:end="109:48"><expr pos:start="109:48" pos:end="109:48"><literal type="number" pos:start="109:48" pos:end="109:48">1</literal></expr></argument>, <argument pos:start="109:51" pos:end="109:54"><expr pos:start="109:51" pos:end="109:54"><name pos:start="109:51" pos:end="109:54">NULL</name></expr></argument>, <argument pos:start="109:57" pos:end="109:64"><expr pos:start="109:57" pos:end="109:64"><literal type="string" pos:start="109:57" pos:end="109:64">"NVDIMM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:25"><expr pos:start="111:5" pos:end="111:24"><call pos:start="111:5" pos:end="111:24"><name pos:start="111:5" pos:end="111:22">free_aml_allocator</name><argument_list pos:start="111:23" pos:end="111:24">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
