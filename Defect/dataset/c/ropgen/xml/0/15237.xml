<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15237.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:42">decode_cabac_mb_chroma_pre_mode</name><parameter_list pos:start="1:43" pos:end="1:59">( <parameter pos:start="1:45" pos:end="1:58"><decl pos:start="1:45" pos:end="1:58"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:55">H264Context</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">h</name></decl></parameter>)</parameter_list> <block pos:start="1:61" pos:end="45:1">{<block_content pos:start="3:5" pos:end="43:17">

    <decl_stmt pos:start="3:5" pos:end="3:40"><decl pos:start="3:5" pos:end="3:39"><type pos:start="3:5" pos:end="3:13"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:13">int</name></type> <name pos:start="3:15" pos:end="3:20">mba_xy</name> <init pos:start="3:22" pos:end="3:39">= <expr pos:start="3:24" pos:end="3:39"><name pos:start="3:24" pos:end="3:39"><name pos:start="3:24" pos:end="3:24">h</name><operator pos:start="3:25" pos:end="3:26">-&gt;</operator><name pos:start="3:27" pos:end="3:36">left_mb_xy</name><index pos:start="3:37" pos:end="3:39">[<expr pos:start="3:38" pos:end="3:38"><literal type="number" pos:start="3:38" pos:end="3:38">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:20">mbb_xy</name> <init pos:start="5:22" pos:end="5:35">= <expr pos:start="5:24" pos:end="5:35"><name pos:start="5:24" pos:end="5:35"><name pos:start="5:24" pos:end="5:24">h</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:35">top_mb_xy</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ctx</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:98">/* No need to test for IS_INTRA4x4 and IS_INTRA16x16, as we set chroma_pred_mode_table to 0 */</comment>

    <if_stmt pos:start="15:5" pos:end="17:14"><if pos:start="15:5" pos:end="17:14">if<condition pos:start="15:7" pos:end="15:90">( <expr pos:start="15:9" pos:end="15:88"><name pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:9">h</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:22">slice_table</name><index pos:start="15:23" pos:end="15:30">[<expr pos:start="15:24" pos:end="15:29"><name pos:start="15:24" pos:end="15:29">mba_xy</name></expr>]</index></name> <operator pos:start="15:32" pos:end="15:33">==</operator> <name pos:start="15:35" pos:end="15:46"><name pos:start="15:35" pos:end="15:35">h</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:46">slice_num</name></name> <operator pos:start="15:48" pos:end="15:49">&amp;&amp;</operator> <name pos:start="15:51" pos:end="15:83"><name pos:start="15:51" pos:end="15:51">h</name><operator pos:start="15:52" pos:end="15:53">-&gt;</operator><name pos:start="15:54" pos:end="15:75">chroma_pred_mode_table</name><index pos:start="15:76" pos:end="15:83">[<expr pos:start="15:77" pos:end="15:82"><name pos:start="15:77" pos:end="15:82">mba_xy</name></expr>]</index></name> <operator pos:start="15:85" pos:end="15:86">!=</operator> <literal type="number" pos:start="15:88" pos:end="15:88">0</literal></expr> )</condition><block type="pseudo" pos:start="17:9" pos:end="17:14"><block_content pos:start="17:9" pos:end="17:14">

        <expr_stmt pos:start="17:9" pos:end="17:14"><expr pos:start="17:9" pos:end="17:13"><name pos:start="17:9" pos:end="17:11">ctx</name><operator pos:start="17:12" pos:end="17:13">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="23:14"><if pos:start="21:5" pos:end="23:14">if<condition pos:start="21:7" pos:end="21:90">( <expr pos:start="21:9" pos:end="21:88"><name pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:9">h</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:22">slice_table</name><index pos:start="21:23" pos:end="21:30">[<expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">mbb_xy</name></expr>]</index></name> <operator pos:start="21:32" pos:end="21:33">==</operator> <name pos:start="21:35" pos:end="21:46"><name pos:start="21:35" pos:end="21:35">h</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:46">slice_num</name></name> <operator pos:start="21:48" pos:end="21:49">&amp;&amp;</operator> <name pos:start="21:51" pos:end="21:83"><name pos:start="21:51" pos:end="21:51">h</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:75">chroma_pred_mode_table</name><index pos:start="21:76" pos:end="21:83">[<expr pos:start="21:77" pos:end="21:82"><name pos:start="21:77" pos:end="21:82">mbb_xy</name></expr>]</index></name> <operator pos:start="21:85" pos:end="21:86">!=</operator> <literal type="number" pos:start="21:88" pos:end="21:88">0</literal></expr> )</condition><block type="pseudo" pos:start="23:9" pos:end="23:14"><block_content pos:start="23:9" pos:end="23:14">

        <expr_stmt pos:start="23:9" pos:end="23:14"><expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:11">ctx</name><operator pos:start="23:12" pos:end="23:13">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="29:17"><if pos:start="27:5" pos:end="29:17">if<condition pos:start="27:7" pos:end="27:62">( <expr pos:start="27:9" pos:end="27:60"><call pos:start="27:9" pos:end="27:55"><name pos:start="27:9" pos:end="27:17">get_cabac</name><argument_list pos:start="27:18" pos:end="27:55">( <argument pos:start="27:20" pos:end="27:28"><expr pos:start="27:20" pos:end="27:28"><operator pos:start="27:20" pos:end="27:20">&amp;</operator><name pos:start="27:21" pos:end="27:28"><name pos:start="27:21" pos:end="27:21">h</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:28">cabac</name></name></expr></argument>, <argument pos:start="27:31" pos:end="27:53"><expr pos:start="27:31" pos:end="27:53"><operator pos:start="27:31" pos:end="27:31">&amp;</operator><name pos:start="27:32" pos:end="27:53"><name pos:start="27:32" pos:end="27:32">h</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:45">cabac_state</name><index pos:start="27:46" pos:end="27:53">[<expr pos:start="27:47" pos:end="27:52"><literal type="number" pos:start="27:47" pos:end="27:49">64</literal><operator pos:start="27:49" pos:end="27:49">+</operator><name pos:start="27:50" pos:end="27:52">ctx</name></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="27:57" pos:end="27:58">==</operator> <literal type="number" pos:start="27:60" pos:end="27:60">0</literal></expr> )</condition><block type="pseudo" pos:start="29:9" pos:end="29:17"><block_content pos:start="29:9" pos:end="29:17">

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="35:17"><if pos:start="33:5" pos:end="35:17">if<condition pos:start="33:7" pos:end="33:60">( <expr pos:start="33:9" pos:end="33:58"><call pos:start="33:9" pos:end="33:53"><name pos:start="33:9" pos:end="33:17">get_cabac</name><argument_list pos:start="33:18" pos:end="33:53">( <argument pos:start="33:20" pos:end="33:28"><expr pos:start="33:20" pos:end="33:28"><operator pos:start="33:20" pos:end="33:20">&amp;</operator><name pos:start="33:21" pos:end="33:28"><name pos:start="33:21" pos:end="33:21">h</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:28">cabac</name></name></expr></argument>, <argument pos:start="33:31" pos:end="33:51"><expr pos:start="33:31" pos:end="33:51"><operator pos:start="33:31" pos:end="33:31">&amp;</operator><name pos:start="33:32" pos:end="33:51"><name pos:start="33:32" pos:end="33:32">h</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:45">cabac_state</name><index pos:start="33:46" pos:end="33:51">[<expr pos:start="33:47" pos:end="33:50"><literal type="number" pos:start="33:47" pos:end="33:49">64</literal><operator pos:start="33:49" pos:end="33:49">+</operator><literal type="number" pos:start="33:50" pos:end="33:50">3</literal></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="33:55" pos:end="33:56">==</operator> <literal type="number" pos:start="33:58" pos:end="33:58">0</literal></expr> )</condition><block type="pseudo" pos:start="35:9" pos:end="35:17"><block_content pos:start="35:9" pos:end="35:17">

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="43:17"><if pos:start="37:5" pos:end="39:17">if<condition pos:start="37:7" pos:end="37:60">( <expr pos:start="37:9" pos:end="37:58"><call pos:start="37:9" pos:end="37:53"><name pos:start="37:9" pos:end="37:17">get_cabac</name><argument_list pos:start="37:18" pos:end="37:53">( <argument pos:start="37:20" pos:end="37:28"><expr pos:start="37:20" pos:end="37:28"><operator pos:start="37:20" pos:end="37:20">&amp;</operator><name pos:start="37:21" pos:end="37:28"><name pos:start="37:21" pos:end="37:21">h</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:28">cabac</name></name></expr></argument>, <argument pos:start="37:31" pos:end="37:51"><expr pos:start="37:31" pos:end="37:51"><operator pos:start="37:31" pos:end="37:31">&amp;</operator><name pos:start="37:32" pos:end="37:51"><name pos:start="37:32" pos:end="37:32">h</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:45">cabac_state</name><index pos:start="37:46" pos:end="37:51">[<expr pos:start="37:47" pos:end="37:50"><literal type="number" pos:start="37:47" pos:end="37:49">64</literal><operator pos:start="37:49" pos:end="37:49">+</operator><literal type="number" pos:start="37:50" pos:end="37:50">3</literal></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="37:55" pos:end="37:56">==</operator> <literal type="number" pos:start="37:58" pos:end="37:58">0</literal></expr> )</condition><block type="pseudo" pos:start="39:9" pos:end="39:17"><block_content pos:start="39:9" pos:end="39:17">

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">2</literal></expr>;</return></block_content></block></if>

    <else pos:start="41:5" pos:end="43:17">else<block type="pseudo" pos:start="43:9" pos:end="43:17"><block_content pos:start="43:9" pos:end="43:17">

        <return pos:start="43:9" pos:end="43:17">return <expr pos:start="43:16" pos:end="43:16"><literal type="number" pos:start="43:16" pos:end="43:16">3</literal></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
