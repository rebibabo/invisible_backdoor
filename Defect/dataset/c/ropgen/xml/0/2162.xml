<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2162.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">virtio_ccw_net_realize</name><parameter_list pos:start="1:35" pos:end="1:74">(<parameter pos:start="1:36" pos:end="1:59"><decl pos:start="1:36" pos:end="1:59"><type pos:start="1:36" pos:end="1:59"><name pos:start="1:36" pos:end="1:50">VirtioCcwDevice</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:59">ccw_dev</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:73"><decl pos:start="1:62" pos:end="1:73"><type pos:start="1:62" pos:end="1:73"><name pos:start="1:62" pos:end="1:66">Error</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier><modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:73">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:5">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">qdev</name> <init pos:start="5:23" pos:end="5:39">= <expr pos:start="5:25" pos:end="5:39"><call pos:start="5:25" pos:end="5:39"><name pos:start="5:25" pos:end="5:30">DEVICE</name><argument_list pos:start="5:31" pos:end="5:39">(<argument pos:start="5:32" pos:end="5:38"><expr pos:start="5:32" pos:end="5:38"><name pos:start="5:32" pos:end="5:38">ccw_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VirtIONetCcw</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">dev</name> <init pos:start="7:23" pos:end="7:47">= <expr pos:start="7:25" pos:end="7:47"><call pos:start="7:25" pos:end="7:47"><name pos:start="7:25" pos:end="7:38">VIRTIO_NET_CCW</name><argument_list pos:start="7:39" pos:end="7:47">(<argument pos:start="7:40" pos:end="7:46"><expr pos:start="7:40" pos:end="7:46"><name pos:start="7:40" pos:end="7:46">ccw_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DeviceState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:21">vdev</name> <init pos:start="9:23" pos:end="9:42">= <expr pos:start="9:25" pos:end="9:42"><call pos:start="9:25" pos:end="9:42"><name pos:start="9:25" pos:end="9:30">DEVICE</name><argument_list pos:start="9:31" pos:end="9:42">(<argument pos:start="9:32" pos:end="9:41"><expr pos:start="9:32" pos:end="9:41"><operator pos:start="9:32" pos:end="9:32">&amp;</operator><name pos:start="9:33" pos:end="9:41"><name pos:start="9:33" pos:end="9:35">dev</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:41">vdev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:14">err</name> <init pos:start="11:16" pos:end="11:21">= <expr pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:69"><expr pos:start="15:5" pos:end="17:68"><call pos:start="15:5" pos:end="17:68"><name pos:start="15:5" pos:end="15:33">virtio_net_set_netclient_name</name><argument_list pos:start="15:34" pos:end="17:68">(<argument pos:start="15:35" pos:end="15:44"><expr pos:start="15:35" pos:end="15:44"><operator pos:start="15:35" pos:end="15:35">&amp;</operator><name pos:start="15:36" pos:end="15:44"><name pos:start="15:36" pos:end="15:38">dev</name><operator pos:start="15:39" pos:end="15:40">-&gt;</operator><name pos:start="15:41" pos:end="15:44">vdev</name></name></expr></argument>, <argument pos:start="15:47" pos:end="15:54"><expr pos:start="15:47" pos:end="15:54"><name pos:start="15:47" pos:end="15:54"><name pos:start="15:47" pos:end="15:50">qdev</name><operator pos:start="15:51" pos:end="15:52">-&gt;</operator><name pos:start="15:53" pos:end="15:54">id</name></name></expr></argument>,

                                  <argument pos:start="17:35" pos:end="17:67"><expr pos:start="17:35" pos:end="17:67"><call pos:start="17:35" pos:end="17:67"><name pos:start="17:35" pos:end="17:53">object_get_typename</name><argument_list pos:start="17:54" pos:end="17:67">(<argument pos:start="17:55" pos:end="17:66"><expr pos:start="17:55" pos:end="17:66"><call pos:start="17:55" pos:end="17:66"><name pos:start="17:55" pos:end="17:60">OBJECT</name><argument_list pos:start="17:61" pos:end="17:66">(<argument pos:start="17:62" pos:end="17:65"><expr pos:start="17:62" pos:end="17:65"><name pos:start="17:62" pos:end="17:65">qdev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:50"><expr pos:start="19:5" pos:end="19:49"><call pos:start="19:5" pos:end="19:49"><name pos:start="19:5" pos:end="19:23">qdev_set_parent_bus</name><argument_list pos:start="19:24" pos:end="19:49">(<argument pos:start="19:25" pos:end="19:28"><expr pos:start="19:25" pos:end="19:28"><name pos:start="19:25" pos:end="19:28">vdev</name></expr></argument>, <argument pos:start="19:31" pos:end="19:48"><expr pos:start="19:31" pos:end="19:48"><call pos:start="19:31" pos:end="19:48"><name pos:start="19:31" pos:end="19:33">BUS</name><argument_list pos:start="19:34" pos:end="19:48">(<argument pos:start="19:35" pos:end="19:47"><expr pos:start="19:35" pos:end="19:47"><operator pos:start="19:35" pos:end="19:35">&amp;</operator><name pos:start="19:36" pos:end="19:47"><name pos:start="19:36" pos:end="19:42">ccw_dev</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:47">bus</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:67"><expr pos:start="21:5" pos:end="21:66"><call pos:start="21:5" pos:end="21:66"><name pos:start="21:5" pos:end="21:28">object_property_set_bool</name><argument_list pos:start="21:29" pos:end="21:66">(<argument pos:start="21:30" pos:end="21:41"><expr pos:start="21:30" pos:end="21:41"><call pos:start="21:30" pos:end="21:41"><name pos:start="21:30" pos:end="21:35">OBJECT</name><argument_list pos:start="21:36" pos:end="21:41">(<argument pos:start="21:37" pos:end="21:40"><expr pos:start="21:37" pos:end="21:40"><name pos:start="21:37" pos:end="21:40">vdev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:44" pos:end="21:47"><expr pos:start="21:44" pos:end="21:47"><name pos:start="21:44" pos:end="21:47">true</name></expr></argument>, <argument pos:start="21:50" pos:end="21:59"><expr pos:start="21:50" pos:end="21:59"><literal type="string" pos:start="21:50" pos:end="21:59">"realized"</literal></expr></argument>, <argument pos:start="21:62" pos:end="21:65"><expr pos:start="21:62" pos:end="21:65"><operator pos:start="21:62" pos:end="21:62">&amp;</operator><name pos:start="21:63" pos:end="21:65">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">err</name></expr>)</condition> <block pos:start="23:14" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:35">

        <expr_stmt pos:start="25:9" pos:end="25:35"><expr pos:start="25:9" pos:end="25:34"><call pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:23">error_propagate</name><argument_list pos:start="25:24" pos:end="25:34">(<argument pos:start="25:25" pos:end="25:28"><expr pos:start="25:25" pos:end="25:28"><name pos:start="25:25" pos:end="25:28">errp</name></expr></argument>, <argument pos:start="25:31" pos:end="25:33"><expr pos:start="25:31" pos:end="25:33"><name pos:start="25:31" pos:end="25:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
