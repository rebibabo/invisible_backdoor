<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19304.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">xvid_strip_vol_header</name><parameter_list pos:start="1:33" pos:end="7:41">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:31"><decl pos:start="3:19" pos:end="3:31"><type pos:start="3:19" pos:end="3:31"><name pos:start="3:19" pos:end="3:26">AVPacket</name> <modifier pos:start="3:28" pos:end="3:28">*</modifier></type><name pos:start="3:29" pos:end="3:31">pkt</name></decl></parameter>,

                  <parameter pos:start="5:19" pos:end="5:41"><decl pos:start="5:19" pos:end="5:41"><type pos:start="5:19" pos:end="5:41"><name pos:start="5:19" pos:end="5:26">unsigned</name> <name pos:start="5:28" pos:end="5:30">int</name></type> <name pos:start="5:32" pos:end="5:41">header_len</name></decl></parameter>,

                  <parameter pos:start="7:19" pos:end="7:40"><decl pos:start="7:19" pos:end="7:40"><type pos:start="7:19" pos:end="7:40"><name pos:start="7:19" pos:end="7:26">unsigned</name> <name pos:start="7:28" pos:end="7:30">int</name></type> <name pos:start="7:32" pos:end="7:40">frame_len</name></decl></parameter>)</parameter_list> <block pos:start="7:43" pos:end="59:1">{<block_content pos:start="9:5" pos:end="57:13">

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">vo_len</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>, <decl pos:start="9:21" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:21">i</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="29:5">for<control pos:start="13:8" pos:end="13:41">( <init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:35"><expr pos:start="13:17" pos:end="13:34"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <name pos:start="13:21" pos:end="13:30">header_len</name> <operator pos:start="13:32" pos:end="13:32">-</operator> <literal type="number" pos:start="13:34" pos:end="13:34">3</literal></expr>;</condition> <incr pos:start="13:37" pos:end="13:39"><expr pos:start="13:37" pos:end="13:39"><name pos:start="13:37" pos:end="13:37">i</name><operator pos:start="13:38" pos:end="13:39">++</operator></expr></incr> )</control> <block pos:start="13:43" pos:end="29:5">{<block_content pos:start="15:9" pos:end="27:9">

        <if_stmt pos:start="15:9" pos:end="27:9"><if pos:start="15:9" pos:end="27:9">if<condition pos:start="15:11" pos:end="21:36">( <expr pos:start="15:13" pos:end="21:34"><name pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:15">pkt</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:21">data</name><index pos:start="15:22" pos:end="15:24">[<expr pos:start="15:23" pos:end="15:23"><name pos:start="15:23" pos:end="15:23">i</name></expr>]</index></name> <operator pos:start="15:26" pos:end="15:27">==</operator> <literal type="number" pos:start="15:29" pos:end="15:32">0x00</literal> <operator pos:start="15:34" pos:end="15:35">&amp;&amp;</operator>

            <name pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:15">pkt</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:21">data</name><index pos:start="17:22" pos:end="17:26">[<expr pos:start="17:23" pos:end="17:25"><name pos:start="17:23" pos:end="17:23">i</name><operator pos:start="17:24" pos:end="17:24">+</operator><literal type="number" pos:start="17:25" pos:end="17:25">1</literal></expr>]</index></name> <operator pos:start="17:28" pos:end="17:29">==</operator> <literal type="number" pos:start="17:31" pos:end="17:34">0x00</literal> <operator pos:start="17:36" pos:end="17:37">&amp;&amp;</operator>

            <name pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:15">pkt</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:21">data</name><index pos:start="19:22" pos:end="19:26">[<expr pos:start="19:23" pos:end="19:25"><name pos:start="19:23" pos:end="19:23">i</name><operator pos:start="19:24" pos:end="19:24">+</operator><literal type="number" pos:start="19:25" pos:end="19:25">2</literal></expr>]</index></name> <operator pos:start="19:28" pos:end="19:29">==</operator> <literal type="number" pos:start="19:31" pos:end="19:34">0x01</literal> <operator pos:start="19:36" pos:end="19:37">&amp;&amp;</operator>

            <name pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:15">pkt</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:21">data</name><index pos:start="21:22" pos:end="21:26">[<expr pos:start="21:23" pos:end="21:25"><name pos:start="21:23" pos:end="21:23">i</name><operator pos:start="21:24" pos:end="21:24">+</operator><literal type="number" pos:start="21:25" pos:end="21:25">3</literal></expr>]</index></name> <operator pos:start="21:28" pos:end="21:29">==</operator> <literal type="number" pos:start="21:31" pos:end="21:34">0xB6</literal></expr> )</condition> <block pos:start="21:38" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:18">

            <expr_stmt pos:start="23:13" pos:end="23:23"><expr pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:18">vo_len</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:22">i</name></expr>;</expr_stmt>

            <break pos:start="25:13" pos:end="25:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="33:5" pos:end="55:5"><if pos:start="33:5" pos:end="55:5">if<condition pos:start="33:7" pos:end="33:20">( <expr pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:14">vo_len</name> <operator pos:start="33:16" pos:end="33:16">&gt;</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr> )</condition> <block pos:start="33:22" pos:end="55:5">{<block_content pos:start="37:9" pos:end="53:39">

        <comment type="block" pos:start="35:9" pos:end="35:56">/* We need to store the header, so extract it */</comment>

        <if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="45:9">if<condition pos:start="37:11" pos:end="37:38">( <expr pos:start="37:13" pos:end="37:36"><name pos:start="37:13" pos:end="37:28"><name pos:start="37:13" pos:end="37:17">avctx</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:28">extradata</name></name> <operator pos:start="37:30" pos:end="37:31">==</operator> <name pos:start="37:33" pos:end="37:36">NULL</name></expr> )</condition> <block pos:start="37:40" pos:end="45:9">{<block_content pos:start="39:13" pos:end="43:43">

            <expr_stmt pos:start="39:13" pos:end="39:49"><expr pos:start="39:13" pos:end="39:48"><name pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:17">avctx</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:28">extradata</name></name> <operator pos:start="39:30" pos:end="39:30">=</operator> <call pos:start="39:32" pos:end="39:48"><name pos:start="39:32" pos:end="39:40">av_malloc</name><argument_list pos:start="39:41" pos:end="39:48">(<argument pos:start="39:42" pos:end="39:47"><expr pos:start="39:42" pos:end="39:47"><name pos:start="39:42" pos:end="39:47">vo_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:56"><expr pos:start="41:13" pos:end="41:55"><call pos:start="41:13" pos:end="41:55"><name pos:start="41:13" pos:end="41:18">memcpy</name><argument_list pos:start="41:19" pos:end="41:55">(<argument pos:start="41:20" pos:end="41:35"><expr pos:start="41:20" pos:end="41:35"><name pos:start="41:20" pos:end="41:35"><name pos:start="41:20" pos:end="41:24">avctx</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:35">extradata</name></name></expr></argument>, <argument pos:start="41:38" pos:end="41:46"><expr pos:start="41:38" pos:end="41:46"><name pos:start="41:38" pos:end="41:46"><name pos:start="41:38" pos:end="41:40">pkt</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:46">data</name></name></expr></argument>, <argument pos:start="41:49" pos:end="41:54"><expr pos:start="41:49" pos:end="41:54"><name pos:start="41:49" pos:end="41:54">vo_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:43"><expr pos:start="43:13" pos:end="43:42"><name pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:17">avctx</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:33">extradata_size</name></name> <operator pos:start="43:35" pos:end="43:35">=</operator> <name pos:start="43:37" pos:end="43:42">vo_len</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="47:9" pos:end="49:40">/* Less dangerous now, memmove properly copies the two

           chunks of overlapping data */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:67"><expr pos:start="51:9" pos:end="51:66"><call pos:start="51:9" pos:end="51:66"><name pos:start="51:9" pos:end="51:15">memmove</name><argument_list pos:start="51:16" pos:end="51:66">(<argument pos:start="51:17" pos:end="51:25"><expr pos:start="51:17" pos:end="51:25"><name pos:start="51:17" pos:end="51:25"><name pos:start="51:17" pos:end="51:19">pkt</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:25">data</name></name></expr></argument>, <argument pos:start="51:28" pos:end="51:45"><expr pos:start="51:28" pos:end="51:45"><operator pos:start="51:28" pos:end="51:28">&amp;</operator><name pos:start="51:29" pos:end="51:45"><name pos:start="51:29" pos:end="51:31">pkt</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:37">data</name><index pos:start="51:38" pos:end="51:45">[<expr pos:start="51:39" pos:end="51:44"><name pos:start="51:39" pos:end="51:44">vo_len</name></expr>]</index></name></expr></argument>, <argument pos:start="51:48" pos:end="51:65"><expr pos:start="51:48" pos:end="51:65"><name pos:start="51:48" pos:end="51:56">frame_len</name> <operator pos:start="51:58" pos:end="51:58">-</operator> <name pos:start="51:60" pos:end="51:65">vo_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:39"><expr pos:start="53:9" pos:end="53:38"><name pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:11">pkt</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:17">size</name></name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:29">frame_len</name> <operator pos:start="53:31" pos:end="53:31">-</operator> <name pos:start="53:33" pos:end="53:38">vo_len</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
