<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22180.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">qemu_boot_set</name><parameter_list pos:start="1:19" pos:end="1:56">(<parameter pos:start="1:20" pos:end="1:41"><decl pos:start="1:20" pos:end="1:41"><type pos:start="1:20" pos:end="1:41"><specifier pos:start="1:20" pos:end="1:24">const</specifier> <name pos:start="1:26" pos:end="1:29">char</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:41">boot_order</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:48">Error</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier><modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:20">local_err</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="17:5">if <condition pos:start="9:8" pos:end="9:26">(<expr pos:start="9:9" pos:end="9:25"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:25">boot_set_handler</name></expr>)</condition> <block pos:start="9:28" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:15">

        <expr_stmt pos:start="11:9" pos:end="13:47"><expr pos:start="11:9" pos:end="13:46"><call pos:start="11:9" pos:end="13:46"><name pos:start="11:9" pos:end="11:18">error_setg</name><argument_list pos:start="11:19" pos:end="13:46">(<argument pos:start="11:20" pos:end="11:23"><expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">errp</name></expr></argument>, <argument pos:start="11:26" pos:end="13:45"><expr pos:start="11:26" pos:end="13:45"><literal type="string" pos:start="11:26" pos:end="11:74">"no function defined to set boot device list for"</literal>

                         <literal type="string" pos:start="13:26" pos:end="13:45">" this architecture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><call pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:24">validate_bootdevices</name><argument_list pos:start="21:25" pos:end="21:48">(<argument pos:start="21:26" pos:end="21:35"><expr pos:start="21:26" pos:end="21:35"><name pos:start="21:26" pos:end="21:35">boot_order</name></expr></argument>, <argument pos:start="21:38" pos:end="21:47"><expr pos:start="21:38" pos:end="21:47"><operator pos:start="21:38" pos:end="21:38">&amp;</operator><name pos:start="21:39" pos:end="21:47">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:18">(<expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:17">local_err</name></expr>)</condition> <block pos:start="23:20" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:15">

        <expr_stmt pos:start="25:9" pos:end="25:41"><expr pos:start="25:9" pos:end="25:40"><call pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:23">error_propagate</name><argument_list pos:start="25:24" pos:end="25:40">(<argument pos:start="25:25" pos:end="25:28"><expr pos:start="25:25" pos:end="25:28"><name pos:start="25:25" pos:end="25:28">errp</name></expr></argument>, <argument pos:start="25:31" pos:end="25:39"><expr pos:start="25:31" pos:end="25:39"><name pos:start="25:31" pos:end="25:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:54">(<expr pos:start="33:9" pos:end="33:53"><call pos:start="33:9" pos:end="33:53"><name pos:start="33:9" pos:end="33:24">boot_set_handler</name><argument_list pos:start="33:25" pos:end="33:53">(<argument pos:start="33:26" pos:end="33:40"><expr pos:start="33:26" pos:end="33:40"><name pos:start="33:26" pos:end="33:40">boot_set_opaque</name></expr></argument>, <argument pos:start="33:43" pos:end="33:52"><expr pos:start="33:43" pos:end="33:52"><name pos:start="33:43" pos:end="33:52">boot_order</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:56" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:15">

        <expr_stmt pos:start="35:9" pos:end="35:60"><expr pos:start="35:9" pos:end="35:59"><call pos:start="35:9" pos:end="35:59"><name pos:start="35:9" pos:end="35:18">error_setg</name><argument_list pos:start="35:19" pos:end="35:59">(<argument pos:start="35:20" pos:end="35:23"><expr pos:start="35:20" pos:end="35:23"><name pos:start="35:20" pos:end="35:23">errp</name></expr></argument>, <argument pos:start="35:26" pos:end="35:58"><expr pos:start="35:26" pos:end="35:58"><literal type="string" pos:start="35:26" pos:end="35:58">"setting boot device list failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
