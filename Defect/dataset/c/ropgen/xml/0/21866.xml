<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21866.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">test_validate_fail_union</name><parameter_list pos:start="1:37" pos:end="3:57">(<parameter pos:start="1:38" pos:end="1:63"><decl pos:start="1:38" pos:end="1:63"><type pos:start="1:38" pos:end="1:63"><name pos:start="1:38" pos:end="1:57">TestInputVisitorData</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">data</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:56"><decl pos:start="3:39" pos:end="3:56"><type pos:start="3:39" pos:end="3:56"><specifier pos:start="3:39" pos:end="3:43">const</specifier> <name pos:start="3:45" pos:end="3:48">void</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:56">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="23:32">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">UserDefUnion</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">tmp</name> <init pos:start="7:23" pos:end="7:28">= <expr pos:start="7:25" pos:end="7:28"><name pos:start="7:25" pos:end="7:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">Visitor</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">v</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:80"><expr pos:start="15:5" pos:end="15:79"><name pos:start="15:5" pos:end="15:5">v</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <call pos:start="15:9" pos:end="15:79"><name pos:start="15:9" pos:end="15:26">validate_test_init</name><argument_list pos:start="15:27" pos:end="15:79">(<argument pos:start="15:28" pos:end="15:31"><expr pos:start="15:28" pos:end="15:31"><name pos:start="15:28" pos:end="15:31">data</name></expr></argument>, <argument pos:start="15:34" pos:end="15:78"><expr pos:start="15:34" pos:end="15:78"><literal type="string" pos:start="15:34" pos:end="15:78">"{ 'type': 'b', 'data' : { 'integer': 42 } }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:49"><expr pos:start="19:5" pos:end="19:48"><call pos:start="19:5" pos:end="19:48"><name pos:start="19:5" pos:end="19:27">visit_type_UserDefUnion</name><argument_list pos:start="19:28" pos:end="19:48">(<argument pos:start="19:29" pos:end="19:29"><expr pos:start="19:29" pos:end="19:29"><name pos:start="19:29" pos:end="19:29">v</name></expr></argument>, <argument pos:start="19:32" pos:end="19:35"><expr pos:start="19:32" pos:end="19:35"><operator pos:start="19:32" pos:end="19:32">&amp;</operator><name pos:start="19:33" pos:end="19:35">tmp</name></expr></argument>, <argument pos:start="19:38" pos:end="19:41"><expr pos:start="19:38" pos:end="19:41"><name pos:start="19:38" pos:end="19:41">NULL</name></expr></argument>, <argument pos:start="19:44" pos:end="19:47"><expr pos:start="19:44" pos:end="19:47"><operator pos:start="19:44" pos:end="19:44">&amp;</operator><name pos:start="19:45" pos:end="19:47">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><call pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:12">g_assert</name><argument_list pos:start="21:13" pos:end="21:17">(<argument pos:start="21:14" pos:end="21:16"><expr pos:start="21:14" pos:end="21:16"><name pos:start="21:14" pos:end="21:16">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><call pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:26">qapi_free_UserDefUnion</name><argument_list pos:start="23:27" pos:end="23:31">(<argument pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:30">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
