<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20571.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19"><name pos:start="1:8" pos:end="1:13">struct</name> <name pos:start="1:15" pos:end="1:19">ioreq</name></name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:32">ioreq_start</name><parameter_list pos:start="1:33" pos:end="1:58">(<parameter pos:start="1:34" pos:end="1:57"><decl pos:start="1:34" pos:end="1:57"><type pos:start="1:34" pos:end="1:57"><name pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:49">XenBlkDev</name></name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:57">blkdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:17">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:16">ioreq</name></name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:23">ioreq</name> <init pos:start="5:25" pos:end="5:30">= <expr pos:start="5:27" pos:end="5:30"><name pos:start="5:27" pos:end="5:30">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="35:5"><if pos:start="9:5" pos:end="25:5">if <condition pos:start="9:8" pos:end="9:38">(<expr pos:start="9:9" pos:end="9:37"><call pos:start="9:9" pos:end="9:37"><name pos:start="9:9" pos:end="9:18">LIST_EMPTY</name><argument_list pos:start="9:19" pos:end="9:37">(<argument pos:start="9:20" pos:end="9:36"><expr pos:start="9:20" pos:end="9:36"><operator pos:start="9:20" pos:end="9:20">&amp;</operator><name pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:26">blkdev</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:36">freelist</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:40" pos:end="25:5">{<block_content pos:start="11:9" pos:end="23:67">

	<if_stmt pos:start="11:9" pos:end="13:21"><if pos:start="11:9" pos:end="13:21">if <condition pos:start="11:12" pos:end="11:51">(<expr pos:start="11:13" pos:end="11:50"><name pos:start="11:13" pos:end="11:34"><name pos:start="11:13" pos:end="11:18">blkdev</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:34">requests_total</name></name> <operator pos:start="11:36" pos:end="11:37">&gt;=</operator> <name pos:start="11:39" pos:end="11:50">max_requests</name></expr>)</condition><block type="pseudo" pos:start="13:13" pos:end="13:21"><block_content pos:start="13:13" pos:end="13:21">

	    <goto pos:start="13:13" pos:end="13:21">goto <name pos:start="13:18" pos:end="13:20">out</name>;</goto></block_content></block></if></if_stmt>

	<comment type="block" pos:start="15:9" pos:end="15:33">/* allocate new struct */</comment>

	<expr_stmt pos:start="17:9" pos:end="17:45"><expr pos:start="17:9" pos:end="17:44"><name pos:start="17:9" pos:end="17:13">ioreq</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:44"><name pos:start="17:17" pos:end="17:28">qemu_mallocz</name><argument_list pos:start="17:29" pos:end="17:44">(<argument pos:start="17:30" pos:end="17:43"><expr pos:start="17:30" pos:end="17:43"><sizeof pos:start="17:30" pos:end="17:43">sizeof<argument_list pos:start="17:36" pos:end="17:43">(<argument pos:start="17:37" pos:end="17:42"><expr pos:start="17:37" pos:end="17:42"><operator pos:start="17:37" pos:end="17:37">*</operator><name pos:start="17:38" pos:end="17:42">ioreq</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="19:9" pos:end="19:31"><expr pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:13">ioreq</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:21">blkdev</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <name pos:start="19:25" pos:end="19:30">blkdev</name></expr>;</expr_stmt>

	<expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:14">blkdev</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:30">requests_total</name></name><operator pos:start="21:31" pos:end="21:32">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:67"><expr pos:start="23:9" pos:end="23:66"><call pos:start="23:9" pos:end="23:66"><name pos:start="23:9" pos:end="23:23">qemu_iovec_init</name><argument_list pos:start="23:24" pos:end="23:66">(<argument pos:start="23:25" pos:end="23:33"><expr pos:start="23:25" pos:end="23:33"><operator pos:start="23:25" pos:end="23:25">&amp;</operator><name pos:start="23:26" pos:end="23:33"><name pos:start="23:26" pos:end="23:30">ioreq</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:33">v</name></name></expr></argument>, <argument pos:start="23:36" pos:end="23:65"><expr pos:start="23:36" pos:end="23:65"><name pos:start="23:36" pos:end="23:65">BLKIF_MAX_SEGMENTS_PER_REQUEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="35:5">else <block pos:start="25:12" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:36">

	<comment type="block" pos:start="27:9" pos:end="27:35">/* get one from freelist */</comment>

	<expr_stmt pos:start="29:9" pos:end="29:46"><expr pos:start="29:9" pos:end="29:45"><name pos:start="29:9" pos:end="29:13">ioreq</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:45"><name pos:start="29:17" pos:end="29:26">LIST_FIRST</name><argument_list pos:start="29:27" pos:end="29:45">(<argument pos:start="29:28" pos:end="29:44"><expr pos:start="29:28" pos:end="29:44"><operator pos:start="29:28" pos:end="29:28">&amp;</operator><name pos:start="29:29" pos:end="29:44"><name pos:start="29:29" pos:end="29:34">blkdev</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:44">freelist</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><call pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:19">LIST_REMOVE</name><argument_list pos:start="31:20" pos:end="31:32">(<argument pos:start="31:21" pos:end="31:25"><expr pos:start="31:21" pos:end="31:25"><name pos:start="31:21" pos:end="31:25">ioreq</name></expr></argument>, <argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><name pos:start="31:28" pos:end="31:31">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:36"><expr pos:start="33:9" pos:end="33:35"><call pos:start="33:9" pos:end="33:35"><name pos:start="33:9" pos:end="33:24">qemu_iovec_reset</name><argument_list pos:start="33:25" pos:end="33:35">(<argument pos:start="33:26" pos:end="33:34"><expr pos:start="33:26" pos:end="33:34"><operator pos:start="33:26" pos:end="33:26">&amp;</operator><name pos:start="33:27" pos:end="33:34"><name pos:start="33:27" pos:end="33:31">ioreq</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:34">v</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:53"><expr pos:start="37:5" pos:end="37:52"><call pos:start="37:5" pos:end="37:52"><name pos:start="37:5" pos:end="37:20">LIST_INSERT_HEAD</name><argument_list pos:start="37:21" pos:end="37:52">(<argument pos:start="37:22" pos:end="37:38"><expr pos:start="37:22" pos:end="37:38"><operator pos:start="37:22" pos:end="37:22">&amp;</operator><name pos:start="37:23" pos:end="37:38"><name pos:start="37:23" pos:end="37:28">blkdev</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:38">inflight</name></name></expr></argument>, <argument pos:start="37:41" pos:end="37:45"><expr pos:start="37:41" pos:end="37:45"><name pos:start="37:41" pos:end="37:45">ioreq</name></expr></argument>, <argument pos:start="37:48" pos:end="37:51"><expr pos:start="37:48" pos:end="37:51"><name pos:start="37:48" pos:end="37:51">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:32"><expr pos:start="39:5" pos:end="39:31"><name pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:10">blkdev</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:29">requests_inflight</name></name><operator pos:start="39:30" pos:end="39:31">++</operator></expr>;</expr_stmt>



<label pos:start="43:1" pos:end="43:4"><name pos:start="43:1" pos:end="43:3">out</name>:</label>

    <return pos:start="45:5" pos:end="45:17">return <expr pos:start="45:12" pos:end="45:16"><name pos:start="45:12" pos:end="45:16">ioreq</name></expr>;</return>

</block_content>}</block></function>
</unit>
