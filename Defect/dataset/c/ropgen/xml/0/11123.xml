<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11123.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">do_closefd</name><parameter_list pos:start="1:23" pos:end="1:56">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:30">Monitor</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">mon</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:48">QDict</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">qdict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:27">

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:22">fdname</name> <init pos:start="5:24" pos:end="5:55">= <expr pos:start="5:26" pos:end="5:55"><call pos:start="5:26" pos:end="5:55"><name pos:start="5:26" pos:end="5:38">qdict_get_str</name><argument_list pos:start="5:39" pos:end="5:55">(<argument pos:start="5:40" pos:end="5:44"><expr pos:start="5:40" pos:end="5:44"><name pos:start="5:40" pos:end="5:44">qdict</name></expr></argument>, <argument pos:start="5:47" pos:end="5:54"><expr pos:start="5:47" pos:end="5:54"><literal type="string" pos:start="5:47" pos:end="5:54">"fdname"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">mon_fd_t</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:19">monfd</name></decl>;</decl_stmt>



    <macro pos:start="11:5" pos:end="11:40"><name pos:start="11:5" pos:end="11:16">LIST_FOREACH</name><argument_list pos:start="11:17" pos:end="11:40">(<argument pos:start="11:18" pos:end="11:22">monfd</argument>, <argument pos:start="11:25" pos:end="11:33">&amp;mon-&gt;fds</argument>, <argument pos:start="11:36" pos:end="11:39">next</argument>)</argument_list></macro> <block pos:start="11:42" pos:end="31:5">{<block_content pos:start="13:9" pos:end="29:15">

        <if_stmt pos:start="13:9" pos:end="17:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:45">(<expr pos:start="13:13" pos:end="13:44"><call pos:start="13:13" pos:end="13:39"><name pos:start="13:13" pos:end="13:18">strcmp</name><argument_list pos:start="13:19" pos:end="13:39">(<argument pos:start="13:20" pos:end="13:30"><expr pos:start="13:20" pos:end="13:30"><name pos:start="13:20" pos:end="13:30"><name pos:start="13:20" pos:end="13:24">monfd</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:30">name</name></name></expr></argument>, <argument pos:start="13:33" pos:end="13:38"><expr pos:start="13:33" pos:end="13:38"><name pos:start="13:33" pos:end="13:38">fdname</name></expr></argument>)</argument_list></call> <operator pos:start="13:41" pos:end="13:42">!=</operator> <literal type="number" pos:start="13:44" pos:end="13:44">0</literal></expr>)</condition> <block pos:start="13:47" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:21">

            <continue pos:start="15:13" pos:end="15:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><call pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:19">LIST_REMOVE</name><argument_list pos:start="21:20" pos:end="21:32">(<argument pos:start="21:21" pos:end="21:25"><expr pos:start="21:21" pos:end="21:25"><name pos:start="21:21" pos:end="21:25">monfd</name></expr></argument>, <argument pos:start="21:28" pos:end="21:31"><expr pos:start="21:28" pos:end="21:31"><name pos:start="21:28" pos:end="21:31">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:25"><expr pos:start="23:9" pos:end="23:24"><call pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:13">close</name><argument_list pos:start="23:14" pos:end="23:24">(<argument pos:start="23:15" pos:end="23:23"><expr pos:start="23:15" pos:end="23:23"><name pos:start="23:15" pos:end="23:23"><name pos:start="23:15" pos:end="23:19">monfd</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:23">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:31"><expr pos:start="25:9" pos:end="25:30"><call pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:17">qemu_free</name><argument_list pos:start="25:18" pos:end="25:30">(<argument pos:start="25:19" pos:end="25:29"><expr pos:start="25:19" pos:end="25:29"><name pos:start="25:19" pos:end="25:29"><name pos:start="25:19" pos:end="25:23">monfd</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:29">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><call pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:17">qemu_free</name><argument_list pos:start="27:18" pos:end="27:24">(<argument pos:start="27:19" pos:end="27:23"><expr pos:start="27:19" pos:end="27:23"><name pos:start="27:19" pos:end="27:23">monfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block>



    <expr_stmt pos:start="35:5" pos:end="37:27"><expr pos:start="35:5" pos:end="37:26"><call pos:start="35:5" pos:end="37:26"><name pos:start="35:5" pos:end="35:18">monitor_printf</name><argument_list pos:start="35:19" pos:end="37:26">(<argument pos:start="35:20" pos:end="35:22"><expr pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:22">mon</name></expr></argument>, <argument pos:start="35:25" pos:end="35:67"><expr pos:start="35:25" pos:end="35:67"><literal type="string" pos:start="35:25" pos:end="35:67">"Failed to find file descriptor named %s\n"</literal></expr></argument>,

                   <argument pos:start="37:20" pos:end="37:25"><expr pos:start="37:20" pos:end="37:25"><name pos:start="37:20" pos:end="37:25">fdname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
