<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4444.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:6">size_t</name></type> <name pos:start="1:8" pos:end="1:28">slirp_socket_can_recv</name><parameter_list pos:start="1:29" pos:end="1:71">(<parameter pos:start="1:30" pos:end="1:54"><decl pos:start="1:30" pos:end="1:54"><type pos:start="1:30" pos:end="1:54"><name pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:35">struct</name> <name pos:start="1:37" pos:end="1:43">in_addr</name></name></type> <name pos:start="1:45" pos:end="1:54">guest_addr</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:70"><decl pos:start="1:57" pos:end="1:70"><type pos:start="1:57" pos:end="1:70"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:70">guest_port</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:9" pos:end="33:41">

	<decl_stmt pos:start="5:9" pos:end="5:28"><decl pos:start="5:9" pos:end="5:27"><type pos:start="5:9" pos:end="5:20"><name pos:start="5:9" pos:end="5:20"><name pos:start="5:9" pos:end="5:14">struct</name> <name pos:start="5:16" pos:end="5:20">iovec</name></name></type> <name pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:24">iov</name><index pos:start="5:25" pos:end="5:27">[<expr pos:start="5:26" pos:end="5:26"><literal type="number" pos:start="5:26" pos:end="5:26">2</literal></expr>]</index></name></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:26"><decl pos:start="7:9" pos:end="7:25"><type pos:start="7:9" pos:end="7:23"><name pos:start="7:9" pos:end="7:21"><name pos:start="7:9" pos:end="7:14">struct</name> <name pos:start="7:16" pos:end="7:21">socket</name></name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:25">so</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:16">link_up</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



	<expr_stmt pos:start="17:9" pos:end="17:59"><expr pos:start="17:9" pos:end="17:58"><name pos:start="17:9" pos:end="17:10">so</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:58"><name pos:start="17:14" pos:end="17:34">slirp_find_ctl_socket</name><argument_list pos:start="17:35" pos:end="17:58">(<argument pos:start="17:36" pos:end="17:45"><expr pos:start="17:36" pos:end="17:45"><name pos:start="17:36" pos:end="17:45">guest_addr</name></expr></argument>, <argument pos:start="17:48" pos:end="17:57"><expr pos:start="17:48" pos:end="17:57"><name pos:start="17:48" pos:end="17:57">guest_port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<if_stmt pos:start="21:9" pos:end="23:25"><if pos:start="21:9" pos:end="23:25">if <condition pos:start="21:12" pos:end="21:45">(<expr pos:start="21:13" pos:end="21:44"><operator pos:start="21:13" pos:end="21:13">!</operator><name pos:start="21:14" pos:end="21:15">so</name> <operator pos:start="21:17" pos:end="21:18">||</operator> <name pos:start="21:20" pos:end="21:31"><name pos:start="21:20" pos:end="21:21">so</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:31">so_state</name></name> <operator pos:start="21:33" pos:end="21:33">&amp;</operator> <name pos:start="21:35" pos:end="21:44">SS_NOFDREF</name></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="23:25"><block_content pos:start="23:17" pos:end="23:25">

		<return pos:start="23:17" pos:end="23:25">return <expr pos:start="23:24" pos:end="23:24"><literal type="number" pos:start="23:24" pos:end="23:24">0</literal></expr>;</return></block_content></block></if></if_stmt>



	<if_stmt pos:start="27:9" pos:end="29:25"><if pos:start="27:9" pos:end="29:25">if <condition pos:start="27:12" pos:end="27:79">(<expr pos:start="27:13" pos:end="27:78"><operator pos:start="27:13" pos:end="27:13">!</operator><call pos:start="27:14" pos:end="27:29"><name pos:start="27:14" pos:end="27:25">CONN_CANFRCV</name><argument_list pos:start="27:26" pos:end="27:29">(<argument pos:start="27:27" pos:end="27:28"><expr pos:start="27:27" pos:end="27:28"><name pos:start="27:27" pos:end="27:28">so</name></expr></argument>)</argument_list></call> <operator pos:start="27:31" pos:end="27:32">||</operator> <name pos:start="27:34" pos:end="27:49"><name pos:start="27:34" pos:end="27:35">so</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:43">so_snd</name><operator pos:start="27:44" pos:end="27:44">.</operator><name pos:start="27:45" pos:end="27:49">sb_cc</name></name> <operator pos:start="27:51" pos:end="27:52">&gt;=</operator> <operator pos:start="27:54" pos:end="27:54">(</operator><name pos:start="27:55" pos:end="27:75"><name pos:start="27:55" pos:end="27:56">so</name><operator pos:start="27:57" pos:end="27:58">-&gt;</operator><name pos:start="27:59" pos:end="27:64">so_snd</name><operator pos:start="27:65" pos:end="27:65">.</operator><name pos:start="27:66" pos:end="27:75">sb_datalen</name></name><operator pos:start="27:76" pos:end="27:76">/</operator><literal type="number" pos:start="27:77" pos:end="27:77">2</literal><operator pos:start="27:78" pos:end="27:78">)</operator></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:25"><block_content pos:start="29:17" pos:end="29:25">

		<return pos:start="29:17" pos:end="29:25">return <expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>;</return></block_content></block></if></if_stmt>



	<return pos:start="33:9" pos:end="33:41">return <expr pos:start="33:16" pos:end="33:40"><call pos:start="33:16" pos:end="33:40"><name pos:start="33:16" pos:end="33:25">sopreprbuf</name><argument_list pos:start="33:26" pos:end="33:40">(<argument pos:start="33:27" pos:end="33:28"><expr pos:start="33:27" pos:end="33:28"><name pos:start="33:27" pos:end="33:28">so</name></expr></argument>, <argument pos:start="33:31" pos:end="33:33"><expr pos:start="33:31" pos:end="33:33"><name pos:start="33:31" pos:end="33:33">iov</name></expr></argument>, <argument pos:start="33:36" pos:end="33:39"><expr pos:start="33:36" pos:end="33:39"><name pos:start="33:36" pos:end="33:39">NULL</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
