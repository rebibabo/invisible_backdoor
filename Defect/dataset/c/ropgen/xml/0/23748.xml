<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23748.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">write_dump_header</name><parameter_list pos:start="1:30" pos:end="1:57">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:39">DumpState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:49">Error</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier><modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:6" pos:end="23:5">

     <decl_stmt pos:start="5:6" pos:end="5:29"><decl pos:start="5:6" pos:end="5:28"><type pos:start="5:6" pos:end="5:12"><name pos:start="5:6" pos:end="5:10">Error</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:21">local_err</name> <init pos:start="5:23" pos:end="5:28">= <expr pos:start="5:25" pos:end="5:28"><name pos:start="5:25" pos:end="5:28">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:43">(<expr pos:start="9:9" pos:end="9:42"><name pos:start="9:9" pos:end="9:28"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:20">dump_info</name><operator pos:start="9:21" pos:end="9:21">.</operator><name pos:start="9:22" pos:end="9:28">d_class</name></name> <operator pos:start="9:30" pos:end="9:31">==</operator> <name pos:start="9:33" pos:end="9:42">ELFCLASS32</name></expr>)</condition> <block pos:start="9:45" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:39">

        <expr_stmt pos:start="11:9" pos:end="11:39"><expr pos:start="11:9" pos:end="11:38"><call pos:start="11:9" pos:end="11:38"><name pos:start="11:9" pos:end="11:23">create_header32</name><argument_list pos:start="11:24" pos:end="11:38">(<argument pos:start="11:25" pos:end="11:25"><expr pos:start="11:25" pos:end="11:25"><name pos:start="11:25" pos:end="11:25">s</name></expr></argument>, <argument pos:start="11:28" pos:end="11:37"><expr pos:start="11:28" pos:end="11:37"><operator pos:start="11:28" pos:end="11:28">&amp;</operator><name pos:start="11:29" pos:end="11:37">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="13:7" pos:end="17:5">else <block pos:start="13:12" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:39">

        <expr_stmt pos:start="15:9" pos:end="15:39"><expr pos:start="15:9" pos:end="15:38"><call pos:start="15:9" pos:end="15:38"><name pos:start="15:9" pos:end="15:23">create_header64</name><argument_list pos:start="15:24" pos:end="15:38">(<argument pos:start="15:25" pos:end="15:25"><expr pos:start="15:25" pos:end="15:25"><name pos:start="15:25" pos:end="15:25">s</name></expr></argument>, <argument pos:start="15:28" pos:end="15:37"><expr pos:start="15:28" pos:end="15:37"><operator pos:start="15:28" pos:end="15:28">&amp;</operator><name pos:start="15:29" pos:end="15:37">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:17">local_err</name></expr>)</condition> <block pos:start="19:20" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:41">

        <expr_stmt pos:start="21:9" pos:end="21:41"><expr pos:start="21:9" pos:end="21:40"><call pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:23">error_propagate</name><argument_list pos:start="21:24" pos:end="21:40">(<argument pos:start="21:25" pos:end="21:28"><expr pos:start="21:25" pos:end="21:28"><name pos:start="21:25" pos:end="21:28">errp</name></expr></argument>, <argument pos:start="21:31" pos:end="21:39"><expr pos:start="21:31" pos:end="21:39"><name pos:start="21:31" pos:end="21:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
