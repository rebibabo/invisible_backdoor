<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17655.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">read_packet</name><parameter_list pos:start="1:23" pos:end="3:40">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:41"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:39"><decl pos:start="3:27" pos:end="3:39"><type pos:start="3:27" pos:end="3:39"><name pos:start="3:27" pos:end="3:34">AVPacket</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:39">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:13">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ByteIOContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">pb</name> <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">PutBitContext</name></type> <name pos:start="9:19" pos:end="9:21">pbo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint16_t</name></type> <name pos:start="11:14" pos:end="11:40"><name pos:start="11:14" pos:end="11:16">buf</name><index pos:start="11:17" pos:end="11:40">[<expr pos:start="11:18" pos:end="11:39"><literal type="number" pos:start="11:18" pos:end="11:18">8</literal> <operator pos:start="11:20" pos:end="11:20">*</operator> <name pos:start="11:22" pos:end="11:35">MAX_FRAME_SIZE</name> <operator pos:start="11:37" pos:end="11:37">+</operator> <literal type="number" pos:start="11:39" pos:end="11:39">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">packet_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">sync</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:12">uint16_t</name><modifier pos:start="17:13" pos:end="17:13">*</modifier></type> <name pos:start="17:15" pos:end="17:17">src</name><init pos:start="17:18" pos:end="17:21">=<expr pos:start="17:19" pos:end="17:21"><name pos:start="17:19" pos:end="17:21">buf</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:12"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:12">j</name></decl>, <decl pos:start="19:15" pos:end="19:17"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:15" pos:end="19:17">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:27"><if pos:start="23:5" pos:end="25:27">if<condition pos:start="23:7" pos:end="23:20">(<expr pos:start="23:8" pos:end="23:19"><call pos:start="23:8" pos:end="23:19"><name pos:start="23:8" pos:end="23:15">url_feof</name><argument_list pos:start="23:16" pos:end="23:19">(<argument pos:start="23:17" pos:end="23:18"><expr pos:start="23:17" pos:end="23:18"><name pos:start="23:17" pos:end="23:18">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:27"><block_content pos:start="25:9" pos:end="25:27">

        <return pos:start="25:9" pos:end="25:27">return <expr pos:start="25:16" pos:end="25:26"><name pos:start="25:16" pos:end="25:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:8">sync</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:23"><name pos:start="29:12" pos:end="29:19">get_le16</name><argument_list pos:start="29:20" pos:end="29:23">(<argument pos:start="29:21" pos:end="29:22"><expr pos:start="29:21" pos:end="29:22"><name pos:start="29:21" pos:end="29:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="29:26" pos:end="29:37">// sync word</comment>

    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:15">packet_size</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:30"><name pos:start="31:19" pos:end="31:26">get_le16</name><argument_list pos:start="31:27" pos:end="31:30">(<argument pos:start="31:28" pos:end="31:29"><expr pos:start="31:28" pos:end="31:29"><name pos:start="31:28" pos:end="31:29">pb</name></expr></argument>)</argument_list></call> <operator pos:start="31:32" pos:end="31:32">/</operator> <literal type="number" pos:start="31:34" pos:end="31:34">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:45"><expr pos:start="33:5" pos:end="33:44"><call pos:start="33:5" pos:end="33:44"><name pos:start="33:5" pos:end="33:10">assert</name><argument_list pos:start="33:11" pos:end="33:44">(<argument pos:start="33:12" pos:end="33:43"><expr pos:start="33:12" pos:end="33:43"><name pos:start="33:12" pos:end="33:22">packet_size</name> <operator pos:start="33:24" pos:end="33:24">&lt;</operator> <literal type="number" pos:start="33:26" pos:end="33:26">8</literal> <operator pos:start="33:28" pos:end="33:28">*</operator> <name pos:start="33:30" pos:end="33:43">MAX_FRAME_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:78"><expr pos:start="37:5" pos:end="37:77"><name pos:start="37:5" pos:end="37:7">ret</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:77"><name pos:start="37:11" pos:end="37:20">get_buffer</name><argument_list pos:start="37:21" pos:end="37:77">(<argument pos:start="37:22" pos:end="37:23"><expr pos:start="37:22" pos:end="37:23"><name pos:start="37:22" pos:end="37:23">pb</name></expr></argument>, <argument pos:start="37:26" pos:end="37:38"><expr pos:start="37:26" pos:end="37:38"><operator pos:start="37:26" pos:end="37:26">(</operator><name pos:start="37:27" pos:end="37:33">uint8_t</name><operator pos:start="37:34" pos:end="37:34">*</operator><operator pos:start="37:35" pos:end="37:35">)</operator><name pos:start="37:36" pos:end="37:38">buf</name></expr></argument>, <argument pos:start="37:41" pos:end="37:76"><expr pos:start="37:41" pos:end="37:76"><operator pos:start="37:41" pos:end="37:41">(</operator><literal type="number" pos:start="37:42" pos:end="37:42">8</literal> <operator pos:start="37:44" pos:end="37:44">*</operator> <name pos:start="37:46" pos:end="37:56">packet_size</name><operator pos:start="37:57" pos:end="37:57">)</operator> <operator pos:start="37:59" pos:end="37:59">*</operator> <sizeof pos:start="37:61" pos:end="37:76">sizeof<argument_list pos:start="37:67" pos:end="37:76">(<argument pos:start="37:68" pos:end="37:75"><expr pos:start="37:68" pos:end="37:75"><name pos:start="37:68" pos:end="37:75">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:19"><if pos:start="39:5" pos:end="41:19">if<condition pos:start="39:7" pos:end="39:13">(<expr pos:start="39:8" pos:end="39:12"><name pos:start="39:8" pos:end="39:10">ret</name><operator pos:start="39:11" pos:end="39:11">&lt;</operator><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:19"><block_content pos:start="41:9" pos:end="41:19">

        <return pos:start="41:9" pos:end="41:19">return <expr pos:start="41:16" pos:end="41:18"><name pos:start="41:16" pos:end="41:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="45:28"><if pos:start="43:5" pos:end="45:28">if<condition pos:start="43:7" pos:end="43:49">(<expr pos:start="43:8" pos:end="43:48"><name pos:start="43:8" pos:end="43:10">ret</name> <operator pos:start="43:12" pos:end="43:13">!=</operator> <literal type="number" pos:start="43:15" pos:end="43:15">8</literal> <operator pos:start="43:17" pos:end="43:17">*</operator> <name pos:start="43:19" pos:end="43:29">packet_size</name> <operator pos:start="43:31" pos:end="43:31">*</operator> <sizeof pos:start="43:33" pos:end="43:48">sizeof<argument_list pos:start="43:39" pos:end="43:48">(<argument pos:start="43:40" pos:end="43:47"><expr pos:start="43:40" pos:end="43:47"><name pos:start="43:40" pos:end="43:47">uint16_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:28"><block_content pos:start="45:9" pos:end="45:28">

        <return pos:start="45:9" pos:end="45:28">return <expr pos:start="45:16" pos:end="45:27"><call pos:start="45:16" pos:end="45:27"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:27">(<argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:36"><expr pos:start="49:5" pos:end="49:35"><call pos:start="49:5" pos:end="49:35"><name pos:start="49:5" pos:end="49:17">av_new_packet</name><argument_list pos:start="49:18" pos:end="49:35">(<argument pos:start="49:19" pos:end="49:21"><expr pos:start="49:19" pos:end="49:21"><name pos:start="49:19" pos:end="49:21">pkt</name></expr></argument>, <argument pos:start="49:24" pos:end="49:34"><expr pos:start="49:24" pos:end="49:34"><name pos:start="49:24" pos:end="49:34">packet_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:48"><expr pos:start="53:5" pos:end="53:47"><call pos:start="53:5" pos:end="53:47"><name pos:start="53:5" pos:end="53:17">init_put_bits</name><argument_list pos:start="53:18" pos:end="53:47">(<argument pos:start="53:19" pos:end="53:22"><expr pos:start="53:19" pos:end="53:22"><operator pos:start="53:19" pos:end="53:19">&amp;</operator><name pos:start="53:20" pos:end="53:22">pbo</name></expr></argument>, <argument pos:start="53:25" pos:end="53:33"><expr pos:start="53:25" pos:end="53:33"><name pos:start="53:25" pos:end="53:33"><name pos:start="53:25" pos:end="53:27">pkt</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:33">data</name></name></expr></argument>, <argument pos:start="53:36" pos:end="53:46"><expr pos:start="53:36" pos:end="53:46"><name pos:start="53:36" pos:end="53:46">packet_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="55:5" pos:end="59:62">for<control pos:start="55:8" pos:end="55:34">(<init pos:start="55:9" pos:end="55:12"><expr pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:9">j</name><operator pos:start="55:10" pos:end="55:10">=</operator><literal type="number" pos:start="55:11" pos:end="55:11">0</literal></expr>;</init> <condition pos:start="55:14" pos:end="55:29"><expr pos:start="55:14" pos:end="55:28"><name pos:start="55:14" pos:end="55:14">j</name> <operator pos:start="55:16" pos:end="55:16">&lt;</operator> <name pos:start="55:18" pos:end="55:28">packet_size</name></expr>;</condition> <incr pos:start="55:31" pos:end="55:33"><expr pos:start="55:31" pos:end="55:33"><name pos:start="55:31" pos:end="55:31">j</name><operator pos:start="55:32" pos:end="55:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:9" pos:end="59:62"><block_content pos:start="57:9" pos:end="59:62">

        <for pos:start="57:9" pos:end="59:62">for<control pos:start="57:12" pos:end="57:25">(<init pos:start="57:13" pos:end="57:16"><expr pos:start="57:13" pos:end="57:15"><name pos:start="57:13" pos:end="57:13">i</name><operator pos:start="57:14" pos:end="57:14">=</operator><literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>;</init> <condition pos:start="57:18" pos:end="57:21"><expr pos:start="57:18" pos:end="57:20"><name pos:start="57:18" pos:end="57:18">i</name><operator pos:start="57:19" pos:end="57:19">&lt;</operator><literal type="number" pos:start="57:20" pos:end="57:20">8</literal></expr>;</condition><incr pos:start="57:22" pos:end="57:24"><expr pos:start="57:22" pos:end="57:24"><name pos:start="57:22" pos:end="57:22">i</name><operator pos:start="57:23" pos:end="57:24">++</operator></expr></incr>)</control><block type="pseudo" pos:start="59:13" pos:end="59:62"><block_content pos:start="59:13" pos:end="59:62">

            <expr_stmt pos:start="59:13" pos:end="59:62"><expr pos:start="59:13" pos:end="59:61"><call pos:start="59:13" pos:end="59:61"><name pos:start="59:13" pos:end="59:20">put_bits</name><argument_list pos:start="59:21" pos:end="59:61">(<argument pos:start="59:22" pos:end="59:25"><expr pos:start="59:22" pos:end="59:25"><operator pos:start="59:22" pos:end="59:22">&amp;</operator><name pos:start="59:23" pos:end="59:25">pbo</name></expr></argument>,<argument pos:start="59:27" pos:end="59:27"><expr pos:start="59:27" pos:end="59:27"><literal type="number" pos:start="59:27" pos:end="59:27">1</literal></expr></argument>, <argument pos:start="59:30" pos:end="59:60"><expr pos:start="59:30" pos:end="59:60"><ternary pos:start="59:30" pos:end="59:60"><condition pos:start="59:30" pos:end="59:54"><expr pos:start="59:30" pos:end="59:52"><call pos:start="59:30" pos:end="59:43"><name pos:start="59:30" pos:end="59:36">AV_RL16</name><argument_list pos:start="59:37" pos:end="59:43">(<argument pos:start="59:38" pos:end="59:42"><expr pos:start="59:38" pos:end="59:42"><name pos:start="59:38" pos:end="59:40">src</name><operator pos:start="59:41" pos:end="59:42">++</operator></expr></argument>)</argument_list></call> <operator pos:start="59:45" pos:end="59:46">==</operator> <name pos:start="59:48" pos:end="59:52">BIT_1</name></expr> ?</condition><then pos:start="59:56" pos:end="59:56"> <expr pos:start="59:56" pos:end="59:56"><literal type="number" pos:start="59:56" pos:end="59:56">1</literal></expr> </then><else pos:start="59:58" pos:end="59:60">: <expr pos:start="59:60" pos:end="59:60"><literal type="number" pos:start="59:60" pos:end="59:60">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>



    <expr_stmt pos:start="63:5" pos:end="63:25"><expr pos:start="63:5" pos:end="63:24"><call pos:start="63:5" pos:end="63:24"><name pos:start="63:5" pos:end="63:18">flush_put_bits</name><argument_list pos:start="63:19" pos:end="63:24">(<argument pos:start="63:20" pos:end="63:23"><expr pos:start="63:20" pos:end="63:23"><operator pos:start="63:20" pos:end="63:20">&amp;</operator><name pos:start="63:21" pos:end="63:23">pbo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:20"><expr pos:start="67:5" pos:end="67:19"><name pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:7">pkt</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:17">duration</name></name><operator pos:start="67:18" pos:end="67:18">=</operator><literal type="number" pos:start="67:19" pos:end="67:19">1</literal></expr>;</expr_stmt>

    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
