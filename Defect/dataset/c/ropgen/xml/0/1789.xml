<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1789.c" pos:tabs="8"><function pos:start="1:1" pos:end="231:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:41">dvbsub_parse_pixel_data_block</name><parameter_list pos:start="1:42" pos:end="3:104">(<parameter pos:start="1:43" pos:end="1:63"><decl pos:start="1:43" pos:end="1:63"><type pos:start="1:43" pos:end="1:63"><name pos:start="1:43" pos:end="1:56">AVCodecContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">avctx</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:93"><decl pos:start="1:66" pos:end="1:93"><type pos:start="1:66" pos:end="1:93"><name pos:start="1:66" pos:end="1:84">DVBSubObjectDisplay</name> <modifier pos:start="1:86" pos:end="1:86">*</modifier></type><name pos:start="1:87" pos:end="1:93">display</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:60"><decl pos:start="3:43" pos:end="3:60"><type pos:start="3:43" pos:end="3:60"><specifier pos:start="3:43" pos:end="3:47">const</specifier> <name pos:start="3:49" pos:end="3:55">uint8_t</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:60">buf</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:74"><decl pos:start="3:63" pos:end="3:74"><type pos:start="3:63" pos:end="3:74"><name pos:start="3:63" pos:end="3:65">int</name></type> <name pos:start="3:67" pos:end="3:74">buf_size</name></decl></parameter>, <parameter pos:start="3:77" pos:end="3:90"><decl pos:start="3:77" pos:end="3:90"><type pos:start="3:77" pos:end="3:90"><name pos:start="3:77" pos:end="3:79">int</name></type> <name pos:start="3:81" pos:end="3:90">top_bottom</name></decl></parameter>, <parameter pos:start="3:93" pos:end="3:103"><decl pos:start="3:93" pos:end="3:103"><type pos:start="3:93" pos:end="3:103"><name pos:start="3:93" pos:end="3:95">int</name></type> <name pos:start="3:97" pos:end="3:103">non_mod</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="231:1">{<block_content pos:start="7:5" pos:end="227:5">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">DVBSubContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">ctx</name> <init pos:start="7:24" pos:end="7:41">= <expr pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:30">avctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:63"><decl pos:start="11:5" pos:end="11:62"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">DVBSubRegion</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:24">region</name> <init pos:start="11:26" pos:end="11:62">= <expr pos:start="11:28" pos:end="11:62"><call pos:start="11:28" pos:end="11:62"><name pos:start="11:28" pos:end="11:37">get_region</name><argument_list pos:start="11:38" pos:end="11:62">(<argument pos:start="11:39" pos:end="11:41"><expr pos:start="11:39" pos:end="11:41"><name pos:start="11:39" pos:end="11:41">ctx</name></expr></argument>, <argument pos:start="11:44" pos:end="11:61"><expr pos:start="11:44" pos:end="11:61"><name pos:start="11:44" pos:end="11:61"><name pos:start="11:44" pos:end="11:50">display</name><operator pos:start="11:51" pos:end="11:52">-&gt;</operator><name pos:start="11:53" pos:end="11:61">region_id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:26">buf_end</name> <init pos:start="13:28" pos:end="13:43">= <expr pos:start="13:30" pos:end="13:43"><name pos:start="13:30" pos:end="13:32">buf</name> <operator pos:start="13:34" pos:end="13:34">+</operator> <name pos:start="13:36" pos:end="13:43">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:17">pbuf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">x_pos</name></decl>, <decl pos:start="17:16" pos:end="17:20"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:16" pos:end="17:20">y_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>



    <decl_stmt pos:start="23:5" pos:end="23:49"><decl pos:start="23:5" pos:end="23:48"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">uint8_t</name></type> <name pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:19">map2to4</name><index pos:start="23:20" pos:end="23:21">[]</index></name> <init pos:start="23:23" pos:end="23:48">= <expr pos:start="23:25" pos:end="23:48"><block pos:start="23:25" pos:end="23:48">{ <expr pos:start="23:27" pos:end="23:29"><literal type="number" pos:start="23:27" pos:end="23:29">0x0</literal></expr>,  <expr pos:start="23:33" pos:end="23:35"><literal type="number" pos:start="23:33" pos:end="23:35">0x7</literal></expr>,  <expr pos:start="23:39" pos:end="23:41"><literal type="number" pos:start="23:39" pos:end="23:41">0x8</literal></expr>,  <expr pos:start="23:45" pos:end="23:47"><literal type="number" pos:start="23:45" pos:end="23:47">0xf</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:49"><decl pos:start="25:5" pos:end="25:48"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">uint8_t</name></type> <name pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:19">map2to8</name><index pos:start="25:20" pos:end="25:21">[]</index></name> <init pos:start="25:23" pos:end="25:48">= <expr pos:start="25:25" pos:end="25:48"><block pos:start="25:25" pos:end="25:48">{<expr pos:start="25:26" pos:end="25:29"><literal type="number" pos:start="25:26" pos:end="25:29">0x00</literal></expr>, <expr pos:start="25:32" pos:end="25:35"><literal type="number" pos:start="25:32" pos:end="25:35">0x77</literal></expr>, <expr pos:start="25:38" pos:end="25:41"><literal type="number" pos:start="25:38" pos:end="25:41">0x88</literal></expr>, <expr pos:start="25:44" pos:end="25:47"><literal type="number" pos:start="25:44" pos:end="25:47">0xff</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="29:73"><decl pos:start="27:5" pos:end="29:72"><type pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:11">uint8_t</name></type> <name pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:19">map4to8</name><index pos:start="27:20" pos:end="27:21">[]</index></name> <init pos:start="27:23" pos:end="29:72">= <expr pos:start="27:25" pos:end="29:72"><block pos:start="27:25" pos:end="29:72">{<expr pos:start="27:26" pos:end="27:29"><literal type="number" pos:start="27:26" pos:end="27:29">0x00</literal></expr>, <expr pos:start="27:32" pos:end="27:35"><literal type="number" pos:start="27:32" pos:end="27:35">0x11</literal></expr>, <expr pos:start="27:38" pos:end="27:41"><literal type="number" pos:start="27:38" pos:end="27:41">0x22</literal></expr>, <expr pos:start="27:44" pos:end="27:47"><literal type="number" pos:start="27:44" pos:end="27:47">0x33</literal></expr>, <expr pos:start="27:50" pos:end="27:53"><literal type="number" pos:start="27:50" pos:end="27:53">0x44</literal></expr>, <expr pos:start="27:56" pos:end="27:59"><literal type="number" pos:start="27:56" pos:end="27:59">0x55</literal></expr>, <expr pos:start="27:62" pos:end="27:65"><literal type="number" pos:start="27:62" pos:end="27:65">0x66</literal></expr>, <expr pos:start="27:68" pos:end="27:71"><literal type="number" pos:start="27:68" pos:end="27:71">0x77</literal></expr>,

                         <expr pos:start="29:26" pos:end="29:29"><literal type="number" pos:start="29:26" pos:end="29:29">0x88</literal></expr>, <expr pos:start="29:32" pos:end="29:35"><literal type="number" pos:start="29:32" pos:end="29:35">0x99</literal></expr>, <expr pos:start="29:38" pos:end="29:41"><literal type="number" pos:start="29:38" pos:end="29:41">0xaa</literal></expr>, <expr pos:start="29:44" pos:end="29:47"><literal type="number" pos:start="29:44" pos:end="29:47">0xbb</literal></expr>, <expr pos:start="29:50" pos:end="29:53"><literal type="number" pos:start="29:50" pos:end="29:53">0xcc</literal></expr>, <expr pos:start="29:56" pos:end="29:59"><literal type="number" pos:start="29:56" pos:end="29:59">0xdd</literal></expr>, <expr pos:start="29:62" pos:end="29:65"><literal type="number" pos:start="29:62" pos:end="29:65">0xee</literal></expr>, <expr pos:start="29:68" pos:end="29:71"><literal type="number" pos:start="29:68" pos:end="29:71">0xff</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="66:0"><decl pos:start="31:5" pos:end="31:22"><type pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:11">uint8_t</name> <modifier pos:start="31:13" pos:end="31:13">*</modifier></type><name pos:start="31:14" pos:end="31:22">map_table</name></decl>;</decl_stmt>



<cpp:if pos:start="35:1" pos:end="35:5">#<cpp:directive pos:start="35:2" pos:end="35:3">if</cpp:directive> <expr pos:start="35:5" pos:end="35:5"><literal type="number" pos:start="35:5" pos:end="35:5">0</literal></expr></cpp:if>

    av_dlog(avctx, "DVB pixel block size %d, %s field:\n", buf_size,

            top_bottom ? "bottom" : "top");



    for (i = 0; i &lt; buf_size; i++) {

        if (i % 16 == 0)

            av_dlog(avctx, "0x%8p: ", buf+i);



        av_dlog(avctx, "%02x ", buf[i]);

        if (i % 16 == 15)

            av_dlog(avctx, "\n");

    }



    if (i % 16)

        av_dlog(avctx, "\n");

<cpp:endif pos:start="65:1" pos:end="65:6">#<cpp:directive pos:start="65:2" pos:end="65:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="69:5" pos:end="71:15"><if pos:start="69:5" pos:end="71:15">if <condition pos:start="69:8" pos:end="69:20">(<expr pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:14">region</name> <operator pos:start="69:16" pos:end="69:17">==</operator> <literal type="number" pos:start="69:19" pos:end="69:19">0</literal></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:15"><block_content pos:start="71:9" pos:end="71:15">

        <return pos:start="71:9" pos:end="71:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:24"><expr pos:start="75:5" pos:end="75:23"><name pos:start="75:5" pos:end="75:8">pbuf</name> <operator pos:start="75:10" pos:end="75:10">=</operator> <name pos:start="75:12" pos:end="75:23"><name pos:start="75:12" pos:end="75:17">region</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:23">pbuf</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:22"><expr pos:start="77:5" pos:end="77:21"><name pos:start="77:5" pos:end="77:17"><name pos:start="77:5" pos:end="77:10">region</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:17">dirty</name></name> <operator pos:start="77:19" pos:end="77:19">=</operator> <literal type="number" pos:start="77:21" pos:end="77:21">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:27"><expr pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:9">x_pos</name> <operator pos:start="81:11" pos:end="81:11">=</operator> <name pos:start="81:13" pos:end="81:26"><name pos:start="81:13" pos:end="81:19">display</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:26">x_pos</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:27"><expr pos:start="83:5" pos:end="83:26"><name pos:start="83:5" pos:end="83:9">y_pos</name> <operator pos:start="83:11" pos:end="83:11">=</operator> <name pos:start="83:13" pos:end="83:26"><name pos:start="83:13" pos:end="83:19">display</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:26">y_pos</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="89:16"><if pos:start="87:5" pos:end="89:16">if <condition pos:start="87:8" pos:end="87:34">(<expr pos:start="87:9" pos:end="87:33"><operator pos:start="87:9" pos:end="87:9">(</operator><name pos:start="87:10" pos:end="87:14">y_pos</name> <operator pos:start="87:16" pos:end="87:16">&amp;</operator> <literal type="number" pos:start="87:18" pos:end="87:18">1</literal><operator pos:start="87:19" pos:end="87:19">)</operator> <operator pos:start="87:21" pos:end="87:22">!=</operator> <name pos:start="87:24" pos:end="87:33">top_bottom</name></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:16"><block_content pos:start="89:9" pos:end="89:16">

        <expr_stmt pos:start="89:9" pos:end="89:16"><expr pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:13">y_pos</name><operator pos:start="89:14" pos:end="89:15">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <while pos:start="93:5" pos:end="227:5">while <condition pos:start="93:11" pos:end="93:25">(<expr pos:start="93:12" pos:end="93:24"><name pos:start="93:12" pos:end="93:14">buf</name> <operator pos:start="93:16" pos:end="93:16">&lt;</operator> <name pos:start="93:18" pos:end="93:24">buf_end</name></expr>)</condition> <block pos:start="93:27" pos:end="227:5">{<block_content pos:start="95:9" pos:end="225:9">

        <if_stmt pos:start="95:9" pos:end="101:9"><if pos:start="95:9" pos:end="101:9">if <condition pos:start="95:12" pos:end="95:60">(<expr pos:start="95:13" pos:end="95:59"><name pos:start="95:13" pos:end="95:17">x_pos</name> <operator pos:start="95:19" pos:end="95:19">&gt;</operator> <name pos:start="95:21" pos:end="95:33"><name pos:start="95:21" pos:end="95:26">region</name><operator pos:start="95:27" pos:end="95:28">-&gt;</operator><name pos:start="95:29" pos:end="95:33">width</name></name> <operator pos:start="95:35" pos:end="95:36">||</operator> <name pos:start="95:38" pos:end="95:42">y_pos</name> <operator pos:start="95:44" pos:end="95:44">&gt;</operator> <name pos:start="95:46" pos:end="95:59"><name pos:start="95:46" pos:end="95:51">region</name><operator pos:start="95:52" pos:end="95:53">-&gt;</operator><name pos:start="95:54" pos:end="95:59">height</name></name></expr>)</condition> <block pos:start="95:62" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:19">

            <expr_stmt pos:start="97:13" pos:end="97:70"><expr pos:start="97:13" pos:end="97:69"><call pos:start="97:13" pos:end="97:69"><name pos:start="97:13" pos:end="97:18">av_log</name><argument_list pos:start="97:19" pos:end="97:69">(<argument pos:start="97:20" pos:end="97:24"><expr pos:start="97:20" pos:end="97:24"><name pos:start="97:20" pos:end="97:24">avctx</name></expr></argument>, <argument pos:start="97:27" pos:end="97:38"><expr pos:start="97:27" pos:end="97:38"><name pos:start="97:27" pos:end="97:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="97:41" pos:end="97:68"><expr pos:start="97:41" pos:end="97:68"><literal type="string" pos:start="97:41" pos:end="97:68">"Invalid object location!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="99:13" pos:end="99:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="105:9" pos:end="225:9">switch <condition pos:start="105:16" pos:end="105:23">(<expr pos:start="105:17" pos:end="105:22"><operator pos:start="105:17" pos:end="105:17">*</operator><name pos:start="105:18" pos:end="105:20">buf</name><operator pos:start="105:21" pos:end="105:22">++</operator></expr>)</condition> <block pos:start="105:25" pos:end="225:9">{<block_content pos:start="107:9" pos:end="223:91">

        <case pos:start="107:9" pos:end="107:18">case <expr pos:start="107:14" pos:end="107:17"><literal type="number" pos:start="107:14" pos:end="107:17">0x10</literal></expr>:</case>

            <if_stmt pos:start="109:13" pos:end="119:33"><if pos:start="109:13" pos:end="111:36">if <condition pos:start="109:16" pos:end="109:35">(<expr pos:start="109:17" pos:end="109:34"><name pos:start="109:17" pos:end="109:29"><name pos:start="109:17" pos:end="109:22">region</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:29">depth</name></name> <operator pos:start="109:31" pos:end="109:32">==</operator> <literal type="number" pos:start="109:34" pos:end="109:34">8</literal></expr>)</condition><block type="pseudo" pos:start="111:17" pos:end="111:36"><block_content pos:start="111:17" pos:end="111:36">

                <expr_stmt pos:start="111:17" pos:end="111:36"><expr pos:start="111:17" pos:end="111:35"><name pos:start="111:17" pos:end="111:25">map_table</name> <operator pos:start="111:27" pos:end="111:27">=</operator> <name pos:start="111:29" pos:end="111:35">map2to8</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="113:13" pos:end="115:36">else if <condition pos:start="113:21" pos:end="113:40">(<expr pos:start="113:22" pos:end="113:39"><name pos:start="113:22" pos:end="113:34"><name pos:start="113:22" pos:end="113:27">region</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:34">depth</name></name> <operator pos:start="113:36" pos:end="113:37">==</operator> <literal type="number" pos:start="113:39" pos:end="113:39">4</literal></expr>)</condition><block type="pseudo" pos:start="115:17" pos:end="115:36"><block_content pos:start="115:17" pos:end="115:36">

                <expr_stmt pos:start="115:17" pos:end="115:36"><expr pos:start="115:17" pos:end="115:35"><name pos:start="115:17" pos:end="115:25">map_table</name> <operator pos:start="115:27" pos:end="115:27">=</operator> <name pos:start="115:29" pos:end="115:35">map2to4</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="117:13" pos:end="119:33">else<block type="pseudo" pos:start="119:17" pos:end="119:33"><block_content pos:start="119:17" pos:end="119:33">

                <expr_stmt pos:start="119:17" pos:end="119:33"><expr pos:start="119:17" pos:end="119:32"><name pos:start="119:17" pos:end="119:25">map_table</name> <operator pos:start="119:27" pos:end="119:27">=</operator> <name pos:start="119:29" pos:end="119:32">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <expr_stmt pos:start="123:13" pos:end="127:68"><expr pos:start="123:13" pos:end="127:67"><name pos:start="123:13" pos:end="123:17">x_pos</name> <operator pos:start="123:19" pos:end="123:20">+=</operator> <call pos:start="123:22" pos:end="127:67"><name pos:start="123:22" pos:end="123:44">dvbsub_read_2bit_string</name><argument_list pos:start="123:45" pos:end="127:67">(<argument pos:start="123:46" pos:end="123:83"><expr pos:start="123:46" pos:end="123:83"><name pos:start="123:46" pos:end="123:49">pbuf</name> <operator pos:start="123:51" pos:end="123:51">+</operator> <operator pos:start="123:53" pos:end="123:53">(</operator><name pos:start="123:54" pos:end="123:58">y_pos</name> <operator pos:start="123:60" pos:end="123:60">*</operator> <name pos:start="123:62" pos:end="123:74"><name pos:start="123:62" pos:end="123:67">region</name><operator pos:start="123:68" pos:end="123:69">-&gt;</operator><name pos:start="123:70" pos:end="123:74">width</name></name><operator pos:start="123:75" pos:end="123:75">)</operator> <operator pos:start="123:77" pos:end="123:77">+</operator> <name pos:start="123:79" pos:end="123:83">x_pos</name></expr></argument>,

                                                <argument pos:start="125:49" pos:end="125:69"><expr pos:start="125:49" pos:end="125:69"><name pos:start="125:49" pos:end="125:61"><name pos:start="125:49" pos:end="125:54">region</name><operator pos:start="125:55" pos:end="125:56">-&gt;</operator><name pos:start="125:57" pos:end="125:61">width</name></name> <operator pos:start="125:63" pos:end="125:63">-</operator> <name pos:start="125:65" pos:end="125:69">x_pos</name></expr></argument>, <argument pos:start="125:72" pos:end="125:75"><expr pos:start="125:72" pos:end="125:75"><operator pos:start="125:72" pos:end="125:72">&amp;</operator><name pos:start="125:73" pos:end="125:75">buf</name></expr></argument>, <argument pos:start="125:78" pos:end="125:90"><expr pos:start="125:78" pos:end="125:90"><name pos:start="125:78" pos:end="125:84">buf_end</name> <operator pos:start="125:86" pos:end="125:86">-</operator> <name pos:start="125:88" pos:end="125:90">buf</name></expr></argument>,

                                                <argument pos:start="127:49" pos:end="127:55"><expr pos:start="127:49" pos:end="127:55"><name pos:start="127:49" pos:end="127:55">non_mod</name></expr></argument>, <argument pos:start="127:58" pos:end="127:66"><expr pos:start="127:58" pos:end="127:66"><name pos:start="127:58" pos:end="127:66">map_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:18">case <expr pos:start="131:14" pos:end="131:17"><literal type="number" pos:start="131:14" pos:end="131:17">0x11</literal></expr>:</case>

            <if_stmt pos:start="133:13" pos:end="139:13"><if pos:start="133:13" pos:end="139:13">if <condition pos:start="133:16" pos:end="133:34">(<expr pos:start="133:17" pos:end="133:33"><name pos:start="133:17" pos:end="133:29"><name pos:start="133:17" pos:end="133:22">region</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:29">depth</name></name> <operator pos:start="133:31" pos:end="133:31">&lt;</operator> <literal type="number" pos:start="133:33" pos:end="133:33">4</literal></expr>)</condition> <block pos:start="133:36" pos:end="139:13">{<block_content pos:start="135:17" pos:end="137:23">

                <expr_stmt pos:start="135:17" pos:end="135:101"><expr pos:start="135:17" pos:end="135:100"><call pos:start="135:17" pos:end="135:100"><name pos:start="135:17" pos:end="135:22">av_log</name><argument_list pos:start="135:23" pos:end="135:100">(<argument pos:start="135:24" pos:end="135:28"><expr pos:start="135:24" pos:end="135:28"><name pos:start="135:24" pos:end="135:28">avctx</name></expr></argument>, <argument pos:start="135:31" pos:end="135:42"><expr pos:start="135:31" pos:end="135:42"><name pos:start="135:31" pos:end="135:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="135:45" pos:end="135:84"><expr pos:start="135:45" pos:end="135:84"><literal type="string" pos:start="135:45" pos:end="135:84">"4-bit pixel string in %d-bit region!\n"</literal></expr></argument>, <argument pos:start="135:87" pos:end="135:99"><expr pos:start="135:87" pos:end="135:99"><name pos:start="135:87" pos:end="135:99"><name pos:start="135:87" pos:end="135:92">region</name><operator pos:start="135:93" pos:end="135:94">-&gt;</operator><name pos:start="135:95" pos:end="135:99">depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="137:17" pos:end="137:23">return;</return>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="143:13" pos:end="149:33"><if pos:start="143:13" pos:end="145:36">if <condition pos:start="143:16" pos:end="143:35">(<expr pos:start="143:17" pos:end="143:34"><name pos:start="143:17" pos:end="143:29"><name pos:start="143:17" pos:end="143:22">region</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:29">depth</name></name> <operator pos:start="143:31" pos:end="143:32">==</operator> <literal type="number" pos:start="143:34" pos:end="143:34">8</literal></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:36"><block_content pos:start="145:17" pos:end="145:36">

                <expr_stmt pos:start="145:17" pos:end="145:36"><expr pos:start="145:17" pos:end="145:35"><name pos:start="145:17" pos:end="145:25">map_table</name> <operator pos:start="145:27" pos:end="145:27">=</operator> <name pos:start="145:29" pos:end="145:35">map4to8</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="147:13" pos:end="149:33">else<block type="pseudo" pos:start="149:17" pos:end="149:33"><block_content pos:start="149:17" pos:end="149:33">

                <expr_stmt pos:start="149:17" pos:end="149:33"><expr pos:start="149:17" pos:end="149:32"><name pos:start="149:17" pos:end="149:25">map_table</name> <operator pos:start="149:27" pos:end="149:27">=</operator> <name pos:start="149:29" pos:end="149:32">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <expr_stmt pos:start="153:13" pos:end="157:68"><expr pos:start="153:13" pos:end="157:67"><name pos:start="153:13" pos:end="153:17">x_pos</name> <operator pos:start="153:19" pos:end="153:20">+=</operator> <call pos:start="153:22" pos:end="157:67"><name pos:start="153:22" pos:end="153:44">dvbsub_read_4bit_string</name><argument_list pos:start="153:45" pos:end="157:67">(<argument pos:start="153:46" pos:end="153:83"><expr pos:start="153:46" pos:end="153:83"><name pos:start="153:46" pos:end="153:49">pbuf</name> <operator pos:start="153:51" pos:end="153:51">+</operator> <operator pos:start="153:53" pos:end="153:53">(</operator><name pos:start="153:54" pos:end="153:58">y_pos</name> <operator pos:start="153:60" pos:end="153:60">*</operator> <name pos:start="153:62" pos:end="153:74"><name pos:start="153:62" pos:end="153:67">region</name><operator pos:start="153:68" pos:end="153:69">-&gt;</operator><name pos:start="153:70" pos:end="153:74">width</name></name><operator pos:start="153:75" pos:end="153:75">)</operator> <operator pos:start="153:77" pos:end="153:77">+</operator> <name pos:start="153:79" pos:end="153:83">x_pos</name></expr></argument>,

                                                <argument pos:start="155:49" pos:end="155:69"><expr pos:start="155:49" pos:end="155:69"><name pos:start="155:49" pos:end="155:61"><name pos:start="155:49" pos:end="155:54">region</name><operator pos:start="155:55" pos:end="155:56">-&gt;</operator><name pos:start="155:57" pos:end="155:61">width</name></name> <operator pos:start="155:63" pos:end="155:63">-</operator> <name pos:start="155:65" pos:end="155:69">x_pos</name></expr></argument>, <argument pos:start="155:72" pos:end="155:75"><expr pos:start="155:72" pos:end="155:75"><operator pos:start="155:72" pos:end="155:72">&amp;</operator><name pos:start="155:73" pos:end="155:75">buf</name></expr></argument>, <argument pos:start="155:78" pos:end="155:90"><expr pos:start="155:78" pos:end="155:90"><name pos:start="155:78" pos:end="155:84">buf_end</name> <operator pos:start="155:86" pos:end="155:86">-</operator> <name pos:start="155:88" pos:end="155:90">buf</name></expr></argument>,

                                                <argument pos:start="157:49" pos:end="157:55"><expr pos:start="157:49" pos:end="157:55"><name pos:start="157:49" pos:end="157:55">non_mod</name></expr></argument>, <argument pos:start="157:58" pos:end="157:66"><expr pos:start="157:58" pos:end="157:66"><name pos:start="157:58" pos:end="157:66">map_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="159:13" pos:end="159:18">break;</break>

        <case pos:start="161:9" pos:end="161:18">case <expr pos:start="161:14" pos:end="161:17"><literal type="number" pos:start="161:14" pos:end="161:17">0x12</literal></expr>:</case>

            <if_stmt pos:start="163:13" pos:end="169:13"><if pos:start="163:13" pos:end="169:13">if <condition pos:start="163:16" pos:end="163:34">(<expr pos:start="163:17" pos:end="163:33"><name pos:start="163:17" pos:end="163:29"><name pos:start="163:17" pos:end="163:22">region</name><operator pos:start="163:23" pos:end="163:24">-&gt;</operator><name pos:start="163:25" pos:end="163:29">depth</name></name> <operator pos:start="163:31" pos:end="163:31">&lt;</operator> <literal type="number" pos:start="163:33" pos:end="163:33">8</literal></expr>)</condition> <block pos:start="163:36" pos:end="169:13">{<block_content pos:start="165:17" pos:end="167:23">

                <expr_stmt pos:start="165:17" pos:end="165:101"><expr pos:start="165:17" pos:end="165:100"><call pos:start="165:17" pos:end="165:100"><name pos:start="165:17" pos:end="165:22">av_log</name><argument_list pos:start="165:23" pos:end="165:100">(<argument pos:start="165:24" pos:end="165:28"><expr pos:start="165:24" pos:end="165:28"><name pos:start="165:24" pos:end="165:28">avctx</name></expr></argument>, <argument pos:start="165:31" pos:end="165:42"><expr pos:start="165:31" pos:end="165:42"><name pos:start="165:31" pos:end="165:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="165:45" pos:end="165:84"><expr pos:start="165:45" pos:end="165:84"><literal type="string" pos:start="165:45" pos:end="165:84">"8-bit pixel string in %d-bit region!\n"</literal></expr></argument>, <argument pos:start="165:87" pos:end="165:99"><expr pos:start="165:87" pos:end="165:99"><name pos:start="165:87" pos:end="165:99"><name pos:start="165:87" pos:end="165:92">region</name><operator pos:start="165:93" pos:end="165:94">-&gt;</operator><name pos:start="165:95" pos:end="165:99">depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="167:17" pos:end="167:23">return;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="173:13" pos:end="177:63"><expr pos:start="173:13" pos:end="177:62"><name pos:start="173:13" pos:end="173:17">x_pos</name> <operator pos:start="173:19" pos:end="173:20">+=</operator> <call pos:start="173:22" pos:end="177:62"><name pos:start="173:22" pos:end="173:44">dvbsub_read_8bit_string</name><argument_list pos:start="173:45" pos:end="177:62">(<argument pos:start="173:46" pos:end="173:83"><expr pos:start="173:46" pos:end="173:83"><name pos:start="173:46" pos:end="173:49">pbuf</name> <operator pos:start="173:51" pos:end="173:51">+</operator> <operator pos:start="173:53" pos:end="173:53">(</operator><name pos:start="173:54" pos:end="173:58">y_pos</name> <operator pos:start="173:60" pos:end="173:60">*</operator> <name pos:start="173:62" pos:end="173:74"><name pos:start="173:62" pos:end="173:67">region</name><operator pos:start="173:68" pos:end="173:69">-&gt;</operator><name pos:start="173:70" pos:end="173:74">width</name></name><operator pos:start="173:75" pos:end="173:75">)</operator> <operator pos:start="173:77" pos:end="173:77">+</operator> <name pos:start="173:79" pos:end="173:83">x_pos</name></expr></argument>,

                                                <argument pos:start="175:49" pos:end="175:69"><expr pos:start="175:49" pos:end="175:69"><name pos:start="175:49" pos:end="175:61"><name pos:start="175:49" pos:end="175:54">region</name><operator pos:start="175:55" pos:end="175:56">-&gt;</operator><name pos:start="175:57" pos:end="175:61">width</name></name> <operator pos:start="175:63" pos:end="175:63">-</operator> <name pos:start="175:65" pos:end="175:69">x_pos</name></expr></argument>, <argument pos:start="175:72" pos:end="175:75"><expr pos:start="175:72" pos:end="175:75"><operator pos:start="175:72" pos:end="175:72">&amp;</operator><name pos:start="175:73" pos:end="175:75">buf</name></expr></argument>, <argument pos:start="175:78" pos:end="175:90"><expr pos:start="175:78" pos:end="175:90"><name pos:start="175:78" pos:end="175:84">buf_end</name> <operator pos:start="175:86" pos:end="175:86">-</operator> <name pos:start="175:88" pos:end="175:90">buf</name></expr></argument>,

                                                <argument pos:start="177:49" pos:end="177:55"><expr pos:start="177:49" pos:end="177:55"><name pos:start="177:49" pos:end="177:55">non_mod</name></expr></argument>, <argument pos:start="177:58" pos:end="177:61"><expr pos:start="177:58" pos:end="177:61"><name pos:start="177:58" pos:end="177:61">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="179:13" pos:end="179:18">break;</break>



        <case pos:start="183:9" pos:end="183:18">case <expr pos:start="183:14" pos:end="183:17"><literal type="number" pos:start="183:14" pos:end="183:17">0x20</literal></expr>:</case>

            <expr_stmt pos:start="185:13" pos:end="185:37"><expr pos:start="185:13" pos:end="185:36"><name pos:start="185:13" pos:end="185:22"><name pos:start="185:13" pos:end="185:19">map2to4</name><index pos:start="185:20" pos:end="185:22">[<expr pos:start="185:21" pos:end="185:21"><literal type="number" pos:start="185:21" pos:end="185:21">0</literal></expr>]</index></name> <operator pos:start="185:24" pos:end="185:24">=</operator> <operator pos:start="185:26" pos:end="185:26">(</operator><operator pos:start="185:27" pos:end="185:27">*</operator><name pos:start="185:28" pos:end="185:30">buf</name><operator pos:start="185:31" pos:end="185:31">)</operator> <operator pos:start="185:33" pos:end="185:34">&gt;&gt;</operator> <literal type="number" pos:start="185:36" pos:end="185:36">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:40"><expr pos:start="187:13" pos:end="187:39"><name pos:start="187:13" pos:end="187:22"><name pos:start="187:13" pos:end="187:19">map2to4</name><index pos:start="187:20" pos:end="187:22">[<expr pos:start="187:21" pos:end="187:21"><literal type="number" pos:start="187:21" pos:end="187:21">1</literal></expr>]</index></name> <operator pos:start="187:24" pos:end="187:24">=</operator> <operator pos:start="187:26" pos:end="187:26">(</operator><operator pos:start="187:27" pos:end="187:27">*</operator><name pos:start="187:28" pos:end="187:30">buf</name><operator pos:start="187:31" pos:end="187:32">++</operator><operator pos:start="187:33" pos:end="187:33">)</operator> <operator pos:start="187:35" pos:end="187:35">&amp;</operator> <literal type="number" pos:start="187:37" pos:end="187:39">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:37"><expr pos:start="189:13" pos:end="189:36"><name pos:start="189:13" pos:end="189:22"><name pos:start="189:13" pos:end="189:19">map2to4</name><index pos:start="189:20" pos:end="189:22">[<expr pos:start="189:21" pos:end="189:21"><literal type="number" pos:start="189:21" pos:end="189:21">2</literal></expr>]</index></name> <operator pos:start="189:24" pos:end="189:24">=</operator> <operator pos:start="189:26" pos:end="189:26">(</operator><operator pos:start="189:27" pos:end="189:27">*</operator><name pos:start="189:28" pos:end="189:30">buf</name><operator pos:start="189:31" pos:end="189:31">)</operator> <operator pos:start="189:33" pos:end="189:34">&gt;&gt;</operator> <literal type="number" pos:start="189:36" pos:end="189:36">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:40"><expr pos:start="191:13" pos:end="191:39"><name pos:start="191:13" pos:end="191:22"><name pos:start="191:13" pos:end="191:19">map2to4</name><index pos:start="191:20" pos:end="191:22">[<expr pos:start="191:21" pos:end="191:21"><literal type="number" pos:start="191:21" pos:end="191:21">3</literal></expr>]</index></name> <operator pos:start="191:24" pos:end="191:24">=</operator> <operator pos:start="191:26" pos:end="191:26">(</operator><operator pos:start="191:27" pos:end="191:27">*</operator><name pos:start="191:28" pos:end="191:30">buf</name><operator pos:start="191:31" pos:end="191:32">++</operator><operator pos:start="191:33" pos:end="191:33">)</operator> <operator pos:start="191:35" pos:end="191:35">&amp;</operator> <literal type="number" pos:start="191:37" pos:end="191:39">0xf</literal></expr>;</expr_stmt>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        <case pos:start="195:9" pos:end="195:18">case <expr pos:start="195:14" pos:end="195:17"><literal type="number" pos:start="195:14" pos:end="195:17">0x21</literal></expr>:</case>

            <for pos:start="197:13" pos:end="199:36">for <control pos:start="197:17" pos:end="197:35">(<init pos:start="197:18" pos:end="197:23"><expr pos:start="197:18" pos:end="197:22"><name pos:start="197:18" pos:end="197:18">i</name> <operator pos:start="197:20" pos:end="197:20">=</operator> <literal type="number" pos:start="197:22" pos:end="197:22">0</literal></expr>;</init> <condition pos:start="197:25" pos:end="197:30"><expr pos:start="197:25" pos:end="197:29"><name pos:start="197:25" pos:end="197:25">i</name> <operator pos:start="197:27" pos:end="197:27">&lt;</operator> <literal type="number" pos:start="197:29" pos:end="197:29">4</literal></expr>;</condition> <incr pos:start="197:32" pos:end="197:34"><expr pos:start="197:32" pos:end="197:34"><name pos:start="197:32" pos:end="197:32">i</name><operator pos:start="197:33" pos:end="197:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="199:17" pos:end="199:36"><block_content pos:start="199:17" pos:end="199:36">

                <expr_stmt pos:start="199:17" pos:end="199:36"><expr pos:start="199:17" pos:end="199:35"><name pos:start="199:17" pos:end="199:26"><name pos:start="199:17" pos:end="199:23">map2to8</name><index pos:start="199:24" pos:end="199:26">[<expr pos:start="199:25" pos:end="199:25"><name pos:start="199:25" pos:end="199:25">i</name></expr>]</index></name> <operator pos:start="199:28" pos:end="199:28">=</operator> <operator pos:start="199:30" pos:end="199:30">*</operator><name pos:start="199:31" pos:end="199:33">buf</name><operator pos:start="199:34" pos:end="199:35">++</operator></expr>;</expr_stmt></block_content></block></for>

            <break pos:start="201:13" pos:end="201:18">break;</break>

        <case pos:start="203:9" pos:end="203:18">case <expr pos:start="203:14" pos:end="203:17"><literal type="number" pos:start="203:14" pos:end="203:17">0x22</literal></expr>:</case>

            <for pos:start="205:13" pos:end="207:36">for <control pos:start="205:17" pos:end="205:36">(<init pos:start="205:18" pos:end="205:23"><expr pos:start="205:18" pos:end="205:22"><name pos:start="205:18" pos:end="205:18">i</name> <operator pos:start="205:20" pos:end="205:20">=</operator> <literal type="number" pos:start="205:22" pos:end="205:22">0</literal></expr>;</init> <condition pos:start="205:25" pos:end="205:31"><expr pos:start="205:25" pos:end="205:30"><name pos:start="205:25" pos:end="205:25">i</name> <operator pos:start="205:27" pos:end="205:27">&lt;</operator> <literal type="number" pos:start="205:29" pos:end="205:30">16</literal></expr>;</condition> <incr pos:start="205:33" pos:end="205:35"><expr pos:start="205:33" pos:end="205:35"><name pos:start="205:33" pos:end="205:33">i</name><operator pos:start="205:34" pos:end="205:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="207:17" pos:end="207:36"><block_content pos:start="207:17" pos:end="207:36">

                <expr_stmt pos:start="207:17" pos:end="207:36"><expr pos:start="207:17" pos:end="207:35"><name pos:start="207:17" pos:end="207:26"><name pos:start="207:17" pos:end="207:23">map4to8</name><index pos:start="207:24" pos:end="207:26">[<expr pos:start="207:25" pos:end="207:25"><name pos:start="207:25" pos:end="207:25">i</name></expr>]</index></name> <operator pos:start="207:28" pos:end="207:28">=</operator> <operator pos:start="207:30" pos:end="207:30">*</operator><name pos:start="207:31" pos:end="207:33">buf</name><operator pos:start="207:34" pos:end="207:35">++</operator></expr>;</expr_stmt></block_content></block></for>

            <break pos:start="209:13" pos:end="209:18">break;</break>



        <case pos:start="213:9" pos:end="213:18">case <expr pos:start="213:14" pos:end="213:17"><literal type="number" pos:start="213:14" pos:end="213:17">0xf0</literal></expr>:</case>

            <expr_stmt pos:start="215:13" pos:end="215:35"><expr pos:start="215:13" pos:end="215:34"><name pos:start="215:13" pos:end="215:17">x_pos</name> <operator pos:start="215:19" pos:end="215:19">=</operator> <name pos:start="215:21" pos:end="215:34"><name pos:start="215:21" pos:end="215:27">display</name><operator pos:start="215:28" pos:end="215:29">-&gt;</operator><name pos:start="215:30" pos:end="215:34">x_pos</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:23"><expr pos:start="217:13" pos:end="217:22"><name pos:start="217:13" pos:end="217:17">y_pos</name> <operator pos:start="217:19" pos:end="217:20">+=</operator> <literal type="number" pos:start="217:22" pos:end="217:22">2</literal></expr>;</expr_stmt>

            <break pos:start="219:13" pos:end="219:18">break;</break>

        <default pos:start="221:9" pos:end="221:16">default:</default>

            <expr_stmt pos:start="223:13" pos:end="223:91"><expr pos:start="223:13" pos:end="223:90"><call pos:start="223:13" pos:end="223:90"><name pos:start="223:13" pos:end="223:18">av_log</name><argument_list pos:start="223:19" pos:end="223:90">(<argument pos:start="223:20" pos:end="223:24"><expr pos:start="223:20" pos:end="223:24"><name pos:start="223:20" pos:end="223:24">avctx</name></expr></argument>, <argument pos:start="223:27" pos:end="223:37"><expr pos:start="223:27" pos:end="223:37"><name pos:start="223:27" pos:end="223:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="223:40" pos:end="223:79"><expr pos:start="223:40" pos:end="223:79"><literal type="string" pos:start="223:40" pos:end="223:79">"Unknown/unsupported pixel block 0x%x\n"</literal></expr></argument>, <argument pos:start="223:82" pos:end="223:89"><expr pos:start="223:82" pos:end="223:89"><operator pos:start="223:82" pos:end="223:82">*</operator><operator pos:start="223:83" pos:end="223:83">(</operator><name pos:start="223:84" pos:end="223:86">buf</name><operator pos:start="223:87" pos:end="223:87">-</operator><literal type="number" pos:start="223:88" pos:end="223:88">1</literal><operator pos:start="223:89" pos:end="223:89">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></while>



</block_content>}</block></function>
</unit>
