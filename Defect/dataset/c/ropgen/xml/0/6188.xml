<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6188.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:44">test_validate_fail_struct_nested</name><parameter_list pos:start="1:45" pos:end="3:65">(<parameter pos:start="1:46" pos:end="1:71"><decl pos:start="1:46" pos:end="1:71"><type pos:start="1:46" pos:end="1:71"><name pos:start="1:46" pos:end="1:65">TestInputVisitorData</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">data</name></decl></parameter>,

                                              <parameter pos:start="3:47" pos:end="3:64"><decl pos:start="3:47" pos:end="3:64"><type pos:start="3:47" pos:end="3:64"><specifier pos:start="3:47" pos:end="3:51">const</specifier> <name pos:start="3:53" pos:end="3:56">void</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:64">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="23:33">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">UserDefNested</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">udp</name> <init pos:start="7:24" pos:end="7:29">= <expr pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">Visitor</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">v</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:213"><expr pos:start="15:5" pos:end="15:212"><name pos:start="15:5" pos:end="15:5">v</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <call pos:start="15:9" pos:end="15:212"><name pos:start="15:9" pos:end="15:26">validate_test_init</name><argument_list pos:start="15:27" pos:end="15:212">(<argument pos:start="15:28" pos:end="15:31"><expr pos:start="15:28" pos:end="15:31"><name pos:start="15:28" pos:end="15:31">data</name></expr></argument>, <argument pos:start="15:34" pos:end="15:211"><expr pos:start="15:34" pos:end="15:211"><literal type="string" pos:start="15:34" pos:end="15:211">"{ 'string0': 'string0', 'dict1': { 'string1': 'string1', 'dict2': { 'userdef1': { 'integer': 42, 'string': 'string', 'extra': [42, 23, {'foo':'bar'}] }, 'string2': 'string2'}}}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:50"><expr pos:start="19:5" pos:end="19:49"><call pos:start="19:5" pos:end="19:49"><name pos:start="19:5" pos:end="19:28">visit_type_UserDefNested</name><argument_list pos:start="19:29" pos:end="19:49">(<argument pos:start="19:30" pos:end="19:30"><expr pos:start="19:30" pos:end="19:30"><name pos:start="19:30" pos:end="19:30">v</name></expr></argument>, <argument pos:start="19:33" pos:end="19:36"><expr pos:start="19:33" pos:end="19:36"><operator pos:start="19:33" pos:end="19:33">&amp;</operator><name pos:start="19:34" pos:end="19:36">udp</name></expr></argument>, <argument pos:start="19:39" pos:end="19:42"><expr pos:start="19:39" pos:end="19:42"><name pos:start="19:39" pos:end="19:42">NULL</name></expr></argument>, <argument pos:start="19:45" pos:end="19:48"><expr pos:start="19:45" pos:end="19:48"><operator pos:start="19:45" pos:end="19:45">&amp;</operator><name pos:start="19:46" pos:end="19:48">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><call pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:12">g_assert</name><argument_list pos:start="21:13" pos:end="21:17">(<argument pos:start="21:14" pos:end="21:16"><expr pos:start="21:14" pos:end="21:16"><name pos:start="21:14" pos:end="21:16">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><call pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:27">qapi_free_UserDefNested</name><argument_list pos:start="23:28" pos:end="23:32">(<argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">udp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
