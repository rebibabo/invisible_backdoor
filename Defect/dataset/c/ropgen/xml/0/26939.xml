<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26939.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">vnc_display_close</name><parameter_list pos:start="1:30" pos:end="1:45">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:40">VncDisplay</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">vs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="50:0">

    <if_stmt pos:start="5:5" pos:end="7:15"><if pos:start="5:5" pos:end="7:15">if <condition pos:start="5:8" pos:end="5:12">(<expr pos:start="5:9" pos:end="5:11"><operator pos:start="5:9" pos:end="5:9">!</operator><name pos:start="5:10" pos:end="5:11">vs</name></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:15"><block_content pos:start="7:9" pos:end="7:15">

        <return pos:start="7:9" pos:end="7:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:24"><expr pos:start="9:5" pos:end="9:23"><call pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:10">g_free</name><argument_list pos:start="9:11" pos:end="9:23">(<argument pos:start="9:12" pos:end="9:22"><expr pos:start="9:12" pos:end="9:22"><name pos:start="9:12" pos:end="9:22"><name pos:start="9:12" pos:end="9:13">vs</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:22">display</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:6">vs</name><operator pos:start="11:7" pos:end="11:8">-&gt;</operator><name pos:start="11:9" pos:end="11:15">display</name></name> <operator pos:start="11:17" pos:end="11:17">=</operator> <name pos:start="11:19" pos:end="11:22">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="24:0"><if pos:start="13:5" pos:end="24:0">if <condition pos:start="13:8" pos:end="13:24">(<expr pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:10">vs</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:17">lsock</name></name> <operator pos:start="13:19" pos:end="13:20">!=</operator> <operator pos:start="13:22" pos:end="13:22">-</operator><literal type="number" pos:start="13:23" pos:end="13:23">1</literal></expr>)</condition> <block pos:start="13:26" pos:end="24:0">{<block_content pos:start="15:9" pos:end="19:23">

        <expr_stmt pos:start="15:9" pos:end="15:64"><expr pos:start="15:9" pos:end="15:63"><call pos:start="15:9" pos:end="15:63"><name pos:start="15:9" pos:end="15:28">qemu_set_fd_handler2</name><argument_list pos:start="15:29" pos:end="15:63">(<argument pos:start="15:30" pos:end="15:38"><expr pos:start="15:30" pos:end="15:38"><name pos:start="15:30" pos:end="15:38"><name pos:start="15:30" pos:end="15:31">vs</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:38">lsock</name></name></expr></argument>, <argument pos:start="15:41" pos:end="15:44"><expr pos:start="15:41" pos:end="15:44"><name pos:start="15:41" pos:end="15:44">NULL</name></expr></argument>, <argument pos:start="15:47" pos:end="15:50"><expr pos:start="15:47" pos:end="15:50"><name pos:start="15:47" pos:end="15:50">NULL</name></expr></argument>, <argument pos:start="15:53" pos:end="15:56"><expr pos:start="15:53" pos:end="15:56"><name pos:start="15:53" pos:end="15:56">NULL</name></expr></argument>, <argument pos:start="15:59" pos:end="15:62"><expr pos:start="15:59" pos:end="15:62"><name pos:start="15:59" pos:end="15:62">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:25"><expr pos:start="17:9" pos:end="17:24"><call pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:13">close</name><argument_list pos:start="17:14" pos:end="17:24">(<argument pos:start="17:15" pos:end="17:23"><expr pos:start="17:15" pos:end="17:23"><name pos:start="17:15" pos:end="17:23"><name pos:start="17:15" pos:end="17:16">vs</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:23">lsock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:23"><expr pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:10">vs</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:17">lsock</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <operator pos:start="19:21" pos:end="19:21">-</operator><literal type="number" pos:start="19:22" pos:end="19:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:ifdef pos:start="23:1" pos:end="23:20">#<cpp:directive pos:start="23:2" pos:end="23:6">ifdef</cpp:directive> <name pos:start="23:8" pos:end="23:20">CONFIG_VNC_WS</name></cpp:ifdef>

    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><call pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:10">g_free</name><argument_list pos:start="25:11" pos:end="25:26">(<argument pos:start="25:12" pos:end="25:25"><expr pos:start="25:12" pos:end="25:25"><name pos:start="25:12" pos:end="25:25"><name pos:start="25:12" pos:end="25:13">vs</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:25">ws_display</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:26"><expr pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:6">vs</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:18">ws_display</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:25">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="40:0"><if pos:start="29:5" pos:end="40:0">if <condition pos:start="29:8" pos:end="29:27">(<expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:10">vs</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:20">lwebsock</name></name> <operator pos:start="29:22" pos:end="29:23">!=</operator> <operator pos:start="29:25" pos:end="29:25">-</operator><literal type="number" pos:start="29:26" pos:end="29:26">1</literal></expr>)</condition> <block pos:start="29:29" pos:end="40:0">{<block_content pos:start="31:9" pos:end="35:26">

        <expr_stmt pos:start="31:9" pos:end="31:67"><expr pos:start="31:9" pos:end="31:66"><call pos:start="31:9" pos:end="31:66"><name pos:start="31:9" pos:end="31:28">qemu_set_fd_handler2</name><argument_list pos:start="31:29" pos:end="31:66">(<argument pos:start="31:30" pos:end="31:41"><expr pos:start="31:30" pos:end="31:41"><name pos:start="31:30" pos:end="31:41"><name pos:start="31:30" pos:end="31:31">vs</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:41">lwebsock</name></name></expr></argument>, <argument pos:start="31:44" pos:end="31:47"><expr pos:start="31:44" pos:end="31:47"><name pos:start="31:44" pos:end="31:47">NULL</name></expr></argument>, <argument pos:start="31:50" pos:end="31:53"><expr pos:start="31:50" pos:end="31:53"><name pos:start="31:50" pos:end="31:53">NULL</name></expr></argument>, <argument pos:start="31:56" pos:end="31:59"><expr pos:start="31:56" pos:end="31:59"><name pos:start="31:56" pos:end="31:59">NULL</name></expr></argument>, <argument pos:start="31:62" pos:end="31:65"><expr pos:start="31:62" pos:end="31:65"><name pos:start="31:62" pos:end="31:65">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:28"><expr pos:start="33:9" pos:end="33:27"><call pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:13">close</name><argument_list pos:start="33:14" pos:end="33:27">(<argument pos:start="33:15" pos:end="33:26"><expr pos:start="33:15" pos:end="33:26"><name pos:start="33:15" pos:end="33:26"><name pos:start="33:15" pos:end="33:16">vs</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:26">lwebsock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:26"><expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:10">vs</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:20">lwebsock</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <operator pos:start="35:24" pos:end="35:24">-</operator><literal type="number" pos:start="35:25" pos:end="35:25">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="39:8" pos:end="39:26">/* CONFIG_VNC_WS */</comment>

    <expr_stmt pos:start="41:5" pos:end="44:0"><expr pos:start="41:5" pos:end="41:31"><name pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:6">vs</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:12">auth</name></name> <operator pos:start="41:14" pos:end="41:14">=</operator> <name pos:start="41:16" pos:end="41:31">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="43:1" pos:end="43:21">#<cpp:directive pos:start="43:2" pos:end="43:6">ifdef</cpp:directive> <name pos:start="43:8" pos:end="43:21">CONFIG_VNC_TLS</name></cpp:ifdef>

    <expr_stmt pos:start="45:5" pos:end="45:35"><expr pos:start="45:5" pos:end="45:34"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:6">vs</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:15">subauth</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:34">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="50:0"><expr pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:6">vs</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:11">tls</name><operator pos:start="47:12" pos:end="47:12">.</operator><name pos:start="47:13" pos:end="47:22">x509verify</name></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <literal type="number" pos:start="47:26" pos:end="47:26">0</literal></expr>;</expr_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
