<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6584.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">set_params</name><parameter_list pos:start="1:22" pos:end="1:63">(<parameter pos:start="1:23" pos:end="1:42"><decl pos:start="1:23" pos:end="1:42"><type pos:start="1:23" pos:end="1:42"><name pos:start="1:23" pos:end="1:37">AVFilterContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">ctx</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:62">params</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="151:1">{<block_content pos:start="5:5" pos:end="149:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">Frei0rContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:32">= <expr pos:start="5:24" pos:end="5:32"><name pos:start="5:24" pos:end="5:32"><name pos:start="5:24" pos:end="5:26">ctx</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:32">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:15">params</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="17:5" pos:end="145:5">for <control pos:start="17:9" pos:end="17:51">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:46"><expr pos:start="17:17" pos:end="17:45"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:45"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:34">plugin_info</name><operator pos:start="17:35" pos:end="17:35">.</operator><name pos:start="17:36" pos:end="17:45">num_params</name></name></expr>;</condition> <incr pos:start="17:48" pos:end="17:50"><expr pos:start="17:48" pos:end="17:50"><name pos:start="17:48" pos:end="17:48">i</name><operator pos:start="17:49" pos:end="17:50">++</operator></expr></incr>)</control> <block pos:start="17:53" pos:end="145:5">{<block_content pos:start="19:9" pos:end="143:42">

        <decl_stmt pos:start="19:9" pos:end="19:30"><decl pos:start="19:9" pos:end="19:29"><type pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:24">f0r_param_info_t</name></type> <name pos:start="19:26" pos:end="19:29">info</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:20"><decl pos:start="21:9" pos:end="21:19"><type pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:12">char</name> <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:19">param</name></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:16"><decl pos:start="23:9" pos:end="23:15"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:15">ret</name></decl>;</decl_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:36"><expr pos:start="27:9" pos:end="27:35"><call pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:25">get_param_info</name></name><argument_list pos:start="27:26" pos:end="27:35">(<argument pos:start="27:27" pos:end="27:31"><expr pos:start="27:27" pos:end="27:31"><operator pos:start="27:27" pos:end="27:27">&amp;</operator><name pos:start="27:28" pos:end="27:31">info</name></expr></argument>, <argument pos:start="27:34" pos:end="27:34"><expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="31:9" pos:end="47:9"><if pos:start="31:9" pos:end="47:9">if <condition pos:start="31:12" pos:end="31:20">(<expr pos:start="31:13" pos:end="31:19"><operator pos:start="31:13" pos:end="31:13">*</operator><name pos:start="31:14" pos:end="31:19">params</name></expr>)</condition> <block pos:start="31:22" pos:end="47:9">{<block_content pos:start="33:13" pos:end="45:27">

            <if_stmt pos:start="33:13" pos:end="35:39"><if pos:start="33:13" pos:end="35:39">if <condition pos:start="33:16" pos:end="33:54">(<expr pos:start="33:17" pos:end="33:53"><operator pos:start="33:17" pos:end="33:17">!</operator><operator pos:start="33:18" pos:end="33:18">(</operator><name pos:start="33:19" pos:end="33:23">param</name> <operator pos:start="33:25" pos:end="33:25">=</operator> <call pos:start="33:27" pos:end="33:52"><name pos:start="33:27" pos:end="33:38">av_get_token</name><argument_list pos:start="33:39" pos:end="33:52">(<argument pos:start="33:40" pos:end="33:46"><expr pos:start="33:40" pos:end="33:46"><operator pos:start="33:40" pos:end="33:40">&amp;</operator><name pos:start="33:41" pos:end="33:46">params</name></expr></argument>, <argument pos:start="33:49" pos:end="33:51"><expr pos:start="33:49" pos:end="33:51"><literal type="string" pos:start="33:49" pos:end="33:51">"|"</literal></expr></argument>)</argument_list></call><operator pos:start="33:53" pos:end="33:53">)</operator></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:39"><block_content pos:start="35:17" pos:end="35:39">

                <return pos:start="35:17" pos:end="35:39">return <expr pos:start="35:24" pos:end="35:38"><call pos:start="35:24" pos:end="35:38"><name pos:start="35:24" pos:end="35:30">AVERROR</name><argument_list pos:start="35:31" pos:end="35:38">(<argument pos:start="35:32" pos:end="35:37"><expr pos:start="35:32" pos:end="35:37"><name pos:start="35:32" pos:end="35:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:21"><expr pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:18">params</name><operator pos:start="37:19" pos:end="37:20">++</operator></expr>;</expr_stmt>               <comment type="block" pos:start="37:37" pos:end="37:50">/* skip ':' */</comment>

            <expr_stmt pos:start="39:13" pos:end="39:49"><expr pos:start="39:13" pos:end="39:48"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:48"><name pos:start="39:19" pos:end="39:27">set_param</name><argument_list pos:start="39:28" pos:end="39:48">(<argument pos:start="39:29" pos:end="39:31"><expr pos:start="39:29" pos:end="39:31"><name pos:start="39:29" pos:end="39:31">ctx</name></expr></argument>, <argument pos:start="39:34" pos:end="39:37"><expr pos:start="39:34" pos:end="39:37"><name pos:start="39:34" pos:end="39:37">info</name></expr></argument>, <argument pos:start="39:40" pos:end="39:40"><expr pos:start="39:40" pos:end="39:40"><name pos:start="39:40" pos:end="39:40">i</name></expr></argument>, <argument pos:start="39:43" pos:end="39:47"><expr pos:start="39:43" pos:end="39:47"><name pos:start="39:43" pos:end="39:47">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:27"><expr pos:start="41:13" pos:end="41:26"><call pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:19">av_free</name><argument_list pos:start="41:20" pos:end="41:26">(<argument pos:start="41:21" pos:end="41:25"><expr pos:start="41:21" pos:end="41:25"><name pos:start="41:21" pos:end="41:25">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="45:27"><if pos:start="43:13" pos:end="45:27">if <condition pos:start="43:16" pos:end="43:24">(<expr pos:start="43:17" pos:end="43:23"><name pos:start="43:17" pos:end="43:19">ret</name> <operator pos:start="43:21" pos:end="43:21">&lt;</operator> <literal type="number" pos:start="43:23" pos:end="43:23">0</literal></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:27"><block_content pos:start="45:17" pos:end="45:27">

                <return pos:start="45:17" pos:end="45:27">return <expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="72:0"><expr pos:start="51:9" pos:end="67:32"><call pos:start="51:9" pos:end="67:32"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="67:32">(<argument pos:start="51:16" pos:end="51:18"><expr pos:start="51:16" pos:end="51:18"><name pos:start="51:16" pos:end="51:18">ctx</name></expr></argument>, <argument pos:start="51:21" pos:end="51:34"><expr pos:start="51:21" pos:end="51:34"><name pos:start="51:21" pos:end="51:34">AV_LOG_VERBOSE</name></expr></argument>,

               <argument pos:start="53:16" pos:end="53:59"><expr pos:start="53:16" pos:end="53:59"><literal type="string" pos:start="53:16" pos:end="53:59">"idx:%d name:'%s' type:%s explanation:'%s' "</literal></expr></argument>,

               <argument pos:start="55:16" pos:end="55:16"><expr pos:start="55:16" pos:end="55:16"><name pos:start="55:16" pos:end="55:16">i</name></expr></argument>, <argument pos:start="55:19" pos:end="55:27"><expr pos:start="55:19" pos:end="55:27"><name pos:start="55:19" pos:end="55:27"><name pos:start="55:19" pos:end="55:22">info</name><operator pos:start="55:23" pos:end="55:23">.</operator><name pos:start="55:24" pos:end="55:27">name</name></name></expr></argument>,

               <argument pos:start="57:16" pos:end="65:71"><expr pos:start="57:16" pos:end="65:71"><ternary pos:start="57:16" pos:end="65:71"><condition pos:start="57:16" pos:end="57:48"><expr pos:start="57:16" pos:end="57:42"><name pos:start="57:16" pos:end="57:24"><name pos:start="57:16" pos:end="57:19">info</name><operator pos:start="57:20" pos:end="57:20">.</operator><name pos:start="57:21" pos:end="57:24">type</name></name> <operator pos:start="57:26" pos:end="57:27">==</operator> <name pos:start="57:29" pos:end="57:42">F0R_PARAM_BOOL</name></expr>     ?</condition><then pos:start="57:50" pos:end="57:55"> <expr pos:start="57:50" pos:end="57:55"><literal type="string" pos:start="57:50" pos:end="57:55">"bool"</literal></expr>     </then><else pos:start="57:61" pos:end="65:71">:

               <expr pos:start="59:16" pos:end="65:71"><ternary pos:start="59:16" pos:end="65:71"><condition pos:start="59:16" pos:end="59:48"><expr pos:start="59:16" pos:end="59:44"><name pos:start="59:16" pos:end="59:24"><name pos:start="59:16" pos:end="59:19">info</name><operator pos:start="59:20" pos:end="59:20">.</operator><name pos:start="59:21" pos:end="59:24">type</name></name> <operator pos:start="59:26" pos:end="59:27">==</operator> <name pos:start="59:29" pos:end="59:44">F0R_PARAM_DOUBLE</name></expr>   ?</condition><then pos:start="59:50" pos:end="59:57"> <expr pos:start="59:50" pos:end="59:57"><literal type="string" pos:start="59:50" pos:end="59:57">"double"</literal></expr>   </then><else pos:start="59:61" pos:end="65:71">:

               <expr pos:start="61:16" pos:end="65:71"><ternary pos:start="61:16" pos:end="65:71"><condition pos:start="61:16" pos:end="61:48"><expr pos:start="61:16" pos:end="61:43"><name pos:start="61:16" pos:end="61:24"><name pos:start="61:16" pos:end="61:19">info</name><operator pos:start="61:20" pos:end="61:20">.</operator><name pos:start="61:21" pos:end="61:24">type</name></name> <operator pos:start="61:26" pos:end="61:27">==</operator> <name pos:start="61:29" pos:end="61:43">F0R_PARAM_COLOR</name></expr>    ?</condition><then pos:start="61:50" pos:end="61:56"> <expr pos:start="61:50" pos:end="61:56"><literal type="string" pos:start="61:50" pos:end="61:56">"color"</literal></expr>    </then><else pos:start="61:61" pos:end="65:71">:

               <expr pos:start="63:16" pos:end="65:71"><ternary pos:start="63:16" pos:end="65:71"><condition pos:start="63:16" pos:end="63:48"><expr pos:start="63:16" pos:end="63:46"><name pos:start="63:16" pos:end="63:24"><name pos:start="63:16" pos:end="63:19">info</name><operator pos:start="63:20" pos:end="63:20">.</operator><name pos:start="63:21" pos:end="63:24">type</name></name> <operator pos:start="63:26" pos:end="63:27">==</operator> <name pos:start="63:29" pos:end="63:46">F0R_PARAM_POSITION</name></expr> ?</condition><then pos:start="63:50" pos:end="63:59"> <expr pos:start="63:50" pos:end="63:59"><literal type="string" pos:start="63:50" pos:end="63:59">"position"</literal></expr> </then><else pos:start="63:61" pos:end="65:71">:

               <expr pos:start="65:16" pos:end="65:71"><ternary pos:start="65:16" pos:end="65:71"><condition pos:start="65:16" pos:end="65:48"><expr pos:start="65:16" pos:end="65:44"><name pos:start="65:16" pos:end="65:24"><name pos:start="65:16" pos:end="65:19">info</name><operator pos:start="65:20" pos:end="65:20">.</operator><name pos:start="65:21" pos:end="65:24">type</name></name> <operator pos:start="65:26" pos:end="65:27">==</operator> <name pos:start="65:29" pos:end="65:44">F0R_PARAM_STRING</name></expr>   ?</condition><then pos:start="65:50" pos:end="65:57"> <expr pos:start="65:50" pos:end="65:57"><literal type="string" pos:start="65:50" pos:end="65:57">"string"</literal></expr>   </then><else pos:start="65:61" pos:end="65:71">: <expr pos:start="65:63" pos:end="65:71"><literal type="string" pos:start="65:63" pos:end="65:71">"unknown"</literal></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></argument>,

               <argument pos:start="67:16" pos:end="67:31"><expr pos:start="67:16" pos:end="67:31"><name pos:start="67:16" pos:end="67:31"><name pos:start="67:16" pos:end="67:19">info</name><operator pos:start="67:20" pos:end="67:20">.</operator><name pos:start="67:21" pos:end="67:31">explanation</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="71:1" pos:end="71:12">#<cpp:directive pos:start="71:2" pos:end="71:6">ifdef</cpp:directive> <name pos:start="71:8" pos:end="71:12">DEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="73:9" pos:end="73:44"><expr pos:start="73:9" pos:end="73:43"><call pos:start="73:9" pos:end="73:43"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="73:43">(<argument pos:start="73:16" pos:end="73:18"><expr pos:start="73:16" pos:end="73:18"><name pos:start="73:16" pos:end="73:18">ctx</name></expr></argument>, <argument pos:start="73:21" pos:end="73:32"><expr pos:start="73:21" pos:end="73:32"><name pos:start="73:21" pos:end="73:32">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="73:35" pos:end="73:42"><expr pos:start="73:35" pos:end="73:42"><literal type="string" pos:start="73:35" pos:end="73:42">"value:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="75:9" pos:end="142:0">switch <condition pos:start="75:16" pos:end="75:26">(<expr pos:start="75:17" pos:end="75:25"><name pos:start="75:17" pos:end="75:25"><name pos:start="75:17" pos:end="75:20">info</name><operator pos:start="75:21" pos:end="75:21">.</operator><name pos:start="75:22" pos:end="75:25">type</name></name></expr>)</condition> <block pos:start="75:28" pos:end="142:0">{<block_content pos:start="77:13" pos:end="137:18">

            <decl_stmt pos:start="77:13" pos:end="77:20"><decl pos:start="77:13" pos:end="77:19"><type pos:start="77:13" pos:end="77:18"><name pos:start="77:13" pos:end="77:16">void</name> <modifier pos:start="77:18" pos:end="77:18">*</modifier></type><name pos:start="77:19" pos:end="77:19">v</name></decl>;</decl_stmt>

            <decl_stmt pos:start="79:13" pos:end="79:21"><decl pos:start="79:13" pos:end="79:20"><type pos:start="79:13" pos:end="79:18"><name pos:start="79:13" pos:end="79:18">double</name></type> <name pos:start="79:20" pos:end="79:20">d</name></decl>;</decl_stmt>

            <decl_stmt pos:start="81:13" pos:end="81:24"><decl pos:start="81:13" pos:end="81:23"><type pos:start="81:13" pos:end="81:16"><name pos:start="81:13" pos:end="81:16">char</name></type> <name pos:start="81:18" pos:end="81:23"><name pos:start="81:18" pos:end="81:18">s</name><index pos:start="81:19" pos:end="81:23">[<expr pos:start="81:20" pos:end="81:22"><literal type="number" pos:start="81:20" pos:end="81:22">128</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="83:13" pos:end="83:34"><decl pos:start="83:13" pos:end="83:33"><type pos:start="83:13" pos:end="83:29"><name pos:start="83:13" pos:end="83:29">f0r_param_color_t</name></type> <name pos:start="83:31" pos:end="83:33">col</name></decl>;</decl_stmt>

            <decl_stmt pos:start="85:13" pos:end="85:37"><decl pos:start="85:13" pos:end="85:36"><type pos:start="85:13" pos:end="85:32"><name pos:start="85:13" pos:end="85:32">f0r_param_position_t</name></type> <name pos:start="85:34" pos:end="85:36">pos</name></decl>;</decl_stmt>



        <case pos:start="89:9" pos:end="89:28">case <expr pos:start="89:14" pos:end="89:27"><name pos:start="89:14" pos:end="89:27">F0R_PARAM_BOOL</name></expr>:</case>

            <expr_stmt pos:start="91:13" pos:end="91:19"><expr pos:start="91:13" pos:end="91:18"><name pos:start="91:13" pos:end="91:13">v</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <operator pos:start="91:17" pos:end="91:17">&amp;</operator><name pos:start="91:18" pos:end="91:18">d</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:50"><expr pos:start="93:13" pos:end="93:49"><call pos:start="93:13" pos:end="93:49"><name pos:start="93:13" pos:end="93:30"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:30">get_param_value</name></name><argument_list pos:start="93:31" pos:end="93:49">(<argument pos:start="93:32" pos:end="93:42"><expr pos:start="93:32" pos:end="93:42"><name pos:start="93:32" pos:end="93:42"><name pos:start="93:32" pos:end="93:32">s</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:42">instance</name></name></expr></argument>, <argument pos:start="93:45" pos:end="93:45"><expr pos:start="93:45" pos:end="93:45"><name pos:start="93:45" pos:end="93:45">v</name></expr></argument>, <argument pos:start="93:48" pos:end="93:48"><expr pos:start="93:48" pos:end="93:48"><name pos:start="93:48" pos:end="93:48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:78"><expr pos:start="95:13" pos:end="95:77"><call pos:start="95:13" pos:end="95:77"><name pos:start="95:13" pos:end="95:18">av_log</name><argument_list pos:start="95:19" pos:end="95:77">(<argument pos:start="95:20" pos:end="95:22"><expr pos:start="95:20" pos:end="95:22"><name pos:start="95:20" pos:end="95:22">ctx</name></expr></argument>, <argument pos:start="95:25" pos:end="95:36"><expr pos:start="95:25" pos:end="95:36"><name pos:start="95:25" pos:end="95:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="95:39" pos:end="95:42"><expr pos:start="95:39" pos:end="95:42"><literal type="string" pos:start="95:39" pos:end="95:42">"%s"</literal></expr></argument>, <argument pos:start="95:45" pos:end="95:76"><expr pos:start="95:45" pos:end="95:76"><ternary pos:start="95:45" pos:end="95:76"><condition pos:start="95:45" pos:end="95:66"><expr pos:start="95:45" pos:end="95:64"><name pos:start="95:45" pos:end="95:45">d</name> <operator pos:start="95:47" pos:end="95:48">&gt;=</operator> <literal type="number" pos:start="95:50" pos:end="95:52">0.5</literal> <operator pos:start="95:54" pos:end="95:55">&amp;&amp;</operator> <name pos:start="95:57" pos:end="95:57">d</name> <operator pos:start="95:59" pos:end="95:60">&lt;=</operator> <literal type="number" pos:start="95:62" pos:end="95:64">1.0</literal></expr> ?</condition><then pos:start="95:68" pos:end="95:70"> <expr pos:start="95:68" pos:end="95:70"><literal type="string" pos:start="95:68" pos:end="95:70">"y"</literal></expr> </then><else pos:start="95:72" pos:end="95:76">: <expr pos:start="95:74" pos:end="95:76"><literal type="string" pos:start="95:74" pos:end="95:76">"n"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        <case pos:start="99:9" pos:end="99:30">case <expr pos:start="99:14" pos:end="99:29"><name pos:start="99:14" pos:end="99:29">F0R_PARAM_DOUBLE</name></expr>:</case>

            <expr_stmt pos:start="101:13" pos:end="101:19"><expr pos:start="101:13" pos:end="101:18"><name pos:start="101:13" pos:end="101:13">v</name> <operator pos:start="101:15" pos:end="101:15">=</operator> <operator pos:start="101:17" pos:end="101:17">&amp;</operator><name pos:start="101:18" pos:end="101:18">d</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:50"><expr pos:start="103:13" pos:end="103:49"><call pos:start="103:13" pos:end="103:49"><name pos:start="103:13" pos:end="103:30"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:30">get_param_value</name></name><argument_list pos:start="103:31" pos:end="103:49">(<argument pos:start="103:32" pos:end="103:42"><expr pos:start="103:32" pos:end="103:42"><name pos:start="103:32" pos:end="103:42"><name pos:start="103:32" pos:end="103:32">s</name><operator pos:start="103:33" pos:end="103:34">-&gt;</operator><name pos:start="103:35" pos:end="103:42">instance</name></name></expr></argument>, <argument pos:start="103:45" pos:end="103:45"><expr pos:start="103:45" pos:end="103:45"><name pos:start="103:45" pos:end="103:45">v</name></expr></argument>, <argument pos:start="103:48" pos:end="103:48"><expr pos:start="103:48" pos:end="103:48"><name pos:start="103:48" pos:end="103:48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:47"><expr pos:start="105:13" pos:end="105:46"><call pos:start="105:13" pos:end="105:46"><name pos:start="105:13" pos:end="105:18">av_log</name><argument_list pos:start="105:19" pos:end="105:46">(<argument pos:start="105:20" pos:end="105:22"><expr pos:start="105:20" pos:end="105:22"><name pos:start="105:20" pos:end="105:22">ctx</name></expr></argument>, <argument pos:start="105:25" pos:end="105:36"><expr pos:start="105:25" pos:end="105:36"><name pos:start="105:25" pos:end="105:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="105:39" pos:end="105:42"><expr pos:start="105:39" pos:end="105:42"><literal type="string" pos:start="105:39" pos:end="105:42">"%f"</literal></expr></argument>, <argument pos:start="105:45" pos:end="105:45"><expr pos:start="105:45" pos:end="105:45"><name pos:start="105:45" pos:end="105:45">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:29">case <expr pos:start="109:14" pos:end="109:28"><name pos:start="109:14" pos:end="109:28">F0R_PARAM_COLOR</name></expr>:</case>

            <expr_stmt pos:start="111:13" pos:end="111:21"><expr pos:start="111:13" pos:end="111:20"><name pos:start="111:13" pos:end="111:13">v</name> <operator pos:start="111:15" pos:end="111:15">=</operator> <operator pos:start="111:17" pos:end="111:17">&amp;</operator><name pos:start="111:18" pos:end="111:20">col</name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:50"><expr pos:start="113:13" pos:end="113:49"><call pos:start="113:13" pos:end="113:49"><name pos:start="113:13" pos:end="113:30"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:30">get_param_value</name></name><argument_list pos:start="113:31" pos:end="113:49">(<argument pos:start="113:32" pos:end="113:42"><expr pos:start="113:32" pos:end="113:42"><name pos:start="113:32" pos:end="113:42"><name pos:start="113:32" pos:end="113:32">s</name><operator pos:start="113:33" pos:end="113:34">-&gt;</operator><name pos:start="113:35" pos:end="113:42">instance</name></name></expr></argument>, <argument pos:start="113:45" pos:end="113:45"><expr pos:start="113:45" pos:end="113:45"><name pos:start="113:45" pos:end="113:45">v</name></expr></argument>, <argument pos:start="113:48" pos:end="113:48"><expr pos:start="113:48" pos:end="113:48"><name pos:start="113:48" pos:end="113:48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:71"><expr pos:start="115:13" pos:end="115:70"><call pos:start="115:13" pos:end="115:70"><name pos:start="115:13" pos:end="115:18">av_log</name><argument_list pos:start="115:19" pos:end="115:70">(<argument pos:start="115:20" pos:end="115:22"><expr pos:start="115:20" pos:end="115:22"><name pos:start="115:20" pos:end="115:22">ctx</name></expr></argument>, <argument pos:start="115:25" pos:end="115:36"><expr pos:start="115:25" pos:end="115:36"><name pos:start="115:25" pos:end="115:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="115:39" pos:end="115:48"><expr pos:start="115:39" pos:end="115:48"><literal type="string" pos:start="115:39" pos:end="115:48">"%f/%f/%f"</literal></expr></argument>, <argument pos:start="115:51" pos:end="115:55"><expr pos:start="115:51" pos:end="115:55"><name pos:start="115:51" pos:end="115:55"><name pos:start="115:51" pos:end="115:53">col</name><operator pos:start="115:54" pos:end="115:54">.</operator><name pos:start="115:55" pos:end="115:55">r</name></name></expr></argument>, <argument pos:start="115:58" pos:end="115:62"><expr pos:start="115:58" pos:end="115:62"><name pos:start="115:58" pos:end="115:62"><name pos:start="115:58" pos:end="115:60">col</name><operator pos:start="115:61" pos:end="115:61">.</operator><name pos:start="115:62" pos:end="115:62">g</name></name></expr></argument>, <argument pos:start="115:65" pos:end="115:69"><expr pos:start="115:65" pos:end="115:69"><name pos:start="115:65" pos:end="115:69"><name pos:start="115:65" pos:end="115:67">col</name><operator pos:start="115:68" pos:end="115:68">.</operator><name pos:start="115:69" pos:end="115:69">b</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:32">case <expr pos:start="119:14" pos:end="119:31"><name pos:start="119:14" pos:end="119:31">F0R_PARAM_POSITION</name></expr>:</case>

            <expr_stmt pos:start="121:13" pos:end="121:21"><expr pos:start="121:13" pos:end="121:20"><name pos:start="121:13" pos:end="121:13">v</name> <operator pos:start="121:15" pos:end="121:15">=</operator> <operator pos:start="121:17" pos:end="121:17">&amp;</operator><name pos:start="121:18" pos:end="121:20">pos</name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:50"><expr pos:start="123:13" pos:end="123:49"><call pos:start="123:13" pos:end="123:49"><name pos:start="123:13" pos:end="123:30"><name pos:start="123:13" pos:end="123:13">s</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:30">get_param_value</name></name><argument_list pos:start="123:31" pos:end="123:49">(<argument pos:start="123:32" pos:end="123:42"><expr pos:start="123:32" pos:end="123:42"><name pos:start="123:32" pos:end="123:42"><name pos:start="123:32" pos:end="123:32">s</name><operator pos:start="123:33" pos:end="123:34">-&gt;</operator><name pos:start="123:35" pos:end="123:42">instance</name></name></expr></argument>, <argument pos:start="123:45" pos:end="123:45"><expr pos:start="123:45" pos:end="123:45"><name pos:start="123:45" pos:end="123:45">v</name></expr></argument>, <argument pos:start="123:48" pos:end="123:48"><expr pos:start="123:48" pos:end="123:48"><name pos:start="123:48" pos:end="123:48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:61"><expr pos:start="125:13" pos:end="125:60"><call pos:start="125:13" pos:end="125:60"><name pos:start="125:13" pos:end="125:18">av_log</name><argument_list pos:start="125:19" pos:end="125:60">(<argument pos:start="125:20" pos:end="125:22"><expr pos:start="125:20" pos:end="125:22"><name pos:start="125:20" pos:end="125:22">ctx</name></expr></argument>, <argument pos:start="125:25" pos:end="125:36"><expr pos:start="125:25" pos:end="125:36"><name pos:start="125:25" pos:end="125:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="125:39" pos:end="125:45"><expr pos:start="125:39" pos:end="125:45"><literal type="string" pos:start="125:39" pos:end="125:45">"%f/%f"</literal></expr></argument>, <argument pos:start="125:48" pos:end="125:52"><expr pos:start="125:48" pos:end="125:52"><name pos:start="125:48" pos:end="125:52"><name pos:start="125:48" pos:end="125:50">pos</name><operator pos:start="125:51" pos:end="125:51">.</operator><name pos:start="125:52" pos:end="125:52">x</name></name></expr></argument>, <argument pos:start="125:55" pos:end="125:59"><expr pos:start="125:55" pos:end="125:59"><name pos:start="125:55" pos:end="125:59"><name pos:start="125:55" pos:end="125:57">pos</name><operator pos:start="125:58" pos:end="125:58">.</operator><name pos:start="125:59" pos:end="125:59">y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="127:13" pos:end="127:18">break;</break>

        <default pos:start="129:9" pos:end="129:16">default:</default> <comment type="block" pos:start="129:18" pos:end="129:39">/* F0R_PARAM_STRING */</comment>

            <expr_stmt pos:start="131:13" pos:end="131:18"><expr pos:start="131:13" pos:end="131:17"><name pos:start="131:13" pos:end="131:13">v</name> <operator pos:start="131:15" pos:end="131:15">=</operator> <name pos:start="131:17" pos:end="131:17">s</name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:50"><expr pos:start="133:13" pos:end="133:49"><call pos:start="133:13" pos:end="133:49"><name pos:start="133:13" pos:end="133:30"><name pos:start="133:13" pos:end="133:13">s</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:30">get_param_value</name></name><argument_list pos:start="133:31" pos:end="133:49">(<argument pos:start="133:32" pos:end="133:42"><expr pos:start="133:32" pos:end="133:42"><name pos:start="133:32" pos:end="133:42"><name pos:start="133:32" pos:end="133:32">s</name><operator pos:start="133:33" pos:end="133:34">-&gt;</operator><name pos:start="133:35" pos:end="133:42">instance</name></name></expr></argument>, <argument pos:start="133:45" pos:end="133:45"><expr pos:start="133:45" pos:end="133:45"><name pos:start="133:45" pos:end="133:45">v</name></expr></argument>, <argument pos:start="133:48" pos:end="133:48"><expr pos:start="133:48" pos:end="133:48"><name pos:start="133:48" pos:end="133:48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:51"><expr pos:start="135:13" pos:end="135:50"><call pos:start="135:13" pos:end="135:50"><name pos:start="135:13" pos:end="135:18">av_log</name><argument_list pos:start="135:19" pos:end="135:50">(<argument pos:start="135:20" pos:end="135:22"><expr pos:start="135:20" pos:end="135:22"><name pos:start="135:20" pos:end="135:22">ctx</name></expr></argument>, <argument pos:start="135:25" pos:end="135:36"><expr pos:start="135:25" pos:end="135:36"><name pos:start="135:25" pos:end="135:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="135:39" pos:end="135:46"><expr pos:start="135:39" pos:end="135:46"><literal type="string" pos:start="135:39" pos:end="135:46">"'%s'\n"</literal></expr></argument>, <argument pos:start="135:49" pos:end="135:49"><expr pos:start="135:49" pos:end="135:49"><name pos:start="135:49" pos:end="135:49">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="137:13" pos:end="137:18">break;</break>

        </block_content>}</block></switch>

<cpp:endif pos:start="141:1" pos:end="141:6">#<cpp:directive pos:start="141:2" pos:end="141:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="143:9" pos:end="143:42"><expr pos:start="143:9" pos:end="143:41"><call pos:start="143:9" pos:end="143:41"><name pos:start="143:9" pos:end="143:14">av_log</name><argument_list pos:start="143:15" pos:end="143:41">(<argument pos:start="143:16" pos:end="143:18"><expr pos:start="143:16" pos:end="143:18"><name pos:start="143:16" pos:end="143:18">ctx</name></expr></argument>, <argument pos:start="143:21" pos:end="143:34"><expr pos:start="143:21" pos:end="143:34"><name pos:start="143:21" pos:end="143:34">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="143:37" pos:end="143:40"><expr pos:start="143:37" pos:end="143:40"><literal type="string" pos:start="143:37" pos:end="143:40">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="149:5" pos:end="149:13">return <expr pos:start="149:12" pos:end="149:12"><literal type="number" pos:start="149:12" pos:end="149:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
