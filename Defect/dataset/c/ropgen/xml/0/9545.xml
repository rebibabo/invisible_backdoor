<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9545.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">apply_loop_filter</name><parameter_list pos:start="1:30" pos:end="1:50">(<parameter pos:start="1:31" pos:end="1:49"><decl pos:start="1:31" pos:end="1:49"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:46">Vp3DecodeContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="201:1">{<block_content pos:start="5:5" pos:end="199:5">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">x</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">y</name></decl>, <decl pos:start="5:15" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:19">plane</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">width</name></decl>, <decl pos:start="7:16" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:21">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">fragment</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">stride</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">char</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:29">plane_data</name></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:29">bounding_values_array</name><index pos:start="17:30" pos:end="17:34">[<expr pos:start="17:31" pos:end="17:33"><literal type="number" pos:start="17:31" pos:end="17:33">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:52"><decl pos:start="19:5" pos:end="19:51"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:7">int</name> <modifier pos:start="19:9" pos:end="19:9">*</modifier></type><name pos:start="19:10" pos:end="19:24">bounding_values</name><init pos:start="19:25" pos:end="19:51">= <expr pos:start="19:27" pos:end="19:51"><name pos:start="19:27" pos:end="19:47">bounding_values_array</name><operator pos:start="19:48" pos:end="19:48">+</operator><literal type="number" pos:start="19:49" pos:end="19:51">127</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:21"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:20">filter_limit</name></decl>;</decl_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:41">/* find the right loop limit value */</comment>

    <for pos:start="27:5" pos:end="33:5">for <control pos:start="27:9" pos:end="27:29">(<init pos:start="27:10" pos:end="27:16"><expr pos:start="27:10" pos:end="27:15"><name pos:start="27:10" pos:end="27:10">x</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:15">63</literal></expr>;</init> <condition pos:start="27:18" pos:end="27:24"><expr pos:start="27:18" pos:end="27:23"><name pos:start="27:18" pos:end="27:18">x</name> <operator pos:start="27:20" pos:end="27:21">&gt;=</operator> <literal type="number" pos:start="27:23" pos:end="27:23">0</literal></expr>;</condition> <incr pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:26">x</name><operator pos:start="27:27" pos:end="27:28">--</operator></expr></incr>)</control> <block pos:start="27:31" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <if_stmt pos:start="29:9" pos:end="31:18"><if pos:start="29:9" pos:end="31:18">if <condition pos:start="29:12" pos:end="29:56">(<expr pos:start="29:13" pos:end="29:55"><name pos:start="29:13" pos:end="29:35"><name pos:start="29:13" pos:end="29:32">vp31_ac_scale_factor</name><index pos:start="29:33" pos:end="29:35">[<expr pos:start="29:34" pos:end="29:34"><name pos:start="29:34" pos:end="29:34">x</name></expr>]</index></name> <operator pos:start="29:37" pos:end="29:38">&gt;=</operator> <name pos:start="29:40" pos:end="29:55"><name pos:start="29:40" pos:end="29:40">s</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:55">quality_index</name></name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:18"><block_content pos:start="31:13" pos:end="31:18">

            <break pos:start="31:13" pos:end="31:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="35:5" pos:end="35:62"><expr pos:start="35:5" pos:end="35:61"><name pos:start="35:5" pos:end="35:16">filter_limit</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <name pos:start="35:20" pos:end="35:61"><name pos:start="35:20" pos:end="35:43">vp31_filter_limit_values</name><index pos:start="35:44" pos:end="35:61">[<expr pos:start="35:45" pos:end="35:60"><name pos:start="35:45" pos:end="35:60"><name pos:start="35:45" pos:end="35:45">s</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:60">quality_index</name></name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:36">/* set up the bounding values */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:56"><expr pos:start="41:5" pos:end="41:55"><call pos:start="41:5" pos:end="41:55"><name pos:start="41:5" pos:end="41:10">memset</name><argument_list pos:start="41:11" pos:end="41:55">(<argument pos:start="41:12" pos:end="41:32"><expr pos:start="41:12" pos:end="41:32"><name pos:start="41:12" pos:end="41:32">bounding_values_array</name></expr></argument>, <argument pos:start="41:35" pos:end="41:35"><expr pos:start="41:35" pos:end="41:35"><literal type="number" pos:start="41:35" pos:end="41:35">0</literal></expr></argument>, <argument pos:start="41:38" pos:end="41:54"><expr pos:start="41:38" pos:end="41:54"><literal type="number" pos:start="41:38" pos:end="41:40">256</literal> <operator pos:start="41:42" pos:end="41:42">*</operator> <sizeof pos:start="41:44" pos:end="41:54">sizeof<argument_list pos:start="41:50" pos:end="41:54">(<argument pos:start="41:51" pos:end="41:53"><expr pos:start="41:51" pos:end="41:53"><name pos:start="41:51" pos:end="41:53">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="43:5" pos:end="53:5">for <control pos:start="43:9" pos:end="43:38">(<init pos:start="43:10" pos:end="43:15"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">x</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:33"><expr pos:start="43:17" pos:end="43:32"><name pos:start="43:17" pos:end="43:17">x</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <name pos:start="43:21" pos:end="43:32">filter_limit</name></expr>;</condition> <incr pos:start="43:35" pos:end="43:37"><expr pos:start="43:35" pos:end="43:37"><name pos:start="43:35" pos:end="43:35">x</name><operator pos:start="43:36" pos:end="43:37">++</operator></expr></incr>)</control> <block pos:start="43:40" pos:end="53:5">{<block_content pos:start="45:9" pos:end="51:61">

        <expr_stmt pos:start="45:9" pos:end="45:63"><expr pos:start="45:9" pos:end="45:62"><name pos:start="45:9" pos:end="45:42"><name pos:start="45:9" pos:end="45:23">bounding_values</name><index pos:start="45:24" pos:end="45:42">[<expr pos:start="45:25" pos:end="45:41"><operator pos:start="45:25" pos:end="45:25">-</operator><name pos:start="45:26" pos:end="45:26">x</name> <operator pos:start="45:28" pos:end="45:28">-</operator> <name pos:start="45:30" pos:end="45:41">filter_limit</name></expr>]</index></name> <operator pos:start="45:44" pos:end="45:44">=</operator> <operator pos:start="45:46" pos:end="45:46">-</operator><name pos:start="45:47" pos:end="45:58">filter_limit</name> <operator pos:start="45:60" pos:end="45:60">+</operator> <name pos:start="45:62" pos:end="45:62">x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:33"><expr pos:start="47:9" pos:end="47:32"><name pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:23">bounding_values</name><index pos:start="47:24" pos:end="47:27">[<expr pos:start="47:25" pos:end="47:26"><operator pos:start="47:25" pos:end="47:25">-</operator><name pos:start="47:26" pos:end="47:26">x</name></expr>]</index></name> <operator pos:start="47:29" pos:end="47:29">=</operator> <operator pos:start="47:31" pos:end="47:31">-</operator><name pos:start="47:32" pos:end="47:32">x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:31"><expr pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:23">bounding_values</name><index pos:start="49:24" pos:end="49:26">[<expr pos:start="49:25" pos:end="49:25"><name pos:start="49:25" pos:end="49:25">x</name></expr>]</index></name> <operator pos:start="49:28" pos:end="49:28">=</operator> <name pos:start="49:30" pos:end="49:30">x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:61"><expr pos:start="51:9" pos:end="51:60"><name pos:start="51:9" pos:end="51:41"><name pos:start="51:9" pos:end="51:23">bounding_values</name><index pos:start="51:24" pos:end="51:41">[<expr pos:start="51:25" pos:end="51:40"><name pos:start="51:25" pos:end="51:25">x</name> <operator pos:start="51:27" pos:end="51:27">+</operator> <name pos:start="51:29" pos:end="51:40">filter_limit</name></expr>]</index></name> <operator pos:start="51:43" pos:end="51:43">=</operator> <name pos:start="51:45" pos:end="51:56">filter_limit</name> <operator pos:start="51:58" pos:end="51:58">-</operator> <name pos:start="51:60" pos:end="51:60">x</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="57:5" pos:end="199:5">for <control pos:start="57:9" pos:end="57:39">(<init pos:start="57:10" pos:end="57:19"><expr pos:start="57:10" pos:end="57:18"><name pos:start="57:10" pos:end="57:14">plane</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr>;</init> <condition pos:start="57:21" pos:end="57:30"><expr pos:start="57:21" pos:end="57:29"><name pos:start="57:21" pos:end="57:25">plane</name> <operator pos:start="57:27" pos:end="57:27">&lt;</operator> <literal type="number" pos:start="57:29" pos:end="57:29">3</literal></expr>;</condition> <incr pos:start="57:32" pos:end="57:38"><expr pos:start="57:32" pos:end="57:38"><name pos:start="57:32" pos:end="57:36">plane</name><operator pos:start="57:37" pos:end="57:38">++</operator></expr></incr>)</control> <block pos:start="57:41" pos:end="199:5">{<block_content pos:start="61:9" pos:end="197:9">



        <if_stmt pos:start="61:9" pos:end="103:9"><if pos:start="61:9" pos:end="75:9">if <condition pos:start="61:12" pos:end="61:23">(<expr pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:17">plane</name> <operator pos:start="61:19" pos:end="61:20">==</operator> <literal type="number" pos:start="61:22" pos:end="61:22">0</literal></expr>)</condition> <block pos:start="61:25" pos:end="75:9">{<block_content pos:start="65:13" pos:end="73:50">

            <comment type="block" pos:start="63:13" pos:end="63:36">/* Y plane parameters */</comment>

            <expr_stmt pos:start="65:13" pos:end="65:25"><expr pos:start="65:13" pos:end="65:24"><name pos:start="65:13" pos:end="65:20">fragment</name> <operator pos:start="65:22" pos:end="65:22">=</operator> <literal type="number" pos:start="65:24" pos:end="65:24">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:38"><expr pos:start="67:13" pos:end="67:37"><name pos:start="67:13" pos:end="67:17">width</name> <operator pos:start="67:19" pos:end="67:19">=</operator> <name pos:start="67:21" pos:end="67:37"><name pos:start="67:21" pos:end="67:21">s</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:37">fragment_width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:40"><expr pos:start="69:13" pos:end="69:39"><name pos:start="69:13" pos:end="69:18">height</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:39"><name pos:start="69:22" pos:end="69:22">s</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:39">fragment_height</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:50"><expr pos:start="71:13" pos:end="71:49"><name pos:start="71:13" pos:end="71:18">stride</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <name pos:start="71:22" pos:end="71:49"><name pos:start="71:22" pos:end="71:22">s</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:37">current_frame</name><operator pos:start="71:38" pos:end="71:38">.</operator><name pos:start="71:39" pos:end="71:46">linesize</name><index pos:start="71:47" pos:end="71:49">[<expr pos:start="71:48" pos:end="71:48"><literal type="number" pos:start="71:48" pos:end="71:48">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:50"><expr pos:start="73:13" pos:end="73:49"><name pos:start="73:13" pos:end="73:22">plane_data</name> <operator pos:start="73:24" pos:end="73:24">=</operator> <name pos:start="73:26" pos:end="73:49"><name pos:start="73:26" pos:end="73:26">s</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:41">current_frame</name><operator pos:start="73:42" pos:end="73:42">.</operator><name pos:start="73:43" pos:end="73:46">data</name><index pos:start="73:47" pos:end="73:49">[<expr pos:start="73:48" pos:end="73:48"><literal type="number" pos:start="73:48" pos:end="73:48">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="75:11" pos:end="89:9">else if <condition pos:start="75:19" pos:end="75:30">(<expr pos:start="75:20" pos:end="75:29"><name pos:start="75:20" pos:end="75:24">plane</name> <operator pos:start="75:26" pos:end="75:27">==</operator> <literal type="number" pos:start="75:29" pos:end="75:29">1</literal></expr>)</condition> <block pos:start="75:32" pos:end="89:9">{<block_content pos:start="79:13" pos:end="87:50">

            <comment type="block" pos:start="77:13" pos:end="77:36">/* U plane parameters */</comment>

            <expr_stmt pos:start="79:13" pos:end="79:43"><expr pos:start="79:13" pos:end="79:42"><name pos:start="79:13" pos:end="79:20">fragment</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <name pos:start="79:24" pos:end="79:42"><name pos:start="79:24" pos:end="79:24">s</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:42">u_fragment_start</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:42"><expr pos:start="81:13" pos:end="81:41"><name pos:start="81:13" pos:end="81:17">width</name> <operator pos:start="81:19" pos:end="81:19">=</operator> <name pos:start="81:21" pos:end="81:37"><name pos:start="81:21" pos:end="81:21">s</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:37">fragment_width</name></name> <operator pos:start="81:39" pos:end="81:39">/</operator> <literal type="number" pos:start="81:41" pos:end="81:41">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:44"><expr pos:start="83:13" pos:end="83:43"><name pos:start="83:13" pos:end="83:18">height</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <name pos:start="83:22" pos:end="83:39"><name pos:start="83:22" pos:end="83:22">s</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:39">fragment_height</name></name> <operator pos:start="83:41" pos:end="83:41">/</operator> <literal type="number" pos:start="83:43" pos:end="83:43">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:50"><expr pos:start="85:13" pos:end="85:49"><name pos:start="85:13" pos:end="85:18">stride</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <name pos:start="85:22" pos:end="85:49"><name pos:start="85:22" pos:end="85:22">s</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:37">current_frame</name><operator pos:start="85:38" pos:end="85:38">.</operator><name pos:start="85:39" pos:end="85:46">linesize</name><index pos:start="85:47" pos:end="85:49">[<expr pos:start="85:48" pos:end="85:48"><literal type="number" pos:start="85:48" pos:end="85:48">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:50"><expr pos:start="87:13" pos:end="87:49"><name pos:start="87:13" pos:end="87:22">plane_data</name> <operator pos:start="87:24" pos:end="87:24">=</operator> <name pos:start="87:26" pos:end="87:49"><name pos:start="87:26" pos:end="87:26">s</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:41">current_frame</name><operator pos:start="87:42" pos:end="87:42">.</operator><name pos:start="87:43" pos:end="87:46">data</name><index pos:start="87:47" pos:end="87:49">[<expr pos:start="87:48" pos:end="87:48"><literal type="number" pos:start="87:48" pos:end="87:48">1</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="89:11" pos:end="103:9">else <block pos:start="89:16" pos:end="103:9">{<block_content pos:start="93:13" pos:end="101:50">

            <comment type="block" pos:start="91:13" pos:end="91:36">/* V plane parameters */</comment>

            <expr_stmt pos:start="93:13" pos:end="93:43"><expr pos:start="93:13" pos:end="93:42"><name pos:start="93:13" pos:end="93:20">fragment</name> <operator pos:start="93:22" pos:end="93:22">=</operator> <name pos:start="93:24" pos:end="93:42"><name pos:start="93:24" pos:end="93:24">s</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:42">v_fragment_start</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:42"><expr pos:start="95:13" pos:end="95:41"><name pos:start="95:13" pos:end="95:17">width</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:37"><name pos:start="95:21" pos:end="95:21">s</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:37">fragment_width</name></name> <operator pos:start="95:39" pos:end="95:39">/</operator> <literal type="number" pos:start="95:41" pos:end="95:41">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:44"><expr pos:start="97:13" pos:end="97:43"><name pos:start="97:13" pos:end="97:18">height</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <name pos:start="97:22" pos:end="97:39"><name pos:start="97:22" pos:end="97:22">s</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:39">fragment_height</name></name> <operator pos:start="97:41" pos:end="97:41">/</operator> <literal type="number" pos:start="97:43" pos:end="97:43">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:50"><expr pos:start="99:13" pos:end="99:49"><name pos:start="99:13" pos:end="99:18">stride</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <name pos:start="99:22" pos:end="99:49"><name pos:start="99:22" pos:end="99:22">s</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:37">current_frame</name><operator pos:start="99:38" pos:end="99:38">.</operator><name pos:start="99:39" pos:end="99:46">linesize</name><index pos:start="99:47" pos:end="99:49">[<expr pos:start="99:48" pos:end="99:48"><literal type="number" pos:start="99:48" pos:end="99:48">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:50"><expr pos:start="101:13" pos:end="101:49"><name pos:start="101:13" pos:end="101:22">plane_data</name> <operator pos:start="101:24" pos:end="101:24">=</operator> <name pos:start="101:26" pos:end="101:49"><name pos:start="101:26" pos:end="101:26">s</name><operator pos:start="101:27" pos:end="101:28">-&gt;</operator><name pos:start="101:29" pos:end="101:41">current_frame</name><operator pos:start="101:42" pos:end="101:42">.</operator><name pos:start="101:43" pos:end="101:46">data</name><index pos:start="101:47" pos:end="101:49">[<expr pos:start="101:48" pos:end="101:48"><literal type="number" pos:start="101:48" pos:end="101:48">2</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <for pos:start="107:9" pos:end="197:9">for <control pos:start="107:13" pos:end="107:36">(<init pos:start="107:14" pos:end="107:19"><expr pos:start="107:14" pos:end="107:18"><name pos:start="107:14" pos:end="107:14">y</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <literal type="number" pos:start="107:18" pos:end="107:18">0</literal></expr>;</init> <condition pos:start="107:21" pos:end="107:31"><expr pos:start="107:21" pos:end="107:30"><name pos:start="107:21" pos:end="107:21">y</name> <operator pos:start="107:23" pos:end="107:23">&lt;</operator> <name pos:start="107:25" pos:end="107:30">height</name></expr>;</condition> <incr pos:start="107:33" pos:end="107:35"><expr pos:start="107:33" pos:end="107:35"><name pos:start="107:33" pos:end="107:33">y</name><operator pos:start="107:34" pos:end="107:35">++</operator></expr></incr>)</control> <block pos:start="107:38" pos:end="197:9">{<block_content pos:start="111:13" pos:end="195:13">



            <for pos:start="111:13" pos:end="195:13">for <control pos:start="111:17" pos:end="111:39">(<init pos:start="111:18" pos:end="111:23"><expr pos:start="111:18" pos:end="111:22"><name pos:start="111:18" pos:end="111:18">x</name> <operator pos:start="111:20" pos:end="111:20">=</operator> <literal type="number" pos:start="111:22" pos:end="111:22">0</literal></expr>;</init> <condition pos:start="111:25" pos:end="111:34"><expr pos:start="111:25" pos:end="111:33"><name pos:start="111:25" pos:end="111:25">x</name> <operator pos:start="111:27" pos:end="111:27">&lt;</operator> <name pos:start="111:29" pos:end="111:33">width</name></expr>;</condition> <incr pos:start="111:36" pos:end="111:38"><expr pos:start="111:36" pos:end="111:38"><name pos:start="111:36" pos:end="111:36">x</name><operator pos:start="111:37" pos:end="111:38">++</operator></expr></incr>)</control> <block pos:start="111:41" pos:end="195:13">{<block_content pos:start="113:1" pos:end="193:25">

<macro pos:start="113:1" pos:end="113:11"><name pos:start="113:1" pos:end="113:11">START_TIMER</name></macro>

                <comment type="block" pos:start="115:17" pos:end="115:76">/* do not perform left edge filter for left columns frags */</comment>

                <if_stmt pos:start="117:17" pos:end="127:17"><if pos:start="117:17" pos:end="127:17">if <condition pos:start="117:20" pos:end="119:76">(<expr pos:start="117:21" pos:end="119:75"><operator pos:start="117:21" pos:end="117:21">(</operator><name pos:start="117:22" pos:end="117:22">x</name> <operator pos:start="117:24" pos:end="117:24">&gt;</operator> <literal type="number" pos:start="117:26" pos:end="117:26">0</literal><operator pos:start="117:27" pos:end="117:27">)</operator> <operator pos:start="117:29" pos:end="117:30">&amp;&amp;</operator>

                    <operator pos:start="119:21" pos:end="119:21">(</operator><name pos:start="119:22" pos:end="119:47"><name pos:start="119:22" pos:end="119:22">s</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:37">all_fragments</name><index pos:start="119:38" pos:end="119:47">[<expr pos:start="119:39" pos:end="119:46"><name pos:start="119:39" pos:end="119:46">fragment</name></expr>]</index></name><operator pos:start="119:48" pos:end="119:48">.</operator><name pos:start="119:49" pos:end="119:61">coding_method</name> <operator pos:start="119:63" pos:end="119:64">!=</operator> <name pos:start="119:66" pos:end="119:74">MODE_COPY</name><operator pos:start="119:75" pos:end="119:75">)</operator></expr>)</condition> <block pos:start="119:78" pos:end="127:17">{<block_content pos:start="121:21" pos:end="125:49">

                    <expr_stmt pos:start="121:21" pos:end="125:49"><expr pos:start="121:21" pos:end="125:48"><call pos:start="121:21" pos:end="125:48"><name pos:start="121:21" pos:end="121:37">horizontal_filter</name><argument_list pos:start="121:38" pos:end="125:48">(

                        <argument pos:start="123:25" pos:end="123:86"><expr pos:start="123:25" pos:end="123:86"><name pos:start="123:25" pos:end="123:34">plane_data</name> <operator pos:start="123:36" pos:end="123:36">+</operator> <name pos:start="123:38" pos:end="123:63"><name pos:start="123:38" pos:end="123:38">s</name><operator pos:start="123:39" pos:end="123:40">-&gt;</operator><name pos:start="123:41" pos:end="123:53">all_fragments</name><index pos:start="123:54" pos:end="123:63">[<expr pos:start="123:55" pos:end="123:62"><name pos:start="123:55" pos:end="123:62">fragment</name></expr>]</index></name><operator pos:start="123:64" pos:end="123:64">.</operator><name pos:start="123:65" pos:end="123:75">first_pixel</name> <operator pos:start="123:77" pos:end="123:77">-</operator> <literal type="number" pos:start="123:79" pos:end="123:79">7</literal><operator pos:start="123:80" pos:end="123:80">*</operator><name pos:start="123:81" pos:end="123:86">stride</name></expr></argument>, 

                        <argument pos:start="125:25" pos:end="125:30"><expr pos:start="125:25" pos:end="125:30"><name pos:start="125:25" pos:end="125:30">stride</name></expr></argument>, <argument pos:start="125:33" pos:end="125:47"><expr pos:start="125:33" pos:end="125:47"><name pos:start="125:33" pos:end="125:47">bounding_values</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="131:17" pos:end="131:74">/* do not perform top edge filter for top row fragments */</comment>

                <if_stmt pos:start="133:17" pos:end="143:17"><if pos:start="133:17" pos:end="143:17">if <condition pos:start="133:20" pos:end="135:76">(<expr pos:start="133:21" pos:end="135:75"><operator pos:start="133:21" pos:end="133:21">(</operator><name pos:start="133:22" pos:end="133:22">y</name> <operator pos:start="133:24" pos:end="133:24">&gt;</operator> <literal type="number" pos:start="133:26" pos:end="133:26">0</literal><operator pos:start="133:27" pos:end="133:27">)</operator> <operator pos:start="133:29" pos:end="133:30">&amp;&amp;</operator>

                    <operator pos:start="135:21" pos:end="135:21">(</operator><name pos:start="135:22" pos:end="135:47"><name pos:start="135:22" pos:end="135:22">s</name><operator pos:start="135:23" pos:end="135:24">-&gt;</operator><name pos:start="135:25" pos:end="135:37">all_fragments</name><index pos:start="135:38" pos:end="135:47">[<expr pos:start="135:39" pos:end="135:46"><name pos:start="135:39" pos:end="135:46">fragment</name></expr>]</index></name><operator pos:start="135:48" pos:end="135:48">.</operator><name pos:start="135:49" pos:end="135:61">coding_method</name> <operator pos:start="135:63" pos:end="135:64">!=</operator> <name pos:start="135:66" pos:end="135:74">MODE_COPY</name><operator pos:start="135:75" pos:end="135:75">)</operator></expr>)</condition> <block pos:start="135:78" pos:end="143:17">{<block_content pos:start="137:21" pos:end="141:49">

                    <expr_stmt pos:start="137:21" pos:end="141:49"><expr pos:start="137:21" pos:end="141:48"><call pos:start="137:21" pos:end="141:48"><name pos:start="137:21" pos:end="137:35">vertical_filter</name><argument_list pos:start="137:36" pos:end="141:48">(

                        <argument pos:start="139:25" pos:end="139:84"><expr pos:start="139:25" pos:end="139:84"><name pos:start="139:25" pos:end="139:34">plane_data</name> <operator pos:start="139:36" pos:end="139:36">+</operator> <name pos:start="139:38" pos:end="139:63"><name pos:start="139:38" pos:end="139:38">s</name><operator pos:start="139:39" pos:end="139:40">-&gt;</operator><name pos:start="139:41" pos:end="139:53">all_fragments</name><index pos:start="139:54" pos:end="139:63">[<expr pos:start="139:55" pos:end="139:62"><name pos:start="139:55" pos:end="139:62">fragment</name></expr>]</index></name><operator pos:start="139:64" pos:end="139:64">.</operator><name pos:start="139:65" pos:end="139:75">first_pixel</name> <operator pos:start="139:77" pos:end="139:77">+</operator> <name pos:start="139:79" pos:end="139:84">stride</name></expr></argument>, 

                        <argument pos:start="141:25" pos:end="141:30"><expr pos:start="141:25" pos:end="141:30"><name pos:start="141:25" pos:end="141:30">stride</name></expr></argument>, <argument pos:start="141:33" pos:end="141:47"><expr pos:start="141:33" pos:end="141:47"><name pos:start="141:33" pos:end="141:47">bounding_values</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="147:17" pos:end="151:75">/* do not perform right edge filter for right column

                 * fragments or if right fragment neighbor is also coded

                 * in this frame (it will be filtered in next iteration) */</comment>

                <if_stmt pos:start="153:17" pos:end="165:17"><if pos:start="153:17" pos:end="165:17">if <condition pos:start="153:20" pos:end="157:80">(<expr pos:start="153:21" pos:end="157:79"><operator pos:start="153:21" pos:end="153:21">(</operator><name pos:start="153:22" pos:end="153:22">x</name> <operator pos:start="153:24" pos:end="153:24">&lt;</operator> <name pos:start="153:26" pos:end="153:30">width</name> <operator pos:start="153:32" pos:end="153:32">-</operator> <literal type="number" pos:start="153:34" pos:end="153:34">1</literal><operator pos:start="153:35" pos:end="153:35">)</operator> <operator pos:start="153:37" pos:end="153:38">&amp;&amp;</operator>

                    <operator pos:start="155:21" pos:end="155:21">(</operator><name pos:start="155:22" pos:end="155:47"><name pos:start="155:22" pos:end="155:22">s</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:37">all_fragments</name><index pos:start="155:38" pos:end="155:47">[<expr pos:start="155:39" pos:end="155:46"><name pos:start="155:39" pos:end="155:46">fragment</name></expr>]</index></name><operator pos:start="155:48" pos:end="155:48">.</operator><name pos:start="155:49" pos:end="155:61">coding_method</name> <operator pos:start="155:63" pos:end="155:64">!=</operator> <name pos:start="155:66" pos:end="155:74">MODE_COPY</name><operator pos:start="155:75" pos:end="155:75">)</operator> <operator pos:start="155:77" pos:end="155:78">&amp;&amp;</operator>

                    <operator pos:start="157:21" pos:end="157:21">(</operator><name pos:start="157:22" pos:end="157:51"><name pos:start="157:22" pos:end="157:22">s</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:37">all_fragments</name><index pos:start="157:38" pos:end="157:51">[<expr pos:start="157:39" pos:end="157:50"><name pos:start="157:39" pos:end="157:46">fragment</name> <operator pos:start="157:48" pos:end="157:48">+</operator> <literal type="number" pos:start="157:50" pos:end="157:50">1</literal></expr>]</index></name><operator pos:start="157:52" pos:end="157:52">.</operator><name pos:start="157:53" pos:end="157:65">coding_method</name> <operator pos:start="157:67" pos:end="157:68">==</operator> <name pos:start="157:70" pos:end="157:78">MODE_COPY</name><operator pos:start="157:79" pos:end="157:79">)</operator></expr>)</condition> <block pos:start="157:82" pos:end="165:17">{<block_content pos:start="159:21" pos:end="163:49">

                    <expr_stmt pos:start="159:21" pos:end="163:49"><expr pos:start="159:21" pos:end="163:48"><call pos:start="159:21" pos:end="163:48"><name pos:start="159:21" pos:end="159:37">horizontal_filter</name><argument_list pos:start="159:38" pos:end="163:48">(

                        <argument pos:start="161:25" pos:end="161:90"><expr pos:start="161:25" pos:end="161:90"><name pos:start="161:25" pos:end="161:34">plane_data</name> <operator pos:start="161:36" pos:end="161:36">+</operator> <name pos:start="161:38" pos:end="161:67"><name pos:start="161:38" pos:end="161:38">s</name><operator pos:start="161:39" pos:end="161:40">-&gt;</operator><name pos:start="161:41" pos:end="161:53">all_fragments</name><index pos:start="161:54" pos:end="161:67">[<expr pos:start="161:55" pos:end="161:66"><name pos:start="161:55" pos:end="161:62">fragment</name> <operator pos:start="161:64" pos:end="161:64">+</operator> <literal type="number" pos:start="161:66" pos:end="161:66">1</literal></expr>]</index></name><operator pos:start="161:68" pos:end="161:68">.</operator><name pos:start="161:69" pos:end="161:79">first_pixel</name> <operator pos:start="161:81" pos:end="161:81">-</operator> <literal type="number" pos:start="161:83" pos:end="161:83">7</literal><operator pos:start="161:84" pos:end="161:84">*</operator><name pos:start="161:85" pos:end="161:90">stride</name></expr></argument>, 

                        <argument pos:start="163:25" pos:end="163:30"><expr pos:start="163:25" pos:end="163:30"><name pos:start="163:25" pos:end="163:30">stride</name></expr></argument>, <argument pos:start="163:33" pos:end="163:47"><expr pos:start="163:33" pos:end="163:47"><name pos:start="163:33" pos:end="163:47">bounding_values</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="169:17" pos:end="173:73">/* do not perform bottom edge filter for bottom row

                 * fragments or if bottom fragment neighbor is also coded

                 * in this frame (it will be filtered in the next row) */</comment>

                <if_stmt pos:start="175:17" pos:end="187:17"><if pos:start="175:17" pos:end="187:17">if <condition pos:start="175:20" pos:end="179:84">(<expr pos:start="175:21" pos:end="179:83"><operator pos:start="175:21" pos:end="175:21">(</operator><name pos:start="175:22" pos:end="175:22">y</name> <operator pos:start="175:24" pos:end="175:24">&lt;</operator> <name pos:start="175:26" pos:end="175:31">height</name> <operator pos:start="175:33" pos:end="175:33">-</operator> <literal type="number" pos:start="175:35" pos:end="175:35">1</literal><operator pos:start="175:36" pos:end="175:36">)</operator> <operator pos:start="175:38" pos:end="175:39">&amp;&amp;</operator>

                    <operator pos:start="177:21" pos:end="177:21">(</operator><name pos:start="177:22" pos:end="177:47"><name pos:start="177:22" pos:end="177:22">s</name><operator pos:start="177:23" pos:end="177:24">-&gt;</operator><name pos:start="177:25" pos:end="177:37">all_fragments</name><index pos:start="177:38" pos:end="177:47">[<expr pos:start="177:39" pos:end="177:46"><name pos:start="177:39" pos:end="177:46">fragment</name></expr>]</index></name><operator pos:start="177:48" pos:end="177:48">.</operator><name pos:start="177:49" pos:end="177:61">coding_method</name> <operator pos:start="177:63" pos:end="177:64">!=</operator> <name pos:start="177:66" pos:end="177:74">MODE_COPY</name><operator pos:start="177:75" pos:end="177:75">)</operator> <operator pos:start="177:77" pos:end="177:78">&amp;&amp;</operator>

                    <operator pos:start="179:21" pos:end="179:21">(</operator><name pos:start="179:22" pos:end="179:55"><name pos:start="179:22" pos:end="179:22">s</name><operator pos:start="179:23" pos:end="179:24">-&gt;</operator><name pos:start="179:25" pos:end="179:37">all_fragments</name><index pos:start="179:38" pos:end="179:55">[<expr pos:start="179:39" pos:end="179:54"><name pos:start="179:39" pos:end="179:46">fragment</name> <operator pos:start="179:48" pos:end="179:48">+</operator> <name pos:start="179:50" pos:end="179:54">width</name></expr>]</index></name><operator pos:start="179:56" pos:end="179:56">.</operator><name pos:start="179:57" pos:end="179:69">coding_method</name> <operator pos:start="179:71" pos:end="179:72">==</operator> <name pos:start="179:74" pos:end="179:82">MODE_COPY</name><operator pos:start="179:83" pos:end="179:83">)</operator></expr>)</condition> <block pos:start="179:86" pos:end="187:17">{<block_content pos:start="181:21" pos:end="185:49">

                    <expr_stmt pos:start="181:21" pos:end="185:49"><expr pos:start="181:21" pos:end="185:48"><call pos:start="181:21" pos:end="185:48"><name pos:start="181:21" pos:end="181:35">vertical_filter</name><argument_list pos:start="181:36" pos:end="185:48">(

                        <argument pos:start="183:25" pos:end="183:92"><expr pos:start="183:25" pos:end="183:92"><name pos:start="183:25" pos:end="183:34">plane_data</name> <operator pos:start="183:36" pos:end="183:36">+</operator> <name pos:start="183:38" pos:end="183:71"><name pos:start="183:38" pos:end="183:38">s</name><operator pos:start="183:39" pos:end="183:40">-&gt;</operator><name pos:start="183:41" pos:end="183:53">all_fragments</name><index pos:start="183:54" pos:end="183:71">[<expr pos:start="183:55" pos:end="183:70"><name pos:start="183:55" pos:end="183:62">fragment</name> <operator pos:start="183:64" pos:end="183:64">+</operator> <name pos:start="183:66" pos:end="183:70">width</name></expr>]</index></name><operator pos:start="183:72" pos:end="183:72">.</operator><name pos:start="183:73" pos:end="183:83">first_pixel</name> <operator pos:start="183:85" pos:end="183:85">+</operator> <name pos:start="183:87" pos:end="183:92">stride</name></expr></argument>, 

                        <argument pos:start="185:25" pos:end="185:30"><expr pos:start="185:25" pos:end="185:30"><name pos:start="185:25" pos:end="185:30">stride</name></expr></argument>, <argument pos:start="185:33" pos:end="185:47"><expr pos:start="185:33" pos:end="185:47"><name pos:start="185:33" pos:end="185:47">bounding_values</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="191:17" pos:end="191:27"><expr pos:start="191:17" pos:end="191:26"><name pos:start="191:17" pos:end="191:24">fragment</name><operator pos:start="191:25" pos:end="191:26">++</operator></expr>;</expr_stmt>

<macro pos:start="193:1" pos:end="193:25"><name pos:start="193:1" pos:end="193:10">STOP_TIMER</name><argument_list pos:start="193:11" pos:end="193:25">(<argument pos:start="193:12" pos:end="193:24"><literal type="string" pos:start="193:12" pos:end="193:24">"loop filter"</literal></argument>)</argument_list></macro>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
