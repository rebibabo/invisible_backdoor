<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13117.c" pos:tabs="8"><function pos:start="1:1" pos:end="465:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">tiff_decode_tag</name><parameter_list pos:start="1:27" pos:end="1:108">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:38">TiffContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:63"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:56">uint8_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">start</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:83"><decl pos:start="1:66" pos:end="1:83"><type pos:start="1:66" pos:end="1:83"><specifier pos:start="1:66" pos:end="1:70">const</specifier> <name pos:start="1:72" pos:end="1:78">uint8_t</name> <modifier pos:start="1:80" pos:end="1:80">*</modifier></type><name pos:start="1:81" pos:end="1:83">buf</name></decl></parameter>, <parameter pos:start="1:86" pos:end="1:107"><decl pos:start="1:86" pos:end="1:107"><type pos:start="1:86" pos:end="1:107"><specifier pos:start="1:86" pos:end="1:90">const</specifier> <name pos:start="1:92" pos:end="1:98">uint8_t</name> <modifier pos:start="1:100" pos:end="1:100">*</modifier></type><name pos:start="1:101" pos:end="1:107">end_buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="465:1">{<block_content pos:start="5:5" pos:end="463:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">tag</name></decl>, <decl pos:start="5:14" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:17">type</name></decl>, <decl pos:start="5:20" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:24">count</name></decl>, <decl pos:start="5:27" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:27" pos:end="5:29">off</name></decl>, <decl pos:start="5:32" pos:end="5:40"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:32" pos:end="5:36">value</name> <init pos:start="5:38" pos:end="5:40">= <expr pos:start="5:40" pos:end="5:40"><literal type="number" pos:start="5:40" pos:end="5:40">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">uint32_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">pal</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:21">rp</name></decl>, <decl pos:start="11:24" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:19"><modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:26">gp</name></decl>, <decl pos:start="11:29" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:19"><modifier pos:start="11:29" pos:end="11:29">*</modifier></type><name pos:start="11:30" pos:end="11:31">bp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:7">tag</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:33"><name pos:start="15:11" pos:end="15:20">tget_short</name><argument_list pos:start="15:21" pos:end="15:33">(<argument pos:start="15:22" pos:end="15:25"><expr pos:start="15:22" pos:end="15:25"><operator pos:start="15:22" pos:end="15:22">&amp;</operator><name pos:start="15:23" pos:end="15:25">buf</name></expr></argument>, <argument pos:start="15:28" pos:end="15:32"><expr pos:start="15:28" pos:end="15:32"><name pos:start="15:28" pos:end="15:32"><name pos:start="15:28" pos:end="15:28">s</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:32">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:8">type</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:34"><name pos:start="17:12" pos:end="17:21">tget_short</name><argument_list pos:start="17:22" pos:end="17:34">(<argument pos:start="17:23" pos:end="17:26"><expr pos:start="17:23" pos:end="17:26"><operator pos:start="17:23" pos:end="17:23">&amp;</operator><name pos:start="17:24" pos:end="17:26">buf</name></expr></argument>, <argument pos:start="17:29" pos:end="17:33"><expr pos:start="17:29" pos:end="17:33"><name pos:start="17:29" pos:end="17:33"><name pos:start="17:29" pos:end="17:29">s</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:33">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:9">count</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:34"><name pos:start="19:13" pos:end="19:21">tget_long</name><argument_list pos:start="19:22" pos:end="19:34">(<argument pos:start="19:23" pos:end="19:26"><expr pos:start="19:23" pos:end="19:26"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:26">buf</name></expr></argument>, <argument pos:start="19:29" pos:end="19:33"><expr pos:start="19:29" pos:end="19:33"><name pos:start="19:29" pos:end="19:33"><name pos:start="19:29" pos:end="19:29">s</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:33">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:7">off</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:32"><name pos:start="21:11" pos:end="21:19">tget_long</name><argument_list pos:start="21:20" pos:end="21:32">(<argument pos:start="21:21" pos:end="21:24"><expr pos:start="21:21" pos:end="21:24"><operator pos:start="21:21" pos:end="21:21">&amp;</operator><name pos:start="21:22" pos:end="21:24">buf</name></expr></argument>, <argument pos:start="21:27" pos:end="21:31"><expr pos:start="21:27" pos:end="21:31"><name pos:start="21:27" pos:end="21:31"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:31">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="75:5"><if pos:start="25:5" pos:end="67:5">if<condition pos:start="25:7" pos:end="25:18">(<expr pos:start="25:8" pos:end="25:17"><name pos:start="25:8" pos:end="25:12">count</name> <operator pos:start="25:14" pos:end="25:15">==</operator> <literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>)</condition><block pos:start="25:19" pos:end="67:5">{<block_content pos:start="27:9" pos:end="65:9">

        <switch pos:start="27:9" pos:end="65:9">switch<condition pos:start="27:15" pos:end="27:20">(<expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">type</name></expr>)</condition><block pos:start="27:21" pos:end="65:9">{<block_content pos:start="29:9" pos:end="63:30">

        <case pos:start="29:9" pos:end="29:23">case <expr pos:start="29:14" pos:end="29:22"><name pos:start="29:14" pos:end="29:22">TIFF_BYTE</name></expr>:</case>

        <case pos:start="31:9" pos:end="31:24">case <expr pos:start="31:14" pos:end="31:23"><name pos:start="31:14" pos:end="31:23">TIFF_SHORT</name></expr>:</case>

            <expr_stmt pos:start="33:13" pos:end="33:21"><expr pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:15">buf</name> <operator pos:start="33:17" pos:end="33:18">-=</operator> <literal type="number" pos:start="33:20" pos:end="33:20">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:44"><expr pos:start="35:13" pos:end="35:43"><name pos:start="35:13" pos:end="35:17">value</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:43"><name pos:start="35:21" pos:end="35:24">tget</name><argument_list pos:start="35:25" pos:end="35:43">(<argument pos:start="35:26" pos:end="35:29"><expr pos:start="35:26" pos:end="35:29"><operator pos:start="35:26" pos:end="35:26">&amp;</operator><name pos:start="35:27" pos:end="35:29">buf</name></expr></argument>, <argument pos:start="35:32" pos:end="35:35"><expr pos:start="35:32" pos:end="35:35"><name pos:start="35:32" pos:end="35:35">type</name></expr></argument>, <argument pos:start="35:38" pos:end="35:42"><expr pos:start="35:38" pos:end="35:42"><name pos:start="35:38" pos:end="35:42"><name pos:start="35:38" pos:end="35:38">s</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:42">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:23"><expr pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:15">buf</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:22">NULL</name></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <case pos:start="41:9" pos:end="41:23">case <expr pos:start="41:14" pos:end="41:22"><name pos:start="41:14" pos:end="41:22">TIFF_LONG</name></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:24"><expr pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:17">value</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:23">off</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:23"><expr pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:15">buf</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:22">NULL</name></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <case pos:start="49:9" pos:end="49:25">case <expr pos:start="49:14" pos:end="49:24"><name pos:start="49:14" pos:end="49:24">TIFF_STRING</name></expr>:</case>

            <if_stmt pos:start="51:13" pos:end="57:13"><if pos:start="51:13" pos:end="57:13">if<condition pos:start="51:15" pos:end="51:26">(<expr pos:start="51:16" pos:end="51:25"><name pos:start="51:16" pos:end="51:20">count</name> <operator pos:start="51:22" pos:end="51:23">&lt;=</operator> <literal type="number" pos:start="51:25" pos:end="51:25">4</literal></expr>)</condition><block pos:start="51:27" pos:end="57:13">{<block_content pos:start="53:17" pos:end="55:22">

                <expr_stmt pos:start="53:17" pos:end="53:25"><expr pos:start="53:17" pos:end="53:24"><name pos:start="53:17" pos:end="53:19">buf</name> <operator pos:start="53:21" pos:end="53:22">-=</operator> <literal type="number" pos:start="53:24" pos:end="53:24">4</literal></expr>;</expr_stmt>

                <break pos:start="55:17" pos:end="55:22">break;</break>

            </block_content>}</block></if></if_stmt>

        <default pos:start="59:9" pos:end="59:16">default:</default>

            <expr_stmt pos:start="61:13" pos:end="61:23"><expr pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:17">value</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <operator pos:start="61:21" pos:end="61:21">-</operator><literal type="number" pos:start="61:22" pos:end="61:22">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:30"><expr pos:start="63:13" pos:end="63:29"><name pos:start="63:13" pos:end="63:15">buf</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:23">start</name> <operator pos:start="63:25" pos:end="63:25">+</operator> <name pos:start="63:27" pos:end="63:29">off</name></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></if><if type="elseif" pos:start="67:6" pos:end="71:5">else if<condition pos:start="67:13" pos:end="67:43">(<expr pos:start="67:14" pos:end="67:42"><name pos:start="67:14" pos:end="67:29"><name pos:start="67:14" pos:end="67:23">type_sizes</name><index pos:start="67:24" pos:end="67:29">[<expr pos:start="67:25" pos:end="67:28"><name pos:start="67:25" pos:end="67:28">type</name></expr>]</index></name> <operator pos:start="67:31" pos:end="67:31">*</operator> <name pos:start="67:33" pos:end="67:37">count</name> <operator pos:start="67:39" pos:end="67:40">&lt;=</operator> <literal type="number" pos:start="67:42" pos:end="67:42">4</literal></expr>)</condition><block pos:start="67:44" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:17">

        <expr_stmt pos:start="69:9" pos:end="69:17"><expr pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:11">buf</name> <operator pos:start="69:13" pos:end="69:14">-=</operator> <literal type="number" pos:start="69:16" pos:end="69:16">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="71:6" pos:end="75:5">else<block pos:start="71:10" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:26">

        <expr_stmt pos:start="73:9" pos:end="73:26"><expr pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:11">buf</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <name pos:start="73:15" pos:end="73:19">start</name> <operator pos:start="73:21" pos:end="73:21">+</operator> <name pos:start="73:23" pos:end="73:25">off</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if<condition pos:start="79:7" pos:end="79:45">(<expr pos:start="79:8" pos:end="79:44"><name pos:start="79:8" pos:end="79:10">buf</name> <operator pos:start="79:12" pos:end="79:13">&amp;&amp;</operator> <operator pos:start="79:15" pos:end="79:15">(</operator><name pos:start="79:16" pos:end="79:35"><name pos:start="79:16" pos:end="79:18">buf</name> <argument_list type="generic" pos:start="79:20" pos:end="79:35">&lt; <argument pos:start="79:22" pos:end="79:33"><expr pos:start="79:22" pos:end="79:33"><name pos:start="79:22" pos:end="79:26">start</name> <operator pos:start="79:28" pos:end="79:29">||</operator> <name pos:start="79:31" pos:end="79:33">buf</name></expr></argument> &gt;</argument_list></name> <name pos:start="79:37" pos:end="79:43">end_buf</name><operator pos:start="79:44" pos:end="79:44">)</operator></expr>)</condition><block pos:start="79:46" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:18">

        <expr_stmt pos:start="81:9" pos:end="81:87"><expr pos:start="81:9" pos:end="81:86"><call pos:start="81:9" pos:end="81:86"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:86">(<argument pos:start="81:16" pos:end="81:23"><expr pos:start="81:16" pos:end="81:23"><name pos:start="81:16" pos:end="81:23"><name pos:start="81:16" pos:end="81:16">s</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:23">avctx</name></name></expr></argument>, <argument pos:start="81:26" pos:end="81:37"><expr pos:start="81:26" pos:end="81:37"><name pos:start="81:26" pos:end="81:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:40" pos:end="81:85"><expr pos:start="81:40" pos:end="81:85"><literal type="string" pos:start="81:40" pos:end="81:85">"Tag referencing position outside the image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:18">return <expr pos:start="83:16" pos:end="83:17"><operator pos:start="83:16" pos:end="83:16">-</operator><literal type="number" pos:start="83:17" pos:end="83:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="89:5" pos:end="461:5">switch<condition pos:start="89:11" pos:end="89:15">(<expr pos:start="89:12" pos:end="89:14"><name pos:start="89:12" pos:end="89:14">tag</name></expr>)</condition><block pos:start="89:16" pos:end="461:5">{<block_content pos:start="91:5" pos:end="459:14">

    <case pos:start="91:5" pos:end="91:20">case <expr pos:start="91:10" pos:end="91:19"><name pos:start="91:10" pos:end="91:19">TIFF_WIDTH</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:25"><expr pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:16">width</name></name> <operator pos:start="93:18" pos:end="93:18">=</operator> <name pos:start="93:20" pos:end="93:24">value</name></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:21">case <expr pos:start="97:10" pos:end="97:20"><name pos:start="97:10" pos:end="97:20">TIFF_HEIGHT</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:26"><expr pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:17"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:17">height</name></name> <operator pos:start="99:19" pos:end="99:19">=</operator> <name pos:start="99:21" pos:end="99:25">value</name></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:18">case <expr pos:start="103:10" pos:end="103:17"><name pos:start="103:10" pos:end="103:17">TIFF_BPP</name></expr>:</case>

        <if_stmt pos:start="105:9" pos:end="133:9"><if pos:start="105:9" pos:end="105:38">if<condition pos:start="105:11" pos:end="105:22">(<expr pos:start="105:12" pos:end="105:21"><name pos:start="105:12" pos:end="105:16">count</name> <operator pos:start="105:18" pos:end="105:19">==</operator> <literal type="number" pos:start="105:21" pos:end="105:21">1</literal></expr>)</condition><block type="pseudo" pos:start="105:24" pos:end="105:38"><block_content pos:start="105:24" pos:end="105:38"> <expr_stmt pos:start="105:24" pos:end="105:38"><expr pos:start="105:24" pos:end="105:37"><name pos:start="105:24" pos:end="105:29"><name pos:start="105:24" pos:end="105:24">s</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:29">bpp</name></name> <operator pos:start="105:31" pos:end="105:31">=</operator> <name pos:start="105:33" pos:end="105:37">value</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="107:9" pos:end="133:9">else<block pos:start="107:13" pos:end="133:9">{<block_content pos:start="109:13" pos:end="131:13">

            <switch pos:start="109:13" pos:end="131:13">switch<condition pos:start="109:19" pos:end="109:24">(<expr pos:start="109:20" pos:end="109:23"><name pos:start="109:20" pos:end="109:23">type</name></expr>)</condition><block pos:start="109:25" pos:end="131:13">{<block_content pos:start="111:13" pos:end="129:28">

            <case pos:start="111:13" pos:end="111:27">case <expr pos:start="111:18" pos:end="111:26"><name pos:start="111:18" pos:end="111:26">TIFF_BYTE</name></expr>:</case>

                <expr_stmt pos:start="113:17" pos:end="113:106"><expr pos:start="113:17" pos:end="113:105"><name pos:start="113:17" pos:end="113:22"><name pos:start="113:17" pos:end="113:17">s</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:22">bpp</name></name> <operator pos:start="113:24" pos:end="113:24">=</operator> <operator pos:start="113:26" pos:end="113:26">(</operator><name pos:start="113:27" pos:end="113:29">off</name> <operator pos:start="113:31" pos:end="113:31">&amp;</operator> <literal type="number" pos:start="113:33" pos:end="113:36">0xFF</literal><operator pos:start="113:37" pos:end="113:37">)</operator> <operator pos:start="113:39" pos:end="113:39">+</operator> <operator pos:start="113:41" pos:end="113:41">(</operator><operator pos:start="113:42" pos:end="113:42">(</operator><name pos:start="113:43" pos:end="113:45">off</name> <operator pos:start="113:47" pos:end="113:48">&gt;&gt;</operator> <literal type="number" pos:start="113:50" pos:end="113:50">8</literal><operator pos:start="113:51" pos:end="113:51">)</operator> <operator pos:start="113:53" pos:end="113:53">&amp;</operator> <literal type="number" pos:start="113:55" pos:end="113:58">0xFF</literal><operator pos:start="113:59" pos:end="113:59">)</operator> <operator pos:start="113:61" pos:end="113:61">+</operator> <operator pos:start="113:63" pos:end="113:63">(</operator><operator pos:start="113:64" pos:end="113:64">(</operator><name pos:start="113:65" pos:end="113:67">off</name> <operator pos:start="113:69" pos:end="113:70">&gt;&gt;</operator> <literal type="number" pos:start="113:72" pos:end="113:73">16</literal><operator pos:start="113:74" pos:end="113:74">)</operator> <operator pos:start="113:76" pos:end="113:76">&amp;</operator> <literal type="number" pos:start="113:78" pos:end="113:81">0xFF</literal><operator pos:start="113:82" pos:end="113:82">)</operator> <operator pos:start="113:84" pos:end="113:84">+</operator> <operator pos:start="113:86" pos:end="113:86">(</operator><operator pos:start="113:87" pos:end="113:87">(</operator><name pos:start="113:88" pos:end="113:90">off</name> <operator pos:start="113:92" pos:end="113:93">&gt;&gt;</operator> <literal type="number" pos:start="113:95" pos:end="113:96">24</literal><operator pos:start="113:97" pos:end="113:97">)</operator> <operator pos:start="113:99" pos:end="113:99">&amp;</operator> <literal type="number" pos:start="113:101" pos:end="113:104">0xFF</literal><operator pos:start="113:105" pos:end="113:105">)</operator></expr>;</expr_stmt>

                <break pos:start="115:17" pos:end="115:22">break;</break>

            <case pos:start="117:13" pos:end="117:28">case <expr pos:start="117:18" pos:end="117:27"><name pos:start="117:18" pos:end="117:27">TIFF_SHORT</name></expr>:</case>

            <case pos:start="119:13" pos:end="119:27">case <expr pos:start="119:18" pos:end="119:26"><name pos:start="119:18" pos:end="119:26">TIFF_LONG</name></expr>:</case>

                <expr_stmt pos:start="121:17" pos:end="121:27"><expr pos:start="121:17" pos:end="121:26"><name pos:start="121:17" pos:end="121:22"><name pos:start="121:17" pos:end="121:17">s</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:22">bpp</name></name> <operator pos:start="121:24" pos:end="121:24">=</operator> <literal type="number" pos:start="121:26" pos:end="121:26">0</literal></expr>;</expr_stmt>

                <for pos:start="123:17" pos:end="123:77">for<control pos:start="123:20" pos:end="123:42">(<init pos:start="123:21" pos:end="123:26"><expr pos:start="123:21" pos:end="123:25"><name pos:start="123:21" pos:end="123:21">i</name> <operator pos:start="123:23" pos:end="123:23">=</operator> <literal type="number" pos:start="123:25" pos:end="123:25">0</literal></expr>;</init> <condition pos:start="123:28" pos:end="123:37"><expr pos:start="123:28" pos:end="123:36"><name pos:start="123:28" pos:end="123:28">i</name> <operator pos:start="123:30" pos:end="123:30">&lt;</operator> <name pos:start="123:32" pos:end="123:36">count</name></expr>;</condition> <incr pos:start="123:39" pos:end="123:41"><expr pos:start="123:39" pos:end="123:41"><name pos:start="123:39" pos:end="123:39">i</name><operator pos:start="123:40" pos:end="123:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="123:44" pos:end="123:77"><block_content pos:start="123:44" pos:end="123:77"> <expr_stmt pos:start="123:44" pos:end="123:77"><expr pos:start="123:44" pos:end="123:76"><name pos:start="123:44" pos:end="123:49"><name pos:start="123:44" pos:end="123:44">s</name><operator pos:start="123:45" pos:end="123:46">-&gt;</operator><name pos:start="123:47" pos:end="123:49">bpp</name></name> <operator pos:start="123:51" pos:end="123:52">+=</operator> <call pos:start="123:54" pos:end="123:76"><name pos:start="123:54" pos:end="123:57">tget</name><argument_list pos:start="123:58" pos:end="123:76">(<argument pos:start="123:59" pos:end="123:62"><expr pos:start="123:59" pos:end="123:62"><operator pos:start="123:59" pos:end="123:59">&amp;</operator><name pos:start="123:60" pos:end="123:62">buf</name></expr></argument>, <argument pos:start="123:65" pos:end="123:68"><expr pos:start="123:65" pos:end="123:68"><name pos:start="123:65" pos:end="123:68">type</name></expr></argument>, <argument pos:start="123:71" pos:end="123:75"><expr pos:start="123:71" pos:end="123:75"><name pos:start="123:71" pos:end="123:75"><name pos:start="123:71" pos:end="123:71">s</name><operator pos:start="123:72" pos:end="123:73">-&gt;</operator><name pos:start="123:74" pos:end="123:75">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <break pos:start="125:17" pos:end="125:22">break;</break>

            <default pos:start="127:13" pos:end="127:20">default:</default>

                <expr_stmt pos:start="129:17" pos:end="129:28"><expr pos:start="129:17" pos:end="129:27"><name pos:start="129:17" pos:end="129:22"><name pos:start="129:17" pos:end="129:17">s</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:22">bpp</name></name> <operator pos:start="129:24" pos:end="129:24">=</operator> <operator pos:start="129:26" pos:end="129:26">-</operator><literal type="number" pos:start="129:27" pos:end="129:27">1</literal></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

        <switch pos:start="135:9" pos:end="193:9">switch<condition pos:start="135:15" pos:end="135:22">(<expr pos:start="135:16" pos:end="135:21"><name pos:start="135:16" pos:end="135:21"><name pos:start="135:16" pos:end="135:16">s</name><operator pos:start="135:17" pos:end="135:18">-&gt;</operator><name pos:start="135:19" pos:end="135:21">bpp</name></name></expr>)</condition><block pos:start="135:23" pos:end="193:9">{<block_content pos:start="137:9" pos:end="191:22">

        <case pos:start="137:9" pos:end="137:15">case <expr pos:start="137:14" pos:end="137:14"><literal type="number" pos:start="137:14" pos:end="137:14">1</literal></expr>:</case>

            <expr_stmt pos:start="139:13" pos:end="139:50"><expr pos:start="139:13" pos:end="139:49"><name pos:start="139:13" pos:end="139:29"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:20">avctx</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:29">pix_fmt</name></name> <operator pos:start="139:31" pos:end="139:31">=</operator> <name pos:start="139:33" pos:end="139:49">PIX_FMT_MONOBLACK</name></expr>;</expr_stmt>

            <break pos:start="141:13" pos:end="141:18">break;</break>

        <case pos:start="143:9" pos:end="143:15">case <expr pos:start="143:14" pos:end="143:14"><literal type="number" pos:start="143:14" pos:end="143:14">8</literal></expr>:</case>

            <expr_stmt pos:start="145:13" pos:end="145:45"><expr pos:start="145:13" pos:end="145:44"><name pos:start="145:13" pos:end="145:29"><name pos:start="145:13" pos:end="145:13">s</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:20">avctx</name><operator pos:start="145:21" pos:end="145:22">-&gt;</operator><name pos:start="145:23" pos:end="145:29">pix_fmt</name></name> <operator pos:start="145:31" pos:end="145:31">=</operator> <name pos:start="145:33" pos:end="145:44">PIX_FMT_PAL8</name></expr>;</expr_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        <case pos:start="149:9" pos:end="149:16">case <expr pos:start="149:14" pos:end="149:15"><literal type="number" pos:start="149:14" pos:end="149:15">24</literal></expr>:</case>

            <expr_stmt pos:start="151:13" pos:end="151:46"><expr pos:start="151:13" pos:end="151:45"><name pos:start="151:13" pos:end="151:29"><name pos:start="151:13" pos:end="151:13">s</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:20">avctx</name><operator pos:start="151:21" pos:end="151:22">-&gt;</operator><name pos:start="151:23" pos:end="151:29">pix_fmt</name></name> <operator pos:start="151:31" pos:end="151:31">=</operator> <name pos:start="151:33" pos:end="151:45">PIX_FMT_RGB24</name></expr>;</expr_stmt>

            <break pos:start="153:13" pos:end="153:18">break;</break>

        <case pos:start="155:9" pos:end="155:16">case <expr pos:start="155:14" pos:end="155:15"><literal type="number" pos:start="155:14" pos:end="155:15">16</literal></expr>:</case>

            <if_stmt pos:start="157:13" pos:end="167:13"><if pos:start="157:13" pos:end="161:13">if<condition pos:start="157:15" pos:end="157:26">(<expr pos:start="157:16" pos:end="157:25"><name pos:start="157:16" pos:end="157:20">count</name> <operator pos:start="157:22" pos:end="157:23">==</operator> <literal type="number" pos:start="157:25" pos:end="157:25">1</literal></expr>)</condition><block pos:start="157:27" pos:end="161:13">{<block_content pos:start="159:17" pos:end="159:53">

                <expr_stmt pos:start="159:17" pos:end="159:53"><expr pos:start="159:17" pos:end="159:52"><name pos:start="159:17" pos:end="159:33"><name pos:start="159:17" pos:end="159:17">s</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:24">avctx</name><operator pos:start="159:25" pos:end="159:26">-&gt;</operator><name pos:start="159:27" pos:end="159:33">pix_fmt</name></name> <operator pos:start="159:35" pos:end="159:35">=</operator> <name pos:start="159:37" pos:end="159:52">PIX_FMT_GRAY16BE</name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="161:14" pos:end="167:13">else<block pos:start="161:18" pos:end="167:13">{<block_content pos:start="163:17" pos:end="165:26">

                <expr_stmt pos:start="163:17" pos:end="163:98"><expr pos:start="163:17" pos:end="163:97"><call pos:start="163:17" pos:end="163:97"><name pos:start="163:17" pos:end="163:22">av_log</name><argument_list pos:start="163:23" pos:end="163:97">(<argument pos:start="163:24" pos:end="163:31"><expr pos:start="163:24" pos:end="163:31"><name pos:start="163:24" pos:end="163:31"><name pos:start="163:24" pos:end="163:24">s</name><operator pos:start="163:25" pos:end="163:26">-&gt;</operator><name pos:start="163:27" pos:end="163:31">avctx</name></name></expr></argument>, <argument pos:start="163:34" pos:end="163:45"><expr pos:start="163:34" pos:end="163:45"><name pos:start="163:34" pos:end="163:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="163:48" pos:end="163:88"><expr pos:start="163:48" pos:end="163:88"><literal type="string" pos:start="163:48" pos:end="163:88">"This format is not supported (bpp=%i)\n"</literal></expr></argument>, <argument pos:start="163:91" pos:end="163:96"><expr pos:start="163:91" pos:end="163:96"><name pos:start="163:91" pos:end="163:96"><name pos:start="163:91" pos:end="163:91">s</name><operator pos:start="163:92" pos:end="163:93">-&gt;</operator><name pos:start="163:94" pos:end="163:96">bpp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="165:17" pos:end="165:26">return <expr pos:start="165:24" pos:end="165:25"><operator pos:start="165:24" pos:end="165:24">-</operator><literal type="number" pos:start="165:25" pos:end="165:25">1</literal></expr>;</return>

            </block_content>}</block></else></if_stmt>

            <break pos:start="169:13" pos:end="169:18">break;</break>

        <case pos:start="171:9" pos:end="171:16">case <expr pos:start="171:14" pos:end="171:15"><literal type="number" pos:start="171:14" pos:end="171:15">32</literal></expr>:</case>

            <if_stmt pos:start="173:13" pos:end="183:13"><if pos:start="173:13" pos:end="177:13">if<condition pos:start="173:15" pos:end="173:26">(<expr pos:start="173:16" pos:end="173:25"><name pos:start="173:16" pos:end="173:20">count</name> <operator pos:start="173:22" pos:end="173:23">==</operator> <literal type="number" pos:start="173:25" pos:end="173:25">4</literal></expr>)</condition><block pos:start="173:27" pos:end="177:13">{<block_content pos:start="175:17" pos:end="175:49">

                <expr_stmt pos:start="175:17" pos:end="175:49"><expr pos:start="175:17" pos:end="175:48"><name pos:start="175:17" pos:end="175:33"><name pos:start="175:17" pos:end="175:17">s</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:24">avctx</name><operator pos:start="175:25" pos:end="175:26">-&gt;</operator><name pos:start="175:27" pos:end="175:33">pix_fmt</name></name> <operator pos:start="175:35" pos:end="175:35">=</operator> <name pos:start="175:37" pos:end="175:48">PIX_FMT_RGBA</name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="177:14" pos:end="183:13">else<block pos:start="177:18" pos:end="183:13">{<block_content pos:start="179:17" pos:end="181:26">

                <expr_stmt pos:start="179:17" pos:end="179:120"><expr pos:start="179:17" pos:end="179:119"><call pos:start="179:17" pos:end="179:119"><name pos:start="179:17" pos:end="179:22">av_log</name><argument_list pos:start="179:23" pos:end="179:119">(<argument pos:start="179:24" pos:end="179:31"><expr pos:start="179:24" pos:end="179:31"><name pos:start="179:24" pos:end="179:31"><name pos:start="179:24" pos:end="179:24">s</name><operator pos:start="179:25" pos:end="179:26">-&gt;</operator><name pos:start="179:27" pos:end="179:31">avctx</name></name></expr></argument>, <argument pos:start="179:34" pos:end="179:45"><expr pos:start="179:34" pos:end="179:45"><name pos:start="179:34" pos:end="179:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="179:48" pos:end="179:103"><expr pos:start="179:48" pos:end="179:103"><literal type="string" pos:start="179:48" pos:end="179:103">"This format is not supported (bpp=%d, %d components)\n"</literal></expr></argument>, <argument pos:start="179:106" pos:end="179:111"><expr pos:start="179:106" pos:end="179:111"><name pos:start="179:106" pos:end="179:111"><name pos:start="179:106" pos:end="179:106">s</name><operator pos:start="179:107" pos:end="179:108">-&gt;</operator><name pos:start="179:109" pos:end="179:111">bpp</name></name></expr></argument>, <argument pos:start="179:114" pos:end="179:118"><expr pos:start="179:114" pos:end="179:118"><name pos:start="179:114" pos:end="179:118">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="181:17" pos:end="181:26">return <expr pos:start="181:24" pos:end="181:25"><operator pos:start="181:24" pos:end="181:24">-</operator><literal type="number" pos:start="181:25" pos:end="181:25">1</literal></expr>;</return>

            </block_content>}</block></else></if_stmt>

            <break pos:start="185:13" pos:end="185:18">break;</break>

        <default pos:start="187:9" pos:end="187:16">default:</default>

            <expr_stmt pos:start="189:13" pos:end="189:116"><expr pos:start="189:13" pos:end="189:115"><call pos:start="189:13" pos:end="189:115"><name pos:start="189:13" pos:end="189:18">av_log</name><argument_list pos:start="189:19" pos:end="189:115">(<argument pos:start="189:20" pos:end="189:27"><expr pos:start="189:20" pos:end="189:27"><name pos:start="189:20" pos:end="189:27"><name pos:start="189:20" pos:end="189:20">s</name><operator pos:start="189:21" pos:end="189:22">-&gt;</operator><name pos:start="189:23" pos:end="189:27">avctx</name></name></expr></argument>, <argument pos:start="189:30" pos:end="189:41"><expr pos:start="189:30" pos:end="189:41"><name pos:start="189:30" pos:end="189:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="189:44" pos:end="189:99"><expr pos:start="189:44" pos:end="189:99"><literal type="string" pos:start="189:44" pos:end="189:99">"This format is not supported (bpp=%d, %d components)\n"</literal></expr></argument>, <argument pos:start="189:102" pos:end="189:107"><expr pos:start="189:102" pos:end="189:107"><name pos:start="189:102" pos:end="189:107"><name pos:start="189:102" pos:end="189:102">s</name><operator pos:start="189:103" pos:end="189:104">-&gt;</operator><name pos:start="189:105" pos:end="189:107">bpp</name></name></expr></argument>, <argument pos:start="189:110" pos:end="189:114"><expr pos:start="189:110" pos:end="189:114"><name pos:start="189:110" pos:end="189:114">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="191:13" pos:end="191:22">return <expr pos:start="191:20" pos:end="191:21"><operator pos:start="191:20" pos:end="191:20">-</operator><literal type="number" pos:start="191:21" pos:end="191:21">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <if_stmt pos:start="195:9" pos:end="203:9"><if pos:start="195:9" pos:end="203:9">if<condition pos:start="195:11" pos:end="195:72">(<expr pos:start="195:12" pos:end="195:71"><name pos:start="195:12" pos:end="195:19"><name pos:start="195:12" pos:end="195:12">s</name><operator pos:start="195:13" pos:end="195:14">-&gt;</operator><name pos:start="195:15" pos:end="195:19">width</name></name> <operator pos:start="195:21" pos:end="195:22">!=</operator> <name pos:start="195:24" pos:end="195:38"><name pos:start="195:24" pos:end="195:24">s</name><operator pos:start="195:25" pos:end="195:26">-&gt;</operator><name pos:start="195:27" pos:end="195:31">avctx</name><operator pos:start="195:32" pos:end="195:33">-&gt;</operator><name pos:start="195:34" pos:end="195:38">width</name></name> <operator pos:start="195:40" pos:end="195:41">||</operator> <name pos:start="195:43" pos:end="195:51"><name pos:start="195:43" pos:end="195:43">s</name><operator pos:start="195:44" pos:end="195:45">-&gt;</operator><name pos:start="195:46" pos:end="195:51">height</name></name> <operator pos:start="195:53" pos:end="195:54">!=</operator> <name pos:start="195:56" pos:end="195:71"><name pos:start="195:56" pos:end="195:56">s</name><operator pos:start="195:57" pos:end="195:58">-&gt;</operator><name pos:start="195:59" pos:end="195:63">avctx</name><operator pos:start="195:64" pos:end="195:65">-&gt;</operator><name pos:start="195:66" pos:end="195:71">height</name></name></expr>)</condition><block pos:start="195:73" pos:end="203:9">{<block_content pos:start="197:13" pos:end="201:66">

            <if_stmt pos:start="197:13" pos:end="199:26"><if pos:start="197:13" pos:end="199:26">if<condition pos:start="197:15" pos:end="197:71">(<expr pos:start="197:16" pos:end="197:70"><call pos:start="197:16" pos:end="197:70"><name pos:start="197:16" pos:end="197:39">avcodec_check_dimensions</name><argument_list pos:start="197:40" pos:end="197:70">(<argument pos:start="197:41" pos:end="197:48"><expr pos:start="197:41" pos:end="197:48"><name pos:start="197:41" pos:end="197:48"><name pos:start="197:41" pos:end="197:41">s</name><operator pos:start="197:42" pos:end="197:43">-&gt;</operator><name pos:start="197:44" pos:end="197:48">avctx</name></name></expr></argument>, <argument pos:start="197:51" pos:end="197:58"><expr pos:start="197:51" pos:end="197:58"><name pos:start="197:51" pos:end="197:58"><name pos:start="197:51" pos:end="197:51">s</name><operator pos:start="197:52" pos:end="197:53">-&gt;</operator><name pos:start="197:54" pos:end="197:58">width</name></name></expr></argument>, <argument pos:start="197:61" pos:end="197:69"><expr pos:start="197:61" pos:end="197:69"><name pos:start="197:61" pos:end="197:69"><name pos:start="197:61" pos:end="197:61">s</name><operator pos:start="197:62" pos:end="197:63">-&gt;</operator><name pos:start="197:64" pos:end="197:69">height</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="199:17" pos:end="199:26"><block_content pos:start="199:17" pos:end="199:26">

                <return pos:start="199:17" pos:end="199:26">return <expr pos:start="199:24" pos:end="199:25"><operator pos:start="199:24" pos:end="199:24">-</operator><literal type="number" pos:start="199:25" pos:end="199:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:66"><expr pos:start="201:13" pos:end="201:65"><call pos:start="201:13" pos:end="201:65"><name pos:start="201:13" pos:end="201:34">avcodec_set_dimensions</name><argument_list pos:start="201:35" pos:end="201:65">(<argument pos:start="201:36" pos:end="201:43"><expr pos:start="201:36" pos:end="201:43"><name pos:start="201:36" pos:end="201:43"><name pos:start="201:36" pos:end="201:36">s</name><operator pos:start="201:37" pos:end="201:38">-&gt;</operator><name pos:start="201:39" pos:end="201:43">avctx</name></name></expr></argument>, <argument pos:start="201:46" pos:end="201:53"><expr pos:start="201:46" pos:end="201:53"><name pos:start="201:46" pos:end="201:53"><name pos:start="201:46" pos:end="201:46">s</name><operator pos:start="201:47" pos:end="201:48">-&gt;</operator><name pos:start="201:49" pos:end="201:53">width</name></name></expr></argument>, <argument pos:start="201:56" pos:end="201:64"><expr pos:start="201:56" pos:end="201:64"><name pos:start="201:56" pos:end="201:64"><name pos:start="201:56" pos:end="201:56">s</name><operator pos:start="201:57" pos:end="201:58">-&gt;</operator><name pos:start="201:59" pos:end="201:64">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="205:9" pos:end="207:60"><if pos:start="205:9" pos:end="207:60">if<condition pos:start="205:11" pos:end="205:30">(<expr pos:start="205:12" pos:end="205:29"><name pos:start="205:12" pos:end="205:29"><name pos:start="205:12" pos:end="205:12">s</name><operator pos:start="205:13" pos:end="205:14">-&gt;</operator><name pos:start="205:15" pos:end="205:21">picture</name><operator pos:start="205:22" pos:end="205:22">.</operator><name pos:start="205:23" pos:end="205:26">data</name><index pos:start="205:27" pos:end="205:29">[<expr pos:start="205:28" pos:end="205:28"><literal type="number" pos:start="205:28" pos:end="205:28">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="207:13" pos:end="207:60"><block_content pos:start="207:13" pos:end="207:60">

            <expr_stmt pos:start="207:13" pos:end="207:60"><expr pos:start="207:13" pos:end="207:59"><call pos:start="207:13" pos:end="207:59"><name pos:start="207:13" pos:end="207:36"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:20">avctx</name><operator pos:start="207:21" pos:end="207:22">-&gt;</operator><name pos:start="207:23" pos:end="207:36">release_buffer</name></name><argument_list pos:start="207:37" pos:end="207:59">(<argument pos:start="207:38" pos:end="207:45"><expr pos:start="207:38" pos:end="207:45"><name pos:start="207:38" pos:end="207:45"><name pos:start="207:38" pos:end="207:38">s</name><operator pos:start="207:39" pos:end="207:40">-&gt;</operator><name pos:start="207:41" pos:end="207:45">avctx</name></name></expr></argument>, <argument pos:start="207:48" pos:end="207:58"><expr pos:start="207:48" pos:end="207:58"><operator pos:start="207:48" pos:end="207:48">&amp;</operator><name pos:start="207:49" pos:end="207:58"><name pos:start="207:49" pos:end="207:49">s</name><operator pos:start="207:50" pos:end="207:51">-&gt;</operator><name pos:start="207:52" pos:end="207:58">picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="209:9" pos:end="215:9"><if pos:start="209:9" pos:end="215:9">if<condition pos:start="209:11" pos:end="209:59">(<expr pos:start="209:12" pos:end="209:58"><call pos:start="209:12" pos:end="209:54"><name pos:start="209:12" pos:end="209:31"><name pos:start="209:12" pos:end="209:12">s</name><operator pos:start="209:13" pos:end="209:14">-&gt;</operator><name pos:start="209:15" pos:end="209:19">avctx</name><operator pos:start="209:20" pos:end="209:21">-&gt;</operator><name pos:start="209:22" pos:end="209:31">get_buffer</name></name><argument_list pos:start="209:32" pos:end="209:54">(<argument pos:start="209:33" pos:end="209:40"><expr pos:start="209:33" pos:end="209:40"><name pos:start="209:33" pos:end="209:40"><name pos:start="209:33" pos:end="209:33">s</name><operator pos:start="209:34" pos:end="209:35">-&gt;</operator><name pos:start="209:36" pos:end="209:40">avctx</name></name></expr></argument>, <argument pos:start="209:43" pos:end="209:53"><expr pos:start="209:43" pos:end="209:53"><operator pos:start="209:43" pos:end="209:43">&amp;</operator><name pos:start="209:44" pos:end="209:53"><name pos:start="209:44" pos:end="209:44">s</name><operator pos:start="209:45" pos:end="209:46">-&gt;</operator><name pos:start="209:47" pos:end="209:53">picture</name></name></expr></argument>)</argument_list></call> <operator pos:start="209:56" pos:end="209:56">&lt;</operator> <literal type="number" pos:start="209:58" pos:end="209:58">0</literal></expr>)</condition><block pos:start="209:60" pos:end="215:9">{<block_content pos:start="211:13" pos:end="213:22">

            <expr_stmt pos:start="211:13" pos:end="211:68"><expr pos:start="211:13" pos:end="211:67"><call pos:start="211:13" pos:end="211:67"><name pos:start="211:13" pos:end="211:18">av_log</name><argument_list pos:start="211:19" pos:end="211:67">(<argument pos:start="211:20" pos:end="211:27"><expr pos:start="211:20" pos:end="211:27"><name pos:start="211:20" pos:end="211:27"><name pos:start="211:20" pos:end="211:20">s</name><operator pos:start="211:21" pos:end="211:22">-&gt;</operator><name pos:start="211:23" pos:end="211:27">avctx</name></name></expr></argument>, <argument pos:start="211:30" pos:end="211:41"><expr pos:start="211:30" pos:end="211:41"><name pos:start="211:30" pos:end="211:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="211:44" pos:end="211:66"><expr pos:start="211:44" pos:end="211:66"><literal type="string" pos:start="211:44" pos:end="211:66">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="213:13" pos:end="213:22">return <expr pos:start="213:20" pos:end="213:21"><operator pos:start="213:20" pos:end="213:20">-</operator><literal type="number" pos:start="213:21" pos:end="213:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="217:9" pos:end="227:9"><if pos:start="217:9" pos:end="227:9">if<condition pos:start="217:11" pos:end="217:23">(<expr pos:start="217:12" pos:end="217:22"><name pos:start="217:12" pos:end="217:17"><name pos:start="217:12" pos:end="217:12">s</name><operator pos:start="217:13" pos:end="217:14">-&gt;</operator><name pos:start="217:15" pos:end="217:17">bpp</name></name> <operator pos:start="217:19" pos:end="217:20">==</operator> <literal type="number" pos:start="217:22" pos:end="217:22">8</literal></expr>)</condition><block pos:start="217:24" pos:end="227:9">{<block_content pos:start="221:13" pos:end="225:38">

            <comment type="block" pos:start="219:13" pos:end="219:44">/* make default grayscale pal */</comment>

            <expr_stmt pos:start="221:13" pos:end="221:50"><expr pos:start="221:13" pos:end="221:49"><name pos:start="221:13" pos:end="221:15">pal</name> <operator pos:start="221:17" pos:end="221:17">=</operator> <operator pos:start="221:19" pos:end="221:19">(</operator><name pos:start="221:20" pos:end="221:27">uint32_t</name> <operator pos:start="221:29" pos:end="221:29">*</operator><operator pos:start="221:30" pos:end="221:30">)</operator> <name pos:start="221:32" pos:end="221:49"><name pos:start="221:32" pos:end="221:32">s</name><operator pos:start="221:33" pos:end="221:34">-&gt;</operator><name pos:start="221:35" pos:end="221:41">picture</name><operator pos:start="221:42" pos:end="221:42">.</operator><name pos:start="221:43" pos:end="221:46">data</name><index pos:start="221:47" pos:end="221:49">[<expr pos:start="221:48" pos:end="221:48"><literal type="number" pos:start="221:48" pos:end="221:48">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="223:13" pos:end="225:38">for<control pos:start="223:16" pos:end="223:36">(<init pos:start="223:17" pos:end="223:22"><expr pos:start="223:17" pos:end="223:21"><name pos:start="223:17" pos:end="223:17">i</name> <operator pos:start="223:19" pos:end="223:19">=</operator> <literal type="number" pos:start="223:21" pos:end="223:21">0</literal></expr>;</init> <condition pos:start="223:24" pos:end="223:31"><expr pos:start="223:24" pos:end="223:30"><name pos:start="223:24" pos:end="223:24">i</name> <operator pos:start="223:26" pos:end="223:26">&lt;</operator> <literal type="number" pos:start="223:28" pos:end="223:30">256</literal></expr>;</condition> <incr pos:start="223:33" pos:end="223:35"><expr pos:start="223:33" pos:end="223:35"><name pos:start="223:33" pos:end="223:33">i</name><operator pos:start="223:34" pos:end="223:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="225:17" pos:end="225:38"><block_content pos:start="225:17" pos:end="225:38">

                <expr_stmt pos:start="225:17" pos:end="225:38"><expr pos:start="225:17" pos:end="225:37"><name pos:start="225:17" pos:end="225:22"><name pos:start="225:17" pos:end="225:19">pal</name><index pos:start="225:20" pos:end="225:22">[<expr pos:start="225:21" pos:end="225:21"><name pos:start="225:21" pos:end="225:21">i</name></expr>]</index></name> <operator pos:start="225:24" pos:end="225:24">=</operator> <name pos:start="225:26" pos:end="225:26">i</name> <operator pos:start="225:28" pos:end="225:28">*</operator> <literal type="number" pos:start="225:30" pos:end="225:37">0x010101</literal></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

        <break pos:start="229:9" pos:end="229:14">break;</break>

    <case pos:start="231:5" pos:end="231:20">case <expr pos:start="231:10" pos:end="231:19"><name pos:start="231:10" pos:end="231:19">TIFF_COMPR</name></expr>:</case>

        <expr_stmt pos:start="233:9" pos:end="233:25"><expr pos:start="233:9" pos:end="233:24"><name pos:start="233:9" pos:end="233:16"><name pos:start="233:9" pos:end="233:9">s</name><operator pos:start="233:10" pos:end="233:11">-&gt;</operator><name pos:start="233:12" pos:end="233:16">compr</name></name> <operator pos:start="233:18" pos:end="233:18">=</operator> <name pos:start="233:20" pos:end="233:24">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:25"><expr pos:start="235:9" pos:end="235:24"><name pos:start="235:9" pos:end="235:20"><name pos:start="235:9" pos:end="235:9">s</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:20">predictor</name></name> <operator pos:start="235:22" pos:end="235:22">=</operator> <literal type="number" pos:start="235:24" pos:end="235:24">0</literal></expr>;</expr_stmt>

        <switch pos:start="237:9" pos:end="287:9">switch<condition pos:start="237:15" pos:end="237:24">(<expr pos:start="237:16" pos:end="237:23"><name pos:start="237:16" pos:end="237:23"><name pos:start="237:16" pos:end="237:16">s</name><operator pos:start="237:17" pos:end="237:18">-&gt;</operator><name pos:start="237:19" pos:end="237:23">compr</name></name></expr>)</condition><block pos:start="237:25" pos:end="287:9">{<block_content pos:start="239:9" pos:end="285:22">

        <case pos:start="239:9" pos:end="239:22">case <expr pos:start="239:14" pos:end="239:21"><name pos:start="239:14" pos:end="239:21">TIFF_RAW</name></expr>:</case>

        <case pos:start="241:9" pos:end="241:27">case <expr pos:start="241:14" pos:end="241:26"><name pos:start="241:14" pos:end="241:26">TIFF_PACKBITS</name></expr>:</case>

        <case pos:start="243:9" pos:end="243:22">case <expr pos:start="243:14" pos:end="243:21"><name pos:start="243:14" pos:end="243:21">TIFF_LZW</name></expr>:</case>

        <case pos:start="245:9" pos:end="245:28">case <expr pos:start="245:14" pos:end="245:27"><name pos:start="245:14" pos:end="245:27">TIFF_CCITT_RLE</name></expr>:</case>

            <break pos:start="247:13" pos:end="247:18">break;</break>

        <case pos:start="249:9" pos:end="249:21">case <expr pos:start="249:14" pos:end="249:20"><name pos:start="249:14" pos:end="249:20">TIFF_G3</name></expr>:</case>

        <case pos:start="251:9" pos:end="251:21">case <expr pos:start="251:14" pos:end="251:20"><name pos:start="251:14" pos:end="251:20">TIFF_G4</name></expr>:</case>

            <expr_stmt pos:start="253:13" pos:end="253:28"><expr pos:start="253:13" pos:end="253:27"><name pos:start="253:13" pos:end="253:23"><name pos:start="253:13" pos:end="253:13">s</name><operator pos:start="253:14" pos:end="253:15">-&gt;</operator><name pos:start="253:16" pos:end="253:23">fax_opts</name></name> <operator pos:start="253:25" pos:end="253:25">=</operator> <literal type="number" pos:start="253:27" pos:end="253:27">0</literal></expr>;</expr_stmt>

            <break pos:start="255:13" pos:end="255:18">break;</break>

        <case pos:start="257:9" pos:end="257:26">case <expr pos:start="257:14" pos:end="257:25"><name pos:start="257:14" pos:end="257:25">TIFF_DEFLATE</name></expr>:</case>

        <case pos:start="259:9" pos:end="262:0">case <expr pos:start="259:14" pos:end="259:31"><name pos:start="259:14" pos:end="259:31">TIFF_ADOBE_DEFLATE</name></expr>:</case>

<cpp:if pos:start="261:1" pos:end="261:15">#<cpp:directive pos:start="261:2" pos:end="261:3">if</cpp:directive> <expr pos:start="261:5" pos:end="261:15"><name pos:start="261:5" pos:end="261:15">CONFIG_ZLIB</name></expr></cpp:if>

            <break pos:start="263:13" pos:end="266:0">break;</break>

<cpp:else pos:start="265:1" pos:end="265:5">#<cpp:directive pos:start="265:2" pos:end="265:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="267:13" pos:end="267:78"><expr pos:start="267:13" pos:end="267:77"><call pos:start="267:13" pos:end="267:77"><name pos:start="267:13" pos:end="267:18">av_log</name><argument_list pos:start="267:19" pos:end="267:77">(<argument pos:start="267:20" pos:end="267:27"><expr pos:start="267:20" pos:end="267:27"><name pos:start="267:20" pos:end="267:27"><name pos:start="267:20" pos:end="267:20">s</name><operator pos:start="267:21" pos:end="267:22">-&gt;</operator><name pos:start="267:23" pos:end="267:27">avctx</name></name></expr></argument>, <argument pos:start="267:30" pos:end="267:41"><expr pos:start="267:30" pos:end="267:41"><name pos:start="267:30" pos:end="267:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="267:44" pos:end="267:76"><expr pos:start="267:44" pos:end="267:76"><literal type="string" pos:start="267:44" pos:end="267:76">"Deflate: ZLib not compiled in\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="269:13" pos:end="272:0">return <expr pos:start="269:20" pos:end="269:21"><operator pos:start="269:20" pos:end="269:20">-</operator><literal type="number" pos:start="269:21" pos:end="269:21">1</literal></expr>;</return>

<cpp:endif pos:start="271:1" pos:end="271:6">#<cpp:directive pos:start="271:2" pos:end="271:6">endif</cpp:directive></cpp:endif>

        <case pos:start="273:9" pos:end="273:23">case <expr pos:start="273:14" pos:end="273:22"><name pos:start="273:14" pos:end="273:22">TIFF_JPEG</name></expr>:</case>

        <case pos:start="275:9" pos:end="275:26">case <expr pos:start="275:14" pos:end="275:25"><name pos:start="275:14" pos:end="275:25">TIFF_NEWJPEG</name></expr>:</case>

            <expr_stmt pos:start="277:13" pos:end="277:82"><expr pos:start="277:13" pos:end="277:81"><call pos:start="277:13" pos:end="277:81"><name pos:start="277:13" pos:end="277:18">av_log</name><argument_list pos:start="277:19" pos:end="277:81">(<argument pos:start="277:20" pos:end="277:27"><expr pos:start="277:20" pos:end="277:27"><name pos:start="277:20" pos:end="277:27"><name pos:start="277:20" pos:end="277:20">s</name><operator pos:start="277:21" pos:end="277:22">-&gt;</operator><name pos:start="277:23" pos:end="277:27">avctx</name></name></expr></argument>, <argument pos:start="277:30" pos:end="277:41"><expr pos:start="277:30" pos:end="277:41"><name pos:start="277:30" pos:end="277:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="277:44" pos:end="277:80"><expr pos:start="277:44" pos:end="277:80"><literal type="string" pos:start="277:44" pos:end="277:80">"JPEG compression is not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="279:13" pos:end="279:22">return <expr pos:start="279:20" pos:end="279:21"><operator pos:start="279:20" pos:end="279:20">-</operator><literal type="number" pos:start="279:21" pos:end="279:21">1</literal></expr>;</return>

        <default pos:start="281:9" pos:end="281:16">default:</default>

            <expr_stmt pos:start="283:13" pos:end="283:88"><expr pos:start="283:13" pos:end="283:87"><call pos:start="283:13" pos:end="283:87"><name pos:start="283:13" pos:end="283:18">av_log</name><argument_list pos:start="283:19" pos:end="283:87">(<argument pos:start="283:20" pos:end="283:27"><expr pos:start="283:20" pos:end="283:27"><name pos:start="283:20" pos:end="283:27"><name pos:start="283:20" pos:end="283:20">s</name><operator pos:start="283:21" pos:end="283:22">-&gt;</operator><name pos:start="283:23" pos:end="283:27">avctx</name></name></expr></argument>, <argument pos:start="283:30" pos:end="283:41"><expr pos:start="283:30" pos:end="283:41"><name pos:start="283:30" pos:end="283:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="283:44" pos:end="283:76"><expr pos:start="283:44" pos:end="283:76"><literal type="string" pos:start="283:44" pos:end="283:76">"Unknown compression method %i\n"</literal></expr></argument>, <argument pos:start="283:79" pos:end="283:86"><expr pos:start="283:79" pos:end="283:86"><name pos:start="283:79" pos:end="283:86"><name pos:start="283:79" pos:end="283:79">s</name><operator pos:start="283:80" pos:end="283:81">-&gt;</operator><name pos:start="283:82" pos:end="283:86">compr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="285:13" pos:end="285:22">return <expr pos:start="285:20" pos:end="285:21"><operator pos:start="285:20" pos:end="285:20">-</operator><literal type="number" pos:start="285:21" pos:end="285:21">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <break pos:start="289:9" pos:end="289:14">break;</break>

    <case pos:start="291:5" pos:end="291:27">case <expr pos:start="291:10" pos:end="291:26"><name pos:start="291:10" pos:end="291:26">TIFF_ROWSPERSTRIP</name></expr>:</case>

        <if_stmt pos:start="293:9" pos:end="295:37"><if pos:start="293:9" pos:end="295:37">if<condition pos:start="293:11" pos:end="293:44">(<expr pos:start="293:12" pos:end="293:43"><name pos:start="293:12" pos:end="293:15">type</name> <operator pos:start="293:17" pos:end="293:18">==</operator> <name pos:start="293:20" pos:end="293:28">TIFF_LONG</name> <operator pos:start="293:30" pos:end="293:31">&amp;&amp;</operator> <name pos:start="293:33" pos:end="293:37">value</name> <operator pos:start="293:39" pos:end="293:40">==</operator> <operator pos:start="293:42" pos:end="293:42">-</operator><literal type="number" pos:start="293:43" pos:end="293:43">1</literal></expr>)</condition><block type="pseudo" pos:start="295:13" pos:end="295:37"><block_content pos:start="295:13" pos:end="295:37">

            <expr_stmt pos:start="295:13" pos:end="295:37"><expr pos:start="295:13" pos:end="295:36"><name pos:start="295:13" pos:end="295:17">value</name> <operator pos:start="295:19" pos:end="295:19">=</operator> <name pos:start="295:21" pos:end="295:36"><name pos:start="295:21" pos:end="295:21">s</name><operator pos:start="295:22" pos:end="295:23">-&gt;</operator><name pos:start="295:24" pos:end="295:28">avctx</name><operator pos:start="295:29" pos:end="295:30">-&gt;</operator><name pos:start="295:31" pos:end="295:36">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="297:9" pos:end="303:9"><if pos:start="297:9" pos:end="303:9">if<condition pos:start="297:11" pos:end="297:21">(<expr pos:start="297:12" pos:end="297:20"><name pos:start="297:12" pos:end="297:16">value</name> <operator pos:start="297:18" pos:end="297:18">&lt;</operator> <literal type="number" pos:start="297:20" pos:end="297:20">1</literal></expr>)</condition><block pos:start="297:22" pos:end="303:9">{<block_content pos:start="299:13" pos:end="301:22">

            <expr_stmt pos:start="299:13" pos:end="299:82"><expr pos:start="299:13" pos:end="299:81"><call pos:start="299:13" pos:end="299:81"><name pos:start="299:13" pos:end="299:18">av_log</name><argument_list pos:start="299:19" pos:end="299:81">(<argument pos:start="299:20" pos:end="299:27"><expr pos:start="299:20" pos:end="299:27"><name pos:start="299:20" pos:end="299:27"><name pos:start="299:20" pos:end="299:20">s</name><operator pos:start="299:21" pos:end="299:22">-&gt;</operator><name pos:start="299:23" pos:end="299:27">avctx</name></name></expr></argument>, <argument pos:start="299:30" pos:end="299:41"><expr pos:start="299:30" pos:end="299:41"><name pos:start="299:30" pos:end="299:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="299:44" pos:end="299:80"><expr pos:start="299:44" pos:end="299:80"><literal type="string" pos:start="299:44" pos:end="299:80">"Incorrect value of rows per strip\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="301:13" pos:end="301:22">return <expr pos:start="301:20" pos:end="301:21"><operator pos:start="301:20" pos:end="301:20">-</operator><literal type="number" pos:start="301:21" pos:end="301:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:23"><expr pos:start="305:9" pos:end="305:22"><name pos:start="305:9" pos:end="305:14"><name pos:start="305:9" pos:end="305:9">s</name><operator pos:start="305:10" pos:end="305:11">-&gt;</operator><name pos:start="305:12" pos:end="305:14">rps</name></name> <operator pos:start="305:16" pos:end="305:16">=</operator> <name pos:start="305:18" pos:end="305:22">value</name></expr>;</expr_stmt>

        <break pos:start="307:9" pos:end="307:14">break;</break>

    <case pos:start="309:5" pos:end="309:25">case <expr pos:start="309:10" pos:end="309:24"><name pos:start="309:10" pos:end="309:24">TIFF_STRIP_OFFS</name></expr>:</case>

        <if_stmt pos:start="311:9" pos:end="319:39"><if pos:start="311:9" pos:end="317:9">if<condition pos:start="311:11" pos:end="311:22">(<expr pos:start="311:12" pos:end="311:21"><name pos:start="311:12" pos:end="311:16">count</name> <operator pos:start="311:18" pos:end="311:19">==</operator> <literal type="number" pos:start="311:21" pos:end="311:21">1</literal></expr>)</condition><block pos:start="311:23" pos:end="317:9">{<block_content pos:start="313:13" pos:end="315:32">

            <expr_stmt pos:start="313:13" pos:end="313:32"><expr pos:start="313:13" pos:end="313:31"><name pos:start="313:13" pos:end="313:24"><name pos:start="313:13" pos:end="313:13">s</name><operator pos:start="313:14" pos:end="313:15">-&gt;</operator><name pos:start="313:16" pos:end="313:24">stripdata</name></name> <operator pos:start="313:26" pos:end="313:26">=</operator> <name pos:start="313:28" pos:end="313:31">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:32"><expr pos:start="315:13" pos:end="315:31"><name pos:start="315:13" pos:end="315:23"><name pos:start="315:13" pos:end="315:13">s</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:23">stripoff</name></name> <operator pos:start="315:25" pos:end="315:25">=</operator> <name pos:start="315:27" pos:end="315:31">value</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="317:10" pos:end="319:39">else<block type="pseudo" pos:start="319:13" pos:end="319:39"><block_content pos:start="319:13" pos:end="319:39">

            <expr_stmt pos:start="319:13" pos:end="319:39"><expr pos:start="319:13" pos:end="319:38"><name pos:start="319:13" pos:end="319:24"><name pos:start="319:13" pos:end="319:13">s</name><operator pos:start="319:14" pos:end="319:15">-&gt;</operator><name pos:start="319:16" pos:end="319:24">stripdata</name></name> <operator pos:start="319:26" pos:end="319:26">=</operator> <name pos:start="319:28" pos:end="319:32">start</name> <operator pos:start="319:34" pos:end="319:34">+</operator> <name pos:start="319:36" pos:end="319:38">off</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:26"><expr pos:start="321:9" pos:end="321:25"><name pos:start="321:9" pos:end="321:17"><name pos:start="321:9" pos:end="321:9">s</name><operator pos:start="321:10" pos:end="321:11">-&gt;</operator><name pos:start="321:12" pos:end="321:17">strips</name></name> <operator pos:start="321:19" pos:end="321:19">=</operator> <name pos:start="321:21" pos:end="321:25">count</name></expr>;</expr_stmt>

        <if_stmt pos:start="323:9" pos:end="323:46"><if pos:start="323:9" pos:end="323:46">if<condition pos:start="323:11" pos:end="323:26">(<expr pos:start="323:12" pos:end="323:25"><name pos:start="323:12" pos:end="323:20"><name pos:start="323:12" pos:end="323:12">s</name><operator pos:start="323:13" pos:end="323:14">-&gt;</operator><name pos:start="323:15" pos:end="323:20">strips</name></name> <operator pos:start="323:22" pos:end="323:23">==</operator> <literal type="number" pos:start="323:25" pos:end="323:25">1</literal></expr>)</condition><block type="pseudo" pos:start="323:28" pos:end="323:46"><block_content pos:start="323:28" pos:end="323:46"> <expr_stmt pos:start="323:28" pos:end="323:46"><expr pos:start="323:28" pos:end="323:45"><name pos:start="323:28" pos:end="323:33"><name pos:start="323:28" pos:end="323:28">s</name><operator pos:start="323:29" pos:end="323:30">-&gt;</operator><name pos:start="323:31" pos:end="323:33">rps</name></name> <operator pos:start="323:35" pos:end="323:35">=</operator> <name pos:start="323:37" pos:end="323:45"><name pos:start="323:37" pos:end="323:37">s</name><operator pos:start="323:38" pos:end="323:39">-&gt;</operator><name pos:start="323:40" pos:end="323:45">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="325:9" pos:end="325:22"><expr pos:start="325:9" pos:end="325:21"><name pos:start="325:9" pos:end="325:14"><name pos:start="325:9" pos:end="325:9">s</name><operator pos:start="325:10" pos:end="325:11">-&gt;</operator><name pos:start="325:12" pos:end="325:14">sot</name></name> <operator pos:start="325:16" pos:end="325:16">=</operator> <name pos:start="325:18" pos:end="325:21">type</name></expr>;</expr_stmt>

        <if_stmt pos:start="327:9" pos:end="333:9"><if pos:start="327:9" pos:end="333:9">if<condition pos:start="327:11" pos:end="327:34">(<expr pos:start="327:12" pos:end="327:33"><name pos:start="327:12" pos:end="327:23"><name pos:start="327:12" pos:end="327:12">s</name><operator pos:start="327:13" pos:end="327:14">-&gt;</operator><name pos:start="327:15" pos:end="327:23">stripdata</name></name> <operator pos:start="327:25" pos:end="327:25">&gt;</operator> <name pos:start="327:27" pos:end="327:33">end_buf</name></expr>)</condition><block pos:start="327:35" pos:end="333:9">{<block_content pos:start="329:13" pos:end="331:22">

            <expr_stmt pos:start="329:13" pos:end="329:91"><expr pos:start="329:13" pos:end="329:90"><call pos:start="329:13" pos:end="329:90"><name pos:start="329:13" pos:end="329:18">av_log</name><argument_list pos:start="329:19" pos:end="329:90">(<argument pos:start="329:20" pos:end="329:27"><expr pos:start="329:20" pos:end="329:27"><name pos:start="329:20" pos:end="329:27"><name pos:start="329:20" pos:end="329:20">s</name><operator pos:start="329:21" pos:end="329:22">-&gt;</operator><name pos:start="329:23" pos:end="329:27">avctx</name></name></expr></argument>, <argument pos:start="329:30" pos:end="329:41"><expr pos:start="329:30" pos:end="329:41"><name pos:start="329:30" pos:end="329:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="329:44" pos:end="329:89"><expr pos:start="329:44" pos:end="329:89"><literal type="string" pos:start="329:44" pos:end="329:89">"Tag referencing position outside the image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="331:13" pos:end="331:22">return <expr pos:start="331:20" pos:end="331:21"><operator pos:start="331:20" pos:end="331:20">-</operator><literal type="number" pos:start="331:21" pos:end="331:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="335:9" pos:end="335:14">break;</break>

    <case pos:start="337:5" pos:end="337:25">case <expr pos:start="337:10" pos:end="337:24"><name pos:start="337:10" pos:end="337:24">TIFF_STRIP_SIZE</name></expr>:</case>

        <if_stmt pos:start="339:9" pos:end="351:9"><if pos:start="339:9" pos:end="347:9">if<condition pos:start="339:11" pos:end="339:22">(<expr pos:start="339:12" pos:end="339:21"><name pos:start="339:12" pos:end="339:16">count</name> <operator pos:start="339:18" pos:end="339:19">==</operator> <literal type="number" pos:start="339:21" pos:end="339:21">1</literal></expr>)</condition><block pos:start="339:23" pos:end="347:9">{<block_content pos:start="341:13" pos:end="345:26">

            <expr_stmt pos:start="341:13" pos:end="341:33"><expr pos:start="341:13" pos:end="341:32"><name pos:start="341:13" pos:end="341:25"><name pos:start="341:13" pos:end="341:13">s</name><operator pos:start="341:14" pos:end="341:15">-&gt;</operator><name pos:start="341:16" pos:end="341:25">stripsizes</name></name> <operator pos:start="341:27" pos:end="341:27">=</operator> <name pos:start="341:29" pos:end="341:32">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="343:33"><expr pos:start="343:13" pos:end="343:32"><name pos:start="343:13" pos:end="343:24"><name pos:start="343:13" pos:end="343:13">s</name><operator pos:start="343:14" pos:end="343:15">-&gt;</operator><name pos:start="343:16" pos:end="343:24">stripsize</name></name> <operator pos:start="343:26" pos:end="343:26">=</operator> <name pos:start="343:28" pos:end="343:32">value</name></expr>;</expr_stmt>

            <expr_stmt pos:start="345:13" pos:end="345:26"><expr pos:start="345:13" pos:end="345:25"><name pos:start="345:13" pos:end="345:21"><name pos:start="345:13" pos:end="345:13">s</name><operator pos:start="345:14" pos:end="345:15">-&gt;</operator><name pos:start="345:16" pos:end="345:21">strips</name></name> <operator pos:start="345:23" pos:end="345:23">=</operator> <literal type="number" pos:start="345:25" pos:end="345:25">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="347:10" pos:end="351:9">else<block pos:start="347:14" pos:end="351:9">{<block_content pos:start="349:13" pos:end="349:40">

            <expr_stmt pos:start="349:13" pos:end="349:40"><expr pos:start="349:13" pos:end="349:39"><name pos:start="349:13" pos:end="349:25"><name pos:start="349:13" pos:end="349:13">s</name><operator pos:start="349:14" pos:end="349:15">-&gt;</operator><name pos:start="349:16" pos:end="349:25">stripsizes</name></name> <operator pos:start="349:27" pos:end="349:27">=</operator> <name pos:start="349:29" pos:end="349:33">start</name> <operator pos:start="349:35" pos:end="349:35">+</operator> <name pos:start="349:37" pos:end="349:39">off</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="353:9" pos:end="353:26"><expr pos:start="353:9" pos:end="353:25"><name pos:start="353:9" pos:end="353:17"><name pos:start="353:9" pos:end="353:9">s</name><operator pos:start="353:10" pos:end="353:11">-&gt;</operator><name pos:start="353:12" pos:end="353:17">strips</name></name> <operator pos:start="353:19" pos:end="353:19">=</operator> <name pos:start="353:21" pos:end="353:25">count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="355:9" pos:end="355:25"><expr pos:start="355:9" pos:end="355:24"><name pos:start="355:9" pos:end="355:17"><name pos:start="355:9" pos:end="355:9">s</name><operator pos:start="355:10" pos:end="355:11">-&gt;</operator><name pos:start="355:12" pos:end="355:17">sstype</name></name> <operator pos:start="355:19" pos:end="355:19">=</operator> <name pos:start="355:21" pos:end="355:24">type</name></expr>;</expr_stmt>

        <if_stmt pos:start="357:9" pos:end="363:9"><if pos:start="357:9" pos:end="363:9">if<condition pos:start="357:11" pos:end="357:35">(<expr pos:start="357:12" pos:end="357:34"><name pos:start="357:12" pos:end="357:24"><name pos:start="357:12" pos:end="357:12">s</name><operator pos:start="357:13" pos:end="357:14">-&gt;</operator><name pos:start="357:15" pos:end="357:24">stripsizes</name></name> <operator pos:start="357:26" pos:end="357:26">&gt;</operator> <name pos:start="357:28" pos:end="357:34">end_buf</name></expr>)</condition><block pos:start="357:36" pos:end="363:9">{<block_content pos:start="359:13" pos:end="361:22">

            <expr_stmt pos:start="359:13" pos:end="359:91"><expr pos:start="359:13" pos:end="359:90"><call pos:start="359:13" pos:end="359:90"><name pos:start="359:13" pos:end="359:18">av_log</name><argument_list pos:start="359:19" pos:end="359:90">(<argument pos:start="359:20" pos:end="359:27"><expr pos:start="359:20" pos:end="359:27"><name pos:start="359:20" pos:end="359:27"><name pos:start="359:20" pos:end="359:20">s</name><operator pos:start="359:21" pos:end="359:22">-&gt;</operator><name pos:start="359:23" pos:end="359:27">avctx</name></name></expr></argument>, <argument pos:start="359:30" pos:end="359:41"><expr pos:start="359:30" pos:end="359:41"><name pos:start="359:30" pos:end="359:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="359:44" pos:end="359:89"><expr pos:start="359:44" pos:end="359:89"><literal type="string" pos:start="359:44" pos:end="359:89">"Tag referencing position outside the image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="361:13" pos:end="361:22">return <expr pos:start="361:20" pos:end="361:21"><operator pos:start="361:20" pos:end="361:20">-</operator><literal type="number" pos:start="361:21" pos:end="361:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="365:9" pos:end="365:14">break;</break>

    <case pos:start="367:5" pos:end="367:24">case <expr pos:start="367:10" pos:end="367:23"><name pos:start="367:10" pos:end="367:23">TIFF_PREDICTOR</name></expr>:</case>

        <expr_stmt pos:start="369:9" pos:end="369:29"><expr pos:start="369:9" pos:end="369:28"><name pos:start="369:9" pos:end="369:20"><name pos:start="369:9" pos:end="369:9">s</name><operator pos:start="369:10" pos:end="369:11">-&gt;</operator><name pos:start="369:12" pos:end="369:20">predictor</name></name> <operator pos:start="369:22" pos:end="369:22">=</operator> <name pos:start="369:24" pos:end="369:28">value</name></expr>;</expr_stmt>

        <break pos:start="371:9" pos:end="371:14">break;</break>

    <case pos:start="373:5" pos:end="373:21">case <expr pos:start="373:10" pos:end="373:20"><name pos:start="373:10" pos:end="373:20">TIFF_INVERT</name></expr>:</case>

        <switch pos:start="375:9" pos:end="401:9">switch<condition pos:start="375:15" pos:end="375:21">(<expr pos:start="375:16" pos:end="375:20"><name pos:start="375:16" pos:end="375:20">value</name></expr>)</condition><block pos:start="375:22" pos:end="401:9">{<block_content pos:start="377:9" pos:end="399:22">

        <case pos:start="377:9" pos:end="377:15">case <expr pos:start="377:14" pos:end="377:14"><literal type="number" pos:start="377:14" pos:end="377:14">0</literal></expr>:</case>

            <expr_stmt pos:start="379:13" pos:end="379:26"><expr pos:start="379:13" pos:end="379:25"><name pos:start="379:13" pos:end="379:21"><name pos:start="379:13" pos:end="379:13">s</name><operator pos:start="379:14" pos:end="379:15">-&gt;</operator><name pos:start="379:16" pos:end="379:21">invert</name></name> <operator pos:start="379:23" pos:end="379:23">=</operator> <literal type="number" pos:start="379:25" pos:end="379:25">1</literal></expr>;</expr_stmt>

            <break pos:start="381:13" pos:end="381:18">break;</break>

        <case pos:start="383:9" pos:end="383:15">case <expr pos:start="383:14" pos:end="383:14"><literal type="number" pos:start="383:14" pos:end="383:14">1</literal></expr>:</case>

            <expr_stmt pos:start="385:13" pos:end="385:26"><expr pos:start="385:13" pos:end="385:25"><name pos:start="385:13" pos:end="385:21"><name pos:start="385:13" pos:end="385:13">s</name><operator pos:start="385:14" pos:end="385:15">-&gt;</operator><name pos:start="385:16" pos:end="385:21">invert</name></name> <operator pos:start="385:23" pos:end="385:23">=</operator> <literal type="number" pos:start="385:25" pos:end="385:25">0</literal></expr>;</expr_stmt>

            <break pos:start="387:13" pos:end="387:18">break;</break>

        <case pos:start="389:9" pos:end="389:15">case <expr pos:start="389:14" pos:end="389:14"><literal type="number" pos:start="389:14" pos:end="389:14">2</literal></expr>:</case>

        <case pos:start="391:9" pos:end="391:15">case <expr pos:start="391:14" pos:end="391:14"><literal type="number" pos:start="391:14" pos:end="391:14">3</literal></expr>:</case>

            <break pos:start="393:13" pos:end="393:18">break;</break>

        <default pos:start="395:9" pos:end="395:16">default:</default>

            <expr_stmt pos:start="397:13" pos:end="397:86"><expr pos:start="397:13" pos:end="397:85"><call pos:start="397:13" pos:end="397:85"><name pos:start="397:13" pos:end="397:18">av_log</name><argument_list pos:start="397:19" pos:end="397:85">(<argument pos:start="397:20" pos:end="397:27"><expr pos:start="397:20" pos:end="397:27"><name pos:start="397:20" pos:end="397:27"><name pos:start="397:20" pos:end="397:20">s</name><operator pos:start="397:21" pos:end="397:22">-&gt;</operator><name pos:start="397:23" pos:end="397:27">avctx</name></name></expr></argument>, <argument pos:start="397:30" pos:end="397:41"><expr pos:start="397:30" pos:end="397:41"><name pos:start="397:30" pos:end="397:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="397:44" pos:end="397:77"><expr pos:start="397:44" pos:end="397:77"><literal type="string" pos:start="397:44" pos:end="397:77">"Color mode %d is not supported\n"</literal></expr></argument>, <argument pos:start="397:80" pos:end="397:84"><expr pos:start="397:80" pos:end="397:84"><name pos:start="397:80" pos:end="397:84">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="399:13" pos:end="399:22">return <expr pos:start="399:20" pos:end="399:21"><operator pos:start="399:20" pos:end="399:20">-</operator><literal type="number" pos:start="399:21" pos:end="399:21">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <break pos:start="403:9" pos:end="403:14">break;</break>

    <case pos:start="405:5" pos:end="405:18">case <expr pos:start="405:10" pos:end="405:17"><name pos:start="405:10" pos:end="405:17">TIFF_PAL</name></expr>:</case>

        <if_stmt pos:start="407:9" pos:end="413:9"><if pos:start="407:9" pos:end="413:9">if<condition pos:start="407:11" pos:end="407:45">(<expr pos:start="407:12" pos:end="407:44"><name pos:start="407:12" pos:end="407:28"><name pos:start="407:12" pos:end="407:12">s</name><operator pos:start="407:13" pos:end="407:14">-&gt;</operator><name pos:start="407:15" pos:end="407:19">avctx</name><operator pos:start="407:20" pos:end="407:21">-&gt;</operator><name pos:start="407:22" pos:end="407:28">pix_fmt</name></name> <operator pos:start="407:30" pos:end="407:31">!=</operator> <name pos:start="407:33" pos:end="407:44">PIX_FMT_PAL8</name></expr>)</condition><block pos:start="407:46" pos:end="413:9">{<block_content pos:start="409:13" pos:end="411:22">

            <expr_stmt pos:start="409:13" pos:end="409:94"><expr pos:start="409:13" pos:end="409:93"><call pos:start="409:13" pos:end="409:93"><name pos:start="409:13" pos:end="409:18">av_log</name><argument_list pos:start="409:19" pos:end="409:93">(<argument pos:start="409:20" pos:end="409:27"><expr pos:start="409:20" pos:end="409:27"><name pos:start="409:20" pos:end="409:27"><name pos:start="409:20" pos:end="409:20">s</name><operator pos:start="409:21" pos:end="409:22">-&gt;</operator><name pos:start="409:23" pos:end="409:27">avctx</name></name></expr></argument>, <argument pos:start="409:30" pos:end="409:41"><expr pos:start="409:30" pos:end="409:41"><name pos:start="409:30" pos:end="409:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="409:44" pos:end="409:92"><expr pos:start="409:44" pos:end="409:92"><literal type="string" pos:start="409:44" pos:end="409:92">"Palette met but this is not palettized format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="411:13" pos:end="411:22">return <expr pos:start="411:20" pos:end="411:21"><operator pos:start="411:20" pos:end="411:20">-</operator><literal type="number" pos:start="411:21" pos:end="411:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="415:9" pos:end="415:46"><expr pos:start="415:9" pos:end="415:45"><name pos:start="415:9" pos:end="415:11">pal</name> <operator pos:start="415:13" pos:end="415:13">=</operator> <operator pos:start="415:15" pos:end="415:15">(</operator><name pos:start="415:16" pos:end="415:23">uint32_t</name> <operator pos:start="415:25" pos:end="415:25">*</operator><operator pos:start="415:26" pos:end="415:26">)</operator> <name pos:start="415:28" pos:end="415:45"><name pos:start="415:28" pos:end="415:28">s</name><operator pos:start="415:29" pos:end="415:30">-&gt;</operator><name pos:start="415:31" pos:end="415:37">picture</name><operator pos:start="415:38" pos:end="415:38">.</operator><name pos:start="415:39" pos:end="415:42">data</name><index pos:start="415:43" pos:end="415:45">[<expr pos:start="415:44" pos:end="415:44"><literal type="number" pos:start="415:44" pos:end="415:44">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="417:9" pos:end="417:31"><expr pos:start="417:9" pos:end="417:30"><name pos:start="417:9" pos:end="417:11">off</name> <operator pos:start="417:13" pos:end="417:13">=</operator> <name pos:start="417:15" pos:end="417:30"><name pos:start="417:15" pos:end="417:24">type_sizes</name><index pos:start="417:25" pos:end="417:30">[<expr pos:start="417:26" pos:end="417:29"><name pos:start="417:26" pos:end="417:29">type</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="419:9" pos:end="419:17"><expr pos:start="419:9" pos:end="419:16"><name pos:start="419:9" pos:end="419:10">rp</name> <operator pos:start="419:12" pos:end="419:12">=</operator> <name pos:start="419:14" pos:end="419:16">buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="421:9" pos:end="421:35"><expr pos:start="421:9" pos:end="421:34"><name pos:start="421:9" pos:end="421:10">gp</name> <operator pos:start="421:12" pos:end="421:12">=</operator> <name pos:start="421:14" pos:end="421:16">buf</name> <operator pos:start="421:18" pos:end="421:18">+</operator> <name pos:start="421:20" pos:end="421:24">count</name> <operator pos:start="421:26" pos:end="421:26">/</operator> <literal type="number" pos:start="421:28" pos:end="421:28">3</literal> <operator pos:start="421:30" pos:end="421:30">*</operator> <name pos:start="421:32" pos:end="421:34">off</name></expr>;</expr_stmt>

        <expr_stmt pos:start="423:9" pos:end="423:39"><expr pos:start="423:9" pos:end="423:38"><name pos:start="423:9" pos:end="423:10">bp</name> <operator pos:start="423:12" pos:end="423:12">=</operator> <name pos:start="423:14" pos:end="423:16">buf</name> <operator pos:start="423:18" pos:end="423:18">+</operator> <name pos:start="423:20" pos:end="423:24">count</name> <operator pos:start="423:26" pos:end="423:26">/</operator> <literal type="number" pos:start="423:28" pos:end="423:28">3</literal> <operator pos:start="423:30" pos:end="423:30">*</operator> <name pos:start="423:32" pos:end="423:34">off</name> <operator pos:start="423:36" pos:end="423:36">*</operator> <literal type="number" pos:start="423:38" pos:end="423:38">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="425:9" pos:end="425:42"><expr pos:start="425:9" pos:end="425:41"><name pos:start="425:9" pos:end="425:11">off</name> <operator pos:start="425:13" pos:end="425:13">=</operator> <operator pos:start="425:15" pos:end="425:15">(</operator><name pos:start="425:16" pos:end="425:31"><name pos:start="425:16" pos:end="425:25">type_sizes</name><index pos:start="425:26" pos:end="425:31">[<expr pos:start="425:27" pos:end="425:30"><name pos:start="425:27" pos:end="425:30">type</name></expr>]</index></name> <operator pos:start="425:33" pos:end="425:33">-</operator> <literal type="number" pos:start="425:35" pos:end="425:35">1</literal><operator pos:start="425:36" pos:end="425:36">)</operator> <operator pos:start="425:38" pos:end="425:39">&lt;&lt;</operator> <literal type="number" pos:start="425:41" pos:end="425:41">3</literal></expr>;</expr_stmt>

        <for pos:start="427:9" pos:end="437:9">for<control pos:start="427:12" pos:end="427:38">(<init pos:start="427:13" pos:end="427:18"><expr pos:start="427:13" pos:end="427:17"><name pos:start="427:13" pos:end="427:13">i</name> <operator pos:start="427:15" pos:end="427:15">=</operator> <literal type="number" pos:start="427:17" pos:end="427:17">0</literal></expr>;</init> <condition pos:start="427:20" pos:end="427:33"><expr pos:start="427:20" pos:end="427:32"><name pos:start="427:20" pos:end="427:20">i</name> <operator pos:start="427:22" pos:end="427:22">&lt;</operator> <name pos:start="427:24" pos:end="427:28">count</name> <operator pos:start="427:30" pos:end="427:30">/</operator> <literal type="number" pos:start="427:32" pos:end="427:32">3</literal></expr>;</condition> <incr pos:start="427:35" pos:end="427:37"><expr pos:start="427:35" pos:end="427:37"><name pos:start="427:35" pos:end="427:35">i</name><operator pos:start="427:36" pos:end="427:37">++</operator></expr></incr>)</control><block pos:start="427:39" pos:end="437:9">{<block_content pos:start="429:13" pos:end="435:23">

            <expr_stmt pos:start="429:13" pos:end="429:54"><expr pos:start="429:13" pos:end="429:53"><name pos:start="429:13" pos:end="429:13">j</name> <operator pos:start="429:15" pos:end="429:15">=</operator> <operator pos:start="429:17" pos:end="429:17">(</operator><call pos:start="429:18" pos:end="429:39"><name pos:start="429:18" pos:end="429:21">tget</name><argument_list pos:start="429:22" pos:end="429:39">(<argument pos:start="429:23" pos:end="429:25"><expr pos:start="429:23" pos:end="429:25"><operator pos:start="429:23" pos:end="429:23">&amp;</operator><name pos:start="429:24" pos:end="429:25">rp</name></expr></argument>, <argument pos:start="429:28" pos:end="429:31"><expr pos:start="429:28" pos:end="429:31"><name pos:start="429:28" pos:end="429:31">type</name></expr></argument>, <argument pos:start="429:34" pos:end="429:38"><expr pos:start="429:34" pos:end="429:38"><name pos:start="429:34" pos:end="429:38"><name pos:start="429:34" pos:end="429:34">s</name><operator pos:start="429:35" pos:end="429:36">-&gt;</operator><name pos:start="429:37" pos:end="429:38">le</name></name></expr></argument>)</argument_list></call> <operator pos:start="429:41" pos:end="429:42">&gt;&gt;</operator> <name pos:start="429:44" pos:end="429:46">off</name><operator pos:start="429:47" pos:end="429:47">)</operator> <operator pos:start="429:49" pos:end="429:50">&lt;&lt;</operator> <literal type="number" pos:start="429:52" pos:end="429:53">16</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="431:13" pos:end="431:54"><expr pos:start="431:13" pos:end="431:53"><name pos:start="431:13" pos:end="431:13">j</name> <operator pos:start="431:15" pos:end="431:16">|=</operator> <operator pos:start="431:18" pos:end="431:18">(</operator><call pos:start="431:19" pos:end="431:40"><name pos:start="431:19" pos:end="431:22">tget</name><argument_list pos:start="431:23" pos:end="431:40">(<argument pos:start="431:24" pos:end="431:26"><expr pos:start="431:24" pos:end="431:26"><operator pos:start="431:24" pos:end="431:24">&amp;</operator><name pos:start="431:25" pos:end="431:26">gp</name></expr></argument>, <argument pos:start="431:29" pos:end="431:32"><expr pos:start="431:29" pos:end="431:32"><name pos:start="431:29" pos:end="431:32">type</name></expr></argument>, <argument pos:start="431:35" pos:end="431:39"><expr pos:start="431:35" pos:end="431:39"><name pos:start="431:35" pos:end="431:39"><name pos:start="431:35" pos:end="431:35">s</name><operator pos:start="431:36" pos:end="431:37">-&gt;</operator><name pos:start="431:38" pos:end="431:39">le</name></name></expr></argument>)</argument_list></call> <operator pos:start="431:42" pos:end="431:43">&gt;&gt;</operator> <name pos:start="431:45" pos:end="431:47">off</name><operator pos:start="431:48" pos:end="431:48">)</operator> <operator pos:start="431:50" pos:end="431:51">&lt;&lt;</operator> <literal type="number" pos:start="431:53" pos:end="431:53">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="433:13" pos:end="433:47"><expr pos:start="433:13" pos:end="433:46"><name pos:start="433:13" pos:end="433:13">j</name> <operator pos:start="433:15" pos:end="433:16">|=</operator> <call pos:start="433:18" pos:end="433:39"><name pos:start="433:18" pos:end="433:21">tget</name><argument_list pos:start="433:22" pos:end="433:39">(<argument pos:start="433:23" pos:end="433:25"><expr pos:start="433:23" pos:end="433:25"><operator pos:start="433:23" pos:end="433:23">&amp;</operator><name pos:start="433:24" pos:end="433:25">bp</name></expr></argument>, <argument pos:start="433:28" pos:end="433:31"><expr pos:start="433:28" pos:end="433:31"><name pos:start="433:28" pos:end="433:31">type</name></expr></argument>, <argument pos:start="433:34" pos:end="433:38"><expr pos:start="433:34" pos:end="433:38"><name pos:start="433:34" pos:end="433:38"><name pos:start="433:34" pos:end="433:34">s</name><operator pos:start="433:35" pos:end="433:36">-&gt;</operator><name pos:start="433:37" pos:end="433:38">le</name></name></expr></argument>)</argument_list></call> <operator pos:start="433:41" pos:end="433:42">&gt;&gt;</operator> <name pos:start="433:44" pos:end="433:46">off</name></expr>;</expr_stmt>

            <expr_stmt pos:start="435:13" pos:end="435:23"><expr pos:start="435:13" pos:end="435:22"><name pos:start="435:13" pos:end="435:18"><name pos:start="435:13" pos:end="435:15">pal</name><index pos:start="435:16" pos:end="435:18">[<expr pos:start="435:17" pos:end="435:17"><name pos:start="435:17" pos:end="435:17">i</name></expr>]</index></name> <operator pos:start="435:20" pos:end="435:20">=</operator> <name pos:start="435:22" pos:end="435:22">j</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="439:9" pos:end="439:14">break;</break>

    <case pos:start="441:5" pos:end="441:21">case <expr pos:start="441:10" pos:end="441:20"><name pos:start="441:10" pos:end="441:20">TIFF_PLANAR</name></expr>:</case>

        <if_stmt pos:start="443:9" pos:end="449:9"><if pos:start="443:9" pos:end="449:9">if<condition pos:start="443:11" pos:end="443:22">(<expr pos:start="443:12" pos:end="443:21"><name pos:start="443:12" pos:end="443:16">value</name> <operator pos:start="443:18" pos:end="443:19">==</operator> <literal type="number" pos:start="443:21" pos:end="443:21">2</literal></expr>)</condition><block pos:start="443:23" pos:end="449:9">{<block_content pos:start="445:13" pos:end="447:22">

            <expr_stmt pos:start="445:13" pos:end="445:79"><expr pos:start="445:13" pos:end="445:78"><call pos:start="445:13" pos:end="445:78"><name pos:start="445:13" pos:end="445:18">av_log</name><argument_list pos:start="445:19" pos:end="445:78">(<argument pos:start="445:20" pos:end="445:27"><expr pos:start="445:20" pos:end="445:27"><name pos:start="445:20" pos:end="445:27"><name pos:start="445:20" pos:end="445:20">s</name><operator pos:start="445:21" pos:end="445:22">-&gt;</operator><name pos:start="445:23" pos:end="445:27">avctx</name></name></expr></argument>, <argument pos:start="445:30" pos:end="445:41"><expr pos:start="445:30" pos:end="445:41"><name pos:start="445:30" pos:end="445:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="445:44" pos:end="445:77"><expr pos:start="445:44" pos:end="445:77"><literal type="string" pos:start="445:44" pos:end="445:77">"Planar format is not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="447:13" pos:end="447:22">return <expr pos:start="447:20" pos:end="447:21"><operator pos:start="447:20" pos:end="447:20">-</operator><literal type="number" pos:start="447:21" pos:end="447:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="451:9" pos:end="451:14">break;</break>

    <case pos:start="453:5" pos:end="453:24">case <expr pos:start="453:10" pos:end="453:23"><name pos:start="453:10" pos:end="453:23">TIFF_T4OPTIONS</name></expr>:</case>

    <case pos:start="455:5" pos:end="455:24">case <expr pos:start="455:10" pos:end="455:23"><name pos:start="455:10" pos:end="455:23">TIFF_T6OPTIONS</name></expr>:</case>

        <expr_stmt pos:start="457:9" pos:end="457:28"><expr pos:start="457:9" pos:end="457:27"><name pos:start="457:9" pos:end="457:19"><name pos:start="457:9" pos:end="457:9">s</name><operator pos:start="457:10" pos:end="457:11">-&gt;</operator><name pos:start="457:12" pos:end="457:19">fax_opts</name></name> <operator pos:start="457:21" pos:end="457:21">=</operator> <name pos:start="457:23" pos:end="457:27">value</name></expr>;</expr_stmt>

        <break pos:start="459:9" pos:end="459:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="463:5" pos:end="463:13">return <expr pos:start="463:12" pos:end="463:12"><literal type="number" pos:start="463:12" pos:end="463:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
