<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5805.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:60"><name pos:start="1:1" pos:end="1:14">opts_next_list</name><argument_list pos:start="1:15" pos:end="1:60">(<argument pos:start="1:16" pos:end="1:25">Visitor *v</argument>, <argument pos:start="1:28" pos:end="1:45">GenericList **list</argument>, <argument pos:start="1:48" pos:end="1:59">Error **errp</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:17">

    <decl_stmt pos:start="5:5" pos:end="5:57"><decl pos:start="5:5" pos:end="5:56"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">OptsVisitor</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">ov</name> <init pos:start="5:21" pos:end="5:56">= <expr pos:start="5:23" pos:end="5:56"><call pos:start="5:23" pos:end="5:56"><name pos:start="5:23" pos:end="5:31">DO_UPCAST</name><argument_list pos:start="5:32" pos:end="5:56">(<argument pos:start="5:33" pos:end="5:43"><expr pos:start="5:33" pos:end="5:43"><name pos:start="5:33" pos:end="5:43">OptsVisitor</name></expr></argument>, <argument pos:start="5:46" pos:end="5:52"><expr pos:start="5:46" pos:end="5:52"><name pos:start="5:46" pos:end="5:52">visitor</name></expr></argument>, <argument pos:start="5:55" pos:end="5:55"><expr pos:start="5:55" pos:end="5:55"><name pos:start="5:55" pos:end="5:55">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:15">GenericList</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier><modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">link</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="35:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:32">(<expr pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:10">ov</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:31">repeated_opts_first</name></name></expr>)</condition> <block pos:start="11:34" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:20">

        <expr_stmt pos:start="13:9" pos:end="13:40"><expr pos:start="13:9" pos:end="13:39"><name pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:10">ov</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:31">repeated_opts_first</name></name> <operator pos:start="13:33" pos:end="13:33">=</operator> <name pos:start="13:35" pos:end="13:39">false</name></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:20"><expr pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:12">link</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:19">list</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="35:5">else <block pos:start="17:12" pos:end="35:5">{<block_content pos:start="19:9" pos:end="33:30">

        <decl_stmt pos:start="19:9" pos:end="19:27"><decl pos:start="19:9" pos:end="19:26"><type pos:start="19:9" pos:end="19:23"><specifier pos:start="19:9" pos:end="19:13">const</specifier> <name pos:start="19:15" pos:end="19:21">QemuOpt</name> <modifier pos:start="19:23" pos:end="19:23">*</modifier></type><name pos:start="19:24" pos:end="19:26">opt</name></decl>;</decl_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:50"><expr pos:start="23:9" pos:end="23:49"><name pos:start="23:9" pos:end="23:11">opt</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:49"><name pos:start="23:15" pos:end="23:30">g_queue_pop_head</name><argument_list pos:start="23:31" pos:end="23:49">(<argument pos:start="23:32" pos:end="23:48"><expr pos:start="23:32" pos:end="23:48"><name pos:start="23:32" pos:end="23:48"><name pos:start="23:32" pos:end="23:33">ov</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:48">repeated_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:48">(<expr pos:start="25:13" pos:end="25:47"><call pos:start="25:13" pos:end="25:47"><name pos:start="25:13" pos:end="25:28">g_queue_is_empty</name><argument_list pos:start="25:29" pos:end="25:47">(<argument pos:start="25:30" pos:end="25:46"><expr pos:start="25:30" pos:end="25:46"><name pos:start="25:30" pos:end="25:46"><name pos:start="25:30" pos:end="25:31">ov</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:46">repeated_opts</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:50" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:24">

            <expr_stmt pos:start="27:13" pos:end="27:65"><expr pos:start="27:13" pos:end="27:64"><call pos:start="27:13" pos:end="27:64"><name pos:start="27:13" pos:end="27:31">g_hash_table_remove</name><argument_list pos:start="27:32" pos:end="27:64">(<argument pos:start="27:33" pos:end="27:52"><expr pos:start="27:33" pos:end="27:52"><name pos:start="27:33" pos:end="27:52"><name pos:start="27:33" pos:end="27:34">ov</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:52">unprocessed_opts</name></name></expr></argument>, <argument pos:start="27:55" pos:end="27:63"><expr pos:start="27:55" pos:end="27:63"><name pos:start="27:55" pos:end="27:63"><name pos:start="27:55" pos:end="27:57">opt</name><operator pos:start="27:58" pos:end="27:59">-&gt;</operator><name pos:start="27:60" pos:end="27:63">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:24">return <expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:12">link</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <operator pos:start="33:16" pos:end="33:16">&amp;</operator><name pos:start="33:17" pos:end="33:29"><operator pos:start="33:17" pos:end="33:17">(</operator><operator pos:start="33:18" pos:end="33:18">*</operator><name pos:start="33:19" pos:end="33:22">list</name><operator pos:start="33:23" pos:end="33:23">)</operator><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:29">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:37"><expr pos:start="39:5" pos:end="39:36"><operator pos:start="39:5" pos:end="39:5">*</operator><name pos:start="39:6" pos:end="39:9">link</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <call pos:start="39:13" pos:end="39:36"><name pos:start="39:13" pos:end="39:21">g_malloc0</name><argument_list pos:start="39:22" pos:end="39:36">(<argument pos:start="39:23" pos:end="39:35"><expr pos:start="39:23" pos:end="39:35"><sizeof pos:start="39:23" pos:end="39:28">sizeof <name/></sizeof>*<operator pos:start="39:31" pos:end="39:31">*</operator><name pos:start="39:32" pos:end="39:35">link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="41:5" pos:end="41:17">return <expr pos:start="41:12" pos:end="41:16"><operator pos:start="41:12" pos:end="41:12">*</operator><name pos:start="41:13" pos:end="41:16">link</name></expr>;</return>

</block_content>}</block>
</unit>
