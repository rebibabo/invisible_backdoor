<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3298.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:25"><name pos:start="1:1" pos:end="1:10">START_TEST</name><argument_list pos:start="1:11" pos:end="1:25">(<argument pos:start="1:12" pos:end="1:24">vararg_string</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <struct pos:start="7:5" pos:end="19:6">struct <block pos:start="7:12" pos:end="11:5">{

        <decl_stmt pos:start="9:9" pos:end="9:28"><decl pos:start="9:9" pos:end="9:27"><type pos:start="9:9" pos:end="9:20"><specifier pos:start="9:9" pos:end="9:13">const</specifier> <name pos:start="9:15" pos:end="9:18">char</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">decoded</name></decl>;</decl_stmt>

    }</block> <decl pos:start="11:7" pos:end="19:5"><name pos:start="11:7" pos:end="11:18"><name pos:start="11:7" pos:end="11:16">test_cases</name><index pos:start="11:17" pos:end="11:18">[]</index></name> <init pos:start="11:20" pos:end="19:5">= <expr pos:start="11:22" pos:end="19:5"><block pos:start="11:22" pos:end="19:5">{

        <expr pos:start="13:9" pos:end="13:25"><block pos:start="13:9" pos:end="13:25">{ <expr pos:start="13:11" pos:end="13:23"><literal type="string" pos:start="13:11" pos:end="13:23">"hello world"</literal></expr> }</block></expr>,

        <expr pos:start="15:9" pos:end="15:55"><block pos:start="15:9" pos:end="15:55">{ <expr pos:start="15:11" pos:end="15:53"><literal type="string" pos:start="15:11" pos:end="15:53">"the quick brown fox jumped over the fence"</literal></expr> }</block></expr>,

        <expr pos:start="17:9" pos:end="17:10"><block pos:start="17:9" pos:end="17:10">{}</block></expr>

    }</block></expr></init></decl>;</struct>



    <for pos:start="23:5" pos:end="49:5">for <control pos:start="23:9" pos:end="23:43">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:38"><expr pos:start="23:17" pos:end="23:37"><name pos:start="23:17" pos:end="23:29"><name pos:start="23:17" pos:end="23:26">test_cases</name><index pos:start="23:27" pos:end="23:29">[<expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">i</name></expr>]</index></name><operator pos:start="23:30" pos:end="23:30">.</operator><name pos:start="23:31" pos:end="23:37">decoded</name></expr>;</condition> <incr pos:start="23:40" pos:end="23:42"><expr pos:start="23:40" pos:end="23:42"><name pos:start="23:40" pos:end="23:40">i</name><operator pos:start="23:41" pos:end="23:42">++</operator></expr></incr>)</control> <block pos:start="23:45" pos:end="49:5">{<block_content pos:start="25:9" pos:end="47:21">

        <decl_stmt pos:start="25:9" pos:end="25:21"><decl pos:start="25:9" pos:end="25:20"><type pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:15">QObject</name> <modifier pos:start="25:17" pos:end="25:17">*</modifier></type><name pos:start="25:18" pos:end="25:20">obj</name></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:21"><decl pos:start="27:9" pos:end="27:20"><type pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:15">QString</name> <modifier pos:start="27:17" pos:end="27:17">*</modifier></type><name pos:start="27:18" pos:end="27:20">str</name></decl>;</decl_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:62"><expr pos:start="31:9" pos:end="31:61"><name pos:start="31:9" pos:end="31:11">obj</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:61"><name pos:start="31:15" pos:end="31:32">qobject_from_jsonf</name><argument_list pos:start="31:33" pos:end="31:61">(<argument pos:start="31:34" pos:end="31:37"><expr pos:start="31:34" pos:end="31:37"><literal type="string" pos:start="31:34" pos:end="31:37">"%s"</literal></expr></argument>, <argument pos:start="31:40" pos:end="31:60"><expr pos:start="31:40" pos:end="31:60"><name pos:start="31:40" pos:end="31:52"><name pos:start="31:40" pos:end="31:49">test_cases</name><index pos:start="31:50" pos:end="31:52">[<expr pos:start="31:51" pos:end="31:51"><name pos:start="31:51" pos:end="31:51">i</name></expr>]</index></name><operator pos:start="31:53" pos:end="31:53">.</operator><name pos:start="31:54" pos:end="31:60">decoded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><call pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:19">fail_unless</name><argument_list pos:start="35:20" pos:end="35:32">(<argument pos:start="35:21" pos:end="35:31"><expr pos:start="35:21" pos:end="35:31"><name pos:start="35:21" pos:end="35:23">obj</name> <operator pos:start="35:25" pos:end="35:26">!=</operator> <name pos:start="35:28" pos:end="35:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:56"><expr pos:start="37:9" pos:end="37:55"><call pos:start="37:9" pos:end="37:55"><name pos:start="37:9" pos:end="37:19">fail_unless</name><argument_list pos:start="37:20" pos:end="37:55">(<argument pos:start="37:21" pos:end="37:54"><expr pos:start="37:21" pos:end="37:54"><call pos:start="37:21" pos:end="37:37"><name pos:start="37:21" pos:end="37:32">qobject_type</name><argument_list pos:start="37:33" pos:end="37:37">(<argument pos:start="37:34" pos:end="37:36"><expr pos:start="37:34" pos:end="37:36"><name pos:start="37:34" pos:end="37:36">obj</name></expr></argument>)</argument_list></call> <operator pos:start="37:39" pos:end="37:40">==</operator> <name pos:start="37:42" pos:end="37:54">QTYPE_QSTRING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <expr_stmt pos:start="41:9" pos:end="41:38"><expr pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:11">str</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:37"><name pos:start="41:15" pos:end="41:32">qobject_to_qstring</name><argument_list pos:start="41:33" pos:end="41:37">(<argument pos:start="41:34" pos:end="41:36"><expr pos:start="41:34" pos:end="41:36"><name pos:start="41:34" pos:end="41:36">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:78"><expr pos:start="43:9" pos:end="43:77"><call pos:start="43:9" pos:end="43:77"><name pos:start="43:9" pos:end="43:19">fail_unless</name><argument_list pos:start="43:20" pos:end="43:77">(<argument pos:start="43:21" pos:end="43:76"><expr pos:start="43:21" pos:end="43:76"><call pos:start="43:21" pos:end="43:71"><name pos:start="43:21" pos:end="43:26">strcmp</name><argument_list pos:start="43:27" pos:end="43:71">(<argument pos:start="43:28" pos:end="43:47"><expr pos:start="43:28" pos:end="43:47"><call pos:start="43:28" pos:end="43:47"><name pos:start="43:28" pos:end="43:42">qstring_get_str</name><argument_list pos:start="43:43" pos:end="43:47">(<argument pos:start="43:44" pos:end="43:46"><expr pos:start="43:44" pos:end="43:46"><name pos:start="43:44" pos:end="43:46">str</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:50" pos:end="43:70"><expr pos:start="43:50" pos:end="43:70"><name pos:start="43:50" pos:end="43:62"><name pos:start="43:50" pos:end="43:59">test_cases</name><index pos:start="43:60" pos:end="43:62">[<expr pos:start="43:61" pos:end="43:61"><name pos:start="43:61" pos:end="43:61">i</name></expr>]</index></name><operator pos:start="43:63" pos:end="43:63">.</operator><name pos:start="43:64" pos:end="43:70">decoded</name></expr></argument>)</argument_list></call> <operator pos:start="43:73" pos:end="43:74">==</operator> <literal type="number" pos:start="43:76" pos:end="43:76">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:21"><expr pos:start="47:9" pos:end="47:20"><call pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:15">QDECREF</name><argument_list pos:start="47:16" pos:end="47:20">(<argument pos:start="47:17" pos:end="47:19"><expr pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:19">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block>
</unit>
