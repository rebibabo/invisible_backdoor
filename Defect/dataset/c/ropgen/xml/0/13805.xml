<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13805.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:14"><name pos:start="1:1" pos:end="1:12">MemoryRegion</name> <modifier pos:start="1:14" pos:end="1:14">*</modifier></type><name pos:start="1:15" pos:end="1:37">address_space_translate</name><parameter_list pos:start="1:38" pos:end="5:52">(<parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:50">AddressSpace</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">as</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:67"><decl pos:start="1:57" pos:end="1:67"><type pos:start="1:57" pos:end="1:67"><name pos:start="1:57" pos:end="1:62">hwaddr</name></type> <name pos:start="1:64" pos:end="1:67">addr</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:50"><decl pos:start="3:39" pos:end="3:50"><type pos:start="3:39" pos:end="3:50"><name pos:start="3:39" pos:end="3:44">hwaddr</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:50">xlat</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:64"><decl pos:start="3:53" pos:end="3:64"><type pos:start="3:53" pos:end="3:64"><name pos:start="3:53" pos:end="3:58">hwaddr</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:64">plen</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:51"><decl pos:start="5:39" pos:end="5:51"><type pos:start="5:39" pos:end="5:51"><name pos:start="5:39" pos:end="5:42">bool</name></type> <name pos:start="5:44" pos:end="5:51">is_write</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="65:1">{<block_content pos:start="9:5" pos:end="63:14">

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">IOMMUTLBEntry</name></type> <name pos:start="9:19" pos:end="9:23">iotlb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:23">MemoryRegionSection</name> <modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:32">section</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">MemoryRegion</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:20">mr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">hwaddr</name></type> <name pos:start="15:12" pos:end="15:14">len</name> <init pos:start="15:16" pos:end="15:22">= <expr pos:start="15:18" pos:end="15:22"><operator pos:start="15:18" pos:end="15:18">*</operator><name pos:start="15:19" pos:end="15:22">plen</name></expr></init></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="55:5">for <control pos:start="19:9" pos:end="19:12">(<init pos:start="19:10" pos:end="19:10">;</init><condition pos:start="19:11" pos:end="19:11">;</condition><incr/>)</control> <block pos:start="19:14" pos:end="55:5">{<block_content pos:start="21:9" pos:end="53:29">

        <expr_stmt pos:start="21:9" pos:end="21:90"><expr pos:start="21:9" pos:end="21:89"><name pos:start="21:9" pos:end="21:15">section</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <call pos:start="21:19" pos:end="21:89"><name pos:start="21:19" pos:end="21:50">address_space_translate_internal</name><argument_list pos:start="21:51" pos:end="21:89">(<argument pos:start="21:52" pos:end="21:63"><expr pos:start="21:52" pos:end="21:63"><name pos:start="21:52" pos:end="21:63"><name pos:start="21:52" pos:end="21:53">as</name><operator pos:start="21:54" pos:end="21:55">-&gt;</operator><name pos:start="21:56" pos:end="21:63">dispatch</name></name></expr></argument>, <argument pos:start="21:66" pos:end="21:69"><expr pos:start="21:66" pos:end="21:69"><name pos:start="21:66" pos:end="21:69">addr</name></expr></argument>, <argument pos:start="21:72" pos:end="21:76"><expr pos:start="21:72" pos:end="21:76"><operator pos:start="21:72" pos:end="21:72">&amp;</operator><name pos:start="21:73" pos:end="21:76">addr</name></expr></argument>, <argument pos:start="21:79" pos:end="21:82"><expr pos:start="21:79" pos:end="21:82"><operator pos:start="21:79" pos:end="21:79">&amp;</operator><name pos:start="21:80" pos:end="21:82">len</name></expr></argument>, <argument pos:start="21:85" pos:end="21:88"><expr pos:start="21:85" pos:end="21:88"><name pos:start="21:85" pos:end="21:88">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:25"><expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:10">mr</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:24"><name pos:start="23:14" pos:end="23:20">section</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:24">mr</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:27">(<expr pos:start="27:13" pos:end="27:26"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:26"><name pos:start="27:14" pos:end="27:15">mr</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:26">iommu_ops</name></name></expr>)</condition> <block pos:start="27:29" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:18">

            <break pos:start="29:13" pos:end="29:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:51"><expr pos:start="35:9" pos:end="35:50"><name pos:start="35:9" pos:end="35:13">iotlb</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:50"><name pos:start="35:17" pos:end="35:40"><name pos:start="35:17" pos:end="35:18">mr</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:29">iommu_ops</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:40">translate</name></name><argument_list pos:start="35:41" pos:end="35:50">(<argument pos:start="35:42" pos:end="35:43"><expr pos:start="35:42" pos:end="35:43"><name pos:start="35:42" pos:end="35:43">mr</name></expr></argument>, <argument pos:start="35:46" pos:end="35:49"><expr pos:start="35:46" pos:end="35:49"><name pos:start="35:46" pos:end="35:49">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="39:44"><expr pos:start="37:9" pos:end="39:43"><name pos:start="37:9" pos:end="37:12">addr</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <operator pos:start="37:16" pos:end="37:16">(</operator><operator pos:start="37:17" pos:end="37:17">(</operator><name pos:start="37:18" pos:end="37:38"><name pos:start="37:18" pos:end="37:22">iotlb</name><operator pos:start="37:23" pos:end="37:23">.</operator><name pos:start="37:24" pos:end="37:38">translated_addr</name></name> <operator pos:start="37:40" pos:end="37:40">&amp;</operator> <operator pos:start="37:42" pos:end="37:42">~</operator><name pos:start="37:43" pos:end="37:57"><name pos:start="37:43" pos:end="37:47">iotlb</name><operator pos:start="37:48" pos:end="37:48">.</operator><name pos:start="37:49" pos:end="37:57">addr_mask</name></name><operator pos:start="37:58" pos:end="37:58">)</operator>

                <operator pos:start="39:17" pos:end="39:17">|</operator> <operator pos:start="39:19" pos:end="39:19">(</operator><name pos:start="39:20" pos:end="39:23">addr</name> <operator pos:start="39:25" pos:end="39:25">&amp;</operator> <name pos:start="39:27" pos:end="39:41"><name pos:start="39:27" pos:end="39:31">iotlb</name><operator pos:start="39:32" pos:end="39:32">.</operator><name pos:start="39:33" pos:end="39:41">addr_mask</name></name><operator pos:start="39:42" pos:end="39:42">)</operator><operator pos:start="39:43" pos:end="39:43">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:60"><expr pos:start="41:9" pos:end="41:59"><name pos:start="41:9" pos:end="41:11">len</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:59"><name pos:start="41:15" pos:end="41:17">MIN</name><argument_list pos:start="41:18" pos:end="41:59">(<argument pos:start="41:19" pos:end="41:21"><expr pos:start="41:19" pos:end="41:21"><name pos:start="41:19" pos:end="41:21">len</name></expr></argument>, <argument pos:start="41:24" pos:end="41:58"><expr pos:start="41:24" pos:end="41:58"><operator pos:start="41:24" pos:end="41:24">(</operator><name pos:start="41:25" pos:end="41:28">addr</name> <operator pos:start="41:30" pos:end="41:30">|</operator> <name pos:start="41:32" pos:end="41:46"><name pos:start="41:32" pos:end="41:36">iotlb</name><operator pos:start="41:37" pos:end="41:37">.</operator><name pos:start="41:38" pos:end="41:46">addr_mask</name></name><operator pos:start="41:47" pos:end="41:47">)</operator> <operator pos:start="41:49" pos:end="41:49">-</operator> <name pos:start="41:51" pos:end="41:54">addr</name> <operator pos:start="41:56" pos:end="41:56">+</operator> <literal type="number" pos:start="41:58" pos:end="41:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:44">(<expr pos:start="43:13" pos:end="43:43"><operator pos:start="43:13" pos:end="43:13">!</operator><operator pos:start="43:14" pos:end="43:14">(</operator><name pos:start="43:15" pos:end="43:24"><name pos:start="43:15" pos:end="43:19">iotlb</name><operator pos:start="43:20" pos:end="43:20">.</operator><name pos:start="43:21" pos:end="43:24">perm</name></name> <operator pos:start="43:26" pos:end="43:26">&amp;</operator> <operator pos:start="43:28" pos:end="43:28">(</operator><literal type="number" pos:start="43:29" pos:end="43:29">1</literal> <operator pos:start="43:31" pos:end="43:32">&lt;&lt;</operator> <name pos:start="43:34" pos:end="43:41">is_write</name><operator pos:start="43:42" pos:end="43:42">)</operator><operator pos:start="43:43" pos:end="43:43">)</operator></expr>)</condition> <block pos:start="43:46" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:18">

            <expr_stmt pos:start="45:13" pos:end="45:36"><expr pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:14">mr</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <operator pos:start="45:18" pos:end="45:18">&amp;</operator><name pos:start="45:19" pos:end="45:35">io_mem_unassigned</name></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:29"><expr pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:10">as</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <name pos:start="53:14" pos:end="53:28"><name pos:start="53:14" pos:end="53:18">iotlb</name><operator pos:start="53:19" pos:end="53:19">.</operator><name pos:start="53:20" pos:end="53:28">target_as</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="59:5" pos:end="59:16"><expr pos:start="59:5" pos:end="59:15"><operator pos:start="59:5" pos:end="59:5">*</operator><name pos:start="59:6" pos:end="59:9">plen</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <name pos:start="59:13" pos:end="59:15">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:17"><expr pos:start="61:5" pos:end="61:16"><operator pos:start="61:5" pos:end="61:5">*</operator><name pos:start="61:6" pos:end="61:9">xlat</name> <operator pos:start="61:11" pos:end="61:11">=</operator> <name pos:start="61:13" pos:end="61:16">addr</name></expr>;</expr_stmt>

    <return pos:start="63:5" pos:end="63:14">return <expr pos:start="63:12" pos:end="63:13"><name pos:start="63:12" pos:end="63:13">mr</name></expr>;</return>

</block_content>}</block></function>
</unit>
