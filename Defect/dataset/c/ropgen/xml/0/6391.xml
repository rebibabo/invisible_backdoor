<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6391.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">qio_channel_readv_all</name><parameter_list pos:start="1:26" pos:end="7:39">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:36">QIOChannel</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">ioc</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:49"><decl pos:start="3:27" pos:end="3:49"><type pos:start="3:27" pos:end="3:49"><specifier pos:start="3:27" pos:end="3:31">const</specifier> <name pos:start="3:33" pos:end="3:44"><name pos:start="3:33" pos:end="3:38">struct</name> <name pos:start="3:40" pos:end="3:44">iovec</name></name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:49">iov</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:37"><decl pos:start="5:27" pos:end="5:37"><type pos:start="5:27" pos:end="5:37"><name pos:start="5:27" pos:end="5:32">size_t</name></type> <name pos:start="5:34" pos:end="5:37">niov</name></decl></parameter>,

                          <parameter pos:start="7:27" pos:end="7:38"><decl pos:start="7:27" pos:end="7:38"><type pos:start="7:27" pos:end="7:38"><name pos:start="7:27" pos:end="7:31">Error</name> <modifier pos:start="7:33" pos:end="7:33">*</modifier><modifier pos:start="7:34" pos:end="7:34">*</modifier></type><name pos:start="7:35" pos:end="7:38">errp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="73:1">{<block_content pos:start="11:5" pos:end="71:15">

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:16">= <expr pos:start="11:15" pos:end="11:16"><operator pos:start="11:15" pos:end="11:15">-</operator><literal type="number" pos:start="11:16" pos:end="11:16">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:16">iovec</name></name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:27">local_iov</name> <init pos:start="13:29" pos:end="13:55">= <expr pos:start="13:31" pos:end="13:55"><call pos:start="13:31" pos:end="13:55"><name pos:start="13:31" pos:end="13:35">g_new</name><argument_list pos:start="13:36" pos:end="13:55">(<argument pos:start="13:37" pos:end="13:48"><expr pos:start="13:37" pos:end="13:48">struct <name pos:start="13:44" pos:end="13:48">iovec</name></expr></argument>, <argument pos:start="13:51" pos:end="13:54"><expr pos:start="13:51" pos:end="13:54"><name pos:start="13:51" pos:end="13:54">niov</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:45"><decl pos:start="15:5" pos:end="15:44"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:16">iovec</name></name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:32">local_iov_head</name> <init pos:start="15:34" pos:end="15:44">= <expr pos:start="15:36" pos:end="15:44"><name pos:start="15:36" pos:end="15:44">local_iov</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:27">nlocal_iov</name> <init pos:start="17:29" pos:end="17:34">= <expr pos:start="17:31" pos:end="17:34"><name pos:start="17:31" pos:end="17:34">niov</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="25:50"><expr pos:start="21:5" pos:end="25:49"><name pos:start="21:5" pos:end="21:14">nlocal_iov</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="25:49"><name pos:start="21:18" pos:end="21:25">iov_copy</name><argument_list pos:start="21:26" pos:end="25:49">(<argument pos:start="21:27" pos:end="21:35"><expr pos:start="21:27" pos:end="21:35"><name pos:start="21:27" pos:end="21:35">local_iov</name></expr></argument>, <argument pos:start="21:38" pos:end="21:47"><expr pos:start="21:38" pos:end="21:47"><name pos:start="21:38" pos:end="21:47">nlocal_iov</name></expr></argument>,

                          <argument pos:start="23:27" pos:end="23:29"><expr pos:start="23:27" pos:end="23:29"><name pos:start="23:27" pos:end="23:29">iov</name></expr></argument>, <argument pos:start="23:32" pos:end="23:35"><expr pos:start="23:32" pos:end="23:35"><name pos:start="23:32" pos:end="23:35">niov</name></expr></argument>,

                          <argument pos:start="25:27" pos:end="25:27"><expr pos:start="25:27" pos:end="25:27"><literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr></argument>, <argument pos:start="25:30" pos:end="25:48"><expr pos:start="25:30" pos:end="25:48"><call pos:start="25:30" pos:end="25:48"><name pos:start="25:30" pos:end="25:37">iov_size</name><argument_list pos:start="25:38" pos:end="25:48">(<argument pos:start="25:39" pos:end="25:41"><expr pos:start="25:39" pos:end="25:41"><name pos:start="25:39" pos:end="25:41">iov</name></expr></argument>, <argument pos:start="25:44" pos:end="25:47"><expr pos:start="25:44" pos:end="25:47"><name pos:start="25:44" pos:end="25:47">niov</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="29:5" pos:end="59:5">while <condition pos:start="29:11" pos:end="29:26">(<expr pos:start="29:12" pos:end="29:25"><name pos:start="29:12" pos:end="29:21">nlocal_iov</name> <operator pos:start="29:23" pos:end="29:23">&gt;</operator> <literal type="number" pos:start="29:25" pos:end="29:25">0</literal></expr>)</condition> <block pos:start="29:28" pos:end="59:5">{<block_content pos:start="31:9" pos:end="57:56">

        <decl_stmt pos:start="31:9" pos:end="31:20"><decl pos:start="31:9" pos:end="31:19"><type pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:15">ssize_t</name></type> <name pos:start="31:17" pos:end="31:19">len</name></decl>;</decl_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:66"><expr pos:start="33:9" pos:end="33:65"><name pos:start="33:9" pos:end="33:11">len</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:65"><name pos:start="33:15" pos:end="33:31">qio_channel_readv</name><argument_list pos:start="33:32" pos:end="33:65">(<argument pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><name pos:start="33:33" pos:end="33:35">ioc</name></expr></argument>, <argument pos:start="33:38" pos:end="33:46"><expr pos:start="33:38" pos:end="33:46"><name pos:start="33:38" pos:end="33:46">local_iov</name></expr></argument>, <argument pos:start="33:49" pos:end="33:58"><expr pos:start="33:49" pos:end="33:58"><name pos:start="33:49" pos:end="33:58">nlocal_iov</name></expr></argument>, <argument pos:start="33:61" pos:end="33:64"><expr pos:start="33:61" pos:end="33:64"><name pos:start="33:61" pos:end="33:64">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="53:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:41">(<expr pos:start="35:13" pos:end="35:40"><name pos:start="35:13" pos:end="35:15">len</name> <operator pos:start="35:17" pos:end="35:18">==</operator> <name pos:start="35:20" pos:end="35:40">QIO_CHANNEL_ERR_BLOCK</name></expr>)</condition> <block pos:start="35:43" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:21">

            <expr_stmt pos:start="37:13" pos:end="37:43"><expr pos:start="37:13" pos:end="37:42"><call pos:start="37:13" pos:end="37:42"><name pos:start="37:13" pos:end="37:28">qio_channel_wait</name><argument_list pos:start="37:29" pos:end="37:42">(<argument pos:start="37:30" pos:end="37:32"><expr pos:start="37:30" pos:end="37:32"><name pos:start="37:30" pos:end="37:32">ioc</name></expr></argument>, <argument pos:start="37:35" pos:end="37:41"><expr pos:start="37:35" pos:end="37:41"><name pos:start="37:35" pos:end="37:41">G_IO_IN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="39:13" pos:end="39:21">continue;</continue>

        </block_content>}</block></if> <if type="elseif" pos:start="41:11" pos:end="45:9">else if <condition pos:start="41:19" pos:end="41:27">(<expr pos:start="41:20" pos:end="41:26"><name pos:start="41:20" pos:end="41:22">len</name> <operator pos:start="41:24" pos:end="41:24">&lt;</operator> <literal type="number" pos:start="41:26" pos:end="41:26">0</literal></expr>)</condition> <block pos:start="41:29" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:25">

            <goto pos:start="43:13" pos:end="43:25">goto <name pos:start="43:18" pos:end="43:24">cleanup</name>;</goto>

        </block_content>}</block></if> <if type="elseif" pos:start="45:11" pos:end="53:9">else if <condition pos:start="45:19" pos:end="45:28">(<expr pos:start="45:20" pos:end="45:27"><name pos:start="45:20" pos:end="45:22">len</name> <operator pos:start="45:24" pos:end="45:25">==</operator> <literal type="number" pos:start="45:27" pos:end="45:27">0</literal></expr>)</condition> <block pos:start="45:30" pos:end="53:9">{<block_content pos:start="47:13" pos:end="51:25">

            <expr_stmt pos:start="47:13" pos:end="49:76"><expr pos:start="47:13" pos:end="49:75"><call pos:start="47:13" pos:end="49:75"><name pos:start="47:13" pos:end="47:22">error_setg</name><argument_list pos:start="47:23" pos:end="49:75">(<argument pos:start="47:24" pos:end="47:27"><expr pos:start="47:24" pos:end="47:27"><name pos:start="47:24" pos:end="47:27">errp</name></expr></argument>,

                       <argument pos:start="49:24" pos:end="49:74"><expr pos:start="49:24" pos:end="49:74"><literal type="string" pos:start="49:24" pos:end="49:74">"Unexpected end-of-file before all bytes were read"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="51:13" pos:end="51:25">goto <name pos:start="51:18" pos:end="51:24">cleanup</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:56"><expr pos:start="57:9" pos:end="57:55"><call pos:start="57:9" pos:end="57:55"><name pos:start="57:9" pos:end="57:25">iov_discard_front</name><argument_list pos:start="57:26" pos:end="57:55">(<argument pos:start="57:27" pos:end="57:36"><expr pos:start="57:27" pos:end="57:36"><operator pos:start="57:27" pos:end="57:27">&amp;</operator><name pos:start="57:28" pos:end="57:36">local_iov</name></expr></argument>, <argument pos:start="57:39" pos:end="57:49"><expr pos:start="57:39" pos:end="57:49"><operator pos:start="57:39" pos:end="57:39">&amp;</operator><name pos:start="57:40" pos:end="57:49">nlocal_iov</name></expr></argument>, <argument pos:start="57:52" pos:end="57:54"><expr pos:start="57:52" pos:end="57:54"><name pos:start="57:52" pos:end="57:54">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="63:5" pos:end="63:12"><expr pos:start="63:5" pos:end="63:11"><name pos:start="63:5" pos:end="63:7">ret</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <literal type="number" pos:start="63:11" pos:end="63:11">0</literal></expr>;</expr_stmt>



 <label pos:start="67:2" pos:end="67:9"><name pos:start="67:2" pos:end="67:8">cleanup</name>:</label>

    <expr_stmt pos:start="69:5" pos:end="69:27"><expr pos:start="69:5" pos:end="69:26"><call pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:10">g_free</name><argument_list pos:start="69:11" pos:end="69:26">(<argument pos:start="69:12" pos:end="69:25"><expr pos:start="69:12" pos:end="69:25"><name pos:start="69:12" pos:end="69:25">local_iov_head</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="71:5" pos:end="71:15">return <expr pos:start="71:12" pos:end="71:14"><name pos:start="71:12" pos:end="71:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
