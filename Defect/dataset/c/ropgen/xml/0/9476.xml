<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9476.c" pos:tabs="8"><function pos:start="1:1" pos:end="331:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">video_refresh</name><parameter_list pos:start="1:26" pos:end="1:63">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:62"><decl pos:start="1:41" pos:end="1:62"><type pos:start="1:41" pos:end="1:62"><name pos:start="1:41" pos:end="1:46">double</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:62">remaining_time</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="331:1">{<block_content pos:start="5:5" pos:end="329:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VideoState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">is</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VideoPicture</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">vp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">double</name></type> <name pos:start="9:12" pos:end="9:15">time</name></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">SubPicture</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:18">sp</name></decl>, <decl pos:start="13:21" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:16"><modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:24">sp2</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:39"><if pos:start="17:5" pos:end="19:39">if <condition pos:start="17:8" pos:end="17:90">(<expr pos:start="17:9" pos:end="17:89"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:19"><name pos:start="17:10" pos:end="17:11">is</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:19">paused</name></name> <operator pos:start="17:21" pos:end="17:22">&amp;&amp;</operator> <call pos:start="17:24" pos:end="17:47"><name pos:start="17:24" pos:end="17:43">get_master_sync_type</name><argument_list pos:start="17:44" pos:end="17:47">(<argument pos:start="17:45" pos:end="17:46"><expr pos:start="17:45" pos:end="17:46"><name pos:start="17:45" pos:end="17:46">is</name></expr></argument>)</argument_list></call> <operator pos:start="17:49" pos:end="17:50">==</operator> <name pos:start="17:52" pos:end="17:73">AV_SYNC_EXTERNAL_CLOCK</name> <operator pos:start="17:75" pos:end="17:76">&amp;&amp;</operator> <name pos:start="17:78" pos:end="17:89"><name pos:start="17:78" pos:end="17:79">is</name><operator pos:start="17:80" pos:end="17:81">-&gt;</operator><name pos:start="17:82" pos:end="17:89">realtime</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:39"><block_content pos:start="19:9" pos:end="19:39">

        <expr_stmt pos:start="19:9" pos:end="19:39"><expr pos:start="19:9" pos:end="19:38"><call pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:34">check_external_clock_speed</name><argument_list pos:start="19:35" pos:end="19:38">(<argument pos:start="19:36" pos:end="19:37"><expr pos:start="19:36" pos:end="19:37"><name pos:start="19:36" pos:end="19:37">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="37:5"><if pos:start="23:5" pos:end="37:5">if <condition pos:start="23:8" pos:end="23:77">(<expr pos:start="23:9" pos:end="23:76"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:24">display_disable</name> <operator pos:start="23:26" pos:end="23:27">&amp;&amp;</operator> <name pos:start="23:29" pos:end="23:41"><name pos:start="23:29" pos:end="23:30">is</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:41">show_mode</name></name> <operator pos:start="23:43" pos:end="23:44">!=</operator> <name pos:start="23:46" pos:end="23:60">SHOW_MODE_VIDEO</name> <operator pos:start="23:62" pos:end="23:63">&amp;&amp;</operator> <name pos:start="23:65" pos:end="23:76"><name pos:start="23:65" pos:end="23:66">is</name><operator pos:start="23:67" pos:end="23:68">-&gt;</operator><name pos:start="23:69" pos:end="23:76">audio_st</name></name></expr>)</condition> <block pos:start="23:79" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:87">

        <expr_stmt pos:start="25:9" pos:end="25:40"><expr pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:12">time</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:25">av_gettime</name><argument_list pos:start="25:26" pos:end="25:27">()</argument_list></call> <operator pos:start="25:29" pos:end="25:29">/</operator> <literal type="number" pos:start="25:31" pos:end="25:39">1000000.0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:70">(<expr pos:start="27:13" pos:end="27:69"><name pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:14">is</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:29">force_refresh</name></name> <operator pos:start="27:31" pos:end="27:32">||</operator> <name pos:start="27:34" pos:end="27:50"><name pos:start="27:34" pos:end="27:35">is</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:50">last_vis_time</name></name> <operator pos:start="27:52" pos:end="27:52">+</operator> <name pos:start="27:54" pos:end="27:62">rdftspeed</name> <operator pos:start="27:64" pos:end="27:64">&lt;</operator> <name pos:start="27:66" pos:end="27:69">time</name></expr>)</condition> <block pos:start="27:72" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:37">

            <expr_stmt pos:start="29:13" pos:end="29:30"><expr pos:start="29:13" pos:end="29:29"><call pos:start="29:13" pos:end="29:29"><name pos:start="29:13" pos:end="29:25">video_display</name><argument_list pos:start="29:26" pos:end="29:29">(<argument pos:start="29:27" pos:end="29:28"><expr pos:start="29:27" pos:end="29:28"><name pos:start="29:27" pos:end="29:28">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:37"><expr pos:start="31:13" pos:end="31:36"><name pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:14">is</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:29">last_vis_time</name></name> <operator pos:start="31:31" pos:end="31:31">=</operator> <name pos:start="31:33" pos:end="31:36">time</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:87"><expr pos:start="35:9" pos:end="35:86"><operator pos:start="35:9" pos:end="35:9">*</operator><name pos:start="35:10" pos:end="35:23">remaining_time</name> <operator pos:start="35:25" pos:end="35:25">=</operator> <call pos:start="35:27" pos:end="35:86"><name pos:start="35:27" pos:end="35:31">FFMIN</name><argument_list pos:start="35:32" pos:end="35:86">(<argument pos:start="35:33" pos:end="35:47"><expr pos:start="35:33" pos:end="35:47"><operator pos:start="35:33" pos:end="35:33">*</operator><name pos:start="35:34" pos:end="35:47">remaining_time</name></expr></argument>, <argument pos:start="35:50" pos:end="35:85"><expr pos:start="35:50" pos:end="35:85"><name pos:start="35:50" pos:end="35:66"><name pos:start="35:50" pos:end="35:51">is</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:66">last_vis_time</name></name> <operator pos:start="35:68" pos:end="35:68">+</operator> <name pos:start="35:70" pos:end="35:78">rdftspeed</name> <operator pos:start="35:80" pos:end="35:80">-</operator> <name pos:start="35:82" pos:end="35:85">time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="249:5"><if pos:start="41:5" pos:end="249:5">if <condition pos:start="41:8" pos:end="41:21">(<expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:10">is</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:20">video_st</name></name></expr>)</condition> <block pos:start="41:23" pos:end="249:5">{<block_content pos:start="43:9" pos:end="247:9">

        <decl_stmt pos:start="43:9" pos:end="43:26"><decl pos:start="43:9" pos:end="43:25"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:21">redisplay</name> <init pos:start="43:23" pos:end="43:25">= <expr pos:start="43:25" pos:end="43:25"><literal type="number" pos:start="43:25" pos:end="43:25">0</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="45:9" pos:end="47:47"><if pos:start="45:9" pos:end="47:47">if <condition pos:start="45:12" pos:end="45:30">(<expr pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:14">is</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:29">force_refresh</name></name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:47"><block_content pos:start="47:13" pos:end="47:47">

            <expr_stmt pos:start="47:13" pos:end="47:47"><expr pos:start="47:13" pos:end="47:46"><name pos:start="47:13" pos:end="47:21">redisplay</name> <operator pos:start="47:23" pos:end="47:23">=</operator> <call pos:start="47:25" pos:end="47:46"><name pos:start="47:25" pos:end="47:42">pictq_prev_picture</name><argument_list pos:start="47:43" pos:end="47:46">(<argument pos:start="47:44" pos:end="47:45"><expr pos:start="47:44" pos:end="47:45"><name pos:start="47:44" pos:end="47:45">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<label pos:start="49:1" pos:end="49:6"><name pos:start="49:1" pos:end="49:5">retry</name>:</label>

        <if_stmt pos:start="51:9" pos:end="247:9"><if pos:start="51:9" pos:end="67:9">if <condition pos:start="51:12" pos:end="51:32">(<expr pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:14">is</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:26">pictq_size</name></name> <operator pos:start="51:28" pos:end="51:29">==</operator> <literal type="number" pos:start="51:31" pos:end="51:31">0</literal></expr>)</condition> <block pos:start="51:34" pos:end="67:9">{<block_content pos:start="53:13" pos:end="63:45">

            <expr_stmt pos:start="53:13" pos:end="53:43"><expr pos:start="53:13" pos:end="53:42"><call pos:start="53:13" pos:end="53:42"><name pos:start="53:13" pos:end="53:25">SDL_LockMutex</name><argument_list pos:start="53:26" pos:end="53:42">(<argument pos:start="53:27" pos:end="53:41"><expr pos:start="53:27" pos:end="53:41"><name pos:start="53:27" pos:end="53:41"><name pos:start="53:27" pos:end="53:28">is</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:41">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="61:13"><if pos:start="55:13" pos:end="61:13">if <condition pos:start="55:16" pos:end="55:112">(<expr pos:start="55:17" pos:end="55:111"><name pos:start="55:17" pos:end="55:42"><name pos:start="55:17" pos:end="55:18">is</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:42">frame_last_dropped_pts</name></name> <operator pos:start="55:44" pos:end="55:45">!=</operator> <name pos:start="55:47" pos:end="55:60">AV_NOPTS_VALUE</name> <operator pos:start="55:62" pos:end="55:63">&amp;&amp;</operator> <name pos:start="55:65" pos:end="55:90"><name pos:start="55:65" pos:end="55:66">is</name><operator pos:start="55:67" pos:end="55:68">-&gt;</operator><name pos:start="55:69" pos:end="55:90">frame_last_dropped_pts</name></name> <operator pos:start="55:92" pos:end="55:92">&gt;</operator> <name pos:start="55:94" pos:end="55:111"><name pos:start="55:94" pos:end="55:95">is</name><operator pos:start="55:96" pos:end="55:97">-&gt;</operator><name pos:start="55:98" pos:end="55:111">frame_last_pts</name></name></expr>)</condition> <block pos:start="55:114" pos:end="61:13">{<block_content pos:start="57:17" pos:end="59:60">

                <expr_stmt pos:start="57:17" pos:end="57:124"><expr pos:start="57:17" pos:end="57:123"><call pos:start="57:17" pos:end="57:123"><name pos:start="57:17" pos:end="57:32">update_video_pts</name><argument_list pos:start="57:33" pos:end="57:123">(<argument pos:start="57:34" pos:end="57:35"><expr pos:start="57:34" pos:end="57:35"><name pos:start="57:34" pos:end="57:35">is</name></expr></argument>, <argument pos:start="57:38" pos:end="57:63"><expr pos:start="57:38" pos:end="57:63"><name pos:start="57:38" pos:end="57:63"><name pos:start="57:38" pos:end="57:39">is</name><operator pos:start="57:40" pos:end="57:41">-&gt;</operator><name pos:start="57:42" pos:end="57:63">frame_last_dropped_pts</name></name></expr></argument>, <argument pos:start="57:66" pos:end="57:91"><expr pos:start="57:66" pos:end="57:91"><name pos:start="57:66" pos:end="57:91"><name pos:start="57:66" pos:end="57:67">is</name><operator pos:start="57:68" pos:end="57:69">-&gt;</operator><name pos:start="57:70" pos:end="57:91">frame_last_dropped_pos</name></name></expr></argument>, <argument pos:start="57:94" pos:end="57:122"><expr pos:start="57:94" pos:end="57:122"><name pos:start="57:94" pos:end="57:122"><name pos:start="57:94" pos:end="57:95">is</name><operator pos:start="57:96" pos:end="57:97">-&gt;</operator><name pos:start="57:98" pos:end="57:122">frame_last_dropped_serial</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:60"><expr pos:start="59:17" pos:end="59:59"><name pos:start="59:17" pos:end="59:42"><name pos:start="59:17" pos:end="59:18">is</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:42">frame_last_dropped_pts</name></name> <operator pos:start="59:44" pos:end="59:44">=</operator> <name pos:start="59:46" pos:end="59:59">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:45"><expr pos:start="63:13" pos:end="63:44"><call pos:start="63:13" pos:end="63:44"><name pos:start="63:13" pos:end="63:27">SDL_UnlockMutex</name><argument_list pos:start="63:28" pos:end="63:44">(<argument pos:start="63:29" pos:end="63:43"><expr pos:start="63:29" pos:end="63:43"><name pos:start="63:29" pos:end="63:43"><name pos:start="63:29" pos:end="63:30">is</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:43">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="65:13" pos:end="65:64">// nothing to do, no picture to display in the queue</comment>

        </block_content>}</block></if> <else pos:start="67:11" pos:end="247:9">else <block pos:start="67:16" pos:end="247:9">{<block_content pos:start="69:13" pos:end="245:40">

            <decl_stmt pos:start="69:13" pos:end="69:50"><decl pos:start="69:13" pos:end="69:32"><type pos:start="69:13" pos:end="69:18"><name pos:start="69:13" pos:end="69:18">double</name></type> <name pos:start="69:20" pos:end="69:32">last_duration</name></decl>, <decl pos:start="69:35" pos:end="69:42"><type ref="prev" pos:start="69:13" pos:end="69:18"/><name pos:start="69:35" pos:end="69:42">duration</name></decl>, <decl pos:start="69:45" pos:end="69:49"><type ref="prev" pos:start="69:13" pos:end="69:18"/><name pos:start="69:45" pos:end="69:49">delay</name></decl>;</decl_stmt>

            <comment type="block" pos:start="71:13" pos:end="71:37">/* dequeue the picture */</comment>

            <expr_stmt pos:start="73:13" pos:end="73:46"><expr pos:start="73:13" pos:end="73:45"><name pos:start="73:13" pos:end="73:14">vp</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <operator pos:start="73:18" pos:end="73:18">&amp;</operator><name pos:start="73:19" pos:end="73:45"><name pos:start="73:19" pos:end="73:20">is</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:27">pictq</name><index pos:start="73:28" pos:end="73:45">[<expr pos:start="73:29" pos:end="73:44"><name pos:start="73:29" pos:end="73:44"><name pos:start="73:29" pos:end="73:30">is</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:44">pictq_rindex</name></name></expr>]</index></name></expr>;</expr_stmt>



            <if_stmt pos:start="77:13" pos:end="85:13"><if pos:start="77:13" pos:end="85:13">if <condition pos:start="77:16" pos:end="77:48">(<expr pos:start="77:17" pos:end="77:47"><name pos:start="77:17" pos:end="77:26"><name pos:start="77:17" pos:end="77:18">vp</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:26">serial</name></name> <operator pos:start="77:28" pos:end="77:29">!=</operator> <name pos:start="77:31" pos:end="77:47"><name pos:start="77:31" pos:end="77:32">is</name><operator pos:start="77:33" pos:end="77:34">-&gt;</operator><name pos:start="77:35" pos:end="77:40">videoq</name><operator pos:start="77:41" pos:end="77:41">.</operator><name pos:start="77:42" pos:end="77:47">serial</name></name></expr>)</condition> <block pos:start="77:50" pos:end="85:13">{<block_content pos:start="79:17" pos:end="83:27">

                <expr_stmt pos:start="79:17" pos:end="79:39"><expr pos:start="79:17" pos:end="79:38"><call pos:start="79:17" pos:end="79:38"><name pos:start="79:17" pos:end="79:34">pictq_next_picture</name><argument_list pos:start="79:35" pos:end="79:38">(<argument pos:start="79:36" pos:end="79:37"><expr pos:start="79:36" pos:end="79:37"><name pos:start="79:36" pos:end="79:37">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:30"><expr pos:start="81:17" pos:end="81:29"><name pos:start="81:17" pos:end="81:25">redisplay</name> <operator pos:start="81:27" pos:end="81:27">=</operator> <literal type="number" pos:start="81:29" pos:end="81:29">0</literal></expr>;</expr_stmt>

                <goto pos:start="83:17" pos:end="83:27">goto <name pos:start="83:22" pos:end="83:26">retry</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="89:13" pos:end="91:29"><if pos:start="89:13" pos:end="91:29">if <condition pos:start="89:16" pos:end="89:27">(<expr pos:start="89:17" pos:end="89:26"><name pos:start="89:17" pos:end="89:26"><name pos:start="89:17" pos:end="89:18">is</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:26">paused</name></name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:29"><block_content pos:start="91:17" pos:end="91:29">

                <goto pos:start="91:17" pos:end="91:29">goto <name pos:start="91:22" pos:end="91:28">display</name>;</goto></block_content></block></if></if_stmt>



            <comment type="block" pos:start="95:13" pos:end="95:47">/* compute nominal last_duration */</comment>

            <expr_stmt pos:start="97:13" pos:end="97:57"><expr pos:start="97:13" pos:end="97:56"><name pos:start="97:13" pos:end="97:25">last_duration</name> <operator pos:start="97:27" pos:end="97:27">=</operator> <name pos:start="97:29" pos:end="97:35"><name pos:start="97:29" pos:end="97:30">vp</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:35">pts</name></name> <operator pos:start="97:37" pos:end="97:37">-</operator> <name pos:start="97:39" pos:end="97:56"><name pos:start="97:39" pos:end="97:40">is</name><operator pos:start="97:41" pos:end="97:42">-&gt;</operator><name pos:start="97:43" pos:end="97:56">frame_last_pts</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="105:13"><if pos:start="99:13" pos:end="105:13">if <condition pos:start="99:16" pos:end="99:101">(<expr pos:start="99:17" pos:end="99:100"><operator pos:start="99:17" pos:end="99:17">!</operator><call pos:start="99:18" pos:end="99:37"><name pos:start="99:18" pos:end="99:22">isnan</name><argument_list pos:start="99:23" pos:end="99:37">(<argument pos:start="99:24" pos:end="99:36"><expr pos:start="99:24" pos:end="99:36"><name pos:start="99:24" pos:end="99:36">last_duration</name></expr></argument>)</argument_list></call> <operator pos:start="99:39" pos:end="99:40">&amp;&amp;</operator> <name pos:start="99:42" pos:end="99:54">last_duration</name> <operator pos:start="99:56" pos:end="99:56">&gt;</operator> <literal type="number" pos:start="99:58" pos:end="99:58">0</literal> <operator pos:start="99:60" pos:end="99:61">&amp;&amp;</operator> <name pos:start="99:63" pos:end="99:75">last_duration</name> <operator pos:start="99:77" pos:end="99:77">&lt;</operator> <name pos:start="99:79" pos:end="99:100"><name pos:start="99:79" pos:end="99:80">is</name><operator pos:start="99:81" pos:end="99:82">-&gt;</operator><name pos:start="99:83" pos:end="99:100">max_frame_duration</name></name></expr>)</condition> <block pos:start="99:103" pos:end="105:13">{<block_content pos:start="103:17" pos:end="103:56">

                <comment type="block" pos:start="101:17" pos:end="101:97">/* if duration of the last frame was sane, update last_duration in video state */</comment>

                <expr_stmt pos:start="103:17" pos:end="103:56"><expr pos:start="103:17" pos:end="103:55"><name pos:start="103:17" pos:end="103:39"><name pos:start="103:17" pos:end="103:18">is</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:39">frame_last_duration</name></name> <operator pos:start="103:41" pos:end="103:41">=</operator> <name pos:start="103:43" pos:end="103:55">last_duration</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="107:13" pos:end="113:74"><if pos:start="107:13" pos:end="109:28">if <condition pos:start="107:16" pos:end="107:26">(<expr pos:start="107:17" pos:end="107:25"><name pos:start="107:17" pos:end="107:25">redisplay</name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:28"><block_content pos:start="109:17" pos:end="109:28">

                <expr_stmt pos:start="109:17" pos:end="109:28"><expr pos:start="109:17" pos:end="109:27"><name pos:start="109:17" pos:end="109:21">delay</name> <operator pos:start="109:23" pos:end="109:23">=</operator> <literal type="number" pos:start="109:25" pos:end="109:27">0.0</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="111:13" pos:end="113:74">else<block type="pseudo" pos:start="113:17" pos:end="113:74"><block_content pos:start="113:17" pos:end="113:74">

                <expr_stmt pos:start="113:17" pos:end="113:74"><expr pos:start="113:17" pos:end="113:73"><name pos:start="113:17" pos:end="113:21">delay</name> <operator pos:start="113:23" pos:end="113:23">=</operator> <call pos:start="113:25" pos:end="113:73"><name pos:start="113:25" pos:end="113:44">compute_target_delay</name><argument_list pos:start="113:45" pos:end="113:73">(<argument pos:start="113:46" pos:end="113:68"><expr pos:start="113:46" pos:end="113:68"><name pos:start="113:46" pos:end="113:68"><name pos:start="113:46" pos:end="113:47">is</name><operator pos:start="113:48" pos:end="113:49">-&gt;</operator><name pos:start="113:50" pos:end="113:68">frame_last_duration</name></name></expr></argument>, <argument pos:start="113:71" pos:end="113:72"><expr pos:start="113:71" pos:end="113:72"><name pos:start="113:71" pos:end="113:72">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <expr_stmt pos:start="117:13" pos:end="117:41"><expr pos:start="117:13" pos:end="117:40"><name pos:start="117:13" pos:end="117:16">time</name><operator pos:start="117:17" pos:end="117:17">=</operator> <call pos:start="117:19" pos:end="117:30"><name pos:start="117:19" pos:end="117:28">av_gettime</name><argument_list pos:start="117:29" pos:end="117:30">()</argument_list></call><operator pos:start="117:31" pos:end="117:31">/</operator><literal type="number" pos:start="117:32" pos:end="117:40">1000000.0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="119:13" pos:end="125:13"><if pos:start="119:13" pos:end="125:13">if <condition pos:start="119:16" pos:end="119:61">(<expr pos:start="119:17" pos:end="119:60"><name pos:start="119:17" pos:end="119:20">time</name> <operator pos:start="119:22" pos:end="119:22">&lt;</operator> <name pos:start="119:24" pos:end="119:38"><name pos:start="119:24" pos:end="119:25">is</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:38">frame_timer</name></name> <operator pos:start="119:40" pos:end="119:40">+</operator> <name pos:start="119:42" pos:end="119:46">delay</name> <operator pos:start="119:48" pos:end="119:49">&amp;&amp;</operator> <operator pos:start="119:51" pos:end="119:51">!</operator><name pos:start="119:52" pos:end="119:60">redisplay</name></expr>)</condition> <block pos:start="119:63" pos:end="125:13">{<block_content pos:start="121:17" pos:end="123:23">

                <expr_stmt pos:start="121:17" pos:end="121:89"><expr pos:start="121:17" pos:end="121:88"><operator pos:start="121:17" pos:end="121:17">*</operator><name pos:start="121:18" pos:end="121:31">remaining_time</name> <operator pos:start="121:33" pos:end="121:33">=</operator> <call pos:start="121:35" pos:end="121:88"><name pos:start="121:35" pos:end="121:39">FFMIN</name><argument_list pos:start="121:40" pos:end="121:88">(<argument pos:start="121:41" pos:end="121:70"><expr pos:start="121:41" pos:end="121:70"><name pos:start="121:41" pos:end="121:55"><name pos:start="121:41" pos:end="121:42">is</name><operator pos:start="121:43" pos:end="121:44">-&gt;</operator><name pos:start="121:45" pos:end="121:55">frame_timer</name></name> <operator pos:start="121:57" pos:end="121:57">+</operator> <name pos:start="121:59" pos:end="121:63">delay</name> <operator pos:start="121:65" pos:end="121:65">-</operator> <name pos:start="121:67" pos:end="121:70">time</name></expr></argument>, <argument pos:start="121:73" pos:end="121:87"><expr pos:start="121:73" pos:end="121:87"><operator pos:start="121:73" pos:end="121:73">*</operator><name pos:start="121:74" pos:end="121:87">remaining_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="123:17" pos:end="123:23">return;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="129:13" pos:end="129:37"><expr pos:start="129:13" pos:end="129:36"><name pos:start="129:13" pos:end="129:27"><name pos:start="129:13" pos:end="129:14">is</name><operator pos:start="129:15" pos:end="129:16">-&gt;</operator><name pos:start="129:17" pos:end="129:27">frame_timer</name></name> <operator pos:start="129:29" pos:end="129:30">+=</operator> <name pos:start="129:32" pos:end="129:36">delay</name></expr>;</expr_stmt>

            <if_stmt pos:start="131:13" pos:end="133:39"><if pos:start="131:13" pos:end="133:39">if <condition pos:start="131:16" pos:end="131:76">(<expr pos:start="131:17" pos:end="131:75"><name pos:start="131:17" pos:end="131:21">delay</name> <operator pos:start="131:23" pos:end="131:23">&gt;</operator> <literal type="number" pos:start="131:25" pos:end="131:25">0</literal> <operator pos:start="131:27" pos:end="131:28">&amp;&amp;</operator> <name pos:start="131:30" pos:end="131:33">time</name> <operator pos:start="131:35" pos:end="131:35">-</operator> <name pos:start="131:37" pos:end="131:51"><name pos:start="131:37" pos:end="131:38">is</name><operator pos:start="131:39" pos:end="131:40">-&gt;</operator><name pos:start="131:41" pos:end="131:51">frame_timer</name></name> <operator pos:start="131:53" pos:end="131:53">&gt;</operator> <name pos:start="131:55" pos:end="131:75">AV_SYNC_THRESHOLD_MAX</name></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:39"><block_content pos:start="133:17" pos:end="133:39">

                <expr_stmt pos:start="133:17" pos:end="133:39"><expr pos:start="133:17" pos:end="133:38"><name pos:start="133:17" pos:end="133:31"><name pos:start="133:17" pos:end="133:18">is</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:31">frame_timer</name></name> <operator pos:start="133:33" pos:end="133:33">=</operator> <name pos:start="133:35" pos:end="133:38">time</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="137:13" pos:end="137:43"><expr pos:start="137:13" pos:end="137:42"><call pos:start="137:13" pos:end="137:42"><name pos:start="137:13" pos:end="137:25">SDL_LockMutex</name><argument_list pos:start="137:26" pos:end="137:42">(<argument pos:start="137:27" pos:end="137:41"><expr pos:start="137:27" pos:end="137:41"><name pos:start="137:27" pos:end="137:41"><name pos:start="137:27" pos:end="137:28">is</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:41">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="139:13" pos:end="141:67"><if pos:start="139:13" pos:end="141:67">if <condition pos:start="139:16" pos:end="139:46">(<expr pos:start="139:17" pos:end="139:45"><operator pos:start="139:17" pos:end="139:17">!</operator><name pos:start="139:18" pos:end="139:26">redisplay</name> <operator pos:start="139:28" pos:end="139:29">&amp;&amp;</operator> <operator pos:start="139:31" pos:end="139:31">!</operator><call pos:start="139:32" pos:end="139:45"><name pos:start="139:32" pos:end="139:36">isnan</name><argument_list pos:start="139:37" pos:end="139:45">(<argument pos:start="139:38" pos:end="139:44"><expr pos:start="139:38" pos:end="139:44"><name pos:start="139:38" pos:end="139:44"><name pos:start="139:38" pos:end="139:39">vp</name><operator pos:start="139:40" pos:end="139:41">-&gt;</operator><name pos:start="139:42" pos:end="139:44">pts</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="141:17" pos:end="141:67"><block_content pos:start="141:17" pos:end="141:67">

                <expr_stmt pos:start="141:17" pos:end="141:67"><expr pos:start="141:17" pos:end="141:66"><call pos:start="141:17" pos:end="141:66"><name pos:start="141:17" pos:end="141:32">update_video_pts</name><argument_list pos:start="141:33" pos:end="141:66">(<argument pos:start="141:34" pos:end="141:35"><expr pos:start="141:34" pos:end="141:35"><name pos:start="141:34" pos:end="141:35">is</name></expr></argument>, <argument pos:start="141:38" pos:end="141:44"><expr pos:start="141:38" pos:end="141:44"><name pos:start="141:38" pos:end="141:44"><name pos:start="141:38" pos:end="141:39">vp</name><operator pos:start="141:40" pos:end="141:41">-&gt;</operator><name pos:start="141:42" pos:end="141:44">pts</name></name></expr></argument>, <argument pos:start="141:47" pos:end="141:53"><expr pos:start="141:47" pos:end="141:53"><name pos:start="141:47" pos:end="141:53"><name pos:start="141:47" pos:end="141:48">vp</name><operator pos:start="141:49" pos:end="141:50">-&gt;</operator><name pos:start="141:51" pos:end="141:53">pos</name></name></expr></argument>, <argument pos:start="141:56" pos:end="141:65"><expr pos:start="141:56" pos:end="141:65"><name pos:start="141:56" pos:end="141:65"><name pos:start="141:56" pos:end="141:57">vp</name><operator pos:start="141:58" pos:end="141:59">-&gt;</operator><name pos:start="141:60" pos:end="141:65">serial</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:45"><expr pos:start="143:13" pos:end="143:44"><call pos:start="143:13" pos:end="143:44"><name pos:start="143:13" pos:end="143:27">SDL_UnlockMutex</name><argument_list pos:start="143:28" pos:end="143:44">(<argument pos:start="143:29" pos:end="143:43"><expr pos:start="143:29" pos:end="143:43"><name pos:start="143:29" pos:end="143:43"><name pos:start="143:29" pos:end="143:30">is</name><operator pos:start="143:31" pos:end="143:32">-&gt;</operator><name pos:start="143:33" pos:end="143:43">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="147:13" pos:end="167:13"><if pos:start="147:13" pos:end="167:13">if <condition pos:start="147:16" pos:end="147:35">(<expr pos:start="147:17" pos:end="147:34"><name pos:start="147:17" pos:end="147:30"><name pos:start="147:17" pos:end="147:18">is</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:30">pictq_size</name></name> <operator pos:start="147:32" pos:end="147:32">&gt;</operator> <literal type="number" pos:start="147:34" pos:end="147:34">1</literal></expr>)</condition> <block pos:start="147:37" pos:end="167:13">{<block_content pos:start="149:17" pos:end="165:17">

                <decl_stmt pos:start="149:17" pos:end="149:101"><decl pos:start="149:17" pos:end="149:100"><type pos:start="149:17" pos:end="149:30"><name pos:start="149:17" pos:end="149:28">VideoPicture</name> <modifier pos:start="149:30" pos:end="149:30">*</modifier></type><name pos:start="149:31" pos:end="149:36">nextvp</name> <init pos:start="149:38" pos:end="149:100">= <expr pos:start="149:40" pos:end="149:100"><operator pos:start="149:40" pos:end="149:40">&amp;</operator><name pos:start="149:41" pos:end="149:100"><name pos:start="149:41" pos:end="149:42">is</name><operator pos:start="149:43" pos:end="149:44">-&gt;</operator><name pos:start="149:45" pos:end="149:49">pictq</name><index pos:start="149:50" pos:end="149:100">[<expr pos:start="149:51" pos:end="149:99"><operator pos:start="149:51" pos:end="149:51">(</operator><name pos:start="149:52" pos:end="149:67"><name pos:start="149:52" pos:end="149:53">is</name><operator pos:start="149:54" pos:end="149:55">-&gt;</operator><name pos:start="149:56" pos:end="149:67">pictq_rindex</name></name> <operator pos:start="149:69" pos:end="149:69">+</operator> <literal type="number" pos:start="149:71" pos:end="149:71">1</literal><operator pos:start="149:72" pos:end="149:72">)</operator> <operator pos:start="149:74" pos:end="149:74">%</operator> <name pos:start="149:76" pos:end="149:99">VIDEO_PICTURE_QUEUE_SIZE</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:49"><expr pos:start="151:17" pos:end="151:48"><name pos:start="151:17" pos:end="151:24">duration</name> <operator pos:start="151:26" pos:end="151:26">=</operator> <name pos:start="151:28" pos:end="151:38"><name pos:start="151:28" pos:end="151:33">nextvp</name><operator pos:start="151:34" pos:end="151:35">-&gt;</operator><name pos:start="151:36" pos:end="151:38">pts</name></name> <operator pos:start="151:40" pos:end="151:40">-</operator> <name pos:start="151:42" pos:end="151:48"><name pos:start="151:42" pos:end="151:43">vp</name><operator pos:start="151:44" pos:end="151:45">-&gt;</operator><name pos:start="151:46" pos:end="151:48">pts</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="153:17" pos:end="165:17"><if pos:start="153:17" pos:end="165:17">if<condition pos:start="153:19" pos:end="153:163">(<expr pos:start="153:20" pos:end="153:162"><operator pos:start="153:20" pos:end="153:20">!</operator><name pos:start="153:21" pos:end="153:28"><name pos:start="153:21" pos:end="153:22">is</name><operator pos:start="153:23" pos:end="153:24">-&gt;</operator><name pos:start="153:25" pos:end="153:28">step</name></name> <operator pos:start="153:30" pos:end="153:31">&amp;&amp;</operator> <operator pos:start="153:33" pos:end="153:33">(</operator><name pos:start="153:34" pos:end="153:42">redisplay</name> <operator pos:start="153:44" pos:end="153:45">||</operator> <name pos:start="153:47" pos:end="153:55">framedrop</name><operator pos:start="153:56" pos:end="153:56">&gt;</operator><literal type="number" pos:start="153:57" pos:end="153:57">0</literal> <operator pos:start="153:59" pos:end="153:60">||</operator> <operator pos:start="153:62" pos:end="153:62">(</operator><name pos:start="153:63" pos:end="153:71">framedrop</name> <operator pos:start="153:73" pos:end="153:74">&amp;&amp;</operator> <call pos:start="153:76" pos:end="153:99"><name pos:start="153:76" pos:end="153:95">get_master_sync_type</name><argument_list pos:start="153:96" pos:end="153:99">(<argument pos:start="153:97" pos:end="153:98"><expr pos:start="153:97" pos:end="153:98"><name pos:start="153:97" pos:end="153:98">is</name></expr></argument>)</argument_list></call> <operator pos:start="153:101" pos:end="153:102">!=</operator> <name pos:start="153:104" pos:end="153:123">AV_SYNC_VIDEO_MASTER</name><operator pos:start="153:124" pos:end="153:124">)</operator><operator pos:start="153:125" pos:end="153:125">)</operator> <operator pos:start="153:127" pos:end="153:128">&amp;&amp;</operator> <name pos:start="153:130" pos:end="153:133">time</name> <operator pos:start="153:135" pos:end="153:135">&gt;</operator> <name pos:start="153:137" pos:end="153:151"><name pos:start="153:137" pos:end="153:138">is</name><operator pos:start="153:139" pos:end="153:140">-&gt;</operator><name pos:start="153:141" pos:end="153:151">frame_timer</name></name> <operator pos:start="153:153" pos:end="153:153">+</operator> <name pos:start="153:155" pos:end="153:162">duration</name></expr>)</condition><block pos:start="153:164" pos:end="165:17">{<block_content pos:start="155:21" pos:end="163:31">

                    <if_stmt pos:start="155:21" pos:end="157:47"><if pos:start="155:21" pos:end="157:47">if <condition pos:start="155:24" pos:end="155:35">(<expr pos:start="155:25" pos:end="155:34"><operator pos:start="155:25" pos:end="155:25">!</operator><name pos:start="155:26" pos:end="155:34">redisplay</name></expr>)</condition><block type="pseudo" pos:start="157:25" pos:end="157:47"><block_content pos:start="157:25" pos:end="157:47">

                        <expr_stmt pos:start="157:25" pos:end="157:47"><expr pos:start="157:25" pos:end="157:46"><name pos:start="157:25" pos:end="157:44"><name pos:start="157:25" pos:end="157:26">is</name><operator pos:start="157:27" pos:end="157:28">-&gt;</operator><name pos:start="157:29" pos:end="157:44">frame_drops_late</name></name><operator pos:start="157:45" pos:end="157:46">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="159:21" pos:end="159:43"><expr pos:start="159:21" pos:end="159:42"><call pos:start="159:21" pos:end="159:42"><name pos:start="159:21" pos:end="159:38">pictq_next_picture</name><argument_list pos:start="159:39" pos:end="159:42">(<argument pos:start="159:40" pos:end="159:41"><expr pos:start="159:40" pos:end="159:41"><name pos:start="159:40" pos:end="159:41">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="161:21" pos:end="161:34"><expr pos:start="161:21" pos:end="161:33"><name pos:start="161:21" pos:end="161:29">redisplay</name> <operator pos:start="161:31" pos:end="161:31">=</operator> <literal type="number" pos:start="161:33" pos:end="161:33">0</literal></expr>;</expr_stmt>

                    <goto pos:start="163:21" pos:end="163:31">goto <name pos:start="163:26" pos:end="163:30">retry</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="171:13" pos:end="225:13"><if pos:start="171:13" pos:end="225:13">if <condition pos:start="171:16" pos:end="171:32">(<expr pos:start="171:17" pos:end="171:31"><name pos:start="171:17" pos:end="171:31"><name pos:start="171:17" pos:end="171:18">is</name><operator pos:start="171:19" pos:end="171:20">-&gt;</operator><name pos:start="171:21" pos:end="171:31">subtitle_st</name></name></expr>)</condition> <block pos:start="171:34" pos:end="225:13">{<block_content pos:start="173:21" pos:end="223:21">

                    <while pos:start="173:21" pos:end="223:21">while <condition pos:start="173:27" pos:end="173:46">(<expr pos:start="173:28" pos:end="173:45"><name pos:start="173:28" pos:end="173:41"><name pos:start="173:28" pos:end="173:29">is</name><operator pos:start="173:30" pos:end="173:31">-&gt;</operator><name pos:start="173:32" pos:end="173:41">subpq_size</name></name> <operator pos:start="173:43" pos:end="173:43">&gt;</operator> <literal type="number" pos:start="173:45" pos:end="173:45">0</literal></expr>)</condition> <block pos:start="173:48" pos:end="223:21">{<block_content pos:start="175:25" pos:end="221:25">

                        <expr_stmt pos:start="175:25" pos:end="175:58"><expr pos:start="175:25" pos:end="175:57"><name pos:start="175:25" pos:end="175:26">sp</name> <operator pos:start="175:28" pos:end="175:28">=</operator> <operator pos:start="175:30" pos:end="175:30">&amp;</operator><name pos:start="175:31" pos:end="175:57"><name pos:start="175:31" pos:end="175:32">is</name><operator pos:start="175:33" pos:end="175:34">-&gt;</operator><name pos:start="175:35" pos:end="175:39">subpq</name><index pos:start="175:40" pos:end="175:57">[<expr pos:start="175:41" pos:end="175:56"><name pos:start="175:41" pos:end="175:56"><name pos:start="175:41" pos:end="175:42">is</name><operator pos:start="175:43" pos:end="175:44">-&gt;</operator><name pos:start="175:45" pos:end="175:56">subpq_rindex</name></name></expr>]</index></name></expr>;</expr_stmt>



                        <if_stmt pos:start="179:25" pos:end="185:39"><if pos:start="179:25" pos:end="181:93">if <condition pos:start="179:28" pos:end="179:47">(<expr pos:start="179:29" pos:end="179:46"><name pos:start="179:29" pos:end="179:42"><name pos:start="179:29" pos:end="179:30">is</name><operator pos:start="179:31" pos:end="179:32">-&gt;</operator><name pos:start="179:33" pos:end="179:42">subpq_size</name></name> <operator pos:start="179:44" pos:end="179:44">&gt;</operator> <literal type="number" pos:start="179:46" pos:end="179:46">1</literal></expr>)</condition><block type="pseudo" pos:start="181:29" pos:end="181:93"><block_content pos:start="181:29" pos:end="181:93">

                            <expr_stmt pos:start="181:29" pos:end="181:93"><expr pos:start="181:29" pos:end="181:92"><name pos:start="181:29" pos:end="181:31">sp2</name> <operator pos:start="181:33" pos:end="181:33">=</operator> <operator pos:start="181:35" pos:end="181:35">&amp;</operator><name pos:start="181:36" pos:end="181:92"><name pos:start="181:36" pos:end="181:37">is</name><operator pos:start="181:38" pos:end="181:39">-&gt;</operator><name pos:start="181:40" pos:end="181:44">subpq</name><index pos:start="181:45" pos:end="181:92">[<expr pos:start="181:46" pos:end="181:91"><operator pos:start="181:46" pos:end="181:46">(</operator><name pos:start="181:47" pos:end="181:62"><name pos:start="181:47" pos:end="181:48">is</name><operator pos:start="181:49" pos:end="181:50">-&gt;</operator><name pos:start="181:51" pos:end="181:62">subpq_rindex</name></name> <operator pos:start="181:64" pos:end="181:64">+</operator> <literal type="number" pos:start="181:66" pos:end="181:66">1</literal><operator pos:start="181:67" pos:end="181:67">)</operator> <operator pos:start="181:69" pos:end="181:69">%</operator> <name pos:start="181:71" pos:end="181:91">SUBPICTURE_QUEUE_SIZE</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="183:25" pos:end="185:39">else<block type="pseudo" pos:start="185:29" pos:end="185:39"><block_content pos:start="185:29" pos:end="185:39">

                            <expr_stmt pos:start="185:29" pos:end="185:39"><expr pos:start="185:29" pos:end="185:38"><name pos:start="185:29" pos:end="185:31">sp2</name> <operator pos:start="185:33" pos:end="185:33">=</operator> <name pos:start="185:35" pos:end="185:38">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                        <if_stmt pos:start="189:25" pos:end="221:25"><if pos:start="189:25" pos:end="217:25">if <condition pos:start="189:28" pos:end="193:119">(<expr pos:start="189:29" pos:end="193:118"><name pos:start="189:29" pos:end="189:38"><name pos:start="189:29" pos:end="189:30">sp</name><operator pos:start="189:31" pos:end="189:32">-&gt;</operator><name pos:start="189:33" pos:end="189:38">serial</name></name> <operator pos:start="189:40" pos:end="189:41">!=</operator> <name pos:start="189:43" pos:end="189:62"><name pos:start="189:43" pos:end="189:44">is</name><operator pos:start="189:45" pos:end="189:46">-&gt;</operator><name pos:start="189:47" pos:end="189:55">subtitleq</name><operator pos:start="189:56" pos:end="189:56">.</operator><name pos:start="189:57" pos:end="189:62">serial</name></name>

                                <operator pos:start="191:33" pos:end="191:34">||</operator> <operator pos:start="191:36" pos:end="191:36">(</operator><name pos:start="191:37" pos:end="191:50"><name pos:start="191:37" pos:end="191:38">is</name><operator pos:start="191:39" pos:end="191:40">-&gt;</operator><name pos:start="191:41" pos:end="191:46">vidclk</name><operator pos:start="191:47" pos:end="191:47">.</operator><name pos:start="191:48" pos:end="191:50">pts</name></name> <operator pos:start="191:52" pos:end="191:52">&gt;</operator> <operator pos:start="191:54" pos:end="191:54">(</operator><name pos:start="191:55" pos:end="191:61"><name pos:start="191:55" pos:end="191:56">sp</name><operator pos:start="191:57" pos:end="191:58">-&gt;</operator><name pos:start="191:59" pos:end="191:61">pts</name></name> <operator pos:start="191:63" pos:end="191:63">+</operator> <operator pos:start="191:65" pos:end="191:65">(</operator><operator pos:start="191:66" pos:end="191:66">(</operator><name pos:start="191:67" pos:end="191:71">float</name><operator pos:start="191:72" pos:end="191:72">)</operator> <name pos:start="191:74" pos:end="191:97"><name pos:start="191:74" pos:end="191:75">sp</name><operator pos:start="191:76" pos:end="191:77">-&gt;</operator><name pos:start="191:78" pos:end="191:80">sub</name><operator pos:start="191:81" pos:end="191:81">.</operator><name pos:start="191:82" pos:end="191:97">end_display_time</name></name> <operator pos:start="191:99" pos:end="191:99">/</operator> <literal type="number" pos:start="191:101" pos:end="191:104">1000</literal><operator pos:start="191:105" pos:end="191:105">)</operator><operator pos:start="191:106" pos:end="191:106">)</operator><operator pos:start="191:107" pos:end="191:107">)</operator>

                                <operator pos:start="193:33" pos:end="193:34">||</operator> <operator pos:start="193:36" pos:end="193:36">(</operator><name pos:start="193:37" pos:end="193:39">sp2</name> <operator pos:start="193:41" pos:end="193:42">&amp;&amp;</operator> <name pos:start="193:44" pos:end="193:57"><name pos:start="193:44" pos:end="193:45">is</name><operator pos:start="193:46" pos:end="193:47">-&gt;</operator><name pos:start="193:48" pos:end="193:53">vidclk</name><operator pos:start="193:54" pos:end="193:54">.</operator><name pos:start="193:55" pos:end="193:57">pts</name></name> <operator pos:start="193:59" pos:end="193:59">&gt;</operator> <operator pos:start="193:61" pos:end="193:61">(</operator><name pos:start="193:62" pos:end="193:69"><name pos:start="193:62" pos:end="193:64">sp2</name><operator pos:start="193:65" pos:end="193:66">-&gt;</operator><name pos:start="193:67" pos:end="193:69">pts</name></name> <operator pos:start="193:71" pos:end="193:71">+</operator> <operator pos:start="193:73" pos:end="193:73">(</operator><operator pos:start="193:74" pos:end="193:74">(</operator><name pos:start="193:75" pos:end="193:79">float</name><operator pos:start="193:80" pos:end="193:80">)</operator> <name pos:start="193:82" pos:end="193:108"><name pos:start="193:82" pos:end="193:84">sp2</name><operator pos:start="193:85" pos:end="193:86">-&gt;</operator><name pos:start="193:87" pos:end="193:89">sub</name><operator pos:start="193:90" pos:end="193:90">.</operator><name pos:start="193:91" pos:end="193:108">start_display_time</name></name> <operator pos:start="193:110" pos:end="193:110">/</operator> <literal type="number" pos:start="193:112" pos:end="193:115">1000</literal><operator pos:start="193:116" pos:end="193:116">)</operator><operator pos:start="193:117" pos:end="193:117">)</operator><operator pos:start="193:118" pos:end="193:118">)</operator></expr>)</condition>

                        <block pos:start="195:25" pos:end="217:25">{<block_content pos:start="197:29" pos:end="215:61">

                            <expr_stmt pos:start="197:29" pos:end="197:48"><expr pos:start="197:29" pos:end="197:47"><call pos:start="197:29" pos:end="197:47"><name pos:start="197:29" pos:end="197:43">free_subpicture</name><argument_list pos:start="197:44" pos:end="197:47">(<argument pos:start="197:45" pos:end="197:46"><expr pos:start="197:45" pos:end="197:46"><name pos:start="197:45" pos:end="197:46">sp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                            <comment type="block" pos:start="201:29" pos:end="201:79">/* update queue size and signal for next picture */</comment>

                            <if_stmt pos:start="203:29" pos:end="205:53"><if pos:start="203:29" pos:end="205:53">if <condition pos:start="203:32" pos:end="203:76">(<expr pos:start="203:33" pos:end="203:75"><operator pos:start="203:33" pos:end="203:34">++</operator><name pos:start="203:35" pos:end="203:50"><name pos:start="203:35" pos:end="203:36">is</name><operator pos:start="203:37" pos:end="203:38">-&gt;</operator><name pos:start="203:39" pos:end="203:50">subpq_rindex</name></name> <operator pos:start="203:52" pos:end="203:53">==</operator> <name pos:start="203:55" pos:end="203:75">SUBPICTURE_QUEUE_SIZE</name></expr>)</condition><block type="pseudo" pos:start="205:33" pos:end="205:53"><block_content pos:start="205:33" pos:end="205:53">

                                <expr_stmt pos:start="205:33" pos:end="205:53"><expr pos:start="205:33" pos:end="205:52"><name pos:start="205:33" pos:end="205:48"><name pos:start="205:33" pos:end="205:34">is</name><operator pos:start="205:35" pos:end="205:36">-&gt;</operator><name pos:start="205:37" pos:end="205:48">subpq_rindex</name></name> <operator pos:start="205:50" pos:end="205:50">=</operator> <literal type="number" pos:start="205:52" pos:end="205:52">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



                            <expr_stmt pos:start="209:29" pos:end="209:59"><expr pos:start="209:29" pos:end="209:58"><call pos:start="209:29" pos:end="209:58"><name pos:start="209:29" pos:end="209:41">SDL_LockMutex</name><argument_list pos:start="209:42" pos:end="209:58">(<argument pos:start="209:43" pos:end="209:57"><expr pos:start="209:43" pos:end="209:57"><name pos:start="209:43" pos:end="209:57"><name pos:start="209:43" pos:end="209:44">is</name><operator pos:start="209:45" pos:end="209:46">-&gt;</operator><name pos:start="209:47" pos:end="209:57">subpq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="211:29" pos:end="211:45"><expr pos:start="211:29" pos:end="211:44"><name pos:start="211:29" pos:end="211:42"><name pos:start="211:29" pos:end="211:30">is</name><operator pos:start="211:31" pos:end="211:32">-&gt;</operator><name pos:start="211:33" pos:end="211:42">subpq_size</name></name><operator pos:start="211:43" pos:end="211:44">--</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="213:29" pos:end="213:59"><expr pos:start="213:29" pos:end="213:58"><call pos:start="213:29" pos:end="213:58"><name pos:start="213:29" pos:end="213:42">SDL_CondSignal</name><argument_list pos:start="213:43" pos:end="213:58">(<argument pos:start="213:44" pos:end="213:57"><expr pos:start="213:44" pos:end="213:57"><name pos:start="213:44" pos:end="213:57"><name pos:start="213:44" pos:end="213:45">is</name><operator pos:start="213:46" pos:end="213:47">-&gt;</operator><name pos:start="213:48" pos:end="213:57">subpq_cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="215:29" pos:end="215:61"><expr pos:start="215:29" pos:end="215:60"><call pos:start="215:29" pos:end="215:60"><name pos:start="215:29" pos:end="215:43">SDL_UnlockMutex</name><argument_list pos:start="215:44" pos:end="215:60">(<argument pos:start="215:45" pos:end="215:59"><expr pos:start="215:45" pos:end="215:59"><name pos:start="215:45" pos:end="215:59"><name pos:start="215:45" pos:end="215:46">is</name><operator pos:start="215:47" pos:end="215:48">-&gt;</operator><name pos:start="215:49" pos:end="215:59">subpq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="217:27" pos:end="221:25">else <block pos:start="217:32" pos:end="221:25">{<block_content pos:start="219:29" pos:end="219:34">

                            <break pos:start="219:29" pos:end="219:34">break;</break>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>



<label pos:start="229:1" pos:end="229:8"><name pos:start="229:1" pos:end="229:7">display</name>:</label>

            <comment type="block" pos:start="231:13" pos:end="231:33">/* display picture */</comment>

            <if_stmt pos:start="233:13" pos:end="235:34"><if pos:start="233:13" pos:end="235:34">if <condition pos:start="233:16" pos:end="233:69">(<expr pos:start="233:17" pos:end="233:68"><operator pos:start="233:17" pos:end="233:17">!</operator><name pos:start="233:18" pos:end="233:32">display_disable</name> <operator pos:start="233:34" pos:end="233:35">&amp;&amp;</operator> <name pos:start="233:37" pos:end="233:49"><name pos:start="233:37" pos:end="233:38">is</name><operator pos:start="233:39" pos:end="233:40">-&gt;</operator><name pos:start="233:41" pos:end="233:49">show_mode</name></name> <operator pos:start="233:51" pos:end="233:52">==</operator> <name pos:start="233:54" pos:end="233:68">SHOW_MODE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="235:17" pos:end="235:34"><block_content pos:start="235:17" pos:end="235:34">

                <expr_stmt pos:start="235:17" pos:end="235:34"><expr pos:start="235:17" pos:end="235:33"><call pos:start="235:17" pos:end="235:33"><name pos:start="235:17" pos:end="235:29">video_display</name><argument_list pos:start="235:30" pos:end="235:33">(<argument pos:start="235:31" pos:end="235:32"><expr pos:start="235:31" pos:end="235:32"><name pos:start="235:31" pos:end="235:32">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="239:13" pos:end="239:35"><expr pos:start="239:13" pos:end="239:34"><call pos:start="239:13" pos:end="239:34"><name pos:start="239:13" pos:end="239:30">pictq_next_picture</name><argument_list pos:start="239:31" pos:end="239:34">(<argument pos:start="239:32" pos:end="239:33"><expr pos:start="239:32" pos:end="239:33"><name pos:start="239:32" pos:end="239:33">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="243:13" pos:end="245:40"><if pos:start="243:13" pos:end="245:40">if <condition pos:start="243:16" pos:end="243:40">(<expr pos:start="243:17" pos:end="243:39"><name pos:start="243:17" pos:end="243:24"><name pos:start="243:17" pos:end="243:18">is</name><operator pos:start="243:19" pos:end="243:20">-&gt;</operator><name pos:start="243:21" pos:end="243:24">step</name></name> <operator pos:start="243:26" pos:end="243:27">&amp;&amp;</operator> <operator pos:start="243:29" pos:end="243:29">!</operator><name pos:start="243:30" pos:end="243:39"><name pos:start="243:30" pos:end="243:31">is</name><operator pos:start="243:32" pos:end="243:33">-&gt;</operator><name pos:start="243:34" pos:end="243:39">paused</name></name></expr>)</condition><block type="pseudo" pos:start="245:17" pos:end="245:40"><block_content pos:start="245:17" pos:end="245:40">

                <expr_stmt pos:start="245:17" pos:end="245:40"><expr pos:start="245:17" pos:end="245:39"><call pos:start="245:17" pos:end="245:39"><name pos:start="245:17" pos:end="245:35">stream_toggle_pause</name><argument_list pos:start="245:36" pos:end="245:39">(<argument pos:start="245:37" pos:end="245:38"><expr pos:start="245:37" pos:end="245:38"><name pos:start="245:37" pos:end="245:38">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:26"><expr pos:start="251:5" pos:end="251:25"><name pos:start="251:5" pos:end="251:21"><name pos:start="251:5" pos:end="251:6">is</name><operator pos:start="251:7" pos:end="251:8">-&gt;</operator><name pos:start="251:9" pos:end="251:21">force_refresh</name></name> <operator pos:start="251:23" pos:end="251:23">=</operator> <literal type="number" pos:start="251:25" pos:end="251:25">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="253:5" pos:end="329:5"><if pos:start="253:5" pos:end="329:5">if <condition pos:start="253:8" pos:end="253:20">(<expr pos:start="253:9" pos:end="253:19"><name pos:start="253:9" pos:end="253:19">show_status</name></expr>)</condition> <block pos:start="253:22" pos:end="329:5">{<block_content pos:start="255:9" pos:end="327:9">

        <decl_stmt pos:start="255:9" pos:end="255:33"><decl pos:start="255:9" pos:end="255:32"><type pos:start="255:9" pos:end="255:22"><specifier pos:start="255:9" pos:end="255:14">static</specifier> <name pos:start="255:16" pos:end="255:22">int64_t</name></type> <name pos:start="255:24" pos:end="255:32">last_time</name></decl>;</decl_stmt>

        <decl_stmt pos:start="257:9" pos:end="257:25"><decl pos:start="257:9" pos:end="257:24"><type pos:start="257:9" pos:end="257:15"><name pos:start="257:9" pos:end="257:15">int64_t</name></type> <name pos:start="257:17" pos:end="257:24">cur_time</name></decl>;</decl_stmt>

        <decl_stmt pos:start="259:9" pos:end="259:35"><decl pos:start="259:9" pos:end="259:18"><type pos:start="259:9" pos:end="259:11"><name pos:start="259:9" pos:end="259:11">int</name></type> <name pos:start="259:13" pos:end="259:18">aqsize</name></decl>, <decl pos:start="259:21" pos:end="259:26"><type ref="prev" pos:start="259:9" pos:end="259:11"/><name pos:start="259:21" pos:end="259:26">vqsize</name></decl>, <decl pos:start="259:29" pos:end="259:34"><type ref="prev" pos:start="259:9" pos:end="259:11"/><name pos:start="259:29" pos:end="259:34">sqsize</name></decl>;</decl_stmt>

        <decl_stmt pos:start="261:9" pos:end="261:23"><decl pos:start="261:9" pos:end="261:22"><type pos:start="261:9" pos:end="261:14"><name pos:start="261:9" pos:end="261:14">double</name></type> <name pos:start="261:16" pos:end="261:22">av_diff</name></decl>;</decl_stmt>



        <expr_stmt pos:start="265:9" pos:end="265:32"><expr pos:start="265:9" pos:end="265:31"><name pos:start="265:9" pos:end="265:16">cur_time</name> <operator pos:start="265:18" pos:end="265:18">=</operator> <call pos:start="265:20" pos:end="265:31"><name pos:start="265:20" pos:end="265:29">av_gettime</name><argument_list pos:start="265:30" pos:end="265:31">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="267:9" pos:end="327:9"><if pos:start="267:9" pos:end="327:9">if <condition pos:start="267:12" pos:end="267:58">(<expr pos:start="267:13" pos:end="267:57"><operator pos:start="267:13" pos:end="267:13">!</operator><name pos:start="267:14" pos:end="267:22">last_time</name> <operator pos:start="267:24" pos:end="267:25">||</operator> <operator pos:start="267:27" pos:end="267:27">(</operator><name pos:start="267:28" pos:end="267:35">cur_time</name> <operator pos:start="267:37" pos:end="267:37">-</operator> <name pos:start="267:39" pos:end="267:47">last_time</name><operator pos:start="267:48" pos:end="267:48">)</operator> <operator pos:start="267:50" pos:end="267:51">&gt;=</operator> <literal type="number" pos:start="267:53" pos:end="267:57">30000</literal></expr>)</condition> <block pos:start="267:60" pos:end="327:9">{<block_content pos:start="269:13" pos:end="325:33">

            <expr_stmt pos:start="269:13" pos:end="269:23"><expr pos:start="269:13" pos:end="269:22"><name pos:start="269:13" pos:end="269:18">aqsize</name> <operator pos:start="269:20" pos:end="269:20">=</operator> <literal type="number" pos:start="269:22" pos:end="269:22">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:23"><expr pos:start="271:13" pos:end="271:22"><name pos:start="271:13" pos:end="271:18">vqsize</name> <operator pos:start="271:20" pos:end="271:20">=</operator> <literal type="number" pos:start="271:22" pos:end="271:22">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:23"><expr pos:start="273:13" pos:end="273:22"><name pos:start="273:13" pos:end="273:18">sqsize</name> <operator pos:start="273:20" pos:end="273:20">=</operator> <literal type="number" pos:start="273:22" pos:end="273:22">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="275:13" pos:end="277:41"><if pos:start="275:13" pos:end="277:41">if <condition pos:start="275:16" pos:end="275:29">(<expr pos:start="275:17" pos:end="275:28"><name pos:start="275:17" pos:end="275:28"><name pos:start="275:17" pos:end="275:18">is</name><operator pos:start="275:19" pos:end="275:20">-&gt;</operator><name pos:start="275:21" pos:end="275:28">audio_st</name></name></expr>)</condition><block type="pseudo" pos:start="277:17" pos:end="277:41"><block_content pos:start="277:17" pos:end="277:41">

                <expr_stmt pos:start="277:17" pos:end="277:41"><expr pos:start="277:17" pos:end="277:40"><name pos:start="277:17" pos:end="277:22">aqsize</name> <operator pos:start="277:24" pos:end="277:24">=</operator> <name pos:start="277:26" pos:end="277:40"><name pos:start="277:26" pos:end="277:27">is</name><operator pos:start="277:28" pos:end="277:29">-&gt;</operator><name pos:start="277:30" pos:end="277:35">audioq</name><operator pos:start="277:36" pos:end="277:36">.</operator><name pos:start="277:37" pos:end="277:40">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="279:13" pos:end="281:41"><if pos:start="279:13" pos:end="281:41">if <condition pos:start="279:16" pos:end="279:29">(<expr pos:start="279:17" pos:end="279:28"><name pos:start="279:17" pos:end="279:28"><name pos:start="279:17" pos:end="279:18">is</name><operator pos:start="279:19" pos:end="279:20">-&gt;</operator><name pos:start="279:21" pos:end="279:28">video_st</name></name></expr>)</condition><block type="pseudo" pos:start="281:17" pos:end="281:41"><block_content pos:start="281:17" pos:end="281:41">

                <expr_stmt pos:start="281:17" pos:end="281:41"><expr pos:start="281:17" pos:end="281:40"><name pos:start="281:17" pos:end="281:22">vqsize</name> <operator pos:start="281:24" pos:end="281:24">=</operator> <name pos:start="281:26" pos:end="281:40"><name pos:start="281:26" pos:end="281:27">is</name><operator pos:start="281:28" pos:end="281:29">-&gt;</operator><name pos:start="281:30" pos:end="281:35">videoq</name><operator pos:start="281:36" pos:end="281:36">.</operator><name pos:start="281:37" pos:end="281:40">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="283:13" pos:end="285:44"><if pos:start="283:13" pos:end="285:44">if <condition pos:start="283:16" pos:end="283:32">(<expr pos:start="283:17" pos:end="283:31"><name pos:start="283:17" pos:end="283:31"><name pos:start="283:17" pos:end="283:18">is</name><operator pos:start="283:19" pos:end="283:20">-&gt;</operator><name pos:start="283:21" pos:end="283:31">subtitle_st</name></name></expr>)</condition><block type="pseudo" pos:start="285:17" pos:end="285:44"><block_content pos:start="285:17" pos:end="285:44">

                <expr_stmt pos:start="285:17" pos:end="285:44"><expr pos:start="285:17" pos:end="285:43"><name pos:start="285:17" pos:end="285:22">sqsize</name> <operator pos:start="285:24" pos:end="285:24">=</operator> <name pos:start="285:26" pos:end="285:43"><name pos:start="285:26" pos:end="285:27">is</name><operator pos:start="285:28" pos:end="285:29">-&gt;</operator><name pos:start="285:30" pos:end="285:38">subtitleq</name><operator pos:start="285:39" pos:end="285:39">.</operator><name pos:start="285:40" pos:end="285:43">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:24"><expr pos:start="287:13" pos:end="287:23"><name pos:start="287:13" pos:end="287:19">av_diff</name> <operator pos:start="287:21" pos:end="287:21">=</operator> <literal type="number" pos:start="287:23" pos:end="287:23">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="289:13" pos:end="299:72"><if pos:start="289:13" pos:end="291:74">if <condition pos:start="289:16" pos:end="289:45">(<expr pos:start="289:17" pos:end="289:44"><name pos:start="289:17" pos:end="289:28"><name pos:start="289:17" pos:end="289:18">is</name><operator pos:start="289:19" pos:end="289:20">-&gt;</operator><name pos:start="289:21" pos:end="289:28">audio_st</name></name> <operator pos:start="289:30" pos:end="289:31">&amp;&amp;</operator> <name pos:start="289:33" pos:end="289:44"><name pos:start="289:33" pos:end="289:34">is</name><operator pos:start="289:35" pos:end="289:36">-&gt;</operator><name pos:start="289:37" pos:end="289:44">video_st</name></name></expr>)</condition><block type="pseudo" pos:start="291:17" pos:end="291:74"><block_content pos:start="291:17" pos:end="291:74">

                <expr_stmt pos:start="291:17" pos:end="291:74"><expr pos:start="291:17" pos:end="291:73"><name pos:start="291:17" pos:end="291:23">av_diff</name> <operator pos:start="291:25" pos:end="291:25">=</operator> <call pos:start="291:27" pos:end="291:48"><name pos:start="291:27" pos:end="291:35">get_clock</name><argument_list pos:start="291:36" pos:end="291:48">(<argument pos:start="291:37" pos:end="291:47"><expr pos:start="291:37" pos:end="291:47"><operator pos:start="291:37" pos:end="291:37">&amp;</operator><name pos:start="291:38" pos:end="291:47"><name pos:start="291:38" pos:end="291:39">is</name><operator pos:start="291:40" pos:end="291:41">-&gt;</operator><name pos:start="291:42" pos:end="291:47">audclk</name></name></expr></argument>)</argument_list></call> <operator pos:start="291:50" pos:end="291:50">-</operator> <call pos:start="291:52" pos:end="291:73"><name pos:start="291:52" pos:end="291:60">get_clock</name><argument_list pos:start="291:61" pos:end="291:73">(<argument pos:start="291:62" pos:end="291:72"><expr pos:start="291:62" pos:end="291:72"><operator pos:start="291:62" pos:end="291:62">&amp;</operator><name pos:start="291:63" pos:end="291:72"><name pos:start="291:63" pos:end="291:64">is</name><operator pos:start="291:65" pos:end="291:66">-&gt;</operator><name pos:start="291:67" pos:end="291:72">vidclk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="293:13" pos:end="295:72">else if <condition pos:start="293:21" pos:end="293:34">(<expr pos:start="293:22" pos:end="293:33"><name pos:start="293:22" pos:end="293:33"><name pos:start="293:22" pos:end="293:23">is</name><operator pos:start="293:24" pos:end="293:25">-&gt;</operator><name pos:start="293:26" pos:end="293:33">video_st</name></name></expr>)</condition><block type="pseudo" pos:start="295:17" pos:end="295:72"><block_content pos:start="295:17" pos:end="295:72">

                <expr_stmt pos:start="295:17" pos:end="295:72"><expr pos:start="295:17" pos:end="295:71"><name pos:start="295:17" pos:end="295:23">av_diff</name> <operator pos:start="295:25" pos:end="295:25">=</operator> <call pos:start="295:27" pos:end="295:46"><name pos:start="295:27" pos:end="295:42">get_master_clock</name><argument_list pos:start="295:43" pos:end="295:46">(<argument pos:start="295:44" pos:end="295:45"><expr pos:start="295:44" pos:end="295:45"><name pos:start="295:44" pos:end="295:45">is</name></expr></argument>)</argument_list></call> <operator pos:start="295:48" pos:end="295:48">-</operator> <call pos:start="295:50" pos:end="295:71"><name pos:start="295:50" pos:end="295:58">get_clock</name><argument_list pos:start="295:59" pos:end="295:71">(<argument pos:start="295:60" pos:end="295:70"><expr pos:start="295:60" pos:end="295:70"><operator pos:start="295:60" pos:end="295:60">&amp;</operator><name pos:start="295:61" pos:end="295:70"><name pos:start="295:61" pos:end="295:62">is</name><operator pos:start="295:63" pos:end="295:64">-&gt;</operator><name pos:start="295:65" pos:end="295:70">vidclk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="297:13" pos:end="299:72">else if <condition pos:start="297:21" pos:end="297:34">(<expr pos:start="297:22" pos:end="297:33"><name pos:start="297:22" pos:end="297:33"><name pos:start="297:22" pos:end="297:23">is</name><operator pos:start="297:24" pos:end="297:25">-&gt;</operator><name pos:start="297:26" pos:end="297:33">audio_st</name></name></expr>)</condition><block type="pseudo" pos:start="299:17" pos:end="299:72"><block_content pos:start="299:17" pos:end="299:72">

                <expr_stmt pos:start="299:17" pos:end="299:72"><expr pos:start="299:17" pos:end="299:71"><name pos:start="299:17" pos:end="299:23">av_diff</name> <operator pos:start="299:25" pos:end="299:25">=</operator> <call pos:start="299:27" pos:end="299:46"><name pos:start="299:27" pos:end="299:42">get_master_clock</name><argument_list pos:start="299:43" pos:end="299:46">(<argument pos:start="299:44" pos:end="299:45"><expr pos:start="299:44" pos:end="299:45"><name pos:start="299:44" pos:end="299:45">is</name></expr></argument>)</argument_list></call> <operator pos:start="299:48" pos:end="299:48">-</operator> <call pos:start="299:50" pos:end="299:71"><name pos:start="299:50" pos:end="299:58">get_clock</name><argument_list pos:start="299:59" pos:end="299:71">(<argument pos:start="299:60" pos:end="299:70"><expr pos:start="299:60" pos:end="299:70"><operator pos:start="299:60" pos:end="299:60">&amp;</operator><name pos:start="299:61" pos:end="299:70"><name pos:start="299:61" pos:end="299:62">is</name><operator pos:start="299:63" pos:end="299:64">-&gt;</operator><name pos:start="299:65" pos:end="299:70">audclk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="301:13" pos:end="321:90"><expr pos:start="301:13" pos:end="321:89"><call pos:start="301:13" pos:end="321:89"><name pos:start="301:13" pos:end="301:18">av_log</name><argument_list pos:start="301:19" pos:end="321:89">(<argument pos:start="301:20" pos:end="301:23"><expr pos:start="301:20" pos:end="301:23"><name pos:start="301:20" pos:end="301:23">NULL</name></expr></argument>, <argument pos:start="301:26" pos:end="301:36"><expr pos:start="301:26" pos:end="301:36"><name pos:start="301:26" pos:end="301:36">AV_LOG_INFO</name></expr></argument>,

                   <argument pos:start="303:20" pos:end="303:95"><expr pos:start="303:20" pos:end="303:95"><literal type="string" pos:start="303:20" pos:end="303:72">"%7.2f %s:%7.3f fd=%4d aq=%5dKB vq=%5dKB sq=%5dB f=%"</literal><name pos:start="303:73" pos:end="303:78">PRId64</name><literal type="string" pos:start="303:79" pos:end="303:82">"/%"</literal><name pos:start="303:83" pos:end="303:88">PRId64</name><literal type="string" pos:start="303:89" pos:end="303:95">"   \r"</literal></expr></argument>,

                   <argument pos:start="305:20" pos:end="305:39"><expr pos:start="305:20" pos:end="305:39"><call pos:start="305:20" pos:end="305:39"><name pos:start="305:20" pos:end="305:35">get_master_clock</name><argument_list pos:start="305:36" pos:end="305:39">(<argument pos:start="305:37" pos:end="305:38"><expr pos:start="305:37" pos:end="305:38"><name pos:start="305:37" pos:end="305:38">is</name></expr></argument>)</argument_list></call></expr></argument>,

                   <argument pos:start="307:20" pos:end="307:115"><expr pos:start="307:20" pos:end="307:115"><ternary pos:start="307:20" pos:end="307:115"><condition pos:start="307:20" pos:end="307:51"><expr pos:start="307:20" pos:end="307:49"><operator pos:start="307:20" pos:end="307:20">(</operator><name pos:start="307:21" pos:end="307:32"><name pos:start="307:21" pos:end="307:22">is</name><operator pos:start="307:23" pos:end="307:24">-&gt;</operator><name pos:start="307:25" pos:end="307:32">audio_st</name></name> <operator pos:start="307:34" pos:end="307:35">&amp;&amp;</operator> <name pos:start="307:37" pos:end="307:48"><name pos:start="307:37" pos:end="307:38">is</name><operator pos:start="307:39" pos:end="307:40">-&gt;</operator><name pos:start="307:41" pos:end="307:48">video_st</name></name><operator pos:start="307:49" pos:end="307:49">)</operator></expr> ?</condition><then pos:start="307:53" pos:end="307:57"> <expr pos:start="307:53" pos:end="307:57"><literal type="string" pos:start="307:53" pos:end="307:57">"A-V"</literal></expr> </then><else pos:start="307:59" pos:end="307:115">: <expr pos:start="307:61" pos:end="307:115"><operator pos:start="307:61" pos:end="307:61">(</operator><ternary pos:start="307:62" pos:end="307:114"><condition pos:start="307:62" pos:end="307:75"><expr pos:start="307:62" pos:end="307:73"><name pos:start="307:62" pos:end="307:73"><name pos:start="307:62" pos:end="307:63">is</name><operator pos:start="307:64" pos:end="307:65">-&gt;</operator><name pos:start="307:66" pos:end="307:73">video_st</name></name></expr> ?</condition><then pos:start="307:77" pos:end="307:81"> <expr pos:start="307:77" pos:end="307:81"><literal type="string" pos:start="307:77" pos:end="307:81">"M-V"</literal></expr> </then><else pos:start="307:83" pos:end="307:114">: <expr pos:start="307:85" pos:end="307:114"><operator pos:start="307:85" pos:end="307:85">(</operator><ternary pos:start="307:86" pos:end="307:113"><condition pos:start="307:86" pos:end="307:99"><expr pos:start="307:86" pos:end="307:97"><name pos:start="307:86" pos:end="307:97"><name pos:start="307:86" pos:end="307:87">is</name><operator pos:start="307:88" pos:end="307:89">-&gt;</operator><name pos:start="307:90" pos:end="307:97">audio_st</name></name></expr> ?</condition><then pos:start="307:101" pos:end="307:105"> <expr pos:start="307:101" pos:end="307:105"><literal type="string" pos:start="307:101" pos:end="307:105">"M-A"</literal></expr> </then><else pos:start="307:107" pos:end="307:113">: <expr pos:start="307:109" pos:end="307:113"><literal type="string" pos:start="307:109" pos:end="307:113">"   "</literal></expr></else></ternary><operator pos:start="307:114" pos:end="307:114">)</operator></expr></else></ternary><operator pos:start="307:115" pos:end="307:115">)</operator></expr></else></ternary></expr></argument>,

                   <argument pos:start="309:20" pos:end="309:26"><expr pos:start="309:20" pos:end="309:26"><name pos:start="309:20" pos:end="309:26">av_diff</name></expr></argument>,

                   <argument pos:start="311:20" pos:end="311:63"><expr pos:start="311:20" pos:end="311:63"><name pos:start="311:20" pos:end="311:40"><name pos:start="311:20" pos:end="311:21">is</name><operator pos:start="311:22" pos:end="311:23">-&gt;</operator><name pos:start="311:24" pos:end="311:40">frame_drops_early</name></name> <operator pos:start="311:42" pos:end="311:42">+</operator> <name pos:start="311:44" pos:end="311:63"><name pos:start="311:44" pos:end="311:45">is</name><operator pos:start="311:46" pos:end="311:47">-&gt;</operator><name pos:start="311:48" pos:end="311:63">frame_drops_late</name></name></expr></argument>,

                   <argument pos:start="313:20" pos:end="313:32"><expr pos:start="313:20" pos:end="313:32"><name pos:start="313:20" pos:end="313:25">aqsize</name> <operator pos:start="313:27" pos:end="313:27">/</operator> <literal type="number" pos:start="313:29" pos:end="313:32">1024</literal></expr></argument>,

                   <argument pos:start="315:20" pos:end="315:32"><expr pos:start="315:20" pos:end="315:32"><name pos:start="315:20" pos:end="315:25">vqsize</name> <operator pos:start="315:27" pos:end="315:27">/</operator> <literal type="number" pos:start="315:29" pos:end="315:32">1024</literal></expr></argument>,

                   <argument pos:start="317:20" pos:end="317:25"><expr pos:start="317:20" pos:end="317:25"><name pos:start="317:20" pos:end="317:25">sqsize</name></expr></argument>,

                   <argument pos:start="319:20" pos:end="319:88"><expr pos:start="319:20" pos:end="319:88"><ternary pos:start="319:20" pos:end="319:88"><condition pos:start="319:20" pos:end="319:33"><expr pos:start="319:20" pos:end="319:31"><name pos:start="319:20" pos:end="319:31"><name pos:start="319:20" pos:end="319:21">is</name><operator pos:start="319:22" pos:end="319:23">-&gt;</operator><name pos:start="319:24" pos:end="319:31">video_st</name></name></expr> ?</condition><then pos:start="319:35" pos:end="319:84"> <expr pos:start="319:35" pos:end="319:84"><name pos:start="319:35" pos:end="319:84"><name pos:start="319:35" pos:end="319:36">is</name><operator pos:start="319:37" pos:end="319:38">-&gt;</operator><name pos:start="319:39" pos:end="319:46">video_st</name><operator pos:start="319:47" pos:end="319:48">-&gt;</operator><name pos:start="319:49" pos:end="319:53">codec</name><operator pos:start="319:54" pos:end="319:55">-&gt;</operator><name pos:start="319:56" pos:end="319:84">pts_correction_num_faulty_dts</name></name></expr> </then><else pos:start="319:86" pos:end="319:88">: <expr pos:start="319:88" pos:end="319:88"><literal type="number" pos:start="319:88" pos:end="319:88">0</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="321:20" pos:end="321:88"><expr pos:start="321:20" pos:end="321:88"><ternary pos:start="321:20" pos:end="321:88"><condition pos:start="321:20" pos:end="321:33"><expr pos:start="321:20" pos:end="321:31"><name pos:start="321:20" pos:end="321:31"><name pos:start="321:20" pos:end="321:21">is</name><operator pos:start="321:22" pos:end="321:23">-&gt;</operator><name pos:start="321:24" pos:end="321:31">video_st</name></name></expr> ?</condition><then pos:start="321:35" pos:end="321:84"> <expr pos:start="321:35" pos:end="321:84"><name pos:start="321:35" pos:end="321:84"><name pos:start="321:35" pos:end="321:36">is</name><operator pos:start="321:37" pos:end="321:38">-&gt;</operator><name pos:start="321:39" pos:end="321:46">video_st</name><operator pos:start="321:47" pos:end="321:48">-&gt;</operator><name pos:start="321:49" pos:end="321:53">codec</name><operator pos:start="321:54" pos:end="321:55">-&gt;</operator><name pos:start="321:56" pos:end="321:84">pts_correction_num_faulty_pts</name></name></expr> </then><else pos:start="321:86" pos:end="321:88">: <expr pos:start="321:88" pos:end="321:88"><literal type="number" pos:start="321:88" pos:end="321:88">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:27"><expr pos:start="323:13" pos:end="323:26"><call pos:start="323:13" pos:end="323:26"><name pos:start="323:13" pos:end="323:18">fflush</name><argument_list pos:start="323:19" pos:end="323:26">(<argument pos:start="323:20" pos:end="323:25"><expr pos:start="323:20" pos:end="323:25"><name pos:start="323:20" pos:end="323:25">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="325:13" pos:end="325:33"><expr pos:start="325:13" pos:end="325:32"><name pos:start="325:13" pos:end="325:21">last_time</name> <operator pos:start="325:23" pos:end="325:23">=</operator> <name pos:start="325:25" pos:end="325:32">cur_time</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
