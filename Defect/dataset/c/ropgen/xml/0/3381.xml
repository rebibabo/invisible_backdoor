<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3381.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">nut_read_header</name><parameter_list pos:start="1:27" pos:end="1:74">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:48"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type> <name pos:start="1:46" pos:end="1:48">avf</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:73"><decl pos:start="1:51" pos:end="1:73"><type pos:start="1:51" pos:end="1:73"><name pos:start="1:51" pos:end="1:68">AVFormatParameters</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type> <name pos:start="1:72" pos:end="1:73">ap</name></decl></parameter>)</parameter_list> <block pos:start="1:76" pos:end="139:1">{<block_content pos:start="3:5" pos:end="137:13">

    <decl_stmt pos:start="3:5" pos:end="3:39"><decl pos:start="3:5" pos:end="3:38"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14">NUTContext</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type> <name pos:start="3:18" pos:end="3:21">priv</name> <init pos:start="3:23" pos:end="3:38">= <expr pos:start="3:25" pos:end="3:38"><name pos:start="3:25" pos:end="3:38"><name pos:start="3:25" pos:end="3:27">avf</name><operator pos:start="3:28" pos:end="3:29">-&gt;</operator><name pos:start="3:30" pos:end="3:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ByteIOContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type> <name pos:start="5:21" pos:end="5:22">bc</name> <init pos:start="5:24" pos:end="5:33">= <expr pos:start="5:26" pos:end="5:33"><operator pos:start="5:26" pos:end="5:26">&amp;</operator><name pos:start="5:27" pos:end="5:33"><name pos:start="5:27" pos:end="5:29">avf</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:33">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="29:6"><decl pos:start="7:5" pos:end="29:5"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">nut_demuxer_opts_t</name></type> <name pos:start="7:24" pos:end="7:28">dopts</name> <init pos:start="7:30" pos:end="29:5">= <expr pos:start="7:32" pos:end="29:5"><block pos:start="7:32" pos:end="29:5">{

        <expr pos:start="9:9" pos:end="21:9"><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:14">input</name> <operator pos:start="9:16" pos:end="9:16">=</operator> <block pos:start="9:18" pos:end="21:9">{

            <expr pos:start="11:13" pos:end="11:22"><operator pos:start="11:13" pos:end="11:13">.</operator><name pos:start="11:14" pos:end="11:17">priv</name> <operator pos:start="11:19" pos:end="11:19">=</operator> <name pos:start="11:21" pos:end="11:22">bc</name></expr>,

            <expr pos:start="13:13" pos:end="13:27"><operator pos:start="13:13" pos:end="13:13">.</operator><name pos:start="13:14" pos:end="13:17">seek</name> <operator pos:start="13:19" pos:end="13:19">=</operator> <name pos:start="13:21" pos:end="13:27">av_seek</name></expr>,

            <expr pos:start="15:13" pos:end="15:27"><operator pos:start="15:13" pos:end="15:13">.</operator><name pos:start="15:14" pos:end="15:17">read</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:27">av_read</name></expr>,

            <expr pos:start="17:13" pos:end="17:23"><operator pos:start="17:13" pos:end="17:13">.</operator><name pos:start="17:14" pos:end="17:16">eof</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:23">NULL</name></expr>,

            <expr pos:start="19:13" pos:end="19:25"><operator pos:start="19:13" pos:end="19:13">.</operator><name pos:start="19:14" pos:end="19:21">file_pos</name> <operator pos:start="19:23" pos:end="19:23">=</operator> <literal type="number" pos:start="19:25" pos:end="19:25">0</literal></expr>,

        }</block></expr>,

        <expr pos:start="23:9" pos:end="23:51"><operator pos:start="23:9" pos:end="23:9">.</operator><name pos:start="23:10" pos:end="23:14">alloc</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <block pos:start="23:18" pos:end="23:51">{ <expr pos:start="23:20" pos:end="23:28"><name pos:start="23:20" pos:end="23:28">av_malloc</name></expr>, <expr pos:start="23:31" pos:end="23:40"><name pos:start="23:31" pos:end="23:40">av_realloc</name></expr>, <expr pos:start="23:43" pos:end="23:49"><name pos:start="23:43" pos:end="23:49">av_free</name></expr> }</block></expr>,

        <expr pos:start="25:9" pos:end="25:23"><operator pos:start="25:9" pos:end="25:9">.</operator><name pos:start="25:10" pos:end="25:19">read_index</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <literal type="number" pos:start="25:23" pos:end="25:23">1</literal></expr>,

        <expr pos:start="27:9" pos:end="27:29"><operator pos:start="27:9" pos:end="27:9">.</operator><name pos:start="27:10" pos:end="27:25">cache_syncpoints</name> <operator pos:start="27:27" pos:end="27:27">=</operator> <literal type="number" pos:start="27:29" pos:end="27:29">1</literal></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:63"><decl pos:start="31:5" pos:end="31:62"><type pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:17">nut_context_t</name> <modifier pos:start="31:19" pos:end="31:19">*</modifier></type> <name pos:start="31:21" pos:end="31:23">nut</name> <init pos:start="31:25" pos:end="31:62">= <expr pos:start="31:27" pos:end="31:62"><name pos:start="31:27" pos:end="31:35"><name pos:start="31:27" pos:end="31:30">priv</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:35">nut</name></name> <operator pos:start="31:37" pos:end="31:37">=</operator> <call pos:start="31:39" pos:end="31:62"><name pos:start="31:39" pos:end="31:54">nut_demuxer_init</name><argument_list pos:start="31:55" pos:end="31:62">(<argument pos:start="31:56" pos:end="31:61"><expr pos:start="31:56" pos:end="31:61"><operator pos:start="31:56" pos:end="31:56">&amp;</operator><name pos:start="31:57" pos:end="31:61">dopts</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:28"><decl pos:start="33:5" pos:end="33:27"><type pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:23">nut_stream_header_t</name> <modifier pos:start="33:25" pos:end="33:25">*</modifier></type> <name pos:start="33:27" pos:end="33:27">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:15"><decl pos:start="35:5" pos:end="35:11"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:11">ret</name></decl>, <decl pos:start="35:14" pos:end="35:14"><type ref="prev" pos:start="35:5" pos:end="35:7"/><name pos:start="35:14" pos:end="35:14">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:48">(<expr pos:start="39:9" pos:end="39:47"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:12">ret</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:46"><name pos:start="39:16" pos:end="39:31">nut_read_headers</name><argument_list pos:start="39:32" pos:end="39:46">(<argument pos:start="39:33" pos:end="39:35"><expr pos:start="39:33" pos:end="39:35"><name pos:start="39:33" pos:end="39:35">nut</name></expr></argument>, <argument pos:start="39:38" pos:end="39:39"><expr pos:start="39:38" pos:end="39:39"><operator pos:start="39:38" pos:end="39:38">&amp;</operator><name pos:start="39:39" pos:end="39:39">s</name></expr></argument>, <argument pos:start="39:42" pos:end="39:45"><expr pos:start="39:42" pos:end="39:45"><name pos:start="39:42" pos:end="39:45">NULL</name></expr></argument>)</argument_list></call><operator pos:start="39:47" pos:end="39:47">)</operator></expr>)</condition> <block pos:start="39:50" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:18">

        <if_stmt pos:start="41:9" pos:end="41:84"><if pos:start="41:9" pos:end="41:84">if <condition pos:start="41:12" pos:end="41:20">(<expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">&lt;</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition><block type="pseudo" pos:start="41:22" pos:end="41:84"><block_content pos:start="41:22" pos:end="41:84"> <expr_stmt pos:start="41:22" pos:end="41:84"><expr pos:start="41:22" pos:end="41:83"><call pos:start="41:22" pos:end="41:83"><name pos:start="41:22" pos:end="41:27">av_log</name><argument_list pos:start="41:28" pos:end="41:83">(<argument pos:start="41:29" pos:end="41:31"><expr pos:start="41:29" pos:end="41:31"><name pos:start="41:29" pos:end="41:31">avf</name></expr></argument>, <argument pos:start="41:34" pos:end="41:45"><expr pos:start="41:34" pos:end="41:45"><name pos:start="41:34" pos:end="41:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:48" pos:end="41:65"><expr pos:start="41:48" pos:end="41:65"><literal type="string" pos:start="41:48" pos:end="41:65">" NUT error: %s\n"</literal></expr></argument>, <argument pos:start="41:68" pos:end="41:82"><expr pos:start="41:68" pos:end="41:82"><call pos:start="41:68" pos:end="41:82"><name pos:start="41:68" pos:end="41:76">nut_error</name><argument_list pos:start="41:77" pos:end="41:82">(<argument pos:start="41:78" pos:end="41:81"><expr pos:start="41:78" pos:end="41:81"><operator pos:start="41:78" pos:end="41:78">-</operator><name pos:start="41:79" pos:end="41:81">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:32"><expr pos:start="43:9" pos:end="43:31"><call pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:26">nut_demuxer_uninit</name><argument_list pos:start="43:27" pos:end="43:31">(<argument pos:start="43:28" pos:end="43:30"><expr pos:start="43:28" pos:end="43:30"><name pos:start="43:28" pos:end="43:30">nut</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:18">return <expr pos:start="45:16" pos:end="45:17"><operator pos:start="45:16" pos:end="45:16">-</operator><literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:16"><expr pos:start="51:5" pos:end="51:15"><name pos:start="51:5" pos:end="51:11"><name pos:start="51:5" pos:end="51:8">priv</name><operator pos:start="51:9" pos:end="51:10">-&gt;</operator><name pos:start="51:11" pos:end="51:11">s</name></name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:15">s</name></expr>;</expr_stmt>



    <for pos:start="55:5" pos:end="133:5">for <control pos:start="55:9" pos:end="55:46">(<init pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:10">i</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>;</init> <condition pos:start="55:17" pos:end="55:41"><expr pos:start="55:17" pos:end="55:40"><name pos:start="55:17" pos:end="55:20"><name pos:start="55:17" pos:end="55:17">s</name><index pos:start="55:18" pos:end="55:20">[<expr pos:start="55:19" pos:end="55:19"><name pos:start="55:19" pos:end="55:19">i</name></expr>]</index></name><operator pos:start="55:21" pos:end="55:21">.</operator><name pos:start="55:22" pos:end="55:25">type</name> <operator pos:start="55:27" pos:end="55:28">!=</operator> <operator pos:start="55:30" pos:end="55:30">-</operator><literal type="number" pos:start="55:31" pos:end="55:31">1</literal> <operator pos:start="55:33" pos:end="55:34">&amp;&amp;</operator> <name pos:start="55:36" pos:end="55:36">i</name> <operator pos:start="55:38" pos:end="55:38">&lt;</operator> <literal type="number" pos:start="55:40" pos:end="55:40">2</literal></expr>;</condition> <incr pos:start="55:43" pos:end="55:45"><expr pos:start="55:43" pos:end="55:45"><name pos:start="55:43" pos:end="55:43">i</name><operator pos:start="55:44" pos:end="55:45">++</operator></expr></incr>)</control> <block pos:start="55:48" pos:end="133:5">{<block_content pos:start="57:9" pos:end="131:97">

        <decl_stmt pos:start="57:9" pos:end="57:46"><decl pos:start="57:9" pos:end="57:45"><type pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:16">AVStream</name> <modifier pos:start="57:18" pos:end="57:18">*</modifier></type> <name pos:start="57:20" pos:end="57:21">st</name> <init pos:start="57:23" pos:end="57:45">= <expr pos:start="57:25" pos:end="57:45"><call pos:start="57:25" pos:end="57:45"><name pos:start="57:25" pos:end="57:37">av_new_stream</name><argument_list pos:start="57:38" pos:end="57:45">(<argument pos:start="57:39" pos:end="57:41"><expr pos:start="57:39" pos:end="57:41"><name pos:start="57:39" pos:end="57:41">avf</name></expr></argument>, <argument pos:start="57:44" pos:end="57:44"><expr pos:start="57:44" pos:end="57:44"><name pos:start="57:44" pos:end="57:44">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="59:9" pos:end="59:14"><decl pos:start="59:9" pos:end="59:13"><type pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">int</name></type> <name pos:start="59:13" pos:end="59:13">j</name></decl>;</decl_stmt>



        <for pos:start="63:9" pos:end="63:101">for <control pos:start="63:13" pos:end="63:54">(<init pos:start="63:14" pos:end="63:19"><expr pos:start="63:14" pos:end="63:18"><name pos:start="63:14" pos:end="63:14">j</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <literal type="number" pos:start="63:18" pos:end="63:18">0</literal></expr>;</init> <condition pos:start="63:21" pos:end="63:49"><expr pos:start="63:21" pos:end="63:48"><name pos:start="63:21" pos:end="63:21">j</name> <operator pos:start="63:23" pos:end="63:23">&lt;</operator> <name pos:start="63:25" pos:end="63:28"><name pos:start="63:25" pos:end="63:25">s</name><index pos:start="63:26" pos:end="63:28">[<expr pos:start="63:27" pos:end="63:27"><name pos:start="63:27" pos:end="63:27">i</name></expr>]</index></name><operator pos:start="63:29" pos:end="63:29">.</operator><name pos:start="63:30" pos:end="63:39">fourcc_len</name> <operator pos:start="63:41" pos:end="63:42">&amp;&amp;</operator> <name pos:start="63:44" pos:end="63:44">j</name> <operator pos:start="63:46" pos:end="63:46">&lt;</operator> <literal type="number" pos:start="63:48" pos:end="63:48">8</literal></expr>;</condition> <incr pos:start="63:51" pos:end="63:53"><expr pos:start="63:51" pos:end="63:53"><name pos:start="63:51" pos:end="63:51">j</name><operator pos:start="63:52" pos:end="63:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="63:56" pos:end="63:101"><block_content pos:start="63:56" pos:end="63:101"> <expr_stmt pos:start="63:56" pos:end="63:101"><expr pos:start="63:56" pos:end="63:100"><name pos:start="63:56" pos:end="63:75"><name pos:start="63:56" pos:end="63:57">st</name><operator pos:start="63:58" pos:end="63:59">-&gt;</operator><name pos:start="63:60" pos:end="63:64">codec</name><operator pos:start="63:65" pos:end="63:66">-&gt;</operator><name pos:start="63:67" pos:end="63:75">codec_tag</name></name> <operator pos:start="63:77" pos:end="63:78">|=</operator> <name pos:start="63:80" pos:end="63:83"><name pos:start="63:80" pos:end="63:80">s</name><index pos:start="63:81" pos:end="63:83">[<expr pos:start="63:82" pos:end="63:82"><name pos:start="63:82" pos:end="63:82">i</name></expr>]</index></name><operator pos:start="63:84" pos:end="63:84">.</operator><name pos:start="63:85" pos:end="63:93"><name pos:start="63:85" pos:end="63:90">fourcc</name><index pos:start="63:91" pos:end="63:93">[<expr pos:start="63:92" pos:end="63:92"><name pos:start="63:92" pos:end="63:92">j</name></expr>]</index></name><operator pos:start="63:94" pos:end="63:95">&lt;&lt;</operator><operator pos:start="63:96" pos:end="63:96">(</operator><name pos:start="63:97" pos:end="63:97">j</name><operator pos:start="63:98" pos:end="63:98">*</operator><literal type="number" pos:start="63:99" pos:end="63:99">8</literal><operator pos:start="63:100" pos:end="63:100">)</operator></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="67:9" pos:end="67:52"><expr pos:start="67:9" pos:end="67:51"><name pos:start="67:9" pos:end="67:31"><name pos:start="67:9" pos:end="67:10">st</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:17">codec</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:31">has_b_frames</name></name> <operator pos:start="67:33" pos:end="67:33">=</operator> <name pos:start="67:35" pos:end="67:38"><name pos:start="67:35" pos:end="67:35">s</name><index pos:start="67:36" pos:end="67:38">[<expr pos:start="67:37" pos:end="67:37"><name pos:start="67:37" pos:end="67:37">i</name></expr>]</index></name><operator pos:start="67:39" pos:end="67:39">.</operator><name pos:start="67:40" pos:end="67:51">decode_delay</name></expr>;</expr_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:60"><expr pos:start="71:9" pos:end="71:59"><name pos:start="71:9" pos:end="71:33"><name pos:start="71:9" pos:end="71:10">st</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:17">codec</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:33">extradata_size</name></name> <operator pos:start="71:35" pos:end="71:35">=</operator> <name pos:start="71:37" pos:end="71:40"><name pos:start="71:37" pos:end="71:37">s</name><index pos:start="71:38" pos:end="71:40">[<expr pos:start="71:39" pos:end="71:39"><name pos:start="71:39" pos:end="71:39">i</name></expr>]</index></name><operator pos:start="71:41" pos:end="71:41">.</operator><name pos:start="71:42" pos:end="71:59">codec_specific_len</name></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="79:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="73:38">(<expr pos:start="73:13" pos:end="73:37"><name pos:start="73:13" pos:end="73:37"><name pos:start="73:13" pos:end="73:14">st</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:21">codec</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:37">extradata_size</name></name></expr>)</condition> <block pos:start="73:40" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:89">

            <expr_stmt pos:start="75:13" pos:end="75:73"><expr pos:start="75:13" pos:end="75:72"><name pos:start="75:13" pos:end="75:32"><name pos:start="75:13" pos:end="75:14">st</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:21">codec</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:32">extradata</name></name> <operator pos:start="75:34" pos:end="75:34">=</operator> <call pos:start="75:36" pos:end="75:72"><name pos:start="75:36" pos:end="75:45">av_mallocz</name><argument_list pos:start="75:46" pos:end="75:72">(<argument pos:start="75:47" pos:end="75:71"><expr pos:start="75:47" pos:end="75:71"><name pos:start="75:47" pos:end="75:71"><name pos:start="75:47" pos:end="75:48">st</name><operator pos:start="75:49" pos:end="75:50">-&gt;</operator><name pos:start="75:51" pos:end="75:55">codec</name><operator pos:start="75:56" pos:end="75:57">-&gt;</operator><name pos:start="75:58" pos:end="75:71">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:89"><expr pos:start="77:13" pos:end="77:88"><call pos:start="77:13" pos:end="77:88"><name pos:start="77:13" pos:end="77:18">memcpy</name><argument_list pos:start="77:19" pos:end="77:88">(<argument pos:start="77:20" pos:end="77:39"><expr pos:start="77:20" pos:end="77:39"><name pos:start="77:20" pos:end="77:39"><name pos:start="77:20" pos:end="77:21">st</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:28">codec</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:39">extradata</name></name></expr></argument>, <argument pos:start="77:42" pos:end="77:60"><expr pos:start="77:42" pos:end="77:60"><name pos:start="77:42" pos:end="77:45"><name pos:start="77:42" pos:end="77:42">s</name><index pos:start="77:43" pos:end="77:45">[<expr pos:start="77:44" pos:end="77:44"><name pos:start="77:44" pos:end="77:44">i</name></expr>]</index></name><operator pos:start="77:46" pos:end="77:46">.</operator><name pos:start="77:47" pos:end="77:60">codec_specific</name></expr></argument>, <argument pos:start="77:63" pos:end="77:87"><expr pos:start="77:63" pos:end="77:87"><name pos:start="77:63" pos:end="77:87"><name pos:start="77:63" pos:end="77:64">st</name><operator pos:start="77:65" pos:end="77:66">-&gt;</operator><name pos:start="77:67" pos:end="77:71">codec</name><operator pos:start="77:72" pos:end="77:73">-&gt;</operator><name pos:start="77:74" pos:end="77:87">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:85"><expr pos:start="83:9" pos:end="83:84"><call pos:start="83:9" pos:end="83:84"><name pos:start="83:9" pos:end="83:23">av_set_pts_info</name><argument_list pos:start="83:24" pos:end="83:84">(<argument pos:start="83:25" pos:end="83:39"><expr pos:start="83:25" pos:end="83:39"><name pos:start="83:25" pos:end="83:39"><name pos:start="83:25" pos:end="83:27">avf</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:36">streams</name><index pos:start="83:37" pos:end="83:39">[<expr pos:start="83:38" pos:end="83:38"><name pos:start="83:38" pos:end="83:38">i</name></expr>]</index></name></expr></argument>, <argument pos:start="83:42" pos:end="83:43"><expr pos:start="83:42" pos:end="83:43"><literal type="number" pos:start="83:42" pos:end="83:43">60</literal></expr></argument>, <argument pos:start="83:46" pos:end="83:63"><expr pos:start="83:46" pos:end="83:63"><name pos:start="83:46" pos:end="83:49"><name pos:start="83:46" pos:end="83:46">s</name><index pos:start="83:47" pos:end="83:49">[<expr pos:start="83:48" pos:end="83:48"><name pos:start="83:48" pos:end="83:48">i</name></expr>]</index></name><operator pos:start="83:50" pos:end="83:50">.</operator><name pos:start="83:51" pos:end="83:63"><name pos:start="83:51" pos:end="83:59">time_base</name><operator pos:start="83:60" pos:end="83:60">.</operator><name pos:start="83:61" pos:end="83:63">nom</name></name></expr></argument>, <argument pos:start="83:66" pos:end="83:83"><expr pos:start="83:66" pos:end="83:83"><name pos:start="83:66" pos:end="83:69"><name pos:start="83:66" pos:end="83:66">s</name><index pos:start="83:67" pos:end="83:69">[<expr pos:start="83:68" pos:end="83:68"><name pos:start="83:68" pos:end="83:68">i</name></expr>]</index></name><operator pos:start="83:70" pos:end="83:70">.</operator><name pos:start="83:71" pos:end="83:83"><name pos:start="83:71" pos:end="83:79">time_base</name><operator pos:start="83:80" pos:end="83:80">.</operator><name pos:start="83:81" pos:end="83:83">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:27"><expr pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:22"><name pos:start="85:9" pos:end="85:10">st</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:22">start_time</name></name> <operator pos:start="85:24" pos:end="85:24">=</operator> <literal type="number" pos:start="85:26" pos:end="85:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:36"><expr pos:start="87:9" pos:end="87:35"><name pos:start="87:9" pos:end="87:20"><name pos:start="87:9" pos:end="87:10">st</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:20">duration</name></name> <operator pos:start="87:22" pos:end="87:22">=</operator> <name pos:start="87:24" pos:end="87:27"><name pos:start="87:24" pos:end="87:24">s</name><index pos:start="87:25" pos:end="87:27">[<expr pos:start="87:26" pos:end="87:26"><name pos:start="87:26" pos:end="87:26">i</name></expr>]</index></name><operator pos:start="87:28" pos:end="87:28">.</operator><name pos:start="87:29" pos:end="87:35">max_pts</name></expr>;</expr_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:75"><expr pos:start="91:9" pos:end="91:74"><name pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:10">st</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:17">codec</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:27">codec_id</name></name> <operator pos:start="91:29" pos:end="91:29">=</operator> <call pos:start="91:31" pos:end="91:74"><name pos:start="91:31" pos:end="91:42">codec_get_id</name><argument_list pos:start="91:43" pos:end="91:74">(<argument pos:start="91:44" pos:end="91:51"><expr pos:start="91:44" pos:end="91:51"><name pos:start="91:44" pos:end="91:51">nut_tags</name></expr></argument>, <argument pos:start="91:54" pos:end="91:73"><expr pos:start="91:54" pos:end="91:73"><name pos:start="91:54" pos:end="91:73"><name pos:start="91:54" pos:end="91:55">st</name><operator pos:start="91:56" pos:end="91:57">-&gt;</operator><name pos:start="91:58" pos:end="91:62">codec</name><operator pos:start="91:63" pos:end="91:64">-&gt;</operator><name pos:start="91:65" pos:end="91:73">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="95:9" pos:end="129:9">switch<condition pos:start="95:15" pos:end="95:25">(<expr pos:start="95:16" pos:end="95:24"><name pos:start="95:16" pos:end="95:19"><name pos:start="95:16" pos:end="95:16">s</name><index pos:start="95:17" pos:end="95:19">[<expr pos:start="95:18" pos:end="95:18"><name pos:start="95:18" pos:end="95:18">i</name></expr>]</index></name><operator pos:start="95:20" pos:end="95:20">.</operator><name pos:start="95:21" pos:end="95:24">type</name></expr>)</condition> <block pos:start="95:27" pos:end="129:9">{<block_content pos:start="97:9" pos:end="127:18">

        <case pos:start="97:9" pos:end="97:29">case <expr pos:start="97:14" pos:end="97:28"><name pos:start="97:14" pos:end="97:28">NUT_AUDIO_CLASS</name></expr>:</case>

            <expr_stmt pos:start="99:13" pos:end="99:53"><expr pos:start="99:13" pos:end="99:52"><name pos:start="99:13" pos:end="99:33"><name pos:start="99:13" pos:end="99:14">st</name><operator pos:start="99:15" pos:end="99:16">-&gt;</operator><name pos:start="99:17" pos:end="99:21">codec</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:33">codec_type</name></name> <operator pos:start="99:35" pos:end="99:35">=</operator> <name pos:start="99:37" pos:end="99:52">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="101:115"><if pos:start="101:13" pos:end="101:115">if <condition pos:start="101:16" pos:end="101:53">(<expr pos:start="101:17" pos:end="101:52"><name pos:start="101:17" pos:end="101:35"><name pos:start="101:17" pos:end="101:18">st</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:25">codec</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:35">codec_id</name></name> <operator pos:start="101:37" pos:end="101:38">==</operator> <name pos:start="101:40" pos:end="101:52">CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="101:55" pos:end="101:115"><block_content pos:start="101:55" pos:end="101:115"> <expr_stmt pos:start="101:55" pos:end="101:115"><expr pos:start="101:55" pos:end="101:114"><name pos:start="101:55" pos:end="101:73"><name pos:start="101:55" pos:end="101:56">st</name><operator pos:start="101:57" pos:end="101:58">-&gt;</operator><name pos:start="101:59" pos:end="101:63">codec</name><operator pos:start="101:64" pos:end="101:65">-&gt;</operator><name pos:start="101:66" pos:end="101:73">codec_id</name></name> <operator pos:start="101:75" pos:end="101:75">=</operator> <call pos:start="101:77" pos:end="101:114"><name pos:start="101:77" pos:end="101:92">codec_get_wav_id</name><argument_list pos:start="101:93" pos:end="101:114">(<argument pos:start="101:94" pos:end="101:113"><expr pos:start="101:94" pos:end="101:113"><name pos:start="101:94" pos:end="101:113"><name pos:start="101:94" pos:end="101:95">st</name><operator pos:start="101:96" pos:end="101:97">-&gt;</operator><name pos:start="101:98" pos:end="101:102">codec</name><operator pos:start="101:103" pos:end="101:104">-&gt;</operator><name pos:start="101:105" pos:end="101:113">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="105:13" pos:end="105:53"><expr pos:start="105:13" pos:end="105:52"><name pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:14">st</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:21">codec</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:31">channels</name></name> <operator pos:start="105:33" pos:end="105:33">=</operator> <name pos:start="105:35" pos:end="105:38"><name pos:start="105:35" pos:end="105:35">s</name><index pos:start="105:36" pos:end="105:38">[<expr pos:start="105:37" pos:end="105:37"><name pos:start="105:37" pos:end="105:37">i</name></expr>]</index></name><operator pos:start="105:39" pos:end="105:39">.</operator><name pos:start="105:40" pos:end="105:52">channel_count</name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:81"><expr pos:start="107:13" pos:end="107:80"><name pos:start="107:13" pos:end="107:34"><name pos:start="107:13" pos:end="107:14">st</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:21">codec</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:34">sample_rate</name></name> <operator pos:start="107:36" pos:end="107:36">=</operator> <name pos:start="107:38" pos:end="107:41"><name pos:start="107:38" pos:end="107:38">s</name><index pos:start="107:39" pos:end="107:41">[<expr pos:start="107:40" pos:end="107:40"><name pos:start="107:40" pos:end="107:40">i</name></expr>]</index></name><operator pos:start="107:42" pos:end="107:42">.</operator><name pos:start="107:43" pos:end="107:56">samplerate_nom</name> <operator pos:start="107:58" pos:end="107:58">/</operator> <name pos:start="107:60" pos:end="107:63"><name pos:start="107:60" pos:end="107:60">s</name><index pos:start="107:61" pos:end="107:63">[<expr pos:start="107:62" pos:end="107:62"><name pos:start="107:62" pos:end="107:62">i</name></expr>]</index></name><operator pos:start="107:64" pos:end="107:64">.</operator><name pos:start="107:65" pos:end="107:80">samplerate_denom</name></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        <case pos:start="111:9" pos:end="111:29">case <expr pos:start="111:14" pos:end="111:28"><name pos:start="111:14" pos:end="111:28">NUT_VIDEO_CLASS</name></expr>:</case>

            <expr_stmt pos:start="113:13" pos:end="113:53"><expr pos:start="113:13" pos:end="113:52"><name pos:start="113:13" pos:end="113:33"><name pos:start="113:13" pos:end="113:14">st</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:21">codec</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:33">codec_type</name></name> <operator pos:start="113:35" pos:end="113:35">=</operator> <name pos:start="113:37" pos:end="113:52">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="115:115"><if pos:start="115:13" pos:end="115:115">if <condition pos:start="115:16" pos:end="115:53">(<expr pos:start="115:17" pos:end="115:52"><name pos:start="115:17" pos:end="115:35"><name pos:start="115:17" pos:end="115:18">st</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:25">codec</name><operator pos:start="115:26" pos:end="115:27">-&gt;</operator><name pos:start="115:28" pos:end="115:35">codec_id</name></name> <operator pos:start="115:37" pos:end="115:38">==</operator> <name pos:start="115:40" pos:end="115:52">CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="115:55" pos:end="115:115"><block_content pos:start="115:55" pos:end="115:115"> <expr_stmt pos:start="115:55" pos:end="115:115"><expr pos:start="115:55" pos:end="115:114"><name pos:start="115:55" pos:end="115:73"><name pos:start="115:55" pos:end="115:56">st</name><operator pos:start="115:57" pos:end="115:58">-&gt;</operator><name pos:start="115:59" pos:end="115:63">codec</name><operator pos:start="115:64" pos:end="115:65">-&gt;</operator><name pos:start="115:66" pos:end="115:73">codec_id</name></name> <operator pos:start="115:75" pos:end="115:75">=</operator> <call pos:start="115:77" pos:end="115:114"><name pos:start="115:77" pos:end="115:92">codec_get_bmp_id</name><argument_list pos:start="115:93" pos:end="115:114">(<argument pos:start="115:94" pos:end="115:113"><expr pos:start="115:94" pos:end="115:113"><name pos:start="115:94" pos:end="115:113"><name pos:start="115:94" pos:end="115:95">st</name><operator pos:start="115:96" pos:end="115:97">-&gt;</operator><name pos:start="115:98" pos:end="115:102">codec</name><operator pos:start="115:103" pos:end="115:104">-&gt;</operator><name pos:start="115:105" pos:end="115:113">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="119:13" pos:end="119:42"><expr pos:start="119:13" pos:end="119:41"><name pos:start="119:13" pos:end="119:28"><name pos:start="119:13" pos:end="119:14">st</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:21">codec</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:28">width</name></name> <operator pos:start="119:30" pos:end="119:30">=</operator> <name pos:start="119:32" pos:end="119:35"><name pos:start="119:32" pos:end="119:32">s</name><index pos:start="119:33" pos:end="119:35">[<expr pos:start="119:34" pos:end="119:34"><name pos:start="119:34" pos:end="119:34">i</name></expr>]</index></name><operator pos:start="119:36" pos:end="119:36">.</operator><name pos:start="119:37" pos:end="119:41">width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:44"><expr pos:start="121:13" pos:end="121:43"><name pos:start="121:13" pos:end="121:29"><name pos:start="121:13" pos:end="121:14">st</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:21">codec</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:29">height</name></name> <operator pos:start="121:31" pos:end="121:31">=</operator> <name pos:start="121:33" pos:end="121:36"><name pos:start="121:33" pos:end="121:33">s</name><index pos:start="121:34" pos:end="121:36">[<expr pos:start="121:35" pos:end="121:35"><name pos:start="121:35" pos:end="121:35">i</name></expr>]</index></name><operator pos:start="121:37" pos:end="121:37">.</operator><name pos:start="121:38" pos:end="121:43">height</name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:67"><expr pos:start="123:13" pos:end="123:66"><name pos:start="123:13" pos:end="123:46"><name pos:start="123:13" pos:end="123:14">st</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:21">codec</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:42">sample_aspect_ratio</name><operator pos:start="123:43" pos:end="123:43">.</operator><name pos:start="123:44" pos:end="123:46">num</name></name> <operator pos:start="123:48" pos:end="123:48">=</operator> <name pos:start="123:50" pos:end="123:53"><name pos:start="123:50" pos:end="123:50">s</name><index pos:start="123:51" pos:end="123:53">[<expr pos:start="123:52" pos:end="123:52"><name pos:start="123:52" pos:end="123:52">i</name></expr>]</index></name><operator pos:start="123:54" pos:end="123:54">.</operator><name pos:start="123:55" pos:end="123:66">sample_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:68"><expr pos:start="125:13" pos:end="125:67"><name pos:start="125:13" pos:end="125:46"><name pos:start="125:13" pos:end="125:14">st</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:21">codec</name><operator pos:start="125:22" pos:end="125:23">-&gt;</operator><name pos:start="125:24" pos:end="125:42">sample_aspect_ratio</name><operator pos:start="125:43" pos:end="125:43">.</operator><name pos:start="125:44" pos:end="125:46">den</name></name> <operator pos:start="125:48" pos:end="125:48">=</operator> <name pos:start="125:50" pos:end="125:53"><name pos:start="125:50" pos:end="125:50">s</name><index pos:start="125:51" pos:end="125:53">[<expr pos:start="125:52" pos:end="125:52"><name pos:start="125:52" pos:end="125:52">i</name></expr>]</index></name><operator pos:start="125:54" pos:end="125:54">.</operator><name pos:start="125:55" pos:end="125:67">sample_height</name></expr>;</expr_stmt>

            <break pos:start="127:13" pos:end="127:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="131:9" pos:end="131:97"><if pos:start="131:9" pos:end="131:97">if <condition pos:start="131:12" pos:end="131:49">(<expr pos:start="131:13" pos:end="131:48"><name pos:start="131:13" pos:end="131:31"><name pos:start="131:13" pos:end="131:14">st</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:21">codec</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:31">codec_id</name></name> <operator pos:start="131:33" pos:end="131:34">==</operator> <name pos:start="131:36" pos:end="131:48">CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="131:51" pos:end="131:97"><block_content pos:start="131:51" pos:end="131:97"> <expr_stmt pos:start="131:51" pos:end="131:97"><expr pos:start="131:51" pos:end="131:96"><call pos:start="131:51" pos:end="131:96"><name pos:start="131:51" pos:end="131:56">av_log</name><argument_list pos:start="131:57" pos:end="131:96">(<argument pos:start="131:58" pos:end="131:60"><expr pos:start="131:58" pos:end="131:60"><name pos:start="131:58" pos:end="131:60">avf</name></expr></argument>, <argument pos:start="131:63" pos:end="131:74"><expr pos:start="131:63" pos:end="131:74"><name pos:start="131:63" pos:end="131:74">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="131:77" pos:end="131:95"><expr pos:start="131:77" pos:end="131:95"><literal type="string" pos:start="131:77" pos:end="131:95">"Unknown codec?!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="137:5" pos:end="137:13">return <expr pos:start="137:12" pos:end="137:12"><literal type="number" pos:start="137:12" pos:end="137:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
