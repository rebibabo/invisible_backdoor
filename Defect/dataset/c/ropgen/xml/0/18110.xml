<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18110.c" pos:tabs="8"><function pos:start="1:1" pos:end="585:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">tcg_out_op</name><parameter_list pos:start="1:23" pos:end="3:45">(<parameter pos:start="1:24" pos:end="1:36"><decl pos:start="1:24" pos:end="1:36"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:33">TCGContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:47">TCGOpcode</name></type> <name pos:start="1:49" pos:end="1:51">opc</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:71"><decl pos:start="1:54" pos:end="1:71"><type pos:start="1:54" pos:end="1:71"><specifier pos:start="1:54" pos:end="1:58">const</specifier> <name pos:start="1:60" pos:end="1:65">TCGArg</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">args</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:44"><decl pos:start="3:24" pos:end="3:44"><type pos:start="3:24" pos:end="3:44"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:32">int</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:44">const_args</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="585:1">{<block_content pos:start="7:5" pos:end="583:49">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:25">old_code_ptr</name> <init pos:start="7:27" pos:end="7:39">= <expr pos:start="7:29" pos:end="7:39"><name pos:start="7:29" pos:end="7:39"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:39">code_ptr</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:25"><expr pos:start="11:5" pos:end="11:24"><call pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:16">tcg_out_op_t</name><argument_list pos:start="11:17" pos:end="11:24">(<argument pos:start="11:18" pos:end="11:18"><expr pos:start="11:18" pos:end="11:18"><name pos:start="11:18" pos:end="11:18">s</name></expr></argument>, <argument pos:start="11:21" pos:end="11:23"><expr pos:start="11:21" pos:end="11:23"><name pos:start="11:21" pos:end="11:23">opc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="15:5" pos:end="581:5">switch <condition pos:start="15:12" pos:end="15:16">(<expr pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">opc</name></expr>)</condition> <block pos:start="15:18" pos:end="581:5">{<block_content pos:start="17:5" pos:end="579:20">

    <case pos:start="17:5" pos:end="17:26">case <expr pos:start="17:10" pos:end="17:25"><name pos:start="17:10" pos:end="17:25">INDEX_op_exit_tb</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><call pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:17">tcg_out64</name><argument_list pos:start="19:18" pos:end="19:29">(<argument pos:start="19:19" pos:end="19:19"><expr pos:start="19:19" pos:end="19:19"><name pos:start="19:19" pos:end="19:19">s</name></expr></argument>, <argument pos:start="19:22" pos:end="19:28"><expr pos:start="19:22" pos:end="19:28"><name pos:start="19:22" pos:end="19:28"><name pos:start="19:22" pos:end="19:25">args</name><index pos:start="19:26" pos:end="19:28">[<expr pos:start="19:27" pos:end="19:27"><literal type="number" pos:start="19:27" pos:end="19:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:26">case <expr pos:start="23:10" pos:end="23:25"><name pos:start="23:10" pos:end="23:25">INDEX_op_goto_tb</name></expr>:</case>

        <if_stmt pos:start="25:9" pos:end="41:9"><if pos:start="25:9" pos:end="35:9">if <condition pos:start="25:12" pos:end="25:29">(<expr pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:28">tb_jmp_offset</name></name></expr>)</condition> <block pos:start="25:31" pos:end="35:9">{<block_content pos:start="29:13" pos:end="33:28">

            <comment type="block" pos:start="27:13" pos:end="27:37">/* Direct jump method. */</comment>

            <expr_stmt pos:start="29:13" pos:end="29:59"><expr pos:start="29:13" pos:end="29:58"><call pos:start="29:13" pos:end="29:58"><name pos:start="29:13" pos:end="29:18">assert</name><argument_list pos:start="29:19" pos:end="29:58">(<argument pos:start="29:20" pos:end="29:57"><expr pos:start="29:20" pos:end="29:57"><name pos:start="29:20" pos:end="29:26"><name pos:start="29:20" pos:end="29:23">args</name><index pos:start="29:24" pos:end="29:26">[<expr pos:start="29:25" pos:end="29:25"><literal type="number" pos:start="29:25" pos:end="29:25">0</literal></expr>]</index></name> <operator pos:start="29:28" pos:end="29:28">&lt;</operator> <call pos:start="29:30" pos:end="29:57"><name pos:start="29:30" pos:end="29:39">ARRAY_SIZE</name><argument_list pos:start="29:40" pos:end="29:57">(<argument pos:start="29:41" pos:end="29:56"><expr pos:start="29:41" pos:end="29:56"><name pos:start="29:41" pos:end="29:56"><name pos:start="29:41" pos:end="29:41">s</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:56">tb_jmp_offset</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:66"><expr pos:start="31:13" pos:end="31:65"><name pos:start="31:13" pos:end="31:37"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:28">tb_jmp_offset</name><index pos:start="31:29" pos:end="31:37">[<expr pos:start="31:30" pos:end="31:36"><name pos:start="31:30" pos:end="31:36"><name pos:start="31:30" pos:end="31:33">args</name><index pos:start="31:34" pos:end="31:36">[<expr pos:start="31:35" pos:end="31:35"><literal type="number" pos:start="31:35" pos:end="31:35">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="31:39" pos:end="31:39">=</operator> <name pos:start="31:41" pos:end="31:51"><name pos:start="31:41" pos:end="31:41">s</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:51">code_ptr</name></name> <operator pos:start="31:53" pos:end="31:53">-</operator> <name pos:start="31:55" pos:end="31:65"><name pos:start="31:55" pos:end="31:55">s</name><operator pos:start="31:56" pos:end="31:57">-&gt;</operator><name pos:start="31:58" pos:end="31:65">code_buf</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:28"><expr pos:start="33:13" pos:end="33:27"><call pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:21">tcg_out32</name><argument_list pos:start="33:22" pos:end="33:27">(<argument pos:start="33:23" pos:end="33:23"><expr pos:start="33:23" pos:end="33:23"><name pos:start="33:23" pos:end="33:23">s</name></expr></argument>, <argument pos:start="33:26" pos:end="33:26"><expr pos:start="33:26" pos:end="33:26"><literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="35:11" pos:end="41:9">else <block pos:start="35:16" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:19">

            <comment type="block" pos:start="37:13" pos:end="37:39">/* Indirect jump method. */</comment>

            <expr_stmt pos:start="39:13" pos:end="39:19"><expr pos:start="39:13" pos:end="39:18"><call pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:16">TODO</name><argument_list pos:start="39:17" pos:end="39:18">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:56"><expr pos:start="43:9" pos:end="43:55"><call pos:start="43:9" pos:end="43:55"><name pos:start="43:9" pos:end="43:14">assert</name><argument_list pos:start="43:15" pos:end="43:55">(<argument pos:start="43:16" pos:end="43:54"><expr pos:start="43:16" pos:end="43:54"><name pos:start="43:16" pos:end="43:22"><name pos:start="43:16" pos:end="43:19">args</name><index pos:start="43:20" pos:end="43:22">[<expr pos:start="43:21" pos:end="43:21"><literal type="number" pos:start="43:21" pos:end="43:21">0</literal></expr>]</index></name> <operator pos:start="43:24" pos:end="43:24">&lt;</operator> <call pos:start="43:26" pos:end="43:54"><name pos:start="43:26" pos:end="43:35">ARRAY_SIZE</name><argument_list pos:start="43:36" pos:end="43:54">(<argument pos:start="43:37" pos:end="43:53"><expr pos:start="43:37" pos:end="43:53"><name pos:start="43:37" pos:end="43:53"><name pos:start="43:37" pos:end="43:37">s</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:53">tb_next_offset</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:63"><expr pos:start="45:9" pos:end="45:62"><name pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:25">tb_next_offset</name><index pos:start="45:26" pos:end="45:34">[<expr pos:start="45:27" pos:end="45:33"><name pos:start="45:27" pos:end="45:33"><name pos:start="45:27" pos:end="45:30">args</name><index pos:start="45:31" pos:end="45:33">[<expr pos:start="45:32" pos:end="45:32"><literal type="number" pos:start="45:32" pos:end="45:32">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="45:36" pos:end="45:36">=</operator> <name pos:start="45:38" pos:end="45:48"><name pos:start="45:38" pos:end="45:38">s</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:48">code_ptr</name></name> <operator pos:start="45:50" pos:end="45:50">-</operator> <name pos:start="45:52" pos:end="45:62"><name pos:start="45:52" pos:end="45:52">s</name><operator pos:start="45:53" pos:end="45:54">-&gt;</operator><name pos:start="45:55" pos:end="45:62">code_buf</name></name></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:21">case <expr pos:start="49:10" pos:end="49:20"><name pos:start="49:10" pos:end="49:20">INDEX_op_br</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:34"><expr pos:start="51:9" pos:end="51:33"><call pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:21">tci_out_label</name><argument_list pos:start="51:22" pos:end="51:33">(<argument pos:start="51:23" pos:end="51:23"><expr pos:start="51:23" pos:end="51:23"><name pos:start="51:23" pos:end="51:23">s</name></expr></argument>, <argument pos:start="51:26" pos:end="51:32"><expr pos:start="51:26" pos:end="51:32"><name pos:start="51:26" pos:end="51:32"><name pos:start="51:26" pos:end="51:29">args</name><index pos:start="51:30" pos:end="51:32">[<expr pos:start="51:31" pos:end="51:31"><literal type="number" pos:start="51:31" pos:end="51:31">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:23">case <expr pos:start="55:10" pos:end="55:22"><name pos:start="55:10" pos:end="55:22">INDEX_op_call</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:46"><expr pos:start="57:9" pos:end="57:45"><call pos:start="57:9" pos:end="57:45"><name pos:start="57:9" pos:end="57:18">tcg_out_ri</name><argument_list pos:start="57:19" pos:end="57:45">(<argument pos:start="57:20" pos:end="57:20"><expr pos:start="57:20" pos:end="57:20"><name pos:start="57:20" pos:end="57:20">s</name></expr></argument>, <argument pos:start="57:23" pos:end="57:35"><expr pos:start="57:23" pos:end="57:35"><name pos:start="57:23" pos:end="57:35"><name pos:start="57:23" pos:end="57:32">const_args</name><index pos:start="57:33" pos:end="57:35">[<expr pos:start="57:34" pos:end="57:34"><literal type="number" pos:start="57:34" pos:end="57:34">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="57:38" pos:end="57:44"><expr pos:start="57:38" pos:end="57:44"><name pos:start="57:38" pos:end="57:44"><name pos:start="57:38" pos:end="57:41">args</name><index pos:start="57:42" pos:end="57:44">[<expr pos:start="57:43" pos:end="57:43"><literal type="number" pos:start="57:43" pos:end="57:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:30">case <expr pos:start="61:10" pos:end="61:29"><name pos:start="61:10" pos:end="61:29">INDEX_op_setcond_i32</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:30"><expr pos:start="63:9" pos:end="63:29"><call pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:17">tcg_out_r</name><argument_list pos:start="63:18" pos:end="63:29">(<argument pos:start="63:19" pos:end="63:19"><expr pos:start="63:19" pos:end="63:19"><name pos:start="63:19" pos:end="63:19">s</name></expr></argument>, <argument pos:start="63:22" pos:end="63:28"><expr pos:start="63:22" pos:end="63:28"><name pos:start="63:22" pos:end="63:28"><name pos:start="63:22" pos:end="63:25">args</name><index pos:start="63:26" pos:end="63:28">[<expr pos:start="63:27" pos:end="63:27"><literal type="number" pos:start="63:27" pos:end="63:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:30"><expr pos:start="65:9" pos:end="65:29"><call pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:17">tcg_out_r</name><argument_list pos:start="65:18" pos:end="65:29">(<argument pos:start="65:19" pos:end="65:19"><expr pos:start="65:19" pos:end="65:19"><name pos:start="65:19" pos:end="65:19">s</name></expr></argument>, <argument pos:start="65:22" pos:end="65:28"><expr pos:start="65:22" pos:end="65:28"><name pos:start="65:22" pos:end="65:28"><name pos:start="65:22" pos:end="65:25">args</name><index pos:start="65:26" pos:end="65:28">[<expr pos:start="65:27" pos:end="65:27"><literal type="number" pos:start="65:27" pos:end="65:27">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:48"><expr pos:start="67:9" pos:end="67:47"><call pos:start="67:9" pos:end="67:47"><name pos:start="67:9" pos:end="67:20">tcg_out_ri32</name><argument_list pos:start="67:21" pos:end="67:47">(<argument pos:start="67:22" pos:end="67:22"><expr pos:start="67:22" pos:end="67:22"><name pos:start="67:22" pos:end="67:22">s</name></expr></argument>, <argument pos:start="67:25" pos:end="67:37"><expr pos:start="67:25" pos:end="67:37"><name pos:start="67:25" pos:end="67:37"><name pos:start="67:25" pos:end="67:34">const_args</name><index pos:start="67:35" pos:end="67:37">[<expr pos:start="67:36" pos:end="67:36"><literal type="number" pos:start="67:36" pos:end="67:36">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:40" pos:end="67:46"><expr pos:start="67:40" pos:end="67:46"><name pos:start="67:40" pos:end="67:46"><name pos:start="67:40" pos:end="67:43">args</name><index pos:start="67:44" pos:end="67:46">[<expr pos:start="67:45" pos:end="67:45"><literal type="number" pos:start="67:45" pos:end="67:45">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:29"><expr pos:start="69:9" pos:end="69:28"><call pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:16">tcg_out8</name><argument_list pos:start="69:17" pos:end="69:28">(<argument pos:start="69:18" pos:end="69:18"><expr pos:start="69:18" pos:end="69:18"><name pos:start="69:18" pos:end="69:18">s</name></expr></argument>, <argument pos:start="69:21" pos:end="69:27"><expr pos:start="69:21" pos:end="69:27"><name pos:start="69:21" pos:end="69:27"><name pos:start="69:21" pos:end="69:24">args</name><index pos:start="69:25" pos:end="69:27">[<expr pos:start="69:26" pos:end="69:26"><literal type="number" pos:start="69:26" pos:end="69:26">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="block" pos:start="69:33" pos:end="69:47">/* condition */</comment>

        <break pos:start="71:9" pos:end="74:0">break;</break>

<cpp:if pos:start="73:1" pos:end="73:29">#<cpp:directive pos:start="73:2" pos:end="73:3">if</cpp:directive> <expr pos:start="73:5" pos:end="73:29"><name pos:start="73:5" pos:end="73:23">TCG_TARGET_REG_BITS</name> <operator pos:start="73:25" pos:end="73:26">==</operator> <literal type="number" pos:start="73:28" pos:end="73:29">32</literal></expr></cpp:if>

    <case pos:start="75:5" pos:end="75:31">case <expr pos:start="75:10" pos:end="75:30"><name pos:start="75:10" pos:end="75:30">INDEX_op_setcond2_i32</name></expr>:</case>

        <comment type="block" pos:start="77:9" pos:end="77:69">/* setcond2_i32 cond, t0, t1_low, t1_high, t2_low, t2_high */</comment>

        <expr_stmt pos:start="79:9" pos:end="79:30"><expr pos:start="79:9" pos:end="79:29"><call pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:17">tcg_out_r</name><argument_list pos:start="79:18" pos:end="79:29">(<argument pos:start="79:19" pos:end="79:19"><expr pos:start="79:19" pos:end="79:19"><name pos:start="79:19" pos:end="79:19">s</name></expr></argument>, <argument pos:start="79:22" pos:end="79:28"><expr pos:start="79:22" pos:end="79:28"><name pos:start="79:22" pos:end="79:28"><name pos:start="79:22" pos:end="79:25">args</name><index pos:start="79:26" pos:end="79:28">[<expr pos:start="79:27" pos:end="79:27"><literal type="number" pos:start="79:27" pos:end="79:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:30"><expr pos:start="81:9" pos:end="81:29"><call pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:17">tcg_out_r</name><argument_list pos:start="81:18" pos:end="81:29">(<argument pos:start="81:19" pos:end="81:19"><expr pos:start="81:19" pos:end="81:19"><name pos:start="81:19" pos:end="81:19">s</name></expr></argument>, <argument pos:start="81:22" pos:end="81:28"><expr pos:start="81:22" pos:end="81:28"><name pos:start="81:22" pos:end="81:28"><name pos:start="81:22" pos:end="81:25">args</name><index pos:start="81:26" pos:end="81:28">[<expr pos:start="81:27" pos:end="81:27"><literal type="number" pos:start="81:27" pos:end="81:27">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:30"><expr pos:start="83:9" pos:end="83:29"><call pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:17">tcg_out_r</name><argument_list pos:start="83:18" pos:end="83:29">(<argument pos:start="83:19" pos:end="83:19"><expr pos:start="83:19" pos:end="83:19"><name pos:start="83:19" pos:end="83:19">s</name></expr></argument>, <argument pos:start="83:22" pos:end="83:28"><expr pos:start="83:22" pos:end="83:28"><name pos:start="83:22" pos:end="83:28"><name pos:start="83:22" pos:end="83:25">args</name><index pos:start="83:26" pos:end="83:28">[<expr pos:start="83:27" pos:end="83:27"><literal type="number" pos:start="83:27" pos:end="83:27">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:48"><expr pos:start="85:9" pos:end="85:47"><call pos:start="85:9" pos:end="85:47"><name pos:start="85:9" pos:end="85:20">tcg_out_ri32</name><argument_list pos:start="85:21" pos:end="85:47">(<argument pos:start="85:22" pos:end="85:22"><expr pos:start="85:22" pos:end="85:22"><name pos:start="85:22" pos:end="85:22">s</name></expr></argument>, <argument pos:start="85:25" pos:end="85:37"><expr pos:start="85:25" pos:end="85:37"><name pos:start="85:25" pos:end="85:37"><name pos:start="85:25" pos:end="85:34">const_args</name><index pos:start="85:35" pos:end="85:37">[<expr pos:start="85:36" pos:end="85:36"><literal type="number" pos:start="85:36" pos:end="85:36">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="85:40" pos:end="85:46"><expr pos:start="85:40" pos:end="85:46"><name pos:start="85:40" pos:end="85:46"><name pos:start="85:40" pos:end="85:43">args</name><index pos:start="85:44" pos:end="85:46">[<expr pos:start="85:45" pos:end="85:45"><literal type="number" pos:start="85:45" pos:end="85:45">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:48"><expr pos:start="87:9" pos:end="87:47"><call pos:start="87:9" pos:end="87:47"><name pos:start="87:9" pos:end="87:20">tcg_out_ri32</name><argument_list pos:start="87:21" pos:end="87:47">(<argument pos:start="87:22" pos:end="87:22"><expr pos:start="87:22" pos:end="87:22"><name pos:start="87:22" pos:end="87:22">s</name></expr></argument>, <argument pos:start="87:25" pos:end="87:37"><expr pos:start="87:25" pos:end="87:37"><name pos:start="87:25" pos:end="87:37"><name pos:start="87:25" pos:end="87:34">const_args</name><index pos:start="87:35" pos:end="87:37">[<expr pos:start="87:36" pos:end="87:36"><literal type="number" pos:start="87:36" pos:end="87:36">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="87:40" pos:end="87:46"><expr pos:start="87:40" pos:end="87:46"><name pos:start="87:40" pos:end="87:46"><name pos:start="87:40" pos:end="87:43">args</name><index pos:start="87:44" pos:end="87:46">[<expr pos:start="87:45" pos:end="87:45"><literal type="number" pos:start="87:45" pos:end="87:45">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:29"><expr pos:start="89:9" pos:end="89:28"><call pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:16">tcg_out8</name><argument_list pos:start="89:17" pos:end="89:28">(<argument pos:start="89:18" pos:end="89:18"><expr pos:start="89:18" pos:end="89:18"><name pos:start="89:18" pos:end="89:18">s</name></expr></argument>, <argument pos:start="89:21" pos:end="89:27"><expr pos:start="89:21" pos:end="89:27"><name pos:start="89:21" pos:end="89:27"><name pos:start="89:21" pos:end="89:24">args</name><index pos:start="89:25" pos:end="89:27">[<expr pos:start="89:26" pos:end="89:26"><literal type="number" pos:start="89:26" pos:end="89:26">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="block" pos:start="89:33" pos:end="89:47">/* condition */</comment>

        <break pos:start="91:9" pos:end="94:0">break;</break>

<cpp:elif pos:start="93:1" pos:end="93:31">#<cpp:directive pos:start="93:2" pos:end="93:5">elif</cpp:directive> <expr pos:start="93:7" pos:end="93:31"><name pos:start="93:7" pos:end="93:25">TCG_TARGET_REG_BITS</name> <operator pos:start="93:27" pos:end="93:28">==</operator> <literal type="number" pos:start="93:30" pos:end="93:31">64</literal></expr></cpp:elif>

    <case pos:start="95:5" pos:end="95:30">case <expr pos:start="95:10" pos:end="95:29"><name pos:start="95:10" pos:end="95:29">INDEX_op_setcond_i64</name></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:30"><expr pos:start="97:9" pos:end="97:29"><call pos:start="97:9" pos:end="97:29"><name pos:start="97:9" pos:end="97:17">tcg_out_r</name><argument_list pos:start="97:18" pos:end="97:29">(<argument pos:start="97:19" pos:end="97:19"><expr pos:start="97:19" pos:end="97:19"><name pos:start="97:19" pos:end="97:19">s</name></expr></argument>, <argument pos:start="97:22" pos:end="97:28"><expr pos:start="97:22" pos:end="97:28"><name pos:start="97:22" pos:end="97:28"><name pos:start="97:22" pos:end="97:25">args</name><index pos:start="97:26" pos:end="97:28">[<expr pos:start="97:27" pos:end="97:27"><literal type="number" pos:start="97:27" pos:end="97:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:30"><expr pos:start="99:9" pos:end="99:29"><call pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:17">tcg_out_r</name><argument_list pos:start="99:18" pos:end="99:29">(<argument pos:start="99:19" pos:end="99:19"><expr pos:start="99:19" pos:end="99:19"><name pos:start="99:19" pos:end="99:19">s</name></expr></argument>, <argument pos:start="99:22" pos:end="99:28"><expr pos:start="99:22" pos:end="99:28"><name pos:start="99:22" pos:end="99:28"><name pos:start="99:22" pos:end="99:25">args</name><index pos:start="99:26" pos:end="99:28">[<expr pos:start="99:27" pos:end="99:27"><literal type="number" pos:start="99:27" pos:end="99:27">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:48"><expr pos:start="101:9" pos:end="101:47"><call pos:start="101:9" pos:end="101:47"><name pos:start="101:9" pos:end="101:20">tcg_out_ri64</name><argument_list pos:start="101:21" pos:end="101:47">(<argument pos:start="101:22" pos:end="101:22"><expr pos:start="101:22" pos:end="101:22"><name pos:start="101:22" pos:end="101:22">s</name></expr></argument>, <argument pos:start="101:25" pos:end="101:37"><expr pos:start="101:25" pos:end="101:37"><name pos:start="101:25" pos:end="101:37"><name pos:start="101:25" pos:end="101:34">const_args</name><index pos:start="101:35" pos:end="101:37">[<expr pos:start="101:36" pos:end="101:36"><literal type="number" pos:start="101:36" pos:end="101:36">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="101:40" pos:end="101:46"><expr pos:start="101:40" pos:end="101:46"><name pos:start="101:40" pos:end="101:46"><name pos:start="101:40" pos:end="101:43">args</name><index pos:start="101:44" pos:end="101:46">[<expr pos:start="101:45" pos:end="101:45"><literal type="number" pos:start="101:45" pos:end="101:45">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:29"><expr pos:start="103:9" pos:end="103:28"><call pos:start="103:9" pos:end="103:28"><name pos:start="103:9" pos:end="103:16">tcg_out8</name><argument_list pos:start="103:17" pos:end="103:28">(<argument pos:start="103:18" pos:end="103:18"><expr pos:start="103:18" pos:end="103:18"><name pos:start="103:18" pos:end="103:18">s</name></expr></argument>, <argument pos:start="103:21" pos:end="103:27"><expr pos:start="103:21" pos:end="103:27"><name pos:start="103:21" pos:end="103:27"><name pos:start="103:21" pos:end="103:24">args</name><index pos:start="103:25" pos:end="103:27">[<expr pos:start="103:26" pos:end="103:26"><literal type="number" pos:start="103:26" pos:end="103:26">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="block" pos:start="103:33" pos:end="103:47">/* condition */</comment>

        <break pos:start="105:9" pos:end="108:0">break;</break>

<cpp:endif pos:start="107:1" pos:end="107:6">#<cpp:directive pos:start="107:2" pos:end="107:6">endif</cpp:directive></cpp:endif>

    <case pos:start="109:5" pos:end="109:27">case <expr pos:start="109:10" pos:end="109:26"><name pos:start="109:10" pos:end="109:26">INDEX_op_movi_i32</name></expr>:</case>

        <expr_stmt pos:start="111:9" pos:end="111:15"><expr pos:start="111:9" pos:end="111:14"><call pos:start="111:9" pos:end="111:14"><name pos:start="111:9" pos:end="111:12">TODO</name><argument_list pos:start="111:13" pos:end="111:14">()</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="111:17" pos:end="111:46">/* Handled by tcg_out_movi? */</comment>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:27">case <expr pos:start="115:10" pos:end="115:26"><name pos:start="115:10" pos:end="115:26">INDEX_op_ld8u_i32</name></expr>:</case>

    <case pos:start="117:5" pos:end="117:27">case <expr pos:start="117:10" pos:end="117:26"><name pos:start="117:10" pos:end="117:26">INDEX_op_ld8s_i32</name></expr>:</case>

    <case pos:start="119:5" pos:end="119:28">case <expr pos:start="119:10" pos:end="119:27"><name pos:start="119:10" pos:end="119:27">INDEX_op_ld16u_i32</name></expr>:</case>

    <case pos:start="121:5" pos:end="121:28">case <expr pos:start="121:10" pos:end="121:27"><name pos:start="121:10" pos:end="121:27">INDEX_op_ld16s_i32</name></expr>:</case>

    <case pos:start="123:5" pos:end="123:25">case <expr pos:start="123:10" pos:end="123:24"><name pos:start="123:10" pos:end="123:24">INDEX_op_ld_i32</name></expr>:</case>

    <case pos:start="125:5" pos:end="125:26">case <expr pos:start="125:10" pos:end="125:25"><name pos:start="125:10" pos:end="125:25">INDEX_op_st8_i32</name></expr>:</case>

    <case pos:start="127:5" pos:end="127:27">case <expr pos:start="127:10" pos:end="127:26"><name pos:start="127:10" pos:end="127:26">INDEX_op_st16_i32</name></expr>:</case>

    <case pos:start="129:5" pos:end="129:25">case <expr pos:start="129:10" pos:end="129:24"><name pos:start="129:10" pos:end="129:24">INDEX_op_st_i32</name></expr>:</case>

    <case pos:start="131:5" pos:end="131:27">case <expr pos:start="131:10" pos:end="131:26"><name pos:start="131:10" pos:end="131:26">INDEX_op_ld8u_i64</name></expr>:</case>

    <case pos:start="133:5" pos:end="133:27">case <expr pos:start="133:10" pos:end="133:26"><name pos:start="133:10" pos:end="133:26">INDEX_op_ld8s_i64</name></expr>:</case>

    <case pos:start="135:5" pos:end="135:28">case <expr pos:start="135:10" pos:end="135:27"><name pos:start="135:10" pos:end="135:27">INDEX_op_ld16u_i64</name></expr>:</case>

    <case pos:start="137:5" pos:end="137:28">case <expr pos:start="137:10" pos:end="137:27"><name pos:start="137:10" pos:end="137:27">INDEX_op_ld16s_i64</name></expr>:</case>

    <case pos:start="139:5" pos:end="139:28">case <expr pos:start="139:10" pos:end="139:27"><name pos:start="139:10" pos:end="139:27">INDEX_op_ld32u_i64</name></expr>:</case>

    <case pos:start="141:5" pos:end="141:28">case <expr pos:start="141:10" pos:end="141:27"><name pos:start="141:10" pos:end="141:27">INDEX_op_ld32s_i64</name></expr>:</case>

    <case pos:start="143:5" pos:end="143:25">case <expr pos:start="143:10" pos:end="143:24"><name pos:start="143:10" pos:end="143:24">INDEX_op_ld_i64</name></expr>:</case>

    <case pos:start="145:5" pos:end="145:26">case <expr pos:start="145:10" pos:end="145:25"><name pos:start="145:10" pos:end="145:25">INDEX_op_st8_i64</name></expr>:</case>

    <case pos:start="147:5" pos:end="147:27">case <expr pos:start="147:10" pos:end="147:26"><name pos:start="147:10" pos:end="147:26">INDEX_op_st16_i64</name></expr>:</case>

    <case pos:start="149:5" pos:end="149:27">case <expr pos:start="149:10" pos:end="149:26"><name pos:start="149:10" pos:end="149:26">INDEX_op_st32_i64</name></expr>:</case>

    <case pos:start="151:5" pos:end="151:25">case <expr pos:start="151:10" pos:end="151:24"><name pos:start="151:10" pos:end="151:24">INDEX_op_st_i64</name></expr>:</case>

        <expr_stmt pos:start="153:9" pos:end="153:30"><expr pos:start="153:9" pos:end="153:29"><call pos:start="153:9" pos:end="153:29"><name pos:start="153:9" pos:end="153:17">tcg_out_r</name><argument_list pos:start="153:18" pos:end="153:29">(<argument pos:start="153:19" pos:end="153:19"><expr pos:start="153:19" pos:end="153:19"><name pos:start="153:19" pos:end="153:19">s</name></expr></argument>, <argument pos:start="153:22" pos:end="153:28"><expr pos:start="153:22" pos:end="153:28"><name pos:start="153:22" pos:end="153:28"><name pos:start="153:22" pos:end="153:25">args</name><index pos:start="153:26" pos:end="153:28">[<expr pos:start="153:27" pos:end="153:27"><literal type="number" pos:start="153:27" pos:end="153:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:30"><expr pos:start="155:9" pos:end="155:29"><call pos:start="155:9" pos:end="155:29"><name pos:start="155:9" pos:end="155:17">tcg_out_r</name><argument_list pos:start="155:18" pos:end="155:29">(<argument pos:start="155:19" pos:end="155:19"><expr pos:start="155:19" pos:end="155:19"><name pos:start="155:19" pos:end="155:19">s</name></expr></argument>, <argument pos:start="155:22" pos:end="155:28"><expr pos:start="155:22" pos:end="155:28"><name pos:start="155:22" pos:end="155:28"><name pos:start="155:22" pos:end="155:25">args</name><index pos:start="155:26" pos:end="155:28">[<expr pos:start="155:27" pos:end="155:27"><literal type="number" pos:start="155:27" pos:end="155:27">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:45"><expr pos:start="157:9" pos:end="157:44"><call pos:start="157:9" pos:end="157:44"><name pos:start="157:9" pos:end="157:14">assert</name><argument_list pos:start="157:15" pos:end="157:44">(<argument pos:start="157:16" pos:end="157:43"><expr pos:start="157:16" pos:end="157:43"><name pos:start="157:16" pos:end="157:22"><name pos:start="157:16" pos:end="157:19">args</name><index pos:start="157:20" pos:end="157:22">[<expr pos:start="157:21" pos:end="157:21"><literal type="number" pos:start="157:21" pos:end="157:21">2</literal></expr>]</index></name> <operator pos:start="157:24" pos:end="157:25">==</operator> <operator pos:start="157:27" pos:end="157:27">(</operator><name pos:start="157:28" pos:end="157:35">uint32_t</name><operator pos:start="157:36" pos:end="157:36">)</operator><name pos:start="157:37" pos:end="157:43"><name pos:start="157:37" pos:end="157:40">args</name><index pos:start="157:41" pos:end="157:43">[<expr pos:start="157:42" pos:end="157:42"><literal type="number" pos:start="157:42" pos:end="157:42">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:30"><expr pos:start="159:9" pos:end="159:29"><call pos:start="159:9" pos:end="159:29"><name pos:start="159:9" pos:end="159:17">tcg_out32</name><argument_list pos:start="159:18" pos:end="159:29">(<argument pos:start="159:19" pos:end="159:19"><expr pos:start="159:19" pos:end="159:19"><name pos:start="159:19" pos:end="159:19">s</name></expr></argument>, <argument pos:start="159:22" pos:end="159:28"><expr pos:start="159:22" pos:end="159:28"><name pos:start="159:22" pos:end="159:28"><name pos:start="159:22" pos:end="159:25">args</name><index pos:start="159:26" pos:end="159:28">[<expr pos:start="159:27" pos:end="159:27"><literal type="number" pos:start="159:27" pos:end="159:27">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    <case pos:start="163:5" pos:end="163:26">case <expr pos:start="163:10" pos:end="163:25"><name pos:start="163:10" pos:end="163:25">INDEX_op_add_i32</name></expr>:</case>

    <case pos:start="165:5" pos:end="165:26">case <expr pos:start="165:10" pos:end="165:25"><name pos:start="165:10" pos:end="165:25">INDEX_op_sub_i32</name></expr>:</case>

    <case pos:start="167:5" pos:end="167:26">case <expr pos:start="167:10" pos:end="167:25"><name pos:start="167:10" pos:end="167:25">INDEX_op_mul_i32</name></expr>:</case>

    <case pos:start="169:5" pos:end="169:26">case <expr pos:start="169:10" pos:end="169:25"><name pos:start="169:10" pos:end="169:25">INDEX_op_and_i32</name></expr>:</case>

    <case pos:start="171:5" pos:end="171:27">case <expr pos:start="171:10" pos:end="171:26"><name pos:start="171:10" pos:end="171:26">INDEX_op_andc_i32</name></expr>:</case>     <comment type="block" pos:start="171:33" pos:end="171:73">/* Optional (TCG_TARGET_HAS_andc_i32). */</comment>

    <case pos:start="173:5" pos:end="173:26">case <expr pos:start="173:10" pos:end="173:25"><name pos:start="173:10" pos:end="173:25">INDEX_op_eqv_i32</name></expr>:</case>      <comment type="block" pos:start="173:33" pos:end="173:72">/* Optional (TCG_TARGET_HAS_eqv_i32). */</comment>

    <case pos:start="175:5" pos:end="175:27">case <expr pos:start="175:10" pos:end="175:26"><name pos:start="175:10" pos:end="175:26">INDEX_op_nand_i32</name></expr>:</case>     <comment type="block" pos:start="175:33" pos:end="175:73">/* Optional (TCG_TARGET_HAS_nand_i32). */</comment>

    <case pos:start="177:5" pos:end="177:26">case <expr pos:start="177:10" pos:end="177:25"><name pos:start="177:10" pos:end="177:25">INDEX_op_nor_i32</name></expr>:</case>      <comment type="block" pos:start="177:33" pos:end="177:72">/* Optional (TCG_TARGET_HAS_nor_i32). */</comment>

    <case pos:start="179:5" pos:end="179:25">case <expr pos:start="179:10" pos:end="179:24"><name pos:start="179:10" pos:end="179:24">INDEX_op_or_i32</name></expr>:</case>

    <case pos:start="181:5" pos:end="181:26">case <expr pos:start="181:10" pos:end="181:25"><name pos:start="181:10" pos:end="181:25">INDEX_op_orc_i32</name></expr>:</case>      <comment type="block" pos:start="181:33" pos:end="181:72">/* Optional (TCG_TARGET_HAS_orc_i32). */</comment>

    <case pos:start="183:5" pos:end="183:26">case <expr pos:start="183:10" pos:end="183:25"><name pos:start="183:10" pos:end="183:25">INDEX_op_xor_i32</name></expr>:</case>

    <case pos:start="185:5" pos:end="185:26">case <expr pos:start="185:10" pos:end="185:25"><name pos:start="185:10" pos:end="185:25">INDEX_op_shl_i32</name></expr>:</case>

    <case pos:start="187:5" pos:end="187:26">case <expr pos:start="187:10" pos:end="187:25"><name pos:start="187:10" pos:end="187:25">INDEX_op_shr_i32</name></expr>:</case>

    <case pos:start="189:5" pos:end="189:26">case <expr pos:start="189:10" pos:end="189:25"><name pos:start="189:10" pos:end="189:25">INDEX_op_sar_i32</name></expr>:</case>

    <case pos:start="191:5" pos:end="191:27">case <expr pos:start="191:10" pos:end="191:26"><name pos:start="191:10" pos:end="191:26">INDEX_op_rotl_i32</name></expr>:</case>     <comment type="block" pos:start="191:33" pos:end="191:72">/* Optional (TCG_TARGET_HAS_rot_i32). */</comment>

    <case pos:start="193:5" pos:end="193:27">case <expr pos:start="193:10" pos:end="193:26"><name pos:start="193:10" pos:end="193:26">INDEX_op_rotr_i32</name></expr>:</case>     <comment type="block" pos:start="193:33" pos:end="193:72">/* Optional (TCG_TARGET_HAS_rot_i32). */</comment>

        <expr_stmt pos:start="195:9" pos:end="195:30"><expr pos:start="195:9" pos:end="195:29"><call pos:start="195:9" pos:end="195:29"><name pos:start="195:9" pos:end="195:17">tcg_out_r</name><argument_list pos:start="195:18" pos:end="195:29">(<argument pos:start="195:19" pos:end="195:19"><expr pos:start="195:19" pos:end="195:19"><name pos:start="195:19" pos:end="195:19">s</name></expr></argument>, <argument pos:start="195:22" pos:end="195:28"><expr pos:start="195:22" pos:end="195:28"><name pos:start="195:22" pos:end="195:28"><name pos:start="195:22" pos:end="195:25">args</name><index pos:start="195:26" pos:end="195:28">[<expr pos:start="195:27" pos:end="195:27"><literal type="number" pos:start="195:27" pos:end="195:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:48"><expr pos:start="197:9" pos:end="197:47"><call pos:start="197:9" pos:end="197:47"><name pos:start="197:9" pos:end="197:20">tcg_out_ri32</name><argument_list pos:start="197:21" pos:end="197:47">(<argument pos:start="197:22" pos:end="197:22"><expr pos:start="197:22" pos:end="197:22"><name pos:start="197:22" pos:end="197:22">s</name></expr></argument>, <argument pos:start="197:25" pos:end="197:37"><expr pos:start="197:25" pos:end="197:37"><name pos:start="197:25" pos:end="197:37"><name pos:start="197:25" pos:end="197:34">const_args</name><index pos:start="197:35" pos:end="197:37">[<expr pos:start="197:36" pos:end="197:36"><literal type="number" pos:start="197:36" pos:end="197:36">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="197:40" pos:end="197:46"><expr pos:start="197:40" pos:end="197:46"><name pos:start="197:40" pos:end="197:46"><name pos:start="197:40" pos:end="197:43">args</name><index pos:start="197:44" pos:end="197:46">[<expr pos:start="197:45" pos:end="197:45"><literal type="number" pos:start="197:45" pos:end="197:45">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:48"><expr pos:start="199:9" pos:end="199:47"><call pos:start="199:9" pos:end="199:47"><name pos:start="199:9" pos:end="199:20">tcg_out_ri32</name><argument_list pos:start="199:21" pos:end="199:47">(<argument pos:start="199:22" pos:end="199:22"><expr pos:start="199:22" pos:end="199:22"><name pos:start="199:22" pos:end="199:22">s</name></expr></argument>, <argument pos:start="199:25" pos:end="199:37"><expr pos:start="199:25" pos:end="199:37"><name pos:start="199:25" pos:end="199:37"><name pos:start="199:25" pos:end="199:34">const_args</name><index pos:start="199:35" pos:end="199:37">[<expr pos:start="199:36" pos:end="199:36"><literal type="number" pos:start="199:36" pos:end="199:36">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="199:40" pos:end="199:46"><expr pos:start="199:40" pos:end="199:46"><name pos:start="199:40" pos:end="199:46"><name pos:start="199:40" pos:end="199:43">args</name><index pos:start="199:44" pos:end="199:46">[<expr pos:start="199:45" pos:end="199:45"><literal type="number" pos:start="199:45" pos:end="199:45">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="201:9" pos:end="201:14">break;</break>

    <case pos:start="203:5" pos:end="203:30">case <expr pos:start="203:10" pos:end="203:29"><name pos:start="203:10" pos:end="203:29">INDEX_op_deposit_i32</name></expr>:</case>  <comment type="block" pos:start="203:33" pos:end="203:76">/* Optional (TCG_TARGET_HAS_deposit_i32). */</comment>

        <expr_stmt pos:start="205:9" pos:end="205:30"><expr pos:start="205:9" pos:end="205:29"><call pos:start="205:9" pos:end="205:29"><name pos:start="205:9" pos:end="205:17">tcg_out_r</name><argument_list pos:start="205:18" pos:end="205:29">(<argument pos:start="205:19" pos:end="205:19"><expr pos:start="205:19" pos:end="205:19"><name pos:start="205:19" pos:end="205:19">s</name></expr></argument>, <argument pos:start="205:22" pos:end="205:28"><expr pos:start="205:22" pos:end="205:28"><name pos:start="205:22" pos:end="205:28"><name pos:start="205:22" pos:end="205:25">args</name><index pos:start="205:26" pos:end="205:28">[<expr pos:start="205:27" pos:end="205:27"><literal type="number" pos:start="205:27" pos:end="205:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:30"><expr pos:start="207:9" pos:end="207:29"><call pos:start="207:9" pos:end="207:29"><name pos:start="207:9" pos:end="207:17">tcg_out_r</name><argument_list pos:start="207:18" pos:end="207:29">(<argument pos:start="207:19" pos:end="207:19"><expr pos:start="207:19" pos:end="207:19"><name pos:start="207:19" pos:end="207:19">s</name></expr></argument>, <argument pos:start="207:22" pos:end="207:28"><expr pos:start="207:22" pos:end="207:28"><name pos:start="207:22" pos:end="207:28"><name pos:start="207:22" pos:end="207:25">args</name><index pos:start="207:26" pos:end="207:28">[<expr pos:start="207:27" pos:end="207:27"><literal type="number" pos:start="207:27" pos:end="207:27">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:30"><expr pos:start="209:9" pos:end="209:29"><call pos:start="209:9" pos:end="209:29"><name pos:start="209:9" pos:end="209:17">tcg_out_r</name><argument_list pos:start="209:18" pos:end="209:29">(<argument pos:start="209:19" pos:end="209:19"><expr pos:start="209:19" pos:end="209:19"><name pos:start="209:19" pos:end="209:19">s</name></expr></argument>, <argument pos:start="209:22" pos:end="209:28"><expr pos:start="209:22" pos:end="209:28"><name pos:start="209:22" pos:end="209:28"><name pos:start="209:22" pos:end="209:25">args</name><index pos:start="209:26" pos:end="209:28">[<expr pos:start="209:27" pos:end="209:27"><literal type="number" pos:start="209:27" pos:end="209:27">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:37"><expr pos:start="211:9" pos:end="211:36"><call pos:start="211:9" pos:end="211:36"><name pos:start="211:9" pos:end="211:14">assert</name><argument_list pos:start="211:15" pos:end="211:36">(<argument pos:start="211:16" pos:end="211:35"><expr pos:start="211:16" pos:end="211:35"><name pos:start="211:16" pos:end="211:22"><name pos:start="211:16" pos:end="211:19">args</name><index pos:start="211:20" pos:end="211:22">[<expr pos:start="211:21" pos:end="211:21"><literal type="number" pos:start="211:21" pos:end="211:21">3</literal></expr>]</index></name> <operator pos:start="211:24" pos:end="211:25">&lt;=</operator> <name pos:start="211:27" pos:end="211:35">UINT8_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:29"><expr pos:start="213:9" pos:end="213:28"><call pos:start="213:9" pos:end="213:28"><name pos:start="213:9" pos:end="213:16">tcg_out8</name><argument_list pos:start="213:17" pos:end="213:28">(<argument pos:start="213:18" pos:end="213:18"><expr pos:start="213:18" pos:end="213:18"><name pos:start="213:18" pos:end="213:18">s</name></expr></argument>, <argument pos:start="213:21" pos:end="213:27"><expr pos:start="213:21" pos:end="213:27"><name pos:start="213:21" pos:end="213:27"><name pos:start="213:21" pos:end="213:24">args</name><index pos:start="213:25" pos:end="213:27">[<expr pos:start="213:26" pos:end="213:26"><literal type="number" pos:start="213:26" pos:end="213:26">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:37"><expr pos:start="215:9" pos:end="215:36"><call pos:start="215:9" pos:end="215:36"><name pos:start="215:9" pos:end="215:14">assert</name><argument_list pos:start="215:15" pos:end="215:36">(<argument pos:start="215:16" pos:end="215:35"><expr pos:start="215:16" pos:end="215:35"><name pos:start="215:16" pos:end="215:22"><name pos:start="215:16" pos:end="215:19">args</name><index pos:start="215:20" pos:end="215:22">[<expr pos:start="215:21" pos:end="215:21"><literal type="number" pos:start="215:21" pos:end="215:21">4</literal></expr>]</index></name> <operator pos:start="215:24" pos:end="215:25">&lt;=</operator> <name pos:start="215:27" pos:end="215:35">UINT8_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:29"><expr pos:start="217:9" pos:end="217:28"><call pos:start="217:9" pos:end="217:28"><name pos:start="217:9" pos:end="217:16">tcg_out8</name><argument_list pos:start="217:17" pos:end="217:28">(<argument pos:start="217:18" pos:end="217:18"><expr pos:start="217:18" pos:end="217:18"><name pos:start="217:18" pos:end="217:18">s</name></expr></argument>, <argument pos:start="217:21" pos:end="217:27"><expr pos:start="217:21" pos:end="217:27"><name pos:start="217:21" pos:end="217:27"><name pos:start="217:21" pos:end="217:24">args</name><index pos:start="217:25" pos:end="217:27">[<expr pos:start="217:26" pos:end="217:26"><literal type="number" pos:start="217:26" pos:end="217:26">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="219:9" pos:end="224:0">break;</break>



<cpp:if pos:start="223:1" pos:end="223:29">#<cpp:directive pos:start="223:2" pos:end="223:3">if</cpp:directive> <expr pos:start="223:5" pos:end="223:29"><name pos:start="223:5" pos:end="223:23">TCG_TARGET_REG_BITS</name> <operator pos:start="223:25" pos:end="223:26">==</operator> <literal type="number" pos:start="223:28" pos:end="223:29">64</literal></expr></cpp:if>

    <case pos:start="225:5" pos:end="225:26">case <expr pos:start="225:10" pos:end="225:25"><name pos:start="225:10" pos:end="225:25">INDEX_op_mov_i64</name></expr>:</case>

    <case pos:start="227:5" pos:end="227:27">case <expr pos:start="227:10" pos:end="227:26"><name pos:start="227:10" pos:end="227:26">INDEX_op_movi_i64</name></expr>:</case>

        <expr_stmt pos:start="229:9" pos:end="229:15"><expr pos:start="229:9" pos:end="229:14"><call pos:start="229:9" pos:end="229:14"><name pos:start="229:9" pos:end="229:12">TODO</name><argument_list pos:start="229:13" pos:end="229:14">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="231:9" pos:end="231:14">break;</break>

    <case pos:start="233:5" pos:end="233:26">case <expr pos:start="233:10" pos:end="233:25"><name pos:start="233:10" pos:end="233:25">INDEX_op_add_i64</name></expr>:</case>

    <case pos:start="235:5" pos:end="235:26">case <expr pos:start="235:10" pos:end="235:25"><name pos:start="235:10" pos:end="235:25">INDEX_op_sub_i64</name></expr>:</case>

    <case pos:start="237:5" pos:end="237:26">case <expr pos:start="237:10" pos:end="237:25"><name pos:start="237:10" pos:end="237:25">INDEX_op_mul_i64</name></expr>:</case>

    <case pos:start="239:5" pos:end="239:26">case <expr pos:start="239:10" pos:end="239:25"><name pos:start="239:10" pos:end="239:25">INDEX_op_and_i64</name></expr>:</case>

    <case pos:start="241:5" pos:end="241:27">case <expr pos:start="241:10" pos:end="241:26"><name pos:start="241:10" pos:end="241:26">INDEX_op_andc_i64</name></expr>:</case>     <comment type="block" pos:start="241:33" pos:end="241:73">/* Optional (TCG_TARGET_HAS_andc_i64). */</comment>

    <case pos:start="243:5" pos:end="243:26">case <expr pos:start="243:10" pos:end="243:25"><name pos:start="243:10" pos:end="243:25">INDEX_op_eqv_i64</name></expr>:</case>      <comment type="block" pos:start="243:33" pos:end="243:72">/* Optional (TCG_TARGET_HAS_eqv_i64). */</comment>

    <case pos:start="245:5" pos:end="245:27">case <expr pos:start="245:10" pos:end="245:26"><name pos:start="245:10" pos:end="245:26">INDEX_op_nand_i64</name></expr>:</case>     <comment type="block" pos:start="245:33" pos:end="245:73">/* Optional (TCG_TARGET_HAS_nand_i64). */</comment>

    <case pos:start="247:5" pos:end="247:26">case <expr pos:start="247:10" pos:end="247:25"><name pos:start="247:10" pos:end="247:25">INDEX_op_nor_i64</name></expr>:</case>      <comment type="block" pos:start="247:33" pos:end="247:72">/* Optional (TCG_TARGET_HAS_nor_i64). */</comment>

    <case pos:start="249:5" pos:end="249:25">case <expr pos:start="249:10" pos:end="249:24"><name pos:start="249:10" pos:end="249:24">INDEX_op_or_i64</name></expr>:</case>

    <case pos:start="251:5" pos:end="251:26">case <expr pos:start="251:10" pos:end="251:25"><name pos:start="251:10" pos:end="251:25">INDEX_op_orc_i64</name></expr>:</case>      <comment type="block" pos:start="251:33" pos:end="251:72">/* Optional (TCG_TARGET_HAS_orc_i64). */</comment>

    <case pos:start="253:5" pos:end="253:26">case <expr pos:start="253:10" pos:end="253:25"><name pos:start="253:10" pos:end="253:25">INDEX_op_xor_i64</name></expr>:</case>

    <case pos:start="255:5" pos:end="255:26">case <expr pos:start="255:10" pos:end="255:25"><name pos:start="255:10" pos:end="255:25">INDEX_op_shl_i64</name></expr>:</case>

    <case pos:start="257:5" pos:end="257:26">case <expr pos:start="257:10" pos:end="257:25"><name pos:start="257:10" pos:end="257:25">INDEX_op_shr_i64</name></expr>:</case>

    <case pos:start="259:5" pos:end="259:26">case <expr pos:start="259:10" pos:end="259:25"><name pos:start="259:10" pos:end="259:25">INDEX_op_sar_i64</name></expr>:</case>

        <comment type="block" pos:start="261:9" pos:end="261:74">/* TODO: Implementation of rotl_i64, rotr_i64 missing in tci.c. */</comment>

    <case pos:start="263:5" pos:end="263:27">case <expr pos:start="263:10" pos:end="263:26"><name pos:start="263:10" pos:end="263:26">INDEX_op_rotl_i64</name></expr>:</case>     <comment type="block" pos:start="263:33" pos:end="263:72">/* Optional (TCG_TARGET_HAS_rot_i64). */</comment>

    <case pos:start="265:5" pos:end="265:27">case <expr pos:start="265:10" pos:end="265:26"><name pos:start="265:10" pos:end="265:26">INDEX_op_rotr_i64</name></expr>:</case>     <comment type="block" pos:start="265:33" pos:end="265:72">/* Optional (TCG_TARGET_HAS_rot_i64). */</comment>

        <expr_stmt pos:start="267:9" pos:end="267:30"><expr pos:start="267:9" pos:end="267:29"><call pos:start="267:9" pos:end="267:29"><name pos:start="267:9" pos:end="267:17">tcg_out_r</name><argument_list pos:start="267:18" pos:end="267:29">(<argument pos:start="267:19" pos:end="267:19"><expr pos:start="267:19" pos:end="267:19"><name pos:start="267:19" pos:end="267:19">s</name></expr></argument>, <argument pos:start="267:22" pos:end="267:28"><expr pos:start="267:22" pos:end="267:28"><name pos:start="267:22" pos:end="267:28"><name pos:start="267:22" pos:end="267:25">args</name><index pos:start="267:26" pos:end="267:28">[<expr pos:start="267:27" pos:end="267:27"><literal type="number" pos:start="267:27" pos:end="267:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:48"><expr pos:start="269:9" pos:end="269:47"><call pos:start="269:9" pos:end="269:47"><name pos:start="269:9" pos:end="269:20">tcg_out_ri64</name><argument_list pos:start="269:21" pos:end="269:47">(<argument pos:start="269:22" pos:end="269:22"><expr pos:start="269:22" pos:end="269:22"><name pos:start="269:22" pos:end="269:22">s</name></expr></argument>, <argument pos:start="269:25" pos:end="269:37"><expr pos:start="269:25" pos:end="269:37"><name pos:start="269:25" pos:end="269:37"><name pos:start="269:25" pos:end="269:34">const_args</name><index pos:start="269:35" pos:end="269:37">[<expr pos:start="269:36" pos:end="269:36"><literal type="number" pos:start="269:36" pos:end="269:36">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="269:40" pos:end="269:46"><expr pos:start="269:40" pos:end="269:46"><name pos:start="269:40" pos:end="269:46"><name pos:start="269:40" pos:end="269:43">args</name><index pos:start="269:44" pos:end="269:46">[<expr pos:start="269:45" pos:end="269:45"><literal type="number" pos:start="269:45" pos:end="269:45">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:48"><expr pos:start="271:9" pos:end="271:47"><call pos:start="271:9" pos:end="271:47"><name pos:start="271:9" pos:end="271:20">tcg_out_ri64</name><argument_list pos:start="271:21" pos:end="271:47">(<argument pos:start="271:22" pos:end="271:22"><expr pos:start="271:22" pos:end="271:22"><name pos:start="271:22" pos:end="271:22">s</name></expr></argument>, <argument pos:start="271:25" pos:end="271:37"><expr pos:start="271:25" pos:end="271:37"><name pos:start="271:25" pos:end="271:37"><name pos:start="271:25" pos:end="271:34">const_args</name><index pos:start="271:35" pos:end="271:37">[<expr pos:start="271:36" pos:end="271:36"><literal type="number" pos:start="271:36" pos:end="271:36">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="271:40" pos:end="271:46"><expr pos:start="271:40" pos:end="271:46"><name pos:start="271:40" pos:end="271:46"><name pos:start="271:40" pos:end="271:43">args</name><index pos:start="271:44" pos:end="271:46">[<expr pos:start="271:45" pos:end="271:45"><literal type="number" pos:start="271:45" pos:end="271:45">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="273:9" pos:end="273:14">break;</break>

    <case pos:start="275:5" pos:end="275:30">case <expr pos:start="275:10" pos:end="275:29"><name pos:start="275:10" pos:end="275:29">INDEX_op_deposit_i64</name></expr>:</case>  <comment type="block" pos:start="275:33" pos:end="275:76">/* Optional (TCG_TARGET_HAS_deposit_i64). */</comment>

        <expr_stmt pos:start="277:9" pos:end="277:30"><expr pos:start="277:9" pos:end="277:29"><call pos:start="277:9" pos:end="277:29"><name pos:start="277:9" pos:end="277:17">tcg_out_r</name><argument_list pos:start="277:18" pos:end="277:29">(<argument pos:start="277:19" pos:end="277:19"><expr pos:start="277:19" pos:end="277:19"><name pos:start="277:19" pos:end="277:19">s</name></expr></argument>, <argument pos:start="277:22" pos:end="277:28"><expr pos:start="277:22" pos:end="277:28"><name pos:start="277:22" pos:end="277:28"><name pos:start="277:22" pos:end="277:25">args</name><index pos:start="277:26" pos:end="277:28">[<expr pos:start="277:27" pos:end="277:27"><literal type="number" pos:start="277:27" pos:end="277:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:30"><expr pos:start="279:9" pos:end="279:29"><call pos:start="279:9" pos:end="279:29"><name pos:start="279:9" pos:end="279:17">tcg_out_r</name><argument_list pos:start="279:18" pos:end="279:29">(<argument pos:start="279:19" pos:end="279:19"><expr pos:start="279:19" pos:end="279:19"><name pos:start="279:19" pos:end="279:19">s</name></expr></argument>, <argument pos:start="279:22" pos:end="279:28"><expr pos:start="279:22" pos:end="279:28"><name pos:start="279:22" pos:end="279:28"><name pos:start="279:22" pos:end="279:25">args</name><index pos:start="279:26" pos:end="279:28">[<expr pos:start="279:27" pos:end="279:27"><literal type="number" pos:start="279:27" pos:end="279:27">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:30"><expr pos:start="281:9" pos:end="281:29"><call pos:start="281:9" pos:end="281:29"><name pos:start="281:9" pos:end="281:17">tcg_out_r</name><argument_list pos:start="281:18" pos:end="281:29">(<argument pos:start="281:19" pos:end="281:19"><expr pos:start="281:19" pos:end="281:19"><name pos:start="281:19" pos:end="281:19">s</name></expr></argument>, <argument pos:start="281:22" pos:end="281:28"><expr pos:start="281:22" pos:end="281:28"><name pos:start="281:22" pos:end="281:28"><name pos:start="281:22" pos:end="281:25">args</name><index pos:start="281:26" pos:end="281:28">[<expr pos:start="281:27" pos:end="281:27"><literal type="number" pos:start="281:27" pos:end="281:27">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:37"><expr pos:start="283:9" pos:end="283:36"><call pos:start="283:9" pos:end="283:36"><name pos:start="283:9" pos:end="283:14">assert</name><argument_list pos:start="283:15" pos:end="283:36">(<argument pos:start="283:16" pos:end="283:35"><expr pos:start="283:16" pos:end="283:35"><name pos:start="283:16" pos:end="283:22"><name pos:start="283:16" pos:end="283:19">args</name><index pos:start="283:20" pos:end="283:22">[<expr pos:start="283:21" pos:end="283:21"><literal type="number" pos:start="283:21" pos:end="283:21">3</literal></expr>]</index></name> <operator pos:start="283:24" pos:end="283:25">&lt;=</operator> <name pos:start="283:27" pos:end="283:35">UINT8_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:29"><expr pos:start="285:9" pos:end="285:28"><call pos:start="285:9" pos:end="285:28"><name pos:start="285:9" pos:end="285:16">tcg_out8</name><argument_list pos:start="285:17" pos:end="285:28">(<argument pos:start="285:18" pos:end="285:18"><expr pos:start="285:18" pos:end="285:18"><name pos:start="285:18" pos:end="285:18">s</name></expr></argument>, <argument pos:start="285:21" pos:end="285:27"><expr pos:start="285:21" pos:end="285:27"><name pos:start="285:21" pos:end="285:27"><name pos:start="285:21" pos:end="285:24">args</name><index pos:start="285:25" pos:end="285:27">[<expr pos:start="285:26" pos:end="285:26"><literal type="number" pos:start="285:26" pos:end="285:26">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:37"><expr pos:start="287:9" pos:end="287:36"><call pos:start="287:9" pos:end="287:36"><name pos:start="287:9" pos:end="287:14">assert</name><argument_list pos:start="287:15" pos:end="287:36">(<argument pos:start="287:16" pos:end="287:35"><expr pos:start="287:16" pos:end="287:35"><name pos:start="287:16" pos:end="287:22"><name pos:start="287:16" pos:end="287:19">args</name><index pos:start="287:20" pos:end="287:22">[<expr pos:start="287:21" pos:end="287:21"><literal type="number" pos:start="287:21" pos:end="287:21">4</literal></expr>]</index></name> <operator pos:start="287:24" pos:end="287:25">&lt;=</operator> <name pos:start="287:27" pos:end="287:35">UINT8_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:29"><expr pos:start="289:9" pos:end="289:28"><call pos:start="289:9" pos:end="289:28"><name pos:start="289:9" pos:end="289:16">tcg_out8</name><argument_list pos:start="289:17" pos:end="289:28">(<argument pos:start="289:18" pos:end="289:18"><expr pos:start="289:18" pos:end="289:18"><name pos:start="289:18" pos:end="289:18">s</name></expr></argument>, <argument pos:start="289:21" pos:end="289:27"><expr pos:start="289:21" pos:end="289:27"><name pos:start="289:21" pos:end="289:27"><name pos:start="289:21" pos:end="289:24">args</name><index pos:start="289:25" pos:end="289:27">[<expr pos:start="289:26" pos:end="289:26"><literal type="number" pos:start="289:26" pos:end="289:26">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="291:9" pos:end="291:14">break;</break>

    <case pos:start="293:5" pos:end="293:26">case <expr pos:start="293:10" pos:end="293:25"><name pos:start="293:10" pos:end="293:25">INDEX_op_div_i64</name></expr>:</case>      <comment type="block" pos:start="293:33" pos:end="293:72">/* Optional (TCG_TARGET_HAS_div_i64). */</comment>

    <case pos:start="295:5" pos:end="295:27">case <expr pos:start="295:10" pos:end="295:26"><name pos:start="295:10" pos:end="295:26">INDEX_op_divu_i64</name></expr>:</case>     <comment type="block" pos:start="295:33" pos:end="295:72">/* Optional (TCG_TARGET_HAS_div_i64). */</comment>

    <case pos:start="297:5" pos:end="297:26">case <expr pos:start="297:10" pos:end="297:25"><name pos:start="297:10" pos:end="297:25">INDEX_op_rem_i64</name></expr>:</case>      <comment type="block" pos:start="297:33" pos:end="297:72">/* Optional (TCG_TARGET_HAS_div_i64). */</comment>

    <case pos:start="299:5" pos:end="299:27">case <expr pos:start="299:10" pos:end="299:26"><name pos:start="299:10" pos:end="299:26">INDEX_op_remu_i64</name></expr>:</case>     <comment type="block" pos:start="299:33" pos:end="299:72">/* Optional (TCG_TARGET_HAS_div_i64). */</comment>

        <expr_stmt pos:start="301:9" pos:end="301:15"><expr pos:start="301:9" pos:end="301:14"><call pos:start="301:9" pos:end="301:14"><name pos:start="301:9" pos:end="301:12">TODO</name><argument_list pos:start="301:13" pos:end="301:14">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="303:9" pos:end="303:14">break;</break>

    <case pos:start="305:5" pos:end="305:27">case <expr pos:start="305:10" pos:end="305:26"><name pos:start="305:10" pos:end="305:26">INDEX_op_div2_i64</name></expr>:</case>     <comment type="block" pos:start="305:33" pos:end="305:73">/* Optional (TCG_TARGET_HAS_div2_i64). */</comment>

    <case pos:start="307:5" pos:end="307:28">case <expr pos:start="307:10" pos:end="307:27"><name pos:start="307:10" pos:end="307:27">INDEX_op_divu2_i64</name></expr>:</case>    <comment type="block" pos:start="307:33" pos:end="307:73">/* Optional (TCG_TARGET_HAS_div2_i64). */</comment>

        <expr_stmt pos:start="309:9" pos:end="309:15"><expr pos:start="309:9" pos:end="309:14"><call pos:start="309:9" pos:end="309:14"><name pos:start="309:9" pos:end="309:12">TODO</name><argument_list pos:start="309:13" pos:end="309:14">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="311:9" pos:end="311:14">break;</break>

    <case pos:start="313:5" pos:end="313:29">case <expr pos:start="313:10" pos:end="313:28"><name pos:start="313:10" pos:end="313:28">INDEX_op_brcond_i64</name></expr>:</case>

        <expr_stmt pos:start="315:9" pos:end="315:30"><expr pos:start="315:9" pos:end="315:29"><call pos:start="315:9" pos:end="315:29"><name pos:start="315:9" pos:end="315:17">tcg_out_r</name><argument_list pos:start="315:18" pos:end="315:29">(<argument pos:start="315:19" pos:end="315:19"><expr pos:start="315:19" pos:end="315:19"><name pos:start="315:19" pos:end="315:19">s</name></expr></argument>, <argument pos:start="315:22" pos:end="315:28"><expr pos:start="315:22" pos:end="315:28"><name pos:start="315:22" pos:end="315:28"><name pos:start="315:22" pos:end="315:25">args</name><index pos:start="315:26" pos:end="315:28">[<expr pos:start="315:27" pos:end="315:27"><literal type="number" pos:start="315:27" pos:end="315:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:48"><expr pos:start="317:9" pos:end="317:47"><call pos:start="317:9" pos:end="317:47"><name pos:start="317:9" pos:end="317:20">tcg_out_ri64</name><argument_list pos:start="317:21" pos:end="317:47">(<argument pos:start="317:22" pos:end="317:22"><expr pos:start="317:22" pos:end="317:22"><name pos:start="317:22" pos:end="317:22">s</name></expr></argument>, <argument pos:start="317:25" pos:end="317:37"><expr pos:start="317:25" pos:end="317:37"><name pos:start="317:25" pos:end="317:37"><name pos:start="317:25" pos:end="317:34">const_args</name><index pos:start="317:35" pos:end="317:37">[<expr pos:start="317:36" pos:end="317:36"><literal type="number" pos:start="317:36" pos:end="317:36">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="317:40" pos:end="317:46"><expr pos:start="317:40" pos:end="317:46"><name pos:start="317:40" pos:end="317:46"><name pos:start="317:40" pos:end="317:43">args</name><index pos:start="317:44" pos:end="317:46">[<expr pos:start="317:45" pos:end="317:45"><literal type="number" pos:start="317:45" pos:end="317:45">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:29"><expr pos:start="319:9" pos:end="319:28"><call pos:start="319:9" pos:end="319:28"><name pos:start="319:9" pos:end="319:16">tcg_out8</name><argument_list pos:start="319:17" pos:end="319:28">(<argument pos:start="319:18" pos:end="319:18"><expr pos:start="319:18" pos:end="319:18"><name pos:start="319:18" pos:end="319:18">s</name></expr></argument>, <argument pos:start="319:21" pos:end="319:27"><expr pos:start="319:21" pos:end="319:27"><name pos:start="319:21" pos:end="319:27"><name pos:start="319:21" pos:end="319:24">args</name><index pos:start="319:25" pos:end="319:27">[<expr pos:start="319:26" pos:end="319:26"><literal type="number" pos:start="319:26" pos:end="319:26">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>           <comment type="block" pos:start="319:41" pos:end="319:55">/* condition */</comment>

        <expr_stmt pos:start="321:9" pos:end="321:34"><expr pos:start="321:9" pos:end="321:33"><call pos:start="321:9" pos:end="321:33"><name pos:start="321:9" pos:end="321:21">tci_out_label</name><argument_list pos:start="321:22" pos:end="321:33">(<argument pos:start="321:23" pos:end="321:23"><expr pos:start="321:23" pos:end="321:23"><name pos:start="321:23" pos:end="321:23">s</name></expr></argument>, <argument pos:start="321:26" pos:end="321:32"><expr pos:start="321:26" pos:end="321:32"><name pos:start="321:26" pos:end="321:32"><name pos:start="321:26" pos:end="321:29">args</name><index pos:start="321:30" pos:end="321:32">[<expr pos:start="321:31" pos:end="321:31"><literal type="number" pos:start="321:31" pos:end="321:31">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="323:9" pos:end="323:14">break;</break>

    <case pos:start="325:5" pos:end="325:30">case <expr pos:start="325:10" pos:end="325:29"><name pos:start="325:10" pos:end="325:29">INDEX_op_bswap16_i64</name></expr>:</case>  <comment type="block" pos:start="325:33" pos:end="325:76">/* Optional (TCG_TARGET_HAS_bswap16_i64). */</comment>

    <case pos:start="327:5" pos:end="327:30">case <expr pos:start="327:10" pos:end="327:29"><name pos:start="327:10" pos:end="327:29">INDEX_op_bswap32_i64</name></expr>:</case>  <comment type="block" pos:start="327:33" pos:end="327:76">/* Optional (TCG_TARGET_HAS_bswap32_i64). */</comment>

    <case pos:start="329:5" pos:end="329:30">case <expr pos:start="329:10" pos:end="329:29"><name pos:start="329:10" pos:end="329:29">INDEX_op_bswap64_i64</name></expr>:</case>  <comment type="block" pos:start="329:33" pos:end="329:76">/* Optional (TCG_TARGET_HAS_bswap64_i64). */</comment>

    <case pos:start="331:5" pos:end="331:26">case <expr pos:start="331:10" pos:end="331:25"><name pos:start="331:10" pos:end="331:25">INDEX_op_not_i64</name></expr>:</case>      <comment type="block" pos:start="331:33" pos:end="331:72">/* Optional (TCG_TARGET_HAS_not_i64). */</comment>

    <case pos:start="333:5" pos:end="333:26">case <expr pos:start="333:10" pos:end="333:25"><name pos:start="333:10" pos:end="333:25">INDEX_op_neg_i64</name></expr>:</case>      <comment type="block" pos:start="333:33" pos:end="333:72">/* Optional (TCG_TARGET_HAS_neg_i64). */</comment>

    <case pos:start="335:5" pos:end="335:28">case <expr pos:start="335:10" pos:end="335:27"><name pos:start="335:10" pos:end="335:27">INDEX_op_ext8s_i64</name></expr>:</case>    <comment type="block" pos:start="335:33" pos:end="335:74">/* Optional (TCG_TARGET_HAS_ext8s_i64). */</comment>

    <case pos:start="337:5" pos:end="337:28">case <expr pos:start="337:10" pos:end="337:27"><name pos:start="337:10" pos:end="337:27">INDEX_op_ext8u_i64</name></expr>:</case>    <comment type="block" pos:start="337:33" pos:end="337:74">/* Optional (TCG_TARGET_HAS_ext8u_i64). */</comment>

    <case pos:start="339:5" pos:end="339:29">case <expr pos:start="339:10" pos:end="339:28"><name pos:start="339:10" pos:end="339:28">INDEX_op_ext16s_i64</name></expr>:</case>   <comment type="block" pos:start="339:33" pos:end="339:75">/* Optional (TCG_TARGET_HAS_ext16s_i64). */</comment>

    <case pos:start="341:5" pos:end="341:29">case <expr pos:start="341:10" pos:end="341:28"><name pos:start="341:10" pos:end="341:28">INDEX_op_ext16u_i64</name></expr>:</case>   <comment type="block" pos:start="341:33" pos:end="341:75">/* Optional (TCG_TARGET_HAS_ext16u_i64). */</comment>

    <case pos:start="343:5" pos:end="343:29">case <expr pos:start="343:10" pos:end="343:28"><name pos:start="343:10" pos:end="343:28">INDEX_op_ext32s_i64</name></expr>:</case>   <comment type="block" pos:start="343:33" pos:end="343:75">/* Optional (TCG_TARGET_HAS_ext32s_i64). */</comment>

    <case pos:start="345:5" pos:end="348:0">case <expr pos:start="345:10" pos:end="345:28"><name pos:start="345:10" pos:end="345:28">INDEX_op_ext32u_i64</name></expr>:</case>   <comment type="block" pos:start="345:33" pos:end="345:75">/* Optional (TCG_TARGET_HAS_ext32u_i64). */</comment>

<cpp:endif pos:start="347:1" pos:end="347:6">#<cpp:directive pos:start="347:2" pos:end="347:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="347:8" pos:end="347:38">/* TCG_TARGET_REG_BITS == 64 */</comment>

    <case pos:start="349:5" pos:end="349:26">case <expr pos:start="349:10" pos:end="349:25"><name pos:start="349:10" pos:end="349:25">INDEX_op_neg_i32</name></expr>:</case>      <comment type="block" pos:start="349:33" pos:end="349:72">/* Optional (TCG_TARGET_HAS_neg_i32). */</comment>

    <case pos:start="351:5" pos:end="351:26">case <expr pos:start="351:10" pos:end="351:25"><name pos:start="351:10" pos:end="351:25">INDEX_op_not_i32</name></expr>:</case>      <comment type="block" pos:start="351:33" pos:end="351:72">/* Optional (TCG_TARGET_HAS_not_i32). */</comment>

    <case pos:start="353:5" pos:end="353:28">case <expr pos:start="353:10" pos:end="353:27"><name pos:start="353:10" pos:end="353:27">INDEX_op_ext8s_i32</name></expr>:</case>    <comment type="block" pos:start="353:33" pos:end="353:74">/* Optional (TCG_TARGET_HAS_ext8s_i32). */</comment>

    <case pos:start="355:5" pos:end="355:29">case <expr pos:start="355:10" pos:end="355:28"><name pos:start="355:10" pos:end="355:28">INDEX_op_ext16s_i32</name></expr>:</case>   <comment type="block" pos:start="355:33" pos:end="355:75">/* Optional (TCG_TARGET_HAS_ext16s_i32). */</comment>

    <case pos:start="357:5" pos:end="357:28">case <expr pos:start="357:10" pos:end="357:27"><name pos:start="357:10" pos:end="357:27">INDEX_op_ext8u_i32</name></expr>:</case>    <comment type="block" pos:start="357:33" pos:end="357:74">/* Optional (TCG_TARGET_HAS_ext8u_i32). */</comment>

    <case pos:start="359:5" pos:end="359:29">case <expr pos:start="359:10" pos:end="359:28"><name pos:start="359:10" pos:end="359:28">INDEX_op_ext16u_i32</name></expr>:</case>   <comment type="block" pos:start="359:33" pos:end="359:75">/* Optional (TCG_TARGET_HAS_ext16u_i32). */</comment>

    <case pos:start="361:5" pos:end="361:30">case <expr pos:start="361:10" pos:end="361:29"><name pos:start="361:10" pos:end="361:29">INDEX_op_bswap16_i32</name></expr>:</case>  <comment type="block" pos:start="361:33" pos:end="361:76">/* Optional (TCG_TARGET_HAS_bswap16_i32). */</comment>

    <case pos:start="363:5" pos:end="363:30">case <expr pos:start="363:10" pos:end="363:29"><name pos:start="363:10" pos:end="363:29">INDEX_op_bswap32_i32</name></expr>:</case>  <comment type="block" pos:start="363:33" pos:end="363:76">/* Optional (TCG_TARGET_HAS_bswap32_i32). */</comment>

        <expr_stmt pos:start="365:9" pos:end="365:30"><expr pos:start="365:9" pos:end="365:29"><call pos:start="365:9" pos:end="365:29"><name pos:start="365:9" pos:end="365:17">tcg_out_r</name><argument_list pos:start="365:18" pos:end="365:29">(<argument pos:start="365:19" pos:end="365:19"><expr pos:start="365:19" pos:end="365:19"><name pos:start="365:19" pos:end="365:19">s</name></expr></argument>, <argument pos:start="365:22" pos:end="365:28"><expr pos:start="365:22" pos:end="365:28"><name pos:start="365:22" pos:end="365:28"><name pos:start="365:22" pos:end="365:25">args</name><index pos:start="365:26" pos:end="365:28">[<expr pos:start="365:27" pos:end="365:27"><literal type="number" pos:start="365:27" pos:end="365:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="367:9" pos:end="367:30"><expr pos:start="367:9" pos:end="367:29"><call pos:start="367:9" pos:end="367:29"><name pos:start="367:9" pos:end="367:17">tcg_out_r</name><argument_list pos:start="367:18" pos:end="367:29">(<argument pos:start="367:19" pos:end="367:19"><expr pos:start="367:19" pos:end="367:19"><name pos:start="367:19" pos:end="367:19">s</name></expr></argument>, <argument pos:start="367:22" pos:end="367:28"><expr pos:start="367:22" pos:end="367:28"><name pos:start="367:22" pos:end="367:28"><name pos:start="367:22" pos:end="367:25">args</name><index pos:start="367:26" pos:end="367:28">[<expr pos:start="367:27" pos:end="367:27"><literal type="number" pos:start="367:27" pos:end="367:27">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="369:9" pos:end="369:14">break;</break>

    <case pos:start="371:5" pos:end="371:26">case <expr pos:start="371:10" pos:end="371:25"><name pos:start="371:10" pos:end="371:25">INDEX_op_div_i32</name></expr>:</case>      <comment type="block" pos:start="371:33" pos:end="371:72">/* Optional (TCG_TARGET_HAS_div_i32). */</comment>

    <case pos:start="373:5" pos:end="373:27">case <expr pos:start="373:10" pos:end="373:26"><name pos:start="373:10" pos:end="373:26">INDEX_op_divu_i32</name></expr>:</case>     <comment type="block" pos:start="373:33" pos:end="373:72">/* Optional (TCG_TARGET_HAS_div_i32). */</comment>

    <case pos:start="375:5" pos:end="375:26">case <expr pos:start="375:10" pos:end="375:25"><name pos:start="375:10" pos:end="375:25">INDEX_op_rem_i32</name></expr>:</case>      <comment type="block" pos:start="375:33" pos:end="375:72">/* Optional (TCG_TARGET_HAS_div_i32). */</comment>

    <case pos:start="377:5" pos:end="377:27">case <expr pos:start="377:10" pos:end="377:26"><name pos:start="377:10" pos:end="377:26">INDEX_op_remu_i32</name></expr>:</case>     <comment type="block" pos:start="377:33" pos:end="377:72">/* Optional (TCG_TARGET_HAS_div_i32). */</comment>

        <expr_stmt pos:start="379:9" pos:end="379:30"><expr pos:start="379:9" pos:end="379:29"><call pos:start="379:9" pos:end="379:29"><name pos:start="379:9" pos:end="379:17">tcg_out_r</name><argument_list pos:start="379:18" pos:end="379:29">(<argument pos:start="379:19" pos:end="379:19"><expr pos:start="379:19" pos:end="379:19"><name pos:start="379:19" pos:end="379:19">s</name></expr></argument>, <argument pos:start="379:22" pos:end="379:28"><expr pos:start="379:22" pos:end="379:28"><name pos:start="379:22" pos:end="379:28"><name pos:start="379:22" pos:end="379:25">args</name><index pos:start="379:26" pos:end="379:28">[<expr pos:start="379:27" pos:end="379:27"><literal type="number" pos:start="379:27" pos:end="379:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="381:9" pos:end="381:48"><expr pos:start="381:9" pos:end="381:47"><call pos:start="381:9" pos:end="381:47"><name pos:start="381:9" pos:end="381:20">tcg_out_ri32</name><argument_list pos:start="381:21" pos:end="381:47">(<argument pos:start="381:22" pos:end="381:22"><expr pos:start="381:22" pos:end="381:22"><name pos:start="381:22" pos:end="381:22">s</name></expr></argument>, <argument pos:start="381:25" pos:end="381:37"><expr pos:start="381:25" pos:end="381:37"><name pos:start="381:25" pos:end="381:37"><name pos:start="381:25" pos:end="381:34">const_args</name><index pos:start="381:35" pos:end="381:37">[<expr pos:start="381:36" pos:end="381:36"><literal type="number" pos:start="381:36" pos:end="381:36">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="381:40" pos:end="381:46"><expr pos:start="381:40" pos:end="381:46"><name pos:start="381:40" pos:end="381:46"><name pos:start="381:40" pos:end="381:43">args</name><index pos:start="381:44" pos:end="381:46">[<expr pos:start="381:45" pos:end="381:45"><literal type="number" pos:start="381:45" pos:end="381:45">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="383:9" pos:end="383:48"><expr pos:start="383:9" pos:end="383:47"><call pos:start="383:9" pos:end="383:47"><name pos:start="383:9" pos:end="383:20">tcg_out_ri32</name><argument_list pos:start="383:21" pos:end="383:47">(<argument pos:start="383:22" pos:end="383:22"><expr pos:start="383:22" pos:end="383:22"><name pos:start="383:22" pos:end="383:22">s</name></expr></argument>, <argument pos:start="383:25" pos:end="383:37"><expr pos:start="383:25" pos:end="383:37"><name pos:start="383:25" pos:end="383:37"><name pos:start="383:25" pos:end="383:34">const_args</name><index pos:start="383:35" pos:end="383:37">[<expr pos:start="383:36" pos:end="383:36"><literal type="number" pos:start="383:36" pos:end="383:36">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="383:40" pos:end="383:46"><expr pos:start="383:40" pos:end="383:46"><name pos:start="383:40" pos:end="383:46"><name pos:start="383:40" pos:end="383:43">args</name><index pos:start="383:44" pos:end="383:46">[<expr pos:start="383:45" pos:end="383:45"><literal type="number" pos:start="383:45" pos:end="383:45">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="385:9" pos:end="385:14">break;</break>

    <case pos:start="387:5" pos:end="387:27">case <expr pos:start="387:10" pos:end="387:26"><name pos:start="387:10" pos:end="387:26">INDEX_op_div2_i32</name></expr>:</case>     <comment type="block" pos:start="387:33" pos:end="387:73">/* Optional (TCG_TARGET_HAS_div2_i32). */</comment>

    <case pos:start="389:5" pos:end="389:28">case <expr pos:start="389:10" pos:end="389:27"><name pos:start="389:10" pos:end="389:27">INDEX_op_divu2_i32</name></expr>:</case>    <comment type="block" pos:start="389:33" pos:end="389:73">/* Optional (TCG_TARGET_HAS_div2_i32). */</comment>

        <expr_stmt pos:start="391:9" pos:end="391:15"><expr pos:start="391:9" pos:end="391:14"><call pos:start="391:9" pos:end="391:14"><name pos:start="391:9" pos:end="391:12">TODO</name><argument_list pos:start="391:13" pos:end="391:14">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="393:9" pos:end="396:0">break;</break>

<cpp:if pos:start="395:1" pos:end="395:29">#<cpp:directive pos:start="395:2" pos:end="395:3">if</cpp:directive> <expr pos:start="395:5" pos:end="395:29"><name pos:start="395:5" pos:end="395:23">TCG_TARGET_REG_BITS</name> <operator pos:start="395:25" pos:end="395:26">==</operator> <literal type="number" pos:start="395:28" pos:end="395:29">32</literal></expr></cpp:if>

    <case pos:start="397:5" pos:end="397:27">case <expr pos:start="397:10" pos:end="397:26"><name pos:start="397:10" pos:end="397:26">INDEX_op_add2_i32</name></expr>:</case>

    <case pos:start="399:5" pos:end="399:27">case <expr pos:start="399:10" pos:end="399:26"><name pos:start="399:10" pos:end="399:26">INDEX_op_sub2_i32</name></expr>:</case>

        <expr_stmt pos:start="401:9" pos:end="401:30"><expr pos:start="401:9" pos:end="401:29"><call pos:start="401:9" pos:end="401:29"><name pos:start="401:9" pos:end="401:17">tcg_out_r</name><argument_list pos:start="401:18" pos:end="401:29">(<argument pos:start="401:19" pos:end="401:19"><expr pos:start="401:19" pos:end="401:19"><name pos:start="401:19" pos:end="401:19">s</name></expr></argument>, <argument pos:start="401:22" pos:end="401:28"><expr pos:start="401:22" pos:end="401:28"><name pos:start="401:22" pos:end="401:28"><name pos:start="401:22" pos:end="401:25">args</name><index pos:start="401:26" pos:end="401:28">[<expr pos:start="401:27" pos:end="401:27"><literal type="number" pos:start="401:27" pos:end="401:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="403:9" pos:end="403:30"><expr pos:start="403:9" pos:end="403:29"><call pos:start="403:9" pos:end="403:29"><name pos:start="403:9" pos:end="403:17">tcg_out_r</name><argument_list pos:start="403:18" pos:end="403:29">(<argument pos:start="403:19" pos:end="403:19"><expr pos:start="403:19" pos:end="403:19"><name pos:start="403:19" pos:end="403:19">s</name></expr></argument>, <argument pos:start="403:22" pos:end="403:28"><expr pos:start="403:22" pos:end="403:28"><name pos:start="403:22" pos:end="403:28"><name pos:start="403:22" pos:end="403:25">args</name><index pos:start="403:26" pos:end="403:28">[<expr pos:start="403:27" pos:end="403:27"><literal type="number" pos:start="403:27" pos:end="403:27">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="405:9" pos:end="405:30"><expr pos:start="405:9" pos:end="405:29"><call pos:start="405:9" pos:end="405:29"><name pos:start="405:9" pos:end="405:17">tcg_out_r</name><argument_list pos:start="405:18" pos:end="405:29">(<argument pos:start="405:19" pos:end="405:19"><expr pos:start="405:19" pos:end="405:19"><name pos:start="405:19" pos:end="405:19">s</name></expr></argument>, <argument pos:start="405:22" pos:end="405:28"><expr pos:start="405:22" pos:end="405:28"><name pos:start="405:22" pos:end="405:28"><name pos:start="405:22" pos:end="405:25">args</name><index pos:start="405:26" pos:end="405:28">[<expr pos:start="405:27" pos:end="405:27"><literal type="number" pos:start="405:27" pos:end="405:27">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="407:9" pos:end="407:30"><expr pos:start="407:9" pos:end="407:29"><call pos:start="407:9" pos:end="407:29"><name pos:start="407:9" pos:end="407:17">tcg_out_r</name><argument_list pos:start="407:18" pos:end="407:29">(<argument pos:start="407:19" pos:end="407:19"><expr pos:start="407:19" pos:end="407:19"><name pos:start="407:19" pos:end="407:19">s</name></expr></argument>, <argument pos:start="407:22" pos:end="407:28"><expr pos:start="407:22" pos:end="407:28"><name pos:start="407:22" pos:end="407:28"><name pos:start="407:22" pos:end="407:25">args</name><index pos:start="407:26" pos:end="407:28">[<expr pos:start="407:27" pos:end="407:27"><literal type="number" pos:start="407:27" pos:end="407:27">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="409:9" pos:end="409:30"><expr pos:start="409:9" pos:end="409:29"><call pos:start="409:9" pos:end="409:29"><name pos:start="409:9" pos:end="409:17">tcg_out_r</name><argument_list pos:start="409:18" pos:end="409:29">(<argument pos:start="409:19" pos:end="409:19"><expr pos:start="409:19" pos:end="409:19"><name pos:start="409:19" pos:end="409:19">s</name></expr></argument>, <argument pos:start="409:22" pos:end="409:28"><expr pos:start="409:22" pos:end="409:28"><name pos:start="409:22" pos:end="409:28"><name pos:start="409:22" pos:end="409:25">args</name><index pos:start="409:26" pos:end="409:28">[<expr pos:start="409:27" pos:end="409:27"><literal type="number" pos:start="409:27" pos:end="409:27">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="411:9" pos:end="411:30"><expr pos:start="411:9" pos:end="411:29"><call pos:start="411:9" pos:end="411:29"><name pos:start="411:9" pos:end="411:17">tcg_out_r</name><argument_list pos:start="411:18" pos:end="411:29">(<argument pos:start="411:19" pos:end="411:19"><expr pos:start="411:19" pos:end="411:19"><name pos:start="411:19" pos:end="411:19">s</name></expr></argument>, <argument pos:start="411:22" pos:end="411:28"><expr pos:start="411:22" pos:end="411:28"><name pos:start="411:22" pos:end="411:28"><name pos:start="411:22" pos:end="411:25">args</name><index pos:start="411:26" pos:end="411:28">[<expr pos:start="411:27" pos:end="411:27"><literal type="number" pos:start="411:27" pos:end="411:27">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="413:9" pos:end="413:14">break;</break>

    <case pos:start="415:5" pos:end="415:30">case <expr pos:start="415:10" pos:end="415:29"><name pos:start="415:10" pos:end="415:29">INDEX_op_brcond2_i32</name></expr>:</case>

        <expr_stmt pos:start="417:9" pos:end="417:30"><expr pos:start="417:9" pos:end="417:29"><call pos:start="417:9" pos:end="417:29"><name pos:start="417:9" pos:end="417:17">tcg_out_r</name><argument_list pos:start="417:18" pos:end="417:29">(<argument pos:start="417:19" pos:end="417:19"><expr pos:start="417:19" pos:end="417:19"><name pos:start="417:19" pos:end="417:19">s</name></expr></argument>, <argument pos:start="417:22" pos:end="417:28"><expr pos:start="417:22" pos:end="417:28"><name pos:start="417:22" pos:end="417:28"><name pos:start="417:22" pos:end="417:25">args</name><index pos:start="417:26" pos:end="417:28">[<expr pos:start="417:27" pos:end="417:27"><literal type="number" pos:start="417:27" pos:end="417:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="419:9" pos:end="419:30"><expr pos:start="419:9" pos:end="419:29"><call pos:start="419:9" pos:end="419:29"><name pos:start="419:9" pos:end="419:17">tcg_out_r</name><argument_list pos:start="419:18" pos:end="419:29">(<argument pos:start="419:19" pos:end="419:19"><expr pos:start="419:19" pos:end="419:19"><name pos:start="419:19" pos:end="419:19">s</name></expr></argument>, <argument pos:start="419:22" pos:end="419:28"><expr pos:start="419:22" pos:end="419:28"><name pos:start="419:22" pos:end="419:28"><name pos:start="419:22" pos:end="419:25">args</name><index pos:start="419:26" pos:end="419:28">[<expr pos:start="419:27" pos:end="419:27"><literal type="number" pos:start="419:27" pos:end="419:27">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="421:9" pos:end="421:48"><expr pos:start="421:9" pos:end="421:47"><call pos:start="421:9" pos:end="421:47"><name pos:start="421:9" pos:end="421:20">tcg_out_ri32</name><argument_list pos:start="421:21" pos:end="421:47">(<argument pos:start="421:22" pos:end="421:22"><expr pos:start="421:22" pos:end="421:22"><name pos:start="421:22" pos:end="421:22">s</name></expr></argument>, <argument pos:start="421:25" pos:end="421:37"><expr pos:start="421:25" pos:end="421:37"><name pos:start="421:25" pos:end="421:37"><name pos:start="421:25" pos:end="421:34">const_args</name><index pos:start="421:35" pos:end="421:37">[<expr pos:start="421:36" pos:end="421:36"><literal type="number" pos:start="421:36" pos:end="421:36">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="421:40" pos:end="421:46"><expr pos:start="421:40" pos:end="421:46"><name pos:start="421:40" pos:end="421:46"><name pos:start="421:40" pos:end="421:43">args</name><index pos:start="421:44" pos:end="421:46">[<expr pos:start="421:45" pos:end="421:45"><literal type="number" pos:start="421:45" pos:end="421:45">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="423:9" pos:end="423:48"><expr pos:start="423:9" pos:end="423:47"><call pos:start="423:9" pos:end="423:47"><name pos:start="423:9" pos:end="423:20">tcg_out_ri32</name><argument_list pos:start="423:21" pos:end="423:47">(<argument pos:start="423:22" pos:end="423:22"><expr pos:start="423:22" pos:end="423:22"><name pos:start="423:22" pos:end="423:22">s</name></expr></argument>, <argument pos:start="423:25" pos:end="423:37"><expr pos:start="423:25" pos:end="423:37"><name pos:start="423:25" pos:end="423:37"><name pos:start="423:25" pos:end="423:34">const_args</name><index pos:start="423:35" pos:end="423:37">[<expr pos:start="423:36" pos:end="423:36"><literal type="number" pos:start="423:36" pos:end="423:36">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="423:40" pos:end="423:46"><expr pos:start="423:40" pos:end="423:46"><name pos:start="423:40" pos:end="423:46"><name pos:start="423:40" pos:end="423:43">args</name><index pos:start="423:44" pos:end="423:46">[<expr pos:start="423:45" pos:end="423:45"><literal type="number" pos:start="423:45" pos:end="423:45">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="425:9" pos:end="425:29"><expr pos:start="425:9" pos:end="425:28"><call pos:start="425:9" pos:end="425:28"><name pos:start="425:9" pos:end="425:16">tcg_out8</name><argument_list pos:start="425:17" pos:end="425:28">(<argument pos:start="425:18" pos:end="425:18"><expr pos:start="425:18" pos:end="425:18"><name pos:start="425:18" pos:end="425:18">s</name></expr></argument>, <argument pos:start="425:21" pos:end="425:27"><expr pos:start="425:21" pos:end="425:27"><name pos:start="425:21" pos:end="425:27"><name pos:start="425:21" pos:end="425:24">args</name><index pos:start="425:25" pos:end="425:27">[<expr pos:start="425:26" pos:end="425:26"><literal type="number" pos:start="425:26" pos:end="425:26">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>           <comment type="block" pos:start="425:41" pos:end="425:55">/* condition */</comment>

        <expr_stmt pos:start="427:9" pos:end="427:34"><expr pos:start="427:9" pos:end="427:33"><call pos:start="427:9" pos:end="427:33"><name pos:start="427:9" pos:end="427:21">tci_out_label</name><argument_list pos:start="427:22" pos:end="427:33">(<argument pos:start="427:23" pos:end="427:23"><expr pos:start="427:23" pos:end="427:23"><name pos:start="427:23" pos:end="427:23">s</name></expr></argument>, <argument pos:start="427:26" pos:end="427:32"><expr pos:start="427:26" pos:end="427:32"><name pos:start="427:26" pos:end="427:32"><name pos:start="427:26" pos:end="427:29">args</name><index pos:start="427:30" pos:end="427:32">[<expr pos:start="427:31" pos:end="427:31"><literal type="number" pos:start="427:31" pos:end="427:31">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="429:9" pos:end="429:14">break;</break>

    <case pos:start="431:5" pos:end="431:28">case <expr pos:start="431:10" pos:end="431:27"><name pos:start="431:10" pos:end="431:27">INDEX_op_mulu2_i32</name></expr>:</case>

        <expr_stmt pos:start="433:9" pos:end="433:30"><expr pos:start="433:9" pos:end="433:29"><call pos:start="433:9" pos:end="433:29"><name pos:start="433:9" pos:end="433:17">tcg_out_r</name><argument_list pos:start="433:18" pos:end="433:29">(<argument pos:start="433:19" pos:end="433:19"><expr pos:start="433:19" pos:end="433:19"><name pos:start="433:19" pos:end="433:19">s</name></expr></argument>, <argument pos:start="433:22" pos:end="433:28"><expr pos:start="433:22" pos:end="433:28"><name pos:start="433:22" pos:end="433:28"><name pos:start="433:22" pos:end="433:25">args</name><index pos:start="433:26" pos:end="433:28">[<expr pos:start="433:27" pos:end="433:27"><literal type="number" pos:start="433:27" pos:end="433:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="435:9" pos:end="435:30"><expr pos:start="435:9" pos:end="435:29"><call pos:start="435:9" pos:end="435:29"><name pos:start="435:9" pos:end="435:17">tcg_out_r</name><argument_list pos:start="435:18" pos:end="435:29">(<argument pos:start="435:19" pos:end="435:19"><expr pos:start="435:19" pos:end="435:19"><name pos:start="435:19" pos:end="435:19">s</name></expr></argument>, <argument pos:start="435:22" pos:end="435:28"><expr pos:start="435:22" pos:end="435:28"><name pos:start="435:22" pos:end="435:28"><name pos:start="435:22" pos:end="435:25">args</name><index pos:start="435:26" pos:end="435:28">[<expr pos:start="435:27" pos:end="435:27"><literal type="number" pos:start="435:27" pos:end="435:27">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="437:9" pos:end="437:30"><expr pos:start="437:9" pos:end="437:29"><call pos:start="437:9" pos:end="437:29"><name pos:start="437:9" pos:end="437:17">tcg_out_r</name><argument_list pos:start="437:18" pos:end="437:29">(<argument pos:start="437:19" pos:end="437:19"><expr pos:start="437:19" pos:end="437:19"><name pos:start="437:19" pos:end="437:19">s</name></expr></argument>, <argument pos:start="437:22" pos:end="437:28"><expr pos:start="437:22" pos:end="437:28"><name pos:start="437:22" pos:end="437:28"><name pos:start="437:22" pos:end="437:25">args</name><index pos:start="437:26" pos:end="437:28">[<expr pos:start="437:27" pos:end="437:27"><literal type="number" pos:start="437:27" pos:end="437:27">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="439:9" pos:end="439:30"><expr pos:start="439:9" pos:end="439:29"><call pos:start="439:9" pos:end="439:29"><name pos:start="439:9" pos:end="439:17">tcg_out_r</name><argument_list pos:start="439:18" pos:end="439:29">(<argument pos:start="439:19" pos:end="439:19"><expr pos:start="439:19" pos:end="439:19"><name pos:start="439:19" pos:end="439:19">s</name></expr></argument>, <argument pos:start="439:22" pos:end="439:28"><expr pos:start="439:22" pos:end="439:28"><name pos:start="439:22" pos:end="439:28"><name pos:start="439:22" pos:end="439:25">args</name><index pos:start="439:26" pos:end="439:28">[<expr pos:start="439:27" pos:end="439:27"><literal type="number" pos:start="439:27" pos:end="439:27">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="441:9" pos:end="444:0">break;</break>

<cpp:endif pos:start="443:1" pos:end="443:6">#<cpp:directive pos:start="443:2" pos:end="443:6">endif</cpp:directive></cpp:endif>

    <case pos:start="445:5" pos:end="445:29">case <expr pos:start="445:10" pos:end="445:28"><name pos:start="445:10" pos:end="445:28">INDEX_op_brcond_i32</name></expr>:</case>

        <expr_stmt pos:start="447:9" pos:end="447:30"><expr pos:start="447:9" pos:end="447:29"><call pos:start="447:9" pos:end="447:29"><name pos:start="447:9" pos:end="447:17">tcg_out_r</name><argument_list pos:start="447:18" pos:end="447:29">(<argument pos:start="447:19" pos:end="447:19"><expr pos:start="447:19" pos:end="447:19"><name pos:start="447:19" pos:end="447:19">s</name></expr></argument>, <argument pos:start="447:22" pos:end="447:28"><expr pos:start="447:22" pos:end="447:28"><name pos:start="447:22" pos:end="447:28"><name pos:start="447:22" pos:end="447:25">args</name><index pos:start="447:26" pos:end="447:28">[<expr pos:start="447:27" pos:end="447:27"><literal type="number" pos:start="447:27" pos:end="447:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="449:9" pos:end="449:48"><expr pos:start="449:9" pos:end="449:47"><call pos:start="449:9" pos:end="449:47"><name pos:start="449:9" pos:end="449:20">tcg_out_ri32</name><argument_list pos:start="449:21" pos:end="449:47">(<argument pos:start="449:22" pos:end="449:22"><expr pos:start="449:22" pos:end="449:22"><name pos:start="449:22" pos:end="449:22">s</name></expr></argument>, <argument pos:start="449:25" pos:end="449:37"><expr pos:start="449:25" pos:end="449:37"><name pos:start="449:25" pos:end="449:37"><name pos:start="449:25" pos:end="449:34">const_args</name><index pos:start="449:35" pos:end="449:37">[<expr pos:start="449:36" pos:end="449:36"><literal type="number" pos:start="449:36" pos:end="449:36">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="449:40" pos:end="449:46"><expr pos:start="449:40" pos:end="449:46"><name pos:start="449:40" pos:end="449:46"><name pos:start="449:40" pos:end="449:43">args</name><index pos:start="449:44" pos:end="449:46">[<expr pos:start="449:45" pos:end="449:45"><literal type="number" pos:start="449:45" pos:end="449:45">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="451:9" pos:end="451:29"><expr pos:start="451:9" pos:end="451:28"><call pos:start="451:9" pos:end="451:28"><name pos:start="451:9" pos:end="451:16">tcg_out8</name><argument_list pos:start="451:17" pos:end="451:28">(<argument pos:start="451:18" pos:end="451:18"><expr pos:start="451:18" pos:end="451:18"><name pos:start="451:18" pos:end="451:18">s</name></expr></argument>, <argument pos:start="451:21" pos:end="451:27"><expr pos:start="451:21" pos:end="451:27"><name pos:start="451:21" pos:end="451:27"><name pos:start="451:21" pos:end="451:24">args</name><index pos:start="451:25" pos:end="451:27">[<expr pos:start="451:26" pos:end="451:26"><literal type="number" pos:start="451:26" pos:end="451:26">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>           <comment type="block" pos:start="451:41" pos:end="451:55">/* condition */</comment>

        <expr_stmt pos:start="453:9" pos:end="453:34"><expr pos:start="453:9" pos:end="453:33"><call pos:start="453:9" pos:end="453:33"><name pos:start="453:9" pos:end="453:21">tci_out_label</name><argument_list pos:start="453:22" pos:end="453:33">(<argument pos:start="453:23" pos:end="453:23"><expr pos:start="453:23" pos:end="453:23"><name pos:start="453:23" pos:end="453:23">s</name></expr></argument>, <argument pos:start="453:26" pos:end="453:32"><expr pos:start="453:26" pos:end="453:32"><name pos:start="453:26" pos:end="453:32"><name pos:start="453:26" pos:end="453:29">args</name><index pos:start="453:30" pos:end="453:32">[<expr pos:start="453:31" pos:end="453:31"><literal type="number" pos:start="453:31" pos:end="453:31">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="455:9" pos:end="455:14">break;</break>

    <case pos:start="457:5" pos:end="457:28">case <expr pos:start="457:10" pos:end="457:27"><name pos:start="457:10" pos:end="457:27">INDEX_op_qemu_ld8u</name></expr>:</case>

    <case pos:start="459:5" pos:end="459:28">case <expr pos:start="459:10" pos:end="459:27"><name pos:start="459:10" pos:end="459:27">INDEX_op_qemu_ld8s</name></expr>:</case>

    <case pos:start="461:5" pos:end="461:29">case <expr pos:start="461:10" pos:end="461:28"><name pos:start="461:10" pos:end="461:28">INDEX_op_qemu_ld16u</name></expr>:</case>

    <case pos:start="463:5" pos:end="463:29">case <expr pos:start="463:10" pos:end="463:28"><name pos:start="463:10" pos:end="463:28">INDEX_op_qemu_ld16s</name></expr>:</case>

    <case pos:start="465:5" pos:end="468:0">case <expr pos:start="465:10" pos:end="465:27"><name pos:start="465:10" pos:end="465:27">INDEX_op_qemu_ld32</name></expr>:</case>

<cpp:if pos:start="467:1" pos:end="467:29">#<cpp:directive pos:start="467:2" pos:end="467:3">if</cpp:directive> <expr pos:start="467:5" pos:end="467:29"><name pos:start="467:5" pos:end="467:23">TCG_TARGET_REG_BITS</name> <operator pos:start="467:25" pos:end="467:26">==</operator> <literal type="number" pos:start="467:28" pos:end="467:29">64</literal></expr></cpp:if>

    <case pos:start="469:5" pos:end="469:29">case <expr pos:start="469:10" pos:end="469:28"><name pos:start="469:10" pos:end="469:28">INDEX_op_qemu_ld32s</name></expr>:</case>

    <case pos:start="471:5" pos:end="474:0">case <expr pos:start="471:10" pos:end="471:28"><name pos:start="471:10" pos:end="471:28">INDEX_op_qemu_ld32u</name></expr>:</case>

<cpp:endif pos:start="473:1" pos:end="473:6">#<cpp:directive pos:start="473:2" pos:end="473:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="475:9" pos:end="475:30"><expr pos:start="475:9" pos:end="475:29"><call pos:start="475:9" pos:end="475:29"><name pos:start="475:9" pos:end="475:17">tcg_out_r</name><argument_list pos:start="475:18" pos:end="475:29">(<argument pos:start="475:19" pos:end="475:19"><expr pos:start="475:19" pos:end="475:19"><name pos:start="475:19" pos:end="475:19">s</name></expr></argument>, <argument pos:start="475:22" pos:end="475:28"><expr pos:start="475:22" pos:end="475:28"><operator pos:start="475:22" pos:end="475:22">*</operator><name pos:start="475:23" pos:end="475:26">args</name><operator pos:start="475:27" pos:end="475:28">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="477:9" pos:end="480:0"><expr pos:start="477:9" pos:end="477:29"><call pos:start="477:9" pos:end="477:29"><name pos:start="477:9" pos:end="477:17">tcg_out_r</name><argument_list pos:start="477:18" pos:end="477:29">(<argument pos:start="477:19" pos:end="477:19"><expr pos:start="477:19" pos:end="477:19"><name pos:start="477:19" pos:end="477:19">s</name></expr></argument>, <argument pos:start="477:22" pos:end="477:28"><expr pos:start="477:22" pos:end="477:28"><operator pos:start="477:22" pos:end="477:22">*</operator><name pos:start="477:23" pos:end="477:26">args</name><operator pos:start="477:27" pos:end="477:28">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="479:1" pos:end="479:42">#<cpp:directive pos:start="479:2" pos:end="479:3">if</cpp:directive> <expr pos:start="479:5" pos:end="479:42"><name pos:start="479:5" pos:end="479:20">TARGET_LONG_BITS</name> <operator pos:start="479:22" pos:end="479:22">&gt;</operator> <name pos:start="479:24" pos:end="479:42">TCG_TARGET_REG_BITS</name></expr></cpp:if>

        <expr_stmt pos:start="481:9" pos:end="486:0"><expr pos:start="481:9" pos:end="481:29"><call pos:start="481:9" pos:end="481:29"><name pos:start="481:9" pos:end="481:17">tcg_out_r</name><argument_list pos:start="481:18" pos:end="481:29">(<argument pos:start="481:19" pos:end="481:19"><expr pos:start="481:19" pos:end="481:19"><name pos:start="481:19" pos:end="481:19">s</name></expr></argument>, <argument pos:start="481:22" pos:end="481:28"><expr pos:start="481:22" pos:end="481:28"><operator pos:start="481:22" pos:end="481:22">*</operator><name pos:start="481:23" pos:end="481:26">args</name><operator pos:start="481:27" pos:end="481:28">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="483:1" pos:end="483:6">#<cpp:directive pos:start="483:2" pos:end="483:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="485:1" pos:end="485:21">#<cpp:directive pos:start="485:2" pos:end="485:6">ifdef</cpp:directive> <name pos:start="485:8" pos:end="485:21">CONFIG_SOFTMMU</name></cpp:ifdef>

        <expr_stmt pos:start="487:9" pos:end="490:0"><expr pos:start="487:9" pos:end="487:27"><call pos:start="487:9" pos:end="487:27"><name pos:start="487:9" pos:end="487:17">tcg_out_i</name><argument_list pos:start="487:18" pos:end="487:27">(<argument pos:start="487:19" pos:end="487:19"><expr pos:start="487:19" pos:end="487:19"><name pos:start="487:19" pos:end="487:19">s</name></expr></argument>, <argument pos:start="487:22" pos:end="487:26"><expr pos:start="487:22" pos:end="487:26"><operator pos:start="487:22" pos:end="487:22">*</operator><name pos:start="487:23" pos:end="487:26">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="489:1" pos:end="489:6">#<cpp:directive pos:start="489:2" pos:end="489:6">endif</cpp:directive></cpp:endif>

        <break pos:start="491:9" pos:end="491:14">break;</break>

    <case pos:start="493:5" pos:end="493:28">case <expr pos:start="493:10" pos:end="493:27"><name pos:start="493:10" pos:end="493:27">INDEX_op_qemu_ld64</name></expr>:</case>

        <expr_stmt pos:start="495:9" pos:end="498:0"><expr pos:start="495:9" pos:end="495:29"><call pos:start="495:9" pos:end="495:29"><name pos:start="495:9" pos:end="495:17">tcg_out_r</name><argument_list pos:start="495:18" pos:end="495:29">(<argument pos:start="495:19" pos:end="495:19"><expr pos:start="495:19" pos:end="495:19"><name pos:start="495:19" pos:end="495:19">s</name></expr></argument>, <argument pos:start="495:22" pos:end="495:28"><expr pos:start="495:22" pos:end="495:28"><operator pos:start="495:22" pos:end="495:22">*</operator><name pos:start="495:23" pos:end="495:26">args</name><operator pos:start="495:27" pos:end="495:28">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="497:1" pos:end="497:29">#<cpp:directive pos:start="497:2" pos:end="497:3">if</cpp:directive> <expr pos:start="497:5" pos:end="497:29"><name pos:start="497:5" pos:end="497:23">TCG_TARGET_REG_BITS</name> <operator pos:start="497:25" pos:end="497:26">==</operator> <literal type="number" pos:start="497:28" pos:end="497:29">32</literal></expr></cpp:if>

        <expr_stmt pos:start="499:9" pos:end="502:0"><expr pos:start="499:9" pos:end="499:29"><call pos:start="499:9" pos:end="499:29"><name pos:start="499:9" pos:end="499:17">tcg_out_r</name><argument_list pos:start="499:18" pos:end="499:29">(<argument pos:start="499:19" pos:end="499:19"><expr pos:start="499:19" pos:end="499:19"><name pos:start="499:19" pos:end="499:19">s</name></expr></argument>, <argument pos:start="499:22" pos:end="499:28"><expr pos:start="499:22" pos:end="499:28"><operator pos:start="499:22" pos:end="499:22">*</operator><name pos:start="499:23" pos:end="499:26">args</name><operator pos:start="499:27" pos:end="499:28">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="501:1" pos:end="501:6">#<cpp:directive pos:start="501:2" pos:end="501:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="503:9" pos:end="506:0"><expr pos:start="503:9" pos:end="503:29"><call pos:start="503:9" pos:end="503:29"><name pos:start="503:9" pos:end="503:17">tcg_out_r</name><argument_list pos:start="503:18" pos:end="503:29">(<argument pos:start="503:19" pos:end="503:19"><expr pos:start="503:19" pos:end="503:19"><name pos:start="503:19" pos:end="503:19">s</name></expr></argument>, <argument pos:start="503:22" pos:end="503:28"><expr pos:start="503:22" pos:end="503:28"><operator pos:start="503:22" pos:end="503:22">*</operator><name pos:start="503:23" pos:end="503:26">args</name><operator pos:start="503:27" pos:end="503:28">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="505:1" pos:end="505:42">#<cpp:directive pos:start="505:2" pos:end="505:3">if</cpp:directive> <expr pos:start="505:5" pos:end="505:42"><name pos:start="505:5" pos:end="505:20">TARGET_LONG_BITS</name> <operator pos:start="505:22" pos:end="505:22">&gt;</operator> <name pos:start="505:24" pos:end="505:42">TCG_TARGET_REG_BITS</name></expr></cpp:if>

        <expr_stmt pos:start="507:9" pos:end="512:0"><expr pos:start="507:9" pos:end="507:29"><call pos:start="507:9" pos:end="507:29"><name pos:start="507:9" pos:end="507:17">tcg_out_r</name><argument_list pos:start="507:18" pos:end="507:29">(<argument pos:start="507:19" pos:end="507:19"><expr pos:start="507:19" pos:end="507:19"><name pos:start="507:19" pos:end="507:19">s</name></expr></argument>, <argument pos:start="507:22" pos:end="507:28"><expr pos:start="507:22" pos:end="507:28"><operator pos:start="507:22" pos:end="507:22">*</operator><name pos:start="507:23" pos:end="507:26">args</name><operator pos:start="507:27" pos:end="507:28">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="509:1" pos:end="509:6">#<cpp:directive pos:start="509:2" pos:end="509:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="511:1" pos:end="511:21">#<cpp:directive pos:start="511:2" pos:end="511:6">ifdef</cpp:directive> <name pos:start="511:8" pos:end="511:21">CONFIG_SOFTMMU</name></cpp:ifdef>

        <expr_stmt pos:start="513:9" pos:end="516:0"><expr pos:start="513:9" pos:end="513:27"><call pos:start="513:9" pos:end="513:27"><name pos:start="513:9" pos:end="513:17">tcg_out_i</name><argument_list pos:start="513:18" pos:end="513:27">(<argument pos:start="513:19" pos:end="513:19"><expr pos:start="513:19" pos:end="513:19"><name pos:start="513:19" pos:end="513:19">s</name></expr></argument>, <argument pos:start="513:22" pos:end="513:26"><expr pos:start="513:22" pos:end="513:26"><operator pos:start="513:22" pos:end="513:22">*</operator><name pos:start="513:23" pos:end="513:26">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="515:1" pos:end="515:6">#<cpp:directive pos:start="515:2" pos:end="515:6">endif</cpp:directive></cpp:endif>

        <break pos:start="517:9" pos:end="517:14">break;</break>

    <case pos:start="519:5" pos:end="519:27">case <expr pos:start="519:10" pos:end="519:26"><name pos:start="519:10" pos:end="519:26">INDEX_op_qemu_st8</name></expr>:</case>

    <case pos:start="521:5" pos:end="521:28">case <expr pos:start="521:10" pos:end="521:27"><name pos:start="521:10" pos:end="521:27">INDEX_op_qemu_st16</name></expr>:</case>

    <case pos:start="523:5" pos:end="523:28">case <expr pos:start="523:10" pos:end="523:27"><name pos:start="523:10" pos:end="523:27">INDEX_op_qemu_st32</name></expr>:</case>

        <expr_stmt pos:start="525:9" pos:end="525:30"><expr pos:start="525:9" pos:end="525:29"><call pos:start="525:9" pos:end="525:29"><name pos:start="525:9" pos:end="525:17">tcg_out_r</name><argument_list pos:start="525:18" pos:end="525:29">(<argument pos:start="525:19" pos:end="525:19"><expr pos:start="525:19" pos:end="525:19"><name pos:start="525:19" pos:end="525:19">s</name></expr></argument>, <argument pos:start="525:22" pos:end="525:28"><expr pos:start="525:22" pos:end="525:28"><operator pos:start="525:22" pos:end="525:22">*</operator><name pos:start="525:23" pos:end="525:26">args</name><operator pos:start="525:27" pos:end="525:28">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="527:9" pos:end="530:0"><expr pos:start="527:9" pos:end="527:29"><call pos:start="527:9" pos:end="527:29"><name pos:start="527:9" pos:end="527:17">tcg_out_r</name><argument_list pos:start="527:18" pos:end="527:29">(<argument pos:start="527:19" pos:end="527:19"><expr pos:start="527:19" pos:end="527:19"><name pos:start="527:19" pos:end="527:19">s</name></expr></argument>, <argument pos:start="527:22" pos:end="527:28"><expr pos:start="527:22" pos:end="527:28"><operator pos:start="527:22" pos:end="527:22">*</operator><name pos:start="527:23" pos:end="527:26">args</name><operator pos:start="527:27" pos:end="527:28">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="529:1" pos:end="529:42">#<cpp:directive pos:start="529:2" pos:end="529:3">if</cpp:directive> <expr pos:start="529:5" pos:end="529:42"><name pos:start="529:5" pos:end="529:20">TARGET_LONG_BITS</name> <operator pos:start="529:22" pos:end="529:22">&gt;</operator> <name pos:start="529:24" pos:end="529:42">TCG_TARGET_REG_BITS</name></expr></cpp:if>

        <expr_stmt pos:start="531:9" pos:end="536:0"><expr pos:start="531:9" pos:end="531:29"><call pos:start="531:9" pos:end="531:29"><name pos:start="531:9" pos:end="531:17">tcg_out_r</name><argument_list pos:start="531:18" pos:end="531:29">(<argument pos:start="531:19" pos:end="531:19"><expr pos:start="531:19" pos:end="531:19"><name pos:start="531:19" pos:end="531:19">s</name></expr></argument>, <argument pos:start="531:22" pos:end="531:28"><expr pos:start="531:22" pos:end="531:28"><operator pos:start="531:22" pos:end="531:22">*</operator><name pos:start="531:23" pos:end="531:26">args</name><operator pos:start="531:27" pos:end="531:28">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="533:1" pos:end="533:6">#<cpp:directive pos:start="533:2" pos:end="533:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="535:1" pos:end="535:21">#<cpp:directive pos:start="535:2" pos:end="535:6">ifdef</cpp:directive> <name pos:start="535:8" pos:end="535:21">CONFIG_SOFTMMU</name></cpp:ifdef>

        <expr_stmt pos:start="537:9" pos:end="540:0"><expr pos:start="537:9" pos:end="537:27"><call pos:start="537:9" pos:end="537:27"><name pos:start="537:9" pos:end="537:17">tcg_out_i</name><argument_list pos:start="537:18" pos:end="537:27">(<argument pos:start="537:19" pos:end="537:19"><expr pos:start="537:19" pos:end="537:19"><name pos:start="537:19" pos:end="537:19">s</name></expr></argument>, <argument pos:start="537:22" pos:end="537:26"><expr pos:start="537:22" pos:end="537:26"><operator pos:start="537:22" pos:end="537:22">*</operator><name pos:start="537:23" pos:end="537:26">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="539:1" pos:end="539:6">#<cpp:directive pos:start="539:2" pos:end="539:6">endif</cpp:directive></cpp:endif>

        <break pos:start="541:9" pos:end="541:14">break;</break>

    <case pos:start="543:5" pos:end="543:28">case <expr pos:start="543:10" pos:end="543:27"><name pos:start="543:10" pos:end="543:27">INDEX_op_qemu_st64</name></expr>:</case>

        <expr_stmt pos:start="545:9" pos:end="548:0"><expr pos:start="545:9" pos:end="545:29"><call pos:start="545:9" pos:end="545:29"><name pos:start="545:9" pos:end="545:17">tcg_out_r</name><argument_list pos:start="545:18" pos:end="545:29">(<argument pos:start="545:19" pos:end="545:19"><expr pos:start="545:19" pos:end="545:19"><name pos:start="545:19" pos:end="545:19">s</name></expr></argument>, <argument pos:start="545:22" pos:end="545:28"><expr pos:start="545:22" pos:end="545:28"><operator pos:start="545:22" pos:end="545:22">*</operator><name pos:start="545:23" pos:end="545:26">args</name><operator pos:start="545:27" pos:end="545:28">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="547:1" pos:end="547:29">#<cpp:directive pos:start="547:2" pos:end="547:3">if</cpp:directive> <expr pos:start="547:5" pos:end="547:29"><name pos:start="547:5" pos:end="547:23">TCG_TARGET_REG_BITS</name> <operator pos:start="547:25" pos:end="547:26">==</operator> <literal type="number" pos:start="547:28" pos:end="547:29">32</literal></expr></cpp:if>

        <expr_stmt pos:start="549:9" pos:end="552:0"><expr pos:start="549:9" pos:end="549:29"><call pos:start="549:9" pos:end="549:29"><name pos:start="549:9" pos:end="549:17">tcg_out_r</name><argument_list pos:start="549:18" pos:end="549:29">(<argument pos:start="549:19" pos:end="549:19"><expr pos:start="549:19" pos:end="549:19"><name pos:start="549:19" pos:end="549:19">s</name></expr></argument>, <argument pos:start="549:22" pos:end="549:28"><expr pos:start="549:22" pos:end="549:28"><operator pos:start="549:22" pos:end="549:22">*</operator><name pos:start="549:23" pos:end="549:26">args</name><operator pos:start="549:27" pos:end="549:28">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="551:1" pos:end="551:6">#<cpp:directive pos:start="551:2" pos:end="551:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="553:9" pos:end="556:0"><expr pos:start="553:9" pos:end="553:29"><call pos:start="553:9" pos:end="553:29"><name pos:start="553:9" pos:end="553:17">tcg_out_r</name><argument_list pos:start="553:18" pos:end="553:29">(<argument pos:start="553:19" pos:end="553:19"><expr pos:start="553:19" pos:end="553:19"><name pos:start="553:19" pos:end="553:19">s</name></expr></argument>, <argument pos:start="553:22" pos:end="553:28"><expr pos:start="553:22" pos:end="553:28"><operator pos:start="553:22" pos:end="553:22">*</operator><name pos:start="553:23" pos:end="553:26">args</name><operator pos:start="553:27" pos:end="553:28">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="555:1" pos:end="555:42">#<cpp:directive pos:start="555:2" pos:end="555:3">if</cpp:directive> <expr pos:start="555:5" pos:end="555:42"><name pos:start="555:5" pos:end="555:20">TARGET_LONG_BITS</name> <operator pos:start="555:22" pos:end="555:22">&gt;</operator> <name pos:start="555:24" pos:end="555:42">TCG_TARGET_REG_BITS</name></expr></cpp:if>

        <expr_stmt pos:start="557:9" pos:end="562:0"><expr pos:start="557:9" pos:end="557:29"><call pos:start="557:9" pos:end="557:29"><name pos:start="557:9" pos:end="557:17">tcg_out_r</name><argument_list pos:start="557:18" pos:end="557:29">(<argument pos:start="557:19" pos:end="557:19"><expr pos:start="557:19" pos:end="557:19"><name pos:start="557:19" pos:end="557:19">s</name></expr></argument>, <argument pos:start="557:22" pos:end="557:28"><expr pos:start="557:22" pos:end="557:28"><operator pos:start="557:22" pos:end="557:22">*</operator><name pos:start="557:23" pos:end="557:26">args</name><operator pos:start="557:27" pos:end="557:28">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="559:1" pos:end="559:6">#<cpp:directive pos:start="559:2" pos:end="559:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="561:1" pos:end="561:21">#<cpp:directive pos:start="561:2" pos:end="561:6">ifdef</cpp:directive> <name pos:start="561:8" pos:end="561:21">CONFIG_SOFTMMU</name></cpp:ifdef>

        <expr_stmt pos:start="563:9" pos:end="566:0"><expr pos:start="563:9" pos:end="563:27"><call pos:start="563:9" pos:end="563:27"><name pos:start="563:9" pos:end="563:17">tcg_out_i</name><argument_list pos:start="563:18" pos:end="563:27">(<argument pos:start="563:19" pos:end="563:19"><expr pos:start="563:19" pos:end="563:19"><name pos:start="563:19" pos:end="563:19">s</name></expr></argument>, <argument pos:start="563:22" pos:end="563:26"><expr pos:start="563:22" pos:end="563:26"><operator pos:start="563:22" pos:end="563:22">*</operator><name pos:start="563:23" pos:end="563:26">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="565:1" pos:end="565:6">#<cpp:directive pos:start="565:2" pos:end="565:6">endif</cpp:directive></cpp:endif>

        <break pos:start="567:9" pos:end="567:14">break;</break>

    <case pos:start="569:5" pos:end="569:22">case <expr pos:start="569:10" pos:end="569:21"><name pos:start="569:10" pos:end="569:21">INDEX_op_end</name></expr>:</case>

        <expr_stmt pos:start="571:9" pos:end="571:15"><expr pos:start="571:9" pos:end="571:14"><call pos:start="571:9" pos:end="571:14"><name pos:start="571:9" pos:end="571:12">TODO</name><argument_list pos:start="571:13" pos:end="571:14">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="573:9" pos:end="573:14">break;</break>

    <default pos:start="575:5" pos:end="575:12">default:</default>

        <expr_stmt pos:start="577:9" pos:end="577:64"><expr pos:start="577:9" pos:end="577:63"><call pos:start="577:9" pos:end="577:63"><name pos:start="577:9" pos:end="577:15">fprintf</name><argument_list pos:start="577:16" pos:end="577:63">(<argument pos:start="577:17" pos:end="577:22"><expr pos:start="577:17" pos:end="577:22"><name pos:start="577:17" pos:end="577:22">stderr</name></expr></argument>, <argument pos:start="577:25" pos:end="577:39"><expr pos:start="577:25" pos:end="577:39"><literal type="string" pos:start="577:25" pos:end="577:39">"Missing: %s\n"</literal></expr></argument>, <argument pos:start="577:42" pos:end="577:62"><expr pos:start="577:42" pos:end="577:62"><name pos:start="577:42" pos:end="577:57"><name pos:start="577:42" pos:end="577:52">tcg_op_defs</name><index pos:start="577:53" pos:end="577:57">[<expr pos:start="577:54" pos:end="577:56"><name pos:start="577:54" pos:end="577:56">opc</name></expr>]</index></name><operator pos:start="577:58" pos:end="577:58">.</operator><name pos:start="577:59" pos:end="577:62">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="579:9" pos:end="579:20"><expr pos:start="579:9" pos:end="579:19"><call pos:start="579:9" pos:end="579:19"><name pos:start="579:9" pos:end="579:17">tcg_abort</name><argument_list pos:start="579:18" pos:end="579:19">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="583:5" pos:end="583:49"><expr pos:start="583:5" pos:end="583:48"><name pos:start="583:5" pos:end="583:19"><name pos:start="583:5" pos:end="583:16">old_code_ptr</name><index pos:start="583:17" pos:end="583:19">[<expr pos:start="583:18" pos:end="583:18"><literal type="number" pos:start="583:18" pos:end="583:18">1</literal></expr>]</index></name> <operator pos:start="583:21" pos:end="583:21">=</operator> <name pos:start="583:23" pos:end="583:33"><name pos:start="583:23" pos:end="583:23">s</name><operator pos:start="583:24" pos:end="583:25">-&gt;</operator><name pos:start="583:26" pos:end="583:33">code_ptr</name></name> <operator pos:start="583:35" pos:end="583:35">-</operator> <name pos:start="583:37" pos:end="583:48">old_code_ptr</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
