<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7318.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">pl110_write</name><parameter_list pos:start="1:24" pos:end="3:52">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:44">hwaddr</name></type> <name pos:start="1:46" pos:end="1:51">offset</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:36"><decl pos:start="3:25" pos:end="3:36"><type pos:start="3:25" pos:end="3:36"><name pos:start="3:25" pos:end="3:32">uint64_t</name></type> <name pos:start="3:34" pos:end="3:36">val</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:51"><decl pos:start="3:39" pos:end="3:51"><type pos:start="3:39" pos:end="3:51"><name pos:start="3:39" pos:end="3:46">unsigned</name></type> <name pos:start="3:48" pos:end="3:51">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="131:1">{<block_content pos:start="7:5" pos:end="129:5">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">pl110_state</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:42">= <expr pos:start="7:22" pos:end="7:42"><operator pos:start="7:22" pos:end="7:22">(</operator><name pos:start="7:23" pos:end="7:33">pl110_state</name> <operator pos:start="7:35" pos:end="7:35">*</operator><operator pos:start="7:36" pos:end="7:36">)</operator><name pos:start="7:37" pos:end="7:42">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">n</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="15:25">/* For simplicity invalidate the display whenever a control register

       is written to.  */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:17">invalidate</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <literal type="number" pos:start="17:21" pos:end="17:21">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="31:5"><if pos:start="19:5" pos:end="31:5">if <condition pos:start="19:8" pos:end="19:42">(<expr pos:start="19:9" pos:end="19:41"><name pos:start="19:9" pos:end="19:14">offset</name> <operator pos:start="19:16" pos:end="19:17">&gt;=</operator> <literal type="number" pos:start="19:19" pos:end="19:23">0x200</literal> <operator pos:start="19:25" pos:end="19:26">&amp;&amp;</operator> <name pos:start="19:28" pos:end="19:33">offset</name> <operator pos:start="19:35" pos:end="19:35">&lt;</operator> <literal type="number" pos:start="19:37" pos:end="19:41">0x400</literal></expr>)</condition> <block pos:start="19:44" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:15">

        <comment type="block" pos:start="21:9" pos:end="21:23">/* Palette.  */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:9">n</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:19">offset</name> <operator pos:start="23:21" pos:end="23:21">-</operator> <literal type="number" pos:start="23:23" pos:end="23:27">0x200</literal><operator pos:start="23:28" pos:end="23:28">)</operator> <operator pos:start="23:30" pos:end="23:31">&gt;&gt;</operator> <literal type="number" pos:start="23:33" pos:end="23:33">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:52"><expr pos:start="25:9" pos:end="25:51"><name pos:start="25:9" pos:end="25:45"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:22">raw_palette</name><index pos:start="25:23" pos:end="25:45">[<expr pos:start="25:24" pos:end="25:44"><operator pos:start="25:24" pos:end="25:24">(</operator><name pos:start="25:25" pos:end="25:30">offset</name> <operator pos:start="25:32" pos:end="25:32">-</operator> <literal type="number" pos:start="25:34" pos:end="25:38">0x200</literal><operator pos:start="25:39" pos:end="25:39">)</operator> <operator pos:start="25:41" pos:end="25:42">&gt;&gt;</operator> <literal type="number" pos:start="25:44" pos:end="25:44">2</literal></expr>]</index></name> <operator pos:start="25:47" pos:end="25:47">=</operator> <name pos:start="25:49" pos:end="25:51">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:35"><expr pos:start="27:9" pos:end="27:34"><call pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:28">pl110_update_palette</name><argument_list pos:start="27:29" pos:end="27:34">(<argument pos:start="27:30" pos:end="27:30"><expr pos:start="27:30" pos:end="27:30"><name pos:start="27:30" pos:end="27:30">s</name></expr></argument>, <argument pos:start="27:33" pos:end="27:33"><expr pos:start="27:33" pos:end="27:33"><name pos:start="27:33" pos:end="27:33">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="33:5" pos:end="129:5">switch <condition pos:start="33:12" pos:end="33:24">(<expr pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:18">offset</name> <operator pos:start="33:20" pos:end="33:21">&gt;&gt;</operator> <literal type="number" pos:start="33:23" pos:end="33:23">2</literal></expr>)</condition> <block pos:start="33:26" pos:end="129:5">{<block_content pos:start="35:5" pos:end="127:62">

    <case pos:start="35:5" pos:end="35:11">case <expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">0</literal></expr>:</case> <comment type="block" pos:start="35:13" pos:end="35:28">/* LCDTiming0 */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:27"><expr pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:17">timing</name><index pos:start="37:18" pos:end="37:20">[<expr pos:start="37:19" pos:end="37:19"><literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>]</index></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:26">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:9">n</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <operator pos:start="39:13" pos:end="39:13">(</operator><operator pos:start="39:14" pos:end="39:14">(</operator><name pos:start="39:15" pos:end="39:17">val</name> <operator pos:start="39:19" pos:end="39:19">&amp;</operator> <literal type="number" pos:start="39:21" pos:end="39:24">0xfc</literal><operator pos:start="39:25" pos:end="39:25">)</operator> <operator pos:start="39:27" pos:end="39:27">+</operator> <literal type="number" pos:start="39:29" pos:end="39:29">4</literal><operator pos:start="39:30" pos:end="39:30">)</operator> <operator pos:start="39:32" pos:end="39:32">*</operator> <literal type="number" pos:start="39:34" pos:end="39:34">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:36"><expr pos:start="41:9" pos:end="41:35"><call pos:start="41:9" pos:end="41:35"><name pos:start="41:9" pos:end="41:20">pl110_resize</name><argument_list pos:start="41:21" pos:end="41:35">(<argument pos:start="41:22" pos:end="41:22"><expr pos:start="41:22" pos:end="41:22"><name pos:start="41:22" pos:end="41:22">s</name></expr></argument>, <argument pos:start="41:25" pos:end="41:25"><expr pos:start="41:25" pos:end="41:25"><name pos:start="41:25" pos:end="41:25">n</name></expr></argument>, <argument pos:start="41:28" pos:end="41:34"><expr pos:start="41:28" pos:end="41:34"><name pos:start="41:28" pos:end="41:34"><name pos:start="41:28" pos:end="41:28">s</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:34">rows</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:11">case <expr pos:start="45:10" pos:end="45:10"><literal type="number" pos:start="45:10" pos:end="45:10">1</literal></expr>:</case> <comment type="block" pos:start="45:13" pos:end="45:28">/* LCDTiming1 */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:27"><expr pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:17">timing</name><index pos:start="47:18" pos:end="47:20">[<expr pos:start="47:19" pos:end="47:19"><literal type="number" pos:start="47:19" pos:end="47:19">1</literal></expr>]</index></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:26">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:30"><expr pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:9">n</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <operator pos:start="49:13" pos:end="49:13">(</operator><name pos:start="49:14" pos:end="49:16">val</name> <operator pos:start="49:18" pos:end="49:18">&amp;</operator> <literal type="number" pos:start="49:20" pos:end="49:24">0x3ff</literal><operator pos:start="49:25" pos:end="49:25">)</operator> <operator pos:start="49:27" pos:end="49:27">+</operator> <literal type="number" pos:start="49:29" pos:end="49:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:36"><expr pos:start="51:9" pos:end="51:35"><call pos:start="51:9" pos:end="51:35"><name pos:start="51:9" pos:end="51:20">pl110_resize</name><argument_list pos:start="51:21" pos:end="51:35">(<argument pos:start="51:22" pos:end="51:22"><expr pos:start="51:22" pos:end="51:22"><name pos:start="51:22" pos:end="51:22">s</name></expr></argument>, <argument pos:start="51:25" pos:end="51:31"><expr pos:start="51:25" pos:end="51:31"><name pos:start="51:25" pos:end="51:31"><name pos:start="51:25" pos:end="51:25">s</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:31">cols</name></name></expr></argument>, <argument pos:start="51:34" pos:end="51:34"><expr pos:start="51:34" pos:end="51:34"><name pos:start="51:34" pos:end="51:34">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">2</literal></expr>:</case> <comment type="block" pos:start="55:13" pos:end="55:28">/* LCDTiming2 */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:27"><expr pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:17">timing</name><index pos:start="57:18" pos:end="57:20">[<expr pos:start="57:19" pos:end="57:19"><literal type="number" pos:start="57:19" pos:end="57:19">2</literal></expr>]</index></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:26">val</name></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:11">case <expr pos:start="61:10" pos:end="61:10"><literal type="number" pos:start="61:10" pos:end="61:10">3</literal></expr>:</case> <comment type="block" pos:start="61:13" pos:end="61:28">/* LCDTiming3 */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:27"><expr pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:17">timing</name><index pos:start="63:18" pos:end="63:20">[<expr pos:start="63:19" pos:end="63:19"><literal type="number" pos:start="63:19" pos:end="63:19">3</literal></expr>]</index></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:26">val</name></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:11">case <expr pos:start="67:10" pos:end="67:10"><literal type="number" pos:start="67:10" pos:end="67:10">4</literal></expr>:</case> <comment type="block" pos:start="67:13" pos:end="67:27">/* LCDUPBASE */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:24"><expr pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:17">upbase</name></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:23">val</name></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:11">case <expr pos:start="73:10" pos:end="73:10"><literal type="number" pos:start="73:10" pos:end="73:10">5</literal></expr>:</case> <comment type="block" pos:start="73:13" pos:end="73:27">/* LCDLPBASE */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:24"><expr pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:17"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:17">lpbase</name></name> <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:23">val</name></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:11">case <expr pos:start="79:10" pos:end="79:10"><literal type="number" pos:start="79:10" pos:end="79:10">6</literal></expr>:</case> <comment type="block" pos:start="79:13" pos:end="79:25">/* LCDIMSC */</comment>

        <if_stmt pos:start="81:9" pos:end="85:9"><if pos:start="81:9" pos:end="85:9">if <condition pos:start="81:12" pos:end="81:32">(<expr pos:start="81:13" pos:end="81:31"><name pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:22">version</name></name> <operator pos:start="81:24" pos:end="81:25">!=</operator> <name pos:start="81:27" pos:end="81:31">PL110</name></expr>)</condition> <block pos:start="81:34" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:25">

            <goto pos:start="83:13" pos:end="83:25">goto <name pos:start="83:18" pos:end="83:24">control</name>;</goto>

        </block_content>}</block></if></if_stmt>

    <label pos:start="87:5" pos:end="87:9"><name pos:start="87:5" pos:end="87:8">imsc</name>:</label>

        <expr_stmt pos:start="89:9" pos:end="89:26"><expr pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:19">int_mask</name></name> <operator pos:start="89:21" pos:end="89:21">=</operator> <name pos:start="89:23" pos:end="89:25">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:24"><expr pos:start="91:9" pos:end="91:23"><call pos:start="91:9" pos:end="91:23"><name pos:start="91:9" pos:end="91:20">pl110_update</name><argument_list pos:start="91:21" pos:end="91:23">(<argument pos:start="91:22" pos:end="91:22"><expr pos:start="91:22" pos:end="91:22"><name pos:start="91:22" pos:end="91:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:11">case <expr pos:start="95:10" pos:end="95:10"><literal type="number" pos:start="95:10" pos:end="95:10">7</literal></expr>:</case> <comment type="block" pos:start="95:13" pos:end="95:28">/* LCDControl */</comment>

        <if_stmt pos:start="97:9" pos:end="101:9"><if pos:start="97:9" pos:end="101:9">if <condition pos:start="97:12" pos:end="97:32">(<expr pos:start="97:13" pos:end="97:31"><name pos:start="97:13" pos:end="97:22"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:22">version</name></name> <operator pos:start="97:24" pos:end="97:25">!=</operator> <name pos:start="97:27" pos:end="97:31">PL110</name></expr>)</condition> <block pos:start="97:34" pos:end="101:9">{<block_content pos:start="99:13" pos:end="99:22">

            <goto pos:start="99:13" pos:end="99:22">goto <name pos:start="99:18" pos:end="99:21">imsc</name>;</goto>

        </block_content>}</block></if></if_stmt>

    <label pos:start="103:5" pos:end="103:12"><name pos:start="103:5" pos:end="103:11">control</name>:</label>

        <expr_stmt pos:start="105:9" pos:end="105:20"><expr pos:start="105:9" pos:end="105:19"><name pos:start="105:9" pos:end="105:13"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:13">cr</name></name> <operator pos:start="105:15" pos:end="105:15">=</operator> <name pos:start="105:17" pos:end="105:19">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:32"><expr pos:start="107:9" pos:end="107:31"><name pos:start="107:9" pos:end="107:14"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:14">bpp</name></name> <operator pos:start="107:16" pos:end="107:16">=</operator> <operator pos:start="107:18" pos:end="107:18">(</operator><name pos:start="107:19" pos:end="107:21">val</name> <operator pos:start="107:23" pos:end="107:24">&gt;&gt;</operator> <literal type="number" pos:start="107:26" pos:end="107:26">1</literal><operator pos:start="107:27" pos:end="107:27">)</operator> <operator pos:start="107:29" pos:end="107:29">&amp;</operator> <literal type="number" pos:start="107:31" pos:end="107:31">7</literal></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="113:9"><if pos:start="109:9" pos:end="113:9">if <condition pos:start="109:12" pos:end="109:29">(<expr pos:start="109:13" pos:end="109:28"><call pos:start="109:13" pos:end="109:28"><name pos:start="109:13" pos:end="109:25">pl110_enabled</name><argument_list pos:start="109:26" pos:end="109:28">(<argument pos:start="109:27" pos:end="109:27"><expr pos:start="109:27" pos:end="109:27"><name pos:start="109:27" pos:end="109:27">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:31" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:57">

            <expr_stmt pos:start="111:13" pos:end="111:57"><expr pos:start="111:13" pos:end="111:56"><call pos:start="111:13" pos:end="111:56"><name pos:start="111:13" pos:end="111:31">qemu_console_resize</name><argument_list pos:start="111:32" pos:end="111:56">(<argument pos:start="111:33" pos:end="111:37"><expr pos:start="111:33" pos:end="111:37"><name pos:start="111:33" pos:end="111:37"><name pos:start="111:33" pos:end="111:33">s</name><operator pos:start="111:34" pos:end="111:35">-&gt;</operator><name pos:start="111:36" pos:end="111:37">ds</name></name></expr></argument>, <argument pos:start="111:40" pos:end="111:46"><expr pos:start="111:40" pos:end="111:46"><name pos:start="111:40" pos:end="111:46"><name pos:start="111:40" pos:end="111:40">s</name><operator pos:start="111:41" pos:end="111:42">-&gt;</operator><name pos:start="111:43" pos:end="111:46">cols</name></name></expr></argument>, <argument pos:start="111:49" pos:end="111:55"><expr pos:start="111:49" pos:end="111:55"><name pos:start="111:49" pos:end="111:55"><name pos:start="111:49" pos:end="111:49">s</name><operator pos:start="111:50" pos:end="111:51">-&gt;</operator><name pos:start="111:52" pos:end="111:55">rows</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <case pos:start="117:5" pos:end="117:12">case <expr pos:start="117:10" pos:end="117:11"><literal type="number" pos:start="117:10" pos:end="117:11">10</literal></expr>:</case> <comment type="block" pos:start="117:14" pos:end="117:25">/* LCDICR */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:30"><expr pos:start="119:9" pos:end="119:29"><name pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:21">int_status</name></name> <operator pos:start="119:23" pos:end="119:24">&amp;=</operator> <operator pos:start="119:26" pos:end="119:26">~</operator><name pos:start="119:27" pos:end="119:29">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:24"><expr pos:start="121:9" pos:end="121:23"><call pos:start="121:9" pos:end="121:23"><name pos:start="121:9" pos:end="121:20">pl110_update</name><argument_list pos:start="121:21" pos:end="121:23">(<argument pos:start="121:22" pos:end="121:22"><expr pos:start="121:22" pos:end="121:22"><name pos:start="121:22" pos:end="121:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    <default pos:start="125:5" pos:end="125:12">default:</default>

        <expr_stmt pos:start="127:9" pos:end="127:62"><expr pos:start="127:9" pos:end="127:61"><call pos:start="127:9" pos:end="127:61"><name pos:start="127:9" pos:end="127:16">hw_error</name><argument_list pos:start="127:17" pos:end="127:61">(<argument pos:start="127:18" pos:end="127:47"><expr pos:start="127:18" pos:end="127:47"><literal type="string" pos:start="127:18" pos:end="127:47">"pl110_write: Bad offset %x\n"</literal></expr></argument>, <argument pos:start="127:50" pos:end="127:60"><expr pos:start="127:50" pos:end="127:60"><operator pos:start="127:50" pos:end="127:50">(</operator><name pos:start="127:51" pos:end="127:53">int</name><operator pos:start="127:54" pos:end="127:54">)</operator><name pos:start="127:55" pos:end="127:60">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
