<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17697.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">decode_block_coeffs</name><parameter_list pos:start="1:31" pos:end="5:70">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:45">VP56RangeCoder</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">c</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:67"><decl pos:start="1:51" pos:end="1:67"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:57">DCTELEM</name></type> <name pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:63">block</name><index pos:start="1:64" pos:end="1:67">[<expr pos:start="1:65" pos:end="1:66"><literal type="number" pos:start="1:65" pos:end="1:66">16</literal></expr>]</index></name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:68"><decl pos:start="3:32" pos:end="3:68"><type pos:start="3:32" pos:end="3:44"><name pos:start="3:32" pos:end="3:38">uint8_t</name></type> <name pos:start="3:40" pos:end="3:68"><name pos:start="3:40" pos:end="3:44">probs</name><index pos:start="3:45" pos:end="3:47">[<expr pos:start="3:46" pos:end="3:46"><literal type="number" pos:start="3:46" pos:end="3:46">8</literal></expr>]</index><index pos:start="3:48" pos:end="3:50">[<expr pos:start="3:49" pos:end="3:49"><literal type="number" pos:start="3:49" pos:end="3:49">3</literal></expr>]</index><index pos:start="3:51" pos:end="3:68">[<expr pos:start="3:52" pos:end="3:67"><name pos:start="3:52" pos:end="3:65">NUM_DCT_TOKENS</name><operator pos:start="3:66" pos:end="3:66">-</operator><literal type="number" pos:start="3:67" pos:end="3:67">1</literal></expr>]</index></name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:36"><decl pos:start="5:32" pos:end="5:36"><type pos:start="5:32" pos:end="5:36"><name pos:start="5:32" pos:end="5:34">int</name></type> <name pos:start="5:36" pos:end="5:36">i</name></decl></parameter>, <parameter pos:start="5:39" pos:end="5:52"><decl pos:start="5:39" pos:end="5:52"><type pos:start="5:39" pos:end="5:52"><name pos:start="5:39" pos:end="5:41">int</name></type> <name pos:start="5:43" pos:end="5:52">zero_nhood</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:69"><decl pos:start="5:55" pos:end="5:69"><type pos:start="5:55" pos:end="5:66"><name pos:start="5:55" pos:end="5:61">int16_t</name></type> <name pos:start="5:63" pos:end="5:69"><name pos:start="5:63" pos:end="5:66">qmul</name><index pos:start="5:67" pos:end="5:69">[<expr pos:start="5:68" pos:end="5:68"><literal type="number" pos:start="5:68" pos:end="5:68">2</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="121:1">{<block_content pos:start="9:5" pos:end="119:19">

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:23">token_prob</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">nonzero</name> <init pos:start="11:17" pos:end="11:19">= <expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">coeff</name></decl>;</decl_stmt>



    <do pos:start="17:5" pos:end="115:21">do <block pos:start="17:8" pos:end="115:5">{<block_content pos:start="19:9" pos:end="113:22">

        <expr_stmt pos:start="19:9" pos:end="19:58"><expr pos:start="19:9" pos:end="19:57"><name pos:start="19:9" pos:end="19:18">token_prob</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <name pos:start="19:22" pos:end="19:57"><name pos:start="19:22" pos:end="19:26">probs</name><index pos:start="19:27" pos:end="19:45">[<expr pos:start="19:28" pos:end="19:44"><name pos:start="19:28" pos:end="19:44"><name pos:start="19:28" pos:end="19:41">vp8_coeff_band</name><index pos:start="19:42" pos:end="19:44">[<expr pos:start="19:43" pos:end="19:43"><name pos:start="19:43" pos:end="19:43">i</name></expr>]</index></name></expr>]</index><index pos:start="19:46" pos:end="19:57">[<expr pos:start="19:47" pos:end="19:56"><name pos:start="19:47" pos:end="19:56">zero_nhood</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="23:9" pos:end="25:27"><if pos:start="23:9" pos:end="25:27">if <condition pos:start="23:12" pos:end="23:57">(<expr pos:start="23:13" pos:end="23:56"><operator pos:start="23:13" pos:end="23:13">!</operator><call pos:start="23:14" pos:end="23:56"><name pos:start="23:14" pos:end="23:38">vp56_rac_get_prob_branchy</name><argument_list pos:start="23:39" pos:end="23:56">(<argument pos:start="23:40" pos:end="23:40"><expr pos:start="23:40" pos:end="23:40"><name pos:start="23:40" pos:end="23:40">c</name></expr></argument>, <argument pos:start="23:43" pos:end="23:55"><expr pos:start="23:43" pos:end="23:55"><name pos:start="23:43" pos:end="23:55"><name pos:start="23:43" pos:end="23:52">token_prob</name><index pos:start="23:53" pos:end="23:55">[<expr pos:start="23:54" pos:end="23:54"><literal type="number" pos:start="23:54" pos:end="23:54">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:27"><block_content pos:start="25:13" pos:end="25:27">   <comment type="line" pos:start="23:61" pos:end="23:70">// DCT_EOB</comment>

            <return pos:start="25:13" pos:end="25:27">return <expr pos:start="25:20" pos:end="25:26"><name pos:start="25:20" pos:end="25:26">nonzero</name></expr>;</return></block_content></block></if></if_stmt>



<label pos:start="29:1" pos:end="29:9"><name pos:start="29:1" pos:end="29:8">skip_eob</name>:</label>

        <if_stmt pos:start="31:9" pos:end="43:9"><if pos:start="31:9" pos:end="43:9">if <condition pos:start="31:12" pos:end="31:57">(<expr pos:start="31:13" pos:end="31:56"><operator pos:start="31:13" pos:end="31:13">!</operator><call pos:start="31:14" pos:end="31:56"><name pos:start="31:14" pos:end="31:38">vp56_rac_get_prob_branchy</name><argument_list pos:start="31:39" pos:end="31:56">(<argument pos:start="31:40" pos:end="31:40"><expr pos:start="31:40" pos:end="31:40"><name pos:start="31:40" pos:end="31:40">c</name></expr></argument>, <argument pos:start="31:43" pos:end="31:55"><expr pos:start="31:43" pos:end="31:55"><name pos:start="31:43" pos:end="31:55"><name pos:start="31:43" pos:end="31:52">token_prob</name><index pos:start="31:53" pos:end="31:55">[<expr pos:start="31:54" pos:end="31:54"><literal type="number" pos:start="31:54" pos:end="31:54">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:59" pos:end="43:9">{<block_content pos:start="33:13" pos:end="41:27"> <comment type="line" pos:start="31:61" pos:end="31:68">// DCT_0</comment>

            <expr_stmt pos:start="33:13" pos:end="33:27"><expr pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:22">zero_nhood</name> <operator pos:start="33:24" pos:end="33:24">=</operator> <literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:55"><expr pos:start="35:13" pos:end="35:54"><name pos:start="35:13" pos:end="35:22">token_prob</name> <operator pos:start="35:24" pos:end="35:24">=</operator> <name pos:start="35:26" pos:end="35:54"><name pos:start="35:26" pos:end="35:30">probs</name><index pos:start="35:31" pos:end="35:51">[<expr pos:start="35:32" pos:end="35:50"><name pos:start="35:32" pos:end="35:50"><name pos:start="35:32" pos:end="35:45">vp8_coeff_band</name><index pos:start="35:46" pos:end="35:50">[<expr pos:start="35:47" pos:end="35:49"><operator pos:start="35:47" pos:end="35:48">++</operator><name pos:start="35:49" pos:end="35:49">i</name></expr>]</index></name></expr>]</index><index pos:start="35:52" pos:end="35:54">[<expr pos:start="35:53" pos:end="35:53"><literal type="number" pos:start="35:53" pos:end="35:53">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="39:30"><if pos:start="37:13" pos:end="39:30">if <condition pos:start="37:16" pos:end="37:23">(<expr pos:start="37:17" pos:end="37:22"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <literal type="number" pos:start="37:21" pos:end="37:22">16</literal></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:30"><block_content pos:start="39:17" pos:end="39:30">

                <goto pos:start="39:17" pos:end="39:30">goto <name pos:start="39:22" pos:end="39:29">skip_eob</name>;</goto></block_content></block></if></if_stmt>

            <return pos:start="41:13" pos:end="41:27">return <expr pos:start="41:20" pos:end="41:26"><name pos:start="41:20" pos:end="41:26">nonzero</name></expr>;</return> <comment type="line" pos:start="41:29" pos:end="41:72">// invalid input; blocks should end with EOB</comment>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="47:9" pos:end="105:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:57">(<expr pos:start="47:13" pos:end="47:56"><operator pos:start="47:13" pos:end="47:13">!</operator><call pos:start="47:14" pos:end="47:56"><name pos:start="47:14" pos:end="47:38">vp56_rac_get_prob_branchy</name><argument_list pos:start="47:39" pos:end="47:56">(<argument pos:start="47:40" pos:end="47:40"><expr pos:start="47:40" pos:end="47:40"><name pos:start="47:40" pos:end="47:40">c</name></expr></argument>, <argument pos:start="47:43" pos:end="47:55"><expr pos:start="47:43" pos:end="47:55"><name pos:start="47:43" pos:end="47:55"><name pos:start="47:43" pos:end="47:52">token_prob</name><index pos:start="47:53" pos:end="47:55">[<expr pos:start="47:54" pos:end="47:54"><literal type="number" pos:start="47:54" pos:end="47:54">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:59" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:27"> <comment type="line" pos:start="47:61" pos:end="47:68">// DCT_1</comment>

            <expr_stmt pos:start="49:13" pos:end="49:22"><expr pos:start="49:13" pos:end="49:21"><name pos:start="49:13" pos:end="49:17">coeff</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <literal type="number" pos:start="49:21" pos:end="49:21">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:27"><expr pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:22">zero_nhood</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <literal type="number" pos:start="51:26" pos:end="51:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="53:11" pos:end="105:9">else <block pos:start="53:16" pos:end="105:9">{<block_content pos:start="55:13" pos:end="103:13">

            <expr_stmt pos:start="55:13" pos:end="55:27"><expr pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:22">zero_nhood</name> <operator pos:start="55:24" pos:end="55:24">=</operator> <literal type="number" pos:start="55:26" pos:end="55:26">2</literal></expr>;</expr_stmt>



            <if_stmt pos:start="59:13" pos:end="103:13"><if pos:start="59:13" pos:end="69:13">if <condition pos:start="59:16" pos:end="59:61">(<expr pos:start="59:17" pos:end="59:60"><operator pos:start="59:17" pos:end="59:17">!</operator><call pos:start="59:18" pos:end="59:60"><name pos:start="59:18" pos:end="59:42">vp56_rac_get_prob_branchy</name><argument_list pos:start="59:43" pos:end="59:60">(<argument pos:start="59:44" pos:end="59:44"><expr pos:start="59:44" pos:end="59:44"><name pos:start="59:44" pos:end="59:44">c</name></expr></argument>, <argument pos:start="59:47" pos:end="59:59"><expr pos:start="59:47" pos:end="59:59"><name pos:start="59:47" pos:end="59:59"><name pos:start="59:47" pos:end="59:56">token_prob</name><index pos:start="59:57" pos:end="59:59">[<expr pos:start="59:58" pos:end="59:58"><literal type="number" pos:start="59:58" pos:end="59:58">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:63" pos:end="69:13">{<block_content pos:start="61:17" pos:end="67:27"> <comment type="line" pos:start="59:65" pos:end="59:76">// DCT 2,3,4</comment>

                <expr_stmt pos:start="61:17" pos:end="61:60"><expr pos:start="61:17" pos:end="61:59"><name pos:start="61:17" pos:end="61:21">coeff</name> <operator pos:start="61:23" pos:end="61:23">=</operator> <call pos:start="61:25" pos:end="61:59"><name pos:start="61:25" pos:end="61:41">vp56_rac_get_prob</name><argument_list pos:start="61:42" pos:end="61:59">(<argument pos:start="61:43" pos:end="61:43"><expr pos:start="61:43" pos:end="61:43"><name pos:start="61:43" pos:end="61:43">c</name></expr></argument>, <argument pos:start="61:46" pos:end="61:58"><expr pos:start="61:46" pos:end="61:58"><name pos:start="61:46" pos:end="61:58"><name pos:start="61:46" pos:end="61:55">token_prob</name><index pos:start="61:56" pos:end="61:58">[<expr pos:start="61:57" pos:end="61:57"><literal type="number" pos:start="61:57" pos:end="61:57">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="63:17" pos:end="65:65"><if pos:start="63:17" pos:end="65:65">if <condition pos:start="63:20" pos:end="63:26">(<expr pos:start="63:21" pos:end="63:25"><name pos:start="63:21" pos:end="63:25">coeff</name></expr>)</condition><block type="pseudo" pos:start="65:21" pos:end="65:65"><block_content pos:start="65:21" pos:end="65:65">

                    <expr_stmt pos:start="65:21" pos:end="65:65"><expr pos:start="65:21" pos:end="65:64"><name pos:start="65:21" pos:end="65:25">coeff</name> <operator pos:start="65:27" pos:end="65:28">+=</operator> <call pos:start="65:30" pos:end="65:64"><name pos:start="65:30" pos:end="65:46">vp56_rac_get_prob</name><argument_list pos:start="65:47" pos:end="65:64">(<argument pos:start="65:48" pos:end="65:48"><expr pos:start="65:48" pos:end="65:48"><name pos:start="65:48" pos:end="65:48">c</name></expr></argument>, <argument pos:start="65:51" pos:end="65:63"><expr pos:start="65:51" pos:end="65:63"><name pos:start="65:51" pos:end="65:63"><name pos:start="65:51" pos:end="65:60">token_prob</name><index pos:start="65:61" pos:end="65:63">[<expr pos:start="65:62" pos:end="65:62"><literal type="number" pos:start="65:62" pos:end="65:62">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:27"><expr pos:start="67:17" pos:end="67:26"><name pos:start="67:17" pos:end="67:21">coeff</name> <operator pos:start="67:23" pos:end="67:24">+=</operator> <literal type="number" pos:start="67:26" pos:end="67:26">2</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="69:15" pos:end="103:13">else <block pos:start="69:20" pos:end="103:13">{<block_content pos:start="73:17" pos:end="101:17">

                <comment type="line" pos:start="71:17" pos:end="71:27">// DCT_CAT*</comment>

                <if_stmt pos:start="73:17" pos:end="101:17"><if pos:start="73:17" pos:end="89:17">if <condition pos:start="73:20" pos:end="73:65">(<expr pos:start="73:21" pos:end="73:64"><operator pos:start="73:21" pos:end="73:21">!</operator><call pos:start="73:22" pos:end="73:64"><name pos:start="73:22" pos:end="73:46">vp56_rac_get_prob_branchy</name><argument_list pos:start="73:47" pos:end="73:64">(<argument pos:start="73:48" pos:end="73:48"><expr pos:start="73:48" pos:end="73:48"><name pos:start="73:48" pos:end="73:48">c</name></expr></argument>, <argument pos:start="73:51" pos:end="73:63"><expr pos:start="73:51" pos:end="73:63"><name pos:start="73:51" pos:end="73:63"><name pos:start="73:51" pos:end="73:60">token_prob</name><index pos:start="73:61" pos:end="73:63">[<expr pos:start="73:62" pos:end="73:62"><literal type="number" pos:start="73:62" pos:end="73:62">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:67" pos:end="89:17">{<block_content pos:start="75:21" pos:end="87:21">

                    <if_stmt pos:start="75:21" pos:end="87:21"><if pos:start="75:21" pos:end="79:21">if <condition pos:start="75:24" pos:end="75:69">(<expr pos:start="75:25" pos:end="75:68"><operator pos:start="75:25" pos:end="75:25">!</operator><call pos:start="75:26" pos:end="75:68"><name pos:start="75:26" pos:end="75:50">vp56_rac_get_prob_branchy</name><argument_list pos:start="75:51" pos:end="75:68">(<argument pos:start="75:52" pos:end="75:52"><expr pos:start="75:52" pos:end="75:52"><name pos:start="75:52" pos:end="75:52">c</name></expr></argument>, <argument pos:start="75:55" pos:end="75:67"><expr pos:start="75:55" pos:end="75:67"><name pos:start="75:55" pos:end="75:67"><name pos:start="75:55" pos:end="75:64">token_prob</name><index pos:start="75:65" pos:end="75:67">[<expr pos:start="75:66" pos:end="75:66"><literal type="number" pos:start="75:66" pos:end="75:66">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:71" pos:end="79:21">{<block_content pos:start="77:25" pos:end="77:80"> <comment type="line" pos:start="75:73" pos:end="75:83">// DCT_CAT1</comment>

                        <expr_stmt pos:start="77:25" pos:end="77:80"><expr pos:start="77:25" pos:end="77:79"><name pos:start="77:25" pos:end="77:29">coeff</name>  <operator pos:start="77:32" pos:end="77:32">=</operator> <literal type="number" pos:start="77:34" pos:end="77:36">5</literal> <operator pos:start="77:36" pos:end="77:36">+</operator> <call pos:start="77:38" pos:end="77:79"><name pos:start="77:38" pos:end="77:54">vp56_rac_get_prob</name><argument_list pos:start="77:55" pos:end="77:79">(<argument pos:start="77:56" pos:end="77:56"><expr pos:start="77:56" pos:end="77:56"><name pos:start="77:56" pos:end="77:56">c</name></expr></argument>, <argument pos:start="77:59" pos:end="77:78"><expr pos:start="77:59" pos:end="77:78"><name pos:start="77:59" pos:end="77:78"><name pos:start="77:59" pos:end="77:75">vp8_dct_cat1_prob</name><index pos:start="77:76" pos:end="77:78">[<expr pos:start="77:77" pos:end="77:77"><literal type="number" pos:start="77:77" pos:end="77:77">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="79:23" pos:end="87:21">else <block pos:start="79:28" pos:end="87:21">{<block_content pos:start="81:25" pos:end="85:76">                                    <comment type="line" pos:start="79:65" pos:end="79:75">// DCT_CAT2</comment>

                        <expr_stmt pos:start="81:25" pos:end="81:35"><expr pos:start="81:25" pos:end="81:34"><name pos:start="81:25" pos:end="81:29">coeff</name>  <operator pos:start="81:32" pos:end="81:32">=</operator> <literal type="number" pos:start="81:34" pos:end="81:34">7</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="83:25" pos:end="83:81"><expr pos:start="83:25" pos:end="83:80"><name pos:start="83:25" pos:end="83:29">coeff</name> <operator pos:start="83:31" pos:end="83:32">+=</operator> <call pos:start="83:34" pos:end="83:75"><name pos:start="83:34" pos:end="83:50">vp56_rac_get_prob</name><argument_list pos:start="83:51" pos:end="83:75">(<argument pos:start="83:52" pos:end="83:52"><expr pos:start="83:52" pos:end="83:52"><name pos:start="83:52" pos:end="83:52">c</name></expr></argument>, <argument pos:start="83:55" pos:end="83:74"><expr pos:start="83:55" pos:end="83:74"><name pos:start="83:55" pos:end="83:74"><name pos:start="83:55" pos:end="83:71">vp8_dct_cat2_prob</name><index pos:start="83:72" pos:end="83:74">[<expr pos:start="83:73" pos:end="83:73"><literal type="number" pos:start="83:73" pos:end="83:73">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="83:77" pos:end="83:78">&lt;&lt;</operator> <literal type="number" pos:start="83:80" pos:end="83:80">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="85:25" pos:end="85:76"><expr pos:start="85:25" pos:end="85:75"><name pos:start="85:25" pos:end="85:29">coeff</name> <operator pos:start="85:31" pos:end="85:32">+=</operator> <call pos:start="85:34" pos:end="85:75"><name pos:start="85:34" pos:end="85:50">vp56_rac_get_prob</name><argument_list pos:start="85:51" pos:end="85:75">(<argument pos:start="85:52" pos:end="85:52"><expr pos:start="85:52" pos:end="85:52"><name pos:start="85:52" pos:end="85:52">c</name></expr></argument>, <argument pos:start="85:55" pos:end="85:74"><expr pos:start="85:55" pos:end="85:74"><name pos:start="85:55" pos:end="85:74"><name pos:start="85:55" pos:end="85:71">vp8_dct_cat2_prob</name><index pos:start="85:72" pos:end="85:74">[<expr pos:start="85:73" pos:end="85:73"><literal type="number" pos:start="85:73" pos:end="85:73">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="89:19" pos:end="101:17">else <block pos:start="89:24" pos:end="101:17">{<block_content pos:start="91:21" pos:end="99:73">    <comment type="line" pos:start="89:29" pos:end="89:46">// DCT_CAT3 and up</comment>

                    <decl_stmt pos:start="91:21" pos:end="91:64"><decl pos:start="91:21" pos:end="91:63"><type pos:start="91:21" pos:end="91:23"><name pos:start="91:21" pos:end="91:23">int</name></type> <name pos:start="91:25" pos:end="91:25">a</name> <init pos:start="91:27" pos:end="91:63">= <expr pos:start="91:29" pos:end="91:63"><call pos:start="91:29" pos:end="91:63"><name pos:start="91:29" pos:end="91:45">vp56_rac_get_prob</name><argument_list pos:start="91:46" pos:end="91:63">(<argument pos:start="91:47" pos:end="91:47"><expr pos:start="91:47" pos:end="91:47"><name pos:start="91:47" pos:end="91:47">c</name></expr></argument>, <argument pos:start="91:50" pos:end="91:62"><expr pos:start="91:50" pos:end="91:62"><name pos:start="91:50" pos:end="91:62"><name pos:start="91:50" pos:end="91:59">token_prob</name><index pos:start="91:60" pos:end="91:62">[<expr pos:start="91:61" pos:end="91:61"><literal type="number" pos:start="91:61" pos:end="91:61">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="93:21" pos:end="93:66"><decl pos:start="93:21" pos:end="93:65"><type pos:start="93:21" pos:end="93:23"><name pos:start="93:21" pos:end="93:23">int</name></type> <name pos:start="93:25" pos:end="93:25">b</name> <init pos:start="93:27" pos:end="93:65">= <expr pos:start="93:29" pos:end="93:65"><call pos:start="93:29" pos:end="93:65"><name pos:start="93:29" pos:end="93:45">vp56_rac_get_prob</name><argument_list pos:start="93:46" pos:end="93:65">(<argument pos:start="93:47" pos:end="93:47"><expr pos:start="93:47" pos:end="93:47"><name pos:start="93:47" pos:end="93:47">c</name></expr></argument>, <argument pos:start="93:50" pos:end="93:64"><expr pos:start="93:50" pos:end="93:64"><name pos:start="93:50" pos:end="93:64"><name pos:start="93:50" pos:end="93:59">token_prob</name><index pos:start="93:60" pos:end="93:64">[<expr pos:start="93:61" pos:end="93:63"><literal type="number" pos:start="93:61" pos:end="93:62">9</literal><operator pos:start="93:62" pos:end="93:62">+</operator><name pos:start="93:63" pos:end="93:63">a</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="95:21" pos:end="95:41"><decl pos:start="95:21" pos:end="95:40"><type pos:start="95:21" pos:end="95:23"><name pos:start="95:21" pos:end="95:23">int</name></type> <name pos:start="95:25" pos:end="95:27">cat</name> <init pos:start="95:29" pos:end="95:40">= <expr pos:start="95:31" pos:end="95:40"><operator pos:start="95:31" pos:end="95:31">(</operator><name pos:start="95:32" pos:end="95:32">a</name><operator pos:start="95:33" pos:end="95:34">&lt;&lt;</operator><literal type="number" pos:start="95:35" pos:end="95:35">1</literal><operator pos:start="95:36" pos:end="95:36">)</operator> <operator pos:start="95:38" pos:end="95:38">+</operator> <name pos:start="95:40" pos:end="95:40">b</name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="97:21" pos:end="97:42"><expr pos:start="97:21" pos:end="97:41"><name pos:start="97:21" pos:end="97:25">coeff</name>  <operator pos:start="97:28" pos:end="97:28">=</operator> <literal type="number" pos:start="97:30" pos:end="97:32">3</literal> <operator pos:start="97:32" pos:end="97:32">+</operator> <operator pos:start="97:34" pos:end="97:34">(</operator><literal type="number" pos:start="97:35" pos:end="97:35">8</literal><operator pos:start="97:36" pos:end="97:37">&lt;&lt;</operator><name pos:start="97:38" pos:end="97:40">cat</name><operator pos:start="97:41" pos:end="97:41">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="99:21" pos:end="99:73"><expr pos:start="99:21" pos:end="99:72"><name pos:start="99:21" pos:end="99:25">coeff</name> <operator pos:start="99:27" pos:end="99:28">+=</operator> <call pos:start="99:30" pos:end="99:72"><name pos:start="99:30" pos:end="99:46">vp8_rac_get_coeff</name><argument_list pos:start="99:47" pos:end="99:72">(<argument pos:start="99:48" pos:end="99:48"><expr pos:start="99:48" pos:end="99:48"><name pos:start="99:48" pos:end="99:48">c</name></expr></argument>, <argument pos:start="99:51" pos:end="99:71"><expr pos:start="99:51" pos:end="99:71"><name pos:start="99:51" pos:end="99:71"><name pos:start="99:51" pos:end="99:66">vp8_dct_cat_prob</name><index pos:start="99:67" pos:end="99:71">[<expr pos:start="99:68" pos:end="99:70"><name pos:start="99:68" pos:end="99:70">cat</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="line" pos:start="109:9" pos:end="109:52">// todo: full [16] qmat? load into register?</comment>

        <expr_stmt pos:start="111:9" pos:end="111:78"><expr pos:start="111:9" pos:end="111:77"><name pos:start="111:9" pos:end="111:29"><name pos:start="111:9" pos:end="111:13">block</name><index pos:start="111:14" pos:end="111:29">[<expr pos:start="111:15" pos:end="111:28"><name pos:start="111:15" pos:end="111:28"><name pos:start="111:15" pos:end="111:25">zigzag_scan</name><index pos:start="111:26" pos:end="111:28">[<expr pos:start="111:27" pos:end="111:27"><name pos:start="111:27" pos:end="111:27">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="111:31" pos:end="111:31">=</operator> <operator pos:start="111:33" pos:end="111:33">(</operator><ternary pos:start="111:34" pos:end="111:64"><condition pos:start="111:34" pos:end="111:49"><expr pos:start="111:34" pos:end="111:47"><call pos:start="111:34" pos:end="111:47"><name pos:start="111:34" pos:end="111:44">vp8_rac_get</name><argument_list pos:start="111:45" pos:end="111:47">(<argument pos:start="111:46" pos:end="111:46"><expr pos:start="111:46" pos:end="111:46"><name pos:start="111:46" pos:end="111:46">c</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="111:51" pos:end="111:56"> <expr pos:start="111:51" pos:end="111:56"><operator pos:start="111:51" pos:end="111:51">-</operator><name pos:start="111:52" pos:end="111:56">coeff</name></expr> </then><else pos:start="111:58" pos:end="111:64">: <expr pos:start="111:60" pos:end="111:64"><name pos:start="111:60" pos:end="111:64">coeff</name></expr></else></ternary><operator pos:start="111:65" pos:end="111:65">)</operator> <operator pos:start="111:67" pos:end="111:67">*</operator> <name pos:start="111:69" pos:end="111:77"><name pos:start="111:69" pos:end="111:72">qmul</name><index pos:start="111:73" pos:end="111:77">[<expr pos:start="111:74" pos:end="111:76"><operator pos:start="111:74" pos:end="111:74">!</operator><operator pos:start="111:75" pos:end="111:75">!</operator><name pos:start="111:76" pos:end="111:76">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:22"><expr pos:start="113:9" pos:end="113:21"><name pos:start="113:9" pos:end="113:15">nonzero</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <operator pos:start="113:19" pos:end="113:20">++</operator><name pos:start="113:21" pos:end="113:21">i</name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="115:13" pos:end="115:20">(<expr pos:start="115:14" pos:end="115:19"><name pos:start="115:14" pos:end="115:14">i</name> <operator pos:start="115:16" pos:end="115:16">&lt;</operator> <literal type="number" pos:start="115:18" pos:end="115:19">16</literal></expr>)</condition>;</do>



    <return pos:start="119:5" pos:end="119:19">return <expr pos:start="119:12" pos:end="119:18"><name pos:start="119:12" pos:end="119:18">nonzero</name></expr>;</return>

</block_content>}</block></function>
</unit>
