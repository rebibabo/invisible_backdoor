<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24370.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:12">void</name></type> <name pos:start="1:14" pos:end="1:28">ff_lpc_init_x86</name><parameter_list pos:start="1:29" pos:end="1:43">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:39">LPCContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="7:5" pos:end="20:0">

<cpp:if pos:start="5:1" pos:end="5:20">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:20">HAVE_SSE2_INLINE</name></expr></cpp:if>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">cpu_flags</name> <init pos:start="7:19" pos:end="7:38">= <expr pos:start="7:21" pos:end="7:38"><call pos:start="7:21" pos:end="7:38"><name pos:start="7:21" pos:end="7:36">av_get_cpu_flags</name><argument_list pos:start="7:37" pos:end="7:38">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="20:0"><if pos:start="11:5" pos:end="20:0">if <condition pos:start="11:8" pos:end="11:69">(<expr pos:start="11:9" pos:end="11:68"><call pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:19">INLINE_SSE2</name><argument_list pos:start="11:20" pos:end="11:30">(<argument pos:start="11:21" pos:end="11:29"><expr pos:start="11:21" pos:end="11:29"><name pos:start="11:21" pos:end="11:29">cpu_flags</name></expr></argument>)</argument_list></call> <operator pos:start="11:32" pos:end="11:33">&amp;&amp;</operator> <operator pos:start="11:35" pos:end="11:35">(</operator><name pos:start="11:36" pos:end="11:44">cpu_flags</name> <operator pos:start="11:46" pos:end="11:46">&amp;</operator> <name pos:start="11:48" pos:end="11:67">AV_CPU_FLAG_SSE2SLOW</name><operator pos:start="11:68" pos:end="11:68">)</operator></expr>)</condition> <block pos:start="11:71" pos:end="20:0">{<block_content pos:start="13:9" pos:end="15:62">

        <expr_stmt pos:start="13:9" pos:end="13:64"><expr pos:start="13:9" pos:end="13:63"><name pos:start="13:9" pos:end="13:33"><name pos:start="13:9" pos:end="13:9">c</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:33">lpc_apply_welch_window</name></name> <operator pos:start="13:35" pos:end="13:35">=</operator> <name pos:start="13:37" pos:end="13:63">lpc_apply_welch_window_sse2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:62"><expr pos:start="15:9" pos:end="15:61"><name pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:9">c</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:31">lpc_compute_autocorr</name></name>   <operator pos:start="15:35" pos:end="15:35">=</operator> <name pos:start="15:37" pos:end="15:61">lpc_compute_autocorr_sse2</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="19:8" pos:end="19:29">/* HAVE_SSE2_INLINE */</comment>

</block_content>}</block></function>
</unit>
