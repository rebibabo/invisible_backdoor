<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2291.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">kqemu_record_pc</name><parameter_list pos:start="1:28" pos:end="1:45">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:36">unsigned</name> <name pos:start="1:38" pos:end="1:41">long</name></type> <name pos:start="1:43" pos:end="1:44">pc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:20">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:17">long</name></type> <name pos:start="5:19" pos:end="5:19">h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:12">PCRecord</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier><modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">pr</name></decl>, <decl pos:start="7:20" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:15"><modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">r</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:25"><expr pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:5">h</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <name pos:start="11:9" pos:end="11:10">pc</name> <operator pos:start="11:12" pos:end="11:12">/</operator> <name pos:start="11:14" pos:end="11:24">PC_REC_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:36"><expr pos:start="13:5" pos:end="13:35"><name pos:start="13:5" pos:end="13:5">h</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <name pos:start="13:9" pos:end="13:9">h</name> <operator pos:start="13:11" pos:end="13:11">^</operator> <operator pos:start="13:13" pos:end="13:13">(</operator><name pos:start="13:14" pos:end="13:14">h</name> <operator pos:start="13:16" pos:end="13:17">&gt;&gt;</operator> <name pos:start="13:19" pos:end="13:34">PC_REC_HASH_BITS</name><operator pos:start="13:35" pos:end="13:35">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:32"><expr pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:5">h</name> <operator pos:start="15:7" pos:end="15:8">&amp;=</operator> <operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:26">PC_REC_HASH_SIZE</name> <operator pos:start="15:28" pos:end="15:28">-</operator> <literal type="number" pos:start="15:30" pos:end="15:30">1</literal><operator pos:start="15:31" pos:end="15:31">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:6">pr</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <operator pos:start="17:10" pos:end="17:10">&amp;</operator><name pos:start="17:11" pos:end="17:24"><name pos:start="17:11" pos:end="17:21">pc_rec_hash</name><index pos:start="17:22" pos:end="17:24">[<expr pos:start="17:23" pos:end="17:23"><name pos:start="17:23" pos:end="17:23">h</name></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="19:5" pos:end="37:5">for<control pos:start="19:8" pos:end="19:11">(<init pos:start="19:9" pos:end="19:9">;</init><condition pos:start="19:10" pos:end="19:10">;</condition><incr/>)</control> <block pos:start="19:13" pos:end="37:5">{<block_content pos:start="21:9" pos:end="35:22">

        <expr_stmt pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:9">r</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <operator pos:start="21:13" pos:end="21:13">*</operator><name pos:start="21:14" pos:end="21:15">pr</name></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:18"><if pos:start="23:9" pos:end="25:18">if <condition pos:start="23:12" pos:end="23:22">(<expr pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:13">r</name> <operator pos:start="23:15" pos:end="23:16">==</operator> <name pos:start="23:18" pos:end="23:21">NULL</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:18"><block_content pos:start="25:13" pos:end="25:18">

            <break pos:start="25:13" pos:end="25:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:24">(<expr pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:17"><name pos:start="27:13" pos:end="27:13">r</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:17">pc</name></name> <operator pos:start="27:19" pos:end="27:20">==</operator> <name pos:start="27:22" pos:end="27:23">pc</name></expr>)</condition> <block pos:start="27:26" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:19">

            <expr_stmt pos:start="29:13" pos:end="29:23"><expr pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:13">r</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:20">count</name></name><operator pos:start="29:21" pos:end="29:22">++</operator></expr>;</expr_stmt>

            <return pos:start="31:13" pos:end="31:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:22"><expr pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:10">pr</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <operator pos:start="35:14" pos:end="35:14">&amp;</operator><name pos:start="35:15" pos:end="35:21"><name pos:start="35:15" pos:end="35:15">r</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:21">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="39:5" pos:end="39:33"><expr pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:5">r</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <call pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:14">malloc</name><argument_list pos:start="39:15" pos:end="39:32">(<argument pos:start="39:16" pos:end="39:31"><expr pos:start="39:16" pos:end="39:31"><sizeof pos:start="39:16" pos:end="39:31">sizeof<argument_list pos:start="39:22" pos:end="39:31">(<argument pos:start="39:23" pos:end="39:30"><expr pos:start="39:23" pos:end="39:30"><name pos:start="39:23" pos:end="39:30">PCRecord</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:17"><expr pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:5">r</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:12">count</name></name> <operator pos:start="41:14" pos:end="41:14">=</operator> <literal type="number" pos:start="41:16" pos:end="41:16">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:15"><expr pos:start="43:5" pos:end="43:14"><name pos:start="43:5" pos:end="43:9"><name pos:start="43:5" pos:end="43:5">r</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:9">pc</name></name> <operator pos:start="43:11" pos:end="43:11">=</operator> <name pos:start="43:13" pos:end="43:14">pc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:19"><expr pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:11"><name pos:start="45:5" pos:end="45:5">r</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:11">next</name></name> <operator pos:start="45:13" pos:end="45:13">=</operator> <name pos:start="45:15" pos:end="45:18">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:12"><expr pos:start="47:5" pos:end="47:11"><operator pos:start="47:5" pos:end="47:5">*</operator><name pos:start="47:6" pos:end="47:7">pr</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <name pos:start="47:11" pos:end="47:11">r</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:20"><expr pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:17">nb_pc_records</name><operator pos:start="49:18" pos:end="49:19">++</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
