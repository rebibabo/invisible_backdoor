<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6122.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">g726_encode_frame</name><parameter_list pos:start="1:29" pos:end="3:71">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><name pos:start="1:53" pos:end="1:60">AVPacket</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avpkt</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:49"><decl pos:start="3:30" pos:end="3:49"><type pos:start="3:30" pos:end="3:49"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">AVFrame</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:49">frame</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:70"><decl pos:start="3:52" pos:end="3:70"><type pos:start="3:52" pos:end="3:70"><name pos:start="3:52" pos:end="3:54">int</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:70">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:13">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">G726Context</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">c</name> <init pos:start="7:20" pos:end="7:37">= <expr pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:26">avctx</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:61"><decl pos:start="9:5" pos:end="9:60"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">int16_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:26">samples</name> <init pos:start="9:28" pos:end="9:60">= <expr pos:start="9:30" pos:end="9:60"><operator pos:start="9:30" pos:end="9:30">(</operator><specifier pos:start="9:31" pos:end="9:35">const</specifier> <name pos:start="9:37" pos:end="9:43">int16_t</name> <operator pos:start="9:45" pos:end="9:45">*</operator><operator pos:start="9:46" pos:end="9:46">)</operator><name pos:start="9:47" pos:end="9:60"><name pos:start="9:47" pos:end="9:51">frame</name><operator pos:start="9:52" pos:end="9:53">-&gt;</operator><name pos:start="9:54" pos:end="9:57">data</name><index pos:start="9:58" pos:end="9:60">[<expr pos:start="9:59" pos:end="9:59"><literal type="number" pos:start="9:59" pos:end="9:59">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">PutBitContext</name></type> <name pos:start="11:19" pos:end="11:20">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:14">ret</name></decl>, <decl pos:start="13:17" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:24">out_size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:58"><expr pos:start="17:5" pos:end="17:57"><name pos:start="17:5" pos:end="17:12">out_size</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <operator pos:start="17:16" pos:end="17:16">(</operator><name pos:start="17:17" pos:end="17:33"><name pos:start="17:17" pos:end="17:21">frame</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:33">nb_samples</name></name> <operator pos:start="17:35" pos:end="17:35">*</operator> <name pos:start="17:37" pos:end="17:48"><name pos:start="17:37" pos:end="17:37">c</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:48">code_size</name></name> <operator pos:start="17:50" pos:end="17:50">+</operator> <literal type="number" pos:start="17:52" pos:end="17:52">7</literal><operator pos:start="17:53" pos:end="17:53">)</operator> <operator pos:start="17:55" pos:end="17:55">/</operator> <literal type="number" pos:start="17:57" pos:end="17:57">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:19"><if pos:start="19:5" pos:end="21:19">if <condition pos:start="19:8" pos:end="19:57">(<expr pos:start="19:9" pos:end="19:56"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:12">ret</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:55"><name pos:start="19:16" pos:end="19:31">ff_alloc_packet2</name><argument_list pos:start="19:32" pos:end="19:55">(<argument pos:start="19:33" pos:end="19:37"><expr pos:start="19:33" pos:end="19:37"><name pos:start="19:33" pos:end="19:37">avctx</name></expr></argument>, <argument pos:start="19:40" pos:end="19:44"><expr pos:start="19:40" pos:end="19:44"><name pos:start="19:40" pos:end="19:44">avpkt</name></expr></argument>, <argument pos:start="19:47" pos:end="19:54"><expr pos:start="19:47" pos:end="19:54"><name pos:start="19:47" pos:end="19:54">out_size</name></expr></argument>)</argument_list></call><operator pos:start="19:56" pos:end="19:56">)</operator></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:19"><block_content pos:start="21:9" pos:end="21:19">

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:49"><expr pos:start="23:5" pos:end="23:48"><call pos:start="23:5" pos:end="23:48"><name pos:start="23:5" pos:end="23:17">init_put_bits</name><argument_list pos:start="23:18" pos:end="23:48">(<argument pos:start="23:19" pos:end="23:21"><expr pos:start="23:19" pos:end="23:21"><operator pos:start="23:19" pos:end="23:19">&amp;</operator><name pos:start="23:20" pos:end="23:21">pb</name></expr></argument>, <argument pos:start="23:24" pos:end="23:34"><expr pos:start="23:24" pos:end="23:34"><name pos:start="23:24" pos:end="23:34"><name pos:start="23:24" pos:end="23:28">avpkt</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:34">data</name></name></expr></argument>, <argument pos:start="23:37" pos:end="23:47"><expr pos:start="23:37" pos:end="23:47"><name pos:start="23:37" pos:end="23:47"><name pos:start="23:37" pos:end="23:41">avpkt</name><operator pos:start="23:42" pos:end="23:43">-&gt;</operator><name pos:start="23:44" pos:end="23:47">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="29:64">for <control pos:start="27:9" pos:end="27:43">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:38"><expr pos:start="27:17" pos:end="27:37"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:37"><name pos:start="27:21" pos:end="27:25">frame</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:37">nb_samples</name></name></expr>;</condition> <incr pos:start="27:40" pos:end="27:42"><expr pos:start="27:40" pos:end="27:42"><name pos:start="27:40" pos:end="27:40">i</name><operator pos:start="27:41" pos:end="27:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:9" pos:end="29:64"><block_content pos:start="29:9" pos:end="29:64">

        <expr_stmt pos:start="29:9" pos:end="29:64"><expr pos:start="29:9" pos:end="29:63"><call pos:start="29:9" pos:end="29:63"><name pos:start="29:9" pos:end="29:16">put_bits</name><argument_list pos:start="29:17" pos:end="29:63">(<argument pos:start="29:18" pos:end="29:20"><expr pos:start="29:18" pos:end="29:20"><operator pos:start="29:18" pos:end="29:18">&amp;</operator><name pos:start="29:19" pos:end="29:20">pb</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:23">c</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:34">code_size</name></name></expr></argument>, <argument pos:start="29:37" pos:end="29:62"><expr pos:start="29:37" pos:end="29:62"><call pos:start="29:37" pos:end="29:62"><name pos:start="29:37" pos:end="29:47">g726_encode</name><argument_list pos:start="29:48" pos:end="29:62">(<argument pos:start="29:49" pos:end="29:49"><expr pos:start="29:49" pos:end="29:49"><name pos:start="29:49" pos:end="29:49">c</name></expr></argument>, <argument pos:start="29:52" pos:end="29:61"><expr pos:start="29:52" pos:end="29:61"><operator pos:start="29:52" pos:end="29:52">*</operator><name pos:start="29:53" pos:end="29:59">samples</name><operator pos:start="29:60" pos:end="29:61">++</operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><call pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:18">flush_put_bits</name><argument_list pos:start="33:19" pos:end="33:23">(<argument pos:start="33:20" pos:end="33:22"><expr pos:start="33:20" pos:end="33:22"><operator pos:start="33:20" pos:end="33:20">&amp;</operator><name pos:start="33:21" pos:end="33:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:9">avpkt</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:15">size</name></name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:26">out_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><operator pos:start="39:5" pos:end="39:5">*</operator><name pos:start="39:6" pos:end="39:19">got_packet_ptr</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <literal type="number" pos:start="39:23" pos:end="39:23">1</literal></expr>;</expr_stmt>

    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
