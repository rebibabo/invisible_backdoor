<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19926.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">acpi_build</name><parameter_list pos:start="1:16" pos:end="1:65">(<parameter pos:start="1:17" pos:end="1:39"><decl pos:start="1:17" pos:end="1:39"><type pos:start="1:17" pos:end="1:39"><name pos:start="1:17" pos:end="1:27">PcGuestInfo</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:39">guest_info</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:64"><decl pos:start="1:42" pos:end="1:64"><type pos:start="1:42" pos:end="1:64"><name pos:start="1:42" pos:end="1:56">AcpiBuildTables</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:64">tables</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="175:1">{<block_content pos:start="5:5" pos:end="173:38">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">GArray</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:25">table_offsets</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:17">facs</name></decl>, <decl pos:start="7:20" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:20" pos:end="7:23">dsdt</name></decl>, <decl pos:start="7:26" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:26" pos:end="7:29">rsdt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15">AcpiCpuInfo</name></type> <name pos:start="9:17" pos:end="9:19">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:14">AcpiPmInfo</name></type> <name pos:start="11:16" pos:end="11:17">pm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">AcpiMiscInfo</name></type> <name pos:start="13:18" pos:end="13:21">misc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">AcpiMcfgInfo</name></type> <name pos:start="15:18" pos:end="15:21">mcfg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:13">PcPciInfo</name></type> <name pos:start="17:15" pos:end="17:17">pci</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:15"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:14">u</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><call pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:21">acpi_get_cpu_info</name><argument_list pos:start="23:22" pos:end="23:27">(<argument pos:start="23:23" pos:end="23:26"><expr pos:start="23:23" pos:end="23:26"><operator pos:start="23:23" pos:end="23:23">&amp;</operator><name pos:start="23:24" pos:end="23:26">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><call pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:20">acpi_get_pm_info</name><argument_list pos:start="25:21" pos:end="25:25">(<argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><operator pos:start="25:22" pos:end="25:22">&amp;</operator><name pos:start="25:23" pos:end="25:24">pm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:25"><expr pos:start="27:5" pos:end="27:24"><call pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:17">acpi_get_dsdt</name><argument_list pos:start="27:18" pos:end="27:24">(<argument pos:start="27:19" pos:end="27:23"><expr pos:start="27:19" pos:end="27:23"><operator pos:start="27:19" pos:end="27:19">&amp;</operator><name pos:start="27:20" pos:end="27:23">misc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><call pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:25">acpi_get_hotplug_info</name><argument_list pos:start="29:26" pos:end="29:32">(<argument pos:start="29:27" pos:end="29:31"><expr pos:start="29:27" pos:end="29:31"><operator pos:start="29:27" pos:end="29:27">&amp;</operator><name pos:start="29:28" pos:end="29:31">misc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><call pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:22">acpi_get_misc_info</name><argument_list pos:start="31:23" pos:end="31:29">(<argument pos:start="31:24" pos:end="31:28"><expr pos:start="31:24" pos:end="31:28"><operator pos:start="31:24" pos:end="31:24">&amp;</operator><name pos:start="31:25" pos:end="31:28">misc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><call pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:21">acpi_get_pci_info</name><argument_list pos:start="33:22" pos:end="33:27">(<argument pos:start="33:23" pos:end="33:26"><expr pos:start="33:23" pos:end="33:26"><operator pos:start="33:23" pos:end="33:23">&amp;</operator><name pos:start="33:24" pos:end="33:26">pci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="39:58"><expr pos:start="37:5" pos:end="39:57"><name pos:start="37:5" pos:end="37:17">table_offsets</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="39:57"><name pos:start="37:21" pos:end="37:31">g_array_new</name><argument_list pos:start="37:32" pos:end="39:57">(<argument pos:start="37:33" pos:end="37:37"><expr pos:start="37:33" pos:end="37:37"><name pos:start="37:33" pos:end="37:37">false</name></expr></argument>, <argument pos:start="37:40" pos:end="37:43"><expr pos:start="37:40" pos:end="37:43"><name pos:start="37:40" pos:end="37:43">true</name></expr></argument> <comment type="block" pos:start="37:45" pos:end="37:55">/* clear */</comment>,

                                        <argument pos:start="39:41" pos:end="39:56"><expr pos:start="39:41" pos:end="39:56"><sizeof pos:start="39:41" pos:end="39:56">sizeof<argument_list pos:start="39:47" pos:end="39:56">(<argument pos:start="39:48" pos:end="39:55"><expr pos:start="39:48" pos:end="39:55"><name pos:start="39:48" pos:end="39:55">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:48"><expr pos:start="41:5" pos:end="41:47"><call pos:start="41:5" pos:end="41:47"><name pos:start="41:5" pos:end="41:22">ACPI_BUILD_DPRINTF</name><argument_list pos:start="41:23" pos:end="41:47">(<argument pos:start="41:24" pos:end="41:24"><expr pos:start="41:24" pos:end="41:24"><literal type="number" pos:start="41:24" pos:end="41:24">3</literal></expr></argument>, <argument pos:start="41:27" pos:end="41:46"><expr pos:start="41:27" pos:end="41:46"><literal type="string" pos:start="41:27" pos:end="41:46">"init ACPI tables\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="49:54"><expr pos:start="45:5" pos:end="49:53"><call pos:start="45:5" pos:end="49:53"><name pos:start="45:5" pos:end="45:28">bios_linker_loader_alloc</name><argument_list pos:start="45:29" pos:end="49:53">(<argument pos:start="45:30" pos:end="45:43"><expr pos:start="45:30" pos:end="45:43"><name pos:start="45:30" pos:end="45:43"><name pos:start="45:30" pos:end="45:35">tables</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:43">linker</name></name></expr></argument>, <argument pos:start="45:46" pos:end="45:66"><expr pos:start="45:46" pos:end="45:66"><name pos:start="45:46" pos:end="45:66">ACPI_BUILD_TABLE_FILE</name></expr></argument>,

                             <argument pos:start="47:30" pos:end="47:31"><expr pos:start="47:30" pos:end="47:31"><literal type="number" pos:start="47:30" pos:end="47:31">64</literal></expr></argument> <comment type="block" pos:start="47:33" pos:end="47:60">/* Ensure FACS is aligned */</comment>,

                             <argument pos:start="49:30" pos:end="49:34"><expr pos:start="49:30" pos:end="49:34"><name pos:start="49:30" pos:end="49:34">false</name></expr></argument> <comment type="block" pos:start="49:36" pos:end="49:52">/* high memory */</comment>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="61:7">/*

     * FACS is pointed to by FADT.

     * We place it first since it's the only table that has alignment

     * requirements.

     */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:35"><expr pos:start="63:5" pos:end="63:34"><name pos:start="63:5" pos:end="63:8">facs</name> <operator pos:start="63:10" pos:end="63:10">=</operator> <name pos:start="63:12" pos:end="63:34"><name pos:start="63:12" pos:end="63:17">tables</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:29">table_data</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:34">len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:63"><expr pos:start="65:5" pos:end="65:62"><call pos:start="65:5" pos:end="65:62"><name pos:start="65:5" pos:end="65:14">build_facs</name><argument_list pos:start="65:15" pos:end="65:62">(<argument pos:start="65:16" pos:end="65:33"><expr pos:start="65:16" pos:end="65:33"><name pos:start="65:16" pos:end="65:33"><name pos:start="65:16" pos:end="65:21">tables</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:33">table_data</name></name></expr></argument>, <argument pos:start="65:36" pos:end="65:49"><expr pos:start="65:36" pos:end="65:49"><name pos:start="65:36" pos:end="65:49"><name pos:start="65:36" pos:end="65:41">tables</name><operator pos:start="65:42" pos:end="65:43">-&gt;</operator><name pos:start="65:44" pos:end="65:49">linker</name></name></expr></argument>, <argument pos:start="65:52" pos:end="65:61"><expr pos:start="65:52" pos:end="65:61"><name pos:start="65:52" pos:end="65:61">guest_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:36">/* DSDT is pointed to by FADT */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:35"><expr pos:start="71:5" pos:end="71:34"><name pos:start="71:5" pos:end="71:8">dsdt</name> <operator pos:start="71:10" pos:end="71:10">=</operator> <name pos:start="71:12" pos:end="71:34"><name pos:start="71:12" pos:end="71:17">tables</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:29">table_data</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:34">len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:58"><expr pos:start="73:5" pos:end="73:57"><call pos:start="73:5" pos:end="73:57"><name pos:start="73:5" pos:end="73:14">build_dsdt</name><argument_list pos:start="73:15" pos:end="73:57">(<argument pos:start="73:16" pos:end="73:33"><expr pos:start="73:16" pos:end="73:33"><name pos:start="73:16" pos:end="73:33"><name pos:start="73:16" pos:end="73:21">tables</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:33">table_data</name></name></expr></argument>, <argument pos:start="73:36" pos:end="73:49"><expr pos:start="73:36" pos:end="73:49"><name pos:start="73:36" pos:end="73:49"><name pos:start="73:36" pos:end="73:41">tables</name><operator pos:start="73:42" pos:end="73:43">-&gt;</operator><name pos:start="73:44" pos:end="73:49">linker</name></name></expr></argument>, <argument pos:start="73:52" pos:end="73:56"><expr pos:start="73:52" pos:end="73:56"><operator pos:start="73:52" pos:end="73:52">&amp;</operator><name pos:start="73:53" pos:end="73:56">misc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:40">/* ACPI tables pointed to by RSDT */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:54"><expr pos:start="79:5" pos:end="79:53"><call pos:start="79:5" pos:end="79:53"><name pos:start="79:5" pos:end="79:18">acpi_add_table</name><argument_list pos:start="79:19" pos:end="79:53">(<argument pos:start="79:20" pos:end="79:32"><expr pos:start="79:20" pos:end="79:32"><name pos:start="79:20" pos:end="79:32">table_offsets</name></expr></argument>, <argument pos:start="79:35" pos:end="79:52"><expr pos:start="79:35" pos:end="79:52"><name pos:start="79:35" pos:end="79:52"><name pos:start="79:35" pos:end="79:40">tables</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:52">table_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:68"><expr pos:start="81:5" pos:end="81:67"><call pos:start="81:5" pos:end="81:67"><name pos:start="81:5" pos:end="81:14">build_fadt</name><argument_list pos:start="81:15" pos:end="81:67">(<argument pos:start="81:16" pos:end="81:33"><expr pos:start="81:16" pos:end="81:33"><name pos:start="81:16" pos:end="81:33"><name pos:start="81:16" pos:end="81:21">tables</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:33">table_data</name></name></expr></argument>, <argument pos:start="81:36" pos:end="81:49"><expr pos:start="81:36" pos:end="81:49"><name pos:start="81:36" pos:end="81:49"><name pos:start="81:36" pos:end="81:41">tables</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:49">linker</name></name></expr></argument>, <argument pos:start="81:52" pos:end="81:54"><expr pos:start="81:52" pos:end="81:54"><operator pos:start="81:52" pos:end="81:52">&amp;</operator><name pos:start="81:53" pos:end="81:54">pm</name></expr></argument>, <argument pos:start="81:57" pos:end="81:60"><expr pos:start="81:57" pos:end="81:60"><name pos:start="81:57" pos:end="81:60">facs</name></expr></argument>, <argument pos:start="81:63" pos:end="81:66"><expr pos:start="81:63" pos:end="81:66"><name pos:start="81:63" pos:end="81:66">dsdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:54"><expr pos:start="83:5" pos:end="83:53"><call pos:start="83:5" pos:end="83:53"><name pos:start="83:5" pos:end="83:18">acpi_add_table</name><argument_list pos:start="83:19" pos:end="83:53">(<argument pos:start="83:20" pos:end="83:32"><expr pos:start="83:20" pos:end="83:32"><name pos:start="83:20" pos:end="83:32">table_offsets</name></expr></argument>, <argument pos:start="83:35" pos:end="83:52"><expr pos:start="83:35" pos:end="83:52"><name pos:start="83:35" pos:end="83:52"><name pos:start="83:35" pos:end="83:40">tables</name><operator pos:start="83:41" pos:end="83:42">-&gt;</operator><name pos:start="83:43" pos:end="83:52">table_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="89:27"><expr pos:start="87:5" pos:end="89:26"><call pos:start="87:5" pos:end="89:26"><name pos:start="87:5" pos:end="87:14">build_ssdt</name><argument_list pos:start="87:15" pos:end="89:26">(<argument pos:start="87:16" pos:end="87:33"><expr pos:start="87:16" pos:end="87:33"><name pos:start="87:16" pos:end="87:33"><name pos:start="87:16" pos:end="87:21">tables</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:33">table_data</name></name></expr></argument>, <argument pos:start="87:36" pos:end="87:49"><expr pos:start="87:36" pos:end="87:49"><name pos:start="87:36" pos:end="87:49"><name pos:start="87:36" pos:end="87:41">tables</name><operator pos:start="87:42" pos:end="87:43">-&gt;</operator><name pos:start="87:44" pos:end="87:49">linker</name></name></expr></argument>, <argument pos:start="87:52" pos:end="87:55"><expr pos:start="87:52" pos:end="87:55"><operator pos:start="87:52" pos:end="87:52">&amp;</operator><name pos:start="87:53" pos:end="87:55">cpu</name></expr></argument>, <argument pos:start="87:58" pos:end="87:60"><expr pos:start="87:58" pos:end="87:60"><operator pos:start="87:58" pos:end="87:58">&amp;</operator><name pos:start="87:59" pos:end="87:60">pm</name></expr></argument>, <argument pos:start="87:63" pos:end="87:67"><expr pos:start="87:63" pos:end="87:67"><operator pos:start="87:63" pos:end="87:63">&amp;</operator><name pos:start="87:64" pos:end="87:67">misc</name></expr></argument>, <argument pos:start="87:70" pos:end="87:73"><expr pos:start="87:70" pos:end="87:73"><operator pos:start="87:70" pos:end="87:70">&amp;</operator><name pos:start="87:71" pos:end="87:73">pci</name></expr></argument>,

               <argument pos:start="89:16" pos:end="89:25"><expr pos:start="89:16" pos:end="89:25"><name pos:start="89:16" pos:end="89:25">guest_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:54"><expr pos:start="91:5" pos:end="91:53"><call pos:start="91:5" pos:end="91:53"><name pos:start="91:5" pos:end="91:18">acpi_add_table</name><argument_list pos:start="91:19" pos:end="91:53">(<argument pos:start="91:20" pos:end="91:32"><expr pos:start="91:20" pos:end="91:32"><name pos:start="91:20" pos:end="91:32">table_offsets</name></expr></argument>, <argument pos:start="91:35" pos:end="91:52"><expr pos:start="91:35" pos:end="91:52"><name pos:start="91:35" pos:end="91:52"><name pos:start="91:35" pos:end="91:40">tables</name><operator pos:start="91:41" pos:end="91:42">-&gt;</operator><name pos:start="91:43" pos:end="91:52">table_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:69"><expr pos:start="95:5" pos:end="95:68"><call pos:start="95:5" pos:end="95:68"><name pos:start="95:5" pos:end="95:14">build_madt</name><argument_list pos:start="95:15" pos:end="95:68">(<argument pos:start="95:16" pos:end="95:33"><expr pos:start="95:16" pos:end="95:33"><name pos:start="95:16" pos:end="95:33"><name pos:start="95:16" pos:end="95:21">tables</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:33">table_data</name></name></expr></argument>, <argument pos:start="95:36" pos:end="95:49"><expr pos:start="95:36" pos:end="95:49"><name pos:start="95:36" pos:end="95:49"><name pos:start="95:36" pos:end="95:41">tables</name><operator pos:start="95:42" pos:end="95:43">-&gt;</operator><name pos:start="95:44" pos:end="95:49">linker</name></name></expr></argument>, <argument pos:start="95:52" pos:end="95:55"><expr pos:start="95:52" pos:end="95:55"><operator pos:start="95:52" pos:end="95:52">&amp;</operator><name pos:start="95:53" pos:end="95:55">cpu</name></expr></argument>, <argument pos:start="95:58" pos:end="95:67"><expr pos:start="95:58" pos:end="95:67"><name pos:start="95:58" pos:end="95:67">guest_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:54"><expr pos:start="97:5" pos:end="97:53"><call pos:start="97:5" pos:end="97:53"><name pos:start="97:5" pos:end="97:18">acpi_add_table</name><argument_list pos:start="97:19" pos:end="97:53">(<argument pos:start="97:20" pos:end="97:32"><expr pos:start="97:20" pos:end="97:32"><name pos:start="97:20" pos:end="97:32">table_offsets</name></expr></argument>, <argument pos:start="97:35" pos:end="97:52"><expr pos:start="97:35" pos:end="97:52"><name pos:start="97:35" pos:end="97:52"><name pos:start="97:35" pos:end="97:40">tables</name><operator pos:start="97:41" pos:end="97:42">-&gt;</operator><name pos:start="97:43" pos:end="97:52">table_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="103:5"><if pos:start="99:5" pos:end="103:5">if <condition pos:start="99:8" pos:end="99:22">(<expr pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:12">misc</name><operator pos:start="99:13" pos:end="99:13">.</operator><name pos:start="99:14" pos:end="99:21">has_hpet</name></name></expr>)</condition> <block pos:start="99:24" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:55">

        <expr_stmt pos:start="101:9" pos:end="101:55"><expr pos:start="101:9" pos:end="101:54"><call pos:start="101:9" pos:end="101:54"><name pos:start="101:9" pos:end="101:18">build_hpet</name><argument_list pos:start="101:19" pos:end="101:54">(<argument pos:start="101:20" pos:end="101:37"><expr pos:start="101:20" pos:end="101:37"><name pos:start="101:20" pos:end="101:37"><name pos:start="101:20" pos:end="101:25">tables</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:37">table_data</name></name></expr></argument>, <argument pos:start="101:40" pos:end="101:53"><expr pos:start="101:40" pos:end="101:53"><name pos:start="101:40" pos:end="101:53"><name pos:start="101:40" pos:end="101:45">tables</name><operator pos:start="101:46" pos:end="101:47">-&gt;</operator><name pos:start="101:48" pos:end="101:53">linker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="105:5" pos:end="111:5"><if pos:start="105:5" pos:end="111:5">if <condition pos:start="105:8" pos:end="105:31">(<expr pos:start="105:9" pos:end="105:30"><name pos:start="105:9" pos:end="105:30"><name pos:start="105:9" pos:end="105:18">guest_info</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:30">numa_nodes</name></name></expr>)</condition> <block pos:start="105:33" pos:end="111:5">{<block_content pos:start="107:9" pos:end="109:73">

        <expr_stmt pos:start="107:9" pos:end="107:58"><expr pos:start="107:9" pos:end="107:57"><call pos:start="107:9" pos:end="107:57"><name pos:start="107:9" pos:end="107:22">acpi_add_table</name><argument_list pos:start="107:23" pos:end="107:57">(<argument pos:start="107:24" pos:end="107:36"><expr pos:start="107:24" pos:end="107:36"><name pos:start="107:24" pos:end="107:36">table_offsets</name></expr></argument>, <argument pos:start="107:39" pos:end="107:56"><expr pos:start="107:39" pos:end="107:56"><name pos:start="107:39" pos:end="107:56"><name pos:start="107:39" pos:end="107:44">tables</name><operator pos:start="107:45" pos:end="107:46">-&gt;</operator><name pos:start="107:47" pos:end="107:56">table_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:73"><expr pos:start="109:9" pos:end="109:72"><call pos:start="109:9" pos:end="109:72"><name pos:start="109:9" pos:end="109:18">build_srat</name><argument_list pos:start="109:19" pos:end="109:72">(<argument pos:start="109:20" pos:end="109:37"><expr pos:start="109:20" pos:end="109:37"><name pos:start="109:20" pos:end="109:37"><name pos:start="109:20" pos:end="109:25">tables</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:37">table_data</name></name></expr></argument>, <argument pos:start="109:40" pos:end="109:53"><expr pos:start="109:40" pos:end="109:53"><name pos:start="109:40" pos:end="109:53"><name pos:start="109:40" pos:end="109:45">tables</name><operator pos:start="109:46" pos:end="109:47">-&gt;</operator><name pos:start="109:48" pos:end="109:53">linker</name></name></expr></argument>, <argument pos:start="109:56" pos:end="109:59"><expr pos:start="109:56" pos:end="109:59"><operator pos:start="109:56" pos:end="109:56">&amp;</operator><name pos:start="109:57" pos:end="109:59">cpu</name></expr></argument>, <argument pos:start="109:62" pos:end="109:71"><expr pos:start="109:62" pos:end="109:71"><name pos:start="109:62" pos:end="109:71">guest_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="113:5" pos:end="119:5"><if pos:start="113:5" pos:end="119:5">if <condition pos:start="113:8" pos:end="113:29">(<expr pos:start="113:9" pos:end="113:28"><call pos:start="113:9" pos:end="113:28"><name pos:start="113:9" pos:end="113:21">acpi_get_mcfg</name><argument_list pos:start="113:22" pos:end="113:28">(<argument pos:start="113:23" pos:end="113:27"><expr pos:start="113:23" pos:end="113:27"><operator pos:start="113:23" pos:end="113:23">&amp;</operator><name pos:start="113:24" pos:end="113:27">mcfg</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:31" pos:end="119:5">{<block_content pos:start="115:9" pos:end="117:66">

        <expr_stmt pos:start="115:9" pos:end="115:58"><expr pos:start="115:9" pos:end="115:57"><call pos:start="115:9" pos:end="115:57"><name pos:start="115:9" pos:end="115:22">acpi_add_table</name><argument_list pos:start="115:23" pos:end="115:57">(<argument pos:start="115:24" pos:end="115:36"><expr pos:start="115:24" pos:end="115:36"><name pos:start="115:24" pos:end="115:36">table_offsets</name></expr></argument>, <argument pos:start="115:39" pos:end="115:56"><expr pos:start="115:39" pos:end="115:56"><name pos:start="115:39" pos:end="115:56"><name pos:start="115:39" pos:end="115:44">tables</name><operator pos:start="115:45" pos:end="115:46">-&gt;</operator><name pos:start="115:47" pos:end="115:56">table_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:66"><expr pos:start="117:9" pos:end="117:65"><call pos:start="117:9" pos:end="117:65"><name pos:start="117:9" pos:end="117:22">build_mcfg_q35</name><argument_list pos:start="117:23" pos:end="117:65">(<argument pos:start="117:24" pos:end="117:41"><expr pos:start="117:24" pos:end="117:41"><name pos:start="117:24" pos:end="117:41"><name pos:start="117:24" pos:end="117:29">tables</name><operator pos:start="117:30" pos:end="117:31">-&gt;</operator><name pos:start="117:32" pos:end="117:41">table_data</name></name></expr></argument>, <argument pos:start="117:44" pos:end="117:57"><expr pos:start="117:44" pos:end="117:57"><name pos:start="117:44" pos:end="117:57"><name pos:start="117:44" pos:end="117:49">tables</name><operator pos:start="117:50" pos:end="117:51">-&gt;</operator><name pos:start="117:52" pos:end="117:57">linker</name></name></expr></argument>, <argument pos:start="117:60" pos:end="117:64"><expr pos:start="117:60" pos:end="117:64"><operator pos:start="117:60" pos:end="117:60">&amp;</operator><name pos:start="117:61" pos:end="117:64">mcfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="123:5" pos:end="123:46">/* Add tables supplied by user (if any) */</comment>

    <for pos:start="125:5" pos:end="135:5">for <control pos:start="125:9" pos:end="125:59">(<init pos:start="125:10" pos:end="125:32"><expr pos:start="125:10" pos:end="125:31"><name pos:start="125:10" pos:end="125:10">u</name> <operator pos:start="125:12" pos:end="125:12">=</operator> <call pos:start="125:14" pos:end="125:31"><name pos:start="125:14" pos:end="125:29">acpi_table_first</name><argument_list pos:start="125:30" pos:end="125:31">()</argument_list></call></expr>;</init> <condition pos:start="125:34" pos:end="125:35"><expr pos:start="125:34" pos:end="125:34"><name pos:start="125:34" pos:end="125:34">u</name></expr>;</condition> <incr pos:start="125:37" pos:end="125:58"><expr pos:start="125:37" pos:end="125:58"><name pos:start="125:37" pos:end="125:37">u</name> <operator pos:start="125:39" pos:end="125:39">=</operator> <call pos:start="125:41" pos:end="125:58"><name pos:start="125:41" pos:end="125:55">acpi_table_next</name><argument_list pos:start="125:56" pos:end="125:58">(<argument pos:start="125:57" pos:end="125:57"><expr pos:start="125:57" pos:end="125:57"><name pos:start="125:57" pos:end="125:57">u</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="125:61" pos:end="135:5">{<block_content pos:start="127:9" pos:end="133:56">

        <decl_stmt pos:start="127:9" pos:end="127:41"><decl pos:start="127:9" pos:end="127:40"><type pos:start="127:9" pos:end="127:16"><name pos:start="127:9" pos:end="127:16">unsigned</name></type> <name pos:start="127:18" pos:end="127:20">len</name> <init pos:start="127:22" pos:end="127:40">= <expr pos:start="127:24" pos:end="127:40"><call pos:start="127:24" pos:end="127:40"><name pos:start="127:24" pos:end="127:37">acpi_table_len</name><argument_list pos:start="127:38" pos:end="127:40">(<argument pos:start="127:39" pos:end="127:39"><expr pos:start="127:39" pos:end="127:39"><name pos:start="127:39" pos:end="127:39">u</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="131:9" pos:end="131:58"><expr pos:start="131:9" pos:end="131:57"><call pos:start="131:9" pos:end="131:57"><name pos:start="131:9" pos:end="131:22">acpi_add_table</name><argument_list pos:start="131:23" pos:end="131:57">(<argument pos:start="131:24" pos:end="131:36"><expr pos:start="131:24" pos:end="131:36"><name pos:start="131:24" pos:end="131:36">table_offsets</name></expr></argument>, <argument pos:start="131:39" pos:end="131:56"><expr pos:start="131:39" pos:end="131:56"><name pos:start="131:39" pos:end="131:56"><name pos:start="131:39" pos:end="131:44">tables</name><operator pos:start="131:45" pos:end="131:46">-&gt;</operator><name pos:start="131:47" pos:end="131:56">table_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:56"><expr pos:start="133:9" pos:end="133:55"><call pos:start="133:9" pos:end="133:55"><name pos:start="133:9" pos:end="133:27">g_array_append_vals</name><argument_list pos:start="133:28" pos:end="133:55">(<argument pos:start="133:29" pos:end="133:46"><expr pos:start="133:29" pos:end="133:46"><name pos:start="133:29" pos:end="133:46"><name pos:start="133:29" pos:end="133:34">tables</name><operator pos:start="133:35" pos:end="133:36">-&gt;</operator><name pos:start="133:37" pos:end="133:46">table_data</name></name></expr></argument>, <argument pos:start="133:49" pos:end="133:49"><expr pos:start="133:49" pos:end="133:49"><name pos:start="133:49" pos:end="133:49">u</name></expr></argument>, <argument pos:start="133:52" pos:end="133:54"><expr pos:start="133:52" pos:end="133:54"><name pos:start="133:52" pos:end="133:54">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="139:5" pos:end="139:36">/* RSDT is pointed to by RSDP */</comment>

    <expr_stmt pos:start="141:5" pos:end="141:35"><expr pos:start="141:5" pos:end="141:34"><name pos:start="141:5" pos:end="141:8">rsdt</name> <operator pos:start="141:10" pos:end="141:10">=</operator> <name pos:start="141:12" pos:end="141:34"><name pos:start="141:12" pos:end="141:17">tables</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:29">table_data</name><operator pos:start="141:30" pos:end="141:31">-&gt;</operator><name pos:start="141:32" pos:end="141:34">len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:66"><expr pos:start="143:5" pos:end="143:65"><call pos:start="143:5" pos:end="143:65"><name pos:start="143:5" pos:end="143:14">build_rsdt</name><argument_list pos:start="143:15" pos:end="143:65">(<argument pos:start="143:16" pos:end="143:33"><expr pos:start="143:16" pos:end="143:33"><name pos:start="143:16" pos:end="143:33"><name pos:start="143:16" pos:end="143:21">tables</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:33">table_data</name></name></expr></argument>, <argument pos:start="143:36" pos:end="143:49"><expr pos:start="143:36" pos:end="143:49"><name pos:start="143:36" pos:end="143:49"><name pos:start="143:36" pos:end="143:41">tables</name><operator pos:start="143:42" pos:end="143:43">-&gt;</operator><name pos:start="143:44" pos:end="143:49">linker</name></name></expr></argument>, <argument pos:start="143:52" pos:end="143:64"><expr pos:start="143:52" pos:end="143:64"><name pos:start="143:52" pos:end="143:64">table_offsets</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="147:5" pos:end="147:59">/* RSDP is in FSEG memory, so allocate it separately */</comment>

    <expr_stmt pos:start="149:5" pos:end="149:51"><expr pos:start="149:5" pos:end="149:50"><call pos:start="149:5" pos:end="149:50"><name pos:start="149:5" pos:end="149:14">build_rsdp</name><argument_list pos:start="149:15" pos:end="149:50">(<argument pos:start="149:16" pos:end="149:27"><expr pos:start="149:16" pos:end="149:27"><name pos:start="149:16" pos:end="149:27"><name pos:start="149:16" pos:end="149:21">tables</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:27">rsdp</name></name></expr></argument>, <argument pos:start="149:30" pos:end="149:43"><expr pos:start="149:30" pos:end="149:43"><name pos:start="149:30" pos:end="149:43"><name pos:start="149:30" pos:end="149:35">tables</name><operator pos:start="149:36" pos:end="149:37">-&gt;</operator><name pos:start="149:38" pos:end="149:43">linker</name></name></expr></argument>, <argument pos:start="149:46" pos:end="149:49"><expr pos:start="149:46" pos:end="149:49"><name pos:start="149:46" pos:end="149:49">rsdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="153:5" pos:end="161:7">/* We'll expose it all to Guest so align size to reduce

     * chance of size changes.

     * RSDP is small so it's easy to keep it immutable, no need to

     * bother with alignment.

     */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:48"><expr pos:start="163:5" pos:end="163:47"><call pos:start="163:5" pos:end="163:47"><name pos:start="163:5" pos:end="163:19">acpi_align_size</name><argument_list pos:start="163:20" pos:end="163:47">(<argument pos:start="163:21" pos:end="163:38"><expr pos:start="163:21" pos:end="163:38"><name pos:start="163:21" pos:end="163:38"><name pos:start="163:21" pos:end="163:26">tables</name><operator pos:start="163:27" pos:end="163:28">-&gt;</operator><name pos:start="163:29" pos:end="163:38">table_data</name></name></expr></argument>, <argument pos:start="163:41" pos:end="163:46"><expr pos:start="163:41" pos:end="163:46"><literal type="number" pos:start="163:41" pos:end="163:46">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:44"><expr pos:start="167:5" pos:end="167:43"><call pos:start="167:5" pos:end="167:43"><name pos:start="167:5" pos:end="167:19">acpi_align_size</name><argument_list pos:start="167:20" pos:end="167:43">(<argument pos:start="167:21" pos:end="167:34"><expr pos:start="167:21" pos:end="167:34"><name pos:start="167:21" pos:end="167:34"><name pos:start="167:21" pos:end="167:26">tables</name><operator pos:start="167:27" pos:end="167:28">-&gt;</operator><name pos:start="167:29" pos:end="167:34">linker</name></name></expr></argument>, <argument pos:start="167:37" pos:end="167:42"><expr pos:start="167:37" pos:end="167:42"><literal type="number" pos:start="167:37" pos:end="167:42">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="171:5" pos:end="171:47">/* Cleanup memory that's no longer used. */</comment>

    <expr_stmt pos:start="173:5" pos:end="173:38"><expr pos:start="173:5" pos:end="173:37"><call pos:start="173:5" pos:end="173:37"><name pos:start="173:5" pos:end="173:16">g_array_free</name><argument_list pos:start="173:17" pos:end="173:37">(<argument pos:start="173:18" pos:end="173:30"><expr pos:start="173:18" pos:end="173:30"><name pos:start="173:18" pos:end="173:30">table_offsets</name></expr></argument>, <argument pos:start="173:33" pos:end="173:36"><expr pos:start="173:33" pos:end="173:36"><name pos:start="173:33" pos:end="173:36">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
