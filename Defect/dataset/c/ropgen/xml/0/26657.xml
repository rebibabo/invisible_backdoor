<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26657.c" pos:tabs="8"><macro pos:start="1:1" pos:end="9:36"><name pos:start="1:1" pos:end="1:22">vnc_display_setup_auth</name><argument_list pos:start="1:23" pos:end="9:36">(<argument pos:start="1:24" pos:end="1:37">VncDisplay *vd</argument>,

                       <argument pos:start="3:24" pos:end="3:36">bool password</argument>,

                       <argument pos:start="5:24" pos:end="5:32">bool sasl</argument>,

                       <argument pos:start="7:24" pos:end="7:37">bool websocket</argument>,

                       <argument pos:start="9:24" pos:end="9:35">Error **errp</argument>)</argument_list></macro>

<block pos:start="11:1" pos:end="273:1">{<block_content pos:start="107:5" pos:end="271:13">

    <comment type="block" pos:start="13:5" pos:end="105:7">/*

     * We have a choice of 3 authentication options

     *

     *   1. none

     *   2. vnc

     *   3. sasl

     *

     * The channel can be run in 2 modes

     *

     *   1. clear

     *   2. tls

     *

     * And TLS can use 2 types of credentials

     *

     *   1. anon

     *   2. x509

     *

     * We thus have 9 possible logical combinations

     *

     *   1. clear + none

     *   2. clear + vnc

     *   3. clear + sasl

     *   4. tls + anon + none

     *   5. tls + anon + vnc

     *   6. tls + anon + sasl

     *   7. tls + x509 + none

     *   8. tls + x509 + vnc

     *   9. tls + x509 + sasl

     *

     * These need to be mapped into the VNC auth schemes

     * in an appropriate manner. In regular VNC, all the

     * TLS options get mapped into VNC_AUTH_VENCRYPT

     * sub-auth types.

     *

     * In websockets, the https:// protocol already provides

     * TLS support, so there is no need to make use of the

     * VeNCrypt extension. Furthermore, websockets browser

     * clients could not use VeNCrypt even if they wanted to,

     * as they cannot control when the TLS handshake takes

     * place. Thus there is no option but to rely on https://,

     * meaning combinations 4-&gt;6 and 7-&gt;9 will be mapped to

     * VNC auth schemes in the same way as combos 1-&gt;3.

     *

     * Regardless of fact that we have a different mapping to

     * VNC auth mechs for plain VNC vs websockets VNC, the end

     * result has the same security characteristics.

     */</comment>

    <if_stmt pos:start="107:5" pos:end="269:5"><if pos:start="107:5" pos:end="161:5">if <condition pos:start="107:8" pos:end="107:17">(<expr pos:start="107:9" pos:end="107:16"><name pos:start="107:9" pos:end="107:16">password</name></expr>)</condition> <block pos:start="107:19" pos:end="161:5">{<block_content pos:start="109:9" pos:end="159:9">

        <if_stmt pos:start="109:9" pos:end="149:9"><if pos:start="109:9" pos:end="141:9">if <condition pos:start="109:12" pos:end="109:25">(<expr pos:start="109:13" pos:end="109:24"><name pos:start="109:13" pos:end="109:24"><name pos:start="109:13" pos:end="109:14">vd</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:24">tlscreds</name></name></expr>)</condition> <block pos:start="109:27" pos:end="141:9">{<block_content pos:start="111:13" pos:end="139:13">

            <expr_stmt pos:start="111:13" pos:end="111:41"><expr pos:start="111:13" pos:end="111:40"><name pos:start="111:13" pos:end="111:20"><name pos:start="111:13" pos:end="111:14">vd</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:20">auth</name></name> <operator pos:start="111:22" pos:end="111:22">=</operator> <name pos:start="111:24" pos:end="111:40">VNC_AUTH_VENCRYPT</name></expr>;</expr_stmt>

            <if_stmt pos:start="113:13" pos:end="139:13"><if pos:start="113:13" pos:end="121:13">if <condition pos:start="113:16" pos:end="115:65">(<expr pos:start="113:17" pos:end="115:64"><call pos:start="113:17" pos:end="115:64"><name pos:start="113:17" pos:end="113:35">object_dynamic_cast</name><argument_list pos:start="113:36" pos:end="115:64">(<argument pos:start="113:37" pos:end="113:56"><expr pos:start="113:37" pos:end="113:56"><call pos:start="113:37" pos:end="113:56"><name pos:start="113:37" pos:end="113:42">OBJECT</name><argument_list pos:start="113:43" pos:end="113:56">(<argument pos:start="113:44" pos:end="113:55"><expr pos:start="113:44" pos:end="113:55"><name pos:start="113:44" pos:end="113:55"><name pos:start="113:44" pos:end="113:45">vd</name><operator pos:start="113:46" pos:end="113:47">-&gt;</operator><name pos:start="113:48" pos:end="113:55">tlscreds</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="115:37" pos:end="115:63"><expr pos:start="115:37" pos:end="115:63"><name pos:start="115:37" pos:end="115:63">TYPE_QCRYPTO_TLS_CREDS_X509</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="115:67" pos:end="121:13">{<block_content pos:start="117:17" pos:end="119:56">

                <expr_stmt pos:start="117:17" pos:end="117:79"><expr pos:start="117:17" pos:end="117:78"><call pos:start="117:17" pos:end="117:78"><name pos:start="117:17" pos:end="117:25">VNC_DEBUG</name><argument_list pos:start="117:26" pos:end="117:78">(<argument pos:start="117:27" pos:end="117:77"><expr pos:start="117:27" pos:end="117:77"><literal type="string" pos:start="117:27" pos:end="117:77">"Initializing VNC server with x509 password auth\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:56"><expr pos:start="119:17" pos:end="119:55"><name pos:start="119:17" pos:end="119:27"><name pos:start="119:17" pos:end="119:18">vd</name><operator pos:start="119:19" pos:end="119:20">-&gt;</operator><name pos:start="119:21" pos:end="119:27">subauth</name></name> <operator pos:start="119:29" pos:end="119:29">=</operator> <name pos:start="119:31" pos:end="119:55">VNC_AUTH_VENCRYPT_X509VNC</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="121:15" pos:end="129:13">else if <condition pos:start="121:23" pos:end="123:72">(<expr pos:start="121:24" pos:end="123:71"><call pos:start="121:24" pos:end="123:71"><name pos:start="121:24" pos:end="121:42">object_dynamic_cast</name><argument_list pos:start="121:43" pos:end="123:71">(<argument pos:start="121:44" pos:end="121:63"><expr pos:start="121:44" pos:end="121:63"><call pos:start="121:44" pos:end="121:63"><name pos:start="121:44" pos:end="121:49">OBJECT</name><argument_list pos:start="121:50" pos:end="121:63">(<argument pos:start="121:51" pos:end="121:62"><expr pos:start="121:51" pos:end="121:62"><name pos:start="121:51" pos:end="121:62"><name pos:start="121:51" pos:end="121:52">vd</name><operator pos:start="121:53" pos:end="121:54">-&gt;</operator><name pos:start="121:55" pos:end="121:62">tlscreds</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                           <argument pos:start="123:44" pos:end="123:70"><expr pos:start="123:44" pos:end="123:70"><name pos:start="123:44" pos:end="123:70">TYPE_QCRYPTO_TLS_CREDS_ANON</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:74" pos:end="129:13">{<block_content pos:start="125:17" pos:end="127:55">

                <expr_stmt pos:start="125:17" pos:end="125:78"><expr pos:start="125:17" pos:end="125:77"><call pos:start="125:17" pos:end="125:77"><name pos:start="125:17" pos:end="125:25">VNC_DEBUG</name><argument_list pos:start="125:26" pos:end="125:77">(<argument pos:start="125:27" pos:end="125:76"><expr pos:start="125:27" pos:end="125:76"><literal type="string" pos:start="125:27" pos:end="125:76">"Initializing VNC server with TLS password auth\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:55"><expr pos:start="127:17" pos:end="127:54"><name pos:start="127:17" pos:end="127:27"><name pos:start="127:17" pos:end="127:18">vd</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:27">subauth</name></name> <operator pos:start="127:29" pos:end="127:29">=</operator> <name pos:start="127:31" pos:end="127:54">VNC_AUTH_VENCRYPT_TLSVNC</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="129:15" pos:end="139:13">else <block pos:start="129:20" pos:end="139:13">{<block_content pos:start="131:17" pos:end="137:26">

                <expr_stmt pos:start="131:17" pos:end="135:70"><expr pos:start="131:17" pos:end="135:69"><call pos:start="131:17" pos:end="135:69"><name pos:start="131:17" pos:end="131:26">error_setg</name><argument_list pos:start="131:27" pos:end="135:69">(<argument pos:start="131:28" pos:end="131:31"><expr pos:start="131:28" pos:end="131:31"><name pos:start="131:28" pos:end="131:31">errp</name></expr></argument>,

                           <argument pos:start="133:28" pos:end="133:57"><expr pos:start="133:28" pos:end="133:57"><literal type="string" pos:start="133:28" pos:end="133:57">"Unsupported TLS cred type %s"</literal></expr></argument>,

                           <argument pos:start="135:28" pos:end="135:68"><expr pos:start="135:28" pos:end="135:68"><call pos:start="135:28" pos:end="135:68"><name pos:start="135:28" pos:end="135:46">object_get_typename</name><argument_list pos:start="135:47" pos:end="135:68">(<argument pos:start="135:48" pos:end="135:67"><expr pos:start="135:48" pos:end="135:67"><call pos:start="135:48" pos:end="135:67"><name pos:start="135:48" pos:end="135:53">OBJECT</name><argument_list pos:start="135:54" pos:end="135:67">(<argument pos:start="135:55" pos:end="135:66"><expr pos:start="135:55" pos:end="135:66"><name pos:start="135:55" pos:end="135:66"><name pos:start="135:55" pos:end="135:56">vd</name><operator pos:start="135:57" pos:end="135:58">-&gt;</operator><name pos:start="135:59" pos:end="135:66">tlscreds</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="137:17" pos:end="137:26">return <expr pos:start="137:24" pos:end="137:25"><operator pos:start="137:24" pos:end="137:24">-</operator><literal type="number" pos:start="137:25" pos:end="137:25">1</literal></expr>;</return>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="141:11" pos:end="149:9">else <block pos:start="141:16" pos:end="149:9">{<block_content pos:start="143:13" pos:end="147:43">

            <expr_stmt pos:start="143:13" pos:end="143:70"><expr pos:start="143:13" pos:end="143:69"><call pos:start="143:13" pos:end="143:69"><name pos:start="143:13" pos:end="143:21">VNC_DEBUG</name><argument_list pos:start="143:22" pos:end="143:69">(<argument pos:start="143:23" pos:end="143:68"><expr pos:start="143:23" pos:end="143:68"><literal type="string" pos:start="143:23" pos:end="143:68">"Initializing VNC server with password auth\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:36"><expr pos:start="145:13" pos:end="145:35"><name pos:start="145:13" pos:end="145:20"><name pos:start="145:13" pos:end="145:14">vd</name><operator pos:start="145:15" pos:end="145:16">-&gt;</operator><name pos:start="145:17" pos:end="145:20">auth</name></name> <operator pos:start="145:22" pos:end="145:22">=</operator> <name pos:start="145:24" pos:end="145:35">VNC_AUTH_VNC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:43"><expr pos:start="147:13" pos:end="147:42"><name pos:start="147:13" pos:end="147:23"><name pos:start="147:13" pos:end="147:14">vd</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:23">subauth</name></name> <operator pos:start="147:25" pos:end="147:25">=</operator> <name pos:start="147:27" pos:end="147:42">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="151:9" pos:end="159:9"><if pos:start="151:9" pos:end="155:9">if <condition pos:start="151:12" pos:end="151:22">(<expr pos:start="151:13" pos:end="151:21"><name pos:start="151:13" pos:end="151:21">websocket</name></expr>)</condition> <block pos:start="151:24" pos:end="155:9">{<block_content pos:start="153:13" pos:end="153:39">

            <expr_stmt pos:start="153:13" pos:end="153:39"><expr pos:start="153:13" pos:end="153:38"><name pos:start="153:13" pos:end="153:23"><name pos:start="153:13" pos:end="153:14">vd</name><operator pos:start="153:15" pos:end="153:16">-&gt;</operator><name pos:start="153:17" pos:end="153:23">ws_auth</name></name> <operator pos:start="153:25" pos:end="153:25">=</operator> <name pos:start="153:27" pos:end="153:38">VNC_AUTH_VNC</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="155:11" pos:end="159:9">else <block pos:start="155:16" pos:end="159:9">{<block_content pos:start="157:13" pos:end="157:43">

            <expr_stmt pos:start="157:13" pos:end="157:43"><expr pos:start="157:13" pos:end="157:42"><name pos:start="157:13" pos:end="157:23"><name pos:start="157:13" pos:end="157:14">vd</name><operator pos:start="157:15" pos:end="157:16">-&gt;</operator><name pos:start="157:17" pos:end="157:23">ws_auth</name></name> <operator pos:start="157:25" pos:end="157:25">=</operator> <name pos:start="157:27" pos:end="157:42">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="161:7" pos:end="215:5">else if <condition pos:start="161:15" pos:end="161:20">(<expr pos:start="161:16" pos:end="161:19"><name pos:start="161:16" pos:end="161:19">sasl</name></expr>)</condition> <block pos:start="161:22" pos:end="215:5">{<block_content pos:start="163:9" pos:end="213:9">

        <if_stmt pos:start="163:9" pos:end="203:9"><if pos:start="163:9" pos:end="195:9">if <condition pos:start="163:12" pos:end="163:25">(<expr pos:start="163:13" pos:end="163:24"><name pos:start="163:13" pos:end="163:24"><name pos:start="163:13" pos:end="163:14">vd</name><operator pos:start="163:15" pos:end="163:16">-&gt;</operator><name pos:start="163:17" pos:end="163:24">tlscreds</name></name></expr>)</condition> <block pos:start="163:27" pos:end="195:9">{<block_content pos:start="165:13" pos:end="193:13">

            <expr_stmt pos:start="165:13" pos:end="165:41"><expr pos:start="165:13" pos:end="165:40"><name pos:start="165:13" pos:end="165:20"><name pos:start="165:13" pos:end="165:14">vd</name><operator pos:start="165:15" pos:end="165:16">-&gt;</operator><name pos:start="165:17" pos:end="165:20">auth</name></name> <operator pos:start="165:22" pos:end="165:22">=</operator> <name pos:start="165:24" pos:end="165:40">VNC_AUTH_VENCRYPT</name></expr>;</expr_stmt>

            <if_stmt pos:start="167:13" pos:end="193:13"><if pos:start="167:13" pos:end="175:13">if <condition pos:start="167:16" pos:end="169:65">(<expr pos:start="167:17" pos:end="169:64"><call pos:start="167:17" pos:end="169:64"><name pos:start="167:17" pos:end="167:35">object_dynamic_cast</name><argument_list pos:start="167:36" pos:end="169:64">(<argument pos:start="167:37" pos:end="167:56"><expr pos:start="167:37" pos:end="167:56"><call pos:start="167:37" pos:end="167:56"><name pos:start="167:37" pos:end="167:42">OBJECT</name><argument_list pos:start="167:43" pos:end="167:56">(<argument pos:start="167:44" pos:end="167:55"><expr pos:start="167:44" pos:end="167:55"><name pos:start="167:44" pos:end="167:55"><name pos:start="167:44" pos:end="167:45">vd</name><operator pos:start="167:46" pos:end="167:47">-&gt;</operator><name pos:start="167:48" pos:end="167:55">tlscreds</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="169:37" pos:end="169:63"><expr pos:start="169:37" pos:end="169:63"><name pos:start="169:37" pos:end="169:63">TYPE_QCRYPTO_TLS_CREDS_X509</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="169:67" pos:end="175:13">{<block_content pos:start="171:17" pos:end="173:57">

                <expr_stmt pos:start="171:17" pos:end="171:75"><expr pos:start="171:17" pos:end="171:74"><call pos:start="171:17" pos:end="171:74"><name pos:start="171:17" pos:end="171:25">VNC_DEBUG</name><argument_list pos:start="171:26" pos:end="171:74">(<argument pos:start="171:27" pos:end="171:73"><expr pos:start="171:27" pos:end="171:73"><literal type="string" pos:start="171:27" pos:end="171:73">"Initializing VNC server with x509 SASL auth\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:57"><expr pos:start="173:17" pos:end="173:56"><name pos:start="173:17" pos:end="173:27"><name pos:start="173:17" pos:end="173:18">vd</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:27">subauth</name></name> <operator pos:start="173:29" pos:end="173:29">=</operator> <name pos:start="173:31" pos:end="173:56">VNC_AUTH_VENCRYPT_X509SASL</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="175:15" pos:end="183:13">else if <condition pos:start="175:23" pos:end="177:72">(<expr pos:start="175:24" pos:end="177:71"><call pos:start="175:24" pos:end="177:71"><name pos:start="175:24" pos:end="175:42">object_dynamic_cast</name><argument_list pos:start="175:43" pos:end="177:71">(<argument pos:start="175:44" pos:end="175:63"><expr pos:start="175:44" pos:end="175:63"><call pos:start="175:44" pos:end="175:63"><name pos:start="175:44" pos:end="175:49">OBJECT</name><argument_list pos:start="175:50" pos:end="175:63">(<argument pos:start="175:51" pos:end="175:62"><expr pos:start="175:51" pos:end="175:62"><name pos:start="175:51" pos:end="175:62"><name pos:start="175:51" pos:end="175:52">vd</name><operator pos:start="175:53" pos:end="175:54">-&gt;</operator><name pos:start="175:55" pos:end="175:62">tlscreds</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                           <argument pos:start="177:44" pos:end="177:70"><expr pos:start="177:44" pos:end="177:70"><name pos:start="177:44" pos:end="177:70">TYPE_QCRYPTO_TLS_CREDS_ANON</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="177:74" pos:end="183:13">{<block_content pos:start="179:17" pos:end="181:56">

                <expr_stmt pos:start="179:17" pos:end="179:74"><expr pos:start="179:17" pos:end="179:73"><call pos:start="179:17" pos:end="179:73"><name pos:start="179:17" pos:end="179:25">VNC_DEBUG</name><argument_list pos:start="179:26" pos:end="179:73">(<argument pos:start="179:27" pos:end="179:72"><expr pos:start="179:27" pos:end="179:72"><literal type="string" pos:start="179:27" pos:end="179:72">"Initializing VNC server with TLS SASL auth\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:56"><expr pos:start="181:17" pos:end="181:55"><name pos:start="181:17" pos:end="181:27"><name pos:start="181:17" pos:end="181:18">vd</name><operator pos:start="181:19" pos:end="181:20">-&gt;</operator><name pos:start="181:21" pos:end="181:27">subauth</name></name> <operator pos:start="181:29" pos:end="181:29">=</operator> <name pos:start="181:31" pos:end="181:55">VNC_AUTH_VENCRYPT_TLSSASL</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="183:15" pos:end="193:13">else <block pos:start="183:20" pos:end="193:13">{<block_content pos:start="185:17" pos:end="191:26">

                <expr_stmt pos:start="185:17" pos:end="189:70"><expr pos:start="185:17" pos:end="189:69"><call pos:start="185:17" pos:end="189:69"><name pos:start="185:17" pos:end="185:26">error_setg</name><argument_list pos:start="185:27" pos:end="189:69">(<argument pos:start="185:28" pos:end="185:31"><expr pos:start="185:28" pos:end="185:31"><name pos:start="185:28" pos:end="185:31">errp</name></expr></argument>,

                           <argument pos:start="187:28" pos:end="187:57"><expr pos:start="187:28" pos:end="187:57"><literal type="string" pos:start="187:28" pos:end="187:57">"Unsupported TLS cred type %s"</literal></expr></argument>,

                           <argument pos:start="189:28" pos:end="189:68"><expr pos:start="189:28" pos:end="189:68"><call pos:start="189:28" pos:end="189:68"><name pos:start="189:28" pos:end="189:46">object_get_typename</name><argument_list pos:start="189:47" pos:end="189:68">(<argument pos:start="189:48" pos:end="189:67"><expr pos:start="189:48" pos:end="189:67"><call pos:start="189:48" pos:end="189:67"><name pos:start="189:48" pos:end="189:53">OBJECT</name><argument_list pos:start="189:54" pos:end="189:67">(<argument pos:start="189:55" pos:end="189:66"><expr pos:start="189:55" pos:end="189:66"><name pos:start="189:55" pos:end="189:66"><name pos:start="189:55" pos:end="189:56">vd</name><operator pos:start="189:57" pos:end="189:58">-&gt;</operator><name pos:start="189:59" pos:end="189:66">tlscreds</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="191:17" pos:end="191:26">return <expr pos:start="191:24" pos:end="191:25"><operator pos:start="191:24" pos:end="191:24">-</operator><literal type="number" pos:start="191:25" pos:end="191:25">1</literal></expr>;</return>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="195:11" pos:end="203:9">else <block pos:start="195:16" pos:end="203:9">{<block_content pos:start="197:13" pos:end="201:43">

            <expr_stmt pos:start="197:13" pos:end="197:66"><expr pos:start="197:13" pos:end="197:65"><call pos:start="197:13" pos:end="197:65"><name pos:start="197:13" pos:end="197:21">VNC_DEBUG</name><argument_list pos:start="197:22" pos:end="197:65">(<argument pos:start="197:23" pos:end="197:64"><expr pos:start="197:23" pos:end="197:64"><literal type="string" pos:start="197:23" pos:end="197:64">"Initializing VNC server with SASL auth\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:37"><expr pos:start="199:13" pos:end="199:36"><name pos:start="199:13" pos:end="199:20"><name pos:start="199:13" pos:end="199:14">vd</name><operator pos:start="199:15" pos:end="199:16">-&gt;</operator><name pos:start="199:17" pos:end="199:20">auth</name></name> <operator pos:start="199:22" pos:end="199:22">=</operator> <name pos:start="199:24" pos:end="199:36">VNC_AUTH_SASL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:43"><expr pos:start="201:13" pos:end="201:42"><name pos:start="201:13" pos:end="201:23"><name pos:start="201:13" pos:end="201:14">vd</name><operator pos:start="201:15" pos:end="201:16">-&gt;</operator><name pos:start="201:17" pos:end="201:23">subauth</name></name> <operator pos:start="201:25" pos:end="201:25">=</operator> <name pos:start="201:27" pos:end="201:42">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="205:9" pos:end="213:9"><if pos:start="205:9" pos:end="209:9">if <condition pos:start="205:12" pos:end="205:22">(<expr pos:start="205:13" pos:end="205:21"><name pos:start="205:13" pos:end="205:21">websocket</name></expr>)</condition> <block pos:start="205:24" pos:end="209:9">{<block_content pos:start="207:13" pos:end="207:40">

            <expr_stmt pos:start="207:13" pos:end="207:40"><expr pos:start="207:13" pos:end="207:39"><name pos:start="207:13" pos:end="207:23"><name pos:start="207:13" pos:end="207:14">vd</name><operator pos:start="207:15" pos:end="207:16">-&gt;</operator><name pos:start="207:17" pos:end="207:23">ws_auth</name></name> <operator pos:start="207:25" pos:end="207:25">=</operator> <name pos:start="207:27" pos:end="207:39">VNC_AUTH_SASL</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="209:11" pos:end="213:9">else <block pos:start="209:16" pos:end="213:9">{<block_content pos:start="211:13" pos:end="211:43">

            <expr_stmt pos:start="211:13" pos:end="211:43"><expr pos:start="211:13" pos:end="211:42"><name pos:start="211:13" pos:end="211:23"><name pos:start="211:13" pos:end="211:14">vd</name><operator pos:start="211:15" pos:end="211:16">-&gt;</operator><name pos:start="211:17" pos:end="211:23">ws_auth</name></name> <operator pos:start="211:25" pos:end="211:25">=</operator> <name pos:start="211:27" pos:end="211:42">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="215:7" pos:end="269:5">else <block pos:start="215:12" pos:end="269:5">{<block_content pos:start="217:9" pos:end="267:9">

        <if_stmt pos:start="217:9" pos:end="257:9"><if pos:start="217:9" pos:end="249:9">if <condition pos:start="217:12" pos:end="217:25">(<expr pos:start="217:13" pos:end="217:24"><name pos:start="217:13" pos:end="217:24"><name pos:start="217:13" pos:end="217:14">vd</name><operator pos:start="217:15" pos:end="217:16">-&gt;</operator><name pos:start="217:17" pos:end="217:24">tlscreds</name></name></expr>)</condition> <block pos:start="217:27" pos:end="249:9">{<block_content pos:start="219:13" pos:end="247:13">

            <expr_stmt pos:start="219:13" pos:end="219:41"><expr pos:start="219:13" pos:end="219:40"><name pos:start="219:13" pos:end="219:20"><name pos:start="219:13" pos:end="219:14">vd</name><operator pos:start="219:15" pos:end="219:16">-&gt;</operator><name pos:start="219:17" pos:end="219:20">auth</name></name> <operator pos:start="219:22" pos:end="219:22">=</operator> <name pos:start="219:24" pos:end="219:40">VNC_AUTH_VENCRYPT</name></expr>;</expr_stmt>

            <if_stmt pos:start="221:13" pos:end="247:13"><if pos:start="221:13" pos:end="229:13">if <condition pos:start="221:16" pos:end="223:65">(<expr pos:start="221:17" pos:end="223:64"><call pos:start="221:17" pos:end="223:64"><name pos:start="221:17" pos:end="221:35">object_dynamic_cast</name><argument_list pos:start="221:36" pos:end="223:64">(<argument pos:start="221:37" pos:end="221:56"><expr pos:start="221:37" pos:end="221:56"><call pos:start="221:37" pos:end="221:56"><name pos:start="221:37" pos:end="221:42">OBJECT</name><argument_list pos:start="221:43" pos:end="221:56">(<argument pos:start="221:44" pos:end="221:55"><expr pos:start="221:44" pos:end="221:55"><name pos:start="221:44" pos:end="221:55"><name pos:start="221:44" pos:end="221:45">vd</name><operator pos:start="221:46" pos:end="221:47">-&gt;</operator><name pos:start="221:48" pos:end="221:55">tlscreds</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="223:37" pos:end="223:63"><expr pos:start="223:37" pos:end="223:63"><name pos:start="223:37" pos:end="223:63">TYPE_QCRYPTO_TLS_CREDS_X509</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="223:67" pos:end="229:13">{<block_content pos:start="225:17" pos:end="227:57">

                <expr_stmt pos:start="225:17" pos:end="225:73"><expr pos:start="225:17" pos:end="225:72"><call pos:start="225:17" pos:end="225:72"><name pos:start="225:17" pos:end="225:25">VNC_DEBUG</name><argument_list pos:start="225:26" pos:end="225:72">(<argument pos:start="225:27" pos:end="225:71"><expr pos:start="225:27" pos:end="225:71"><literal type="string" pos:start="225:27" pos:end="225:71">"Initializing VNC server with x509 no auth\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:57"><expr pos:start="227:17" pos:end="227:56"><name pos:start="227:17" pos:end="227:27"><name pos:start="227:17" pos:end="227:18">vd</name><operator pos:start="227:19" pos:end="227:20">-&gt;</operator><name pos:start="227:21" pos:end="227:27">subauth</name></name> <operator pos:start="227:29" pos:end="227:29">=</operator> <name pos:start="227:31" pos:end="227:56">VNC_AUTH_VENCRYPT_X509NONE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="229:15" pos:end="237:13">else if <condition pos:start="229:23" pos:end="231:72">(<expr pos:start="229:24" pos:end="231:71"><call pos:start="229:24" pos:end="231:71"><name pos:start="229:24" pos:end="229:42">object_dynamic_cast</name><argument_list pos:start="229:43" pos:end="231:71">(<argument pos:start="229:44" pos:end="229:63"><expr pos:start="229:44" pos:end="229:63"><call pos:start="229:44" pos:end="229:63"><name pos:start="229:44" pos:end="229:49">OBJECT</name><argument_list pos:start="229:50" pos:end="229:63">(<argument pos:start="229:51" pos:end="229:62"><expr pos:start="229:51" pos:end="229:62"><name pos:start="229:51" pos:end="229:62"><name pos:start="229:51" pos:end="229:52">vd</name><operator pos:start="229:53" pos:end="229:54">-&gt;</operator><name pos:start="229:55" pos:end="229:62">tlscreds</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                           <argument pos:start="231:44" pos:end="231:70"><expr pos:start="231:44" pos:end="231:70"><name pos:start="231:44" pos:end="231:70">TYPE_QCRYPTO_TLS_CREDS_ANON</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="231:74" pos:end="237:13">{<block_content pos:start="233:17" pos:end="235:56">

                <expr_stmt pos:start="233:17" pos:end="233:72"><expr pos:start="233:17" pos:end="233:71"><call pos:start="233:17" pos:end="233:71"><name pos:start="233:17" pos:end="233:25">VNC_DEBUG</name><argument_list pos:start="233:26" pos:end="233:71">(<argument pos:start="233:27" pos:end="233:70"><expr pos:start="233:27" pos:end="233:70"><literal type="string" pos:start="233:27" pos:end="233:70">"Initializing VNC server with TLS no auth\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="235:17" pos:end="235:56"><expr pos:start="235:17" pos:end="235:55"><name pos:start="235:17" pos:end="235:27"><name pos:start="235:17" pos:end="235:18">vd</name><operator pos:start="235:19" pos:end="235:20">-&gt;</operator><name pos:start="235:21" pos:end="235:27">subauth</name></name> <operator pos:start="235:29" pos:end="235:29">=</operator> <name pos:start="235:31" pos:end="235:55">VNC_AUTH_VENCRYPT_TLSNONE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="237:15" pos:end="247:13">else <block pos:start="237:20" pos:end="247:13">{<block_content pos:start="239:17" pos:end="245:26">

                <expr_stmt pos:start="239:17" pos:end="243:70"><expr pos:start="239:17" pos:end="243:69"><call pos:start="239:17" pos:end="243:69"><name pos:start="239:17" pos:end="239:26">error_setg</name><argument_list pos:start="239:27" pos:end="243:69">(<argument pos:start="239:28" pos:end="239:31"><expr pos:start="239:28" pos:end="239:31"><name pos:start="239:28" pos:end="239:31">errp</name></expr></argument>,

                           <argument pos:start="241:28" pos:end="241:57"><expr pos:start="241:28" pos:end="241:57"><literal type="string" pos:start="241:28" pos:end="241:57">"Unsupported TLS cred type %s"</literal></expr></argument>,

                           <argument pos:start="243:28" pos:end="243:68"><expr pos:start="243:28" pos:end="243:68"><call pos:start="243:28" pos:end="243:68"><name pos:start="243:28" pos:end="243:46">object_get_typename</name><argument_list pos:start="243:47" pos:end="243:68">(<argument pos:start="243:48" pos:end="243:67"><expr pos:start="243:48" pos:end="243:67"><call pos:start="243:48" pos:end="243:67"><name pos:start="243:48" pos:end="243:53">OBJECT</name><argument_list pos:start="243:54" pos:end="243:67">(<argument pos:start="243:55" pos:end="243:66"><expr pos:start="243:55" pos:end="243:66"><name pos:start="243:55" pos:end="243:66"><name pos:start="243:55" pos:end="243:56">vd</name><operator pos:start="243:57" pos:end="243:58">-&gt;</operator><name pos:start="243:59" pos:end="243:66">tlscreds</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="245:17" pos:end="245:26">return <expr pos:start="245:24" pos:end="245:25"><operator pos:start="245:24" pos:end="245:24">-</operator><literal type="number" pos:start="245:25" pos:end="245:25">1</literal></expr>;</return>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="249:11" pos:end="257:9">else <block pos:start="249:16" pos:end="257:9">{<block_content pos:start="251:13" pos:end="255:43">

            <expr_stmt pos:start="251:13" pos:end="251:64"><expr pos:start="251:13" pos:end="251:63"><call pos:start="251:13" pos:end="251:63"><name pos:start="251:13" pos:end="251:21">VNC_DEBUG</name><argument_list pos:start="251:22" pos:end="251:63">(<argument pos:start="251:23" pos:end="251:62"><expr pos:start="251:23" pos:end="251:62"><literal type="string" pos:start="251:23" pos:end="251:62">"Initializing VNC server with no auth\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:37"><expr pos:start="253:13" pos:end="253:36"><name pos:start="253:13" pos:end="253:20"><name pos:start="253:13" pos:end="253:14">vd</name><operator pos:start="253:15" pos:end="253:16">-&gt;</operator><name pos:start="253:17" pos:end="253:20">auth</name></name> <operator pos:start="253:22" pos:end="253:22">=</operator> <name pos:start="253:24" pos:end="253:36">VNC_AUTH_NONE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:43"><expr pos:start="255:13" pos:end="255:42"><name pos:start="255:13" pos:end="255:23"><name pos:start="255:13" pos:end="255:14">vd</name><operator pos:start="255:15" pos:end="255:16">-&gt;</operator><name pos:start="255:17" pos:end="255:23">subauth</name></name> <operator pos:start="255:25" pos:end="255:25">=</operator> <name pos:start="255:27" pos:end="255:42">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="259:9" pos:end="267:9"><if pos:start="259:9" pos:end="263:9">if <condition pos:start="259:12" pos:end="259:22">(<expr pos:start="259:13" pos:end="259:21"><name pos:start="259:13" pos:end="259:21">websocket</name></expr>)</condition> <block pos:start="259:24" pos:end="263:9">{<block_content pos:start="261:13" pos:end="261:40">

            <expr_stmt pos:start="261:13" pos:end="261:40"><expr pos:start="261:13" pos:end="261:39"><name pos:start="261:13" pos:end="261:23"><name pos:start="261:13" pos:end="261:14">vd</name><operator pos:start="261:15" pos:end="261:16">-&gt;</operator><name pos:start="261:17" pos:end="261:23">ws_auth</name></name> <operator pos:start="261:25" pos:end="261:25">=</operator> <name pos:start="261:27" pos:end="261:39">VNC_AUTH_NONE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="263:11" pos:end="267:9">else <block pos:start="263:16" pos:end="267:9">{<block_content pos:start="265:13" pos:end="265:43">

            <expr_stmt pos:start="265:13" pos:end="265:43"><expr pos:start="265:13" pos:end="265:42"><name pos:start="265:13" pos:end="265:23"><name pos:start="265:13" pos:end="265:14">vd</name><operator pos:start="265:15" pos:end="265:16">-&gt;</operator><name pos:start="265:17" pos:end="265:23">ws_auth</name></name> <operator pos:start="265:25" pos:end="265:25">=</operator> <name pos:start="265:27" pos:end="265:42">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="271:5" pos:end="271:13">return <expr pos:start="271:12" pos:end="271:12"><literal type="number" pos:start="271:12" pos:end="271:12">0</literal></expr>;</return>

</block_content>}</block>
</unit>
