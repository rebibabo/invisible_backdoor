<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15424.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">get_physical_address_code</name><parameter_list pos:start="1:37" pos:end="5:71">(<parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:45">CPUState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">env</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:65"><decl pos:start="3:38" pos:end="3:65"><type pos:start="3:38" pos:end="3:65"><name pos:start="3:38" pos:end="3:55">target_phys_addr_t</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:65">physical</name></decl></parameter>, <parameter pos:start="3:68" pos:end="3:76"><decl pos:start="3:68" pos:end="3:76"><type pos:start="3:68" pos:end="3:76"><name pos:start="3:68" pos:end="3:70">int</name> <modifier pos:start="3:72" pos:end="3:72">*</modifier></type><name pos:start="3:73" pos:end="3:76">prot</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:57"><decl pos:start="5:38" pos:end="5:57"><type pos:start="5:38" pos:end="5:57"><name pos:start="5:38" pos:end="5:49">target_ulong</name></type> <name pos:start="5:51" pos:end="5:57">address</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:70"><decl pos:start="5:60" pos:end="5:70"><type pos:start="5:60" pos:end="5:70"><name pos:start="5:60" pos:end="5:62">int</name></type> <name pos:start="5:64" pos:end="5:70">is_user</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="117:1">{<block_content pos:start="9:5" pos:end="115:13">

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:21">mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:18">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:33">(<expr pos:start="15:9" pos:end="15:32"><operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:17"><name pos:start="15:10" pos:end="15:12">env</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:17">lsu</name></name> <operator pos:start="15:19" pos:end="15:19">&amp;</operator> <name pos:start="15:21" pos:end="15:26">IMMU_E</name><operator pos:start="15:27" pos:end="15:27">)</operator> <operator pos:start="15:29" pos:end="15:30">==</operator> <literal type="number" pos:start="15:32" pos:end="15:32">0</literal></expr>)</condition> <block pos:start="15:35" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:17"> <comment type="block" pos:start="15:37" pos:end="15:55">/* IMMU disabled */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:28"><expr pos:start="17:9" pos:end="17:27"><operator pos:start="17:9" pos:end="17:9">*</operator><name pos:start="17:10" pos:end="17:17">physical</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:27">address</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:26"><expr pos:start="19:9" pos:end="19:25"><operator pos:start="19:9" pos:end="19:9">*</operator><name pos:start="19:10" pos:end="19:13">prot</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:25">PAGE_EXEC</name></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="27:5" pos:end="104:0">for <control pos:start="27:9" pos:end="27:28">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:23"><expr pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <literal type="number" pos:start="27:21" pos:end="27:22">64</literal></expr>;</condition> <incr pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:25">i</name><operator pos:start="27:26" pos:end="27:27">++</operator></expr></incr>)</control> <block pos:start="27:30" pos:end="104:0">{<block_content pos:start="29:9" pos:end="99:9">

        <switch pos:start="29:9" pos:end="57:9">switch <condition pos:start="29:16" pos:end="29:45">(<expr pos:start="29:17" pos:end="29:44"><operator pos:start="29:17" pos:end="29:17">(</operator><name pos:start="29:18" pos:end="29:33"><name pos:start="29:18" pos:end="29:20">env</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:30">itlb_tte</name><index pos:start="29:31" pos:end="29:33">[<expr pos:start="29:32" pos:end="29:32"><name pos:start="29:32" pos:end="29:32">i</name></expr>]</index></name> <operator pos:start="29:35" pos:end="29:36">&gt;&gt;</operator> <literal type="number" pos:start="29:38" pos:end="29:39">61</literal><operator pos:start="29:40" pos:end="29:40">)</operator> <operator pos:start="29:42" pos:end="29:42">&amp;</operator> <literal type="number" pos:start="29:44" pos:end="29:44">3</literal></expr>)</condition> <block pos:start="29:47" pos:end="57:9">{<block_content pos:start="31:9" pos:end="55:22">

        <default pos:start="31:9" pos:end="31:16">default:</default>

        <case pos:start="33:9" pos:end="33:17">case <expr pos:start="33:14" pos:end="33:16"><literal type="number" pos:start="33:14" pos:end="33:16">0x0</literal></expr>:</case> <comment type="line" pos:start="33:19" pos:end="33:23">// 8k</comment>

            <expr_stmt pos:start="35:13" pos:end="35:41"><expr pos:start="35:13" pos:end="35:40"><name pos:start="35:13" pos:end="35:16">mask</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <literal type="number" pos:start="35:20" pos:end="35:40">0xffffffffffffe000ULL</literal></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:17">case <expr pos:start="39:14" pos:end="39:16"><literal type="number" pos:start="39:14" pos:end="39:16">0x1</literal></expr>:</case> <comment type="line" pos:start="39:19" pos:end="39:24">// 64k</comment>

            <expr_stmt pos:start="41:13" pos:end="41:41"><expr pos:start="41:13" pos:end="41:40"><name pos:start="41:13" pos:end="41:16">mask</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <literal type="number" pos:start="41:20" pos:end="41:40">0xffffffffffff0000ULL</literal></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <case pos:start="45:9" pos:end="45:17">case <expr pos:start="45:14" pos:end="45:16"><literal type="number" pos:start="45:14" pos:end="45:16">0x2</literal></expr>:</case> <comment type="line" pos:start="45:19" pos:end="45:25">// 512k</comment>

            <expr_stmt pos:start="47:13" pos:end="47:41"><expr pos:start="47:13" pos:end="47:40"><name pos:start="47:13" pos:end="47:16">mask</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <literal type="number" pos:start="47:20" pos:end="47:40">0xfffffffffff80000ULL</literal></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        <case pos:start="51:9" pos:end="51:17">case <expr pos:start="51:14" pos:end="51:16"><literal type="number" pos:start="51:14" pos:end="51:16">0x3</literal></expr>:</case> <comment type="line" pos:start="51:19" pos:end="51:23">// 4M</comment>

            <expr_stmt pos:start="53:13" pos:end="53:41"><expr pos:start="53:13" pos:end="53:40"><name pos:start="53:13" pos:end="53:16">mask</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <literal type="number" pos:start="53:20" pos:end="53:40">0xffffffffffc00000ULL</literal></expr>;</expr_stmt>

                <break pos:start="55:17" pos:end="55:22">break;</break>

        </block_content>}</block></switch>

        <comment type="line" pos:start="59:9" pos:end="59:41">// ctx match, vaddr match, valid?</comment>

        <if_stmt pos:start="61:9" pos:end="99:9"><if pos:start="61:9" pos:end="99:9">if <condition pos:start="61:12" pos:end="65:55">(<expr pos:start="61:13" pos:end="65:54"><name pos:start="61:13" pos:end="61:28"><name pos:start="61:13" pos:end="61:15">env</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:25">dmmuregs</name><index pos:start="61:26" pos:end="61:28">[<expr pos:start="61:27" pos:end="61:27"><literal type="number" pos:start="61:27" pos:end="61:27">1</literal></expr>]</index></name> <operator pos:start="61:30" pos:end="61:31">==</operator> <operator pos:start="61:33" pos:end="61:33">(</operator><name pos:start="61:34" pos:end="61:49"><name pos:start="61:34" pos:end="61:36">env</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:46">itlb_tag</name><index pos:start="61:47" pos:end="61:49">[<expr pos:start="61:48" pos:end="61:48"><name pos:start="61:48" pos:end="61:48">i</name></expr>]</index></name> <operator pos:start="61:51" pos:end="61:51">&amp;</operator> <literal type="number" pos:start="61:53" pos:end="61:58">0x1fff</literal><operator pos:start="61:59" pos:end="61:59">)</operator> <operator pos:start="61:61" pos:end="61:62">&amp;&amp;</operator>

            <operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:20">address</name> <operator pos:start="63:22" pos:end="63:22">&amp;</operator> <name pos:start="63:24" pos:end="63:27">mask</name><operator pos:start="63:28" pos:end="63:28">)</operator> <operator pos:start="63:30" pos:end="63:31">==</operator> <operator pos:start="63:33" pos:end="63:33">(</operator><name pos:start="63:34" pos:end="63:49"><name pos:start="63:34" pos:end="63:36">env</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:46">itlb_tag</name><index pos:start="63:47" pos:end="63:49">[<expr pos:start="63:48" pos:end="63:48"><name pos:start="63:48" pos:end="63:48">i</name></expr>]</index></name> <operator pos:start="63:51" pos:end="63:51">&amp;</operator> <name pos:start="63:53" pos:end="63:56">mask</name><operator pos:start="63:57" pos:end="63:57">)</operator> <operator pos:start="63:59" pos:end="63:60">&amp;&amp;</operator>

            <operator pos:start="65:13" pos:end="65:13">(</operator><name pos:start="65:14" pos:end="65:29"><name pos:start="65:14" pos:end="65:16">env</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:26">itlb_tte</name><index pos:start="65:27" pos:end="65:29">[<expr pos:start="65:28" pos:end="65:28"><name pos:start="65:28" pos:end="65:28">i</name></expr>]</index></name> <operator pos:start="65:31" pos:end="65:31">&amp;</operator> <literal type="number" pos:start="65:33" pos:end="65:53">0x8000000000000000ULL</literal><operator pos:start="65:54" pos:end="65:54">)</operator></expr>)</condition> <block pos:start="65:57" pos:end="99:9">{<block_content pos:start="69:13" pos:end="97:21">

            <comment type="line" pos:start="67:13" pos:end="67:25">// access ok?</comment>

            <if_stmt pos:start="69:13" pos:end="89:13"><if pos:start="69:13" pos:end="89:13">if <condition pos:start="69:16" pos:end="69:52">(<expr pos:start="69:17" pos:end="69:51"><operator pos:start="69:17" pos:end="69:17">(</operator><name pos:start="69:18" pos:end="69:33"><name pos:start="69:18" pos:end="69:20">env</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:30">itlb_tte</name><index pos:start="69:31" pos:end="69:33">[<expr pos:start="69:32" pos:end="69:32"><name pos:start="69:32" pos:end="69:32">i</name></expr>]</index></name> <operator pos:start="69:35" pos:end="69:35">&amp;</operator> <literal type="number" pos:start="69:37" pos:end="69:39">0x4</literal><operator pos:start="69:40" pos:end="69:40">)</operator> <operator pos:start="69:42" pos:end="69:43">&amp;&amp;</operator> <name pos:start="69:45" pos:end="69:51">is_user</name></expr>)</condition> <block pos:start="69:54" pos:end="89:13">{<block_content pos:start="71:17" pos:end="87:25">

                <if_stmt pos:start="71:17" pos:end="73:41"><if pos:start="71:17" pos:end="73:41">if <condition pos:start="71:20" pos:end="71:37">(<expr pos:start="71:21" pos:end="71:36"><name pos:start="71:21" pos:end="71:36"><name pos:start="71:21" pos:end="71:23">env</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:33">immuregs</name><index pos:start="71:34" pos:end="71:36">[<expr pos:start="71:35" pos:end="71:35"><literal type="number" pos:start="71:35" pos:end="71:35">3</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="73:21" pos:end="73:41"><block_content pos:start="73:21" pos:end="73:41"> <comment type="block" pos:start="71:39" pos:end="71:65">/* Fault status register */</comment>

                    <expr_stmt pos:start="73:21" pos:end="73:41"><expr pos:start="73:21" pos:end="73:40"><name pos:start="73:21" pos:end="73:36"><name pos:start="73:21" pos:end="73:23">env</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:33">immuregs</name><index pos:start="73:34" pos:end="73:36">[<expr pos:start="73:35" pos:end="73:35"><literal type="number" pos:start="73:35" pos:end="73:35">3</literal></expr>]</index></name> <operator pos:start="73:38" pos:end="73:38">=</operator> <literal type="number" pos:start="73:40" pos:end="73:40">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="73:43" pos:end="75:62">/* overflow (not read before

                                             another fault) */</comment>

                <expr_stmt pos:start="77:17" pos:end="77:55"><expr pos:start="77:17" pos:end="77:54"><name pos:start="77:17" pos:end="77:32"><name pos:start="77:17" pos:end="77:19">env</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:29">immuregs</name><index pos:start="77:30" pos:end="77:32">[<expr pos:start="77:31" pos:end="77:31"><literal type="number" pos:start="77:31" pos:end="77:31">3</literal></expr>]</index></name> <operator pos:start="77:34" pos:end="77:35">|=</operator> <operator pos:start="77:37" pos:end="77:37">(</operator><name pos:start="77:38" pos:end="77:44">is_user</name> <operator pos:start="77:46" pos:end="77:47">&lt;&lt;</operator> <literal type="number" pos:start="77:49" pos:end="77:49">3</literal><operator pos:start="77:50" pos:end="77:50">)</operator> <operator pos:start="77:52" pos:end="77:52">|</operator> <literal type="number" pos:start="77:54" pos:end="77:54">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="82:0"><expr pos:start="79:17" pos:end="79:48"><name pos:start="79:17" pos:end="79:36"><name pos:start="79:17" pos:end="79:19">env</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:36">exception_index</name></name> <operator pos:start="79:38" pos:end="79:38">=</operator> <name pos:start="79:40" pos:end="79:48">TT_TFAULT</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="81:1" pos:end="81:16">#<cpp:directive pos:start="81:2" pos:end="81:6">ifdef</cpp:directive> <name pos:start="81:8" pos:end="81:16">DEBUG_MMU</name></cpp:ifdef>

                <expr_stmt pos:start="83:17" pos:end="86:0"><expr pos:start="83:17" pos:end="83:60"><call pos:start="83:17" pos:end="83:60"><name pos:start="83:17" pos:end="83:22">printf</name><argument_list pos:start="83:23" pos:end="83:60">(<argument pos:start="83:24" pos:end="83:50"><expr pos:start="83:24" pos:end="83:50"><literal type="string" pos:start="83:24" pos:end="83:38">"TFAULT at 0x%"</literal> <name pos:start="83:40" pos:end="83:45">PRIx64</name> <literal type="string" pos:start="83:47" pos:end="83:50">"\n"</literal></expr></argument>, <argument pos:start="83:53" pos:end="83:59"><expr pos:start="83:53" pos:end="83:59"><name pos:start="83:53" pos:end="83:59">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="85:1" pos:end="85:6">#<cpp:directive pos:start="85:2" pos:end="85:6">endif</cpp:directive></cpp:endif>

                <return pos:start="87:17" pos:end="87:25">return <expr pos:start="87:24" pos:end="87:24"><literal type="number" pos:start="87:24" pos:end="87:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="91:13" pos:end="93:41"><expr pos:start="91:13" pos:end="93:40"><operator pos:start="91:13" pos:end="91:13">*</operator><name pos:start="91:14" pos:end="91:21">physical</name> <operator pos:start="91:23" pos:end="91:23">=</operator> <operator pos:start="91:25" pos:end="91:25">(</operator><operator pos:start="91:26" pos:end="91:26">(</operator><name pos:start="91:27" pos:end="91:42"><name pos:start="91:27" pos:end="91:29">env</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:39">itlb_tte</name><index pos:start="91:40" pos:end="91:42">[<expr pos:start="91:41" pos:end="91:41"><name pos:start="91:41" pos:end="91:41">i</name></expr>]</index></name> <operator pos:start="91:44" pos:end="91:44">&amp;</operator> <name pos:start="91:46" pos:end="91:49">mask</name><operator pos:start="91:50" pos:end="91:50">)</operator> <operator pos:start="91:52" pos:end="91:52">|</operator> <operator pos:start="91:54" pos:end="91:54">(</operator><name pos:start="91:55" pos:end="91:61">address</name> <operator pos:start="91:63" pos:end="91:63">&amp;</operator> <operator pos:start="91:65" pos:end="91:65">~</operator><name pos:start="91:66" pos:end="91:69">mask</name><operator pos:start="91:70" pos:end="91:70">)</operator><operator pos:start="91:71" pos:end="91:71">)</operator> <operator pos:start="91:73" pos:end="91:73">&amp;</operator>

                        <literal type="number" pos:start="93:25" pos:end="93:40">0x1ffffffe000ULL</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:30"><expr pos:start="95:13" pos:end="95:29"><operator pos:start="95:13" pos:end="95:13">*</operator><name pos:start="95:14" pos:end="95:17">prot</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:29">PAGE_EXEC</name></expr>;</expr_stmt>

            <return pos:start="97:13" pos:end="97:21">return <expr pos:start="97:20" pos:end="97:20"><literal type="number" pos:start="97:20" pos:end="97:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<cpp:ifdef pos:start="103:1" pos:end="103:16">#<cpp:directive pos:start="103:2" pos:end="103:6">ifdef</cpp:directive> <name pos:start="103:8" pos:end="103:16">DEBUG_MMU</name></cpp:ifdef>

    <expr_stmt pos:start="105:5" pos:end="108:0"><expr pos:start="105:5" pos:end="105:47"><call pos:start="105:5" pos:end="105:47"><name pos:start="105:5" pos:end="105:10">printf</name><argument_list pos:start="105:11" pos:end="105:47">(<argument pos:start="105:12" pos:end="105:37"><expr pos:start="105:12" pos:end="105:37"><literal type="string" pos:start="105:12" pos:end="105:25">"TMISS at 0x%"</literal> <name pos:start="105:27" pos:end="105:32">PRIx64</name> <literal type="string" pos:start="105:34" pos:end="105:37">"\n"</literal></expr></argument>, <argument pos:start="105:40" pos:end="105:46"><expr pos:start="105:40" pos:end="105:46"><name pos:start="105:40" pos:end="105:46">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="107:1" pos:end="107:6">#<cpp:directive pos:start="107:2" pos:end="107:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="109:5" pos:end="109:63">/* Context is stored in DMMU (dmmuregs[1]) also for IMMU */</comment>

    <expr_stmt pos:start="111:5" pos:end="111:76"><expr pos:start="111:5" pos:end="111:75"><name pos:start="111:5" pos:end="111:20"><name pos:start="111:5" pos:end="111:7">env</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:17">immuregs</name><index pos:start="111:18" pos:end="111:20">[<expr pos:start="111:19" pos:end="111:19"><literal type="number" pos:start="111:19" pos:end="111:19">6</literal></expr>]</index></name> <operator pos:start="111:22" pos:end="111:22">=</operator> <operator pos:start="111:24" pos:end="111:24">(</operator><name pos:start="111:25" pos:end="111:31">address</name> <operator pos:start="111:33" pos:end="111:33">&amp;</operator> <operator pos:start="111:35" pos:end="111:35">~</operator><literal type="number" pos:start="111:36" pos:end="111:44">0x1fffULL</literal><operator pos:start="111:45" pos:end="111:45">)</operator> <operator pos:start="111:47" pos:end="111:47">|</operator> <operator pos:start="111:49" pos:end="111:49">(</operator><name pos:start="111:50" pos:end="111:65"><name pos:start="111:50" pos:end="111:52">env</name><operator pos:start="111:53" pos:end="111:54">-&gt;</operator><name pos:start="111:55" pos:end="111:62">dmmuregs</name><index pos:start="111:63" pos:end="111:65">[<expr pos:start="111:64" pos:end="111:64"><literal type="number" pos:start="111:64" pos:end="111:64">1</literal></expr>]</index></name> <operator pos:start="111:67" pos:end="111:67">&amp;</operator> <literal type="number" pos:start="111:69" pos:end="111:74">0x1fff</literal><operator pos:start="111:75" pos:end="111:75">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:36"><expr pos:start="113:5" pos:end="113:35"><name pos:start="113:5" pos:end="113:24"><name pos:start="113:5" pos:end="113:7">env</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:24">exception_index</name></name> <operator pos:start="113:26" pos:end="113:26">=</operator> <name pos:start="113:28" pos:end="113:35">TT_TMISS</name></expr>;</expr_stmt>

    <return pos:start="115:5" pos:end="115:13">return <expr pos:start="115:12" pos:end="115:12"><literal type="number" pos:start="115:12" pos:end="115:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
