<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26244.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">qemu_calculate_timeout</name><parameter_list pos:start="1:34" pos:end="1:39">(<parameter pos:start="1:35" pos:end="1:38"><decl pos:start="1:35" pos:end="1:38"><type pos:start="1:35" pos:end="1:38"><name pos:start="1:35" pos:end="1:38">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="7:5" pos:end="80:0">

<cpp:ifndef pos:start="5:1" pos:end="5:23">#<cpp:directive pos:start="5:2" pos:end="5:7">ifndef</cpp:directive> <name pos:start="5:9" pos:end="5:23">CONFIG_IOTHREAD</name></cpp:ifndef>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">timeout</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="69:5"><if pos:start="11:5" pos:end="13:23">if <condition pos:start="11:8" pos:end="11:20">(<expr pos:start="11:9" pos:end="11:19"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:19">vm_running</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:23"><block_content pos:start="13:9" pos:end="13:23">

        <expr_stmt pos:start="13:9" pos:end="13:23"><expr pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:15">timeout</name> <operator pos:start="13:17" pos:end="13:17">=</operator> <literal type="number" pos:start="13:19" pos:end="13:22">5000</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="15:5" pos:end="17:20">else if <condition pos:start="15:13" pos:end="15:28">(<expr pos:start="15:14" pos:end="15:27"><call pos:start="15:14" pos:end="15:27"><name pos:start="15:14" pos:end="15:25">tcg_has_work</name><argument_list pos:start="15:26" pos:end="15:27">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:20"><block_content pos:start="17:9" pos:end="17:20">

        <expr_stmt pos:start="17:9" pos:end="17:20"><expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:15">timeout</name> <operator pos:start="17:17" pos:end="17:17">=</operator> <literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="19:5" pos:end="69:5">else <block pos:start="19:10" pos:end="69:5">{<block_content pos:start="23:9" pos:end="67:9">

     <comment type="block" pos:start="21:6" pos:end="21:48">/* XXX: use timeout computed from timers */</comment>

        <decl_stmt pos:start="23:9" pos:end="23:20"><decl pos:start="23:9" pos:end="23:19"><type pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:15">int64_t</name></type> <name pos:start="23:17" pos:end="23:19">add</name></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:22"><decl pos:start="25:9" pos:end="25:21"><type pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:15">int64_t</name></type> <name pos:start="25:17" pos:end="25:21">delta</name></decl>;</decl_stmt>

        <comment type="block" pos:start="27:9" pos:end="27:54">/* Advance virtual time to the next event.  */</comment>

	<expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:13">delta</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:35"><name pos:start="29:17" pos:end="29:33">qemu_icount_delta</name><argument_list pos:start="29:34" pos:end="29:35">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="67:9"><if pos:start="31:9" pos:end="39:9">if <condition pos:start="31:12" pos:end="31:22">(<expr pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:17">delta</name> <operator pos:start="31:19" pos:end="31:19">&gt;</operator> <literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr>)</condition> <block pos:start="31:24" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:49">

            <comment type="block" pos:start="33:13" pos:end="35:31">/* If virtual time is ahead of real time then just

               wait for IO.  */</comment>

            <expr_stmt pos:start="37:13" pos:end="37:49"><expr pos:start="37:13" pos:end="37:48"><name pos:start="37:13" pos:end="37:19">timeout</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <operator pos:start="37:23" pos:end="37:23">(</operator><name pos:start="37:24" pos:end="37:28">delta</name> <operator pos:start="37:30" pos:end="37:30">+</operator> <literal type="number" pos:start="37:32" pos:end="37:37">999999</literal><operator pos:start="37:38" pos:end="37:38">)</operator> <operator pos:start="37:40" pos:end="37:40">/</operator> <literal type="number" pos:start="37:42" pos:end="37:48">1000000</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="67:9">else <block pos:start="39:16" pos:end="67:9">{<block_content pos:start="45:13" pos:end="65:28">

            <comment type="block" pos:start="41:13" pos:end="43:31">/* Wait for either IO to occur or the next

               timer event.  */</comment>

            <expr_stmt pos:start="45:13" pos:end="45:39"><expr pos:start="45:13" pos:end="45:38"><name pos:start="45:13" pos:end="45:15">add</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <call pos:start="45:19" pos:end="45:38"><name pos:start="45:19" pos:end="45:36">qemu_next_deadline</name><argument_list pos:start="45:37" pos:end="45:38">()</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="47:13" pos:end="51:62">/* We advance the timer before checking for IO.

               Limit the amount we advance so that early IO

               activity won't get the guest too far ahead.  */</comment>

            <if_stmt pos:start="53:13" pos:end="55:31"><if pos:start="53:13" pos:end="55:31">if <condition pos:start="53:16" pos:end="53:31">(<expr pos:start="53:17" pos:end="53:30"><name pos:start="53:17" pos:end="53:19">add</name> <operator pos:start="53:21" pos:end="53:21">&gt;</operator> <literal type="number" pos:start="53:23" pos:end="53:30">10000000</literal></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:31"><block_content pos:start="55:17" pos:end="55:31">

                <expr_stmt pos:start="55:17" pos:end="55:31"><expr pos:start="55:17" pos:end="55:30"><name pos:start="55:17" pos:end="55:19">add</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <literal type="number" pos:start="55:23" pos:end="55:30">10000000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:25"><expr pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:17">delta</name> <operator pos:start="57:19" pos:end="57:20">+=</operator> <name pos:start="57:22" pos:end="57:24">add</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:51"><expr pos:start="59:13" pos:end="59:50"><name pos:start="59:13" pos:end="59:23">qemu_icount</name> <operator pos:start="59:25" pos:end="59:26">+=</operator> <call pos:start="59:28" pos:end="59:50"><name pos:start="59:28" pos:end="59:44">qemu_icount_round</name> <argument_list pos:start="59:46" pos:end="59:50">(<argument pos:start="59:47" pos:end="59:49"><expr pos:start="59:47" pos:end="59:49"><name pos:start="59:47" pos:end="59:49">add</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:38"><expr pos:start="61:13" pos:end="61:37"><name pos:start="61:13" pos:end="61:19">timeout</name> <operator pos:start="61:21" pos:end="61:21">=</operator> <name pos:start="61:23" pos:end="61:27">delta</name> <operator pos:start="61:29" pos:end="61:29">/</operator> <literal type="number" pos:start="61:31" pos:end="61:37">1000000</literal></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="65:28"><if pos:start="63:13" pos:end="65:28">if <condition pos:start="63:16" pos:end="63:28">(<expr pos:start="63:17" pos:end="63:27"><name pos:start="63:17" pos:end="63:23">timeout</name> <operator pos:start="63:25" pos:end="63:25">&lt;</operator> <literal type="number" pos:start="63:27" pos:end="63:27">0</literal></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:28"><block_content pos:start="65:17" pos:end="65:28">

                <expr_stmt pos:start="65:17" pos:end="65:28"><expr pos:start="65:17" pos:end="65:27"><name pos:start="65:17" pos:end="65:23">timeout</name> <operator pos:start="65:25" pos:end="65:25">=</operator> <literal type="number" pos:start="65:27" pos:end="65:27">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="73:5" pos:end="76:0">return <expr pos:start="73:12" pos:end="73:18"><name pos:start="73:12" pos:end="73:18">timeout</name></expr>;</return>

<cpp:else pos:start="75:1" pos:end="75:5">#<cpp:directive pos:start="75:2" pos:end="75:5">else</cpp:directive></cpp:else> <comment type="block" pos:start="75:7" pos:end="75:27">/* CONFIG_IOTHREAD */</comment>

    <return pos:start="77:5" pos:end="80:0">return <expr pos:start="77:12" pos:end="77:15"><literal type="number" pos:start="77:12" pos:end="77:15">1000</literal></expr>;</return>

<cpp:endif pos:start="79:1" pos:end="79:6">#<cpp:directive pos:start="79:2" pos:end="79:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
