<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25061.c" pos:tabs="8"><function pos:start="1:1" pos:end="275:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">pcm_encode_frame</name><parameter_list pos:start="1:28" pos:end="3:70">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:66"><decl pos:start="1:52" pos:end="1:66"><type pos:start="1:52" pos:end="1:66"><name pos:start="1:52" pos:end="1:59">AVPacket</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">avpkt</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:48"><decl pos:start="3:29" pos:end="3:48"><type pos:start="3:29" pos:end="3:48"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:41">AVFrame</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:48">frame</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:69"><decl pos:start="3:51" pos:end="3:69"><type pos:start="3:51" pos:end="3:69"><name pos:start="3:51" pos:end="3:53">int</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:69">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="275:1">{<block_content pos:start="7:5" pos:end="273:13">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">c</name></decl>, <decl pos:start="7:15" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:25">sample_size</name></decl>, <decl pos:start="7:28" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:28" pos:end="7:28">v</name></decl>, <decl pos:start="7:31" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:31" pos:end="7:33">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:17"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:15">short</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:24">samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">char</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:34">samples_uint8_t</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:34"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">int16_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:34">samples_int16_t</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">int32_t</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:34">samples_int32_t</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:35"><decl pos:start="19:5" pos:end="19:34"><type pos:start="19:5" pos:end="19:19"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:17">int64_t</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:34">samples_int64_t</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:37"><decl pos:start="21:5" pos:end="21:36"><type pos:start="21:5" pos:end="21:20"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:18">uint16_t</name> <modifier pos:start="21:20" pos:end="21:20">*</modifier></type><name pos:start="21:21" pos:end="21:36">samples_uint16_t</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:37"><decl pos:start="23:5" pos:end="23:36"><type pos:start="23:5" pos:end="23:20"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:18">uint32_t</name> <modifier pos:start="23:20" pos:end="23:20">*</modifier></type><name pos:start="23:21" pos:end="23:36">samples_uint32_t</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:63"><expr pos:start="27:5" pos:end="27:62"><name pos:start="27:5" pos:end="27:15">sample_size</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:58"><name pos:start="27:19" pos:end="27:40">av_get_bits_per_sample</name><argument_list pos:start="27:41" pos:end="27:58">(<argument pos:start="27:42" pos:end="27:57"><expr pos:start="27:42" pos:end="27:57"><name pos:start="27:42" pos:end="27:57"><name pos:start="27:42" pos:end="27:46">avctx</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:53">codec</name><operator pos:start="27:54" pos:end="27:55">-&gt;</operator><name pos:start="27:56" pos:end="27:57">id</name></name></expr></argument>)</argument_list></call> <operator pos:start="27:60" pos:end="27:60">/</operator> <literal type="number" pos:start="27:62" pos:end="27:62">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:54"><expr pos:start="29:5" pos:end="29:53"><name pos:start="29:5" pos:end="29:5">n</name>           <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:35"><name pos:start="29:19" pos:end="29:23">frame</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:35">nb_samples</name></name> <operator pos:start="29:37" pos:end="29:37">*</operator> <name pos:start="29:39" pos:end="29:53"><name pos:start="29:39" pos:end="29:43">avctx</name><operator pos:start="29:44" pos:end="29:45">-&gt;</operator><name pos:start="29:46" pos:end="29:53">channels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:48"><expr pos:start="31:5" pos:end="31:47"><name pos:start="31:5" pos:end="31:11">samples</name>     <operator pos:start="31:17" pos:end="31:17">=</operator> <operator pos:start="31:19" pos:end="31:19">(</operator><specifier pos:start="31:20" pos:end="31:24">const</specifier> <name pos:start="31:26" pos:end="31:30">short</name> <operator pos:start="31:32" pos:end="31:32">*</operator><operator pos:start="31:33" pos:end="31:33">)</operator><name pos:start="31:34" pos:end="31:47"><name pos:start="31:34" pos:end="31:38">frame</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:44">data</name><index pos:start="31:45" pos:end="31:47">[<expr pos:start="31:46" pos:end="31:46"><literal type="number" pos:start="31:46" pos:end="31:46">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="37:19"><if pos:start="35:5" pos:end="37:19">if <condition pos:start="35:8" pos:end="35:64">(<expr pos:start="35:9" pos:end="35:63"><operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:12">ret</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:62"><name pos:start="35:16" pos:end="35:31">ff_alloc_packet2</name><argument_list pos:start="35:32" pos:end="35:62">(<argument pos:start="35:33" pos:end="35:37"><expr pos:start="35:33" pos:end="35:37"><name pos:start="35:33" pos:end="35:37">avctx</name></expr></argument>, <argument pos:start="35:40" pos:end="35:44"><expr pos:start="35:40" pos:end="35:44"><name pos:start="35:40" pos:end="35:44">avpkt</name></expr></argument>, <argument pos:start="35:47" pos:end="35:61"><expr pos:start="35:47" pos:end="35:61"><name pos:start="35:47" pos:end="35:47">n</name> <operator pos:start="35:49" pos:end="35:49">*</operator> <name pos:start="35:51" pos:end="35:61">sample_size</name></expr></argument>)</argument_list></call><operator pos:start="35:63" pos:end="35:63">)</operator></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:19"><block_content pos:start="37:9" pos:end="37:19">

        <return pos:start="37:9" pos:end="37:19">return <expr pos:start="37:16" pos:end="37:18"><name pos:start="37:16" pos:end="37:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:22"><expr pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:7">dst</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <name pos:start="39:11" pos:end="39:21"><name pos:start="39:11" pos:end="39:15">avpkt</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:21">data</name></name></expr>;</expr_stmt>



    <switch pos:start="43:5" pos:end="267:5">switch <condition pos:start="43:12" pos:end="43:29">(<expr pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:17">avctx</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:24">codec</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:28">id</name></name></expr>)</condition> <block pos:start="43:31" pos:end="267:5">{<block_content pos:start="45:5" pos:end="265:18">

    <case pos:start="45:5" pos:end="45:31">case <expr pos:start="45:10" pos:end="45:30"><name pos:start="45:10" pos:end="45:30">AV_CODEC_ID_PCM_U32LE</name></expr>:</case>

        <macro pos:start="47:9" pos:end="47:62"><name pos:start="47:9" pos:end="47:14">ENCODE</name><argument_list pos:start="47:15" pos:end="47:62">(<argument pos:start="47:16" pos:end="47:23">uint32_t</argument>, <argument pos:start="47:26" pos:end="47:29">le32</argument>, <argument pos:start="47:32" pos:end="47:38">samples</argument>, <argument pos:start="47:41" pos:end="47:43">dst</argument>, <argument pos:start="47:46" pos:end="47:46">n</argument>, <argument pos:start="47:49" pos:end="47:49"><literal type="number" pos:start="47:49" pos:end="47:49">0</literal></argument>, <argument pos:start="47:52" pos:end="47:61"><literal type="number" pos:start="47:52" pos:end="47:61">0x80000000</literal></argument>)</argument_list></macro>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:31">case <expr pos:start="51:10" pos:end="51:30"><name pos:start="51:10" pos:end="51:30">AV_CODEC_ID_PCM_U32BE</name></expr>:</case>

        <macro pos:start="53:9" pos:end="53:62"><name pos:start="53:9" pos:end="53:14">ENCODE</name><argument_list pos:start="53:15" pos:end="53:62">(<argument pos:start="53:16" pos:end="53:23">uint32_t</argument>, <argument pos:start="53:26" pos:end="53:29">be32</argument>, <argument pos:start="53:32" pos:end="53:38">samples</argument>, <argument pos:start="53:41" pos:end="53:43">dst</argument>, <argument pos:start="53:46" pos:end="53:46">n</argument>, <argument pos:start="53:49" pos:end="53:49"><literal type="number" pos:start="53:49" pos:end="53:49">0</literal></argument>, <argument pos:start="53:52" pos:end="53:61"><literal type="number" pos:start="53:52" pos:end="53:61">0x80000000</literal></argument>)</argument_list></macro>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:31">case <expr pos:start="57:10" pos:end="57:30"><name pos:start="57:10" pos:end="57:30">AV_CODEC_ID_PCM_S24LE</name></expr>:</case>

        <macro pos:start="59:9" pos:end="59:52"><name pos:start="59:9" pos:end="59:14">ENCODE</name><argument_list pos:start="59:15" pos:end="59:52">(<argument pos:start="59:16" pos:end="59:22">int32_t</argument>, <argument pos:start="59:25" pos:end="59:28">le24</argument>, <argument pos:start="59:31" pos:end="59:37">samples</argument>, <argument pos:start="59:40" pos:end="59:42">dst</argument>, <argument pos:start="59:45" pos:end="59:45">n</argument>, <argument pos:start="59:48" pos:end="59:48"><literal type="number" pos:start="59:48" pos:end="59:48">8</literal></argument>, <argument pos:start="59:51" pos:end="59:51"><literal type="number" pos:start="59:51" pos:end="59:51">0</literal></argument>)</argument_list></macro>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:38">case <expr pos:start="63:10" pos:end="63:37"><name pos:start="63:10" pos:end="63:37">AV_CODEC_ID_PCM_S24LE_PLANAR</name></expr>:</case>

        <macro pos:start="65:9" pos:end="65:50"><name pos:start="65:9" pos:end="65:21">ENCODE_PLANAR</name><argument_list pos:start="65:22" pos:end="65:50">(<argument pos:start="65:23" pos:end="65:29">int32_t</argument>, <argument pos:start="65:32" pos:end="65:35">le24</argument>, <argument pos:start="65:38" pos:end="65:40">dst</argument>, <argument pos:start="65:43" pos:end="65:43">n</argument>, <argument pos:start="65:46" pos:end="65:46"><literal type="number" pos:start="65:46" pos:end="65:46">8</literal></argument>, <argument pos:start="65:49" pos:end="65:49"><literal type="number" pos:start="65:49" pos:end="65:49">0</literal></argument>)</argument_list></macro>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <case pos:start="69:5" pos:end="69:31">case <expr pos:start="69:10" pos:end="69:30"><name pos:start="69:10" pos:end="69:30">AV_CODEC_ID_PCM_S24BE</name></expr>:</case>

        <macro pos:start="71:9" pos:end="71:52"><name pos:start="71:9" pos:end="71:14">ENCODE</name><argument_list pos:start="71:15" pos:end="71:52">(<argument pos:start="71:16" pos:end="71:22">int32_t</argument>, <argument pos:start="71:25" pos:end="71:28">be24</argument>, <argument pos:start="71:31" pos:end="71:37">samples</argument>, <argument pos:start="71:40" pos:end="71:42">dst</argument>, <argument pos:start="71:45" pos:end="71:45">n</argument>, <argument pos:start="71:48" pos:end="71:48"><literal type="number" pos:start="71:48" pos:end="71:48">8</literal></argument>, <argument pos:start="71:51" pos:end="71:51"><literal type="number" pos:start="71:51" pos:end="71:51">0</literal></argument>)</argument_list></macro>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:31">case <expr pos:start="75:10" pos:end="75:30"><name pos:start="75:10" pos:end="75:30">AV_CODEC_ID_PCM_U24LE</name></expr>:</case>

        <macro pos:start="77:9" pos:end="77:60"><name pos:start="77:9" pos:end="77:14">ENCODE</name><argument_list pos:start="77:15" pos:end="77:60">(<argument pos:start="77:16" pos:end="77:23">uint32_t</argument>, <argument pos:start="77:26" pos:end="77:29">le24</argument>, <argument pos:start="77:32" pos:end="77:38">samples</argument>, <argument pos:start="77:41" pos:end="77:43">dst</argument>, <argument pos:start="77:46" pos:end="77:46">n</argument>, <argument pos:start="77:49" pos:end="77:49"><literal type="number" pos:start="77:49" pos:end="77:49">8</literal></argument>, <argument pos:start="77:52" pos:end="77:59"><literal type="number" pos:start="77:52" pos:end="77:59">0x800000</literal></argument>)</argument_list></macro>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:31">case <expr pos:start="81:10" pos:end="81:30"><name pos:start="81:10" pos:end="81:30">AV_CODEC_ID_PCM_U24BE</name></expr>:</case>

        <macro pos:start="83:9" pos:end="83:60"><name pos:start="83:9" pos:end="83:14">ENCODE</name><argument_list pos:start="83:15" pos:end="83:60">(<argument pos:start="83:16" pos:end="83:23">uint32_t</argument>, <argument pos:start="83:26" pos:end="83:29">be24</argument>, <argument pos:start="83:32" pos:end="83:38">samples</argument>, <argument pos:start="83:41" pos:end="83:43">dst</argument>, <argument pos:start="83:46" pos:end="83:46">n</argument>, <argument pos:start="83:49" pos:end="83:49"><literal type="number" pos:start="83:49" pos:end="83:49">8</literal></argument>, <argument pos:start="83:52" pos:end="83:59"><literal type="number" pos:start="83:52" pos:end="83:59">0x800000</literal></argument>)</argument_list></macro>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:33">case <expr pos:start="87:10" pos:end="87:32"><name pos:start="87:10" pos:end="87:32">AV_CODEC_ID_PCM_S24DAUD</name></expr>:</case>

        <for pos:start="89:9" pos:end="101:9">for <control pos:start="89:13" pos:end="89:26">(<init pos:start="89:14" pos:end="89:14">;</init> <condition pos:start="89:16" pos:end="89:21"><expr pos:start="89:16" pos:end="89:20"><name pos:start="89:16" pos:end="89:16">n</name> <operator pos:start="89:18" pos:end="89:18">&gt;</operator> <literal type="number" pos:start="89:20" pos:end="89:20">0</literal></expr>;</condition> <incr pos:start="89:23" pos:end="89:25"><expr pos:start="89:23" pos:end="89:25"><name pos:start="89:23" pos:end="89:23">n</name><operator pos:start="89:24" pos:end="89:25">--</operator></expr></incr>)</control> <block pos:start="89:28" pos:end="101:9">{<block_content pos:start="91:13" pos:end="99:22">

            <decl_stmt pos:start="91:13" pos:end="93:62"><decl pos:start="91:13" pos:end="93:61"><type pos:start="91:13" pos:end="91:20"><name pos:start="91:13" pos:end="91:20">uint32_t</name></type> <name pos:start="91:22" pos:end="91:24">tmp</name> <init pos:start="91:26" pos:end="93:61">= <expr pos:start="91:28" pos:end="93:61"><name pos:start="91:28" pos:end="91:61"><name pos:start="91:28" pos:end="91:37">ff_reverse</name><index pos:start="91:38" pos:end="91:61">[<expr pos:start="91:39" pos:end="91:60"><operator pos:start="91:39" pos:end="91:39">(</operator><operator pos:start="91:40" pos:end="91:40">*</operator><name pos:start="91:41" pos:end="91:47">samples</name> <operator pos:start="91:49" pos:end="91:50">&gt;&gt;</operator> <literal type="number" pos:start="91:52" pos:end="91:52">8</literal><operator pos:start="91:53" pos:end="91:53">)</operator> <operator pos:start="91:55" pos:end="91:55">&amp;</operator> <literal type="number" pos:start="91:57" pos:end="91:60">0xff</literal></expr>]</index></name> <operator pos:start="91:63" pos:end="91:63">+</operator>

                           <operator pos:start="93:28" pos:end="93:28">(</operator><name pos:start="93:29" pos:end="93:55"><name pos:start="93:29" pos:end="93:38">ff_reverse</name><index pos:start="93:39" pos:end="93:55">[<expr pos:start="93:40" pos:end="93:54"><operator pos:start="93:40" pos:end="93:40">*</operator><name pos:start="93:41" pos:end="93:47">samples</name> <operator pos:start="93:49" pos:end="93:49">&amp;</operator> <literal type="number" pos:start="93:51" pos:end="93:54">0xff</literal></expr>]</index></name> <operator pos:start="93:57" pos:end="93:58">&lt;&lt;</operator> <literal type="number" pos:start="93:60" pos:end="93:60">8</literal><operator pos:start="93:61" pos:end="93:61">)</operator></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:22"><expr pos:start="95:13" pos:end="95:21"><name pos:start="95:13" pos:end="95:15">tmp</name> <operator pos:start="95:17" pos:end="95:19">&lt;&lt;=</operator> <literal type="number" pos:start="95:21" pos:end="95:21">4</literal></expr>;</expr_stmt> <comment type="line" pos:start="95:24" pos:end="95:50">// sync flags would go here</comment>

            <expr_stmt pos:start="97:13" pos:end="97:43"><expr pos:start="97:13" pos:end="97:42"><call pos:start="97:13" pos:end="97:42"><name pos:start="97:13" pos:end="97:31">bytestream_put_be24</name><argument_list pos:start="97:32" pos:end="97:42">(<argument pos:start="97:33" pos:end="97:36"><expr pos:start="97:33" pos:end="97:36"><operator pos:start="97:33" pos:end="97:33">&amp;</operator><name pos:start="97:34" pos:end="97:36">dst</name></expr></argument>, <argument pos:start="97:39" pos:end="97:41"><expr pos:start="97:39" pos:end="97:41"><name pos:start="97:39" pos:end="97:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:22"><expr pos:start="99:13" pos:end="99:21"><name pos:start="99:13" pos:end="99:19">samples</name><operator pos:start="99:20" pos:end="99:21">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    <case pos:start="105:5" pos:end="105:31">case <expr pos:start="105:10" pos:end="105:30"><name pos:start="105:10" pos:end="105:30">AV_CODEC_ID_PCM_U16LE</name></expr>:</case>

        <macro pos:start="107:9" pos:end="107:58"><name pos:start="107:9" pos:end="107:14">ENCODE</name><argument_list pos:start="107:15" pos:end="107:58">(<argument pos:start="107:16" pos:end="107:23">uint16_t</argument>, <argument pos:start="107:26" pos:end="107:29">le16</argument>, <argument pos:start="107:32" pos:end="107:38">samples</argument>, <argument pos:start="107:41" pos:end="107:43">dst</argument>, <argument pos:start="107:46" pos:end="107:46">n</argument>, <argument pos:start="107:49" pos:end="107:49"><literal type="number" pos:start="107:49" pos:end="107:49">0</literal></argument>, <argument pos:start="107:52" pos:end="107:57"><literal type="number" pos:start="107:52" pos:end="107:57">0x8000</literal></argument>)</argument_list></macro>

        <break pos:start="109:9" pos:end="109:14">break;</break>

    <case pos:start="111:5" pos:end="111:31">case <expr pos:start="111:10" pos:end="111:30"><name pos:start="111:10" pos:end="111:30">AV_CODEC_ID_PCM_U16BE</name></expr>:</case>

        <macro pos:start="113:9" pos:end="113:58"><name pos:start="113:9" pos:end="113:14">ENCODE</name><argument_list pos:start="113:15" pos:end="113:58">(<argument pos:start="113:16" pos:end="113:23">uint16_t</argument>, <argument pos:start="113:26" pos:end="113:29">be16</argument>, <argument pos:start="113:32" pos:end="113:38">samples</argument>, <argument pos:start="113:41" pos:end="113:43">dst</argument>, <argument pos:start="113:46" pos:end="113:46">n</argument>, <argument pos:start="113:49" pos:end="113:49"><literal type="number" pos:start="113:49" pos:end="113:49">0</literal></argument>, <argument pos:start="113:52" pos:end="113:57"><literal type="number" pos:start="113:52" pos:end="113:57">0x8000</literal></argument>)</argument_list></macro>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <case pos:start="117:5" pos:end="117:28">case <expr pos:start="117:10" pos:end="117:27"><name pos:start="117:10" pos:end="117:27">AV_CODEC_ID_PCM_S8</name></expr>:</case>

        <macro pos:start="119:9" pos:end="119:55"><name pos:start="119:9" pos:end="119:14">ENCODE</name><argument_list pos:start="119:15" pos:end="119:55">(<argument pos:start="119:16" pos:end="119:22">uint8_t</argument>, <argument pos:start="119:25" pos:end="119:28">byte</argument>, <argument pos:start="119:31" pos:end="119:37">samples</argument>, <argument pos:start="119:40" pos:end="119:42">dst</argument>, <argument pos:start="119:45" pos:end="119:45">n</argument>, <argument pos:start="119:48" pos:end="119:48"><literal type="number" pos:start="119:48" pos:end="119:48">0</literal></argument>, <argument pos:start="119:51" pos:end="119:54">-<literal type="number" pos:start="119:52" pos:end="119:54">128</literal></argument>)</argument_list></macro>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <case pos:start="123:5" pos:end="123:35">case <expr pos:start="123:10" pos:end="123:34"><name pos:start="123:10" pos:end="123:34">AV_CODEC_ID_PCM_S8_PLANAR</name></expr>:</case>

        <macro pos:start="125:9" pos:end="125:53"><name pos:start="125:9" pos:end="125:21">ENCODE_PLANAR</name><argument_list pos:start="125:22" pos:end="125:53">(<argument pos:start="125:23" pos:end="125:29">uint8_t</argument>, <argument pos:start="125:32" pos:end="125:35">byte</argument>, <argument pos:start="125:38" pos:end="125:40">dst</argument>, <argument pos:start="125:43" pos:end="125:43">n</argument>, <argument pos:start="125:46" pos:end="125:46"><literal type="number" pos:start="125:46" pos:end="125:46">0</literal></argument>, <argument pos:start="125:49" pos:end="125:52">-<literal type="number" pos:start="125:50" pos:end="125:52">128</literal></argument>)</argument_list></macro>

        <break pos:start="127:9" pos:end="130:0">break;</break>

<cpp:if pos:start="129:1" pos:end="129:18">#<cpp:directive pos:start="129:2" pos:end="129:3">if</cpp:directive> <expr pos:start="129:5" pos:end="129:18"><name pos:start="129:5" pos:end="129:18">HAVE_BIGENDIAN</name></expr></cpp:if>

    <case pos:start="131:5" pos:end="131:31">case <expr pos:start="131:10" pos:end="131:30"><name pos:start="131:10" pos:end="131:30">AV_CODEC_ID_PCM_F64LE</name></expr>:</case>

        <macro pos:start="133:9" pos:end="133:52"><name pos:start="133:9" pos:end="133:14">ENCODE</name><argument_list pos:start="133:15" pos:end="133:52">(<argument pos:start="133:16" pos:end="133:22">int64_t</argument>, <argument pos:start="133:25" pos:end="133:28">le64</argument>, <argument pos:start="133:31" pos:end="133:37">samples</argument>, <argument pos:start="133:40" pos:end="133:42">dst</argument>, <argument pos:start="133:45" pos:end="133:45">n</argument>, <argument pos:start="133:48" pos:end="133:48"><literal type="number" pos:start="133:48" pos:end="133:48">0</literal></argument>, <argument pos:start="133:51" pos:end="133:51"><literal type="number" pos:start="133:51" pos:end="133:51">0</literal></argument>)</argument_list></macro>

        <break pos:start="135:9" pos:end="135:14">break;</break>

    <case pos:start="137:5" pos:end="137:31">case <expr pos:start="137:10" pos:end="137:30"><name pos:start="137:10" pos:end="137:30">AV_CODEC_ID_PCM_S32LE</name></expr>:</case>

    <case pos:start="139:5" pos:end="139:31">case <expr pos:start="139:10" pos:end="139:30"><name pos:start="139:10" pos:end="139:30">AV_CODEC_ID_PCM_F32LE</name></expr>:</case>

        <macro pos:start="141:9" pos:end="141:52"><name pos:start="141:9" pos:end="141:14">ENCODE</name><argument_list pos:start="141:15" pos:end="141:52">(<argument pos:start="141:16" pos:end="141:22">int32_t</argument>, <argument pos:start="141:25" pos:end="141:28">le32</argument>, <argument pos:start="141:31" pos:end="141:37">samples</argument>, <argument pos:start="141:40" pos:end="141:42">dst</argument>, <argument pos:start="141:45" pos:end="141:45">n</argument>, <argument pos:start="141:48" pos:end="141:48"><literal type="number" pos:start="141:48" pos:end="141:48">0</literal></argument>, <argument pos:start="141:51" pos:end="141:51"><literal type="number" pos:start="141:51" pos:end="141:51">0</literal></argument>)</argument_list></macro>

        <break pos:start="143:9" pos:end="143:14">break;</break>

    <case pos:start="145:5" pos:end="145:38">case <expr pos:start="145:10" pos:end="145:37"><name pos:start="145:10" pos:end="145:37">AV_CODEC_ID_PCM_S32LE_PLANAR</name></expr>:</case>

        <macro pos:start="147:9" pos:end="147:50"><name pos:start="147:9" pos:end="147:21">ENCODE_PLANAR</name><argument_list pos:start="147:22" pos:end="147:50">(<argument pos:start="147:23" pos:end="147:29">int32_t</argument>, <argument pos:start="147:32" pos:end="147:35">le32</argument>, <argument pos:start="147:38" pos:end="147:40">dst</argument>, <argument pos:start="147:43" pos:end="147:43">n</argument>, <argument pos:start="147:46" pos:end="147:46"><literal type="number" pos:start="147:46" pos:end="147:46">0</literal></argument>, <argument pos:start="147:49" pos:end="147:49"><literal type="number" pos:start="147:49" pos:end="147:49">0</literal></argument>)</argument_list></macro>

        <break pos:start="149:9" pos:end="149:14">break;</break>

    <case pos:start="151:5" pos:end="151:31">case <expr pos:start="151:10" pos:end="151:30"><name pos:start="151:10" pos:end="151:30">AV_CODEC_ID_PCM_S16LE</name></expr>:</case>

        <macro pos:start="153:9" pos:end="153:52"><name pos:start="153:9" pos:end="153:14">ENCODE</name><argument_list pos:start="153:15" pos:end="153:52">(<argument pos:start="153:16" pos:end="153:22">int16_t</argument>, <argument pos:start="153:25" pos:end="153:28">le16</argument>, <argument pos:start="153:31" pos:end="153:37">samples</argument>, <argument pos:start="153:40" pos:end="153:42">dst</argument>, <argument pos:start="153:45" pos:end="153:45">n</argument>, <argument pos:start="153:48" pos:end="153:48"><literal type="number" pos:start="153:48" pos:end="153:48">0</literal></argument>, <argument pos:start="153:51" pos:end="153:51"><literal type="number" pos:start="153:51" pos:end="153:51">0</literal></argument>)</argument_list></macro>

        <break pos:start="155:9" pos:end="155:14">break;</break>

    <case pos:start="157:5" pos:end="157:38">case <expr pos:start="157:10" pos:end="157:37"><name pos:start="157:10" pos:end="157:37">AV_CODEC_ID_PCM_S16LE_PLANAR</name></expr>:</case>

        <macro pos:start="159:9" pos:end="159:50"><name pos:start="159:9" pos:end="159:21">ENCODE_PLANAR</name><argument_list pos:start="159:22" pos:end="159:50">(<argument pos:start="159:23" pos:end="159:29">int16_t</argument>, <argument pos:start="159:32" pos:end="159:35">le16</argument>, <argument pos:start="159:38" pos:end="159:40">dst</argument>, <argument pos:start="159:43" pos:end="159:43">n</argument>, <argument pos:start="159:46" pos:end="159:46"><literal type="number" pos:start="159:46" pos:end="159:46">0</literal></argument>, <argument pos:start="159:49" pos:end="159:49"><literal type="number" pos:start="159:49" pos:end="159:49">0</literal></argument>)</argument_list></macro>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    <case pos:start="163:5" pos:end="163:31">case <expr pos:start="163:10" pos:end="163:30"><name pos:start="163:10" pos:end="163:30">AV_CODEC_ID_PCM_F64BE</name></expr>:</case>

    <case pos:start="165:5" pos:end="165:31">case <expr pos:start="165:10" pos:end="165:30"><name pos:start="165:10" pos:end="165:30">AV_CODEC_ID_PCM_F32BE</name></expr>:</case>

    <case pos:start="167:5" pos:end="167:31">case <expr pos:start="167:10" pos:end="167:30"><name pos:start="167:10" pos:end="167:30">AV_CODEC_ID_PCM_S32BE</name></expr>:</case>

    <case pos:start="169:5" pos:end="172:0">case <expr pos:start="169:10" pos:end="169:30"><name pos:start="169:10" pos:end="169:30">AV_CODEC_ID_PCM_S16BE</name></expr>:</case>

<cpp:else pos:start="171:1" pos:end="171:5">#<cpp:directive pos:start="171:2" pos:end="171:5">else</cpp:directive></cpp:else>

    <case pos:start="173:5" pos:end="173:31">case <expr pos:start="173:10" pos:end="173:30"><name pos:start="173:10" pos:end="173:30">AV_CODEC_ID_PCM_F64BE</name></expr>:</case>

        <macro pos:start="175:9" pos:end="175:52"><name pos:start="175:9" pos:end="175:14">ENCODE</name><argument_list pos:start="175:15" pos:end="175:52">(<argument pos:start="175:16" pos:end="175:22">int64_t</argument>, <argument pos:start="175:25" pos:end="175:28">be64</argument>, <argument pos:start="175:31" pos:end="175:37">samples</argument>, <argument pos:start="175:40" pos:end="175:42">dst</argument>, <argument pos:start="175:45" pos:end="175:45">n</argument>, <argument pos:start="175:48" pos:end="175:48"><literal type="number" pos:start="175:48" pos:end="175:48">0</literal></argument>, <argument pos:start="175:51" pos:end="175:51"><literal type="number" pos:start="175:51" pos:end="175:51">0</literal></argument>)</argument_list></macro>

        <break pos:start="177:9" pos:end="177:14">break;</break>

    <case pos:start="179:5" pos:end="179:31">case <expr pos:start="179:10" pos:end="179:30"><name pos:start="179:10" pos:end="179:30">AV_CODEC_ID_PCM_F32BE</name></expr>:</case>

    <case pos:start="181:5" pos:end="181:31">case <expr pos:start="181:10" pos:end="181:30"><name pos:start="181:10" pos:end="181:30">AV_CODEC_ID_PCM_S32BE</name></expr>:</case>

        <macro pos:start="183:9" pos:end="183:52"><name pos:start="183:9" pos:end="183:14">ENCODE</name><argument_list pos:start="183:15" pos:end="183:52">(<argument pos:start="183:16" pos:end="183:22">int32_t</argument>, <argument pos:start="183:25" pos:end="183:28">be32</argument>, <argument pos:start="183:31" pos:end="183:37">samples</argument>, <argument pos:start="183:40" pos:end="183:42">dst</argument>, <argument pos:start="183:45" pos:end="183:45">n</argument>, <argument pos:start="183:48" pos:end="183:48"><literal type="number" pos:start="183:48" pos:end="183:48">0</literal></argument>, <argument pos:start="183:51" pos:end="183:51"><literal type="number" pos:start="183:51" pos:end="183:51">0</literal></argument>)</argument_list></macro>

        <break pos:start="185:9" pos:end="185:14">break;</break>

    <case pos:start="187:5" pos:end="187:31">case <expr pos:start="187:10" pos:end="187:30"><name pos:start="187:10" pos:end="187:30">AV_CODEC_ID_PCM_S16BE</name></expr>:</case>

        <macro pos:start="189:9" pos:end="189:52"><name pos:start="189:9" pos:end="189:14">ENCODE</name><argument_list pos:start="189:15" pos:end="189:52">(<argument pos:start="189:16" pos:end="189:22">int16_t</argument>, <argument pos:start="189:25" pos:end="189:28">be16</argument>, <argument pos:start="189:31" pos:end="189:37">samples</argument>, <argument pos:start="189:40" pos:end="189:42">dst</argument>, <argument pos:start="189:45" pos:end="189:45">n</argument>, <argument pos:start="189:48" pos:end="189:48"><literal type="number" pos:start="189:48" pos:end="189:48">0</literal></argument>, <argument pos:start="189:51" pos:end="189:51"><literal type="number" pos:start="189:51" pos:end="189:51">0</literal></argument>)</argument_list></macro>

        <break pos:start="191:9" pos:end="191:14">break;</break>

    <case pos:start="193:5" pos:end="193:38">case <expr pos:start="193:10" pos:end="193:37"><name pos:start="193:10" pos:end="193:37">AV_CODEC_ID_PCM_S16BE_PLANAR</name></expr>:</case>

        <macro pos:start="195:9" pos:end="195:50"><name pos:start="195:9" pos:end="195:21">ENCODE_PLANAR</name><argument_list pos:start="195:22" pos:end="195:50">(<argument pos:start="195:23" pos:end="195:29">int16_t</argument>, <argument pos:start="195:32" pos:end="195:35">be16</argument>, <argument pos:start="195:38" pos:end="195:40">dst</argument>, <argument pos:start="195:43" pos:end="195:43">n</argument>, <argument pos:start="195:46" pos:end="195:46"><literal type="number" pos:start="195:46" pos:end="195:46">0</literal></argument>, <argument pos:start="195:49" pos:end="195:49"><literal type="number" pos:start="195:49" pos:end="195:49">0</literal></argument>)</argument_list></macro>

        <break pos:start="197:9" pos:end="197:14">break;</break>

    <case pos:start="199:5" pos:end="199:31">case <expr pos:start="199:10" pos:end="199:30"><name pos:start="199:10" pos:end="199:30">AV_CODEC_ID_PCM_F64LE</name></expr>:</case>

    <case pos:start="201:5" pos:end="201:31">case <expr pos:start="201:10" pos:end="201:30"><name pos:start="201:10" pos:end="201:30">AV_CODEC_ID_PCM_F32LE</name></expr>:</case>

    <case pos:start="203:5" pos:end="203:31">case <expr pos:start="203:10" pos:end="203:30"><name pos:start="203:10" pos:end="203:30">AV_CODEC_ID_PCM_S32LE</name></expr>:</case>

    <case pos:start="205:5" pos:end="208:0">case <expr pos:start="205:10" pos:end="205:30"><name pos:start="205:10" pos:end="205:30">AV_CODEC_ID_PCM_S16LE</name></expr>:</case>

<cpp:endif pos:start="207:1" pos:end="207:6">#<cpp:directive pos:start="207:2" pos:end="207:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="207:8" pos:end="207:27">/* HAVE_BIGENDIAN */</comment>

    <case pos:start="209:5" pos:end="209:28">case <expr pos:start="209:10" pos:end="209:27"><name pos:start="209:10" pos:end="209:27">AV_CODEC_ID_PCM_U8</name></expr>:</case>

        <expr_stmt pos:start="211:9" pos:end="211:46"><expr pos:start="211:9" pos:end="211:45"><call pos:start="211:9" pos:end="211:45"><name pos:start="211:9" pos:end="211:14">memcpy</name><argument_list pos:start="211:15" pos:end="211:45">(<argument pos:start="211:16" pos:end="211:18"><expr pos:start="211:16" pos:end="211:18"><name pos:start="211:16" pos:end="211:18">dst</name></expr></argument>, <argument pos:start="211:21" pos:end="211:27"><expr pos:start="211:21" pos:end="211:27"><name pos:start="211:21" pos:end="211:27">samples</name></expr></argument>, <argument pos:start="211:30" pos:end="211:44"><expr pos:start="211:30" pos:end="211:44"><name pos:start="211:30" pos:end="211:30">n</name> <operator pos:start="211:32" pos:end="211:32">*</operator> <name pos:start="211:34" pos:end="211:44">sample_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="213:9" pos:end="216:0">break;</break>

<cpp:if pos:start="215:1" pos:end="215:18">#<cpp:directive pos:start="215:2" pos:end="215:3">if</cpp:directive> <expr pos:start="215:5" pos:end="215:18"><name pos:start="215:5" pos:end="215:18">HAVE_BIGENDIAN</name></expr></cpp:if>

    <case pos:start="217:5" pos:end="220:0">case <expr pos:start="217:10" pos:end="217:37"><name pos:start="217:10" pos:end="217:37">AV_CODEC_ID_PCM_S16BE_PLANAR</name></expr>:</case>

<cpp:else pos:start="219:1" pos:end="219:5">#<cpp:directive pos:start="219:2" pos:end="219:5">else</cpp:directive></cpp:else>

    <case pos:start="221:5" pos:end="221:38">case <expr pos:start="221:10" pos:end="221:37"><name pos:start="221:10" pos:end="221:37">AV_CODEC_ID_PCM_S16LE_PLANAR</name></expr>:</case>

    <case pos:start="223:5" pos:end="226:0">case <expr pos:start="223:10" pos:end="223:37"><name pos:start="223:10" pos:end="223:37">AV_CODEC_ID_PCM_S32LE_PLANAR</name></expr>:</case>

<cpp:endif pos:start="225:1" pos:end="225:6">#<cpp:directive pos:start="225:2" pos:end="225:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="225:8" pos:end="225:27">/* HAVE_BIGENDIAN */</comment>

        <expr_stmt pos:start="227:9" pos:end="227:29"><expr pos:start="227:9" pos:end="227:28"><name pos:start="227:9" pos:end="227:9">n</name> <operator pos:start="227:11" pos:end="227:12">/=</operator> <name pos:start="227:14" pos:end="227:28"><name pos:start="227:14" pos:end="227:18">avctx</name><operator pos:start="227:19" pos:end="227:20">-&gt;</operator><name pos:start="227:21" pos:end="227:28">channels</name></name></expr>;</expr_stmt>

        <for pos:start="229:9" pos:end="235:9">for <control pos:start="229:13" pos:end="229:45">(<init pos:start="229:14" pos:end="229:19"><expr pos:start="229:14" pos:end="229:18"><name pos:start="229:14" pos:end="229:14">c</name> <operator pos:start="229:16" pos:end="229:16">=</operator> <literal type="number" pos:start="229:18" pos:end="229:18">0</literal></expr>;</init> <condition pos:start="229:21" pos:end="229:40"><expr pos:start="229:21" pos:end="229:39"><name pos:start="229:21" pos:end="229:21">c</name> <operator pos:start="229:23" pos:end="229:23">&lt;</operator> <name pos:start="229:25" pos:end="229:39"><name pos:start="229:25" pos:end="229:29">avctx</name><operator pos:start="229:30" pos:end="229:31">-&gt;</operator><name pos:start="229:32" pos:end="229:39">channels</name></name></expr>;</condition> <incr pos:start="229:42" pos:end="229:44"><expr pos:start="229:42" pos:end="229:44"><name pos:start="229:42" pos:end="229:42">c</name><operator pos:start="229:43" pos:end="229:44">++</operator></expr></incr>)</control> <block pos:start="229:47" pos:end="235:9">{<block_content pos:start="231:13" pos:end="233:62">

            <decl_stmt pos:start="231:13" pos:end="231:57"><decl pos:start="231:13" pos:end="231:56"><type pos:start="231:13" pos:end="231:27"><specifier pos:start="231:13" pos:end="231:17">const</specifier> <name pos:start="231:19" pos:end="231:25">uint8_t</name> <modifier pos:start="231:27" pos:end="231:27">*</modifier></type><name pos:start="231:28" pos:end="231:30">src</name> <init pos:start="231:32" pos:end="231:56">= <expr pos:start="231:34" pos:end="231:56"><name pos:start="231:34" pos:end="231:56"><name pos:start="231:34" pos:end="231:38">frame</name><operator pos:start="231:39" pos:end="231:40">-&gt;</operator><name pos:start="231:41" pos:end="231:53">extended_data</name><index pos:start="231:54" pos:end="231:56">[<expr pos:start="231:55" pos:end="231:55"><name pos:start="231:55" pos:end="231:55">c</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:62"><expr pos:start="233:13" pos:end="233:61"><call pos:start="233:13" pos:end="233:61"><name pos:start="233:13" pos:end="233:33">bytestream_put_buffer</name><argument_list pos:start="233:34" pos:end="233:61">(<argument pos:start="233:35" pos:end="233:38"><expr pos:start="233:35" pos:end="233:38"><operator pos:start="233:35" pos:end="233:35">&amp;</operator><name pos:start="233:36" pos:end="233:38">dst</name></expr></argument>, <argument pos:start="233:41" pos:end="233:43"><expr pos:start="233:41" pos:end="233:43"><name pos:start="233:41" pos:end="233:43">src</name></expr></argument>, <argument pos:start="233:46" pos:end="233:60"><expr pos:start="233:46" pos:end="233:60"><name pos:start="233:46" pos:end="233:46">n</name> <operator pos:start="233:48" pos:end="233:48">*</operator> <name pos:start="233:50" pos:end="233:60">sample_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="237:9" pos:end="237:14">break;</break>

    <case pos:start="239:5" pos:end="239:30">case <expr pos:start="239:10" pos:end="239:29"><name pos:start="239:10" pos:end="239:29">AV_CODEC_ID_PCM_ALAW</name></expr>:</case>

        <for pos:start="241:9" pos:end="247:9">for <control pos:start="241:13" pos:end="241:26">(<init pos:start="241:14" pos:end="241:14">;</init> <condition pos:start="241:16" pos:end="241:21"><expr pos:start="241:16" pos:end="241:20"><name pos:start="241:16" pos:end="241:16">n</name> <operator pos:start="241:18" pos:end="241:18">&gt;</operator> <literal type="number" pos:start="241:20" pos:end="241:20">0</literal></expr>;</condition> <incr pos:start="241:23" pos:end="241:25"><expr pos:start="241:23" pos:end="241:25"><name pos:start="241:23" pos:end="241:23">n</name><operator pos:start="241:24" pos:end="241:25">--</operator></expr></incr>)</control> <block pos:start="241:28" pos:end="247:9">{<block_content pos:start="243:13" pos:end="245:54">

            <expr_stmt pos:start="243:13" pos:end="243:32"><expr pos:start="243:13" pos:end="243:31"><name pos:start="243:13" pos:end="243:13">v</name>      <operator pos:start="243:20" pos:end="243:20">=</operator> <operator pos:start="243:22" pos:end="243:22">*</operator><name pos:start="243:23" pos:end="243:29">samples</name><operator pos:start="243:30" pos:end="243:31">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:54"><expr pos:start="245:13" pos:end="245:53"><operator pos:start="245:13" pos:end="245:13">*</operator><name pos:start="245:14" pos:end="245:16">dst</name><operator pos:start="245:17" pos:end="245:18">++</operator> <operator pos:start="245:20" pos:end="245:20">=</operator> <name pos:start="245:22" pos:end="245:53"><name pos:start="245:22" pos:end="245:35">linear_to_alaw</name><index pos:start="245:36" pos:end="245:53">[<expr pos:start="245:37" pos:end="245:52"><operator pos:start="245:37" pos:end="245:37">(</operator><name pos:start="245:38" pos:end="245:38">v</name> <operator pos:start="245:40" pos:end="245:40">+</operator> <literal type="number" pos:start="245:42" pos:end="245:46">32768</literal><operator pos:start="245:47" pos:end="245:47">)</operator> <operator pos:start="245:49" pos:end="245:50">&gt;&gt;</operator> <literal type="number" pos:start="245:52" pos:end="245:52">2</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="249:9" pos:end="249:14">break;</break>

    <case pos:start="251:5" pos:end="251:31">case <expr pos:start="251:10" pos:end="251:30"><name pos:start="251:10" pos:end="251:30">AV_CODEC_ID_PCM_MULAW</name></expr>:</case>

        <for pos:start="253:9" pos:end="259:9">for <control pos:start="253:13" pos:end="253:26">(<init pos:start="253:14" pos:end="253:14">;</init> <condition pos:start="253:16" pos:end="253:21"><expr pos:start="253:16" pos:end="253:20"><name pos:start="253:16" pos:end="253:16">n</name> <operator pos:start="253:18" pos:end="253:18">&gt;</operator> <literal type="number" pos:start="253:20" pos:end="253:20">0</literal></expr>;</condition> <incr pos:start="253:23" pos:end="253:25"><expr pos:start="253:23" pos:end="253:25"><name pos:start="253:23" pos:end="253:23">n</name><operator pos:start="253:24" pos:end="253:25">--</operator></expr></incr>)</control> <block pos:start="253:28" pos:end="259:9">{<block_content pos:start="255:13" pos:end="257:54">

            <expr_stmt pos:start="255:13" pos:end="255:32"><expr pos:start="255:13" pos:end="255:31"><name pos:start="255:13" pos:end="255:13">v</name>      <operator pos:start="255:20" pos:end="255:20">=</operator> <operator pos:start="255:22" pos:end="255:22">*</operator><name pos:start="255:23" pos:end="255:29">samples</name><operator pos:start="255:30" pos:end="255:31">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:54"><expr pos:start="257:13" pos:end="257:53"><operator pos:start="257:13" pos:end="257:13">*</operator><name pos:start="257:14" pos:end="257:16">dst</name><operator pos:start="257:17" pos:end="257:18">++</operator> <operator pos:start="257:20" pos:end="257:20">=</operator> <name pos:start="257:22" pos:end="257:53"><name pos:start="257:22" pos:end="257:35">linear_to_ulaw</name><index pos:start="257:36" pos:end="257:53">[<expr pos:start="257:37" pos:end="257:52"><operator pos:start="257:37" pos:end="257:37">(</operator><name pos:start="257:38" pos:end="257:38">v</name> <operator pos:start="257:40" pos:end="257:40">+</operator> <literal type="number" pos:start="257:42" pos:end="257:46">32768</literal><operator pos:start="257:47" pos:end="257:47">)</operator> <operator pos:start="257:49" pos:end="257:50">&gt;&gt;</operator> <literal type="number" pos:start="257:52" pos:end="257:52">2</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="261:9" pos:end="261:14">break;</break>

    <default pos:start="263:5" pos:end="263:12">default:</default>

        <return pos:start="265:9" pos:end="265:18">return <expr pos:start="265:16" pos:end="265:17"><operator pos:start="265:16" pos:end="265:16">-</operator><literal type="number" pos:start="265:17" pos:end="265:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="271:5" pos:end="271:24"><expr pos:start="271:5" pos:end="271:23"><operator pos:start="271:5" pos:end="271:5">*</operator><name pos:start="271:6" pos:end="271:19">got_packet_ptr</name> <operator pos:start="271:21" pos:end="271:21">=</operator> <literal type="number" pos:start="271:23" pos:end="271:23">1</literal></expr>;</expr_stmt>

    <return pos:start="273:5" pos:end="273:13">return <expr pos:start="273:12" pos:end="273:12"><literal type="number" pos:start="273:12" pos:end="273:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
