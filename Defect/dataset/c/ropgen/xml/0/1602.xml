<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1602.c" pos:tabs="8"><function pos:start="1:1" pos:end="1281:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">gen_mfc0</name><parameter_list pos:start="1:21" pos:end="1:67">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">ctx</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:48"><decl pos:start="1:41" pos:end="1:48"><type pos:start="1:41" pos:end="1:48"><name pos:start="1:41" pos:end="1:44">TCGv</name></type> <name pos:start="1:46" pos:end="1:48">arg</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:57"><decl pos:start="1:51" pos:end="1:57"><type pos:start="1:51" pos:end="1:57"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:57">reg</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:66"><decl pos:start="1:60" pos:end="1:66"><type pos:start="1:60" pos:end="1:66"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:66">sel</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1281:1">{<block_content pos:start="5:5" pos:end="1279:37">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">rn</name> <init pos:start="5:20" pos:end="5:30">= <expr pos:start="5:22" pos:end="5:30"><literal type="string" pos:start="5:22" pos:end="5:30">"invalid"</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:36"><if pos:start="9:5" pos:end="11:36">if <condition pos:start="9:8" pos:end="9:17">(<expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:11">sel</name> <operator pos:start="9:13" pos:end="9:14">!=</operator> <literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:36"><block_content pos:start="11:9" pos:end="11:36">

        <expr_stmt pos:start="11:9" pos:end="11:36"><expr pos:start="11:9" pos:end="11:35"><call pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:18">check_insn</name><argument_list pos:start="11:19" pos:end="11:35">(<argument pos:start="11:20" pos:end="11:22"><expr pos:start="11:20" pos:end="11:22"><name pos:start="11:20" pos:end="11:22">ctx</name></expr></argument>, <argument pos:start="11:25" pos:end="11:34"><expr pos:start="11:25" pos:end="11:34"><name pos:start="11:25" pos:end="11:34">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="15:5" pos:end="1265:5">switch <condition pos:start="15:12" pos:end="15:16">(<expr pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">reg</name></expr>)</condition> <block pos:start="15:18" pos:end="1265:5">{<block_content pos:start="17:5" pos:end="1263:16">

    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">0</literal></expr>:</case>

        <switch pos:start="19:9" pos:end="63:9">switch <condition pos:start="19:16" pos:end="19:20">(<expr pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">sel</name></expr>)</condition> <block pos:start="19:22" pos:end="63:9">{<block_content pos:start="21:9" pos:end="61:21">

        <case pos:start="21:9" pos:end="21:15">case <expr pos:start="21:14" pos:end="21:14"><literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>:</case>

            <expr_stmt pos:start="23:13" pos:end="23:68"><expr pos:start="23:13" pos:end="23:67"><call pos:start="23:13" pos:end="23:67"><name pos:start="23:13" pos:end="23:27">gen_mfc0_load32</name><argument_list pos:start="23:28" pos:end="23:67">(<argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">arg</name></expr></argument>, <argument pos:start="23:34" pos:end="23:66"><expr pos:start="23:34" pos:end="23:66"><call pos:start="23:34" pos:end="23:66"><name pos:start="23:34" pos:end="23:41">offsetof</name><argument_list pos:start="23:42" pos:end="23:66">(<argument pos:start="23:43" pos:end="23:54"><expr pos:start="23:43" pos:end="23:54"><name pos:start="23:43" pos:end="23:54">CPUMIPSState</name></expr></argument>, <argument pos:start="23:57" pos:end="23:65"><expr pos:start="23:57" pos:end="23:65"><name pos:start="23:57" pos:end="23:65">CP0_Index</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:25"><expr pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:14">rn</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="string" pos:start="25:18" pos:end="25:24">"Index"</literal></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>

        <case pos:start="29:9" pos:end="29:15">case <expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">1</literal></expr>:</case>

            <expr_stmt pos:start="31:13" pos:end="31:36"><expr pos:start="31:13" pos:end="31:35"><call pos:start="31:13" pos:end="31:35"><name pos:start="31:13" pos:end="31:22">check_insn</name><argument_list pos:start="31:23" pos:end="31:35">(<argument pos:start="31:24" pos:end="31:26"><expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:26">ctx</name></expr></argument>, <argument pos:start="31:29" pos:end="31:34"><expr pos:start="31:29" pos:end="31:34"><name pos:start="31:29" pos:end="31:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:53"><expr pos:start="33:13" pos:end="33:52"><call pos:start="33:13" pos:end="33:52"><name pos:start="33:13" pos:end="33:38">gen_helper_mfc0_mvpcontrol</name><argument_list pos:start="33:39" pos:end="33:52">(<argument pos:start="33:40" pos:end="33:42"><expr pos:start="33:40" pos:end="33:42"><name pos:start="33:40" pos:end="33:42">arg</name></expr></argument>, <argument pos:start="33:45" pos:end="33:51"><expr pos:start="33:45" pos:end="33:51"><name pos:start="33:45" pos:end="33:51">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:30"><expr pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:14">rn</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="string" pos:start="35:18" pos:end="35:29">"MVPControl"</literal></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:15">case <expr pos:start="39:14" pos:end="39:14"><literal type="number" pos:start="39:14" pos:end="39:14">2</literal></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:36"><expr pos:start="41:13" pos:end="41:35"><call pos:start="41:13" pos:end="41:35"><name pos:start="41:13" pos:end="41:22">check_insn</name><argument_list pos:start="41:23" pos:end="41:35">(<argument pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:26">ctx</name></expr></argument>, <argument pos:start="41:29" pos:end="41:34"><expr pos:start="41:29" pos:end="41:34"><name pos:start="41:29" pos:end="41:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:51"><expr pos:start="43:13" pos:end="43:50"><call pos:start="43:13" pos:end="43:50"><name pos:start="43:13" pos:end="43:36">gen_helper_mfc0_mvpconf0</name><argument_list pos:start="43:37" pos:end="43:50">(<argument pos:start="43:38" pos:end="43:40"><expr pos:start="43:38" pos:end="43:40"><name pos:start="43:38" pos:end="43:40">arg</name></expr></argument>, <argument pos:start="43:43" pos:end="43:49"><expr pos:start="43:43" pos:end="43:49"><name pos:start="43:43" pos:end="43:49">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:28"><expr pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:14">rn</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="string" pos:start="45:18" pos:end="45:27">"MVPConf0"</literal></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <case pos:start="49:9" pos:end="49:15">case <expr pos:start="49:14" pos:end="49:14"><literal type="number" pos:start="49:14" pos:end="49:14">3</literal></expr>:</case>

            <expr_stmt pos:start="51:13" pos:end="51:36"><expr pos:start="51:13" pos:end="51:35"><call pos:start="51:13" pos:end="51:35"><name pos:start="51:13" pos:end="51:22">check_insn</name><argument_list pos:start="51:23" pos:end="51:35">(<argument pos:start="51:24" pos:end="51:26"><expr pos:start="51:24" pos:end="51:26"><name pos:start="51:24" pos:end="51:26">ctx</name></expr></argument>, <argument pos:start="51:29" pos:end="51:34"><expr pos:start="51:29" pos:end="51:34"><name pos:start="51:29" pos:end="51:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:51"><expr pos:start="53:13" pos:end="53:50"><call pos:start="53:13" pos:end="53:50"><name pos:start="53:13" pos:end="53:36">gen_helper_mfc0_mvpconf1</name><argument_list pos:start="53:37" pos:end="53:50">(<argument pos:start="53:38" pos:end="53:40"><expr pos:start="53:38" pos:end="53:40"><name pos:start="53:38" pos:end="53:40">arg</name></expr></argument>, <argument pos:start="53:43" pos:end="53:49"><expr pos:start="53:43" pos:end="53:49"><name pos:start="53:43" pos:end="53:49">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:28"><expr pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:14">rn</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="string" pos:start="55:18" pos:end="55:27">"MVPConf1"</literal></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <default pos:start="59:9" pos:end="59:16">default:</default>

            <goto pos:start="61:13" pos:end="61:21">goto <name pos:start="61:18" pos:end="61:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:11">case <expr pos:start="67:10" pos:end="67:10"><literal type="number" pos:start="67:10" pos:end="67:10">1</literal></expr>:</case>

        <switch pos:start="69:9" pos:end="153:9">switch <condition pos:start="69:16" pos:end="69:20">(<expr pos:start="69:17" pos:end="69:19"><name pos:start="69:17" pos:end="69:19">sel</name></expr>)</condition> <block pos:start="69:22" pos:end="153:9">{<block_content pos:start="71:9" pos:end="151:21">

        <case pos:start="71:9" pos:end="71:15">case <expr pos:start="71:14" pos:end="71:14"><literal type="number" pos:start="71:14" pos:end="71:14">0</literal></expr>:</case>

            <expr_stmt pos:start="73:13" pos:end="73:49"><expr pos:start="73:13" pos:end="73:48"><call pos:start="73:13" pos:end="73:48"><name pos:start="73:13" pos:end="73:34">gen_helper_mfc0_random</name><argument_list pos:start="73:35" pos:end="73:48">(<argument pos:start="73:36" pos:end="73:38"><expr pos:start="73:36" pos:end="73:38"><name pos:start="73:36" pos:end="73:38">arg</name></expr></argument>, <argument pos:start="73:41" pos:end="73:47"><expr pos:start="73:41" pos:end="73:47"><name pos:start="73:41" pos:end="73:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:26"><expr pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:14">rn</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="string" pos:start="75:18" pos:end="75:25">"Random"</literal></expr>;</expr_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        <case pos:start="79:9" pos:end="79:15">case <expr pos:start="79:14" pos:end="79:14"><literal type="number" pos:start="79:14" pos:end="79:14">1</literal></expr>:</case>

            <expr_stmt pos:start="81:13" pos:end="81:36"><expr pos:start="81:13" pos:end="81:35"><call pos:start="81:13" pos:end="81:35"><name pos:start="81:13" pos:end="81:22">check_insn</name><argument_list pos:start="81:23" pos:end="81:35">(<argument pos:start="81:24" pos:end="81:26"><expr pos:start="81:24" pos:end="81:26"><name pos:start="81:24" pos:end="81:26">ctx</name></expr></argument>, <argument pos:start="81:29" pos:end="81:34"><expr pos:start="81:29" pos:end="81:34"><name pos:start="81:29" pos:end="81:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:73"><expr pos:start="83:13" pos:end="83:72"><call pos:start="83:13" pos:end="83:72"><name pos:start="83:13" pos:end="83:27">gen_mfc0_load32</name><argument_list pos:start="83:28" pos:end="83:72">(<argument pos:start="83:29" pos:end="83:31"><expr pos:start="83:29" pos:end="83:31"><name pos:start="83:29" pos:end="83:31">arg</name></expr></argument>, <argument pos:start="83:34" pos:end="83:71"><expr pos:start="83:34" pos:end="83:71"><call pos:start="83:34" pos:end="83:71"><name pos:start="83:34" pos:end="83:41">offsetof</name><argument_list pos:start="83:42" pos:end="83:71">(<argument pos:start="83:43" pos:end="83:54"><expr pos:start="83:43" pos:end="83:54"><name pos:start="83:43" pos:end="83:54">CPUMIPSState</name></expr></argument>, <argument pos:start="83:57" pos:end="83:70"><expr pos:start="83:57" pos:end="83:70"><name pos:start="83:57" pos:end="83:70">CP0_VPEControl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:30"><expr pos:start="85:13" pos:end="85:29"><name pos:start="85:13" pos:end="85:14">rn</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <literal type="string" pos:start="85:18" pos:end="85:29">"VPEControl"</literal></expr>;</expr_stmt>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        <case pos:start="89:9" pos:end="89:15">case <expr pos:start="89:14" pos:end="89:14"><literal type="number" pos:start="89:14" pos:end="89:14">2</literal></expr>:</case>

            <expr_stmt pos:start="91:13" pos:end="91:36"><expr pos:start="91:13" pos:end="91:35"><call pos:start="91:13" pos:end="91:35"><name pos:start="91:13" pos:end="91:22">check_insn</name><argument_list pos:start="91:23" pos:end="91:35">(<argument pos:start="91:24" pos:end="91:26"><expr pos:start="91:24" pos:end="91:26"><name pos:start="91:24" pos:end="91:26">ctx</name></expr></argument>, <argument pos:start="91:29" pos:end="91:34"><expr pos:start="91:29" pos:end="91:34"><name pos:start="91:29" pos:end="91:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:71"><expr pos:start="93:13" pos:end="93:70"><call pos:start="93:13" pos:end="93:70"><name pos:start="93:13" pos:end="93:27">gen_mfc0_load32</name><argument_list pos:start="93:28" pos:end="93:70">(<argument pos:start="93:29" pos:end="93:31"><expr pos:start="93:29" pos:end="93:31"><name pos:start="93:29" pos:end="93:31">arg</name></expr></argument>, <argument pos:start="93:34" pos:end="93:69"><expr pos:start="93:34" pos:end="93:69"><call pos:start="93:34" pos:end="93:69"><name pos:start="93:34" pos:end="93:41">offsetof</name><argument_list pos:start="93:42" pos:end="93:69">(<argument pos:start="93:43" pos:end="93:54"><expr pos:start="93:43" pos:end="93:54"><name pos:start="93:43" pos:end="93:54">CPUMIPSState</name></expr></argument>, <argument pos:start="93:57" pos:end="93:68"><expr pos:start="93:57" pos:end="93:68"><name pos:start="93:57" pos:end="93:68">CP0_VPEConf0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:28"><expr pos:start="95:13" pos:end="95:27"><name pos:start="95:13" pos:end="95:14">rn</name> <operator pos:start="95:16" pos:end="95:16">=</operator> <literal type="string" pos:start="95:18" pos:end="95:27">"VPEConf0"</literal></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        <case pos:start="99:9" pos:end="99:15">case <expr pos:start="99:14" pos:end="99:14"><literal type="number" pos:start="99:14" pos:end="99:14">3</literal></expr>:</case>

            <expr_stmt pos:start="101:13" pos:end="101:36"><expr pos:start="101:13" pos:end="101:35"><call pos:start="101:13" pos:end="101:35"><name pos:start="101:13" pos:end="101:22">check_insn</name><argument_list pos:start="101:23" pos:end="101:35">(<argument pos:start="101:24" pos:end="101:26"><expr pos:start="101:24" pos:end="101:26"><name pos:start="101:24" pos:end="101:26">ctx</name></expr></argument>, <argument pos:start="101:29" pos:end="101:34"><expr pos:start="101:29" pos:end="101:34"><name pos:start="101:29" pos:end="101:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:71"><expr pos:start="103:13" pos:end="103:70"><call pos:start="103:13" pos:end="103:70"><name pos:start="103:13" pos:end="103:27">gen_mfc0_load32</name><argument_list pos:start="103:28" pos:end="103:70">(<argument pos:start="103:29" pos:end="103:31"><expr pos:start="103:29" pos:end="103:31"><name pos:start="103:29" pos:end="103:31">arg</name></expr></argument>, <argument pos:start="103:34" pos:end="103:69"><expr pos:start="103:34" pos:end="103:69"><call pos:start="103:34" pos:end="103:69"><name pos:start="103:34" pos:end="103:41">offsetof</name><argument_list pos:start="103:42" pos:end="103:69">(<argument pos:start="103:43" pos:end="103:54"><expr pos:start="103:43" pos:end="103:54"><name pos:start="103:43" pos:end="103:54">CPUMIPSState</name></expr></argument>, <argument pos:start="103:57" pos:end="103:68"><expr pos:start="103:57" pos:end="103:68"><name pos:start="103:57" pos:end="103:68">CP0_VPEConf1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:28"><expr pos:start="105:13" pos:end="105:27"><name pos:start="105:13" pos:end="105:14">rn</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <literal type="string" pos:start="105:18" pos:end="105:27">"VPEConf1"</literal></expr>;</expr_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:15">case <expr pos:start="109:14" pos:end="109:14"><literal type="number" pos:start="109:14" pos:end="109:14">4</literal></expr>:</case>

            <expr_stmt pos:start="111:13" pos:end="111:36"><expr pos:start="111:13" pos:end="111:35"><call pos:start="111:13" pos:end="111:35"><name pos:start="111:13" pos:end="111:22">check_insn</name><argument_list pos:start="111:23" pos:end="111:35">(<argument pos:start="111:24" pos:end="111:26"><expr pos:start="111:24" pos:end="111:26"><name pos:start="111:24" pos:end="111:26">ctx</name></expr></argument>, <argument pos:start="111:29" pos:end="111:34"><expr pos:start="111:29" pos:end="111:34"><name pos:start="111:29" pos:end="111:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:69"><expr pos:start="113:13" pos:end="113:68"><call pos:start="113:13" pos:end="113:68"><name pos:start="113:13" pos:end="113:27">gen_mfc0_load64</name><argument_list pos:start="113:28" pos:end="113:68">(<argument pos:start="113:29" pos:end="113:31"><expr pos:start="113:29" pos:end="113:31"><name pos:start="113:29" pos:end="113:31">arg</name></expr></argument>, <argument pos:start="113:34" pos:end="113:67"><expr pos:start="113:34" pos:end="113:67"><call pos:start="113:34" pos:end="113:67"><name pos:start="113:34" pos:end="113:41">offsetof</name><argument_list pos:start="113:42" pos:end="113:67">(<argument pos:start="113:43" pos:end="113:54"><expr pos:start="113:43" pos:end="113:54"><name pos:start="113:43" pos:end="113:54">CPUMIPSState</name></expr></argument>, <argument pos:start="113:57" pos:end="113:66"><expr pos:start="113:57" pos:end="113:66"><name pos:start="113:57" pos:end="113:66">CP0_YQMask</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:26"><expr pos:start="115:13" pos:end="115:25"><name pos:start="115:13" pos:end="115:14">rn</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <literal type="string" pos:start="115:18" pos:end="115:25">"YQMask"</literal></expr>;</expr_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:15">case <expr pos:start="119:14" pos:end="119:14"><literal type="number" pos:start="119:14" pos:end="119:14">5</literal></expr>:</case>

            <expr_stmt pos:start="121:13" pos:end="121:36"><expr pos:start="121:13" pos:end="121:35"><call pos:start="121:13" pos:end="121:35"><name pos:start="121:13" pos:end="121:22">check_insn</name><argument_list pos:start="121:23" pos:end="121:35">(<argument pos:start="121:24" pos:end="121:26"><expr pos:start="121:24" pos:end="121:26"><name pos:start="121:24" pos:end="121:26">ctx</name></expr></argument>, <argument pos:start="121:29" pos:end="121:34"><expr pos:start="121:29" pos:end="121:34"><name pos:start="121:29" pos:end="121:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:74"><expr pos:start="123:13" pos:end="123:73"><call pos:start="123:13" pos:end="123:73"><name pos:start="123:13" pos:end="123:27">gen_mfc0_load64</name><argument_list pos:start="123:28" pos:end="123:73">(<argument pos:start="123:29" pos:end="123:31"><expr pos:start="123:29" pos:end="123:31"><name pos:start="123:29" pos:end="123:31">arg</name></expr></argument>, <argument pos:start="123:34" pos:end="123:72"><expr pos:start="123:34" pos:end="123:72"><call pos:start="123:34" pos:end="123:72"><name pos:start="123:34" pos:end="123:41">offsetof</name><argument_list pos:start="123:42" pos:end="123:72">(<argument pos:start="123:43" pos:end="123:54"><expr pos:start="123:43" pos:end="123:54"><name pos:start="123:43" pos:end="123:54">CPUMIPSState</name></expr></argument>, <argument pos:start="123:57" pos:end="123:71"><expr pos:start="123:57" pos:end="123:71"><name pos:start="123:57" pos:end="123:71">CP0_VPESchedule</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:31"><expr pos:start="125:13" pos:end="125:30"><name pos:start="125:13" pos:end="125:14">rn</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <literal type="string" pos:start="125:18" pos:end="125:30">"VPESchedule"</literal></expr>;</expr_stmt>

            <break pos:start="127:13" pos:end="127:18">break;</break>

        <case pos:start="129:9" pos:end="129:15">case <expr pos:start="129:14" pos:end="129:14"><literal type="number" pos:start="129:14" pos:end="129:14">6</literal></expr>:</case>

            <expr_stmt pos:start="131:13" pos:end="131:36"><expr pos:start="131:13" pos:end="131:35"><call pos:start="131:13" pos:end="131:35"><name pos:start="131:13" pos:end="131:22">check_insn</name><argument_list pos:start="131:23" pos:end="131:35">(<argument pos:start="131:24" pos:end="131:26"><expr pos:start="131:24" pos:end="131:26"><name pos:start="131:24" pos:end="131:26">ctx</name></expr></argument>, <argument pos:start="131:29" pos:end="131:34"><expr pos:start="131:29" pos:end="131:34"><name pos:start="131:29" pos:end="131:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:75"><expr pos:start="133:13" pos:end="133:74"><call pos:start="133:13" pos:end="133:74"><name pos:start="133:13" pos:end="133:27">gen_mfc0_load64</name><argument_list pos:start="133:28" pos:end="133:74">(<argument pos:start="133:29" pos:end="133:31"><expr pos:start="133:29" pos:end="133:31"><name pos:start="133:29" pos:end="133:31">arg</name></expr></argument>, <argument pos:start="133:34" pos:end="133:73"><expr pos:start="133:34" pos:end="133:73"><call pos:start="133:34" pos:end="133:73"><name pos:start="133:34" pos:end="133:41">offsetof</name><argument_list pos:start="133:42" pos:end="133:73">(<argument pos:start="133:43" pos:end="133:54"><expr pos:start="133:43" pos:end="133:54"><name pos:start="133:43" pos:end="133:54">CPUMIPSState</name></expr></argument>, <argument pos:start="133:57" pos:end="133:72"><expr pos:start="133:57" pos:end="133:72"><name pos:start="133:57" pos:end="133:72">CP0_VPEScheFBack</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:32"><expr pos:start="135:13" pos:end="135:31"><name pos:start="135:13" pos:end="135:14">rn</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <literal type="string" pos:start="135:18" pos:end="135:31">"VPEScheFBack"</literal></expr>;</expr_stmt>

            <break pos:start="137:13" pos:end="137:18">break;</break>

        <case pos:start="139:9" pos:end="139:15">case <expr pos:start="139:14" pos:end="139:14"><literal type="number" pos:start="139:14" pos:end="139:14">7</literal></expr>:</case>

            <expr_stmt pos:start="141:13" pos:end="141:36"><expr pos:start="141:13" pos:end="141:35"><call pos:start="141:13" pos:end="141:35"><name pos:start="141:13" pos:end="141:22">check_insn</name><argument_list pos:start="141:23" pos:end="141:35">(<argument pos:start="141:24" pos:end="141:26"><expr pos:start="141:24" pos:end="141:26"><name pos:start="141:24" pos:end="141:26">ctx</name></expr></argument>, <argument pos:start="141:29" pos:end="141:34"><expr pos:start="141:29" pos:end="141:34"><name pos:start="141:29" pos:end="141:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:69"><expr pos:start="143:13" pos:end="143:68"><call pos:start="143:13" pos:end="143:68"><name pos:start="143:13" pos:end="143:27">gen_mfc0_load32</name><argument_list pos:start="143:28" pos:end="143:68">(<argument pos:start="143:29" pos:end="143:31"><expr pos:start="143:29" pos:end="143:31"><name pos:start="143:29" pos:end="143:31">arg</name></expr></argument>, <argument pos:start="143:34" pos:end="143:67"><expr pos:start="143:34" pos:end="143:67"><call pos:start="143:34" pos:end="143:67"><name pos:start="143:34" pos:end="143:41">offsetof</name><argument_list pos:start="143:42" pos:end="143:67">(<argument pos:start="143:43" pos:end="143:54"><expr pos:start="143:43" pos:end="143:54"><name pos:start="143:43" pos:end="143:54">CPUMIPSState</name></expr></argument>, <argument pos:start="143:57" pos:end="143:66"><expr pos:start="143:57" pos:end="143:66"><name pos:start="143:57" pos:end="143:66">CP0_VPEOpt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:26"><expr pos:start="145:13" pos:end="145:25"><name pos:start="145:13" pos:end="145:14">rn</name> <operator pos:start="145:16" pos:end="145:16">=</operator> <literal type="string" pos:start="145:18" pos:end="145:25">"VPEOpt"</literal></expr>;</expr_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        <default pos:start="149:9" pos:end="149:16">default:</default>

            <goto pos:start="151:13" pos:end="151:21">goto <name pos:start="151:18" pos:end="151:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="155:9" pos:end="155:14">break;</break>

    <case pos:start="157:5" pos:end="157:11">case <expr pos:start="157:10" pos:end="157:10"><literal type="number" pos:start="157:10" pos:end="157:10">2</literal></expr>:</case>

        <switch pos:start="159:9" pos:end="263:9">switch <condition pos:start="159:16" pos:end="159:20">(<expr pos:start="159:17" pos:end="159:19"><name pos:start="159:17" pos:end="159:19">sel</name></expr>)</condition> <block pos:start="159:22" pos:end="263:9">{<block_content pos:start="161:9" pos:end="261:21">

        <case pos:start="161:9" pos:end="161:15">case <expr pos:start="161:14" pos:end="161:14"><literal type="number" pos:start="161:14" pos:end="161:14">0</literal></expr>:</case>

            <expr_stmt pos:start="163:13" pos:end="166:0"><expr pos:start="163:13" pos:end="163:77"><call pos:start="163:13" pos:end="163:77"><name pos:start="163:13" pos:end="163:25">tcg_gen_ld_tl</name><argument_list pos:start="163:26" pos:end="163:77">(<argument pos:start="163:27" pos:end="163:29"><expr pos:start="163:27" pos:end="163:29"><name pos:start="163:27" pos:end="163:29">arg</name></expr></argument>, <argument pos:start="163:32" pos:end="163:38"><expr pos:start="163:32" pos:end="163:38"><name pos:start="163:32" pos:end="163:38">cpu_env</name></expr></argument>, <argument pos:start="163:41" pos:end="163:76"><expr pos:start="163:41" pos:end="163:76"><call pos:start="163:41" pos:end="163:76"><name pos:start="163:41" pos:end="163:48">offsetof</name><argument_list pos:start="163:49" pos:end="163:76">(<argument pos:start="163:50" pos:end="163:61"><expr pos:start="163:50" pos:end="163:61"><name pos:start="163:50" pos:end="163:61">CPUMIPSState</name></expr></argument>, <argument pos:start="163:64" pos:end="163:75"><expr pos:start="163:64" pos:end="163:75"><name pos:start="163:64" pos:end="163:75">CP0_EntryLo0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="165:1" pos:end="165:26">#<cpp:directive pos:start="165:2" pos:end="165:3">if</cpp:directive> <expr pos:start="165:5" pos:end="165:26"><call pos:start="165:5" pos:end="165:26"><name pos:start="165:5" pos:end="165:11">defined</name><argument_list pos:start="165:12" pos:end="165:26">(<argument pos:start="165:13" pos:end="165:25"><expr pos:start="165:13" pos:end="165:25"><name pos:start="165:13" pos:end="165:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="167:13" pos:end="182:0"><if pos:start="167:13" pos:end="182:0">if <condition pos:start="167:16" pos:end="167:25">(<expr pos:start="167:17" pos:end="167:24"><name pos:start="167:17" pos:end="167:24"><name pos:start="167:17" pos:end="167:19">ctx</name><operator pos:start="167:20" pos:end="167:21">-&gt;</operator><name pos:start="167:22" pos:end="167:24">rxi</name></name></expr>)</condition> <block pos:start="167:27" pos:end="182:0">{<block_content pos:start="169:17" pos:end="177:35">

                <decl_stmt pos:start="169:17" pos:end="169:42"><decl pos:start="169:17" pos:end="169:41"><type pos:start="169:17" pos:end="169:20"><name pos:start="169:17" pos:end="169:20">TCGv</name></type> <name pos:start="169:22" pos:end="169:24">tmp</name> <init pos:start="169:26" pos:end="169:41">= <expr pos:start="169:28" pos:end="169:41"><call pos:start="169:28" pos:end="169:41"><name pos:start="169:28" pos:end="169:39">tcg_temp_new</name><argument_list pos:start="169:40" pos:end="169:41">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:56"><expr pos:start="171:17" pos:end="171:55"><call pos:start="171:17" pos:end="171:55"><name pos:start="171:17" pos:end="171:31">tcg_gen_andi_tl</name><argument_list pos:start="171:32" pos:end="171:55">(<argument pos:start="171:33" pos:end="171:35"><expr pos:start="171:33" pos:end="171:35"><name pos:start="171:33" pos:end="171:35">tmp</name></expr></argument>, <argument pos:start="171:38" pos:end="171:40"><expr pos:start="171:38" pos:end="171:40"><name pos:start="171:38" pos:end="171:40">arg</name></expr></argument>, <argument pos:start="171:43" pos:end="171:54"><expr pos:start="171:43" pos:end="171:54"><operator pos:start="171:43" pos:end="171:43">(</operator><literal type="number" pos:start="171:44" pos:end="171:47">3ull</literal> <operator pos:start="171:49" pos:end="171:50">&lt;&lt;</operator> <literal type="number" pos:start="171:52" pos:end="171:53">62</literal><operator pos:start="171:54" pos:end="171:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:46"><expr pos:start="173:17" pos:end="173:45"><call pos:start="173:17" pos:end="173:45"><name pos:start="173:17" pos:end="173:31">tcg_gen_shri_tl</name><argument_list pos:start="173:32" pos:end="173:45">(<argument pos:start="173:33" pos:end="173:35"><expr pos:start="173:33" pos:end="173:35"><name pos:start="173:33" pos:end="173:35">tmp</name></expr></argument>, <argument pos:start="173:38" pos:end="173:40"><expr pos:start="173:38" pos:end="173:40"><name pos:start="173:38" pos:end="173:40">tmp</name></expr></argument>, <argument pos:start="173:43" pos:end="173:44"><expr pos:start="173:43" pos:end="173:44"><literal type="number" pos:start="173:43" pos:end="173:44">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:45"><expr pos:start="175:17" pos:end="175:44"><call pos:start="175:17" pos:end="175:44"><name pos:start="175:17" pos:end="175:29">tcg_gen_or_tl</name><argument_list pos:start="175:30" pos:end="175:44">(<argument pos:start="175:31" pos:end="175:33"><expr pos:start="175:31" pos:end="175:33"><name pos:start="175:31" pos:end="175:33">arg</name></expr></argument>, <argument pos:start="175:36" pos:end="175:38"><expr pos:start="175:36" pos:end="175:38"><name pos:start="175:36" pos:end="175:38">arg</name></expr></argument>, <argument pos:start="175:41" pos:end="175:43"><expr pos:start="175:41" pos:end="175:43"><name pos:start="175:41" pos:end="175:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:35"><expr pos:start="177:17" pos:end="177:34"><call pos:start="177:17" pos:end="177:34"><name pos:start="177:17" pos:end="177:29">tcg_temp_free</name><argument_list pos:start="177:30" pos:end="177:34">(<argument pos:start="177:31" pos:end="177:33"><expr pos:start="177:31" pos:end="177:33"><name pos:start="177:31" pos:end="177:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="181:1" pos:end="181:6">#<cpp:directive pos:start="181:2" pos:end="181:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="183:13" pos:end="183:40"><expr pos:start="183:13" pos:end="183:39"><call pos:start="183:13" pos:end="183:39"><name pos:start="183:13" pos:end="183:29">tcg_gen_ext32s_tl</name><argument_list pos:start="183:30" pos:end="183:39">(<argument pos:start="183:31" pos:end="183:33"><expr pos:start="183:31" pos:end="183:33"><name pos:start="183:31" pos:end="183:33">arg</name></expr></argument>, <argument pos:start="183:36" pos:end="183:38"><expr pos:start="183:36" pos:end="183:38"><name pos:start="183:36" pos:end="183:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:28"><expr pos:start="185:13" pos:end="185:27"><name pos:start="185:13" pos:end="185:14">rn</name> <operator pos:start="185:16" pos:end="185:16">=</operator> <literal type="string" pos:start="185:18" pos:end="185:27">"EntryLo0"</literal></expr>;</expr_stmt>

            <break pos:start="187:13" pos:end="187:18">break;</break>

        <case pos:start="189:9" pos:end="189:15">case <expr pos:start="189:14" pos:end="189:14"><literal type="number" pos:start="189:14" pos:end="189:14">1</literal></expr>:</case>

            <expr_stmt pos:start="191:13" pos:end="191:36"><expr pos:start="191:13" pos:end="191:35"><call pos:start="191:13" pos:end="191:35"><name pos:start="191:13" pos:end="191:22">check_insn</name><argument_list pos:start="191:23" pos:end="191:35">(<argument pos:start="191:24" pos:end="191:26"><expr pos:start="191:24" pos:end="191:26"><name pos:start="191:24" pos:end="191:26">ctx</name></expr></argument>, <argument pos:start="191:29" pos:end="191:34"><expr pos:start="191:29" pos:end="191:34"><name pos:start="191:29" pos:end="191:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:51"><expr pos:start="193:13" pos:end="193:50"><call pos:start="193:13" pos:end="193:50"><name pos:start="193:13" pos:end="193:36">gen_helper_mfc0_tcstatus</name><argument_list pos:start="193:37" pos:end="193:50">(<argument pos:start="193:38" pos:end="193:40"><expr pos:start="193:38" pos:end="193:40"><name pos:start="193:38" pos:end="193:40">arg</name></expr></argument>, <argument pos:start="193:43" pos:end="193:49"><expr pos:start="193:43" pos:end="193:49"><name pos:start="193:43" pos:end="193:49">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:28"><expr pos:start="195:13" pos:end="195:27"><name pos:start="195:13" pos:end="195:14">rn</name> <operator pos:start="195:16" pos:end="195:16">=</operator> <literal type="string" pos:start="195:18" pos:end="195:27">"TCStatus"</literal></expr>;</expr_stmt>

            <break pos:start="197:13" pos:end="197:18">break;</break>

        <case pos:start="199:9" pos:end="199:15">case <expr pos:start="199:14" pos:end="199:14"><literal type="number" pos:start="199:14" pos:end="199:14">2</literal></expr>:</case>

            <expr_stmt pos:start="201:13" pos:end="201:36"><expr pos:start="201:13" pos:end="201:35"><call pos:start="201:13" pos:end="201:35"><name pos:start="201:13" pos:end="201:22">check_insn</name><argument_list pos:start="201:23" pos:end="201:35">(<argument pos:start="201:24" pos:end="201:26"><expr pos:start="201:24" pos:end="201:26"><name pos:start="201:24" pos:end="201:26">ctx</name></expr></argument>, <argument pos:start="201:29" pos:end="201:34"><expr pos:start="201:29" pos:end="201:34"><name pos:start="201:29" pos:end="201:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:49"><expr pos:start="203:13" pos:end="203:48"><call pos:start="203:13" pos:end="203:48"><name pos:start="203:13" pos:end="203:34">gen_helper_mfc0_tcbind</name><argument_list pos:start="203:35" pos:end="203:48">(<argument pos:start="203:36" pos:end="203:38"><expr pos:start="203:36" pos:end="203:38"><name pos:start="203:36" pos:end="203:38">arg</name></expr></argument>, <argument pos:start="203:41" pos:end="203:47"><expr pos:start="203:41" pos:end="203:47"><name pos:start="203:41" pos:end="203:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:26"><expr pos:start="205:13" pos:end="205:25"><name pos:start="205:13" pos:end="205:14">rn</name> <operator pos:start="205:16" pos:end="205:16">=</operator> <literal type="string" pos:start="205:18" pos:end="205:25">"TCBind"</literal></expr>;</expr_stmt>

            <break pos:start="207:13" pos:end="207:18">break;</break>

        <case pos:start="209:9" pos:end="209:15">case <expr pos:start="209:14" pos:end="209:14"><literal type="number" pos:start="209:14" pos:end="209:14">3</literal></expr>:</case>

            <expr_stmt pos:start="211:13" pos:end="211:36"><expr pos:start="211:13" pos:end="211:35"><call pos:start="211:13" pos:end="211:35"><name pos:start="211:13" pos:end="211:22">check_insn</name><argument_list pos:start="211:23" pos:end="211:35">(<argument pos:start="211:24" pos:end="211:26"><expr pos:start="211:24" pos:end="211:26"><name pos:start="211:24" pos:end="211:26">ctx</name></expr></argument>, <argument pos:start="211:29" pos:end="211:34"><expr pos:start="211:29" pos:end="211:34"><name pos:start="211:29" pos:end="211:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:52"><expr pos:start="213:13" pos:end="213:51"><call pos:start="213:13" pos:end="213:51"><name pos:start="213:13" pos:end="213:37">gen_helper_mfc0_tcrestart</name><argument_list pos:start="213:38" pos:end="213:51">(<argument pos:start="213:39" pos:end="213:41"><expr pos:start="213:39" pos:end="213:41"><name pos:start="213:39" pos:end="213:41">arg</name></expr></argument>, <argument pos:start="213:44" pos:end="213:50"><expr pos:start="213:44" pos:end="213:50"><name pos:start="213:44" pos:end="213:50">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:29"><expr pos:start="215:13" pos:end="215:28"><name pos:start="215:13" pos:end="215:14">rn</name> <operator pos:start="215:16" pos:end="215:16">=</operator> <literal type="string" pos:start="215:18" pos:end="215:28">"TCRestart"</literal></expr>;</expr_stmt>

            <break pos:start="217:13" pos:end="217:18">break;</break>

        <case pos:start="219:9" pos:end="219:15">case <expr pos:start="219:14" pos:end="219:14"><literal type="number" pos:start="219:14" pos:end="219:14">4</literal></expr>:</case>

            <expr_stmt pos:start="221:13" pos:end="221:36"><expr pos:start="221:13" pos:end="221:35"><call pos:start="221:13" pos:end="221:35"><name pos:start="221:13" pos:end="221:22">check_insn</name><argument_list pos:start="221:23" pos:end="221:35">(<argument pos:start="221:24" pos:end="221:26"><expr pos:start="221:24" pos:end="221:26"><name pos:start="221:24" pos:end="221:26">ctx</name></expr></argument>, <argument pos:start="221:29" pos:end="221:34"><expr pos:start="221:29" pos:end="221:34"><name pos:start="221:29" pos:end="221:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:49"><expr pos:start="223:13" pos:end="223:48"><call pos:start="223:13" pos:end="223:48"><name pos:start="223:13" pos:end="223:34">gen_helper_mfc0_tchalt</name><argument_list pos:start="223:35" pos:end="223:48">(<argument pos:start="223:36" pos:end="223:38"><expr pos:start="223:36" pos:end="223:38"><name pos:start="223:36" pos:end="223:38">arg</name></expr></argument>, <argument pos:start="223:41" pos:end="223:47"><expr pos:start="223:41" pos:end="223:47"><name pos:start="223:41" pos:end="223:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:26"><expr pos:start="225:13" pos:end="225:25"><name pos:start="225:13" pos:end="225:14">rn</name> <operator pos:start="225:16" pos:end="225:16">=</operator> <literal type="string" pos:start="225:18" pos:end="225:25">"TCHalt"</literal></expr>;</expr_stmt>

            <break pos:start="227:13" pos:end="227:18">break;</break>

        <case pos:start="229:9" pos:end="229:15">case <expr pos:start="229:14" pos:end="229:14"><literal type="number" pos:start="229:14" pos:end="229:14">5</literal></expr>:</case>

            <expr_stmt pos:start="231:13" pos:end="231:36"><expr pos:start="231:13" pos:end="231:35"><call pos:start="231:13" pos:end="231:35"><name pos:start="231:13" pos:end="231:22">check_insn</name><argument_list pos:start="231:23" pos:end="231:35">(<argument pos:start="231:24" pos:end="231:26"><expr pos:start="231:24" pos:end="231:26"><name pos:start="231:24" pos:end="231:26">ctx</name></expr></argument>, <argument pos:start="231:29" pos:end="231:34"><expr pos:start="231:29" pos:end="231:34"><name pos:start="231:29" pos:end="231:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:52"><expr pos:start="233:13" pos:end="233:51"><call pos:start="233:13" pos:end="233:51"><name pos:start="233:13" pos:end="233:37">gen_helper_mfc0_tccontext</name><argument_list pos:start="233:38" pos:end="233:51">(<argument pos:start="233:39" pos:end="233:41"><expr pos:start="233:39" pos:end="233:41"><name pos:start="233:39" pos:end="233:41">arg</name></expr></argument>, <argument pos:start="233:44" pos:end="233:50"><expr pos:start="233:44" pos:end="233:50"><name pos:start="233:44" pos:end="233:50">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:29"><expr pos:start="235:13" pos:end="235:28"><name pos:start="235:13" pos:end="235:14">rn</name> <operator pos:start="235:16" pos:end="235:16">=</operator> <literal type="string" pos:start="235:18" pos:end="235:28">"TCContext"</literal></expr>;</expr_stmt>

            <break pos:start="237:13" pos:end="237:18">break;</break>

        <case pos:start="239:9" pos:end="239:15">case <expr pos:start="239:14" pos:end="239:14"><literal type="number" pos:start="239:14" pos:end="239:14">6</literal></expr>:</case>

            <expr_stmt pos:start="241:13" pos:end="241:36"><expr pos:start="241:13" pos:end="241:35"><call pos:start="241:13" pos:end="241:35"><name pos:start="241:13" pos:end="241:22">check_insn</name><argument_list pos:start="241:23" pos:end="241:35">(<argument pos:start="241:24" pos:end="241:26"><expr pos:start="241:24" pos:end="241:26"><name pos:start="241:24" pos:end="241:26">ctx</name></expr></argument>, <argument pos:start="241:29" pos:end="241:34"><expr pos:start="241:29" pos:end="241:34"><name pos:start="241:29" pos:end="241:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:53"><expr pos:start="243:13" pos:end="243:52"><call pos:start="243:13" pos:end="243:52"><name pos:start="243:13" pos:end="243:38">gen_helper_mfc0_tcschedule</name><argument_list pos:start="243:39" pos:end="243:52">(<argument pos:start="243:40" pos:end="243:42"><expr pos:start="243:40" pos:end="243:42"><name pos:start="243:40" pos:end="243:42">arg</name></expr></argument>, <argument pos:start="243:45" pos:end="243:51"><expr pos:start="243:45" pos:end="243:51"><name pos:start="243:45" pos:end="243:51">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:30"><expr pos:start="245:13" pos:end="245:29"><name pos:start="245:13" pos:end="245:14">rn</name> <operator pos:start="245:16" pos:end="245:16">=</operator> <literal type="string" pos:start="245:18" pos:end="245:29">"TCSchedule"</literal></expr>;</expr_stmt>

            <break pos:start="247:13" pos:end="247:18">break;</break>

        <case pos:start="249:9" pos:end="249:15">case <expr pos:start="249:14" pos:end="249:14"><literal type="number" pos:start="249:14" pos:end="249:14">7</literal></expr>:</case>

            <expr_stmt pos:start="251:13" pos:end="251:36"><expr pos:start="251:13" pos:end="251:35"><call pos:start="251:13" pos:end="251:35"><name pos:start="251:13" pos:end="251:22">check_insn</name><argument_list pos:start="251:23" pos:end="251:35">(<argument pos:start="251:24" pos:end="251:26"><expr pos:start="251:24" pos:end="251:26"><name pos:start="251:24" pos:end="251:26">ctx</name></expr></argument>, <argument pos:start="251:29" pos:end="251:34"><expr pos:start="251:29" pos:end="251:34"><name pos:start="251:29" pos:end="251:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:54"><expr pos:start="253:13" pos:end="253:53"><call pos:start="253:13" pos:end="253:53"><name pos:start="253:13" pos:end="253:39">gen_helper_mfc0_tcschefback</name><argument_list pos:start="253:40" pos:end="253:53">(<argument pos:start="253:41" pos:end="253:43"><expr pos:start="253:41" pos:end="253:43"><name pos:start="253:41" pos:end="253:43">arg</name></expr></argument>, <argument pos:start="253:46" pos:end="253:52"><expr pos:start="253:46" pos:end="253:52"><name pos:start="253:46" pos:end="253:52">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:31"><expr pos:start="255:13" pos:end="255:30"><name pos:start="255:13" pos:end="255:14">rn</name> <operator pos:start="255:16" pos:end="255:16">=</operator> <literal type="string" pos:start="255:18" pos:end="255:30">"TCScheFBack"</literal></expr>;</expr_stmt>

            <break pos:start="257:13" pos:end="257:18">break;</break>

        <default pos:start="259:9" pos:end="259:16">default:</default>

            <goto pos:start="261:13" pos:end="261:21">goto <name pos:start="261:18" pos:end="261:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="265:9" pos:end="265:14">break;</break>

    <case pos:start="267:5" pos:end="267:11">case <expr pos:start="267:10" pos:end="267:10"><literal type="number" pos:start="267:10" pos:end="267:10">3</literal></expr>:</case>

        <switch pos:start="269:9" pos:end="303:9">switch <condition pos:start="269:16" pos:end="269:20">(<expr pos:start="269:17" pos:end="269:19"><name pos:start="269:17" pos:end="269:19">sel</name></expr>)</condition> <block pos:start="269:22" pos:end="303:9">{<block_content pos:start="271:9" pos:end="301:21">

        <case pos:start="271:9" pos:end="271:15">case <expr pos:start="271:14" pos:end="271:14"><literal type="number" pos:start="271:14" pos:end="271:14">0</literal></expr>:</case>

            <expr_stmt pos:start="273:13" pos:end="276:0"><expr pos:start="273:13" pos:end="273:77"><call pos:start="273:13" pos:end="273:77"><name pos:start="273:13" pos:end="273:25">tcg_gen_ld_tl</name><argument_list pos:start="273:26" pos:end="273:77">(<argument pos:start="273:27" pos:end="273:29"><expr pos:start="273:27" pos:end="273:29"><name pos:start="273:27" pos:end="273:29">arg</name></expr></argument>, <argument pos:start="273:32" pos:end="273:38"><expr pos:start="273:32" pos:end="273:38"><name pos:start="273:32" pos:end="273:38">cpu_env</name></expr></argument>, <argument pos:start="273:41" pos:end="273:76"><expr pos:start="273:41" pos:end="273:76"><call pos:start="273:41" pos:end="273:76"><name pos:start="273:41" pos:end="273:48">offsetof</name><argument_list pos:start="273:49" pos:end="273:76">(<argument pos:start="273:50" pos:end="273:61"><expr pos:start="273:50" pos:end="273:61"><name pos:start="273:50" pos:end="273:61">CPUMIPSState</name></expr></argument>, <argument pos:start="273:64" pos:end="273:75"><expr pos:start="273:64" pos:end="273:75"><name pos:start="273:64" pos:end="273:75">CP0_EntryLo1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="275:1" pos:end="275:26">#<cpp:directive pos:start="275:2" pos:end="275:3">if</cpp:directive> <expr pos:start="275:5" pos:end="275:26"><call pos:start="275:5" pos:end="275:26"><name pos:start="275:5" pos:end="275:11">defined</name><argument_list pos:start="275:12" pos:end="275:26">(<argument pos:start="275:13" pos:end="275:25"><expr pos:start="275:13" pos:end="275:25"><name pos:start="275:13" pos:end="275:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="277:13" pos:end="292:0"><if pos:start="277:13" pos:end="292:0">if <condition pos:start="277:16" pos:end="277:25">(<expr pos:start="277:17" pos:end="277:24"><name pos:start="277:17" pos:end="277:24"><name pos:start="277:17" pos:end="277:19">ctx</name><operator pos:start="277:20" pos:end="277:21">-&gt;</operator><name pos:start="277:22" pos:end="277:24">rxi</name></name></expr>)</condition> <block pos:start="277:27" pos:end="292:0">{<block_content pos:start="279:17" pos:end="287:35">

                <decl_stmt pos:start="279:17" pos:end="279:42"><decl pos:start="279:17" pos:end="279:41"><type pos:start="279:17" pos:end="279:20"><name pos:start="279:17" pos:end="279:20">TCGv</name></type> <name pos:start="279:22" pos:end="279:24">tmp</name> <init pos:start="279:26" pos:end="279:41">= <expr pos:start="279:28" pos:end="279:41"><call pos:start="279:28" pos:end="279:41"><name pos:start="279:28" pos:end="279:39">tcg_temp_new</name><argument_list pos:start="279:40" pos:end="279:41">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="281:17" pos:end="281:56"><expr pos:start="281:17" pos:end="281:55"><call pos:start="281:17" pos:end="281:55"><name pos:start="281:17" pos:end="281:31">tcg_gen_andi_tl</name><argument_list pos:start="281:32" pos:end="281:55">(<argument pos:start="281:33" pos:end="281:35"><expr pos:start="281:33" pos:end="281:35"><name pos:start="281:33" pos:end="281:35">tmp</name></expr></argument>, <argument pos:start="281:38" pos:end="281:40"><expr pos:start="281:38" pos:end="281:40"><name pos:start="281:38" pos:end="281:40">arg</name></expr></argument>, <argument pos:start="281:43" pos:end="281:54"><expr pos:start="281:43" pos:end="281:54"><operator pos:start="281:43" pos:end="281:43">(</operator><literal type="number" pos:start="281:44" pos:end="281:47">3ull</literal> <operator pos:start="281:49" pos:end="281:50">&lt;&lt;</operator> <literal type="number" pos:start="281:52" pos:end="281:53">62</literal><operator pos:start="281:54" pos:end="281:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="283:17" pos:end="283:46"><expr pos:start="283:17" pos:end="283:45"><call pos:start="283:17" pos:end="283:45"><name pos:start="283:17" pos:end="283:31">tcg_gen_shri_tl</name><argument_list pos:start="283:32" pos:end="283:45">(<argument pos:start="283:33" pos:end="283:35"><expr pos:start="283:33" pos:end="283:35"><name pos:start="283:33" pos:end="283:35">tmp</name></expr></argument>, <argument pos:start="283:38" pos:end="283:40"><expr pos:start="283:38" pos:end="283:40"><name pos:start="283:38" pos:end="283:40">tmp</name></expr></argument>, <argument pos:start="283:43" pos:end="283:44"><expr pos:start="283:43" pos:end="283:44"><literal type="number" pos:start="283:43" pos:end="283:44">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="285:17" pos:end="285:45"><expr pos:start="285:17" pos:end="285:44"><call pos:start="285:17" pos:end="285:44"><name pos:start="285:17" pos:end="285:29">tcg_gen_or_tl</name><argument_list pos:start="285:30" pos:end="285:44">(<argument pos:start="285:31" pos:end="285:33"><expr pos:start="285:31" pos:end="285:33"><name pos:start="285:31" pos:end="285:33">arg</name></expr></argument>, <argument pos:start="285:36" pos:end="285:38"><expr pos:start="285:36" pos:end="285:38"><name pos:start="285:36" pos:end="285:38">arg</name></expr></argument>, <argument pos:start="285:41" pos:end="285:43"><expr pos:start="285:41" pos:end="285:43"><name pos:start="285:41" pos:end="285:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:35"><expr pos:start="287:17" pos:end="287:34"><call pos:start="287:17" pos:end="287:34"><name pos:start="287:17" pos:end="287:29">tcg_temp_free</name><argument_list pos:start="287:30" pos:end="287:34">(<argument pos:start="287:31" pos:end="287:33"><expr pos:start="287:31" pos:end="287:33"><name pos:start="287:31" pos:end="287:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="291:1" pos:end="291:6">#<cpp:directive pos:start="291:2" pos:end="291:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="293:13" pos:end="293:40"><expr pos:start="293:13" pos:end="293:39"><call pos:start="293:13" pos:end="293:39"><name pos:start="293:13" pos:end="293:29">tcg_gen_ext32s_tl</name><argument_list pos:start="293:30" pos:end="293:39">(<argument pos:start="293:31" pos:end="293:33"><expr pos:start="293:31" pos:end="293:33"><name pos:start="293:31" pos:end="293:33">arg</name></expr></argument>, <argument pos:start="293:36" pos:end="293:38"><expr pos:start="293:36" pos:end="293:38"><name pos:start="293:36" pos:end="293:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:28"><expr pos:start="295:13" pos:end="295:27"><name pos:start="295:13" pos:end="295:14">rn</name> <operator pos:start="295:16" pos:end="295:16">=</operator> <literal type="string" pos:start="295:18" pos:end="295:27">"EntryLo1"</literal></expr>;</expr_stmt>

            <break pos:start="297:13" pos:end="297:18">break;</break>

        <default pos:start="299:9" pos:end="299:16">default:</default>

            <goto pos:start="301:13" pos:end="301:21">goto <name pos:start="301:18" pos:end="301:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="305:9" pos:end="305:14">break;</break>

    <case pos:start="307:5" pos:end="307:11">case <expr pos:start="307:10" pos:end="307:10"><literal type="number" pos:start="307:10" pos:end="307:10">4</literal></expr>:</case>

        <switch pos:start="309:9" pos:end="355:9">switch <condition pos:start="309:16" pos:end="309:20">(<expr pos:start="309:17" pos:end="309:19"><name pos:start="309:17" pos:end="309:19">sel</name></expr>)</condition> <block pos:start="309:22" pos:end="355:9">{<block_content pos:start="311:9" pos:end="353:21">

        <case pos:start="311:9" pos:end="311:15">case <expr pos:start="311:14" pos:end="311:14"><literal type="number" pos:start="311:14" pos:end="311:14">0</literal></expr>:</case>

            <expr_stmt pos:start="313:13" pos:end="313:77"><expr pos:start="313:13" pos:end="313:76"><call pos:start="313:13" pos:end="313:76"><name pos:start="313:13" pos:end="313:25">tcg_gen_ld_tl</name><argument_list pos:start="313:26" pos:end="313:76">(<argument pos:start="313:27" pos:end="313:29"><expr pos:start="313:27" pos:end="313:29"><name pos:start="313:27" pos:end="313:29">arg</name></expr></argument>, <argument pos:start="313:32" pos:end="313:38"><expr pos:start="313:32" pos:end="313:38"><name pos:start="313:32" pos:end="313:38">cpu_env</name></expr></argument>, <argument pos:start="313:41" pos:end="313:75"><expr pos:start="313:41" pos:end="313:75"><call pos:start="313:41" pos:end="313:75"><name pos:start="313:41" pos:end="313:48">offsetof</name><argument_list pos:start="313:49" pos:end="313:75">(<argument pos:start="313:50" pos:end="313:61"><expr pos:start="313:50" pos:end="313:61"><name pos:start="313:50" pos:end="313:61">CPUMIPSState</name></expr></argument>, <argument pos:start="313:64" pos:end="313:74"><expr pos:start="313:64" pos:end="313:74"><name pos:start="313:64" pos:end="313:74">CP0_Context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:40"><expr pos:start="315:13" pos:end="315:39"><call pos:start="315:13" pos:end="315:39"><name pos:start="315:13" pos:end="315:29">tcg_gen_ext32s_tl</name><argument_list pos:start="315:30" pos:end="315:39">(<argument pos:start="315:31" pos:end="315:33"><expr pos:start="315:31" pos:end="315:33"><name pos:start="315:31" pos:end="315:33">arg</name></expr></argument>, <argument pos:start="315:36" pos:end="315:38"><expr pos:start="315:36" pos:end="315:38"><name pos:start="315:36" pos:end="315:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="317:13" pos:end="317:27"><expr pos:start="317:13" pos:end="317:26"><name pos:start="317:13" pos:end="317:14">rn</name> <operator pos:start="317:16" pos:end="317:16">=</operator> <literal type="string" pos:start="317:18" pos:end="317:26">"Context"</literal></expr>;</expr_stmt>

            <break pos:start="319:13" pos:end="319:18">break;</break>

        <case pos:start="321:9" pos:end="321:15">case <expr pos:start="321:14" pos:end="321:14"><literal type="number" pos:start="321:14" pos:end="321:14">1</literal></expr>:</case>

<comment type="line" pos:start="323:1" pos:end="323:69">//            gen_helper_mfc0_contextconfig(arg); /* SmartMIPS ASE */</comment>

            <expr_stmt pos:start="325:13" pos:end="325:33"><expr pos:start="325:13" pos:end="325:32"><name pos:start="325:13" pos:end="325:14">rn</name> <operator pos:start="325:16" pos:end="325:16">=</operator> <literal type="string" pos:start="325:18" pos:end="325:32">"ContextConfig"</literal></expr>;</expr_stmt>

            <goto pos:start="327:13" pos:end="327:21">goto <name pos:start="327:18" pos:end="327:20">die</name>;</goto>

<comment type="line" pos:start="329:1" pos:end="329:20">//            break;</comment>

        <case pos:start="331:9" pos:end="331:15">case <expr pos:start="331:14" pos:end="331:14"><literal type="number" pos:start="331:14" pos:end="331:14">2</literal></expr>:</case>

            <if_stmt pos:start="333:13" pos:end="347:13"><if pos:start="333:13" pos:end="343:13">if <condition pos:start="333:16" pos:end="333:26">(<expr pos:start="333:17" pos:end="333:25"><name pos:start="333:17" pos:end="333:25"><name pos:start="333:17" pos:end="333:19">ctx</name><operator pos:start="333:20" pos:end="333:21">-&gt;</operator><name pos:start="333:22" pos:end="333:25">ulri</name></name></expr>)</condition> <block pos:start="333:28" pos:end="343:13">{<block_content pos:start="335:17" pos:end="341:33">

                <expr_stmt pos:start="335:17" pos:end="339:68"><expr pos:start="335:17" pos:end="339:67"><call pos:start="335:17" pos:end="339:67"><name pos:start="335:17" pos:end="335:32">tcg_gen_ld32s_tl</name><argument_list pos:start="335:33" pos:end="339:67">(<argument pos:start="335:34" pos:end="335:36"><expr pos:start="335:34" pos:end="335:36"><name pos:start="335:34" pos:end="335:36">arg</name></expr></argument>, <argument pos:start="335:39" pos:end="335:45"><expr pos:start="335:39" pos:end="335:45"><name pos:start="335:39" pos:end="335:45">cpu_env</name></expr></argument>,

                                 <argument pos:start="337:34" pos:end="339:66"><expr pos:start="337:34" pos:end="339:66"><call pos:start="337:34" pos:end="339:66"><name pos:start="337:34" pos:end="337:41">offsetof</name><argument_list pos:start="337:42" pos:end="339:66">(<argument pos:start="337:43" pos:end="337:54"><expr pos:start="337:43" pos:end="337:54"><name pos:start="337:43" pos:end="337:54">CPUMIPSState</name></expr></argument>,

                                          <argument pos:start="339:43" pos:end="339:65"><expr pos:start="339:43" pos:end="339:65"><name pos:start="339:43" pos:end="339:65"><name pos:start="339:43" pos:end="339:51">active_tc</name><operator pos:start="339:52" pos:end="339:52">.</operator><name pos:start="339:53" pos:end="339:65">CP0_UserLocal</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="341:17" pos:end="341:33"><expr pos:start="341:17" pos:end="341:32"><name pos:start="341:17" pos:end="341:18">rn</name> <operator pos:start="341:20" pos:end="341:20">=</operator> <literal type="string" pos:start="341:22" pos:end="341:32">"UserLocal"</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="343:15" pos:end="347:13">else <block pos:start="343:20" pos:end="347:13">{<block_content pos:start="345:17" pos:end="345:40">

                <expr_stmt pos:start="345:17" pos:end="345:40"><expr pos:start="345:17" pos:end="345:39"><call pos:start="345:17" pos:end="345:39"><name pos:start="345:17" pos:end="345:31">tcg_gen_movi_tl</name><argument_list pos:start="345:32" pos:end="345:39">(<argument pos:start="345:33" pos:end="345:35"><expr pos:start="345:33" pos:end="345:35"><name pos:start="345:33" pos:end="345:35">arg</name></expr></argument>, <argument pos:start="345:38" pos:end="345:38"><expr pos:start="345:38" pos:end="345:38"><literal type="number" pos:start="345:38" pos:end="345:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="349:13" pos:end="349:18">break;</break>

        <default pos:start="351:9" pos:end="351:16">default:</default>

            <goto pos:start="353:13" pos:end="353:21">goto <name pos:start="353:18" pos:end="353:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="357:9" pos:end="357:14">break;</break>

    <case pos:start="359:5" pos:end="359:11">case <expr pos:start="359:10" pos:end="359:10"><literal type="number" pos:start="359:10" pos:end="359:10">5</literal></expr>:</case>

        <switch pos:start="361:9" pos:end="385:9">switch <condition pos:start="361:16" pos:end="361:20">(<expr pos:start="361:17" pos:end="361:19"><name pos:start="361:17" pos:end="361:19">sel</name></expr>)</condition> <block pos:start="361:22" pos:end="385:9">{<block_content pos:start="363:9" pos:end="383:21">

        <case pos:start="363:9" pos:end="363:15">case <expr pos:start="363:14" pos:end="363:14"><literal type="number" pos:start="363:14" pos:end="363:14">0</literal></expr>:</case>

            <expr_stmt pos:start="365:13" pos:end="365:71"><expr pos:start="365:13" pos:end="365:70"><call pos:start="365:13" pos:end="365:70"><name pos:start="365:13" pos:end="365:27">gen_mfc0_load32</name><argument_list pos:start="365:28" pos:end="365:70">(<argument pos:start="365:29" pos:end="365:31"><expr pos:start="365:29" pos:end="365:31"><name pos:start="365:29" pos:end="365:31">arg</name></expr></argument>, <argument pos:start="365:34" pos:end="365:69"><expr pos:start="365:34" pos:end="365:69"><call pos:start="365:34" pos:end="365:69"><name pos:start="365:34" pos:end="365:41">offsetof</name><argument_list pos:start="365:42" pos:end="365:69">(<argument pos:start="365:43" pos:end="365:54"><expr pos:start="365:43" pos:end="365:54"><name pos:start="365:43" pos:end="365:54">CPUMIPSState</name></expr></argument>, <argument pos:start="365:57" pos:end="365:68"><expr pos:start="365:57" pos:end="365:68"><name pos:start="365:57" pos:end="365:68">CP0_PageMask</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:28"><expr pos:start="367:13" pos:end="367:27"><name pos:start="367:13" pos:end="367:14">rn</name> <operator pos:start="367:16" pos:end="367:16">=</operator> <literal type="string" pos:start="367:18" pos:end="367:27">"PageMask"</literal></expr>;</expr_stmt>

            <break pos:start="369:13" pos:end="369:18">break;</break>

        <case pos:start="371:9" pos:end="371:15">case <expr pos:start="371:14" pos:end="371:14"><literal type="number" pos:start="371:14" pos:end="371:14">1</literal></expr>:</case>

            <expr_stmt pos:start="373:13" pos:end="373:42"><expr pos:start="373:13" pos:end="373:41"><call pos:start="373:13" pos:end="373:41"><name pos:start="373:13" pos:end="373:22">check_insn</name><argument_list pos:start="373:23" pos:end="373:41">(<argument pos:start="373:24" pos:end="373:26"><expr pos:start="373:24" pos:end="373:26"><name pos:start="373:24" pos:end="373:26">ctx</name></expr></argument>, <argument pos:start="373:29" pos:end="373:40"><expr pos:start="373:29" pos:end="373:40"><name pos:start="373:29" pos:end="373:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="375:13" pos:end="375:72"><expr pos:start="375:13" pos:end="375:71"><call pos:start="375:13" pos:end="375:71"><name pos:start="375:13" pos:end="375:27">gen_mfc0_load32</name><argument_list pos:start="375:28" pos:end="375:71">(<argument pos:start="375:29" pos:end="375:31"><expr pos:start="375:29" pos:end="375:31"><name pos:start="375:29" pos:end="375:31">arg</name></expr></argument>, <argument pos:start="375:34" pos:end="375:70"><expr pos:start="375:34" pos:end="375:70"><call pos:start="375:34" pos:end="375:70"><name pos:start="375:34" pos:end="375:41">offsetof</name><argument_list pos:start="375:42" pos:end="375:70">(<argument pos:start="375:43" pos:end="375:54"><expr pos:start="375:43" pos:end="375:54"><name pos:start="375:43" pos:end="375:54">CPUMIPSState</name></expr></argument>, <argument pos:start="375:57" pos:end="375:69"><expr pos:start="375:57" pos:end="375:69"><name pos:start="375:57" pos:end="375:69">CP0_PageGrain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="377:13" pos:end="377:29"><expr pos:start="377:13" pos:end="377:28"><name pos:start="377:13" pos:end="377:14">rn</name> <operator pos:start="377:16" pos:end="377:16">=</operator> <literal type="string" pos:start="377:18" pos:end="377:28">"PageGrain"</literal></expr>;</expr_stmt>

            <break pos:start="379:13" pos:end="379:18">break;</break>

        <default pos:start="381:9" pos:end="381:16">default:</default>

            <goto pos:start="383:13" pos:end="383:21">goto <name pos:start="383:18" pos:end="383:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="387:9" pos:end="387:14">break;</break>

    <case pos:start="389:5" pos:end="389:11">case <expr pos:start="389:10" pos:end="389:10"><literal type="number" pos:start="389:10" pos:end="389:10">6</literal></expr>:</case>

        <switch pos:start="391:9" pos:end="455:9">switch <condition pos:start="391:16" pos:end="391:20">(<expr pos:start="391:17" pos:end="391:19"><name pos:start="391:17" pos:end="391:19">sel</name></expr>)</condition> <block pos:start="391:22" pos:end="455:9">{<block_content pos:start="393:9" pos:end="453:21">

        <case pos:start="393:9" pos:end="393:15">case <expr pos:start="393:14" pos:end="393:14"><literal type="number" pos:start="393:14" pos:end="393:14">0</literal></expr>:</case>

            <expr_stmt pos:start="395:13" pos:end="395:68"><expr pos:start="395:13" pos:end="395:67"><call pos:start="395:13" pos:end="395:67"><name pos:start="395:13" pos:end="395:27">gen_mfc0_load32</name><argument_list pos:start="395:28" pos:end="395:67">(<argument pos:start="395:29" pos:end="395:31"><expr pos:start="395:29" pos:end="395:31"><name pos:start="395:29" pos:end="395:31">arg</name></expr></argument>, <argument pos:start="395:34" pos:end="395:66"><expr pos:start="395:34" pos:end="395:66"><call pos:start="395:34" pos:end="395:66"><name pos:start="395:34" pos:end="395:41">offsetof</name><argument_list pos:start="395:42" pos:end="395:66">(<argument pos:start="395:43" pos:end="395:54"><expr pos:start="395:43" pos:end="395:54"><name pos:start="395:43" pos:end="395:54">CPUMIPSState</name></expr></argument>, <argument pos:start="395:57" pos:end="395:65"><expr pos:start="395:57" pos:end="395:65"><name pos:start="395:57" pos:end="395:65">CP0_Wired</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="397:13" pos:end="397:25"><expr pos:start="397:13" pos:end="397:24"><name pos:start="397:13" pos:end="397:14">rn</name> <operator pos:start="397:16" pos:end="397:16">=</operator> <literal type="string" pos:start="397:18" pos:end="397:24">"Wired"</literal></expr>;</expr_stmt>

            <break pos:start="399:13" pos:end="399:18">break;</break>

        <case pos:start="401:9" pos:end="401:15">case <expr pos:start="401:14" pos:end="401:14"><literal type="number" pos:start="401:14" pos:end="401:14">1</literal></expr>:</case>

            <expr_stmt pos:start="403:13" pos:end="403:42"><expr pos:start="403:13" pos:end="403:41"><call pos:start="403:13" pos:end="403:41"><name pos:start="403:13" pos:end="403:22">check_insn</name><argument_list pos:start="403:23" pos:end="403:41">(<argument pos:start="403:24" pos:end="403:26"><expr pos:start="403:24" pos:end="403:26"><name pos:start="403:24" pos:end="403:26">ctx</name></expr></argument>, <argument pos:start="403:29" pos:end="403:40"><expr pos:start="403:29" pos:end="403:40"><name pos:start="403:29" pos:end="403:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="405:13" pos:end="405:71"><expr pos:start="405:13" pos:end="405:70"><call pos:start="405:13" pos:end="405:70"><name pos:start="405:13" pos:end="405:27">gen_mfc0_load32</name><argument_list pos:start="405:28" pos:end="405:70">(<argument pos:start="405:29" pos:end="405:31"><expr pos:start="405:29" pos:end="405:31"><name pos:start="405:29" pos:end="405:31">arg</name></expr></argument>, <argument pos:start="405:34" pos:end="405:69"><expr pos:start="405:34" pos:end="405:69"><call pos:start="405:34" pos:end="405:69"><name pos:start="405:34" pos:end="405:41">offsetof</name><argument_list pos:start="405:42" pos:end="405:69">(<argument pos:start="405:43" pos:end="405:54"><expr pos:start="405:43" pos:end="405:54"><name pos:start="405:43" pos:end="405:54">CPUMIPSState</name></expr></argument>, <argument pos:start="405:57" pos:end="405:68"><expr pos:start="405:57" pos:end="405:68"><name pos:start="405:57" pos:end="405:68">CP0_SRSConf0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="407:13" pos:end="407:28"><expr pos:start="407:13" pos:end="407:27"><name pos:start="407:13" pos:end="407:14">rn</name> <operator pos:start="407:16" pos:end="407:16">=</operator> <literal type="string" pos:start="407:18" pos:end="407:27">"SRSConf0"</literal></expr>;</expr_stmt>

            <break pos:start="409:13" pos:end="409:18">break;</break>

        <case pos:start="411:9" pos:end="411:15">case <expr pos:start="411:14" pos:end="411:14"><literal type="number" pos:start="411:14" pos:end="411:14">2</literal></expr>:</case>

            <expr_stmt pos:start="413:13" pos:end="413:42"><expr pos:start="413:13" pos:end="413:41"><call pos:start="413:13" pos:end="413:41"><name pos:start="413:13" pos:end="413:22">check_insn</name><argument_list pos:start="413:23" pos:end="413:41">(<argument pos:start="413:24" pos:end="413:26"><expr pos:start="413:24" pos:end="413:26"><name pos:start="413:24" pos:end="413:26">ctx</name></expr></argument>, <argument pos:start="413:29" pos:end="413:40"><expr pos:start="413:29" pos:end="413:40"><name pos:start="413:29" pos:end="413:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="415:13" pos:end="415:71"><expr pos:start="415:13" pos:end="415:70"><call pos:start="415:13" pos:end="415:70"><name pos:start="415:13" pos:end="415:27">gen_mfc0_load32</name><argument_list pos:start="415:28" pos:end="415:70">(<argument pos:start="415:29" pos:end="415:31"><expr pos:start="415:29" pos:end="415:31"><name pos:start="415:29" pos:end="415:31">arg</name></expr></argument>, <argument pos:start="415:34" pos:end="415:69"><expr pos:start="415:34" pos:end="415:69"><call pos:start="415:34" pos:end="415:69"><name pos:start="415:34" pos:end="415:41">offsetof</name><argument_list pos:start="415:42" pos:end="415:69">(<argument pos:start="415:43" pos:end="415:54"><expr pos:start="415:43" pos:end="415:54"><name pos:start="415:43" pos:end="415:54">CPUMIPSState</name></expr></argument>, <argument pos:start="415:57" pos:end="415:68"><expr pos:start="415:57" pos:end="415:68"><name pos:start="415:57" pos:end="415:68">CP0_SRSConf1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="417:13" pos:end="417:28"><expr pos:start="417:13" pos:end="417:27"><name pos:start="417:13" pos:end="417:14">rn</name> <operator pos:start="417:16" pos:end="417:16">=</operator> <literal type="string" pos:start="417:18" pos:end="417:27">"SRSConf1"</literal></expr>;</expr_stmt>

            <break pos:start="419:13" pos:end="419:18">break;</break>

        <case pos:start="421:9" pos:end="421:15">case <expr pos:start="421:14" pos:end="421:14"><literal type="number" pos:start="421:14" pos:end="421:14">3</literal></expr>:</case>

            <expr_stmt pos:start="423:13" pos:end="423:42"><expr pos:start="423:13" pos:end="423:41"><call pos:start="423:13" pos:end="423:41"><name pos:start="423:13" pos:end="423:22">check_insn</name><argument_list pos:start="423:23" pos:end="423:41">(<argument pos:start="423:24" pos:end="423:26"><expr pos:start="423:24" pos:end="423:26"><name pos:start="423:24" pos:end="423:26">ctx</name></expr></argument>, <argument pos:start="423:29" pos:end="423:40"><expr pos:start="423:29" pos:end="423:40"><name pos:start="423:29" pos:end="423:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:71"><expr pos:start="425:13" pos:end="425:70"><call pos:start="425:13" pos:end="425:70"><name pos:start="425:13" pos:end="425:27">gen_mfc0_load32</name><argument_list pos:start="425:28" pos:end="425:70">(<argument pos:start="425:29" pos:end="425:31"><expr pos:start="425:29" pos:end="425:31"><name pos:start="425:29" pos:end="425:31">arg</name></expr></argument>, <argument pos:start="425:34" pos:end="425:69"><expr pos:start="425:34" pos:end="425:69"><call pos:start="425:34" pos:end="425:69"><name pos:start="425:34" pos:end="425:41">offsetof</name><argument_list pos:start="425:42" pos:end="425:69">(<argument pos:start="425:43" pos:end="425:54"><expr pos:start="425:43" pos:end="425:54"><name pos:start="425:43" pos:end="425:54">CPUMIPSState</name></expr></argument>, <argument pos:start="425:57" pos:end="425:68"><expr pos:start="425:57" pos:end="425:68"><name pos:start="425:57" pos:end="425:68">CP0_SRSConf2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:28"><expr pos:start="427:13" pos:end="427:27"><name pos:start="427:13" pos:end="427:14">rn</name> <operator pos:start="427:16" pos:end="427:16">=</operator> <literal type="string" pos:start="427:18" pos:end="427:27">"SRSConf2"</literal></expr>;</expr_stmt>

            <break pos:start="429:13" pos:end="429:18">break;</break>

        <case pos:start="431:9" pos:end="431:15">case <expr pos:start="431:14" pos:end="431:14"><literal type="number" pos:start="431:14" pos:end="431:14">4</literal></expr>:</case>

            <expr_stmt pos:start="433:13" pos:end="433:42"><expr pos:start="433:13" pos:end="433:41"><call pos:start="433:13" pos:end="433:41"><name pos:start="433:13" pos:end="433:22">check_insn</name><argument_list pos:start="433:23" pos:end="433:41">(<argument pos:start="433:24" pos:end="433:26"><expr pos:start="433:24" pos:end="433:26"><name pos:start="433:24" pos:end="433:26">ctx</name></expr></argument>, <argument pos:start="433:29" pos:end="433:40"><expr pos:start="433:29" pos:end="433:40"><name pos:start="433:29" pos:end="433:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="435:13" pos:end="435:71"><expr pos:start="435:13" pos:end="435:70"><call pos:start="435:13" pos:end="435:70"><name pos:start="435:13" pos:end="435:27">gen_mfc0_load32</name><argument_list pos:start="435:28" pos:end="435:70">(<argument pos:start="435:29" pos:end="435:31"><expr pos:start="435:29" pos:end="435:31"><name pos:start="435:29" pos:end="435:31">arg</name></expr></argument>, <argument pos:start="435:34" pos:end="435:69"><expr pos:start="435:34" pos:end="435:69"><call pos:start="435:34" pos:end="435:69"><name pos:start="435:34" pos:end="435:41">offsetof</name><argument_list pos:start="435:42" pos:end="435:69">(<argument pos:start="435:43" pos:end="435:54"><expr pos:start="435:43" pos:end="435:54"><name pos:start="435:43" pos:end="435:54">CPUMIPSState</name></expr></argument>, <argument pos:start="435:57" pos:end="435:68"><expr pos:start="435:57" pos:end="435:68"><name pos:start="435:57" pos:end="435:68">CP0_SRSConf3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="437:13" pos:end="437:28"><expr pos:start="437:13" pos:end="437:27"><name pos:start="437:13" pos:end="437:14">rn</name> <operator pos:start="437:16" pos:end="437:16">=</operator> <literal type="string" pos:start="437:18" pos:end="437:27">"SRSConf3"</literal></expr>;</expr_stmt>

            <break pos:start="439:13" pos:end="439:18">break;</break>

        <case pos:start="441:9" pos:end="441:15">case <expr pos:start="441:14" pos:end="441:14"><literal type="number" pos:start="441:14" pos:end="441:14">5</literal></expr>:</case>

            <expr_stmt pos:start="443:13" pos:end="443:42"><expr pos:start="443:13" pos:end="443:41"><call pos:start="443:13" pos:end="443:41"><name pos:start="443:13" pos:end="443:22">check_insn</name><argument_list pos:start="443:23" pos:end="443:41">(<argument pos:start="443:24" pos:end="443:26"><expr pos:start="443:24" pos:end="443:26"><name pos:start="443:24" pos:end="443:26">ctx</name></expr></argument>, <argument pos:start="443:29" pos:end="443:40"><expr pos:start="443:29" pos:end="443:40"><name pos:start="443:29" pos:end="443:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="445:13" pos:end="445:71"><expr pos:start="445:13" pos:end="445:70"><call pos:start="445:13" pos:end="445:70"><name pos:start="445:13" pos:end="445:27">gen_mfc0_load32</name><argument_list pos:start="445:28" pos:end="445:70">(<argument pos:start="445:29" pos:end="445:31"><expr pos:start="445:29" pos:end="445:31"><name pos:start="445:29" pos:end="445:31">arg</name></expr></argument>, <argument pos:start="445:34" pos:end="445:69"><expr pos:start="445:34" pos:end="445:69"><call pos:start="445:34" pos:end="445:69"><name pos:start="445:34" pos:end="445:41">offsetof</name><argument_list pos:start="445:42" pos:end="445:69">(<argument pos:start="445:43" pos:end="445:54"><expr pos:start="445:43" pos:end="445:54"><name pos:start="445:43" pos:end="445:54">CPUMIPSState</name></expr></argument>, <argument pos:start="445:57" pos:end="445:68"><expr pos:start="445:57" pos:end="445:68"><name pos:start="445:57" pos:end="445:68">CP0_SRSConf4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="447:13" pos:end="447:28"><expr pos:start="447:13" pos:end="447:27"><name pos:start="447:13" pos:end="447:14">rn</name> <operator pos:start="447:16" pos:end="447:16">=</operator> <literal type="string" pos:start="447:18" pos:end="447:27">"SRSConf4"</literal></expr>;</expr_stmt>

            <break pos:start="449:13" pos:end="449:18">break;</break>

        <default pos:start="451:9" pos:end="451:16">default:</default>

            <goto pos:start="453:13" pos:end="453:21">goto <name pos:start="453:18" pos:end="453:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="457:9" pos:end="457:14">break;</break>

    <case pos:start="459:5" pos:end="459:11">case <expr pos:start="459:10" pos:end="459:10"><literal type="number" pos:start="459:10" pos:end="459:10">7</literal></expr>:</case>

        <switch pos:start="461:9" pos:end="477:9">switch <condition pos:start="461:16" pos:end="461:20">(<expr pos:start="461:17" pos:end="461:19"><name pos:start="461:17" pos:end="461:19">sel</name></expr>)</condition> <block pos:start="461:22" pos:end="477:9">{<block_content pos:start="463:9" pos:end="475:21">

        <case pos:start="463:9" pos:end="463:15">case <expr pos:start="463:14" pos:end="463:14"><literal type="number" pos:start="463:14" pos:end="463:14">0</literal></expr>:</case>

            <expr_stmt pos:start="465:13" pos:end="465:42"><expr pos:start="465:13" pos:end="465:41"><call pos:start="465:13" pos:end="465:41"><name pos:start="465:13" pos:end="465:22">check_insn</name><argument_list pos:start="465:23" pos:end="465:41">(<argument pos:start="465:24" pos:end="465:26"><expr pos:start="465:24" pos:end="465:26"><name pos:start="465:24" pos:end="465:26">ctx</name></expr></argument>, <argument pos:start="465:29" pos:end="465:40"><expr pos:start="465:29" pos:end="465:40"><name pos:start="465:29" pos:end="465:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="467:13" pos:end="467:69"><expr pos:start="467:13" pos:end="467:68"><call pos:start="467:13" pos:end="467:68"><name pos:start="467:13" pos:end="467:27">gen_mfc0_load32</name><argument_list pos:start="467:28" pos:end="467:68">(<argument pos:start="467:29" pos:end="467:31"><expr pos:start="467:29" pos:end="467:31"><name pos:start="467:29" pos:end="467:31">arg</name></expr></argument>, <argument pos:start="467:34" pos:end="467:67"><expr pos:start="467:34" pos:end="467:67"><call pos:start="467:34" pos:end="467:67"><name pos:start="467:34" pos:end="467:41">offsetof</name><argument_list pos:start="467:42" pos:end="467:67">(<argument pos:start="467:43" pos:end="467:54"><expr pos:start="467:43" pos:end="467:54"><name pos:start="467:43" pos:end="467:54">CPUMIPSState</name></expr></argument>, <argument pos:start="467:57" pos:end="467:66"><expr pos:start="467:57" pos:end="467:66"><name pos:start="467:57" pos:end="467:66">CP0_HWREna</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="469:13" pos:end="469:26"><expr pos:start="469:13" pos:end="469:25"><name pos:start="469:13" pos:end="469:14">rn</name> <operator pos:start="469:16" pos:end="469:16">=</operator> <literal type="string" pos:start="469:18" pos:end="469:25">"HWREna"</literal></expr>;</expr_stmt>

            <break pos:start="471:13" pos:end="471:18">break;</break>

        <default pos:start="473:9" pos:end="473:16">default:</default>

            <goto pos:start="475:13" pos:end="475:21">goto <name pos:start="475:18" pos:end="475:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="479:9" pos:end="479:14">break;</break>

    <case pos:start="481:5" pos:end="481:11">case <expr pos:start="481:10" pos:end="481:10"><literal type="number" pos:start="481:10" pos:end="481:10">8</literal></expr>:</case>

        <switch pos:start="483:9" pos:end="531:9">switch <condition pos:start="483:16" pos:end="483:20">(<expr pos:start="483:17" pos:end="483:19"><name pos:start="483:17" pos:end="483:19">sel</name></expr>)</condition> <block pos:start="483:22" pos:end="531:9">{<block_content pos:start="485:9" pos:end="529:21">

        <case pos:start="485:9" pos:end="485:15">case <expr pos:start="485:14" pos:end="485:14"><literal type="number" pos:start="485:14" pos:end="485:14">0</literal></expr>:</case>

            <expr_stmt pos:start="487:13" pos:end="487:78"><expr pos:start="487:13" pos:end="487:77"><call pos:start="487:13" pos:end="487:77"><name pos:start="487:13" pos:end="487:25">tcg_gen_ld_tl</name><argument_list pos:start="487:26" pos:end="487:77">(<argument pos:start="487:27" pos:end="487:29"><expr pos:start="487:27" pos:end="487:29"><name pos:start="487:27" pos:end="487:29">arg</name></expr></argument>, <argument pos:start="487:32" pos:end="487:38"><expr pos:start="487:32" pos:end="487:38"><name pos:start="487:32" pos:end="487:38">cpu_env</name></expr></argument>, <argument pos:start="487:41" pos:end="487:76"><expr pos:start="487:41" pos:end="487:76"><call pos:start="487:41" pos:end="487:76"><name pos:start="487:41" pos:end="487:48">offsetof</name><argument_list pos:start="487:49" pos:end="487:76">(<argument pos:start="487:50" pos:end="487:61"><expr pos:start="487:50" pos:end="487:61"><name pos:start="487:50" pos:end="487:61">CPUMIPSState</name></expr></argument>, <argument pos:start="487:64" pos:end="487:75"><expr pos:start="487:64" pos:end="487:75"><name pos:start="487:64" pos:end="487:75">CP0_BadVAddr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="489:13" pos:end="489:40"><expr pos:start="489:13" pos:end="489:39"><call pos:start="489:13" pos:end="489:39"><name pos:start="489:13" pos:end="489:29">tcg_gen_ext32s_tl</name><argument_list pos:start="489:30" pos:end="489:39">(<argument pos:start="489:31" pos:end="489:33"><expr pos:start="489:31" pos:end="489:33"><name pos:start="489:31" pos:end="489:33">arg</name></expr></argument>, <argument pos:start="489:36" pos:end="489:38"><expr pos:start="489:36" pos:end="489:38"><name pos:start="489:36" pos:end="489:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="491:13" pos:end="491:28"><expr pos:start="491:13" pos:end="491:27"><name pos:start="491:13" pos:end="491:14">rn</name> <operator pos:start="491:16" pos:end="491:16">=</operator> <literal type="string" pos:start="491:18" pos:end="491:27">"BadVAddr"</literal></expr>;</expr_stmt>

            <break pos:start="493:13" pos:end="493:18">break;</break>

        <case pos:start="495:9" pos:end="495:15">case <expr pos:start="495:14" pos:end="495:14"><literal type="number" pos:start="495:14" pos:end="495:14">1</literal></expr>:</case>

            <if_stmt pos:start="497:13" pos:end="507:13"><if pos:start="497:13" pos:end="503:13">if <condition pos:start="497:16" pos:end="497:24">(<expr pos:start="497:17" pos:end="497:23"><name pos:start="497:17" pos:end="497:23"><name pos:start="497:17" pos:end="497:19">ctx</name><operator pos:start="497:20" pos:end="497:21">-&gt;</operator><name pos:start="497:22" pos:end="497:23">bi</name></name></expr>)</condition> <block pos:start="497:26" pos:end="503:13">{<block_content pos:start="499:17" pos:end="501:32">

                <expr_stmt pos:start="499:17" pos:end="499:75"><expr pos:start="499:17" pos:end="499:74"><call pos:start="499:17" pos:end="499:74"><name pos:start="499:17" pos:end="499:31">gen_mfc0_load32</name><argument_list pos:start="499:32" pos:end="499:74">(<argument pos:start="499:33" pos:end="499:35"><expr pos:start="499:33" pos:end="499:35"><name pos:start="499:33" pos:end="499:35">arg</name></expr></argument>, <argument pos:start="499:38" pos:end="499:73"><expr pos:start="499:38" pos:end="499:73"><call pos:start="499:38" pos:end="499:73"><name pos:start="499:38" pos:end="499:45">offsetof</name><argument_list pos:start="499:46" pos:end="499:73">(<argument pos:start="499:47" pos:end="499:58"><expr pos:start="499:47" pos:end="499:58"><name pos:start="499:47" pos:end="499:58">CPUMIPSState</name></expr></argument>, <argument pos:start="499:61" pos:end="499:72"><expr pos:start="499:61" pos:end="499:72"><name pos:start="499:61" pos:end="499:72">CP0_BadInstr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="501:17" pos:end="501:32"><expr pos:start="501:17" pos:end="501:31"><name pos:start="501:17" pos:end="501:18">rn</name> <operator pos:start="501:20" pos:end="501:20">=</operator> <literal type="string" pos:start="501:22" pos:end="501:31">"BadInstr"</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="503:15" pos:end="507:13">else <block pos:start="503:20" pos:end="507:13">{<block_content pos:start="505:17" pos:end="505:49">

                <expr_stmt pos:start="505:17" pos:end="505:49"><expr pos:start="505:17" pos:end="505:48"><call pos:start="505:17" pos:end="505:48"><name pos:start="505:17" pos:end="505:38">gen_mfc0_unimplemented</name><argument_list pos:start="505:39" pos:end="505:48">(<argument pos:start="505:40" pos:end="505:42"><expr pos:start="505:40" pos:end="505:42"><name pos:start="505:40" pos:end="505:42">ctx</name></expr></argument>, <argument pos:start="505:45" pos:end="505:47"><expr pos:start="505:45" pos:end="505:47"><name pos:start="505:45" pos:end="505:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="509:13" pos:end="509:18">break;</break>

        <case pos:start="511:9" pos:end="511:15">case <expr pos:start="511:14" pos:end="511:14"><literal type="number" pos:start="511:14" pos:end="511:14">2</literal></expr>:</case>

            <if_stmt pos:start="513:13" pos:end="523:13"><if pos:start="513:13" pos:end="519:13">if <condition pos:start="513:16" pos:end="513:24">(<expr pos:start="513:17" pos:end="513:23"><name pos:start="513:17" pos:end="513:23"><name pos:start="513:17" pos:end="513:19">ctx</name><operator pos:start="513:20" pos:end="513:21">-&gt;</operator><name pos:start="513:22" pos:end="513:23">bp</name></name></expr>)</condition> <block pos:start="513:26" pos:end="519:13">{<block_content pos:start="515:17" pos:end="517:33">

                <expr_stmt pos:start="515:17" pos:end="515:76"><expr pos:start="515:17" pos:end="515:75"><call pos:start="515:17" pos:end="515:75"><name pos:start="515:17" pos:end="515:31">gen_mfc0_load32</name><argument_list pos:start="515:32" pos:end="515:75">(<argument pos:start="515:33" pos:end="515:35"><expr pos:start="515:33" pos:end="515:35"><name pos:start="515:33" pos:end="515:35">arg</name></expr></argument>, <argument pos:start="515:38" pos:end="515:74"><expr pos:start="515:38" pos:end="515:74"><call pos:start="515:38" pos:end="515:74"><name pos:start="515:38" pos:end="515:45">offsetof</name><argument_list pos:start="515:46" pos:end="515:74">(<argument pos:start="515:47" pos:end="515:58"><expr pos:start="515:47" pos:end="515:58"><name pos:start="515:47" pos:end="515:58">CPUMIPSState</name></expr></argument>, <argument pos:start="515:61" pos:end="515:73"><expr pos:start="515:61" pos:end="515:73"><name pos:start="515:61" pos:end="515:73">CP0_BadInstrP</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="517:17" pos:end="517:33"><expr pos:start="517:17" pos:end="517:32"><name pos:start="517:17" pos:end="517:18">rn</name> <operator pos:start="517:20" pos:end="517:20">=</operator> <literal type="string" pos:start="517:22" pos:end="517:32">"BadInstrP"</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="519:15" pos:end="523:13">else <block pos:start="519:20" pos:end="523:13">{<block_content pos:start="521:17" pos:end="521:49">

                <expr_stmt pos:start="521:17" pos:end="521:49"><expr pos:start="521:17" pos:end="521:48"><call pos:start="521:17" pos:end="521:48"><name pos:start="521:17" pos:end="521:38">gen_mfc0_unimplemented</name><argument_list pos:start="521:39" pos:end="521:48">(<argument pos:start="521:40" pos:end="521:42"><expr pos:start="521:40" pos:end="521:42"><name pos:start="521:40" pos:end="521:42">ctx</name></expr></argument>, <argument pos:start="521:45" pos:end="521:47"><expr pos:start="521:45" pos:end="521:47"><name pos:start="521:45" pos:end="521:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="525:13" pos:end="525:18">break;</break>

        <default pos:start="527:9" pos:end="527:16">default:</default>

            <goto pos:start="529:13" pos:end="529:21">goto <name pos:start="529:18" pos:end="529:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="533:9" pos:end="533:14">break;</break>

    <case pos:start="535:5" pos:end="535:11">case <expr pos:start="535:10" pos:end="535:10"><literal type="number" pos:start="535:10" pos:end="535:10">9</literal></expr>:</case>

        <switch pos:start="537:9" pos:end="571:9">switch <condition pos:start="537:16" pos:end="537:20">(<expr pos:start="537:17" pos:end="537:19"><name pos:start="537:17" pos:end="537:19">sel</name></expr>)</condition> <block pos:start="537:22" pos:end="571:9">{<block_content pos:start="539:9" pos:end="569:21">

        <case pos:start="539:9" pos:end="539:15">case <expr pos:start="539:14" pos:end="539:14"><literal type="number" pos:start="539:14" pos:end="539:14">0</literal></expr>:</case>

            <comment type="block" pos:start="541:13" pos:end="541:68">/* Mark as an IO operation because we read the time.  */</comment>

            <if_stmt pos:start="543:13" pos:end="545:31"><if pos:start="543:13" pos:end="545:31">if <condition pos:start="543:16" pos:end="543:27">(<expr pos:start="543:17" pos:end="543:26"><name pos:start="543:17" pos:end="543:26">use_icount</name></expr>)</condition><block type="pseudo" pos:start="545:17" pos:end="545:31"><block_content pos:start="545:17" pos:end="545:31">

                <expr_stmt pos:start="545:17" pos:end="545:31"><expr pos:start="545:17" pos:end="545:30"><call pos:start="545:17" pos:end="545:30"><name pos:start="545:17" pos:end="545:28">gen_io_start</name><argument_list pos:start="545:29" pos:end="545:30">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="547:13" pos:end="547:48"><expr pos:start="547:13" pos:end="547:47"><call pos:start="547:13" pos:end="547:47"><name pos:start="547:13" pos:end="547:33">gen_helper_mfc0_count</name><argument_list pos:start="547:34" pos:end="547:47">(<argument pos:start="547:35" pos:end="547:37"><expr pos:start="547:35" pos:end="547:37"><name pos:start="547:35" pos:end="547:37">arg</name></expr></argument>, <argument pos:start="547:40" pos:end="547:46"><expr pos:start="547:40" pos:end="547:46"><name pos:start="547:40" pos:end="547:46">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="549:13" pos:end="553:13"><if pos:start="549:13" pos:end="553:13">if <condition pos:start="549:16" pos:end="549:27">(<expr pos:start="549:17" pos:end="549:26"><name pos:start="549:17" pos:end="549:26">use_icount</name></expr>)</condition> <block pos:start="549:29" pos:end="553:13">{<block_content pos:start="551:17" pos:end="551:29">

                <expr_stmt pos:start="551:17" pos:end="551:29"><expr pos:start="551:17" pos:end="551:28"><call pos:start="551:17" pos:end="551:28"><name pos:start="551:17" pos:end="551:26">gen_io_end</name><argument_list pos:start="551:27" pos:end="551:28">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="555:13" pos:end="557:39">/* Break the TB to be able to take timer interrupts immediately

               after reading count.  */</comment>

            <expr_stmt pos:start="559:13" pos:end="559:34"><expr pos:start="559:13" pos:end="559:33"><name pos:start="559:13" pos:end="559:23"><name pos:start="559:13" pos:end="559:15">ctx</name><operator pos:start="559:16" pos:end="559:17">-&gt;</operator><name pos:start="559:18" pos:end="559:23">bstate</name></name> <operator pos:start="559:25" pos:end="559:25">=</operator> <name pos:start="559:27" pos:end="559:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="561:13" pos:end="561:25"><expr pos:start="561:13" pos:end="561:24"><name pos:start="561:13" pos:end="561:14">rn</name> <operator pos:start="561:16" pos:end="561:16">=</operator> <literal type="string" pos:start="561:18" pos:end="561:24">"Count"</literal></expr>;</expr_stmt>

            <break pos:start="563:13" pos:end="563:18">break;</break>

        <comment type="block" pos:start="565:9" pos:end="565:46">/* 6,7 are implementation dependent */</comment>

        <default pos:start="567:9" pos:end="567:16">default:</default>

            <goto pos:start="569:13" pos:end="569:21">goto <name pos:start="569:18" pos:end="569:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="573:9" pos:end="573:14">break;</break>

    <case pos:start="575:5" pos:end="575:12">case <expr pos:start="575:10" pos:end="575:11"><literal type="number" pos:start="575:10" pos:end="575:11">10</literal></expr>:</case>

        <switch pos:start="577:9" pos:end="593:9">switch <condition pos:start="577:16" pos:end="577:20">(<expr pos:start="577:17" pos:end="577:19"><name pos:start="577:17" pos:end="577:19">sel</name></expr>)</condition> <block pos:start="577:22" pos:end="593:9">{<block_content pos:start="579:9" pos:end="591:21">

        <case pos:start="579:9" pos:end="579:15">case <expr pos:start="579:14" pos:end="579:14"><literal type="number" pos:start="579:14" pos:end="579:14">0</literal></expr>:</case>

            <expr_stmt pos:start="581:13" pos:end="581:77"><expr pos:start="581:13" pos:end="581:76"><call pos:start="581:13" pos:end="581:76"><name pos:start="581:13" pos:end="581:25">tcg_gen_ld_tl</name><argument_list pos:start="581:26" pos:end="581:76">(<argument pos:start="581:27" pos:end="581:29"><expr pos:start="581:27" pos:end="581:29"><name pos:start="581:27" pos:end="581:29">arg</name></expr></argument>, <argument pos:start="581:32" pos:end="581:38"><expr pos:start="581:32" pos:end="581:38"><name pos:start="581:32" pos:end="581:38">cpu_env</name></expr></argument>, <argument pos:start="581:41" pos:end="581:75"><expr pos:start="581:41" pos:end="581:75"><call pos:start="581:41" pos:end="581:75"><name pos:start="581:41" pos:end="581:48">offsetof</name><argument_list pos:start="581:49" pos:end="581:75">(<argument pos:start="581:50" pos:end="581:61"><expr pos:start="581:50" pos:end="581:61"><name pos:start="581:50" pos:end="581:61">CPUMIPSState</name></expr></argument>, <argument pos:start="581:64" pos:end="581:74"><expr pos:start="581:64" pos:end="581:74"><name pos:start="581:64" pos:end="581:74">CP0_EntryHi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="583:13" pos:end="583:40"><expr pos:start="583:13" pos:end="583:39"><call pos:start="583:13" pos:end="583:39"><name pos:start="583:13" pos:end="583:29">tcg_gen_ext32s_tl</name><argument_list pos:start="583:30" pos:end="583:39">(<argument pos:start="583:31" pos:end="583:33"><expr pos:start="583:31" pos:end="583:33"><name pos:start="583:31" pos:end="583:33">arg</name></expr></argument>, <argument pos:start="583:36" pos:end="583:38"><expr pos:start="583:36" pos:end="583:38"><name pos:start="583:36" pos:end="583:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="585:13" pos:end="585:27"><expr pos:start="585:13" pos:end="585:26"><name pos:start="585:13" pos:end="585:14">rn</name> <operator pos:start="585:16" pos:end="585:16">=</operator> <literal type="string" pos:start="585:18" pos:end="585:26">"EntryHi"</literal></expr>;</expr_stmt>

            <break pos:start="587:13" pos:end="587:18">break;</break>

        <default pos:start="589:9" pos:end="589:16">default:</default>

            <goto pos:start="591:13" pos:end="591:21">goto <name pos:start="591:18" pos:end="591:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="595:9" pos:end="595:14">break;</break>

    <case pos:start="597:5" pos:end="597:12">case <expr pos:start="597:10" pos:end="597:11"><literal type="number" pos:start="597:10" pos:end="597:11">11</literal></expr>:</case>

        <switch pos:start="599:9" pos:end="615:9">switch <condition pos:start="599:16" pos:end="599:20">(<expr pos:start="599:17" pos:end="599:19"><name pos:start="599:17" pos:end="599:19">sel</name></expr>)</condition> <block pos:start="599:22" pos:end="615:9">{<block_content pos:start="601:9" pos:end="613:21">

        <case pos:start="601:9" pos:end="601:15">case <expr pos:start="601:14" pos:end="601:14"><literal type="number" pos:start="601:14" pos:end="601:14">0</literal></expr>:</case>

            <expr_stmt pos:start="603:13" pos:end="603:70"><expr pos:start="603:13" pos:end="603:69"><call pos:start="603:13" pos:end="603:69"><name pos:start="603:13" pos:end="603:27">gen_mfc0_load32</name><argument_list pos:start="603:28" pos:end="603:69">(<argument pos:start="603:29" pos:end="603:31"><expr pos:start="603:29" pos:end="603:31"><name pos:start="603:29" pos:end="603:31">arg</name></expr></argument>, <argument pos:start="603:34" pos:end="603:68"><expr pos:start="603:34" pos:end="603:68"><call pos:start="603:34" pos:end="603:68"><name pos:start="603:34" pos:end="603:41">offsetof</name><argument_list pos:start="603:42" pos:end="603:68">(<argument pos:start="603:43" pos:end="603:54"><expr pos:start="603:43" pos:end="603:54"><name pos:start="603:43" pos:end="603:54">CPUMIPSState</name></expr></argument>, <argument pos:start="603:57" pos:end="603:67"><expr pos:start="603:57" pos:end="603:67"><name pos:start="603:57" pos:end="603:67">CP0_Compare</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="605:13" pos:end="605:27"><expr pos:start="605:13" pos:end="605:26"><name pos:start="605:13" pos:end="605:14">rn</name> <operator pos:start="605:16" pos:end="605:16">=</operator> <literal type="string" pos:start="605:18" pos:end="605:26">"Compare"</literal></expr>;</expr_stmt>

            <break pos:start="607:13" pos:end="607:18">break;</break>

        <comment type="block" pos:start="609:9" pos:end="609:46">/* 6,7 are implementation dependent */</comment>

        <default pos:start="611:9" pos:end="611:16">default:</default>

            <goto pos:start="613:13" pos:end="613:21">goto <name pos:start="613:18" pos:end="613:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="617:9" pos:end="617:14">break;</break>

    <case pos:start="619:5" pos:end="619:12">case <expr pos:start="619:10" pos:end="619:11"><literal type="number" pos:start="619:10" pos:end="619:11">12</literal></expr>:</case>

        <switch pos:start="621:9" pos:end="665:8">switch <condition pos:start="621:16" pos:end="621:20">(<expr pos:start="621:17" pos:end="621:19"><name pos:start="621:17" pos:end="621:19">sel</name></expr>)</condition> <block pos:start="621:22" pos:end="665:8">{<block_content pos:start="623:9" pos:end="663:21">

        <case pos:start="623:9" pos:end="623:15">case <expr pos:start="623:14" pos:end="623:14"><literal type="number" pos:start="623:14" pos:end="623:14">0</literal></expr>:</case>

            <expr_stmt pos:start="625:13" pos:end="625:69"><expr pos:start="625:13" pos:end="625:68"><call pos:start="625:13" pos:end="625:68"><name pos:start="625:13" pos:end="625:27">gen_mfc0_load32</name><argument_list pos:start="625:28" pos:end="625:68">(<argument pos:start="625:29" pos:end="625:31"><expr pos:start="625:29" pos:end="625:31"><name pos:start="625:29" pos:end="625:31">arg</name></expr></argument>, <argument pos:start="625:34" pos:end="625:67"><expr pos:start="625:34" pos:end="625:67"><call pos:start="625:34" pos:end="625:67"><name pos:start="625:34" pos:end="625:41">offsetof</name><argument_list pos:start="625:42" pos:end="625:67">(<argument pos:start="625:43" pos:end="625:54"><expr pos:start="625:43" pos:end="625:54"><name pos:start="625:43" pos:end="625:54">CPUMIPSState</name></expr></argument>, <argument pos:start="625:57" pos:end="625:66"><expr pos:start="625:57" pos:end="625:66"><name pos:start="625:57" pos:end="625:66">CP0_Status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="627:13" pos:end="627:26"><expr pos:start="627:13" pos:end="627:25"><name pos:start="627:13" pos:end="627:14">rn</name> <operator pos:start="627:16" pos:end="627:16">=</operator> <literal type="string" pos:start="627:18" pos:end="627:25">"Status"</literal></expr>;</expr_stmt>

            <break pos:start="629:13" pos:end="629:18">break;</break>

        <case pos:start="631:9" pos:end="631:15">case <expr pos:start="631:14" pos:end="631:14"><literal type="number" pos:start="631:14" pos:end="631:14">1</literal></expr>:</case>

            <expr_stmt pos:start="633:13" pos:end="633:42"><expr pos:start="633:13" pos:end="633:41"><call pos:start="633:13" pos:end="633:41"><name pos:start="633:13" pos:end="633:22">check_insn</name><argument_list pos:start="633:23" pos:end="633:41">(<argument pos:start="633:24" pos:end="633:26"><expr pos:start="633:24" pos:end="633:26"><name pos:start="633:24" pos:end="633:26">ctx</name></expr></argument>, <argument pos:start="633:29" pos:end="633:40"><expr pos:start="633:29" pos:end="633:40"><name pos:start="633:29" pos:end="633:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="635:13" pos:end="635:69"><expr pos:start="635:13" pos:end="635:68"><call pos:start="635:13" pos:end="635:68"><name pos:start="635:13" pos:end="635:27">gen_mfc0_load32</name><argument_list pos:start="635:28" pos:end="635:68">(<argument pos:start="635:29" pos:end="635:31"><expr pos:start="635:29" pos:end="635:31"><name pos:start="635:29" pos:end="635:31">arg</name></expr></argument>, <argument pos:start="635:34" pos:end="635:67"><expr pos:start="635:34" pos:end="635:67"><call pos:start="635:34" pos:end="635:67"><name pos:start="635:34" pos:end="635:41">offsetof</name><argument_list pos:start="635:42" pos:end="635:67">(<argument pos:start="635:43" pos:end="635:54"><expr pos:start="635:43" pos:end="635:54"><name pos:start="635:43" pos:end="635:54">CPUMIPSState</name></expr></argument>, <argument pos:start="635:57" pos:end="635:66"><expr pos:start="635:57" pos:end="635:66"><name pos:start="635:57" pos:end="635:66">CP0_IntCtl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="637:13" pos:end="637:26"><expr pos:start="637:13" pos:end="637:25"><name pos:start="637:13" pos:end="637:14">rn</name> <operator pos:start="637:16" pos:end="637:16">=</operator> <literal type="string" pos:start="637:18" pos:end="637:25">"IntCtl"</literal></expr>;</expr_stmt>

            <break pos:start="639:13" pos:end="639:18">break;</break>

        <case pos:start="641:9" pos:end="641:15">case <expr pos:start="641:14" pos:end="641:14"><literal type="number" pos:start="641:14" pos:end="641:14">2</literal></expr>:</case>

            <expr_stmt pos:start="643:13" pos:end="643:42"><expr pos:start="643:13" pos:end="643:41"><call pos:start="643:13" pos:end="643:41"><name pos:start="643:13" pos:end="643:22">check_insn</name><argument_list pos:start="643:23" pos:end="643:41">(<argument pos:start="643:24" pos:end="643:26"><expr pos:start="643:24" pos:end="643:26"><name pos:start="643:24" pos:end="643:26">ctx</name></expr></argument>, <argument pos:start="643:29" pos:end="643:40"><expr pos:start="643:29" pos:end="643:40"><name pos:start="643:29" pos:end="643:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="645:13" pos:end="645:69"><expr pos:start="645:13" pos:end="645:68"><call pos:start="645:13" pos:end="645:68"><name pos:start="645:13" pos:end="645:27">gen_mfc0_load32</name><argument_list pos:start="645:28" pos:end="645:68">(<argument pos:start="645:29" pos:end="645:31"><expr pos:start="645:29" pos:end="645:31"><name pos:start="645:29" pos:end="645:31">arg</name></expr></argument>, <argument pos:start="645:34" pos:end="645:67"><expr pos:start="645:34" pos:end="645:67"><call pos:start="645:34" pos:end="645:67"><name pos:start="645:34" pos:end="645:41">offsetof</name><argument_list pos:start="645:42" pos:end="645:67">(<argument pos:start="645:43" pos:end="645:54"><expr pos:start="645:43" pos:end="645:54"><name pos:start="645:43" pos:end="645:54">CPUMIPSState</name></expr></argument>, <argument pos:start="645:57" pos:end="645:66"><expr pos:start="645:57" pos:end="645:66"><name pos:start="645:57" pos:end="645:66">CP0_SRSCtl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="647:13" pos:end="647:26"><expr pos:start="647:13" pos:end="647:25"><name pos:start="647:13" pos:end="647:14">rn</name> <operator pos:start="647:16" pos:end="647:16">=</operator> <literal type="string" pos:start="647:18" pos:end="647:25">"SRSCtl"</literal></expr>;</expr_stmt>

            <break pos:start="649:13" pos:end="649:18">break;</break>

        <case pos:start="651:9" pos:end="651:15">case <expr pos:start="651:14" pos:end="651:14"><literal type="number" pos:start="651:14" pos:end="651:14">3</literal></expr>:</case>

            <expr_stmt pos:start="653:13" pos:end="653:42"><expr pos:start="653:13" pos:end="653:41"><call pos:start="653:13" pos:end="653:41"><name pos:start="653:13" pos:end="653:22">check_insn</name><argument_list pos:start="653:23" pos:end="653:41">(<argument pos:start="653:24" pos:end="653:26"><expr pos:start="653:24" pos:end="653:26"><name pos:start="653:24" pos:end="653:26">ctx</name></expr></argument>, <argument pos:start="653:29" pos:end="653:40"><expr pos:start="653:29" pos:end="653:40"><name pos:start="653:29" pos:end="653:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="655:13" pos:end="655:69"><expr pos:start="655:13" pos:end="655:68"><call pos:start="655:13" pos:end="655:68"><name pos:start="655:13" pos:end="655:27">gen_mfc0_load32</name><argument_list pos:start="655:28" pos:end="655:68">(<argument pos:start="655:29" pos:end="655:31"><expr pos:start="655:29" pos:end="655:31"><name pos:start="655:29" pos:end="655:31">arg</name></expr></argument>, <argument pos:start="655:34" pos:end="655:67"><expr pos:start="655:34" pos:end="655:67"><call pos:start="655:34" pos:end="655:67"><name pos:start="655:34" pos:end="655:41">offsetof</name><argument_list pos:start="655:42" pos:end="655:67">(<argument pos:start="655:43" pos:end="655:54"><expr pos:start="655:43" pos:end="655:54"><name pos:start="655:43" pos:end="655:54">CPUMIPSState</name></expr></argument>, <argument pos:start="655:57" pos:end="655:66"><expr pos:start="655:57" pos:end="655:66"><name pos:start="655:57" pos:end="655:66">CP0_SRSMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="657:13" pos:end="657:26"><expr pos:start="657:13" pos:end="657:25"><name pos:start="657:13" pos:end="657:14">rn</name> <operator pos:start="657:16" pos:end="657:16">=</operator> <literal type="string" pos:start="657:18" pos:end="657:25">"SRSMap"</literal></expr>;</expr_stmt>

            <break pos:start="659:13" pos:end="659:18">break;</break>

        <default pos:start="661:9" pos:end="661:16">default:</default>

            <goto pos:start="663:13" pos:end="663:21">goto <name pos:start="663:18" pos:end="663:20">die</name>;</goto>

       </block_content>}</block></switch>

        <break pos:start="667:9" pos:end="667:14">break;</break>

    <case pos:start="669:5" pos:end="669:12">case <expr pos:start="669:10" pos:end="669:11"><literal type="number" pos:start="669:10" pos:end="669:11">13</literal></expr>:</case>

        <switch pos:start="671:9" pos:end="685:8">switch <condition pos:start="671:16" pos:end="671:20">(<expr pos:start="671:17" pos:end="671:19"><name pos:start="671:17" pos:end="671:19">sel</name></expr>)</condition> <block pos:start="671:22" pos:end="685:8">{<block_content pos:start="673:9" pos:end="683:21">

        <case pos:start="673:9" pos:end="673:15">case <expr pos:start="673:14" pos:end="673:14"><literal type="number" pos:start="673:14" pos:end="673:14">0</literal></expr>:</case>

            <expr_stmt pos:start="675:13" pos:end="675:68"><expr pos:start="675:13" pos:end="675:67"><call pos:start="675:13" pos:end="675:67"><name pos:start="675:13" pos:end="675:27">gen_mfc0_load32</name><argument_list pos:start="675:28" pos:end="675:67">(<argument pos:start="675:29" pos:end="675:31"><expr pos:start="675:29" pos:end="675:31"><name pos:start="675:29" pos:end="675:31">arg</name></expr></argument>, <argument pos:start="675:34" pos:end="675:66"><expr pos:start="675:34" pos:end="675:66"><call pos:start="675:34" pos:end="675:66"><name pos:start="675:34" pos:end="675:41">offsetof</name><argument_list pos:start="675:42" pos:end="675:66">(<argument pos:start="675:43" pos:end="675:54"><expr pos:start="675:43" pos:end="675:54"><name pos:start="675:43" pos:end="675:54">CPUMIPSState</name></expr></argument>, <argument pos:start="675:57" pos:end="675:65"><expr pos:start="675:57" pos:end="675:65"><name pos:start="675:57" pos:end="675:65">CP0_Cause</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="677:13" pos:end="677:25"><expr pos:start="677:13" pos:end="677:24"><name pos:start="677:13" pos:end="677:14">rn</name> <operator pos:start="677:16" pos:end="677:16">=</operator> <literal type="string" pos:start="677:18" pos:end="677:24">"Cause"</literal></expr>;</expr_stmt>

            <break pos:start="679:13" pos:end="679:18">break;</break>

        <default pos:start="681:9" pos:end="681:16">default:</default>

            <goto pos:start="683:13" pos:end="683:21">goto <name pos:start="683:18" pos:end="683:20">die</name>;</goto>

       </block_content>}</block></switch>

        <break pos:start="687:9" pos:end="687:14">break;</break>

    <case pos:start="689:5" pos:end="689:12">case <expr pos:start="689:10" pos:end="689:11"><literal type="number" pos:start="689:10" pos:end="689:11">14</literal></expr>:</case>

        <switch pos:start="691:9" pos:end="707:9">switch <condition pos:start="691:16" pos:end="691:20">(<expr pos:start="691:17" pos:end="691:19"><name pos:start="691:17" pos:end="691:19">sel</name></expr>)</condition> <block pos:start="691:22" pos:end="707:9">{<block_content pos:start="693:9" pos:end="705:21">

        <case pos:start="693:9" pos:end="693:15">case <expr pos:start="693:14" pos:end="693:14"><literal type="number" pos:start="693:14" pos:end="693:14">0</literal></expr>:</case>

            <expr_stmt pos:start="695:13" pos:end="695:73"><expr pos:start="695:13" pos:end="695:72"><call pos:start="695:13" pos:end="695:72"><name pos:start="695:13" pos:end="695:25">tcg_gen_ld_tl</name><argument_list pos:start="695:26" pos:end="695:72">(<argument pos:start="695:27" pos:end="695:29"><expr pos:start="695:27" pos:end="695:29"><name pos:start="695:27" pos:end="695:29">arg</name></expr></argument>, <argument pos:start="695:32" pos:end="695:38"><expr pos:start="695:32" pos:end="695:38"><name pos:start="695:32" pos:end="695:38">cpu_env</name></expr></argument>, <argument pos:start="695:41" pos:end="695:71"><expr pos:start="695:41" pos:end="695:71"><call pos:start="695:41" pos:end="695:71"><name pos:start="695:41" pos:end="695:48">offsetof</name><argument_list pos:start="695:49" pos:end="695:71">(<argument pos:start="695:50" pos:end="695:61"><expr pos:start="695:50" pos:end="695:61"><name pos:start="695:50" pos:end="695:61">CPUMIPSState</name></expr></argument>, <argument pos:start="695:64" pos:end="695:70"><expr pos:start="695:64" pos:end="695:70"><name pos:start="695:64" pos:end="695:70">CP0_EPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="697:13" pos:end="697:40"><expr pos:start="697:13" pos:end="697:39"><call pos:start="697:13" pos:end="697:39"><name pos:start="697:13" pos:end="697:29">tcg_gen_ext32s_tl</name><argument_list pos:start="697:30" pos:end="697:39">(<argument pos:start="697:31" pos:end="697:33"><expr pos:start="697:31" pos:end="697:33"><name pos:start="697:31" pos:end="697:33">arg</name></expr></argument>, <argument pos:start="697:36" pos:end="697:38"><expr pos:start="697:36" pos:end="697:38"><name pos:start="697:36" pos:end="697:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="699:13" pos:end="699:23"><expr pos:start="699:13" pos:end="699:22"><name pos:start="699:13" pos:end="699:14">rn</name> <operator pos:start="699:16" pos:end="699:16">=</operator> <literal type="string" pos:start="699:18" pos:end="699:22">"EPC"</literal></expr>;</expr_stmt>

            <break pos:start="701:13" pos:end="701:18">break;</break>

        <default pos:start="703:9" pos:end="703:16">default:</default>

            <goto pos:start="705:13" pos:end="705:21">goto <name pos:start="705:18" pos:end="705:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="709:9" pos:end="709:14">break;</break>

    <case pos:start="711:5" pos:end="711:12">case <expr pos:start="711:10" pos:end="711:11"><literal type="number" pos:start="711:10" pos:end="711:11">15</literal></expr>:</case>

        <switch pos:start="713:9" pos:end="737:8">switch <condition pos:start="713:16" pos:end="713:20">(<expr pos:start="713:17" pos:end="713:19"><name pos:start="713:17" pos:end="713:19">sel</name></expr>)</condition> <block pos:start="713:22" pos:end="737:8">{<block_content pos:start="715:9" pos:end="735:21">

        <case pos:start="715:9" pos:end="715:15">case <expr pos:start="715:14" pos:end="715:14"><literal type="number" pos:start="715:14" pos:end="715:14">0</literal></expr>:</case>

            <expr_stmt pos:start="717:13" pos:end="717:67"><expr pos:start="717:13" pos:end="717:66"><call pos:start="717:13" pos:end="717:66"><name pos:start="717:13" pos:end="717:27">gen_mfc0_load32</name><argument_list pos:start="717:28" pos:end="717:66">(<argument pos:start="717:29" pos:end="717:31"><expr pos:start="717:29" pos:end="717:31"><name pos:start="717:29" pos:end="717:31">arg</name></expr></argument>, <argument pos:start="717:34" pos:end="717:65"><expr pos:start="717:34" pos:end="717:65"><call pos:start="717:34" pos:end="717:65"><name pos:start="717:34" pos:end="717:41">offsetof</name><argument_list pos:start="717:42" pos:end="717:65">(<argument pos:start="717:43" pos:end="717:54"><expr pos:start="717:43" pos:end="717:54"><name pos:start="717:43" pos:end="717:54">CPUMIPSState</name></expr></argument>, <argument pos:start="717:57" pos:end="717:64"><expr pos:start="717:57" pos:end="717:64"><name pos:start="717:57" pos:end="717:64">CP0_PRid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="719:13" pos:end="719:24"><expr pos:start="719:13" pos:end="719:23"><name pos:start="719:13" pos:end="719:14">rn</name> <operator pos:start="719:16" pos:end="719:16">=</operator> <literal type="string" pos:start="719:18" pos:end="719:23">"PRid"</literal></expr>;</expr_stmt>

            <break pos:start="721:13" pos:end="721:18">break;</break>

        <case pos:start="723:9" pos:end="723:15">case <expr pos:start="723:14" pos:end="723:14"><literal type="number" pos:start="723:14" pos:end="723:14">1</literal></expr>:</case>

            <expr_stmt pos:start="725:13" pos:end="725:42"><expr pos:start="725:13" pos:end="725:41"><call pos:start="725:13" pos:end="725:41"><name pos:start="725:13" pos:end="725:22">check_insn</name><argument_list pos:start="725:23" pos:end="725:41">(<argument pos:start="725:24" pos:end="725:26"><expr pos:start="725:24" pos:end="725:26"><name pos:start="725:24" pos:end="725:26">ctx</name></expr></argument>, <argument pos:start="725:29" pos:end="725:40"><expr pos:start="725:29" pos:end="725:40"><name pos:start="725:29" pos:end="725:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="727:13" pos:end="727:68"><expr pos:start="727:13" pos:end="727:67"><call pos:start="727:13" pos:end="727:67"><name pos:start="727:13" pos:end="727:27">gen_mfc0_load32</name><argument_list pos:start="727:28" pos:end="727:67">(<argument pos:start="727:29" pos:end="727:31"><expr pos:start="727:29" pos:end="727:31"><name pos:start="727:29" pos:end="727:31">arg</name></expr></argument>, <argument pos:start="727:34" pos:end="727:66"><expr pos:start="727:34" pos:end="727:66"><call pos:start="727:34" pos:end="727:66"><name pos:start="727:34" pos:end="727:41">offsetof</name><argument_list pos:start="727:42" pos:end="727:66">(<argument pos:start="727:43" pos:end="727:54"><expr pos:start="727:43" pos:end="727:54"><name pos:start="727:43" pos:end="727:54">CPUMIPSState</name></expr></argument>, <argument pos:start="727:57" pos:end="727:65"><expr pos:start="727:57" pos:end="727:65"><name pos:start="727:57" pos:end="727:65">CP0_EBase</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="729:13" pos:end="729:25"><expr pos:start="729:13" pos:end="729:24"><name pos:start="729:13" pos:end="729:14">rn</name> <operator pos:start="729:16" pos:end="729:16">=</operator> <literal type="string" pos:start="729:18" pos:end="729:24">"EBase"</literal></expr>;</expr_stmt>

            <break pos:start="731:13" pos:end="731:18">break;</break>

        <default pos:start="733:9" pos:end="733:16">default:</default>

            <goto pos:start="735:13" pos:end="735:21">goto <name pos:start="735:18" pos:end="735:20">die</name>;</goto>

       </block_content>}</block></switch>

        <break pos:start="739:9" pos:end="739:14">break;</break>

    <case pos:start="741:5" pos:end="741:12">case <expr pos:start="741:10" pos:end="741:11"><literal type="number" pos:start="741:10" pos:end="741:11">16</literal></expr>:</case>

        <switch pos:start="743:9" pos:end="815:9">switch <condition pos:start="743:16" pos:end="743:20">(<expr pos:start="743:17" pos:end="743:19"><name pos:start="743:17" pos:end="743:19">sel</name></expr>)</condition> <block pos:start="743:22" pos:end="815:9">{<block_content pos:start="745:9" pos:end="813:21">

        <case pos:start="745:9" pos:end="745:15">case <expr pos:start="745:14" pos:end="745:14"><literal type="number" pos:start="745:14" pos:end="745:14">0</literal></expr>:</case>

            <expr_stmt pos:start="747:13" pos:end="747:70"><expr pos:start="747:13" pos:end="747:69"><call pos:start="747:13" pos:end="747:69"><name pos:start="747:13" pos:end="747:27">gen_mfc0_load32</name><argument_list pos:start="747:28" pos:end="747:69">(<argument pos:start="747:29" pos:end="747:31"><expr pos:start="747:29" pos:end="747:31"><name pos:start="747:29" pos:end="747:31">arg</name></expr></argument>, <argument pos:start="747:34" pos:end="747:68"><expr pos:start="747:34" pos:end="747:68"><call pos:start="747:34" pos:end="747:68"><name pos:start="747:34" pos:end="747:41">offsetof</name><argument_list pos:start="747:42" pos:end="747:68">(<argument pos:start="747:43" pos:end="747:54"><expr pos:start="747:43" pos:end="747:54"><name pos:start="747:43" pos:end="747:54">CPUMIPSState</name></expr></argument>, <argument pos:start="747:57" pos:end="747:67"><expr pos:start="747:57" pos:end="747:67"><name pos:start="747:57" pos:end="747:67">CP0_Config0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="749:13" pos:end="749:26"><expr pos:start="749:13" pos:end="749:25"><name pos:start="749:13" pos:end="749:14">rn</name> <operator pos:start="749:16" pos:end="749:16">=</operator> <literal type="string" pos:start="749:18" pos:end="749:25">"Config"</literal></expr>;</expr_stmt>

            <break pos:start="751:13" pos:end="751:18">break;</break>

        <case pos:start="753:9" pos:end="753:15">case <expr pos:start="753:14" pos:end="753:14"><literal type="number" pos:start="753:14" pos:end="753:14">1</literal></expr>:</case>

            <expr_stmt pos:start="755:13" pos:end="755:70"><expr pos:start="755:13" pos:end="755:69"><call pos:start="755:13" pos:end="755:69"><name pos:start="755:13" pos:end="755:27">gen_mfc0_load32</name><argument_list pos:start="755:28" pos:end="755:69">(<argument pos:start="755:29" pos:end="755:31"><expr pos:start="755:29" pos:end="755:31"><name pos:start="755:29" pos:end="755:31">arg</name></expr></argument>, <argument pos:start="755:34" pos:end="755:68"><expr pos:start="755:34" pos:end="755:68"><call pos:start="755:34" pos:end="755:68"><name pos:start="755:34" pos:end="755:41">offsetof</name><argument_list pos:start="755:42" pos:end="755:68">(<argument pos:start="755:43" pos:end="755:54"><expr pos:start="755:43" pos:end="755:54"><name pos:start="755:43" pos:end="755:54">CPUMIPSState</name></expr></argument>, <argument pos:start="755:57" pos:end="755:67"><expr pos:start="755:57" pos:end="755:67"><name pos:start="755:57" pos:end="755:67">CP0_Config1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="757:13" pos:end="757:27"><expr pos:start="757:13" pos:end="757:26"><name pos:start="757:13" pos:end="757:14">rn</name> <operator pos:start="757:16" pos:end="757:16">=</operator> <literal type="string" pos:start="757:18" pos:end="757:26">"Config1"</literal></expr>;</expr_stmt>

            <break pos:start="759:13" pos:end="759:18">break;</break>

        <case pos:start="761:9" pos:end="761:15">case <expr pos:start="761:14" pos:end="761:14"><literal type="number" pos:start="761:14" pos:end="761:14">2</literal></expr>:</case>

            <expr_stmt pos:start="763:13" pos:end="763:70"><expr pos:start="763:13" pos:end="763:69"><call pos:start="763:13" pos:end="763:69"><name pos:start="763:13" pos:end="763:27">gen_mfc0_load32</name><argument_list pos:start="763:28" pos:end="763:69">(<argument pos:start="763:29" pos:end="763:31"><expr pos:start="763:29" pos:end="763:31"><name pos:start="763:29" pos:end="763:31">arg</name></expr></argument>, <argument pos:start="763:34" pos:end="763:68"><expr pos:start="763:34" pos:end="763:68"><call pos:start="763:34" pos:end="763:68"><name pos:start="763:34" pos:end="763:41">offsetof</name><argument_list pos:start="763:42" pos:end="763:68">(<argument pos:start="763:43" pos:end="763:54"><expr pos:start="763:43" pos:end="763:54"><name pos:start="763:43" pos:end="763:54">CPUMIPSState</name></expr></argument>, <argument pos:start="763:57" pos:end="763:67"><expr pos:start="763:57" pos:end="763:67"><name pos:start="763:57" pos:end="763:67">CP0_Config2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="765:13" pos:end="765:27"><expr pos:start="765:13" pos:end="765:26"><name pos:start="765:13" pos:end="765:14">rn</name> <operator pos:start="765:16" pos:end="765:16">=</operator> <literal type="string" pos:start="765:18" pos:end="765:26">"Config2"</literal></expr>;</expr_stmt>

            <break pos:start="767:13" pos:end="767:18">break;</break>

        <case pos:start="769:9" pos:end="769:15">case <expr pos:start="769:14" pos:end="769:14"><literal type="number" pos:start="769:14" pos:end="769:14">3</literal></expr>:</case>

            <expr_stmt pos:start="771:13" pos:end="771:70"><expr pos:start="771:13" pos:end="771:69"><call pos:start="771:13" pos:end="771:69"><name pos:start="771:13" pos:end="771:27">gen_mfc0_load32</name><argument_list pos:start="771:28" pos:end="771:69">(<argument pos:start="771:29" pos:end="771:31"><expr pos:start="771:29" pos:end="771:31"><name pos:start="771:29" pos:end="771:31">arg</name></expr></argument>, <argument pos:start="771:34" pos:end="771:68"><expr pos:start="771:34" pos:end="771:68"><call pos:start="771:34" pos:end="771:68"><name pos:start="771:34" pos:end="771:41">offsetof</name><argument_list pos:start="771:42" pos:end="771:68">(<argument pos:start="771:43" pos:end="771:54"><expr pos:start="771:43" pos:end="771:54"><name pos:start="771:43" pos:end="771:54">CPUMIPSState</name></expr></argument>, <argument pos:start="771:57" pos:end="771:67"><expr pos:start="771:57" pos:end="771:67"><name pos:start="771:57" pos:end="771:67">CP0_Config3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="773:13" pos:end="773:27"><expr pos:start="773:13" pos:end="773:26"><name pos:start="773:13" pos:end="773:14">rn</name> <operator pos:start="773:16" pos:end="773:16">=</operator> <literal type="string" pos:start="773:18" pos:end="773:26">"Config3"</literal></expr>;</expr_stmt>

            <break pos:start="775:13" pos:end="775:18">break;</break>

        <case pos:start="777:9" pos:end="777:15">case <expr pos:start="777:14" pos:end="777:14"><literal type="number" pos:start="777:14" pos:end="777:14">4</literal></expr>:</case>

            <expr_stmt pos:start="779:13" pos:end="779:70"><expr pos:start="779:13" pos:end="779:69"><call pos:start="779:13" pos:end="779:69"><name pos:start="779:13" pos:end="779:27">gen_mfc0_load32</name><argument_list pos:start="779:28" pos:end="779:69">(<argument pos:start="779:29" pos:end="779:31"><expr pos:start="779:29" pos:end="779:31"><name pos:start="779:29" pos:end="779:31">arg</name></expr></argument>, <argument pos:start="779:34" pos:end="779:68"><expr pos:start="779:34" pos:end="779:68"><call pos:start="779:34" pos:end="779:68"><name pos:start="779:34" pos:end="779:41">offsetof</name><argument_list pos:start="779:42" pos:end="779:68">(<argument pos:start="779:43" pos:end="779:54"><expr pos:start="779:43" pos:end="779:54"><name pos:start="779:43" pos:end="779:54">CPUMIPSState</name></expr></argument>, <argument pos:start="779:57" pos:end="779:67"><expr pos:start="779:57" pos:end="779:67"><name pos:start="779:57" pos:end="779:67">CP0_Config4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="781:13" pos:end="781:27"><expr pos:start="781:13" pos:end="781:26"><name pos:start="781:13" pos:end="781:14">rn</name> <operator pos:start="781:16" pos:end="781:16">=</operator> <literal type="string" pos:start="781:18" pos:end="781:26">"Config4"</literal></expr>;</expr_stmt>

            <break pos:start="783:13" pos:end="783:18">break;</break>

        <case pos:start="785:9" pos:end="785:15">case <expr pos:start="785:14" pos:end="785:14"><literal type="number" pos:start="785:14" pos:end="785:14">5</literal></expr>:</case>

            <expr_stmt pos:start="787:13" pos:end="787:70"><expr pos:start="787:13" pos:end="787:69"><call pos:start="787:13" pos:end="787:69"><name pos:start="787:13" pos:end="787:27">gen_mfc0_load32</name><argument_list pos:start="787:28" pos:end="787:69">(<argument pos:start="787:29" pos:end="787:31"><expr pos:start="787:29" pos:end="787:31"><name pos:start="787:29" pos:end="787:31">arg</name></expr></argument>, <argument pos:start="787:34" pos:end="787:68"><expr pos:start="787:34" pos:end="787:68"><call pos:start="787:34" pos:end="787:68"><name pos:start="787:34" pos:end="787:41">offsetof</name><argument_list pos:start="787:42" pos:end="787:68">(<argument pos:start="787:43" pos:end="787:54"><expr pos:start="787:43" pos:end="787:54"><name pos:start="787:43" pos:end="787:54">CPUMIPSState</name></expr></argument>, <argument pos:start="787:57" pos:end="787:67"><expr pos:start="787:57" pos:end="787:67"><name pos:start="787:57" pos:end="787:67">CP0_Config5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="789:13" pos:end="789:27"><expr pos:start="789:13" pos:end="789:26"><name pos:start="789:13" pos:end="789:14">rn</name> <operator pos:start="789:16" pos:end="789:16">=</operator> <literal type="string" pos:start="789:18" pos:end="789:26">"Config5"</literal></expr>;</expr_stmt>

            <break pos:start="791:13" pos:end="791:18">break;</break>

        <comment type="block" pos:start="793:9" pos:end="793:46">/* 6,7 are implementation dependent */</comment>

        <case pos:start="795:9" pos:end="795:15">case <expr pos:start="795:14" pos:end="795:14"><literal type="number" pos:start="795:14" pos:end="795:14">6</literal></expr>:</case>

            <expr_stmt pos:start="797:13" pos:end="797:70"><expr pos:start="797:13" pos:end="797:69"><call pos:start="797:13" pos:end="797:69"><name pos:start="797:13" pos:end="797:27">gen_mfc0_load32</name><argument_list pos:start="797:28" pos:end="797:69">(<argument pos:start="797:29" pos:end="797:31"><expr pos:start="797:29" pos:end="797:31"><name pos:start="797:29" pos:end="797:31">arg</name></expr></argument>, <argument pos:start="797:34" pos:end="797:68"><expr pos:start="797:34" pos:end="797:68"><call pos:start="797:34" pos:end="797:68"><name pos:start="797:34" pos:end="797:41">offsetof</name><argument_list pos:start="797:42" pos:end="797:68">(<argument pos:start="797:43" pos:end="797:54"><expr pos:start="797:43" pos:end="797:54"><name pos:start="797:43" pos:end="797:54">CPUMIPSState</name></expr></argument>, <argument pos:start="797:57" pos:end="797:67"><expr pos:start="797:57" pos:end="797:67"><name pos:start="797:57" pos:end="797:67">CP0_Config6</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="799:13" pos:end="799:27"><expr pos:start="799:13" pos:end="799:26"><name pos:start="799:13" pos:end="799:14">rn</name> <operator pos:start="799:16" pos:end="799:16">=</operator> <literal type="string" pos:start="799:18" pos:end="799:26">"Config6"</literal></expr>;</expr_stmt>

            <break pos:start="801:13" pos:end="801:18">break;</break>

        <case pos:start="803:9" pos:end="803:15">case <expr pos:start="803:14" pos:end="803:14"><literal type="number" pos:start="803:14" pos:end="803:14">7</literal></expr>:</case>

            <expr_stmt pos:start="805:13" pos:end="805:70"><expr pos:start="805:13" pos:end="805:69"><call pos:start="805:13" pos:end="805:69"><name pos:start="805:13" pos:end="805:27">gen_mfc0_load32</name><argument_list pos:start="805:28" pos:end="805:69">(<argument pos:start="805:29" pos:end="805:31"><expr pos:start="805:29" pos:end="805:31"><name pos:start="805:29" pos:end="805:31">arg</name></expr></argument>, <argument pos:start="805:34" pos:end="805:68"><expr pos:start="805:34" pos:end="805:68"><call pos:start="805:34" pos:end="805:68"><name pos:start="805:34" pos:end="805:41">offsetof</name><argument_list pos:start="805:42" pos:end="805:68">(<argument pos:start="805:43" pos:end="805:54"><expr pos:start="805:43" pos:end="805:54"><name pos:start="805:43" pos:end="805:54">CPUMIPSState</name></expr></argument>, <argument pos:start="805:57" pos:end="805:67"><expr pos:start="805:57" pos:end="805:67"><name pos:start="805:57" pos:end="805:67">CP0_Config7</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="807:13" pos:end="807:27"><expr pos:start="807:13" pos:end="807:26"><name pos:start="807:13" pos:end="807:14">rn</name> <operator pos:start="807:16" pos:end="807:16">=</operator> <literal type="string" pos:start="807:18" pos:end="807:26">"Config7"</literal></expr>;</expr_stmt>

            <break pos:start="809:13" pos:end="809:18">break;</break>

        <default pos:start="811:9" pos:end="811:16">default:</default>

            <goto pos:start="813:13" pos:end="813:21">goto <name pos:start="813:18" pos:end="813:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="817:9" pos:end="817:14">break;</break>

    <case pos:start="819:5" pos:end="819:12">case <expr pos:start="819:10" pos:end="819:11"><literal type="number" pos:start="819:10" pos:end="819:11">17</literal></expr>:</case>

        <switch pos:start="821:9" pos:end="835:9">switch <condition pos:start="821:16" pos:end="821:20">(<expr pos:start="821:17" pos:end="821:19"><name pos:start="821:17" pos:end="821:19">sel</name></expr>)</condition> <block pos:start="821:22" pos:end="835:9">{<block_content pos:start="823:9" pos:end="833:21">

        <case pos:start="823:9" pos:end="823:15">case <expr pos:start="823:14" pos:end="823:14"><literal type="number" pos:start="823:14" pos:end="823:14">0</literal></expr>:</case>

            <expr_stmt pos:start="825:13" pos:end="825:49"><expr pos:start="825:13" pos:end="825:48"><call pos:start="825:13" pos:end="825:48"><name pos:start="825:13" pos:end="825:34">gen_helper_mfc0_lladdr</name><argument_list pos:start="825:35" pos:end="825:48">(<argument pos:start="825:36" pos:end="825:38"><expr pos:start="825:36" pos:end="825:38"><name pos:start="825:36" pos:end="825:38">arg</name></expr></argument>, <argument pos:start="825:41" pos:end="825:47"><expr pos:start="825:41" pos:end="825:47"><name pos:start="825:41" pos:end="825:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="827:13" pos:end="827:26"><expr pos:start="827:13" pos:end="827:25"><name pos:start="827:13" pos:end="827:14">rn</name> <operator pos:start="827:16" pos:end="827:16">=</operator> <literal type="string" pos:start="827:18" pos:end="827:25">"LLAddr"</literal></expr>;</expr_stmt>

            <break pos:start="829:13" pos:end="829:18">break;</break>

        <default pos:start="831:9" pos:end="831:16">default:</default>

            <goto pos:start="833:13" pos:end="833:21">goto <name pos:start="833:18" pos:end="833:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="837:9" pos:end="837:14">break;</break>

    <case pos:start="839:5" pos:end="839:12">case <expr pos:start="839:10" pos:end="839:11"><literal type="number" pos:start="839:10" pos:end="839:11">18</literal></expr>:</case>

        <switch pos:start="841:9" pos:end="855:9">switch <condition pos:start="841:16" pos:end="841:20">(<expr pos:start="841:17" pos:end="841:19"><name pos:start="841:17" pos:end="841:19">sel</name></expr>)</condition> <block pos:start="841:22" pos:end="855:9">{<block_content pos:start="843:9" pos:end="853:21">

        <case pos:start="843:9" pos:end="843:21">case <expr pos:start="843:14" pos:end="843:20"><literal type="number" pos:start="843:14" pos:end="843:14">0</literal> <operator pos:start="843:16" pos:end="843:18">...</operator> <literal type="number" pos:start="843:20" pos:end="843:20">7</literal></expr>:</case>

            <expr_stmt pos:start="845:13" pos:end="845:52"><expr pos:start="845:13" pos:end="845:51"><call pos:start="845:13" pos:end="845:51"><name pos:start="845:13" pos:end="845:27">gen_helper_1e0i</name><argument_list pos:start="845:28" pos:end="845:51">(<argument pos:start="845:29" pos:end="845:40"><expr pos:start="845:29" pos:end="845:40"><name pos:start="845:29" pos:end="845:40">mfc0_watchlo</name></expr></argument>, <argument pos:start="845:43" pos:end="845:45"><expr pos:start="845:43" pos:end="845:45"><name pos:start="845:43" pos:end="845:45">arg</name></expr></argument>, <argument pos:start="845:48" pos:end="845:50"><expr pos:start="845:48" pos:end="845:50"><name pos:start="845:48" pos:end="845:50">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="847:13" pos:end="847:27"><expr pos:start="847:13" pos:end="847:26"><name pos:start="847:13" pos:end="847:14">rn</name> <operator pos:start="847:16" pos:end="847:16">=</operator> <literal type="string" pos:start="847:18" pos:end="847:26">"WatchLo"</literal></expr>;</expr_stmt>

            <break pos:start="849:13" pos:end="849:18">break;</break>

        <default pos:start="851:9" pos:end="851:16">default:</default>

            <goto pos:start="853:13" pos:end="853:21">goto <name pos:start="853:18" pos:end="853:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="857:9" pos:end="857:14">break;</break>

    <case pos:start="859:5" pos:end="859:12">case <expr pos:start="859:10" pos:end="859:11"><literal type="number" pos:start="859:10" pos:end="859:11">19</literal></expr>:</case>

        <switch pos:start="861:9" pos:end="875:9">switch <condition pos:start="861:16" pos:end="861:20">(<expr pos:start="861:17" pos:end="861:19"><name pos:start="861:17" pos:end="861:19">sel</name></expr>)</condition> <block pos:start="861:22" pos:end="875:9">{<block_content pos:start="863:9" pos:end="873:21">

        <case pos:start="863:9" pos:end="863:20">case <expr pos:start="863:14" pos:end="863:19"><literal type="number" pos:start="863:14" pos:end="863:14">0</literal> <operator pos:start="863:16" pos:end="863:18">...</operator><literal type="number" pos:start="863:19" pos:end="863:19">7</literal></expr>:</case>

            <expr_stmt pos:start="865:13" pos:end="865:52"><expr pos:start="865:13" pos:end="865:51"><call pos:start="865:13" pos:end="865:51"><name pos:start="865:13" pos:end="865:27">gen_helper_1e0i</name><argument_list pos:start="865:28" pos:end="865:51">(<argument pos:start="865:29" pos:end="865:40"><expr pos:start="865:29" pos:end="865:40"><name pos:start="865:29" pos:end="865:40">mfc0_watchhi</name></expr></argument>, <argument pos:start="865:43" pos:end="865:45"><expr pos:start="865:43" pos:end="865:45"><name pos:start="865:43" pos:end="865:45">arg</name></expr></argument>, <argument pos:start="865:48" pos:end="865:50"><expr pos:start="865:48" pos:end="865:50"><name pos:start="865:48" pos:end="865:50">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="867:13" pos:end="867:27"><expr pos:start="867:13" pos:end="867:26"><name pos:start="867:13" pos:end="867:14">rn</name> <operator pos:start="867:16" pos:end="867:16">=</operator> <literal type="string" pos:start="867:18" pos:end="867:26">"WatchHi"</literal></expr>;</expr_stmt>

            <break pos:start="869:13" pos:end="869:18">break;</break>

        <default pos:start="871:9" pos:end="871:16">default:</default>

            <goto pos:start="873:13" pos:end="873:21">goto <name pos:start="873:18" pos:end="873:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="877:9" pos:end="877:14">break;</break>

    <case pos:start="879:5" pos:end="879:12">case <expr pos:start="879:10" pos:end="879:11"><literal type="number" pos:start="879:10" pos:end="879:11">20</literal></expr>:</case>

        <switch pos:start="881:9" pos:end="903:9">switch <condition pos:start="881:16" pos:end="881:20">(<expr pos:start="881:17" pos:end="881:19"><name pos:start="881:17" pos:end="881:19">sel</name></expr>)</condition> <block pos:start="881:22" pos:end="903:9">{<block_content pos:start="883:9" pos:end="901:21">

        <case pos:start="883:9" pos:end="886:0">case <expr pos:start="883:14" pos:end="883:14"><literal type="number" pos:start="883:14" pos:end="883:14">0</literal></expr>:</case>

<cpp:if pos:start="885:1" pos:end="885:26">#<cpp:directive pos:start="885:2" pos:end="885:3">if</cpp:directive> <expr pos:start="885:5" pos:end="885:26"><call pos:start="885:5" pos:end="885:26"><name pos:start="885:5" pos:end="885:11">defined</name><argument_list pos:start="885:12" pos:end="885:26">(<argument pos:start="885:13" pos:end="885:25"><expr pos:start="885:13" pos:end="885:25"><name pos:start="885:13" pos:end="885:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <expr_stmt pos:start="887:13" pos:end="887:39"><expr pos:start="887:13" pos:end="887:38"><call pos:start="887:13" pos:end="887:38"><name pos:start="887:13" pos:end="887:22">check_insn</name><argument_list pos:start="887:23" pos:end="887:38">(<argument pos:start="887:24" pos:end="887:26"><expr pos:start="887:24" pos:end="887:26"><name pos:start="887:24" pos:end="887:26">ctx</name></expr></argument>, <argument pos:start="887:29" pos:end="887:37"><expr pos:start="887:29" pos:end="887:37"><name pos:start="887:29" pos:end="887:37">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="889:13" pos:end="889:78"><expr pos:start="889:13" pos:end="889:77"><call pos:start="889:13" pos:end="889:77"><name pos:start="889:13" pos:end="889:25">tcg_gen_ld_tl</name><argument_list pos:start="889:26" pos:end="889:77">(<argument pos:start="889:27" pos:end="889:29"><expr pos:start="889:27" pos:end="889:29"><name pos:start="889:27" pos:end="889:29">arg</name></expr></argument>, <argument pos:start="889:32" pos:end="889:38"><expr pos:start="889:32" pos:end="889:38"><name pos:start="889:32" pos:end="889:38">cpu_env</name></expr></argument>, <argument pos:start="889:41" pos:end="889:76"><expr pos:start="889:41" pos:end="889:76"><call pos:start="889:41" pos:end="889:76"><name pos:start="889:41" pos:end="889:48">offsetof</name><argument_list pos:start="889:49" pos:end="889:76">(<argument pos:start="889:50" pos:end="889:61"><expr pos:start="889:50" pos:end="889:61"><name pos:start="889:50" pos:end="889:61">CPUMIPSState</name></expr></argument>, <argument pos:start="889:64" pos:end="889:75"><expr pos:start="889:64" pos:end="889:75"><name pos:start="889:64" pos:end="889:75">CP0_XContext</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="891:13" pos:end="891:40"><expr pos:start="891:13" pos:end="891:39"><call pos:start="891:13" pos:end="891:39"><name pos:start="891:13" pos:end="891:29">tcg_gen_ext32s_tl</name><argument_list pos:start="891:30" pos:end="891:39">(<argument pos:start="891:31" pos:end="891:33"><expr pos:start="891:31" pos:end="891:33"><name pos:start="891:31" pos:end="891:33">arg</name></expr></argument>, <argument pos:start="891:36" pos:end="891:38"><expr pos:start="891:36" pos:end="891:38"><name pos:start="891:36" pos:end="891:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="893:13" pos:end="893:28"><expr pos:start="893:13" pos:end="893:27"><name pos:start="893:13" pos:end="893:14">rn</name> <operator pos:start="893:16" pos:end="893:16">=</operator> <literal type="string" pos:start="893:18" pos:end="893:27">"XContext"</literal></expr>;</expr_stmt>

            <break pos:start="895:13" pos:end="898:0">break;</break>

<cpp:endif pos:start="897:1" pos:end="897:6">#<cpp:directive pos:start="897:2" pos:end="897:6">endif</cpp:directive></cpp:endif>

        <default pos:start="899:9" pos:end="899:16">default:</default>

            <goto pos:start="901:13" pos:end="901:21">goto <name pos:start="901:18" pos:end="901:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="905:9" pos:end="905:14">break;</break>

    <case pos:start="907:5" pos:end="907:12">case <expr pos:start="907:10" pos:end="907:11"><literal type="number" pos:start="907:10" pos:end="907:11">21</literal></expr>:</case>

       <comment type="block" pos:start="909:8" pos:end="909:72">/* Officially reserved, but sel 0 is used for R1x000 framemask */</comment>

        <switch pos:start="911:9" pos:end="925:9">switch <condition pos:start="911:16" pos:end="911:20">(<expr pos:start="911:17" pos:end="911:19"><name pos:start="911:17" pos:end="911:19">sel</name></expr>)</condition> <block pos:start="911:22" pos:end="925:9">{<block_content pos:start="913:9" pos:end="923:21">

        <case pos:start="913:9" pos:end="913:15">case <expr pos:start="913:14" pos:end="913:14"><literal type="number" pos:start="913:14" pos:end="913:14">0</literal></expr>:</case>

            <expr_stmt pos:start="915:13" pos:end="915:72"><expr pos:start="915:13" pos:end="915:71"><call pos:start="915:13" pos:end="915:71"><name pos:start="915:13" pos:end="915:27">gen_mfc0_load32</name><argument_list pos:start="915:28" pos:end="915:71">(<argument pos:start="915:29" pos:end="915:31"><expr pos:start="915:29" pos:end="915:31"><name pos:start="915:29" pos:end="915:31">arg</name></expr></argument>, <argument pos:start="915:34" pos:end="915:70"><expr pos:start="915:34" pos:end="915:70"><call pos:start="915:34" pos:end="915:70"><name pos:start="915:34" pos:end="915:41">offsetof</name><argument_list pos:start="915:42" pos:end="915:70">(<argument pos:start="915:43" pos:end="915:54"><expr pos:start="915:43" pos:end="915:54"><name pos:start="915:43" pos:end="915:54">CPUMIPSState</name></expr></argument>, <argument pos:start="915:57" pos:end="915:69"><expr pos:start="915:57" pos:end="915:69"><name pos:start="915:57" pos:end="915:69">CP0_Framemask</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="917:13" pos:end="917:29"><expr pos:start="917:13" pos:end="917:28"><name pos:start="917:13" pos:end="917:14">rn</name> <operator pos:start="917:16" pos:end="917:16">=</operator> <literal type="string" pos:start="917:18" pos:end="917:28">"Framemask"</literal></expr>;</expr_stmt>

            <break pos:start="919:13" pos:end="919:18">break;</break>

        <default pos:start="921:9" pos:end="921:16">default:</default>

            <goto pos:start="923:13" pos:end="923:21">goto <name pos:start="923:18" pos:end="923:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="927:9" pos:end="927:14">break;</break>

    <case pos:start="929:5" pos:end="929:12">case <expr pos:start="929:10" pos:end="929:11"><literal type="number" pos:start="929:10" pos:end="929:11">22</literal></expr>:</case>

        <expr_stmt pos:start="931:9" pos:end="931:32"><expr pos:start="931:9" pos:end="931:31"><call pos:start="931:9" pos:end="931:31"><name pos:start="931:9" pos:end="931:23">tcg_gen_movi_tl</name><argument_list pos:start="931:24" pos:end="931:31">(<argument pos:start="931:25" pos:end="931:27"><expr pos:start="931:25" pos:end="931:27"><name pos:start="931:25" pos:end="931:27">arg</name></expr></argument>, <argument pos:start="931:30" pos:end="931:30"><expr pos:start="931:30" pos:end="931:30"><literal type="number" pos:start="931:30" pos:end="931:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="931:34" pos:end="931:52">/* unimplemented */</comment>

        <expr_stmt pos:start="933:9" pos:end="933:27"><expr pos:start="933:9" pos:end="933:26"><name pos:start="933:9" pos:end="933:10">rn</name> <operator pos:start="933:12" pos:end="933:12">=</operator> <literal type="string" pos:start="933:14" pos:end="933:26">"'Diagnostic"</literal></expr>;</expr_stmt> <comment type="block" pos:start="933:29" pos:end="933:58">/* implementation dependent */</comment>

        <break pos:start="935:9" pos:end="935:14">break;</break>

    <case pos:start="937:5" pos:end="937:12">case <expr pos:start="937:10" pos:end="937:11"><literal type="number" pos:start="937:10" pos:end="937:11">23</literal></expr>:</case>

        <switch pos:start="939:9" pos:end="985:9">switch <condition pos:start="939:16" pos:end="939:20">(<expr pos:start="939:17" pos:end="939:19"><name pos:start="939:17" pos:end="939:19">sel</name></expr>)</condition> <block pos:start="939:22" pos:end="985:9">{<block_content pos:start="941:9" pos:end="983:21">

        <case pos:start="941:9" pos:end="941:15">case <expr pos:start="941:14" pos:end="941:14"><literal type="number" pos:start="941:14" pos:end="941:14">0</literal></expr>:</case>

            <expr_stmt pos:start="943:13" pos:end="943:48"><expr pos:start="943:13" pos:end="943:47"><call pos:start="943:13" pos:end="943:47"><name pos:start="943:13" pos:end="943:33">gen_helper_mfc0_debug</name><argument_list pos:start="943:34" pos:end="943:47">(<argument pos:start="943:35" pos:end="943:37"><expr pos:start="943:35" pos:end="943:37"><name pos:start="943:35" pos:end="943:37">arg</name></expr></argument>, <argument pos:start="943:40" pos:end="943:46"><expr pos:start="943:40" pos:end="943:46"><name pos:start="943:40" pos:end="943:46">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="943:50" pos:end="943:68">/* EJTAG support */</comment>

            <expr_stmt pos:start="945:13" pos:end="945:25"><expr pos:start="945:13" pos:end="945:24"><name pos:start="945:13" pos:end="945:14">rn</name> <operator pos:start="945:16" pos:end="945:16">=</operator> <literal type="string" pos:start="945:18" pos:end="945:24">"Debug"</literal></expr>;</expr_stmt>

            <break pos:start="947:13" pos:end="947:18">break;</break>

        <case pos:start="949:9" pos:end="949:15">case <expr pos:start="949:14" pos:end="949:14"><literal type="number" pos:start="949:14" pos:end="949:14">1</literal></expr>:</case>

<comment type="line" pos:start="951:1" pos:end="951:70">//            gen_helper_mfc0_tracecontrol(arg); /* PDtrace support */</comment>

            <expr_stmt pos:start="953:13" pos:end="953:32"><expr pos:start="953:13" pos:end="953:31"><name pos:start="953:13" pos:end="953:14">rn</name> <operator pos:start="953:16" pos:end="953:16">=</operator> <literal type="string" pos:start="953:18" pos:end="953:31">"TraceControl"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="955:1" pos:end="955:20">//            break;</comment>

        <case pos:start="957:9" pos:end="957:15">case <expr pos:start="957:14" pos:end="957:14"><literal type="number" pos:start="957:14" pos:end="957:14">2</literal></expr>:</case>

<comment type="line" pos:start="959:1" pos:end="959:71">//            gen_helper_mfc0_tracecontrol2(arg); /* PDtrace support */</comment>

            <expr_stmt pos:start="961:13" pos:end="961:33"><expr pos:start="961:13" pos:end="961:32"><name pos:start="961:13" pos:end="961:14">rn</name> <operator pos:start="961:16" pos:end="961:16">=</operator> <literal type="string" pos:start="961:18" pos:end="961:32">"TraceControl2"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="963:1" pos:end="963:20">//            break;</comment>

        <case pos:start="965:9" pos:end="965:15">case <expr pos:start="965:14" pos:end="965:14"><literal type="number" pos:start="965:14" pos:end="965:14">3</literal></expr>:</case>

<comment type="line" pos:start="967:1" pos:end="967:71">//            gen_helper_mfc0_usertracedata(arg); /* PDtrace support */</comment>

            <expr_stmt pos:start="969:13" pos:end="969:33"><expr pos:start="969:13" pos:end="969:32"><name pos:start="969:13" pos:end="969:14">rn</name> <operator pos:start="969:16" pos:end="969:16">=</operator> <literal type="string" pos:start="969:18" pos:end="969:32">"UserTraceData"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="971:1" pos:end="971:20">//            break;</comment>

        <case pos:start="973:9" pos:end="973:15">case <expr pos:start="973:14" pos:end="973:14"><literal type="number" pos:start="973:14" pos:end="973:14">4</literal></expr>:</case>

<comment type="line" pos:start="975:1" pos:end="975:66">//            gen_helper_mfc0_tracebpc(arg); /* PDtrace support */</comment>

            <expr_stmt pos:start="977:13" pos:end="977:28"><expr pos:start="977:13" pos:end="977:27"><name pos:start="977:13" pos:end="977:14">rn</name> <operator pos:start="977:16" pos:end="977:16">=</operator> <literal type="string" pos:start="977:18" pos:end="977:27">"TraceBPC"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="979:1" pos:end="979:20">//            break;</comment>

        <default pos:start="981:9" pos:end="981:16">default:</default>

            <goto pos:start="983:13" pos:end="983:21">goto <name pos:start="983:18" pos:end="983:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="987:9" pos:end="987:14">break;</break>

    <case pos:start="989:5" pos:end="989:12">case <expr pos:start="989:10" pos:end="989:11"><literal type="number" pos:start="989:10" pos:end="989:11">24</literal></expr>:</case>

        <switch pos:start="991:9" pos:end="1009:9">switch <condition pos:start="991:16" pos:end="991:20">(<expr pos:start="991:17" pos:end="991:19"><name pos:start="991:17" pos:end="991:19">sel</name></expr>)</condition> <block pos:start="991:22" pos:end="1009:9">{<block_content pos:start="993:9" pos:end="1007:21">

        <case pos:start="993:9" pos:end="993:15">case <expr pos:start="993:14" pos:end="993:14"><literal type="number" pos:start="993:14" pos:end="993:14">0</literal></expr>:</case>

            <comment type="block" pos:start="995:13" pos:end="995:31">/* EJTAG support */</comment>

            <expr_stmt pos:start="997:13" pos:end="997:74"><expr pos:start="997:13" pos:end="997:73"><call pos:start="997:13" pos:end="997:73"><name pos:start="997:13" pos:end="997:25">tcg_gen_ld_tl</name><argument_list pos:start="997:26" pos:end="997:73">(<argument pos:start="997:27" pos:end="997:29"><expr pos:start="997:27" pos:end="997:29"><name pos:start="997:27" pos:end="997:29">arg</name></expr></argument>, <argument pos:start="997:32" pos:end="997:38"><expr pos:start="997:32" pos:end="997:38"><name pos:start="997:32" pos:end="997:38">cpu_env</name></expr></argument>, <argument pos:start="997:41" pos:end="997:72"><expr pos:start="997:41" pos:end="997:72"><call pos:start="997:41" pos:end="997:72"><name pos:start="997:41" pos:end="997:48">offsetof</name><argument_list pos:start="997:49" pos:end="997:72">(<argument pos:start="997:50" pos:end="997:61"><expr pos:start="997:50" pos:end="997:61"><name pos:start="997:50" pos:end="997:61">CPUMIPSState</name></expr></argument>, <argument pos:start="997:64" pos:end="997:71"><expr pos:start="997:64" pos:end="997:71"><name pos:start="997:64" pos:end="997:71">CP0_DEPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="999:13" pos:end="999:40"><expr pos:start="999:13" pos:end="999:39"><call pos:start="999:13" pos:end="999:39"><name pos:start="999:13" pos:end="999:29">tcg_gen_ext32s_tl</name><argument_list pos:start="999:30" pos:end="999:39">(<argument pos:start="999:31" pos:end="999:33"><expr pos:start="999:31" pos:end="999:33"><name pos:start="999:31" pos:end="999:33">arg</name></expr></argument>, <argument pos:start="999:36" pos:end="999:38"><expr pos:start="999:36" pos:end="999:38"><name pos:start="999:36" pos:end="999:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1001:13" pos:end="1001:24"><expr pos:start="1001:13" pos:end="1001:23"><name pos:start="1001:13" pos:end="1001:14">rn</name> <operator pos:start="1001:16" pos:end="1001:16">=</operator> <literal type="string" pos:start="1001:18" pos:end="1001:23">"DEPC"</literal></expr>;</expr_stmt>

            <break pos:start="1003:13" pos:end="1003:18">break;</break>

        <default pos:start="1005:9" pos:end="1005:16">default:</default>

            <goto pos:start="1007:13" pos:end="1007:21">goto <name pos:start="1007:18" pos:end="1007:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1011:9" pos:end="1011:14">break;</break>

    <case pos:start="1013:5" pos:end="1013:12">case <expr pos:start="1013:10" pos:end="1013:11"><literal type="number" pos:start="1013:10" pos:end="1013:11">25</literal></expr>:</case>

        <switch pos:start="1015:9" pos:end="1085:9">switch <condition pos:start="1015:16" pos:end="1015:20">(<expr pos:start="1015:17" pos:end="1015:19"><name pos:start="1015:17" pos:end="1015:19">sel</name></expr>)</condition> <block pos:start="1015:22" pos:end="1085:9">{<block_content pos:start="1017:9" pos:end="1083:21">

        <case pos:start="1017:9" pos:end="1017:15">case <expr pos:start="1017:14" pos:end="1017:14"><literal type="number" pos:start="1017:14" pos:end="1017:14">0</literal></expr>:</case>

            <expr_stmt pos:start="1019:13" pos:end="1019:75"><expr pos:start="1019:13" pos:end="1019:74"><call pos:start="1019:13" pos:end="1019:74"><name pos:start="1019:13" pos:end="1019:27">gen_mfc0_load32</name><argument_list pos:start="1019:28" pos:end="1019:74">(<argument pos:start="1019:29" pos:end="1019:31"><expr pos:start="1019:29" pos:end="1019:31"><name pos:start="1019:29" pos:end="1019:31">arg</name></expr></argument>, <argument pos:start="1019:34" pos:end="1019:73"><expr pos:start="1019:34" pos:end="1019:73"><call pos:start="1019:34" pos:end="1019:73"><name pos:start="1019:34" pos:end="1019:41">offsetof</name><argument_list pos:start="1019:42" pos:end="1019:73">(<argument pos:start="1019:43" pos:end="1019:54"><expr pos:start="1019:43" pos:end="1019:54"><name pos:start="1019:43" pos:end="1019:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1019:57" pos:end="1019:72"><expr pos:start="1019:57" pos:end="1019:72"><name pos:start="1019:57" pos:end="1019:72">CP0_Performance0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1021:13" pos:end="1021:32"><expr pos:start="1021:13" pos:end="1021:31"><name pos:start="1021:13" pos:end="1021:14">rn</name> <operator pos:start="1021:16" pos:end="1021:16">=</operator> <literal type="string" pos:start="1021:18" pos:end="1021:31">"Performance0"</literal></expr>;</expr_stmt>

            <break pos:start="1023:13" pos:end="1023:18">break;</break>

        <case pos:start="1025:9" pos:end="1025:15">case <expr pos:start="1025:14" pos:end="1025:14"><literal type="number" pos:start="1025:14" pos:end="1025:14">1</literal></expr>:</case>

<comment type="line" pos:start="1027:1" pos:end="1027:48">//            gen_helper_mfc0_performance1(arg);</comment>

            <expr_stmt pos:start="1029:13" pos:end="1029:32"><expr pos:start="1029:13" pos:end="1029:31"><name pos:start="1029:13" pos:end="1029:14">rn</name> <operator pos:start="1029:16" pos:end="1029:16">=</operator> <literal type="string" pos:start="1029:18" pos:end="1029:31">"Performance1"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1031:1" pos:end="1031:20">//            break;</comment>

        <case pos:start="1033:9" pos:end="1033:15">case <expr pos:start="1033:14" pos:end="1033:14"><literal type="number" pos:start="1033:14" pos:end="1033:14">2</literal></expr>:</case>

<comment type="line" pos:start="1035:1" pos:end="1035:48">//            gen_helper_mfc0_performance2(arg);</comment>

            <expr_stmt pos:start="1037:13" pos:end="1037:32"><expr pos:start="1037:13" pos:end="1037:31"><name pos:start="1037:13" pos:end="1037:14">rn</name> <operator pos:start="1037:16" pos:end="1037:16">=</operator> <literal type="string" pos:start="1037:18" pos:end="1037:31">"Performance2"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1039:1" pos:end="1039:20">//            break;</comment>

        <case pos:start="1041:9" pos:end="1041:15">case <expr pos:start="1041:14" pos:end="1041:14"><literal type="number" pos:start="1041:14" pos:end="1041:14">3</literal></expr>:</case>

<comment type="line" pos:start="1043:1" pos:end="1043:48">//            gen_helper_mfc0_performance3(arg);</comment>

            <expr_stmt pos:start="1045:13" pos:end="1045:32"><expr pos:start="1045:13" pos:end="1045:31"><name pos:start="1045:13" pos:end="1045:14">rn</name> <operator pos:start="1045:16" pos:end="1045:16">=</operator> <literal type="string" pos:start="1045:18" pos:end="1045:31">"Performance3"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1047:1" pos:end="1047:20">//            break;</comment>

        <case pos:start="1049:9" pos:end="1049:15">case <expr pos:start="1049:14" pos:end="1049:14"><literal type="number" pos:start="1049:14" pos:end="1049:14">4</literal></expr>:</case>

<comment type="line" pos:start="1051:1" pos:end="1051:48">//            gen_helper_mfc0_performance4(arg);</comment>

            <expr_stmt pos:start="1053:13" pos:end="1053:32"><expr pos:start="1053:13" pos:end="1053:31"><name pos:start="1053:13" pos:end="1053:14">rn</name> <operator pos:start="1053:16" pos:end="1053:16">=</operator> <literal type="string" pos:start="1053:18" pos:end="1053:31">"Performance4"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1055:1" pos:end="1055:20">//            break;</comment>

        <case pos:start="1057:9" pos:end="1057:15">case <expr pos:start="1057:14" pos:end="1057:14"><literal type="number" pos:start="1057:14" pos:end="1057:14">5</literal></expr>:</case>

<comment type="line" pos:start="1059:1" pos:end="1059:48">//            gen_helper_mfc0_performance5(arg);</comment>

            <expr_stmt pos:start="1061:13" pos:end="1061:32"><expr pos:start="1061:13" pos:end="1061:31"><name pos:start="1061:13" pos:end="1061:14">rn</name> <operator pos:start="1061:16" pos:end="1061:16">=</operator> <literal type="string" pos:start="1061:18" pos:end="1061:31">"Performance5"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1063:1" pos:end="1063:20">//            break;</comment>

        <case pos:start="1065:9" pos:end="1065:15">case <expr pos:start="1065:14" pos:end="1065:14"><literal type="number" pos:start="1065:14" pos:end="1065:14">6</literal></expr>:</case>

<comment type="line" pos:start="1067:1" pos:end="1067:48">//            gen_helper_mfc0_performance6(arg);</comment>

            <expr_stmt pos:start="1069:13" pos:end="1069:32"><expr pos:start="1069:13" pos:end="1069:31"><name pos:start="1069:13" pos:end="1069:14">rn</name> <operator pos:start="1069:16" pos:end="1069:16">=</operator> <literal type="string" pos:start="1069:18" pos:end="1069:31">"Performance6"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1071:1" pos:end="1071:20">//            break;</comment>

        <case pos:start="1073:9" pos:end="1073:15">case <expr pos:start="1073:14" pos:end="1073:14"><literal type="number" pos:start="1073:14" pos:end="1073:14">7</literal></expr>:</case>

<comment type="line" pos:start="1075:1" pos:end="1075:48">//            gen_helper_mfc0_performance7(arg);</comment>

            <expr_stmt pos:start="1077:13" pos:end="1077:32"><expr pos:start="1077:13" pos:end="1077:31"><name pos:start="1077:13" pos:end="1077:14">rn</name> <operator pos:start="1077:16" pos:end="1077:16">=</operator> <literal type="string" pos:start="1077:18" pos:end="1077:31">"Performance7"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1079:1" pos:end="1079:20">//            break;</comment>

        <default pos:start="1081:9" pos:end="1081:16">default:</default>

            <goto pos:start="1083:13" pos:end="1083:21">goto <name pos:start="1083:18" pos:end="1083:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1087:9" pos:end="1087:14">break;</break>

    <case pos:start="1089:5" pos:end="1089:12">case <expr pos:start="1089:10" pos:end="1089:11"><literal type="number" pos:start="1089:10" pos:end="1089:11">26</literal></expr>:</case>

        <expr_stmt pos:start="1091:9" pos:end="1091:32"><expr pos:start="1091:9" pos:end="1091:31"><call pos:start="1091:9" pos:end="1091:31"><name pos:start="1091:9" pos:end="1091:23">tcg_gen_movi_tl</name><argument_list pos:start="1091:24" pos:end="1091:31">(<argument pos:start="1091:25" pos:end="1091:27"><expr pos:start="1091:25" pos:end="1091:27"><name pos:start="1091:25" pos:end="1091:27">arg</name></expr></argument>, <argument pos:start="1091:30" pos:end="1091:30"><expr pos:start="1091:30" pos:end="1091:30"><literal type="number" pos:start="1091:30" pos:end="1091:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="1091:34" pos:end="1091:52">/* unimplemented */</comment>

        <expr_stmt pos:start="1093:9" pos:end="1093:19"><expr pos:start="1093:9" pos:end="1093:18"><name pos:start="1093:9" pos:end="1093:10">rn</name> <operator pos:start="1093:12" pos:end="1093:12">=</operator> <literal type="string" pos:start="1093:14" pos:end="1093:18">"ECC"</literal></expr>;</expr_stmt>

        <break pos:start="1095:9" pos:end="1095:14">break;</break>

    <case pos:start="1097:5" pos:end="1097:12">case <expr pos:start="1097:10" pos:end="1097:11"><literal type="number" pos:start="1097:10" pos:end="1097:11">27</literal></expr>:</case>

        <switch pos:start="1099:9" pos:end="1113:9">switch <condition pos:start="1099:16" pos:end="1099:20">(<expr pos:start="1099:17" pos:end="1099:19"><name pos:start="1099:17" pos:end="1099:19">sel</name></expr>)</condition> <block pos:start="1099:22" pos:end="1113:9">{<block_content pos:start="1101:9" pos:end="1111:21">

        <case pos:start="1101:9" pos:end="1101:21">case <expr pos:start="1101:14" pos:end="1101:20"><literal type="number" pos:start="1101:14" pos:end="1101:14">0</literal> <operator pos:start="1101:16" pos:end="1101:18">...</operator> <literal type="number" pos:start="1101:20" pos:end="1101:20">3</literal></expr>:</case>

            <expr_stmt pos:start="1103:13" pos:end="1103:36"><expr pos:start="1103:13" pos:end="1103:35"><call pos:start="1103:13" pos:end="1103:35"><name pos:start="1103:13" pos:end="1103:27">tcg_gen_movi_tl</name><argument_list pos:start="1103:28" pos:end="1103:35">(<argument pos:start="1103:29" pos:end="1103:31"><expr pos:start="1103:29" pos:end="1103:31"><name pos:start="1103:29" pos:end="1103:31">arg</name></expr></argument>, <argument pos:start="1103:34" pos:end="1103:34"><expr pos:start="1103:34" pos:end="1103:34"><literal type="number" pos:start="1103:34" pos:end="1103:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="1103:38" pos:end="1103:56">/* unimplemented */</comment>

            <expr_stmt pos:start="1105:13" pos:end="1105:28"><expr pos:start="1105:13" pos:end="1105:27"><name pos:start="1105:13" pos:end="1105:14">rn</name> <operator pos:start="1105:16" pos:end="1105:16">=</operator> <literal type="string" pos:start="1105:18" pos:end="1105:27">"CacheErr"</literal></expr>;</expr_stmt>

            <break pos:start="1107:13" pos:end="1107:18">break;</break>

        <default pos:start="1109:9" pos:end="1109:16">default:</default>

            <goto pos:start="1111:13" pos:end="1111:21">goto <name pos:start="1111:18" pos:end="1111:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1115:9" pos:end="1115:14">break;</break>

    <case pos:start="1117:5" pos:end="1117:12">case <expr pos:start="1117:10" pos:end="1117:11"><literal type="number" pos:start="1117:10" pos:end="1117:11">28</literal></expr>:</case>

        <switch pos:start="1119:9" pos:end="1153:9">switch <condition pos:start="1119:16" pos:end="1119:20">(<expr pos:start="1119:17" pos:end="1119:19"><name pos:start="1119:17" pos:end="1119:19">sel</name></expr>)</condition> <block pos:start="1119:22" pos:end="1153:9">{<block_content pos:start="1121:9" pos:end="1151:21">

        <case pos:start="1121:9" pos:end="1121:15">case <expr pos:start="1121:14" pos:end="1121:14"><literal type="number" pos:start="1121:14" pos:end="1121:14">0</literal></expr>:</case>

        <case pos:start="1123:9" pos:end="1123:15">case <expr pos:start="1123:14" pos:end="1123:14"><literal type="number" pos:start="1123:14" pos:end="1123:14">2</literal></expr>:</case>

        <case pos:start="1125:9" pos:end="1125:15">case <expr pos:start="1125:14" pos:end="1125:14"><literal type="number" pos:start="1125:14" pos:end="1125:14">4</literal></expr>:</case>

        <case pos:start="1127:9" pos:end="1127:15">case <expr pos:start="1127:14" pos:end="1127:14"><literal type="number" pos:start="1127:14" pos:end="1127:14">6</literal></expr>:</case>

            <expr_stmt pos:start="1129:13" pos:end="1129:68"><expr pos:start="1129:13" pos:end="1129:67"><call pos:start="1129:13" pos:end="1129:67"><name pos:start="1129:13" pos:end="1129:27">gen_mfc0_load32</name><argument_list pos:start="1129:28" pos:end="1129:67">(<argument pos:start="1129:29" pos:end="1129:31"><expr pos:start="1129:29" pos:end="1129:31"><name pos:start="1129:29" pos:end="1129:31">arg</name></expr></argument>, <argument pos:start="1129:34" pos:end="1129:66"><expr pos:start="1129:34" pos:end="1129:66"><call pos:start="1129:34" pos:end="1129:66"><name pos:start="1129:34" pos:end="1129:41">offsetof</name><argument_list pos:start="1129:42" pos:end="1129:66">(<argument pos:start="1129:43" pos:end="1129:54"><expr pos:start="1129:43" pos:end="1129:54"><name pos:start="1129:43" pos:end="1129:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1129:57" pos:end="1129:65"><expr pos:start="1129:57" pos:end="1129:65"><name pos:start="1129:57" pos:end="1129:65">CP0_TagLo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1131:13" pos:end="1131:25"><expr pos:start="1131:13" pos:end="1131:24"><name pos:start="1131:13" pos:end="1131:14">rn</name> <operator pos:start="1131:16" pos:end="1131:16">=</operator> <literal type="string" pos:start="1131:18" pos:end="1131:24">"TagLo"</literal></expr>;</expr_stmt>

            <break pos:start="1133:13" pos:end="1133:18">break;</break>

        <case pos:start="1135:9" pos:end="1135:15">case <expr pos:start="1135:14" pos:end="1135:14"><literal type="number" pos:start="1135:14" pos:end="1135:14">1</literal></expr>:</case>

        <case pos:start="1137:9" pos:end="1137:15">case <expr pos:start="1137:14" pos:end="1137:14"><literal type="number" pos:start="1137:14" pos:end="1137:14">3</literal></expr>:</case>

        <case pos:start="1139:9" pos:end="1139:15">case <expr pos:start="1139:14" pos:end="1139:14"><literal type="number" pos:start="1139:14" pos:end="1139:14">5</literal></expr>:</case>

        <case pos:start="1141:9" pos:end="1141:15">case <expr pos:start="1141:14" pos:end="1141:14"><literal type="number" pos:start="1141:14" pos:end="1141:14">7</literal></expr>:</case>

            <expr_stmt pos:start="1143:13" pos:end="1143:69"><expr pos:start="1143:13" pos:end="1143:68"><call pos:start="1143:13" pos:end="1143:68"><name pos:start="1143:13" pos:end="1143:27">gen_mfc0_load32</name><argument_list pos:start="1143:28" pos:end="1143:68">(<argument pos:start="1143:29" pos:end="1143:31"><expr pos:start="1143:29" pos:end="1143:31"><name pos:start="1143:29" pos:end="1143:31">arg</name></expr></argument>, <argument pos:start="1143:34" pos:end="1143:67"><expr pos:start="1143:34" pos:end="1143:67"><call pos:start="1143:34" pos:end="1143:67"><name pos:start="1143:34" pos:end="1143:41">offsetof</name><argument_list pos:start="1143:42" pos:end="1143:67">(<argument pos:start="1143:43" pos:end="1143:54"><expr pos:start="1143:43" pos:end="1143:54"><name pos:start="1143:43" pos:end="1143:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1143:57" pos:end="1143:66"><expr pos:start="1143:57" pos:end="1143:66"><name pos:start="1143:57" pos:end="1143:66">CP0_DataLo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1145:13" pos:end="1145:26"><expr pos:start="1145:13" pos:end="1145:25"><name pos:start="1145:13" pos:end="1145:14">rn</name> <operator pos:start="1145:16" pos:end="1145:16">=</operator> <literal type="string" pos:start="1145:18" pos:end="1145:25">"DataLo"</literal></expr>;</expr_stmt>

            <break pos:start="1147:13" pos:end="1147:18">break;</break>

        <default pos:start="1149:9" pos:end="1149:16">default:</default>

            <goto pos:start="1151:13" pos:end="1151:21">goto <name pos:start="1151:18" pos:end="1151:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1155:9" pos:end="1155:14">break;</break>

    <case pos:start="1157:5" pos:end="1157:12">case <expr pos:start="1157:10" pos:end="1157:11"><literal type="number" pos:start="1157:10" pos:end="1157:11">29</literal></expr>:</case>

        <switch pos:start="1159:9" pos:end="1193:9">switch <condition pos:start="1159:16" pos:end="1159:20">(<expr pos:start="1159:17" pos:end="1159:19"><name pos:start="1159:17" pos:end="1159:19">sel</name></expr>)</condition> <block pos:start="1159:22" pos:end="1193:9">{<block_content pos:start="1161:9" pos:end="1191:21">

        <case pos:start="1161:9" pos:end="1161:15">case <expr pos:start="1161:14" pos:end="1161:14"><literal type="number" pos:start="1161:14" pos:end="1161:14">0</literal></expr>:</case>

        <case pos:start="1163:9" pos:end="1163:15">case <expr pos:start="1163:14" pos:end="1163:14"><literal type="number" pos:start="1163:14" pos:end="1163:14">2</literal></expr>:</case>

        <case pos:start="1165:9" pos:end="1165:15">case <expr pos:start="1165:14" pos:end="1165:14"><literal type="number" pos:start="1165:14" pos:end="1165:14">4</literal></expr>:</case>

        <case pos:start="1167:9" pos:end="1167:15">case <expr pos:start="1167:14" pos:end="1167:14"><literal type="number" pos:start="1167:14" pos:end="1167:14">6</literal></expr>:</case>

            <expr_stmt pos:start="1169:13" pos:end="1169:68"><expr pos:start="1169:13" pos:end="1169:67"><call pos:start="1169:13" pos:end="1169:67"><name pos:start="1169:13" pos:end="1169:27">gen_mfc0_load32</name><argument_list pos:start="1169:28" pos:end="1169:67">(<argument pos:start="1169:29" pos:end="1169:31"><expr pos:start="1169:29" pos:end="1169:31"><name pos:start="1169:29" pos:end="1169:31">arg</name></expr></argument>, <argument pos:start="1169:34" pos:end="1169:66"><expr pos:start="1169:34" pos:end="1169:66"><call pos:start="1169:34" pos:end="1169:66"><name pos:start="1169:34" pos:end="1169:41">offsetof</name><argument_list pos:start="1169:42" pos:end="1169:66">(<argument pos:start="1169:43" pos:end="1169:54"><expr pos:start="1169:43" pos:end="1169:54"><name pos:start="1169:43" pos:end="1169:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1169:57" pos:end="1169:65"><expr pos:start="1169:57" pos:end="1169:65"><name pos:start="1169:57" pos:end="1169:65">CP0_TagHi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1171:13" pos:end="1171:25"><expr pos:start="1171:13" pos:end="1171:24"><name pos:start="1171:13" pos:end="1171:14">rn</name> <operator pos:start="1171:16" pos:end="1171:16">=</operator> <literal type="string" pos:start="1171:18" pos:end="1171:24">"TagHi"</literal></expr>;</expr_stmt>

            <break pos:start="1173:13" pos:end="1173:18">break;</break>

        <case pos:start="1175:9" pos:end="1175:15">case <expr pos:start="1175:14" pos:end="1175:14"><literal type="number" pos:start="1175:14" pos:end="1175:14">1</literal></expr>:</case>

        <case pos:start="1177:9" pos:end="1177:15">case <expr pos:start="1177:14" pos:end="1177:14"><literal type="number" pos:start="1177:14" pos:end="1177:14">3</literal></expr>:</case>

        <case pos:start="1179:9" pos:end="1179:15">case <expr pos:start="1179:14" pos:end="1179:14"><literal type="number" pos:start="1179:14" pos:end="1179:14">5</literal></expr>:</case>

        <case pos:start="1181:9" pos:end="1181:15">case <expr pos:start="1181:14" pos:end="1181:14"><literal type="number" pos:start="1181:14" pos:end="1181:14">7</literal></expr>:</case>

            <expr_stmt pos:start="1183:13" pos:end="1183:69"><expr pos:start="1183:13" pos:end="1183:68"><call pos:start="1183:13" pos:end="1183:68"><name pos:start="1183:13" pos:end="1183:27">gen_mfc0_load32</name><argument_list pos:start="1183:28" pos:end="1183:68">(<argument pos:start="1183:29" pos:end="1183:31"><expr pos:start="1183:29" pos:end="1183:31"><name pos:start="1183:29" pos:end="1183:31">arg</name></expr></argument>, <argument pos:start="1183:34" pos:end="1183:67"><expr pos:start="1183:34" pos:end="1183:67"><call pos:start="1183:34" pos:end="1183:67"><name pos:start="1183:34" pos:end="1183:41">offsetof</name><argument_list pos:start="1183:42" pos:end="1183:67">(<argument pos:start="1183:43" pos:end="1183:54"><expr pos:start="1183:43" pos:end="1183:54"><name pos:start="1183:43" pos:end="1183:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1183:57" pos:end="1183:66"><expr pos:start="1183:57" pos:end="1183:66"><name pos:start="1183:57" pos:end="1183:66">CP0_DataHi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1185:13" pos:end="1185:26"><expr pos:start="1185:13" pos:end="1185:25"><name pos:start="1185:13" pos:end="1185:14">rn</name> <operator pos:start="1185:16" pos:end="1185:16">=</operator> <literal type="string" pos:start="1185:18" pos:end="1185:25">"DataHi"</literal></expr>;</expr_stmt>

            <break pos:start="1187:13" pos:end="1187:18">break;</break>

        <default pos:start="1189:9" pos:end="1189:16">default:</default>

            <goto pos:start="1191:13" pos:end="1191:21">goto <name pos:start="1191:18" pos:end="1191:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1195:9" pos:end="1195:14">break;</break>

    <case pos:start="1197:5" pos:end="1197:12">case <expr pos:start="1197:10" pos:end="1197:11"><literal type="number" pos:start="1197:10" pos:end="1197:11">30</literal></expr>:</case>

        <switch pos:start="1199:9" pos:end="1215:9">switch <condition pos:start="1199:16" pos:end="1199:20">(<expr pos:start="1199:17" pos:end="1199:19"><name pos:start="1199:17" pos:end="1199:19">sel</name></expr>)</condition> <block pos:start="1199:22" pos:end="1215:9">{<block_content pos:start="1201:9" pos:end="1213:21">

        <case pos:start="1201:9" pos:end="1201:15">case <expr pos:start="1201:14" pos:end="1201:14"><literal type="number" pos:start="1201:14" pos:end="1201:14">0</literal></expr>:</case>

            <expr_stmt pos:start="1203:13" pos:end="1203:78"><expr pos:start="1203:13" pos:end="1203:77"><call pos:start="1203:13" pos:end="1203:77"><name pos:start="1203:13" pos:end="1203:25">tcg_gen_ld_tl</name><argument_list pos:start="1203:26" pos:end="1203:77">(<argument pos:start="1203:27" pos:end="1203:29"><expr pos:start="1203:27" pos:end="1203:29"><name pos:start="1203:27" pos:end="1203:29">arg</name></expr></argument>, <argument pos:start="1203:32" pos:end="1203:38"><expr pos:start="1203:32" pos:end="1203:38"><name pos:start="1203:32" pos:end="1203:38">cpu_env</name></expr></argument>, <argument pos:start="1203:41" pos:end="1203:76"><expr pos:start="1203:41" pos:end="1203:76"><call pos:start="1203:41" pos:end="1203:76"><name pos:start="1203:41" pos:end="1203:48">offsetof</name><argument_list pos:start="1203:49" pos:end="1203:76">(<argument pos:start="1203:50" pos:end="1203:61"><expr pos:start="1203:50" pos:end="1203:61"><name pos:start="1203:50" pos:end="1203:61">CPUMIPSState</name></expr></argument>, <argument pos:start="1203:64" pos:end="1203:75"><expr pos:start="1203:64" pos:end="1203:75"><name pos:start="1203:64" pos:end="1203:75">CP0_ErrorEPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1205:13" pos:end="1205:40"><expr pos:start="1205:13" pos:end="1205:39"><call pos:start="1205:13" pos:end="1205:39"><name pos:start="1205:13" pos:end="1205:29">tcg_gen_ext32s_tl</name><argument_list pos:start="1205:30" pos:end="1205:39">(<argument pos:start="1205:31" pos:end="1205:33"><expr pos:start="1205:31" pos:end="1205:33"><name pos:start="1205:31" pos:end="1205:33">arg</name></expr></argument>, <argument pos:start="1205:36" pos:end="1205:38"><expr pos:start="1205:36" pos:end="1205:38"><name pos:start="1205:36" pos:end="1205:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1207:13" pos:end="1207:28"><expr pos:start="1207:13" pos:end="1207:27"><name pos:start="1207:13" pos:end="1207:14">rn</name> <operator pos:start="1207:16" pos:end="1207:16">=</operator> <literal type="string" pos:start="1207:18" pos:end="1207:27">"ErrorEPC"</literal></expr>;</expr_stmt>

            <break pos:start="1209:13" pos:end="1209:18">break;</break>

        <default pos:start="1211:9" pos:end="1211:16">default:</default>

            <goto pos:start="1213:13" pos:end="1213:21">goto <name pos:start="1213:18" pos:end="1213:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1217:9" pos:end="1217:14">break;</break>

    <case pos:start="1219:5" pos:end="1219:12">case <expr pos:start="1219:10" pos:end="1219:11"><literal type="number" pos:start="1219:10" pos:end="1219:11">31</literal></expr>:</case>

        <switch pos:start="1221:9" pos:end="1257:9">switch <condition pos:start="1221:16" pos:end="1221:20">(<expr pos:start="1221:17" pos:end="1221:19"><name pos:start="1221:17" pos:end="1221:19">sel</name></expr>)</condition> <block pos:start="1221:22" pos:end="1257:9">{<block_content pos:start="1223:9" pos:end="1255:21">

        <case pos:start="1223:9" pos:end="1223:15">case <expr pos:start="1223:14" pos:end="1223:14"><literal type="number" pos:start="1223:14" pos:end="1223:14">0</literal></expr>:</case>

            <comment type="block" pos:start="1225:13" pos:end="1225:31">/* EJTAG support */</comment>

            <expr_stmt pos:start="1227:13" pos:end="1227:69"><expr pos:start="1227:13" pos:end="1227:68"><call pos:start="1227:13" pos:end="1227:68"><name pos:start="1227:13" pos:end="1227:27">gen_mfc0_load32</name><argument_list pos:start="1227:28" pos:end="1227:68">(<argument pos:start="1227:29" pos:end="1227:31"><expr pos:start="1227:29" pos:end="1227:31"><name pos:start="1227:29" pos:end="1227:31">arg</name></expr></argument>, <argument pos:start="1227:34" pos:end="1227:67"><expr pos:start="1227:34" pos:end="1227:67"><call pos:start="1227:34" pos:end="1227:67"><name pos:start="1227:34" pos:end="1227:41">offsetof</name><argument_list pos:start="1227:42" pos:end="1227:67">(<argument pos:start="1227:43" pos:end="1227:54"><expr pos:start="1227:43" pos:end="1227:54"><name pos:start="1227:43" pos:end="1227:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1227:57" pos:end="1227:66"><expr pos:start="1227:57" pos:end="1227:66"><name pos:start="1227:57" pos:end="1227:66">CP0_DESAVE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1229:13" pos:end="1229:26"><expr pos:start="1229:13" pos:end="1229:25"><name pos:start="1229:13" pos:end="1229:14">rn</name> <operator pos:start="1229:16" pos:end="1229:16">=</operator> <literal type="string" pos:start="1229:18" pos:end="1229:25">"DESAVE"</literal></expr>;</expr_stmt>

            <break pos:start="1231:13" pos:end="1231:18">break;</break>

        <case pos:start="1233:9" pos:end="1233:21">case <expr pos:start="1233:14" pos:end="1233:20"><literal type="number" pos:start="1233:14" pos:end="1233:14">2</literal> <operator pos:start="1233:16" pos:end="1233:18">...</operator> <literal type="number" pos:start="1233:20" pos:end="1233:20">7</literal></expr>:</case>

            <if_stmt pos:start="1235:13" pos:end="1249:13"><if pos:start="1235:13" pos:end="1245:13">if <condition pos:start="1235:16" pos:end="1235:44">(<expr pos:start="1235:17" pos:end="1235:43"><name pos:start="1235:17" pos:end="1235:30"><name pos:start="1235:17" pos:end="1235:19">ctx</name><operator pos:start="1235:20" pos:end="1235:21">-&gt;</operator><name pos:start="1235:22" pos:end="1235:30">kscrexist</name></name> <operator pos:start="1235:32" pos:end="1235:32">&amp;</operator> <operator pos:start="1235:34" pos:end="1235:34">(</operator><literal type="number" pos:start="1235:35" pos:end="1235:35">1</literal> <operator pos:start="1235:37" pos:end="1235:38">&lt;&lt;</operator> <name pos:start="1235:40" pos:end="1235:42">sel</name><operator pos:start="1235:43" pos:end="1235:43">)</operator></expr>)</condition> <block pos:start="1235:46" pos:end="1245:13">{<block_content pos:start="1237:17" pos:end="1243:32">

                <expr_stmt pos:start="1237:17" pos:end="1239:75"><expr pos:start="1237:17" pos:end="1239:74"><call pos:start="1237:17" pos:end="1239:74"><name pos:start="1237:17" pos:end="1237:29">tcg_gen_ld_tl</name><argument_list pos:start="1237:30" pos:end="1239:74">(<argument pos:start="1237:31" pos:end="1237:33"><expr pos:start="1237:31" pos:end="1237:33"><name pos:start="1237:31" pos:end="1237:33">arg</name></expr></argument>, <argument pos:start="1237:36" pos:end="1237:42"><expr pos:start="1237:36" pos:end="1237:42"><name pos:start="1237:36" pos:end="1237:42">cpu_env</name></expr></argument>,

                              <argument pos:start="1239:31" pos:end="1239:73"><expr pos:start="1239:31" pos:end="1239:73"><call pos:start="1239:31" pos:end="1239:73"><name pos:start="1239:31" pos:end="1239:38">offsetof</name><argument_list pos:start="1239:39" pos:end="1239:73">(<argument pos:start="1239:40" pos:end="1239:51"><expr pos:start="1239:40" pos:end="1239:51"><name pos:start="1239:40" pos:end="1239:51">CPUMIPSState</name></expr></argument>, <argument pos:start="1239:54" pos:end="1239:72"><expr pos:start="1239:54" pos:end="1239:72"><name pos:start="1239:54" pos:end="1239:72"><name pos:start="1239:54" pos:end="1239:65">CP0_KScratch</name><index pos:start="1239:66" pos:end="1239:72">[<expr pos:start="1239:67" pos:end="1239:71"><name pos:start="1239:67" pos:end="1239:69">sel</name><operator pos:start="1239:70" pos:end="1239:70">-</operator><literal type="number" pos:start="1239:71" pos:end="1239:71">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1241:17" pos:end="1241:44"><expr pos:start="1241:17" pos:end="1241:43"><call pos:start="1241:17" pos:end="1241:43"><name pos:start="1241:17" pos:end="1241:33">tcg_gen_ext32s_tl</name><argument_list pos:start="1241:34" pos:end="1241:43">(<argument pos:start="1241:35" pos:end="1241:37"><expr pos:start="1241:35" pos:end="1241:37"><name pos:start="1241:35" pos:end="1241:37">arg</name></expr></argument>, <argument pos:start="1241:40" pos:end="1241:42"><expr pos:start="1241:40" pos:end="1241:42"><name pos:start="1241:40" pos:end="1241:42">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1243:17" pos:end="1243:32"><expr pos:start="1243:17" pos:end="1243:31"><name pos:start="1243:17" pos:end="1243:18">rn</name> <operator pos:start="1243:20" pos:end="1243:20">=</operator> <literal type="string" pos:start="1243:22" pos:end="1243:31">"KScratch"</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1245:15" pos:end="1249:13">else <block pos:start="1245:20" pos:end="1249:13">{<block_content pos:start="1247:17" pos:end="1247:49">

                <expr_stmt pos:start="1247:17" pos:end="1247:49"><expr pos:start="1247:17" pos:end="1247:48"><call pos:start="1247:17" pos:end="1247:48"><name pos:start="1247:17" pos:end="1247:38">gen_mfc0_unimplemented</name><argument_list pos:start="1247:39" pos:end="1247:48">(<argument pos:start="1247:40" pos:end="1247:42"><expr pos:start="1247:40" pos:end="1247:42"><name pos:start="1247:40" pos:end="1247:42">ctx</name></expr></argument>, <argument pos:start="1247:45" pos:end="1247:47"><expr pos:start="1247:45" pos:end="1247:47"><name pos:start="1247:45" pos:end="1247:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1251:13" pos:end="1251:18">break;</break>

        <default pos:start="1253:9" pos:end="1253:16">default:</default>

            <goto pos:start="1255:13" pos:end="1255:21">goto <name pos:start="1255:18" pos:end="1255:20">die</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1259:9" pos:end="1259:14">break;</break>

    <default pos:start="1261:5" pos:end="1261:12">default:</default>

       <goto pos:start="1263:8" pos:end="1263:16">goto <name pos:start="1263:13" pos:end="1263:15">die</name>;</goto>

    </block_content>}</block></switch>

    <expr_stmt pos:start="1267:5" pos:end="1267:13"><expr pos:start="1267:5" pos:end="1267:12"><operator pos:start="1267:5" pos:end="1267:5">(</operator><name pos:start="1267:6" pos:end="1267:9">void</name><operator pos:start="1267:10" pos:end="1267:10">)</operator><name pos:start="1267:11" pos:end="1267:12">rn</name></expr>;</expr_stmt> <comment type="block" pos:start="1267:15" pos:end="1267:44">/* avoid a compiler warning */</comment>

    <expr_stmt pos:start="1269:5" pos:end="1269:57"><expr pos:start="1269:5" pos:end="1269:56"><call pos:start="1269:5" pos:end="1269:56"><name pos:start="1269:5" pos:end="1269:13">LOG_DISAS</name><argument_list pos:start="1269:14" pos:end="1269:56">(<argument pos:start="1269:15" pos:end="1269:41"><expr pos:start="1269:15" pos:end="1269:41"><literal type="string" pos:start="1269:15" pos:end="1269:41">"mfc0 %s (reg %d sel %d)\n"</literal></expr></argument>, <argument pos:start="1269:44" pos:end="1269:45"><expr pos:start="1269:44" pos:end="1269:45"><name pos:start="1269:44" pos:end="1269:45">rn</name></expr></argument>, <argument pos:start="1269:48" pos:end="1269:50"><expr pos:start="1269:48" pos:end="1269:50"><name pos:start="1269:48" pos:end="1269:50">reg</name></expr></argument>, <argument pos:start="1269:53" pos:end="1269:55"><expr pos:start="1269:53" pos:end="1269:55"><name pos:start="1269:53" pos:end="1269:55">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="1271:5" pos:end="1271:11">return;</return>



<label pos:start="1275:1" pos:end="1275:4"><name pos:start="1275:1" pos:end="1275:3">die</name>:</label>

    <expr_stmt pos:start="1277:5" pos:end="1277:57"><expr pos:start="1277:5" pos:end="1277:56"><call pos:start="1277:5" pos:end="1277:56"><name pos:start="1277:5" pos:end="1277:13">LOG_DISAS</name><argument_list pos:start="1277:14" pos:end="1277:56">(<argument pos:start="1277:15" pos:end="1277:41"><expr pos:start="1277:15" pos:end="1277:41"><literal type="string" pos:start="1277:15" pos:end="1277:41">"mfc0 %s (reg %d sel %d)\n"</literal></expr></argument>, <argument pos:start="1277:44" pos:end="1277:45"><expr pos:start="1277:44" pos:end="1277:45"><name pos:start="1277:44" pos:end="1277:45">rn</name></expr></argument>, <argument pos:start="1277:48" pos:end="1277:50"><expr pos:start="1277:48" pos:end="1277:50"><name pos:start="1277:48" pos:end="1277:50">reg</name></expr></argument>, <argument pos:start="1277:53" pos:end="1277:55"><expr pos:start="1277:53" pos:end="1277:55"><name pos:start="1277:53" pos:end="1277:55">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1279:5" pos:end="1279:37"><expr pos:start="1279:5" pos:end="1279:36"><call pos:start="1279:5" pos:end="1279:36"><name pos:start="1279:5" pos:end="1279:22">generate_exception</name><argument_list pos:start="1279:23" pos:end="1279:36">(<argument pos:start="1279:24" pos:end="1279:26"><expr pos:start="1279:24" pos:end="1279:26"><name pos:start="1279:24" pos:end="1279:26">ctx</name></expr></argument>, <argument pos:start="1279:29" pos:end="1279:35"><expr pos:start="1279:29" pos:end="1279:35"><name pos:start="1279:29" pos:end="1279:35">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
