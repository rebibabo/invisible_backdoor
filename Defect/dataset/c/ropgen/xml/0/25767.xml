<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25767.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:30">gen_evmwsmi</name><parameter_list pos:start="1:31" pos:end="1:49">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:43">DisasContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:26">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">TCGv_i64</name></type> <name pos:start="5:14" pos:end="5:15">t0</name></decl>, <decl pos:start="5:18" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:18" pos:end="5:19">t1</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:36">(<expr pos:start="9:9" pos:end="9:35"><call pos:start="9:9" pos:end="9:35"><name pos:start="9:9" pos:end="9:16">unlikely</name><argument_list pos:start="9:17" pos:end="9:35">(<argument pos:start="9:18" pos:end="9:34"><expr pos:start="9:18" pos:end="9:34"><operator pos:start="9:18" pos:end="9:18">!</operator><name pos:start="9:19" pos:end="9:34"><name pos:start="9:19" pos:end="9:21">ctx</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:34">spe_enabled</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:38" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:15">

        <expr_stmt pos:start="11:9" pos:end="11:45"><expr pos:start="11:9" pos:end="11:44"><call pos:start="11:9" pos:end="11:44"><name pos:start="11:9" pos:end="11:21">gen_exception</name><argument_list pos:start="11:22" pos:end="11:44">(<argument pos:start="11:23" pos:end="11:25"><expr pos:start="11:23" pos:end="11:25"><name pos:start="11:23" pos:end="11:25">ctx</name></expr></argument>, <argument pos:start="11:28" pos:end="11:43"><expr pos:start="11:28" pos:end="11:43"><name pos:start="11:28" pos:end="11:43">POWERPC_EXCP_APU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:6">t0</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:27"><name pos:start="19:10" pos:end="19:25">tcg_temp_new_i64</name><argument_list pos:start="19:26" pos:end="19:27">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="28:0"><expr pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:6">t1</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:27"><name pos:start="21:10" pos:end="21:25">tcg_temp_new_i64</name><argument_list pos:start="21:26" pos:end="21:27">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:28">/* t0 := rA; t1 := rB */</comment>

<cpp:if pos:start="27:1" pos:end="27:25">#<cpp:directive pos:start="27:2" pos:end="27:3">if</cpp:directive> <expr pos:start="27:5" pos:end="27:25"><call pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:11">defined</name><argument_list pos:start="27:12" pos:end="27:25">(<argument pos:start="27:13" pos:end="27:24"><expr pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="29:5" pos:end="29:52"><expr pos:start="29:5" pos:end="29:51"><call pos:start="29:5" pos:end="29:51"><name pos:start="29:5" pos:end="29:21">tcg_gen_ext32s_tl</name><argument_list pos:start="29:22" pos:end="29:51">(<argument pos:start="29:23" pos:end="29:24"><expr pos:start="29:23" pos:end="29:24"><name pos:start="29:23" pos:end="29:24">t0</name></expr></argument>, <argument pos:start="29:27" pos:end="29:50"><expr pos:start="29:27" pos:end="29:50"><name pos:start="29:27" pos:end="29:50"><name pos:start="29:27" pos:end="29:33">cpu_gpr</name><index pos:start="29:34" pos:end="29:50">[<expr pos:start="29:35" pos:end="29:49"><call pos:start="29:35" pos:end="29:49"><name pos:start="29:35" pos:end="29:36">rA</name><argument_list pos:start="29:37" pos:end="29:49">(<argument pos:start="29:38" pos:end="29:48"><expr pos:start="29:38" pos:end="29:48"><name pos:start="29:38" pos:end="29:48"><name pos:start="29:38" pos:end="29:40">ctx</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:48">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="34:0"><expr pos:start="31:5" pos:end="31:51"><call pos:start="31:5" pos:end="31:51"><name pos:start="31:5" pos:end="31:21">tcg_gen_ext32s_tl</name><argument_list pos:start="31:22" pos:end="31:51">(<argument pos:start="31:23" pos:end="31:24"><expr pos:start="31:23" pos:end="31:24"><name pos:start="31:23" pos:end="31:24">t1</name></expr></argument>, <argument pos:start="31:27" pos:end="31:50"><expr pos:start="31:27" pos:end="31:50"><name pos:start="31:27" pos:end="31:50"><name pos:start="31:27" pos:end="31:33">cpu_gpr</name><index pos:start="31:34" pos:end="31:50">[<expr pos:start="31:35" pos:end="31:49"><call pos:start="31:35" pos:end="31:49"><name pos:start="31:35" pos:end="31:36">rB</name><argument_list pos:start="31:37" pos:end="31:49">(<argument pos:start="31:38" pos:end="31:48"><expr pos:start="31:38" pos:end="31:48"><name pos:start="31:38" pos:end="31:48"><name pos:start="31:38" pos:end="31:40">ctx</name><operator pos:start="31:41" pos:end="31:42">-&gt;</operator><name pos:start="31:43" pos:end="31:48">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="33:1" pos:end="33:5">#<cpp:directive pos:start="33:2" pos:end="33:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><call pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:22">tcg_gen_ext_tl_i64</name><argument_list pos:start="35:23" pos:end="35:52">(<argument pos:start="35:24" pos:end="35:25"><expr pos:start="35:24" pos:end="35:25"><name pos:start="35:24" pos:end="35:25">t0</name></expr></argument>, <argument pos:start="35:28" pos:end="35:51"><expr pos:start="35:28" pos:end="35:51"><name pos:start="35:28" pos:end="35:51"><name pos:start="35:28" pos:end="35:34">cpu_gpr</name><index pos:start="35:35" pos:end="35:51">[<expr pos:start="35:36" pos:end="35:50"><call pos:start="35:36" pos:end="35:50"><name pos:start="35:36" pos:end="35:37">rA</name><argument_list pos:start="35:38" pos:end="35:50">(<argument pos:start="35:39" pos:end="35:49"><expr pos:start="35:39" pos:end="35:49"><name pos:start="35:39" pos:end="35:49"><name pos:start="35:39" pos:end="35:41">ctx</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:49">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="40:0"><expr pos:start="37:5" pos:end="37:52"><call pos:start="37:5" pos:end="37:52"><name pos:start="37:5" pos:end="37:22">tcg_gen_ext_tl_i64</name><argument_list pos:start="37:23" pos:end="37:52">(<argument pos:start="37:24" pos:end="37:25"><expr pos:start="37:24" pos:end="37:25"><name pos:start="37:24" pos:end="37:25">t1</name></expr></argument>, <argument pos:start="37:28" pos:end="37:51"><expr pos:start="37:28" pos:end="37:51"><name pos:start="37:28" pos:end="37:51"><name pos:start="37:28" pos:end="37:34">cpu_gpr</name><index pos:start="37:35" pos:end="37:51">[<expr pos:start="37:36" pos:end="37:50"><call pos:start="37:36" pos:end="37:50"><name pos:start="37:36" pos:end="37:37">rB</name><argument_list pos:start="37:38" pos:end="37:50">(<argument pos:start="37:39" pos:end="37:49"><expr pos:start="37:39" pos:end="37:49"><name pos:start="37:39" pos:end="37:49"><name pos:start="37:39" pos:end="37:41">ctx</name><operator pos:start="37:42" pos:end="37:43">-&gt;</operator><name pos:start="37:44" pos:end="37:49">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="43:5" pos:end="43:32"><expr pos:start="43:5" pos:end="43:31"><call pos:start="43:5" pos:end="43:31"><name pos:start="43:5" pos:end="43:19">tcg_gen_mul_i64</name><argument_list pos:start="43:20" pos:end="43:31">(<argument pos:start="43:21" pos:end="43:22"><expr pos:start="43:21" pos:end="43:22"><name pos:start="43:21" pos:end="43:22">t0</name></expr></argument>, <argument pos:start="43:25" pos:end="43:26"><expr pos:start="43:25" pos:end="43:26"><name pos:start="43:25" pos:end="43:26">t0</name></expr></argument>, <argument pos:start="43:29" pos:end="43:30"><expr pos:start="43:29" pos:end="43:30"><name pos:start="43:29" pos:end="43:30">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="43:35" pos:end="43:53">/* t0 := rA * rB */</comment>



    <expr_stmt pos:start="47:5" pos:end="47:41"><expr pos:start="47:5" pos:end="47:40"><call pos:start="47:5" pos:end="47:40"><name pos:start="47:5" pos:end="47:19">gen_store_gpr64</name><argument_list pos:start="47:20" pos:end="47:40">(<argument pos:start="47:21" pos:end="47:35"><expr pos:start="47:21" pos:end="47:35"><call pos:start="47:21" pos:end="47:35"><name pos:start="47:21" pos:end="47:22">rD</name><argument_list pos:start="47:23" pos:end="47:35">(<argument pos:start="47:24" pos:end="47:34"><expr pos:start="47:24" pos:end="47:34"><name pos:start="47:24" pos:end="47:34"><name pos:start="47:24" pos:end="47:26">ctx</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:34">opcode</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:38" pos:end="47:39"><expr pos:start="47:38" pos:end="47:39"><name pos:start="47:38" pos:end="47:39">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="47:43" pos:end="47:56">/* rD := t0 */</comment>



    <expr_stmt pos:start="51:5" pos:end="51:26"><expr pos:start="51:5" pos:end="51:25"><call pos:start="51:5" pos:end="51:25"><name pos:start="51:5" pos:end="51:21">tcg_temp_free_i64</name><argument_list pos:start="51:22" pos:end="51:25">(<argument pos:start="51:23" pos:end="51:24"><expr pos:start="51:23" pos:end="51:24"><name pos:start="51:23" pos:end="51:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:26"><expr pos:start="53:5" pos:end="53:25"><call pos:start="53:5" pos:end="53:25"><name pos:start="53:5" pos:end="53:21">tcg_temp_free_i64</name><argument_list pos:start="53:22" pos:end="53:25">(<argument pos:start="53:23" pos:end="53:24"><expr pos:start="53:23" pos:end="53:24"><name pos:start="53:23" pos:end="53:24">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
