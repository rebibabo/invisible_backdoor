<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1586.c" pos:tabs="8"><macro pos:start="1:1" pos:end="5:52"><name pos:start="1:1" pos:end="1:20">matroska_parse_block</name><argument_list pos:start="1:21" pos:end="5:52">(<argument pos:start="1:22" pos:end="1:51">MatroskaDemuxContext *matroska</argument>, <argument pos:start="1:54" pos:end="1:66">uint8_t *data</argument>, <argument pos:start="1:69" pos:end="1:76">int size</argument>,

                     <argument pos:start="3:22" pos:end="3:32">int64_t pos</argument>, <argument pos:start="3:35" pos:end="3:55">uint64_t cluster_time</argument>, <argument pos:start="3:58" pos:end="3:74">uint64_t duration</argument>,

                     <argument pos:start="5:22" pos:end="5:36">int is_keyframe</argument>, <argument pos:start="5:39" pos:end="5:51">int is_bframe</argument>)</argument_list></macro>

<block pos:start="7:1" pos:end="469:1">{<block_content pos:start="9:5" pos:end="467:15">

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">res</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">track</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">AVPacket</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:17">pkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:21">origdata</name> <init pos:start="17:23" pos:end="17:28">= <expr pos:start="17:25" pos:end="17:28"><name pos:start="17:25" pos:end="17:28">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int16_t</name></type> <name pos:start="19:13" pos:end="19:22">block_time</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:31"><decl pos:start="21:5" pos:end="21:30"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:12">uint32_t</name> <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:23">lace_size</name> <init pos:start="21:25" pos:end="21:30">= <expr pos:start="21:27" pos:end="21:30"><name pos:start="21:27" pos:end="21:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">n</name></decl>, <decl pos:start="23:12" pos:end="23:16"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:12" pos:end="23:16">flags</name></decl>, <decl pos:start="23:19" pos:end="23:27"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:19" pos:end="23:23">laces</name> <init pos:start="23:25" pos:end="23:27">= <expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:16"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint64_t</name></type> <name pos:start="25:14" pos:end="25:16">num</name></decl>;</decl_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:33">/* first byte(s): tracknum */</comment>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:58">(<expr pos:start="31:9" pos:end="31:57"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:10">n</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:52"><name pos:start="31:14" pos:end="31:34">matroska_ebmlnum_uint</name><argument_list pos:start="31:35" pos:end="31:52">(<argument pos:start="31:36" pos:end="31:39"><expr pos:start="31:36" pos:end="31:39"><name pos:start="31:36" pos:end="31:39">data</name></expr></argument>, <argument pos:start="31:42" pos:end="31:45"><expr pos:start="31:42" pos:end="31:45"><name pos:start="31:42" pos:end="31:45">size</name></expr></argument>, <argument pos:start="31:48" pos:end="31:51"><expr pos:start="31:48" pos:end="31:51"><operator pos:start="31:48" pos:end="31:48">&amp;</operator><name pos:start="31:49" pos:end="31:51">num</name></expr></argument>)</argument_list></call><operator pos:start="31:53" pos:end="31:53">)</operator> <operator pos:start="31:55" pos:end="31:55">&lt;</operator> <literal type="number" pos:start="31:57" pos:end="31:57">0</literal></expr>)</condition> <block pos:start="31:60" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:19">

        <expr_stmt pos:start="33:9" pos:end="33:71"><expr pos:start="33:9" pos:end="33:70"><call pos:start="33:9" pos:end="33:70"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:70">(<argument pos:start="33:16" pos:end="33:28"><expr pos:start="33:16" pos:end="33:28"><name pos:start="33:16" pos:end="33:28"><name pos:start="33:16" pos:end="33:23">matroska</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:28">ctx</name></name></expr></argument>, <argument pos:start="33:31" pos:end="33:42"><expr pos:start="33:31" pos:end="33:42"><name pos:start="33:31" pos:end="33:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:45" pos:end="33:69"><expr pos:start="33:45" pos:end="33:69"><literal type="string" pos:start="33:45" pos:end="33:69">"EBML block data error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:26"><expr pos:start="35:9" pos:end="35:25"><call pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:15">av_free</name><argument_list pos:start="35:16" pos:end="35:25">(<argument pos:start="35:17" pos:end="35:24"><expr pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:24">origdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:19">return <expr pos:start="37:16" pos:end="37:18"><name pos:start="37:16" pos:end="37:18">res</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:14"><expr pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:8">data</name> <operator pos:start="41:10" pos:end="41:11">+=</operator> <name pos:start="41:13" pos:end="41:13">n</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:14"><expr pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:8">size</name> <operator pos:start="43:10" pos:end="43:11">-=</operator> <name pos:start="43:13" pos:end="43:13">n</name></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:30">/* fetch track from num */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:54"><expr pos:start="49:5" pos:end="49:53"><name pos:start="49:5" pos:end="49:9">track</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <call pos:start="49:13" pos:end="49:53"><name pos:start="49:13" pos:end="49:38">matroska_find_track_by_num</name><argument_list pos:start="49:39" pos:end="49:53">(<argument pos:start="49:40" pos:end="49:47"><expr pos:start="49:40" pos:end="49:47"><name pos:start="49:40" pos:end="49:47">matroska</name></expr></argument>, <argument pos:start="49:50" pos:end="49:52"><expr pos:start="49:50" pos:end="49:52"><name pos:start="49:50" pos:end="49:52">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="61:5"><if pos:start="51:5" pos:end="61:5">if <condition pos:start="51:8" pos:end="51:64">(<expr pos:start="51:9" pos:end="51:63"><name pos:start="51:9" pos:end="51:12">size</name> <operator pos:start="51:14" pos:end="51:15">&lt;=</operator> <literal type="number" pos:start="51:17" pos:end="51:17">3</literal> <operator pos:start="51:19" pos:end="51:20">||</operator> <name pos:start="51:22" pos:end="51:26">track</name> <operator pos:start="51:28" pos:end="51:28">&lt;</operator> <literal type="number" pos:start="51:30" pos:end="51:30">0</literal> <operator pos:start="51:32" pos:end="51:33">||</operator> <name pos:start="51:35" pos:end="51:39">track</name> <operator pos:start="51:41" pos:end="51:42">&gt;=</operator> <name pos:start="51:44" pos:end="51:63"><name pos:start="51:44" pos:end="51:51">matroska</name><operator pos:start="51:52" pos:end="51:53">-&gt;</operator><name pos:start="51:54" pos:end="51:63">num_tracks</name></name></expr>)</condition> <block pos:start="51:66" pos:end="61:5">{<block_content pos:start="53:9" pos:end="59:19">

        <expr_stmt pos:start="53:9" pos:end="55:62"><expr pos:start="53:9" pos:end="55:61"><call pos:start="53:9" pos:end="55:61"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="55:61">(<argument pos:start="53:16" pos:end="53:28"><expr pos:start="53:16" pos:end="53:28"><name pos:start="53:16" pos:end="53:28"><name pos:start="53:16" pos:end="53:23">matroska</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:28">ctx</name></name></expr></argument>, <argument pos:start="53:31" pos:end="53:41"><expr pos:start="53:31" pos:end="53:41"><name pos:start="53:31" pos:end="53:41">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="55:16" pos:end="55:47"><expr pos:start="55:16" pos:end="55:47"><literal type="string" pos:start="55:16" pos:end="55:47">"Invalid stream %d or size %u\n"</literal></expr></argument>, <argument pos:start="55:50" pos:end="55:54"><expr pos:start="55:50" pos:end="55:54"><name pos:start="55:50" pos:end="55:54">track</name></expr></argument>, <argument pos:start="55:57" pos:end="55:60"><expr pos:start="55:57" pos:end="55:60"><name pos:start="55:57" pos:end="55:60">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:26"><expr pos:start="57:9" pos:end="57:25"><call pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:15">av_free</name><argument_list pos:start="57:16" pos:end="57:25">(<argument pos:start="57:17" pos:end="57:24"><expr pos:start="57:17" pos:end="57:24"><name pos:start="57:17" pos:end="57:24">origdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="59:9" pos:end="59:19">return <expr pos:start="59:16" pos:end="59:18"><name pos:start="59:16" pos:end="59:18">res</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="63:5" pos:end="65:19"><if pos:start="63:5" pos:end="65:19">if <condition pos:start="63:8" pos:end="63:50">(<expr pos:start="63:9" pos:end="63:49"><name pos:start="63:9" pos:end="63:31"><name pos:start="63:9" pos:end="63:16">matroska</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:24">tracks</name><index pos:start="63:25" pos:end="63:31">[<expr pos:start="63:26" pos:end="63:30"><name pos:start="63:26" pos:end="63:30">track</name></expr>]</index></name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:45">stream_index</name> <operator pos:start="63:47" pos:end="63:47">&lt;</operator> <literal type="number" pos:start="63:49" pos:end="63:49">0</literal></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:19"><block_content pos:start="65:9" pos:end="65:19">

        <return pos:start="65:9" pos:end="65:19">return <expr pos:start="65:16" pos:end="65:18"><name pos:start="65:16" pos:end="65:18">res</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:71"><expr pos:start="67:5" pos:end="67:70"><name pos:start="67:5" pos:end="67:6">st</name> <operator pos:start="67:8" pos:end="67:8">=</operator> <name pos:start="67:10" pos:end="67:70"><name pos:start="67:10" pos:end="67:17">matroska</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:22">ctx</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:31">streams</name><index pos:start="67:32" pos:end="67:70">[<expr pos:start="67:33" pos:end="67:69"><name pos:start="67:33" pos:end="67:55"><name pos:start="67:33" pos:end="67:40">matroska</name><operator pos:start="67:41" pos:end="67:42">-&gt;</operator><name pos:start="67:43" pos:end="67:48">tracks</name><index pos:start="67:49" pos:end="67:55">[<expr pos:start="67:50" pos:end="67:54"><name pos:start="67:50" pos:end="67:54">track</name></expr>]</index></name><operator pos:start="67:56" pos:end="67:57">-&gt;</operator><name pos:start="67:58" pos:end="67:69">stream_index</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:37">(<expr pos:start="69:9" pos:end="69:36"><name pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:10">st</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:19">discard</name></name> <operator pos:start="69:21" pos:end="69:22">&gt;=</operator> <name pos:start="69:24" pos:end="69:36">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="69:39" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:19">

        <expr_stmt pos:start="71:9" pos:end="71:26"><expr pos:start="71:9" pos:end="71:25"><call pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:15">av_free</name><argument_list pos:start="71:16" pos:end="71:25">(<argument pos:start="71:17" pos:end="71:24"><expr pos:start="71:17" pos:end="71:24"><name pos:start="71:17" pos:end="71:24">origdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:19">return <expr pos:start="73:16" pos:end="73:18"><name pos:start="73:16" pos:end="73:18">res</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="77:5" pos:end="79:61"><if pos:start="77:5" pos:end="79:61">if <condition pos:start="77:8" pos:end="77:35">(<expr pos:start="77:9" pos:end="77:34"><name pos:start="77:9" pos:end="77:16">duration</name> <operator pos:start="77:18" pos:end="77:19">==</operator> <name pos:start="77:21" pos:end="77:34">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:61"><block_content pos:start="79:9" pos:end="79:61">

        <expr_stmt pos:start="79:9" pos:end="79:61"><expr pos:start="79:9" pos:end="79:60"><name pos:start="79:9" pos:end="79:16">duration</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <name pos:start="79:20" pos:end="79:42"><name pos:start="79:20" pos:end="79:27">matroska</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:35">tracks</name><index pos:start="79:36" pos:end="79:42">[<expr pos:start="79:37" pos:end="79:41"><name pos:start="79:37" pos:end="79:41">track</name></expr>]</index></name><operator pos:start="79:43" pos:end="79:44">-&gt;</operator><name pos:start="79:45" pos:end="79:60">default_duration</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:47">/* block_time (relative to cluster time) */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:31"><expr pos:start="85:5" pos:end="85:30"><name pos:start="85:5" pos:end="85:14">block_time</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <call pos:start="85:18" pos:end="85:30"><name pos:start="85:18" pos:end="85:24">AV_RB16</name><argument_list pos:start="85:25" pos:end="85:30">(<argument pos:start="85:26" pos:end="85:29"><expr pos:start="85:26" pos:end="85:29"><name pos:start="85:26" pos:end="85:29">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:14"><expr pos:start="87:5" pos:end="87:13"><name pos:start="87:5" pos:end="87:8">data</name> <operator pos:start="87:10" pos:end="87:11">+=</operator> <literal type="number" pos:start="87:13" pos:end="87:13">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:20"><expr pos:start="89:5" pos:end="89:19"><name pos:start="89:5" pos:end="89:9">flags</name> <operator pos:start="89:11" pos:end="89:11">=</operator> <operator pos:start="89:13" pos:end="89:13">*</operator><name pos:start="89:14" pos:end="89:17">data</name><operator pos:start="89:18" pos:end="89:19">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:14"><expr pos:start="91:5" pos:end="91:13"><name pos:start="91:5" pos:end="91:8">size</name> <operator pos:start="91:10" pos:end="91:11">-=</operator> <literal type="number" pos:start="91:13" pos:end="91:13">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="95:51"><if pos:start="93:5" pos:end="95:51">if <condition pos:start="93:8" pos:end="93:26">(<expr pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:19">is_keyframe</name> <operator pos:start="93:21" pos:end="93:22">==</operator> <operator pos:start="93:24" pos:end="93:24">-</operator><literal type="number" pos:start="93:25" pos:end="93:25">1</literal></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:51"><block_content pos:start="95:9" pos:end="95:51">

        <expr_stmt pos:start="95:9" pos:end="95:51"><expr pos:start="95:9" pos:end="95:50"><name pos:start="95:9" pos:end="95:19">is_keyframe</name> <operator pos:start="95:21" pos:end="95:21">=</operator> <ternary pos:start="95:23" pos:end="95:50"><condition pos:start="95:23" pos:end="95:33"><expr pos:start="95:23" pos:end="95:31"><name pos:start="95:23" pos:end="95:27">flags</name> <operator pos:start="95:29" pos:end="95:29">&amp;</operator> <literal type="number" pos:start="95:31" pos:end="95:31">1</literal></expr> ?</condition><then pos:start="95:35" pos:end="95:46"> <expr pos:start="95:35" pos:end="95:46"><name pos:start="95:35" pos:end="95:46">PKT_FLAG_KEY</name></expr> </then><else pos:start="95:48" pos:end="95:50">: <expr pos:start="95:50" pos:end="95:50"><literal type="number" pos:start="95:50" pos:end="95:50">0</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="107:5"><if pos:start="99:5" pos:end="107:5">if <condition pos:start="99:8" pos:end="99:35">(<expr pos:start="99:9" pos:end="99:34"><name pos:start="99:9" pos:end="99:34"><name pos:start="99:9" pos:end="99:16">matroska</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:34">skip_to_keyframe</name></name></expr>)</condition> <block pos:start="99:37" pos:end="107:5">{<block_content pos:start="101:9" pos:end="105:39">

        <if_stmt pos:start="101:9" pos:end="103:23"><if pos:start="101:9" pos:end="103:23">if <condition pos:start="101:12" pos:end="101:59">(<expr pos:start="101:13" pos:end="101:58"><operator pos:start="101:13" pos:end="101:13">!</operator><name pos:start="101:14" pos:end="101:24">is_keyframe</name> <operator pos:start="101:26" pos:end="101:27">||</operator> <name pos:start="101:29" pos:end="101:30">st</name> <operator pos:start="101:32" pos:end="101:33">!=</operator> <name pos:start="101:35" pos:end="101:58"><name pos:start="101:35" pos:end="101:42">matroska</name><operator pos:start="101:43" pos:end="101:44">-&gt;</operator><name pos:start="101:45" pos:end="101:58">skip_to_stream</name></name></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:23"><block_content pos:start="103:13" pos:end="103:23">

            <return pos:start="103:13" pos:end="103:23">return <expr pos:start="103:20" pos:end="103:22"><name pos:start="103:20" pos:end="103:22">res</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:39"><expr pos:start="105:9" pos:end="105:38"><name pos:start="105:9" pos:end="105:34"><name pos:start="105:9" pos:end="105:16">matroska</name><operator pos:start="105:17" pos:end="105:18">-&gt;</operator><name pos:start="105:19" pos:end="105:34">skip_to_keyframe</name></name> <operator pos:start="105:36" pos:end="105:36">=</operator> <literal type="number" pos:start="105:38" pos:end="105:38">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="111:5" pos:end="265:5">switch <condition pos:start="111:12" pos:end="111:32">(<expr pos:start="111:13" pos:end="111:31"><operator pos:start="111:13" pos:end="111:13">(</operator><name pos:start="111:14" pos:end="111:18">flags</name> <operator pos:start="111:20" pos:end="111:20">&amp;</operator> <literal type="number" pos:start="111:22" pos:end="111:25">0x06</literal><operator pos:start="111:26" pos:end="111:26">)</operator> <operator pos:start="111:28" pos:end="111:29">&gt;&gt;</operator> <literal type="number" pos:start="111:31" pos:end="111:31">1</literal></expr>)</condition> <block pos:start="111:34" pos:end="265:5">{<block_content pos:start="113:9" pos:end="263:18">

        <case pos:start="113:9" pos:end="113:17">case <expr pos:start="113:14" pos:end="113:16"><literal type="number" pos:start="113:14" pos:end="113:16">0x0</literal></expr>:</case> <comment type="block" pos:start="113:19" pos:end="113:33">/* no lacing */</comment>

            <expr_stmt pos:start="115:13" pos:end="115:22"><expr pos:start="115:13" pos:end="115:21"><name pos:start="115:13" pos:end="115:17">laces</name> <operator pos:start="115:19" pos:end="115:19">=</operator> <literal type="number" pos:start="115:21" pos:end="115:21">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:48"><expr pos:start="117:13" pos:end="117:47"><name pos:start="117:13" pos:end="117:21">lace_size</name> <operator pos:start="117:23" pos:end="117:23">=</operator> <call pos:start="117:25" pos:end="117:47"><name pos:start="117:25" pos:end="117:34">av_mallocz</name><argument_list pos:start="117:35" pos:end="117:47">(<argument pos:start="117:36" pos:end="117:46"><expr pos:start="117:36" pos:end="117:46"><sizeof pos:start="117:36" pos:end="117:46">sizeof<argument_list pos:start="117:42" pos:end="117:46">(<argument pos:start="117:43" pos:end="117:45"><expr pos:start="117:43" pos:end="117:45"><name pos:start="117:43" pos:end="117:45">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:32"><expr pos:start="119:13" pos:end="119:31"><name pos:start="119:13" pos:end="119:24"><name pos:start="119:13" pos:end="119:21">lace_size</name><index pos:start="119:22" pos:end="119:24">[<expr pos:start="119:23" pos:end="119:23"><literal type="number" pos:start="119:23" pos:end="119:23">0</literal></expr>]</index></name> <operator pos:start="119:26" pos:end="119:26">=</operator> <name pos:start="119:28" pos:end="119:31">size</name></expr>;</expr_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>



        <case pos:start="125:9" pos:end="125:17">case <expr pos:start="125:14" pos:end="125:16"><literal type="number" pos:start="125:14" pos:end="125:16">0x1</literal></expr>:</case> <comment type="block" pos:start="125:19" pos:end="125:35">/* xiph lacing */</comment>

        <case pos:start="127:9" pos:end="127:17">case <expr pos:start="127:14" pos:end="127:16"><literal type="number" pos:start="127:14" pos:end="127:16">0x2</literal></expr>:</case> <comment type="block" pos:start="127:19" pos:end="127:41">/* fixed-size lacing */</comment>

        <case pos:start="129:9" pos:end="129:17">case <expr pos:start="129:14" pos:end="129:16"><literal type="number" pos:start="129:14" pos:end="129:16">0x3</literal></expr>:</case> <comment type="block" pos:start="129:19" pos:end="129:35">/* EBML lacing */</comment>

            <if_stmt pos:start="131:13" pos:end="137:13"><if pos:start="131:13" pos:end="137:13">if <condition pos:start="131:16" pos:end="131:26">(<expr pos:start="131:17" pos:end="131:25"><name pos:start="131:17" pos:end="131:20">size</name> <operator pos:start="131:22" pos:end="131:23">==</operator> <literal type="number" pos:start="131:25" pos:end="131:25">0</literal></expr>)</condition> <block pos:start="131:28" pos:end="137:13">{<block_content pos:start="133:17" pos:end="135:22">

                <expr_stmt pos:start="133:17" pos:end="133:25"><expr pos:start="133:17" pos:end="133:24"><name pos:start="133:17" pos:end="133:19">res</name> <operator pos:start="133:21" pos:end="133:21">=</operator> <operator pos:start="133:23" pos:end="133:23">-</operator><literal type="number" pos:start="133:24" pos:end="133:24">1</literal></expr>;</expr_stmt>

                <break pos:start="135:17" pos:end="135:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:32"><expr pos:start="139:13" pos:end="139:31"><name pos:start="139:13" pos:end="139:17">laces</name> <operator pos:start="139:19" pos:end="139:19">=</operator> <operator pos:start="139:21" pos:end="139:21">(</operator><operator pos:start="139:22" pos:end="139:22">*</operator><name pos:start="139:23" pos:end="139:26">data</name><operator pos:start="139:27" pos:end="139:27">)</operator> <operator pos:start="139:29" pos:end="139:29">+</operator> <literal type="number" pos:start="139:31" pos:end="139:31">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:22"><expr pos:start="141:13" pos:end="141:21"><name pos:start="141:13" pos:end="141:16">data</name> <operator pos:start="141:18" pos:end="141:19">+=</operator> <literal type="number" pos:start="141:21" pos:end="141:21">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:22"><expr pos:start="143:13" pos:end="143:21"><name pos:start="143:13" pos:end="143:16">size</name> <operator pos:start="143:18" pos:end="143:19">-=</operator> <literal type="number" pos:start="143:21" pos:end="143:21">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:56"><expr pos:start="145:13" pos:end="145:55"><name pos:start="145:13" pos:end="145:21">lace_size</name> <operator pos:start="145:23" pos:end="145:23">=</operator> <call pos:start="145:25" pos:end="145:55"><name pos:start="145:25" pos:end="145:34">av_mallocz</name><argument_list pos:start="145:35" pos:end="145:55">(<argument pos:start="145:36" pos:end="145:54"><expr pos:start="145:36" pos:end="145:54"><name pos:start="145:36" pos:end="145:40">laces</name> <operator pos:start="145:42" pos:end="145:42">*</operator> <sizeof pos:start="145:44" pos:end="145:54">sizeof<argument_list pos:start="145:50" pos:end="145:54">(<argument pos:start="145:51" pos:end="145:53"><expr pos:start="145:51" pos:end="145:53"><name pos:start="145:51" pos:end="145:53">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <switch pos:start="149:13" pos:end="261:13">switch <condition pos:start="149:20" pos:end="149:40">(<expr pos:start="149:21" pos:end="149:39"><operator pos:start="149:21" pos:end="149:21">(</operator><name pos:start="149:22" pos:end="149:26">flags</name> <operator pos:start="149:28" pos:end="149:28">&amp;</operator> <literal type="number" pos:start="149:30" pos:end="149:33">0x06</literal><operator pos:start="149:34" pos:end="149:34">)</operator> <operator pos:start="149:36" pos:end="149:37">&gt;&gt;</operator> <literal type="number" pos:start="149:39" pos:end="149:39">1</literal></expr>)</condition> <block pos:start="149:42" pos:end="261:13">{<block_content pos:start="151:17" pos:end="259:17">

                <case pos:start="151:17" pos:end="151:25">case <expr pos:start="151:22" pos:end="151:24"><literal type="number" pos:start="151:22" pos:end="151:24">0x1</literal></expr>:</case> <comment type="block" pos:start="151:27" pos:end="151:43">/* xiph lacing */</comment> <block pos:start="151:45" pos:end="191:17">{<block_content pos:start="153:21" pos:end="189:26">

                    <decl_stmt pos:start="153:21" pos:end="153:33"><decl pos:start="153:21" pos:end="153:32"><type pos:start="153:21" pos:end="153:27"><name pos:start="153:21" pos:end="153:27">uint8_t</name></type> <name pos:start="153:29" pos:end="153:32">temp</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="155:21" pos:end="155:39"><decl pos:start="155:21" pos:end="155:38"><type pos:start="155:21" pos:end="155:28"><name pos:start="155:21" pos:end="155:28">uint32_t</name></type> <name pos:start="155:30" pos:end="155:34">total</name> <init pos:start="155:36" pos:end="155:38">= <expr pos:start="155:38" pos:end="155:38"><literal type="number" pos:start="155:38" pos:end="155:38">0</literal></expr></init></decl>;</decl_stmt>

                    <for pos:start="157:21" pos:end="185:21">for <control pos:start="157:25" pos:end="157:63">(<init pos:start="157:26" pos:end="157:31"><expr pos:start="157:26" pos:end="157:30"><name pos:start="157:26" pos:end="157:26">n</name> <operator pos:start="157:28" pos:end="157:28">=</operator> <literal type="number" pos:start="157:30" pos:end="157:30">0</literal></expr>;</init> <condition pos:start="157:33" pos:end="157:58"><expr pos:start="157:33" pos:end="157:57"><name pos:start="157:33" pos:end="157:35">res</name> <operator pos:start="157:37" pos:end="157:38">==</operator> <literal type="number" pos:start="157:40" pos:end="157:40">0</literal> <operator pos:start="157:42" pos:end="157:43">&amp;&amp;</operator> <name pos:start="157:45" pos:end="157:45">n</name> <operator pos:start="157:47" pos:end="157:47">&lt;</operator> <name pos:start="157:49" pos:end="157:53">laces</name> <operator pos:start="157:55" pos:end="157:55">-</operator> <literal type="number" pos:start="157:57" pos:end="157:57">1</literal></expr>;</condition> <incr pos:start="157:60" pos:end="157:62"><expr pos:start="157:60" pos:end="157:62"><name pos:start="157:60" pos:end="157:60">n</name><operator pos:start="157:61" pos:end="157:62">++</operator></expr></incr>)</control> <block pos:start="157:65" pos:end="185:21">{<block_content pos:start="159:25" pos:end="183:46">

                        <while pos:start="159:25" pos:end="181:25">while <condition pos:start="159:31" pos:end="159:33">(<expr pos:start="159:32" pos:end="159:32"><literal type="number" pos:start="159:32" pos:end="159:32">1</literal></expr>)</condition> <block pos:start="159:35" pos:end="181:25">{<block_content pos:start="161:29" pos:end="179:38">

                            <if_stmt pos:start="161:29" pos:end="167:29"><if pos:start="161:29" pos:end="167:29">if <condition pos:start="161:32" pos:end="161:42">(<expr pos:start="161:33" pos:end="161:41"><name pos:start="161:33" pos:end="161:36">size</name> <operator pos:start="161:38" pos:end="161:39">==</operator> <literal type="number" pos:start="161:41" pos:end="161:41">0</literal></expr>)</condition> <block pos:start="161:44" pos:end="167:29">{<block_content pos:start="163:33" pos:end="165:38">

                                <expr_stmt pos:start="163:33" pos:end="163:41"><expr pos:start="163:33" pos:end="163:40"><name pos:start="163:33" pos:end="163:35">res</name> <operator pos:start="163:37" pos:end="163:37">=</operator> <operator pos:start="163:39" pos:end="163:39">-</operator><literal type="number" pos:start="163:40" pos:end="163:40">1</literal></expr>;</expr_stmt>

                                <break pos:start="165:33" pos:end="165:38">break;</break>

                            </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="169:29" pos:end="169:41"><expr pos:start="169:29" pos:end="169:40"><name pos:start="169:29" pos:end="169:32">temp</name> <operator pos:start="169:34" pos:end="169:34">=</operator> <operator pos:start="169:36" pos:end="169:36">*</operator><name pos:start="169:37" pos:end="169:40">data</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="171:29" pos:end="171:49"><expr pos:start="171:29" pos:end="171:48"><name pos:start="171:29" pos:end="171:40"><name pos:start="171:29" pos:end="171:37">lace_size</name><index pos:start="171:38" pos:end="171:40">[<expr pos:start="171:39" pos:end="171:39"><name pos:start="171:39" pos:end="171:39">n</name></expr>]</index></name> <operator pos:start="171:42" pos:end="171:43">+=</operator> <name pos:start="171:45" pos:end="171:48">temp</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="173:29" pos:end="173:38"><expr pos:start="173:29" pos:end="173:37"><name pos:start="173:29" pos:end="173:32">data</name> <operator pos:start="173:34" pos:end="173:35">+=</operator> <literal type="number" pos:start="173:37" pos:end="173:37">1</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="175:29" pos:end="175:38"><expr pos:start="175:29" pos:end="175:37"><name pos:start="175:29" pos:end="175:32">size</name> <operator pos:start="175:34" pos:end="175:35">-=</operator> <literal type="number" pos:start="175:37" pos:end="175:37">1</literal></expr>;</expr_stmt>

                            <if_stmt pos:start="177:29" pos:end="179:38"><if pos:start="177:29" pos:end="179:38">if <condition pos:start="177:32" pos:end="177:45">(<expr pos:start="177:33" pos:end="177:44"><name pos:start="177:33" pos:end="177:36">temp</name> <operator pos:start="177:38" pos:end="177:39">!=</operator> <literal type="number" pos:start="177:41" pos:end="177:44">0xff</literal></expr>)</condition><block type="pseudo" pos:start="179:33" pos:end="179:38"><block_content pos:start="179:33" pos:end="179:38">

                                <break pos:start="179:33" pos:end="179:38">break;</break></block_content></block></if></if_stmt>

                        </block_content>}</block></while>

                        <expr_stmt pos:start="183:25" pos:end="183:46"><expr pos:start="183:25" pos:end="183:45"><name pos:start="183:25" pos:end="183:29">total</name> <operator pos:start="183:31" pos:end="183:32">+=</operator> <name pos:start="183:34" pos:end="183:45"><name pos:start="183:34" pos:end="183:42">lace_size</name><index pos:start="183:43" pos:end="183:45">[<expr pos:start="183:44" pos:end="183:44"><name pos:start="183:44" pos:end="183:44">n</name></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="187:21" pos:end="187:48"><expr pos:start="187:21" pos:end="187:47"><name pos:start="187:21" pos:end="187:32"><name pos:start="187:21" pos:end="187:29">lace_size</name><index pos:start="187:30" pos:end="187:32">[<expr pos:start="187:31" pos:end="187:31"><name pos:start="187:31" pos:end="187:31">n</name></expr>]</index></name> <operator pos:start="187:34" pos:end="187:34">=</operator> <name pos:start="187:36" pos:end="187:39">size</name> <operator pos:start="187:41" pos:end="187:41">-</operator> <name pos:start="187:43" pos:end="187:47">total</name></expr>;</expr_stmt>

                    <break pos:start="189:21" pos:end="189:26">break;</break>

                </block_content>}</block>



                <case pos:start="195:17" pos:end="195:25">case <expr pos:start="195:22" pos:end="195:24"><literal type="number" pos:start="195:22" pos:end="195:24">0x2</literal></expr>:</case> <comment type="block" pos:start="195:27" pos:end="195:49">/* fixed-size lacing */</comment>

                    <for pos:start="197:21" pos:end="199:52">for <control pos:start="197:25" pos:end="197:47">(<init pos:start="197:26" pos:end="197:31"><expr pos:start="197:26" pos:end="197:30"><name pos:start="197:26" pos:end="197:26">n</name> <operator pos:start="197:28" pos:end="197:28">=</operator> <literal type="number" pos:start="197:30" pos:end="197:30">0</literal></expr>;</init> <condition pos:start="197:33" pos:end="197:42"><expr pos:start="197:33" pos:end="197:41"><name pos:start="197:33" pos:end="197:33">n</name> <operator pos:start="197:35" pos:end="197:35">&lt;</operator> <name pos:start="197:37" pos:end="197:41">laces</name></expr>;</condition> <incr pos:start="197:44" pos:end="197:46"><expr pos:start="197:44" pos:end="197:46"><name pos:start="197:44" pos:end="197:44">n</name><operator pos:start="197:45" pos:end="197:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="199:25" pos:end="199:52"><block_content pos:start="199:25" pos:end="199:52">

                        <expr_stmt pos:start="199:25" pos:end="199:52"><expr pos:start="199:25" pos:end="199:51"><name pos:start="199:25" pos:end="199:36"><name pos:start="199:25" pos:end="199:33">lace_size</name><index pos:start="199:34" pos:end="199:36">[<expr pos:start="199:35" pos:end="199:35"><name pos:start="199:35" pos:end="199:35">n</name></expr>]</index></name> <operator pos:start="199:38" pos:end="199:38">=</operator> <name pos:start="199:40" pos:end="199:43">size</name> <operator pos:start="199:45" pos:end="199:45">/</operator> <name pos:start="199:47" pos:end="199:51">laces</name></expr>;</expr_stmt></block_content></block></for>

                    <break pos:start="201:21" pos:end="201:26">break;</break>



                <case pos:start="205:17" pos:end="205:25">case <expr pos:start="205:22" pos:end="205:24"><literal type="number" pos:start="205:22" pos:end="205:24">0x3</literal></expr>:</case> <comment type="block" pos:start="205:27" pos:end="205:43">/* EBML lacing */</comment> <block pos:start="205:45" pos:end="259:17">{<block_content pos:start="207:21" pos:end="257:26">

                    <decl_stmt pos:start="207:21" pos:end="207:35"><decl pos:start="207:21" pos:end="207:34"><type pos:start="207:21" pos:end="207:28"><name pos:start="207:21" pos:end="207:28">uint32_t</name></type> <name pos:start="207:30" pos:end="207:34">total</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="209:21" pos:end="209:64"><expr pos:start="209:21" pos:end="209:63"><name pos:start="209:21" pos:end="209:21">n</name> <operator pos:start="209:23" pos:end="209:23">=</operator> <call pos:start="209:25" pos:end="209:63"><name pos:start="209:25" pos:end="209:45">matroska_ebmlnum_uint</name><argument_list pos:start="209:46" pos:end="209:63">(<argument pos:start="209:47" pos:end="209:50"><expr pos:start="209:47" pos:end="209:50"><name pos:start="209:47" pos:end="209:50">data</name></expr></argument>, <argument pos:start="209:53" pos:end="209:56"><expr pos:start="209:53" pos:end="209:56"><name pos:start="209:53" pos:end="209:56">size</name></expr></argument>, <argument pos:start="209:59" pos:end="209:62"><expr pos:start="209:59" pos:end="209:62"><operator pos:start="209:59" pos:end="209:59">&amp;</operator><name pos:start="209:60" pos:end="209:62">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="211:21" pos:end="219:21"><if pos:start="211:21" pos:end="219:21">if <condition pos:start="211:24" pos:end="211:30">(<expr pos:start="211:25" pos:end="211:29"><name pos:start="211:25" pos:end="211:25">n</name> <operator pos:start="211:27" pos:end="211:27">&lt;</operator> <literal type="number" pos:start="211:29" pos:end="211:29">0</literal></expr>)</condition> <block pos:start="211:32" pos:end="219:21">{<block_content pos:start="213:25" pos:end="217:30">

                        <expr_stmt pos:start="213:25" pos:end="215:58"><expr pos:start="213:25" pos:end="215:57"><call pos:start="213:25" pos:end="215:57"><name pos:start="213:25" pos:end="213:30">av_log</name><argument_list pos:start="213:31" pos:end="215:57">(<argument pos:start="213:32" pos:end="213:44"><expr pos:start="213:32" pos:end="213:44"><name pos:start="213:32" pos:end="213:44"><name pos:start="213:32" pos:end="213:39">matroska</name><operator pos:start="213:40" pos:end="213:41">-&gt;</operator><name pos:start="213:42" pos:end="213:44">ctx</name></name></expr></argument>, <argument pos:start="213:47" pos:end="213:57"><expr pos:start="213:47" pos:end="213:57"><name pos:start="213:47" pos:end="213:57">AV_LOG_INFO</name></expr></argument>,

                               <argument pos:start="215:32" pos:end="215:56"><expr pos:start="215:32" pos:end="215:56"><literal type="string" pos:start="215:32" pos:end="215:56">"EBML block data error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="217:25" pos:end="217:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="221:21" pos:end="221:30"><expr pos:start="221:21" pos:end="221:29"><name pos:start="221:21" pos:end="221:24">data</name> <operator pos:start="221:26" pos:end="221:27">+=</operator> <name pos:start="221:29" pos:end="221:29">n</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="223:21" pos:end="223:30"><expr pos:start="223:21" pos:end="223:29"><name pos:start="223:21" pos:end="223:24">size</name> <operator pos:start="223:26" pos:end="223:27">-=</operator> <name pos:start="223:29" pos:end="223:29">n</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="225:21" pos:end="225:47"><expr pos:start="225:21" pos:end="225:46"><name pos:start="225:21" pos:end="225:25">total</name> <operator pos:start="225:27" pos:end="225:27">=</operator> <name pos:start="225:29" pos:end="225:40"><name pos:start="225:29" pos:end="225:37">lace_size</name><index pos:start="225:38" pos:end="225:40">[<expr pos:start="225:39" pos:end="225:39"><literal type="number" pos:start="225:39" pos:end="225:39">0</literal></expr>]</index></name> <operator pos:start="225:42" pos:end="225:42">=</operator> <name pos:start="225:44" pos:end="225:46">num</name></expr>;</expr_stmt>

                    <for pos:start="227:21" pos:end="253:21">for <control pos:start="227:25" pos:end="227:63">(<init pos:start="227:26" pos:end="227:31"><expr pos:start="227:26" pos:end="227:30"><name pos:start="227:26" pos:end="227:26">n</name> <operator pos:start="227:28" pos:end="227:28">=</operator> <literal type="number" pos:start="227:30" pos:end="227:30">1</literal></expr>;</init> <condition pos:start="227:33" pos:end="227:58"><expr pos:start="227:33" pos:end="227:57"><name pos:start="227:33" pos:end="227:35">res</name> <operator pos:start="227:37" pos:end="227:38">==</operator> <literal type="number" pos:start="227:40" pos:end="227:40">0</literal> <operator pos:start="227:42" pos:end="227:43">&amp;&amp;</operator> <name pos:start="227:45" pos:end="227:45">n</name> <operator pos:start="227:47" pos:end="227:47">&lt;</operator> <name pos:start="227:49" pos:end="227:53">laces</name> <operator pos:start="227:55" pos:end="227:55">-</operator> <literal type="number" pos:start="227:57" pos:end="227:57">1</literal></expr>;</condition> <incr pos:start="227:60" pos:end="227:62"><expr pos:start="227:60" pos:end="227:62"><name pos:start="227:60" pos:end="227:60">n</name><operator pos:start="227:61" pos:end="227:62">++</operator></expr></incr>)</control> <block pos:start="227:65" pos:end="253:21">{<block_content pos:start="229:25" pos:end="251:46">

                        <decl_stmt pos:start="229:25" pos:end="229:37"><decl pos:start="229:25" pos:end="229:36"><type pos:start="229:25" pos:end="229:31"><name pos:start="229:25" pos:end="229:31">int64_t</name></type> <name pos:start="229:33" pos:end="229:36">snum</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="231:25" pos:end="231:30"><decl pos:start="231:25" pos:end="231:29"><type pos:start="231:25" pos:end="231:27"><name pos:start="231:25" pos:end="231:27">int</name></type> <name pos:start="231:29" pos:end="231:29">r</name></decl>;</decl_stmt>

                        <expr_stmt pos:start="233:25" pos:end="233:70"><expr pos:start="233:25" pos:end="233:69"><name pos:start="233:25" pos:end="233:25">r</name> <operator pos:start="233:27" pos:end="233:27">=</operator> <call pos:start="233:29" pos:end="233:69"><name pos:start="233:29" pos:end="233:49">matroska_ebmlnum_sint</name> <argument_list pos:start="233:51" pos:end="233:69">(<argument pos:start="233:52" pos:end="233:55"><expr pos:start="233:52" pos:end="233:55"><name pos:start="233:52" pos:end="233:55">data</name></expr></argument>, <argument pos:start="233:58" pos:end="233:61"><expr pos:start="233:58" pos:end="233:61"><name pos:start="233:58" pos:end="233:61">size</name></expr></argument>, <argument pos:start="233:64" pos:end="233:68"><expr pos:start="233:64" pos:end="233:68"><operator pos:start="233:64" pos:end="233:64">&amp;</operator><name pos:start="233:65" pos:end="233:68">snum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="235:25" pos:end="243:25"><if pos:start="235:25" pos:end="243:25">if <condition pos:start="235:28" pos:end="235:34">(<expr pos:start="235:29" pos:end="235:33"><name pos:start="235:29" pos:end="235:29">r</name> <operator pos:start="235:31" pos:end="235:31">&lt;</operator> <literal type="number" pos:start="235:33" pos:end="235:33">0</literal></expr>)</condition> <block pos:start="235:36" pos:end="243:25">{<block_content pos:start="237:29" pos:end="241:34">

                            <expr_stmt pos:start="237:29" pos:end="239:62"><expr pos:start="237:29" pos:end="239:61"><call pos:start="237:29" pos:end="239:61"><name pos:start="237:29" pos:end="237:34">av_log</name><argument_list pos:start="237:35" pos:end="239:61">(<argument pos:start="237:36" pos:end="237:48"><expr pos:start="237:36" pos:end="237:48"><name pos:start="237:36" pos:end="237:48"><name pos:start="237:36" pos:end="237:43">matroska</name><operator pos:start="237:44" pos:end="237:45">-&gt;</operator><name pos:start="237:46" pos:end="237:48">ctx</name></name></expr></argument>, <argument pos:start="237:51" pos:end="237:61"><expr pos:start="237:51" pos:end="237:61"><name pos:start="237:51" pos:end="237:61">AV_LOG_INFO</name></expr></argument>,

                                   <argument pos:start="239:36" pos:end="239:60"><expr pos:start="239:36" pos:end="239:60"><literal type="string" pos:start="239:36" pos:end="239:60">"EBML block data error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="241:29" pos:end="241:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="245:25" pos:end="245:34"><expr pos:start="245:25" pos:end="245:33"><name pos:start="245:25" pos:end="245:28">data</name> <operator pos:start="245:30" pos:end="245:31">+=</operator> <name pos:start="245:33" pos:end="245:33">r</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="247:25" pos:end="247:34"><expr pos:start="247:25" pos:end="247:33"><name pos:start="247:25" pos:end="247:28">size</name> <operator pos:start="247:30" pos:end="247:31">-=</operator> <name pos:start="247:33" pos:end="247:33">r</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="249:25" pos:end="249:63"><expr pos:start="249:25" pos:end="249:62"><name pos:start="249:25" pos:end="249:36"><name pos:start="249:25" pos:end="249:33">lace_size</name><index pos:start="249:34" pos:end="249:36">[<expr pos:start="249:35" pos:end="249:35"><name pos:start="249:35" pos:end="249:35">n</name></expr>]</index></name> <operator pos:start="249:38" pos:end="249:38">=</operator> <name pos:start="249:40" pos:end="249:55"><name pos:start="249:40" pos:end="249:48">lace_size</name><index pos:start="249:49" pos:end="249:55">[<expr pos:start="249:50" pos:end="249:54"><name pos:start="249:50" pos:end="249:50">n</name> <operator pos:start="249:52" pos:end="249:52">-</operator> <literal type="number" pos:start="249:54" pos:end="249:54">1</literal></expr>]</index></name> <operator pos:start="249:57" pos:end="249:57">+</operator> <name pos:start="249:59" pos:end="249:62">snum</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="251:25" pos:end="251:46"><expr pos:start="251:25" pos:end="251:45"><name pos:start="251:25" pos:end="251:29">total</name> <operator pos:start="251:31" pos:end="251:32">+=</operator> <name pos:start="251:34" pos:end="251:45"><name pos:start="251:34" pos:end="251:42">lace_size</name><index pos:start="251:43" pos:end="251:45">[<expr pos:start="251:44" pos:end="251:44"><name pos:start="251:44" pos:end="251:44">n</name></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="255:21" pos:end="255:48"><expr pos:start="255:21" pos:end="255:47"><name pos:start="255:21" pos:end="255:32"><name pos:start="255:21" pos:end="255:29">lace_size</name><index pos:start="255:30" pos:end="255:32">[<expr pos:start="255:31" pos:end="255:31"><name pos:start="255:31" pos:end="255:31">n</name></expr>]</index></name> <operator pos:start="255:34" pos:end="255:34">=</operator> <name pos:start="255:36" pos:end="255:39">size</name> <operator pos:start="255:41" pos:end="255:41">-</operator> <name pos:start="255:43" pos:end="255:47">total</name></expr>;</expr_stmt>

                    <break pos:start="257:21" pos:end="257:26">break;</break>

                </block_content>}</block>

            </block_content>}</block></switch>

            <break pos:start="263:13" pos:end="263:18">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="269:5" pos:end="459:5"><if pos:start="269:5" pos:end="459:5">if <condition pos:start="269:8" pos:end="269:17">(<expr pos:start="269:9" pos:end="269:16"><name pos:start="269:9" pos:end="269:11">res</name> <operator pos:start="269:13" pos:end="269:14">==</operator> <literal type="number" pos:start="269:16" pos:end="269:16">0</literal></expr>)</condition> <block pos:start="269:19" pos:end="459:5">{<block_content pos:start="271:9" pos:end="457:9">

        <decl_stmt pos:start="271:9" pos:end="271:76"><decl pos:start="271:9" pos:end="271:75"><type pos:start="271:9" pos:end="271:11"><name pos:start="271:9" pos:end="271:11">int</name></type> <name pos:start="271:13" pos:end="271:18">real_v</name> <init pos:start="271:20" pos:end="271:75">= <expr pos:start="271:22" pos:end="271:75"><name pos:start="271:22" pos:end="271:44"><name pos:start="271:22" pos:end="271:29">matroska</name><operator pos:start="271:30" pos:end="271:31">-&gt;</operator><name pos:start="271:32" pos:end="271:37">tracks</name><index pos:start="271:38" pos:end="271:44">[<expr pos:start="271:39" pos:end="271:43"><name pos:start="271:39" pos:end="271:43">track</name></expr>]</index></name><operator pos:start="271:45" pos:end="271:46">-&gt;</operator><name pos:start="271:47" pos:end="271:51">flags</name> <operator pos:start="271:53" pos:end="271:53">&amp;</operator> <name pos:start="271:55" pos:end="271:75">MATROSKA_TRACK_REAL_V</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="273:9" pos:end="273:43"><decl pos:start="273:9" pos:end="273:42"><type pos:start="273:9" pos:end="273:16"><name pos:start="273:9" pos:end="273:16">uint64_t</name></type> <name pos:start="273:18" pos:end="273:25">timecode</name> <init pos:start="273:27" pos:end="273:42">= <expr pos:start="273:29" pos:end="273:42"><name pos:start="273:29" pos:end="273:42">AV_NOPTS_VALUE</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="277:9" pos:end="279:49"><if pos:start="277:9" pos:end="279:49">if <condition pos:start="277:12" pos:end="277:75">(<expr pos:start="277:13" pos:end="277:74"><name pos:start="277:13" pos:end="277:24">cluster_time</name> <operator pos:start="277:26" pos:end="277:27">!=</operator> <operator pos:start="277:29" pos:end="277:29">(</operator><name pos:start="277:30" pos:end="277:37">uint64_t</name><operator pos:start="277:38" pos:end="277:38">)</operator><operator pos:start="277:39" pos:end="277:39">-</operator><literal type="number" pos:start="277:40" pos:end="277:40">1</literal> <operator pos:start="277:42" pos:end="277:43">&amp;&amp;</operator> <name pos:start="277:45" pos:end="277:56">cluster_time</name> <operator pos:start="277:58" pos:end="277:58">+</operator> <name pos:start="277:60" pos:end="277:69">block_time</name> <operator pos:start="277:71" pos:end="277:72">&gt;=</operator> <literal type="number" pos:start="277:74" pos:end="277:74">0</literal></expr>)</condition><block type="pseudo" pos:start="279:13" pos:end="279:49"><block_content pos:start="279:13" pos:end="279:49">

            <expr_stmt pos:start="279:13" pos:end="279:49"><expr pos:start="279:13" pos:end="279:48"><name pos:start="279:13" pos:end="279:20">timecode</name> <operator pos:start="279:22" pos:end="279:22">=</operator> <name pos:start="279:24" pos:end="279:35">cluster_time</name> <operator pos:start="279:37" pos:end="279:37">+</operator> <name pos:start="279:39" pos:end="279:48">block_time</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="283:9" pos:end="457:9">for <control pos:start="283:13" pos:end="283:35">(<init pos:start="283:14" pos:end="283:19"><expr pos:start="283:14" pos:end="283:18"><name pos:start="283:14" pos:end="283:14">n</name> <operator pos:start="283:16" pos:end="283:16">=</operator> <literal type="number" pos:start="283:18" pos:end="283:18">0</literal></expr>;</init> <condition pos:start="283:21" pos:end="283:30"><expr pos:start="283:21" pos:end="283:29"><name pos:start="283:21" pos:end="283:21">n</name> <operator pos:start="283:23" pos:end="283:23">&lt;</operator> <name pos:start="283:25" pos:end="283:29">laces</name></expr>;</condition> <incr pos:start="283:32" pos:end="283:34"><expr pos:start="283:32" pos:end="283:34"><name pos:start="283:32" pos:end="283:32">n</name><operator pos:start="283:33" pos:end="283:34">++</operator></expr></incr>)</control> <block pos:start="283:37" pos:end="457:9">{<block_content pos:start="285:13" pos:end="455:33">

            <decl_stmt pos:start="285:13" pos:end="285:34"><decl pos:start="285:13" pos:end="285:21"><type pos:start="285:13" pos:end="285:15"><name pos:start="285:13" pos:end="285:15">int</name></type> <name pos:start="285:17" pos:end="285:21">slice</name></decl>, <decl pos:start="285:24" pos:end="285:33"><type ref="prev" pos:start="285:13" pos:end="285:15"/><name pos:start="285:24" pos:end="285:29">slices</name> <init pos:start="285:31" pos:end="285:33">= <expr pos:start="285:33" pos:end="285:33"><literal type="number" pos:start="285:33" pos:end="285:33">1</literal></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="289:13" pos:end="295:13"><if pos:start="289:13" pos:end="295:13">if <condition pos:start="289:16" pos:end="289:23">(<expr pos:start="289:17" pos:end="289:22"><name pos:start="289:17" pos:end="289:22">real_v</name></expr>)</condition> <block pos:start="289:25" pos:end="295:13">{<block_content pos:start="291:17" pos:end="293:31">

                <expr_stmt pos:start="291:17" pos:end="291:37"><expr pos:start="291:17" pos:end="291:36"><name pos:start="291:17" pos:end="291:22">slices</name> <operator pos:start="291:24" pos:end="291:24">=</operator> <operator pos:start="291:26" pos:end="291:26">*</operator><name pos:start="291:27" pos:end="291:30">data</name><operator pos:start="291:31" pos:end="291:32">++</operator> <operator pos:start="291:34" pos:end="291:34">+</operator> <literal type="number" pos:start="291:36" pos:end="291:36">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="293:17" pos:end="293:31"><expr pos:start="293:17" pos:end="293:30"><name pos:start="293:17" pos:end="293:28"><name pos:start="293:17" pos:end="293:25">lace_size</name><index pos:start="293:26" pos:end="293:28">[<expr pos:start="293:27" pos:end="293:27"><name pos:start="293:27" pos:end="293:27">n</name></expr>]</index></name><operator pos:start="293:29" pos:end="293:30">--</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <for pos:start="299:13" pos:end="453:13">for <control pos:start="299:17" pos:end="299:48">(<init pos:start="299:18" pos:end="299:25"><expr pos:start="299:18" pos:end="299:24"><name pos:start="299:18" pos:end="299:22">slice</name><operator pos:start="299:23" pos:end="299:23">=</operator><literal type="number" pos:start="299:24" pos:end="299:24">0</literal></expr>;</init> <condition pos:start="299:27" pos:end="299:39"><expr pos:start="299:27" pos:end="299:38"><name pos:start="299:27" pos:end="299:31">slice</name><operator pos:start="299:32" pos:end="299:32">&lt;</operator><name pos:start="299:33" pos:end="299:38">slices</name></expr>;</condition> <incr pos:start="299:41" pos:end="299:47"><expr pos:start="299:41" pos:end="299:47"><name pos:start="299:41" pos:end="299:45">slice</name><operator pos:start="299:46" pos:end="299:47">++</operator></expr></incr>)</control> <block pos:start="299:50" pos:end="453:13">{<block_content pos:start="301:17" pos:end="451:79">

                <decl_stmt pos:start="301:17" pos:end="301:49"><decl pos:start="301:17" pos:end="301:30"><type pos:start="301:17" pos:end="301:19"><name pos:start="301:17" pos:end="301:19">int</name></type> <name pos:start="301:21" pos:end="301:30">slice_size</name></decl>, <decl pos:start="301:33" pos:end="301:48"><type ref="prev" pos:start="301:17" pos:end="301:19"/><name pos:start="301:33" pos:end="301:44">slice_offset</name> <init pos:start="301:46" pos:end="301:48">= <expr pos:start="301:48" pos:end="301:48"><literal type="number" pos:start="301:48" pos:end="301:48">0</literal></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="303:17" pos:end="305:66"><if pos:start="303:17" pos:end="305:66">if <condition pos:start="303:20" pos:end="303:27">(<expr pos:start="303:21" pos:end="303:26"><name pos:start="303:21" pos:end="303:26">real_v</name></expr>)</condition><block type="pseudo" pos:start="305:21" pos:end="305:66"><block_content pos:start="305:21" pos:end="305:66">

                    <expr_stmt pos:start="305:21" pos:end="305:66"><expr pos:start="305:21" pos:end="305:65"><name pos:start="305:21" pos:end="305:32">slice_offset</name> <operator pos:start="305:34" pos:end="305:34">=</operator> <call pos:start="305:36" pos:end="305:65"><name pos:start="305:36" pos:end="305:44">rv_offset</name><argument_list pos:start="305:45" pos:end="305:65">(<argument pos:start="305:46" pos:end="305:49"><expr pos:start="305:46" pos:end="305:49"><name pos:start="305:46" pos:end="305:49">data</name></expr></argument>, <argument pos:start="305:52" pos:end="305:56"><expr pos:start="305:52" pos:end="305:56"><name pos:start="305:52" pos:end="305:56">slice</name></expr></argument>, <argument pos:start="305:59" pos:end="305:64"><expr pos:start="305:59" pos:end="305:64"><name pos:start="305:59" pos:end="305:64">slices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="307:17" pos:end="313:81"><if pos:start="307:17" pos:end="309:61">if <condition pos:start="307:20" pos:end="307:38">(<expr pos:start="307:21" pos:end="307:37"><name pos:start="307:21" pos:end="307:25">slice</name><operator pos:start="307:26" pos:end="307:26">+</operator><literal type="number" pos:start="307:27" pos:end="307:27">1</literal> <operator pos:start="307:29" pos:end="307:30">==</operator> <name pos:start="307:32" pos:end="307:37">slices</name></expr>)</condition><block type="pseudo" pos:start="309:21" pos:end="309:61"><block_content pos:start="309:21" pos:end="309:61">

                    <expr_stmt pos:start="309:21" pos:end="309:61"><expr pos:start="309:21" pos:end="309:60"><name pos:start="309:21" pos:end="309:30">slice_size</name> <operator pos:start="309:32" pos:end="309:32">=</operator> <name pos:start="309:34" pos:end="309:45"><name pos:start="309:34" pos:end="309:42">lace_size</name><index pos:start="309:43" pos:end="309:45">[<expr pos:start="309:44" pos:end="309:44"><name pos:start="309:44" pos:end="309:44">n</name></expr>]</index></name> <operator pos:start="309:47" pos:end="309:47">-</operator> <name pos:start="309:49" pos:end="309:60">slice_offset</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="311:17" pos:end="313:81">else<block type="pseudo" pos:start="313:21" pos:end="313:81"><block_content pos:start="313:21" pos:end="313:81">

                    <expr_stmt pos:start="313:21" pos:end="313:81"><expr pos:start="313:21" pos:end="313:80"><name pos:start="313:21" pos:end="313:30">slice_size</name> <operator pos:start="313:32" pos:end="313:32">=</operator> <call pos:start="313:34" pos:end="313:65"><name pos:start="313:34" pos:end="313:42">rv_offset</name><argument_list pos:start="313:43" pos:end="313:65">(<argument pos:start="313:44" pos:end="313:47"><expr pos:start="313:44" pos:end="313:47"><name pos:start="313:44" pos:end="313:47">data</name></expr></argument>, <argument pos:start="313:50" pos:end="313:56"><expr pos:start="313:50" pos:end="313:56"><name pos:start="313:50" pos:end="313:54">slice</name><operator pos:start="313:55" pos:end="313:55">+</operator><literal type="number" pos:start="313:56" pos:end="313:56">1</literal></expr></argument>, <argument pos:start="313:59" pos:end="313:64"><expr pos:start="313:59" pos:end="313:64"><name pos:start="313:59" pos:end="313:64">slices</name></expr></argument>)</argument_list></call> <operator pos:start="313:67" pos:end="313:67">-</operator> <name pos:start="313:69" pos:end="313:80">slice_offset</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <if_stmt pos:start="317:17" pos:end="445:17"><if pos:start="317:17" pos:end="387:17">if <condition pos:start="317:20" pos:end="321:59">(<expr pos:start="317:21" pos:end="321:58"><name pos:start="317:21" pos:end="317:39"><name pos:start="317:21" pos:end="317:22">st</name><operator pos:start="317:23" pos:end="317:24">-&gt;</operator><name pos:start="317:25" pos:end="317:29">codec</name><operator pos:start="317:30" pos:end="317:31">-&gt;</operator><name pos:start="317:32" pos:end="317:39">codec_id</name></name> <operator pos:start="317:41" pos:end="317:42">==</operator> <name pos:start="317:44" pos:end="317:58">CODEC_ID_RA_288</name> <operator pos:start="317:60" pos:end="317:61">||</operator>

                    <name pos:start="319:21" pos:end="319:39"><name pos:start="319:21" pos:end="319:22">st</name><operator pos:start="319:23" pos:end="319:24">-&gt;</operator><name pos:start="319:25" pos:end="319:29">codec</name><operator pos:start="319:30" pos:end="319:31">-&gt;</operator><name pos:start="319:32" pos:end="319:39">codec_id</name></name> <operator pos:start="319:41" pos:end="319:42">==</operator> <name pos:start="319:44" pos:end="319:56">CODEC_ID_COOK</name> <operator pos:start="319:58" pos:end="319:59">||</operator>

                    <name pos:start="321:21" pos:end="321:39"><name pos:start="321:21" pos:end="321:22">st</name><operator pos:start="321:23" pos:end="321:24">-&gt;</operator><name pos:start="321:25" pos:end="321:29">codec</name><operator pos:start="321:30" pos:end="321:31">-&gt;</operator><name pos:start="321:32" pos:end="321:39">codec_id</name></name> <operator pos:start="321:41" pos:end="321:42">==</operator> <name pos:start="321:44" pos:end="321:58">CODEC_ID_ATRAC3</name></expr>)</condition> <block pos:start="321:61" pos:end="387:17">{<block_content pos:start="323:21" pos:end="385:21">

                    <decl_stmt pos:start="323:21" pos:end="323:99"><decl pos:start="323:21" pos:end="323:98"><type pos:start="323:21" pos:end="323:40"><name pos:start="323:21" pos:end="323:38">MatroskaAudioTrack</name> <modifier pos:start="323:40" pos:end="323:40">*</modifier></type><name pos:start="323:41" pos:end="323:50">audiotrack</name> <init pos:start="323:52" pos:end="323:98">= <expr pos:start="323:54" pos:end="323:98"><operator pos:start="323:54" pos:end="323:54">(</operator><name pos:start="323:55" pos:end="323:72">MatroskaAudioTrack</name> <operator pos:start="323:74" pos:end="323:74">*</operator><operator pos:start="323:75" pos:end="323:75">)</operator><name pos:start="323:76" pos:end="323:98"><name pos:start="323:76" pos:end="323:83">matroska</name><operator pos:start="323:84" pos:end="323:85">-&gt;</operator><name pos:start="323:86" pos:end="323:91">tracks</name><index pos:start="323:92" pos:end="323:98">[<expr pos:start="323:93" pos:end="323:97"><name pos:start="323:93" pos:end="323:97">track</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="325:21" pos:end="325:51"><decl pos:start="325:21" pos:end="325:50"><type pos:start="325:21" pos:end="325:23"><name pos:start="325:21" pos:end="325:23">int</name></type> <name pos:start="325:25" pos:end="325:25">a</name> <init pos:start="325:27" pos:end="325:50">= <expr pos:start="325:29" pos:end="325:50"><name pos:start="325:29" pos:end="325:50"><name pos:start="325:29" pos:end="325:30">st</name><operator pos:start="325:31" pos:end="325:32">-&gt;</operator><name pos:start="325:33" pos:end="325:37">codec</name><operator pos:start="325:38" pos:end="325:39">-&gt;</operator><name pos:start="325:40" pos:end="325:50">block_align</name></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="327:21" pos:end="327:58"><decl pos:start="327:21" pos:end="327:57"><type pos:start="327:21" pos:end="327:23"><name pos:start="327:21" pos:end="327:23">int</name></type> <name pos:start="327:25" pos:end="327:27">sps</name> <init pos:start="327:29" pos:end="327:57">= <expr pos:start="327:31" pos:end="327:57"><name pos:start="327:31" pos:end="327:57"><name pos:start="327:31" pos:end="327:40">audiotrack</name><operator pos:start="327:41" pos:end="327:42">-&gt;</operator><name pos:start="327:43" pos:end="327:57">sub_packet_size</name></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="329:21" pos:end="329:58"><decl pos:start="329:21" pos:end="329:57"><type pos:start="329:21" pos:end="329:23"><name pos:start="329:21" pos:end="329:23">int</name></type> <name pos:start="329:25" pos:end="329:27">cfs</name> <init pos:start="329:29" pos:end="329:57">= <expr pos:start="329:31" pos:end="329:57"><name pos:start="329:31" pos:end="329:57"><name pos:start="329:31" pos:end="329:40">audiotrack</name><operator pos:start="329:41" pos:end="329:42">-&gt;</operator><name pos:start="329:43" pos:end="329:57">coded_framesize</name></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="331:21" pos:end="331:53"><decl pos:start="331:21" pos:end="331:52"><type pos:start="331:21" pos:end="331:23"><name pos:start="331:21" pos:end="331:23">int</name></type> <name pos:start="331:25" pos:end="331:25">h</name> <init pos:start="331:27" pos:end="331:52">= <expr pos:start="331:29" pos:end="331:52"><name pos:start="331:29" pos:end="331:52"><name pos:start="331:29" pos:end="331:38">audiotrack</name><operator pos:start="331:39" pos:end="331:40">-&gt;</operator><name pos:start="331:41" pos:end="331:52">sub_packet_h</name></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="333:21" pos:end="333:55"><decl pos:start="333:21" pos:end="333:54"><type pos:start="333:21" pos:end="333:23"><name pos:start="333:21" pos:end="333:23">int</name></type> <name pos:start="333:25" pos:end="333:25">y</name> <init pos:start="333:27" pos:end="333:54">= <expr pos:start="333:29" pos:end="333:54"><name pos:start="333:29" pos:end="333:54"><name pos:start="333:29" pos:end="333:38">audiotrack</name><operator pos:start="333:39" pos:end="333:40">-&gt;</operator><name pos:start="333:41" pos:end="333:54">sub_packet_cnt</name></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="335:21" pos:end="335:51"><decl pos:start="335:21" pos:end="335:50"><type pos:start="335:21" pos:end="335:23"><name pos:start="335:21" pos:end="335:23">int</name></type> <name pos:start="335:25" pos:end="335:25">w</name> <init pos:start="335:27" pos:end="335:50">= <expr pos:start="335:29" pos:end="335:50"><name pos:start="335:29" pos:end="335:50"><name pos:start="335:29" pos:end="335:38">audiotrack</name><operator pos:start="335:39" pos:end="335:40">-&gt;</operator><name pos:start="335:41" pos:end="335:50">frame_size</name></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="337:21" pos:end="337:26"><decl pos:start="337:21" pos:end="337:25"><type pos:start="337:21" pos:end="337:23"><name pos:start="337:21" pos:end="337:23">int</name></type> <name pos:start="337:25" pos:end="337:25">x</name></decl>;</decl_stmt>



                    <if_stmt pos:start="341:21" pos:end="367:21"><if pos:start="341:21" pos:end="367:21">if <condition pos:start="341:24" pos:end="341:45">(<expr pos:start="341:25" pos:end="341:44"><operator pos:start="341:25" pos:end="341:25">!</operator><name pos:start="341:26" pos:end="341:44"><name pos:start="341:26" pos:end="341:35">audiotrack</name><operator pos:start="341:36" pos:end="341:37">-&gt;</operator><name pos:start="341:38" pos:end="341:44">pkt_cnt</name></name></expr>)</condition> <block pos:start="341:47" pos:end="367:21">{<block_content pos:start="343:25" pos:end="365:25">

                        <if_stmt pos:start="343:25" pos:end="355:106"><if pos:start="343:25" pos:end="349:56">if <condition pos:start="343:28" pos:end="343:67">(<expr pos:start="343:29" pos:end="343:66"><name pos:start="343:29" pos:end="343:47"><name pos:start="343:29" pos:end="343:30">st</name><operator pos:start="343:31" pos:end="343:32">-&gt;</operator><name pos:start="343:33" pos:end="343:37">codec</name><operator pos:start="343:38" pos:end="343:39">-&gt;</operator><name pos:start="343:40" pos:end="343:47">codec_id</name></name> <operator pos:start="343:49" pos:end="343:50">==</operator> <name pos:start="343:52" pos:end="343:66">CODEC_ID_RA_288</name></expr>)</condition><block type="pseudo" pos:start="345:29" pos:end="349:56"><block_content pos:start="345:29" pos:end="349:56">

                            <for pos:start="345:29" pos:end="349:56">for <control pos:start="345:33" pos:end="345:49">(<init pos:start="345:34" pos:end="345:37"><expr pos:start="345:34" pos:end="345:36"><name pos:start="345:34" pos:end="345:34">x</name><operator pos:start="345:35" pos:end="345:35">=</operator><literal type="number" pos:start="345:36" pos:end="345:36">0</literal></expr>;</init> <condition pos:start="345:39" pos:end="345:44"><expr pos:start="345:39" pos:end="345:43"><name pos:start="345:39" pos:end="345:39">x</name><operator pos:start="345:40" pos:end="345:40">&lt;</operator><name pos:start="345:41" pos:end="345:41">h</name><operator pos:start="345:42" pos:end="345:42">/</operator><literal type="number" pos:start="345:43" pos:end="345:43">2</literal></expr>;</condition> <incr pos:start="345:46" pos:end="345:48"><expr pos:start="345:46" pos:end="345:48"><name pos:start="345:46" pos:end="345:46">x</name><operator pos:start="345:47" pos:end="345:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="347:33" pos:end="349:56"><block_content pos:start="347:33" pos:end="349:56">

                                <expr_stmt pos:start="347:33" pos:end="349:56"><expr pos:start="347:33" pos:end="349:55"><call pos:start="347:33" pos:end="349:55"><name pos:start="347:33" pos:end="347:38">memcpy</name><argument_list pos:start="347:39" pos:end="349:55">(<argument pos:start="347:40" pos:end="347:66"><expr pos:start="347:40" pos:end="347:66"><name pos:start="347:40" pos:end="347:54"><name pos:start="347:40" pos:end="347:49">audiotrack</name><operator pos:start="347:50" pos:end="347:51">-&gt;</operator><name pos:start="347:52" pos:end="347:54">buf</name></name><operator pos:start="347:55" pos:end="347:55">+</operator><name pos:start="347:56" pos:end="347:56">x</name><operator pos:start="347:57" pos:end="347:57">*</operator><literal type="number" pos:start="347:58" pos:end="347:58">2</literal><operator pos:start="347:59" pos:end="347:59">*</operator><name pos:start="347:60" pos:end="347:60">w</name><operator pos:start="347:61" pos:end="347:61">+</operator><name pos:start="347:62" pos:end="347:62">y</name><operator pos:start="347:63" pos:end="347:63">*</operator><name pos:start="347:64" pos:end="347:66">cfs</name></expr></argument>,

                                       <argument pos:start="349:40" pos:end="349:49"><expr pos:start="349:40" pos:end="349:49"><name pos:start="349:40" pos:end="349:43">data</name><operator pos:start="349:44" pos:end="349:44">+</operator><name pos:start="349:45" pos:end="349:45">x</name><operator pos:start="349:46" pos:end="349:46">*</operator><name pos:start="349:47" pos:end="349:49">cfs</name></expr></argument>, <argument pos:start="349:52" pos:end="349:54"><expr pos:start="349:52" pos:end="349:54"><name pos:start="349:52" pos:end="349:54">cfs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if>

                        <else pos:start="351:25" pos:end="355:106">else<block type="pseudo" pos:start="353:29" pos:end="355:106"><block_content pos:start="353:29" pos:end="355:106">

                            <for pos:start="353:29" pos:end="355:106">for <control pos:start="353:33" pos:end="353:51">(<init pos:start="353:34" pos:end="353:37"><expr pos:start="353:34" pos:end="353:36"><name pos:start="353:34" pos:end="353:34">x</name><operator pos:start="353:35" pos:end="353:35">=</operator><literal type="number" pos:start="353:36" pos:end="353:36">0</literal></expr>;</init> <condition pos:start="353:39" pos:end="353:46"><expr pos:start="353:39" pos:end="353:45"><name pos:start="353:39" pos:end="353:39">x</name><operator pos:start="353:40" pos:end="353:40">&lt;</operator><name pos:start="353:41" pos:end="353:41">w</name><operator pos:start="353:42" pos:end="353:42">/</operator><name pos:start="353:43" pos:end="353:45">sps</name></expr>;</condition> <incr pos:start="353:48" pos:end="353:50"><expr pos:start="353:48" pos:end="353:50"><name pos:start="353:48" pos:end="353:48">x</name><operator pos:start="353:49" pos:end="353:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="355:33" pos:end="355:106"><block_content pos:start="355:33" pos:end="355:106">

                                <expr_stmt pos:start="355:33" pos:end="355:106"><expr pos:start="355:33" pos:end="355:105"><call pos:start="355:33" pos:end="355:105"><name pos:start="355:33" pos:end="355:38">memcpy</name><argument_list pos:start="355:39" pos:end="355:105">(<argument pos:start="355:40" pos:end="355:87"><expr pos:start="355:40" pos:end="355:87"><name pos:start="355:40" pos:end="355:54"><name pos:start="355:40" pos:end="355:49">audiotrack</name><operator pos:start="355:50" pos:end="355:51">-&gt;</operator><name pos:start="355:52" pos:end="355:54">buf</name></name><operator pos:start="355:55" pos:end="355:55">+</operator><name pos:start="355:56" pos:end="355:58">sps</name><operator pos:start="355:59" pos:end="355:59">*</operator><operator pos:start="355:60" pos:end="355:60">(</operator><name pos:start="355:61" pos:end="355:61">h</name><operator pos:start="355:62" pos:end="355:62">*</operator><name pos:start="355:63" pos:end="355:63">x</name><operator pos:start="355:64" pos:end="355:64">+</operator><operator pos:start="355:65" pos:end="355:65">(</operator><operator pos:start="355:66" pos:end="355:66">(</operator><name pos:start="355:67" pos:end="355:67">h</name><operator pos:start="355:68" pos:end="355:68">+</operator><literal type="number" pos:start="355:69" pos:end="355:69">1</literal><operator pos:start="355:70" pos:end="355:70">)</operator><operator pos:start="355:71" pos:end="355:71">/</operator><literal type="number" pos:start="355:72" pos:end="355:72">2</literal><operator pos:start="355:73" pos:end="355:73">)</operator><operator pos:start="355:74" pos:end="355:74">*</operator><operator pos:start="355:75" pos:end="355:75">(</operator><name pos:start="355:76" pos:end="355:76">y</name><operator pos:start="355:77" pos:end="355:77">&amp;</operator><literal type="number" pos:start="355:78" pos:end="355:78">1</literal><operator pos:start="355:79" pos:end="355:79">)</operator><operator pos:start="355:80" pos:end="355:80">+</operator><operator pos:start="355:81" pos:end="355:81">(</operator><name pos:start="355:82" pos:end="355:82">y</name><operator pos:start="355:83" pos:end="355:84">&gt;&gt;</operator><literal type="number" pos:start="355:85" pos:end="355:85">1</literal><operator pos:start="355:86" pos:end="355:86">)</operator><operator pos:start="355:87" pos:end="355:87">)</operator></expr></argument>, <argument pos:start="355:90" pos:end="355:99"><expr pos:start="355:90" pos:end="355:99"><name pos:start="355:90" pos:end="355:93">data</name><operator pos:start="355:94" pos:end="355:94">+</operator><name pos:start="355:95" pos:end="355:95">x</name><operator pos:start="355:96" pos:end="355:96">*</operator><name pos:start="355:97" pos:end="355:99">sps</name></expr></argument>, <argument pos:start="355:102" pos:end="355:104"><expr pos:start="355:102" pos:end="355:104"><name pos:start="355:102" pos:end="355:104">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></else></if_stmt>



                        <if_stmt pos:start="359:25" pos:end="365:25"><if pos:start="359:25" pos:end="365:25">if <condition pos:start="359:28" pos:end="359:62">(<expr pos:start="359:29" pos:end="359:61"><operator pos:start="359:29" pos:end="359:30">++</operator><name pos:start="359:31" pos:end="359:56"><name pos:start="359:31" pos:end="359:40">audiotrack</name><operator pos:start="359:41" pos:end="359:42">-&gt;</operator><name pos:start="359:43" pos:end="359:56">sub_packet_cnt</name></name> <operator pos:start="359:58" pos:end="359:59">&gt;=</operator> <name pos:start="359:61" pos:end="359:61">h</name></expr>)</condition> <block pos:start="359:64" pos:end="365:25">{<block_content pos:start="361:29" pos:end="363:58">

                            <expr_stmt pos:start="361:29" pos:end="361:59"><expr pos:start="361:29" pos:end="361:58"><name pos:start="361:29" pos:end="361:54"><name pos:start="361:29" pos:end="361:38">audiotrack</name><operator pos:start="361:39" pos:end="361:40">-&gt;</operator><name pos:start="361:41" pos:end="361:54">sub_packet_cnt</name></name> <operator pos:start="361:56" pos:end="361:56">=</operator> <literal type="number" pos:start="361:58" pos:end="361:58">0</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="363:29" pos:end="363:58"><expr pos:start="363:29" pos:end="363:57"><name pos:start="363:29" pos:end="363:47"><name pos:start="363:29" pos:end="363:38">audiotrack</name><operator pos:start="363:39" pos:end="363:40">-&gt;</operator><name pos:start="363:41" pos:end="363:47">pkt_cnt</name></name> <operator pos:start="363:49" pos:end="363:49">=</operator> <name pos:start="363:51" pos:end="363:51">h</name><operator pos:start="363:52" pos:end="363:52">*</operator><name pos:start="363:53" pos:end="363:53">w</name> <operator pos:start="363:55" pos:end="363:55">/</operator> <name pos:start="363:57" pos:end="363:57">a</name></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <while pos:start="369:21" pos:end="385:21">while <condition pos:start="369:27" pos:end="369:47">(<expr pos:start="369:28" pos:end="369:46"><name pos:start="369:28" pos:end="369:46"><name pos:start="369:28" pos:end="369:37">audiotrack</name><operator pos:start="369:38" pos:end="369:39">-&gt;</operator><name pos:start="369:40" pos:end="369:46">pkt_cnt</name></name></expr>)</condition> <block pos:start="369:49" pos:end="385:21">{<block_content pos:start="371:25" pos:end="383:61">

                        <expr_stmt pos:start="371:25" pos:end="371:59"><expr pos:start="371:25" pos:end="371:58"><name pos:start="371:25" pos:end="371:27">pkt</name> <operator pos:start="371:29" pos:end="371:29">=</operator> <call pos:start="371:31" pos:end="371:58"><name pos:start="371:31" pos:end="371:40">av_mallocz</name><argument_list pos:start="371:41" pos:end="371:58">(<argument pos:start="371:42" pos:end="371:57"><expr pos:start="371:42" pos:end="371:57"><sizeof pos:start="371:42" pos:end="371:57">sizeof<argument_list pos:start="371:48" pos:end="371:57">(<argument pos:start="371:49" pos:end="371:56"><expr pos:start="371:49" pos:end="371:56"><name pos:start="371:49" pos:end="371:56">AVPacket</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="373:25" pos:end="373:46"><expr pos:start="373:25" pos:end="373:45"><call pos:start="373:25" pos:end="373:45"><name pos:start="373:25" pos:end="373:37">av_new_packet</name><argument_list pos:start="373:38" pos:end="373:45">(<argument pos:start="373:39" pos:end="373:41"><expr pos:start="373:39" pos:end="373:41"><name pos:start="373:39" pos:end="373:41">pkt</name></expr></argument>, <argument pos:start="373:44" pos:end="373:44"><expr pos:start="373:44" pos:end="373:44"><name pos:start="373:44" pos:end="373:44">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="375:25" pos:end="377:75"><expr pos:start="375:25" pos:end="377:74"><call pos:start="375:25" pos:end="377:74"><name pos:start="375:25" pos:end="375:30">memcpy</name><argument_list pos:start="375:31" pos:end="377:74">(<argument pos:start="375:32" pos:end="375:40"><expr pos:start="375:32" pos:end="375:40"><name pos:start="375:32" pos:end="375:40"><name pos:start="375:32" pos:end="375:34">pkt</name><operator pos:start="375:35" pos:end="375:36">-&gt;</operator><name pos:start="375:37" pos:end="375:40">data</name></name></expr></argument>, <argument pos:start="375:43" pos:end="377:70"><expr pos:start="375:43" pos:end="377:70"><name pos:start="375:43" pos:end="375:57"><name pos:start="375:43" pos:end="375:52">audiotrack</name><operator pos:start="375:53" pos:end="375:54">-&gt;</operator><name pos:start="375:55" pos:end="375:57">buf</name></name>

                               <operator pos:start="377:32" pos:end="377:32">+</operator> <name pos:start="377:34" pos:end="377:34">a</name> <operator pos:start="377:36" pos:end="377:36">*</operator> <operator pos:start="377:38" pos:end="377:38">(</operator><name pos:start="377:39" pos:end="377:39">h</name><operator pos:start="377:40" pos:end="377:40">*</operator><name pos:start="377:41" pos:end="377:41">w</name> <operator pos:start="377:43" pos:end="377:43">/</operator> <name pos:start="377:45" pos:end="377:45">a</name> <operator pos:start="377:47" pos:end="377:47">-</operator> <name pos:start="377:49" pos:end="377:67"><name pos:start="377:49" pos:end="377:58">audiotrack</name><operator pos:start="377:59" pos:end="377:60">-&gt;</operator><name pos:start="377:61" pos:end="377:67">pkt_cnt</name></name><operator pos:start="377:68" pos:end="377:69">--</operator><operator pos:start="377:70" pos:end="377:70">)</operator></expr></argument>, <argument pos:start="377:73" pos:end="377:73"><expr pos:start="377:73" pos:end="377:73"><name pos:start="377:73" pos:end="377:73">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="379:25" pos:end="379:39"><expr pos:start="379:25" pos:end="379:38"><name pos:start="379:25" pos:end="379:32"><name pos:start="379:25" pos:end="379:27">pkt</name><operator pos:start="379:28" pos:end="379:29">-&gt;</operator><name pos:start="379:30" pos:end="379:32">pos</name></name> <operator pos:start="379:34" pos:end="379:34">=</operator> <name pos:start="379:36" pos:end="379:38">pos</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="381:25" pos:end="381:82"><expr pos:start="381:25" pos:end="381:81"><name pos:start="381:25" pos:end="381:41"><name pos:start="381:25" pos:end="381:27">pkt</name><operator pos:start="381:28" pos:end="381:29">-&gt;</operator><name pos:start="381:30" pos:end="381:41">stream_index</name></name> <operator pos:start="381:43" pos:end="381:43">=</operator> <name pos:start="381:45" pos:end="381:67"><name pos:start="381:45" pos:end="381:52">matroska</name><operator pos:start="381:53" pos:end="381:54">-&gt;</operator><name pos:start="381:55" pos:end="381:60">tracks</name><index pos:start="381:61" pos:end="381:67">[<expr pos:start="381:62" pos:end="381:66"><name pos:start="381:62" pos:end="381:66">track</name></expr>]</index></name><operator pos:start="381:68" pos:end="381:69">-&gt;</operator><name pos:start="381:70" pos:end="381:81">stream_index</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="383:25" pos:end="383:61"><expr pos:start="383:25" pos:end="383:60"><call pos:start="383:25" pos:end="383:60"><name pos:start="383:25" pos:end="383:45">matroska_queue_packet</name><argument_list pos:start="383:46" pos:end="383:60">(<argument pos:start="383:47" pos:end="383:54"><expr pos:start="383:47" pos:end="383:54"><name pos:start="383:47" pos:end="383:54">matroska</name></expr></argument>, <argument pos:start="383:57" pos:end="383:59"><expr pos:start="383:57" pos:end="383:59"><name pos:start="383:57" pos:end="383:59">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></while>

                </block_content>}</block></if> <else pos:start="387:19" pos:end="445:17">else <block pos:start="387:24" pos:end="445:17">{<block_content pos:start="389:21" pos:end="443:57">

                    <decl_stmt pos:start="389:21" pos:end="389:35"><decl pos:start="389:21" pos:end="389:34"><type pos:start="389:21" pos:end="389:23"><name pos:start="389:21" pos:end="389:23">int</name></type> <name pos:start="389:25" pos:end="389:30">offset</name> <init pos:start="389:32" pos:end="389:34">= <expr pos:start="389:34" pos:end="389:34"><literal type="number" pos:start="389:34" pos:end="389:34">0</literal></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="393:21" pos:end="405:21"><if pos:start="393:21" pos:end="405:21">if <condition pos:start="393:24" pos:end="395:85">(<expr pos:start="393:25" pos:end="395:84"><name pos:start="393:25" pos:end="393:43"><name pos:start="393:25" pos:end="393:26">st</name><operator pos:start="393:27" pos:end="393:28">-&gt;</operator><name pos:start="393:29" pos:end="393:33">codec</name><operator pos:start="393:34" pos:end="393:35">-&gt;</operator><name pos:start="393:36" pos:end="393:43">codec_id</name></name> <operator pos:start="393:45" pos:end="393:46">==</operator> <name pos:start="393:48" pos:end="393:60">CODEC_ID_TEXT</name>

                        <operator pos:start="395:25" pos:end="395:26">&amp;&amp;</operator> <operator pos:start="395:28" pos:end="395:28">(</operator><operator pos:start="395:29" pos:end="395:29">(</operator><name pos:start="395:30" pos:end="395:50">MatroskaSubtitleTrack</name> <operator pos:start="395:52" pos:end="395:52">*</operator><operator pos:start="395:53" pos:end="395:53">)</operator><operator pos:start="395:54" pos:end="395:54">(</operator><name pos:start="395:55" pos:end="395:77"><name pos:start="395:55" pos:end="395:62">matroska</name><operator pos:start="395:63" pos:end="395:64">-&gt;</operator><name pos:start="395:65" pos:end="395:70">tracks</name><index pos:start="395:71" pos:end="395:77">[<expr pos:start="395:72" pos:end="395:76"><name pos:start="395:72" pos:end="395:76">track</name></expr>]</index></name><operator pos:start="395:78" pos:end="395:78">)</operator><operator pos:start="395:79" pos:end="395:79">)</operator><operator pos:start="395:80" pos:end="395:81">-&gt;</operator><name pos:start="395:82" pos:end="395:84">ass</name></expr>)</condition> <block pos:start="395:87" pos:end="405:21">{<block_content pos:start="397:25" pos:end="403:36">

                        <decl_stmt pos:start="397:25" pos:end="397:30"><decl pos:start="397:25" pos:end="397:29"><type pos:start="397:25" pos:end="397:27"><name pos:start="397:25" pos:end="397:27">int</name></type> <name pos:start="397:29" pos:end="397:29">i</name></decl>;</decl_stmt>

                        <for pos:start="399:25" pos:end="403:36">for <control pos:start="399:29" pos:end="399:77">(<init pos:start="399:30" pos:end="399:33"><expr pos:start="399:30" pos:end="399:32"><name pos:start="399:30" pos:end="399:30">i</name><operator pos:start="399:31" pos:end="399:31">=</operator><literal type="number" pos:start="399:32" pos:end="399:32">0</literal></expr>;</init> <condition pos:start="399:35" pos:end="399:67"><expr pos:start="399:35" pos:end="399:66"><name pos:start="399:35" pos:end="399:35">i</name><operator pos:start="399:36" pos:end="399:36">&lt;</operator><literal type="number" pos:start="399:37" pos:end="399:37">8</literal> <operator pos:start="399:39" pos:end="399:40">&amp;&amp;</operator> <name pos:start="399:42" pos:end="399:66"><name pos:start="399:42" pos:end="399:45">data</name><index pos:start="399:46" pos:end="399:66">[<expr pos:start="399:47" pos:end="399:65"><name pos:start="399:47" pos:end="399:58">slice_offset</name><operator pos:start="399:59" pos:end="399:59">+</operator><name pos:start="399:60" pos:end="399:65">offset</name></expr>]</index></name></expr>;</condition> <incr pos:start="399:69" pos:end="399:76"><expr pos:start="399:69" pos:end="399:76"><name pos:start="399:69" pos:end="399:74">offset</name><operator pos:start="399:75" pos:end="399:76">++</operator></expr></incr>)</control><block type="pseudo" pos:start="401:29" pos:end="403:36"><block_content pos:start="401:29" pos:end="403:36">

                            <if_stmt pos:start="401:29" pos:end="403:36"><if pos:start="401:29" pos:end="403:36">if <condition pos:start="401:32" pos:end="401:65">(<expr pos:start="401:33" pos:end="401:64"><name pos:start="401:33" pos:end="401:57"><name pos:start="401:33" pos:end="401:36">data</name><index pos:start="401:37" pos:end="401:57">[<expr pos:start="401:38" pos:end="401:56"><name pos:start="401:38" pos:end="401:49">slice_offset</name><operator pos:start="401:50" pos:end="401:50">+</operator><name pos:start="401:51" pos:end="401:56">offset</name></expr>]</index></name> <operator pos:start="401:59" pos:end="401:60">==</operator> <literal type="char" pos:start="401:62" pos:end="401:64">','</literal></expr>)</condition><block type="pseudo" pos:start="403:33" pos:end="403:36"><block_content pos:start="403:33" pos:end="403:36">

                                <expr_stmt pos:start="403:33" pos:end="403:36"><expr pos:start="403:33" pos:end="403:35"><name pos:start="403:33" pos:end="403:33">i</name><operator pos:start="403:34" pos:end="403:35">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                    </block_content>}</block></if></if_stmt>



                    <expr_stmt pos:start="409:21" pos:end="409:55"><expr pos:start="409:21" pos:end="409:54"><name pos:start="409:21" pos:end="409:23">pkt</name> <operator pos:start="409:25" pos:end="409:25">=</operator> <call pos:start="409:27" pos:end="409:54"><name pos:start="409:27" pos:end="409:36">av_mallocz</name><argument_list pos:start="409:37" pos:end="409:54">(<argument pos:start="409:38" pos:end="409:53"><expr pos:start="409:38" pos:end="409:53"><sizeof pos:start="409:38" pos:end="409:53">sizeof<argument_list pos:start="409:44" pos:end="409:53">(<argument pos:start="409:45" pos:end="409:52"><expr pos:start="409:45" pos:end="409:52"><name pos:start="409:45" pos:end="409:52">AVPacket</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="411:21" pos:end="411:51">/* XXX: prevent data copy... */</comment>

                    <if_stmt pos:start="413:21" pos:end="421:21"><if pos:start="413:21" pos:end="421:21">if <condition pos:start="413:24" pos:end="413:66">(<expr pos:start="413:25" pos:end="413:65"><call pos:start="413:25" pos:end="413:61"><name pos:start="413:25" pos:end="413:37">av_new_packet</name><argument_list pos:start="413:38" pos:end="413:61">(<argument pos:start="413:39" pos:end="413:41"><expr pos:start="413:39" pos:end="413:41"><name pos:start="413:39" pos:end="413:41">pkt</name></expr></argument>, <argument pos:start="413:44" pos:end="413:60"><expr pos:start="413:44" pos:end="413:60"><name pos:start="413:44" pos:end="413:53">slice_size</name><operator pos:start="413:54" pos:end="413:54">-</operator><name pos:start="413:55" pos:end="413:60">offset</name></expr></argument>)</argument_list></call> <operator pos:start="413:63" pos:end="413:63">&lt;</operator> <literal type="number" pos:start="413:65" pos:end="413:65">0</literal></expr>)</condition> <block pos:start="413:68" pos:end="421:21">{<block_content pos:start="415:25" pos:end="419:30">

                        <expr_stmt pos:start="415:25" pos:end="415:46"><expr pos:start="415:25" pos:end="415:45"><name pos:start="415:25" pos:end="415:27">res</name> <operator pos:start="415:29" pos:end="415:29">=</operator> <call pos:start="415:31" pos:end="415:45"><name pos:start="415:31" pos:end="415:37">AVERROR</name><argument_list pos:start="415:38" pos:end="415:45">(<argument pos:start="415:39" pos:end="415:44"><expr pos:start="415:39" pos:end="415:44"><name pos:start="415:39" pos:end="415:44">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="417:25" pos:end="417:36"><expr pos:start="417:25" pos:end="417:35"><name pos:start="417:25" pos:end="417:25">n</name> <operator pos:start="417:27" pos:end="417:27">=</operator> <name pos:start="417:29" pos:end="417:33">laces</name><operator pos:start="417:34" pos:end="417:34">-</operator><literal type="number" pos:start="417:35" pos:end="417:35">1</literal></expr>;</expr_stmt>

                        <break pos:start="419:25" pos:end="419:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="423:21" pos:end="423:84"><expr pos:start="423:21" pos:end="423:83"><call pos:start="423:21" pos:end="423:83"><name pos:start="423:21" pos:end="423:26">memcpy</name> <argument_list pos:start="423:28" pos:end="423:83">(<argument pos:start="423:29" pos:end="423:37"><expr pos:start="423:29" pos:end="423:37"><name pos:start="423:29" pos:end="423:37"><name pos:start="423:29" pos:end="423:31">pkt</name><operator pos:start="423:32" pos:end="423:33">-&gt;</operator><name pos:start="423:34" pos:end="423:37">data</name></name></expr></argument>, <argument pos:start="423:40" pos:end="423:63"><expr pos:start="423:40" pos:end="423:63"><name pos:start="423:40" pos:end="423:43">data</name><operator pos:start="423:44" pos:end="423:44">+</operator><name pos:start="423:45" pos:end="423:56">slice_offset</name><operator pos:start="423:57" pos:end="423:57">+</operator><name pos:start="423:58" pos:end="423:63">offset</name></expr></argument>, <argument pos:start="423:66" pos:end="423:82"><expr pos:start="423:66" pos:end="423:82"><name pos:start="423:66" pos:end="423:75">slice_size</name><operator pos:start="423:76" pos:end="423:76">-</operator><name pos:start="423:77" pos:end="423:82">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="427:21" pos:end="429:49"><if pos:start="427:21" pos:end="429:49">if <condition pos:start="427:24" pos:end="427:31">(<expr pos:start="427:25" pos:end="427:30"><name pos:start="427:25" pos:end="427:25">n</name> <operator pos:start="427:27" pos:end="427:28">==</operator> <literal type="number" pos:start="427:30" pos:end="427:30">0</literal></expr>)</condition><block type="pseudo" pos:start="429:25" pos:end="429:49"><block_content pos:start="429:25" pos:end="429:49">

                        <expr_stmt pos:start="429:25" pos:end="429:49"><expr pos:start="429:25" pos:end="429:48"><name pos:start="429:25" pos:end="429:34"><name pos:start="429:25" pos:end="429:27">pkt</name><operator pos:start="429:28" pos:end="429:29">-&gt;</operator><name pos:start="429:30" pos:end="429:34">flags</name></name> <operator pos:start="429:36" pos:end="429:36">=</operator> <name pos:start="429:38" pos:end="429:48">is_keyframe</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="431:21" pos:end="431:78"><expr pos:start="431:21" pos:end="431:77"><name pos:start="431:21" pos:end="431:37"><name pos:start="431:21" pos:end="431:23">pkt</name><operator pos:start="431:24" pos:end="431:25">-&gt;</operator><name pos:start="431:26" pos:end="431:37">stream_index</name></name> <operator pos:start="431:39" pos:end="431:39">=</operator> <name pos:start="431:41" pos:end="431:63"><name pos:start="431:41" pos:end="431:48">matroska</name><operator pos:start="431:49" pos:end="431:50">-&gt;</operator><name pos:start="431:51" pos:end="431:56">tracks</name><index pos:start="431:57" pos:end="431:63">[<expr pos:start="431:58" pos:end="431:62"><name pos:start="431:58" pos:end="431:62">track</name></expr>]</index></name><operator pos:start="431:64" pos:end="431:65">-&gt;</operator><name pos:start="431:66" pos:end="431:77">stream_index</name></expr>;</expr_stmt>



                    <expr_stmt pos:start="435:21" pos:end="435:40"><expr pos:start="435:21" pos:end="435:39"><name pos:start="435:21" pos:end="435:28"><name pos:start="435:21" pos:end="435:23">pkt</name><operator pos:start="435:24" pos:end="435:25">-&gt;</operator><name pos:start="435:26" pos:end="435:28">pts</name></name> <operator pos:start="435:30" pos:end="435:30">=</operator> <name pos:start="435:32" pos:end="435:39">timecode</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="437:21" pos:end="437:35"><expr pos:start="437:21" pos:end="437:34"><name pos:start="437:21" pos:end="437:28"><name pos:start="437:21" pos:end="437:23">pkt</name><operator pos:start="437:24" pos:end="437:25">-&gt;</operator><name pos:start="437:26" pos:end="437:28">pos</name></name> <operator pos:start="437:30" pos:end="437:30">=</operator> <name pos:start="437:32" pos:end="437:34">pos</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="439:21" pos:end="439:45"><expr pos:start="439:21" pos:end="439:44"><name pos:start="439:21" pos:end="439:33"><name pos:start="439:21" pos:end="439:23">pkt</name><operator pos:start="439:24" pos:end="439:25">-&gt;</operator><name pos:start="439:26" pos:end="439:33">duration</name></name> <operator pos:start="439:35" pos:end="439:35">=</operator> <name pos:start="439:37" pos:end="439:44">duration</name></expr>;</expr_stmt>



                    <expr_stmt pos:start="443:21" pos:end="443:57"><expr pos:start="443:21" pos:end="443:56"><call pos:start="443:21" pos:end="443:56"><name pos:start="443:21" pos:end="443:41">matroska_queue_packet</name><argument_list pos:start="443:42" pos:end="443:56">(<argument pos:start="443:43" pos:end="443:50"><expr pos:start="443:43" pos:end="443:50"><name pos:start="443:43" pos:end="443:50">matroska</name></expr></argument>, <argument pos:start="443:53" pos:end="443:55"><expr pos:start="443:53" pos:end="443:55"><name pos:start="443:53" pos:end="443:55">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <if_stmt pos:start="449:17" pos:end="451:79"><if pos:start="449:17" pos:end="451:79">if <condition pos:start="449:20" pos:end="449:47">(<expr pos:start="449:21" pos:end="449:46"><name pos:start="449:21" pos:end="449:28">timecode</name> <operator pos:start="449:30" pos:end="449:31">!=</operator> <name pos:start="449:33" pos:end="449:46">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="451:21" pos:end="451:79"><block_content pos:start="451:21" pos:end="451:79">

                    <expr_stmt pos:start="451:21" pos:end="451:79"><expr pos:start="451:21" pos:end="451:78"><name pos:start="451:21" pos:end="451:28">timecode</name> <operator pos:start="451:30" pos:end="451:30">=</operator> <ternary pos:start="451:32" pos:end="451:78"><condition pos:start="451:32" pos:end="451:41"><expr pos:start="451:32" pos:end="451:39"><name pos:start="451:32" pos:end="451:39">duration</name></expr> ?</condition><then pos:start="451:43" pos:end="451:61"> <expr pos:start="451:43" pos:end="451:61"><name pos:start="451:43" pos:end="451:50">timecode</name> <operator pos:start="451:52" pos:end="451:52">+</operator> <name pos:start="451:54" pos:end="451:61">duration</name></expr> </then><else pos:start="451:63" pos:end="451:78">: <expr pos:start="451:65" pos:end="451:78"><name pos:start="451:65" pos:end="451:78">AV_NOPTS_VALUE</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="455:13" pos:end="455:33"><expr pos:start="455:13" pos:end="455:32"><name pos:start="455:13" pos:end="455:16">data</name> <operator pos:start="455:18" pos:end="455:19">+=</operator> <name pos:start="455:21" pos:end="455:32"><name pos:start="455:21" pos:end="455:29">lace_size</name><index pos:start="455:30" pos:end="455:32">[<expr pos:start="455:31" pos:end="455:31"><name pos:start="455:31" pos:end="455:31">n</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="463:5" pos:end="463:23"><expr pos:start="463:5" pos:end="463:22"><call pos:start="463:5" pos:end="463:22"><name pos:start="463:5" pos:end="463:11">av_free</name><argument_list pos:start="463:12" pos:end="463:22">(<argument pos:start="463:13" pos:end="463:21"><expr pos:start="463:13" pos:end="463:21"><name pos:start="463:13" pos:end="463:21">lace_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="465:5" pos:end="465:22"><expr pos:start="465:5" pos:end="465:21"><call pos:start="465:5" pos:end="465:21"><name pos:start="465:5" pos:end="465:11">av_free</name><argument_list pos:start="465:12" pos:end="465:21">(<argument pos:start="465:13" pos:end="465:20"><expr pos:start="465:13" pos:end="465:20"><name pos:start="465:13" pos:end="465:20">origdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="467:5" pos:end="467:15">return <expr pos:start="467:12" pos:end="467:14"><name pos:start="467:12" pos:end="467:14">res</name></expr>;</return>

</block_content>}</block>
</unit>
