<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4952.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">ppc_spapr_reset</name><parameter_list pos:start="1:28" pos:end="1:33">(<parameter pos:start="1:29" pos:end="1:32"><decl pos:start="1:29" pos:end="1:32"><type pos:start="1:29" pos:end="1:32"><name pos:start="1:29" pos:end="1:32">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="73:48">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">sPAPRMachineState</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:28">spapr</name> <init pos:start="5:30" pos:end="5:64">= <expr pos:start="5:32" pos:end="5:64"><call pos:start="5:32" pos:end="5:64"><name pos:start="5:32" pos:end="5:44">SPAPR_MACHINE</name><argument_list pos:start="5:45" pos:end="5:64">(<argument pos:start="5:46" pos:end="5:63"><expr pos:start="5:46" pos:end="5:63"><call pos:start="5:46" pos:end="5:63"><name pos:start="5:46" pos:end="5:61">qdev_get_machine</name><argument_list pos:start="5:62" pos:end="5:63">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">PowerPCCPU</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:29">first_ppc_cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:23">rtas_limit</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:42">/* Check for unknown sysbus devices */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:68"><expr pos:start="15:5" pos:end="15:67"><call pos:start="15:5" pos:end="15:67"><name pos:start="15:5" pos:end="15:33">foreach_dynamic_sysbus_device</name><argument_list pos:start="15:34" pos:end="15:67">(<argument pos:start="15:35" pos:end="15:60"><expr pos:start="15:35" pos:end="15:60"><name pos:start="15:35" pos:end="15:60">find_unknown_sysbus_device</name></expr></argument>, <argument pos:start="15:63" pos:end="15:66"><expr pos:start="15:63" pos:end="15:66"><name pos:start="15:63" pos:end="15:66">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:47">/* Reset the hash table &amp; recalc the RMA */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><call pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:20">spapr_reset_htab</name><argument_list pos:start="21:21" pos:end="21:27">(<argument pos:start="21:22" pos:end="21:26"><expr pos:start="21:22" pos:end="21:26"><name pos:start="21:22" pos:end="21:26">spapr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><call pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:22">qemu_devices_reset</name><argument_list pos:start="25:23" pos:end="25:24">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="37:7">/*

     * We place the device tree and RTAS just below either the top of the RMA,

     * or just below 2GB, whichever is lowere, so that it can be

     * processed with 32-bit real mode code if necessary

     */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:53"><expr pos:start="39:5" pos:end="39:52"><name pos:start="39:5" pos:end="39:14">rtas_limit</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <call pos:start="39:18" pos:end="39:52"><name pos:start="39:18" pos:end="39:20">MIN</name><argument_list pos:start="39:21" pos:end="39:52">(<argument pos:start="39:22" pos:end="39:36"><expr pos:start="39:22" pos:end="39:36"><name pos:start="39:22" pos:end="39:36"><name pos:start="39:22" pos:end="39:26">spapr</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:36">rma_size</name></name></expr></argument>, <argument pos:start="39:39" pos:end="39:51"><expr pos:start="39:39" pos:end="39:51"><name pos:start="39:39" pos:end="39:51">RTAS_MAX_ADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:50"><expr pos:start="41:5" pos:end="41:49"><name pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:9">spapr</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:20">rtas_addr</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:33">rtas_limit</name> <operator pos:start="41:35" pos:end="41:35">-</operator> <name pos:start="41:37" pos:end="41:49">RTAS_MAX_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:54"><expr pos:start="43:5" pos:end="43:53"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:9">spapr</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:19">fdt_addr</name></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:38"><name pos:start="43:23" pos:end="43:27">spapr</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:38">rtas_addr</name></name> <operator pos:start="43:40" pos:end="43:40">-</operator> <name pos:start="43:42" pos:end="43:53">FDT_MAX_SIZE</name></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:22">/* Load the fdt */</comment>

    <expr_stmt pos:start="49:5" pos:end="51:41"><expr pos:start="49:5" pos:end="51:40"><call pos:start="49:5" pos:end="51:40"><name pos:start="49:5" pos:end="49:22">spapr_finalize_fdt</name><argument_list pos:start="49:23" pos:end="51:40">(<argument pos:start="49:24" pos:end="49:28"><expr pos:start="49:24" pos:end="49:28"><name pos:start="49:24" pos:end="49:28">spapr</name></expr></argument>, <argument pos:start="49:31" pos:end="49:45"><expr pos:start="49:31" pos:end="49:45"><name pos:start="49:31" pos:end="49:45"><name pos:start="49:31" pos:end="49:35">spapr</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:45">fdt_addr</name></name></expr></argument>, <argument pos:start="49:48" pos:end="49:63"><expr pos:start="49:48" pos:end="49:63"><name pos:start="49:48" pos:end="49:63"><name pos:start="49:48" pos:end="49:52">spapr</name><operator pos:start="49:53" pos:end="49:54">-&gt;</operator><name pos:start="49:55" pos:end="49:63">rtas_addr</name></name></expr></argument>,

                       <argument pos:start="51:24" pos:end="51:39"><expr pos:start="51:24" pos:end="51:39"><name pos:start="51:24" pos:end="51:39"><name pos:start="51:24" pos:end="51:28">spapr</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:39">rtas_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:24">/* Copy RTAS over */</comment>

    <expr_stmt pos:start="57:5" pos:end="59:48"><expr pos:start="57:5" pos:end="59:47"><call pos:start="57:5" pos:end="59:47"><name pos:start="57:5" pos:end="57:29">cpu_physical_memory_write</name><argument_list pos:start="57:30" pos:end="59:47">(<argument pos:start="57:31" pos:end="57:46"><expr pos:start="57:31" pos:end="57:46"><name pos:start="57:31" pos:end="57:46"><name pos:start="57:31" pos:end="57:35">spapr</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:46">rtas_addr</name></name></expr></argument>, <argument pos:start="57:49" pos:end="57:64"><expr pos:start="57:49" pos:end="57:64"><name pos:start="57:49" pos:end="57:64"><name pos:start="57:49" pos:end="57:53">spapr</name><operator pos:start="57:54" pos:end="57:55">-&gt;</operator><name pos:start="57:56" pos:end="57:64">rtas_blob</name></name></expr></argument>,

                              <argument pos:start="59:31" pos:end="59:46"><expr pos:start="59:31" pos:end="59:46"><name pos:start="59:31" pos:end="59:46"><name pos:start="59:31" pos:end="59:35">spapr</name><operator pos:start="59:36" pos:end="59:37">-&gt;</operator><name pos:start="59:38" pos:end="59:46">rtas_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:32">/* Set up the entry state */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:43"><expr pos:start="65:5" pos:end="65:42"><name pos:start="65:5" pos:end="65:17">first_ppc_cpu</name> <operator pos:start="65:19" pos:end="65:19">=</operator> <call pos:start="65:21" pos:end="65:42"><name pos:start="65:21" pos:end="65:31">POWERPC_CPU</name><argument_list pos:start="65:32" pos:end="65:42">(<argument pos:start="65:33" pos:end="65:41"><expr pos:start="65:33" pos:end="65:41"><name pos:start="65:33" pos:end="65:41">first_cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:48"><expr pos:start="67:5" pos:end="67:47"><name pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:17">first_ppc_cpu</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:22">env</name><operator pos:start="67:23" pos:end="67:23">.</operator><name pos:start="67:24" pos:end="67:26">gpr</name><index pos:start="67:27" pos:end="67:29">[<expr pos:start="67:28" pos:end="67:28"><literal type="number" pos:start="67:28" pos:end="67:28">3</literal></expr>]</index></name> <operator pos:start="67:31" pos:end="67:31">=</operator> <name pos:start="67:33" pos:end="67:47"><name pos:start="67:33" pos:end="67:37">spapr</name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:47">fdt_addr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:34"><expr pos:start="69:5" pos:end="69:33"><name pos:start="69:5" pos:end="69:29"><name pos:start="69:5" pos:end="69:17">first_ppc_cpu</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:22">env</name><operator pos:start="69:23" pos:end="69:23">.</operator><name pos:start="69:24" pos:end="69:26">gpr</name><index pos:start="69:27" pos:end="69:29">[<expr pos:start="69:28" pos:end="69:28"><literal type="number" pos:start="69:28" pos:end="69:28">5</literal></expr>]</index></name> <operator pos:start="69:31" pos:end="69:31">=</operator> <literal type="number" pos:start="69:33" pos:end="69:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:26"><expr pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:21"><name pos:start="71:5" pos:end="71:13">first_cpu</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:21">halted</name></name> <operator pos:start="71:23" pos:end="71:23">=</operator> <literal type="number" pos:start="71:25" pos:end="71:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:48"><expr pos:start="73:5" pos:end="73:47"><name pos:start="73:5" pos:end="73:26"><name pos:start="73:5" pos:end="73:17">first_ppc_cpu</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:22">env</name><operator pos:start="73:23" pos:end="73:23">.</operator><name pos:start="73:24" pos:end="73:26">nip</name></name> <operator pos:start="73:28" pos:end="73:28">=</operator> <name pos:start="73:30" pos:end="73:47"><name pos:start="73:30" pos:end="73:34">spapr</name><operator pos:start="73:35" pos:end="73:36">-&gt;</operator><name pos:start="73:37" pos:end="73:47">entry_point</name></name></expr>;</expr_stmt>



</block_content>}</block></function>
</unit>
