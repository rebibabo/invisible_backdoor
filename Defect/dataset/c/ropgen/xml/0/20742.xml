<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20742.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:40">bdrv_snapshot_load_tmp_by_id_or_name</name><parameter_list pos:start="1:41" pos:end="5:54">(<parameter pos:start="1:42" pos:end="1:61"><decl pos:start="1:42" pos:end="1:61"><type pos:start="1:42" pos:end="1:61"><name pos:start="1:42" pos:end="1:57">BlockDriverState</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">bs</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:63"><decl pos:start="3:42" pos:end="3:63"><type pos:start="3:42" pos:end="3:63"><specifier pos:start="3:42" pos:end="3:46">const</specifier> <name pos:start="3:48" pos:end="3:51">char</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:63">id_or_name</name></decl></parameter>,

                                         <parameter pos:start="5:42" pos:end="5:53"><decl pos:start="5:42" pos:end="5:53"><type pos:start="5:42" pos:end="5:53"><name pos:start="5:42" pos:end="5:46">Error</name> <modifier pos:start="5:48" pos:end="5:48">*</modifier><modifier pos:start="5:49" pos:end="5:49">*</modifier></type><name pos:start="5:50" pos:end="5:53">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="39:1">{<block_content pos:start="9:5" pos:end="37:15">

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:20">local_err</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:67"><expr pos:start="15:5" pos:end="15:66"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:66"><name pos:start="15:11" pos:end="15:32">bdrv_snapshot_load_tmp</name><argument_list pos:start="15:33" pos:end="15:66">(<argument pos:start="15:34" pos:end="15:35"><expr pos:start="15:34" pos:end="15:35"><name pos:start="15:34" pos:end="15:35">bs</name></expr></argument>, <argument pos:start="15:38" pos:end="15:47"><expr pos:start="15:38" pos:end="15:47"><name pos:start="15:38" pos:end="15:47">id_or_name</name></expr></argument>, <argument pos:start="15:50" pos:end="15:53"><expr pos:start="15:50" pos:end="15:53"><name pos:start="15:50" pos:end="15:53">NULL</name></expr></argument>, <argument pos:start="15:56" pos:end="15:65"><expr pos:start="15:56" pos:end="15:65"><operator pos:start="15:56" pos:end="15:56">&amp;</operator><name pos:start="15:57" pos:end="15:65">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:41">(<expr pos:start="17:9" pos:end="17:40"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:14">==</operator> <operator pos:start="17:16" pos:end="17:16">-</operator><name pos:start="17:17" pos:end="17:22">ENOENT</name> <operator pos:start="17:24" pos:end="17:25">||</operator> <name pos:start="17:27" pos:end="17:29">ret</name> <operator pos:start="17:31" pos:end="17:32">==</operator> <operator pos:start="17:34" pos:end="17:34">-</operator><name pos:start="17:35" pos:end="17:40">EINVAL</name></expr>)</condition> <block pos:start="17:43" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:71">

        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><call pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:18">error_free</name><argument_list pos:start="19:19" pos:end="19:29">(<argument pos:start="19:20" pos:end="19:28"><expr pos:start="19:20" pos:end="19:28"><name pos:start="19:20" pos:end="19:28">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:25"><expr pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:17">local_err</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:24">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:71"><expr pos:start="23:9" pos:end="23:70"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:70"><name pos:start="23:15" pos:end="23:36">bdrv_snapshot_load_tmp</name><argument_list pos:start="23:37" pos:end="23:70">(<argument pos:start="23:38" pos:end="23:39"><expr pos:start="23:38" pos:end="23:39"><name pos:start="23:38" pos:end="23:39">bs</name></expr></argument>, <argument pos:start="23:42" pos:end="23:45"><expr pos:start="23:42" pos:end="23:45"><name pos:start="23:42" pos:end="23:45">NULL</name></expr></argument>, <argument pos:start="23:48" pos:end="23:57"><expr pos:start="23:48" pos:end="23:57"><name pos:start="23:48" pos:end="23:57">id_or_name</name></expr></argument>, <argument pos:start="23:60" pos:end="23:69"><expr pos:start="23:60" pos:end="23:69"><operator pos:start="23:60" pos:end="23:60">&amp;</operator><name pos:start="23:61" pos:end="23:69">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:18">(<expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:17">local_err</name></expr>)</condition> <block pos:start="29:20" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:41">

        <expr_stmt pos:start="31:9" pos:end="31:41"><expr pos:start="31:9" pos:end="31:40"><call pos:start="31:9" pos:end="31:40"><name pos:start="31:9" pos:end="31:23">error_propagate</name><argument_list pos:start="31:24" pos:end="31:40">(<argument pos:start="31:25" pos:end="31:28"><expr pos:start="31:25" pos:end="31:28"><name pos:start="31:25" pos:end="31:28">errp</name></expr></argument>, <argument pos:start="31:31" pos:end="31:39"><expr pos:start="31:31" pos:end="31:39"><name pos:start="31:31" pos:end="31:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="37:5" pos:end="37:15">return <expr pos:start="37:12" pos:end="37:14"><name pos:start="37:12" pos:end="37:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
