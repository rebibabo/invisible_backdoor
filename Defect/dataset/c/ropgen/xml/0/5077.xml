<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5077.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">write_odml_master</name><parameter_list pos:start="1:30" pos:end="1:67">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:66"><decl pos:start="1:51" pos:end="1:66"><type pos:start="1:51" pos:end="1:66"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:66">stream_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:46">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:43">= <expr pos:start="7:20" pos:end="7:43"><name pos:start="7:20" pos:end="7:43"><name pos:start="7:20" pos:end="7:20">s</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:29">streams</name><index pos:start="7:30" pos:end="7:43">[<expr pos:start="7:31" pos:end="7:42"><name pos:start="7:31" pos:end="7:42">stream_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">enc</name> <init pos:start="9:25" pos:end="9:35">= <expr pos:start="9:27" pos:end="9:35"><name pos:start="9:27" pos:end="9:35"><name pos:start="9:27" pos:end="9:28">st</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:35">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">AVIStream</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:20">avist</name> <init pos:start="11:22" pos:end="11:36">= <expr pos:start="11:24" pos:end="11:36"><name pos:start="11:24" pos:end="11:36"><name pos:start="11:24" pos:end="11:25">st</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">char</name></type> <name pos:start="13:19" pos:end="13:24"><name pos:start="13:19" pos:end="13:21">tag</name><index pos:start="13:22" pos:end="13:24">[<expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">5</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">j</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="25:39">/* Starting to lay out AVI OpenDML master index.

        * We want to make it JUNK entry for now, since we'd

        * like to get away without making AVI an OpenDML one

        * for compatibility reasons. */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:66"><expr pos:start="27:5" pos:end="27:65"><name pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:9">avist</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:18">indexes</name><operator pos:start="27:19" pos:end="27:19">.</operator><name pos:start="27:20" pos:end="27:24">entry</name></name>      <operator pos:start="27:31" pos:end="27:31">=</operator> <name pos:start="27:33" pos:end="27:61"><name pos:start="27:33" pos:end="27:37">avist</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:46">indexes</name><operator pos:start="27:47" pos:end="27:47">.</operator><name pos:start="27:48" pos:end="27:61">ents_allocated</name></name> <operator pos:start="27:63" pos:end="27:63">=</operator> <literal type="number" pos:start="27:65" pos:end="27:65">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:57"><expr pos:start="29:5" pos:end="29:56"><name pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:9">avist</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:18">indexes</name><operator pos:start="29:19" pos:end="29:19">.</operator><name pos:start="29:20" pos:end="29:29">indx_start</name></name> <operator pos:start="29:31" pos:end="29:31">=</operator> <call pos:start="29:33" pos:end="29:56"><name pos:start="29:33" pos:end="29:44">ff_start_tag</name><argument_list pos:start="29:45" pos:end="29:56">(<argument pos:start="29:46" pos:end="29:47"><expr pos:start="29:46" pos:end="29:47"><name pos:start="29:46" pos:end="29:47">pb</name></expr></argument>, <argument pos:start="29:50" pos:end="29:55"><expr pos:start="29:50" pos:end="29:55"><literal type="string" pos:start="29:50" pos:end="29:55">"JUNK"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:21"><expr pos:start="31:5" pos:end="31:20"><call pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:13">avio_wl16</name><argument_list pos:start="31:14" pos:end="31:20">(<argument pos:start="31:15" pos:end="31:16"><expr pos:start="31:15" pos:end="31:16"><name pos:start="31:15" pos:end="31:16">pb</name></expr></argument>, <argument pos:start="31:19" pos:end="31:19"><expr pos:start="31:19" pos:end="31:19"><literal type="number" pos:start="31:19" pos:end="31:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="block" pos:start="31:25" pos:end="31:44">/* wLongsPerEntry */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><call pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:11">avio_w8</name><argument_list pos:start="33:12" pos:end="33:18">(<argument pos:start="33:13" pos:end="33:14"><expr pos:start="33:13" pos:end="33:14"><name pos:start="33:13" pos:end="33:14">pb</name></expr></argument>, <argument pos:start="33:17" pos:end="33:17"><expr pos:start="33:17" pos:end="33:17"><literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="33:25" pos:end="33:62">/* bIndexSubType (0 == frame index) */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:19"><expr pos:start="35:5" pos:end="35:18"><call pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:11">avio_w8</name><argument_list pos:start="35:12" pos:end="35:18">(<argument pos:start="35:13" pos:end="35:14"><expr pos:start="35:13" pos:end="35:14"><name pos:start="35:13" pos:end="35:14">pb</name></expr></argument>, <argument pos:start="35:17" pos:end="35:17"><expr pos:start="35:17" pos:end="35:17"><literal type="number" pos:start="35:17" pos:end="35:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="35:25" pos:end="35:68">/* bIndexType (0 == AVI_INDEX_OF_INDEXES) */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><call pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:13">avio_wl32</name><argument_list pos:start="37:14" pos:end="37:20">(<argument pos:start="37:15" pos:end="37:16"><expr pos:start="37:15" pos:end="37:16"><name pos:start="37:15" pos:end="37:16">pb</name></expr></argument>, <argument pos:start="37:19" pos:end="37:19"><expr pos:start="37:19" pos:end="37:19"><literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="block" pos:start="37:25" pos:end="37:68">/* nEntriesInUse (will fill out later on) */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:76"><expr pos:start="39:5" pos:end="39:75"><call pos:start="39:5" pos:end="39:75"><name pos:start="39:5" pos:end="39:16">ffio_wfourcc</name><argument_list pos:start="39:17" pos:end="39:75">(<argument pos:start="39:18" pos:end="39:19"><expr pos:start="39:18" pos:end="39:19"><name pos:start="39:18" pos:end="39:19">pb</name></expr></argument>, <argument pos:start="39:22" pos:end="39:74"><expr pos:start="39:22" pos:end="39:74"><call pos:start="39:22" pos:end="39:74"><name pos:start="39:22" pos:end="39:38">avi_stream2fourcc</name><argument_list pos:start="39:39" pos:end="39:74">(<argument pos:start="39:40" pos:end="39:42"><expr pos:start="39:40" pos:end="39:42"><name pos:start="39:40" pos:end="39:42">tag</name></expr></argument>, <argument pos:start="39:45" pos:end="39:56"><expr pos:start="39:45" pos:end="39:56"><name pos:start="39:45" pos:end="39:56">stream_index</name></expr></argument>, <argument pos:start="39:59" pos:end="39:73"><expr pos:start="39:59" pos:end="39:73"><name pos:start="39:59" pos:end="39:73"><name pos:start="39:59" pos:end="39:61">enc</name><operator pos:start="39:62" pos:end="39:63">-&gt;</operator><name pos:start="39:64" pos:end="39:73">codec_type</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <comment type="block" pos:start="41:25" pos:end="41:39">/* dwChunkId */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:21"><expr pos:start="43:5" pos:end="43:20"><call pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:13">avio_wl64</name><argument_list pos:start="43:14" pos:end="43:20">(<argument pos:start="43:15" pos:end="43:16"><expr pos:start="43:15" pos:end="43:16"><name pos:start="43:15" pos:end="43:16">pb</name></expr></argument>, <argument pos:start="43:19" pos:end="43:19"><expr pos:start="43:19" pos:end="43:19"><literal type="number" pos:start="43:19" pos:end="43:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="block" pos:start="43:25" pos:end="43:43">/* dwReserved[3] */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:21"><expr pos:start="45:5" pos:end="45:20"><call pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:13">avio_wl32</name><argument_list pos:start="45:14" pos:end="45:20">(<argument pos:start="45:15" pos:end="45:16"><expr pos:start="45:15" pos:end="45:16"><name pos:start="45:15" pos:end="45:16">pb</name></expr></argument>, <argument pos:start="45:19" pos:end="45:19"><expr pos:start="45:19" pos:end="45:19"><literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="block" pos:start="45:25" pos:end="45:43">/* Must be 0.    */</comment>

    <for pos:start="47:5" pos:end="49:25">for <control pos:start="47:9" pos:end="47:51">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">j</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:46"><expr pos:start="47:17" pos:end="47:45"><name pos:start="47:17" pos:end="47:17">j</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:41">AVI_MASTER_INDEX_SIZE</name> <operator pos:start="47:43" pos:end="47:43">*</operator> <literal type="number" pos:start="47:45" pos:end="47:45">2</literal></expr>;</condition> <incr pos:start="47:48" pos:end="47:50"><expr pos:start="47:48" pos:end="47:50"><name pos:start="47:48" pos:end="47:48">j</name><operator pos:start="47:49" pos:end="47:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="49:9" pos:end="49:25"><block_content pos:start="49:9" pos:end="49:25">

        <expr_stmt pos:start="49:9" pos:end="49:25"><expr pos:start="49:9" pos:end="49:24"><call pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:17">avio_wl64</name><argument_list pos:start="49:18" pos:end="49:24">(<argument pos:start="49:19" pos:end="49:20"><expr pos:start="49:19" pos:end="49:20"><name pos:start="49:19" pos:end="49:20">pb</name></expr></argument>, <argument pos:start="49:23" pos:end="49:23"><expr pos:start="49:23" pos:end="49:23"><literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="51:5" pos:end="51:46"><expr pos:start="51:5" pos:end="51:45"><call pos:start="51:5" pos:end="51:45"><name pos:start="51:5" pos:end="51:14">ff_end_tag</name><argument_list pos:start="51:15" pos:end="51:45">(<argument pos:start="51:16" pos:end="51:17"><expr pos:start="51:16" pos:end="51:17"><name pos:start="51:16" pos:end="51:17">pb</name></expr></argument>, <argument pos:start="51:20" pos:end="51:44"><expr pos:start="51:20" pos:end="51:44"><name pos:start="51:20" pos:end="51:44"><name pos:start="51:20" pos:end="51:24">avist</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:33">indexes</name><operator pos:start="51:34" pos:end="51:34">.</operator><name pos:start="51:35" pos:end="51:44">indx_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
