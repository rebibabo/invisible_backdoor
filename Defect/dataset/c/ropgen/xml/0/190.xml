<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/190.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mov_write_tmcd_tag</name><parameter_list pos:start="1:30" pos:end="1:63">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:41">AVIOContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">pb</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:62"><decl pos:start="1:48" pos:end="1:62"><type pos:start="1:48" pos:end="1:62"><name pos:start="1:48" pos:end="1:55">MOVTrack</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:62">track</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:32">

    <decl_stmt pos:start="5:5" pos:end="8:0"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:15">pos</name> <init pos:start="5:17" pos:end="5:31">= <expr pos:start="5:19" pos:end="5:31"><call pos:start="5:19" pos:end="5:31"><name pos:start="5:19" pos:end="5:27">avio_tell</name><argument_list pos:start="5:28" pos:end="5:31">(<argument pos:start="5:29" pos:end="5:30"><expr pos:start="5:29" pos:end="5:30"><name pos:start="5:29" pos:end="5:30">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="7:1" pos:end="7:5">#<cpp:directive pos:start="7:2" pos:end="7:3">if</cpp:directive> <expr pos:start="7:5" pos:end="7:5"><literal type="number" pos:start="7:5" pos:end="7:5">1</literal></expr></cpp:if>

    <decl_stmt pos:start="9:5" pos:end="9:108"><decl pos:start="9:5" pos:end="9:107"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">frame_duration</name> <init pos:start="9:24" pos:end="9:107">= <expr pos:start="9:26" pos:end="9:107"><call pos:start="9:26" pos:end="9:107"><name pos:start="9:26" pos:end="9:35">av_rescale</name><argument_list pos:start="9:36" pos:end="9:107">(<argument pos:start="9:37" pos:end="9:52"><expr pos:start="9:37" pos:end="9:52"><name pos:start="9:37" pos:end="9:52"><name pos:start="9:37" pos:end="9:41">track</name><operator pos:start="9:42" pos:end="9:43">-&gt;</operator><name pos:start="9:44" pos:end="9:52">timescale</name></name></expr></argument>, <argument pos:start="9:55" pos:end="9:79"><expr pos:start="9:55" pos:end="9:79"><name pos:start="9:55" pos:end="9:79"><name pos:start="9:55" pos:end="9:59">track</name><operator pos:start="9:60" pos:end="9:61">-&gt;</operator><name pos:start="9:62" pos:end="9:64">enc</name><operator pos:start="9:65" pos:end="9:66">-&gt;</operator><name pos:start="9:67" pos:end="9:75">time_base</name><operator pos:start="9:76" pos:end="9:76">.</operator><name pos:start="9:77" pos:end="9:79">num</name></name></expr></argument>, <argument pos:start="9:82" pos:end="9:106"><expr pos:start="9:82" pos:end="9:106"><name pos:start="9:82" pos:end="9:106"><name pos:start="9:82" pos:end="9:86">track</name><operator pos:start="9:87" pos:end="9:88">-&gt;</operator><name pos:start="9:89" pos:end="9:91">enc</name><operator pos:start="9:92" pos:end="9:93">-&gt;</operator><name pos:start="9:94" pos:end="9:102">time_base</name><operator pos:start="9:103" pos:end="9:103">.</operator><name pos:start="9:104" pos:end="9:106">den</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:86"><decl pos:start="11:5" pos:end="11:85"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">nb_frames</name> <init pos:start="11:19" pos:end="11:85">= <expr pos:start="11:21" pos:end="11:85"><call pos:start="11:21" pos:end="11:85"><name pos:start="11:21" pos:end="11:31">ROUNDED_DIV</name><argument_list pos:start="11:32" pos:end="11:85">(<argument pos:start="11:33" pos:end="11:57"><expr pos:start="11:33" pos:end="11:57"><name pos:start="11:33" pos:end="11:57"><name pos:start="11:33" pos:end="11:37">track</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:42">enc</name><operator pos:start="11:43" pos:end="11:44">-&gt;</operator><name pos:start="11:45" pos:end="11:53">time_base</name><operator pos:start="11:54" pos:end="11:54">.</operator><name pos:start="11:55" pos:end="11:57">den</name></name></expr></argument>, <argument pos:start="11:60" pos:end="11:84"><expr pos:start="11:60" pos:end="11:84"><name pos:start="11:60" pos:end="11:84"><name pos:start="11:60" pos:end="11:64">track</name><operator pos:start="11:65" pos:end="11:66">-&gt;</operator><name pos:start="11:67" pos:end="11:69">enc</name><operator pos:start="11:70" pos:end="11:71">-&gt;</operator><name pos:start="11:72" pos:end="11:80">time_base</name><operator pos:start="11:81" pos:end="11:81">.</operator><name pos:start="11:82" pos:end="11:84">num</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:21">AVDictionaryEntry</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:24">t</name> <init pos:start="13:26" pos:end="13:31">= <expr pos:start="13:28" pos:end="13:31"><name pos:start="13:28" pos:end="13:31">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:24">(<expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:17">nb_frames</name> <operator pos:start="17:19" pos:end="17:19">&gt;</operator> <literal type="number" pos:start="17:21" pos:end="17:23">255</literal></expr>)</condition> <block pos:start="17:26" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:31">

        <expr_stmt pos:start="19:9" pos:end="19:71"><expr pos:start="19:9" pos:end="19:70"><call pos:start="19:9" pos:end="19:70"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:70">(<argument pos:start="19:16" pos:end="19:19"><expr pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:19">NULL</name></expr></argument>, <argument pos:start="19:22" pos:end="19:33"><expr pos:start="19:22" pos:end="19:33"><name pos:start="19:22" pos:end="19:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:36" pos:end="19:58"><expr pos:start="19:36" pos:end="19:58"><literal type="string" pos:start="19:36" pos:end="19:58">"fps %d is too large\n"</literal></expr></argument>, <argument pos:start="19:61" pos:end="19:69"><expr pos:start="19:61" pos:end="19:69"><name pos:start="19:61" pos:end="19:69">nb_frames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><call pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:13">avio_wb32</name><argument_list pos:start="27:14" pos:end="27:20">(<argument pos:start="27:15" pos:end="27:16"><expr pos:start="27:15" pos:end="27:16"><name pos:start="27:15" pos:end="27:16">pb</name></expr></argument>, <argument pos:start="27:19" pos:end="27:19"><expr pos:start="27:19" pos:end="27:19"><literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:23" pos:end="27:32">/* size */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><call pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:16">ffio_wfourcc</name><argument_list pos:start="29:17" pos:end="29:28">(<argument pos:start="29:18" pos:end="29:19"><expr pos:start="29:18" pos:end="29:19"><name pos:start="29:18" pos:end="29:19">pb</name></expr></argument>, <argument pos:start="29:22" pos:end="29:27"><expr pos:start="29:22" pos:end="29:27"><literal type="string" pos:start="29:22" pos:end="29:27">"tmcd"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>               <comment type="block" pos:start="29:45" pos:end="29:61">/* Data format */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:21"><expr pos:start="31:5" pos:end="31:20"><call pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:13">avio_wb32</name><argument_list pos:start="31:14" pos:end="31:20">(<argument pos:start="31:15" pos:end="31:16"><expr pos:start="31:15" pos:end="31:16"><name pos:start="31:15" pos:end="31:16">pb</name></expr></argument>, <argument pos:start="31:19" pos:end="31:19"><expr pos:start="31:19" pos:end="31:19"><literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                       <comment type="block" pos:start="31:45" pos:end="31:58">/* Reserved */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><call pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:13">avio_wb32</name><argument_list pos:start="33:14" pos:end="33:20">(<argument pos:start="33:15" pos:end="33:16"><expr pos:start="33:15" pos:end="33:16"><name pos:start="33:15" pos:end="33:16">pb</name></expr></argument>, <argument pos:start="33:19" pos:end="33:19"><expr pos:start="33:19" pos:end="33:19"><literal type="number" pos:start="33:19" pos:end="33:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                       <comment type="block" pos:start="33:45" pos:end="33:70">/* Data reference index */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:21"><expr pos:start="35:5" pos:end="35:20"><call pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:13">avio_wb32</name><argument_list pos:start="35:14" pos:end="35:20">(<argument pos:start="35:15" pos:end="35:16"><expr pos:start="35:15" pos:end="35:16"><name pos:start="35:15" pos:end="35:16">pb</name></expr></argument>, <argument pos:start="35:19" pos:end="35:19"><expr pos:start="35:19" pos:end="35:19"><literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                       <comment type="block" pos:start="35:45" pos:end="35:55">/* Flags */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><call pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:13">avio_wb32</name><argument_list pos:start="37:14" pos:end="37:40">(<argument pos:start="37:15" pos:end="37:16"><expr pos:start="37:15" pos:end="37:16"><name pos:start="37:15" pos:end="37:16">pb</name></expr></argument>, <argument pos:start="37:19" pos:end="37:39"><expr pos:start="37:19" pos:end="37:39"><name pos:start="37:19" pos:end="37:39"><name pos:start="37:19" pos:end="37:23">track</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:39">timecode_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="block" pos:start="37:45" pos:end="37:66">/* Flags (timecode) */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:36"><expr pos:start="39:5" pos:end="39:35"><call pos:start="39:5" pos:end="39:35"><name pos:start="39:5" pos:end="39:13">avio_wb32</name><argument_list pos:start="39:14" pos:end="39:35">(<argument pos:start="39:15" pos:end="39:16"><expr pos:start="39:15" pos:end="39:16"><name pos:start="39:15" pos:end="39:16">pb</name></expr></argument>, <argument pos:start="39:19" pos:end="39:34"><expr pos:start="39:19" pos:end="39:34"><name pos:start="39:19" pos:end="39:34"><name pos:start="39:19" pos:end="39:23">track</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:34">timescale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>        <comment type="block" pos:start="39:45" pos:end="39:59">/* Timescale */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><call pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:13">avio_wb32</name><argument_list pos:start="41:14" pos:end="41:33">(<argument pos:start="41:15" pos:end="41:16"><expr pos:start="41:15" pos:end="41:16"><name pos:start="41:15" pos:end="41:16">pb</name></expr></argument>, <argument pos:start="41:19" pos:end="41:32"><expr pos:start="41:19" pos:end="41:32"><name pos:start="41:19" pos:end="41:32">frame_duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>          <comment type="block" pos:start="41:45" pos:end="41:64">/* Frame duration */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:27"><expr pos:start="43:5" pos:end="43:26"><call pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:11">avio_w8</name><argument_list pos:start="43:12" pos:end="43:26">(<argument pos:start="43:13" pos:end="43:14"><expr pos:start="43:13" pos:end="43:14"><name pos:start="43:13" pos:end="43:14">pb</name></expr></argument>, <argument pos:start="43:17" pos:end="43:25"><expr pos:start="43:17" pos:end="43:25"><name pos:start="43:17" pos:end="43:25">nb_frames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                 <comment type="block" pos:start="43:45" pos:end="43:66">/* Number of frames */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:19"><expr pos:start="45:5" pos:end="45:18"><call pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:11">avio_w8</name><argument_list pos:start="45:12" pos:end="45:18">(<argument pos:start="45:13" pos:end="45:14"><expr pos:start="45:13" pos:end="45:14"><name pos:start="45:13" pos:end="45:14">pb</name></expr></argument>, <argument pos:start="45:17" pos:end="45:17"><expr pos:start="45:17" pos:end="45:17"><literal type="number" pos:start="45:17" pos:end="45:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="45:45" pos:end="45:58">/* Reserved */</comment>



    <if_stmt pos:start="49:5" pos:end="51:67"><if pos:start="49:5" pos:end="51:67">if <condition pos:start="49:8" pos:end="49:18">(<expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:13">track</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:17">st</name></name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:67"><block_content pos:start="51:9" pos:end="51:67">

        <expr_stmt pos:start="51:9" pos:end="51:67"><expr pos:start="51:9" pos:end="51:66"><name pos:start="51:9" pos:end="51:9">t</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <call pos:start="51:13" pos:end="51:66"><name pos:start="51:13" pos:end="51:23">av_dict_get</name><argument_list pos:start="51:24" pos:end="51:66">(<argument pos:start="51:25" pos:end="51:43"><expr pos:start="51:25" pos:end="51:43"><name pos:start="51:25" pos:end="51:43"><name pos:start="51:25" pos:end="51:29">track</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:33">st</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:43">metadata</name></name></expr></argument>, <argument pos:start="51:46" pos:end="51:56"><expr pos:start="51:46" pos:end="51:56"><literal type="string" pos:start="51:46" pos:end="51:56">"reel_name"</literal></expr></argument>, <argument pos:start="51:59" pos:end="51:62"><expr pos:start="51:59" pos:end="51:62"><name pos:start="51:59" pos:end="51:62">NULL</name></expr></argument>, <argument pos:start="51:65" pos:end="51:65"><expr pos:start="51:65" pos:end="51:65"><literal type="number" pos:start="51:65" pos:end="51:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="64:0"><if pos:start="55:5" pos:end="57:60">if <condition pos:start="55:8" pos:end="55:31">(<expr pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:9">t</name> <operator pos:start="55:11" pos:end="55:12">&amp;&amp;</operator> <call pos:start="55:14" pos:end="55:30"><name pos:start="55:14" pos:end="55:20">utf8len</name><argument_list pos:start="55:21" pos:end="55:30">(<argument pos:start="55:22" pos:end="55:29"><expr pos:start="55:22" pos:end="55:29"><name pos:start="55:22" pos:end="55:29"><name pos:start="55:22" pos:end="55:22">t</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:29">value</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:60"><block_content pos:start="57:9" pos:end="57:60">

        <expr_stmt pos:start="57:9" pos:end="57:60"><expr pos:start="57:9" pos:end="57:59"><call pos:start="57:9" pos:end="57:59"><name pos:start="57:9" pos:end="57:38">mov_write_source_reference_tag</name><argument_list pos:start="57:39" pos:end="57:59">(<argument pos:start="57:40" pos:end="57:41"><expr pos:start="57:40" pos:end="57:41"><name pos:start="57:40" pos:end="57:41">pb</name></expr></argument>, <argument pos:start="57:44" pos:end="57:48"><expr pos:start="57:44" pos:end="57:48"><name pos:start="57:44" pos:end="57:48">track</name></expr></argument>, <argument pos:start="57:51" pos:end="57:58"><expr pos:start="57:51" pos:end="57:58"><name pos:start="57:51" pos:end="57:58"><name pos:start="57:51" pos:end="57:51">t</name><operator pos:start="57:52" pos:end="57:53">-&gt;</operator><name pos:start="57:54" pos:end="57:58">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="59:5" pos:end="64:0">else<block type="pseudo" pos:start="61:9" pos:end="64:0"><block_content pos:start="61:9" pos:end="64:0">

        <expr_stmt pos:start="61:9" pos:end="64:0"><expr pos:start="61:9" pos:end="61:24"><call pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:17">avio_wb16</name><argument_list pos:start="61:18" pos:end="61:24">(<argument pos:start="61:19" pos:end="61:20"><expr pos:start="61:19" pos:end="61:20"><name pos:start="61:19" pos:end="61:20">pb</name></expr></argument>, <argument pos:start="61:23" pos:end="61:23"><expr pos:start="61:23" pos:end="61:23"><literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="61:27" pos:end="61:41">/* zero size */</comment>

<cpp:else pos:start="63:1" pos:end="63:5">#<cpp:directive pos:start="63:2" pos:end="63:5">else</cpp:directive></cpp:else>



    <expr_stmt pos:start="67:5" pos:end="67:21"><expr pos:start="67:5" pos:end="67:20"><call pos:start="67:5" pos:end="67:20"><name pos:start="67:5" pos:end="67:13">avio_wb32</name><argument_list pos:start="67:14" pos:end="67:20">(<argument pos:start="67:15" pos:end="67:16"><expr pos:start="67:15" pos:end="67:16"><name pos:start="67:15" pos:end="67:16">pb</name></expr></argument>, <argument pos:start="67:19" pos:end="67:19"><expr pos:start="67:19" pos:end="67:19"><literal type="number" pos:start="67:19" pos:end="67:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="67:23" pos:end="67:32">/* size */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:29"><expr pos:start="69:5" pos:end="69:28"><call pos:start="69:5" pos:end="69:28"><name pos:start="69:5" pos:end="69:16">ffio_wfourcc</name><argument_list pos:start="69:17" pos:end="69:28">(<argument pos:start="69:18" pos:end="69:19"><expr pos:start="69:18" pos:end="69:19"><name pos:start="69:18" pos:end="69:19">pb</name></expr></argument>, <argument pos:start="69:22" pos:end="69:27"><expr pos:start="69:22" pos:end="69:27"><literal type="string" pos:start="69:22" pos:end="69:27">"tmcd"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>               <comment type="block" pos:start="69:45" pos:end="69:61">/* Data format */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:21"><expr pos:start="71:5" pos:end="71:20"><call pos:start="71:5" pos:end="71:20"><name pos:start="71:5" pos:end="71:13">avio_wb32</name><argument_list pos:start="71:14" pos:end="71:20">(<argument pos:start="71:15" pos:end="71:16"><expr pos:start="71:15" pos:end="71:16"><name pos:start="71:15" pos:end="71:16">pb</name></expr></argument>, <argument pos:start="71:19" pos:end="71:19"><expr pos:start="71:19" pos:end="71:19"><literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                       <comment type="block" pos:start="71:45" pos:end="71:58">/* Reserved */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:21"><expr pos:start="73:5" pos:end="73:20"><call pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:13">avio_wb32</name><argument_list pos:start="73:14" pos:end="73:20">(<argument pos:start="73:15" pos:end="73:16"><expr pos:start="73:15" pos:end="73:16"><name pos:start="73:15" pos:end="73:16">pb</name></expr></argument>, <argument pos:start="73:19" pos:end="73:19"><expr pos:start="73:19" pos:end="73:19"><literal type="number" pos:start="73:19" pos:end="73:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                       <comment type="block" pos:start="73:45" pos:end="73:70">/* Data reference index */</comment>

    <if_stmt pos:start="75:5" pos:end="80:0"><if pos:start="75:5" pos:end="80:0">if <condition pos:start="75:8" pos:end="75:35">(<expr pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:13">track</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:18">enc</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:34">extradata_size</name></name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="80:0"><block_content pos:start="77:9" pos:end="80:0">

        <expr_stmt pos:start="77:9" pos:end="80:0"><expr pos:start="77:9" pos:end="77:73"><call pos:start="77:9" pos:end="77:73"><name pos:start="77:9" pos:end="77:18">avio_write</name><argument_list pos:start="77:19" pos:end="77:73">(<argument pos:start="77:20" pos:end="77:21"><expr pos:start="77:20" pos:end="77:21"><name pos:start="77:20" pos:end="77:21">pb</name></expr></argument>, <argument pos:start="77:24" pos:end="77:44"><expr pos:start="77:24" pos:end="77:44"><name pos:start="77:24" pos:end="77:44"><name pos:start="77:24" pos:end="77:28">track</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:33">enc</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:44">extradata</name></name></expr></argument>, <argument pos:start="77:47" pos:end="77:72"><expr pos:start="77:47" pos:end="77:72"><name pos:start="77:47" pos:end="77:72"><name pos:start="77:47" pos:end="77:51">track</name><operator pos:start="77:52" pos:end="77:53">-&gt;</operator><name pos:start="77:54" pos:end="77:56">enc</name><operator pos:start="77:57" pos:end="77:58">-&gt;</operator><name pos:start="77:59" pos:end="77:72">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="79:1" pos:end="79:6">#<cpp:directive pos:start="79:2" pos:end="79:6">endif</cpp:directive></cpp:endif>

    <return pos:start="81:5" pos:end="81:32">return <expr pos:start="81:12" pos:end="81:31"><call pos:start="81:12" pos:end="81:31"><name pos:start="81:12" pos:end="81:22">update_size</name><argument_list pos:start="81:23" pos:end="81:31">(<argument pos:start="81:24" pos:end="81:25"><expr pos:start="81:24" pos:end="81:25"><name pos:start="81:24" pos:end="81:25">pb</name></expr></argument>, <argument pos:start="81:28" pos:end="81:30"><expr pos:start="81:28" pos:end="81:30"><name pos:start="81:28" pos:end="81:30">pos</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
