<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22762.c" pos:tabs="8"><function pos:start="1:1" pos:end="173:1"><type pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:23">attribute_align_arg</name></type> <name pos:start="1:25" pos:end="1:45">avcodec_decode_video2</name><parameter_list pos:start="1:46" pos:end="5:68">(<parameter pos:start="1:47" pos:end="1:67"><decl pos:start="1:47" pos:end="1:67"><type pos:start="1:47" pos:end="1:67"><name pos:start="1:47" pos:end="1:60">AVCodecContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avctx</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:85"><decl pos:start="1:70" pos:end="1:85"><type pos:start="1:70" pos:end="1:85"><name pos:start="1:70" pos:end="1:76">AVFrame</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:85">picture</name></decl></parameter>,

                                              <parameter pos:start="3:47" pos:end="3:66"><decl pos:start="3:47" pos:end="3:66"><type pos:start="3:47" pos:end="3:66"><name pos:start="3:47" pos:end="3:49">int</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:66">got_picture_ptr</name></decl></parameter>,

                                              <parameter pos:start="5:47" pos:end="5:67"><decl pos:start="5:47" pos:end="5:67"><type pos:start="5:47" pos:end="5:67"><specifier pos:start="5:47" pos:end="5:51">const</specifier> <name pos:start="5:53" pos:end="5:60">AVPacket</name> <modifier pos:start="5:62" pos:end="5:62">*</modifier></type><name pos:start="5:63" pos:end="5:67">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="173:1">{<block_content pos:start="9:5" pos:end="171:15">

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">AVCodecInternal</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:25">avci</name> <init pos:start="9:27" pos:end="9:43">= <expr pos:start="9:29" pos:end="9:43"><name pos:start="9:29" pos:end="9:43"><name pos:start="9:29" pos:end="9:33">avctx</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:43">internal</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <comment type="line" pos:start="13:5" pos:end="13:44">// copy to ensure we do not change avpkt</comment>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">AVPacket</name></type> <name pos:start="15:14" pos:end="15:16">tmp</name> <init pos:start="15:18" pos:end="15:25">= <expr pos:start="15:20" pos:end="15:25"><operator pos:start="15:20" pos:end="15:20">*</operator><name pos:start="15:21" pos:end="15:25">avpkt</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:22">(<expr pos:start="19:9" pos:end="19:21"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:21"><name pos:start="19:10" pos:end="19:14">avctx</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:21">codec</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:49">(<expr pos:start="23:9" pos:end="23:48"><name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:13">avctx</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:20">codec</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:26">type</name></name> <operator pos:start="23:28" pos:end="23:29">!=</operator> <name pos:start="23:31" pos:end="23:48">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="23:51" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:31">

        <expr_stmt pos:start="25:9" pos:end="25:70"><expr pos:start="25:9" pos:end="25:69"><call pos:start="25:9" pos:end="25:69"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:69">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:37" pos:end="25:68"><expr pos:start="25:37" pos:end="25:68"><literal type="string" pos:start="25:37" pos:end="25:68">"Invalid media type for video\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:25"><expr pos:start="33:5" pos:end="33:24"><operator pos:start="33:5" pos:end="33:5">*</operator><name pos:start="33:6" pos:end="33:20">got_picture_ptr</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <literal type="number" pos:start="33:24" pos:end="33:24">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:31"><if pos:start="35:5" pos:end="37:31">if <condition pos:start="35:8" pos:end="35:126">(<expr pos:start="35:9" pos:end="35:125"><operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:27"><name pos:start="35:10" pos:end="35:14">avctx</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:27">coded_width</name></name> <operator pos:start="35:29" pos:end="35:30">||</operator> <name pos:start="35:32" pos:end="35:50"><name pos:start="35:32" pos:end="35:36">avctx</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:50">coded_height</name></name><operator pos:start="35:51" pos:end="35:51">)</operator> <operator pos:start="35:53" pos:end="35:54">&amp;&amp;</operator> <call pos:start="35:56" pos:end="35:125"><name pos:start="35:56" pos:end="35:74">av_image_check_size</name><argument_list pos:start="35:75" pos:end="35:125">(<argument pos:start="35:76" pos:end="35:93"><expr pos:start="35:76" pos:end="35:93"><name pos:start="35:76" pos:end="35:93"><name pos:start="35:76" pos:end="35:80">avctx</name><operator pos:start="35:81" pos:end="35:82">-&gt;</operator><name pos:start="35:83" pos:end="35:93">coded_width</name></name></expr></argument>, <argument pos:start="35:96" pos:end="35:114"><expr pos:start="35:96" pos:end="35:114"><name pos:start="35:96" pos:end="35:114"><name pos:start="35:96" pos:end="35:100">avctx</name><operator pos:start="35:101" pos:end="35:102">-&gt;</operator><name pos:start="35:103" pos:end="35:114">coded_height</name></name></expr></argument>, <argument pos:start="35:117" pos:end="35:117"><expr pos:start="35:117" pos:end="35:117"><literal type="number" pos:start="35:117" pos:end="35:117">0</literal></expr></argument>, <argument pos:start="35:120" pos:end="35:124"><expr pos:start="35:120" pos:end="35:124"><name pos:start="35:120" pos:end="35:124">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:31"><block_content pos:start="37:9" pos:end="37:31">

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:40"><expr pos:start="41:5" pos:end="41:39"><call pos:start="41:5" pos:end="41:39"><name pos:start="41:5" pos:end="41:30">avcodec_get_frame_defaults</name><argument_list pos:start="41:31" pos:end="41:39">(<argument pos:start="41:32" pos:end="41:38"><expr pos:start="41:32" pos:end="41:38"><name pos:start="41:32" pos:end="41:38">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="159:16"><if pos:start="45:5" pos:end="157:5">if <condition pos:start="45:8" pos:end="45:119">(<expr pos:start="45:9" pos:end="45:118"><operator pos:start="45:9" pos:end="45:9">(</operator><name pos:start="45:10" pos:end="45:35"><name pos:start="45:10" pos:end="45:14">avctx</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:21">codec</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:35">capabilities</name></name> <operator pos:start="45:37" pos:end="45:37">&amp;</operator> <name pos:start="45:39" pos:end="45:53">CODEC_CAP_DELAY</name><operator pos:start="45:54" pos:end="45:54">)</operator> <operator pos:start="45:56" pos:end="45:57">||</operator> <name pos:start="45:59" pos:end="45:69"><name pos:start="45:59" pos:end="45:63">avpkt</name><operator pos:start="45:64" pos:end="45:65">-&gt;</operator><name pos:start="45:66" pos:end="45:69">size</name></name> <operator pos:start="45:71" pos:end="45:72">||</operator> <operator pos:start="45:74" pos:end="45:74">(</operator><name pos:start="45:75" pos:end="45:99"><name pos:start="45:75" pos:end="45:79">avctx</name><operator pos:start="45:80" pos:end="45:81">-&gt;</operator><name pos:start="45:82" pos:end="45:99">active_thread_type</name></name> <operator pos:start="45:101" pos:end="45:101">&amp;</operator> <name pos:start="45:103" pos:end="45:117">FF_THREAD_FRAME</name><operator pos:start="45:118" pos:end="45:118">)</operator></expr>)</condition> <block pos:start="45:121" pos:end="157:5">{<block_content pos:start="47:9" pos:end="155:36">

        <decl_stmt pos:start="47:9" pos:end="47:56"><decl pos:start="47:9" pos:end="47:55"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:21">did_split</name> <init pos:start="47:23" pos:end="47:55">= <expr pos:start="47:25" pos:end="47:55"><call pos:start="47:25" pos:end="47:55"><name pos:start="47:25" pos:end="47:49">av_packet_split_side_data</name><argument_list pos:start="47:50" pos:end="47:55">(<argument pos:start="47:51" pos:end="47:54"><expr pos:start="47:51" pos:end="47:54"><operator pos:start="47:51" pos:end="47:51">&amp;</operator><name pos:start="47:52" pos:end="47:54">tmp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:45"><name pos:start="49:15" pos:end="49:32">apply_param_change</name><argument_list pos:start="49:33" pos:end="49:45">(<argument pos:start="49:34" pos:end="49:38"><expr pos:start="49:34" pos:end="49:38"><name pos:start="49:34" pos:end="49:38">avctx</name></expr></argument>, <argument pos:start="49:41" pos:end="49:44"><expr pos:start="49:41" pos:end="49:44"><operator pos:start="49:41" pos:end="49:41">&amp;</operator><name pos:start="49:42" pos:end="49:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="59:9"><if pos:start="51:9" pos:end="59:9">if <condition pos:start="51:12" pos:end="51:20">(<expr pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:15">ret</name> <operator pos:start="51:17" pos:end="51:17">&lt;</operator> <literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>)</condition> <block pos:start="51:22" pos:end="59:9">{<block_content pos:start="53:13" pos:end="57:26">

            <expr_stmt pos:start="53:13" pos:end="53:79"><expr pos:start="53:13" pos:end="53:78"><call pos:start="53:13" pos:end="53:78"><name pos:start="53:13" pos:end="53:18">av_log</name><argument_list pos:start="53:19" pos:end="53:78">(<argument pos:start="53:20" pos:end="53:24"><expr pos:start="53:20" pos:end="53:24"><name pos:start="53:20" pos:end="53:24">avctx</name></expr></argument>, <argument pos:start="53:27" pos:end="53:38"><expr pos:start="53:27" pos:end="53:38"><name pos:start="53:27" pos:end="53:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:41" pos:end="53:77"><expr pos:start="53:41" pos:end="53:77"><literal type="string" pos:start="53:41" pos:end="53:77">"Error applying parameter changes.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="57:26"><if pos:start="55:13" pos:end="57:26">if <condition pos:start="55:16" pos:end="55:55">(<expr pos:start="55:17" pos:end="55:54"><name pos:start="55:17" pos:end="55:38"><name pos:start="55:17" pos:end="55:21">avctx</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:38">err_recognition</name></name> <operator pos:start="55:40" pos:end="55:40">&amp;</operator> <name pos:start="55:42" pos:end="55:54">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:26"><block_content pos:start="57:17" pos:end="57:26">

                <goto pos:start="57:17" pos:end="57:26">goto <name pos:start="57:22" pos:end="57:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:36"><expr pos:start="63:9" pos:end="63:35"><name pos:start="63:9" pos:end="63:28"><name pos:start="63:9" pos:end="63:13">avctx</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:23">internal</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:28">pkt</name></name> <operator pos:start="63:30" pos:end="63:30">=</operator> <operator pos:start="63:32" pos:end="63:32">&amp;</operator><name pos:start="63:33" pos:end="63:35">tmp</name></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="103:9"><if pos:start="65:9" pos:end="69:47">if <condition pos:start="65:12" pos:end="65:72">(<expr pos:start="65:13" pos:end="65:71"><name pos:start="65:13" pos:end="65:24">HAVE_THREADS</name> <operator pos:start="65:26" pos:end="65:27">&amp;&amp;</operator> <name pos:start="65:29" pos:end="65:53"><name pos:start="65:29" pos:end="65:33">avctx</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:53">active_thread_type</name></name> <operator pos:start="65:55" pos:end="65:55">&amp;</operator> <name pos:start="65:57" pos:end="65:71">FF_THREAD_FRAME</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="69:47"><block_content pos:start="67:13" pos:end="69:47">

            <expr_stmt pos:start="67:13" pos:end="69:47"><expr pos:start="67:13" pos:end="69:46"><name pos:start="67:13" pos:end="67:15">ret</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <call pos:start="67:19" pos:end="69:46"><name pos:start="67:19" pos:end="67:40">ff_thread_decode_frame</name><argument_list pos:start="67:41" pos:end="69:46">(<argument pos:start="67:42" pos:end="67:46"><expr pos:start="67:42" pos:end="67:46"><name pos:start="67:42" pos:end="67:46">avctx</name></expr></argument>, <argument pos:start="67:49" pos:end="67:55"><expr pos:start="67:49" pos:end="67:55"><name pos:start="67:49" pos:end="67:55">picture</name></expr></argument>, <argument pos:start="67:58" pos:end="67:72"><expr pos:start="67:58" pos:end="67:72"><name pos:start="67:58" pos:end="67:72">got_picture_ptr</name></expr></argument>,

                                         <argument pos:start="69:42" pos:end="69:45"><expr pos:start="69:42" pos:end="69:45"><operator pos:start="69:42" pos:end="69:42">&amp;</operator><name pos:start="69:43" pos:end="69:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="71:9" pos:end="103:9">else <block pos:start="71:14" pos:end="103:9">{<block_content pos:start="73:13" pos:end="101:13">

            <expr_stmt pos:start="73:13" pos:end="75:45"><expr pos:start="73:13" pos:end="75:44"><name pos:start="73:13" pos:end="73:15">ret</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="75:44"><name pos:start="73:19" pos:end="73:38"><name pos:start="73:19" pos:end="73:23">avctx</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:30">codec</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:38">decode</name></name><argument_list pos:start="73:39" pos:end="75:44">(<argument pos:start="73:40" pos:end="73:44"><expr pos:start="73:40" pos:end="73:44"><name pos:start="73:40" pos:end="73:44">avctx</name></expr></argument>, <argument pos:start="73:47" pos:end="73:53"><expr pos:start="73:47" pos:end="73:53"><name pos:start="73:47" pos:end="73:53">picture</name></expr></argument>, <argument pos:start="73:56" pos:end="73:70"><expr pos:start="73:56" pos:end="73:70"><name pos:start="73:56" pos:end="73:70">got_picture_ptr</name></expr></argument>,

                                       <argument pos:start="75:40" pos:end="75:43"><expr pos:start="75:40" pos:end="75:43"><operator pos:start="75:40" pos:end="75:40">&amp;</operator><name pos:start="75:41" pos:end="75:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:42"><expr pos:start="77:13" pos:end="77:41"><name pos:start="77:13" pos:end="77:28"><name pos:start="77:13" pos:end="77:19">picture</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:28">pkt_dts</name></name> <operator pos:start="77:30" pos:end="77:30">=</operator> <name pos:start="77:32" pos:end="77:41"><name pos:start="77:32" pos:end="77:36">avpkt</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:41">dts</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="81:13" pos:end="85:13"><if pos:start="81:13" pos:end="85:13">if<condition pos:start="81:15" pos:end="81:36">(<expr pos:start="81:16" pos:end="81:35"><operator pos:start="81:16" pos:end="81:16">!</operator><name pos:start="81:17" pos:end="81:35"><name pos:start="81:17" pos:end="81:21">avctx</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:35">has_b_frames</name></name></expr>)</condition><block pos:start="81:37" pos:end="85:13">{<block_content pos:start="83:17" pos:end="83:58">

                <expr_stmt pos:start="83:17" pos:end="83:58"><expr pos:start="83:17" pos:end="83:57"><call pos:start="83:17" pos:end="83:57"><name pos:start="83:17" pos:end="83:36">av_frame_set_pkt_pos</name><argument_list pos:start="83:37" pos:end="83:57">(<argument pos:start="83:38" pos:end="83:44"><expr pos:start="83:38" pos:end="83:44"><name pos:start="83:38" pos:end="83:44">picture</name></expr></argument>, <argument pos:start="83:47" pos:end="83:56"><expr pos:start="83:47" pos:end="83:56"><name pos:start="83:47" pos:end="83:56"><name pos:start="83:47" pos:end="83:51">avpkt</name><operator pos:start="83:52" pos:end="83:53">-&gt;</operator><name pos:start="83:54" pos:end="83:56">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="line" pos:start="87:13" pos:end="87:66">//FIXME these should be under if(!avctx-&gt;has_b_frames)</comment>

            <comment type="block" pos:start="89:13" pos:end="89:64">/* get_buffer is supposed to set frame parameters */</comment>

            <if_stmt pos:start="91:13" pos:end="101:13"><if pos:start="91:13" pos:end="101:13">if <condition pos:start="91:16" pos:end="91:62">(<expr pos:start="91:17" pos:end="91:61"><operator pos:start="91:17" pos:end="91:17">!</operator><operator pos:start="91:18" pos:end="91:18">(</operator><name pos:start="91:19" pos:end="91:44"><name pos:start="91:19" pos:end="91:23">avctx</name><operator pos:start="91:24" pos:end="91:25">-&gt;</operator><name pos:start="91:26" pos:end="91:30">codec</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:44">capabilities</name></name> <operator pos:start="91:46" pos:end="91:46">&amp;</operator> <name pos:start="91:48" pos:end="91:60">CODEC_CAP_DR1</name><operator pos:start="91:61" pos:end="91:61">)</operator></expr>)</condition> <block pos:start="91:64" pos:end="101:13">{<block_content pos:start="93:17" pos:end="99:104">

                <if_stmt pos:start="93:17" pos:end="93:116"><if pos:start="93:17" pos:end="93:116">if <condition pos:start="93:20" pos:end="93:54">(<expr pos:start="93:21" pos:end="93:53"><operator pos:start="93:21" pos:end="93:21">!</operator><name pos:start="93:22" pos:end="93:53"><name pos:start="93:22" pos:end="93:28">picture</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:49">sample_aspect_ratio</name><operator pos:start="93:50" pos:end="93:50">.</operator><name pos:start="93:51" pos:end="93:53">num</name></name></expr>)</condition><block type="pseudo" pos:start="93:59" pos:end="93:116"><block_content pos:start="93:59" pos:end="93:116">    <expr_stmt pos:start="93:59" pos:end="93:116"><expr pos:start="93:59" pos:end="93:115"><name pos:start="93:59" pos:end="93:86"><name pos:start="93:59" pos:end="93:65">picture</name><operator pos:start="93:66" pos:end="93:67">-&gt;</operator><name pos:start="93:68" pos:end="93:86">sample_aspect_ratio</name></name> <operator pos:start="93:88" pos:end="93:88">=</operator> <name pos:start="93:90" pos:end="93:115"><name pos:start="93:90" pos:end="93:94">avctx</name><operator pos:start="93:95" pos:end="93:96">-&gt;</operator><name pos:start="93:97" pos:end="93:115">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="95:17" pos:end="95:102"><if pos:start="95:17" pos:end="95:102">if <condition pos:start="95:20" pos:end="95:36">(<expr pos:start="95:21" pos:end="95:35"><operator pos:start="95:21" pos:end="95:21">!</operator><name pos:start="95:22" pos:end="95:35"><name pos:start="95:22" pos:end="95:28">picture</name><operator pos:start="95:29" pos:end="95:30">-&gt;</operator><name pos:start="95:31" pos:end="95:35">width</name></name></expr>)</condition><block type="pseudo" pos:start="95:59" pos:end="95:102"><block_content pos:start="95:59" pos:end="95:102">                      <expr_stmt pos:start="95:59" pos:end="95:102"><expr pos:start="95:59" pos:end="95:101"><name pos:start="95:59" pos:end="95:72"><name pos:start="95:59" pos:end="95:65">picture</name><operator pos:start="95:66" pos:end="95:67">-&gt;</operator><name pos:start="95:68" pos:end="95:72">width</name></name>               <operator pos:start="95:88" pos:end="95:88">=</operator> <name pos:start="95:90" pos:end="95:101"><name pos:start="95:90" pos:end="95:94">avctx</name><operator pos:start="95:95" pos:end="95:96">-&gt;</operator><name pos:start="95:97" pos:end="95:101">width</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="97:17" pos:end="97:103"><if pos:start="97:17" pos:end="97:103">if <condition pos:start="97:20" pos:end="97:37">(<expr pos:start="97:21" pos:end="97:36"><operator pos:start="97:21" pos:end="97:21">!</operator><name pos:start="97:22" pos:end="97:36"><name pos:start="97:22" pos:end="97:28">picture</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:36">height</name></name></expr>)</condition><block type="pseudo" pos:start="97:59" pos:end="97:103"><block_content pos:start="97:59" pos:end="97:103">                     <expr_stmt pos:start="97:59" pos:end="97:103"><expr pos:start="97:59" pos:end="97:102"><name pos:start="97:59" pos:end="97:73"><name pos:start="97:59" pos:end="97:65">picture</name><operator pos:start="97:66" pos:end="97:67">-&gt;</operator><name pos:start="97:68" pos:end="97:73">height</name></name>              <operator pos:start="97:88" pos:end="97:88">=</operator> <name pos:start="97:90" pos:end="97:102"><name pos:start="97:90" pos:end="97:94">avctx</name><operator pos:start="97:95" pos:end="97:96">-&gt;</operator><name pos:start="97:97" pos:end="97:102">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="99:17" pos:end="99:104"><if pos:start="99:17" pos:end="99:104">if <condition pos:start="99:20" pos:end="99:55">(<expr pos:start="99:21" pos:end="99:54"><name pos:start="99:21" pos:end="99:35"><name pos:start="99:21" pos:end="99:27">picture</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:35">format</name></name> <operator pos:start="99:37" pos:end="99:38">==</operator> <name pos:start="99:40" pos:end="99:54">AV_PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="99:59" pos:end="99:104"><block_content pos:start="99:59" pos:end="99:104">   <expr_stmt pos:start="99:59" pos:end="99:104"><expr pos:start="99:59" pos:end="99:103"><name pos:start="99:59" pos:end="99:73"><name pos:start="99:59" pos:end="99:65">picture</name><operator pos:start="99:66" pos:end="99:67">-&gt;</operator><name pos:start="99:68" pos:end="99:73">format</name></name>              <operator pos:start="99:88" pos:end="99:88">=</operator> <name pos:start="99:90" pos:end="99:103"><name pos:start="99:90" pos:end="99:94">avctx</name><operator pos:start="99:95" pos:end="99:96">-&gt;</operator><name pos:start="99:97" pos:end="99:103">pix_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:52"><expr pos:start="105:9" pos:end="105:51"><call pos:start="105:9" pos:end="105:51"><name pos:start="105:9" pos:end="105:35">add_metadata_from_side_data</name><argument_list pos:start="105:36" pos:end="105:51">(<argument pos:start="105:37" pos:end="105:41"><expr pos:start="105:37" pos:end="105:41"><name pos:start="105:37" pos:end="105:41">avctx</name></expr></argument>, <argument pos:start="105:44" pos:end="105:50"><expr pos:start="105:44" pos:end="105:50"><name pos:start="105:44" pos:end="105:50">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="109:1" pos:end="109:5"><name pos:start="109:1" pos:end="109:4">fail</name>:</label>

        <expr_stmt pos:start="111:9" pos:end="111:17"><expr pos:start="111:9" pos:end="111:16"><call pos:start="111:9" pos:end="111:16"><name pos:start="111:9" pos:end="111:14">emms_c</name><argument_list pos:start="111:15" pos:end="111:16">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="111:19" pos:end="111:73">//needed to avoid an emms_c() call before every return;</comment>



        <expr_stmt pos:start="115:9" pos:end="115:36"><expr pos:start="115:9" pos:end="115:35"><name pos:start="115:9" pos:end="115:28"><name pos:start="115:9" pos:end="115:13">avctx</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:23">internal</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:28">pkt</name></name> <operator pos:start="115:30" pos:end="115:30">=</operator> <name pos:start="115:32" pos:end="115:35">NULL</name></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="125:9"><if pos:start="117:9" pos:end="125:9">if <condition pos:start="117:12" pos:end="117:22">(<expr pos:start="117:13" pos:end="117:21"><name pos:start="117:13" pos:end="117:21">did_split</name></expr>)</condition> <block pos:start="117:24" pos:end="125:9">{<block_content pos:start="119:13" pos:end="123:34">

            <expr_stmt pos:start="119:13" pos:end="119:43"><expr pos:start="119:13" pos:end="119:42"><call pos:start="119:13" pos:end="119:42"><name pos:start="119:13" pos:end="119:36">av_packet_free_side_data</name><argument_list pos:start="119:37" pos:end="119:42">(<argument pos:start="119:38" pos:end="119:41"><expr pos:start="119:38" pos:end="119:41"><operator pos:start="119:38" pos:end="119:38">&amp;</operator><name pos:start="119:39" pos:end="119:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="121:13" pos:end="123:34"><if pos:start="121:13" pos:end="123:34">if<condition pos:start="121:15" pos:end="121:31">(<expr pos:start="121:16" pos:end="121:30"><name pos:start="121:16" pos:end="121:18">ret</name> <operator pos:start="121:20" pos:end="121:21">==</operator> <name pos:start="121:23" pos:end="121:30"><name pos:start="121:23" pos:end="121:25">tmp</name><operator pos:start="121:26" pos:end="121:26">.</operator><name pos:start="121:27" pos:end="121:30">size</name></name></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:34"><block_content pos:start="123:17" pos:end="123:34">

                <expr_stmt pos:start="123:17" pos:end="123:34"><expr pos:start="123:17" pos:end="123:33"><name pos:start="123:17" pos:end="123:19">ret</name> <operator pos:start="123:21" pos:end="123:21">=</operator> <name pos:start="123:23" pos:end="123:33"><name pos:start="123:23" pos:end="123:27">avpkt</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:33">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="129:9" pos:end="155:36"><if pos:start="129:9" pos:end="153:9">if <condition pos:start="129:12" pos:end="129:29">(<expr pos:start="129:13" pos:end="129:28"><operator pos:start="129:13" pos:end="129:13">*</operator><name pos:start="129:14" pos:end="129:28">got_picture_ptr</name></expr>)</condition> <block pos:start="129:31" pos:end="153:9">{<block_content pos:start="131:13" pos:end="151:84">

            <if_stmt pos:start="131:13" pos:end="139:13"><if pos:start="131:13" pos:end="139:13">if <condition pos:start="131:16" pos:end="131:42">(<expr pos:start="131:17" pos:end="131:41"><operator pos:start="131:17" pos:end="131:17">!</operator><name pos:start="131:18" pos:end="131:41"><name pos:start="131:18" pos:end="131:22">avctx</name><operator pos:start="131:23" pos:end="131:24">-&gt;</operator><name pos:start="131:25" pos:end="131:41">refcounted_frames</name></name></expr>)</condition> <block pos:start="131:44" pos:end="139:13">{<block_content pos:start="133:17" pos:end="137:31">

                <decl_stmt pos:start="133:17" pos:end="133:58"><decl pos:start="133:17" pos:end="133:57"><type pos:start="133:17" pos:end="133:19"><name pos:start="133:17" pos:end="133:19">int</name></type> <name pos:start="133:21" pos:end="133:23">err</name> <init pos:start="133:25" pos:end="133:57">= <expr pos:start="133:27" pos:end="133:57"><call pos:start="133:27" pos:end="133:57"><name pos:start="133:27" pos:end="133:42">unrefcount_frame</name><argument_list pos:start="133:43" pos:end="133:57">(<argument pos:start="133:44" pos:end="133:47"><expr pos:start="133:44" pos:end="133:47"><name pos:start="133:44" pos:end="133:47">avci</name></expr></argument>, <argument pos:start="133:50" pos:end="133:56"><expr pos:start="133:50" pos:end="133:56"><name pos:start="133:50" pos:end="133:56">picture</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="135:17" pos:end="137:31"><if pos:start="135:17" pos:end="137:31">if <condition pos:start="135:20" pos:end="135:28">(<expr pos:start="135:21" pos:end="135:27"><name pos:start="135:21" pos:end="135:23">err</name> <operator pos:start="135:25" pos:end="135:25">&lt;</operator> <literal type="number" pos:start="135:27" pos:end="135:27">0</literal></expr>)</condition><block type="pseudo" pos:start="137:21" pos:end="137:31"><block_content pos:start="137:21" pos:end="137:31">

                    <return pos:start="137:21" pos:end="137:31">return <expr pos:start="137:28" pos:end="137:30"><name pos:start="137:28" pos:end="137:30">err</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="143:13" pos:end="143:34"><expr pos:start="143:13" pos:end="143:33"><name pos:start="143:13" pos:end="143:31"><name pos:start="143:13" pos:end="143:17">avctx</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:31">frame_number</name></name><operator pos:start="143:32" pos:end="143:33">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="151:84"><expr pos:start="145:13" pos:end="151:83"><call pos:start="145:13" pos:end="151:83"><name pos:start="145:13" pos:end="145:46">av_frame_set_best_effort_timestamp</name><argument_list pos:start="145:47" pos:end="151:83">(<argument pos:start="145:48" pos:end="145:54"><expr pos:start="145:48" pos:end="145:54"><name pos:start="145:48" pos:end="145:54">picture</name></expr></argument>,

                                               <argument pos:start="147:48" pos:end="151:82"><expr pos:start="147:48" pos:end="151:82"><call pos:start="147:48" pos:end="151:82"><name pos:start="147:48" pos:end="147:64">guess_correct_pts</name><argument_list pos:start="147:65" pos:end="151:82">(<argument pos:start="147:66" pos:end="147:70"><expr pos:start="147:66" pos:end="147:70"><name pos:start="147:66" pos:end="147:70">avctx</name></expr></argument>,

                                                                 <argument pos:start="149:66" pos:end="149:81"><expr pos:start="149:66" pos:end="149:81"><name pos:start="149:66" pos:end="149:81"><name pos:start="149:66" pos:end="149:72">picture</name><operator pos:start="149:73" pos:end="149:74">-&gt;</operator><name pos:start="149:75" pos:end="149:81">pkt_pts</name></name></expr></argument>,

                                                                 <argument pos:start="151:66" pos:end="151:81"><expr pos:start="151:66" pos:end="151:81"><name pos:start="151:66" pos:end="151:81"><name pos:start="151:66" pos:end="151:72">picture</name><operator pos:start="151:73" pos:end="151:74">-&gt;</operator><name pos:start="151:75" pos:end="151:81">pkt_dts</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="153:11" pos:end="155:36">else<block type="pseudo" pos:start="155:13" pos:end="155:36"><block_content pos:start="155:13" pos:end="155:36">

            <expr_stmt pos:start="155:13" pos:end="155:36"><expr pos:start="155:13" pos:end="155:35"><call pos:start="155:13" pos:end="155:35"><name pos:start="155:13" pos:end="155:26">av_frame_unref</name><argument_list pos:start="155:27" pos:end="155:35">(<argument pos:start="155:28" pos:end="155:34"><expr pos:start="155:28" pos:end="155:34"><name pos:start="155:28" pos:end="155:34">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="157:7" pos:end="159:16">else<block type="pseudo" pos:start="159:9" pos:end="159:16"><block_content pos:start="159:9" pos:end="159:16">

        <expr_stmt pos:start="159:9" pos:end="159:16"><expr pos:start="159:9" pos:end="159:15"><name pos:start="159:9" pos:end="159:11">ret</name> <operator pos:start="159:13" pos:end="159:13">=</operator> <literal type="number" pos:start="159:15" pos:end="159:15">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="163:5" pos:end="165:38">/* many decoders assign whole AVFrames, thus overwriting extended_data;

     * make sure it's set correctly */</comment>

    <expr_stmt pos:start="167:5" pos:end="167:43"><expr pos:start="167:5" pos:end="167:42"><name pos:start="167:5" pos:end="167:26"><name pos:start="167:5" pos:end="167:11">picture</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:26">extended_data</name></name> <operator pos:start="167:28" pos:end="167:28">=</operator> <name pos:start="167:30" pos:end="167:42"><name pos:start="167:30" pos:end="167:36">picture</name><operator pos:start="167:37" pos:end="167:38">-&gt;</operator><name pos:start="167:39" pos:end="167:42">data</name></name></expr>;</expr_stmt>



    <return pos:start="171:5" pos:end="171:15">return <expr pos:start="171:12" pos:end="171:14"><name pos:start="171:12" pos:end="171:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
