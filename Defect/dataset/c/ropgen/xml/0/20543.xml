<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20543.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">slice_decode_thread</name><parameter_list pos:start="1:31" pos:end="1:60">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">c</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:59"><decl pos:start="1:51" pos:end="1:59"><type pos:start="1:51" pos:end="1:59"><name pos:start="1:51" pos:end="1:54">void</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">arg</name></decl></parameter>)</parameter_list><block pos:start="1:61" pos:end="73:1">{<block_content pos:start="3:5" pos:end="71:13">

    <decl_stmt pos:start="3:5" pos:end="3:36"><decl pos:start="3:5" pos:end="3:35"><type pos:start="3:5" pos:end="3:20"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:21">s</name><init pos:start="3:22" pos:end="3:35">= <expr pos:start="3:24" pos:end="3:35"><operator pos:start="3:24" pos:end="3:24">*</operator><operator pos:start="3:25" pos:end="3:25">(</operator><name pos:start="3:26" pos:end="3:29">void</name><operator pos:start="3:30" pos:end="3:30">*</operator><operator pos:start="3:31" pos:end="3:31">*</operator><operator pos:start="3:32" pos:end="3:32">)</operator><name pos:start="3:33" pos:end="3:35">arg</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">buf</name><init pos:start="5:23" pos:end="5:36">= <expr pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:29">gb</name><operator pos:start="5:30" pos:end="5:30">.</operator><name pos:start="5:31" pos:end="5:36">buffer</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">mb_y</name><init pos:start="7:13" pos:end="7:27">= <expr pos:start="7:15" pos:end="7:27"><name pos:start="7:15" pos:end="7:27"><name pos:start="7:15" pos:end="7:15">s</name><operator pos:start="7:16" pos:end="7:17">-&gt;</operator><name pos:start="7:18" pos:end="7:27">start_mb_y</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:59"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:23">field_pic</name><init pos:start="9:24" pos:end="9:59">= <expr pos:start="9:26" pos:end="9:59"><name pos:start="9:26" pos:end="9:45"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:45">picture_structure</name></name> <operator pos:start="9:47" pos:end="9:48">!=</operator> <name pos:start="9:50" pos:end="9:59">PICT_FRAME</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:79"><expr pos:start="13:5" pos:end="13:78"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:18">error_count</name></name><operator pos:start="13:19" pos:end="13:19">=</operator> <operator pos:start="13:21" pos:end="13:21">(</operator><literal type="number" pos:start="13:22" pos:end="13:22">3</literal><operator pos:start="13:23" pos:end="13:23">*</operator><operator pos:start="13:24" pos:end="13:24">(</operator><name pos:start="13:25" pos:end="13:35"><name pos:start="13:25" pos:end="13:25">s</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:35">end_mb_y</name></name> <operator pos:start="13:37" pos:end="13:37">-</operator> <name pos:start="13:39" pos:end="13:51"><name pos:start="13:39" pos:end="13:39">s</name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:51">start_mb_y</name></name><operator pos:start="13:52" pos:end="13:52">)</operator><operator pos:start="13:53" pos:end="13:53">*</operator><name pos:start="13:54" pos:end="13:64"><name pos:start="13:54" pos:end="13:54">s</name><operator pos:start="13:55" pos:end="13:56">-&gt;</operator><name pos:start="13:57" pos:end="13:64">mb_width</name></name><operator pos:start="13:65" pos:end="13:65">)</operator> <operator pos:start="13:67" pos:end="13:68">&gt;&gt;</operator> <name pos:start="13:70" pos:end="13:78">field_pic</name></expr>;</expr_stmt>



    <for pos:start="17:5" pos:end="67:5">for<control pos:start="17:8" pos:end="17:11">(<init pos:start="17:9" pos:end="17:9">;</init><condition pos:start="17:10" pos:end="17:10">;</condition><incr/>)</control><block pos:start="17:12" pos:end="67:5">{<block_content pos:start="19:9" pos:end="65:22">

        <decl_stmt pos:start="19:9" pos:end="19:28"><decl pos:start="19:9" pos:end="19:27"><type pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:16">uint32_t</name></type> <name pos:start="19:18" pos:end="19:27">start_code</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:16"><decl pos:start="21:9" pos:end="21:15"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:15">ret</name></decl>;</decl_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:85"><expr pos:start="25:9" pos:end="25:84"><name pos:start="25:9" pos:end="25:11">ret</name><operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:84"><name pos:start="25:14" pos:end="25:30">mpeg_decode_slice</name><argument_list pos:start="25:31" pos:end="25:84">(<argument pos:start="25:32" pos:end="25:47"><expr pos:start="25:32" pos:end="25:47"><operator pos:start="25:32" pos:end="25:32">(</operator><name pos:start="25:33" pos:end="25:44">Mpeg1Context</name><operator pos:start="25:45" pos:end="25:45">*</operator><operator pos:start="25:46" pos:end="25:46">)</operator><name pos:start="25:47" pos:end="25:47">s</name></expr></argument>, <argument pos:start="25:50" pos:end="25:53"><expr pos:start="25:50" pos:end="25:53"><name pos:start="25:50" pos:end="25:53">mb_y</name></expr></argument>, <argument pos:start="25:56" pos:end="25:59"><expr pos:start="25:56" pos:end="25:59"><operator pos:start="25:56" pos:end="25:56">&amp;</operator><name pos:start="25:57" pos:end="25:59">buf</name></expr></argument>, <argument pos:start="25:62" pos:end="25:83"><expr pos:start="25:62" pos:end="25:83"><name pos:start="25:62" pos:end="25:77"><name pos:start="25:62" pos:end="25:62">s</name><operator pos:start="25:63" pos:end="25:64">-&gt;</operator><name pos:start="25:65" pos:end="25:66">gb</name><operator pos:start="25:67" pos:end="25:67">.</operator><name pos:start="25:68" pos:end="25:77">buffer_end</name></name> <operator pos:start="25:79" pos:end="25:79">-</operator> <name pos:start="25:81" pos:end="25:83">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:17"><expr pos:start="27:9" pos:end="27:16"><call pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:14">emms_c</name><argument_list pos:start="27:15" pos:end="27:16">()</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="29:1" pos:end="29:74">//av_log(c, AV_LOG_DEBUG, "ret:%d resync:%d/%d mb:%d/%d ts:%d/%d ec:%d\n",</comment>

<comment type="line" pos:start="31:1" pos:end="31:101">//ret, s-&gt;resync_mb_x, s-&gt;resync_mb_y, s-&gt;mb_x, s-&gt;mb_y, s-&gt;start_mb_y, s-&gt;end_mb_y, s-&gt;error_count);</comment>

        <if_stmt pos:start="33:9" pos:end="43:9"><if pos:start="33:9" pos:end="39:9">if<condition pos:start="33:11" pos:end="33:19">(<expr pos:start="33:12" pos:end="33:18"><name pos:start="33:12" pos:end="33:14">ret</name> <operator pos:start="33:16" pos:end="33:16">&lt;</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>)</condition><block pos:start="33:20" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:113">

            <if_stmt pos:start="35:13" pos:end="37:113"><if pos:start="35:13" pos:end="37:113">if<condition pos:start="35:15" pos:end="35:54">(<expr pos:start="35:16" pos:end="35:53"><name pos:start="35:16" pos:end="35:29"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:29">resync_mb_x</name></name><operator pos:start="35:30" pos:end="35:31">&gt;=</operator><literal type="number" pos:start="35:32" pos:end="35:32">0</literal> <operator pos:start="35:34" pos:end="35:35">&amp;&amp;</operator> <name pos:start="35:37" pos:end="35:50"><name pos:start="35:37" pos:end="35:37">s</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:50">resync_mb_y</name></name><operator pos:start="35:51" pos:end="35:52">&gt;=</operator><literal type="number" pos:start="35:53" pos:end="35:53">0</literal></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:113"><block_content pos:start="37:17" pos:end="37:113">

                <expr_stmt pos:start="37:17" pos:end="37:113"><expr pos:start="37:17" pos:end="37:112"><call pos:start="37:17" pos:end="37:112"><name pos:start="37:17" pos:end="37:31">ff_er_add_slice</name><argument_list pos:start="37:32" pos:end="37:112">(<argument pos:start="37:33" pos:end="37:33"><expr pos:start="37:33" pos:end="37:33"><name pos:start="37:33" pos:end="37:33">s</name></expr></argument>, <argument pos:start="37:36" pos:end="37:49"><expr pos:start="37:36" pos:end="37:49"><name pos:start="37:36" pos:end="37:49"><name pos:start="37:36" pos:end="37:36">s</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:49">resync_mb_x</name></name></expr></argument>, <argument pos:start="37:52" pos:end="37:65"><expr pos:start="37:52" pos:end="37:65"><name pos:start="37:52" pos:end="37:65"><name pos:start="37:52" pos:end="37:52">s</name><operator pos:start="37:53" pos:end="37:54">-&gt;</operator><name pos:start="37:55" pos:end="37:65">resync_mb_y</name></name></expr></argument>, <argument pos:start="37:68" pos:end="37:74"><expr pos:start="37:68" pos:end="37:74"><name pos:start="37:68" pos:end="37:74"><name pos:start="37:68" pos:end="37:68">s</name><operator pos:start="37:69" pos:end="37:70">-&gt;</operator><name pos:start="37:71" pos:end="37:74">mb_x</name></name></expr></argument>, <argument pos:start="37:77" pos:end="37:83"><expr pos:start="37:77" pos:end="37:83"><name pos:start="37:77" pos:end="37:83"><name pos:start="37:77" pos:end="37:77">s</name><operator pos:start="37:78" pos:end="37:79">-&gt;</operator><name pos:start="37:80" pos:end="37:83">mb_y</name></name></expr></argument>, <argument pos:start="37:86" pos:end="37:111"><expr pos:start="37:86" pos:end="37:111"><name pos:start="37:86" pos:end="37:93">AC_ERROR</name><operator pos:start="37:94" pos:end="37:94">|</operator><name pos:start="37:95" pos:end="37:102">DC_ERROR</name><operator pos:start="37:103" pos:end="37:103">|</operator><name pos:start="37:104" pos:end="37:111">MV_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if><else pos:start="39:10" pos:end="43:9">else<block pos:start="39:14" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:105">

            <expr_stmt pos:start="41:13" pos:end="41:105"><expr pos:start="41:13" pos:end="41:104"><call pos:start="41:13" pos:end="41:104"><name pos:start="41:13" pos:end="41:27">ff_er_add_slice</name><argument_list pos:start="41:28" pos:end="41:104">(<argument pos:start="41:29" pos:end="41:29"><expr pos:start="41:29" pos:end="41:29"><name pos:start="41:29" pos:end="41:29">s</name></expr></argument>, <argument pos:start="41:32" pos:end="41:45"><expr pos:start="41:32" pos:end="41:45"><name pos:start="41:32" pos:end="41:45"><name pos:start="41:32" pos:end="41:32">s</name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:45">resync_mb_x</name></name></expr></argument>, <argument pos:start="41:48" pos:end="41:61"><expr pos:start="41:48" pos:end="41:61"><name pos:start="41:48" pos:end="41:61"><name pos:start="41:48" pos:end="41:48">s</name><operator pos:start="41:49" pos:end="41:50">-&gt;</operator><name pos:start="41:51" pos:end="41:61">resync_mb_y</name></name></expr></argument>, <argument pos:start="41:64" pos:end="41:72"><expr pos:start="41:64" pos:end="41:72"><name pos:start="41:64" pos:end="41:70"><name pos:start="41:64" pos:end="41:64">s</name><operator pos:start="41:65" pos:end="41:66">-&gt;</operator><name pos:start="41:67" pos:end="41:70">mb_x</name></name><operator pos:start="41:71" pos:end="41:71">-</operator><literal type="number" pos:start="41:72" pos:end="41:72">1</literal></expr></argument>, <argument pos:start="41:75" pos:end="41:81"><expr pos:start="41:75" pos:end="41:81"><name pos:start="41:75" pos:end="41:81"><name pos:start="41:75" pos:end="41:75">s</name><operator pos:start="41:76" pos:end="41:77">-&gt;</operator><name pos:start="41:78" pos:end="41:81">mb_y</name></name></expr></argument>, <argument pos:start="41:84" pos:end="41:103"><expr pos:start="41:84" pos:end="41:103"><name pos:start="41:84" pos:end="41:89">AC_END</name><operator pos:start="41:90" pos:end="41:90">|</operator><name pos:start="41:91" pos:end="41:96">DC_END</name><operator pos:start="41:97" pos:end="41:97">|</operator><name pos:start="41:98" pos:end="41:103">MV_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="47:9" pos:end="49:21"><if pos:start="47:9" pos:end="49:21">if<condition pos:start="47:11" pos:end="47:34">(<expr pos:start="47:12" pos:end="47:33"><name pos:start="47:12" pos:end="47:18"><name pos:start="47:12" pos:end="47:12">s</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:18">mb_y</name></name> <operator pos:start="47:20" pos:end="47:21">==</operator> <name pos:start="47:23" pos:end="47:33"><name pos:start="47:23" pos:end="47:23">s</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:33">end_mb_y</name></name></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:21"><block_content pos:start="49:13" pos:end="49:21">

            <return pos:start="49:13" pos:end="49:21">return <expr pos:start="49:20" pos:end="49:20"><literal type="number" pos:start="49:20" pos:end="49:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:23"><expr pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:18">start_code</name><operator pos:start="53:19" pos:end="53:19">=</operator> <operator pos:start="53:21" pos:end="53:21">-</operator><literal type="number" pos:start="53:22" pos:end="53:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:69"><expr pos:start="55:9" pos:end="55:68"><name pos:start="55:9" pos:end="55:11">buf</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:68"><name pos:start="55:15" pos:end="55:32">ff_find_start_code</name><argument_list pos:start="55:33" pos:end="55:68">(<argument pos:start="55:34" pos:end="55:36"><expr pos:start="55:34" pos:end="55:36"><name pos:start="55:34" pos:end="55:36">buf</name></expr></argument>, <argument pos:start="55:39" pos:end="55:54"><expr pos:start="55:39" pos:end="55:54"><name pos:start="55:39" pos:end="55:54"><name pos:start="55:39" pos:end="55:39">s</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:43">gb</name><operator pos:start="55:44" pos:end="55:44">.</operator><name pos:start="55:45" pos:end="55:54">buffer_end</name></name></expr></argument>, <argument pos:start="55:57" pos:end="55:67"><expr pos:start="55:57" pos:end="55:67"><operator pos:start="55:57" pos:end="55:57">&amp;</operator><name pos:start="55:58" pos:end="55:67">start_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:63"><expr pos:start="57:9" pos:end="57:62"><name pos:start="57:9" pos:end="57:12">mb_y</name><operator pos:start="57:13" pos:end="57:13">=</operator> <operator pos:start="57:15" pos:end="57:15">(</operator><name pos:start="57:16" pos:end="57:25">start_code</name> <operator pos:start="57:27" pos:end="57:27">-</operator> <name pos:start="57:29" pos:end="57:48">SLICE_MIN_START_CODE</name><operator pos:start="57:49" pos:end="57:49">)</operator> <operator pos:start="57:51" pos:end="57:52">&lt;&lt;</operator> <name pos:start="57:54" pos:end="57:62">field_pic</name></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:19"><if pos:start="59:9" pos:end="61:19">if <condition pos:start="59:12" pos:end="59:54">(<expr pos:start="59:13" pos:end="59:53"><name pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:32">picture_structure</name></name> <operator pos:start="59:34" pos:end="59:35">==</operator> <name pos:start="59:37" pos:end="59:53">PICT_BOTTOM_FIELD</name></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:19"><block_content pos:start="61:13" pos:end="61:19">

            <expr_stmt pos:start="61:13" pos:end="61:19"><expr pos:start="61:13" pos:end="61:18"><name pos:start="61:13" pos:end="61:16">mb_y</name><operator pos:start="61:17" pos:end="61:18">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="65:22"><if pos:start="63:9" pos:end="65:22">if<condition pos:start="63:11" pos:end="63:43">(<expr pos:start="63:12" pos:end="63:42"><name pos:start="63:12" pos:end="63:15">mb_y</name> <operator pos:start="63:17" pos:end="63:17">&lt;</operator> <literal type="number" pos:start="63:19" pos:end="63:19">0</literal> <operator pos:start="63:21" pos:end="63:22">||</operator> <name pos:start="63:24" pos:end="63:27">mb_y</name> <operator pos:start="63:29" pos:end="63:30">&gt;=</operator> <name pos:start="63:32" pos:end="63:42"><name pos:start="63:32" pos:end="63:32">s</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:42">end_mb_y</name></name></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:22"><block_content pos:start="65:13" pos:end="65:22">

            <return pos:start="65:13" pos:end="65:22">return <expr pos:start="65:20" pos:end="65:21"><operator pos:start="65:20" pos:end="65:20">-</operator><literal type="number" pos:start="65:21" pos:end="65:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return> <comment type="line" pos:start="71:15" pos:end="71:27">//not reached</comment>

</block_content>}</block></function>
</unit>
