<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21489.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:14">kqemu_init</name><parameter_list pos:start="1:15" pos:end="1:29">(<parameter pos:start="1:16" pos:end="1:28"><decl pos:start="1:16" pos:end="1:28"><type pos:start="1:16" pos:end="1:25"><name pos:start="1:16" pos:end="1:23">CPUState</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:28">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="177:1">{<block_content pos:start="5:5" pos:end="175:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:21">kqemu_init</name></name></type> <name pos:start="5:23" pos:end="5:27">kinit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="10:0"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:20">version</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="9:1" pos:end="9:13">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:13">_WIN32</name></cpp:ifdef>

    <decl_stmt pos:start="11:5" pos:end="14:0"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">DWORD</name></type> <name pos:start="11:11" pos:end="11:14">temp</name></decl>;</decl_stmt>

<cpp:endif pos:start="13:1" pos:end="13:6">#<cpp:directive pos:start="13:2" pos:end="13:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="17:5" pos:end="24:0"><if pos:start="17:5" pos:end="24:0">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:22">kqemu_allowed</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="24:0"><block_content pos:start="19:9" pos:end="24:0">

        <return pos:start="19:9" pos:end="24:0">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



<cpp:ifdef pos:start="23:1" pos:end="23:13">#<cpp:directive pos:start="23:2" pos:end="23:6">ifdef</cpp:directive> <name pos:start="23:8" pos:end="23:13">_WIN32</name></cpp:ifdef>

    <expr_stmt pos:start="25:5" pos:end="31:32"><expr pos:start="25:5" pos:end="31:31"><name pos:start="25:5" pos:end="25:12">kqemu_fd</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="31:31"><name pos:start="25:16" pos:end="25:25">CreateFile</name><argument_list pos:start="25:26" pos:end="31:31">(<argument pos:start="25:27" pos:end="25:38"><expr pos:start="25:27" pos:end="25:38"><name pos:start="25:27" pos:end="25:38">KQEMU_DEVICE</name></expr></argument>, <argument pos:start="25:41" pos:end="25:68"><expr pos:start="25:41" pos:end="25:68"><name pos:start="25:41" pos:end="25:53">GENERIC_WRITE</name> <operator pos:start="25:55" pos:end="25:55">|</operator> <name pos:start="25:57" pos:end="25:68">GENERIC_READ</name></expr></argument>,

                          <argument pos:start="27:27" pos:end="27:60"><expr pos:start="27:27" pos:end="27:60"><name pos:start="27:27" pos:end="27:41">FILE_SHARE_READ</name> <operator pos:start="27:43" pos:end="27:43">|</operator> <name pos:start="27:45" pos:end="27:60">FILE_SHARE_WRITE</name></expr></argument>,

                          <argument pos:start="29:27" pos:end="29:30"><expr pos:start="29:27" pos:end="29:30"><name pos:start="29:27" pos:end="29:30">NULL</name></expr></argument>, <argument pos:start="29:33" pos:end="29:45"><expr pos:start="29:33" pos:end="29:45"><name pos:start="29:33" pos:end="29:45">OPEN_EXISTING</name></expr></argument>, <argument pos:start="29:48" pos:end="29:68"><expr pos:start="29:48" pos:end="29:68"><name pos:start="29:48" pos:end="29:68">FILE_ATTRIBUTE_NORMAL</name></expr></argument>,

                          <argument pos:start="31:27" pos:end="31:30"><expr pos:start="31:27" pos:end="31:30"><name pos:start="31:27" pos:end="31:30">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="44:0"><if pos:start="33:5" pos:end="44:0">if <condition pos:start="33:8" pos:end="33:37">(<expr pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:16">kqemu_fd</name> <operator pos:start="33:18" pos:end="33:19">==</operator> <name pos:start="33:21" pos:end="33:36">KQEMU_INVALID_FD</name></expr>)</condition> <block pos:start="33:39" pos:end="44:0">{<block_content pos:start="35:9" pos:end="39:18">

        <expr_stmt pos:start="35:9" pos:end="37:46"><expr pos:start="35:9" pos:end="37:45"><call pos:start="35:9" pos:end="37:45"><name pos:start="35:9" pos:end="35:15">fprintf</name><argument_list pos:start="35:16" pos:end="37:45">(<argument pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:22">stderr</name></expr></argument>, <argument pos:start="35:25" pos:end="35:92"><expr pos:start="35:25" pos:end="35:92"><literal type="string" pos:start="35:25" pos:end="35:92">"Could not open '%s' - QEMU acceleration layer not activated: %lu\n"</literal></expr></argument>,

                <argument pos:start="37:17" pos:end="37:28"><expr pos:start="37:17" pos:end="37:28"><name pos:start="37:17" pos:end="37:28">KQEMU_DEVICE</name></expr></argument>, <argument pos:start="37:31" pos:end="37:44"><expr pos:start="37:31" pos:end="37:44"><call pos:start="37:31" pos:end="37:44"><name pos:start="37:31" pos:end="37:42">GetLastError</name><argument_list pos:start="37:43" pos:end="37:44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

<cpp:else pos:start="43:1" pos:end="43:5">#<cpp:directive pos:start="43:2" pos:end="43:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="45:5" pos:end="45:42"><expr pos:start="45:5" pos:end="45:41"><name pos:start="45:5" pos:end="45:12">kqemu_fd</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <call pos:start="45:16" pos:end="45:41"><name pos:start="45:16" pos:end="45:19">open</name><argument_list pos:start="45:20" pos:end="45:41">(<argument pos:start="45:21" pos:end="45:32"><expr pos:start="45:21" pos:end="45:32"><name pos:start="45:21" pos:end="45:32">KQEMU_DEVICE</name></expr></argument>, <argument pos:start="45:35" pos:end="45:40"><expr pos:start="45:35" pos:end="45:40"><name pos:start="45:35" pos:end="45:40">O_RDWR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="58:0"><if pos:start="47:5" pos:end="58:0">if <condition pos:start="47:8" pos:end="47:37">(<expr pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:16">kqemu_fd</name> <operator pos:start="47:18" pos:end="47:19">==</operator> <name pos:start="47:21" pos:end="47:36">KQEMU_INVALID_FD</name></expr>)</condition> <block pos:start="47:39" pos:end="58:0">{<block_content pos:start="49:9" pos:end="53:18">

        <expr_stmt pos:start="49:9" pos:end="51:47"><expr pos:start="49:9" pos:end="51:46"><call pos:start="49:9" pos:end="51:46"><name pos:start="49:9" pos:end="49:15">fprintf</name><argument_list pos:start="49:16" pos:end="51:46">(<argument pos:start="49:17" pos:end="49:22"><expr pos:start="49:17" pos:end="49:22"><name pos:start="49:17" pos:end="49:22">stderr</name></expr></argument>, <argument pos:start="49:25" pos:end="49:91"><expr pos:start="49:25" pos:end="49:91"><literal type="string" pos:start="49:25" pos:end="49:91">"Could not open '%s' - QEMU acceleration layer not activated: %s\n"</literal></expr></argument>,

                <argument pos:start="51:17" pos:end="51:28"><expr pos:start="51:17" pos:end="51:28"><name pos:start="51:17" pos:end="51:28">KQEMU_DEVICE</name></expr></argument>, <argument pos:start="51:31" pos:end="51:45"><expr pos:start="51:31" pos:end="51:45"><call pos:start="51:31" pos:end="51:45"><name pos:start="51:31" pos:end="51:38">strerror</name><argument_list pos:start="51:39" pos:end="51:45">(<argument pos:start="51:40" pos:end="51:44"><expr pos:start="51:40" pos:end="51:44"><name pos:start="51:40" pos:end="51:44">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="59:5" pos:end="62:0"><expr pos:start="59:5" pos:end="59:15"><name pos:start="59:5" pos:end="59:11">version</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr>;</expr_stmt>

<cpp:ifdef pos:start="61:1" pos:end="61:13">#<cpp:directive pos:start="61:2" pos:end="61:6">ifdef</cpp:directive> <name pos:start="61:8" pos:end="61:13">_WIN32</name></cpp:ifdef>

    <expr_stmt pos:start="63:5" pos:end="68:0"><expr pos:start="63:5" pos:end="65:59"><call pos:start="63:5" pos:end="65:59"><name pos:start="63:5" pos:end="63:19">DeviceIoControl</name><argument_list pos:start="63:20" pos:end="65:59">(<argument pos:start="63:21" pos:end="63:28"><expr pos:start="63:21" pos:end="63:28"><name pos:start="63:21" pos:end="63:28">kqemu_fd</name></expr></argument>, <argument pos:start="63:31" pos:end="63:47"><expr pos:start="63:31" pos:end="63:47"><name pos:start="63:31" pos:end="63:47">KQEMU_GET_VERSION</name></expr></argument>, <argument pos:start="63:50" pos:end="63:53"><expr pos:start="63:50" pos:end="63:53"><name pos:start="63:50" pos:end="63:53">NULL</name></expr></argument>, <argument pos:start="63:56" pos:end="63:56"><expr pos:start="63:56" pos:end="63:56"><literal type="number" pos:start="63:56" pos:end="63:56">0</literal></expr></argument>,

                    <argument pos:start="65:21" pos:end="65:28"><expr pos:start="65:21" pos:end="65:28"><operator pos:start="65:21" pos:end="65:21">&amp;</operator><name pos:start="65:22" pos:end="65:28">version</name></expr></argument>, <argument pos:start="65:31" pos:end="65:45"><expr pos:start="65:31" pos:end="65:45"><sizeof pos:start="65:31" pos:end="65:45">sizeof<argument_list pos:start="65:37" pos:end="65:45">(<argument pos:start="65:38" pos:end="65:44"><expr pos:start="65:38" pos:end="65:44"><name pos:start="65:38" pos:end="65:44">version</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="65:48" pos:end="65:52"><expr pos:start="65:48" pos:end="65:52"><operator pos:start="65:48" pos:end="65:48">&amp;</operator><name pos:start="65:49" pos:end="65:52">temp</name></expr></argument>, <argument pos:start="65:55" pos:end="65:58"><expr pos:start="65:55" pos:end="65:58"><name pos:start="65:55" pos:end="65:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="67:1" pos:end="67:5">#<cpp:directive pos:start="67:2" pos:end="67:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="69:5" pos:end="72:0"><expr pos:start="69:5" pos:end="69:48"><call pos:start="69:5" pos:end="69:48"><name pos:start="69:5" pos:end="69:9">ioctl</name><argument_list pos:start="69:10" pos:end="69:48">(<argument pos:start="69:11" pos:end="69:18"><expr pos:start="69:11" pos:end="69:18"><name pos:start="69:11" pos:end="69:18">kqemu_fd</name></expr></argument>, <argument pos:start="69:21" pos:end="69:37"><expr pos:start="69:21" pos:end="69:37"><name pos:start="69:21" pos:end="69:37">KQEMU_GET_VERSION</name></expr></argument>, <argument pos:start="69:40" pos:end="69:47"><expr pos:start="69:40" pos:end="69:47"><operator pos:start="69:40" pos:end="69:40">&amp;</operator><name pos:start="69:41" pos:end="69:47">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="73:5" pos:end="81:5"><if pos:start="73:5" pos:end="81:5">if <condition pos:start="73:8" pos:end="73:33">(<expr pos:start="73:9" pos:end="73:32"><name pos:start="73:9" pos:end="73:15">version</name> <operator pos:start="73:17" pos:end="73:18">!=</operator> <name pos:start="73:20" pos:end="73:32">KQEMU_VERSION</name></expr>)</condition> <block pos:start="73:35" pos:end="81:5">{<block_content pos:start="75:9" pos:end="79:18">

        <expr_stmt pos:start="75:9" pos:end="77:40"><expr pos:start="75:9" pos:end="77:39"><call pos:start="75:9" pos:end="77:39"><name pos:start="75:9" pos:end="75:15">fprintf</name><argument_list pos:start="75:16" pos:end="77:39">(<argument pos:start="75:17" pos:end="75:22"><expr pos:start="75:17" pos:end="75:22"><name pos:start="75:17" pos:end="75:22">stderr</name></expr></argument>, <argument pos:start="75:25" pos:end="75:108"><expr pos:start="75:25" pos:end="75:108"><literal type="string" pos:start="75:25" pos:end="75:108">"Version mismatch between kqemu module and qemu (%08x %08x) - disabling kqemu use\n"</literal></expr></argument>,

                <argument pos:start="77:17" pos:end="77:23"><expr pos:start="77:17" pos:end="77:23"><name pos:start="77:17" pos:end="77:23">version</name></expr></argument>, <argument pos:start="77:26" pos:end="77:38"><expr pos:start="77:26" pos:end="77:38"><name pos:start="77:26" pos:end="77:38">KQEMU_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="79:9" pos:end="79:18">goto <name pos:start="79:14" pos:end="79:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="87:52"><expr pos:start="85:5" pos:end="87:51"><name pos:start="85:5" pos:end="85:18">pages_to_flush</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <call pos:start="85:22" pos:end="87:51"><name pos:start="85:22" pos:end="85:33">qemu_vmalloc</name><argument_list pos:start="85:34" pos:end="87:51">(<argument pos:start="85:35" pos:end="87:50"><expr pos:start="85:35" pos:end="87:50"><name pos:start="85:35" pos:end="85:58">KQEMU_MAX_PAGES_TO_FLUSH</name> <operator pos:start="85:60" pos:end="85:60">*</operator>

                                  <sizeof pos:start="87:35" pos:end="87:50">sizeof<argument_list pos:start="87:41" pos:end="87:50">(<argument pos:start="87:42" pos:end="87:49"><expr pos:start="87:42" pos:end="87:49"><name pos:start="87:42" pos:end="87:49">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="91:18"><if pos:start="89:5" pos:end="91:18">if <condition pos:start="89:8" pos:end="89:24">(<expr pos:start="89:9" pos:end="89:23"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:23">pages_to_flush</name></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:18"><block_content pos:start="91:9" pos:end="91:18">

        <goto pos:start="91:9" pos:end="91:18">goto <name pos:start="91:14" pos:end="91:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="97:57"><expr pos:start="95:5" pos:end="97:56"><name pos:start="95:5" pos:end="95:23">ram_pages_to_update</name> <operator pos:start="95:25" pos:end="95:25">=</operator> <call pos:start="95:27" pos:end="97:56"><name pos:start="95:27" pos:end="95:38">qemu_vmalloc</name><argument_list pos:start="95:39" pos:end="97:56">(<argument pos:start="95:40" pos:end="97:55"><expr pos:start="95:40" pos:end="97:55"><name pos:start="95:40" pos:end="95:68">KQEMU_MAX_RAM_PAGES_TO_UPDATE</name> <operator pos:start="95:70" pos:end="95:70">*</operator>

                                       <sizeof pos:start="97:40" pos:end="97:55">sizeof<argument_list pos:start="97:46" pos:end="97:55">(<argument pos:start="97:47" pos:end="97:54"><expr pos:start="97:47" pos:end="97:54"><name pos:start="97:47" pos:end="97:54">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="101:18"><if pos:start="99:5" pos:end="101:18">if <condition pos:start="99:8" pos:end="99:29">(<expr pos:start="99:9" pos:end="99:28"><operator pos:start="99:9" pos:end="99:9">!</operator><name pos:start="99:10" pos:end="99:28">ram_pages_to_update</name></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:18"><block_content pos:start="101:9" pos:end="101:18">

        <goto pos:start="101:9" pos:end="101:18">goto <name pos:start="101:14" pos:end="101:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="107:56"><expr pos:start="105:5" pos:end="107:55"><name pos:start="105:5" pos:end="105:22">modified_ram_pages</name> <operator pos:start="105:24" pos:end="105:24">=</operator> <call pos:start="105:26" pos:end="107:55"><name pos:start="105:26" pos:end="105:37">qemu_vmalloc</name><argument_list pos:start="105:38" pos:end="107:55">(<argument pos:start="105:39" pos:end="107:54"><expr pos:start="105:39" pos:end="107:54"><name pos:start="105:39" pos:end="105:66">KQEMU_MAX_MODIFIED_RAM_PAGES</name> <operator pos:start="105:68" pos:end="105:68">*</operator>

                                      <sizeof pos:start="107:39" pos:end="107:54">sizeof<argument_list pos:start="107:45" pos:end="107:54">(<argument pos:start="107:46" pos:end="107:53"><expr pos:start="107:46" pos:end="107:53"><name pos:start="107:46" pos:end="107:53">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="111:18"><if pos:start="109:5" pos:end="111:18">if <condition pos:start="109:8" pos:end="109:28">(<expr pos:start="109:9" pos:end="109:27"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:27">modified_ram_pages</name></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:18"><block_content pos:start="111:9" pos:end="111:18">

        <goto pos:start="111:9" pos:end="111:18">goto <name pos:start="111:14" pos:end="111:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="113:5" pos:end="115:62"><expr pos:start="113:5" pos:end="115:61"><name pos:start="113:5" pos:end="113:28">modified_ram_pages_table</name> <operator pos:start="113:30" pos:end="113:30">=</operator>

        <call pos:start="115:9" pos:end="115:61"><name pos:start="115:9" pos:end="115:20">qemu_mallocz</name><argument_list pos:start="115:21" pos:end="115:61">(<argument pos:start="115:22" pos:end="115:60"><expr pos:start="115:22" pos:end="115:60"><name pos:start="115:22" pos:end="115:40">kqemu_phys_ram_size</name> <operator pos:start="115:42" pos:end="115:43">&gt;&gt;</operator> <name pos:start="115:45" pos:end="115:60">TARGET_PAGE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="119:18"><if pos:start="117:5" pos:end="119:18">if <condition pos:start="117:8" pos:end="117:34">(<expr pos:start="117:9" pos:end="117:33"><operator pos:start="117:9" pos:end="117:9">!</operator><name pos:start="117:10" pos:end="117:33">modified_ram_pages_table</name></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:18"><block_content pos:start="119:9" pos:end="119:18">

        <goto pos:start="119:9" pos:end="119:18">goto <name pos:start="119:14" pos:end="119:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:37"><expr pos:start="123:5" pos:end="123:36"><call pos:start="123:5" pos:end="123:36"><name pos:start="123:5" pos:end="123:10">memset</name><argument_list pos:start="123:11" pos:end="123:36">(<argument pos:start="123:12" pos:end="123:17"><expr pos:start="123:12" pos:end="123:17"><operator pos:start="123:12" pos:end="123:12">&amp;</operator><name pos:start="123:13" pos:end="123:17">kinit</name></expr></argument>, <argument pos:start="123:20" pos:end="123:20"><expr pos:start="123:20" pos:end="123:20"><literal type="number" pos:start="123:20" pos:end="123:20">0</literal></expr></argument>, <argument pos:start="123:23" pos:end="123:35"><expr pos:start="123:23" pos:end="123:35"><sizeof pos:start="123:23" pos:end="123:35">sizeof<argument_list pos:start="123:29" pos:end="123:35">(<argument pos:start="123:30" pos:end="123:34"><expr pos:start="123:30" pos:end="123:34"><name pos:start="123:30" pos:end="123:34">kinit</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="123:39" pos:end="123:68">/* set the paddings to zero */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:41"><expr pos:start="125:5" pos:end="125:40"><name pos:start="125:5" pos:end="125:18"><name pos:start="125:5" pos:end="125:9">kinit</name><operator pos:start="125:10" pos:end="125:10">.</operator><name pos:start="125:11" pos:end="125:18">ram_base</name></name> <operator pos:start="125:20" pos:end="125:20">=</operator> <name pos:start="125:22" pos:end="125:40">kqemu_phys_ram_base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:41"><expr pos:start="127:5" pos:end="127:40"><name pos:start="127:5" pos:end="127:18"><name pos:start="127:5" pos:end="127:9">kinit</name><operator pos:start="127:10" pos:end="127:10">.</operator><name pos:start="127:11" pos:end="127:18">ram_size</name></name> <operator pos:start="127:20" pos:end="127:20">=</operator> <name pos:start="127:22" pos:end="127:40">kqemu_phys_ram_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:37"><expr pos:start="129:5" pos:end="129:36"><name pos:start="129:5" pos:end="129:19"><name pos:start="129:5" pos:end="129:9">kinit</name><operator pos:start="129:10" pos:end="129:10">.</operator><name pos:start="129:11" pos:end="129:19">ram_dirty</name></name> <operator pos:start="129:21" pos:end="129:21">=</operator> <name pos:start="129:23" pos:end="129:36">phys_ram_dirty</name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:42"><expr pos:start="131:5" pos:end="131:41"><name pos:start="131:5" pos:end="131:24"><name pos:start="131:5" pos:end="131:9">kinit</name><operator pos:start="131:10" pos:end="131:10">.</operator><name pos:start="131:11" pos:end="131:24">pages_to_flush</name></name> <operator pos:start="131:26" pos:end="131:26">=</operator> <name pos:start="131:28" pos:end="131:41">pages_to_flush</name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:52"><expr pos:start="133:5" pos:end="133:51"><name pos:start="133:5" pos:end="133:29"><name pos:start="133:5" pos:end="133:9">kinit</name><operator pos:start="133:10" pos:end="133:10">.</operator><name pos:start="133:11" pos:end="133:29">ram_pages_to_update</name></name> <operator pos:start="133:31" pos:end="133:31">=</operator> <name pos:start="133:33" pos:end="133:51">ram_pages_to_update</name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="138:0"><expr pos:start="135:5" pos:end="135:49"><name pos:start="135:5" pos:end="135:28"><name pos:start="135:5" pos:end="135:9">kinit</name><operator pos:start="135:10" pos:end="135:10">.</operator><name pos:start="135:11" pos:end="135:28">modified_ram_pages</name></name> <operator pos:start="135:30" pos:end="135:30">=</operator> <name pos:start="135:32" pos:end="135:49">modified_ram_pages</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="137:1" pos:end="137:13">#<cpp:directive pos:start="137:2" pos:end="137:6">ifdef</cpp:directive> <name pos:start="137:8" pos:end="137:13">_WIN32</name></cpp:ifdef>

    <expr_stmt pos:start="139:5" pos:end="144:0"><expr pos:start="139:5" pos:end="141:64"><name pos:start="139:5" pos:end="139:7">ret</name> <operator pos:start="139:9" pos:end="139:9">=</operator> <ternary pos:start="139:11" pos:end="141:64"><condition pos:start="139:11" pos:end="141:57"><expr pos:start="139:11" pos:end="141:55"><call pos:start="139:11" pos:end="141:47"><name pos:start="139:11" pos:end="139:25">DeviceIoControl</name><argument_list pos:start="139:26" pos:end="141:47">(<argument pos:start="139:27" pos:end="139:34"><expr pos:start="139:27" pos:end="139:34"><name pos:start="139:27" pos:end="139:34">kqemu_fd</name></expr></argument>, <argument pos:start="139:37" pos:end="139:46"><expr pos:start="139:37" pos:end="139:46"><name pos:start="139:37" pos:end="139:46">KQEMU_INIT</name></expr></argument>, <argument pos:start="139:49" pos:end="139:54"><expr pos:start="139:49" pos:end="139:54"><operator pos:start="139:49" pos:end="139:49">&amp;</operator><name pos:start="139:50" pos:end="139:54">kinit</name></expr></argument>, <argument pos:start="139:57" pos:end="139:69"><expr pos:start="139:57" pos:end="139:69"><sizeof pos:start="139:57" pos:end="139:69">sizeof<argument_list pos:start="139:63" pos:end="139:69">(<argument pos:start="139:64" pos:end="139:68"><expr pos:start="139:64" pos:end="139:68"><name pos:start="139:64" pos:end="139:68">kinit</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                          <argument pos:start="141:27" pos:end="141:30"><expr pos:start="141:27" pos:end="141:30"><name pos:start="141:27" pos:end="141:30">NULL</name></expr></argument>, <argument pos:start="141:33" pos:end="141:33"><expr pos:start="141:33" pos:end="141:33"><literal type="number" pos:start="141:33" pos:end="141:33">0</literal></expr></argument>, <argument pos:start="141:36" pos:end="141:40"><expr pos:start="141:36" pos:end="141:40"><operator pos:start="141:36" pos:end="141:36">&amp;</operator><name pos:start="141:37" pos:end="141:40">temp</name></expr></argument>, <argument pos:start="141:43" pos:end="141:46"><expr pos:start="141:43" pos:end="141:46"><name pos:start="141:43" pos:end="141:46">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="141:49" pos:end="141:50">==</operator> <name pos:start="141:52" pos:end="141:55">TRUE</name></expr> ?</condition><then pos:start="141:59" pos:end="141:59"> <expr pos:start="141:59" pos:end="141:59"><literal type="number" pos:start="141:59" pos:end="141:59">0</literal></expr> </then><else pos:start="141:61" pos:end="141:64">: <expr pos:start="141:63" pos:end="141:64"><operator pos:start="141:63" pos:end="141:63">-</operator><literal type="number" pos:start="141:64" pos:end="141:64">1</literal></expr></else></ternary></expr>;</expr_stmt>

<cpp:else pos:start="143:1" pos:end="143:5">#<cpp:directive pos:start="143:2" pos:end="143:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="145:5" pos:end="148:0"><expr pos:start="145:5" pos:end="145:45"><name pos:start="145:5" pos:end="145:7">ret</name> <operator pos:start="145:9" pos:end="145:9">=</operator> <call pos:start="145:11" pos:end="145:45"><name pos:start="145:11" pos:end="145:15">ioctl</name><argument_list pos:start="145:16" pos:end="145:45">(<argument pos:start="145:17" pos:end="145:24"><expr pos:start="145:17" pos:end="145:24"><name pos:start="145:17" pos:end="145:24">kqemu_fd</name></expr></argument>, <argument pos:start="145:27" pos:end="145:36"><expr pos:start="145:27" pos:end="145:36"><name pos:start="145:27" pos:end="145:36">KQEMU_INIT</name></expr></argument>, <argument pos:start="145:39" pos:end="145:44"><expr pos:start="145:39" pos:end="145:44"><operator pos:start="145:39" pos:end="145:39">&amp;</operator><name pos:start="145:40" pos:end="145:44">kinit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="147:1" pos:end="147:6">#<cpp:directive pos:start="147:2" pos:end="147:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="149:5" pos:end="161:5"><if pos:start="149:5" pos:end="161:5">if <condition pos:start="149:8" pos:end="149:16">(<expr pos:start="149:9" pos:end="149:15"><name pos:start="149:9" pos:end="149:11">ret</name> <operator pos:start="149:13" pos:end="149:13">&lt;</operator> <literal type="number" pos:start="149:15" pos:end="149:15">0</literal></expr>)</condition> <block pos:start="149:18" pos:end="161:5">{<block_content pos:start="151:9" pos:end="159:18">

        <expr_stmt pos:start="151:9" pos:end="151:109"><expr pos:start="151:9" pos:end="151:108"><call pos:start="151:9" pos:end="151:108"><name pos:start="151:9" pos:end="151:15">fprintf</name><argument_list pos:start="151:16" pos:end="151:108">(<argument pos:start="151:17" pos:end="151:22"><expr pos:start="151:17" pos:end="151:22"><name pos:start="151:17" pos:end="151:22">stderr</name></expr></argument>, <argument pos:start="151:25" pos:end="151:102"><expr pos:start="151:25" pos:end="151:102"><literal type="string" pos:start="151:25" pos:end="151:102">"Error %d while initializing QEMU acceleration layer - disabling it for now\n"</literal></expr></argument>, <argument pos:start="151:105" pos:end="151:107"><expr pos:start="151:105" pos:end="151:107"><name pos:start="151:105" pos:end="151:107">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <label pos:start="153:5" pos:end="153:9"><name pos:start="153:5" pos:end="153:8">fail</name>:</label>

        <expr_stmt pos:start="155:9" pos:end="155:32"><expr pos:start="155:9" pos:end="155:31"><call pos:start="155:9" pos:end="155:31"><name pos:start="155:9" pos:end="155:21">kqemu_closefd</name><argument_list pos:start="155:22" pos:end="155:31">(<argument pos:start="155:23" pos:end="155:30"><expr pos:start="155:23" pos:end="155:30"><name pos:start="155:23" pos:end="155:30">kqemu_fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:36"><expr pos:start="157:9" pos:end="157:35"><name pos:start="157:9" pos:end="157:16">kqemu_fd</name> <operator pos:start="157:18" pos:end="157:18">=</operator> <name pos:start="157:20" pos:end="157:35">KQEMU_INVALID_FD</name></expr>;</expr_stmt>

        <return pos:start="159:9" pos:end="159:18">return <expr pos:start="159:16" pos:end="159:17"><operator pos:start="159:16" pos:end="159:16">-</operator><literal type="number" pos:start="159:17" pos:end="159:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:28"><expr pos:start="163:5" pos:end="163:27"><call pos:start="163:5" pos:end="163:27"><name pos:start="163:5" pos:end="163:22">kqemu_update_cpuid</name><argument_list pos:start="163:23" pos:end="163:27">(<argument pos:start="163:24" pos:end="163:26"><expr pos:start="163:24" pos:end="163:26"><name pos:start="163:24" pos:end="163:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:39"><expr pos:start="165:5" pos:end="165:38"><name pos:start="165:5" pos:end="165:22"><name pos:start="165:5" pos:end="165:7">env</name><operator pos:start="165:8" pos:end="165:9">-&gt;</operator><name pos:start="165:10" pos:end="165:22">kqemu_enabled</name></name> <operator pos:start="165:24" pos:end="165:24">=</operator> <name pos:start="165:26" pos:end="165:38">kqemu_allowed</name></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:26"><expr pos:start="167:5" pos:end="167:25"><name pos:start="167:5" pos:end="167:21">nb_pages_to_flush</name> <operator pos:start="167:23" pos:end="167:23">=</operator> <literal type="number" pos:start="167:25" pos:end="167:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:31"><expr pos:start="169:5" pos:end="169:30"><name pos:start="169:5" pos:end="169:26">nb_ram_pages_to_update</name> <operator pos:start="169:28" pos:end="169:28">=</operator> <literal type="number" pos:start="169:30" pos:end="169:30">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="173:5" pos:end="173:15"><expr pos:start="173:5" pos:end="173:14"><call pos:start="173:5" pos:end="173:14"><name pos:start="173:5" pos:end="173:12">qpi_init</name><argument_list pos:start="173:13" pos:end="173:14">()</argument_list></call></expr>;</expr_stmt>

    <return pos:start="175:5" pos:end="175:13">return <expr pos:start="175:12" pos:end="175:12"><literal type="number" pos:start="175:12" pos:end="175:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
