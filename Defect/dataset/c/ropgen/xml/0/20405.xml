<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20405.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">ftp_auth</name><parameter_list pos:start="1:20" pos:end="1:46">(<parameter pos:start="1:21" pos:end="1:33"><decl pos:start="1:21" pos:end="1:33"><type pos:start="1:21" pos:end="1:33"><name pos:start="1:21" pos:end="1:30">FTPContext</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">s</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:45"><decl pos:start="1:36" pos:end="1:45"><type pos:start="1:36" pos:end="1:45"><name pos:start="1:36" pos:end="1:39">char</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">auth</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">user</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>, <decl pos:start="5:30" pos:end="5:41"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:34">pass</name> <init pos:start="5:36" pos:end="5:41">= <expr pos:start="5:38" pos:end="5:41"><name pos:start="5:38" pos:end="5:41">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:13">end</name> <init pos:start="7:15" pos:end="7:20">= <expr pos:start="7:17" pos:end="7:20"><name pos:start="7:17" pos:end="7:20">NULL</name></expr></init></decl>, <decl pos:start="7:23" pos:end="7:46"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:23" pos:end="7:46"><name pos:start="7:23" pos:end="7:25">buf</name><index pos:start="7:26" pos:end="7:46">[<expr pos:start="7:27" pos:end="7:45"><name pos:start="7:27" pos:end="7:45">CONTROL_BUFFER_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><call pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:14">av_assert2</name><argument_list pos:start="11:15" pos:end="11:20">(<argument pos:start="11:16" pos:end="11:19"><expr pos:start="11:16" pos:end="11:19"><name pos:start="11:16" pos:end="11:19">auth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:8">user</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:37"><name pos:start="15:12" pos:end="15:20">av_strtok</name><argument_list pos:start="15:21" pos:end="15:37">(<argument pos:start="15:22" pos:end="15:25"><expr pos:start="15:22" pos:end="15:25"><name pos:start="15:22" pos:end="15:25">auth</name></expr></argument>, <argument pos:start="15:28" pos:end="15:30"><expr pos:start="15:28" pos:end="15:30"><literal type="string" pos:start="15:28" pos:end="15:30">":"</literal></expr></argument>, <argument pos:start="15:33" pos:end="15:36"><expr pos:start="15:33" pos:end="15:36"><operator pos:start="15:33" pos:end="15:33">&amp;</operator><name pos:start="15:34" pos:end="15:36">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:8">pass</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:36"><name pos:start="17:12" pos:end="17:20">av_strtok</name><argument_list pos:start="17:21" pos:end="17:36">(<argument pos:start="17:22" pos:end="17:24"><expr pos:start="17:22" pos:end="17:24"><name pos:start="17:22" pos:end="17:24">end</name></expr></argument>, <argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><literal type="string" pos:start="17:27" pos:end="17:29">":"</literal></expr></argument>, <argument pos:start="17:32" pos:end="17:35"><expr pos:start="17:32" pos:end="17:35"><operator pos:start="17:32" pos:end="17:32">&amp;</operator><name pos:start="17:33" pos:end="17:35">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="89:5"><if pos:start="21:5" pos:end="55:5">if <condition pos:start="21:8" pos:end="21:13">(<expr pos:start="21:9" pos:end="21:12"><name pos:start="21:9" pos:end="21:12">user</name></expr>)</condition> <block pos:start="21:15" pos:end="55:5">{<block_content pos:start="23:9" pos:end="53:9">

        <expr_stmt pos:start="23:9" pos:end="23:56"><expr pos:start="23:9" pos:end="23:55"><call pos:start="23:9" pos:end="23:55"><name pos:start="23:9" pos:end="23:16">snprintf</name><argument_list pos:start="23:17" pos:end="23:55">(<argument pos:start="23:18" pos:end="23:20"><expr pos:start="23:18" pos:end="23:20"><name pos:start="23:18" pos:end="23:20">buf</name></expr></argument>, <argument pos:start="23:23" pos:end="23:33"><expr pos:start="23:23" pos:end="23:33"><sizeof pos:start="23:23" pos:end="23:33">sizeof<argument_list pos:start="23:29" pos:end="23:33">(<argument pos:start="23:30" pos:end="23:32"><expr pos:start="23:30" pos:end="23:32"><name pos:start="23:30" pos:end="23:32">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="23:36" pos:end="23:48"><expr pos:start="23:36" pos:end="23:48"><literal type="string" pos:start="23:36" pos:end="23:48">"USER %s\r\n"</literal></expr></argument>, <argument pos:start="23:51" pos:end="23:54"><expr pos:start="23:51" pos:end="23:54"><name pos:start="23:51" pos:end="23:54">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:23"><if pos:start="25:9" pos:end="27:23">if <condition pos:start="25:12" pos:end="25:71">(<expr pos:start="25:13" pos:end="25:70"><operator pos:start="25:13" pos:end="25:13">(</operator><name pos:start="25:14" pos:end="25:16">err</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <call pos:start="25:20" pos:end="25:65"><name pos:start="25:20" pos:end="25:30">ffurl_write</name><argument_list pos:start="25:31" pos:end="25:65">(<argument pos:start="25:32" pos:end="25:46"><expr pos:start="25:32" pos:end="25:46"><name pos:start="25:32" pos:end="25:46"><name pos:start="25:32" pos:end="25:32">s</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:46">conn_control</name></name></expr></argument>, <argument pos:start="25:49" pos:end="25:51"><expr pos:start="25:49" pos:end="25:51"><name pos:start="25:49" pos:end="25:51">buf</name></expr></argument>, <argument pos:start="25:54" pos:end="25:64"><expr pos:start="25:54" pos:end="25:64"><call pos:start="25:54" pos:end="25:64"><name pos:start="25:54" pos:end="25:59">strlen</name><argument_list pos:start="25:60" pos:end="25:64">(<argument pos:start="25:61" pos:end="25:63"><expr pos:start="25:61" pos:end="25:63"><name pos:start="25:61" pos:end="25:63">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="25:66" pos:end="25:66">)</operator> <operator pos:start="25:68" pos:end="25:68">&lt;</operator> <literal type="number" pos:start="25:70" pos:end="25:70">0</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:23"><block_content pos:start="27:13" pos:end="27:23">

            <return pos:start="27:13" pos:end="27:23">return <expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">err</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:50"><expr pos:start="29:9" pos:end="29:49"><call pos:start="29:9" pos:end="29:49"><name pos:start="29:9" pos:end="29:18">ftp_status</name><argument_list pos:start="29:19" pos:end="29:49">(<argument pos:start="29:20" pos:end="29:20"><expr pos:start="29:20" pos:end="29:20"><name pos:start="29:20" pos:end="29:20">s</name></expr></argument>, <argument pos:start="29:23" pos:end="29:26"><expr pos:start="29:23" pos:end="29:26"><operator pos:start="29:23" pos:end="29:23">&amp;</operator><name pos:start="29:24" pos:end="29:26">err</name></expr></argument>, <argument pos:start="29:29" pos:end="29:32"><expr pos:start="29:29" pos:end="29:32"><name pos:start="29:29" pos:end="29:32">NULL</name></expr></argument>, <argument pos:start="29:35" pos:end="29:38"><expr pos:start="29:35" pos:end="29:38"><name pos:start="29:35" pos:end="29:38">NULL</name></expr></argument>, <argument pos:start="29:41" pos:end="29:44"><expr pos:start="29:41" pos:end="29:44"><name pos:start="29:41" pos:end="29:44">NULL</name></expr></argument>, <argument pos:start="29:47" pos:end="29:48"><expr pos:start="29:47" pos:end="29:48"><operator pos:start="29:47" pos:end="29:47">-</operator><literal type="number" pos:start="29:48" pos:end="29:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="47:9"><if pos:start="31:9" pos:end="47:9">if <condition pos:start="31:12" pos:end="31:21">(<expr pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:15">err</name> <operator pos:start="31:17" pos:end="31:18">==</operator> <literal type="number" pos:start="31:20" pos:end="31:20">3</literal></expr>)</condition> <block pos:start="31:23" pos:end="47:9">{<block_content pos:start="33:13" pos:end="45:39">

            <if_stmt pos:start="33:13" pos:end="45:39"><if pos:start="33:13" pos:end="43:13">if <condition pos:start="33:16" pos:end="33:21">(<expr pos:start="33:17" pos:end="33:20"><name pos:start="33:17" pos:end="33:20">pass</name></expr>)</condition> <block pos:start="33:23" pos:end="43:13">{<block_content pos:start="35:17" pos:end="41:58">

                <expr_stmt pos:start="35:17" pos:end="35:64"><expr pos:start="35:17" pos:end="35:63"><call pos:start="35:17" pos:end="35:63"><name pos:start="35:17" pos:end="35:24">snprintf</name><argument_list pos:start="35:25" pos:end="35:63">(<argument pos:start="35:26" pos:end="35:28"><expr pos:start="35:26" pos:end="35:28"><name pos:start="35:26" pos:end="35:28">buf</name></expr></argument>, <argument pos:start="35:31" pos:end="35:41"><expr pos:start="35:31" pos:end="35:41"><sizeof pos:start="35:31" pos:end="35:41">sizeof<argument_list pos:start="35:37" pos:end="35:41">(<argument pos:start="35:38" pos:end="35:40"><expr pos:start="35:38" pos:end="35:40"><name pos:start="35:38" pos:end="35:40">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="35:44" pos:end="35:56"><expr pos:start="35:44" pos:end="35:56"><literal type="string" pos:start="35:44" pos:end="35:56">"PASS %s\r\n"</literal></expr></argument>, <argument pos:start="35:59" pos:end="35:62"><expr pos:start="35:59" pos:end="35:62"><name pos:start="35:59" pos:end="35:62">pass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="37:17" pos:end="39:31"><if pos:start="37:17" pos:end="39:31">if <condition pos:start="37:20" pos:end="37:79">(<expr pos:start="37:21" pos:end="37:78"><operator pos:start="37:21" pos:end="37:21">(</operator><name pos:start="37:22" pos:end="37:24">err</name> <operator pos:start="37:26" pos:end="37:26">=</operator> <call pos:start="37:28" pos:end="37:73"><name pos:start="37:28" pos:end="37:38">ffurl_write</name><argument_list pos:start="37:39" pos:end="37:73">(<argument pos:start="37:40" pos:end="37:54"><expr pos:start="37:40" pos:end="37:54"><name pos:start="37:40" pos:end="37:54"><name pos:start="37:40" pos:end="37:40">s</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:54">conn_control</name></name></expr></argument>, <argument pos:start="37:57" pos:end="37:59"><expr pos:start="37:57" pos:end="37:59"><name pos:start="37:57" pos:end="37:59">buf</name></expr></argument>, <argument pos:start="37:62" pos:end="37:72"><expr pos:start="37:62" pos:end="37:72"><call pos:start="37:62" pos:end="37:72"><name pos:start="37:62" pos:end="37:67">strlen</name><argument_list pos:start="37:68" pos:end="37:72">(<argument pos:start="37:69" pos:end="37:71"><expr pos:start="37:69" pos:end="37:71"><name pos:start="37:69" pos:end="37:71">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="37:74" pos:end="37:74">)</operator> <operator pos:start="37:76" pos:end="37:76">&lt;</operator> <literal type="number" pos:start="37:78" pos:end="37:78">0</literal></expr>)</condition><block type="pseudo" pos:start="39:21" pos:end="39:31"><block_content pos:start="39:21" pos:end="39:31">

                    <return pos:start="39:21" pos:end="39:31">return <expr pos:start="39:28" pos:end="39:30"><name pos:start="39:28" pos:end="39:30">err</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:58"><expr pos:start="41:17" pos:end="41:57"><call pos:start="41:17" pos:end="41:57"><name pos:start="41:17" pos:end="41:26">ftp_status</name><argument_list pos:start="41:27" pos:end="41:57">(<argument pos:start="41:28" pos:end="41:28"><expr pos:start="41:28" pos:end="41:28"><name pos:start="41:28" pos:end="41:28">s</name></expr></argument>, <argument pos:start="41:31" pos:end="41:34"><expr pos:start="41:31" pos:end="41:34"><operator pos:start="41:31" pos:end="41:31">&amp;</operator><name pos:start="41:32" pos:end="41:34">err</name></expr></argument>, <argument pos:start="41:37" pos:end="41:40"><expr pos:start="41:37" pos:end="41:40"><name pos:start="41:37" pos:end="41:40">NULL</name></expr></argument>, <argument pos:start="41:43" pos:end="41:46"><expr pos:start="41:43" pos:end="41:46"><name pos:start="41:43" pos:end="41:46">NULL</name></expr></argument>, <argument pos:start="41:49" pos:end="41:52"><expr pos:start="41:49" pos:end="41:52"><name pos:start="41:49" pos:end="41:52">NULL</name></expr></argument>, <argument pos:start="41:55" pos:end="41:56"><expr pos:start="41:55" pos:end="41:56"><operator pos:start="41:55" pos:end="41:55">-</operator><literal type="number" pos:start="41:56" pos:end="41:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="43:15" pos:end="45:39">else<block type="pseudo" pos:start="45:17" pos:end="45:39"><block_content pos:start="45:17" pos:end="45:39">

                <return pos:start="45:17" pos:end="45:39">return <expr pos:start="45:24" pos:end="45:38"><call pos:start="45:24" pos:end="45:38"><name pos:start="45:24" pos:end="45:30">AVERROR</name><argument_list pos:start="45:31" pos:end="45:38">(<argument pos:start="45:32" pos:end="45:37"><expr pos:start="45:32" pos:end="45:37"><name pos:start="45:32" pos:end="45:37">EACCES</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:21">(<expr pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:15">err</name> <operator pos:start="49:17" pos:end="49:18">!=</operator> <literal type="number" pos:start="49:20" pos:end="49:20">2</literal></expr>)</condition> <block pos:start="49:23" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:35">

            <return pos:start="51:13" pos:end="51:35">return <expr pos:start="51:20" pos:end="51:34"><call pos:start="51:20" pos:end="51:34"><name pos:start="51:20" pos:end="51:26">AVERROR</name><argument_list pos:start="51:27" pos:end="51:34">(<argument pos:start="51:28" pos:end="51:33"><expr pos:start="51:28" pos:end="51:33"><name pos:start="51:28" pos:end="51:33">EACCES</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="89:5">else <block pos:start="55:12" pos:end="89:5">{<block_content pos:start="57:9" pos:end="87:9">

        <decl_stmt pos:start="57:9" pos:end="57:51"><decl pos:start="57:9" pos:end="57:50"><type pos:start="57:9" pos:end="57:19"><specifier pos:start="57:9" pos:end="57:13">const</specifier> <name pos:start="57:15" pos:end="57:18">char</name><modifier pos:start="57:19" pos:end="57:19">*</modifier></type> <name pos:start="57:21" pos:end="57:27">command</name> <init pos:start="57:29" pos:end="57:50">= <expr pos:start="57:31" pos:end="57:50"><literal type="string" pos:start="57:31" pos:end="57:50">"USER anonymous\r\n"</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="59:9" pos:end="61:23"><if pos:start="59:9" pos:end="61:23">if <condition pos:start="59:12" pos:end="59:79">(<expr pos:start="59:13" pos:end="59:78"><operator pos:start="59:13" pos:end="59:13">(</operator><name pos:start="59:14" pos:end="59:16">err</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <call pos:start="59:20" pos:end="59:73"><name pos:start="59:20" pos:end="59:30">ffurl_write</name><argument_list pos:start="59:31" pos:end="59:73">(<argument pos:start="59:32" pos:end="59:46"><expr pos:start="59:32" pos:end="59:46"><name pos:start="59:32" pos:end="59:46"><name pos:start="59:32" pos:end="59:32">s</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:46">conn_control</name></name></expr></argument>, <argument pos:start="59:49" pos:end="59:55"><expr pos:start="59:49" pos:end="59:55"><name pos:start="59:49" pos:end="59:55">command</name></expr></argument>, <argument pos:start="59:58" pos:end="59:72"><expr pos:start="59:58" pos:end="59:72"><call pos:start="59:58" pos:end="59:72"><name pos:start="59:58" pos:end="59:63">strlen</name><argument_list pos:start="59:64" pos:end="59:72">(<argument pos:start="59:65" pos:end="59:71"><expr pos:start="59:65" pos:end="59:71"><name pos:start="59:65" pos:end="59:71">command</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="59:74" pos:end="59:74">)</operator> <operator pos:start="59:76" pos:end="59:76">&lt;</operator> <literal type="number" pos:start="59:78" pos:end="59:78">0</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:23"><block_content pos:start="61:13" pos:end="61:23">

            <return pos:start="61:13" pos:end="61:23">return <expr pos:start="61:20" pos:end="61:22"><name pos:start="61:20" pos:end="61:22">err</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:50"><expr pos:start="63:9" pos:end="63:49"><call pos:start="63:9" pos:end="63:49"><name pos:start="63:9" pos:end="63:18">ftp_status</name><argument_list pos:start="63:19" pos:end="63:49">(<argument pos:start="63:20" pos:end="63:20"><expr pos:start="63:20" pos:end="63:20"><name pos:start="63:20" pos:end="63:20">s</name></expr></argument>, <argument pos:start="63:23" pos:end="63:26"><expr pos:start="63:23" pos:end="63:26"><operator pos:start="63:23" pos:end="63:23">&amp;</operator><name pos:start="63:24" pos:end="63:26">err</name></expr></argument>, <argument pos:start="63:29" pos:end="63:32"><expr pos:start="63:29" pos:end="63:32"><name pos:start="63:29" pos:end="63:32">NULL</name></expr></argument>, <argument pos:start="63:35" pos:end="63:38"><expr pos:start="63:35" pos:end="63:38"><name pos:start="63:35" pos:end="63:38">NULL</name></expr></argument>, <argument pos:start="63:41" pos:end="63:44"><expr pos:start="63:41" pos:end="63:44"><name pos:start="63:41" pos:end="63:44">NULL</name></expr></argument>, <argument pos:start="63:47" pos:end="63:48"><expr pos:start="63:47" pos:end="63:48"><operator pos:start="63:47" pos:end="63:47">-</operator><literal type="number" pos:start="63:48" pos:end="63:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="81:9"><if pos:start="65:9" pos:end="81:9">if <condition pos:start="65:12" pos:end="65:21">(<expr pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:15">err</name> <operator pos:start="65:17" pos:end="65:18">==</operator> <literal type="number" pos:start="65:20" pos:end="65:20">3</literal></expr>)</condition> <block pos:start="65:23" pos:end="81:9">{<block_content pos:start="67:13" pos:end="79:54">

            <if_stmt pos:start="67:13" pos:end="73:66"><if pos:start="67:13" pos:end="71:13">if <condition pos:start="67:16" pos:end="67:38">(<expr pos:start="67:17" pos:end="67:37"><name pos:start="67:17" pos:end="67:37"><name pos:start="67:17" pos:end="67:17">s</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:37">anonymous_password</name></name></expr>)</condition> <block pos:start="67:40" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:81">

                <expr_stmt pos:start="69:17" pos:end="69:81"><expr pos:start="69:17" pos:end="69:80"><call pos:start="69:17" pos:end="69:80"><name pos:start="69:17" pos:end="69:24">snprintf</name><argument_list pos:start="69:25" pos:end="69:80">(<argument pos:start="69:26" pos:end="69:28"><expr pos:start="69:26" pos:end="69:28"><name pos:start="69:26" pos:end="69:28">buf</name></expr></argument>, <argument pos:start="69:31" pos:end="69:41"><expr pos:start="69:31" pos:end="69:41"><sizeof pos:start="69:31" pos:end="69:41">sizeof<argument_list pos:start="69:37" pos:end="69:41">(<argument pos:start="69:38" pos:end="69:40"><expr pos:start="69:38" pos:end="69:40"><name pos:start="69:38" pos:end="69:40">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="69:44" pos:end="69:56"><expr pos:start="69:44" pos:end="69:56"><literal type="string" pos:start="69:44" pos:end="69:56">"PASS %s\r\n"</literal></expr></argument>, <argument pos:start="69:59" pos:end="69:79"><expr pos:start="69:59" pos:end="69:79"><name pos:start="69:59" pos:end="69:79"><name pos:start="69:59" pos:end="69:59">s</name><operator pos:start="69:60" pos:end="69:61">-&gt;</operator><name pos:start="69:62" pos:end="69:79">anonymous_password</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="71:15" pos:end="73:66">else<block type="pseudo" pos:start="73:17" pos:end="73:66"><block_content pos:start="73:17" pos:end="73:66">

                <expr_stmt pos:start="73:17" pos:end="73:66"><expr pos:start="73:17" pos:end="73:65"><call pos:start="73:17" pos:end="73:65"><name pos:start="73:17" pos:end="73:24">snprintf</name><argument_list pos:start="73:25" pos:end="73:65">(<argument pos:start="73:26" pos:end="73:28"><expr pos:start="73:26" pos:end="73:28"><name pos:start="73:26" pos:end="73:28">buf</name></expr></argument>, <argument pos:start="73:31" pos:end="73:41"><expr pos:start="73:31" pos:end="73:41"><sizeof pos:start="73:31" pos:end="73:41">sizeof<argument_list pos:start="73:37" pos:end="73:41">(<argument pos:start="73:38" pos:end="73:40"><expr pos:start="73:38" pos:end="73:40"><name pos:start="73:38" pos:end="73:40">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="73:44" pos:end="73:64"><expr pos:start="73:44" pos:end="73:64"><literal type="string" pos:start="73:44" pos:end="73:64">"PASS nopassword\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="75:13" pos:end="77:27"><if pos:start="75:13" pos:end="77:27">if <condition pos:start="75:16" pos:end="75:75">(<expr pos:start="75:17" pos:end="75:74"><operator pos:start="75:17" pos:end="75:17">(</operator><name pos:start="75:18" pos:end="75:20">err</name> <operator pos:start="75:22" pos:end="75:22">=</operator> <call pos:start="75:24" pos:end="75:69"><name pos:start="75:24" pos:end="75:34">ffurl_write</name><argument_list pos:start="75:35" pos:end="75:69">(<argument pos:start="75:36" pos:end="75:50"><expr pos:start="75:36" pos:end="75:50"><name pos:start="75:36" pos:end="75:50"><name pos:start="75:36" pos:end="75:36">s</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:50">conn_control</name></name></expr></argument>, <argument pos:start="75:53" pos:end="75:55"><expr pos:start="75:53" pos:end="75:55"><name pos:start="75:53" pos:end="75:55">buf</name></expr></argument>, <argument pos:start="75:58" pos:end="75:68"><expr pos:start="75:58" pos:end="75:68"><call pos:start="75:58" pos:end="75:68"><name pos:start="75:58" pos:end="75:63">strlen</name><argument_list pos:start="75:64" pos:end="75:68">(<argument pos:start="75:65" pos:end="75:67"><expr pos:start="75:65" pos:end="75:67"><name pos:start="75:65" pos:end="75:67">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="75:70" pos:end="75:70">)</operator> <operator pos:start="75:72" pos:end="75:72">&lt;</operator> <literal type="number" pos:start="75:74" pos:end="75:74">0</literal></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:27"><block_content pos:start="77:17" pos:end="77:27">

                <return pos:start="77:17" pos:end="77:27">return <expr pos:start="77:24" pos:end="77:26"><name pos:start="77:24" pos:end="77:26">err</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:54"><expr pos:start="79:13" pos:end="79:53"><call pos:start="79:13" pos:end="79:53"><name pos:start="79:13" pos:end="79:22">ftp_status</name><argument_list pos:start="79:23" pos:end="79:53">(<argument pos:start="79:24" pos:end="79:24"><expr pos:start="79:24" pos:end="79:24"><name pos:start="79:24" pos:end="79:24">s</name></expr></argument>, <argument pos:start="79:27" pos:end="79:30"><expr pos:start="79:27" pos:end="79:30"><operator pos:start="79:27" pos:end="79:27">&amp;</operator><name pos:start="79:28" pos:end="79:30">err</name></expr></argument>, <argument pos:start="79:33" pos:end="79:36"><expr pos:start="79:33" pos:end="79:36"><name pos:start="79:33" pos:end="79:36">NULL</name></expr></argument>, <argument pos:start="79:39" pos:end="79:42"><expr pos:start="79:39" pos:end="79:42"><name pos:start="79:39" pos:end="79:42">NULL</name></expr></argument>, <argument pos:start="79:45" pos:end="79:48"><expr pos:start="79:45" pos:end="79:48"><name pos:start="79:45" pos:end="79:48">NULL</name></expr></argument>, <argument pos:start="79:51" pos:end="79:52"><expr pos:start="79:51" pos:end="79:52"><operator pos:start="79:51" pos:end="79:51">-</operator><literal type="number" pos:start="79:52" pos:end="79:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="83:9" pos:end="87:9"><if pos:start="83:9" pos:end="87:9">if <condition pos:start="83:12" pos:end="83:21">(<expr pos:start="83:13" pos:end="83:20"><name pos:start="83:13" pos:end="83:15">err</name> <operator pos:start="83:17" pos:end="83:18">!=</operator> <literal type="number" pos:start="83:20" pos:end="83:20">2</literal></expr>)</condition> <block pos:start="83:23" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:35">

            <return pos:start="85:13" pos:end="85:35">return <expr pos:start="85:20" pos:end="85:34"><call pos:start="85:20" pos:end="85:34"><name pos:start="85:20" pos:end="85:26">AVERROR</name><argument_list pos:start="85:27" pos:end="85:34">(<argument pos:start="85:28" pos:end="85:33"><expr pos:start="85:28" pos:end="85:33"><name pos:start="85:28" pos:end="85:33">EACCES</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
