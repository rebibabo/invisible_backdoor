<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3213.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name> <name pos:start="1:19" pos:end="1:24">RENAME</name></type>(<name pos:start="1:26" pos:end="1:37">yuv420_rgb15</name>)<parameter_list pos:start="1:39" pos:end="3:60">(<parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:49">SwsContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">c</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:68"><decl pos:start="1:55" pos:end="1:68"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:61">uint8_t</name><modifier pos:start="1:62" pos:end="1:62">*</modifier></type> <name pos:start="1:64" pos:end="1:68"><name pos:start="1:64" pos:end="1:66">src</name><index pos:start="1:67" pos:end="1:68">[]</index></name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:85"><decl pos:start="1:71" pos:end="1:85"><type pos:start="1:71" pos:end="1:83"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:85"><name pos:start="1:75" pos:end="1:83">srcStride</name><index pos:start="1:84" pos:end="1:85">[]</index></name></decl></parameter>, <parameter pos:start="1:88" pos:end="1:100"><decl pos:start="1:88" pos:end="1:100"><type pos:start="1:88" pos:end="1:100"><name pos:start="1:88" pos:end="1:90">int</name></type> <name pos:start="1:92" pos:end="1:100">srcSliceY</name></decl></parameter>,

             <parameter pos:start="3:14" pos:end="3:26"><decl pos:start="3:14" pos:end="3:26"><type pos:start="3:14" pos:end="3:26"><name pos:start="3:14" pos:end="3:16">int</name></type> <name pos:start="3:18" pos:end="3:26">srcSliceH</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:35">uint8_t</name><modifier pos:start="3:36" pos:end="3:36">*</modifier></type> <name pos:start="3:38" pos:end="3:42"><name pos:start="3:38" pos:end="3:40">dst</name><index pos:start="3:41" pos:end="3:42">[]</index></name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:59"><decl pos:start="3:45" pos:end="3:59"><type pos:start="3:45" pos:end="3:57"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:59"><name pos:start="3:49" pos:end="3:57">dstStride</name><index pos:start="3:58" pos:end="3:59">[]</index></name></decl></parameter>)</parameter_list><block pos:start="3:61" pos:end="175:1">{<block_content pos:start="5:5" pos:end="173:21">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">y</name></decl>, <decl pos:start="5:12" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:17">h_size</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if<condition pos:start="9:7" pos:end="9:39">(<expr pos:start="9:8" pos:end="9:38"><name pos:start="9:8" pos:end="9:19"><name pos:start="9:8" pos:end="9:8">c</name><operator pos:start="9:9" pos:end="9:10">-&gt;</operator><name pos:start="9:11" pos:end="9:19">srcFormat</name></name> <operator pos:start="9:21" pos:end="9:22">==</operator> <name pos:start="9:24" pos:end="9:38">PIX_FMT_YUV422P</name></expr>)</condition><block pos:start="9:40" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:26">

	<expr_stmt pos:start="11:9" pos:end="11:26"><expr pos:start="11:9" pos:end="11:25"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:17">srcStride</name><index pos:start="11:18" pos:end="11:20">[<expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">1</literal></expr>]</index></name> <operator pos:start="11:22" pos:end="11:23">*=</operator> <literal type="number" pos:start="11:25" pos:end="11:25">2</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="13:9" pos:end="13:26"><expr pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:17">srcStride</name><index pos:start="13:18" pos:end="13:20">[<expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">2</literal></expr>]</index></name> <operator pos:start="13:22" pos:end="13:23">*=</operator> <literal type="number" pos:start="13:25" pos:end="13:25">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:10">h_size</name><operator pos:start="19:11" pos:end="19:11">=</operator> <operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:20"><name pos:start="19:14" pos:end="19:14">c</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:20">dstW</name></name><operator pos:start="19:21" pos:end="19:21">+</operator><literal type="number" pos:start="19:22" pos:end="19:22">7</literal><operator pos:start="19:23" pos:end="19:23">)</operator><operator pos:start="19:24" pos:end="19:24">&amp;</operator><operator pos:start="19:25" pos:end="19:25">~</operator><literal type="number" pos:start="19:26" pos:end="19:26">7</literal></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="21:42"><if pos:start="21:5" pos:end="21:42">if<condition pos:start="21:7" pos:end="21:31">(<expr pos:start="21:8" pos:end="21:30"><name pos:start="21:8" pos:end="21:13">h_size</name><operator pos:start="21:14" pos:end="21:14">*</operator><literal type="number" pos:start="21:15" pos:end="21:15">2</literal> <operator pos:start="21:17" pos:end="21:17">&gt;</operator> <name pos:start="21:19" pos:end="21:30"><name pos:start="21:19" pos:end="21:27">dstStride</name><index pos:start="21:28" pos:end="21:30">[<expr pos:start="21:29" pos:end="21:29"><literal type="number" pos:start="21:29" pos:end="21:29">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="21:33" pos:end="21:42"><block_content pos:start="21:33" pos:end="21:42"> <expr_stmt pos:start="21:33" pos:end="21:42"><expr pos:start="21:33" pos:end="21:41"><name pos:start="21:33" pos:end="21:38">h_size</name><operator pos:start="21:39" pos:end="21:40">-=</operator><literal type="number" pos:start="21:41" pos:end="21:41">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    

    <asm pos:start="25:5" pos:end="25:62">__asm__ <specifier pos:start="25:13" pos:end="25:24">__volatile__</specifier> ("pxor %mm4, %mm4;" <comment type="block" pos:start="25:46" pos:end="25:59">/* zero mm4 */</comment> );</asm>

<comment type="line" pos:start="27:1" pos:end="27:131">//printf("%X %X %X %X %X %X %X %X %X %X\n", (int)&amp;c-&gt;redDither, (int)&amp;b5Dither, (int)src[0], (int)src[1], (int)src[2], (int)dst[0],</comment>

<comment type="line" pos:start="29:1" pos:end="29:55">//srcStride[0],srcStride[1],srcStride[2],dstStride[0]);</comment>

    <for pos:start="31:5" pos:end="167:5">for <control pos:start="31:9" pos:end="31:33">(<init pos:start="31:10" pos:end="31:14"><expr pos:start="31:10" pos:end="31:13"><name pos:start="31:10" pos:end="31:10">y</name><operator pos:start="31:11" pos:end="31:11">=</operator> <literal type="number" pos:start="31:13" pos:end="31:13">0</literal></expr>;</init> <condition pos:start="31:16" pos:end="31:27"><expr pos:start="31:16" pos:end="31:26"><name pos:start="31:16" pos:end="31:16">y</name><operator pos:start="31:17" pos:end="31:17">&lt;</operator><name pos:start="31:18" pos:end="31:26">srcSliceH</name></expr>;</condition> <incr pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:29">y</name><operator pos:start="31:30" pos:end="31:31">++</operator></expr></incr> )</control> <block pos:start="31:35" pos:end="167:5">{<block_content pos:start="33:9" pos:end="165:23">

	<decl_stmt pos:start="33:9" pos:end="33:62"><decl pos:start="33:9" pos:end="33:61"><type pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:15">uint8_t</name> <modifier pos:start="33:17" pos:end="33:17">*</modifier></type><name pos:start="33:18" pos:end="33:23">_image</name> <init pos:start="33:25" pos:end="33:61">= <expr pos:start="33:27" pos:end="33:61"><name pos:start="33:27" pos:end="33:32"><name pos:start="33:27" pos:end="33:29">dst</name><index pos:start="33:30" pos:end="33:32">[<expr pos:start="33:31" pos:end="33:31"><literal type="number" pos:start="33:31" pos:end="33:31">0</literal></expr>]</index></name> <operator pos:start="33:34" pos:end="33:34">+</operator> <operator pos:start="33:36" pos:end="33:36">(</operator><name pos:start="33:37" pos:end="33:37">y</name><operator pos:start="33:38" pos:end="33:38">+</operator><name pos:start="33:39" pos:end="33:47">srcSliceY</name><operator pos:start="33:48" pos:end="33:48">)</operator><operator pos:start="33:49" pos:end="33:49">*</operator><name pos:start="33:50" pos:end="33:61"><name pos:start="33:50" pos:end="33:58">dstStride</name><index pos:start="33:59" pos:end="33:61">[<expr pos:start="33:60" pos:end="33:60"><literal type="number" pos:start="33:60" pos:end="33:60">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="35:9" pos:end="35:47"><decl pos:start="35:9" pos:end="35:46"><type pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:15">uint8_t</name> <modifier pos:start="35:17" pos:end="35:17">*</modifier></type><name pos:start="35:18" pos:end="35:20">_py</name> <init pos:start="35:22" pos:end="35:46">= <expr pos:start="35:24" pos:end="35:46"><name pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:26">src</name><index pos:start="35:27" pos:end="35:29">[<expr pos:start="35:28" pos:end="35:28"><literal type="number" pos:start="35:28" pos:end="35:28">0</literal></expr>]</index></name> <operator pos:start="35:31" pos:end="35:31">+</operator> <name pos:start="35:33" pos:end="35:33">y</name><operator pos:start="35:34" pos:end="35:34">*</operator><name pos:start="35:35" pos:end="35:46"><name pos:start="35:35" pos:end="35:43">srcStride</name><index pos:start="35:44" pos:end="35:46">[<expr pos:start="35:45" pos:end="35:45"><literal type="number" pos:start="35:45" pos:end="35:45">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="37:9" pos:end="37:52"><decl pos:start="37:9" pos:end="37:51"><type pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:15">uint8_t</name> <modifier pos:start="37:17" pos:end="37:17">*</modifier></type><name pos:start="37:18" pos:end="37:20">_pu</name> <init pos:start="37:22" pos:end="37:51">= <expr pos:start="37:24" pos:end="37:51"><name pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:26">src</name><index pos:start="37:27" pos:end="37:29">[<expr pos:start="37:28" pos:end="37:28"><literal type="number" pos:start="37:28" pos:end="37:28">1</literal></expr>]</index></name> <operator pos:start="37:31" pos:end="37:31">+</operator> <operator pos:start="37:33" pos:end="37:33">(</operator><name pos:start="37:34" pos:end="37:34">y</name><operator pos:start="37:35" pos:end="37:36">&gt;&gt;</operator><literal type="number" pos:start="37:37" pos:end="37:37">1</literal><operator pos:start="37:38" pos:end="37:38">)</operator><operator pos:start="37:39" pos:end="37:39">*</operator><name pos:start="37:40" pos:end="37:51"><name pos:start="37:40" pos:end="37:48">srcStride</name><index pos:start="37:49" pos:end="37:51">[<expr pos:start="37:50" pos:end="37:50"><literal type="number" pos:start="37:50" pos:end="37:50">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="39:9" pos:end="39:52"><decl pos:start="39:9" pos:end="39:51"><type pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:15">uint8_t</name> <modifier pos:start="39:17" pos:end="39:17">*</modifier></type><name pos:start="39:18" pos:end="39:20">_pv</name> <init pos:start="39:22" pos:end="39:51">= <expr pos:start="39:24" pos:end="39:51"><name pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:26">src</name><index pos:start="39:27" pos:end="39:29">[<expr pos:start="39:28" pos:end="39:28"><literal type="number" pos:start="39:28" pos:end="39:28">2</literal></expr>]</index></name> <operator pos:start="39:31" pos:end="39:31">+</operator> <operator pos:start="39:33" pos:end="39:33">(</operator><name pos:start="39:34" pos:end="39:34">y</name><operator pos:start="39:35" pos:end="39:36">&gt;&gt;</operator><literal type="number" pos:start="39:37" pos:end="39:37">1</literal><operator pos:start="39:38" pos:end="39:38">)</operator><operator pos:start="39:39" pos:end="39:39">*</operator><name pos:start="39:40" pos:end="39:51"><name pos:start="39:40" pos:end="39:48">srcStride</name><index pos:start="39:49" pos:end="39:51">[<expr pos:start="39:50" pos:end="39:50"><literal type="number" pos:start="39:50" pos:end="39:50">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="41:9" pos:end="41:30"><decl pos:start="41:9" pos:end="41:29"><type pos:start="41:9" pos:end="41:12"><name pos:start="41:9" pos:end="41:12">long</name></type> <name pos:start="41:14" pos:end="41:18">index</name><init pos:start="41:19" pos:end="41:29">= <expr pos:start="41:21" pos:end="41:29"><operator pos:start="41:21" pos:end="41:21">-</operator><name pos:start="41:22" pos:end="41:27">h_size</name><operator pos:start="41:28" pos:end="41:28">/</operator><literal type="number" pos:start="41:29" pos:end="41:29">2</literal></expr></init></decl>;</decl_stmt>



	<expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:16">b5Dither</name><operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:30"><name pos:start="45:19" pos:end="45:25">dither8</name><index pos:start="45:26" pos:end="45:30">[<expr pos:start="45:27" pos:end="45:29"><name pos:start="45:27" pos:end="45:27">y</name><operator pos:start="45:28" pos:end="45:28">&amp;</operator><literal type="number" pos:start="45:29" pos:end="45:29">1</literal></expr>]</index></name></expr>;</expr_stmt>

	<expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:16">g6Dither</name><operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:30"><name pos:start="47:19" pos:end="47:25">dither4</name><index pos:start="47:26" pos:end="47:30">[<expr pos:start="47:27" pos:end="47:29"><name pos:start="47:27" pos:end="47:27">y</name><operator pos:start="47:28" pos:end="47:28">&amp;</operator><literal type="number" pos:start="47:29" pos:end="47:29">1</literal></expr>]</index></name></expr>;</expr_stmt>

	<expr_stmt pos:start="49:9" pos:end="49:31"><expr pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:16">g5Dither</name><operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:30"><name pos:start="49:19" pos:end="49:25">dither8</name><index pos:start="49:26" pos:end="49:30">[<expr pos:start="49:27" pos:end="49:29"><name pos:start="49:27" pos:end="49:27">y</name><operator pos:start="49:28" pos:end="49:28">&amp;</operator><literal type="number" pos:start="49:29" pos:end="49:29">1</literal></expr>]</index></name></expr>;</expr_stmt>

	<expr_stmt pos:start="51:9" pos:end="51:35"><expr pos:start="51:9" pos:end="51:34"><name pos:start="51:9" pos:end="51:16">r5Dither</name><operator pos:start="51:17" pos:end="51:17">=</operator> <name pos:start="51:19" pos:end="51:34"><name pos:start="51:19" pos:end="51:25">dither8</name><index pos:start="51:26" pos:end="51:34">[<expr pos:start="51:27" pos:end="51:33"><operator pos:start="51:27" pos:end="51:27">(</operator><name pos:start="51:28" pos:end="51:28">y</name><operator pos:start="51:29" pos:end="51:29">+</operator><literal type="number" pos:start="51:30" pos:end="51:30">1</literal><operator pos:start="51:31" pos:end="51:31">)</operator><operator pos:start="51:32" pos:end="51:32">&amp;</operator><literal type="number" pos:start="51:33" pos:end="51:33">1</literal></expr>]</index></name></expr>;</expr_stmt>

	    <comment type="block" pos:start="53:13" pos:end="55:42">/* this mmx assembly code deals with SINGLE scan line at a time, it convert 8

	       pixels in each iteration */</comment>

	    <asm pos:start="57:13" pos:end="165:23">__asm__ <specifier pos:start="57:21" pos:end="57:32">__volatile__</specifier> (

	<comment type="block" pos:start="59:9" pos:end="59:51">/* load data for start of next scan line */</comment>

		     "movd (%2, %0), %%mm0;" <comment type="block" pos:start="61:46" pos:end="61:84">/* Load 4 Cb 00 00 00 00 u3 u2 u1 u0 */</comment>

		     "movd (%3, %0), %%mm1;" <comment type="block" pos:start="63:46" pos:end="63:84">/* Load 4 Cr 00 00 00 00 v3 v2 v1 v0 */</comment>

		     "movq (%5, %0, 2), %%mm6;" <comment type="block" pos:start="65:49" pos:end="65:87">/* Load 8  Y Y7 Y6 Y5 Y4 Y3 Y2 Y1 Y0 */</comment>

<comment type="line" pos:start="67:1" pos:end="67:53">//		    ".balign 16			\n\t"</comment>

		    "1:				\n\t"

YUV2RGB



<cpp:ifdef pos:start="75:1" pos:end="75:18">#<cpp:directive pos:start="75:2" pos:end="75:6">ifdef</cpp:directive> <name pos:start="75:8" pos:end="75:18">DITHER1XBPP</name></cpp:ifdef>

			"paddusb "MANGLE(b5Dither)", %%mm0	\n\t"

			"paddusb "MANGLE(g5Dither)", %%mm2	\n\t"

			"paddusb "MANGLE(r5Dither)", %%mm1	\n\t"

<cpp:endif pos:start="83:1" pos:end="83:6">#<cpp:directive pos:start="83:2" pos:end="83:6">endif</cpp:directive></cpp:endif>



		     <comment type="block" pos:start="87:22" pos:end="87:49">/* mask unneeded bits off */</comment>

		     "pand "MANGLE(mmx_redmask)", %%mm0;" <comment type="block" pos:start="89:59" pos:end="89:99">/* b7b6b5b4 b3_0_0_0 b7b6b5b4 b3_0_0_0 */</comment>

		     "pand "MANGLE(mmx_redmask)", %%mm2;" <comment type="block" pos:start="91:59" pos:end="91:99">/* g7g6g5g4 g3_0_0_0 g7g6g5g4 g3_0_0_0 */</comment>

		     "pand "MANGLE(mmx_redmask)", %%mm1;" <comment type="block" pos:start="93:59" pos:end="93:99">/* r7r6r5r4 r3_0_0_0 r7r6r5r4 r3_0_0_0 */</comment>



		     "psrlw $3,%%mm0;" <comment type="block" pos:start="97:40" pos:end="97:80">/* 0_0_0_b7 b6b5b4b3 0_0_0_b7 b6b5b4b3 */</comment>

		     "psrlw $1,%%mm1;"            <comment type="block" pos:start="99:51" pos:end="99:92">/* 0_r7r6r5  r4r3_0_0 0_r7r6r5 r4r3_0_0 */</comment>

		     "pxor %%mm4, %%mm4;" <comment type="block" pos:start="101:43" pos:end="101:56">/* zero mm4 */</comment>



		     "movq %%mm0, %%mm5;" <comment type="block" pos:start="105:43" pos:end="105:58">/* Copy B7-B0 */</comment>

		     "movq %%mm2, %%mm7;" <comment type="block" pos:start="107:43" pos:end="107:58">/* Copy G7-G0 */</comment>



		     <comment type="block" pos:start="111:22" pos:end="111:74">/* convert rgb24 plane to rgb16 pack for pixel 0-3 */</comment>

		     "punpcklbw %%mm4, %%mm2;" <comment type="block" pos:start="113:48" pos:end="113:86">/* 0_0_0_0 0_0_0_0 g7g6g5g4 g3_0_0_0 */</comment>

		     "punpcklbw %%mm1, %%mm0;" <comment type="block" pos:start="115:48" pos:end="115:88">/* r7r6r5r4 r3_0_0_0 0_0_0_b7 b6b5b4b3 */</comment>



		     "psllw $2, %%mm2;" <comment type="block" pos:start="119:41" pos:end="119:79">/* 0_0_0_0 0_0_g7g6 g5g4g3_0 0_0_0_0 */</comment>

		     "por %%mm2, %%mm0;" <comment type="block" pos:start="121:42" pos:end="121:82">/* 0_r7r6r5 r4r3g7g6 g5g4g3b7 b6b5b4b3 */</comment>



		     "movq 8 (%5, %0, 2), %%mm6;" <comment type="block" pos:start="125:51" pos:end="125:88">/* Load 8 Y Y7 Y6 Y5 Y4 Y3 Y2 Y1 Y0 */</comment>

		     MOVNTQ " %%mm0, (%1);" <comment type="block" pos:start="127:45" pos:end="127:65">/* store pixel 0-3 */</comment>



		     <comment type="block" pos:start="131:22" pos:end="131:74">/* convert rgb24 plane to rgb16 pack for pixel 0-3 */</comment>

		     "punpckhbw %%mm4, %%mm7;" <comment type="block" pos:start="133:48" pos:end="133:86">/* 0_0_0_0 0_0_0_0 0_g7g6g5 g4g3_0_0 */</comment>

		     "punpckhbw %%mm1, %%mm5;" <comment type="block" pos:start="135:48" pos:end="135:88">/* r7r6r5r4 r3_0_0_0 0_0_0_b7 b6b5b4b3 */</comment>



		     "psllw $2, %%mm7;" <comment type="block" pos:start="139:41" pos:end="139:79">/* 0_0_0_0 0_0_g7g6 g5g4g3_0 0_0_0_0 */</comment>

		     "movd 4 (%2, %0), %%mm0;" <comment type="block" pos:start="141:48" pos:end="141:86">/* Load 4 Cb 00 00 00 00 u3 u2 u1 u0 */</comment>



		     "por %%mm7, %%mm5;" <comment type="block" pos:start="145:42" pos:end="145:82">/* 0_r7r6r5 r4r3g7g6 g5g4g3b7 b6b5b4b3 */</comment>

		     "movd 4 (%3, %0), %%mm1;" <comment type="block" pos:start="147:48" pos:end="147:86">/* Load 4 Cr 00 00 00 00 v3 v2 v1 v0 */</comment>



		     MOVNTQ " %%mm5, 8 (%1);" <comment type="block" pos:start="151:47" pos:end="151:67">/* store pixel 4-7 */</comment>

		     

		     "add $16, %1			\n\t"

		     "add $4, %0			\n\t"

		     " js 1b				\n\t"

		     : "+r" (index), "+r" (_image)

		     : "r" (_pu - index), "r" (_pv - index), "r"(&amp;c-&gt;redDither), "r" (_py - 2*index)

		     );</asm>

    </block_content>}</block></for>



    <asm pos:start="171:5" pos:end="171:32">__asm__ <specifier pos:start="171:13" pos:end="171:24">__volatile__</specifier> (EMMS);</asm>

    <return pos:start="173:5" pos:end="173:21">return <expr pos:start="173:12" pos:end="173:20"><name pos:start="173:12" pos:end="173:20">srcSliceH</name></expr>;</return>

</block_content>}</block></function>
</unit>
