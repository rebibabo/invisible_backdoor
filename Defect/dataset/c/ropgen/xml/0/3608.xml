<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3608.c" pos:tabs="8"><function pos:start="1:1" pos:end="239:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">http_server</name><parameter_list pos:start="1:23" pos:end="1:28">(<parameter pos:start="1:24" pos:end="1:27"><decl pos:start="1:24" pos:end="1:27"><type pos:start="1:24" pos:end="1:27"><name pos:start="1:24" pos:end="1:27">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="239:1">{<block_content pos:start="5:5" pos:end="237:5">

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">server_fd</name></decl>, <decl pos:start="5:20" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:22">ret</name></decl>, <decl pos:start="5:25" pos:end="5:38"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:25" pos:end="5:38">rtsp_server_fd</name></decl>, <decl pos:start="5:41" pos:end="5:45"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:41" pos:end="5:45">delay</name></decl>, <decl pos:start="5:48" pos:end="5:53"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:48" pos:end="5:53">delay1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:68"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:17">pollfd</name></name></type> <name pos:start="7:19" pos:end="7:54"><name pos:start="7:19" pos:end="7:28">poll_table</name><index pos:start="7:29" pos:end="7:54">[<expr pos:start="7:30" pos:end="7:53"><name pos:start="7:30" pos:end="7:49">HTTP_MAX_CONNECTIONS</name> <operator pos:start="7:51" pos:end="7:51">+</operator> <literal type="number" pos:start="7:53" pos:end="7:53">2</literal></expr>]</index></name></decl>, <decl pos:start="7:57" pos:end="7:67"><type ref="prev" pos:start="7:5" pos:end="7:17"><modifier pos:start="7:57" pos:end="7:57">*</modifier></type><name pos:start="7:58" pos:end="7:67">poll_entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">HTTPContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:18">c</name></decl>, <decl pos:start="9:21" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:17"><modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:27">c_next</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:50"><expr pos:start="13:5" pos:end="13:49"><name pos:start="13:5" pos:end="13:13">server_fd</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <call pos:start="13:17" pos:end="13:49"><name pos:start="13:17" pos:end="13:34">socket_open_listen</name><argument_list pos:start="13:35" pos:end="13:49">(<argument pos:start="13:36" pos:end="13:48"><expr pos:start="13:36" pos:end="13:48"><operator pos:start="13:36" pos:end="13:36">&amp;</operator><name pos:start="13:37" pos:end="13:48">my_http_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if <condition pos:start="15:8" pos:end="15:22">(<expr pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:17">server_fd</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:55"><expr pos:start="21:5" pos:end="21:54"><name pos:start="21:5" pos:end="21:18">rtsp_server_fd</name> <operator pos:start="21:20" pos:end="21:20">=</operator> <call pos:start="21:22" pos:end="21:54"><name pos:start="21:22" pos:end="21:39">socket_open_listen</name><argument_list pos:start="21:40" pos:end="21:54">(<argument pos:start="21:41" pos:end="21:53"><expr pos:start="21:41" pos:end="21:53"><operator pos:start="21:41" pos:end="21:41">&amp;</operator><name pos:start="21:42" pos:end="21:53">my_rtsp_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:27">(<expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:22">rtsp_server_fd</name> <operator pos:start="23:24" pos:end="23:24">&lt;</operator> <literal type="number" pos:start="23:26" pos:end="23:26">0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><call pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:12">http_log</name><argument_list pos:start="29:13" pos:end="29:35">(<argument pos:start="29:14" pos:end="29:34"><expr pos:start="29:14" pos:end="29:34"><literal type="string" pos:start="29:14" pos:end="29:34">"ffserver started.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><call pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:18">start_children</name><argument_list pos:start="33:19" pos:end="33:30">(<argument pos:start="33:20" pos:end="33:29"><expr pos:start="33:20" pos:end="33:29"><name pos:start="33:20" pos:end="33:29">first_feed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:26"><expr pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:18">first_http_ctx</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:25">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:23"><expr pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:18">nb_connections</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:22"><expr pos:start="43:5" pos:end="43:21"><call pos:start="43:5" pos:end="43:21"><name pos:start="43:5" pos:end="43:19">start_multicast</name><argument_list pos:start="43:20" pos:end="43:21">()</argument_list></call></expr>;</expr_stmt>



    <for pos:start="47:5" pos:end="237:5">for<control pos:start="47:8" pos:end="47:11">(<init pos:start="47:9" pos:end="47:9">;</init><condition pos:start="47:10" pos:end="47:10">;</condition><incr/>)</control> <block pos:start="47:13" pos:end="237:5">{<block_content pos:start="49:9" pos:end="235:9">

        <expr_stmt pos:start="49:9" pos:end="49:32"><expr pos:start="49:9" pos:end="49:31"><name pos:start="49:9" pos:end="49:18">poll_entry</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:31">poll_table</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:35"><expr pos:start="51:9" pos:end="51:34"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:18">poll_entry</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:22">fd</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:34">server_fd</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:36"><expr pos:start="53:9" pos:end="53:35"><name pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:18">poll_entry</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:26">events</name></name> <operator pos:start="53:28" pos:end="53:28">=</operator> <name pos:start="53:30" pos:end="53:35">POLLIN</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:21"><expr pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:18">poll_entry</name><operator pos:start="55:19" pos:end="55:20">++</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:40"><expr pos:start="59:9" pos:end="59:39"><name pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:18">poll_entry</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:22">fd</name></name> <operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:39">rtsp_server_fd</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:36"><expr pos:start="61:9" pos:end="61:35"><name pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:18">poll_entry</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:26">events</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:35">POLLIN</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:21"><expr pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:18">poll_entry</name><operator pos:start="63:19" pos:end="63:20">++</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="67:9" pos:end="67:49">/* wait for events on each HTTP handle */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:27"><expr pos:start="69:9" pos:end="69:26"><name pos:start="69:9" pos:end="69:9">c</name> <operator pos:start="69:11" pos:end="69:11">=</operator> <name pos:start="69:13" pos:end="69:26">first_http_ctx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:21"><expr pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:13">delay</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <literal type="number" pos:start="71:17" pos:end="71:20">1000</literal></expr>;</expr_stmt>

        <while pos:start="73:9" pos:end="163:9">while <condition pos:start="73:15" pos:end="73:25">(<expr pos:start="73:16" pos:end="73:24"><name pos:start="73:16" pos:end="73:16">c</name> <operator pos:start="73:18" pos:end="73:19">!=</operator> <name pos:start="73:21" pos:end="73:24">NULL</name></expr>)</condition> <block pos:start="73:27" pos:end="163:9">{<block_content pos:start="75:13" pos:end="161:24">

            <decl_stmt pos:start="75:13" pos:end="75:19"><decl pos:start="75:13" pos:end="75:18"><type pos:start="75:13" pos:end="75:15"><name pos:start="75:13" pos:end="75:15">int</name></type> <name pos:start="75:17" pos:end="75:18">fd</name></decl>;</decl_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:23"><expr pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:14">fd</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <name pos:start="77:18" pos:end="77:22"><name pos:start="77:18" pos:end="77:18">c</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:22">fd</name></name></expr>;</expr_stmt>

            <switch pos:start="79:13" pos:end="159:13">switch<condition pos:start="79:19" pos:end="79:28">(<expr pos:start="79:20" pos:end="79:27"><name pos:start="79:20" pos:end="79:27"><name pos:start="79:20" pos:end="79:20">c</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:27">state</name></name></expr>)</condition> <block pos:start="79:30" pos:end="159:13">{<block_content pos:start="81:13" pos:end="157:22">

            <case pos:start="81:13" pos:end="81:39">case <expr pos:start="81:18" pos:end="81:38"><name pos:start="81:18" pos:end="81:38">HTTPSTATE_SEND_HEADER</name></expr>:</case>

            <case pos:start="83:13" pos:end="83:38">case <expr pos:start="83:18" pos:end="83:37"><name pos:start="83:18" pos:end="83:37">RTSPSTATE_SEND_REPLY</name></expr>:</case>

            <case pos:start="85:13" pos:end="85:39">case <expr pos:start="85:18" pos:end="85:38"><name pos:start="85:18" pos:end="85:38">RTSPSTATE_SEND_PACKET</name></expr>:</case>

                <expr_stmt pos:start="87:17" pos:end="87:43"><expr pos:start="87:17" pos:end="87:42"><name pos:start="87:17" pos:end="87:29"><name pos:start="87:17" pos:end="87:17">c</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:29">poll_entry</name></name> <operator pos:start="87:31" pos:end="87:31">=</operator> <name pos:start="87:33" pos:end="87:42">poll_entry</name></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:36"><expr pos:start="89:17" pos:end="89:35"><name pos:start="89:17" pos:end="89:30"><name pos:start="89:17" pos:end="89:26">poll_entry</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:30">fd</name></name> <operator pos:start="89:32" pos:end="89:32">=</operator> <name pos:start="89:34" pos:end="89:35">fd</name></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:45"><expr pos:start="91:17" pos:end="91:44"><name pos:start="91:17" pos:end="91:34"><name pos:start="91:17" pos:end="91:26">poll_entry</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:34">events</name></name> <operator pos:start="91:36" pos:end="91:36">=</operator> <name pos:start="91:38" pos:end="91:44">POLLOUT</name></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:29"><expr pos:start="93:17" pos:end="93:28"><name pos:start="93:17" pos:end="93:26">poll_entry</name><operator pos:start="93:27" pos:end="93:28">++</operator></expr>;</expr_stmt>

                <break pos:start="95:17" pos:end="95:22">break;</break>

            <case pos:start="97:13" pos:end="97:44">case <expr pos:start="97:18" pos:end="97:43"><name pos:start="97:18" pos:end="97:43">HTTPSTATE_SEND_DATA_HEADER</name></expr>:</case>

            <case pos:start="99:13" pos:end="99:37">case <expr pos:start="99:18" pos:end="99:36"><name pos:start="99:18" pos:end="99:36">HTTPSTATE_SEND_DATA</name></expr>:</case>

            <case pos:start="101:13" pos:end="101:45">case <expr pos:start="101:18" pos:end="101:44"><name pos:start="101:18" pos:end="101:44">HTTPSTATE_SEND_DATA_TRAILER</name></expr>:</case>

                <if_stmt pos:start="103:17" pos:end="129:17"><if pos:start="103:17" pos:end="115:17">if <condition pos:start="103:20" pos:end="103:38">(<expr pos:start="103:21" pos:end="103:37"><operator pos:start="103:21" pos:end="103:21">!</operator><name pos:start="103:22" pos:end="103:37"><name pos:start="103:22" pos:end="103:22">c</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:37">is_packetized</name></name></expr>)</condition> <block pos:start="103:40" pos:end="115:17">{<block_content pos:start="107:21" pos:end="113:33">

                    <comment type="block" pos:start="105:21" pos:end="105:88">/* for TCP, we output as much as we can (may need to put a limit) */</comment>

                    <expr_stmt pos:start="107:21" pos:end="107:47"><expr pos:start="107:21" pos:end="107:46"><name pos:start="107:21" pos:end="107:33"><name pos:start="107:21" pos:end="107:21">c</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:33">poll_entry</name></name> <operator pos:start="107:35" pos:end="107:35">=</operator> <name pos:start="107:37" pos:end="107:46">poll_entry</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="109:21" pos:end="109:40"><expr pos:start="109:21" pos:end="109:39"><name pos:start="109:21" pos:end="109:34"><name pos:start="109:21" pos:end="109:30">poll_entry</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:34">fd</name></name> <operator pos:start="109:36" pos:end="109:36">=</operator> <name pos:start="109:38" pos:end="109:39">fd</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:49"><expr pos:start="111:21" pos:end="111:48"><name pos:start="111:21" pos:end="111:38"><name pos:start="111:21" pos:end="111:30">poll_entry</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:38">events</name></name> <operator pos:start="111:40" pos:end="111:40">=</operator> <name pos:start="111:42" pos:end="111:48">POLLOUT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="113:21" pos:end="113:33"><expr pos:start="113:21" pos:end="113:32"><name pos:start="113:21" pos:end="113:30">poll_entry</name><operator pos:start="113:31" pos:end="113:32">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="115:19" pos:end="129:17">else <block pos:start="115:24" pos:end="129:17">{<block_content pos:start="123:21" pos:end="127:39">

                    <comment type="block" pos:start="117:21" pos:end="121:31">/* when ffserver is doing the timing, we work by

                       looking at which packet need to be sent every

                       10 ms */</comment>

                    <expr_stmt pos:start="123:21" pos:end="123:32"><expr pos:start="123:21" pos:end="123:31"><name pos:start="123:21" pos:end="123:26">delay1</name> <operator pos:start="123:28" pos:end="123:28">=</operator> <literal type="number" pos:start="123:30" pos:end="123:31">10</literal></expr>;</expr_stmt> <comment type="block" pos:start="123:34" pos:end="123:71">/* one tick wait XXX: 10 ms assumed */</comment>

                    <if_stmt pos:start="125:21" pos:end="127:39"><if pos:start="125:21" pos:end="127:39">if <condition pos:start="125:24" pos:end="125:39">(<expr pos:start="125:25" pos:end="125:38"><name pos:start="125:25" pos:end="125:30">delay1</name> <operator pos:start="125:32" pos:end="125:32">&lt;</operator> <name pos:start="125:34" pos:end="125:38">delay</name></expr>)</condition><block type="pseudo" pos:start="127:25" pos:end="127:39"><block_content pos:start="127:25" pos:end="127:39">

                        <expr_stmt pos:start="127:25" pos:end="127:39"><expr pos:start="127:25" pos:end="127:38"><name pos:start="127:25" pos:end="127:29">delay</name> <operator pos:start="127:31" pos:end="127:31">=</operator> <name pos:start="127:33" pos:end="127:38">delay1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="131:17" pos:end="131:22">break;</break>

            <case pos:start="133:13" pos:end="133:40">case <expr pos:start="133:18" pos:end="133:39"><name pos:start="133:18" pos:end="133:39">HTTPSTATE_WAIT_REQUEST</name></expr>:</case>

            <case pos:start="135:13" pos:end="135:40">case <expr pos:start="135:18" pos:end="135:39"><name pos:start="135:18" pos:end="135:39">HTTPSTATE_RECEIVE_DATA</name></expr>:</case>

            <case pos:start="137:13" pos:end="137:37">case <expr pos:start="137:18" pos:end="137:36"><name pos:start="137:18" pos:end="137:36">HTTPSTATE_WAIT_FEED</name></expr>:</case>

            <case pos:start="139:13" pos:end="139:40">case <expr pos:start="139:18" pos:end="139:39"><name pos:start="139:18" pos:end="139:39">RTSPSTATE_WAIT_REQUEST</name></expr>:</case>

                <comment type="block" pos:start="141:17" pos:end="141:42">/* need to catch errors */</comment>

                <expr_stmt pos:start="143:17" pos:end="143:43"><expr pos:start="143:17" pos:end="143:42"><name pos:start="143:17" pos:end="143:29"><name pos:start="143:17" pos:end="143:17">c</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:29">poll_entry</name></name> <operator pos:start="143:31" pos:end="143:31">=</operator> <name pos:start="143:33" pos:end="143:42">poll_entry</name></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:36"><expr pos:start="145:17" pos:end="145:35"><name pos:start="145:17" pos:end="145:30"><name pos:start="145:17" pos:end="145:26">poll_entry</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:30">fd</name></name> <operator pos:start="145:32" pos:end="145:32">=</operator> <name pos:start="145:34" pos:end="145:35">fd</name></expr>;</expr_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:44"><expr pos:start="147:17" pos:end="147:43"><name pos:start="147:17" pos:end="147:34"><name pos:start="147:17" pos:end="147:26">poll_entry</name><operator pos:start="147:27" pos:end="147:28">-&gt;</operator><name pos:start="147:29" pos:end="147:34">events</name></name> <operator pos:start="147:36" pos:end="147:36">=</operator> <name pos:start="147:38" pos:end="147:43">POLLIN</name></expr>;</expr_stmt><comment type="block" pos:start="147:45" pos:end="147:70">/* Maybe this will work */</comment>

                <expr_stmt pos:start="149:17" pos:end="149:29"><expr pos:start="149:17" pos:end="149:28"><name pos:start="149:17" pos:end="149:26">poll_entry</name><operator pos:start="149:27" pos:end="149:28">++</operator></expr>;</expr_stmt>

                <break pos:start="151:17" pos:end="151:22">break;</break>

            <default pos:start="153:13" pos:end="153:20">default:</default>

                <expr_stmt pos:start="155:17" pos:end="155:37"><expr pos:start="155:17" pos:end="155:36"><name pos:start="155:17" pos:end="155:29"><name pos:start="155:17" pos:end="155:17">c</name><operator pos:start="155:18" pos:end="155:19">-&gt;</operator><name pos:start="155:20" pos:end="155:29">poll_entry</name></name> <operator pos:start="155:31" pos:end="155:31">=</operator> <name pos:start="155:33" pos:end="155:36">NULL</name></expr>;</expr_stmt>

                <break pos:start="157:17" pos:end="157:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="161:13" pos:end="161:24"><expr pos:start="161:13" pos:end="161:23"><name pos:start="161:13" pos:end="161:13">c</name> <operator pos:start="161:15" pos:end="161:15">=</operator> <name pos:start="161:17" pos:end="161:23"><name pos:start="161:17" pos:end="161:17">c</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:23">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></while>



        <comment type="block" pos:start="167:9" pos:end="169:39">/* wait for an event on one connection. We poll at least every

           second to handle timeouts */</comment>

        <do pos:start="171:9" pos:end="179:27">do <block pos:start="171:12" pos:end="179:9">{<block_content pos:start="173:13" pos:end="177:26">

            <expr_stmt pos:start="173:13" pos:end="173:67"><expr pos:start="173:13" pos:end="173:66"><name pos:start="173:13" pos:end="173:15">ret</name> <operator pos:start="173:17" pos:end="173:17">=</operator> <call pos:start="173:19" pos:end="173:66"><name pos:start="173:19" pos:end="173:22">poll</name><argument_list pos:start="173:23" pos:end="173:66">(<argument pos:start="173:24" pos:end="173:33"><expr pos:start="173:24" pos:end="173:33"><name pos:start="173:24" pos:end="173:33">poll_table</name></expr></argument>, <argument pos:start="173:36" pos:end="173:58"><expr pos:start="173:36" pos:end="173:58"><name pos:start="173:36" pos:end="173:45">poll_entry</name> <operator pos:start="173:47" pos:end="173:47">-</operator> <name pos:start="173:49" pos:end="173:58">poll_table</name></expr></argument>, <argument pos:start="173:61" pos:end="173:65"><expr pos:start="173:61" pos:end="173:65"><name pos:start="173:61" pos:end="173:65">delay</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="175:13" pos:end="177:26"><if pos:start="175:13" pos:end="177:26">if <condition pos:start="175:16" pos:end="175:61">(<expr pos:start="175:17" pos:end="175:60"><name pos:start="175:17" pos:end="175:19">ret</name> <operator pos:start="175:21" pos:end="175:21">&lt;</operator> <literal type="number" pos:start="175:23" pos:end="175:23">0</literal> <operator pos:start="175:25" pos:end="175:26">&amp;&amp;</operator> <name pos:start="175:28" pos:end="175:32">errno</name> <operator pos:start="175:34" pos:end="175:35">!=</operator> <name pos:start="175:37" pos:end="175:42">EAGAIN</name> <operator pos:start="175:44" pos:end="175:45">&amp;&amp;</operator> <name pos:start="175:47" pos:end="175:51">errno</name> <operator pos:start="175:53" pos:end="175:54">!=</operator> <name pos:start="175:56" pos:end="175:60">EINTR</name></expr>)</condition><block type="pseudo" pos:start="177:17" pos:end="177:26"><block_content pos:start="177:17" pos:end="177:26">

                <return pos:start="177:17" pos:end="177:26">return <expr pos:start="177:24" pos:end="177:25"><operator pos:start="177:24" pos:end="177:24">-</operator><literal type="number" pos:start="177:25" pos:end="177:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block> while <condition pos:start="179:17" pos:end="179:26">(<expr pos:start="179:18" pos:end="179:25"><name pos:start="179:18" pos:end="179:20">ret</name> <operator pos:start="179:22" pos:end="179:23">&lt;=</operator> <literal type="number" pos:start="179:25" pos:end="179:25">0</literal></expr>)</condition>;</do>



        <expr_stmt pos:start="183:9" pos:end="183:39"><expr pos:start="183:9" pos:end="183:38"><name pos:start="183:9" pos:end="183:16">cur_time</name> <operator pos:start="183:18" pos:end="183:18">=</operator> <call pos:start="183:20" pos:end="183:31"><name pos:start="183:20" pos:end="183:29">av_gettime</name><argument_list pos:start="183:30" pos:end="183:31">()</argument_list></call> <operator pos:start="183:33" pos:end="183:33">/</operator> <literal type="number" pos:start="183:35" pos:end="183:38">1000</literal></expr>;</expr_stmt>



        <if_stmt pos:start="187:9" pos:end="193:9"><if pos:start="187:9" pos:end="193:9">if <condition pos:start="187:12" pos:end="187:35">(<expr pos:start="187:13" pos:end="187:34"><name pos:start="187:13" pos:end="187:34">need_to_start_children</name></expr>)</condition> <block pos:start="187:37" pos:end="193:9">{<block_content pos:start="189:13" pos:end="191:39">

            <expr_stmt pos:start="189:13" pos:end="189:39"><expr pos:start="189:13" pos:end="189:38"><name pos:start="189:13" pos:end="189:34">need_to_start_children</name> <operator pos:start="189:36" pos:end="189:36">=</operator> <literal type="number" pos:start="189:38" pos:end="189:38">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:39"><expr pos:start="191:13" pos:end="191:38"><call pos:start="191:13" pos:end="191:38"><name pos:start="191:13" pos:end="191:26">start_children</name><argument_list pos:start="191:27" pos:end="191:38">(<argument pos:start="191:28" pos:end="191:37"><expr pos:start="191:28" pos:end="191:37"><name pos:start="191:28" pos:end="191:37">first_feed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="197:9" pos:end="197:35">/* now handle the events */</comment>

        <for pos:start="199:9" pos:end="213:9">for<control pos:start="199:12" pos:end="199:54">(<init pos:start="199:13" pos:end="199:31"><expr pos:start="199:13" pos:end="199:30"><name pos:start="199:13" pos:end="199:13">c</name> <operator pos:start="199:15" pos:end="199:15">=</operator> <name pos:start="199:17" pos:end="199:30">first_http_ctx</name></expr>;</init> <condition pos:start="199:33" pos:end="199:42"><expr pos:start="199:33" pos:end="199:41"><name pos:start="199:33" pos:end="199:33">c</name> <operator pos:start="199:35" pos:end="199:36">!=</operator> <name pos:start="199:38" pos:end="199:41">NULL</name></expr>;</condition> <incr pos:start="199:44" pos:end="199:53"><expr pos:start="199:44" pos:end="199:53"><name pos:start="199:44" pos:end="199:44">c</name> <operator pos:start="199:46" pos:end="199:46">=</operator> <name pos:start="199:48" pos:end="199:53">c_next</name></expr></incr>)</control> <block pos:start="199:56" pos:end="213:9">{<block_content pos:start="201:13" pos:end="211:13">

            <expr_stmt pos:start="201:13" pos:end="201:29"><expr pos:start="201:13" pos:end="201:28"><name pos:start="201:13" pos:end="201:18">c_next</name> <operator pos:start="201:20" pos:end="201:20">=</operator> <name pos:start="201:22" pos:end="201:28"><name pos:start="201:22" pos:end="201:22">c</name><operator pos:start="201:23" pos:end="201:24">-&gt;</operator><name pos:start="201:25" pos:end="201:28">next</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="203:13" pos:end="211:13"><if pos:start="203:13" pos:end="211:13">if <condition pos:start="203:16" pos:end="203:41">(<expr pos:start="203:17" pos:end="203:40"><call pos:start="203:17" pos:end="203:36"><name pos:start="203:17" pos:end="203:33">handle_connection</name><argument_list pos:start="203:34" pos:end="203:36">(<argument pos:start="203:35" pos:end="203:35"><expr pos:start="203:35" pos:end="203:35"><name pos:start="203:35" pos:end="203:35">c</name></expr></argument>)</argument_list></call> <operator pos:start="203:38" pos:end="203:38">&lt;</operator> <literal type="number" pos:start="203:40" pos:end="203:40">0</literal></expr>)</condition> <block pos:start="203:43" pos:end="211:13">{<block_content pos:start="207:17" pos:end="209:36">

                <comment type="block" pos:start="205:17" pos:end="205:51">/* close and free the connection */</comment>

                <expr_stmt pos:start="207:17" pos:end="207:34"><expr pos:start="207:17" pos:end="207:33"><call pos:start="207:17" pos:end="207:33"><name pos:start="207:17" pos:end="207:30">log_connection</name><argument_list pos:start="207:31" pos:end="207:33">(<argument pos:start="207:32" pos:end="207:32"><expr pos:start="207:32" pos:end="207:32"><name pos:start="207:32" pos:end="207:32">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:36"><expr pos:start="209:17" pos:end="209:35"><call pos:start="209:17" pos:end="209:35"><name pos:start="209:17" pos:end="209:32">close_connection</name><argument_list pos:start="209:33" pos:end="209:35">(<argument pos:start="209:34" pos:end="209:34"><expr pos:start="209:34" pos:end="209:34"><name pos:start="209:34" pos:end="209:34">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="217:9" pos:end="217:32"><expr pos:start="217:9" pos:end="217:31"><name pos:start="217:9" pos:end="217:18">poll_entry</name> <operator pos:start="217:20" pos:end="217:20">=</operator> <name pos:start="217:22" pos:end="217:31">poll_table</name></expr>;</expr_stmt>

        <comment type="block" pos:start="219:9" pos:end="219:43">/* new HTTP connection request ? */</comment>

        <if_stmt pos:start="221:9" pos:end="225:9"><if pos:start="221:9" pos:end="225:9">if <condition pos:start="221:12" pos:end="221:41">(<expr pos:start="221:13" pos:end="221:40"><name pos:start="221:13" pos:end="221:31"><name pos:start="221:13" pos:end="221:22">poll_entry</name><operator pos:start="221:23" pos:end="221:24">-&gt;</operator><name pos:start="221:25" pos:end="221:31">revents</name></name> <operator pos:start="221:33" pos:end="221:33">&amp;</operator> <name pos:start="221:35" pos:end="221:40">POLLIN</name></expr>)</condition> <block pos:start="221:43" pos:end="225:9">{<block_content pos:start="223:13" pos:end="223:41">

            <expr_stmt pos:start="223:13" pos:end="223:41"><expr pos:start="223:13" pos:end="223:40"><call pos:start="223:13" pos:end="223:40"><name pos:start="223:13" pos:end="223:26">new_connection</name><argument_list pos:start="223:27" pos:end="223:40">(<argument pos:start="223:28" pos:end="223:36"><expr pos:start="223:28" pos:end="223:36"><name pos:start="223:28" pos:end="223:36">server_fd</name></expr></argument>, <argument pos:start="223:39" pos:end="223:39"><expr pos:start="223:39" pos:end="223:39"><literal type="number" pos:start="223:39" pos:end="223:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:21"><expr pos:start="227:9" pos:end="227:20"><name pos:start="227:9" pos:end="227:18">poll_entry</name><operator pos:start="227:19" pos:end="227:20">++</operator></expr>;</expr_stmt>

        <comment type="block" pos:start="229:9" pos:end="229:43">/* new RTSP connection request ? */</comment>

        <if_stmt pos:start="231:9" pos:end="235:9"><if pos:start="231:9" pos:end="235:9">if <condition pos:start="231:12" pos:end="231:41">(<expr pos:start="231:13" pos:end="231:40"><name pos:start="231:13" pos:end="231:31"><name pos:start="231:13" pos:end="231:22">poll_entry</name><operator pos:start="231:23" pos:end="231:24">-&gt;</operator><name pos:start="231:25" pos:end="231:31">revents</name></name> <operator pos:start="231:33" pos:end="231:33">&amp;</operator> <name pos:start="231:35" pos:end="231:40">POLLIN</name></expr>)</condition> <block pos:start="231:43" pos:end="235:9">{<block_content pos:start="233:13" pos:end="233:46">

            <expr_stmt pos:start="233:13" pos:end="233:46"><expr pos:start="233:13" pos:end="233:45"><call pos:start="233:13" pos:end="233:45"><name pos:start="233:13" pos:end="233:26">new_connection</name><argument_list pos:start="233:27" pos:end="233:45">(<argument pos:start="233:28" pos:end="233:41"><expr pos:start="233:28" pos:end="233:41"><name pos:start="233:28" pos:end="233:41">rtsp_server_fd</name></expr></argument>, <argument pos:start="233:44" pos:end="233:44"><expr pos:start="233:44" pos:end="233:44"><literal type="number" pos:start="233:44" pos:end="233:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
