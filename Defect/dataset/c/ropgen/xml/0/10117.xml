<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10117.c" pos:tabs="8"><function pos:start="1:1" pos:end="189:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:32">unpack_coeffs</name><parameter_list pos:start="1:33" pos:end="1:95">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:44">SnowContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:59"><decl pos:start="1:50" pos:end="1:59"><type pos:start="1:50" pos:end="1:59"><name pos:start="1:50" pos:end="1:56">SubBand</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">b</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:77"><decl pos:start="1:62" pos:end="1:77"><type pos:start="1:62" pos:end="1:77"><name pos:start="1:62" pos:end="1:68">SubBand</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type> <name pos:start="1:72" pos:end="1:77">parent</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:94"><decl pos:start="1:80" pos:end="1:94"><type pos:start="1:80" pos:end="1:94"><name pos:start="1:80" pos:end="1:82">int</name></type> <name pos:start="1:84" pos:end="1:94">orientation</name></decl></parameter>)</parameter_list><block pos:start="1:96" pos:end="189:1">{<block_content pos:start="3:5" pos:end="187:5">

    <decl_stmt pos:start="3:5" pos:end="3:26"><decl pos:start="3:5" pos:end="3:25"><type pos:start="3:5" pos:end="3:13"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:13">int</name></type> <name pos:start="3:15" pos:end="3:15">w</name><init pos:start="3:16" pos:end="3:25">= <expr pos:start="3:18" pos:end="3:25"><name pos:start="3:18" pos:end="3:25"><name pos:start="3:18" pos:end="3:18">b</name><operator pos:start="3:19" pos:end="3:20">-&gt;</operator><name pos:start="3:21" pos:end="3:25">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:15">h</name><init pos:start="5:16" pos:end="5:26">= <expr pos:start="5:18" pos:end="5:26"><name pos:start="5:18" pos:end="5:26"><name pos:start="5:18" pos:end="5:18">b</name><operator pos:start="5:19" pos:end="5:20">-&gt;</operator><name pos:start="5:21" pos:end="5:26">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">x</name></decl>,<decl pos:start="7:11" pos:end="7:11"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:11">y</name></decl>;</decl_stmt>

    

    <if_stmt pos:start="11:5" pos:end="187:5"><if pos:start="11:5" pos:end="187:5">if<condition pos:start="11:7" pos:end="11:9">(<expr pos:start="11:8" pos:end="11:8"><literal type="number" pos:start="11:8" pos:end="11:8">1</literal></expr>)</condition><block pos:start="11:10" pos:end="187:5">{<block_content pos:start="13:9" pos:end="185:23">

        <decl_stmt pos:start="13:9" pos:end="13:16"><decl pos:start="13:9" pos:end="13:15"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:15">run</name></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:36"><decl pos:start="15:9" pos:end="15:35"><type pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:19">x_and_coeff</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:23">xc</name><init pos:start="15:24" pos:end="15:35">= <expr pos:start="15:26" pos:end="15:35"><name pos:start="15:26" pos:end="15:35"><name pos:start="15:26" pos:end="15:26">b</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:35">x_coeff</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:35"><decl pos:start="17:9" pos:end="17:34"><type pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:19">x_and_coeff</name> <modifier pos:start="17:21" pos:end="17:21">*</modifier></type><name pos:start="17:22" pos:end="17:28">prev_xc</name><init pos:start="17:29" pos:end="17:34">= <expr pos:start="17:31" pos:end="17:34"><name pos:start="17:31" pos:end="17:34">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:34"><decl pos:start="19:9" pos:end="19:33"><type pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:19">x_and_coeff</name> <modifier pos:start="19:21" pos:end="19:21">*</modifier></type><name pos:start="19:22" pos:end="19:29">prev2_xc</name><init pos:start="19:30" pos:end="19:33">= <expr pos:start="19:32" pos:end="19:33"><name pos:start="19:32" pos:end="19:33">xc</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:64"><decl pos:start="21:9" pos:end="21:63"><type pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:19">x_and_coeff</name> <modifier pos:start="21:21" pos:end="21:21">*</modifier></type><name pos:start="21:22" pos:end="21:30">parent_xc</name><init pos:start="21:31" pos:end="21:63">= <expr pos:start="21:33" pos:end="21:63"><ternary pos:start="21:33" pos:end="21:63"><condition pos:start="21:33" pos:end="21:40"><expr pos:start="21:33" pos:end="21:38"><name pos:start="21:33" pos:end="21:38">parent</name></expr> ?</condition><then pos:start="21:42" pos:end="21:56"> <expr pos:start="21:42" pos:end="21:56"><name pos:start="21:42" pos:end="21:56"><name pos:start="21:42" pos:end="21:47">parent</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:56">x_coeff</name></name></expr> </then><else pos:start="21:58" pos:end="21:63">: <expr pos:start="21:60" pos:end="21:63"><name pos:start="21:60" pos:end="21:63">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:47"><decl pos:start="23:9" pos:end="23:46"><type pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:19">x_and_coeff</name> <modifier pos:start="23:21" pos:end="23:21">*</modifier></type><name pos:start="23:22" pos:end="23:35">prev_parent_xc</name><init pos:start="23:36" pos:end="23:46">= <expr pos:start="23:38" pos:end="23:46"><name pos:start="23:38" pos:end="23:46">parent_xc</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:48"><expr pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:11">run</name><operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:47"><name pos:start="27:14" pos:end="27:24">get_symbol2</name><argument_list pos:start="27:25" pos:end="27:47">(<argument pos:start="27:26" pos:end="27:30"><expr pos:start="27:26" pos:end="27:30"><operator pos:start="27:26" pos:end="27:26">&amp;</operator><name pos:start="27:27" pos:end="27:30"><name pos:start="27:27" pos:end="27:27">s</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:30">c</name></name></expr></argument>, <argument pos:start="27:33" pos:end="27:43"><expr pos:start="27:33" pos:end="27:43"><name pos:start="27:33" pos:end="27:43"><name pos:start="27:33" pos:end="27:33">b</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:40">state</name><index pos:start="27:41" pos:end="27:43">[<expr pos:start="27:42" pos:end="27:42"><literal type="number" pos:start="27:42" pos:end="27:42">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:46" pos:end="27:46"><expr pos:start="27:46" pos:end="27:46"><literal type="number" pos:start="27:46" pos:end="27:46">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="29:9" pos:end="181:9">for<control pos:start="29:12" pos:end="29:26">(<init pos:start="29:13" pos:end="29:16"><expr pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:13">y</name><operator pos:start="29:14" pos:end="29:14">=</operator><literal type="number" pos:start="29:15" pos:end="29:15">0</literal></expr>;</init> <condition pos:start="29:18" pos:end="29:21"><expr pos:start="29:18" pos:end="29:20"><name pos:start="29:18" pos:end="29:18">y</name><operator pos:start="29:19" pos:end="29:19">&lt;</operator><name pos:start="29:20" pos:end="29:20">h</name></expr>;</condition> <incr pos:start="29:23" pos:end="29:25"><expr pos:start="29:23" pos:end="29:25"><name pos:start="29:23" pos:end="29:23">y</name><operator pos:start="29:24" pos:end="29:25">++</operator></expr></incr>)</control><block pos:start="29:27" pos:end="181:9">{<block_content pos:start="31:13" pos:end="179:13">

            <decl_stmt pos:start="31:13" pos:end="31:20"><decl pos:start="31:13" pos:end="31:19"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:17">v</name><init pos:start="31:18" pos:end="31:19">=<expr pos:start="31:19" pos:end="31:19"><literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="33:13" pos:end="33:32"><decl pos:start="33:13" pos:end="33:20"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:18">lt</name><init pos:start="33:19" pos:end="33:20">=<expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">0</literal></expr></init></decl>, <decl pos:start="33:23" pos:end="33:25"><type ref="prev" pos:start="33:13" pos:end="33:15"/><name pos:start="33:23" pos:end="33:23">t</name><init pos:start="33:24" pos:end="33:25">=<expr pos:start="33:25" pos:end="33:25"><literal type="number" pos:start="33:25" pos:end="33:25">0</literal></expr></init></decl>, <decl pos:start="33:28" pos:end="33:31"><type ref="prev" pos:start="33:13" pos:end="33:15"/><name pos:start="33:28" pos:end="33:29">rt</name><init pos:start="33:30" pos:end="33:31">=<expr pos:start="33:31" pos:end="33:31"><literal type="number" pos:start="33:31" pos:end="33:31">0</literal></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="37:13" pos:end="41:13"><if pos:start="37:13" pos:end="41:13">if<condition pos:start="37:15" pos:end="37:36">(<expr pos:start="37:16" pos:end="37:35"><name pos:start="37:16" pos:end="37:16">y</name> <operator pos:start="37:18" pos:end="37:19">&amp;&amp;</operator> <name pos:start="37:21" pos:end="37:30"><name pos:start="37:21" pos:end="37:27">prev_xc</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:30">x</name></name> <operator pos:start="37:32" pos:end="37:33">==</operator> <literal type="number" pos:start="37:35" pos:end="37:35">0</literal></expr>)</condition><block pos:start="37:37" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:35">

                <expr_stmt pos:start="39:17" pos:end="39:35"><expr pos:start="39:17" pos:end="39:34"><name pos:start="39:17" pos:end="39:18">rt</name><operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:34"><name pos:start="39:21" pos:end="39:27">prev_xc</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:34">coeff</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <for pos:start="43:13" pos:end="151:13">for<control pos:start="43:16" pos:end="43:30">(<init pos:start="43:17" pos:end="43:20"><expr pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:17">x</name><operator pos:start="43:18" pos:end="43:18">=</operator><literal type="number" pos:start="43:19" pos:end="43:19">0</literal></expr>;</init> <condition pos:start="43:22" pos:end="43:25"><expr pos:start="43:22" pos:end="43:24"><name pos:start="43:22" pos:end="43:22">x</name><operator pos:start="43:23" pos:end="43:23">&lt;</operator><name pos:start="43:24" pos:end="43:24">w</name></expr>;</condition> <incr pos:start="43:27" pos:end="43:29"><expr pos:start="43:27" pos:end="43:29"><name pos:start="43:27" pos:end="43:27">x</name><operator pos:start="43:28" pos:end="43:29">++</operator></expr></incr>)</control><block pos:start="43:31" pos:end="151:13">{<block_content pos:start="45:17" pos:end="149:17">

                <decl_stmt pos:start="45:17" pos:end="45:24"><decl pos:start="45:17" pos:end="45:23"><type pos:start="45:17" pos:end="45:19"><name pos:start="45:17" pos:end="45:19">int</name></type> <name pos:start="45:21" pos:end="45:21">p</name><init pos:start="45:22" pos:end="45:23">=<expr pos:start="45:23" pos:end="45:23"><literal type="number" pos:start="45:23" pos:end="45:23">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="47:17" pos:end="47:31"><decl pos:start="47:17" pos:end="47:30"><type pos:start="47:17" pos:end="47:25"><specifier pos:start="47:17" pos:end="47:21">const</specifier> <name pos:start="47:23" pos:end="47:25">int</name></type> <name pos:start="47:27" pos:end="47:27">l</name><init pos:start="47:28" pos:end="47:30">= <expr pos:start="47:30" pos:end="47:30"><name pos:start="47:30" pos:end="47:30">v</name></expr></init></decl>;</decl_stmt>

                

                <expr_stmt pos:start="51:17" pos:end="51:22"><expr pos:start="51:17" pos:end="51:21"><name pos:start="51:17" pos:end="51:18">lt</name><operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:21">t</name></expr>;</expr_stmt> <expr_stmt pos:start="51:24" pos:end="51:29"><expr pos:start="51:24" pos:end="51:28"><name pos:start="51:24" pos:end="51:24">t</name><operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:28">rt</name></expr>;</expr_stmt>



                <if_stmt pos:start="55:17" pos:end="69:17"><if pos:start="55:17" pos:end="69:17">if<condition pos:start="55:19" pos:end="55:21">(<expr pos:start="55:20" pos:end="55:20"><name pos:start="55:20" pos:end="55:20">y</name></expr>)</condition><block pos:start="55:22" pos:end="69:17">{<block_content pos:start="57:21" pos:end="67:29">

                    <if_stmt pos:start="57:21" pos:end="59:34"><if pos:start="57:21" pos:end="59:34">if<condition pos:start="57:23" pos:end="57:39">(<expr pos:start="57:24" pos:end="57:38"><name pos:start="57:24" pos:end="57:33"><name pos:start="57:24" pos:end="57:30">prev_xc</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:33">x</name></name> <operator pos:start="57:35" pos:end="57:36">&lt;=</operator> <name pos:start="57:38" pos:end="57:38">x</name></expr>)</condition><block type="pseudo" pos:start="59:25" pos:end="59:34"><block_content pos:start="59:25" pos:end="59:34">

                        <expr_stmt pos:start="59:25" pos:end="59:34"><expr pos:start="59:25" pos:end="59:33"><name pos:start="59:25" pos:end="59:31">prev_xc</name><operator pos:start="59:32" pos:end="59:33">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="61:21" pos:end="67:29"><if pos:start="61:21" pos:end="63:43">if<condition pos:start="61:23" pos:end="61:43">(<expr pos:start="61:24" pos:end="61:42"><name pos:start="61:24" pos:end="61:33"><name pos:start="61:24" pos:end="61:30">prev_xc</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:33">x</name></name> <operator pos:start="61:35" pos:end="61:36">==</operator> <name pos:start="61:38" pos:end="61:38">x</name> <operator pos:start="61:40" pos:end="61:40">+</operator> <literal type="number" pos:start="61:42" pos:end="61:42">1</literal></expr>)</condition><block type="pseudo" pos:start="63:25" pos:end="63:43"><block_content pos:start="63:25" pos:end="63:43">

                        <expr_stmt pos:start="63:25" pos:end="63:43"><expr pos:start="63:25" pos:end="63:42"><name pos:start="63:25" pos:end="63:26">rt</name><operator pos:start="63:27" pos:end="63:27">=</operator> <name pos:start="63:29" pos:end="63:42"><name pos:start="63:29" pos:end="63:35">prev_xc</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:42">coeff</name></name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="65:21" pos:end="67:29">else<block type="pseudo" pos:start="67:25" pos:end="67:29"><block_content pos:start="67:25" pos:end="67:29">

                        <expr_stmt pos:start="67:25" pos:end="67:29"><expr pos:start="67:25" pos:end="67:28"><name pos:start="67:25" pos:end="67:26">rt</name><operator pos:start="67:27" pos:end="67:27">=</operator><literal type="number" pos:start="67:28" pos:end="67:28">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="71:17" pos:end="85:17"><if pos:start="71:17" pos:end="85:17">if<condition pos:start="71:19" pos:end="71:29">(<expr pos:start="71:20" pos:end="71:28"><name pos:start="71:20" pos:end="71:28">parent_xc</name></expr>)</condition><block pos:start="71:30" pos:end="85:17">{<block_content pos:start="73:21" pos:end="83:21">

                    <if_stmt pos:start="73:21" pos:end="77:21"><if pos:start="73:21" pos:end="77:21">if<condition pos:start="73:23" pos:end="73:43">(<expr pos:start="73:24" pos:end="73:42"><name pos:start="73:24" pos:end="73:24">x</name><operator pos:start="73:25" pos:end="73:26">&gt;&gt;</operator><literal type="number" pos:start="73:27" pos:end="73:27">1</literal> <operator pos:start="73:29" pos:end="73:29">&gt;</operator> <name pos:start="73:31" pos:end="73:42"><name pos:start="73:31" pos:end="73:39">parent_xc</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:42">x</name></name></expr>)</condition><block pos:start="73:44" pos:end="77:21">{<block_content pos:start="75:25" pos:end="75:36">

                        <expr_stmt pos:start="75:25" pos:end="75:36"><expr pos:start="75:25" pos:end="75:35"><name pos:start="75:25" pos:end="75:33">parent_xc</name><operator pos:start="75:34" pos:end="75:35">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="79:21" pos:end="83:21"><if pos:start="79:21" pos:end="83:21">if<condition pos:start="79:23" pos:end="79:44">(<expr pos:start="79:24" pos:end="79:43"><name pos:start="79:24" pos:end="79:24">x</name><operator pos:start="79:25" pos:end="79:26">&gt;&gt;</operator><literal type="number" pos:start="79:27" pos:end="79:27">1</literal> <operator pos:start="79:29" pos:end="79:30">==</operator> <name pos:start="79:32" pos:end="79:43"><name pos:start="79:32" pos:end="79:40">parent_xc</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:43">x</name></name></expr>)</condition><block pos:start="79:45" pos:end="83:21">{<block_content pos:start="81:25" pos:end="81:44">

                        <expr_stmt pos:start="81:25" pos:end="81:44"><expr pos:start="81:25" pos:end="81:43"><name pos:start="81:25" pos:end="81:25">p</name><operator pos:start="81:26" pos:end="81:26">=</operator> <name pos:start="81:28" pos:end="81:43"><name pos:start="81:28" pos:end="81:36">parent_xc</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:43">coeff</name></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="87:17" pos:end="149:17"><if pos:start="87:17" pos:end="109:17">if<condition pos:start="87:19" pos:end="87:38">(<comment type="block" pos:start="87:20" pos:end="87:26">/*ll|*/</comment><expr pos:start="87:27" pos:end="87:37"><name pos:start="87:27" pos:end="87:27">l</name><operator pos:start="87:28" pos:end="87:28">|</operator><name pos:start="87:29" pos:end="87:30">lt</name><operator pos:start="87:31" pos:end="87:31">|</operator><name pos:start="87:32" pos:end="87:32">t</name><operator pos:start="87:33" pos:end="87:33">|</operator><name pos:start="87:34" pos:end="87:35">rt</name><operator pos:start="87:36" pos:end="87:36">|</operator><name pos:start="87:37" pos:end="87:37">p</name></expr>)</condition><block pos:start="87:39" pos:end="109:17">{<block_content pos:start="89:21" pos:end="107:21">

                    <decl_stmt pos:start="89:21" pos:end="89:103"><decl pos:start="89:21" pos:end="89:102"><type pos:start="89:21" pos:end="89:23"><name pos:start="89:21" pos:end="89:23">int</name></type> <name pos:start="89:25" pos:end="89:31">context</name><init pos:start="89:32" pos:end="89:102">= <expr pos:start="89:34" pos:end="89:102"><call pos:start="89:34" pos:end="89:102"><name pos:start="89:34" pos:end="89:40">av_log2</name><argument_list pos:start="89:41" pos:end="89:102">(<comment type="block" pos:start="89:42" pos:end="89:55">/*ABS(ll) + */</comment><argument pos:start="89:56" pos:end="89:101"><expr pos:start="89:56" pos:end="89:101"><literal type="number" pos:start="89:56" pos:end="89:56">3</literal><operator pos:start="89:57" pos:end="89:57">*</operator><operator pos:start="89:58" pos:end="89:58">(</operator><name pos:start="89:59" pos:end="89:59">l</name><operator pos:start="89:60" pos:end="89:61">&gt;&gt;</operator><literal type="number" pos:start="89:62" pos:end="89:62">1</literal><operator pos:start="89:63" pos:end="89:63">)</operator> <operator pos:start="89:65" pos:end="89:65">+</operator> <operator pos:start="89:67" pos:end="89:67">(</operator><name pos:start="89:68" pos:end="89:69">lt</name><operator pos:start="89:70" pos:end="89:71">&gt;&gt;</operator><literal type="number" pos:start="89:72" pos:end="89:72">1</literal><operator pos:start="89:73" pos:end="89:73">)</operator> <operator pos:start="89:75" pos:end="89:75">+</operator> <operator pos:start="89:77" pos:end="89:77">(</operator><name pos:start="89:78" pos:end="89:78">t</name><operator pos:start="89:79" pos:end="89:79">&amp;</operator><operator pos:start="89:80" pos:end="89:80">~</operator><literal type="number" pos:start="89:81" pos:end="89:81">1</literal><operator pos:start="89:82" pos:end="89:82">)</operator> <operator pos:start="89:84" pos:end="89:84">+</operator> <operator pos:start="89:86" pos:end="89:86">(</operator><name pos:start="89:87" pos:end="89:88">rt</name><operator pos:start="89:89" pos:end="89:90">&gt;&gt;</operator><literal type="number" pos:start="89:91" pos:end="89:91">1</literal><operator pos:start="89:92" pos:end="89:92">)</operator> <operator pos:start="89:94" pos:end="89:94">+</operator> <operator pos:start="89:96" pos:end="89:96">(</operator><name pos:start="89:97" pos:end="89:97">p</name><operator pos:start="89:98" pos:end="89:99">&gt;&gt;</operator><literal type="number" pos:start="89:100" pos:end="89:100">1</literal><operator pos:start="89:101" pos:end="89:101">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="93:21" pos:end="93:60"><expr pos:start="93:21" pos:end="93:59"><name pos:start="93:21" pos:end="93:21">v</name><operator pos:start="93:22" pos:end="93:22">=</operator><call pos:start="93:23" pos:end="93:59"><name pos:start="93:23" pos:end="93:29">get_rac</name><argument_list pos:start="93:30" pos:end="93:59">(<argument pos:start="93:31" pos:end="93:35"><expr pos:start="93:31" pos:end="93:35"><operator pos:start="93:31" pos:end="93:31">&amp;</operator><name pos:start="93:32" pos:end="93:35"><name pos:start="93:32" pos:end="93:32">s</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:35">c</name></name></expr></argument>, <argument pos:start="93:38" pos:end="93:58"><expr pos:start="93:38" pos:end="93:58"><operator pos:start="93:38" pos:end="93:38">&amp;</operator><name pos:start="93:39" pos:end="93:58"><name pos:start="93:39" pos:end="93:39">b</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:46">state</name><index pos:start="93:47" pos:end="93:49">[<expr pos:start="93:48" pos:end="93:48"><literal type="number" pos:start="93:48" pos:end="93:48">0</literal></expr>]</index><index pos:start="93:50" pos:end="93:58">[<expr pos:start="93:51" pos:end="93:57"><name pos:start="93:51" pos:end="93:57">context</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="95:21" pos:end="107:21"><if pos:start="95:21" pos:end="107:21">if<condition pos:start="95:23" pos:end="95:25">(<expr pos:start="95:24" pos:end="95:24"><name pos:start="95:24" pos:end="95:24">v</name></expr>)</condition><block pos:start="95:26" pos:end="107:21">{<block_content pos:start="97:25" pos:end="105:41">

                        <expr_stmt pos:start="97:25" pos:end="97:88"><expr pos:start="97:25" pos:end="97:87"><name pos:start="97:25" pos:end="97:25">v</name><operator pos:start="97:26" pos:end="97:26">=</operator> <literal type="number" pos:start="97:28" pos:end="97:28">2</literal><operator pos:start="97:29" pos:end="97:29">*</operator><operator pos:start="97:30" pos:end="97:30">(</operator><call pos:start="97:31" pos:end="97:82"><name pos:start="97:31" pos:end="97:41">get_symbol2</name><argument_list pos:start="97:42" pos:end="97:82">(<argument pos:start="97:43" pos:end="97:47"><expr pos:start="97:43" pos:end="97:47"><operator pos:start="97:43" pos:end="97:43">&amp;</operator><name pos:start="97:44" pos:end="97:47"><name pos:start="97:44" pos:end="97:44">s</name><operator pos:start="97:45" pos:end="97:46">-&gt;</operator><name pos:start="97:47" pos:end="97:47">c</name></name></expr></argument>, <argument pos:start="97:50" pos:end="97:70"><expr pos:start="97:50" pos:end="97:70"><name pos:start="97:50" pos:end="97:70"><name pos:start="97:50" pos:end="97:50">b</name><operator pos:start="97:51" pos:end="97:52">-&gt;</operator><name pos:start="97:53" pos:end="97:57">state</name><index pos:start="97:58" pos:end="97:70">[<expr pos:start="97:59" pos:end="97:69"><name pos:start="97:59" pos:end="97:65">context</name> <operator pos:start="97:67" pos:end="97:67">+</operator> <literal type="number" pos:start="97:69" pos:end="97:69">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="97:73" pos:end="97:81"><expr pos:start="97:73" pos:end="97:81"><name pos:start="97:73" pos:end="97:79">context</name><operator pos:start="97:80" pos:end="97:80">-</operator><literal type="number" pos:start="97:81" pos:end="97:81">4</literal></expr></argument>)</argument_list></call> <operator pos:start="97:84" pos:end="97:84">+</operator> <literal type="number" pos:start="97:86" pos:end="97:86">1</literal><operator pos:start="97:87" pos:end="97:87">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="99:25" pos:end="99:108"><expr pos:start="99:25" pos:end="99:107"><name pos:start="99:25" pos:end="99:25">v</name><operator pos:start="99:26" pos:end="99:27">+=</operator><call pos:start="99:28" pos:end="99:107"><name pos:start="99:28" pos:end="99:34">get_rac</name><argument_list pos:start="99:35" pos:end="99:107">(<argument pos:start="99:36" pos:end="99:40"><expr pos:start="99:36" pos:end="99:40"><operator pos:start="99:36" pos:end="99:36">&amp;</operator><name pos:start="99:37" pos:end="99:40"><name pos:start="99:37" pos:end="99:37">s</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:40">c</name></name></expr></argument>, <argument pos:start="99:43" pos:end="99:106"><expr pos:start="99:43" pos:end="99:106"><operator pos:start="99:43" pos:end="99:43">&amp;</operator><name pos:start="99:44" pos:end="99:106"><name pos:start="99:44" pos:end="99:44">b</name><operator pos:start="99:45" pos:end="99:46">-&gt;</operator><name pos:start="99:47" pos:end="99:51">state</name><index pos:start="99:52" pos:end="99:54">[<expr pos:start="99:53" pos:end="99:53"><literal type="number" pos:start="99:53" pos:end="99:53">0</literal></expr>]</index><index pos:start="99:55" pos:end="99:106">[<expr pos:start="99:56" pos:end="99:105"><literal type="number" pos:start="99:56" pos:end="99:59">16</literal> <operator pos:start="99:59" pos:end="99:59">+</operator> <literal type="number" pos:start="99:61" pos:end="99:63">1</literal> <operator pos:start="99:63" pos:end="99:63">+</operator> <literal type="number" pos:start="99:65" pos:end="99:67">3</literal> <operator pos:start="99:67" pos:end="99:67">+</operator> <name pos:start="99:69" pos:end="99:84"><name pos:start="99:69" pos:end="99:76">quant3bA</name><index pos:start="99:77" pos:end="99:84">[<expr pos:start="99:78" pos:end="99:83"><name pos:start="99:78" pos:end="99:78">l</name><operator pos:start="99:79" pos:end="99:79">&amp;</operator><literal type="number" pos:start="99:80" pos:end="99:83">0xFF</literal></expr>]</index></name> <operator pos:start="99:86" pos:end="99:86">+</operator> <literal type="number" pos:start="99:88" pos:end="99:88">3</literal><operator pos:start="99:89" pos:end="99:89">*</operator><name pos:start="99:90" pos:end="99:105"><name pos:start="99:90" pos:end="99:97">quant3bA</name><index pos:start="99:98" pos:end="99:105">[<expr pos:start="99:99" pos:end="99:104"><name pos:start="99:99" pos:end="99:99">t</name><operator pos:start="99:100" pos:end="99:100">&amp;</operator><literal type="number" pos:start="99:101" pos:end="99:104">0xFF</literal></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        

                        <expr_stmt pos:start="103:25" pos:end="103:32"><expr pos:start="103:25" pos:end="103:31"><name pos:start="103:25" pos:end="103:29"><name pos:start="103:25" pos:end="103:26">xc</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:29">x</name></name><operator pos:start="103:30" pos:end="103:30">=</operator><name pos:start="103:31" pos:end="103:31">x</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="105:25" pos:end="105:41"><expr pos:start="105:25" pos:end="105:40"><operator pos:start="105:25" pos:end="105:25">(</operator><name pos:start="105:26" pos:end="105:27">xc</name><operator pos:start="105:28" pos:end="105:29">++</operator><operator pos:start="105:30" pos:end="105:30">)</operator><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:37">coeff</name><operator pos:start="105:38" pos:end="105:38">=</operator> <name pos:start="105:40" pos:end="105:40">v</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if><else pos:start="109:18" pos:end="149:17">else<block pos:start="109:22" pos:end="149:17">{<block_content pos:start="111:21" pos:end="147:21">

                    <if_stmt pos:start="111:21" pos:end="147:21"><if pos:start="111:21" pos:end="125:21">if<condition pos:start="111:23" pos:end="111:28">(<expr pos:start="111:24" pos:end="111:27"><operator pos:start="111:24" pos:end="111:24">!</operator><name pos:start="111:25" pos:end="111:27">run</name></expr>)</condition><block pos:start="111:29" pos:end="125:21">{<block_content pos:start="113:25" pos:end="123:41">

                        <expr_stmt pos:start="113:25" pos:end="113:64"><expr pos:start="113:25" pos:end="113:63"><name pos:start="113:25" pos:end="113:27">run</name><operator pos:start="113:28" pos:end="113:28">=</operator> <call pos:start="113:30" pos:end="113:63"><name pos:start="113:30" pos:end="113:40">get_symbol2</name><argument_list pos:start="113:41" pos:end="113:63">(<argument pos:start="113:42" pos:end="113:46"><expr pos:start="113:42" pos:end="113:46"><operator pos:start="113:42" pos:end="113:42">&amp;</operator><name pos:start="113:43" pos:end="113:46"><name pos:start="113:43" pos:end="113:43">s</name><operator pos:start="113:44" pos:end="113:45">-&gt;</operator><name pos:start="113:46" pos:end="113:46">c</name></name></expr></argument>, <argument pos:start="113:49" pos:end="113:59"><expr pos:start="113:49" pos:end="113:59"><name pos:start="113:49" pos:end="113:59"><name pos:start="113:49" pos:end="113:49">b</name><operator pos:start="113:50" pos:end="113:51">-&gt;</operator><name pos:start="113:52" pos:end="113:56">state</name><index pos:start="113:57" pos:end="113:59">[<expr pos:start="113:58" pos:end="113:58"><literal type="number" pos:start="113:58" pos:end="113:58">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="113:62" pos:end="113:62"><expr pos:start="113:62" pos:end="113:62"><literal type="number" pos:start="113:62" pos:end="113:62">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="115:25" pos:end="115:76"><expr pos:start="115:25" pos:end="115:75"><name pos:start="115:25" pos:end="115:25">v</name><operator pos:start="115:26" pos:end="115:26">=</operator> <literal type="number" pos:start="115:28" pos:end="115:28">2</literal><operator pos:start="115:29" pos:end="115:29">*</operator><operator pos:start="115:30" pos:end="115:30">(</operator><call pos:start="115:31" pos:end="115:70"><name pos:start="115:31" pos:end="115:41">get_symbol2</name><argument_list pos:start="115:42" pos:end="115:70">(<argument pos:start="115:43" pos:end="115:47"><expr pos:start="115:43" pos:end="115:47"><operator pos:start="115:43" pos:end="115:43">&amp;</operator><name pos:start="115:44" pos:end="115:47"><name pos:start="115:44" pos:end="115:44">s</name><operator pos:start="115:45" pos:end="115:46">-&gt;</operator><name pos:start="115:47" pos:end="115:47">c</name></name></expr></argument>, <argument pos:start="115:50" pos:end="115:64"><expr pos:start="115:50" pos:end="115:64"><name pos:start="115:50" pos:end="115:64"><name pos:start="115:50" pos:end="115:50">b</name><operator pos:start="115:51" pos:end="115:52">-&gt;</operator><name pos:start="115:53" pos:end="115:57">state</name><index pos:start="115:58" pos:end="115:64">[<expr pos:start="115:59" pos:end="115:63"><literal type="number" pos:start="115:59" pos:end="115:61">0</literal> <operator pos:start="115:61" pos:end="115:61">+</operator> <literal type="number" pos:start="115:63" pos:end="115:63">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="115:67" pos:end="115:69"><expr pos:start="115:67" pos:end="115:69"><literal type="number" pos:start="115:67" pos:end="115:68">0</literal><operator pos:start="115:68" pos:end="115:68">-</operator><literal type="number" pos:start="115:69" pos:end="115:69">4</literal></expr></argument>)</argument_list></call> <operator pos:start="115:72" pos:end="115:72">+</operator> <literal type="number" pos:start="115:74" pos:end="115:74">1</literal><operator pos:start="115:75" pos:end="115:75">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="117:25" pos:end="117:68"><expr pos:start="117:25" pos:end="117:67"><name pos:start="117:25" pos:end="117:25">v</name><operator pos:start="117:26" pos:end="117:27">+=</operator><call pos:start="117:28" pos:end="117:67"><name pos:start="117:28" pos:end="117:34">get_rac</name><argument_list pos:start="117:35" pos:end="117:67">(<argument pos:start="117:36" pos:end="117:40"><expr pos:start="117:36" pos:end="117:40"><operator pos:start="117:36" pos:end="117:36">&amp;</operator><name pos:start="117:37" pos:end="117:40"><name pos:start="117:37" pos:end="117:37">s</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:40">c</name></name></expr></argument>, <argument pos:start="117:43" pos:end="117:66"><expr pos:start="117:43" pos:end="117:66"><operator pos:start="117:43" pos:end="117:43">&amp;</operator><name pos:start="117:44" pos:end="117:66"><name pos:start="117:44" pos:end="117:44">b</name><operator pos:start="117:45" pos:end="117:46">-&gt;</operator><name pos:start="117:47" pos:end="117:51">state</name><index pos:start="117:52" pos:end="117:54">[<expr pos:start="117:53" pos:end="117:53"><literal type="number" pos:start="117:53" pos:end="117:53">0</literal></expr>]</index><index pos:start="117:55" pos:end="117:66">[<expr pos:start="117:56" pos:end="117:65"><literal type="number" pos:start="117:56" pos:end="117:59">16</literal> <operator pos:start="117:59" pos:end="117:59">+</operator> <literal type="number" pos:start="117:61" pos:end="117:63">1</literal> <operator pos:start="117:63" pos:end="117:63">+</operator> <literal type="number" pos:start="117:65" pos:end="117:65">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        

                        <expr_stmt pos:start="121:25" pos:end="121:32"><expr pos:start="121:25" pos:end="121:31"><name pos:start="121:25" pos:end="121:29"><name pos:start="121:25" pos:end="121:26">xc</name><operator pos:start="121:27" pos:end="121:28">-&gt;</operator><name pos:start="121:29" pos:end="121:29">x</name></name><operator pos:start="121:30" pos:end="121:30">=</operator><name pos:start="121:31" pos:end="121:31">x</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="123:25" pos:end="123:41"><expr pos:start="123:25" pos:end="123:40"><operator pos:start="123:25" pos:end="123:25">(</operator><name pos:start="123:26" pos:end="123:27">xc</name><operator pos:start="123:28" pos:end="123:29">++</operator><operator pos:start="123:30" pos:end="123:30">)</operator><operator pos:start="123:31" pos:end="123:32">-&gt;</operator><name pos:start="123:33" pos:end="123:37">coeff</name><operator pos:start="123:38" pos:end="123:38">=</operator> <name pos:start="123:40" pos:end="123:40">v</name></expr>;</expr_stmt>

                    </block_content>}</block></if><else pos:start="125:22" pos:end="147:21">else<block pos:start="125:26" pos:end="147:21">{<block_content pos:start="127:25" pos:end="145:38">

                        <decl_stmt pos:start="127:25" pos:end="127:36"><decl pos:start="127:25" pos:end="127:35"><type pos:start="127:25" pos:end="127:27"><name pos:start="127:25" pos:end="127:27">int</name></type> <name pos:start="127:29" pos:end="127:35">max_run</name></decl>;</decl_stmt>

                        <expr_stmt pos:start="129:25" pos:end="129:30"><expr pos:start="129:25" pos:end="129:29"><name pos:start="129:25" pos:end="129:27">run</name><operator pos:start="129:28" pos:end="129:29">--</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="131:25" pos:end="131:28"><expr pos:start="131:25" pos:end="131:27"><name pos:start="131:25" pos:end="131:25">v</name><operator pos:start="131:26" pos:end="131:26">=</operator><literal type="number" pos:start="131:27" pos:end="131:27">0</literal></expr>;</expr_stmt>



                        <if_stmt pos:start="135:25" pos:end="137:57"><if pos:start="135:25" pos:end="135:70">if<condition pos:start="135:27" pos:end="135:29">(<expr pos:start="135:28" pos:end="135:28"><name pos:start="135:28" pos:end="135:28">y</name></expr>)</condition><block type="pseudo" pos:start="135:31" pos:end="135:70"><block_content pos:start="135:31" pos:end="135:70"> <expr_stmt pos:start="135:31" pos:end="135:70"><expr pos:start="135:31" pos:end="135:69"><name pos:start="135:31" pos:end="135:37">max_run</name><operator pos:start="135:38" pos:end="135:38">=</operator> <call pos:start="135:40" pos:end="135:69"><name pos:start="135:40" pos:end="135:44">FFMIN</name><argument_list pos:start="135:45" pos:end="135:69">(<argument pos:start="135:46" pos:end="135:48"><expr pos:start="135:46" pos:end="135:48"><name pos:start="135:46" pos:end="135:48">run</name></expr></argument>, <argument pos:start="135:51" pos:end="135:68"><expr pos:start="135:51" pos:end="135:68"><name pos:start="135:51" pos:end="135:60"><name pos:start="135:51" pos:end="135:57">prev_xc</name><operator pos:start="135:58" pos:end="135:59">-&gt;</operator><name pos:start="135:60" pos:end="135:60">x</name></name> <operator pos:start="135:62" pos:end="135:62">-</operator> <name pos:start="135:64" pos:end="135:64">x</name> <operator pos:start="135:66" pos:end="135:66">-</operator> <literal type="number" pos:start="135:68" pos:end="135:68">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="137:25" pos:end="137:57">else<block type="pseudo" pos:start="137:31" pos:end="137:57"><block_content pos:start="137:31" pos:end="137:57">  <expr_stmt pos:start="137:31" pos:end="137:57"><expr pos:start="137:31" pos:end="137:56"><name pos:start="137:31" pos:end="137:37">max_run</name><operator pos:start="137:38" pos:end="137:38">=</operator> <call pos:start="137:40" pos:end="137:56"><name pos:start="137:40" pos:end="137:44">FFMIN</name><argument_list pos:start="137:45" pos:end="137:56">(<argument pos:start="137:46" pos:end="137:48"><expr pos:start="137:46" pos:end="137:48"><name pos:start="137:46" pos:end="137:48">run</name></expr></argument>, <argument pos:start="137:51" pos:end="137:55"><expr pos:start="137:51" pos:end="137:55"><name pos:start="137:51" pos:end="137:51">w</name><operator pos:start="137:52" pos:end="137:52">-</operator><name pos:start="137:53" pos:end="137:53">x</name><operator pos:start="137:54" pos:end="137:54">-</operator><literal type="number" pos:start="137:55" pos:end="137:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <if_stmt pos:start="139:25" pos:end="141:76"><if pos:start="139:25" pos:end="141:76">if<condition pos:start="139:27" pos:end="139:37">(<expr pos:start="139:28" pos:end="139:36"><name pos:start="139:28" pos:end="139:36">parent_xc</name></expr>)</condition><block type="pseudo" pos:start="141:29" pos:end="141:76"><block_content pos:start="141:29" pos:end="141:76">

                            <expr_stmt pos:start="141:29" pos:end="141:76"><expr pos:start="141:29" pos:end="141:75"><name pos:start="141:29" pos:end="141:35">max_run</name><operator pos:start="141:36" pos:end="141:36">=</operator> <call pos:start="141:38" pos:end="141:75"><name pos:start="141:38" pos:end="141:42">FFMIN</name><argument_list pos:start="141:43" pos:end="141:75">(<argument pos:start="141:44" pos:end="141:50"><expr pos:start="141:44" pos:end="141:50"><name pos:start="141:44" pos:end="141:50">max_run</name></expr></argument>, <argument pos:start="141:53" pos:end="141:74"><expr pos:start="141:53" pos:end="141:74"><literal type="number" pos:start="141:53" pos:end="141:53">2</literal><operator pos:start="141:54" pos:end="141:54">*</operator><name pos:start="141:55" pos:end="141:66"><name pos:start="141:55" pos:end="141:63">parent_xc</name><operator pos:start="141:64" pos:end="141:65">-&gt;</operator><name pos:start="141:66" pos:end="141:66">x</name></name> <operator pos:start="141:68" pos:end="141:68">-</operator> <name pos:start="141:70" pos:end="141:70">x</name> <operator pos:start="141:72" pos:end="141:72">-</operator> <literal type="number" pos:start="141:74" pos:end="141:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="143:25" pos:end="143:36"><expr pos:start="143:25" pos:end="143:35"><name pos:start="143:25" pos:end="143:25">x</name><operator pos:start="143:26" pos:end="143:27">+=</operator> <name pos:start="143:29" pos:end="143:35">max_run</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="145:25" pos:end="145:38"><expr pos:start="145:25" pos:end="145:37"><name pos:start="145:25" pos:end="145:27">run</name><operator pos:start="145:28" pos:end="145:29">-=</operator> <name pos:start="145:31" pos:end="145:37">max_run</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="153:13" pos:end="153:27"><expr pos:start="153:13" pos:end="153:26"><operator pos:start="153:13" pos:end="153:13">(</operator><name pos:start="153:14" pos:end="153:15">xc</name><operator pos:start="153:16" pos:end="153:17">++</operator><operator pos:start="153:18" pos:end="153:18">)</operator><operator pos:start="153:19" pos:end="153:20">-&gt;</operator><name pos:start="153:21" pos:end="153:21">x</name><operator pos:start="153:22" pos:end="153:22">=</operator> <name pos:start="153:24" pos:end="153:24">w</name><operator pos:start="153:25" pos:end="153:25">+</operator><literal type="number" pos:start="153:26" pos:end="153:26">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="153:29" pos:end="153:40">//end marker</comment>

            <expr_stmt pos:start="155:13" pos:end="155:30"><expr pos:start="155:13" pos:end="155:29"><name pos:start="155:13" pos:end="155:19">prev_xc</name><operator pos:start="155:20" pos:end="155:20">=</operator> <name pos:start="155:22" pos:end="155:29">prev2_xc</name></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:25"><expr pos:start="157:13" pos:end="157:24"><name pos:start="157:13" pos:end="157:20">prev2_xc</name><operator pos:start="157:21" pos:end="157:21">=</operator> <name pos:start="157:23" pos:end="157:24">xc</name></expr>;</expr_stmt>

            

            <if_stmt pos:start="161:13" pos:end="179:13"><if pos:start="161:13" pos:end="179:13">if<condition pos:start="161:15" pos:end="161:25">(<expr pos:start="161:16" pos:end="161:24"><name pos:start="161:16" pos:end="161:24">parent_xc</name></expr>)</condition><block pos:start="161:26" pos:end="179:13">{<block_content pos:start="163:17" pos:end="177:17">

                <if_stmt pos:start="163:17" pos:end="177:17"><if pos:start="163:17" pos:end="173:17">if<condition pos:start="163:19" pos:end="163:23">(<expr pos:start="163:20" pos:end="163:22"><name pos:start="163:20" pos:end="163:20">y</name><operator pos:start="163:21" pos:end="163:21">&amp;</operator><literal type="number" pos:start="163:22" pos:end="163:22">1</literal></expr>)</condition><block pos:start="163:24" pos:end="173:17">{<block_content pos:start="165:21" pos:end="171:46">

                    <while pos:start="165:21" pos:end="167:36">while<condition pos:start="165:26" pos:end="165:58">(<expr pos:start="165:27" pos:end="165:57"><name pos:start="165:27" pos:end="165:38"><name pos:start="165:27" pos:end="165:35">parent_xc</name><operator pos:start="165:36" pos:end="165:37">-&gt;</operator><name pos:start="165:38" pos:end="165:38">x</name></name> <operator pos:start="165:40" pos:end="165:41">!=</operator> <name pos:start="165:43" pos:end="165:55"><name pos:start="165:43" pos:end="165:48">parent</name><operator pos:start="165:49" pos:end="165:50">-&gt;</operator><name pos:start="165:51" pos:end="165:55">width</name></name><operator pos:start="165:56" pos:end="165:56">+</operator><literal type="number" pos:start="165:57" pos:end="165:57">1</literal></expr>)</condition><block type="pseudo" pos:start="167:25" pos:end="167:36"><block_content pos:start="167:25" pos:end="167:36">

                        <expr_stmt pos:start="167:25" pos:end="167:36"><expr pos:start="167:25" pos:end="167:35"><name pos:start="167:25" pos:end="167:33">parent_xc</name><operator pos:start="167:34" pos:end="167:35">++</operator></expr>;</expr_stmt></block_content></block></while>

                    <expr_stmt pos:start="169:21" pos:end="169:32"><expr pos:start="169:21" pos:end="169:31"><name pos:start="169:21" pos:end="169:29">parent_xc</name><operator pos:start="169:30" pos:end="169:31">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="171:21" pos:end="171:46"><expr pos:start="171:21" pos:end="171:45"><name pos:start="171:21" pos:end="171:34">prev_parent_xc</name><operator pos:start="171:35" pos:end="171:35">=</operator> <name pos:start="171:37" pos:end="171:45">parent_xc</name></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="173:18" pos:end="177:17">else<block pos:start="173:22" pos:end="177:17">{<block_content pos:start="175:21" pos:end="175:46">

                    <expr_stmt pos:start="175:21" pos:end="175:46"><expr pos:start="175:21" pos:end="175:45"><name pos:start="175:21" pos:end="175:29">parent_xc</name><operator pos:start="175:30" pos:end="175:30">=</operator> <name pos:start="175:32" pos:end="175:45">prev_parent_xc</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="185:9" pos:end="185:23"><expr pos:start="185:9" pos:end="185:22"><operator pos:start="185:9" pos:end="185:9">(</operator><name pos:start="185:10" pos:end="185:11">xc</name><operator pos:start="185:12" pos:end="185:13">++</operator><operator pos:start="185:14" pos:end="185:14">)</operator><operator pos:start="185:15" pos:end="185:16">-&gt;</operator><name pos:start="185:17" pos:end="185:17">x</name><operator pos:start="185:18" pos:end="185:18">=</operator> <name pos:start="185:20" pos:end="185:20">w</name><operator pos:start="185:21" pos:end="185:21">+</operator><literal type="number" pos:start="185:22" pos:end="185:22">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="185:25" pos:end="185:36">//end marker</comment>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
