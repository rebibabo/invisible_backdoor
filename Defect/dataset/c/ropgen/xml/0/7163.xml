<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7163.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:31">transpose4x4</name><parameter_list pos:start="1:32" pos:end="1:99">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:39">uint8_t</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">dst</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">src</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:78"><decl pos:start="1:61" pos:end="1:78"><type pos:start="1:61" pos:end="1:78"><name pos:start="1:61" pos:end="1:67">x86_reg</name></type> <name pos:start="1:69" pos:end="1:78">dst_stride</name></decl></parameter>, <parameter pos:start="1:81" pos:end="1:98"><decl pos:start="1:81" pos:end="1:98"><type pos:start="1:81" pos:end="1:98"><name pos:start="1:81" pos:end="1:87">x86_reg</name></type> <name pos:start="1:89" pos:end="1:98">src_stride</name></decl></parameter>)</parameter_list><block pos:start="1:100" pos:end="53:1">{<block_content pos:start="3:5" pos:end="51:6">

    <asm pos:start="3:5" pos:end="51:6">__asm__ <specifier pos:start="3:13" pos:end="3:20">volatile</specifier>( <comment type="line" pos:start="3:23" pos:end="3:73">//FIXME could save 1 instruction if done as 8x4 ...</comment>

        "movd  (%1), %%mm0              \n\t"

        "add   %3, %1                   \n\t"

        "movd  (%1), %%mm1              \n\t"

        "movd  (%1,%3,1), %%mm2         \n\t"

        "movd  (%1,%3,2), %%mm3         \n\t"

        "punpcklbw %%mm1, %%mm0         \n\t"

        "punpcklbw %%mm3, %%mm2         \n\t"

        "movq %%mm0, %%mm1              \n\t"

        "punpcklwd %%mm2, %%mm0         \n\t"

        "punpckhwd %%mm2, %%mm1         \n\t"

        "movd  %%mm0, (%0)              \n\t"

        "add   %2, %0                   \n\t"

        "punpckhdq %%mm0, %%mm0         \n\t"

        "movd  %%mm0, (%0)              \n\t"

        "movd  %%mm1, (%0,%2,1)         \n\t"

        "punpckhdq %%mm1, %%mm1         \n\t"

        "movd  %%mm1, (%0,%2,2)         \n\t"



        :  "+&amp;r" (dst),

           "+&amp;r" (src)

        :  "r" (dst_stride),

           "r" (src_stride)

        :  "memory"

    );</asm>

</block_content>}</block></function>
</unit>
