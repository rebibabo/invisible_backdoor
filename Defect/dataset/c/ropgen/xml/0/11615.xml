<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11615.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">test_visitor_out_struct</name><parameter_list pos:start="1:36" pos:end="3:55">(<parameter pos:start="1:37" pos:end="1:63"><decl pos:start="1:37" pos:end="1:63"><type pos:start="1:37" pos:end="1:63"><name pos:start="1:37" pos:end="1:57">TestOutputVisitorData</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">data</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:54"><decl pos:start="3:37" pos:end="3:54"><type pos:start="3:37" pos:end="3:54"><specifier pos:start="3:37" pos:end="3:41">const</specifier> <name pos:start="3:43" pos:end="3:46">void</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:54">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:63">

    <decl_stmt pos:start="7:5" pos:end="11:57"><decl pos:start="7:5" pos:end="11:56"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">TestStruct</name></type> <name pos:start="7:16" pos:end="7:26">test_struct</name> <init pos:start="7:28" pos:end="11:56">= <expr pos:start="7:30" pos:end="11:56"><block pos:start="7:30" pos:end="11:56">{ <expr pos:start="7:32" pos:end="7:44"><operator pos:start="7:32" pos:end="7:32">.</operator><name pos:start="7:33" pos:end="7:39">integer</name> <operator pos:start="7:41" pos:end="7:41">=</operator> <literal type="number" pos:start="7:43" pos:end="7:44">42</literal></expr>,

                               <expr pos:start="9:32" pos:end="9:47"><operator pos:start="9:32" pos:end="9:32">.</operator><name pos:start="9:33" pos:end="9:39">boolean</name> <operator pos:start="9:41" pos:end="9:41">=</operator> <name pos:start="9:43" pos:end="9:47">false</name></expr>,

                               <expr pos:start="11:32" pos:end="11:55"><operator pos:start="11:32" pos:end="11:32">.</operator><name pos:start="11:33" pos:end="11:38">string</name> <operator pos:start="11:40" pos:end="11:40">=</operator> <operator pos:start="11:42" pos:end="11:42">(</operator><name pos:start="11:43" pos:end="11:46">char</name> <operator pos:start="11:48" pos:end="11:48">*</operator><operator pos:start="11:49" pos:end="11:49">)</operator> <literal type="string" pos:start="11:51" pos:end="11:55">"foo"</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">TestStruct</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:17">p</name> <init pos:start="13:19" pos:end="13:32">= <expr pos:start="13:21" pos:end="13:32"><operator pos:start="13:21" pos:end="13:21">&amp;</operator><name pos:start="13:22" pos:end="13:32">test_struct</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">QObject</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:16">obj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">QDict</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:16">qdict</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:60"><expr pos:start="21:5" pos:end="21:59"><call pos:start="21:5" pos:end="21:59"><name pos:start="21:5" pos:end="21:25">visit_type_TestStruct</name><argument_list pos:start="21:26" pos:end="21:59">(<argument pos:start="21:27" pos:end="21:34"><expr pos:start="21:27" pos:end="21:34"><name pos:start="21:27" pos:end="21:34"><name pos:start="21:27" pos:end="21:30">data</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:34">ov</name></name></expr></argument>, <argument pos:start="21:37" pos:end="21:40"><expr pos:start="21:37" pos:end="21:40"><name pos:start="21:37" pos:end="21:40">NULL</name></expr></argument>, <argument pos:start="21:43" pos:end="21:44"><expr pos:start="21:43" pos:end="21:44"><operator pos:start="21:43" pos:end="21:43">&amp;</operator><name pos:start="21:44" pos:end="21:44">p</name></expr></argument>, <argument pos:start="21:47" pos:end="21:58"><expr pos:start="21:47" pos:end="21:58"><operator pos:start="21:47" pos:end="21:47">&amp;</operator><name pos:start="21:48" pos:end="21:58">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:7">obj</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:27"><name pos:start="25:11" pos:end="25:21">visitor_get</name><argument_list pos:start="25:22" pos:end="25:27">(<argument pos:start="25:23" pos:end="25:26"><expr pos:start="25:23" pos:end="25:26"><name pos:start="25:23" pos:end="25:26">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:47"><expr pos:start="27:5" pos:end="27:46"><call pos:start="27:5" pos:end="27:46"><name pos:start="27:5" pos:end="27:12">g_assert</name><argument_list pos:start="27:13" pos:end="27:46">(<argument pos:start="27:14" pos:end="27:45"><expr pos:start="27:14" pos:end="27:45"><call pos:start="27:14" pos:end="27:30"><name pos:start="27:14" pos:end="27:25">qobject_type</name><argument_list pos:start="27:26" pos:end="27:30">(<argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><name pos:start="27:27" pos:end="27:29">obj</name></expr></argument>)</argument_list></call> <operator pos:start="27:32" pos:end="27:33">==</operator> <name pos:start="27:35" pos:end="27:45">QTYPE_QDICT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:9">qdict</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <call pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:28">qobject_to_qdict</name><argument_list pos:start="31:29" pos:end="31:33">(<argument pos:start="31:30" pos:end="31:32"><expr pos:start="31:30" pos:end="31:32"><name pos:start="31:30" pos:end="31:32">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><call pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:19">g_assert_cmpint</name><argument_list pos:start="33:20" pos:end="33:45">(<argument pos:start="33:21" pos:end="33:37"><expr pos:start="33:21" pos:end="33:37"><call pos:start="33:21" pos:end="33:37"><name pos:start="33:21" pos:end="33:30">qdict_size</name><argument_list pos:start="33:31" pos:end="33:37">(<argument pos:start="33:32" pos:end="33:36"><expr pos:start="33:32" pos:end="33:36"><name pos:start="33:32" pos:end="33:36">qdict</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:40" pos:end="33:41"><expr pos:start="33:40" pos:end="33:41"><operator pos:start="33:40" pos:end="33:41">==</operator></expr></argument>, <argument pos:start="33:44" pos:end="33:44"><expr pos:start="33:44" pos:end="33:44"><literal type="number" pos:start="33:44" pos:end="33:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:61"><expr pos:start="35:5" pos:end="35:60"><call pos:start="35:5" pos:end="35:60"><name pos:start="35:5" pos:end="35:19">g_assert_cmpint</name><argument_list pos:start="35:20" pos:end="35:60">(<argument pos:start="35:21" pos:end="35:51"><expr pos:start="35:21" pos:end="35:51"><call pos:start="35:21" pos:end="35:51"><name pos:start="35:21" pos:end="35:33">qdict_get_int</name><argument_list pos:start="35:34" pos:end="35:51">(<argument pos:start="35:35" pos:end="35:39"><expr pos:start="35:35" pos:end="35:39"><name pos:start="35:35" pos:end="35:39">qdict</name></expr></argument>, <argument pos:start="35:42" pos:end="35:50"><expr pos:start="35:42" pos:end="35:50"><literal type="string" pos:start="35:42" pos:end="35:50">"integer"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:54" pos:end="35:55"><expr pos:start="35:54" pos:end="35:55"><operator pos:start="35:54" pos:end="35:55">==</operator></expr></argument>, <argument pos:start="35:58" pos:end="35:59"><expr pos:start="35:58" pos:end="35:59"><literal type="number" pos:start="35:58" pos:end="35:59">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:65"><expr pos:start="37:5" pos:end="37:64"><call pos:start="37:5" pos:end="37:64"><name pos:start="37:5" pos:end="37:19">g_assert_cmpint</name><argument_list pos:start="37:20" pos:end="37:64">(<argument pos:start="37:21" pos:end="37:52"><expr pos:start="37:21" pos:end="37:52"><call pos:start="37:21" pos:end="37:52"><name pos:start="37:21" pos:end="37:34">qdict_get_bool</name><argument_list pos:start="37:35" pos:end="37:52">(<argument pos:start="37:36" pos:end="37:40"><expr pos:start="37:36" pos:end="37:40"><name pos:start="37:36" pos:end="37:40">qdict</name></expr></argument>, <argument pos:start="37:43" pos:end="37:51"><expr pos:start="37:43" pos:end="37:51"><literal type="string" pos:start="37:43" pos:end="37:51">"boolean"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:55" pos:end="37:56"><expr pos:start="37:55" pos:end="37:56"><operator pos:start="37:55" pos:end="37:56">==</operator></expr></argument>, <argument pos:start="37:59" pos:end="37:63"><expr pos:start="37:59" pos:end="37:63"><name pos:start="37:59" pos:end="37:63">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:63"><expr pos:start="39:5" pos:end="39:62"><call pos:start="39:5" pos:end="39:62"><name pos:start="39:5" pos:end="39:19">g_assert_cmpstr</name><argument_list pos:start="39:20" pos:end="39:62">(<argument pos:start="39:21" pos:end="39:50"><expr pos:start="39:21" pos:end="39:50"><call pos:start="39:21" pos:end="39:50"><name pos:start="39:21" pos:end="39:33">qdict_get_str</name><argument_list pos:start="39:34" pos:end="39:50">(<argument pos:start="39:35" pos:end="39:39"><expr pos:start="39:35" pos:end="39:39"><name pos:start="39:35" pos:end="39:39">qdict</name></expr></argument>, <argument pos:start="39:42" pos:end="39:49"><expr pos:start="39:42" pos:end="39:49"><literal type="string" pos:start="39:42" pos:end="39:49">"string"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:53" pos:end="39:54"><expr pos:start="39:53" pos:end="39:54"><operator pos:start="39:53" pos:end="39:54">==</operator></expr></argument>, <argument pos:start="39:57" pos:end="39:61"><expr pos:start="39:57" pos:end="39:61"><literal type="string" pos:start="39:57" pos:end="39:61">"foo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
