<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7868.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">apic_reset</name><parameter_list pos:start="1:23" pos:end="1:36">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:29"><name pos:start="1:24" pos:end="1:27">void</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:35">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:5">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">APICState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">bsp</name> <init pos:start="7:13" pos:end="7:36">= <expr pos:start="7:15" pos:end="7:36"><call pos:start="7:15" pos:end="7:36"><name pos:start="7:15" pos:end="7:24">cpu_is_bsp</name><argument_list pos:start="7:25" pos:end="7:36">(<argument pos:start="7:26" pos:end="7:35"><expr pos:start="7:26" pos:end="7:35"><name pos:start="7:26" pos:end="7:35"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:35">cpu_env</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="13:69"><expr pos:start="11:5" pos:end="13:68"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:15">apicbase</name></name> <operator pos:start="11:17" pos:end="11:17">=</operator> <literal type="number" pos:start="11:19" pos:end="11:28">0xfee00000</literal> <operator pos:start="11:30" pos:end="11:30">|</operator>

        <operator pos:start="13:9" pos:end="13:9">(</operator><ternary pos:start="13:10" pos:end="13:40"><condition pos:start="13:10" pos:end="13:14"><expr pos:start="13:10" pos:end="13:12"><name pos:start="13:10" pos:end="13:12">bsp</name></expr> ?</condition><then pos:start="13:16" pos:end="13:36"> <expr pos:start="13:16" pos:end="13:36"><name pos:start="13:16" pos:end="13:36">MSR_IA32_APICBASE_BSP</name></expr> </then><else pos:start="13:38" pos:end="13:40">: <expr pos:start="13:40" pos:end="13:40"><literal type="number" pos:start="13:40" pos:end="13:40">0</literal></expr></else></ternary><operator pos:start="13:41" pos:end="13:41">)</operator> <operator pos:start="13:43" pos:end="13:43">|</operator> <name pos:start="13:45" pos:end="13:68">MSR_IA32_APICBASE_ENABLE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><call pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:17">apic_init_ipi</name><argument_list pos:start="17:18" pos:end="17:20">(<argument pos:start="17:19" pos:end="17:19"><expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="35:5"><if pos:start="21:5" pos:end="35:5">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">bsp</name></expr>)</condition> <block pos:start="21:14" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:39">

        <comment type="block" pos:start="23:9" pos:end="31:11">/*

         * LINT0 delivery mode on CPU #0 is set to ExtInt at initialization

         * time typically by BIOS, so PIC interrupt can be delivered to the

         * processor when local APIC is enabled.

         */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:39"><expr pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:14">lvt</name><index pos:start="33:15" pos:end="33:30">[<expr pos:start="33:16" pos:end="33:29"><name pos:start="33:16" pos:end="33:29">APIC_LVT_LINT0</name></expr>]</index></name> <operator pos:start="33:32" pos:end="33:32">=</operator> <literal type="number" pos:start="33:34" pos:end="33:38">0x700</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
