<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2197.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">pmac_ide_writeb</name> <parameter_list pos:start="1:29" pos:end="3:67">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:52"><decl pos:start="3:30" pos:end="3:52"><type pos:start="3:30" pos:end="3:52"><name pos:start="3:30" pos:end="3:47">target_phys_addr_t</name></type> <name pos:start="3:49" pos:end="3:52">addr</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:66"><decl pos:start="3:55" pos:end="3:66"><type pos:start="3:55" pos:end="3:66"><name pos:start="3:55" pos:end="3:62">uint32_t</name></type> <name pos:start="3:64" pos:end="3:66">val</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:5">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MACIOIDEState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">d</name> <init pos:start="7:22" pos:end="7:29">= <expr pos:start="7:24" pos:end="7:29"><name pos:start="7:24" pos:end="7:29">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:31"><expr pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:8">addr</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <operator pos:start="11:12" pos:end="11:12">(</operator><name pos:start="11:13" pos:end="11:16">addr</name> <operator pos:start="11:18" pos:end="11:18">&amp;</operator> <literal type="number" pos:start="11:20" pos:end="11:24">0xFFF</literal><operator pos:start="11:25" pos:end="11:25">)</operator> <operator pos:start="11:27" pos:end="11:28">&gt;&gt;</operator> <literal type="number" pos:start="11:30" pos:end="11:30">4</literal></expr>;</expr_stmt>

    <switch pos:start="13:5" pos:end="33:5">switch <condition pos:start="13:12" pos:end="13:17">(<expr pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:16">addr</name></expr>)</condition> <block pos:start="13:19" pos:end="33:5">{<block_content pos:start="15:5" pos:end="31:14">

    <case pos:start="15:5" pos:end="15:17">case <expr pos:start="15:10" pos:end="15:16"><literal type="number" pos:start="15:10" pos:end="15:10">1</literal> <operator pos:start="15:12" pos:end="15:14">...</operator> <literal type="number" pos:start="15:16" pos:end="15:16">7</literal></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:45"><expr pos:start="17:9" pos:end="17:44"><call pos:start="17:9" pos:end="17:44"><name pos:start="17:9" pos:end="17:24">ide_ioport_write</name><argument_list pos:start="17:25" pos:end="17:44">(<argument pos:start="17:26" pos:end="17:32"><expr pos:start="17:26" pos:end="17:32"><operator pos:start="17:26" pos:end="17:26">&amp;</operator><name pos:start="17:27" pos:end="17:32"><name pos:start="17:27" pos:end="17:27">d</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:32">bus</name></name></expr></argument>, <argument pos:start="17:35" pos:end="17:38"><expr pos:start="17:35" pos:end="17:38"><name pos:start="17:35" pos:end="17:38">addr</name></expr></argument>, <argument pos:start="17:41" pos:end="17:43"><expr pos:start="17:41" pos:end="17:43"><name pos:start="17:41" pos:end="17:43">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:11">case <expr pos:start="21:10" pos:end="21:10"><literal type="number" pos:start="21:10" pos:end="21:10">8</literal></expr>:</case>

    <case pos:start="23:5" pos:end="23:12">case <expr pos:start="23:10" pos:end="23:11"><literal type="number" pos:start="23:10" pos:end="23:11">22</literal></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><call pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:21">ide_cmd_write</name><argument_list pos:start="25:22" pos:end="25:38">(<argument pos:start="25:23" pos:end="25:29"><expr pos:start="25:23" pos:end="25:29"><operator pos:start="25:23" pos:end="25:23">&amp;</operator><name pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:24">d</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:29">bus</name></name></expr></argument>, <argument pos:start="25:32" pos:end="25:32"><expr pos:start="25:32" pos:end="25:32"><literal type="number" pos:start="25:32" pos:end="25:32">0</literal></expr></argument>, <argument pos:start="25:35" pos:end="25:37"><expr pos:start="25:35" pos:end="25:37"><name pos:start="25:35" pos:end="25:37">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <default pos:start="29:5" pos:end="29:12">default:</default>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
