<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5068.c" pos:tabs="8"><function pos:start="1:1" pos:end="185:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">fourxm_read_packet</name><parameter_list pos:start="1:30" pos:end="3:44">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:43"><decl pos:start="3:31" pos:end="3:43"><type pos:start="3:31" pos:end="3:43"><name pos:start="3:31" pos:end="3:38">AVPacket</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:43">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="185:1">{<block_content pos:start="7:5" pos:end="183:15">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">FourxmDemuxContext</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:30">fourxm</name> <init pos:start="7:32" pos:end="7:45">= <expr pos:start="7:34" pos:end="7:45"><name pos:start="7:34" pos:end="7:45"><name pos:start="7:34" pos:end="7:34">s</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ByteIOContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">pb</name> <init pos:start="9:23" pos:end="9:29">= <expr pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:27">fourcc_tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:21">size</name></decl>, <decl pos:start="13:24" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:24" pos:end="13:31">out_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:29">track_number</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:19">packet_read</name> <init pos:start="19:21" pos:end="19:23">= <expr pos:start="19:23" pos:end="19:23"><literal type="number" pos:start="19:23" pos:end="19:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:28"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:17">char</name></type> <name pos:start="21:19" pos:end="21:27"><name pos:start="21:19" pos:end="21:24">header</name><index pos:start="21:25" pos:end="21:27">[<expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">8</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:26"><decl pos:start="23:5" pos:end="23:25"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:25">audio_frame_count</name></decl>;</decl_stmt>



    <while pos:start="27:5" pos:end="181:5">while <condition pos:start="27:11" pos:end="27:24">(<expr pos:start="27:12" pos:end="27:23"><operator pos:start="27:12" pos:end="27:12">!</operator><name pos:start="27:13" pos:end="27:23">packet_read</name></expr>)</condition> <block pos:start="27:26" pos:end="181:5">{<block_content pos:start="31:9" pos:end="179:9">



        <if_stmt pos:start="31:9" pos:end="33:23"><if pos:start="31:9" pos:end="33:23">if <condition pos:start="31:12" pos:end="31:53">(<expr pos:start="31:13" pos:end="31:52"><operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:16">ret</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <call pos:start="31:20" pos:end="31:47"><name pos:start="31:20" pos:end="31:29">get_buffer</name><argument_list pos:start="31:30" pos:end="31:47">(<argument pos:start="31:31" pos:end="31:35"><expr pos:start="31:31" pos:end="31:35"><name pos:start="31:31" pos:end="31:35"><name pos:start="31:31" pos:end="31:31">s</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:35">pb</name></name></expr></argument>, <argument pos:start="31:38" pos:end="31:43"><expr pos:start="31:38" pos:end="31:43"><name pos:start="31:38" pos:end="31:43">header</name></expr></argument>, <argument pos:start="31:46" pos:end="31:46"><expr pos:start="31:46" pos:end="31:46"><literal type="number" pos:start="31:46" pos:end="31:46">8</literal></expr></argument>)</argument_list></call><operator pos:start="31:48" pos:end="31:48">)</operator> <operator pos:start="31:50" pos:end="31:50">&lt;</operator> <literal type="number" pos:start="31:52" pos:end="31:52">0</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:23"><block_content pos:start="33:13" pos:end="33:23">

            <return pos:start="33:13" pos:end="33:23">return <expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:18">fourcc_tag</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <call pos:start="35:22" pos:end="35:40"><name pos:start="35:22" pos:end="35:28">AV_RL32</name><argument_list pos:start="35:29" pos:end="35:40">(<argument pos:start="35:30" pos:end="35:39"><expr pos:start="35:30" pos:end="35:39"><operator pos:start="35:30" pos:end="35:30">&amp;</operator><name pos:start="35:31" pos:end="35:39"><name pos:start="35:31" pos:end="35:36">header</name><index pos:start="35:37" pos:end="35:39">[<expr pos:start="35:38" pos:end="35:38"><literal type="number" pos:start="35:38" pos:end="35:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:12">size</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:34"><name pos:start="37:16" pos:end="37:22">AV_RL32</name><argument_list pos:start="37:23" pos:end="37:34">(<argument pos:start="37:24" pos:end="37:33"><expr pos:start="37:24" pos:end="37:33"><operator pos:start="37:24" pos:end="37:24">&amp;</operator><name pos:start="37:25" pos:end="37:33"><name pos:start="37:25" pos:end="37:30">header</name><index pos:start="37:31" pos:end="37:33">[<expr pos:start="37:32" pos:end="37:32"><literal type="number" pos:start="37:32" pos:end="37:32">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:32"><if pos:start="39:9" pos:end="41:32">if <condition pos:start="39:12" pos:end="39:25">(<expr pos:start="39:13" pos:end="39:24"><call pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:20">url_feof</name><argument_list pos:start="39:21" pos:end="39:24">(<argument pos:start="39:22" pos:end="39:23"><expr pos:start="39:22" pos:end="39:23"><name pos:start="39:22" pos:end="39:23">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:32"><block_content pos:start="41:13" pos:end="41:32">

            <return pos:start="41:13" pos:end="41:32">return <expr pos:start="41:20" pos:end="41:31"><call pos:start="41:20" pos:end="41:31"><name pos:start="41:20" pos:end="41:26">AVERROR</name><argument_list pos:start="41:27" pos:end="41:31">(<argument pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <switch pos:start="43:9" pos:end="179:9">switch <condition pos:start="43:16" pos:end="43:27">(<expr pos:start="43:17" pos:end="43:26"><name pos:start="43:17" pos:end="43:26">fourcc_tag</name></expr>)</condition> <block pos:start="43:29" pos:end="179:9">{<block_content pos:start="47:9" pos:end="177:18">



        <case pos:start="47:9" pos:end="47:22">case <expr pos:start="47:14" pos:end="47:21"><name pos:start="47:14" pos:end="47:21">LIST_TAG</name></expr>:</case>

            <comment type="block" pos:start="49:13" pos:end="49:59">/* this is a good time to bump the video pts */</comment>

            <expr_stmt pos:start="51:13" pos:end="51:33"><expr pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:29"><name pos:start="51:13" pos:end="51:18">fourxm</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:29">video_pts</name></name> <operator pos:start="51:31" pos:end="51:32">++</operator></expr>;</expr_stmt>



            <comment type="block" pos:start="55:13" pos:end="55:68">/* skip the LIST-* tag and move on to the next fourcc */</comment>

            <expr_stmt pos:start="57:13" pos:end="57:25"><expr pos:start="57:13" pos:end="57:24"><call pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:20">get_le32</name><argument_list pos:start="57:21" pos:end="57:24">(<argument pos:start="57:22" pos:end="57:23"><expr pos:start="57:22" pos:end="57:23"><name pos:start="57:22" pos:end="57:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="59:13" pos:end="59:18">break;</break>



        <case pos:start="63:9" pos:end="63:22">case <expr pos:start="63:14" pos:end="63:21"><name pos:start="63:14" pos:end="63:21">ifrm_TAG</name></expr>:</case>

        <case pos:start="65:9" pos:end="65:22">case <expr pos:start="65:14" pos:end="65:21"><name pos:start="65:14" pos:end="65:21">pfrm_TAG</name></expr>:</case>

        <case pos:start="67:9" pos:end="67:22">case <expr pos:start="67:14" pos:end="67:21"><name pos:start="67:14" pos:end="67:21">cfrm_TAG</name></expr>:</case>

        <case pos:start="69:9" pos:end="69:22">case <expr pos:start="69:14" pos:end="69:21"><name pos:start="69:14" pos:end="69:21">ifr2_TAG</name></expr>:</case>

        <case pos:start="71:9" pos:end="71:22">case <expr pos:start="71:14" pos:end="71:21"><name pos:start="71:14" pos:end="71:21">pfr2_TAG</name></expr>:</case>

        <case pos:start="73:9" pos:end="73:22">case <expr pos:start="73:14" pos:end="73:21"><name pos:start="73:14" pos:end="73:21">cfr2_TAG</name></expr>:</case>

            <comment type="block" pos:start="75:13" pos:end="77:26">/* allocate 8 more bytes than 'size' to account for fourcc

             * and size */</comment>

            <if_stmt pos:start="79:13" pos:end="81:36"><if pos:start="79:13" pos:end="81:36">if <condition pos:start="79:16" pos:end="79:64">(<expr pos:start="79:17" pos:end="79:63"><name pos:start="79:17" pos:end="79:20">size</name> <operator pos:start="79:22" pos:end="79:22">+</operator> <literal type="number" pos:start="79:24" pos:end="79:24">8</literal> <operator pos:start="79:26" pos:end="79:26">&lt;</operator> <name pos:start="79:28" pos:end="79:31">size</name> <operator pos:start="79:33" pos:end="79:34">||</operator> <call pos:start="79:36" pos:end="79:63"><name pos:start="79:36" pos:end="79:48">av_new_packet</name><argument_list pos:start="79:49" pos:end="79:63">(<argument pos:start="79:50" pos:end="79:52"><expr pos:start="79:50" pos:end="79:52"><name pos:start="79:50" pos:end="79:52">pkt</name></expr></argument>, <argument pos:start="79:55" pos:end="79:62"><expr pos:start="79:55" pos:end="79:62"><name pos:start="79:55" pos:end="79:58">size</name> <operator pos:start="79:60" pos:end="79:60">+</operator> <literal type="number" pos:start="79:62" pos:end="79:62">8</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:36"><block_content pos:start="81:17" pos:end="81:36">

                <return pos:start="81:17" pos:end="81:36">return <expr pos:start="81:24" pos:end="81:35"><call pos:start="81:24" pos:end="81:35"><name pos:start="81:24" pos:end="81:30">AVERROR</name><argument_list pos:start="81:31" pos:end="81:35">(<argument pos:start="81:32" pos:end="81:34"><expr pos:start="81:32" pos:end="81:34"><name pos:start="81:32" pos:end="81:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:59"><expr pos:start="83:13" pos:end="83:58"><name pos:start="83:13" pos:end="83:29"><name pos:start="83:13" pos:end="83:15">pkt</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:29">stream_index</name></name> <operator pos:start="83:31" pos:end="83:31">=</operator> <name pos:start="83:33" pos:end="83:58"><name pos:start="83:33" pos:end="83:38">fourxm</name><operator pos:start="83:39" pos:end="83:40">-&gt;</operator><name pos:start="83:41" pos:end="83:58">video_stream_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:41"><expr pos:start="85:13" pos:end="85:40"><name pos:start="85:13" pos:end="85:20"><name pos:start="85:13" pos:end="85:15">pkt</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:20">pts</name></name> <operator pos:start="85:22" pos:end="85:22">=</operator> <name pos:start="85:24" pos:end="85:40"><name pos:start="85:24" pos:end="85:29">fourxm</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:40">video_pts</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:40"><expr pos:start="87:13" pos:end="87:39"><name pos:start="87:13" pos:end="87:20"><name pos:start="87:13" pos:end="87:15">pkt</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:20">pos</name></name> <operator pos:start="87:22" pos:end="87:22">=</operator> <call pos:start="87:24" pos:end="87:39"><name pos:start="87:24" pos:end="87:32">url_ftell</name><argument_list pos:start="87:33" pos:end="87:39">(<argument pos:start="87:34" pos:end="87:38"><expr pos:start="87:34" pos:end="87:38"><name pos:start="87:34" pos:end="87:38"><name pos:start="87:34" pos:end="87:34">s</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:38">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:41"><expr pos:start="89:13" pos:end="89:40"><call pos:start="89:13" pos:end="89:40"><name pos:start="89:13" pos:end="89:18">memcpy</name><argument_list pos:start="89:19" pos:end="89:40">(<argument pos:start="89:20" pos:end="89:28"><expr pos:start="89:20" pos:end="89:28"><name pos:start="89:20" pos:end="89:28"><name pos:start="89:20" pos:end="89:22">pkt</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:28">data</name></name></expr></argument>, <argument pos:start="89:31" pos:end="89:36"><expr pos:start="89:31" pos:end="89:36"><name pos:start="89:31" pos:end="89:36">header</name></expr></argument>, <argument pos:start="89:39" pos:end="89:39"><expr pos:start="89:39" pos:end="89:39"><literal type="number" pos:start="89:39" pos:end="89:39">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:57"><expr pos:start="91:13" pos:end="91:56"><name pos:start="91:13" pos:end="91:15">ret</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <call pos:start="91:19" pos:end="91:56"><name pos:start="91:19" pos:end="91:28">get_buffer</name><argument_list pos:start="91:29" pos:end="91:56">(<argument pos:start="91:30" pos:end="91:34"><expr pos:start="91:30" pos:end="91:34"><name pos:start="91:30" pos:end="91:34"><name pos:start="91:30" pos:end="91:30">s</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:34">pb</name></name></expr></argument>, <argument pos:start="91:37" pos:end="91:49"><expr pos:start="91:37" pos:end="91:49"><operator pos:start="91:37" pos:end="91:37">&amp;</operator><name pos:start="91:38" pos:end="91:49"><name pos:start="91:38" pos:end="91:40">pkt</name><operator pos:start="91:41" pos:end="91:42">-&gt;</operator><name pos:start="91:43" pos:end="91:46">data</name><index pos:start="91:47" pos:end="91:49">[<expr pos:start="91:48" pos:end="91:48"><literal type="number" pos:start="91:48" pos:end="91:48">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="91:52" pos:end="91:55"><expr pos:start="91:52" pos:end="91:55"><name pos:start="91:52" pos:end="91:55">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="95:13" pos:end="101:32"><if pos:start="95:13" pos:end="99:13">if <condition pos:start="95:16" pos:end="95:24">(<expr pos:start="95:17" pos:end="95:23"><name pos:start="95:17" pos:end="95:19">ret</name> <operator pos:start="95:21" pos:end="95:21">&lt;</operator> <literal type="number" pos:start="95:23" pos:end="95:23">0</literal></expr>)</condition><block pos:start="95:25" pos:end="99:13">{<block_content pos:start="97:17" pos:end="97:36">

                <expr_stmt pos:start="97:17" pos:end="97:36"><expr pos:start="97:17" pos:end="97:35"><call pos:start="97:17" pos:end="97:35"><name pos:start="97:17" pos:end="97:30">av_free_packet</name><argument_list pos:start="97:31" pos:end="97:35">(<argument pos:start="97:32" pos:end="97:34"><expr pos:start="97:32" pos:end="97:34"><name pos:start="97:32" pos:end="97:34">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="99:14" pos:end="101:32">else<block type="pseudo" pos:start="101:17" pos:end="101:32"><block_content pos:start="101:17" pos:end="101:32">

                <expr_stmt pos:start="101:17" pos:end="101:32"><expr pos:start="101:17" pos:end="101:31"><name pos:start="101:17" pos:end="101:27">packet_read</name> <operator pos:start="101:29" pos:end="101:29">=</operator> <literal type="number" pos:start="101:31" pos:end="101:31">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>



        <case pos:start="107:9" pos:end="107:22">case <expr pos:start="107:14" pos:end="107:21"><name pos:start="107:14" pos:end="107:21">snd__TAG</name></expr>:</case>

            <expr_stmt pos:start="109:13" pos:end="109:40"><expr pos:start="109:13" pos:end="109:39"><name pos:start="109:13" pos:end="109:24">track_number</name> <operator pos:start="109:26" pos:end="109:26">=</operator> <call pos:start="109:28" pos:end="109:39"><name pos:start="109:28" pos:end="109:35">get_le32</name><argument_list pos:start="109:36" pos:end="109:39">(<argument pos:start="109:37" pos:end="109:38"><expr pos:start="109:37" pos:end="109:38"><name pos:start="109:37" pos:end="109:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:35"><expr pos:start="111:13" pos:end="111:34"><name pos:start="111:13" pos:end="111:20">out_size</name><operator pos:start="111:21" pos:end="111:21">=</operator> <call pos:start="111:23" pos:end="111:34"><name pos:start="111:23" pos:end="111:30">get_le32</name><argument_list pos:start="111:31" pos:end="111:34">(<argument pos:start="111:32" pos:end="111:33"><expr pos:start="111:32" pos:end="111:33"><name pos:start="111:32" pos:end="111:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:20"><expr pos:start="113:13" pos:end="113:19"><name pos:start="113:13" pos:end="113:16">size</name><operator pos:start="113:17" pos:end="113:18">-=</operator><literal type="number" pos:start="113:19" pos:end="113:19">8</literal></expr>;</expr_stmt>



            <if_stmt pos:start="117:13" pos:end="167:13"><if pos:start="117:13" pos:end="163:13">if <condition pos:start="117:16" pos:end="117:51">(<expr pos:start="117:17" pos:end="117:50"><name pos:start="117:17" pos:end="117:28">track_number</name> <operator pos:start="117:30" pos:end="117:30">&lt;</operator> <name pos:start="117:32" pos:end="117:50"><name pos:start="117:32" pos:end="117:37">fourxm</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:50">track_count</name></name></expr>)</condition> <block pos:start="117:53" pos:end="163:13">{<block_content pos:start="119:17" pos:end="159:76">

                <expr_stmt pos:start="119:17" pos:end="119:53"><expr pos:start="119:17" pos:end="119:52"><name pos:start="119:17" pos:end="119:19">ret</name><operator pos:start="119:20" pos:end="119:20">=</operator> <call pos:start="119:22" pos:end="119:52"><name pos:start="119:22" pos:end="119:34">av_get_packet</name><argument_list pos:start="119:35" pos:end="119:52">(<argument pos:start="119:36" pos:end="119:40"><expr pos:start="119:36" pos:end="119:40"><name pos:start="119:36" pos:end="119:40"><name pos:start="119:36" pos:end="119:36">s</name><operator pos:start="119:37" pos:end="119:38">-&gt;</operator><name pos:start="119:39" pos:end="119:40">pb</name></name></expr></argument>, <argument pos:start="119:43" pos:end="119:45"><expr pos:start="119:43" pos:end="119:45"><name pos:start="119:43" pos:end="119:45">pkt</name></expr></argument>, <argument pos:start="119:48" pos:end="119:51"><expr pos:start="119:48" pos:end="119:51"><name pos:start="119:48" pos:end="119:51">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="121:17" pos:end="123:40"><if pos:start="121:17" pos:end="123:40">if<condition pos:start="121:19" pos:end="121:25">(<expr pos:start="121:20" pos:end="121:24"><name pos:start="121:20" pos:end="121:22">ret</name><operator pos:start="121:23" pos:end="121:23">&lt;</operator><literal type="number" pos:start="121:24" pos:end="121:24">0</literal></expr>)</condition><block type="pseudo" pos:start="123:21" pos:end="123:40"><block_content pos:start="123:21" pos:end="123:40">

                    <return pos:start="123:21" pos:end="123:40">return <expr pos:start="123:28" pos:end="123:39"><call pos:start="123:28" pos:end="123:39"><name pos:start="123:28" pos:end="123:34">AVERROR</name><argument_list pos:start="123:35" pos:end="123:39">(<argument pos:start="123:36" pos:end="123:38"><expr pos:start="123:36" pos:end="123:38"><name pos:start="123:36" pos:end="123:38">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="125:17" pos:end="127:62"><expr pos:start="125:17" pos:end="127:61"><name pos:start="125:17" pos:end="125:33"><name pos:start="125:17" pos:end="125:19">pkt</name><operator pos:start="125:20" pos:end="125:21">-&gt;</operator><name pos:start="125:22" pos:end="125:33">stream_index</name></name> <operator pos:start="125:35" pos:end="125:35">=</operator>

                    <name pos:start="127:21" pos:end="127:48"><name pos:start="127:21" pos:end="127:26">fourxm</name><operator pos:start="127:27" pos:end="127:28">-&gt;</operator><name pos:start="127:29" pos:end="127:34">tracks</name><index pos:start="127:35" pos:end="127:48">[<expr pos:start="127:36" pos:end="127:47"><name pos:start="127:36" pos:end="127:47">track_number</name></expr>]</index></name><operator pos:start="127:49" pos:end="127:49">.</operator><name pos:start="127:50" pos:end="127:61">stream_index</name></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:66"><expr pos:start="129:17" pos:end="129:65"><name pos:start="129:17" pos:end="129:24"><name pos:start="129:17" pos:end="129:19">pkt</name><operator pos:start="129:20" pos:end="129:21">-&gt;</operator><name pos:start="129:22" pos:end="129:24">pts</name></name> <operator pos:start="129:26" pos:end="129:26">=</operator> <name pos:start="129:28" pos:end="129:55"><name pos:start="129:28" pos:end="129:33">fourxm</name><operator pos:start="129:34" pos:end="129:35">-&gt;</operator><name pos:start="129:36" pos:end="129:41">tracks</name><index pos:start="129:42" pos:end="129:55">[<expr pos:start="129:43" pos:end="129:54"><name pos:start="129:43" pos:end="129:54">track_number</name></expr>]</index></name><operator pos:start="129:56" pos:end="129:56">.</operator><name pos:start="129:57" pos:end="129:65">audio_pts</name></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:32"><expr pos:start="131:17" pos:end="131:31"><name pos:start="131:17" pos:end="131:27">packet_read</name> <operator pos:start="131:29" pos:end="131:29">=</operator> <literal type="number" pos:start="131:31" pos:end="131:31">1</literal></expr>;</expr_stmt>



                <comment type="block" pos:start="135:17" pos:end="135:36">/* pts accounting */</comment>

                <expr_stmt pos:start="137:17" pos:end="137:41"><expr pos:start="137:17" pos:end="137:40"><name pos:start="137:17" pos:end="137:33">audio_frame_count</name> <operator pos:start="137:35" pos:end="137:35">=</operator> <name pos:start="137:37" pos:end="137:40">size</name></expr>;</expr_stmt>

                <if_stmt pos:start="139:17" pos:end="143:68"><if pos:start="139:17" pos:end="143:68">if <condition pos:start="139:20" pos:end="139:55">(<expr pos:start="139:21" pos:end="139:54"><name pos:start="139:21" pos:end="139:48"><name pos:start="139:21" pos:end="139:26">fourxm</name><operator pos:start="139:27" pos:end="139:28">-&gt;</operator><name pos:start="139:29" pos:end="139:34">tracks</name><index pos:start="139:35" pos:end="139:48">[<expr pos:start="139:36" pos:end="139:47"><name pos:start="139:36" pos:end="139:47">track_number</name></expr>]</index></name><operator pos:start="139:49" pos:end="139:49">.</operator><name pos:start="139:50" pos:end="139:54">adpcm</name></expr>)</condition><block type="pseudo" pos:start="141:21" pos:end="143:68"><block_content pos:start="141:21" pos:end="143:68">

                    <expr_stmt pos:start="141:21" pos:end="143:68"><expr pos:start="141:21" pos:end="143:67"><name pos:start="141:21" pos:end="141:37">audio_frame_count</name> <operator pos:start="141:39" pos:end="141:40">-=</operator>

                        <literal type="number" pos:start="143:25" pos:end="143:25">2</literal> <operator pos:start="143:27" pos:end="143:27">*</operator> <operator pos:start="143:29" pos:end="143:29">(</operator><name pos:start="143:30" pos:end="143:57"><name pos:start="143:30" pos:end="143:35">fourxm</name><operator pos:start="143:36" pos:end="143:37">-&gt;</operator><name pos:start="143:38" pos:end="143:43">tracks</name><index pos:start="143:44" pos:end="143:57">[<expr pos:start="143:45" pos:end="143:56"><name pos:start="143:45" pos:end="143:56">track_number</name></expr>]</index></name><operator pos:start="143:58" pos:end="143:58">.</operator><name pos:start="143:59" pos:end="143:66">channels</name><operator pos:start="143:67" pos:end="143:67">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="145:17" pos:end="147:60"><expr pos:start="145:17" pos:end="147:59"><name pos:start="145:17" pos:end="145:33">audio_frame_count</name> <operator pos:start="145:35" pos:end="145:36">/=</operator>

                      <name pos:start="147:23" pos:end="147:50"><name pos:start="147:23" pos:end="147:28">fourxm</name><operator pos:start="147:29" pos:end="147:30">-&gt;</operator><name pos:start="147:31" pos:end="147:36">tracks</name><index pos:start="147:37" pos:end="147:50">[<expr pos:start="147:38" pos:end="147:49"><name pos:start="147:38" pos:end="147:49">track_number</name></expr>]</index></name><operator pos:start="147:51" pos:end="147:51">.</operator><name pos:start="147:52" pos:end="147:59">channels</name></expr>;</expr_stmt>

                <if_stmt pos:start="149:17" pos:end="157:60"><if pos:start="149:17" pos:end="153:17">if <condition pos:start="149:20" pos:end="149:55">(<expr pos:start="149:21" pos:end="149:54"><name pos:start="149:21" pos:end="149:48"><name pos:start="149:21" pos:end="149:26">fourxm</name><operator pos:start="149:27" pos:end="149:28">-&gt;</operator><name pos:start="149:29" pos:end="149:34">tracks</name><index pos:start="149:35" pos:end="149:48">[<expr pos:start="149:36" pos:end="149:47"><name pos:start="149:36" pos:end="149:47">track_number</name></expr>]</index></name><operator pos:start="149:49" pos:end="149:49">.</operator><name pos:start="149:50" pos:end="149:54">adpcm</name></expr>)</condition><block pos:start="149:56" pos:end="153:17">{<block_content pos:start="151:21" pos:end="151:43">

                    <expr_stmt pos:start="151:21" pos:end="151:43"><expr pos:start="151:21" pos:end="151:42"><name pos:start="151:21" pos:end="151:37">audio_frame_count</name> <operator pos:start="151:39" pos:end="151:40">*=</operator> <literal type="number" pos:start="151:42" pos:end="151:42">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="153:18" pos:end="157:60">else<block type="pseudo" pos:start="155:21" pos:end="157:60"><block_content pos:start="155:21" pos:end="157:60">

                    <expr_stmt pos:start="155:21" pos:end="157:60"><expr pos:start="155:21" pos:end="157:59"><name pos:start="155:21" pos:end="155:37">audio_frame_count</name> <operator pos:start="155:39" pos:end="155:40">/=</operator>

                    <operator pos:start="157:21" pos:end="157:21">(</operator><name pos:start="157:22" pos:end="157:49"><name pos:start="157:22" pos:end="157:27">fourxm</name><operator pos:start="157:28" pos:end="157:29">-&gt;</operator><name pos:start="157:30" pos:end="157:35">tracks</name><index pos:start="157:36" pos:end="157:49">[<expr pos:start="157:37" pos:end="157:48"><name pos:start="157:37" pos:end="157:48">track_number</name></expr>]</index></name><operator pos:start="157:50" pos:end="157:50">.</operator><name pos:start="157:51" pos:end="157:54">bits</name> <operator pos:start="157:56" pos:end="157:56">/</operator> <literal type="number" pos:start="157:58" pos:end="157:58">8</literal><operator pos:start="157:59" pos:end="157:59">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:76"><expr pos:start="159:17" pos:end="159:75"><name pos:start="159:17" pos:end="159:44"><name pos:start="159:17" pos:end="159:22">fourxm</name><operator pos:start="159:23" pos:end="159:24">-&gt;</operator><name pos:start="159:25" pos:end="159:30">tracks</name><index pos:start="159:31" pos:end="159:44">[<expr pos:start="159:32" pos:end="159:43"><name pos:start="159:32" pos:end="159:43">track_number</name></expr>]</index></name><operator pos:start="159:45" pos:end="159:45">.</operator><name pos:start="159:46" pos:end="159:54">audio_pts</name> <operator pos:start="159:56" pos:end="159:57">+=</operator> <name pos:start="159:59" pos:end="159:75">audio_frame_count</name></expr>;</expr_stmt>



            </block_content>}</block></if> <else pos:start="163:15" pos:end="167:13">else <block pos:start="163:20" pos:end="167:13">{<block_content pos:start="165:17" pos:end="165:46">

                <expr_stmt pos:start="165:17" pos:end="165:46"><expr pos:start="165:17" pos:end="165:45"><call pos:start="165:17" pos:end="165:45"><name pos:start="165:17" pos:end="165:25">url_fseek</name><argument_list pos:start="165:26" pos:end="165:45">(<argument pos:start="165:27" pos:end="165:28"><expr pos:start="165:27" pos:end="165:28"><name pos:start="165:27" pos:end="165:28">pb</name></expr></argument>, <argument pos:start="165:31" pos:end="165:34"><expr pos:start="165:31" pos:end="165:34"><name pos:start="165:31" pos:end="165:34">size</name></expr></argument>, <argument pos:start="165:37" pos:end="165:44"><expr pos:start="165:37" pos:end="165:44"><name pos:start="165:37" pos:end="165:44">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="169:13" pos:end="169:18">break;</break>



        <default pos:start="173:9" pos:end="173:16">default:</default>

            <expr_stmt pos:start="175:13" pos:end="175:42"><expr pos:start="175:13" pos:end="175:41"><call pos:start="175:13" pos:end="175:41"><name pos:start="175:13" pos:end="175:21">url_fseek</name><argument_list pos:start="175:22" pos:end="175:41">(<argument pos:start="175:23" pos:end="175:24"><expr pos:start="175:23" pos:end="175:24"><name pos:start="175:23" pos:end="175:24">pb</name></expr></argument>, <argument pos:start="175:27" pos:end="175:30"><expr pos:start="175:27" pos:end="175:30"><name pos:start="175:27" pos:end="175:30">size</name></expr></argument>, <argument pos:start="175:33" pos:end="175:40"><expr pos:start="175:33" pos:end="175:40"><name pos:start="175:33" pos:end="175:40">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="177:13" pos:end="177:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></while>

    <return pos:start="183:5" pos:end="183:15">return <expr pos:start="183:12" pos:end="183:14"><name pos:start="183:12" pos:end="183:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
