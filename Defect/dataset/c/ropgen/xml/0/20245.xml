<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20245.c" pos:tabs="8"><function pos:start="1:1" pos:end="15:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">qemu_aio_unref</name><parameter_list pos:start="1:20" pos:end="1:28">(<parameter pos:start="1:21" pos:end="1:27"><decl pos:start="1:21" pos:end="1:27"><type pos:start="1:21" pos:end="1:26"><name pos:start="1:21" pos:end="1:24">void</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:27">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="15:1">{<block_content pos:start="5:5" pos:end="13:5">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">BlockAIOCB</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">acb</name> <init pos:start="5:21" pos:end="5:23">= <expr pos:start="5:23" pos:end="5:23"><name pos:start="5:23" pos:end="5:23">p</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:28"><expr pos:start="7:5" pos:end="7:27"><call pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:10">assert</name><argument_list pos:start="7:11" pos:end="7:27">(<argument pos:start="7:12" pos:end="7:26"><expr pos:start="7:12" pos:end="7:26"><name pos:start="7:12" pos:end="7:22"><name pos:start="7:12" pos:end="7:14">acb</name><operator pos:start="7:15" pos:end="7:16">-&gt;</operator><name pos:start="7:17" pos:end="7:22">refcnt</name></name> <operator pos:start="7:24" pos:end="7:24">&gt;</operator> <literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:27">(<expr pos:start="9:9" pos:end="9:26"><operator pos:start="9:9" pos:end="9:10">--</operator><name pos:start="9:11" pos:end="9:21"><name pos:start="9:11" pos:end="9:13">acb</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:21">refcnt</name></name> <operator pos:start="9:23" pos:end="9:24">==</operator> <literal type="number" pos:start="9:26" pos:end="9:26">0</literal></expr>)</condition> <block pos:start="9:29" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:20">

        <expr_stmt pos:start="11:9" pos:end="11:20"><expr pos:start="11:9" pos:end="11:19"><call pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:14">g_free</name><argument_list pos:start="11:15" pos:end="11:19">(<argument pos:start="11:16" pos:end="11:18"><expr pos:start="11:16" pos:end="11:18"><name pos:start="11:16" pos:end="11:18">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
