<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24708.c" pos:tabs="8"><function pos:start="1:1" pos:end="591:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">decode_postinit</name><parameter_list pos:start="1:28" pos:end="1:63">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:39">H264Context</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">h</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:62">setup_finished</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="591:1">{<block_content pos:start="5:5" pos:end="589:5">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:15"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">SPS</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">sps</name> <init pos:start="5:20" pos:end="5:30">= <expr pos:start="5:22" pos:end="5:30"><name pos:start="5:22" pos:end="5:30"><name pos:start="5:22" pos:end="5:22">h</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:26">ps</name><operator pos:start="5:27" pos:end="5:27">.</operator><name pos:start="5:28" pos:end="5:30">sps</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">H264Picture</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">out</name> <init pos:start="7:22" pos:end="7:37">= <expr pos:start="7:24" pos:end="7:37"><name pos:start="7:24" pos:end="7:37"><name pos:start="7:24" pos:end="7:24">h</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:37">cur_pic_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">H264Picture</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">cur</name> <init pos:start="9:22" pos:end="9:37">= <expr pos:start="9:24" pos:end="9:37"><name pos:start="9:24" pos:end="9:37"><name pos:start="9:24" pos:end="9:24">h</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:37">cur_pic_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:15">pics</name></decl>, <decl pos:start="11:18" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:29">out_of_order</name></decl>, <decl pos:start="11:32" pos:end="11:38"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:32" pos:end="11:38">out_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">invalid</name> <init pos:start="13:17" pos:end="13:19">= <expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr></init></decl>, <decl pos:start="13:22" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:24">cnt</name> <init pos:start="13:26" pos:end="13:28">= <expr pos:start="13:28" pos:end="13:28"><literal type="number" pos:start="13:28" pos:end="13:28">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:5">h</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:18">cur_pic_ptr</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:21">f</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:32">pict_type</name></name> <operator pos:start="17:34" pos:end="17:34">=</operator> <name pos:start="17:36" pos:end="17:47"><name pos:start="17:36" pos:end="17:36">h</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:47">pict_type</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:15"><if pos:start="21:5" pos:end="23:15">if <condition pos:start="21:8" pos:end="21:27">(<expr pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:9">h</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:26">next_output_pic</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:15"><block_content pos:start="23:9" pos:end="23:15">

        <return pos:start="23:9" pos:end="23:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="43:5"><if pos:start="27:5" pos:end="43:5">if <condition pos:start="27:8" pos:end="27:69">(<expr pos:start="27:9" pos:end="27:68"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:11">cur</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:22">field_poc</name><index pos:start="27:23" pos:end="27:25">[<expr pos:start="27:24" pos:end="27:24"><literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr>]</index></name> <operator pos:start="27:27" pos:end="27:28">==</operator> <name pos:start="27:30" pos:end="27:36">INT_MAX</name> <operator pos:start="27:38" pos:end="27:39">||</operator> <name pos:start="27:41" pos:end="27:57"><name pos:start="27:41" pos:end="27:43">cur</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:54">field_poc</name><index pos:start="27:55" pos:end="27:57">[<expr pos:start="27:56" pos:end="27:56"><literal type="number" pos:start="27:56" pos:end="27:56">1</literal></expr>]</index></name> <operator pos:start="27:59" pos:end="27:60">==</operator> <name pos:start="27:62" pos:end="27:68">INT_MAX</name></expr>)</condition> <block pos:start="27:71" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:15">

        <comment type="block" pos:start="29:9" pos:end="35:50">/* FIXME: if we have two PAFF fields in one packet, we can't start

         * the next thread here. If we have one field per packet, we can.

         * The check in decode_nal_units() is not good enough to find this

         * yet, so we assume the worst for now. */</comment>

        <comment type="line" pos:start="37:9" pos:end="37:30">// if (setup_finished)</comment>

        <comment type="line" pos:start="39:9" pos:end="39:47">//    ff_thread_finish_setup(h-&gt;avctx);</comment>

        <return pos:start="41:9" pos:end="41:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:33"><expr pos:start="47:5" pos:end="47:32"><name pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:7">cur</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:10">f</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:28">interlaced_frame</name></name> <operator pos:start="47:30" pos:end="47:30">=</operator> <literal type="number" pos:start="47:32" pos:end="47:32">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:33"><expr pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:7">cur</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:10">f</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:23">repeat_pict</name></name>      <operator pos:start="49:30" pos:end="49:30">=</operator> <literal type="number" pos:start="49:32" pos:end="49:32">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:52">/* Signal interlacing information externally. */</comment>

    <comment type="block" pos:start="55:5" pos:end="57:40">/* Prioritize picture timing SEI information over used

     * decoding process if it exists. */</comment>



    <if_stmt pos:start="61:5" pos:end="137:5"><if pos:start="61:5" pos:end="131:5">if <condition pos:start="61:8" pos:end="61:37">(<expr pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:11">sps</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:36">pic_struct_present_flag</name></name></expr>)</condition> <block pos:start="61:39" pos:end="131:5">{<block_content pos:start="63:9" pos:end="129:69">

        <decl_stmt pos:start="63:9" pos:end="63:58"><decl pos:start="63:9" pos:end="63:57"><type pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:28">H264SEIPictureTiming</name> <modifier pos:start="63:30" pos:end="63:30">*</modifier></type><name pos:start="63:31" pos:end="63:32">pt</name> <init pos:start="63:34" pos:end="63:57">= <expr pos:start="63:36" pos:end="63:57"><operator pos:start="63:36" pos:end="63:36">&amp;</operator><name pos:start="63:37" pos:end="63:57"><name pos:start="63:37" pos:end="63:37">h</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:42">sei</name><operator pos:start="63:43" pos:end="63:43">.</operator><name pos:start="63:44" pos:end="63:57">picture_timing</name></name></expr></init></decl>;</decl_stmt>

        <switch pos:start="65:9" pos:end="121:9">switch <condition pos:start="65:16" pos:end="65:31">(<expr pos:start="65:17" pos:end="65:30"><name pos:start="65:17" pos:end="65:30"><name pos:start="65:17" pos:end="65:18">pt</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:30">pic_struct</name></name></expr>)</condition> <block pos:start="65:33" pos:end="121:9">{<block_content pos:start="67:9" pos:end="119:18">

        <case pos:start="67:9" pos:end="67:34">case <expr pos:start="67:14" pos:end="67:33"><name pos:start="67:14" pos:end="67:33">SEI_PIC_STRUCT_FRAME</name></expr>:</case>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        <case pos:start="71:9" pos:end="71:38">case <expr pos:start="71:14" pos:end="71:37"><name pos:start="71:14" pos:end="71:37">SEI_PIC_STRUCT_TOP_FIELD</name></expr>:</case>

        <case pos:start="73:9" pos:end="73:41">case <expr pos:start="73:14" pos:end="73:40"><name pos:start="73:14" pos:end="73:40">SEI_PIC_STRUCT_BOTTOM_FIELD</name></expr>:</case>

            <expr_stmt pos:start="75:13" pos:end="75:41"><expr pos:start="75:13" pos:end="75:40"><name pos:start="75:13" pos:end="75:36"><name pos:start="75:13" pos:end="75:15">cur</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:18">f</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:36">interlaced_frame</name></name> <operator pos:start="75:38" pos:end="75:38">=</operator> <literal type="number" pos:start="75:40" pos:end="75:40">1</literal></expr>;</expr_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        <case pos:start="79:9" pos:end="79:39">case <expr pos:start="79:14" pos:end="79:38"><name pos:start="79:14" pos:end="79:38">SEI_PIC_STRUCT_TOP_BOTTOM</name></expr>:</case>

        <case pos:start="81:9" pos:end="81:39">case <expr pos:start="81:14" pos:end="81:38"><name pos:start="81:14" pos:end="81:38">SEI_PIC_STRUCT_BOTTOM_TOP</name></expr>:</case>

            <if_stmt pos:start="83:13" pos:end="91:68"><if pos:start="83:13" pos:end="85:45">if <condition pos:start="83:16" pos:end="83:42">(<expr pos:start="83:17" pos:end="83:41"><call pos:start="83:17" pos:end="83:41"><name pos:start="83:17" pos:end="83:38">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="83:39" pos:end="83:41">(<argument pos:start="83:40" pos:end="83:40"><expr pos:start="83:40" pos:end="83:40"><name pos:start="83:40" pos:end="83:40">h</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:45"><block_content pos:start="85:17" pos:end="85:45">

                <expr_stmt pos:start="85:17" pos:end="85:45"><expr pos:start="85:17" pos:end="85:44"><name pos:start="85:17" pos:end="85:40"><name pos:start="85:17" pos:end="85:19">cur</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:22">f</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:40">interlaced_frame</name></name> <operator pos:start="85:42" pos:end="85:42">=</operator> <literal type="number" pos:start="85:44" pos:end="85:44">1</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="87:13" pos:end="91:68">else<block type="pseudo" pos:start="91:17" pos:end="91:68"><block_content pos:start="91:17" pos:end="91:68">

                <comment type="line" pos:start="89:17" pos:end="89:56">// try to flag soft telecine progressive</comment>

                <expr_stmt pos:start="91:17" pos:end="91:68"><expr pos:start="91:17" pos:end="91:67"><name pos:start="91:17" pos:end="91:40"><name pos:start="91:17" pos:end="91:19">cur</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:22">f</name><operator pos:start="91:23" pos:end="91:24">-&gt;</operator><name pos:start="91:25" pos:end="91:40">interlaced_frame</name></name> <operator pos:start="91:42" pos:end="91:42">=</operator> <name pos:start="91:44" pos:end="91:67"><name pos:start="91:44" pos:end="91:44">h</name><operator pos:start="91:45" pos:end="91:46">-&gt;</operator><name pos:start="91:47" pos:end="91:67">prev_interlaced_frame</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:43">case <expr pos:start="95:14" pos:end="95:42"><name pos:start="95:14" pos:end="95:42">SEI_PIC_STRUCT_TOP_BOTTOM_TOP</name></expr>:</case>

        <case pos:start="97:9" pos:end="97:46">case <expr pos:start="97:14" pos:end="97:45"><name pos:start="97:14" pos:end="97:45">SEI_PIC_STRUCT_BOTTOM_TOP_BOTTOM</name></expr>:</case>

            <comment type="block" pos:start="99:13" pos:end="103:53">/* Signal the possibility of telecined film externally

             * (pic_struct 5,6). From these hints, let the applications

             * decide if they apply deinterlacing. */</comment>

            <expr_stmt pos:start="105:13" pos:end="105:36"><expr pos:start="105:13" pos:end="105:35"><name pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:15">cur</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:18">f</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:31">repeat_pict</name></name> <operator pos:start="105:33" pos:end="105:33">=</operator> <literal type="number" pos:start="105:35" pos:end="105:35">1</literal></expr>;</expr_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:43">case <expr pos:start="109:14" pos:end="109:42"><name pos:start="109:14" pos:end="109:42">SEI_PIC_STRUCT_FRAME_DOUBLING</name></expr>:</case>

            <expr_stmt pos:start="111:13" pos:end="111:36"><expr pos:start="111:13" pos:end="111:35"><name pos:start="111:13" pos:end="111:31"><name pos:start="111:13" pos:end="111:15">cur</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:18">f</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:31">repeat_pict</name></name> <operator pos:start="111:33" pos:end="111:33">=</operator> <literal type="number" pos:start="111:35" pos:end="111:35">2</literal></expr>;</expr_stmt>

            <break pos:start="113:13" pos:end="113:18">break;</break>

        <case pos:start="115:9" pos:end="115:43">case <expr pos:start="115:14" pos:end="115:42"><name pos:start="115:14" pos:end="115:42">SEI_PIC_STRUCT_FRAME_TRIPLING</name></expr>:</case>

            <expr_stmt pos:start="117:13" pos:end="117:36"><expr pos:start="117:13" pos:end="117:35"><name pos:start="117:13" pos:end="117:31"><name pos:start="117:13" pos:end="117:15">cur</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:18">f</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:31">repeat_pict</name></name> <operator pos:start="117:33" pos:end="117:33">=</operator> <literal type="number" pos:start="117:35" pos:end="117:35">4</literal></expr>;</expr_stmt>

            <break pos:start="119:13" pos:end="119:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="125:9" pos:end="129:69"><if pos:start="125:9" pos:end="129:69">if <condition pos:start="125:12" pos:end="127:56">(<expr pos:start="125:13" pos:end="127:55"><operator pos:start="125:13" pos:end="125:13">(</operator><name pos:start="125:14" pos:end="125:24"><name pos:start="125:14" pos:end="125:15">pt</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:24">ct_type</name></name> <operator pos:start="125:26" pos:end="125:26">&amp;</operator> <literal type="number" pos:start="125:28" pos:end="125:28">3</literal><operator pos:start="125:29" pos:end="125:29">)</operator> <operator pos:start="125:31" pos:end="125:32">&amp;&amp;</operator>

            <name pos:start="127:13" pos:end="127:26"><name pos:start="127:13" pos:end="127:14">pt</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:26">pic_struct</name></name> <operator pos:start="127:28" pos:end="127:29">&lt;=</operator> <name pos:start="127:31" pos:end="127:55">SEI_PIC_STRUCT_BOTTOM_TOP</name></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:69"><block_content pos:start="129:13" pos:end="129:69">

            <expr_stmt pos:start="129:13" pos:end="129:69"><expr pos:start="129:13" pos:end="129:68"><name pos:start="129:13" pos:end="129:36"><name pos:start="129:13" pos:end="129:15">cur</name><operator pos:start="129:16" pos:end="129:17">-&gt;</operator><name pos:start="129:18" pos:end="129:18">f</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:36">interlaced_frame</name></name> <operator pos:start="129:38" pos:end="129:38">=</operator> <operator pos:start="129:40" pos:end="129:40">(</operator><name pos:start="129:41" pos:end="129:51"><name pos:start="129:41" pos:end="129:42">pt</name><operator pos:start="129:43" pos:end="129:44">-&gt;</operator><name pos:start="129:45" pos:end="129:51">ct_type</name></name> <operator pos:start="129:53" pos:end="129:53">&amp;</operator> <operator pos:start="129:55" pos:end="129:55">(</operator><literal type="number" pos:start="129:56" pos:end="129:56">1</literal> <operator pos:start="129:58" pos:end="129:59">&lt;&lt;</operator> <literal type="number" pos:start="129:61" pos:end="129:61">1</literal><operator pos:start="129:62" pos:end="129:62">)</operator><operator pos:start="129:63" pos:end="129:63">)</operator> <operator pos:start="129:65" pos:end="129:66">!=</operator> <literal type="number" pos:start="129:68" pos:end="129:68">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="131:7" pos:end="137:5">else <block pos:start="131:12" pos:end="137:5">{<block_content pos:start="135:9" pos:end="135:61">

        <comment type="block" pos:start="133:9" pos:end="133:65">/* Derive interlacing flag from used decoding process. */</comment>

        <expr_stmt pos:start="135:9" pos:end="135:61"><expr pos:start="135:9" pos:end="135:60"><name pos:start="135:9" pos:end="135:32"><name pos:start="135:9" pos:end="135:11">cur</name><operator pos:start="135:12" pos:end="135:13">-&gt;</operator><name pos:start="135:14" pos:end="135:14">f</name><operator pos:start="135:15" pos:end="135:16">-&gt;</operator><name pos:start="135:17" pos:end="135:32">interlaced_frame</name></name> <operator pos:start="135:34" pos:end="135:34">=</operator> <call pos:start="135:36" pos:end="135:60"><name pos:start="135:36" pos:end="135:57">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="135:58" pos:end="135:60">(<argument pos:start="135:59" pos:end="135:59"><expr pos:start="135:59" pos:end="135:59"><name pos:start="135:59" pos:end="135:59">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:56"><expr pos:start="139:5" pos:end="139:55"><name pos:start="139:5" pos:end="139:28"><name pos:start="139:5" pos:end="139:5">h</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:28">prev_interlaced_frame</name></name> <operator pos:start="139:30" pos:end="139:30">=</operator> <name pos:start="139:32" pos:end="139:55"><name pos:start="139:32" pos:end="139:34">cur</name><operator pos:start="139:35" pos:end="139:36">-&gt;</operator><name pos:start="139:37" pos:end="139:37">f</name><operator pos:start="139:38" pos:end="139:39">-&gt;</operator><name pos:start="139:40" pos:end="139:55">interlaced_frame</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="143:5" pos:end="175:5"><if pos:start="143:5" pos:end="149:5">if <condition pos:start="143:8" pos:end="143:47">(<expr pos:start="143:9" pos:end="143:46"><name pos:start="143:9" pos:end="143:25"><name pos:start="143:9" pos:end="143:11">cur</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:22">field_poc</name><index pos:start="143:23" pos:end="143:25">[<expr pos:start="143:24" pos:end="143:24"><literal type="number" pos:start="143:24" pos:end="143:24">0</literal></expr>]</index></name> <operator pos:start="143:27" pos:end="143:28">!=</operator> <name pos:start="143:30" pos:end="143:46"><name pos:start="143:30" pos:end="143:32">cur</name><operator pos:start="143:33" pos:end="143:34">-&gt;</operator><name pos:start="143:35" pos:end="143:43">field_poc</name><index pos:start="143:44" pos:end="143:46">[<expr pos:start="143:45" pos:end="143:45"><literal type="number" pos:start="143:45" pos:end="143:45">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="143:49" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:72">

        <comment type="block" pos:start="145:9" pos:end="145:53">/* Derive top_field_first from field pocs. */</comment>

        <expr_stmt pos:start="147:9" pos:end="147:72"><expr pos:start="147:9" pos:end="147:71"><name pos:start="147:9" pos:end="147:31"><name pos:start="147:9" pos:end="147:11">cur</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:14">f</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:31">top_field_first</name></name> <operator pos:start="147:33" pos:end="147:33">=</operator> <name pos:start="147:35" pos:end="147:51"><name pos:start="147:35" pos:end="147:37">cur</name><operator pos:start="147:38" pos:end="147:39">-&gt;</operator><name pos:start="147:40" pos:end="147:48">field_poc</name><index pos:start="147:49" pos:end="147:51">[<expr pos:start="147:50" pos:end="147:50"><literal type="number" pos:start="147:50" pos:end="147:50">0</literal></expr>]</index></name> <operator pos:start="147:53" pos:end="147:53">&lt;</operator> <name pos:start="147:55" pos:end="147:71"><name pos:start="147:55" pos:end="147:57">cur</name><operator pos:start="147:58" pos:end="147:59">-&gt;</operator><name pos:start="147:60" pos:end="147:68">field_poc</name><index pos:start="147:69" pos:end="147:71">[<expr pos:start="147:70" pos:end="147:70"><literal type="number" pos:start="147:70" pos:end="147:70">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="149:7" pos:end="175:5">else <block pos:start="149:12" pos:end="175:5">{<block_content pos:start="151:9" pos:end="173:9">

        <if_stmt pos:start="151:9" pos:end="173:9"><if pos:start="151:9" pos:end="167:9">if <condition pos:start="151:12" pos:end="151:69">(<expr pos:start="151:13" pos:end="151:68"><name pos:start="151:13" pos:end="151:36"><name pos:start="151:13" pos:end="151:15">cur</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:18">f</name><operator pos:start="151:19" pos:end="151:20">-&gt;</operator><name pos:start="151:21" pos:end="151:36">interlaced_frame</name></name> <operator pos:start="151:38" pos:end="151:39">||</operator> <name pos:start="151:41" pos:end="151:68"><name pos:start="151:41" pos:end="151:43">sps</name><operator pos:start="151:44" pos:end="151:45">-&gt;</operator><name pos:start="151:46" pos:end="151:68">pic_struct_present_flag</name></name></expr>)</condition> <block pos:start="151:71" pos:end="167:9">{<block_content pos:start="157:13" pos:end="165:44">

            <comment type="block" pos:start="153:13" pos:end="155:67">/* Use picture timing SEI information. Even if it is a

             * information of a past frame, better than nothing. */</comment>

            <if_stmt pos:start="157:13" pos:end="165:44"><if pos:start="157:13" pos:end="161:44">if <condition pos:start="157:16" pos:end="159:82">(<expr pos:start="157:17" pos:end="159:81"><name pos:start="157:17" pos:end="157:48"><name pos:start="157:17" pos:end="157:17">h</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:22">sei</name><operator pos:start="157:23" pos:end="157:23">.</operator><name pos:start="157:24" pos:end="157:37">picture_timing</name><operator pos:start="157:38" pos:end="157:38">.</operator><name pos:start="157:39" pos:end="157:48">pic_struct</name></name> <operator pos:start="157:50" pos:end="157:51">==</operator> <name pos:start="157:53" pos:end="157:77">SEI_PIC_STRUCT_TOP_BOTTOM</name> <operator pos:start="157:79" pos:end="157:80">||</operator>

                <name pos:start="159:17" pos:end="159:48"><name pos:start="159:17" pos:end="159:17">h</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:22">sei</name><operator pos:start="159:23" pos:end="159:23">.</operator><name pos:start="159:24" pos:end="159:37">picture_timing</name><operator pos:start="159:38" pos:end="159:38">.</operator><name pos:start="159:39" pos:end="159:48">pic_struct</name></name> <operator pos:start="159:50" pos:end="159:51">==</operator> <name pos:start="159:53" pos:end="159:81">SEI_PIC_STRUCT_TOP_BOTTOM_TOP</name></expr>)</condition><block type="pseudo" pos:start="161:17" pos:end="161:44"><block_content pos:start="161:17" pos:end="161:44">

                <expr_stmt pos:start="161:17" pos:end="161:44"><expr pos:start="161:17" pos:end="161:43"><name pos:start="161:17" pos:end="161:39"><name pos:start="161:17" pos:end="161:19">cur</name><operator pos:start="161:20" pos:end="161:21">-&gt;</operator><name pos:start="161:22" pos:end="161:22">f</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:39">top_field_first</name></name> <operator pos:start="161:41" pos:end="161:41">=</operator> <literal type="number" pos:start="161:43" pos:end="161:43">1</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="163:13" pos:end="165:44">else<block type="pseudo" pos:start="165:17" pos:end="165:44"><block_content pos:start="165:17" pos:end="165:44">

                <expr_stmt pos:start="165:17" pos:end="165:44"><expr pos:start="165:17" pos:end="165:43"><name pos:start="165:17" pos:end="165:39"><name pos:start="165:17" pos:end="165:19">cur</name><operator pos:start="165:20" pos:end="165:21">-&gt;</operator><name pos:start="165:22" pos:end="165:22">f</name><operator pos:start="165:23" pos:end="165:24">-&gt;</operator><name pos:start="165:25" pos:end="165:39">top_field_first</name></name> <operator pos:start="165:41" pos:end="165:41">=</operator> <literal type="number" pos:start="165:43" pos:end="165:43">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="167:11" pos:end="173:9">else <block pos:start="167:16" pos:end="173:9">{<block_content pos:start="171:13" pos:end="171:40">

            <comment type="block" pos:start="169:13" pos:end="169:41">/* Most likely progressive */</comment>

            <expr_stmt pos:start="171:13" pos:end="171:40"><expr pos:start="171:13" pos:end="171:39"><name pos:start="171:13" pos:end="171:35"><name pos:start="171:13" pos:end="171:15">cur</name><operator pos:start="171:16" pos:end="171:17">-&gt;</operator><name pos:start="171:18" pos:end="171:18">f</name><operator pos:start="171:19" pos:end="171:20">-&gt;</operator><name pos:start="171:21" pos:end="171:35">top_field_first</name></name> <operator pos:start="171:37" pos:end="171:37">=</operator> <literal type="number" pos:start="171:39" pos:end="171:39">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="179:5" pos:end="257:5"><if pos:start="179:5" pos:end="257:5">if <condition pos:start="179:8" pos:end="187:61">(<expr pos:start="179:9" pos:end="187:60"><name pos:start="179:9" pos:end="179:36"><name pos:start="179:9" pos:end="179:9">h</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:14">sei</name><operator pos:start="179:15" pos:end="179:15">.</operator><name pos:start="179:16" pos:end="179:28">frame_packing</name><operator pos:start="179:29" pos:end="179:29">.</operator><name pos:start="179:30" pos:end="179:36">present</name></name> <operator pos:start="179:38" pos:end="179:39">&amp;&amp;</operator>

        <name pos:start="181:9" pos:end="181:45"><name pos:start="181:9" pos:end="181:9">h</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:14">sei</name><operator pos:start="181:15" pos:end="181:15">.</operator><name pos:start="181:16" pos:end="181:28">frame_packing</name><operator pos:start="181:29" pos:end="181:29">.</operator><name pos:start="181:30" pos:end="181:45">arrangement_type</name></name> <operator pos:start="181:47" pos:end="181:48">&gt;=</operator> <literal type="number" pos:start="181:50" pos:end="181:50">0</literal> <operator pos:start="181:52" pos:end="181:53">&amp;&amp;</operator>

        <name pos:start="183:9" pos:end="183:45"><name pos:start="183:9" pos:end="183:9">h</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:14">sei</name><operator pos:start="183:15" pos:end="183:15">.</operator><name pos:start="183:16" pos:end="183:28">frame_packing</name><operator pos:start="183:29" pos:end="183:29">.</operator><name pos:start="183:30" pos:end="183:45">arrangement_type</name></name> <operator pos:start="183:47" pos:end="183:48">&lt;=</operator> <literal type="number" pos:start="183:50" pos:end="183:50">6</literal> <operator pos:start="183:52" pos:end="183:53">&amp;&amp;</operator>

        <name pos:start="185:9" pos:end="185:56"><name pos:start="185:9" pos:end="185:9">h</name><operator pos:start="185:10" pos:end="185:11">-&gt;</operator><name pos:start="185:12" pos:end="185:14">sei</name><operator pos:start="185:15" pos:end="185:15">.</operator><name pos:start="185:16" pos:end="185:28">frame_packing</name><operator pos:start="185:29" pos:end="185:29">.</operator><name pos:start="185:30" pos:end="185:56">content_interpretation_type</name></name> <operator pos:start="185:58" pos:end="185:58">&gt;</operator> <literal type="number" pos:start="185:60" pos:end="185:60">0</literal> <operator pos:start="185:62" pos:end="185:63">&amp;&amp;</operator>

        <name pos:start="187:9" pos:end="187:56"><name pos:start="187:9" pos:end="187:9">h</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:14">sei</name><operator pos:start="187:15" pos:end="187:15">.</operator><name pos:start="187:16" pos:end="187:28">frame_packing</name><operator pos:start="187:29" pos:end="187:29">.</operator><name pos:start="187:30" pos:end="187:56">content_interpretation_type</name></name> <operator pos:start="187:58" pos:end="187:58">&lt;</operator> <literal type="number" pos:start="187:60" pos:end="187:60">3</literal></expr>)</condition> <block pos:start="187:63" pos:end="257:5">{<block_content pos:start="189:9" pos:end="255:52">

        <decl_stmt pos:start="189:9" pos:end="189:56"><decl pos:start="189:9" pos:end="189:55"><type pos:start="189:9" pos:end="189:29"><name pos:start="189:9" pos:end="189:27">H264SEIFramePacking</name> <modifier pos:start="189:29" pos:end="189:29">*</modifier></type><name pos:start="189:30" pos:end="189:31">fp</name> <init pos:start="189:33" pos:end="189:55">= <expr pos:start="189:35" pos:end="189:55"><operator pos:start="189:35" pos:end="189:35">&amp;</operator><name pos:start="189:36" pos:end="189:55"><name pos:start="189:36" pos:end="189:36">h</name><operator pos:start="189:37" pos:end="189:38">-&gt;</operator><name pos:start="189:39" pos:end="189:41">sei</name><operator pos:start="189:42" pos:end="189:42">.</operator><name pos:start="189:43" pos:end="189:55">frame_packing</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="191:9" pos:end="191:66"><decl pos:start="191:9" pos:end="191:65"><type pos:start="191:9" pos:end="191:20"><name pos:start="191:9" pos:end="191:18">AVStereo3D</name> <modifier pos:start="191:20" pos:end="191:20">*</modifier></type><name pos:start="191:21" pos:end="191:26">stereo</name> <init pos:start="191:28" pos:end="191:65">= <expr pos:start="191:30" pos:end="191:65"><call pos:start="191:30" pos:end="191:65"><name pos:start="191:30" pos:end="191:57">av_stereo3d_create_side_data</name><argument_list pos:start="191:58" pos:end="191:65">(<argument pos:start="191:59" pos:end="191:64"><expr pos:start="191:59" pos:end="191:64"><name pos:start="191:59" pos:end="191:64"><name pos:start="191:59" pos:end="191:61">cur</name><operator pos:start="191:62" pos:end="191:63">-&gt;</operator><name pos:start="191:64" pos:end="191:64">f</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="193:9" pos:end="195:19"><if pos:start="193:9" pos:end="195:19">if <condition pos:start="193:12" pos:end="193:20">(<expr pos:start="193:13" pos:end="193:19"><operator pos:start="193:13" pos:end="193:13">!</operator><name pos:start="193:14" pos:end="193:19">stereo</name></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:19"><block_content pos:start="195:13" pos:end="195:19">

            <return pos:start="195:13" pos:end="195:19">return;</return></block_content></block></if></if_stmt>



        <switch pos:start="199:9" pos:end="249:9">switch <condition pos:start="199:16" pos:end="199:37">(<expr pos:start="199:17" pos:end="199:36"><name pos:start="199:17" pos:end="199:36"><name pos:start="199:17" pos:end="199:18">fp</name><operator pos:start="199:19" pos:end="199:20">-&gt;</operator><name pos:start="199:21" pos:end="199:36">arrangement_type</name></name></expr>)</condition> <block pos:start="199:39" pos:end="249:9">{<block_content pos:start="201:9" pos:end="247:18">

        <case pos:start="201:9" pos:end="201:15">case <expr pos:start="201:14" pos:end="201:14"><literal type="number" pos:start="201:14" pos:end="201:14">0</literal></expr>:</case>

            <expr_stmt pos:start="203:13" pos:end="203:52"><expr pos:start="203:13" pos:end="203:51"><name pos:start="203:13" pos:end="203:24"><name pos:start="203:13" pos:end="203:18">stereo</name><operator pos:start="203:19" pos:end="203:20">-&gt;</operator><name pos:start="203:21" pos:end="203:24">type</name></name> <operator pos:start="203:26" pos:end="203:26">=</operator> <name pos:start="203:28" pos:end="203:51">AV_STEREO3D_CHECKERBOARD</name></expr>;</expr_stmt>

            <break pos:start="205:13" pos:end="205:18">break;</break>

        <case pos:start="207:9" pos:end="207:15">case <expr pos:start="207:14" pos:end="207:14"><literal type="number" pos:start="207:14" pos:end="207:14">1</literal></expr>:</case>

            <expr_stmt pos:start="209:13" pos:end="209:47"><expr pos:start="209:13" pos:end="209:46"><name pos:start="209:13" pos:end="209:24"><name pos:start="209:13" pos:end="209:18">stereo</name><operator pos:start="209:19" pos:end="209:20">-&gt;</operator><name pos:start="209:21" pos:end="209:24">type</name></name> <operator pos:start="209:26" pos:end="209:26">=</operator> <name pos:start="209:28" pos:end="209:46">AV_STEREO3D_COLUMNS</name></expr>;</expr_stmt>

            <break pos:start="211:13" pos:end="211:18">break;</break>

        <case pos:start="213:9" pos:end="213:15">case <expr pos:start="213:14" pos:end="213:14"><literal type="number" pos:start="213:14" pos:end="213:14">2</literal></expr>:</case>

            <expr_stmt pos:start="215:13" pos:end="215:45"><expr pos:start="215:13" pos:end="215:44"><name pos:start="215:13" pos:end="215:24"><name pos:start="215:13" pos:end="215:18">stereo</name><operator pos:start="215:19" pos:end="215:20">-&gt;</operator><name pos:start="215:21" pos:end="215:24">type</name></name> <operator pos:start="215:26" pos:end="215:26">=</operator> <name pos:start="215:28" pos:end="215:44">AV_STEREO3D_LINES</name></expr>;</expr_stmt>

            <break pos:start="217:13" pos:end="217:18">break;</break>

        <case pos:start="219:9" pos:end="219:15">case <expr pos:start="219:14" pos:end="219:14"><literal type="number" pos:start="219:14" pos:end="219:14">3</literal></expr>:</case>

            <if_stmt pos:start="221:13" pos:end="227:54"><if pos:start="221:13" pos:end="223:63">if <condition pos:start="221:16" pos:end="221:41">(<expr pos:start="221:17" pos:end="221:40"><name pos:start="221:17" pos:end="221:40"><name pos:start="221:17" pos:end="221:18">fp</name><operator pos:start="221:19" pos:end="221:20">-&gt;</operator><name pos:start="221:21" pos:end="221:40">quincunx_subsampling</name></name></expr>)</condition><block type="pseudo" pos:start="223:17" pos:end="223:63"><block_content pos:start="223:17" pos:end="223:63">

                <expr_stmt pos:start="223:17" pos:end="223:63"><expr pos:start="223:17" pos:end="223:62"><name pos:start="223:17" pos:end="223:28"><name pos:start="223:17" pos:end="223:22">stereo</name><operator pos:start="223:23" pos:end="223:24">-&gt;</operator><name pos:start="223:25" pos:end="223:28">type</name></name> <operator pos:start="223:30" pos:end="223:30">=</operator> <name pos:start="223:32" pos:end="223:62">AV_STEREO3D_SIDEBYSIDE_QUINCUNX</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="225:13" pos:end="227:54">else<block type="pseudo" pos:start="227:17" pos:end="227:54"><block_content pos:start="227:17" pos:end="227:54">

                <expr_stmt pos:start="227:17" pos:end="227:54"><expr pos:start="227:17" pos:end="227:53"><name pos:start="227:17" pos:end="227:28"><name pos:start="227:17" pos:end="227:22">stereo</name><operator pos:start="227:23" pos:end="227:24">-&gt;</operator><name pos:start="227:25" pos:end="227:28">type</name></name> <operator pos:start="227:30" pos:end="227:30">=</operator> <name pos:start="227:32" pos:end="227:53">AV_STEREO3D_SIDEBYSIDE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="229:13" pos:end="229:18">break;</break>

        <case pos:start="231:9" pos:end="231:15">case <expr pos:start="231:14" pos:end="231:14"><literal type="number" pos:start="231:14" pos:end="231:14">4</literal></expr>:</case>

            <expr_stmt pos:start="233:13" pos:end="233:49"><expr pos:start="233:13" pos:end="233:48"><name pos:start="233:13" pos:end="233:24"><name pos:start="233:13" pos:end="233:18">stereo</name><operator pos:start="233:19" pos:end="233:20">-&gt;</operator><name pos:start="233:21" pos:end="233:24">type</name></name> <operator pos:start="233:26" pos:end="233:26">=</operator> <name pos:start="233:28" pos:end="233:48">AV_STEREO3D_TOPBOTTOM</name></expr>;</expr_stmt>

            <break pos:start="235:13" pos:end="235:18">break;</break>

        <case pos:start="237:9" pos:end="237:15">case <expr pos:start="237:14" pos:end="237:14"><literal type="number" pos:start="237:14" pos:end="237:14">5</literal></expr>:</case>

            <expr_stmt pos:start="239:13" pos:end="239:53"><expr pos:start="239:13" pos:end="239:52"><name pos:start="239:13" pos:end="239:24"><name pos:start="239:13" pos:end="239:18">stereo</name><operator pos:start="239:19" pos:end="239:20">-&gt;</operator><name pos:start="239:21" pos:end="239:24">type</name></name> <operator pos:start="239:26" pos:end="239:26">=</operator> <name pos:start="239:28" pos:end="239:52">AV_STEREO3D_FRAMESEQUENCE</name></expr>;</expr_stmt>

            <break pos:start="241:13" pos:end="241:18">break;</break>

        <case pos:start="243:9" pos:end="243:15">case <expr pos:start="243:14" pos:end="243:14"><literal type="number" pos:start="243:14" pos:end="243:14">6</literal></expr>:</case>

            <expr_stmt pos:start="245:13" pos:end="245:42"><expr pos:start="245:13" pos:end="245:41"><name pos:start="245:13" pos:end="245:24"><name pos:start="245:13" pos:end="245:18">stereo</name><operator pos:start="245:19" pos:end="245:20">-&gt;</operator><name pos:start="245:21" pos:end="245:24">type</name></name> <operator pos:start="245:26" pos:end="245:26">=</operator> <name pos:start="245:28" pos:end="245:41">AV_STEREO3D_2D</name></expr>;</expr_stmt>

            <break pos:start="247:13" pos:end="247:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="253:9" pos:end="255:52"><if pos:start="253:9" pos:end="255:52">if <condition pos:start="253:12" pos:end="253:49">(<expr pos:start="253:13" pos:end="253:48"><name pos:start="253:13" pos:end="253:43"><name pos:start="253:13" pos:end="253:14">fp</name><operator pos:start="253:15" pos:end="253:16">-&gt;</operator><name pos:start="253:17" pos:end="253:43">content_interpretation_type</name></name> <operator pos:start="253:45" pos:end="253:46">==</operator> <literal type="number" pos:start="253:48" pos:end="253:48">2</literal></expr>)</condition><block type="pseudo" pos:start="255:13" pos:end="255:52"><block_content pos:start="255:13" pos:end="255:52">

            <expr_stmt pos:start="255:13" pos:end="255:52"><expr pos:start="255:13" pos:end="255:51"><name pos:start="255:13" pos:end="255:25"><name pos:start="255:13" pos:end="255:18">stereo</name><operator pos:start="255:19" pos:end="255:20">-&gt;</operator><name pos:start="255:21" pos:end="255:25">flags</name></name> <operator pos:start="255:27" pos:end="255:27">=</operator> <name pos:start="255:29" pos:end="255:51">AV_STEREO3D_FLAG_INVERT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="261:5" pos:end="291:5"><if pos:start="261:5" pos:end="291:5">if <condition pos:start="261:8" pos:end="267:43">(<expr pos:start="261:9" pos:end="267:42"><name pos:start="261:9" pos:end="261:42"><name pos:start="261:9" pos:end="261:9">h</name><operator pos:start="261:10" pos:end="261:11">-&gt;</operator><name pos:start="261:12" pos:end="261:14">sei</name><operator pos:start="261:15" pos:end="261:15">.</operator><name pos:start="261:16" pos:end="261:34">display_orientation</name><operator pos:start="261:35" pos:end="261:35">.</operator><name pos:start="261:36" pos:end="261:42">present</name></name> <operator pos:start="261:44" pos:end="261:45">&amp;&amp;</operator>

        <operator pos:start="263:9" pos:end="263:9">(</operator><name pos:start="263:10" pos:end="263:58"><name pos:start="263:10" pos:end="263:10">h</name><operator pos:start="263:11" pos:end="263:12">-&gt;</operator><name pos:start="263:13" pos:end="263:15">sei</name><operator pos:start="263:16" pos:end="263:16">.</operator><name pos:start="263:17" pos:end="263:35">display_orientation</name><operator pos:start="263:36" pos:end="263:36">.</operator><name pos:start="263:37" pos:end="263:58">anticlockwise_rotation</name></name> <operator pos:start="263:60" pos:end="263:61">||</operator>

         <name pos:start="265:10" pos:end="265:41"><name pos:start="265:10" pos:end="265:10">h</name><operator pos:start="265:11" pos:end="265:12">-&gt;</operator><name pos:start="265:13" pos:end="265:15">sei</name><operator pos:start="265:16" pos:end="265:16">.</operator><name pos:start="265:17" pos:end="265:35">display_orientation</name><operator pos:start="265:36" pos:end="265:36">.</operator><name pos:start="265:37" pos:end="265:41">hflip</name></name> <operator pos:start="265:43" pos:end="265:44">||</operator>

         <name pos:start="267:10" pos:end="267:41"><name pos:start="267:10" pos:end="267:10">h</name><operator pos:start="267:11" pos:end="267:12">-&gt;</operator><name pos:start="267:13" pos:end="267:15">sei</name><operator pos:start="267:16" pos:end="267:16">.</operator><name pos:start="267:17" pos:end="267:35">display_orientation</name><operator pos:start="267:36" pos:end="267:36">.</operator><name pos:start="267:37" pos:end="267:41">vflip</name></name><operator pos:start="267:42" pos:end="267:42">)</operator></expr>)</condition> <block pos:start="267:45" pos:end="291:5">{<block_content pos:start="269:9" pos:end="289:51">

        <decl_stmt pos:start="269:9" pos:end="269:67"><decl pos:start="269:9" pos:end="269:66"><type pos:start="269:9" pos:end="269:35"><name pos:start="269:9" pos:end="269:33">H264SEIDisplayOrientation</name> <modifier pos:start="269:35" pos:end="269:35">*</modifier></type><name pos:start="269:36" pos:end="269:36">o</name> <init pos:start="269:38" pos:end="269:66">= <expr pos:start="269:40" pos:end="269:66"><operator pos:start="269:40" pos:end="269:40">&amp;</operator><name pos:start="269:41" pos:end="269:66"><name pos:start="269:41" pos:end="269:41">h</name><operator pos:start="269:42" pos:end="269:43">-&gt;</operator><name pos:start="269:44" pos:end="269:46">sei</name><operator pos:start="269:47" pos:end="269:47">.</operator><name pos:start="269:48" pos:end="269:66">display_orientation</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="271:9" pos:end="271:76"><decl pos:start="271:9" pos:end="271:75"><type pos:start="271:9" pos:end="271:14"><name pos:start="271:9" pos:end="271:14">double</name></type> <name pos:start="271:16" pos:end="271:20">angle</name> <init pos:start="271:22" pos:end="271:75">= <expr pos:start="271:24" pos:end="271:75"><name pos:start="271:24" pos:end="271:48"><name pos:start="271:24" pos:end="271:24">o</name><operator pos:start="271:25" pos:end="271:26">-&gt;</operator><name pos:start="271:27" pos:end="271:48">anticlockwise_rotation</name></name> <operator pos:start="271:50" pos:end="271:50">*</operator> <literal type="number" pos:start="271:52" pos:end="271:54">360</literal> <operator pos:start="271:56" pos:end="271:56">/</operator> <operator pos:start="271:58" pos:end="271:58">(</operator><name pos:start="271:59" pos:end="271:64">double</name><operator pos:start="271:65" pos:end="271:65">)</operator> <operator pos:start="271:67" pos:end="271:67">(</operator><literal type="number" pos:start="271:68" pos:end="271:68">1</literal> <operator pos:start="271:70" pos:end="271:71">&lt;&lt;</operator> <literal type="number" pos:start="271:73" pos:end="271:74">16</literal><operator pos:start="271:75" pos:end="271:75">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="273:9" pos:end="277:80"><decl pos:start="273:9" pos:end="277:79"><type pos:start="273:9" pos:end="273:25"><name pos:start="273:9" pos:end="273:23">AVFrameSideData</name> <modifier pos:start="273:25" pos:end="273:25">*</modifier></type><name pos:start="273:26" pos:end="273:33">rotation</name> <init pos:start="273:35" pos:end="277:79">= <expr pos:start="273:37" pos:end="277:79"><call pos:start="273:37" pos:end="277:79"><name pos:start="273:37" pos:end="273:58">av_frame_new_side_data</name><argument_list pos:start="273:59" pos:end="277:79">(<argument pos:start="273:60" pos:end="273:65"><expr pos:start="273:60" pos:end="273:65"><name pos:start="273:60" pos:end="273:65"><name pos:start="273:60" pos:end="273:62">cur</name><operator pos:start="273:63" pos:end="273:64">-&gt;</operator><name pos:start="273:65" pos:end="273:65">f</name></name></expr></argument>,

                                                           <argument pos:start="275:60" pos:end="275:86"><expr pos:start="275:60" pos:end="275:86"><name pos:start="275:60" pos:end="275:86">AV_FRAME_DATA_DISPLAYMATRIX</name></expr></argument>,

                                                           <argument pos:start="277:60" pos:end="277:78"><expr pos:start="277:60" pos:end="277:78"><sizeof pos:start="277:60" pos:end="277:74">sizeof<argument_list pos:start="277:66" pos:end="277:74">(<argument pos:start="277:67" pos:end="277:73"><expr pos:start="277:67" pos:end="277:73"><name pos:start="277:67" pos:end="277:73">int32_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="277:76" pos:end="277:76">*</operator> <literal type="number" pos:start="277:78" pos:end="277:78">9</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="279:9" pos:end="281:19"><if pos:start="279:9" pos:end="281:19">if <condition pos:start="279:12" pos:end="279:22">(<expr pos:start="279:13" pos:end="279:21"><operator pos:start="279:13" pos:end="279:13">!</operator><name pos:start="279:14" pos:end="279:21">rotation</name></expr>)</condition><block type="pseudo" pos:start="281:13" pos:end="281:19"><block_content pos:start="281:13" pos:end="281:19">

            <return pos:start="281:13" pos:end="281:19">return;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="285:9" pos:end="285:66"><expr pos:start="285:9" pos:end="285:65"><call pos:start="285:9" pos:end="285:65"><name pos:start="285:9" pos:end="285:31">av_display_rotation_set</name><argument_list pos:start="285:32" pos:end="285:65">(<argument pos:start="285:33" pos:end="285:57"><expr pos:start="285:33" pos:end="285:57"><operator pos:start="285:33" pos:end="285:33">(</operator><name pos:start="285:34" pos:end="285:40">int32_t</name> <operator pos:start="285:42" pos:end="285:42">*</operator><operator pos:start="285:43" pos:end="285:43">)</operator><name pos:start="285:44" pos:end="285:57"><name pos:start="285:44" pos:end="285:51">rotation</name><operator pos:start="285:52" pos:end="285:53">-&gt;</operator><name pos:start="285:54" pos:end="285:57">data</name></name></expr></argument>, <argument pos:start="285:60" pos:end="285:64"><expr pos:start="285:60" pos:end="285:64"><name pos:start="285:60" pos:end="285:64">angle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="289:51"><expr pos:start="287:9" pos:end="289:50"><call pos:start="287:9" pos:end="289:50"><name pos:start="287:9" pos:end="287:30">av_display_matrix_flip</name><argument_list pos:start="287:31" pos:end="289:50">(<argument pos:start="287:32" pos:end="287:56"><expr pos:start="287:32" pos:end="287:56"><operator pos:start="287:32" pos:end="287:32">(</operator><name pos:start="287:33" pos:end="287:39">int32_t</name> <operator pos:start="287:41" pos:end="287:41">*</operator><operator pos:start="287:42" pos:end="287:42">)</operator><name pos:start="287:43" pos:end="287:56"><name pos:start="287:43" pos:end="287:50">rotation</name><operator pos:start="287:51" pos:end="287:52">-&gt;</operator><name pos:start="287:53" pos:end="287:56">data</name></name></expr></argument>,

                               <argument pos:start="289:32" pos:end="289:39"><expr pos:start="289:32" pos:end="289:39"><name pos:start="289:32" pos:end="289:39"><name pos:start="289:32" pos:end="289:32">o</name><operator pos:start="289:33" pos:end="289:34">-&gt;</operator><name pos:start="289:35" pos:end="289:39">hflip</name></name></expr></argument>, <argument pos:start="289:42" pos:end="289:49"><expr pos:start="289:42" pos:end="289:49"><name pos:start="289:42" pos:end="289:49"><name pos:start="289:42" pos:end="289:42">o</name><operator pos:start="289:43" pos:end="289:44">-&gt;</operator><name pos:start="289:45" pos:end="289:49">vflip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="295:5" pos:end="311:5"><if pos:start="295:5" pos:end="311:5">if <condition pos:start="295:8" pos:end="295:27">(<expr pos:start="295:9" pos:end="295:26"><name pos:start="295:9" pos:end="295:26"><name pos:start="295:9" pos:end="295:9">h</name><operator pos:start="295:10" pos:end="295:11">-&gt;</operator><name pos:start="295:12" pos:end="295:14">sei</name><operator pos:start="295:15" pos:end="295:15">.</operator><name pos:start="295:16" pos:end="295:18">afd</name><operator pos:start="295:19" pos:end="295:19">.</operator><name pos:start="295:20" pos:end="295:26">present</name></name></expr>)</condition> <block pos:start="295:29" pos:end="311:5">{<block_content pos:start="297:9" pos:end="309:31">

        <decl_stmt pos:start="297:9" pos:end="299:70"><decl pos:start="297:9" pos:end="299:69"><type pos:start="297:9" pos:end="297:25"><name pos:start="297:9" pos:end="297:23">AVFrameSideData</name> <modifier pos:start="297:25" pos:end="297:25">*</modifier></type><name pos:start="297:26" pos:end="297:27">sd</name> <init pos:start="297:29" pos:end="299:69">= <expr pos:start="297:31" pos:end="299:69"><call pos:start="297:31" pos:end="299:69"><name pos:start="297:31" pos:end="297:52">av_frame_new_side_data</name><argument_list pos:start="297:53" pos:end="299:69">(<argument pos:start="297:54" pos:end="297:59"><expr pos:start="297:54" pos:end="297:59"><name pos:start="297:54" pos:end="297:59"><name pos:start="297:54" pos:end="297:56">cur</name><operator pos:start="297:57" pos:end="297:58">-&gt;</operator><name pos:start="297:59" pos:end="297:59">f</name></name></expr></argument>, <argument pos:start="297:62" pos:end="297:78"><expr pos:start="297:62" pos:end="297:78"><name pos:start="297:62" pos:end="297:78">AV_FRAME_DATA_AFD</name></expr></argument>,

                                                     <argument pos:start="299:54" pos:end="299:68"><expr pos:start="299:54" pos:end="299:68"><sizeof pos:start="299:54" pos:end="299:68">sizeof<argument_list pos:start="299:60" pos:end="299:68">(<argument pos:start="299:61" pos:end="299:67"><expr pos:start="299:61" pos:end="299:67"><name pos:start="299:61" pos:end="299:67">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="301:9" pos:end="303:19"><if pos:start="301:9" pos:end="303:19">if <condition pos:start="301:12" pos:end="301:16">(<expr pos:start="301:13" pos:end="301:15"><operator pos:start="301:13" pos:end="301:13">!</operator><name pos:start="301:14" pos:end="301:15">sd</name></expr>)</condition><block type="pseudo" pos:start="303:13" pos:end="303:19"><block_content pos:start="303:13" pos:end="303:19">

            <return pos:start="303:13" pos:end="303:19">return;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="307:9" pos:end="307:57"><expr pos:start="307:9" pos:end="307:56"><operator pos:start="307:9" pos:end="307:9">*</operator><name pos:start="307:10" pos:end="307:17"><name pos:start="307:10" pos:end="307:11">sd</name><operator pos:start="307:12" pos:end="307:13">-&gt;</operator><name pos:start="307:14" pos:end="307:17">data</name></name> <operator pos:start="307:19" pos:end="307:19">=</operator> <name pos:start="307:21" pos:end="307:56"><name pos:start="307:21" pos:end="307:21">h</name><operator pos:start="307:22" pos:end="307:23">-&gt;</operator><name pos:start="307:24" pos:end="307:26">sei</name><operator pos:start="307:27" pos:end="307:27">.</operator><name pos:start="307:28" pos:end="307:30">afd</name><operator pos:start="307:31" pos:end="307:31">.</operator><name pos:start="307:32" pos:end="307:56">active_format_description</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:31"><expr pos:start="309:9" pos:end="309:30"><name pos:start="309:9" pos:end="309:26"><name pos:start="309:9" pos:end="309:9">h</name><operator pos:start="309:10" pos:end="309:11">-&gt;</operator><name pos:start="309:12" pos:end="309:14">sei</name><operator pos:start="309:15" pos:end="309:15">.</operator><name pos:start="309:16" pos:end="309:18">afd</name><operator pos:start="309:19" pos:end="309:19">.</operator><name pos:start="309:20" pos:end="309:26">present</name></name> <operator pos:start="309:28" pos:end="309:28">=</operator> <literal type="number" pos:start="309:30" pos:end="309:30">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="315:5" pos:end="337:5"><if pos:start="315:5" pos:end="337:5">if <condition pos:start="315:8" pos:end="315:39">(<expr pos:start="315:9" pos:end="315:38"><name pos:start="315:9" pos:end="315:38"><name pos:start="315:9" pos:end="315:9">h</name><operator pos:start="315:10" pos:end="315:11">-&gt;</operator><name pos:start="315:12" pos:end="315:14">sei</name><operator pos:start="315:15" pos:end="315:15">.</operator><name pos:start="315:16" pos:end="315:26">a53_caption</name><operator pos:start="315:27" pos:end="315:27">.</operator><name pos:start="315:28" pos:end="315:38">a53_caption</name></name></expr>)</condition> <block pos:start="315:41" pos:end="337:5">{<block_content pos:start="317:9" pos:end="335:34">

        <decl_stmt pos:start="317:9" pos:end="317:53"><decl pos:start="317:9" pos:end="317:52"><type pos:start="317:9" pos:end="317:27"><name pos:start="317:9" pos:end="317:25">H264SEIA53Caption</name> <modifier pos:start="317:27" pos:end="317:27">*</modifier></type><name pos:start="317:28" pos:end="317:30">a53</name> <init pos:start="317:32" pos:end="317:52">= <expr pos:start="317:34" pos:end="317:52"><operator pos:start="317:34" pos:end="317:34">&amp;</operator><name pos:start="317:35" pos:end="317:52"><name pos:start="317:35" pos:end="317:35">h</name><operator pos:start="317:36" pos:end="317:37">-&gt;</operator><name pos:start="317:38" pos:end="317:40">sei</name><operator pos:start="317:41" pos:end="317:41">.</operator><name pos:start="317:42" pos:end="317:52">a53_caption</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="319:9" pos:end="323:76"><decl pos:start="319:9" pos:end="323:75"><type pos:start="319:9" pos:end="319:25"><name pos:start="319:9" pos:end="319:23">AVFrameSideData</name> <modifier pos:start="319:25" pos:end="319:25">*</modifier></type><name pos:start="319:26" pos:end="319:27">sd</name> <init pos:start="319:29" pos:end="323:75">= <expr pos:start="319:31" pos:end="323:75"><call pos:start="319:31" pos:end="323:75"><name pos:start="319:31" pos:end="319:52">av_frame_new_side_data</name><argument_list pos:start="319:53" pos:end="323:75">(<argument pos:start="319:54" pos:end="319:59"><expr pos:start="319:54" pos:end="319:59"><name pos:start="319:54" pos:end="319:59"><name pos:start="319:54" pos:end="319:56">cur</name><operator pos:start="319:57" pos:end="319:58">-&gt;</operator><name pos:start="319:59" pos:end="319:59">f</name></name></expr></argument>,

                                                     <argument pos:start="321:54" pos:end="321:73"><expr pos:start="321:54" pos:end="321:73"><name pos:start="321:54" pos:end="321:73">AV_FRAME_DATA_A53_CC</name></expr></argument>,

                                                     <argument pos:start="323:54" pos:end="323:74"><expr pos:start="323:54" pos:end="323:74"><name pos:start="323:54" pos:end="323:74"><name pos:start="323:54" pos:end="323:56">a53</name><operator pos:start="323:57" pos:end="323:58">-&gt;</operator><name pos:start="323:59" pos:end="323:74">a53_caption_size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="325:9" pos:end="327:19"><if pos:start="325:9" pos:end="327:19">if <condition pos:start="325:12" pos:end="325:16">(<expr pos:start="325:13" pos:end="325:15"><operator pos:start="325:13" pos:end="325:13">!</operator><name pos:start="325:14" pos:end="325:15">sd</name></expr>)</condition><block type="pseudo" pos:start="327:13" pos:end="327:19"><block_content pos:start="327:13" pos:end="327:19">

            <return pos:start="327:13" pos:end="327:19">return;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="331:9" pos:end="331:66"><expr pos:start="331:9" pos:end="331:65"><call pos:start="331:9" pos:end="331:65"><name pos:start="331:9" pos:end="331:14">memcpy</name><argument_list pos:start="331:15" pos:end="331:65">(<argument pos:start="331:16" pos:end="331:23"><expr pos:start="331:16" pos:end="331:23"><name pos:start="331:16" pos:end="331:23"><name pos:start="331:16" pos:end="331:17">sd</name><operator pos:start="331:18" pos:end="331:19">-&gt;</operator><name pos:start="331:20" pos:end="331:23">data</name></name></expr></argument>, <argument pos:start="331:26" pos:end="331:41"><expr pos:start="331:26" pos:end="331:41"><name pos:start="331:26" pos:end="331:41"><name pos:start="331:26" pos:end="331:28">a53</name><operator pos:start="331:29" pos:end="331:30">-&gt;</operator><name pos:start="331:31" pos:end="331:41">a53_caption</name></name></expr></argument>, <argument pos:start="331:44" pos:end="331:64"><expr pos:start="331:44" pos:end="331:64"><name pos:start="331:44" pos:end="331:64"><name pos:start="331:44" pos:end="331:46">a53</name><operator pos:start="331:47" pos:end="331:48">-&gt;</operator><name pos:start="331:49" pos:end="331:64">a53_caption_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:36"><expr pos:start="333:9" pos:end="333:35"><call pos:start="333:9" pos:end="333:35"><name pos:start="333:9" pos:end="333:16">av_freep</name><argument_list pos:start="333:17" pos:end="333:35">(<argument pos:start="333:18" pos:end="333:34"><expr pos:start="333:18" pos:end="333:34"><operator pos:start="333:18" pos:end="333:18">&amp;</operator><name pos:start="333:19" pos:end="333:34"><name pos:start="333:19" pos:end="333:21">a53</name><operator pos:start="333:22" pos:end="333:23">-&gt;</operator><name pos:start="333:24" pos:end="333:34">a53_caption</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="335:9" pos:end="335:34"><expr pos:start="335:9" pos:end="335:33"><name pos:start="335:9" pos:end="335:29"><name pos:start="335:9" pos:end="335:11">a53</name><operator pos:start="335:12" pos:end="335:13">-&gt;</operator><name pos:start="335:14" pos:end="335:29">a53_caption_size</name></name> <operator pos:start="335:31" pos:end="335:31">=</operator> <literal type="number" pos:start="335:33" pos:end="335:33">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="341:5" pos:end="341:59">// FIXME do something with unavailable reference frames</comment>



    <comment type="block" pos:start="345:5" pos:end="345:42">/* Sort B-frames into display order */</comment>

    <if_stmt pos:start="347:5" pos:end="353:5"><if pos:start="347:5" pos:end="353:5">if <condition pos:start="347:8" pos:end="349:64">(<expr pos:start="347:9" pos:end="349:63"><name pos:start="347:9" pos:end="347:39"><name pos:start="347:9" pos:end="347:11">sps</name><operator pos:start="347:12" pos:end="347:13">-&gt;</operator><name pos:start="347:14" pos:end="347:39">bitstream_restriction_flag</name></name> <operator pos:start="347:41" pos:end="347:42">||</operator>

        <name pos:start="349:9" pos:end="349:39"><name pos:start="349:9" pos:end="349:9">h</name><operator pos:start="349:10" pos:end="349:11">-&gt;</operator><name pos:start="349:12" pos:end="349:16">avctx</name><operator pos:start="349:17" pos:end="349:18">-&gt;</operator><name pos:start="349:19" pos:end="349:39">strict_std_compliance</name></name> <operator pos:start="349:41" pos:end="349:42">&gt;=</operator> <name pos:start="349:44" pos:end="349:63">FF_COMPLIANCE_NORMAL</name></expr>)</condition> <block pos:start="349:66" pos:end="353:5">{<block_content pos:start="351:9" pos:end="351:88">

        <expr_stmt pos:start="351:9" pos:end="351:88"><expr pos:start="351:9" pos:end="351:87"><name pos:start="351:9" pos:end="351:30"><name pos:start="351:9" pos:end="351:9">h</name><operator pos:start="351:10" pos:end="351:11">-&gt;</operator><name pos:start="351:12" pos:end="351:16">avctx</name><operator pos:start="351:17" pos:end="351:18">-&gt;</operator><name pos:start="351:19" pos:end="351:30">has_b_frames</name></name> <operator pos:start="351:32" pos:end="351:32">=</operator> <call pos:start="351:34" pos:end="351:87"><name pos:start="351:34" pos:end="351:38">FFMAX</name><argument_list pos:start="351:39" pos:end="351:87">(<argument pos:start="351:40" pos:end="351:61"><expr pos:start="351:40" pos:end="351:61"><name pos:start="351:40" pos:end="351:61"><name pos:start="351:40" pos:end="351:40">h</name><operator pos:start="351:41" pos:end="351:42">-&gt;</operator><name pos:start="351:43" pos:end="351:47">avctx</name><operator pos:start="351:48" pos:end="351:49">-&gt;</operator><name pos:start="351:50" pos:end="351:61">has_b_frames</name></name></expr></argument>, <argument pos:start="351:64" pos:end="351:86"><expr pos:start="351:64" pos:end="351:86"><name pos:start="351:64" pos:end="351:86"><name pos:start="351:64" pos:end="351:66">sps</name><operator pos:start="351:67" pos:end="351:68">-&gt;</operator><name pos:start="351:69" pos:end="351:86">num_reorder_frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="355:5" pos:end="355:43"><expr pos:start="355:5" pos:end="355:42"><name pos:start="355:5" pos:end="355:16"><name pos:start="355:5" pos:end="355:5">h</name><operator pos:start="355:6" pos:end="355:7">-&gt;</operator><name pos:start="355:8" pos:end="355:16">low_delay</name></name> <operator pos:start="355:18" pos:end="355:18">=</operator> <operator pos:start="355:20" pos:end="355:20">!</operator><name pos:start="355:21" pos:end="355:42"><name pos:start="355:21" pos:end="355:21">h</name><operator pos:start="355:22" pos:end="355:23">-&gt;</operator><name pos:start="355:24" pos:end="355:28">avctx</name><operator pos:start="355:29" pos:end="355:30">-&gt;</operator><name pos:start="355:31" pos:end="355:42">has_b_frames</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="359:5" pos:end="359:13"><expr pos:start="359:5" pos:end="359:12"><name pos:start="359:5" pos:end="359:8">pics</name> <operator pos:start="359:10" pos:end="359:10">=</operator> <literal type="number" pos:start="359:12" pos:end="359:12">0</literal></expr>;</expr_stmt>

    <while pos:start="361:5" pos:end="363:15">while <condition pos:start="361:11" pos:end="361:32">(<expr pos:start="361:12" pos:end="361:31"><name pos:start="361:12" pos:end="361:31"><name pos:start="361:12" pos:end="361:12">h</name><operator pos:start="361:13" pos:end="361:14">-&gt;</operator><name pos:start="361:15" pos:end="361:25">delayed_pic</name><index pos:start="361:26" pos:end="361:31">[<expr pos:start="361:27" pos:end="361:30"><name pos:start="361:27" pos:end="361:30">pics</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="363:9" pos:end="363:15"><block_content pos:start="363:9" pos:end="363:15">

        <expr_stmt pos:start="363:9" pos:end="363:15"><expr pos:start="363:9" pos:end="363:14"><name pos:start="363:9" pos:end="363:12">pics</name><operator pos:start="363:13" pos:end="363:14">++</operator></expr>;</expr_stmt></block_content></block></while>



    <expr_stmt pos:start="367:5" pos:end="367:42"><expr pos:start="367:5" pos:end="367:41"><call pos:start="367:5" pos:end="367:41"><name pos:start="367:5" pos:end="367:10">assert</name><argument_list pos:start="367:11" pos:end="367:41">(<argument pos:start="367:12" pos:end="367:40"><expr pos:start="367:12" pos:end="367:40"><name pos:start="367:12" pos:end="367:15">pics</name> <operator pos:start="367:17" pos:end="367:18">&lt;=</operator> <name pos:start="367:20" pos:end="367:40">MAX_DELAYED_PIC_COUNT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="371:5" pos:end="371:33"><expr pos:start="371:5" pos:end="371:32"><name pos:start="371:5" pos:end="371:26"><name pos:start="371:5" pos:end="371:5">h</name><operator pos:start="371:6" pos:end="371:7">-&gt;</operator><name pos:start="371:8" pos:end="371:18">delayed_pic</name><index pos:start="371:19" pos:end="371:26">[<expr pos:start="371:20" pos:end="371:25"><name pos:start="371:20" pos:end="371:23">pics</name><operator pos:start="371:24" pos:end="371:25">++</operator></expr>]</index></name> <operator pos:start="371:28" pos:end="371:28">=</operator> <name pos:start="371:30" pos:end="371:32">cur</name></expr>;</expr_stmt>

    <if_stmt pos:start="373:5" pos:end="375:41"><if pos:start="373:5" pos:end="375:41">if <condition pos:start="373:8" pos:end="373:28">(<expr pos:start="373:9" pos:end="373:27"><name pos:start="373:9" pos:end="373:22"><name pos:start="373:9" pos:end="373:11">cur</name><operator pos:start="373:12" pos:end="373:13">-&gt;</operator><name pos:start="373:14" pos:end="373:22">reference</name></name> <operator pos:start="373:24" pos:end="373:25">==</operator> <literal type="number" pos:start="373:27" pos:end="373:27">0</literal></expr>)</condition><block type="pseudo" pos:start="375:9" pos:end="375:41"><block_content pos:start="375:9" pos:end="375:41">

        <expr_stmt pos:start="375:9" pos:end="375:41"><expr pos:start="375:9" pos:end="375:40"><name pos:start="375:9" pos:end="375:22"><name pos:start="375:9" pos:end="375:11">cur</name><operator pos:start="375:12" pos:end="375:13">-&gt;</operator><name pos:start="375:14" pos:end="375:22">reference</name></name> <operator pos:start="375:24" pos:end="375:24">=</operator> <name pos:start="375:26" pos:end="375:40">DELAYED_PIC_REF</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="379:5" pos:end="403:33">/* Frame reordering. This code takes pictures from coding order and sorts

     * them by their incremental POC value into display order. It supports POC

     * gaps, MMCO reset codes and random resets.

     * A "display group" can start either with a IDR frame (f.key_frame = 1),

     * and/or can be closed down with a MMCO reset code. In sequences where

     * there is no delay, we can't detect that (since the frame was already

     * output to the user), so we also set h-&gt;mmco_reset to detect the MMCO

     * reset code.

     * FIXME: if we detect insufficient delays (as per h-&gt;avctx-&gt;has_b_frames),

     * we increase the delay between input and output. All frames affected by

     * the lag (e.g. those that should have been output before another frame

     * that we already returned to the user) will be dropped. This is a bug

     * that we will fix later. */</comment>

    <for pos:start="405:5" pos:end="411:5">for <control pos:start="405:9" pos:end="405:47">(<init pos:start="405:10" pos:end="405:15"><expr pos:start="405:10" pos:end="405:14"><name pos:start="405:10" pos:end="405:10">i</name> <operator pos:start="405:12" pos:end="405:12">=</operator> <literal type="number" pos:start="405:14" pos:end="405:14">0</literal></expr>;</init> <condition pos:start="405:17" pos:end="405:42"><expr pos:start="405:17" pos:end="405:41"><name pos:start="405:17" pos:end="405:17">i</name> <operator pos:start="405:19" pos:end="405:19">&lt;</operator> <name pos:start="405:21" pos:end="405:41">MAX_DELAYED_PIC_COUNT</name></expr>;</condition> <incr pos:start="405:44" pos:end="405:46"><expr pos:start="405:44" pos:end="405:46"><name pos:start="405:44" pos:end="405:44">i</name><operator pos:start="405:45" pos:end="405:46">++</operator></expr></incr>)</control> <block pos:start="405:49" pos:end="411:5">{<block_content pos:start="407:9" pos:end="409:39">

        <expr_stmt pos:start="407:9" pos:end="407:46"><expr pos:start="407:9" pos:end="407:45"><name pos:start="407:9" pos:end="407:11">cnt</name>     <operator pos:start="407:17" pos:end="407:18">+=</operator> <name pos:start="407:20" pos:end="407:27"><name pos:start="407:20" pos:end="407:22">out</name><operator pos:start="407:23" pos:end="407:24">-&gt;</operator><name pos:start="407:25" pos:end="407:27">poc</name></name> <operator pos:start="407:29" pos:end="407:29">&lt;</operator> <name pos:start="407:31" pos:end="407:45"><name pos:start="407:31" pos:end="407:31">h</name><operator pos:start="407:32" pos:end="407:33">-&gt;</operator><name pos:start="407:34" pos:end="407:42">last_pocs</name><index pos:start="407:43" pos:end="407:45">[<expr pos:start="407:44" pos:end="407:44"><name pos:start="407:44" pos:end="407:44">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="409:9" pos:end="409:39"><expr pos:start="409:9" pos:end="409:38"><name pos:start="409:9" pos:end="409:15">invalid</name> <operator pos:start="409:17" pos:end="409:18">+=</operator> <name pos:start="409:20" pos:end="409:27"><name pos:start="409:20" pos:end="409:22">out</name><operator pos:start="409:23" pos:end="409:24">-&gt;</operator><name pos:start="409:25" pos:end="409:27">poc</name></name> <operator pos:start="409:29" pos:end="409:30">==</operator> <name pos:start="409:32" pos:end="409:38">INT_MIN</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="413:5" pos:end="423:5"><if pos:start="413:5" pos:end="423:5">if <condition pos:start="413:8" pos:end="415:58">(<expr pos:start="413:9" pos:end="415:57"><operator pos:start="413:9" pos:end="413:9">!</operator><name pos:start="413:10" pos:end="413:22"><name pos:start="413:10" pos:end="413:10">h</name><operator pos:start="413:11" pos:end="413:12">-&gt;</operator><name pos:start="413:13" pos:end="413:22">mmco_reset</name></name> <operator pos:start="413:24" pos:end="413:25">&amp;&amp;</operator> <operator pos:start="413:27" pos:end="413:27">!</operator><name pos:start="413:28" pos:end="413:44"><name pos:start="413:28" pos:end="413:30">cur</name><operator pos:start="413:31" pos:end="413:32">-&gt;</operator><name pos:start="413:33" pos:end="413:33">f</name><operator pos:start="413:34" pos:end="413:35">-&gt;</operator><name pos:start="413:36" pos:end="413:44">key_frame</name></name> <operator pos:start="413:46" pos:end="413:47">&amp;&amp;</operator>

        <name pos:start="415:9" pos:end="415:11">cnt</name> <operator pos:start="415:13" pos:end="415:13">+</operator> <name pos:start="415:15" pos:end="415:21">invalid</name> <operator pos:start="415:23" pos:end="415:24">==</operator> <name pos:start="415:26" pos:end="415:46">MAX_DELAYED_PIC_COUNT</name> <operator pos:start="415:48" pos:end="415:49">&amp;&amp;</operator> <name pos:start="415:51" pos:end="415:53">cnt</name> <operator pos:start="415:55" pos:end="415:55">&gt;</operator> <literal type="number" pos:start="415:57" pos:end="415:57">0</literal></expr>)</condition> <block pos:start="415:60" pos:end="423:5">{<block_content pos:start="417:9" pos:end="421:53">

        <expr_stmt pos:start="417:9" pos:end="417:26"><expr pos:start="417:9" pos:end="417:25"><name pos:start="417:9" pos:end="417:21"><name pos:start="417:9" pos:end="417:9">h</name><operator pos:start="417:10" pos:end="417:11">-&gt;</operator><name pos:start="417:12" pos:end="417:21">mmco_reset</name></name> <operator pos:start="417:23" pos:end="417:23">=</operator> <literal type="number" pos:start="417:25" pos:end="417:25">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="419:9" pos:end="421:53"><if pos:start="419:9" pos:end="421:53">if <condition pos:start="419:12" pos:end="419:21">(<expr pos:start="419:13" pos:end="419:20"><name pos:start="419:13" pos:end="419:16">pics</name> <operator pos:start="419:18" pos:end="419:18">&gt;</operator> <literal type="number" pos:start="419:20" pos:end="419:20">1</literal></expr>)</condition><block type="pseudo" pos:start="421:13" pos:end="421:53"><block_content pos:start="421:13" pos:end="421:53">

            <expr_stmt pos:start="421:13" pos:end="421:53"><expr pos:start="421:13" pos:end="421:52"><name pos:start="421:13" pos:end="421:36"><name pos:start="421:13" pos:end="421:13">h</name><operator pos:start="421:14" pos:end="421:15">-&gt;</operator><name pos:start="421:16" pos:end="421:26">delayed_pic</name><index pos:start="421:27" pos:end="421:36">[<expr pos:start="421:28" pos:end="421:35"><name pos:start="421:28" pos:end="421:31">pics</name> <operator pos:start="421:33" pos:end="421:33">-</operator> <literal type="number" pos:start="421:35" pos:end="421:35">2</literal></expr>]</index></name><operator pos:start="421:37" pos:end="421:38">-&gt;</operator><name pos:start="421:39" pos:end="421:48">mmco_reset</name> <operator pos:start="421:50" pos:end="421:50">=</operator> <literal type="number" pos:start="421:52" pos:end="421:52">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="425:5" pos:end="435:5"><if pos:start="425:5" pos:end="435:5">if <condition pos:start="425:8" pos:end="425:43">(<expr pos:start="425:9" pos:end="425:42"><name pos:start="425:9" pos:end="425:21"><name pos:start="425:9" pos:end="425:9">h</name><operator pos:start="425:10" pos:end="425:11">-&gt;</operator><name pos:start="425:12" pos:end="425:21">mmco_reset</name></name> <operator pos:start="425:23" pos:end="425:24">||</operator> <name pos:start="425:26" pos:end="425:42"><name pos:start="425:26" pos:end="425:28">cur</name><operator pos:start="425:29" pos:end="425:30">-&gt;</operator><name pos:start="425:31" pos:end="425:31">f</name><operator pos:start="425:32" pos:end="425:33">-&gt;</operator><name pos:start="425:34" pos:end="425:42">key_frame</name></name></expr>)</condition> <block pos:start="425:45" pos:end="435:5">{<block_content pos:start="427:9" pos:end="433:40">

        <for pos:start="427:9" pos:end="429:38">for <control pos:start="427:13" pos:end="427:51">(<init pos:start="427:14" pos:end="427:19"><expr pos:start="427:14" pos:end="427:18"><name pos:start="427:14" pos:end="427:14">i</name> <operator pos:start="427:16" pos:end="427:16">=</operator> <literal type="number" pos:start="427:18" pos:end="427:18">0</literal></expr>;</init> <condition pos:start="427:21" pos:end="427:46"><expr pos:start="427:21" pos:end="427:45"><name pos:start="427:21" pos:end="427:21">i</name> <operator pos:start="427:23" pos:end="427:23">&lt;</operator> <name pos:start="427:25" pos:end="427:45">MAX_DELAYED_PIC_COUNT</name></expr>;</condition> <incr pos:start="427:48" pos:end="427:50"><expr pos:start="427:48" pos:end="427:50"><name pos:start="427:48" pos:end="427:48">i</name><operator pos:start="427:49" pos:end="427:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="429:13" pos:end="429:38"><block_content pos:start="429:13" pos:end="429:38">

            <expr_stmt pos:start="429:13" pos:end="429:38"><expr pos:start="429:13" pos:end="429:37"><name pos:start="429:13" pos:end="429:27"><name pos:start="429:13" pos:end="429:13">h</name><operator pos:start="429:14" pos:end="429:15">-&gt;</operator><name pos:start="429:16" pos:end="429:24">last_pocs</name><index pos:start="429:25" pos:end="429:27">[<expr pos:start="429:26" pos:end="429:26"><name pos:start="429:26" pos:end="429:26">i</name></expr>]</index></name> <operator pos:start="429:29" pos:end="429:29">=</operator> <name pos:start="429:31" pos:end="429:37">INT_MIN</name></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="431:9" pos:end="431:20"><expr pos:start="431:9" pos:end="431:19"><name pos:start="431:9" pos:end="431:11">cnt</name>     <operator pos:start="431:17" pos:end="431:17">=</operator> <literal type="number" pos:start="431:19" pos:end="431:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="433:9" pos:end="433:40"><expr pos:start="433:9" pos:end="433:39"><name pos:start="433:9" pos:end="433:15">invalid</name> <operator pos:start="433:17" pos:end="433:17">=</operator> <name pos:start="433:19" pos:end="433:39">MAX_DELAYED_PIC_COUNT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="437:5" pos:end="437:32"><expr pos:start="437:5" pos:end="437:31"><name pos:start="437:5" pos:end="437:7">out</name>     <operator pos:start="437:13" pos:end="437:13">=</operator> <name pos:start="437:15" pos:end="437:31"><name pos:start="437:15" pos:end="437:15">h</name><operator pos:start="437:16" pos:end="437:17">-&gt;</operator><name pos:start="437:18" pos:end="437:28">delayed_pic</name><index pos:start="437:29" pos:end="437:31">[<expr pos:start="437:30" pos:end="437:30"><literal type="number" pos:start="437:30" pos:end="437:30">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="439:5" pos:end="439:16"><expr pos:start="439:5" pos:end="439:15"><name pos:start="439:5" pos:end="439:11">out_idx</name> <operator pos:start="439:13" pos:end="439:13">=</operator> <literal type="number" pos:start="439:15" pos:end="439:15">0</literal></expr>;</expr_stmt>

    <for pos:start="441:5" pos:end="457:9">for <control pos:start="441:9" pos:end="449:13">(<init pos:start="441:10" pos:end="441:15"><expr pos:start="441:10" pos:end="441:14"><name pos:start="441:10" pos:end="441:10">i</name> <operator pos:start="441:12" pos:end="441:12">=</operator> <literal type="number" pos:start="441:14" pos:end="441:14">1</literal></expr>;</init> <condition pos:start="441:17" pos:end="447:49"><expr pos:start="441:17" pos:end="447:48"><name pos:start="441:17" pos:end="441:17">i</name> <operator pos:start="441:19" pos:end="441:19">&lt;</operator> <name pos:start="441:21" pos:end="441:41">MAX_DELAYED_PIC_COUNT</name> <operator pos:start="441:43" pos:end="441:44">&amp;&amp;</operator>

                <name pos:start="443:17" pos:end="443:33"><name pos:start="443:17" pos:end="443:17">h</name><operator pos:start="443:18" pos:end="443:19">-&gt;</operator><name pos:start="443:20" pos:end="443:30">delayed_pic</name><index pos:start="443:31" pos:end="443:33">[<expr pos:start="443:32" pos:end="443:32"><name pos:start="443:32" pos:end="443:32">i</name></expr>]</index></name> <operator pos:start="443:35" pos:end="443:36">&amp;&amp;</operator>

                <operator pos:start="445:17" pos:end="445:17">!</operator><name pos:start="445:18" pos:end="445:38"><name pos:start="445:18" pos:end="445:18">h</name><operator pos:start="445:19" pos:end="445:20">-&gt;</operator><name pos:start="445:21" pos:end="445:31">delayed_pic</name><index pos:start="445:32" pos:end="445:38">[<expr pos:start="445:33" pos:end="445:37"><name pos:start="445:33" pos:end="445:33">i</name> <operator pos:start="445:35" pos:end="445:35">-</operator> <literal type="number" pos:start="445:37" pos:end="445:37">1</literal></expr>]</index></name><operator pos:start="445:39" pos:end="445:40">-&gt;</operator><name pos:start="445:41" pos:end="445:50">mmco_reset</name> <operator pos:start="445:52" pos:end="445:53">&amp;&amp;</operator>

                <operator pos:start="447:17" pos:end="447:17">!</operator><name pos:start="447:18" pos:end="447:34"><name pos:start="447:18" pos:end="447:18">h</name><operator pos:start="447:19" pos:end="447:20">-&gt;</operator><name pos:start="447:21" pos:end="447:31">delayed_pic</name><index pos:start="447:32" pos:end="447:34">[<expr pos:start="447:33" pos:end="447:33"><name pos:start="447:33" pos:end="447:33">i</name></expr>]</index></name><operator pos:start="447:35" pos:end="447:36">-&gt;</operator><name pos:start="447:37" pos:end="447:48"><name pos:start="447:37" pos:end="447:37">f</name><operator pos:start="447:38" pos:end="447:39">-&gt;</operator><name pos:start="447:40" pos:end="447:48">key_frame</name></name></expr>;</condition>

         <incr pos:start="449:10" pos:end="449:12"><expr pos:start="449:10" pos:end="449:12"><name pos:start="449:10" pos:end="449:10">i</name><operator pos:start="449:11" pos:end="449:12">++</operator></expr></incr>)</control><block type="pseudo" pos:start="451:9" pos:end="457:9"><block_content pos:start="451:9" pos:end="457:9">

        <if_stmt pos:start="451:9" pos:end="457:9"><if pos:start="451:9" pos:end="457:9">if <condition pos:start="451:12" pos:end="451:46">(<expr pos:start="451:13" pos:end="451:45"><name pos:start="451:13" pos:end="451:29"><name pos:start="451:13" pos:end="451:13">h</name><operator pos:start="451:14" pos:end="451:15">-&gt;</operator><name pos:start="451:16" pos:end="451:26">delayed_pic</name><index pos:start="451:27" pos:end="451:29">[<expr pos:start="451:28" pos:end="451:28"><name pos:start="451:28" pos:end="451:28">i</name></expr>]</index></name><operator pos:start="451:30" pos:end="451:31">-&gt;</operator><name pos:start="451:32" pos:end="451:34">poc</name> <operator pos:start="451:36" pos:end="451:36">&lt;</operator> <name pos:start="451:38" pos:end="451:45"><name pos:start="451:38" pos:end="451:40">out</name><operator pos:start="451:41" pos:end="451:42">-&gt;</operator><name pos:start="451:43" pos:end="451:45">poc</name></name></expr>)</condition> <block pos:start="451:48" pos:end="457:9">{<block_content pos:start="453:13" pos:end="455:24">

            <expr_stmt pos:start="453:13" pos:end="453:40"><expr pos:start="453:13" pos:end="453:39"><name pos:start="453:13" pos:end="453:15">out</name>     <operator pos:start="453:21" pos:end="453:21">=</operator> <name pos:start="453:23" pos:end="453:39"><name pos:start="453:23" pos:end="453:23">h</name><operator pos:start="453:24" pos:end="453:25">-&gt;</operator><name pos:start="453:26" pos:end="453:36">delayed_pic</name><index pos:start="453:37" pos:end="453:39">[<expr pos:start="453:38" pos:end="453:38"><name pos:start="453:38" pos:end="453:38">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="455:13" pos:end="455:24"><expr pos:start="455:13" pos:end="455:23"><name pos:start="455:13" pos:end="455:19">out_idx</name> <operator pos:start="455:21" pos:end="455:21">=</operator> <name pos:start="455:23" pos:end="455:23">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></for>

    <if_stmt pos:start="459:5" pos:end="463:39"><if pos:start="459:5" pos:end="463:39">if <condition pos:start="459:8" pos:end="461:59">(<expr pos:start="459:9" pos:end="461:58"><name pos:start="459:9" pos:end="459:30"><name pos:start="459:9" pos:end="459:9">h</name><operator pos:start="459:10" pos:end="459:11">-&gt;</operator><name pos:start="459:12" pos:end="459:16">avctx</name><operator pos:start="459:17" pos:end="459:18">-&gt;</operator><name pos:start="459:19" pos:end="459:30">has_b_frames</name></name> <operator pos:start="459:32" pos:end="459:33">==</operator> <literal type="number" pos:start="459:35" pos:end="459:35">0</literal> <operator pos:start="459:37" pos:end="459:38">&amp;&amp;</operator>

        <operator pos:start="461:9" pos:end="461:9">(</operator><name pos:start="461:10" pos:end="461:26"><name pos:start="461:10" pos:end="461:10">h</name><operator pos:start="461:11" pos:end="461:12">-&gt;</operator><name pos:start="461:13" pos:end="461:23">delayed_pic</name><index pos:start="461:24" pos:end="461:26">[<expr pos:start="461:25" pos:end="461:25"><literal type="number" pos:start="461:25" pos:end="461:25">0</literal></expr>]</index></name><operator pos:start="461:27" pos:end="461:28">-&gt;</operator><name pos:start="461:29" pos:end="461:40"><name pos:start="461:29" pos:end="461:29">f</name><operator pos:start="461:30" pos:end="461:31">-&gt;</operator><name pos:start="461:32" pos:end="461:40">key_frame</name></name> <operator pos:start="461:42" pos:end="461:43">||</operator> <name pos:start="461:45" pos:end="461:57"><name pos:start="461:45" pos:end="461:45">h</name><operator pos:start="461:46" pos:end="461:47">-&gt;</operator><name pos:start="461:48" pos:end="461:57">mmco_reset</name></name><operator pos:start="461:58" pos:end="461:58">)</operator></expr>)</condition><block type="pseudo" pos:start="463:9" pos:end="463:39"><block_content pos:start="463:9" pos:end="463:39">

        <expr_stmt pos:start="463:9" pos:end="463:39"><expr pos:start="463:9" pos:end="463:38"><name pos:start="463:9" pos:end="463:28"><name pos:start="463:9" pos:end="463:9">h</name><operator pos:start="463:10" pos:end="463:11">-&gt;</operator><name pos:start="463:12" pos:end="463:28">next_outputed_poc</name></name> <operator pos:start="463:30" pos:end="463:30">=</operator> <name pos:start="463:32" pos:end="463:38">INT_MIN</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="465:5" pos:end="467:53"><expr pos:start="465:5" pos:end="467:52"><name pos:start="465:5" pos:end="465:16">out_of_order</name> <operator pos:start="465:18" pos:end="465:18">=</operator> <operator pos:start="465:20" pos:end="465:20">!</operator><name pos:start="465:21" pos:end="465:37"><name pos:start="465:21" pos:end="465:23">out</name><operator pos:start="465:24" pos:end="465:25">-&gt;</operator><name pos:start="465:26" pos:end="465:26">f</name><operator pos:start="465:27" pos:end="465:28">-&gt;</operator><name pos:start="465:29" pos:end="465:37">key_frame</name></name> <operator pos:start="465:39" pos:end="465:40">&amp;&amp;</operator> <operator pos:start="465:42" pos:end="465:42">!</operator><name pos:start="465:43" pos:end="465:55"><name pos:start="465:43" pos:end="465:43">h</name><operator pos:start="465:44" pos:end="465:45">-&gt;</operator><name pos:start="465:46" pos:end="465:55">mmco_reset</name></name> <operator pos:start="465:57" pos:end="465:58">&amp;&amp;</operator>

                   <operator pos:start="467:20" pos:end="467:20">(</operator><name pos:start="467:21" pos:end="467:28"><name pos:start="467:21" pos:end="467:23">out</name><operator pos:start="467:24" pos:end="467:25">-&gt;</operator><name pos:start="467:26" pos:end="467:28">poc</name></name> <operator pos:start="467:30" pos:end="467:30">&lt;</operator> <name pos:start="467:32" pos:end="467:51"><name pos:start="467:32" pos:end="467:32">h</name><operator pos:start="467:33" pos:end="467:34">-&gt;</operator><name pos:start="467:35" pos:end="467:51">next_outputed_poc</name></name><operator pos:start="467:52" pos:end="467:52">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="471:5" pos:end="499:5"><if pos:start="471:5" pos:end="475:5">if <condition pos:start="471:8" pos:end="473:58">(<expr pos:start="471:9" pos:end="473:57"><name pos:start="471:9" pos:end="471:39"><name pos:start="471:9" pos:end="471:11">sps</name><operator pos:start="471:12" pos:end="471:13">-&gt;</operator><name pos:start="471:14" pos:end="471:39">bitstream_restriction_flag</name></name> <operator pos:start="471:41" pos:end="471:42">&amp;&amp;</operator>

        <name pos:start="473:9" pos:end="473:30"><name pos:start="473:9" pos:end="473:9">h</name><operator pos:start="473:10" pos:end="473:11">-&gt;</operator><name pos:start="473:12" pos:end="473:16">avctx</name><operator pos:start="473:17" pos:end="473:18">-&gt;</operator><name pos:start="473:19" pos:end="473:30">has_b_frames</name></name> <operator pos:start="473:32" pos:end="473:33">&gt;=</operator> <name pos:start="473:35" pos:end="473:57"><name pos:start="473:35" pos:end="473:37">sps</name><operator pos:start="473:38" pos:end="473:39">-&gt;</operator><name pos:start="473:40" pos:end="473:57">num_reorder_frames</name></name></expr>)</condition> <block pos:start="473:60" pos:end="475:5">{<block_content>

    </block_content>}</block></if> <if type="elseif" pos:start="475:7" pos:end="487:5">else if <condition pos:start="475:15" pos:end="477:62">(<expr pos:start="475:16" pos:end="477:61"><name pos:start="475:16" pos:end="475:27">out_of_order</name> <operator pos:start="475:29" pos:end="475:30">&amp;&amp;</operator> <name pos:start="475:32" pos:end="475:35">pics</name> <operator pos:start="475:37" pos:end="475:37">-</operator> <literal type="number" pos:start="475:39" pos:end="475:39">1</literal> <operator pos:start="475:41" pos:end="475:42">==</operator> <name pos:start="475:44" pos:end="475:65"><name pos:start="475:44" pos:end="475:44">h</name><operator pos:start="475:45" pos:end="475:46">-&gt;</operator><name pos:start="475:47" pos:end="475:51">avctx</name><operator pos:start="475:52" pos:end="475:53">-&gt;</operator><name pos:start="475:54" pos:end="475:65">has_b_frames</name></name> <operator pos:start="475:67" pos:end="475:68">&amp;&amp;</operator>

               <name pos:start="477:16" pos:end="477:37"><name pos:start="477:16" pos:end="477:16">h</name><operator pos:start="477:17" pos:end="477:18">-&gt;</operator><name pos:start="477:19" pos:end="477:23">avctx</name><operator pos:start="477:24" pos:end="477:25">-&gt;</operator><name pos:start="477:26" pos:end="477:37">has_b_frames</name></name> <operator pos:start="477:39" pos:end="477:39">&lt;</operator> <name pos:start="477:41" pos:end="477:61">MAX_DELAYED_PIC_COUNT</name></expr>)</condition> <block pos:start="477:64" pos:end="487:5">{<block_content pos:start="479:9" pos:end="485:25">

        <if_stmt pos:start="479:9" pos:end="483:9"><if pos:start="479:9" pos:end="483:9">if <condition pos:start="479:12" pos:end="479:50">(<expr pos:start="479:13" pos:end="479:49"><name pos:start="479:13" pos:end="479:19">invalid</name> <operator pos:start="479:21" pos:end="479:21">+</operator> <name pos:start="479:23" pos:end="479:25">cnt</name> <operator pos:start="479:27" pos:end="479:27">&lt;</operator> <name pos:start="479:29" pos:end="479:49">MAX_DELAYED_PIC_COUNT</name></expr>)</condition> <block pos:start="479:52" pos:end="483:9">{<block_content pos:start="481:13" pos:end="481:72">

            <expr_stmt pos:start="481:13" pos:end="481:72"><expr pos:start="481:13" pos:end="481:71"><name pos:start="481:13" pos:end="481:34"><name pos:start="481:13" pos:end="481:13">h</name><operator pos:start="481:14" pos:end="481:15">-&gt;</operator><name pos:start="481:16" pos:end="481:20">avctx</name><operator pos:start="481:21" pos:end="481:22">-&gt;</operator><name pos:start="481:23" pos:end="481:34">has_b_frames</name></name> <operator pos:start="481:36" pos:end="481:36">=</operator> <call pos:start="481:38" pos:end="481:71"><name pos:start="481:38" pos:end="481:42">FFMAX</name><argument_list pos:start="481:43" pos:end="481:71">(<argument pos:start="481:44" pos:end="481:65"><expr pos:start="481:44" pos:end="481:65"><name pos:start="481:44" pos:end="481:65"><name pos:start="481:44" pos:end="481:44">h</name><operator pos:start="481:45" pos:end="481:46">-&gt;</operator><name pos:start="481:47" pos:end="481:51">avctx</name><operator pos:start="481:52" pos:end="481:53">-&gt;</operator><name pos:start="481:54" pos:end="481:65">has_b_frames</name></name></expr></argument>, <argument pos:start="481:68" pos:end="481:70"><expr pos:start="481:68" pos:end="481:70"><name pos:start="481:68" pos:end="481:70">cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="485:9" pos:end="485:25"><expr pos:start="485:9" pos:end="485:24"><name pos:start="485:9" pos:end="485:20"><name pos:start="485:9" pos:end="485:9">h</name><operator pos:start="485:10" pos:end="485:11">-&gt;</operator><name pos:start="485:12" pos:end="485:20">low_delay</name></name> <operator pos:start="485:22" pos:end="485:22">=</operator> <literal type="number" pos:start="485:24" pos:end="485:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="487:7" pos:end="499:5">else if <condition pos:start="487:15" pos:end="493:56">(<expr pos:start="487:16" pos:end="493:55"><name pos:start="487:16" pos:end="487:27"><name pos:start="487:16" pos:end="487:16">h</name><operator pos:start="487:17" pos:end="487:18">-&gt;</operator><name pos:start="487:19" pos:end="487:27">low_delay</name></name> <operator pos:start="487:29" pos:end="487:30">&amp;&amp;</operator>

               <operator pos:start="489:16" pos:end="489:16">(</operator><operator pos:start="489:17" pos:end="489:17">(</operator><name pos:start="489:18" pos:end="489:37"><name pos:start="489:18" pos:end="489:18">h</name><operator pos:start="489:19" pos:end="489:20">-&gt;</operator><name pos:start="489:21" pos:end="489:37">next_outputed_poc</name></name> <operator pos:start="489:39" pos:end="489:40">!=</operator> <name pos:start="489:42" pos:end="489:48">INT_MIN</name> <operator pos:start="489:50" pos:end="489:51">&amp;&amp;</operator>

                 <name pos:start="491:18" pos:end="491:25"><name pos:start="491:18" pos:end="491:20">out</name><operator pos:start="491:21" pos:end="491:22">-&gt;</operator><name pos:start="491:23" pos:end="491:25">poc</name></name> <operator pos:start="491:27" pos:end="491:27">&gt;</operator> <name pos:start="491:29" pos:end="491:48"><name pos:start="491:29" pos:end="491:29">h</name><operator pos:start="491:30" pos:end="491:31">-&gt;</operator><name pos:start="491:32" pos:end="491:48">next_outputed_poc</name></name> <operator pos:start="491:50" pos:end="491:50">+</operator> <literal type="number" pos:start="491:52" pos:end="491:52">2</literal><operator pos:start="491:53" pos:end="491:53">)</operator> <operator pos:start="491:55" pos:end="491:56">||</operator>

                <name pos:start="493:17" pos:end="493:33"><name pos:start="493:17" pos:end="493:19">cur</name><operator pos:start="493:20" pos:end="493:21">-&gt;</operator><name pos:start="493:22" pos:end="493:22">f</name><operator pos:start="493:23" pos:end="493:24">-&gt;</operator><name pos:start="493:25" pos:end="493:33">pict_type</name></name> <operator pos:start="493:35" pos:end="493:36">==</operator> <name pos:start="493:38" pos:end="493:54">AV_PICTURE_TYPE_B</name><operator pos:start="493:55" pos:end="493:55">)</operator></expr>)</condition> <block pos:start="493:58" pos:end="499:5">{<block_content pos:start="495:9" pos:end="497:33">

        <expr_stmt pos:start="495:9" pos:end="495:25"><expr pos:start="495:9" pos:end="495:24"><name pos:start="495:9" pos:end="495:20"><name pos:start="495:9" pos:end="495:9">h</name><operator pos:start="495:10" pos:end="495:11">-&gt;</operator><name pos:start="495:12" pos:end="495:20">low_delay</name></name> <operator pos:start="495:22" pos:end="495:22">=</operator> <literal type="number" pos:start="495:24" pos:end="495:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="497:9" pos:end="497:33"><expr pos:start="497:9" pos:end="497:32"><name pos:start="497:9" pos:end="497:30"><name pos:start="497:9" pos:end="497:9">h</name><operator pos:start="497:10" pos:end="497:11">-&gt;</operator><name pos:start="497:12" pos:end="497:16">avctx</name><operator pos:start="497:17" pos:end="497:18">-&gt;</operator><name pos:start="497:19" pos:end="497:30">has_b_frames</name></name><operator pos:start="497:31" pos:end="497:32">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="503:5" pos:end="511:5"><if pos:start="503:5" pos:end="511:5">if <condition pos:start="503:8" pos:end="503:38">(<expr pos:start="503:9" pos:end="503:37"><name pos:start="503:9" pos:end="503:12">pics</name> <operator pos:start="503:14" pos:end="503:14">&gt;</operator> <name pos:start="503:16" pos:end="503:37"><name pos:start="503:16" pos:end="503:16">h</name><operator pos:start="503:17" pos:end="503:18">-&gt;</operator><name pos:start="503:19" pos:end="503:23">avctx</name><operator pos:start="503:24" pos:end="503:25">-&gt;</operator><name pos:start="503:26" pos:end="503:37">has_b_frames</name></name></expr>)</condition> <block pos:start="503:40" pos:end="511:5">{<block_content pos:start="505:9" pos:end="509:54">

        <expr_stmt pos:start="505:9" pos:end="505:43"><expr pos:start="505:9" pos:end="505:42"><name pos:start="505:9" pos:end="505:22"><name pos:start="505:9" pos:end="505:11">out</name><operator pos:start="505:12" pos:end="505:13">-&gt;</operator><name pos:start="505:14" pos:end="505:22">reference</name></name> <operator pos:start="505:24" pos:end="505:25">&amp;=</operator> <operator pos:start="505:27" pos:end="505:27">~</operator><name pos:start="505:28" pos:end="505:42">DELAYED_PIC_REF</name></expr>;</expr_stmt>

        <for pos:start="507:9" pos:end="509:54">for <control pos:start="507:13" pos:end="507:49">(<init pos:start="507:14" pos:end="507:25"><expr pos:start="507:14" pos:end="507:24"><name pos:start="507:14" pos:end="507:14">i</name> <operator pos:start="507:16" pos:end="507:16">=</operator> <name pos:start="507:18" pos:end="507:24">out_idx</name></expr>;</init> <condition pos:start="507:27" pos:end="507:44"><expr pos:start="507:27" pos:end="507:43"><name pos:start="507:27" pos:end="507:43"><name pos:start="507:27" pos:end="507:27">h</name><operator pos:start="507:28" pos:end="507:29">-&gt;</operator><name pos:start="507:30" pos:end="507:40">delayed_pic</name><index pos:start="507:41" pos:end="507:43">[<expr pos:start="507:42" pos:end="507:42"><name pos:start="507:42" pos:end="507:42">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="507:46" pos:end="507:48"><expr pos:start="507:46" pos:end="507:48"><name pos:start="507:46" pos:end="507:46">i</name><operator pos:start="507:47" pos:end="507:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="509:13" pos:end="509:54"><block_content pos:start="509:13" pos:end="509:54">

            <expr_stmt pos:start="509:13" pos:end="509:54"><expr pos:start="509:13" pos:end="509:53"><name pos:start="509:13" pos:end="509:29"><name pos:start="509:13" pos:end="509:13">h</name><operator pos:start="509:14" pos:end="509:15">-&gt;</operator><name pos:start="509:16" pos:end="509:26">delayed_pic</name><index pos:start="509:27" pos:end="509:29">[<expr pos:start="509:28" pos:end="509:28"><name pos:start="509:28" pos:end="509:28">i</name></expr>]</index></name> <operator pos:start="509:31" pos:end="509:31">=</operator> <name pos:start="509:33" pos:end="509:53"><name pos:start="509:33" pos:end="509:33">h</name><operator pos:start="509:34" pos:end="509:35">-&gt;</operator><name pos:start="509:36" pos:end="509:46">delayed_pic</name><index pos:start="509:47" pos:end="509:53">[<expr pos:start="509:48" pos:end="509:52"><name pos:start="509:48" pos:end="509:48">i</name> <operator pos:start="509:50" pos:end="509:50">+</operator> <literal type="number" pos:start="509:52" pos:end="509:52">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="513:5" pos:end="515:65"><expr pos:start="513:5" pos:end="515:64"><call pos:start="513:5" pos:end="515:64"><name pos:start="513:5" pos:end="513:11">memmove</name><argument_list pos:start="513:12" pos:end="515:64">(<argument pos:start="513:13" pos:end="513:24"><expr pos:start="513:13" pos:end="513:24"><name pos:start="513:13" pos:end="513:24"><name pos:start="513:13" pos:end="513:13">h</name><operator pos:start="513:14" pos:end="513:15">-&gt;</operator><name pos:start="513:16" pos:end="513:24">last_pocs</name></name></expr></argument>, <argument pos:start="513:27" pos:end="513:42"><expr pos:start="513:27" pos:end="513:42"><operator pos:start="513:27" pos:end="513:27">&amp;</operator><name pos:start="513:28" pos:end="513:42"><name pos:start="513:28" pos:end="513:28">h</name><operator pos:start="513:29" pos:end="513:30">-&gt;</operator><name pos:start="513:31" pos:end="513:39">last_pocs</name><index pos:start="513:40" pos:end="513:42">[<expr pos:start="513:41" pos:end="513:41"><literal type="number" pos:start="513:41" pos:end="513:41">1</literal></expr>]</index></name></expr></argument>,

            <argument pos:start="515:13" pos:end="515:63"><expr pos:start="515:13" pos:end="515:63"><sizeof pos:start="515:13" pos:end="515:33">sizeof<argument_list pos:start="515:19" pos:end="515:33">(<argument pos:start="515:20" pos:end="515:32"><expr pos:start="515:20" pos:end="515:32"><operator pos:start="515:20" pos:end="515:20">*</operator><name pos:start="515:21" pos:end="515:32"><name pos:start="515:21" pos:end="515:21">h</name><operator pos:start="515:22" pos:end="515:23">-&gt;</operator><name pos:start="515:24" pos:end="515:32">last_pocs</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="515:35" pos:end="515:35">*</operator> <operator pos:start="515:37" pos:end="515:37">(</operator><name pos:start="515:38" pos:end="515:58">MAX_DELAYED_PIC_COUNT</name> <operator pos:start="515:60" pos:end="515:60">-</operator> <literal type="number" pos:start="515:62" pos:end="515:62">1</literal><operator pos:start="515:63" pos:end="515:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="517:5" pos:end="517:55"><expr pos:start="517:5" pos:end="517:54"><name pos:start="517:5" pos:end="517:43"><name pos:start="517:5" pos:end="517:5">h</name><operator pos:start="517:6" pos:end="517:7">-&gt;</operator><name pos:start="517:8" pos:end="517:16">last_pocs</name><index pos:start="517:17" pos:end="517:43">[<expr pos:start="517:18" pos:end="517:42"><name pos:start="517:18" pos:end="517:38">MAX_DELAYED_PIC_COUNT</name> <operator pos:start="517:40" pos:end="517:40">-</operator> <literal type="number" pos:start="517:42" pos:end="517:42">1</literal></expr>]</index></name> <operator pos:start="517:45" pos:end="517:45">=</operator> <name pos:start="517:47" pos:end="517:54"><name pos:start="517:47" pos:end="517:49">cur</name><operator pos:start="517:50" pos:end="517:51">-&gt;</operator><name pos:start="517:52" pos:end="517:54">poc</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="519:5" pos:end="557:5"><if pos:start="519:5" pos:end="553:5">if <condition pos:start="519:8" pos:end="519:55">(<expr pos:start="519:9" pos:end="519:54"><operator pos:start="519:9" pos:end="519:9">!</operator><name pos:start="519:10" pos:end="519:21">out_of_order</name> <operator pos:start="519:23" pos:end="519:24">&amp;&amp;</operator> <name pos:start="519:26" pos:end="519:29">pics</name> <operator pos:start="519:31" pos:end="519:31">&gt;</operator> <name pos:start="519:33" pos:end="519:54"><name pos:start="519:33" pos:end="519:33">h</name><operator pos:start="519:34" pos:end="519:35">-&gt;</operator><name pos:start="519:36" pos:end="519:40">avctx</name><operator pos:start="519:41" pos:end="519:42">-&gt;</operator><name pos:start="519:43" pos:end="519:54">has_b_frames</name></name></expr>)</condition> <block pos:start="519:57" pos:end="553:5">{<block_content pos:start="521:9" pos:end="551:26">

        <expr_stmt pos:start="521:9" pos:end="521:33"><expr pos:start="521:9" pos:end="521:32"><name pos:start="521:9" pos:end="521:26"><name pos:start="521:9" pos:end="521:9">h</name><operator pos:start="521:10" pos:end="521:11">-&gt;</operator><name pos:start="521:12" pos:end="521:26">next_output_pic</name></name> <operator pos:start="521:28" pos:end="521:28">=</operator> <name pos:start="521:30" pos:end="521:32">out</name></expr>;</expr_stmt>

        <if_stmt pos:start="523:9" pos:end="549:9"><if pos:start="523:9" pos:end="537:9">if <condition pos:start="523:12" pos:end="523:28">(<expr pos:start="523:13" pos:end="523:27"><name pos:start="523:13" pos:end="523:27"><name pos:start="523:13" pos:end="523:15">out</name><operator pos:start="523:16" pos:end="523:17">-&gt;</operator><name pos:start="523:18" pos:end="523:27">mmco_reset</name></name></expr>)</condition> <block pos:start="523:30" pos:end="537:9">{<block_content pos:start="525:13" pos:end="535:13">

            <if_stmt pos:start="525:13" pos:end="535:13"><if pos:start="525:13" pos:end="531:13">if <condition pos:start="525:16" pos:end="525:28">(<expr pos:start="525:17" pos:end="525:27"><name pos:start="525:17" pos:end="525:23">out_idx</name> <operator pos:start="525:25" pos:end="525:25">&gt;</operator> <literal type="number" pos:start="525:27" pos:end="525:27">0</literal></expr>)</condition> <block pos:start="525:30" pos:end="531:13">{<block_content pos:start="527:17" pos:end="529:74">

                <expr_stmt pos:start="527:17" pos:end="527:67"><expr pos:start="527:17" pos:end="527:66"><name pos:start="527:17" pos:end="527:36"><name pos:start="527:17" pos:end="527:17">h</name><operator pos:start="527:18" pos:end="527:19">-&gt;</operator><name pos:start="527:20" pos:end="527:36">next_outputed_poc</name></name>                    <operator pos:start="527:57" pos:end="527:57">=</operator> <name pos:start="527:59" pos:end="527:66"><name pos:start="527:59" pos:end="527:61">out</name><operator pos:start="527:62" pos:end="527:63">-&gt;</operator><name pos:start="527:64" pos:end="527:66">poc</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="529:17" pos:end="529:74"><expr pos:start="529:17" pos:end="529:73"><name pos:start="529:17" pos:end="529:43"><name pos:start="529:17" pos:end="529:17">h</name><operator pos:start="529:18" pos:end="529:19">-&gt;</operator><name pos:start="529:20" pos:end="529:30">delayed_pic</name><index pos:start="529:31" pos:end="529:43">[<expr pos:start="529:32" pos:end="529:42"><name pos:start="529:32" pos:end="529:38">out_idx</name> <operator pos:start="529:40" pos:end="529:40">-</operator> <literal type="number" pos:start="529:42" pos:end="529:42">1</literal></expr>]</index></name><operator pos:start="529:44" pos:end="529:45">-&gt;</operator><name pos:start="529:46" pos:end="529:55">mmco_reset</name> <operator pos:start="529:57" pos:end="529:57">=</operator> <name pos:start="529:59" pos:end="529:73"><name pos:start="529:59" pos:end="529:61">out</name><operator pos:start="529:62" pos:end="529:63">-&gt;</operator><name pos:start="529:64" pos:end="529:73">mmco_reset</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="531:15" pos:end="535:13">else <block pos:start="531:20" pos:end="535:13">{<block_content pos:start="533:17" pos:end="533:47">

                <expr_stmt pos:start="533:17" pos:end="533:47"><expr pos:start="533:17" pos:end="533:46"><name pos:start="533:17" pos:end="533:36"><name pos:start="533:17" pos:end="533:17">h</name><operator pos:start="533:18" pos:end="533:19">-&gt;</operator><name pos:start="533:20" pos:end="533:36">next_outputed_poc</name></name> <operator pos:start="533:38" pos:end="533:38">=</operator> <name pos:start="533:40" pos:end="533:46">INT_MIN</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="537:11" pos:end="549:9">else <block pos:start="537:16" pos:end="549:9">{<block_content pos:start="539:13" pos:end="547:13">

            <if_stmt pos:start="539:13" pos:end="547:13"><if pos:start="539:13" pos:end="543:13">if <condition pos:start="539:16" pos:end="539:76">(<expr pos:start="539:17" pos:end="539:75"><name pos:start="539:17" pos:end="539:23">out_idx</name> <operator pos:start="539:25" pos:end="539:26">==</operator> <literal type="number" pos:start="539:28" pos:end="539:28">0</literal> <operator pos:start="539:30" pos:end="539:31">&amp;&amp;</operator> <name pos:start="539:33" pos:end="539:36">pics</name> <operator pos:start="539:38" pos:end="539:38">&gt;</operator> <literal type="number" pos:start="539:40" pos:end="539:40">1</literal> <operator pos:start="539:42" pos:end="539:43">&amp;&amp;</operator> <name pos:start="539:45" pos:end="539:61"><name pos:start="539:45" pos:end="539:45">h</name><operator pos:start="539:46" pos:end="539:47">-&gt;</operator><name pos:start="539:48" pos:end="539:58">delayed_pic</name><index pos:start="539:59" pos:end="539:61">[<expr pos:start="539:60" pos:end="539:60"><literal type="number" pos:start="539:60" pos:end="539:60">0</literal></expr>]</index></name><operator pos:start="539:62" pos:end="539:63">-&gt;</operator><name pos:start="539:64" pos:end="539:75"><name pos:start="539:64" pos:end="539:64">f</name><operator pos:start="539:65" pos:end="539:66">-&gt;</operator><name pos:start="539:67" pos:end="539:75">key_frame</name></name></expr>)</condition> <block pos:start="539:78" pos:end="543:13">{<block_content pos:start="541:17" pos:end="541:47">

                <expr_stmt pos:start="541:17" pos:end="541:47"><expr pos:start="541:17" pos:end="541:46"><name pos:start="541:17" pos:end="541:36"><name pos:start="541:17" pos:end="541:17">h</name><operator pos:start="541:18" pos:end="541:19">-&gt;</operator><name pos:start="541:20" pos:end="541:36">next_outputed_poc</name></name> <operator pos:start="541:38" pos:end="541:38">=</operator> <name pos:start="541:40" pos:end="541:46">INT_MIN</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="543:15" pos:end="547:13">else <block pos:start="543:20" pos:end="547:13">{<block_content pos:start="545:17" pos:end="545:48">

                <expr_stmt pos:start="545:17" pos:end="545:48"><expr pos:start="545:17" pos:end="545:47"><name pos:start="545:17" pos:end="545:36"><name pos:start="545:17" pos:end="545:17">h</name><operator pos:start="545:18" pos:end="545:19">-&gt;</operator><name pos:start="545:20" pos:end="545:36">next_outputed_poc</name></name> <operator pos:start="545:38" pos:end="545:38">=</operator> <name pos:start="545:40" pos:end="545:47"><name pos:start="545:40" pos:end="545:42">out</name><operator pos:start="545:43" pos:end="545:44">-&gt;</operator><name pos:start="545:45" pos:end="545:47">poc</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="551:9" pos:end="551:26"><expr pos:start="551:9" pos:end="551:25"><name pos:start="551:9" pos:end="551:21"><name pos:start="551:9" pos:end="551:9">h</name><operator pos:start="551:10" pos:end="551:11">-&gt;</operator><name pos:start="551:12" pos:end="551:21">mmco_reset</name></name> <operator pos:start="551:23" pos:end="551:23">=</operator> <literal type="number" pos:start="551:25" pos:end="551:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="553:7" pos:end="557:5">else <block pos:start="553:12" pos:end="557:5">{<block_content pos:start="555:9" pos:end="555:55">

        <expr_stmt pos:start="555:9" pos:end="555:55"><expr pos:start="555:9" pos:end="555:54"><call pos:start="555:9" pos:end="555:54"><name pos:start="555:9" pos:end="555:14">av_log</name><argument_list pos:start="555:15" pos:end="555:54">(<argument pos:start="555:16" pos:end="555:23"><expr pos:start="555:16" pos:end="555:23"><name pos:start="555:16" pos:end="555:23"><name pos:start="555:16" pos:end="555:16">h</name><operator pos:start="555:17" pos:end="555:18">-&gt;</operator><name pos:start="555:19" pos:end="555:23">avctx</name></name></expr></argument>, <argument pos:start="555:26" pos:end="555:37"><expr pos:start="555:26" pos:end="555:37"><name pos:start="555:26" pos:end="555:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="555:40" pos:end="555:53"><expr pos:start="555:40" pos:end="555:53"><literal type="string" pos:start="555:40" pos:end="555:53">"no picture\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="561:5" pos:end="575:5"><if pos:start="561:5" pos:end="575:5">if <condition pos:start="561:8" pos:end="561:27">(<expr pos:start="561:9" pos:end="561:26"><name pos:start="561:9" pos:end="561:26"><name pos:start="561:9" pos:end="561:9">h</name><operator pos:start="561:10" pos:end="561:11">-&gt;</operator><name pos:start="561:12" pos:end="561:26">next_output_pic</name></name></expr>)</condition> <block pos:start="561:29" pos:end="575:5">{<block_content pos:start="563:9" pos:end="573:86">

        <if_stmt pos:start="563:9" pos:end="571:9"><if pos:start="563:9" pos:end="571:9">if <condition pos:start="563:12" pos:end="563:42">(<expr pos:start="563:13" pos:end="563:41"><name pos:start="563:13" pos:end="563:41"><name pos:start="563:13" pos:end="563:13">h</name><operator pos:start="563:14" pos:end="563:15">-&gt;</operator><name pos:start="563:16" pos:end="563:30">next_output_pic</name><operator pos:start="563:31" pos:end="563:32">-&gt;</operator><name pos:start="563:33" pos:end="563:41">recovered</name></name></expr>)</condition> <block pos:start="563:44" pos:end="571:9">{<block_content pos:start="569:13" pos:end="569:54">

            <comment type="line" pos:start="565:13" pos:end="565:75">// We have reached an recovery point and all frames after it in</comment>

            <comment type="line" pos:start="567:13" pos:end="567:45">// display order are "recovered".</comment>

            <expr_stmt pos:start="569:13" pos:end="569:54"><expr pos:start="569:13" pos:end="569:53"><name pos:start="569:13" pos:end="569:30"><name pos:start="569:13" pos:end="569:13">h</name><operator pos:start="569:14" pos:end="569:15">-&gt;</operator><name pos:start="569:16" pos:end="569:30">frame_recovered</name></name> <operator pos:start="569:32" pos:end="569:33">|=</operator> <name pos:start="569:35" pos:end="569:53">FRAME_RECOVERED_SEI</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="573:9" pos:end="573:86"><expr pos:start="573:9" pos:end="573:85"><name pos:start="573:9" pos:end="573:37"><name pos:start="573:9" pos:end="573:9">h</name><operator pos:start="573:10" pos:end="573:11">-&gt;</operator><name pos:start="573:12" pos:end="573:26">next_output_pic</name><operator pos:start="573:27" pos:end="573:28">-&gt;</operator><name pos:start="573:29" pos:end="573:37">recovered</name></name> <operator pos:start="573:39" pos:end="573:40">|=</operator> <operator pos:start="573:42" pos:end="573:42">!</operator><operator pos:start="573:43" pos:end="573:43">!</operator><operator pos:start="573:44" pos:end="573:44">(</operator><name pos:start="573:45" pos:end="573:62"><name pos:start="573:45" pos:end="573:45">h</name><operator pos:start="573:46" pos:end="573:47">-&gt;</operator><name pos:start="573:48" pos:end="573:62">frame_recovered</name></name> <operator pos:start="573:64" pos:end="573:64">&amp;</operator> <name pos:start="573:66" pos:end="573:84">FRAME_RECOVERED_SEI</name><operator pos:start="573:85" pos:end="573:85">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="579:5" pos:end="589:5"><if pos:start="579:5" pos:end="589:5">if <condition pos:start="579:8" pos:end="579:45">(<expr pos:start="579:9" pos:end="579:44"><name pos:start="579:9" pos:end="579:22">setup_finished</name> <operator pos:start="579:24" pos:end="579:25">&amp;&amp;</operator> <operator pos:start="579:27" pos:end="579:27">!</operator><name pos:start="579:28" pos:end="579:44"><name pos:start="579:28" pos:end="579:28">h</name><operator pos:start="579:29" pos:end="579:30">-&gt;</operator><name pos:start="579:31" pos:end="579:35">avctx</name><operator pos:start="579:36" pos:end="579:37">-&gt;</operator><name pos:start="579:38" pos:end="579:44">hwaccel</name></name></expr>)</condition> <block pos:start="579:47" pos:end="589:5">{<block_content pos:start="581:9" pos:end="587:34">

        <expr_stmt pos:start="581:9" pos:end="581:41"><expr pos:start="581:9" pos:end="581:40"><call pos:start="581:9" pos:end="581:40"><name pos:start="581:9" pos:end="581:30">ff_thread_finish_setup</name><argument_list pos:start="581:31" pos:end="581:40">(<argument pos:start="581:32" pos:end="581:39"><expr pos:start="581:32" pos:end="581:39"><name pos:start="581:32" pos:end="581:39"><name pos:start="581:32" pos:end="581:32">h</name><operator pos:start="581:33" pos:end="581:34">-&gt;</operator><name pos:start="581:35" pos:end="581:39">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="585:9" pos:end="587:34"><if pos:start="585:9" pos:end="587:34">if <condition pos:start="585:12" pos:end="585:59">(<expr pos:start="585:13" pos:end="585:58"><name pos:start="585:13" pos:end="585:40"><name pos:start="585:13" pos:end="585:13">h</name><operator pos:start="585:14" pos:end="585:15">-&gt;</operator><name pos:start="585:16" pos:end="585:20">avctx</name><operator pos:start="585:21" pos:end="585:22">-&gt;</operator><name pos:start="585:23" pos:end="585:40">active_thread_type</name></name> <operator pos:start="585:42" pos:end="585:42">&amp;</operator> <name pos:start="585:44" pos:end="585:58">FF_THREAD_FRAME</name></expr>)</condition><block type="pseudo" pos:start="587:13" pos:end="587:34"><block_content pos:start="587:13" pos:end="587:34">

            <expr_stmt pos:start="587:13" pos:end="587:34"><expr pos:start="587:13" pos:end="587:33"><name pos:start="587:13" pos:end="587:29"><name pos:start="587:13" pos:end="587:13">h</name><operator pos:start="587:14" pos:end="587:15">-&gt;</operator><name pos:start="587:16" pos:end="587:29">setup_finished</name></name> <operator pos:start="587:31" pos:end="587:31">=</operator> <literal type="number" pos:start="587:33" pos:end="587:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
