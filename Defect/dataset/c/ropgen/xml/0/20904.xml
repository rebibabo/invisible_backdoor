<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20904.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">tcx_init1</name><parameter_list pos:start="1:21" pos:end="1:39">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:33">SysBusDevice</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="137:1">{<block_content pos:start="5:5" pos:end="135:13">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">TCXState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name> <init pos:start="5:17" pos:end="5:44">= <expr pos:start="5:19" pos:end="5:44"><call pos:start="5:19" pos:end="5:44"><name pos:start="5:19" pos:end="5:29">FROM_SYSBUS</name><argument_list pos:start="5:30" pos:end="5:44">(<argument pos:start="5:31" pos:end="5:38"><expr pos:start="5:31" pos:end="5:38"><name pos:start="5:31" pos:end="5:38">TCXState</name></expr></argument>, <argument pos:start="5:41" pos:end="5:43"><expr pos:start="5:41" pos:end="5:43"><name pos:start="5:41" pos:end="5:43">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">ram_addr_t</name></type> <name pos:start="7:16" pos:end="7:26">vram_offset</name> <init pos:start="7:28" pos:end="7:30">= <expr pos:start="7:30" pos:end="7:30"><literal type="number" pos:start="7:30" pos:end="7:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:22">vram_base</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:55"><expr pos:start="15:5" pos:end="17:54"><call pos:start="15:5" pos:end="17:54"><name pos:start="15:5" pos:end="15:26">memory_region_init_ram</name><argument_list pos:start="15:27" pos:end="17:54">(<argument pos:start="15:28" pos:end="15:39"><expr pos:start="15:28" pos:end="15:39"><operator pos:start="15:28" pos:end="15:28">&amp;</operator><name pos:start="15:29" pos:end="15:39"><name pos:start="15:29" pos:end="15:29">s</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:39">vram_mem</name></name></expr></argument>, <argument pos:start="15:42" pos:end="15:51"><expr pos:start="15:42" pos:end="15:51"><literal type="string" pos:start="15:42" pos:end="15:51">"tcx.vram"</literal></expr></argument>,

                           <argument pos:start="17:28" pos:end="17:53"><expr pos:start="17:28" pos:end="17:53"><name pos:start="17:28" pos:end="17:39"><name pos:start="17:28" pos:end="17:28">s</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:39">vram_size</name></name> <operator pos:start="17:41" pos:end="17:41">*</operator> <operator pos:start="17:43" pos:end="17:43">(</operator><literal type="number" pos:start="17:44" pos:end="17:46">1</literal> <operator pos:start="17:46" pos:end="17:46">+</operator> <literal type="number" pos:start="17:48" pos:end="17:50">4</literal> <operator pos:start="17:50" pos:end="17:50">+</operator> <literal type="number" pos:start="17:52" pos:end="17:52">4</literal><operator pos:start="17:53" pos:end="17:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><call pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:31">vmstate_register_ram_global</name><argument_list pos:start="19:32" pos:end="19:45">(<argument pos:start="19:33" pos:end="19:44"><expr pos:start="19:33" pos:end="19:44"><operator pos:start="19:33" pos:end="19:33">&amp;</operator><name pos:start="19:34" pos:end="19:44"><name pos:start="19:34" pos:end="19:34">s</name><operator pos:start="19:35" pos:end="19:36">-&gt;</operator><name pos:start="19:37" pos:end="19:44">vram_mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:56"><expr pos:start="21:5" pos:end="21:55"><name pos:start="21:5" pos:end="21:13">vram_base</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <call pos:start="21:17" pos:end="21:55"><name pos:start="21:17" pos:end="21:41">memory_region_get_ram_ptr</name><argument_list pos:start="21:42" pos:end="21:55">(<argument pos:start="21:43" pos:end="21:54"><expr pos:start="21:43" pos:end="21:54"><operator pos:start="21:43" pos:end="21:43">&amp;</operator><name pos:start="21:44" pos:end="21:54"><name pos:start="21:44" pos:end="21:44">s</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:54">vram_mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:21">/* 8-bit plane */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:11">vram</name></name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:23">vram_base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:8">size</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <name pos:start="29:12" pos:end="29:23"><name pos:start="29:12" pos:end="29:12">s</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:23">vram_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="33:62"><expr pos:start="31:5" pos:end="33:61"><call pos:start="31:5" pos:end="33:61"><name pos:start="31:5" pos:end="31:28">memory_region_init_alias</name><argument_list pos:start="31:29" pos:end="33:61">(<argument pos:start="31:30" pos:end="31:42"><expr pos:start="31:30" pos:end="31:42"><operator pos:start="31:30" pos:end="31:30">&amp;</operator><name pos:start="31:31" pos:end="31:42"><name pos:start="31:31" pos:end="31:31">s</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:42">vram_8bit</name></name></expr></argument>, <argument pos:start="31:45" pos:end="31:59"><expr pos:start="31:45" pos:end="31:59"><literal type="string" pos:start="31:45" pos:end="31:59">"tcx.vram.8bit"</literal></expr></argument>,

                             <argument pos:start="33:30" pos:end="33:41"><expr pos:start="33:30" pos:end="33:41"><operator pos:start="33:30" pos:end="33:30">&amp;</operator><name pos:start="33:31" pos:end="33:41"><name pos:start="33:31" pos:end="33:31">s</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:41">vram_mem</name></name></expr></argument>, <argument pos:start="33:44" pos:end="33:54"><expr pos:start="33:44" pos:end="33:54"><name pos:start="33:44" pos:end="33:54">vram_offset</name></expr></argument>, <argument pos:start="33:57" pos:end="33:60"><expr pos:start="33:57" pos:end="33:60"><name pos:start="33:57" pos:end="33:60">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><call pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:20">sysbus_init_mmio</name><argument_list pos:start="35:21" pos:end="35:40">(<argument pos:start="35:22" pos:end="35:24"><expr pos:start="35:22" pos:end="35:24"><name pos:start="35:22" pos:end="35:24">dev</name></expr></argument>, <argument pos:start="35:27" pos:end="35:39"><expr pos:start="35:27" pos:end="35:39"><operator pos:start="35:27" pos:end="35:27">&amp;</operator><name pos:start="35:28" pos:end="35:39"><name pos:start="35:28" pos:end="35:28">s</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:39">vram_8bit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:24"><expr pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:15">vram_offset</name> <operator pos:start="37:17" pos:end="37:18">+=</operator> <name pos:start="37:20" pos:end="37:23">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:22"><expr pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:13">vram_base</name> <operator pos:start="39:15" pos:end="39:16">+=</operator> <name pos:start="39:18" pos:end="39:21">size</name></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:13">/* DAC */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:78"><expr pos:start="45:5" pos:end="45:77"><call pos:start="45:5" pos:end="45:77"><name pos:start="45:5" pos:end="45:25">memory_region_init_io</name><argument_list pos:start="45:26" pos:end="45:77">(<argument pos:start="45:27" pos:end="45:33"><expr pos:start="45:27" pos:end="45:33"><operator pos:start="45:27" pos:end="45:27">&amp;</operator><name pos:start="45:28" pos:end="45:33"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:33">dac</name></name></expr></argument>, <argument pos:start="45:36" pos:end="45:47"><expr pos:start="45:36" pos:end="45:47"><operator pos:start="45:36" pos:end="45:36">&amp;</operator><name pos:start="45:37" pos:end="45:47">tcx_dac_ops</name></expr></argument>, <argument pos:start="45:50" pos:end="45:50"><expr pos:start="45:50" pos:end="45:50"><name pos:start="45:50" pos:end="45:50">s</name></expr></argument>, <argument pos:start="45:53" pos:end="45:61"><expr pos:start="45:53" pos:end="45:61"><literal type="string" pos:start="45:53" pos:end="45:61">"tcx.dac"</literal></expr></argument>, <argument pos:start="45:64" pos:end="45:76"><expr pos:start="45:64" pos:end="45:76"><name pos:start="45:64" pos:end="45:76">TCX_DAC_NREGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:35"><expr pos:start="47:5" pos:end="47:34"><call pos:start="47:5" pos:end="47:34"><name pos:start="47:5" pos:end="47:20">sysbus_init_mmio</name><argument_list pos:start="47:21" pos:end="47:34">(<argument pos:start="47:22" pos:end="47:24"><expr pos:start="47:22" pos:end="47:24"><name pos:start="47:22" pos:end="47:24">dev</name></expr></argument>, <argument pos:start="47:27" pos:end="47:33"><expr pos:start="47:27" pos:end="47:33"><operator pos:start="47:27" pos:end="47:27">&amp;</operator><name pos:start="47:28" pos:end="47:33"><name pos:start="47:28" pos:end="47:28">s</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:33">dac</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:21">/* TEC (dummy) */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:76"><expr pos:start="53:5" pos:end="53:75"><call pos:start="53:5" pos:end="53:75"><name pos:start="53:5" pos:end="53:25">memory_region_init_io</name><argument_list pos:start="53:26" pos:end="53:75">(<argument pos:start="53:27" pos:end="53:33"><expr pos:start="53:27" pos:end="53:33"><operator pos:start="53:27" pos:end="53:27">&amp;</operator><name pos:start="53:28" pos:end="53:33"><name pos:start="53:28" pos:end="53:28">s</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:33">tec</name></name></expr></argument>, <argument pos:start="53:36" pos:end="53:45"><expr pos:start="53:36" pos:end="53:45"><operator pos:start="53:36" pos:end="53:36">&amp;</operator><name pos:start="53:37" pos:end="53:45">dummy_ops</name></expr></argument>, <argument pos:start="53:48" pos:end="53:48"><expr pos:start="53:48" pos:end="53:48"><name pos:start="53:48" pos:end="53:48">s</name></expr></argument>, <argument pos:start="53:51" pos:end="53:59"><expr pos:start="53:51" pos:end="53:59"><literal type="string" pos:start="53:51" pos:end="53:59">"tcx.tec"</literal></expr></argument>, <argument pos:start="53:62" pos:end="53:74"><expr pos:start="53:62" pos:end="53:74"><name pos:start="53:62" pos:end="53:74">TCX_TEC_NREGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:35"><expr pos:start="55:5" pos:end="55:34"><call pos:start="55:5" pos:end="55:34"><name pos:start="55:5" pos:end="55:20">sysbus_init_mmio</name><argument_list pos:start="55:21" pos:end="55:34">(<argument pos:start="55:22" pos:end="55:24"><expr pos:start="55:22" pos:end="55:24"><name pos:start="55:22" pos:end="55:24">dev</name></expr></argument>, <argument pos:start="55:27" pos:end="55:33"><expr pos:start="55:27" pos:end="55:33"><operator pos:start="55:27" pos:end="55:27">&amp;</operator><name pos:start="55:28" pos:end="55:33"><name pos:start="55:28" pos:end="55:28">s</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:33">tec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="57:5" pos:end="57:64">/* THC: NetBSD writes here even with 8-bit display: dummy */</comment>

    <expr_stmt pos:start="59:5" pos:end="61:44"><expr pos:start="59:5" pos:end="61:43"><call pos:start="59:5" pos:end="61:43"><name pos:start="59:5" pos:end="59:25">memory_region_init_io</name><argument_list pos:start="59:26" pos:end="61:43">(<argument pos:start="59:27" pos:end="59:35"><expr pos:start="59:27" pos:end="59:35"><operator pos:start="59:27" pos:end="59:27">&amp;</operator><name pos:start="59:28" pos:end="59:35"><name pos:start="59:28" pos:end="59:28">s</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:35">thc24</name></name></expr></argument>, <argument pos:start="59:38" pos:end="59:47"><expr pos:start="59:38" pos:end="59:47"><operator pos:start="59:38" pos:end="59:38">&amp;</operator><name pos:start="59:39" pos:end="59:47">dummy_ops</name></expr></argument>, <argument pos:start="59:50" pos:end="59:50"><expr pos:start="59:50" pos:end="59:50"><name pos:start="59:50" pos:end="59:50">s</name></expr></argument>, <argument pos:start="59:53" pos:end="59:63"><expr pos:start="59:53" pos:end="59:63"><literal type="string" pos:start="59:53" pos:end="59:63">"tcx.thc24"</literal></expr></argument>,

                          <argument pos:start="61:27" pos:end="61:42"><expr pos:start="61:27" pos:end="61:42"><name pos:start="61:27" pos:end="61:42">TCX_THC_NREGS_24</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:37"><expr pos:start="63:5" pos:end="63:36"><call pos:start="63:5" pos:end="63:36"><name pos:start="63:5" pos:end="63:20">sysbus_init_mmio</name><argument_list pos:start="63:21" pos:end="63:36">(<argument pos:start="63:22" pos:end="63:24"><expr pos:start="63:22" pos:end="63:24"><name pos:start="63:22" pos:end="63:24">dev</name></expr></argument>, <argument pos:start="63:27" pos:end="63:35"><expr pos:start="63:27" pos:end="63:35"><operator pos:start="63:27" pos:end="63:27">&amp;</operator><name pos:start="63:28" pos:end="63:35"><name pos:start="63:28" pos:end="63:28">s</name><operator pos:start="63:29" pos:end="63:30">-&gt;</operator><name pos:start="63:31" pos:end="63:35">thc24</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="129:5"><if pos:start="67:5" pos:end="111:5">if <condition pos:start="67:8" pos:end="67:23">(<expr pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:16">depth</name></name> <operator pos:start="67:18" pos:end="67:19">==</operator> <literal type="number" pos:start="67:21" pos:end="67:22">24</literal></expr>)</condition> <block pos:start="67:25" pos:end="111:5">{<block_content pos:start="71:9" pos:end="109:66">

        <comment type="block" pos:start="69:9" pos:end="69:26">/* 24-bit plane */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:32"><expr pos:start="71:9" pos:end="71:31"><name pos:start="71:9" pos:end="71:12">size</name> <operator pos:start="71:14" pos:end="71:14">=</operator> <name pos:start="71:16" pos:end="71:27"><name pos:start="71:16" pos:end="71:16">s</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:27">vram_size</name></name> <operator pos:start="71:29" pos:end="71:29">*</operator> <literal type="number" pos:start="71:31" pos:end="71:31">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:42"><expr pos:start="73:9" pos:end="73:41"><name pos:start="73:9" pos:end="73:17"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:17">vram24</name></name> <operator pos:start="73:19" pos:end="73:19">=</operator> <operator pos:start="73:21" pos:end="73:21">(</operator><name pos:start="73:22" pos:end="73:29">uint32_t</name> <operator pos:start="73:31" pos:end="73:31">*</operator><operator pos:start="73:32" pos:end="73:32">)</operator><name pos:start="73:33" pos:end="73:41">vram_base</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:39"><expr pos:start="75:9" pos:end="75:38"><name pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:24">vram24_offset</name></name> <operator pos:start="75:26" pos:end="75:26">=</operator> <name pos:start="75:28" pos:end="75:38">vram_offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="79:66"><expr pos:start="77:9" pos:end="79:65"><call pos:start="77:9" pos:end="79:65"><name pos:start="77:9" pos:end="77:32">memory_region_init_alias</name><argument_list pos:start="77:33" pos:end="79:65">(<argument pos:start="77:34" pos:end="77:47"><expr pos:start="77:34" pos:end="77:47"><operator pos:start="77:34" pos:end="77:34">&amp;</operator><name pos:start="77:35" pos:end="77:47"><name pos:start="77:35" pos:end="77:35">s</name><operator pos:start="77:36" pos:end="77:37">-&gt;</operator><name pos:start="77:38" pos:end="77:47">vram_24bit</name></name></expr></argument>, <argument pos:start="77:50" pos:end="77:65"><expr pos:start="77:50" pos:end="77:65"><literal type="string" pos:start="77:50" pos:end="77:65">"tcx.vram.24bit"</literal></expr></argument>,

                                 <argument pos:start="79:34" pos:end="79:45"><expr pos:start="79:34" pos:end="79:45"><operator pos:start="79:34" pos:end="79:34">&amp;</operator><name pos:start="79:35" pos:end="79:45"><name pos:start="79:35" pos:end="79:35">s</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:45">vram_mem</name></name></expr></argument>, <argument pos:start="79:48" pos:end="79:58"><expr pos:start="79:48" pos:end="79:58"><name pos:start="79:48" pos:end="79:58">vram_offset</name></expr></argument>, <argument pos:start="79:61" pos:end="79:64"><expr pos:start="79:61" pos:end="79:64"><name pos:start="79:61" pos:end="79:64">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:46"><expr pos:start="81:9" pos:end="81:45"><call pos:start="81:9" pos:end="81:45"><name pos:start="81:9" pos:end="81:24">sysbus_init_mmio</name><argument_list pos:start="81:25" pos:end="81:45">(<argument pos:start="81:26" pos:end="81:28"><expr pos:start="81:26" pos:end="81:28"><name pos:start="81:26" pos:end="81:28">dev</name></expr></argument>, <argument pos:start="81:31" pos:end="81:44"><expr pos:start="81:31" pos:end="81:44"><operator pos:start="81:31" pos:end="81:31">&amp;</operator><name pos:start="81:32" pos:end="81:44"><name pos:start="81:32" pos:end="81:32">s</name><operator pos:start="81:33" pos:end="81:34">-&gt;</operator><name pos:start="81:35" pos:end="81:44">vram_24bit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:28"><expr pos:start="83:9" pos:end="83:27"><name pos:start="83:9" pos:end="83:19">vram_offset</name> <operator pos:start="83:21" pos:end="83:22">+=</operator> <name pos:start="83:24" pos:end="83:27">size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:26"><expr pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:17">vram_base</name> <operator pos:start="85:19" pos:end="85:20">+=</operator> <name pos:start="85:22" pos:end="85:25">size</name></expr>;</expr_stmt>



        <comment type="block" pos:start="89:9" pos:end="89:27">/* Control plane */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:32"><expr pos:start="91:9" pos:end="91:31"><name pos:start="91:9" pos:end="91:12">size</name> <operator pos:start="91:14" pos:end="91:14">=</operator> <name pos:start="91:16" pos:end="91:27"><name pos:start="91:16" pos:end="91:16">s</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:27">vram_size</name></name> <operator pos:start="91:29" pos:end="91:29">*</operator> <literal type="number" pos:start="91:31" pos:end="91:31">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:42"><expr pos:start="93:9" pos:end="93:41"><name pos:start="93:9" pos:end="93:17"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:17">cplane</name></name> <operator pos:start="93:19" pos:end="93:19">=</operator> <operator pos:start="93:21" pos:end="93:21">(</operator><name pos:start="93:22" pos:end="93:29">uint32_t</name> <operator pos:start="93:31" pos:end="93:31">*</operator><operator pos:start="93:32" pos:end="93:32">)</operator><name pos:start="93:33" pos:end="93:41">vram_base</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:39"><expr pos:start="95:9" pos:end="95:38"><name pos:start="95:9" pos:end="95:24"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:24">cplane_offset</name></name> <operator pos:start="95:26" pos:end="95:26">=</operator> <name pos:start="95:28" pos:end="95:38">vram_offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="99:66"><expr pos:start="97:9" pos:end="99:65"><call pos:start="97:9" pos:end="99:65"><name pos:start="97:9" pos:end="97:32">memory_region_init_alias</name><argument_list pos:start="97:33" pos:end="99:65">(<argument pos:start="97:34" pos:end="97:48"><expr pos:start="97:34" pos:end="97:48"><operator pos:start="97:34" pos:end="97:34">&amp;</operator><name pos:start="97:35" pos:end="97:48"><name pos:start="97:35" pos:end="97:35">s</name><operator pos:start="97:36" pos:end="97:37">-&gt;</operator><name pos:start="97:38" pos:end="97:48">vram_cplane</name></name></expr></argument>, <argument pos:start="97:51" pos:end="97:67"><expr pos:start="97:51" pos:end="97:67"><literal type="string" pos:start="97:51" pos:end="97:67">"tcx.vram.cplane"</literal></expr></argument>,

                                 <argument pos:start="99:34" pos:end="99:45"><expr pos:start="99:34" pos:end="99:45"><operator pos:start="99:34" pos:end="99:34">&amp;</operator><name pos:start="99:35" pos:end="99:45"><name pos:start="99:35" pos:end="99:35">s</name><operator pos:start="99:36" pos:end="99:37">-&gt;</operator><name pos:start="99:38" pos:end="99:45">vram_mem</name></name></expr></argument>, <argument pos:start="99:48" pos:end="99:58"><expr pos:start="99:48" pos:end="99:58"><name pos:start="99:48" pos:end="99:58">vram_offset</name></expr></argument>, <argument pos:start="99:61" pos:end="99:64"><expr pos:start="99:61" pos:end="99:64"><name pos:start="99:61" pos:end="99:64">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:47"><expr pos:start="101:9" pos:end="101:46"><call pos:start="101:9" pos:end="101:46"><name pos:start="101:9" pos:end="101:24">sysbus_init_mmio</name><argument_list pos:start="101:25" pos:end="101:46">(<argument pos:start="101:26" pos:end="101:28"><expr pos:start="101:26" pos:end="101:28"><name pos:start="101:26" pos:end="101:28">dev</name></expr></argument>, <argument pos:start="101:31" pos:end="101:45"><expr pos:start="101:31" pos:end="101:45"><operator pos:start="101:31" pos:end="101:31">&amp;</operator><name pos:start="101:32" pos:end="101:45"><name pos:start="101:32" pos:end="101:32">s</name><operator pos:start="101:33" pos:end="101:34">-&gt;</operator><name pos:start="101:35" pos:end="101:45">vram_cplane</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="105:9" pos:end="109:66"><expr pos:start="105:9" pos:end="109:65"><name pos:start="105:9" pos:end="105:14"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:14">con</name></name> <operator pos:start="105:16" pos:end="105:16">=</operator> <call pos:start="105:18" pos:end="109:65"><name pos:start="105:18" pos:end="105:37">graphic_console_init</name><argument_list pos:start="105:38" pos:end="109:65">(<argument pos:start="105:39" pos:end="105:58"><expr pos:start="105:39" pos:end="105:58"><name pos:start="105:39" pos:end="105:58">tcx24_update_display</name></expr></argument>,

                                      <argument pos:start="107:39" pos:end="107:62"><expr pos:start="107:39" pos:end="107:62"><name pos:start="107:39" pos:end="107:62">tcx24_invalidate_display</name></expr></argument>,

                                      <argument pos:start="109:39" pos:end="109:55"><expr pos:start="109:39" pos:end="109:55"><name pos:start="109:39" pos:end="109:55">tcx24_screen_dump</name></expr></argument>, <argument pos:start="109:58" pos:end="109:61"><expr pos:start="109:58" pos:end="109:61"><name pos:start="109:58" pos:end="109:61">NULL</name></expr></argument>, <argument pos:start="109:64" pos:end="109:64"><expr pos:start="109:64" pos:end="109:64"><name pos:start="109:64" pos:end="109:64">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="111:7" pos:end="129:5">else <block pos:start="111:12" pos:end="129:5">{<block_content pos:start="115:9" pos:end="127:64">

        <comment type="block" pos:start="113:9" pos:end="113:31">/* THC 8 bit (dummy) */</comment>

        <expr_stmt pos:start="115:9" pos:end="117:47"><expr pos:start="115:9" pos:end="117:46"><call pos:start="115:9" pos:end="117:46"><name pos:start="115:9" pos:end="115:29">memory_region_init_io</name><argument_list pos:start="115:30" pos:end="117:46">(<argument pos:start="115:31" pos:end="115:38"><expr pos:start="115:31" pos:end="115:38"><operator pos:start="115:31" pos:end="115:31">&amp;</operator><name pos:start="115:32" pos:end="115:38"><name pos:start="115:32" pos:end="115:32">s</name><operator pos:start="115:33" pos:end="115:34">-&gt;</operator><name pos:start="115:35" pos:end="115:38">thc8</name></name></expr></argument>, <argument pos:start="115:41" pos:end="115:50"><expr pos:start="115:41" pos:end="115:50"><operator pos:start="115:41" pos:end="115:41">&amp;</operator><name pos:start="115:42" pos:end="115:50">dummy_ops</name></expr></argument>, <argument pos:start="115:53" pos:end="115:53"><expr pos:start="115:53" pos:end="115:53"><name pos:start="115:53" pos:end="115:53">s</name></expr></argument>, <argument pos:start="115:56" pos:end="115:65"><expr pos:start="115:56" pos:end="115:65"><literal type="string" pos:start="115:56" pos:end="115:65">"tcx.thc8"</literal></expr></argument>,

                              <argument pos:start="117:31" pos:end="117:45"><expr pos:start="117:31" pos:end="117:45"><name pos:start="117:31" pos:end="117:45">TCX_THC_NREGS_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:40"><expr pos:start="119:9" pos:end="119:39"><call pos:start="119:9" pos:end="119:39"><name pos:start="119:9" pos:end="119:24">sysbus_init_mmio</name><argument_list pos:start="119:25" pos:end="119:39">(<argument pos:start="119:26" pos:end="119:28"><expr pos:start="119:26" pos:end="119:28"><name pos:start="119:26" pos:end="119:28">dev</name></expr></argument>, <argument pos:start="119:31" pos:end="119:38"><expr pos:start="119:31" pos:end="119:38"><operator pos:start="119:31" pos:end="119:31">&amp;</operator><name pos:start="119:32" pos:end="119:38"><name pos:start="119:32" pos:end="119:32">s</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:38">thc8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="123:9" pos:end="127:64"><expr pos:start="123:9" pos:end="127:63"><name pos:start="123:9" pos:end="123:14"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:14">con</name></name> <operator pos:start="123:16" pos:end="123:16">=</operator> <call pos:start="123:18" pos:end="127:63"><name pos:start="123:18" pos:end="123:37">graphic_console_init</name><argument_list pos:start="123:38" pos:end="127:63">(<argument pos:start="123:39" pos:end="123:56"><expr pos:start="123:39" pos:end="123:56"><name pos:start="123:39" pos:end="123:56">tcx_update_display</name></expr></argument>,

                                      <argument pos:start="125:39" pos:end="125:60"><expr pos:start="125:39" pos:end="125:60"><name pos:start="125:39" pos:end="125:60">tcx_invalidate_display</name></expr></argument>,

                                      <argument pos:start="127:39" pos:end="127:53"><expr pos:start="127:39" pos:end="127:53"><name pos:start="127:39" pos:end="127:53">tcx_screen_dump</name></expr></argument>, <argument pos:start="127:56" pos:end="127:59"><expr pos:start="127:56" pos:end="127:59"><name pos:start="127:56" pos:end="127:59">NULL</name></expr></argument>, <argument pos:start="127:62" pos:end="127:62"><expr pos:start="127:62" pos:end="127:62"><name pos:start="127:62" pos:end="127:62">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:53"><expr pos:start="133:5" pos:end="133:52"><call pos:start="133:5" pos:end="133:52"><name pos:start="133:5" pos:end="133:23">qemu_console_resize</name><argument_list pos:start="133:24" pos:end="133:52">(<argument pos:start="133:25" pos:end="133:30"><expr pos:start="133:25" pos:end="133:30"><name pos:start="133:25" pos:end="133:30"><name pos:start="133:25" pos:end="133:25">s</name><operator pos:start="133:26" pos:end="133:27">-&gt;</operator><name pos:start="133:28" pos:end="133:30">con</name></name></expr></argument>, <argument pos:start="133:33" pos:end="133:40"><expr pos:start="133:33" pos:end="133:40"><name pos:start="133:33" pos:end="133:40"><name pos:start="133:33" pos:end="133:33">s</name><operator pos:start="133:34" pos:end="133:35">-&gt;</operator><name pos:start="133:36" pos:end="133:40">width</name></name></expr></argument>, <argument pos:start="133:43" pos:end="133:51"><expr pos:start="133:43" pos:end="133:51"><name pos:start="133:43" pos:end="133:51"><name pos:start="133:43" pos:end="133:43">s</name><operator pos:start="133:44" pos:end="133:45">-&gt;</operator><name pos:start="133:46" pos:end="133:51">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
