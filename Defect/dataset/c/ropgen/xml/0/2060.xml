<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2060.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">dnxhd_mb_var_thread</name><parameter_list pos:start="1:31" pos:end="1:89">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:63"><decl pos:start="1:55" pos:end="1:63"><type pos:start="1:55" pos:end="1:63"><name pos:start="1:55" pos:end="1:58">void</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">arg</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:74"><decl pos:start="1:66" pos:end="1:74"><type pos:start="1:66" pos:end="1:74"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:74">jobnr</name></decl></parameter>, <parameter pos:start="1:77" pos:end="1:88"><decl pos:start="1:77" pos:end="1:88"><type pos:start="1:77" pos:end="1:88"><name pos:start="1:77" pos:end="1:79">int</name></type> <name pos:start="1:81" pos:end="1:88">threadnr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">DNXHDEncContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:43">= <expr pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:32">avctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">mb_y</name> <init pos:start="7:14" pos:end="7:20">= <expr pos:start="7:16" pos:end="7:20"><name pos:start="7:16" pos:end="7:20">jobnr</name></expr></init></decl>, <decl pos:start="7:23" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:26">mb_x</name></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:32"><expr pos:start="9:5" pos:end="9:31"><name pos:start="9:5" pos:end="9:7">ctx</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <name pos:start="9:11" pos:end="9:31"><name pos:start="9:11" pos:end="9:13">ctx</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:21">thread</name><index pos:start="9:22" pos:end="9:31">[<expr pos:start="9:23" pos:end="9:30"><name pos:start="9:23" pos:end="9:30">threadnr</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="77:5"><if pos:start="11:5" pos:end="29:5">if <condition pos:start="11:8" pos:end="11:39">(<expr pos:start="11:9" pos:end="11:38"><name pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:11">ctx</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:22">cid_table</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:33">bit_depth</name></name> <operator pos:start="11:35" pos:end="11:36">==</operator> <literal type="number" pos:start="11:38" pos:end="11:38">8</literal></expr>)</condition> <block pos:start="11:41" pos:end="29:5">{<block_content pos:start="13:9" pos:end="27:9">

        <decl_stmt pos:start="13:9" pos:end="13:78"><decl pos:start="13:9" pos:end="13:77"><type pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:15">uint8_t</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">pix</name> <init pos:start="13:22" pos:end="13:77">= <expr pos:start="13:24" pos:end="13:77"><name pos:start="13:24" pos:end="13:37"><name pos:start="13:24" pos:end="13:26">ctx</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:34">thread</name><index pos:start="13:35" pos:end="13:37">[<expr pos:start="13:36" pos:end="13:36"><literal type="number" pos:start="13:36" pos:end="13:36">0</literal></expr>]</index></name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:45"><name pos:start="13:40" pos:end="13:42">src</name><index pos:start="13:43" pos:end="13:45">[<expr pos:start="13:44" pos:end="13:44"><literal type="number" pos:start="13:44" pos:end="13:44">0</literal></expr>]</index></name> <operator pos:start="13:47" pos:end="13:47">+</operator> <operator pos:start="13:49" pos:end="13:49">(</operator><operator pos:start="13:50" pos:end="13:50">(</operator><name pos:start="13:51" pos:end="13:54">mb_y</name><operator pos:start="13:55" pos:end="13:56">&lt;&lt;</operator><literal type="number" pos:start="13:57" pos:end="13:57">4</literal><operator pos:start="13:58" pos:end="13:58">)</operator> <operator pos:start="13:60" pos:end="13:60">*</operator> <name pos:start="13:62" pos:end="13:76"><name pos:start="13:62" pos:end="13:64">ctx</name><operator pos:start="13:65" pos:end="13:66">-&gt;</operator><name pos:start="13:67" pos:end="13:67">m</name><operator pos:start="13:68" pos:end="13:68">.</operator><name pos:start="13:69" pos:end="13:76">linesize</name></name><operator pos:start="13:77" pos:end="13:77">)</operator></expr></init></decl>;</decl_stmt>

        <for pos:start="15:9" pos:end="27:9">for <control pos:start="15:13" pos:end="15:65">(<init pos:start="15:14" pos:end="15:22"><expr pos:start="15:14" pos:end="15:21"><name pos:start="15:14" pos:end="15:17">mb_x</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr>;</init> <condition pos:start="15:24" pos:end="15:46"><expr pos:start="15:24" pos:end="15:45"><name pos:start="15:24" pos:end="15:27">mb_x</name> <operator pos:start="15:29" pos:end="15:29">&lt;</operator> <name pos:start="15:31" pos:end="15:45"><name pos:start="15:31" pos:end="15:33">ctx</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:36">m</name><operator pos:start="15:37" pos:end="15:37">.</operator><name pos:start="15:38" pos:end="15:45">mb_width</name></name></expr>;</condition> <incr pos:start="15:48" pos:end="15:64"><expr pos:start="15:48" pos:end="15:53"><operator pos:start="15:48" pos:end="15:49">++</operator><name pos:start="15:50" pos:end="15:53">mb_x</name></expr><operator pos:start="15:54" pos:end="15:54">,</operator> <expr pos:start="15:56" pos:end="15:64"><name pos:start="15:56" pos:end="15:58">pix</name> <operator pos:start="15:60" pos:end="15:61">+=</operator> <literal type="number" pos:start="15:63" pos:end="15:64">16</literal></expr></incr>)</control> <block pos:start="15:67" pos:end="27:9">{<block_content pos:start="17:13" pos:end="25:36">

            <decl_stmt pos:start="17:13" pos:end="17:57"><decl pos:start="17:13" pos:end="17:56"><type pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:20">unsigned</name></type> <name pos:start="17:22" pos:end="17:23">mb</name>  <init pos:start="17:26" pos:end="17:56">= <expr pos:start="17:28" pos:end="17:56"><name pos:start="17:28" pos:end="17:31">mb_y</name> <operator pos:start="17:33" pos:end="17:33">*</operator> <name pos:start="17:35" pos:end="17:49"><name pos:start="17:35" pos:end="17:37">ctx</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:40">m</name><operator pos:start="17:41" pos:end="17:41">.</operator><name pos:start="17:42" pos:end="17:49">mb_width</name></name> <operator pos:start="17:51" pos:end="17:51">+</operator> <name pos:start="17:53" pos:end="17:56">mb_x</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="19:13" pos:end="19:63"><decl pos:start="19:13" pos:end="19:62"><type pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">int</name></type> <name pos:start="19:17" pos:end="19:19">sum</name> <init pos:start="19:21" pos:end="19:62">= <expr pos:start="19:23" pos:end="19:62"><call pos:start="19:23" pos:end="19:62"><name pos:start="19:23" pos:end="19:40"><name pos:start="19:23" pos:end="19:25">ctx</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:28">m</name><operator pos:start="19:29" pos:end="19:29">.</operator><name pos:start="19:30" pos:end="19:32">dsp</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:40">pix_sum</name></name><argument_list pos:start="19:41" pos:end="19:62">(<argument pos:start="19:42" pos:end="19:44"><expr pos:start="19:42" pos:end="19:44"><name pos:start="19:42" pos:end="19:44">pix</name></expr></argument>, <argument pos:start="19:47" pos:end="19:61"><expr pos:start="19:47" pos:end="19:61"><name pos:start="19:47" pos:end="19:61"><name pos:start="19:47" pos:end="19:49">ctx</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:52">m</name><operator pos:start="19:53" pos:end="19:53">.</operator><name pos:start="19:54" pos:end="19:61">linesize</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="21:13" pos:end="21:104"><decl pos:start="21:13" pos:end="21:103"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:20">varc</name> <init pos:start="21:22" pos:end="21:103">= <expr pos:start="21:24" pos:end="21:103"><operator pos:start="21:24" pos:end="21:24">(</operator><call pos:start="21:25" pos:end="21:66"><name pos:start="21:25" pos:end="21:44"><name pos:start="21:25" pos:end="21:27">ctx</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:30">m</name><operator pos:start="21:31" pos:end="21:31">.</operator><name pos:start="21:32" pos:end="21:34">dsp</name><operator pos:start="21:35" pos:end="21:35">.</operator><name pos:start="21:36" pos:end="21:44">pix_norm1</name></name><argument_list pos:start="21:45" pos:end="21:66">(<argument pos:start="21:46" pos:end="21:48"><expr pos:start="21:46" pos:end="21:48"><name pos:start="21:46" pos:end="21:48">pix</name></expr></argument>, <argument pos:start="21:51" pos:end="21:65"><expr pos:start="21:51" pos:end="21:65"><name pos:start="21:51" pos:end="21:65"><name pos:start="21:51" pos:end="21:53">ctx</name><operator pos:start="21:54" pos:end="21:55">-&gt;</operator><name pos:start="21:56" pos:end="21:56">m</name><operator pos:start="21:57" pos:end="21:57">.</operator><name pos:start="21:58" pos:end="21:65">linesize</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:68" pos:end="21:68">-</operator> <operator pos:start="21:70" pos:end="21:70">(</operator><operator pos:start="21:71" pos:end="21:71">(</operator><operator pos:start="21:72" pos:end="21:72">(</operator><name pos:start="21:73" pos:end="21:80">unsigned</name><operator pos:start="21:81" pos:end="21:81">)</operator><operator pos:start="21:82" pos:end="21:82">(</operator><name pos:start="21:83" pos:end="21:85">sum</name><operator pos:start="21:86" pos:end="21:86">*</operator><name pos:start="21:87" pos:end="21:89">sum</name><operator pos:start="21:90" pos:end="21:90">)</operator><operator pos:start="21:91" pos:end="21:91">)</operator><operator pos:start="21:92" pos:end="21:93">&gt;&gt;</operator><literal type="number" pos:start="21:94" pos:end="21:94">8</literal><operator pos:start="21:95" pos:end="21:95">)</operator><operator pos:start="21:96" pos:end="21:96">+</operator><literal type="number" pos:start="21:97" pos:end="21:99">128</literal><operator pos:start="21:100" pos:end="21:100">)</operator><operator pos:start="21:101" pos:end="21:102">&gt;&gt;</operator><literal type="number" pos:start="21:103" pos:end="21:103">8</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:41"><expr pos:start="23:13" pos:end="23:40"><name pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:15">ctx</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:23">mb_cmp</name><index pos:start="23:24" pos:end="23:27">[<expr pos:start="23:25" pos:end="23:26"><name pos:start="23:25" pos:end="23:26">mb</name></expr>]</index></name><operator pos:start="23:28" pos:end="23:28">.</operator><name pos:start="23:29" pos:end="23:33">value</name> <operator pos:start="23:35" pos:end="23:35">=</operator> <name pos:start="23:37" pos:end="23:40">varc</name></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:36"><expr pos:start="25:13" pos:end="25:35"><name pos:start="25:13" pos:end="25:27"><name pos:start="25:13" pos:end="25:15">ctx</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:23">mb_cmp</name><index pos:start="25:24" pos:end="25:27">[<expr pos:start="25:25" pos:end="25:26"><name pos:start="25:25" pos:end="25:26">mb</name></expr>]</index></name><operator pos:start="25:28" pos:end="25:28">.</operator><name pos:start="25:29" pos:end="25:30">mb</name> <operator pos:start="25:32" pos:end="25:32">=</operator> <name pos:start="25:34" pos:end="25:35">mb</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="77:5">else <block pos:start="29:12" pos:end="77:5">{<block_content pos:start="31:9" pos:end="75:9"> <comment type="line" pos:start="29:14" pos:end="29:22">// 10-bit</comment>

        <decl_stmt pos:start="31:9" pos:end="31:50"><decl pos:start="31:9" pos:end="31:49"><type pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:11">int</name> <specifier pos:start="31:13" pos:end="31:17">const</specifier></type> <name pos:start="31:19" pos:end="31:26">linesize</name> <init pos:start="31:28" pos:end="31:49">= <expr pos:start="31:30" pos:end="31:49"><name pos:start="31:30" pos:end="31:44"><name pos:start="31:30" pos:end="31:32">ctx</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:35">m</name><operator pos:start="31:36" pos:end="31:36">.</operator><name pos:start="31:37" pos:end="31:44">linesize</name></name> <operator pos:start="31:46" pos:end="31:47">&gt;&gt;</operator> <literal type="number" pos:start="31:49" pos:end="31:49">1</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="33:9" pos:end="75:9">for <control pos:start="33:13" pos:end="33:54">(<init pos:start="33:14" pos:end="33:22"><expr pos:start="33:14" pos:end="33:21"><name pos:start="33:14" pos:end="33:17">mb_x</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr>;</init> <condition pos:start="33:24" pos:end="33:46"><expr pos:start="33:24" pos:end="33:45"><name pos:start="33:24" pos:end="33:27">mb_x</name> <operator pos:start="33:29" pos:end="33:29">&lt;</operator> <name pos:start="33:31" pos:end="33:45"><name pos:start="33:31" pos:end="33:33">ctx</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:36">m</name><operator pos:start="33:37" pos:end="33:37">.</operator><name pos:start="33:38" pos:end="33:45">mb_width</name></name></expr>;</condition> <incr pos:start="33:48" pos:end="33:53"><expr pos:start="33:48" pos:end="33:53"><operator pos:start="33:48" pos:end="33:49">++</operator><name pos:start="33:50" pos:end="33:53">mb_x</name></expr></incr>)</control> <block pos:start="33:56" pos:end="75:9">{<block_content pos:start="35:13" pos:end="73:36">

            <decl_stmt pos:start="35:13" pos:end="35:103"><decl pos:start="35:13" pos:end="35:102"><type pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:20">uint16_t</name> <modifier pos:start="35:22" pos:end="35:22">*</modifier></type><name pos:start="35:23" pos:end="35:25">pix</name> <init pos:start="35:27" pos:end="35:102">= <expr pos:start="35:29" pos:end="35:102"><operator pos:start="35:29" pos:end="35:29">(</operator><name pos:start="35:30" pos:end="35:37">uint16_t</name><operator pos:start="35:38" pos:end="35:38">*</operator><operator pos:start="35:39" pos:end="35:39">)</operator><name pos:start="35:40" pos:end="35:53"><name pos:start="35:40" pos:end="35:42">ctx</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:50">thread</name><index pos:start="35:51" pos:end="35:53">[<expr pos:start="35:52" pos:end="35:52"><literal type="number" pos:start="35:52" pos:end="35:52">0</literal></expr>]</index></name><operator pos:start="35:54" pos:end="35:55">-&gt;</operator><name pos:start="35:56" pos:end="35:61"><name pos:start="35:56" pos:end="35:58">src</name><index pos:start="35:59" pos:end="35:61">[<expr pos:start="35:60" pos:end="35:60"><literal type="number" pos:start="35:60" pos:end="35:60">0</literal></expr>]</index></name> <operator pos:start="35:63" pos:end="35:63">+</operator> <operator pos:start="35:65" pos:end="35:65">(</operator><operator pos:start="35:66" pos:end="35:66">(</operator><name pos:start="35:67" pos:end="35:70">mb_y</name> <operator pos:start="35:72" pos:end="35:73">&lt;&lt;</operator> <literal type="number" pos:start="35:75" pos:end="35:75">4</literal><operator pos:start="35:76" pos:end="35:76">)</operator> <operator pos:start="35:78" pos:end="35:78">*</operator> <name pos:start="35:80" pos:end="35:87">linesize</name><operator pos:start="35:88" pos:end="35:88">)</operator> <operator pos:start="35:90" pos:end="35:90">+</operator> <operator pos:start="35:92" pos:end="35:92">(</operator><name pos:start="35:93" pos:end="35:96">mb_x</name> <operator pos:start="35:98" pos:end="35:99">&lt;&lt;</operator> <literal type="number" pos:start="35:101" pos:end="35:101">4</literal><operator pos:start="35:102" pos:end="35:102">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:57"><decl pos:start="37:13" pos:end="37:56"><type pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:20">unsigned</name></type> <name pos:start="37:22" pos:end="37:23">mb</name>  <init pos:start="37:26" pos:end="37:56">= <expr pos:start="37:28" pos:end="37:56"><name pos:start="37:28" pos:end="37:31">mb_y</name> <operator pos:start="37:33" pos:end="37:33">*</operator> <name pos:start="37:35" pos:end="37:49"><name pos:start="37:35" pos:end="37:37">ctx</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:40">m</name><operator pos:start="37:41" pos:end="37:41">.</operator><name pos:start="37:42" pos:end="37:49">mb_width</name></name> <operator pos:start="37:51" pos:end="37:51">+</operator> <name pos:start="37:53" pos:end="37:56">mb_x</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="39:13" pos:end="39:24"><decl pos:start="39:13" pos:end="39:23"><type pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">int</name></type> <name pos:start="39:17" pos:end="39:19">sum</name> <init pos:start="39:21" pos:end="39:23">= <expr pos:start="39:23" pos:end="39:23"><literal type="number" pos:start="39:23" pos:end="39:23">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="41:13" pos:end="41:26"><decl pos:start="41:13" pos:end="41:25"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:21">sqsum</name> <init pos:start="41:23" pos:end="41:25">= <expr pos:start="41:25" pos:end="41:25"><literal type="number" pos:start="41:25" pos:end="41:25">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:29"><decl pos:start="43:13" pos:end="43:20"><type pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">int</name></type> <name pos:start="43:17" pos:end="43:20">mean</name></decl>, <decl pos:start="43:23" pos:end="43:28"><type ref="prev" pos:start="43:13" pos:end="43:15"/><name pos:start="43:23" pos:end="43:28">sqmean</name></decl>;</decl_stmt>

            <comment type="line" pos:start="45:13" pos:end="45:77">// Macroblocks are 16x16 pixels, unlike DCT blocks which are 8x8.</comment>

            <for pos:start="47:13" pos:end="65:13">for <control pos:start="47:17" pos:end="47:40">(<init pos:start="47:18" pos:end="47:27"><decl pos:start="47:18" pos:end="47:26"><type pos:start="47:18" pos:end="47:20"><name pos:start="47:18" pos:end="47:20">int</name></type> <name pos:start="47:22" pos:end="47:22">i</name> <init pos:start="47:24" pos:end="47:26">= <expr pos:start="47:26" pos:end="47:26"><literal type="number" pos:start="47:26" pos:end="47:26">0</literal></expr></init></decl>;</init> <condition pos:start="47:29" pos:end="47:35"><expr pos:start="47:29" pos:end="47:34"><name pos:start="47:29" pos:end="47:29">i</name> <operator pos:start="47:31" pos:end="47:31">&lt;</operator> <literal type="number" pos:start="47:33" pos:end="47:34">16</literal></expr>;</condition> <incr pos:start="47:37" pos:end="47:39"><expr pos:start="47:37" pos:end="47:39"><operator pos:start="47:37" pos:end="47:38">++</operator><name pos:start="47:39" pos:end="47:39">i</name></expr></incr>)</control> <block pos:start="47:42" pos:end="65:13">{<block_content pos:start="49:17" pos:end="63:32">

                <for pos:start="49:17" pos:end="61:17">for <control pos:start="49:21" pos:end="49:44">(<init pos:start="49:22" pos:end="49:31"><decl pos:start="49:22" pos:end="49:30"><type pos:start="49:22" pos:end="49:24"><name pos:start="49:22" pos:end="49:24">int</name></type> <name pos:start="49:26" pos:end="49:26">j</name> <init pos:start="49:28" pos:end="49:30">= <expr pos:start="49:30" pos:end="49:30"><literal type="number" pos:start="49:30" pos:end="49:30">0</literal></expr></init></decl>;</init> <condition pos:start="49:33" pos:end="49:39"><expr pos:start="49:33" pos:end="49:38"><name pos:start="49:33" pos:end="49:33">j</name> <operator pos:start="49:35" pos:end="49:35">&lt;</operator> <literal type="number" pos:start="49:37" pos:end="49:38">16</literal></expr>;</condition> <incr pos:start="49:41" pos:end="49:43"><expr pos:start="49:41" pos:end="49:43"><operator pos:start="49:41" pos:end="49:42">++</operator><name pos:start="49:43" pos:end="49:43">j</name></expr></incr>)</control> <block pos:start="49:46" pos:end="61:17">{<block_content pos:start="53:21" pos:end="57:45">

                    <comment type="line" pos:start="51:21" pos:end="51:59">// Turn 16-bit pixels into 10-bit ones.</comment>

                    <decl_stmt pos:start="53:21" pos:end="53:61"><decl pos:start="53:21" pos:end="53:60"><type pos:start="53:21" pos:end="53:29"><name pos:start="53:21" pos:end="53:23">int</name> <specifier pos:start="53:25" pos:end="53:29">const</specifier></type> <name pos:start="53:31" pos:end="53:36">sample</name> <init pos:start="53:38" pos:end="53:60">= <expr pos:start="53:40" pos:end="53:60"><operator pos:start="53:40" pos:end="53:40">(</operator><name pos:start="53:41" pos:end="53:48">unsigned</name><operator pos:start="53:49" pos:end="53:49">)</operator><name pos:start="53:50" pos:end="53:55"><name pos:start="53:50" pos:end="53:52">pix</name><index pos:start="53:53" pos:end="53:55">[<expr pos:start="53:54" pos:end="53:54"><name pos:start="53:54" pos:end="53:54">j</name></expr>]</index></name> <operator pos:start="53:57" pos:end="53:58">&gt;&gt;</operator> <literal type="number" pos:start="53:60" pos:end="53:60">6</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="55:21" pos:end="55:34"><expr pos:start="55:21" pos:end="55:33"><name pos:start="55:21" pos:end="55:23">sum</name> <operator pos:start="55:25" pos:end="55:26">+=</operator> <name pos:start="55:28" pos:end="55:33">sample</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="57:21" pos:end="57:45"><expr pos:start="57:21" pos:end="57:44"><name pos:start="57:21" pos:end="57:25">sqsum</name> <operator pos:start="57:27" pos:end="57:28">+=</operator> <name pos:start="57:30" pos:end="57:35">sample</name> <operator pos:start="57:37" pos:end="57:37">*</operator> <name pos:start="57:39" pos:end="57:44">sample</name></expr>;</expr_stmt>

                    <comment type="line" pos:start="59:21" pos:end="59:79">// 2^10 * 2^10 * 16 * 16 = 2^28, which is less than INT_MAX</comment>

                </block_content>}</block></for>

                <expr_stmt pos:start="63:17" pos:end="63:32"><expr pos:start="63:17" pos:end="63:31"><name pos:start="63:17" pos:end="63:19">pix</name> <operator pos:start="63:21" pos:end="63:22">+=</operator> <name pos:start="63:24" pos:end="63:31">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="67:13" pos:end="67:28"><expr pos:start="67:13" pos:end="67:27"><name pos:start="67:13" pos:end="67:16">mean</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <name pos:start="67:20" pos:end="67:22">sum</name> <operator pos:start="67:24" pos:end="67:25">&gt;&gt;</operator> <literal type="number" pos:start="67:27" pos:end="67:27">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="67:30" pos:end="67:44">// 16*16 == 2^8</comment>

            <expr_stmt pos:start="69:13" pos:end="69:32"><expr pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:18">sqmean</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:26">sqsum</name> <operator pos:start="69:28" pos:end="69:29">&gt;&gt;</operator> <literal type="number" pos:start="69:31" pos:end="69:31">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:57"><expr pos:start="71:13" pos:end="71:56"><name pos:start="71:13" pos:end="71:27"><name pos:start="71:13" pos:end="71:15">ctx</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:23">mb_cmp</name><index pos:start="71:24" pos:end="71:27">[<expr pos:start="71:25" pos:end="71:26"><name pos:start="71:25" pos:end="71:26">mb</name></expr>]</index></name><operator pos:start="71:28" pos:end="71:28">.</operator><name pos:start="71:29" pos:end="71:33">value</name> <operator pos:start="71:35" pos:end="71:35">=</operator> <name pos:start="71:37" pos:end="71:42">sqmean</name> <operator pos:start="71:44" pos:end="71:44">-</operator> <name pos:start="71:46" pos:end="71:49">mean</name> <operator pos:start="71:51" pos:end="71:51">*</operator> <name pos:start="71:53" pos:end="71:56">mean</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:36"><expr pos:start="73:13" pos:end="73:35"><name pos:start="73:13" pos:end="73:27"><name pos:start="73:13" pos:end="73:15">ctx</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:23">mb_cmp</name><index pos:start="73:24" pos:end="73:27">[<expr pos:start="73:25" pos:end="73:26"><name pos:start="73:25" pos:end="73:26">mb</name></expr>]</index></name><operator pos:start="73:28" pos:end="73:28">.</operator><name pos:start="73:29" pos:end="73:30">mb</name> <operator pos:start="73:32" pos:end="73:32">=</operator> <name pos:start="73:34" pos:end="73:35">mb</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
