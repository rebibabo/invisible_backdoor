<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24697.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:30">init_thread</name><parameter_list pos:start="1:31" pos:end="1:85">(<parameter pos:start="1:32" pos:end="1:58"><decl pos:start="1:32" pos:end="1:58"><type pos:start="1:32" pos:end="1:58"><name pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:37">struct</name> <name pos:start="1:39" pos:end="1:52">target_pt_regs</name></name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">regs</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:84"><decl pos:start="1:61" pos:end="1:84"><type pos:start="1:61" pos:end="1:84"><name pos:start="1:61" pos:end="1:77"><name pos:start="1:61" pos:end="1:66">struct</name> <name pos:start="1:68" pos:end="1:77">image_info</name></name> <modifier pos:start="1:79" pos:end="1:79">*</modifier></type><name pos:start="1:80" pos:end="1:84">infop</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="17:36">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">target_long</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:22">stack</name> <init pos:start="5:24" pos:end="5:51">= <expr pos:start="5:26" pos:end="5:51"><operator pos:start="5:26" pos:end="5:26">(</operator><name pos:start="5:27" pos:end="5:30">void</name> <operator pos:start="5:32" pos:end="5:32">*</operator><operator pos:start="5:33" pos:end="5:33">)</operator><name pos:start="5:34" pos:end="5:51"><name pos:start="5:34" pos:end="5:38">infop</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:51">start_stack</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:35"><expr pos:start="7:5" pos:end="7:34"><call pos:start="7:5" pos:end="7:34"><name pos:start="7:5" pos:end="7:10">memset</name><argument_list pos:start="7:11" pos:end="7:34">(<argument pos:start="7:12" pos:end="7:15"><expr pos:start="7:12" pos:end="7:15"><name pos:start="7:12" pos:end="7:15">regs</name></expr></argument>, <argument pos:start="7:18" pos:end="7:18"><expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></argument>, <argument pos:start="7:21" pos:end="7:33"><expr pos:start="7:21" pos:end="7:33"><sizeof pos:start="7:21" pos:end="7:33">sizeof<argument_list pos:start="7:27" pos:end="7:33">(<argument pos:start="7:28" pos:end="7:32"><expr pos:start="7:28" pos:end="7:32"><operator pos:start="7:28" pos:end="7:28">*</operator><name pos:start="7:29" pos:end="7:32">regs</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:26"><expr pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:8">regs</name><operator pos:start="9:9" pos:end="9:10">-&gt;</operator><name pos:start="9:11" pos:end="9:18">ARM_cpsr</name></name> <operator pos:start="9:20" pos:end="9:20">=</operator> <literal type="number" pos:start="9:22" pos:end="9:25">0x10</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:32"><expr pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:8">regs</name><operator pos:start="11:9" pos:end="11:10">-&gt;</operator><name pos:start="11:11" pos:end="11:16">ARM_pc</name></name> <operator pos:start="11:18" pos:end="11:18">=</operator> <name pos:start="11:20" pos:end="11:31"><name pos:start="11:20" pos:end="11:24">infop</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:31">entry</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:8">regs</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:16">ARM_sp</name></name> <operator pos:start="13:18" pos:end="13:18">=</operator> <name pos:start="13:20" pos:end="13:37"><name pos:start="13:20" pos:end="13:24">infop</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:37">start_stack</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:8">regs</name><operator pos:start="15:9" pos:end="15:10">-&gt;</operator><name pos:start="15:11" pos:end="15:16">ARM_r2</name></name> <operator pos:start="15:18" pos:end="15:18">=</operator> <call pos:start="15:20" pos:end="15:35"><name pos:start="15:20" pos:end="15:25">tswapl</name><argument_list pos:start="15:26" pos:end="15:35">(<argument pos:start="15:27" pos:end="15:34"><expr pos:start="15:27" pos:end="15:34"><name pos:start="15:27" pos:end="15:34"><name pos:start="15:27" pos:end="15:31">stack</name><index pos:start="15:32" pos:end="15:34">[<expr pos:start="15:33" pos:end="15:33"><literal type="number" pos:start="15:33" pos:end="15:33">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="15:38" pos:end="15:47">/* envp */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:8">regs</name><operator pos:start="17:9" pos:end="17:10">-&gt;</operator><name pos:start="17:11" pos:end="17:16">ARM_r1</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <call pos:start="17:20" pos:end="17:35"><name pos:start="17:20" pos:end="17:25">tswapl</name><argument_list pos:start="17:26" pos:end="17:35">(<argument pos:start="17:27" pos:end="17:34"><expr pos:start="17:27" pos:end="17:34"><name pos:start="17:27" pos:end="17:34"><name pos:start="17:27" pos:end="17:31">stack</name><index pos:start="17:32" pos:end="17:34">[<expr pos:start="17:33" pos:end="17:33"><literal type="number" pos:start="17:33" pos:end="17:33">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="17:38" pos:end="17:47">/* argv */</comment>

    <comment type="block" pos:start="19:5" pos:end="19:49">/* XXX: it seems that r0 is zeroed after ! */</comment>

    <comment type="line" pos:start="21:5" pos:end="21:53">//    regs-&gt;ARM_r0 = tswapl(stack[0]); /* argc */</comment>

</block_content>}</block></function>
</unit>
