<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24287.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">tcp_write_packet</name><parameter_list pos:start="1:28" pos:end="1:68">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:67"><decl pos:start="1:49" pos:end="1:67"><type pos:start="1:49" pos:end="1:67"><name pos:start="1:49" pos:end="1:58">RTSPStream</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:67">rtsp_st</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">RTSPState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">rt</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:54"><decl pos:start="7:5" pos:end="7:53"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:27">rtpctx</name> <init pos:start="7:29" pos:end="7:53">= <expr pos:start="7:31" pos:end="7:53"><name pos:start="7:31" pos:end="7:53"><name pos:start="7:31" pos:end="7:37">rtsp_st</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:53">transport_priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">buf</name></decl>, <decl pos:start="9:19" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:30">interleave_header</name></decl>, <decl pos:start="13:33" pos:end="13:51"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:33" pos:end="13:33">*</modifier></type><name pos:start="13:34" pos:end="13:51">interleaved_packet</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:8">size</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:47"><name pos:start="17:12" pos:end="17:29">avio_close_dyn_buf</name><argument_list pos:start="17:30" pos:end="17:47">(<argument pos:start="17:31" pos:end="17:40"><expr pos:start="17:31" pos:end="17:40"><name pos:start="17:31" pos:end="17:40"><name pos:start="17:31" pos:end="17:36">rtpctx</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:40">pb</name></name></expr></argument>, <argument pos:start="17:43" pos:end="17:46"><expr pos:start="17:43" pos:end="17:46"><operator pos:start="17:43" pos:end="17:43">&amp;</operator><name pos:start="17:44" pos:end="17:46">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:14"><expr pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:7">ptr</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <name pos:start="19:11" pos:end="19:13">buf</name></expr>;</expr_stmt>

    <while pos:start="21:5" pos:end="67:5">while <condition pos:start="21:11" pos:end="21:20">(<expr pos:start="21:12" pos:end="21:19"><name pos:start="21:12" pos:end="21:15">size</name> <operator pos:start="21:17" pos:end="21:17">&gt;</operator> <literal type="number" pos:start="21:19" pos:end="21:19">4</literal></expr>)</condition> <block pos:start="21:22" pos:end="67:5">{<block_content pos:start="23:9" pos:end="65:27">

        <decl_stmt pos:start="23:9" pos:end="23:43"><decl pos:start="23:9" pos:end="23:42"><type pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:16">uint32_t</name></type> <name pos:start="23:18" pos:end="23:27">packet_len</name> <init pos:start="23:29" pos:end="23:42">= <expr pos:start="23:31" pos:end="23:42"><call pos:start="23:31" pos:end="23:42"><name pos:start="23:31" pos:end="23:37">AV_RB32</name><argument_list pos:start="23:38" pos:end="23:42">(<argument pos:start="23:39" pos:end="23:41"><expr pos:start="23:39" pos:end="23:41"><name pos:start="23:39" pos:end="23:41">ptr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:15"><decl pos:start="25:9" pos:end="25:14"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:14">id</name></decl>;</decl_stmt>

        <comment type="block" pos:start="27:9" pos:end="35:46">/* The interleaving header is exactly 4 bytes, which happens to be

         * the same size as the packet length header from

         * url_open_dyn_packet_buf. So by writing the interleaving header

         * over these bytes, we get a consecutive interleaved packet

         * that can be written in one call. */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:53"><expr pos:start="37:9" pos:end="37:52"><name pos:start="37:9" pos:end="37:26">interleaved_packet</name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:46">interleave_header</name> <operator pos:start="37:48" pos:end="37:48">=</operator> <name pos:start="37:50" pos:end="37:52">ptr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:17"><expr pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:11">ptr</name> <operator pos:start="39:13" pos:end="39:14">+=</operator> <literal type="number" pos:start="39:16" pos:end="39:16">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:18"><expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:12">size</name> <operator pos:start="41:14" pos:end="41:15">-=</operator> <literal type="number" pos:start="41:17" pos:end="41:17">4</literal></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="45:18"><if pos:start="43:9" pos:end="45:18">if <condition pos:start="43:12" pos:end="43:48">(<expr pos:start="43:13" pos:end="43:47"><name pos:start="43:13" pos:end="43:22">packet_len</name> <operator pos:start="43:24" pos:end="43:24">&gt;</operator> <name pos:start="43:26" pos:end="43:29">size</name> <operator pos:start="43:31" pos:end="43:32">||</operator> <name pos:start="43:34" pos:end="43:43">packet_len</name> <operator pos:start="43:45" pos:end="43:45">&lt;</operator> <literal type="number" pos:start="43:47" pos:end="43:47">2</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:18"><block_content pos:start="45:13" pos:end="45:18">

            <break pos:start="45:13" pos:end="45:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="53:42"><if pos:start="47:9" pos:end="49:42">if <condition pos:start="47:12" pos:end="47:52">(<expr pos:start="47:13" pos:end="47:51"><name pos:start="47:13" pos:end="47:18"><name pos:start="47:13" pos:end="47:15">ptr</name><index pos:start="47:16" pos:end="47:18">[<expr pos:start="47:17" pos:end="47:17"><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>]</index></name> <operator pos:start="47:20" pos:end="47:21">&gt;=</operator> <name pos:start="47:23" pos:end="47:29">RTCP_SR</name> <operator pos:start="47:31" pos:end="47:32">&amp;&amp;</operator> <name pos:start="47:34" pos:end="47:39"><name pos:start="47:34" pos:end="47:36">ptr</name><index pos:start="47:37" pos:end="47:39">[<expr pos:start="47:38" pos:end="47:38"><literal type="number" pos:start="47:38" pos:end="47:38">1</literal></expr>]</index></name> <operator pos:start="47:41" pos:end="47:42">&lt;=</operator> <name pos:start="47:44" pos:end="47:51">RTCP_APP</name></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:42"><block_content pos:start="49:13" pos:end="49:42">

            <expr_stmt pos:start="49:13" pos:end="49:42"><expr pos:start="49:13" pos:end="49:41"><name pos:start="49:13" pos:end="49:14">id</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:41"><name pos:start="49:18" pos:end="49:24">rtsp_st</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:41">interleaved_max</name></name></expr>;</expr_stmt></block_content></block></if> <comment type="block" pos:start="49:44" pos:end="49:53">/* RTCP */</comment>

        <else pos:start="51:9" pos:end="53:42">else<block type="pseudo" pos:start="53:13" pos:end="53:42"><block_content pos:start="53:13" pos:end="53:42">

            <expr_stmt pos:start="53:13" pos:end="53:42"><expr pos:start="53:13" pos:end="53:41"><name pos:start="53:13" pos:end="53:14">id</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <name pos:start="53:18" pos:end="53:41"><name pos:start="53:18" pos:end="53:24">rtsp_st</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:41">interleaved_min</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="53:44" pos:end="53:52">/* RTP */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:35"><expr pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:25">interleave_header</name><index pos:start="55:26" pos:end="55:28">[<expr pos:start="55:27" pos:end="55:27"><literal type="number" pos:start="55:27" pos:end="55:27">0</literal></expr>]</index></name> <operator pos:start="55:30" pos:end="55:30">=</operator> <literal type="char" pos:start="55:32" pos:end="55:34">'$'</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:34"><expr pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:25">interleave_header</name><index pos:start="57:26" pos:end="57:28">[<expr pos:start="57:27" pos:end="57:27"><literal type="number" pos:start="57:27" pos:end="57:27">1</literal></expr>]</index></name> <operator pos:start="57:30" pos:end="57:30">=</operator> <name pos:start="57:32" pos:end="57:33">id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:51"><expr pos:start="59:9" pos:end="59:50"><call pos:start="59:9" pos:end="59:50"><name pos:start="59:9" pos:end="59:15">AV_WB16</name><argument_list pos:start="59:16" pos:end="59:50">(<argument pos:start="59:17" pos:end="59:37"><expr pos:start="59:17" pos:end="59:37"><name pos:start="59:17" pos:end="59:33">interleave_header</name> <operator pos:start="59:35" pos:end="59:35">+</operator> <literal type="number" pos:start="59:37" pos:end="59:37">2</literal></expr></argument>, <argument pos:start="59:40" pos:end="59:49"><expr pos:start="59:40" pos:end="59:49"><name pos:start="59:40" pos:end="59:49">packet_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:71"><expr pos:start="61:9" pos:end="61:70"><call pos:start="61:9" pos:end="61:70"><name pos:start="61:9" pos:end="61:17">url_write</name><argument_list pos:start="61:18" pos:end="61:70">(<argument pos:start="61:19" pos:end="61:33"><expr pos:start="61:19" pos:end="61:33"><name pos:start="61:19" pos:end="61:33"><name pos:start="61:19" pos:end="61:20">rt</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:33">rtsp_hd_out</name></name></expr></argument>, <argument pos:start="61:36" pos:end="61:53"><expr pos:start="61:36" pos:end="61:53"><name pos:start="61:36" pos:end="61:53">interleaved_packet</name></expr></argument>, <argument pos:start="61:56" pos:end="61:69"><expr pos:start="61:56" pos:end="61:69"><literal type="number" pos:start="61:56" pos:end="61:58">4</literal> <operator pos:start="61:58" pos:end="61:58">+</operator> <name pos:start="61:60" pos:end="61:69">packet_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:26"><expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:11">ptr</name> <operator pos:start="63:13" pos:end="63:14">+=</operator> <name pos:start="63:16" pos:end="63:25">packet_len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:27"><expr pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:12">size</name> <operator pos:start="65:14" pos:end="65:15">-=</operator> <name pos:start="65:17" pos:end="65:26">packet_len</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="69:5" pos:end="69:17"><expr pos:start="69:5" pos:end="69:16"><call pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:11">av_free</name><argument_list pos:start="69:12" pos:end="69:16">(<argument pos:start="69:13" pos:end="69:15"><expr pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:15">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:67"><expr pos:start="71:5" pos:end="71:66"><call pos:start="71:5" pos:end="71:66"><name pos:start="71:5" pos:end="71:27">url_open_dyn_packet_buf</name><argument_list pos:start="71:28" pos:end="71:66">(<argument pos:start="71:29" pos:end="71:39"><expr pos:start="71:29" pos:end="71:39"><operator pos:start="71:29" pos:end="71:29">&amp;</operator><name pos:start="71:30" pos:end="71:39"><name pos:start="71:30" pos:end="71:35">rtpctx</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:39">pb</name></name></expr></argument>, <argument pos:start="71:42" pos:end="71:65"><expr pos:start="71:42" pos:end="71:65"><name pos:start="71:42" pos:end="71:65">RTSP_TCP_MAX_PACKET_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
