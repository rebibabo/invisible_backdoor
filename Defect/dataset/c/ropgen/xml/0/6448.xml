<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6448.c" pos:tabs="8"><function pos:start="1:1" pos:end="399:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">ff_h263_encode_mb</name><parameter_list pos:start="1:23" pos:end="5:50">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:41"><name pos:start="1:24" pos:end="1:37">MpegEncContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type> <name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:43"><decl pos:start="3:24" pos:end="3:43"><type pos:start="3:24" pos:end="3:36"><name pos:start="3:24" pos:end="3:30">int16_t</name></type> <name pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:36">block</name><index pos:start="3:37" pos:end="3:39">[<expr pos:start="3:38" pos:end="3:38"><literal type="number" pos:start="3:38" pos:end="3:38">6</literal></expr>]</index><index pos:start="3:40" pos:end="3:43">[<expr pos:start="3:41" pos:end="3:42"><literal type="number" pos:start="3:41" pos:end="3:42">64</literal></expr>]</index></name></decl></parameter>,

                       <parameter pos:start="5:24" pos:end="5:35"><decl pos:start="5:24" pos:end="5:35"><type pos:start="5:24" pos:end="5:35"><name pos:start="5:24" pos:end="5:26">int</name></type> <name pos:start="5:28" pos:end="5:35">motion_x</name></decl></parameter>, <parameter pos:start="5:38" pos:end="5:49"><decl pos:start="5:38" pos:end="5:49"><type pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:40">int</name></type> <name pos:start="5:42" pos:end="5:49">motion_y</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="399:1">{<block_content pos:start="9:5" pos:end="397:5">

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">cbpc</name></decl>, <decl pos:start="9:15" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:18">cbpy</name></decl>, <decl pos:start="9:21" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:21">i</name></decl>, <decl pos:start="9:24" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:24" pos:end="9:26">cbp</name></decl>, <decl pos:start="9:29" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:34">pred_x</name></decl>, <decl pos:start="9:37" pos:end="9:42"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:37" pos:end="9:42">pred_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int16_t</name></type> <name pos:start="11:13" pos:end="11:19">pred_dc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int16_t</name></type> <name pos:start="13:13" pos:end="13:26"><name pos:start="13:13" pos:end="13:23">rec_intradc</name><index pos:start="13:24" pos:end="13:26">[<expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">6</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">int16_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:22"><name pos:start="15:14" pos:end="15:19">dc_ptr</name><index pos:start="15:20" pos:end="15:22">[<expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">6</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:61"><decl pos:start="17:5" pos:end="17:60"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:31">interleaved_stats</name><init pos:start="17:32" pos:end="17:60">= <expr pos:start="17:34" pos:end="17:60"><operator pos:start="17:34" pos:end="17:34">(</operator><name pos:start="17:35" pos:end="17:42"><name pos:start="17:35" pos:end="17:35">s</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:42">flags</name></name><operator pos:start="17:43" pos:end="17:43">&amp;</operator><name pos:start="17:44" pos:end="17:59">CODEC_FLAG_PASS1</name><operator pos:start="17:60" pos:end="17:60">)</operator></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="355:5"><if pos:start="21:5" pos:end="189:5">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:20"><name pos:start="21:10" pos:end="21:10">s</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:20">mb_intra</name></name></expr>)</condition> <block pos:start="21:23" pos:end="189:5">{<block_content pos:start="25:9" pos:end="187:9">

        <comment type="block" pos:start="23:9" pos:end="23:25">/* compute cbp */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:53"><expr pos:start="25:9" pos:end="25:52"><name pos:start="25:9" pos:end="25:11">cbp</name><operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:52"><name pos:start="25:14" pos:end="25:22">get_p_cbp</name><argument_list pos:start="25:23" pos:end="25:52">(<argument pos:start="25:24" pos:end="25:24"><expr pos:start="25:24" pos:end="25:24"><name pos:start="25:24" pos:end="25:24">s</name></expr></argument>, <argument pos:start="25:27" pos:end="25:31"><expr pos:start="25:27" pos:end="25:31"><name pos:start="25:27" pos:end="25:31">block</name></expr></argument>, <argument pos:start="25:34" pos:end="25:41"><expr pos:start="25:34" pos:end="25:41"><name pos:start="25:34" pos:end="25:41">motion_x</name></expr></argument>, <argument pos:start="25:44" pos:end="25:51"><expr pos:start="25:44" pos:end="25:51"><name pos:start="25:44" pos:end="25:51">motion_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="29:9" pos:end="49:9"><if pos:start="29:9" pos:end="49:9">if <condition pos:start="29:12" pos:end="29:88">(<expr pos:start="29:13" pos:end="29:87"><operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:16">cbp</name> <operator pos:start="29:18" pos:end="29:18">|</operator> <name pos:start="29:20" pos:end="29:27">motion_x</name> <operator pos:start="29:29" pos:end="29:29">|</operator> <name pos:start="29:31" pos:end="29:38">motion_y</name> <operator pos:start="29:40" pos:end="29:40">|</operator> <name pos:start="29:42" pos:end="29:50"><name pos:start="29:42" pos:end="29:42">s</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:50">dquant</name></name> <operator pos:start="29:52" pos:end="29:52">|</operator> <operator pos:start="29:54" pos:end="29:54">(</operator><name pos:start="29:55" pos:end="29:64"><name pos:start="29:55" pos:end="29:55">s</name><operator pos:start="29:56" pos:end="29:57">-&gt;</operator><name pos:start="29:58" pos:end="29:64">mv_type</name></name> <operator pos:start="29:66" pos:end="29:66">-</operator> <name pos:start="29:68" pos:end="29:80">MV_TYPE_16X16</name><operator pos:start="29:81" pos:end="29:81">)</operator><operator pos:start="29:82" pos:end="29:82">)</operator> <operator pos:start="29:84" pos:end="29:85">==</operator> <literal type="number" pos:start="29:87" pos:end="29:87">0</literal></expr>)</condition> <block pos:start="29:90" pos:end="49:9">{<block_content pos:start="33:13" pos:end="47:19">

            <comment type="block" pos:start="31:13" pos:end="31:33">/* skip macroblock */</comment>

            <expr_stmt pos:start="33:13" pos:end="33:35"><expr pos:start="33:13" pos:end="33:34"><call pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:20">put_bits</name><argument_list pos:start="33:21" pos:end="33:34">(<argument pos:start="33:22" pos:end="33:27"><expr pos:start="33:22" pos:end="33:27"><operator pos:start="33:22" pos:end="33:22">&amp;</operator><name pos:start="33:23" pos:end="33:27"><name pos:start="33:23" pos:end="33:23">s</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:27">pb</name></name></expr></argument>, <argument pos:start="33:30" pos:end="33:30"><expr pos:start="33:30" pos:end="33:30"><literal type="number" pos:start="33:30" pos:end="33:30">1</literal></expr></argument>, <argument pos:start="33:33" pos:end="33:33"><expr pos:start="33:33" pos:end="33:33"><literal type="number" pos:start="33:33" pos:end="33:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="41:13"><if pos:start="35:13" pos:end="41:13">if<condition pos:start="35:15" pos:end="35:33">(<expr pos:start="35:16" pos:end="35:32"><name pos:start="35:16" pos:end="35:32">interleaved_stats</name></expr>)</condition><block pos:start="35:34" pos:end="41:13">{<block_content pos:start="37:17" pos:end="39:31">

                <expr_stmt pos:start="37:17" pos:end="37:31"><expr pos:start="37:17" pos:end="37:30"><name pos:start="37:17" pos:end="37:28"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:28">misc_bits</name></name><operator pos:start="37:29" pos:end="37:30">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:31"><expr pos:start="39:17" pos:end="39:30"><name pos:start="39:17" pos:end="39:28"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:28">last_bits</name></name><operator pos:start="39:29" pos:end="39:30">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:28"><expr pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:25">skip_count</name></name><operator pos:start="43:26" pos:end="43:27">++</operator></expr>;</expr_stmt>



            <return pos:start="47:13" pos:end="47:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:31"><expr pos:start="51:9" pos:end="51:30"><call pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:16">put_bits</name><argument_list pos:start="51:17" pos:end="51:30">(<argument pos:start="51:18" pos:end="51:23"><expr pos:start="51:18" pos:end="51:23"><operator pos:start="51:18" pos:end="51:18">&amp;</operator><name pos:start="51:19" pos:end="51:23"><name pos:start="51:19" pos:end="51:19">s</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:23">pb</name></name></expr></argument>, <argument pos:start="51:26" pos:end="51:26"><expr pos:start="51:26" pos:end="51:26"><literal type="number" pos:start="51:26" pos:end="51:26">1</literal></expr></argument>, <argument pos:start="51:29" pos:end="51:29"><expr pos:start="51:29" pos:end="51:29"><literal type="number" pos:start="51:29" pos:end="51:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="51:41" pos:end="51:54">/* mb coded */</comment>



        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:12">cbpc</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <name pos:start="55:16" pos:end="55:18">cbp</name> <operator pos:start="55:20" pos:end="55:20">&amp;</operator> <literal type="number" pos:start="55:22" pos:end="55:22">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:24"><expr pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:12">cbpy</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <name pos:start="57:16" pos:end="57:18">cbp</name> <operator pos:start="57:20" pos:end="57:21">&gt;&gt;</operator> <literal type="number" pos:start="57:23" pos:end="57:23">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:24"><if pos:start="59:9" pos:end="61:24">if<condition pos:start="59:11" pos:end="59:42">(<expr pos:start="59:12" pos:end="59:41"><name pos:start="59:12" pos:end="59:27"><name pos:start="59:12" pos:end="59:12">s</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:27">alt_inter_vlc</name></name><operator pos:start="59:28" pos:end="59:29">==</operator><literal type="number" pos:start="59:30" pos:end="59:30">0</literal> <operator pos:start="59:32" pos:end="59:33">||</operator> <name pos:start="59:35" pos:end="59:38">cbpc</name><operator pos:start="59:39" pos:end="59:40">!=</operator><literal type="number" pos:start="59:41" pos:end="59:41">3</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:24"><block_content pos:start="61:13" pos:end="61:24">

            <expr_stmt pos:start="61:13" pos:end="61:24"><expr pos:start="61:13" pos:end="61:23"><name pos:start="61:13" pos:end="61:16">cbpy</name> <operator pos:start="61:18" pos:end="61:19">^=</operator> <literal type="number" pos:start="61:21" pos:end="61:23">0xF</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="63:31"><if pos:start="63:9" pos:end="63:31">if<condition pos:start="63:11" pos:end="63:21">(<expr pos:start="63:12" pos:end="63:20"><name pos:start="63:12" pos:end="63:20"><name pos:start="63:12" pos:end="63:12">s</name><operator pos:start="63:13" pos:end="63:14">-&gt;</operator><name pos:start="63:15" pos:end="63:20">dquant</name></name></expr>)</condition><block type="pseudo" pos:start="63:23" pos:end="63:31"><block_content pos:start="63:23" pos:end="63:31"> <expr_stmt pos:start="63:23" pos:end="63:31"><expr pos:start="63:23" pos:end="63:30"><name pos:start="63:23" pos:end="63:26">cbpc</name><operator pos:start="63:27" pos:end="63:28">+=</operator> <literal type="number" pos:start="63:30" pos:end="63:30">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="179:9"><if pos:start="65:9" pos:end="119:9">if<condition pos:start="65:11" pos:end="65:37">(<expr pos:start="65:12" pos:end="65:36"><name pos:start="65:12" pos:end="65:21"><name pos:start="65:12" pos:end="65:12">s</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:21">mv_type</name></name><operator pos:start="65:22" pos:end="65:23">==</operator><name pos:start="65:24" pos:end="65:36">MV_TYPE_16X16</name></expr>)</condition><block pos:start="65:38" pos:end="119:9">{<block_content pos:start="67:13" pos:end="117:13">

            <expr_stmt pos:start="67:13" pos:end="71:52"><expr pos:start="67:13" pos:end="71:51"><call pos:start="67:13" pos:end="71:51"><name pos:start="67:13" pos:end="67:20">put_bits</name><argument_list pos:start="67:21" pos:end="71:51">(<argument pos:start="67:22" pos:end="67:27"><expr pos:start="67:22" pos:end="67:27"><operator pos:start="67:22" pos:end="67:22">&amp;</operator><name pos:start="67:23" pos:end="67:27"><name pos:start="67:23" pos:end="67:23">s</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:27">pb</name></name></expr></argument>,

                    <argument pos:start="69:21" pos:end="69:50"><expr pos:start="69:21" pos:end="69:50"><name pos:start="69:21" pos:end="69:50"><name pos:start="69:21" pos:end="69:44">ff_h263_inter_MCBPC_bits</name><index pos:start="69:45" pos:end="69:50">[<expr pos:start="69:46" pos:end="69:49"><name pos:start="69:46" pos:end="69:49">cbpc</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="71:21" pos:end="71:50"><expr pos:start="71:21" pos:end="71:50"><name pos:start="71:21" pos:end="71:50"><name pos:start="71:21" pos:end="71:44">ff_h263_inter_MCBPC_code</name><index pos:start="71:45" pos:end="71:50">[<expr pos:start="71:46" pos:end="71:49"><name pos:start="71:46" pos:end="71:49">cbpc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="75:13" pos:end="75:83"><expr pos:start="75:13" pos:end="75:82"><call pos:start="75:13" pos:end="75:82"><name pos:start="75:13" pos:end="75:20">put_bits</name><argument_list pos:start="75:21" pos:end="75:82">(<argument pos:start="75:22" pos:end="75:27"><expr pos:start="75:22" pos:end="75:27"><operator pos:start="75:22" pos:end="75:22">&amp;</operator><name pos:start="75:23" pos:end="75:27"><name pos:start="75:23" pos:end="75:23">s</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:27">pb</name></name></expr></argument>, <argument pos:start="75:30" pos:end="75:54"><expr pos:start="75:30" pos:end="75:54"><name pos:start="75:30" pos:end="75:54"><name pos:start="75:30" pos:end="75:45">ff_h263_cbpy_tab</name><index pos:start="75:46" pos:end="75:51">[<expr pos:start="75:47" pos:end="75:50"><name pos:start="75:47" pos:end="75:50">cbpy</name></expr>]</index><index pos:start="75:52" pos:end="75:54">[<expr pos:start="75:53" pos:end="75:53"><literal type="number" pos:start="75:53" pos:end="75:53">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:57" pos:end="75:81"><expr pos:start="75:57" pos:end="75:81"><name pos:start="75:57" pos:end="75:81"><name pos:start="75:57" pos:end="75:72">ff_h263_cbpy_tab</name><index pos:start="75:73" pos:end="75:78">[<expr pos:start="75:74" pos:end="75:77"><name pos:start="75:74" pos:end="75:77">cbpy</name></expr>]</index><index pos:start="75:79" pos:end="75:81">[<expr pos:start="75:80" pos:end="75:80"><literal type="number" pos:start="75:80" pos:end="75:80">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="77:13" pos:end="79:62"><if pos:start="77:13" pos:end="79:62">if<condition pos:start="77:15" pos:end="77:25">(<expr pos:start="77:16" pos:end="77:24"><name pos:start="77:16" pos:end="77:24"><name pos:start="77:16" pos:end="77:16">s</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:24">dquant</name></name></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:62"><block_content pos:start="79:17" pos:end="79:62">

                <expr_stmt pos:start="79:17" pos:end="79:62"><expr pos:start="79:17" pos:end="79:61"><call pos:start="79:17" pos:end="79:61"><name pos:start="79:17" pos:end="79:24">put_bits</name><argument_list pos:start="79:25" pos:end="79:61">(<argument pos:start="79:26" pos:end="79:31"><expr pos:start="79:26" pos:end="79:31"><operator pos:start="79:26" pos:end="79:26">&amp;</operator><name pos:start="79:27" pos:end="79:31"><name pos:start="79:27" pos:end="79:27">s</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:31">pb</name></name></expr></argument>, <argument pos:start="79:34" pos:end="79:34"><expr pos:start="79:34" pos:end="79:34"><literal type="number" pos:start="79:34" pos:end="79:34">2</literal></expr></argument>, <argument pos:start="79:37" pos:end="79:60"><expr pos:start="79:37" pos:end="79:60"><name pos:start="79:37" pos:end="79:60"><name pos:start="79:37" pos:end="79:47">dquant_code</name><index pos:start="79:48" pos:end="79:60">[<expr pos:start="79:49" pos:end="79:59"><name pos:start="79:49" pos:end="79:57"><name pos:start="79:49" pos:end="79:49">s</name><operator pos:start="79:50" pos:end="79:51">-&gt;</operator><name pos:start="79:52" pos:end="79:57">dquant</name></name><operator pos:start="79:58" pos:end="79:58">+</operator><literal type="number" pos:start="79:59" pos:end="79:59">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="83:13" pos:end="87:13"><if pos:start="83:13" pos:end="87:13">if<condition pos:start="83:15" pos:end="83:33">(<expr pos:start="83:16" pos:end="83:32"><name pos:start="83:16" pos:end="83:32">interleaved_stats</name></expr>)</condition><block pos:start="83:34" pos:end="87:13">{<block_content pos:start="85:17" pos:end="85:48">

                <expr_stmt pos:start="85:17" pos:end="85:48"><expr pos:start="85:17" pos:end="85:47"><name pos:start="85:17" pos:end="85:28"><name pos:start="85:17" pos:end="85:17">s</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:28">misc_bits</name></name><operator pos:start="85:29" pos:end="85:30">+=</operator> <call pos:start="85:32" pos:end="85:47"><name pos:start="85:32" pos:end="85:44">get_bits_diff</name><argument_list pos:start="85:45" pos:end="85:47">(<argument pos:start="85:46" pos:end="85:46"><expr pos:start="85:46" pos:end="85:46"><name pos:start="85:46" pos:end="85:46">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="91:13" pos:end="91:44">/* motion vectors: 16x16 mode */</comment>

            <expr_stmt pos:start="93:13" pos:end="93:59"><expr pos:start="93:13" pos:end="93:58"><call pos:start="93:13" pos:end="93:58"><name pos:start="93:13" pos:end="93:31">ff_h263_pred_motion</name><argument_list pos:start="93:32" pos:end="93:58">(<argument pos:start="93:33" pos:end="93:33"><expr pos:start="93:33" pos:end="93:33"><name pos:start="93:33" pos:end="93:33">s</name></expr></argument>, <argument pos:start="93:36" pos:end="93:36"><expr pos:start="93:36" pos:end="93:36"><literal type="number" pos:start="93:36" pos:end="93:36">0</literal></expr></argument>, <argument pos:start="93:39" pos:end="93:39"><expr pos:start="93:39" pos:end="93:39"><literal type="number" pos:start="93:39" pos:end="93:39">0</literal></expr></argument>, <argument pos:start="93:42" pos:end="93:48"><expr pos:start="93:42" pos:end="93:48"><operator pos:start="93:42" pos:end="93:42">&amp;</operator><name pos:start="93:43" pos:end="93:48">pred_x</name></expr></argument>, <argument pos:start="93:51" pos:end="93:57"><expr pos:start="93:51" pos:end="93:57"><operator pos:start="93:51" pos:end="93:51">&amp;</operator><name pos:start="93:52" pos:end="93:57">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="97:13" pos:end="117:13"><if pos:start="97:13" pos:end="103:13">if <condition pos:start="97:16" pos:end="97:28">(<expr pos:start="97:17" pos:end="97:27"><operator pos:start="97:17" pos:end="97:17">!</operator><name pos:start="97:18" pos:end="97:27"><name pos:start="97:18" pos:end="97:18">s</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:27">umvplus</name></name></expr>)</condition> <block pos:start="97:30" pos:end="103:13">{<block_content pos:start="99:17" pos:end="101:70">

                <expr_stmt pos:start="99:17" pos:end="101:70"><expr pos:start="99:17" pos:end="101:69"><call pos:start="99:17" pos:end="101:69"><name pos:start="99:17" pos:end="99:44">ff_h263_encode_motion_vector</name><argument_list pos:start="99:45" pos:end="101:69">(<argument pos:start="99:46" pos:end="99:46"><expr pos:start="99:46" pos:end="99:46"><name pos:start="99:46" pos:end="99:46">s</name></expr></argument>, <argument pos:start="99:49" pos:end="99:65"><expr pos:start="99:49" pos:end="99:65"><name pos:start="99:49" pos:end="99:56">motion_x</name> <operator pos:start="99:58" pos:end="99:58">-</operator> <name pos:start="99:60" pos:end="99:65">pred_x</name></expr></argument>,

                                                <argument pos:start="101:49" pos:end="101:65"><expr pos:start="101:49" pos:end="101:65"><name pos:start="101:49" pos:end="101:56">motion_y</name> <operator pos:start="101:58" pos:end="101:58">-</operator> <name pos:start="101:60" pos:end="101:65">pred_y</name></expr></argument>, <argument pos:start="101:68" pos:end="101:68"><expr pos:start="101:68" pos:end="101:68"><literal type="number" pos:start="101:68" pos:end="101:68">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="105:13" pos:end="117:13">else <block pos:start="105:18" pos:end="117:13">{<block_content pos:start="107:17" pos:end="115:41">

                <expr_stmt pos:start="107:17" pos:end="107:59"><expr pos:start="107:17" pos:end="107:58"><call pos:start="107:17" pos:end="107:58"><name pos:start="107:17" pos:end="107:36">h263p_encode_umotion</name><argument_list pos:start="107:37" pos:end="107:58">(<argument pos:start="107:38" pos:end="107:38"><expr pos:start="107:38" pos:end="107:38"><name pos:start="107:38" pos:end="107:38">s</name></expr></argument>, <argument pos:start="107:41" pos:end="107:57"><expr pos:start="107:41" pos:end="107:57"><name pos:start="107:41" pos:end="107:48">motion_x</name> <operator pos:start="107:50" pos:end="107:50">-</operator> <name pos:start="107:52" pos:end="107:57">pred_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:59"><expr pos:start="109:17" pos:end="109:58"><call pos:start="109:17" pos:end="109:58"><name pos:start="109:17" pos:end="109:36">h263p_encode_umotion</name><argument_list pos:start="109:37" pos:end="109:58">(<argument pos:start="109:38" pos:end="109:38"><expr pos:start="109:38" pos:end="109:38"><name pos:start="109:38" pos:end="109:38">s</name></expr></argument>, <argument pos:start="109:41" pos:end="109:57"><expr pos:start="109:41" pos:end="109:57"><name pos:start="109:41" pos:end="109:48">motion_y</name> <operator pos:start="109:50" pos:end="109:50">-</operator> <name pos:start="109:52" pos:end="109:57">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="111:17" pos:end="115:41"><if pos:start="111:17" pos:end="115:41">if <condition pos:start="111:20" pos:end="111:77">(<expr pos:start="111:21" pos:end="111:76"><operator pos:start="111:21" pos:end="111:21">(</operator><operator pos:start="111:22" pos:end="111:22">(</operator><name pos:start="111:23" pos:end="111:30">motion_x</name> <operator pos:start="111:32" pos:end="111:32">-</operator> <name pos:start="111:34" pos:end="111:39">pred_x</name><operator pos:start="111:40" pos:end="111:40">)</operator> <operator pos:start="111:42" pos:end="111:43">==</operator> <literal type="number" pos:start="111:45" pos:end="111:45">1</literal><operator pos:start="111:46" pos:end="111:46">)</operator> <operator pos:start="111:48" pos:end="111:49">&amp;&amp;</operator> <operator pos:start="111:51" pos:end="111:51">(</operator><operator pos:start="111:52" pos:end="111:52">(</operator><name pos:start="111:53" pos:end="111:60">motion_y</name> <operator pos:start="111:62" pos:end="111:62">-</operator> <name pos:start="111:64" pos:end="111:69">pred_y</name><operator pos:start="111:70" pos:end="111:70">)</operator> <operator pos:start="111:72" pos:end="111:73">==</operator> <literal type="number" pos:start="111:75" pos:end="111:75">1</literal><operator pos:start="111:76" pos:end="111:76">)</operator></expr>)</condition><block type="pseudo" pos:start="115:21" pos:end="115:41"><block_content pos:start="115:21" pos:end="115:41">

                    <comment type="block" pos:start="113:21" pos:end="113:57">/* To prevent Start Code emulation */</comment>

                    <expr_stmt pos:start="115:21" pos:end="115:41"><expr pos:start="115:21" pos:end="115:40"><call pos:start="115:21" pos:end="115:40"><name pos:start="115:21" pos:end="115:28">put_bits</name><argument_list pos:start="115:29" pos:end="115:40">(<argument pos:start="115:30" pos:end="115:35"><expr pos:start="115:30" pos:end="115:35"><operator pos:start="115:30" pos:end="115:30">&amp;</operator><name pos:start="115:31" pos:end="115:35"><name pos:start="115:31" pos:end="115:31">s</name><operator pos:start="115:32" pos:end="115:33">-&gt;</operator><name pos:start="115:34" pos:end="115:35">pb</name></name></expr></argument>,<argument pos:start="115:37" pos:end="115:37"><expr pos:start="115:37" pos:end="115:37"><literal type="number" pos:start="115:37" pos:end="115:37">1</literal></expr></argument>,<argument pos:start="115:39" pos:end="115:39"><expr pos:start="115:39" pos:end="115:39"><literal type="number" pos:start="115:39" pos:end="115:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><else pos:start="119:10" pos:end="179:9">else<block pos:start="119:14" pos:end="179:9">{<block_content pos:start="121:13" pos:end="177:13">

            <expr_stmt pos:start="121:13" pos:end="125:55"><expr pos:start="121:13" pos:end="125:54"><call pos:start="121:13" pos:end="125:54"><name pos:start="121:13" pos:end="121:20">put_bits</name><argument_list pos:start="121:21" pos:end="125:54">(<argument pos:start="121:22" pos:end="121:27"><expr pos:start="121:22" pos:end="121:27"><operator pos:start="121:22" pos:end="121:22">&amp;</operator><name pos:start="121:23" pos:end="121:27"><name pos:start="121:23" pos:end="121:23">s</name><operator pos:start="121:24" pos:end="121:25">-&gt;</operator><name pos:start="121:26" pos:end="121:27">pb</name></name></expr></argument>,

                    <argument pos:start="123:21" pos:end="123:53"><expr pos:start="123:21" pos:end="123:53"><name pos:start="123:21" pos:end="123:53"><name pos:start="123:21" pos:end="123:44">ff_h263_inter_MCBPC_bits</name><index pos:start="123:45" pos:end="123:53">[<expr pos:start="123:46" pos:end="123:52"><name pos:start="123:46" pos:end="123:49">cbpc</name><operator pos:start="123:50" pos:end="123:50">+</operator><literal type="number" pos:start="123:51" pos:end="123:52">16</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="125:21" pos:end="125:53"><expr pos:start="125:21" pos:end="125:53"><name pos:start="125:21" pos:end="125:53"><name pos:start="125:21" pos:end="125:44">ff_h263_inter_MCBPC_code</name><index pos:start="125:45" pos:end="125:53">[<expr pos:start="125:46" pos:end="125:52"><name pos:start="125:46" pos:end="125:49">cbpc</name><operator pos:start="125:50" pos:end="125:50">+</operator><literal type="number" pos:start="125:51" pos:end="125:52">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:83"><expr pos:start="127:13" pos:end="127:82"><call pos:start="127:13" pos:end="127:82"><name pos:start="127:13" pos:end="127:20">put_bits</name><argument_list pos:start="127:21" pos:end="127:82">(<argument pos:start="127:22" pos:end="127:27"><expr pos:start="127:22" pos:end="127:27"><operator pos:start="127:22" pos:end="127:22">&amp;</operator><name pos:start="127:23" pos:end="127:27"><name pos:start="127:23" pos:end="127:23">s</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:27">pb</name></name></expr></argument>, <argument pos:start="127:30" pos:end="127:54"><expr pos:start="127:30" pos:end="127:54"><name pos:start="127:30" pos:end="127:54"><name pos:start="127:30" pos:end="127:45">ff_h263_cbpy_tab</name><index pos:start="127:46" pos:end="127:51">[<expr pos:start="127:47" pos:end="127:50"><name pos:start="127:47" pos:end="127:50">cbpy</name></expr>]</index><index pos:start="127:52" pos:end="127:54">[<expr pos:start="127:53" pos:end="127:53"><literal type="number" pos:start="127:53" pos:end="127:53">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="127:57" pos:end="127:81"><expr pos:start="127:57" pos:end="127:81"><name pos:start="127:57" pos:end="127:81"><name pos:start="127:57" pos:end="127:72">ff_h263_cbpy_tab</name><index pos:start="127:73" pos:end="127:78">[<expr pos:start="127:74" pos:end="127:77"><name pos:start="127:74" pos:end="127:77">cbpy</name></expr>]</index><index pos:start="127:79" pos:end="127:81">[<expr pos:start="127:80" pos:end="127:80"><literal type="number" pos:start="127:80" pos:end="127:80">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="129:13" pos:end="131:62"><if pos:start="129:13" pos:end="131:62">if<condition pos:start="129:15" pos:end="129:25">(<expr pos:start="129:16" pos:end="129:24"><name pos:start="129:16" pos:end="129:24"><name pos:start="129:16" pos:end="129:16">s</name><operator pos:start="129:17" pos:end="129:18">-&gt;</operator><name pos:start="129:19" pos:end="129:24">dquant</name></name></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:62"><block_content pos:start="131:17" pos:end="131:62">

                <expr_stmt pos:start="131:17" pos:end="131:62"><expr pos:start="131:17" pos:end="131:61"><call pos:start="131:17" pos:end="131:61"><name pos:start="131:17" pos:end="131:24">put_bits</name><argument_list pos:start="131:25" pos:end="131:61">(<argument pos:start="131:26" pos:end="131:31"><expr pos:start="131:26" pos:end="131:31"><operator pos:start="131:26" pos:end="131:26">&amp;</operator><name pos:start="131:27" pos:end="131:31"><name pos:start="131:27" pos:end="131:27">s</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:31">pb</name></name></expr></argument>, <argument pos:start="131:34" pos:end="131:34"><expr pos:start="131:34" pos:end="131:34"><literal type="number" pos:start="131:34" pos:end="131:34">2</literal></expr></argument>, <argument pos:start="131:37" pos:end="131:60"><expr pos:start="131:37" pos:end="131:60"><name pos:start="131:37" pos:end="131:60"><name pos:start="131:37" pos:end="131:47">dquant_code</name><index pos:start="131:48" pos:end="131:60">[<expr pos:start="131:49" pos:end="131:59"><name pos:start="131:49" pos:end="131:57"><name pos:start="131:49" pos:end="131:49">s</name><operator pos:start="131:50" pos:end="131:51">-&gt;</operator><name pos:start="131:52" pos:end="131:57">dquant</name></name><operator pos:start="131:58" pos:end="131:58">+</operator><literal type="number" pos:start="131:59" pos:end="131:59">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="135:13" pos:end="139:13"><if pos:start="135:13" pos:end="139:13">if<condition pos:start="135:15" pos:end="135:33">(<expr pos:start="135:16" pos:end="135:32"><name pos:start="135:16" pos:end="135:32">interleaved_stats</name></expr>)</condition><block pos:start="135:34" pos:end="139:13">{<block_content pos:start="137:17" pos:end="137:48">

                <expr_stmt pos:start="137:17" pos:end="137:48"><expr pos:start="137:17" pos:end="137:47"><name pos:start="137:17" pos:end="137:28"><name pos:start="137:17" pos:end="137:17">s</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:28">misc_bits</name></name><operator pos:start="137:29" pos:end="137:30">+=</operator> <call pos:start="137:32" pos:end="137:47"><name pos:start="137:32" pos:end="137:44">get_bits_diff</name><argument_list pos:start="137:45" pos:end="137:47">(<argument pos:start="137:46" pos:end="137:46"><expr pos:start="137:46" pos:end="137:46"><name pos:start="137:46" pos:end="137:46">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <for pos:start="143:13" pos:end="177:13">for<control pos:start="143:16" pos:end="143:30">(<init pos:start="143:17" pos:end="143:20"><expr pos:start="143:17" pos:end="143:19"><name pos:start="143:17" pos:end="143:17">i</name><operator pos:start="143:18" pos:end="143:18">=</operator><literal type="number" pos:start="143:19" pos:end="143:19">0</literal></expr>;</init> <condition pos:start="143:22" pos:end="143:25"><expr pos:start="143:22" pos:end="143:24"><name pos:start="143:22" pos:end="143:22">i</name><operator pos:start="143:23" pos:end="143:23">&lt;</operator><literal type="number" pos:start="143:24" pos:end="143:24">4</literal></expr>;</condition> <incr pos:start="143:27" pos:end="143:29"><expr pos:start="143:27" pos:end="143:29"><name pos:start="143:27" pos:end="143:27">i</name><operator pos:start="143:28" pos:end="143:29">++</operator></expr></incr>)</control><block pos:start="143:31" pos:end="177:13">{<block_content pos:start="147:17" pos:end="175:17">

                <comment type="block" pos:start="145:17" pos:end="145:45">/* motion vectors: 8x8 mode*/</comment>

                <expr_stmt pos:start="147:17" pos:end="147:63"><expr pos:start="147:17" pos:end="147:62"><call pos:start="147:17" pos:end="147:62"><name pos:start="147:17" pos:end="147:35">ff_h263_pred_motion</name><argument_list pos:start="147:36" pos:end="147:62">(<argument pos:start="147:37" pos:end="147:37"><expr pos:start="147:37" pos:end="147:37"><name pos:start="147:37" pos:end="147:37">s</name></expr></argument>, <argument pos:start="147:40" pos:end="147:40"><expr pos:start="147:40" pos:end="147:40"><name pos:start="147:40" pos:end="147:40">i</name></expr></argument>, <argument pos:start="147:43" pos:end="147:43"><expr pos:start="147:43" pos:end="147:43"><literal type="number" pos:start="147:43" pos:end="147:43">0</literal></expr></argument>, <argument pos:start="147:46" pos:end="147:52"><expr pos:start="147:46" pos:end="147:52"><operator pos:start="147:46" pos:end="147:46">&amp;</operator><name pos:start="147:47" pos:end="147:52">pred_x</name></expr></argument>, <argument pos:start="147:55" pos:end="147:61"><expr pos:start="147:55" pos:end="147:61"><operator pos:start="147:55" pos:end="147:55">&amp;</operator><name pos:start="147:56" pos:end="147:61">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="151:17" pos:end="151:82"><expr pos:start="151:17" pos:end="151:81"><name pos:start="151:17" pos:end="151:24">motion_x</name> <operator pos:start="151:26" pos:end="151:26">=</operator> <name pos:start="151:28" pos:end="151:81"><name pos:start="151:28" pos:end="151:28">s</name><operator pos:start="151:29" pos:end="151:30">-&gt;</operator><name pos:start="151:31" pos:end="151:45">current_picture</name><operator pos:start="151:46" pos:end="151:46">.</operator><name pos:start="151:47" pos:end="151:56">motion_val</name><index pos:start="151:57" pos:end="151:59">[<expr pos:start="151:58" pos:end="151:58"><literal type="number" pos:start="151:58" pos:end="151:58">0</literal></expr>]</index><index pos:start="151:60" pos:end="151:78">[<expr pos:start="151:61" pos:end="151:77"><name pos:start="151:61" pos:end="151:77"><name pos:start="151:61" pos:end="151:61">s</name><operator pos:start="151:62" pos:end="151:63">-&gt;</operator><name pos:start="151:64" pos:end="151:74">block_index</name><index pos:start="151:75" pos:end="151:77">[<expr pos:start="151:76" pos:end="151:76"><name pos:start="151:76" pos:end="151:76">i</name></expr>]</index></name></expr>]</index><index pos:start="151:79" pos:end="151:81">[<expr pos:start="151:80" pos:end="151:80"><literal type="number" pos:start="151:80" pos:end="151:80">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:82"><expr pos:start="153:17" pos:end="153:81"><name pos:start="153:17" pos:end="153:24">motion_y</name> <operator pos:start="153:26" pos:end="153:26">=</operator> <name pos:start="153:28" pos:end="153:81"><name pos:start="153:28" pos:end="153:28">s</name><operator pos:start="153:29" pos:end="153:30">-&gt;</operator><name pos:start="153:31" pos:end="153:45">current_picture</name><operator pos:start="153:46" pos:end="153:46">.</operator><name pos:start="153:47" pos:end="153:56">motion_val</name><index pos:start="153:57" pos:end="153:59">[<expr pos:start="153:58" pos:end="153:58"><literal type="number" pos:start="153:58" pos:end="153:58">0</literal></expr>]</index><index pos:start="153:60" pos:end="153:78">[<expr pos:start="153:61" pos:end="153:77"><name pos:start="153:61" pos:end="153:77"><name pos:start="153:61" pos:end="153:61">s</name><operator pos:start="153:62" pos:end="153:63">-&gt;</operator><name pos:start="153:64" pos:end="153:74">block_index</name><index pos:start="153:75" pos:end="153:77">[<expr pos:start="153:76" pos:end="153:76"><name pos:start="153:76" pos:end="153:76">i</name></expr>]</index></name></expr>]</index><index pos:start="153:79" pos:end="153:81">[<expr pos:start="153:80" pos:end="153:80"><literal type="number" pos:start="153:80" pos:end="153:80">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="155:17" pos:end="175:17"><if pos:start="155:17" pos:end="161:17">if <condition pos:start="155:20" pos:end="155:32">(<expr pos:start="155:21" pos:end="155:31"><operator pos:start="155:21" pos:end="155:21">!</operator><name pos:start="155:22" pos:end="155:31"><name pos:start="155:22" pos:end="155:22">s</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:31">umvplus</name></name></expr>)</condition> <block pos:start="155:34" pos:end="161:17">{<block_content pos:start="157:21" pos:end="159:74">

                    <expr_stmt pos:start="157:21" pos:end="159:74"><expr pos:start="157:21" pos:end="159:73"><call pos:start="157:21" pos:end="159:73"><name pos:start="157:21" pos:end="157:48">ff_h263_encode_motion_vector</name><argument_list pos:start="157:49" pos:end="159:73">(<argument pos:start="157:50" pos:end="157:50"><expr pos:start="157:50" pos:end="157:50"><name pos:start="157:50" pos:end="157:50">s</name></expr></argument>, <argument pos:start="157:53" pos:end="157:69"><expr pos:start="157:53" pos:end="157:69"><name pos:start="157:53" pos:end="157:60">motion_x</name> <operator pos:start="157:62" pos:end="157:62">-</operator> <name pos:start="157:64" pos:end="157:69">pred_x</name></expr></argument>,

                                                    <argument pos:start="159:53" pos:end="159:69"><expr pos:start="159:53" pos:end="159:69"><name pos:start="159:53" pos:end="159:60">motion_y</name> <operator pos:start="159:62" pos:end="159:62">-</operator> <name pos:start="159:64" pos:end="159:69">pred_y</name></expr></argument>, <argument pos:start="159:72" pos:end="159:72"><expr pos:start="159:72" pos:end="159:72"><literal type="number" pos:start="159:72" pos:end="159:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if>

                <else pos:start="163:17" pos:end="175:17">else <block pos:start="163:22" pos:end="175:17">{<block_content pos:start="165:21" pos:end="173:45">

                    <expr_stmt pos:start="165:21" pos:end="165:63"><expr pos:start="165:21" pos:end="165:62"><call pos:start="165:21" pos:end="165:62"><name pos:start="165:21" pos:end="165:40">h263p_encode_umotion</name><argument_list pos:start="165:41" pos:end="165:62">(<argument pos:start="165:42" pos:end="165:42"><expr pos:start="165:42" pos:end="165:42"><name pos:start="165:42" pos:end="165:42">s</name></expr></argument>, <argument pos:start="165:45" pos:end="165:61"><expr pos:start="165:45" pos:end="165:61"><name pos:start="165:45" pos:end="165:52">motion_x</name> <operator pos:start="165:54" pos:end="165:54">-</operator> <name pos:start="165:56" pos:end="165:61">pred_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="167:21" pos:end="167:63"><expr pos:start="167:21" pos:end="167:62"><call pos:start="167:21" pos:end="167:62"><name pos:start="167:21" pos:end="167:40">h263p_encode_umotion</name><argument_list pos:start="167:41" pos:end="167:62">(<argument pos:start="167:42" pos:end="167:42"><expr pos:start="167:42" pos:end="167:42"><name pos:start="167:42" pos:end="167:42">s</name></expr></argument>, <argument pos:start="167:45" pos:end="167:61"><expr pos:start="167:45" pos:end="167:61"><name pos:start="167:45" pos:end="167:52">motion_y</name> <operator pos:start="167:54" pos:end="167:54">-</operator> <name pos:start="167:56" pos:end="167:61">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="169:21" pos:end="173:45"><if pos:start="169:21" pos:end="173:45">if <condition pos:start="169:24" pos:end="169:81">(<expr pos:start="169:25" pos:end="169:80"><operator pos:start="169:25" pos:end="169:25">(</operator><operator pos:start="169:26" pos:end="169:26">(</operator><name pos:start="169:27" pos:end="169:34">motion_x</name> <operator pos:start="169:36" pos:end="169:36">-</operator> <name pos:start="169:38" pos:end="169:43">pred_x</name><operator pos:start="169:44" pos:end="169:44">)</operator> <operator pos:start="169:46" pos:end="169:47">==</operator> <literal type="number" pos:start="169:49" pos:end="169:49">1</literal><operator pos:start="169:50" pos:end="169:50">)</operator> <operator pos:start="169:52" pos:end="169:53">&amp;&amp;</operator> <operator pos:start="169:55" pos:end="169:55">(</operator><operator pos:start="169:56" pos:end="169:56">(</operator><name pos:start="169:57" pos:end="169:64">motion_y</name> <operator pos:start="169:66" pos:end="169:66">-</operator> <name pos:start="169:68" pos:end="169:73">pred_y</name><operator pos:start="169:74" pos:end="169:74">)</operator> <operator pos:start="169:76" pos:end="169:77">==</operator> <literal type="number" pos:start="169:79" pos:end="169:79">1</literal><operator pos:start="169:80" pos:end="169:80">)</operator></expr>)</condition><block type="pseudo" pos:start="173:25" pos:end="173:45"><block_content pos:start="173:25" pos:end="173:45">

                        <comment type="block" pos:start="171:25" pos:end="171:61">/* To prevent Start Code emulation */</comment>

                        <expr_stmt pos:start="173:25" pos:end="173:45"><expr pos:start="173:25" pos:end="173:44"><call pos:start="173:25" pos:end="173:44"><name pos:start="173:25" pos:end="173:32">put_bits</name><argument_list pos:start="173:33" pos:end="173:44">(<argument pos:start="173:34" pos:end="173:39"><expr pos:start="173:34" pos:end="173:39"><operator pos:start="173:34" pos:end="173:34">&amp;</operator><name pos:start="173:35" pos:end="173:39"><name pos:start="173:35" pos:end="173:35">s</name><operator pos:start="173:36" pos:end="173:37">-&gt;</operator><name pos:start="173:38" pos:end="173:39">pb</name></name></expr></argument>,<argument pos:start="173:41" pos:end="173:41"><expr pos:start="173:41" pos:end="173:41"><literal type="number" pos:start="173:41" pos:end="173:41">1</literal></expr></argument>,<argument pos:start="173:43" pos:end="173:43"><expr pos:start="173:43" pos:end="173:43"><literal type="number" pos:start="173:43" pos:end="173:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="183:9" pos:end="187:9"><if pos:start="183:9" pos:end="187:9">if<condition pos:start="183:11" pos:end="183:29">(<expr pos:start="183:12" pos:end="183:28"><name pos:start="183:12" pos:end="183:28">interleaved_stats</name></expr>)</condition><block pos:start="183:30" pos:end="187:9">{<block_content pos:start="185:13" pos:end="185:42">

            <expr_stmt pos:start="185:13" pos:end="185:42"><expr pos:start="185:13" pos:end="185:41"><name pos:start="185:13" pos:end="185:22"><name pos:start="185:13" pos:end="185:13">s</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:22">mv_bits</name></name><operator pos:start="185:23" pos:end="185:24">+=</operator> <call pos:start="185:26" pos:end="185:41"><name pos:start="185:26" pos:end="185:38">get_bits_diff</name><argument_list pos:start="185:39" pos:end="185:41">(<argument pos:start="185:40" pos:end="185:40"><expr pos:start="185:40" pos:end="185:40"><name pos:start="185:40" pos:end="185:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="189:7" pos:end="355:5">else <block pos:start="189:12" pos:end="355:5">{<block_content pos:start="191:9" pos:end="353:9">

        <expr_stmt pos:start="191:9" pos:end="191:28"><expr pos:start="191:9" pos:end="191:27"><call pos:start="191:9" pos:end="191:27"><name pos:start="191:9" pos:end="191:14">assert</name><argument_list pos:start="191:15" pos:end="191:27">(<argument pos:start="191:16" pos:end="191:26"><expr pos:start="191:16" pos:end="191:26"><name pos:start="191:16" pos:end="191:26"><name pos:start="191:16" pos:end="191:16">s</name><operator pos:start="191:17" pos:end="191:18">-&gt;</operator><name pos:start="191:19" pos:end="191:26">mb_intra</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="195:9" pos:end="195:16"><expr pos:start="195:9" pos:end="195:15"><name pos:start="195:9" pos:end="195:11">cbp</name> <operator pos:start="195:13" pos:end="195:13">=</operator> <literal type="number" pos:start="195:15" pos:end="195:15">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="197:9" pos:end="301:9"><if pos:start="197:9" pos:end="289:9">if <condition pos:start="197:12" pos:end="197:24">(<expr pos:start="197:13" pos:end="197:23"><name pos:start="197:13" pos:end="197:23"><name pos:start="197:13" pos:end="197:13">s</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:23">h263_aic</name></name></expr>)</condition> <block pos:start="197:26" pos:end="289:9">{<block_content pos:start="201:13" pos:end="287:13">

            <comment type="block" pos:start="199:13" pos:end="199:28">/* Predict DC */</comment>

            <for pos:start="201:13" pos:end="287:13">for<control pos:start="201:16" pos:end="201:30">(<init pos:start="201:17" pos:end="201:20"><expr pos:start="201:17" pos:end="201:19"><name pos:start="201:17" pos:end="201:17">i</name><operator pos:start="201:18" pos:end="201:18">=</operator><literal type="number" pos:start="201:19" pos:end="201:19">0</literal></expr>;</init> <condition pos:start="201:22" pos:end="201:25"><expr pos:start="201:22" pos:end="201:24"><name pos:start="201:22" pos:end="201:22">i</name><operator pos:start="201:23" pos:end="201:23">&lt;</operator><literal type="number" pos:start="201:24" pos:end="201:24">6</literal></expr>;</condition> <incr pos:start="201:27" pos:end="201:29"><expr pos:start="201:27" pos:end="201:29"><name pos:start="201:27" pos:end="201:27">i</name><operator pos:start="201:28" pos:end="201:29">++</operator></expr></incr>)</control> <block pos:start="201:32" pos:end="287:13">{<block_content pos:start="203:17" pos:end="285:40">

                <decl_stmt pos:start="203:17" pos:end="203:44"><decl pos:start="203:17" pos:end="203:43"><type pos:start="203:17" pos:end="203:23"><name pos:start="203:17" pos:end="203:23">int16_t</name></type> <name pos:start="203:25" pos:end="203:29">level</name> <init pos:start="203:31" pos:end="203:43">= <expr pos:start="203:33" pos:end="203:43"><name pos:start="203:33" pos:end="203:43"><name pos:start="203:33" pos:end="203:37">block</name><index pos:start="203:38" pos:end="203:40">[<expr pos:start="203:39" pos:end="203:39"><name pos:start="203:39" pos:end="203:39">i</name></expr>]</index><index pos:start="203:41" pos:end="203:43">[<expr pos:start="203:42" pos:end="203:42"><literal type="number" pos:start="203:42" pos:end="203:42">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="205:17" pos:end="205:26"><decl pos:start="205:17" pos:end="205:25"><type pos:start="205:17" pos:end="205:19"><name pos:start="205:17" pos:end="205:19">int</name></type> <name pos:start="205:21" pos:end="205:25">scale</name></decl>;</decl_stmt>



                <if_stmt pos:start="209:17" pos:end="211:45"><if pos:start="209:17" pos:end="209:45">if<condition pos:start="209:19" pos:end="209:23">(<expr pos:start="209:20" pos:end="209:22"><name pos:start="209:20" pos:end="209:20">i</name><operator pos:start="209:21" pos:end="209:21">&lt;</operator><literal type="number" pos:start="209:22" pos:end="209:22">4</literal></expr>)</condition><block type="pseudo" pos:start="209:25" pos:end="209:45"><block_content pos:start="209:25" pos:end="209:45"> <expr_stmt pos:start="209:25" pos:end="209:45"><expr pos:start="209:25" pos:end="209:44"><name pos:start="209:25" pos:end="209:29">scale</name><operator pos:start="209:30" pos:end="209:30">=</operator> <name pos:start="209:32" pos:end="209:44"><name pos:start="209:32" pos:end="209:32">s</name><operator pos:start="209:33" pos:end="209:34">-&gt;</operator><name pos:start="209:35" pos:end="209:44">y_dc_scale</name></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="211:17" pos:end="211:45">else<block type="pseudo" pos:start="211:25" pos:end="211:45"><block_content pos:start="211:25" pos:end="211:45">    <expr_stmt pos:start="211:25" pos:end="211:45"><expr pos:start="211:25" pos:end="211:44"><name pos:start="211:25" pos:end="211:29">scale</name><operator pos:start="211:30" pos:end="211:30">=</operator> <name pos:start="211:32" pos:end="211:44"><name pos:start="211:32" pos:end="211:32">s</name><operator pos:start="211:33" pos:end="211:34">-&gt;</operator><name pos:start="211:35" pos:end="211:44">c_dc_scale</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <expr_stmt pos:start="215:17" pos:end="215:60"><expr pos:start="215:17" pos:end="215:59"><name pos:start="215:17" pos:end="215:23">pred_dc</name> <operator pos:start="215:25" pos:end="215:25">=</operator> <call pos:start="215:27" pos:end="215:59"><name pos:start="215:27" pos:end="215:41">ff_h263_pred_dc</name><argument_list pos:start="215:42" pos:end="215:59">(<argument pos:start="215:43" pos:end="215:43"><expr pos:start="215:43" pos:end="215:43"><name pos:start="215:43" pos:end="215:43">s</name></expr></argument>, <argument pos:start="215:46" pos:end="215:46"><expr pos:start="215:46" pos:end="215:46"><name pos:start="215:46" pos:end="215:46">i</name></expr></argument>, <argument pos:start="215:49" pos:end="215:58"><expr pos:start="215:49" pos:end="215:58"><operator pos:start="215:49" pos:end="215:49">&amp;</operator><name pos:start="215:50" pos:end="215:58"><name pos:start="215:50" pos:end="215:55">dc_ptr</name><index pos:start="215:56" pos:end="215:58">[<expr pos:start="215:57" pos:end="215:57"><name pos:start="215:57" pos:end="215:57">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="217:33"><expr pos:start="217:17" pos:end="217:32"><name pos:start="217:17" pos:end="217:21">level</name> <operator pos:start="217:23" pos:end="217:24">-=</operator> <name pos:start="217:26" pos:end="217:32">pred_dc</name></expr>;</expr_stmt>

                <comment type="block" pos:start="219:17" pos:end="219:27">/* Quant */</comment>

                <if_stmt pos:start="221:17" pos:end="227:55"><if pos:start="221:17" pos:end="223:55">if <condition pos:start="221:20" pos:end="221:31">(<expr pos:start="221:21" pos:end="221:30"><name pos:start="221:21" pos:end="221:25">level</name> <operator pos:start="221:27" pos:end="221:28">&gt;=</operator> <literal type="number" pos:start="221:30" pos:end="221:30">0</literal></expr>)</condition><block type="pseudo" pos:start="223:21" pos:end="223:55"><block_content pos:start="223:21" pos:end="223:55">

                    <expr_stmt pos:start="223:21" pos:end="223:55"><expr pos:start="223:21" pos:end="223:54"><name pos:start="223:21" pos:end="223:25">level</name> <operator pos:start="223:27" pos:end="223:27">=</operator> <operator pos:start="223:29" pos:end="223:29">(</operator><name pos:start="223:30" pos:end="223:34">level</name> <operator pos:start="223:36" pos:end="223:36">+</operator> <operator pos:start="223:38" pos:end="223:38">(</operator><name pos:start="223:39" pos:end="223:43">scale</name><operator pos:start="223:44" pos:end="223:45">&gt;&gt;</operator><literal type="number" pos:start="223:46" pos:end="223:46">1</literal><operator pos:start="223:47" pos:end="223:47">)</operator><operator pos:start="223:48" pos:end="223:48">)</operator><operator pos:start="223:49" pos:end="223:49">/</operator><name pos:start="223:50" pos:end="223:54">scale</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="225:17" pos:end="227:55">else<block type="pseudo" pos:start="227:21" pos:end="227:55"><block_content pos:start="227:21" pos:end="227:55">

                    <expr_stmt pos:start="227:21" pos:end="227:55"><expr pos:start="227:21" pos:end="227:54"><name pos:start="227:21" pos:end="227:25">level</name> <operator pos:start="227:27" pos:end="227:27">=</operator> <operator pos:start="227:29" pos:end="227:29">(</operator><name pos:start="227:30" pos:end="227:34">level</name> <operator pos:start="227:36" pos:end="227:36">-</operator> <operator pos:start="227:38" pos:end="227:38">(</operator><name pos:start="227:39" pos:end="227:43">scale</name><operator pos:start="227:44" pos:end="227:45">&gt;&gt;</operator><literal type="number" pos:start="227:46" pos:end="227:46">1</literal><operator pos:start="227:47" pos:end="227:47">)</operator><operator pos:start="227:48" pos:end="227:48">)</operator><operator pos:start="227:49" pos:end="227:49">/</operator><name pos:start="227:50" pos:end="227:54">scale</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <comment type="block" pos:start="231:17" pos:end="231:40">/* AIC can change CBP */</comment>

                <if_stmt pos:start="233:17" pos:end="235:48"><if pos:start="233:17" pos:end="235:48">if <condition pos:start="233:20" pos:end="233:62">(<expr pos:start="233:21" pos:end="233:61"><name pos:start="233:21" pos:end="233:25">level</name> <operator pos:start="233:27" pos:end="233:28">==</operator> <literal type="number" pos:start="233:30" pos:end="233:30">0</literal> <operator pos:start="233:32" pos:end="233:33">&amp;&amp;</operator> <name pos:start="233:35" pos:end="233:56"><name pos:start="233:35" pos:end="233:35">s</name><operator pos:start="233:36" pos:end="233:37">-&gt;</operator><name pos:start="233:38" pos:end="233:53">block_last_index</name><index pos:start="233:54" pos:end="233:56">[<expr pos:start="233:55" pos:end="233:55"><name pos:start="233:55" pos:end="233:55">i</name></expr>]</index></name> <operator pos:start="233:58" pos:end="233:59">==</operator> <literal type="number" pos:start="233:61" pos:end="233:61">0</literal></expr>)</condition><block type="pseudo" pos:start="235:21" pos:end="235:48"><block_content pos:start="235:21" pos:end="235:48">

                    <expr_stmt pos:start="235:21" pos:end="235:48"><expr pos:start="235:21" pos:end="235:47"><name pos:start="235:21" pos:end="235:42"><name pos:start="235:21" pos:end="235:21">s</name><operator pos:start="235:22" pos:end="235:23">-&gt;</operator><name pos:start="235:24" pos:end="235:39">block_last_index</name><index pos:start="235:40" pos:end="235:42">[<expr pos:start="235:41" pos:end="235:41"><name pos:start="235:41" pos:end="235:41">i</name></expr>]</index></name> <operator pos:start="235:44" pos:end="235:44">=</operator> <operator pos:start="235:46" pos:end="235:46">-</operator><literal type="number" pos:start="235:47" pos:end="235:47">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <if_stmt pos:start="239:17" pos:end="249:17"><if pos:start="239:17" pos:end="249:17">if<condition pos:start="239:19" pos:end="239:38">(<expr pos:start="239:20" pos:end="239:37"><operator pos:start="239:20" pos:end="239:20">!</operator><name pos:start="239:21" pos:end="239:37"><name pos:start="239:21" pos:end="239:21">s</name><operator pos:start="239:22" pos:end="239:23">-&gt;</operator><name pos:start="239:24" pos:end="239:37">modified_quant</name></name></expr>)</condition><block pos:start="239:39" pos:end="249:17">{<block_content pos:start="241:21" pos:end="247:36">

                    <if_stmt pos:start="241:21" pos:end="247:36"><if pos:start="241:21" pos:end="243:37">if <condition pos:start="241:24" pos:end="241:37">(<expr pos:start="241:25" pos:end="241:36"><name pos:start="241:25" pos:end="241:29">level</name> <operator pos:start="241:31" pos:end="241:31">&lt;</operator> <operator pos:start="241:33" pos:end="241:33">-</operator><literal type="number" pos:start="241:34" pos:end="241:36">127</literal></expr>)</condition><block type="pseudo" pos:start="243:25" pos:end="243:37"><block_content pos:start="243:25" pos:end="243:37">

                        <expr_stmt pos:start="243:25" pos:end="243:37"><expr pos:start="243:25" pos:end="243:36"><name pos:start="243:25" pos:end="243:29">level</name> <operator pos:start="243:31" pos:end="243:31">=</operator> <operator pos:start="243:33" pos:end="243:33">-</operator><literal type="number" pos:start="243:34" pos:end="243:36">127</literal></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="245:21" pos:end="247:36">else if <condition pos:start="245:29" pos:end="245:41">(<expr pos:start="245:30" pos:end="245:40"><name pos:start="245:30" pos:end="245:34">level</name> <operator pos:start="245:36" pos:end="245:36">&gt;</operator> <literal type="number" pos:start="245:38" pos:end="245:40">127</literal></expr>)</condition><block type="pseudo" pos:start="247:25" pos:end="247:36"><block_content pos:start="247:25" pos:end="247:36">

                        <expr_stmt pos:start="247:25" pos:end="247:36"><expr pos:start="247:25" pos:end="247:35"><name pos:start="247:25" pos:end="247:29">level</name> <operator pos:start="247:31" pos:end="247:31">=</operator> <literal type="number" pos:start="247:33" pos:end="247:35">127</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="253:17" pos:end="253:36"><expr pos:start="253:17" pos:end="253:35"><name pos:start="253:17" pos:end="253:27"><name pos:start="253:17" pos:end="253:21">block</name><index pos:start="253:22" pos:end="253:24">[<expr pos:start="253:23" pos:end="253:23"><name pos:start="253:23" pos:end="253:23">i</name></expr>]</index><index pos:start="253:25" pos:end="253:27">[<expr pos:start="253:26" pos:end="253:26"><literal type="number" pos:start="253:26" pos:end="253:26">0</literal></expr>]</index></name> <operator pos:start="253:29" pos:end="253:29">=</operator> <name pos:start="253:31" pos:end="253:35">level</name></expr>;</expr_stmt>

                <comment type="block" pos:start="255:17" pos:end="255:36">/* Reconstruction */</comment>

                <expr_stmt pos:start="257:17" pos:end="257:55"><expr pos:start="257:17" pos:end="257:54"><name pos:start="257:17" pos:end="257:30"><name pos:start="257:17" pos:end="257:27">rec_intradc</name><index pos:start="257:28" pos:end="257:30">[<expr pos:start="257:29" pos:end="257:29"><name pos:start="257:29" pos:end="257:29">i</name></expr>]</index></name> <operator pos:start="257:32" pos:end="257:32">=</operator> <name pos:start="257:34" pos:end="257:38">scale</name><operator pos:start="257:39" pos:end="257:39">*</operator><name pos:start="257:40" pos:end="257:44">level</name> <operator pos:start="257:46" pos:end="257:46">+</operator> <name pos:start="257:48" pos:end="257:54">pred_dc</name></expr>;</expr_stmt>

                <comment type="block" pos:start="259:17" pos:end="259:28">/* Oddify */</comment>

                <expr_stmt pos:start="261:17" pos:end="261:36"><expr pos:start="261:17" pos:end="261:35"><name pos:start="261:17" pos:end="261:30"><name pos:start="261:17" pos:end="261:27">rec_intradc</name><index pos:start="261:28" pos:end="261:30">[<expr pos:start="261:29" pos:end="261:29"><name pos:start="261:29" pos:end="261:29">i</name></expr>]</index></name> <operator pos:start="261:32" pos:end="261:33">|=</operator> <literal type="number" pos:start="261:35" pos:end="261:35">1</literal></expr>;</expr_stmt>

                <comment type="line" pos:start="263:17" pos:end="263:48">//if ((rec_intradc[i] % 2) == 0)</comment>

                <comment type="line" pos:start="265:17" pos:end="265:39">//    rec_intradc[i]++;</comment>

                <comment type="block" pos:start="267:17" pos:end="267:30">/* Clipping */</comment>

                <if_stmt pos:start="269:17" pos:end="275:42"><if pos:start="269:17" pos:end="271:39">if <condition pos:start="269:20" pos:end="269:39">(<expr pos:start="269:21" pos:end="269:38"><name pos:start="269:21" pos:end="269:34"><name pos:start="269:21" pos:end="269:31">rec_intradc</name><index pos:start="269:32" pos:end="269:34">[<expr pos:start="269:33" pos:end="269:33"><name pos:start="269:33" pos:end="269:33">i</name></expr>]</index></name> <operator pos:start="269:36" pos:end="269:36">&lt;</operator> <literal type="number" pos:start="269:38" pos:end="269:38">0</literal></expr>)</condition><block type="pseudo" pos:start="271:21" pos:end="271:39"><block_content pos:start="271:21" pos:end="271:39">

                    <expr_stmt pos:start="271:21" pos:end="271:39"><expr pos:start="271:21" pos:end="271:38"><name pos:start="271:21" pos:end="271:34"><name pos:start="271:21" pos:end="271:31">rec_intradc</name><index pos:start="271:32" pos:end="271:34">[<expr pos:start="271:33" pos:end="271:33"><name pos:start="271:33" pos:end="271:33">i</name></expr>]</index></name> <operator pos:start="271:36" pos:end="271:36">=</operator> <literal type="number" pos:start="271:38" pos:end="271:38">0</literal></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="273:17" pos:end="275:42">else if <condition pos:start="273:25" pos:end="273:47">(<expr pos:start="273:26" pos:end="273:46"><name pos:start="273:26" pos:end="273:39"><name pos:start="273:26" pos:end="273:36">rec_intradc</name><index pos:start="273:37" pos:end="273:39">[<expr pos:start="273:38" pos:end="273:38"><name pos:start="273:38" pos:end="273:38">i</name></expr>]</index></name> <operator pos:start="273:41" pos:end="273:41">&gt;</operator> <literal type="number" pos:start="273:43" pos:end="273:46">2047</literal></expr>)</condition><block type="pseudo" pos:start="275:21" pos:end="275:42"><block_content pos:start="275:21" pos:end="275:42">

                    <expr_stmt pos:start="275:21" pos:end="275:42"><expr pos:start="275:21" pos:end="275:41"><name pos:start="275:21" pos:end="275:34"><name pos:start="275:21" pos:end="275:31">rec_intradc</name><index pos:start="275:32" pos:end="275:34">[<expr pos:start="275:33" pos:end="275:33"><name pos:start="275:33" pos:end="275:33">i</name></expr>]</index></name> <operator pos:start="275:36" pos:end="275:36">=</operator> <literal type="number" pos:start="275:38" pos:end="275:41">2047</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <comment type="block" pos:start="279:17" pos:end="279:41">/* Update AC/DC tables */</comment>

                <expr_stmt pos:start="281:17" pos:end="281:44"><expr pos:start="281:17" pos:end="281:43"><operator pos:start="281:17" pos:end="281:17">*</operator><name pos:start="281:18" pos:end="281:26"><name pos:start="281:18" pos:end="281:23">dc_ptr</name><index pos:start="281:24" pos:end="281:26">[<expr pos:start="281:25" pos:end="281:25"><name pos:start="281:25" pos:end="281:25">i</name></expr>]</index></name> <operator pos:start="281:28" pos:end="281:28">=</operator> <name pos:start="281:30" pos:end="281:43"><name pos:start="281:30" pos:end="281:40">rec_intradc</name><index pos:start="281:41" pos:end="281:43">[<expr pos:start="281:42" pos:end="281:42"><name pos:start="281:42" pos:end="281:42">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="283:17" pos:end="285:40"><if pos:start="283:17" pos:end="285:40">if <condition pos:start="283:20" pos:end="283:48">(<expr pos:start="283:21" pos:end="283:47"><name pos:start="283:21" pos:end="283:42"><name pos:start="283:21" pos:end="283:21">s</name><operator pos:start="283:22" pos:end="283:23">-&gt;</operator><name pos:start="283:24" pos:end="283:39">block_last_index</name><index pos:start="283:40" pos:end="283:42">[<expr pos:start="283:41" pos:end="283:41"><name pos:start="283:41" pos:end="283:41">i</name></expr>]</index></name> <operator pos:start="283:44" pos:end="283:45">&gt;=</operator> <literal type="number" pos:start="283:47" pos:end="283:47">0</literal></expr>)</condition><block type="pseudo" pos:start="285:21" pos:end="285:40"><block_content pos:start="285:21" pos:end="285:40">

                    <expr_stmt pos:start="285:21" pos:end="285:40"><expr pos:start="285:21" pos:end="285:39"><name pos:start="285:21" pos:end="285:23">cbp</name> <operator pos:start="285:25" pos:end="285:26">|=</operator> <literal type="number" pos:start="285:28" pos:end="285:28">1</literal> <operator pos:start="285:30" pos:end="285:31">&lt;&lt;</operator> <operator pos:start="285:33" pos:end="285:33">(</operator><literal type="number" pos:start="285:34" pos:end="285:36">5</literal> <operator pos:start="285:36" pos:end="285:36">-</operator> <name pos:start="285:38" pos:end="285:38">i</name><operator pos:start="285:39" pos:end="285:39">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if><else pos:start="289:10" pos:end="301:9">else<block pos:start="289:14" pos:end="301:9">{<block_content pos:start="291:13" pos:end="299:13">

            <for pos:start="291:13" pos:end="299:13">for<control pos:start="291:16" pos:end="291:30">(<init pos:start="291:17" pos:end="291:20"><expr pos:start="291:17" pos:end="291:19"><name pos:start="291:17" pos:end="291:17">i</name><operator pos:start="291:18" pos:end="291:18">=</operator><literal type="number" pos:start="291:19" pos:end="291:19">0</literal></expr>;</init> <condition pos:start="291:22" pos:end="291:25"><expr pos:start="291:22" pos:end="291:24"><name pos:start="291:22" pos:end="291:22">i</name><operator pos:start="291:23" pos:end="291:23">&lt;</operator><literal type="number" pos:start="291:24" pos:end="291:24">6</literal></expr>;</condition> <incr pos:start="291:27" pos:end="291:29"><expr pos:start="291:27" pos:end="291:29"><name pos:start="291:27" pos:end="291:27">i</name><operator pos:start="291:28" pos:end="291:29">++</operator></expr></incr>)</control> <block pos:start="291:32" pos:end="299:13">{<block_content pos:start="295:17" pos:end="297:40">

                <comment type="block" pos:start="293:17" pos:end="293:33">/* compute cbp */</comment>

                <if_stmt pos:start="295:17" pos:end="297:40"><if pos:start="295:17" pos:end="297:40">if <condition pos:start="295:20" pos:end="295:48">(<expr pos:start="295:21" pos:end="295:47"><name pos:start="295:21" pos:end="295:42"><name pos:start="295:21" pos:end="295:21">s</name><operator pos:start="295:22" pos:end="295:23">-&gt;</operator><name pos:start="295:24" pos:end="295:39">block_last_index</name><index pos:start="295:40" pos:end="295:42">[<expr pos:start="295:41" pos:end="295:41"><name pos:start="295:41" pos:end="295:41">i</name></expr>]</index></name> <operator pos:start="295:44" pos:end="295:45">&gt;=</operator> <literal type="number" pos:start="295:47" pos:end="295:47">1</literal></expr>)</condition><block type="pseudo" pos:start="297:21" pos:end="297:40"><block_content pos:start="297:21" pos:end="297:40">

                    <expr_stmt pos:start="297:21" pos:end="297:40"><expr pos:start="297:21" pos:end="297:39"><name pos:start="297:21" pos:end="297:23">cbp</name> <operator pos:start="297:25" pos:end="297:26">|=</operator> <literal type="number" pos:start="297:28" pos:end="297:28">1</literal> <operator pos:start="297:30" pos:end="297:31">&lt;&lt;</operator> <operator pos:start="297:33" pos:end="297:33">(</operator><literal type="number" pos:start="297:34" pos:end="297:36">5</literal> <operator pos:start="297:36" pos:end="297:36">-</operator> <name pos:start="297:38" pos:end="297:38">i</name><operator pos:start="297:39" pos:end="297:39">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="305:9" pos:end="305:23"><expr pos:start="305:9" pos:end="305:22"><name pos:start="305:9" pos:end="305:12">cbpc</name> <operator pos:start="305:14" pos:end="305:14">=</operator> <name pos:start="305:16" pos:end="305:18">cbp</name> <operator pos:start="305:20" pos:end="305:20">&amp;</operator> <literal type="number" pos:start="305:22" pos:end="305:22">3</literal></expr>;</expr_stmt>

        <if_stmt pos:start="307:9" pos:end="329:9"><if pos:start="307:9" pos:end="317:9">if <condition pos:start="307:12" pos:end="307:46">(<expr pos:start="307:13" pos:end="307:45"><name pos:start="307:13" pos:end="307:24"><name pos:start="307:13" pos:end="307:13">s</name><operator pos:start="307:14" pos:end="307:15">-&gt;</operator><name pos:start="307:16" pos:end="307:24">pict_type</name></name> <operator pos:start="307:26" pos:end="307:27">==</operator> <name pos:start="307:29" pos:end="307:45">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="307:48" pos:end="317:9">{<block_content pos:start="309:13" pos:end="315:48">

            <if_stmt pos:start="309:13" pos:end="309:34"><if pos:start="309:13" pos:end="309:34">if<condition pos:start="309:15" pos:end="309:25">(<expr pos:start="309:16" pos:end="309:24"><name pos:start="309:16" pos:end="309:24"><name pos:start="309:16" pos:end="309:16">s</name><operator pos:start="309:17" pos:end="309:18">-&gt;</operator><name pos:start="309:19" pos:end="309:24">dquant</name></name></expr>)</condition><block type="pseudo" pos:start="309:27" pos:end="309:34"><block_content pos:start="309:27" pos:end="309:34"> <expr_stmt pos:start="309:27" pos:end="309:34"><expr pos:start="309:27" pos:end="309:33"><name pos:start="309:27" pos:end="309:30">cbpc</name><operator pos:start="309:31" pos:end="309:32">+=</operator><literal type="number" pos:start="309:33" pos:end="309:33">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="311:13" pos:end="315:48"><expr pos:start="311:13" pos:end="315:47"><call pos:start="311:13" pos:end="315:47"><name pos:start="311:13" pos:end="311:20">put_bits</name><argument_list pos:start="311:21" pos:end="315:47">(<argument pos:start="311:22" pos:end="311:27"><expr pos:start="311:22" pos:end="311:27"><operator pos:start="311:22" pos:end="311:22">&amp;</operator><name pos:start="311:23" pos:end="311:27"><name pos:start="311:23" pos:end="311:23">s</name><operator pos:start="311:24" pos:end="311:25">-&gt;</operator><name pos:start="311:26" pos:end="311:27">pb</name></name></expr></argument>,

                <argument pos:start="313:17" pos:end="313:46"><expr pos:start="313:17" pos:end="313:46"><name pos:start="313:17" pos:end="313:46"><name pos:start="313:17" pos:end="313:40">ff_h263_intra_MCBPC_bits</name><index pos:start="313:41" pos:end="313:46">[<expr pos:start="313:42" pos:end="313:45"><name pos:start="313:42" pos:end="313:45">cbpc</name></expr>]</index></name></expr></argument>,

                <argument pos:start="315:17" pos:end="315:46"><expr pos:start="315:17" pos:end="315:46"><name pos:start="315:17" pos:end="315:46"><name pos:start="315:17" pos:end="315:40">ff_h263_intra_MCBPC_code</name><index pos:start="315:41" pos:end="315:46">[<expr pos:start="315:42" pos:end="315:45"><name pos:start="315:42" pos:end="315:45">cbpc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="317:11" pos:end="329:9">else <block pos:start="317:16" pos:end="329:9">{<block_content pos:start="319:13" pos:end="327:52">

            <if_stmt pos:start="319:13" pos:end="319:34"><if pos:start="319:13" pos:end="319:34">if<condition pos:start="319:15" pos:end="319:25">(<expr pos:start="319:16" pos:end="319:24"><name pos:start="319:16" pos:end="319:24"><name pos:start="319:16" pos:end="319:16">s</name><operator pos:start="319:17" pos:end="319:18">-&gt;</operator><name pos:start="319:19" pos:end="319:24">dquant</name></name></expr>)</condition><block type="pseudo" pos:start="319:27" pos:end="319:34"><block_content pos:start="319:27" pos:end="319:34"> <expr_stmt pos:start="319:27" pos:end="319:34"><expr pos:start="319:27" pos:end="319:33"><name pos:start="319:27" pos:end="319:30">cbpc</name><operator pos:start="319:31" pos:end="319:32">+=</operator><literal type="number" pos:start="319:33" pos:end="319:33">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:35"><expr pos:start="321:13" pos:end="321:34"><call pos:start="321:13" pos:end="321:34"><name pos:start="321:13" pos:end="321:20">put_bits</name><argument_list pos:start="321:21" pos:end="321:34">(<argument pos:start="321:22" pos:end="321:27"><expr pos:start="321:22" pos:end="321:27"><operator pos:start="321:22" pos:end="321:22">&amp;</operator><name pos:start="321:23" pos:end="321:27"><name pos:start="321:23" pos:end="321:23">s</name><operator pos:start="321:24" pos:end="321:25">-&gt;</operator><name pos:start="321:26" pos:end="321:27">pb</name></name></expr></argument>, <argument pos:start="321:30" pos:end="321:30"><expr pos:start="321:30" pos:end="321:30"><literal type="number" pos:start="321:30" pos:end="321:30">1</literal></expr></argument>, <argument pos:start="321:33" pos:end="321:33"><expr pos:start="321:33" pos:end="321:33"><literal type="number" pos:start="321:33" pos:end="321:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="321:41" pos:end="321:54">/* mb coded */</comment>

            <expr_stmt pos:start="323:13" pos:end="327:52"><expr pos:start="323:13" pos:end="327:51"><call pos:start="323:13" pos:end="327:51"><name pos:start="323:13" pos:end="323:20">put_bits</name><argument_list pos:start="323:21" pos:end="327:51">(<argument pos:start="323:22" pos:end="323:27"><expr pos:start="323:22" pos:end="323:27"><operator pos:start="323:22" pos:end="323:22">&amp;</operator><name pos:start="323:23" pos:end="323:27"><name pos:start="323:23" pos:end="323:23">s</name><operator pos:start="323:24" pos:end="323:25">-&gt;</operator><name pos:start="323:26" pos:end="323:27">pb</name></name></expr></argument>,

                <argument pos:start="325:17" pos:end="325:50"><expr pos:start="325:17" pos:end="325:50"><name pos:start="325:17" pos:end="325:50"><name pos:start="325:17" pos:end="325:40">ff_h263_inter_MCBPC_bits</name><index pos:start="325:41" pos:end="325:50">[<expr pos:start="325:42" pos:end="325:49"><name pos:start="325:42" pos:end="325:45">cbpc</name> <operator pos:start="325:47" pos:end="325:47">+</operator> <literal type="number" pos:start="325:49" pos:end="325:49">4</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="327:17" pos:end="327:50"><expr pos:start="327:17" pos:end="327:50"><name pos:start="327:17" pos:end="327:50"><name pos:start="327:17" pos:end="327:40">ff_h263_inter_MCBPC_code</name><index pos:start="327:41" pos:end="327:50">[<expr pos:start="327:42" pos:end="327:49"><name pos:start="327:42" pos:end="327:45">cbpc</name> <operator pos:start="327:47" pos:end="327:47">+</operator> <literal type="number" pos:start="327:49" pos:end="327:49">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="331:9" pos:end="337:9"><if pos:start="331:9" pos:end="337:9">if <condition pos:start="331:12" pos:end="331:24">(<expr pos:start="331:13" pos:end="331:23"><name pos:start="331:13" pos:end="331:23"><name pos:start="331:13" pos:end="331:13">s</name><operator pos:start="331:14" pos:end="331:15">-&gt;</operator><name pos:start="331:16" pos:end="331:23">h263_aic</name></name></expr>)</condition> <block pos:start="331:26" pos:end="337:9">{<block_content pos:start="335:13" pos:end="335:35">

            <comment type="block" pos:start="333:13" pos:end="333:68">/* XXX: currently, we do not try to use ac prediction */</comment>

            <expr_stmt pos:start="335:13" pos:end="335:35"><expr pos:start="335:13" pos:end="335:34"><call pos:start="335:13" pos:end="335:34"><name pos:start="335:13" pos:end="335:20">put_bits</name><argument_list pos:start="335:21" pos:end="335:34">(<argument pos:start="335:22" pos:end="335:27"><expr pos:start="335:22" pos:end="335:27"><operator pos:start="335:22" pos:end="335:22">&amp;</operator><name pos:start="335:23" pos:end="335:27"><name pos:start="335:23" pos:end="335:23">s</name><operator pos:start="335:24" pos:end="335:25">-&gt;</operator><name pos:start="335:26" pos:end="335:27">pb</name></name></expr></argument>, <argument pos:start="335:30" pos:end="335:30"><expr pos:start="335:30" pos:end="335:30"><literal type="number" pos:start="335:30" pos:end="335:30">1</literal></expr></argument>, <argument pos:start="335:33" pos:end="335:33"><expr pos:start="335:33" pos:end="335:33"><literal type="number" pos:start="335:33" pos:end="335:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="335:41" pos:end="335:62">/* no AC prediction */</comment>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="339:9" pos:end="339:24"><expr pos:start="339:9" pos:end="339:23"><name pos:start="339:9" pos:end="339:12">cbpy</name> <operator pos:start="339:14" pos:end="339:14">=</operator> <name pos:start="339:16" pos:end="339:18">cbp</name> <operator pos:start="339:20" pos:end="339:21">&gt;&gt;</operator> <literal type="number" pos:start="339:23" pos:end="339:23">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="341:9" pos:end="341:79"><expr pos:start="341:9" pos:end="341:78"><call pos:start="341:9" pos:end="341:78"><name pos:start="341:9" pos:end="341:16">put_bits</name><argument_list pos:start="341:17" pos:end="341:78">(<argument pos:start="341:18" pos:end="341:23"><expr pos:start="341:18" pos:end="341:23"><operator pos:start="341:18" pos:end="341:18">&amp;</operator><name pos:start="341:19" pos:end="341:23"><name pos:start="341:19" pos:end="341:19">s</name><operator pos:start="341:20" pos:end="341:21">-&gt;</operator><name pos:start="341:22" pos:end="341:23">pb</name></name></expr></argument>, <argument pos:start="341:26" pos:end="341:50"><expr pos:start="341:26" pos:end="341:50"><name pos:start="341:26" pos:end="341:50"><name pos:start="341:26" pos:end="341:41">ff_h263_cbpy_tab</name><index pos:start="341:42" pos:end="341:47">[<expr pos:start="341:43" pos:end="341:46"><name pos:start="341:43" pos:end="341:46">cbpy</name></expr>]</index><index pos:start="341:48" pos:end="341:50">[<expr pos:start="341:49" pos:end="341:49"><literal type="number" pos:start="341:49" pos:end="341:49">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="341:53" pos:end="341:77"><expr pos:start="341:53" pos:end="341:77"><name pos:start="341:53" pos:end="341:77"><name pos:start="341:53" pos:end="341:68">ff_h263_cbpy_tab</name><index pos:start="341:69" pos:end="341:74">[<expr pos:start="341:70" pos:end="341:73"><name pos:start="341:70" pos:end="341:73">cbpy</name></expr>]</index><index pos:start="341:75" pos:end="341:77">[<expr pos:start="341:76" pos:end="341:76"><literal type="number" pos:start="341:76" pos:end="341:76">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="343:9" pos:end="345:58"><if pos:start="343:9" pos:end="345:58">if<condition pos:start="343:11" pos:end="343:21">(<expr pos:start="343:12" pos:end="343:20"><name pos:start="343:12" pos:end="343:20"><name pos:start="343:12" pos:end="343:12">s</name><operator pos:start="343:13" pos:end="343:14">-&gt;</operator><name pos:start="343:15" pos:end="343:20">dquant</name></name></expr>)</condition><block type="pseudo" pos:start="345:13" pos:end="345:58"><block_content pos:start="345:13" pos:end="345:58">

            <expr_stmt pos:start="345:13" pos:end="345:58"><expr pos:start="345:13" pos:end="345:57"><call pos:start="345:13" pos:end="345:57"><name pos:start="345:13" pos:end="345:20">put_bits</name><argument_list pos:start="345:21" pos:end="345:57">(<argument pos:start="345:22" pos:end="345:27"><expr pos:start="345:22" pos:end="345:27"><operator pos:start="345:22" pos:end="345:22">&amp;</operator><name pos:start="345:23" pos:end="345:27"><name pos:start="345:23" pos:end="345:23">s</name><operator pos:start="345:24" pos:end="345:25">-&gt;</operator><name pos:start="345:26" pos:end="345:27">pb</name></name></expr></argument>, <argument pos:start="345:30" pos:end="345:30"><expr pos:start="345:30" pos:end="345:30"><literal type="number" pos:start="345:30" pos:end="345:30">2</literal></expr></argument>, <argument pos:start="345:33" pos:end="345:56"><expr pos:start="345:33" pos:end="345:56"><name pos:start="345:33" pos:end="345:56"><name pos:start="345:33" pos:end="345:43">dquant_code</name><index pos:start="345:44" pos:end="345:56">[<expr pos:start="345:45" pos:end="345:55"><name pos:start="345:45" pos:end="345:53"><name pos:start="345:45" pos:end="345:45">s</name><operator pos:start="345:46" pos:end="345:47">-&gt;</operator><name pos:start="345:48" pos:end="345:53">dquant</name></name><operator pos:start="345:54" pos:end="345:54">+</operator><literal type="number" pos:start="345:55" pos:end="345:55">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="349:9" pos:end="353:9"><if pos:start="349:9" pos:end="353:9">if<condition pos:start="349:11" pos:end="349:29">(<expr pos:start="349:12" pos:end="349:28"><name pos:start="349:12" pos:end="349:28">interleaved_stats</name></expr>)</condition><block pos:start="349:30" pos:end="353:9">{<block_content pos:start="351:13" pos:end="351:44">

            <expr_stmt pos:start="351:13" pos:end="351:44"><expr pos:start="351:13" pos:end="351:43"><name pos:start="351:13" pos:end="351:24"><name pos:start="351:13" pos:end="351:13">s</name><operator pos:start="351:14" pos:end="351:15">-&gt;</operator><name pos:start="351:16" pos:end="351:24">misc_bits</name></name><operator pos:start="351:25" pos:end="351:26">+=</operator> <call pos:start="351:28" pos:end="351:43"><name pos:start="351:28" pos:end="351:40">get_bits_diff</name><argument_list pos:start="351:41" pos:end="351:43">(<argument pos:start="351:42" pos:end="351:42"><expr pos:start="351:42" pos:end="351:42"><name pos:start="351:42" pos:end="351:42">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="359:5" pos:end="377:5">for<control pos:start="359:8" pos:end="359:22">(<init pos:start="359:9" pos:end="359:12"><expr pos:start="359:9" pos:end="359:11"><name pos:start="359:9" pos:end="359:9">i</name><operator pos:start="359:10" pos:end="359:10">=</operator><literal type="number" pos:start="359:11" pos:end="359:11">0</literal></expr>;</init> <condition pos:start="359:14" pos:end="359:17"><expr pos:start="359:14" pos:end="359:16"><name pos:start="359:14" pos:end="359:14">i</name><operator pos:start="359:15" pos:end="359:15">&lt;</operator><literal type="number" pos:start="359:16" pos:end="359:16">6</literal></expr>;</condition> <incr pos:start="359:19" pos:end="359:21"><expr pos:start="359:19" pos:end="359:21"><name pos:start="359:19" pos:end="359:19">i</name><operator pos:start="359:20" pos:end="359:21">++</operator></expr></incr>)</control> <block pos:start="359:24" pos:end="377:5">{<block_content pos:start="363:9" pos:end="375:9">

        <comment type="block" pos:start="361:9" pos:end="361:31">/* encode each block */</comment>

        <expr_stmt pos:start="363:9" pos:end="363:42"><expr pos:start="363:9" pos:end="363:41"><call pos:start="363:9" pos:end="363:41"><name pos:start="363:9" pos:end="363:25">h263_encode_block</name><argument_list pos:start="363:26" pos:end="363:41">(<argument pos:start="363:27" pos:end="363:27"><expr pos:start="363:27" pos:end="363:27"><name pos:start="363:27" pos:end="363:27">s</name></expr></argument>, <argument pos:start="363:30" pos:end="363:37"><expr pos:start="363:30" pos:end="363:37"><name pos:start="363:30" pos:end="363:37"><name pos:start="363:30" pos:end="363:34">block</name><index pos:start="363:35" pos:end="363:37">[<expr pos:start="363:36" pos:end="363:36"><name pos:start="363:36" pos:end="363:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="363:40" pos:end="363:40"><expr pos:start="363:40" pos:end="363:40"><name pos:start="363:40" pos:end="363:40">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="367:9" pos:end="367:41">/* Update INTRADC for decoding */</comment>

        <if_stmt pos:start="369:9" pos:end="375:9"><if pos:start="369:9" pos:end="375:9">if <condition pos:start="369:12" pos:end="369:39">(<expr pos:start="369:13" pos:end="369:38"><name pos:start="369:13" pos:end="369:23"><name pos:start="369:13" pos:end="369:13">s</name><operator pos:start="369:14" pos:end="369:15">-&gt;</operator><name pos:start="369:16" pos:end="369:23">h263_aic</name></name> <operator pos:start="369:25" pos:end="369:26">&amp;&amp;</operator> <name pos:start="369:28" pos:end="369:38"><name pos:start="369:28" pos:end="369:28">s</name><operator pos:start="369:29" pos:end="369:30">-&gt;</operator><name pos:start="369:31" pos:end="369:38">mb_intra</name></name></expr>)</condition> <block pos:start="369:41" pos:end="375:9">{<block_content pos:start="371:13" pos:end="371:41">

            <expr_stmt pos:start="371:13" pos:end="371:41"><expr pos:start="371:13" pos:end="371:40"><name pos:start="371:13" pos:end="371:23"><name pos:start="371:13" pos:end="371:17">block</name><index pos:start="371:18" pos:end="371:20">[<expr pos:start="371:19" pos:end="371:19"><name pos:start="371:19" pos:end="371:19">i</name></expr>]</index><index pos:start="371:21" pos:end="371:23">[<expr pos:start="371:22" pos:end="371:22"><literal type="number" pos:start="371:22" pos:end="371:22">0</literal></expr>]</index></name> <operator pos:start="371:25" pos:end="371:25">=</operator> <name pos:start="371:27" pos:end="371:40"><name pos:start="371:27" pos:end="371:37">rec_intradc</name><index pos:start="371:38" pos:end="371:40">[<expr pos:start="371:39" pos:end="371:39"><name pos:start="371:39" pos:end="371:39">i</name></expr>]</index></name></expr>;</expr_stmt>



        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="381:5" pos:end="397:5"><if pos:start="381:5" pos:end="397:5">if<condition pos:start="381:7" pos:end="381:25">(<expr pos:start="381:8" pos:end="381:24"><name pos:start="381:8" pos:end="381:24">interleaved_stats</name></expr>)</condition><block pos:start="381:26" pos:end="397:5">{<block_content pos:start="383:9" pos:end="395:9">

        <if_stmt pos:start="383:9" pos:end="395:9"><if pos:start="383:9" pos:end="389:9">if <condition pos:start="383:12" pos:end="383:25">(<expr pos:start="383:13" pos:end="383:24"><operator pos:start="383:13" pos:end="383:13">!</operator><name pos:start="383:14" pos:end="383:24"><name pos:start="383:14" pos:end="383:14">s</name><operator pos:start="383:15" pos:end="383:16">-&gt;</operator><name pos:start="383:17" pos:end="383:24">mb_intra</name></name></expr>)</condition> <block pos:start="383:27" pos:end="389:9">{<block_content pos:start="385:13" pos:end="387:25">

            <expr_stmt pos:start="385:13" pos:end="385:45"><expr pos:start="385:13" pos:end="385:44"><name pos:start="385:13" pos:end="385:25"><name pos:start="385:13" pos:end="385:13">s</name><operator pos:start="385:14" pos:end="385:15">-&gt;</operator><name pos:start="385:16" pos:end="385:25">p_tex_bits</name></name><operator pos:start="385:26" pos:end="385:27">+=</operator> <call pos:start="385:29" pos:end="385:44"><name pos:start="385:29" pos:end="385:41">get_bits_diff</name><argument_list pos:start="385:42" pos:end="385:44">(<argument pos:start="385:43" pos:end="385:43"><expr pos:start="385:43" pos:end="385:43"><name pos:start="385:43" pos:end="385:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="387:13" pos:end="387:25"><expr pos:start="387:13" pos:end="387:24"><name pos:start="387:13" pos:end="387:22"><name pos:start="387:13" pos:end="387:13">s</name><operator pos:start="387:14" pos:end="387:15">-&gt;</operator><name pos:start="387:16" pos:end="387:22">f_count</name></name><operator pos:start="387:23" pos:end="387:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="389:10" pos:end="395:9">else<block pos:start="389:14" pos:end="395:9">{<block_content pos:start="391:13" pos:end="393:25">

            <expr_stmt pos:start="391:13" pos:end="391:45"><expr pos:start="391:13" pos:end="391:44"><name pos:start="391:13" pos:end="391:25"><name pos:start="391:13" pos:end="391:13">s</name><operator pos:start="391:14" pos:end="391:15">-&gt;</operator><name pos:start="391:16" pos:end="391:25">i_tex_bits</name></name><operator pos:start="391:26" pos:end="391:27">+=</operator> <call pos:start="391:29" pos:end="391:44"><name pos:start="391:29" pos:end="391:41">get_bits_diff</name><argument_list pos:start="391:42" pos:end="391:44">(<argument pos:start="391:43" pos:end="391:43"><expr pos:start="391:43" pos:end="391:43"><name pos:start="391:43" pos:end="391:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="393:13" pos:end="393:25"><expr pos:start="393:13" pos:end="393:24"><name pos:start="393:13" pos:end="393:22"><name pos:start="393:13" pos:end="393:13">s</name><operator pos:start="393:14" pos:end="393:15">-&gt;</operator><name pos:start="393:16" pos:end="393:22">i_count</name></name><operator pos:start="393:23" pos:end="393:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
