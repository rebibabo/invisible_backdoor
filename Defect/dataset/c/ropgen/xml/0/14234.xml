<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14234.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">vdi_co_read</name><parameter_list pos:start="1:23" pos:end="3:57">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:39">BlockDriverState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">bs</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:26"><decl pos:start="3:9" pos:end="3:26"><type pos:start="3:9" pos:end="3:26"><name pos:start="3:9" pos:end="3:15">int64_t</name></type> <name pos:start="3:17" pos:end="3:26">sector_num</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:35">uint8_t</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">buf</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:56">nb_sectors</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:15">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">BDRVVdiState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:32">= <expr pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:24">bs</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:23">bmap_entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:24">block_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:28">sector_in_block</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:22">n_sectors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><call pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:10">logout</name><argument_list pos:start="21:11" pos:end="21:16">(<argument pos:start="21:12" pos:end="21:15"><expr pos:start="21:12" pos:end="21:15"><literal type="string" pos:start="21:12" pos:end="21:15">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="25:1" pos:end="25:8"><name pos:start="25:1" pos:end="25:7">restart</name>:</label>

    <expr_stmt pos:start="27:5" pos:end="27:48"><expr pos:start="27:5" pos:end="27:47"><name pos:start="27:5" pos:end="27:15">block_index</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:28">sector_num</name> <operator pos:start="27:30" pos:end="27:30">/</operator> <name pos:start="27:32" pos:end="27:47"><name pos:start="27:32" pos:end="27:32">s</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:47">block_sectors</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:52"><expr pos:start="29:5" pos:end="29:51"><name pos:start="29:5" pos:end="29:19">sector_in_block</name> <operator pos:start="29:21" pos:end="29:21">=</operator> <name pos:start="29:23" pos:end="29:32">sector_num</name> <operator pos:start="29:34" pos:end="29:34">%</operator> <name pos:start="29:36" pos:end="29:51"><name pos:start="29:36" pos:end="29:36">s</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:51">block_sectors</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:51"><expr pos:start="31:5" pos:end="31:50"><name pos:start="31:5" pos:end="31:13">n_sectors</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:32"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:32">block_sectors</name></name> <operator pos:start="31:34" pos:end="31:34">-</operator> <name pos:start="31:36" pos:end="31:50">sector_in_block</name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:31">(<expr pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:17">n_sectors</name> <operator pos:start="33:19" pos:end="33:19">&gt;</operator> <name pos:start="33:21" pos:end="33:30">nb_sectors</name></expr>)</condition> <block pos:start="33:33" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:31">

        <expr_stmt pos:start="35:9" pos:end="35:31"><expr pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:17">n_sectors</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:30">nb_sectors</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:34"><expr pos:start="41:5" pos:end="43:33"><call pos:start="41:5" pos:end="43:33"><name pos:start="41:5" pos:end="41:10">logout</name><argument_list pos:start="41:11" pos:end="43:33">(<argument pos:start="41:12" pos:end="41:66"><expr pos:start="41:12" pos:end="41:66"><literal type="string" pos:start="41:12" pos:end="41:54">"will read %u sectors starting at sector %"</literal> <name pos:start="41:56" pos:end="41:61">PRIu64</name> <literal type="string" pos:start="41:63" pos:end="41:66">"\n"</literal></expr></argument>,

           <argument pos:start="43:12" pos:end="43:20"><expr pos:start="43:12" pos:end="43:20"><name pos:start="43:12" pos:end="43:20">n_sectors</name></expr></argument>, <argument pos:start="43:23" pos:end="43:32"><expr pos:start="43:23" pos:end="43:32"><name pos:start="43:23" pos:end="43:32">sector_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:34">/* prepare next AIO request */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:51"><expr pos:start="49:5" pos:end="49:50"><name pos:start="49:5" pos:end="49:14">bmap_entry</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <call pos:start="49:18" pos:end="49:50"><name pos:start="49:18" pos:end="49:28">le32_to_cpu</name><argument_list pos:start="49:29" pos:end="49:50">(<argument pos:start="49:30" pos:end="49:49"><expr pos:start="49:30" pos:end="49:49"><name pos:start="49:30" pos:end="49:49"><name pos:start="49:30" pos:end="49:30">s</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:36">bmap</name><index pos:start="49:37" pos:end="49:49">[<expr pos:start="49:38" pos:end="49:48"><name pos:start="49:38" pos:end="49:48">block_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="69:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:38">(<expr pos:start="51:9" pos:end="51:37"><operator pos:start="51:9" pos:end="51:9">!</operator><call pos:start="51:10" pos:end="51:37"><name pos:start="51:10" pos:end="51:25">VDI_IS_ALLOCATED</name><argument_list pos:start="51:26" pos:end="51:37">(<argument pos:start="51:27" pos:end="51:36"><expr pos:start="51:27" pos:end="51:36"><name pos:start="51:27" pos:end="51:36">bmap_entry</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:40" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:16">

        <comment type="block" pos:start="53:9" pos:end="53:65">/* Block not allocated, return zeros, no need to wait. */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:48"><expr pos:start="55:9" pos:end="55:47"><call pos:start="55:9" pos:end="55:47"><name pos:start="55:9" pos:end="55:14">memset</name><argument_list pos:start="55:15" pos:end="55:47">(<argument pos:start="55:16" pos:end="55:18"><expr pos:start="55:16" pos:end="55:18"><name pos:start="55:16" pos:end="55:18">buf</name></expr></argument>, <argument pos:start="55:21" pos:end="55:21"><expr pos:start="55:21" pos:end="55:21"><literal type="number" pos:start="55:21" pos:end="55:21">0</literal></expr></argument>, <argument pos:start="55:24" pos:end="55:46"><expr pos:start="55:24" pos:end="55:46"><name pos:start="55:24" pos:end="55:32">n_sectors</name> <operator pos:start="55:34" pos:end="55:34">*</operator> <name pos:start="55:36" pos:end="55:46">SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:16"><expr pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="69:5">else <block pos:start="59:12" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:58">

        <decl_stmt pos:start="61:9" pos:end="65:42"><decl pos:start="61:9" pos:end="65:41"><type pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:16">uint64_t</name></type> <name pos:start="61:18" pos:end="61:23">offset</name> <init pos:start="61:25" pos:end="65:41">= <expr pos:start="61:27" pos:end="65:41"><name pos:start="61:27" pos:end="61:47"><name pos:start="61:27" pos:end="61:27">s</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:35">header</name><operator pos:start="61:36" pos:end="61:36">.</operator><name pos:start="61:37" pos:end="61:47">offset_data</name></name> <operator pos:start="61:49" pos:end="61:49">/</operator> <name pos:start="61:51" pos:end="61:61">SECTOR_SIZE</name> <operator pos:start="61:63" pos:end="61:63">+</operator>

                          <operator pos:start="63:27" pos:end="63:27">(</operator><name pos:start="63:28" pos:end="63:35">uint64_t</name><operator pos:start="63:36" pos:end="63:36">)</operator><name pos:start="63:37" pos:end="63:46">bmap_entry</name> <operator pos:start="63:48" pos:end="63:48">*</operator> <name pos:start="63:50" pos:end="63:65"><name pos:start="63:50" pos:end="63:50">s</name><operator pos:start="63:51" pos:end="63:52">-&gt;</operator><name pos:start="63:53" pos:end="63:65">block_sectors</name></name> <operator pos:start="63:67" pos:end="63:67">+</operator>

                          <name pos:start="65:27" pos:end="65:41">sector_in_block</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:58"><expr pos:start="67:9" pos:end="67:57"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:57"><name pos:start="67:15" pos:end="67:23">bdrv_read</name><argument_list pos:start="67:24" pos:end="67:57">(<argument pos:start="67:25" pos:end="67:32"><expr pos:start="67:25" pos:end="67:32"><name pos:start="67:25" pos:end="67:32"><name pos:start="67:25" pos:end="67:26">bs</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:32">file</name></name></expr></argument>, <argument pos:start="67:35" pos:end="67:40"><expr pos:start="67:35" pos:end="67:40"><name pos:start="67:35" pos:end="67:40">offset</name></expr></argument>, <argument pos:start="67:43" pos:end="67:45"><expr pos:start="67:43" pos:end="67:45"><name pos:start="67:43" pos:end="67:45">buf</name></expr></argument>, <argument pos:start="67:48" pos:end="67:56"><expr pos:start="67:48" pos:end="67:56"><name pos:start="67:48" pos:end="67:56">n_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:43"><expr pos:start="71:5" pos:end="71:42"><call pos:start="71:5" pos:end="71:42"><name pos:start="71:5" pos:end="71:10">logout</name><argument_list pos:start="71:11" pos:end="71:42">(<argument pos:start="71:12" pos:end="71:30"><expr pos:start="71:12" pos:end="71:30"><literal type="string" pos:start="71:12" pos:end="71:30">"%u sectors read\n"</literal></expr></argument>, <argument pos:start="71:33" pos:end="71:41"><expr pos:start="71:33" pos:end="71:41"><name pos:start="71:33" pos:end="71:41">n_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:28"><expr pos:start="75:5" pos:end="75:27"><name pos:start="75:5" pos:end="75:14">nb_sectors</name> <operator pos:start="75:16" pos:end="75:17">-=</operator> <name pos:start="75:19" pos:end="75:27">n_sectors</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:28"><expr pos:start="77:5" pos:end="77:27"><name pos:start="77:5" pos:end="77:14">sector_num</name> <operator pos:start="77:16" pos:end="77:17">+=</operator> <name pos:start="77:19" pos:end="77:27">n_sectors</name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:35"><expr pos:start="79:5" pos:end="79:34"><name pos:start="79:5" pos:end="79:7">buf</name> <operator pos:start="79:9" pos:end="79:10">+=</operator> <name pos:start="79:12" pos:end="79:20">n_sectors</name> <operator pos:start="79:22" pos:end="79:22">*</operator> <name pos:start="79:24" pos:end="79:34">SECTOR_SIZE</name></expr>;</expr_stmt>



    <if_stmt pos:start="83:5" pos:end="87:5"><if pos:start="83:5" pos:end="87:5">if <condition pos:start="83:8" pos:end="83:35">(<expr pos:start="83:9" pos:end="83:34"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:14">&gt;=</operator> <literal type="number" pos:start="83:16" pos:end="83:16">0</literal> <operator pos:start="83:18" pos:end="83:19">&amp;&amp;</operator> <name pos:start="83:21" pos:end="83:30">nb_sectors</name> <operator pos:start="83:32" pos:end="83:32">&gt;</operator> <literal type="number" pos:start="83:34" pos:end="83:34">0</literal></expr>)</condition> <block pos:start="83:37" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:21">

        <goto pos:start="85:9" pos:end="85:21">goto <name pos:start="85:14" pos:end="85:20">restart</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="91:5" pos:end="91:15">return <expr pos:start="91:12" pos:end="91:14"><name pos:start="91:12" pos:end="91:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
