<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26712.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:33">pit_load_count</name><parameter_list pos:start="1:34" pos:end="1:62">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:49">PITChannelState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:61"><decl pos:start="1:55" pos:end="1:61"><type pos:start="1:55" pos:end="1:61"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:61">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:5">

    <if_stmt pos:start="5:5" pos:end="7:22"><if pos:start="5:5" pos:end="7:22">if <condition pos:start="5:8" pos:end="5:17">(<expr pos:start="5:9" pos:end="5:16"><name pos:start="5:9" pos:end="5:11">val</name> <operator pos:start="5:13" pos:end="5:14">==</operator> <literal type="number" pos:start="5:16" pos:end="5:16">0</literal></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:22"><block_content pos:start="7:9" pos:end="7:22">

        <expr_stmt pos:start="7:9" pos:end="7:22"><expr pos:start="7:9" pos:end="7:21"><name pos:start="7:9" pos:end="7:11">val</name> <operator pos:start="7:13" pos:end="7:13">=</operator> <literal type="number" pos:start="7:15" pos:end="7:21">0x10000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:41"><expr pos:start="9:5" pos:end="9:40"><name pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:22">count_load_time</name></name> <operator pos:start="9:24" pos:end="9:24">=</operator> <call pos:start="9:26" pos:end="9:40"><name pos:start="9:26" pos:end="9:38">cpu_get_ticks</name><argument_list pos:start="9:39" pos:end="9:40">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:55"><expr pos:start="11:5" pos:end="11:54"><name pos:start="11:5" pos:end="11:33"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:33">count_last_edge_check_time</name></name> <operator pos:start="11:35" pos:end="11:35">=</operator> <name pos:start="11:37" pos:end="11:54"><name pos:start="11:37" pos:end="11:37">s</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:54">count_load_time</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:19"><expr pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:12">count</name></name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:18">val</name></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:60">(<expr pos:start="15:9" pos:end="15:59"><name pos:start="15:9" pos:end="15:9">s</name> <operator pos:start="15:11" pos:end="15:12">==</operator> <operator pos:start="15:14" pos:end="15:14">&amp;</operator><name pos:start="15:15" pos:end="15:29"><name pos:start="15:15" pos:end="15:26">pit_channels</name><index pos:start="15:27" pos:end="15:29">[<expr pos:start="15:28" pos:end="15:28"><literal type="number" pos:start="15:28" pos:end="15:28">0</literal></expr>]</index></name> <operator pos:start="15:31" pos:end="15:32">&amp;&amp;</operator> <name pos:start="15:34" pos:end="15:36">val</name> <operator pos:start="15:38" pos:end="15:39">&lt;=</operator> <name pos:start="15:41" pos:end="15:59">pit_min_timer_count</name></expr>)</condition> <block pos:start="15:62" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:48">

        <expr_stmt pos:start="17:9" pos:end="21:48"><expr pos:start="17:9" pos:end="21:47"><call pos:start="17:9" pos:end="21:47"><name pos:start="17:9" pos:end="17:15">fprintf</name><argument_list pos:start="17:16" pos:end="21:47">(<argument pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">stderr</name></expr></argument>, 

                <argument pos:start="19:17" pos:end="19:220"><expr pos:start="19:17" pos:end="19:220"><literal type="string" pos:start="19:17" pos:end="19:220">"\nWARNING: qemu: on your system, accurate timer emulation is impossible if its frequency is more than %d Hz. If using a 2.5.xx Linux kernel, you must patch asm/param.h to change HZ from 1000 to 100.\n\n"</literal></expr></argument>, 

                <argument pos:start="21:17" pos:end="21:46"><expr pos:start="21:17" pos:end="21:46"><name pos:start="21:17" pos:end="21:24">PIT_FREQ</name> <operator pos:start="21:26" pos:end="21:26">/</operator> <name pos:start="21:28" pos:end="21:46">pit_min_timer_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
