<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15380.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:1">D</name><argument_list pos:start="1:2" pos:end="1:13">(<argument pos:start="1:3" pos:end="1:7">float</argument>, <argument pos:start="1:10" pos:end="1:12">sse</argument>)</argument_list></macro>

<macro pos:start="3:1" pos:end="3:13"><name pos:start="3:1" pos:end="3:1">D</name><argument_list pos:start="3:2" pos:end="3:13">(<argument pos:start="3:3" pos:end="3:7">float</argument>, <argument pos:start="3:10" pos:end="3:12">avx</argument>)</argument_list></macro>

<macro pos:start="5:1" pos:end="5:13"><name pos:start="5:1" pos:end="5:1">D</name><argument_list pos:start="5:2" pos:end="5:13">(<argument pos:start="5:3" pos:end="5:7">int16</argument>, <argument pos:start="5:10" pos:end="5:12">mmx</argument>)</argument_list></macro>

<macro pos:start="7:1" pos:end="7:14"><name pos:start="7:1" pos:end="7:1">D</name><argument_list pos:start="7:2" pos:end="7:14">(<argument pos:start="7:3" pos:end="7:7">int16</argument>, <argument pos:start="7:10" pos:end="7:13">sse2</argument>)</argument_list></macro>



<function pos:start="11:1" pos:end="107:1"><type pos:start="11:1" pos:end="11:12"><name pos:start="11:1" pos:end="11:7">av_cold</name> <name pos:start="11:9" pos:end="11:12">void</name></type> <name pos:start="11:14" pos:end="11:35">swri_rematrix_init_x86</name><parameter_list pos:start="11:36" pos:end="11:57">(<parameter pos:start="11:37" pos:end="11:56"><decl pos:start="11:37" pos:end="11:56"><type pos:start="11:37" pos:end="11:56"><name pos:start="11:37" pos:end="11:53"><name pos:start="11:37" pos:end="11:42">struct</name> <name pos:start="11:44" pos:end="11:53">SwrContext</name></name> <modifier pos:start="11:55" pos:end="11:55">*</modifier></type><name pos:start="11:56" pos:end="11:56">s</name></decl></parameter>)</parameter_list><block pos:start="11:58" pos:end="107:1">{<block_content pos:start="13:5" pos:end="105:5">

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">mm_flags</name> <init pos:start="13:18" pos:end="13:37">= <expr pos:start="13:20" pos:end="13:37"><call pos:start="13:20" pos:end="13:37"><name pos:start="13:20" pos:end="13:35">av_get_cpu_flags</name><argument_list pos:start="13:36" pos:end="13:37">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:68"><decl pos:start="15:5" pos:end="15:67"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">nb_in</name>  <init pos:start="15:16" pos:end="15:67">= <expr pos:start="15:18" pos:end="15:67"><call pos:start="15:18" pos:end="15:67"><name pos:start="15:18" pos:end="15:50">av_get_channel_layout_nb_channels</name><argument_list pos:start="15:51" pos:end="15:67">(<argument pos:start="15:52" pos:end="15:66"><expr pos:start="15:52" pos:end="15:66"><name pos:start="15:52" pos:end="15:66"><name pos:start="15:52" pos:end="15:52">s</name><operator pos:start="15:53" pos:end="15:54">-&gt;</operator><name pos:start="15:55" pos:end="15:66">in_ch_layout</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:69"><decl pos:start="17:5" pos:end="17:68"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">nb_out</name> <init pos:start="17:16" pos:end="17:68">= <expr pos:start="17:18" pos:end="17:68"><call pos:start="17:18" pos:end="17:68"><name pos:start="17:18" pos:end="17:50">av_get_channel_layout_nb_channels</name><argument_list pos:start="17:51" pos:end="17:68">(<argument pos:start="17:52" pos:end="17:67"><expr pos:start="17:52" pos:end="17:67"><name pos:start="17:52" pos:end="17:67"><name pos:start="17:52" pos:end="17:52">s</name><operator pos:start="17:53" pos:end="17:54">-&gt;</operator><name pos:start="17:55" pos:end="17:67">out_ch_layout</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:32"><decl pos:start="19:5" pos:end="19:31"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">num</name>    <init pos:start="19:16" pos:end="19:31">= <expr pos:start="19:18" pos:end="19:31"><name pos:start="19:18" pos:end="19:22">nb_in</name> <operator pos:start="19:24" pos:end="19:24">*</operator> <name pos:start="19:26" pos:end="19:31">nb_out</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>,<decl pos:start="21:11" pos:end="21:11"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:11" pos:end="21:11">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:19">mix_1_1_simd</name></name> <operator pos:start="25:21" pos:end="25:21">=</operator> <name pos:start="25:23" pos:end="25:26">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:19">mix_2_1_simd</name></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <name pos:start="27:23" pos:end="27:26">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="105:5"><if pos:start="31:5" pos:end="79:5">if <condition pos:start="31:8" pos:end="31:44">(<expr pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:17">midbuf</name><operator pos:start="31:18" pos:end="31:18">.</operator><name pos:start="31:19" pos:end="31:21">fmt</name></name> <operator pos:start="31:23" pos:end="31:24">==</operator> <name pos:start="31:26" pos:end="31:43">AV_SAMPLE_FMT_S16P</name></expr>)</condition><block pos:start="31:45" pos:end="79:5">{<block_content pos:start="33:9" pos:end="77:50">

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if<condition pos:start="33:11" pos:end="33:38">(<expr pos:start="33:12" pos:end="33:37"><name pos:start="33:12" pos:end="33:19">mm_flags</name> <operator pos:start="33:21" pos:end="33:21">&amp;</operator> <name pos:start="33:23" pos:end="33:37">AV_CPU_FLAG_MMX</name></expr>)</condition> <block pos:start="33:40" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:53">

            <expr_stmt pos:start="35:13" pos:end="35:53"><expr pos:start="35:13" pos:end="35:52"><name pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:27">mix_1_1_simd</name></name> <operator pos:start="35:29" pos:end="35:29">=</operator> <name pos:start="35:31" pos:end="35:52">ff_mix_1_1_a_int16_mmx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:53"><expr pos:start="37:13" pos:end="37:52"><name pos:start="37:13" pos:end="37:27"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:27">mix_2_1_simd</name></name> <operator pos:start="37:29" pos:end="37:29">=</operator> <name pos:start="37:31" pos:end="37:52">ff_mix_2_1_a_int16_mmx</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if<condition pos:start="41:11" pos:end="41:39">(<expr pos:start="41:12" pos:end="41:38"><name pos:start="41:12" pos:end="41:19">mm_flags</name> <operator pos:start="41:21" pos:end="41:21">&amp;</operator> <name pos:start="41:23" pos:end="41:38">AV_CPU_FLAG_SSE2</name></expr>)</condition> <block pos:start="41:41" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:54">

            <expr_stmt pos:start="43:13" pos:end="43:54"><expr pos:start="43:13" pos:end="43:53"><name pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:27">mix_1_1_simd</name></name> <operator pos:start="43:29" pos:end="43:29">=</operator> <name pos:start="43:31" pos:end="43:53">ff_mix_1_1_a_int16_sse2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:54"><expr pos:start="45:13" pos:end="45:53"><name pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:27">mix_2_1_simd</name></name> <operator pos:start="45:29" pos:end="45:29">=</operator> <name pos:start="45:31" pos:end="45:53">ff_mix_2_1_a_int16_sse2</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:70"><expr pos:start="49:9" pos:end="49:69"><name pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:29">native_simd_matrix</name></name> <operator pos:start="49:31" pos:end="49:31">=</operator> <call pos:start="49:33" pos:end="49:69"><name pos:start="49:33" pos:end="49:42">av_mallocz</name><argument_list pos:start="49:43" pos:end="49:69">(<argument pos:start="49:44" pos:end="49:68"><expr pos:start="49:44" pos:end="49:68"><literal type="number" pos:start="49:44" pos:end="49:44">2</literal> <operator pos:start="49:46" pos:end="49:46">*</operator> <name pos:start="49:48" pos:end="49:50">num</name> <operator pos:start="49:52" pos:end="49:52">*</operator> <sizeof pos:start="49:54" pos:end="49:68">sizeof<argument_list pos:start="49:60" pos:end="49:68">(<argument pos:start="49:61" pos:end="49:67"><expr pos:start="49:61" pos:end="49:67"><name pos:start="49:61" pos:end="49:67">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:64"><expr pos:start="51:9" pos:end="51:63"><name pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:26">native_simd_one</name></name>    <operator pos:start="51:31" pos:end="51:31">=</operator> <call pos:start="51:33" pos:end="51:63"><name pos:start="51:33" pos:end="51:42">av_mallocz</name><argument_list pos:start="51:43" pos:end="51:63">(<argument pos:start="51:44" pos:end="51:62"><expr pos:start="51:44" pos:end="51:62"><literal type="number" pos:start="51:44" pos:end="51:44">2</literal> <operator pos:start="51:46" pos:end="51:46">*</operator> <sizeof pos:start="51:48" pos:end="51:62">sizeof<argument_list pos:start="51:54" pos:end="51:62">(<argument pos:start="51:55" pos:end="51:61"><expr pos:start="51:55" pos:end="51:61"><name pos:start="51:55" pos:end="51:61">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="53:9" pos:end="73:9">for<control pos:start="53:12" pos:end="53:31">(<init pos:start="53:13" pos:end="53:16"><expr pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:13">i</name><operator pos:start="53:14" pos:end="53:14">=</operator><literal type="number" pos:start="53:15" pos:end="53:15">0</literal></expr>;</init> <condition pos:start="53:18" pos:end="53:26"><expr pos:start="53:18" pos:end="53:25"><name pos:start="53:18" pos:end="53:18">i</name><operator pos:start="53:19" pos:end="53:19">&lt;</operator><name pos:start="53:20" pos:end="53:25">nb_out</name></expr>;</condition> <incr pos:start="53:28" pos:end="53:30"><expr pos:start="53:28" pos:end="53:30"><name pos:start="53:28" pos:end="53:28">i</name><operator pos:start="53:29" pos:end="53:30">++</operator></expr></incr>)</control><block pos:start="53:32" pos:end="73:9">{<block_content pos:start="55:13" pos:end="71:13">

            <decl_stmt pos:start="55:13" pos:end="55:23"><decl pos:start="55:13" pos:end="55:22"><type pos:start="55:13" pos:end="55:15"><name pos:start="55:13" pos:end="55:15">int</name></type> <name pos:start="55:17" pos:end="55:18">sh</name> <init pos:start="55:20" pos:end="55:22">= <expr pos:start="55:22" pos:end="55:22"><literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="57:13" pos:end="59:79">for<control pos:start="57:16" pos:end="57:34">(<init pos:start="57:17" pos:end="57:20"><expr pos:start="57:17" pos:end="57:19"><name pos:start="57:17" pos:end="57:17">j</name><operator pos:start="57:18" pos:end="57:18">=</operator><literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>;</init> <condition pos:start="57:22" pos:end="57:29"><expr pos:start="57:22" pos:end="57:28"><name pos:start="57:22" pos:end="57:22">j</name><operator pos:start="57:23" pos:end="57:23">&lt;</operator><name pos:start="57:24" pos:end="57:28">nb_in</name></expr>;</condition> <incr pos:start="57:31" pos:end="57:33"><expr pos:start="57:31" pos:end="57:33"><name pos:start="57:31" pos:end="57:31">j</name><operator pos:start="57:32" pos:end="57:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="59:17" pos:end="59:79"><block_content pos:start="59:17" pos:end="59:79">

                <expr_stmt pos:start="59:17" pos:end="59:79"><expr pos:start="59:17" pos:end="59:78"><name pos:start="59:17" pos:end="59:18">sh</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <call pos:start="59:22" pos:end="59:78"><name pos:start="59:22" pos:end="59:26">FFMAX</name><argument_list pos:start="59:27" pos:end="59:78">(<argument pos:start="59:28" pos:end="59:29"><expr pos:start="59:28" pos:end="59:29"><name pos:start="59:28" pos:end="59:29">sh</name></expr></argument>, <argument pos:start="59:32" pos:end="59:77"><expr pos:start="59:32" pos:end="59:77"><call pos:start="59:32" pos:end="59:77"><name pos:start="59:32" pos:end="59:36">FFABS</name><argument_list pos:start="59:37" pos:end="59:77">(<argument pos:start="59:38" pos:end="59:76"><expr pos:start="59:38" pos:end="59:76"><operator pos:start="59:38" pos:end="59:38">(</operator><operator pos:start="59:39" pos:end="59:39">(</operator><name pos:start="59:40" pos:end="59:42">int</name><operator pos:start="59:43" pos:end="59:43">*</operator><operator pos:start="59:44" pos:end="59:44">)</operator><name pos:start="59:45" pos:end="59:60"><name pos:start="59:45" pos:end="59:45">s</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:60">native_matrix</name></name><operator pos:start="59:61" pos:end="59:61">)</operator><index pos:start="59:62" pos:end="59:76">[<expr pos:start="59:63" pos:end="59:75"><name pos:start="59:63" pos:end="59:63">i</name> <operator pos:start="59:65" pos:end="59:65">*</operator> <name pos:start="59:67" pos:end="59:71">nb_in</name> <operator pos:start="59:73" pos:end="59:73">+</operator> <name pos:start="59:75" pos:end="59:75">j</name></expr>]</index></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="61:13" pos:end="61:44"><expr pos:start="61:13" pos:end="61:43"><name pos:start="61:13" pos:end="61:14">sh</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <call pos:start="61:18" pos:end="61:43"><name pos:start="61:18" pos:end="61:22">FFMAX</name><argument_list pos:start="61:23" pos:end="61:43">(<argument pos:start="61:24" pos:end="61:39"><expr pos:start="61:24" pos:end="61:39"><call pos:start="61:24" pos:end="61:34"><name pos:start="61:24" pos:end="61:30">av_log2</name><argument_list pos:start="61:31" pos:end="61:34">(<argument pos:start="61:32" pos:end="61:33"><expr pos:start="61:32" pos:end="61:33"><name pos:start="61:32" pos:end="61:33">sh</name></expr></argument>)</argument_list></call> <operator pos:start="61:36" pos:end="61:36">-</operator> <literal type="number" pos:start="61:38" pos:end="61:39">14</literal></expr></argument>, <argument pos:start="61:42" pos:end="61:42"><expr pos:start="61:42" pos:end="61:42"><literal type="number" pos:start="61:42" pos:end="61:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="63:13" pos:end="71:13">for<control pos:start="63:16" pos:end="63:34">(<init pos:start="63:17" pos:end="63:20"><expr pos:start="63:17" pos:end="63:19"><name pos:start="63:17" pos:end="63:17">j</name><operator pos:start="63:18" pos:end="63:18">=</operator><literal type="number" pos:start="63:19" pos:end="63:19">0</literal></expr>;</init> <condition pos:start="63:22" pos:end="63:29"><expr pos:start="63:22" pos:end="63:28"><name pos:start="63:22" pos:end="63:22">j</name><operator pos:start="63:23" pos:end="63:23">&lt;</operator><name pos:start="63:24" pos:end="63:28">nb_in</name></expr>;</condition> <incr pos:start="63:31" pos:end="63:33"><expr pos:start="63:31" pos:end="63:33"><name pos:start="63:31" pos:end="63:31">j</name><operator pos:start="63:32" pos:end="63:33">++</operator></expr></incr>)</control> <block pos:start="63:36" pos:end="71:13">{<block_content pos:start="65:17" pos:end="69:83">

                <expr_stmt pos:start="65:17" pos:end="65:81"><expr pos:start="65:17" pos:end="65:80"><operator pos:start="65:17" pos:end="65:17">(</operator><operator pos:start="65:18" pos:end="65:18">(</operator><name pos:start="65:19" pos:end="65:25">int16_t</name><operator pos:start="65:26" pos:end="65:26">*</operator><operator pos:start="65:27" pos:end="65:27">)</operator><name pos:start="65:28" pos:end="65:48"><name pos:start="65:28" pos:end="65:28">s</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:48">native_simd_matrix</name></name><operator pos:start="65:49" pos:end="65:49">)</operator><index pos:start="65:50" pos:end="65:70">[<expr pos:start="65:51" pos:end="65:69"><literal type="number" pos:start="65:51" pos:end="65:51">2</literal><operator pos:start="65:52" pos:end="65:52">*</operator><operator pos:start="65:53" pos:end="65:53">(</operator><name pos:start="65:54" pos:end="65:54">i</name> <operator pos:start="65:56" pos:end="65:56">*</operator> <name pos:start="65:58" pos:end="65:62">nb_in</name> <operator pos:start="65:64" pos:end="65:64">+</operator> <name pos:start="65:66" pos:end="65:66">j</name><operator pos:start="65:67" pos:end="65:67">)</operator><operator pos:start="65:68" pos:end="65:68">+</operator><literal type="number" pos:start="65:69" pos:end="65:69">1</literal></expr>]</index> <operator pos:start="65:72" pos:end="65:72">=</operator> <literal type="number" pos:start="65:74" pos:end="65:77">15</literal> <operator pos:start="65:77" pos:end="65:77">-</operator> <name pos:start="65:79" pos:end="65:80">sh</name></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="69:83"><expr pos:start="67:17" pos:end="69:82"><operator pos:start="67:17" pos:end="67:17">(</operator><operator pos:start="67:18" pos:end="67:18">(</operator><name pos:start="67:19" pos:end="67:25">int16_t</name><operator pos:start="67:26" pos:end="67:26">*</operator><operator pos:start="67:27" pos:end="67:27">)</operator><name pos:start="67:28" pos:end="67:48"><name pos:start="67:28" pos:end="67:28">s</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:48">native_simd_matrix</name></name><operator pos:start="67:49" pos:end="67:49">)</operator><index pos:start="67:50" pos:end="67:68">[<expr pos:start="67:51" pos:end="67:67"><literal type="number" pos:start="67:51" pos:end="67:51">2</literal><operator pos:start="67:52" pos:end="67:52">*</operator><operator pos:start="67:53" pos:end="67:53">(</operator><name pos:start="67:54" pos:end="67:54">i</name> <operator pos:start="67:56" pos:end="67:56">*</operator> <name pos:start="67:58" pos:end="67:62">nb_in</name> <operator pos:start="67:64" pos:end="67:64">+</operator> <name pos:start="67:66" pos:end="67:66">j</name><operator pos:start="67:67" pos:end="67:67">)</operator></expr>]</index> <operator pos:start="67:70" pos:end="67:70">=</operator>

                    <operator pos:start="69:21" pos:end="69:21">(</operator><operator pos:start="69:22" pos:end="69:22">(</operator><operator pos:start="69:23" pos:end="69:23">(</operator><operator pos:start="69:24" pos:end="69:24">(</operator><name pos:start="69:25" pos:end="69:27">int</name><operator pos:start="69:28" pos:end="69:28">*</operator><operator pos:start="69:29" pos:end="69:29">)</operator><name pos:start="69:30" pos:end="69:45"><name pos:start="69:30" pos:end="69:30">s</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:45">native_matrix</name></name><operator pos:start="69:46" pos:end="69:46">)</operator><index pos:start="69:47" pos:end="69:61">[<expr pos:start="69:48" pos:end="69:60"><name pos:start="69:48" pos:end="69:48">i</name> <operator pos:start="69:50" pos:end="69:50">*</operator> <name pos:start="69:52" pos:end="69:56">nb_in</name> <operator pos:start="69:58" pos:end="69:58">+</operator> <name pos:start="69:60" pos:end="69:60">j</name></expr>]</index><operator pos:start="69:62" pos:end="69:62">)</operator> <operator pos:start="69:64" pos:end="69:64">+</operator> <operator pos:start="69:66" pos:end="69:66">(</operator><literal type="number" pos:start="69:67" pos:end="69:67">1</literal><operator pos:start="69:68" pos:end="69:69">&lt;&lt;</operator><name pos:start="69:70" pos:end="69:71">sh</name><operator pos:start="69:72" pos:end="69:73">&gt;&gt;</operator><literal type="number" pos:start="69:74" pos:end="69:74">1</literal><operator pos:start="69:75" pos:end="69:75">)</operator><operator pos:start="69:76" pos:end="69:76">)</operator> <operator pos:start="69:78" pos:end="69:79">&gt;&gt;</operator> <name pos:start="69:81" pos:end="69:82">sh</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="75:9" pos:end="75:47"><expr pos:start="75:9" pos:end="75:46"><operator pos:start="75:9" pos:end="75:9">(</operator><operator pos:start="75:10" pos:end="75:10">(</operator><name pos:start="75:11" pos:end="75:17">int16_t</name><operator pos:start="75:18" pos:end="75:18">*</operator><operator pos:start="75:19" pos:end="75:19">)</operator><name pos:start="75:20" pos:end="75:37"><name pos:start="75:20" pos:end="75:20">s</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:37">native_simd_one</name></name><operator pos:start="75:38" pos:end="75:38">)</operator><index pos:start="75:39" pos:end="75:41">[<expr pos:start="75:40" pos:end="75:40"><literal type="number" pos:start="75:40" pos:end="75:40">1</literal></expr>]</index> <operator pos:start="75:43" pos:end="75:43">=</operator> <literal type="number" pos:start="75:45" pos:end="75:46">14</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:50"><expr pos:start="77:9" pos:end="77:49"><operator pos:start="77:9" pos:end="77:9">(</operator><operator pos:start="77:10" pos:end="77:10">(</operator><name pos:start="77:11" pos:end="77:17">int16_t</name><operator pos:start="77:18" pos:end="77:18">*</operator><operator pos:start="77:19" pos:end="77:19">)</operator><name pos:start="77:20" pos:end="77:37"><name pos:start="77:20" pos:end="77:20">s</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:37">native_simd_one</name></name><operator pos:start="77:38" pos:end="77:38">)</operator><index pos:start="77:39" pos:end="77:41">[<expr pos:start="77:40" pos:end="77:40"><literal type="number" pos:start="77:40" pos:end="77:40">0</literal></expr>]</index> <operator pos:start="77:43" pos:end="77:43">=</operator> <literal type="number" pos:start="77:45" pos:end="77:49">16384</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="79:7" pos:end="105:5">else if<condition pos:start="79:14" pos:end="79:50">(<expr pos:start="79:15" pos:end="79:49"><name pos:start="79:15" pos:end="79:27"><name pos:start="79:15" pos:end="79:15">s</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:23">midbuf</name><operator pos:start="79:24" pos:end="79:24">.</operator><name pos:start="79:25" pos:end="79:27">fmt</name></name> <operator pos:start="79:29" pos:end="79:30">==</operator> <name pos:start="79:32" pos:end="79:49">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block pos:start="79:51" pos:end="105:5">{<block_content pos:start="81:9" pos:end="103:65">

        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if<condition pos:start="81:11" pos:end="81:38">(<expr pos:start="81:12" pos:end="81:37"><name pos:start="81:12" pos:end="81:19">mm_flags</name> <operator pos:start="81:21" pos:end="81:21">&amp;</operator> <name pos:start="81:23" pos:end="81:37">AV_CPU_FLAG_SSE</name></expr>)</condition> <block pos:start="81:40" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:53">

            <expr_stmt pos:start="83:13" pos:end="83:53"><expr pos:start="83:13" pos:end="83:52"><name pos:start="83:13" pos:end="83:27"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:27">mix_1_1_simd</name></name> <operator pos:start="83:29" pos:end="83:29">=</operator> <name pos:start="83:31" pos:end="83:52">ff_mix_1_1_a_float_sse</name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:53"><expr pos:start="85:13" pos:end="85:52"><name pos:start="85:13" pos:end="85:27"><name pos:start="85:13" pos:end="85:13">s</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:27">mix_2_1_simd</name></name> <operator pos:start="85:29" pos:end="85:29">=</operator> <name pos:start="85:31" pos:end="85:52">ff_mix_2_1_a_float_sse</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if<condition pos:start="89:11" pos:end="89:59">(<expr pos:start="89:12" pos:end="89:58"><name pos:start="89:12" pos:end="89:28">HAVE_AVX_EXTERNAL</name> <operator pos:start="89:30" pos:end="89:31">&amp;&amp;</operator> <name pos:start="89:33" pos:end="89:40">mm_flags</name> <operator pos:start="89:42" pos:end="89:42">&amp;</operator> <name pos:start="89:44" pos:end="89:58">AV_CPU_FLAG_AVX</name></expr>)</condition> <block pos:start="89:61" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:53">

            <expr_stmt pos:start="91:13" pos:end="91:53"><expr pos:start="91:13" pos:end="91:52"><name pos:start="91:13" pos:end="91:27"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:27">mix_1_1_simd</name></name> <operator pos:start="91:29" pos:end="91:29">=</operator> <name pos:start="91:31" pos:end="91:52">ff_mix_1_1_a_float_avx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:53"><expr pos:start="93:13" pos:end="93:52"><name pos:start="93:13" pos:end="93:27"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:27">mix_2_1_simd</name></name> <operator pos:start="93:29" pos:end="93:29">=</operator> <name pos:start="93:31" pos:end="93:52">ff_mix_2_1_a_float_avx</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:64"><expr pos:start="97:9" pos:end="97:63"><name pos:start="97:9" pos:end="97:29"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:29">native_simd_matrix</name></name> <operator pos:start="97:31" pos:end="97:31">=</operator> <call pos:start="97:33" pos:end="97:63"><name pos:start="97:33" pos:end="97:42">av_mallocz</name><argument_list pos:start="97:43" pos:end="97:63">(<argument pos:start="97:44" pos:end="97:62"><expr pos:start="97:44" pos:end="97:62"><name pos:start="97:44" pos:end="97:46">num</name> <operator pos:start="97:48" pos:end="97:48">*</operator> <sizeof pos:start="97:50" pos:end="97:62">sizeof<argument_list pos:start="97:56" pos:end="97:62">(<argument pos:start="97:57" pos:end="97:61"><expr pos:start="97:57" pos:end="97:61"><name pos:start="97:57" pos:end="97:61">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:77"><expr pos:start="99:9" pos:end="99:76"><call pos:start="99:9" pos:end="99:76"><name pos:start="99:9" pos:end="99:14">memcpy</name><argument_list pos:start="99:15" pos:end="99:76">(<argument pos:start="99:16" pos:end="99:36"><expr pos:start="99:16" pos:end="99:36"><name pos:start="99:16" pos:end="99:36"><name pos:start="99:16" pos:end="99:16">s</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:36">native_simd_matrix</name></name></expr></argument>, <argument pos:start="99:39" pos:end="99:54"><expr pos:start="99:39" pos:end="99:54"><name pos:start="99:39" pos:end="99:54"><name pos:start="99:39" pos:end="99:39">s</name><operator pos:start="99:40" pos:end="99:41">-&gt;</operator><name pos:start="99:42" pos:end="99:54">native_matrix</name></name></expr></argument>, <argument pos:start="99:57" pos:end="99:75"><expr pos:start="99:57" pos:end="99:75"><name pos:start="99:57" pos:end="99:59">num</name> <operator pos:start="99:61" pos:end="99:61">*</operator> <sizeof pos:start="99:63" pos:end="99:75">sizeof<argument_list pos:start="99:69" pos:end="99:75">(<argument pos:start="99:70" pos:end="99:74"><expr pos:start="99:70" pos:end="99:74"><name pos:start="99:70" pos:end="99:74">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:55"><expr pos:start="101:9" pos:end="101:54"><name pos:start="101:9" pos:end="101:26"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:26">native_simd_one</name></name> <operator pos:start="101:28" pos:end="101:28">=</operator> <call pos:start="101:30" pos:end="101:54"><name pos:start="101:30" pos:end="101:39">av_mallocz</name><argument_list pos:start="101:40" pos:end="101:54">(<argument pos:start="101:41" pos:end="101:53"><expr pos:start="101:41" pos:end="101:53"><sizeof pos:start="101:41" pos:end="101:53">sizeof<argument_list pos:start="101:47" pos:end="101:53">(<argument pos:start="101:48" pos:end="101:52"><expr pos:start="101:48" pos:end="101:52"><name pos:start="101:48" pos:end="101:52">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:65"><expr pos:start="103:9" pos:end="103:64"><call pos:start="103:9" pos:end="103:64"><name pos:start="103:9" pos:end="103:14">memcpy</name><argument_list pos:start="103:15" pos:end="103:64">(<argument pos:start="103:16" pos:end="103:33"><expr pos:start="103:16" pos:end="103:33"><name pos:start="103:16" pos:end="103:33"><name pos:start="103:16" pos:end="103:16">s</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:33">native_simd_one</name></name></expr></argument>, <argument pos:start="103:36" pos:end="103:48"><expr pos:start="103:36" pos:end="103:48"><name pos:start="103:36" pos:end="103:48"><name pos:start="103:36" pos:end="103:36">s</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:48">native_one</name></name></expr></argument>, <argument pos:start="103:51" pos:end="103:63"><expr pos:start="103:51" pos:end="103:63"><sizeof pos:start="103:51" pos:end="103:63">sizeof<argument_list pos:start="103:57" pos:end="103:63">(<argument pos:start="103:58" pos:end="103:62"><expr pos:start="103:58" pos:end="103:62"><name pos:start="103:58" pos:end="103:62">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
