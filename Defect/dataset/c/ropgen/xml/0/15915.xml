<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15915.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">net_socket_listen_init</name><parameter_list pos:start="1:34" pos:end="7:55">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><name pos:start="1:35" pos:end="1:48">NetClientState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">peer</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:51"><decl pos:start="3:35" pos:end="3:51"><type pos:start="3:35" pos:end="3:51"><specifier pos:start="3:35" pos:end="3:39">const</specifier> <name pos:start="3:41" pos:end="3:44">char</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:51">model</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:50"><decl pos:start="5:35" pos:end="5:50"><type pos:start="5:35" pos:end="5:50"><specifier pos:start="5:35" pos:end="5:39">const</specifier> <name pos:start="5:41" pos:end="5:44">char</name> <modifier pos:start="5:46" pos:end="5:46">*</modifier></type><name pos:start="5:47" pos:end="5:50">name</name></decl></parameter>,

                                  <parameter pos:start="7:35" pos:end="7:54"><decl pos:start="7:35" pos:end="7:54"><type pos:start="7:35" pos:end="7:54"><specifier pos:start="7:35" pos:end="7:39">const</specifier> <name pos:start="7:41" pos:end="7:44">char</name> <modifier pos:start="7:46" pos:end="7:46">*</modifier></type><name pos:start="7:47" pos:end="7:54">host_str</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="69:1">{<block_content pos:start="11:5" pos:end="67:13">

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">NetClientState</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:22">nc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">NetSocketState</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:21">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:23">SocketAddressLegacy</name> <modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:30">saddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:30"><decl pos:start="19:5" pos:end="19:29"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:9">Error</name> <modifier pos:start="19:11" pos:end="19:11">*</modifier></type><name pos:start="19:12" pos:end="19:22">local_error</name> <init pos:start="19:24" pos:end="19:29">= <expr pos:start="19:26" pos:end="19:29"><name pos:start="19:26" pos:end="19:29">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:49"><expr pos:start="23:5" pos:end="23:48"><name pos:start="23:5" pos:end="23:9">saddr</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:48"><name pos:start="23:13" pos:end="23:24">socket_parse</name><argument_list pos:start="23:25" pos:end="23:48">(<argument pos:start="23:26" pos:end="23:33"><expr pos:start="23:26" pos:end="23:33"><name pos:start="23:26" pos:end="23:33">host_str</name></expr></argument>, <argument pos:start="23:36" pos:end="23:47"><expr pos:start="23:36" pos:end="23:47"><operator pos:start="23:36" pos:end="23:36">&amp;</operator><name pos:start="23:37" pos:end="23:47">local_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:22">(<expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:13">saddr</name> <operator pos:start="25:15" pos:end="25:16">==</operator> <name pos:start="25:18" pos:end="25:21">NULL</name></expr>)</condition> <block pos:start="25:24" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><call pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:24">error_report_err</name><argument_list pos:start="27:25" pos:end="27:37">(<argument pos:start="27:26" pos:end="27:36"><expr pos:start="27:26" pos:end="27:36"><name pos:start="27:26" pos:end="27:36">local_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:45"><expr pos:start="35:5" pos:end="35:44"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:44"><name pos:start="35:11" pos:end="35:23">socket_listen</name><argument_list pos:start="35:24" pos:end="35:44">(<argument pos:start="35:25" pos:end="35:29"><expr pos:start="35:25" pos:end="35:29"><name pos:start="35:25" pos:end="35:29">saddr</name></expr></argument>, <argument pos:start="35:32" pos:end="35:43"><expr pos:start="35:32" pos:end="35:43"><operator pos:start="35:32" pos:end="35:32">&amp;</operator><name pos:start="35:33" pos:end="35:43">local_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">&lt;</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>)</condition> <block pos:start="37:18" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:18">

        <expr_stmt pos:start="39:9" pos:end="39:45"><expr pos:start="39:9" pos:end="39:44"><call pos:start="39:9" pos:end="39:44"><name pos:start="39:9" pos:end="39:37">qapi_free_SocketAddressLegacy</name><argument_list pos:start="39:38" pos:end="39:44">(<argument pos:start="39:39" pos:end="39:43"><expr pos:start="39:39" pos:end="39:43"><name pos:start="39:39" pos:end="39:43">saddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:38"><expr pos:start="41:9" pos:end="41:37"><call pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:24">error_report_err</name><argument_list pos:start="41:25" pos:end="41:37">(<argument pos:start="41:26" pos:end="41:36"><expr pos:start="41:26" pos:end="41:36"><name pos:start="41:26" pos:end="41:36">local_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:66"><expr pos:start="49:5" pos:end="49:65"><name pos:start="49:5" pos:end="49:6">nc</name> <operator pos:start="49:8" pos:end="49:8">=</operator> <call pos:start="49:10" pos:end="49:65"><name pos:start="49:10" pos:end="49:28">qemu_new_net_client</name><argument_list pos:start="49:29" pos:end="49:65">(<argument pos:start="49:30" pos:end="49:45"><expr pos:start="49:30" pos:end="49:45"><operator pos:start="49:30" pos:end="49:30">&amp;</operator><name pos:start="49:31" pos:end="49:45">net_socket_info</name></expr></argument>, <argument pos:start="49:48" pos:end="49:51"><expr pos:start="49:48" pos:end="49:51"><name pos:start="49:48" pos:end="49:51">peer</name></expr></argument>, <argument pos:start="49:54" pos:end="49:58"><expr pos:start="49:54" pos:end="49:58"><name pos:start="49:54" pos:end="49:58">model</name></expr></argument>, <argument pos:start="49:61" pos:end="49:64"><expr pos:start="49:61" pos:end="49:64"><name pos:start="49:61" pos:end="49:64">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:42"><expr pos:start="51:5" pos:end="51:41"><name pos:start="51:5" pos:end="51:5">s</name> <operator pos:start="51:7" pos:end="51:7">=</operator> <call pos:start="51:9" pos:end="51:41"><name pos:start="51:9" pos:end="51:17">DO_UPCAST</name><argument_list pos:start="51:18" pos:end="51:41">(<argument pos:start="51:19" pos:end="51:32"><expr pos:start="51:19" pos:end="51:32"><name pos:start="51:19" pos:end="51:32">NetSocketState</name></expr></argument>, <argument pos:start="51:35" pos:end="51:36"><expr pos:start="51:35" pos:end="51:36"><name pos:start="51:35" pos:end="51:36">nc</name></expr></argument>, <argument pos:start="51:39" pos:end="51:40"><expr pos:start="51:39" pos:end="51:40"><name pos:start="51:39" pos:end="51:40">nc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:15"><expr pos:start="53:5" pos:end="53:14"><name pos:start="53:5" pos:end="53:9"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:9">fd</name></name> <operator pos:start="53:11" pos:end="53:11">=</operator> <operator pos:start="53:13" pos:end="53:13">-</operator><literal type="number" pos:start="53:14" pos:end="53:14">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:23"><expr pos:start="55:5" pos:end="55:22"><name pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:16">listen_fd</name></name> <operator pos:start="55:18" pos:end="55:18">=</operator> <name pos:start="55:20" pos:end="55:22">ret</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:27"><expr pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:9">nc</name><operator pos:start="57:10" pos:end="57:10">.</operator><name pos:start="57:11" pos:end="57:19">link_down</name></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:26">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:55"><expr pos:start="59:5" pos:end="59:54"><call pos:start="59:5" pos:end="59:54"><name pos:start="59:5" pos:end="59:22">net_socket_rs_init</name><argument_list pos:start="59:23" pos:end="59:54">(<argument pos:start="59:24" pos:end="59:29"><expr pos:start="59:24" pos:end="59:29"><operator pos:start="59:24" pos:end="59:24">&amp;</operator><name pos:start="59:25" pos:end="59:29"><name pos:start="59:25" pos:end="59:25">s</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:29">rs</name></name></expr></argument>, <argument pos:start="59:32" pos:end="59:53"><expr pos:start="59:32" pos:end="59:53"><name pos:start="59:32" pos:end="59:53">net_socket_rs_finalize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:66"><expr pos:start="63:5" pos:end="63:65"><call pos:start="63:5" pos:end="63:65"><name pos:start="63:5" pos:end="63:23">qemu_set_fd_handler</name><argument_list pos:start="63:24" pos:end="63:65">(<argument pos:start="63:25" pos:end="63:36"><expr pos:start="63:25" pos:end="63:36"><name pos:start="63:25" pos:end="63:36"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:36">listen_fd</name></name></expr></argument>, <argument pos:start="63:39" pos:end="63:55"><expr pos:start="63:39" pos:end="63:55"><name pos:start="63:39" pos:end="63:55">net_socket_accept</name></expr></argument>, <argument pos:start="63:58" pos:end="63:61"><expr pos:start="63:58" pos:end="63:61"><name pos:start="63:58" pos:end="63:61">NULL</name></expr></argument>, <argument pos:start="63:64" pos:end="63:64"><expr pos:start="63:64" pos:end="63:64"><name pos:start="63:64" pos:end="63:64">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:41"><expr pos:start="65:5" pos:end="65:40"><call pos:start="65:5" pos:end="65:40"><name pos:start="65:5" pos:end="65:33">qapi_free_SocketAddressLegacy</name><argument_list pos:start="65:34" pos:end="65:40">(<argument pos:start="65:35" pos:end="65:39"><expr pos:start="65:35" pos:end="65:39"><name pos:start="65:35" pos:end="65:39">saddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
