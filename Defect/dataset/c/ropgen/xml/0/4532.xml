<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4532.c" pos:tabs="8"><function pos:start="1:1" pos:end="321:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:40">vorbis_parse_setup_hdr_floors</name><parameter_list pos:start="1:41" pos:end="1:60">(<parameter pos:start="1:42" pos:end="1:59"><decl pos:start="1:42" pos:end="1:59"><type pos:start="1:42" pos:end="1:57"><name pos:start="1:42" pos:end="1:55">vorbis_context</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:59">vc</name></decl></parameter>)</parameter_list> <block pos:start="1:62" pos:end="321:1">{<block_content pos:start="3:5" pos:end="319:13">

    <decl_stmt pos:start="3:5" pos:end="3:30"><decl pos:start="3:5" pos:end="3:29"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:17">GetBitContext</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:21">gb</name><init pos:start="3:22" pos:end="3:29">=<expr pos:start="3:23" pos:end="3:29"><operator pos:start="3:23" pos:end="3:23">&amp;</operator><name pos:start="3:24" pos:end="3:29"><name pos:start="3:24" pos:end="3:25">vc</name><operator pos:start="3:26" pos:end="3:27">-&gt;</operator><name pos:start="3:28" pos:end="3:29">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:17">uint_fast16_t</name></type> <name pos:start="5:19" pos:end="5:19">i</name></decl>,<decl pos:start="5:21" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:17"/><name pos:start="5:21" pos:end="5:21">j</name></decl>,<decl pos:start="5:23" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:17"/><name pos:start="5:23" pos:end="5:23">k</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:38"><expr pos:start="9:5" pos:end="9:37"><name pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:6">vc</name><operator pos:start="9:7" pos:end="9:8">-&gt;</operator><name pos:start="9:9" pos:end="9:19">floor_count</name></name><operator pos:start="9:20" pos:end="9:20">=</operator><call pos:start="9:21" pos:end="9:35"><name pos:start="9:21" pos:end="9:28">get_bits</name><argument_list pos:start="9:29" pos:end="9:35">(<argument pos:start="9:30" pos:end="9:31"><expr pos:start="9:30" pos:end="9:31"><name pos:start="9:30" pos:end="9:31">gb</name></expr></argument>, <argument pos:start="9:34" pos:end="9:34"><expr pos:start="9:34" pos:end="9:34"><literal type="number" pos:start="9:34" pos:end="9:34">6</literal></expr></argument>)</argument_list></call><operator pos:start="9:36" pos:end="9:36">+</operator><literal type="number" pos:start="9:37" pos:end="9:37">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:66"><expr pos:start="13:5" pos:end="13:65"><name pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:6">vc</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:14">floors</name></name><operator pos:start="13:15" pos:end="13:15">=</operator><call pos:start="13:16" pos:end="13:65"><name pos:start="13:16" pos:end="13:25">av_mallocz</name><argument_list pos:start="13:26" pos:end="13:65">(<argument pos:start="13:27" pos:end="13:64"><expr pos:start="13:27" pos:end="13:64"><name pos:start="13:27" pos:end="13:41"><name pos:start="13:27" pos:end="13:28">vc</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:41">floor_count</name></name> <operator pos:start="13:43" pos:end="13:43">*</operator> <sizeof pos:start="13:45" pos:end="13:64">sizeof<argument_list pos:start="13:51" pos:end="13:64">(<argument pos:start="13:52" pos:end="13:63"><expr pos:start="13:52" pos:end="13:63"><name pos:start="13:52" pos:end="13:63">vorbis_floor</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="17:5" pos:end="317:5">for <control pos:start="17:9" pos:end="17:35">(<init pos:start="17:10" pos:end="17:13"><expr pos:start="17:10" pos:end="17:12"><name pos:start="17:10" pos:end="17:10">i</name><operator pos:start="17:11" pos:end="17:11">=</operator><literal type="number" pos:start="17:12" pos:end="17:12">0</literal></expr>;</init><condition pos:start="17:14" pos:end="17:31"><expr pos:start="17:14" pos:end="17:30"><name pos:start="17:14" pos:end="17:14">i</name><operator pos:start="17:15" pos:end="17:15">&lt;</operator><name pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:17">vc</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:30">floor_count</name></name></expr>;</condition><incr pos:start="17:32" pos:end="17:34"><expr pos:start="17:32" pos:end="17:34"><operator pos:start="17:32" pos:end="17:33">++</operator><name pos:start="17:34" pos:end="17:34">i</name></expr></incr>)</control> <block pos:start="17:37" pos:end="317:5">{<block_content pos:start="19:9" pos:end="315:9">

        <decl_stmt pos:start="19:9" pos:end="19:49"><decl pos:start="19:9" pos:end="19:48"><type pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:20">vorbis_floor</name> <modifier pos:start="19:22" pos:end="19:22">*</modifier></type><name pos:start="19:23" pos:end="19:33">floor_setup</name><init pos:start="19:34" pos:end="19:48">=<expr pos:start="19:35" pos:end="19:48"><operator pos:start="19:35" pos:end="19:35">&amp;</operator><name pos:start="19:36" pos:end="19:48"><name pos:start="19:36" pos:end="19:37">vc</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:45">floors</name><index pos:start="19:46" pos:end="19:48">[<expr pos:start="19:47" pos:end="19:47"><name pos:start="19:47" pos:end="19:47">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:49"><expr pos:start="23:9" pos:end="23:48"><name pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:19">floor_setup</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:31">floor_type</name></name><operator pos:start="23:32" pos:end="23:32">=</operator><call pos:start="23:33" pos:end="23:48"><name pos:start="23:33" pos:end="23:40">get_bits</name><argument_list pos:start="23:41" pos:end="23:48">(<argument pos:start="23:42" pos:end="23:43"><expr pos:start="23:42" pos:end="23:43"><name pos:start="23:42" pos:end="23:43">gb</name></expr></argument>, <argument pos:start="23:46" pos:end="23:47"><expr pos:start="23:46" pos:end="23:47"><literal type="number" pos:start="23:46" pos:end="23:47">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:70"><expr pos:start="27:9" pos:end="27:69"><call pos:start="27:9" pos:end="27:69"><name pos:start="27:9" pos:end="27:16">AV_DEBUG</name><argument_list pos:start="27:17" pos:end="27:69">(<argument pos:start="27:18" pos:end="27:40"><expr pos:start="27:18" pos:end="27:40"><literal type="string" pos:start="27:18" pos:end="27:40">" %d. floor type %d \n"</literal></expr></argument>, <argument pos:start="27:43" pos:end="27:43"><expr pos:start="27:43" pos:end="27:43"><name pos:start="27:43" pos:end="27:43">i</name></expr></argument>, <argument pos:start="27:46" pos:end="27:68"><expr pos:start="27:46" pos:end="27:68"><name pos:start="27:46" pos:end="27:68"><name pos:start="27:46" pos:end="27:56">floor_setup</name><operator pos:start="27:57" pos:end="27:58">-&gt;</operator><name pos:start="27:59" pos:end="27:68">floor_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="31:9" pos:end="315:9"><if pos:start="31:9" pos:end="163:9">if <condition pos:start="31:12" pos:end="31:39">(<expr pos:start="31:13" pos:end="31:38"><name pos:start="31:13" pos:end="31:35"><name pos:start="31:13" pos:end="31:23">floor_setup</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:35">floor_type</name></name><operator pos:start="31:36" pos:end="31:37">==</operator><literal type="number" pos:start="31:38" pos:end="31:38">1</literal></expr>)</condition> <block pos:start="31:41" pos:end="163:9">{<block_content pos:start="33:13" pos:end="161:100">

            <decl_stmt pos:start="33:13" pos:end="33:41"><decl pos:start="33:13" pos:end="33:40"><type pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:24">uint_fast8_t</name></type> <name pos:start="33:26" pos:end="33:38">maximum_class</name><init pos:start="33:39" pos:end="33:40">=<expr pos:start="33:40" pos:end="33:40"><literal type="number" pos:start="33:40" pos:end="33:40">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:35"><decl pos:start="35:13" pos:end="35:34"><type pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:24">uint_fast8_t</name></type> <name pos:start="35:26" pos:end="35:34">rangebits</name></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:42"><decl pos:start="37:13" pos:end="37:41"><type pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:25">uint_fast16_t</name></type> <name pos:start="37:27" pos:end="37:39">floor1_values</name><init pos:start="37:40" pos:end="37:41">=<expr pos:start="37:41" pos:end="37:41"><literal type="number" pos:start="37:41" pos:end="37:41">2</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="41:13" pos:end="41:53"><expr pos:start="41:13" pos:end="41:52"><name pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:23">floor_setup</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:31">decode</name></name><operator pos:start="41:32" pos:end="41:32">=</operator><name pos:start="41:33" pos:end="41:52">vorbis_floor1_decode</name></expr>;</expr_stmt>



            <expr_stmt pos:start="45:13" pos:end="45:60"><expr pos:start="45:13" pos:end="45:59"><name pos:start="45:13" pos:end="45:43"><name pos:start="45:13" pos:end="45:23">floor_setup</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:29">data</name><operator pos:start="45:30" pos:end="45:30">.</operator><name pos:start="45:31" pos:end="45:32">t1</name><operator pos:start="45:33" pos:end="45:33">.</operator><name pos:start="45:34" pos:end="45:43">partitions</name></name><operator pos:start="45:44" pos:end="45:44">=</operator><call pos:start="45:45" pos:end="45:59"><name pos:start="45:45" pos:end="45:52">get_bits</name><argument_list pos:start="45:53" pos:end="45:59">(<argument pos:start="45:54" pos:end="45:55"><expr pos:start="45:54" pos:end="45:55"><name pos:start="45:54" pos:end="45:55">gb</name></expr></argument>, <argument pos:start="45:58" pos:end="45:58"><expr pos:start="45:58" pos:end="45:58"><literal type="number" pos:start="45:58" pos:end="45:58">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="49:13" pos:end="49:88"><expr pos:start="49:13" pos:end="49:87"><call pos:start="49:13" pos:end="49:87"><name pos:start="49:13" pos:end="49:20">AV_DEBUG</name><argument_list pos:start="49:21" pos:end="49:87">(<argument pos:start="49:22" pos:end="49:50"><expr pos:start="49:22" pos:end="49:50"><literal type="string" pos:start="49:22" pos:end="49:50">" %d.floor: %d partitions \n"</literal></expr></argument>, <argument pos:start="49:53" pos:end="49:53"><expr pos:start="49:53" pos:end="49:53"><name pos:start="49:53" pos:end="49:53">i</name></expr></argument>, <argument pos:start="49:56" pos:end="49:86"><expr pos:start="49:56" pos:end="49:86"><name pos:start="49:56" pos:end="49:86"><name pos:start="49:56" pos:end="49:66">floor_setup</name><operator pos:start="49:67" pos:end="49:68">-&gt;</operator><name pos:start="49:69" pos:end="49:72">data</name><operator pos:start="49:73" pos:end="49:73">.</operator><name pos:start="49:74" pos:end="49:75">t1</name><operator pos:start="49:76" pos:end="49:76">.</operator><name pos:start="49:77" pos:end="49:86">partitions</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="53:13" pos:end="65:13">for<control pos:start="53:16" pos:end="53:58">(<init pos:start="53:17" pos:end="53:20"><expr pos:start="53:17" pos:end="53:19"><name pos:start="53:17" pos:end="53:17">j</name><operator pos:start="53:18" pos:end="53:18">=</operator><literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>;</init><condition pos:start="53:21" pos:end="53:54"><expr pos:start="53:21" pos:end="53:53"><name pos:start="53:21" pos:end="53:21">j</name><operator pos:start="53:22" pos:end="53:22">&lt;</operator><name pos:start="53:23" pos:end="53:53"><name pos:start="53:23" pos:end="53:33">floor_setup</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:39">data</name><operator pos:start="53:40" pos:end="53:40">.</operator><name pos:start="53:41" pos:end="53:42">t1</name><operator pos:start="53:43" pos:end="53:43">.</operator><name pos:start="53:44" pos:end="53:53">partitions</name></name></expr>;</condition><incr pos:start="53:55" pos:end="53:57"><expr pos:start="53:55" pos:end="53:57"><operator pos:start="53:55" pos:end="53:56">++</operator><name pos:start="53:57" pos:end="53:57">j</name></expr></incr>)</control> <block pos:start="53:60" pos:end="65:13">{<block_content pos:start="55:17" pos:end="61:111">

                <expr_stmt pos:start="55:17" pos:end="55:72"><expr pos:start="55:17" pos:end="55:71"><name pos:start="55:17" pos:end="55:55"><name pos:start="55:17" pos:end="55:27">floor_setup</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:33">data</name><operator pos:start="55:34" pos:end="55:34">.</operator><name pos:start="55:35" pos:end="55:36">t1</name><operator pos:start="55:37" pos:end="55:37">.</operator><name pos:start="55:38" pos:end="55:52">partition_class</name><index pos:start="55:53" pos:end="55:55">[<expr pos:start="55:54" pos:end="55:54"><name pos:start="55:54" pos:end="55:54">j</name></expr>]</index></name><operator pos:start="55:56" pos:end="55:56">=</operator><call pos:start="55:57" pos:end="55:71"><name pos:start="55:57" pos:end="55:64">get_bits</name><argument_list pos:start="55:65" pos:end="55:71">(<argument pos:start="55:66" pos:end="55:67"><expr pos:start="55:66" pos:end="55:67"><name pos:start="55:66" pos:end="55:67">gb</name></expr></argument>, <argument pos:start="55:70" pos:end="55:70"><expr pos:start="55:70" pos:end="55:70"><literal type="number" pos:start="55:70" pos:end="55:70">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="57:17" pos:end="57:129"><if pos:start="57:17" pos:end="57:129">if <condition pos:start="57:20" pos:end="57:74">(<expr pos:start="57:21" pos:end="57:73"><name pos:start="57:21" pos:end="57:59"><name pos:start="57:21" pos:end="57:31">floor_setup</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:37">data</name><operator pos:start="57:38" pos:end="57:38">.</operator><name pos:start="57:39" pos:end="57:40">t1</name><operator pos:start="57:41" pos:end="57:41">.</operator><name pos:start="57:42" pos:end="57:56">partition_class</name><index pos:start="57:57" pos:end="57:59">[<expr pos:start="57:58" pos:end="57:58"><name pos:start="57:58" pos:end="57:58">j</name></expr>]</index></name><operator pos:start="57:60" pos:end="57:60">&gt;</operator><name pos:start="57:61" pos:end="57:73">maximum_class</name></expr>)</condition><block type="pseudo" pos:start="57:76" pos:end="57:129"><block_content pos:start="57:76" pos:end="57:129"> <expr_stmt pos:start="57:76" pos:end="57:129"><expr pos:start="57:76" pos:end="57:128"><name pos:start="57:76" pos:end="57:88">maximum_class</name><operator pos:start="57:89" pos:end="57:89">=</operator><name pos:start="57:90" pos:end="57:128"><name pos:start="57:90" pos:end="57:100">floor_setup</name><operator pos:start="57:101" pos:end="57:102">-&gt;</operator><name pos:start="57:103" pos:end="57:106">data</name><operator pos:start="57:107" pos:end="57:107">.</operator><name pos:start="57:108" pos:end="57:109">t1</name><operator pos:start="57:110" pos:end="57:110">.</operator><name pos:start="57:111" pos:end="57:125">partition_class</name><index pos:start="57:126" pos:end="57:128">[<expr pos:start="57:127" pos:end="57:127"><name pos:start="57:127" pos:end="57:127">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="61:17" pos:end="61:111"><expr pos:start="61:17" pos:end="61:110"><call pos:start="61:17" pos:end="61:110"><name pos:start="61:17" pos:end="61:24">AV_DEBUG</name><argument_list pos:start="61:25" pos:end="61:110">(<argument pos:start="61:26" pos:end="61:62"><expr pos:start="61:26" pos:end="61:62"><literal type="string" pos:start="61:26" pos:end="61:62">" %d. floor %d partition class %d \n"</literal></expr></argument>, <argument pos:start="61:65" pos:end="61:65"><expr pos:start="61:65" pos:end="61:65"><name pos:start="61:65" pos:end="61:65">i</name></expr></argument>, <argument pos:start="61:68" pos:end="61:68"><expr pos:start="61:68" pos:end="61:68"><name pos:start="61:68" pos:end="61:68">j</name></expr></argument>, <argument pos:start="61:71" pos:end="61:109"><expr pos:start="61:71" pos:end="61:109"><name pos:start="61:71" pos:end="61:109"><name pos:start="61:71" pos:end="61:81">floor_setup</name><operator pos:start="61:82" pos:end="61:83">-&gt;</operator><name pos:start="61:84" pos:end="61:87">data</name><operator pos:start="61:88" pos:end="61:88">.</operator><name pos:start="61:89" pos:end="61:90">t1</name><operator pos:start="61:91" pos:end="61:91">.</operator><name pos:start="61:92" pos:end="61:106">partition_class</name><index pos:start="61:107" pos:end="61:109">[<expr pos:start="61:108" pos:end="61:108"><name pos:start="61:108" pos:end="61:108">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            </block_content>}</block></for>



            <expr_stmt pos:start="69:13" pos:end="69:60"><expr pos:start="69:13" pos:end="69:59"><call pos:start="69:13" pos:end="69:59"><name pos:start="69:13" pos:end="69:20">AV_DEBUG</name><argument_list pos:start="69:21" pos:end="69:59">(<argument pos:start="69:22" pos:end="69:43"><expr pos:start="69:22" pos:end="69:43"><literal type="string" pos:start="69:22" pos:end="69:43">" maximum class %d \n"</literal></expr></argument>, <argument pos:start="69:46" pos:end="69:58"><expr pos:start="69:46" pos:end="69:58"><name pos:start="69:46" pos:end="69:58">maximum_class</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="73:13" pos:end="73:61"><expr pos:start="73:13" pos:end="73:60"><name pos:start="73:13" pos:end="73:46"><name pos:start="73:13" pos:end="73:23">floor_setup</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:29">data</name><operator pos:start="73:30" pos:end="73:30">.</operator><name pos:start="73:31" pos:end="73:32">t1</name><operator pos:start="73:33" pos:end="73:33">.</operator><name pos:start="73:34" pos:end="73:46">maximum_class</name></name><operator pos:start="73:47" pos:end="73:47">=</operator><name pos:start="73:48" pos:end="73:60">maximum_class</name></expr>;</expr_stmt>



            <for pos:start="77:13" pos:end="111:13">for<control pos:start="77:16" pos:end="77:41">(<init pos:start="77:17" pos:end="77:20"><expr pos:start="77:17" pos:end="77:19"><name pos:start="77:17" pos:end="77:17">j</name><operator pos:start="77:18" pos:end="77:18">=</operator><literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr>;</init><condition pos:start="77:21" pos:end="77:37"><expr pos:start="77:21" pos:end="77:36"><name pos:start="77:21" pos:end="77:21">j</name><operator pos:start="77:22" pos:end="77:23">&lt;=</operator><name pos:start="77:24" pos:end="77:36">maximum_class</name></expr>;</condition><incr pos:start="77:38" pos:end="77:40"><expr pos:start="77:38" pos:end="77:40"><operator pos:start="77:38" pos:end="77:39">++</operator><name pos:start="77:40" pos:end="77:40">j</name></expr></incr>)</control> <block pos:start="77:43" pos:end="111:13">{<block_content pos:start="79:17" pos:end="109:17">

                <expr_stmt pos:start="79:17" pos:end="79:75"><expr pos:start="79:17" pos:end="79:74"><name pos:start="79:17" pos:end="79:56"><name pos:start="79:17" pos:end="79:27">floor_setup</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:33">data</name><operator pos:start="79:34" pos:end="79:34">.</operator><name pos:start="79:35" pos:end="79:36">t1</name><operator pos:start="79:37" pos:end="79:37">.</operator><name pos:start="79:38" pos:end="79:53">class_dimensions</name><index pos:start="79:54" pos:end="79:56">[<expr pos:start="79:55" pos:end="79:55"><name pos:start="79:55" pos:end="79:55">j</name></expr>]</index></name><operator pos:start="79:57" pos:end="79:57">=</operator><call pos:start="79:58" pos:end="79:72"><name pos:start="79:58" pos:end="79:65">get_bits</name><argument_list pos:start="79:66" pos:end="79:72">(<argument pos:start="79:67" pos:end="79:68"><expr pos:start="79:67" pos:end="79:68"><name pos:start="79:67" pos:end="79:68">gb</name></expr></argument>, <argument pos:start="79:71" pos:end="79:71"><expr pos:start="79:71" pos:end="79:71"><literal type="number" pos:start="79:71" pos:end="79:71">3</literal></expr></argument>)</argument_list></call><operator pos:start="79:73" pos:end="79:73">+</operator><literal type="number" pos:start="79:74" pos:end="79:74">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:73"><expr pos:start="81:17" pos:end="81:72"><name pos:start="81:17" pos:end="81:56"><name pos:start="81:17" pos:end="81:27">floor_setup</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:33">data</name><operator pos:start="81:34" pos:end="81:34">.</operator><name pos:start="81:35" pos:end="81:36">t1</name><operator pos:start="81:37" pos:end="81:37">.</operator><name pos:start="81:38" pos:end="81:53">class_subclasses</name><index pos:start="81:54" pos:end="81:56">[<expr pos:start="81:55" pos:end="81:55"><name pos:start="81:55" pos:end="81:55">j</name></expr>]</index></name><operator pos:start="81:57" pos:end="81:57">=</operator><call pos:start="81:58" pos:end="81:72"><name pos:start="81:58" pos:end="81:65">get_bits</name><argument_list pos:start="81:66" pos:end="81:72">(<argument pos:start="81:67" pos:end="81:68"><expr pos:start="81:67" pos:end="81:68"><name pos:start="81:67" pos:end="81:68">gb</name></expr></argument>, <argument pos:start="81:71" pos:end="81:71"><expr pos:start="81:71" pos:end="81:71"><literal type="number" pos:start="81:71" pos:end="81:71">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="85:17" pos:end="85:162"><expr pos:start="85:17" pos:end="85:161"><call pos:start="85:17" pos:end="85:161"><name pos:start="85:17" pos:end="85:24">AV_DEBUG</name><argument_list pos:start="85:25" pos:end="85:161">(<argument pos:start="85:26" pos:end="85:70"><expr pos:start="85:26" pos:end="85:70"><literal type="string" pos:start="85:26" pos:end="85:70">" %d floor %d class dim: %d subclasses %d \n"</literal></expr></argument>, <argument pos:start="85:73" pos:end="85:73"><expr pos:start="85:73" pos:end="85:73"><name pos:start="85:73" pos:end="85:73">i</name></expr></argument>, <argument pos:start="85:76" pos:end="85:76"><expr pos:start="85:76" pos:end="85:76"><name pos:start="85:76" pos:end="85:76">j</name></expr></argument>, <argument pos:start="85:79" pos:end="85:118"><expr pos:start="85:79" pos:end="85:118"><name pos:start="85:79" pos:end="85:118"><name pos:start="85:79" pos:end="85:89">floor_setup</name><operator pos:start="85:90" pos:end="85:91">-&gt;</operator><name pos:start="85:92" pos:end="85:95">data</name><operator pos:start="85:96" pos:end="85:96">.</operator><name pos:start="85:97" pos:end="85:98">t1</name><operator pos:start="85:99" pos:end="85:99">.</operator><name pos:start="85:100" pos:end="85:115">class_dimensions</name><index pos:start="85:116" pos:end="85:118">[<expr pos:start="85:117" pos:end="85:117"><name pos:start="85:117" pos:end="85:117">j</name></expr>]</index></name></expr></argument>, <argument pos:start="85:121" pos:end="85:160"><expr pos:start="85:121" pos:end="85:160"><name pos:start="85:121" pos:end="85:160"><name pos:start="85:121" pos:end="85:131">floor_setup</name><operator pos:start="85:132" pos:end="85:133">-&gt;</operator><name pos:start="85:134" pos:end="85:137">data</name><operator pos:start="85:138" pos:end="85:138">.</operator><name pos:start="85:139" pos:end="85:140">t1</name><operator pos:start="85:141" pos:end="85:141">.</operator><name pos:start="85:142" pos:end="85:157">class_subclasses</name><index pos:start="85:158" pos:end="85:160">[<expr pos:start="85:159" pos:end="85:159"><name pos:start="85:159" pos:end="85:159">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="89:17" pos:end="97:17"><if pos:start="89:17" pos:end="97:17">if <condition pos:start="89:20" pos:end="89:61">(<expr pos:start="89:21" pos:end="89:60"><name pos:start="89:21" pos:end="89:60"><name pos:start="89:21" pos:end="89:31">floor_setup</name><operator pos:start="89:32" pos:end="89:33">-&gt;</operator><name pos:start="89:34" pos:end="89:37">data</name><operator pos:start="89:38" pos:end="89:38">.</operator><name pos:start="89:39" pos:end="89:40">t1</name><operator pos:start="89:41" pos:end="89:41">.</operator><name pos:start="89:42" pos:end="89:57">class_subclasses</name><index pos:start="89:58" pos:end="89:60">[<expr pos:start="89:59" pos:end="89:59"><name pos:start="89:59" pos:end="89:59">j</name></expr>]</index></name></expr>)</condition> <block pos:start="89:63" pos:end="97:17">{<block_content pos:start="91:21" pos:end="95:95">

                    <expr_stmt pos:start="91:21" pos:end="91:77"><expr pos:start="91:21" pos:end="91:76"><name pos:start="91:21" pos:end="91:60"><name pos:start="91:21" pos:end="91:31">floor_setup</name><operator pos:start="91:32" pos:end="91:33">-&gt;</operator><name pos:start="91:34" pos:end="91:37">data</name><operator pos:start="91:38" pos:end="91:38">.</operator><name pos:start="91:39" pos:end="91:40">t1</name><operator pos:start="91:41" pos:end="91:41">.</operator><name pos:start="91:42" pos:end="91:57">class_masterbook</name><index pos:start="91:58" pos:end="91:60">[<expr pos:start="91:59" pos:end="91:59"><name pos:start="91:59" pos:end="91:59">j</name></expr>]</index></name><operator pos:start="91:61" pos:end="91:61">=</operator><call pos:start="91:62" pos:end="91:76"><name pos:start="91:62" pos:end="91:69">get_bits</name><argument_list pos:start="91:70" pos:end="91:76">(<argument pos:start="91:71" pos:end="91:72"><expr pos:start="91:71" pos:end="91:72"><name pos:start="91:71" pos:end="91:72">gb</name></expr></argument>, <argument pos:start="91:75" pos:end="91:75"><expr pos:start="91:75" pos:end="91:75"><literal type="number" pos:start="91:75" pos:end="91:75">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="95:21" pos:end="95:95"><expr pos:start="95:21" pos:end="95:94"><call pos:start="95:21" pos:end="95:94"><name pos:start="95:21" pos:end="95:28">AV_DEBUG</name><argument_list pos:start="95:29" pos:end="95:94">(<argument pos:start="95:30" pos:end="95:51"><expr pos:start="95:30" pos:end="95:51"><literal type="string" pos:start="95:30" pos:end="95:51">"   masterbook: %d \n"</literal></expr></argument>, <argument pos:start="95:54" pos:end="95:93"><expr pos:start="95:54" pos:end="95:93"><name pos:start="95:54" pos:end="95:93"><name pos:start="95:54" pos:end="95:64">floor_setup</name><operator pos:start="95:65" pos:end="95:66">-&gt;</operator><name pos:start="95:67" pos:end="95:70">data</name><operator pos:start="95:71" pos:end="95:71">.</operator><name pos:start="95:72" pos:end="95:73">t1</name><operator pos:start="95:74" pos:end="95:74">.</operator><name pos:start="95:75" pos:end="95:90">class_masterbook</name><index pos:start="95:91" pos:end="95:93">[<expr pos:start="95:92" pos:end="95:92"><name pos:start="95:92" pos:end="95:92">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <for pos:start="101:17" pos:end="109:17">for<control pos:start="101:20" pos:end="101:76">(<init pos:start="101:21" pos:end="101:24"><expr pos:start="101:21" pos:end="101:23"><name pos:start="101:21" pos:end="101:21">k</name><operator pos:start="101:22" pos:end="101:22">=</operator><literal type="number" pos:start="101:23" pos:end="101:23">0</literal></expr>;</init><condition pos:start="101:25" pos:end="101:72"><expr pos:start="101:25" pos:end="101:71"><name pos:start="101:25" pos:end="101:25">k</name><operator pos:start="101:26" pos:end="101:26">&lt;</operator><operator pos:start="101:27" pos:end="101:27">(</operator><literal type="number" pos:start="101:28" pos:end="101:28">1</literal><operator pos:start="101:29" pos:end="101:30">&lt;&lt;</operator><name pos:start="101:31" pos:end="101:70"><name pos:start="101:31" pos:end="101:41">floor_setup</name><operator pos:start="101:42" pos:end="101:43">-&gt;</operator><name pos:start="101:44" pos:end="101:47">data</name><operator pos:start="101:48" pos:end="101:48">.</operator><name pos:start="101:49" pos:end="101:50">t1</name><operator pos:start="101:51" pos:end="101:51">.</operator><name pos:start="101:52" pos:end="101:67">class_subclasses</name><index pos:start="101:68" pos:end="101:70">[<expr pos:start="101:69" pos:end="101:69"><name pos:start="101:69" pos:end="101:69">j</name></expr>]</index></name><operator pos:start="101:71" pos:end="101:71">)</operator></expr>;</condition><incr pos:start="101:73" pos:end="101:75"><expr pos:start="101:73" pos:end="101:75"><operator pos:start="101:73" pos:end="101:74">++</operator><name pos:start="101:75" pos:end="101:75">k</name></expr></incr>)</control> <block pos:start="101:78" pos:end="109:17">{<block_content pos:start="103:21" pos:end="107:99">

                    <expr_stmt pos:start="103:21" pos:end="103:89"><expr pos:start="103:21" pos:end="103:88"><name pos:start="103:21" pos:end="103:61"><name pos:start="103:21" pos:end="103:31">floor_setup</name><operator pos:start="103:32" pos:end="103:33">-&gt;</operator><name pos:start="103:34" pos:end="103:37">data</name><operator pos:start="103:38" pos:end="103:38">.</operator><name pos:start="103:39" pos:end="103:40">t1</name><operator pos:start="103:41" pos:end="103:41">.</operator><name pos:start="103:42" pos:end="103:55">subclass_books</name><index pos:start="103:56" pos:end="103:58">[<expr pos:start="103:57" pos:end="103:57"><name pos:start="103:57" pos:end="103:57">j</name></expr>]</index><index pos:start="103:59" pos:end="103:61">[<expr pos:start="103:60" pos:end="103:60"><name pos:start="103:60" pos:end="103:60">k</name></expr>]</index></name><operator pos:start="103:62" pos:end="103:62">=</operator><operator pos:start="103:63" pos:end="103:63">(</operator><name pos:start="103:64" pos:end="103:70">int16_t</name><operator pos:start="103:71" pos:end="103:71">)</operator><call pos:start="103:72" pos:end="103:86"><name pos:start="103:72" pos:end="103:79">get_bits</name><argument_list pos:start="103:80" pos:end="103:86">(<argument pos:start="103:81" pos:end="103:82"><expr pos:start="103:81" pos:end="103:82"><name pos:start="103:81" pos:end="103:82">gb</name></expr></argument>, <argument pos:start="103:85" pos:end="103:85"><expr pos:start="103:85" pos:end="103:85"><literal type="number" pos:start="103:85" pos:end="103:85">8</literal></expr></argument>)</argument_list></call><operator pos:start="103:87" pos:end="103:87">-</operator><literal type="number" pos:start="103:88" pos:end="103:88">1</literal></expr>;</expr_stmt>



                    <expr_stmt pos:start="107:21" pos:end="107:99"><expr pos:start="107:21" pos:end="107:98"><call pos:start="107:21" pos:end="107:98"><name pos:start="107:21" pos:end="107:28">AV_DEBUG</name><argument_list pos:start="107:29" pos:end="107:98">(<argument pos:start="107:30" pos:end="107:51"><expr pos:start="107:30" pos:end="107:51"><literal type="string" pos:start="107:30" pos:end="107:51">"    book %d. : %d \n"</literal></expr></argument>, <argument pos:start="107:54" pos:end="107:54"><expr pos:start="107:54" pos:end="107:54"><name pos:start="107:54" pos:end="107:54">k</name></expr></argument>, <argument pos:start="107:57" pos:end="107:97"><expr pos:start="107:57" pos:end="107:97"><name pos:start="107:57" pos:end="107:97"><name pos:start="107:57" pos:end="107:67">floor_setup</name><operator pos:start="107:68" pos:end="107:69">-&gt;</operator><name pos:start="107:70" pos:end="107:73">data</name><operator pos:start="107:74" pos:end="107:74">.</operator><name pos:start="107:75" pos:end="107:76">t1</name><operator pos:start="107:77" pos:end="107:77">.</operator><name pos:start="107:78" pos:end="107:91">subclass_books</name><index pos:start="107:92" pos:end="107:94">[<expr pos:start="107:93" pos:end="107:93"><name pos:start="107:93" pos:end="107:93">j</name></expr>]</index><index pos:start="107:95" pos:end="107:97">[<expr pos:start="107:96" pos:end="107:96"><name pos:start="107:96" pos:end="107:96">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>



            <expr_stmt pos:start="115:13" pos:end="115:62"><expr pos:start="115:13" pos:end="115:61"><name pos:start="115:13" pos:end="115:43"><name pos:start="115:13" pos:end="115:23">floor_setup</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:29">data</name><operator pos:start="115:30" pos:end="115:30">.</operator><name pos:start="115:31" pos:end="115:32">t1</name><operator pos:start="115:33" pos:end="115:33">.</operator><name pos:start="115:34" pos:end="115:43">multiplier</name></name><operator pos:start="115:44" pos:end="115:44">=</operator><call pos:start="115:45" pos:end="115:59"><name pos:start="115:45" pos:end="115:52">get_bits</name><argument_list pos:start="115:53" pos:end="115:59">(<argument pos:start="115:54" pos:end="115:55"><expr pos:start="115:54" pos:end="115:55"><name pos:start="115:54" pos:end="115:55">gb</name></expr></argument>, <argument pos:start="115:58" pos:end="115:58"><expr pos:start="115:58" pos:end="115:58"><literal type="number" pos:start="115:58" pos:end="115:58">2</literal></expr></argument>)</argument_list></call><operator pos:start="115:60" pos:end="115:60">+</operator><literal type="number" pos:start="115:61" pos:end="115:61">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:46"><expr pos:start="117:13" pos:end="117:45"><name pos:start="117:13" pos:end="117:43"><name pos:start="117:13" pos:end="117:23">floor_setup</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:29">data</name><operator pos:start="117:30" pos:end="117:30">.</operator><name pos:start="117:31" pos:end="117:32">t1</name><operator pos:start="117:33" pos:end="117:33">.</operator><name pos:start="117:34" pos:end="117:43">x_list_dim</name></name><operator pos:start="117:44" pos:end="117:44">=</operator><literal type="number" pos:start="117:45" pos:end="117:45">2</literal></expr>;</expr_stmt>



            <for pos:start="121:13" pos:end="125:13">for<control pos:start="121:16" pos:end="121:58">(<init pos:start="121:17" pos:end="121:20"><expr pos:start="121:17" pos:end="121:19"><name pos:start="121:17" pos:end="121:17">j</name><operator pos:start="121:18" pos:end="121:18">=</operator><literal type="number" pos:start="121:19" pos:end="121:19">0</literal></expr>;</init><condition pos:start="121:21" pos:end="121:54"><expr pos:start="121:21" pos:end="121:53"><name pos:start="121:21" pos:end="121:21">j</name><operator pos:start="121:22" pos:end="121:22">&lt;</operator><name pos:start="121:23" pos:end="121:53"><name pos:start="121:23" pos:end="121:33">floor_setup</name><operator pos:start="121:34" pos:end="121:35">-&gt;</operator><name pos:start="121:36" pos:end="121:39">data</name><operator pos:start="121:40" pos:end="121:40">.</operator><name pos:start="121:41" pos:end="121:42">t1</name><operator pos:start="121:43" pos:end="121:43">.</operator><name pos:start="121:44" pos:end="121:53">partitions</name></name></expr>;</condition><incr pos:start="121:55" pos:end="121:57"><expr pos:start="121:55" pos:end="121:57"><operator pos:start="121:55" pos:end="121:56">++</operator><name pos:start="121:57" pos:end="121:57">j</name></expr></incr>)</control> <block pos:start="121:60" pos:end="125:13">{<block_content pos:start="123:17" pos:end="123:128">

                <expr_stmt pos:start="123:17" pos:end="123:128"><expr pos:start="123:17" pos:end="123:127"><name pos:start="123:17" pos:end="123:47"><name pos:start="123:17" pos:end="123:27">floor_setup</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:33">data</name><operator pos:start="123:34" pos:end="123:34">.</operator><name pos:start="123:35" pos:end="123:36">t1</name><operator pos:start="123:37" pos:end="123:37">.</operator><name pos:start="123:38" pos:end="123:47">x_list_dim</name></name><operator pos:start="123:48" pos:end="123:49">+=</operator><name pos:start="123:50" pos:end="123:127"><name pos:start="123:50" pos:end="123:60">floor_setup</name><operator pos:start="123:61" pos:end="123:62">-&gt;</operator><name pos:start="123:63" pos:end="123:66">data</name><operator pos:start="123:67" pos:end="123:67">.</operator><name pos:start="123:68" pos:end="123:69">t1</name><operator pos:start="123:70" pos:end="123:70">.</operator><name pos:start="123:71" pos:end="123:86">class_dimensions</name><index pos:start="123:87" pos:end="123:127">[<expr pos:start="123:88" pos:end="123:126"><name pos:start="123:88" pos:end="123:126"><name pos:start="123:88" pos:end="123:98">floor_setup</name><operator pos:start="123:99" pos:end="123:100">-&gt;</operator><name pos:start="123:101" pos:end="123:104">data</name><operator pos:start="123:105" pos:end="123:105">.</operator><name pos:start="123:106" pos:end="123:107">t1</name><operator pos:start="123:108" pos:end="123:108">.</operator><name pos:start="123:109" pos:end="123:123">partition_class</name><index pos:start="123:124" pos:end="123:126">[<expr pos:start="123:125" pos:end="123:125"><name pos:start="123:125" pos:end="123:125">j</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="129:13" pos:end="129:112"><expr pos:start="129:13" pos:end="129:111"><name pos:start="129:13" pos:end="129:37"><name pos:start="129:13" pos:end="129:23">floor_setup</name><operator pos:start="129:24" pos:end="129:25">-&gt;</operator><name pos:start="129:26" pos:end="129:29">data</name><operator pos:start="129:30" pos:end="129:30">.</operator><name pos:start="129:31" pos:end="129:32">t1</name><operator pos:start="129:33" pos:end="129:33">.</operator><name pos:start="129:34" pos:end="129:37">list</name></name><operator pos:start="129:38" pos:end="129:38">=</operator><call pos:start="129:39" pos:end="129:111"><name pos:start="129:39" pos:end="129:48">av_mallocz</name><argument_list pos:start="129:49" pos:end="129:111">(<argument pos:start="129:50" pos:end="129:110"><expr pos:start="129:50" pos:end="129:110"><name pos:start="129:50" pos:end="129:80"><name pos:start="129:50" pos:end="129:60">floor_setup</name><operator pos:start="129:61" pos:end="129:62">-&gt;</operator><name pos:start="129:63" pos:end="129:66">data</name><operator pos:start="129:67" pos:end="129:67">.</operator><name pos:start="129:68" pos:end="129:69">t1</name><operator pos:start="129:70" pos:end="129:70">.</operator><name pos:start="129:71" pos:end="129:80">x_list_dim</name></name> <operator pos:start="129:82" pos:end="129:82">*</operator> <sizeof pos:start="129:84" pos:end="129:110">sizeof<argument_list pos:start="129:90" pos:end="129:110">(<argument pos:start="129:91" pos:end="129:109"><expr pos:start="129:91" pos:end="129:109"><name pos:start="129:91" pos:end="129:109">vorbis_floor1_entry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>





            <expr_stmt pos:start="135:13" pos:end="135:38"><expr pos:start="135:13" pos:end="135:37"><name pos:start="135:13" pos:end="135:21">rangebits</name><operator pos:start="135:22" pos:end="135:22">=</operator><call pos:start="135:23" pos:end="135:37"><name pos:start="135:23" pos:end="135:30">get_bits</name><argument_list pos:start="135:31" pos:end="135:37">(<argument pos:start="135:32" pos:end="135:33"><expr pos:start="135:32" pos:end="135:33"><name pos:start="135:32" pos:end="135:33">gb</name></expr></argument>, <argument pos:start="135:36" pos:end="135:36"><expr pos:start="135:36" pos:end="135:36"><literal type="number" pos:start="135:36" pos:end="135:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:47"><expr pos:start="137:13" pos:end="137:46"><name pos:start="137:13" pos:end="137:40"><name pos:start="137:13" pos:end="137:23">floor_setup</name><operator pos:start="137:24" pos:end="137:25">-&gt;</operator><name pos:start="137:26" pos:end="137:29">data</name><operator pos:start="137:30" pos:end="137:30">.</operator><name pos:start="137:31" pos:end="137:32">t1</name><operator pos:start="137:33" pos:end="137:33">.</operator><name pos:start="137:34" pos:end="137:37">list</name><index pos:start="137:38" pos:end="137:40">[<expr pos:start="137:39" pos:end="137:39"><literal type="number" pos:start="137:39" pos:end="137:39">0</literal></expr>]</index></name><operator pos:start="137:41" pos:end="137:41">.</operator><name pos:start="137:42" pos:end="137:42">x</name> <operator pos:start="137:44" pos:end="137:44">=</operator> <literal type="number" pos:start="137:46" pos:end="137:46">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:60"><expr pos:start="139:13" pos:end="139:59"><name pos:start="139:13" pos:end="139:40"><name pos:start="139:13" pos:end="139:23">floor_setup</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:29">data</name><operator pos:start="139:30" pos:end="139:30">.</operator><name pos:start="139:31" pos:end="139:32">t1</name><operator pos:start="139:33" pos:end="139:33">.</operator><name pos:start="139:34" pos:end="139:37">list</name><index pos:start="139:38" pos:end="139:40">[<expr pos:start="139:39" pos:end="139:39"><literal type="number" pos:start="139:39" pos:end="139:39">1</literal></expr>]</index></name><operator pos:start="139:41" pos:end="139:41">.</operator><name pos:start="139:42" pos:end="139:42">x</name> <operator pos:start="139:44" pos:end="139:44">=</operator> <operator pos:start="139:46" pos:end="139:46">(</operator><literal type="number" pos:start="139:47" pos:end="139:47">1</literal><operator pos:start="139:48" pos:end="139:49">&lt;&lt;</operator><name pos:start="139:50" pos:end="139:58">rangebits</name><operator pos:start="139:59" pos:end="139:59">)</operator></expr>;</expr_stmt>



            <for pos:start="143:13" pos:end="155:13">for<control pos:start="143:16" pos:end="143:58">(<init pos:start="143:17" pos:end="143:20"><expr pos:start="143:17" pos:end="143:19"><name pos:start="143:17" pos:end="143:17">j</name><operator pos:start="143:18" pos:end="143:18">=</operator><literal type="number" pos:start="143:19" pos:end="143:19">0</literal></expr>;</init><condition pos:start="143:21" pos:end="143:54"><expr pos:start="143:21" pos:end="143:53"><name pos:start="143:21" pos:end="143:21">j</name><operator pos:start="143:22" pos:end="143:22">&lt;</operator><name pos:start="143:23" pos:end="143:53"><name pos:start="143:23" pos:end="143:33">floor_setup</name><operator pos:start="143:34" pos:end="143:35">-&gt;</operator><name pos:start="143:36" pos:end="143:39">data</name><operator pos:start="143:40" pos:end="143:40">.</operator><name pos:start="143:41" pos:end="143:42">t1</name><operator pos:start="143:43" pos:end="143:43">.</operator><name pos:start="143:44" pos:end="143:53">partitions</name></name></expr>;</condition><incr pos:start="143:55" pos:end="143:57"><expr pos:start="143:55" pos:end="143:57"><operator pos:start="143:55" pos:end="143:56">++</operator><name pos:start="143:57" pos:end="143:57">j</name></expr></incr>)</control> <block pos:start="143:60" pos:end="155:13">{<block_content pos:start="145:17" pos:end="153:17">

                <for pos:start="145:17" pos:end="153:17">for<control pos:start="145:20" pos:end="145:125">(<init pos:start="145:21" pos:end="145:24"><expr pos:start="145:21" pos:end="145:23"><name pos:start="145:21" pos:end="145:21">k</name><operator pos:start="145:22" pos:end="145:22">=</operator><literal type="number" pos:start="145:23" pos:end="145:23">0</literal></expr>;</init><condition pos:start="145:25" pos:end="145:105"><expr pos:start="145:25" pos:end="145:104"><name pos:start="145:25" pos:end="145:25">k</name><operator pos:start="145:26" pos:end="145:26">&lt;</operator><name pos:start="145:27" pos:end="145:104"><name pos:start="145:27" pos:end="145:37">floor_setup</name><operator pos:start="145:38" pos:end="145:39">-&gt;</operator><name pos:start="145:40" pos:end="145:43">data</name><operator pos:start="145:44" pos:end="145:44">.</operator><name pos:start="145:45" pos:end="145:46">t1</name><operator pos:start="145:47" pos:end="145:47">.</operator><name pos:start="145:48" pos:end="145:63">class_dimensions</name><index pos:start="145:64" pos:end="145:104">[<expr pos:start="145:65" pos:end="145:103"><name pos:start="145:65" pos:end="145:103"><name pos:start="145:65" pos:end="145:75">floor_setup</name><operator pos:start="145:76" pos:end="145:77">-&gt;</operator><name pos:start="145:78" pos:end="145:81">data</name><operator pos:start="145:82" pos:end="145:82">.</operator><name pos:start="145:83" pos:end="145:84">t1</name><operator pos:start="145:85" pos:end="145:85">.</operator><name pos:start="145:86" pos:end="145:100">partition_class</name><index pos:start="145:101" pos:end="145:103">[<expr pos:start="145:102" pos:end="145:102"><name pos:start="145:102" pos:end="145:102">j</name></expr>]</index></name></expr>]</index></name></expr>;</condition><incr pos:start="145:106" pos:end="145:124"><expr pos:start="145:106" pos:end="145:108"><operator pos:start="145:106" pos:end="145:107">++</operator><name pos:start="145:108" pos:end="145:108">k</name></expr><operator pos:start="145:109" pos:end="145:109">,</operator><expr pos:start="145:110" pos:end="145:124"><operator pos:start="145:110" pos:end="145:111">++</operator><name pos:start="145:112" pos:end="145:124">floor1_values</name></expr></incr>)</control> <block pos:start="145:127" pos:end="153:17">{<block_content pos:start="147:21" pos:end="151:118">

                    <expr_stmt pos:start="147:21" pos:end="147:87"><expr pos:start="147:21" pos:end="147:86"><name pos:start="147:21" pos:end="147:60"><name pos:start="147:21" pos:end="147:31">floor_setup</name><operator pos:start="147:32" pos:end="147:33">-&gt;</operator><name pos:start="147:34" pos:end="147:37">data</name><operator pos:start="147:38" pos:end="147:38">.</operator><name pos:start="147:39" pos:end="147:40">t1</name><operator pos:start="147:41" pos:end="147:41">.</operator><name pos:start="147:42" pos:end="147:45">list</name><index pos:start="147:46" pos:end="147:60">[<expr pos:start="147:47" pos:end="147:59"><name pos:start="147:47" pos:end="147:59">floor1_values</name></expr>]</index></name><operator pos:start="147:61" pos:end="147:61">.</operator><name pos:start="147:62" pos:end="147:62">x</name><operator pos:start="147:63" pos:end="147:63">=</operator><call pos:start="147:64" pos:end="147:86"><name pos:start="147:64" pos:end="147:71">get_bits</name><argument_list pos:start="147:72" pos:end="147:86">(<argument pos:start="147:73" pos:end="147:74"><expr pos:start="147:73" pos:end="147:74"><name pos:start="147:73" pos:end="147:74">gb</name></expr></argument>, <argument pos:start="147:77" pos:end="147:85"><expr pos:start="147:77" pos:end="147:85"><name pos:start="147:77" pos:end="147:85">rangebits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="151:21" pos:end="151:118"><expr pos:start="151:21" pos:end="151:117"><call pos:start="151:21" pos:end="151:117"><name pos:start="151:21" pos:end="151:28">AV_DEBUG</name><argument_list pos:start="151:29" pos:end="151:117">(<argument pos:start="151:30" pos:end="151:57"><expr pos:start="151:30" pos:end="151:57"><literal type="string" pos:start="151:30" pos:end="151:57">" %d. floor1 Y coord. %d \n"</literal></expr></argument>, <argument pos:start="151:60" pos:end="151:72"><expr pos:start="151:60" pos:end="151:72"><name pos:start="151:60" pos:end="151:72">floor1_values</name></expr></argument>, <argument pos:start="151:75" pos:end="151:116"><expr pos:start="151:75" pos:end="151:116"><name pos:start="151:75" pos:end="151:114"><name pos:start="151:75" pos:end="151:85">floor_setup</name><operator pos:start="151:86" pos:end="151:87">-&gt;</operator><name pos:start="151:88" pos:end="151:91">data</name><operator pos:start="151:92" pos:end="151:92">.</operator><name pos:start="151:93" pos:end="151:94">t1</name><operator pos:start="151:95" pos:end="151:95">.</operator><name pos:start="151:96" pos:end="151:99">list</name><index pos:start="151:100" pos:end="151:114">[<expr pos:start="151:101" pos:end="151:113"><name pos:start="151:101" pos:end="151:113">floor1_values</name></expr>]</index></name><operator pos:start="151:115" pos:end="151:115">.</operator><name pos:start="151:116" pos:end="151:116">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>



<comment type="line" pos:start="159:1" pos:end="159:58">// Precalculate order of x coordinates - needed for decode</comment>

            <expr_stmt pos:start="161:13" pos:end="161:100"><expr pos:start="161:13" pos:end="161:99"><call pos:start="161:13" pos:end="161:99"><name pos:start="161:13" pos:end="161:39">ff_vorbis_ready_floor1_list</name><argument_list pos:start="161:40" pos:end="161:99">(<argument pos:start="161:41" pos:end="161:65"><expr pos:start="161:41" pos:end="161:65"><name pos:start="161:41" pos:end="161:65"><name pos:start="161:41" pos:end="161:51">floor_setup</name><operator pos:start="161:52" pos:end="161:53">-&gt;</operator><name pos:start="161:54" pos:end="161:57">data</name><operator pos:start="161:58" pos:end="161:58">.</operator><name pos:start="161:59" pos:end="161:60">t1</name><operator pos:start="161:61" pos:end="161:61">.</operator><name pos:start="161:62" pos:end="161:65">list</name></name></expr></argument>, <argument pos:start="161:68" pos:end="161:98"><expr pos:start="161:68" pos:end="161:98"><name pos:start="161:68" pos:end="161:98"><name pos:start="161:68" pos:end="161:78">floor_setup</name><operator pos:start="161:79" pos:end="161:80">-&gt;</operator><name pos:start="161:81" pos:end="161:84">data</name><operator pos:start="161:85" pos:end="161:85">.</operator><name pos:start="161:86" pos:end="161:87">t1</name><operator pos:start="161:88" pos:end="161:88">.</operator><name pos:start="161:89" pos:end="161:98">x_list_dim</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if>

        <if type="elseif" pos:start="165:9" pos:end="307:9">else if<condition pos:start="165:16" pos:end="165:43">(<expr pos:start="165:17" pos:end="165:42"><name pos:start="165:17" pos:end="165:39"><name pos:start="165:17" pos:end="165:27">floor_setup</name><operator pos:start="165:28" pos:end="165:29">-&gt;</operator><name pos:start="165:30" pos:end="165:39">floor_type</name></name><operator pos:start="165:40" pos:end="165:41">==</operator><literal type="number" pos:start="165:42" pos:end="165:42">0</literal></expr>)</condition> <block pos:start="165:45" pos:end="307:9">{<block_content pos:start="167:13" pos:end="306:0">

            <decl_stmt pos:start="167:13" pos:end="167:44"><decl pos:start="167:13" pos:end="167:43"><type pos:start="167:13" pos:end="167:24"><name pos:start="167:13" pos:end="167:24">uint_fast8_t</name></type> <name pos:start="167:26" pos:end="167:41">max_codebook_dim</name><init pos:start="167:42" pos:end="167:43">=<expr pos:start="167:43" pos:end="167:43"><literal type="number" pos:start="167:43" pos:end="167:43">0</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="171:13" pos:end="171:53"><expr pos:start="171:13" pos:end="171:52"><name pos:start="171:13" pos:end="171:31"><name pos:start="171:13" pos:end="171:23">floor_setup</name><operator pos:start="171:24" pos:end="171:25">-&gt;</operator><name pos:start="171:26" pos:end="171:31">decode</name></name><operator pos:start="171:32" pos:end="171:32">=</operator><name pos:start="171:33" pos:end="171:52">vorbis_floor0_decode</name></expr>;</expr_stmt>



            <expr_stmt pos:start="175:13" pos:end="175:55"><expr pos:start="175:13" pos:end="175:54"><name pos:start="175:13" pos:end="175:38"><name pos:start="175:13" pos:end="175:23">floor_setup</name><operator pos:start="175:24" pos:end="175:25">-&gt;</operator><name pos:start="175:26" pos:end="175:29">data</name><operator pos:start="175:30" pos:end="175:30">.</operator><name pos:start="175:31" pos:end="175:32">t0</name><operator pos:start="175:33" pos:end="175:33">.</operator><name pos:start="175:34" pos:end="175:38">order</name></name><operator pos:start="175:39" pos:end="175:39">=</operator><call pos:start="175:40" pos:end="175:54"><name pos:start="175:40" pos:end="175:47">get_bits</name><argument_list pos:start="175:48" pos:end="175:54">(<argument pos:start="175:49" pos:end="175:50"><expr pos:start="175:49" pos:end="175:50"><name pos:start="175:49" pos:end="175:50">gb</name></expr></argument>, <argument pos:start="175:53" pos:end="175:53"><expr pos:start="175:53" pos:end="175:53"><literal type="number" pos:start="175:53" pos:end="175:53">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:55"><expr pos:start="177:13" pos:end="177:54"><name pos:start="177:13" pos:end="177:37"><name pos:start="177:13" pos:end="177:23">floor_setup</name><operator pos:start="177:24" pos:end="177:25">-&gt;</operator><name pos:start="177:26" pos:end="177:29">data</name><operator pos:start="177:30" pos:end="177:30">.</operator><name pos:start="177:31" pos:end="177:32">t0</name><operator pos:start="177:33" pos:end="177:33">.</operator><name pos:start="177:34" pos:end="177:37">rate</name></name><operator pos:start="177:38" pos:end="177:38">=</operator><call pos:start="177:39" pos:end="177:54"><name pos:start="177:39" pos:end="177:46">get_bits</name><argument_list pos:start="177:47" pos:end="177:54">(<argument pos:start="177:48" pos:end="177:49"><expr pos:start="177:48" pos:end="177:49"><name pos:start="177:48" pos:end="177:49">gb</name></expr></argument>, <argument pos:start="177:52" pos:end="177:53"><expr pos:start="177:52" pos:end="177:53"><literal type="number" pos:start="177:52" pos:end="177:53">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:64"><expr pos:start="179:13" pos:end="179:63"><name pos:start="179:13" pos:end="179:46"><name pos:start="179:13" pos:end="179:23">floor_setup</name><operator pos:start="179:24" pos:end="179:25">-&gt;</operator><name pos:start="179:26" pos:end="179:29">data</name><operator pos:start="179:30" pos:end="179:30">.</operator><name pos:start="179:31" pos:end="179:32">t0</name><operator pos:start="179:33" pos:end="179:33">.</operator><name pos:start="179:34" pos:end="179:46">bark_map_size</name></name><operator pos:start="179:47" pos:end="179:47">=</operator><call pos:start="179:48" pos:end="179:63"><name pos:start="179:48" pos:end="179:55">get_bits</name><argument_list pos:start="179:56" pos:end="179:63">(<argument pos:start="179:57" pos:end="179:58"><expr pos:start="179:57" pos:end="179:58"><name pos:start="179:57" pos:end="179:58">gb</name></expr></argument>, <argument pos:start="179:61" pos:end="179:62"><expr pos:start="179:61" pos:end="179:62"><literal type="number" pos:start="179:61" pos:end="179:62">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:64"><expr pos:start="181:13" pos:end="181:63"><name pos:start="181:13" pos:end="181:47"><name pos:start="181:13" pos:end="181:23">floor_setup</name><operator pos:start="181:24" pos:end="181:25">-&gt;</operator><name pos:start="181:26" pos:end="181:29">data</name><operator pos:start="181:30" pos:end="181:30">.</operator><name pos:start="181:31" pos:end="181:32">t0</name><operator pos:start="181:33" pos:end="181:33">.</operator><name pos:start="181:34" pos:end="181:47">amplitude_bits</name></name><operator pos:start="181:48" pos:end="181:48">=</operator><call pos:start="181:49" pos:end="181:63"><name pos:start="181:49" pos:end="181:56">get_bits</name><argument_list pos:start="181:57" pos:end="181:63">(<argument pos:start="181:58" pos:end="181:59"><expr pos:start="181:58" pos:end="181:59"><name pos:start="181:58" pos:end="181:59">gb</name></expr></argument>, <argument pos:start="181:62" pos:end="181:62"><expr pos:start="181:62" pos:end="181:62"><literal type="number" pos:start="181:62" pos:end="181:62">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="183:13" pos:end="185:58">/* zero would result in a div by zero later *

             * 2^0 - 1 == 0                             */</comment>

            <if_stmt pos:start="187:13" pos:end="195:13"><if pos:start="187:13" pos:end="195:13">if <condition pos:start="187:16" pos:end="187:57">(<expr pos:start="187:17" pos:end="187:56"><name pos:start="187:17" pos:end="187:51"><name pos:start="187:17" pos:end="187:27">floor_setup</name><operator pos:start="187:28" pos:end="187:29">-&gt;</operator><name pos:start="187:30" pos:end="187:33">data</name><operator pos:start="187:34" pos:end="187:34">.</operator><name pos:start="187:35" pos:end="187:36">t0</name><operator pos:start="187:37" pos:end="187:37">.</operator><name pos:start="187:38" pos:end="187:51">amplitude_bits</name></name> <operator pos:start="187:53" pos:end="187:54">==</operator> <literal type="number" pos:start="187:56" pos:end="187:56">0</literal></expr>)</condition> <block pos:start="187:59" pos:end="195:13">{<block_content pos:start="189:15" pos:end="193:23">

              <expr_stmt pos:start="189:15" pos:end="191:55"><expr pos:start="189:15" pos:end="191:54"><call pos:start="189:15" pos:end="191:54"><name pos:start="189:15" pos:end="189:20">av_log</name><argument_list pos:start="189:21" pos:end="191:54">(<argument pos:start="189:22" pos:end="189:35"><expr pos:start="189:22" pos:end="189:35"><name pos:start="189:22" pos:end="189:35"><name pos:start="189:22" pos:end="189:23">vc</name><operator pos:start="189:24" pos:end="189:25">-&gt;</operator><name pos:start="189:26" pos:end="189:35">avccontext</name></name></expr></argument>, <argument pos:start="189:38" pos:end="189:49"><expr pos:start="189:38" pos:end="189:49"><name pos:start="189:38" pos:end="189:49">AV_LOG_ERROR</name></expr></argument>,

                     <argument pos:start="191:22" pos:end="191:53"><expr pos:start="191:22" pos:end="191:53"><literal type="string" pos:start="191:22" pos:end="191:53">"Floor 0 amplitude bits is 0.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

              <return pos:start="193:15" pos:end="193:23">return <expr pos:start="193:22" pos:end="193:22"><literal type="number" pos:start="193:22" pos:end="193:22">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:66"><expr pos:start="197:13" pos:end="197:65"><name pos:start="197:13" pos:end="197:49"><name pos:start="197:13" pos:end="197:23">floor_setup</name><operator pos:start="197:24" pos:end="197:25">-&gt;</operator><name pos:start="197:26" pos:end="197:29">data</name><operator pos:start="197:30" pos:end="197:30">.</operator><name pos:start="197:31" pos:end="197:32">t0</name><operator pos:start="197:33" pos:end="197:33">.</operator><name pos:start="197:34" pos:end="197:49">amplitude_offset</name></name><operator pos:start="197:50" pos:end="197:50">=</operator><call pos:start="197:51" pos:end="197:65"><name pos:start="197:51" pos:end="197:58">get_bits</name><argument_list pos:start="197:59" pos:end="197:65">(<argument pos:start="197:60" pos:end="197:61"><expr pos:start="197:60" pos:end="197:61"><name pos:start="197:60" pos:end="197:61">gb</name></expr></argument>, <argument pos:start="197:64" pos:end="197:64"><expr pos:start="197:64" pos:end="197:64"><literal type="number" pos:start="197:64" pos:end="197:64">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:61"><expr pos:start="199:13" pos:end="199:60"><name pos:start="199:13" pos:end="199:42"><name pos:start="199:13" pos:end="199:23">floor_setup</name><operator pos:start="199:24" pos:end="199:25">-&gt;</operator><name pos:start="199:26" pos:end="199:29">data</name><operator pos:start="199:30" pos:end="199:30">.</operator><name pos:start="199:31" pos:end="199:32">t0</name><operator pos:start="199:33" pos:end="199:33">.</operator><name pos:start="199:34" pos:end="199:42">num_books</name></name><operator pos:start="199:43" pos:end="199:43">=</operator><call pos:start="199:44" pos:end="199:58"><name pos:start="199:44" pos:end="199:51">get_bits</name><argument_list pos:start="199:52" pos:end="199:58">(<argument pos:start="199:53" pos:end="199:54"><expr pos:start="199:53" pos:end="199:54"><name pos:start="199:53" pos:end="199:54">gb</name></expr></argument>, <argument pos:start="199:57" pos:end="199:57"><expr pos:start="199:57" pos:end="199:57"><literal type="number" pos:start="199:57" pos:end="199:57">4</literal></expr></argument>)</argument_list></call><operator pos:start="199:59" pos:end="199:59">+</operator><literal type="number" pos:start="199:60" pos:end="199:60">1</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="203:13" pos:end="203:43">/* allocate mem for booklist */</comment>

            <expr_stmt pos:start="205:13" pos:end="207:58"><expr pos:start="205:13" pos:end="207:57"><name pos:start="205:13" pos:end="205:42"><name pos:start="205:13" pos:end="205:23">floor_setup</name><operator pos:start="205:24" pos:end="205:25">-&gt;</operator><name pos:start="205:26" pos:end="205:29">data</name><operator pos:start="205:30" pos:end="205:30">.</operator><name pos:start="205:31" pos:end="205:32">t0</name><operator pos:start="205:33" pos:end="205:33">.</operator><name pos:start="205:34" pos:end="205:42">book_list</name></name><operator pos:start="205:43" pos:end="205:43">=</operator>

                <call pos:start="207:17" pos:end="207:57"><name pos:start="207:17" pos:end="207:25">av_malloc</name><argument_list pos:start="207:26" pos:end="207:57">(<argument pos:start="207:27" pos:end="207:56"><expr pos:start="207:27" pos:end="207:56"><name pos:start="207:27" pos:end="207:56"><name pos:start="207:27" pos:end="207:37">floor_setup</name><operator pos:start="207:38" pos:end="207:39">-&gt;</operator><name pos:start="207:40" pos:end="207:43">data</name><operator pos:start="207:44" pos:end="207:44">.</operator><name pos:start="207:45" pos:end="207:46">t0</name><operator pos:start="207:47" pos:end="207:47">.</operator><name pos:start="207:48" pos:end="207:56">num_books</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="209:13" pos:end="209:61"><if pos:start="209:13" pos:end="209:61">if<condition pos:start="209:15" pos:end="209:47">(<expr pos:start="209:16" pos:end="209:46"><operator pos:start="209:16" pos:end="209:16">!</operator><name pos:start="209:17" pos:end="209:46"><name pos:start="209:17" pos:end="209:27">floor_setup</name><operator pos:start="209:28" pos:end="209:29">-&gt;</operator><name pos:start="209:30" pos:end="209:33">data</name><operator pos:start="209:34" pos:end="209:34">.</operator><name pos:start="209:35" pos:end="209:36">t0</name><operator pos:start="209:37" pos:end="209:37">.</operator><name pos:start="209:38" pos:end="209:46">book_list</name></name></expr>)</condition> <block pos:start="209:49" pos:end="209:61">{<block_content pos:start="209:51" pos:end="209:59"> <return pos:start="209:51" pos:end="209:59">return <expr pos:start="209:58" pos:end="209:58"><literal type="number" pos:start="209:58" pos:end="209:58">1</literal></expr>;</return> </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="211:13" pos:end="211:35">/* read book indexes */</comment>

            <block pos:start="213:13" pos:end="235:13">{<block_content pos:start="215:17" pos:end="233:17">

                <decl_stmt pos:start="215:17" pos:end="215:24"><decl pos:start="215:17" pos:end="215:23"><type pos:start="215:17" pos:end="215:19"><name pos:start="215:17" pos:end="215:19">int</name></type> <name pos:start="215:21" pos:end="215:23">idx</name></decl>;</decl_stmt>

                <decl_stmt pos:start="217:17" pos:end="217:38"><decl pos:start="217:17" pos:end="217:37"><type pos:start="217:17" pos:end="217:28"><name pos:start="217:17" pos:end="217:28">uint_fast8_t</name></type> <name pos:start="217:30" pos:end="217:37">book_idx</name></decl>;</decl_stmt>

                <for pos:start="219:17" pos:end="233:17">for <control pos:start="219:21" pos:end="219:68">(<init pos:start="219:22" pos:end="219:27"><expr pos:start="219:22" pos:end="219:26"><name pos:start="219:22" pos:end="219:24">idx</name><operator pos:start="219:25" pos:end="219:25">=</operator><literal type="number" pos:start="219:26" pos:end="219:26">0</literal></expr>;</init><condition pos:start="219:28" pos:end="219:62"><expr pos:start="219:28" pos:end="219:61"><name pos:start="219:28" pos:end="219:30">idx</name><operator pos:start="219:31" pos:end="219:31">&lt;</operator><name pos:start="219:32" pos:end="219:61"><name pos:start="219:32" pos:end="219:42">floor_setup</name><operator pos:start="219:43" pos:end="219:44">-&gt;</operator><name pos:start="219:45" pos:end="219:48">data</name><operator pos:start="219:49" pos:end="219:49">.</operator><name pos:start="219:50" pos:end="219:51">t0</name><operator pos:start="219:52" pos:end="219:52">.</operator><name pos:start="219:53" pos:end="219:61">num_books</name></name></expr>;</condition><incr pos:start="219:63" pos:end="219:67"><expr pos:start="219:63" pos:end="219:67"><operator pos:start="219:63" pos:end="219:64">++</operator><name pos:start="219:65" pos:end="219:67">idx</name></expr></incr>)</control> <block pos:start="219:70" pos:end="233:17">{<block_content pos:start="221:21" pos:end="231:76">

                    <expr_stmt pos:start="221:21" pos:end="221:45"><expr pos:start="221:21" pos:end="221:44"><name pos:start="221:21" pos:end="221:28">book_idx</name><operator pos:start="221:29" pos:end="221:29">=</operator><call pos:start="221:30" pos:end="221:44"><name pos:start="221:30" pos:end="221:37">get_bits</name><argument_list pos:start="221:38" pos:end="221:44">(<argument pos:start="221:39" pos:end="221:40"><expr pos:start="221:39" pos:end="221:40"><name pos:start="221:39" pos:end="221:40">gb</name></expr></argument>, <argument pos:start="221:43" pos:end="221:43"><expr pos:start="221:43" pos:end="221:43"><literal type="number" pos:start="221:43" pos:end="221:43">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="223:21" pos:end="225:33"><if pos:start="223:21" pos:end="225:33">if <condition pos:start="223:24" pos:end="223:53">(<expr pos:start="223:25" pos:end="223:52"><name pos:start="223:25" pos:end="223:32">book_idx</name><operator pos:start="223:33" pos:end="223:34">&gt;=</operator><name pos:start="223:35" pos:end="223:52"><name pos:start="223:35" pos:end="223:36">vc</name><operator pos:start="223:37" pos:end="223:38">-&gt;</operator><name pos:start="223:39" pos:end="223:52">codebook_count</name></name></expr>)</condition><block type="pseudo" pos:start="225:25" pos:end="225:33"><block_content pos:start="225:25" pos:end="225:33">

                        <return pos:start="225:25" pos:end="225:33">return <expr pos:start="225:32" pos:end="225:32"><literal type="number" pos:start="225:32" pos:end="225:32">1</literal></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="227:21" pos:end="227:65"><expr pos:start="227:21" pos:end="227:64"><name pos:start="227:21" pos:end="227:55"><name pos:start="227:21" pos:end="227:31">floor_setup</name><operator pos:start="227:32" pos:end="227:33">-&gt;</operator><name pos:start="227:34" pos:end="227:37">data</name><operator pos:start="227:38" pos:end="227:38">.</operator><name pos:start="227:39" pos:end="227:40">t0</name><operator pos:start="227:41" pos:end="227:41">.</operator><name pos:start="227:42" pos:end="227:50">book_list</name><index pos:start="227:51" pos:end="227:55">[<expr pos:start="227:52" pos:end="227:54"><name pos:start="227:52" pos:end="227:54">idx</name></expr>]</index></name><operator pos:start="227:56" pos:end="227:56">=</operator><name pos:start="227:57" pos:end="227:64">book_idx</name></expr>;</expr_stmt>

                    <if_stmt pos:start="229:21" pos:end="231:76"><if pos:start="229:21" pos:end="231:76">if <condition pos:start="229:24" pos:end="229:78">(<expr pos:start="229:25" pos:end="229:77"><name pos:start="229:25" pos:end="229:47"><name pos:start="229:25" pos:end="229:26">vc</name><operator pos:start="229:27" pos:end="229:28">-&gt;</operator><name pos:start="229:29" pos:end="229:37">codebooks</name><index pos:start="229:38" pos:end="229:47">[<expr pos:start="229:39" pos:end="229:46"><name pos:start="229:39" pos:end="229:46">book_idx</name></expr>]</index></name><operator pos:start="229:48" pos:end="229:48">.</operator><name pos:start="229:49" pos:end="229:58">dimensions</name> <operator pos:start="229:60" pos:end="229:60">&gt;</operator> <name pos:start="229:62" pos:end="229:77">max_codebook_dim</name></expr>)</condition><block type="pseudo" pos:start="231:25" pos:end="231:76"><block_content pos:start="231:25" pos:end="231:76">

                        <expr_stmt pos:start="231:25" pos:end="231:76"><expr pos:start="231:25" pos:end="231:75"><name pos:start="231:25" pos:end="231:40">max_codebook_dim</name><operator pos:start="231:41" pos:end="231:41">=</operator><name pos:start="231:42" pos:end="231:64"><name pos:start="231:42" pos:end="231:43">vc</name><operator pos:start="231:44" pos:end="231:45">-&gt;</operator><name pos:start="231:46" pos:end="231:54">codebooks</name><index pos:start="231:55" pos:end="231:64">[<expr pos:start="231:56" pos:end="231:63"><name pos:start="231:56" pos:end="231:63">book_idx</name></expr>]</index></name><operator pos:start="231:65" pos:end="231:65">.</operator><name pos:start="231:66" pos:end="231:75">dimensions</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block>



            <expr_stmt pos:start="239:13" pos:end="239:32"><expr pos:start="239:13" pos:end="239:31"><call pos:start="239:13" pos:end="239:31"><name pos:start="239:13" pos:end="239:22">create_map</name><argument_list pos:start="239:23" pos:end="239:31">( <argument pos:start="239:25" pos:end="239:26"><expr pos:start="239:25" pos:end="239:26"><name pos:start="239:25" pos:end="239:26">vc</name></expr></argument>, <argument pos:start="239:29" pos:end="239:29"><expr pos:start="239:29" pos:end="239:29"><name pos:start="239:29" pos:end="239:29">i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="243:13" pos:end="243:51">/* allocate mem for lsp coefficients */</comment>

            <block pos:start="245:13" pos:end="264:0">{<block_content pos:start="251:17" pos:end="257:59">

                <comment type="block" pos:start="247:17" pos:end="249:73">/* codebook dim is for padding if codebook dim doesn't *

                 * divide order+1 then we need to read more data       */</comment>

                <expr_stmt pos:start="251:17" pos:end="255:47"><expr pos:start="251:17" pos:end="255:46"><name pos:start="251:17" pos:end="251:40"><name pos:start="251:17" pos:end="251:27">floor_setup</name><operator pos:start="251:28" pos:end="251:29">-&gt;</operator><name pos:start="251:30" pos:end="251:33">data</name><operator pos:start="251:34" pos:end="251:34">.</operator><name pos:start="251:35" pos:end="251:36">t0</name><operator pos:start="251:37" pos:end="251:37">.</operator><name pos:start="251:38" pos:end="251:40">lsp</name></name><operator pos:start="251:41" pos:end="251:41">=</operator>

                    <call pos:start="253:21" pos:end="255:46"><name pos:start="253:21" pos:end="253:29">av_malloc</name><argument_list pos:start="253:30" pos:end="255:46">(<argument pos:start="253:31" pos:end="255:45"><expr pos:start="253:31" pos:end="255:45"><operator pos:start="253:31" pos:end="253:31">(</operator><name pos:start="253:32" pos:end="253:57"><name pos:start="253:32" pos:end="253:42">floor_setup</name><operator pos:start="253:43" pos:end="253:44">-&gt;</operator><name pos:start="253:45" pos:end="253:48">data</name><operator pos:start="253:49" pos:end="253:49">.</operator><name pos:start="253:50" pos:end="253:51">t0</name><operator pos:start="253:52" pos:end="253:52">.</operator><name pos:start="253:53" pos:end="253:57">order</name></name><operator pos:start="253:58" pos:end="253:58">+</operator><literal type="number" pos:start="253:59" pos:end="253:61">1</literal> <operator pos:start="253:61" pos:end="253:61">+</operator> <name pos:start="253:63" pos:end="253:78">max_codebook_dim</name><operator pos:start="253:79" pos:end="253:79">)</operator>

                              <operator pos:start="255:31" pos:end="255:31">*</operator> <sizeof pos:start="255:33" pos:end="255:45">sizeof<argument_list pos:start="255:39" pos:end="255:45">(<argument pos:start="255:40" pos:end="255:44"><expr pos:start="255:40" pos:end="255:44"><name pos:start="255:40" pos:end="255:44">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="257:17" pos:end="257:59"><if pos:start="257:17" pos:end="257:59">if<condition pos:start="257:19" pos:end="257:45">(<expr pos:start="257:20" pos:end="257:44"><operator pos:start="257:20" pos:end="257:20">!</operator><name pos:start="257:21" pos:end="257:44"><name pos:start="257:21" pos:end="257:31">floor_setup</name><operator pos:start="257:32" pos:end="257:33">-&gt;</operator><name pos:start="257:34" pos:end="257:37">data</name><operator pos:start="257:38" pos:end="257:38">.</operator><name pos:start="257:39" pos:end="257:40">t0</name><operator pos:start="257:41" pos:end="257:41">.</operator><name pos:start="257:42" pos:end="257:44">lsp</name></name></expr>)</condition> <block pos:start="257:47" pos:end="257:59">{<block_content pos:start="257:49" pos:end="257:57"> <return pos:start="257:49" pos:end="257:57">return <expr pos:start="257:56" pos:end="257:56"><literal type="number" pos:start="257:56" pos:end="257:56">1</literal></expr>;</return> </block_content>}</block></if></if_stmt>

            </block_content>}</block>



<cpp:ifdef pos:start="263:1" pos:end="263:14">#<cpp:directive pos:start="263:2" pos:end="263:6">ifdef</cpp:directive> <name pos:start="263:8" pos:end="263:14">V_DEBUG</name></cpp:ifdef> <comment type="block" pos:start="263:16" pos:end="263:48">/* debug output parsed headers */</comment>

            <expr_stmt pos:start="265:13" pos:end="265:71"><expr pos:start="265:13" pos:end="265:70"><call pos:start="265:13" pos:end="265:70"><name pos:start="265:13" pos:end="265:20">AV_DEBUG</name><argument_list pos:start="265:21" pos:end="265:70">(<argument pos:start="265:22" pos:end="265:41"><expr pos:start="265:22" pos:end="265:41"><literal type="string" pos:start="265:22" pos:end="265:41">"floor0 order: %u\n"</literal></expr></argument>, <argument pos:start="265:44" pos:end="265:69"><expr pos:start="265:44" pos:end="265:69"><name pos:start="265:44" pos:end="265:69"><name pos:start="265:44" pos:end="265:54">floor_setup</name><operator pos:start="265:55" pos:end="265:56">-&gt;</operator><name pos:start="265:57" pos:end="265:60">data</name><operator pos:start="265:61" pos:end="265:61">.</operator><name pos:start="265:62" pos:end="265:63">t0</name><operator pos:start="265:64" pos:end="265:64">.</operator><name pos:start="265:65" pos:end="265:69">order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:69"><expr pos:start="267:13" pos:end="267:68"><call pos:start="267:13" pos:end="267:68"><name pos:start="267:13" pos:end="267:20">AV_DEBUG</name><argument_list pos:start="267:21" pos:end="267:68">(<argument pos:start="267:22" pos:end="267:40"><expr pos:start="267:22" pos:end="267:40"><literal type="string" pos:start="267:22" pos:end="267:40">"floor0 rate: %u\n"</literal></expr></argument>, <argument pos:start="267:43" pos:end="267:67"><expr pos:start="267:43" pos:end="267:67"><name pos:start="267:43" pos:end="267:67"><name pos:start="267:43" pos:end="267:53">floor_setup</name><operator pos:start="267:54" pos:end="267:55">-&gt;</operator><name pos:start="267:56" pos:end="267:59">data</name><operator pos:start="267:60" pos:end="267:60">.</operator><name pos:start="267:61" pos:end="267:62">t0</name><operator pos:start="267:63" pos:end="267:63">.</operator><name pos:start="267:64" pos:end="267:67">rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="271:50"><expr pos:start="269:13" pos:end="271:49"><call pos:start="269:13" pos:end="271:49"><name pos:start="269:13" pos:end="269:20">AV_DEBUG</name><argument_list pos:start="269:21" pos:end="271:49">(<argument pos:start="269:22" pos:end="269:49"><expr pos:start="269:22" pos:end="269:49"><literal type="string" pos:start="269:22" pos:end="269:49">"floor0 bark map size: %u\n"</literal></expr></argument>,

              <argument pos:start="271:15" pos:end="271:48"><expr pos:start="271:15" pos:end="271:48"><name pos:start="271:15" pos:end="271:48"><name pos:start="271:15" pos:end="271:25">floor_setup</name><operator pos:start="271:26" pos:end="271:27">-&gt;</operator><name pos:start="271:28" pos:end="271:31">data</name><operator pos:start="271:32" pos:end="271:32">.</operator><name pos:start="271:33" pos:end="271:34">t0</name><operator pos:start="271:35" pos:end="271:35">.</operator><name pos:start="271:36" pos:end="271:48">bark_map_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="275:51"><expr pos:start="273:13" pos:end="275:50"><call pos:start="273:13" pos:end="275:50"><name pos:start="273:13" pos:end="273:20">AV_DEBUG</name><argument_list pos:start="273:21" pos:end="275:50">(<argument pos:start="273:22" pos:end="273:50"><expr pos:start="273:22" pos:end="273:50"><literal type="string" pos:start="273:22" pos:end="273:50">"floor0 amplitude bits: %u\n"</literal></expr></argument>,

              <argument pos:start="275:15" pos:end="275:49"><expr pos:start="275:15" pos:end="275:49"><name pos:start="275:15" pos:end="275:49"><name pos:start="275:15" pos:end="275:25">floor_setup</name><operator pos:start="275:26" pos:end="275:27">-&gt;</operator><name pos:start="275:28" pos:end="275:31">data</name><operator pos:start="275:32" pos:end="275:32">.</operator><name pos:start="275:33" pos:end="275:34">t0</name><operator pos:start="275:35" pos:end="275:35">.</operator><name pos:start="275:36" pos:end="275:49">amplitude_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="279:53"><expr pos:start="277:13" pos:end="279:52"><call pos:start="277:13" pos:end="279:52"><name pos:start="277:13" pos:end="277:20">AV_DEBUG</name><argument_list pos:start="277:21" pos:end="279:52">(<argument pos:start="277:22" pos:end="277:52"><expr pos:start="277:22" pos:end="277:52"><literal type="string" pos:start="277:22" pos:end="277:52">"floor0 amplitude offset: %u\n"</literal></expr></argument>,

              <argument pos:start="279:15" pos:end="279:51"><expr pos:start="279:15" pos:end="279:51"><name pos:start="279:15" pos:end="279:51"><name pos:start="279:15" pos:end="279:25">floor_setup</name><operator pos:start="279:26" pos:end="279:27">-&gt;</operator><name pos:start="279:28" pos:end="279:31">data</name><operator pos:start="279:32" pos:end="279:32">.</operator><name pos:start="279:33" pos:end="279:34">t0</name><operator pos:start="279:35" pos:end="279:35">.</operator><name pos:start="279:36" pos:end="279:51">amplitude_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="283:46"><expr pos:start="281:13" pos:end="283:45"><call pos:start="281:13" pos:end="283:45"><name pos:start="281:13" pos:end="281:20">AV_DEBUG</name><argument_list pos:start="281:21" pos:end="283:45">(<argument pos:start="281:22" pos:end="281:51"><expr pos:start="281:22" pos:end="281:51"><literal type="string" pos:start="281:22" pos:end="281:51">"floor0 number of books: %u\n"</literal></expr></argument>,

              <argument pos:start="283:15" pos:end="283:44"><expr pos:start="283:15" pos:end="283:44"><name pos:start="283:15" pos:end="283:44"><name pos:start="283:15" pos:end="283:25">floor_setup</name><operator pos:start="283:26" pos:end="283:27">-&gt;</operator><name pos:start="283:28" pos:end="283:31">data</name><operator pos:start="283:32" pos:end="283:32">.</operator><name pos:start="283:33" pos:end="283:34">t0</name><operator pos:start="283:35" pos:end="283:35">.</operator><name pos:start="283:36" pos:end="283:44">num_books</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="287:46"><expr pos:start="285:13" pos:end="287:45"><call pos:start="285:13" pos:end="287:45"><name pos:start="285:13" pos:end="285:20">AV_DEBUG</name><argument_list pos:start="285:21" pos:end="287:45">(<argument pos:start="285:22" pos:end="285:53"><expr pos:start="285:22" pos:end="285:53"><literal type="string" pos:start="285:22" pos:end="285:53">"floor0 book list pointer: %p\n"</literal></expr></argument>,

              <argument pos:start="287:15" pos:end="287:44"><expr pos:start="287:15" pos:end="287:44"><name pos:start="287:15" pos:end="287:44"><name pos:start="287:15" pos:end="287:25">floor_setup</name><operator pos:start="287:26" pos:end="287:27">-&gt;</operator><name pos:start="287:28" pos:end="287:31">data</name><operator pos:start="287:32" pos:end="287:32">.</operator><name pos:start="287:33" pos:end="287:34">t0</name><operator pos:start="287:35" pos:end="287:35">.</operator><name pos:start="287:36" pos:end="287:44">book_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="289:13" pos:end="306:0">{<block_content pos:start="291:15" pos:end="301:15">

              <decl_stmt pos:start="291:15" pos:end="291:22"><decl pos:start="291:15" pos:end="291:21"><type pos:start="291:15" pos:end="291:17"><name pos:start="291:15" pos:end="291:17">int</name></type> <name pos:start="291:19" pos:end="291:21">idx</name></decl>;</decl_stmt>

              <for pos:start="293:15" pos:end="301:15">for <control pos:start="293:19" pos:end="293:66">(<init pos:start="293:20" pos:end="293:25"><expr pos:start="293:20" pos:end="293:24"><name pos:start="293:20" pos:end="293:22">idx</name><operator pos:start="293:23" pos:end="293:23">=</operator><literal type="number" pos:start="293:24" pos:end="293:24">0</literal></expr>;</init><condition pos:start="293:26" pos:end="293:60"><expr pos:start="293:26" pos:end="293:59"><name pos:start="293:26" pos:end="293:28">idx</name><operator pos:start="293:29" pos:end="293:29">&lt;</operator><name pos:start="293:30" pos:end="293:59"><name pos:start="293:30" pos:end="293:40">floor_setup</name><operator pos:start="293:41" pos:end="293:42">-&gt;</operator><name pos:start="293:43" pos:end="293:46">data</name><operator pos:start="293:47" pos:end="293:47">.</operator><name pos:start="293:48" pos:end="293:49">t0</name><operator pos:start="293:50" pos:end="293:50">.</operator><name pos:start="293:51" pos:end="293:59">num_books</name></name></expr>;</condition><incr pos:start="293:61" pos:end="293:65"><expr pos:start="293:61" pos:end="293:65"><operator pos:start="293:61" pos:end="293:62">++</operator><name pos:start="293:63" pos:end="293:65">idx</name></expr></incr>)</control> <block pos:start="293:68" pos:end="301:15">{<block_content pos:start="295:17" pos:end="299:56">

                <expr_stmt pos:start="295:17" pos:end="299:56"><expr pos:start="295:17" pos:end="299:55"><call pos:start="295:17" pos:end="299:55"><name pos:start="295:17" pos:end="295:24">AV_DEBUG</name><argument_list pos:start="295:25" pos:end="299:55">( <argument pos:start="295:27" pos:end="295:43"><expr pos:start="295:27" pos:end="295:43"><literal type="string" pos:start="295:27" pos:end="295:43">"  Book %d: %u\n"</literal></expr></argument>,

                  <argument pos:start="297:19" pos:end="297:23"><expr pos:start="297:19" pos:end="297:23"><name pos:start="297:19" pos:end="297:21">idx</name><operator pos:start="297:22" pos:end="297:22">+</operator><literal type="number" pos:start="297:23" pos:end="297:23">1</literal></expr></argument>,

                  <argument pos:start="299:19" pos:end="299:53"><expr pos:start="299:19" pos:end="299:53"><name pos:start="299:19" pos:end="299:53"><name pos:start="299:19" pos:end="299:29">floor_setup</name><operator pos:start="299:30" pos:end="299:31">-&gt;</operator><name pos:start="299:32" pos:end="299:35">data</name><operator pos:start="299:36" pos:end="299:36">.</operator><name pos:start="299:37" pos:end="299:38">t0</name><operator pos:start="299:39" pos:end="299:39">.</operator><name pos:start="299:40" pos:end="299:48">book_list</name><index pos:start="299:49" pos:end="299:53">[<expr pos:start="299:50" pos:end="299:52"><name pos:start="299:50" pos:end="299:52">idx</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

              </block_content>}</block></for>

            </block_content>}</block>

<cpp:endif pos:start="305:1" pos:end="305:6">#<cpp:directive pos:start="305:2" pos:end="305:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if>

        <else pos:start="309:9" pos:end="315:9">else <block pos:start="309:14" pos:end="315:9">{<block_content pos:start="311:13" pos:end="313:21">

            <expr_stmt pos:start="311:13" pos:end="311:74"><expr pos:start="311:13" pos:end="311:73"><call pos:start="311:13" pos:end="311:73"><name pos:start="311:13" pos:end="311:18">av_log</name><argument_list pos:start="311:19" pos:end="311:73">(<argument pos:start="311:20" pos:end="311:33"><expr pos:start="311:20" pos:end="311:33"><name pos:start="311:20" pos:end="311:33"><name pos:start="311:20" pos:end="311:21">vc</name><operator pos:start="311:22" pos:end="311:23">-&gt;</operator><name pos:start="311:24" pos:end="311:33">avccontext</name></name></expr></argument>, <argument pos:start="311:36" pos:end="311:47"><expr pos:start="311:36" pos:end="311:47"><name pos:start="311:36" pos:end="311:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="311:50" pos:end="311:72"><expr pos:start="311:50" pos:end="311:72"><literal type="string" pos:start="311:50" pos:end="311:72">"Invalid floor type!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="313:13" pos:end="313:21">return <expr pos:start="313:20" pos:end="313:20"><literal type="number" pos:start="313:20" pos:end="313:20">1</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <return pos:start="319:5" pos:end="319:13">return <expr pos:start="319:12" pos:end="319:12"><literal type="number" pos:start="319:12" pos:end="319:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
