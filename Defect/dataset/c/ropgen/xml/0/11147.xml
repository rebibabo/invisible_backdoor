<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11147.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="27:1"><decl pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">GCC_FMT_ATTR</name><argument_list pos:start="1:25" pos:end="1:30">(<argument pos:start="1:26" pos:end="1:26"><expr pos:start="1:26" pos:end="1:26"><literal type="number" pos:start="1:26" pos:end="1:26">3</literal></expr></argument>, <argument pos:start="1:29" pos:end="1:29"><expr pos:start="1:29" pos:end="1:29"><literal type="number" pos:start="1:29" pos:end="1:29">4</literal></expr></argument>)</argument_list> <name pos:start="1:32" pos:end="1:42">parse_error</name><argument_list pos:start="1:43" pos:end="3:80">(<argument pos:start="1:44" pos:end="1:66"><expr pos:start="1:44" pos:end="1:66"><name pos:start="1:44" pos:end="1:60">JSONParserContext</name> <operator pos:start="1:62" pos:end="1:62">*</operator><name pos:start="1:63" pos:end="1:66">ctxt</name></expr></argument>,

                                           <argument pos:start="3:44" pos:end="3:57"><expr pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:50">QObject</name> <operator pos:start="3:52" pos:end="3:52">*</operator><name pos:start="3:53" pos:end="3:57">token</name></expr></argument>, <argument pos:start="3:60" pos:end="3:74"><expr pos:start="3:60" pos:end="3:74"><specifier pos:start="3:60" pos:end="3:64">const</specifier> <name pos:start="3:66" pos:end="3:69">char</name> <operator pos:start="3:71" pos:end="3:71">*</operator><name pos:start="3:72" pos:end="3:74">msg</name></expr></argument>, <argument pos:start="3:77" pos:end="3:79"><expr pos:start="3:77" pos:end="3:79"><operator pos:start="3:77" pos:end="3:79">...</operator></expr></argument>)</argument_list>

<block pos:start="5:1" pos:end="27:1">{<block_content pos:start="7:5" pos:end="25:60">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">va_list</name></type> <name pos:start="7:13" pos:end="7:14">ap</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:22"><name pos:start="9:10" pos:end="9:16">message</name><index pos:start="9:17" pos:end="9:22">[<expr pos:start="9:18" pos:end="9:21"><literal type="number" pos:start="9:18" pos:end="9:21">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><call pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:12">va_start</name><argument_list pos:start="11:13" pos:end="11:21">(<argument pos:start="11:14" pos:end="11:15"><expr pos:start="11:14" pos:end="11:15"><name pos:start="11:14" pos:end="11:15">ap</name></expr></argument>, <argument pos:start="11:18" pos:end="11:20"><expr pos:start="11:18" pos:end="11:20"><name pos:start="11:18" pos:end="11:20">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:49"><expr pos:start="13:5" pos:end="13:48"><call pos:start="13:5" pos:end="13:48"><name pos:start="13:5" pos:end="13:13">vsnprintf</name><argument_list pos:start="13:14" pos:end="13:48">(<argument pos:start="13:15" pos:end="13:21"><expr pos:start="13:15" pos:end="13:21"><name pos:start="13:15" pos:end="13:21">message</name></expr></argument>, <argument pos:start="13:24" pos:end="13:38"><expr pos:start="13:24" pos:end="13:38"><sizeof pos:start="13:24" pos:end="13:38">sizeof<argument_list pos:start="13:30" pos:end="13:38">(<argument pos:start="13:31" pos:end="13:37"><expr pos:start="13:31" pos:end="13:37"><name pos:start="13:31" pos:end="13:37">message</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="13:41" pos:end="13:43"><expr pos:start="13:41" pos:end="13:43"><name pos:start="13:41" pos:end="13:43">msg</name></expr></argument>, <argument pos:start="13:46" pos:end="13:47"><expr pos:start="13:46" pos:end="13:47"><name pos:start="13:46" pos:end="13:47">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:15"><expr pos:start="15:5" pos:end="15:14"><call pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:10">va_end</name><argument_list pos:start="15:11" pos:end="15:14">(<argument pos:start="15:12" pos:end="15:13"><expr pos:start="15:12" pos:end="15:13"><name pos:start="15:12" pos:end="15:13">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:18">(<expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:12">ctxt</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:17">err</name></name></expr>)</condition> <block pos:start="17:20" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:25">

        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><call pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:18">error_free</name><argument_list pos:start="19:19" pos:end="19:29">(<argument pos:start="19:20" pos:end="19:28"><expr pos:start="19:20" pos:end="19:28"><name pos:start="19:20" pos:end="19:28"><name pos:start="19:20" pos:end="19:23">ctxt</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:28">err</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:25"><expr pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:12">ctxt</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:17">err</name></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:24">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:60"><expr pos:start="25:5" pos:end="25:59"><call pos:start="25:5" pos:end="25:59"><name pos:start="25:5" pos:end="25:14">error_setg</name><argument_list pos:start="25:15" pos:end="25:59">(<argument pos:start="25:16" pos:end="25:25"><expr pos:start="25:16" pos:end="25:25"><operator pos:start="25:16" pos:end="25:16">&amp;</operator><name pos:start="25:17" pos:end="25:25"><name pos:start="25:17" pos:end="25:20">ctxt</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:25">err</name></name></expr></argument>, <argument pos:start="25:28" pos:end="25:49"><expr pos:start="25:28" pos:end="25:49"><literal type="string" pos:start="25:28" pos:end="25:49">"JSON parse error, %s"</literal></expr></argument>, <argument pos:start="25:52" pos:end="25:58"><expr pos:start="25:52" pos:end="25:58"><name pos:start="25:52" pos:end="25:58">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></decl></decl_stmt>
</unit>
