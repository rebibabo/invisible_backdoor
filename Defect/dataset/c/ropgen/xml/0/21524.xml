<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21524.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">numa_node_parse_cpus</name><parameter_list pos:start="1:33" pos:end="1:62">(<parameter pos:start="1:34" pos:end="1:43"><decl pos:start="1:34" pos:end="1:43"><type pos:start="1:34" pos:end="1:43"><name pos:start="1:34" pos:end="1:36">int</name></type> <name pos:start="1:38" pos:end="1:43">nodenr</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">cpus</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:62">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:16">endptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">long</name> <name pos:start="7:19" pos:end="7:22">long</name></type> <name pos:start="7:24" pos:end="7:28">value</name></decl>, <decl pos:start="7:31" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:22"/><name pos:start="7:31" pos:end="7:38">endvalue</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:40"><expr pos:start="11:5" pos:end="11:39"><name pos:start="11:5" pos:end="11:9">value</name> <operator pos:start="11:11" pos:end="11:11">=</operator> <call pos:start="11:13" pos:end="11:39"><name pos:start="11:13" pos:end="11:20">strtoull</name><argument_list pos:start="11:21" pos:end="11:39">(<argument pos:start="11:22" pos:end="11:25"><expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">cpus</name></expr></argument>, <argument pos:start="11:28" pos:end="11:34"><expr pos:start="11:28" pos:end="11:34"><operator pos:start="11:28" pos:end="11:28">&amp;</operator><name pos:start="11:29" pos:end="11:34">endptr</name></expr></argument>, <argument pos:start="11:37" pos:end="11:38"><expr pos:start="11:37" pos:end="11:38"><literal type="number" pos:start="11:37" pos:end="11:38">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:23">(<expr pos:start="13:9" pos:end="13:22"><operator pos:start="13:9" pos:end="13:9">*</operator><name pos:start="13:10" pos:end="13:15">endptr</name> <operator pos:start="13:17" pos:end="13:18">==</operator> <literal type="char" pos:start="13:20" pos:end="13:22">'-'</literal></expr>)</condition> <block pos:start="13:25" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:51">

        <expr_stmt pos:start="15:9" pos:end="15:51"><expr pos:start="15:9" pos:end="15:50"><name pos:start="15:9" pos:end="15:16">endvalue</name> <operator pos:start="15:18" pos:end="15:18">=</operator> <call pos:start="15:20" pos:end="15:50"><name pos:start="15:20" pos:end="15:27">strtoull</name><argument_list pos:start="15:28" pos:end="15:50">(<argument pos:start="15:29" pos:end="15:36"><expr pos:start="15:29" pos:end="15:36"><name pos:start="15:29" pos:end="15:34">endptr</name><operator pos:start="15:35" pos:end="15:35">+</operator><literal type="number" pos:start="15:36" pos:end="15:36">1</literal></expr></argument>, <argument pos:start="15:39" pos:end="15:45"><expr pos:start="15:39" pos:end="15:45"><operator pos:start="15:39" pos:end="15:39">&amp;</operator><name pos:start="15:40" pos:end="15:45">endptr</name></expr></argument>, <argument pos:start="15:48" pos:end="15:49"><expr pos:start="15:48" pos:end="15:49"><literal type="number" pos:start="15:48" pos:end="15:49">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="21:5">else <block pos:start="17:12" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:25">

        <expr_stmt pos:start="19:9" pos:end="19:25"><expr pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:16">endvalue</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <name pos:start="19:20" pos:end="19:24">value</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:39">(<expr pos:start="25:9" pos:end="25:38"><operator pos:start="25:9" pos:end="25:9">!</operator><operator pos:start="25:10" pos:end="25:10">(</operator><name pos:start="25:11" pos:end="25:18">endvalue</name> <operator pos:start="25:20" pos:end="25:20">&lt;</operator> <name pos:start="25:22" pos:end="25:37">MAX_CPUMASK_BITS</name><operator pos:start="25:38" pos:end="25:38">)</operator></expr>)</condition> <block pos:start="25:41" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:31">

        <expr_stmt pos:start="27:9" pos:end="27:40"><expr pos:start="27:9" pos:end="27:39"><name pos:start="27:9" pos:end="27:16">endvalue</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:35">MAX_CPUMASK_BITS</name> <operator pos:start="27:37" pos:end="27:37">-</operator> <literal type="number" pos:start="27:39" pos:end="27:39">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="33:31"><expr pos:start="29:9" pos:end="33:30"><call pos:start="29:9" pos:end="33:30"><name pos:start="29:9" pos:end="29:15">fprintf</name><argument_list pos:start="29:16" pos:end="33:30">(<argument pos:start="29:17" pos:end="29:22"><expr pos:start="29:17" pos:end="29:22"><name pos:start="29:17" pos:end="29:22">stderr</name></expr></argument>,

            <argument pos:start="31:13" pos:end="31:57"><expr pos:start="31:13" pos:end="31:57"><literal type="string" pos:start="31:13" pos:end="31:57">"A max of %d CPUs are supported in a guest\n"</literal></expr></argument>,

             <argument pos:start="33:14" pos:end="33:29"><expr pos:start="33:14" pos:end="33:29"><name pos:start="33:14" pos:end="33:29">MAX_CPUMASK_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:62"><expr pos:start="39:5" pos:end="39:61"><call pos:start="39:5" pos:end="39:61"><name pos:start="39:5" pos:end="39:14">bitmap_set</name><argument_list pos:start="39:15" pos:end="39:61">(<argument pos:start="39:16" pos:end="39:35"><expr pos:start="39:16" pos:end="39:35"><name pos:start="39:16" pos:end="39:35"><name pos:start="39:16" pos:end="39:27">node_cpumask</name><index pos:start="39:28" pos:end="39:35">[<expr pos:start="39:29" pos:end="39:34"><name pos:start="39:29" pos:end="39:34">nodenr</name></expr>]</index></name></expr></argument>, <argument pos:start="39:38" pos:end="39:42"><expr pos:start="39:38" pos:end="39:42"><name pos:start="39:38" pos:end="39:42">value</name></expr></argument>, <argument pos:start="39:45" pos:end="39:60"><expr pos:start="39:45" pos:end="39:60"><name pos:start="39:45" pos:end="39:52">endvalue</name><operator pos:start="39:53" pos:end="39:53">-</operator><name pos:start="39:54" pos:end="39:58">value</name><operator pos:start="39:59" pos:end="39:59">+</operator><literal type="number" pos:start="39:60" pos:end="39:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
