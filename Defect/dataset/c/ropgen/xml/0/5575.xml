<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5575.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">arm_gen_test_cc</name><parameter_list pos:start="1:21" pos:end="1:39">(<parameter pos:start="1:22" pos:end="1:27"><decl pos:start="1:22" pos:end="1:27"><type pos:start="1:22" pos:end="1:27"><name pos:start="1:22" pos:end="1:24">int</name></type> <name pos:start="1:26" pos:end="1:27">cc</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:38"><decl pos:start="1:30" pos:end="1:38"><type pos:start="1:30" pos:end="1:38"><name pos:start="1:30" pos:end="1:32">int</name></type> <name pos:start="1:34" pos:end="1:38">label</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:5">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">TCGv_i32</name></type> <name pos:start="5:14" pos:end="5:16">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">inv</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="143:5">switch <condition pos:start="11:12" pos:end="11:15">(<expr pos:start="11:13" pos:end="11:14"><name pos:start="11:13" pos:end="11:14">cc</name></expr>)</condition> <block pos:start="11:17" pos:end="143:5">{<block_content pos:start="13:5" pos:end="141:16">

    <case pos:start="13:5" pos:end="13:11">case <expr pos:start="13:10" pos:end="13:10"><literal type="number" pos:start="13:10" pos:end="13:10">0</literal></expr>:</case> <comment type="block" pos:start="13:13" pos:end="13:23">/* eq: Z */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:59"><expr pos:start="15:9" pos:end="15:58"><call pos:start="15:9" pos:end="15:58"><name pos:start="15:9" pos:end="15:27">tcg_gen_brcondi_i32</name><argument_list pos:start="15:28" pos:end="15:58">(<argument pos:start="15:29" pos:end="15:39"><expr pos:start="15:29" pos:end="15:39"><name pos:start="15:29" pos:end="15:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="15:42" pos:end="15:47"><expr pos:start="15:42" pos:end="15:47"><name pos:start="15:42" pos:end="15:47">cpu_ZF</name></expr></argument>, <argument pos:start="15:50" pos:end="15:50"><expr pos:start="15:50" pos:end="15:50"><literal type="number" pos:start="15:50" pos:end="15:50">0</literal></expr></argument>, <argument pos:start="15:53" pos:end="15:57"><expr pos:start="15:53" pos:end="15:57"><name pos:start="15:53" pos:end="15:57">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="17:9" pos:end="17:14">break;</break>

    <case pos:start="19:5" pos:end="19:11">case <expr pos:start="19:10" pos:end="19:10"><literal type="number" pos:start="19:10" pos:end="19:10">1</literal></expr>:</case> <comment type="block" pos:start="19:13" pos:end="19:24">/* ne: !Z */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:59"><expr pos:start="21:9" pos:end="21:58"><call pos:start="21:9" pos:end="21:58"><name pos:start="21:9" pos:end="21:27">tcg_gen_brcondi_i32</name><argument_list pos:start="21:28" pos:end="21:58">(<argument pos:start="21:29" pos:end="21:39"><expr pos:start="21:29" pos:end="21:39"><name pos:start="21:29" pos:end="21:39">TCG_COND_NE</name></expr></argument>, <argument pos:start="21:42" pos:end="21:47"><expr pos:start="21:42" pos:end="21:47"><name pos:start="21:42" pos:end="21:47">cpu_ZF</name></expr></argument>, <argument pos:start="21:50" pos:end="21:50"><expr pos:start="21:50" pos:end="21:50"><literal type="number" pos:start="21:50" pos:end="21:50">0</literal></expr></argument>, <argument pos:start="21:53" pos:end="21:57"><expr pos:start="21:53" pos:end="21:57"><name pos:start="21:53" pos:end="21:57">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">2</literal></expr>:</case> <comment type="block" pos:start="25:13" pos:end="25:23">/* cs: C */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:59"><expr pos:start="27:9" pos:end="27:58"><call pos:start="27:9" pos:end="27:58"><name pos:start="27:9" pos:end="27:27">tcg_gen_brcondi_i32</name><argument_list pos:start="27:28" pos:end="27:58">(<argument pos:start="27:29" pos:end="27:39"><expr pos:start="27:29" pos:end="27:39"><name pos:start="27:29" pos:end="27:39">TCG_COND_NE</name></expr></argument>, <argument pos:start="27:42" pos:end="27:47"><expr pos:start="27:42" pos:end="27:47"><name pos:start="27:42" pos:end="27:47">cpu_CF</name></expr></argument>, <argument pos:start="27:50" pos:end="27:50"><expr pos:start="27:50" pos:end="27:50"><literal type="number" pos:start="27:50" pos:end="27:50">0</literal></expr></argument>, <argument pos:start="27:53" pos:end="27:57"><expr pos:start="27:53" pos:end="27:57"><name pos:start="27:53" pos:end="27:57">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">3</literal></expr>:</case> <comment type="block" pos:start="31:13" pos:end="31:24">/* cc: !C */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:59"><expr pos:start="33:9" pos:end="33:58"><call pos:start="33:9" pos:end="33:58"><name pos:start="33:9" pos:end="33:27">tcg_gen_brcondi_i32</name><argument_list pos:start="33:28" pos:end="33:58">(<argument pos:start="33:29" pos:end="33:39"><expr pos:start="33:29" pos:end="33:39"><name pos:start="33:29" pos:end="33:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="33:42" pos:end="33:47"><expr pos:start="33:42" pos:end="33:47"><name pos:start="33:42" pos:end="33:47">cpu_CF</name></expr></argument>, <argument pos:start="33:50" pos:end="33:50"><expr pos:start="33:50" pos:end="33:50"><literal type="number" pos:start="33:50" pos:end="33:50">0</literal></expr></argument>, <argument pos:start="33:53" pos:end="33:57"><expr pos:start="33:53" pos:end="33:57"><name pos:start="33:53" pos:end="33:57">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:11">case <expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">4</literal></expr>:</case> <comment type="block" pos:start="37:13" pos:end="37:23">/* mi: N */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:59"><expr pos:start="39:9" pos:end="39:58"><call pos:start="39:9" pos:end="39:58"><name pos:start="39:9" pos:end="39:27">tcg_gen_brcondi_i32</name><argument_list pos:start="39:28" pos:end="39:58">(<argument pos:start="39:29" pos:end="39:39"><expr pos:start="39:29" pos:end="39:39"><name pos:start="39:29" pos:end="39:39">TCG_COND_LT</name></expr></argument>, <argument pos:start="39:42" pos:end="39:47"><expr pos:start="39:42" pos:end="39:47"><name pos:start="39:42" pos:end="39:47">cpu_NF</name></expr></argument>, <argument pos:start="39:50" pos:end="39:50"><expr pos:start="39:50" pos:end="39:50"><literal type="number" pos:start="39:50" pos:end="39:50">0</literal></expr></argument>, <argument pos:start="39:53" pos:end="39:57"><expr pos:start="39:53" pos:end="39:57"><name pos:start="39:53" pos:end="39:57">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:11">case <expr pos:start="43:10" pos:end="43:10"><literal type="number" pos:start="43:10" pos:end="43:10">5</literal></expr>:</case> <comment type="block" pos:start="43:13" pos:end="43:24">/* pl: !N */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:59"><expr pos:start="45:9" pos:end="45:58"><call pos:start="45:9" pos:end="45:58"><name pos:start="45:9" pos:end="45:27">tcg_gen_brcondi_i32</name><argument_list pos:start="45:28" pos:end="45:58">(<argument pos:start="45:29" pos:end="45:39"><expr pos:start="45:29" pos:end="45:39"><name pos:start="45:29" pos:end="45:39">TCG_COND_GE</name></expr></argument>, <argument pos:start="45:42" pos:end="45:47"><expr pos:start="45:42" pos:end="45:47"><name pos:start="45:42" pos:end="45:47">cpu_NF</name></expr></argument>, <argument pos:start="45:50" pos:end="45:50"><expr pos:start="45:50" pos:end="45:50"><literal type="number" pos:start="45:50" pos:end="45:50">0</literal></expr></argument>, <argument pos:start="45:53" pos:end="45:57"><expr pos:start="45:53" pos:end="45:57"><name pos:start="45:53" pos:end="45:57">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:11">case <expr pos:start="49:10" pos:end="49:10"><literal type="number" pos:start="49:10" pos:end="49:10">6</literal></expr>:</case> <comment type="block" pos:start="49:13" pos:end="49:23">/* vs: V */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:59"><expr pos:start="51:9" pos:end="51:58"><call pos:start="51:9" pos:end="51:58"><name pos:start="51:9" pos:end="51:27">tcg_gen_brcondi_i32</name><argument_list pos:start="51:28" pos:end="51:58">(<argument pos:start="51:29" pos:end="51:39"><expr pos:start="51:29" pos:end="51:39"><name pos:start="51:29" pos:end="51:39">TCG_COND_LT</name></expr></argument>, <argument pos:start="51:42" pos:end="51:47"><expr pos:start="51:42" pos:end="51:47"><name pos:start="51:42" pos:end="51:47">cpu_VF</name></expr></argument>, <argument pos:start="51:50" pos:end="51:50"><expr pos:start="51:50" pos:end="51:50"><literal type="number" pos:start="51:50" pos:end="51:50">0</literal></expr></argument>, <argument pos:start="51:53" pos:end="51:57"><expr pos:start="51:53" pos:end="51:57"><name pos:start="51:53" pos:end="51:57">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">7</literal></expr>:</case> <comment type="block" pos:start="55:13" pos:end="55:24">/* vc: !V */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:59"><expr pos:start="57:9" pos:end="57:58"><call pos:start="57:9" pos:end="57:58"><name pos:start="57:9" pos:end="57:27">tcg_gen_brcondi_i32</name><argument_list pos:start="57:28" pos:end="57:58">(<argument pos:start="57:29" pos:end="57:39"><expr pos:start="57:29" pos:end="57:39"><name pos:start="57:29" pos:end="57:39">TCG_COND_GE</name></expr></argument>, <argument pos:start="57:42" pos:end="57:47"><expr pos:start="57:42" pos:end="57:47"><name pos:start="57:42" pos:end="57:47">cpu_VF</name></expr></argument>, <argument pos:start="57:50" pos:end="57:50"><expr pos:start="57:50" pos:end="57:50"><literal type="number" pos:start="57:50" pos:end="57:50">0</literal></expr></argument>, <argument pos:start="57:53" pos:end="57:57"><expr pos:start="57:53" pos:end="57:57"><name pos:start="57:53" pos:end="57:57">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:11">case <expr pos:start="61:10" pos:end="61:10"><literal type="number" pos:start="61:10" pos:end="61:10">8</literal></expr>:</case> <comment type="block" pos:start="61:13" pos:end="61:29">/* hi: C &amp;&amp; !Z */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:30"><expr pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:11">inv</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="63:29"><name pos:start="63:15" pos:end="63:27">gen_new_label</name><argument_list pos:start="63:28" pos:end="63:29">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:57"><expr pos:start="65:9" pos:end="65:56"><call pos:start="65:9" pos:end="65:56"><name pos:start="65:9" pos:end="65:27">tcg_gen_brcondi_i32</name><argument_list pos:start="65:28" pos:end="65:56">(<argument pos:start="65:29" pos:end="65:39"><expr pos:start="65:29" pos:end="65:39"><name pos:start="65:29" pos:end="65:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="65:42" pos:end="65:47"><expr pos:start="65:42" pos:end="65:47"><name pos:start="65:42" pos:end="65:47">cpu_CF</name></expr></argument>, <argument pos:start="65:50" pos:end="65:50"><expr pos:start="65:50" pos:end="65:50"><literal type="number" pos:start="65:50" pos:end="65:50">0</literal></expr></argument>, <argument pos:start="65:53" pos:end="65:55"><expr pos:start="65:53" pos:end="65:55"><name pos:start="65:53" pos:end="65:55">inv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:59"><expr pos:start="67:9" pos:end="67:58"><call pos:start="67:9" pos:end="67:58"><name pos:start="67:9" pos:end="67:27">tcg_gen_brcondi_i32</name><argument_list pos:start="67:28" pos:end="67:58">(<argument pos:start="67:29" pos:end="67:39"><expr pos:start="67:29" pos:end="67:39"><name pos:start="67:29" pos:end="67:39">TCG_COND_NE</name></expr></argument>, <argument pos:start="67:42" pos:end="67:47"><expr pos:start="67:42" pos:end="67:47"><name pos:start="67:42" pos:end="67:47">cpu_ZF</name></expr></argument>, <argument pos:start="67:50" pos:end="67:50"><expr pos:start="67:50" pos:end="67:50"><literal type="number" pos:start="67:50" pos:end="67:50">0</literal></expr></argument>, <argument pos:start="67:53" pos:end="67:57"><expr pos:start="67:53" pos:end="67:57"><name pos:start="67:53" pos:end="67:57">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:27"><expr pos:start="69:9" pos:end="69:26"><call pos:start="69:9" pos:end="69:26"><name pos:start="69:9" pos:end="69:21">gen_set_label</name><argument_list pos:start="69:22" pos:end="69:26">(<argument pos:start="69:23" pos:end="69:25"><expr pos:start="69:23" pos:end="69:25"><name pos:start="69:23" pos:end="69:25">inv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:11">case <expr pos:start="73:10" pos:end="73:10"><literal type="number" pos:start="73:10" pos:end="73:10">9</literal></expr>:</case> <comment type="block" pos:start="73:13" pos:end="73:29">/* ls: !C || Z */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:59"><expr pos:start="75:9" pos:end="75:58"><call pos:start="75:9" pos:end="75:58"><name pos:start="75:9" pos:end="75:27">tcg_gen_brcondi_i32</name><argument_list pos:start="75:28" pos:end="75:58">(<argument pos:start="75:29" pos:end="75:39"><expr pos:start="75:29" pos:end="75:39"><name pos:start="75:29" pos:end="75:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="75:42" pos:end="75:47"><expr pos:start="75:42" pos:end="75:47"><name pos:start="75:42" pos:end="75:47">cpu_CF</name></expr></argument>, <argument pos:start="75:50" pos:end="75:50"><expr pos:start="75:50" pos:end="75:50"><literal type="number" pos:start="75:50" pos:end="75:50">0</literal></expr></argument>, <argument pos:start="75:53" pos:end="75:57"><expr pos:start="75:53" pos:end="75:57"><name pos:start="75:53" pos:end="75:57">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:59"><expr pos:start="77:9" pos:end="77:58"><call pos:start="77:9" pos:end="77:58"><name pos:start="77:9" pos:end="77:27">tcg_gen_brcondi_i32</name><argument_list pos:start="77:28" pos:end="77:58">(<argument pos:start="77:29" pos:end="77:39"><expr pos:start="77:29" pos:end="77:39"><name pos:start="77:29" pos:end="77:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="77:42" pos:end="77:47"><expr pos:start="77:42" pos:end="77:47"><name pos:start="77:42" pos:end="77:47">cpu_ZF</name></expr></argument>, <argument pos:start="77:50" pos:end="77:50"><expr pos:start="77:50" pos:end="77:50"><literal type="number" pos:start="77:50" pos:end="77:50">0</literal></expr></argument>, <argument pos:start="77:53" pos:end="77:57"><expr pos:start="77:53" pos:end="77:57"><name pos:start="77:53" pos:end="77:57">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:12">case <expr pos:start="81:10" pos:end="81:11"><literal type="number" pos:start="81:10" pos:end="81:11">10</literal></expr>:</case> <comment type="block" pos:start="81:14" pos:end="81:43">/* ge: N == V -&gt; N ^ V == 0 */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:33"><expr pos:start="83:9" pos:end="83:32"><name pos:start="83:9" pos:end="83:11">tmp</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:32"><name pos:start="83:15" pos:end="83:30">tcg_temp_new_i32</name><argument_list pos:start="83:31" pos:end="83:32">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:45"><expr pos:start="85:9" pos:end="85:44"><call pos:start="85:9" pos:end="85:44"><name pos:start="85:9" pos:end="85:23">tcg_gen_xor_i32</name><argument_list pos:start="85:24" pos:end="85:44">(<argument pos:start="85:25" pos:end="85:27"><expr pos:start="85:25" pos:end="85:27"><name pos:start="85:25" pos:end="85:27">tmp</name></expr></argument>, <argument pos:start="85:30" pos:end="85:35"><expr pos:start="85:30" pos:end="85:35"><name pos:start="85:30" pos:end="85:35">cpu_VF</name></expr></argument>, <argument pos:start="85:38" pos:end="85:43"><expr pos:start="85:38" pos:end="85:43"><name pos:start="85:38" pos:end="85:43">cpu_NF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:56"><expr pos:start="87:9" pos:end="87:55"><call pos:start="87:9" pos:end="87:55"><name pos:start="87:9" pos:end="87:27">tcg_gen_brcondi_i32</name><argument_list pos:start="87:28" pos:end="87:55">(<argument pos:start="87:29" pos:end="87:39"><expr pos:start="87:29" pos:end="87:39"><name pos:start="87:29" pos:end="87:39">TCG_COND_GE</name></expr></argument>, <argument pos:start="87:42" pos:end="87:44"><expr pos:start="87:42" pos:end="87:44"><name pos:start="87:42" pos:end="87:44">tmp</name></expr></argument>, <argument pos:start="87:47" pos:end="87:47"><expr pos:start="87:47" pos:end="87:47"><literal type="number" pos:start="87:47" pos:end="87:47">0</literal></expr></argument>, <argument pos:start="87:50" pos:end="87:54"><expr pos:start="87:50" pos:end="87:54"><name pos:start="87:50" pos:end="87:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:31"><expr pos:start="89:9" pos:end="89:30"><call pos:start="89:9" pos:end="89:30"><name pos:start="89:9" pos:end="89:25">tcg_temp_free_i32</name><argument_list pos:start="89:26" pos:end="89:30">(<argument pos:start="89:27" pos:end="89:29"><expr pos:start="89:27" pos:end="89:29"><name pos:start="89:27" pos:end="89:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <case pos:start="93:5" pos:end="93:12">case <expr pos:start="93:10" pos:end="93:11"><literal type="number" pos:start="93:10" pos:end="93:11">11</literal></expr>:</case> <comment type="block" pos:start="93:14" pos:end="93:43">/* lt: N != V -&gt; N ^ V != 0 */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:33"><expr pos:start="95:9" pos:end="95:32"><name pos:start="95:9" pos:end="95:11">tmp</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <call pos:start="95:15" pos:end="95:32"><name pos:start="95:15" pos:end="95:30">tcg_temp_new_i32</name><argument_list pos:start="95:31" pos:end="95:32">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:45"><expr pos:start="97:9" pos:end="97:44"><call pos:start="97:9" pos:end="97:44"><name pos:start="97:9" pos:end="97:23">tcg_gen_xor_i32</name><argument_list pos:start="97:24" pos:end="97:44">(<argument pos:start="97:25" pos:end="97:27"><expr pos:start="97:25" pos:end="97:27"><name pos:start="97:25" pos:end="97:27">tmp</name></expr></argument>, <argument pos:start="97:30" pos:end="97:35"><expr pos:start="97:30" pos:end="97:35"><name pos:start="97:30" pos:end="97:35">cpu_VF</name></expr></argument>, <argument pos:start="97:38" pos:end="97:43"><expr pos:start="97:38" pos:end="97:43"><name pos:start="97:38" pos:end="97:43">cpu_NF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:56"><expr pos:start="99:9" pos:end="99:55"><call pos:start="99:9" pos:end="99:55"><name pos:start="99:9" pos:end="99:27">tcg_gen_brcondi_i32</name><argument_list pos:start="99:28" pos:end="99:55">(<argument pos:start="99:29" pos:end="99:39"><expr pos:start="99:29" pos:end="99:39"><name pos:start="99:29" pos:end="99:39">TCG_COND_LT</name></expr></argument>, <argument pos:start="99:42" pos:end="99:44"><expr pos:start="99:42" pos:end="99:44"><name pos:start="99:42" pos:end="99:44">tmp</name></expr></argument>, <argument pos:start="99:47" pos:end="99:47"><expr pos:start="99:47" pos:end="99:47"><literal type="number" pos:start="99:47" pos:end="99:47">0</literal></expr></argument>, <argument pos:start="99:50" pos:end="99:54"><expr pos:start="99:50" pos:end="99:54"><name pos:start="99:50" pos:end="99:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:31"><expr pos:start="101:9" pos:end="101:30"><call pos:start="101:9" pos:end="101:30"><name pos:start="101:9" pos:end="101:25">tcg_temp_free_i32</name><argument_list pos:start="101:26" pos:end="101:30">(<argument pos:start="101:27" pos:end="101:29"><expr pos:start="101:27" pos:end="101:29"><name pos:start="101:27" pos:end="101:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    <case pos:start="105:5" pos:end="105:12">case <expr pos:start="105:10" pos:end="105:11"><literal type="number" pos:start="105:10" pos:end="105:11">12</literal></expr>:</case> <comment type="block" pos:start="105:14" pos:end="105:35">/* gt: !Z &amp;&amp; N == V */</comment>

        <expr_stmt pos:start="107:9" pos:end="107:30"><expr pos:start="107:9" pos:end="107:29"><name pos:start="107:9" pos:end="107:11">inv</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:29"><name pos:start="107:15" pos:end="107:27">gen_new_label</name><argument_list pos:start="107:28" pos:end="107:29">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:57"><expr pos:start="109:9" pos:end="109:56"><call pos:start="109:9" pos:end="109:56"><name pos:start="109:9" pos:end="109:27">tcg_gen_brcondi_i32</name><argument_list pos:start="109:28" pos:end="109:56">(<argument pos:start="109:29" pos:end="109:39"><expr pos:start="109:29" pos:end="109:39"><name pos:start="109:29" pos:end="109:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="109:42" pos:end="109:47"><expr pos:start="109:42" pos:end="109:47"><name pos:start="109:42" pos:end="109:47">cpu_ZF</name></expr></argument>, <argument pos:start="109:50" pos:end="109:50"><expr pos:start="109:50" pos:end="109:50"><literal type="number" pos:start="109:50" pos:end="109:50">0</literal></expr></argument>, <argument pos:start="109:53" pos:end="109:55"><expr pos:start="109:53" pos:end="109:55"><name pos:start="109:53" pos:end="109:55">inv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:33"><expr pos:start="111:9" pos:end="111:32"><name pos:start="111:9" pos:end="111:11">tmp</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <call pos:start="111:15" pos:end="111:32"><name pos:start="111:15" pos:end="111:30">tcg_temp_new_i32</name><argument_list pos:start="111:31" pos:end="111:32">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:45"><expr pos:start="113:9" pos:end="113:44"><call pos:start="113:9" pos:end="113:44"><name pos:start="113:9" pos:end="113:23">tcg_gen_xor_i32</name><argument_list pos:start="113:24" pos:end="113:44">(<argument pos:start="113:25" pos:end="113:27"><expr pos:start="113:25" pos:end="113:27"><name pos:start="113:25" pos:end="113:27">tmp</name></expr></argument>, <argument pos:start="113:30" pos:end="113:35"><expr pos:start="113:30" pos:end="113:35"><name pos:start="113:30" pos:end="113:35">cpu_VF</name></expr></argument>, <argument pos:start="113:38" pos:end="113:43"><expr pos:start="113:38" pos:end="113:43"><name pos:start="113:38" pos:end="113:43">cpu_NF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:56"><expr pos:start="115:9" pos:end="115:55"><call pos:start="115:9" pos:end="115:55"><name pos:start="115:9" pos:end="115:27">tcg_gen_brcondi_i32</name><argument_list pos:start="115:28" pos:end="115:55">(<argument pos:start="115:29" pos:end="115:39"><expr pos:start="115:29" pos:end="115:39"><name pos:start="115:29" pos:end="115:39">TCG_COND_GE</name></expr></argument>, <argument pos:start="115:42" pos:end="115:44"><expr pos:start="115:42" pos:end="115:44"><name pos:start="115:42" pos:end="115:44">tmp</name></expr></argument>, <argument pos:start="115:47" pos:end="115:47"><expr pos:start="115:47" pos:end="115:47"><literal type="number" pos:start="115:47" pos:end="115:47">0</literal></expr></argument>, <argument pos:start="115:50" pos:end="115:54"><expr pos:start="115:50" pos:end="115:54"><name pos:start="115:50" pos:end="115:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:31"><expr pos:start="117:9" pos:end="117:30"><call pos:start="117:9" pos:end="117:30"><name pos:start="117:9" pos:end="117:25">tcg_temp_free_i32</name><argument_list pos:start="117:26" pos:end="117:30">(<argument pos:start="117:27" pos:end="117:29"><expr pos:start="117:27" pos:end="117:29"><name pos:start="117:27" pos:end="117:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:27"><expr pos:start="119:9" pos:end="119:26"><call pos:start="119:9" pos:end="119:26"><name pos:start="119:9" pos:end="119:21">gen_set_label</name><argument_list pos:start="119:22" pos:end="119:26">(<argument pos:start="119:23" pos:end="119:25"><expr pos:start="119:23" pos:end="119:25"><name pos:start="119:23" pos:end="119:25">inv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <case pos:start="123:5" pos:end="123:12">case <expr pos:start="123:10" pos:end="123:11"><literal type="number" pos:start="123:10" pos:end="123:11">13</literal></expr>:</case> <comment type="block" pos:start="123:14" pos:end="123:34">/* le: Z || N != V */</comment>

        <expr_stmt pos:start="125:9" pos:end="125:59"><expr pos:start="125:9" pos:end="125:58"><call pos:start="125:9" pos:end="125:58"><name pos:start="125:9" pos:end="125:27">tcg_gen_brcondi_i32</name><argument_list pos:start="125:28" pos:end="125:58">(<argument pos:start="125:29" pos:end="125:39"><expr pos:start="125:29" pos:end="125:39"><name pos:start="125:29" pos:end="125:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="125:42" pos:end="125:47"><expr pos:start="125:42" pos:end="125:47"><name pos:start="125:42" pos:end="125:47">cpu_ZF</name></expr></argument>, <argument pos:start="125:50" pos:end="125:50"><expr pos:start="125:50" pos:end="125:50"><literal type="number" pos:start="125:50" pos:end="125:50">0</literal></expr></argument>, <argument pos:start="125:53" pos:end="125:57"><expr pos:start="125:53" pos:end="125:57"><name pos:start="125:53" pos:end="125:57">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:33"><expr pos:start="127:9" pos:end="127:32"><name pos:start="127:9" pos:end="127:11">tmp</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <call pos:start="127:15" pos:end="127:32"><name pos:start="127:15" pos:end="127:30">tcg_temp_new_i32</name><argument_list pos:start="127:31" pos:end="127:32">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:45"><expr pos:start="129:9" pos:end="129:44"><call pos:start="129:9" pos:end="129:44"><name pos:start="129:9" pos:end="129:23">tcg_gen_xor_i32</name><argument_list pos:start="129:24" pos:end="129:44">(<argument pos:start="129:25" pos:end="129:27"><expr pos:start="129:25" pos:end="129:27"><name pos:start="129:25" pos:end="129:27">tmp</name></expr></argument>, <argument pos:start="129:30" pos:end="129:35"><expr pos:start="129:30" pos:end="129:35"><name pos:start="129:30" pos:end="129:35">cpu_VF</name></expr></argument>, <argument pos:start="129:38" pos:end="129:43"><expr pos:start="129:38" pos:end="129:43"><name pos:start="129:38" pos:end="129:43">cpu_NF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:56"><expr pos:start="131:9" pos:end="131:55"><call pos:start="131:9" pos:end="131:55"><name pos:start="131:9" pos:end="131:27">tcg_gen_brcondi_i32</name><argument_list pos:start="131:28" pos:end="131:55">(<argument pos:start="131:29" pos:end="131:39"><expr pos:start="131:29" pos:end="131:39"><name pos:start="131:29" pos:end="131:39">TCG_COND_LT</name></expr></argument>, <argument pos:start="131:42" pos:end="131:44"><expr pos:start="131:42" pos:end="131:44"><name pos:start="131:42" pos:end="131:44">tmp</name></expr></argument>, <argument pos:start="131:47" pos:end="131:47"><expr pos:start="131:47" pos:end="131:47"><literal type="number" pos:start="131:47" pos:end="131:47">0</literal></expr></argument>, <argument pos:start="131:50" pos:end="131:54"><expr pos:start="131:50" pos:end="131:54"><name pos:start="131:50" pos:end="131:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:31"><expr pos:start="133:9" pos:end="133:30"><call pos:start="133:9" pos:end="133:30"><name pos:start="133:9" pos:end="133:25">tcg_temp_free_i32</name><argument_list pos:start="133:26" pos:end="133:30">(<argument pos:start="133:27" pos:end="133:29"><expr pos:start="133:27" pos:end="133:29"><name pos:start="133:27" pos:end="133:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="135:9" pos:end="135:14">break;</break>

    <default pos:start="137:5" pos:end="137:12">default:</default>

        <expr_stmt pos:start="139:9" pos:end="139:57"><expr pos:start="139:9" pos:end="139:56"><call pos:start="139:9" pos:end="139:56"><name pos:start="139:9" pos:end="139:15">fprintf</name><argument_list pos:start="139:16" pos:end="139:56">(<argument pos:start="139:17" pos:end="139:22"><expr pos:start="139:17" pos:end="139:22"><name pos:start="139:17" pos:end="139:22">stderr</name></expr></argument>, <argument pos:start="139:25" pos:end="139:51"><expr pos:start="139:25" pos:end="139:51"><literal type="string" pos:start="139:25" pos:end="139:51">"Bad condition code 0x%x\n"</literal></expr></argument>, <argument pos:start="139:54" pos:end="139:55"><expr pos:start="139:54" pos:end="139:55"><name pos:start="139:54" pos:end="139:55">cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:16"><expr pos:start="141:9" pos:end="141:15"><call pos:start="141:9" pos:end="141:15"><name pos:start="141:9" pos:end="141:13">abort</name><argument_list pos:start="141:14" pos:end="141:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
