<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23037.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">rtcp_parse_packet</name><parameter_list pos:start="1:29" pos:end="3:37">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:44">RTPDemuxContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:73"><decl pos:start="1:50" pos:end="1:73"><type pos:start="1:50" pos:end="1:73"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:63">unsigned</name> <name pos:start="1:65" pos:end="1:68">char</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">buf</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:36"><decl pos:start="3:30" pos:end="3:36"><type pos:start="3:30" pos:end="3:36"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:36">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:14">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">payload_len</name></decl>;</decl_stmt>

    <while pos:start="9:5" pos:end="65:5">while <condition pos:start="9:11" pos:end="9:20">(<expr pos:start="9:12" pos:end="9:19"><name pos:start="9:12" pos:end="9:14">len</name> <operator pos:start="9:16" pos:end="9:17">&gt;=</operator> <literal type="number" pos:start="9:19" pos:end="9:19">4</literal></expr>)</condition> <block pos:start="9:22" pos:end="65:5">{<block_content pos:start="11:9" pos:end="63:27">

        <expr_stmt pos:start="11:9" pos:end="11:61"><expr pos:start="11:9" pos:end="11:60"><name pos:start="11:9" pos:end="11:19">payload_len</name> <operator pos:start="11:21" pos:end="11:21">=</operator> <call pos:start="11:23" pos:end="11:60"><name pos:start="11:23" pos:end="11:27">FFMIN</name><argument_list pos:start="11:28" pos:end="11:60">(<argument pos:start="11:29" pos:end="11:31"><expr pos:start="11:29" pos:end="11:31"><name pos:start="11:29" pos:end="11:31">len</name></expr></argument>, <argument pos:start="11:34" pos:end="11:59"><expr pos:start="11:34" pos:end="11:59"><operator pos:start="11:34" pos:end="11:34">(</operator><call pos:start="11:35" pos:end="11:50"><name pos:start="11:35" pos:end="11:41">AV_RB16</name><argument_list pos:start="11:42" pos:end="11:50">(<argument pos:start="11:43" pos:end="11:49"><expr pos:start="11:43" pos:end="11:49"><name pos:start="11:43" pos:end="11:45">buf</name> <operator pos:start="11:47" pos:end="11:47">+</operator> <literal type="number" pos:start="11:49" pos:end="11:49">2</literal></expr></argument>)</argument_list></call> <operator pos:start="11:52" pos:end="11:52">+</operator> <literal type="number" pos:start="11:54" pos:end="11:54">1</literal><operator pos:start="11:55" pos:end="11:55">)</operator> <operator pos:start="11:57" pos:end="11:57">*</operator> <literal type="number" pos:start="11:59" pos:end="11:59">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="15:9" pos:end="57:9">switch <condition pos:start="15:16" pos:end="15:23">(<expr pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:19">buf</name><index pos:start="15:20" pos:end="15:22">[<expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="15:25" pos:end="57:9">{<block_content pos:start="17:9" pos:end="55:29">

        <case pos:start="17:9" pos:end="17:21">case <expr pos:start="17:14" pos:end="17:20"><name pos:start="17:14" pos:end="17:20">RTCP_SR</name></expr>:</case>

            <if_stmt pos:start="19:13" pos:end="27:13"><if pos:start="19:13" pos:end="27:13">if <condition pos:start="19:16" pos:end="19:33">(<expr pos:start="19:17" pos:end="19:32"><name pos:start="19:17" pos:end="19:27">payload_len</name> <operator pos:start="19:29" pos:end="19:29">&lt;</operator> <literal type="number" pos:start="19:31" pos:end="19:32">20</literal></expr>)</condition> <block pos:start="19:35" pos:end="27:13">{<block_content pos:start="21:17" pos:end="25:43">

                <expr_stmt pos:start="21:17" pos:end="23:62"><expr pos:start="21:17" pos:end="23:61"><call pos:start="21:17" pos:end="23:61"><name pos:start="21:17" pos:end="21:22">av_log</name><argument_list pos:start="21:23" pos:end="23:61">(<argument pos:start="21:24" pos:end="21:27"><expr pos:start="21:24" pos:end="21:27"><name pos:start="21:24" pos:end="21:27">NULL</name></expr></argument>, <argument pos:start="21:30" pos:end="21:41"><expr pos:start="21:30" pos:end="21:41"><name pos:start="21:30" pos:end="21:41">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="23:24" pos:end="23:60"><expr pos:start="23:24" pos:end="23:60"><literal type="string" pos:start="23:24" pos:end="23:60">"Invalid length for RTCP SR packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="25:17" pos:end="25:43">return <expr pos:start="25:24" pos:end="25:42"><name pos:start="25:24" pos:end="25:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="31:13" pos:end="31:64"><expr pos:start="31:13" pos:end="31:63"><name pos:start="31:13" pos:end="31:39"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:39">last_rtcp_reception_time</name></name> <operator pos:start="31:41" pos:end="31:41">=</operator> <call pos:start="31:43" pos:end="31:63"><name pos:start="31:43" pos:end="31:61">av_gettime_relative</name><argument_list pos:start="31:62" pos:end="31:63">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:54"><expr pos:start="33:13" pos:end="33:53"><name pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:33">last_rtcp_ntp_time</name></name>  <operator pos:start="33:36" pos:end="33:36">=</operator> <call pos:start="33:38" pos:end="33:53"><name pos:start="33:38" pos:end="33:44">AV_RB64</name><argument_list pos:start="33:45" pos:end="33:53">(<argument pos:start="33:46" pos:end="33:52"><expr pos:start="33:46" pos:end="33:52"><name pos:start="33:46" pos:end="33:48">buf</name> <operator pos:start="33:50" pos:end="33:50">+</operator> <literal type="number" pos:start="33:52" pos:end="33:52">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:55"><expr pos:start="35:13" pos:end="35:54"><name pos:start="35:13" pos:end="35:34"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:34">last_rtcp_timestamp</name></name> <operator pos:start="35:36" pos:end="35:36">=</operator> <call pos:start="35:38" pos:end="35:54"><name pos:start="35:38" pos:end="35:44">AV_RB32</name><argument_list pos:start="35:45" pos:end="35:54">(<argument pos:start="35:46" pos:end="35:53"><expr pos:start="35:46" pos:end="35:53"><name pos:start="35:46" pos:end="35:48">buf</name> <operator pos:start="35:50" pos:end="35:50">+</operator> <literal type="number" pos:start="35:52" pos:end="35:53">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="47:13"><if pos:start="37:13" pos:end="47:13">if <condition pos:start="37:16" pos:end="37:57">(<expr pos:start="37:17" pos:end="37:56"><name pos:start="37:17" pos:end="37:38"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:38">first_rtcp_ntp_time</name></name> <operator pos:start="37:40" pos:end="37:41">==</operator> <name pos:start="37:43" pos:end="37:56">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="37:59" pos:end="47:13">{<block_content pos:start="39:17" pos:end="45:79">

                <expr_stmt pos:start="39:17" pos:end="39:63"><expr pos:start="39:17" pos:end="39:62"><name pos:start="39:17" pos:end="39:38"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:38">first_rtcp_ntp_time</name></name> <operator pos:start="39:40" pos:end="39:40">=</operator> <name pos:start="39:42" pos:end="39:62"><name pos:start="39:42" pos:end="39:42">s</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:62">last_rtcp_ntp_time</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="41:17" pos:end="43:63"><if pos:start="41:17" pos:end="43:63">if <condition pos:start="41:20" pos:end="41:39">(<expr pos:start="41:21" pos:end="41:38"><operator pos:start="41:21" pos:end="41:21">!</operator><name pos:start="41:22" pos:end="41:38"><name pos:start="41:22" pos:end="41:22">s</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:38">base_timestamp</name></name></expr>)</condition><block type="pseudo" pos:start="43:21" pos:end="43:63"><block_content pos:start="43:21" pos:end="43:63">

                    <expr_stmt pos:start="43:21" pos:end="43:63"><expr pos:start="43:21" pos:end="43:62"><name pos:start="43:21" pos:end="43:37"><name pos:start="43:21" pos:end="43:21">s</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:37">base_timestamp</name></name> <operator pos:start="43:39" pos:end="43:39">=</operator> <name pos:start="43:41" pos:end="43:62"><name pos:start="43:41" pos:end="43:41">s</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:62">last_rtcp_timestamp</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:79"><expr pos:start="45:17" pos:end="45:78"><name pos:start="45:17" pos:end="45:33"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:33">rtcp_ts_offset</name></name> <operator pos:start="45:35" pos:end="45:35">=</operator> <name pos:start="45:37" pos:end="45:58"><name pos:start="45:37" pos:end="45:37">s</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:58">last_rtcp_timestamp</name></name> <operator pos:start="45:60" pos:end="45:60">-</operator> <name pos:start="45:62" pos:end="45:78"><name pos:start="45:62" pos:end="45:62">s</name><operator pos:start="45:63" pos:end="45:64">-&gt;</operator><name pos:start="45:65" pos:end="45:78">base_timestamp</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <break pos:start="51:13" pos:end="51:18">break;</break>

        <case pos:start="53:9" pos:end="53:22">case <expr pos:start="53:14" pos:end="53:21"><name pos:start="53:14" pos:end="53:21">RTCP_BYE</name></expr>:</case>

            <return pos:start="55:13" pos:end="55:29">return <expr pos:start="55:20" pos:end="55:28"><operator pos:start="55:20" pos:end="55:20">-</operator><name pos:start="55:21" pos:end="55:28">RTCP_BYE</name></expr>;</return>

        </block_content>}</block></switch>



        <expr_stmt pos:start="61:9" pos:end="61:27"><expr pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:11">buf</name> <operator pos:start="61:13" pos:end="61:14">+=</operator> <name pos:start="61:16" pos:end="61:26">payload_len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:27"><expr pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:11">len</name> <operator pos:start="63:13" pos:end="63:14">-=</operator> <name pos:start="63:16" pos:end="63:26">payload_len</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="67:5" pos:end="67:14">return <expr pos:start="67:12" pos:end="67:13"><operator pos:start="67:12" pos:end="67:12">-</operator><literal type="number" pos:start="67:13" pos:end="67:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
