<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12738.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">tosa_init</name><parameter_list pos:start="1:22" pos:end="7:67">(<parameter pos:start="1:23" pos:end="1:41"><decl pos:start="1:23" pos:end="1:41"><type pos:start="1:23" pos:end="1:41"><name pos:start="1:23" pos:end="1:32">ram_addr_t</name></type> <name pos:start="1:34" pos:end="1:41">ram_size</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:59"><decl pos:start="1:44" pos:end="1:59"><type pos:start="1:44" pos:end="1:59"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:59">vga_ram_size</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:39"><decl pos:start="3:17" pos:end="3:39"><type pos:start="3:17" pos:end="3:39"><specifier pos:start="3:17" pos:end="3:21">const</specifier> <name pos:start="3:23" pos:end="3:26">char</name> <modifier pos:start="3:28" pos:end="3:28">*</modifier></type><name pos:start="3:29" pos:end="3:39">boot_device</name></decl></parameter>,

                <parameter pos:start="5:17" pos:end="5:43"><decl pos:start="5:17" pos:end="5:43"><type pos:start="5:17" pos:end="5:43"><specifier pos:start="5:17" pos:end="5:21">const</specifier> <name pos:start="5:23" pos:end="5:26">char</name> <modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:43">kernel_filename</name></decl></parameter>, <parameter pos:start="5:46" pos:end="5:71"><decl pos:start="5:46" pos:end="5:71"><type pos:start="5:46" pos:end="5:71"><specifier pos:start="5:46" pos:end="5:50">const</specifier> <name pos:start="5:52" pos:end="5:55">char</name> <modifier pos:start="5:57" pos:end="5:57">*</modifier></type><name pos:start="5:58" pos:end="5:71">kernel_cmdline</name></decl></parameter>,

                <parameter pos:start="7:17" pos:end="7:43"><decl pos:start="7:17" pos:end="7:43"><type pos:start="7:17" pos:end="7:43"><specifier pos:start="7:17" pos:end="7:21">const</specifier> <name pos:start="7:23" pos:end="7:26">char</name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:43">initrd_filename</name></decl></parameter>, <parameter pos:start="7:46" pos:end="7:66"><decl pos:start="7:46" pos:end="7:66"><type pos:start="7:46" pos:end="7:66"><specifier pos:start="7:46" pos:end="7:50">const</specifier> <name pos:start="7:52" pos:end="7:55">char</name> <modifier pos:start="7:57" pos:end="7:57">*</modifier></type><name pos:start="7:58" pos:end="7:66">cpu_model</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="89:1">{<block_content pos:start="11:5" pos:end="87:42">

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:25">pxa2xx_state_s</name></name> <modifier pos:start="11:27" pos:end="11:27">*</modifier></type><name pos:start="11:28" pos:end="11:30">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:21">tc6393xb_s</name></name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:27">tmio</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:23">scoop_info_s</name></name> <modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:29">scp0</name></decl>, <decl pos:start="15:32" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:25"><modifier pos:start="15:32" pos:end="15:32">*</modifier></type><name pos:start="15:33" pos:end="15:36">scp1</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:79">(<expr pos:start="19:9" pos:end="19:78"><name pos:start="19:9" pos:end="19:16">ram_size</name> <operator pos:start="19:18" pos:end="19:18">&lt;</operator> <operator pos:start="19:20" pos:end="19:20">(</operator><name pos:start="19:21" pos:end="19:28">TOSA_RAM</name> <operator pos:start="19:30" pos:end="19:30">+</operator> <name pos:start="19:32" pos:end="19:39">TOSA_ROM</name> <operator pos:start="19:41" pos:end="19:41">+</operator> <name pos:start="19:43" pos:end="19:62">PXA2XX_INTERNAL_SIZE</name> <operator pos:start="19:64" pos:end="19:64">+</operator> <name pos:start="19:66" pos:end="19:77">TC6393XB_RAM</name><operator pos:start="19:78" pos:end="19:78">)</operator></expr>)</condition> <block pos:start="19:81" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:16">

        <expr_stmt pos:start="21:9" pos:end="23:60"><expr pos:start="21:9" pos:end="23:59"><call pos:start="21:9" pos:end="23:59"><name pos:start="21:9" pos:end="21:15">fprintf</name><argument_list pos:start="21:16" pos:end="23:59">(<argument pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:22">stderr</name></expr></argument>, <argument pos:start="21:25" pos:end="21:69"><expr pos:start="21:25" pos:end="21:69"><literal type="string" pos:start="21:25" pos:end="21:69">"This platform requires %i bytes of memory\n"</literal></expr></argument>,

                <argument pos:start="23:17" pos:end="23:58"><expr pos:start="23:17" pos:end="23:58"><name pos:start="23:17" pos:end="23:24">TOSA_RAM</name> <operator pos:start="23:26" pos:end="23:26">+</operator> <name pos:start="23:28" pos:end="23:35">TOSA_ROM</name> <operator pos:start="23:37" pos:end="23:37">+</operator> <name pos:start="23:39" pos:end="23:58">PXA2XX_INTERNAL_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:16"><expr pos:start="25:9" pos:end="25:15"><call pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:12">exit</name><argument_list pos:start="25:13" pos:end="25:15">(<argument pos:start="25:14" pos:end="25:14"><expr pos:start="25:14" pos:end="25:14"><literal type="number" pos:start="25:14" pos:end="25:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="33:29"><if pos:start="31:5" pos:end="33:29">if <condition pos:start="31:8" pos:end="31:19">(<expr pos:start="31:9" pos:end="31:18"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:18">cpu_model</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:29"><block_content pos:start="33:9" pos:end="33:29">

        <expr_stmt pos:start="33:9" pos:end="33:29"><expr pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:17">cpu_model</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <literal type="string" pos:start="33:21" pos:end="33:28">"pxa255"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:43"><expr pos:start="37:5" pos:end="37:42"><name pos:start="37:5" pos:end="37:7">cpu</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:42"><name pos:start="37:11" pos:end="37:21">pxa255_init</name><argument_list pos:start="37:22" pos:end="37:42">(<argument pos:start="37:23" pos:end="37:41"><expr pos:start="37:23" pos:end="37:41"><name pos:start="37:23" pos:end="37:41"><name pos:start="37:23" pos:end="37:32">tosa_binfo</name><operator pos:start="37:33" pos:end="37:33">.</operator><name pos:start="37:34" pos:end="37:41">ram_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:59"><expr pos:start="41:5" pos:end="43:58"><call pos:start="41:5" pos:end="43:58"><name pos:start="41:5" pos:end="41:32">cpu_register_physical_memory</name><argument_list pos:start="41:33" pos:end="43:58">(<argument pos:start="41:34" pos:end="41:34"><expr pos:start="41:34" pos:end="41:34"><literal type="number" pos:start="41:34" pos:end="41:34">0</literal></expr></argument>, <argument pos:start="41:37" pos:end="41:44"><expr pos:start="41:37" pos:end="41:44"><name pos:start="41:37" pos:end="41:44">TOSA_ROM</name></expr></argument>,

                    <argument pos:start="43:21" pos:end="43:57"><expr pos:start="43:21" pos:end="43:57"><call pos:start="43:21" pos:end="43:44"><name pos:start="43:21" pos:end="43:34">qemu_ram_alloc</name><argument_list pos:start="43:35" pos:end="43:44">(<argument pos:start="43:36" pos:end="43:43"><expr pos:start="43:36" pos:end="43:43"><name pos:start="43:36" pos:end="43:43">TOSA_ROM</name></expr></argument>)</argument_list></call> <operator pos:start="43:46" pos:end="43:46">|</operator> <name pos:start="43:48" pos:end="43:57">IO_MEM_ROM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="49:67"><expr pos:start="47:5" pos:end="49:66"><name pos:start="47:5" pos:end="47:8">tmio</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <call pos:start="47:12" pos:end="49:66"><name pos:start="47:12" pos:end="47:24">tc6393xb_init</name><argument_list pos:start="47:25" pos:end="49:66">(<argument pos:start="47:26" pos:end="47:35"><expr pos:start="47:26" pos:end="47:35"><literal type="number" pos:start="47:26" pos:end="47:35">0x10000000</literal></expr></argument>,

            <argument pos:start="49:13" pos:end="49:65"><expr pos:start="49:13" pos:end="49:65"><call pos:start="49:13" pos:end="49:41"><name pos:start="49:13" pos:end="49:30">pxa2xx_gpio_in_get</name><argument_list pos:start="49:31" pos:end="49:41">(<argument pos:start="49:32" pos:end="49:40"><expr pos:start="49:32" pos:end="49:40"><name pos:start="49:32" pos:end="49:40"><name pos:start="49:32" pos:end="49:34">cpu</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:40">gpio</name></name></expr></argument>)</argument_list></call><index pos:start="49:42" pos:end="49:65">[<expr pos:start="49:43" pos:end="49:64"><name pos:start="49:43" pos:end="49:64">TOSA_GPIO_TC6393XB_INT</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:42"><expr pos:start="53:5" pos:end="53:41"><name pos:start="53:5" pos:end="53:8">scp0</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <call pos:start="53:12" pos:end="53:41"><name pos:start="53:12" pos:end="53:21">scoop_init</name><argument_list pos:start="53:22" pos:end="53:41">(<argument pos:start="53:23" pos:end="53:25"><expr pos:start="53:23" pos:end="53:25"><name pos:start="53:23" pos:end="53:25">cpu</name></expr></argument>, <argument pos:start="53:28" pos:end="53:28"><expr pos:start="53:28" pos:end="53:28"><literal type="number" pos:start="53:28" pos:end="53:28">0</literal></expr></argument>, <argument pos:start="53:31" pos:end="53:40"><expr pos:start="53:31" pos:end="53:40"><literal type="number" pos:start="53:31" pos:end="53:40">0x08800000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:42"><expr pos:start="55:5" pos:end="55:41"><name pos:start="55:5" pos:end="55:8">scp1</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <call pos:start="55:12" pos:end="55:41"><name pos:start="55:12" pos:end="55:21">scoop_init</name><argument_list pos:start="55:22" pos:end="55:41">(<argument pos:start="55:23" pos:end="55:25"><expr pos:start="55:23" pos:end="55:25"><name pos:start="55:23" pos:end="55:25">cpu</name></expr></argument>, <argument pos:start="55:28" pos:end="55:28"><expr pos:start="55:28" pos:end="55:28"><literal type="number" pos:start="55:28" pos:end="55:28">1</literal></expr></argument>, <argument pos:start="55:31" pos:end="55:40"><expr pos:start="55:31" pos:end="55:40"><literal type="number" pos:start="55:31" pos:end="55:40">0x14800040</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:43"><expr pos:start="59:5" pos:end="59:42"><call pos:start="59:5" pos:end="59:42"><name pos:start="59:5" pos:end="59:19">tosa_gpio_setup</name><argument_list pos:start="59:20" pos:end="59:42">(<argument pos:start="59:21" pos:end="59:23"><expr pos:start="59:21" pos:end="59:23"><name pos:start="59:21" pos:end="59:23">cpu</name></expr></argument>, <argument pos:start="59:26" pos:end="59:29"><expr pos:start="59:26" pos:end="59:29"><name pos:start="59:26" pos:end="59:29">scp0</name></expr></argument>, <argument pos:start="59:32" pos:end="59:35"><expr pos:start="59:32" pos:end="59:35"><name pos:start="59:32" pos:end="59:35">scp1</name></expr></argument>, <argument pos:start="59:38" pos:end="59:41"><expr pos:start="59:38" pos:end="59:41"><name pos:start="59:38" pos:end="59:41">tmio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:32"><expr pos:start="63:5" pos:end="63:31"><call pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:26">tosa_microdrive_attach</name><argument_list pos:start="63:27" pos:end="63:31">(<argument pos:start="63:28" pos:end="63:30"><expr pos:start="63:28" pos:end="63:30"><name pos:start="63:28" pos:end="63:30">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:22"><expr pos:start="67:5" pos:end="67:21"><call pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:16">tosa_tg_init</name><argument_list pos:start="67:17" pos:end="67:21">(<argument pos:start="67:18" pos:end="67:20"><expr pos:start="67:18" pos:end="67:20"><name pos:start="67:18" pos:end="67:20">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:45">/* Setup initial (reset) machine state */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:49"><expr pos:start="73:5" pos:end="73:48"><name pos:start="73:5" pos:end="73:22"><name pos:start="73:5" pos:end="73:7">cpu</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:12">env</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:18">regs</name><index pos:start="73:19" pos:end="73:22">[<expr pos:start="73:20" pos:end="73:21"><literal type="number" pos:start="73:20" pos:end="73:21">15</literal></expr>]</index></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <name pos:start="73:26" pos:end="73:48"><name pos:start="73:26" pos:end="73:35">tosa_binfo</name><operator pos:start="73:36" pos:end="73:36">.</operator><name pos:start="73:37" pos:end="73:48">loader_start</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:49"><expr pos:start="77:5" pos:end="77:48"><name pos:start="77:5" pos:end="77:30"><name pos:start="77:5" pos:end="77:14">tosa_binfo</name><operator pos:start="77:15" pos:end="77:15">.</operator><name pos:start="77:16" pos:end="77:30">kernel_filename</name></name> <operator pos:start="77:32" pos:end="77:32">=</operator> <name pos:start="77:34" pos:end="77:48">kernel_filename</name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:47"><expr pos:start="79:5" pos:end="79:46"><name pos:start="79:5" pos:end="79:29"><name pos:start="79:5" pos:end="79:14">tosa_binfo</name><operator pos:start="79:15" pos:end="79:15">.</operator><name pos:start="79:16" pos:end="79:29">kernel_cmdline</name></name> <operator pos:start="79:31" pos:end="79:31">=</operator> <name pos:start="79:33" pos:end="79:46">kernel_cmdline</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:49"><expr pos:start="81:5" pos:end="81:48"><name pos:start="81:5" pos:end="81:30"><name pos:start="81:5" pos:end="81:14">tosa_binfo</name><operator pos:start="81:15" pos:end="81:15">.</operator><name pos:start="81:16" pos:end="81:30">initrd_filename</name></name> <operator pos:start="81:32" pos:end="81:32">=</operator> <name pos:start="81:34" pos:end="81:48">initrd_filename</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:32"><expr pos:start="83:5" pos:end="83:31"><name pos:start="83:5" pos:end="83:23"><name pos:start="83:5" pos:end="83:14">tosa_binfo</name><operator pos:start="83:15" pos:end="83:15">.</operator><name pos:start="83:16" pos:end="83:23">board_id</name></name> <operator pos:start="83:25" pos:end="83:25">=</operator> <literal type="number" pos:start="83:27" pos:end="83:31">0x208</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:43"><expr pos:start="85:5" pos:end="85:42"><call pos:start="85:5" pos:end="85:42"><name pos:start="85:5" pos:end="85:19">arm_load_kernel</name><argument_list pos:start="85:20" pos:end="85:42">(<argument pos:start="85:21" pos:end="85:28"><expr pos:start="85:21" pos:end="85:28"><name pos:start="85:21" pos:end="85:28"><name pos:start="85:21" pos:end="85:23">cpu</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:28">env</name></name></expr></argument>, <argument pos:start="85:31" pos:end="85:41"><expr pos:start="85:31" pos:end="85:41"><operator pos:start="85:31" pos:end="85:31">&amp;</operator><name pos:start="85:32" pos:end="85:41">tosa_binfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:42"><expr pos:start="87:5" pos:end="87:41"><call pos:start="87:5" pos:end="87:41"><name pos:start="87:5" pos:end="87:22">sl_bootparam_write</name><argument_list pos:start="87:23" pos:end="87:41">(<argument pos:start="87:24" pos:end="87:40"><expr pos:start="87:24" pos:end="87:40"><name pos:start="87:24" pos:end="87:40">SL_PXA_PARAM_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
