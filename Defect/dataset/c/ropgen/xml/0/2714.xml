<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2714.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">cpu_handle_debug_exception</name><parameter_list pos:start="1:39" pos:end="1:53">(<parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:49"><name pos:start="1:40" pos:end="1:47">CPUState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:32">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">CPUWatchpoint</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">wp</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:44"><if pos:start="9:5" pos:end="13:44">if <condition pos:start="9:8" pos:end="9:29">(<expr pos:start="9:9" pos:end="9:28"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:28"><name pos:start="9:10" pos:end="9:12">env</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:28">watchpoint_hit</name></name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="13:44"><block_content pos:start="11:9" pos:end="13:44">

        <macro pos:start="11:9" pos:end="11:51"><name pos:start="11:9" pos:end="11:21">TAILQ_FOREACH</name><argument_list pos:start="11:22" pos:end="11:51">(<argument pos:start="11:23" pos:end="11:24">wp</argument>, <argument pos:start="11:27" pos:end="11:43">&amp;env-&gt;watchpoints</argument>, <argument pos:start="11:46" pos:end="11:50">entry</argument>)</argument_list></macro>

            <expr_stmt pos:start="13:13" pos:end="13:44"><expr pos:start="13:13" pos:end="13:43"><name pos:start="13:13" pos:end="13:21"><name pos:start="13:13" pos:end="13:14">wp</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:21">flags</name></name> <operator pos:start="13:23" pos:end="13:24">&amp;=</operator> <operator pos:start="13:26" pos:end="13:26">~</operator><name pos:start="13:27" pos:end="13:43">BP_WATCHPOINT_HIT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="19:32"><if pos:start="17:5" pos:end="19:32">if <condition pos:start="17:8" pos:end="17:27">(<expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:26">debug_excp_handler</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:32"><block_content pos:start="19:9" pos:end="19:32">

        <expr_stmt pos:start="19:9" pos:end="19:32"><expr pos:start="19:9" pos:end="19:31"><call pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:26">debug_excp_handler</name><argument_list pos:start="19:27" pos:end="19:31">(<argument pos:start="19:28" pos:end="19:30"><expr pos:start="19:28" pos:end="19:30"><name pos:start="19:28" pos:end="19:30">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
