<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5332.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name></type> <name pos:start="1:30" pos:end="1:42">filter_common</name><parameter_list pos:start="1:43" pos:end="1:84">(<parameter pos:start="1:44" pos:end="1:53"><decl pos:start="1:44" pos:end="1:53"><type pos:start="1:44" pos:end="1:53"><name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">p</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:71"><decl pos:start="1:56" pos:end="1:71"><type pos:start="1:56" pos:end="1:71"><name pos:start="1:56" pos:end="1:64">ptrdiff_t</name></type> <name pos:start="1:66" pos:end="1:71">stride</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:83"><decl pos:start="1:74" pos:end="1:83"><type pos:start="1:74" pos:end="1:83"><name pos:start="1:74" pos:end="1:76">int</name></type> <name pos:start="1:78" pos:end="1:83">is4tap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:5">

    <decl_stmt pos:start="5:5" pos:end="7:18"><decl pos:start="5:5" pos:end="7:9"><type pos:start="5:5" pos:end="7:7"><name pos:start="5:5" pos:end="5:15">LOAD_PIXELS</name>

    <name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">a</name></decl>, <decl pos:start="7:12" pos:end="7:13"><type ref="prev" pos:start="5:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:13">f1</name></decl>, <decl pos:start="7:16" pos:end="7:17"><type ref="prev" pos:start="5:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:17">f2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">cm</name> <init pos:start="9:23" pos:end="9:49">= <expr pos:start="9:25" pos:end="9:49"><name pos:start="9:25" pos:end="9:34">ff_cropTbl</name> <operator pos:start="9:36" pos:end="9:36">+</operator> <name pos:start="9:38" pos:end="9:49">MAX_NEG_CROP</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:20"><expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:5">a</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <literal type="number" pos:start="13:9" pos:end="13:9">3</literal><operator pos:start="13:10" pos:end="13:10">*</operator><operator pos:start="13:11" pos:end="13:11">(</operator><name pos:start="13:12" pos:end="13:13">q0</name> <operator pos:start="13:15" pos:end="13:15">-</operator> <name pos:start="13:17" pos:end="13:18">p0</name><operator pos:start="13:19" pos:end="13:19">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="19:32"><if pos:start="17:5" pos:end="19:32">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:14">is4tap</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:32"><block_content pos:start="19:9" pos:end="19:32">

        <expr_stmt pos:start="19:9" pos:end="19:32"><expr pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:9">a</name> <operator pos:start="19:11" pos:end="19:12">+=</operator> <call pos:start="19:14" pos:end="19:31"><name pos:start="19:14" pos:end="19:22">clip_int8</name><argument_list pos:start="19:23" pos:end="19:31">(<argument pos:start="19:24" pos:end="19:30"><expr pos:start="19:24" pos:end="19:30"><name pos:start="19:24" pos:end="19:25">p1</name> <operator pos:start="19:27" pos:end="19:27">-</operator> <name pos:start="19:29" pos:end="19:30">q1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:5">a</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <call pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:17">clip_int8</name><argument_list pos:start="23:18" pos:end="23:20">(<argument pos:start="23:19" pos:end="23:19"><expr pos:start="23:19" pos:end="23:19"><name pos:start="23:19" pos:end="23:19">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="27:5" pos:end="27:53">// We deviate from the spec here with c(a+3) &gt;&gt; 3</comment>

    <comment type="line" pos:start="29:5" pos:end="29:37">// since that's what libvpx does.</comment>

    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:6">f1</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:24"><name pos:start="31:10" pos:end="31:14">FFMIN</name><argument_list pos:start="31:15" pos:end="31:24">(<argument pos:start="31:16" pos:end="31:18"><expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:16">a</name><operator pos:start="31:17" pos:end="31:17">+</operator><literal type="number" pos:start="31:18" pos:end="31:18">4</literal></expr></argument>, <argument pos:start="31:21" pos:end="31:23"><expr pos:start="31:21" pos:end="31:23"><literal type="number" pos:start="31:21" pos:end="31:23">127</literal></expr></argument>)</argument_list></call> <operator pos:start="31:26" pos:end="31:27">&gt;&gt;</operator> <literal type="number" pos:start="31:29" pos:end="31:29">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:6">f2</name> <operator pos:start="33:8" pos:end="33:8">=</operator> <call pos:start="33:10" pos:end="33:24"><name pos:start="33:10" pos:end="33:14">FFMIN</name><argument_list pos:start="33:15" pos:end="33:24">(<argument pos:start="33:16" pos:end="33:18"><expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:16">a</name><operator pos:start="33:17" pos:end="33:17">+</operator><literal type="number" pos:start="33:18" pos:end="33:18">3</literal></expr></argument>, <argument pos:start="33:21" pos:end="33:23"><expr pos:start="33:21" pos:end="33:23"><literal type="number" pos:start="33:21" pos:end="33:23">127</literal></expr></argument>)</argument_list></call> <operator pos:start="33:26" pos:end="33:27">&gt;&gt;</operator> <literal type="number" pos:start="33:29" pos:end="33:29">3</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="37:5" pos:end="37:62">// Despite what the spec says, we do need to clamp here to</comment>

    <comment type="line" pos:start="39:5" pos:end="39:31">// be bitexact with libvpx.</comment>

    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:5">p</name><index pos:start="41:6" pos:end="41:16">[<expr pos:start="41:7" pos:end="41:15"><operator pos:start="41:7" pos:end="41:7">-</operator><literal type="number" pos:start="41:8" pos:end="41:8">1</literal><operator pos:start="41:9" pos:end="41:9">*</operator><name pos:start="41:10" pos:end="41:15">stride</name></expr>]</index></name> <operator pos:start="41:18" pos:end="41:18">=</operator> <name pos:start="41:20" pos:end="41:30"><name pos:start="41:20" pos:end="41:21">cm</name><index pos:start="41:22" pos:end="41:30">[<expr pos:start="41:23" pos:end="41:29"><name pos:start="41:23" pos:end="41:24">p0</name> <operator pos:start="41:26" pos:end="41:26">+</operator> <name pos:start="41:28" pos:end="41:29">f2</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:31"><expr pos:start="43:5" pos:end="43:30"><name pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:5">p</name><index pos:start="43:6" pos:end="43:16">[ <expr pos:start="43:8" pos:end="43:15"><literal type="number" pos:start="43:8" pos:end="43:8">0</literal><operator pos:start="43:9" pos:end="43:9">*</operator><name pos:start="43:10" pos:end="43:15">stride</name></expr>]</index></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:30"><name pos:start="43:20" pos:end="43:21">cm</name><index pos:start="43:22" pos:end="43:30">[<expr pos:start="43:23" pos:end="43:29"><name pos:start="43:23" pos:end="43:24">q0</name> <operator pos:start="43:26" pos:end="43:26">-</operator> <name pos:start="43:28" pos:end="43:29">f1</name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="line" pos:start="47:5" pos:end="47:64">// only used for _inner on blocks without high edge variance</comment>

    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="57:5">if <condition pos:start="49:8" pos:end="49:16">(<expr pos:start="49:9" pos:end="49:15"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:15">is4tap</name></expr>)</condition> <block pos:start="49:18" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:34">

        <expr_stmt pos:start="51:9" pos:end="51:22"><expr pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:9">a</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <operator pos:start="51:13" pos:end="51:13">(</operator><name pos:start="51:14" pos:end="51:15">f1</name><operator pos:start="51:16" pos:end="51:16">+</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal><operator pos:start="51:18" pos:end="51:18">)</operator><operator pos:start="51:19" pos:end="51:20">&gt;&gt;</operator><literal type="number" pos:start="51:21" pos:end="51:21">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:34"><expr pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:9">p</name><index pos:start="53:10" pos:end="53:20">[<expr pos:start="53:11" pos:end="53:19"><operator pos:start="53:11" pos:end="53:11">-</operator><literal type="number" pos:start="53:12" pos:end="53:12">2</literal><operator pos:start="53:13" pos:end="53:13">*</operator><name pos:start="53:14" pos:end="53:19">stride</name></expr>]</index></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:33"><name pos:start="53:24" pos:end="53:25">cm</name><index pos:start="53:26" pos:end="53:33">[<expr pos:start="53:27" pos:end="53:32"><name pos:start="53:27" pos:end="53:28">p1</name> <operator pos:start="53:30" pos:end="53:30">+</operator> <name pos:start="53:32" pos:end="53:32">a</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:34"><expr pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:9">p</name><index pos:start="55:10" pos:end="55:20">[ <expr pos:start="55:12" pos:end="55:19"><literal type="number" pos:start="55:12" pos:end="55:12">1</literal><operator pos:start="55:13" pos:end="55:13">*</operator><name pos:start="55:14" pos:end="55:19">stride</name></expr>]</index></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:33"><name pos:start="55:24" pos:end="55:25">cm</name><index pos:start="55:26" pos:end="55:33">[<expr pos:start="55:27" pos:end="55:32"><name pos:start="55:27" pos:end="55:28">q1</name> <operator pos:start="55:30" pos:end="55:30">-</operator> <name pos:start="55:32" pos:end="55:32">a</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
