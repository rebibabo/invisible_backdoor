<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21857.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:37">nbd_co_receive_request</name><parameter_list pos:start="1:38" pos:end="3:66">(<parameter pos:start="1:39" pos:end="1:53"><decl pos:start="1:39" pos:end="1:53"><type pos:start="1:39" pos:end="1:53"><name pos:start="1:39" pos:end="1:48">NBDRequest</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">req</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:65"><decl pos:start="3:39" pos:end="3:65"><type pos:start="3:39" pos:end="3:65"><name pos:start="3:39" pos:end="3:56"><name pos:start="3:39" pos:end="3:44">struct</name> <name pos:start="3:46" pos:end="3:56">nbd_request</name></name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:65">request</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="183:1">{<block_content pos:start="7:5" pos:end="181:14">

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">NBDClient</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:21">client</name> <init pos:start="7:23" pos:end="7:35">= <expr pos:start="7:25" pos:end="7:35"><name pos:start="7:25" pos:end="7:35"><name pos:start="7:25" pos:end="7:27">req</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:35">client</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:20">command</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">ssize_t</name></type> <name pos:start="11:13" pos:end="11:14">rc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><call pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:12">g_assert</name><argument_list pos:start="15:13" pos:end="15:33">(<argument pos:start="15:14" pos:end="15:32"><expr pos:start="15:14" pos:end="15:32"><call pos:start="15:14" pos:end="15:32"><name pos:start="15:14" pos:end="15:30">qemu_in_coroutine</name><argument_list pos:start="15:31" pos:end="15:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:51"><expr pos:start="17:5" pos:end="17:50"><name pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:10">client</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:26">recv_coroutine</name></name> <operator pos:start="17:28" pos:end="17:28">=</operator> <call pos:start="17:30" pos:end="17:50"><name pos:start="17:30" pos:end="17:48">qemu_coroutine_self</name><argument_list pos:start="17:49" pos:end="17:50">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><call pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:23">nbd_update_can_read</name><argument_list pos:start="19:24" pos:end="19:31">(<argument pos:start="19:25" pos:end="19:30"><expr pos:start="19:25" pos:end="19:30"><name pos:start="19:25" pos:end="19:30">client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:6">rc</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <call pos:start="23:10" pos:end="23:50"><name pos:start="23:10" pos:end="23:28">nbd_receive_request</name><argument_list pos:start="23:29" pos:end="23:50">(<argument pos:start="23:30" pos:end="23:40"><expr pos:start="23:30" pos:end="23:40"><name pos:start="23:30" pos:end="23:40"><name pos:start="23:30" pos:end="23:35">client</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:40">ioc</name></name></expr></argument>, <argument pos:start="23:43" pos:end="23:49"><expr pos:start="23:43" pos:end="23:49"><name pos:start="23:43" pos:end="23:49">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:15">(<expr pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:10">rc</name> <operator pos:start="25:12" pos:end="25:12">&lt;</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>)</condition> <block pos:start="25:17" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:17">

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:26">(<expr pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:14">rc</name> <operator pos:start="27:16" pos:end="27:17">!=</operator> <operator pos:start="27:19" pos:end="27:19">-</operator><name pos:start="27:20" pos:end="27:25">EAGAIN</name></expr>)</condition> <block pos:start="27:28" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:22">

            <expr_stmt pos:start="29:13" pos:end="29:22"><expr pos:start="29:13" pos:end="29:21"><name pos:start="29:13" pos:end="29:14">rc</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <operator pos:start="29:18" pos:end="29:18">-</operator><name pos:start="29:19" pos:end="29:21">EIO</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="33:9" pos:end="33:17">goto <name pos:start="33:14" pos:end="33:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:27"><expr pos:start="39:5" pos:end="39:26"><call pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:9">TRACE</name><argument_list pos:start="39:10" pos:end="39:26">(<argument pos:start="39:11" pos:end="39:25"><expr pos:start="39:11" pos:end="39:25"><literal type="string" pos:start="39:11" pos:end="39:25">"Decoding type"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:51"><expr pos:start="43:5" pos:end="43:50"><name pos:start="43:5" pos:end="43:11">command</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:27"><name pos:start="43:15" pos:end="43:21">request</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:27">type</name></name> <operator pos:start="43:29" pos:end="43:29">&amp;</operator> <name pos:start="43:31" pos:end="43:50">NBD_CMD_MASK_COMMAND</name></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:33">(<expr pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:15">command</name> <operator pos:start="45:17" pos:end="45:18">!=</operator> <name pos:start="45:20" pos:end="45:32">NBD_CMD_WRITE</name></expr>)</condition> <block pos:start="45:35" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:29">

        <comment type="block" pos:start="47:9" pos:end="47:65">/* No payload, we are ready to read the next request.  */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:11">req</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:21">complete</name></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <name pos:start="49:25" pos:end="49:28">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="67:5"><if pos:start="55:5" pos:end="67:5">if <condition pos:start="55:8" pos:end="55:32">(<expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:15">command</name> <operator pos:start="55:17" pos:end="55:18">==</operator> <name pos:start="55:20" pos:end="55:31">NBD_CMD_DISC</name></expr>)</condition> <block pos:start="55:34" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:17">

        <comment type="block" pos:start="57:9" pos:end="59:58">/* Special case: we're going to disconnect without a reply,

         * whether or not flags, from, or len are bogus */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:44"><expr pos:start="61:9" pos:end="61:43"><call pos:start="61:9" pos:end="61:43"><name pos:start="61:9" pos:end="61:13">TRACE</name><argument_list pos:start="61:14" pos:end="61:43">(<argument pos:start="61:15" pos:end="61:42"><expr pos:start="61:15" pos:end="61:42"><literal type="string" pos:start="61:15" pos:end="61:42">"Request type is DISCONNECT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:18"><expr pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:10">rc</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <operator pos:start="63:14" pos:end="63:14">-</operator><name pos:start="63:15" pos:end="63:17">EIO</name></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:17">goto <name pos:start="65:14" pos:end="65:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="71:5" pos:end="75:64">/* Check for sanity in the parameters, part 1.  Defer as many

     * checks as possible until after reading any NBD_CMD_WRITE

     * payload, so we can try and keep the connection alive.  */</comment>

    <if_stmt pos:start="77:5" pos:end="85:5"><if pos:start="77:5" pos:end="85:5">if <condition pos:start="77:8" pos:end="77:55">(<expr pos:start="77:9" pos:end="77:54"><operator pos:start="77:9" pos:end="77:9">(</operator><name pos:start="77:10" pos:end="77:22"><name pos:start="77:10" pos:end="77:16">request</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:22">from</name></name> <operator pos:start="77:24" pos:end="77:24">+</operator> <name pos:start="77:26" pos:end="77:37"><name pos:start="77:26" pos:end="77:32">request</name><operator pos:start="77:33" pos:end="77:34">-&gt;</operator><name pos:start="77:35" pos:end="77:37">len</name></name><operator pos:start="77:38" pos:end="77:38">)</operator> <operator pos:start="77:40" pos:end="77:40">&lt;</operator> <name pos:start="77:42" pos:end="77:54"><name pos:start="77:42" pos:end="77:48">request</name><operator pos:start="77:49" pos:end="77:50">-&gt;</operator><name pos:start="77:51" pos:end="77:54">from</name></name></expr>)</condition> <block pos:start="77:57" pos:end="85:5">{<block_content pos:start="79:9" pos:end="83:17">

        <expr_stmt pos:start="79:9" pos:end="79:73"><expr pos:start="79:9" pos:end="79:72"><call pos:start="79:9" pos:end="79:72"><name pos:start="79:9" pos:end="79:11">LOG</name><argument_list pos:start="79:12" pos:end="79:72">(<argument pos:start="79:13" pos:end="79:71"><expr pos:start="79:13" pos:end="79:71"><literal type="string" pos:start="79:13" pos:end="79:71">"integer overflow detected, you're probably being attacked"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:21"><expr pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:10">rc</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <operator pos:start="81:14" pos:end="81:14">-</operator><name pos:start="81:15" pos:end="81:20">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="83:9" pos:end="83:17">goto <name pos:start="83:14" pos:end="83:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="115:5"><if pos:start="89:5" pos:end="115:5">if <condition pos:start="89:8" pos:end="89:60">(<expr pos:start="89:9" pos:end="89:59"><name pos:start="89:9" pos:end="89:15">command</name> <operator pos:start="89:17" pos:end="89:18">==</operator> <name pos:start="89:20" pos:end="89:31">NBD_CMD_READ</name> <operator pos:start="89:33" pos:end="89:34">||</operator> <name pos:start="89:36" pos:end="89:42">command</name> <operator pos:start="89:44" pos:end="89:45">==</operator> <name pos:start="89:47" pos:end="89:59">NBD_CMD_WRITE</name></expr>)</condition> <block pos:start="89:62" pos:end="115:5">{<block_content pos:start="91:9" pos:end="113:9">

        <if_stmt pos:start="91:9" pos:end="101:9"><if pos:start="91:9" pos:end="101:9">if <condition pos:start="91:12" pos:end="91:47">(<expr pos:start="91:13" pos:end="91:46"><name pos:start="91:13" pos:end="91:24"><name pos:start="91:13" pos:end="91:19">request</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:24">len</name></name> <operator pos:start="91:26" pos:end="91:26">&gt;</operator> <name pos:start="91:28" pos:end="91:46">NBD_MAX_BUFFER_SIZE</name></expr>)</condition> <block pos:start="91:49" pos:end="101:9">{<block_content pos:start="93:13" pos:end="99:21">

            <expr_stmt pos:start="93:13" pos:end="95:51"><expr pos:start="93:13" pos:end="95:50"><call pos:start="93:13" pos:end="95:50"><name pos:start="93:13" pos:end="93:15">LOG</name><argument_list pos:start="93:16" pos:end="95:50">(<argument pos:start="93:17" pos:end="93:63"><expr pos:start="93:17" pos:end="93:63"><literal type="string" pos:start="93:17" pos:end="93:24">"len (%"</literal> <name pos:start="93:26" pos:end="93:31">PRIu32</name><literal type="string" pos:start="93:32" pos:end="93:63">" ) is larger than max len (%u)"</literal></expr></argument>,

                <argument pos:start="95:17" pos:end="95:28"><expr pos:start="95:17" pos:end="95:28"><name pos:start="95:17" pos:end="95:28"><name pos:start="95:17" pos:end="95:23">request</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:28">len</name></name></expr></argument>, <argument pos:start="95:31" pos:end="95:49"><expr pos:start="95:31" pos:end="95:49"><name pos:start="95:31" pos:end="95:49">NBD_MAX_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:25"><expr pos:start="97:13" pos:end="97:24"><name pos:start="97:13" pos:end="97:14">rc</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <operator pos:start="97:18" pos:end="97:18">-</operator><name pos:start="97:19" pos:end="97:24">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="99:13" pos:end="99:21">goto <name pos:start="99:18" pos:end="99:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:71"><expr pos:start="105:9" pos:end="105:70"><name pos:start="105:9" pos:end="105:17"><name pos:start="105:9" pos:end="105:11">req</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:17">data</name></name> <operator pos:start="105:19" pos:end="105:19">=</operator> <call pos:start="105:21" pos:end="105:70"><name pos:start="105:21" pos:end="105:38">blk_try_blockalign</name><argument_list pos:start="105:39" pos:end="105:70">(<argument pos:start="105:40" pos:end="105:55"><expr pos:start="105:40" pos:end="105:55"><name pos:start="105:40" pos:end="105:55"><name pos:start="105:40" pos:end="105:45">client</name><operator pos:start="105:46" pos:end="105:47">-&gt;</operator><name pos:start="105:48" pos:end="105:50">exp</name><operator pos:start="105:51" pos:end="105:52">-&gt;</operator><name pos:start="105:53" pos:end="105:55">blk</name></name></expr></argument>, <argument pos:start="105:58" pos:end="105:69"><expr pos:start="105:58" pos:end="105:69"><name pos:start="105:58" pos:end="105:69"><name pos:start="105:58" pos:end="105:64">request</name><operator pos:start="105:65" pos:end="105:66">-&gt;</operator><name pos:start="105:67" pos:end="105:69">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="113:9"><if pos:start="107:9" pos:end="113:9">if <condition pos:start="107:12" pos:end="107:30">(<expr pos:start="107:13" pos:end="107:29"><name pos:start="107:13" pos:end="107:21"><name pos:start="107:13" pos:end="107:15">req</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:21">data</name></name> <operator pos:start="107:23" pos:end="107:24">==</operator> <name pos:start="107:26" pos:end="107:29">NULL</name></expr>)</condition> <block pos:start="107:32" pos:end="113:9">{<block_content pos:start="109:13" pos:end="111:21">

            <expr_stmt pos:start="109:13" pos:end="109:25"><expr pos:start="109:13" pos:end="109:24"><name pos:start="109:13" pos:end="109:14">rc</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <operator pos:start="109:18" pos:end="109:18">-</operator><name pos:start="109:19" pos:end="109:24">ENOMEM</name></expr>;</expr_stmt>

            <goto pos:start="111:13" pos:end="111:21">goto <name pos:start="111:18" pos:end="111:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="117:5" pos:end="135:5"><if pos:start="117:5" pos:end="135:5">if <condition pos:start="117:8" pos:end="117:33">(<expr pos:start="117:9" pos:end="117:32"><name pos:start="117:9" pos:end="117:15">command</name> <operator pos:start="117:17" pos:end="117:18">==</operator> <name pos:start="117:20" pos:end="117:32">NBD_CMD_WRITE</name></expr>)</condition> <block pos:start="117:35" pos:end="135:5">{<block_content pos:start="119:9" pos:end="133:29">

        <expr_stmt pos:start="119:9" pos:end="119:59"><expr pos:start="119:9" pos:end="119:58"><call pos:start="119:9" pos:end="119:58"><name pos:start="119:9" pos:end="119:13">TRACE</name><argument_list pos:start="119:14" pos:end="119:58">(<argument pos:start="119:15" pos:end="119:43"><expr pos:start="119:15" pos:end="119:43"><literal type="string" pos:start="119:15" pos:end="119:25">"Reading %"</literal> <name pos:start="119:27" pos:end="119:32">PRIu32</name> <literal type="string" pos:start="119:34" pos:end="119:43">" byte(s)"</literal></expr></argument>, <argument pos:start="119:46" pos:end="119:57"><expr pos:start="119:46" pos:end="119:57"><name pos:start="119:46" pos:end="119:57"><name pos:start="119:46" pos:end="119:52">request</name><operator pos:start="119:53" pos:end="119:54">-&gt;</operator><name pos:start="119:55" pos:end="119:57">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="123:9" pos:end="131:9"><if pos:start="123:9" pos:end="131:9">if <condition pos:start="123:12" pos:end="123:76">(<expr pos:start="123:13" pos:end="123:75"><call pos:start="123:13" pos:end="123:59"><name pos:start="123:13" pos:end="123:21">read_sync</name><argument_list pos:start="123:22" pos:end="123:59">(<argument pos:start="123:23" pos:end="123:33"><expr pos:start="123:23" pos:end="123:33"><name pos:start="123:23" pos:end="123:33"><name pos:start="123:23" pos:end="123:28">client</name><operator pos:start="123:29" pos:end="123:30">-&gt;</operator><name pos:start="123:31" pos:end="123:33">ioc</name></name></expr></argument>, <argument pos:start="123:36" pos:end="123:44"><expr pos:start="123:36" pos:end="123:44"><name pos:start="123:36" pos:end="123:44"><name pos:start="123:36" pos:end="123:38">req</name><operator pos:start="123:39" pos:end="123:40">-&gt;</operator><name pos:start="123:41" pos:end="123:44">data</name></name></expr></argument>, <argument pos:start="123:47" pos:end="123:58"><expr pos:start="123:47" pos:end="123:58"><name pos:start="123:47" pos:end="123:58"><name pos:start="123:47" pos:end="123:53">request</name><operator pos:start="123:54" pos:end="123:55">-&gt;</operator><name pos:start="123:56" pos:end="123:58">len</name></name></expr></argument>)</argument_list></call> <operator pos:start="123:61" pos:end="123:62">!=</operator> <name pos:start="123:64" pos:end="123:75"><name pos:start="123:64" pos:end="123:70">request</name><operator pos:start="123:71" pos:end="123:72">-&gt;</operator><name pos:start="123:73" pos:end="123:75">len</name></name></expr>)</condition> <block pos:start="123:78" pos:end="131:9">{<block_content pos:start="125:13" pos:end="129:21">

            <expr_stmt pos:start="125:13" pos:end="125:46"><expr pos:start="125:13" pos:end="125:45"><call pos:start="125:13" pos:end="125:45"><name pos:start="125:13" pos:end="125:15">LOG</name><argument_list pos:start="125:16" pos:end="125:45">(<argument pos:start="125:17" pos:end="125:44"><expr pos:start="125:17" pos:end="125:44"><literal type="string" pos:start="125:17" pos:end="125:44">"reading from socket failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:22"><expr pos:start="127:13" pos:end="127:21"><name pos:start="127:13" pos:end="127:14">rc</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <operator pos:start="127:18" pos:end="127:18">-</operator><name pos:start="127:19" pos:end="127:21">EIO</name></expr>;</expr_stmt>

            <goto pos:start="129:13" pos:end="129:21">goto <name pos:start="129:18" pos:end="129:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:29"><expr pos:start="133:9" pos:end="133:28"><name pos:start="133:9" pos:end="133:21"><name pos:start="133:9" pos:end="133:11">req</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:21">complete</name></name> <operator pos:start="133:23" pos:end="133:23">=</operator> <name pos:start="133:25" pos:end="133:28">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="139:5" pos:end="139:32">/* Sanity checks, part 2. */</comment>

    <if_stmt pos:start="141:5" pos:end="153:5"><if pos:start="141:5" pos:end="153:5">if <condition pos:start="141:8" pos:end="141:57">(<expr pos:start="141:9" pos:end="141:56"><name pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:15">request</name><operator pos:start="141:16" pos:end="141:17">-&gt;</operator><name pos:start="141:18" pos:end="141:21">from</name></name> <operator pos:start="141:23" pos:end="141:23">+</operator> <name pos:start="141:25" pos:end="141:36"><name pos:start="141:25" pos:end="141:31">request</name><operator pos:start="141:32" pos:end="141:33">-&gt;</operator><name pos:start="141:34" pos:end="141:36">len</name></name> <operator pos:start="141:38" pos:end="141:38">&gt;</operator> <name pos:start="141:40" pos:end="141:56"><name pos:start="141:40" pos:end="141:45">client</name><operator pos:start="141:46" pos:end="141:47">-&gt;</operator><name pos:start="141:48" pos:end="141:50">exp</name><operator pos:start="141:51" pos:end="141:52">-&gt;</operator><name pos:start="141:53" pos:end="141:56">size</name></name></expr>)</condition> <block pos:start="141:59" pos:end="153:5">{<block_content pos:start="143:9" pos:end="151:17">

        <expr_stmt pos:start="143:9" pos:end="147:41"><expr pos:start="143:9" pos:end="147:40"><call pos:start="143:9" pos:end="147:40"><name pos:start="143:9" pos:end="143:11">LOG</name><argument_list pos:start="143:12" pos:end="147:40">(<argument pos:start="143:13" pos:end="145:30"><expr pos:start="143:13" pos:end="145:30"><literal type="string" pos:start="143:13" pos:end="143:41">"operation past EOF; From: %"</literal> <name pos:start="143:43" pos:end="143:48">PRIu64</name> <literal type="string" pos:start="143:50" pos:end="143:59">", Len: %"</literal> <name pos:start="143:61" pos:end="143:66">PRIu32</name>

            <literal type="string" pos:start="145:13" pos:end="145:23">", Size: %"</literal> <name pos:start="145:25" pos:end="145:30">PRIu64</name></expr></argument>, <argument pos:start="145:33" pos:end="145:45"><expr pos:start="145:33" pos:end="145:45"><name pos:start="145:33" pos:end="145:45"><name pos:start="145:33" pos:end="145:39">request</name><operator pos:start="145:40" pos:end="145:41">-&gt;</operator><name pos:start="145:42" pos:end="145:45">from</name></name></expr></argument>, <argument pos:start="145:48" pos:end="145:59"><expr pos:start="145:48" pos:end="145:59"><name pos:start="145:48" pos:end="145:59"><name pos:start="145:48" pos:end="145:54">request</name><operator pos:start="145:55" pos:end="145:56">-&gt;</operator><name pos:start="145:57" pos:end="145:59">len</name></name></expr></argument>,

            <argument pos:start="147:13" pos:end="147:39"><expr pos:start="147:13" pos:end="147:39"><operator pos:start="147:13" pos:end="147:13">(</operator><name pos:start="147:14" pos:end="147:21">uint64_t</name><operator pos:start="147:22" pos:end="147:22">)</operator><name pos:start="147:23" pos:end="147:39"><name pos:start="147:23" pos:end="147:28">client</name><operator pos:start="147:29" pos:end="147:30">-&gt;</operator><name pos:start="147:31" pos:end="147:33">exp</name><operator pos:start="147:34" pos:end="147:35">-&gt;</operator><name pos:start="147:36" pos:end="147:39">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:58"><expr pos:start="149:9" pos:end="149:57"><name pos:start="149:9" pos:end="149:10">rc</name> <operator pos:start="149:12" pos:end="149:12">=</operator> <ternary pos:start="149:14" pos:end="149:57"><condition pos:start="149:14" pos:end="149:39"><expr pos:start="149:14" pos:end="149:37"><name pos:start="149:14" pos:end="149:20">command</name> <operator pos:start="149:22" pos:end="149:23">==</operator> <name pos:start="149:25" pos:end="149:37">NBD_CMD_WRITE</name></expr> ?</condition><then pos:start="149:41" pos:end="149:47"> <expr pos:start="149:41" pos:end="149:47"><operator pos:start="149:41" pos:end="149:41">-</operator><name pos:start="149:42" pos:end="149:47">ENOSPC</name></expr> </then><else pos:start="149:49" pos:end="149:57">: <expr pos:start="149:51" pos:end="149:57"><operator pos:start="149:51" pos:end="149:51">-</operator><name pos:start="149:52" pos:end="149:57">EINVAL</name></expr></else></ternary></expr>;</expr_stmt>

        <goto pos:start="151:9" pos:end="151:17">goto <name pos:start="151:14" pos:end="151:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="155:5" pos:end="165:5"><if pos:start="155:5" pos:end="165:5">if <condition pos:start="155:8" pos:end="155:66">(<expr pos:start="155:9" pos:end="155:65"><name pos:start="155:9" pos:end="155:21"><name pos:start="155:9" pos:end="155:15">request</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:21">type</name></name> <operator pos:start="155:23" pos:end="155:23">&amp;</operator> <operator pos:start="155:25" pos:end="155:25">~</operator><name pos:start="155:26" pos:end="155:45">NBD_CMD_MASK_COMMAND</name> <operator pos:start="155:47" pos:end="155:47">&amp;</operator> <operator pos:start="155:49" pos:end="155:49">~</operator><name pos:start="155:50" pos:end="155:65">NBD_CMD_FLAG_FUA</name></expr>)</condition> <block pos:start="155:68" pos:end="165:5">{<block_content pos:start="157:9" pos:end="163:17">

        <expr_stmt pos:start="157:9" pos:end="159:51"><expr pos:start="157:9" pos:end="159:50"><call pos:start="157:9" pos:end="159:50"><name pos:start="157:9" pos:end="157:11">LOG</name><argument_list pos:start="157:12" pos:end="159:50">(<argument pos:start="157:13" pos:end="157:42"><expr pos:start="157:13" pos:end="157:42"><literal type="string" pos:start="157:13" pos:end="157:42">"unsupported flags (got 0x%x)"</literal></expr></argument>,

            <argument pos:start="159:13" pos:end="159:49"><expr pos:start="159:13" pos:end="159:49"><name pos:start="159:13" pos:end="159:25"><name pos:start="159:13" pos:end="159:19">request</name><operator pos:start="159:20" pos:end="159:21">-&gt;</operator><name pos:start="159:22" pos:end="159:25">type</name></name> <operator pos:start="159:27" pos:end="159:27">&amp;</operator> <operator pos:start="159:29" pos:end="159:29">~</operator><name pos:start="159:30" pos:end="159:49">NBD_CMD_MASK_COMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:21"><expr pos:start="161:9" pos:end="161:20"><name pos:start="161:9" pos:end="161:10">rc</name> <operator pos:start="161:12" pos:end="161:12">=</operator> <operator pos:start="161:14" pos:end="161:14">-</operator><name pos:start="161:15" pos:end="161:20">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="163:9" pos:end="163:17">goto <name pos:start="163:14" pos:end="163:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="169:5" pos:end="169:11"><expr pos:start="169:5" pos:end="169:10"><name pos:start="169:5" pos:end="169:6">rc</name> <operator pos:start="169:8" pos:end="169:8">=</operator> <literal type="number" pos:start="169:10" pos:end="169:10">0</literal></expr>;</expr_stmt>



<label pos:start="173:1" pos:end="173:4"><name pos:start="173:1" pos:end="173:3">out</name>:</label>

    <expr_stmt pos:start="175:5" pos:end="175:34"><expr pos:start="175:5" pos:end="175:33"><name pos:start="175:5" pos:end="175:26"><name pos:start="175:5" pos:end="175:10">client</name><operator pos:start="175:11" pos:end="175:12">-&gt;</operator><name pos:start="175:13" pos:end="175:26">recv_coroutine</name></name> <operator pos:start="175:28" pos:end="175:28">=</operator> <name pos:start="175:30" pos:end="175:33">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:32"><expr pos:start="177:5" pos:end="177:31"><call pos:start="177:5" pos:end="177:31"><name pos:start="177:5" pos:end="177:23">nbd_update_can_read</name><argument_list pos:start="177:24" pos:end="177:31">(<argument pos:start="177:25" pos:end="177:30"><expr pos:start="177:25" pos:end="177:30"><name pos:start="177:25" pos:end="177:30">client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="181:5" pos:end="181:14">return <expr pos:start="181:12" pos:end="181:13"><name pos:start="181:12" pos:end="181:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
