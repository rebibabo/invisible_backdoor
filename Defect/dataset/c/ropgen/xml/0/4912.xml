<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4912.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">gboolean</name></type> <name pos:start="1:17" pos:end="1:33">cadence_uart_xmit</name><parameter_list pos:start="1:34" pos:end="3:47">(<parameter pos:start="1:35" pos:end="1:50"><decl pos:start="1:35" pos:end="1:50"><type pos:start="1:35" pos:end="1:50"><name pos:start="1:35" pos:end="1:44">GIOChannel</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">chan</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:69"><decl pos:start="1:53" pos:end="1:69"><type pos:start="1:53" pos:end="1:69"><name pos:start="1:53" pos:end="1:64">GIOCondition</name></type> <name pos:start="1:66" pos:end="1:69">cond</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:46"><decl pos:start="3:35" pos:end="3:46"><type pos:start="3:35" pos:end="3:46"><name pos:start="3:35" pos:end="3:38">void</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:46">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:17">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">CadenceUARTState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">s</name> <init pos:start="7:25" pos:end="7:32">= <expr pos:start="7:27" pos:end="7:32"><name pos:start="7:27" pos:end="7:32">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:57">/* instant drain the fifo when there's no back-end */</comment>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:15"><name pos:start="15:10" pos:end="15:10">s</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:15">chr</name></name></expr>)</condition> <block pos:start="15:18" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:21">

        <expr_stmt pos:start="17:9" pos:end="17:24"><expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:19">tx_count</name></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:21">return <expr pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:20">FALSE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:21">(<expr pos:start="25:9" pos:end="25:20"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:20"><name pos:start="25:10" pos:end="25:10">s</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:20">tx_count</name></name></expr>)</condition> <block pos:start="25:23" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:21">

        <return pos:start="27:9" pos:end="27:21">return <expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20">FALSE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:61"><expr pos:start="33:5" pos:end="33:60"><name pos:start="33:5" pos:end="33:7">ret</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:60"><name pos:start="33:11" pos:end="33:27">qemu_chr_fe_write</name><argument_list pos:start="33:28" pos:end="33:60">(<argument pos:start="33:29" pos:end="33:34"><expr pos:start="33:29" pos:end="33:34"><name pos:start="33:29" pos:end="33:34"><name pos:start="33:29" pos:end="33:29">s</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:34">chr</name></name></expr></argument>, <argument pos:start="33:37" pos:end="33:46"><expr pos:start="33:37" pos:end="33:46"><name pos:start="33:37" pos:end="33:46"><name pos:start="33:37" pos:end="33:37">s</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:46">tx_fifo</name></name></expr></argument>, <argument pos:start="33:49" pos:end="33:59"><expr pos:start="33:49" pos:end="33:59"><name pos:start="33:49" pos:end="33:59"><name pos:start="33:49" pos:end="33:49">s</name><operator pos:start="33:50" pos:end="33:51">-&gt;</operator><name pos:start="33:52" pos:end="33:59">tx_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:23"><expr pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:15">tx_count</name></name> <operator pos:start="35:17" pos:end="35:18">-=</operator> <name pos:start="35:20" pos:end="35:22">ret</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:55"><expr pos:start="37:5" pos:end="37:54"><call pos:start="37:5" pos:end="37:54"><name pos:start="37:5" pos:end="37:11">memmove</name><argument_list pos:start="37:12" pos:end="37:54">(<argument pos:start="37:13" pos:end="37:22"><expr pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:22">tx_fifo</name></name></expr></argument>, <argument pos:start="37:25" pos:end="37:40"><expr pos:start="37:25" pos:end="37:40"><name pos:start="37:25" pos:end="37:34"><name pos:start="37:25" pos:end="37:25">s</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:34">tx_fifo</name></name> <operator pos:start="37:36" pos:end="37:36">+</operator> <name pos:start="37:38" pos:end="37:40">ret</name></expr></argument>, <argument pos:start="37:43" pos:end="37:53"><expr pos:start="37:43" pos:end="37:53"><name pos:start="37:43" pos:end="37:53"><name pos:start="37:43" pos:end="37:43">s</name><operator pos:start="37:44" pos:end="37:45">-&gt;</operator><name pos:start="37:46" pos:end="37:53">tx_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:20">(<expr pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:19">tx_count</name></name></expr>)</condition> <block pos:start="41:22" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:18">

        <decl_stmt pos:start="43:9" pos:end="45:60"><decl pos:start="43:9" pos:end="45:59"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:13">r</name> <init pos:start="43:15" pos:end="45:59">= <expr pos:start="43:17" pos:end="45:59"><call pos:start="43:17" pos:end="45:59"><name pos:start="43:17" pos:end="43:37">qemu_chr_fe_add_watch</name><argument_list pos:start="43:38" pos:end="45:59">(<argument pos:start="43:39" pos:end="43:44"><expr pos:start="43:39" pos:end="43:44"><name pos:start="43:39" pos:end="43:44"><name pos:start="43:39" pos:end="43:39">s</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:44">chr</name></name></expr></argument>, <argument pos:start="43:47" pos:end="43:63"><expr pos:start="43:47" pos:end="43:63"><name pos:start="43:47" pos:end="43:54">G_IO_OUT</name><operator pos:start="43:55" pos:end="43:55">|</operator><name pos:start="43:56" pos:end="43:63">G_IO_HUP</name></expr></argument>,

                                      <argument pos:start="45:39" pos:end="45:55"><expr pos:start="45:39" pos:end="45:55"><name pos:start="45:39" pos:end="45:55">cadence_uart_xmit</name></expr></argument>, <argument pos:start="45:58" pos:end="45:58"><expr pos:start="45:58" pos:end="45:58"><name pos:start="45:58" pos:end="45:58">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:18"><expr pos:start="47:9" pos:end="47:17"><call pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:14">assert</name><argument_list pos:start="47:15" pos:end="47:17">(<argument pos:start="47:16" pos:end="47:16"><expr pos:start="47:16" pos:end="47:16"><name pos:start="47:16" pos:end="47:16">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:26"><expr pos:start="53:5" pos:end="53:25"><call pos:start="53:5" pos:end="53:25"><name pos:start="53:5" pos:end="53:22">uart_update_status</name><argument_list pos:start="53:23" pos:end="53:25">(<argument pos:start="53:24" pos:end="53:24"><expr pos:start="53:24" pos:end="53:24"><name pos:start="53:24" pos:end="53:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="55:5" pos:end="55:17">return <expr pos:start="55:12" pos:end="55:16"><name pos:start="55:12" pos:end="55:16">FALSE</name></expr>;</return>

</block_content>}</block></function>
</unit>
