<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4402.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:36"><name pos:start="1:1" pos:end="1:19">opts_start_optional</name><argument_list pos:start="1:20" pos:end="3:36">(<argument pos:start="1:21" pos:end="1:30">Visitor *v</argument>, <argument pos:start="1:33" pos:end="1:45">bool *present</argument>, <argument pos:start="1:48" pos:end="1:63">const char *name</argument>,

                       <argument pos:start="3:24" pos:end="3:35">Error **errp</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="17:1">{<block_content pos:start="7:5" pos:end="15:57">

    <decl_stmt pos:start="7:5" pos:end="7:57"><decl pos:start="7:5" pos:end="7:56"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">OptsVisitor</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">ov</name> <init pos:start="7:21" pos:end="7:56">= <expr pos:start="7:23" pos:end="7:56"><call pos:start="7:23" pos:end="7:56"><name pos:start="7:23" pos:end="7:31">DO_UPCAST</name><argument_list pos:start="7:32" pos:end="7:56">(<argument pos:start="7:33" pos:end="7:43"><expr pos:start="7:33" pos:end="7:43"><name pos:start="7:33" pos:end="7:43">OptsVisitor</name></expr></argument>, <argument pos:start="7:46" pos:end="7:52"><expr pos:start="7:46" pos:end="7:52"><name pos:start="7:46" pos:end="7:52">visitor</name></expr></argument>, <argument pos:start="7:55" pos:end="7:55"><expr pos:start="7:55" pos:end="7:55"><name pos:start="7:55" pos:end="7:55">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:72">/* we only support a single mandatory scalar field in a list node */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><call pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:37">(<argument pos:start="13:12" pos:end="13:36"><expr pos:start="13:12" pos:end="13:36"><name pos:start="13:12" pos:end="13:28"><name pos:start="13:12" pos:end="13:13">ov</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:28">repeated_opts</name></name> <operator pos:start="13:30" pos:end="13:31">==</operator> <name pos:start="13:33" pos:end="13:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:57"><expr pos:start="15:5" pos:end="15:56"><operator pos:start="15:5" pos:end="15:5">*</operator><name pos:start="15:6" pos:end="15:12">present</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <operator pos:start="15:16" pos:end="15:16">(</operator><call pos:start="15:17" pos:end="15:47"><name pos:start="15:17" pos:end="15:31">lookup_distinct</name><argument_list pos:start="15:32" pos:end="15:47">(<argument pos:start="15:33" pos:end="15:34"><expr pos:start="15:33" pos:end="15:34"><name pos:start="15:33" pos:end="15:34">ov</name></expr></argument>, <argument pos:start="15:37" pos:end="15:40"><expr pos:start="15:37" pos:end="15:40"><name pos:start="15:37" pos:end="15:40">name</name></expr></argument>, <argument pos:start="15:43" pos:end="15:46"><expr pos:start="15:43" pos:end="15:46"><name pos:start="15:43" pos:end="15:46">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="15:49" pos:end="15:50">!=</operator> <name pos:start="15:52" pos:end="15:55">NULL</name><operator pos:start="15:56" pos:end="15:56">)</operator></expr>;</expr_stmt>

</block_content>}</block>
</unit>
