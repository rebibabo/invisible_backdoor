<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11178.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">replay_read_events</name><parameter_list pos:start="1:24" pos:end="1:39">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:27"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:38">checkpoint</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:5">

    <while pos:start="5:5" pos:end="29:5">while <condition pos:start="5:11" pos:end="5:43">(<expr pos:start="5:12" pos:end="5:42"><name pos:start="5:12" pos:end="5:27">replay_data_kind</name> <operator pos:start="5:29" pos:end="5:30">==</operator> <name pos:start="5:32" pos:end="5:42">EVENT_ASYNC</name></expr>)</condition> <block pos:start="5:45" pos:end="29:5">{<block_content pos:start="7:9" pos:end="27:29">

        <decl_stmt pos:start="7:9" pos:end="7:53"><decl pos:start="7:9" pos:end="7:52"><type pos:start="7:9" pos:end="7:15"><name pos:start="7:9" pos:end="7:13">Event</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:20">event</name> <init pos:start="7:22" pos:end="7:52">= <expr pos:start="7:24" pos:end="7:52"><call pos:start="7:24" pos:end="7:52"><name pos:start="7:24" pos:end="7:40">replay_read_event</name><argument_list pos:start="7:41" pos:end="7:52">(<argument pos:start="7:42" pos:end="7:51"><expr pos:start="7:42" pos:end="7:51"><name pos:start="7:42" pos:end="7:51">checkpoint</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="9:9" pos:end="13:9"><if pos:start="9:9" pos:end="13:9">if <condition pos:start="9:12" pos:end="9:19">(<expr pos:start="9:13" pos:end="9:18"><operator pos:start="9:13" pos:end="9:13">!</operator><name pos:start="9:14" pos:end="9:18">event</name></expr>)</condition> <block pos:start="9:21" pos:end="13:9">{<block_content pos:start="11:13" pos:end="11:18">

            <break pos:start="11:13" pos:end="11:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:30"><expr pos:start="15:9" pos:end="15:29"><call pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:27">replay_mutex_unlock</name><argument_list pos:start="15:28" pos:end="15:29">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:32"><expr pos:start="17:9" pos:end="17:31"><call pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:24">replay_run_event</name><argument_list pos:start="17:25" pos:end="17:31">(<argument pos:start="17:26" pos:end="17:30"><expr pos:start="17:26" pos:end="17:30"><name pos:start="17:26" pos:end="17:30">event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:28"><expr pos:start="19:9" pos:end="19:27"><call pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:25">replay_mutex_lock</name><argument_list pos:start="19:26" pos:end="19:27">()</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:22"><expr pos:start="23:9" pos:end="23:21"><call pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:14">g_free</name><argument_list pos:start="23:15" pos:end="23:21">(<argument pos:start="23:16" pos:end="23:20"><expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:30"><expr pos:start="25:9" pos:end="25:29"><call pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:27">replay_finish_event</name><argument_list pos:start="25:28" pos:end="25:29">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:29"><expr pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:23">read_event_kind</name> <operator pos:start="27:25" pos:end="27:25">=</operator> <operator pos:start="27:27" pos:end="27:27">-</operator><literal type="number" pos:start="27:28" pos:end="27:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
