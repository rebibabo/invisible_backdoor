<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11916.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">cpu_x86_register</name><parameter_list pos:start="1:21" pos:end="1:56">(<parameter pos:start="1:22" pos:end="1:32"><decl pos:start="1:22" pos:end="1:32"><type pos:start="1:22" pos:end="1:32"><name pos:start="1:22" pos:end="1:27">X86CPU</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">cpu</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:55"><specifier pos:start="1:35" pos:end="1:39">const</specifier> <name pos:start="1:41" pos:end="1:44">char</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:55">cpu_model</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">CPUX86State</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">env</name> <init pos:start="5:22" pos:end="5:32">= <expr pos:start="5:24" pos:end="5:32"><operator pos:start="5:24" pos:end="5:24">&amp;</operator><name pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:27">cpu</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">x86_def_t</name></type> <name pos:start="7:15" pos:end="7:18">def1</name></decl>, <decl pos:start="7:21" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">def</name> <init pos:start="7:26" pos:end="7:32">= <expr pos:start="7:28" pos:end="7:32"><operator pos:start="7:28" pos:end="7:28">&amp;</operator><name pos:start="7:29" pos:end="7:32">def1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:16">error</name> <init pos:start="9:18" pos:end="9:23">= <expr pos:start="9:20" pos:end="9:23"><name pos:start="9:20" pos:end="9:23">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><call pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:10">memset</name><argument_list pos:start="13:11" pos:end="13:32">(<argument pos:start="13:12" pos:end="13:14"><expr pos:start="13:12" pos:end="13:14"><name pos:start="13:12" pos:end="13:14">def</name></expr></argument>, <argument pos:start="13:17" pos:end="13:17"><expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr></argument>, <argument pos:start="13:20" pos:end="13:31"><expr pos:start="13:20" pos:end="13:31"><sizeof pos:start="13:20" pos:end="13:31">sizeof<argument_list pos:start="13:26" pos:end="13:31">(<argument pos:start="13:27" pos:end="13:30"><expr pos:start="13:27" pos:end="13:30"><operator pos:start="13:27" pos:end="13:27">*</operator><name pos:start="13:28" pos:end="13:30">def</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if <condition pos:start="17:8" pos:end="17:49">(<expr pos:start="17:9" pos:end="17:48"><call pos:start="17:9" pos:end="17:44"><name pos:start="17:9" pos:end="17:28">cpu_x86_find_by_name</name><argument_list pos:start="17:29" pos:end="17:44">(<argument pos:start="17:30" pos:end="17:32"><expr pos:start="17:30" pos:end="17:32"><name pos:start="17:30" pos:end="17:32">def</name></expr></argument>, <argument pos:start="17:35" pos:end="17:43"><expr pos:start="17:35" pos:end="17:43"><name pos:start="17:35" pos:end="17:43">cpu_model</name></expr></argument>)</argument_list></call> <operator pos:start="17:46" pos:end="17:46">&lt;</operator> <literal type="number" pos:start="17:48" pos:end="17:48">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="37:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:11">def</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:20">vendor1</name></name></expr>)</condition> <block pos:start="21:23" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:42">

        <expr_stmt pos:start="23:9" pos:end="23:42"><expr pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:11">env</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:26">cpuid_vendor1</name></name> <operator pos:start="23:28" pos:end="23:28">=</operator> <name pos:start="23:30" pos:end="23:41"><name pos:start="23:30" pos:end="23:32">def</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:41">vendor1</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:11">env</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:26">cpuid_vendor2</name></name> <operator pos:start="25:28" pos:end="25:28">=</operator> <name pos:start="25:30" pos:end="25:41"><name pos:start="25:30" pos:end="25:32">def</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:41">vendor2</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:42"><expr pos:start="27:9" pos:end="27:41"><name pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:11">env</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:26">cpuid_vendor3</name></name> <operator pos:start="27:28" pos:end="27:28">=</operator> <name pos:start="27:30" pos:end="27:41"><name pos:start="27:30" pos:end="27:32">def</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:41">vendor3</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="37:5">else <block pos:start="29:12" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:50">

        <expr_stmt pos:start="31:9" pos:end="31:50"><expr pos:start="31:9" pos:end="31:49"><name pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:11">env</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:26">cpuid_vendor1</name></name> <operator pos:start="31:28" pos:end="31:28">=</operator> <name pos:start="31:30" pos:end="31:49">CPUID_VENDOR_INTEL_1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:50"><expr pos:start="33:9" pos:end="33:49"><name pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:11">env</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:26">cpuid_vendor2</name></name> <operator pos:start="33:28" pos:end="33:28">=</operator> <name pos:start="33:30" pos:end="33:49">CPUID_VENDOR_INTEL_2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:50"><expr pos:start="35:9" pos:end="35:49"><name pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:11">env</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:26">cpuid_vendor3</name></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <name pos:start="35:30" pos:end="35:49">CPUID_VENDOR_INTEL_3</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:54"><expr pos:start="39:5" pos:end="39:53"><name pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:7">env</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:30">cpuid_vendor_override</name></name> <operator pos:start="39:32" pos:end="39:32">=</operator> <name pos:start="39:34" pos:end="39:53"><name pos:start="39:34" pos:end="39:36">def</name><operator pos:start="39:37" pos:end="39:38">-&gt;</operator><name pos:start="39:39" pos:end="39:53">vendor_override</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:70"><expr pos:start="41:5" pos:end="41:69"><call pos:start="41:5" pos:end="41:69"><name pos:start="41:5" pos:end="41:27">object_property_set_int</name><argument_list pos:start="41:28" pos:end="41:69">(<argument pos:start="41:29" pos:end="41:39"><expr pos:start="41:29" pos:end="41:39"><call pos:start="41:29" pos:end="41:39"><name pos:start="41:29" pos:end="41:34">OBJECT</name><argument_list pos:start="41:35" pos:end="41:39">(<argument pos:start="41:36" pos:end="41:38"><expr pos:start="41:36" pos:end="41:38"><name pos:start="41:36" pos:end="41:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:42" pos:end="41:51"><expr pos:start="41:42" pos:end="41:51"><name pos:start="41:42" pos:end="41:51"><name pos:start="41:42" pos:end="41:44">def</name><operator pos:start="41:45" pos:end="41:46">-&gt;</operator><name pos:start="41:47" pos:end="41:51">level</name></name></expr></argument>, <argument pos:start="41:54" pos:end="41:60"><expr pos:start="41:54" pos:end="41:60"><literal type="string" pos:start="41:54" pos:end="41:60">"level"</literal></expr></argument>, <argument pos:start="41:63" pos:end="41:68"><expr pos:start="41:63" pos:end="41:68"><operator pos:start="41:63" pos:end="41:63">&amp;</operator><name pos:start="41:64" pos:end="41:68">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:72"><expr pos:start="43:5" pos:end="43:71"><call pos:start="43:5" pos:end="43:71"><name pos:start="43:5" pos:end="43:27">object_property_set_int</name><argument_list pos:start="43:28" pos:end="43:71">(<argument pos:start="43:29" pos:end="43:39"><expr pos:start="43:29" pos:end="43:39"><call pos:start="43:29" pos:end="43:39"><name pos:start="43:29" pos:end="43:34">OBJECT</name><argument_list pos:start="43:35" pos:end="43:39">(<argument pos:start="43:36" pos:end="43:38"><expr pos:start="43:36" pos:end="43:38"><name pos:start="43:36" pos:end="43:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:42" pos:end="43:52"><expr pos:start="43:42" pos:end="43:52"><name pos:start="43:42" pos:end="43:52"><name pos:start="43:42" pos:end="43:44">def</name><operator pos:start="43:45" pos:end="43:46">-&gt;</operator><name pos:start="43:47" pos:end="43:52">family</name></name></expr></argument>, <argument pos:start="43:55" pos:end="43:62"><expr pos:start="43:55" pos:end="43:62"><literal type="string" pos:start="43:55" pos:end="43:62">"family"</literal></expr></argument>, <argument pos:start="43:65" pos:end="43:70"><expr pos:start="43:65" pos:end="43:70"><operator pos:start="43:65" pos:end="43:65">&amp;</operator><name pos:start="43:66" pos:end="43:70">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:70"><expr pos:start="45:5" pos:end="45:69"><call pos:start="45:5" pos:end="45:69"><name pos:start="45:5" pos:end="45:27">object_property_set_int</name><argument_list pos:start="45:28" pos:end="45:69">(<argument pos:start="45:29" pos:end="45:39"><expr pos:start="45:29" pos:end="45:39"><call pos:start="45:29" pos:end="45:39"><name pos:start="45:29" pos:end="45:34">OBJECT</name><argument_list pos:start="45:35" pos:end="45:39">(<argument pos:start="45:36" pos:end="45:38"><expr pos:start="45:36" pos:end="45:38"><name pos:start="45:36" pos:end="45:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:42" pos:end="45:51"><expr pos:start="45:42" pos:end="45:51"><name pos:start="45:42" pos:end="45:51"><name pos:start="45:42" pos:end="45:44">def</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:51">model</name></name></expr></argument>, <argument pos:start="45:54" pos:end="45:60"><expr pos:start="45:54" pos:end="45:60"><literal type="string" pos:start="45:54" pos:end="45:60">"model"</literal></expr></argument>, <argument pos:start="45:63" pos:end="45:68"><expr pos:start="45:63" pos:end="45:68"><operator pos:start="45:63" pos:end="45:63">&amp;</operator><name pos:start="45:64" pos:end="45:68">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:76"><expr pos:start="47:5" pos:end="47:75"><call pos:start="47:5" pos:end="47:75"><name pos:start="47:5" pos:end="47:27">object_property_set_int</name><argument_list pos:start="47:28" pos:end="47:75">(<argument pos:start="47:29" pos:end="47:39"><expr pos:start="47:29" pos:end="47:39"><call pos:start="47:29" pos:end="47:39"><name pos:start="47:29" pos:end="47:34">OBJECT</name><argument_list pos:start="47:35" pos:end="47:39">(<argument pos:start="47:36" pos:end="47:38"><expr pos:start="47:36" pos:end="47:38"><name pos:start="47:36" pos:end="47:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:42" pos:end="47:54"><expr pos:start="47:42" pos:end="47:54"><name pos:start="47:42" pos:end="47:54"><name pos:start="47:42" pos:end="47:44">def</name><operator pos:start="47:45" pos:end="47:46">-&gt;</operator><name pos:start="47:47" pos:end="47:54">stepping</name></name></expr></argument>, <argument pos:start="47:57" pos:end="47:66"><expr pos:start="47:57" pos:end="47:66"><literal type="string" pos:start="47:57" pos:end="47:66">"stepping"</literal></expr></argument>, <argument pos:start="47:69" pos:end="47:74"><expr pos:start="47:69" pos:end="47:74"><operator pos:start="47:69" pos:end="47:69">&amp;</operator><name pos:start="47:70" pos:end="47:74">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:40"><expr pos:start="49:5" pos:end="49:39"><name pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:7">env</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:23">cpuid_features</name></name> <operator pos:start="49:25" pos:end="49:25">=</operator> <name pos:start="49:27" pos:end="49:39"><name pos:start="49:27" pos:end="49:29">def</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:39">features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:48"><expr pos:start="51:5" pos:end="51:47"><name pos:start="51:5" pos:end="51:27"><name pos:start="51:5" pos:end="51:7">env</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:27">cpuid_ext_features</name></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <name pos:start="51:31" pos:end="51:47"><name pos:start="51:31" pos:end="51:33">def</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:47">ext_features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:50"><expr pos:start="53:5" pos:end="53:49"><name pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:7">env</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:28">cpuid_ext2_features</name></name> <operator pos:start="53:30" pos:end="53:30">=</operator> <name pos:start="53:32" pos:end="53:49"><name pos:start="53:32" pos:end="53:34">def</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:49">ext2_features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:50"><expr pos:start="55:5" pos:end="55:49"><name pos:start="55:5" pos:end="55:28"><name pos:start="55:5" pos:end="55:7">env</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:28">cpuid_ext3_features</name></name> <operator pos:start="55:30" pos:end="55:30">=</operator> <name pos:start="55:32" pos:end="55:49"><name pos:start="55:32" pos:end="55:34">def</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:49">ext3_features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:72"><expr pos:start="57:5" pos:end="57:71"><call pos:start="57:5" pos:end="57:71"><name pos:start="57:5" pos:end="57:27">object_property_set_int</name><argument_list pos:start="57:28" pos:end="57:71">(<argument pos:start="57:29" pos:end="57:39"><expr pos:start="57:29" pos:end="57:39"><call pos:start="57:29" pos:end="57:39"><name pos:start="57:29" pos:end="57:34">OBJECT</name><argument_list pos:start="57:35" pos:end="57:39">(<argument pos:start="57:36" pos:end="57:38"><expr pos:start="57:36" pos:end="57:38"><name pos:start="57:36" pos:end="57:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="57:42" pos:end="57:52"><expr pos:start="57:42" pos:end="57:52"><name pos:start="57:42" pos:end="57:52"><name pos:start="57:42" pos:end="57:44">def</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:52">xlevel</name></name></expr></argument>, <argument pos:start="57:55" pos:end="57:62"><expr pos:start="57:55" pos:end="57:62"><literal type="string" pos:start="57:55" pos:end="57:62">"xlevel"</literal></expr></argument>, <argument pos:start="57:65" pos:end="57:70"><expr pos:start="57:65" pos:end="57:70"><operator pos:start="57:65" pos:end="57:65">&amp;</operator><name pos:start="57:66" pos:end="57:70">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:48"><expr pos:start="59:5" pos:end="59:47"><name pos:start="59:5" pos:end="59:27"><name pos:start="59:5" pos:end="59:7">env</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:27">cpuid_kvm_features</name></name> <operator pos:start="59:29" pos:end="59:29">=</operator> <name pos:start="59:31" pos:end="59:47"><name pos:start="59:31" pos:end="59:33">def</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:47">kvm_features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:48"><expr pos:start="61:5" pos:end="61:47"><name pos:start="61:5" pos:end="61:27"><name pos:start="61:5" pos:end="61:7">env</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:27">cpuid_svm_features</name></name> <operator pos:start="61:29" pos:end="61:29">=</operator> <name pos:start="61:31" pos:end="61:47"><name pos:start="61:31" pos:end="61:33">def</name><operator pos:start="61:34" pos:end="61:35">-&gt;</operator><name pos:start="61:36" pos:end="61:47">svm_features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:50"><expr pos:start="63:5" pos:end="63:49"><name pos:start="63:5" pos:end="63:28"><name pos:start="63:5" pos:end="63:7">env</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:28">cpuid_ext4_features</name></name> <operator pos:start="63:30" pos:end="63:30">=</operator> <name pos:start="63:32" pos:end="63:49"><name pos:start="63:32" pos:end="63:34">def</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:49">ext4_features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:53"><expr pos:start="65:5" pos:end="65:52"><name pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:7">env</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:22">cpuid_7_0_ebx</name></name> <operator pos:start="65:24" pos:end="65:24">=</operator> <name pos:start="65:26" pos:end="65:52"><name pos:start="65:26" pos:end="65:28">def</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:52">cpuid_7_0_ebx_features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:38"><expr pos:start="67:5" pos:end="67:37"><name pos:start="67:5" pos:end="67:22"><name pos:start="67:5" pos:end="67:7">env</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:22">cpuid_xlevel2</name></name> <operator pos:start="67:24" pos:end="67:24">=</operator> <name pos:start="67:26" pos:end="67:37"><name pos:start="67:26" pos:end="67:28">def</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:37">xlevel2</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="71:53"><expr pos:start="69:5" pos:end="71:52"><call pos:start="69:5" pos:end="71:52"><name pos:start="69:5" pos:end="69:27">object_property_set_int</name><argument_list pos:start="69:28" pos:end="71:52">(<argument pos:start="69:29" pos:end="69:39"><expr pos:start="69:29" pos:end="69:39"><call pos:start="69:29" pos:end="69:39"><name pos:start="69:29" pos:end="69:34">OBJECT</name><argument_list pos:start="69:35" pos:end="69:39">(<argument pos:start="69:36" pos:end="69:38"><expr pos:start="69:36" pos:end="69:38"><name pos:start="69:36" pos:end="69:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:42" pos:end="69:69"><expr pos:start="69:42" pos:end="69:69"><operator pos:start="69:42" pos:end="69:42">(</operator><name pos:start="69:43" pos:end="69:49">int64_t</name><operator pos:start="69:50" pos:end="69:50">)</operator><name pos:start="69:51" pos:end="69:62"><name pos:start="69:51" pos:end="69:53">def</name><operator pos:start="69:54" pos:end="69:55">-&gt;</operator><name pos:start="69:56" pos:end="69:62">tsc_khz</name></name> <operator pos:start="69:64" pos:end="69:64">*</operator> <literal type="number" pos:start="69:66" pos:end="69:69">1000</literal></expr></argument>,

                            <argument pos:start="71:29" pos:end="71:43"><expr pos:start="71:29" pos:end="71:43"><literal type="string" pos:start="71:29" pos:end="71:43">"tsc-frequency"</literal></expr></argument>, <argument pos:start="71:46" pos:end="71:51"><expr pos:start="71:46" pos:end="71:51"><operator pos:start="71:46" pos:end="71:46">&amp;</operator><name pos:start="71:47" pos:end="71:51">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="75:5" pos:end="79:7">/* On AMD CPUs, some CPUID[8000_0001].EDX bits must match the bits on

     * CPUID[1].EDX.

     */</comment>

    <if_stmt pos:start="81:5" pos:end="91:5"><if pos:start="81:5" pos:end="91:5">if <condition pos:start="81:8" pos:end="85:53">(<expr pos:start="81:9" pos:end="85:52"><name pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:11">env</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:26">cpuid_vendor1</name></name> <operator pos:start="81:28" pos:end="81:29">==</operator> <name pos:start="81:31" pos:end="81:48">CPUID_VENDOR_AMD_1</name> <operator pos:start="81:50" pos:end="81:51">&amp;&amp;</operator>

            <name pos:start="83:13" pos:end="83:30"><name pos:start="83:13" pos:end="83:15">env</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:30">cpuid_vendor2</name></name> <operator pos:start="83:32" pos:end="83:33">==</operator> <name pos:start="83:35" pos:end="83:52">CPUID_VENDOR_AMD_2</name> <operator pos:start="83:54" pos:end="83:55">&amp;&amp;</operator>

            <name pos:start="85:13" pos:end="85:30"><name pos:start="85:13" pos:end="85:15">env</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:30">cpuid_vendor3</name></name> <operator pos:start="85:32" pos:end="85:33">==</operator> <name pos:start="85:35" pos:end="85:52">CPUID_VENDOR_AMD_3</name></expr>)</condition> <block pos:start="85:55" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:77">

        <expr_stmt pos:start="87:9" pos:end="87:60"><expr pos:start="87:9" pos:end="87:59"><name pos:start="87:9" pos:end="87:32"><name pos:start="87:9" pos:end="87:11">env</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:32">cpuid_ext2_features</name></name> <operator pos:start="87:34" pos:end="87:35">&amp;=</operator> <operator pos:start="87:37" pos:end="87:37">~</operator><name pos:start="87:38" pos:end="87:59">CPUID_EXT2_AMD_ALIASES</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:77"><expr pos:start="89:9" pos:end="89:76"><name pos:start="89:9" pos:end="89:32"><name pos:start="89:9" pos:end="89:11">env</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:32">cpuid_ext2_features</name></name> <operator pos:start="89:34" pos:end="89:35">|=</operator> <operator pos:start="89:37" pos:end="89:37">(</operator><name pos:start="89:38" pos:end="89:50"><name pos:start="89:38" pos:end="89:40">def</name><operator pos:start="89:41" pos:end="89:42">-&gt;</operator><name pos:start="89:43" pos:end="89:50">features</name></name> <operator pos:start="89:52" pos:end="89:52">&amp;</operator> <name pos:start="89:54" pos:end="89:75">CPUID_EXT2_AMD_ALIASES</name><operator pos:start="89:76" pos:end="89:76">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="95:5" pos:end="115:5"><if pos:start="95:5" pos:end="115:5">if <condition pos:start="95:8" pos:end="95:23">(<expr pos:start="95:9" pos:end="95:22"><operator pos:start="95:9" pos:end="95:9">!</operator><call pos:start="95:10" pos:end="95:22"><name pos:start="95:10" pos:end="95:20">kvm_enabled</name><argument_list pos:start="95:21" pos:end="95:22">()</argument_list></call></expr>)</condition> <block pos:start="95:25" pos:end="115:5">{<block_content pos:start="97:9" pos:end="113:52">

        <expr_stmt pos:start="97:9" pos:end="97:44"><expr pos:start="97:9" pos:end="97:43"><name pos:start="97:9" pos:end="97:27"><name pos:start="97:9" pos:end="97:11">env</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:27">cpuid_features</name></name> <operator pos:start="97:29" pos:end="97:30">&amp;=</operator> <name pos:start="97:32" pos:end="97:43">TCG_FEATURES</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:52"><expr pos:start="99:9" pos:end="99:51"><name pos:start="99:9" pos:end="99:31"><name pos:start="99:9" pos:end="99:11">env</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:31">cpuid_ext_features</name></name> <operator pos:start="99:33" pos:end="99:34">&amp;=</operator> <name pos:start="99:36" pos:end="99:51">TCG_EXT_FEATURES</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="109:14"><expr pos:start="101:9" pos:end="109:13"><name pos:start="101:9" pos:end="101:32"><name pos:start="101:9" pos:end="101:11">env</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:32">cpuid_ext2_features</name></name> <operator pos:start="101:34" pos:end="101:35">&amp;=</operator> <operator pos:start="101:37" pos:end="101:37">(</operator><name pos:start="101:38" pos:end="104:0">TCG_EXT2_FEATURES</name>

<cpp:ifdef pos:start="103:1" pos:end="103:20">#<cpp:directive pos:start="103:2" pos:end="103:6">ifdef</cpp:directive> <name pos:start="103:8" pos:end="103:20">TARGET_X86_64</name></cpp:ifdef>

            <operator pos:start="105:13" pos:end="105:13">|</operator> <name pos:start="105:15" pos:end="105:32">CPUID_EXT2_SYSCALL</name> <operator pos:start="105:34" pos:end="105:34">|</operator> <name pos:start="105:36" pos:end="108:0">CPUID_EXT2_LM</name>

<cpp:endif pos:start="107:1" pos:end="107:6">#<cpp:directive pos:start="107:2" pos:end="107:6">endif</cpp:directive></cpp:endif>

            <operator pos:start="109:13" pos:end="109:13">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:54"><expr pos:start="111:9" pos:end="111:53"><name pos:start="111:9" pos:end="111:32"><name pos:start="111:9" pos:end="111:11">env</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:32">cpuid_ext3_features</name></name> <operator pos:start="111:34" pos:end="111:35">&amp;=</operator> <name pos:start="111:37" pos:end="111:53">TCG_EXT3_FEATURES</name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:52"><expr pos:start="113:9" pos:end="113:51"><name pos:start="113:9" pos:end="113:31"><name pos:start="113:9" pos:end="113:11">env</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:31">cpuid_svm_features</name></name> <operator pos:start="113:33" pos:end="113:34">&amp;=</operator> <name pos:start="113:36" pos:end="113:51">TCG_SVM_FEATURES</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:76"><expr pos:start="117:5" pos:end="117:75"><call pos:start="117:5" pos:end="117:75"><name pos:start="117:5" pos:end="117:27">object_property_set_str</name><argument_list pos:start="117:28" pos:end="117:75">(<argument pos:start="117:29" pos:end="117:39"><expr pos:start="117:29" pos:end="117:39"><call pos:start="117:29" pos:end="117:39"><name pos:start="117:29" pos:end="117:34">OBJECT</name><argument_list pos:start="117:35" pos:end="117:39">(<argument pos:start="117:36" pos:end="117:38"><expr pos:start="117:36" pos:end="117:38"><name pos:start="117:36" pos:end="117:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="117:42" pos:end="117:54"><expr pos:start="117:42" pos:end="117:54"><name pos:start="117:42" pos:end="117:54"><name pos:start="117:42" pos:end="117:44">def</name><operator pos:start="117:45" pos:end="117:46">-&gt;</operator><name pos:start="117:47" pos:end="117:54">model_id</name></name></expr></argument>, <argument pos:start="117:57" pos:end="117:66"><expr pos:start="117:57" pos:end="117:66"><literal type="string" pos:start="117:57" pos:end="117:66">"model-id"</literal></expr></argument>, <argument pos:start="117:69" pos:end="117:74"><expr pos:start="117:69" pos:end="117:74"><operator pos:start="117:69" pos:end="117:69">&amp;</operator><name pos:start="117:70" pos:end="117:74">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="125:5"><if pos:start="119:5" pos:end="125:5">if <condition pos:start="119:8" pos:end="119:29">(<expr pos:start="119:9" pos:end="119:28"><call pos:start="119:9" pos:end="119:28"><name pos:start="119:9" pos:end="119:20">error_is_set</name><argument_list pos:start="119:21" pos:end="119:28">(<argument pos:start="119:22" pos:end="119:27"><expr pos:start="119:22" pos:end="119:27"><operator pos:start="119:22" pos:end="119:22">&amp;</operator><name pos:start="119:23" pos:end="119:27">error</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:31" pos:end="125:5">{<block_content pos:start="121:9" pos:end="123:18">

        <expr_stmt pos:start="121:9" pos:end="121:26"><expr pos:start="121:9" pos:end="121:25"><call pos:start="121:9" pos:end="121:25"><name pos:start="121:9" pos:end="121:18">error_free</name><argument_list pos:start="121:19" pos:end="121:25">(<argument pos:start="121:20" pos:end="121:24"><expr pos:start="121:20" pos:end="121:24"><name pos:start="121:20" pos:end="121:24">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="123:9" pos:end="123:18">return <expr pos:start="123:16" pos:end="123:17"><operator pos:start="123:16" pos:end="123:16">-</operator><literal type="number" pos:start="123:17" pos:end="123:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="127:5" pos:end="127:13">return <expr pos:start="127:12" pos:end="127:12"><literal type="number" pos:start="127:12" pos:end="127:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
