<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25371.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">read_packet</name><parameter_list pos:start="1:23" pos:end="1:59">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name><modifier pos:start="1:39" pos:end="1:39">*</modifier></type> <name pos:start="1:41" pos:end="1:43">ctx</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:53">AVPacket</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:17">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">al_data</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:15">ad</name> <init pos:start="5:17" pos:end="5:32">= <expr pos:start="5:19" pos:end="5:32"><name pos:start="5:19" pos:end="5:32"><name pos:start="5:19" pos:end="5:21">ctx</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">error</name><init pos:start="7:14" pos:end="7:15">=<expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:25">error_msg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">ALCint</name></type> <name pos:start="11:12" pos:end="11:21">nb_samples</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:41">/* Get number of samples available */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:92"><expr pos:start="17:5" pos:end="17:91"><call pos:start="17:5" pos:end="17:91"><name pos:start="17:5" pos:end="17:18">alcGetIntegerv</name><argument_list pos:start="17:19" pos:end="17:91">(<argument pos:start="17:20" pos:end="17:29"><expr pos:start="17:20" pos:end="17:29"><name pos:start="17:20" pos:end="17:29"><name pos:start="17:20" pos:end="17:21">ad</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:29">device</name></name></expr></argument>, <argument pos:start="17:32" pos:end="17:50"><expr pos:start="17:32" pos:end="17:50"><name pos:start="17:32" pos:end="17:50">ALC_CAPTURE_SAMPLES</name></expr></argument>, <argument pos:start="17:53" pos:end="17:77"><expr pos:start="17:53" pos:end="17:77"><operator pos:start="17:53" pos:end="17:53">(</operator><name pos:start="17:54" pos:end="17:61">ALCsizei</name><operator pos:start="17:62" pos:end="17:62">)</operator> <sizeof pos:start="17:64" pos:end="17:77">sizeof<argument_list pos:start="17:70" pos:end="17:77">(<argument pos:start="17:71" pos:end="17:76"><expr pos:start="17:71" pos:end="17:76"><name pos:start="17:71" pos:end="17:76">ALCint</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:80" pos:end="17:90"><expr pos:start="17:80" pos:end="17:90"><operator pos:start="17:80" pos:end="17:80">&amp;</operator><name pos:start="17:81" pos:end="17:90">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="19:64"><if pos:start="19:5" pos:end="19:64">if <condition pos:start="19:8" pos:end="19:53">(<expr pos:start="19:9" pos:end="19:52"><name pos:start="19:9" pos:end="19:13">error</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:52"><name pos:start="19:17" pos:end="19:28">al_get_error</name><argument_list pos:start="19:29" pos:end="19:52">(<argument pos:start="19:30" pos:end="19:39"><expr pos:start="19:30" pos:end="19:39"><name pos:start="19:30" pos:end="19:39"><name pos:start="19:30" pos:end="19:31">ad</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:39">device</name></name></expr></argument>, <argument pos:start="19:42" pos:end="19:51"><expr pos:start="19:42" pos:end="19:51"><operator pos:start="19:42" pos:end="19:42">&amp;</operator><name pos:start="19:43" pos:end="19:51">error_msg</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:55" pos:end="19:64"><block_content pos:start="19:55" pos:end="19:64"> <goto pos:start="19:55" pos:end="19:64">goto <name pos:start="19:60" pos:end="19:63">fail</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:45">/* Create a packet of appropriate size */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:51"><expr pos:start="25:5" pos:end="25:50"><call pos:start="25:5" pos:end="25:50"><name pos:start="25:5" pos:end="25:17">av_new_packet</name><argument_list pos:start="25:18" pos:end="25:50">(<argument pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:21">pkt</name></expr></argument>, <argument pos:start="25:24" pos:end="25:49"><expr pos:start="25:24" pos:end="25:49"><name pos:start="25:24" pos:end="25:33">nb_samples</name><operator pos:start="25:34" pos:end="25:34">*</operator><name pos:start="25:35" pos:end="25:49"><name pos:start="25:35" pos:end="25:36">ad</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:49">sample_step</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:7">pkt</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:12">pts</name></name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:27"><name pos:start="27:16" pos:end="27:25">av_gettime</name><argument_list pos:start="27:26" pos:end="27:27">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:52">/* Fill the packet with the available samples */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:57"><expr pos:start="33:5" pos:end="33:56"><call pos:start="33:5" pos:end="33:56"><name pos:start="33:5" pos:end="33:21">alcCaptureSamples</name><argument_list pos:start="33:22" pos:end="33:56">(<argument pos:start="33:23" pos:end="33:32"><expr pos:start="33:23" pos:end="33:32"><name pos:start="33:23" pos:end="33:32"><name pos:start="33:23" pos:end="33:24">ad</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:32">device</name></name></expr></argument>, <argument pos:start="33:35" pos:end="33:43"><expr pos:start="33:35" pos:end="33:43"><name pos:start="33:35" pos:end="33:43"><name pos:start="33:35" pos:end="33:37">pkt</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:43">data</name></name></expr></argument>, <argument pos:start="33:46" pos:end="33:55"><expr pos:start="33:46" pos:end="33:55"><name pos:start="33:46" pos:end="33:55">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="35:64"><if pos:start="35:5" pos:end="35:64">if <condition pos:start="35:8" pos:end="35:53">(<expr pos:start="35:9" pos:end="35:52"><name pos:start="35:9" pos:end="35:13">error</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:52"><name pos:start="35:17" pos:end="35:28">al_get_error</name><argument_list pos:start="35:29" pos:end="35:52">(<argument pos:start="35:30" pos:end="35:39"><expr pos:start="35:30" pos:end="35:39"><name pos:start="35:30" pos:end="35:39"><name pos:start="35:30" pos:end="35:31">ad</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:39">device</name></name></expr></argument>, <argument pos:start="35:42" pos:end="35:51"><expr pos:start="35:42" pos:end="35:51"><operator pos:start="35:42" pos:end="35:42">&amp;</operator><name pos:start="35:43" pos:end="35:51">error_msg</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:55" pos:end="35:64"><block_content pos:start="35:55" pos:end="35:64"> <goto pos:start="35:55" pos:end="35:64">goto <name pos:start="35:60" pos:end="35:63">fail</name>;</goto></block_content></block></if></if_stmt>



    <return pos:start="39:5" pos:end="39:21">return <expr pos:start="39:12" pos:end="39:20"><name pos:start="39:12" pos:end="39:20"><name pos:start="39:12" pos:end="39:14">pkt</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:20">size</name></name></expr>;</return>

<label pos:start="41:1" pos:end="41:5"><name pos:start="41:1" pos:end="41:4">fail</name>:</label>

    <comment type="block" pos:start="43:5" pos:end="43:24">/* Handle failure */</comment>

    <if_stmt pos:start="45:5" pos:end="47:32"><if pos:start="45:5" pos:end="47:32">if <condition pos:start="45:8" pos:end="45:18">(<expr pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:11">pkt</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:17">data</name></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:32"><block_content pos:start="47:9" pos:end="47:32">

        <expr_stmt pos:start="47:9" pos:end="47:32"><expr pos:start="47:9" pos:end="47:31"><call pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:26">av_destruct_packet</name><argument_list pos:start="47:27" pos:end="47:31">(<argument pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="51:60"><if pos:start="49:5" pos:end="51:60">if <condition pos:start="49:8" pos:end="49:18">(<expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:17">error_msg</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:60"><block_content pos:start="51:9" pos:end="51:60">

        <expr_stmt pos:start="51:9" pos:end="51:60"><expr pos:start="51:9" pos:end="51:59"><call pos:start="51:9" pos:end="51:59"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:59">(<argument pos:start="51:16" pos:end="51:18"><expr pos:start="51:16" pos:end="51:18"><name pos:start="51:16" pos:end="51:18">ctx</name></expr></argument>, <argument pos:start="51:21" pos:end="51:32"><expr pos:start="51:21" pos:end="51:32"><name pos:start="51:21" pos:end="51:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:35" pos:end="51:47"><expr pos:start="51:35" pos:end="51:47"><literal type="string" pos:start="51:35" pos:end="51:47">"Error: %s\n"</literal></expr></argument>, <argument pos:start="51:50" pos:end="51:58"><expr pos:start="51:50" pos:end="51:58"><name pos:start="51:50" pos:end="51:58">error_msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="53:5" pos:end="53:17">return <expr pos:start="53:12" pos:end="53:16"><name pos:start="53:12" pos:end="53:16">error</name></expr>;</return>

</block_content>}</block></function>
</unit>
