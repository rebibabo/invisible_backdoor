<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7829.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">pci_device_load</name><parameter_list pos:start="1:20" pos:end="1:46">(<parameter pos:start="1:21" pos:end="1:32"><decl pos:start="1:21" pos:end="1:32"><type pos:start="1:21" pos:end="1:32"><name pos:start="1:21" pos:end="1:29">PCIDevice</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:32">s</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:45"><decl pos:start="1:35" pos:end="1:45"><type pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:42">QEMUFile</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:13">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:41"><name pos:start="5:13" pos:end="5:18">config</name><index pos:start="5:19" pos:end="5:41">[<expr pos:start="5:20" pos:end="5:40"><name pos:start="5:20" pos:end="5:40">PCI_CONFIG_SPACE_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:23">version_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:14">version_id</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <call pos:start="13:18" pos:end="13:33"><name pos:start="13:18" pos:end="13:30">qemu_get_be32</name><argument_list pos:start="13:31" pos:end="13:33">(<argument pos:start="13:32" pos:end="13:32"><expr pos:start="13:32" pos:end="13:32"><name pos:start="13:32" pos:end="13:32">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:23"><if pos:start="15:5" pos:end="17:23">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:18">version_id</name> <operator pos:start="15:20" pos:end="15:20">&gt;</operator> <literal type="number" pos:start="15:22" pos:end="15:22">2</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:23"><block_content pos:start="17:9" pos:end="17:23">

        <return pos:start="17:9" pos:end="17:23">return <expr pos:start="17:16" pos:end="17:22"><operator pos:start="17:16" pos:end="17:16">-</operator><name pos:start="17:17" pos:end="17:22">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><call pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:19">qemu_get_buffer</name><argument_list pos:start="19:20" pos:end="19:45">(<argument pos:start="19:21" pos:end="19:21"><expr pos:start="19:21" pos:end="19:21"><name pos:start="19:21" pos:end="19:21">f</name></expr></argument>, <argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">config</name></expr></argument>, <argument pos:start="19:32" pos:end="19:44"><expr pos:start="19:32" pos:end="19:44"><sizeof pos:start="19:32" pos:end="19:44">sizeof <name pos:start="19:39" pos:end="19:44">config</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="25:27">for <control pos:start="21:9" pos:end="21:39">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:34"><expr pos:start="21:17" pos:end="21:33"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <sizeof pos:start="21:21" pos:end="21:33">sizeof <name pos:start="21:28" pos:end="21:33">config</name></sizeof></expr>;</condition> <incr pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><operator pos:start="21:36" pos:end="21:37">++</operator><name pos:start="21:38" pos:end="21:38">i</name></expr></incr>)</control><block type="pseudo" pos:start="23:9" pos:end="25:27"><block_content pos:start="23:9" pos:end="25:27">

        <if_stmt pos:start="23:9" pos:end="25:27"><if pos:start="23:9" pos:end="25:27">if <condition pos:start="23:12" pos:end="23:68">(<expr pos:start="23:13" pos:end="23:67"><operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:22"><name pos:start="23:14" pos:end="23:19">config</name><index pos:start="23:20" pos:end="23:22">[<expr pos:start="23:21" pos:end="23:21"><name pos:start="23:21" pos:end="23:21">i</name></expr>]</index></name> <operator pos:start="23:24" pos:end="23:24">^</operator> <name pos:start="23:26" pos:end="23:37"><name pos:start="23:26" pos:end="23:26">s</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:34">config</name><index pos:start="23:35" pos:end="23:37">[<expr pos:start="23:36" pos:end="23:36"><name pos:start="23:36" pos:end="23:36">i</name></expr>]</index></name><operator pos:start="23:38" pos:end="23:38">)</operator> <operator pos:start="23:40" pos:end="23:40">&amp;</operator> <name pos:start="23:42" pos:end="23:52"><name pos:start="23:42" pos:end="23:42">s</name><operator pos:start="23:43" pos:end="23:44">-&gt;</operator><name pos:start="23:45" pos:end="23:49">cmask</name><index pos:start="23:50" pos:end="23:52">[<expr pos:start="23:51" pos:end="23:51"><name pos:start="23:51" pos:end="23:51">i</name></expr>]</index></name> <operator pos:start="23:54" pos:end="23:54">&amp;</operator> <operator pos:start="23:56" pos:end="23:56">~</operator><name pos:start="23:57" pos:end="23:67"><name pos:start="23:57" pos:end="23:57">s</name><operator pos:start="23:58" pos:end="23:59">-&gt;</operator><name pos:start="23:60" pos:end="23:64">wmask</name><index pos:start="23:65" pos:end="23:67">[<expr pos:start="23:66" pos:end="23:66"><name pos:start="23:66" pos:end="23:66">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:27"><block_content pos:start="25:13" pos:end="25:27">

            <return pos:start="25:13" pos:end="25:27">return <expr pos:start="25:20" pos:end="25:26"><operator pos:start="25:20" pos:end="25:20">-</operator><name pos:start="25:21" pos:end="25:26">EINVAL</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><call pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:10">memcpy</name><argument_list pos:start="27:11" pos:end="27:44">(<argument pos:start="27:12" pos:end="27:20"><expr pos:start="27:12" pos:end="27:20"><name pos:start="27:12" pos:end="27:20"><name pos:start="27:12" pos:end="27:12">s</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:20">config</name></name></expr></argument>, <argument pos:start="27:23" pos:end="27:28"><expr pos:start="27:23" pos:end="27:28"><name pos:start="27:23" pos:end="27:28">config</name></expr></argument>, <argument pos:start="27:31" pos:end="27:43"><expr pos:start="27:31" pos:end="27:43"><sizeof pos:start="27:31" pos:end="27:43">sizeof <name pos:start="27:38" pos:end="27:43">config</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><call pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:23">pci_update_mappings</name><argument_list pos:start="31:24" pos:end="31:26">(<argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><name pos:start="31:25" pos:end="31:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="39:47"><if pos:start="35:5" pos:end="39:47">if <condition pos:start="35:8" pos:end="35:24">(<expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:18">version_id</name> <operator pos:start="35:20" pos:end="35:21">&gt;=</operator> <literal type="number" pos:start="35:23" pos:end="35:23">2</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="39:47"><block_content pos:start="37:9" pos:end="39:47">

        <for pos:start="37:9" pos:end="39:47">for <control pos:start="37:13" pos:end="37:32">(<init pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:18"><name pos:start="37:14" pos:end="37:14">i</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>;</init> <condition pos:start="37:21" pos:end="37:26"><expr pos:start="37:21" pos:end="37:25"><name pos:start="37:21" pos:end="37:21">i</name> <operator pos:start="37:23" pos:end="37:23">&lt;</operator> <literal type="number" pos:start="37:25" pos:end="37:25">4</literal></expr>;</condition> <incr pos:start="37:28" pos:end="37:31"><expr pos:start="37:28" pos:end="37:31"><name pos:start="37:28" pos:end="37:28">i</name> <operator pos:start="37:30" pos:end="37:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:13" pos:end="39:47"><block_content pos:start="39:13" pos:end="39:47">

            <expr_stmt pos:start="39:13" pos:end="39:47"><expr pos:start="39:13" pos:end="39:46"><name pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:24">irq_state</name><index pos:start="39:25" pos:end="39:27">[<expr pos:start="39:26" pos:end="39:26"><name pos:start="39:26" pos:end="39:26">i</name></expr>]</index></name> <operator pos:start="39:29" pos:end="39:29">=</operator> <call pos:start="39:31" pos:end="39:46"><name pos:start="39:31" pos:end="39:43">qemu_get_be32</name><argument_list pos:start="39:44" pos:end="39:46">(<argument pos:start="39:45" pos:end="39:45"><expr pos:start="39:45" pos:end="39:45"><name pos:start="39:45" pos:end="39:45">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
