<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19258.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">gxf_packet</name><parameter_list pos:start="1:22" pos:end="1:56">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:37">AVFormatContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:55"><decl pos:start="1:43" pos:end="1:55"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:50">AVPacket</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">pkt</name></decl></parameter>)</parameter_list> <block pos:start="1:58" pos:end="91:1">{<block_content pos:start="3:5" pos:end="89:24">

    <decl_stmt pos:start="3:5" pos:end="3:30"><decl pos:start="3:5" pos:end="3:29"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:17">ByteIOContext</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:21">pb</name> <init pos:start="3:23" pos:end="3:29">= <expr pos:start="3:25" pos:end="3:29"><name pos:start="3:25" pos:end="3:29"><name pos:start="3:25" pos:end="3:25">s</name><operator pos:start="3:26" pos:end="3:27">-&gt;</operator><name pos:start="3:28" pos:end="3:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:14">pkt_type_t</name></type> <name pos:start="5:16" pos:end="5:23">pkt_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">pkt_len</name></decl>;</decl_stmt>

    <while pos:start="9:5" pos:end="87:5">while <condition pos:start="9:11" pos:end="9:25">(<expr pos:start="9:12" pos:end="9:24"><operator pos:start="9:12" pos:end="9:12">!</operator><call pos:start="9:13" pos:end="9:24"><name pos:start="9:13" pos:end="9:20">url_feof</name><argument_list pos:start="9:21" pos:end="9:24">(<argument pos:start="9:22" pos:end="9:23"><expr pos:start="9:22" pos:end="9:23"><name pos:start="9:22" pos:end="9:23">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:27" pos:end="87:5">{<block_content pos:start="11:9" pos:end="85:19">

        <decl_stmt pos:start="11:9" pos:end="11:38"><decl pos:start="11:9" pos:end="11:22"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:22">track_type</name></decl>, <decl pos:start="11:25" pos:end="11:32"><type ref="prev" pos:start="11:9" pos:end="11:11"/><name pos:start="11:25" pos:end="11:32">track_id</name></decl>, <decl pos:start="11:35" pos:end="11:37"><type ref="prev" pos:start="11:9" pos:end="11:11"/><name pos:start="11:35" pos:end="11:37">ret</name></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:21"><decl pos:start="13:9" pos:end="13:20"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:20">field_nr</name></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:25"><decl pos:start="15:9" pos:end="15:24"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:24">stream_index</name></decl>;</decl_stmt>

        <if_stmt pos:start="17:9" pos:end="25:9"><if pos:start="17:9" pos:end="25:9">if <condition pos:start="17:12" pos:end="17:58">(<expr pos:start="17:13" pos:end="17:57"><operator pos:start="17:13" pos:end="17:13">!</operator><call pos:start="17:14" pos:end="17:57"><name pos:start="17:14" pos:end="17:32">parse_packet_header</name><argument_list pos:start="17:33" pos:end="17:57">(<argument pos:start="17:34" pos:end="17:35"><expr pos:start="17:34" pos:end="17:35"><name pos:start="17:34" pos:end="17:35">pb</name></expr></argument>, <argument pos:start="17:38" pos:end="17:46"><expr pos:start="17:38" pos:end="17:46"><operator pos:start="17:38" pos:end="17:38">&amp;</operator><name pos:start="17:39" pos:end="17:46">pkt_type</name></expr></argument>, <argument pos:start="17:49" pos:end="17:56"><expr pos:start="17:49" pos:end="17:56"><operator pos:start="17:49" pos:end="17:49">&amp;</operator><name pos:start="17:50" pos:end="17:56">pkt_len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:60" pos:end="25:9">{<block_content pos:start="19:13" pos:end="23:22">

            <if_stmt pos:start="19:13" pos:end="21:60"><if pos:start="19:13" pos:end="21:60">if <condition pos:start="19:16" pos:end="19:30">(<expr pos:start="19:17" pos:end="19:29"><operator pos:start="19:17" pos:end="19:17">!</operator><call pos:start="19:18" pos:end="19:29"><name pos:start="19:18" pos:end="19:25">url_feof</name><argument_list pos:start="19:26" pos:end="19:29">(<argument pos:start="19:27" pos:end="19:28"><expr pos:start="19:27" pos:end="19:28"><name pos:start="19:27" pos:end="19:28">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:17" pos:end="21:60"><block_content pos:start="21:17" pos:end="21:60">

                <expr_stmt pos:start="21:17" pos:end="21:60"><expr pos:start="21:17" pos:end="21:59"><call pos:start="21:17" pos:end="21:59"><name pos:start="21:17" pos:end="21:22">av_log</name><argument_list pos:start="21:23" pos:end="21:59">(<argument pos:start="21:24" pos:end="21:24"><expr pos:start="21:24" pos:end="21:24"><name pos:start="21:24" pos:end="21:24">s</name></expr></argument>, <argument pos:start="21:27" pos:end="21:38"><expr pos:start="21:27" pos:end="21:38"><name pos:start="21:27" pos:end="21:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:41" pos:end="21:58"><expr pos:start="21:41" pos:end="21:58"><literal type="string" pos:start="21:41" pos:end="21:58">"GXF: sync lost\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="23:13" pos:end="23:22">return <expr pos:start="23:20" pos:end="23:21"><operator pos:start="23:20" pos:end="23:20">-</operator><literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:32">(<expr pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:20">pkt_type</name> <operator pos:start="27:22" pos:end="27:23">==</operator> <name pos:start="27:25" pos:end="27:31">PKT_FLT</name></expr>)</condition> <block pos:start="27:34" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:21">

            <expr_stmt pos:start="29:13" pos:end="29:39"><expr pos:start="29:13" pos:end="29:38"><call pos:start="29:13" pos:end="29:38"><name pos:start="29:13" pos:end="29:26">gxf_read_index</name><argument_list pos:start="29:27" pos:end="29:38">(<argument pos:start="29:28" pos:end="29:28"><expr pos:start="29:28" pos:end="29:28"><name pos:start="29:28" pos:end="29:28">s</name></expr></argument>, <argument pos:start="29:31" pos:end="29:37"><expr pos:start="29:31" pos:end="29:37"><name pos:start="29:31" pos:end="29:37">pkt_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="31:13" pos:end="31:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:34">(<expr pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:20">pkt_type</name> <operator pos:start="35:22" pos:end="35:23">!=</operator> <name pos:start="35:25" pos:end="35:33">PKT_MEDIA</name></expr>)</condition> <block pos:start="35:36" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:21">

            <expr_stmt pos:start="37:13" pos:end="37:35"><expr pos:start="37:13" pos:end="37:34"><call pos:start="37:13" pos:end="37:34"><name pos:start="37:13" pos:end="37:21">url_fskip</name><argument_list pos:start="37:22" pos:end="37:34">(<argument pos:start="37:23" pos:end="37:24"><expr pos:start="37:23" pos:end="37:24"><name pos:start="37:23" pos:end="37:24">pb</name></expr></argument>, <argument pos:start="37:27" pos:end="37:33"><expr pos:start="37:27" pos:end="37:33"><name pos:start="37:27" pos:end="37:33">pkt_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="39:13" pos:end="39:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:25">(<expr pos:start="43:13" pos:end="43:24"><name pos:start="43:13" pos:end="43:19">pkt_len</name> <operator pos:start="43:21" pos:end="43:21">&lt;</operator> <literal type="number" pos:start="43:23" pos:end="43:24">16</literal></expr>)</condition> <block pos:start="43:27" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:21">

            <expr_stmt pos:start="45:13" pos:end="45:74"><expr pos:start="45:13" pos:end="45:73"><call pos:start="45:13" pos:end="45:73"><name pos:start="45:13" pos:end="45:18">av_log</name><argument_list pos:start="45:19" pos:end="45:73">(<argument pos:start="45:20" pos:end="45:20"><expr pos:start="45:20" pos:end="45:20"><name pos:start="45:20" pos:end="45:20">s</name></expr></argument>, <argument pos:start="45:23" pos:end="45:34"><expr pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:37" pos:end="45:72"><expr pos:start="45:37" pos:end="45:72"><literal type="string" pos:start="45:37" pos:end="45:72">"GXF: invalid media packet length\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="47:13" pos:end="47:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:22"><expr pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:15">pkt_len</name> <operator pos:start="51:17" pos:end="51:18">-=</operator> <literal type="number" pos:start="51:20" pos:end="51:21">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:34"><expr pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:18">track_type</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <call pos:start="53:22" pos:end="53:33"><name pos:start="53:22" pos:end="53:29">get_byte</name><argument_list pos:start="53:30" pos:end="53:33">(<argument pos:start="53:31" pos:end="53:32"><expr pos:start="53:31" pos:end="53:32"><name pos:start="53:31" pos:end="53:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:32"><expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:16">track_id</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <call pos:start="55:20" pos:end="55:31"><name pos:start="55:20" pos:end="55:27">get_byte</name><argument_list pos:start="55:28" pos:end="55:31">(<argument pos:start="55:29" pos:end="55:30"><expr pos:start="55:29" pos:end="55:30"><name pos:start="55:29" pos:end="55:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:59"><expr pos:start="57:9" pos:end="57:58"><name pos:start="57:9" pos:end="57:20">stream_index</name> <operator pos:start="57:22" pos:end="57:22">=</operator> <call pos:start="57:24" pos:end="57:58"><name pos:start="57:24" pos:end="57:33">get_sindex</name><argument_list pos:start="57:34" pos:end="57:58">(<argument pos:start="57:35" pos:end="57:35"><expr pos:start="57:35" pos:end="57:35"><name pos:start="57:35" pos:end="57:35">s</name></expr></argument>, <argument pos:start="57:38" pos:end="57:45"><expr pos:start="57:38" pos:end="57:45"><name pos:start="57:38" pos:end="57:45">track_id</name></expr></argument>, <argument pos:start="57:48" pos:end="57:57"><expr pos:start="57:48" pos:end="57:57"><name pos:start="57:48" pos:end="57:57">track_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:32"><if pos:start="59:9" pos:end="61:32">if <condition pos:start="59:12" pos:end="59:29">(<expr pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:24">stream_index</name> <operator pos:start="59:26" pos:end="59:26">&lt;</operator> <literal type="number" pos:start="59:28" pos:end="59:28">0</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:32"><block_content pos:start="61:13" pos:end="61:32">

            <return pos:start="61:13" pos:end="61:32">return <expr pos:start="61:20" pos:end="61:31"><name pos:start="61:20" pos:end="61:31">stream_index</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:32"><expr pos:start="63:9" pos:end="63:31"><name pos:start="63:9" pos:end="63:16">field_nr</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="63:31"><name pos:start="63:20" pos:end="63:27">get_be32</name><argument_list pos:start="63:28" pos:end="63:31">(<argument pos:start="63:29" pos:end="63:30"><expr pos:start="63:29" pos:end="63:30"><name pos:start="63:29" pos:end="63:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:21"><expr pos:start="65:9" pos:end="65:20"><call pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:16">get_be32</name><argument_list pos:start="65:17" pos:end="65:20">(<argument pos:start="65:18" pos:end="65:19"><expr pos:start="65:18" pos:end="65:19"><name pos:start="65:18" pos:end="65:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="65:23" pos:end="65:42">// field information</comment>

        <expr_stmt pos:start="67:9" pos:end="67:21"><expr pos:start="67:9" pos:end="67:20"><call pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:16">get_be32</name><argument_list pos:start="67:17" pos:end="67:20">(<argument pos:start="67:18" pos:end="67:19"><expr pos:start="67:18" pos:end="67:19"><name pos:start="67:18" pos:end="67:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="67:23" pos:end="67:48">// "timeline" field number</comment>

        <expr_stmt pos:start="69:9" pos:end="69:21"><expr pos:start="69:9" pos:end="69:20"><call pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:16">get_byte</name><argument_list pos:start="69:17" pos:end="69:20">(<argument pos:start="69:18" pos:end="69:19"><expr pos:start="69:18" pos:end="69:19"><name pos:start="69:18" pos:end="69:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="69:23" pos:end="69:30">// flags</comment>

        <expr_stmt pos:start="71:9" pos:end="71:21"><expr pos:start="71:9" pos:end="71:20"><call pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:16">get_byte</name><argument_list pos:start="71:17" pos:end="71:20">(<argument pos:start="71:18" pos:end="71:19"><expr pos:start="71:18" pos:end="71:19"><name pos:start="71:18" pos:end="71:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="71:23" pos:end="71:33">// reserved</comment>

        <comment type="line" pos:start="73:9" pos:end="73:61">// NOTE: there is also data length information in the</comment>

        <comment type="line" pos:start="75:9" pos:end="75:74">// field information, it might be better to take this into account</comment>

        <comment type="line" pos:start="77:9" pos:end="77:19">// as well.</comment>

        <expr_stmt pos:start="79:9" pos:end="79:46"><expr pos:start="79:9" pos:end="79:45"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:45"><name pos:start="79:15" pos:end="79:27">av_get_packet</name><argument_list pos:start="79:28" pos:end="79:45">(<argument pos:start="79:29" pos:end="79:30"><expr pos:start="79:29" pos:end="79:30"><name pos:start="79:29" pos:end="79:30">pb</name></expr></argument>, <argument pos:start="79:33" pos:end="79:35"><expr pos:start="79:33" pos:end="79:35"><name pos:start="79:33" pos:end="79:35">pkt</name></expr></argument>, <argument pos:start="79:38" pos:end="79:44"><expr pos:start="79:38" pos:end="79:44"><name pos:start="79:38" pos:end="79:44">pkt_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:41"><expr pos:start="81:9" pos:end="81:40"><name pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:11">pkt</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:25">stream_index</name></name> <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:40">stream_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:28"><expr pos:start="83:9" pos:end="83:27"><name pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:11">pkt</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:16">dts</name></name> <operator pos:start="83:18" pos:end="83:18">=</operator> <name pos:start="83:20" pos:end="83:27">field_nr</name></expr>;</expr_stmt>

        <return pos:start="85:9" pos:end="85:19">return <expr pos:start="85:16" pos:end="85:18"><name pos:start="85:16" pos:end="85:18">ret</name></expr>;</return>

    </block_content>}</block></while>

    <return pos:start="89:5" pos:end="89:24">return <expr pos:start="89:12" pos:end="89:23"><call pos:start="89:12" pos:end="89:23"><name pos:start="89:12" pos:end="89:18">AVERROR</name><argument_list pos:start="89:19" pos:end="89:23">(<argument pos:start="89:20" pos:end="89:22"><expr pos:start="89:20" pos:end="89:22"><name pos:start="89:20" pos:end="89:22">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
