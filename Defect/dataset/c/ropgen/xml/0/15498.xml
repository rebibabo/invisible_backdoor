<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15498.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:17"><name pos:start="1:1" pos:end="1:15">AVFilterFormats</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:36">ff_make_format_list</name><parameter_list pos:start="1:37" pos:end="1:53">(<parameter pos:start="1:38" pos:end="1:52"><decl pos:start="1:38" pos:end="1:52"><type pos:start="1:38" pos:end="1:48"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:46">int</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">fmts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:19">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFilterFormats</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:28">formats</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">count</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="13:9">for <control pos:start="11:9" pos:end="11:47">(<init pos:start="11:10" pos:end="11:19"><expr pos:start="11:10" pos:end="11:18"><name pos:start="11:10" pos:end="11:14">count</name> <operator pos:start="11:16" pos:end="11:16">=</operator> <literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr>;</init> <condition pos:start="11:21" pos:end="11:38"><expr pos:start="11:21" pos:end="11:37"><name pos:start="11:21" pos:end="11:31"><name pos:start="11:21" pos:end="11:24">fmts</name><index pos:start="11:25" pos:end="11:31">[<expr pos:start="11:26" pos:end="11:30"><name pos:start="11:26" pos:end="11:30">count</name></expr>]</index></name> <operator pos:start="11:33" pos:end="11:34">!=</operator> <operator pos:start="11:36" pos:end="11:36">-</operator><literal type="number" pos:start="11:37" pos:end="11:37">1</literal></expr>;</condition> <incr pos:start="11:40" pos:end="11:46"><expr pos:start="11:40" pos:end="11:46"><name pos:start="11:40" pos:end="11:44">count</name><operator pos:start="11:45" pos:end="11:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="13:9" pos:end="13:9"><block_content pos:start="13:9" pos:end="13:9">

        <empty_stmt pos:start="13:9" pos:end="13:9">;</empty_stmt></block_content></block></for>



    <expr_stmt pos:start="17:5" pos:end="17:57"><expr pos:start="17:5" pos:end="17:56"><name pos:start="17:5" pos:end="17:11">formats</name>               <operator pos:start="17:27" pos:end="17:27">=</operator> <call pos:start="17:29" pos:end="17:56"><name pos:start="17:29" pos:end="17:38">av_mallocz</name><argument_list pos:start="17:39" pos:end="17:56">(<argument pos:start="17:40" pos:end="17:55"><expr pos:start="17:40" pos:end="17:55"><sizeof pos:start="17:40" pos:end="17:55">sizeof<argument_list pos:start="17:46" pos:end="17:55">(<argument pos:start="17:47" pos:end="17:54"><expr pos:start="17:47" pos:end="17:54"><operator pos:start="17:47" pos:end="17:47">*</operator><name pos:start="17:48" pos:end="17:54">formats</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:73"><if pos:start="19:5" pos:end="21:73">if <condition pos:start="19:8" pos:end="19:14">(<expr pos:start="19:9" pos:end="19:13"><name pos:start="19:9" pos:end="19:13">count</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:73"><block_content pos:start="21:9" pos:end="21:73">

        <expr_stmt pos:start="21:9" pos:end="21:73"><expr pos:start="21:9" pos:end="21:72"><name pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:15">formats</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:24">formats</name></name>  <operator pos:start="21:27" pos:end="21:27">=</operator> <call pos:start="21:29" pos:end="21:72"><name pos:start="21:29" pos:end="21:37">av_malloc</name><argument_list pos:start="21:38" pos:end="21:72">(<argument pos:start="21:39" pos:end="21:71"><expr pos:start="21:39" pos:end="21:71"><sizeof pos:start="21:39" pos:end="21:63">sizeof<argument_list pos:start="21:45" pos:end="21:63">(<argument pos:start="21:46" pos:end="21:62"><expr pos:start="21:46" pos:end="21:62"><operator pos:start="21:46" pos:end="21:46">*</operator><name pos:start="21:47" pos:end="21:62"><name pos:start="21:47" pos:end="21:53">formats</name><operator pos:start="21:54" pos:end="21:55">-&gt;</operator><name pos:start="21:56" pos:end="21:62">formats</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="21:65" pos:end="21:65">*</operator> <name pos:start="21:67" pos:end="21:71">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:11">formats</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:23">nb_formats</name></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <name pos:start="23:27" pos:end="23:31">count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:70"><expr pos:start="25:5" pos:end="25:69"><call pos:start="25:5" pos:end="25:69"><name pos:start="25:5" pos:end="25:10">memcpy</name><argument_list pos:start="25:11" pos:end="25:69">(<argument pos:start="25:12" pos:end="25:27"><expr pos:start="25:12" pos:end="25:27"><name pos:start="25:12" pos:end="25:27"><name pos:start="25:12" pos:end="25:18">formats</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:27">formats</name></name></expr></argument>, <argument pos:start="25:30" pos:end="25:33"><expr pos:start="25:30" pos:end="25:33"><name pos:start="25:30" pos:end="25:33">fmts</name></expr></argument>, <argument pos:start="25:36" pos:end="25:68"><expr pos:start="25:36" pos:end="25:68"><sizeof pos:start="25:36" pos:end="25:60">sizeof<argument_list pos:start="25:42" pos:end="25:60">(<argument pos:start="25:43" pos:end="25:59"><expr pos:start="25:43" pos:end="25:59"><operator pos:start="25:43" pos:end="25:43">*</operator><name pos:start="25:44" pos:end="25:59"><name pos:start="25:44" pos:end="25:50">formats</name><operator pos:start="25:51" pos:end="25:52">-&gt;</operator><name pos:start="25:53" pos:end="25:59">formats</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="25:62" pos:end="25:62">*</operator> <name pos:start="25:64" pos:end="25:68">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="29:5" pos:end="29:19">return <expr pos:start="29:12" pos:end="29:18"><name pos:start="29:12" pos:end="29:18">formats</name></expr>;</return>

</block_content>}</block></function>
</unit>
