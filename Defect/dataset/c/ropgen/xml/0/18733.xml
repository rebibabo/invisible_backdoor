<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18733.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">setup_sigcontext</name><parameter_list pos:start="1:28" pos:end="5:47">(<parameter pos:start="1:29" pos:end="1:56"><decl pos:start="1:29" pos:end="1:56"><type pos:start="1:29" pos:end="1:56"><name pos:start="1:29" pos:end="1:52"><name pos:start="1:29" pos:end="1:34">struct</name> <name pos:start="1:36" pos:end="1:52">target_sigcontext</name></name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">sc</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:50"><decl pos:start="3:29" pos:end="3:50"><type pos:start="3:29" pos:end="3:50"><name pos:start="3:29" pos:end="3:44">CPUOpenRISCState</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:50">regs</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:46"><decl pos:start="5:29" pos:end="5:46"><type pos:start="5:29" pos:end="5:46"><name pos:start="5:29" pos:end="5:36">unsigned</name> <name pos:start="5:38" pos:end="5:41">long</name></type> <name pos:start="5:43" pos:end="5:46">mask</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="39:1">{<block_content pos:start="9:5" pos:end="37:42">

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">long</name></type> <name pos:start="11:19" pos:end="11:21">usp</name> <init pos:start="11:23" pos:end="11:36">= <expr pos:start="11:25" pos:end="11:36"><name pos:start="11:25" pos:end="11:36"><name pos:start="11:25" pos:end="11:28">regs</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:33">gpr</name><index pos:start="11:34" pos:end="11:36">[<expr pos:start="11:35" pos:end="11:35"><literal type="number" pos:start="11:35" pos:end="11:35">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:71">/* copy the regs. they are first in sc so we can use sc directly */</comment>



    <comment type="block" pos:start="19:5" pos:end="19:63">/*copy_to_user(&amp;sc, regs, sizeof(struct target_pt_regs));*/</comment>



    <comment type="block" pos:start="23:5" pos:end="27:38">/* Set the frametype to CRIS_FRAME_NORMAL for the execution of

       the signal handler. The frametype will be restored to its previous

       value in restore_sigcontext. */</comment>

    <comment type="block" pos:start="29:5" pos:end="29:44">/*regs-&gt;frametype = CRIS_FRAME_NORMAL;*/</comment>



    <comment type="block" pos:start="33:5" pos:end="33:31">/* then some other stuff */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:35"><expr pos:start="35:5" pos:end="35:34"><call pos:start="35:5" pos:end="35:34"><name pos:start="35:5" pos:end="35:14">__put_user</name><argument_list pos:start="35:15" pos:end="35:34">(<argument pos:start="35:16" pos:end="35:19"><expr pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:19">mask</name></expr></argument>, <argument pos:start="35:22" pos:end="35:33"><expr pos:start="35:22" pos:end="35:33"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:33"><name pos:start="35:23" pos:end="35:24">sc</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:33">oldmask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><call pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:14">__put_user</name><argument_list pos:start="37:15" pos:end="37:29">(<argument pos:start="37:16" pos:end="37:18"><expr pos:start="37:16" pos:end="37:18"><name pos:start="37:16" pos:end="37:18">usp</name></expr></argument>, <argument pos:start="37:21" pos:end="37:28"><expr pos:start="37:21" pos:end="37:28"><operator pos:start="37:21" pos:end="37:21">&amp;</operator><name pos:start="37:22" pos:end="37:28"><name pos:start="37:22" pos:end="37:23">sc</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:28">usp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <return pos:start="37:32" pos:end="37:42">return <expr pos:start="37:39" pos:end="37:41"><name pos:start="37:39" pos:end="37:41">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
