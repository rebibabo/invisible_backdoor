<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15017.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">slavio_set_irq</name><parameter_list pos:start="1:27" pos:end="1:60">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:48"><decl pos:start="1:42" pos:end="1:48"><type pos:start="1:42" pos:end="1:48"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:48">irq</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:59"><decl pos:start="1:51" pos:end="1:59"><type pos:start="1:51" pos:end="1:59"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:59">level</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:5">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">SLAVIO_INTCTLState</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:25">s</name> <init pos:start="5:27" pos:end="5:34">= <expr pos:start="5:29" pos:end="5:34"><name pos:start="5:29" pos:end="5:34">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:71"><expr pos:start="9:5" pos:end="9:70"><call pos:start="9:5" pos:end="9:70"><name pos:start="9:5" pos:end="9:11">DPRINTF</name><argument_list pos:start="9:12" pos:end="9:70">(<argument pos:start="9:13" pos:end="9:42"><expr pos:start="9:13" pos:end="9:42"><literal type="string" pos:start="9:13" pos:end="9:42">"Set cpu %d irq %d level %d\n"</literal></expr></argument>, <argument pos:start="9:45" pos:end="9:57"><expr pos:start="9:45" pos:end="9:57"><name pos:start="9:45" pos:end="9:57"><name pos:start="9:45" pos:end="9:45">s</name><operator pos:start="9:46" pos:end="9:47">-&gt;</operator><name pos:start="9:48" pos:end="9:57">target_cpu</name></name></expr></argument>, <argument pos:start="9:60" pos:end="9:62"><expr pos:start="9:60" pos:end="9:62"><name pos:start="9:60" pos:end="9:62">irq</name></expr></argument>, <argument pos:start="9:65" pos:end="9:69"><expr pos:start="9:65" pos:end="9:69"><name pos:start="9:65" pos:end="9:69">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="39:5"><if pos:start="11:5" pos:end="39:5">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:11">irq</name> <operator pos:start="11:13" pos:end="11:13">&lt;</operator> <literal type="number" pos:start="11:15" pos:end="11:16">32</literal></expr>)</condition> <block pos:start="11:19" pos:end="39:5">{<block_content pos:start="13:9" pos:end="37:9">

	<decl_stmt pos:start="13:9" pos:end="13:33"><decl pos:start="13:9" pos:end="13:32"><type pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:16">uint32_t</name></type> <name pos:start="13:18" pos:end="13:21">mask</name> <init pos:start="13:23" pos:end="13:32">= <expr pos:start="13:25" pos:end="13:32"><literal type="number" pos:start="13:25" pos:end="13:25">1</literal> <operator pos:start="13:27" pos:end="13:28">&lt;&lt;</operator> <name pos:start="13:30" pos:end="13:32">irq</name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="15:9" pos:end="15:47"><decl pos:start="15:9" pos:end="15:46"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">uint32_t</name></type> <name pos:start="15:18" pos:end="15:20">pil</name> <init pos:start="15:22" pos:end="15:46">= <expr pos:start="15:24" pos:end="15:46"><name pos:start="15:24" pos:end="15:46"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:41">intbit_to_level</name><index pos:start="15:42" pos:end="15:46">[<expr pos:start="15:43" pos:end="15:45"><name pos:start="15:43" pos:end="15:45">irq</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

	<if_stmt pos:start="17:9" pos:end="37:9"><if pos:start="17:9" pos:end="37:9">if <condition pos:start="17:12" pos:end="17:20">(<expr pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:15">pil</name> <operator pos:start="17:17" pos:end="17:17">&gt;</operator> <literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr>)</condition> <block pos:start="17:22" pos:end="37:9">{<block_content pos:start="19:13" pos:end="35:13">

	    <if_stmt pos:start="19:13" pos:end="35:13"><if pos:start="19:13" pos:end="27:13">if <condition pos:start="19:16" pos:end="19:22">(<expr pos:start="19:17" pos:end="19:21"><name pos:start="19:17" pos:end="19:21">level</name></expr>)</condition> <block pos:start="19:24" pos:end="27:13">{<block_content pos:start="21:17" pos:end="25:43">

		<expr_stmt pos:start="21:17" pos:end="21:43"><expr pos:start="21:17" pos:end="21:42"><name pos:start="21:17" pos:end="21:34"><name pos:start="21:17" pos:end="21:17">s</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:34">intregm_pending</name></name> <operator pos:start="21:36" pos:end="21:37">|=</operator> <name pos:start="21:39" pos:end="21:42">mask</name></expr>;</expr_stmt>

		<expr_stmt pos:start="23:17" pos:end="23:61"><expr pos:start="23:17" pos:end="23:60"><name pos:start="23:17" pos:end="23:48"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:33">intreg_pending</name><index pos:start="23:34" pos:end="23:48">[<expr pos:start="23:35" pos:end="23:47"><name pos:start="23:35" pos:end="23:47"><name pos:start="23:35" pos:end="23:35">s</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:47">target_cpu</name></name></expr>]</index></name> <operator pos:start="23:50" pos:end="23:51">|=</operator> <literal type="number" pos:start="23:53" pos:end="23:53">1</literal> <operator pos:start="23:55" pos:end="23:56">&lt;&lt;</operator> <name pos:start="23:58" pos:end="23:60">pil</name></expr>;</expr_stmt>

		<expr_stmt pos:start="25:17" pos:end="25:43"><expr pos:start="25:17" pos:end="25:42"><call pos:start="25:17" pos:end="25:42"><name pos:start="25:17" pos:end="25:39">slavio_check_interrupts</name><argument_list pos:start="25:40" pos:end="25:42">(<argument pos:start="25:41" pos:end="25:41"><expr pos:start="25:41" pos:end="25:41"><name pos:start="25:41" pos:end="25:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    </block_content>}</block></if>

	    <else pos:start="29:13" pos:end="35:13">else <block pos:start="29:18" pos:end="35:13">{<block_content pos:start="31:17" pos:end="33:64">

		<expr_stmt pos:start="31:17" pos:end="31:44"><expr pos:start="31:17" pos:end="31:43"><name pos:start="31:17" pos:end="31:34"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:34">intregm_pending</name></name> <operator pos:start="31:36" pos:end="31:37">&amp;=</operator> <operator pos:start="31:39" pos:end="31:39">~</operator><name pos:start="31:40" pos:end="31:43">mask</name></expr>;</expr_stmt>

		<expr_stmt pos:start="33:17" pos:end="33:64"><expr pos:start="33:17" pos:end="33:63"><name pos:start="33:17" pos:end="33:48"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:33">intreg_pending</name><index pos:start="33:34" pos:end="33:48">[<expr pos:start="33:35" pos:end="33:47"><name pos:start="33:35" pos:end="33:47"><name pos:start="33:35" pos:end="33:35">s</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:47">target_cpu</name></name></expr>]</index></name> <operator pos:start="33:50" pos:end="33:51">&amp;=</operator> <operator pos:start="33:53" pos:end="33:53">~</operator><operator pos:start="33:54" pos:end="33:54">(</operator><literal type="number" pos:start="33:55" pos:end="33:55">1</literal> <operator pos:start="33:57" pos:end="33:58">&lt;&lt;</operator> <name pos:start="33:60" pos:end="33:62">pil</name><operator pos:start="33:63" pos:end="33:63">)</operator></expr>;</expr_stmt>

	    </block_content>}</block></else></if_stmt>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
