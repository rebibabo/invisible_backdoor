<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6581.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">gif_parse_next_image</name><parameter_list pos:start="1:32" pos:end="1:44">(<parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:42"><name pos:start="1:33" pos:end="1:40">GifState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:5">

    <for pos:start="5:5" pos:end="47:5">for <control pos:start="5:9" pos:end="5:12">(<init pos:start="5:10" pos:end="5:10">;</init><condition pos:start="5:11" pos:end="5:11">;</condition><incr/>)</control> <block pos:start="5:14" pos:end="47:5">{<block_content pos:start="7:9" pos:end="45:9">

        <decl_stmt pos:start="7:9" pos:end="10:0"><decl pos:start="7:9" pos:end="7:54"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:16">code</name> <init pos:start="7:18" pos:end="7:54">= <expr pos:start="7:20" pos:end="7:54"><call pos:start="7:20" pos:end="7:54"><name pos:start="7:20" pos:end="7:38">bytestream_get_byte</name><argument_list pos:start="7:39" pos:end="7:54">(<argument pos:start="7:40" pos:end="7:53"><expr pos:start="7:40" pos:end="7:53"><operator pos:start="7:40" pos:end="7:40">&amp;</operator><name pos:start="7:41" pos:end="7:53"><name pos:start="7:41" pos:end="7:41">s</name><operator pos:start="7:42" pos:end="7:43">-&gt;</operator><name pos:start="7:44" pos:end="7:53">bytestream</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:start="9:1" pos:end="9:12">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:12">DEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="11:9" pos:end="14:0"><expr pos:start="11:9" pos:end="11:62"><call pos:start="11:9" pos:end="11:62"><name pos:start="11:9" pos:end="11:15">dprintf</name><argument_list pos:start="11:16" pos:end="11:62">(<argument pos:start="11:17" pos:end="11:24"><expr pos:start="11:17" pos:end="11:24"><name pos:start="11:17" pos:end="11:24"><name pos:start="11:17" pos:end="11:17">s</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:24">avctx</name></name></expr></argument>, <argument pos:start="11:27" pos:end="11:49"><expr pos:start="11:27" pos:end="11:49"><literal type="string" pos:start="11:27" pos:end="11:49">"gif: code=%02x '%c'\n"</literal></expr></argument>, <argument pos:start="11:52" pos:end="11:55"><expr pos:start="11:52" pos:end="11:55"><name pos:start="11:52" pos:end="11:55">code</name></expr></argument>, <argument pos:start="11:58" pos:end="11:61"><expr pos:start="11:58" pos:end="11:61"><name pos:start="11:58" pos:end="11:61">code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="13:1" pos:end="13:6">#<cpp:directive pos:start="13:2" pos:end="13:6">endif</cpp:directive></cpp:endif>

        <switch pos:start="15:9" pos:end="45:9">switch <condition pos:start="15:16" pos:end="15:21">(<expr pos:start="15:17" pos:end="15:20"><name pos:start="15:17" pos:end="15:20">code</name></expr>)</condition> <block pos:start="15:23" pos:end="45:9">{<block_content pos:start="17:9" pos:end="43:22">

        <case pos:start="17:9" pos:end="17:17">case <expr pos:start="17:14" pos:end="17:16"><literal type="char" pos:start="17:14" pos:end="17:16">','</literal></expr>:</case>

            <if_stmt pos:start="19:13" pos:end="21:26"><if pos:start="19:13" pos:end="21:26">if <condition pos:start="19:16" pos:end="19:38">(<expr pos:start="19:17" pos:end="19:37"><call pos:start="19:17" pos:end="19:33"><name pos:start="19:17" pos:end="19:30">gif_read_image</name><argument_list pos:start="19:31" pos:end="19:33">(<argument pos:start="19:32" pos:end="19:32"><expr pos:start="19:32" pos:end="19:32"><name pos:start="19:32" pos:end="19:32">s</name></expr></argument>)</argument_list></call> <operator pos:start="19:35" pos:end="19:35">&lt;</operator> <literal type="number" pos:start="19:37" pos:end="19:37">0</literal></expr>)</condition><block type="pseudo" pos:start="21:17" pos:end="21:26"><block_content pos:start="21:17" pos:end="21:26">

                <return pos:start="21:17" pos:end="21:26">return <expr pos:start="21:24" pos:end="21:25"><operator pos:start="21:24" pos:end="21:24">-</operator><literal type="number" pos:start="21:25" pos:end="21:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <return pos:start="23:13" pos:end="23:21">return <expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr>;</return>

        <case pos:start="25:9" pos:end="25:17">case <expr pos:start="25:14" pos:end="25:16"><literal type="char" pos:start="25:14" pos:end="25:16">';'</literal></expr>:</case>

            <comment type="block" pos:start="27:13" pos:end="27:30">/* end of image */</comment>

            <return pos:start="29:13" pos:end="29:22">return <expr pos:start="29:20" pos:end="29:21"><operator pos:start="29:20" pos:end="29:20">-</operator><literal type="number" pos:start="29:21" pos:end="29:21">1</literal></expr>;</return>

        <case pos:start="31:9" pos:end="31:17">case <expr pos:start="31:14" pos:end="31:16"><literal type="char" pos:start="31:14" pos:end="31:16">'!'</literal></expr>:</case>

            <if_stmt pos:start="33:13" pos:end="35:26"><if pos:start="33:13" pos:end="35:26">if <condition pos:start="33:16" pos:end="33:42">(<expr pos:start="33:17" pos:end="33:41"><call pos:start="33:17" pos:end="33:37"><name pos:start="33:17" pos:end="33:34">gif_read_extension</name><argument_list pos:start="33:35" pos:end="33:37">(<argument pos:start="33:36" pos:end="33:36"><expr pos:start="33:36" pos:end="33:36"><name pos:start="33:36" pos:end="33:36">s</name></expr></argument>)</argument_list></call> <operator pos:start="33:39" pos:end="33:39">&lt;</operator> <literal type="number" pos:start="33:41" pos:end="33:41">0</literal></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:26"><block_content pos:start="35:17" pos:end="35:26">

                <return pos:start="35:17" pos:end="35:26">return <expr pos:start="35:24" pos:end="35:25"><operator pos:start="35:24" pos:end="35:24">-</operator><literal type="number" pos:start="35:25" pos:end="35:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <default pos:start="39:9" pos:end="39:16">default:</default>

            <comment type="block" pos:start="41:13" pos:end="41:39">/* error or errneous EOF */</comment>

            <return pos:start="43:13" pos:end="43:22">return <expr pos:start="43:20" pos:end="43:21"><operator pos:start="43:20" pos:end="43:20">-</operator><literal type="number" pos:start="43:21" pos:end="43:21">1</literal></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
