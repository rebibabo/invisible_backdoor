<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16421.c" pos:tabs="8"><function pos:start="1:1" pos:end="577:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">cpu_x86_handle_mmu_fault</name><parameter_list pos:start="1:29" pos:end="3:56">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:40">CPUX86State</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:59">target_ulong</name></type> <name pos:start="1:61" pos:end="1:64">addr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:42"><decl pos:start="3:30" pos:end="3:42"><type pos:start="3:30" pos:end="3:42"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:42">is_write1</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:55"><decl pos:start="3:45" pos:end="3:55"><type pos:start="3:45" pos:end="3:55"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:55">mmu_idx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="577:1">{<block_content pos:start="7:5" pos:end="575:13">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:17">ptep</name></decl>, <decl pos:start="7:20" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:20" pos:end="7:22">pte</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:25">pde_addr</name></decl>, <decl pos:start="9:28" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:28" pos:end="9:35">pte_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:65"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">error_code</name></decl>, <decl pos:start="11:21" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:28">is_dirty</name></decl>, <decl pos:start="11:31" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:31" pos:end="11:34">prot</name></decl>, <decl pos:start="11:37" pos:end="11:45"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:37" pos:end="11:45">page_size</name></decl>, <decl pos:start="11:48" pos:end="11:55"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:48" pos:end="11:55">is_write</name></decl>, <decl pos:start="11:58" pos:end="11:64"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:58" pos:end="11:64">is_user</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:22">target_phys_addr_t</name></type> <name pos:start="13:24" pos:end="13:28">paddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:24">page_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:34"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">target_ulong</name></type> <name pos:start="17:18" pos:end="17:22">vaddr</name></decl>, <decl pos:start="17:25" pos:end="17:33"><type ref="prev" pos:start="17:5" pos:end="17:16"/><name pos:start="17:25" pos:end="17:33">virt_addr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="24:0"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:11">is_user</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:21">mmu_idx</name> <operator pos:start="21:23" pos:end="21:24">==</operator> <name pos:start="21:26" pos:end="21:37">MMU_USER_IDX</name></expr>;</expr_stmt>

<cpp:if pos:start="23:1" pos:end="23:22">#<cpp:directive pos:start="23:2" pos:end="23:3">if</cpp:directive> <expr pos:start="23:5" pos:end="23:22"><call pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:11">defined</name><argument_list pos:start="23:12" pos:end="23:22">(<argument pos:start="23:13" pos:end="23:21"><expr pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:21">DEBUG_MMU</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="25:5" pos:end="30:0"><expr pos:start="25:5" pos:end="27:46"><call pos:start="25:5" pos:end="27:46"><name pos:start="25:5" pos:end="25:10">printf</name><argument_list pos:start="25:11" pos:end="27:46">(<argument pos:start="25:12" pos:end="25:80"><expr pos:start="25:12" pos:end="25:80"><literal type="string" pos:start="25:12" pos:end="25:29">"MMU fault: addr="</literal> <name pos:start="25:31" pos:end="25:43">TARGET_FMT_lx</name> <literal type="string" pos:start="25:45" pos:end="25:61">" w=%d u=%d eip="</literal> <name pos:start="25:63" pos:end="25:75">TARGET_FMT_lx</name> <literal type="string" pos:start="25:77" pos:end="25:80">"\n"</literal></expr></argument>,

           <argument pos:start="27:12" pos:end="27:15"><expr pos:start="27:12" pos:end="27:15"><name pos:start="27:12" pos:end="27:15">addr</name></expr></argument>, <argument pos:start="27:18" pos:end="27:26"><expr pos:start="27:18" pos:end="27:26"><name pos:start="27:18" pos:end="27:26">is_write1</name></expr></argument>, <argument pos:start="27:29" pos:end="27:35"><expr pos:start="27:29" pos:end="27:35"><name pos:start="27:29" pos:end="27:35">is_user</name></expr></argument>, <argument pos:start="27:38" pos:end="27:45"><expr pos:start="27:38" pos:end="27:45"><name pos:start="27:38" pos:end="27:45"><name pos:start="27:38" pos:end="27:40">env</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:45">eip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:12">is_write</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:24">is_write1</name> <operator pos:start="31:26" pos:end="31:26">&amp;</operator> <literal type="number" pos:start="31:28" pos:end="31:28">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="47:5"><if pos:start="35:5" pos:end="47:5">if <condition pos:start="35:8" pos:end="35:36">(<expr pos:start="35:9" pos:end="35:35"><operator pos:start="35:9" pos:end="35:9">!</operator><operator pos:start="35:10" pos:end="35:10">(</operator><name pos:start="35:11" pos:end="35:20"><name pos:start="35:11" pos:end="35:13">env</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:17">cr</name><index pos:start="35:18" pos:end="35:20">[<expr pos:start="35:19" pos:end="35:19"><literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr>]</index></name> <operator pos:start="35:22" pos:end="35:22">&amp;</operator> <name pos:start="35:24" pos:end="35:34">CR0_PG_MASK</name><operator pos:start="35:35" pos:end="35:35">)</operator></expr>)</condition> <block pos:start="35:38" pos:end="47:5">{<block_content pos:start="37:9" pos:end="45:24">

        <expr_stmt pos:start="37:9" pos:end="37:19"><expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:11">pte</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:18">addr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:17">virt_addr</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:24">addr</name> <operator pos:start="39:26" pos:end="39:26">&amp;</operator> <name pos:start="39:28" pos:end="39:43">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:50"><expr pos:start="41:9" pos:end="41:49"><name pos:start="41:9" pos:end="41:12">prot</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <name pos:start="41:16" pos:end="41:24">PAGE_READ</name> <operator pos:start="41:26" pos:end="41:26">|</operator> <name pos:start="41:28" pos:end="41:37">PAGE_WRITE</name> <operator pos:start="41:39" pos:end="41:39">|</operator> <name pos:start="41:41" pos:end="41:49">PAGE_EXEC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:25"><expr pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:17">page_size</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <literal type="number" pos:start="43:21" pos:end="43:24">4096</literal></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:24">goto <name pos:start="45:14" pos:end="45:23">do_mapping</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="481:5"><if pos:start="51:5" pos:end="339:5">if <condition pos:start="51:8" pos:end="51:34">(<expr pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:11">env</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:15">cr</name><index pos:start="51:16" pos:end="51:18">[<expr pos:start="51:17" pos:end="51:17"><literal type="number" pos:start="51:17" pos:end="51:17">4</literal></expr>]</index></name> <operator pos:start="51:20" pos:end="51:20">&amp;</operator> <name pos:start="51:22" pos:end="51:33">CR4_PAE_MASK</name></expr>)</condition> <block pos:start="51:36" pos:end="339:5">{<block_content pos:start="53:9" pos:end="337:9">

        <decl_stmt pos:start="53:9" pos:end="53:27"><decl pos:start="53:9" pos:end="53:20"><type pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:16">uint64_t</name></type> <name pos:start="53:18" pos:end="53:20">pde</name></decl>, <decl pos:start="53:23" pos:end="53:26"><type ref="prev" pos:start="53:9" pos:end="53:16"/><name pos:start="53:23" pos:end="53:26">pdpe</name></decl>;</decl_stmt>

        <decl_stmt pos:start="55:9" pos:end="60:0"><decl pos:start="55:9" pos:end="55:30"><type pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:20">target_ulong</name></type> <name pos:start="55:22" pos:end="55:30">pdpe_addr</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="59:1" pos:end="59:20">#<cpp:directive pos:start="59:2" pos:end="59:6">ifdef</cpp:directive> <name pos:start="59:8" pos:end="59:20">TARGET_X86_64</name></cpp:ifdef>

        <if_stmt pos:start="61:9" pos:end="173:9"><if pos:start="61:9" pos:end="149:9">if <condition pos:start="61:12" pos:end="61:38">(<expr pos:start="61:13" pos:end="61:37"><name pos:start="61:13" pos:end="61:23"><name pos:start="61:13" pos:end="61:15">env</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:23">hflags</name></name> <operator pos:start="61:25" pos:end="61:25">&amp;</operator> <name pos:start="61:27" pos:end="61:37">HF_LMA_MASK</name></expr>)</condition> <block pos:start="61:40" pos:end="149:9">{<block_content pos:start="63:13" pos:end="147:13">

            <decl_stmt pos:start="63:13" pos:end="63:39"><decl pos:start="63:13" pos:end="63:31"><type pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:20">uint64_t</name></type> <name pos:start="63:22" pos:end="63:31">pml4e_addr</name></decl>, <decl pos:start="63:34" pos:end="63:38"><type ref="prev" pos:start="63:13" pos:end="63:20"/><name pos:start="63:34" pos:end="63:38">pml4e</name></decl>;</decl_stmt>

            <decl_stmt pos:start="65:13" pos:end="65:25"><decl pos:start="65:13" pos:end="65:24"><type pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:19">int32_t</name></type> <name pos:start="65:21" pos:end="65:24">sext</name></decl>;</decl_stmt>



            <comment type="block" pos:start="69:13" pos:end="69:53">/* test virtual address sign extension */</comment>

            <expr_stmt pos:start="71:13" pos:end="71:39"><expr pos:start="71:13" pos:end="71:38"><name pos:start="71:13" pos:end="71:16">sext</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <operator pos:start="71:20" pos:end="71:20">(</operator><name pos:start="71:21" pos:end="71:27">int64_t</name><operator pos:start="71:28" pos:end="71:28">)</operator><name pos:start="71:29" pos:end="71:32">addr</name> <operator pos:start="71:34" pos:end="71:35">&gt;&gt;</operator> <literal type="number" pos:start="71:37" pos:end="71:38">47</literal></expr>;</expr_stmt>

            <if_stmt pos:start="73:13" pos:end="81:13"><if pos:start="73:13" pos:end="81:13">if <condition pos:start="73:16" pos:end="73:40">(<expr pos:start="73:17" pos:end="73:39"><name pos:start="73:17" pos:end="73:20">sext</name> <operator pos:start="73:22" pos:end="73:23">!=</operator> <literal type="number" pos:start="73:25" pos:end="73:25">0</literal> <operator pos:start="73:27" pos:end="73:28">&amp;&amp;</operator> <name pos:start="73:30" pos:end="73:33">sext</name> <operator pos:start="73:35" pos:end="73:36">!=</operator> <operator pos:start="73:38" pos:end="73:38">-</operator><literal type="number" pos:start="73:39" pos:end="73:39">1</literal></expr>)</condition> <block pos:start="73:42" pos:end="81:13">{<block_content pos:start="75:17" pos:end="79:25">

                <expr_stmt pos:start="75:17" pos:end="75:36"><expr pos:start="75:17" pos:end="75:35"><name pos:start="75:17" pos:end="75:31"><name pos:start="75:17" pos:end="75:19">env</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:31">error_code</name></name> <operator pos:start="75:33" pos:end="75:33">=</operator> <literal type="number" pos:start="75:35" pos:end="75:35">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:50"><expr pos:start="77:17" pos:end="77:49"><name pos:start="77:17" pos:end="77:36"><name pos:start="77:17" pos:end="77:19">env</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:36">exception_index</name></name> <operator pos:start="77:38" pos:end="77:38">=</operator> <name pos:start="77:40" pos:end="77:49">EXCP0D_GPF</name></expr>;</expr_stmt>

                <return pos:start="79:17" pos:end="79:25">return <expr pos:start="79:24" pos:end="79:24"><literal type="number" pos:start="79:24" pos:end="79:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="85:13" pos:end="87:30"><expr pos:start="85:13" pos:end="87:29"><name pos:start="85:13" pos:end="85:22">pml4e_addr</name> <operator pos:start="85:24" pos:end="85:24">=</operator> <operator pos:start="85:26" pos:end="85:26">(</operator><operator pos:start="85:27" pos:end="85:27">(</operator><name pos:start="85:28" pos:end="85:37"><name pos:start="85:28" pos:end="85:30">env</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:34">cr</name><index pos:start="85:35" pos:end="85:37">[<expr pos:start="85:36" pos:end="85:36"><literal type="number" pos:start="85:36" pos:end="85:36">3</literal></expr>]</index></name> <operator pos:start="85:39" pos:end="85:39">&amp;</operator> <operator pos:start="85:41" pos:end="85:41">~</operator><literal type="number" pos:start="85:42" pos:end="85:46">0xfff</literal><operator pos:start="85:47" pos:end="85:47">)</operator> <operator pos:start="85:49" pos:end="85:49">+</operator> <operator pos:start="85:51" pos:end="85:51">(</operator><operator pos:start="85:52" pos:end="85:52">(</operator><operator pos:start="85:53" pos:end="85:53">(</operator><name pos:start="85:54" pos:end="85:57">addr</name> <operator pos:start="85:59" pos:end="85:60">&gt;&gt;</operator> <literal type="number" pos:start="85:62" pos:end="85:63">39</literal><operator pos:start="85:64" pos:end="85:64">)</operator> <operator pos:start="85:66" pos:end="85:66">&amp;</operator> <literal type="number" pos:start="85:68" pos:end="85:72">0x1ff</literal><operator pos:start="85:73" pos:end="85:73">)</operator> <operator pos:start="85:75" pos:end="85:76">&lt;&lt;</operator> <literal type="number" pos:start="85:78" pos:end="85:78">3</literal><operator pos:start="85:79" pos:end="85:79">)</operator><operator pos:start="85:80" pos:end="85:80">)</operator> <operator pos:start="85:82" pos:end="85:82">&amp;</operator>

                <name pos:start="87:17" pos:end="87:29"><name pos:start="87:17" pos:end="87:19">env</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:29">a20_mask</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:41"><expr pos:start="89:13" pos:end="89:40"><name pos:start="89:13" pos:end="89:17">pml4e</name> <operator pos:start="89:19" pos:end="89:19">=</operator> <call pos:start="89:21" pos:end="89:40"><name pos:start="89:21" pos:end="89:28">ldq_phys</name><argument_list pos:start="89:29" pos:end="89:40">(<argument pos:start="89:30" pos:end="89:39"><expr pos:start="89:30" pos:end="89:39"><name pos:start="89:30" pos:end="89:39">pml4e_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="97:13"><if pos:start="91:13" pos:end="97:13">if <condition pos:start="91:16" pos:end="91:43">(<expr pos:start="91:17" pos:end="91:42"><operator pos:start="91:17" pos:end="91:17">!</operator><operator pos:start="91:18" pos:end="91:18">(</operator><name pos:start="91:19" pos:end="91:23">pml4e</name> <operator pos:start="91:25" pos:end="91:25">&amp;</operator> <name pos:start="91:27" pos:end="91:41">PG_PRESENT_MASK</name><operator pos:start="91:42" pos:end="91:42">)</operator></expr>)</condition> <block pos:start="91:45" pos:end="97:13">{<block_content pos:start="93:17" pos:end="95:30">

                <expr_stmt pos:start="93:17" pos:end="93:31"><expr pos:start="93:17" pos:end="93:30"><name pos:start="93:17" pos:end="93:26">error_code</name> <operator pos:start="93:28" pos:end="93:28">=</operator> <literal type="number" pos:start="93:30" pos:end="93:30">0</literal></expr>;</expr_stmt>

                <goto pos:start="95:17" pos:end="95:30">goto <name pos:start="95:22" pos:end="95:29">do_fault</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="99:13" pos:end="105:13"><if pos:start="99:13" pos:end="105:13">if <condition pos:start="99:16" pos:end="99:68">(<expr pos:start="99:17" pos:end="99:67"><operator pos:start="99:17" pos:end="99:17">!</operator><operator pos:start="99:18" pos:end="99:18">(</operator><name pos:start="99:19" pos:end="99:27"><name pos:start="99:19" pos:end="99:21">env</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:27">efer</name></name> <operator pos:start="99:29" pos:end="99:29">&amp;</operator> <name pos:start="99:31" pos:end="99:42">MSR_EFER_NXE</name><operator pos:start="99:43" pos:end="99:43">)</operator> <operator pos:start="99:45" pos:end="99:46">&amp;&amp;</operator> <operator pos:start="99:48" pos:end="99:48">(</operator><name pos:start="99:49" pos:end="99:53">pml4e</name> <operator pos:start="99:55" pos:end="99:55">&amp;</operator> <name pos:start="99:57" pos:end="99:66">PG_NX_MASK</name><operator pos:start="99:67" pos:end="99:67">)</operator></expr>)</condition> <block pos:start="99:70" pos:end="105:13">{<block_content pos:start="101:17" pos:end="103:30">

                <expr_stmt pos:start="101:17" pos:end="101:48"><expr pos:start="101:17" pos:end="101:47"><name pos:start="101:17" pos:end="101:26">error_code</name> <operator pos:start="101:28" pos:end="101:28">=</operator> <name pos:start="101:30" pos:end="101:47">PG_ERROR_RSVD_MASK</name></expr>;</expr_stmt>

                <goto pos:start="103:17" pos:end="103:30">goto <name pos:start="103:22" pos:end="103:29">do_fault</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="107:13" pos:end="113:13"><if pos:start="107:13" pos:end="113:13">if <condition pos:start="107:16" pos:end="107:44">(<expr pos:start="107:17" pos:end="107:43"><operator pos:start="107:17" pos:end="107:17">!</operator><operator pos:start="107:18" pos:end="107:18">(</operator><name pos:start="107:19" pos:end="107:23">pml4e</name> <operator pos:start="107:25" pos:end="107:25">&amp;</operator> <name pos:start="107:27" pos:end="107:42">PG_ACCESSED_MASK</name><operator pos:start="107:43" pos:end="107:43">)</operator></expr>)</condition> <block pos:start="107:46" pos:end="113:13">{<block_content pos:start="109:17" pos:end="111:53">

                <expr_stmt pos:start="109:17" pos:end="109:42"><expr pos:start="109:17" pos:end="109:41"><name pos:start="109:17" pos:end="109:21">pml4e</name> <operator pos:start="109:23" pos:end="109:24">|=</operator> <name pos:start="109:26" pos:end="109:41">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:53"><expr pos:start="111:17" pos:end="111:52"><call pos:start="111:17" pos:end="111:52"><name pos:start="111:17" pos:end="111:33">stl_phys_notdirty</name><argument_list pos:start="111:34" pos:end="111:52">(<argument pos:start="111:35" pos:end="111:44"><expr pos:start="111:35" pos:end="111:44"><name pos:start="111:35" pos:end="111:44">pml4e_addr</name></expr></argument>, <argument pos:start="111:47" pos:end="111:51"><expr pos:start="111:47" pos:end="111:51"><name pos:start="111:47" pos:end="111:51">pml4e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:38"><expr pos:start="115:13" pos:end="115:37"><name pos:start="115:13" pos:end="115:16">ptep</name> <operator pos:start="115:18" pos:end="115:18">=</operator> <name pos:start="115:20" pos:end="115:24">pml4e</name> <operator pos:start="115:26" pos:end="115:26">^</operator> <name pos:start="115:28" pos:end="115:37">PG_NX_MASK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="119:30"><expr pos:start="117:13" pos:end="119:29"><name pos:start="117:13" pos:end="117:21">pdpe_addr</name> <operator pos:start="117:23" pos:end="117:23">=</operator> <operator pos:start="117:25" pos:end="117:25">(</operator><operator pos:start="117:26" pos:end="117:26">(</operator><name pos:start="117:27" pos:end="117:31">pml4e</name> <operator pos:start="117:33" pos:end="117:33">&amp;</operator> <name pos:start="117:35" pos:end="117:48">PHYS_ADDR_MASK</name><operator pos:start="117:49" pos:end="117:49">)</operator> <operator pos:start="117:51" pos:end="117:51">+</operator> <operator pos:start="117:53" pos:end="117:53">(</operator><operator pos:start="117:54" pos:end="117:54">(</operator><operator pos:start="117:55" pos:end="117:55">(</operator><name pos:start="117:56" pos:end="117:59">addr</name> <operator pos:start="117:61" pos:end="117:62">&gt;&gt;</operator> <literal type="number" pos:start="117:64" pos:end="117:65">30</literal><operator pos:start="117:66" pos:end="117:66">)</operator> <operator pos:start="117:68" pos:end="117:68">&amp;</operator> <literal type="number" pos:start="117:70" pos:end="117:74">0x1ff</literal><operator pos:start="117:75" pos:end="117:75">)</operator> <operator pos:start="117:77" pos:end="117:78">&lt;&lt;</operator> <literal type="number" pos:start="117:80" pos:end="117:80">3</literal><operator pos:start="117:81" pos:end="117:81">)</operator><operator pos:start="117:82" pos:end="117:82">)</operator> <operator pos:start="117:84" pos:end="117:84">&amp;</operator>

                <name pos:start="119:17" pos:end="119:29"><name pos:start="119:17" pos:end="119:19">env</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:29">a20_mask</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:39"><expr pos:start="121:13" pos:end="121:38"><name pos:start="121:13" pos:end="121:16">pdpe</name> <operator pos:start="121:18" pos:end="121:18">=</operator> <call pos:start="121:20" pos:end="121:38"><name pos:start="121:20" pos:end="121:27">ldq_phys</name><argument_list pos:start="121:28" pos:end="121:38">(<argument pos:start="121:29" pos:end="121:37"><expr pos:start="121:29" pos:end="121:37"><name pos:start="121:29" pos:end="121:37">pdpe_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="129:13"><if pos:start="123:13" pos:end="129:13">if <condition pos:start="123:16" pos:end="123:42">(<expr pos:start="123:17" pos:end="123:41"><operator pos:start="123:17" pos:end="123:17">!</operator><operator pos:start="123:18" pos:end="123:18">(</operator><name pos:start="123:19" pos:end="123:22">pdpe</name> <operator pos:start="123:24" pos:end="123:24">&amp;</operator> <name pos:start="123:26" pos:end="123:40">PG_PRESENT_MASK</name><operator pos:start="123:41" pos:end="123:41">)</operator></expr>)</condition> <block pos:start="123:44" pos:end="129:13">{<block_content pos:start="125:17" pos:end="127:30">

                <expr_stmt pos:start="125:17" pos:end="125:31"><expr pos:start="125:17" pos:end="125:30"><name pos:start="125:17" pos:end="125:26">error_code</name> <operator pos:start="125:28" pos:end="125:28">=</operator> <literal type="number" pos:start="125:30" pos:end="125:30">0</literal></expr>;</expr_stmt>

                <goto pos:start="127:17" pos:end="127:30">goto <name pos:start="127:22" pos:end="127:29">do_fault</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="131:13" pos:end="137:13"><if pos:start="131:13" pos:end="137:13">if <condition pos:start="131:16" pos:end="131:67">(<expr pos:start="131:17" pos:end="131:66"><operator pos:start="131:17" pos:end="131:17">!</operator><operator pos:start="131:18" pos:end="131:18">(</operator><name pos:start="131:19" pos:end="131:27"><name pos:start="131:19" pos:end="131:21">env</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:27">efer</name></name> <operator pos:start="131:29" pos:end="131:29">&amp;</operator> <name pos:start="131:31" pos:end="131:42">MSR_EFER_NXE</name><operator pos:start="131:43" pos:end="131:43">)</operator> <operator pos:start="131:45" pos:end="131:46">&amp;&amp;</operator> <operator pos:start="131:48" pos:end="131:48">(</operator><name pos:start="131:49" pos:end="131:52">pdpe</name> <operator pos:start="131:54" pos:end="131:54">&amp;</operator> <name pos:start="131:56" pos:end="131:65">PG_NX_MASK</name><operator pos:start="131:66" pos:end="131:66">)</operator></expr>)</condition> <block pos:start="131:69" pos:end="137:13">{<block_content pos:start="133:17" pos:end="135:30">

                <expr_stmt pos:start="133:17" pos:end="133:48"><expr pos:start="133:17" pos:end="133:47"><name pos:start="133:17" pos:end="133:26">error_code</name> <operator pos:start="133:28" pos:end="133:28">=</operator> <name pos:start="133:30" pos:end="133:47">PG_ERROR_RSVD_MASK</name></expr>;</expr_stmt>

                <goto pos:start="135:17" pos:end="135:30">goto <name pos:start="135:22" pos:end="135:29">do_fault</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:38"><expr pos:start="139:13" pos:end="139:37"><name pos:start="139:13" pos:end="139:16">ptep</name> <operator pos:start="139:18" pos:end="139:19">&amp;=</operator> <name pos:start="139:21" pos:end="139:24">pdpe</name> <operator pos:start="139:26" pos:end="139:26">^</operator> <name pos:start="139:28" pos:end="139:37">PG_NX_MASK</name></expr>;</expr_stmt>

            <if_stmt pos:start="141:13" pos:end="147:13"><if pos:start="141:13" pos:end="147:13">if <condition pos:start="141:16" pos:end="141:43">(<expr pos:start="141:17" pos:end="141:42"><operator pos:start="141:17" pos:end="141:17">!</operator><operator pos:start="141:18" pos:end="141:18">(</operator><name pos:start="141:19" pos:end="141:22">pdpe</name> <operator pos:start="141:24" pos:end="141:24">&amp;</operator> <name pos:start="141:26" pos:end="141:41">PG_ACCESSED_MASK</name><operator pos:start="141:42" pos:end="141:42">)</operator></expr>)</condition> <block pos:start="141:45" pos:end="147:13">{<block_content pos:start="143:17" pos:end="145:51">

                <expr_stmt pos:start="143:17" pos:end="143:41"><expr pos:start="143:17" pos:end="143:40"><name pos:start="143:17" pos:end="143:20">pdpe</name> <operator pos:start="143:22" pos:end="143:23">|=</operator> <name pos:start="143:25" pos:end="143:40">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:51"><expr pos:start="145:17" pos:end="145:50"><call pos:start="145:17" pos:end="145:50"><name pos:start="145:17" pos:end="145:33">stl_phys_notdirty</name><argument_list pos:start="145:34" pos:end="145:50">(<argument pos:start="145:35" pos:end="145:43"><expr pos:start="145:35" pos:end="145:43"><name pos:start="145:35" pos:end="145:43">pdpe_addr</name></expr></argument>, <argument pos:start="145:46" pos:end="145:49"><expr pos:start="145:46" pos:end="145:49"><name pos:start="145:46" pos:end="145:49">pdpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="149:11" pos:end="173:9">else

<cpp:endif pos:start="151:1" pos:end="151:6">#<cpp:directive pos:start="151:2" pos:end="151:6">endif</cpp:directive></cpp:endif>

        <block pos:start="153:9" pos:end="173:9">{<block_content pos:start="157:13" pos:end="171:58">

            <comment type="block" pos:start="155:13" pos:end="155:53">/* XXX: load them when cr3 is loaded ? */</comment>

            <expr_stmt pos:start="157:13" pos:end="159:30"><expr pos:start="157:13" pos:end="159:29"><name pos:start="157:13" pos:end="157:21">pdpe_addr</name> <operator pos:start="157:23" pos:end="157:23">=</operator> <operator pos:start="157:25" pos:end="157:25">(</operator><operator pos:start="157:26" pos:end="157:26">(</operator><name pos:start="157:27" pos:end="157:36"><name pos:start="157:27" pos:end="157:29">env</name><operator pos:start="157:30" pos:end="157:31">-&gt;</operator><name pos:start="157:32" pos:end="157:33">cr</name><index pos:start="157:34" pos:end="157:36">[<expr pos:start="157:35" pos:end="157:35"><literal type="number" pos:start="157:35" pos:end="157:35">3</literal></expr>]</index></name> <operator pos:start="157:38" pos:end="157:38">&amp;</operator> <operator pos:start="157:40" pos:end="157:40">~</operator><literal type="number" pos:start="157:41" pos:end="157:44">0x1f</literal><operator pos:start="157:45" pos:end="157:45">)</operator> <operator pos:start="157:47" pos:end="157:47">+</operator> <operator pos:start="157:49" pos:end="157:49">(</operator><operator pos:start="157:50" pos:end="157:50">(</operator><name pos:start="157:51" pos:end="157:54">addr</name> <operator pos:start="157:56" pos:end="157:57">&gt;&gt;</operator> <literal type="number" pos:start="157:59" pos:end="157:60">27</literal><operator pos:start="157:61" pos:end="157:61">)</operator> <operator pos:start="157:63" pos:end="157:63">&amp;</operator> <literal type="number" pos:start="157:65" pos:end="157:68">0x18</literal><operator pos:start="157:69" pos:end="157:69">)</operator><operator pos:start="157:70" pos:end="157:70">)</operator> <operator pos:start="157:72" pos:end="157:72">&amp;</operator>

                <name pos:start="159:17" pos:end="159:29"><name pos:start="159:17" pos:end="159:19">env</name><operator pos:start="159:20" pos:end="159:21">-&gt;</operator><name pos:start="159:22" pos:end="159:29">a20_mask</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:39"><expr pos:start="161:13" pos:end="161:38"><name pos:start="161:13" pos:end="161:16">pdpe</name> <operator pos:start="161:18" pos:end="161:18">=</operator> <call pos:start="161:20" pos:end="161:38"><name pos:start="161:20" pos:end="161:27">ldq_phys</name><argument_list pos:start="161:28" pos:end="161:38">(<argument pos:start="161:29" pos:end="161:37"><expr pos:start="161:29" pos:end="161:37"><name pos:start="161:29" pos:end="161:37">pdpe_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="163:13" pos:end="169:13"><if pos:start="163:13" pos:end="169:13">if <condition pos:start="163:16" pos:end="163:42">(<expr pos:start="163:17" pos:end="163:41"><operator pos:start="163:17" pos:end="163:17">!</operator><operator pos:start="163:18" pos:end="163:18">(</operator><name pos:start="163:19" pos:end="163:22">pdpe</name> <operator pos:start="163:24" pos:end="163:24">&amp;</operator> <name pos:start="163:26" pos:end="163:40">PG_PRESENT_MASK</name><operator pos:start="163:41" pos:end="163:41">)</operator></expr>)</condition> <block pos:start="163:44" pos:end="169:13">{<block_content pos:start="165:17" pos:end="167:30">

                <expr_stmt pos:start="165:17" pos:end="165:31"><expr pos:start="165:17" pos:end="165:30"><name pos:start="165:17" pos:end="165:26">error_code</name> <operator pos:start="165:28" pos:end="165:28">=</operator> <literal type="number" pos:start="165:30" pos:end="165:30">0</literal></expr>;</expr_stmt>

                <goto pos:start="167:17" pos:end="167:30">goto <name pos:start="167:22" pos:end="167:29">do_fault</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:58"><expr pos:start="171:13" pos:end="171:57"><name pos:start="171:13" pos:end="171:16">ptep</name> <operator pos:start="171:18" pos:end="171:18">=</operator> <name pos:start="171:20" pos:end="171:29">PG_NX_MASK</name> <operator pos:start="171:31" pos:end="171:31">|</operator> <name pos:start="171:33" pos:end="171:44">PG_USER_MASK</name> <operator pos:start="171:46" pos:end="171:46">|</operator> <name pos:start="171:48" pos:end="171:57">PG_RW_MASK</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="177:9" pos:end="179:26"><expr pos:start="177:9" pos:end="179:25"><name pos:start="177:9" pos:end="177:16">pde_addr</name> <operator pos:start="177:18" pos:end="177:18">=</operator> <operator pos:start="177:20" pos:end="177:20">(</operator><operator pos:start="177:21" pos:end="177:21">(</operator><name pos:start="177:22" pos:end="177:25">pdpe</name> <operator pos:start="177:27" pos:end="177:27">&amp;</operator> <name pos:start="177:29" pos:end="177:42">PHYS_ADDR_MASK</name><operator pos:start="177:43" pos:end="177:43">)</operator> <operator pos:start="177:45" pos:end="177:45">+</operator> <operator pos:start="177:47" pos:end="177:47">(</operator><operator pos:start="177:48" pos:end="177:48">(</operator><operator pos:start="177:49" pos:end="177:49">(</operator><name pos:start="177:50" pos:end="177:53">addr</name> <operator pos:start="177:55" pos:end="177:56">&gt;&gt;</operator> <literal type="number" pos:start="177:58" pos:end="177:59">21</literal><operator pos:start="177:60" pos:end="177:60">)</operator> <operator pos:start="177:62" pos:end="177:62">&amp;</operator> <literal type="number" pos:start="177:64" pos:end="177:68">0x1ff</literal><operator pos:start="177:69" pos:end="177:69">)</operator> <operator pos:start="177:71" pos:end="177:72">&lt;&lt;</operator> <literal type="number" pos:start="177:74" pos:end="177:74">3</literal><operator pos:start="177:75" pos:end="177:75">)</operator><operator pos:start="177:76" pos:end="177:76">)</operator> <operator pos:start="177:78" pos:end="177:78">&amp;</operator>

            <name pos:start="179:13" pos:end="179:25"><name pos:start="179:13" pos:end="179:15">env</name><operator pos:start="179:16" pos:end="179:17">-&gt;</operator><name pos:start="179:18" pos:end="179:25">a20_mask</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:33"><expr pos:start="181:9" pos:end="181:32"><name pos:start="181:9" pos:end="181:11">pde</name> <operator pos:start="181:13" pos:end="181:13">=</operator> <call pos:start="181:15" pos:end="181:32"><name pos:start="181:15" pos:end="181:22">ldq_phys</name><argument_list pos:start="181:23" pos:end="181:32">(<argument pos:start="181:24" pos:end="181:31"><expr pos:start="181:24" pos:end="181:31"><name pos:start="181:24" pos:end="181:31">pde_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="183:9" pos:end="189:9"><if pos:start="183:9" pos:end="189:9">if <condition pos:start="183:12" pos:end="183:37">(<expr pos:start="183:13" pos:end="183:36"><operator pos:start="183:13" pos:end="183:13">!</operator><operator pos:start="183:14" pos:end="183:14">(</operator><name pos:start="183:15" pos:end="183:17">pde</name> <operator pos:start="183:19" pos:end="183:19">&amp;</operator> <name pos:start="183:21" pos:end="183:35">PG_PRESENT_MASK</name><operator pos:start="183:36" pos:end="183:36">)</operator></expr>)</condition> <block pos:start="183:39" pos:end="189:9">{<block_content pos:start="185:13" pos:end="187:26">

            <expr_stmt pos:start="185:13" pos:end="185:27"><expr pos:start="185:13" pos:end="185:26"><name pos:start="185:13" pos:end="185:22">error_code</name> <operator pos:start="185:24" pos:end="185:24">=</operator> <literal type="number" pos:start="185:26" pos:end="185:26">0</literal></expr>;</expr_stmt>

            <goto pos:start="187:13" pos:end="187:26">goto <name pos:start="187:18" pos:end="187:25">do_fault</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="191:9" pos:end="197:9"><if pos:start="191:9" pos:end="197:9">if <condition pos:start="191:12" pos:end="191:62">(<expr pos:start="191:13" pos:end="191:61"><operator pos:start="191:13" pos:end="191:13">!</operator><operator pos:start="191:14" pos:end="191:14">(</operator><name pos:start="191:15" pos:end="191:23"><name pos:start="191:15" pos:end="191:17">env</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:23">efer</name></name> <operator pos:start="191:25" pos:end="191:25">&amp;</operator> <name pos:start="191:27" pos:end="191:38">MSR_EFER_NXE</name><operator pos:start="191:39" pos:end="191:39">)</operator> <operator pos:start="191:41" pos:end="191:42">&amp;&amp;</operator> <operator pos:start="191:44" pos:end="191:44">(</operator><name pos:start="191:45" pos:end="191:47">pde</name> <operator pos:start="191:49" pos:end="191:49">&amp;</operator> <name pos:start="191:51" pos:end="191:60">PG_NX_MASK</name><operator pos:start="191:61" pos:end="191:61">)</operator></expr>)</condition> <block pos:start="191:64" pos:end="197:9">{<block_content pos:start="193:13" pos:end="195:26">

            <expr_stmt pos:start="193:13" pos:end="193:44"><expr pos:start="193:13" pos:end="193:43"><name pos:start="193:13" pos:end="193:22">error_code</name> <operator pos:start="193:24" pos:end="193:24">=</operator> <name pos:start="193:26" pos:end="193:43">PG_ERROR_RSVD_MASK</name></expr>;</expr_stmt>

            <goto pos:start="195:13" pos:end="195:26">goto <name pos:start="195:18" pos:end="195:25">do_fault</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:33"><expr pos:start="199:9" pos:end="199:32"><name pos:start="199:9" pos:end="199:12">ptep</name> <operator pos:start="199:14" pos:end="199:15">&amp;=</operator> <name pos:start="199:17" pos:end="199:19">pde</name> <operator pos:start="199:21" pos:end="199:21">^</operator> <name pos:start="199:23" pos:end="199:32">PG_NX_MASK</name></expr>;</expr_stmt>

        <if_stmt pos:start="201:9" pos:end="337:9"><if pos:start="201:9" pos:end="253:9">if <condition pos:start="201:12" pos:end="201:30">(<expr pos:start="201:13" pos:end="201:29"><name pos:start="201:13" pos:end="201:15">pde</name> <operator pos:start="201:17" pos:end="201:17">&amp;</operator> <name pos:start="201:19" pos:end="201:29">PG_PSE_MASK</name></expr>)</condition> <block pos:start="201:32" pos:end="253:9">{<block_content pos:start="205:13" pos:end="251:48">

            <comment type="block" pos:start="203:13" pos:end="203:27">/* 2 MB page */</comment>

            <expr_stmt pos:start="205:13" pos:end="205:36"><expr pos:start="205:13" pos:end="205:35"><name pos:start="205:13" pos:end="205:21">page_size</name> <operator pos:start="205:23" pos:end="205:23">=</operator> <literal type="number" pos:start="205:25" pos:end="205:28">2048</literal> <operator pos:start="205:30" pos:end="205:30">*</operator> <literal type="number" pos:start="205:32" pos:end="205:35">1024</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:31"><expr pos:start="207:13" pos:end="207:30"><name pos:start="207:13" pos:end="207:16">ptep</name> <operator pos:start="207:18" pos:end="207:19">^=</operator> <name pos:start="207:21" pos:end="207:30">PG_NX_MASK</name></expr>;</expr_stmt>

            <if_stmt pos:start="209:13" pos:end="211:38"><if pos:start="209:13" pos:end="211:38">if <condition pos:start="209:16" pos:end="209:54">(<expr pos:start="209:17" pos:end="209:53"><operator pos:start="209:17" pos:end="209:17">(</operator><name pos:start="209:18" pos:end="209:21">ptep</name> <operator pos:start="209:23" pos:end="209:23">&amp;</operator> <name pos:start="209:25" pos:end="209:34">PG_NX_MASK</name><operator pos:start="209:35" pos:end="209:35">)</operator> <operator pos:start="209:37" pos:end="209:38">&amp;&amp;</operator> <name pos:start="209:40" pos:end="209:48">is_write1</name> <operator pos:start="209:50" pos:end="209:51">==</operator> <literal type="number" pos:start="209:53" pos:end="209:53">2</literal></expr>)</condition><block type="pseudo" pos:start="211:17" pos:end="211:38"><block_content pos:start="211:17" pos:end="211:38">

                <goto pos:start="211:17" pos:end="211:38">goto <name pos:start="211:22" pos:end="211:37">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="213:13" pos:end="231:13"><if pos:start="213:13" pos:end="223:13">if <condition pos:start="213:16" pos:end="213:24">(<expr pos:start="213:17" pos:end="213:23"><name pos:start="213:17" pos:end="213:23">is_user</name></expr>)</condition> <block pos:start="213:26" pos:end="223:13">{<block_content pos:start="215:17" pos:end="221:42">

                <if_stmt pos:start="215:17" pos:end="217:42"><if pos:start="215:17" pos:end="217:42">if <condition pos:start="215:20" pos:end="215:43">(<expr pos:start="215:21" pos:end="215:42"><operator pos:start="215:21" pos:end="215:21">!</operator><operator pos:start="215:22" pos:end="215:22">(</operator><name pos:start="215:23" pos:end="215:26">ptep</name> <operator pos:start="215:28" pos:end="215:28">&amp;</operator> <name pos:start="215:30" pos:end="215:41">PG_USER_MASK</name><operator pos:start="215:42" pos:end="215:42">)</operator></expr>)</condition><block type="pseudo" pos:start="217:21" pos:end="217:42"><block_content pos:start="217:21" pos:end="217:42">

                    <goto pos:start="217:21" pos:end="217:42">goto <name pos:start="217:26" pos:end="217:41">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

                <if_stmt pos:start="219:17" pos:end="221:42"><if pos:start="219:17" pos:end="221:42">if <condition pos:start="219:20" pos:end="219:53">(<expr pos:start="219:21" pos:end="219:52"><name pos:start="219:21" pos:end="219:28">is_write</name> <operator pos:start="219:30" pos:end="219:31">&amp;&amp;</operator> <operator pos:start="219:33" pos:end="219:33">!</operator><operator pos:start="219:34" pos:end="219:34">(</operator><name pos:start="219:35" pos:end="219:38">ptep</name> <operator pos:start="219:40" pos:end="219:40">&amp;</operator> <name pos:start="219:42" pos:end="219:51">PG_RW_MASK</name><operator pos:start="219:52" pos:end="219:52">)</operator></expr>)</condition><block type="pseudo" pos:start="221:21" pos:end="221:42"><block_content pos:start="221:21" pos:end="221:42">

                    <goto pos:start="221:21" pos:end="221:42">goto <name pos:start="221:26" pos:end="221:41">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="223:15" pos:end="231:13">else <block pos:start="223:20" pos:end="231:13">{<block_content pos:start="225:17" pos:end="229:42">

                <if_stmt pos:start="225:17" pos:end="229:42"><if pos:start="225:17" pos:end="229:42">if <condition pos:start="225:20" pos:end="227:53">(<expr pos:start="225:21" pos:end="227:52"><operator pos:start="225:21" pos:end="225:21">(</operator><name pos:start="225:22" pos:end="225:31"><name pos:start="225:22" pos:end="225:24">env</name><operator pos:start="225:25" pos:end="225:26">-&gt;</operator><name pos:start="225:27" pos:end="225:28">cr</name><index pos:start="225:29" pos:end="225:31">[<expr pos:start="225:30" pos:end="225:30"><literal type="number" pos:start="225:30" pos:end="225:30">0</literal></expr>]</index></name> <operator pos:start="225:33" pos:end="225:33">&amp;</operator> <name pos:start="225:35" pos:end="225:45">CR0_WP_MASK</name><operator pos:start="225:46" pos:end="225:46">)</operator> <operator pos:start="225:48" pos:end="225:49">&amp;&amp;</operator>

                    <name pos:start="227:21" pos:end="227:28">is_write</name> <operator pos:start="227:30" pos:end="227:31">&amp;&amp;</operator> <operator pos:start="227:33" pos:end="227:33">!</operator><operator pos:start="227:34" pos:end="227:34">(</operator><name pos:start="227:35" pos:end="227:38">ptep</name> <operator pos:start="227:40" pos:end="227:40">&amp;</operator> <name pos:start="227:42" pos:end="227:51">PG_RW_MASK</name><operator pos:start="227:52" pos:end="227:52">)</operator></expr>)</condition><block type="pseudo" pos:start="229:21" pos:end="229:42"><block_content pos:start="229:21" pos:end="229:42">

                    <goto pos:start="229:21" pos:end="229:42">goto <name pos:start="229:26" pos:end="229:41">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:58"><expr pos:start="233:13" pos:end="233:57"><name pos:start="233:13" pos:end="233:20">is_dirty</name> <operator pos:start="233:22" pos:end="233:22">=</operator> <name pos:start="233:24" pos:end="233:31">is_write</name> <operator pos:start="233:33" pos:end="233:34">&amp;&amp;</operator> <operator pos:start="233:36" pos:end="233:36">!</operator><operator pos:start="233:37" pos:end="233:37">(</operator><name pos:start="233:38" pos:end="233:40">pde</name> <operator pos:start="233:42" pos:end="233:42">&amp;</operator> <name pos:start="233:44" pos:end="233:56">PG_DIRTY_MASK</name><operator pos:start="233:57" pos:end="233:57">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="235:13" pos:end="245:13"><if pos:start="235:13" pos:end="245:13">if <condition pos:start="235:16" pos:end="235:54">(<expr pos:start="235:17" pos:end="235:53"><operator pos:start="235:17" pos:end="235:17">!</operator><operator pos:start="235:18" pos:end="235:18">(</operator><name pos:start="235:19" pos:end="235:21">pde</name> <operator pos:start="235:23" pos:end="235:23">&amp;</operator> <name pos:start="235:25" pos:end="235:40">PG_ACCESSED_MASK</name><operator pos:start="235:41" pos:end="235:41">)</operator> <operator pos:start="235:43" pos:end="235:44">||</operator> <name pos:start="235:46" pos:end="235:53">is_dirty</name></expr>)</condition> <block pos:start="235:56" pos:end="245:13">{<block_content pos:start="237:17" pos:end="243:49">

                <expr_stmt pos:start="237:17" pos:end="237:40"><expr pos:start="237:17" pos:end="237:39"><name pos:start="237:17" pos:end="237:19">pde</name> <operator pos:start="237:21" pos:end="237:22">|=</operator> <name pos:start="237:24" pos:end="237:39">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

                <if_stmt pos:start="239:17" pos:end="241:41"><if pos:start="239:17" pos:end="241:41">if <condition pos:start="239:20" pos:end="239:29">(<expr pos:start="239:21" pos:end="239:28"><name pos:start="239:21" pos:end="239:28">is_dirty</name></expr>)</condition><block type="pseudo" pos:start="241:21" pos:end="241:41"><block_content pos:start="241:21" pos:end="241:41">

                    <expr_stmt pos:start="241:21" pos:end="241:41"><expr pos:start="241:21" pos:end="241:40"><name pos:start="241:21" pos:end="241:23">pde</name> <operator pos:start="241:25" pos:end="241:26">|=</operator> <name pos:start="241:28" pos:end="241:40">PG_DIRTY_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="243:17" pos:end="243:49"><expr pos:start="243:17" pos:end="243:48"><call pos:start="243:17" pos:end="243:48"><name pos:start="243:17" pos:end="243:33">stl_phys_notdirty</name><argument_list pos:start="243:34" pos:end="243:48">(<argument pos:start="243:35" pos:end="243:42"><expr pos:start="243:35" pos:end="243:42"><name pos:start="243:35" pos:end="243:42">pde_addr</name></expr></argument>, <argument pos:start="243:45" pos:end="243:47"><expr pos:start="243:45" pos:end="243:47"><name pos:start="243:45" pos:end="243:47">pde</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="247:13" pos:end="247:36">/* align to page_size */</comment>

            <expr_stmt pos:start="249:13" pos:end="249:70"><expr pos:start="249:13" pos:end="249:69"><name pos:start="249:13" pos:end="249:15">pte</name> <operator pos:start="249:17" pos:end="249:17">=</operator> <name pos:start="249:19" pos:end="249:21">pde</name> <operator pos:start="249:23" pos:end="249:23">&amp;</operator> <operator pos:start="249:25" pos:end="249:25">(</operator><operator pos:start="249:26" pos:end="249:26">(</operator><name pos:start="249:27" pos:end="249:40">PHYS_ADDR_MASK</name> <operator pos:start="249:42" pos:end="249:42">&amp;</operator> <operator pos:start="249:44" pos:end="249:44">~</operator><operator pos:start="249:45" pos:end="249:45">(</operator><name pos:start="249:46" pos:end="249:54">page_size</name> <operator pos:start="249:56" pos:end="249:56">-</operator> <literal type="number" pos:start="249:58" pos:end="249:58">1</literal><operator pos:start="249:59" pos:end="249:59">)</operator><operator pos:start="249:60" pos:end="249:60">)</operator> <operator pos:start="249:62" pos:end="249:62">|</operator> <literal type="number" pos:start="249:64" pos:end="249:68">0xfff</literal><operator pos:start="249:69" pos:end="249:69">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:48"><expr pos:start="251:13" pos:end="251:47"><name pos:start="251:13" pos:end="251:21">virt_addr</name> <operator pos:start="251:23" pos:end="251:23">=</operator> <name pos:start="251:25" pos:end="251:28">addr</name> <operator pos:start="251:30" pos:end="251:30">&amp;</operator> <operator pos:start="251:32" pos:end="251:32">~</operator><operator pos:start="251:33" pos:end="251:33">(</operator><name pos:start="251:34" pos:end="251:42">page_size</name> <operator pos:start="251:44" pos:end="251:44">-</operator> <literal type="number" pos:start="251:46" pos:end="251:46">1</literal><operator pos:start="251:47" pos:end="251:47">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="253:11" pos:end="337:9">else <block pos:start="253:16" pos:end="337:9">{<block_content pos:start="257:13" pos:end="335:49">

            <comment type="block" pos:start="255:13" pos:end="255:27">/* 4 KB page */</comment>

            <if_stmt pos:start="257:13" pos:end="263:13"><if pos:start="257:13" pos:end="263:13">if <condition pos:start="257:16" pos:end="257:42">(<expr pos:start="257:17" pos:end="257:41"><operator pos:start="257:17" pos:end="257:17">!</operator><operator pos:start="257:18" pos:end="257:18">(</operator><name pos:start="257:19" pos:end="257:21">pde</name> <operator pos:start="257:23" pos:end="257:23">&amp;</operator> <name pos:start="257:25" pos:end="257:40">PG_ACCESSED_MASK</name><operator pos:start="257:41" pos:end="257:41">)</operator></expr>)</condition> <block pos:start="257:44" pos:end="263:13">{<block_content pos:start="259:17" pos:end="261:49">

                <expr_stmt pos:start="259:17" pos:end="259:40"><expr pos:start="259:17" pos:end="259:39"><name pos:start="259:17" pos:end="259:19">pde</name> <operator pos:start="259:21" pos:end="259:22">|=</operator> <name pos:start="259:24" pos:end="259:39">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

                <expr_stmt pos:start="261:17" pos:end="261:49"><expr pos:start="261:17" pos:end="261:48"><call pos:start="261:17" pos:end="261:48"><name pos:start="261:17" pos:end="261:33">stl_phys_notdirty</name><argument_list pos:start="261:34" pos:end="261:48">(<argument pos:start="261:35" pos:end="261:42"><expr pos:start="261:35" pos:end="261:42"><name pos:start="261:35" pos:end="261:42">pde_addr</name></expr></argument>, <argument pos:start="261:45" pos:end="261:47"><expr pos:start="261:45" pos:end="261:47"><name pos:start="261:45" pos:end="261:47">pde</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="265:13" pos:end="267:30"><expr pos:start="265:13" pos:end="267:29"><name pos:start="265:13" pos:end="265:20">pte_addr</name> <operator pos:start="265:22" pos:end="265:22">=</operator> <operator pos:start="265:24" pos:end="265:24">(</operator><operator pos:start="265:25" pos:end="265:25">(</operator><name pos:start="265:26" pos:end="265:28">pde</name> <operator pos:start="265:30" pos:end="265:30">&amp;</operator> <name pos:start="265:32" pos:end="265:45">PHYS_ADDR_MASK</name><operator pos:start="265:46" pos:end="265:46">)</operator> <operator pos:start="265:48" pos:end="265:48">+</operator> <operator pos:start="265:50" pos:end="265:50">(</operator><operator pos:start="265:51" pos:end="265:51">(</operator><operator pos:start="265:52" pos:end="265:52">(</operator><name pos:start="265:53" pos:end="265:56">addr</name> <operator pos:start="265:58" pos:end="265:59">&gt;&gt;</operator> <literal type="number" pos:start="265:61" pos:end="265:62">12</literal><operator pos:start="265:63" pos:end="265:63">)</operator> <operator pos:start="265:65" pos:end="265:65">&amp;</operator> <literal type="number" pos:start="265:67" pos:end="265:71">0x1ff</literal><operator pos:start="265:72" pos:end="265:72">)</operator> <operator pos:start="265:74" pos:end="265:75">&lt;&lt;</operator> <literal type="number" pos:start="265:77" pos:end="265:77">3</literal><operator pos:start="265:78" pos:end="265:78">)</operator><operator pos:start="265:79" pos:end="265:79">)</operator> <operator pos:start="265:81" pos:end="265:81">&amp;</operator>

                <name pos:start="267:17" pos:end="267:29"><name pos:start="267:17" pos:end="267:19">env</name><operator pos:start="267:20" pos:end="267:21">-&gt;</operator><name pos:start="267:22" pos:end="267:29">a20_mask</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:37"><expr pos:start="269:13" pos:end="269:36"><name pos:start="269:13" pos:end="269:15">pte</name> <operator pos:start="269:17" pos:end="269:17">=</operator> <call pos:start="269:19" pos:end="269:36"><name pos:start="269:19" pos:end="269:26">ldq_phys</name><argument_list pos:start="269:27" pos:end="269:36">(<argument pos:start="269:28" pos:end="269:35"><expr pos:start="269:28" pos:end="269:35"><name pos:start="269:28" pos:end="269:35">pte_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="271:13" pos:end="277:13"><if pos:start="271:13" pos:end="277:13">if <condition pos:start="271:16" pos:end="271:41">(<expr pos:start="271:17" pos:end="271:40"><operator pos:start="271:17" pos:end="271:17">!</operator><operator pos:start="271:18" pos:end="271:18">(</operator><name pos:start="271:19" pos:end="271:21">pte</name> <operator pos:start="271:23" pos:end="271:23">&amp;</operator> <name pos:start="271:25" pos:end="271:39">PG_PRESENT_MASK</name><operator pos:start="271:40" pos:end="271:40">)</operator></expr>)</condition> <block pos:start="271:43" pos:end="277:13">{<block_content pos:start="273:17" pos:end="275:30">

                <expr_stmt pos:start="273:17" pos:end="273:31"><expr pos:start="273:17" pos:end="273:30"><name pos:start="273:17" pos:end="273:26">error_code</name> <operator pos:start="273:28" pos:end="273:28">=</operator> <literal type="number" pos:start="273:30" pos:end="273:30">0</literal></expr>;</expr_stmt>

                <goto pos:start="275:17" pos:end="275:30">goto <name pos:start="275:22" pos:end="275:29">do_fault</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="279:13" pos:end="285:13"><if pos:start="279:13" pos:end="285:13">if <condition pos:start="279:16" pos:end="279:66">(<expr pos:start="279:17" pos:end="279:65"><operator pos:start="279:17" pos:end="279:17">!</operator><operator pos:start="279:18" pos:end="279:18">(</operator><name pos:start="279:19" pos:end="279:27"><name pos:start="279:19" pos:end="279:21">env</name><operator pos:start="279:22" pos:end="279:23">-&gt;</operator><name pos:start="279:24" pos:end="279:27">efer</name></name> <operator pos:start="279:29" pos:end="279:29">&amp;</operator> <name pos:start="279:31" pos:end="279:42">MSR_EFER_NXE</name><operator pos:start="279:43" pos:end="279:43">)</operator> <operator pos:start="279:45" pos:end="279:46">&amp;&amp;</operator> <operator pos:start="279:48" pos:end="279:48">(</operator><name pos:start="279:49" pos:end="279:51">pte</name> <operator pos:start="279:53" pos:end="279:53">&amp;</operator> <name pos:start="279:55" pos:end="279:64">PG_NX_MASK</name><operator pos:start="279:65" pos:end="279:65">)</operator></expr>)</condition> <block pos:start="279:68" pos:end="285:13">{<block_content pos:start="281:17" pos:end="283:30">

                <expr_stmt pos:start="281:17" pos:end="281:48"><expr pos:start="281:17" pos:end="281:47"><name pos:start="281:17" pos:end="281:26">error_code</name> <operator pos:start="281:28" pos:end="281:28">=</operator> <name pos:start="281:30" pos:end="281:47">PG_ERROR_RSVD_MASK</name></expr>;</expr_stmt>

                <goto pos:start="283:17" pos:end="283:30">goto <name pos:start="283:22" pos:end="283:29">do_fault</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="287:13" pos:end="287:65">/* combine pde and pte nx, user and rw protections */</comment>

            <expr_stmt pos:start="289:13" pos:end="289:37"><expr pos:start="289:13" pos:end="289:36"><name pos:start="289:13" pos:end="289:16">ptep</name> <operator pos:start="289:18" pos:end="289:19">&amp;=</operator> <name pos:start="289:21" pos:end="289:23">pte</name> <operator pos:start="289:25" pos:end="289:25">^</operator> <name pos:start="289:27" pos:end="289:36">PG_NX_MASK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:31"><expr pos:start="291:13" pos:end="291:30"><name pos:start="291:13" pos:end="291:16">ptep</name> <operator pos:start="291:18" pos:end="291:19">^=</operator> <name pos:start="291:21" pos:end="291:30">PG_NX_MASK</name></expr>;</expr_stmt>

            <if_stmt pos:start="293:13" pos:end="295:38"><if pos:start="293:13" pos:end="295:38">if <condition pos:start="293:16" pos:end="293:54">(<expr pos:start="293:17" pos:end="293:53"><operator pos:start="293:17" pos:end="293:17">(</operator><name pos:start="293:18" pos:end="293:21">ptep</name> <operator pos:start="293:23" pos:end="293:23">&amp;</operator> <name pos:start="293:25" pos:end="293:34">PG_NX_MASK</name><operator pos:start="293:35" pos:end="293:35">)</operator> <operator pos:start="293:37" pos:end="293:38">&amp;&amp;</operator> <name pos:start="293:40" pos:end="293:48">is_write1</name> <operator pos:start="293:50" pos:end="293:51">==</operator> <literal type="number" pos:start="293:53" pos:end="293:53">2</literal></expr>)</condition><block type="pseudo" pos:start="295:17" pos:end="295:38"><block_content pos:start="295:17" pos:end="295:38">

                <goto pos:start="295:17" pos:end="295:38">goto <name pos:start="295:22" pos:end="295:37">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="297:13" pos:end="315:13"><if pos:start="297:13" pos:end="307:13">if <condition pos:start="297:16" pos:end="297:24">(<expr pos:start="297:17" pos:end="297:23"><name pos:start="297:17" pos:end="297:23">is_user</name></expr>)</condition> <block pos:start="297:26" pos:end="307:13">{<block_content pos:start="299:17" pos:end="305:42">

                <if_stmt pos:start="299:17" pos:end="301:42"><if pos:start="299:17" pos:end="301:42">if <condition pos:start="299:20" pos:end="299:43">(<expr pos:start="299:21" pos:end="299:42"><operator pos:start="299:21" pos:end="299:21">!</operator><operator pos:start="299:22" pos:end="299:22">(</operator><name pos:start="299:23" pos:end="299:26">ptep</name> <operator pos:start="299:28" pos:end="299:28">&amp;</operator> <name pos:start="299:30" pos:end="299:41">PG_USER_MASK</name><operator pos:start="299:42" pos:end="299:42">)</operator></expr>)</condition><block type="pseudo" pos:start="301:21" pos:end="301:42"><block_content pos:start="301:21" pos:end="301:42">

                    <goto pos:start="301:21" pos:end="301:42">goto <name pos:start="301:26" pos:end="301:41">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

                <if_stmt pos:start="303:17" pos:end="305:42"><if pos:start="303:17" pos:end="305:42">if <condition pos:start="303:20" pos:end="303:53">(<expr pos:start="303:21" pos:end="303:52"><name pos:start="303:21" pos:end="303:28">is_write</name> <operator pos:start="303:30" pos:end="303:31">&amp;&amp;</operator> <operator pos:start="303:33" pos:end="303:33">!</operator><operator pos:start="303:34" pos:end="303:34">(</operator><name pos:start="303:35" pos:end="303:38">ptep</name> <operator pos:start="303:40" pos:end="303:40">&amp;</operator> <name pos:start="303:42" pos:end="303:51">PG_RW_MASK</name><operator pos:start="303:52" pos:end="303:52">)</operator></expr>)</condition><block type="pseudo" pos:start="305:21" pos:end="305:42"><block_content pos:start="305:21" pos:end="305:42">

                    <goto pos:start="305:21" pos:end="305:42">goto <name pos:start="305:26" pos:end="305:41">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="307:15" pos:end="315:13">else <block pos:start="307:20" pos:end="315:13">{<block_content pos:start="309:17" pos:end="313:42">

                <if_stmt pos:start="309:17" pos:end="313:42"><if pos:start="309:17" pos:end="313:42">if <condition pos:start="309:20" pos:end="311:53">(<expr pos:start="309:21" pos:end="311:52"><operator pos:start="309:21" pos:end="309:21">(</operator><name pos:start="309:22" pos:end="309:31"><name pos:start="309:22" pos:end="309:24">env</name><operator pos:start="309:25" pos:end="309:26">-&gt;</operator><name pos:start="309:27" pos:end="309:28">cr</name><index pos:start="309:29" pos:end="309:31">[<expr pos:start="309:30" pos:end="309:30"><literal type="number" pos:start="309:30" pos:end="309:30">0</literal></expr>]</index></name> <operator pos:start="309:33" pos:end="309:33">&amp;</operator> <name pos:start="309:35" pos:end="309:45">CR0_WP_MASK</name><operator pos:start="309:46" pos:end="309:46">)</operator> <operator pos:start="309:48" pos:end="309:49">&amp;&amp;</operator>

                    <name pos:start="311:21" pos:end="311:28">is_write</name> <operator pos:start="311:30" pos:end="311:31">&amp;&amp;</operator> <operator pos:start="311:33" pos:end="311:33">!</operator><operator pos:start="311:34" pos:end="311:34">(</operator><name pos:start="311:35" pos:end="311:38">ptep</name> <operator pos:start="311:40" pos:end="311:40">&amp;</operator> <name pos:start="311:42" pos:end="311:51">PG_RW_MASK</name><operator pos:start="311:52" pos:end="311:52">)</operator></expr>)</condition><block type="pseudo" pos:start="313:21" pos:end="313:42"><block_content pos:start="313:21" pos:end="313:42">

                    <goto pos:start="313:21" pos:end="313:42">goto <name pos:start="313:26" pos:end="313:41">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="317:13" pos:end="317:58"><expr pos:start="317:13" pos:end="317:57"><name pos:start="317:13" pos:end="317:20">is_dirty</name> <operator pos:start="317:22" pos:end="317:22">=</operator> <name pos:start="317:24" pos:end="317:31">is_write</name> <operator pos:start="317:33" pos:end="317:34">&amp;&amp;</operator> <operator pos:start="317:36" pos:end="317:36">!</operator><operator pos:start="317:37" pos:end="317:37">(</operator><name pos:start="317:38" pos:end="317:40">pte</name> <operator pos:start="317:42" pos:end="317:42">&amp;</operator> <name pos:start="317:44" pos:end="317:56">PG_DIRTY_MASK</name><operator pos:start="317:57" pos:end="317:57">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="319:13" pos:end="329:13"><if pos:start="319:13" pos:end="329:13">if <condition pos:start="319:16" pos:end="319:54">(<expr pos:start="319:17" pos:end="319:53"><operator pos:start="319:17" pos:end="319:17">!</operator><operator pos:start="319:18" pos:end="319:18">(</operator><name pos:start="319:19" pos:end="319:21">pte</name> <operator pos:start="319:23" pos:end="319:23">&amp;</operator> <name pos:start="319:25" pos:end="319:40">PG_ACCESSED_MASK</name><operator pos:start="319:41" pos:end="319:41">)</operator> <operator pos:start="319:43" pos:end="319:44">||</operator> <name pos:start="319:46" pos:end="319:53">is_dirty</name></expr>)</condition> <block pos:start="319:56" pos:end="329:13">{<block_content pos:start="321:17" pos:end="327:49">

                <expr_stmt pos:start="321:17" pos:end="321:40"><expr pos:start="321:17" pos:end="321:39"><name pos:start="321:17" pos:end="321:19">pte</name> <operator pos:start="321:21" pos:end="321:22">|=</operator> <name pos:start="321:24" pos:end="321:39">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

                <if_stmt pos:start="323:17" pos:end="325:41"><if pos:start="323:17" pos:end="325:41">if <condition pos:start="323:20" pos:end="323:29">(<expr pos:start="323:21" pos:end="323:28"><name pos:start="323:21" pos:end="323:28">is_dirty</name></expr>)</condition><block type="pseudo" pos:start="325:21" pos:end="325:41"><block_content pos:start="325:21" pos:end="325:41">

                    <expr_stmt pos:start="325:21" pos:end="325:41"><expr pos:start="325:21" pos:end="325:40"><name pos:start="325:21" pos:end="325:23">pte</name> <operator pos:start="325:25" pos:end="325:26">|=</operator> <name pos:start="325:28" pos:end="325:40">PG_DIRTY_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="327:17" pos:end="327:49"><expr pos:start="327:17" pos:end="327:48"><call pos:start="327:17" pos:end="327:48"><name pos:start="327:17" pos:end="327:33">stl_phys_notdirty</name><argument_list pos:start="327:34" pos:end="327:48">(<argument pos:start="327:35" pos:end="327:42"><expr pos:start="327:35" pos:end="327:42"><name pos:start="327:35" pos:end="327:42">pte_addr</name></expr></argument>, <argument pos:start="327:45" pos:end="327:47"><expr pos:start="327:45" pos:end="327:47"><name pos:start="327:45" pos:end="327:47">pte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:29"><expr pos:start="331:13" pos:end="331:28"><name pos:start="331:13" pos:end="331:21">page_size</name> <operator pos:start="331:23" pos:end="331:23">=</operator> <literal type="number" pos:start="331:25" pos:end="331:28">4096</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:38"><expr pos:start="333:13" pos:end="333:37"><name pos:start="333:13" pos:end="333:21">virt_addr</name> <operator pos:start="333:23" pos:end="333:23">=</operator> <name pos:start="333:25" pos:end="333:28">addr</name> <operator pos:start="333:30" pos:end="333:30">&amp;</operator> <operator pos:start="333:32" pos:end="333:32">~</operator><literal type="number" pos:start="333:33" pos:end="333:37">0xfff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="335:13" pos:end="335:49"><expr pos:start="335:13" pos:end="335:48"><name pos:start="335:13" pos:end="335:15">pte</name> <operator pos:start="335:17" pos:end="335:17">=</operator> <name pos:start="335:19" pos:end="335:21">pte</name> <operator pos:start="335:23" pos:end="335:23">&amp;</operator> <operator pos:start="335:25" pos:end="335:25">(</operator><name pos:start="335:26" pos:end="335:39">PHYS_ADDR_MASK</name> <operator pos:start="335:41" pos:end="335:41">|</operator> <literal type="number" pos:start="335:43" pos:end="335:47">0xfff</literal><operator pos:start="335:48" pos:end="335:48">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="339:7" pos:end="481:5">else <block pos:start="339:12" pos:end="481:5">{<block_content pos:start="341:9" pos:end="479:9">

        <decl_stmt pos:start="341:9" pos:end="341:21"><decl pos:start="341:9" pos:end="341:20"><type pos:start="341:9" pos:end="341:16"><name pos:start="341:9" pos:end="341:16">uint32_t</name></type> <name pos:start="341:18" pos:end="341:20">pde</name></decl>;</decl_stmt>



        <comment type="block" pos:start="345:9" pos:end="345:34">/* page directory entry */</comment>

        <expr_stmt pos:start="347:9" pos:end="349:26"><expr pos:start="347:9" pos:end="349:25"><name pos:start="347:9" pos:end="347:16">pde_addr</name> <operator pos:start="347:18" pos:end="347:18">=</operator> <operator pos:start="347:20" pos:end="347:20">(</operator><operator pos:start="347:21" pos:end="347:21">(</operator><name pos:start="347:22" pos:end="347:31"><name pos:start="347:22" pos:end="347:24">env</name><operator pos:start="347:25" pos:end="347:26">-&gt;</operator><name pos:start="347:27" pos:end="347:28">cr</name><index pos:start="347:29" pos:end="347:31">[<expr pos:start="347:30" pos:end="347:30"><literal type="number" pos:start="347:30" pos:end="347:30">3</literal></expr>]</index></name> <operator pos:start="347:33" pos:end="347:33">&amp;</operator> <operator pos:start="347:35" pos:end="347:35">~</operator><literal type="number" pos:start="347:36" pos:end="347:40">0xfff</literal><operator pos:start="347:41" pos:end="347:41">)</operator> <operator pos:start="347:43" pos:end="347:43">+</operator> <operator pos:start="347:45" pos:end="347:45">(</operator><operator pos:start="347:46" pos:end="347:46">(</operator><name pos:start="347:47" pos:end="347:50">addr</name> <operator pos:start="347:52" pos:end="347:53">&gt;&gt;</operator> <literal type="number" pos:start="347:55" pos:end="347:56">20</literal><operator pos:start="347:57" pos:end="347:57">)</operator> <operator pos:start="347:59" pos:end="347:59">&amp;</operator> <literal type="number" pos:start="347:61" pos:end="347:65">0xffc</literal><operator pos:start="347:66" pos:end="347:66">)</operator><operator pos:start="347:67" pos:end="347:67">)</operator> <operator pos:start="347:69" pos:end="347:69">&amp;</operator>

            <name pos:start="349:13" pos:end="349:25"><name pos:start="349:13" pos:end="349:15">env</name><operator pos:start="349:16" pos:end="349:17">-&gt;</operator><name pos:start="349:18" pos:end="349:25">a20_mask</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:33"><expr pos:start="351:9" pos:end="351:32"><name pos:start="351:9" pos:end="351:11">pde</name> <operator pos:start="351:13" pos:end="351:13">=</operator> <call pos:start="351:15" pos:end="351:32"><name pos:start="351:15" pos:end="351:22">ldl_phys</name><argument_list pos:start="351:23" pos:end="351:32">(<argument pos:start="351:24" pos:end="351:31"><expr pos:start="351:24" pos:end="351:31"><name pos:start="351:24" pos:end="351:31">pde_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="353:9" pos:end="359:9"><if pos:start="353:9" pos:end="359:9">if <condition pos:start="353:12" pos:end="353:37">(<expr pos:start="353:13" pos:end="353:36"><operator pos:start="353:13" pos:end="353:13">!</operator><operator pos:start="353:14" pos:end="353:14">(</operator><name pos:start="353:15" pos:end="353:17">pde</name> <operator pos:start="353:19" pos:end="353:19">&amp;</operator> <name pos:start="353:21" pos:end="353:35">PG_PRESENT_MASK</name><operator pos:start="353:36" pos:end="353:36">)</operator></expr>)</condition> <block pos:start="353:39" pos:end="359:9">{<block_content pos:start="355:13" pos:end="357:26">

            <expr_stmt pos:start="355:13" pos:end="355:27"><expr pos:start="355:13" pos:end="355:26"><name pos:start="355:13" pos:end="355:22">error_code</name> <operator pos:start="355:24" pos:end="355:24">=</operator> <literal type="number" pos:start="355:26" pos:end="355:26">0</literal></expr>;</expr_stmt>

            <goto pos:start="357:13" pos:end="357:26">goto <name pos:start="357:18" pos:end="357:25">do_fault</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="361:9" pos:end="361:55">/* if PSE bit is set, then we use a 4MB page */</comment>

        <if_stmt pos:start="363:9" pos:end="479:9"><if pos:start="363:9" pos:end="409:9">if <condition pos:start="363:12" pos:end="363:63">(<expr pos:start="363:13" pos:end="363:62"><operator pos:start="363:13" pos:end="363:13">(</operator><name pos:start="363:14" pos:end="363:16">pde</name> <operator pos:start="363:18" pos:end="363:18">&amp;</operator> <name pos:start="363:20" pos:end="363:30">PG_PSE_MASK</name><operator pos:start="363:31" pos:end="363:31">)</operator> <operator pos:start="363:33" pos:end="363:34">&amp;&amp;</operator> <operator pos:start="363:36" pos:end="363:36">(</operator><name pos:start="363:37" pos:end="363:46"><name pos:start="363:37" pos:end="363:39">env</name><operator pos:start="363:40" pos:end="363:41">-&gt;</operator><name pos:start="363:42" pos:end="363:43">cr</name><index pos:start="363:44" pos:end="363:46">[<expr pos:start="363:45" pos:end="363:45"><literal type="number" pos:start="363:45" pos:end="363:45">4</literal></expr>]</index></name> <operator pos:start="363:48" pos:end="363:48">&amp;</operator> <name pos:start="363:50" pos:end="363:61">CR4_PSE_MASK</name><operator pos:start="363:62" pos:end="363:62">)</operator></expr>)</condition> <block pos:start="363:65" pos:end="409:9">{<block_content pos:start="365:13" pos:end="407:48">

            <expr_stmt pos:start="365:13" pos:end="365:36"><expr pos:start="365:13" pos:end="365:35"><name pos:start="365:13" pos:end="365:21">page_size</name> <operator pos:start="365:23" pos:end="365:23">=</operator> <literal type="number" pos:start="365:25" pos:end="365:28">4096</literal> <operator pos:start="365:30" pos:end="365:30">*</operator> <literal type="number" pos:start="365:32" pos:end="365:35">1024</literal></expr>;</expr_stmt>

            <if_stmt pos:start="367:13" pos:end="385:13"><if pos:start="367:13" pos:end="377:13">if <condition pos:start="367:16" pos:end="367:24">(<expr pos:start="367:17" pos:end="367:23"><name pos:start="367:17" pos:end="367:23">is_user</name></expr>)</condition> <block pos:start="367:26" pos:end="377:13">{<block_content pos:start="369:17" pos:end="375:42">

                <if_stmt pos:start="369:17" pos:end="371:42"><if pos:start="369:17" pos:end="371:42">if <condition pos:start="369:20" pos:end="369:42">(<expr pos:start="369:21" pos:end="369:41"><operator pos:start="369:21" pos:end="369:21">!</operator><operator pos:start="369:22" pos:end="369:22">(</operator><name pos:start="369:23" pos:end="369:25">pde</name> <operator pos:start="369:27" pos:end="369:27">&amp;</operator> <name pos:start="369:29" pos:end="369:40">PG_USER_MASK</name><operator pos:start="369:41" pos:end="369:41">)</operator></expr>)</condition><block type="pseudo" pos:start="371:21" pos:end="371:42"><block_content pos:start="371:21" pos:end="371:42">

                    <goto pos:start="371:21" pos:end="371:42">goto <name pos:start="371:26" pos:end="371:41">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

                <if_stmt pos:start="373:17" pos:end="375:42"><if pos:start="373:17" pos:end="375:42">if <condition pos:start="373:20" pos:end="373:52">(<expr pos:start="373:21" pos:end="373:51"><name pos:start="373:21" pos:end="373:28">is_write</name> <operator pos:start="373:30" pos:end="373:31">&amp;&amp;</operator> <operator pos:start="373:33" pos:end="373:33">!</operator><operator pos:start="373:34" pos:end="373:34">(</operator><name pos:start="373:35" pos:end="373:37">pde</name> <operator pos:start="373:39" pos:end="373:39">&amp;</operator> <name pos:start="373:41" pos:end="373:50">PG_RW_MASK</name><operator pos:start="373:51" pos:end="373:51">)</operator></expr>)</condition><block type="pseudo" pos:start="375:21" pos:end="375:42"><block_content pos:start="375:21" pos:end="375:42">

                    <goto pos:start="375:21" pos:end="375:42">goto <name pos:start="375:26" pos:end="375:41">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="377:15" pos:end="385:13">else <block pos:start="377:20" pos:end="385:13">{<block_content pos:start="379:17" pos:end="383:42">

                <if_stmt pos:start="379:17" pos:end="383:42"><if pos:start="379:17" pos:end="383:42">if <condition pos:start="379:20" pos:end="381:52">(<expr pos:start="379:21" pos:end="381:51"><operator pos:start="379:21" pos:end="379:21">(</operator><name pos:start="379:22" pos:end="379:31"><name pos:start="379:22" pos:end="379:24">env</name><operator pos:start="379:25" pos:end="379:26">-&gt;</operator><name pos:start="379:27" pos:end="379:28">cr</name><index pos:start="379:29" pos:end="379:31">[<expr pos:start="379:30" pos:end="379:30"><literal type="number" pos:start="379:30" pos:end="379:30">0</literal></expr>]</index></name> <operator pos:start="379:33" pos:end="379:33">&amp;</operator> <name pos:start="379:35" pos:end="379:45">CR0_WP_MASK</name><operator pos:start="379:46" pos:end="379:46">)</operator> <operator pos:start="379:48" pos:end="379:49">&amp;&amp;</operator>

                    <name pos:start="381:21" pos:end="381:28">is_write</name> <operator pos:start="381:30" pos:end="381:31">&amp;&amp;</operator> <operator pos:start="381:33" pos:end="381:33">!</operator><operator pos:start="381:34" pos:end="381:34">(</operator><name pos:start="381:35" pos:end="381:37">pde</name> <operator pos:start="381:39" pos:end="381:39">&amp;</operator> <name pos:start="381:41" pos:end="381:50">PG_RW_MASK</name><operator pos:start="381:51" pos:end="381:51">)</operator></expr>)</condition><block type="pseudo" pos:start="383:21" pos:end="383:42"><block_content pos:start="383:21" pos:end="383:42">

                    <goto pos:start="383:21" pos:end="383:42">goto <name pos:start="383:26" pos:end="383:41">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="387:13" pos:end="387:58"><expr pos:start="387:13" pos:end="387:57"><name pos:start="387:13" pos:end="387:20">is_dirty</name> <operator pos:start="387:22" pos:end="387:22">=</operator> <name pos:start="387:24" pos:end="387:31">is_write</name> <operator pos:start="387:33" pos:end="387:34">&amp;&amp;</operator> <operator pos:start="387:36" pos:end="387:36">!</operator><operator pos:start="387:37" pos:end="387:37">(</operator><name pos:start="387:38" pos:end="387:40">pde</name> <operator pos:start="387:42" pos:end="387:42">&amp;</operator> <name pos:start="387:44" pos:end="387:56">PG_DIRTY_MASK</name><operator pos:start="387:57" pos:end="387:57">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="389:13" pos:end="399:13"><if pos:start="389:13" pos:end="399:13">if <condition pos:start="389:16" pos:end="389:54">(<expr pos:start="389:17" pos:end="389:53"><operator pos:start="389:17" pos:end="389:17">!</operator><operator pos:start="389:18" pos:end="389:18">(</operator><name pos:start="389:19" pos:end="389:21">pde</name> <operator pos:start="389:23" pos:end="389:23">&amp;</operator> <name pos:start="389:25" pos:end="389:40">PG_ACCESSED_MASK</name><operator pos:start="389:41" pos:end="389:41">)</operator> <operator pos:start="389:43" pos:end="389:44">||</operator> <name pos:start="389:46" pos:end="389:53">is_dirty</name></expr>)</condition> <block pos:start="389:56" pos:end="399:13">{<block_content pos:start="391:17" pos:end="397:49">

                <expr_stmt pos:start="391:17" pos:end="391:40"><expr pos:start="391:17" pos:end="391:39"><name pos:start="391:17" pos:end="391:19">pde</name> <operator pos:start="391:21" pos:end="391:22">|=</operator> <name pos:start="391:24" pos:end="391:39">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

                <if_stmt pos:start="393:17" pos:end="395:41"><if pos:start="393:17" pos:end="395:41">if <condition pos:start="393:20" pos:end="393:29">(<expr pos:start="393:21" pos:end="393:28"><name pos:start="393:21" pos:end="393:28">is_dirty</name></expr>)</condition><block type="pseudo" pos:start="395:21" pos:end="395:41"><block_content pos:start="395:21" pos:end="395:41">

                    <expr_stmt pos:start="395:21" pos:end="395:41"><expr pos:start="395:21" pos:end="395:40"><name pos:start="395:21" pos:end="395:23">pde</name> <operator pos:start="395:25" pos:end="395:26">|=</operator> <name pos:start="395:28" pos:end="395:40">PG_DIRTY_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="397:17" pos:end="397:49"><expr pos:start="397:17" pos:end="397:48"><call pos:start="397:17" pos:end="397:48"><name pos:start="397:17" pos:end="397:33">stl_phys_notdirty</name><argument_list pos:start="397:34" pos:end="397:48">(<argument pos:start="397:35" pos:end="397:42"><expr pos:start="397:35" pos:end="397:42"><name pos:start="397:35" pos:end="397:42">pde_addr</name></expr></argument>, <argument pos:start="397:45" pos:end="397:47"><expr pos:start="397:45" pos:end="397:47"><name pos:start="397:45" pos:end="397:47">pde</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="403:13" pos:end="403:53"><expr pos:start="403:13" pos:end="403:52"><name pos:start="403:13" pos:end="403:15">pte</name> <operator pos:start="403:17" pos:end="403:17">=</operator> <name pos:start="403:19" pos:end="403:21">pde</name> <operator pos:start="403:23" pos:end="403:23">&amp;</operator> <operator pos:start="403:25" pos:end="403:25">~</operator><operator pos:start="403:26" pos:end="403:26">(</operator> <operator pos:start="403:28" pos:end="403:28">(</operator><name pos:start="403:29" pos:end="403:37">page_size</name> <operator pos:start="403:39" pos:end="403:39">-</operator> <literal type="number" pos:start="403:41" pos:end="403:41">1</literal><operator pos:start="403:42" pos:end="403:42">)</operator> <operator pos:start="403:44" pos:end="403:44">&amp;</operator> <operator pos:start="403:46" pos:end="403:46">~</operator><literal type="number" pos:start="403:47" pos:end="403:51">0xfff</literal><operator pos:start="403:52" pos:end="403:52">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="403:55" pos:end="403:78">/* align to page_size */</comment>

            <expr_stmt pos:start="405:13" pos:end="405:23"><expr pos:start="405:13" pos:end="405:22"><name pos:start="405:13" pos:end="405:16">ptep</name> <operator pos:start="405:18" pos:end="405:18">=</operator> <name pos:start="405:20" pos:end="405:22">pte</name></expr>;</expr_stmt>

            <expr_stmt pos:start="407:13" pos:end="407:48"><expr pos:start="407:13" pos:end="407:47"><name pos:start="407:13" pos:end="407:21">virt_addr</name> <operator pos:start="407:23" pos:end="407:23">=</operator> <name pos:start="407:25" pos:end="407:28">addr</name> <operator pos:start="407:30" pos:end="407:30">&amp;</operator> <operator pos:start="407:32" pos:end="407:32">~</operator><operator pos:start="407:33" pos:end="407:33">(</operator><name pos:start="407:34" pos:end="407:42">page_size</name> <operator pos:start="407:44" pos:end="407:44">-</operator> <literal type="number" pos:start="407:46" pos:end="407:46">1</literal><operator pos:start="407:47" pos:end="407:47">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="409:11" pos:end="479:9">else <block pos:start="409:16" pos:end="479:9">{<block_content pos:start="411:13" pos:end="477:38">

            <if_stmt pos:start="411:13" pos:end="417:13"><if pos:start="411:13" pos:end="417:13">if <condition pos:start="411:16" pos:end="411:42">(<expr pos:start="411:17" pos:end="411:41"><operator pos:start="411:17" pos:end="411:17">!</operator><operator pos:start="411:18" pos:end="411:18">(</operator><name pos:start="411:19" pos:end="411:21">pde</name> <operator pos:start="411:23" pos:end="411:23">&amp;</operator> <name pos:start="411:25" pos:end="411:40">PG_ACCESSED_MASK</name><operator pos:start="411:41" pos:end="411:41">)</operator></expr>)</condition> <block pos:start="411:44" pos:end="417:13">{<block_content pos:start="413:17" pos:end="415:49">

                <expr_stmt pos:start="413:17" pos:end="413:40"><expr pos:start="413:17" pos:end="413:39"><name pos:start="413:17" pos:end="413:19">pde</name> <operator pos:start="413:21" pos:end="413:22">|=</operator> <name pos:start="413:24" pos:end="413:39">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

                <expr_stmt pos:start="415:17" pos:end="415:49"><expr pos:start="415:17" pos:end="415:48"><call pos:start="415:17" pos:end="415:48"><name pos:start="415:17" pos:end="415:33">stl_phys_notdirty</name><argument_list pos:start="415:34" pos:end="415:48">(<argument pos:start="415:35" pos:end="415:42"><expr pos:start="415:35" pos:end="415:42"><name pos:start="415:35" pos:end="415:42">pde_addr</name></expr></argument>, <argument pos:start="415:45" pos:end="415:47"><expr pos:start="415:45" pos:end="415:47"><name pos:start="415:45" pos:end="415:47">pde</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="421:13" pos:end="421:38">/* page directory entry */</comment>

            <expr_stmt pos:start="423:13" pos:end="425:30"><expr pos:start="423:13" pos:end="425:29"><name pos:start="423:13" pos:end="423:20">pte_addr</name> <operator pos:start="423:22" pos:end="423:22">=</operator> <operator pos:start="423:24" pos:end="423:24">(</operator><operator pos:start="423:25" pos:end="423:25">(</operator><name pos:start="423:26" pos:end="423:28">pde</name> <operator pos:start="423:30" pos:end="423:30">&amp;</operator> <operator pos:start="423:32" pos:end="423:32">~</operator><literal type="number" pos:start="423:33" pos:end="423:37">0xfff</literal><operator pos:start="423:38" pos:end="423:38">)</operator> <operator pos:start="423:40" pos:end="423:40">+</operator> <operator pos:start="423:42" pos:end="423:42">(</operator><operator pos:start="423:43" pos:end="423:43">(</operator><name pos:start="423:44" pos:end="423:47">addr</name> <operator pos:start="423:49" pos:end="423:50">&gt;&gt;</operator> <literal type="number" pos:start="423:52" pos:end="423:53">10</literal><operator pos:start="423:54" pos:end="423:54">)</operator> <operator pos:start="423:56" pos:end="423:56">&amp;</operator> <literal type="number" pos:start="423:58" pos:end="423:62">0xffc</literal><operator pos:start="423:63" pos:end="423:63">)</operator><operator pos:start="423:64" pos:end="423:64">)</operator> <operator pos:start="423:66" pos:end="423:66">&amp;</operator>

                <name pos:start="425:17" pos:end="425:29"><name pos:start="425:17" pos:end="425:19">env</name><operator pos:start="425:20" pos:end="425:21">-&gt;</operator><name pos:start="425:22" pos:end="425:29">a20_mask</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:37"><expr pos:start="427:13" pos:end="427:36"><name pos:start="427:13" pos:end="427:15">pte</name> <operator pos:start="427:17" pos:end="427:17">=</operator> <call pos:start="427:19" pos:end="427:36"><name pos:start="427:19" pos:end="427:26">ldl_phys</name><argument_list pos:start="427:27" pos:end="427:36">(<argument pos:start="427:28" pos:end="427:35"><expr pos:start="427:28" pos:end="427:35"><name pos:start="427:28" pos:end="427:35">pte_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="429:13" pos:end="435:13"><if pos:start="429:13" pos:end="435:13">if <condition pos:start="429:16" pos:end="429:41">(<expr pos:start="429:17" pos:end="429:40"><operator pos:start="429:17" pos:end="429:17">!</operator><operator pos:start="429:18" pos:end="429:18">(</operator><name pos:start="429:19" pos:end="429:21">pte</name> <operator pos:start="429:23" pos:end="429:23">&amp;</operator> <name pos:start="429:25" pos:end="429:39">PG_PRESENT_MASK</name><operator pos:start="429:40" pos:end="429:40">)</operator></expr>)</condition> <block pos:start="429:43" pos:end="435:13">{<block_content pos:start="431:17" pos:end="433:30">

                <expr_stmt pos:start="431:17" pos:end="431:31"><expr pos:start="431:17" pos:end="431:30"><name pos:start="431:17" pos:end="431:26">error_code</name> <operator pos:start="431:28" pos:end="431:28">=</operator> <literal type="number" pos:start="431:30" pos:end="431:30">0</literal></expr>;</expr_stmt>

                <goto pos:start="433:17" pos:end="433:30">goto <name pos:start="433:22" pos:end="433:29">do_fault</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="437:13" pos:end="437:61">/* combine pde and pte user and rw protections */</comment>

            <expr_stmt pos:start="439:13" pos:end="439:29"><expr pos:start="439:13" pos:end="439:28"><name pos:start="439:13" pos:end="439:16">ptep</name> <operator pos:start="439:18" pos:end="439:18">=</operator> <name pos:start="439:20" pos:end="439:22">pte</name> <operator pos:start="439:24" pos:end="439:24">&amp;</operator> <name pos:start="439:26" pos:end="439:28">pde</name></expr>;</expr_stmt>

            <if_stmt pos:start="441:13" pos:end="459:13"><if pos:start="441:13" pos:end="451:13">if <condition pos:start="441:16" pos:end="441:24">(<expr pos:start="441:17" pos:end="441:23"><name pos:start="441:17" pos:end="441:23">is_user</name></expr>)</condition> <block pos:start="441:26" pos:end="451:13">{<block_content pos:start="443:17" pos:end="449:42">

                <if_stmt pos:start="443:17" pos:end="445:42"><if pos:start="443:17" pos:end="445:42">if <condition pos:start="443:20" pos:end="443:43">(<expr pos:start="443:21" pos:end="443:42"><operator pos:start="443:21" pos:end="443:21">!</operator><operator pos:start="443:22" pos:end="443:22">(</operator><name pos:start="443:23" pos:end="443:26">ptep</name> <operator pos:start="443:28" pos:end="443:28">&amp;</operator> <name pos:start="443:30" pos:end="443:41">PG_USER_MASK</name><operator pos:start="443:42" pos:end="443:42">)</operator></expr>)</condition><block type="pseudo" pos:start="445:21" pos:end="445:42"><block_content pos:start="445:21" pos:end="445:42">

                    <goto pos:start="445:21" pos:end="445:42">goto <name pos:start="445:26" pos:end="445:41">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

                <if_stmt pos:start="447:17" pos:end="449:42"><if pos:start="447:17" pos:end="449:42">if <condition pos:start="447:20" pos:end="447:53">(<expr pos:start="447:21" pos:end="447:52"><name pos:start="447:21" pos:end="447:28">is_write</name> <operator pos:start="447:30" pos:end="447:31">&amp;&amp;</operator> <operator pos:start="447:33" pos:end="447:33">!</operator><operator pos:start="447:34" pos:end="447:34">(</operator><name pos:start="447:35" pos:end="447:38">ptep</name> <operator pos:start="447:40" pos:end="447:40">&amp;</operator> <name pos:start="447:42" pos:end="447:51">PG_RW_MASK</name><operator pos:start="447:52" pos:end="447:52">)</operator></expr>)</condition><block type="pseudo" pos:start="449:21" pos:end="449:42"><block_content pos:start="449:21" pos:end="449:42">

                    <goto pos:start="449:21" pos:end="449:42">goto <name pos:start="449:26" pos:end="449:41">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="451:15" pos:end="459:13">else <block pos:start="451:20" pos:end="459:13">{<block_content pos:start="453:17" pos:end="457:42">

                <if_stmt pos:start="453:17" pos:end="457:42"><if pos:start="453:17" pos:end="457:42">if <condition pos:start="453:20" pos:end="455:53">(<expr pos:start="453:21" pos:end="455:52"><operator pos:start="453:21" pos:end="453:21">(</operator><name pos:start="453:22" pos:end="453:31"><name pos:start="453:22" pos:end="453:24">env</name><operator pos:start="453:25" pos:end="453:26">-&gt;</operator><name pos:start="453:27" pos:end="453:28">cr</name><index pos:start="453:29" pos:end="453:31">[<expr pos:start="453:30" pos:end="453:30"><literal type="number" pos:start="453:30" pos:end="453:30">0</literal></expr>]</index></name> <operator pos:start="453:33" pos:end="453:33">&amp;</operator> <name pos:start="453:35" pos:end="453:45">CR0_WP_MASK</name><operator pos:start="453:46" pos:end="453:46">)</operator> <operator pos:start="453:48" pos:end="453:49">&amp;&amp;</operator>

                    <name pos:start="455:21" pos:end="455:28">is_write</name> <operator pos:start="455:30" pos:end="455:31">&amp;&amp;</operator> <operator pos:start="455:33" pos:end="455:33">!</operator><operator pos:start="455:34" pos:end="455:34">(</operator><name pos:start="455:35" pos:end="455:38">ptep</name> <operator pos:start="455:40" pos:end="455:40">&amp;</operator> <name pos:start="455:42" pos:end="455:51">PG_RW_MASK</name><operator pos:start="455:52" pos:end="455:52">)</operator></expr>)</condition><block type="pseudo" pos:start="457:21" pos:end="457:42"><block_content pos:start="457:21" pos:end="457:42">

                    <goto pos:start="457:21" pos:end="457:42">goto <name pos:start="457:26" pos:end="457:41">do_fault_protect</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="461:13" pos:end="461:58"><expr pos:start="461:13" pos:end="461:57"><name pos:start="461:13" pos:end="461:20">is_dirty</name> <operator pos:start="461:22" pos:end="461:22">=</operator> <name pos:start="461:24" pos:end="461:31">is_write</name> <operator pos:start="461:33" pos:end="461:34">&amp;&amp;</operator> <operator pos:start="461:36" pos:end="461:36">!</operator><operator pos:start="461:37" pos:end="461:37">(</operator><name pos:start="461:38" pos:end="461:40">pte</name> <operator pos:start="461:42" pos:end="461:42">&amp;</operator> <name pos:start="461:44" pos:end="461:56">PG_DIRTY_MASK</name><operator pos:start="461:57" pos:end="461:57">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="463:13" pos:end="473:13"><if pos:start="463:13" pos:end="473:13">if <condition pos:start="463:16" pos:end="463:54">(<expr pos:start="463:17" pos:end="463:53"><operator pos:start="463:17" pos:end="463:17">!</operator><operator pos:start="463:18" pos:end="463:18">(</operator><name pos:start="463:19" pos:end="463:21">pte</name> <operator pos:start="463:23" pos:end="463:23">&amp;</operator> <name pos:start="463:25" pos:end="463:40">PG_ACCESSED_MASK</name><operator pos:start="463:41" pos:end="463:41">)</operator> <operator pos:start="463:43" pos:end="463:44">||</operator> <name pos:start="463:46" pos:end="463:53">is_dirty</name></expr>)</condition> <block pos:start="463:56" pos:end="473:13">{<block_content pos:start="465:17" pos:end="471:49">

                <expr_stmt pos:start="465:17" pos:end="465:40"><expr pos:start="465:17" pos:end="465:39"><name pos:start="465:17" pos:end="465:19">pte</name> <operator pos:start="465:21" pos:end="465:22">|=</operator> <name pos:start="465:24" pos:end="465:39">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

                <if_stmt pos:start="467:17" pos:end="469:41"><if pos:start="467:17" pos:end="469:41">if <condition pos:start="467:20" pos:end="467:29">(<expr pos:start="467:21" pos:end="467:28"><name pos:start="467:21" pos:end="467:28">is_dirty</name></expr>)</condition><block type="pseudo" pos:start="469:21" pos:end="469:41"><block_content pos:start="469:21" pos:end="469:41">

                    <expr_stmt pos:start="469:21" pos:end="469:41"><expr pos:start="469:21" pos:end="469:40"><name pos:start="469:21" pos:end="469:23">pte</name> <operator pos:start="469:25" pos:end="469:26">|=</operator> <name pos:start="469:28" pos:end="469:40">PG_DIRTY_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="471:17" pos:end="471:49"><expr pos:start="471:17" pos:end="471:48"><call pos:start="471:17" pos:end="471:48"><name pos:start="471:17" pos:end="471:33">stl_phys_notdirty</name><argument_list pos:start="471:34" pos:end="471:48">(<argument pos:start="471:35" pos:end="471:42"><expr pos:start="471:35" pos:end="471:42"><name pos:start="471:35" pos:end="471:42">pte_addr</name></expr></argument>, <argument pos:start="471:45" pos:end="471:47"><expr pos:start="471:45" pos:end="471:47"><name pos:start="471:45" pos:end="471:47">pte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="475:13" pos:end="475:29"><expr pos:start="475:13" pos:end="475:28"><name pos:start="475:13" pos:end="475:21">page_size</name> <operator pos:start="475:23" pos:end="475:23">=</operator> <literal type="number" pos:start="475:25" pos:end="475:28">4096</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="477:13" pos:end="477:38"><expr pos:start="477:13" pos:end="477:37"><name pos:start="477:13" pos:end="477:21">virt_addr</name> <operator pos:start="477:23" pos:end="477:23">=</operator> <name pos:start="477:25" pos:end="477:28">addr</name> <operator pos:start="477:30" pos:end="477:30">&amp;</operator> <operator pos:start="477:32" pos:end="477:32">~</operator><literal type="number" pos:start="477:33" pos:end="477:37">0xfff</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="483:5" pos:end="483:40">/* the page can be put in the TLB */</comment>

    <expr_stmt pos:start="485:5" pos:end="485:21"><expr pos:start="485:5" pos:end="485:20"><name pos:start="485:5" pos:end="485:8">prot</name> <operator pos:start="485:10" pos:end="485:10">=</operator> <name pos:start="485:12" pos:end="485:20">PAGE_READ</name></expr>;</expr_stmt>

    <if_stmt pos:start="487:5" pos:end="489:26"><if pos:start="487:5" pos:end="489:26">if <condition pos:start="487:8" pos:end="487:29">(<expr pos:start="487:9" pos:end="487:28"><operator pos:start="487:9" pos:end="487:9">!</operator><operator pos:start="487:10" pos:end="487:10">(</operator><name pos:start="487:11" pos:end="487:14">ptep</name> <operator pos:start="487:16" pos:end="487:16">&amp;</operator> <name pos:start="487:18" pos:end="487:27">PG_NX_MASK</name><operator pos:start="487:28" pos:end="487:28">)</operator></expr>)</condition><block type="pseudo" pos:start="489:9" pos:end="489:26"><block_content pos:start="489:9" pos:end="489:26">

        <expr_stmt pos:start="489:9" pos:end="489:26"><expr pos:start="489:9" pos:end="489:25"><name pos:start="489:9" pos:end="489:12">prot</name> <operator pos:start="489:14" pos:end="489:15">|=</operator> <name pos:start="489:17" pos:end="489:25">PAGE_EXEC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="491:5" pos:end="513:5"><if pos:start="491:5" pos:end="513:5">if <condition pos:start="491:8" pos:end="491:28">(<expr pos:start="491:9" pos:end="491:27"><name pos:start="491:9" pos:end="491:11">pte</name> <operator pos:start="491:13" pos:end="491:13">&amp;</operator> <name pos:start="491:15" pos:end="491:27">PG_DIRTY_MASK</name></expr>)</condition> <block pos:start="491:30" pos:end="513:5">{<block_content pos:start="497:9" pos:end="511:9">

        <comment type="block" pos:start="493:9" pos:end="495:30">/* only set write access if already dirty... otherwise wait

           for dirty access */</comment>

        <if_stmt pos:start="497:9" pos:end="511:9"><if pos:start="497:9" pos:end="503:9">if <condition pos:start="497:12" pos:end="497:20">(<expr pos:start="497:13" pos:end="497:19"><name pos:start="497:13" pos:end="497:19">is_user</name></expr>)</condition> <block pos:start="497:22" pos:end="503:9">{<block_content pos:start="499:13" pos:end="501:35">

            <if_stmt pos:start="499:13" pos:end="501:35"><if pos:start="499:13" pos:end="501:35">if <condition pos:start="499:16" pos:end="499:34">(<expr pos:start="499:17" pos:end="499:33"><name pos:start="499:17" pos:end="499:20">ptep</name> <operator pos:start="499:22" pos:end="499:22">&amp;</operator> <name pos:start="499:24" pos:end="499:33">PG_RW_MASK</name></expr>)</condition><block type="pseudo" pos:start="501:17" pos:end="501:35"><block_content pos:start="501:17" pos:end="501:35">

                <expr_stmt pos:start="501:17" pos:end="501:35"><expr pos:start="501:17" pos:end="501:34"><name pos:start="501:17" pos:end="501:20">prot</name> <operator pos:start="501:22" pos:end="501:23">|=</operator> <name pos:start="501:25" pos:end="501:34">PAGE_WRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="503:11" pos:end="511:9">else <block pos:start="503:16" pos:end="511:9">{<block_content pos:start="505:13" pos:end="509:35">

            <if_stmt pos:start="505:13" pos:end="509:35"><if pos:start="505:13" pos:end="509:35">if <condition pos:start="505:16" pos:end="507:36">(<expr pos:start="505:17" pos:end="507:35"><operator pos:start="505:17" pos:end="505:17">!</operator><operator pos:start="505:18" pos:end="505:18">(</operator><name pos:start="505:19" pos:end="505:28"><name pos:start="505:19" pos:end="505:21">env</name><operator pos:start="505:22" pos:end="505:23">-&gt;</operator><name pos:start="505:24" pos:end="505:25">cr</name><index pos:start="505:26" pos:end="505:28">[<expr pos:start="505:27" pos:end="505:27"><literal type="number" pos:start="505:27" pos:end="505:27">0</literal></expr>]</index></name> <operator pos:start="505:30" pos:end="505:30">&amp;</operator> <name pos:start="505:32" pos:end="505:42">CR0_WP_MASK</name><operator pos:start="505:43" pos:end="505:43">)</operator> <operator pos:start="505:45" pos:end="505:46">||</operator>

                <operator pos:start="507:17" pos:end="507:17">(</operator><name pos:start="507:18" pos:end="507:21">ptep</name> <operator pos:start="507:23" pos:end="507:23">&amp;</operator> <name pos:start="507:25" pos:end="507:34">PG_RW_MASK</name><operator pos:start="507:35" pos:end="507:35">)</operator></expr>)</condition><block type="pseudo" pos:start="509:17" pos:end="509:35"><block_content pos:start="509:17" pos:end="509:35">

                <expr_stmt pos:start="509:17" pos:end="509:35"><expr pos:start="509:17" pos:end="509:34"><name pos:start="509:17" pos:end="509:20">prot</name> <operator pos:start="509:22" pos:end="509:23">|=</operator> <name pos:start="509:25" pos:end="509:34">PAGE_WRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

 <label pos:start="515:2" pos:end="515:12"><name pos:start="515:2" pos:end="515:11">do_mapping</name>:</label>

    <expr_stmt pos:start="517:5" pos:end="517:30"><expr pos:start="517:5" pos:end="517:29"><name pos:start="517:5" pos:end="517:7">pte</name> <operator pos:start="517:9" pos:end="517:9">=</operator> <name pos:start="517:11" pos:end="517:13">pte</name> <operator pos:start="517:15" pos:end="517:15">&amp;</operator> <name pos:start="517:17" pos:end="517:29"><name pos:start="517:17" pos:end="517:19">env</name><operator pos:start="517:20" pos:end="517:21">-&gt;</operator><name pos:start="517:22" pos:end="517:29">a20_mask</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="521:5" pos:end="523:35">/* Even if 4MB pages, we map only one 4KB page in the cache to

       avoid filling it too fast */</comment>

    <expr_stmt pos:start="525:5" pos:end="525:62"><expr pos:start="525:5" pos:end="525:61"><name pos:start="525:5" pos:end="525:15">page_offset</name> <operator pos:start="525:17" pos:end="525:17">=</operator> <operator pos:start="525:19" pos:end="525:19">(</operator><name pos:start="525:20" pos:end="525:23">addr</name> <operator pos:start="525:25" pos:end="525:25">&amp;</operator> <name pos:start="525:27" pos:end="525:42">TARGET_PAGE_MASK</name><operator pos:start="525:43" pos:end="525:43">)</operator> <operator pos:start="525:45" pos:end="525:45">&amp;</operator> <operator pos:start="525:47" pos:end="525:47">(</operator><name pos:start="525:48" pos:end="525:56">page_size</name> <operator pos:start="525:58" pos:end="525:58">-</operator> <literal type="number" pos:start="525:60" pos:end="525:60">1</literal><operator pos:start="525:61" pos:end="525:61">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="527:5" pos:end="527:51"><expr pos:start="527:5" pos:end="527:50"><name pos:start="527:5" pos:end="527:9">paddr</name> <operator pos:start="527:11" pos:end="527:11">=</operator> <operator pos:start="527:13" pos:end="527:13">(</operator><name pos:start="527:14" pos:end="527:16">pte</name> <operator pos:start="527:18" pos:end="527:18">&amp;</operator> <name pos:start="527:20" pos:end="527:35">TARGET_PAGE_MASK</name><operator pos:start="527:36" pos:end="527:36">)</operator> <operator pos:start="527:38" pos:end="527:38">+</operator> <name pos:start="527:40" pos:end="527:50">page_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="529:5" pos:end="529:36"><expr pos:start="529:5" pos:end="529:35"><name pos:start="529:5" pos:end="529:9">vaddr</name> <operator pos:start="529:11" pos:end="529:11">=</operator> <name pos:start="529:13" pos:end="529:21">virt_addr</name> <operator pos:start="529:23" pos:end="529:23">+</operator> <name pos:start="529:25" pos:end="529:35">page_offset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="533:5" pos:end="533:62"><expr pos:start="533:5" pos:end="533:61"><call pos:start="533:5" pos:end="533:61"><name pos:start="533:5" pos:end="533:16">tlb_set_page</name><argument_list pos:start="533:17" pos:end="533:61">(<argument pos:start="533:18" pos:end="533:20"><expr pos:start="533:18" pos:end="533:20"><name pos:start="533:18" pos:end="533:20">env</name></expr></argument>, <argument pos:start="533:23" pos:end="533:27"><expr pos:start="533:23" pos:end="533:27"><name pos:start="533:23" pos:end="533:27">vaddr</name></expr></argument>, <argument pos:start="533:30" pos:end="533:34"><expr pos:start="533:30" pos:end="533:34"><name pos:start="533:30" pos:end="533:34">paddr</name></expr></argument>, <argument pos:start="533:37" pos:end="533:40"><expr pos:start="533:37" pos:end="533:40"><name pos:start="533:37" pos:end="533:40">prot</name></expr></argument>, <argument pos:start="533:43" pos:end="533:49"><expr pos:start="533:43" pos:end="533:49"><name pos:start="533:43" pos:end="533:49">mmu_idx</name></expr></argument>, <argument pos:start="533:52" pos:end="533:60"><expr pos:start="533:52" pos:end="533:60"><name pos:start="533:52" pos:end="533:60">page_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="535:5" pos:end="535:13">return <expr pos:start="535:12" pos:end="535:12"><literal type="number" pos:start="535:12" pos:end="535:12">0</literal></expr>;</return>

 <label pos:start="537:2" pos:end="537:18"><name pos:start="537:2" pos:end="537:17">do_fault_protect</name>:</label>

    <expr_stmt pos:start="539:5" pos:end="539:33"><expr pos:start="539:5" pos:end="539:32"><name pos:start="539:5" pos:end="539:14">error_code</name> <operator pos:start="539:16" pos:end="539:16">=</operator> <name pos:start="539:18" pos:end="539:32">PG_ERROR_P_MASK</name></expr>;</expr_stmt>

 <label pos:start="541:2" pos:end="541:10"><name pos:start="541:2" pos:end="541:9">do_fault</name>:</label>

    <expr_stmt pos:start="543:5" pos:end="543:47"><expr pos:start="543:5" pos:end="543:46"><name pos:start="543:5" pos:end="543:14">error_code</name> <operator pos:start="543:16" pos:end="543:17">|=</operator> <operator pos:start="543:19" pos:end="543:19">(</operator><name pos:start="543:20" pos:end="543:27">is_write</name> <operator pos:start="543:29" pos:end="543:30">&lt;&lt;</operator> <name pos:start="543:32" pos:end="543:45">PG_ERROR_W_BIT</name><operator pos:start="543:46" pos:end="543:46">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="545:5" pos:end="547:38"><if pos:start="545:5" pos:end="547:38">if <condition pos:start="545:8" pos:end="545:16">(<expr pos:start="545:9" pos:end="545:15"><name pos:start="545:9" pos:end="545:15">is_user</name></expr>)</condition><block type="pseudo" pos:start="547:9" pos:end="547:38"><block_content pos:start="547:9" pos:end="547:38">

        <expr_stmt pos:start="547:9" pos:end="547:38"><expr pos:start="547:9" pos:end="547:37"><name pos:start="547:9" pos:end="547:18">error_code</name> <operator pos:start="547:20" pos:end="547:21">|=</operator> <name pos:start="547:23" pos:end="547:37">PG_ERROR_U_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="549:5" pos:end="555:40"><if pos:start="549:5" pos:end="555:40">if <condition pos:start="549:8" pos:end="553:36">(<expr pos:start="549:9" pos:end="553:35"><name pos:start="549:9" pos:end="549:17">is_write1</name> <operator pos:start="549:19" pos:end="549:20">==</operator> <literal type="number" pos:start="549:22" pos:end="549:22">2</literal> <operator pos:start="549:24" pos:end="549:25">&amp;&amp;</operator>

        <operator pos:start="551:9" pos:end="551:9">(</operator><name pos:start="551:10" pos:end="551:18"><name pos:start="551:10" pos:end="551:12">env</name><operator pos:start="551:13" pos:end="551:14">-&gt;</operator><name pos:start="551:15" pos:end="551:18">efer</name></name> <operator pos:start="551:20" pos:end="551:20">&amp;</operator> <name pos:start="551:22" pos:end="551:33">MSR_EFER_NXE</name><operator pos:start="551:34" pos:end="551:34">)</operator> <operator pos:start="551:36" pos:end="551:37">&amp;&amp;</operator>

        <operator pos:start="553:9" pos:end="553:9">(</operator><name pos:start="553:10" pos:end="553:19"><name pos:start="553:10" pos:end="553:12">env</name><operator pos:start="553:13" pos:end="553:14">-&gt;</operator><name pos:start="553:15" pos:end="553:16">cr</name><index pos:start="553:17" pos:end="553:19">[<expr pos:start="553:18" pos:end="553:18"><literal type="number" pos:start="553:18" pos:end="553:18">4</literal></expr>]</index></name> <operator pos:start="553:21" pos:end="553:21">&amp;</operator> <name pos:start="553:23" pos:end="553:34">CR4_PAE_MASK</name><operator pos:start="553:35" pos:end="553:35">)</operator></expr>)</condition><block type="pseudo" pos:start="555:9" pos:end="555:40"><block_content pos:start="555:9" pos:end="555:40">

        <expr_stmt pos:start="555:9" pos:end="555:40"><expr pos:start="555:9" pos:end="555:39"><name pos:start="555:9" pos:end="555:18">error_code</name> <operator pos:start="555:20" pos:end="555:21">|=</operator> <name pos:start="555:23" pos:end="555:39">PG_ERROR_I_D_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="557:5" pos:end="569:5"><if pos:start="557:5" pos:end="565:5">if <condition pos:start="557:8" pos:end="557:55">(<expr pos:start="557:9" pos:end="557:54"><name pos:start="557:9" pos:end="557:33"><name pos:start="557:9" pos:end="557:11">env</name><operator pos:start="557:12" pos:end="557:13">-&gt;</operator><name pos:start="557:14" pos:end="557:33">intercept_exceptions</name></name> <operator pos:start="557:35" pos:end="557:35">&amp;</operator> <operator pos:start="557:37" pos:end="557:37">(</operator><literal type="number" pos:start="557:38" pos:end="557:38">1</literal> <operator pos:start="557:40" pos:end="557:41">&lt;&lt;</operator> <name pos:start="557:43" pos:end="557:53">EXCP0E_PAGE</name><operator pos:start="557:54" pos:end="557:54">)</operator></expr>)</condition> <block pos:start="557:57" pos:end="565:5">{<block_content pos:start="561:9" pos:end="563:23">

        <comment type="block" pos:start="559:9" pos:end="559:55">/* cr2 is not modified in case of exceptions */</comment>

        <expr_stmt pos:start="561:9" pos:end="563:23"><expr pos:start="561:9" pos:end="563:22"><call pos:start="561:9" pos:end="563:22"><name pos:start="561:9" pos:end="561:16">stq_phys</name><argument_list pos:start="561:17" pos:end="563:22">(<argument pos:start="561:18" pos:end="561:74"><expr pos:start="561:18" pos:end="561:74"><name pos:start="561:18" pos:end="561:29"><name pos:start="561:18" pos:end="561:20">env</name><operator pos:start="561:21" pos:end="561:22">-&gt;</operator><name pos:start="561:23" pos:end="561:29">vm_vmcb</name></name> <operator pos:start="561:31" pos:end="561:31">+</operator> <call pos:start="561:33" pos:end="561:74"><name pos:start="561:33" pos:end="561:40">offsetof</name><argument_list pos:start="561:41" pos:end="561:74">(<argument pos:start="561:42" pos:end="561:52"><expr pos:start="561:42" pos:end="561:52">struct <name pos:start="561:49" pos:end="561:52">vmcb</name></expr></argument>, <argument pos:start="561:55" pos:end="561:73"><expr pos:start="561:55" pos:end="561:73"><name pos:start="561:55" pos:end="561:73"><name pos:start="561:55" pos:end="561:61">control</name><operator pos:start="561:62" pos:end="561:62">.</operator><name pos:start="561:63" pos:end="561:73">exit_info_2</name></name></expr></argument>)</argument_list></call></expr></argument>, 

                 <argument pos:start="563:18" pos:end="563:21"><expr pos:start="563:18" pos:end="563:21"><name pos:start="563:18" pos:end="563:21">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="565:7" pos:end="569:5">else <block pos:start="565:12" pos:end="569:5">{<block_content pos:start="567:9" pos:end="567:26">

        <expr_stmt pos:start="567:9" pos:end="567:26"><expr pos:start="567:9" pos:end="567:25"><name pos:start="567:9" pos:end="567:18"><name pos:start="567:9" pos:end="567:11">env</name><operator pos:start="567:12" pos:end="567:13">-&gt;</operator><name pos:start="567:14" pos:end="567:15">cr</name><index pos:start="567:16" pos:end="567:18">[<expr pos:start="567:17" pos:end="567:17"><literal type="number" pos:start="567:17" pos:end="567:17">2</literal></expr>]</index></name> <operator pos:start="567:20" pos:end="567:20">=</operator> <name pos:start="567:22" pos:end="567:25">addr</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="571:5" pos:end="571:33"><expr pos:start="571:5" pos:end="571:32"><name pos:start="571:5" pos:end="571:19"><name pos:start="571:5" pos:end="571:7">env</name><operator pos:start="571:8" pos:end="571:9">-&gt;</operator><name pos:start="571:10" pos:end="571:19">error_code</name></name> <operator pos:start="571:21" pos:end="571:21">=</operator> <name pos:start="571:23" pos:end="571:32">error_code</name></expr>;</expr_stmt>

    <expr_stmt pos:start="573:5" pos:end="573:39"><expr pos:start="573:5" pos:end="573:38"><name pos:start="573:5" pos:end="573:24"><name pos:start="573:5" pos:end="573:7">env</name><operator pos:start="573:8" pos:end="573:9">-&gt;</operator><name pos:start="573:10" pos:end="573:24">exception_index</name></name> <operator pos:start="573:26" pos:end="573:26">=</operator> <name pos:start="573:28" pos:end="573:38">EXCP0E_PAGE</name></expr>;</expr_stmt>

    <return pos:start="575:5" pos:end="575:13">return <expr pos:start="575:12" pos:end="575:12"><literal type="number" pos:start="575:12" pos:end="575:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
