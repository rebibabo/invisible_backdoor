<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5841.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">wv_read_packet</name><parameter_list pos:start="1:26" pos:end="3:40">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:39"><decl pos:start="3:27" pos:end="3:39"><type pos:start="3:27" pos:end="3:39"><name pos:start="3:27" pos:end="3:34">AVPacket</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:39">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="65:1">{<block_content pos:start="7:5" pos:end="63:13">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">WVContext</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">wc</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:20">samples</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:20"><if pos:start="13:5" pos:end="15:20">if <condition pos:start="13:8" pos:end="13:25">(<expr pos:start="13:9" pos:end="13:24"><call pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:16">url_feof</name><argument_list pos:start="13:17" pos:end="13:24">(<argument pos:start="13:18" pos:end="13:23"><expr pos:start="13:18" pos:end="13:23"><operator pos:start="13:18" pos:end="13:18">&amp;</operator><name pos:start="13:19" pos:end="13:23"><name pos:start="13:19" pos:end="13:19">s</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:23">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:20"><block_content pos:start="15:9" pos:end="15:20">

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><operator pos:start="15:16" pos:end="15:16">-</operator><name pos:start="15:17" pos:end="15:19">EIO</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if<condition pos:start="17:7" pos:end="17:24">(<expr pos:start="17:8" pos:end="17:23"><name pos:start="17:8" pos:end="17:23"><name pos:start="17:8" pos:end="17:9">wc</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:23">block_parsed</name></name></expr>)</condition><block pos:start="17:25" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:22">

        <if_stmt pos:start="19:9" pos:end="21:22"><if pos:start="19:9" pos:end="21:22">if<condition pos:start="19:11" pos:end="19:47">(<expr pos:start="19:12" pos:end="19:46"><call pos:start="19:12" pos:end="19:42"><name pos:start="19:12" pos:end="19:31">wv_read_block_header</name><argument_list pos:start="19:32" pos:end="19:42">(<argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><name pos:start="19:33" pos:end="19:33">s</name></expr></argument>, <argument pos:start="19:36" pos:end="19:41"><expr pos:start="19:36" pos:end="19:41"><operator pos:start="19:36" pos:end="19:36">&amp;</operator><name pos:start="19:37" pos:end="19:41"><name pos:start="19:37" pos:end="19:37">s</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:41">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:44" pos:end="19:44">&lt;</operator> <literal type="number" pos:start="19:46" pos:end="19:46">0</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:22"><block_content pos:start="21:13" pos:end="21:22">

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:31"><expr pos:start="27:5" pos:end="27:30"><name pos:start="27:5" pos:end="27:11">samples</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:30"><name pos:start="27:15" pos:end="27:19">LE_32</name><argument_list pos:start="27:20" pos:end="27:30">(<argument pos:start="27:21" pos:end="27:29"><expr pos:start="27:21" pos:end="27:29"><name pos:start="27:21" pos:end="27:29"><name pos:start="27:21" pos:end="27:22">wc</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:29">extra</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="29:5" pos:end="29:41">/* should not happen but who knows */</comment>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if<condition pos:start="31:7" pos:end="31:61">(<expr pos:start="31:8" pos:end="31:60"><name pos:start="31:8" pos:end="31:14">samples</name> <operator pos:start="31:16" pos:end="31:16">*</operator> <literal type="number" pos:start="31:18" pos:end="31:18">2</literal> <operator pos:start="31:20" pos:end="31:20">*</operator> <name pos:start="31:22" pos:end="31:29"><name pos:start="31:22" pos:end="31:23">wc</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:29">chan</name></name> <operator pos:start="31:31" pos:end="31:31">&gt;</operator> <name pos:start="31:33" pos:end="31:60">AVCODEC_MAX_AUDIO_FRAME_SIZE</name></expr>)</condition><block pos:start="31:62" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:20">

        <expr_stmt pos:start="33:9" pos:end="33:83"><expr pos:start="33:9" pos:end="33:82"><call pos:start="33:9" pos:end="33:82"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:82">(<argument pos:start="33:16" pos:end="33:16"><expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">s</name></expr></argument>, <argument pos:start="33:19" pos:end="33:30"><expr pos:start="33:19" pos:end="33:30"><name pos:start="33:19" pos:end="33:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:33" pos:end="33:81"><expr pos:start="33:33" pos:end="33:81"><literal type="string" pos:start="33:33" pos:end="33:81">"Packet size is too big to be handled in lavc!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:20">return <expr pos:start="35:16" pos:end="35:19"><operator pos:start="35:16" pos:end="35:16">-</operator><name pos:start="35:17" pos:end="35:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="41:29"><if pos:start="39:5" pos:end="41:29">if<condition pos:start="39:7" pos:end="39:59">(<expr pos:start="39:8" pos:end="39:58"><call pos:start="39:8" pos:end="39:54"><name pos:start="39:8" pos:end="39:20">av_new_packet</name><argument_list pos:start="39:21" pos:end="39:54">(<argument pos:start="39:22" pos:end="39:24"><expr pos:start="39:22" pos:end="39:24"><name pos:start="39:22" pos:end="39:24">pkt</name></expr></argument>, <argument pos:start="39:27" pos:end="39:53"><expr pos:start="39:27" pos:end="39:53"><name pos:start="39:27" pos:end="39:37"><name pos:start="39:27" pos:end="39:28">wc</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:37">blksize</name></name> <operator pos:start="39:39" pos:end="39:39">+</operator> <name pos:start="39:41" pos:end="39:53">WV_EXTRA_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="39:56" pos:end="39:56">&lt;</operator> <literal type="number" pos:start="39:58" pos:end="39:58">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:29"><block_content pos:start="41:9" pos:end="41:29">

        <return pos:start="41:9" pos:end="41:29">return <expr pos:start="41:16" pos:end="41:28"><name pos:start="41:16" pos:end="41:28">AVERROR_NOMEM</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:48"><expr pos:start="43:5" pos:end="43:47"><call pos:start="43:5" pos:end="43:47"><name pos:start="43:5" pos:end="43:10">memcpy</name><argument_list pos:start="43:11" pos:end="43:47">(<argument pos:start="43:12" pos:end="43:20"><expr pos:start="43:12" pos:end="43:20"><name pos:start="43:12" pos:end="43:20"><name pos:start="43:12" pos:end="43:14">pkt</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:20">data</name></name></expr></argument>, <argument pos:start="43:23" pos:end="43:31"><expr pos:start="43:23" pos:end="43:31"><name pos:start="43:23" pos:end="43:31"><name pos:start="43:23" pos:end="43:24">wc</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:31">extra</name></name></expr></argument>, <argument pos:start="43:34" pos:end="43:46"><expr pos:start="43:34" pos:end="43:46"><name pos:start="43:34" pos:end="43:46">WV_EXTRA_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:69"><expr pos:start="45:5" pos:end="45:68"><name pos:start="45:5" pos:end="45:7">ret</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:68"><name pos:start="45:11" pos:end="45:20">get_buffer</name><argument_list pos:start="45:21" pos:end="45:68">(<argument pos:start="45:22" pos:end="45:27"><expr pos:start="45:22" pos:end="45:27"><operator pos:start="45:22" pos:end="45:22">&amp;</operator><name pos:start="45:23" pos:end="45:27"><name pos:start="45:23" pos:end="45:23">s</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:27">pb</name></name></expr></argument>, <argument pos:start="45:30" pos:end="45:54"><expr pos:start="45:30" pos:end="45:54"><name pos:start="45:30" pos:end="45:38"><name pos:start="45:30" pos:end="45:32">pkt</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:38">data</name></name> <operator pos:start="45:40" pos:end="45:40">+</operator> <name pos:start="45:42" pos:end="45:54">WV_EXTRA_SIZE</name></expr></argument>, <argument pos:start="45:57" pos:end="45:67"><expr pos:start="45:57" pos:end="45:67"><name pos:start="45:57" pos:end="45:67"><name pos:start="45:57" pos:end="45:58">wc</name><operator pos:start="45:59" pos:end="45:60">-&gt;</operator><name pos:start="45:61" pos:end="45:67">blksize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if<condition pos:start="47:7" pos:end="47:26">(<expr pos:start="47:8" pos:end="47:25"><name pos:start="47:8" pos:end="47:10">ret</name> <operator pos:start="47:12" pos:end="47:13">!=</operator> <name pos:start="47:15" pos:end="47:25"><name pos:start="47:15" pos:end="47:16">wc</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:25">blksize</name></name></expr>)</condition><block pos:start="47:27" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:26">

        <expr_stmt pos:start="49:9" pos:end="49:28"><expr pos:start="49:9" pos:end="49:27"><call pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:22">av_free_packet</name><argument_list pos:start="49:23" pos:end="49:27">(<argument pos:start="49:24" pos:end="49:26"><expr pos:start="49:24" pos:end="49:26"><name pos:start="49:24" pos:end="49:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:26">return <expr pos:start="51:16" pos:end="51:25"><name pos:start="51:16" pos:end="51:25">AVERROR_IO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:26"><expr pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:21"><name pos:start="55:5" pos:end="55:7">pkt</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:21">stream_index</name></name> <operator pos:start="55:23" pos:end="55:23">=</operator> <literal type="number" pos:start="55:25" pos:end="55:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:25"><expr pos:start="57:5" pos:end="57:24"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:6">wc</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:20">block_parsed</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <literal type="number" pos:start="57:24" pos:end="57:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:36"><expr pos:start="59:5" pos:end="59:35"><name pos:start="59:5" pos:end="59:13"><name pos:start="59:5" pos:end="59:7">pkt</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:13">size</name></name> <operator pos:start="59:15" pos:end="59:15">=</operator> <name pos:start="59:17" pos:end="59:19">ret</name> <operator pos:start="59:21" pos:end="59:21">+</operator> <name pos:start="59:23" pos:end="59:35">WV_EXTRA_SIZE</name></expr>;</expr_stmt>



    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
