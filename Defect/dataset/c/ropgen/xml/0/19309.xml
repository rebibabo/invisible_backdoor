<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19309.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:43">amdvi_iommu_notify_flag_changed</name><parameter_list pos:start="1:44" pos:end="5:66">(<parameter pos:start="1:45" pos:end="1:63"><decl pos:start="1:45" pos:end="1:63"><type pos:start="1:45" pos:end="1:63"><name pos:start="1:45" pos:end="1:56">MemoryRegion</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">iommu</name></decl></parameter>,

                                            <parameter pos:start="3:45" pos:end="3:65"><decl pos:start="3:45" pos:end="3:65"><type pos:start="3:45" pos:end="3:65"><name pos:start="3:45" pos:end="3:61">IOMMUNotifierFlag</name></type> <name pos:start="3:63" pos:end="3:65">old</name></decl></parameter>,

                                            <parameter pos:start="5:45" pos:end="5:65"><decl pos:start="5:45" pos:end="5:65"><type pos:start="5:45" pos:end="5:65"><name pos:start="5:45" pos:end="5:61">IOMMUNotifierFlag</name></type> <name pos:start="5:63" pos:end="5:65">new</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="19:1">{<block_content pos:start="9:5" pos:end="17:34">

    <decl_stmt pos:start="9:5" pos:end="9:74"><decl pos:start="9:5" pos:end="9:73"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AMDVIAddressSpace</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:25">as</name> <init pos:start="9:27" pos:end="9:73">= <expr pos:start="9:29" pos:end="9:73"><call pos:start="9:29" pos:end="9:73"><name pos:start="9:29" pos:end="9:40">container_of</name><argument_list pos:start="9:41" pos:end="9:73">(<argument pos:start="9:42" pos:end="9:46"><expr pos:start="9:42" pos:end="9:46"><name pos:start="9:42" pos:end="9:46">iommu</name></expr></argument>, <argument pos:start="9:49" pos:end="9:65"><expr pos:start="9:49" pos:end="9:65"><name pos:start="9:49" pos:end="9:65">AMDVIAddressSpace</name></expr></argument>, <argument pos:start="9:68" pos:end="9:72"><expr pos:start="9:68" pos:end="9:72"><name pos:start="9:68" pos:end="9:72">iommu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="17:34"><expr pos:start="13:5" pos:end="17:33"><call pos:start="13:5" pos:end="17:33"><name pos:start="13:5" pos:end="13:12">hw_error</name><argument_list pos:start="13:13" pos:end="17:33">(<argument pos:start="13:14" pos:end="15:34"><expr pos:start="13:14" pos:end="15:34"><literal type="string" pos:start="13:14" pos:end="13:72">"device %02x.%02x.%x requires iommu notifier which is not "</literal>

             <literal type="string" pos:start="15:14" pos:end="15:34">"currently supported"</literal></expr></argument>, <argument pos:start="15:37" pos:end="15:47"><expr pos:start="15:37" pos:end="15:47"><name pos:start="15:37" pos:end="15:47"><name pos:start="15:37" pos:end="15:38">as</name><operator pos:start="15:39" pos:end="15:40">-&gt;</operator><name pos:start="15:41" pos:end="15:47">bus_num</name></name></expr></argument>, <argument pos:start="15:50" pos:end="15:68"><expr pos:start="15:50" pos:end="15:68"><call pos:start="15:50" pos:end="15:68"><name pos:start="15:50" pos:end="15:57">PCI_SLOT</name><argument_list pos:start="15:58" pos:end="15:68">(<argument pos:start="15:59" pos:end="15:67"><expr pos:start="15:59" pos:end="15:67"><name pos:start="15:59" pos:end="15:67"><name pos:start="15:59" pos:end="15:60">as</name><operator pos:start="15:61" pos:end="15:62">-&gt;</operator><name pos:start="15:63" pos:end="15:67">devfn</name></name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="17:14" pos:end="17:32"><expr pos:start="17:14" pos:end="17:32"><call pos:start="17:14" pos:end="17:32"><name pos:start="17:14" pos:end="17:21">PCI_FUNC</name><argument_list pos:start="17:22" pos:end="17:32">(<argument pos:start="17:23" pos:end="17:31"><expr pos:start="17:23" pos:end="17:31"><name pos:start="17:23" pos:end="17:31"><name pos:start="17:23" pos:end="17:24">as</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:31">devfn</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
