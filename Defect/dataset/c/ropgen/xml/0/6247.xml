<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6247.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">ff_put_wav_header</name><parameter_list pos:start="1:22" pos:end="1:59">(<parameter pos:start="1:23" pos:end="1:37"><decl pos:start="1:23" pos:end="1:37"><type pos:start="1:23" pos:end="1:37"><name pos:start="1:23" pos:end="1:33">AVIOContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:37">pb</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:58"><decl pos:start="1:40" pos:end="1:58"><type pos:start="1:40" pos:end="1:58"><name pos:start="1:40" pos:end="1:53">AVCodecContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">enc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="209:1">{<block_content pos:start="5:5" pos:end="207:19">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">bps</name></decl>, <decl pos:start="5:14" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:21">blkalign</name></decl>, <decl pos:start="5:24" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:24" pos:end="5:34">bytespersec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">hdrsize</name> <init pos:start="7:17" pos:end="7:20">= <expr pos:start="7:19" pos:end="7:20"><literal type="number" pos:start="7:19" pos:end="7:20">18</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:28">waveformatextensible</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:21"><name pos:start="11:13" pos:end="11:16">temp</name><index pos:start="11:17" pos:end="11:21">[<expr pos:start="11:18" pos:end="11:20"><literal type="number" pos:start="11:18" pos:end="11:20">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:27">riff_extradata</name><init pos:start="13:28" pos:end="13:33">= <expr pos:start="13:30" pos:end="13:33"><name pos:start="13:30" pos:end="13:33">temp</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:39"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:33">riff_extradata_start</name><init pos:start="15:34" pos:end="15:39">= <expr pos:start="15:36" pos:end="15:39"><name pos:start="15:36" pos:end="15:39">temp</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:18"><if pos:start="19:5" pos:end="21:18">if<condition pos:start="19:7" pos:end="19:50">(<expr pos:start="19:8" pos:end="19:49"><operator pos:start="19:8" pos:end="19:8">!</operator><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:11">enc</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:22">codec_tag</name></name> <operator pos:start="19:24" pos:end="19:25">||</operator> <name pos:start="19:27" pos:end="19:40"><name pos:start="19:27" pos:end="19:29">enc</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:40">codec_tag</name></name> <operator pos:start="19:42" pos:end="19:42">&gt;</operator> <literal type="number" pos:start="19:44" pos:end="19:49">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:18"><block_content pos:start="21:9" pos:end="21:18">

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="27:72"><expr pos:start="23:5" pos:end="27:71"><name pos:start="23:5" pos:end="23:24">waveformatextensible</name> <operator pos:start="23:26" pos:end="23:26">=</operator>   <operator pos:start="23:30" pos:end="23:30">(</operator><name pos:start="23:31" pos:end="23:43"><name pos:start="23:31" pos:end="23:33">enc</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:43">channels</name></name> <operator pos:start="23:45" pos:end="23:45">&gt;</operator> <literal type="number" pos:start="23:47" pos:end="23:47">2</literal> <operator pos:start="23:49" pos:end="23:50">&amp;&amp;</operator> <name pos:start="23:52" pos:end="23:70"><name pos:start="23:52" pos:end="23:54">enc</name><operator pos:start="23:55" pos:end="23:56">-&gt;</operator><name pos:start="23:57" pos:end="23:70">channel_layout</name></name><operator pos:start="23:71" pos:end="23:71">)</operator>

                          <operator pos:start="25:27" pos:end="25:28">||</operator> <name pos:start="25:30" pos:end="25:45"><name pos:start="25:30" pos:end="25:32">enc</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:45">sample_rate</name></name> <operator pos:start="25:47" pos:end="25:47">&gt;</operator> <literal type="number" pos:start="25:49" pos:end="25:53">48000</literal>

                          <operator pos:start="27:27" pos:end="27:28">||</operator> <call pos:start="27:30" pos:end="27:66"><name pos:start="27:30" pos:end="27:51">av_get_bits_per_sample</name><argument_list pos:start="27:52" pos:end="27:66">(<argument pos:start="27:53" pos:end="27:65"><expr pos:start="27:53" pos:end="27:65"><name pos:start="27:53" pos:end="27:65"><name pos:start="27:53" pos:end="27:55">enc</name><operator pos:start="27:56" pos:end="27:57">-&gt;</operator><name pos:start="27:58" pos:end="27:65">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="27:68" pos:end="27:68">&gt;</operator> <literal type="number" pos:start="27:70" pos:end="27:71">16</literal></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:29">(<expr pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:28">waveformatextensible</name></expr>)</condition> <block pos:start="31:31" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:30">

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><call pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:17">avio_wl16</name><argument_list pos:start="33:18" pos:end="33:29">(<argument pos:start="33:19" pos:end="33:20"><expr pos:start="33:19" pos:end="33:20"><name pos:start="33:19" pos:end="33:20">pb</name></expr></argument>, <argument pos:start="33:23" pos:end="33:28"><expr pos:start="33:23" pos:end="33:28"><literal type="number" pos:start="33:23" pos:end="33:28">0xfffe</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="39:5">else <block pos:start="35:12" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:38">

        <expr_stmt pos:start="37:9" pos:end="37:38"><expr pos:start="37:9" pos:end="37:37"><call pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:17">avio_wl16</name><argument_list pos:start="37:18" pos:end="37:37">(<argument pos:start="37:19" pos:end="37:20"><expr pos:start="37:19" pos:end="37:20"><name pos:start="37:19" pos:end="37:20">pb</name></expr></argument>, <argument pos:start="37:23" pos:end="37:36"><expr pos:start="37:23" pos:end="37:36"><name pos:start="37:23" pos:end="37:36"><name pos:start="37:23" pos:end="37:25">enc</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:36">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><call pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:13">avio_wl16</name><argument_list pos:start="41:14" pos:end="41:32">(<argument pos:start="41:15" pos:end="41:16"><expr pos:start="41:15" pos:end="41:16"><name pos:start="41:15" pos:end="41:16">pb</name></expr></argument>, <argument pos:start="41:19" pos:end="41:31"><expr pos:start="41:19" pos:end="41:31"><name pos:start="41:19" pos:end="41:31"><name pos:start="41:19" pos:end="41:21">enc</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:31">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:36"><expr pos:start="43:5" pos:end="43:35"><call pos:start="43:5" pos:end="43:35"><name pos:start="43:5" pos:end="43:13">avio_wl32</name><argument_list pos:start="43:14" pos:end="43:35">(<argument pos:start="43:15" pos:end="43:16"><expr pos:start="43:15" pos:end="43:16"><name pos:start="43:15" pos:end="43:16">pb</name></expr></argument>, <argument pos:start="43:19" pos:end="43:34"><expr pos:start="43:19" pos:end="43:34"><name pos:start="43:19" pos:end="43:34"><name pos:start="43:19" pos:end="43:21">enc</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:34">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="59:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:107">(<expr pos:start="45:9" pos:end="45:106"><name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:11">enc</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:21">codec_id</name></name> <operator pos:start="45:23" pos:end="45:24">==</operator> <name pos:start="45:26" pos:end="45:37">CODEC_ID_MP2</name> <operator pos:start="45:39" pos:end="45:40">||</operator> <name pos:start="45:42" pos:end="45:54"><name pos:start="45:42" pos:end="45:44">enc</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:54">codec_id</name></name> <operator pos:start="45:56" pos:end="45:57">==</operator> <name pos:start="45:59" pos:end="45:70">CODEC_ID_MP3</name> <operator pos:start="45:72" pos:end="45:73">||</operator> <name pos:start="45:75" pos:end="45:87"><name pos:start="45:75" pos:end="45:77">enc</name><operator pos:start="45:78" pos:end="45:79">-&gt;</operator><name pos:start="45:80" pos:end="45:87">codec_id</name></name> <operator pos:start="45:89" pos:end="45:90">==</operator> <name pos:start="45:92" pos:end="45:106">CODEC_ID_GSM_MS</name></expr>)</condition> <block pos:start="45:109" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:16">

        <expr_stmt pos:start="47:9" pos:end="47:16"><expr pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:11">bps</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="49:7" pos:end="53:5">else if <condition pos:start="49:15" pos:end="49:52">(<expr pos:start="49:16" pos:end="49:51"><name pos:start="49:16" pos:end="49:28"><name pos:start="49:16" pos:end="49:18">enc</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:28">codec_id</name></name> <operator pos:start="49:30" pos:end="49:31">==</operator> <name pos:start="49:33" pos:end="49:51">CODEC_ID_ADPCM_G726</name></expr>)</condition> <block pos:start="49:54" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:16">

        <expr_stmt pos:start="51:9" pos:end="51:16"><expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:11">bps</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <literal type="number" pos:start="51:15" pos:end="51:15">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="59:5">else <block pos:start="53:12" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:21">

        <if_stmt pos:start="55:9" pos:end="57:21"><if pos:start="55:9" pos:end="57:21">if <condition pos:start="55:12" pos:end="55:59">(<expr pos:start="55:13" pos:end="55:58"><operator pos:start="55:13" pos:end="55:13">!</operator><operator pos:start="55:14" pos:end="55:14">(</operator><name pos:start="55:15" pos:end="55:17">bps</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <call pos:start="55:21" pos:end="55:57"><name pos:start="55:21" pos:end="55:42">av_get_bits_per_sample</name><argument_list pos:start="55:43" pos:end="55:57">(<argument pos:start="55:44" pos:end="55:56"><expr pos:start="55:44" pos:end="55:56"><name pos:start="55:44" pos:end="55:56"><name pos:start="55:44" pos:end="55:46">enc</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:56">codec_id</name></name></expr></argument>)</argument_list></call><operator pos:start="55:58" pos:end="55:58">)</operator></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:21"><block_content pos:start="57:13" pos:end="57:21">

            <expr_stmt pos:start="57:13" pos:end="57:21"><expr pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:15">bps</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <literal type="number" pos:start="57:19" pos:end="57:20">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="57:23" pos:end="57:38">// default to 16</comment>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if<condition pos:start="61:7" pos:end="61:71">(<expr pos:start="61:8" pos:end="61:70"><name pos:start="61:8" pos:end="61:10">bps</name> <operator pos:start="61:12" pos:end="61:13">!=</operator> <name pos:start="61:15" pos:end="61:40"><name pos:start="61:15" pos:end="61:17">enc</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:40">bits_per_coded_sample</name></name> <operator pos:start="61:42" pos:end="61:43">&amp;&amp;</operator> <name pos:start="61:45" pos:end="61:70"><name pos:start="61:45" pos:end="61:47">enc</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:70">bits_per_coded_sample</name></name></expr>)</condition><block pos:start="61:72" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:143">

        <expr_stmt pos:start="63:9" pos:end="63:143"><expr pos:start="63:9" pos:end="63:142"><call pos:start="63:9" pos:end="63:142"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="63:142">(<argument pos:start="63:16" pos:end="63:18"><expr pos:start="63:16" pos:end="63:18"><name pos:start="63:16" pos:end="63:18">enc</name></expr></argument>, <argument pos:start="63:21" pos:end="63:34"><expr pos:start="63:21" pos:end="63:34"><name pos:start="63:21" pos:end="63:34">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="63:37" pos:end="63:108"><expr pos:start="63:37" pos:end="63:108"><literal type="string" pos:start="63:37" pos:end="63:108">"requested bits_per_coded_sample (%d) and actually stored (%d) differ\n"</literal></expr></argument>, <argument pos:start="63:111" pos:end="63:136"><expr pos:start="63:111" pos:end="63:136"><name pos:start="63:111" pos:end="63:136"><name pos:start="63:111" pos:end="63:113">enc</name><operator pos:start="63:114" pos:end="63:115">-&gt;</operator><name pos:start="63:116" pos:end="63:136">bits_per_coded_sample</name></name></expr></argument>, <argument pos:start="63:139" pos:end="63:141"><expr pos:start="63:139" pos:end="63:141"><name pos:start="63:139" pos:end="63:141">bps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="89:42"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:71">(<expr pos:start="69:9" pos:end="69:70"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:11">enc</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:21">codec_id</name></name> <operator pos:start="69:23" pos:end="69:24">==</operator> <name pos:start="69:26" pos:end="69:37">CODEC_ID_MP2</name> <operator pos:start="69:39" pos:end="69:40">||</operator> <name pos:start="69:42" pos:end="69:54"><name pos:start="69:42" pos:end="69:44">enc</name><operator pos:start="69:45" pos:end="69:46">-&gt;</operator><name pos:start="69:47" pos:end="69:54">codec_id</name></name> <operator pos:start="69:56" pos:end="69:57">==</operator> <name pos:start="69:59" pos:end="69:70">CODEC_ID_MP3</name></expr>)</condition> <block pos:start="69:73" pos:end="75:5">{<block_content pos:start="71:9" pos:end="71:35">

        <expr_stmt pos:start="71:9" pos:end="71:35"><expr pos:start="71:9" pos:end="71:34"><name pos:start="71:9" pos:end="71:16">blkalign</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <name pos:start="71:20" pos:end="71:34"><name pos:start="71:20" pos:end="71:22">enc</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:34">frame_size</name></name></expr>;</expr_stmt> <comment type="line" pos:start="71:37" pos:end="71:116">//this is wrong, but it seems many demuxers do not work if this is set correctly</comment>

        <comment type="line" pos:start="73:9" pos:end="73:58">//blkalign = 144 * enc-&gt;bit_rate/enc-&gt;sample_rate;</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="75:7" pos:end="79:5">else if <condition pos:start="75:15" pos:end="75:45">(<expr pos:start="75:16" pos:end="75:44"><name pos:start="75:16" pos:end="75:28"><name pos:start="75:16" pos:end="75:18">enc</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:28">codec_id</name></name> <operator pos:start="75:30" pos:end="75:31">==</operator> <name pos:start="75:33" pos:end="75:44">CODEC_ID_AC3</name></expr>)</condition> <block pos:start="75:47" pos:end="79:5">{<block_content pos:start="77:13" pos:end="77:28">

            <expr_stmt pos:start="77:13" pos:end="77:28"><expr pos:start="77:13" pos:end="77:27"><name pos:start="77:13" pos:end="77:20">blkalign</name> <operator pos:start="77:22" pos:end="77:22">=</operator> <literal type="number" pos:start="77:24" pos:end="77:27">3840</literal></expr>;</expr_stmt> <comment type="line" pos:start="77:30" pos:end="77:54">//maximum bytes per frame</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="79:7" pos:end="83:5">else if <condition pos:start="79:15" pos:end="79:52">(<expr pos:start="79:16" pos:end="79:51"><name pos:start="79:16" pos:end="79:28"><name pos:start="79:16" pos:end="79:18">enc</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:28">codec_id</name></name> <operator pos:start="79:30" pos:end="79:31">==</operator> <name pos:start="79:33" pos:end="79:51">CODEC_ID_ADPCM_G726</name></expr>)</condition> <block pos:start="79:54" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:21"> <comment type="line" pos:start="79:56" pos:end="79:57">//</comment>

        <expr_stmt pos:start="81:9" pos:end="81:21"><expr pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:16">blkalign</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <literal type="number" pos:start="81:20" pos:end="81:20">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="83:7" pos:end="87:5">else if <condition pos:start="83:15" pos:end="83:37">(<expr pos:start="83:16" pos:end="83:36"><name pos:start="83:16" pos:end="83:31"><name pos:start="83:16" pos:end="83:18">enc</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:31">block_align</name></name> <operator pos:start="83:33" pos:end="83:34">!=</operator> <literal type="number" pos:start="83:36" pos:end="83:36">0</literal></expr>)</condition> <block pos:start="83:39" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:36"> <comment type="block" pos:start="83:41" pos:end="83:68">/* specified by the codec */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:36"><expr pos:start="85:9" pos:end="85:35"><name pos:start="85:9" pos:end="85:16">blkalign</name> <operator pos:start="85:18" pos:end="85:18">=</operator> <name pos:start="85:20" pos:end="85:35"><name pos:start="85:20" pos:end="85:22">enc</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:35">block_align</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="89:42">else<block type="pseudo" pos:start="89:9" pos:end="89:42"><block_content pos:start="89:9" pos:end="89:42">

        <expr_stmt pos:start="89:9" pos:end="89:42"><expr pos:start="89:9" pos:end="89:41"><name pos:start="89:9" pos:end="89:16">blkalign</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <name pos:start="89:20" pos:end="89:32"><name pos:start="89:20" pos:end="89:22">enc</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:32">channels</name></name><operator pos:start="89:33" pos:end="89:33">*</operator><name pos:start="89:34" pos:end="89:36">bps</name> <operator pos:start="89:38" pos:end="89:39">&gt;&gt;</operator> <literal type="number" pos:start="89:41" pos:end="89:41">3</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="91:5" pos:end="109:5"><if pos:start="91:5" pos:end="105:5">if <condition pos:start="91:8" pos:end="101:44">(<expr pos:start="91:9" pos:end="101:43"><name pos:start="91:9" pos:end="91:21"><name pos:start="91:9" pos:end="91:11">enc</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:21">codec_id</name></name> <operator pos:start="91:23" pos:end="91:24">==</operator> <name pos:start="91:26" pos:end="91:40">CODEC_ID_PCM_U8</name> <operator pos:start="91:42" pos:end="91:43">||</operator>

        <name pos:start="93:9" pos:end="93:21"><name pos:start="93:9" pos:end="93:11">enc</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:21">codec_id</name></name> <operator pos:start="93:23" pos:end="93:24">==</operator> <name pos:start="93:26" pos:end="93:43">CODEC_ID_PCM_S24LE</name> <operator pos:start="93:45" pos:end="93:46">||</operator>

        <name pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:11">enc</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:21">codec_id</name></name> <operator pos:start="95:23" pos:end="95:24">==</operator> <name pos:start="95:26" pos:end="95:43">CODEC_ID_PCM_S32LE</name> <operator pos:start="95:45" pos:end="95:46">||</operator>

        <name pos:start="97:9" pos:end="97:21"><name pos:start="97:9" pos:end="97:11">enc</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:21">codec_id</name></name> <operator pos:start="97:23" pos:end="97:24">==</operator> <name pos:start="97:26" pos:end="97:43">CODEC_ID_PCM_F32LE</name> <operator pos:start="97:45" pos:end="97:46">||</operator>

        <name pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:11">enc</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:21">codec_id</name></name> <operator pos:start="99:23" pos:end="99:24">==</operator> <name pos:start="99:26" pos:end="99:43">CODEC_ID_PCM_F64LE</name> <operator pos:start="99:45" pos:end="99:46">||</operator>

        <name pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:11">enc</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:21">codec_id</name></name> <operator pos:start="101:23" pos:end="101:24">==</operator> <name pos:start="101:26" pos:end="101:43">CODEC_ID_PCM_S16LE</name></expr>)</condition> <block pos:start="101:46" pos:end="105:5">{<block_content pos:start="103:9" pos:end="103:50">

        <expr_stmt pos:start="103:9" pos:end="103:50"><expr pos:start="103:9" pos:end="103:49"><name pos:start="103:9" pos:end="103:19">bytespersec</name> <operator pos:start="103:21" pos:end="103:21">=</operator> <name pos:start="103:23" pos:end="103:38"><name pos:start="103:23" pos:end="103:25">enc</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:38">sample_rate</name></name> <operator pos:start="103:40" pos:end="103:40">*</operator> <name pos:start="103:42" pos:end="103:49">blkalign</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="105:7" pos:end="109:5">else <block pos:start="105:12" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:40">

        <expr_stmt pos:start="107:9" pos:end="107:40"><expr pos:start="107:9" pos:end="107:39"><name pos:start="107:9" pos:end="107:19">bytespersec</name> <operator pos:start="107:21" pos:end="107:21">=</operator> <name pos:start="107:23" pos:end="107:35"><name pos:start="107:23" pos:end="107:25">enc</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:35">bit_rate</name></name> <operator pos:start="107:37" pos:end="107:37">/</operator> <literal type="number" pos:start="107:39" pos:end="107:39">8</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:31"><expr pos:start="111:5" pos:end="111:30"><call pos:start="111:5" pos:end="111:30"><name pos:start="111:5" pos:end="111:13">avio_wl32</name><argument_list pos:start="111:14" pos:end="111:30">(<argument pos:start="111:15" pos:end="111:16"><expr pos:start="111:15" pos:end="111:16"><name pos:start="111:15" pos:end="111:16">pb</name></expr></argument>, <argument pos:start="111:19" pos:end="111:29"><expr pos:start="111:19" pos:end="111:29"><name pos:start="111:19" pos:end="111:29">bytespersec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="111:33" pos:end="111:54">/* bytes per second */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:28"><expr pos:start="113:5" pos:end="113:27"><call pos:start="113:5" pos:end="113:27"><name pos:start="113:5" pos:end="113:13">avio_wl16</name><argument_list pos:start="113:14" pos:end="113:27">(<argument pos:start="113:15" pos:end="113:16"><expr pos:start="113:15" pos:end="113:16"><name pos:start="113:15" pos:end="113:16">pb</name></expr></argument>, <argument pos:start="113:19" pos:end="113:26"><expr pos:start="113:19" pos:end="113:26"><name pos:start="113:19" pos:end="113:26">blkalign</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="113:30" pos:end="113:46">/* block align */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:23"><expr pos:start="115:5" pos:end="115:22"><call pos:start="115:5" pos:end="115:22"><name pos:start="115:5" pos:end="115:13">avio_wl16</name><argument_list pos:start="115:14" pos:end="115:22">(<argument pos:start="115:15" pos:end="115:16"><expr pos:start="115:15" pos:end="115:16"><name pos:start="115:15" pos:end="115:16">pb</name></expr></argument>, <argument pos:start="115:19" pos:end="115:21"><expr pos:start="115:19" pos:end="115:21"><name pos:start="115:19" pos:end="115:21">bps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="115:25" pos:end="115:45">/* bits per sample */</comment>

    <if_stmt pos:start="117:5" pos:end="169:5"><if pos:start="117:5" pos:end="131:5">if <condition pos:start="117:8" pos:end="117:38">(<expr pos:start="117:9" pos:end="117:37"><name pos:start="117:9" pos:end="117:21"><name pos:start="117:9" pos:end="117:11">enc</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:21">codec_id</name></name> <operator pos:start="117:23" pos:end="117:24">==</operator> <name pos:start="117:26" pos:end="117:37">CODEC_ID_MP3</name></expr>)</condition> <block pos:start="117:40" pos:end="131:5">{<block_content pos:start="119:9" pos:end="129:51">

        <expr_stmt pos:start="119:9" pos:end="119:22"><expr pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:15">hdrsize</name> <operator pos:start="119:17" pos:end="119:18">+=</operator> <literal type="number" pos:start="119:20" pos:end="119:21">12</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:48"><expr pos:start="121:9" pos:end="121:47"><call pos:start="121:9" pos:end="121:47"><name pos:start="121:9" pos:end="121:27">bytestream_put_le16</name><argument_list pos:start="121:28" pos:end="121:47">(<argument pos:start="121:29" pos:end="121:43"><expr pos:start="121:29" pos:end="121:43"><operator pos:start="121:29" pos:end="121:29">&amp;</operator><name pos:start="121:30" pos:end="121:43">riff_extradata</name></expr></argument>, <argument pos:start="121:46" pos:end="121:46"><expr pos:start="121:46" pos:end="121:46"><literal type="number" pos:start="121:46" pos:end="121:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="121:53" pos:end="121:61">/* wID */</comment>

        <expr_stmt pos:start="123:9" pos:end="123:48"><expr pos:start="123:9" pos:end="123:47"><call pos:start="123:9" pos:end="123:47"><name pos:start="123:9" pos:end="123:27">bytestream_put_le32</name><argument_list pos:start="123:28" pos:end="123:47">(<argument pos:start="123:29" pos:end="123:43"><expr pos:start="123:29" pos:end="123:43"><operator pos:start="123:29" pos:end="123:29">&amp;</operator><name pos:start="123:30" pos:end="123:43">riff_extradata</name></expr></argument>, <argument pos:start="123:46" pos:end="123:46"><expr pos:start="123:46" pos:end="123:46"><literal type="number" pos:start="123:46" pos:end="123:46">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="123:53" pos:end="123:66">/* fdwFlags */</comment>

        <expr_stmt pos:start="125:9" pos:end="125:51"><expr pos:start="125:9" pos:end="125:50"><call pos:start="125:9" pos:end="125:50"><name pos:start="125:9" pos:end="125:27">bytestream_put_le16</name><argument_list pos:start="125:28" pos:end="125:50">(<argument pos:start="125:29" pos:end="125:43"><expr pos:start="125:29" pos:end="125:43"><operator pos:start="125:29" pos:end="125:29">&amp;</operator><name pos:start="125:30" pos:end="125:43">riff_extradata</name></expr></argument>, <argument pos:start="125:46" pos:end="125:49"><expr pos:start="125:46" pos:end="125:49"><literal type="number" pos:start="125:46" pos:end="125:49">1152</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="125:53" pos:end="125:68">/* nBlockSize */</comment>

        <expr_stmt pos:start="127:9" pos:end="127:48"><expr pos:start="127:9" pos:end="127:47"><call pos:start="127:9" pos:end="127:47"><name pos:start="127:9" pos:end="127:27">bytestream_put_le16</name><argument_list pos:start="127:28" pos:end="127:47">(<argument pos:start="127:29" pos:end="127:43"><expr pos:start="127:29" pos:end="127:43"><operator pos:start="127:29" pos:end="127:29">&amp;</operator><name pos:start="127:30" pos:end="127:43">riff_extradata</name></expr></argument>, <argument pos:start="127:46" pos:end="127:46"><expr pos:start="127:46" pos:end="127:46"><literal type="number" pos:start="127:46" pos:end="127:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="127:53" pos:end="127:73">/* nFramesPerBlock */</comment>

        <expr_stmt pos:start="129:9" pos:end="129:51"><expr pos:start="129:9" pos:end="129:50"><call pos:start="129:9" pos:end="129:50"><name pos:start="129:9" pos:end="129:27">bytestream_put_le16</name><argument_list pos:start="129:28" pos:end="129:50">(<argument pos:start="129:29" pos:end="129:43"><expr pos:start="129:29" pos:end="129:43"><operator pos:start="129:29" pos:end="129:29">&amp;</operator><name pos:start="129:30" pos:end="129:43">riff_extradata</name></expr></argument>, <argument pos:start="129:46" pos:end="129:49"><expr pos:start="129:46" pos:end="129:49"><literal type="number" pos:start="129:46" pos:end="129:49">1393</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="129:53" pos:end="129:69">/* nCodecDelay */</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="131:7" pos:end="151:5">else if <condition pos:start="131:15" pos:end="131:45">(<expr pos:start="131:16" pos:end="131:44"><name pos:start="131:16" pos:end="131:28"><name pos:start="131:16" pos:end="131:18">enc</name><operator pos:start="131:19" pos:end="131:20">-&gt;</operator><name pos:start="131:21" pos:end="131:28">codec_id</name></name> <operator pos:start="131:30" pos:end="131:31">==</operator> <name pos:start="131:33" pos:end="131:44">CODEC_ID_MP2</name></expr>)</condition> <block pos:start="131:47" pos:end="151:5">{<block_content pos:start="133:9" pos:end="149:48">

        <expr_stmt pos:start="133:9" pos:end="133:22"><expr pos:start="133:9" pos:end="133:21"><name pos:start="133:9" pos:end="133:15">hdrsize</name> <operator pos:start="133:17" pos:end="133:18">+=</operator> <literal type="number" pos:start="133:20" pos:end="133:21">22</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:48"><expr pos:start="135:9" pos:end="135:47"><call pos:start="135:9" pos:end="135:47"><name pos:start="135:9" pos:end="135:27">bytestream_put_le16</name><argument_list pos:start="135:28" pos:end="135:47">(<argument pos:start="135:29" pos:end="135:43"><expr pos:start="135:29" pos:end="135:43"><operator pos:start="135:29" pos:end="135:29">&amp;</operator><name pos:start="135:30" pos:end="135:43">riff_extradata</name></expr></argument>, <argument pos:start="135:46" pos:end="135:46"><expr pos:start="135:46" pos:end="135:46"><literal type="number" pos:start="135:46" pos:end="135:46">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                          <comment type="block" pos:start="135:75" pos:end="135:91">/* fwHeadLayer */</comment>

        <expr_stmt pos:start="137:9" pos:end="137:60"><expr pos:start="137:9" pos:end="137:59"><call pos:start="137:9" pos:end="137:59"><name pos:start="137:9" pos:end="137:27">bytestream_put_le32</name><argument_list pos:start="137:28" pos:end="137:59">(<argument pos:start="137:29" pos:end="137:43"><expr pos:start="137:29" pos:end="137:43"><operator pos:start="137:29" pos:end="137:29">&amp;</operator><name pos:start="137:30" pos:end="137:43">riff_extradata</name></expr></argument>, <argument pos:start="137:46" pos:end="137:58"><expr pos:start="137:46" pos:end="137:58"><name pos:start="137:46" pos:end="137:58"><name pos:start="137:46" pos:end="137:48">enc</name><operator pos:start="137:49" pos:end="137:50">-&gt;</operator><name pos:start="137:51" pos:end="137:58">bit_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>              <comment type="block" pos:start="137:75" pos:end="137:93">/* dwHeadBitrate */</comment>

        <expr_stmt pos:start="139:9" pos:end="139:73"><expr pos:start="139:9" pos:end="139:72"><call pos:start="139:9" pos:end="139:72"><name pos:start="139:9" pos:end="139:27">bytestream_put_le16</name><argument_list pos:start="139:28" pos:end="139:72">(<argument pos:start="139:29" pos:end="139:43"><expr pos:start="139:29" pos:end="139:43"><operator pos:start="139:29" pos:end="139:29">&amp;</operator><name pos:start="139:30" pos:end="139:43">riff_extradata</name></expr></argument>, <argument pos:start="139:46" pos:end="139:71"><expr pos:start="139:46" pos:end="139:71"><ternary pos:start="139:46" pos:end="139:71"><condition pos:start="139:46" pos:end="139:65"><expr pos:start="139:46" pos:end="139:63"><name pos:start="139:46" pos:end="139:58"><name pos:start="139:46" pos:end="139:48">enc</name><operator pos:start="139:49" pos:end="139:50">-&gt;</operator><name pos:start="139:51" pos:end="139:58">channels</name></name> <operator pos:start="139:60" pos:end="139:61">==</operator> <literal type="number" pos:start="139:63" pos:end="139:63">2</literal></expr> ?</condition><then pos:start="139:67" pos:end="139:67"> <expr pos:start="139:67" pos:end="139:67"><literal type="number" pos:start="139:67" pos:end="139:67">1</literal></expr> </then><else pos:start="139:69" pos:end="139:71">: <expr pos:start="139:71" pos:end="139:71"><literal type="number" pos:start="139:71" pos:end="139:71">8</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="139:75" pos:end="139:90">/* fwHeadMode */</comment>

        <expr_stmt pos:start="141:9" pos:end="141:48"><expr pos:start="141:9" pos:end="141:47"><call pos:start="141:9" pos:end="141:47"><name pos:start="141:9" pos:end="141:27">bytestream_put_le16</name><argument_list pos:start="141:28" pos:end="141:47">(<argument pos:start="141:29" pos:end="141:43"><expr pos:start="141:29" pos:end="141:43"><operator pos:start="141:29" pos:end="141:29">&amp;</operator><name pos:start="141:30" pos:end="141:43">riff_extradata</name></expr></argument>, <argument pos:start="141:46" pos:end="141:46"><expr pos:start="141:46" pos:end="141:46"><literal type="number" pos:start="141:46" pos:end="141:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                          <comment type="block" pos:start="141:75" pos:end="141:93">/* fwHeadModeExt */</comment>

        <expr_stmt pos:start="143:9" pos:end="143:48"><expr pos:start="143:9" pos:end="143:47"><call pos:start="143:9" pos:end="143:47"><name pos:start="143:9" pos:end="143:27">bytestream_put_le16</name><argument_list pos:start="143:28" pos:end="143:47">(<argument pos:start="143:29" pos:end="143:43"><expr pos:start="143:29" pos:end="143:43"><operator pos:start="143:29" pos:end="143:29">&amp;</operator><name pos:start="143:30" pos:end="143:43">riff_extradata</name></expr></argument>, <argument pos:start="143:46" pos:end="143:46"><expr pos:start="143:46" pos:end="143:46"><literal type="number" pos:start="143:46" pos:end="143:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                          <comment type="block" pos:start="143:75" pos:end="143:93">/* wHeadEmphasis */</comment>

        <expr_stmt pos:start="145:9" pos:end="145:49"><expr pos:start="145:9" pos:end="145:48"><call pos:start="145:9" pos:end="145:48"><name pos:start="145:9" pos:end="145:27">bytestream_put_le16</name><argument_list pos:start="145:28" pos:end="145:48">(<argument pos:start="145:29" pos:end="145:43"><expr pos:start="145:29" pos:end="145:43"><operator pos:start="145:29" pos:end="145:29">&amp;</operator><name pos:start="145:30" pos:end="145:43">riff_extradata</name></expr></argument>, <argument pos:start="145:46" pos:end="145:47"><expr pos:start="145:46" pos:end="145:47"><literal type="number" pos:start="145:46" pos:end="145:47">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                         <comment type="block" pos:start="145:75" pos:end="145:91">/* fwHeadFlags */</comment>

        <expr_stmt pos:start="147:9" pos:end="147:48"><expr pos:start="147:9" pos:end="147:47"><call pos:start="147:9" pos:end="147:47"><name pos:start="147:9" pos:end="147:27">bytestream_put_le32</name><argument_list pos:start="147:28" pos:end="147:47">(<argument pos:start="147:29" pos:end="147:43"><expr pos:start="147:29" pos:end="147:43"><operator pos:start="147:29" pos:end="147:29">&amp;</operator><name pos:start="147:30" pos:end="147:43">riff_extradata</name></expr></argument>, <argument pos:start="147:46" pos:end="147:46"><expr pos:start="147:46" pos:end="147:46"><literal type="number" pos:start="147:46" pos:end="147:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                          <comment type="block" pos:start="147:75" pos:end="147:88">/* dwPTSLow */</comment>

        <expr_stmt pos:start="149:9" pos:end="149:48"><expr pos:start="149:9" pos:end="149:47"><call pos:start="149:9" pos:end="149:47"><name pos:start="149:9" pos:end="149:27">bytestream_put_le32</name><argument_list pos:start="149:28" pos:end="149:47">(<argument pos:start="149:29" pos:end="149:43"><expr pos:start="149:29" pos:end="149:43"><operator pos:start="149:29" pos:end="149:29">&amp;</operator><name pos:start="149:30" pos:end="149:43">riff_extradata</name></expr></argument>, <argument pos:start="149:46" pos:end="149:46"><expr pos:start="149:46" pos:end="149:46"><literal type="number" pos:start="149:46" pos:end="149:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                          <comment type="block" pos:start="149:75" pos:end="149:89">/* dwPTSHigh */</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="151:7" pos:end="157:5">else if <condition pos:start="151:15" pos:end="151:91">(<expr pos:start="151:16" pos:end="151:90"><name pos:start="151:16" pos:end="151:28"><name pos:start="151:16" pos:end="151:18">enc</name><operator pos:start="151:19" pos:end="151:20">-&gt;</operator><name pos:start="151:21" pos:end="151:28">codec_id</name></name> <operator pos:start="151:30" pos:end="151:31">==</operator> <name pos:start="151:33" pos:end="151:47">CODEC_ID_GSM_MS</name> <operator pos:start="151:49" pos:end="151:50">||</operator> <name pos:start="151:52" pos:end="151:64"><name pos:start="151:52" pos:end="151:54">enc</name><operator pos:start="151:55" pos:end="151:56">-&gt;</operator><name pos:start="151:57" pos:end="151:64">codec_id</name></name> <operator pos:start="151:66" pos:end="151:67">==</operator> <name pos:start="151:69" pos:end="151:90">CODEC_ID_ADPCM_IMA_WAV</name></expr>)</condition> <block pos:start="151:93" pos:end="157:5">{<block_content pos:start="153:9" pos:end="155:62">

        <expr_stmt pos:start="153:9" pos:end="153:21"><expr pos:start="153:9" pos:end="153:20"><name pos:start="153:9" pos:end="153:15">hdrsize</name> <operator pos:start="153:17" pos:end="153:18">+=</operator> <literal type="number" pos:start="153:20" pos:end="153:20">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:62"><expr pos:start="155:9" pos:end="155:61"><call pos:start="155:9" pos:end="155:61"><name pos:start="155:9" pos:end="155:27">bytestream_put_le16</name><argument_list pos:start="155:28" pos:end="155:61">(<argument pos:start="155:29" pos:end="155:43"><expr pos:start="155:29" pos:end="155:43"><operator pos:start="155:29" pos:end="155:29">&amp;</operator><name pos:start="155:30" pos:end="155:43">riff_extradata</name></expr></argument>, <argument pos:start="155:46" pos:end="155:60"><expr pos:start="155:46" pos:end="155:60"><name pos:start="155:46" pos:end="155:60"><name pos:start="155:46" pos:end="155:48">enc</name><operator pos:start="155:49" pos:end="155:50">-&gt;</operator><name pos:start="155:51" pos:end="155:60">frame_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="155:64" pos:end="155:85">/* wSamplesPerBlock */</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="157:7" pos:end="165:5">else if<condition pos:start="157:14" pos:end="157:34">(<expr pos:start="157:15" pos:end="157:33"><name pos:start="157:15" pos:end="157:33"><name pos:start="157:15" pos:end="157:17">enc</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:33">extradata_size</name></name></expr>)</condition><block pos:start="157:35" pos:end="165:5">{<block_content pos:start="159:9" pos:end="163:39">

        <expr_stmt pos:start="159:9" pos:end="159:45"><expr pos:start="159:9" pos:end="159:44"><name pos:start="159:9" pos:end="159:28">riff_extradata_start</name><operator pos:start="159:29" pos:end="159:29">=</operator> <name pos:start="159:31" pos:end="159:44"><name pos:start="159:31" pos:end="159:33">enc</name><operator pos:start="159:34" pos:end="159:35">-&gt;</operator><name pos:start="159:36" pos:end="159:44">extradata</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:61"><expr pos:start="161:9" pos:end="161:60"><name pos:start="161:9" pos:end="161:22">riff_extradata</name><operator pos:start="161:23" pos:end="161:23">=</operator> <name pos:start="161:25" pos:end="161:38"><name pos:start="161:25" pos:end="161:27">enc</name><operator pos:start="161:28" pos:end="161:29">-&gt;</operator><name pos:start="161:30" pos:end="161:38">extradata</name></name> <operator pos:start="161:40" pos:end="161:40">+</operator> <name pos:start="161:42" pos:end="161:60"><name pos:start="161:42" pos:end="161:44">enc</name><operator pos:start="161:45" pos:end="161:46">-&gt;</operator><name pos:start="161:47" pos:end="161:60">extradata_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:39"><expr pos:start="163:9" pos:end="163:38"><name pos:start="163:9" pos:end="163:15">hdrsize</name> <operator pos:start="163:17" pos:end="163:18">+=</operator> <name pos:start="163:20" pos:end="163:38"><name pos:start="163:20" pos:end="163:22">enc</name><operator pos:start="163:23" pos:end="163:24">-&gt;</operator><name pos:start="163:25" pos:end="163:38">extradata_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="165:7" pos:end="169:5">else if <condition pos:start="165:15" pos:end="165:37">(<expr pos:start="165:16" pos:end="165:36"><operator pos:start="165:16" pos:end="165:16">!</operator><name pos:start="165:17" pos:end="165:36">waveformatextensible</name></expr>)</condition><block pos:start="165:38" pos:end="169:5">{<block_content pos:start="167:9" pos:end="167:21">

        <expr_stmt pos:start="167:9" pos:end="167:21"><expr pos:start="167:9" pos:end="167:20"><name pos:start="167:9" pos:end="167:15">hdrsize</name> <operator pos:start="167:17" pos:end="167:18">-=</operator> <literal type="number" pos:start="167:20" pos:end="167:20">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="171:5" pos:end="193:5"><if pos:start="171:5" pos:end="189:5">if<condition pos:start="171:7" pos:end="171:28">(<expr pos:start="171:8" pos:end="171:27"><name pos:start="171:8" pos:end="171:27">waveformatextensible</name></expr>)</condition> <block pos:start="171:30" pos:end="189:5">{<block_content pos:start="173:9" pos:end="187:34">                                    <comment type="block" pos:start="171:67" pos:end="171:109">/* write WAVEFORMATEXTENSIBLE extensions */</comment>

        <expr_stmt pos:start="173:9" pos:end="173:22"><expr pos:start="173:9" pos:end="173:21"><name pos:start="173:9" pos:end="173:15">hdrsize</name> <operator pos:start="173:17" pos:end="173:18">+=</operator> <literal type="number" pos:start="173:20" pos:end="173:21">22</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:66"><expr pos:start="175:9" pos:end="175:65"><call pos:start="175:9" pos:end="175:65"><name pos:start="175:9" pos:end="175:17">avio_wl16</name><argument_list pos:start="175:18" pos:end="175:65">(<argument pos:start="175:19" pos:end="175:20"><expr pos:start="175:19" pos:end="175:20"><name pos:start="175:19" pos:end="175:20">pb</name></expr></argument>, <argument pos:start="175:23" pos:end="175:64"><expr pos:start="175:23" pos:end="175:64"><name pos:start="175:23" pos:end="175:36">riff_extradata</name> <operator pos:start="175:38" pos:end="175:38">-</operator> <name pos:start="175:40" pos:end="175:59">riff_extradata_start</name> <operator pos:start="175:61" pos:end="175:61">+</operator> <literal type="number" pos:start="175:63" pos:end="175:64">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="175:68" pos:end="175:104">/* 22 is WAVEFORMATEXTENSIBLE size */</comment>

        <expr_stmt pos:start="177:9" pos:end="177:50"><expr pos:start="177:9" pos:end="177:49"><call pos:start="177:9" pos:end="177:49"><name pos:start="177:9" pos:end="177:17">avio_wl16</name><argument_list pos:start="177:18" pos:end="177:49">(<argument pos:start="177:19" pos:end="177:20"><expr pos:start="177:19" pos:end="177:20"><name pos:start="177:19" pos:end="177:20">pb</name></expr></argument>, <argument pos:start="177:23" pos:end="177:48"><expr pos:start="177:23" pos:end="177:48"><name pos:start="177:23" pos:end="177:48"><name pos:start="177:23" pos:end="177:25">enc</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:48">bits_per_coded_sample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                 <comment type="block" pos:start="177:68" pos:end="177:122">/* ValidBitsPerSample || SamplesPerBlock || Reserved */</comment>

        <expr_stmt pos:start="179:9" pos:end="179:43"><expr pos:start="179:9" pos:end="179:42"><call pos:start="179:9" pos:end="179:42"><name pos:start="179:9" pos:end="179:17">avio_wl32</name><argument_list pos:start="179:18" pos:end="179:42">(<argument pos:start="179:19" pos:end="179:20"><expr pos:start="179:19" pos:end="179:20"><name pos:start="179:19" pos:end="179:20">pb</name></expr></argument>, <argument pos:start="179:23" pos:end="179:41"><expr pos:start="179:23" pos:end="179:41"><name pos:start="179:23" pos:end="179:41"><name pos:start="179:23" pos:end="179:25">enc</name><operator pos:start="179:26" pos:end="179:27">-&gt;</operator><name pos:start="179:28" pos:end="179:41">channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                        <comment type="block" pos:start="179:68" pos:end="179:86">/* dwChannelMask */</comment>

        <expr_stmt pos:start="181:9" pos:end="181:38"><expr pos:start="181:9" pos:end="181:37"><call pos:start="181:9" pos:end="181:37"><name pos:start="181:9" pos:end="181:17">avio_wl32</name><argument_list pos:start="181:18" pos:end="181:37">(<argument pos:start="181:19" pos:end="181:20"><expr pos:start="181:19" pos:end="181:20"><name pos:start="181:19" pos:end="181:20">pb</name></expr></argument>, <argument pos:start="181:23" pos:end="181:36"><expr pos:start="181:23" pos:end="181:36"><name pos:start="181:23" pos:end="181:36"><name pos:start="181:23" pos:end="181:25">enc</name><operator pos:start="181:26" pos:end="181:27">-&gt;</operator><name pos:start="181:28" pos:end="181:36">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                             <comment type="block" pos:start="181:68" pos:end="181:86">/* GUID + next 3 */</comment>

        <expr_stmt pos:start="183:9" pos:end="183:34"><expr pos:start="183:9" pos:end="183:33"><call pos:start="183:9" pos:end="183:33"><name pos:start="183:9" pos:end="183:17">avio_wl32</name><argument_list pos:start="183:18" pos:end="183:33">(<argument pos:start="183:19" pos:end="183:20"><expr pos:start="183:19" pos:end="183:20"><name pos:start="183:19" pos:end="183:20">pb</name></expr></argument>, <argument pos:start="183:23" pos:end="183:32"><expr pos:start="183:23" pos:end="183:32"><literal type="number" pos:start="183:23" pos:end="183:32">0x00100000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:34"><expr pos:start="185:9" pos:end="185:33"><call pos:start="185:9" pos:end="185:33"><name pos:start="185:9" pos:end="185:17">avio_wl32</name><argument_list pos:start="185:18" pos:end="185:33">(<argument pos:start="185:19" pos:end="185:20"><expr pos:start="185:19" pos:end="185:20"><name pos:start="185:19" pos:end="185:20">pb</name></expr></argument>, <argument pos:start="185:23" pos:end="185:32"><expr pos:start="185:23" pos:end="185:32"><literal type="number" pos:start="185:23" pos:end="185:32">0xAA000080</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:34"><expr pos:start="187:9" pos:end="187:33"><call pos:start="187:9" pos:end="187:33"><name pos:start="187:9" pos:end="187:17">avio_wl32</name><argument_list pos:start="187:18" pos:end="187:33">(<argument pos:start="187:19" pos:end="187:20"><expr pos:start="187:19" pos:end="187:20"><name pos:start="187:19" pos:end="187:20">pb</name></expr></argument>, <argument pos:start="187:23" pos:end="187:32"><expr pos:start="187:23" pos:end="187:32"><literal type="number" pos:start="187:23" pos:end="187:32">0x719B3800</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="189:7" pos:end="193:5">else if<condition pos:start="189:14" pos:end="189:52">(<expr pos:start="189:15" pos:end="189:51"><name pos:start="189:15" pos:end="189:28">riff_extradata</name> <operator pos:start="189:30" pos:end="189:30">-</operator> <name pos:start="189:32" pos:end="189:51">riff_extradata_start</name></expr>)</condition> <block pos:start="189:54" pos:end="193:5">{<block_content pos:start="191:9" pos:end="191:61">

        <expr_stmt pos:start="191:9" pos:end="191:61"><expr pos:start="191:9" pos:end="191:60"><call pos:start="191:9" pos:end="191:60"><name pos:start="191:9" pos:end="191:17">avio_wl16</name><argument_list pos:start="191:18" pos:end="191:60">(<argument pos:start="191:19" pos:end="191:20"><expr pos:start="191:19" pos:end="191:20"><name pos:start="191:19" pos:end="191:20">pb</name></expr></argument>, <argument pos:start="191:23" pos:end="191:59"><expr pos:start="191:23" pos:end="191:59"><name pos:start="191:23" pos:end="191:36">riff_extradata</name> <operator pos:start="191:38" pos:end="191:38">-</operator> <name pos:start="191:40" pos:end="191:59">riff_extradata_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:80"><expr pos:start="195:5" pos:end="195:79"><call pos:start="195:5" pos:end="195:79"><name pos:start="195:5" pos:end="195:14">avio_write</name><argument_list pos:start="195:15" pos:end="195:79">(<argument pos:start="195:16" pos:end="195:17"><expr pos:start="195:16" pos:end="195:17"><name pos:start="195:16" pos:end="195:17">pb</name></expr></argument>, <argument pos:start="195:20" pos:end="195:39"><expr pos:start="195:20" pos:end="195:39"><name pos:start="195:20" pos:end="195:39">riff_extradata_start</name></expr></argument>, <argument pos:start="195:42" pos:end="195:78"><expr pos:start="195:42" pos:end="195:78"><name pos:start="195:42" pos:end="195:55">riff_extradata</name> <operator pos:start="195:57" pos:end="195:57">-</operator> <name pos:start="195:59" pos:end="195:78">riff_extradata_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="197:5" pos:end="203:5"><if pos:start="197:5" pos:end="203:5">if<condition pos:start="197:7" pos:end="197:17">(<expr pos:start="197:8" pos:end="197:16"><name pos:start="197:8" pos:end="197:14">hdrsize</name><operator pos:start="197:15" pos:end="197:15">&amp;</operator><literal type="number" pos:start="197:16" pos:end="197:16">1</literal></expr>)</condition><block pos:start="197:18" pos:end="203:5">{<block_content pos:start="199:9" pos:end="201:23">

        <expr_stmt pos:start="199:9" pos:end="199:18"><expr pos:start="199:9" pos:end="199:17"><name pos:start="199:9" pos:end="199:15">hdrsize</name><operator pos:start="199:16" pos:end="199:17">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:23"><expr pos:start="201:9" pos:end="201:22"><call pos:start="201:9" pos:end="201:22"><name pos:start="201:9" pos:end="201:15">avio_w8</name><argument_list pos:start="201:16" pos:end="201:22">(<argument pos:start="201:17" pos:end="201:18"><expr pos:start="201:17" pos:end="201:18"><name pos:start="201:17" pos:end="201:18">pb</name></expr></argument>, <argument pos:start="201:21" pos:end="201:21"><expr pos:start="201:21" pos:end="201:21"><literal type="number" pos:start="201:21" pos:end="201:21">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="207:5" pos:end="207:19">return <expr pos:start="207:12" pos:end="207:18"><name pos:start="207:12" pos:end="207:18">hdrsize</name></expr>;</return>

</block_content>}</block></function>
</unit>
