<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18873.c" pos:tabs="8"><function pos:start="1:1" pos:end="11:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">cpu_outb</name><parameter_list pos:start="1:14" pos:end="1:43">(<parameter pos:start="1:15" pos:end="1:29"><decl pos:start="1:15" pos:end="1:29"><type pos:start="1:15" pos:end="1:29"><name pos:start="1:15" pos:end="1:24">pio_addr_t</name></type> <name pos:start="1:26" pos:end="1:29">addr</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:38">uint8_t</name></type> <name pos:start="1:40" pos:end="1:42">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="11:1">{<block_content pos:start="5:5" pos:end="9:31">

    <expr_stmt pos:start="5:5" pos:end="5:65"><expr pos:start="5:5" pos:end="5:64"><call pos:start="5:5" pos:end="5:64"><name pos:start="5:5" pos:end="5:14">LOG_IOPORT</name><argument_list pos:start="5:15" pos:end="5:64">(<argument pos:start="5:16" pos:end="5:52"><expr pos:start="5:16" pos:end="5:52"><literal type="string" pos:start="5:16" pos:end="5:26">"outb: %04"</literal><name pos:start="5:27" pos:end="5:37">FMT_pioaddr</name><literal type="string" pos:start="5:38" pos:end="5:43">" %02"</literal><name pos:start="5:44" pos:end="5:48">PRIx8</name><literal type="string" pos:start="5:49" pos:end="5:52">"\n"</literal></expr></argument>, <argument pos:start="5:55" pos:end="5:58"><expr pos:start="5:55" pos:end="5:58"><name pos:start="5:55" pos:end="5:58">addr</name></expr></argument>, <argument pos:start="5:61" pos:end="5:63"><expr pos:start="5:61" pos:end="5:63"><name pos:start="5:61" pos:end="5:63">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:29"><expr pos:start="7:5" pos:end="7:28"><call pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:17">trace_cpu_out</name><argument_list pos:start="7:18" pos:end="7:28">(<argument pos:start="7:19" pos:end="7:22"><expr pos:start="7:19" pos:end="7:22"><name pos:start="7:19" pos:end="7:22">addr</name></expr></argument>, <argument pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:27">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:31"><expr pos:start="9:5" pos:end="9:30"><call pos:start="9:5" pos:end="9:30"><name pos:start="9:5" pos:end="9:16">ioport_write</name><argument_list pos:start="9:17" pos:end="9:30">(<argument pos:start="9:18" pos:end="9:18"><expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></argument>, <argument pos:start="9:21" pos:end="9:24"><expr pos:start="9:21" pos:end="9:24"><name pos:start="9:21" pos:end="9:24">addr</name></expr></argument>, <argument pos:start="9:27" pos:end="9:29"><expr pos:start="9:27" pos:end="9:29"><name pos:start="9:27" pos:end="9:29">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
