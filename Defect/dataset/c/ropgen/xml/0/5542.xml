<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5542.c" pos:tabs="8"><function pos:start="1:1" pos:end="277:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">build_filter</name><parameter_list pos:start="1:24" pos:end="3:57">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:39">ResampleContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">c</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:48">void</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:56">filter</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:64">double</name></type> <name pos:start="1:66" pos:end="1:71">factor</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:86"><decl pos:start="1:74" pos:end="1:86"><type pos:start="1:74" pos:end="1:86"><name pos:start="1:74" pos:end="1:76">int</name></type> <name pos:start="1:78" pos:end="1:86">tap_count</name></decl></parameter>, <parameter pos:start="1:89" pos:end="1:97"><decl pos:start="1:89" pos:end="1:97"><type pos:start="1:89" pos:end="1:97"><name pos:start="1:89" pos:end="1:91">int</name></type> <name pos:start="1:93" pos:end="1:97">alloc</name></decl></parameter>, <parameter pos:start="1:100" pos:end="1:114"><decl pos:start="1:100" pos:end="1:114"><type pos:start="1:100" pos:end="1:114"><name pos:start="1:100" pos:end="1:102">int</name></type> <name pos:start="1:104" pos:end="1:114">phase_count</name></decl></parameter>, <parameter pos:start="1:117" pos:end="1:125"><decl pos:start="1:117" pos:end="1:125"><type pos:start="1:117" pos:end="1:125"><name pos:start="1:117" pos:end="1:119">int</name></type> <name pos:start="1:121" pos:end="1:125">scale</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:39"><decl pos:start="3:25" pos:end="3:39"><type pos:start="3:25" pos:end="3:39"><name pos:start="3:25" pos:end="3:27">int</name></type> <name pos:start="3:29" pos:end="3:39">filter_type</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:56"><decl pos:start="3:42" pos:end="3:56"><type pos:start="3:42" pos:end="3:56"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:56">kaiser_beta</name></decl></parameter>)</parameter_list><block pos:start="3:58" pos:end="277:1">{<block_content pos:start="5:5" pos:end="275:13">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">ph</name></decl>, <decl pos:start="5:13" pos:end="5:13"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:13">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">double</name></type> <name pos:start="7:12" pos:end="7:12">x</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:15" pos:end="7:15">y</name></decl>, <decl pos:start="7:18" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:18" pos:end="7:18">w</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:62"><decl pos:start="9:5" pos:end="9:61"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:10">double</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:15">tab</name> <init pos:start="9:17" pos:end="9:61">= <expr pos:start="9:19" pos:end="9:61"><call pos:start="9:19" pos:end="9:61"><name pos:start="9:19" pos:end="9:33">av_malloc_array</name><argument_list pos:start="9:34" pos:end="9:61">(<argument pos:start="9:35" pos:end="9:45"><expr pos:start="9:35" pos:end="9:45"><name pos:start="9:35" pos:end="9:43">tap_count</name><operator pos:start="9:44" pos:end="9:44">+</operator><literal type="number" pos:start="9:45" pos:end="9:45">1</literal></expr></argument>,  <argument pos:start="9:49" pos:end="9:60"><expr pos:start="9:49" pos:end="9:60"><sizeof pos:start="9:49" pos:end="9:60">sizeof<argument_list pos:start="9:55" pos:end="9:60">(<argument pos:start="9:56" pos:end="9:59"><expr pos:start="9:56" pos:end="9:59"><operator pos:start="9:56" pos:end="9:56">*</operator><name pos:start="9:57" pos:end="9:59">tab</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:20">center</name><init pos:start="11:21" pos:end="11:37">= <expr pos:start="11:23" pos:end="11:37"><operator pos:start="11:23" pos:end="11:23">(</operator><name pos:start="11:24" pos:end="11:32">tap_count</name><operator pos:start="11:33" pos:end="11:33">-</operator><literal type="number" pos:start="11:34" pos:end="11:34">1</literal><operator pos:start="11:35" pos:end="11:35">)</operator><operator pos:start="11:36" pos:end="11:36">/</operator><literal type="number" pos:start="11:37" pos:end="11:37">2</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:12">tab</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:60">/* if upsampling, only need to interpolate, no filter */</comment>

    <if_stmt pos:start="23:5" pos:end="25:21"><if pos:start="23:5" pos:end="25:21">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:14">factor</name> <operator pos:start="23:16" pos:end="23:16">&gt;</operator> <literal type="number" pos:start="23:18" pos:end="23:20">1.0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:21"><block_content pos:start="25:9" pos:end="25:21">

        <expr_stmt pos:start="25:9" pos:end="25:21"><expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:14">factor</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:20">1.0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:57"><expr pos:start="29:5" pos:end="29:56"><call pos:start="29:5" pos:end="29:56"><name pos:start="29:5" pos:end="29:14">av_assert0</name><argument_list pos:start="29:15" pos:end="29:56">(<argument pos:start="29:16" pos:end="29:55"><expr pos:start="29:16" pos:end="29:55"><name pos:start="29:16" pos:end="29:26">phase_count</name> <operator pos:start="29:28" pos:end="29:29">==</operator> <literal type="number" pos:start="29:31" pos:end="29:31">1</literal> <operator pos:start="29:33" pos:end="29:34">||</operator> <name pos:start="29:36" pos:end="29:46">phase_count</name> <operator pos:start="29:48" pos:end="29:48">%</operator> <literal type="number" pos:start="29:50" pos:end="29:50">2</literal> <operator pos:start="29:52" pos:end="29:53">==</operator> <literal type="number" pos:start="29:55" pos:end="29:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="31:5" pos:end="270:0">for<control pos:start="31:8" pos:end="31:44">(<init pos:start="31:9" pos:end="31:15"><expr pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:10">ph</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:38"><expr pos:start="31:17" pos:end="31:37"><name pos:start="31:17" pos:end="31:18">ph</name> <operator pos:start="31:20" pos:end="31:21">&lt;=</operator> <name pos:start="31:23" pos:end="31:33">phase_count</name> <operator pos:start="31:35" pos:end="31:35">/</operator> <literal type="number" pos:start="31:37" pos:end="31:37">2</literal></expr>;</condition> <incr pos:start="31:40" pos:end="31:43"><expr pos:start="31:40" pos:end="31:43"><name pos:start="31:40" pos:end="31:41">ph</name><operator pos:start="31:42" pos:end="31:43">++</operator></expr></incr>)</control> <block pos:start="31:46" pos:end="270:0">{<block_content pos:start="33:9" pos:end="195:9">

        <decl_stmt pos:start="33:9" pos:end="33:24"><decl pos:start="33:9" pos:end="33:23"><type pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:14">double</name></type> <name pos:start="33:16" pos:end="33:19">norm</name> <init pos:start="33:21" pos:end="33:23">= <expr pos:start="33:23" pos:end="33:23"><literal type="number" pos:start="33:23" pos:end="33:23">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="35:9" pos:end="87:9">for<control pos:start="35:12" pos:end="35:33">(<init pos:start="35:13" pos:end="35:16"><expr pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:13">i</name><operator pos:start="35:14" pos:end="35:14">=</operator><literal type="number" pos:start="35:15" pos:end="35:15">0</literal></expr>;</init><condition pos:start="35:17" pos:end="35:29"><expr pos:start="35:17" pos:end="35:28"><name pos:start="35:17" pos:end="35:17">i</name><operator pos:start="35:18" pos:end="35:19">&lt;=</operator><name pos:start="35:20" pos:end="35:28">tap_count</name></expr>;</condition><incr pos:start="35:30" pos:end="35:32"><expr pos:start="35:30" pos:end="35:32"><name pos:start="35:30" pos:end="35:30">i</name><operator pos:start="35:31" pos:end="35:32">++</operator></expr></incr>)</control> <block pos:start="35:35" pos:end="87:9">{<block_content pos:start="37:13" pos:end="85:26">

            <expr_stmt pos:start="37:13" pos:end="37:82"><expr pos:start="37:13" pos:end="37:81"><name pos:start="37:13" pos:end="37:13">x</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:20">M_PI</name> <operator pos:start="37:22" pos:end="37:22">*</operator> <operator pos:start="37:24" pos:end="37:24">(</operator><operator pos:start="37:25" pos:end="37:25">(</operator><name pos:start="37:26" pos:end="37:31">double</name><operator pos:start="37:32" pos:end="37:32">)</operator><operator pos:start="37:33" pos:end="37:33">(</operator><name pos:start="37:34" pos:end="37:34">i</name> <operator pos:start="37:36" pos:end="37:36">-</operator> <name pos:start="37:38" pos:end="37:43">center</name><operator pos:start="37:44" pos:end="37:44">)</operator> <operator pos:start="37:46" pos:end="37:46">-</operator> <operator pos:start="37:48" pos:end="37:48">(</operator><name pos:start="37:49" pos:end="37:54">double</name><operator pos:start="37:55" pos:end="37:55">)</operator><name pos:start="37:56" pos:end="37:57">ph</name> <operator pos:start="37:59" pos:end="37:59">/</operator> <name pos:start="37:61" pos:end="37:71">phase_count</name><operator pos:start="37:72" pos:end="37:72">)</operator> <operator pos:start="37:74" pos:end="37:74">*</operator> <name pos:start="37:76" pos:end="37:81">factor</name></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="41:39"><if pos:start="39:13" pos:end="39:32">if <condition pos:start="39:16" pos:end="39:23">(<expr pos:start="39:17" pos:end="39:22"><name pos:start="39:17" pos:end="39:17">x</name> <operator pos:start="39:19" pos:end="39:20">==</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal></expr>)</condition><block type="pseudo" pos:start="39:25" pos:end="39:32"><block_content pos:start="39:25" pos:end="39:32"> <expr_stmt pos:start="39:25" pos:end="39:32"><expr pos:start="39:25" pos:end="39:31"><name pos:start="39:25" pos:end="39:25">y</name> <operator pos:start="39:27" pos:end="39:27">=</operator> <literal type="number" pos:start="39:29" pos:end="39:31">1.0</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="41:13" pos:end="41:39">else<block type="pseudo" pos:start="41:25" pos:end="41:39"><block_content pos:start="41:25" pos:end="41:39">        <expr_stmt pos:start="41:25" pos:end="41:39"><expr pos:start="41:25" pos:end="41:38"><name pos:start="41:25" pos:end="41:25">y</name> <operator pos:start="41:27" pos:end="41:27">=</operator> <call pos:start="41:29" pos:end="41:34"><name pos:start="41:29" pos:end="41:31">sin</name><argument_list pos:start="41:32" pos:end="41:34">(<argument pos:start="41:33" pos:end="41:33"><expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">x</name></expr></argument>)</argument_list></call> <operator pos:start="41:36" pos:end="41:36">/</operator> <name pos:start="41:38" pos:end="41:38">x</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <switch pos:start="43:13" pos:end="77:13">switch<condition pos:start="43:19" pos:end="43:31">(<expr pos:start="43:20" pos:end="43:30"><name pos:start="43:20" pos:end="43:30">filter_type</name></expr>)</condition><block pos:start="43:32" pos:end="77:13">{<block_content pos:start="45:13" pos:end="75:30">

            <case pos:start="45:13" pos:end="45:39">case <expr pos:start="45:18" pos:end="45:38"><name pos:start="45:18" pos:end="45:38">SWR_FILTER_TYPE_CUBIC</name></expr>:</case><block pos:start="45:40" pos:end="55:23">{<block_content pos:start="47:17" pos:end="55:22">

                <decl_stmt pos:start="47:17" pos:end="47:36"><decl pos:start="47:17" pos:end="47:35"><type pos:start="47:17" pos:end="47:27"><specifier pos:start="47:17" pos:end="47:21">const</specifier> <name pos:start="47:23" pos:end="47:27">float</name></type> <name pos:start="47:29" pos:end="47:29">d</name><init pos:start="47:30" pos:end="47:35">= <expr pos:start="47:32" pos:end="47:35"><operator pos:start="47:32" pos:end="47:32">-</operator><literal type="number" pos:start="47:33" pos:end="47:35">0.5</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="47:38" pos:end="47:68">//first order derivative = -0.5</comment>

                <expr_stmt pos:start="49:17" pos:end="49:85"><expr pos:start="49:17" pos:end="49:84"><name pos:start="49:17" pos:end="49:17">x</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <call pos:start="49:21" pos:end="49:84"><name pos:start="49:21" pos:end="49:24">fabs</name><argument_list pos:start="49:25" pos:end="49:84">(<argument pos:start="49:26" pos:end="49:83"><expr pos:start="49:26" pos:end="49:83"><operator pos:start="49:26" pos:end="49:26">(</operator><operator pos:start="49:27" pos:end="49:27">(</operator><name pos:start="49:28" pos:end="49:33">double</name><operator pos:start="49:34" pos:end="49:34">)</operator><operator pos:start="49:35" pos:end="49:35">(</operator><name pos:start="49:36" pos:end="49:36">i</name> <operator pos:start="49:38" pos:end="49:38">-</operator> <name pos:start="49:40" pos:end="49:45">center</name><operator pos:start="49:46" pos:end="49:46">)</operator> <operator pos:start="49:48" pos:end="49:48">-</operator> <operator pos:start="49:50" pos:end="49:50">(</operator><name pos:start="49:51" pos:end="49:56">double</name><operator pos:start="49:57" pos:end="49:57">)</operator><name pos:start="49:58" pos:end="49:59">ph</name> <operator pos:start="49:61" pos:end="49:61">/</operator> <name pos:start="49:63" pos:end="49:73">phase_count</name><operator pos:start="49:74" pos:end="49:74">)</operator> <operator pos:start="49:76" pos:end="49:76">*</operator> <name pos:start="49:78" pos:end="49:83">factor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="51:17" pos:end="53:80"><if pos:start="51:17" pos:end="51:80">if<condition pos:start="51:19" pos:end="51:25">(<expr pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:20">x</name><operator pos:start="51:21" pos:end="51:21">&lt;</operator><literal type="number" pos:start="51:22" pos:end="51:24">1.0</literal></expr>)</condition><block type="pseudo" pos:start="51:27" pos:end="51:80"><block_content pos:start="51:27" pos:end="51:80"> <expr_stmt pos:start="51:27" pos:end="51:80"><expr pos:start="51:27" pos:end="51:79"><name pos:start="51:27" pos:end="51:27">y</name><operator pos:start="51:28" pos:end="51:28">=</operator> <literal type="number" pos:start="51:30" pos:end="51:32">1</literal> <operator pos:start="51:32" pos:end="51:32">-</operator> <literal type="number" pos:start="51:34" pos:end="51:34">3</literal><operator pos:start="51:35" pos:end="51:35">*</operator><name pos:start="51:36" pos:end="51:36">x</name><operator pos:start="51:37" pos:end="51:37">*</operator><name pos:start="51:38" pos:end="51:38">x</name> <operator pos:start="51:40" pos:end="51:40">+</operator> <literal type="number" pos:start="51:42" pos:end="51:42">2</literal><operator pos:start="51:43" pos:end="51:43">*</operator><name pos:start="51:44" pos:end="51:44">x</name><operator pos:start="51:45" pos:end="51:45">*</operator><name pos:start="51:46" pos:end="51:46">x</name><operator pos:start="51:47" pos:end="51:47">*</operator><name pos:start="51:48" pos:end="51:48">x</name> <operator pos:start="51:50" pos:end="51:50">+</operator> <name pos:start="51:52" pos:end="51:52">d</name><operator pos:start="51:53" pos:end="51:53">*</operator><operator pos:start="51:54" pos:end="51:54">(</operator>            <operator pos:start="51:67" pos:end="51:67">-</operator><name pos:start="51:68" pos:end="51:68">x</name><operator pos:start="51:69" pos:end="51:69">*</operator><name pos:start="51:70" pos:end="51:70">x</name> <operator pos:start="51:72" pos:end="51:72">+</operator> <name pos:start="51:74" pos:end="51:74">x</name><operator pos:start="51:75" pos:end="51:75">*</operator><name pos:start="51:76" pos:end="51:76">x</name><operator pos:start="51:77" pos:end="51:77">*</operator><name pos:start="51:78" pos:end="51:78">x</name><operator pos:start="51:79" pos:end="51:79">)</operator></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="53:17" pos:end="53:80">else<block type="pseudo" pos:start="53:27" pos:end="53:80"><block_content pos:start="53:27" pos:end="53:80">      <expr_stmt pos:start="53:27" pos:end="53:80"><expr pos:start="53:27" pos:end="53:79"><name pos:start="53:27" pos:end="53:27">y</name><operator pos:start="53:28" pos:end="53:28">=</operator>                       <name pos:start="53:52" pos:end="53:52">d</name><operator pos:start="53:53" pos:end="53:53">*</operator><operator pos:start="53:54" pos:end="53:54">(</operator><operator pos:start="53:55" pos:end="53:55">-</operator><literal type="number" pos:start="53:56" pos:end="53:58">4</literal> <operator pos:start="53:58" pos:end="53:58">+</operator> <literal type="number" pos:start="53:60" pos:end="53:60">8</literal><operator pos:start="53:61" pos:end="53:61">*</operator><name pos:start="53:62" pos:end="53:62">x</name> <operator pos:start="53:64" pos:end="53:64">-</operator> <literal type="number" pos:start="53:66" pos:end="53:66">5</literal><operator pos:start="53:67" pos:end="53:67">*</operator><name pos:start="53:68" pos:end="53:68">x</name><operator pos:start="53:69" pos:end="53:69">*</operator><name pos:start="53:70" pos:end="53:70">x</name> <operator pos:start="53:72" pos:end="53:72">+</operator> <name pos:start="53:74" pos:end="53:74">x</name><operator pos:start="53:75" pos:end="53:75">*</operator><name pos:start="53:76" pos:end="53:76">x</name><operator pos:start="53:77" pos:end="53:77">*</operator><name pos:start="53:78" pos:end="53:78">x</name><operator pos:start="53:79" pos:end="53:79">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <break pos:start="55:17" pos:end="55:22">break;</break></block_content>}</block>

            <case pos:start="57:13" pos:end="57:50">case <expr pos:start="57:18" pos:end="57:49"><name pos:start="57:18" pos:end="57:49">SWR_FILTER_TYPE_BLACKMAN_NUTTALL</name></expr>:</case>

                <expr_stmt pos:start="59:17" pos:end="59:54"><expr pos:start="59:17" pos:end="59:53"><name pos:start="59:17" pos:end="59:17">w</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <literal type="number" pos:start="59:21" pos:end="59:23">2.0</literal><operator pos:start="59:24" pos:end="59:24">*</operator><name pos:start="59:25" pos:end="59:25">x</name> <operator pos:start="59:27" pos:end="59:27">/</operator> <operator pos:start="59:29" pos:end="59:29">(</operator><name pos:start="59:30" pos:end="59:35">factor</name><operator pos:start="59:36" pos:end="59:36">*</operator><name pos:start="59:37" pos:end="59:45">tap_count</name><operator pos:start="59:46" pos:end="59:46">)</operator> <operator pos:start="59:48" pos:end="59:48">+</operator> <name pos:start="59:50" pos:end="59:53">M_PI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:98"><expr pos:start="61:17" pos:end="61:97"><name pos:start="61:17" pos:end="61:17">y</name> <operator pos:start="61:19" pos:end="61:20">*=</operator> <literal type="number" pos:start="61:22" pos:end="61:32">0.3635819</literal> <operator pos:start="61:32" pos:end="61:32">-</operator> <literal type="number" pos:start="61:34" pos:end="61:42">0.4891775</literal> <operator pos:start="61:44" pos:end="61:44">*</operator> <call pos:start="61:46" pos:end="61:51"><name pos:start="61:46" pos:end="61:48">cos</name><argument_list pos:start="61:49" pos:end="61:51">(<argument pos:start="61:50" pos:end="61:50"><expr pos:start="61:50" pos:end="61:50"><name pos:start="61:50" pos:end="61:50">w</name></expr></argument>)</argument_list></call> <operator pos:start="61:53" pos:end="61:53">+</operator> <literal type="number" pos:start="61:55" pos:end="61:63">0.1365995</literal> <operator pos:start="61:65" pos:end="61:65">*</operator> <call pos:start="61:67" pos:end="61:74"><name pos:start="61:67" pos:end="61:69">cos</name><argument_list pos:start="61:70" pos:end="61:74">(<argument pos:start="61:71" pos:end="61:73"><expr pos:start="61:71" pos:end="61:73"><literal type="number" pos:start="61:71" pos:end="61:71">2</literal><operator pos:start="61:72" pos:end="61:72">*</operator><name pos:start="61:73" pos:end="61:73">w</name></expr></argument>)</argument_list></call> <operator pos:start="61:76" pos:end="61:76">-</operator> <literal type="number" pos:start="61:78" pos:end="61:86">0.0106411</literal> <operator pos:start="61:88" pos:end="61:88">*</operator> <call pos:start="61:90" pos:end="61:97"><name pos:start="61:90" pos:end="61:92">cos</name><argument_list pos:start="61:93" pos:end="61:97">(<argument pos:start="61:94" pos:end="61:96"><expr pos:start="61:94" pos:end="61:96"><literal type="number" pos:start="61:94" pos:end="61:94">3</literal><operator pos:start="61:95" pos:end="61:95">*</operator><name pos:start="61:96" pos:end="61:96">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="63:17" pos:end="63:22">break;</break>

            <case pos:start="65:13" pos:end="65:40">case <expr pos:start="65:18" pos:end="65:39"><name pos:start="65:18" pos:end="65:39">SWR_FILTER_TYPE_KAISER</name></expr>:</case>

                <expr_stmt pos:start="67:17" pos:end="67:52"><expr pos:start="67:17" pos:end="67:51"><name pos:start="67:17" pos:end="67:17">w</name> <operator pos:start="67:19" pos:end="67:19">=</operator> <literal type="number" pos:start="67:21" pos:end="67:23">2.0</literal><operator pos:start="67:24" pos:end="67:24">*</operator><name pos:start="67:25" pos:end="67:25">x</name> <operator pos:start="67:27" pos:end="67:27">/</operator> <operator pos:start="67:29" pos:end="67:29">(</operator><name pos:start="67:30" pos:end="67:35">factor</name><operator pos:start="67:36" pos:end="67:36">*</operator><name pos:start="67:37" pos:end="67:45">tap_count</name><operator pos:start="67:46" pos:end="67:46">*</operator><name pos:start="67:47" pos:end="67:50">M_PI</name><operator pos:start="67:51" pos:end="67:51">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:63"><expr pos:start="69:17" pos:end="69:62"><name pos:start="69:17" pos:end="69:17">y</name> <operator pos:start="69:19" pos:end="69:20">*=</operator> <call pos:start="69:22" pos:end="69:62"><name pos:start="69:22" pos:end="69:27">bessel</name><argument_list pos:start="69:28" pos:end="69:62">(<argument pos:start="69:29" pos:end="69:61"><expr pos:start="69:29" pos:end="69:61"><name pos:start="69:29" pos:end="69:39">kaiser_beta</name><operator pos:start="69:40" pos:end="69:40">*</operator><call pos:start="69:41" pos:end="69:61"><name pos:start="69:41" pos:end="69:44">sqrt</name><argument_list pos:start="69:45" pos:end="69:61">(<argument pos:start="69:46" pos:end="69:60"><expr pos:start="69:46" pos:end="69:60"><call pos:start="69:46" pos:end="69:60"><name pos:start="69:46" pos:end="69:50">FFMAX</name><argument_list pos:start="69:51" pos:end="69:60">(<argument pos:start="69:52" pos:end="69:56"><expr pos:start="69:52" pos:end="69:56"><literal type="number" pos:start="69:52" pos:end="69:53">1</literal><operator pos:start="69:53" pos:end="69:53">-</operator><name pos:start="69:54" pos:end="69:54">w</name><operator pos:start="69:55" pos:end="69:55">*</operator><name pos:start="69:56" pos:end="69:56">w</name></expr></argument>, <argument pos:start="69:59" pos:end="69:59"><expr pos:start="69:59" pos:end="69:59"><literal type="number" pos:start="69:59" pos:end="69:59">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="71:17" pos:end="71:22">break;</break>

            <default pos:start="73:13" pos:end="73:20">default:</default>

                <expr_stmt pos:start="75:17" pos:end="75:30"><expr pos:start="75:17" pos:end="75:29"><call pos:start="75:17" pos:end="75:29"><name pos:start="75:17" pos:end="75:26">av_assert0</name><argument_list pos:start="75:27" pos:end="75:29">(<argument pos:start="75:28" pos:end="75:28"><expr pos:start="75:28" pos:end="75:28"><literal type="number" pos:start="75:28" pos:end="75:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>



            <expr_stmt pos:start="81:13" pos:end="81:23"><expr pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:18"><name pos:start="81:13" pos:end="81:15">tab</name><index pos:start="81:16" pos:end="81:18">[<expr pos:start="81:17" pos:end="81:17"><name pos:start="81:17" pos:end="81:17">i</name></expr>]</index></name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:22">y</name></expr>;</expr_stmt>

            <if_stmt pos:start="83:13" pos:end="85:26"><if pos:start="83:13" pos:end="85:26">if <condition pos:start="83:16" pos:end="83:30">(<expr pos:start="83:17" pos:end="83:29"><name pos:start="83:17" pos:end="83:17">i</name> <operator pos:start="83:19" pos:end="83:19">&lt;</operator> <name pos:start="83:21" pos:end="83:29">tap_count</name></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:26"><block_content pos:start="85:17" pos:end="85:26">

                <expr_stmt pos:start="85:17" pos:end="85:26"><expr pos:start="85:17" pos:end="85:25"><name pos:start="85:17" pos:end="85:20">norm</name> <operator pos:start="85:22" pos:end="85:23">+=</operator> <name pos:start="85:25" pos:end="85:25">y</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="91:9" pos:end="91:65">/* normalize so that an uniform color remains the same */</comment>

        <switch pos:start="93:9" pos:end="195:9">switch<condition pos:start="93:15" pos:end="93:25">(<expr pos:start="93:16" pos:end="93:24"><name pos:start="93:16" pos:end="93:24"><name pos:start="93:16" pos:end="93:16">c</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:24">format</name></name></expr>)</condition><block pos:start="93:26" pos:end="195:9">{<block_content pos:start="95:9" pos:end="193:18">

        <case pos:start="95:9" pos:end="95:32">case <expr pos:start="95:14" pos:end="95:31"><name pos:start="95:14" pos:end="95:31">AV_SAMPLE_FMT_S16P</name></expr>:</case>

            <for pos:start="97:13" pos:end="99:114">for<control pos:start="97:16" pos:end="97:36">(<init pos:start="97:17" pos:end="97:20"><expr pos:start="97:17" pos:end="97:19"><name pos:start="97:17" pos:end="97:17">i</name><operator pos:start="97:18" pos:end="97:18">=</operator><literal type="number" pos:start="97:19" pos:end="97:19">0</literal></expr>;</init><condition pos:start="97:21" pos:end="97:32"><expr pos:start="97:21" pos:end="97:31"><name pos:start="97:21" pos:end="97:21">i</name><operator pos:start="97:22" pos:end="97:22">&lt;</operator><name pos:start="97:23" pos:end="97:31">tap_count</name></expr>;</condition><incr pos:start="97:33" pos:end="97:35"><expr pos:start="97:33" pos:end="97:35"><name pos:start="97:33" pos:end="97:33">i</name><operator pos:start="97:34" pos:end="97:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="99:17" pos:end="99:114"><block_content pos:start="99:17" pos:end="99:114">

                <expr_stmt pos:start="99:17" pos:end="99:114"><expr pos:start="99:17" pos:end="99:113"><operator pos:start="99:17" pos:end="99:17">(</operator><operator pos:start="99:18" pos:end="99:18">(</operator><name pos:start="99:19" pos:end="99:25">int16_t</name><operator pos:start="99:26" pos:end="99:26">*</operator><operator pos:start="99:27" pos:end="99:27">)</operator><name pos:start="99:28" pos:end="99:33">filter</name><operator pos:start="99:34" pos:end="99:34">)</operator><index pos:start="99:35" pos:end="99:50">[<expr pos:start="99:36" pos:end="99:49"><name pos:start="99:36" pos:end="99:37">ph</name> <operator pos:start="99:39" pos:end="99:39">*</operator> <name pos:start="99:41" pos:end="99:45">alloc</name> <operator pos:start="99:47" pos:end="99:47">+</operator> <name pos:start="99:49" pos:end="99:49">i</name></expr>]</index> <operator pos:start="99:52" pos:end="99:52">=</operator> <call pos:start="99:54" pos:end="99:113"><name pos:start="99:54" pos:end="99:60">av_clip</name><argument_list pos:start="99:61" pos:end="99:113">(<argument pos:start="99:62" pos:end="99:90"><expr pos:start="99:62" pos:end="99:90"><call pos:start="99:62" pos:end="99:90"><name pos:start="99:62" pos:end="99:67">lrintf</name><argument_list pos:start="99:68" pos:end="99:90">(<argument pos:start="99:69" pos:end="99:89"><expr pos:start="99:69" pos:end="99:89"><name pos:start="99:69" pos:end="99:74"><name pos:start="99:69" pos:end="99:71">tab</name><index pos:start="99:72" pos:end="99:74">[<expr pos:start="99:73" pos:end="99:73"><name pos:start="99:73" pos:end="99:73">i</name></expr>]</index></name> <operator pos:start="99:76" pos:end="99:76">*</operator> <name pos:start="99:78" pos:end="99:82">scale</name> <operator pos:start="99:84" pos:end="99:84">/</operator> <name pos:start="99:86" pos:end="99:89">norm</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:93" pos:end="99:101"><expr pos:start="99:93" pos:end="99:101"><name pos:start="99:93" pos:end="99:101">INT16_MIN</name></expr></argument>, <argument pos:start="99:104" pos:end="99:112"><expr pos:start="99:104" pos:end="99:112"><name pos:start="99:104" pos:end="99:112">INT16_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <if_stmt pos:start="101:13" pos:end="117:13"><if pos:start="101:13" pos:end="107:13">if <condition pos:start="101:16" pos:end="101:35">(<expr pos:start="101:17" pos:end="101:34"><name pos:start="101:17" pos:end="101:25">tap_count</name> <operator pos:start="101:27" pos:end="101:27">%</operator> <literal type="number" pos:start="101:29" pos:end="101:29">2</literal> <operator pos:start="101:31" pos:end="101:32">==</operator> <literal type="number" pos:start="101:34" pos:end="101:34">0</literal></expr>)</condition> <block pos:start="101:37" pos:end="107:13">{<block_content pos:start="103:17" pos:end="105:118">

                <for pos:start="103:17" pos:end="105:118">for <control pos:start="103:21" pos:end="103:47">(<init pos:start="103:22" pos:end="103:27"><expr pos:start="103:22" pos:end="103:26"><name pos:start="103:22" pos:end="103:22">i</name> <operator pos:start="103:24" pos:end="103:24">=</operator> <literal type="number" pos:start="103:26" pos:end="103:26">0</literal></expr>;</init> <condition pos:start="103:29" pos:end="103:42"><expr pos:start="103:29" pos:end="103:41"><name pos:start="103:29" pos:end="103:29">i</name> <operator pos:start="103:31" pos:end="103:31">&lt;</operator> <name pos:start="103:33" pos:end="103:41">tap_count</name></expr>;</condition> <incr pos:start="103:44" pos:end="103:46"><expr pos:start="103:44" pos:end="103:46"><name pos:start="103:44" pos:end="103:44">i</name><operator pos:start="103:45" pos:end="103:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="105:21" pos:end="105:118"><block_content pos:start="105:21" pos:end="105:118">

                    <expr_stmt pos:start="105:21" pos:end="105:118"><expr pos:start="105:21" pos:end="105:117"><operator pos:start="105:21" pos:end="105:21">(</operator><operator pos:start="105:22" pos:end="105:22">(</operator><name pos:start="105:23" pos:end="105:29">int16_t</name><operator pos:start="105:30" pos:end="105:30">*</operator><operator pos:start="105:31" pos:end="105:31">)</operator><name pos:start="105:32" pos:end="105:37">filter</name><operator pos:start="105:38" pos:end="105:38">)</operator><index pos:start="105:39" pos:end="105:80">[<expr pos:start="105:40" pos:end="105:79"><operator pos:start="105:40" pos:end="105:40">(</operator><name pos:start="105:41" pos:end="105:51">phase_count</name><operator pos:start="105:52" pos:end="105:52">-</operator><name pos:start="105:53" pos:end="105:54">ph</name><operator pos:start="105:55" pos:end="105:55">)</operator> <operator pos:start="105:57" pos:end="105:57">*</operator> <name pos:start="105:59" pos:end="105:63">alloc</name> <operator pos:start="105:65" pos:end="105:65">+</operator> <name pos:start="105:67" pos:end="105:75">tap_count</name><operator pos:start="105:76" pos:end="105:76">-</operator><literal type="number" pos:start="105:77" pos:end="105:78">1</literal><operator pos:start="105:78" pos:end="105:78">-</operator><name pos:start="105:79" pos:end="105:79">i</name></expr>]</index> <operator pos:start="105:82" pos:end="105:82">=</operator> <operator pos:start="105:84" pos:end="105:84">(</operator><operator pos:start="105:85" pos:end="105:85">(</operator><name pos:start="105:86" pos:end="105:92">int16_t</name><operator pos:start="105:93" pos:end="105:93">*</operator><operator pos:start="105:94" pos:end="105:94">)</operator><name pos:start="105:95" pos:end="105:100">filter</name><operator pos:start="105:101" pos:end="105:101">)</operator><index pos:start="105:102" pos:end="105:117">[<expr pos:start="105:103" pos:end="105:116"><name pos:start="105:103" pos:end="105:104">ph</name> <operator pos:start="105:106" pos:end="105:106">*</operator> <name pos:start="105:108" pos:end="105:112">alloc</name> <operator pos:start="105:114" pos:end="105:114">+</operator> <name pos:start="105:116" pos:end="105:116">i</name></expr>]</index></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if>

            <else pos:start="109:13" pos:end="117:13">else <block pos:start="109:18" pos:end="117:13">{<block_content pos:start="111:17" pos:end="115:113">

                <for pos:start="111:17" pos:end="115:113">for <control pos:start="111:21" pos:end="111:48">(<init pos:start="111:22" pos:end="111:27"><expr pos:start="111:22" pos:end="111:26"><name pos:start="111:22" pos:end="111:22">i</name> <operator pos:start="111:24" pos:end="111:24">=</operator> <literal type="number" pos:start="111:26" pos:end="111:26">1</literal></expr>;</init> <condition pos:start="111:29" pos:end="111:43"><expr pos:start="111:29" pos:end="111:42"><name pos:start="111:29" pos:end="111:29">i</name> <operator pos:start="111:31" pos:end="111:32">&lt;=</operator> <name pos:start="111:34" pos:end="111:42">tap_count</name></expr>;</condition> <incr pos:start="111:45" pos:end="111:47"><expr pos:start="111:45" pos:end="111:47"><name pos:start="111:45" pos:end="111:45">i</name><operator pos:start="111:46" pos:end="111:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="113:21" pos:end="115:113"><block_content pos:start="113:21" pos:end="115:113">

                    <expr_stmt pos:start="113:21" pos:end="115:113"><expr pos:start="113:21" pos:end="115:112"><operator pos:start="113:21" pos:end="113:21">(</operator><operator pos:start="113:22" pos:end="113:22">(</operator><name pos:start="113:23" pos:end="113:29">int16_t</name><operator pos:start="113:30" pos:end="113:30">*</operator><operator pos:start="113:31" pos:end="113:31">)</operator><name pos:start="113:32" pos:end="113:37">filter</name><operator pos:start="113:38" pos:end="113:38">)</operator><index pos:start="113:39" pos:end="113:78">[<expr pos:start="113:40" pos:end="113:77"><operator pos:start="113:40" pos:end="113:40">(</operator><name pos:start="113:41" pos:end="113:51">phase_count</name><operator pos:start="113:52" pos:end="113:52">-</operator><name pos:start="113:53" pos:end="113:54">ph</name><operator pos:start="113:55" pos:end="113:55">)</operator> <operator pos:start="113:57" pos:end="113:57">*</operator> <name pos:start="113:59" pos:end="113:63">alloc</name> <operator pos:start="113:65" pos:end="113:65">+</operator> <name pos:start="113:67" pos:end="113:75">tap_count</name><operator pos:start="113:76" pos:end="113:76">-</operator><name pos:start="113:77" pos:end="113:77">i</name></expr>]</index> <operator pos:start="113:80" pos:end="113:80">=</operator>

                        <call pos:start="115:25" pos:end="115:112"><name pos:start="115:25" pos:end="115:31">av_clip</name><argument_list pos:start="115:32" pos:end="115:112">(<argument pos:start="115:33" pos:end="115:89"><expr pos:start="115:33" pos:end="115:89"><call pos:start="115:33" pos:end="115:89"><name pos:start="115:33" pos:end="115:38">lrintf</name><argument_list pos:start="115:39" pos:end="115:89">(<argument pos:start="115:40" pos:end="115:88"><expr pos:start="115:40" pos:end="115:88"><name pos:start="115:40" pos:end="115:45"><name pos:start="115:40" pos:end="115:42">tab</name><index pos:start="115:43" pos:end="115:45">[<expr pos:start="115:44" pos:end="115:44"><name pos:start="115:44" pos:end="115:44">i</name></expr>]</index></name> <operator pos:start="115:47" pos:end="115:47">*</operator> <name pos:start="115:49" pos:end="115:53">scale</name> <operator pos:start="115:55" pos:end="115:55">/</operator> <operator pos:start="115:57" pos:end="115:57">(</operator><name pos:start="115:58" pos:end="115:61">norm</name> <operator pos:start="115:63" pos:end="115:63">-</operator> <name pos:start="115:65" pos:end="115:70"><name pos:start="115:65" pos:end="115:67">tab</name><index pos:start="115:68" pos:end="115:70">[<expr pos:start="115:69" pos:end="115:69"><literal type="number" pos:start="115:69" pos:end="115:69">0</literal></expr>]</index></name> <operator pos:start="115:72" pos:end="115:72">+</operator> <name pos:start="115:74" pos:end="115:87"><name pos:start="115:74" pos:end="115:76">tab</name><index pos:start="115:77" pos:end="115:87">[<expr pos:start="115:78" pos:end="115:86"><name pos:start="115:78" pos:end="115:86">tap_count</name></expr>]</index></name><operator pos:start="115:88" pos:end="115:88">)</operator></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="115:92" pos:end="115:100"><expr pos:start="115:92" pos:end="115:100"><name pos:start="115:92" pos:end="115:100">INT16_MIN</name></expr></argument>, <argument pos:start="115:103" pos:end="115:111"><expr pos:start="115:103" pos:end="115:111"><name pos:start="115:103" pos:end="115:111">INT16_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <break pos:start="119:13" pos:end="119:18">break;</break>

        <case pos:start="121:9" pos:end="121:32">case <expr pos:start="121:14" pos:end="121:31"><name pos:start="121:14" pos:end="121:31">AV_SAMPLE_FMT_S32P</name></expr>:</case>

            <for pos:start="123:13" pos:end="125:99">for<control pos:start="123:16" pos:end="123:36">(<init pos:start="123:17" pos:end="123:20"><expr pos:start="123:17" pos:end="123:19"><name pos:start="123:17" pos:end="123:17">i</name><operator pos:start="123:18" pos:end="123:18">=</operator><literal type="number" pos:start="123:19" pos:end="123:19">0</literal></expr>;</init><condition pos:start="123:21" pos:end="123:32"><expr pos:start="123:21" pos:end="123:31"><name pos:start="123:21" pos:end="123:21">i</name><operator pos:start="123:22" pos:end="123:22">&lt;</operator><name pos:start="123:23" pos:end="123:31">tap_count</name></expr>;</condition><incr pos:start="123:33" pos:end="123:35"><expr pos:start="123:33" pos:end="123:35"><name pos:start="123:33" pos:end="123:33">i</name><operator pos:start="123:34" pos:end="123:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="125:17" pos:end="125:99"><block_content pos:start="125:17" pos:end="125:99">

                <expr_stmt pos:start="125:17" pos:end="125:99"><expr pos:start="125:17" pos:end="125:98"><operator pos:start="125:17" pos:end="125:17">(</operator><operator pos:start="125:18" pos:end="125:18">(</operator><name pos:start="125:19" pos:end="125:25">int32_t</name><operator pos:start="125:26" pos:end="125:26">*</operator><operator pos:start="125:27" pos:end="125:27">)</operator><name pos:start="125:28" pos:end="125:33">filter</name><operator pos:start="125:34" pos:end="125:34">)</operator><index pos:start="125:35" pos:end="125:50">[<expr pos:start="125:36" pos:end="125:49"><name pos:start="125:36" pos:end="125:37">ph</name> <operator pos:start="125:39" pos:end="125:39">*</operator> <name pos:start="125:41" pos:end="125:45">alloc</name> <operator pos:start="125:47" pos:end="125:47">+</operator> <name pos:start="125:49" pos:end="125:49">i</name></expr>]</index> <operator pos:start="125:52" pos:end="125:52">=</operator> <call pos:start="125:54" pos:end="125:98"><name pos:start="125:54" pos:end="125:67">av_clipl_int32</name><argument_list pos:start="125:68" pos:end="125:98">(<argument pos:start="125:69" pos:end="125:97"><expr pos:start="125:69" pos:end="125:97"><call pos:start="125:69" pos:end="125:97"><name pos:start="125:69" pos:end="125:74">llrint</name><argument_list pos:start="125:75" pos:end="125:97">(<argument pos:start="125:76" pos:end="125:96"><expr pos:start="125:76" pos:end="125:96"><name pos:start="125:76" pos:end="125:81"><name pos:start="125:76" pos:end="125:78">tab</name><index pos:start="125:79" pos:end="125:81">[<expr pos:start="125:80" pos:end="125:80"><name pos:start="125:80" pos:end="125:80">i</name></expr>]</index></name> <operator pos:start="125:83" pos:end="125:83">*</operator> <name pos:start="125:85" pos:end="125:89">scale</name> <operator pos:start="125:91" pos:end="125:91">/</operator> <name pos:start="125:93" pos:end="125:96">norm</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <if_stmt pos:start="127:13" pos:end="143:13"><if pos:start="127:13" pos:end="133:13">if <condition pos:start="127:16" pos:end="127:35">(<expr pos:start="127:17" pos:end="127:34"><name pos:start="127:17" pos:end="127:25">tap_count</name> <operator pos:start="127:27" pos:end="127:27">%</operator> <literal type="number" pos:start="127:29" pos:end="127:29">2</literal> <operator pos:start="127:31" pos:end="127:32">==</operator> <literal type="number" pos:start="127:34" pos:end="127:34">0</literal></expr>)</condition> <block pos:start="127:37" pos:end="133:13">{<block_content pos:start="129:17" pos:end="131:118">

                <for pos:start="129:17" pos:end="131:118">for <control pos:start="129:21" pos:end="129:47">(<init pos:start="129:22" pos:end="129:27"><expr pos:start="129:22" pos:end="129:26"><name pos:start="129:22" pos:end="129:22">i</name> <operator pos:start="129:24" pos:end="129:24">=</operator> <literal type="number" pos:start="129:26" pos:end="129:26">0</literal></expr>;</init> <condition pos:start="129:29" pos:end="129:42"><expr pos:start="129:29" pos:end="129:41"><name pos:start="129:29" pos:end="129:29">i</name> <operator pos:start="129:31" pos:end="129:31">&lt;</operator> <name pos:start="129:33" pos:end="129:41">tap_count</name></expr>;</condition> <incr pos:start="129:44" pos:end="129:46"><expr pos:start="129:44" pos:end="129:46"><name pos:start="129:44" pos:end="129:44">i</name><operator pos:start="129:45" pos:end="129:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="131:21" pos:end="131:118"><block_content pos:start="131:21" pos:end="131:118">

                    <expr_stmt pos:start="131:21" pos:end="131:118"><expr pos:start="131:21" pos:end="131:117"><operator pos:start="131:21" pos:end="131:21">(</operator><operator pos:start="131:22" pos:end="131:22">(</operator><name pos:start="131:23" pos:end="131:29">int32_t</name><operator pos:start="131:30" pos:end="131:30">*</operator><operator pos:start="131:31" pos:end="131:31">)</operator><name pos:start="131:32" pos:end="131:37">filter</name><operator pos:start="131:38" pos:end="131:38">)</operator><index pos:start="131:39" pos:end="131:80">[<expr pos:start="131:40" pos:end="131:79"><operator pos:start="131:40" pos:end="131:40">(</operator><name pos:start="131:41" pos:end="131:51">phase_count</name><operator pos:start="131:52" pos:end="131:52">-</operator><name pos:start="131:53" pos:end="131:54">ph</name><operator pos:start="131:55" pos:end="131:55">)</operator> <operator pos:start="131:57" pos:end="131:57">*</operator> <name pos:start="131:59" pos:end="131:63">alloc</name> <operator pos:start="131:65" pos:end="131:65">+</operator> <name pos:start="131:67" pos:end="131:75">tap_count</name><operator pos:start="131:76" pos:end="131:76">-</operator><literal type="number" pos:start="131:77" pos:end="131:78">1</literal><operator pos:start="131:78" pos:end="131:78">-</operator><name pos:start="131:79" pos:end="131:79">i</name></expr>]</index> <operator pos:start="131:82" pos:end="131:82">=</operator> <operator pos:start="131:84" pos:end="131:84">(</operator><operator pos:start="131:85" pos:end="131:85">(</operator><name pos:start="131:86" pos:end="131:92">int32_t</name><operator pos:start="131:93" pos:end="131:93">*</operator><operator pos:start="131:94" pos:end="131:94">)</operator><name pos:start="131:95" pos:end="131:100">filter</name><operator pos:start="131:101" pos:end="131:101">)</operator><index pos:start="131:102" pos:end="131:117">[<expr pos:start="131:103" pos:end="131:116"><name pos:start="131:103" pos:end="131:104">ph</name> <operator pos:start="131:106" pos:end="131:106">*</operator> <name pos:start="131:108" pos:end="131:112">alloc</name> <operator pos:start="131:114" pos:end="131:114">+</operator> <name pos:start="131:116" pos:end="131:116">i</name></expr>]</index></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if>

            <else pos:start="135:13" pos:end="143:13">else <block pos:start="135:18" pos:end="143:13">{<block_content pos:start="137:17" pos:end="141:98">

                <for pos:start="137:17" pos:end="141:98">for <control pos:start="137:21" pos:end="137:48">(<init pos:start="137:22" pos:end="137:27"><expr pos:start="137:22" pos:end="137:26"><name pos:start="137:22" pos:end="137:22">i</name> <operator pos:start="137:24" pos:end="137:24">=</operator> <literal type="number" pos:start="137:26" pos:end="137:26">1</literal></expr>;</init> <condition pos:start="137:29" pos:end="137:43"><expr pos:start="137:29" pos:end="137:42"><name pos:start="137:29" pos:end="137:29">i</name> <operator pos:start="137:31" pos:end="137:32">&lt;=</operator> <name pos:start="137:34" pos:end="137:42">tap_count</name></expr>;</condition> <incr pos:start="137:45" pos:end="137:47"><expr pos:start="137:45" pos:end="137:47"><name pos:start="137:45" pos:end="137:45">i</name><operator pos:start="137:46" pos:end="137:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="139:21" pos:end="141:98"><block_content pos:start="139:21" pos:end="141:98">

                    <expr_stmt pos:start="139:21" pos:end="141:98"><expr pos:start="139:21" pos:end="141:97"><operator pos:start="139:21" pos:end="139:21">(</operator><operator pos:start="139:22" pos:end="139:22">(</operator><name pos:start="139:23" pos:end="139:29">int32_t</name><operator pos:start="139:30" pos:end="139:30">*</operator><operator pos:start="139:31" pos:end="139:31">)</operator><name pos:start="139:32" pos:end="139:37">filter</name><operator pos:start="139:38" pos:end="139:38">)</operator><index pos:start="139:39" pos:end="139:78">[<expr pos:start="139:40" pos:end="139:77"><operator pos:start="139:40" pos:end="139:40">(</operator><name pos:start="139:41" pos:end="139:51">phase_count</name><operator pos:start="139:52" pos:end="139:52">-</operator><name pos:start="139:53" pos:end="139:54">ph</name><operator pos:start="139:55" pos:end="139:55">)</operator> <operator pos:start="139:57" pos:end="139:57">*</operator> <name pos:start="139:59" pos:end="139:63">alloc</name> <operator pos:start="139:65" pos:end="139:65">+</operator> <name pos:start="139:67" pos:end="139:75">tap_count</name><operator pos:start="139:76" pos:end="139:76">-</operator><name pos:start="139:77" pos:end="139:77">i</name></expr>]</index> <operator pos:start="139:80" pos:end="139:80">=</operator>

                        <call pos:start="141:25" pos:end="141:97"><name pos:start="141:25" pos:end="141:38">av_clipl_int32</name><argument_list pos:start="141:39" pos:end="141:97">(<argument pos:start="141:40" pos:end="141:96"><expr pos:start="141:40" pos:end="141:96"><call pos:start="141:40" pos:end="141:96"><name pos:start="141:40" pos:end="141:45">llrint</name><argument_list pos:start="141:46" pos:end="141:96">(<argument pos:start="141:47" pos:end="141:95"><expr pos:start="141:47" pos:end="141:95"><name pos:start="141:47" pos:end="141:52"><name pos:start="141:47" pos:end="141:49">tab</name><index pos:start="141:50" pos:end="141:52">[<expr pos:start="141:51" pos:end="141:51"><name pos:start="141:51" pos:end="141:51">i</name></expr>]</index></name> <operator pos:start="141:54" pos:end="141:54">*</operator> <name pos:start="141:56" pos:end="141:60">scale</name> <operator pos:start="141:62" pos:end="141:62">/</operator> <operator pos:start="141:64" pos:end="141:64">(</operator><name pos:start="141:65" pos:end="141:68">norm</name> <operator pos:start="141:70" pos:end="141:70">-</operator> <name pos:start="141:72" pos:end="141:77"><name pos:start="141:72" pos:end="141:74">tab</name><index pos:start="141:75" pos:end="141:77">[<expr pos:start="141:76" pos:end="141:76"><literal type="number" pos:start="141:76" pos:end="141:76">0</literal></expr>]</index></name> <operator pos:start="141:79" pos:end="141:79">+</operator> <name pos:start="141:81" pos:end="141:94"><name pos:start="141:81" pos:end="141:83">tab</name><index pos:start="141:84" pos:end="141:94">[<expr pos:start="141:85" pos:end="141:93"><name pos:start="141:85" pos:end="141:93">tap_count</name></expr>]</index></name><operator pos:start="141:95" pos:end="141:95">)</operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <break pos:start="145:13" pos:end="145:18">break;</break>

        <case pos:start="147:9" pos:end="147:32">case <expr pos:start="147:14" pos:end="147:31"><name pos:start="147:14" pos:end="147:31">AV_SAMPLE_FMT_FLTP</name></expr>:</case>

            <for pos:start="149:13" pos:end="151:73">for<control pos:start="149:16" pos:end="149:36">(<init pos:start="149:17" pos:end="149:20"><expr pos:start="149:17" pos:end="149:19"><name pos:start="149:17" pos:end="149:17">i</name><operator pos:start="149:18" pos:end="149:18">=</operator><literal type="number" pos:start="149:19" pos:end="149:19">0</literal></expr>;</init><condition pos:start="149:21" pos:end="149:32"><expr pos:start="149:21" pos:end="149:31"><name pos:start="149:21" pos:end="149:21">i</name><operator pos:start="149:22" pos:end="149:22">&lt;</operator><name pos:start="149:23" pos:end="149:31">tap_count</name></expr>;</condition><incr pos:start="149:33" pos:end="149:35"><expr pos:start="149:33" pos:end="149:35"><name pos:start="149:33" pos:end="149:33">i</name><operator pos:start="149:34" pos:end="149:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="151:17" pos:end="151:73"><block_content pos:start="151:17" pos:end="151:73">

                <expr_stmt pos:start="151:17" pos:end="151:73"><expr pos:start="151:17" pos:end="151:72"><operator pos:start="151:17" pos:end="151:17">(</operator><operator pos:start="151:18" pos:end="151:18">(</operator><name pos:start="151:19" pos:end="151:23">float</name><operator pos:start="151:24" pos:end="151:24">*</operator><operator pos:start="151:25" pos:end="151:25">)</operator><name pos:start="151:26" pos:end="151:31">filter</name><operator pos:start="151:32" pos:end="151:32">)</operator><index pos:start="151:33" pos:end="151:48">[<expr pos:start="151:34" pos:end="151:47"><name pos:start="151:34" pos:end="151:35">ph</name> <operator pos:start="151:37" pos:end="151:37">*</operator> <name pos:start="151:39" pos:end="151:43">alloc</name> <operator pos:start="151:45" pos:end="151:45">+</operator> <name pos:start="151:47" pos:end="151:47">i</name></expr>]</index> <operator pos:start="151:50" pos:end="151:50">=</operator> <name pos:start="151:52" pos:end="151:57"><name pos:start="151:52" pos:end="151:54">tab</name><index pos:start="151:55" pos:end="151:57">[<expr pos:start="151:56" pos:end="151:56"><name pos:start="151:56" pos:end="151:56">i</name></expr>]</index></name> <operator pos:start="151:59" pos:end="151:59">*</operator> <name pos:start="151:61" pos:end="151:65">scale</name> <operator pos:start="151:67" pos:end="151:67">/</operator> <name pos:start="151:69" pos:end="151:72">norm</name></expr>;</expr_stmt></block_content></block></for>

            <if_stmt pos:start="153:13" pos:end="167:13"><if pos:start="153:13" pos:end="159:13">if <condition pos:start="153:16" pos:end="153:35">(<expr pos:start="153:17" pos:end="153:34"><name pos:start="153:17" pos:end="153:25">tap_count</name> <operator pos:start="153:27" pos:end="153:27">%</operator> <literal type="number" pos:start="153:29" pos:end="153:29">2</literal> <operator pos:start="153:31" pos:end="153:32">==</operator> <literal type="number" pos:start="153:34" pos:end="153:34">0</literal></expr>)</condition> <block pos:start="153:37" pos:end="159:13">{<block_content pos:start="155:17" pos:end="157:114">

                <for pos:start="155:17" pos:end="157:114">for <control pos:start="155:21" pos:end="155:47">(<init pos:start="155:22" pos:end="155:27"><expr pos:start="155:22" pos:end="155:26"><name pos:start="155:22" pos:end="155:22">i</name> <operator pos:start="155:24" pos:end="155:24">=</operator> <literal type="number" pos:start="155:26" pos:end="155:26">0</literal></expr>;</init> <condition pos:start="155:29" pos:end="155:42"><expr pos:start="155:29" pos:end="155:41"><name pos:start="155:29" pos:end="155:29">i</name> <operator pos:start="155:31" pos:end="155:31">&lt;</operator> <name pos:start="155:33" pos:end="155:41">tap_count</name></expr>;</condition> <incr pos:start="155:44" pos:end="155:46"><expr pos:start="155:44" pos:end="155:46"><name pos:start="155:44" pos:end="155:44">i</name><operator pos:start="155:45" pos:end="155:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="157:21" pos:end="157:114"><block_content pos:start="157:21" pos:end="157:114">

                    <expr_stmt pos:start="157:21" pos:end="157:114"><expr pos:start="157:21" pos:end="157:113"><operator pos:start="157:21" pos:end="157:21">(</operator><operator pos:start="157:22" pos:end="157:22">(</operator><name pos:start="157:23" pos:end="157:27">float</name><operator pos:start="157:28" pos:end="157:28">*</operator><operator pos:start="157:29" pos:end="157:29">)</operator><name pos:start="157:30" pos:end="157:35">filter</name><operator pos:start="157:36" pos:end="157:36">)</operator><index pos:start="157:37" pos:end="157:78">[<expr pos:start="157:38" pos:end="157:77"><operator pos:start="157:38" pos:end="157:38">(</operator><name pos:start="157:39" pos:end="157:49">phase_count</name><operator pos:start="157:50" pos:end="157:50">-</operator><name pos:start="157:51" pos:end="157:52">ph</name><operator pos:start="157:53" pos:end="157:53">)</operator> <operator pos:start="157:55" pos:end="157:55">*</operator> <name pos:start="157:57" pos:end="157:61">alloc</name> <operator pos:start="157:63" pos:end="157:63">+</operator> <name pos:start="157:65" pos:end="157:73">tap_count</name><operator pos:start="157:74" pos:end="157:74">-</operator><literal type="number" pos:start="157:75" pos:end="157:76">1</literal><operator pos:start="157:76" pos:end="157:76">-</operator><name pos:start="157:77" pos:end="157:77">i</name></expr>]</index> <operator pos:start="157:80" pos:end="157:80">=</operator> <operator pos:start="157:82" pos:end="157:82">(</operator><operator pos:start="157:83" pos:end="157:83">(</operator><name pos:start="157:84" pos:end="157:88">float</name><operator pos:start="157:89" pos:end="157:89">*</operator><operator pos:start="157:90" pos:end="157:90">)</operator><name pos:start="157:91" pos:end="157:96">filter</name><operator pos:start="157:97" pos:end="157:97">)</operator><index pos:start="157:98" pos:end="157:113">[<expr pos:start="157:99" pos:end="157:112"><name pos:start="157:99" pos:end="157:100">ph</name> <operator pos:start="157:102" pos:end="157:102">*</operator> <name pos:start="157:104" pos:end="157:108">alloc</name> <operator pos:start="157:110" pos:end="157:110">+</operator> <name pos:start="157:112" pos:end="157:112">i</name></expr>]</index></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if>

            <else pos:start="161:13" pos:end="167:13">else <block pos:start="161:18" pos:end="167:13">{<block_content pos:start="163:17" pos:end="165:129">

                <for pos:start="163:17" pos:end="165:129">for <control pos:start="163:21" pos:end="163:48">(<init pos:start="163:22" pos:end="163:27"><expr pos:start="163:22" pos:end="163:26"><name pos:start="163:22" pos:end="163:22">i</name> <operator pos:start="163:24" pos:end="163:24">=</operator> <literal type="number" pos:start="163:26" pos:end="163:26">1</literal></expr>;</init> <condition pos:start="163:29" pos:end="163:43"><expr pos:start="163:29" pos:end="163:42"><name pos:start="163:29" pos:end="163:29">i</name> <operator pos:start="163:31" pos:end="163:32">&lt;=</operator> <name pos:start="163:34" pos:end="163:42">tap_count</name></expr>;</condition> <incr pos:start="163:45" pos:end="163:47"><expr pos:start="163:45" pos:end="163:47"><name pos:start="163:45" pos:end="163:45">i</name><operator pos:start="163:46" pos:end="163:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="165:21" pos:end="165:129"><block_content pos:start="165:21" pos:end="165:129">

                    <expr_stmt pos:start="165:21" pos:end="165:129"><expr pos:start="165:21" pos:end="165:128"><operator pos:start="165:21" pos:end="165:21">(</operator><operator pos:start="165:22" pos:end="165:22">(</operator><name pos:start="165:23" pos:end="165:27">float</name><operator pos:start="165:28" pos:end="165:28">*</operator><operator pos:start="165:29" pos:end="165:29">)</operator><name pos:start="165:30" pos:end="165:35">filter</name><operator pos:start="165:36" pos:end="165:36">)</operator><index pos:start="165:37" pos:end="165:76">[<expr pos:start="165:38" pos:end="165:75"><operator pos:start="165:38" pos:end="165:38">(</operator><name pos:start="165:39" pos:end="165:49">phase_count</name><operator pos:start="165:50" pos:end="165:50">-</operator><name pos:start="165:51" pos:end="165:52">ph</name><operator pos:start="165:53" pos:end="165:53">)</operator> <operator pos:start="165:55" pos:end="165:55">*</operator> <name pos:start="165:57" pos:end="165:61">alloc</name> <operator pos:start="165:63" pos:end="165:63">+</operator> <name pos:start="165:65" pos:end="165:73">tap_count</name><operator pos:start="165:74" pos:end="165:74">-</operator><name pos:start="165:75" pos:end="165:75">i</name></expr>]</index> <operator pos:start="165:78" pos:end="165:78">=</operator> <name pos:start="165:80" pos:end="165:85"><name pos:start="165:80" pos:end="165:82">tab</name><index pos:start="165:83" pos:end="165:85">[<expr pos:start="165:84" pos:end="165:84"><name pos:start="165:84" pos:end="165:84">i</name></expr>]</index></name> <operator pos:start="165:87" pos:end="165:87">*</operator> <name pos:start="165:89" pos:end="165:93">scale</name> <operator pos:start="165:95" pos:end="165:95">/</operator> <operator pos:start="165:97" pos:end="165:97">(</operator><name pos:start="165:98" pos:end="165:101">norm</name> <operator pos:start="165:103" pos:end="165:103">-</operator> <name pos:start="165:105" pos:end="165:110"><name pos:start="165:105" pos:end="165:107">tab</name><index pos:start="165:108" pos:end="165:110">[<expr pos:start="165:109" pos:end="165:109"><literal type="number" pos:start="165:109" pos:end="165:109">0</literal></expr>]</index></name> <operator pos:start="165:112" pos:end="165:112">+</operator> <name pos:start="165:114" pos:end="165:127"><name pos:start="165:114" pos:end="165:116">tab</name><index pos:start="165:117" pos:end="165:127">[<expr pos:start="165:118" pos:end="165:126"><name pos:start="165:118" pos:end="165:126">tap_count</name></expr>]</index></name><operator pos:start="165:128" pos:end="165:128">)</operator></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <break pos:start="169:13" pos:end="169:18">break;</break>

        <case pos:start="171:9" pos:end="171:32">case <expr pos:start="171:14" pos:end="171:31"><name pos:start="171:14" pos:end="171:31">AV_SAMPLE_FMT_DBLP</name></expr>:</case>

            <for pos:start="173:13" pos:end="175:74">for<control pos:start="173:16" pos:end="173:36">(<init pos:start="173:17" pos:end="173:20"><expr pos:start="173:17" pos:end="173:19"><name pos:start="173:17" pos:end="173:17">i</name><operator pos:start="173:18" pos:end="173:18">=</operator><literal type="number" pos:start="173:19" pos:end="173:19">0</literal></expr>;</init><condition pos:start="173:21" pos:end="173:32"><expr pos:start="173:21" pos:end="173:31"><name pos:start="173:21" pos:end="173:21">i</name><operator pos:start="173:22" pos:end="173:22">&lt;</operator><name pos:start="173:23" pos:end="173:31">tap_count</name></expr>;</condition><incr pos:start="173:33" pos:end="173:35"><expr pos:start="173:33" pos:end="173:35"><name pos:start="173:33" pos:end="173:33">i</name><operator pos:start="173:34" pos:end="173:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="175:17" pos:end="175:74"><block_content pos:start="175:17" pos:end="175:74">

                <expr_stmt pos:start="175:17" pos:end="175:74"><expr pos:start="175:17" pos:end="175:73"><operator pos:start="175:17" pos:end="175:17">(</operator><operator pos:start="175:18" pos:end="175:18">(</operator><name pos:start="175:19" pos:end="175:24">double</name><operator pos:start="175:25" pos:end="175:25">*</operator><operator pos:start="175:26" pos:end="175:26">)</operator><name pos:start="175:27" pos:end="175:32">filter</name><operator pos:start="175:33" pos:end="175:33">)</operator><index pos:start="175:34" pos:end="175:49">[<expr pos:start="175:35" pos:end="175:48"><name pos:start="175:35" pos:end="175:36">ph</name> <operator pos:start="175:38" pos:end="175:38">*</operator> <name pos:start="175:40" pos:end="175:44">alloc</name> <operator pos:start="175:46" pos:end="175:46">+</operator> <name pos:start="175:48" pos:end="175:48">i</name></expr>]</index> <operator pos:start="175:51" pos:end="175:51">=</operator> <name pos:start="175:53" pos:end="175:58"><name pos:start="175:53" pos:end="175:55">tab</name><index pos:start="175:56" pos:end="175:58">[<expr pos:start="175:57" pos:end="175:57"><name pos:start="175:57" pos:end="175:57">i</name></expr>]</index></name> <operator pos:start="175:60" pos:end="175:60">*</operator> <name pos:start="175:62" pos:end="175:66">scale</name> <operator pos:start="175:68" pos:end="175:68">/</operator> <name pos:start="175:70" pos:end="175:73">norm</name></expr>;</expr_stmt></block_content></block></for>

            <if_stmt pos:start="177:13" pos:end="191:13"><if pos:start="177:13" pos:end="183:13">if <condition pos:start="177:16" pos:end="177:35">(<expr pos:start="177:17" pos:end="177:34"><name pos:start="177:17" pos:end="177:25">tap_count</name> <operator pos:start="177:27" pos:end="177:27">%</operator> <literal type="number" pos:start="177:29" pos:end="177:29">2</literal> <operator pos:start="177:31" pos:end="177:32">==</operator> <literal type="number" pos:start="177:34" pos:end="177:34">0</literal></expr>)</condition> <block pos:start="177:37" pos:end="183:13">{<block_content pos:start="179:17" pos:end="181:116">

                <for pos:start="179:17" pos:end="181:116">for <control pos:start="179:21" pos:end="179:47">(<init pos:start="179:22" pos:end="179:27"><expr pos:start="179:22" pos:end="179:26"><name pos:start="179:22" pos:end="179:22">i</name> <operator pos:start="179:24" pos:end="179:24">=</operator> <literal type="number" pos:start="179:26" pos:end="179:26">0</literal></expr>;</init> <condition pos:start="179:29" pos:end="179:42"><expr pos:start="179:29" pos:end="179:41"><name pos:start="179:29" pos:end="179:29">i</name> <operator pos:start="179:31" pos:end="179:31">&lt;</operator> <name pos:start="179:33" pos:end="179:41">tap_count</name></expr>;</condition> <incr pos:start="179:44" pos:end="179:46"><expr pos:start="179:44" pos:end="179:46"><name pos:start="179:44" pos:end="179:44">i</name><operator pos:start="179:45" pos:end="179:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="181:21" pos:end="181:116"><block_content pos:start="181:21" pos:end="181:116">

                    <expr_stmt pos:start="181:21" pos:end="181:116"><expr pos:start="181:21" pos:end="181:115"><operator pos:start="181:21" pos:end="181:21">(</operator><operator pos:start="181:22" pos:end="181:22">(</operator><name pos:start="181:23" pos:end="181:28">double</name><operator pos:start="181:29" pos:end="181:29">*</operator><operator pos:start="181:30" pos:end="181:30">)</operator><name pos:start="181:31" pos:end="181:36">filter</name><operator pos:start="181:37" pos:end="181:37">)</operator><index pos:start="181:38" pos:end="181:79">[<expr pos:start="181:39" pos:end="181:78"><operator pos:start="181:39" pos:end="181:39">(</operator><name pos:start="181:40" pos:end="181:50">phase_count</name><operator pos:start="181:51" pos:end="181:51">-</operator><name pos:start="181:52" pos:end="181:53">ph</name><operator pos:start="181:54" pos:end="181:54">)</operator> <operator pos:start="181:56" pos:end="181:56">*</operator> <name pos:start="181:58" pos:end="181:62">alloc</name> <operator pos:start="181:64" pos:end="181:64">+</operator> <name pos:start="181:66" pos:end="181:74">tap_count</name><operator pos:start="181:75" pos:end="181:75">-</operator><literal type="number" pos:start="181:76" pos:end="181:77">1</literal><operator pos:start="181:77" pos:end="181:77">-</operator><name pos:start="181:78" pos:end="181:78">i</name></expr>]</index> <operator pos:start="181:81" pos:end="181:81">=</operator> <operator pos:start="181:83" pos:end="181:83">(</operator><operator pos:start="181:84" pos:end="181:84">(</operator><name pos:start="181:85" pos:end="181:90">double</name><operator pos:start="181:91" pos:end="181:91">*</operator><operator pos:start="181:92" pos:end="181:92">)</operator><name pos:start="181:93" pos:end="181:98">filter</name><operator pos:start="181:99" pos:end="181:99">)</operator><index pos:start="181:100" pos:end="181:115">[<expr pos:start="181:101" pos:end="181:114"><name pos:start="181:101" pos:end="181:102">ph</name> <operator pos:start="181:104" pos:end="181:104">*</operator> <name pos:start="181:106" pos:end="181:110">alloc</name> <operator pos:start="181:112" pos:end="181:112">+</operator> <name pos:start="181:114" pos:end="181:114">i</name></expr>]</index></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if>

            <else pos:start="185:13" pos:end="191:13">else <block pos:start="185:18" pos:end="191:13">{<block_content pos:start="187:17" pos:end="189:130">

                <for pos:start="187:17" pos:end="189:130">for <control pos:start="187:21" pos:end="187:48">(<init pos:start="187:22" pos:end="187:27"><expr pos:start="187:22" pos:end="187:26"><name pos:start="187:22" pos:end="187:22">i</name> <operator pos:start="187:24" pos:end="187:24">=</operator> <literal type="number" pos:start="187:26" pos:end="187:26">1</literal></expr>;</init> <condition pos:start="187:29" pos:end="187:43"><expr pos:start="187:29" pos:end="187:42"><name pos:start="187:29" pos:end="187:29">i</name> <operator pos:start="187:31" pos:end="187:32">&lt;=</operator> <name pos:start="187:34" pos:end="187:42">tap_count</name></expr>;</condition> <incr pos:start="187:45" pos:end="187:47"><expr pos:start="187:45" pos:end="187:47"><name pos:start="187:45" pos:end="187:45">i</name><operator pos:start="187:46" pos:end="187:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="189:21" pos:end="189:130"><block_content pos:start="189:21" pos:end="189:130">

                    <expr_stmt pos:start="189:21" pos:end="189:130"><expr pos:start="189:21" pos:end="189:129"><operator pos:start="189:21" pos:end="189:21">(</operator><operator pos:start="189:22" pos:end="189:22">(</operator><name pos:start="189:23" pos:end="189:28">double</name><operator pos:start="189:29" pos:end="189:29">*</operator><operator pos:start="189:30" pos:end="189:30">)</operator><name pos:start="189:31" pos:end="189:36">filter</name><operator pos:start="189:37" pos:end="189:37">)</operator><index pos:start="189:38" pos:end="189:77">[<expr pos:start="189:39" pos:end="189:76"><operator pos:start="189:39" pos:end="189:39">(</operator><name pos:start="189:40" pos:end="189:50">phase_count</name><operator pos:start="189:51" pos:end="189:51">-</operator><name pos:start="189:52" pos:end="189:53">ph</name><operator pos:start="189:54" pos:end="189:54">)</operator> <operator pos:start="189:56" pos:end="189:56">*</operator> <name pos:start="189:58" pos:end="189:62">alloc</name> <operator pos:start="189:64" pos:end="189:64">+</operator> <name pos:start="189:66" pos:end="189:74">tap_count</name><operator pos:start="189:75" pos:end="189:75">-</operator><name pos:start="189:76" pos:end="189:76">i</name></expr>]</index> <operator pos:start="189:79" pos:end="189:79">=</operator> <name pos:start="189:81" pos:end="189:86"><name pos:start="189:81" pos:end="189:83">tab</name><index pos:start="189:84" pos:end="189:86">[<expr pos:start="189:85" pos:end="189:85"><name pos:start="189:85" pos:end="189:85">i</name></expr>]</index></name> <operator pos:start="189:88" pos:end="189:88">*</operator> <name pos:start="189:90" pos:end="189:94">scale</name> <operator pos:start="189:96" pos:end="189:96">/</operator> <operator pos:start="189:98" pos:end="189:98">(</operator><name pos:start="189:99" pos:end="189:102">norm</name> <operator pos:start="189:104" pos:end="189:104">-</operator> <name pos:start="189:106" pos:end="189:111"><name pos:start="189:106" pos:end="189:108">tab</name><index pos:start="189:109" pos:end="189:111">[<expr pos:start="189:110" pos:end="189:110"><literal type="number" pos:start="189:110" pos:end="189:110">0</literal></expr>]</index></name> <operator pos:start="189:113" pos:end="189:113">+</operator> <name pos:start="189:115" pos:end="189:128"><name pos:start="189:115" pos:end="189:117">tab</name><index pos:start="189:118" pos:end="189:128">[<expr pos:start="189:119" pos:end="189:127"><name pos:start="189:119" pos:end="189:127">tap_count</name></expr>]</index></name><operator pos:start="189:129" pos:end="189:129">)</operator></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>

<cpp:if pos:start="199:1" pos:end="199:5">#<cpp:directive pos:start="199:2" pos:end="199:3">if</cpp:directive> <expr pos:start="199:5" pos:end="199:5"><literal type="number" pos:start="199:5" pos:end="199:5">0</literal></expr></cpp:if>

    {

<cpp:define pos:start="203:1" pos:end="203:16">#<cpp:directive pos:start="203:2" pos:end="203:7">define</cpp:directive> <cpp:macro pos:start="203:9" pos:end="203:11"><name pos:start="203:9" pos:end="203:11">LEN</name></cpp:macro> <cpp:value pos:start="203:13" pos:end="203:16">1024</cpp:value></cpp:define>

        int j,k;

        double sine[LEN + tap_count];

        double filtered[LEN];

        double maxff=-2, minff=2, maxsf=-2, minsf=2;

        for(i=0; i&lt;LEN; i++){

            double ss=0, sf=0, ff=0;

            for(j=0; j&lt;LEN+tap_count; j++)

                sine[j]= cos(i*j*M_PI/LEN);

            for(j=0; j&lt;LEN; j++){

                double sum=0;

                ph=0;

                for(k=0; k&lt;tap_count; k++)

                    sum += filter[ph * tap_count + k] * sine[k+j];

                filtered[j]= sum / (1&lt;&lt;FILTER_SHIFT);

                ss+= sine[j + center] * sine[j + center];

                ff+= filtered[j] * filtered[j];

                sf+= sine[j + center] * filtered[j];

            }

            ss= sqrt(2*ss/LEN);

            ff= sqrt(2*ff/LEN);

            sf= 2*sf/LEN;

            maxff= FFMAX(maxff, ff);

            minff= FFMIN(minff, ff);

            maxsf= FFMAX(maxsf, sf);

            minsf= FFMIN(minsf, sf);

            if(i%11==0){

                av_log(NULL, AV_LOG_ERROR, "i:%4d ss:%f ff:%13.6e-%13.6e sf:%13.6e-%13.6e\n", i, ss, maxff, minff, maxsf, minsf);

                minff=minsf= 2;

                maxff=maxsf= -2;

            }

        }

    }

<cpp:endif pos:start="269:1" pos:end="269:6">#<cpp:directive pos:start="269:2" pos:end="269:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="273:5" pos:end="273:17"><expr pos:start="273:5" pos:end="273:16"><call pos:start="273:5" pos:end="273:16"><name pos:start="273:5" pos:end="273:11">av_free</name><argument_list pos:start="273:12" pos:end="273:16">(<argument pos:start="273:13" pos:end="273:15"><expr pos:start="273:13" pos:end="273:15"><name pos:start="273:13" pos:end="273:15">tab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="275:5" pos:end="275:13">return <expr pos:start="275:12" pos:end="275:12"><literal type="number" pos:start="275:12" pos:end="275:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
