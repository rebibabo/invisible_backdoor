<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3934.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">BusState</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:21">qbus_create</name><parameter_list pos:start="1:22" pos:end="1:75">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:29">BusInfo</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:35">info</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:56"><decl pos:start="1:38" pos:end="1:56"><type pos:start="1:38" pos:end="1:56"><name pos:start="1:38" pos:end="1:48">DeviceState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:56">parent</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:74"><decl pos:start="1:59" pos:end="1:74"><type pos:start="1:59" pos:end="1:74"><specifier pos:start="1:59" pos:end="1:63">const</specifier> <name pos:start="1:65" pos:end="1:68">char</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:74">name</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:15">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">BusState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">bus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:13">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>,<decl pos:start="9:11" pos:end="9:13"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:11" pos:end="9:13">len</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:7">bus</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:34"><name pos:start="13:11" pos:end="13:22">qemu_mallocz</name><argument_list pos:start="13:23" pos:end="13:34">(<argument pos:start="13:24" pos:end="13:33"><expr pos:start="13:24" pos:end="13:33"><name pos:start="13:24" pos:end="13:33"><name pos:start="13:24" pos:end="13:27">info</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:33">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:7">bus</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:13">info</name></name> <operator pos:start="15:15" pos:end="15:15">=</operator> <name pos:start="15:17" pos:end="15:20">info</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:7">bus</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:15">parent</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:24">parent</name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="57:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:13">(<expr pos:start="21:9" pos:end="21:12"><name pos:start="21:9" pos:end="21:12">name</name></expr>)</condition> <block pos:start="21:15" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:38">

        <comment type="block" pos:start="23:9" pos:end="23:31">/* use supplied name */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:38"><expr pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:11">bus</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:17">name</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <call pos:start="25:21" pos:end="25:37"><name pos:start="25:21" pos:end="25:31">qemu_strdup</name><argument_list pos:start="25:32" pos:end="25:37">(<argument pos:start="25:33" pos:end="25:36"><expr pos:start="25:33" pos:end="25:36"><name pos:start="25:33" pos:end="25:36">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="27:7" pos:end="39:5">else if <condition pos:start="27:15" pos:end="27:36">(<expr pos:start="27:16" pos:end="27:35"><name pos:start="27:16" pos:end="27:21">parent</name> <operator pos:start="27:23" pos:end="27:24">&amp;&amp;</operator> <name pos:start="27:26" pos:end="27:35"><name pos:start="27:26" pos:end="27:31">parent</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:35">id</name></name></expr>)</condition> <block pos:start="27:38" pos:end="39:5">{<block_content pos:start="31:9" pos:end="37:24">

        <comment type="block" pos:start="29:9" pos:end="29:57">/* parent device has id -&gt; use it for bus name */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:38"><expr pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:11">len</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:32"><name pos:start="31:15" pos:end="31:20">strlen</name><argument_list pos:start="31:21" pos:end="31:32">(<argument pos:start="31:22" pos:end="31:31"><expr pos:start="31:22" pos:end="31:31"><name pos:start="31:22" pos:end="31:31"><name pos:start="31:22" pos:end="31:27">parent</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:31">id</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:34" pos:end="31:34">+</operator> <literal type="number" pos:start="31:36" pos:end="31:37">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:31"><expr pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:11">buf</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:30"><name pos:start="33:15" pos:end="33:25">qemu_malloc</name><argument_list pos:start="33:26" pos:end="33:30">(<argument pos:start="33:27" pos:end="33:29"><expr pos:start="33:27" pos:end="33:29"><name pos:start="33:27" pos:end="33:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:71"><expr pos:start="35:9" pos:end="35:70"><call pos:start="35:9" pos:end="35:70"><name pos:start="35:9" pos:end="35:16">snprintf</name><argument_list pos:start="35:17" pos:end="35:70">(<argument pos:start="35:18" pos:end="35:20"><expr pos:start="35:18" pos:end="35:20"><name pos:start="35:18" pos:end="35:20">buf</name></expr></argument>, <argument pos:start="35:23" pos:end="35:25"><expr pos:start="35:23" pos:end="35:25"><name pos:start="35:23" pos:end="35:25">len</name></expr></argument>, <argument pos:start="35:28" pos:end="35:34"><expr pos:start="35:28" pos:end="35:34"><literal type="string" pos:start="35:28" pos:end="35:34">"%s.%d"</literal></expr></argument>, <argument pos:start="35:37" pos:end="35:46"><expr pos:start="35:37" pos:end="35:46"><name pos:start="35:37" pos:end="35:46"><name pos:start="35:37" pos:end="35:42">parent</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:46">id</name></name></expr></argument>, <argument pos:start="35:49" pos:end="35:69"><expr pos:start="35:49" pos:end="35:69"><name pos:start="35:49" pos:end="35:69"><name pos:start="35:49" pos:end="35:54">parent</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:69">num_child_bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:11">bus</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:17">name</name></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <name pos:start="37:21" pos:end="37:23">buf</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="57:5">else <block pos:start="39:12" pos:end="57:5">{<block_content pos:start="43:9" pos:end="55:24">

        <comment type="block" pos:start="41:9" pos:end="41:58">/* no id -&gt; use lowercase bus type for bus name */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:38"><expr pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:11">len</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:32"><name pos:start="43:15" pos:end="43:20">strlen</name><argument_list pos:start="43:21" pos:end="43:32">(<argument pos:start="43:22" pos:end="43:31"><expr pos:start="43:22" pos:end="43:31"><name pos:start="43:22" pos:end="43:31"><name pos:start="43:22" pos:end="43:25">info</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:31">name</name></name></expr></argument>)</argument_list></call> <operator pos:start="43:34" pos:end="43:34">+</operator> <literal type="number" pos:start="43:36" pos:end="43:37">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:11">buf</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:30"><name pos:start="45:15" pos:end="45:25">qemu_malloc</name><argument_list pos:start="45:26" pos:end="45:30">(<argument pos:start="45:27" pos:end="45:29"><expr pos:start="45:27" pos:end="45:29"><name pos:start="45:27" pos:end="45:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="49:59"><expr pos:start="47:9" pos:end="49:58"><name pos:start="47:9" pos:end="47:11">len</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="49:58"><name pos:start="47:15" pos:end="47:22">snprintf</name><argument_list pos:start="47:23" pos:end="49:58">(<argument pos:start="47:24" pos:end="47:26"><expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:26">buf</name></expr></argument>, <argument pos:start="47:29" pos:end="47:31"><expr pos:start="47:29" pos:end="47:31"><name pos:start="47:29" pos:end="47:31">len</name></expr></argument>, <argument pos:start="47:34" pos:end="47:40"><expr pos:start="47:34" pos:end="47:40"><literal type="string" pos:start="47:34" pos:end="47:40">"%s.%d"</literal></expr></argument>, <argument pos:start="47:43" pos:end="47:52"><expr pos:start="47:43" pos:end="47:52"><name pos:start="47:43" pos:end="47:52"><name pos:start="47:43" pos:end="47:46">info</name><operator pos:start="47:47" pos:end="47:48">-&gt;</operator><name pos:start="47:49" pos:end="47:52">name</name></name></expr></argument>,

                       <argument pos:start="49:24" pos:end="49:57"><expr pos:start="49:24" pos:end="49:57"><ternary pos:start="49:24" pos:end="49:57"><condition pos:start="49:24" pos:end="49:31"><expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29">parent</name></expr> ?</condition><then pos:start="49:33" pos:end="49:53"> <expr pos:start="49:33" pos:end="49:53"><name pos:start="49:33" pos:end="49:53"><name pos:start="49:33" pos:end="49:38">parent</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:53">num_child_bus</name></name></expr> </then><else pos:start="49:55" pos:end="49:57">: <expr pos:start="49:57" pos:end="49:57"><literal type="number" pos:start="49:57" pos:end="49:57">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="51:9" pos:end="53:42">for <control pos:start="51:13" pos:end="51:33">(<init pos:start="51:14" pos:end="51:19"><expr pos:start="51:14" pos:end="51:18"><name pos:start="51:14" pos:end="51:14">i</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr>;</init> <condition pos:start="51:21" pos:end="51:28"><expr pos:start="51:21" pos:end="51:27"><name pos:start="51:21" pos:end="51:21">i</name> <operator pos:start="51:23" pos:end="51:23">&lt;</operator> <name pos:start="51:25" pos:end="51:27">len</name></expr>;</condition> <incr pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><name pos:start="51:30" pos:end="51:30">i</name><operator pos:start="51:31" pos:end="51:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="53:13" pos:end="53:42"><block_content pos:start="53:13" pos:end="53:42">

            <expr_stmt pos:start="53:13" pos:end="53:42"><expr pos:start="53:13" pos:end="53:41"><name pos:start="53:13" pos:end="53:18"><name pos:start="53:13" pos:end="53:15">buf</name><index pos:start="53:16" pos:end="53:18">[<expr pos:start="53:17" pos:end="53:17"><name pos:start="53:17" pos:end="53:17">i</name></expr>]</index></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <call pos:start="53:22" pos:end="53:41"><name pos:start="53:22" pos:end="53:33">qemu_tolower</name><argument_list pos:start="53:34" pos:end="53:41">(<argument pos:start="53:35" pos:end="53:40"><expr pos:start="53:35" pos:end="53:40"><name pos:start="53:35" pos:end="53:40"><name pos:start="53:35" pos:end="53:37">buf</name><index pos:start="53:38" pos:end="53:40">[<expr pos:start="53:39" pos:end="53:39"><name pos:start="53:39" pos:end="53:39">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="55:9" pos:end="55:24"><expr pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:11">bus</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:17">name</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:23">buf</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:30"><expr pos:start="61:5" pos:end="61:29"><call pos:start="61:5" pos:end="61:29"><name pos:start="61:5" pos:end="61:13">LIST_INIT</name><argument_list pos:start="61:14" pos:end="61:29">(<argument pos:start="61:15" pos:end="61:28"><expr pos:start="61:15" pos:end="61:28"><operator pos:start="61:15" pos:end="61:15">&amp;</operator><name pos:start="61:16" pos:end="61:28"><name pos:start="61:16" pos:end="61:18">bus</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:28">children</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:15">(<expr pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:14">parent</name></expr>)</condition> <block pos:start="63:17" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:32">

        <expr_stmt pos:start="65:9" pos:end="65:59"><expr pos:start="65:9" pos:end="65:58"><call pos:start="65:9" pos:end="65:58"><name pos:start="65:9" pos:end="65:24">LIST_INSERT_HEAD</name><argument_list pos:start="65:25" pos:end="65:58">(<argument pos:start="65:26" pos:end="65:43"><expr pos:start="65:26" pos:end="65:43"><operator pos:start="65:26" pos:end="65:26">&amp;</operator><name pos:start="65:27" pos:end="65:43"><name pos:start="65:27" pos:end="65:32">parent</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:43">child_bus</name></name></expr></argument>, <argument pos:start="65:46" pos:end="65:48"><expr pos:start="65:46" pos:end="65:48"><name pos:start="65:46" pos:end="65:48">bus</name></expr></argument>, <argument pos:start="65:51" pos:end="65:57"><expr pos:start="65:51" pos:end="65:57"><name pos:start="65:51" pos:end="65:57">sibling</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:32"><expr pos:start="67:9" pos:end="67:31"><name pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:14">parent</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:29">num_child_bus</name></name><operator pos:start="67:30" pos:end="67:31">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="71:5" pos:end="71:15">return <expr pos:start="71:12" pos:end="71:14"><name pos:start="71:12" pos:end="71:14">bus</name></expr>;</return>

</block_content>}</block></function>
</unit>
