<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12526.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">virtcon_parse</name><parameter_list pos:start="1:25" pos:end="1:45">(<parameter pos:start="1:26" pos:end="1:44"><decl pos:start="1:26" pos:end="1:44"><type pos:start="1:26" pos:end="1:37"><specifier pos:start="1:26" pos:end="1:30">const</specifier> <name pos:start="1:32" pos:end="1:35">char</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:44">devname</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:13">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">QemuOptsList</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:24">device</name> <init pos:start="5:26" pos:end="5:51">= <expr pos:start="5:28" pos:end="5:51"><call pos:start="5:28" pos:end="5:51"><name pos:start="5:28" pos:end="5:41">qemu_find_opts</name><argument_list pos:start="5:42" pos:end="5:51">(<argument pos:start="5:43" pos:end="5:50"><expr pos:start="5:43" pos:end="5:50"><literal type="string" pos:start="5:43" pos:end="5:50">"device"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:14"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <name pos:start="7:12" pos:end="7:14">int</name></type> <name pos:start="7:16" pos:end="7:20">index</name> <init pos:start="7:22" pos:end="7:24">= <expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:18"><name pos:start="9:10" pos:end="9:14">label</name><index pos:start="9:15" pos:end="9:18">[<expr pos:start="9:16" pos:end="9:17"><literal type="number" pos:start="9:16" pos:end="9:17">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">QemuOpts</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:22">bus_opts</name></decl>, <decl pos:start="11:25" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:14"><modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:33">dev_opts</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:17"><if pos:start="15:5" pos:end="17:17">if <condition pos:start="15:8" pos:end="15:37">(<expr pos:start="15:9" pos:end="15:36"><call pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:14">strcmp</name><argument_list pos:start="15:15" pos:end="15:31">(<argument pos:start="15:16" pos:end="15:22"><expr pos:start="15:16" pos:end="15:22"><name pos:start="15:16" pos:end="15:22">devname</name></expr></argument>, <argument pos:start="15:25" pos:end="15:30"><expr pos:start="15:25" pos:end="15:30"><literal type="string" pos:start="15:25" pos:end="15:30">"none"</literal></expr></argument>)</argument_list></call> <operator pos:start="15:33" pos:end="15:34">==</operator> <literal type="number" pos:start="15:36" pos:end="15:36">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:37">(<expr pos:start="19:9" pos:end="19:36"><name pos:start="19:9" pos:end="19:13">index</name> <operator pos:start="19:15" pos:end="19:16">==</operator> <name pos:start="19:18" pos:end="19:36">MAX_VIRTIO_CONSOLES</name></expr>)</condition> <block pos:start="19:39" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:16">

        <expr_stmt pos:start="21:9" pos:end="21:60"><expr pos:start="21:9" pos:end="21:59"><call pos:start="21:9" pos:end="21:59"><name pos:start="21:9" pos:end="21:15">fprintf</name><argument_list pos:start="21:16" pos:end="21:59">(<argument pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:22">stderr</name></expr></argument>, <argument pos:start="21:25" pos:end="21:58"><expr pos:start="21:25" pos:end="21:58"><literal type="string" pos:start="21:25" pos:end="21:58">"qemu: too many virtio consoles\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:16"><expr pos:start="23:9" pos:end="23:15"><call pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:12">exit</name><argument_list pos:start="23:13" pos:end="23:15">(<argument pos:start="23:14" pos:end="23:14"><expr pos:start="23:14" pos:end="23:14"><literal type="number" pos:start="23:14" pos:end="23:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:63"><expr pos:start="29:5" pos:end="29:62"><name pos:start="29:5" pos:end="29:12">bus_opts</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:62"><name pos:start="29:16" pos:end="29:31">qemu_opts_create</name><argument_list pos:start="29:32" pos:end="29:62">(<argument pos:start="29:33" pos:end="29:38"><expr pos:start="29:33" pos:end="29:38"><name pos:start="29:33" pos:end="29:38">device</name></expr></argument>, <argument pos:start="29:41" pos:end="29:44"><expr pos:start="29:41" pos:end="29:44"><name pos:start="29:41" pos:end="29:44">NULL</name></expr></argument>, <argument pos:start="29:47" pos:end="29:47"><expr pos:start="29:47" pos:end="29:47"><literal type="number" pos:start="29:47" pos:end="29:47">0</literal></expr></argument>, <argument pos:start="29:50" pos:end="29:61"><expr pos:start="29:50" pos:end="29:61"><operator pos:start="29:50" pos:end="29:50">&amp;</operator><name pos:start="29:51" pos:end="29:61">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:37">(<expr pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:17">arch_type</name> <operator pos:start="31:19" pos:end="31:20">==</operator> <name pos:start="31:22" pos:end="31:36">QEMU_ARCH_S390X</name></expr>)</condition> <block pos:start="31:39" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:77">

        <expr_stmt pos:start="33:9" pos:end="33:77"><expr pos:start="33:9" pos:end="33:76"><call pos:start="33:9" pos:end="33:76"><name pos:start="33:9" pos:end="33:20">qemu_opt_set</name><argument_list pos:start="33:21" pos:end="33:76">(<argument pos:start="33:22" pos:end="33:29"><expr pos:start="33:22" pos:end="33:29"><name pos:start="33:22" pos:end="33:29">bus_opts</name></expr></argument>, <argument pos:start="33:32" pos:end="33:39"><expr pos:start="33:32" pos:end="33:39"><literal type="string" pos:start="33:32" pos:end="33:39">"driver"</literal></expr></argument>, <argument pos:start="33:42" pos:end="33:61"><expr pos:start="33:42" pos:end="33:61"><literal type="string" pos:start="33:42" pos:end="33:61">"virtio-serial-s390"</literal></expr></argument>, <argument pos:start="33:64" pos:end="33:75"><expr pos:start="33:64" pos:end="33:75"><operator pos:start="33:64" pos:end="33:64">&amp;</operator><name pos:start="33:65" pos:end="33:75">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="39:5">else <block pos:start="35:12" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:76">

        <expr_stmt pos:start="37:9" pos:end="37:76"><expr pos:start="37:9" pos:end="37:75"><call pos:start="37:9" pos:end="37:75"><name pos:start="37:9" pos:end="37:20">qemu_opt_set</name><argument_list pos:start="37:21" pos:end="37:75">(<argument pos:start="37:22" pos:end="37:29"><expr pos:start="37:22" pos:end="37:29"><name pos:start="37:22" pos:end="37:29">bus_opts</name></expr></argument>, <argument pos:start="37:32" pos:end="37:39"><expr pos:start="37:32" pos:end="37:39"><literal type="string" pos:start="37:32" pos:end="37:39">"driver"</literal></expr></argument>, <argument pos:start="37:42" pos:end="37:60"><expr pos:start="37:42" pos:end="37:60"><literal type="string" pos:start="37:42" pos:end="37:60">"virtio-serial-pci"</literal></expr></argument>, <argument pos:start="37:63" pos:end="37:74"><expr pos:start="37:63" pos:end="37:74"><operator pos:start="37:63" pos:end="37:63">&amp;</operator><name pos:start="37:64" pos:end="37:74">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:63"><expr pos:start="43:5" pos:end="43:62"><name pos:start="43:5" pos:end="43:12">dev_opts</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:62"><name pos:start="43:16" pos:end="43:31">qemu_opts_create</name><argument_list pos:start="43:32" pos:end="43:62">(<argument pos:start="43:33" pos:end="43:38"><expr pos:start="43:33" pos:end="43:38"><name pos:start="43:33" pos:end="43:38">device</name></expr></argument>, <argument pos:start="43:41" pos:end="43:44"><expr pos:start="43:41" pos:end="43:44"><name pos:start="43:41" pos:end="43:44">NULL</name></expr></argument>, <argument pos:start="43:47" pos:end="43:47"><expr pos:start="43:47" pos:end="43:47"><literal type="number" pos:start="43:47" pos:end="43:47">0</literal></expr></argument>, <argument pos:start="43:50" pos:end="43:61"><expr pos:start="43:50" pos:end="43:61"><operator pos:start="43:50" pos:end="43:50">&amp;</operator><name pos:start="43:51" pos:end="43:61">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:66"><expr pos:start="45:5" pos:end="45:65"><call pos:start="45:5" pos:end="45:65"><name pos:start="45:5" pos:end="45:16">qemu_opt_set</name><argument_list pos:start="45:17" pos:end="45:65">(<argument pos:start="45:18" pos:end="45:25"><expr pos:start="45:18" pos:end="45:25"><name pos:start="45:18" pos:end="45:25">dev_opts</name></expr></argument>, <argument pos:start="45:28" pos:end="45:35"><expr pos:start="45:28" pos:end="45:35"><literal type="string" pos:start="45:28" pos:end="45:35">"driver"</literal></expr></argument>, <argument pos:start="45:38" pos:end="45:50"><expr pos:start="45:38" pos:end="45:50"><literal type="string" pos:start="45:38" pos:end="45:50">"virtconsole"</literal></expr></argument>, <argument pos:start="45:53" pos:end="45:64"><expr pos:start="45:53" pos:end="45:64"><operator pos:start="45:53" pos:end="45:53">&amp;</operator><name pos:start="45:54" pos:end="45:64">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:55"><expr pos:start="49:5" pos:end="49:54"><call pos:start="49:5" pos:end="49:54"><name pos:start="49:5" pos:end="49:12">snprintf</name><argument_list pos:start="49:13" pos:end="49:54">(<argument pos:start="49:14" pos:end="49:18"><expr pos:start="49:14" pos:end="49:18"><name pos:start="49:14" pos:end="49:18">label</name></expr></argument>, <argument pos:start="49:21" pos:end="49:33"><expr pos:start="49:21" pos:end="49:33"><sizeof pos:start="49:21" pos:end="49:33">sizeof<argument_list pos:start="49:27" pos:end="49:33">(<argument pos:start="49:28" pos:end="49:32"><expr pos:start="49:28" pos:end="49:32"><name pos:start="49:28" pos:end="49:32">label</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="49:36" pos:end="49:46"><expr pos:start="49:36" pos:end="49:46"><literal type="string" pos:start="49:36" pos:end="49:46">"virtcon%d"</literal></expr></argument>, <argument pos:start="49:49" pos:end="49:53"><expr pos:start="49:49" pos:end="49:53"><name pos:start="49:49" pos:end="49:53">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:60"><expr pos:start="51:5" pos:end="51:59"><name pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:15">virtcon_hds</name><index pos:start="51:16" pos:end="51:22">[<expr pos:start="51:17" pos:end="51:21"><name pos:start="51:17" pos:end="51:21">index</name></expr>]</index></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <call pos:start="51:26" pos:end="51:59"><name pos:start="51:26" pos:end="51:37">qemu_chr_new</name><argument_list pos:start="51:38" pos:end="51:59">(<argument pos:start="51:39" pos:end="51:43"><expr pos:start="51:39" pos:end="51:43"><name pos:start="51:39" pos:end="51:43">label</name></expr></argument>, <argument pos:start="51:46" pos:end="51:52"><expr pos:start="51:46" pos:end="51:52"><name pos:start="51:46" pos:end="51:52">devname</name></expr></argument>, <argument pos:start="51:55" pos:end="51:58"><expr pos:start="51:55" pos:end="51:58"><name pos:start="51:55" pos:end="51:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="61:5"><if pos:start="53:5" pos:end="61:5">if <condition pos:start="53:8" pos:end="53:28">(<expr pos:start="53:9" pos:end="53:27"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:27"><name pos:start="53:10" pos:end="53:20">virtcon_hds</name><index pos:start="53:21" pos:end="53:27">[<expr pos:start="53:22" pos:end="53:26"><name pos:start="53:22" pos:end="53:26">index</name></expr>]</index></name></expr>)</condition> <block pos:start="53:30" pos:end="61:5">{<block_content pos:start="55:9" pos:end="59:18">

        <expr_stmt pos:start="55:9" pos:end="57:57"><expr pos:start="55:9" pos:end="57:56"><call pos:start="55:9" pos:end="57:56"><name pos:start="55:9" pos:end="55:15">fprintf</name><argument_list pos:start="55:16" pos:end="57:56">(<argument pos:start="55:17" pos:end="55:22"><expr pos:start="55:17" pos:end="55:22"><name pos:start="55:17" pos:end="55:22">stderr</name></expr></argument>, <argument pos:start="55:25" pos:end="57:46"><expr pos:start="55:25" pos:end="57:46"><literal type="string" pos:start="55:25" pos:end="55:64">"qemu: could not connect virtio console"</literal>

                <literal type="string" pos:start="57:17" pos:end="57:46">" to character backend '%s'\n"</literal></expr></argument>, <argument pos:start="57:49" pos:end="57:55"><expr pos:start="57:49" pos:end="57:55"><name pos:start="57:49" pos:end="57:55">devname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="59:9" pos:end="59:18">return <expr pos:start="59:16" pos:end="59:17"><operator pos:start="59:16" pos:end="59:16">-</operator><literal type="number" pos:start="59:17" pos:end="59:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:59"><expr pos:start="63:5" pos:end="63:58"><call pos:start="63:5" pos:end="63:58"><name pos:start="63:5" pos:end="63:16">qemu_opt_set</name><argument_list pos:start="63:17" pos:end="63:58">(<argument pos:start="63:18" pos:end="63:25"><expr pos:start="63:18" pos:end="63:25"><name pos:start="63:18" pos:end="63:25">dev_opts</name></expr></argument>, <argument pos:start="63:28" pos:end="63:36"><expr pos:start="63:28" pos:end="63:36"><literal type="string" pos:start="63:28" pos:end="63:36">"chardev"</literal></expr></argument>, <argument pos:start="63:39" pos:end="63:43"><expr pos:start="63:39" pos:end="63:43"><name pos:start="63:39" pos:end="63:43">label</name></expr></argument>, <argument pos:start="63:46" pos:end="63:57"><expr pos:start="63:46" pos:end="63:57"><operator pos:start="63:46" pos:end="63:46">&amp;</operator><name pos:start="63:47" pos:end="63:57">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:12"><expr pos:start="67:5" pos:end="67:11"><name pos:start="67:5" pos:end="67:9">index</name><operator pos:start="67:10" pos:end="67:11">++</operator></expr>;</expr_stmt>

    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
