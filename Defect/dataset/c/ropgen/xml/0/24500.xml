<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24500.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">hda_audio_exit</name><parameter_list pos:start="1:27" pos:end="1:47">(<parameter pos:start="1:28" pos:end="1:46"><decl pos:start="1:28" pos:end="1:46"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:41">HDACodecDevice</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">hda</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:30">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">HDAAudioState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">a</name> <init pos:start="5:22" pos:end="5:37">= <expr pos:start="5:24" pos:end="5:37"><call pos:start="5:24" pos:end="5:37"><name pos:start="5:24" pos:end="5:32">HDA_AUDIO</name><argument_list pos:start="5:33" pos:end="5:37">(<argument pos:start="5:34" pos:end="5:36"><expr pos:start="5:34" pos:end="5:36"><name pos:start="5:34" pos:end="5:36">hda</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">HDAAudioStream</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:22">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:39"><expr pos:start="13:5" pos:end="13:38"><call pos:start="13:5" pos:end="13:38"><name pos:start="13:5" pos:end="13:10">dprint</name><argument_list pos:start="13:11" pos:end="13:38">(<argument pos:start="13:12" pos:end="13:12"><expr pos:start="13:12" pos:end="13:12"><name pos:start="13:12" pos:end="13:12">a</name></expr></argument>, <argument pos:start="13:15" pos:end="13:15"><expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">1</literal></expr></argument>, <argument pos:start="13:18" pos:end="13:23"><expr pos:start="13:18" pos:end="13:23"><literal type="string" pos:start="13:18" pos:end="13:23">"%s\n"</literal></expr></argument>, <argument pos:start="13:26" pos:end="13:37"><expr pos:start="13:26" pos:end="13:37"><name pos:start="13:26" pos:end="13:37">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="15:5" pos:end="35:5">for <control pos:start="15:9" pos:end="15:43">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:38"><expr pos:start="15:17" pos:end="15:37"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <call pos:start="15:21" pos:end="15:37"><name pos:start="15:21" pos:end="15:30">ARRAY_SIZE</name><argument_list pos:start="15:31" pos:end="15:37">(<argument pos:start="15:32" pos:end="15:36"><expr pos:start="15:32" pos:end="15:36"><name pos:start="15:32" pos:end="15:36"><name pos:start="15:32" pos:end="15:32">a</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:36">st</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="15:40" pos:end="15:42"><expr pos:start="15:40" pos:end="15:42"><name pos:start="15:40" pos:end="15:40">i</name><operator pos:start="15:41" pos:end="15:42">++</operator></expr></incr>)</control> <block pos:start="15:45" pos:end="35:5">{<block_content pos:start="17:9" pos:end="33:9">

        <expr_stmt pos:start="17:9" pos:end="17:23"><expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:10">st</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:18"><name pos:start="17:14" pos:end="17:14">a</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:18">st</name></name> <operator pos:start="17:20" pos:end="17:20">+</operator> <name pos:start="17:22" pos:end="17:22">i</name></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:29">(<expr pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:14">st</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:20">node</name></name> <operator pos:start="19:22" pos:end="19:23">==</operator> <name pos:start="19:25" pos:end="19:28">NULL</name></expr>)</condition> <block pos:start="19:31" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:21">

            <continue pos:start="21:13" pos:end="21:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="33:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:23">(<expr pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:14">st</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:22">output</name></name></expr>)</condition> <block pos:start="25:25" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:51">

            <expr_stmt pos:start="27:13" pos:end="27:51"><expr pos:start="27:13" pos:end="27:50"><call pos:start="27:13" pos:end="27:50"><name pos:start="27:13" pos:end="27:25">AUD_close_out</name><argument_list pos:start="27:26" pos:end="27:50">(<argument pos:start="27:27" pos:end="27:34"><expr pos:start="27:27" pos:end="27:34"><operator pos:start="27:27" pos:end="27:27">&amp;</operator><name pos:start="27:28" pos:end="27:34"><name pos:start="27:28" pos:end="27:28">a</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:34">card</name></name></expr></argument>, <argument pos:start="27:37" pos:end="27:49"><expr pos:start="27:37" pos:end="27:49"><name pos:start="27:37" pos:end="27:49"><name pos:start="27:37" pos:end="27:38">st</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:45">voice</name><operator pos:start="27:46" pos:end="27:46">.</operator><name pos:start="27:47" pos:end="27:49">out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="33:9">else <block pos:start="29:16" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:49">

            <expr_stmt pos:start="31:13" pos:end="31:49"><expr pos:start="31:13" pos:end="31:48"><call pos:start="31:13" pos:end="31:48"><name pos:start="31:13" pos:end="31:24">AUD_close_in</name><argument_list pos:start="31:25" pos:end="31:48">(<argument pos:start="31:26" pos:end="31:33"><expr pos:start="31:26" pos:end="31:33"><operator pos:start="31:26" pos:end="31:26">&amp;</operator><name pos:start="31:27" pos:end="31:33"><name pos:start="31:27" pos:end="31:27">a</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:33">card</name></name></expr></argument>, <argument pos:start="31:36" pos:end="31:47"><expr pos:start="31:36" pos:end="31:47"><name pos:start="31:36" pos:end="31:47"><name pos:start="31:36" pos:end="31:37">st</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:44">voice</name><operator pos:start="31:45" pos:end="31:45">.</operator><name pos:start="31:46" pos:end="31:47">in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><call pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:19">AUD_remove_card</name><argument_list pos:start="37:20" pos:end="37:29">(<argument pos:start="37:21" pos:end="37:28"><expr pos:start="37:21" pos:end="37:28"><operator pos:start="37:21" pos:end="37:21">&amp;</operator><name pos:start="37:22" pos:end="37:28"><name pos:start="37:22" pos:end="37:22">a</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:28">card</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
