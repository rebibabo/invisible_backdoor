<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12381.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">x86_cpu_initfn</name><parameter_list pos:start="1:27" pos:end="1:39">(<parameter pos:start="1:28" pos:end="1:38"><decl pos:start="1:28" pos:end="1:38"><type pos:start="1:28" pos:end="1:35"><name pos:start="1:28" pos:end="1:33">Object</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">obj</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:54">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:27">= <expr pos:start="5:20" pos:end="5:27"><call pos:start="5:20" pos:end="5:27"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:27">(<argument pos:start="5:24" pos:end="5:26"><expr pos:start="5:24" pos:end="5:26"><name pos:start="5:24" pos:end="5:26">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">X86CPU</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">cpu</name> <init pos:start="7:17" pos:end="7:30">= <expr pos:start="7:19" pos:end="7:30"><call pos:start="7:19" pos:end="7:30"><name pos:start="7:19" pos:end="7:25">X86_CPU</name><argument_list pos:start="7:26" pos:end="7:30">(<argument pos:start="7:27" pos:end="7:29"><expr pos:start="7:27" pos:end="7:29"><name pos:start="7:27" pos:end="7:29">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">X86CPUClass</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">xcc</name> <init pos:start="9:22" pos:end="9:45">= <expr pos:start="9:24" pos:end="9:45"><call pos:start="9:24" pos:end="9:45"><name pos:start="9:24" pos:end="9:40">X86_CPU_GET_CLASS</name><argument_list pos:start="9:41" pos:end="9:45">(<argument pos:start="9:42" pos:end="9:44"><expr pos:start="9:42" pos:end="9:44"><name pos:start="9:42" pos:end="9:44">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">CPUX86State</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">env</name> <init pos:start="11:22" pos:end="11:32">= <expr pos:start="11:24" pos:end="11:32"><operator pos:start="11:24" pos:end="11:24">&amp;</operator><name pos:start="11:25" pos:end="11:32"><name pos:start="11:25" pos:end="11:27">cpu</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15">FeatureWord</name></type> <name pos:start="13:17" pos:end="13:17">w</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:6">cs</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:15">env_ptr</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:21">env</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><call pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:17">cpu_exec_init</name><argument_list pos:start="19:18" pos:end="19:35">(<argument pos:start="19:19" pos:end="19:20"><expr pos:start="19:19" pos:end="19:20"><name pos:start="19:19" pos:end="19:20">cs</name></expr></argument>, <argument pos:start="19:23" pos:end="19:34"><expr pos:start="19:23" pos:end="19:34"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:34">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="27:72"><expr pos:start="23:5" pos:end="27:71"><call pos:start="23:5" pos:end="27:71"><name pos:start="23:5" pos:end="23:23">object_property_add</name><argument_list pos:start="23:24" pos:end="27:71">(<argument pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><name pos:start="23:25" pos:end="23:27">obj</name></expr></argument>, <argument pos:start="23:30" pos:end="23:37"><expr pos:start="23:30" pos:end="23:37"><literal type="string" pos:start="23:30" pos:end="23:37">"family"</literal></expr></argument>, <argument pos:start="23:40" pos:end="23:44"><expr pos:start="23:40" pos:end="23:44"><literal type="string" pos:start="23:40" pos:end="23:44">"int"</literal></expr></argument>,

                        <argument pos:start="25:25" pos:end="25:52"><expr pos:start="25:25" pos:end="25:52"><name pos:start="25:25" pos:end="25:52">x86_cpuid_version_get_family</name></expr></argument>,

                        <argument pos:start="27:25" pos:end="27:52"><expr pos:start="27:25" pos:end="27:52"><name pos:start="27:25" pos:end="27:52">x86_cpuid_version_set_family</name></expr></argument>, <argument pos:start="27:55" pos:end="27:58"><expr pos:start="27:55" pos:end="27:58"><name pos:start="27:55" pos:end="27:58">NULL</name></expr></argument>, <argument pos:start="27:61" pos:end="27:64"><expr pos:start="27:61" pos:end="27:64"><name pos:start="27:61" pos:end="27:64">NULL</name></expr></argument>, <argument pos:start="27:67" pos:end="27:70"><expr pos:start="27:67" pos:end="27:70"><name pos:start="27:67" pos:end="27:70">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="33:71"><expr pos:start="29:5" pos:end="33:70"><call pos:start="29:5" pos:end="33:70"><name pos:start="29:5" pos:end="29:23">object_property_add</name><argument_list pos:start="29:24" pos:end="33:70">(<argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">obj</name></expr></argument>, <argument pos:start="29:30" pos:end="29:36"><expr pos:start="29:30" pos:end="29:36"><literal type="string" pos:start="29:30" pos:end="29:36">"model"</literal></expr></argument>, <argument pos:start="29:39" pos:end="29:43"><expr pos:start="29:39" pos:end="29:43"><literal type="string" pos:start="29:39" pos:end="29:43">"int"</literal></expr></argument>,

                        <argument pos:start="31:25" pos:end="31:51"><expr pos:start="31:25" pos:end="31:51"><name pos:start="31:25" pos:end="31:51">x86_cpuid_version_get_model</name></expr></argument>,

                        <argument pos:start="33:25" pos:end="33:51"><expr pos:start="33:25" pos:end="33:51"><name pos:start="33:25" pos:end="33:51">x86_cpuid_version_set_model</name></expr></argument>, <argument pos:start="33:54" pos:end="33:57"><expr pos:start="33:54" pos:end="33:57"><name pos:start="33:54" pos:end="33:57">NULL</name></expr></argument>, <argument pos:start="33:60" pos:end="33:63"><expr pos:start="33:60" pos:end="33:63"><name pos:start="33:60" pos:end="33:63">NULL</name></expr></argument>, <argument pos:start="33:66" pos:end="33:69"><expr pos:start="33:66" pos:end="33:69"><name pos:start="33:66" pos:end="33:69">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="39:74"><expr pos:start="35:5" pos:end="39:73"><call pos:start="35:5" pos:end="39:73"><name pos:start="35:5" pos:end="35:23">object_property_add</name><argument_list pos:start="35:24" pos:end="39:73">(<argument pos:start="35:25" pos:end="35:27"><expr pos:start="35:25" pos:end="35:27"><name pos:start="35:25" pos:end="35:27">obj</name></expr></argument>, <argument pos:start="35:30" pos:end="35:39"><expr pos:start="35:30" pos:end="35:39"><literal type="string" pos:start="35:30" pos:end="35:39">"stepping"</literal></expr></argument>, <argument pos:start="35:42" pos:end="35:46"><expr pos:start="35:42" pos:end="35:46"><literal type="string" pos:start="35:42" pos:end="35:46">"int"</literal></expr></argument>,

                        <argument pos:start="37:25" pos:end="37:54"><expr pos:start="37:25" pos:end="37:54"><name pos:start="37:25" pos:end="37:54">x86_cpuid_version_get_stepping</name></expr></argument>,

                        <argument pos:start="39:25" pos:end="39:54"><expr pos:start="39:25" pos:end="39:54"><name pos:start="39:25" pos:end="39:54">x86_cpuid_version_set_stepping</name></expr></argument>, <argument pos:start="39:57" pos:end="39:60"><expr pos:start="39:57" pos:end="39:60"><name pos:start="39:57" pos:end="39:60">NULL</name></expr></argument>, <argument pos:start="39:63" pos:end="39:66"><expr pos:start="39:63" pos:end="39:66"><name pos:start="39:63" pos:end="39:66">NULL</name></expr></argument>, <argument pos:start="39:69" pos:end="39:72"><expr pos:start="39:69" pos:end="39:72"><name pos:start="39:69" pos:end="39:72">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="45:56"><expr pos:start="41:5" pos:end="45:55"><call pos:start="41:5" pos:end="45:55"><name pos:start="41:5" pos:end="41:27">object_property_add_str</name><argument_list pos:start="41:28" pos:end="45:55">(<argument pos:start="41:29" pos:end="41:31"><expr pos:start="41:29" pos:end="41:31"><name pos:start="41:29" pos:end="41:31">obj</name></expr></argument>, <argument pos:start="41:34" pos:end="41:41"><expr pos:start="41:34" pos:end="41:41"><literal type="string" pos:start="41:34" pos:end="41:41">"vendor"</literal></expr></argument>,

                            <argument pos:start="43:29" pos:end="43:48"><expr pos:start="43:29" pos:end="43:48"><name pos:start="43:29" pos:end="43:48">x86_cpuid_get_vendor</name></expr></argument>,

                            <argument pos:start="45:29" pos:end="45:48"><expr pos:start="45:29" pos:end="45:48"><name pos:start="45:29" pos:end="45:48">x86_cpuid_set_vendor</name></expr></argument>, <argument pos:start="45:51" pos:end="45:54"><expr pos:start="45:51" pos:end="45:54"><name pos:start="45:51" pos:end="45:54">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="51:58"><expr pos:start="47:5" pos:end="51:57"><call pos:start="47:5" pos:end="51:57"><name pos:start="47:5" pos:end="47:27">object_property_add_str</name><argument_list pos:start="47:28" pos:end="51:57">(<argument pos:start="47:29" pos:end="47:31"><expr pos:start="47:29" pos:end="47:31"><name pos:start="47:29" pos:end="47:31">obj</name></expr></argument>, <argument pos:start="47:34" pos:end="47:43"><expr pos:start="47:34" pos:end="47:43"><literal type="string" pos:start="47:34" pos:end="47:43">"model-id"</literal></expr></argument>,

                            <argument pos:start="49:29" pos:end="49:50"><expr pos:start="49:29" pos:end="49:50"><name pos:start="49:29" pos:end="49:50">x86_cpuid_get_model_id</name></expr></argument>,

                            <argument pos:start="51:29" pos:end="51:50"><expr pos:start="51:29" pos:end="51:50"><name pos:start="51:29" pos:end="51:50">x86_cpuid_set_model_id</name></expr></argument>, <argument pos:start="51:53" pos:end="51:56"><expr pos:start="51:53" pos:end="51:56"><name pos:start="51:53" pos:end="51:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="57:66"><expr pos:start="53:5" pos:end="57:65"><call pos:start="53:5" pos:end="57:65"><name pos:start="53:5" pos:end="53:23">object_property_add</name><argument_list pos:start="53:24" pos:end="57:65">(<argument pos:start="53:25" pos:end="53:27"><expr pos:start="53:25" pos:end="53:27"><name pos:start="53:25" pos:end="53:27">obj</name></expr></argument>, <argument pos:start="53:30" pos:end="53:44"><expr pos:start="53:30" pos:end="53:44"><literal type="string" pos:start="53:30" pos:end="53:44">"tsc-frequency"</literal></expr></argument>, <argument pos:start="53:47" pos:end="53:51"><expr pos:start="53:47" pos:end="53:51"><literal type="string" pos:start="53:47" pos:end="53:51">"int"</literal></expr></argument>,

                        <argument pos:start="55:25" pos:end="55:46"><expr pos:start="55:25" pos:end="55:46"><name pos:start="55:25" pos:end="55:46">x86_cpuid_get_tsc_freq</name></expr></argument>,

                        <argument pos:start="57:25" pos:end="57:46"><expr pos:start="57:25" pos:end="57:46"><name pos:start="57:25" pos:end="57:46">x86_cpuid_set_tsc_freq</name></expr></argument>, <argument pos:start="57:49" pos:end="57:52"><expr pos:start="57:49" pos:end="57:52"><name pos:start="57:49" pos:end="57:52">NULL</name></expr></argument>, <argument pos:start="57:55" pos:end="57:58"><expr pos:start="57:55" pos:end="57:58"><name pos:start="57:55" pos:end="57:58">NULL</name></expr></argument>, <argument pos:start="57:61" pos:end="57:64"><expr pos:start="57:61" pos:end="57:64"><name pos:start="57:61" pos:end="57:64">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="63:65"><expr pos:start="59:5" pos:end="63:64"><call pos:start="59:5" pos:end="63:64"><name pos:start="59:5" pos:end="59:23">object_property_add</name><argument_list pos:start="59:24" pos:end="63:64">(<argument pos:start="59:25" pos:end="59:27"><expr pos:start="59:25" pos:end="59:27"><name pos:start="59:25" pos:end="59:27">obj</name></expr></argument>, <argument pos:start="59:30" pos:end="59:38"><expr pos:start="59:30" pos:end="59:38"><literal type="string" pos:start="59:30" pos:end="59:38">"apic-id"</literal></expr></argument>, <argument pos:start="59:41" pos:end="59:45"><expr pos:start="59:41" pos:end="59:45"><literal type="string" pos:start="59:41" pos:end="59:45">"int"</literal></expr></argument>,

                        <argument pos:start="61:25" pos:end="61:45"><expr pos:start="61:25" pos:end="61:45"><name pos:start="61:25" pos:end="61:45">x86_cpuid_get_apic_id</name></expr></argument>,

                        <argument pos:start="63:25" pos:end="63:45"><expr pos:start="63:25" pos:end="63:45"><name pos:start="63:25" pos:end="63:45">x86_cpuid_set_apic_id</name></expr></argument>, <argument pos:start="63:48" pos:end="63:51"><expr pos:start="63:48" pos:end="63:51"><name pos:start="63:48" pos:end="63:51">NULL</name></expr></argument>, <argument pos:start="63:54" pos:end="63:57"><expr pos:start="63:54" pos:end="63:57"><name pos:start="63:54" pos:end="63:57">NULL</name></expr></argument>, <argument pos:start="63:60" pos:end="63:63"><expr pos:start="63:60" pos:end="63:63"><name pos:start="63:60" pos:end="63:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="69:65"><expr pos:start="65:5" pos:end="69:64"><call pos:start="65:5" pos:end="69:64"><name pos:start="65:5" pos:end="65:23">object_property_add</name><argument_list pos:start="65:24" pos:end="69:64">(<argument pos:start="65:25" pos:end="65:27"><expr pos:start="65:25" pos:end="65:27"><name pos:start="65:25" pos:end="65:27">obj</name></expr></argument>, <argument pos:start="65:30" pos:end="65:44"><expr pos:start="65:30" pos:end="65:44"><literal type="string" pos:start="65:30" pos:end="65:44">"feature-words"</literal></expr></argument>, <argument pos:start="65:47" pos:end="65:69"><expr pos:start="65:47" pos:end="65:69"><literal type="string" pos:start="65:47" pos:end="65:69">"X86CPUFeatureWordInfo"</literal></expr></argument>,

                        <argument pos:start="67:25" pos:end="67:49"><expr pos:start="67:25" pos:end="67:49"><name pos:start="67:25" pos:end="67:49">x86_cpu_get_feature_words</name></expr></argument>,

                        <argument pos:start="69:25" pos:end="69:28"><expr pos:start="69:25" pos:end="69:28"><name pos:start="69:25" pos:end="69:28">NULL</name></expr></argument>, <argument pos:start="69:31" pos:end="69:34"><expr pos:start="69:31" pos:end="69:34"><name pos:start="69:31" pos:end="69:34">NULL</name></expr></argument>, <argument pos:start="69:37" pos:end="69:57"><expr pos:start="69:37" pos:end="69:57"><operator pos:start="69:37" pos:end="69:37">(</operator><name pos:start="69:38" pos:end="69:41">void</name> <operator pos:start="69:43" pos:end="69:43">*</operator><operator pos:start="69:44" pos:end="69:44">)</operator><name pos:start="69:45" pos:end="69:57"><name pos:start="69:45" pos:end="69:47">env</name><operator pos:start="69:48" pos:end="69:49">-&gt;</operator><name pos:start="69:50" pos:end="69:57">features</name></name></expr></argument>, <argument pos:start="69:60" pos:end="69:63"><expr pos:start="69:60" pos:end="69:63"><name pos:start="69:60" pos:end="69:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="75:74"><expr pos:start="71:5" pos:end="75:73"><call pos:start="71:5" pos:end="75:73"><name pos:start="71:5" pos:end="71:23">object_property_add</name><argument_list pos:start="71:24" pos:end="75:73">(<argument pos:start="71:25" pos:end="71:27"><expr pos:start="71:25" pos:end="71:27"><name pos:start="71:25" pos:end="71:27">obj</name></expr></argument>, <argument pos:start="71:30" pos:end="71:48"><expr pos:start="71:30" pos:end="71:48"><literal type="string" pos:start="71:30" pos:end="71:48">"filtered-features"</literal></expr></argument>, <argument pos:start="71:51" pos:end="71:73"><expr pos:start="71:51" pos:end="71:73"><literal type="string" pos:start="71:51" pos:end="71:73">"X86CPUFeatureWordInfo"</literal></expr></argument>,

                        <argument pos:start="73:25" pos:end="73:49"><expr pos:start="73:25" pos:end="73:49"><name pos:start="73:25" pos:end="73:49">x86_cpu_get_feature_words</name></expr></argument>,

                        <argument pos:start="75:25" pos:end="75:28"><expr pos:start="75:25" pos:end="75:28"><name pos:start="75:25" pos:end="75:28">NULL</name></expr></argument>, <argument pos:start="75:31" pos:end="75:34"><expr pos:start="75:31" pos:end="75:34"><name pos:start="75:31" pos:end="75:34">NULL</name></expr></argument>, <argument pos:start="75:37" pos:end="75:66"><expr pos:start="75:37" pos:end="75:66"><operator pos:start="75:37" pos:end="75:37">(</operator><name pos:start="75:38" pos:end="75:41">void</name> <operator pos:start="75:43" pos:end="75:43">*</operator><operator pos:start="75:44" pos:end="75:44">)</operator><name pos:start="75:45" pos:end="75:66"><name pos:start="75:45" pos:end="75:47">cpu</name><operator pos:start="75:48" pos:end="75:49">-&gt;</operator><name pos:start="75:50" pos:end="75:66">filtered_features</name></name></expr></argument>, <argument pos:start="75:69" pos:end="75:72"><expr pos:start="75:69" pos:end="75:72"><name pos:start="75:69" pos:end="75:72">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="84:0"><expr pos:start="79:5" pos:end="79:63"><name pos:start="79:5" pos:end="79:33"><name pos:start="79:5" pos:end="79:7">cpu</name><operator pos:start="79:8" pos:end="79:9">-&gt;</operator><name pos:start="79:10" pos:end="79:33">hyperv_spinlock_attempts</name></name> <operator pos:start="79:35" pos:end="79:35">=</operator> <name pos:start="79:37" pos:end="79:63">HYPERV_SPINLOCK_NEVER_RETRY</name></expr>;</expr_stmt>



<cpp:ifndef pos:start="83:1" pos:end="83:24">#<cpp:directive pos:start="83:2" pos:end="83:7">ifndef</cpp:directive> <name pos:start="83:9" pos:end="83:24">CONFIG_USER_ONLY</name></cpp:ifndef>

    <comment type="block" pos:start="85:5" pos:end="85:77">/* Any code creating new X86CPU objects have to set apic-id explicitly */</comment>

    <expr_stmt pos:start="87:5" pos:end="90:0"><expr pos:start="87:5" pos:end="87:21"><name pos:start="87:5" pos:end="87:16"><name pos:start="87:5" pos:end="87:7">cpu</name><operator pos:start="87:8" pos:end="87:9">-&gt;</operator><name pos:start="87:10" pos:end="87:16">apic_id</name></name> <operator pos:start="87:18" pos:end="87:18">=</operator> <operator pos:start="87:20" pos:end="87:20">-</operator><literal type="number" pos:start="87:21" pos:end="87:21">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>



    <for pos:start="93:5" pos:end="105:5">for <control pos:start="93:9" pos:end="93:39">(<init pos:start="93:10" pos:end="93:15"><expr pos:start="93:10" pos:end="93:14"><name pos:start="93:10" pos:end="93:10">w</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <literal type="number" pos:start="93:14" pos:end="93:14">0</literal></expr>;</init> <condition pos:start="93:17" pos:end="93:34"><expr pos:start="93:17" pos:end="93:33"><name pos:start="93:17" pos:end="93:17">w</name> <operator pos:start="93:19" pos:end="93:19">&lt;</operator> <name pos:start="93:21" pos:end="93:33">FEATURE_WORDS</name></expr>;</condition> <incr pos:start="93:36" pos:end="93:38"><expr pos:start="93:36" pos:end="93:38"><name pos:start="93:36" pos:end="93:36">w</name><operator pos:start="93:37" pos:end="93:38">++</operator></expr></incr>)</control> <block pos:start="93:41" pos:end="105:5">{<block_content pos:start="95:9" pos:end="103:9">

        <decl_stmt pos:start="95:9" pos:end="95:18"><decl pos:start="95:9" pos:end="95:17"><type pos:start="95:9" pos:end="95:11"><name pos:start="95:9" pos:end="95:11">int</name></type> <name pos:start="95:13" pos:end="95:17">bitnr</name></decl>;</decl_stmt>



        <for pos:start="99:9" pos:end="103:9">for <control pos:start="99:13" pos:end="99:44">(<init pos:start="99:14" pos:end="99:23"><expr pos:start="99:14" pos:end="99:22"><name pos:start="99:14" pos:end="99:18">bitnr</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:22">0</literal></expr>;</init> <condition pos:start="99:25" pos:end="99:35"><expr pos:start="99:25" pos:end="99:34"><name pos:start="99:25" pos:end="99:29">bitnr</name> <operator pos:start="99:31" pos:end="99:31">&lt;</operator> <literal type="number" pos:start="99:33" pos:end="99:34">32</literal></expr>;</condition> <incr pos:start="99:37" pos:end="99:43"><expr pos:start="99:37" pos:end="99:43"><name pos:start="99:37" pos:end="99:41">bitnr</name><operator pos:start="99:42" pos:end="99:43">++</operator></expr></incr>)</control> <block pos:start="99:46" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:62">

            <expr_stmt pos:start="101:13" pos:end="101:62"><expr pos:start="101:13" pos:end="101:61"><call pos:start="101:13" pos:end="101:61"><name pos:start="101:13" pos:end="101:46">x86_cpu_register_feature_bit_props</name><argument_list pos:start="101:47" pos:end="101:61">(<argument pos:start="101:48" pos:end="101:50"><expr pos:start="101:48" pos:end="101:50"><name pos:start="101:48" pos:end="101:50">cpu</name></expr></argument>, <argument pos:start="101:53" pos:end="101:53"><expr pos:start="101:53" pos:end="101:53"><name pos:start="101:53" pos:end="101:53">w</name></expr></argument>, <argument pos:start="101:56" pos:end="101:60"><expr pos:start="101:56" pos:end="101:60"><name pos:start="101:56" pos:end="101:60">bitnr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="109:5" pos:end="109:54"><expr pos:start="109:5" pos:end="109:53"><call pos:start="109:5" pos:end="109:53"><name pos:start="109:5" pos:end="109:20">x86_cpu_load_def</name><argument_list pos:start="109:21" pos:end="109:53">(<argument pos:start="109:22" pos:end="109:24"><expr pos:start="109:22" pos:end="109:24"><name pos:start="109:22" pos:end="109:24">cpu</name></expr></argument>, <argument pos:start="109:27" pos:end="109:38"><expr pos:start="109:27" pos:end="109:38"><name pos:start="109:27" pos:end="109:38"><name pos:start="109:27" pos:end="109:29">xcc</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:38">cpu_def</name></name></expr></argument>, <argument pos:start="109:41" pos:end="109:52"><expr pos:start="109:41" pos:end="109:52"><operator pos:start="109:41" pos:end="109:41">&amp;</operator><name pos:start="109:42" pos:end="109:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
