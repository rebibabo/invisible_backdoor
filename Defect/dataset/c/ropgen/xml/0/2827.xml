<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2827.c" pos:tabs="8"><function pos:start="1:1" pos:end="211:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">virtio_scsi_do_tmf</name><parameter_list pos:start="1:31" pos:end="1:65">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:41">VirtIOSCSI</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><name pos:start="1:47" pos:end="1:59">VirtIOSCSIReq</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">req</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="211:1">{<block_content pos:start="5:5" pos:end="209:55">

    <decl_stmt pos:start="5:5" pos:end="5:66"><decl pos:start="5:5" pos:end="5:65"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">SCSIDevice</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">d</name> <init pos:start="5:19" pos:end="5:65">= <expr pos:start="5:21" pos:end="5:65"><call pos:start="5:21" pos:end="5:65"><name pos:start="5:21" pos:end="5:43">virtio_scsi_device_find</name><argument_list pos:start="5:44" pos:end="5:65">(<argument pos:start="5:45" pos:end="5:45"><expr pos:start="5:45" pos:end="5:45"><name pos:start="5:45" pos:end="5:45">s</name></expr></argument>, <argument pos:start="5:48" pos:end="5:64"><expr pos:start="5:48" pos:end="5:64"><name pos:start="5:48" pos:end="5:64"><name pos:start="5:48" pos:end="5:50">req</name><operator pos:start="5:51" pos:end="5:52">-&gt;</operator><name pos:start="5:53" pos:end="5:55">req</name><operator pos:start="5:56" pos:end="5:56">.</operator><name pos:start="5:57" pos:end="5:59">tmf</name><operator pos:start="5:60" pos:end="5:61">-&gt;</operator><name pos:start="5:62" pos:end="5:64">lun</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">SCSIRequest</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">r</name></decl>, <decl pos:start="7:21" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:17"><modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:25">next</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">BusChild</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">kid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">target</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:59">/* Here VIRTIO_SCSI_S_OK means "FUNCTION COMPLETE".  */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:47"><expr pos:start="17:5" pos:end="17:46"><name pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:7">req</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:13">resp</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:17">tmf</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:27">response</name></name> <operator pos:start="17:29" pos:end="17:29">=</operator> <name pos:start="17:31" pos:end="17:46">VIRTIO_SCSI_S_OK</name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><call pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:12">tswap32s</name><argument_list pos:start="21:13" pos:end="21:36">(<argument pos:start="21:14" pos:end="21:35"><expr pos:start="21:14" pos:end="21:35"><operator pos:start="21:14" pos:end="21:14">&amp;</operator><name pos:start="21:15" pos:end="21:35"><name pos:start="21:15" pos:end="21:17">req</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:22">req</name><operator pos:start="21:23" pos:end="21:23">.</operator><name pos:start="21:24" pos:end="21:26">tmf</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:35">subtype</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="23:5" pos:end="191:5">switch <condition pos:start="23:12" pos:end="23:34">(<expr pos:start="23:13" pos:end="23:33"><name pos:start="23:13" pos:end="23:33"><name pos:start="23:13" pos:end="23:15">req</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:20">req</name><operator pos:start="23:21" pos:end="23:21">.</operator><name pos:start="23:22" pos:end="23:24">tmf</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:33">subtype</name></name></expr>)</condition> <block pos:start="23:36" pos:end="191:5">{<block_content pos:start="25:5" pos:end="189:14">

    <case pos:start="25:5" pos:end="25:38">case <expr pos:start="25:10" pos:end="25:37"><name pos:start="25:10" pos:end="25:37">VIRTIO_SCSI_T_TMF_ABORT_TASK</name></expr>:</case>

    <case pos:start="27:5" pos:end="27:38">case <expr pos:start="27:10" pos:end="27:37"><name pos:start="27:10" pos:end="27:37">VIRTIO_SCSI_T_TMF_QUERY_TASK</name></expr>:</case>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:15">(<expr pos:start="29:13" pos:end="29:14"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:14">d</name></expr>)</condition> <block pos:start="29:17" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:22">

            <goto pos:start="31:13" pos:end="31:22">goto <name pos:start="31:18" pos:end="31:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:61">(<expr pos:start="35:13" pos:end="35:60"><name pos:start="35:13" pos:end="35:18"><name pos:start="35:13" pos:end="35:13">d</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:18">lun</name></name> <operator pos:start="35:20" pos:end="35:21">!=</operator> <call pos:start="35:23" pos:end="35:60"><name pos:start="35:23" pos:end="35:41">virtio_scsi_get_lun</name><argument_list pos:start="35:42" pos:end="35:60">(<argument pos:start="35:43" pos:end="35:59"><expr pos:start="35:43" pos:end="35:59"><name pos:start="35:43" pos:end="35:59"><name pos:start="35:43" pos:end="35:45">req</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:50">req</name><operator pos:start="35:51" pos:end="35:51">.</operator><name pos:start="35:52" pos:end="35:54">tmf</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:59">lun</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:63" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:31">

            <goto pos:start="37:13" pos:end="37:31">goto <name pos:start="37:18" pos:end="37:30">incorrect_lun</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <macro pos:start="41:9" pos:end="41:56"><name pos:start="41:9" pos:end="41:27">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="41:28" pos:end="41:56">(<argument pos:start="41:29" pos:end="41:29">r</argument>, <argument pos:start="41:32" pos:end="41:43">&amp;d-&gt;requests</argument>, <argument pos:start="41:46" pos:end="41:49">next</argument>, <argument pos:start="41:52" pos:end="41:55">next</argument>)</argument_list></macro> <block pos:start="41:58" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:13">

            <decl_stmt pos:start="43:13" pos:end="43:52"><decl pos:start="43:13" pos:end="43:51"><type pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:25">VirtIOSCSIReq</name> <modifier pos:start="43:27" pos:end="43:27">*</modifier></type><name pos:start="43:28" pos:end="43:34">cmd_req</name> <init pos:start="43:36" pos:end="43:51">= <expr pos:start="43:38" pos:end="43:51"><name pos:start="43:38" pos:end="43:51"><name pos:start="43:38" pos:end="43:38">r</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:51">hba_private</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="45:13" pos:end="49:13"><if pos:start="45:13" pos:end="49:13">if <condition pos:start="45:16" pos:end="45:70">(<expr pos:start="45:17" pos:end="45:69"><name pos:start="45:17" pos:end="45:23">cmd_req</name> <operator pos:start="45:25" pos:end="45:26">&amp;&amp;</operator> <name pos:start="45:28" pos:end="45:48"><name pos:start="45:28" pos:end="45:34">cmd_req</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:39">req</name><operator pos:start="45:40" pos:end="45:40">.</operator><name pos:start="45:41" pos:end="45:43">cmd</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:48">tag</name></name> <operator pos:start="45:50" pos:end="45:51">==</operator> <name pos:start="45:53" pos:end="45:69"><name pos:start="45:53" pos:end="45:55">req</name><operator pos:start="45:56" pos:end="45:57">-&gt;</operator><name pos:start="45:58" pos:end="45:60">req</name><operator pos:start="45:61" pos:end="45:61">.</operator><name pos:start="45:62" pos:end="45:64">tmf</name><operator pos:start="45:65" pos:end="45:66">-&gt;</operator><name pos:start="45:67" pos:end="45:69">tag</name></name></expr>)</condition> <block pos:start="45:72" pos:end="49:13">{<block_content pos:start="47:17" pos:end="47:22">

                <break pos:start="47:17" pos:end="47:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <if_stmt pos:start="53:9" pos:end="81:9"><if pos:start="53:9" pos:end="81:9">if <condition pos:start="53:12" pos:end="53:14">(<expr pos:start="53:13" pos:end="53:13"><name pos:start="53:13" pos:end="53:13">r</name></expr>)</condition> <block pos:start="53:16" pos:end="81:9">{<block_content pos:start="63:13" pos:end="79:13">

            <comment type="block" pos:start="55:13" pos:end="61:15">/*

             * Assert that the request has not been completed yet, we

             * check for it in the loop above.

             */</comment>

            <expr_stmt pos:start="63:13" pos:end="63:35"><expr pos:start="63:13" pos:end="63:34"><call pos:start="63:13" pos:end="63:34"><name pos:start="63:13" pos:end="63:18">assert</name><argument_list pos:start="63:19" pos:end="63:34">(<argument pos:start="63:20" pos:end="63:33"><expr pos:start="63:20" pos:end="63:33"><name pos:start="63:20" pos:end="63:33"><name pos:start="63:20" pos:end="63:20">r</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:33">hba_private</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="79:13"><if pos:start="65:13" pos:end="75:13">if <condition pos:start="65:16" pos:end="65:70">(<expr pos:start="65:17" pos:end="65:69"><name pos:start="65:17" pos:end="65:37"><name pos:start="65:17" pos:end="65:19">req</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:24">req</name><operator pos:start="65:25" pos:end="65:25">.</operator><name pos:start="65:26" pos:end="65:28">tmf</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:37">subtype</name></name> <operator pos:start="65:39" pos:end="65:40">==</operator> <name pos:start="65:42" pos:end="65:69">VIRTIO_SCSI_T_TMF_QUERY_TASK</name></expr>)</condition> <block pos:start="65:72" pos:end="75:13">{<block_content pos:start="73:17" pos:end="73:75">

                <comment type="block" pos:start="67:17" pos:end="71:19">/* "If the specified command is present in the task set, then

                 * return a service response set to FUNCTION SUCCEEDED".

                 */</comment>

                <expr_stmt pos:start="73:17" pos:end="73:75"><expr pos:start="73:17" pos:end="73:74"><name pos:start="73:17" pos:end="73:39"><name pos:start="73:17" pos:end="73:19">req</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:25">resp</name><operator pos:start="73:26" pos:end="73:26">.</operator><name pos:start="73:27" pos:end="73:29">tmf</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:39">response</name></name> <operator pos:start="73:41" pos:end="73:41">=</operator> <name pos:start="73:43" pos:end="73:74">VIRTIO_SCSI_S_FUNCTION_SUCCEEDED</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="75:15" pos:end="79:13">else <block pos:start="75:20" pos:end="79:13">{<block_content pos:start="77:17" pos:end="77:35">

                <expr_stmt pos:start="77:17" pos:end="77:35"><expr pos:start="77:17" pos:end="77:34"><call pos:start="77:17" pos:end="77:34"><name pos:start="77:17" pos:end="77:31">scsi_req_cancel</name><argument_list pos:start="77:32" pos:end="77:34">(<argument pos:start="77:33" pos:end="77:33"><expr pos:start="77:33" pos:end="77:33"><name pos:start="77:33" pos:end="77:33">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>



    <case pos:start="87:5" pos:end="87:46">case <expr pos:start="87:10" pos:end="87:45"><name pos:start="87:10" pos:end="87:45">VIRTIO_SCSI_T_TMF_LOGICAL_UNIT_RESET</name></expr>:</case>

        <if_stmt pos:start="89:9" pos:end="93:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:15">(<expr pos:start="89:13" pos:end="89:14"><operator pos:start="89:13" pos:end="89:13">!</operator><name pos:start="89:14" pos:end="89:14">d</name></expr>)</condition> <block pos:start="89:17" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:22">

            <goto pos:start="91:13" pos:end="91:22">goto <name pos:start="91:18" pos:end="91:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="95:9" pos:end="99:9"><if pos:start="95:9" pos:end="99:9">if <condition pos:start="95:12" pos:end="95:61">(<expr pos:start="95:13" pos:end="95:60"><name pos:start="95:13" pos:end="95:18"><name pos:start="95:13" pos:end="95:13">d</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:18">lun</name></name> <operator pos:start="95:20" pos:end="95:21">!=</operator> <call pos:start="95:23" pos:end="95:60"><name pos:start="95:23" pos:end="95:41">virtio_scsi_get_lun</name><argument_list pos:start="95:42" pos:end="95:60">(<argument pos:start="95:43" pos:end="95:59"><expr pos:start="95:43" pos:end="95:59"><name pos:start="95:43" pos:end="95:59"><name pos:start="95:43" pos:end="95:45">req</name><operator pos:start="95:46" pos:end="95:47">-&gt;</operator><name pos:start="95:48" pos:end="95:50">req</name><operator pos:start="95:51" pos:end="95:51">.</operator><name pos:start="95:52" pos:end="95:54">tmf</name><operator pos:start="95:55" pos:end="95:56">-&gt;</operator><name pos:start="95:57" pos:end="95:59">lun</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="95:63" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:31">

            <goto pos:start="97:13" pos:end="97:31">goto <name pos:start="97:18" pos:end="97:30">incorrect_lun</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:23"><expr pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:20">resetting</name></name><operator pos:start="101:21" pos:end="101:22">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:33"><expr pos:start="103:9" pos:end="103:32"><call pos:start="103:9" pos:end="103:32"><name pos:start="103:9" pos:end="103:22">qdev_reset_all</name><argument_list pos:start="103:23" pos:end="103:32">(<argument pos:start="103:24" pos:end="103:31"><expr pos:start="103:24" pos:end="103:31"><operator pos:start="103:24" pos:end="103:24">&amp;</operator><name pos:start="103:25" pos:end="103:31"><name pos:start="103:25" pos:end="103:25">d</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:31">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:23"><expr pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:20">resetting</name></name><operator pos:start="105:21" pos:end="105:22">--</operator></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>



    <case pos:start="111:5" pos:end="111:42">case <expr pos:start="111:10" pos:end="111:41"><name pos:start="111:10" pos:end="111:41">VIRTIO_SCSI_T_TMF_ABORT_TASK_SET</name></expr>:</case>

    <case pos:start="113:5" pos:end="113:42">case <expr pos:start="113:10" pos:end="113:41"><name pos:start="113:10" pos:end="113:41">VIRTIO_SCSI_T_TMF_CLEAR_TASK_SET</name></expr>:</case>

    <case pos:start="115:5" pos:end="115:42">case <expr pos:start="115:10" pos:end="115:41"><name pos:start="115:10" pos:end="115:41">VIRTIO_SCSI_T_TMF_QUERY_TASK_SET</name></expr>:</case>

        <if_stmt pos:start="117:9" pos:end="121:9"><if pos:start="117:9" pos:end="121:9">if <condition pos:start="117:12" pos:end="117:15">(<expr pos:start="117:13" pos:end="117:14"><operator pos:start="117:13" pos:end="117:13">!</operator><name pos:start="117:14" pos:end="117:14">d</name></expr>)</condition> <block pos:start="117:17" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:22">

            <goto pos:start="119:13" pos:end="119:22">goto <name pos:start="119:18" pos:end="119:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="123:9" pos:end="127:9"><if pos:start="123:9" pos:end="127:9">if <condition pos:start="123:12" pos:end="123:61">(<expr pos:start="123:13" pos:end="123:60"><name pos:start="123:13" pos:end="123:18"><name pos:start="123:13" pos:end="123:13">d</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:18">lun</name></name> <operator pos:start="123:20" pos:end="123:21">!=</operator> <call pos:start="123:23" pos:end="123:60"><name pos:start="123:23" pos:end="123:41">virtio_scsi_get_lun</name><argument_list pos:start="123:42" pos:end="123:60">(<argument pos:start="123:43" pos:end="123:59"><expr pos:start="123:43" pos:end="123:59"><name pos:start="123:43" pos:end="123:59"><name pos:start="123:43" pos:end="123:45">req</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:50">req</name><operator pos:start="123:51" pos:end="123:51">.</operator><name pos:start="123:52" pos:end="123:54">tmf</name><operator pos:start="123:55" pos:end="123:56">-&gt;</operator><name pos:start="123:57" pos:end="123:59">lun</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:63" pos:end="127:9">{<block_content pos:start="125:13" pos:end="125:31">

            <goto pos:start="125:13" pos:end="125:31">goto <name pos:start="125:18" pos:end="125:30">incorrect_lun</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <macro pos:start="129:9" pos:end="129:56"><name pos:start="129:9" pos:end="129:27">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="129:28" pos:end="129:56">(<argument pos:start="129:29" pos:end="129:29">r</argument>, <argument pos:start="129:32" pos:end="129:43">&amp;d-&gt;requests</argument>, <argument pos:start="129:46" pos:end="129:49">next</argument>, <argument pos:start="129:52" pos:end="129:55">next</argument>)</argument_list></macro> <block pos:start="129:58" pos:end="153:9">{<block_content pos:start="131:13" pos:end="151:13">

            <if_stmt pos:start="131:13" pos:end="151:13"><if pos:start="131:13" pos:end="151:13">if <condition pos:start="131:16" pos:end="131:31">(<expr pos:start="131:17" pos:end="131:30"><name pos:start="131:17" pos:end="131:30"><name pos:start="131:17" pos:end="131:17">r</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:30">hba_private</name></name></expr>)</condition> <block pos:start="131:33" pos:end="151:13">{<block_content pos:start="133:17" pos:end="149:17">

                <if_stmt pos:start="133:17" pos:end="149:17"><if pos:start="133:17" pos:end="145:17">if <condition pos:start="133:20" pos:end="133:78">(<expr pos:start="133:21" pos:end="133:77"><name pos:start="133:21" pos:end="133:41"><name pos:start="133:21" pos:end="133:23">req</name><operator pos:start="133:24" pos:end="133:25">-&gt;</operator><name pos:start="133:26" pos:end="133:28">req</name><operator pos:start="133:29" pos:end="133:29">.</operator><name pos:start="133:30" pos:end="133:32">tmf</name><operator pos:start="133:33" pos:end="133:34">-&gt;</operator><name pos:start="133:35" pos:end="133:41">subtype</name></name> <operator pos:start="133:43" pos:end="133:44">==</operator> <name pos:start="133:46" pos:end="133:77">VIRTIO_SCSI_T_TMF_QUERY_TASK_SET</name></expr>)</condition> <block pos:start="133:80" pos:end="145:17">{<block_content pos:start="141:21" pos:end="143:26">

                    <comment type="block" pos:start="135:21" pos:end="139:23">/* "If there is any command present in the task set, then

                     * return a service response set to FUNCTION SUCCEEDED".

                     */</comment>

                    <expr_stmt pos:start="141:21" pos:end="141:79"><expr pos:start="141:21" pos:end="141:78"><name pos:start="141:21" pos:end="141:43"><name pos:start="141:21" pos:end="141:23">req</name><operator pos:start="141:24" pos:end="141:25">-&gt;</operator><name pos:start="141:26" pos:end="141:29">resp</name><operator pos:start="141:30" pos:end="141:30">.</operator><name pos:start="141:31" pos:end="141:33">tmf</name><operator pos:start="141:34" pos:end="141:35">-&gt;</operator><name pos:start="141:36" pos:end="141:43">response</name></name> <operator pos:start="141:45" pos:end="141:45">=</operator> <name pos:start="141:47" pos:end="141:78">VIRTIO_SCSI_S_FUNCTION_SUCCEEDED</name></expr>;</expr_stmt>

                    <break pos:start="143:21" pos:end="143:26">break;</break>

                </block_content>}</block></if> <else pos:start="145:19" pos:end="149:17">else <block pos:start="145:24" pos:end="149:17">{<block_content pos:start="147:21" pos:end="147:39">

                    <expr_stmt pos:start="147:21" pos:end="147:39"><expr pos:start="147:21" pos:end="147:38"><call pos:start="147:21" pos:end="147:38"><name pos:start="147:21" pos:end="147:35">scsi_req_cancel</name><argument_list pos:start="147:36" pos:end="147:38">(<argument pos:start="147:37" pos:end="147:37"><expr pos:start="147:37" pos:end="147:37"><name pos:start="147:37" pos:end="147:37">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="155:9" pos:end="155:14">break;</break>



    <case pos:start="159:5" pos:end="159:43">case <expr pos:start="159:10" pos:end="159:42"><name pos:start="159:10" pos:end="159:42">VIRTIO_SCSI_T_TMF_I_T_NEXUS_RESET</name></expr>:</case>

        <expr_stmt pos:start="161:9" pos:end="161:38"><expr pos:start="161:9" pos:end="161:37"><name pos:start="161:9" pos:end="161:14">target</name> <operator pos:start="161:16" pos:end="161:16">=</operator> <name pos:start="161:18" pos:end="161:37"><name pos:start="161:18" pos:end="161:20">req</name><operator pos:start="161:21" pos:end="161:22">-&gt;</operator><name pos:start="161:23" pos:end="161:25">req</name><operator pos:start="161:26" pos:end="161:26">.</operator><name pos:start="161:27" pos:end="161:29">tmf</name><operator pos:start="161:30" pos:end="161:31">-&gt;</operator><name pos:start="161:32" pos:end="161:34">lun</name><index pos:start="161:35" pos:end="161:37">[<expr pos:start="161:36" pos:end="161:36"><literal type="number" pos:start="161:36" pos:end="161:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:23"><expr pos:start="163:9" pos:end="163:22"><name pos:start="163:9" pos:end="163:20"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:20">resetting</name></name><operator pos:start="163:21" pos:end="163:22">++</operator></expr>;</expr_stmt>

        <macro pos:start="165:9" pos:end="165:59"><name pos:start="165:9" pos:end="165:22">QTAILQ_FOREACH</name><argument_list pos:start="165:23" pos:end="165:59">(<argument pos:start="165:24" pos:end="165:26">kid</argument>, <argument pos:start="165:29" pos:end="165:49">&amp;s-&gt;bus.qbus.children</argument>, <argument pos:start="165:52" pos:end="165:58">sibling</argument>)</argument_list></macro> <block pos:start="165:61" pos:end="175:9">{<block_content pos:start="167:14" pos:end="173:14">

             <expr_stmt pos:start="167:14" pos:end="167:57"><expr pos:start="167:14" pos:end="167:56"><name pos:start="167:14" pos:end="167:14">d</name> <operator pos:start="167:16" pos:end="167:16">=</operator> <call pos:start="167:18" pos:end="167:56"><name pos:start="167:18" pos:end="167:26">DO_UPCAST</name><argument_list pos:start="167:27" pos:end="167:56">(<argument pos:start="167:28" pos:end="167:37"><expr pos:start="167:28" pos:end="167:37"><name pos:start="167:28" pos:end="167:37">SCSIDevice</name></expr></argument>, <argument pos:start="167:40" pos:end="167:43"><expr pos:start="167:40" pos:end="167:43"><name pos:start="167:40" pos:end="167:43">qdev</name></expr></argument>, <argument pos:start="167:46" pos:end="167:55"><expr pos:start="167:46" pos:end="167:55"><name pos:start="167:46" pos:end="167:55"><name pos:start="167:46" pos:end="167:48">kid</name><operator pos:start="167:49" pos:end="167:50">-&gt;</operator><name pos:start="167:51" pos:end="167:55">child</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

             <if_stmt pos:start="169:14" pos:end="173:14"><if pos:start="169:14" pos:end="173:14">if <condition pos:start="169:17" pos:end="169:52">(<expr pos:start="169:18" pos:end="169:51"><name pos:start="169:18" pos:end="169:27"><name pos:start="169:18" pos:end="169:18">d</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:27">channel</name></name> <operator pos:start="169:29" pos:end="169:30">==</operator> <literal type="number" pos:start="169:32" pos:end="169:32">0</literal> <operator pos:start="169:34" pos:end="169:35">&amp;&amp;</operator> <name pos:start="169:37" pos:end="169:41"><name pos:start="169:37" pos:end="169:37">d</name><operator pos:start="169:38" pos:end="169:39">-&gt;</operator><name pos:start="169:40" pos:end="169:41">id</name></name> <operator pos:start="169:43" pos:end="169:44">==</operator> <name pos:start="169:46" pos:end="169:51">target</name></expr>)</condition> <block pos:start="169:54" pos:end="173:14">{<block_content pos:start="171:17" pos:end="171:41">

                <expr_stmt pos:start="171:17" pos:end="171:41"><expr pos:start="171:17" pos:end="171:40"><call pos:start="171:17" pos:end="171:40"><name pos:start="171:17" pos:end="171:30">qdev_reset_all</name><argument_list pos:start="171:31" pos:end="171:40">(<argument pos:start="171:32" pos:end="171:39"><expr pos:start="171:32" pos:end="171:39"><operator pos:start="171:32" pos:end="171:32">&amp;</operator><name pos:start="171:33" pos:end="171:39"><name pos:start="171:33" pos:end="171:33">d</name><operator pos:start="171:34" pos:end="171:35">-&gt;</operator><name pos:start="171:36" pos:end="171:39">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

             </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="177:9" pos:end="177:23"><expr pos:start="177:9" pos:end="177:22"><name pos:start="177:9" pos:end="177:20"><name pos:start="177:9" pos:end="177:9">s</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:20">resetting</name></name><operator pos:start="177:21" pos:end="177:22">--</operator></expr>;</expr_stmt>

        <break pos:start="179:9" pos:end="179:14">break;</break>



    <case pos:start="183:5" pos:end="183:37">case <expr pos:start="183:10" pos:end="183:36"><name pos:start="183:10" pos:end="183:36">VIRTIO_SCSI_T_TMF_CLEAR_ACA</name></expr>:</case>

    <default pos:start="185:5" pos:end="185:12">default:</default>

        <expr_stmt pos:start="187:9" pos:end="187:66"><expr pos:start="187:9" pos:end="187:65"><name pos:start="187:9" pos:end="187:31"><name pos:start="187:9" pos:end="187:11">req</name><operator pos:start="187:12" pos:end="187:13">-&gt;</operator><name pos:start="187:14" pos:end="187:17">resp</name><operator pos:start="187:18" pos:end="187:18">.</operator><name pos:start="187:19" pos:end="187:21">tmf</name><operator pos:start="187:22" pos:end="187:23">-&gt;</operator><name pos:start="187:24" pos:end="187:31">response</name></name> <operator pos:start="187:33" pos:end="187:33">=</operator> <name pos:start="187:35" pos:end="187:65">VIRTIO_SCSI_S_FUNCTION_REJECTED</name></expr>;</expr_stmt>

        <break pos:start="189:9" pos:end="189:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="195:5" pos:end="195:11">return;</return>



<label pos:start="199:1" pos:end="199:14"><name pos:start="199:1" pos:end="199:13">incorrect_lun</name>:</label>

    <expr_stmt pos:start="201:5" pos:end="201:58"><expr pos:start="201:5" pos:end="201:57"><name pos:start="201:5" pos:end="201:27"><name pos:start="201:5" pos:end="201:7">req</name><operator pos:start="201:8" pos:end="201:9">-&gt;</operator><name pos:start="201:10" pos:end="201:13">resp</name><operator pos:start="201:14" pos:end="201:14">.</operator><name pos:start="201:15" pos:end="201:17">tmf</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:27">response</name></name> <operator pos:start="201:29" pos:end="201:29">=</operator> <name pos:start="201:31" pos:end="201:57">VIRTIO_SCSI_S_INCORRECT_LUN</name></expr>;</expr_stmt>

    <return pos:start="203:5" pos:end="203:11">return;</return>



<label pos:start="207:1" pos:end="207:5"><name pos:start="207:1" pos:end="207:4">fail</name>:</label>

    <expr_stmt pos:start="209:5" pos:end="209:55"><expr pos:start="209:5" pos:end="209:54"><name pos:start="209:5" pos:end="209:27"><name pos:start="209:5" pos:end="209:7">req</name><operator pos:start="209:8" pos:end="209:9">-&gt;</operator><name pos:start="209:10" pos:end="209:13">resp</name><operator pos:start="209:14" pos:end="209:14">.</operator><name pos:start="209:15" pos:end="209:17">tmf</name><operator pos:start="209:18" pos:end="209:19">-&gt;</operator><name pos:start="209:20" pos:end="209:27">response</name></name> <operator pos:start="209:29" pos:end="209:29">=</operator> <name pos:start="209:31" pos:end="209:54">VIRTIO_SCSI_S_BAD_TARGET</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
