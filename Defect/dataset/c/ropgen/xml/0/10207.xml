<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10207.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">test_visitor_out_list</name><parameter_list pos:start="1:34" pos:end="3:53">(<parameter pos:start="1:35" pos:end="1:61"><decl pos:start="1:35" pos:end="1:61"><type pos:start="1:35" pos:end="1:61"><name pos:start="1:35" pos:end="1:55">TestOutputVisitorData</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:52"><decl pos:start="3:35" pos:end="3:52"><type pos:start="3:35" pos:end="3:52"><specifier pos:start="3:35" pos:end="3:39">const</specifier> <name pos:start="3:41" pos:end="3:44">void</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:52">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="107:1">{<block_content pos:start="7:5" pos:end="105:35">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:25">value_str</name> <init pos:start="7:27" pos:end="7:40">= <expr pos:start="7:29" pos:end="7:40"><literal type="string" pos:start="7:29" pos:end="7:40">"list value"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">TestStructList</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">p</name></decl>, <decl pos:start="9:24" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:20"><modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:28">head</name> <init pos:start="9:30" pos:end="9:35">= <expr pos:start="9:32" pos:end="9:35"><name pos:start="9:32" pos:end="9:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:23">max_items</name> <init pos:start="11:25" pos:end="11:28">= <expr pos:start="11:27" pos:end="11:28"><literal type="number" pos:start="11:27" pos:end="11:28">10</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">bool</name></type> <name pos:start="13:10" pos:end="13:19">value_bool</name> <init pos:start="13:21" pos:end="13:26">= <expr pos:start="13:23" pos:end="13:26"><name pos:start="13:23" pos:end="13:26">true</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">value_int</name> <init pos:start="15:19" pos:end="15:22">= <expr pos:start="15:21" pos:end="15:22"><literal type="number" pos:start="15:21" pos:end="15:22">10</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">Error</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:14">err</name> <init pos:start="17:16" pos:end="17:21">= <expr pos:start="17:18" pos:end="17:21"><name pos:start="17:18" pos:end="17:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:14">QListEntry</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:21">entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">QObject</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:16">obj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:17"><decl pos:start="23:5" pos:end="23:16"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:9">QList</name> <modifier pos:start="23:11" pos:end="23:11">*</modifier></type><name pos:start="23:12" pos:end="23:16">qlist</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:10"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:44">/* Build the list in reverse order... */</comment>

    <for pos:start="31:5" pos:end="49:5">for <control pos:start="31:9" pos:end="31:35">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:30"><expr pos:start="31:17" pos:end="31:29"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:29">max_items</name></expr>;</condition> <incr pos:start="31:32" pos:end="31:34"><expr pos:start="31:32" pos:end="31:34"><name pos:start="31:32" pos:end="31:32">i</name><operator pos:start="31:33" pos:end="31:34">++</operator></expr></incr>)</control> <block pos:start="31:37" pos:end="49:5">{<block_content pos:start="33:9" pos:end="47:17">

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:9">p</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <call pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:21">g_malloc0</name><argument_list pos:start="33:22" pos:end="33:33">(<argument pos:start="33:23" pos:end="33:32"><expr pos:start="33:23" pos:end="33:32"><sizeof pos:start="33:23" pos:end="33:32">sizeof<argument_list pos:start="33:29" pos:end="33:32">(<argument pos:start="33:30" pos:end="33:31"><expr pos:start="33:30" pos:end="33:31"><operator pos:start="33:30" pos:end="33:30">*</operator><name pos:start="33:31" pos:end="33:31">p</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:48"><expr pos:start="35:9" pos:end="35:47"><name pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:9">p</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:16">value</name></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:47"><name pos:start="35:20" pos:end="35:28">g_malloc0</name><argument_list pos:start="35:29" pos:end="35:47">(<argument pos:start="35:30" pos:end="35:46"><expr pos:start="35:30" pos:end="35:46"><sizeof pos:start="35:30" pos:end="35:46">sizeof<argument_list pos:start="35:36" pos:end="35:46">(<argument pos:start="35:37" pos:end="35:45"><expr pos:start="35:37" pos:end="35:45"><operator pos:start="35:37" pos:end="35:37">*</operator><name pos:start="35:38" pos:end="35:45"><name pos:start="35:38" pos:end="35:38">p</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:45">value</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:60"><expr pos:start="37:9" pos:end="37:59"><name pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:9">p</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:16">value</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:25">integer</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <name pos:start="37:29" pos:end="37:37">value_int</name> <operator pos:start="37:39" pos:end="37:39">+</operator> <operator pos:start="37:41" pos:end="37:41">(</operator><name pos:start="37:42" pos:end="37:50">max_items</name> <operator pos:start="37:52" pos:end="37:52">-</operator> <name pos:start="37:54" pos:end="37:54">i</name> <operator pos:start="37:56" pos:end="37:56">-</operator> <literal type="number" pos:start="37:58" pos:end="37:58">1</literal><operator pos:start="37:59" pos:end="37:59">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:39"><expr pos:start="39:9" pos:end="39:38"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:9">p</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:16">value</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:25">boolean</name></name> <operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:38">value_bool</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:47"><expr pos:start="41:9" pos:end="41:46"><name pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:9">p</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:16">value</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:24">string</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <call pos:start="41:28" pos:end="41:46"><name pos:start="41:28" pos:end="41:35">g_strdup</name><argument_list pos:start="41:36" pos:end="41:46">(<argument pos:start="41:37" pos:end="41:45"><expr pos:start="41:37" pos:end="41:45"><name pos:start="41:37" pos:end="41:45">value_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:23"><expr pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:9">p</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:15">next</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:22">head</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:17"><expr pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:12">head</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <name pos:start="47:16" pos:end="47:16">p</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="53:5" pos:end="53:59"><expr pos:start="53:5" pos:end="53:58"><call pos:start="53:5" pos:end="53:58"><name pos:start="53:5" pos:end="53:29">visit_type_TestStructList</name><argument_list pos:start="53:30" pos:end="53:58">(<argument pos:start="53:31" pos:end="53:38"><expr pos:start="53:31" pos:end="53:38"><name pos:start="53:31" pos:end="53:38"><name pos:start="53:31" pos:end="53:34">data</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:38">ov</name></name></expr></argument>, <argument pos:start="53:41" pos:end="53:45"><expr pos:start="53:41" pos:end="53:45"><operator pos:start="53:41" pos:end="53:41">&amp;</operator><name pos:start="53:42" pos:end="53:45">head</name></expr></argument>, <argument pos:start="53:48" pos:end="53:51"><expr pos:start="53:48" pos:end="53:51"><name pos:start="53:48" pos:end="53:51">NULL</name></expr></argument>, <argument pos:start="53:54" pos:end="53:57"><expr pos:start="53:54" pos:end="53:57"><operator pos:start="53:54" pos:end="53:54">&amp;</operator><name pos:start="53:55" pos:end="53:57">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:19"><expr pos:start="55:5" pos:end="55:18"><call pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:12">g_assert</name><argument_list pos:start="55:13" pos:end="55:18">(<argument pos:start="55:14" pos:end="55:17"><expr pos:start="55:14" pos:end="55:17"><operator pos:start="55:14" pos:end="55:14">!</operator><name pos:start="55:15" pos:end="55:17">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:44"><expr pos:start="59:5" pos:end="59:43"><name pos:start="59:5" pos:end="59:7">obj</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <call pos:start="59:11" pos:end="59:43"><name pos:start="59:11" pos:end="59:32">qmp_output_get_qobject</name><argument_list pos:start="59:33" pos:end="59:43">(<argument pos:start="59:34" pos:end="59:42"><expr pos:start="59:34" pos:end="59:42"><name pos:start="59:34" pos:end="59:42"><name pos:start="59:34" pos:end="59:37">data</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:42">qov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:26"><expr pos:start="61:5" pos:end="61:25"><call pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:12">g_assert</name><argument_list pos:start="61:13" pos:end="61:25">(<argument pos:start="61:14" pos:end="61:24"><expr pos:start="61:14" pos:end="61:24"><name pos:start="61:14" pos:end="61:16">obj</name> <operator pos:start="61:18" pos:end="61:19">!=</operator> <name pos:start="61:21" pos:end="61:24">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:47"><expr pos:start="63:5" pos:end="63:46"><call pos:start="63:5" pos:end="63:46"><name pos:start="63:5" pos:end="63:12">g_assert</name><argument_list pos:start="63:13" pos:end="63:46">(<argument pos:start="63:14" pos:end="63:45"><expr pos:start="63:14" pos:end="63:45"><call pos:start="63:14" pos:end="63:30"><name pos:start="63:14" pos:end="63:25">qobject_type</name><argument_list pos:start="63:26" pos:end="63:30">(<argument pos:start="63:27" pos:end="63:29"><expr pos:start="63:27" pos:end="63:29"><name pos:start="63:27" pos:end="63:29">obj</name></expr></argument>)</argument_list></call> <operator pos:start="63:32" pos:end="63:33">==</operator> <name pos:start="63:35" pos:end="63:45">QTYPE_QLIST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:34"><expr pos:start="67:5" pos:end="67:33"><name pos:start="67:5" pos:end="67:9">qlist</name> <operator pos:start="67:11" pos:end="67:11">=</operator> <call pos:start="67:13" pos:end="67:33"><name pos:start="67:13" pos:end="67:28">qobject_to_qlist</name><argument_list pos:start="67:29" pos:end="67:33">(<argument pos:start="67:30" pos:end="67:32"><expr pos:start="67:30" pos:end="67:32"><name pos:start="67:30" pos:end="67:32">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:34"><expr pos:start="69:5" pos:end="69:33"><call pos:start="69:5" pos:end="69:33"><name pos:start="69:5" pos:end="69:12">g_assert</name><argument_list pos:start="69:13" pos:end="69:33">(<argument pos:start="69:14" pos:end="69:32"><expr pos:start="69:14" pos:end="69:32"><operator pos:start="69:14" pos:end="69:14">!</operator><call pos:start="69:15" pos:end="69:32"><name pos:start="69:15" pos:end="69:25">qlist_empty</name><argument_list pos:start="69:26" pos:end="69:32">(<argument pos:start="69:27" pos:end="69:31"><expr pos:start="69:27" pos:end="69:31"><name pos:start="69:27" pos:end="69:31">qlist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:57">/* ...and ensure that the visitor sees it in order */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:10"><expr pos:start="75:5" pos:end="75:9"><name pos:start="75:5" pos:end="75:5">i</name> <operator pos:start="75:7" pos:end="75:7">=</operator> <literal type="number" pos:start="75:9" pos:end="75:9">0</literal></expr>;</expr_stmt>

    <macro pos:start="77:5" pos:end="77:37"><name pos:start="77:5" pos:end="77:23">QLIST_FOREACH_ENTRY</name><argument_list pos:start="77:24" pos:end="77:37">(<argument pos:start="77:25" pos:end="77:29">qlist</argument>, <argument pos:start="77:32" pos:end="77:36">entry</argument>)</argument_list></macro> <block pos:start="77:39" pos:end="97:5">{<block_content pos:start="79:9" pos:end="95:12">

        <decl_stmt pos:start="79:9" pos:end="79:21"><decl pos:start="79:9" pos:end="79:20"><type pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:13">QDict</name> <modifier pos:start="79:15" pos:end="79:15">*</modifier></type><name pos:start="79:16" pos:end="79:20">qdict</name></decl>;</decl_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:60"><expr pos:start="83:9" pos:end="83:59"><call pos:start="83:9" pos:end="83:59"><name pos:start="83:9" pos:end="83:16">g_assert</name><argument_list pos:start="83:17" pos:end="83:59">(<argument pos:start="83:18" pos:end="83:58"><expr pos:start="83:18" pos:end="83:58"><call pos:start="83:18" pos:end="83:43"><name pos:start="83:18" pos:end="83:29">qobject_type</name><argument_list pos:start="83:30" pos:end="83:43">(<argument pos:start="83:31" pos:end="83:42"><expr pos:start="83:31" pos:end="83:42"><name pos:start="83:31" pos:end="83:42"><name pos:start="83:31" pos:end="83:35">entry</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:42">value</name></name></expr></argument>)</argument_list></call> <operator pos:start="83:45" pos:end="83:46">==</operator> <name pos:start="83:48" pos:end="83:58">QTYPE_QDICT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:47"><expr pos:start="85:9" pos:end="85:46"><name pos:start="85:9" pos:end="85:13">qdict</name> <operator pos:start="85:15" pos:end="85:15">=</operator> <call pos:start="85:17" pos:end="85:46"><name pos:start="85:17" pos:end="85:32">qobject_to_qdict</name><argument_list pos:start="85:33" pos:end="85:46">(<argument pos:start="85:34" pos:end="85:45"><expr pos:start="85:34" pos:end="85:45"><name pos:start="85:34" pos:end="85:45"><name pos:start="85:34" pos:end="85:38">entry</name><operator pos:start="85:39" pos:end="85:40">-&gt;</operator><name pos:start="85:41" pos:end="85:45">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:50"><expr pos:start="87:9" pos:end="87:49"><call pos:start="87:9" pos:end="87:49"><name pos:start="87:9" pos:end="87:23">g_assert_cmpint</name><argument_list pos:start="87:24" pos:end="87:49">(<argument pos:start="87:25" pos:end="87:41"><expr pos:start="87:25" pos:end="87:41"><call pos:start="87:25" pos:end="87:41"><name pos:start="87:25" pos:end="87:34">qdict_size</name><argument_list pos:start="87:35" pos:end="87:41">(<argument pos:start="87:36" pos:end="87:40"><expr pos:start="87:36" pos:end="87:40"><name pos:start="87:36" pos:end="87:40">qdict</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="87:44" pos:end="87:45"><expr pos:start="87:44" pos:end="87:45"><operator pos:start="87:44" pos:end="87:45">==</operator></expr></argument>, <argument pos:start="87:48" pos:end="87:48"><expr pos:start="87:48" pos:end="87:48"><literal type="number" pos:start="87:48" pos:end="87:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:76"><expr pos:start="89:9" pos:end="89:75"><call pos:start="89:9" pos:end="89:75"><name pos:start="89:9" pos:end="89:23">g_assert_cmpint</name><argument_list pos:start="89:24" pos:end="89:75">(<argument pos:start="89:25" pos:end="89:55"><expr pos:start="89:25" pos:end="89:55"><call pos:start="89:25" pos:end="89:55"><name pos:start="89:25" pos:end="89:37">qdict_get_int</name><argument_list pos:start="89:38" pos:end="89:55">(<argument pos:start="89:39" pos:end="89:43"><expr pos:start="89:39" pos:end="89:43"><name pos:start="89:39" pos:end="89:43">qdict</name></expr></argument>, <argument pos:start="89:46" pos:end="89:54"><expr pos:start="89:46" pos:end="89:54"><literal type="string" pos:start="89:46" pos:end="89:54">"integer"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="89:58" pos:end="89:59"><expr pos:start="89:58" pos:end="89:59"><operator pos:start="89:58" pos:end="89:59">==</operator></expr></argument>, <argument pos:start="89:62" pos:end="89:74"><expr pos:start="89:62" pos:end="89:74"><name pos:start="89:62" pos:end="89:70">value_int</name> <operator pos:start="89:72" pos:end="89:72">+</operator> <name pos:start="89:74" pos:end="89:74">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:74"><expr pos:start="91:9" pos:end="91:73"><call pos:start="91:9" pos:end="91:73"><name pos:start="91:9" pos:end="91:23">g_assert_cmpint</name><argument_list pos:start="91:24" pos:end="91:73">(<argument pos:start="91:25" pos:end="91:56"><expr pos:start="91:25" pos:end="91:56"><call pos:start="91:25" pos:end="91:56"><name pos:start="91:25" pos:end="91:38">qdict_get_bool</name><argument_list pos:start="91:39" pos:end="91:56">(<argument pos:start="91:40" pos:end="91:44"><expr pos:start="91:40" pos:end="91:44"><name pos:start="91:40" pos:end="91:44">qdict</name></expr></argument>, <argument pos:start="91:47" pos:end="91:55"><expr pos:start="91:47" pos:end="91:55"><literal type="string" pos:start="91:47" pos:end="91:55">"boolean"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="91:59" pos:end="91:60"><expr pos:start="91:59" pos:end="91:60"><operator pos:start="91:59" pos:end="91:60">==</operator></expr></argument>, <argument pos:start="91:63" pos:end="91:72"><expr pos:start="91:63" pos:end="91:72"><name pos:start="91:63" pos:end="91:72">value_bool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:71"><expr pos:start="93:9" pos:end="93:70"><call pos:start="93:9" pos:end="93:70"><name pos:start="93:9" pos:end="93:23">g_assert_cmpstr</name><argument_list pos:start="93:24" pos:end="93:70">(<argument pos:start="93:25" pos:end="93:54"><expr pos:start="93:25" pos:end="93:54"><call pos:start="93:25" pos:end="93:54"><name pos:start="93:25" pos:end="93:37">qdict_get_str</name><argument_list pos:start="93:38" pos:end="93:54">(<argument pos:start="93:39" pos:end="93:43"><expr pos:start="93:39" pos:end="93:43"><name pos:start="93:39" pos:end="93:43">qdict</name></expr></argument>, <argument pos:start="93:46" pos:end="93:53"><expr pos:start="93:46" pos:end="93:53"><literal type="string" pos:start="93:46" pos:end="93:53">"string"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="93:57" pos:end="93:58"><expr pos:start="93:57" pos:end="93:58"><operator pos:start="93:57" pos:end="93:58">==</operator></expr></argument>, <argument pos:start="93:61" pos:end="93:69"><expr pos:start="93:61" pos:end="93:69"><name pos:start="93:61" pos:end="93:69">value_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:12"><expr pos:start="95:9" pos:end="95:11"><name pos:start="95:9" pos:end="95:9">i</name><operator pos:start="95:10" pos:end="95:11">++</operator></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="99:5" pos:end="99:38"><expr pos:start="99:5" pos:end="99:37"><call pos:start="99:5" pos:end="99:37"><name pos:start="99:5" pos:end="99:19">g_assert_cmpint</name><argument_list pos:start="99:20" pos:end="99:37">(<argument pos:start="99:21" pos:end="99:21"><expr pos:start="99:21" pos:end="99:21"><name pos:start="99:21" pos:end="99:21">i</name></expr></argument>, <argument pos:start="99:24" pos:end="99:25"><expr pos:start="99:24" pos:end="99:25"><operator pos:start="99:24" pos:end="99:25">==</operator></expr></argument>, <argument pos:start="99:28" pos:end="99:36"><expr pos:start="99:28" pos:end="99:36"><name pos:start="99:28" pos:end="99:36">max_items</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:19"><expr pos:start="103:5" pos:end="103:18"><call pos:start="103:5" pos:end="103:18"><name pos:start="103:5" pos:end="103:11">QDECREF</name><argument_list pos:start="103:12" pos:end="103:18">(<argument pos:start="103:13" pos:end="103:17"><expr pos:start="103:13" pos:end="103:17"><name pos:start="103:13" pos:end="103:17">qlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:35"><expr pos:start="105:5" pos:end="105:34"><call pos:start="105:5" pos:end="105:34"><name pos:start="105:5" pos:end="105:28">qapi_free_TestStructList</name><argument_list pos:start="105:29" pos:end="105:34">(<argument pos:start="105:30" pos:end="105:33"><expr pos:start="105:30" pos:end="105:33"><name pos:start="105:30" pos:end="105:33">head</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
