<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18601.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">kvm_arch_insert_hw_breakpoint</name><parameter_list pos:start="1:34" pos:end="3:61">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:46">target_ulong</name></type> <name pos:start="1:48" pos:end="1:51">addr</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:50"><decl pos:start="3:35" pos:end="3:50"><type pos:start="3:35" pos:end="3:50"><name pos:start="3:35" pos:end="3:46">target_ulong</name></type> <name pos:start="3:48" pos:end="3:50">len</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:60"><decl pos:start="3:53" pos:end="3:60"><type pos:start="3:53" pos:end="3:60"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:60">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="77:1">{<block_content pos:start="7:5" pos:end="75:13">

    <switch pos:start="7:5" pos:end="49:5">switch <condition pos:start="7:12" pos:end="7:17">(<expr pos:start="7:13" pos:end="7:16"><name pos:start="7:13" pos:end="7:16">type</name></expr>)</condition> <block pos:start="7:19" pos:end="49:5">{<block_content pos:start="9:5" pos:end="47:23">

    <case pos:start="9:5" pos:end="9:27">case <expr pos:start="9:10" pos:end="9:26"><name pos:start="9:10" pos:end="9:26">GDB_BREAKPOINT_HW</name></expr>:</case>

        <expr_stmt pos:start="11:9" pos:end="11:16"><expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">len</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <literal type="number" pos:start="11:15" pos:end="11:15">1</literal></expr>;</expr_stmt>

        <break pos:start="13:9" pos:end="13:14">break;</break>

    <case pos:start="15:5" pos:end="15:30">case <expr pos:start="15:10" pos:end="15:29"><name pos:start="15:10" pos:end="15:29">GDB_WATCHPOINT_WRITE</name></expr>:</case>

    <case pos:start="17:5" pos:end="17:31">case <expr pos:start="17:10" pos:end="17:30"><name pos:start="17:10" pos:end="17:30">GDB_WATCHPOINT_ACCESS</name></expr>:</case>

        <switch pos:start="19:9" pos:end="41:9">switch <condition pos:start="19:16" pos:end="19:20">(<expr pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">len</name></expr>)</condition> <block pos:start="19:22" pos:end="41:9">{<block_content pos:start="21:9" pos:end="39:27">

        <case pos:start="21:9" pos:end="21:15">case <expr pos:start="21:14" pos:end="21:14"><literal type="number" pos:start="21:14" pos:end="21:14">1</literal></expr>:</case>

            <break pos:start="23:13" pos:end="23:18">break;</break>

        <case pos:start="25:9" pos:end="25:15">case <expr pos:start="25:14" pos:end="25:14"><literal type="number" pos:start="25:14" pos:end="25:14">2</literal></expr>:</case>

        <case pos:start="27:9" pos:end="27:15">case <expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">4</literal></expr>:</case>

        <case pos:start="29:9" pos:end="29:15">case <expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">8</literal></expr>:</case>

            <if_stmt pos:start="31:13" pos:end="33:31"><if pos:start="31:13" pos:end="33:31">if <condition pos:start="31:16" pos:end="31:33">(<expr pos:start="31:17" pos:end="31:32"><name pos:start="31:17" pos:end="31:20">addr</name> <operator pos:start="31:22" pos:end="31:22">&amp;</operator> <operator pos:start="31:24" pos:end="31:24">(</operator><name pos:start="31:25" pos:end="31:27">len</name> <operator pos:start="31:29" pos:end="31:29">-</operator> <literal type="number" pos:start="31:31" pos:end="31:31">1</literal><operator pos:start="31:32" pos:end="31:32">)</operator></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:31"><block_content pos:start="33:17" pos:end="33:31">

                <return pos:start="33:17" pos:end="33:31">return <expr pos:start="33:24" pos:end="33:30"><operator pos:start="33:24" pos:end="33:24">-</operator><name pos:start="33:25" pos:end="33:30">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        <default pos:start="37:9" pos:end="37:16">default:</default>

            <return pos:start="39:13" pos:end="39:27">return <expr pos:start="39:20" pos:end="39:26"><operator pos:start="39:20" pos:end="39:20">-</operator><name pos:start="39:21" pos:end="39:26">EINVAL</name></expr>;</return>

        </block_content>}</block></switch>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <default pos:start="45:5" pos:end="45:12">default:</default>

        <return pos:start="47:9" pos:end="47:23">return <expr pos:start="47:16" pos:end="47:22"><operator pos:start="47:16" pos:end="47:16">-</operator><name pos:start="47:17" pos:end="47:22">ENOSYS</name></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="53:5" pos:end="55:24"><if pos:start="53:5" pos:end="55:24">if <condition pos:start="53:8" pos:end="53:30">(<expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:24">nb_hw_breakpoint</name> <operator pos:start="53:26" pos:end="53:27">==</operator> <literal type="number" pos:start="53:29" pos:end="53:29">4</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:24"><block_content pos:start="55:9" pos:end="55:24">

        <return pos:start="55:9" pos:end="55:24">return <expr pos:start="55:16" pos:end="55:23"><operator pos:start="55:16" pos:end="55:16">-</operator><name pos:start="55:17" pos:end="55:23">ENOBUFS</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="61:23"><if pos:start="59:5" pos:end="61:23">if <condition pos:start="59:8" pos:end="59:49">(<expr pos:start="59:9" pos:end="59:48"><call pos:start="59:9" pos:end="59:43"><name pos:start="59:9" pos:end="59:26">find_hw_breakpoint</name><argument_list pos:start="59:27" pos:end="59:43">(<argument pos:start="59:28" pos:end="59:31"><expr pos:start="59:28" pos:end="59:31"><name pos:start="59:28" pos:end="59:31">addr</name></expr></argument>, <argument pos:start="59:34" pos:end="59:36"><expr pos:start="59:34" pos:end="59:36"><name pos:start="59:34" pos:end="59:36">len</name></expr></argument>, <argument pos:start="59:39" pos:end="59:42"><expr pos:start="59:39" pos:end="59:42"><name pos:start="59:39" pos:end="59:42">type</name></expr></argument>)</argument_list></call> <operator pos:start="59:45" pos:end="59:46">&gt;=</operator> <literal type="number" pos:start="59:48" pos:end="59:48">0</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:23"><block_content pos:start="61:9" pos:end="61:23">

        <return pos:start="61:9" pos:end="61:23">return <expr pos:start="61:16" pos:end="61:22"><operator pos:start="61:16" pos:end="61:16">-</operator><name pos:start="61:17" pos:end="61:22">EEXIST</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:48"><expr pos:start="65:5" pos:end="65:47"><name pos:start="65:5" pos:end="65:35"><name pos:start="65:5" pos:end="65:17">hw_breakpoint</name><index pos:start="65:18" pos:end="65:35">[<expr pos:start="65:19" pos:end="65:34"><name pos:start="65:19" pos:end="65:34">nb_hw_breakpoint</name></expr>]</index></name><operator pos:start="65:36" pos:end="65:36">.</operator><name pos:start="65:37" pos:end="65:40">addr</name> <operator pos:start="65:42" pos:end="65:42">=</operator> <name pos:start="65:44" pos:end="65:47">addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:46"><expr pos:start="67:5" pos:end="67:45"><name pos:start="67:5" pos:end="67:35"><name pos:start="67:5" pos:end="67:17">hw_breakpoint</name><index pos:start="67:18" pos:end="67:35">[<expr pos:start="67:19" pos:end="67:34"><name pos:start="67:19" pos:end="67:34">nb_hw_breakpoint</name></expr>]</index></name><operator pos:start="67:36" pos:end="67:36">.</operator><name pos:start="67:37" pos:end="67:39">len</name> <operator pos:start="67:41" pos:end="67:41">=</operator> <name pos:start="67:43" pos:end="67:45">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:48"><expr pos:start="69:5" pos:end="69:47"><name pos:start="69:5" pos:end="69:35"><name pos:start="69:5" pos:end="69:17">hw_breakpoint</name><index pos:start="69:18" pos:end="69:35">[<expr pos:start="69:19" pos:end="69:34"><name pos:start="69:19" pos:end="69:34">nb_hw_breakpoint</name></expr>]</index></name><operator pos:start="69:36" pos:end="69:36">.</operator><name pos:start="69:37" pos:end="69:40">type</name> <operator pos:start="69:42" pos:end="69:42">=</operator> <name pos:start="69:44" pos:end="69:47">type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:23"><expr pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:20">nb_hw_breakpoint</name><operator pos:start="71:21" pos:end="71:22">++</operator></expr>;</expr_stmt>



    <return pos:start="75:5" pos:end="75:13">return <expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
