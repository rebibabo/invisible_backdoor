<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7386.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">qemu_global_option</name><parameter_list pos:start="1:23" pos:end="1:39">(<parameter pos:start="1:24" pos:end="1:38"><decl pos:start="1:24" pos:end="1:38"><type pos:start="1:24" pos:end="1:35"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:33">char</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">str</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:19"><name pos:start="5:10" pos:end="5:15">driver</name><index pos:start="5:16" pos:end="5:19">[<expr pos:start="5:17" pos:end="5:18"><literal type="number" pos:start="5:17" pos:end="5:18">64</literal></expr>]</index></name></decl>, <decl pos:start="5:22" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:8"/><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:29">property</name><index pos:start="5:30" pos:end="5:33">[<expr pos:start="5:31" pos:end="5:32"><literal type="number" pos:start="5:31" pos:end="5:32">64</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">QemuOpts</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">rc</name></decl>, <decl pos:start="9:13" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:18">offset</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:69"><expr pos:start="13:5" pos:end="13:68"><name pos:start="13:5" pos:end="13:6">rc</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="13:68"><name pos:start="13:10" pos:end="13:15">sscanf</name><argument_list pos:start="13:16" pos:end="13:68">(<argument pos:start="13:17" pos:end="13:19"><expr pos:start="13:17" pos:end="13:19"><name pos:start="13:17" pos:end="13:19">str</name></expr></argument>, <argument pos:start="13:22" pos:end="13:40"><expr pos:start="13:22" pos:end="13:40"><literal type="string" pos:start="13:22" pos:end="13:40">"%63[^.].%63[^=]%n"</literal></expr></argument>, <argument pos:start="13:43" pos:end="13:48"><expr pos:start="13:43" pos:end="13:48"><name pos:start="13:43" pos:end="13:48">driver</name></expr></argument>, <argument pos:start="13:51" pos:end="13:58"><expr pos:start="13:51" pos:end="13:58"><name pos:start="13:51" pos:end="13:58">property</name></expr></argument>, <argument pos:start="13:61" pos:end="13:67"><expr pos:start="13:61" pos:end="13:67"><operator pos:start="13:61" pos:end="13:61">&amp;</operator><name pos:start="13:62" pos:end="13:67">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:37">(<expr pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:10">rc</name> <operator pos:start="15:12" pos:end="15:12">&lt;</operator> <literal type="number" pos:start="15:14" pos:end="15:14">2</literal> <operator pos:start="15:16" pos:end="15:17">||</operator> <name pos:start="15:19" pos:end="15:29"><name pos:start="15:19" pos:end="15:21">str</name><index pos:start="15:22" pos:end="15:29">[<expr pos:start="15:23" pos:end="15:28"><name pos:start="15:23" pos:end="15:28">offset</name></expr>]</index></name> <operator pos:start="15:31" pos:end="15:32">!=</operator> <literal type="char" pos:start="15:34" pos:end="15:36">'='</literal></expr>)</condition> <block pos:start="15:39" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:18">

        <expr_stmt pos:start="17:9" pos:end="17:49"><expr pos:start="17:9" pos:end="17:48"><call pos:start="17:9" pos:end="17:48"><name pos:start="17:9" pos:end="17:20">error_report</name><argument_list pos:start="17:21" pos:end="17:48">(<argument pos:start="17:22" pos:end="17:42"><expr pos:start="17:22" pos:end="17:42"><literal type="string" pos:start="17:22" pos:end="17:42">"can't parse: \"%s\""</literal></expr></argument>, <argument pos:start="17:45" pos:end="17:47"><expr pos:start="17:45" pos:end="17:47"><name pos:start="17:45" pos:end="17:47">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:70"><expr pos:start="25:5" pos:end="25:69"><name pos:start="25:5" pos:end="25:8">opts</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:69"><name pos:start="25:12" pos:end="25:27">qemu_opts_create</name><argument_list pos:start="25:28" pos:end="25:69">(<argument pos:start="25:29" pos:end="25:45"><expr pos:start="25:29" pos:end="25:45"><operator pos:start="25:29" pos:end="25:29">&amp;</operator><name pos:start="25:30" pos:end="25:45">qemu_global_opts</name></expr></argument>, <argument pos:start="25:48" pos:end="25:51"><expr pos:start="25:48" pos:end="25:51"><name pos:start="25:48" pos:end="25:51">NULL</name></expr></argument>, <argument pos:start="25:54" pos:end="25:54"><expr pos:start="25:54" pos:end="25:54"><literal type="number" pos:start="25:54" pos:end="25:54">0</literal></expr></argument>, <argument pos:start="25:57" pos:end="25:68"><expr pos:start="25:57" pos:end="25:68"><operator pos:start="25:57" pos:end="25:57">&amp;</operator><name pos:start="25:58" pos:end="25:68">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:55"><expr pos:start="27:5" pos:end="27:54"><call pos:start="27:5" pos:end="27:54"><name pos:start="27:5" pos:end="27:16">qemu_opt_set</name><argument_list pos:start="27:17" pos:end="27:54">(<argument pos:start="27:18" pos:end="27:21"><expr pos:start="27:18" pos:end="27:21"><name pos:start="27:18" pos:end="27:21">opts</name></expr></argument>, <argument pos:start="27:24" pos:end="27:31"><expr pos:start="27:24" pos:end="27:31"><literal type="string" pos:start="27:24" pos:end="27:31">"driver"</literal></expr></argument>, <argument pos:start="27:34" pos:end="27:39"><expr pos:start="27:34" pos:end="27:39"><name pos:start="27:34" pos:end="27:39">driver</name></expr></argument>, <argument pos:start="27:42" pos:end="27:53"><expr pos:start="27:42" pos:end="27:53"><operator pos:start="27:42" pos:end="27:42">&amp;</operator><name pos:start="27:43" pos:end="27:53">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:59"><expr pos:start="29:5" pos:end="29:58"><call pos:start="29:5" pos:end="29:58"><name pos:start="29:5" pos:end="29:16">qemu_opt_set</name><argument_list pos:start="29:17" pos:end="29:58">(<argument pos:start="29:18" pos:end="29:21"><expr pos:start="29:18" pos:end="29:21"><name pos:start="29:18" pos:end="29:21">opts</name></expr></argument>, <argument pos:start="29:24" pos:end="29:33"><expr pos:start="29:24" pos:end="29:33"><literal type="string" pos:start="29:24" pos:end="29:33">"property"</literal></expr></argument>, <argument pos:start="29:36" pos:end="29:43"><expr pos:start="29:36" pos:end="29:43"><name pos:start="29:36" pos:end="29:43">property</name></expr></argument>, <argument pos:start="29:46" pos:end="29:57"><expr pos:start="29:46" pos:end="29:57"><operator pos:start="29:46" pos:end="29:46">&amp;</operator><name pos:start="29:47" pos:end="29:57">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:64"><expr pos:start="31:5" pos:end="31:63"><call pos:start="31:5" pos:end="31:63"><name pos:start="31:5" pos:end="31:16">qemu_opt_set</name><argument_list pos:start="31:17" pos:end="31:63">(<argument pos:start="31:18" pos:end="31:21"><expr pos:start="31:18" pos:end="31:21"><name pos:start="31:18" pos:end="31:21">opts</name></expr></argument>, <argument pos:start="31:24" pos:end="31:30"><expr pos:start="31:24" pos:end="31:30"><literal type="string" pos:start="31:24" pos:end="31:30">"value"</literal></expr></argument>, <argument pos:start="31:33" pos:end="31:48"><expr pos:start="31:33" pos:end="31:48"><name pos:start="31:33" pos:end="31:35">str</name> <operator pos:start="31:37" pos:end="31:37">+</operator> <name pos:start="31:39" pos:end="31:44">offset</name> <operator pos:start="31:46" pos:end="31:46">+</operator> <literal type="number" pos:start="31:48" pos:end="31:48">1</literal></expr></argument>, <argument pos:start="31:51" pos:end="31:62"><expr pos:start="31:51" pos:end="31:62"><operator pos:start="31:51" pos:end="31:51">&amp;</operator><name pos:start="31:52" pos:end="31:62">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
