<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8856.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:34">cirrus_linear_read</name><parameter_list pos:start="1:35" pos:end="3:49">(<parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:47"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">opaque</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:72"><decl pos:start="1:50" pos:end="1:72"><type pos:start="1:50" pos:end="1:72"><name pos:start="1:50" pos:end="1:67">target_phys_addr_t</name></type> <name pos:start="1:69" pos:end="1:72">addr</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:48"><decl pos:start="3:36" pos:end="3:48"><type pos:start="3:36" pos:end="3:48"><name pos:start="3:36" pos:end="3:43">unsigned</name></type> <name pos:start="3:45" pos:end="3:48">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:15">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">CirrusVGAState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:32"><expr pos:start="13:5" pos:end="13:31"><name pos:start="13:5" pos:end="13:8">addr</name> <operator pos:start="13:10" pos:end="13:11">&amp;=</operator> <name pos:start="13:13" pos:end="13:31"><name pos:start="13:13" pos:end="13:13">s</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:31">cirrus_addr_mask</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="49:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="19:62">(<expr pos:start="17:9" pos:end="19:61"><operator pos:start="17:9" pos:end="17:9">(</operator><operator pos:start="17:10" pos:end="17:10">(</operator><name pos:start="17:11" pos:end="17:25"><name pos:start="17:11" pos:end="17:11">s</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:16">vga</name><operator pos:start="17:17" pos:end="17:17">.</operator><name pos:start="17:18" pos:end="17:19">sr</name><index pos:start="17:20" pos:end="17:25">[<expr pos:start="17:21" pos:end="17:24"><literal type="number" pos:start="17:21" pos:end="17:24">0x17</literal></expr>]</index></name> <operator pos:start="17:27" pos:end="17:27">&amp;</operator> <literal type="number" pos:start="17:29" pos:end="17:32">0x44</literal><operator pos:start="17:33" pos:end="17:33">)</operator> <operator pos:start="17:35" pos:end="17:36">==</operator> <literal type="number" pos:start="17:38" pos:end="17:41">0x44</literal><operator pos:start="17:42" pos:end="17:42">)</operator> <operator pos:start="17:44" pos:end="17:45">&amp;&amp;</operator>

        <operator pos:start="19:9" pos:end="19:9">(</operator><operator pos:start="19:10" pos:end="19:10">(</operator><name pos:start="19:11" pos:end="19:14">addr</name> <operator pos:start="19:16" pos:end="19:16">&amp;</operator> <name pos:start="19:18" pos:end="19:36"><name pos:start="19:18" pos:end="19:18">s</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:36">linear_mmio_mask</name></name><operator pos:start="19:37" pos:end="19:37">)</operator> <operator pos:start="19:39" pos:end="19:40">==</operator> <name pos:start="19:42" pos:end="19:60"><name pos:start="19:42" pos:end="19:42">s</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:60">linear_mmio_mask</name></name><operator pos:start="19:61" pos:end="19:61">)</operator></expr>)</condition> <block pos:start="19:64" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:51">

	<comment type="block" pos:start="21:9" pos:end="21:31">/* memory-mapped I/O */</comment>

	<expr_stmt pos:start="23:9" pos:end="23:51"><expr pos:start="23:9" pos:end="23:50"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:50"><name pos:start="23:15" pos:end="23:34">cirrus_mmio_blt_read</name><argument_list pos:start="23:35" pos:end="23:50">(<argument pos:start="23:36" pos:end="23:36"><expr pos:start="23:36" pos:end="23:36"><name pos:start="23:36" pos:end="23:36">s</name></expr></argument>, <argument pos:start="23:39" pos:end="23:49"><expr pos:start="23:39" pos:end="23:49"><name pos:start="23:39" pos:end="23:42">addr</name> <operator pos:start="23:44" pos:end="23:44">&amp;</operator> <literal type="number" pos:start="23:46" pos:end="23:49">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="31:5">else if <condition pos:start="25:15" pos:end="25:17">(<expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>)</condition> <block pos:start="25:19" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:19">

	<comment type="block" pos:start="27:9" pos:end="27:31">/* XXX handle bitblt */</comment>

	<expr_stmt pos:start="29:9" pos:end="29:19"><expr pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <literal type="number" pos:start="29:15" pos:end="29:18">0xff</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="49:5">else <block pos:start="31:12" pos:end="49:5">{<block_content pos:start="35:9" pos:end="47:40">

	<comment type="block" pos:start="33:9" pos:end="33:26">/* video memory */</comment>

	<if_stmt pos:start="35:9" pos:end="43:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:45">(<expr pos:start="35:13" pos:end="35:44"><operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:28"><name pos:start="35:14" pos:end="35:14">s</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:19">vga</name><operator pos:start="35:20" pos:end="35:20">.</operator><name pos:start="35:21" pos:end="35:22">gr</name><index pos:start="35:23" pos:end="35:28">[<expr pos:start="35:24" pos:end="35:27"><literal type="number" pos:start="35:24" pos:end="35:27">0x0B</literal></expr>]</index></name> <operator pos:start="35:30" pos:end="35:30">&amp;</operator> <literal type="number" pos:start="35:32" pos:end="35:35">0x14</literal><operator pos:start="35:36" pos:end="35:36">)</operator> <operator pos:start="35:38" pos:end="35:39">==</operator> <literal type="number" pos:start="35:41" pos:end="35:44">0x14</literal></expr>)</condition> <block pos:start="35:47" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:23">

	    <expr_stmt pos:start="37:13" pos:end="37:23"><expr pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:16">addr</name> <operator pos:start="37:18" pos:end="37:20">&lt;&lt;=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">4</literal></expr>;</expr_stmt>

	</block_content>}</block></if> <if type="elseif" pos:start="39:11" pos:end="43:9">else if <condition pos:start="39:19" pos:end="39:42">(<expr pos:start="39:20" pos:end="39:41"><name pos:start="39:20" pos:end="39:34"><name pos:start="39:20" pos:end="39:20">s</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:25">vga</name><operator pos:start="39:26" pos:end="39:26">.</operator><name pos:start="39:27" pos:end="39:28">gr</name><index pos:start="39:29" pos:end="39:34">[<expr pos:start="39:30" pos:end="39:33"><literal type="number" pos:start="39:30" pos:end="39:33">0x0B</literal></expr>]</index></name> <operator pos:start="39:36" pos:end="39:36">&amp;</operator> <literal type="number" pos:start="39:38" pos:end="39:41">0x02</literal></expr>)</condition> <block pos:start="39:44" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:23">

	    <expr_stmt pos:start="41:13" pos:end="41:23"><expr pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:16">addr</name> <operator pos:start="41:18" pos:end="41:20">&lt;&lt;=</operator> <literal type="number" pos:start="41:22" pos:end="41:22">3</literal></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

	<expr_stmt pos:start="45:9" pos:end="45:36"><expr pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:12">addr</name> <operator pos:start="45:14" pos:end="45:15">&amp;=</operator> <name pos:start="45:17" pos:end="45:35"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:35">cirrus_addr_mask</name></name></expr>;</expr_stmt>

	<expr_stmt pos:start="47:9" pos:end="47:40"><expr pos:start="47:9" pos:end="47:39"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <operator pos:start="47:15" pos:end="47:15">*</operator><operator pos:start="47:16" pos:end="47:16">(</operator><name pos:start="47:17" pos:end="47:31"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:22">vga</name><operator pos:start="47:23" pos:end="47:23">.</operator><name pos:start="47:24" pos:end="47:31">vram_ptr</name></name> <operator pos:start="47:33" pos:end="47:33">+</operator> <name pos:start="47:35" pos:end="47:38">addr</name><operator pos:start="47:39" pos:end="47:39">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="53:5" pos:end="53:15">return <expr pos:start="53:12" pos:end="53:14"><name pos:start="53:12" pos:end="53:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
