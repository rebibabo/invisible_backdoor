<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10475.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:16"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:16">coroutine_fn</name></type> <name pos:start="1:18" pos:end="1:31">bdrv_co_preadv</name><parameter_list pos:start="1:32" pos:end="5:27">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:48">BlockDriverState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">bs</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:18"><decl pos:start="3:5" pos:end="3:18"><type pos:start="3:5" pos:end="3:18"><name pos:start="3:5" pos:end="3:11">int64_t</name></type> <name pos:start="3:13" pos:end="3:18">offset</name></decl></parameter>, <parameter pos:start="3:21" pos:end="3:38"><decl pos:start="3:21" pos:end="3:38"><type pos:start="3:21" pos:end="3:38"><name pos:start="3:21" pos:end="3:28">unsigned</name> <name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:38">bytes</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:58"><decl pos:start="3:41" pos:end="3:58"><type pos:start="3:41" pos:end="3:58"><name pos:start="3:41" pos:end="3:52">QEMUIOVector</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:58">qiov</name></decl></parameter>,

    <parameter pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:20">BdrvRequestFlags</name></type> <name pos:start="5:22" pos:end="5:26">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="133:1">{<block_content pos:start="9:5" pos:end="131:15">

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">BlockDriver</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">drv</name> <init pos:start="9:22" pos:end="9:30">= <expr pos:start="9:24" pos:end="9:30"><name pos:start="9:24" pos:end="9:30"><name pos:start="9:24" pos:end="9:25">bs</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:30">drv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:22">BdrvTrackedRequest</name></type> <name pos:start="11:24" pos:end="11:26">req</name></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="15:43"><decl pos:start="15:5" pos:end="15:42"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:18">align</name> <init pos:start="15:20" pos:end="15:42">= <expr pos:start="15:22" pos:end="15:42"><name pos:start="15:22" pos:end="15:42"><name pos:start="15:22" pos:end="15:23">bs</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:42">request_alignment</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:21">head_buf</name> <init pos:start="17:23" pos:end="17:28">= <expr pos:start="17:25" pos:end="17:28"><name pos:start="17:25" pos:end="17:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:29"><decl pos:start="19:5" pos:end="19:28"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:21">tail_buf</name> <init pos:start="19:23" pos:end="19:28">= <expr pos:start="19:25" pos:end="19:28"><name pos:start="19:25" pos:end="19:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:28"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:16">QEMUIOVector</name></type> <name pos:start="21:18" pos:end="21:27">local_qiov</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:32"><decl pos:start="23:5" pos:end="23:31"><type pos:start="23:5" pos:end="23:8"><name pos:start="23:5" pos:end="23:8">bool</name></type> <name pos:start="23:10" pos:end="23:23">use_local_qiov</name> <init pos:start="23:25" pos:end="23:31">= <expr pos:start="23:27" pos:end="23:31"><name pos:start="23:27" pos:end="23:31">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:12"><decl pos:start="25:5" pos:end="25:11"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:13">(<expr pos:start="29:9" pos:end="29:12"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:12">drv</name></expr>)</condition> <block pos:start="29:15" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:26">

        <return pos:start="31:9" pos:end="31:26">return <expr pos:start="31:16" pos:end="31:25"><operator pos:start="31:16" pos:end="31:16">-</operator><name pos:start="31:17" pos:end="31:25">ENOMEDIUM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:53"><expr pos:start="37:5" pos:end="37:52"><name pos:start="37:5" pos:end="37:7">ret</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:52"><name pos:start="37:11" pos:end="37:33">bdrv_check_byte_request</name><argument_list pos:start="37:34" pos:end="37:52">(<argument pos:start="37:35" pos:end="37:36"><expr pos:start="37:35" pos:end="37:36"><name pos:start="37:35" pos:end="37:36">bs</name></expr></argument>, <argument pos:start="37:39" pos:end="37:44"><expr pos:start="37:39" pos:end="37:44"><name pos:start="37:39" pos:end="37:44">offset</name></expr></argument>, <argument pos:start="37:47" pos:end="37:51"><expr pos:start="37:47" pos:end="37:51"><name pos:start="37:47" pos:end="37:51">bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">&lt;</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>)</condition> <block pos:start="39:18" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:19">

        <return pos:start="41:9" pos:end="41:19">return <expr pos:start="41:16" pos:end="41:18"><name pos:start="41:16" pos:end="41:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:70">/* Don't do copy-on-read if we read data before write operation */</comment>

    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:63">(<expr pos:start="49:9" pos:end="49:62"><name pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:10">bs</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:24">copy_on_read</name></name> <operator pos:start="49:26" pos:end="49:27">&amp;&amp;</operator> <operator pos:start="49:29" pos:end="49:29">!</operator><operator pos:start="49:30" pos:end="49:30">(</operator><name pos:start="49:31" pos:end="49:35">flags</name> <operator pos:start="49:37" pos:end="49:37">&amp;</operator> <name pos:start="49:39" pos:end="49:61">BDRV_REQ_NO_SERIALISING</name><operator pos:start="49:62" pos:end="49:62">)</operator></expr>)</condition> <block pos:start="49:65" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:39">

        <expr_stmt pos:start="51:9" pos:end="51:39"><expr pos:start="51:9" pos:end="51:38"><name pos:start="51:9" pos:end="51:13">flags</name> <operator pos:start="51:15" pos:end="51:16">|=</operator> <name pos:start="51:18" pos:end="51:38">BDRV_REQ_COPY_ON_READ</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:49">/* Align read if necessary by padding qiov */</comment>

    <if_stmt pos:start="59:5" pos:end="77:5"><if pos:start="59:5" pos:end="77:5">if <condition pos:start="59:8" pos:end="59:29">(<expr pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:14">offset</name> <operator pos:start="59:16" pos:end="59:16">&amp;</operator> <operator pos:start="59:18" pos:end="59:18">(</operator><name pos:start="59:19" pos:end="59:23">align</name> <operator pos:start="59:25" pos:end="59:25">-</operator> <literal type="number" pos:start="59:27" pos:end="59:27">1</literal><operator pos:start="59:28" pos:end="59:28">)</operator></expr>)</condition> <block pos:start="59:31" pos:end="77:5">{<block_content pos:start="61:9" pos:end="75:39">

        <expr_stmt pos:start="61:9" pos:end="61:46"><expr pos:start="61:9" pos:end="61:45"><name pos:start="61:9" pos:end="61:16">head_buf</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <call pos:start="61:20" pos:end="61:45"><name pos:start="61:20" pos:end="61:34">qemu_blockalign</name><argument_list pos:start="61:35" pos:end="61:45">(<argument pos:start="61:36" pos:end="61:37"><expr pos:start="61:36" pos:end="61:37"><name pos:start="61:36" pos:end="61:37">bs</name></expr></argument>, <argument pos:start="61:40" pos:end="61:44"><expr pos:start="61:40" pos:end="61:44"><name pos:start="61:40" pos:end="61:44">align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:53"><expr pos:start="63:9" pos:end="63:52"><call pos:start="63:9" pos:end="63:52"><name pos:start="63:9" pos:end="63:23">qemu_iovec_init</name><argument_list pos:start="63:24" pos:end="63:52">(<argument pos:start="63:25" pos:end="63:35"><expr pos:start="63:25" pos:end="63:35"><operator pos:start="63:25" pos:end="63:25">&amp;</operator><name pos:start="63:26" pos:end="63:35">local_qiov</name></expr></argument>, <argument pos:start="63:38" pos:end="63:51"><expr pos:start="63:38" pos:end="63:51"><name pos:start="63:38" pos:end="63:47"><name pos:start="63:38" pos:end="63:41">qiov</name><operator pos:start="63:42" pos:end="63:43">-&gt;</operator><name pos:start="63:44" pos:end="63:47">niov</name></name> <operator pos:start="63:49" pos:end="63:49">+</operator> <literal type="number" pos:start="63:51" pos:end="63:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:68"><expr pos:start="65:9" pos:end="65:67"><call pos:start="65:9" pos:end="65:67"><name pos:start="65:9" pos:end="65:22">qemu_iovec_add</name><argument_list pos:start="65:23" pos:end="65:67">(<argument pos:start="65:24" pos:end="65:34"><expr pos:start="65:24" pos:end="65:34"><operator pos:start="65:24" pos:end="65:24">&amp;</operator><name pos:start="65:25" pos:end="65:34">local_qiov</name></expr></argument>, <argument pos:start="65:37" pos:end="65:44"><expr pos:start="65:37" pos:end="65:44"><name pos:start="65:37" pos:end="65:44">head_buf</name></expr></argument>, <argument pos:start="65:47" pos:end="65:66"><expr pos:start="65:47" pos:end="65:66"><name pos:start="65:47" pos:end="65:52">offset</name> <operator pos:start="65:54" pos:end="65:54">&amp;</operator> <operator pos:start="65:56" pos:end="65:56">(</operator><name pos:start="65:57" pos:end="65:61">align</name> <operator pos:start="65:63" pos:end="65:63">-</operator> <literal type="number" pos:start="65:65" pos:end="65:65">1</literal><operator pos:start="65:66" pos:end="65:66">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:60"><expr pos:start="67:9" pos:end="67:59"><call pos:start="67:9" pos:end="67:59"><name pos:start="67:9" pos:end="67:25">qemu_iovec_concat</name><argument_list pos:start="67:26" pos:end="67:59">(<argument pos:start="67:27" pos:end="67:37"><expr pos:start="67:27" pos:end="67:37"><operator pos:start="67:27" pos:end="67:27">&amp;</operator><name pos:start="67:28" pos:end="67:37">local_qiov</name></expr></argument>, <argument pos:start="67:40" pos:end="67:43"><expr pos:start="67:40" pos:end="67:43"><name pos:start="67:40" pos:end="67:43">qiov</name></expr></argument>, <argument pos:start="67:46" pos:end="67:46"><expr pos:start="67:46" pos:end="67:46"><literal type="number" pos:start="67:46" pos:end="67:46">0</literal></expr></argument>, <argument pos:start="67:49" pos:end="67:58"><expr pos:start="67:49" pos:end="67:58"><name pos:start="67:49" pos:end="67:58"><name pos:start="67:49" pos:end="67:52">qiov</name><operator pos:start="67:53" pos:end="67:54">-&gt;</operator><name pos:start="67:55" pos:end="67:58">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:30"><expr pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:22">use_local_qiov</name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:29">true</name></expr>;</expr_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:38"><expr pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:13">bytes</name> <operator pos:start="73:15" pos:end="73:16">+=</operator> <name pos:start="73:18" pos:end="73:23">offset</name> <operator pos:start="73:25" pos:end="73:25">&amp;</operator> <operator pos:start="73:27" pos:end="73:27">(</operator><name pos:start="73:28" pos:end="73:32">align</name> <operator pos:start="73:34" pos:end="73:34">-</operator> <literal type="number" pos:start="73:36" pos:end="73:36">1</literal><operator pos:start="73:37" pos:end="73:37">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:39"><expr pos:start="75:9" pos:end="75:38"><name pos:start="75:9" pos:end="75:14">offset</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <name pos:start="75:18" pos:end="75:23">offset</name> <operator pos:start="75:25" pos:end="75:25">&amp;</operator> <operator pos:start="75:27" pos:end="75:27">~</operator><operator pos:start="75:28" pos:end="75:28">(</operator><name pos:start="75:29" pos:end="75:33">align</name> <operator pos:start="75:35" pos:end="75:35">-</operator> <literal type="number" pos:start="75:37" pos:end="75:37">1</literal><operator pos:start="75:38" pos:end="75:38">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="103:5"><if pos:start="81:5" pos:end="103:5">if <condition pos:start="81:8" pos:end="81:39">(<expr pos:start="81:9" pos:end="81:38"><operator pos:start="81:9" pos:end="81:9">(</operator><name pos:start="81:10" pos:end="81:15">offset</name> <operator pos:start="81:17" pos:end="81:17">+</operator> <name pos:start="81:19" pos:end="81:23">bytes</name><operator pos:start="81:24" pos:end="81:24">)</operator> <operator pos:start="81:26" pos:end="81:26">&amp;</operator> <operator pos:start="81:28" pos:end="81:28">(</operator><name pos:start="81:29" pos:end="81:33">align</name> <operator pos:start="81:35" pos:end="81:35">-</operator> <literal type="number" pos:start="81:37" pos:end="81:37">1</literal><operator pos:start="81:38" pos:end="81:38">)</operator></expr>)</condition> <block pos:start="81:41" pos:end="103:5">{<block_content pos:start="83:9" pos:end="101:39">

        <if_stmt pos:start="83:9" pos:end="91:9"><if pos:start="83:9" pos:end="91:9">if <condition pos:start="83:12" pos:end="83:28">(<expr pos:start="83:13" pos:end="83:27"><operator pos:start="83:13" pos:end="83:13">!</operator><name pos:start="83:14" pos:end="83:27">use_local_qiov</name></expr>)</condition> <block pos:start="83:30" pos:end="91:9">{<block_content pos:start="85:13" pos:end="89:34">

            <expr_stmt pos:start="85:13" pos:end="85:57"><expr pos:start="85:13" pos:end="85:56"><call pos:start="85:13" pos:end="85:56"><name pos:start="85:13" pos:end="85:27">qemu_iovec_init</name><argument_list pos:start="85:28" pos:end="85:56">(<argument pos:start="85:29" pos:end="85:39"><expr pos:start="85:29" pos:end="85:39"><operator pos:start="85:29" pos:end="85:29">&amp;</operator><name pos:start="85:30" pos:end="85:39">local_qiov</name></expr></argument>, <argument pos:start="85:42" pos:end="85:55"><expr pos:start="85:42" pos:end="85:55"><name pos:start="85:42" pos:end="85:51"><name pos:start="85:42" pos:end="85:45">qiov</name><operator pos:start="85:46" pos:end="85:47">-&gt;</operator><name pos:start="85:48" pos:end="85:51">niov</name></name> <operator pos:start="85:53" pos:end="85:53">+</operator> <literal type="number" pos:start="85:55" pos:end="85:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:64"><expr pos:start="87:13" pos:end="87:63"><call pos:start="87:13" pos:end="87:63"><name pos:start="87:13" pos:end="87:29">qemu_iovec_concat</name><argument_list pos:start="87:30" pos:end="87:63">(<argument pos:start="87:31" pos:end="87:41"><expr pos:start="87:31" pos:end="87:41"><operator pos:start="87:31" pos:end="87:31">&amp;</operator><name pos:start="87:32" pos:end="87:41">local_qiov</name></expr></argument>, <argument pos:start="87:44" pos:end="87:47"><expr pos:start="87:44" pos:end="87:47"><name pos:start="87:44" pos:end="87:47">qiov</name></expr></argument>, <argument pos:start="87:50" pos:end="87:50"><expr pos:start="87:50" pos:end="87:50"><literal type="number" pos:start="87:50" pos:end="87:50">0</literal></expr></argument>, <argument pos:start="87:53" pos:end="87:62"><expr pos:start="87:53" pos:end="87:62"><name pos:start="87:53" pos:end="87:62"><name pos:start="87:53" pos:end="87:56">qiov</name><operator pos:start="87:57" pos:end="87:58">-&gt;</operator><name pos:start="87:59" pos:end="87:62">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:34"><expr pos:start="89:13" pos:end="89:33"><name pos:start="89:13" pos:end="89:26">use_local_qiov</name> <operator pos:start="89:28" pos:end="89:28">=</operator> <name pos:start="89:30" pos:end="89:33">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:46"><expr pos:start="93:9" pos:end="93:45"><name pos:start="93:9" pos:end="93:16">tail_buf</name> <operator pos:start="93:18" pos:end="93:18">=</operator> <call pos:start="93:20" pos:end="93:45"><name pos:start="93:20" pos:end="93:34">qemu_blockalign</name><argument_list pos:start="93:35" pos:end="93:45">(<argument pos:start="93:36" pos:end="93:37"><expr pos:start="93:36" pos:end="93:37"><name pos:start="93:36" pos:end="93:37">bs</name></expr></argument>, <argument pos:start="93:40" pos:end="93:44"><expr pos:start="93:40" pos:end="93:44"><name pos:start="93:40" pos:end="93:44">align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="97:65"><expr pos:start="95:9" pos:end="97:64"><call pos:start="95:9" pos:end="97:64"><name pos:start="95:9" pos:end="95:22">qemu_iovec_add</name><argument_list pos:start="95:23" pos:end="97:64">(<argument pos:start="95:24" pos:end="95:34"><expr pos:start="95:24" pos:end="95:34"><operator pos:start="95:24" pos:end="95:24">&amp;</operator><name pos:start="95:25" pos:end="95:34">local_qiov</name></expr></argument>, <argument pos:start="95:37" pos:end="95:44"><expr pos:start="95:37" pos:end="95:44"><name pos:start="95:37" pos:end="95:44">tail_buf</name></expr></argument>,

                       <argument pos:start="97:24" pos:end="97:63"><expr pos:start="97:24" pos:end="97:63"><name pos:start="97:24" pos:end="97:28">align</name> <operator pos:start="97:30" pos:end="97:30">-</operator> <operator pos:start="97:32" pos:end="97:32">(</operator><operator pos:start="97:33" pos:end="97:33">(</operator><name pos:start="97:34" pos:end="97:39">offset</name> <operator pos:start="97:41" pos:end="97:41">+</operator> <name pos:start="97:43" pos:end="97:47">bytes</name><operator pos:start="97:48" pos:end="97:48">)</operator> <operator pos:start="97:50" pos:end="97:50">&amp;</operator> <operator pos:start="97:52" pos:end="97:52">(</operator><name pos:start="97:53" pos:end="97:57">align</name> <operator pos:start="97:59" pos:end="97:59">-</operator> <literal type="number" pos:start="97:61" pos:end="97:61">1</literal><operator pos:start="97:62" pos:end="97:62">)</operator><operator pos:start="97:63" pos:end="97:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:39"><expr pos:start="101:9" pos:end="101:38"><name pos:start="101:9" pos:end="101:13">bytes</name> <operator pos:start="101:15" pos:end="101:15">=</operator> <call pos:start="101:17" pos:end="101:38"><name pos:start="101:17" pos:end="101:24">ROUND_UP</name><argument_list pos:start="101:25" pos:end="101:38">(<argument pos:start="101:26" pos:end="101:30"><expr pos:start="101:26" pos:end="101:30"><name pos:start="101:26" pos:end="101:30">bytes</name></expr></argument>, <argument pos:start="101:33" pos:end="101:37"><expr pos:start="101:33" pos:end="101:37"><name pos:start="101:33" pos:end="101:37">align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:70"><expr pos:start="107:5" pos:end="107:69"><call pos:start="107:5" pos:end="107:69"><name pos:start="107:5" pos:end="107:25">tracked_request_begin</name><argument_list pos:start="107:26" pos:end="107:69">(<argument pos:start="107:27" pos:end="107:30"><expr pos:start="107:27" pos:end="107:30"><operator pos:start="107:27" pos:end="107:27">&amp;</operator><name pos:start="107:28" pos:end="107:30">req</name></expr></argument>, <argument pos:start="107:33" pos:end="107:34"><expr pos:start="107:33" pos:end="107:34"><name pos:start="107:33" pos:end="107:34">bs</name></expr></argument>, <argument pos:start="107:37" pos:end="107:42"><expr pos:start="107:37" pos:end="107:42"><name pos:start="107:37" pos:end="107:42">offset</name></expr></argument>, <argument pos:start="107:45" pos:end="107:49"><expr pos:start="107:45" pos:end="107:49"><name pos:start="107:45" pos:end="107:49">bytes</name></expr></argument>, <argument pos:start="107:52" pos:end="107:68"><expr pos:start="107:52" pos:end="107:68"><name pos:start="107:52" pos:end="107:68">BDRV_TRACKED_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="113:37"><expr pos:start="109:5" pos:end="113:36"><name pos:start="109:5" pos:end="109:7">ret</name> <operator pos:start="109:9" pos:end="109:9">=</operator> <call pos:start="109:11" pos:end="113:36"><name pos:start="109:11" pos:end="109:29">bdrv_aligned_preadv</name><argument_list pos:start="109:30" pos:end="113:36">(<argument pos:start="109:31" pos:end="109:32"><expr pos:start="109:31" pos:end="109:32"><name pos:start="109:31" pos:end="109:32">bs</name></expr></argument>, <argument pos:start="109:35" pos:end="109:38"><expr pos:start="109:35" pos:end="109:38"><operator pos:start="109:35" pos:end="109:35">&amp;</operator><name pos:start="109:36" pos:end="109:38">req</name></expr></argument>, <argument pos:start="109:41" pos:end="109:46"><expr pos:start="109:41" pos:end="109:46"><name pos:start="109:41" pos:end="109:46">offset</name></expr></argument>, <argument pos:start="109:49" pos:end="109:53"><expr pos:start="109:49" pos:end="109:53"><name pos:start="109:49" pos:end="109:53">bytes</name></expr></argument>, <argument pos:start="109:56" pos:end="109:60"><expr pos:start="109:56" pos:end="109:60"><name pos:start="109:56" pos:end="109:60">align</name></expr></argument>,

                              <argument pos:start="111:31" pos:end="111:65"><expr pos:start="111:31" pos:end="111:65"><ternary pos:start="111:31" pos:end="111:65"><condition pos:start="111:31" pos:end="111:46"><expr pos:start="111:31" pos:end="111:44"><name pos:start="111:31" pos:end="111:44">use_local_qiov</name></expr> ?</condition><then pos:start="111:48" pos:end="111:58"> <expr pos:start="111:48" pos:end="111:58"><operator pos:start="111:48" pos:end="111:48">&amp;</operator><name pos:start="111:49" pos:end="111:58">local_qiov</name></expr> </then><else pos:start="111:60" pos:end="111:65">: <expr pos:start="111:62" pos:end="111:65"><name pos:start="111:62" pos:end="111:65">qiov</name></expr></else></ternary></expr></argument>,

                              <argument pos:start="113:31" pos:end="113:35"><expr pos:start="113:31" pos:end="113:35"><name pos:start="113:31" pos:end="113:35">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:30"><expr pos:start="115:5" pos:end="115:29"><call pos:start="115:5" pos:end="115:29"><name pos:start="115:5" pos:end="115:23">tracked_request_end</name><argument_list pos:start="115:24" pos:end="115:29">(<argument pos:start="115:25" pos:end="115:28"><expr pos:start="115:25" pos:end="115:28"><operator pos:start="115:25" pos:end="115:25">&amp;</operator><name pos:start="115:26" pos:end="115:28">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="119:5" pos:end="127:5"><if pos:start="119:5" pos:end="127:5">if <condition pos:start="119:8" pos:end="119:23">(<expr pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:22">use_local_qiov</name></expr>)</condition> <block pos:start="119:25" pos:end="127:5">{<block_content pos:start="121:9" pos:end="125:29">

        <expr_stmt pos:start="121:9" pos:end="121:40"><expr pos:start="121:9" pos:end="121:39"><call pos:start="121:9" pos:end="121:39"><name pos:start="121:9" pos:end="121:26">qemu_iovec_destroy</name><argument_list pos:start="121:27" pos:end="121:39">(<argument pos:start="121:28" pos:end="121:38"><expr pos:start="121:28" pos:end="121:38"><operator pos:start="121:28" pos:end="121:28">&amp;</operator><name pos:start="121:29" pos:end="121:38">local_qiov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:29"><expr pos:start="123:9" pos:end="123:28"><call pos:start="123:9" pos:end="123:28"><name pos:start="123:9" pos:end="123:18">qemu_vfree</name><argument_list pos:start="123:19" pos:end="123:28">(<argument pos:start="123:20" pos:end="123:27"><expr pos:start="123:20" pos:end="123:27"><name pos:start="123:20" pos:end="123:27">head_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:29"><expr pos:start="125:9" pos:end="125:28"><call pos:start="125:9" pos:end="125:28"><name pos:start="125:9" pos:end="125:18">qemu_vfree</name><argument_list pos:start="125:19" pos:end="125:28">(<argument pos:start="125:20" pos:end="125:27"><expr pos:start="125:20" pos:end="125:27"><name pos:start="125:20" pos:end="125:27">tail_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="131:5" pos:end="131:15">return <expr pos:start="131:12" pos:end="131:14"><name pos:start="131:12" pos:end="131:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
