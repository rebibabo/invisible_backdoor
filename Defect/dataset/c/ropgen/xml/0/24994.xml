<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24994.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">gic_reset</name><parameter_list pos:start="1:22" pos:end="1:35">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:33"><name pos:start="1:23" pos:end="1:31">gic_state</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="52:0">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:62"><expr pos:start="7:5" pos:end="7:61"><call pos:start="7:5" pos:end="7:61"><name pos:start="7:5" pos:end="7:10">memset</name><argument_list pos:start="7:11" pos:end="7:61">(<argument pos:start="7:12" pos:end="7:23"><expr pos:start="7:12" pos:end="7:23"><name pos:start="7:12" pos:end="7:23"><name pos:start="7:12" pos:end="7:12">s</name><operator pos:start="7:13" pos:end="7:14">-&gt;</operator><name pos:start="7:15" pos:end="7:23">irq_state</name></name></expr></argument>, <argument pos:start="7:26" pos:end="7:26"><expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr></argument>, <argument pos:start="7:29" pos:end="7:60"><expr pos:start="7:29" pos:end="7:60"><name pos:start="7:29" pos:end="7:36">GIC_NIRQ</name> <operator pos:start="7:38" pos:end="7:38">*</operator> <sizeof pos:start="7:40" pos:end="7:60">sizeof<argument_list pos:start="7:46" pos:end="7:60">(<argument pos:start="7:47" pos:end="7:59"><expr pos:start="7:47" pos:end="7:59"><name pos:start="7:47" pos:end="7:59">gic_irq_state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="9:5" pos:end="31:5">for <control pos:start="9:9" pos:end="9:37">(<init pos:start="9:10" pos:end="9:16"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr> ;</init> <condition pos:start="9:18" pos:end="9:32"><expr pos:start="9:18" pos:end="9:31"><name pos:start="9:18" pos:end="9:18">i</name> <operator pos:start="9:20" pos:end="9:20">&lt;</operator> <call pos:start="9:22" pos:end="9:31"><name pos:start="9:22" pos:end="9:28">NUM_CPU</name><argument_list pos:start="9:29" pos:end="9:31">(<argument pos:start="9:30" pos:end="9:30"><expr pos:start="9:30" pos:end="9:30"><name pos:start="9:30" pos:end="9:30">s</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="9:34" pos:end="9:36"><expr pos:start="9:34" pos:end="9:36"><name pos:start="9:34" pos:end="9:34">i</name><operator pos:start="9:35" pos:end="9:36">++</operator></expr></incr>)</control> <block pos:start="9:39" pos:end="31:5">{<block_content pos:start="11:9" pos:end="30:0">

        <expr_stmt pos:start="11:9" pos:end="11:35"><expr pos:start="11:9" pos:end="11:34"><name pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:24">priority_mask</name><index pos:start="11:25" pos:end="11:27">[<expr pos:start="11:26" pos:end="11:26"><name pos:start="11:26" pos:end="11:26">i</name></expr>]</index></name> <operator pos:start="11:29" pos:end="11:29">=</operator> <literal type="number" pos:start="11:31" pos:end="11:34">0xf0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:37"><expr pos:start="13:9" pos:end="13:36"><name pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:26">current_pending</name><index pos:start="13:27" pos:end="13:29">[<expr pos:start="13:28" pos:end="13:28"><name pos:start="13:28" pos:end="13:28">i</name></expr>]</index></name> <operator pos:start="13:31" pos:end="13:31">=</operator> <literal type="number" pos:start="13:33" pos:end="13:36">1023</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:33"><expr pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:22">running_irq</name><index pos:start="15:23" pos:end="15:25">[<expr pos:start="15:24" pos:end="15:24"><name pos:start="15:24" pos:end="15:24">i</name></expr>]</index></name> <operator pos:start="15:27" pos:end="15:27">=</operator> <literal type="number" pos:start="15:29" pos:end="15:32">1023</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="20:0"><expr pos:start="17:9" pos:end="17:38"><name pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:27">running_priority</name><index pos:start="17:28" pos:end="17:30">[<expr pos:start="17:29" pos:end="17:29"><name pos:start="17:29" pos:end="17:29">i</name></expr>]</index></name> <operator pos:start="17:32" pos:end="17:32">=</operator> <literal type="number" pos:start="17:34" pos:end="17:38">0x100</literal></expr>;</expr_stmt>

<cpp:ifdef pos:start="19:1" pos:end="19:11">#<cpp:directive pos:start="19:2" pos:end="19:6">ifdef</cpp:directive> <name pos:start="19:8" pos:end="19:11">NVIC</name></cpp:ifdef>

        <comment type="block" pos:start="21:9" pos:end="21:78">/* The NVIC doesn't have per-cpu interfaces, so enable by default.  */</comment>

        <expr_stmt pos:start="23:9" pos:end="26:0"><expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:22">cpu_enabled</name><index pos:start="23:23" pos:end="23:25">[<expr pos:start="23:24" pos:end="23:24"><name pos:start="23:24" pos:end="23:24">i</name></expr>]</index></name> <operator pos:start="23:27" pos:end="23:27">=</operator> <literal type="number" pos:start="23:29" pos:end="23:29">1</literal></expr>;</expr_stmt>

<cpp:else pos:start="25:1" pos:end="25:5">#<cpp:directive pos:start="25:2" pos:end="25:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="27:9" pos:end="30:0"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:22">cpu_enabled</name><index pos:start="27:23" pos:end="27:25">[<expr pos:start="27:24" pos:end="27:24"><name pos:start="27:24" pos:end="27:24">i</name></expr>]</index></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr>;</expr_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></for>

    <for pos:start="33:5" pos:end="42:0">for <control pos:start="33:9" pos:end="33:28">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:23"><expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <literal type="number" pos:start="33:21" pos:end="33:22">16</literal></expr>;</condition> <incr pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:25">i</name><operator pos:start="33:26" pos:end="33:27">++</operator></expr></incr>)</control> <block pos:start="33:30" pos:end="42:0">{<block_content pos:start="35:9" pos:end="37:27">

        <expr_stmt pos:start="35:9" pos:end="35:27"><expr pos:start="35:9" pos:end="35:26"><call pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:23">GIC_SET_ENABLED</name><argument_list pos:start="35:24" pos:end="35:26">(<argument pos:start="35:25" pos:end="35:25"><expr pos:start="35:25" pos:end="35:25"><name pos:start="35:25" pos:end="35:25">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:27"><expr pos:start="37:9" pos:end="37:26"><call pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:23">GIC_SET_TRIGGER</name><argument_list pos:start="37:24" pos:end="37:26">(<argument pos:start="37:25" pos:end="37:25"><expr pos:start="37:25" pos:end="37:25"><name pos:start="37:25" pos:end="37:25">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

<cpp:ifdef pos:start="41:1" pos:end="41:11">#<cpp:directive pos:start="41:2" pos:end="41:6">ifdef</cpp:directive> <name pos:start="41:8" pos:end="41:11">NVIC</name></cpp:ifdef>

    <comment type="block" pos:start="43:5" pos:end="43:38">/* The NVIC is always enabled.  */</comment>

    <expr_stmt pos:start="45:5" pos:end="48:0"><expr pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:14">enabled</name></name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">1</literal></expr>;</expr_stmt>

<cpp:else pos:start="47:1" pos:end="47:5">#<cpp:directive pos:start="47:2" pos:end="47:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="49:5" pos:end="52:0"><expr pos:start="49:5" pos:end="49:18"><name pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:14">enabled</name></name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</expr_stmt>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
