<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5302.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">rtc_update_timer</name><parameter_list pos:start="1:29" pos:end="1:42">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:35"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:26">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">RTCState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name> <init pos:start="5:17" pos:end="5:24">= <expr pos:start="5:19" pos:end="5:24"><name pos:start="5:19" pos:end="5:24">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int32_t</name></type> <name pos:start="7:13" pos:end="7:16">irqs</name> <init pos:start="7:18" pos:end="7:27">= <expr pos:start="7:20" pos:end="7:27"><name pos:start="7:20" pos:end="7:27">REG_C_UF</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int32_t</name></type> <name pos:start="9:13" pos:end="9:20">new_irqs</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:53"><expr pos:start="13:5" pos:end="13:52"><call pos:start="13:5" pos:end="13:52"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:52">(<argument pos:start="13:12" pos:end="13:51"><expr pos:start="13:12" pos:end="13:51"><operator pos:start="13:12" pos:end="13:12">(</operator><name pos:start="13:13" pos:end="13:35"><name pos:start="13:13" pos:end="13:13">s</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:24">cmos_data</name><index pos:start="13:25" pos:end="13:35">[<expr pos:start="13:26" pos:end="13:34"><name pos:start="13:26" pos:end="13:34">RTC_REG_A</name></expr>]</index></name> <operator pos:start="13:37" pos:end="13:37">&amp;</operator> <literal type="number" pos:start="13:39" pos:end="13:42">0x60</literal><operator pos:start="13:43" pos:end="13:43">)</operator> <operator pos:start="13:45" pos:end="13:46">!=</operator> <literal type="number" pos:start="13:48" pos:end="13:51">0x60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:65">/* UIP might have been latched, update time and clear it.  */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><call pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:19">rtc_update_time</name><argument_list pos:start="19:20" pos:end="19:22">(<argument pos:start="19:21" pos:end="19:21"><expr pos:start="19:21" pos:end="19:21"><name pos:start="19:21" pos:end="19:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:16">cmos_data</name><index pos:start="21:17" pos:end="21:27">[<expr pos:start="21:18" pos:end="21:26"><name pos:start="21:18" pos:end="21:26">RTC_REG_A</name></expr>]</index></name> <operator pos:start="21:29" pos:end="21:30">&amp;=</operator> <operator pos:start="21:32" pos:end="21:32">~</operator><name pos:start="21:33" pos:end="21:41">REG_A_UIP</name></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:23">(<expr pos:start="25:9" pos:end="25:22"><call pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:19">check_alarm</name><argument_list pos:start="25:20" pos:end="25:22">(<argument pos:start="25:21" pos:end="25:21"><expr pos:start="25:21" pos:end="25:21"><name pos:start="25:21" pos:end="25:21">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:25" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:9">

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:12">irqs</name> <operator pos:start="27:14" pos:end="27:15">|=</operator> <name pos:start="27:17" pos:end="27:24">REG_C_AF</name></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:48">(<expr pos:start="29:13" pos:end="29:47"><name pos:start="29:13" pos:end="29:35"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:24">cmos_data</name><index pos:start="29:25" pos:end="29:35">[<expr pos:start="29:26" pos:end="29:34"><name pos:start="29:26" pos:end="29:34">RTC_REG_B</name></expr>]</index></name> <operator pos:start="29:37" pos:end="29:37">&amp;</operator> <name pos:start="29:39" pos:end="29:47">REG_B_AIE</name></expr>)</condition> <block pos:start="29:50" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:63">

            <expr_stmt pos:start="31:13" pos:end="31:63"><expr pos:start="31:13" pos:end="31:62"><call pos:start="31:13" pos:end="31:62"><name pos:start="31:13" pos:end="31:38">qemu_system_wakeup_request</name><argument_list pos:start="31:39" pos:end="31:62">(<argument pos:start="31:40" pos:end="31:61"><expr pos:start="31:40" pos:end="31:61"><name pos:start="31:40" pos:end="31:61">QEMU_WAKEUP_REASON_RTC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:47"><expr pos:start="37:5" pos:end="37:46"><name pos:start="37:5" pos:end="37:12">new_irqs</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:19">irqs</name> <operator pos:start="37:21" pos:end="37:21">&amp;</operator> <operator pos:start="37:23" pos:end="37:23">~</operator><name pos:start="37:24" pos:end="37:46"><name pos:start="37:24" pos:end="37:24">s</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:35">cmos_data</name><index pos:start="37:36" pos:end="37:46">[<expr pos:start="37:37" pos:end="37:45"><name pos:start="37:37" pos:end="37:45">RTC_REG_C</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:36"><expr pos:start="39:5" pos:end="39:35"><name pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:16">cmos_data</name><index pos:start="39:17" pos:end="39:27">[<expr pos:start="39:18" pos:end="39:26"><name pos:start="39:18" pos:end="39:26">RTC_REG_C</name></expr>]</index></name> <operator pos:start="39:29" pos:end="39:30">|=</operator> <name pos:start="39:32" pos:end="39:35">irqs</name></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:50">(<expr pos:start="41:9" pos:end="41:49"><operator pos:start="41:9" pos:end="41:9">(</operator><name pos:start="41:10" pos:end="41:17">new_irqs</name> <operator pos:start="41:19" pos:end="41:19">&amp;</operator> <name pos:start="41:21" pos:end="41:43"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:32">cmos_data</name><index pos:start="41:33" pos:end="41:43">[<expr pos:start="41:34" pos:end="41:42"><name pos:start="41:34" pos:end="41:42">RTC_REG_B</name></expr>]</index></name><operator pos:start="41:44" pos:end="41:44">)</operator> <operator pos:start="41:46" pos:end="41:47">!=</operator> <literal type="number" pos:start="41:49" pos:end="41:49">0</literal></expr>)</condition> <block pos:start="41:52" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:31">

        <expr_stmt pos:start="43:9" pos:end="43:46"><expr pos:start="43:9" pos:end="43:45"><name pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:20">cmos_data</name><index pos:start="43:21" pos:end="43:31">[<expr pos:start="43:22" pos:end="43:30"><name pos:start="43:22" pos:end="43:30">RTC_REG_C</name></expr>]</index></name> <operator pos:start="43:33" pos:end="43:34">|=</operator> <name pos:start="43:36" pos:end="43:45">REG_C_IRQF</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><call pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:22">qemu_irq_raise</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:24">s</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:29">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:26"><expr pos:start="49:5" pos:end="49:25"><call pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:22">check_update_timer</name><argument_list pos:start="49:23" pos:end="49:25">(<argument pos:start="49:24" pos:end="49:24"><expr pos:start="49:24" pos:end="49:24"><name pos:start="49:24" pos:end="49:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
