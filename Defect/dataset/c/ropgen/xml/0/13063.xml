<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13063.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">dmg_read</name><parameter_list pos:start="1:20" pos:end="3:49">(<parameter pos:start="1:21" pos:end="1:40"><decl pos:start="1:21" pos:end="1:40"><type pos:start="1:21" pos:end="1:40"><name pos:start="1:21" pos:end="1:36">BlockDriverState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">bs</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><name pos:start="1:43" pos:end="1:49">int64_t</name></type> <name pos:start="1:51" pos:end="1:60">sector_num</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:32"><decl pos:start="3:21" pos:end="3:32"><type pos:start="3:21" pos:end="3:32"><name pos:start="3:21" pos:end="3:27">uint8_t</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:32">buf</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:48"><decl pos:start="3:35" pos:end="3:48"><type pos:start="3:35" pos:end="3:48"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:48">nb_sectors</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:13">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">BDRVDMGState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:32">= <expr pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:24">bs</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="25:5">for<control pos:start="13:8" pos:end="13:29">(<init pos:start="13:9" pos:end="13:12"><expr pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:9">i</name><operator pos:start="13:10" pos:end="13:10">=</operator><literal type="number" pos:start="13:11" pos:end="13:11">0</literal></expr>;</init><condition pos:start="13:13" pos:end="13:25"><expr pos:start="13:13" pos:end="13:24"><name pos:start="13:13" pos:end="13:13">i</name><operator pos:start="13:14" pos:end="13:14">&lt;</operator><name pos:start="13:15" pos:end="13:24">nb_sectors</name></expr>;</condition><incr pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><name pos:start="13:26" pos:end="13:26">i</name><operator pos:start="13:27" pos:end="13:28">++</operator></expr></incr>)</control> <block pos:start="13:31" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:79">

	<decl_stmt pos:start="15:9" pos:end="15:40"><decl pos:start="15:9" pos:end="15:39"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">uint32_t</name></type> <name pos:start="15:18" pos:end="15:39">sector_offset_in_chunk</name></decl>;</decl_stmt>

	<if_stmt pos:start="17:9" pos:end="19:22"><if pos:start="17:9" pos:end="19:22">if<condition pos:start="17:11" pos:end="17:49">(<expr pos:start="17:12" pos:end="17:48"><call pos:start="17:12" pos:end="17:43"><name pos:start="17:12" pos:end="17:25">dmg_read_chunk</name><argument_list pos:start="17:26" pos:end="17:43">(<argument pos:start="17:27" pos:end="17:28"><expr pos:start="17:27" pos:end="17:28"><name pos:start="17:27" pos:end="17:28">bs</name></expr></argument>, <argument pos:start="17:31" pos:end="17:42"><expr pos:start="17:31" pos:end="17:42"><name pos:start="17:31" pos:end="17:40">sector_num</name><operator pos:start="17:41" pos:end="17:41">+</operator><name pos:start="17:42" pos:end="17:42">i</name></expr></argument>)</argument_list></call> <operator pos:start="17:45" pos:end="17:46">!=</operator> <literal type="number" pos:start="17:48" pos:end="17:48">0</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:22"><block_content pos:start="19:13" pos:end="19:22">

	    <return pos:start="19:13" pos:end="19:22">return <expr pos:start="19:20" pos:end="19:21"><operator pos:start="19:20" pos:end="19:20">-</operator><literal type="number" pos:start="19:21" pos:end="19:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

	<expr_stmt pos:start="21:9" pos:end="21:75"><expr pos:start="21:9" pos:end="21:74"><name pos:start="21:9" pos:end="21:30">sector_offset_in_chunk</name> <operator pos:start="21:32" pos:end="21:32">=</operator> <name pos:start="21:34" pos:end="21:43">sector_num</name><operator pos:start="21:44" pos:end="21:44">+</operator><name pos:start="21:45" pos:end="21:45">i</name><operator pos:start="21:46" pos:end="21:46">-</operator><name pos:start="21:47" pos:end="21:74"><name pos:start="21:47" pos:end="21:47">s</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:56">sectors</name><index pos:start="21:57" pos:end="21:74">[<expr pos:start="21:58" pos:end="21:73"><name pos:start="21:58" pos:end="21:73"><name pos:start="21:58" pos:end="21:58">s</name><operator pos:start="21:59" pos:end="21:60">-&gt;</operator><name pos:start="21:61" pos:end="21:73">current_chunk</name></name></expr>]</index></name></expr>;</expr_stmt>

	<expr_stmt pos:start="23:9" pos:end="23:79"><expr pos:start="23:9" pos:end="23:78"><call pos:start="23:9" pos:end="23:78"><name pos:start="23:9" pos:end="23:14">memcpy</name><argument_list pos:start="23:15" pos:end="23:78">(<argument pos:start="23:16" pos:end="23:24"><expr pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:18">buf</name><operator pos:start="23:19" pos:end="23:19">+</operator><name pos:start="23:20" pos:end="23:20">i</name><operator pos:start="23:21" pos:end="23:21">*</operator><literal type="number" pos:start="23:22" pos:end="23:24">512</literal></expr></argument>,<argument pos:start="23:26" pos:end="23:73"><expr pos:start="23:26" pos:end="23:73"><name pos:start="23:26" pos:end="23:46"><name pos:start="23:26" pos:end="23:26">s</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:46">uncompressed_chunk</name></name><operator pos:start="23:47" pos:end="23:47">+</operator><name pos:start="23:48" pos:end="23:69">sector_offset_in_chunk</name><operator pos:start="23:70" pos:end="23:70">*</operator><literal type="number" pos:start="23:71" pos:end="23:73">512</literal></expr></argument>,<argument pos:start="23:75" pos:end="23:77"><expr pos:start="23:75" pos:end="23:77"><literal type="number" pos:start="23:75" pos:end="23:77">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
