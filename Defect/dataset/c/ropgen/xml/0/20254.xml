<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20254.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">qcow2_close</name><parameter_list pos:start="1:24" pos:end="1:45">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:40">BlockDriverState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:29">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">BDRVQcow2State</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:34">= <expr pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:26">bs</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:28"><expr pos:start="7:5" pos:end="7:27"><call pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:14">qemu_vfree</name><argument_list pos:start="7:15" pos:end="7:27">(<argument pos:start="7:16" pos:end="7:26"><expr pos:start="7:16" pos:end="7:26"><name pos:start="7:16" pos:end="7:26"><name pos:start="7:16" pos:end="7:16">s</name><operator pos:start="7:17" pos:end="7:18">-&gt;</operator><name pos:start="7:19" pos:end="7:26">l1_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="9:5" pos:end="9:66">/* else pre-write overlap checks in cache_destroy may crash */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:15">l1_table</name></name> <operator pos:start="11:17" pos:end="11:17">=</operator> <name pos:start="11:19" pos:end="11:22">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:38">(<expr pos:start="15:9" pos:end="15:37"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:18"><name pos:start="15:11" pos:end="15:11">s</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:18">flags</name></name> <operator pos:start="15:20" pos:end="15:20">&amp;</operator> <name pos:start="15:22" pos:end="15:36">BDRV_O_INACTIVE</name><operator pos:start="15:37" pos:end="15:37">)</operator></expr>)</condition> <block pos:start="15:40" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:29">

        <expr_stmt pos:start="17:9" pos:end="17:29"><expr pos:start="17:9" pos:end="17:28"><call pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:24">qcow2_inactivate</name><argument_list pos:start="17:25" pos:end="17:28">(<argument pos:start="17:26" pos:end="17:27"><expr pos:start="17:26" pos:end="17:27"><name pos:start="17:26" pos:end="17:27">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:30"><expr pos:start="23:5" pos:end="23:29"><call pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:25">cache_clean_timer_del</name><argument_list pos:start="23:26" pos:end="23:29">(<argument pos:start="23:27" pos:end="23:28"><expr pos:start="23:27" pos:end="23:28"><name pos:start="23:27" pos:end="23:28">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:47"><expr pos:start="25:5" pos:end="25:46"><call pos:start="25:5" pos:end="25:46"><name pos:start="25:5" pos:end="25:23">qcow2_cache_destroy</name><argument_list pos:start="25:24" pos:end="25:46">(<argument pos:start="25:25" pos:end="25:26"><expr pos:start="25:25" pos:end="25:26"><name pos:start="25:25" pos:end="25:26">bs</name></expr></argument>, <argument pos:start="25:29" pos:end="25:45"><expr pos:start="25:29" pos:end="25:45"><name pos:start="25:29" pos:end="25:45"><name pos:start="25:29" pos:end="25:29">s</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:45">l2_table_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><call pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:23">qcow2_cache_destroy</name><argument_list pos:start="27:24" pos:end="27:52">(<argument pos:start="27:25" pos:end="27:26"><expr pos:start="27:25" pos:end="27:26"><name pos:start="27:25" pos:end="27:26">bs</name></expr></argument>, <argument pos:start="27:29" pos:end="27:51"><expr pos:start="27:29" pos:end="27:51"><name pos:start="27:29" pos:end="27:51"><name pos:start="27:29" pos:end="27:29">s</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:51">refcount_block_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><call pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:23">qcrypto_cipher_free</name><argument_list pos:start="31:24" pos:end="31:34">(<argument pos:start="31:25" pos:end="31:33"><expr pos:start="31:25" pos:end="31:33"><name pos:start="31:25" pos:end="31:33"><name pos:start="31:25" pos:end="31:25">s</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:33">cipher</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:13">cipher</name></name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:20">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><call pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:10">g_free</name><argument_list pos:start="37:11" pos:end="37:36">(<argument pos:start="37:12" pos:end="37:35"><expr pos:start="37:12" pos:end="37:35"><name pos:start="37:12" pos:end="37:35"><name pos:start="37:12" pos:end="37:12">s</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:35">unknown_header_fields</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><call pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:30">cleanup_unknown_header_ext</name><argument_list pos:start="39:31" pos:end="39:34">(<argument pos:start="39:32" pos:end="39:33"><expr pos:start="39:32" pos:end="39:33"><name pos:start="39:32" pos:end="39:33">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:34"><expr pos:start="43:5" pos:end="43:33"><call pos:start="43:5" pos:end="43:33"><name pos:start="43:5" pos:end="43:10">g_free</name><argument_list pos:start="43:11" pos:end="43:33">(<argument pos:start="43:12" pos:end="43:32"><expr pos:start="43:12" pos:end="43:32"><name pos:start="43:12" pos:end="43:32"><name pos:start="43:12" pos:end="43:12">s</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:32">image_backing_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><call pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:10">g_free</name><argument_list pos:start="45:11" pos:end="45:35">(<argument pos:start="45:12" pos:end="45:34"><expr pos:start="45:12" pos:end="45:34"><name pos:start="45:12" pos:end="45:34"><name pos:start="45:12" pos:end="45:12">s</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:34">image_backing_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><call pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:10">g_free</name><argument_list pos:start="49:11" pos:end="49:28">(<argument pos:start="49:12" pos:end="49:27"><expr pos:start="49:12" pos:end="49:27"><name pos:start="49:12" pos:end="49:27"><name pos:start="49:12" pos:end="49:12">s</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:27">cluster_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:32"><expr pos:start="51:5" pos:end="51:31"><call pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:14">qemu_vfree</name><argument_list pos:start="51:15" pos:end="51:31">(<argument pos:start="51:16" pos:end="51:30"><expr pos:start="51:16" pos:end="51:30"><name pos:start="51:16" pos:end="51:30"><name pos:start="51:16" pos:end="51:16">s</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:30">cluster_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><call pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:24">qcow2_refcount_close</name><argument_list pos:start="53:25" pos:end="53:28">(<argument pos:start="53:26" pos:end="53:27"><expr pos:start="53:26" pos:end="53:27"><name pos:start="53:26" pos:end="53:27">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:29"><expr pos:start="55:5" pos:end="55:28"><call pos:start="55:5" pos:end="55:28"><name pos:start="55:5" pos:end="55:24">qcow2_free_snapshots</name><argument_list pos:start="55:25" pos:end="55:28">(<argument pos:start="55:26" pos:end="55:27"><expr pos:start="55:26" pos:end="55:27"><name pos:start="55:26" pos:end="55:27">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
