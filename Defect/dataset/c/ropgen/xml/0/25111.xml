<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25111.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">kvmppc_read_hptes</name><parameter_list pos:start="1:23" pos:end="1:67">(<parameter pos:start="1:24" pos:end="1:46"><decl pos:start="1:24" pos:end="1:46"><type pos:start="1:24" pos:end="1:46"><name pos:start="1:24" pos:end="1:39">ppc_hash_pte64_t</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">hptes</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:59"><decl pos:start="1:49" pos:end="1:59"><type pos:start="1:49" pos:end="1:59"><name pos:start="1:49" pos:end="1:54">hwaddr</name></type> <name pos:start="1:56" pos:end="1:59">ptex</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:66"><decl pos:start="1:62" pos:end="1:66"><type pos:start="1:62" pos:end="1:66"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:66">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:14">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">fd</name></decl>, <decl pos:start="5:13" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:14">rc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:55"><expr pos:start="11:5" pos:end="11:54"><name pos:start="11:5" pos:end="11:6">fd</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <call pos:start="11:10" pos:end="11:54"><name pos:start="11:10" pos:end="11:27">kvmppc_get_htab_fd</name><argument_list pos:start="11:28" pos:end="11:54">(<argument pos:start="11:29" pos:end="11:33"><expr pos:start="11:29" pos:end="11:33"><name pos:start="11:29" pos:end="11:33">false</name></expr></argument>, <argument pos:start="11:36" pos:end="11:39"><expr pos:start="11:36" pos:end="11:39"><name pos:start="11:36" pos:end="11:39">ptex</name></expr></argument>, <argument pos:start="11:42" pos:end="11:53"><expr pos:start="11:42" pos:end="11:53"><operator pos:start="11:42" pos:end="11:42">&amp;</operator><name pos:start="11:43" pos:end="11:53">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:10"><expr pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:5">i</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <literal type="number" pos:start="15:9" pos:end="15:9">0</literal></expr>;</expr_stmt>

    <while pos:start="17:5" pos:end="79:5">while <condition pos:start="17:11" pos:end="17:17">(<expr pos:start="17:12" pos:end="17:16"><name pos:start="17:12" pos:end="17:12">i</name> <operator pos:start="17:14" pos:end="17:14">&lt;</operator> <name pos:start="17:16" pos:end="17:16">n</name></expr>)</condition> <block pos:start="17:19" pos:end="79:5">{<block_content pos:start="19:9" pos:end="77:9">

        <decl_stmt pos:start="19:9" pos:end="19:40"><decl pos:start="19:9" pos:end="19:39"><type pos:start="19:9" pos:end="19:36"><name pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:14">struct</name> <name pos:start="19:16" pos:end="19:34">kvm_get_htab_header</name></name> <modifier pos:start="19:36" pos:end="19:36">*</modifier></type><name pos:start="19:37" pos:end="19:39">hdr</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:58"><decl pos:start="21:9" pos:end="21:57"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">m</name> <init pos:start="21:15" pos:end="21:57">= <expr pos:start="21:17" pos:end="21:57"><ternary pos:start="21:17" pos:end="21:57"><condition pos:start="21:17" pos:end="21:37"><expr pos:start="21:17" pos:end="21:35"><name pos:start="21:17" pos:end="21:17">n</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:35">HPTES_PER_GROUP</name></expr> ?</condition><then pos:start="21:39" pos:end="21:39"> <expr pos:start="21:39" pos:end="21:39"><name pos:start="21:39" pos:end="21:39">n</name></expr> </then><else pos:start="21:41" pos:end="21:57">: <expr pos:start="21:43" pos:end="21:57"><name pos:start="21:43" pos:end="21:57">HPTES_PER_GROUP</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:54"><decl pos:start="23:9" pos:end="23:53"><type pos:start="23:9" pos:end="23:12"><name pos:start="23:9" pos:end="23:12">char</name></type> <name pos:start="23:14" pos:end="23:53"><name pos:start="23:14" pos:end="23:16">buf</name><index pos:start="23:17" pos:end="23:53">[<expr pos:start="23:18" pos:end="23:52"><sizeof pos:start="23:18" pos:end="23:29">sizeof<argument_list pos:start="23:24" pos:end="23:29">(<argument pos:start="23:25" pos:end="23:28"><expr pos:start="23:25" pos:end="23:28"><operator pos:start="23:25" pos:end="23:25">*</operator><name pos:start="23:26" pos:end="23:28">hdr</name></expr></argument>)</argument_list></sizeof> <operator pos:start="23:31" pos:end="23:31">+</operator> <name pos:start="23:33" pos:end="23:33">m</name> <operator pos:start="23:35" pos:end="23:35">*</operator> <name pos:start="23:37" pos:end="23:52">HASH_PTE_SIZE_64</name></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:40"><expr pos:start="27:9" pos:end="27:39"><name pos:start="27:9" pos:end="27:10">rc</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:39"><name pos:start="27:14" pos:end="27:17">read</name><argument_list pos:start="27:18" pos:end="27:39">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">fd</name></expr></argument>, <argument pos:start="27:23" pos:end="27:25"><expr pos:start="27:23" pos:end="27:25"><name pos:start="27:23" pos:end="27:25">buf</name></expr></argument>, <argument pos:start="27:28" pos:end="27:38"><expr pos:start="27:28" pos:end="27:38"><sizeof pos:start="27:28" pos:end="27:38">sizeof<argument_list pos:start="27:34" pos:end="27:38">(<argument pos:start="27:35" pos:end="27:37"><expr pos:start="27:35" pos:end="27:37"><name pos:start="27:35" pos:end="27:37">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:19">(<expr pos:start="29:13" pos:end="29:18"><name pos:start="29:13" pos:end="29:14">rc</name> <operator pos:start="29:16" pos:end="29:16">&lt;</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>)</condition> <block pos:start="29:21" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:64">

            <expr_stmt pos:start="31:13" pos:end="31:64"><expr pos:start="31:13" pos:end="31:63"><call pos:start="31:13" pos:end="31:63"><name pos:start="31:13" pos:end="31:20">hw_error</name><argument_list pos:start="31:21" pos:end="31:63">(<argument pos:start="31:22" pos:end="31:62"><expr pos:start="31:22" pos:end="31:62"><literal type="string" pos:start="31:22" pos:end="31:62">"kvmppc_read_hptes: Unable to read HPTEs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:48"><expr pos:start="37:9" pos:end="37:47"><name pos:start="37:9" pos:end="37:11">hdr</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <operator pos:start="37:15" pos:end="37:15">(</operator>struct <name pos:start="37:23" pos:end="37:41">kvm_get_htab_header</name> <operator pos:start="37:43" pos:end="37:43">*</operator><operator pos:start="37:44" pos:end="37:44">)</operator><name pos:start="37:45" pos:end="37:47">buf</name></expr>;</expr_stmt>

        <while pos:start="39:9" pos:end="77:9">while <condition pos:start="39:15" pos:end="39:53">(<expr pos:start="39:16" pos:end="39:52"><operator pos:start="39:16" pos:end="39:16">(</operator><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <name pos:start="39:21" pos:end="39:21">n</name><operator pos:start="39:22" pos:end="39:22">)</operator> <operator pos:start="39:24" pos:end="39:25">&amp;&amp;</operator> <operator pos:start="39:27" pos:end="39:27">(</operator><operator pos:start="39:28" pos:end="39:28">(</operator><name pos:start="39:29" pos:end="39:32">char</name> <operator pos:start="39:34" pos:end="39:34">*</operator><operator pos:start="39:35" pos:end="39:35">)</operator><name pos:start="39:36" pos:end="39:38">hdr</name> <operator pos:start="39:40" pos:end="39:40">&lt;</operator> <operator pos:start="39:42" pos:end="39:42">(</operator><name pos:start="39:43" pos:end="39:45">buf</name> <operator pos:start="39:47" pos:end="39:47">+</operator> <name pos:start="39:49" pos:end="39:50">rc</name><operator pos:start="39:51" pos:end="39:51">)</operator><operator pos:start="39:52" pos:end="39:52">)</operator></expr>)</condition> <block pos:start="39:55" pos:end="77:9">{<block_content pos:start="41:13" pos:end="75:70">

            <decl_stmt pos:start="41:13" pos:end="41:41"><decl pos:start="41:13" pos:end="41:40"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:23">invalid</name> <init pos:start="41:25" pos:end="41:40">= <expr pos:start="41:27" pos:end="41:40"><name pos:start="41:27" pos:end="41:40"><name pos:start="41:27" pos:end="41:29">hdr</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:40">n_invalid</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="45:13" pos:end="51:13"><if pos:start="45:13" pos:end="51:13">if <condition pos:start="45:16" pos:end="45:41">(<expr pos:start="45:17" pos:end="45:40"><name pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:19">hdr</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:26">index</name></name> <operator pos:start="45:28" pos:end="45:29">!=</operator> <operator pos:start="45:31" pos:end="45:31">(</operator><name pos:start="45:32" pos:end="45:35">ptex</name> <operator pos:start="45:37" pos:end="45:37">+</operator> <name pos:start="45:39" pos:end="45:39">i</name><operator pos:start="45:40" pos:end="45:40">)</operator></expr>)</condition> <block pos:start="45:43" pos:end="51:13">{<block_content pos:start="47:17" pos:end="49:74">

                <expr_stmt pos:start="47:17" pos:end="49:74"><expr pos:start="47:17" pos:end="49:73"><call pos:start="47:17" pos:end="49:73"><name pos:start="47:17" pos:end="47:24">hw_error</name><argument_list pos:start="47:25" pos:end="49:73">(<argument pos:start="47:26" pos:end="49:51"><expr pos:start="47:26" pos:end="49:51"><literal type="string" pos:start="47:26" pos:end="47:69">"kvmppc_read_hptes: Unexpected HPTE index %"</literal><name pos:start="47:70" pos:end="47:75">PRIu32</name>

                         <literal type="string" pos:start="49:26" pos:end="49:33">" != (%"</literal><name pos:start="49:34" pos:end="49:44">HWADDR_PRIu</name><literal type="string" pos:start="49:45" pos:end="49:51">" + %d"</literal></expr></argument>, <argument pos:start="49:54" pos:end="49:63"><expr pos:start="49:54" pos:end="49:63"><name pos:start="49:54" pos:end="49:63"><name pos:start="49:54" pos:end="49:56">hdr</name><operator pos:start="49:57" pos:end="49:58">-&gt;</operator><name pos:start="49:59" pos:end="49:63">index</name></name></expr></argument>, <argument pos:start="49:66" pos:end="49:69"><expr pos:start="49:66" pos:end="49:69"><name pos:start="49:66" pos:end="49:69">ptex</name></expr></argument>, <argument pos:start="49:72" pos:end="49:72"><expr pos:start="49:72" pos:end="49:72"><name pos:start="49:72" pos:end="49:72">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="55:13" pos:end="55:72"><expr pos:start="55:13" pos:end="55:71"><call pos:start="55:13" pos:end="55:71"><name pos:start="55:13" pos:end="55:18">memcpy</name><argument_list pos:start="55:19" pos:end="55:71">(<argument pos:start="55:20" pos:end="55:28"><expr pos:start="55:20" pos:end="55:28"><name pos:start="55:20" pos:end="55:24">hptes</name> <operator pos:start="55:26" pos:end="55:26">+</operator> <name pos:start="55:28" pos:end="55:28">i</name></expr></argument>, <argument pos:start="55:31" pos:end="55:37"><expr pos:start="55:31" pos:end="55:37"><name pos:start="55:31" pos:end="55:33">hdr</name> <operator pos:start="55:35" pos:end="55:35">+</operator> <literal type="number" pos:start="55:37" pos:end="55:37">1</literal></expr></argument>, <argument pos:start="55:40" pos:end="55:70"><expr pos:start="55:40" pos:end="55:70"><name pos:start="55:40" pos:end="55:55">HASH_PTE_SIZE_64</name> <operator pos:start="55:57" pos:end="55:57">*</operator> <name pos:start="55:59" pos:end="55:70"><name pos:start="55:59" pos:end="55:61">hdr</name><operator pos:start="55:62" pos:end="55:63">-&gt;</operator><name pos:start="55:64" pos:end="55:70">n_valid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:30"><expr pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:13">i</name> <operator pos:start="57:15" pos:end="57:16">+=</operator> <name pos:start="57:18" pos:end="57:29"><name pos:start="57:18" pos:end="57:20">hdr</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:29">n_valid</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="61:13" pos:end="65:13"><if pos:start="61:13" pos:end="65:13">if <condition pos:start="61:16" pos:end="61:34">(<expr pos:start="61:17" pos:end="61:33"><operator pos:start="61:17" pos:end="61:17">(</operator><name pos:start="61:18" pos:end="61:18">n</name> <operator pos:start="61:20" pos:end="61:20">-</operator> <name pos:start="61:22" pos:end="61:22">i</name><operator pos:start="61:23" pos:end="61:23">)</operator> <operator pos:start="61:25" pos:end="61:25">&lt;</operator> <name pos:start="61:27" pos:end="61:33">invalid</name></expr>)</condition> <block pos:start="61:36" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:32">

                <expr_stmt pos:start="63:17" pos:end="63:32"><expr pos:start="63:17" pos:end="63:31"><name pos:start="63:17" pos:end="63:23">invalid</name> <operator pos:start="63:25" pos:end="63:25">=</operator> <name pos:start="63:27" pos:end="63:27">n</name> <operator pos:start="63:29" pos:end="63:29">-</operator> <name pos:start="63:31" pos:end="63:31">i</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:61"><expr pos:start="67:13" pos:end="67:60"><call pos:start="67:13" pos:end="67:60"><name pos:start="67:13" pos:end="67:18">memset</name><argument_list pos:start="67:19" pos:end="67:60">(<argument pos:start="67:20" pos:end="67:28"><expr pos:start="67:20" pos:end="67:28"><name pos:start="67:20" pos:end="67:24">hptes</name> <operator pos:start="67:26" pos:end="67:26">+</operator> <name pos:start="67:28" pos:end="67:28">i</name></expr></argument>, <argument pos:start="67:31" pos:end="67:31"><expr pos:start="67:31" pos:end="67:31"><literal type="number" pos:start="67:31" pos:end="67:31">0</literal></expr></argument>, <argument pos:start="67:34" pos:end="67:59"><expr pos:start="67:34" pos:end="67:59"><name pos:start="67:34" pos:end="67:40">invalid</name> <operator pos:start="67:42" pos:end="67:42">*</operator> <name pos:start="67:44" pos:end="67:59">HASH_PTE_SIZE_64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:32"><expr pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:13">i</name> <operator pos:start="69:15" pos:end="69:16">+=</operator> <name pos:start="69:18" pos:end="69:31"><name pos:start="69:18" pos:end="69:20">hdr</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:31">n_invalid</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="73:13" pos:end="75:70"><expr pos:start="73:13" pos:end="75:69"><name pos:start="73:13" pos:end="73:15">hdr</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <operator pos:start="73:19" pos:end="73:19">(</operator>struct <name pos:start="73:27" pos:end="73:45">kvm_get_htab_header</name> <operator pos:start="73:47" pos:end="73:47">*</operator><operator pos:start="73:48" pos:end="73:48">)</operator>

                <operator pos:start="75:17" pos:end="75:17">(</operator><operator pos:start="75:18" pos:end="75:18">(</operator><name pos:start="75:19" pos:end="75:22">char</name> <operator pos:start="75:24" pos:end="75:24">*</operator><operator pos:start="75:25" pos:end="75:25">)</operator><operator pos:start="75:26" pos:end="75:26">(</operator><name pos:start="75:27" pos:end="75:29">hdr</name> <operator pos:start="75:31" pos:end="75:31">+</operator> <literal type="number" pos:start="75:33" pos:end="75:33">1</literal><operator pos:start="75:34" pos:end="75:34">)</operator> <operator pos:start="75:36" pos:end="75:36">+</operator> <name pos:start="75:38" pos:end="75:53">HASH_PTE_SIZE_64</name> <operator pos:start="75:55" pos:end="75:55">*</operator> <name pos:start="75:57" pos:end="75:68"><name pos:start="75:57" pos:end="75:59">hdr</name><operator pos:start="75:60" pos:end="75:61">-&gt;</operator><name pos:start="75:62" pos:end="75:68">n_valid</name></name><operator pos:start="75:69" pos:end="75:69">)</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></while>



    <expr_stmt pos:start="83:5" pos:end="83:14"><expr pos:start="83:5" pos:end="83:13"><call pos:start="83:5" pos:end="83:13"><name pos:start="83:5" pos:end="83:9">close</name><argument_list pos:start="83:10" pos:end="83:13">(<argument pos:start="83:11" pos:end="83:12"><expr pos:start="83:11" pos:end="83:12"><name pos:start="83:11" pos:end="83:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
