<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8739.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">avcodec_decode_subtitle2</name><parameter_list pos:start="1:29" pos:end="5:45">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><name pos:start="1:53" pos:end="1:62">AVSubtitle</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">sub</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:45"><decl pos:start="3:30" pos:end="3:45"><type pos:start="3:30" pos:end="3:45"><name pos:start="3:30" pos:end="3:32">int</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:45">got_sub_ptr</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:44"><decl pos:start="5:30" pos:end="5:44"><type pos:start="5:30" pos:end="5:44"><name pos:start="5:30" pos:end="5:37">AVPacket</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier></type><name pos:start="5:40" pos:end="5:44">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="147:1">{<block_content pos:start="9:5" pos:end="145:15">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">ret</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:52">(<expr pos:start="13:9" pos:end="13:51"><name pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:13">avctx</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:20">codec</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:26">type</name></name> <operator pos:start="13:28" pos:end="13:29">!=</operator> <name pos:start="13:31" pos:end="13:51">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="13:54" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:31">

        <expr_stmt pos:start="15:9" pos:end="15:74"><expr pos:start="15:9" pos:end="15:73"><call pos:start="15:9" pos:end="15:73"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:73">(<argument pos:start="15:16" pos:end="15:20"><expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:20">avctx</name></expr></argument>, <argument pos:start="15:23" pos:end="15:34"><expr pos:start="15:23" pos:end="15:34"><name pos:start="15:23" pos:end="15:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:37" pos:end="15:72"><expr pos:start="15:37" pos:end="15:72"><literal type="string" pos:start="15:37" pos:end="15:72">"Invalid media type for subtitles\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><operator pos:start="23:5" pos:end="23:5">*</operator><name pos:start="23:6" pos:end="23:16">got_sub_ptr</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:39"><expr pos:start="25:5" pos:end="25:38"><call pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:33">avcodec_get_subtitle_defaults</name><argument_list pos:start="25:34" pos:end="25:38">(<argument pos:start="25:35" pos:end="25:37"><expr pos:start="25:35" pos:end="25:37"><name pos:start="25:35" pos:end="25:37">sub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="141:5"><if pos:start="29:5" pos:end="141:5">if <condition pos:start="29:8" pos:end="29:20">(<expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:13">avpkt</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:19">size</name></name></expr>)</condition> <block pos:start="29:22" pos:end="141:5">{<block_content pos:start="31:9" pos:end="139:34">

        <decl_stmt pos:start="31:9" pos:end="31:29"><decl pos:start="31:9" pos:end="31:28"><type pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:16">AVPacket</name></type> <name pos:start="31:18" pos:end="31:28">pkt_recoded</name></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:30"><decl pos:start="33:9" pos:end="33:29"><type pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:16">AVPacket</name></type> <name pos:start="33:18" pos:end="33:20">tmp</name> <init pos:start="33:22" pos:end="33:29">= <expr pos:start="33:24" pos:end="33:29"><operator pos:start="33:24" pos:end="33:24">*</operator><name pos:start="33:25" pos:end="33:29">avpkt</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:56"><decl pos:start="35:9" pos:end="35:55"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:21">did_split</name> <init pos:start="35:23" pos:end="35:55">= <expr pos:start="35:25" pos:end="35:55"><call pos:start="35:25" pos:end="35:55"><name pos:start="35:25" pos:end="35:49">av_packet_split_side_data</name><argument_list pos:start="35:50" pos:end="35:55">(<argument pos:start="35:51" pos:end="35:54"><expr pos:start="35:51" pos:end="35:54"><operator pos:start="35:51" pos:end="35:51">&amp;</operator><name pos:start="35:52" pos:end="35:54">tmp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:start="37:9" pos:end="37:42">//apply_param_change(avctx, &amp;tmp);</comment>



        <expr_stmt pos:start="41:9" pos:end="41:26"><expr pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:19">pkt_recoded</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:25">tmp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:57"><expr pos:start="43:9" pos:end="43:56"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:56"><name pos:start="43:15" pos:end="43:29">recode_subtitle</name><argument_list pos:start="43:30" pos:end="43:56">(<argument pos:start="43:31" pos:end="43:35"><expr pos:start="43:31" pos:end="43:35"><name pos:start="43:31" pos:end="43:35">avctx</name></expr></argument>, <argument pos:start="43:38" pos:end="43:49"><expr pos:start="43:38" pos:end="43:49"><operator pos:start="43:38" pos:end="43:38">&amp;</operator><name pos:start="43:39" pos:end="43:49">pkt_recoded</name></expr></argument>, <argument pos:start="43:52" pos:end="43:55"><expr pos:start="43:52" pos:end="43:55"><operator pos:start="43:52" pos:end="43:52">&amp;</operator><name pos:start="43:53" pos:end="43:55">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="121:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:20">(<expr pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:15">ret</name> <operator pos:start="45:17" pos:end="45:17">&lt;</operator> <literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>)</condition> <block pos:start="45:22" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:29">

            <expr_stmt pos:start="47:13" pos:end="47:29"><expr pos:start="47:13" pos:end="47:28"><operator pos:start="47:13" pos:end="47:13">*</operator><name pos:start="47:14" pos:end="47:24">got_sub_ptr</name> <operator pos:start="47:26" pos:end="47:26">=</operator> <literal type="number" pos:start="47:28" pos:end="47:28">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="121:9">else <block pos:start="49:16" pos:end="121:9">{<block_content pos:start="51:13" pos:end="119:30">

            <expr_stmt pos:start="51:13" pos:end="51:38"><expr pos:start="51:13" pos:end="51:37"><name pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:17">avctx</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:22">pkt</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <operator pos:start="51:26" pos:end="51:26">&amp;</operator><name pos:start="51:27" pos:end="51:37">pkt_recoded</name></expr>;</expr_stmt>



            <if_stmt pos:start="55:13" pos:end="59:77"><if pos:start="55:13" pos:end="59:77">if <condition pos:start="55:16" pos:end="55:72">(<expr pos:start="55:17" pos:end="55:71"><name pos:start="55:17" pos:end="55:39"><name pos:start="55:17" pos:end="55:21">avctx</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:35">pkt_timebase</name><operator pos:start="55:36" pos:end="55:36">.</operator><name pos:start="55:37" pos:end="55:39">den</name></name> <operator pos:start="55:41" pos:end="55:42">&amp;&amp;</operator> <name pos:start="55:44" pos:end="55:53"><name pos:start="55:44" pos:end="55:48">avpkt</name><operator pos:start="55:49" pos:end="55:50">-&gt;</operator><name pos:start="55:51" pos:end="55:53">pts</name></name> <operator pos:start="55:55" pos:end="55:56">!=</operator> <name pos:start="55:58" pos:end="55:71">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="59:77"><block_content pos:start="57:17" pos:end="59:77">

                <expr_stmt pos:start="57:17" pos:end="59:77"><expr pos:start="57:17" pos:end="59:76"><name pos:start="57:17" pos:end="57:24"><name pos:start="57:17" pos:end="57:19">sub</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:24">pts</name></name> <operator pos:start="57:26" pos:end="57:26">=</operator> <call pos:start="57:28" pos:end="59:76"><name pos:start="57:28" pos:end="57:39">av_rescale_q</name><argument_list pos:start="57:40" pos:end="59:76">(<argument pos:start="57:41" pos:end="57:50"><expr pos:start="57:41" pos:end="57:50"><name pos:start="57:41" pos:end="57:50"><name pos:start="57:41" pos:end="57:45">avpkt</name><operator pos:start="57:46" pos:end="57:47">-&gt;</operator><name pos:start="57:48" pos:end="57:50">pts</name></name></expr></argument>,

                                        <argument pos:start="59:41" pos:end="59:59"><expr pos:start="59:41" pos:end="59:59"><name pos:start="59:41" pos:end="59:59"><name pos:start="59:41" pos:end="59:45">avctx</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:59">pkt_timebase</name></name></expr></argument>, <argument pos:start="59:62" pos:end="59:75"><expr pos:start="59:62" pos:end="59:75"><name pos:start="59:62" pos:end="59:75">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:78"><expr pos:start="61:13" pos:end="61:77"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <call pos:start="61:19" pos:end="61:77"><name pos:start="61:19" pos:end="61:38"><name pos:start="61:19" pos:end="61:23">avctx</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:30">codec</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:38">decode</name></name><argument_list pos:start="61:39" pos:end="61:77">(<argument pos:start="61:40" pos:end="61:44"><expr pos:start="61:40" pos:end="61:44"><name pos:start="61:40" pos:end="61:44">avctx</name></expr></argument>, <argument pos:start="61:47" pos:end="61:49"><expr pos:start="61:47" pos:end="61:49"><name pos:start="61:47" pos:end="61:49">sub</name></expr></argument>, <argument pos:start="61:52" pos:end="61:62"><expr pos:start="61:52" pos:end="61:62"><name pos:start="61:52" pos:end="61:62">got_sub_ptr</name></expr></argument>, <argument pos:start="61:65" pos:end="61:76"><expr pos:start="61:65" pos:end="61:76"><operator pos:start="61:65" pos:end="61:65">&amp;</operator><name pos:start="61:66" pos:end="61:76">pkt_recoded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="65:59"><expr pos:start="63:13" pos:end="65:58"><call pos:start="63:13" pos:end="65:58"><name pos:start="63:13" pos:end="63:22">av_assert1</name><argument_list pos:start="63:23" pos:end="65:58">(<argument pos:start="63:24" pos:end="65:57"><expr pos:start="63:24" pos:end="65:57"><operator pos:start="63:24" pos:end="63:24">(</operator><name pos:start="63:25" pos:end="63:27">ret</name> <operator pos:start="63:29" pos:end="63:30">&gt;=</operator> <literal type="number" pos:start="63:32" pos:end="63:32">0</literal><operator pos:start="63:33" pos:end="63:33">)</operator> <operator pos:start="63:35" pos:end="63:36">&gt;=</operator> <operator pos:start="63:38" pos:end="63:38">!</operator><operator pos:start="63:39" pos:end="63:39">!</operator><operator pos:start="63:40" pos:end="63:40">*</operator><name pos:start="63:41" pos:end="63:51">got_sub_ptr</name> <operator pos:start="63:53" pos:end="63:54">&amp;&amp;</operator>

                       <operator pos:start="65:24" pos:end="65:24">!</operator><operator pos:start="65:25" pos:end="65:25">!</operator><operator pos:start="65:26" pos:end="65:26">*</operator><name pos:start="65:27" pos:end="65:37">got_sub_ptr</name> <operator pos:start="65:39" pos:end="65:40">&gt;=</operator> <operator pos:start="65:42" pos:end="65:42">!</operator><operator pos:start="65:43" pos:end="65:43">!</operator><name pos:start="65:44" pos:end="65:57"><name pos:start="65:44" pos:end="65:46">sub</name><operator pos:start="65:47" pos:end="65:48">-&gt;</operator><name pos:start="65:49" pos:end="65:57">num_rects</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="69:13" pos:end="79:13"><if pos:start="69:13" pos:end="79:13">if <condition pos:start="69:16" pos:end="71:40">(<expr pos:start="69:17" pos:end="71:39"><name pos:start="69:17" pos:end="69:30"><name pos:start="69:17" pos:end="69:19">sub</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:30">num_rects</name></name> <operator pos:start="69:32" pos:end="69:33">&amp;&amp;</operator> <operator pos:start="69:35" pos:end="69:35">!</operator><name pos:start="69:36" pos:end="69:56"><name pos:start="69:36" pos:end="69:38">sub</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:56">end_display_time</name></name> <operator pos:start="69:58" pos:end="69:59">&amp;&amp;</operator> <name pos:start="69:61" pos:end="69:75"><name pos:start="69:61" pos:end="69:65">avpkt</name><operator pos:start="69:66" pos:end="69:67">-&gt;</operator><name pos:start="69:68" pos:end="69:75">duration</name></name> <operator pos:start="69:77" pos:end="69:78">&amp;&amp;</operator>

                <name pos:start="71:17" pos:end="71:39"><name pos:start="71:17" pos:end="71:21">avctx</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:35">pkt_timebase</name><operator pos:start="71:36" pos:end="71:36">.</operator><name pos:start="71:37" pos:end="71:39">num</name></name></expr>)</condition> <block pos:start="71:42" pos:end="79:13">{<block_content pos:start="73:17" pos:end="77:78">

                <decl_stmt pos:start="73:17" pos:end="73:44"><decl pos:start="73:17" pos:end="73:43"><type pos:start="73:17" pos:end="73:26"><name pos:start="73:17" pos:end="73:26">AVRational</name></type> <name pos:start="73:28" pos:end="73:29">ms</name> <init pos:start="73:31" pos:end="73:43">= <expr pos:start="73:33" pos:end="73:43"><block pos:start="73:33" pos:end="73:43">{ <expr pos:start="73:35" pos:end="73:35"><literal type="number" pos:start="73:35" pos:end="73:35">1</literal></expr>, <expr pos:start="73:38" pos:end="73:41"><literal type="number" pos:start="73:38" pos:end="73:41">1000</literal></expr> }</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="75:17" pos:end="77:78"><expr pos:start="75:17" pos:end="77:77"><name pos:start="75:17" pos:end="75:37"><name pos:start="75:17" pos:end="75:19">sub</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:37">end_display_time</name></name> <operator pos:start="75:39" pos:end="75:39">=</operator> <call pos:start="75:41" pos:end="77:77"><name pos:start="75:41" pos:end="75:52">av_rescale_q</name><argument_list pos:start="75:53" pos:end="77:77">(<argument pos:start="75:54" pos:end="75:68"><expr pos:start="75:54" pos:end="75:68"><name pos:start="75:54" pos:end="75:68"><name pos:start="75:54" pos:end="75:58">avpkt</name><operator pos:start="75:59" pos:end="75:60">-&gt;</operator><name pos:start="75:61" pos:end="75:68">duration</name></name></expr></argument>,

                                                     <argument pos:start="77:54" pos:end="77:72"><expr pos:start="77:54" pos:end="77:72"><name pos:start="77:54" pos:end="77:72"><name pos:start="77:54" pos:end="77:58">avctx</name><operator pos:start="77:59" pos:end="77:60">-&gt;</operator><name pos:start="77:61" pos:end="77:72">pkt_timebase</name></name></expr></argument>, <argument pos:start="77:75" pos:end="77:76"><expr pos:start="77:75" pos:end="77:76"><name pos:start="77:75" pos:end="77:76">ms</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <for pos:start="83:13" pos:end="99:13">for <control pos:start="83:17" pos:end="83:48">(<init pos:start="83:18" pos:end="83:23"><expr pos:start="83:18" pos:end="83:22"><name pos:start="83:18" pos:end="83:18">i</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <literal type="number" pos:start="83:22" pos:end="83:22">0</literal></expr>;</init> <condition pos:start="83:25" pos:end="83:43"><expr pos:start="83:25" pos:end="83:42"><name pos:start="83:25" pos:end="83:25">i</name> <operator pos:start="83:27" pos:end="83:27">&lt;</operator> <name pos:start="83:29" pos:end="83:42"><name pos:start="83:29" pos:end="83:31">sub</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:42">num_rects</name></name></expr>;</condition> <incr pos:start="83:45" pos:end="83:47"><expr pos:start="83:45" pos:end="83:47"><name pos:start="83:45" pos:end="83:45">i</name><operator pos:start="83:46" pos:end="83:47">++</operator></expr></incr>)</control> <block pos:start="83:50" pos:end="99:13">{<block_content pos:start="85:17" pos:end="97:17">

                <if_stmt pos:start="85:17" pos:end="97:17"><if pos:start="85:17" pos:end="97:17">if <condition pos:start="85:20" pos:end="85:74">(<expr pos:start="85:21" pos:end="85:73"><name pos:start="85:21" pos:end="85:33"><name pos:start="85:21" pos:end="85:23">sub</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:30">rects</name><index pos:start="85:31" pos:end="85:33">[<expr pos:start="85:32" pos:end="85:32"><name pos:start="85:32" pos:end="85:32">i</name></expr>]</index></name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:38">ass</name> <operator pos:start="85:40" pos:end="85:41">&amp;&amp;</operator> <operator pos:start="85:43" pos:end="85:43">!</operator><call pos:start="85:44" pos:end="85:73"><name pos:start="85:44" pos:end="85:53">utf8_check</name><argument_list pos:start="85:54" pos:end="85:73">(<argument pos:start="85:55" pos:end="85:72"><expr pos:start="85:55" pos:end="85:72"><name pos:start="85:55" pos:end="85:67"><name pos:start="85:55" pos:end="85:57">sub</name><operator pos:start="85:58" pos:end="85:59">-&gt;</operator><name pos:start="85:60" pos:end="85:64">rects</name><index pos:start="85:65" pos:end="85:67">[<expr pos:start="85:66" pos:end="85:66"><name pos:start="85:66" pos:end="85:66">i</name></expr>]</index></name><operator pos:start="85:68" pos:end="85:69">-&gt;</operator><name pos:start="85:70" pos:end="85:72">ass</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:76" pos:end="97:17">{<block_content pos:start="87:21" pos:end="95:47">

                    <expr_stmt pos:start="87:21" pos:end="91:66"><expr pos:start="87:21" pos:end="91:65"><call pos:start="87:21" pos:end="91:65"><name pos:start="87:21" pos:end="87:26">av_log</name><argument_list pos:start="87:27" pos:end="91:65">(<argument pos:start="87:28" pos:end="87:32"><expr pos:start="87:28" pos:end="87:32"><name pos:start="87:28" pos:end="87:32">avctx</name></expr></argument>, <argument pos:start="87:35" pos:end="87:46"><expr pos:start="87:35" pos:end="87:46"><name pos:start="87:35" pos:end="87:46">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="89:28" pos:end="91:64"><expr pos:start="89:28" pos:end="91:64"><literal type="string" pos:start="89:28" pos:end="89:70">"Invalid UTF-8 in decoded subtitles text; "</literal>

                           <literal type="string" pos:start="91:28" pos:end="91:64">"maybe missing -sub_charenc option\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:41"><expr pos:start="93:21" pos:end="93:40"><call pos:start="93:21" pos:end="93:40"><name pos:start="93:21" pos:end="93:35">avsubtitle_free</name><argument_list pos:start="93:36" pos:end="93:40">(<argument pos:start="93:37" pos:end="93:39"><expr pos:start="93:37" pos:end="93:39"><name pos:start="93:37" pos:end="93:39">sub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="95:21" pos:end="95:47">return <expr pos:start="95:28" pos:end="95:46"><name pos:start="95:28" pos:end="95:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>



            <if_stmt pos:start="103:13" pos:end="115:13"><if pos:start="103:13" pos:end="115:13">if <condition pos:start="103:16" pos:end="103:45">(<expr pos:start="103:17" pos:end="103:44"><name pos:start="103:17" pos:end="103:24"><name pos:start="103:17" pos:end="103:19">tmp</name><operator pos:start="103:20" pos:end="103:20">.</operator><name pos:start="103:21" pos:end="103:24">data</name></name> <operator pos:start="103:26" pos:end="103:27">!=</operator> <name pos:start="103:29" pos:end="103:44"><name pos:start="103:29" pos:end="103:39">pkt_recoded</name><operator pos:start="103:40" pos:end="103:40">.</operator><name pos:start="103:41" pos:end="103:44">data</name></name></expr>)</condition> <block pos:start="103:47" pos:end="115:13">{<block_content pos:start="107:17" pos:end="113:45"> <comment type="line" pos:start="103:49" pos:end="103:65">// did we recode?</comment>

                <comment type="block" pos:start="105:17" pos:end="105:76">/* prevent from destroying side data from original packet */</comment>

                <expr_stmt pos:start="107:17" pos:end="107:45"><expr pos:start="107:17" pos:end="107:44"><name pos:start="107:17" pos:end="107:37"><name pos:start="107:17" pos:end="107:27">pkt_recoded</name><operator pos:start="107:28" pos:end="107:28">.</operator><name pos:start="107:29" pos:end="107:37">side_data</name></name> <operator pos:start="107:39" pos:end="107:39">=</operator> <name pos:start="107:41" pos:end="107:44">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:48"><expr pos:start="109:17" pos:end="109:47"><name pos:start="109:17" pos:end="109:43"><name pos:start="109:17" pos:end="109:27">pkt_recoded</name><operator pos:start="109:28" pos:end="109:28">.</operator><name pos:start="109:29" pos:end="109:43">side_data_elems</name></name> <operator pos:start="109:45" pos:end="109:45">=</operator> <literal type="number" pos:start="109:47" pos:end="109:47">0</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="113:17" pos:end="113:45"><expr pos:start="113:17" pos:end="113:44"><call pos:start="113:17" pos:end="113:44"><name pos:start="113:17" pos:end="113:30">av_free_packet</name><argument_list pos:start="113:31" pos:end="113:44">(<argument pos:start="113:32" pos:end="113:43"><expr pos:start="113:32" pos:end="113:43"><operator pos:start="113:32" pos:end="113:32">&amp;</operator><name pos:start="113:33" pos:end="113:43">pkt_recoded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:87"><expr pos:start="117:13" pos:end="117:86"><name pos:start="117:13" pos:end="117:23"><name pos:start="117:13" pos:end="117:15">sub</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:23">format</name></name> <operator pos:start="117:25" pos:end="117:25">=</operator> <operator pos:start="117:27" pos:end="117:27">!</operator><operator pos:start="117:28" pos:end="117:28">(</operator><name pos:start="117:29" pos:end="117:58"><name pos:start="117:29" pos:end="117:33">avctx</name><operator pos:start="117:34" pos:end="117:35">-&gt;</operator><name pos:start="117:36" pos:end="117:51">codec_descriptor</name><operator pos:start="117:52" pos:end="117:53">-&gt;</operator><name pos:start="117:54" pos:end="117:58">props</name></name> <operator pos:start="117:60" pos:end="117:60">&amp;</operator> <name pos:start="117:62" pos:end="117:85">AV_CODEC_PROP_BITMAP_SUB</name><operator pos:start="117:86" pos:end="117:86">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:30"><expr pos:start="119:13" pos:end="119:29"><name pos:start="119:13" pos:end="119:22"><name pos:start="119:13" pos:end="119:17">avctx</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:22">pkt</name></name> <operator pos:start="119:24" pos:end="119:24">=</operator> <name pos:start="119:26" pos:end="119:29">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="125:9" pos:end="133:9"><if pos:start="125:9" pos:end="133:9">if <condition pos:start="125:12" pos:end="125:22">(<expr pos:start="125:13" pos:end="125:21"><name pos:start="125:13" pos:end="125:21">did_split</name></expr>)</condition> <block pos:start="125:24" pos:end="133:9">{<block_content pos:start="127:13" pos:end="131:34">

            <expr_stmt pos:start="127:13" pos:end="127:43"><expr pos:start="127:13" pos:end="127:42"><call pos:start="127:13" pos:end="127:42"><name pos:start="127:13" pos:end="127:36">ff_packet_free_side_data</name><argument_list pos:start="127:37" pos:end="127:42">(<argument pos:start="127:38" pos:end="127:41"><expr pos:start="127:38" pos:end="127:41"><operator pos:start="127:38" pos:end="127:38">&amp;</operator><name pos:start="127:39" pos:end="127:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="129:13" pos:end="131:34"><if pos:start="129:13" pos:end="131:34">if<condition pos:start="129:15" pos:end="129:31">(<expr pos:start="129:16" pos:end="129:30"><name pos:start="129:16" pos:end="129:18">ret</name> <operator pos:start="129:20" pos:end="129:21">==</operator> <name pos:start="129:23" pos:end="129:30"><name pos:start="129:23" pos:end="129:25">tmp</name><operator pos:start="129:26" pos:end="129:26">.</operator><name pos:start="129:27" pos:end="129:30">size</name></name></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:34"><block_content pos:start="131:17" pos:end="131:34">

                <expr_stmt pos:start="131:17" pos:end="131:34"><expr pos:start="131:17" pos:end="131:33"><name pos:start="131:17" pos:end="131:19">ret</name> <operator pos:start="131:21" pos:end="131:21">=</operator> <name pos:start="131:23" pos:end="131:33"><name pos:start="131:23" pos:end="131:27">avpkt</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:33">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="137:9" pos:end="139:34"><if pos:start="137:9" pos:end="139:34">if <condition pos:start="137:12" pos:end="137:25">(<expr pos:start="137:13" pos:end="137:24"><operator pos:start="137:13" pos:end="137:13">*</operator><name pos:start="137:14" pos:end="137:24">got_sub_ptr</name></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:34"><block_content pos:start="139:13" pos:end="139:34">

            <expr_stmt pos:start="139:13" pos:end="139:34"><expr pos:start="139:13" pos:end="139:33"><name pos:start="139:13" pos:end="139:31"><name pos:start="139:13" pos:end="139:17">avctx</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:31">frame_number</name></name><operator pos:start="139:32" pos:end="139:33">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="145:5" pos:end="145:15">return <expr pos:start="145:12" pos:end="145:14"><name pos:start="145:12" pos:end="145:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
