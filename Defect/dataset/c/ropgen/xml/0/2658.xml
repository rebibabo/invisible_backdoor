<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2658.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_rv34_decode_frame</name><parameter_list pos:start="1:25" pos:end="5:44">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:43"><decl pos:start="5:29" pos:end="5:43"><type pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:36">AVPacket</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:43">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="201:1">{<block_content pos:start="9:5" pos:end="199:23">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:40"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">RV34DecContext</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:21">r</name> <init pos:start="13:23" pos:end="13:40">= <expr pos:start="13:25" pos:end="13:40"><name pos:start="13:25" pos:end="13:40"><name pos:start="13:25" pos:end="13:29">avctx</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">MpegEncContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:21">s</name> <init pos:start="15:23" pos:end="15:29">= <expr pos:start="15:25" pos:end="15:29"><operator pos:start="15:25" pos:end="15:25">&amp;</operator><name pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:26">r</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:17">pict</name> <init pos:start="17:19" pos:end="17:24">= <expr pos:start="17:21" pos:end="17:24"><name pos:start="17:21" pos:end="17:24">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:13">SliceInfo</name></type> <name pos:start="19:15" pos:end="19:16">si</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:10"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:20"><decl pos:start="23:5" pos:end="23:19"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:19">slice_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:37"><decl pos:start="25:5" pos:end="25:36"><type pos:start="25:5" pos:end="25:19"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:17">uint8_t</name> <modifier pos:start="25:19" pos:end="25:19">*</modifier></type><name pos:start="25:20" pos:end="25:29">slices_hdr</name> <init pos:start="25:31" pos:end="25:36">= <expr pos:start="25:33" pos:end="25:36"><name pos:start="25:33" pos:end="25:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:17"><decl pos:start="27:5" pos:end="27:16"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:12">last</name> <init pos:start="27:14" pos:end="27:16">= <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:34">/* no supplementary picture */</comment>

    <if_stmt pos:start="33:5" pos:end="51:5"><if pos:start="33:5" pos:end="51:5">if <condition pos:start="33:8" pos:end="33:22">(<expr pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:16">buf_size</name> <operator pos:start="33:18" pos:end="33:19">==</operator> <literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr>)</condition> <block pos:start="33:24" pos:end="51:5">{<block_content pos:start="37:9" pos:end="49:17">

        <comment type="block" pos:start="35:9" pos:end="35:43">/* special case for last picture */</comment>

        <if_stmt pos:start="37:9" pos:end="47:9"><if pos:start="37:9" pos:end="47:9">if <condition pos:start="37:12" pos:end="37:51">(<expr pos:start="37:13" pos:end="37:50"><name pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:24">low_delay</name></name><operator pos:start="37:25" pos:end="37:26">==</operator><literal type="number" pos:start="37:27" pos:end="37:27">0</literal> <operator pos:start="37:29" pos:end="37:30">&amp;&amp;</operator> <name pos:start="37:32" pos:end="37:50"><name pos:start="37:32" pos:end="37:32">s</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:50">next_picture_ptr</name></name></expr>)</condition> <block pos:start="37:53" pos:end="47:9">{<block_content pos:start="39:13" pos:end="45:41">

            <expr_stmt pos:start="39:13" pos:end="39:51"><expr pos:start="39:13" pos:end="39:50"><operator pos:start="39:13" pos:end="39:13">*</operator><name pos:start="39:14" pos:end="39:17">pict</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <operator pos:start="39:21" pos:end="39:21">*</operator><operator pos:start="39:22" pos:end="39:22">(</operator><name pos:start="39:23" pos:end="39:29">AVFrame</name><operator pos:start="39:30" pos:end="39:30">*</operator><operator pos:start="39:31" pos:end="39:31">)</operator><name pos:start="39:32" pos:end="39:50"><name pos:start="39:32" pos:end="39:32">s</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:50">next_picture_ptr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:39"><expr pos:start="41:13" pos:end="41:38"><name pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:31">next_picture_ptr</name></name> <operator pos:start="41:33" pos:end="41:33">=</operator> <name pos:start="41:35" pos:end="41:38">NULL</name></expr>;</expr_stmt>



            <expr_stmt pos:start="45:13" pos:end="45:41"><expr pos:start="45:13" pos:end="45:40"><operator pos:start="45:13" pos:end="45:13">*</operator><name pos:start="45:14" pos:end="45:22">data_size</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <sizeof pos:start="45:26" pos:end="45:40">sizeof<argument_list pos:start="45:32" pos:end="45:40">(<argument pos:start="45:33" pos:end="45:39"><expr pos:start="45:33" pos:end="45:39"><name pos:start="45:33" pos:end="45:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="67:41"><if pos:start="55:5" pos:end="65:5">if<condition pos:start="55:7" pos:end="55:27">(<expr pos:start="55:8" pos:end="55:26"><operator pos:start="55:8" pos:end="55:8">!</operator><name pos:start="55:9" pos:end="55:26"><name pos:start="55:9" pos:end="55:13">avctx</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:26">slice_count</name></name></expr>)</condition><block pos:start="55:28" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:40">

        <expr_stmt pos:start="57:9" pos:end="57:35"><expr pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:19">slice_count</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <operator pos:start="57:23" pos:end="57:23">(</operator><operator pos:start="57:24" pos:end="57:24">*</operator><name pos:start="57:25" pos:end="57:27">buf</name><operator pos:start="57:28" pos:end="57:29">++</operator><operator pos:start="57:30" pos:end="57:30">)</operator> <operator pos:start="57:32" pos:end="57:32">+</operator> <literal type="number" pos:start="57:34" pos:end="57:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:18">slices_hdr</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:24">buf</name> <operator pos:start="59:26" pos:end="59:26">+</operator> <literal type="number" pos:start="59:28" pos:end="59:28">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:11">buf</name> <operator pos:start="61:13" pos:end="61:14">+=</operator> <literal type="number" pos:start="61:16" pos:end="61:16">8</literal> <operator pos:start="61:18" pos:end="61:18">*</operator> <name pos:start="61:20" pos:end="61:30">slice_count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:40"><expr pos:start="63:9" pos:end="63:39"><name pos:start="63:9" pos:end="63:16">buf_size</name> <operator pos:start="63:18" pos:end="63:19">-=</operator> <literal type="number" pos:start="63:21" pos:end="63:23">1</literal> <operator pos:start="63:23" pos:end="63:23">+</operator> <literal type="number" pos:start="63:25" pos:end="63:25">8</literal> <operator pos:start="63:27" pos:end="63:27">*</operator> <name pos:start="63:29" pos:end="63:39">slice_count</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="65:6" pos:end="67:41">else<block type="pseudo" pos:start="67:9" pos:end="67:41"><block_content pos:start="67:9" pos:end="67:41">

        <expr_stmt pos:start="67:9" pos:end="67:41"><expr pos:start="67:9" pos:end="67:40"><name pos:start="67:9" pos:end="67:19">slice_count</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <name pos:start="67:23" pos:end="67:40"><name pos:start="67:23" pos:end="67:27">avctx</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:40">slice_count</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="line" pos:start="71:5" pos:end="71:73">//parse first slice header to check whether this frame can be decoded</comment>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if<condition pos:start="73:7" pos:end="73:57">(<expr pos:start="73:8" pos:end="73:56"><call pos:start="73:8" pos:end="73:45"><name pos:start="73:8" pos:end="73:23">get_slice_offset</name><argument_list pos:start="73:24" pos:end="73:45">(<argument pos:start="73:25" pos:end="73:29"><expr pos:start="73:25" pos:end="73:29"><name pos:start="73:25" pos:end="73:29">avctx</name></expr></argument>, <argument pos:start="73:32" pos:end="73:41"><expr pos:start="73:32" pos:end="73:41"><name pos:start="73:32" pos:end="73:41">slices_hdr</name></expr></argument>, <argument pos:start="73:44" pos:end="73:44"><expr pos:start="73:44" pos:end="73:44"><literal type="number" pos:start="73:44" pos:end="73:44">0</literal></expr></argument>)</argument_list></call> <operator pos:start="73:47" pos:end="73:47">&gt;</operator> <name pos:start="73:49" pos:end="73:56">buf_size</name></expr>)</condition><block pos:start="73:58" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:18">

        <expr_stmt pos:start="75:9" pos:end="75:81"><expr pos:start="75:9" pos:end="75:80"><call pos:start="75:9" pos:end="75:80"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="75:80">(<argument pos:start="75:16" pos:end="75:20"><expr pos:start="75:16" pos:end="75:20"><name pos:start="75:16" pos:end="75:20">avctx</name></expr></argument>, <argument pos:start="75:23" pos:end="75:34"><expr pos:start="75:23" pos:end="75:34"><name pos:start="75:23" pos:end="75:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:37" pos:end="75:79"><expr pos:start="75:37" pos:end="75:79"><literal type="string" pos:start="75:37" pos:end="75:79">"Slice offset is greater than frame size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:18">return <expr pos:start="77:16" pos:end="77:17"><operator pos:start="77:16" pos:end="77:16">-</operator><literal type="number" pos:start="77:17" pos:end="77:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:123"><expr pos:start="81:5" pos:end="81:122"><call pos:start="81:5" pos:end="81:122"><name pos:start="81:5" pos:end="81:17">init_get_bits</name><argument_list pos:start="81:18" pos:end="81:122">(<argument pos:start="81:19" pos:end="81:24"><expr pos:start="81:19" pos:end="81:24"><operator pos:start="81:19" pos:end="81:19">&amp;</operator><name pos:start="81:20" pos:end="81:24"><name pos:start="81:20" pos:end="81:20">s</name><operator pos:start="81:21" pos:end="81:22">-&gt;</operator><name pos:start="81:23" pos:end="81:24">gb</name></name></expr></argument>, <argument pos:start="81:27" pos:end="81:68"><expr pos:start="81:27" pos:end="81:68"><name pos:start="81:27" pos:end="81:29">buf</name><operator pos:start="81:30" pos:end="81:30">+</operator><call pos:start="81:31" pos:end="81:68"><name pos:start="81:31" pos:end="81:46">get_slice_offset</name><argument_list pos:start="81:47" pos:end="81:68">(<argument pos:start="81:48" pos:end="81:52"><expr pos:start="81:48" pos:end="81:52"><name pos:start="81:48" pos:end="81:52">avctx</name></expr></argument>, <argument pos:start="81:55" pos:end="81:64"><expr pos:start="81:55" pos:end="81:64"><name pos:start="81:55" pos:end="81:64">slices_hdr</name></expr></argument>, <argument pos:start="81:67" pos:end="81:67"><expr pos:start="81:67" pos:end="81:67"><literal type="number" pos:start="81:67" pos:end="81:67">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="81:71" pos:end="81:121"><expr pos:start="81:71" pos:end="81:121"><operator pos:start="81:71" pos:end="81:71">(</operator><name pos:start="81:72" pos:end="81:79">buf_size</name><operator pos:start="81:80" pos:end="81:80">-</operator><call pos:start="81:81" pos:end="81:118"><name pos:start="81:81" pos:end="81:96">get_slice_offset</name><argument_list pos:start="81:97" pos:end="81:118">(<argument pos:start="81:98" pos:end="81:102"><expr pos:start="81:98" pos:end="81:102"><name pos:start="81:98" pos:end="81:102">avctx</name></expr></argument>, <argument pos:start="81:105" pos:end="81:114"><expr pos:start="81:105" pos:end="81:114"><name pos:start="81:105" pos:end="81:114">slices_hdr</name></expr></argument>, <argument pos:start="81:117" pos:end="81:117"><expr pos:start="81:117" pos:end="81:117"><literal type="number" pos:start="81:117" pos:end="81:117">0</literal></expr></argument>)</argument_list></call><operator pos:start="81:119" pos:end="81:119">)</operator><operator pos:start="81:120" pos:end="81:120">*</operator><literal type="number" pos:start="81:121" pos:end="81:121">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if<condition pos:start="83:7" pos:end="83:63">(<expr pos:start="83:8" pos:end="83:62"><call pos:start="83:8" pos:end="83:46"><name pos:start="83:8" pos:end="83:28"><name pos:start="83:8" pos:end="83:8">r</name><operator pos:start="83:9" pos:end="83:10">-&gt;</operator><name pos:start="83:11" pos:end="83:28">parse_slice_header</name></name><argument_list pos:start="83:29" pos:end="83:46">(<argument pos:start="83:30" pos:end="83:30"><expr pos:start="83:30" pos:end="83:30"><name pos:start="83:30" pos:end="83:30">r</name></expr></argument>, <argument pos:start="83:33" pos:end="83:40"><expr pos:start="83:33" pos:end="83:40"><operator pos:start="83:33" pos:end="83:33">&amp;</operator><name pos:start="83:34" pos:end="83:40"><name pos:start="83:34" pos:end="83:34">r</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:37">s</name><operator pos:start="83:38" pos:end="83:38">.</operator><name pos:start="83:39" pos:end="83:40">gb</name></name></expr></argument>, <argument pos:start="83:43" pos:end="83:45"><expr pos:start="83:43" pos:end="83:45"><operator pos:start="83:43" pos:end="83:43">&amp;</operator><name pos:start="83:44" pos:end="83:45">si</name></expr></argument>)</argument_list></call> <operator pos:start="83:48" pos:end="83:48">&lt;</operator> <literal type="number" pos:start="83:50" pos:end="83:50">0</literal> <operator pos:start="83:52" pos:end="83:53">||</operator> <name pos:start="83:55" pos:end="83:62"><name pos:start="83:55" pos:end="83:56">si</name><operator pos:start="83:57" pos:end="83:57">.</operator><name pos:start="83:58" pos:end="83:62">start</name></name></expr>)</condition><block pos:start="83:64" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:18">

        <expr_stmt pos:start="85:9" pos:end="85:73"><expr pos:start="85:9" pos:end="85:72"><call pos:start="85:9" pos:end="85:72"><name pos:start="85:9" pos:end="85:14">av_log</name><argument_list pos:start="85:15" pos:end="85:72">(<argument pos:start="85:16" pos:end="85:20"><expr pos:start="85:16" pos:end="85:20"><name pos:start="85:16" pos:end="85:20">avctx</name></expr></argument>, <argument pos:start="85:23" pos:end="85:34"><expr pos:start="85:23" pos:end="85:34"><name pos:start="85:23" pos:end="85:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:37" pos:end="85:71"><expr pos:start="85:37" pos:end="85:71"><literal type="string" pos:start="85:37" pos:end="85:71">"First slice header is incorrect\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:18">return <expr pos:start="87:16" pos:end="87:17"><operator pos:start="87:16" pos:end="87:16">-</operator><literal type="number" pos:start="87:17" pos:end="87:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="93:18"><if pos:start="91:5" pos:end="93:18">if <condition pos:start="91:8" pos:end="91:98">(<expr pos:start="91:9" pos:end="91:97"><operator pos:start="91:9" pos:end="91:9">(</operator><operator pos:start="91:10" pos:end="91:10">!</operator><name pos:start="91:11" pos:end="91:29"><name pos:start="91:11" pos:end="91:11">s</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:29">last_picture_ptr</name></name> <operator pos:start="91:31" pos:end="91:32">||</operator> <operator pos:start="91:34" pos:end="91:34">!</operator><name pos:start="91:35" pos:end="91:64"><name pos:start="91:35" pos:end="91:35">s</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:53">last_picture_ptr</name><operator pos:start="91:54" pos:end="91:55">-&gt;</operator><name pos:start="91:56" pos:end="91:56">f</name><operator pos:start="91:57" pos:end="91:57">.</operator><name pos:start="91:58" pos:end="91:61">data</name><index pos:start="91:62" pos:end="91:64">[<expr pos:start="91:63" pos:end="91:63"><literal type="number" pos:start="91:63" pos:end="91:63">0</literal></expr>]</index></name><operator pos:start="91:65" pos:end="91:65">)</operator> <operator pos:start="91:67" pos:end="91:68">&amp;&amp;</operator> <name pos:start="91:70" pos:end="91:76"><name pos:start="91:70" pos:end="91:71">si</name><operator pos:start="91:72" pos:end="91:72">.</operator><name pos:start="91:73" pos:end="91:76">type</name></name> <operator pos:start="91:78" pos:end="91:79">==</operator> <name pos:start="91:81" pos:end="91:97">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:18"><block_content pos:start="93:9" pos:end="93:18">

        <return pos:start="93:9" pos:end="93:18">return <expr pos:start="93:16" pos:end="93:17"><operator pos:start="93:16" pos:end="93:16">-</operator><literal type="number" pos:start="93:17" pos:end="93:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="95:5" pos:end="101:27"><if pos:start="95:5" pos:end="101:27">if<condition pos:start="95:7" pos:end="99:46">(   <expr pos:start="95:11" pos:end="99:45"><operator pos:start="95:11" pos:end="95:11">(</operator><name pos:start="95:12" pos:end="95:28"><name pos:start="95:12" pos:end="95:16">avctx</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:28">skip_frame</name></name> <operator pos:start="95:30" pos:end="95:31">&gt;=</operator> <name pos:start="95:33" pos:end="95:48">AVDISCARD_NONREF</name> <operator pos:start="95:50" pos:end="95:51">&amp;&amp;</operator> <name pos:start="95:53" pos:end="95:59"><name pos:start="95:53" pos:end="95:54">si</name><operator pos:start="95:55" pos:end="95:55">.</operator><name pos:start="95:56" pos:end="95:59">type</name></name><operator pos:start="95:60" pos:end="95:61">==</operator><name pos:start="95:62" pos:end="95:78">AV_PICTURE_TYPE_B</name><operator pos:start="95:79" pos:end="95:79">)</operator>

       <operator pos:start="97:8" pos:end="97:9">||</operator> <operator pos:start="97:11" pos:end="97:11">(</operator><name pos:start="97:12" pos:end="97:28"><name pos:start="97:12" pos:end="97:16">avctx</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:28">skip_frame</name></name> <operator pos:start="97:30" pos:end="97:31">&gt;=</operator> <name pos:start="97:33" pos:end="97:48">AVDISCARD_NONKEY</name> <operator pos:start="97:50" pos:end="97:51">&amp;&amp;</operator> <name pos:start="97:53" pos:end="97:59"><name pos:start="97:53" pos:end="97:54">si</name><operator pos:start="97:55" pos:end="97:55">.</operator><name pos:start="97:56" pos:end="97:59">type</name></name><operator pos:start="97:60" pos:end="97:61">!=</operator><name pos:start="97:62" pos:end="97:78">AV_PICTURE_TYPE_I</name><operator pos:start="97:79" pos:end="97:79">)</operator>

       <operator pos:start="99:8" pos:end="99:9">||</operator>  <name pos:start="99:12" pos:end="99:28"><name pos:start="99:12" pos:end="99:16">avctx</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:28">skip_frame</name></name> <operator pos:start="99:30" pos:end="99:31">&gt;=</operator> <name pos:start="99:33" pos:end="99:45">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:27"><block_content pos:start="101:9" pos:end="101:27">

        <return pos:start="101:9" pos:end="101:27">return <expr pos:start="101:16" pos:end="101:26"><name pos:start="101:16" pos:end="101:26"><name pos:start="101:16" pos:end="101:20">avpkt</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:26">size</name></name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="105:5" pos:end="161:5">for<control pos:start="105:8" pos:end="105:36">(<init pos:start="105:9" pos:end="105:14"><expr pos:start="105:9" pos:end="105:13"><name pos:start="105:9" pos:end="105:9">i</name> <operator pos:start="105:11" pos:end="105:11">=</operator> <literal type="number" pos:start="105:13" pos:end="105:13">0</literal></expr>;</init> <condition pos:start="105:16" pos:end="105:31"><expr pos:start="105:16" pos:end="105:30"><name pos:start="105:16" pos:end="105:16">i</name> <operator pos:start="105:18" pos:end="105:18">&lt;</operator> <name pos:start="105:20" pos:end="105:30">slice_count</name></expr>;</condition> <incr pos:start="105:33" pos:end="105:35"><expr pos:start="105:33" pos:end="105:35"><name pos:start="105:33" pos:end="105:33">i</name><operator pos:start="105:34" pos:end="105:35">++</operator></expr></incr>)</control><block pos:start="105:37" pos:end="161:5">{<block_content pos:start="107:9" pos:end="159:18">

        <decl_stmt pos:start="107:9" pos:end="107:60"><decl pos:start="107:9" pos:end="107:59"><type pos:start="107:9" pos:end="107:11"><name pos:start="107:9" pos:end="107:11">int</name></type> <name pos:start="107:13" pos:end="107:18">offset</name> <init pos:start="107:20" pos:end="107:59">= <expr pos:start="107:22" pos:end="107:59"><call pos:start="107:22" pos:end="107:59"><name pos:start="107:22" pos:end="107:37">get_slice_offset</name><argument_list pos:start="107:38" pos:end="107:59">(<argument pos:start="107:39" pos:end="107:43"><expr pos:start="107:39" pos:end="107:43"><name pos:start="107:39" pos:end="107:43">avctx</name></expr></argument>, <argument pos:start="107:46" pos:end="107:55"><expr pos:start="107:46" pos:end="107:55"><name pos:start="107:46" pos:end="107:55">slices_hdr</name></expr></argument>, <argument pos:start="107:58" pos:end="107:58"><expr pos:start="107:58" pos:end="107:58"><name pos:start="107:58" pos:end="107:58">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="109:9" pos:end="109:17"><decl pos:start="109:9" pos:end="109:16"><type pos:start="109:9" pos:end="109:11"><name pos:start="109:9" pos:end="109:11">int</name></type> <name pos:start="109:13" pos:end="109:16">size</name></decl>;</decl_stmt>

        <if_stmt pos:start="111:9" pos:end="117:69"><if pos:start="111:9" pos:end="113:37">if<condition pos:start="111:11" pos:end="111:30">(<expr pos:start="111:12" pos:end="111:29"><name pos:start="111:12" pos:end="111:12">i</name><operator pos:start="111:13" pos:end="111:13">+</operator><literal type="number" pos:start="111:14" pos:end="111:14">1</literal> <operator pos:start="111:16" pos:end="111:17">==</operator> <name pos:start="111:19" pos:end="111:29">slice_count</name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:37"><block_content pos:start="113:13" pos:end="113:37">

            <expr_stmt pos:start="113:13" pos:end="113:37"><expr pos:start="113:13" pos:end="113:36"><name pos:start="113:13" pos:end="113:16">size</name> <operator pos:start="113:18" pos:end="113:18">=</operator> <name pos:start="113:20" pos:end="113:27">buf_size</name> <operator pos:start="113:29" pos:end="113:29">-</operator> <name pos:start="113:31" pos:end="113:36">offset</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="115:9" pos:end="117:69">else<block type="pseudo" pos:start="117:13" pos:end="117:69"><block_content pos:start="117:13" pos:end="117:69">

            <expr_stmt pos:start="117:13" pos:end="117:69"><expr pos:start="117:13" pos:end="117:68"><name pos:start="117:13" pos:end="117:16">size</name> <operator pos:start="117:18" pos:end="117:18">=</operator> <call pos:start="117:20" pos:end="117:59"><name pos:start="117:20" pos:end="117:35">get_slice_offset</name><argument_list pos:start="117:36" pos:end="117:59">(<argument pos:start="117:37" pos:end="117:41"><expr pos:start="117:37" pos:end="117:41"><name pos:start="117:37" pos:end="117:41">avctx</name></expr></argument>, <argument pos:start="117:44" pos:end="117:53"><expr pos:start="117:44" pos:end="117:53"><name pos:start="117:44" pos:end="117:53">slices_hdr</name></expr></argument>, <argument pos:start="117:56" pos:end="117:58"><expr pos:start="117:56" pos:end="117:58"><name pos:start="117:56" pos:end="117:56">i</name><operator pos:start="117:57" pos:end="117:57">+</operator><literal type="number" pos:start="117:58" pos:end="117:58">1</literal></expr></argument>)</argument_list></call> <operator pos:start="117:61" pos:end="117:61">-</operator> <name pos:start="117:63" pos:end="117:68">offset</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="121:9" pos:end="127:9"><if pos:start="121:9" pos:end="127:9">if<condition pos:start="121:11" pos:end="121:29">(<expr pos:start="121:12" pos:end="121:28"><name pos:start="121:12" pos:end="121:17">offset</name> <operator pos:start="121:19" pos:end="121:19">&gt;</operator> <name pos:start="121:21" pos:end="121:28">buf_size</name></expr>)</condition><block pos:start="121:30" pos:end="127:9">{<block_content pos:start="123:13" pos:end="125:18">

            <expr_stmt pos:start="123:13" pos:end="123:85"><expr pos:start="123:13" pos:end="123:84"><call pos:start="123:13" pos:end="123:84"><name pos:start="123:13" pos:end="123:18">av_log</name><argument_list pos:start="123:19" pos:end="123:84">(<argument pos:start="123:20" pos:end="123:24"><expr pos:start="123:20" pos:end="123:24"><name pos:start="123:20" pos:end="123:24">avctx</name></expr></argument>, <argument pos:start="123:27" pos:end="123:38"><expr pos:start="123:27" pos:end="123:38"><name pos:start="123:27" pos:end="123:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="123:41" pos:end="123:83"><expr pos:start="123:41" pos:end="123:83"><literal type="string" pos:start="123:41" pos:end="123:83">"Slice offset is greater than frame size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="125:13" pos:end="125:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="131:9" pos:end="131:47"><expr pos:start="131:9" pos:end="131:46"><name pos:start="131:9" pos:end="131:17"><name pos:start="131:9" pos:end="131:9">r</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:13">si</name><operator pos:start="131:14" pos:end="131:14">.</operator><name pos:start="131:15" pos:end="131:17">end</name></name> <operator pos:start="131:19" pos:end="131:19">=</operator> <name pos:start="131:21" pos:end="131:31"><name pos:start="131:21" pos:end="131:21">s</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:31">mb_width</name></name> <operator pos:start="131:33" pos:end="131:33">*</operator> <name pos:start="131:35" pos:end="131:46"><name pos:start="131:35" pos:end="131:35">s</name><operator pos:start="131:36" pos:end="131:37">-&gt;</operator><name pos:start="131:38" pos:end="131:46">mb_height</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="133:9" pos:end="151:9"><if pos:start="133:9" pos:end="151:9">if<condition pos:start="133:11" pos:end="133:29">(<expr pos:start="133:12" pos:end="133:28"><name pos:start="133:12" pos:end="133:12">i</name><operator pos:start="133:13" pos:end="133:13">+</operator><literal type="number" pos:start="133:14" pos:end="133:14">1</literal> <operator pos:start="133:16" pos:end="133:16">&lt;</operator> <name pos:start="133:18" pos:end="133:28">slice_count</name></expr>)</condition><block pos:start="133:30" pos:end="151:9">{<block_content pos:start="135:13" pos:end="149:37">

            <expr_stmt pos:start="135:13" pos:end="135:135"><expr pos:start="135:13" pos:end="135:134"><call pos:start="135:13" pos:end="135:134"><name pos:start="135:13" pos:end="135:25">init_get_bits</name><argument_list pos:start="135:26" pos:end="135:134">(<argument pos:start="135:27" pos:end="135:32"><expr pos:start="135:27" pos:end="135:32"><operator pos:start="135:27" pos:end="135:27">&amp;</operator><name pos:start="135:28" pos:end="135:32"><name pos:start="135:28" pos:end="135:28">s</name><operator pos:start="135:29" pos:end="135:30">-&gt;</operator><name pos:start="135:31" pos:end="135:32">gb</name></name></expr></argument>, <argument pos:start="135:35" pos:end="135:78"><expr pos:start="135:35" pos:end="135:78"><name pos:start="135:35" pos:end="135:37">buf</name><operator pos:start="135:38" pos:end="135:38">+</operator><call pos:start="135:39" pos:end="135:78"><name pos:start="135:39" pos:end="135:54">get_slice_offset</name><argument_list pos:start="135:55" pos:end="135:78">(<argument pos:start="135:56" pos:end="135:60"><expr pos:start="135:56" pos:end="135:60"><name pos:start="135:56" pos:end="135:60">avctx</name></expr></argument>, <argument pos:start="135:63" pos:end="135:72"><expr pos:start="135:63" pos:end="135:72"><name pos:start="135:63" pos:end="135:72">slices_hdr</name></expr></argument>, <argument pos:start="135:75" pos:end="135:77"><expr pos:start="135:75" pos:end="135:77"><name pos:start="135:75" pos:end="135:75">i</name><operator pos:start="135:76" pos:end="135:76">+</operator><literal type="number" pos:start="135:77" pos:end="135:77">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="135:81" pos:end="135:133"><expr pos:start="135:81" pos:end="135:133"><operator pos:start="135:81" pos:end="135:81">(</operator><name pos:start="135:82" pos:end="135:89">buf_size</name><operator pos:start="135:90" pos:end="135:90">-</operator><call pos:start="135:91" pos:end="135:130"><name pos:start="135:91" pos:end="135:106">get_slice_offset</name><argument_list pos:start="135:107" pos:end="135:130">(<argument pos:start="135:108" pos:end="135:112"><expr pos:start="135:108" pos:end="135:112"><name pos:start="135:108" pos:end="135:112">avctx</name></expr></argument>, <argument pos:start="135:115" pos:end="135:124"><expr pos:start="135:115" pos:end="135:124"><name pos:start="135:115" pos:end="135:124">slices_hdr</name></expr></argument>, <argument pos:start="135:127" pos:end="135:129"><expr pos:start="135:127" pos:end="135:129"><name pos:start="135:127" pos:end="135:127">i</name><operator pos:start="135:128" pos:end="135:128">+</operator><literal type="number" pos:start="135:129" pos:end="135:129">1</literal></expr></argument>)</argument_list></call><operator pos:start="135:131" pos:end="135:131">)</operator><operator pos:start="135:132" pos:end="135:132">*</operator><literal type="number" pos:start="135:133" pos:end="135:133">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="137:13" pos:end="149:37"><if pos:start="137:13" pos:end="147:13">if<condition pos:start="137:15" pos:end="137:59">(<expr pos:start="137:16" pos:end="137:58"><call pos:start="137:16" pos:end="137:54"><name pos:start="137:16" pos:end="137:36"><name pos:start="137:16" pos:end="137:16">r</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:36">parse_slice_header</name></name><argument_list pos:start="137:37" pos:end="137:54">(<argument pos:start="137:38" pos:end="137:38"><expr pos:start="137:38" pos:end="137:38"><name pos:start="137:38" pos:end="137:38">r</name></expr></argument>, <argument pos:start="137:41" pos:end="137:48"><expr pos:start="137:41" pos:end="137:48"><operator pos:start="137:41" pos:end="137:41">&amp;</operator><name pos:start="137:42" pos:end="137:48"><name pos:start="137:42" pos:end="137:42">r</name><operator pos:start="137:43" pos:end="137:44">-&gt;</operator><name pos:start="137:45" pos:end="137:45">s</name><operator pos:start="137:46" pos:end="137:46">.</operator><name pos:start="137:47" pos:end="137:48">gb</name></name></expr></argument>, <argument pos:start="137:51" pos:end="137:53"><expr pos:start="137:51" pos:end="137:53"><operator pos:start="137:51" pos:end="137:51">&amp;</operator><name pos:start="137:52" pos:end="137:53">si</name></expr></argument>)</argument_list></call> <operator pos:start="137:56" pos:end="137:56">&lt;</operator> <literal type="number" pos:start="137:58" pos:end="137:58">0</literal></expr>)</condition><block pos:start="137:60" pos:end="147:13">{<block_content pos:start="139:17" pos:end="145:45">

                <if_stmt pos:start="139:17" pos:end="145:45"><if pos:start="139:17" pos:end="141:77">if<condition pos:start="139:19" pos:end="139:37">(<expr pos:start="139:20" pos:end="139:36"><name pos:start="139:20" pos:end="139:20">i</name><operator pos:start="139:21" pos:end="139:21">+</operator><literal type="number" pos:start="139:22" pos:end="139:22">2</literal> <operator pos:start="139:24" pos:end="139:24">&lt;</operator> <name pos:start="139:26" pos:end="139:36">slice_count</name></expr>)</condition><block type="pseudo" pos:start="141:21" pos:end="141:77"><block_content pos:start="141:21" pos:end="141:77">

                    <expr_stmt pos:start="141:21" pos:end="141:77"><expr pos:start="141:21" pos:end="141:76"><name pos:start="141:21" pos:end="141:24">size</name> <operator pos:start="141:26" pos:end="141:26">=</operator> <call pos:start="141:28" pos:end="141:67"><name pos:start="141:28" pos:end="141:43">get_slice_offset</name><argument_list pos:start="141:44" pos:end="141:67">(<argument pos:start="141:45" pos:end="141:49"><expr pos:start="141:45" pos:end="141:49"><name pos:start="141:45" pos:end="141:49">avctx</name></expr></argument>, <argument pos:start="141:52" pos:end="141:61"><expr pos:start="141:52" pos:end="141:61"><name pos:start="141:52" pos:end="141:61">slices_hdr</name></expr></argument>, <argument pos:start="141:64" pos:end="141:66"><expr pos:start="141:64" pos:end="141:66"><name pos:start="141:64" pos:end="141:64">i</name><operator pos:start="141:65" pos:end="141:65">+</operator><literal type="number" pos:start="141:66" pos:end="141:66">2</literal></expr></argument>)</argument_list></call> <operator pos:start="141:69" pos:end="141:69">-</operator> <name pos:start="141:71" pos:end="141:76">offset</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="143:17" pos:end="145:45">else<block type="pseudo" pos:start="145:21" pos:end="145:45"><block_content pos:start="145:21" pos:end="145:45">

                    <expr_stmt pos:start="145:21" pos:end="145:45"><expr pos:start="145:21" pos:end="145:44"><name pos:start="145:21" pos:end="145:24">size</name> <operator pos:start="145:26" pos:end="145:26">=</operator> <name pos:start="145:28" pos:end="145:35">buf_size</name> <operator pos:start="145:37" pos:end="145:37">-</operator> <name pos:start="145:39" pos:end="145:44">offset</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if><else pos:start="147:14" pos:end="149:37">else<block type="pseudo" pos:start="149:17" pos:end="149:37"><block_content pos:start="149:17" pos:end="149:37">

                <expr_stmt pos:start="149:17" pos:end="149:37"><expr pos:start="149:17" pos:end="149:36"><name pos:start="149:17" pos:end="149:25"><name pos:start="149:17" pos:end="149:17">r</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:21">si</name><operator pos:start="149:22" pos:end="149:22">.</operator><name pos:start="149:23" pos:end="149:25">end</name></name> <operator pos:start="149:27" pos:end="149:27">=</operator> <name pos:start="149:29" pos:end="149:36"><name pos:start="149:29" pos:end="149:30">si</name><operator pos:start="149:31" pos:end="149:31">.</operator><name pos:start="149:32" pos:end="149:36">start</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:67"><expr pos:start="153:9" pos:end="153:66"><name pos:start="153:9" pos:end="153:12">last</name> <operator pos:start="153:14" pos:end="153:14">=</operator> <call pos:start="153:16" pos:end="153:66"><name pos:start="153:16" pos:end="153:32">rv34_decode_slice</name><argument_list pos:start="153:33" pos:end="153:66">(<argument pos:start="153:34" pos:end="153:34"><expr pos:start="153:34" pos:end="153:34"><name pos:start="153:34" pos:end="153:34">r</name></expr></argument>, <argument pos:start="153:37" pos:end="153:45"><expr pos:start="153:37" pos:end="153:45"><name pos:start="153:37" pos:end="153:45"><name pos:start="153:37" pos:end="153:37">r</name><operator pos:start="153:38" pos:end="153:39">-&gt;</operator><name pos:start="153:40" pos:end="153:41">si</name><operator pos:start="153:42" pos:end="153:42">.</operator><name pos:start="153:43" pos:end="153:45">end</name></name></expr></argument>, <argument pos:start="153:48" pos:end="153:59"><expr pos:start="153:48" pos:end="153:59"><name pos:start="153:48" pos:end="153:50">buf</name> <operator pos:start="153:52" pos:end="153:52">+</operator> <name pos:start="153:54" pos:end="153:59">offset</name></expr></argument>, <argument pos:start="153:62" pos:end="153:65"><expr pos:start="153:62" pos:end="153:65"><name pos:start="153:62" pos:end="153:65">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:75"><expr pos:start="155:9" pos:end="155:74"><name pos:start="155:9" pos:end="155:22"><name pos:start="155:9" pos:end="155:9">s</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:22">mb_num_left</name></name> <operator pos:start="155:24" pos:end="155:24">=</operator> <name pos:start="155:26" pos:end="155:34"><name pos:start="155:26" pos:end="155:26">r</name><operator pos:start="155:27" pos:end="155:28">-&gt;</operator><name pos:start="155:29" pos:end="155:29">s</name><operator pos:start="155:30" pos:end="155:30">.</operator><name pos:start="155:31" pos:end="155:34">mb_x</name></name> <operator pos:start="155:36" pos:end="155:36">+</operator> <name pos:start="155:38" pos:end="155:46"><name pos:start="155:38" pos:end="155:38">r</name><operator pos:start="155:39" pos:end="155:40">-&gt;</operator><name pos:start="155:41" pos:end="155:41">s</name><operator pos:start="155:42" pos:end="155:42">.</operator><name pos:start="155:43" pos:end="155:46">mb_y</name></name><operator pos:start="155:47" pos:end="155:47">*</operator><name pos:start="155:48" pos:end="155:60"><name pos:start="155:48" pos:end="155:48">r</name><operator pos:start="155:49" pos:end="155:50">-&gt;</operator><name pos:start="155:51" pos:end="155:51">s</name><operator pos:start="155:52" pos:end="155:52">.</operator><name pos:start="155:53" pos:end="155:60">mb_width</name></name> <operator pos:start="155:62" pos:end="155:62">-</operator> <name pos:start="155:64" pos:end="155:74"><name pos:start="155:64" pos:end="155:64">r</name><operator pos:start="155:65" pos:end="155:66">-&gt;</operator><name pos:start="155:67" pos:end="155:68">si</name><operator pos:start="155:69" pos:end="155:69">.</operator><name pos:start="155:70" pos:end="155:74">start</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="159:18"><if pos:start="157:9" pos:end="159:18">if<condition pos:start="157:11" pos:end="157:16">(<expr pos:start="157:12" pos:end="157:15"><name pos:start="157:12" pos:end="157:15">last</name></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:18"><block_content pos:start="159:13" pos:end="159:18">

            <break pos:start="159:13" pos:end="159:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="165:5" pos:end="197:5"><if pos:start="165:5" pos:end="197:5">if<condition pos:start="165:7" pos:end="165:38">(<expr pos:start="165:8" pos:end="165:37"><name pos:start="165:8" pos:end="165:11">last</name> <operator pos:start="165:13" pos:end="165:14">&amp;&amp;</operator> <name pos:start="165:16" pos:end="165:37"><name pos:start="165:16" pos:end="165:16">s</name><operator pos:start="165:17" pos:end="165:18">-&gt;</operator><name pos:start="165:19" pos:end="165:37">current_picture_ptr</name></name></expr>)</condition><block pos:start="165:39" pos:end="197:5">{<block_content pos:start="167:9" pos:end="195:38">

        <if_stmt pos:start="167:9" pos:end="169:48"><if pos:start="167:9" pos:end="169:48">if<condition pos:start="167:11" pos:end="167:26">(<expr pos:start="167:12" pos:end="167:25"><name pos:start="167:12" pos:end="167:25"><name pos:start="167:12" pos:end="167:12">r</name><operator pos:start="167:13" pos:end="167:14">-&gt;</operator><name pos:start="167:15" pos:end="167:25">loop_filter</name></name></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:48"><block_content pos:start="169:13" pos:end="169:48">

            <expr_stmt pos:start="169:13" pos:end="169:48"><expr pos:start="169:13" pos:end="169:47"><call pos:start="169:13" pos:end="169:47"><name pos:start="169:13" pos:end="169:26"><name pos:start="169:13" pos:end="169:13">r</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:26">loop_filter</name></name><argument_list pos:start="169:27" pos:end="169:47">(<argument pos:start="169:28" pos:end="169:28"><expr pos:start="169:28" pos:end="169:28"><name pos:start="169:28" pos:end="169:28">r</name></expr></argument>, <argument pos:start="169:31" pos:end="169:46"><expr pos:start="169:31" pos:end="169:46"><name pos:start="169:31" pos:end="169:42"><name pos:start="169:31" pos:end="169:31">s</name><operator pos:start="169:32" pos:end="169:33">-&gt;</operator><name pos:start="169:34" pos:end="169:42">mb_height</name></name> <operator pos:start="169:44" pos:end="169:44">-</operator> <literal type="number" pos:start="169:46" pos:end="169:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:27"><expr pos:start="171:9" pos:end="171:26"><call pos:start="171:9" pos:end="171:26"><name pos:start="171:9" pos:end="171:23">ff_er_frame_end</name><argument_list pos:start="171:24" pos:end="171:26">(<argument pos:start="171:25" pos:end="171:25"><expr pos:start="171:25" pos:end="171:25"><name pos:start="171:25" pos:end="171:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:25"><expr pos:start="173:9" pos:end="173:24"><call pos:start="173:9" pos:end="173:24"><name pos:start="173:9" pos:end="173:21">MPV_frame_end</name><argument_list pos:start="173:22" pos:end="173:24">(<argument pos:start="173:23" pos:end="173:23"><expr pos:start="173:23" pos:end="173:23"><name pos:start="173:23" pos:end="173:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="175:9" pos:end="183:9"><if pos:start="175:9" pos:end="179:9">if <condition pos:start="175:12" pos:end="175:62">(<expr pos:start="175:13" pos:end="175:61"><name pos:start="175:13" pos:end="175:24"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:24">pict_type</name></name> <operator pos:start="175:26" pos:end="175:27">==</operator> <name pos:start="175:29" pos:end="175:45">AV_PICTURE_TYPE_B</name> <operator pos:start="175:47" pos:end="175:48">||</operator> <name pos:start="175:50" pos:end="175:61"><name pos:start="175:50" pos:end="175:50">s</name><operator pos:start="175:51" pos:end="175:52">-&gt;</operator><name pos:start="175:53" pos:end="175:61">low_delay</name></name></expr>)</condition> <block pos:start="175:64" pos:end="179:9">{<block_content pos:start="177:13" pos:end="177:54">

            <expr_stmt pos:start="177:13" pos:end="177:54"><expr pos:start="177:13" pos:end="177:53"><operator pos:start="177:13" pos:end="177:13">*</operator><name pos:start="177:14" pos:end="177:17">pict</name> <operator pos:start="177:19" pos:end="177:19">=</operator> <operator pos:start="177:21" pos:end="177:21">*</operator><operator pos:start="177:22" pos:end="177:22">(</operator><name pos:start="177:23" pos:end="177:29">AVFrame</name><operator pos:start="177:30" pos:end="177:30">*</operator><operator pos:start="177:31" pos:end="177:31">)</operator><name pos:start="177:32" pos:end="177:53"><name pos:start="177:32" pos:end="177:32">s</name><operator pos:start="177:33" pos:end="177:34">-&gt;</operator><name pos:start="177:35" pos:end="177:53">current_picture_ptr</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="179:11" pos:end="183:9">else if <condition pos:start="179:19" pos:end="179:47">(<expr pos:start="179:20" pos:end="179:46"><name pos:start="179:20" pos:end="179:38"><name pos:start="179:20" pos:end="179:20">s</name><operator pos:start="179:21" pos:end="179:22">-&gt;</operator><name pos:start="179:23" pos:end="179:38">last_picture_ptr</name></name> <operator pos:start="179:40" pos:end="179:41">!=</operator> <name pos:start="179:43" pos:end="179:46">NULL</name></expr>)</condition> <block pos:start="179:49" pos:end="183:9">{<block_content pos:start="181:13" pos:end="181:51">

            <expr_stmt pos:start="181:13" pos:end="181:51"><expr pos:start="181:13" pos:end="181:50"><operator pos:start="181:13" pos:end="181:13">*</operator><name pos:start="181:14" pos:end="181:17">pict</name> <operator pos:start="181:19" pos:end="181:19">=</operator> <operator pos:start="181:21" pos:end="181:21">*</operator><operator pos:start="181:22" pos:end="181:22">(</operator><name pos:start="181:23" pos:end="181:29">AVFrame</name><operator pos:start="181:30" pos:end="181:30">*</operator><operator pos:start="181:31" pos:end="181:31">)</operator><name pos:start="181:32" pos:end="181:50"><name pos:start="181:32" pos:end="181:32">s</name><operator pos:start="181:33" pos:end="181:34">-&gt;</operator><name pos:start="181:35" pos:end="181:50">last_picture_ptr</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="187:9" pos:end="193:9"><if pos:start="187:9" pos:end="193:9">if<condition pos:start="187:11" pos:end="187:47">(<expr pos:start="187:12" pos:end="187:46"><name pos:start="187:12" pos:end="187:30"><name pos:start="187:12" pos:end="187:12">s</name><operator pos:start="187:13" pos:end="187:14">-&gt;</operator><name pos:start="187:15" pos:end="187:30">last_picture_ptr</name></name> <operator pos:start="187:32" pos:end="187:33">||</operator> <name pos:start="187:35" pos:end="187:46"><name pos:start="187:35" pos:end="187:35">s</name><operator pos:start="187:36" pos:end="187:37">-&gt;</operator><name pos:start="187:38" pos:end="187:46">low_delay</name></name></expr>)</condition><block pos:start="187:48" pos:end="193:9">{<block_content pos:start="189:13" pos:end="191:41">

            <expr_stmt pos:start="189:13" pos:end="189:41"><expr pos:start="189:13" pos:end="189:40"><operator pos:start="189:13" pos:end="189:13">*</operator><name pos:start="189:14" pos:end="189:22">data_size</name> <operator pos:start="189:24" pos:end="189:24">=</operator> <sizeof pos:start="189:26" pos:end="189:40">sizeof<argument_list pos:start="189:32" pos:end="189:40">(<argument pos:start="189:33" pos:end="189:39"><expr pos:start="189:33" pos:end="189:39"><name pos:start="189:33" pos:end="189:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:41"><expr pos:start="191:13" pos:end="191:40"><call pos:start="191:13" pos:end="191:40"><name pos:start="191:13" pos:end="191:31">ff_print_debug_info</name><argument_list pos:start="191:32" pos:end="191:40">(<argument pos:start="191:33" pos:end="191:33"><expr pos:start="191:33" pos:end="191:33"><name pos:start="191:33" pos:end="191:33">s</name></expr></argument>, <argument pos:start="191:36" pos:end="191:39"><expr pos:start="191:36" pos:end="191:39"><name pos:start="191:36" pos:end="191:39">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:38"><expr pos:start="195:9" pos:end="195:37"><name pos:start="195:9" pos:end="195:30"><name pos:start="195:9" pos:end="195:9">s</name><operator pos:start="195:10" pos:end="195:11">-&gt;</operator><name pos:start="195:12" pos:end="195:30">current_picture_ptr</name></name> <operator pos:start="195:32" pos:end="195:32">=</operator> <name pos:start="195:34" pos:end="195:37">NULL</name></expr>;</expr_stmt> <comment type="line" pos:start="195:40" pos:end="195:113">//so we can detect if frame_end wasnt called (find some nicer solution...)</comment>

    </block_content>}</block></if></if_stmt>

    <return pos:start="199:5" pos:end="199:23">return <expr pos:start="199:12" pos:end="199:22"><name pos:start="199:12" pos:end="199:22"><name pos:start="199:12" pos:end="199:16">avpkt</name><operator pos:start="199:17" pos:end="199:18">-&gt;</operator><name pos:start="199:19" pos:end="199:22">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
