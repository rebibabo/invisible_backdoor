<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22157.c" pos:tabs="8"><function pos:start="1:1" pos:end="247:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:35">gen_intermediate_code_internal</name><parameter_list pos:start="1:36" pos:end="3:73">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:43">LM32CPU</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">cpu</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:56"><decl pos:start="3:37" pos:end="3:56"><type pos:start="3:37" pos:end="3:56"><name pos:start="3:37" pos:end="3:52">TranslationBlock</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:56">tb</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:72"><decl pos:start="3:59" pos:end="3:72"><type pos:start="3:59" pos:end="3:72"><name pos:start="3:59" pos:end="3:62">bool</name></type> <name pos:start="3:64" pos:end="3:72">search_pc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="247:1">{<block_content pos:start="7:5" pos:end="246:0">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name> <init pos:start="7:18" pos:end="7:27">= <expr pos:start="7:20" pos:end="7:27"><call pos:start="7:20" pos:end="7:27"><name pos:start="7:20" pos:end="7:22">CPU</name><argument_list pos:start="7:23" pos:end="7:27">(<argument pos:start="7:24" pos:end="7:26"><expr pos:start="7:24" pos:end="7:26"><name pos:start="7:24" pos:end="7:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">CPULM32State</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">env</name> <init pos:start="9:23" pos:end="9:33">= <expr pos:start="9:25" pos:end="9:33"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:33"><name pos:start="9:26" pos:end="9:28">cpu</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:33">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:23">DisasContext</name></name></type> <name pos:start="11:25" pos:end="11:27">ctx</name></decl>, <decl pos:start="11:30" pos:end="11:39"><type ref="prev" pos:start="11:5" pos:end="11:23"><modifier pos:start="11:30" pos:end="11:30">*</modifier></type><name pos:start="11:31" pos:end="11:32">dc</name> <init pos:start="11:34" pos:end="11:39">= <expr pos:start="11:36" pos:end="11:39"><operator pos:start="11:36" pos:end="11:36">&amp;</operator><name pos:start="11:37" pos:end="11:39">ctx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">uint16_t</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:25">gen_opc_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:21">pc_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">j</name></decl>, <decl pos:start="17:12" pos:end="17:13"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:13">lj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:29"><decl pos:start="19:5" pos:end="19:28"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:28">next_page_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:17">num_insns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:18"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:17">max_insns</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:12">pc_start</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:21"><name pos:start="27:16" pos:end="27:17">tb</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:21">pc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:6">dc</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:16">features</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:32"><name pos:start="29:20" pos:end="29:22">cpu</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:32">features</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:47"><expr pos:start="31:5" pos:end="31:46"><name pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:6">dc</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:23">num_breakpoints</name></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <name pos:start="31:27" pos:end="31:46"><name pos:start="31:27" pos:end="31:29">cpu</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:46">num_breakpoints</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:47"><expr pos:start="33:5" pos:end="33:46"><name pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:6">dc</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:23">num_watchpoints</name></name> <operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:46"><name pos:start="33:27" pos:end="33:29">cpu</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:46">num_watchpoints</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:16"><expr pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:10"><name pos:start="35:5" pos:end="35:6">dc</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:10">tb</name></name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:15">tb</name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:53"><expr pos:start="39:5" pos:end="39:52"><name pos:start="39:5" pos:end="39:15">gen_opc_end</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:37"><name pos:start="39:19" pos:end="39:25">tcg_ctx</name><operator pos:start="39:26" pos:end="39:26">.</operator><name pos:start="39:27" pos:end="39:37">gen_opc_buf</name></name> <operator pos:start="39:39" pos:end="39:39">+</operator> <name pos:start="39:41" pos:end="39:52">OPC_MAX_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:14"><name pos:start="43:5" pos:end="43:6">dc</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:14">is_jmp</name></name> <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:27">DISAS_NEXT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:22"><expr pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:10"><name pos:start="45:5" pos:end="45:6">dc</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:10">pc</name></name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:21">pc_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:52"><expr pos:start="47:5" pos:end="47:51"><name pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:6">dc</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:26">singlestep_enabled</name></name> <operator pos:start="47:28" pos:end="47:28">=</operator> <name pos:start="47:30" pos:end="47:51"><name pos:start="47:30" pos:end="47:31">cs</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:51">singlestep_enabled</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:21">(<expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:16">pc_start</name> <operator pos:start="51:18" pos:end="51:18">&amp;</operator> <literal type="number" pos:start="51:20" pos:end="51:20">3</literal></expr>)</condition> <block pos:start="51:23" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:23">

        <expr_stmt pos:start="53:9" pos:end="55:76"><expr pos:start="53:9" pos:end="55:75"><call pos:start="53:9" pos:end="55:75"><name pos:start="53:9" pos:end="53:21">qemu_log_mask</name><argument_list pos:start="53:22" pos:end="55:75">(<argument pos:start="53:23" pos:end="53:37"><expr pos:start="53:23" pos:end="53:37"><name pos:start="53:23" pos:end="53:37">LOG_GUEST_ERROR</name></expr></argument>,

                      <argument pos:start="55:23" pos:end="55:64"><expr pos:start="55:23" pos:end="55:64"><literal type="string" pos:start="55:23" pos:end="55:64">"unaligned PC=%x. Ignoring lowest bits.\n"</literal></expr></argument>, <argument pos:start="55:67" pos:end="55:74"><expr pos:start="55:67" pos:end="55:74"><name pos:start="55:67" pos:end="55:74">pc_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:23"><expr pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:16">pc_start</name> <operator pos:start="57:18" pos:end="57:19">&amp;=</operator> <operator pos:start="57:21" pos:end="57:21">~</operator><literal type="number" pos:start="57:22" pos:end="57:22">3</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:71"><expr pos:start="63:5" pos:end="63:70"><name pos:start="63:5" pos:end="63:19">next_page_start</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <operator pos:start="63:23" pos:end="63:23">(</operator><name pos:start="63:24" pos:end="63:31">pc_start</name> <operator pos:start="63:33" pos:end="63:33">&amp;</operator> <name pos:start="63:35" pos:end="63:50">TARGET_PAGE_MASK</name><operator pos:start="63:51" pos:end="63:51">)</operator> <operator pos:start="63:53" pos:end="63:53">+</operator> <name pos:start="63:55" pos:end="63:70">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:12"><expr pos:start="65:5" pos:end="65:11"><name pos:start="65:5" pos:end="65:6">lj</name> <operator pos:start="65:8" pos:end="65:8">=</operator> <operator pos:start="65:10" pos:end="65:10">-</operator><literal type="number" pos:start="65:11" pos:end="65:11">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:18"><expr pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:13">num_insns</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <literal type="number" pos:start="67:17" pos:end="67:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:43"><expr pos:start="69:5" pos:end="69:42"><name pos:start="69:5" pos:end="69:13">max_insns</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <name pos:start="69:17" pos:end="69:26"><name pos:start="69:17" pos:end="69:18">tb</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:26">cflags</name></name> <operator pos:start="69:28" pos:end="69:28">&amp;</operator> <name pos:start="69:30" pos:end="69:42">CF_COUNT_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="75:5"><if pos:start="71:5" pos:end="75:5">if <condition pos:start="71:8" pos:end="71:23">(<expr pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:17">max_insns</name> <operator pos:start="71:19" pos:end="71:20">==</operator> <literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>)</condition> <block pos:start="71:25" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:34">

        <expr_stmt pos:start="73:9" pos:end="73:34"><expr pos:start="73:9" pos:end="73:33"><name pos:start="73:9" pos:end="73:17">max_insns</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:33">CF_COUNT_MASK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:19"><expr pos:start="79:5" pos:end="79:18"><call pos:start="79:5" pos:end="79:18"><name pos:start="79:5" pos:end="79:16">gen_tb_start</name><argument_list pos:start="79:17" pos:end="79:18">()</argument_list></call></expr>;</expr_stmt>

    <do pos:start="81:5" pos:end="145:35">do <block pos:start="81:8" pos:end="135:5">{<block_content pos:start="83:9" pos:end="131:20">

        <expr_stmt pos:start="83:9" pos:end="83:34"><expr pos:start="83:9" pos:end="83:33"><call pos:start="83:9" pos:end="83:33"><name pos:start="83:9" pos:end="83:24">check_breakpoint</name><argument_list pos:start="83:25" pos:end="83:33">(<argument pos:start="83:26" pos:end="83:28"><expr pos:start="83:26" pos:end="83:28"><name pos:start="83:26" pos:end="83:28">env</name></expr></argument>, <argument pos:start="83:31" pos:end="83:32"><expr pos:start="83:31" pos:end="83:32"><name pos:start="83:31" pos:end="83:32">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="87:9" pos:end="109:9"><if pos:start="87:9" pos:end="109:9">if <condition pos:start="87:12" pos:end="87:22">(<expr pos:start="87:13" pos:end="87:21"><name pos:start="87:13" pos:end="87:21">search_pc</name></expr>)</condition> <block pos:start="87:24" pos:end="109:9">{<block_content pos:start="89:13" pos:end="107:51">

            <expr_stmt pos:start="89:13" pos:end="89:58"><expr pos:start="89:13" pos:end="89:57"><name pos:start="89:13" pos:end="89:13">j</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <name pos:start="89:17" pos:end="89:35"><name pos:start="89:17" pos:end="89:23">tcg_ctx</name><operator pos:start="89:24" pos:end="89:24">.</operator><name pos:start="89:25" pos:end="89:35">gen_opc_ptr</name></name> <operator pos:start="89:37" pos:end="89:37">-</operator> <name pos:start="89:39" pos:end="89:57"><name pos:start="89:39" pos:end="89:45">tcg_ctx</name><operator pos:start="89:46" pos:end="89:46">.</operator><name pos:start="89:47" pos:end="89:57">gen_opc_buf</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="101:13"><if pos:start="91:13" pos:end="101:13">if <condition pos:start="91:16" pos:end="91:23">(<expr pos:start="91:17" pos:end="91:22"><name pos:start="91:17" pos:end="91:18">lj</name> <operator pos:start="91:20" pos:end="91:20">&lt;</operator> <name pos:start="91:22" pos:end="91:22">j</name></expr>)</condition> <block pos:start="91:25" pos:end="101:13">{<block_content pos:start="93:17" pos:end="99:17">

                <expr_stmt pos:start="93:17" pos:end="93:21"><expr pos:start="93:17" pos:end="93:20"><name pos:start="93:17" pos:end="93:18">lj</name><operator pos:start="93:19" pos:end="93:20">++</operator></expr>;</expr_stmt>

                <while pos:start="95:17" pos:end="99:17">while <condition pos:start="95:23" pos:end="95:30">(<expr pos:start="95:24" pos:end="95:29"><name pos:start="95:24" pos:end="95:25">lj</name> <operator pos:start="95:27" pos:end="95:27">&lt;</operator> <name pos:start="95:29" pos:end="95:29">j</name></expr>)</condition> <block pos:start="95:32" pos:end="99:17">{<block_content pos:start="97:21" pos:end="97:58">

                    <expr_stmt pos:start="97:21" pos:end="97:58"><expr pos:start="97:21" pos:end="97:57"><name pos:start="97:21" pos:end="97:53"><name pos:start="97:21" pos:end="97:27">tcg_ctx</name><operator pos:start="97:28" pos:end="97:28">.</operator><name pos:start="97:29" pos:end="97:47">gen_opc_instr_start</name><index pos:start="97:48" pos:end="97:53">[<expr pos:start="97:49" pos:end="97:52"><name pos:start="97:49" pos:end="97:50">lj</name><operator pos:start="97:51" pos:end="97:52">++</operator></expr>]</index></name> <operator pos:start="97:55" pos:end="97:55">=</operator> <literal type="number" pos:start="97:57" pos:end="97:57">0</literal></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:44"><expr pos:start="103:13" pos:end="103:43"><name pos:start="103:13" pos:end="103:34"><name pos:start="103:13" pos:end="103:19">tcg_ctx</name><operator pos:start="103:20" pos:end="103:20">.</operator><name pos:start="103:21" pos:end="103:30">gen_opc_pc</name><index pos:start="103:31" pos:end="103:34">[<expr pos:start="103:32" pos:end="103:33"><name pos:start="103:32" pos:end="103:33">lj</name></expr>]</index></name> <operator pos:start="103:36" pos:end="103:36">=</operator> <name pos:start="103:38" pos:end="103:43"><name pos:start="103:38" pos:end="103:39">dc</name><operator pos:start="103:40" pos:end="103:41">-&gt;</operator><name pos:start="103:42" pos:end="103:43">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:48"><expr pos:start="105:13" pos:end="105:47"><name pos:start="105:13" pos:end="105:43"><name pos:start="105:13" pos:end="105:19">tcg_ctx</name><operator pos:start="105:20" pos:end="105:20">.</operator><name pos:start="105:21" pos:end="105:39">gen_opc_instr_start</name><index pos:start="105:40" pos:end="105:43">[<expr pos:start="105:41" pos:end="105:42"><name pos:start="105:41" pos:end="105:42">lj</name></expr>]</index></name> <operator pos:start="105:45" pos:end="105:45">=</operator> <literal type="number" pos:start="105:47" pos:end="105:47">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:51"><expr pos:start="107:13" pos:end="107:50"><name pos:start="107:13" pos:end="107:38"><name pos:start="107:13" pos:end="107:19">tcg_ctx</name><operator pos:start="107:20" pos:end="107:20">.</operator><name pos:start="107:21" pos:end="107:34">gen_opc_icount</name><index pos:start="107:35" pos:end="107:38">[<expr pos:start="107:36" pos:end="107:37"><name pos:start="107:36" pos:end="107:37">lj</name></expr>]</index></name> <operator pos:start="107:40" pos:end="107:40">=</operator> <name pos:start="107:42" pos:end="107:50">num_insns</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="113:9" pos:end="113:28">/* Pretty disas.  */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:36"><expr pos:start="115:9" pos:end="115:35"><call pos:start="115:9" pos:end="115:35"><name pos:start="115:9" pos:end="115:15">LOG_DIS</name><argument_list pos:start="115:16" pos:end="115:35">(<argument pos:start="115:17" pos:end="115:26"><expr pos:start="115:17" pos:end="115:26"><literal type="string" pos:start="115:17" pos:end="115:26">"%8.8x:\t"</literal></expr></argument>, <argument pos:start="115:29" pos:end="115:34"><expr pos:start="115:29" pos:end="115:34"><name pos:start="115:29" pos:end="115:34"><name pos:start="115:29" pos:end="115:30">dc</name><operator pos:start="115:31" pos:end="115:32">-&gt;</operator><name pos:start="115:33" pos:end="115:34">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="119:9" pos:end="123:9"><if pos:start="119:9" pos:end="123:9">if <condition pos:start="119:12" pos:end="119:68">(<expr pos:start="119:13" pos:end="119:67"><name pos:start="119:13" pos:end="119:21">num_insns</name> <operator pos:start="119:23" pos:end="119:23">+</operator> <literal type="number" pos:start="119:25" pos:end="119:25">1</literal> <operator pos:start="119:27" pos:end="119:28">==</operator> <name pos:start="119:30" pos:end="119:38">max_insns</name> <operator pos:start="119:40" pos:end="119:41">&amp;&amp;</operator> <operator pos:start="119:43" pos:end="119:43">(</operator><name pos:start="119:44" pos:end="119:53"><name pos:start="119:44" pos:end="119:45">tb</name><operator pos:start="119:46" pos:end="119:47">-&gt;</operator><name pos:start="119:48" pos:end="119:53">cflags</name></name> <operator pos:start="119:55" pos:end="119:55">&amp;</operator> <name pos:start="119:57" pos:end="119:66">CF_LAST_IO</name><operator pos:start="119:67" pos:end="119:67">)</operator></expr>)</condition> <block pos:start="119:70" pos:end="123:9">{<block_content pos:start="121:13" pos:end="121:27">

            <expr_stmt pos:start="121:13" pos:end="121:27"><expr pos:start="121:13" pos:end="121:26"><call pos:start="121:13" pos:end="121:26"><name pos:start="121:13" pos:end="121:24">gen_io_start</name><argument_list pos:start="121:25" pos:end="121:26">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:46"><expr pos:start="127:9" pos:end="127:45"><call pos:start="127:9" pos:end="127:45"><name pos:start="127:9" pos:end="127:14">decode</name><argument_list pos:start="127:15" pos:end="127:45">(<argument pos:start="127:16" pos:end="127:17"><expr pos:start="127:16" pos:end="127:17"><name pos:start="127:16" pos:end="127:17">dc</name></expr></argument>, <argument pos:start="127:20" pos:end="127:44"><expr pos:start="127:20" pos:end="127:44"><call pos:start="127:20" pos:end="127:44"><name pos:start="127:20" pos:end="127:31">cpu_ldl_code</name><argument_list pos:start="127:32" pos:end="127:44">(<argument pos:start="127:33" pos:end="127:35"><expr pos:start="127:33" pos:end="127:35"><name pos:start="127:33" pos:end="127:35">env</name></expr></argument>, <argument pos:start="127:38" pos:end="127:43"><expr pos:start="127:38" pos:end="127:43"><name pos:start="127:38" pos:end="127:43"><name pos:start="127:38" pos:end="127:39">dc</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:43">pc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:20"><expr pos:start="129:9" pos:end="129:19"><name pos:start="129:9" pos:end="129:14"><name pos:start="129:9" pos:end="129:10">dc</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:14">pc</name></name> <operator pos:start="129:16" pos:end="129:17">+=</operator> <literal type="number" pos:start="129:19" pos:end="129:19">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:20"><expr pos:start="131:9" pos:end="131:19"><name pos:start="131:9" pos:end="131:17">num_insns</name><operator pos:start="131:18" pos:end="131:19">++</operator></expr>;</expr_stmt>



    </block_content>}</block> while <condition pos:start="135:13" pos:end="145:34">(<expr pos:start="135:14" pos:end="145:33"><operator pos:start="135:14" pos:end="135:14">!</operator><name pos:start="135:15" pos:end="135:24"><name pos:start="135:15" pos:end="135:16">dc</name><operator pos:start="135:17" pos:end="135:18">-&gt;</operator><name pos:start="135:19" pos:end="135:24">is_jmp</name></name>

         <operator pos:start="137:10" pos:end="137:11">&amp;&amp;</operator> <name pos:start="137:13" pos:end="137:31"><name pos:start="137:13" pos:end="137:19">tcg_ctx</name><operator pos:start="137:20" pos:end="137:20">.</operator><name pos:start="137:21" pos:end="137:31">gen_opc_ptr</name></name> <operator pos:start="137:33" pos:end="137:33">&lt;</operator> <name pos:start="137:35" pos:end="137:45">gen_opc_end</name>

         <operator pos:start="139:10" pos:end="139:11">&amp;&amp;</operator> <operator pos:start="139:13" pos:end="139:13">!</operator><name pos:start="139:14" pos:end="139:35"><name pos:start="139:14" pos:end="139:15">cs</name><operator pos:start="139:16" pos:end="139:17">-&gt;</operator><name pos:start="139:18" pos:end="139:35">singlestep_enabled</name></name>

         <operator pos:start="141:10" pos:end="141:11">&amp;&amp;</operator> <operator pos:start="141:13" pos:end="141:13">!</operator><name pos:start="141:14" pos:end="141:23">singlestep</name>

         <operator pos:start="143:10" pos:end="143:11">&amp;&amp;</operator> <operator pos:start="143:13" pos:end="143:13">(</operator><name pos:start="143:14" pos:end="143:19"><name pos:start="143:14" pos:end="143:15">dc</name><operator pos:start="143:16" pos:end="143:17">-&gt;</operator><name pos:start="143:18" pos:end="143:19">pc</name></name> <operator pos:start="143:21" pos:end="143:21">&lt;</operator> <name pos:start="143:23" pos:end="143:37">next_page_start</name><operator pos:start="143:38" pos:end="143:38">)</operator>

         <operator pos:start="145:10" pos:end="145:11">&amp;&amp;</operator> <name pos:start="145:13" pos:end="145:21">num_insns</name> <operator pos:start="145:23" pos:end="145:23">&lt;</operator> <name pos:start="145:25" pos:end="145:33">max_insns</name></expr>)</condition>;</do>



    <if_stmt pos:start="149:5" pos:end="153:5"><if pos:start="149:5" pos:end="153:5">if <condition pos:start="149:8" pos:end="149:32">(<expr pos:start="149:9" pos:end="149:31"><name pos:start="149:9" pos:end="149:18"><name pos:start="149:9" pos:end="149:10">tb</name><operator pos:start="149:11" pos:end="149:12">-&gt;</operator><name pos:start="149:13" pos:end="149:18">cflags</name></name> <operator pos:start="149:20" pos:end="149:20">&amp;</operator> <name pos:start="149:22" pos:end="149:31">CF_LAST_IO</name></expr>)</condition> <block pos:start="149:34" pos:end="153:5">{<block_content pos:start="151:9" pos:end="151:21">

        <expr_stmt pos:start="151:9" pos:end="151:21"><expr pos:start="151:9" pos:end="151:20"><call pos:start="151:9" pos:end="151:20"><name pos:start="151:9" pos:end="151:18">gen_io_end</name><argument_list pos:start="151:19" pos:end="151:20">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="157:5" pos:end="199:5"><if pos:start="157:5" pos:end="167:5">if <condition pos:start="157:8" pos:end="157:41">(<expr pos:start="157:9" pos:end="157:40"><call pos:start="157:9" pos:end="157:40"><name pos:start="157:9" pos:end="157:16">unlikely</name><argument_list pos:start="157:17" pos:end="157:40">(<argument pos:start="157:18" pos:end="157:39"><expr pos:start="157:18" pos:end="157:39"><name pos:start="157:18" pos:end="157:39"><name pos:start="157:18" pos:end="157:19">cs</name><operator pos:start="157:20" pos:end="157:21">-&gt;</operator><name pos:start="157:22" pos:end="157:39">singlestep_enabled</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="157:43" pos:end="167:5">{<block_content pos:start="159:9" pos:end="165:46">

        <if_stmt pos:start="159:9" pos:end="163:9"><if pos:start="159:9" pos:end="163:9">if <condition pos:start="159:12" pos:end="159:37">(<expr pos:start="159:13" pos:end="159:36"><name pos:start="159:13" pos:end="159:22"><name pos:start="159:13" pos:end="159:14">dc</name><operator pos:start="159:15" pos:end="159:16">-&gt;</operator><name pos:start="159:17" pos:end="159:22">is_jmp</name></name> <operator pos:start="159:24" pos:end="159:25">==</operator> <name pos:start="159:27" pos:end="159:36">DISAS_NEXT</name></expr>)</condition> <block pos:start="159:39" pos:end="163:9">{<block_content pos:start="161:13" pos:end="161:44">

            <expr_stmt pos:start="161:13" pos:end="161:44"><expr pos:start="161:13" pos:end="161:43"><call pos:start="161:13" pos:end="161:43"><name pos:start="161:13" pos:end="161:27">tcg_gen_movi_tl</name><argument_list pos:start="161:28" pos:end="161:43">(<argument pos:start="161:29" pos:end="161:34"><expr pos:start="161:29" pos:end="161:34"><name pos:start="161:29" pos:end="161:34">cpu_pc</name></expr></argument>, <argument pos:start="161:37" pos:end="161:42"><expr pos:start="161:37" pos:end="161:42"><name pos:start="161:37" pos:end="161:42"><name pos:start="161:37" pos:end="161:38">dc</name><operator pos:start="161:39" pos:end="161:40">-&gt;</operator><name pos:start="161:41" pos:end="161:42">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:46"><expr pos:start="165:9" pos:end="165:45"><call pos:start="165:9" pos:end="165:45"><name pos:start="165:9" pos:end="165:29">t_gen_raise_exception</name><argument_list pos:start="165:30" pos:end="165:45">(<argument pos:start="165:31" pos:end="165:32"><expr pos:start="165:31" pos:end="165:32"><name pos:start="165:31" pos:end="165:32">dc</name></expr></argument>, <argument pos:start="165:35" pos:end="165:44"><expr pos:start="165:35" pos:end="165:44"><name pos:start="165:35" pos:end="165:44">EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="167:7" pos:end="199:5">else <block pos:start="167:12" pos:end="199:5">{<block_content pos:start="169:9" pos:end="197:9">

        <switch pos:start="169:9" pos:end="197:9">switch <condition pos:start="169:16" pos:end="169:27">(<expr pos:start="169:17" pos:end="169:26"><name pos:start="169:17" pos:end="169:26"><name pos:start="169:17" pos:end="169:18">dc</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:26">is_jmp</name></name></expr>)</condition> <block pos:start="169:29" pos:end="197:9">{<block_content pos:start="171:9" pos:end="195:18">

        <case pos:start="171:9" pos:end="171:24">case <expr pos:start="171:14" pos:end="171:23"><name pos:start="171:14" pos:end="171:23">DISAS_NEXT</name></expr>:</case>

            <expr_stmt pos:start="173:13" pos:end="173:39"><expr pos:start="173:13" pos:end="173:38"><call pos:start="173:13" pos:end="173:38"><name pos:start="173:13" pos:end="173:23">gen_goto_tb</name><argument_list pos:start="173:24" pos:end="173:38">(<argument pos:start="173:25" pos:end="173:26"><expr pos:start="173:25" pos:end="173:26"><name pos:start="173:25" pos:end="173:26">dc</name></expr></argument>, <argument pos:start="173:29" pos:end="173:29"><expr pos:start="173:29" pos:end="173:29"><literal type="number" pos:start="173:29" pos:end="173:29">1</literal></expr></argument>, <argument pos:start="173:32" pos:end="173:37"><expr pos:start="173:32" pos:end="173:37"><name pos:start="173:32" pos:end="173:37"><name pos:start="173:32" pos:end="173:33">dc</name><operator pos:start="173:34" pos:end="173:35">-&gt;</operator><name pos:start="173:36" pos:end="173:37">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="175:13" pos:end="175:18">break;</break>

        <default pos:start="177:9" pos:end="177:16">default:</default>

        <case pos:start="179:9" pos:end="179:24">case <expr pos:start="179:14" pos:end="179:23"><name pos:start="179:14" pos:end="179:23">DISAS_JUMP</name></expr>:</case>

        <case pos:start="181:9" pos:end="181:26">case <expr pos:start="181:14" pos:end="181:25"><name pos:start="181:14" pos:end="181:25">DISAS_UPDATE</name></expr>:</case>

            <comment type="block" pos:start="183:13" pos:end="185:37">/* indicate that the hash table must be used

               to find the next TB */</comment>

            <expr_stmt pos:start="187:13" pos:end="187:31"><expr pos:start="187:13" pos:end="187:30"><call pos:start="187:13" pos:end="187:30"><name pos:start="187:13" pos:end="187:27">tcg_gen_exit_tb</name><argument_list pos:start="187:28" pos:end="187:30">(<argument pos:start="187:29" pos:end="187:29"><expr pos:start="187:29" pos:end="187:29"><literal type="number" pos:start="187:29" pos:end="187:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="189:13" pos:end="189:18">break;</break>

        <case pos:start="191:9" pos:end="191:27">case <expr pos:start="191:14" pos:end="191:26"><name pos:start="191:14" pos:end="191:26">DISAS_TB_JUMP</name></expr>:</case>

            <comment type="block" pos:start="193:13" pos:end="193:42">/* nothing more to generate */</comment>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="203:5" pos:end="203:30"><expr pos:start="203:5" pos:end="203:29"><call pos:start="203:5" pos:end="203:29"><name pos:start="203:5" pos:end="203:14">gen_tb_end</name><argument_list pos:start="203:15" pos:end="203:29">(<argument pos:start="203:16" pos:end="203:17"><expr pos:start="203:16" pos:end="203:17"><name pos:start="203:16" pos:end="203:17">tb</name></expr></argument>, <argument pos:start="203:20" pos:end="203:28"><expr pos:start="203:20" pos:end="203:28"><name pos:start="203:20" pos:end="203:28">num_insns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:40"><expr pos:start="205:5" pos:end="205:39"><operator pos:start="205:5" pos:end="205:5">*</operator><name pos:start="205:6" pos:end="205:24"><name pos:start="205:6" pos:end="205:12">tcg_ctx</name><operator pos:start="205:13" pos:end="205:13">.</operator><name pos:start="205:14" pos:end="205:24">gen_opc_ptr</name></name> <operator pos:start="205:26" pos:end="205:26">=</operator> <name pos:start="205:28" pos:end="205:39">INDEX_op_end</name></expr>;</expr_stmt>

    <if_stmt pos:start="207:5" pos:end="230:0"><if pos:start="207:5" pos:end="219:5">if <condition pos:start="207:8" pos:end="207:18">(<expr pos:start="207:9" pos:end="207:17"><name pos:start="207:9" pos:end="207:17">search_pc</name></expr>)</condition> <block pos:start="207:20" pos:end="219:5">{<block_content pos:start="209:9" pos:end="217:9">

        <expr_stmt pos:start="209:9" pos:end="209:54"><expr pos:start="209:9" pos:end="209:53"><name pos:start="209:9" pos:end="209:9">j</name> <operator pos:start="209:11" pos:end="209:11">=</operator> <name pos:start="209:13" pos:end="209:31"><name pos:start="209:13" pos:end="209:19">tcg_ctx</name><operator pos:start="209:20" pos:end="209:20">.</operator><name pos:start="209:21" pos:end="209:31">gen_opc_ptr</name></name> <operator pos:start="209:33" pos:end="209:33">-</operator> <name pos:start="209:35" pos:end="209:53"><name pos:start="209:35" pos:end="209:41">tcg_ctx</name><operator pos:start="209:42" pos:end="209:42">.</operator><name pos:start="209:43" pos:end="209:53">gen_opc_buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:13"><expr pos:start="211:9" pos:end="211:12"><name pos:start="211:9" pos:end="211:10">lj</name><operator pos:start="211:11" pos:end="211:12">++</operator></expr>;</expr_stmt>

        <while pos:start="213:9" pos:end="217:9">while <condition pos:start="213:15" pos:end="213:23">(<expr pos:start="213:16" pos:end="213:22"><name pos:start="213:16" pos:end="213:17">lj</name> <operator pos:start="213:19" pos:end="213:20">&lt;=</operator> <name pos:start="213:22" pos:end="213:22">j</name></expr>)</condition> <block pos:start="213:25" pos:end="217:9">{<block_content pos:start="215:13" pos:end="215:50">

            <expr_stmt pos:start="215:13" pos:end="215:50"><expr pos:start="215:13" pos:end="215:49"><name pos:start="215:13" pos:end="215:45"><name pos:start="215:13" pos:end="215:19">tcg_ctx</name><operator pos:start="215:20" pos:end="215:20">.</operator><name pos:start="215:21" pos:end="215:39">gen_opc_instr_start</name><index pos:start="215:40" pos:end="215:45">[<expr pos:start="215:41" pos:end="215:44"><name pos:start="215:41" pos:end="215:42">lj</name><operator pos:start="215:43" pos:end="215:44">++</operator></expr>]</index></name> <operator pos:start="215:47" pos:end="215:47">=</operator> <literal type="number" pos:start="215:49" pos:end="215:49">0</literal></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if> <else pos:start="219:7" pos:end="230:0">else <block pos:start="219:12" pos:end="230:0">{<block_content pos:start="221:9" pos:end="223:31">

        <expr_stmt pos:start="221:9" pos:end="221:37"><expr pos:start="221:9" pos:end="221:36"><name pos:start="221:9" pos:end="221:16"><name pos:start="221:9" pos:end="221:10">tb</name><operator pos:start="221:11" pos:end="221:12">-&gt;</operator><name pos:start="221:13" pos:end="221:16">size</name></name> <operator pos:start="221:18" pos:end="221:18">=</operator> <name pos:start="221:20" pos:end="221:25"><name pos:start="221:20" pos:end="221:21">dc</name><operator pos:start="221:22" pos:end="221:23">-&gt;</operator><name pos:start="221:24" pos:end="221:25">pc</name></name> <operator pos:start="221:27" pos:end="221:27">-</operator> <name pos:start="221:29" pos:end="221:36">pc_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:31"><expr pos:start="223:9" pos:end="223:30"><name pos:start="223:9" pos:end="223:18"><name pos:start="223:9" pos:end="223:10">tb</name><operator pos:start="223:11" pos:end="223:12">-&gt;</operator><name pos:start="223:13" pos:end="223:18">icount</name></name> <operator pos:start="223:20" pos:end="223:20">=</operator> <name pos:start="223:22" pos:end="223:30">num_insns</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:ifdef pos:start="229:1" pos:end="229:18">#<cpp:directive pos:start="229:2" pos:end="229:6">ifdef</cpp:directive> <name pos:start="229:8" pos:end="229:18">DEBUG_DISAS</name></cpp:ifdef>

    <if_stmt pos:start="231:5" pos:end="246:0"><if pos:start="231:5" pos:end="246:0">if <condition pos:start="231:8" pos:end="231:46">(<expr pos:start="231:9" pos:end="231:45"><call pos:start="231:9" pos:end="231:45"><name pos:start="231:9" pos:end="231:26">qemu_loglevel_mask</name><argument_list pos:start="231:27" pos:end="231:45">(<argument pos:start="231:28" pos:end="231:44"><expr pos:start="231:28" pos:end="231:44"><name pos:start="231:28" pos:end="231:44">CPU_LOG_TB_IN_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="231:48" pos:end="246:0">{<block_content pos:start="233:9" pos:end="241:33">

        <expr_stmt pos:start="233:9" pos:end="233:23"><expr pos:start="233:9" pos:end="233:22"><call pos:start="233:9" pos:end="233:22"><name pos:start="233:9" pos:end="233:16">qemu_log</name><argument_list pos:start="233:17" pos:end="233:22">(<argument pos:start="233:18" pos:end="233:21"><expr pos:start="233:18" pos:end="233:21"><literal type="string" pos:start="233:18" pos:end="233:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:62"><expr pos:start="235:9" pos:end="235:61"><call pos:start="235:9" pos:end="235:61"><name pos:start="235:9" pos:end="235:24">log_target_disas</name><argument_list pos:start="235:25" pos:end="235:61">(<argument pos:start="235:26" pos:end="235:28"><expr pos:start="235:26" pos:end="235:28"><name pos:start="235:26" pos:end="235:28">env</name></expr></argument>, <argument pos:start="235:31" pos:end="235:38"><expr pos:start="235:31" pos:end="235:38"><name pos:start="235:31" pos:end="235:38">pc_start</name></expr></argument>, <argument pos:start="235:41" pos:end="235:57"><expr pos:start="235:41" pos:end="235:57"><name pos:start="235:41" pos:end="235:46"><name pos:start="235:41" pos:end="235:42">dc</name><operator pos:start="235:43" pos:end="235:44">-&gt;</operator><name pos:start="235:45" pos:end="235:46">pc</name></name> <operator pos:start="235:48" pos:end="235:48">-</operator> <name pos:start="235:50" pos:end="235:57">pc_start</name></expr></argument>, <argument pos:start="235:60" pos:end="235:60"><expr pos:start="235:60" pos:end="235:60"><literal type="number" pos:start="235:60" pos:end="235:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="241:33"><expr pos:start="237:9" pos:end="241:32"><call pos:start="237:9" pos:end="241:32"><name pos:start="237:9" pos:end="237:16">qemu_log</name><argument_list pos:start="237:17" pos:end="241:32">(<argument pos:start="237:18" pos:end="237:41"><expr pos:start="237:18" pos:end="237:41"><literal type="string" pos:start="237:18" pos:end="237:41">"\nisize=%d osize=%td\n"</literal></expr></argument>,

            <argument pos:start="239:13" pos:end="239:29"><expr pos:start="239:13" pos:end="239:29"><name pos:start="239:13" pos:end="239:18"><name pos:start="239:13" pos:end="239:14">dc</name><operator pos:start="239:15" pos:end="239:16">-&gt;</operator><name pos:start="239:17" pos:end="239:18">pc</name></name> <operator pos:start="239:20" pos:end="239:20">-</operator> <name pos:start="239:22" pos:end="239:29">pc_start</name></expr></argument>, <argument pos:start="239:32" pos:end="241:31"><expr pos:start="239:32" pos:end="241:31"><name pos:start="239:32" pos:end="239:50"><name pos:start="239:32" pos:end="239:38">tcg_ctx</name><operator pos:start="239:39" pos:end="239:39">.</operator><name pos:start="239:40" pos:end="239:50">gen_opc_ptr</name></name> <operator pos:start="239:52" pos:end="239:52">-</operator>

            <name pos:start="241:13" pos:end="241:31"><name pos:start="241:13" pos:end="241:19">tcg_ctx</name><operator pos:start="241:20" pos:end="241:20">.</operator><name pos:start="241:21" pos:end="241:31">gen_opc_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="245:1" pos:end="245:6">#<cpp:directive pos:start="245:2" pos:end="245:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
