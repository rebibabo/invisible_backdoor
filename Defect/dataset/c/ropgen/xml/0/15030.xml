<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15030.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">sunkbd_handle_event</name><parameter_list pos:start="1:32" pos:end="3:48">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:43">DeviceState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">dev</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:66"><decl pos:start="1:51" pos:end="1:66"><type pos:start="1:51" pos:end="1:66"><name pos:start="1:51" pos:end="1:61">QemuConsole</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">src</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:47"><decl pos:start="3:33" pos:end="3:47"><type pos:start="3:33" pos:end="3:47"><name pos:start="3:33" pos:end="3:42">InputEvent</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">evt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="95:1">{<block_content pos:start="7:5" pos:end="93:26">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">ChannelState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:41">= <expr pos:start="7:23" pos:end="7:41"><operator pos:start="7:23" pos:end="7:23">(</operator><name pos:start="7:24" pos:end="7:35">ChannelState</name> <operator pos:start="7:37" pos:end="7:37">*</operator><operator pos:start="7:38" pos:end="7:38">)</operator><name pos:start="7:39" pos:end="7:41">dev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">qcode</name></decl>, <decl pos:start="9:16" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:22">keycode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">InputKeyEvent</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">key</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><call pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:45">(<argument pos:start="15:12" pos:end="15:44"><expr pos:start="15:12" pos:end="15:44"><name pos:start="15:12" pos:end="15:20"><name pos:start="15:12" pos:end="15:14">evt</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:20">type</name></name> <operator pos:start="15:22" pos:end="15:23">==</operator> <name pos:start="15:25" pos:end="15:44">INPUT_EVENT_KIND_KEY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:7">key</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:20"><name pos:start="17:11" pos:end="17:13">evt</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:16">u</name><operator pos:start="17:17" pos:end="17:17">.</operator><name pos:start="17:18" pos:end="17:20">key</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:52"><expr pos:start="19:5" pos:end="19:51"><name pos:start="19:5" pos:end="19:9">qcode</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:51"><name pos:start="19:13" pos:end="19:41">qemu_input_key_value_to_qcode</name><argument_list pos:start="19:42" pos:end="19:51">(<argument pos:start="19:43" pos:end="19:50"><expr pos:start="19:43" pos:end="19:50"><name pos:start="19:43" pos:end="19:50"><name pos:start="19:43" pos:end="19:45">key</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:50">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="23:42"><expr pos:start="21:5" pos:end="23:41"><call pos:start="21:5" pos:end="23:41"><name pos:start="21:5" pos:end="21:30">trace_escc_sunkbd_event_in</name><argument_list pos:start="21:31" pos:end="23:41">(<argument pos:start="21:32" pos:end="21:36"><expr pos:start="21:32" pos:end="21:36"><name pos:start="21:32" pos:end="21:36">qcode</name></expr></argument>, <argument pos:start="21:39" pos:end="21:60"><expr pos:start="21:39" pos:end="21:60"><name pos:start="21:39" pos:end="21:60"><name pos:start="21:39" pos:end="21:53">QKeyCode_lookup</name><index pos:start="21:54" pos:end="21:60">[<expr pos:start="21:55" pos:end="21:59"><name pos:start="21:55" pos:end="21:59">qcode</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="23:32" pos:end="23:40"><expr pos:start="23:32" pos:end="23:40"><name pos:start="23:32" pos:end="23:40"><name pos:start="23:32" pos:end="23:34">key</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:40">down</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="51:5"><if pos:start="27:5" pos:end="51:5">if <condition pos:start="27:8" pos:end="27:38">(<expr pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:13">qcode</name> <operator pos:start="27:15" pos:end="27:16">==</operator> <name pos:start="27:18" pos:end="27:37">Q_KEY_CODE_CAPS_LOCK</name></expr>)</condition> <block pos:start="27:40" pos:end="51:5">{<block_content pos:start="29:9" pos:end="49:9">

        <if_stmt pos:start="29:9" pos:end="49:9"><if pos:start="29:9" pos:end="39:9">if <condition pos:start="29:12" pos:end="29:22">(<expr pos:start="29:13" pos:end="29:21"><name pos:start="29:13" pos:end="29:21"><name pos:start="29:13" pos:end="29:15">key</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:21">down</name></name></expr>)</condition> <block pos:start="29:24" pos:end="39:9">{<block_content pos:start="31:13" pos:end="37:13">

            <expr_stmt pos:start="31:13" pos:end="31:35"><expr pos:start="31:13" pos:end="31:34"><name pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:29">caps_lock_mode</name></name> <operator pos:start="31:31" pos:end="31:32">^=</operator> <literal type="number" pos:start="31:34" pos:end="31:34">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="33:13" pos:end="37:13"><if pos:start="33:13" pos:end="37:13">if <condition pos:start="33:16" pos:end="33:39">(<expr pos:start="33:17" pos:end="33:38"><name pos:start="33:17" pos:end="33:33"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:33">caps_lock_mode</name></name> <operator pos:start="33:35" pos:end="33:36">==</operator> <literal type="number" pos:start="33:38" pos:end="33:38">2</literal></expr>)</condition> <block pos:start="33:41" pos:end="37:13">{<block_content pos:start="35:17" pos:end="35:23">

                <return pos:start="35:17" pos:end="35:23">return;</return> <comment type="block" pos:start="35:25" pos:end="35:47">/* Drop second press */</comment>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="49:9">else <block pos:start="39:16" pos:end="49:9">{<block_content pos:start="41:13" pos:end="47:13">

            <expr_stmt pos:start="41:13" pos:end="41:35"><expr pos:start="41:13" pos:end="41:34"><name pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:29">caps_lock_mode</name></name> <operator pos:start="41:31" pos:end="41:32">^=</operator> <literal type="number" pos:start="41:34" pos:end="41:34">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="47:13"><if pos:start="43:13" pos:end="47:13">if <condition pos:start="43:16" pos:end="43:39">(<expr pos:start="43:17" pos:end="43:38"><name pos:start="43:17" pos:end="43:33"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:33">caps_lock_mode</name></name> <operator pos:start="43:35" pos:end="43:36">==</operator> <literal type="number" pos:start="43:38" pos:end="43:38">3</literal></expr>)</condition> <block pos:start="43:41" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:23">

                <return pos:start="45:17" pos:end="45:23">return;</return> <comment type="block" pos:start="45:25" pos:end="45:48">/* Drop first release */</comment>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="79:5"><if pos:start="55:5" pos:end="79:5">if <condition pos:start="55:8" pos:end="55:37">(<expr pos:start="55:9" pos:end="55:36"><name pos:start="55:9" pos:end="55:13">qcode</name> <operator pos:start="55:15" pos:end="55:16">==</operator> <name pos:start="55:18" pos:end="55:36">Q_KEY_CODE_NUM_LOCK</name></expr>)</condition> <block pos:start="55:39" pos:end="79:5">{<block_content pos:start="57:9" pos:end="77:9">

        <if_stmt pos:start="57:9" pos:end="77:9"><if pos:start="57:9" pos:end="67:9">if <condition pos:start="57:12" pos:end="57:22">(<expr pos:start="57:13" pos:end="57:21"><name pos:start="57:13" pos:end="57:21"><name pos:start="57:13" pos:end="57:15">key</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:21">down</name></name></expr>)</condition> <block pos:start="57:24" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:13">

            <expr_stmt pos:start="59:13" pos:end="59:34"><expr pos:start="59:13" pos:end="59:33"><name pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:28">num_lock_mode</name></name> <operator pos:start="59:30" pos:end="59:31">^=</operator> <literal type="number" pos:start="59:33" pos:end="59:33">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="61:13" pos:end="65:13"><if pos:start="61:13" pos:end="65:13">if <condition pos:start="61:16" pos:end="61:38">(<expr pos:start="61:17" pos:end="61:37"><name pos:start="61:17" pos:end="61:32"><name pos:start="61:17" pos:end="61:17">s</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:32">num_lock_mode</name></name> <operator pos:start="61:34" pos:end="61:35">==</operator> <literal type="number" pos:start="61:37" pos:end="61:37">2</literal></expr>)</condition> <block pos:start="61:40" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:23">

                <return pos:start="63:17" pos:end="63:23">return;</return> <comment type="block" pos:start="63:25" pos:end="63:47">/* Drop second press */</comment>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="67:11" pos:end="77:9">else <block pos:start="67:16" pos:end="77:9">{<block_content pos:start="69:13" pos:end="75:13">

            <expr_stmt pos:start="69:13" pos:end="69:34"><expr pos:start="69:13" pos:end="69:33"><name pos:start="69:13" pos:end="69:28"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:28">num_lock_mode</name></name> <operator pos:start="69:30" pos:end="69:31">^=</operator> <literal type="number" pos:start="69:33" pos:end="69:33">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="75:13"><if pos:start="71:13" pos:end="75:13">if <condition pos:start="71:16" pos:end="71:38">(<expr pos:start="71:17" pos:end="71:37"><name pos:start="71:17" pos:end="71:32"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:32">num_lock_mode</name></name> <operator pos:start="71:34" pos:end="71:35">==</operator> <literal type="number" pos:start="71:37" pos:end="71:37">3</literal></expr>)</condition> <block pos:start="71:40" pos:end="75:13">{<block_content pos:start="73:17" pos:end="73:23">

                <return pos:start="73:17" pos:end="73:23">return;</return> <comment type="block" pos:start="73:25" pos:end="73:48">/* Drop first release */</comment>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:38"><expr pos:start="83:5" pos:end="83:37"><name pos:start="83:5" pos:end="83:11">keycode</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <name pos:start="83:15" pos:end="83:37"><name pos:start="83:15" pos:end="83:30">qcode_to_keycode</name><index pos:start="83:31" pos:end="83:37">[<expr pos:start="83:32" pos:end="83:36"><name pos:start="83:32" pos:end="83:36">qcode</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:19">(<expr pos:start="85:9" pos:end="85:18"><operator pos:start="85:9" pos:end="85:9">!</operator><name pos:start="85:10" pos:end="85:18"><name pos:start="85:10" pos:end="85:12">key</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:18">down</name></name></expr>)</condition> <block pos:start="85:21" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:24">

        <expr_stmt pos:start="87:9" pos:end="87:24"><expr pos:start="87:9" pos:end="87:23"><name pos:start="87:9" pos:end="87:15">keycode</name> <operator pos:start="87:17" pos:end="87:18">|=</operator> <literal type="number" pos:start="87:20" pos:end="87:23">0x80</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:41"><expr pos:start="91:5" pos:end="91:40"><call pos:start="91:5" pos:end="91:40"><name pos:start="91:5" pos:end="91:31">trace_escc_sunkbd_event_out</name><argument_list pos:start="91:32" pos:end="91:40">(<argument pos:start="91:33" pos:end="91:39"><expr pos:start="91:33" pos:end="91:39"><name pos:start="91:33" pos:end="91:39">keycode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:26"><expr pos:start="93:5" pos:end="93:25"><call pos:start="93:5" pos:end="93:25"><name pos:start="93:5" pos:end="93:13">put_queue</name><argument_list pos:start="93:14" pos:end="93:25">(<argument pos:start="93:15" pos:end="93:15"><expr pos:start="93:15" pos:end="93:15"><name pos:start="93:15" pos:end="93:15">s</name></expr></argument>, <argument pos:start="93:18" pos:end="93:24"><expr pos:start="93:18" pos:end="93:24"><name pos:start="93:18" pos:end="93:24">keycode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
