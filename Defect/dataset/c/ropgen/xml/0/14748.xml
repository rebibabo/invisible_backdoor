<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14748.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">check_mc</name><parameter_list pos:start="1:21" pos:end="1:26">(<parameter pos:start="1:22" pos:end="1:25"><decl pos:start="1:22" pos:end="1:25"><type pos:start="1:22" pos:end="1:25"><name pos:start="1:22" pos:end="1:25">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:17">

    <expr_stmt pos:start="5:5" pos:end="5:50"><expr pos:start="5:5" pos:end="5:49"><call pos:start="5:5" pos:end="5:49"><name pos:start="5:5" pos:end="5:20">LOCAL_ALIGNED_32</name><argument_list pos:start="5:21" pos:end="5:49">(<argument pos:start="5:22" pos:end="5:28"><expr pos:start="5:22" pos:end="5:28"><name pos:start="5:22" pos:end="5:28">uint8_t</name></expr></argument>, <argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">buf</name></expr></argument>, <argument pos:start="5:36" pos:end="5:48"><expr pos:start="5:36" pos:end="5:48"><index pos:start="5:36" pos:end="5:48">[<expr pos:start="5:37" pos:end="5:47"><literal type="number" pos:start="5:37" pos:end="5:38">72</literal> <operator pos:start="5:40" pos:end="5:40">*</operator> <literal type="number" pos:start="5:42" pos:end="5:43">72</literal> <operator pos:start="5:45" pos:end="5:45">*</operator> <literal type="number" pos:start="5:47" pos:end="5:47">2</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:51"><expr pos:start="7:5" pos:end="7:50"><call pos:start="7:5" pos:end="7:50"><name pos:start="7:5" pos:end="7:20">LOCAL_ALIGNED_32</name><argument_list pos:start="7:21" pos:end="7:50">(<argument pos:start="7:22" pos:end="7:28"><expr pos:start="7:22" pos:end="7:28"><name pos:start="7:22" pos:end="7:28">uint8_t</name></expr></argument>, <argument pos:start="7:31" pos:end="7:34"><expr pos:start="7:31" pos:end="7:34"><name pos:start="7:31" pos:end="7:34">dst0</name></expr></argument>, <argument pos:start="7:37" pos:end="7:49"><expr pos:start="7:37" pos:end="7:49"><index pos:start="7:37" pos:end="7:49">[<expr pos:start="7:38" pos:end="7:48"><literal type="number" pos:start="7:38" pos:end="7:39">64</literal> <operator pos:start="7:41" pos:end="7:41">*</operator> <literal type="number" pos:start="7:43" pos:end="7:44">64</literal> <operator pos:start="7:46" pos:end="7:46">*</operator> <literal type="number" pos:start="7:48" pos:end="7:48">2</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:51"><expr pos:start="9:5" pos:end="9:50"><call pos:start="9:5" pos:end="9:50"><name pos:start="9:5" pos:end="9:20">LOCAL_ALIGNED_32</name><argument_list pos:start="9:21" pos:end="9:50">(<argument pos:start="9:22" pos:end="9:28"><expr pos:start="9:22" pos:end="9:28"><name pos:start="9:22" pos:end="9:28">uint8_t</name></expr></argument>, <argument pos:start="9:31" pos:end="9:34"><expr pos:start="9:31" pos:end="9:34"><name pos:start="9:31" pos:end="9:34">dst1</name></expr></argument>, <argument pos:start="9:37" pos:end="9:49"><expr pos:start="9:37" pos:end="9:49"><index pos:start="9:37" pos:end="9:49">[<expr pos:start="9:38" pos:end="9:48"><literal type="number" pos:start="9:38" pos:end="9:39">64</literal> <operator pos:start="9:41" pos:end="9:41">*</operator> <literal type="number" pos:start="9:43" pos:end="9:44">64</literal> <operator pos:start="9:46" pos:end="9:46">*</operator> <literal type="number" pos:start="9:48" pos:end="9:48">2</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">VP9DSPContext</name></type> <name pos:start="11:19" pos:end="11:21">dsp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:45"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">op</name></decl>, <decl pos:start="13:13" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:13" pos:end="13:17">hsize</name></decl>, <decl pos:start="13:20" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:28">bit_depth</name></decl>, <decl pos:start="13:31" pos:end="13:36"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:31" pos:end="13:36">filter</name></decl>, <decl pos:start="13:39" pos:end="13:40"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:39" pos:end="13:40">dx</name></decl>, <decl pos:start="13:43" pos:end="13:44"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:43" pos:end="13:44">dy</name></decl>;</decl_stmt>

    <macro pos:start="15:5" pos:end="19:39"><name pos:start="15:5" pos:end="15:16">declare_func</name><argument_list pos:start="15:17" pos:end="19:39">(<argument pos:start="15:18" pos:end="15:21">void</argument>, <argument pos:start="15:24" pos:end="15:35">uint8_t *dst</argument>, <argument pos:start="15:38" pos:end="15:57">ptrdiff_t dst_stride</argument>,

                 <argument pos:start="17:18" pos:end="17:35">const uint8_t *ref</argument>, <argument pos:start="17:38" pos:end="17:57">ptrdiff_t ref_stride</argument>,

                 <argument pos:start="19:18" pos:end="19:22">int h</argument>, <argument pos:start="19:25" pos:end="19:30">int mx</argument>, <argument pos:start="19:33" pos:end="19:38">int my</argument>)</argument_list></macro><empty_stmt pos:start="19:40" pos:end="19:40">;</empty_stmt>

    <decl_stmt pos:start="21:5" pos:end="25:6"><decl pos:start="21:5" pos:end="25:5"><type pos:start="21:5" pos:end="21:28"><specifier pos:start="21:5" pos:end="21:10">static</specifier> <specifier pos:start="21:12" pos:end="21:16">const</specifier> <name pos:start="21:18" pos:end="21:21">char</name> <modifier pos:start="21:23" pos:end="21:23">*</modifier><specifier pos:start="21:24" pos:end="21:28">const</specifier></type> <name pos:start="21:30" pos:end="21:44"><name pos:start="21:30" pos:end="21:41">filter_names</name><index pos:start="21:42" pos:end="21:44">[<expr pos:start="21:43" pos:end="21:43"><literal type="number" pos:start="21:43" pos:end="21:43">4</literal></expr>]</index></name> <init pos:start="21:46" pos:end="25:5">= <expr pos:start="21:48" pos:end="25:5"><block pos:start="21:48" pos:end="25:5">{

        <expr pos:start="23:9" pos:end="23:21"><literal type="string" pos:start="23:9" pos:end="23:21">"8tap_smooth"</literal></expr>, <expr pos:start="23:24" pos:end="23:37"><literal type="string" pos:start="23:24" pos:end="23:37">"8tap_regular"</literal></expr>, <expr pos:start="23:40" pos:end="23:51"><literal type="string" pos:start="23:40" pos:end="23:51">"8tap_sharp"</literal></expr>, <expr pos:start="23:54" pos:end="23:60"><literal type="string" pos:start="23:54" pos:end="23:60">"bilin"</literal></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:81"><decl pos:start="27:5" pos:end="27:80"><type pos:start="27:5" pos:end="27:28"><specifier pos:start="27:5" pos:end="27:10">static</specifier> <specifier pos:start="27:12" pos:end="27:16">const</specifier> <name pos:start="27:18" pos:end="27:21">char</name> <modifier pos:start="27:23" pos:end="27:23">*</modifier><specifier pos:start="27:24" pos:end="27:28">const</specifier></type> <name pos:start="27:30" pos:end="27:47"><name pos:start="27:30" pos:end="27:41">subpel_names</name><index pos:start="27:42" pos:end="27:44">[<expr pos:start="27:43" pos:end="27:43"><literal type="number" pos:start="27:43" pos:end="27:43">2</literal></expr>]</index><index pos:start="27:45" pos:end="27:47">[<expr pos:start="27:46" pos:end="27:46"><literal type="number" pos:start="27:46" pos:end="27:46">2</literal></expr>]</index></name> <init pos:start="27:49" pos:end="27:80">= <expr pos:start="27:51" pos:end="27:80"><block pos:start="27:51" pos:end="27:80">{ <expr pos:start="27:53" pos:end="27:63"><block pos:start="27:53" pos:end="27:63">{ <expr pos:start="27:55" pos:end="27:56"><literal type="string" pos:start="27:55" pos:end="27:56">""</literal></expr>, <expr pos:start="27:59" pos:end="27:61"><literal type="string" pos:start="27:59" pos:end="27:61">"h"</literal></expr> }</block></expr>, <expr pos:start="27:66" pos:end="27:78"><block pos:start="27:66" pos:end="27:78">{ <expr pos:start="27:68" pos:end="27:70"><literal type="string" pos:start="27:68" pos:end="27:70">"v"</literal></expr>, <expr pos:start="27:73" pos:end="27:76"><literal type="string" pos:start="27:73" pos:end="27:76">"hv"</literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:60"><decl pos:start="29:5" pos:end="29:59"><type pos:start="29:5" pos:end="29:28"><specifier pos:start="29:5" pos:end="29:10">static</specifier> <specifier pos:start="29:12" pos:end="29:16">const</specifier> <name pos:start="29:18" pos:end="29:21">char</name> <modifier pos:start="29:23" pos:end="29:23">*</modifier><specifier pos:start="29:24" pos:end="29:28">const</specifier></type> <name pos:start="29:30" pos:end="29:40"><name pos:start="29:30" pos:end="29:37">op_names</name><index pos:start="29:38" pos:end="29:40">[<expr pos:start="29:39" pos:end="29:39"><literal type="number" pos:start="29:39" pos:end="29:39">2</literal></expr>]</index></name> <init pos:start="29:42" pos:end="29:59">= <expr pos:start="29:44" pos:end="29:59"><block pos:start="29:44" pos:end="29:59">{ <expr pos:start="29:46" pos:end="29:50"><literal type="string" pos:start="29:46" pos:end="29:50">"put"</literal></expr>, <expr pos:start="29:53" pos:end="29:57"><literal type="string" pos:start="29:53" pos:end="29:57">"avg"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:18"><decl pos:start="31:5" pos:end="31:17"><type pos:start="31:5" pos:end="31:8"><name pos:start="31:5" pos:end="31:8">char</name></type> <name pos:start="31:10" pos:end="31:17"><name pos:start="31:10" pos:end="31:12">str</name><index pos:start="31:13" pos:end="31:17">[<expr pos:start="31:14" pos:end="31:16"><literal type="number" pos:start="31:14" pos:end="31:16">256</literal></expr>]</index></name></decl>;</decl_stmt>



    <for pos:start="35:5" pos:end="125:5">for <control pos:start="35:9" pos:end="35:30">(<init pos:start="35:10" pos:end="35:16"><expr pos:start="35:10" pos:end="35:15"><name pos:start="35:10" pos:end="35:11">op</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <literal type="number" pos:start="35:15" pos:end="35:15">0</literal></expr>;</init> <condition pos:start="35:18" pos:end="35:24"><expr pos:start="35:18" pos:end="35:23"><name pos:start="35:18" pos:end="35:19">op</name> <operator pos:start="35:21" pos:end="35:21">&lt;</operator> <literal type="number" pos:start="35:23" pos:end="35:23">2</literal></expr>;</condition> <incr pos:start="35:26" pos:end="35:29"><expr pos:start="35:26" pos:end="35:29"><name pos:start="35:26" pos:end="35:27">op</name><operator pos:start="35:28" pos:end="35:29">++</operator></expr></incr>)</control> <block pos:start="35:32" pos:end="125:5">{<block_content pos:start="37:9" pos:end="123:9">

        <for pos:start="37:9" pos:end="123:9">for <control pos:start="37:13" pos:end="37:60">(<init pos:start="37:14" pos:end="37:27"><expr pos:start="37:14" pos:end="37:26"><name pos:start="37:14" pos:end="37:22">bit_depth</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <literal type="number" pos:start="37:26" pos:end="37:26">8</literal></expr>;</init> <condition pos:start="37:29" pos:end="37:44"><expr pos:start="37:29" pos:end="37:43"><name pos:start="37:29" pos:end="37:37">bit_depth</name> <operator pos:start="37:39" pos:end="37:40">&lt;=</operator> <literal type="number" pos:start="37:42" pos:end="37:43">12</literal></expr>;</condition> <incr pos:start="37:46" pos:end="37:59"><expr pos:start="37:46" pos:end="37:59"><name pos:start="37:46" pos:end="37:54">bit_depth</name> <operator pos:start="37:56" pos:end="37:57">+=</operator> <literal type="number" pos:start="37:59" pos:end="37:59">2</literal></expr></incr>)</control> <block pos:start="37:62" pos:end="123:9">{<block_content pos:start="39:13" pos:end="121:13">

            <expr_stmt pos:start="39:13" pos:end="39:47"><expr pos:start="39:13" pos:end="39:46"><call pos:start="39:13" pos:end="39:46"><name pos:start="39:13" pos:end="39:26">ff_vp9dsp_init</name><argument_list pos:start="39:27" pos:end="39:46">(<argument pos:start="39:28" pos:end="39:31"><expr pos:start="39:28" pos:end="39:31"><operator pos:start="39:28" pos:end="39:28">&amp;</operator><name pos:start="39:29" pos:end="39:31">dsp</name></expr></argument>, <argument pos:start="39:34" pos:end="39:42"><expr pos:start="39:34" pos:end="39:42"><name pos:start="39:34" pos:end="39:42">bit_depth</name></expr></argument>, <argument pos:start="39:45" pos:end="39:45"><expr pos:start="39:45" pos:end="39:45"><literal type="number" pos:start="39:45" pos:end="39:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="41:13" pos:end="121:13">for <control pos:start="41:17" pos:end="41:47">(<init pos:start="41:18" pos:end="41:27"><expr pos:start="41:18" pos:end="41:26"><name pos:start="41:18" pos:end="41:22">hsize</name> <operator pos:start="41:24" pos:end="41:24">=</operator> <literal type="number" pos:start="41:26" pos:end="41:26">0</literal></expr>;</init> <condition pos:start="41:29" pos:end="41:38"><expr pos:start="41:29" pos:end="41:37"><name pos:start="41:29" pos:end="41:33">hsize</name> <operator pos:start="41:35" pos:end="41:35">&lt;</operator> <literal type="number" pos:start="41:37" pos:end="41:37">5</literal></expr>;</condition> <incr pos:start="41:40" pos:end="41:46"><expr pos:start="41:40" pos:end="41:46"><name pos:start="41:40" pos:end="41:44">hsize</name><operator pos:start="41:45" pos:end="41:46">++</operator></expr></incr>)</control> <block pos:start="41:49" pos:end="121:13">{<block_content pos:start="43:17" pos:end="119:17">

                <decl_stmt pos:start="43:17" pos:end="43:39"><decl pos:start="43:17" pos:end="43:38"><type pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">int</name></type> <name pos:start="43:21" pos:end="43:24">size</name> <init pos:start="43:26" pos:end="43:38">= <expr pos:start="43:28" pos:end="43:38"><literal type="number" pos:start="43:28" pos:end="43:29">64</literal> <operator pos:start="43:31" pos:end="43:32">&gt;&gt;</operator> <name pos:start="43:34" pos:end="43:38">hsize</name></expr></init></decl>;</decl_stmt>



                <for pos:start="47:17" pos:end="119:17">for <control pos:start="47:21" pos:end="47:54">(<init pos:start="47:22" pos:end="47:32"><expr pos:start="47:22" pos:end="47:31"><name pos:start="47:22" pos:end="47:27">filter</name> <operator pos:start="47:29" pos:end="47:29">=</operator> <literal type="number" pos:start="47:31" pos:end="47:31">0</literal></expr>;</init> <condition pos:start="47:34" pos:end="47:44"><expr pos:start="47:34" pos:end="47:43"><name pos:start="47:34" pos:end="47:39">filter</name> <operator pos:start="47:41" pos:end="47:41">&lt;</operator> <literal type="number" pos:start="47:43" pos:end="47:43">4</literal></expr>;</condition> <incr pos:start="47:46" pos:end="47:53"><expr pos:start="47:46" pos:end="47:53"><name pos:start="47:46" pos:end="47:51">filter</name><operator pos:start="47:52" pos:end="47:53">++</operator></expr></incr>)</control> <block pos:start="47:56" pos:end="119:17">{<block_content pos:start="49:21" pos:end="117:21">

                    <for pos:start="49:21" pos:end="117:21">for <control pos:start="49:25" pos:end="49:46">(<init pos:start="49:26" pos:end="49:32"><expr pos:start="49:26" pos:end="49:31"><name pos:start="49:26" pos:end="49:27">dx</name> <operator pos:start="49:29" pos:end="49:29">=</operator> <literal type="number" pos:start="49:31" pos:end="49:31">0</literal></expr>;</init> <condition pos:start="49:34" pos:end="49:40"><expr pos:start="49:34" pos:end="49:39"><name pos:start="49:34" pos:end="49:35">dx</name> <operator pos:start="49:37" pos:end="49:37">&lt;</operator> <literal type="number" pos:start="49:39" pos:end="49:39">2</literal></expr>;</condition> <incr pos:start="49:42" pos:end="49:45"><expr pos:start="49:42" pos:end="49:45"><name pos:start="49:42" pos:end="49:43">dx</name><operator pos:start="49:44" pos:end="49:45">++</operator></expr></incr>)</control> <block pos:start="49:48" pos:end="117:21">{<block_content pos:start="51:25" pos:end="115:25">

                        <for pos:start="51:25" pos:end="115:25">for <control pos:start="51:29" pos:end="51:50">(<init pos:start="51:30" pos:end="51:36"><expr pos:start="51:30" pos:end="51:35"><name pos:start="51:30" pos:end="51:31">dy</name> <operator pos:start="51:33" pos:end="51:33">=</operator> <literal type="number" pos:start="51:35" pos:end="51:35">0</literal></expr>;</init> <condition pos:start="51:38" pos:end="51:44"><expr pos:start="51:38" pos:end="51:43"><name pos:start="51:38" pos:end="51:39">dy</name> <operator pos:start="51:41" pos:end="51:41">&lt;</operator> <literal type="number" pos:start="51:43" pos:end="51:43">2</literal></expr>;</condition> <incr pos:start="51:46" pos:end="51:49"><expr pos:start="51:46" pos:end="51:49"><name pos:start="51:46" pos:end="51:47">dy</name><operator pos:start="51:48" pos:end="51:49">++</operator></expr></incr>)</control> <block pos:start="51:52" pos:end="115:25">{<block_content pos:start="53:29" pos:end="113:29">

                            <if_stmt pos:start="53:29" pos:end="65:29"><if pos:start="53:29" pos:end="61:29">if <condition pos:start="53:32" pos:end="53:41">(<expr pos:start="53:33" pos:end="53:40"><name pos:start="53:33" pos:end="53:34">dx</name> <operator pos:start="53:36" pos:end="53:37">||</operator> <name pos:start="53:39" pos:end="53:40">dy</name></expr>)</condition> <block pos:start="53:43" pos:end="61:29">{<block_content pos:start="55:33" pos:end="59:62">

                                <expr_stmt pos:start="55:33" pos:end="59:62"><expr pos:start="55:33" pos:end="59:61"><call pos:start="55:33" pos:end="59:61"><name pos:start="55:33" pos:end="55:39">sprintf</name><argument_list pos:start="55:40" pos:end="59:61">(<argument pos:start="55:41" pos:end="55:43"><expr pos:start="55:41" pos:end="55:43"><name pos:start="55:41" pos:end="55:43">str</name></expr></argument>, <argument pos:start="55:46" pos:end="55:57"><expr pos:start="55:46" pos:end="55:57"><literal type="string" pos:start="55:46" pos:end="55:57">"%s_%s_%d%s"</literal></expr></argument>, <argument pos:start="55:60" pos:end="55:71"><expr pos:start="55:60" pos:end="55:71"><name pos:start="55:60" pos:end="55:71"><name pos:start="55:60" pos:end="55:67">op_names</name><index pos:start="55:68" pos:end="55:71">[<expr pos:start="55:69" pos:end="55:70"><name pos:start="55:69" pos:end="55:70">op</name></expr>]</index></name></expr></argument>,

                                        <argument pos:start="57:41" pos:end="57:60"><expr pos:start="57:41" pos:end="57:60"><name pos:start="57:41" pos:end="57:60"><name pos:start="57:41" pos:end="57:52">filter_names</name><index pos:start="57:53" pos:end="57:60">[<expr pos:start="57:54" pos:end="57:59"><name pos:start="57:54" pos:end="57:59">filter</name></expr>]</index></name></expr></argument>, <argument pos:start="57:63" pos:end="57:66"><expr pos:start="57:63" pos:end="57:66"><name pos:start="57:63" pos:end="57:66">size</name></expr></argument>,

                                        <argument pos:start="59:41" pos:end="59:60"><expr pos:start="59:41" pos:end="59:60"><name pos:start="59:41" pos:end="59:60"><name pos:start="59:41" pos:end="59:52">subpel_names</name><index pos:start="59:53" pos:end="59:56">[<expr pos:start="59:54" pos:end="59:55"><name pos:start="59:54" pos:end="59:55">dy</name></expr>]</index><index pos:start="59:57" pos:end="59:60">[<expr pos:start="59:58" pos:end="59:59"><name pos:start="59:58" pos:end="59:59">dx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="61:31" pos:end="65:29">else <block pos:start="61:36" pos:end="65:29">{<block_content pos:start="63:33" pos:end="63:73">

                                <expr_stmt pos:start="63:33" pos:end="63:73"><expr pos:start="63:33" pos:end="63:72"><call pos:start="63:33" pos:end="63:72"><name pos:start="63:33" pos:end="63:39">sprintf</name><argument_list pos:start="63:40" pos:end="63:72">(<argument pos:start="63:41" pos:end="63:43"><expr pos:start="63:41" pos:end="63:43"><name pos:start="63:41" pos:end="63:43">str</name></expr></argument>, <argument pos:start="63:46" pos:end="63:51"><expr pos:start="63:46" pos:end="63:51"><literal type="string" pos:start="63:46" pos:end="63:51">"%s%d"</literal></expr></argument>, <argument pos:start="63:54" pos:end="63:65"><expr pos:start="63:54" pos:end="63:65"><name pos:start="63:54" pos:end="63:65"><name pos:start="63:54" pos:end="63:61">op_names</name><index pos:start="63:62" pos:end="63:65">[<expr pos:start="63:63" pos:end="63:64"><name pos:start="63:63" pos:end="63:64">op</name></expr>]</index></name></expr></argument>, <argument pos:start="63:68" pos:end="63:71"><expr pos:start="63:68" pos:end="63:71"><name pos:start="63:68" pos:end="63:71">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <if_stmt pos:start="67:29" pos:end="113:29"><if pos:start="67:29" pos:end="113:29">if <condition pos:start="67:32" pos:end="69:75">(<expr pos:start="67:33" pos:end="69:74"><call pos:start="67:33" pos:end="69:74"><name pos:start="67:33" pos:end="67:42">check_func</name><argument_list pos:start="67:43" pos:end="69:74">(<argument pos:start="67:44" pos:end="67:76"><expr pos:start="67:44" pos:end="67:76"><name pos:start="67:44" pos:end="67:76"><name pos:start="67:44" pos:end="67:46">dsp</name><operator pos:start="67:47" pos:end="67:47">.</operator><name pos:start="67:48" pos:end="67:49">mc</name><index pos:start="67:50" pos:end="67:56">[<expr pos:start="67:51" pos:end="67:55"><name pos:start="67:51" pos:end="67:55">hsize</name></expr>]</index><index pos:start="67:57" pos:end="67:64">[<expr pos:start="67:58" pos:end="67:63"><name pos:start="67:58" pos:end="67:63">filter</name></expr>]</index><index pos:start="67:65" pos:end="67:68">[<expr pos:start="67:66" pos:end="67:67"><name pos:start="67:66" pos:end="67:67">op</name></expr>]</index><index pos:start="67:69" pos:end="67:72">[<expr pos:start="67:70" pos:end="67:71"><name pos:start="67:70" pos:end="67:71">dx</name></expr>]</index><index pos:start="67:73" pos:end="67:76">[<expr pos:start="67:74" pos:end="67:75"><name pos:start="67:74" pos:end="67:75">dy</name></expr>]</index></name></expr></argument>,

                                           <argument pos:start="69:44" pos:end="69:57"><expr pos:start="69:44" pos:end="69:57"><literal type="string" pos:start="69:44" pos:end="69:57">"vp9_%s_%dbpp"</literal></expr></argument>, <argument pos:start="69:60" pos:end="69:62"><expr pos:start="69:60" pos:end="69:62"><name pos:start="69:60" pos:end="69:62">str</name></expr></argument>, <argument pos:start="69:65" pos:end="69:73"><expr pos:start="69:65" pos:end="69:73"><name pos:start="69:65" pos:end="69:73">bit_depth</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:77" pos:end="113:29">{<block_content pos:start="71:33" pos:end="111:56">

                                <decl_stmt pos:start="71:33" pos:end="71:67"><decl pos:start="71:33" pos:end="71:66"><type pos:start="71:33" pos:end="71:35"><name pos:start="71:33" pos:end="71:35">int</name></type> <name pos:start="71:37" pos:end="71:38">mx</name> <init pos:start="71:40" pos:end="71:66">= <expr pos:start="71:42" pos:end="71:66"><ternary pos:start="71:42" pos:end="71:66"><condition pos:start="71:42" pos:end="71:45"><expr pos:start="71:42" pos:end="71:43"><name pos:start="71:42" pos:end="71:43">dx</name></expr> ?</condition><then pos:start="71:47" pos:end="71:62"> <expr pos:start="71:47" pos:end="71:62"><literal type="number" pos:start="71:47" pos:end="71:49">1</literal> <operator pos:start="71:49" pos:end="71:49">+</operator> <operator pos:start="71:51" pos:end="71:51">(</operator><call pos:start="71:52" pos:end="71:56"><name pos:start="71:52" pos:end="71:54">rnd</name><argument_list pos:start="71:55" pos:end="71:56">()</argument_list></call> <operator pos:start="71:58" pos:end="71:58">%</operator> <literal type="number" pos:start="71:60" pos:end="71:61">14</literal><operator pos:start="71:62" pos:end="71:62">)</operator></expr> </then><else pos:start="71:64" pos:end="71:66">: <expr pos:start="71:66" pos:end="71:66"><literal type="number" pos:start="71:66" pos:end="71:66">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                                <decl_stmt pos:start="73:33" pos:end="73:67"><decl pos:start="73:33" pos:end="73:66"><type pos:start="73:33" pos:end="73:35"><name pos:start="73:33" pos:end="73:35">int</name></type> <name pos:start="73:37" pos:end="73:38">my</name> <init pos:start="73:40" pos:end="73:66">= <expr pos:start="73:42" pos:end="73:66"><ternary pos:start="73:42" pos:end="73:66"><condition pos:start="73:42" pos:end="73:45"><expr pos:start="73:42" pos:end="73:43"><name pos:start="73:42" pos:end="73:43">dy</name></expr> ?</condition><then pos:start="73:47" pos:end="73:62"> <expr pos:start="73:47" pos:end="73:62"><literal type="number" pos:start="73:47" pos:end="73:49">1</literal> <operator pos:start="73:49" pos:end="73:49">+</operator> <operator pos:start="73:51" pos:end="73:51">(</operator><call pos:start="73:52" pos:end="73:56"><name pos:start="73:52" pos:end="73:54">rnd</name><argument_list pos:start="73:55" pos:end="73:56">()</argument_list></call> <operator pos:start="73:58" pos:end="73:58">%</operator> <literal type="number" pos:start="73:60" pos:end="73:61">14</literal><operator pos:start="73:62" pos:end="73:62">)</operator></expr> </then><else pos:start="73:64" pos:end="73:66">: <expr pos:start="73:66" pos:end="73:66"><literal type="number" pos:start="73:66" pos:end="73:66">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                                <expr_stmt pos:start="75:33" pos:end="75:52"><expr pos:start="75:33" pos:end="75:51"><call pos:start="75:33" pos:end="75:51"><name pos:start="75:33" pos:end="75:49">randomize_buffers</name><argument_list pos:start="75:50" pos:end="75:51">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="77:33" pos:end="81:55"><expr pos:start="77:33" pos:end="81:54"><call pos:start="77:33" pos:end="81:54"><name pos:start="77:33" pos:end="77:40">call_ref</name><argument_list pos:start="77:41" pos:end="81:54">(<argument pos:start="77:42" pos:end="77:45"><expr pos:start="77:42" pos:end="77:45"><name pos:start="77:42" pos:end="77:45">dst0</name></expr></argument>, <argument pos:start="77:48" pos:end="77:66"><expr pos:start="77:48" pos:end="77:66"><name pos:start="77:48" pos:end="77:51">size</name> <operator pos:start="77:53" pos:end="77:53">*</operator> <name pos:start="77:55" pos:end="77:66">SIZEOF_PIXEL</name></expr></argument>,

                                         <argument pos:start="79:42" pos:end="79:44"><expr pos:start="79:42" pos:end="79:44"><name pos:start="79:42" pos:end="79:44">src</name></expr></argument>, <argument pos:start="79:47" pos:end="79:75"><expr pos:start="79:47" pos:end="79:75"><name pos:start="79:47" pos:end="79:60">SRC_BUF_STRIDE</name> <operator pos:start="79:62" pos:end="79:62">*</operator> <name pos:start="79:64" pos:end="79:75">SIZEOF_PIXEL</name></expr></argument>,

                                         <argument pos:start="81:42" pos:end="81:45"><expr pos:start="81:42" pos:end="81:45"><name pos:start="81:42" pos:end="81:45">size</name></expr></argument>, <argument pos:start="81:48" pos:end="81:49"><expr pos:start="81:48" pos:end="81:49"><name pos:start="81:48" pos:end="81:49">mx</name></expr></argument>, <argument pos:start="81:52" pos:end="81:53"><expr pos:start="81:52" pos:end="81:53"><name pos:start="81:52" pos:end="81:53">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="83:33" pos:end="87:55"><expr pos:start="83:33" pos:end="87:54"><call pos:start="83:33" pos:end="87:54"><name pos:start="83:33" pos:end="83:40">call_new</name><argument_list pos:start="83:41" pos:end="87:54">(<argument pos:start="83:42" pos:end="83:45"><expr pos:start="83:42" pos:end="83:45"><name pos:start="83:42" pos:end="83:45">dst1</name></expr></argument>, <argument pos:start="83:48" pos:end="83:66"><expr pos:start="83:48" pos:end="83:66"><name pos:start="83:48" pos:end="83:51">size</name> <operator pos:start="83:53" pos:end="83:53">*</operator> <name pos:start="83:55" pos:end="83:66">SIZEOF_PIXEL</name></expr></argument>,

                                         <argument pos:start="85:42" pos:end="85:44"><expr pos:start="85:42" pos:end="85:44"><name pos:start="85:42" pos:end="85:44">src</name></expr></argument>, <argument pos:start="85:47" pos:end="85:75"><expr pos:start="85:47" pos:end="85:75"><name pos:start="85:47" pos:end="85:60">SRC_BUF_STRIDE</name> <operator pos:start="85:62" pos:end="85:62">*</operator> <name pos:start="85:64" pos:end="85:75">SIZEOF_PIXEL</name></expr></argument>,

                                         <argument pos:start="87:42" pos:end="87:45"><expr pos:start="87:42" pos:end="87:45"><name pos:start="87:42" pos:end="87:45">size</name></expr></argument>, <argument pos:start="87:48" pos:end="87:49"><expr pos:start="87:48" pos:end="87:49"><name pos:start="87:48" pos:end="87:49">mx</name></expr></argument>, <argument pos:start="87:52" pos:end="87:53"><expr pos:start="87:52" pos:end="87:53"><name pos:start="87:52" pos:end="87:53">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <if_stmt pos:start="89:33" pos:end="91:43"><if pos:start="89:33" pos:end="91:43">if <condition pos:start="89:36" pos:end="89:69">(<expr pos:start="89:37" pos:end="89:68"><call pos:start="89:37" pos:end="89:68"><name pos:start="89:37" pos:end="89:42">memcmp</name><argument_list pos:start="89:43" pos:end="89:68">(<argument pos:start="89:44" pos:end="89:47"><expr pos:start="89:44" pos:end="89:47"><name pos:start="89:44" pos:end="89:47">dst0</name></expr></argument>, <argument pos:start="89:50" pos:end="89:53"><expr pos:start="89:50" pos:end="89:53"><name pos:start="89:50" pos:end="89:53">dst1</name></expr></argument>, <argument pos:start="89:56" pos:end="89:67"><expr pos:start="89:56" pos:end="89:67"><name pos:start="89:56" pos:end="89:67">DST_BUF_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="91:37" pos:end="91:43"><block_content pos:start="91:37" pos:end="91:43">

                                    <expr_stmt pos:start="91:37" pos:end="91:43"><expr pos:start="91:37" pos:end="91:42"><call pos:start="91:37" pos:end="91:42"><name pos:start="91:37" pos:end="91:40">fail</name><argument_list pos:start="91:41" pos:end="91:42">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                                <comment type="line" pos:start="95:33" pos:end="95:81">// simd implementations for each filter of subpel</comment>

                                <comment type="line" pos:start="97:33" pos:end="97:58">// functions are identical</comment>

                                <if_stmt pos:start="99:33" pos:end="99:73"><if pos:start="99:33" pos:end="99:73">if <condition pos:start="99:36" pos:end="99:63">(<expr pos:start="99:37" pos:end="99:62"><name pos:start="99:37" pos:end="99:42">filter</name> <operator pos:start="99:44" pos:end="99:45">&gt;=</operator> <literal type="number" pos:start="99:47" pos:end="99:47">1</literal> <operator pos:start="99:49" pos:end="99:50">&amp;&amp;</operator> <name pos:start="99:52" pos:end="99:57">filter</name> <operator pos:start="99:59" pos:end="99:60">&lt;=</operator> <literal type="number" pos:start="99:62" pos:end="99:62">2</literal></expr>)</condition><block type="pseudo" pos:start="99:65" pos:end="99:73"><block_content pos:start="99:65" pos:end="99:73"> <continue pos:start="99:65" pos:end="99:73">continue;</continue></block_content></block></if></if_stmt>

                                <comment type="line" pos:start="101:33" pos:end="101:68">// 10/12 bpp for bilin are identical</comment>

                                <if_stmt pos:start="103:33" pos:end="103:77"><if pos:start="103:33" pos:end="103:77">if <condition pos:start="103:36" pos:end="103:67">(<expr pos:start="103:37" pos:end="103:66"><name pos:start="103:37" pos:end="103:45">bit_depth</name> <operator pos:start="103:47" pos:end="103:48">==</operator> <literal type="number" pos:start="103:50" pos:end="103:51">12</literal> <operator pos:start="103:53" pos:end="103:54">&amp;&amp;</operator> <name pos:start="103:56" pos:end="103:61">filter</name> <operator pos:start="103:63" pos:end="103:64">==</operator> <literal type="number" pos:start="103:66" pos:end="103:66">3</literal></expr>)</condition><block type="pseudo" pos:start="103:69" pos:end="103:77"><block_content pos:start="103:69" pos:end="103:77"> <continue pos:start="103:69" pos:end="103:77">continue;</continue></block_content></block></if></if_stmt>



                                <expr_stmt pos:start="107:33" pos:end="111:56"><expr pos:start="107:33" pos:end="111:55"><call pos:start="107:33" pos:end="111:55"><name pos:start="107:33" pos:end="107:41">bench_new</name><argument_list pos:start="107:42" pos:end="111:55">(<argument pos:start="107:43" pos:end="107:46"><expr pos:start="107:43" pos:end="107:46"><name pos:start="107:43" pos:end="107:46">dst1</name></expr></argument>, <argument pos:start="107:49" pos:end="107:67"><expr pos:start="107:49" pos:end="107:67"><name pos:start="107:49" pos:end="107:52">size</name> <operator pos:start="107:54" pos:end="107:54">*</operator> <name pos:start="107:56" pos:end="107:67">SIZEOF_PIXEL</name></expr></argument>,

                                          <argument pos:start="109:43" pos:end="109:45"><expr pos:start="109:43" pos:end="109:45"><name pos:start="109:43" pos:end="109:45">src</name></expr></argument>, <argument pos:start="109:48" pos:end="109:76"><expr pos:start="109:48" pos:end="109:76"><name pos:start="109:48" pos:end="109:61">SRC_BUF_STRIDE</name> <operator pos:start="109:63" pos:end="109:63">*</operator> <name pos:start="109:65" pos:end="109:76">SIZEOF_PIXEL</name></expr></argument>,

                                          <argument pos:start="111:43" pos:end="111:46"><expr pos:start="111:43" pos:end="111:46"><name pos:start="111:43" pos:end="111:46">size</name></expr></argument>, <argument pos:start="111:49" pos:end="111:50"><expr pos:start="111:49" pos:end="111:50"><name pos:start="111:49" pos:end="111:50">mx</name></expr></argument>, <argument pos:start="111:53" pos:end="111:54"><expr pos:start="111:53" pos:end="111:54"><name pos:start="111:53" pos:end="111:54">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="127:5" pos:end="127:17"><expr pos:start="127:5" pos:end="127:16"><call pos:start="127:5" pos:end="127:16"><name pos:start="127:5" pos:end="127:10">report</name><argument_list pos:start="127:11" pos:end="127:16">(<argument pos:start="127:12" pos:end="127:15"><expr pos:start="127:12" pos:end="127:15"><literal type="string" pos:start="127:12" pos:end="127:15">"mc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
