<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15182.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:25">void</name></type> <name pos:start="1:27" pos:end="1:38">gen_load_mem</name> <parameter_list pos:start="1:40" pos:end="7:58">(<parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:52">DisasContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">ctx</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:94"><function_decl pos:start="3:41" pos:end="3:94"><type pos:start="3:41" pos:end="3:44"><name pos:start="3:41" pos:end="3:44">void</name></type> (<modifier pos:start="3:47" pos:end="3:47">*</modifier><name pos:start="3:48" pos:end="3:64">tcg_gen_qemu_load</name>)<parameter_list pos:start="3:66" pos:end="3:94">(<parameter pos:start="3:67" pos:end="3:73"><decl pos:start="3:67" pos:end="3:73"><type pos:start="3:67" pos:end="3:73"><name pos:start="3:67" pos:end="3:70">TCGv</name></type> <name pos:start="3:72" pos:end="3:73">t0</name></decl></parameter>, <parameter pos:start="3:76" pos:end="3:82"><decl pos:start="3:76" pos:end="3:82"><type pos:start="3:76" pos:end="3:82"><name pos:start="3:76" pos:end="3:79">TCGv</name></type> <name pos:start="3:81" pos:end="3:82">t1</name></decl></parameter>, <parameter pos:start="3:85" pos:end="3:93"><decl pos:start="3:85" pos:end="3:93"><type pos:start="3:85" pos:end="3:93"><name pos:start="3:85" pos:end="3:87">int</name></type> <name pos:start="3:89" pos:end="3:93">flags</name></decl></parameter>)</parameter_list></function_decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:46"><decl pos:start="5:41" pos:end="5:46"><type pos:start="5:41" pos:end="5:46"><name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:46">ra</name></decl></parameter>, <parameter pos:start="5:49" pos:end="5:54"><decl pos:start="5:49" pos:end="5:54"><type pos:start="5:49" pos:end="5:54"><name pos:start="5:49" pos:end="5:51">int</name></type> <name pos:start="5:53" pos:end="5:54">rb</name></decl></parameter>, <parameter pos:start="5:57" pos:end="5:70"><decl pos:start="5:57" pos:end="5:70"><type pos:start="5:57" pos:end="5:70"><name pos:start="5:57" pos:end="5:63">int32_t</name></type> <name pos:start="5:65" pos:end="5:70">disp16</name></decl></parameter>,

                                        <parameter pos:start="7:41" pos:end="7:46"><decl pos:start="7:41" pos:end="7:46"><type pos:start="7:41" pos:end="7:46"><name pos:start="7:41" pos:end="7:43">int</name></type> <name pos:start="7:45" pos:end="7:46">fp</name></decl></parameter>, <parameter pos:start="7:49" pos:end="7:57"><decl pos:start="7:49" pos:end="7:57"><type pos:start="7:49" pos:end="7:57"><name pos:start="7:49" pos:end="7:51">int</name></type> <name pos:start="7:53" pos:end="7:57">clear</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="51:1">{<block_content pos:start="11:5" pos:end="49:24">

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">TCGv</name></type> <name pos:start="11:10" pos:end="11:13">addr</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:15"><if pos:start="15:5" pos:end="17:15">if <condition pos:start="15:8" pos:end="15:27">(<expr pos:start="15:9" pos:end="15:26"><call pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:16">unlikely</name><argument_list pos:start="15:17" pos:end="15:26">(<argument pos:start="15:18" pos:end="15:25"><expr pos:start="15:18" pos:end="15:25"><name pos:start="15:18" pos:end="15:19">ra</name> <operator pos:start="15:21" pos:end="15:22">==</operator> <literal type="number" pos:start="15:24" pos:end="15:25">31</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:15"><block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:8">addr</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:37"><name pos:start="21:12" pos:end="21:23">tcg_temp_new</name><argument_list pos:start="21:24" pos:end="21:37">(<argument pos:start="21:25" pos:end="21:36"><expr pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:36">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="39:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:17">(<expr pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:10">rb</name> <operator pos:start="23:12" pos:end="23:13">!=</operator> <literal type="number" pos:start="23:15" pos:end="23:16">31</literal></expr>)</condition> <block pos:start="23:19" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:47">

        <expr_stmt pos:start="25:9" pos:end="25:51"><expr pos:start="25:9" pos:end="25:50"><call pos:start="25:9" pos:end="25:50"><name pos:start="25:9" pos:end="25:24">tcg_gen_addi_i64</name><argument_list pos:start="25:25" pos:end="25:50">(<argument pos:start="25:26" pos:end="25:29"><expr pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:29">addr</name></expr></argument>, <argument pos:start="25:32" pos:end="25:41"><expr pos:start="25:32" pos:end="25:41"><name pos:start="25:32" pos:end="25:41"><name pos:start="25:32" pos:end="25:37">cpu_ir</name><index pos:start="25:38" pos:end="25:41">[<expr pos:start="25:39" pos:end="25:40"><name pos:start="25:39" pos:end="25:40">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="25:44" pos:end="25:49"><expr pos:start="25:44" pos:end="25:49"><name pos:start="25:44" pos:end="25:49">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:47"><if pos:start="27:9" pos:end="29:47">if <condition pos:start="27:12" pos:end="27:18">(<expr pos:start="27:13" pos:end="27:17"><name pos:start="27:13" pos:end="27:17">clear</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:47"><block_content pos:start="29:13" pos:end="29:47">

            <expr_stmt pos:start="29:13" pos:end="29:47"><expr pos:start="29:13" pos:end="29:46"><call pos:start="29:13" pos:end="29:46"><name pos:start="29:13" pos:end="29:28">tcg_gen_andi_i64</name><argument_list pos:start="29:29" pos:end="29:46">(<argument pos:start="29:30" pos:end="29:33"><expr pos:start="29:30" pos:end="29:33"><name pos:start="29:30" pos:end="29:33">addr</name></expr></argument>, <argument pos:start="29:36" pos:end="29:39"><expr pos:start="29:36" pos:end="29:39"><name pos:start="29:36" pos:end="29:39">addr</name></expr></argument>, <argument pos:start="29:42" pos:end="29:45"><expr pos:start="29:42" pos:end="29:45"><operator pos:start="29:42" pos:end="29:42">~</operator><literal type="number" pos:start="29:43" pos:end="29:45">0x7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="39:5">else <block pos:start="31:12" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:39">

        <if_stmt pos:start="33:9" pos:end="35:27"><if pos:start="33:9" pos:end="35:27">if <condition pos:start="33:12" pos:end="33:18">(<expr pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:17">clear</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:27"><block_content pos:start="35:13" pos:end="35:27">

            <expr_stmt pos:start="35:13" pos:end="35:27"><expr pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:18">disp16</name> <operator pos:start="35:20" pos:end="35:21">&amp;=</operator> <operator pos:start="35:23" pos:end="35:23">~</operator><literal type="number" pos:start="35:24" pos:end="35:26">0x7</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:39"><expr pos:start="37:9" pos:end="37:38"><call pos:start="37:9" pos:end="37:38"><name pos:start="37:9" pos:end="37:24">tcg_gen_movi_i64</name><argument_list pos:start="37:25" pos:end="37:38">(<argument pos:start="37:26" pos:end="37:29"><expr pos:start="37:26" pos:end="37:29"><name pos:start="37:26" pos:end="37:29">addr</name></expr></argument>, <argument pos:start="37:32" pos:end="37:37"><expr pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:37">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="41:5" pos:end="47:58"><if pos:start="41:5" pos:end="43:59">if <condition pos:start="41:8" pos:end="41:11">(<expr pos:start="41:9" pos:end="41:10"><name pos:start="41:9" pos:end="41:10">fp</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:59"><block_content pos:start="43:9" pos:end="43:59">

        <expr_stmt pos:start="43:9" pos:end="43:59"><expr pos:start="43:9" pos:end="43:58"><call pos:start="43:9" pos:end="43:58"><name pos:start="43:9" pos:end="43:25">tcg_gen_qemu_load</name><argument_list pos:start="43:26" pos:end="43:58">(<argument pos:start="43:27" pos:end="43:37"><expr pos:start="43:27" pos:end="43:37"><name pos:start="43:27" pos:end="43:37"><name pos:start="43:27" pos:end="43:33">cpu_fir</name><index pos:start="43:34" pos:end="43:37">[<expr pos:start="43:35" pos:end="43:36"><name pos:start="43:35" pos:end="43:36">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="43:40" pos:end="43:43"><expr pos:start="43:40" pos:end="43:43"><name pos:start="43:40" pos:end="43:43">addr</name></expr></argument>, <argument pos:start="43:46" pos:end="43:57"><expr pos:start="43:46" pos:end="43:57"><name pos:start="43:46" pos:end="43:57"><name pos:start="43:46" pos:end="43:48">ctx</name><operator pos:start="43:49" pos:end="43:50">-&gt;</operator><name pos:start="43:51" pos:end="43:57">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="45:5" pos:end="47:58">else<block type="pseudo" pos:start="47:9" pos:end="47:58"><block_content pos:start="47:9" pos:end="47:58">

        <expr_stmt pos:start="47:9" pos:end="47:58"><expr pos:start="47:9" pos:end="47:57"><call pos:start="47:9" pos:end="47:57"><name pos:start="47:9" pos:end="47:25">tcg_gen_qemu_load</name><argument_list pos:start="47:26" pos:end="47:57">(<argument pos:start="47:27" pos:end="47:36"><expr pos:start="47:27" pos:end="47:36"><name pos:start="47:27" pos:end="47:36"><name pos:start="47:27" pos:end="47:32">cpu_ir</name><index pos:start="47:33" pos:end="47:36">[<expr pos:start="47:34" pos:end="47:35"><name pos:start="47:34" pos:end="47:35">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="47:39" pos:end="47:42"><expr pos:start="47:39" pos:end="47:42"><name pos:start="47:39" pos:end="47:42">addr</name></expr></argument>, <argument pos:start="47:45" pos:end="47:56"><expr pos:start="47:45" pos:end="47:56"><name pos:start="47:45" pos:end="47:56"><name pos:start="47:45" pos:end="47:47">ctx</name><operator pos:start="47:48" pos:end="47:49">-&gt;</operator><name pos:start="47:50" pos:end="47:56">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><call pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:17">tcg_temp_free</name><argument_list pos:start="49:18" pos:end="49:23">(<argument pos:start="49:19" pos:end="49:22"><expr pos:start="49:19" pos:end="49:22"><name pos:start="49:19" pos:end="49:22">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
