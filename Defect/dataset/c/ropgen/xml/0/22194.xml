<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22194.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">omap_clkm_write</name><parameter_list pos:start="1:28" pos:end="3:58">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:65"><decl pos:start="1:43" pos:end="1:65"><type pos:start="1:43" pos:end="1:65"><name pos:start="1:43" pos:end="1:60">target_phys_addr_t</name></type> <name pos:start="1:62" pos:end="1:65">addr</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:36">uint64_t</name></type> <name pos:start="3:38" pos:end="3:42">value</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:57"><decl pos:start="3:45" pos:end="3:57"><type pos:start="3:45" pos:end="3:57"><name pos:start="3:45" pos:end="3:52">unsigned</name></type> <name pos:start="3:54" pos:end="3:57">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="159:1">{<block_content pos:start="7:5" pos:end="157:5">

    <decl_stmt pos:start="7:5" pos:end="7:68"><decl pos:start="7:5" pos:end="7:67"><type pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:27">omap_mpu_state_s</name></name> <modifier pos:start="7:29" pos:end="7:29">*</modifier></type><name pos:start="7:30" pos:end="7:30">s</name> <init pos:start="7:32" pos:end="7:67">= <expr pos:start="7:34" pos:end="7:67"><operator pos:start="7:34" pos:end="7:34">(</operator>struct <name pos:start="7:42" pos:end="7:57">omap_mpu_state_s</name> <operator pos:start="7:59" pos:end="7:59">*</operator><operator pos:start="7:60" pos:end="7:60">)</operator> <name pos:start="7:62" pos:end="7:67">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:17">diff</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">omap_clk</name></type> <name pos:start="11:14" pos:end="11:16">clk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="19:6"><decl pos:start="13:5" pos:end="19:5"><type pos:start="13:5" pos:end="13:23"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <specifier pos:start="13:12" pos:end="13:16">const</specifier> <name pos:start="13:18" pos:end="13:21">char</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:39"><name pos:start="13:24" pos:end="13:36">clkschemename</name><index pos:start="13:37" pos:end="13:39">[<expr pos:start="13:38" pos:end="13:38"><literal type="number" pos:start="13:38" pos:end="13:38">8</literal></expr>]</index></name> <init pos:start="13:41" pos:end="19:5">= <expr pos:start="13:43" pos:end="19:5"><block pos:start="13:43" pos:end="19:5">{

        <expr pos:start="15:9" pos:end="15:27"><literal type="string" pos:start="15:9" pos:end="15:27">"fully synchronous"</literal></expr>, <expr pos:start="15:30" pos:end="15:49"><literal type="string" pos:start="15:30" pos:end="15:49">"fully asynchronous"</literal></expr>, <expr pos:start="15:52" pos:end="15:73"><literal type="string" pos:start="15:52" pos:end="15:73">"synchronous scalable"</literal></expr>,

        <expr pos:start="17:9" pos:end="17:20"><literal type="string" pos:start="17:9" pos:end="17:20">"mix mode 1"</literal></expr>, <expr pos:start="17:23" pos:end="17:34"><literal type="string" pos:start="17:23" pos:end="17:34">"mix mode 2"</literal></expr>, <expr pos:start="17:37" pos:end="17:49"><literal type="string" pos:start="17:37" pos:end="17:49">"bypass mode"</literal></expr>, <expr pos:start="17:52" pos:end="17:63"><literal type="string" pos:start="17:52" pos:end="17:63">"mix mode 3"</literal></expr>, <expr pos:start="17:66" pos:end="17:77"><literal type="string" pos:start="17:66" pos:end="17:77">"mix mode 4"</literal></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:18">(<expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:12">size</name> <operator pos:start="23:14" pos:end="23:15">!=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">2</literal></expr>)</condition> <block pos:start="23:20" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:58">

        <return pos:start="25:9" pos:end="25:58">return <expr pos:start="25:16" pos:end="25:57"><call pos:start="25:16" pos:end="25:57"><name pos:start="25:16" pos:end="25:36">omap_badwidth_write16</name><argument_list pos:start="25:37" pos:end="25:57">(<argument pos:start="25:38" pos:end="25:43"><expr pos:start="25:38" pos:end="25:43"><name pos:start="25:38" pos:end="25:43">opaque</name></expr></argument>, <argument pos:start="25:46" pos:end="25:49"><expr pos:start="25:46" pos:end="25:49"><name pos:start="25:46" pos:end="25:49">addr</name></expr></argument>, <argument pos:start="25:52" pos:end="25:56"><expr pos:start="25:52" pos:end="25:56"><name pos:start="25:52" pos:end="25:56">value</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="31:5" pos:end="157:5">switch <condition pos:start="31:12" pos:end="31:17">(<expr pos:start="31:13" pos:end="31:16"><name pos:start="31:13" pos:end="31:16">addr</name></expr>)</condition> <block pos:start="31:19" pos:end="157:5">{<block_content pos:start="33:5" pos:end="155:27">

    <case pos:start="33:5" pos:end="33:14">case <expr pos:start="33:10" pos:end="33:13"><literal type="number" pos:start="33:10" pos:end="33:13">0x00</literal></expr>:</case>	<comment type="block" pos:start="33:17" pos:end="33:31">/* ARM_CKCTL */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:12">diff</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:32"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:22">clkm</name><operator pos:start="35:23" pos:end="35:23">.</operator><name pos:start="35:24" pos:end="35:32">arm_ckctl</name></name> <operator pos:start="35:34" pos:end="35:34">^</operator> <name pos:start="35:36" pos:end="35:40">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:43"><expr pos:start="37:9" pos:end="37:42"><name pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:15">clkm</name><operator pos:start="37:16" pos:end="37:16">.</operator><name pos:start="37:17" pos:end="37:25">arm_ckctl</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <name pos:start="37:29" pos:end="37:33">value</name> <operator pos:start="37:35" pos:end="37:35">&amp;</operator> <literal type="number" pos:start="37:37" pos:end="37:42">0x7fff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:47"><expr pos:start="39:9" pos:end="39:46"><call pos:start="39:9" pos:end="39:46"><name pos:start="39:9" pos:end="39:30">omap_clkm_ckctl_update</name><argument_list pos:start="39:31" pos:end="39:46">(<argument pos:start="39:32" pos:end="39:32"><expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">s</name></expr></argument>, <argument pos:start="39:35" pos:end="39:38"><expr pos:start="39:35" pos:end="39:38"><name pos:start="39:35" pos:end="39:38">diff</name></expr></argument>, <argument pos:start="39:41" pos:end="39:45"><expr pos:start="39:41" pos:end="39:45"><name pos:start="39:41" pos:end="39:45">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:15">return;</return>



    <case pos:start="45:5" pos:end="45:14">case <expr pos:start="45:10" pos:end="45:13"><literal type="number" pos:start="45:10" pos:end="45:13">0x04</literal></expr>:</case>	<comment type="block" pos:start="45:17" pos:end="45:33">/* ARM_IDLECT1 */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:43"><expr pos:start="47:9" pos:end="47:42"><name pos:start="47:9" pos:end="47:12">diff</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <name pos:start="47:16" pos:end="47:34"><name pos:start="47:16" pos:end="47:16">s</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:22">clkm</name><operator pos:start="47:23" pos:end="47:23">.</operator><name pos:start="47:24" pos:end="47:34">arm_idlect1</name></name> <operator pos:start="47:36" pos:end="47:36">^</operator> <name pos:start="47:38" pos:end="47:42">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:45"><expr pos:start="49:9" pos:end="49:44"><name pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:15">clkm</name><operator pos:start="49:16" pos:end="49:16">.</operator><name pos:start="49:17" pos:end="49:27">arm_idlect1</name></name> <operator pos:start="49:29" pos:end="49:29">=</operator> <name pos:start="49:31" pos:end="49:35">value</name> <operator pos:start="49:37" pos:end="49:37">&amp;</operator> <literal type="number" pos:start="49:39" pos:end="49:44">0x0fff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:49"><expr pos:start="51:9" pos:end="51:48"><call pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:32">omap_clkm_idlect1_update</name><argument_list pos:start="51:33" pos:end="51:48">(<argument pos:start="51:34" pos:end="51:34"><expr pos:start="51:34" pos:end="51:34"><name pos:start="51:34" pos:end="51:34">s</name></expr></argument>, <argument pos:start="51:37" pos:end="51:40"><expr pos:start="51:37" pos:end="51:40"><name pos:start="51:37" pos:end="51:40">diff</name></expr></argument>, <argument pos:start="51:43" pos:end="51:47"><expr pos:start="51:43" pos:end="51:47"><name pos:start="51:43" pos:end="51:47">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:15">return;</return>



    <case pos:start="57:5" pos:end="57:14">case <expr pos:start="57:10" pos:end="57:13"><literal type="number" pos:start="57:10" pos:end="57:13">0x08</literal></expr>:</case>	<comment type="block" pos:start="57:17" pos:end="57:33">/* ARM_IDLECT2 */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:43"><expr pos:start="59:9" pos:end="59:42"><name pos:start="59:9" pos:end="59:12">diff</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:34"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:22">clkm</name><operator pos:start="59:23" pos:end="59:23">.</operator><name pos:start="59:24" pos:end="59:34">arm_idlect2</name></name> <operator pos:start="59:36" pos:end="59:36">^</operator> <name pos:start="59:38" pos:end="59:42">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:45"><expr pos:start="61:9" pos:end="61:44"><name pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:15">clkm</name><operator pos:start="61:16" pos:end="61:16">.</operator><name pos:start="61:17" pos:end="61:27">arm_idlect2</name></name> <operator pos:start="61:29" pos:end="61:29">=</operator> <name pos:start="61:31" pos:end="61:35">value</name> <operator pos:start="61:37" pos:end="61:37">&amp;</operator> <literal type="number" pos:start="61:39" pos:end="61:44">0x07ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:49"><expr pos:start="63:9" pos:end="63:48"><call pos:start="63:9" pos:end="63:48"><name pos:start="63:9" pos:end="63:32">omap_clkm_idlect2_update</name><argument_list pos:start="63:33" pos:end="63:48">(<argument pos:start="63:34" pos:end="63:34"><expr pos:start="63:34" pos:end="63:34"><name pos:start="63:34" pos:end="63:34">s</name></expr></argument>, <argument pos:start="63:37" pos:end="63:40"><expr pos:start="63:37" pos:end="63:40"><name pos:start="63:37" pos:end="63:40">diff</name></expr></argument>, <argument pos:start="63:43" pos:end="63:47"><expr pos:start="63:43" pos:end="63:47"><name pos:start="63:43" pos:end="63:47">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:15">return;</return>



    <case pos:start="69:5" pos:end="69:14">case <expr pos:start="69:10" pos:end="69:13"><literal type="number" pos:start="69:10" pos:end="69:13">0x0c</literal></expr>:</case>	<comment type="block" pos:start="69:17" pos:end="69:32">/* ARM_EWUPCT */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:44"><expr pos:start="71:9" pos:end="71:43"><name pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:15">clkm</name><operator pos:start="71:16" pos:end="71:16">.</operator><name pos:start="71:17" pos:end="71:26">arm_ewupct</name></name> <operator pos:start="71:28" pos:end="71:28">=</operator> <name pos:start="71:30" pos:end="71:34">value</name> <operator pos:start="71:36" pos:end="71:36">&amp;</operator> <literal type="number" pos:start="71:38" pos:end="71:43">0x003f</literal></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:15">return;</return>



    <case pos:start="77:5" pos:end="77:14">case <expr pos:start="77:10" pos:end="77:13"><literal type="number" pos:start="77:10" pos:end="77:13">0x10</literal></expr>:</case>	<comment type="block" pos:start="77:17" pos:end="77:32">/* ARM_RSTCT1 */</comment>

        <expr_stmt pos:start="79:9" pos:end="79:42"><expr pos:start="79:9" pos:end="79:41"><name pos:start="79:9" pos:end="79:12">diff</name> <operator pos:start="79:14" pos:end="79:14">=</operator> <name pos:start="79:16" pos:end="79:33"><name pos:start="79:16" pos:end="79:16">s</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:22">clkm</name><operator pos:start="79:23" pos:end="79:23">.</operator><name pos:start="79:24" pos:end="79:33">arm_rstct1</name></name> <operator pos:start="79:35" pos:end="79:35">^</operator> <name pos:start="79:37" pos:end="79:41">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:44"><expr pos:start="81:9" pos:end="81:43"><name pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:15">clkm</name><operator pos:start="81:16" pos:end="81:16">.</operator><name pos:start="81:17" pos:end="81:26">arm_rstct1</name></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:34">value</name> <operator pos:start="81:36" pos:end="81:36">&amp;</operator> <literal type="number" pos:start="81:38" pos:end="81:43">0x0007</literal></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="89:9"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:22">(<expr pos:start="83:13" pos:end="83:21"><name pos:start="83:13" pos:end="83:17">value</name> <operator pos:start="83:19" pos:end="83:19">&amp;</operator> <literal type="number" pos:start="83:21" pos:end="83:21">9</literal></expr>)</condition> <block pos:start="83:24" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:37">

            <expr_stmt pos:start="85:13" pos:end="85:40"><expr pos:start="85:13" pos:end="85:39"><call pos:start="85:13" pos:end="85:39"><name pos:start="85:13" pos:end="85:37">qemu_system_reset_request</name><argument_list pos:start="85:38" pos:end="85:39">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:37"><expr pos:start="87:13" pos:end="87:36"><name pos:start="87:13" pos:end="87:30"><name pos:start="87:13" pos:end="87:13">s</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:19">clkm</name><operator pos:start="87:20" pos:end="87:20">.</operator><name pos:start="87:21" pos:end="87:30">cold_start</name></name> <operator pos:start="87:32" pos:end="87:32">=</operator> <literal type="number" pos:start="87:34" pos:end="87:36">0xa</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="91:9" pos:end="99:9"><if pos:start="91:9" pos:end="99:9">if <condition pos:start="91:12" pos:end="91:30">(<expr pos:start="91:13" pos:end="91:29"><name pos:start="91:13" pos:end="91:16">diff</name> <operator pos:start="91:18" pos:end="91:18">&amp;</operator> <operator pos:start="91:20" pos:end="91:20">~</operator><name pos:start="91:21" pos:end="91:25">value</name> <operator pos:start="91:27" pos:end="91:27">&amp;</operator> <literal type="number" pos:start="91:29" pos:end="91:29">4</literal></expr>)</condition> <block pos:start="91:32" pos:end="99:9">{<block_content pos:start="93:13" pos:end="97:51">				<comment type="block" pos:start="91:65" pos:end="91:77">/* DSP_RST */</comment>

            <expr_stmt pos:start="93:13" pos:end="93:31"><expr pos:start="93:13" pos:end="93:30"><call pos:start="93:13" pos:end="93:30"><name pos:start="93:13" pos:end="93:27">omap_mpui_reset</name><argument_list pos:start="93:28" pos:end="93:30">(<argument pos:start="93:29" pos:end="93:29"><expr pos:start="93:29" pos:end="93:29"><name pos:start="93:29" pos:end="93:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:52"><expr pos:start="95:13" pos:end="95:51"><call pos:start="95:13" pos:end="95:51"><name pos:start="95:13" pos:end="95:34">omap_tipb_bridge_reset</name><argument_list pos:start="95:35" pos:end="95:51">(<argument pos:start="95:36" pos:end="95:50"><expr pos:start="95:36" pos:end="95:50"><name pos:start="95:36" pos:end="95:50"><name pos:start="95:36" pos:end="95:36">s</name><operator pos:start="95:37" pos:end="95:38">-&gt;</operator><name pos:start="95:39" pos:end="95:50">private_tipb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:51"><expr pos:start="97:13" pos:end="97:50"><call pos:start="97:13" pos:end="97:50"><name pos:start="97:13" pos:end="97:34">omap_tipb_bridge_reset</name><argument_list pos:start="97:35" pos:end="97:50">(<argument pos:start="97:36" pos:end="97:49"><expr pos:start="97:36" pos:end="97:49"><name pos:start="97:36" pos:end="97:49"><name pos:start="97:36" pos:end="97:36">s</name><operator pos:start="97:37" pos:end="97:38">-&gt;</operator><name pos:start="97:39" pos:end="97:49">public_tipb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="101:9" pos:end="107:9"><if pos:start="101:9" pos:end="107:9">if <condition pos:start="101:12" pos:end="101:21">(<expr pos:start="101:13" pos:end="101:20"><name pos:start="101:13" pos:end="101:16">diff</name> <operator pos:start="101:18" pos:end="101:18">&amp;</operator> <literal type="number" pos:start="101:20" pos:end="101:20">2</literal></expr>)</condition> <block pos:start="101:23" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:53">						<comment type="block" pos:start="101:65" pos:end="101:76">/* DSP_EN */</comment>

            <expr_stmt pos:start="103:13" pos:end="103:44"><expr pos:start="103:13" pos:end="103:43"><name pos:start="103:13" pos:end="103:15">clk</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <call pos:start="103:19" pos:end="103:43"><name pos:start="103:19" pos:end="103:30">omap_findclk</name><argument_list pos:start="103:31" pos:end="103:43">(<argument pos:start="103:32" pos:end="103:32"><expr pos:start="103:32" pos:end="103:32"><name pos:start="103:32" pos:end="103:32">s</name></expr></argument>, <argument pos:start="103:35" pos:end="103:42"><expr pos:start="103:35" pos:end="103:42"><literal type="string" pos:start="103:35" pos:end="103:42">"dsp_ck"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:53"><expr pos:start="105:13" pos:end="105:52"><call pos:start="105:13" pos:end="105:52"><name pos:start="105:13" pos:end="105:28">omap_clk_canidle</name><argument_list pos:start="105:29" pos:end="105:52">(<argument pos:start="105:30" pos:end="105:32"><expr pos:start="105:30" pos:end="105:32"><name pos:start="105:30" pos:end="105:32">clk</name></expr></argument>, <argument pos:start="105:35" pos:end="105:51"><expr pos:start="105:35" pos:end="105:51"><operator pos:start="105:35" pos:end="105:35">(</operator><operator pos:start="105:36" pos:end="105:36">~</operator><name pos:start="105:37" pos:end="105:41">value</name> <operator pos:start="105:43" pos:end="105:44">&gt;&gt;</operator> <literal type="number" pos:start="105:46" pos:end="105:46">1</literal><operator pos:start="105:47" pos:end="105:47">)</operator> <operator pos:start="105:49" pos:end="105:49">&amp;</operator> <literal type="number" pos:start="105:51" pos:end="105:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="109:9" pos:end="109:15">return;</return>



    <case pos:start="113:5" pos:end="113:14">case <expr pos:start="113:10" pos:end="113:13"><literal type="number" pos:start="113:10" pos:end="113:13">0x14</literal></expr>:</case>	<comment type="block" pos:start="113:17" pos:end="113:32">/* ARM_RSTCT2 */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:44"><expr pos:start="115:9" pos:end="115:43"><name pos:start="115:9" pos:end="115:26"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:15">clkm</name><operator pos:start="115:16" pos:end="115:16">.</operator><name pos:start="115:17" pos:end="115:26">arm_rstct2</name></name> <operator pos:start="115:28" pos:end="115:28">=</operator> <name pos:start="115:30" pos:end="115:34">value</name> <operator pos:start="115:36" pos:end="115:36">&amp;</operator> <literal type="number" pos:start="115:38" pos:end="115:43">0x0001</literal></expr>;</expr_stmt>

        <return pos:start="117:9" pos:end="117:15">return;</return>



    <case pos:start="121:5" pos:end="121:14">case <expr pos:start="121:10" pos:end="121:13"><literal type="number" pos:start="121:10" pos:end="121:13">0x18</literal></expr>:</case>	<comment type="block" pos:start="121:17" pos:end="121:31">/* ARM_SYSST */</comment>

        <if_stmt pos:start="123:9" pos:end="131:9"><if pos:start="123:9" pos:end="131:9">if <condition pos:start="123:12" pos:end="123:58">(<expr pos:start="123:13" pos:end="123:57"><operator pos:start="123:13" pos:end="123:13">(</operator><name pos:start="123:14" pos:end="123:36"><name pos:start="123:14" pos:end="123:14">s</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:20">clkm</name><operator pos:start="123:21" pos:end="123:21">.</operator><name pos:start="123:22" pos:end="123:36">clocking_scheme</name></name> <operator pos:start="123:38" pos:end="123:38">^</operator> <operator pos:start="123:40" pos:end="123:40">(</operator><name pos:start="123:41" pos:end="123:45">value</name> <operator pos:start="123:47" pos:end="123:48">&gt;&gt;</operator> <literal type="number" pos:start="123:50" pos:end="123:51">11</literal><operator pos:start="123:52" pos:end="123:52">)</operator><operator pos:start="123:53" pos:end="123:53">)</operator> <operator pos:start="123:55" pos:end="123:55">&amp;</operator> <literal type="number" pos:start="123:57" pos:end="123:57">7</literal></expr>)</condition> <block pos:start="123:60" pos:end="131:9">{<block_content pos:start="125:13" pos:end="129:68">

            <expr_stmt pos:start="125:13" pos:end="125:56"><expr pos:start="125:13" pos:end="125:55"><name pos:start="125:13" pos:end="125:35"><name pos:start="125:13" pos:end="125:13">s</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:19">clkm</name><operator pos:start="125:20" pos:end="125:20">.</operator><name pos:start="125:21" pos:end="125:35">clocking_scheme</name></name> <operator pos:start="125:37" pos:end="125:37">=</operator> <operator pos:start="125:39" pos:end="125:39">(</operator><name pos:start="125:40" pos:end="125:44">value</name> <operator pos:start="125:46" pos:end="125:47">&gt;&gt;</operator> <literal type="number" pos:start="125:49" pos:end="125:50">11</literal><operator pos:start="125:51" pos:end="125:51">)</operator> <operator pos:start="125:53" pos:end="125:53">&amp;</operator> <literal type="number" pos:start="125:55" pos:end="125:55">7</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="129:68"><expr pos:start="127:13" pos:end="129:67"><call pos:start="127:13" pos:end="129:67"><name pos:start="127:13" pos:end="127:18">printf</name><argument_list pos:start="127:19" pos:end="129:67">(<argument pos:start="127:20" pos:end="127:52"><expr pos:start="127:20" pos:end="127:52"><literal type="string" pos:start="127:20" pos:end="127:52">"%s: clocking scheme set to %s\n"</literal></expr></argument>, <argument pos:start="127:55" pos:end="127:66"><expr pos:start="127:55" pos:end="127:66"><name pos:start="127:55" pos:end="127:66">__FUNCTION__</name></expr></argument>,

                            <argument pos:start="129:29" pos:end="129:66"><expr pos:start="129:29" pos:end="129:66"><name pos:start="129:29" pos:end="129:66"><name pos:start="129:29" pos:end="129:41">clkschemename</name><index pos:start="129:42" pos:end="129:66">[<expr pos:start="129:43" pos:end="129:65"><name pos:start="129:43" pos:end="129:65"><name pos:start="129:43" pos:end="129:43">s</name><operator pos:start="129:44" pos:end="129:45">-&gt;</operator><name pos:start="129:46" pos:end="129:49">clkm</name><operator pos:start="129:50" pos:end="129:50">.</operator><name pos:start="129:51" pos:end="129:65">clocking_scheme</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:43"><expr pos:start="133:9" pos:end="133:42"><name pos:start="133:9" pos:end="133:26"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:15">clkm</name><operator pos:start="133:16" pos:end="133:16">.</operator><name pos:start="133:17" pos:end="133:26">cold_start</name></name> <operator pos:start="133:28" pos:end="133:29">&amp;=</operator> <name pos:start="133:31" pos:end="133:35">value</name> <operator pos:start="133:37" pos:end="133:37">&amp;</operator> <literal type="number" pos:start="133:39" pos:end="133:42">0x3f</literal></expr>;</expr_stmt>

        <return pos:start="135:9" pos:end="135:15">return;</return>



    <case pos:start="139:5" pos:end="139:14">case <expr pos:start="139:10" pos:end="139:13"><literal type="number" pos:start="139:10" pos:end="139:13">0x1c</literal></expr>:</case>	<comment type="block" pos:start="139:17" pos:end="139:32">/* ARM_CKOUT1 */</comment>

        <expr_stmt pos:start="141:9" pos:end="141:42"><expr pos:start="141:9" pos:end="141:41"><name pos:start="141:9" pos:end="141:12">diff</name> <operator pos:start="141:14" pos:end="141:14">=</operator> <name pos:start="141:16" pos:end="141:33"><name pos:start="141:16" pos:end="141:16">s</name><operator pos:start="141:17" pos:end="141:18">-&gt;</operator><name pos:start="141:19" pos:end="141:22">clkm</name><operator pos:start="141:23" pos:end="141:23">.</operator><name pos:start="141:24" pos:end="141:33">arm_ckout1</name></name> <operator pos:start="141:35" pos:end="141:35">^</operator> <name pos:start="141:37" pos:end="141:41">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:44"><expr pos:start="143:9" pos:end="143:43"><name pos:start="143:9" pos:end="143:26"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:15">clkm</name><operator pos:start="143:16" pos:end="143:16">.</operator><name pos:start="143:17" pos:end="143:26">arm_ckout1</name></name> <operator pos:start="143:28" pos:end="143:28">=</operator> <name pos:start="143:30" pos:end="143:34">value</name> <operator pos:start="143:36" pos:end="143:36">&amp;</operator> <literal type="number" pos:start="143:38" pos:end="143:43">0x003f</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:48"><expr pos:start="145:9" pos:end="145:47"><call pos:start="145:9" pos:end="145:47"><name pos:start="145:9" pos:end="145:31">omap_clkm_ckout1_update</name><argument_list pos:start="145:32" pos:end="145:47">(<argument pos:start="145:33" pos:end="145:33"><expr pos:start="145:33" pos:end="145:33"><name pos:start="145:33" pos:end="145:33">s</name></expr></argument>, <argument pos:start="145:36" pos:end="145:39"><expr pos:start="145:36" pos:end="145:39"><name pos:start="145:36" pos:end="145:39">diff</name></expr></argument>, <argument pos:start="145:42" pos:end="145:46"><expr pos:start="145:42" pos:end="145:46"><name pos:start="145:42" pos:end="145:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="147:9" pos:end="147:15">return;</return>



    <case pos:start="151:5" pos:end="151:14">case <expr pos:start="151:10" pos:end="151:13"><literal type="number" pos:start="151:10" pos:end="151:13">0x20</literal></expr>:</case>	<comment type="block" pos:start="151:17" pos:end="151:32">/* ARM_CKOUT2 */</comment>

    <default pos:start="153:5" pos:end="153:12">default:</default>

        <expr_stmt pos:start="155:9" pos:end="155:27"><expr pos:start="155:9" pos:end="155:26"><call pos:start="155:9" pos:end="155:26"><name pos:start="155:9" pos:end="155:20">OMAP_BAD_REG</name><argument_list pos:start="155:21" pos:end="155:26">(<argument pos:start="155:22" pos:end="155:25"><expr pos:start="155:22" pos:end="155:25"><name pos:start="155:22" pos:end="155:25">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
