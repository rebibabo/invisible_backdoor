<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18170.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:23">shorts2str</name><parameter_list pos:start="1:24" pos:end="1:60">(<parameter pos:start="1:25" pos:end="1:31"><decl pos:start="1:25" pos:end="1:31"><type pos:start="1:25" pos:end="1:31"><name pos:start="1:25" pos:end="1:27">int</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:31">sp</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:42"><decl pos:start="1:34" pos:end="1:42"><type pos:start="1:34" pos:end="1:42"><name pos:start="1:34" pos:end="1:36">int</name></type> <name pos:start="1:38" pos:end="1:42">count</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:59"><decl pos:start="1:45" pos:end="1:59"><type pos:start="1:45" pos:end="1:59"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">sep</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:15">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:12">ap</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">ap0</name></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="9:25"><if pos:start="9:5" pos:end="9:25">if <condition pos:start="9:8" pos:end="9:13">(<expr pos:start="9:9" pos:end="9:12"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:12">sep</name></expr>)</condition><block type="pseudo" pos:start="9:15" pos:end="9:25"><block_content pos:start="9:15" pos:end="9:25"> <expr_stmt pos:start="9:15" pos:end="9:25"><expr pos:start="9:15" pos:end="9:24"><name pos:start="9:15" pos:end="9:17">sep</name> <operator pos:start="9:19" pos:end="9:19">=</operator> <literal type="string" pos:start="9:21" pos:end="9:24">", "</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:46"><expr pos:start="11:5" pos:end="11:45"><name pos:start="11:5" pos:end="11:6">ap</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <call pos:start="11:10" pos:end="11:45"><name pos:start="11:10" pos:end="11:18">av_malloc</name><argument_list pos:start="11:19" pos:end="11:45">(<argument pos:start="11:20" pos:end="11:44"><expr pos:start="11:20" pos:end="11:44"><operator pos:start="11:20" pos:end="11:20">(</operator><literal type="number" pos:start="11:21" pos:end="11:23">5</literal> <operator pos:start="11:23" pos:end="11:23">+</operator> <call pos:start="11:25" pos:end="11:35"><name pos:start="11:25" pos:end="11:30">strlen</name><argument_list pos:start="11:31" pos:end="11:35">(<argument pos:start="11:32" pos:end="11:34"><expr pos:start="11:32" pos:end="11:34"><name pos:start="11:32" pos:end="11:34">sep</name></expr></argument>)</argument_list></call><operator pos:start="11:36" pos:end="11:36">)</operator> <operator pos:start="11:38" pos:end="11:38">*</operator> <name pos:start="11:40" pos:end="11:44">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:20"><if pos:start="13:5" pos:end="15:20">if <condition pos:start="13:8" pos:end="13:12">(<expr pos:start="13:9" pos:end="13:11"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:11">ap</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:20"><block_content pos:start="15:9" pos:end="15:20">

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:15"><expr pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:7">ap0</name>   <operator pos:start="17:11" pos:end="17:11">=</operator> <name pos:start="17:13" pos:end="17:14">ap</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:6">ap</name><index pos:start="19:7" pos:end="19:9">[<expr pos:start="19:8" pos:end="19:8"><literal type="number" pos:start="19:8" pos:end="19:8">0</literal></expr>]</index></name> <operator pos:start="19:11" pos:end="19:11">=</operator> <literal type="char" pos:start="19:13" pos:end="19:16">'\0'</literal></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="27:5">for <control pos:start="21:9" pos:end="21:31">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:26"><expr pos:start="21:17" pos:end="21:25"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:25">count</name></expr>;</condition> <incr pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:28">i</name><operator pos:start="21:29" pos:end="21:30">++</operator></expr></incr>)</control> <block pos:start="21:33" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:16">

        <decl_stmt pos:start="23:9" pos:end="23:66"><decl pos:start="23:9" pos:end="23:65"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">l</name> <init pos:start="23:15" pos:end="23:65">= <expr pos:start="23:17" pos:end="23:65"><call pos:start="23:17" pos:end="23:65"><name pos:start="23:17" pos:end="23:24">snprintf</name><argument_list pos:start="23:25" pos:end="23:65">(<argument pos:start="23:26" pos:end="23:27"><expr pos:start="23:26" pos:end="23:27"><name pos:start="23:26" pos:end="23:27">ap</name></expr></argument>, <argument pos:start="23:30" pos:end="23:44"><expr pos:start="23:30" pos:end="23:44"><literal type="number" pos:start="23:30" pos:end="23:32">5</literal> <operator pos:start="23:32" pos:end="23:32">+</operator> <call pos:start="23:34" pos:end="23:44"><name pos:start="23:34" pos:end="23:39">strlen</name><argument_list pos:start="23:40" pos:end="23:44">(<argument pos:start="23:41" pos:end="23:43"><expr pos:start="23:41" pos:end="23:43"><name pos:start="23:41" pos:end="23:43">sep</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:47" pos:end="23:52"><expr pos:start="23:47" pos:end="23:52"><literal type="string" pos:start="23:47" pos:end="23:52">"%d%s"</literal></expr></argument>, <argument pos:start="23:55" pos:end="23:59"><expr pos:start="23:55" pos:end="23:59"><name pos:start="23:55" pos:end="23:59"><name pos:start="23:55" pos:end="23:56">sp</name><index pos:start="23:57" pos:end="23:59">[<expr pos:start="23:58" pos:end="23:58"><name pos:start="23:58" pos:end="23:58">i</name></expr>]</index></name></expr></argument>, <argument pos:start="23:62" pos:end="23:64"><expr pos:start="23:62" pos:end="23:64"><name pos:start="23:62" pos:end="23:64">sep</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:16"><expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:10">ap</name> <operator pos:start="25:12" pos:end="25:13">+=</operator> <name pos:start="25:15" pos:end="25:15">l</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:7">ap0</name><index pos:start="29:8" pos:end="29:34">[<expr pos:start="29:9" pos:end="29:33"><call pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:14">strlen</name><argument_list pos:start="29:15" pos:end="29:19">(<argument pos:start="29:16" pos:end="29:18"><expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">ap0</name></expr></argument>)</argument_list></call> <operator pos:start="29:21" pos:end="29:21">-</operator> <call pos:start="29:23" pos:end="29:33"><name pos:start="29:23" pos:end="29:28">strlen</name><argument_list pos:start="29:29" pos:end="29:33">(<argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">sep</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="29:36" pos:end="29:36">=</operator> <literal type="char" pos:start="29:38" pos:end="29:41">'\0'</literal></expr>;</expr_stmt>

    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">ap0</name></expr>;</return>

</block_content>}</block></function>
</unit>
