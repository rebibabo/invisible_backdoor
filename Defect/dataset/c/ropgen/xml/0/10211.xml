<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10211.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">qdev_prop_set_drive</name><parameter_list pos:start="1:24" pos:end="1:84">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:35">DeviceState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">dev</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">name</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:83"><decl pos:start="1:61" pos:end="1:83"><type pos:start="1:61" pos:end="1:83"><name pos:start="1:61" pos:end="1:76">BlockDriverState</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:83">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">res</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:34"><expr pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:7">res</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:33"><name pos:start="9:11" pos:end="9:21">bdrv_attach</name><argument_list pos:start="9:22" pos:end="9:33">(<argument pos:start="9:23" pos:end="9:27"><expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27">value</name></expr></argument>, <argument pos:start="9:30" pos:end="9:32"><expr pos:start="9:30" pos:end="9:32"><name pos:start="9:30" pos:end="9:32">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="23:5">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">res</name> <operator pos:start="11:13" pos:end="11:13">&lt;</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>)</condition> <block pos:start="11:18" pos:end="23:5">{<block_content pos:start="13:9" pos:end="21:18">

        <expr_stmt pos:start="13:9" pos:end="19:43"><expr pos:start="13:9" pos:end="19:42"><call pos:start="13:9" pos:end="19:42"><name pos:start="13:9" pos:end="13:20">error_report</name><argument_list pos:start="13:21" pos:end="19:42">(<argument pos:start="13:22" pos:end="13:57"><expr pos:start="13:22" pos:end="13:57"><literal type="string" pos:start="13:22" pos:end="13:57">"Can't attach drive %s to %s.%s: %s"</literal></expr></argument>,

                     <argument pos:start="15:22" pos:end="15:48"><expr pos:start="15:22" pos:end="15:48"><call pos:start="15:22" pos:end="15:48"><name pos:start="15:22" pos:end="15:41">bdrv_get_device_name</name><argument_list pos:start="15:42" pos:end="15:48">(<argument pos:start="15:43" pos:end="15:47"><expr pos:start="15:43" pos:end="15:47"><name pos:start="15:43" pos:end="15:47">value</name></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="17:22" pos:end="17:56"><expr pos:start="17:22" pos:end="17:56"><ternary pos:start="17:22" pos:end="17:56"><condition pos:start="17:22" pos:end="17:30"><expr pos:start="17:22" pos:end="17:28"><name pos:start="17:22" pos:end="17:28"><name pos:start="17:22" pos:end="17:24">dev</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:28">id</name></name></expr> ?</condition><then pos:start="17:32" pos:end="17:38"> <expr pos:start="17:32" pos:end="17:38"><name pos:start="17:32" pos:end="17:38"><name pos:start="17:32" pos:end="17:34">dev</name><operator pos:start="17:35" pos:end="17:36">-&gt;</operator><name pos:start="17:37" pos:end="17:38">id</name></name></expr> </then><else pos:start="17:40" pos:end="17:56">: <expr pos:start="17:42" pos:end="17:56"><name pos:start="17:42" pos:end="17:56"><name pos:start="17:42" pos:end="17:44">dev</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:50">info</name><operator pos:start="17:51" pos:end="17:52">-&gt;</operator><name pos:start="17:53" pos:end="17:56">name</name></name></expr></else></ternary></expr></argument>,

                     <argument pos:start="19:22" pos:end="19:25"><expr pos:start="19:22" pos:end="19:25"><name pos:start="19:22" pos:end="19:25">name</name></expr></argument>, <argument pos:start="19:28" pos:end="19:41"><expr pos:start="19:28" pos:end="19:41"><call pos:start="19:28" pos:end="19:41"><name pos:start="19:28" pos:end="19:35">strerror</name><argument_list pos:start="19:36" pos:end="19:41">(<argument pos:start="19:37" pos:end="19:40"><expr pos:start="19:37" pos:end="19:40"><operator pos:start="19:37" pos:end="19:37">-</operator><name pos:start="19:38" pos:end="19:40">res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:54"><expr pos:start="25:5" pos:end="25:53"><call pos:start="25:5" pos:end="25:53"><name pos:start="25:5" pos:end="25:17">qdev_prop_set</name><argument_list pos:start="25:18" pos:end="25:53">(<argument pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:21">dev</name></expr></argument>, <argument pos:start="25:24" pos:end="25:27"><expr pos:start="25:24" pos:end="25:27"><name pos:start="25:24" pos:end="25:27">name</name></expr></argument>, <argument pos:start="25:30" pos:end="25:35"><expr pos:start="25:30" pos:end="25:35"><operator pos:start="25:30" pos:end="25:30">&amp;</operator><name pos:start="25:31" pos:end="25:35">value</name></expr></argument>, <argument pos:start="25:38" pos:end="25:52"><expr pos:start="25:38" pos:end="25:52"><name pos:start="25:38" pos:end="25:52">PROP_TYPE_DRIVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
