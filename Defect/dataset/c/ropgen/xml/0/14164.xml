<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14164.c" pos:tabs="8"><function pos:start="1:1" pos:end="391:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">encode_dvb_subtitles</name><parameter_list pos:start="1:32" pos:end="3:69">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:50">DVBSubtitleContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:47"><decl pos:start="3:33" pos:end="3:47"><type pos:start="3:33" pos:end="3:47"><name pos:start="3:33" pos:end="3:39">uint8_t</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:47">outbuf</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:68"><decl pos:start="3:50" pos:end="3:68"><type pos:start="3:50" pos:end="3:68"><specifier pos:start="3:50" pos:end="3:54">const</specifier> <name pos:start="3:56" pos:end="3:65">AVSubtitle</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:68">h</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="391:1">{<block_content pos:start="7:5" pos:end="389:22">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">q</name></decl>, <decl pos:start="7:17" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:25">pseg_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:73"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">page_id</name></decl>, <decl pos:start="9:18" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:26">region_id</name></decl>, <decl pos:start="9:29" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:35">clut_id</name></decl>, <decl pos:start="9:38" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:38" pos:end="9:46">object_id</name></decl>, <decl pos:start="9:49" pos:end="9:49"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:49" pos:end="9:49">i</name></decl>, <decl pos:start="9:52" pos:end="9:60"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:52" pos:end="9:60">bpp_index</name></decl>, <decl pos:start="9:63" pos:end="9:72"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:63" pos:end="9:72">page_state</name></decl>;</decl_stmt>





    <expr_stmt pos:start="15:5" pos:end="15:15"><expr pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:5">q</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <name pos:start="15:9" pos:end="15:14">outbuf</name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:16"><expr pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:11">page_id</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <literal type="number" pos:start="19:15" pos:end="19:15">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:46">(<expr pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:9">h</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:20">num_rects</name></name> <operator pos:start="23:22" pos:end="23:23">==</operator> <literal type="number" pos:start="23:25" pos:end="23:25">0</literal> <operator pos:start="23:27" pos:end="23:28">||</operator> <name pos:start="23:30" pos:end="23:37"><name pos:start="23:30" pos:end="23:30">h</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:37">rects</name></name> <operator pos:start="23:39" pos:end="23:40">==</operator> <name pos:start="23:42" pos:end="23:45">NULL</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:16"><expr pos:start="29:5" pos:end="29:15"><operator pos:start="29:5" pos:end="29:5">*</operator><name pos:start="29:6" pos:end="29:6">q</name><operator pos:start="29:7" pos:end="29:8">++</operator> <operator pos:start="29:10" pos:end="29:10">=</operator> <literal type="number" pos:start="29:12" pos:end="29:15">0x00</literal></expr>;</expr_stmt> <comment type="block" pos:start="29:18" pos:end="29:41">/* subtitle_stream_id */</comment>



    <comment type="block" pos:start="33:5" pos:end="33:34">/* page composition segment */</comment>



    <expr_stmt pos:start="37:5" pos:end="37:16"><expr pos:start="37:5" pos:end="37:15"><operator pos:start="37:5" pos:end="37:5">*</operator><name pos:start="37:6" pos:end="37:6">q</name><operator pos:start="37:7" pos:end="37:8">++</operator> <operator pos:start="37:10" pos:end="37:10">=</operator> <literal type="number" pos:start="37:12" pos:end="37:15">0x0f</literal></expr>;</expr_stmt> <comment type="block" pos:start="37:18" pos:end="37:32">/* sync_byte */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:16"><expr pos:start="39:5" pos:end="39:15"><operator pos:start="39:5" pos:end="39:5">*</operator><name pos:start="39:6" pos:end="39:6">q</name><operator pos:start="39:7" pos:end="39:8">++</operator> <operator pos:start="39:10" pos:end="39:10">=</operator> <literal type="number" pos:start="39:12" pos:end="39:15">0x10</literal></expr>;</expr_stmt> <comment type="block" pos:start="39:18" pos:end="39:35">/* segment_type */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:37"><expr pos:start="41:5" pos:end="41:36"><call pos:start="41:5" pos:end="41:36"><name pos:start="41:5" pos:end="41:23">bytestream_put_be16</name><argument_list pos:start="41:24" pos:end="41:36">(<argument pos:start="41:25" pos:end="41:26"><expr pos:start="41:25" pos:end="41:26"><operator pos:start="41:25" pos:end="41:25">&amp;</operator><name pos:start="41:26" pos:end="41:26">q</name></expr></argument>, <argument pos:start="41:29" pos:end="41:35"><expr pos:start="41:29" pos:end="41:35"><name pos:start="41:29" pos:end="41:35">page_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:17"><expr pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:12">pseg_len</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <name pos:start="43:16" pos:end="43:16">q</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:11"><expr pos:start="45:5" pos:end="45:10"><name pos:start="45:5" pos:end="45:5">q</name> <operator pos:start="45:7" pos:end="45:8">+=</operator> <literal type="number" pos:start="45:10" pos:end="45:10">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="45:13" pos:end="45:32">/* segment length */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:14"><expr pos:start="47:5" pos:end="47:13"><operator pos:start="47:5" pos:end="47:5">*</operator><name pos:start="47:6" pos:end="47:6">q</name><operator pos:start="47:7" pos:end="47:8">++</operator> <operator pos:start="47:10" pos:end="47:10">=</operator> <literal type="number" pos:start="47:12" pos:end="47:13">30</literal></expr>;</expr_stmt> <comment type="block" pos:start="47:16" pos:end="47:43">/* page_timeout (seconds) */</comment>

    <if_stmt pos:start="49:5" pos:end="55:23"><if pos:start="49:5" pos:end="51:23">if <condition pos:start="49:8" pos:end="49:22">(<expr pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:21">hide_state</name></name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:23"><block_content pos:start="51:9" pos:end="51:23">

        <expr_stmt pos:start="51:9" pos:end="51:23"><expr pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:18">page_state</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>;</expr_stmt></block_content></block></if> <comment type="block" pos:start="51:25" pos:end="51:41">/* normal case */</comment>

    <else pos:start="53:5" pos:end="55:23">else<block type="pseudo" pos:start="55:9" pos:end="55:23"><block_content pos:start="55:9" pos:end="55:23">

        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:18">page_state</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <literal type="number" pos:start="55:22" pos:end="55:22">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="55:25" pos:end="55:41">/* mode change */</comment>

    <comment type="block" pos:start="57:5" pos:end="57:39">/* page_version = 0 + page_state */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:60"><expr pos:start="59:5" pos:end="59:59"><operator pos:start="59:5" pos:end="59:5">*</operator><name pos:start="59:6" pos:end="59:6">q</name><operator pos:start="59:7" pos:end="59:8">++</operator> <operator pos:start="59:10" pos:end="59:10">=</operator> <operator pos:start="59:12" pos:end="59:12">(</operator><name pos:start="59:13" pos:end="59:29"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:29">object_version</name></name> <operator pos:start="59:31" pos:end="59:32">&lt;&lt;</operator> <literal type="number" pos:start="59:34" pos:end="59:34">4</literal><operator pos:start="59:35" pos:end="59:35">)</operator> <operator pos:start="59:37" pos:end="59:37">|</operator> <operator pos:start="59:39" pos:end="59:39">(</operator><name pos:start="59:40" pos:end="59:49">page_state</name> <operator pos:start="59:51" pos:end="59:52">&lt;&lt;</operator> <literal type="number" pos:start="59:54" pos:end="59:54">2</literal><operator pos:start="59:55" pos:end="59:55">)</operator> <operator pos:start="59:57" pos:end="59:57">|</operator> <literal type="number" pos:start="59:59" pos:end="59:59">3</literal></expr>;</expr_stmt>



    <for pos:start="63:5" pos:end="73:5">for <control pos:start="63:9" pos:end="63:62">(<init pos:start="63:10" pos:end="63:23"><expr pos:start="63:10" pos:end="63:22"><name pos:start="63:10" pos:end="63:18">region_id</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <literal type="number" pos:start="63:22" pos:end="63:22">0</literal></expr>;</init> <condition pos:start="63:25" pos:end="63:49"><expr pos:start="63:25" pos:end="63:48"><name pos:start="63:25" pos:end="63:33">region_id</name> <operator pos:start="63:35" pos:end="63:35">&lt;</operator> <name pos:start="63:37" pos:end="63:48"><name pos:start="63:37" pos:end="63:37">h</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:48">num_rects</name></name></expr>;</condition> <incr pos:start="63:51" pos:end="63:61"><expr pos:start="63:51" pos:end="63:61"><name pos:start="63:51" pos:end="63:59">region_id</name><operator pos:start="63:60" pos:end="63:61">++</operator></expr></incr>)</control> <block pos:start="63:64" pos:end="73:5">{<block_content pos:start="65:9" pos:end="71:56">

        <expr_stmt pos:start="65:9" pos:end="65:25"><expr pos:start="65:9" pos:end="65:24"><operator pos:start="65:9" pos:end="65:9">*</operator><name pos:start="65:10" pos:end="65:10">q</name><operator pos:start="65:11" pos:end="65:12">++</operator> <operator pos:start="65:14" pos:end="65:14">=</operator> <name pos:start="65:16" pos:end="65:24">region_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:20"><expr pos:start="67:9" pos:end="67:19"><operator pos:start="67:9" pos:end="67:9">*</operator><name pos:start="67:10" pos:end="67:10">q</name><operator pos:start="67:11" pos:end="67:12">++</operator> <operator pos:start="67:14" pos:end="67:14">=</operator> <literal type="number" pos:start="67:16" pos:end="67:19">0xff</literal></expr>;</expr_stmt> <comment type="block" pos:start="67:22" pos:end="67:35">/* reserved */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:56"><expr pos:start="69:9" pos:end="69:55"><call pos:start="69:9" pos:end="69:55"><name pos:start="69:9" pos:end="69:27">bytestream_put_be16</name><argument_list pos:start="69:28" pos:end="69:55">(<argument pos:start="69:29" pos:end="69:30"><expr pos:start="69:29" pos:end="69:30"><operator pos:start="69:29" pos:end="69:29">&amp;</operator><name pos:start="69:30" pos:end="69:30">q</name></expr></argument>, <argument pos:start="69:33" pos:end="69:54"><expr pos:start="69:33" pos:end="69:54"><name pos:start="69:33" pos:end="69:51"><name pos:start="69:33" pos:end="69:33">h</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:40">rects</name><index pos:start="69:41" pos:end="69:51">[<expr pos:start="69:42" pos:end="69:50"><name pos:start="69:42" pos:end="69:50">region_id</name></expr>]</index></name><operator pos:start="69:52" pos:end="69:53">-&gt;</operator><name pos:start="69:54" pos:end="69:54">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="69:58" pos:end="69:71">/* left pos */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:56"><expr pos:start="71:9" pos:end="71:55"><call pos:start="71:9" pos:end="71:55"><name pos:start="71:9" pos:end="71:27">bytestream_put_be16</name><argument_list pos:start="71:28" pos:end="71:55">(<argument pos:start="71:29" pos:end="71:30"><expr pos:start="71:29" pos:end="71:30"><operator pos:start="71:29" pos:end="71:29">&amp;</operator><name pos:start="71:30" pos:end="71:30">q</name></expr></argument>, <argument pos:start="71:33" pos:end="71:54"><expr pos:start="71:33" pos:end="71:54"><name pos:start="71:33" pos:end="71:51"><name pos:start="71:33" pos:end="71:33">h</name><operator pos:start="71:34" pos:end="71:35">-&gt;</operator><name pos:start="71:36" pos:end="71:40">rects</name><index pos:start="71:41" pos:end="71:51">[<expr pos:start="71:42" pos:end="71:50"><name pos:start="71:42" pos:end="71:50">region_id</name></expr>]</index></name><operator pos:start="71:52" pos:end="71:53">-&gt;</operator><name pos:start="71:54" pos:end="71:54">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="71:58" pos:end="71:70">/* top pos */</comment>

    </block_content>}</block></for>



    <expr_stmt pos:start="77:5" pos:end="77:53"><expr pos:start="77:5" pos:end="77:52"><call pos:start="77:5" pos:end="77:52"><name pos:start="77:5" pos:end="77:23">bytestream_put_be16</name><argument_list pos:start="77:24" pos:end="77:52">(<argument pos:start="77:25" pos:end="77:33"><expr pos:start="77:25" pos:end="77:33"><operator pos:start="77:25" pos:end="77:25">&amp;</operator><name pos:start="77:26" pos:end="77:33">pseg_len</name></expr></argument>, <argument pos:start="77:36" pos:end="77:51"><expr pos:start="77:36" pos:end="77:51"><name pos:start="77:36" pos:end="77:36">q</name> <operator pos:start="77:38" pos:end="77:38">-</operator> <name pos:start="77:40" pos:end="77:47">pseg_len</name> <operator pos:start="77:49" pos:end="77:49">-</operator> <literal type="number" pos:start="77:51" pos:end="77:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="167:5"><if pos:start="81:5" pos:end="167:5">if <condition pos:start="81:8" pos:end="81:23">(<expr pos:start="81:9" pos:end="81:22"><operator pos:start="81:9" pos:end="81:9">!</operator><name pos:start="81:10" pos:end="81:22"><name pos:start="81:10" pos:end="81:10">s</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:22">hide_state</name></name></expr>)</condition> <block pos:start="81:25" pos:end="167:5">{<block_content pos:start="83:9" pos:end="165:9">

        <for pos:start="83:9" pos:end="165:9">for <control pos:start="83:13" pos:end="83:60">(<init pos:start="83:14" pos:end="83:25"><expr pos:start="83:14" pos:end="83:24"><name pos:start="83:14" pos:end="83:20">clut_id</name> <operator pos:start="83:22" pos:end="83:22">=</operator> <literal type="number" pos:start="83:24" pos:end="83:24">0</literal></expr>;</init> <condition pos:start="83:27" pos:end="83:49"><expr pos:start="83:27" pos:end="83:48"><name pos:start="83:27" pos:end="83:33">clut_id</name> <operator pos:start="83:35" pos:end="83:35">&lt;</operator> <name pos:start="83:37" pos:end="83:48"><name pos:start="83:37" pos:end="83:37">h</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:48">num_rects</name></name></expr>;</condition> <incr pos:start="83:51" pos:end="83:59"><expr pos:start="83:51" pos:end="83:59"><name pos:start="83:51" pos:end="83:57">clut_id</name><operator pos:start="83:58" pos:end="83:59">++</operator></expr></incr>)</control> <block pos:start="83:62" pos:end="165:9">{<block_content pos:start="91:13" pos:end="163:61">



            <comment type="block" pos:start="87:13" pos:end="87:30">/* CLUT segment */</comment>



            <if_stmt pos:start="91:13" pos:end="107:13"><if pos:start="91:13" pos:end="97:13">if <condition pos:start="91:16" pos:end="91:50">(<expr pos:start="91:17" pos:end="91:49"><name pos:start="91:17" pos:end="91:33"><name pos:start="91:17" pos:end="91:17">h</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:24">rects</name><index pos:start="91:25" pos:end="91:33">[<expr pos:start="91:26" pos:end="91:32"><name pos:start="91:26" pos:end="91:32">clut_id</name></expr>]</index></name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:44">nb_colors</name> <operator pos:start="91:46" pos:end="91:47">&lt;=</operator> <literal type="number" pos:start="91:49" pos:end="91:49">4</literal></expr>)</condition> <block pos:start="91:52" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:30">

                <comment type="block" pos:start="93:17" pos:end="93:70">/* 2 bpp, some decoders do not support it correctly */</comment>

                <expr_stmt pos:start="95:17" pos:end="95:30"><expr pos:start="95:17" pos:end="95:29"><name pos:start="95:17" pos:end="95:25">bpp_index</name> <operator pos:start="95:27" pos:end="95:27">=</operator> <literal type="number" pos:start="95:29" pos:end="95:29">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="97:15" pos:end="103:13">else if <condition pos:start="97:23" pos:end="97:58">(<expr pos:start="97:24" pos:end="97:57"><name pos:start="97:24" pos:end="97:40"><name pos:start="97:24" pos:end="97:24">h</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:31">rects</name><index pos:start="97:32" pos:end="97:40">[<expr pos:start="97:33" pos:end="97:39"><name pos:start="97:33" pos:end="97:39">clut_id</name></expr>]</index></name><operator pos:start="97:41" pos:end="97:42">-&gt;</operator><name pos:start="97:43" pos:end="97:51">nb_colors</name> <operator pos:start="97:53" pos:end="97:54">&lt;=</operator> <literal type="number" pos:start="97:56" pos:end="97:57">16</literal></expr>)</condition> <block pos:start="97:60" pos:end="103:13">{<block_content pos:start="101:17" pos:end="101:30">

                <comment type="block" pos:start="99:17" pos:end="99:46">/* 4 bpp, standard encoding */</comment>

                <expr_stmt pos:start="101:17" pos:end="101:30"><expr pos:start="101:17" pos:end="101:29"><name pos:start="101:17" pos:end="101:25">bpp_index</name> <operator pos:start="101:27" pos:end="101:27">=</operator> <literal type="number" pos:start="101:29" pos:end="101:29">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="103:15" pos:end="107:13">else <block pos:start="103:20" pos:end="107:13">{<block_content pos:start="105:17" pos:end="105:26">

                <return pos:start="105:17" pos:end="105:26">return <expr pos:start="105:24" pos:end="105:25"><operator pos:start="105:24" pos:end="105:24">-</operator><literal type="number" pos:start="105:25" pos:end="105:25">1</literal></expr>;</return>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="111:13" pos:end="111:24"><expr pos:start="111:13" pos:end="111:23"><operator pos:start="111:13" pos:end="111:13">*</operator><name pos:start="111:14" pos:end="111:14">q</name><operator pos:start="111:15" pos:end="111:16">++</operator> <operator pos:start="111:18" pos:end="111:18">=</operator> <literal type="number" pos:start="111:20" pos:end="111:23">0x0f</literal></expr>;</expr_stmt> <comment type="block" pos:start="111:26" pos:end="111:40">/* sync byte */</comment>

            <expr_stmt pos:start="113:13" pos:end="113:24"><expr pos:start="113:13" pos:end="113:23"><operator pos:start="113:13" pos:end="113:13">*</operator><name pos:start="113:14" pos:end="113:14">q</name><operator pos:start="113:15" pos:end="113:16">++</operator> <operator pos:start="113:18" pos:end="113:18">=</operator> <literal type="number" pos:start="113:20" pos:end="113:23">0x12</literal></expr>;</expr_stmt> <comment type="block" pos:start="113:26" pos:end="113:54">/* CLUT definition segment */</comment>

            <expr_stmt pos:start="115:13" pos:end="115:45"><expr pos:start="115:13" pos:end="115:44"><call pos:start="115:13" pos:end="115:44"><name pos:start="115:13" pos:end="115:31">bytestream_put_be16</name><argument_list pos:start="115:32" pos:end="115:44">(<argument pos:start="115:33" pos:end="115:34"><expr pos:start="115:33" pos:end="115:34"><operator pos:start="115:33" pos:end="115:33">&amp;</operator><name pos:start="115:34" pos:end="115:34">q</name></expr></argument>, <argument pos:start="115:37" pos:end="115:43"><expr pos:start="115:37" pos:end="115:43"><name pos:start="115:37" pos:end="115:43">page_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:25"><expr pos:start="117:13" pos:end="117:24"><name pos:start="117:13" pos:end="117:20">pseg_len</name> <operator pos:start="117:22" pos:end="117:22">=</operator> <name pos:start="117:24" pos:end="117:24">q</name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:19"><expr pos:start="119:13" pos:end="119:18"><name pos:start="119:13" pos:end="119:13">q</name> <operator pos:start="119:15" pos:end="119:16">+=</operator> <literal type="number" pos:start="119:18" pos:end="119:18">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="119:21" pos:end="119:40">/* segment length */</comment>

            <expr_stmt pos:start="121:13" pos:end="121:27"><expr pos:start="121:13" pos:end="121:26"><operator pos:start="121:13" pos:end="121:13">*</operator><name pos:start="121:14" pos:end="121:14">q</name><operator pos:start="121:15" pos:end="121:16">++</operator> <operator pos:start="121:18" pos:end="121:18">=</operator> <name pos:start="121:20" pos:end="121:26">clut_id</name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:34"><expr pos:start="123:13" pos:end="123:33"><operator pos:start="123:13" pos:end="123:13">*</operator><name pos:start="123:14" pos:end="123:14">q</name><operator pos:start="123:15" pos:end="123:16">++</operator> <operator pos:start="123:18" pos:end="123:18">=</operator> <operator pos:start="123:20" pos:end="123:20">(</operator><literal type="number" pos:start="123:21" pos:end="123:21">0</literal> <operator pos:start="123:23" pos:end="123:24">&lt;&lt;</operator> <literal type="number" pos:start="123:26" pos:end="123:26">4</literal><operator pos:start="123:27" pos:end="123:27">)</operator> <operator pos:start="123:29" pos:end="123:29">|</operator> <literal type="number" pos:start="123:31" pos:end="123:33">0xf</literal></expr>;</expr_stmt> <comment type="block" pos:start="123:36" pos:end="123:52">/* version = 0 */</comment>



            <for pos:start="127:13" pos:end="159:13">for<control pos:start="127:16" pos:end="127:61">(<init pos:start="127:17" pos:end="127:22"><expr pos:start="127:17" pos:end="127:21"><name pos:start="127:17" pos:end="127:17">i</name> <operator pos:start="127:19" pos:end="127:19">=</operator> <literal type="number" pos:start="127:21" pos:end="127:21">0</literal></expr>;</init> <condition pos:start="127:24" pos:end="127:56"><expr pos:start="127:24" pos:end="127:55"><name pos:start="127:24" pos:end="127:24">i</name> <operator pos:start="127:26" pos:end="127:26">&lt;</operator> <name pos:start="127:28" pos:end="127:44"><name pos:start="127:28" pos:end="127:28">h</name><operator pos:start="127:29" pos:end="127:30">-&gt;</operator><name pos:start="127:31" pos:end="127:35">rects</name><index pos:start="127:36" pos:end="127:44">[<expr pos:start="127:37" pos:end="127:43"><name pos:start="127:37" pos:end="127:43">clut_id</name></expr>]</index></name><operator pos:start="127:45" pos:end="127:46">-&gt;</operator><name pos:start="127:47" pos:end="127:55">nb_colors</name></expr>;</condition> <incr pos:start="127:58" pos:end="127:60"><expr pos:start="127:58" pos:end="127:60"><name pos:start="127:58" pos:end="127:58">i</name><operator pos:start="127:59" pos:end="127:60">++</operator></expr></incr>)</control> <block pos:start="127:63" pos:end="159:13">{<block_content pos:start="129:17" pos:end="157:17">

                <expr_stmt pos:start="129:17" pos:end="129:25"><expr pos:start="129:17" pos:end="129:24"><operator pos:start="129:17" pos:end="129:17">*</operator><name pos:start="129:18" pos:end="129:18">q</name><operator pos:start="129:19" pos:end="129:20">++</operator> <operator pos:start="129:22" pos:end="129:22">=</operator> <name pos:start="129:24" pos:end="129:24">i</name></expr>;</expr_stmt> <comment type="block" pos:start="129:27" pos:end="129:45">/* clut_entry_id */</comment>

                <expr_stmt pos:start="131:17" pos:end="131:63"><expr pos:start="131:17" pos:end="131:62"><operator pos:start="131:17" pos:end="131:17">*</operator><name pos:start="131:18" pos:end="131:18">q</name><operator pos:start="131:19" pos:end="131:20">++</operator> <operator pos:start="131:22" pos:end="131:22">=</operator> <operator pos:start="131:24" pos:end="131:24">(</operator><literal type="number" pos:start="131:25" pos:end="131:25">1</literal> <operator pos:start="131:27" pos:end="131:28">&lt;&lt;</operator> <operator pos:start="131:30" pos:end="131:30">(</operator><literal type="number" pos:start="131:31" pos:end="131:33">7</literal> <operator pos:start="131:33" pos:end="131:33">-</operator> <name pos:start="131:35" pos:end="131:43">bpp_index</name><operator pos:start="131:44" pos:end="131:44">)</operator><operator pos:start="131:45" pos:end="131:45">)</operator> <operator pos:start="131:47" pos:end="131:47">|</operator> <operator pos:start="131:49" pos:end="131:49">(</operator><literal type="number" pos:start="131:50" pos:end="131:52">0xf</literal> <operator pos:start="131:54" pos:end="131:55">&lt;&lt;</operator> <literal type="number" pos:start="131:57" pos:end="131:57">1</literal><operator pos:start="131:58" pos:end="131:58">)</operator> <operator pos:start="131:60" pos:end="131:60">|</operator> <literal type="number" pos:start="131:62" pos:end="131:62">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="131:65" pos:end="131:93">/* 2 bits/pixel full range */</comment>

                <block pos:start="133:17" pos:end="157:17">{<block_content pos:start="135:21" pos:end="155:35">

                    <decl_stmt pos:start="135:21" pos:end="135:35"><decl pos:start="135:21" pos:end="135:25"><type pos:start="135:21" pos:end="135:23"><name pos:start="135:21" pos:end="135:23">int</name></type> <name pos:start="135:25" pos:end="135:25">a</name></decl>, <decl pos:start="135:28" pos:end="135:28"><type ref="prev" pos:start="135:21" pos:end="135:23"/><name pos:start="135:28" pos:end="135:28">r</name></decl>, <decl pos:start="135:31" pos:end="135:31"><type ref="prev" pos:start="135:21" pos:end="135:23"/><name pos:start="135:31" pos:end="135:31">g</name></decl>, <decl pos:start="135:34" pos:end="135:34"><type ref="prev" pos:start="135:21" pos:end="135:23"/><name pos:start="135:34" pos:end="135:34">b</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="137:21" pos:end="137:80"><decl pos:start="137:21" pos:end="137:79"><type pos:start="137:21" pos:end="137:28"><name pos:start="137:21" pos:end="137:28">uint32_t</name></type> <name pos:start="137:30" pos:end="137:30">x</name><init pos:start="137:31" pos:end="137:79">= <expr pos:start="137:33" pos:end="137:79"><operator pos:start="137:33" pos:end="137:33">(</operator><operator pos:start="137:34" pos:end="137:34">(</operator><name pos:start="137:35" pos:end="137:42">uint32_t</name><operator pos:start="137:43" pos:end="137:43">*</operator><operator pos:start="137:44" pos:end="137:44">)</operator><name pos:start="137:45" pos:end="137:61"><name pos:start="137:45" pos:end="137:45">h</name><operator pos:start="137:46" pos:end="137:47">-&gt;</operator><name pos:start="137:48" pos:end="137:52">rects</name><index pos:start="137:53" pos:end="137:61">[<expr pos:start="137:54" pos:end="137:60"><name pos:start="137:54" pos:end="137:60">clut_id</name></expr>]</index></name><operator pos:start="137:62" pos:end="137:63">-&gt;</operator><name pos:start="137:64" pos:end="137:75"><name pos:start="137:64" pos:end="137:67">pict</name><operator pos:start="137:68" pos:end="137:68">.</operator><name pos:start="137:69" pos:end="137:72">data</name><index pos:start="137:73" pos:end="137:75">[<expr pos:start="137:74" pos:end="137:74"><literal type="number" pos:start="137:74" pos:end="137:74">1</literal></expr>]</index></name><operator pos:start="137:76" pos:end="137:76">)</operator><index pos:start="137:77" pos:end="137:79">[<expr pos:start="137:78" pos:end="137:78"><name pos:start="137:78" pos:end="137:78">i</name></expr>]</index></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="139:21" pos:end="139:41"><expr pos:start="139:21" pos:end="139:40"><name pos:start="139:21" pos:end="139:21">a</name> <operator pos:start="139:23" pos:end="139:23">=</operator> <operator pos:start="139:25" pos:end="139:25">(</operator><name pos:start="139:26" pos:end="139:26">x</name> <operator pos:start="139:28" pos:end="139:29">&gt;&gt;</operator> <literal type="number" pos:start="139:31" pos:end="139:32">24</literal><operator pos:start="139:33" pos:end="139:33">)</operator> <operator pos:start="139:35" pos:end="139:35">&amp;</operator> <literal type="number" pos:start="139:37" pos:end="139:40">0xff</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="141:21" pos:end="141:41"><expr pos:start="141:21" pos:end="141:40"><name pos:start="141:21" pos:end="141:21">r</name> <operator pos:start="141:23" pos:end="141:23">=</operator> <operator pos:start="141:25" pos:end="141:25">(</operator><name pos:start="141:26" pos:end="141:26">x</name> <operator pos:start="141:28" pos:end="141:29">&gt;&gt;</operator> <literal type="number" pos:start="141:31" pos:end="141:32">16</literal><operator pos:start="141:33" pos:end="141:33">)</operator> <operator pos:start="141:35" pos:end="141:35">&amp;</operator> <literal type="number" pos:start="141:37" pos:end="141:40">0xff</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="143:21" pos:end="143:41"><expr pos:start="143:21" pos:end="143:40"><name pos:start="143:21" pos:end="143:21">g</name> <operator pos:start="143:23" pos:end="143:23">=</operator> <operator pos:start="143:25" pos:end="143:25">(</operator><name pos:start="143:26" pos:end="143:26">x</name> <operator pos:start="143:28" pos:end="143:29">&gt;&gt;</operator>  <literal type="number" pos:start="143:32" pos:end="143:32">8</literal><operator pos:start="143:33" pos:end="143:33">)</operator> <operator pos:start="143:35" pos:end="143:35">&amp;</operator> <literal type="number" pos:start="143:37" pos:end="143:40">0xff</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="145:21" pos:end="145:41"><expr pos:start="145:21" pos:end="145:40"><name pos:start="145:21" pos:end="145:21">b</name> <operator pos:start="145:23" pos:end="145:23">=</operator> <operator pos:start="145:25" pos:end="145:25">(</operator><name pos:start="145:26" pos:end="145:26">x</name> <operator pos:start="145:28" pos:end="145:29">&gt;&gt;</operator>  <literal type="number" pos:start="145:32" pos:end="145:32">0</literal><operator pos:start="145:33" pos:end="145:33">)</operator> <operator pos:start="145:35" pos:end="145:35">&amp;</operator> <literal type="number" pos:start="145:37" pos:end="145:40">0xff</literal></expr>;</expr_stmt>



                    <expr_stmt pos:start="149:21" pos:end="149:50"><expr pos:start="149:21" pos:end="149:49"><operator pos:start="149:21" pos:end="149:21">*</operator><name pos:start="149:22" pos:end="149:22">q</name><operator pos:start="149:23" pos:end="149:24">++</operator> <operator pos:start="149:26" pos:end="149:26">=</operator> <call pos:start="149:28" pos:end="149:49"><name pos:start="149:28" pos:end="149:40">RGB_TO_Y_CCIR</name><argument_list pos:start="149:41" pos:end="149:49">(<argument pos:start="149:42" pos:end="149:42"><expr pos:start="149:42" pos:end="149:42"><name pos:start="149:42" pos:end="149:42">r</name></expr></argument>, <argument pos:start="149:45" pos:end="149:45"><expr pos:start="149:45" pos:end="149:45"><name pos:start="149:45" pos:end="149:45">g</name></expr></argument>, <argument pos:start="149:48" pos:end="149:48"><expr pos:start="149:48" pos:end="149:48"><name pos:start="149:48" pos:end="149:48">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="151:21" pos:end="151:53"><expr pos:start="151:21" pos:end="151:52"><operator pos:start="151:21" pos:end="151:21">*</operator><name pos:start="151:22" pos:end="151:22">q</name><operator pos:start="151:23" pos:end="151:24">++</operator> <operator pos:start="151:26" pos:end="151:26">=</operator> <call pos:start="151:28" pos:end="151:52"><name pos:start="151:28" pos:end="151:40">RGB_TO_V_CCIR</name><argument_list pos:start="151:41" pos:end="151:52">(<argument pos:start="151:42" pos:end="151:42"><expr pos:start="151:42" pos:end="151:42"><name pos:start="151:42" pos:end="151:42">r</name></expr></argument>, <argument pos:start="151:45" pos:end="151:45"><expr pos:start="151:45" pos:end="151:45"><name pos:start="151:45" pos:end="151:45">g</name></expr></argument>, <argument pos:start="151:48" pos:end="151:48"><expr pos:start="151:48" pos:end="151:48"><name pos:start="151:48" pos:end="151:48">b</name></expr></argument>, <argument pos:start="151:51" pos:end="151:51"><expr pos:start="151:51" pos:end="151:51"><literal type="number" pos:start="151:51" pos:end="151:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="153:21" pos:end="153:53"><expr pos:start="153:21" pos:end="153:52"><operator pos:start="153:21" pos:end="153:21">*</operator><name pos:start="153:22" pos:end="153:22">q</name><operator pos:start="153:23" pos:end="153:24">++</operator> <operator pos:start="153:26" pos:end="153:26">=</operator> <call pos:start="153:28" pos:end="153:52"><name pos:start="153:28" pos:end="153:40">RGB_TO_U_CCIR</name><argument_list pos:start="153:41" pos:end="153:52">(<argument pos:start="153:42" pos:end="153:42"><expr pos:start="153:42" pos:end="153:42"><name pos:start="153:42" pos:end="153:42">r</name></expr></argument>, <argument pos:start="153:45" pos:end="153:45"><expr pos:start="153:45" pos:end="153:45"><name pos:start="153:45" pos:end="153:45">g</name></expr></argument>, <argument pos:start="153:48" pos:end="153:48"><expr pos:start="153:48" pos:end="153:48"><name pos:start="153:48" pos:end="153:48">b</name></expr></argument>, <argument pos:start="153:51" pos:end="153:51"><expr pos:start="153:51" pos:end="153:51"><literal type="number" pos:start="153:51" pos:end="153:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="155:21" pos:end="155:35"><expr pos:start="155:21" pos:end="155:34"><operator pos:start="155:21" pos:end="155:21">*</operator><name pos:start="155:22" pos:end="155:22">q</name><operator pos:start="155:23" pos:end="155:24">++</operator> <operator pos:start="155:26" pos:end="155:26">=</operator> <literal type="number" pos:start="155:28" pos:end="155:32">255</literal> <operator pos:start="155:32" pos:end="155:32">-</operator> <name pos:start="155:34" pos:end="155:34">a</name></expr>;</expr_stmt>

                </block_content>}</block>

            </block_content>}</block></for>



            <expr_stmt pos:start="163:13" pos:end="163:61"><expr pos:start="163:13" pos:end="163:60"><call pos:start="163:13" pos:end="163:60"><name pos:start="163:13" pos:end="163:31">bytestream_put_be16</name><argument_list pos:start="163:32" pos:end="163:60">(<argument pos:start="163:33" pos:end="163:41"><expr pos:start="163:33" pos:end="163:41"><operator pos:start="163:33" pos:end="163:33">&amp;</operator><name pos:start="163:34" pos:end="163:41">pseg_len</name></expr></argument>, <argument pos:start="163:44" pos:end="163:59"><expr pos:start="163:44" pos:end="163:59"><name pos:start="163:44" pos:end="163:44">q</name> <operator pos:start="163:46" pos:end="163:46">-</operator> <name pos:start="163:48" pos:end="163:55">pseg_len</name> <operator pos:start="163:57" pos:end="163:57">-</operator> <literal type="number" pos:start="163:59" pos:end="163:59">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <for pos:start="171:5" pos:end="245:5">for <control pos:start="171:9" pos:end="171:62">(<init pos:start="171:10" pos:end="171:23"><expr pos:start="171:10" pos:end="171:22"><name pos:start="171:10" pos:end="171:18">region_id</name> <operator pos:start="171:20" pos:end="171:20">=</operator> <literal type="number" pos:start="171:22" pos:end="171:22">0</literal></expr>;</init> <condition pos:start="171:25" pos:end="171:49"><expr pos:start="171:25" pos:end="171:48"><name pos:start="171:25" pos:end="171:33">region_id</name> <operator pos:start="171:35" pos:end="171:35">&lt;</operator> <name pos:start="171:37" pos:end="171:48"><name pos:start="171:37" pos:end="171:37">h</name><operator pos:start="171:38" pos:end="171:39">-&gt;</operator><name pos:start="171:40" pos:end="171:48">num_rects</name></name></expr>;</condition> <incr pos:start="171:51" pos:end="171:61"><expr pos:start="171:51" pos:end="171:61"><name pos:start="171:51" pos:end="171:59">region_id</name><operator pos:start="171:60" pos:end="171:61">++</operator></expr></incr>)</control> <block pos:start="171:64" pos:end="245:5">{<block_content pos:start="179:9" pos:end="243:57">



        <comment type="block" pos:start="175:9" pos:end="175:40">/* region composition segment */</comment>



        <if_stmt pos:start="179:9" pos:end="195:9"><if pos:start="179:9" pos:end="185:9">if <condition pos:start="179:12" pos:end="179:48">(<expr pos:start="179:13" pos:end="179:47"><name pos:start="179:13" pos:end="179:31"><name pos:start="179:13" pos:end="179:13">h</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:20">rects</name><index pos:start="179:21" pos:end="179:31">[<expr pos:start="179:22" pos:end="179:30"><name pos:start="179:22" pos:end="179:30">region_id</name></expr>]</index></name><operator pos:start="179:32" pos:end="179:33">-&gt;</operator><name pos:start="179:34" pos:end="179:42">nb_colors</name> <operator pos:start="179:44" pos:end="179:45">&lt;=</operator> <literal type="number" pos:start="179:47" pos:end="179:47">4</literal></expr>)</condition> <block pos:start="179:50" pos:end="185:9">{<block_content pos:start="183:13" pos:end="183:26">

            <comment type="block" pos:start="181:13" pos:end="181:66">/* 2 bpp, some decoders do not support it correctly */</comment>

            <expr_stmt pos:start="183:13" pos:end="183:26"><expr pos:start="183:13" pos:end="183:25"><name pos:start="183:13" pos:end="183:21">bpp_index</name> <operator pos:start="183:23" pos:end="183:23">=</operator> <literal type="number" pos:start="183:25" pos:end="183:25">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="185:11" pos:end="191:9">else if <condition pos:start="185:19" pos:end="185:56">(<expr pos:start="185:20" pos:end="185:55"><name pos:start="185:20" pos:end="185:38"><name pos:start="185:20" pos:end="185:20">h</name><operator pos:start="185:21" pos:end="185:22">-&gt;</operator><name pos:start="185:23" pos:end="185:27">rects</name><index pos:start="185:28" pos:end="185:38">[<expr pos:start="185:29" pos:end="185:37"><name pos:start="185:29" pos:end="185:37">region_id</name></expr>]</index></name><operator pos:start="185:39" pos:end="185:40">-&gt;</operator><name pos:start="185:41" pos:end="185:49">nb_colors</name> <operator pos:start="185:51" pos:end="185:52">&lt;=</operator> <literal type="number" pos:start="185:54" pos:end="185:55">16</literal></expr>)</condition> <block pos:start="185:58" pos:end="191:9">{<block_content pos:start="189:13" pos:end="189:26">

            <comment type="block" pos:start="187:13" pos:end="187:42">/* 4 bpp, standard encoding */</comment>

            <expr_stmt pos:start="189:13" pos:end="189:26"><expr pos:start="189:13" pos:end="189:25"><name pos:start="189:13" pos:end="189:21">bpp_index</name> <operator pos:start="189:23" pos:end="189:23">=</operator> <literal type="number" pos:start="189:25" pos:end="189:25">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="191:11" pos:end="195:9">else <block pos:start="191:16" pos:end="195:9">{<block_content pos:start="193:13" pos:end="193:22">

            <return pos:start="193:13" pos:end="193:22">return <expr pos:start="193:20" pos:end="193:21"><operator pos:start="193:20" pos:end="193:20">-</operator><literal type="number" pos:start="193:21" pos:end="193:21">1</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="199:9" pos:end="199:20"><expr pos:start="199:9" pos:end="199:19"><operator pos:start="199:9" pos:end="199:9">*</operator><name pos:start="199:10" pos:end="199:10">q</name><operator pos:start="199:11" pos:end="199:12">++</operator> <operator pos:start="199:14" pos:end="199:14">=</operator> <literal type="number" pos:start="199:16" pos:end="199:19">0x0f</literal></expr>;</expr_stmt> <comment type="block" pos:start="199:22" pos:end="199:36">/* sync_byte */</comment>

        <expr_stmt pos:start="201:9" pos:end="201:20"><expr pos:start="201:9" pos:end="201:19"><operator pos:start="201:9" pos:end="201:9">*</operator><name pos:start="201:10" pos:end="201:10">q</name><operator pos:start="201:11" pos:end="201:12">++</operator> <operator pos:start="201:14" pos:end="201:14">=</operator> <literal type="number" pos:start="201:16" pos:end="201:19">0x11</literal></expr>;</expr_stmt> <comment type="block" pos:start="201:22" pos:end="201:39">/* segment_type */</comment>

        <expr_stmt pos:start="203:9" pos:end="203:41"><expr pos:start="203:9" pos:end="203:40"><call pos:start="203:9" pos:end="203:40"><name pos:start="203:9" pos:end="203:27">bytestream_put_be16</name><argument_list pos:start="203:28" pos:end="203:40">(<argument pos:start="203:29" pos:end="203:30"><expr pos:start="203:29" pos:end="203:30"><operator pos:start="203:29" pos:end="203:29">&amp;</operator><name pos:start="203:30" pos:end="203:30">q</name></expr></argument>, <argument pos:start="203:33" pos:end="203:39"><expr pos:start="203:33" pos:end="203:39"><name pos:start="203:33" pos:end="203:39">page_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:21"><expr pos:start="205:9" pos:end="205:20"><name pos:start="205:9" pos:end="205:16">pseg_len</name> <operator pos:start="205:18" pos:end="205:18">=</operator> <name pos:start="205:20" pos:end="205:20">q</name></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:15"><expr pos:start="207:9" pos:end="207:14"><name pos:start="207:9" pos:end="207:9">q</name> <operator pos:start="207:11" pos:end="207:12">+=</operator> <literal type="number" pos:start="207:14" pos:end="207:14">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="207:17" pos:end="207:36">/* segment length */</comment>

        <expr_stmt pos:start="209:9" pos:end="209:25"><expr pos:start="209:9" pos:end="209:24"><operator pos:start="209:9" pos:end="209:9">*</operator><name pos:start="209:10" pos:end="209:10">q</name><operator pos:start="209:11" pos:end="209:12">++</operator> <operator pos:start="209:14" pos:end="209:14">=</operator> <name pos:start="209:16" pos:end="209:24">region_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:58"><expr pos:start="211:9" pos:end="211:57"><operator pos:start="211:9" pos:end="211:9">*</operator><name pos:start="211:10" pos:end="211:10">q</name><operator pos:start="211:11" pos:end="211:12">++</operator> <operator pos:start="211:14" pos:end="211:14">=</operator> <operator pos:start="211:16" pos:end="211:16">(</operator><name pos:start="211:17" pos:end="211:33"><name pos:start="211:17" pos:end="211:17">s</name><operator pos:start="211:18" pos:end="211:19">-&gt;</operator><name pos:start="211:20" pos:end="211:33">object_version</name></name> <operator pos:start="211:35" pos:end="211:36">&lt;&lt;</operator> <literal type="number" pos:start="211:38" pos:end="211:38">4</literal><operator pos:start="211:39" pos:end="211:39">)</operator> <operator pos:start="211:41" pos:end="211:41">|</operator> <operator pos:start="211:43" pos:end="211:43">(</operator><literal type="number" pos:start="211:44" pos:end="211:44">0</literal> <operator pos:start="211:46" pos:end="211:47">&lt;&lt;</operator> <literal type="number" pos:start="211:49" pos:end="211:49">3</literal><operator pos:start="211:50" pos:end="211:50">)</operator> <operator pos:start="211:52" pos:end="211:52">|</operator> <literal type="number" pos:start="211:54" pos:end="211:57">0x07</literal></expr>;</expr_stmt> <comment type="block" pos:start="211:60" pos:end="211:82">/* version , no fill */</comment>

        <expr_stmt pos:start="213:9" pos:end="213:56"><expr pos:start="213:9" pos:end="213:55"><call pos:start="213:9" pos:end="213:55"><name pos:start="213:9" pos:end="213:27">bytestream_put_be16</name><argument_list pos:start="213:28" pos:end="213:55">(<argument pos:start="213:29" pos:end="213:30"><expr pos:start="213:29" pos:end="213:30"><operator pos:start="213:29" pos:end="213:29">&amp;</operator><name pos:start="213:30" pos:end="213:30">q</name></expr></argument>, <argument pos:start="213:33" pos:end="213:54"><expr pos:start="213:33" pos:end="213:54"><name pos:start="213:33" pos:end="213:51"><name pos:start="213:33" pos:end="213:33">h</name><operator pos:start="213:34" pos:end="213:35">-&gt;</operator><name pos:start="213:36" pos:end="213:40">rects</name><index pos:start="213:41" pos:end="213:51">[<expr pos:start="213:42" pos:end="213:50"><name pos:start="213:42" pos:end="213:50">region_id</name></expr>]</index></name><operator pos:start="213:52" pos:end="213:53">-&gt;</operator><name pos:start="213:54" pos:end="213:54">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="213:58" pos:end="213:75">/* region width */</comment>

        <expr_stmt pos:start="215:9" pos:end="215:56"><expr pos:start="215:9" pos:end="215:55"><call pos:start="215:9" pos:end="215:55"><name pos:start="215:9" pos:end="215:27">bytestream_put_be16</name><argument_list pos:start="215:28" pos:end="215:55">(<argument pos:start="215:29" pos:end="215:30"><expr pos:start="215:29" pos:end="215:30"><operator pos:start="215:29" pos:end="215:29">&amp;</operator><name pos:start="215:30" pos:end="215:30">q</name></expr></argument>, <argument pos:start="215:33" pos:end="215:54"><expr pos:start="215:33" pos:end="215:54"><name pos:start="215:33" pos:end="215:51"><name pos:start="215:33" pos:end="215:33">h</name><operator pos:start="215:34" pos:end="215:35">-&gt;</operator><name pos:start="215:36" pos:end="215:40">rects</name><index pos:start="215:41" pos:end="215:51">[<expr pos:start="215:42" pos:end="215:50"><name pos:start="215:42" pos:end="215:50">region_id</name></expr>]</index></name><operator pos:start="215:52" pos:end="215:53">-&gt;</operator><name pos:start="215:54" pos:end="215:54">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="215:58" pos:end="215:76">/* region height */</comment>

        <expr_stmt pos:start="217:9" pos:end="217:70"><expr pos:start="217:9" pos:end="217:69"><operator pos:start="217:9" pos:end="217:9">*</operator><name pos:start="217:10" pos:end="217:10">q</name><operator pos:start="217:11" pos:end="217:12">++</operator> <operator pos:start="217:14" pos:end="217:14">=</operator> <operator pos:start="217:16" pos:end="217:16">(</operator><operator pos:start="217:17" pos:end="217:17">(</operator><literal type="number" pos:start="217:18" pos:end="217:20">1</literal> <operator pos:start="217:20" pos:end="217:20">+</operator> <name pos:start="217:22" pos:end="217:30">bpp_index</name><operator pos:start="217:31" pos:end="217:31">)</operator> <operator pos:start="217:33" pos:end="217:34">&lt;&lt;</operator> <literal type="number" pos:start="217:36" pos:end="217:36">5</literal><operator pos:start="217:37" pos:end="217:37">)</operator> <operator pos:start="217:39" pos:end="217:39">|</operator> <operator pos:start="217:41" pos:end="217:41">(</operator><operator pos:start="217:42" pos:end="217:42">(</operator><literal type="number" pos:start="217:43" pos:end="217:45">1</literal> <operator pos:start="217:45" pos:end="217:45">+</operator> <name pos:start="217:47" pos:end="217:55">bpp_index</name><operator pos:start="217:56" pos:end="217:56">)</operator> <operator pos:start="217:58" pos:end="217:59">&lt;&lt;</operator> <literal type="number" pos:start="217:61" pos:end="217:61">2</literal><operator pos:start="217:62" pos:end="217:62">)</operator> <operator pos:start="217:64" pos:end="217:64">|</operator> <literal type="number" pos:start="217:66" pos:end="217:69">0x03</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:25"><expr pos:start="219:9" pos:end="219:24"><operator pos:start="219:9" pos:end="219:9">*</operator><name pos:start="219:10" pos:end="219:10">q</name><operator pos:start="219:11" pos:end="219:12">++</operator> <operator pos:start="219:14" pos:end="219:14">=</operator> <name pos:start="219:16" pos:end="219:24">region_id</name></expr>;</expr_stmt> <comment type="block" pos:start="219:27" pos:end="219:52">/* clut_id == region_id */</comment>

        <expr_stmt pos:start="221:9" pos:end="221:17"><expr pos:start="221:9" pos:end="221:16"><operator pos:start="221:9" pos:end="221:9">*</operator><name pos:start="221:10" pos:end="221:10">q</name><operator pos:start="221:11" pos:end="221:12">++</operator> <operator pos:start="221:14" pos:end="221:14">=</operator> <literal type="number" pos:start="221:16" pos:end="221:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="221:19" pos:end="221:41">/* 8 bit fill colors */</comment>

        <expr_stmt pos:start="223:9" pos:end="223:20"><expr pos:start="223:9" pos:end="223:19"><operator pos:start="223:9" pos:end="223:9">*</operator><name pos:start="223:10" pos:end="223:10">q</name><operator pos:start="223:11" pos:end="223:12">++</operator> <operator pos:start="223:14" pos:end="223:14">=</operator> <literal type="number" pos:start="223:16" pos:end="223:19">0x03</literal></expr>;</expr_stmt> <comment type="block" pos:start="223:22" pos:end="223:54">/* 4 bit and 2 bit fill colors */</comment>



        <if_stmt pos:start="227:9" pos:end="239:9"><if pos:start="227:9" pos:end="239:9">if <condition pos:start="227:12" pos:end="227:27">(<expr pos:start="227:13" pos:end="227:26"><operator pos:start="227:13" pos:end="227:13">!</operator><name pos:start="227:14" pos:end="227:26"><name pos:start="227:14" pos:end="227:14">s</name><operator pos:start="227:15" pos:end="227:16">-&gt;</operator><name pos:start="227:17" pos:end="227:26">hide_state</name></name></expr>)</condition> <block pos:start="227:29" pos:end="239:9">{<block_content pos:start="229:13" pos:end="237:21">

            <expr_stmt pos:start="229:13" pos:end="229:47"><expr pos:start="229:13" pos:end="229:46"><call pos:start="229:13" pos:end="229:46"><name pos:start="229:13" pos:end="229:31">bytestream_put_be16</name><argument_list pos:start="229:32" pos:end="229:46">(<argument pos:start="229:33" pos:end="229:34"><expr pos:start="229:33" pos:end="229:34"><operator pos:start="229:33" pos:end="229:33">&amp;</operator><name pos:start="229:34" pos:end="229:34">q</name></expr></argument>, <argument pos:start="229:37" pos:end="229:45"><expr pos:start="229:37" pos:end="229:45"><name pos:start="229:37" pos:end="229:45">region_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="229:49" pos:end="229:76">/* object_id == region_id */</comment>

            <expr_stmt pos:start="231:13" pos:end="231:39"><expr pos:start="231:13" pos:end="231:38"><operator pos:start="231:13" pos:end="231:13">*</operator><name pos:start="231:14" pos:end="231:14">q</name><operator pos:start="231:15" pos:end="231:16">++</operator> <operator pos:start="231:18" pos:end="231:18">=</operator> <operator pos:start="231:20" pos:end="231:20">(</operator><literal type="number" pos:start="231:21" pos:end="231:21">0</literal> <operator pos:start="231:23" pos:end="231:24">&lt;&lt;</operator> <literal type="number" pos:start="231:26" pos:end="231:26">6</literal><operator pos:start="231:27" pos:end="231:27">)</operator> <operator pos:start="231:29" pos:end="231:29">|</operator> <operator pos:start="231:31" pos:end="231:31">(</operator><literal type="number" pos:start="231:32" pos:end="231:32">0</literal> <operator pos:start="231:34" pos:end="231:35">&lt;&lt;</operator> <literal type="number" pos:start="231:37" pos:end="231:37">4</literal><operator pos:start="231:38" pos:end="231:38">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:21"><expr pos:start="233:13" pos:end="233:20"><operator pos:start="233:13" pos:end="233:13">*</operator><name pos:start="233:14" pos:end="233:14">q</name><operator pos:start="233:15" pos:end="233:16">++</operator> <operator pos:start="233:18" pos:end="233:18">=</operator> <literal type="number" pos:start="233:20" pos:end="233:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:24"><expr pos:start="235:13" pos:end="235:23"><operator pos:start="235:13" pos:end="235:13">*</operator><name pos:start="235:14" pos:end="235:14">q</name><operator pos:start="235:15" pos:end="235:16">++</operator> <operator pos:start="235:18" pos:end="235:18">=</operator> <literal type="number" pos:start="235:20" pos:end="235:23">0xf0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:21"><expr pos:start="237:13" pos:end="237:20"><operator pos:start="237:13" pos:end="237:13">*</operator><name pos:start="237:14" pos:end="237:14">q</name><operator pos:start="237:15" pos:end="237:16">++</operator> <operator pos:start="237:18" pos:end="237:18">=</operator> <literal type="number" pos:start="237:20" pos:end="237:20">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="243:9" pos:end="243:57"><expr pos:start="243:9" pos:end="243:56"><call pos:start="243:9" pos:end="243:56"><name pos:start="243:9" pos:end="243:27">bytestream_put_be16</name><argument_list pos:start="243:28" pos:end="243:56">(<argument pos:start="243:29" pos:end="243:37"><expr pos:start="243:29" pos:end="243:37"><operator pos:start="243:29" pos:end="243:29">&amp;</operator><name pos:start="243:30" pos:end="243:37">pseg_len</name></expr></argument>, <argument pos:start="243:40" pos:end="243:55"><expr pos:start="243:40" pos:end="243:55"><name pos:start="243:40" pos:end="243:40">q</name> <operator pos:start="243:42" pos:end="243:42">-</operator> <name pos:start="243:44" pos:end="243:51">pseg_len</name> <operator pos:start="243:53" pos:end="243:53">-</operator> <literal type="number" pos:start="243:55" pos:end="243:55">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="249:5" pos:end="357:5"><if pos:start="249:5" pos:end="357:5">if <condition pos:start="249:8" pos:end="249:23">(<expr pos:start="249:9" pos:end="249:22"><operator pos:start="249:9" pos:end="249:9">!</operator><name pos:start="249:10" pos:end="249:22"><name pos:start="249:10" pos:end="249:10">s</name><operator pos:start="249:11" pos:end="249:12">-&gt;</operator><name pos:start="249:13" pos:end="249:22">hide_state</name></name></expr>)</condition> <block pos:start="249:25" pos:end="357:5">{<block_content pos:start="253:9" pos:end="355:9">



        <for pos:start="253:9" pos:end="355:9">for <control pos:start="253:13" pos:end="253:66">(<init pos:start="253:14" pos:end="253:27"><expr pos:start="253:14" pos:end="253:26"><name pos:start="253:14" pos:end="253:22">object_id</name> <operator pos:start="253:24" pos:end="253:24">=</operator> <literal type="number" pos:start="253:26" pos:end="253:26">0</literal></expr>;</init> <condition pos:start="253:29" pos:end="253:53"><expr pos:start="253:29" pos:end="253:52"><name pos:start="253:29" pos:end="253:37">object_id</name> <operator pos:start="253:39" pos:end="253:39">&lt;</operator> <name pos:start="253:41" pos:end="253:52"><name pos:start="253:41" pos:end="253:41">h</name><operator pos:start="253:42" pos:end="253:43">-&gt;</operator><name pos:start="253:44" pos:end="253:52">num_rects</name></name></expr>;</condition> <incr pos:start="253:55" pos:end="253:65"><expr pos:start="253:55" pos:end="253:65"><name pos:start="253:55" pos:end="253:63">object_id</name><operator pos:start="253:64" pos:end="253:65">++</operator></expr></incr>)</control> <block pos:start="253:68" pos:end="355:9">{<block_content pos:start="259:13" pos:end="353:61">

            <comment type="block" pos:start="255:13" pos:end="255:37">/* Object Data segment */</comment>



            <if_stmt pos:start="259:13" pos:end="275:13"><if pos:start="259:13" pos:end="265:13">if <condition pos:start="259:16" pos:end="259:52">(<expr pos:start="259:17" pos:end="259:51"><name pos:start="259:17" pos:end="259:35"><name pos:start="259:17" pos:end="259:17">h</name><operator pos:start="259:18" pos:end="259:19">-&gt;</operator><name pos:start="259:20" pos:end="259:24">rects</name><index pos:start="259:25" pos:end="259:35">[<expr pos:start="259:26" pos:end="259:34"><name pos:start="259:26" pos:end="259:34">object_id</name></expr>]</index></name><operator pos:start="259:36" pos:end="259:37">-&gt;</operator><name pos:start="259:38" pos:end="259:46">nb_colors</name> <operator pos:start="259:48" pos:end="259:49">&lt;=</operator> <literal type="number" pos:start="259:51" pos:end="259:51">4</literal></expr>)</condition> <block pos:start="259:54" pos:end="265:13">{<block_content pos:start="263:17" pos:end="263:30">

                <comment type="block" pos:start="261:17" pos:end="261:70">/* 2 bpp, some decoders do not support it correctly */</comment>

                <expr_stmt pos:start="263:17" pos:end="263:30"><expr pos:start="263:17" pos:end="263:29"><name pos:start="263:17" pos:end="263:25">bpp_index</name> <operator pos:start="263:27" pos:end="263:27">=</operator> <literal type="number" pos:start="263:29" pos:end="263:29">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="265:15" pos:end="271:13">else if <condition pos:start="265:23" pos:end="265:60">(<expr pos:start="265:24" pos:end="265:59"><name pos:start="265:24" pos:end="265:42"><name pos:start="265:24" pos:end="265:24">h</name><operator pos:start="265:25" pos:end="265:26">-&gt;</operator><name pos:start="265:27" pos:end="265:31">rects</name><index pos:start="265:32" pos:end="265:42">[<expr pos:start="265:33" pos:end="265:41"><name pos:start="265:33" pos:end="265:41">object_id</name></expr>]</index></name><operator pos:start="265:43" pos:end="265:44">-&gt;</operator><name pos:start="265:45" pos:end="265:53">nb_colors</name> <operator pos:start="265:55" pos:end="265:56">&lt;=</operator> <literal type="number" pos:start="265:58" pos:end="265:59">16</literal></expr>)</condition> <block pos:start="265:62" pos:end="271:13">{<block_content pos:start="269:17" pos:end="269:30">

                <comment type="block" pos:start="267:17" pos:end="267:46">/* 4 bpp, standard encoding */</comment>

                <expr_stmt pos:start="269:17" pos:end="269:30"><expr pos:start="269:17" pos:end="269:29"><name pos:start="269:17" pos:end="269:25">bpp_index</name> <operator pos:start="269:27" pos:end="269:27">=</operator> <literal type="number" pos:start="269:29" pos:end="269:29">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="271:15" pos:end="275:13">else <block pos:start="271:20" pos:end="275:13">{<block_content pos:start="273:17" pos:end="273:26">

                <return pos:start="273:17" pos:end="273:26">return <expr pos:start="273:24" pos:end="273:25"><operator pos:start="273:24" pos:end="273:24">-</operator><literal type="number" pos:start="273:25" pos:end="273:25">1</literal></expr>;</return>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="279:13" pos:end="279:24"><expr pos:start="279:13" pos:end="279:23"><operator pos:start="279:13" pos:end="279:13">*</operator><name pos:start="279:14" pos:end="279:14">q</name><operator pos:start="279:15" pos:end="279:16">++</operator> <operator pos:start="279:18" pos:end="279:18">=</operator> <literal type="number" pos:start="279:20" pos:end="279:23">0x0f</literal></expr>;</expr_stmt> <comment type="block" pos:start="279:26" pos:end="279:40">/* sync byte */</comment>

            <expr_stmt pos:start="281:13" pos:end="281:24"><expr pos:start="281:13" pos:end="281:23"><operator pos:start="281:13" pos:end="281:13">*</operator><name pos:start="281:14" pos:end="281:14">q</name><operator pos:start="281:15" pos:end="281:16">++</operator> <operator pos:start="281:18" pos:end="281:18">=</operator> <literal type="number" pos:start="281:20" pos:end="281:23">0x13</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="283:13" pos:end="283:45"><expr pos:start="283:13" pos:end="283:44"><call pos:start="283:13" pos:end="283:44"><name pos:start="283:13" pos:end="283:31">bytestream_put_be16</name><argument_list pos:start="283:32" pos:end="283:44">(<argument pos:start="283:33" pos:end="283:34"><expr pos:start="283:33" pos:end="283:34"><operator pos:start="283:33" pos:end="283:33">&amp;</operator><name pos:start="283:34" pos:end="283:34">q</name></expr></argument>, <argument pos:start="283:37" pos:end="283:43"><expr pos:start="283:37" pos:end="283:43"><name pos:start="283:37" pos:end="283:43">page_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:25"><expr pos:start="285:13" pos:end="285:24"><name pos:start="285:13" pos:end="285:20">pseg_len</name> <operator pos:start="285:22" pos:end="285:22">=</operator> <name pos:start="285:24" pos:end="285:24">q</name></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:19"><expr pos:start="287:13" pos:end="287:18"><name pos:start="287:13" pos:end="287:13">q</name> <operator pos:start="287:15" pos:end="287:16">+=</operator> <literal type="number" pos:start="287:18" pos:end="287:18">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="287:21" pos:end="287:40">/* segment length */</comment>



            <expr_stmt pos:start="291:13" pos:end="291:47"><expr pos:start="291:13" pos:end="291:46"><call pos:start="291:13" pos:end="291:46"><name pos:start="291:13" pos:end="291:31">bytestream_put_be16</name><argument_list pos:start="291:32" pos:end="291:46">(<argument pos:start="291:33" pos:end="291:34"><expr pos:start="291:33" pos:end="291:34"><operator pos:start="291:33" pos:end="291:33">&amp;</operator><name pos:start="291:34" pos:end="291:34">q</name></expr></argument>, <argument pos:start="291:37" pos:end="291:45"><expr pos:start="291:37" pos:end="291:45"><name pos:start="291:37" pos:end="291:45">object_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:70"><expr pos:start="293:13" pos:end="293:69"><operator pos:start="293:13" pos:end="293:13">*</operator><name pos:start="293:14" pos:end="293:14">q</name><operator pos:start="293:15" pos:end="293:16">++</operator> <operator pos:start="293:18" pos:end="293:18">=</operator> <operator pos:start="293:20" pos:end="293:20">(</operator><name pos:start="293:21" pos:end="293:37"><name pos:start="293:21" pos:end="293:21">s</name><operator pos:start="293:22" pos:end="293:23">-&gt;</operator><name pos:start="293:24" pos:end="293:37">object_version</name></name> <operator pos:start="293:39" pos:end="293:40">&lt;&lt;</operator> <literal type="number" pos:start="293:42" pos:end="293:42">4</literal><operator pos:start="293:43" pos:end="293:43">)</operator> <operator pos:start="293:45" pos:end="293:45">|</operator> <operator pos:start="293:47" pos:end="293:47">(</operator><literal type="number" pos:start="293:48" pos:end="293:48">0</literal> <operator pos:start="293:50" pos:end="293:51">&lt;&lt;</operator> <literal type="number" pos:start="293:53" pos:end="293:53">2</literal><operator pos:start="293:54" pos:end="293:54">)</operator> <operator pos:start="293:56" pos:end="293:56">|</operator> <operator pos:start="293:58" pos:end="293:58">(</operator><literal type="number" pos:start="293:59" pos:end="293:59">0</literal> <operator pos:start="293:61" pos:end="293:62">&lt;&lt;</operator> <literal type="number" pos:start="293:64" pos:end="293:64">1</literal><operator pos:start="293:65" pos:end="293:65">)</operator> <operator pos:start="293:67" pos:end="293:67">|</operator> <literal type="number" pos:start="293:69" pos:end="293:69">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="293:72" pos:end="297:98">/* version = 0,

                                                                       onject_coding_method,

                                                                       non_modifying_color_flag */</comment>

            <block pos:start="299:13" pos:end="349:13">{<block_content pos:start="301:17" pos:end="347:72">

                <decl_stmt pos:start="301:17" pos:end="301:83"><decl pos:start="301:17" pos:end="301:39"><type pos:start="301:17" pos:end="301:25"><name pos:start="301:17" pos:end="301:23">uint8_t</name> <modifier pos:start="301:25" pos:end="301:25">*</modifier></type><name pos:start="301:26" pos:end="301:39">ptop_field_len</name></decl>, <decl pos:start="301:42" pos:end="301:59"><type ref="prev" pos:start="301:17" pos:end="301:25"><modifier pos:start="301:42" pos:end="301:42">*</modifier></type><name pos:start="301:43" pos:end="301:59">pbottom_field_len</name></decl>, <decl pos:start="301:62" pos:end="301:69"><type ref="prev" pos:start="301:17" pos:end="301:25"><modifier pos:start="301:62" pos:end="301:62">*</modifier></type><name pos:start="301:63" pos:end="301:69">top_ptr</name></decl>, <decl pos:start="301:72" pos:end="301:82"><type ref="prev" pos:start="301:17" pos:end="301:25"><modifier pos:start="301:72" pos:end="301:72">*</modifier></type><name pos:start="301:73" pos:end="301:82">bottom_ptr</name></decl>;</decl_stmt>

                <function_decl pos:start="303:17" pos:end="307:54"><type pos:start="303:17" pos:end="303:20"><name pos:start="303:17" pos:end="303:20">void</name></type> (<modifier pos:start="303:23" pos:end="303:23">*</modifier><name pos:start="303:24" pos:end="303:37">dvb_encode_rle</name>)<parameter_list pos:start="303:39" pos:end="307:53">(<parameter pos:start="303:40" pos:end="303:51"><decl pos:start="303:40" pos:end="303:51"><type pos:start="303:40" pos:end="303:51"><name pos:start="303:40" pos:end="303:46">uint8_t</name> <modifier pos:start="303:48" pos:end="303:48">*</modifier><modifier pos:start="303:49" pos:end="303:49">*</modifier></type><name pos:start="303:50" pos:end="303:51">pq</name></decl></parameter>,

                                        <parameter pos:start="305:41" pos:end="305:61"><decl pos:start="305:41" pos:end="305:61"><type pos:start="305:41" pos:end="305:61"><specifier pos:start="305:41" pos:end="305:45">const</specifier> <name pos:start="305:47" pos:end="305:53">uint8_t</name> <modifier pos:start="305:55" pos:end="305:55">*</modifier></type><name pos:start="305:56" pos:end="305:61">bitmap</name></decl></parameter>, <parameter pos:start="305:64" pos:end="305:75"><decl pos:start="305:64" pos:end="305:75"><type pos:start="305:64" pos:end="305:75"><name pos:start="305:64" pos:end="305:66">int</name></type> <name pos:start="305:68" pos:end="305:75">linesize</name></decl></parameter>,

                                        <parameter pos:start="307:41" pos:end="307:45"><decl pos:start="307:41" pos:end="307:45"><type pos:start="307:41" pos:end="307:45"><name pos:start="307:41" pos:end="307:43">int</name></type> <name pos:start="307:45" pos:end="307:45">w</name></decl></parameter>, <parameter pos:start="307:48" pos:end="307:52"><decl pos:start="307:48" pos:end="307:52"><type pos:start="307:48" pos:end="307:52"><name pos:start="307:48" pos:end="307:50">int</name></type> <name pos:start="307:52" pos:end="307:52">h</name></decl></parameter>)</parameter_list>;</function_decl>

                <expr_stmt pos:start="309:17" pos:end="309:35"><expr pos:start="309:17" pos:end="309:34"><name pos:start="309:17" pos:end="309:30">ptop_field_len</name> <operator pos:start="309:32" pos:end="309:32">=</operator> <name pos:start="309:34" pos:end="309:34">q</name></expr>;</expr_stmt>

                <expr_stmt pos:start="311:17" pos:end="311:23"><expr pos:start="311:17" pos:end="311:22"><name pos:start="311:17" pos:end="311:17">q</name> <operator pos:start="311:19" pos:end="311:20">+=</operator> <literal type="number" pos:start="311:22" pos:end="311:22">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="313:17" pos:end="313:38"><expr pos:start="313:17" pos:end="313:37"><name pos:start="313:17" pos:end="313:33">pbottom_field_len</name> <operator pos:start="313:35" pos:end="313:35">=</operator> <name pos:start="313:37" pos:end="313:37">q</name></expr>;</expr_stmt>

                <expr_stmt pos:start="315:17" pos:end="315:23"><expr pos:start="315:17" pos:end="315:22"><name pos:start="315:17" pos:end="315:17">q</name> <operator pos:start="315:19" pos:end="315:20">+=</operator> <literal type="number" pos:start="315:22" pos:end="315:22">2</literal></expr>;</expr_stmt>



                <if_stmt pos:start="319:17" pos:end="325:53"><if pos:start="319:17" pos:end="321:53">if <condition pos:start="319:20" pos:end="319:35">(<expr pos:start="319:21" pos:end="319:34"><name pos:start="319:21" pos:end="319:29">bpp_index</name> <operator pos:start="319:31" pos:end="319:32">==</operator> <literal type="number" pos:start="319:34" pos:end="319:34">0</literal></expr>)</condition><block type="pseudo" pos:start="321:21" pos:end="321:53"><block_content pos:start="321:21" pos:end="321:53">

                    <expr_stmt pos:start="321:21" pos:end="321:53"><expr pos:start="321:21" pos:end="321:52"><name pos:start="321:21" pos:end="321:34">dvb_encode_rle</name> <operator pos:start="321:36" pos:end="321:36">=</operator> <name pos:start="321:38" pos:end="321:52">dvb_encode_rle2</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="323:17" pos:end="325:53">else<block type="pseudo" pos:start="325:21" pos:end="325:53"><block_content pos:start="325:21" pos:end="325:53">

                    <expr_stmt pos:start="325:21" pos:end="325:53"><expr pos:start="325:21" pos:end="325:52"><name pos:start="325:21" pos:end="325:34">dvb_encode_rle</name> <operator pos:start="325:36" pos:end="325:36">=</operator> <name pos:start="325:38" pos:end="325:52">dvb_encode_rle4</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <expr_stmt pos:start="329:17" pos:end="329:28"><expr pos:start="329:17" pos:end="329:27"><name pos:start="329:17" pos:end="329:23">top_ptr</name> <operator pos:start="329:25" pos:end="329:25">=</operator> <name pos:start="329:27" pos:end="329:27">q</name></expr>;</expr_stmt>

                <expr_stmt pos:start="331:17" pos:end="333:89"><expr pos:start="331:17" pos:end="333:88"><call pos:start="331:17" pos:end="333:88"><name pos:start="331:17" pos:end="331:30">dvb_encode_rle</name><argument_list pos:start="331:31" pos:end="333:88">(<argument pos:start="331:32" pos:end="331:33"><expr pos:start="331:32" pos:end="331:33"><operator pos:start="331:32" pos:end="331:32">&amp;</operator><name pos:start="331:33" pos:end="331:33">q</name></expr></argument>, <argument pos:start="331:36" pos:end="331:68"><expr pos:start="331:36" pos:end="331:68"><name pos:start="331:36" pos:end="331:54"><name pos:start="331:36" pos:end="331:36">h</name><operator pos:start="331:37" pos:end="331:38">-&gt;</operator><name pos:start="331:39" pos:end="331:43">rects</name><index pos:start="331:44" pos:end="331:54">[<expr pos:start="331:45" pos:end="331:53"><name pos:start="331:45" pos:end="331:53">object_id</name></expr>]</index></name><operator pos:start="331:55" pos:end="331:56">-&gt;</operator><name pos:start="331:57" pos:end="331:68"><name pos:start="331:57" pos:end="331:60">pict</name><operator pos:start="331:61" pos:end="331:61">.</operator><name pos:start="331:62" pos:end="331:65">data</name><index pos:start="331:66" pos:end="331:68">[<expr pos:start="331:67" pos:end="331:67"><literal type="number" pos:start="331:67" pos:end="331:67">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="331:71" pos:end="331:96"><expr pos:start="331:71" pos:end="331:96"><name pos:start="331:71" pos:end="331:89"><name pos:start="331:71" pos:end="331:71">h</name><operator pos:start="331:72" pos:end="331:73">-&gt;</operator><name pos:start="331:74" pos:end="331:78">rects</name><index pos:start="331:79" pos:end="331:89">[<expr pos:start="331:80" pos:end="331:88"><name pos:start="331:80" pos:end="331:88">object_id</name></expr>]</index></name><operator pos:start="331:90" pos:end="331:91">-&gt;</operator><name pos:start="331:92" pos:end="331:92">w</name> <operator pos:start="331:94" pos:end="331:94">*</operator> <literal type="number" pos:start="331:96" pos:end="331:96">2</literal></expr></argument>,

                                    <argument pos:start="333:37" pos:end="333:58"><expr pos:start="333:37" pos:end="333:58"><name pos:start="333:37" pos:end="333:55"><name pos:start="333:37" pos:end="333:37">h</name><operator pos:start="333:38" pos:end="333:39">-&gt;</operator><name pos:start="333:40" pos:end="333:44">rects</name><index pos:start="333:45" pos:end="333:55">[<expr pos:start="333:46" pos:end="333:54"><name pos:start="333:46" pos:end="333:54">object_id</name></expr>]</index></name><operator pos:start="333:56" pos:end="333:57">-&gt;</operator><name pos:start="333:58" pos:end="333:58">w</name></expr></argument>, <argument pos:start="333:61" pos:end="333:87"><expr pos:start="333:61" pos:end="333:87"><name pos:start="333:61" pos:end="333:79"><name pos:start="333:61" pos:end="333:61">h</name><operator pos:start="333:62" pos:end="333:63">-&gt;</operator><name pos:start="333:64" pos:end="333:68">rects</name><index pos:start="333:69" pos:end="333:79">[<expr pos:start="333:70" pos:end="333:78"><name pos:start="333:70" pos:end="333:78">object_id</name></expr>]</index></name><operator pos:start="333:80" pos:end="333:81">-&gt;</operator><name pos:start="333:82" pos:end="333:82">h</name> <operator pos:start="333:84" pos:end="333:85">&gt;&gt;</operator> <literal type="number" pos:start="333:87" pos:end="333:87">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="335:17" pos:end="335:31"><expr pos:start="335:17" pos:end="335:30"><name pos:start="335:17" pos:end="335:26">bottom_ptr</name> <operator pos:start="335:28" pos:end="335:28">=</operator> <name pos:start="335:30" pos:end="335:30">q</name></expr>;</expr_stmt>

                <expr_stmt pos:start="337:17" pos:end="341:65"><expr pos:start="337:17" pos:end="341:64"><call pos:start="337:17" pos:end="341:64"><name pos:start="337:17" pos:end="337:30">dvb_encode_rle</name><argument_list pos:start="337:31" pos:end="341:64">(<argument pos:start="337:32" pos:end="337:33"><expr pos:start="337:32" pos:end="337:33"><operator pos:start="337:32" pos:end="337:32">&amp;</operator><name pos:start="337:33" pos:end="337:33">q</name></expr></argument>, <argument pos:start="337:36" pos:end="337:93"><expr pos:start="337:36" pos:end="337:93"><name pos:start="337:36" pos:end="337:54"><name pos:start="337:36" pos:end="337:36">h</name><operator pos:start="337:37" pos:end="337:38">-&gt;</operator><name pos:start="337:39" pos:end="337:43">rects</name><index pos:start="337:44" pos:end="337:54">[<expr pos:start="337:45" pos:end="337:53"><name pos:start="337:45" pos:end="337:53">object_id</name></expr>]</index></name><operator pos:start="337:55" pos:end="337:56">-&gt;</operator><name pos:start="337:57" pos:end="337:68"><name pos:start="337:57" pos:end="337:60">pict</name><operator pos:start="337:61" pos:end="337:61">.</operator><name pos:start="337:62" pos:end="337:65">data</name><index pos:start="337:66" pos:end="337:68">[<expr pos:start="337:67" pos:end="337:67"><literal type="number" pos:start="337:67" pos:end="337:67">0</literal></expr>]</index></name> <operator pos:start="337:70" pos:end="337:70">+</operator> <name pos:start="337:72" pos:end="337:90"><name pos:start="337:72" pos:end="337:72">h</name><operator pos:start="337:73" pos:end="337:74">-&gt;</operator><name pos:start="337:75" pos:end="337:79">rects</name><index pos:start="337:80" pos:end="337:90">[<expr pos:start="337:81" pos:end="337:89"><name pos:start="337:81" pos:end="337:89">object_id</name></expr>]</index></name><operator pos:start="337:91" pos:end="337:92">-&gt;</operator><name pos:start="337:93" pos:end="337:93">w</name></expr></argument>,

                                    <argument pos:start="339:37" pos:end="339:62"><expr pos:start="339:37" pos:end="339:62"><name pos:start="339:37" pos:end="339:55"><name pos:start="339:37" pos:end="339:37">h</name><operator pos:start="339:38" pos:end="339:39">-&gt;</operator><name pos:start="339:40" pos:end="339:44">rects</name><index pos:start="339:45" pos:end="339:55">[<expr pos:start="339:46" pos:end="339:54"><name pos:start="339:46" pos:end="339:54">object_id</name></expr>]</index></name><operator pos:start="339:56" pos:end="339:57">-&gt;</operator><name pos:start="339:58" pos:end="339:58">w</name> <operator pos:start="339:60" pos:end="339:60">*</operator> <literal type="number" pos:start="339:62" pos:end="339:62">2</literal></expr></argument>, <argument pos:start="339:65" pos:end="339:86"><expr pos:start="339:65" pos:end="339:86"><name pos:start="339:65" pos:end="339:83"><name pos:start="339:65" pos:end="339:65">h</name><operator pos:start="339:66" pos:end="339:67">-&gt;</operator><name pos:start="339:68" pos:end="339:72">rects</name><index pos:start="339:73" pos:end="339:83">[<expr pos:start="339:74" pos:end="339:82"><name pos:start="339:74" pos:end="339:82">object_id</name></expr>]</index></name><operator pos:start="339:84" pos:end="339:85">-&gt;</operator><name pos:start="339:86" pos:end="339:86">w</name></expr></argument>,

                                    <argument pos:start="341:37" pos:end="341:63"><expr pos:start="341:37" pos:end="341:63"><name pos:start="341:37" pos:end="341:55"><name pos:start="341:37" pos:end="341:37">h</name><operator pos:start="341:38" pos:end="341:39">-&gt;</operator><name pos:start="341:40" pos:end="341:44">rects</name><index pos:start="341:45" pos:end="341:55">[<expr pos:start="341:46" pos:end="341:54"><name pos:start="341:46" pos:end="341:54">object_id</name></expr>]</index></name><operator pos:start="341:56" pos:end="341:57">-&gt;</operator><name pos:start="341:58" pos:end="341:58">h</name> <operator pos:start="341:60" pos:end="341:61">&gt;&gt;</operator> <literal type="number" pos:start="341:63" pos:end="341:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="345:17" pos:end="345:75"><expr pos:start="345:17" pos:end="345:74"><call pos:start="345:17" pos:end="345:74"><name pos:start="345:17" pos:end="345:35">bytestream_put_be16</name><argument_list pos:start="345:36" pos:end="345:74">(<argument pos:start="345:37" pos:end="345:51"><expr pos:start="345:37" pos:end="345:51"><operator pos:start="345:37" pos:end="345:37">&amp;</operator><name pos:start="345:38" pos:end="345:51">ptop_field_len</name></expr></argument>, <argument pos:start="345:54" pos:end="345:73"><expr pos:start="345:54" pos:end="345:73"><name pos:start="345:54" pos:end="345:63">bottom_ptr</name> <operator pos:start="345:65" pos:end="345:65">-</operator> <name pos:start="345:67" pos:end="345:73">top_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="347:17" pos:end="347:72"><expr pos:start="347:17" pos:end="347:71"><call pos:start="347:17" pos:end="347:71"><name pos:start="347:17" pos:end="347:35">bytestream_put_be16</name><argument_list pos:start="347:36" pos:end="347:71">(<argument pos:start="347:37" pos:end="347:54"><expr pos:start="347:37" pos:end="347:54"><operator pos:start="347:37" pos:end="347:37">&amp;</operator><name pos:start="347:38" pos:end="347:54">pbottom_field_len</name></expr></argument>, <argument pos:start="347:57" pos:end="347:70"><expr pos:start="347:57" pos:end="347:70"><name pos:start="347:57" pos:end="347:57">q</name> <operator pos:start="347:59" pos:end="347:59">-</operator> <name pos:start="347:61" pos:end="347:70">bottom_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>



            <expr_stmt pos:start="353:13" pos:end="353:61"><expr pos:start="353:13" pos:end="353:60"><call pos:start="353:13" pos:end="353:60"><name pos:start="353:13" pos:end="353:31">bytestream_put_be16</name><argument_list pos:start="353:32" pos:end="353:60">(<argument pos:start="353:33" pos:end="353:41"><expr pos:start="353:33" pos:end="353:41"><operator pos:start="353:33" pos:end="353:33">&amp;</operator><name pos:start="353:34" pos:end="353:41">pseg_len</name></expr></argument>, <argument pos:start="353:44" pos:end="353:59"><expr pos:start="353:44" pos:end="353:59"><name pos:start="353:44" pos:end="353:44">q</name> <operator pos:start="353:46" pos:end="353:46">-</operator> <name pos:start="353:48" pos:end="353:55">pseg_len</name> <operator pos:start="353:57" pos:end="353:57">-</operator> <literal type="number" pos:start="353:59" pos:end="353:59">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="361:5" pos:end="361:36">/* end of display set segment */</comment>



    <expr_stmt pos:start="365:5" pos:end="365:16"><expr pos:start="365:5" pos:end="365:15"><operator pos:start="365:5" pos:end="365:5">*</operator><name pos:start="365:6" pos:end="365:6">q</name><operator pos:start="365:7" pos:end="365:8">++</operator> <operator pos:start="365:10" pos:end="365:10">=</operator> <literal type="number" pos:start="365:12" pos:end="365:15">0x0f</literal></expr>;</expr_stmt> <comment type="block" pos:start="365:18" pos:end="365:32">/* sync_byte */</comment>

    <expr_stmt pos:start="367:5" pos:end="367:16"><expr pos:start="367:5" pos:end="367:15"><operator pos:start="367:5" pos:end="367:5">*</operator><name pos:start="367:6" pos:end="367:6">q</name><operator pos:start="367:7" pos:end="367:8">++</operator> <operator pos:start="367:10" pos:end="367:10">=</operator> <literal type="number" pos:start="367:12" pos:end="367:15">0x80</literal></expr>;</expr_stmt> <comment type="block" pos:start="367:18" pos:end="367:35">/* segment_type */</comment>

    <expr_stmt pos:start="369:5" pos:end="369:37"><expr pos:start="369:5" pos:end="369:36"><call pos:start="369:5" pos:end="369:36"><name pos:start="369:5" pos:end="369:23">bytestream_put_be16</name><argument_list pos:start="369:24" pos:end="369:36">(<argument pos:start="369:25" pos:end="369:26"><expr pos:start="369:25" pos:end="369:26"><operator pos:start="369:25" pos:end="369:25">&amp;</operator><name pos:start="369:26" pos:end="369:26">q</name></expr></argument>, <argument pos:start="369:29" pos:end="369:35"><expr pos:start="369:29" pos:end="369:35"><name pos:start="369:29" pos:end="369:35">page_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="371:5" pos:end="371:17"><expr pos:start="371:5" pos:end="371:16"><name pos:start="371:5" pos:end="371:12">pseg_len</name> <operator pos:start="371:14" pos:end="371:14">=</operator> <name pos:start="371:16" pos:end="371:16">q</name></expr>;</expr_stmt>

    <expr_stmt pos:start="373:5" pos:end="373:11"><expr pos:start="373:5" pos:end="373:10"><name pos:start="373:5" pos:end="373:5">q</name> <operator pos:start="373:7" pos:end="373:8">+=</operator> <literal type="number" pos:start="373:10" pos:end="373:10">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="373:13" pos:end="373:32">/* segment length */</comment>



    <expr_stmt pos:start="377:5" pos:end="377:53"><expr pos:start="377:5" pos:end="377:52"><call pos:start="377:5" pos:end="377:52"><name pos:start="377:5" pos:end="377:23">bytestream_put_be16</name><argument_list pos:start="377:24" pos:end="377:52">(<argument pos:start="377:25" pos:end="377:33"><expr pos:start="377:25" pos:end="377:33"><operator pos:start="377:25" pos:end="377:25">&amp;</operator><name pos:start="377:26" pos:end="377:33">pseg_len</name></expr></argument>, <argument pos:start="377:36" pos:end="377:51"><expr pos:start="377:36" pos:end="377:51"><name pos:start="377:36" pos:end="377:36">q</name> <operator pos:start="377:38" pos:end="377:38">-</operator> <name pos:start="377:40" pos:end="377:47">pseg_len</name> <operator pos:start="377:49" pos:end="377:49">-</operator> <literal type="number" pos:start="377:51" pos:end="377:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="381:5" pos:end="381:16"><expr pos:start="381:5" pos:end="381:15"><operator pos:start="381:5" pos:end="381:5">*</operator><name pos:start="381:6" pos:end="381:6">q</name><operator pos:start="381:7" pos:end="381:8">++</operator> <operator pos:start="381:10" pos:end="381:10">=</operator> <literal type="number" pos:start="381:12" pos:end="381:15">0xff</literal></expr>;</expr_stmt> <comment type="block" pos:start="381:18" pos:end="381:38">/* end of PES data */</comment>



    <expr_stmt pos:start="385:5" pos:end="385:54"><expr pos:start="385:5" pos:end="385:53"><name pos:start="385:5" pos:end="385:21"><name pos:start="385:5" pos:end="385:5">s</name><operator pos:start="385:6" pos:end="385:7">-&gt;</operator><name pos:start="385:8" pos:end="385:21">object_version</name></name> <operator pos:start="385:23" pos:end="385:23">=</operator> <operator pos:start="385:25" pos:end="385:25">(</operator><name pos:start="385:26" pos:end="385:42"><name pos:start="385:26" pos:end="385:26">s</name><operator pos:start="385:27" pos:end="385:28">-&gt;</operator><name pos:start="385:29" pos:end="385:42">object_version</name></name> <operator pos:start="385:44" pos:end="385:44">+</operator> <literal type="number" pos:start="385:46" pos:end="385:46">1</literal><operator pos:start="385:47" pos:end="385:47">)</operator> <operator pos:start="385:49" pos:end="385:49">&amp;</operator> <literal type="number" pos:start="385:51" pos:end="385:53">0xf</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="387:5" pos:end="387:35"><expr pos:start="387:5" pos:end="387:34"><name pos:start="387:5" pos:end="387:17"><name pos:start="387:5" pos:end="387:5">s</name><operator pos:start="387:6" pos:end="387:7">-&gt;</operator><name pos:start="387:8" pos:end="387:17">hide_state</name></name> <operator pos:start="387:19" pos:end="387:19">=</operator> <operator pos:start="387:21" pos:end="387:21">!</operator><name pos:start="387:22" pos:end="387:34"><name pos:start="387:22" pos:end="387:22">s</name><operator pos:start="387:23" pos:end="387:24">-&gt;</operator><name pos:start="387:25" pos:end="387:34">hide_state</name></name></expr>;</expr_stmt>

    <return pos:start="389:5" pos:end="389:22">return <expr pos:start="389:12" pos:end="389:21"><name pos:start="389:12" pos:end="389:12">q</name> <operator pos:start="389:14" pos:end="389:14">-</operator> <name pos:start="389:16" pos:end="389:21">outbuf</name></expr>;</return>

</block_content>}</block></function>
</unit>
