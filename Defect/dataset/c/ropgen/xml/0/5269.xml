<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5269.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">codec_get_buffer</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:61"><decl pos:start="1:48" pos:end="1:61"><type pos:start="1:48" pos:end="1:61"><name pos:start="1:48" pos:end="1:54">AVFrame</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:61">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">InputStream</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">ist</name> <init pos:start="5:22" pos:end="5:32">= <expr pos:start="5:24" pos:end="5:32"><name pos:start="5:24" pos:end="5:32"><name pos:start="5:24" pos:end="5:24">s</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">FrameBuffer</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:18"><if pos:start="13:5" pos:end="15:18">if<condition pos:start="13:7" pos:end="13:54">(<expr pos:start="13:8" pos:end="13:53"><call pos:start="13:8" pos:end="13:53"><name pos:start="13:8" pos:end="13:26">av_image_check_size</name><argument_list pos:start="13:27" pos:end="13:53">(<argument pos:start="13:28" pos:end="13:35"><expr pos:start="13:28" pos:end="13:35"><name pos:start="13:28" pos:end="13:35"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:35">width</name></name></expr></argument>, <argument pos:start="13:38" pos:end="13:46"><expr pos:start="13:38" pos:end="13:46"><name pos:start="13:38" pos:end="13:46"><name pos:start="13:38" pos:end="13:38">s</name><operator pos:start="13:39" pos:end="13:40">-&gt;</operator><name pos:start="13:41" pos:end="13:46">height</name></name></expr></argument>, <argument pos:start="13:49" pos:end="13:49"><expr pos:start="13:49" pos:end="13:49"><literal type="number" pos:start="13:49" pos:end="13:49">0</literal></expr></argument>, <argument pos:start="13:52" pos:end="13:52"><expr pos:start="13:52" pos:end="13:52"><name pos:start="13:52" pos:end="13:52">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:18"><block_content pos:start="15:9" pos:end="15:18">

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="21:19"><if pos:start="19:5" pos:end="21:19">if <condition pos:start="19:8" pos:end="19:81">(<expr pos:start="19:9" pos:end="19:80"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:25"><name pos:start="19:10" pos:end="19:12">ist</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:25">buffer_pool</name></name> <operator pos:start="19:27" pos:end="19:28">&amp;&amp;</operator> <operator pos:start="19:30" pos:end="19:30">(</operator><name pos:start="19:31" pos:end="19:33">ret</name> <operator pos:start="19:35" pos:end="19:35">=</operator> <call pos:start="19:37" pos:end="19:75"><name pos:start="19:37" pos:end="19:48">alloc_buffer</name><argument_list pos:start="19:49" pos:end="19:75">(<argument pos:start="19:50" pos:end="19:50"><expr pos:start="19:50" pos:end="19:50"><name pos:start="19:50" pos:end="19:50">s</name></expr></argument>, <argument pos:start="19:53" pos:end="19:55"><expr pos:start="19:53" pos:end="19:55"><name pos:start="19:53" pos:end="19:55">ist</name></expr></argument>, <argument pos:start="19:58" pos:end="19:74"><expr pos:start="19:58" pos:end="19:74"><operator pos:start="19:58" pos:end="19:58">&amp;</operator><name pos:start="19:59" pos:end="19:74"><name pos:start="19:59" pos:end="19:61">ist</name><operator pos:start="19:62" pos:end="19:63">-&gt;</operator><name pos:start="19:64" pos:end="19:74">buffer_pool</name></name></expr></argument>)</argument_list></call><operator pos:start="19:76" pos:end="19:76">)</operator> <operator pos:start="19:78" pos:end="19:78">&lt;</operator> <literal type="number" pos:start="19:80" pos:end="19:80">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:19"><block_content pos:start="21:9" pos:end="21:19">

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:40"><expr pos:start="25:5" pos:end="25:39"><name pos:start="25:5" pos:end="25:7">buf</name>              <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:39"><name pos:start="25:24" pos:end="25:26">ist</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:39">buffer_pool</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:7">ist</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:20">buffer_pool</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:32"><name pos:start="27:24" pos:end="27:26">buf</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:32">next</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:7">buf</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:13">next</name></name>        <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:27">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="43:5"><if pos:start="31:5" pos:end="43:5">if <condition pos:start="31:8" pos:end="31:80">(<expr pos:start="31:9" pos:end="31:79"><name pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:11">buf</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:14">w</name></name> <operator pos:start="31:16" pos:end="31:17">!=</operator> <name pos:start="31:19" pos:end="31:26"><name pos:start="31:19" pos:end="31:19">s</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:26">width</name></name> <operator pos:start="31:28" pos:end="31:29">||</operator> <name pos:start="31:31" pos:end="31:36"><name pos:start="31:31" pos:end="31:33">buf</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:36">h</name></name> <operator pos:start="31:38" pos:end="31:39">!=</operator> <name pos:start="31:41" pos:end="31:49"><name pos:start="31:41" pos:end="31:41">s</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:49">height</name></name> <operator pos:start="31:51" pos:end="31:52">||</operator> <name pos:start="31:54" pos:end="31:65"><name pos:start="31:54" pos:end="31:56">buf</name><operator pos:start="31:57" pos:end="31:58">-&gt;</operator><name pos:start="31:59" pos:end="31:65">pix_fmt</name></name> <operator pos:start="31:67" pos:end="31:68">!=</operator> <name pos:start="31:70" pos:end="31:79"><name pos:start="31:70" pos:end="31:70">s</name><operator pos:start="31:71" pos:end="31:72">-&gt;</operator><name pos:start="31:73" pos:end="31:79">pix_fmt</name></name></expr>)</condition> <block pos:start="31:82" pos:end="43:5">{<block_content pos:start="33:9" pos:end="41:23">

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><call pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:16">av_freep</name><argument_list pos:start="33:17" pos:end="33:31">(<argument pos:start="33:18" pos:end="33:30"><expr pos:start="33:18" pos:end="33:30"><operator pos:start="33:18" pos:end="33:18">&amp;</operator><name pos:start="33:19" pos:end="33:30"><name pos:start="33:19" pos:end="33:21">buf</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:27">base</name><index pos:start="33:28" pos:end="33:30">[<expr pos:start="33:29" pos:end="33:29"><literal type="number" pos:start="33:29" pos:end="33:29">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:21"><expr pos:start="35:9" pos:end="35:20"><call pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:15">av_free</name><argument_list pos:start="35:16" pos:end="35:20">(<argument pos:start="35:17" pos:end="35:19"><expr pos:start="35:17" pos:end="35:19"><name pos:start="35:17" pos:end="35:19">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:21"><expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:11">ist</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:16">dr1</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:23"><if pos:start="39:9" pos:end="41:23">if <condition pos:start="39:12" pos:end="39:51">(<expr pos:start="39:13" pos:end="39:50"><operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:16">ret</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:45"><name pos:start="39:20" pos:end="39:31">alloc_buffer</name><argument_list pos:start="39:32" pos:end="39:45">(<argument pos:start="39:33" pos:end="39:33"><expr pos:start="39:33" pos:end="39:33"><name pos:start="39:33" pos:end="39:33">s</name></expr></argument>, <argument pos:start="39:36" pos:end="39:38"><expr pos:start="39:36" pos:end="39:38"><name pos:start="39:36" pos:end="39:38">ist</name></expr></argument>, <argument pos:start="39:41" pos:end="39:44"><expr pos:start="39:41" pos:end="39:44"><operator pos:start="39:41" pos:end="39:41">&amp;</operator><name pos:start="39:42" pos:end="39:44">buf</name></expr></argument>)</argument_list></call><operator pos:start="39:46" pos:end="39:46">)</operator> <operator pos:start="39:48" pos:end="39:48">&lt;</operator> <literal type="number" pos:start="39:50" pos:end="39:50">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:23"><block_content pos:start="41:13" pos:end="41:23">

            <return pos:start="41:13" pos:end="41:23">return <expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:20"><expr pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:7">buf</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:17">refcount</name></name><operator pos:start="45:18" pos:end="45:19">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:31"><expr pos:start="49:5" pos:end="49:30"><name pos:start="49:5" pos:end="49:17"><name pos:start="49:5" pos:end="49:9">frame</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:17">opaque</name></name>        <operator pos:start="49:26" pos:end="49:26">=</operator> <name pos:start="49:28" pos:end="49:30">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:47"><expr pos:start="51:5" pos:end="51:46"><name pos:start="51:5" pos:end="51:15"><name pos:start="51:5" pos:end="51:9">frame</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:15">type</name></name>          <operator pos:start="51:26" pos:end="51:26">=</operator> <name pos:start="51:28" pos:end="51:46">FF_BUFFER_TYPE_USER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:39"><expr pos:start="53:5" pos:end="53:38"><name pos:start="53:5" pos:end="53:24"><name pos:start="53:5" pos:end="53:9">frame</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:24">extended_data</name></name> <operator pos:start="53:26" pos:end="53:26">=</operator> <name pos:start="53:28" pos:end="53:38"><name pos:start="53:28" pos:end="53:32">frame</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:38">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:65"><expr pos:start="55:5" pos:end="55:64"><name pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:9">frame</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:18">pkt_pts</name></name>       <operator pos:start="55:26" pos:end="55:26">=</operator> <ternary pos:start="55:28" pos:end="55:64"><condition pos:start="55:28" pos:end="55:35"><expr pos:start="55:28" pos:end="55:33"><name pos:start="55:28" pos:end="55:33"><name pos:start="55:28" pos:end="55:28">s</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:33">pkt</name></name></expr> ?</condition><then pos:start="55:37" pos:end="55:47"> <expr pos:start="55:37" pos:end="55:47"><name pos:start="55:37" pos:end="55:47"><name pos:start="55:37" pos:end="55:37">s</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:42">pkt</name><operator pos:start="55:43" pos:end="55:44">-&gt;</operator><name pos:start="55:45" pos:end="55:47">pts</name></name></expr> </then><else pos:start="55:49" pos:end="55:64">: <expr pos:start="55:51" pos:end="55:64"><name pos:start="55:51" pos:end="55:64">AV_NOPTS_VALUE</name></expr></else></ternary></expr>;</expr_stmt>



    <for pos:start="59:5" pos:end="67:5">for <control pos:start="59:9" pos:end="59:51">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:46"><expr pos:start="59:17" pos:end="59:45"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <call pos:start="59:21" pos:end="59:45"><name pos:start="59:21" pos:end="59:34">FF_ARRAY_ELEMS</name><argument_list pos:start="59:35" pos:end="59:45">(<argument pos:start="59:36" pos:end="59:44"><expr pos:start="59:36" pos:end="59:44"><name pos:start="59:36" pos:end="59:44"><name pos:start="59:36" pos:end="59:38">buf</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:44">data</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="59:48" pos:end="59:50"><expr pos:start="59:48" pos:end="59:50"><name pos:start="59:48" pos:end="59:48">i</name><operator pos:start="59:49" pos:end="59:50">++</operator></expr></incr>)</control> <block pos:start="59:53" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:46">

        <expr_stmt pos:start="61:9" pos:end="61:42"><expr pos:start="61:9" pos:end="61:41"><name pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:13">frame</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:19">base</name><index pos:start="61:20" pos:end="61:22">[<expr pos:start="61:21" pos:end="61:21"><name pos:start="61:21" pos:end="61:21">i</name></expr>]</index></name>     <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:41"><name pos:start="61:30" pos:end="61:32">buf</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:38">base</name><index pos:start="61:39" pos:end="61:41">[<expr pos:start="61:40" pos:end="61:40"><name pos:start="61:40" pos:end="61:40">i</name></expr>]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="61:45" pos:end="61:87">// XXX h264.c uses base though it shouldn't</comment>

        <expr_stmt pos:start="63:9" pos:end="63:42"><expr pos:start="63:9" pos:end="63:41"><name pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:13">frame</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:19">data</name><index pos:start="63:20" pos:end="63:22">[<expr pos:start="63:21" pos:end="63:21"><name pos:start="63:21" pos:end="63:21">i</name></expr>]</index></name>     <operator pos:start="63:28" pos:end="63:28">=</operator> <name pos:start="63:30" pos:end="63:41"><name pos:start="63:30" pos:end="63:32">buf</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:38">data</name><index pos:start="63:39" pos:end="63:41">[<expr pos:start="63:40" pos:end="63:40"><name pos:start="63:40" pos:end="63:40">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:46"><expr pos:start="65:9" pos:end="65:45"><name pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:13">frame</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:23">linesize</name><index pos:start="65:24" pos:end="65:26">[<expr pos:start="65:25" pos:end="65:25"><name pos:start="65:25" pos:end="65:25">i</name></expr>]</index></name> <operator pos:start="65:28" pos:end="65:28">=</operator> <name pos:start="65:30" pos:end="65:45"><name pos:start="65:30" pos:end="65:32">buf</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:42">linesize</name><index pos:start="65:43" pos:end="65:45">[<expr pos:start="65:44" pos:end="65:44"><name pos:start="65:44" pos:end="65:44">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
