<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22648.c" pos:tabs="8"><function pos:start="1:1" pos:end="277:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="5:50">(<parameter pos:start="1:25" pos:end="1:46"><decl pos:start="1:25" pos:end="1:46"><type pos:start="1:25" pos:end="1:46"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type> <name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>,

			<parameter pos:start="3:25" pos:end="3:34"><decl pos:start="3:25" pos:end="3:34"><type pos:start="3:25" pos:end="3:34"><name pos:start="3:25" pos:end="3:28">void</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:34">data</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:39">int</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:50">data_size</name></decl></parameter>,

			<parameter pos:start="5:25" pos:end="5:35"><decl pos:start="5:25" pos:end="5:35"><type pos:start="5:25" pos:end="5:35"><name pos:start="5:25" pos:end="5:29">UINT8</name> <modifier pos:start="5:31" pos:end="5:31">*</modifier></type> <name pos:start="5:33" pos:end="5:35">buf</name></decl></parameter>, <parameter pos:start="5:38" pos:end="5:49"><decl pos:start="5:38" pos:end="5:49"><type pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:40">int</name></type> <name pos:start="5:42" pos:end="5:49">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="277:1">{<block_content pos:start="9:5" pos:end="275:25">

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">MPADecodeContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:23">s</name> <init pos:start="9:25" pos:end="9:42">= <expr pos:start="9:27" pos:end="9:42"><name pos:start="9:27" pos:end="9:42"><name pos:start="9:27" pos:end="9:31">avctx</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">UINT32</name></type> <name pos:start="11:12" pos:end="11:17">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">UINT8</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:18">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">len</name></decl>, <decl pos:start="15:14" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:14" pos:end="15:21">out_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">short</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:22">out_samples</name> <init pos:start="17:24" pos:end="17:29">= <expr pos:start="17:26" pos:end="17:29"><name pos:start="17:26" pos:end="17:29">data</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><operator pos:start="21:5" pos:end="21:5">*</operator><name pos:start="21:6" pos:end="21:14">data_size</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:11">buf_ptr</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:17">buf</name></expr>;</expr_stmt>

    <while pos:start="25:5" pos:end="273:5">while <condition pos:start="25:11" pos:end="25:24">(<expr pos:start="25:12" pos:end="25:23"><name pos:start="25:12" pos:end="25:19">buf_size</name> <operator pos:start="25:21" pos:end="25:21">&gt;</operator> <literal type="number" pos:start="25:23" pos:end="25:23">0</literal></expr>)</condition> <block pos:start="25:26" pos:end="273:5">{<block_content pos:start="27:9" pos:end="271:14">

	<expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:11">len</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:26"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:26">inbuf_ptr</name></name> <operator pos:start="27:28" pos:end="27:28">-</operator> <name pos:start="27:30" pos:end="27:37"><name pos:start="27:30" pos:end="27:30">s</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:37">inbuf</name></name></expr>;</expr_stmt>

	<if_stmt pos:start="29:9" pos:end="269:9"><if pos:start="29:9" pos:end="131:9">if <condition pos:start="29:12" pos:end="29:31">(<expr pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:25">frame_size</name></name> <operator pos:start="29:27" pos:end="29:28">==</operator> <literal type="number" pos:start="29:30" pos:end="29:30">0</literal></expr>)</condition> <block pos:start="29:33" pos:end="131:9">{<block_content pos:start="35:13" pos:end="129:13">

            <comment type="block" pos:start="31:13" pos:end="33:58">/* special case for next header for first frame in free

               format case (XXX: find a simpler method) */</comment>

            <if_stmt pos:start="35:13" pos:end="51:13"><if pos:start="35:13" pos:end="51:13">if <condition pos:start="35:16" pos:end="35:48">(<expr pos:start="35:17" pos:end="35:47"><name pos:start="35:17" pos:end="35:42"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:42">free_format_next_header</name></name> <operator pos:start="35:44" pos:end="35:45">!=</operator> <literal type="number" pos:start="35:47" pos:end="35:47">0</literal></expr>)</condition> <block pos:start="35:50" pos:end="51:13">{<block_content pos:start="37:17" pos:end="49:32">

                <expr_stmt pos:start="37:17" pos:end="37:63"><expr pos:start="37:17" pos:end="37:62"><name pos:start="37:17" pos:end="37:27"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:24">inbuf</name><index pos:start="37:25" pos:end="37:27">[<expr pos:start="37:26" pos:end="37:26"><literal type="number" pos:start="37:26" pos:end="37:26">0</literal></expr>]</index></name> <operator pos:start="37:29" pos:end="37:29">=</operator> <name pos:start="37:31" pos:end="37:56"><name pos:start="37:31" pos:end="37:31">s</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:56">free_format_next_header</name></name> <operator pos:start="37:58" pos:end="37:59">&gt;&gt;</operator> <literal type="number" pos:start="37:61" pos:end="37:62">24</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:63"><expr pos:start="39:17" pos:end="39:62"><name pos:start="39:17" pos:end="39:27"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:24">inbuf</name><index pos:start="39:25" pos:end="39:27">[<expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">1</literal></expr>]</index></name> <operator pos:start="39:29" pos:end="39:29">=</operator> <name pos:start="39:31" pos:end="39:56"><name pos:start="39:31" pos:end="39:31">s</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:56">free_format_next_header</name></name> <operator pos:start="39:58" pos:end="39:59">&gt;&gt;</operator> <literal type="number" pos:start="39:61" pos:end="39:62">16</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:62"><expr pos:start="41:17" pos:end="41:61"><name pos:start="41:17" pos:end="41:27"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:24">inbuf</name><index pos:start="41:25" pos:end="41:27">[<expr pos:start="41:26" pos:end="41:26"><literal type="number" pos:start="41:26" pos:end="41:26">2</literal></expr>]</index></name> <operator pos:start="41:29" pos:end="41:29">=</operator> <name pos:start="41:31" pos:end="41:56"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:56">free_format_next_header</name></name> <operator pos:start="41:58" pos:end="41:59">&gt;&gt;</operator> <literal type="number" pos:start="41:61" pos:end="41:61">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:57"><expr pos:start="43:17" pos:end="43:56"><name pos:start="43:17" pos:end="43:27"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:24">inbuf</name><index pos:start="43:25" pos:end="43:27">[<expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">3</literal></expr>]</index></name> <operator pos:start="43:29" pos:end="43:29">=</operator> <name pos:start="43:31" pos:end="43:56"><name pos:start="43:31" pos:end="43:31">s</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:56">free_format_next_header</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:44"><expr pos:start="45:17" pos:end="45:43"><name pos:start="45:17" pos:end="45:28"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:28">inbuf_ptr</name></name> <operator pos:start="45:30" pos:end="45:30">=</operator> <name pos:start="45:32" pos:end="45:39"><name pos:start="45:32" pos:end="45:32">s</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:39">inbuf</name></name> <operator pos:start="45:41" pos:end="45:41">+</operator> <literal type="number" pos:start="45:43" pos:end="45:43">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:47"><expr pos:start="47:17" pos:end="47:46"><name pos:start="47:17" pos:end="47:42"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:42">free_format_next_header</name></name> <operator pos:start="47:44" pos:end="47:44">=</operator> <literal type="number" pos:start="47:46" pos:end="47:46">0</literal></expr>;</expr_stmt>

                <goto pos:start="49:17" pos:end="49:32">goto <name pos:start="49:22" pos:end="49:31">got_header</name>;</goto>

            </block_content>}</block></if></if_stmt>

	    <comment type="block" pos:start="53:13" pos:end="55:35">/* no header seen : find one. We need at least HEADER_SIZE

               bytes to parse it */</comment>

	    <expr_stmt pos:start="57:13" pos:end="57:36"><expr pos:start="57:13" pos:end="57:35"><name pos:start="57:13" pos:end="57:15">len</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:29">HEADER_SIZE</name> <operator pos:start="57:31" pos:end="57:31">-</operator> <name pos:start="57:33" pos:end="57:35">len</name></expr>;</expr_stmt>

	    <if_stmt pos:start="59:13" pos:end="61:31"><if pos:start="59:13" pos:end="61:31">if <condition pos:start="59:16" pos:end="59:31">(<expr pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:19">len</name> <operator pos:start="59:21" pos:end="59:21">&gt;</operator> <name pos:start="59:23" pos:end="59:30">buf_size</name></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:31"><block_content pos:start="61:17" pos:end="61:31">

		<expr_stmt pos:start="61:17" pos:end="61:31"><expr pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:19">len</name> <operator pos:start="61:21" pos:end="61:21">=</operator> <name pos:start="61:23" pos:end="61:30">buf_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	    <if_stmt pos:start="63:13" pos:end="73:13"><if pos:start="63:13" pos:end="73:13">if <condition pos:start="63:16" pos:end="63:24">(<expr pos:start="63:17" pos:end="63:23"><name pos:start="63:17" pos:end="63:19">len</name> <operator pos:start="63:21" pos:end="63:21">&gt;</operator> <literal type="number" pos:start="63:23" pos:end="63:23">0</literal></expr>)</condition> <block pos:start="63:26" pos:end="73:13">{<block_content pos:start="65:17" pos:end="71:36">

		<expr_stmt pos:start="65:17" pos:end="65:51"><expr pos:start="65:17" pos:end="65:50"><call pos:start="65:17" pos:end="65:50"><name pos:start="65:17" pos:end="65:22">memcpy</name><argument_list pos:start="65:23" pos:end="65:50">(<argument pos:start="65:24" pos:end="65:35"><expr pos:start="65:24" pos:end="65:35"><name pos:start="65:24" pos:end="65:35"><name pos:start="65:24" pos:end="65:24">s</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:35">inbuf_ptr</name></name></expr></argument>, <argument pos:start="65:38" pos:end="65:44"><expr pos:start="65:38" pos:end="65:44"><name pos:start="65:38" pos:end="65:44">buf_ptr</name></expr></argument>, <argument pos:start="65:47" pos:end="65:49"><expr pos:start="65:47" pos:end="65:49"><name pos:start="65:47" pos:end="65:49">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="67:17" pos:end="67:31"><expr pos:start="67:17" pos:end="67:30"><name pos:start="67:17" pos:end="67:23">buf_ptr</name> <operator pos:start="67:25" pos:end="67:26">+=</operator> <name pos:start="67:28" pos:end="67:30">len</name></expr>;</expr_stmt>

		<expr_stmt pos:start="69:17" pos:end="69:32"><expr pos:start="69:17" pos:end="69:31"><name pos:start="69:17" pos:end="69:24">buf_size</name> <operator pos:start="69:26" pos:end="69:27">-=</operator> <name pos:start="69:29" pos:end="69:31">len</name></expr>;</expr_stmt>

		<expr_stmt pos:start="71:17" pos:end="71:36"><expr pos:start="71:17" pos:end="71:35"><name pos:start="71:17" pos:end="71:28"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:28">inbuf_ptr</name></name> <operator pos:start="71:30" pos:end="71:31">+=</operator> <name pos:start="71:33" pos:end="71:35">len</name></expr>;</expr_stmt>

	    </block_content>}</block></if></if_stmt>

	    <if_stmt pos:start="75:13" pos:end="129:13"><if pos:start="75:13" pos:end="129:13">if <condition pos:start="75:16" pos:end="75:57">(<expr pos:start="75:17" pos:end="75:56"><operator pos:start="75:17" pos:end="75:17">(</operator><name pos:start="75:18" pos:end="75:29"><name pos:start="75:18" pos:end="75:18">s</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:29">inbuf_ptr</name></name> <operator pos:start="75:31" pos:end="75:31">-</operator> <name pos:start="75:33" pos:end="75:40"><name pos:start="75:33" pos:end="75:33">s</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:40">inbuf</name></name><operator pos:start="75:41" pos:end="75:41">)</operator> <operator pos:start="75:43" pos:end="75:44">&gt;=</operator> <name pos:start="75:46" pos:end="75:56">HEADER_SIZE</name></expr>)</condition> <block pos:start="75:59" pos:end="129:13">{<block_content pos:start="77:13" pos:end="127:17">

            <label pos:start="77:13" pos:end="77:23"><name pos:start="77:13" pos:end="77:22">got_header</name>:</label>

		<expr_stmt pos:start="79:17" pos:end="81:53"><expr pos:start="79:17" pos:end="81:52"><name pos:start="79:17" pos:end="79:22">header</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <operator pos:start="79:26" pos:end="79:26">(</operator><name pos:start="79:27" pos:end="79:37"><name pos:start="79:27" pos:end="79:27">s</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:34">inbuf</name><index pos:start="79:35" pos:end="79:37">[<expr pos:start="79:36" pos:end="79:36"><literal type="number" pos:start="79:36" pos:end="79:36">0</literal></expr>]</index></name> <operator pos:start="79:39" pos:end="79:40">&lt;&lt;</operator> <literal type="number" pos:start="79:42" pos:end="79:43">24</literal><operator pos:start="79:44" pos:end="79:44">)</operator> <operator pos:start="79:46" pos:end="79:46">|</operator> <operator pos:start="79:48" pos:end="79:48">(</operator><name pos:start="79:49" pos:end="79:59"><name pos:start="79:49" pos:end="79:49">s</name><operator pos:start="79:50" pos:end="79:51">-&gt;</operator><name pos:start="79:52" pos:end="79:56">inbuf</name><index pos:start="79:57" pos:end="79:59">[<expr pos:start="79:58" pos:end="79:58"><literal type="number" pos:start="79:58" pos:end="79:58">1</literal></expr>]</index></name> <operator pos:start="79:61" pos:end="79:62">&lt;&lt;</operator> <literal type="number" pos:start="79:64" pos:end="79:65">16</literal><operator pos:start="79:66" pos:end="79:66">)</operator> <operator pos:start="79:68" pos:end="79:68">|</operator>

		    <operator pos:start="81:21" pos:end="81:21">(</operator><name pos:start="81:22" pos:end="81:32"><name pos:start="81:22" pos:end="81:22">s</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:29">inbuf</name><index pos:start="81:30" pos:end="81:32">[<expr pos:start="81:31" pos:end="81:31"><literal type="number" pos:start="81:31" pos:end="81:31">2</literal></expr>]</index></name> <operator pos:start="81:34" pos:end="81:35">&lt;&lt;</operator> <literal type="number" pos:start="81:37" pos:end="81:37">8</literal><operator pos:start="81:38" pos:end="81:38">)</operator> <operator pos:start="81:40" pos:end="81:40">|</operator> <name pos:start="81:42" pos:end="81:52"><name pos:start="81:42" pos:end="81:42">s</name><operator pos:start="81:43" pos:end="81:44">-&gt;</operator><name pos:start="81:45" pos:end="81:49">inbuf</name><index pos:start="81:50" pos:end="81:52">[<expr pos:start="81:51" pos:end="81:51"><literal type="number" pos:start="81:51" pos:end="81:51">3</literal></expr>]</index></name></expr>;</expr_stmt>



		<if_stmt pos:start="85:17" pos:end="127:17"><if pos:start="85:17" pos:end="101:17">if <condition pos:start="85:20" pos:end="85:45">(<expr pos:start="85:21" pos:end="85:44"><call pos:start="85:21" pos:end="85:40"><name pos:start="85:21" pos:end="85:32">check_header</name><argument_list pos:start="85:33" pos:end="85:40">(<argument pos:start="85:34" pos:end="85:39"><expr pos:start="85:34" pos:end="85:39"><name pos:start="85:34" pos:end="85:39">header</name></expr></argument>)</argument_list></call> <operator pos:start="85:42" pos:end="85:42">&lt;</operator> <literal type="number" pos:start="85:44" pos:end="85:44">0</literal></expr>)</condition> <block pos:start="85:47" pos:end="101:17">{<block_content pos:start="89:21" pos:end="99:50">

		    <comment type="block" pos:start="87:21" pos:end="87:85">/* no sync found : move by one byte (inefficient, but simple!) */</comment>

		    <expr_stmt pos:start="89:21" pos:end="89:80"><expr pos:start="89:21" pos:end="89:79"><call pos:start="89:21" pos:end="89:79"><name pos:start="89:21" pos:end="89:26">memcpy</name><argument_list pos:start="89:27" pos:end="89:79">(<argument pos:start="89:28" pos:end="89:35"><expr pos:start="89:28" pos:end="89:35"><name pos:start="89:28" pos:end="89:35"><name pos:start="89:28" pos:end="89:28">s</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:35">inbuf</name></name></expr></argument>, <argument pos:start="89:38" pos:end="89:49"><expr pos:start="89:38" pos:end="89:49"><name pos:start="89:38" pos:end="89:45"><name pos:start="89:38" pos:end="89:38">s</name><operator pos:start="89:39" pos:end="89:40">-&gt;</operator><name pos:start="89:41" pos:end="89:45">inbuf</name></name> <operator pos:start="89:47" pos:end="89:47">+</operator> <literal type="number" pos:start="89:49" pos:end="89:49">1</literal></expr></argument>, <argument pos:start="89:52" pos:end="89:78"><expr pos:start="89:52" pos:end="89:78"><name pos:start="89:52" pos:end="89:63"><name pos:start="89:52" pos:end="89:52">s</name><operator pos:start="89:53" pos:end="89:54">-&gt;</operator><name pos:start="89:55" pos:end="89:63">inbuf_ptr</name></name> <operator pos:start="89:65" pos:end="89:65">-</operator> <name pos:start="89:67" pos:end="89:74"><name pos:start="89:67" pos:end="89:67">s</name><operator pos:start="89:68" pos:end="89:69">-&gt;</operator><name pos:start="89:70" pos:end="89:74">inbuf</name></name> <operator pos:start="89:76" pos:end="89:76">-</operator> <literal type="number" pos:start="89:78" pos:end="89:78">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="91:21" pos:end="91:35"><expr pos:start="91:21" pos:end="91:34"><name pos:start="91:21" pos:end="91:32"><name pos:start="91:21" pos:end="91:21">s</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:32">inbuf_ptr</name></name><operator pos:start="91:33" pos:end="91:34">--</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:49"><expr pos:start="93:21" pos:end="93:48"><call pos:start="93:21" pos:end="93:48"><name pos:start="93:21" pos:end="93:27">dprintf</name><argument_list pos:start="93:28" pos:end="93:48">(<argument pos:start="93:29" pos:end="93:39"><expr pos:start="93:29" pos:end="93:39"><literal type="string" pos:start="93:29" pos:end="93:39">"skip %x\n"</literal></expr></argument>, <argument pos:start="93:42" pos:end="93:47"><expr pos:start="93:42" pos:end="93:47"><name pos:start="93:42" pos:end="93:47">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="95:21" pos:end="97:46">/* reset free format frame size to give a chance

                       to get a new bitrate */</comment>

                    <expr_stmt pos:start="99:21" pos:end="99:50"><expr pos:start="99:21" pos:end="99:49"><name pos:start="99:21" pos:end="99:45"><name pos:start="99:21" pos:end="99:21">s</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:45">free_format_frame_size</name></name> <operator pos:start="99:47" pos:end="99:47">=</operator> <literal type="number" pos:start="99:49" pos:end="99:49">0</literal></expr>;</expr_stmt>

		</block_content>}</block></if> <else pos:start="101:19" pos:end="127:17">else <block pos:start="101:24" pos:end="127:17">{<block_content pos:start="103:21" pos:end="125:21">

		    <if_stmt pos:start="103:21" pos:end="125:21"><if pos:start="103:21" pos:end="113:21">if <condition pos:start="103:24" pos:end="103:54">(<expr pos:start="103:25" pos:end="103:53"><call pos:start="103:25" pos:end="103:48"><name pos:start="103:25" pos:end="103:37">decode_header</name><argument_list pos:start="103:38" pos:end="103:48">(<argument pos:start="103:39" pos:end="103:39"><expr pos:start="103:39" pos:end="103:39"><name pos:start="103:39" pos:end="103:39">s</name></expr></argument>, <argument pos:start="103:42" pos:end="103:47"><expr pos:start="103:42" pos:end="103:47"><name pos:start="103:42" pos:end="103:47">header</name></expr></argument>)</argument_list></call> <operator pos:start="103:50" pos:end="103:51">==</operator> <literal type="number" pos:start="103:53" pos:end="103:53">1</literal></expr>)</condition> <block pos:start="103:56" pos:end="113:21">{<block_content pos:start="107:25" pos:end="111:39">

                        <comment type="block" pos:start="105:25" pos:end="105:61">/* free format: compute frame size */</comment>

			<expr_stmt pos:start="107:25" pos:end="107:43"><expr pos:start="107:25" pos:end="107:42"><name pos:start="107:25" pos:end="107:37"><name pos:start="107:25" pos:end="107:25">s</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:37">frame_size</name></name> <operator pos:start="107:39" pos:end="107:39">=</operator> <operator pos:start="107:41" pos:end="107:41">-</operator><literal type="number" pos:start="107:42" pos:end="107:42">1</literal></expr>;</expr_stmt>

			<expr_stmt pos:start="109:25" pos:end="109:84"><expr pos:start="109:25" pos:end="109:83"><call pos:start="109:25" pos:end="109:83"><name pos:start="109:25" pos:end="109:30">memcpy</name><argument_list pos:start="109:31" pos:end="109:83">(<argument pos:start="109:32" pos:end="109:39"><expr pos:start="109:32" pos:end="109:39"><name pos:start="109:32" pos:end="109:39"><name pos:start="109:32" pos:end="109:32">s</name><operator pos:start="109:33" pos:end="109:34">-&gt;</operator><name pos:start="109:35" pos:end="109:39">inbuf</name></name></expr></argument>, <argument pos:start="109:42" pos:end="109:53"><expr pos:start="109:42" pos:end="109:53"><name pos:start="109:42" pos:end="109:49"><name pos:start="109:42" pos:end="109:42">s</name><operator pos:start="109:43" pos:end="109:44">-&gt;</operator><name pos:start="109:45" pos:end="109:49">inbuf</name></name> <operator pos:start="109:51" pos:end="109:51">+</operator> <literal type="number" pos:start="109:53" pos:end="109:53">1</literal></expr></argument>, <argument pos:start="109:56" pos:end="109:82"><expr pos:start="109:56" pos:end="109:82"><name pos:start="109:56" pos:end="109:67"><name pos:start="109:56" pos:end="109:56">s</name><operator pos:start="109:57" pos:end="109:58">-&gt;</operator><name pos:start="109:59" pos:end="109:67">inbuf_ptr</name></name> <operator pos:start="109:69" pos:end="109:69">-</operator> <name pos:start="109:71" pos:end="109:78"><name pos:start="109:71" pos:end="109:71">s</name><operator pos:start="109:72" pos:end="109:73">-&gt;</operator><name pos:start="109:74" pos:end="109:78">inbuf</name></name> <operator pos:start="109:80" pos:end="109:80">-</operator> <literal type="number" pos:start="109:82" pos:end="109:82">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="111:25" pos:end="111:39"><expr pos:start="111:25" pos:end="111:38"><name pos:start="111:25" pos:end="111:36"><name pos:start="111:25" pos:end="111:25">s</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:36">inbuf_ptr</name></name><operator pos:start="111:37" pos:end="111:38">--</operator></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="113:23" pos:end="125:21">else <block pos:start="113:28" pos:end="125:21">{<block_content pos:start="117:25" pos:end="123:58">

                        <comment type="block" pos:start="115:25" pos:end="115:47">/* update codec info */</comment>

                        <expr_stmt pos:start="117:25" pos:end="117:60"><expr pos:start="117:25" pos:end="117:59"><name pos:start="117:25" pos:end="117:42"><name pos:start="117:25" pos:end="117:29">avctx</name><operator pos:start="117:30" pos:end="117:31">-&gt;</operator><name pos:start="117:32" pos:end="117:42">sample_rate</name></name> <operator pos:start="117:44" pos:end="117:44">=</operator> <name pos:start="117:46" pos:end="117:59"><name pos:start="117:46" pos:end="117:46">s</name><operator pos:start="117:47" pos:end="117:48">-&gt;</operator><name pos:start="117:49" pos:end="117:59">sample_rate</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="119:25" pos:end="119:57"><expr pos:start="119:25" pos:end="119:56"><name pos:start="119:25" pos:end="119:39"><name pos:start="119:25" pos:end="119:29">avctx</name><operator pos:start="119:30" pos:end="119:31">-&gt;</operator><name pos:start="119:32" pos:end="119:39">channels</name></name> <operator pos:start="119:41" pos:end="119:41">=</operator> <name pos:start="119:43" pos:end="119:56"><name pos:start="119:43" pos:end="119:43">s</name><operator pos:start="119:44" pos:end="119:45">-&gt;</operator><name pos:start="119:46" pos:end="119:56">nb_channels</name></name></expr>;</expr_stmt>

			<expr_stmt pos:start="121:25" pos:end="121:54"><expr pos:start="121:25" pos:end="121:53"><name pos:start="121:25" pos:end="121:39"><name pos:start="121:25" pos:end="121:29">avctx</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:39">bit_rate</name></name> <operator pos:start="121:41" pos:end="121:41">=</operator> <name pos:start="121:43" pos:end="121:53"><name pos:start="121:43" pos:end="121:43">s</name><operator pos:start="121:44" pos:end="121:45">-&gt;</operator><name pos:start="121:46" pos:end="121:53">bit_rate</name></name></expr>;</expr_stmt>

			<expr_stmt pos:start="123:25" pos:end="123:58"><expr pos:start="123:25" pos:end="123:57"><name pos:start="123:25" pos:end="123:41"><name pos:start="123:25" pos:end="123:29">avctx</name><operator pos:start="123:30" pos:end="123:31">-&gt;</operator><name pos:start="123:32" pos:end="123:41">frame_size</name></name> <operator pos:start="123:43" pos:end="123:43">=</operator> <name pos:start="123:45" pos:end="123:57"><name pos:start="123:45" pos:end="123:45">s</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:57">frame_size</name></name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

		</block_content>}</block></else></if_stmt>

	    </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="131:11" pos:end="233:9">else if <condition pos:start="131:19" pos:end="131:39">(<expr pos:start="131:20" pos:end="131:38"><name pos:start="131:20" pos:end="131:32"><name pos:start="131:20" pos:end="131:20">s</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:32">frame_size</name></name> <operator pos:start="131:34" pos:end="131:35">==</operator> <operator pos:start="131:37" pos:end="131:37">-</operator><literal type="number" pos:start="131:38" pos:end="131:38">1</literal></expr>)</condition> <block pos:start="131:41" pos:end="233:9">{<block_content pos:start="135:13" pos:end="231:13">

            <comment type="block" pos:start="133:13" pos:end="133:68">/* free format : find next sync to compute frame size */</comment>

	    <expr_stmt pos:start="135:13" pos:end="135:49"><expr pos:start="135:13" pos:end="135:48"><name pos:start="135:13" pos:end="135:15">len</name> <operator pos:start="135:17" pos:end="135:17">=</operator> <name pos:start="135:19" pos:end="135:42">MPA_MAX_CODED_FRAME_SIZE</name> <operator pos:start="135:44" pos:end="135:44">-</operator> <name pos:start="135:46" pos:end="135:48">len</name></expr>;</expr_stmt>

	    <if_stmt pos:start="137:13" pos:end="139:31"><if pos:start="137:13" pos:end="139:31">if <condition pos:start="137:16" pos:end="137:31">(<expr pos:start="137:17" pos:end="137:30"><name pos:start="137:17" pos:end="137:19">len</name> <operator pos:start="137:21" pos:end="137:21">&gt;</operator> <name pos:start="137:23" pos:end="137:30">buf_size</name></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:31"><block_content pos:start="139:17" pos:end="139:31">

		<expr_stmt pos:start="139:17" pos:end="139:31"><expr pos:start="139:17" pos:end="139:30"><name pos:start="139:17" pos:end="139:19">len</name> <operator pos:start="139:21" pos:end="139:21">=</operator> <name pos:start="139:23" pos:end="139:30">buf_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="141:13" pos:end="231:13"><if pos:start="141:13" pos:end="147:13">if <condition pos:start="141:16" pos:end="141:25">(<expr pos:start="141:17" pos:end="141:24"><name pos:start="141:17" pos:end="141:19">len</name> <operator pos:start="141:21" pos:end="141:22">==</operator> <literal type="number" pos:start="141:24" pos:end="141:24">0</literal></expr>)</condition> <block pos:start="141:27" pos:end="147:13">{<block_content pos:start="145:17" pos:end="145:34">

                <comment type="block" pos:start="143:17" pos:end="143:44">/* frame too long: resync */</comment>

                <expr_stmt pos:start="145:17" pos:end="145:34"><expr pos:start="145:17" pos:end="145:33"><name pos:start="145:17" pos:end="145:29"><name pos:start="145:17" pos:end="145:17">s</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:29">frame_size</name></name> <operator pos:start="145:31" pos:end="145:31">=</operator> <literal type="number" pos:start="145:33" pos:end="145:33">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="147:15" pos:end="231:13">else <block pos:start="147:20" pos:end="231:13">{<block_content pos:start="149:17" pos:end="229:32">

                <decl_stmt pos:start="149:17" pos:end="149:32"><decl pos:start="149:17" pos:end="149:24"><type pos:start="149:17" pos:end="149:23"><name pos:start="149:17" pos:end="149:21">UINT8</name> <modifier pos:start="149:23" pos:end="149:23">*</modifier></type><name pos:start="149:24" pos:end="149:24">p</name></decl>, <decl pos:start="149:27" pos:end="149:31"><type ref="prev" pos:start="149:17" pos:end="149:23"><modifier pos:start="149:27" pos:end="149:27">*</modifier></type><name pos:start="149:28" pos:end="149:31">pend</name></decl>;</decl_stmt>

                <decl_stmt pos:start="151:17" pos:end="151:31"><decl pos:start="151:17" pos:end="151:30"><type pos:start="151:17" pos:end="151:22"><name pos:start="151:17" pos:end="151:22">UINT32</name></type> <name pos:start="151:24" pos:end="151:30">header1</name></decl>;</decl_stmt>

                <decl_stmt pos:start="153:17" pos:end="153:28"><decl pos:start="153:17" pos:end="153:27"><type pos:start="153:17" pos:end="153:19"><name pos:start="153:17" pos:end="153:19">int</name></type> <name pos:start="153:21" pos:end="153:27">padding</name></decl>;</decl_stmt>



                <expr_stmt pos:start="157:17" pos:end="157:51"><expr pos:start="157:17" pos:end="157:50"><call pos:start="157:17" pos:end="157:50"><name pos:start="157:17" pos:end="157:22">memcpy</name><argument_list pos:start="157:23" pos:end="157:50">(<argument pos:start="157:24" pos:end="157:35"><expr pos:start="157:24" pos:end="157:35"><name pos:start="157:24" pos:end="157:35"><name pos:start="157:24" pos:end="157:24">s</name><operator pos:start="157:25" pos:end="157:26">-&gt;</operator><name pos:start="157:27" pos:end="157:35">inbuf_ptr</name></name></expr></argument>, <argument pos:start="157:38" pos:end="157:44"><expr pos:start="157:38" pos:end="157:44"><name pos:start="157:38" pos:end="157:44">buf_ptr</name></expr></argument>, <argument pos:start="157:47" pos:end="157:49"><expr pos:start="157:47" pos:end="157:49"><name pos:start="157:47" pos:end="157:49">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="159:17" pos:end="159:38">/* check for header */</comment>

                <expr_stmt pos:start="161:17" pos:end="161:37"><expr pos:start="161:17" pos:end="161:36"><name pos:start="161:17" pos:end="161:17">p</name> <operator pos:start="161:19" pos:end="161:19">=</operator> <name pos:start="161:21" pos:end="161:32"><name pos:start="161:21" pos:end="161:21">s</name><operator pos:start="161:22" pos:end="161:23">-&gt;</operator><name pos:start="161:24" pos:end="161:32">inbuf_ptr</name></name> <operator pos:start="161:34" pos:end="161:34">-</operator> <literal type="number" pos:start="161:36" pos:end="161:36">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:46"><expr pos:start="163:17" pos:end="163:45"><name pos:start="163:17" pos:end="163:20">pend</name> <operator pos:start="163:22" pos:end="163:22">=</operator> <name pos:start="163:24" pos:end="163:35"><name pos:start="163:24" pos:end="163:24">s</name><operator pos:start="163:25" pos:end="163:26">-&gt;</operator><name pos:start="163:27" pos:end="163:35">inbuf_ptr</name></name> <operator pos:start="163:37" pos:end="163:37">+</operator> <name pos:start="163:39" pos:end="163:41">len</name> <operator pos:start="163:43" pos:end="163:43">-</operator> <literal type="number" pos:start="163:45" pos:end="163:45">4</literal></expr>;</expr_stmt>

                <while pos:start="165:17" pos:end="221:17">while <condition pos:start="165:23" pos:end="165:33">(<expr pos:start="165:24" pos:end="165:32"><name pos:start="165:24" pos:end="165:24">p</name> <operator pos:start="165:26" pos:end="165:27">&lt;=</operator> <name pos:start="165:29" pos:end="165:32">pend</name></expr>)</condition> <block pos:start="165:35" pos:end="221:17">{<block_content pos:start="167:21" pos:end="219:24">

                    <expr_stmt pos:start="167:21" pos:end="169:43"><expr pos:start="167:21" pos:end="169:42"><name pos:start="167:21" pos:end="167:26">header</name> <operator pos:start="167:28" pos:end="167:28">=</operator> <operator pos:start="167:30" pos:end="167:30">(</operator><name pos:start="167:31" pos:end="167:34"><name pos:start="167:31" pos:end="167:31">p</name><index pos:start="167:32" pos:end="167:34">[<expr pos:start="167:33" pos:end="167:33"><literal type="number" pos:start="167:33" pos:end="167:33">0</literal></expr>]</index></name> <operator pos:start="167:36" pos:end="167:37">&lt;&lt;</operator> <literal type="number" pos:start="167:39" pos:end="167:40">24</literal><operator pos:start="167:41" pos:end="167:41">)</operator> <operator pos:start="167:43" pos:end="167:43">|</operator> <operator pos:start="167:45" pos:end="167:45">(</operator><name pos:start="167:46" pos:end="167:49"><name pos:start="167:46" pos:end="167:46">p</name><index pos:start="167:47" pos:end="167:49">[<expr pos:start="167:48" pos:end="167:48"><literal type="number" pos:start="167:48" pos:end="167:48">1</literal></expr>]</index></name> <operator pos:start="167:51" pos:end="167:52">&lt;&lt;</operator> <literal type="number" pos:start="167:54" pos:end="167:55">16</literal><operator pos:start="167:56" pos:end="167:56">)</operator> <operator pos:start="167:58" pos:end="167:58">|</operator>

                        <operator pos:start="169:25" pos:end="169:25">(</operator><name pos:start="169:26" pos:end="169:29"><name pos:start="169:26" pos:end="169:26">p</name><index pos:start="169:27" pos:end="169:29">[<expr pos:start="169:28" pos:end="169:28"><literal type="number" pos:start="169:28" pos:end="169:28">2</literal></expr>]</index></name> <operator pos:start="169:31" pos:end="169:32">&lt;&lt;</operator> <literal type="number" pos:start="169:34" pos:end="169:34">8</literal><operator pos:start="169:35" pos:end="169:35">)</operator> <operator pos:start="169:37" pos:end="169:37">|</operator> <name pos:start="169:39" pos:end="169:42"><name pos:start="169:39" pos:end="169:39">p</name><index pos:start="169:40" pos:end="169:42">[<expr pos:start="169:41" pos:end="169:41"><literal type="number" pos:start="169:41" pos:end="169:41">3</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="171:21" pos:end="173:57"><expr pos:start="171:21" pos:end="173:56"><name pos:start="171:21" pos:end="171:27">header1</name> <operator pos:start="171:29" pos:end="171:29">=</operator> <operator pos:start="171:31" pos:end="171:31">(</operator><name pos:start="171:32" pos:end="171:42"><name pos:start="171:32" pos:end="171:32">s</name><operator pos:start="171:33" pos:end="171:34">-&gt;</operator><name pos:start="171:35" pos:end="171:39">inbuf</name><index pos:start="171:40" pos:end="171:42">[<expr pos:start="171:41" pos:end="171:41"><literal type="number" pos:start="171:41" pos:end="171:41">0</literal></expr>]</index></name> <operator pos:start="171:44" pos:end="171:45">&lt;&lt;</operator> <literal type="number" pos:start="171:47" pos:end="171:48">24</literal><operator pos:start="171:49" pos:end="171:49">)</operator> <operator pos:start="171:51" pos:end="171:51">|</operator> <operator pos:start="171:53" pos:end="171:53">(</operator><name pos:start="171:54" pos:end="171:64"><name pos:start="171:54" pos:end="171:54">s</name><operator pos:start="171:55" pos:end="171:56">-&gt;</operator><name pos:start="171:57" pos:end="171:61">inbuf</name><index pos:start="171:62" pos:end="171:64">[<expr pos:start="171:63" pos:end="171:63"><literal type="number" pos:start="171:63" pos:end="171:63">1</literal></expr>]</index></name> <operator pos:start="171:66" pos:end="171:67">&lt;&lt;</operator> <literal type="number" pos:start="171:69" pos:end="171:70">16</literal><operator pos:start="171:71" pos:end="171:71">)</operator> <operator pos:start="171:73" pos:end="171:73">|</operator>

                        <operator pos:start="173:25" pos:end="173:25">(</operator><name pos:start="173:26" pos:end="173:36"><name pos:start="173:26" pos:end="173:26">s</name><operator pos:start="173:27" pos:end="173:28">-&gt;</operator><name pos:start="173:29" pos:end="173:33">inbuf</name><index pos:start="173:34" pos:end="173:36">[<expr pos:start="173:35" pos:end="173:35"><literal type="number" pos:start="173:35" pos:end="173:35">2</literal></expr>]</index></name> <operator pos:start="173:38" pos:end="173:39">&lt;&lt;</operator> <literal type="number" pos:start="173:41" pos:end="173:41">8</literal><operator pos:start="173:42" pos:end="173:42">)</operator> <operator pos:start="173:44" pos:end="173:44">|</operator> <name pos:start="173:46" pos:end="173:56"><name pos:start="173:46" pos:end="173:46">s</name><operator pos:start="173:47" pos:end="173:48">-&gt;</operator><name pos:start="173:49" pos:end="173:53">inbuf</name><index pos:start="173:54" pos:end="173:56">[<expr pos:start="173:55" pos:end="173:55"><literal type="number" pos:start="173:55" pos:end="173:55">3</literal></expr>]</index></name></expr>;</expr_stmt>

                    <comment type="block" pos:start="175:21" pos:end="177:38">/* check with high probability that we have a

                       valid header */</comment>

                    <if_stmt pos:start="179:21" pos:end="217:21"><if pos:start="179:21" pos:end="217:21">if <condition pos:start="179:24" pos:end="181:53">(<expr pos:start="179:25" pos:end="181:52"><operator pos:start="179:25" pos:end="179:25">(</operator><name pos:start="179:26" pos:end="179:31">header</name> <operator pos:start="179:33" pos:end="179:33">&amp;</operator> <name pos:start="179:35" pos:end="179:50">SAME_HEADER_MASK</name><operator pos:start="179:51" pos:end="179:51">)</operator> <operator pos:start="179:53" pos:end="179:54">==</operator>

                        <operator pos:start="181:25" pos:end="181:25">(</operator><name pos:start="181:26" pos:end="181:32">header1</name> <operator pos:start="181:34" pos:end="181:34">&amp;</operator> <name pos:start="181:36" pos:end="181:51">SAME_HEADER_MASK</name><operator pos:start="181:52" pos:end="181:52">)</operator></expr>)</condition> <block pos:start="181:55" pos:end="217:21">{<block_content pos:start="185:25" pos:end="215:39">

                        <comment type="block" pos:start="183:25" pos:end="183:59">/* header found: update pointers */</comment>

                        <expr_stmt pos:start="185:25" pos:end="185:53"><expr pos:start="185:25" pos:end="185:52"><name pos:start="185:25" pos:end="185:27">len</name> <operator pos:start="185:29" pos:end="185:29">=</operator> <operator pos:start="185:31" pos:end="185:31">(</operator><name pos:start="185:32" pos:end="185:32">p</name> <operator pos:start="185:34" pos:end="185:34">+</operator> <literal type="number" pos:start="185:36" pos:end="185:36">4</literal><operator pos:start="185:37" pos:end="185:37">)</operator> <operator pos:start="185:39" pos:end="185:39">-</operator> <name pos:start="185:41" pos:end="185:52"><name pos:start="185:41" pos:end="185:41">s</name><operator pos:start="185:42" pos:end="185:43">-&gt;</operator><name pos:start="185:44" pos:end="185:52">inbuf_ptr</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="187:25" pos:end="187:39"><expr pos:start="187:25" pos:end="187:38"><name pos:start="187:25" pos:end="187:31">buf_ptr</name> <operator pos:start="187:33" pos:end="187:34">+=</operator> <name pos:start="187:36" pos:end="187:38">len</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="189:25" pos:end="189:40"><expr pos:start="189:25" pos:end="189:39"><name pos:start="189:25" pos:end="189:32">buf_size</name> <operator pos:start="189:34" pos:end="189:35">-=</operator> <name pos:start="189:37" pos:end="189:39">len</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="191:25" pos:end="191:41"><expr pos:start="191:25" pos:end="191:40"><name pos:start="191:25" pos:end="191:36"><name pos:start="191:25" pos:end="191:25">s</name><operator pos:start="191:26" pos:end="191:27">-&gt;</operator><name pos:start="191:28" pos:end="191:36">inbuf_ptr</name></name> <operator pos:start="191:38" pos:end="191:38">=</operator> <name pos:start="191:40" pos:end="191:40">p</name></expr>;</expr_stmt>

                        <comment type="block" pos:start="193:25" pos:end="193:48">/* compute frame size */</comment>

                        <expr_stmt pos:start="195:25" pos:end="195:60"><expr pos:start="195:25" pos:end="195:59"><name pos:start="195:25" pos:end="195:50"><name pos:start="195:25" pos:end="195:25">s</name><operator pos:start="195:26" pos:end="195:27">-&gt;</operator><name pos:start="195:28" pos:end="195:50">free_format_next_header</name></name> <operator pos:start="195:52" pos:end="195:52">=</operator> <name pos:start="195:54" pos:end="195:59">header</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="197:25" pos:end="197:76"><expr pos:start="197:25" pos:end="197:75"><name pos:start="197:25" pos:end="197:49"><name pos:start="197:25" pos:end="197:25">s</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:49">free_format_frame_size</name></name> <operator pos:start="197:51" pos:end="197:51">=</operator> <name pos:start="197:53" pos:end="197:64"><name pos:start="197:53" pos:end="197:53">s</name><operator pos:start="197:54" pos:end="197:55">-&gt;</operator><name pos:start="197:56" pos:end="197:64">inbuf_ptr</name></name> <operator pos:start="197:66" pos:end="197:66">-</operator> <name pos:start="197:68" pos:end="197:75"><name pos:start="197:68" pos:end="197:68">s</name><operator pos:start="197:69" pos:end="197:70">-&gt;</operator><name pos:start="197:71" pos:end="197:75">inbuf</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="199:25" pos:end="199:53"><expr pos:start="199:25" pos:end="199:52"><name pos:start="199:25" pos:end="199:31">padding</name> <operator pos:start="199:33" pos:end="199:33">=</operator> <operator pos:start="199:35" pos:end="199:35">(</operator><name pos:start="199:36" pos:end="199:42">header1</name> <operator pos:start="199:44" pos:end="199:45">&gt;&gt;</operator> <literal type="number" pos:start="199:47" pos:end="199:47">9</literal><operator pos:start="199:48" pos:end="199:48">)</operator> <operator pos:start="199:50" pos:end="199:50">&amp;</operator> <literal type="number" pos:start="199:52" pos:end="199:52">1</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="201:25" pos:end="207:65"><if pos:start="201:25" pos:end="203:69">if <condition pos:start="201:28" pos:end="201:42">(<expr pos:start="201:29" pos:end="201:41"><name pos:start="201:29" pos:end="201:36"><name pos:start="201:29" pos:end="201:29">s</name><operator pos:start="201:30" pos:end="201:31">-&gt;</operator><name pos:start="201:32" pos:end="201:36">layer</name></name> <operator pos:start="201:38" pos:end="201:39">==</operator> <literal type="number" pos:start="201:41" pos:end="201:41">1</literal></expr>)</condition><block type="pseudo" pos:start="203:29" pos:end="203:69"><block_content pos:start="203:29" pos:end="203:69">

                            <expr_stmt pos:start="203:29" pos:end="203:69"><expr pos:start="203:29" pos:end="203:68"><name pos:start="203:29" pos:end="203:53"><name pos:start="203:29" pos:end="203:29">s</name><operator pos:start="203:30" pos:end="203:31">-&gt;</operator><name pos:start="203:32" pos:end="203:53">free_format_frame_size</name></name> <operator pos:start="203:55" pos:end="203:56">-=</operator> <name pos:start="203:58" pos:end="203:64">padding</name> <operator pos:start="203:66" pos:end="203:66">*</operator> <literal type="number" pos:start="203:68" pos:end="203:68">4</literal></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="205:25" pos:end="207:65">else<block type="pseudo" pos:start="207:29" pos:end="207:65"><block_content pos:start="207:29" pos:end="207:65">

                            <expr_stmt pos:start="207:29" pos:end="207:65"><expr pos:start="207:29" pos:end="207:64"><name pos:start="207:29" pos:end="207:53"><name pos:start="207:29" pos:end="207:29">s</name><operator pos:start="207:30" pos:end="207:31">-&gt;</operator><name pos:start="207:32" pos:end="207:53">free_format_frame_size</name></name> <operator pos:start="207:55" pos:end="207:56">-=</operator> <name pos:start="207:58" pos:end="207:64">padding</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="209:25" pos:end="211:68"><expr pos:start="209:25" pos:end="211:67"><call pos:start="209:25" pos:end="211:67"><name pos:start="209:25" pos:end="209:31">dprintf</name><argument_list pos:start="209:32" pos:end="211:67">(<argument pos:start="209:33" pos:end="209:65"><expr pos:start="209:33" pos:end="209:65"><literal type="string" pos:start="209:33" pos:end="209:65">"free frame size=%d padding=%d\n"</literal></expr></argument>, 

                                <argument pos:start="211:33" pos:end="211:57"><expr pos:start="211:33" pos:end="211:57"><name pos:start="211:33" pos:end="211:57"><name pos:start="211:33" pos:end="211:33">s</name><operator pos:start="211:34" pos:end="211:35">-&gt;</operator><name pos:start="211:36" pos:end="211:57">free_format_frame_size</name></name></expr></argument>, <argument pos:start="211:60" pos:end="211:66"><expr pos:start="211:60" pos:end="211:66"><name pos:start="211:60" pos:end="211:66">padding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="213:25" pos:end="213:50"><expr pos:start="213:25" pos:end="213:49"><call pos:start="213:25" pos:end="213:49"><name pos:start="213:25" pos:end="213:37">decode_header</name><argument_list pos:start="213:38" pos:end="213:49">(<argument pos:start="213:39" pos:end="213:39"><expr pos:start="213:39" pos:end="213:39"><name pos:start="213:39" pos:end="213:39">s</name></expr></argument>, <argument pos:start="213:42" pos:end="213:48"><expr pos:start="213:42" pos:end="213:48"><name pos:start="213:42" pos:end="213:48">header1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="215:25" pos:end="215:39">goto <name pos:start="215:30" pos:end="215:38">next_data</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="219:21" pos:end="219:24"><expr pos:start="219:21" pos:end="219:23"><name pos:start="219:21" pos:end="219:21">p</name><operator pos:start="219:22" pos:end="219:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></while>

                <comment type="block" pos:start="223:17" pos:end="223:57">/* not found: simply increase pointers */</comment>

                <expr_stmt pos:start="225:17" pos:end="225:31"><expr pos:start="225:17" pos:end="225:30"><name pos:start="225:17" pos:end="225:23">buf_ptr</name> <operator pos:start="225:25" pos:end="225:26">+=</operator> <name pos:start="225:28" pos:end="225:30">len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:36"><expr pos:start="227:17" pos:end="227:35"><name pos:start="227:17" pos:end="227:28"><name pos:start="227:17" pos:end="227:17">s</name><operator pos:start="227:18" pos:end="227:19">-&gt;</operator><name pos:start="227:20" pos:end="227:28">inbuf_ptr</name></name> <operator pos:start="227:30" pos:end="227:31">+=</operator> <name pos:start="227:33" pos:end="227:35">len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="229:17" pos:end="229:32"><expr pos:start="229:17" pos:end="229:31"><name pos:start="229:17" pos:end="229:24">buf_size</name> <operator pos:start="229:26" pos:end="229:27">-=</operator> <name pos:start="229:29" pos:end="229:31">len</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

	</block_content>}</block></if> <if type="elseif" pos:start="233:11" pos:end="257:9">else if <condition pos:start="233:19" pos:end="233:39">(<expr pos:start="233:20" pos:end="233:38"><name pos:start="233:20" pos:end="233:22">len</name> <operator pos:start="233:24" pos:end="233:24">&lt;</operator> <name pos:start="233:26" pos:end="233:38"><name pos:start="233:26" pos:end="233:26">s</name><operator pos:start="233:27" pos:end="233:28">-&gt;</operator><name pos:start="233:29" pos:end="233:38">frame_size</name></name></expr>)</condition> <block pos:start="233:41" pos:end="257:9">{<block_content pos:start="235:13" pos:end="255:28">

            <if_stmt pos:start="235:13" pos:end="237:57"><if pos:start="235:13" pos:end="237:57">if <condition pos:start="235:16" pos:end="235:57">(<expr pos:start="235:17" pos:end="235:56"><name pos:start="235:17" pos:end="235:29"><name pos:start="235:17" pos:end="235:17">s</name><operator pos:start="235:18" pos:end="235:19">-&gt;</operator><name pos:start="235:20" pos:end="235:29">frame_size</name></name> <operator pos:start="235:31" pos:end="235:31">&gt;</operator> <name pos:start="235:33" pos:end="235:56">MPA_MAX_CODED_FRAME_SIZE</name></expr>)</condition><block type="pseudo" pos:start="237:17" pos:end="237:57"><block_content pos:start="237:17" pos:end="237:57">

                <expr_stmt pos:start="237:17" pos:end="237:57"><expr pos:start="237:17" pos:end="237:56"><name pos:start="237:17" pos:end="237:29"><name pos:start="237:17" pos:end="237:17">s</name><operator pos:start="237:18" pos:end="237:19">-&gt;</operator><name pos:start="237:20" pos:end="237:29">frame_size</name></name> <operator pos:start="237:31" pos:end="237:31">=</operator> <name pos:start="237:33" pos:end="237:56">MPA_MAX_CODED_FRAME_SIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	    <expr_stmt pos:start="239:13" pos:end="239:38"><expr pos:start="239:13" pos:end="239:37"><name pos:start="239:13" pos:end="239:15">len</name> <operator pos:start="239:17" pos:end="239:17">=</operator> <name pos:start="239:19" pos:end="239:31"><name pos:start="239:19" pos:end="239:19">s</name><operator pos:start="239:20" pos:end="239:21">-&gt;</operator><name pos:start="239:22" pos:end="239:31">frame_size</name></name> <operator pos:start="239:33" pos:end="239:33">-</operator> <name pos:start="239:35" pos:end="239:37">len</name></expr>;</expr_stmt>

	    <if_stmt pos:start="241:13" pos:end="247:50"><if pos:start="241:13" pos:end="243:31">if <condition pos:start="241:16" pos:end="241:31">(<expr pos:start="241:17" pos:end="241:30"><name pos:start="241:17" pos:end="241:19">len</name> <operator pos:start="241:21" pos:end="241:21">&gt;</operator> <name pos:start="241:23" pos:end="241:30">buf_size</name></expr>)</condition><block type="pseudo" pos:start="243:17" pos:end="243:31"><block_content pos:start="243:17" pos:end="243:31">

		<expr_stmt pos:start="243:17" pos:end="243:31"><expr pos:start="243:17" pos:end="243:30"><name pos:start="243:17" pos:end="243:19">len</name> <operator pos:start="243:21" pos:end="243:21">=</operator> <name pos:start="243:23" pos:end="243:30">buf_size</name></expr>;</expr_stmt></block_content></block></if>

	    <if type="elseif" pos:start="245:13" pos:end="247:50">else if <condition pos:start="245:21" pos:end="245:29">(<expr pos:start="245:22" pos:end="245:28"><name pos:start="245:22" pos:end="245:24">len</name> <operator pos:start="245:26" pos:end="245:26">&lt;</operator> <literal type="number" pos:start="245:28" pos:end="245:28">4</literal></expr>)</condition><block type="pseudo" pos:start="247:17" pos:end="247:50"><block_content pos:start="247:17" pos:end="247:50">

		<expr_stmt pos:start="247:17" pos:end="247:50"><expr pos:start="247:17" pos:end="247:49"><name pos:start="247:17" pos:end="247:19">len</name> <operator pos:start="247:21" pos:end="247:21">=</operator> <ternary pos:start="247:23" pos:end="247:49"><condition pos:start="247:23" pos:end="247:36"><expr pos:start="247:23" pos:end="247:34"><name pos:start="247:23" pos:end="247:30">buf_size</name> <operator pos:start="247:32" pos:end="247:32">&gt;</operator> <literal type="number" pos:start="247:34" pos:end="247:34">4</literal></expr> ?</condition><then pos:start="247:38" pos:end="247:38"> <expr pos:start="247:38" pos:end="247:38"><literal type="number" pos:start="247:38" pos:end="247:38">4</literal></expr> </then><else pos:start="247:40" pos:end="247:49">: <expr pos:start="247:42" pos:end="247:49"><name pos:start="247:42" pos:end="247:49">buf_size</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

	    <expr_stmt pos:start="249:13" pos:end="249:47"><expr pos:start="249:13" pos:end="249:46"><call pos:start="249:13" pos:end="249:46"><name pos:start="249:13" pos:end="249:18">memcpy</name><argument_list pos:start="249:19" pos:end="249:46">(<argument pos:start="249:20" pos:end="249:31"><expr pos:start="249:20" pos:end="249:31"><name pos:start="249:20" pos:end="249:31"><name pos:start="249:20" pos:end="249:20">s</name><operator pos:start="249:21" pos:end="249:22">-&gt;</operator><name pos:start="249:23" pos:end="249:31">inbuf_ptr</name></name></expr></argument>, <argument pos:start="249:34" pos:end="249:40"><expr pos:start="249:34" pos:end="249:40"><name pos:start="249:34" pos:end="249:40">buf_ptr</name></expr></argument>, <argument pos:start="249:43" pos:end="249:45"><expr pos:start="249:43" pos:end="249:45"><name pos:start="249:43" pos:end="249:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="251:13" pos:end="251:27"><expr pos:start="251:13" pos:end="251:26"><name pos:start="251:13" pos:end="251:19">buf_ptr</name> <operator pos:start="251:21" pos:end="251:22">+=</operator> <name pos:start="251:24" pos:end="251:26">len</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="253:13" pos:end="253:32"><expr pos:start="253:13" pos:end="253:31"><name pos:start="253:13" pos:end="253:24"><name pos:start="253:13" pos:end="253:13">s</name><operator pos:start="253:14" pos:end="253:15">-&gt;</operator><name pos:start="253:16" pos:end="253:24">inbuf_ptr</name></name> <operator pos:start="253:26" pos:end="253:27">+=</operator> <name pos:start="253:29" pos:end="253:31">len</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="255:13" pos:end="255:28"><expr pos:start="255:13" pos:end="255:27"><name pos:start="255:13" pos:end="255:20">buf_size</name> <operator pos:start="255:22" pos:end="255:23">-=</operator> <name pos:start="255:25" pos:end="255:27">len</name></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="257:11" pos:end="269:9">else <block pos:start="257:16" pos:end="269:9">{<block_content pos:start="259:13" pos:end="267:18">

            <expr_stmt pos:start="259:13" pos:end="259:55"><expr pos:start="259:13" pos:end="259:54"><name pos:start="259:13" pos:end="259:20">out_size</name> <operator pos:start="259:22" pos:end="259:22">=</operator> <call pos:start="259:24" pos:end="259:54"><name pos:start="259:24" pos:end="259:38">mp_decode_frame</name><argument_list pos:start="259:39" pos:end="259:54">(<argument pos:start="259:40" pos:end="259:40"><expr pos:start="259:40" pos:end="259:40"><name pos:start="259:40" pos:end="259:40">s</name></expr></argument>, <argument pos:start="259:43" pos:end="259:53"><expr pos:start="259:43" pos:end="259:53"><name pos:start="259:43" pos:end="259:53">out_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="261:13" pos:end="261:36"><expr pos:start="261:13" pos:end="261:35"><name pos:start="261:13" pos:end="261:24"><name pos:start="261:13" pos:end="261:13">s</name><operator pos:start="261:14" pos:end="261:15">-&gt;</operator><name pos:start="261:16" pos:end="261:24">inbuf_ptr</name></name> <operator pos:start="261:26" pos:end="261:26">=</operator> <name pos:start="261:28" pos:end="261:35"><name pos:start="261:28" pos:end="261:28">s</name><operator pos:start="261:29" pos:end="261:30">-&gt;</operator><name pos:start="261:31" pos:end="261:35">inbuf</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="263:13" pos:end="263:30"><expr pos:start="263:13" pos:end="263:29"><name pos:start="263:13" pos:end="263:25"><name pos:start="263:13" pos:end="263:13">s</name><operator pos:start="263:14" pos:end="263:15">-&gt;</operator><name pos:start="263:16" pos:end="263:25">frame_size</name></name> <operator pos:start="263:27" pos:end="263:27">=</operator> <literal type="number" pos:start="263:29" pos:end="263:29">0</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="265:13" pos:end="265:34"><expr pos:start="265:13" pos:end="265:33"><operator pos:start="265:13" pos:end="265:13">*</operator><name pos:start="265:14" pos:end="265:22">data_size</name> <operator pos:start="265:24" pos:end="265:24">=</operator> <name pos:start="265:26" pos:end="265:33">out_size</name></expr>;</expr_stmt>

	    <break pos:start="267:13" pos:end="267:18">break;</break>

	</block_content>}</block></else></if_stmt>

    <label pos:start="271:5" pos:end="271:14"><name pos:start="271:5" pos:end="271:13">next_data</name>:</label>

    </block_content>}</block></while>

    <return pos:start="275:5" pos:end="275:25">return <expr pos:start="275:12" pos:end="275:24"><name pos:start="275:12" pos:end="275:18">buf_ptr</name> <operator pos:start="275:20" pos:end="275:20">-</operator> <name pos:start="275:22" pos:end="275:24">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
