<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7403.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">QObject</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:27">parse_value</name><parameter_list pos:start="1:28" pos:end="1:65">(<parameter pos:start="1:29" pos:end="1:51"><decl pos:start="1:29" pos:end="1:51"><type pos:start="1:29" pos:end="1:51"><name pos:start="1:29" pos:end="1:45">JSONParserContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">ctxt</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:64"><decl pos:start="1:54" pos:end="1:64"><type pos:start="1:54" pos:end="1:64"><name pos:start="1:54" pos:end="1:60">va_list</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:64">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">QObject</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:18">token</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:44"><expr pos:start="9:5" pos:end="9:43"><name pos:start="9:5" pos:end="9:9">token</name> <operator pos:start="9:11" pos:end="9:11">=</operator> <call pos:start="9:13" pos:end="9:43"><name pos:start="9:13" pos:end="9:37">parser_context_peek_token</name><argument_list pos:start="9:38" pos:end="9:43">(<argument pos:start="9:39" pos:end="9:42"><expr pos:start="9:39" pos:end="9:42"><name pos:start="9:39" pos:end="9:42">ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:13">token</name> <operator pos:start="11:15" pos:end="11:16">==</operator> <name pos:start="11:18" pos:end="11:21">NULL</name></expr>)</condition> <block pos:start="11:24" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:20">

        <expr_stmt pos:start="13:9" pos:end="13:49"><expr pos:start="13:9" pos:end="13:48"><call pos:start="13:9" pos:end="13:48"><name pos:start="13:9" pos:end="13:19">parse_error</name><argument_list pos:start="13:20" pos:end="13:48">(<argument pos:start="13:21" pos:end="13:24"><expr pos:start="13:21" pos:end="13:24"><name pos:start="13:21" pos:end="13:24">ctxt</name></expr></argument>, <argument pos:start="13:27" pos:end="13:30"><expr pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:30">NULL</name></expr></argument>, <argument pos:start="13:33" pos:end="13:47"><expr pos:start="13:33" pos:end="13:47"><literal type="string" pos:start="13:33" pos:end="13:47">"premature EOI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="21:5" pos:end="53:5">switch <condition pos:start="21:12" pos:end="21:34">(<expr pos:start="21:13" pos:end="21:33"><call pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:26">token_get_type</name><argument_list pos:start="21:27" pos:end="21:33">(<argument pos:start="21:28" pos:end="21:32"><expr pos:start="21:28" pos:end="21:32"><name pos:start="21:28" pos:end="21:32">token</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:36" pos:end="53:5">{<block_content pos:start="23:5" pos:end="51:20">

    <case pos:start="23:5" pos:end="23:21">case <expr pos:start="23:10" pos:end="23:20"><name pos:start="23:10" pos:end="23:20">JSON_LCURLY</name></expr>:</case>

        <return pos:start="25:9" pos:end="25:38">return <expr pos:start="25:16" pos:end="25:37"><call pos:start="25:16" pos:end="25:37"><name pos:start="25:16" pos:end="25:27">parse_object</name><argument_list pos:start="25:28" pos:end="25:37">(<argument pos:start="25:29" pos:end="25:32"><expr pos:start="25:29" pos:end="25:32"><name pos:start="25:29" pos:end="25:32">ctxt</name></expr></argument>, <argument pos:start="25:35" pos:end="25:36"><expr pos:start="25:35" pos:end="25:36"><name pos:start="25:35" pos:end="25:36">ap</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="27:5" pos:end="27:22">case <expr pos:start="27:10" pos:end="27:21"><name pos:start="27:10" pos:end="27:21">JSON_LSQUARE</name></expr>:</case>

        <return pos:start="29:9" pos:end="29:37">return <expr pos:start="29:16" pos:end="29:36"><call pos:start="29:16" pos:end="29:36"><name pos:start="29:16" pos:end="29:26">parse_array</name><argument_list pos:start="29:27" pos:end="29:36">(<argument pos:start="29:28" pos:end="29:31"><expr pos:start="29:28" pos:end="29:31"><name pos:start="29:28" pos:end="29:31">ctxt</name></expr></argument>, <argument pos:start="29:34" pos:end="29:35"><expr pos:start="29:34" pos:end="29:35"><name pos:start="29:34" pos:end="29:35">ap</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="31:5" pos:end="31:21">case <expr pos:start="31:10" pos:end="31:20"><name pos:start="31:10" pos:end="31:20">JSON_ESCAPE</name></expr>:</case>

        <return pos:start="33:9" pos:end="33:38">return <expr pos:start="33:16" pos:end="33:37"><call pos:start="33:16" pos:end="33:37"><name pos:start="33:16" pos:end="33:27">parse_escape</name><argument_list pos:start="33:28" pos:end="33:37">(<argument pos:start="33:29" pos:end="33:32"><expr pos:start="33:29" pos:end="33:32"><name pos:start="33:29" pos:end="33:32">ctxt</name></expr></argument>, <argument pos:start="33:35" pos:end="33:36"><expr pos:start="33:35" pos:end="33:36"><name pos:start="33:35" pos:end="33:36">ap</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="35:5" pos:end="35:22">case <expr pos:start="35:10" pos:end="35:21"><name pos:start="35:10" pos:end="35:21">JSON_INTEGER</name></expr>:</case>

    <case pos:start="37:5" pos:end="37:20">case <expr pos:start="37:10" pos:end="37:19"><name pos:start="37:10" pos:end="37:19">JSON_FLOAT</name></expr>:</case>

    <case pos:start="39:5" pos:end="39:21">case <expr pos:start="39:10" pos:end="39:20"><name pos:start="39:10" pos:end="39:20">JSON_STRING</name></expr>:</case>

        <return pos:start="41:9" pos:end="41:35">return <expr pos:start="41:16" pos:end="41:34"><call pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:28">parse_literal</name><argument_list pos:start="41:29" pos:end="41:34">(<argument pos:start="41:30" pos:end="41:33"><expr pos:start="41:30" pos:end="41:33"><name pos:start="41:30" pos:end="41:33">ctxt</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="43:5" pos:end="43:22">case <expr pos:start="43:10" pos:end="43:21"><name pos:start="43:10" pos:end="43:21">JSON_KEYWORD</name></expr>:</case>

        <return pos:start="45:9" pos:end="45:35">return <expr pos:start="45:16" pos:end="45:34"><call pos:start="45:16" pos:end="45:34"><name pos:start="45:16" pos:end="45:28">parse_keyword</name><argument_list pos:start="45:29" pos:end="45:34">(<argument pos:start="45:30" pos:end="45:33"><expr pos:start="45:30" pos:end="45:33"><name pos:start="45:30" pos:end="45:33">ctxt</name></expr></argument>)</argument_list></call></expr>;</return>

    <default pos:start="47:5" pos:end="47:12">default:</default>

        <expr_stmt pos:start="49:9" pos:end="49:52"><expr pos:start="49:9" pos:end="49:51"><call pos:start="49:9" pos:end="49:51"><name pos:start="49:9" pos:end="49:19">parse_error</name><argument_list pos:start="49:20" pos:end="49:51">(<argument pos:start="49:21" pos:end="49:24"><expr pos:start="49:21" pos:end="49:24"><name pos:start="49:21" pos:end="49:24">ctxt</name></expr></argument>, <argument pos:start="49:27" pos:end="49:31"><expr pos:start="49:27" pos:end="49:31"><name pos:start="49:27" pos:end="49:31">token</name></expr></argument>, <argument pos:start="49:34" pos:end="49:50"><expr pos:start="49:34" pos:end="49:50"><literal type="string" pos:start="49:34" pos:end="49:50">"expecting value"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:20">return <expr pos:start="51:16" pos:end="51:19"><name pos:start="51:16" pos:end="51:19">NULL</name></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
