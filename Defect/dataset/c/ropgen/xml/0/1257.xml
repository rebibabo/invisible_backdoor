<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1257.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">do_fp_ld</name><parameter_list pos:start="1:21" pos:end="1:79">(<parameter pos:start="1:22" pos:end="1:36"><decl pos:start="1:22" pos:end="1:36"><type pos:start="1:22" pos:end="1:36"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:49"><decl pos:start="1:39" pos:end="1:49"><type pos:start="1:39" pos:end="1:49"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:49">destidx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:68"><decl pos:start="1:52" pos:end="1:68"><type pos:start="1:52" pos:end="1:68"><name pos:start="1:52" pos:end="1:59">TCGv_i64</name></type> <name pos:start="1:61" pos:end="1:68">tcg_addr</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:78"><decl pos:start="1:71" pos:end="1:78"><type pos:start="1:71" pos:end="1:78"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:78">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:29">

    <comment type="block" pos:start="5:5" pos:end="5:75">/* This always zero-extends and writes to a full 128 bit wide vector */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">TCGv_i64</name></type> <name pos:start="7:14" pos:end="7:18">tmplo</name> <init pos:start="7:20" pos:end="7:39">= <expr pos:start="7:22" pos:end="7:39"><call pos:start="7:22" pos:end="7:39"><name pos:start="7:22" pos:end="7:37">tcg_temp_new_i64</name><argument_list pos:start="7:38" pos:end="7:39">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">TCGv_i64</name></type> <name pos:start="9:14" pos:end="9:18">tmphi</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="39:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:17">(<expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:12">size</name> <operator pos:start="13:14" pos:end="13:14">&lt;</operator> <literal type="number" pos:start="13:16" pos:end="13:16">4</literal></expr>)</condition> <block pos:start="13:19" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:70">

        <decl_stmt pos:start="15:9" pos:end="15:38"><decl pos:start="15:9" pos:end="15:37"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">TCGMemOp</name></type> <name pos:start="15:18" pos:end="15:22">memop</name> <init pos:start="15:24" pos:end="15:37">= <expr pos:start="15:26" pos:end="15:37"><name pos:start="15:26" pos:end="15:30">MO_TE</name> <operator pos:start="15:32" pos:end="15:32">+</operator> <name pos:start="15:34" pos:end="15:37">size</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:33"><expr pos:start="17:9" pos:end="17:32"><name pos:start="17:9" pos:end="17:13">tmphi</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:32"><name pos:start="17:17" pos:end="17:29">tcg_const_i64</name><argument_list pos:start="17:30" pos:end="17:32">(<argument pos:start="17:31" pos:end="17:31"><expr pos:start="17:31" pos:end="17:31"><literal type="number" pos:start="17:31" pos:end="17:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:70"><expr pos:start="19:9" pos:end="19:69"><call pos:start="19:9" pos:end="19:69"><name pos:start="19:9" pos:end="19:27">tcg_gen_qemu_ld_i64</name><argument_list pos:start="19:28" pos:end="19:69">(<argument pos:start="19:29" pos:end="19:33"><expr pos:start="19:29" pos:end="19:33"><name pos:start="19:29" pos:end="19:33">tmplo</name></expr></argument>, <argument pos:start="19:36" pos:end="19:43"><expr pos:start="19:36" pos:end="19:43"><name pos:start="19:36" pos:end="19:43">tcg_addr</name></expr></argument>, <argument pos:start="19:46" pos:end="19:61"><expr pos:start="19:46" pos:end="19:61"><call pos:start="19:46" pos:end="19:61"><name pos:start="19:46" pos:end="19:58">get_mem_index</name><argument_list pos:start="19:59" pos:end="19:61">(<argument pos:start="19:60" pos:end="19:60"><expr pos:start="19:60" pos:end="19:60"><name pos:start="19:60" pos:end="19:60">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:64" pos:end="19:68"><expr pos:start="19:64" pos:end="19:68"><name pos:start="19:64" pos:end="19:68">memop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="39:5">else <block pos:start="21:12" pos:end="39:5">{<block_content pos:start="23:9" pos:end="37:38">

        <decl_stmt pos:start="23:9" pos:end="23:28"><decl pos:start="23:9" pos:end="23:27"><type pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:16">TCGv_i64</name></type> <name pos:start="23:18" pos:end="23:27">tcg_hiaddr</name></decl>;</decl_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:35"><expr pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:13">tmphi</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <call pos:start="25:17" pos:end="25:34"><name pos:start="25:17" pos:end="25:32">tcg_temp_new_i64</name><argument_list pos:start="25:33" pos:end="25:34">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:40"><expr pos:start="27:9" pos:end="27:39"><name pos:start="27:9" pos:end="27:18">tcg_hiaddr</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <call pos:start="27:22" pos:end="27:39"><name pos:start="27:22" pos:end="27:37">tcg_temp_new_i64</name><argument_list pos:start="27:38" pos:end="27:39">()</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:71"><expr pos:start="31:9" pos:end="31:70"><call pos:start="31:9" pos:end="31:70"><name pos:start="31:9" pos:end="31:27">tcg_gen_qemu_ld_i64</name><argument_list pos:start="31:28" pos:end="31:70">(<argument pos:start="31:29" pos:end="31:33"><expr pos:start="31:29" pos:end="31:33"><name pos:start="31:29" pos:end="31:33">tmplo</name></expr></argument>, <argument pos:start="31:36" pos:end="31:43"><expr pos:start="31:36" pos:end="31:43"><name pos:start="31:36" pos:end="31:43">tcg_addr</name></expr></argument>, <argument pos:start="31:46" pos:end="31:61"><expr pos:start="31:46" pos:end="31:61"><call pos:start="31:46" pos:end="31:61"><name pos:start="31:46" pos:end="31:58">get_mem_index</name><argument_list pos:start="31:59" pos:end="31:61">(<argument pos:start="31:60" pos:end="31:60"><expr pos:start="31:60" pos:end="31:60"><name pos:start="31:60" pos:end="31:60">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:64" pos:end="31:69"><expr pos:start="31:64" pos:end="31:69"><name pos:start="31:64" pos:end="31:69">MO_TEQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:50"><expr pos:start="33:9" pos:end="33:49"><call pos:start="33:9" pos:end="33:49"><name pos:start="33:9" pos:end="33:24">tcg_gen_addi_i64</name><argument_list pos:start="33:25" pos:end="33:49">(<argument pos:start="33:26" pos:end="33:35"><expr pos:start="33:26" pos:end="33:35"><name pos:start="33:26" pos:end="33:35">tcg_hiaddr</name></expr></argument>, <argument pos:start="33:38" pos:end="33:45"><expr pos:start="33:38" pos:end="33:45"><name pos:start="33:38" pos:end="33:45">tcg_addr</name></expr></argument>, <argument pos:start="33:48" pos:end="33:48"><expr pos:start="33:48" pos:end="33:48"><literal type="number" pos:start="33:48" pos:end="33:48">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:73"><expr pos:start="35:9" pos:end="35:72"><call pos:start="35:9" pos:end="35:72"><name pos:start="35:9" pos:end="35:27">tcg_gen_qemu_ld_i64</name><argument_list pos:start="35:28" pos:end="35:72">(<argument pos:start="35:29" pos:end="35:33"><expr pos:start="35:29" pos:end="35:33"><name pos:start="35:29" pos:end="35:33">tmphi</name></expr></argument>, <argument pos:start="35:36" pos:end="35:45"><expr pos:start="35:36" pos:end="35:45"><name pos:start="35:36" pos:end="35:45">tcg_hiaddr</name></expr></argument>, <argument pos:start="35:48" pos:end="35:63"><expr pos:start="35:48" pos:end="35:63"><call pos:start="35:48" pos:end="35:63"><name pos:start="35:48" pos:end="35:60">get_mem_index</name><argument_list pos:start="35:61" pos:end="35:63">(<argument pos:start="35:62" pos:end="35:62"><expr pos:start="35:62" pos:end="35:62"><name pos:start="35:62" pos:end="35:62">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:66" pos:end="35:71"><expr pos:start="35:66" pos:end="35:71"><name pos:start="35:66" pos:end="35:71">MO_TEQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:38"><expr pos:start="37:9" pos:end="37:37"><call pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:25">tcg_temp_free_i64</name><argument_list pos:start="37:26" pos:end="37:37">(<argument pos:start="37:27" pos:end="37:36"><expr pos:start="37:27" pos:end="37:36"><name pos:start="37:27" pos:end="37:36">tcg_hiaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:66"><expr pos:start="43:5" pos:end="43:65"><call pos:start="43:5" pos:end="43:65"><name pos:start="43:5" pos:end="43:18">tcg_gen_st_i64</name><argument_list pos:start="43:19" pos:end="43:65">(<argument pos:start="43:20" pos:end="43:24"><expr pos:start="43:20" pos:end="43:24"><name pos:start="43:20" pos:end="43:24">tmplo</name></expr></argument>, <argument pos:start="43:27" pos:end="43:33"><expr pos:start="43:27" pos:end="43:33"><name pos:start="43:27" pos:end="43:33">cpu_env</name></expr></argument>, <argument pos:start="43:36" pos:end="43:64"><expr pos:start="43:36" pos:end="43:64"><call pos:start="43:36" pos:end="43:64"><name pos:start="43:36" pos:end="43:48">fp_reg_offset</name><argument_list pos:start="43:49" pos:end="43:64">(<argument pos:start="43:50" pos:end="43:56"><expr pos:start="43:50" pos:end="43:56"><name pos:start="43:50" pos:end="43:56">destidx</name></expr></argument>, <argument pos:start="43:59" pos:end="43:63"><expr pos:start="43:59" pos:end="43:63"><name pos:start="43:59" pos:end="43:63">MO_64</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:62"><expr pos:start="45:5" pos:end="45:61"><call pos:start="45:5" pos:end="45:61"><name pos:start="45:5" pos:end="45:18">tcg_gen_st_i64</name><argument_list pos:start="45:19" pos:end="45:61">(<argument pos:start="45:20" pos:end="45:24"><expr pos:start="45:20" pos:end="45:24"><name pos:start="45:20" pos:end="45:24">tmphi</name></expr></argument>, <argument pos:start="45:27" pos:end="45:33"><expr pos:start="45:27" pos:end="45:33"><name pos:start="45:27" pos:end="45:33">cpu_env</name></expr></argument>, <argument pos:start="45:36" pos:end="45:60"><expr pos:start="45:36" pos:end="45:60"><call pos:start="45:36" pos:end="45:60"><name pos:start="45:36" pos:end="45:51">fp_reg_hi_offset</name><argument_list pos:start="45:52" pos:end="45:60">(<argument pos:start="45:53" pos:end="45:59"><expr pos:start="45:53" pos:end="45:59"><name pos:start="45:53" pos:end="45:59">destidx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><call pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:21">tcg_temp_free_i64</name><argument_list pos:start="49:22" pos:end="49:28">(<argument pos:start="49:23" pos:end="49:27"><expr pos:start="49:23" pos:end="49:27"><name pos:start="49:23" pos:end="49:27">tmplo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:29"><expr pos:start="51:5" pos:end="51:28"><call pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:21">tcg_temp_free_i64</name><argument_list pos:start="51:22" pos:end="51:28">(<argument pos:start="51:23" pos:end="51:27"><expr pos:start="51:23" pos:end="51:27"><name pos:start="51:23" pos:end="51:27">tmphi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
