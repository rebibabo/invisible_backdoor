<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23243.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">get_physical_address_data</name><parameter_list pos:start="1:37" pos:end="5:79">(<parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:45">CPUState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">env</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:65"><decl pos:start="3:38" pos:end="3:65"><type pos:start="3:38" pos:end="3:65"><name pos:start="3:38" pos:end="3:55">target_phys_addr_t</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:65">physical</name></decl></parameter>, <parameter pos:start="3:68" pos:end="3:76"><decl pos:start="3:68" pos:end="3:76"><type pos:start="3:68" pos:end="3:76"><name pos:start="3:68" pos:end="3:70">int</name> <modifier pos:start="3:72" pos:end="3:72">*</modifier></type><name pos:start="3:73" pos:end="3:76">prot</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:57"><decl pos:start="5:38" pos:end="5:57"><type pos:start="5:38" pos:end="5:57"><name pos:start="5:38" pos:end="5:49">target_ulong</name></type> <name pos:start="5:51" pos:end="5:57">address</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:65"><decl pos:start="5:60" pos:end="5:65"><type pos:start="5:60" pos:end="5:65"><name pos:start="5:60" pos:end="5:62">int</name></type> <name pos:start="5:64" pos:end="5:65">rw</name></decl></parameter>, <parameter pos:start="5:68" pos:end="5:78"><decl pos:start="5:68" pos:end="5:78"><type pos:start="5:68" pos:end="5:78"><name pos:start="5:68" pos:end="5:70">int</name></type> <name pos:start="5:72" pos:end="5:78">mmu_idx</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="145:1">{<block_content pos:start="9:5" pos:end="143:13">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:20">context</name></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="17:54"><decl pos:start="15:5" pos:end="17:53"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">is_user</name> <init pos:start="15:17" pos:end="17:53">= <expr pos:start="15:19" pos:end="17:53"><operator pos:start="15:19" pos:end="15:19">(</operator><name pos:start="15:20" pos:end="15:26">mmu_idx</name> <operator pos:start="15:28" pos:end="15:29">==</operator> <name pos:start="15:31" pos:end="15:42">MMU_USER_IDX</name> <operator pos:start="15:44" pos:end="15:45">||</operator>

                   <name pos:start="17:20" pos:end="17:26">mmu_idx</name> <operator pos:start="17:28" pos:end="17:29">==</operator> <name pos:start="17:31" pos:end="17:52">MMU_USER_SECONDARY_IDX</name><operator pos:start="17:53" pos:end="17:53">)</operator></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:33">(<expr pos:start="21:9" pos:end="21:32"><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:17"><name pos:start="21:10" pos:end="21:12">env</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:17">lsu</name></name> <operator pos:start="21:19" pos:end="21:19">&amp;</operator> <name pos:start="21:21" pos:end="21:26">DMMU_E</name><operator pos:start="21:27" pos:end="21:27">)</operator> <operator pos:start="21:29" pos:end="21:30">==</operator> <literal type="number" pos:start="21:32" pos:end="21:32">0</literal></expr>)</condition> <block pos:start="21:35" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:17"> <comment type="block" pos:start="21:37" pos:end="21:55">/* DMMU disabled */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:58"><expr pos:start="23:9" pos:end="23:57"><operator pos:start="23:9" pos:end="23:9">*</operator><name pos:start="23:10" pos:end="23:17">physical</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <call pos:start="23:21" pos:end="23:57"><name pos:start="23:21" pos:end="23:48">ultrasparc_truncate_physical</name><argument_list pos:start="23:49" pos:end="23:57">(<argument pos:start="23:50" pos:end="23:56"><expr pos:start="23:50" pos:end="23:56"><name pos:start="23:50" pos:end="23:56">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><operator pos:start="25:9" pos:end="25:9">*</operator><name pos:start="25:10" pos:end="25:13">prot</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:25">PAGE_READ</name> <operator pos:start="25:27" pos:end="25:27">|</operator> <name pos:start="25:29" pos:end="25:38">PAGE_WRITE</name></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="33:5" pos:end="59:5">switch<condition pos:start="33:11" pos:end="33:19">(<expr pos:start="33:12" pos:end="33:18"><name pos:start="33:12" pos:end="33:18">mmu_idx</name></expr>)</condition> <block pos:start="33:21" pos:end="59:5">{<block_content pos:start="35:5" pos:end="57:14">

    <case pos:start="35:5" pos:end="35:22">case <expr pos:start="35:10" pos:end="35:21"><name pos:start="35:10" pos:end="35:21">MMU_USER_IDX</name></expr>:</case>

    <case pos:start="37:5" pos:end="37:24">case <expr pos:start="37:10" pos:end="37:23"><name pos:start="37:10" pos:end="37:23">MMU_KERNEL_IDX</name></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:57"><expr pos:start="39:9" pos:end="39:56"><name pos:start="39:9" pos:end="39:15">context</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:47"><name pos:start="39:19" pos:end="39:21">env</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:27">dmmu</name><operator pos:start="39:28" pos:end="39:28">.</operator><name pos:start="39:29" pos:end="39:47">mmu_primary_context</name></name> <operator pos:start="39:49" pos:end="39:49">&amp;</operator> <literal type="number" pos:start="39:51" pos:end="39:56">0x1fff</literal></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:32">case <expr pos:start="43:10" pos:end="43:31"><name pos:start="43:10" pos:end="43:31">MMU_USER_SECONDARY_IDX</name></expr>:</case>

    <case pos:start="45:5" pos:end="45:34">case <expr pos:start="45:10" pos:end="45:33"><name pos:start="45:10" pos:end="45:33">MMU_KERNEL_SECONDARY_IDX</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:59"><expr pos:start="47:9" pos:end="47:58"><name pos:start="47:9" pos:end="47:15">context</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:49"><name pos:start="47:19" pos:end="47:21">env</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:27">dmmu</name><operator pos:start="47:28" pos:end="47:28">.</operator><name pos:start="47:29" pos:end="47:49">mmu_secondary_context</name></name> <operator pos:start="47:51" pos:end="47:51">&amp;</operator> <literal type="number" pos:start="47:53" pos:end="47:58">0x1fff</literal></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:25">case <expr pos:start="51:10" pos:end="51:24"><name pos:start="51:10" pos:end="51:24">MMU_NUCLEUS_IDX</name></expr>:</case>

    <default pos:start="53:5" pos:end="53:12">default:</default>

        <expr_stmt pos:start="55:9" pos:end="55:20"><expr pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:15">context</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <literal type="number" pos:start="55:19" pos:end="55:19">0</literal></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    </block_content>}</block></switch>



    <for pos:start="63:5" pos:end="134:0">for <control pos:start="63:9" pos:end="63:28">(<init pos:start="63:10" pos:end="63:15"><expr pos:start="63:10" pos:end="63:14"><name pos:start="63:10" pos:end="63:10">i</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr>;</init> <condition pos:start="63:17" pos:end="63:23"><expr pos:start="63:17" pos:end="63:22"><name pos:start="63:17" pos:end="63:17">i</name> <operator pos:start="63:19" pos:end="63:19">&lt;</operator> <literal type="number" pos:start="63:21" pos:end="63:22">64</literal></expr>;</condition> <incr pos:start="63:25" pos:end="63:27"><expr pos:start="63:25" pos:end="63:27"><name pos:start="63:25" pos:end="63:25">i</name><operator pos:start="63:26" pos:end="63:27">++</operator></expr></incr>)</control> <block pos:start="63:30" pos:end="134:0">{<block_content pos:start="67:9" pos:end="129:9">

        <comment type="line" pos:start="65:9" pos:end="65:41">// ctx match, vaddr match, valid?</comment>

        <if_stmt pos:start="67:9" pos:end="129:9"><if pos:start="67:9" pos:end="129:9">if <condition pos:start="67:12" pos:end="69:61">(<expr pos:start="67:13" pos:end="69:60"><call pos:start="67:13" pos:end="69:60"><name pos:start="67:13" pos:end="67:32">ultrasparc_tag_match</name><argument_list pos:start="67:33" pos:end="69:60">(<argument pos:start="67:34" pos:end="67:46"><expr pos:start="67:34" pos:end="67:46"><operator pos:start="67:34" pos:end="67:34">&amp;</operator><name pos:start="67:35" pos:end="67:46"><name pos:start="67:35" pos:end="67:37">env</name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:43">dtlb</name><index pos:start="67:44" pos:end="67:46">[<expr pos:start="67:45" pos:end="67:45"><name pos:start="67:45" pos:end="67:45">i</name></expr>]</index></name></expr></argument>,

                                 <argument pos:start="69:34" pos:end="69:40"><expr pos:start="69:34" pos:end="69:40"><name pos:start="69:34" pos:end="69:40">address</name></expr></argument>, <argument pos:start="69:43" pos:end="69:49"><expr pos:start="69:43" pos:end="69:49"><name pos:start="69:43" pos:end="69:49">context</name></expr></argument>, <argument pos:start="69:52" pos:end="69:59"><expr pos:start="69:52" pos:end="69:59"><name pos:start="69:52" pos:end="69:59">physical</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:63" pos:end="129:9">{<block_content pos:start="73:13" pos:end="127:21">

            <comment type="line" pos:start="71:13" pos:end="71:25">// access ok?</comment>

            <if_stmt pos:start="73:13" pos:end="117:13"><if pos:start="73:13" pos:end="117:13">if <condition pos:start="73:16" pos:end="75:57">(<expr pos:start="73:17" pos:end="75:56"><operator pos:start="73:17" pos:end="73:17">(</operator><operator pos:start="73:18" pos:end="73:18">(</operator><name pos:start="73:19" pos:end="73:30"><name pos:start="73:19" pos:end="73:21">env</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:27">dtlb</name><index pos:start="73:28" pos:end="73:30">[<expr pos:start="73:29" pos:end="73:29"><name pos:start="73:29" pos:end="73:29">i</name></expr>]</index></name><operator pos:start="73:31" pos:end="73:31">.</operator><name pos:start="73:32" pos:end="73:34">tte</name> <operator pos:start="73:36" pos:end="73:36">&amp;</operator> <literal type="number" pos:start="73:38" pos:end="73:40">0x4</literal><operator pos:start="73:41" pos:end="73:41">)</operator> <operator pos:start="73:43" pos:end="73:44">&amp;&amp;</operator> <name pos:start="73:46" pos:end="73:52">is_user</name><operator pos:start="73:53" pos:end="73:53">)</operator> <operator pos:start="73:55" pos:end="73:56">||</operator>

                <operator pos:start="75:17" pos:end="75:17">(</operator><operator pos:start="75:18" pos:end="75:18">!</operator><operator pos:start="75:19" pos:end="75:19">(</operator><name pos:start="75:20" pos:end="75:31"><name pos:start="75:20" pos:end="75:22">env</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:28">dtlb</name><index pos:start="75:29" pos:end="75:31">[<expr pos:start="75:30" pos:end="75:30"><name pos:start="75:30" pos:end="75:30">i</name></expr>]</index></name><operator pos:start="75:32" pos:end="75:32">.</operator><name pos:start="75:33" pos:end="75:35">tte</name> <operator pos:start="75:37" pos:end="75:37">&amp;</operator> <literal type="number" pos:start="75:39" pos:end="75:41">0x2</literal><operator pos:start="75:42" pos:end="75:42">)</operator> <operator pos:start="75:44" pos:end="75:45">&amp;&amp;</operator> <operator pos:start="75:47" pos:end="75:47">(</operator><name pos:start="75:48" pos:end="75:49">rw</name> <operator pos:start="75:51" pos:end="75:52">==</operator> <literal type="number" pos:start="75:54" pos:end="75:54">1</literal><operator pos:start="75:55" pos:end="75:55">)</operator><operator pos:start="75:56" pos:end="75:56">)</operator></expr>)</condition> <block pos:start="75:59" pos:end="117:13">{<block_content pos:start="77:17" pos:end="115:25">

                <decl_stmt pos:start="77:17" pos:end="77:39"><decl pos:start="77:17" pos:end="77:38"><type pos:start="77:17" pos:end="77:23"><name pos:start="77:17" pos:end="77:23">uint8_t</name></type> <name pos:start="77:25" pos:end="77:34">fault_type</name> <init pos:start="77:36" pos:end="77:38">= <expr pos:start="77:38" pos:end="77:38"><literal type="number" pos:start="77:38" pos:end="77:38">0</literal></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="81:17" pos:end="85:17"><if pos:start="81:17" pos:end="85:17">if <condition pos:start="81:20" pos:end="81:56">(<expr pos:start="81:21" pos:end="81:55"><operator pos:start="81:21" pos:end="81:21">(</operator><name pos:start="81:22" pos:end="81:33"><name pos:start="81:22" pos:end="81:24">env</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:30">dtlb</name><index pos:start="81:31" pos:end="81:33">[<expr pos:start="81:32" pos:end="81:32"><name pos:start="81:32" pos:end="81:32">i</name></expr>]</index></name><operator pos:start="81:34" pos:end="81:34">.</operator><name pos:start="81:35" pos:end="81:37">tte</name> <operator pos:start="81:39" pos:end="81:39">&amp;</operator> <literal type="number" pos:start="81:41" pos:end="81:43">0x4</literal><operator pos:start="81:44" pos:end="81:44">)</operator> <operator pos:start="81:46" pos:end="81:47">&amp;&amp;</operator> <name pos:start="81:49" pos:end="81:55">is_user</name></expr>)</condition> <block pos:start="81:58" pos:end="85:17">{<block_content pos:start="83:21" pos:end="83:36">

                    <expr_stmt pos:start="83:21" pos:end="83:36"><expr pos:start="83:21" pos:end="83:35"><name pos:start="83:21" pos:end="83:30">fault_type</name> <operator pos:start="83:32" pos:end="83:33">|=</operator> <literal type="number" pos:start="83:35" pos:end="83:35">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="83:38" pos:end="83:62">/* privilege violation */</comment>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="89:17" pos:end="91:39"><if pos:start="89:17" pos:end="91:39">if <condition pos:start="89:20" pos:end="89:39">(<expr pos:start="89:21" pos:end="89:38"><name pos:start="89:21" pos:end="89:34"><name pos:start="89:21" pos:end="89:23">env</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:29">dmmu</name><operator pos:start="89:30" pos:end="89:30">.</operator><name pos:start="89:31" pos:end="89:34">sfsr</name></name> <operator pos:start="89:36" pos:end="89:36">&amp;</operator> <literal type="number" pos:start="89:38" pos:end="89:38">1</literal></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="91:39"><block_content pos:start="91:21" pos:end="91:39"> <comment type="block" pos:start="89:41" pos:end="89:67">/* Fault status register */</comment>

                    <expr_stmt pos:start="91:21" pos:end="91:39"><expr pos:start="91:21" pos:end="91:38"><name pos:start="91:21" pos:end="91:34"><name pos:start="91:21" pos:end="91:23">env</name><operator pos:start="91:24" pos:end="91:25">-&gt;</operator><name pos:start="91:26" pos:end="91:29">dmmu</name><operator pos:start="91:30" pos:end="91:30">.</operator><name pos:start="91:31" pos:end="91:34">sfsr</name></name> <operator pos:start="91:36" pos:end="91:36">=</operator> <literal type="number" pos:start="91:38" pos:end="91:38">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="91:41" pos:end="93:62">/* overflow (not read before

                                             another fault) */</comment>



                <expr_stmt pos:start="97:17" pos:end="97:72"><expr pos:start="97:17" pos:end="97:71"><name pos:start="97:17" pos:end="97:30"><name pos:start="97:17" pos:end="97:19">env</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:25">dmmu</name><operator pos:start="97:26" pos:end="97:26">.</operator><name pos:start="97:27" pos:end="97:30">sfsr</name></name> <operator pos:start="97:32" pos:end="97:33">|=</operator> <operator pos:start="97:35" pos:end="97:35">(</operator><name pos:start="97:36" pos:end="97:42">is_user</name> <operator pos:start="97:44" pos:end="97:45">&lt;&lt;</operator> <literal type="number" pos:start="97:47" pos:end="97:47">3</literal><operator pos:start="97:48" pos:end="97:48">)</operator> <operator pos:start="97:50" pos:end="97:50">|</operator> <operator pos:start="97:52" pos:end="97:52">(</operator><operator pos:start="97:53" pos:end="97:53">(</operator><name pos:start="97:54" pos:end="97:55">rw</name> <operator pos:start="97:57" pos:end="97:58">==</operator> <literal type="number" pos:start="97:60" pos:end="97:60">1</literal><operator pos:start="97:61" pos:end="97:61">)</operator> <operator pos:start="97:63" pos:end="97:64">&lt;&lt;</operator> <literal type="number" pos:start="97:66" pos:end="97:66">2</literal><operator pos:start="97:67" pos:end="97:67">)</operator> <operator pos:start="97:69" pos:end="97:69">|</operator> <literal type="number" pos:start="97:71" pos:end="97:71">1</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="101:17" pos:end="101:52"><expr pos:start="101:17" pos:end="101:51"><name pos:start="101:17" pos:end="101:30"><name pos:start="101:17" pos:end="101:19">env</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:25">dmmu</name><operator pos:start="101:26" pos:end="101:26">.</operator><name pos:start="101:27" pos:end="101:30">sfsr</name></name> <operator pos:start="101:32" pos:end="101:33">|=</operator> <operator pos:start="101:35" pos:end="101:35">(</operator><name pos:start="101:36" pos:end="101:45">fault_type</name> <operator pos:start="101:47" pos:end="101:48">&lt;&lt;</operator> <literal type="number" pos:start="101:50" pos:end="101:50">7</literal><operator pos:start="101:51" pos:end="101:51">)</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="105:17" pos:end="105:41"><expr pos:start="105:17" pos:end="105:40"><name pos:start="105:17" pos:end="105:30"><name pos:start="105:17" pos:end="105:19">env</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:25">dmmu</name><operator pos:start="105:26" pos:end="105:26">.</operator><name pos:start="105:27" pos:end="105:30">sfar</name></name> <operator pos:start="105:32" pos:end="105:32">=</operator> <name pos:start="105:34" pos:end="105:40">address</name></expr>;</expr_stmt> <comment type="block" pos:start="105:43" pos:end="105:70">/* Fault address register */</comment>

                <expr_stmt pos:start="107:17" pos:end="110:0"><expr pos:start="107:17" pos:end="107:48"><name pos:start="107:17" pos:end="107:36"><name pos:start="107:17" pos:end="107:19">env</name><operator pos:start="107:20" pos:end="107:21">-&gt;</operator><name pos:start="107:22" pos:end="107:36">exception_index</name></name> <operator pos:start="107:38" pos:end="107:38">=</operator> <name pos:start="107:40" pos:end="107:48">TT_DFAULT</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="109:1" pos:end="109:16">#<cpp:directive pos:start="109:2" pos:end="109:6">ifdef</cpp:directive> <name pos:start="109:8" pos:end="109:16">DEBUG_MMU</name></cpp:ifdef>

                <expr_stmt pos:start="111:17" pos:end="114:0"><expr pos:start="111:17" pos:end="111:60"><call pos:start="111:17" pos:end="111:60"><name pos:start="111:17" pos:end="111:22">printf</name><argument_list pos:start="111:23" pos:end="111:60">(<argument pos:start="111:24" pos:end="111:50"><expr pos:start="111:24" pos:end="111:50"><literal type="string" pos:start="111:24" pos:end="111:38">"DFAULT at 0x%"</literal> <name pos:start="111:40" pos:end="111:45">PRIx64</name> <literal type="string" pos:start="111:47" pos:end="111:50">"\n"</literal></expr></argument>, <argument pos:start="111:53" pos:end="111:59"><expr pos:start="111:53" pos:end="111:59"><name pos:start="111:53" pos:end="111:59">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="113:1" pos:end="113:6">#<cpp:directive pos:start="113:2" pos:end="113:6">endif</cpp:directive></cpp:endif>

                <return pos:start="115:17" pos:end="115:25">return <expr pos:start="115:24" pos:end="115:24"><literal type="number" pos:start="115:24" pos:end="115:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:30"><expr pos:start="119:13" pos:end="119:29"><operator pos:start="119:13" pos:end="119:13">*</operator><name pos:start="119:14" pos:end="119:17">prot</name> <operator pos:start="119:19" pos:end="119:19">=</operator> <name pos:start="119:21" pos:end="119:29">PAGE_READ</name></expr>;</expr_stmt>

            <if_stmt pos:start="121:13" pos:end="123:36"><if pos:start="121:13" pos:end="123:36">if <condition pos:start="121:16" pos:end="121:39">(<expr pos:start="121:17" pos:end="121:38"><name pos:start="121:17" pos:end="121:28"><name pos:start="121:17" pos:end="121:19">env</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:25">dtlb</name><index pos:start="121:26" pos:end="121:28">[<expr pos:start="121:27" pos:end="121:27"><name pos:start="121:27" pos:end="121:27">i</name></expr>]</index></name><operator pos:start="121:29" pos:end="121:29">.</operator><name pos:start="121:30" pos:end="121:32">tte</name> <operator pos:start="121:34" pos:end="121:34">&amp;</operator> <literal type="number" pos:start="121:36" pos:end="121:38">0x2</literal></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:36"><block_content pos:start="123:17" pos:end="123:36">

                <expr_stmt pos:start="123:17" pos:end="123:36"><expr pos:start="123:17" pos:end="123:35"><operator pos:start="123:17" pos:end="123:17">*</operator><name pos:start="123:18" pos:end="123:21">prot</name> <operator pos:start="123:23" pos:end="123:24">|=</operator> <name pos:start="123:26" pos:end="123:35">PAGE_WRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:43"><expr pos:start="125:13" pos:end="125:42"><call pos:start="125:13" pos:end="125:42"><name pos:start="125:13" pos:end="125:24">TTE_SET_USED</name><argument_list pos:start="125:25" pos:end="125:42">(<argument pos:start="125:26" pos:end="125:41"><expr pos:start="125:26" pos:end="125:41"><name pos:start="125:26" pos:end="125:37"><name pos:start="125:26" pos:end="125:28">env</name><operator pos:start="125:29" pos:end="125:30">-&gt;</operator><name pos:start="125:31" pos:end="125:34">dtlb</name><index pos:start="125:35" pos:end="125:37">[<expr pos:start="125:36" pos:end="125:36"><name pos:start="125:36" pos:end="125:36">i</name></expr>]</index></name><operator pos:start="125:38" pos:end="125:38">.</operator><name pos:start="125:39" pos:end="125:41">tte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="127:13" pos:end="127:21">return <expr pos:start="127:20" pos:end="127:20"><literal type="number" pos:start="127:20" pos:end="127:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<cpp:ifdef pos:start="133:1" pos:end="133:16">#<cpp:directive pos:start="133:2" pos:end="133:6">ifdef</cpp:directive> <name pos:start="133:8" pos:end="133:16">DEBUG_MMU</name></cpp:ifdef>

    <expr_stmt pos:start="135:5" pos:end="138:0"><expr pos:start="135:5" pos:end="135:47"><call pos:start="135:5" pos:end="135:47"><name pos:start="135:5" pos:end="135:10">printf</name><argument_list pos:start="135:11" pos:end="135:47">(<argument pos:start="135:12" pos:end="135:37"><expr pos:start="135:12" pos:end="135:37"><literal type="string" pos:start="135:12" pos:end="135:25">"DMISS at 0x%"</literal> <name pos:start="135:27" pos:end="135:32">PRIx64</name> <literal type="string" pos:start="135:34" pos:end="135:37">"\n"</literal></expr></argument>, <argument pos:start="135:40" pos:end="135:46"><expr pos:start="135:40" pos:end="135:46"><name pos:start="135:40" pos:end="135:46">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="137:1" pos:end="137:6">#<cpp:directive pos:start="137:2" pos:end="137:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="139:5" pos:end="139:60"><expr pos:start="139:5" pos:end="139:59"><name pos:start="139:5" pos:end="139:24"><name pos:start="139:5" pos:end="139:7">env</name><operator pos:start="139:8" pos:end="139:9">-&gt;</operator><name pos:start="139:10" pos:end="139:13">dmmu</name><operator pos:start="139:14" pos:end="139:14">.</operator><name pos:start="139:15" pos:end="139:24">tag_access</name></name> <operator pos:start="139:26" pos:end="139:26">=</operator> <operator pos:start="139:28" pos:end="139:28">(</operator><name pos:start="139:29" pos:end="139:35">address</name> <operator pos:start="139:37" pos:end="139:37">&amp;</operator> <operator pos:start="139:39" pos:end="139:39">~</operator><literal type="number" pos:start="139:40" pos:end="139:48">0x1fffULL</literal><operator pos:start="139:49" pos:end="139:49">)</operator> <operator pos:start="139:51" pos:end="139:51">|</operator> <name pos:start="139:53" pos:end="139:59">context</name></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:36"><expr pos:start="141:5" pos:end="141:35"><name pos:start="141:5" pos:end="141:24"><name pos:start="141:5" pos:end="141:7">env</name><operator pos:start="141:8" pos:end="141:9">-&gt;</operator><name pos:start="141:10" pos:end="141:24">exception_index</name></name> <operator pos:start="141:26" pos:end="141:26">=</operator> <name pos:start="141:28" pos:end="141:35">TT_DMISS</name></expr>;</expr_stmt>

    <return pos:start="143:5" pos:end="143:13">return <expr pos:start="143:12" pos:end="143:12"><literal type="number" pos:start="143:12" pos:end="143:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
