<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1980.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">alsa_run_in</name> <parameter_list pos:start="1:24" pos:end="1:38">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:33">HWVoiceIn</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:37">hw</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="209:1">{<block_content pos:start="5:5" pos:end="207:24">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">ALSAVoiceIn</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">alsa</name> <init pos:start="5:23" pos:end="5:42">= <expr pos:start="5:25" pos:end="5:42"><operator pos:start="5:25" pos:end="5:25">(</operator><name pos:start="5:26" pos:end="5:36">ALSAVoiceIn</name> <operator pos:start="5:38" pos:end="5:38">*</operator><operator pos:start="5:39" pos:end="5:39">)</operator> <name pos:start="5:41" pos:end="5:42">hw</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">hwshift</name> <init pos:start="7:17" pos:end="7:32">= <expr pos:start="7:19" pos:end="7:32"><name pos:start="7:19" pos:end="7:32"><name pos:start="7:19" pos:end="7:20">hw</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:26">info</name><operator pos:start="7:27" pos:end="7:27">.</operator><name pos:start="7:28" pos:end="7:32">shift</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">live</name> <init pos:start="11:14" pos:end="11:44">= <expr pos:start="11:16" pos:end="11:44"><call pos:start="11:16" pos:end="11:44"><name pos:start="11:16" pos:end="11:39">audio_pcm_hw_get_live_in</name> <argument_list pos:start="11:41" pos:end="11:44">(<argument pos:start="11:42" pos:end="11:43"><expr pos:start="11:42" pos:end="11:43"><name pos:start="11:42" pos:end="11:43">hw</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">dead</name> <init pos:start="13:14" pos:end="13:33">= <expr pos:start="13:16" pos:end="13:33"><name pos:start="13:16" pos:end="13:26"><name pos:start="13:16" pos:end="13:17">hw</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:26">samples</name></name> <operator pos:start="13:28" pos:end="13:28">-</operator> <name pos:start="13:30" pos:end="13:33">live</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">decr</name></decl>;</decl_stmt>

    <struct pos:start="17:5" pos:end="29:6">struct <block pos:start="17:12" pos:end="23:5">{

        <decl_stmt pos:start="19:9" pos:end="19:16"><decl pos:start="19:9" pos:end="19:15"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:15">add</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:16"><decl pos:start="21:9" pos:end="21:15"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:15">len</name></decl>;</decl_stmt>

    }</block> <decl pos:start="23:7" pos:end="29:5"><name pos:start="23:7" pos:end="23:13"><name pos:start="23:7" pos:end="23:10">bufs</name><index pos:start="23:11" pos:end="23:13">[<expr pos:start="23:12" pos:end="23:12"><literal type="number" pos:start="23:12" pos:end="23:12">2</literal></expr>]</index></name> <init pos:start="23:15" pos:end="29:5">= <expr pos:start="23:17" pos:end="29:5"><block pos:start="23:17" pos:end="29:5">{

        <expr pos:start="25:9" pos:end="25:23"><block pos:start="25:9" pos:end="25:23">{ <expr pos:start="25:11" pos:end="25:18"><name pos:start="25:11" pos:end="25:18"><name pos:start="25:11" pos:end="25:12">hw</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:18">wpos</name></name></expr>, <expr pos:start="25:21" pos:end="25:21"><literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr> }</block></expr>,

        <expr pos:start="27:9" pos:end="27:16"><block pos:start="27:9" pos:end="27:16">{ <expr pos:start="27:11" pos:end="27:11"><literal type="number" pos:start="27:11" pos:end="27:11">0</literal></expr>, <expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr> }</block></expr>

    }</block></expr></init></decl>;</struct>

    <decl_stmt pos:start="31:5" pos:end="31:28"><decl pos:start="31:5" pos:end="31:27"><type pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:21">snd_pcm_sframes_t</name></type> <name pos:start="31:23" pos:end="31:27">avail</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:39"><decl pos:start="33:5" pos:end="33:38"><type pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:21">snd_pcm_uframes_t</name></type> <name pos:start="33:23" pos:end="33:34">read_samples</name> <init pos:start="33:36" pos:end="33:38">= <expr pos:start="33:38" pos:end="33:38"><literal type="number" pos:start="33:38" pos:end="33:38">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:14">(<expr pos:start="37:9" pos:end="37:13"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:13">dead</name></expr>)</condition> <block pos:start="37:16" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:17">

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:42"><expr pos:start="45:5" pos:end="45:41"><name pos:start="45:5" pos:end="45:9">avail</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <call pos:start="45:13" pos:end="45:41"><name pos:start="45:13" pos:end="45:26">alsa_get_avail</name> <argument_list pos:start="45:28" pos:end="45:41">(<argument pos:start="45:29" pos:end="45:40"><expr pos:start="45:29" pos:end="45:40"><name pos:start="45:29" pos:end="45:40"><name pos:start="45:29" pos:end="45:32">alsa</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:40">handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:18">(<expr pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:13">avail</name> <operator pos:start="47:15" pos:end="47:15">&lt;</operator> <literal type="number" pos:start="47:17" pos:end="47:17">0</literal></expr>)</condition> <block pos:start="47:20" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:17">

        <expr_stmt pos:start="49:9" pos:end="49:60"><expr pos:start="49:9" pos:end="49:59"><call pos:start="49:9" pos:end="49:59"><name pos:start="49:9" pos:end="49:13">dolog</name> <argument_list pos:start="49:15" pos:end="49:59">(<argument pos:start="49:16" pos:end="49:58"><expr pos:start="49:16" pos:end="49:58"><literal type="string" pos:start="49:16" pos:end="49:58">"Could not get number of captured frames\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:17">return <expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:75">(<expr pos:start="57:9" pos:end="57:74"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:14">avail</name> <operator pos:start="57:16" pos:end="57:17">&amp;&amp;</operator> <operator pos:start="57:19" pos:end="57:19">(</operator><call pos:start="57:20" pos:end="57:47"><name pos:start="57:20" pos:end="57:32">snd_pcm_state</name> <argument_list pos:start="57:34" pos:end="57:47">(<argument pos:start="57:35" pos:end="57:46"><expr pos:start="57:35" pos:end="57:46"><name pos:start="57:35" pos:end="57:46"><name pos:start="57:35" pos:end="57:38">alsa</name><operator pos:start="57:39" pos:end="57:40">-&gt;</operator><name pos:start="57:41" pos:end="57:46">handle</name></name></expr></argument>)</argument_list></call> <operator pos:start="57:49" pos:end="57:50">==</operator> <name pos:start="57:52" pos:end="57:73">SND_PCM_STATE_PREPARED</name><operator pos:start="57:74" pos:end="57:74">)</operator></expr>)</condition> <block pos:start="57:77" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:28">

        <expr_stmt pos:start="59:9" pos:end="59:28"><expr pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:13">avail</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <name pos:start="59:17" pos:end="59:27"><name pos:start="59:17" pos:end="59:18">hw</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:27">samples</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:35"><expr pos:start="65:5" pos:end="65:34"><name pos:start="65:5" pos:end="65:8">decr</name> <operator pos:start="65:10" pos:end="65:10">=</operator> <call pos:start="65:12" pos:end="65:34"><name pos:start="65:12" pos:end="65:20">audio_MIN</name> <argument_list pos:start="65:22" pos:end="65:34">(<argument pos:start="65:23" pos:end="65:26"><expr pos:start="65:23" pos:end="65:26"><name pos:start="65:23" pos:end="65:26">dead</name></expr></argument>, <argument pos:start="65:29" pos:end="65:33"><expr pos:start="65:29" pos:end="65:33"><name pos:start="65:29" pos:end="65:33">avail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="71:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:14">(<expr pos:start="67:9" pos:end="67:13"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:13">decr</name></expr>)</condition> <block pos:start="67:16" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:17">

        <return pos:start="69:9" pos:end="69:17">return <expr pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="87:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:38">(<expr pos:start="75:9" pos:end="75:37"><name pos:start="75:9" pos:end="75:16"><name pos:start="75:9" pos:end="75:10">hw</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:16">wpos</name></name> <operator pos:start="75:18" pos:end="75:18">+</operator> <name pos:start="75:20" pos:end="75:23">decr</name> <operator pos:start="75:25" pos:end="75:25">&gt;</operator> <name pos:start="75:27" pos:end="75:37"><name pos:start="75:27" pos:end="75:28">hw</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:37">samples</name></name></expr>)</condition> <block pos:start="75:40" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:56">

        <expr_stmt pos:start="77:9" pos:end="77:47"><expr pos:start="77:9" pos:end="77:46"><name pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:12">bufs</name><index pos:start="77:13" pos:end="77:15">[<expr pos:start="77:14" pos:end="77:14"><literal type="number" pos:start="77:14" pos:end="77:14">0</literal></expr>]</index></name><operator pos:start="77:16" pos:end="77:16">.</operator><name pos:start="77:17" pos:end="77:19">len</name> <operator pos:start="77:21" pos:end="77:21">=</operator> <operator pos:start="77:23" pos:end="77:23">(</operator><name pos:start="77:24" pos:end="77:34"><name pos:start="77:24" pos:end="77:25">hw</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:34">samples</name></name> <operator pos:start="77:36" pos:end="77:36">-</operator> <name pos:start="77:38" pos:end="77:45"><name pos:start="77:38" pos:end="77:39">hw</name><operator pos:start="77:40" pos:end="77:41">-&gt;</operator><name pos:start="77:42" pos:end="77:45">wpos</name></name><operator pos:start="77:46" pos:end="77:46">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:56"><expr pos:start="79:9" pos:end="79:55"><name pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:12">bufs</name><index pos:start="79:13" pos:end="79:15">[<expr pos:start="79:14" pos:end="79:14"><literal type="number" pos:start="79:14" pos:end="79:14">1</literal></expr>]</index></name><operator pos:start="79:16" pos:end="79:16">.</operator><name pos:start="79:17" pos:end="79:19">len</name> <operator pos:start="79:21" pos:end="79:21">=</operator> <operator pos:start="79:23" pos:end="79:23">(</operator><name pos:start="79:24" pos:end="79:27">decr</name> <operator pos:start="79:29" pos:end="79:29">-</operator> <operator pos:start="79:31" pos:end="79:31">(</operator><name pos:start="79:32" pos:end="79:42"><name pos:start="79:32" pos:end="79:33">hw</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:42">samples</name></name> <operator pos:start="79:44" pos:end="79:44">-</operator> <name pos:start="79:46" pos:end="79:53"><name pos:start="79:46" pos:end="79:47">hw</name><operator pos:start="79:48" pos:end="79:49">-&gt;</operator><name pos:start="79:50" pos:end="79:53">wpos</name></name><operator pos:start="79:54" pos:end="79:54">)</operator><operator pos:start="79:55" pos:end="79:55">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if>

    <else pos:start="83:5" pos:end="87:5">else <block pos:start="83:10" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:27">

        <expr_stmt pos:start="85:9" pos:end="85:27"><expr pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:15"><name pos:start="85:9" pos:end="85:12">bufs</name><index pos:start="85:13" pos:end="85:15">[<expr pos:start="85:14" pos:end="85:14"><literal type="number" pos:start="85:14" pos:end="85:14">0</literal></expr>]</index></name><operator pos:start="85:16" pos:end="85:16">.</operator><name pos:start="85:17" pos:end="85:19">len</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <name pos:start="85:23" pos:end="85:26">decr</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="91:5" pos:end="199:5">for <control pos:start="91:9" pos:end="91:27">(<init pos:start="91:10" pos:end="91:15"><expr pos:start="91:10" pos:end="91:14"><name pos:start="91:10" pos:end="91:10">i</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <literal type="number" pos:start="91:14" pos:end="91:14">0</literal></expr>;</init> <condition pos:start="91:17" pos:end="91:22"><expr pos:start="91:17" pos:end="91:21"><name pos:start="91:17" pos:end="91:17">i</name> <operator pos:start="91:19" pos:end="91:19">&lt;</operator> <literal type="number" pos:start="91:21" pos:end="91:21">2</literal></expr>;</condition> <incr pos:start="91:24" pos:end="91:26"><expr pos:start="91:24" pos:end="91:26"><operator pos:start="91:24" pos:end="91:25">++</operator><name pos:start="91:26" pos:end="91:26">i</name></expr></incr>)</control> <block pos:start="91:29" pos:end="199:5">{<block_content pos:start="93:9" pos:end="197:9">

        <decl_stmt pos:start="93:9" pos:end="93:18"><decl pos:start="93:9" pos:end="93:17"><type pos:start="93:9" pos:end="93:14"><name pos:start="93:9" pos:end="93:12">void</name> <modifier pos:start="93:14" pos:end="93:14">*</modifier></type><name pos:start="93:15" pos:end="93:17">src</name></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="95:25"><decl pos:start="95:9" pos:end="95:24"><type pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:19">st_sample_t</name> <modifier pos:start="95:21" pos:end="95:21">*</modifier></type><name pos:start="95:22" pos:end="95:24">dst</name></decl>;</decl_stmt>

        <decl_stmt pos:start="97:9" pos:end="97:32"><decl pos:start="97:9" pos:end="97:31"><type pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:25">snd_pcm_sframes_t</name></type> <name pos:start="97:27" pos:end="97:31">nread</name></decl>;</decl_stmt>

        <decl_stmt pos:start="99:9" pos:end="99:30"><decl pos:start="99:9" pos:end="99:29"><type pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:25">snd_pcm_uframes_t</name></type> <name pos:start="99:27" pos:end="99:29">len</name></decl>;</decl_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:26"><expr pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:11">len</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <name pos:start="103:15" pos:end="103:21"><name pos:start="103:15" pos:end="103:18">bufs</name><index pos:start="103:19" pos:end="103:21">[<expr pos:start="103:20" pos:end="103:20"><name pos:start="103:20" pos:end="103:20">i</name></expr>]</index></name><operator pos:start="103:22" pos:end="103:22">.</operator><name pos:start="103:23" pos:end="103:25">len</name></expr>;</expr_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:62"><expr pos:start="107:9" pos:end="107:61"><name pos:start="107:9" pos:end="107:11">src</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:61"><name pos:start="107:15" pos:end="107:21">advance</name> <argument_list pos:start="107:23" pos:end="107:61">(<argument pos:start="107:24" pos:end="107:36"><expr pos:start="107:24" pos:end="107:36"><name pos:start="107:24" pos:end="107:36"><name pos:start="107:24" pos:end="107:27">alsa</name><operator pos:start="107:28" pos:end="107:29">-&gt;</operator><name pos:start="107:30" pos:end="107:36">pcm_buf</name></name></expr></argument>, <argument pos:start="107:39" pos:end="107:60"><expr pos:start="107:39" pos:end="107:60"><name pos:start="107:39" pos:end="107:45"><name pos:start="107:39" pos:end="107:42">bufs</name><index pos:start="107:43" pos:end="107:45">[<expr pos:start="107:44" pos:end="107:44"><name pos:start="107:44" pos:end="107:44">i</name></expr>]</index></name><operator pos:start="107:46" pos:end="107:46">.</operator><name pos:start="107:47" pos:end="107:49">add</name> <operator pos:start="107:51" pos:end="107:52">&lt;&lt;</operator> <name pos:start="107:54" pos:end="107:60">hwshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:41"><expr pos:start="109:9" pos:end="109:40"><name pos:start="109:9" pos:end="109:11">dst</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <name pos:start="109:15" pos:end="109:26"><name pos:start="109:15" pos:end="109:16">hw</name><operator pos:start="109:17" pos:end="109:18">-&gt;</operator><name pos:start="109:19" pos:end="109:26">conv_buf</name></name> <operator pos:start="109:28" pos:end="109:28">+</operator> <name pos:start="109:30" pos:end="109:36"><name pos:start="109:30" pos:end="109:33">bufs</name><index pos:start="109:34" pos:end="109:36">[<expr pos:start="109:35" pos:end="109:35"><name pos:start="109:35" pos:end="109:35">i</name></expr>]</index></name><operator pos:start="109:37" pos:end="109:37">.</operator><name pos:start="109:38" pos:end="109:40">add</name></expr>;</expr_stmt>



        <while pos:start="113:9" pos:end="197:9">while <condition pos:start="113:15" pos:end="113:19">(<expr pos:start="113:16" pos:end="113:18"><name pos:start="113:16" pos:end="113:18">len</name></expr>)</condition> <block pos:start="113:21" pos:end="197:9">{<block_content pos:start="115:13" pos:end="195:25">

            <expr_stmt pos:start="115:13" pos:end="115:59"><expr pos:start="115:13" pos:end="115:58"><name pos:start="115:13" pos:end="115:17">nread</name> <operator pos:start="115:19" pos:end="115:19">=</operator> <call pos:start="115:21" pos:end="115:58"><name pos:start="115:21" pos:end="115:33">snd_pcm_readi</name> <argument_list pos:start="115:35" pos:end="115:58">(<argument pos:start="115:36" pos:end="115:47"><expr pos:start="115:36" pos:end="115:47"><name pos:start="115:36" pos:end="115:47"><name pos:start="115:36" pos:end="115:39">alsa</name><operator pos:start="115:40" pos:end="115:41">-&gt;</operator><name pos:start="115:42" pos:end="115:47">handle</name></name></expr></argument>, <argument pos:start="115:50" pos:end="115:52"><expr pos:start="115:50" pos:end="115:52"><name pos:start="115:50" pos:end="115:52">src</name></expr></argument>, <argument pos:start="115:55" pos:end="115:57"><expr pos:start="115:55" pos:end="115:57"><name pos:start="115:55" pos:end="115:57">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="119:13" pos:end="179:13"><if pos:start="119:13" pos:end="179:13">if <condition pos:start="119:16" pos:end="119:27">(<expr pos:start="119:17" pos:end="119:26"><name pos:start="119:17" pos:end="119:21">nread</name> <operator pos:start="119:23" pos:end="119:24">&lt;=</operator> <literal type="number" pos:start="119:26" pos:end="119:26">0</literal></expr>)</condition> <block pos:start="119:29" pos:end="179:13">{<block_content pos:start="121:17" pos:end="177:17">

                <switch pos:start="121:17" pos:end="177:17">switch <condition pos:start="121:24" pos:end="121:30">(<expr pos:start="121:25" pos:end="121:29"><name pos:start="121:25" pos:end="121:29">nread</name></expr>)</condition> <block pos:start="121:32" pos:end="177:17">{<block_content pos:start="123:17" pos:end="175:30">

                <case pos:start="123:17" pos:end="123:23">case <expr pos:start="123:22" pos:end="123:22"><literal type="number" pos:start="123:22" pos:end="123:22">0</literal></expr>:</case>

                    <if_stmt pos:start="125:21" pos:end="129:21"><if pos:start="125:21" pos:end="129:21">if <condition pos:start="125:24" pos:end="125:37">(<expr pos:start="125:25" pos:end="125:36"><name pos:start="125:25" pos:end="125:36"><name pos:start="125:25" pos:end="125:28">conf</name><operator pos:start="125:29" pos:end="125:29">.</operator><name pos:start="125:30" pos:end="125:36">verbose</name></name></expr>)</condition> <block pos:start="125:39" pos:end="129:21">{<block_content pos:start="127:25" pos:end="127:79">

                        <expr_stmt pos:start="127:25" pos:end="127:79"><expr pos:start="127:25" pos:end="127:78"><call pos:start="127:25" pos:end="127:78"><name pos:start="127:25" pos:end="127:29">dolog</name> <argument_list pos:start="127:31" pos:end="127:78">(<argument pos:start="127:32" pos:end="127:72"><expr pos:start="127:32" pos:end="127:72"><literal type="string" pos:start="127:32" pos:end="127:72">"Failed to read %ld frames (read zero)\n"</literal></expr></argument>, <argument pos:start="127:75" pos:end="127:77"><expr pos:start="127:75" pos:end="127:77"><name pos:start="127:75" pos:end="127:77">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <goto pos:start="131:21" pos:end="131:30">goto <name pos:start="131:26" pos:end="131:29">exit</name>;</goto>



                <case pos:start="135:17" pos:end="135:28">case <expr pos:start="135:22" pos:end="135:27"><operator pos:start="135:22" pos:end="135:22">-</operator><name pos:start="135:23" pos:end="135:27">EPIPE</name></expr>:</case>

                    <if_stmt pos:start="137:21" pos:end="143:21"><if pos:start="137:21" pos:end="143:21">if <condition pos:start="137:24" pos:end="137:52">(<expr pos:start="137:25" pos:end="137:51"><call pos:start="137:25" pos:end="137:51"><name pos:start="137:25" pos:end="137:36">alsa_recover</name> <argument_list pos:start="137:38" pos:end="137:51">(<argument pos:start="137:39" pos:end="137:50"><expr pos:start="137:39" pos:end="137:50"><name pos:start="137:39" pos:end="137:50"><name pos:start="137:39" pos:end="137:42">alsa</name><operator pos:start="137:43" pos:end="137:44">-&gt;</operator><name pos:start="137:45" pos:end="137:50">handle</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="137:54" pos:end="143:21">{<block_content pos:start="139:25" pos:end="141:34">

                        <expr_stmt pos:start="139:25" pos:end="139:80"><expr pos:start="139:25" pos:end="139:79"><call pos:start="139:25" pos:end="139:79"><name pos:start="139:25" pos:end="139:35">alsa_logerr</name> <argument_list pos:start="139:37" pos:end="139:79">(<argument pos:start="139:38" pos:end="139:42"><expr pos:start="139:38" pos:end="139:42"><name pos:start="139:38" pos:end="139:42">nread</name></expr></argument>, <argument pos:start="139:45" pos:end="139:73"><expr pos:start="139:45" pos:end="139:73"><literal type="string" pos:start="139:45" pos:end="139:73">"Failed to read %ld frames\n"</literal></expr></argument>, <argument pos:start="139:76" pos:end="139:78"><expr pos:start="139:76" pos:end="139:78"><name pos:start="139:76" pos:end="139:78">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="141:25" pos:end="141:34">goto <name pos:start="141:30" pos:end="141:33">exit</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="145:21" pos:end="149:21"><if pos:start="145:21" pos:end="149:21">if <condition pos:start="145:24" pos:end="145:37">(<expr pos:start="145:25" pos:end="145:36"><name pos:start="145:25" pos:end="145:36"><name pos:start="145:25" pos:end="145:28">conf</name><operator pos:start="145:29" pos:end="145:29">.</operator><name pos:start="145:30" pos:end="145:36">verbose</name></name></expr>)</condition> <block pos:start="145:39" pos:end="149:21">{<block_content pos:start="147:25" pos:end="147:65">

                        <expr_stmt pos:start="147:25" pos:end="147:65"><expr pos:start="147:25" pos:end="147:64"><call pos:start="147:25" pos:end="147:64"><name pos:start="147:25" pos:end="147:29">dolog</name> <argument_list pos:start="147:31" pos:end="147:64">(<argument pos:start="147:32" pos:end="147:63"><expr pos:start="147:32" pos:end="147:63"><literal type="string" pos:start="147:32" pos:end="147:63">"Recovering from capture xrun\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <continue pos:start="151:21" pos:end="151:29">continue;</continue>



                <case pos:start="155:17" pos:end="155:29">case <expr pos:start="155:22" pos:end="155:28"><operator pos:start="155:22" pos:end="155:22">-</operator><name pos:start="155:23" pos:end="155:28">EAGAIN</name></expr>:</case>

                    <goto pos:start="157:21" pos:end="157:30">goto <name pos:start="157:26" pos:end="157:29">exit</name>;</goto>



                <default pos:start="161:17" pos:end="161:24">default:</default>

                    <expr_stmt pos:start="163:21" pos:end="173:26"><expr pos:start="163:21" pos:end="173:25"><call pos:start="163:21" pos:end="173:25"><name pos:start="163:21" pos:end="163:31">alsa_logerr</name> <argument_list pos:start="163:33" pos:end="173:25">(

                        <argument pos:start="165:25" pos:end="165:29"><expr pos:start="165:25" pos:end="165:29"><name pos:start="165:25" pos:end="165:29">nread</name></expr></argument>,

                        <argument pos:start="167:25" pos:end="167:61"><expr pos:start="167:25" pos:end="167:61"><literal type="string" pos:start="167:25" pos:end="167:61">"Failed to read %ld frames from %p\n"</literal></expr></argument>,

                        <argument pos:start="169:25" pos:end="169:27"><expr pos:start="169:25" pos:end="169:27"><name pos:start="169:25" pos:end="169:27">len</name></expr></argument>,

                        <argument pos:start="171:25" pos:end="171:27"><expr pos:start="171:25" pos:end="171:27"><name pos:start="171:25" pos:end="171:27">src</name></expr></argument>

                        )</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="175:21" pos:end="175:30">goto <name pos:start="175:26" pos:end="175:29">exit</name>;</goto>

                </block_content>}</block></switch>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="183:13" pos:end="183:56"><expr pos:start="183:13" pos:end="183:55"><call pos:start="183:13" pos:end="183:55"><name pos:start="183:13" pos:end="183:20"><name pos:start="183:13" pos:end="183:14">hw</name><operator pos:start="183:15" pos:end="183:16">-&gt;</operator><name pos:start="183:17" pos:end="183:20">conv</name></name> <argument_list pos:start="183:22" pos:end="183:55">(<argument pos:start="183:23" pos:end="183:25"><expr pos:start="183:23" pos:end="183:25"><name pos:start="183:23" pos:end="183:25">dst</name></expr></argument>, <argument pos:start="183:28" pos:end="183:30"><expr pos:start="183:28" pos:end="183:30"><name pos:start="183:28" pos:end="183:30">src</name></expr></argument>, <argument pos:start="183:33" pos:end="183:37"><expr pos:start="183:33" pos:end="183:37"><name pos:start="183:33" pos:end="183:37">nread</name></expr></argument>, <argument pos:start="183:40" pos:end="183:54"><expr pos:start="183:40" pos:end="183:54"><operator pos:start="183:40" pos:end="183:40">&amp;</operator><name pos:start="183:41" pos:end="183:54">nominal_volume</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="187:13" pos:end="187:50"><expr pos:start="187:13" pos:end="187:49"><name pos:start="187:13" pos:end="187:15">src</name> <operator pos:start="187:17" pos:end="187:17">=</operator> <call pos:start="187:19" pos:end="187:49"><name pos:start="187:19" pos:end="187:25">advance</name> <argument_list pos:start="187:27" pos:end="187:49">(<argument pos:start="187:28" pos:end="187:30"><expr pos:start="187:28" pos:end="187:30"><name pos:start="187:28" pos:end="187:30">src</name></expr></argument>, <argument pos:start="187:33" pos:end="187:48"><expr pos:start="187:33" pos:end="187:48"><name pos:start="187:33" pos:end="187:37">nread</name> <operator pos:start="187:39" pos:end="187:40">&lt;&lt;</operator> <name pos:start="187:42" pos:end="187:48">hwshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:25"><expr pos:start="189:13" pos:end="189:24"><name pos:start="189:13" pos:end="189:15">dst</name> <operator pos:start="189:17" pos:end="189:18">+=</operator> <name pos:start="189:20" pos:end="189:24">nread</name></expr>;</expr_stmt>



            <expr_stmt pos:start="193:13" pos:end="193:34"><expr pos:start="193:13" pos:end="193:33"><name pos:start="193:13" pos:end="193:24">read_samples</name> <operator pos:start="193:26" pos:end="193:27">+=</operator> <name pos:start="193:29" pos:end="193:33">nread</name></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:25"><expr pos:start="195:13" pos:end="195:24"><name pos:start="195:13" pos:end="195:15">len</name> <operator pos:start="195:17" pos:end="195:18">-=</operator> <name pos:start="195:20" pos:end="195:24">nread</name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></for>



 <label pos:start="203:2" pos:end="203:6"><name pos:start="203:2" pos:end="203:5">exit</name>:</label>

    <expr_stmt pos:start="205:5" pos:end="205:55"><expr pos:start="205:5" pos:end="205:54"><name pos:start="205:5" pos:end="205:12"><name pos:start="205:5" pos:end="205:6">hw</name><operator pos:start="205:7" pos:end="205:8">-&gt;</operator><name pos:start="205:9" pos:end="205:12">wpos</name></name> <operator pos:start="205:14" pos:end="205:14">=</operator> <operator pos:start="205:16" pos:end="205:16">(</operator><name pos:start="205:17" pos:end="205:24"><name pos:start="205:17" pos:end="205:18">hw</name><operator pos:start="205:19" pos:end="205:20">-&gt;</operator><name pos:start="205:21" pos:end="205:24">wpos</name></name> <operator pos:start="205:26" pos:end="205:26">+</operator> <name pos:start="205:28" pos:end="205:39">read_samples</name><operator pos:start="205:40" pos:end="205:40">)</operator> <operator pos:start="205:42" pos:end="205:42">%</operator> <name pos:start="205:44" pos:end="205:54"><name pos:start="205:44" pos:end="205:45">hw</name><operator pos:start="205:46" pos:end="205:47">-&gt;</operator><name pos:start="205:48" pos:end="205:54">samples</name></name></expr>;</expr_stmt>

    <return pos:start="207:5" pos:end="207:24">return <expr pos:start="207:12" pos:end="207:23"><name pos:start="207:12" pos:end="207:23">read_samples</name></expr>;</return>

</block_content>}</block></function>
</unit>
