<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9046.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">bdrv_make_zero</name><parameter_list pos:start="1:19" pos:end="1:64">(<parameter pos:start="1:20" pos:end="1:39"><decl pos:start="1:20" pos:end="1:39"><type pos:start="1:20" pos:end="1:39"><name pos:start="1:20" pos:end="1:35">BlockDriverState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">bs</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:63"><decl pos:start="1:42" pos:end="1:63"><type pos:start="1:42" pos:end="1:63"><name pos:start="1:42" pos:end="1:57">BdrvRequestFlags</name></type> <name pos:start="1:59" pos:end="1:63">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:5">

    <decl_stmt pos:start="5:5" pos:end="5:60"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:26">target_sectors</name></decl>, <decl pos:start="5:29" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:29" pos:end="5:31">ret</name></decl>, <decl pos:start="5:34" pos:end="5:43"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:34" pos:end="5:43">nb_sectors</name></decl>, <decl pos:start="5:46" pos:end="5:59"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:46" pos:end="5:55">sector_num</name> <init pos:start="5:57" pos:end="5:59">= <expr pos:start="5:59" pos:end="5:59"><literal type="number" pos:start="5:59" pos:end="5:59">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:41"><expr pos:start="11:5" pos:end="11:40"><name pos:start="11:5" pos:end="11:18">target_sectors</name> <operator pos:start="11:20" pos:end="11:20">=</operator> <call pos:start="11:22" pos:end="11:40"><name pos:start="11:22" pos:end="11:36">bdrv_nb_sectors</name><argument_list pos:start="11:37" pos:end="11:40">(<argument pos:start="11:38" pos:end="11:39"><expr pos:start="11:38" pos:end="11:39"><name pos:start="11:38" pos:end="11:39">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:22">target_sectors</name> <operator pos:start="13:24" pos:end="13:24">&lt;</operator> <literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr>)</condition> <block pos:start="13:29" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:30">

        <return pos:start="15:9" pos:end="15:30">return <expr pos:start="15:16" pos:end="15:29"><name pos:start="15:16" pos:end="15:29">target_sectors</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="21:5" pos:end="71:5">for <control pos:start="21:9" pos:end="21:12">(<init pos:start="21:10" pos:end="21:10">;</init><condition pos:start="21:11" pos:end="21:11">;</condition><incr/>)</control> <block pos:start="21:14" pos:end="71:5">{<block_content pos:start="23:9" pos:end="69:24">

        <expr_stmt pos:start="23:9" pos:end="23:49"><expr pos:start="23:9" pos:end="23:48"><name pos:start="23:9" pos:end="23:18">nb_sectors</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:35">target_sectors</name> <operator pos:start="23:37" pos:end="23:37">-</operator> <name pos:start="23:39" pos:end="23:48">sector_num</name></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:28">(<expr pos:start="25:13" pos:end="25:27"><name pos:start="25:13" pos:end="25:22">nb_sectors</name> <operator pos:start="25:24" pos:end="25:25">&lt;=</operator> <literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr>)</condition> <block pos:start="25:30" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:21">

            <return pos:start="27:13" pos:end="27:21">return <expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:52">(<expr pos:start="31:13" pos:end="31:51"><name pos:start="31:13" pos:end="31:22">nb_sectors</name> <operator pos:start="31:24" pos:end="31:24">&gt;</operator> <name pos:start="31:26" pos:end="31:32">INT_MAX</name> <operator pos:start="31:34" pos:end="31:34">/</operator> <name pos:start="31:36" pos:end="31:51">BDRV_SECTOR_SIZE</name></expr>)</condition> <block pos:start="31:54" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:52">

            <expr_stmt pos:start="33:13" pos:end="33:52"><expr pos:start="33:13" pos:end="33:51"><name pos:start="33:13" pos:end="33:22">nb_sectors</name> <operator pos:start="33:24" pos:end="33:24">=</operator> <name pos:start="33:26" pos:end="33:32">INT_MAX</name> <operator pos:start="33:34" pos:end="33:34">/</operator> <name pos:start="33:36" pos:end="33:51">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:68"><expr pos:start="37:9" pos:end="37:67"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:67"><name pos:start="37:15" pos:end="37:35">bdrv_get_block_status</name><argument_list pos:start="37:36" pos:end="37:67">(<argument pos:start="37:37" pos:end="37:38"><expr pos:start="37:37" pos:end="37:38"><name pos:start="37:37" pos:end="37:38">bs</name></expr></argument>, <argument pos:start="37:41" pos:end="37:50"><expr pos:start="37:41" pos:end="37:50"><name pos:start="37:41" pos:end="37:50">sector_num</name></expr></argument>, <argument pos:start="37:53" pos:end="37:62"><expr pos:start="37:53" pos:end="37:62"><name pos:start="37:53" pos:end="37:62">nb_sectors</name></expr></argument>, <argument pos:start="37:65" pos:end="37:66"><expr pos:start="37:65" pos:end="37:66"><operator pos:start="37:65" pos:end="37:65">&amp;</operator><name pos:start="37:66" pos:end="37:66">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="47:9"><if pos:start="39:9" pos:end="47:9">if <condition pos:start="39:12" pos:end="39:20">(<expr pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">&lt;</operator> <literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>)</condition> <block pos:start="39:22" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:23">

            <expr_stmt pos:start="41:13" pos:end="43:53"><expr pos:start="41:13" pos:end="43:52"><call pos:start="41:13" pos:end="43:52"><name pos:start="41:13" pos:end="41:24">error_report</name><argument_list pos:start="41:25" pos:end="43:52">(<argument pos:start="41:26" pos:end="41:79"><expr pos:start="41:26" pos:end="41:79"><literal type="string" pos:start="41:26" pos:end="41:65">"error getting block status at sector %"</literal> <name pos:start="41:67" pos:end="41:72">PRId64</name> <literal type="string" pos:start="41:74" pos:end="41:79">": %s"</literal></expr></argument>,

                         <argument pos:start="43:26" pos:end="43:35"><expr pos:start="43:26" pos:end="43:35"><name pos:start="43:26" pos:end="43:35">sector_num</name></expr></argument>, <argument pos:start="43:38" pos:end="43:51"><expr pos:start="43:38" pos:end="43:51"><call pos:start="43:38" pos:end="43:51"><name pos:start="43:38" pos:end="43:45">strerror</name><argument_list pos:start="43:46" pos:end="43:51">(<argument pos:start="43:47" pos:end="43:50"><expr pos:start="43:47" pos:end="43:50"><operator pos:start="43:47" pos:end="43:47">-</operator><name pos:start="43:48" pos:end="43:50">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:23">return <expr pos:start="45:20" pos:end="45:22"><name pos:start="45:20" pos:end="45:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:34">(<expr pos:start="49:13" pos:end="49:33"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">&amp;</operator> <name pos:start="49:19" pos:end="49:33">BDRV_BLOCK_ZERO</name></expr>)</condition> <block pos:start="49:36" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:21">

            <expr_stmt pos:start="51:13" pos:end="51:28"><expr pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:22">sector_num</name> <operator pos:start="51:24" pos:end="51:25">+=</operator> <name pos:start="51:27" pos:end="51:27">n</name></expr>;</expr_stmt>

            <continue pos:start="53:13" pos:end="53:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:58"><expr pos:start="57:9" pos:end="57:57"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:57"><name pos:start="57:15" pos:end="57:31">bdrv_write_zeroes</name><argument_list pos:start="57:32" pos:end="57:57">(<argument pos:start="57:33" pos:end="57:34"><expr pos:start="57:33" pos:end="57:34"><name pos:start="57:33" pos:end="57:34">bs</name></expr></argument>, <argument pos:start="57:37" pos:end="57:46"><expr pos:start="57:37" pos:end="57:46"><name pos:start="57:37" pos:end="57:46">sector_num</name></expr></argument>, <argument pos:start="57:49" pos:end="57:49"><expr pos:start="57:49" pos:end="57:49"><name pos:start="57:49" pos:end="57:49">n</name></expr></argument>, <argument pos:start="57:52" pos:end="57:56"><expr pos:start="57:52" pos:end="57:56"><name pos:start="57:52" pos:end="57:56">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="67:9"><if pos:start="59:9" pos:end="67:9">if <condition pos:start="59:12" pos:end="59:20">(<expr pos:start="59:13" pos:end="59:19"><name pos:start="59:13" pos:end="59:15">ret</name> <operator pos:start="59:17" pos:end="59:17">&lt;</operator> <literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr>)</condition> <block pos:start="59:22" pos:end="67:9">{<block_content pos:start="61:13" pos:end="65:23">

            <expr_stmt pos:start="61:13" pos:end="63:53"><expr pos:start="61:13" pos:end="63:52"><call pos:start="61:13" pos:end="63:52"><name pos:start="61:13" pos:end="61:24">error_report</name><argument_list pos:start="61:25" pos:end="63:52">(<argument pos:start="61:26" pos:end="61:73"><expr pos:start="61:26" pos:end="61:73"><literal type="string" pos:start="61:26" pos:end="61:59">"error writing zeroes at sector %"</literal> <name pos:start="61:61" pos:end="61:66">PRId64</name> <literal type="string" pos:start="61:68" pos:end="61:73">": %s"</literal></expr></argument>,

                         <argument pos:start="63:26" pos:end="63:35"><expr pos:start="63:26" pos:end="63:35"><name pos:start="63:26" pos:end="63:35">sector_num</name></expr></argument>, <argument pos:start="63:38" pos:end="63:51"><expr pos:start="63:38" pos:end="63:51"><call pos:start="63:38" pos:end="63:51"><name pos:start="63:38" pos:end="63:45">strerror</name><argument_list pos:start="63:46" pos:end="63:51">(<argument pos:start="63:47" pos:end="63:50"><expr pos:start="63:47" pos:end="63:50"><operator pos:start="63:47" pos:end="63:47">-</operator><name pos:start="63:48" pos:end="63:50">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:23">return <expr pos:start="65:20" pos:end="65:22"><name pos:start="65:20" pos:end="65:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:24"><expr pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:18">sector_num</name> <operator pos:start="69:20" pos:end="69:21">+=</operator> <name pos:start="69:23" pos:end="69:23">n</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
