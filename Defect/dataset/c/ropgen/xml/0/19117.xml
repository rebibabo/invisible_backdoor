<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19117.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">vt82c686b_pm_realize</name><parameter_list pos:start="1:33" pos:end="1:62">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:42">PCIDevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">dev</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:54">Error</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier><modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:41">

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">VT686PMState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:55">= <expr pos:start="5:23" pos:end="5:55"><call pos:start="5:23" pos:end="5:55"><name pos:start="5:23" pos:end="5:31">DO_UPCAST</name><argument_list pos:start="5:32" pos:end="5:55">(<argument pos:start="5:33" pos:end="5:44"><expr pos:start="5:33" pos:end="5:44"><name pos:start="5:33" pos:end="5:44">VT686PMState</name></expr></argument>, <argument pos:start="5:47" pos:end="5:49"><expr pos:start="5:47" pos:end="5:49"><name pos:start="5:47" pos:end="5:49">dev</name></expr></argument>, <argument pos:start="5:52" pos:end="5:54"><expr pos:start="5:52" pos:end="5:54"><name pos:start="5:52" pos:end="5:54">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:21">pci_conf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:29"><expr pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:12">pci_conf</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:28"><name pos:start="11:16" pos:end="11:16">s</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:21">dev</name><operator pos:start="11:22" pos:end="11:22">.</operator><name pos:start="11:23" pos:end="11:28">config</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:44"><expr pos:start="13:5" pos:end="13:43"><call pos:start="13:5" pos:end="13:43"><name pos:start="13:5" pos:end="13:16">pci_set_word</name><argument_list pos:start="13:17" pos:end="13:43">(<argument pos:start="13:18" pos:end="13:39"><expr pos:start="13:18" pos:end="13:39"><name pos:start="13:18" pos:end="13:25">pci_conf</name> <operator pos:start="13:27" pos:end="13:27">+</operator> <name pos:start="13:29" pos:end="13:39">PCI_COMMAND</name></expr></argument>, <argument pos:start="13:42" pos:end="13:42"><expr pos:start="13:42" pos:end="13:42"><literal type="number" pos:start="13:42" pos:end="13:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="17:43"><expr pos:start="15:5" pos:end="17:42"><call pos:start="15:5" pos:end="17:42"><name pos:start="15:5" pos:end="15:16">pci_set_word</name><argument_list pos:start="15:17" pos:end="17:42">(<argument pos:start="15:18" pos:end="15:38"><expr pos:start="15:18" pos:end="15:38"><name pos:start="15:18" pos:end="15:25">pci_conf</name> <operator pos:start="15:27" pos:end="15:27">+</operator> <name pos:start="15:29" pos:end="15:38">PCI_STATUS</name></expr></argument>, <argument pos:start="15:41" pos:end="17:41"><expr pos:start="15:41" pos:end="17:41"><name pos:start="15:41" pos:end="15:60">PCI_STATUS_FAST_BACK</name> <operator pos:start="15:62" pos:end="15:62">|</operator>

                 <name pos:start="17:18" pos:end="17:41">PCI_STATUS_DEVSEL_MEDIUM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:48">/* 0x48-0x4B is Power Management I/O Base */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:46"><expr pos:start="23:5" pos:end="23:45"><call pos:start="23:5" pos:end="23:45"><name pos:start="23:5" pos:end="23:16">pci_set_long</name><argument_list pos:start="23:17" pos:end="23:45">(<argument pos:start="23:18" pos:end="23:32"><expr pos:start="23:18" pos:end="23:32"><name pos:start="23:18" pos:end="23:25">pci_conf</name> <operator pos:start="23:27" pos:end="23:27">+</operator> <literal type="number" pos:start="23:29" pos:end="23:32">0x48</literal></expr></argument>, <argument pos:start="23:35" pos:end="23:44"><expr pos:start="23:35" pos:end="23:44"><literal type="number" pos:start="23:35" pos:end="23:44">0x00000001</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:33">/* SMB ports:0xeee0~0xeeef */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:54"><expr pos:start="29:5" pos:end="29:53"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:18">smb_io_base</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator><operator pos:start="29:21" pos:end="29:21">(</operator><operator pos:start="29:22" pos:end="29:22">(</operator><name pos:start="29:23" pos:end="29:36"><name pos:start="29:23" pos:end="29:23">s</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:36">smb_io_base</name></name> <operator pos:start="29:38" pos:end="29:38">&amp;</operator> <literal type="number" pos:start="29:40" pos:end="29:45">0xfff0</literal><operator pos:start="29:46" pos:end="29:46">)</operator> <operator pos:start="29:48" pos:end="29:48">+</operator> <literal type="number" pos:start="29:50" pos:end="29:52">0x0</literal><operator pos:start="29:53" pos:end="29:53">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:40"><expr pos:start="31:5" pos:end="31:39"><name pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:12">pci_conf</name><index pos:start="31:13" pos:end="31:18">[<expr pos:start="31:14" pos:end="31:17"><literal type="number" pos:start="31:14" pos:end="31:17">0x90</literal></expr>]</index></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:35"><name pos:start="31:22" pos:end="31:22">s</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:35">smb_io_base</name></name> <operator pos:start="31:37" pos:end="31:37">|</operator> <literal type="number" pos:start="31:39" pos:end="31:39">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:12">pci_conf</name><index pos:start="33:13" pos:end="33:18">[<expr pos:start="33:14" pos:end="33:17"><literal type="number" pos:start="33:14" pos:end="33:17">0x91</literal></expr>]</index></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:35"><name pos:start="33:22" pos:end="33:22">s</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:35">smb_io_base</name></name> <operator pos:start="33:37" pos:end="33:38">&gt;&gt;</operator> <literal type="number" pos:start="33:40" pos:end="33:40">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:12">pci_conf</name><index pos:start="35:13" pos:end="35:18">[<expr pos:start="35:14" pos:end="35:17"><literal type="number" pos:start="35:14" pos:end="35:17">0xd2</literal></expr>]</index></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <literal type="number" pos:start="35:22" pos:end="35:25">0x90</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><call pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:17">pm_smbus_init</name><argument_list pos:start="37:18" pos:end="37:40">(<argument pos:start="37:19" pos:end="37:30"><expr pos:start="37:19" pos:end="37:30"><operator pos:start="37:19" pos:end="37:19">&amp;</operator><name pos:start="37:20" pos:end="37:30"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:25">dev</name><operator pos:start="37:26" pos:end="37:26">.</operator><name pos:start="37:27" pos:end="37:30">qdev</name></name></expr></argument>, <argument pos:start="37:33" pos:end="37:39"><expr pos:start="37:33" pos:end="37:39"><operator pos:start="37:33" pos:end="37:33">&amp;</operator><name pos:start="37:34" pos:end="37:39"><name pos:start="37:34" pos:end="37:34">s</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:39">smb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:77"><expr pos:start="39:5" pos:end="39:76"><call pos:start="39:5" pos:end="39:76"><name pos:start="39:5" pos:end="39:31">memory_region_add_subregion</name><argument_list pos:start="39:32" pos:end="39:76">(<argument pos:start="39:33" pos:end="39:47"><expr pos:start="39:33" pos:end="39:47"><call pos:start="39:33" pos:end="39:47"><name pos:start="39:33" pos:end="39:45">get_system_io</name><argument_list pos:start="39:46" pos:end="39:47">()</argument_list></call></expr></argument>, <argument pos:start="39:50" pos:end="39:63"><expr pos:start="39:50" pos:end="39:63"><name pos:start="39:50" pos:end="39:63"><name pos:start="39:50" pos:end="39:50">s</name><operator pos:start="39:51" pos:end="39:52">-&gt;</operator><name pos:start="39:53" pos:end="39:63">smb_io_base</name></name></expr></argument>, <argument pos:start="39:66" pos:end="39:75"><expr pos:start="39:66" pos:end="39:75"><operator pos:start="39:66" pos:end="39:66">&amp;</operator><name pos:start="39:67" pos:end="39:75"><name pos:start="39:67" pos:end="39:67">s</name><operator pos:start="39:68" pos:end="39:69">-&gt;</operator><name pos:start="39:70" pos:end="39:72">smb</name><operator pos:start="39:73" pos:end="39:73">.</operator><name pos:start="39:74" pos:end="39:75">io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:36"><expr pos:start="43:5" pos:end="43:35"><call pos:start="43:5" pos:end="43:35"><name pos:start="43:5" pos:end="43:12">apm_init</name><argument_list pos:start="43:13" pos:end="43:35">(<argument pos:start="43:14" pos:end="43:16"><expr pos:start="43:14" pos:end="43:16"><name pos:start="43:14" pos:end="43:16">dev</name></expr></argument>, <argument pos:start="43:19" pos:end="43:25"><expr pos:start="43:19" pos:end="43:25"><operator pos:start="43:19" pos:end="43:19">&amp;</operator><name pos:start="43:20" pos:end="43:25"><name pos:start="43:20" pos:end="43:20">s</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:25">apm</name></name></expr></argument>, <argument pos:start="43:28" pos:end="43:31"><expr pos:start="43:28" pos:end="43:31"><name pos:start="43:28" pos:end="43:31">NULL</name></expr></argument>, <argument pos:start="43:34" pos:end="43:34"><expr pos:start="43:34" pos:end="43:34"><name pos:start="43:34" pos:end="43:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:63"><expr pos:start="47:5" pos:end="47:62"><call pos:start="47:5" pos:end="47:62"><name pos:start="47:5" pos:end="47:22">memory_region_init</name><argument_list pos:start="47:23" pos:end="47:62">(<argument pos:start="47:24" pos:end="47:29"><expr pos:start="47:24" pos:end="47:29"><operator pos:start="47:24" pos:end="47:24">&amp;</operator><name pos:start="47:25" pos:end="47:29"><name pos:start="47:25" pos:end="47:25">s</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:29">io</name></name></expr></argument>, <argument pos:start="47:32" pos:end="47:42"><expr pos:start="47:32" pos:end="47:42"><call pos:start="47:32" pos:end="47:42"><name pos:start="47:32" pos:end="47:37">OBJECT</name><argument_list pos:start="47:38" pos:end="47:42">(<argument pos:start="47:39" pos:end="47:41"><expr pos:start="47:39" pos:end="47:41"><name pos:start="47:39" pos:end="47:41">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:45" pos:end="47:57"><expr pos:start="47:45" pos:end="47:57"><literal type="string" pos:start="47:45" pos:end="47:57">"vt82c686-pm"</literal></expr></argument>, <argument pos:start="47:60" pos:end="47:61"><expr pos:start="47:60" pos:end="47:61"><literal type="number" pos:start="47:60" pos:end="47:61">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><call pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:29">memory_region_set_enabled</name><argument_list pos:start="49:30" pos:end="49:44">(<argument pos:start="49:31" pos:end="49:36"><expr pos:start="49:31" pos:end="49:36"><operator pos:start="49:31" pos:end="49:31">&amp;</operator><name pos:start="49:32" pos:end="49:36"><name pos:start="49:32" pos:end="49:32">s</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:36">io</name></name></expr></argument>, <argument pos:start="49:39" pos:end="49:43"><expr pos:start="49:39" pos:end="49:43"><name pos:start="49:39" pos:end="49:43">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:60"><expr pos:start="51:5" pos:end="51:59"><call pos:start="51:5" pos:end="51:59"><name pos:start="51:5" pos:end="51:31">memory_region_add_subregion</name><argument_list pos:start="51:32" pos:end="51:59">(<argument pos:start="51:33" pos:end="51:47"><expr pos:start="51:33" pos:end="51:47"><call pos:start="51:33" pos:end="51:47"><name pos:start="51:33" pos:end="51:45">get_system_io</name><argument_list pos:start="51:46" pos:end="51:47">()</argument_list></call></expr></argument>, <argument pos:start="51:50" pos:end="51:50"><expr pos:start="51:50" pos:end="51:50"><literal type="number" pos:start="51:50" pos:end="51:50">0</literal></expr></argument>, <argument pos:start="51:53" pos:end="51:58"><expr pos:start="51:53" pos:end="51:58"><operator pos:start="51:53" pos:end="51:53">&amp;</operator><name pos:start="51:54" pos:end="51:58"><name pos:start="51:54" pos:end="51:54">s</name><operator pos:start="51:55" pos:end="51:56">-&gt;</operator><name pos:start="51:57" pos:end="51:58">io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:51"><expr pos:start="55:5" pos:end="55:50"><call pos:start="55:5" pos:end="55:50"><name pos:start="55:5" pos:end="55:20">acpi_pm_tmr_init</name><argument_list pos:start="55:21" pos:end="55:50">(<argument pos:start="55:22" pos:end="55:27"><expr pos:start="55:22" pos:end="55:27"><operator pos:start="55:22" pos:end="55:22">&amp;</operator><name pos:start="55:23" pos:end="55:27"><name pos:start="55:23" pos:end="55:23">s</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:27">ar</name></name></expr></argument>, <argument pos:start="55:30" pos:end="55:41"><expr pos:start="55:30" pos:end="55:41"><name pos:start="55:30" pos:end="55:41">pm_tmr_timer</name></expr></argument>, <argument pos:start="55:44" pos:end="55:49"><expr pos:start="55:44" pos:end="55:49"><operator pos:start="55:44" pos:end="55:44">&amp;</operator><name pos:start="55:45" pos:end="55:49"><name pos:start="55:45" pos:end="55:45">s</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:49">io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:52"><expr pos:start="57:5" pos:end="57:51"><call pos:start="57:5" pos:end="57:51"><name pos:start="57:5" pos:end="57:21">acpi_pm1_evt_init</name><argument_list pos:start="57:22" pos:end="57:51">(<argument pos:start="57:23" pos:end="57:28"><expr pos:start="57:23" pos:end="57:28"><operator pos:start="57:23" pos:end="57:23">&amp;</operator><name pos:start="57:24" pos:end="57:28"><name pos:start="57:24" pos:end="57:24">s</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:28">ar</name></name></expr></argument>, <argument pos:start="57:31" pos:end="57:42"><expr pos:start="57:31" pos:end="57:42"><name pos:start="57:31" pos:end="57:42">pm_tmr_timer</name></expr></argument>, <argument pos:start="57:45" pos:end="57:50"><expr pos:start="57:45" pos:end="57:50"><operator pos:start="57:45" pos:end="57:45">&amp;</operator><name pos:start="57:46" pos:end="57:50"><name pos:start="57:46" pos:end="57:46">s</name><operator pos:start="57:47" pos:end="57:48">-&gt;</operator><name pos:start="57:49" pos:end="57:50">io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:41"><expr pos:start="59:5" pos:end="59:40"><call pos:start="59:5" pos:end="59:40"><name pos:start="59:5" pos:end="59:21">acpi_pm1_cnt_init</name><argument_list pos:start="59:22" pos:end="59:40">(<argument pos:start="59:23" pos:end="59:28"><expr pos:start="59:23" pos:end="59:28"><operator pos:start="59:23" pos:end="59:23">&amp;</operator><name pos:start="59:24" pos:end="59:28"><name pos:start="59:24" pos:end="59:24">s</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:28">ar</name></name></expr></argument>, <argument pos:start="59:31" pos:end="59:36"><expr pos:start="59:31" pos:end="59:36"><operator pos:start="59:31" pos:end="59:31">&amp;</operator><name pos:start="59:32" pos:end="59:36"><name pos:start="59:32" pos:end="59:32">s</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:36">io</name></name></expr></argument>, <argument pos:start="59:39" pos:end="59:39"><expr pos:start="59:39" pos:end="59:39"><literal type="number" pos:start="59:39" pos:end="59:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
