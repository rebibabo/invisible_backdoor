<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26077.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">read_old_huffman_tables</name><parameter_list pos:start="1:35" pos:end="1:50">(<parameter pos:start="1:36" pos:end="1:49"><decl pos:start="1:36" pos:end="1:49"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:46">HYuvContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:13">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:17">GetBitContext</name></type> <name pos:start="5:19" pos:end="5:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="13:53"><expr pos:start="11:5" pos:end="13:52"><call pos:start="11:5" pos:end="13:52"><name pos:start="11:5" pos:end="11:17">init_get_bits</name><argument_list pos:start="11:18" pos:end="13:52">(<argument pos:start="11:19" pos:end="11:21"><expr pos:start="11:19" pos:end="11:21"><operator pos:start="11:19" pos:end="11:19">&amp;</operator><name pos:start="11:20" pos:end="11:21">gb</name></expr></argument>, <argument pos:start="11:24" pos:end="11:41"><expr pos:start="11:24" pos:end="11:41"><name pos:start="11:24" pos:end="11:41">classic_shift_luma</name></expr></argument>,

                  <argument pos:start="13:19" pos:end="13:51"><expr pos:start="13:19" pos:end="13:51"><name pos:start="13:19" pos:end="13:47">classic_shift_luma_table_size</name> <operator pos:start="13:49" pos:end="13:49">*</operator> <literal type="number" pos:start="13:51" pos:end="13:51">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if <condition pos:start="15:8" pos:end="15:43">(<expr pos:start="15:9" pos:end="15:42"><call pos:start="15:9" pos:end="15:38"><name pos:start="15:9" pos:end="15:22">read_len_table</name><argument_list pos:start="15:23" pos:end="15:38">(<argument pos:start="15:24" pos:end="15:32"><expr pos:start="15:24" pos:end="15:32"><name pos:start="15:24" pos:end="15:32"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:29">len</name><index pos:start="15:30" pos:end="15:32">[<expr pos:start="15:31" pos:end="15:31"><literal type="number" pos:start="15:31" pos:end="15:31">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="15:35" pos:end="15:37"><expr pos:start="15:35" pos:end="15:37"><operator pos:start="15:35" pos:end="15:35">&amp;</operator><name pos:start="15:36" pos:end="15:37">gb</name></expr></argument>)</argument_list></call> <operator pos:start="15:40" pos:end="15:40">&lt;</operator> <literal type="number" pos:start="15:42" pos:end="15:42">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="23:55"><expr pos:start="21:5" pos:end="23:54"><call pos:start="21:5" pos:end="23:54"><name pos:start="21:5" pos:end="21:17">init_get_bits</name><argument_list pos:start="21:18" pos:end="23:54">(<argument pos:start="21:19" pos:end="21:21"><expr pos:start="21:19" pos:end="21:21"><operator pos:start="21:19" pos:end="21:19">&amp;</operator><name pos:start="21:20" pos:end="21:21">gb</name></expr></argument>, <argument pos:start="21:24" pos:end="21:43"><expr pos:start="21:24" pos:end="21:43"><name pos:start="21:24" pos:end="21:43">classic_shift_chroma</name></expr></argument>,

                  <argument pos:start="23:19" pos:end="23:53"><expr pos:start="23:19" pos:end="23:53"><name pos:start="23:19" pos:end="23:49">classic_shift_chroma_table_size</name> <operator pos:start="23:51" pos:end="23:51">*</operator> <literal type="number" pos:start="23:53" pos:end="23:53">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:18"><if pos:start="25:5" pos:end="27:18">if <condition pos:start="25:8" pos:end="25:43">(<expr pos:start="25:9" pos:end="25:42"><call pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:22">read_len_table</name><argument_list pos:start="25:23" pos:end="25:38">(<argument pos:start="25:24" pos:end="25:32"><expr pos:start="25:24" pos:end="25:32"><name pos:start="25:24" pos:end="25:32"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:29">len</name><index pos:start="25:30" pos:end="25:32">[<expr pos:start="25:31" pos:end="25:31"><literal type="number" pos:start="25:31" pos:end="25:31">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:35" pos:end="25:37"><expr pos:start="25:35" pos:end="25:37"><operator pos:start="25:35" pos:end="25:35">&amp;</operator><name pos:start="25:36" pos:end="25:37">gb</name></expr></argument>)</argument_list></call> <operator pos:start="25:40" pos:end="25:40">&lt;</operator> <literal type="number" pos:start="25:42" pos:end="25:42">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="31:5" pos:end="31:63">for<control pos:start="31:8" pos:end="31:24">(<init pos:start="31:9" pos:end="31:12"><expr pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:9">i</name><operator pos:start="31:10" pos:end="31:10">=</operator><literal type="number" pos:start="31:11" pos:end="31:11">0</literal></expr>;</init> <condition pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">i</name><operator pos:start="31:15" pos:end="31:15">&lt;</operator><literal type="number" pos:start="31:16" pos:end="31:18">256</literal></expr>;</condition> <incr pos:start="31:21" pos:end="31:23"><expr pos:start="31:21" pos:end="31:23"><name pos:start="31:21" pos:end="31:21">i</name><operator pos:start="31:22" pos:end="31:23">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:26" pos:end="31:63"><block_content pos:start="31:26" pos:end="31:63"> <expr_stmt pos:start="31:26" pos:end="31:63"><expr pos:start="31:26" pos:end="31:62"><name pos:start="31:26" pos:end="31:38"><name pos:start="31:26" pos:end="31:26">s</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:32">bits</name><index pos:start="31:33" pos:end="31:35">[<expr pos:start="31:34" pos:end="31:34"><literal type="number" pos:start="31:34" pos:end="31:34">0</literal></expr>]</index><index pos:start="31:36" pos:end="31:38">[<expr pos:start="31:37" pos:end="31:37"><name pos:start="31:37" pos:end="31:37">i</name></expr>]</index></name> <operator pos:start="31:40" pos:end="31:40">=</operator> <name pos:start="31:42" pos:end="31:62"><name pos:start="31:42" pos:end="31:57">classic_add_luma</name>  <index pos:start="31:60" pos:end="31:62">[<expr pos:start="31:61" pos:end="31:61"><name pos:start="31:61" pos:end="31:61">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="33:5" pos:end="33:63">for<control pos:start="33:8" pos:end="33:24">(<init pos:start="33:9" pos:end="33:12"><expr pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:9">i</name><operator pos:start="33:10" pos:end="33:10">=</operator><literal type="number" pos:start="33:11" pos:end="33:11">0</literal></expr>;</init> <condition pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">i</name><operator pos:start="33:15" pos:end="33:15">&lt;</operator><literal type="number" pos:start="33:16" pos:end="33:18">256</literal></expr>;</condition> <incr pos:start="33:21" pos:end="33:23"><expr pos:start="33:21" pos:end="33:23"><name pos:start="33:21" pos:end="33:21">i</name><operator pos:start="33:22" pos:end="33:23">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:26" pos:end="33:63"><block_content pos:start="33:26" pos:end="33:63"> <expr_stmt pos:start="33:26" pos:end="33:63"><expr pos:start="33:26" pos:end="33:62"><name pos:start="33:26" pos:end="33:38"><name pos:start="33:26" pos:end="33:26">s</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:32">bits</name><index pos:start="33:33" pos:end="33:35">[<expr pos:start="33:34" pos:end="33:34"><literal type="number" pos:start="33:34" pos:end="33:34">1</literal></expr>]</index><index pos:start="33:36" pos:end="33:38">[<expr pos:start="33:37" pos:end="33:37"><name pos:start="33:37" pos:end="33:37">i</name></expr>]</index></name> <operator pos:start="33:40" pos:end="33:40">=</operator> <name pos:start="33:42" pos:end="33:62"><name pos:start="33:42" pos:end="33:59">classic_add_chroma</name><index pos:start="33:60" pos:end="33:62">[<expr pos:start="33:61" pos:end="33:61"><name pos:start="33:61" pos:end="33:61">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:31">(<expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:24">bitstream_bpp</name></name> <operator pos:start="37:26" pos:end="37:27">&gt;=</operator> <literal type="number" pos:start="37:29" pos:end="37:30">24</literal></expr>)</condition> <block pos:start="37:33" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:62">

        <expr_stmt pos:start="39:9" pos:end="39:63"><expr pos:start="39:9" pos:end="39:62"><call pos:start="39:9" pos:end="39:62"><name pos:start="39:9" pos:end="39:14">memcpy</name><argument_list pos:start="39:15" pos:end="39:62">(<argument pos:start="39:16" pos:end="39:25"><expr pos:start="39:16" pos:end="39:25"><name pos:start="39:16" pos:end="39:25"><name pos:start="39:16" pos:end="39:16">s</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:22">bits</name><index pos:start="39:23" pos:end="39:25">[<expr pos:start="39:24" pos:end="39:24"><literal type="number" pos:start="39:24" pos:end="39:24">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="39:28" pos:end="39:37"><expr pos:start="39:28" pos:end="39:37"><name pos:start="39:28" pos:end="39:37"><name pos:start="39:28" pos:end="39:28">s</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:34">bits</name><index pos:start="39:35" pos:end="39:37">[<expr pos:start="39:36" pos:end="39:36"><literal type="number" pos:start="39:36" pos:end="39:36">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="39:40" pos:end="39:61"><expr pos:start="39:40" pos:end="39:61"><literal type="number" pos:start="39:40" pos:end="39:42">256</literal> <operator pos:start="39:44" pos:end="39:44">*</operator> <sizeof pos:start="39:46" pos:end="39:61">sizeof<argument_list pos:start="39:52" pos:end="39:61">(<argument pos:start="39:53" pos:end="39:60"><expr pos:start="39:53" pos:end="39:60"><name pos:start="39:53" pos:end="39:60">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:62"><expr pos:start="41:9" pos:end="41:61"><call pos:start="41:9" pos:end="41:61"><name pos:start="41:9" pos:end="41:14">memcpy</name><argument_list pos:start="41:15" pos:end="41:61">(<argument pos:start="41:16" pos:end="41:24"><expr pos:start="41:16" pos:end="41:24"><name pos:start="41:16" pos:end="41:24"><name pos:start="41:16" pos:end="41:16">s</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:21">len</name><index pos:start="41:22" pos:end="41:24">[<expr pos:start="41:23" pos:end="41:23"><literal type="number" pos:start="41:23" pos:end="41:23">1</literal></expr>]</index></name></expr></argument> , <argument pos:start="41:28" pos:end="41:37"><expr pos:start="41:28" pos:end="41:37"><name pos:start="41:28" pos:end="41:37"><name pos:start="41:28" pos:end="41:28">s</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:33">len</name> <index pos:start="41:35" pos:end="41:37">[<expr pos:start="41:36" pos:end="41:36"><literal type="number" pos:start="41:36" pos:end="41:36">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="41:40" pos:end="41:60"><expr pos:start="41:40" pos:end="41:60"><literal type="number" pos:start="41:40" pos:end="41:42">256</literal> <operator pos:start="41:44" pos:end="41:44">*</operator> <sizeof pos:start="41:46" pos:end="41:60">sizeof<argument_list pos:start="41:52" pos:end="41:60">(<argument pos:start="41:53" pos:end="41:59"><expr pos:start="41:53" pos:end="41:59"><name pos:start="41:53" pos:end="41:59">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:59"><expr pos:start="45:5" pos:end="45:58"><call pos:start="45:5" pos:end="45:58"><name pos:start="45:5" pos:end="45:10">memcpy</name><argument_list pos:start="45:11" pos:end="45:58">(<argument pos:start="45:12" pos:end="45:21"><expr pos:start="45:12" pos:end="45:21"><name pos:start="45:12" pos:end="45:21"><name pos:start="45:12" pos:end="45:12">s</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:18">bits</name><index pos:start="45:19" pos:end="45:21">[<expr pos:start="45:20" pos:end="45:20"><literal type="number" pos:start="45:20" pos:end="45:20">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:24" pos:end="45:33"><expr pos:start="45:24" pos:end="45:33"><name pos:start="45:24" pos:end="45:33"><name pos:start="45:24" pos:end="45:24">s</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:30">bits</name><index pos:start="45:31" pos:end="45:33">[<expr pos:start="45:32" pos:end="45:32"><literal type="number" pos:start="45:32" pos:end="45:32">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:36" pos:end="45:57"><expr pos:start="45:36" pos:end="45:57"><literal type="number" pos:start="45:36" pos:end="45:38">256</literal> <operator pos:start="45:40" pos:end="45:40">*</operator> <sizeof pos:start="45:42" pos:end="45:57">sizeof<argument_list pos:start="45:48" pos:end="45:57">(<argument pos:start="45:49" pos:end="45:56"><expr pos:start="45:49" pos:end="45:56"><name pos:start="45:49" pos:end="45:56">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:58"><expr pos:start="47:5" pos:end="47:57"><call pos:start="47:5" pos:end="47:57"><name pos:start="47:5" pos:end="47:10">memcpy</name><argument_list pos:start="47:11" pos:end="47:57">(<argument pos:start="47:12" pos:end="47:20"><expr pos:start="47:12" pos:end="47:20"><name pos:start="47:12" pos:end="47:20"><name pos:start="47:12" pos:end="47:12">s</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:17">len</name><index pos:start="47:18" pos:end="47:20">[<expr pos:start="47:19" pos:end="47:19"><literal type="number" pos:start="47:19" pos:end="47:19">2</literal></expr>]</index></name></expr></argument> , <argument pos:start="47:24" pos:end="47:33"><expr pos:start="47:24" pos:end="47:33"><name pos:start="47:24" pos:end="47:33"><name pos:start="47:24" pos:end="47:24">s</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:29">len</name> <index pos:start="47:31" pos:end="47:33">[<expr pos:start="47:32" pos:end="47:32"><literal type="number" pos:start="47:32" pos:end="47:32">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="47:36" pos:end="47:56"><expr pos:start="47:36" pos:end="47:56"><literal type="number" pos:start="47:36" pos:end="47:38">256</literal> <operator pos:start="47:40" pos:end="47:40">*</operator> <sizeof pos:start="47:42" pos:end="47:56">sizeof<argument_list pos:start="47:48" pos:end="47:56">(<argument pos:start="47:49" pos:end="47:55"><expr pos:start="47:49" pos:end="47:55"><name pos:start="47:49" pos:end="47:55">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="51:5" pos:end="59:5">for <control pos:start="51:9" pos:end="51:27">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:22"><expr pos:start="51:17" pos:end="51:21"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <literal type="number" pos:start="51:21" pos:end="51:21">3</literal></expr>;</condition> <incr pos:start="51:24" pos:end="51:26"><expr pos:start="51:24" pos:end="51:26"><name pos:start="51:24" pos:end="51:24">i</name><operator pos:start="51:25" pos:end="51:26">++</operator></expr></incr>)</control> <block pos:start="51:29" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:38">

        <expr_stmt pos:start="53:9" pos:end="53:32"><expr pos:start="53:9" pos:end="53:31"><call pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:19">ff_free_vlc</name><argument_list pos:start="53:20" pos:end="53:31">(<argument pos:start="53:21" pos:end="53:30"><expr pos:start="53:21" pos:end="53:30"><operator pos:start="53:21" pos:end="53:21">&amp;</operator><name pos:start="53:22" pos:end="53:30"><name pos:start="53:22" pos:end="53:22">s</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:27">vlc</name><index pos:start="53:28" pos:end="53:30">[<expr pos:start="53:29" pos:end="53:29"><name pos:start="53:29" pos:end="53:29">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="57:38"><expr pos:start="55:9" pos:end="57:37"><call pos:start="55:9" pos:end="57:37"><name pos:start="55:9" pos:end="55:16">init_vlc</name><argument_list pos:start="55:17" pos:end="57:37">(<argument pos:start="55:18" pos:end="55:27"><expr pos:start="55:18" pos:end="55:27"><operator pos:start="55:18" pos:end="55:18">&amp;</operator><name pos:start="55:19" pos:end="55:27"><name pos:start="55:19" pos:end="55:19">s</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:24">vlc</name><index pos:start="55:25" pos:end="55:27">[<expr pos:start="55:26" pos:end="55:26"><name pos:start="55:26" pos:end="55:26">i</name></expr>]</index></name></expr></argument>, <argument pos:start="55:30" pos:end="55:37"><expr pos:start="55:30" pos:end="55:37"><name pos:start="55:30" pos:end="55:37">VLC_BITS</name></expr></argument>, <argument pos:start="55:40" pos:end="55:42"><expr pos:start="55:40" pos:end="55:42"><literal type="number" pos:start="55:40" pos:end="55:42">256</literal></expr></argument>, <argument pos:start="55:45" pos:end="55:53"><expr pos:start="55:45" pos:end="55:53"><name pos:start="55:45" pos:end="55:53"><name pos:start="55:45" pos:end="55:45">s</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:50">len</name><index pos:start="55:51" pos:end="55:53">[<expr pos:start="55:52" pos:end="55:52"><name pos:start="55:52" pos:end="55:52">i</name></expr>]</index></name></expr></argument>, <argument pos:start="55:56" pos:end="55:56"><expr pos:start="55:56" pos:end="55:56"><literal type="number" pos:start="55:56" pos:end="55:56">1</literal></expr></argument>, <argument pos:start="55:59" pos:end="55:59"><expr pos:start="55:59" pos:end="55:59"><literal type="number" pos:start="55:59" pos:end="55:59">1</literal></expr></argument>,

                 <argument pos:start="57:18" pos:end="57:27"><expr pos:start="57:18" pos:end="57:27"><name pos:start="57:18" pos:end="57:27"><name pos:start="57:18" pos:end="57:18">s</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:24">bits</name><index pos:start="57:25" pos:end="57:27">[<expr pos:start="57:26" pos:end="57:26"><name pos:start="57:26" pos:end="57:26">i</name></expr>]</index></name></expr></argument>, <argument pos:start="57:30" pos:end="57:30"><expr pos:start="57:30" pos:end="57:30"><literal type="number" pos:start="57:30" pos:end="57:30">4</literal></expr></argument>, <argument pos:start="57:33" pos:end="57:33"><expr pos:start="57:33" pos:end="57:33"><literal type="number" pos:start="57:33" pos:end="57:33">4</literal></expr></argument>, <argument pos:start="57:36" pos:end="57:36"><expr pos:start="57:36" pos:end="57:36"><literal type="number" pos:start="57:36" pos:end="57:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="63:5" pos:end="63:29"><expr pos:start="63:5" pos:end="63:28"><call pos:start="63:5" pos:end="63:28"><name pos:start="63:5" pos:end="63:25">generate_joint_tables</name><argument_list pos:start="63:26" pos:end="63:28">(<argument pos:start="63:27" pos:end="63:27"><expr pos:start="63:27" pos:end="63:27"><name pos:start="63:27" pos:end="63:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
