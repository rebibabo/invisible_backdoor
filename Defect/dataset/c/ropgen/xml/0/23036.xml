<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23036.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">open_input_stream</name><parameter_list pos:start="1:29" pos:end="1:62">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:40">HTTPContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">c</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">info</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="147:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:17"><name pos:start="5:10" pos:end="5:12">buf</name><index pos:start="5:13" pos:end="5:17">[<expr pos:start="5:14" pos:end="5:16"><literal type="number" pos:start="5:14" pos:end="5:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:29"><name pos:start="7:10" pos:end="7:23">input_filename</name><index pos:start="7:24" pos:end="7:29">[<expr pos:start="7:25" pos:end="7:28"><literal type="number" pos:start="7:25" pos:end="7:28">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">AVFormatContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:22">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name></decl>, <decl pos:start="11:19" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:19">i</name></decl>, <decl pos:start="11:22" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:24">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:22">stream_pos</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:24">/* find file name */</comment>

    <if_stmt pos:start="19:5" pos:end="65:5"><if pos:start="19:5" pos:end="45:5">if <condition pos:start="19:8" pos:end="19:24">(<expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:9">c</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:17">stream</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:23">feed</name></name></expr>)</condition> <block pos:start="19:26" pos:end="45:5">{<block_content pos:start="21:9" pos:end="43:77">

        <expr_stmt pos:start="21:9" pos:end="21:63"><expr pos:start="21:9" pos:end="21:62"><call pos:start="21:9" pos:end="21:62"><name pos:start="21:9" pos:end="21:14">strcpy</name><argument_list pos:start="21:15" pos:end="21:62">(<argument pos:start="21:16" pos:end="21:29"><expr pos:start="21:16" pos:end="21:29"><name pos:start="21:16" pos:end="21:29">input_filename</name></expr></argument>, <argument pos:start="21:32" pos:end="21:61"><expr pos:start="21:32" pos:end="21:61"><name pos:start="21:32" pos:end="21:61"><name pos:start="21:32" pos:end="21:32">c</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:40">stream</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:46">feed</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:61">feed_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:35"><expr pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:16">buf_size</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:34">FFM_PACKET_SIZE</name></expr>;</expr_stmt>

        <comment type="block" pos:start="25:9" pos:end="25:46">/* compute position (absolute time) */</comment>

        <if_stmt pos:start="27:9" pos:end="43:77"><if pos:start="27:9" pos:end="35:9">if <condition pos:start="27:12" pos:end="27:58">(<expr pos:start="27:13" pos:end="27:57"><call pos:start="27:13" pos:end="27:57"><name pos:start="27:13" pos:end="27:25">find_info_tag</name><argument_list pos:start="27:26" pos:end="27:57">(<argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><name pos:start="27:27" pos:end="27:29">buf</name></expr></argument>, <argument pos:start="27:32" pos:end="27:42"><expr pos:start="27:32" pos:end="27:42"><sizeof pos:start="27:32" pos:end="27:42">sizeof<argument_list pos:start="27:38" pos:end="27:42">(<argument pos:start="27:39" pos:end="27:41"><expr pos:start="27:39" pos:end="27:41"><name pos:start="27:39" pos:end="27:41">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:45" pos:end="27:50"><expr pos:start="27:45" pos:end="27:50"><literal type="string" pos:start="27:45" pos:end="27:50">"date"</literal></expr></argument>, <argument pos:start="27:53" pos:end="27:56"><expr pos:start="27:53" pos:end="27:56"><name pos:start="27:53" pos:end="27:56">info</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:60" pos:end="35:9">{<block_content pos:start="29:13" pos:end="33:26">

            <expr_stmt pos:start="29:13" pos:end="29:44"><expr pos:start="29:13" pos:end="29:43"><name pos:start="29:13" pos:end="29:22">stream_pos</name> <operator pos:start="29:24" pos:end="29:24">=</operator> <call pos:start="29:26" pos:end="29:43"><name pos:start="29:26" pos:end="29:35">parse_date</name><argument_list pos:start="29:36" pos:end="29:43">(<argument pos:start="29:37" pos:end="29:39"><expr pos:start="29:37" pos:end="29:39"><name pos:start="29:37" pos:end="29:39">buf</name></expr></argument>, <argument pos:start="29:42" pos:end="29:42"><expr pos:start="29:42" pos:end="29:42"><literal type="number" pos:start="29:42" pos:end="29:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="31:13" pos:end="33:26"><if pos:start="31:13" pos:end="33:26">if <condition pos:start="31:16" pos:end="31:40">(<expr pos:start="31:17" pos:end="31:39"><name pos:start="31:17" pos:end="31:26">stream_pos</name> <operator pos:start="31:28" pos:end="31:29">==</operator> <name pos:start="31:31" pos:end="31:39">INT64_MIN</name></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:26"><block_content pos:start="33:17" pos:end="33:26">

                <return pos:start="33:17" pos:end="33:26">return <expr pos:start="33:24" pos:end="33:25"><operator pos:start="33:24" pos:end="33:24">-</operator><literal type="number" pos:start="33:25" pos:end="33:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="35:11" pos:end="41:9">else if <condition pos:start="35:19" pos:end="35:67">(<expr pos:start="35:20" pos:end="35:66"><call pos:start="35:20" pos:end="35:66"><name pos:start="35:20" pos:end="35:32">find_info_tag</name><argument_list pos:start="35:33" pos:end="35:66">(<argument pos:start="35:34" pos:end="35:36"><expr pos:start="35:34" pos:end="35:36"><name pos:start="35:34" pos:end="35:36">buf</name></expr></argument>, <argument pos:start="35:39" pos:end="35:49"><expr pos:start="35:39" pos:end="35:49"><sizeof pos:start="35:39" pos:end="35:49">sizeof<argument_list pos:start="35:45" pos:end="35:49">(<argument pos:start="35:46" pos:end="35:48"><expr pos:start="35:46" pos:end="35:48"><name pos:start="35:46" pos:end="35:48">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="35:52" pos:end="35:59"><expr pos:start="35:52" pos:end="35:59"><literal type="string" pos:start="35:52" pos:end="35:59">"buffer"</literal></expr></argument>, <argument pos:start="35:62" pos:end="35:65"><expr pos:start="35:62" pos:end="35:65"><name pos:start="35:62" pos:end="35:65">info</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:69" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:69">

            <decl_stmt pos:start="37:13" pos:end="37:47"><decl pos:start="37:13" pos:end="37:46"><type pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">int</name></type> <name pos:start="37:17" pos:end="37:25">prebuffer</name> <init pos:start="37:27" pos:end="37:46">= <expr pos:start="37:29" pos:end="37:46"><call pos:start="37:29" pos:end="37:46"><name pos:start="37:29" pos:end="37:34">strtol</name><argument_list pos:start="37:35" pos:end="37:46">(<argument pos:start="37:36" pos:end="37:38"><expr pos:start="37:36" pos:end="37:38"><name pos:start="37:36" pos:end="37:38">buf</name></expr></argument>, <argument pos:start="37:41" pos:end="37:41"><expr pos:start="37:41" pos:end="37:41"><literal type="number" pos:start="37:41" pos:end="37:41">0</literal></expr></argument>, <argument pos:start="37:44" pos:end="37:45"><expr pos:start="37:44" pos:end="37:45"><literal type="number" pos:start="37:44" pos:end="37:45">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:69"><expr pos:start="39:13" pos:end="39:68"><name pos:start="39:13" pos:end="39:22">stream_pos</name> <operator pos:start="39:24" pos:end="39:24">=</operator> <call pos:start="39:26" pos:end="39:37"><name pos:start="39:26" pos:end="39:35">av_gettime</name><argument_list pos:start="39:36" pos:end="39:37">()</argument_list></call> <operator pos:start="39:39" pos:end="39:39">-</operator> <name pos:start="39:41" pos:end="39:49">prebuffer</name> <operator pos:start="39:51" pos:end="39:51">*</operator> <operator pos:start="39:53" pos:end="39:53">(</operator><name pos:start="39:54" pos:end="39:60">int64_t</name><operator pos:start="39:61" pos:end="39:61">)</operator><literal type="number" pos:start="39:62" pos:end="39:68">1000000</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="43:77">else<block type="pseudo" pos:start="43:13" pos:end="43:77"><block_content pos:start="43:13" pos:end="43:77">

            <expr_stmt pos:start="43:13" pos:end="43:77"><expr pos:start="43:13" pos:end="43:76"><name pos:start="43:13" pos:end="43:22">stream_pos</name> <operator pos:start="43:24" pos:end="43:24">=</operator> <call pos:start="43:26" pos:end="43:37"><name pos:start="43:26" pos:end="43:35">av_gettime</name><argument_list pos:start="43:36" pos:end="43:37">()</argument_list></call> <operator pos:start="43:39" pos:end="43:39">-</operator> <name pos:start="43:41" pos:end="43:60"><name pos:start="43:41" pos:end="43:41">c</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:49">stream</name><operator pos:start="43:50" pos:end="43:51">-&gt;</operator><name pos:start="43:52" pos:end="43:60">prebuffer</name></name> <operator pos:start="43:62" pos:end="43:62">*</operator> <operator pos:start="43:64" pos:end="43:64">(</operator><name pos:start="43:65" pos:end="43:71">int64_t</name><operator pos:start="43:72" pos:end="43:72">)</operator><literal type="number" pos:start="43:73" pos:end="43:76">1000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="65:5">else <block pos:start="45:12" pos:end="65:5">{<block_content pos:start="47:9" pos:end="63:27">

        <expr_stmt pos:start="47:9" pos:end="47:57"><expr pos:start="47:9" pos:end="47:56"><call pos:start="47:9" pos:end="47:56"><name pos:start="47:9" pos:end="47:14">strcpy</name><argument_list pos:start="47:15" pos:end="47:56">(<argument pos:start="47:16" pos:end="47:29"><expr pos:start="47:16" pos:end="47:29"><name pos:start="47:16" pos:end="47:29">input_filename</name></expr></argument>, <argument pos:start="47:32" pos:end="47:55"><expr pos:start="47:32" pos:end="47:55"><name pos:start="47:32" pos:end="47:55"><name pos:start="47:32" pos:end="47:32">c</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:40">stream</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:55">feed_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:21"><expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:16">buf_size</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <literal type="number" pos:start="49:20" pos:end="49:20">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="51:9" pos:end="51:46">/* compute position (relative time) */</comment>

        <if_stmt pos:start="53:9" pos:end="63:27"><if pos:start="53:9" pos:end="61:9">if <condition pos:start="53:12" pos:end="53:58">(<expr pos:start="53:13" pos:end="53:57"><call pos:start="53:13" pos:end="53:57"><name pos:start="53:13" pos:end="53:25">find_info_tag</name><argument_list pos:start="53:26" pos:end="53:57">(<argument pos:start="53:27" pos:end="53:29"><expr pos:start="53:27" pos:end="53:29"><name pos:start="53:27" pos:end="53:29">buf</name></expr></argument>, <argument pos:start="53:32" pos:end="53:42"><expr pos:start="53:32" pos:end="53:42"><sizeof pos:start="53:32" pos:end="53:42">sizeof<argument_list pos:start="53:38" pos:end="53:42">(<argument pos:start="53:39" pos:end="53:41"><expr pos:start="53:39" pos:end="53:41"><name pos:start="53:39" pos:end="53:41">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="53:45" pos:end="53:50"><expr pos:start="53:45" pos:end="53:50"><literal type="string" pos:start="53:45" pos:end="53:50">"date"</literal></expr></argument>, <argument pos:start="53:53" pos:end="53:56"><expr pos:start="53:53" pos:end="53:56"><name pos:start="53:53" pos:end="53:56">info</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:60" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:26">

            <expr_stmt pos:start="55:13" pos:end="55:44"><expr pos:start="55:13" pos:end="55:43"><name pos:start="55:13" pos:end="55:22">stream_pos</name> <operator pos:start="55:24" pos:end="55:24">=</operator> <call pos:start="55:26" pos:end="55:43"><name pos:start="55:26" pos:end="55:35">parse_date</name><argument_list pos:start="55:36" pos:end="55:43">(<argument pos:start="55:37" pos:end="55:39"><expr pos:start="55:37" pos:end="55:39"><name pos:start="55:37" pos:end="55:39">buf</name></expr></argument>, <argument pos:start="55:42" pos:end="55:42"><expr pos:start="55:42" pos:end="55:42"><literal type="number" pos:start="55:42" pos:end="55:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="59:26"><if pos:start="57:13" pos:end="59:26">if <condition pos:start="57:16" pos:end="57:40">(<expr pos:start="57:17" pos:end="57:39"><name pos:start="57:17" pos:end="57:26">stream_pos</name> <operator pos:start="57:28" pos:end="57:29">==</operator> <name pos:start="57:31" pos:end="57:39">INT64_MIN</name></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:26"><block_content pos:start="59:17" pos:end="59:26">

                <return pos:start="59:17" pos:end="59:26">return <expr pos:start="59:24" pos:end="59:25"><operator pos:start="59:24" pos:end="59:24">-</operator><literal type="number" pos:start="59:25" pos:end="59:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="63:27">else<block type="pseudo" pos:start="63:13" pos:end="63:27"><block_content pos:start="63:13" pos:end="63:27">

            <expr_stmt pos:start="63:13" pos:end="63:27"><expr pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:22">stream_pos</name> <operator pos:start="63:24" pos:end="63:24">=</operator> <literal type="number" pos:start="63:26" pos:end="63:26">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="67:5" pos:end="82:0"><if pos:start="67:5" pos:end="82:0">if <condition pos:start="67:8" pos:end="67:34">(<expr pos:start="67:9" pos:end="67:33"><name pos:start="67:9" pos:end="67:25"><name pos:start="67:9" pos:end="67:22">input_filename</name><index pos:start="67:23" pos:end="67:25">[<expr pos:start="67:24" pos:end="67:24"><literal type="number" pos:start="67:24" pos:end="67:24">0</literal></expr>]</index></name> <operator pos:start="67:27" pos:end="67:28">==</operator> <literal type="char" pos:start="67:30" pos:end="67:33">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="82:0"><block_content pos:start="69:9" pos:end="82:0">

        <return pos:start="69:9" pos:end="82:0">return <expr pos:start="69:16" pos:end="69:17"><operator pos:start="69:16" pos:end="69:16">-</operator><literal type="number" pos:start="69:17" pos:end="69:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



<cpp:if pos:start="73:1" pos:end="73:5">#<cpp:directive pos:start="73:2" pos:end="73:3">if</cpp:directive> <expr pos:start="73:5" pos:end="73:5"><literal type="number" pos:start="73:5" pos:end="73:5">0</literal></expr></cpp:if>

    { time_t when = stream_pos / 1000000;

    http_log("Stream pos = %"PRId64", time=%s", stream_pos, ctime(&amp;when));

    }

<cpp:endif pos:start="81:1" pos:end="81:6">#<cpp:directive pos:start="81:2" pos:end="81:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="85:5" pos:end="85:21">/* open stream */</comment>

    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="89:67">(<expr pos:start="87:9" pos:end="89:66"><operator pos:start="87:9" pos:end="87:9">(</operator><name pos:start="87:10" pos:end="87:12">ret</name> <operator pos:start="87:14" pos:end="87:14">=</operator> <call pos:start="87:16" pos:end="89:61"><name pos:start="87:16" pos:end="87:33">av_open_input_file</name><argument_list pos:start="87:34" pos:end="89:61">(<argument pos:start="87:35" pos:end="87:36"><expr pos:start="87:35" pos:end="87:36"><operator pos:start="87:35" pos:end="87:35">&amp;</operator><name pos:start="87:36" pos:end="87:36">s</name></expr></argument>, <argument pos:start="87:39" pos:end="87:52"><expr pos:start="87:39" pos:end="87:52"><name pos:start="87:39" pos:end="87:52">input_filename</name></expr></argument>, <argument pos:start="87:55" pos:end="87:69"><expr pos:start="87:55" pos:end="87:69"><name pos:start="87:55" pos:end="87:69"><name pos:start="87:55" pos:end="87:55">c</name><operator pos:start="87:56" pos:end="87:57">-&gt;</operator><name pos:start="87:58" pos:end="87:63">stream</name><operator pos:start="87:64" pos:end="87:65">-&gt;</operator><name pos:start="87:66" pos:end="87:69">ifmt</name></name></expr></argument>,

                                  <argument pos:start="89:35" pos:end="89:42"><expr pos:start="89:35" pos:end="89:42"><name pos:start="89:35" pos:end="89:42">buf_size</name></expr></argument>, <argument pos:start="89:45" pos:end="89:60"><expr pos:start="89:45" pos:end="89:60"><name pos:start="89:45" pos:end="89:60"><name pos:start="89:45" pos:end="89:45">c</name><operator pos:start="89:46" pos:end="89:47">-&gt;</operator><name pos:start="89:48" pos:end="89:53">stream</name><operator pos:start="89:54" pos:end="89:55">-&gt;</operator><name pos:start="89:56" pos:end="89:60">ap_in</name></name></expr></argument>)</argument_list></call><operator pos:start="89:62" pos:end="89:62">)</operator> <operator pos:start="89:64" pos:end="89:64">&lt;</operator> <literal type="number" pos:start="89:66" pos:end="89:66">0</literal></expr>)</condition> <block pos:start="89:69" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:18">

        <expr_stmt pos:start="91:9" pos:end="91:65"><expr pos:start="91:9" pos:end="91:64"><call pos:start="91:9" pos:end="91:64"><name pos:start="91:9" pos:end="91:16">http_log</name><argument_list pos:start="91:17" pos:end="91:64">(<argument pos:start="91:18" pos:end="91:42"><expr pos:start="91:18" pos:end="91:42"><literal type="string" pos:start="91:18" pos:end="91:42">"could not open %s: %d\n"</literal></expr></argument>, <argument pos:start="91:45" pos:end="91:58"><expr pos:start="91:45" pos:end="91:58"><name pos:start="91:45" pos:end="91:58">input_filename</name></expr></argument>, <argument pos:start="91:61" pos:end="91:63"><expr pos:start="91:61" pos:end="91:63"><name pos:start="91:61" pos:end="91:63">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:18">return <expr pos:start="93:16" pos:end="93:17"><operator pos:start="93:16" pos:end="93:16">-</operator><literal type="number" pos:start="93:17" pos:end="93:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:34"><expr pos:start="97:5" pos:end="97:33"><name pos:start="97:5" pos:end="97:12"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:12">flags</name></name> <operator pos:start="97:14" pos:end="97:15">|=</operator> <name pos:start="97:17" pos:end="97:33">AVFMT_FLAG_GENPTS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:18"><expr pos:start="99:5" pos:end="99:17"><name pos:start="99:5" pos:end="99:13"><name pos:start="99:5" pos:end="99:5">c</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:13">fmt_in</name></name> <operator pos:start="99:15" pos:end="99:15">=</operator> <name pos:start="99:17" pos:end="99:17">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:35"><expr pos:start="101:5" pos:end="101:34"><call pos:start="101:5" pos:end="101:34"><name pos:start="101:5" pos:end="101:23">av_find_stream_info</name><argument_list pos:start="101:24" pos:end="101:34">(<argument pos:start="101:25" pos:end="101:33"><expr pos:start="101:25" pos:end="101:33"><name pos:start="101:25" pos:end="101:33"><name pos:start="101:25" pos:end="101:25">c</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:33">fmt_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="105:5" pos:end="105:26">/* open each parser */</comment>

    <for pos:start="107:5" pos:end="109:26">for<control pos:start="107:8" pos:end="107:32">(<init pos:start="107:9" pos:end="107:12"><expr pos:start="107:9" pos:end="107:11"><name pos:start="107:9" pos:end="107:9">i</name><operator pos:start="107:10" pos:end="107:10">=</operator><literal type="number" pos:start="107:11" pos:end="107:11">0</literal></expr>;</init><condition pos:start="107:13" pos:end="107:28"><expr pos:start="107:13" pos:end="107:27"><name pos:start="107:13" pos:end="107:13">i</name><operator pos:start="107:14" pos:end="107:14">&lt;</operator><name pos:start="107:15" pos:end="107:27"><name pos:start="107:15" pos:end="107:15">s</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:27">nb_streams</name></name></expr>;</condition><incr pos:start="107:29" pos:end="107:31"><expr pos:start="107:29" pos:end="107:31"><name pos:start="107:29" pos:end="107:29">i</name><operator pos:start="107:30" pos:end="107:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="109:9" pos:end="109:26"><block_content pos:start="109:9" pos:end="109:26">

        <expr_stmt pos:start="109:9" pos:end="109:26"><expr pos:start="109:9" pos:end="109:25"><call pos:start="109:9" pos:end="109:25"><name pos:start="109:9" pos:end="109:19">open_parser</name><argument_list pos:start="109:20" pos:end="109:25">(<argument pos:start="109:21" pos:end="109:21"><expr pos:start="109:21" pos:end="109:21"><name pos:start="109:21" pos:end="109:21">s</name></expr></argument>, <argument pos:start="109:24" pos:end="109:24"><expr pos:start="109:24" pos:end="109:24"><name pos:start="109:24" pos:end="109:24">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="113:5" pos:end="115:37">/* choose stream as clock source (we favorize video stream if

       present) for packet sending */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:28"><expr pos:start="117:5" pos:end="117:27"><name pos:start="117:5" pos:end="117:23"><name pos:start="117:5" pos:end="117:5">c</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:23">pts_stream_index</name></name> <operator pos:start="117:25" pos:end="117:25">=</operator> <literal type="number" pos:start="117:27" pos:end="117:27">0</literal></expr>;</expr_stmt>

    <for pos:start="119:5" pos:end="134:0">for<control pos:start="119:8" pos:end="119:40">(<init pos:start="119:9" pos:end="119:12"><expr pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:9">i</name><operator pos:start="119:10" pos:end="119:10">=</operator><literal type="number" pos:start="119:11" pos:end="119:11">0</literal></expr>;</init><condition pos:start="119:13" pos:end="119:36"><expr pos:start="119:13" pos:end="119:35"><name pos:start="119:13" pos:end="119:13">i</name><operator pos:start="119:14" pos:end="119:14">&lt;</operator><name pos:start="119:15" pos:end="119:35"><name pos:start="119:15" pos:end="119:15">c</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:23">stream</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:35">nb_streams</name></name></expr>;</condition><incr pos:start="119:37" pos:end="119:39"><expr pos:start="119:37" pos:end="119:39"><name pos:start="119:37" pos:end="119:37">i</name><operator pos:start="119:38" pos:end="119:39">++</operator></expr></incr>)</control> <block pos:start="119:42" pos:end="134:0">{<block_content pos:start="121:9" pos:end="127:9">

        <if_stmt pos:start="121:9" pos:end="127:9"><if pos:start="121:9" pos:end="127:9">if <condition pos:start="121:12" pos:end="123:73">(<expr pos:start="121:13" pos:end="123:72"><name pos:start="121:13" pos:end="121:31"><name pos:start="121:13" pos:end="121:13">c</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:31">pts_stream_index</name></name> <operator pos:start="121:33" pos:end="121:34">==</operator> <literal type="number" pos:start="121:36" pos:end="121:36">0</literal> <operator pos:start="121:38" pos:end="121:39">&amp;&amp;</operator>

            <name pos:start="123:13" pos:end="123:33"><name pos:start="123:13" pos:end="123:13">c</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:21">stream</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:30">streams</name><index pos:start="123:31" pos:end="123:33">[<expr pos:start="123:32" pos:end="123:32"><name pos:start="123:32" pos:end="123:32">i</name></expr>]</index></name><operator pos:start="123:34" pos:end="123:35">-&gt;</operator><name pos:start="123:36" pos:end="123:52"><name pos:start="123:36" pos:end="123:40">codec</name><operator pos:start="123:41" pos:end="123:42">-&gt;</operator><name pos:start="123:43" pos:end="123:52">codec_type</name></name> <operator pos:start="123:54" pos:end="123:55">==</operator> <name pos:start="123:57" pos:end="123:72">CODEC_TYPE_VIDEO</name></expr>)</condition> <block pos:start="123:75" pos:end="127:9">{<block_content pos:start="125:13" pos:end="125:36">

            <expr_stmt pos:start="125:13" pos:end="125:36"><expr pos:start="125:13" pos:end="125:35"><name pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:13">c</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:31">pts_stream_index</name></name> <operator pos:start="125:33" pos:end="125:33">=</operator> <name pos:start="125:35" pos:end="125:35">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



<cpp:if pos:start="133:1" pos:end="133:5">#<cpp:directive pos:start="133:2" pos:end="133:3">if</cpp:directive> <expr pos:start="133:5" pos:end="133:5"><literal type="number" pos:start="133:5" pos:end="133:5">1</literal></expr></cpp:if>

    <if_stmt pos:start="135:5" pos:end="140:0"><if pos:start="135:5" pos:end="140:0">if <condition pos:start="135:8" pos:end="135:38">(<expr pos:start="135:9" pos:end="135:37"><name pos:start="135:9" pos:end="135:37"><name pos:start="135:9" pos:end="135:9">c</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:17">fmt_in</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:26">iformat</name><operator pos:start="135:27" pos:end="135:28">-&gt;</operator><name pos:start="135:29" pos:end="135:37">read_seek</name></name></expr>)</condition><block type="pseudo" pos:start="137:9" pos:end="140:0"><block_content pos:start="137:9" pos:end="140:0">

        <expr_stmt pos:start="137:9" pos:end="140:0"><expr pos:start="137:9" pos:end="137:51"><call pos:start="137:9" pos:end="137:51"><name pos:start="137:9" pos:end="137:21">av_seek_frame</name><argument_list pos:start="137:22" pos:end="137:51">(<argument pos:start="137:23" pos:end="137:31"><expr pos:start="137:23" pos:end="137:31"><name pos:start="137:23" pos:end="137:31"><name pos:start="137:23" pos:end="137:23">c</name><operator pos:start="137:24" pos:end="137:25">-&gt;</operator><name pos:start="137:26" pos:end="137:31">fmt_in</name></name></expr></argument>, <argument pos:start="137:34" pos:end="137:35"><expr pos:start="137:34" pos:end="137:35"><operator pos:start="137:34" pos:end="137:34">-</operator><literal type="number" pos:start="137:35" pos:end="137:35">1</literal></expr></argument>, <argument pos:start="137:38" pos:end="137:47"><expr pos:start="137:38" pos:end="137:47"><name pos:start="137:38" pos:end="137:47">stream_pos</name></expr></argument>, <argument pos:start="137:50" pos:end="137:50"><expr pos:start="137:50" pos:end="137:50"><literal type="number" pos:start="137:50" pos:end="137:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="139:1" pos:end="139:6">#<cpp:directive pos:start="139:2" pos:end="139:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="141:5" pos:end="141:71">/* set the start time (needed for maxtime and RTP packet timing) */</comment>

    <expr_stmt pos:start="143:5" pos:end="143:29"><expr pos:start="143:5" pos:end="143:28"><name pos:start="143:5" pos:end="143:17"><name pos:start="143:5" pos:end="143:5">c</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:17">start_time</name></name> <operator pos:start="143:19" pos:end="143:19">=</operator> <name pos:start="143:21" pos:end="143:28">cur_time</name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:34"><expr pos:start="145:5" pos:end="145:33"><name pos:start="145:5" pos:end="145:16"><name pos:start="145:5" pos:end="145:5">c</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:16">first_pts</name></name> <operator pos:start="145:18" pos:end="145:18">=</operator> <name pos:start="145:20" pos:end="145:33">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <return pos:start="147:5" pos:end="147:13">return <expr pos:start="147:12" pos:end="147:12"><literal type="number" pos:start="147:12" pos:end="147:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
