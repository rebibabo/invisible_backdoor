<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7467.c" pos:tabs="8"><function pos:start="1:1" pos:end="467:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_type2</name><parameter_list pos:start="1:24" pos:end="1:63">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:38">GetByteContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">gb</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><name pos:start="1:45" pos:end="1:58">PutByteContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">pb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="467:1">{<block_content pos:start="5:5" pos:end="465:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">unsigned</name></type> <name pos:start="5:14" pos:end="5:19">repeat</name> <init pos:start="5:21" pos:end="5:23">= <expr pos:start="5:23" pos:end="5:23"><literal type="number" pos:start="5:23" pos:end="5:23">0</literal></expr></init></decl>, <decl pos:start="5:26" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:26" pos:end="5:30">first</name> <init pos:start="5:32" pos:end="5:34">= <expr pos:start="5:34" pos:end="5:34"><literal type="number" pos:start="5:34" pos:end="5:34">1</literal></expr></init></decl>, <decl pos:start="5:37" pos:end="5:42"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:37" pos:end="5:42">opcode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">len</name></decl>, <decl pos:start="7:17" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:19">pos</name></decl>;</decl_stmt>



    <while pos:start="11:5" pos:end="461:5">while <condition pos:start="11:11" pos:end="11:46">(<expr pos:start="11:12" pos:end="11:45"><call pos:start="11:12" pos:end="11:41"><name pos:start="11:12" pos:end="11:37">bytestream2_get_bytes_left</name><argument_list pos:start="11:38" pos:end="11:41">(<argument pos:start="11:39" pos:end="11:40"><expr pos:start="11:39" pos:end="11:40"><name pos:start="11:39" pos:end="11:40">gb</name></expr></argument>)</argument_list></call> <operator pos:start="11:43" pos:end="11:43">&gt;</operator> <literal type="number" pos:start="11:45" pos:end="11:45">0</literal></expr>)</condition> <block pos:start="11:48" pos:end="461:5">{<block_content pos:start="13:9" pos:end="459:9">

        <decl_stmt pos:start="13:9" pos:end="13:27"><decl pos:start="13:9" pos:end="13:26"><type pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:22">GetByteContext</name></type> <name pos:start="13:24" pos:end="13:26">gbc</name></decl>;</decl_stmt>



        <while pos:start="17:9" pos:end="331:9">while <condition pos:start="17:15" pos:end="17:50">(<expr pos:start="17:16" pos:end="17:49"><call pos:start="17:16" pos:end="17:45"><name pos:start="17:16" pos:end="17:41">bytestream2_get_bytes_left</name><argument_list pos:start="17:42" pos:end="17:45">(<argument pos:start="17:43" pos:end="17:44"><expr pos:start="17:43" pos:end="17:44"><name pos:start="17:43" pos:end="17:44">gb</name></expr></argument>)</argument_list></call> <operator pos:start="17:47" pos:end="17:47">&gt;</operator> <literal type="number" pos:start="17:49" pos:end="17:49">0</literal></expr>)</condition> <block pos:start="17:52" pos:end="331:9">{<block_content pos:start="19:13" pos:end="329:13">

            <if_stmt pos:start="19:13" pos:end="105:13"><if pos:start="19:13" pos:end="105:13">if <condition pos:start="19:16" pos:end="19:22">(<expr pos:start="19:17" pos:end="19:21"><name pos:start="19:17" pos:end="19:21">first</name></expr>)</condition> <block pos:start="19:24" pos:end="105:13">{<block_content pos:start="21:17" pos:end="103:27">

                <expr_stmt pos:start="21:17" pos:end="21:26"><expr pos:start="21:17" pos:end="21:25"><name pos:start="21:17" pos:end="21:21">first</name> <operator pos:start="21:23" pos:end="21:23">=</operator> <literal type="number" pos:start="21:25" pos:end="21:25">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="23:17" pos:end="101:17"><if pos:start="23:17" pos:end="101:17">if <condition pos:start="23:20" pos:end="23:51">(<expr pos:start="23:21" pos:end="23:50"><call pos:start="23:21" pos:end="23:45"><name pos:start="23:21" pos:end="23:41">bytestream2_peek_byte</name><argument_list pos:start="23:42" pos:end="23:45">(<argument pos:start="23:43" pos:end="23:44"><expr pos:start="23:43" pos:end="23:44"><name pos:start="23:43" pos:end="23:44">gb</name></expr></argument>)</argument_list></call> <operator pos:start="23:47" pos:end="23:47">&gt;</operator> <literal type="number" pos:start="23:49" pos:end="23:50">17</literal></expr>)</condition> <block pos:start="23:53" pos:end="101:17">{<block_content pos:start="25:21" pos:end="99:31">

                    <expr_stmt pos:start="25:21" pos:end="25:56"><expr pos:start="25:21" pos:end="25:55"><name pos:start="25:21" pos:end="25:23">len</name> <operator pos:start="25:25" pos:end="25:25">=</operator> <call pos:start="25:27" pos:end="25:50"><name pos:start="25:27" pos:end="25:46">bytestream2_get_byte</name><argument_list pos:start="25:47" pos:end="25:50">(<argument pos:start="25:48" pos:end="25:49"><expr pos:start="25:48" pos:end="25:49"><name pos:start="25:48" pos:end="25:49">gb</name></expr></argument>)</argument_list></call> <operator pos:start="25:52" pos:end="25:52">-</operator> <literal type="number" pos:start="25:54" pos:end="25:55">17</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="27:21" pos:end="97:21"><if pos:start="27:21" pos:end="41:21">if <condition pos:start="27:24" pos:end="27:32">(<expr pos:start="27:25" pos:end="27:31"><name pos:start="27:25" pos:end="27:27">len</name> <operator pos:start="27:29" pos:end="27:29">&lt;</operator> <literal type="number" pos:start="27:31" pos:end="27:31">4</literal></expr>)</condition> <block pos:start="27:34" pos:end="41:21">{<block_content pos:start="29:25" pos:end="39:33">

                        <do pos:start="29:25" pos:end="35:38">do <block pos:start="29:28" pos:end="35:25">{<block_content pos:start="31:29" pos:end="33:34">

                            <expr_stmt pos:start="31:29" pos:end="31:79"><expr pos:start="31:29" pos:end="31:78"><call pos:start="31:29" pos:end="31:78"><name pos:start="31:29" pos:end="31:48">bytestream2_put_byte</name><argument_list pos:start="31:49" pos:end="31:78">(<argument pos:start="31:50" pos:end="31:51"><expr pos:start="31:50" pos:end="31:51"><name pos:start="31:50" pos:end="31:51">pb</name></expr></argument>, <argument pos:start="31:54" pos:end="31:77"><expr pos:start="31:54" pos:end="31:77"><call pos:start="31:54" pos:end="31:77"><name pos:start="31:54" pos:end="31:73">bytestream2_get_byte</name><argument_list pos:start="31:74" pos:end="31:77">(<argument pos:start="31:75" pos:end="31:76"><expr pos:start="31:75" pos:end="31:76"><name pos:start="31:75" pos:end="31:76">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="33:29" pos:end="33:34"><expr pos:start="33:29" pos:end="33:33"><operator pos:start="33:29" pos:end="33:30">--</operator><name pos:start="33:31" pos:end="33:33">len</name></expr>;</expr_stmt>

                        </block_content>}</block> while <condition pos:start="35:33" pos:end="35:37">(<expr pos:start="35:34" pos:end="35:36"><name pos:start="35:34" pos:end="35:36">len</name></expr>)</condition>;</do>

                        <expr_stmt pos:start="37:25" pos:end="37:59"><expr pos:start="37:25" pos:end="37:58"><name pos:start="37:25" pos:end="37:30">opcode</name> <operator pos:start="37:32" pos:end="37:32">=</operator> <call pos:start="37:34" pos:end="37:58"><name pos:start="37:34" pos:end="37:54">bytestream2_peek_byte</name><argument_list pos:start="37:55" pos:end="37:58">(<argument pos:start="37:56" pos:end="37:57"><expr pos:start="37:56" pos:end="37:57"><name pos:start="37:56" pos:end="37:57">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <continue pos:start="39:25" pos:end="39:33">continue;</continue>

                    </block_content>}</block></if> <else pos:start="41:23" pos:end="97:21">else <block pos:start="41:28" pos:end="97:21">{<block_content pos:start="43:25" pos:end="95:25">

                        <do pos:start="43:25" pos:end="49:38">do <block pos:start="43:28" pos:end="49:25">{<block_content pos:start="45:29" pos:end="47:34">

                            <expr_stmt pos:start="45:29" pos:end="45:79"><expr pos:start="45:29" pos:end="45:78"><call pos:start="45:29" pos:end="45:78"><name pos:start="45:29" pos:end="45:48">bytestream2_put_byte</name><argument_list pos:start="45:49" pos:end="45:78">(<argument pos:start="45:50" pos:end="45:51"><expr pos:start="45:50" pos:end="45:51"><name pos:start="45:50" pos:end="45:51">pb</name></expr></argument>, <argument pos:start="45:54" pos:end="45:77"><expr pos:start="45:54" pos:end="45:77"><call pos:start="45:54" pos:end="45:77"><name pos:start="45:54" pos:end="45:73">bytestream2_get_byte</name><argument_list pos:start="45:74" pos:end="45:77">(<argument pos:start="45:75" pos:end="45:76"><expr pos:start="45:75" pos:end="45:76"><name pos:start="45:75" pos:end="45:76">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="47:29" pos:end="47:34"><expr pos:start="47:29" pos:end="47:33"><operator pos:start="47:29" pos:end="47:30">--</operator><name pos:start="47:31" pos:end="47:33">len</name></expr>;</expr_stmt>

                        </block_content>}</block> while <condition pos:start="49:33" pos:end="49:37">(<expr pos:start="49:34" pos:end="49:36"><name pos:start="49:34" pos:end="49:36">len</name></expr>)</condition>;</do>

                        <expr_stmt pos:start="51:25" pos:end="51:59"><expr pos:start="51:25" pos:end="51:58"><name pos:start="51:25" pos:end="51:30">opcode</name> <operator pos:start="51:32" pos:end="51:32">=</operator> <call pos:start="51:34" pos:end="51:58"><name pos:start="51:34" pos:end="51:54">bytestream2_peek_byte</name><argument_list pos:start="51:55" pos:end="51:58">(<argument pos:start="51:56" pos:end="51:57"><expr pos:start="51:56" pos:end="51:57"><name pos:start="51:56" pos:end="51:57">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="53:25" pos:end="95:25"><if pos:start="53:25" pos:end="95:25">if <condition pos:start="53:28" pos:end="53:42">(<expr pos:start="53:29" pos:end="53:41"><name pos:start="53:29" pos:end="53:34">opcode</name> <operator pos:start="53:36" pos:end="53:36">&lt;</operator> <literal type="number" pos:start="53:38" pos:end="53:41">0x10</literal></expr>)</condition> <block pos:start="53:44" pos:end="95:25">{<block_content pos:start="55:29" pos:end="93:37">

                            <expr_stmt pos:start="55:29" pos:end="55:52"><expr pos:start="55:29" pos:end="55:51"><call pos:start="55:29" pos:end="55:51"><name pos:start="55:29" pos:end="55:44">bytestream2_skip</name><argument_list pos:start="55:45" pos:end="55:51">(<argument pos:start="55:46" pos:end="55:47"><expr pos:start="55:46" pos:end="55:47"><name pos:start="55:46" pos:end="55:47">gb</name></expr></argument>, <argument pos:start="55:50" pos:end="55:50"><expr pos:start="55:50" pos:end="55:50"><literal type="number" pos:start="55:50" pos:end="55:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="57:29" pos:end="57:88"><expr pos:start="57:29" pos:end="57:87"><name pos:start="57:29" pos:end="57:31">pos</name> <operator pos:start="57:33" pos:end="57:33">=</operator> <operator pos:start="57:35" pos:end="57:35">-</operator> <operator pos:start="57:37" pos:end="57:37">(</operator><name pos:start="57:38" pos:end="57:43">opcode</name> <operator pos:start="57:45" pos:end="57:46">&gt;&gt;</operator> <literal type="number" pos:start="57:48" pos:end="57:48">2</literal><operator pos:start="57:49" pos:end="57:49">)</operator> <operator pos:start="57:51" pos:end="57:51">-</operator> <literal type="number" pos:start="57:53" pos:end="57:53">4</literal> <operator pos:start="57:55" pos:end="57:55">*</operator> <call pos:start="57:57" pos:end="57:80"><name pos:start="57:57" pos:end="57:76">bytestream2_get_byte</name><argument_list pos:start="57:77" pos:end="57:80">(<argument pos:start="57:78" pos:end="57:79"><expr pos:start="57:78" pos:end="57:79"><name pos:start="57:78" pos:end="57:79">gb</name></expr></argument>)</argument_list></call> <operator pos:start="57:82" pos:end="57:82">-</operator> <literal type="number" pos:start="57:84" pos:end="57:87">2049</literal></expr>;</expr_stmt>



                            <expr_stmt pos:start="61:29" pos:end="61:104"><expr pos:start="61:29" pos:end="61:103"><call pos:start="61:29" pos:end="61:103"><name pos:start="61:29" pos:end="61:44">bytestream2_init</name><argument_list pos:start="61:45" pos:end="61:103">(<argument pos:start="61:46" pos:end="61:49"><expr pos:start="61:46" pos:end="61:49"><operator pos:start="61:46" pos:end="61:46">&amp;</operator><name pos:start="61:47" pos:end="61:49">gbc</name></expr></argument>, <argument pos:start="61:52" pos:end="61:67"><expr pos:start="61:52" pos:end="61:67"><name pos:start="61:52" pos:end="61:67"><name pos:start="61:52" pos:end="61:53">pb</name><operator pos:start="61:54" pos:end="61:55">-&gt;</operator><name pos:start="61:56" pos:end="61:67">buffer_start</name></name></expr></argument>, <argument pos:start="61:70" pos:end="61:102"><expr pos:start="61:70" pos:end="61:102"><name pos:start="61:70" pos:end="61:83"><name pos:start="61:70" pos:end="61:71">pb</name><operator pos:start="61:72" pos:end="61:73">-&gt;</operator><name pos:start="61:74" pos:end="61:83">buffer_end</name></name> <operator pos:start="61:85" pos:end="61:85">-</operator> <name pos:start="61:87" pos:end="61:102"><name pos:start="61:87" pos:end="61:88">pb</name><operator pos:start="61:89" pos:end="61:90">-&gt;</operator><name pos:start="61:91" pos:end="61:102">buffer_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="63:29" pos:end="63:91"><expr pos:start="63:29" pos:end="63:90"><call pos:start="63:29" pos:end="63:90"><name pos:start="63:29" pos:end="63:44">bytestream2_seek</name><argument_list pos:start="63:45" pos:end="63:90">(<argument pos:start="63:46" pos:end="63:49"><expr pos:start="63:46" pos:end="63:49"><operator pos:start="63:46" pos:end="63:46">&amp;</operator><name pos:start="63:47" pos:end="63:49">gbc</name></expr></argument>, <argument pos:start="63:52" pos:end="63:79"><expr pos:start="63:52" pos:end="63:79"><call pos:start="63:52" pos:end="63:73"><name pos:start="63:52" pos:end="63:69">bytestream2_tell_p</name><argument_list pos:start="63:70" pos:end="63:73">(<argument pos:start="63:71" pos:end="63:72"><expr pos:start="63:71" pos:end="63:72"><name pos:start="63:71" pos:end="63:72">pb</name></expr></argument>)</argument_list></call> <operator pos:start="63:75" pos:end="63:75">+</operator> <name pos:start="63:77" pos:end="63:79">pos</name></expr></argument>, <argument pos:start="63:82" pos:end="63:89"><expr pos:start="63:82" pos:end="63:89"><name pos:start="63:82" pos:end="63:89">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                            <expr_stmt pos:start="67:29" pos:end="67:81"><expr pos:start="67:29" pos:end="67:80"><call pos:start="67:29" pos:end="67:80"><name pos:start="67:29" pos:end="67:48">bytestream2_put_byte</name><argument_list pos:start="67:49" pos:end="67:80">(<argument pos:start="67:50" pos:end="67:51"><expr pos:start="67:50" pos:end="67:51"><name pos:start="67:50" pos:end="67:51">pb</name></expr></argument>, <argument pos:start="67:54" pos:end="67:79"><expr pos:start="67:54" pos:end="67:79"><call pos:start="67:54" pos:end="67:79"><name pos:start="67:54" pos:end="67:73">bytestream2_get_byte</name><argument_list pos:start="67:74" pos:end="67:79">(<argument pos:start="67:75" pos:end="67:78"><expr pos:start="67:75" pos:end="67:78"><operator pos:start="67:75" pos:end="67:75">&amp;</operator><name pos:start="67:76" pos:end="67:78">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="69:29" pos:end="69:81"><expr pos:start="69:29" pos:end="69:80"><call pos:start="69:29" pos:end="69:80"><name pos:start="69:29" pos:end="69:48">bytestream2_put_byte</name><argument_list pos:start="69:49" pos:end="69:80">(<argument pos:start="69:50" pos:end="69:51"><expr pos:start="69:50" pos:end="69:51"><name pos:start="69:50" pos:end="69:51">pb</name></expr></argument>, <argument pos:start="69:54" pos:end="69:79"><expr pos:start="69:54" pos:end="69:79"><call pos:start="69:54" pos:end="69:79"><name pos:start="69:54" pos:end="69:73">bytestream2_get_byte</name><argument_list pos:start="69:74" pos:end="69:79">(<argument pos:start="69:75" pos:end="69:78"><expr pos:start="69:75" pos:end="69:78"><operator pos:start="69:75" pos:end="69:75">&amp;</operator><name pos:start="69:76" pos:end="69:78">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="71:29" pos:end="71:81"><expr pos:start="71:29" pos:end="71:80"><call pos:start="71:29" pos:end="71:80"><name pos:start="71:29" pos:end="71:48">bytestream2_put_byte</name><argument_list pos:start="71:49" pos:end="71:80">(<argument pos:start="71:50" pos:end="71:51"><expr pos:start="71:50" pos:end="71:51"><name pos:start="71:50" pos:end="71:51">pb</name></expr></argument>, <argument pos:start="71:54" pos:end="71:79"><expr pos:start="71:54" pos:end="71:79"><call pos:start="71:54" pos:end="71:79"><name pos:start="71:54" pos:end="71:73">bytestream2_get_byte</name><argument_list pos:start="71:74" pos:end="71:79">(<argument pos:start="71:75" pos:end="71:78"><expr pos:start="71:75" pos:end="71:78"><operator pos:start="71:75" pos:end="71:75">&amp;</operator><name pos:start="71:76" pos:end="71:78">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="73:29" pos:end="73:45"><expr pos:start="73:29" pos:end="73:44"><name pos:start="73:29" pos:end="73:31">len</name> <operator pos:start="73:33" pos:end="73:33">=</operator> <name pos:start="73:35" pos:end="73:40">opcode</name> <operator pos:start="73:42" pos:end="73:42">&amp;</operator> <literal type="number" pos:start="73:44" pos:end="73:44">3</literal></expr>;</expr_stmt>

                            <if_stmt pos:start="75:29" pos:end="91:29"><if pos:start="75:29" pos:end="79:29">if <condition pos:start="75:32" pos:end="75:37">(<expr pos:start="75:33" pos:end="75:36"><operator pos:start="75:33" pos:end="75:33">!</operator><name pos:start="75:34" pos:end="75:36">len</name></expr>)</condition> <block pos:start="75:39" pos:end="79:29">{<block_content pos:start="77:33" pos:end="77:43">

                                <expr_stmt pos:start="77:33" pos:end="77:43"><expr pos:start="77:33" pos:end="77:42"><name pos:start="77:33" pos:end="77:38">repeat</name> <operator pos:start="77:40" pos:end="77:40">=</operator> <literal type="number" pos:start="77:42" pos:end="77:42">1</literal></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="79:31" pos:end="91:29">else <block pos:start="79:36" pos:end="91:29">{<block_content pos:start="81:33" pos:end="89:67">

                                <do pos:start="81:33" pos:end="87:46">do <block pos:start="81:36" pos:end="87:33">{<block_content pos:start="83:37" pos:end="85:42">

                                    <expr_stmt pos:start="83:37" pos:end="83:87"><expr pos:start="83:37" pos:end="83:86"><call pos:start="83:37" pos:end="83:86"><name pos:start="83:37" pos:end="83:56">bytestream2_put_byte</name><argument_list pos:start="83:57" pos:end="83:86">(<argument pos:start="83:58" pos:end="83:59"><expr pos:start="83:58" pos:end="83:59"><name pos:start="83:58" pos:end="83:59">pb</name></expr></argument>, <argument pos:start="83:62" pos:end="83:85"><expr pos:start="83:62" pos:end="83:85"><call pos:start="83:62" pos:end="83:85"><name pos:start="83:62" pos:end="83:81">bytestream2_get_byte</name><argument_list pos:start="83:82" pos:end="83:85">(<argument pos:start="83:83" pos:end="83:84"><expr pos:start="83:83" pos:end="83:84"><name pos:start="83:83" pos:end="83:84">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="85:37" pos:end="85:42"><expr pos:start="85:37" pos:end="85:41"><operator pos:start="85:37" pos:end="85:38">--</operator><name pos:start="85:39" pos:end="85:41">len</name></expr>;</expr_stmt>

                                </block_content>}</block> while <condition pos:start="87:41" pos:end="87:45">(<expr pos:start="87:42" pos:end="87:44"><name pos:start="87:42" pos:end="87:44">len</name></expr>)</condition>;</do>

                                <expr_stmt pos:start="89:33" pos:end="89:67"><expr pos:start="89:33" pos:end="89:66"><name pos:start="89:33" pos:end="89:38">opcode</name> <operator pos:start="89:40" pos:end="89:40">=</operator> <call pos:start="89:42" pos:end="89:66"><name pos:start="89:42" pos:end="89:62">bytestream2_peek_byte</name><argument_list pos:start="89:63" pos:end="89:66">(<argument pos:start="89:64" pos:end="89:65"><expr pos:start="89:64" pos:end="89:65"><name pos:start="89:64" pos:end="89:65">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <continue pos:start="93:29" pos:end="93:37">continue;</continue>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="99:21" pos:end="99:31"><expr pos:start="99:21" pos:end="99:30"><name pos:start="99:21" pos:end="99:26">repeat</name> <operator pos:start="99:28" pos:end="99:28">=</operator> <literal type="number" pos:start="99:30" pos:end="99:30">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:27"><expr pos:start="103:17" pos:end="103:26"><name pos:start="103:17" pos:end="103:22">repeat</name> <operator pos:start="103:24" pos:end="103:24">=</operator> <literal type="number" pos:start="103:26" pos:end="103:26">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="107:13" pos:end="189:13"><if pos:start="107:13" pos:end="189:13">if <condition pos:start="107:16" pos:end="107:23">(<expr pos:start="107:17" pos:end="107:22"><name pos:start="107:17" pos:end="107:22">repeat</name></expr>)</condition> <block pos:start="107:25" pos:end="189:13">{<block_content pos:start="109:17" pos:end="187:17">

                <expr_stmt pos:start="109:17" pos:end="109:27"><expr pos:start="109:17" pos:end="109:26"><name pos:start="109:17" pos:end="109:22">repeat</name> <operator pos:start="109:24" pos:end="109:24">=</operator> <literal type="number" pos:start="109:26" pos:end="109:26">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:51"><expr pos:start="111:17" pos:end="111:50"><name pos:start="111:17" pos:end="111:22">opcode</name> <operator pos:start="111:24" pos:end="111:24">=</operator> <call pos:start="111:26" pos:end="111:50"><name pos:start="111:26" pos:end="111:46">bytestream2_peek_byte</name><argument_list pos:start="111:47" pos:end="111:50">(<argument pos:start="111:48" pos:end="111:49"><expr pos:start="111:48" pos:end="111:49"><name pos:start="111:48" pos:end="111:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="113:17" pos:end="187:17"><if pos:start="113:17" pos:end="187:17">if <condition pos:start="113:20" pos:end="113:34">(<expr pos:start="113:21" pos:end="113:33"><name pos:start="113:21" pos:end="113:26">opcode</name> <operator pos:start="113:28" pos:end="113:28">&lt;</operator> <literal type="number" pos:start="113:30" pos:end="113:33">0x10</literal></expr>)</condition> <block pos:start="113:36" pos:end="187:17">{<block_content pos:start="115:21" pos:end="185:21">

                    <expr_stmt pos:start="115:21" pos:end="115:44"><expr pos:start="115:21" pos:end="115:43"><call pos:start="115:21" pos:end="115:43"><name pos:start="115:21" pos:end="115:36">bytestream2_skip</name><argument_list pos:start="115:37" pos:end="115:43">(<argument pos:start="115:38" pos:end="115:39"><expr pos:start="115:38" pos:end="115:39"><name pos:start="115:38" pos:end="115:39">gb</name></expr></argument>, <argument pos:start="115:42" pos:end="115:42"><expr pos:start="115:42" pos:end="115:42"><literal type="number" pos:start="115:42" pos:end="115:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="117:21" pos:end="133:21"><if pos:start="117:21" pos:end="133:21">if <condition pos:start="117:24" pos:end="117:32">(<expr pos:start="117:25" pos:end="117:31"><operator pos:start="117:25" pos:end="117:25">!</operator><name pos:start="117:26" pos:end="117:31">opcode</name></expr>)</condition> <block pos:start="117:34" pos:end="133:21">{<block_content pos:start="119:25" pos:end="131:64">

                        <if_stmt pos:start="119:25" pos:end="129:25"><if pos:start="119:25" pos:end="129:25">if <condition pos:start="119:28" pos:end="119:55">(<expr pos:start="119:29" pos:end="119:54"><operator pos:start="119:29" pos:end="119:29">!</operator><call pos:start="119:30" pos:end="119:54"><name pos:start="119:30" pos:end="119:50">bytestream2_peek_byte</name><argument_list pos:start="119:51" pos:end="119:54">(<argument pos:start="119:52" pos:end="119:53"><expr pos:start="119:52" pos:end="119:53"><name pos:start="119:52" pos:end="119:53">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:57" pos:end="129:25">{<block_content pos:start="121:29" pos:end="127:103">

                            <do pos:start="121:29" pos:end="127:103">do <block pos:start="121:32" pos:end="127:29">{<block_content pos:start="123:33" pos:end="125:46">

                                <expr_stmt pos:start="123:33" pos:end="123:56"><expr pos:start="123:33" pos:end="123:55"><call pos:start="123:33" pos:end="123:55"><name pos:start="123:33" pos:end="123:48">bytestream2_skip</name><argument_list pos:start="123:49" pos:end="123:55">(<argument pos:start="123:50" pos:end="123:51"><expr pos:start="123:50" pos:end="123:51"><name pos:start="123:50" pos:end="123:51">gb</name></expr></argument>, <argument pos:start="123:54" pos:end="123:54"><expr pos:start="123:54" pos:end="123:54"><literal type="number" pos:start="123:54" pos:end="123:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="125:33" pos:end="125:46"><expr pos:start="125:33" pos:end="125:45"><name pos:start="125:33" pos:end="125:38">opcode</name> <operator pos:start="125:40" pos:end="125:41">+=</operator> <literal type="number" pos:start="125:43" pos:end="125:45">255</literal></expr>;</expr_stmt>

                            </block_content>}</block> while <condition pos:start="127:37" pos:end="127:102">(<expr pos:start="127:38" pos:end="127:101"><operator pos:start="127:38" pos:end="127:38">!</operator><call pos:start="127:39" pos:end="127:63"><name pos:start="127:39" pos:end="127:59">bytestream2_peek_byte</name><argument_list pos:start="127:60" pos:end="127:63">(<argument pos:start="127:61" pos:end="127:62"><expr pos:start="127:61" pos:end="127:62"><name pos:start="127:61" pos:end="127:62">gb</name></expr></argument>)</argument_list></call> <operator pos:start="127:65" pos:end="127:66">&amp;&amp;</operator> <call pos:start="127:68" pos:end="127:97"><name pos:start="127:68" pos:end="127:93">bytestream2_get_bytes_left</name><argument_list pos:start="127:94" pos:end="127:97">(<argument pos:start="127:95" pos:end="127:96"><expr pos:start="127:95" pos:end="127:96"><name pos:start="127:95" pos:end="127:96">gb</name></expr></argument>)</argument_list></call> <operator pos:start="127:99" pos:end="127:99">&gt;</operator> <literal type="number" pos:start="127:101" pos:end="127:101">0</literal></expr>)</condition>;</do>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="131:25" pos:end="131:64"><expr pos:start="131:25" pos:end="131:63"><name pos:start="131:25" pos:end="131:30">opcode</name> <operator pos:start="131:32" pos:end="131:33">+=</operator> <call pos:start="131:35" pos:end="131:58"><name pos:start="131:35" pos:end="131:54">bytestream2_get_byte</name><argument_list pos:start="131:55" pos:end="131:58">(<argument pos:start="131:56" pos:end="131:57"><expr pos:start="131:56" pos:end="131:57"><name pos:start="131:56" pos:end="131:57">gb</name></expr></argument>)</argument_list></call> <operator pos:start="131:60" pos:end="131:60">+</operator> <literal type="number" pos:start="131:62" pos:end="131:63">15</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="135:21" pos:end="135:71"><expr pos:start="135:21" pos:end="135:70"><call pos:start="135:21" pos:end="135:70"><name pos:start="135:21" pos:end="135:40">bytestream2_put_le32</name><argument_list pos:start="135:41" pos:end="135:70">(<argument pos:start="135:42" pos:end="135:43"><expr pos:start="135:42" pos:end="135:43"><name pos:start="135:42" pos:end="135:43">pb</name></expr></argument>, <argument pos:start="135:46" pos:end="135:69"><expr pos:start="135:46" pos:end="135:69"><call pos:start="135:46" pos:end="135:69"><name pos:start="135:46" pos:end="135:65">bytestream2_get_le32</name><argument_list pos:start="135:66" pos:end="135:69">(<argument pos:start="135:67" pos:end="135:68"><expr pos:start="135:67" pos:end="135:68"><name pos:start="135:67" pos:end="135:68">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="137:21" pos:end="139:75">for <control pos:start="137:25" pos:end="137:52">(<init pos:start="137:26" pos:end="137:40"><expr pos:start="137:26" pos:end="137:39"><name pos:start="137:26" pos:end="137:26">i</name> <operator pos:start="137:28" pos:end="137:28">=</operator> <name pos:start="137:30" pos:end="137:35">opcode</name> <operator pos:start="137:37" pos:end="137:37">-</operator> <literal type="number" pos:start="137:39" pos:end="137:39">1</literal></expr>;</init> <condition pos:start="137:42" pos:end="137:47"><expr pos:start="137:42" pos:end="137:46"><name pos:start="137:42" pos:end="137:42">i</name> <operator pos:start="137:44" pos:end="137:44">&gt;</operator> <literal type="number" pos:start="137:46" pos:end="137:46">0</literal></expr>;</condition> <incr pos:start="137:49" pos:end="137:51"><expr pos:start="137:49" pos:end="137:51"><operator pos:start="137:49" pos:end="137:50">--</operator><name pos:start="137:51" pos:end="137:51">i</name></expr></incr>)</control><block type="pseudo" pos:start="139:25" pos:end="139:75"><block_content pos:start="139:25" pos:end="139:75">

                        <expr_stmt pos:start="139:25" pos:end="139:75"><expr pos:start="139:25" pos:end="139:74"><call pos:start="139:25" pos:end="139:74"><name pos:start="139:25" pos:end="139:44">bytestream2_put_byte</name><argument_list pos:start="139:45" pos:end="139:74">(<argument pos:start="139:46" pos:end="139:47"><expr pos:start="139:46" pos:end="139:47"><name pos:start="139:46" pos:end="139:47">pb</name></expr></argument>, <argument pos:start="139:50" pos:end="139:73"><expr pos:start="139:50" pos:end="139:73"><call pos:start="139:50" pos:end="139:73"><name pos:start="139:50" pos:end="139:69">bytestream2_get_byte</name><argument_list pos:start="139:70" pos:end="139:73">(<argument pos:start="139:71" pos:end="139:72"><expr pos:start="139:71" pos:end="139:72"><name pos:start="139:71" pos:end="139:72">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="141:21" pos:end="141:55"><expr pos:start="141:21" pos:end="141:54"><name pos:start="141:21" pos:end="141:26">opcode</name> <operator pos:start="141:28" pos:end="141:28">=</operator> <call pos:start="141:30" pos:end="141:54"><name pos:start="141:30" pos:end="141:50">bytestream2_peek_byte</name><argument_list pos:start="141:51" pos:end="141:54">(<argument pos:start="141:52" pos:end="141:53"><expr pos:start="141:52" pos:end="141:53"><name pos:start="141:52" pos:end="141:53">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="143:21" pos:end="185:21"><if pos:start="143:21" pos:end="185:21">if <condition pos:start="143:24" pos:end="143:38">(<expr pos:start="143:25" pos:end="143:37"><name pos:start="143:25" pos:end="143:30">opcode</name> <operator pos:start="143:32" pos:end="143:32">&lt;</operator> <literal type="number" pos:start="143:34" pos:end="143:37">0x10</literal></expr>)</condition> <block pos:start="143:40" pos:end="185:21">{<block_content pos:start="145:25" pos:end="183:33">

                        <expr_stmt pos:start="145:25" pos:end="145:48"><expr pos:start="145:25" pos:end="145:47"><call pos:start="145:25" pos:end="145:47"><name pos:start="145:25" pos:end="145:40">bytestream2_skip</name><argument_list pos:start="145:41" pos:end="145:47">(<argument pos:start="145:42" pos:end="145:43"><expr pos:start="145:42" pos:end="145:43"><name pos:start="145:42" pos:end="145:43">gb</name></expr></argument>, <argument pos:start="145:46" pos:end="145:46"><expr pos:start="145:46" pos:end="145:46"><literal type="number" pos:start="145:46" pos:end="145:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="147:25" pos:end="147:84"><expr pos:start="147:25" pos:end="147:83"><name pos:start="147:25" pos:end="147:27">pos</name> <operator pos:start="147:29" pos:end="147:29">=</operator> <operator pos:start="147:31" pos:end="147:31">-</operator> <operator pos:start="147:33" pos:end="147:33">(</operator><name pos:start="147:34" pos:end="147:39">opcode</name> <operator pos:start="147:41" pos:end="147:42">&gt;&gt;</operator> <literal type="number" pos:start="147:44" pos:end="147:44">2</literal><operator pos:start="147:45" pos:end="147:45">)</operator> <operator pos:start="147:47" pos:end="147:47">-</operator> <literal type="number" pos:start="147:49" pos:end="147:49">4</literal> <operator pos:start="147:51" pos:end="147:51">*</operator> <call pos:start="147:53" pos:end="147:76"><name pos:start="147:53" pos:end="147:72">bytestream2_get_byte</name><argument_list pos:start="147:73" pos:end="147:76">(<argument pos:start="147:74" pos:end="147:75"><expr pos:start="147:74" pos:end="147:75"><name pos:start="147:74" pos:end="147:75">gb</name></expr></argument>)</argument_list></call> <operator pos:start="147:78" pos:end="147:78">-</operator> <literal type="number" pos:start="147:80" pos:end="147:83">2049</literal></expr>;</expr_stmt>



                        <expr_stmt pos:start="151:25" pos:end="151:100"><expr pos:start="151:25" pos:end="151:99"><call pos:start="151:25" pos:end="151:99"><name pos:start="151:25" pos:end="151:40">bytestream2_init</name><argument_list pos:start="151:41" pos:end="151:99">(<argument pos:start="151:42" pos:end="151:45"><expr pos:start="151:42" pos:end="151:45"><operator pos:start="151:42" pos:end="151:42">&amp;</operator><name pos:start="151:43" pos:end="151:45">gbc</name></expr></argument>, <argument pos:start="151:48" pos:end="151:63"><expr pos:start="151:48" pos:end="151:63"><name pos:start="151:48" pos:end="151:63"><name pos:start="151:48" pos:end="151:49">pb</name><operator pos:start="151:50" pos:end="151:51">-&gt;</operator><name pos:start="151:52" pos:end="151:63">buffer_start</name></name></expr></argument>, <argument pos:start="151:66" pos:end="151:98"><expr pos:start="151:66" pos:end="151:98"><name pos:start="151:66" pos:end="151:79"><name pos:start="151:66" pos:end="151:67">pb</name><operator pos:start="151:68" pos:end="151:69">-&gt;</operator><name pos:start="151:70" pos:end="151:79">buffer_end</name></name> <operator pos:start="151:81" pos:end="151:81">-</operator> <name pos:start="151:83" pos:end="151:98"><name pos:start="151:83" pos:end="151:84">pb</name><operator pos:start="151:85" pos:end="151:86">-&gt;</operator><name pos:start="151:87" pos:end="151:98">buffer_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="153:25" pos:end="153:87"><expr pos:start="153:25" pos:end="153:86"><call pos:start="153:25" pos:end="153:86"><name pos:start="153:25" pos:end="153:40">bytestream2_seek</name><argument_list pos:start="153:41" pos:end="153:86">(<argument pos:start="153:42" pos:end="153:45"><expr pos:start="153:42" pos:end="153:45"><operator pos:start="153:42" pos:end="153:42">&amp;</operator><name pos:start="153:43" pos:end="153:45">gbc</name></expr></argument>, <argument pos:start="153:48" pos:end="153:75"><expr pos:start="153:48" pos:end="153:75"><call pos:start="153:48" pos:end="153:69"><name pos:start="153:48" pos:end="153:65">bytestream2_tell_p</name><argument_list pos:start="153:66" pos:end="153:69">(<argument pos:start="153:67" pos:end="153:68"><expr pos:start="153:67" pos:end="153:68"><name pos:start="153:67" pos:end="153:68">pb</name></expr></argument>)</argument_list></call> <operator pos:start="153:71" pos:end="153:71">+</operator> <name pos:start="153:73" pos:end="153:75">pos</name></expr></argument>, <argument pos:start="153:78" pos:end="153:85"><expr pos:start="153:78" pos:end="153:85"><name pos:start="153:78" pos:end="153:85">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="157:25" pos:end="157:77"><expr pos:start="157:25" pos:end="157:76"><call pos:start="157:25" pos:end="157:76"><name pos:start="157:25" pos:end="157:44">bytestream2_put_byte</name><argument_list pos:start="157:45" pos:end="157:76">(<argument pos:start="157:46" pos:end="157:47"><expr pos:start="157:46" pos:end="157:47"><name pos:start="157:46" pos:end="157:47">pb</name></expr></argument>, <argument pos:start="157:50" pos:end="157:75"><expr pos:start="157:50" pos:end="157:75"><call pos:start="157:50" pos:end="157:75"><name pos:start="157:50" pos:end="157:69">bytestream2_get_byte</name><argument_list pos:start="157:70" pos:end="157:75">(<argument pos:start="157:71" pos:end="157:74"><expr pos:start="157:71" pos:end="157:74"><operator pos:start="157:71" pos:end="157:71">&amp;</operator><name pos:start="157:72" pos:end="157:74">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="159:25" pos:end="159:77"><expr pos:start="159:25" pos:end="159:76"><call pos:start="159:25" pos:end="159:76"><name pos:start="159:25" pos:end="159:44">bytestream2_put_byte</name><argument_list pos:start="159:45" pos:end="159:76">(<argument pos:start="159:46" pos:end="159:47"><expr pos:start="159:46" pos:end="159:47"><name pos:start="159:46" pos:end="159:47">pb</name></expr></argument>, <argument pos:start="159:50" pos:end="159:75"><expr pos:start="159:50" pos:end="159:75"><call pos:start="159:50" pos:end="159:75"><name pos:start="159:50" pos:end="159:69">bytestream2_get_byte</name><argument_list pos:start="159:70" pos:end="159:75">(<argument pos:start="159:71" pos:end="159:74"><expr pos:start="159:71" pos:end="159:74"><operator pos:start="159:71" pos:end="159:71">&amp;</operator><name pos:start="159:72" pos:end="159:74">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="161:25" pos:end="161:77"><expr pos:start="161:25" pos:end="161:76"><call pos:start="161:25" pos:end="161:76"><name pos:start="161:25" pos:end="161:44">bytestream2_put_byte</name><argument_list pos:start="161:45" pos:end="161:76">(<argument pos:start="161:46" pos:end="161:47"><expr pos:start="161:46" pos:end="161:47"><name pos:start="161:46" pos:end="161:47">pb</name></expr></argument>, <argument pos:start="161:50" pos:end="161:75"><expr pos:start="161:50" pos:end="161:75"><call pos:start="161:50" pos:end="161:75"><name pos:start="161:50" pos:end="161:69">bytestream2_get_byte</name><argument_list pos:start="161:70" pos:end="161:75">(<argument pos:start="161:71" pos:end="161:74"><expr pos:start="161:71" pos:end="161:74"><operator pos:start="161:71" pos:end="161:71">&amp;</operator><name pos:start="161:72" pos:end="161:74">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="163:25" pos:end="163:41"><expr pos:start="163:25" pos:end="163:40"><name pos:start="163:25" pos:end="163:27">len</name> <operator pos:start="163:29" pos:end="163:29">=</operator> <name pos:start="163:31" pos:end="163:36">opcode</name> <operator pos:start="163:38" pos:end="163:38">&amp;</operator> <literal type="number" pos:start="163:40" pos:end="163:40">3</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="165:25" pos:end="181:25"><if pos:start="165:25" pos:end="169:25">if <condition pos:start="165:28" pos:end="165:33">(<expr pos:start="165:29" pos:end="165:32"><operator pos:start="165:29" pos:end="165:29">!</operator><name pos:start="165:30" pos:end="165:32">len</name></expr>)</condition> <block pos:start="165:35" pos:end="169:25">{<block_content pos:start="167:29" pos:end="167:39">

                            <expr_stmt pos:start="167:29" pos:end="167:39"><expr pos:start="167:29" pos:end="167:38"><name pos:start="167:29" pos:end="167:34">repeat</name> <operator pos:start="167:36" pos:end="167:36">=</operator> <literal type="number" pos:start="167:38" pos:end="167:38">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="169:27" pos:end="181:25">else <block pos:start="169:32" pos:end="181:25">{<block_content pos:start="171:29" pos:end="179:63">

                            <do pos:start="171:29" pos:end="177:42">do <block pos:start="171:32" pos:end="177:29">{<block_content pos:start="173:33" pos:end="175:38">

                                <expr_stmt pos:start="173:33" pos:end="173:83"><expr pos:start="173:33" pos:end="173:82"><call pos:start="173:33" pos:end="173:82"><name pos:start="173:33" pos:end="173:52">bytestream2_put_byte</name><argument_list pos:start="173:53" pos:end="173:82">(<argument pos:start="173:54" pos:end="173:55"><expr pos:start="173:54" pos:end="173:55"><name pos:start="173:54" pos:end="173:55">pb</name></expr></argument>, <argument pos:start="173:58" pos:end="173:81"><expr pos:start="173:58" pos:end="173:81"><call pos:start="173:58" pos:end="173:81"><name pos:start="173:58" pos:end="173:77">bytestream2_get_byte</name><argument_list pos:start="173:78" pos:end="173:81">(<argument pos:start="173:79" pos:end="173:80"><expr pos:start="173:79" pos:end="173:80"><name pos:start="173:79" pos:end="173:80">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="175:33" pos:end="175:38"><expr pos:start="175:33" pos:end="175:37"><operator pos:start="175:33" pos:end="175:34">--</operator><name pos:start="175:35" pos:end="175:37">len</name></expr>;</expr_stmt>

                            </block_content>}</block> while <condition pos:start="177:37" pos:end="177:41">(<expr pos:start="177:38" pos:end="177:40"><name pos:start="177:38" pos:end="177:40">len</name></expr>)</condition>;</do>

                            <expr_stmt pos:start="179:29" pos:end="179:63"><expr pos:start="179:29" pos:end="179:62"><name pos:start="179:29" pos:end="179:34">opcode</name> <operator pos:start="179:36" pos:end="179:36">=</operator> <call pos:start="179:38" pos:end="179:62"><name pos:start="179:38" pos:end="179:58">bytestream2_peek_byte</name><argument_list pos:start="179:59" pos:end="179:62">(<argument pos:start="179:60" pos:end="179:61"><expr pos:start="179:60" pos:end="179:61"><name pos:start="179:60" pos:end="179:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <continue pos:start="183:25" pos:end="183:33">continue;</continue>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="193:13" pos:end="251:13"><if pos:start="193:13" pos:end="247:13">if <condition pos:start="193:16" pos:end="193:31">(<expr pos:start="193:17" pos:end="193:30"><name pos:start="193:17" pos:end="193:22">opcode</name> <operator pos:start="193:24" pos:end="193:25">&gt;=</operator> <literal type="number" pos:start="193:27" pos:end="193:30">0x40</literal></expr>)</condition> <block pos:start="193:33" pos:end="247:13">{<block_content pos:start="195:17" pos:end="245:25">

                <expr_stmt pos:start="195:17" pos:end="195:40"><expr pos:start="195:17" pos:end="195:39"><call pos:start="195:17" pos:end="195:39"><name pos:start="195:17" pos:end="195:32">bytestream2_skip</name><argument_list pos:start="195:33" pos:end="195:39">(<argument pos:start="195:34" pos:end="195:35"><expr pos:start="195:34" pos:end="195:35"><name pos:start="195:34" pos:end="195:35">gb</name></expr></argument>, <argument pos:start="195:38" pos:end="195:38"><expr pos:start="195:38" pos:end="195:38"><literal type="number" pos:start="195:38" pos:end="195:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:79"><expr pos:start="197:17" pos:end="197:78"><name pos:start="197:17" pos:end="197:19">pos</name> <operator pos:start="197:21" pos:end="197:21">=</operator> <operator pos:start="197:23" pos:end="197:23">-</operator> <operator pos:start="197:25" pos:end="197:25">(</operator><operator pos:start="197:26" pos:end="197:26">(</operator><name pos:start="197:27" pos:end="197:32">opcode</name> <operator pos:start="197:34" pos:end="197:35">&gt;&gt;</operator> <literal type="number" pos:start="197:37" pos:end="197:37">2</literal><operator pos:start="197:38" pos:end="197:38">)</operator> <operator pos:start="197:40" pos:end="197:40">&amp;</operator> <literal type="number" pos:start="197:42" pos:end="197:42">7</literal><operator pos:start="197:43" pos:end="197:43">)</operator> <operator pos:start="197:45" pos:end="197:45">-</operator> <literal type="number" pos:start="197:47" pos:end="197:49">1</literal> <operator pos:start="197:49" pos:end="197:49">-</operator> <literal type="number" pos:start="197:51" pos:end="197:51">8</literal> <operator pos:start="197:53" pos:end="197:53">*</operator> <call pos:start="197:55" pos:end="197:78"><name pos:start="197:55" pos:end="197:74">bytestream2_get_byte</name><argument_list pos:start="197:75" pos:end="197:78">(<argument pos:start="197:76" pos:end="197:77"><expr pos:start="197:76" pos:end="197:77"><name pos:start="197:76" pos:end="197:77">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:40"><expr pos:start="199:17" pos:end="199:39"><name pos:start="199:17" pos:end="199:19">len</name> <operator pos:start="199:21" pos:end="199:21">=</operator> <operator pos:start="199:23" pos:end="199:23">(</operator><name pos:start="199:24" pos:end="199:29">opcode</name> <operator pos:start="199:31" pos:end="199:32">&gt;&gt;</operator> <literal type="number" pos:start="199:34" pos:end="199:34">5</literal><operator pos:start="199:35" pos:end="199:35">)</operator> <operator pos:start="199:37" pos:end="199:37">-</operator> <literal type="number" pos:start="199:39" pos:end="199:39">1</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="203:17" pos:end="203:92"><expr pos:start="203:17" pos:end="203:91"><call pos:start="203:17" pos:end="203:91"><name pos:start="203:17" pos:end="203:32">bytestream2_init</name><argument_list pos:start="203:33" pos:end="203:91">(<argument pos:start="203:34" pos:end="203:37"><expr pos:start="203:34" pos:end="203:37"><operator pos:start="203:34" pos:end="203:34">&amp;</operator><name pos:start="203:35" pos:end="203:37">gbc</name></expr></argument>, <argument pos:start="203:40" pos:end="203:55"><expr pos:start="203:40" pos:end="203:55"><name pos:start="203:40" pos:end="203:55"><name pos:start="203:40" pos:end="203:41">pb</name><operator pos:start="203:42" pos:end="203:43">-&gt;</operator><name pos:start="203:44" pos:end="203:55">buffer_start</name></name></expr></argument>, <argument pos:start="203:58" pos:end="203:90"><expr pos:start="203:58" pos:end="203:90"><name pos:start="203:58" pos:end="203:71"><name pos:start="203:58" pos:end="203:59">pb</name><operator pos:start="203:60" pos:end="203:61">-&gt;</operator><name pos:start="203:62" pos:end="203:71">buffer_end</name></name> <operator pos:start="203:73" pos:end="203:73">-</operator> <name pos:start="203:75" pos:end="203:90"><name pos:start="203:75" pos:end="203:76">pb</name><operator pos:start="203:77" pos:end="203:78">-&gt;</operator><name pos:start="203:79" pos:end="203:90">buffer_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:79"><expr pos:start="205:17" pos:end="205:78"><call pos:start="205:17" pos:end="205:78"><name pos:start="205:17" pos:end="205:32">bytestream2_seek</name><argument_list pos:start="205:33" pos:end="205:78">(<argument pos:start="205:34" pos:end="205:37"><expr pos:start="205:34" pos:end="205:37"><operator pos:start="205:34" pos:end="205:34">&amp;</operator><name pos:start="205:35" pos:end="205:37">gbc</name></expr></argument>, <argument pos:start="205:40" pos:end="205:67"><expr pos:start="205:40" pos:end="205:67"><call pos:start="205:40" pos:end="205:61"><name pos:start="205:40" pos:end="205:57">bytestream2_tell_p</name><argument_list pos:start="205:58" pos:end="205:61">(<argument pos:start="205:59" pos:end="205:60"><expr pos:start="205:59" pos:end="205:60"><name pos:start="205:59" pos:end="205:60">pb</name></expr></argument>)</argument_list></call> <operator pos:start="205:63" pos:end="205:63">+</operator> <name pos:start="205:65" pos:end="205:67">pos</name></expr></argument>, <argument pos:start="205:70" pos:end="205:77"><expr pos:start="205:70" pos:end="205:77"><name pos:start="205:70" pos:end="205:77">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="209:17" pos:end="209:69"><expr pos:start="209:17" pos:end="209:68"><call pos:start="209:17" pos:end="209:68"><name pos:start="209:17" pos:end="209:36">bytestream2_put_byte</name><argument_list pos:start="209:37" pos:end="209:68">(<argument pos:start="209:38" pos:end="209:39"><expr pos:start="209:38" pos:end="209:39"><name pos:start="209:38" pos:end="209:39">pb</name></expr></argument>, <argument pos:start="209:42" pos:end="209:67"><expr pos:start="209:42" pos:end="209:67"><call pos:start="209:42" pos:end="209:67"><name pos:start="209:42" pos:end="209:61">bytestream2_get_byte</name><argument_list pos:start="209:62" pos:end="209:67">(<argument pos:start="209:63" pos:end="209:66"><expr pos:start="209:63" pos:end="209:66"><operator pos:start="209:63" pos:end="209:63">&amp;</operator><name pos:start="209:64" pos:end="209:66">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:69"><expr pos:start="211:17" pos:end="211:68"><call pos:start="211:17" pos:end="211:68"><name pos:start="211:17" pos:end="211:36">bytestream2_put_byte</name><argument_list pos:start="211:37" pos:end="211:68">(<argument pos:start="211:38" pos:end="211:39"><expr pos:start="211:38" pos:end="211:39"><name pos:start="211:38" pos:end="211:39">pb</name></expr></argument>, <argument pos:start="211:42" pos:end="211:67"><expr pos:start="211:42" pos:end="211:67"><call pos:start="211:42" pos:end="211:67"><name pos:start="211:42" pos:end="211:61">bytestream2_get_byte</name><argument_list pos:start="211:62" pos:end="211:67">(<argument pos:start="211:63" pos:end="211:66"><expr pos:start="211:63" pos:end="211:66"><operator pos:start="211:63" pos:end="211:63">&amp;</operator><name pos:start="211:64" pos:end="211:66">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <do pos:start="213:17" pos:end="219:30">do <block pos:start="213:20" pos:end="219:17">{<block_content pos:start="215:21" pos:end="217:26">

                    <expr_stmt pos:start="215:21" pos:end="215:73"><expr pos:start="215:21" pos:end="215:72"><call pos:start="215:21" pos:end="215:72"><name pos:start="215:21" pos:end="215:40">bytestream2_put_byte</name><argument_list pos:start="215:41" pos:end="215:72">(<argument pos:start="215:42" pos:end="215:43"><expr pos:start="215:42" pos:end="215:43"><name pos:start="215:42" pos:end="215:43">pb</name></expr></argument>, <argument pos:start="215:46" pos:end="215:71"><expr pos:start="215:46" pos:end="215:71"><call pos:start="215:46" pos:end="215:71"><name pos:start="215:46" pos:end="215:65">bytestream2_get_byte</name><argument_list pos:start="215:66" pos:end="215:71">(<argument pos:start="215:67" pos:end="215:70"><expr pos:start="215:67" pos:end="215:70"><operator pos:start="215:67" pos:end="215:67">&amp;</operator><name pos:start="215:68" pos:end="215:70">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="217:21" pos:end="217:26"><expr pos:start="217:21" pos:end="217:25"><operator pos:start="217:21" pos:end="217:22">--</operator><name pos:start="217:23" pos:end="217:25">len</name></expr>;</expr_stmt>

                </block_content>}</block> while <condition pos:start="219:25" pos:end="219:29">(<expr pos:start="219:26" pos:end="219:28"><name pos:start="219:26" pos:end="219:28">len</name></expr>)</condition>;</do>



                <expr_stmt pos:start="223:17" pos:end="223:33"><expr pos:start="223:17" pos:end="223:32"><name pos:start="223:17" pos:end="223:19">len</name> <operator pos:start="223:21" pos:end="223:21">=</operator> <name pos:start="223:23" pos:end="223:28">opcode</name> <operator pos:start="223:30" pos:end="223:30">&amp;</operator> <literal type="number" pos:start="223:32" pos:end="223:32">3</literal></expr>;</expr_stmt>



                <if_stmt pos:start="227:17" pos:end="243:17"><if pos:start="227:17" pos:end="231:17">if <condition pos:start="227:20" pos:end="227:25">(<expr pos:start="227:21" pos:end="227:24"><operator pos:start="227:21" pos:end="227:21">!</operator><name pos:start="227:22" pos:end="227:24">len</name></expr>)</condition> <block pos:start="227:27" pos:end="231:17">{<block_content pos:start="229:21" pos:end="229:31">

                    <expr_stmt pos:start="229:21" pos:end="229:31"><expr pos:start="229:21" pos:end="229:30"><name pos:start="229:21" pos:end="229:26">repeat</name> <operator pos:start="229:28" pos:end="229:28">=</operator> <literal type="number" pos:start="229:30" pos:end="229:30">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="231:19" pos:end="243:17">else <block pos:start="231:24" pos:end="243:17">{<block_content pos:start="233:21" pos:end="241:55">

                    <do pos:start="233:21" pos:end="239:34">do <block pos:start="233:24" pos:end="239:21">{<block_content pos:start="235:25" pos:end="237:30">

                        <expr_stmt pos:start="235:25" pos:end="235:75"><expr pos:start="235:25" pos:end="235:74"><call pos:start="235:25" pos:end="235:74"><name pos:start="235:25" pos:end="235:44">bytestream2_put_byte</name><argument_list pos:start="235:45" pos:end="235:74">(<argument pos:start="235:46" pos:end="235:47"><expr pos:start="235:46" pos:end="235:47"><name pos:start="235:46" pos:end="235:47">pb</name></expr></argument>, <argument pos:start="235:50" pos:end="235:73"><expr pos:start="235:50" pos:end="235:73"><call pos:start="235:50" pos:end="235:73"><name pos:start="235:50" pos:end="235:69">bytestream2_get_byte</name><argument_list pos:start="235:70" pos:end="235:73">(<argument pos:start="235:71" pos:end="235:72"><expr pos:start="235:71" pos:end="235:72"><name pos:start="235:71" pos:end="235:72">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="237:25" pos:end="237:30"><expr pos:start="237:25" pos:end="237:29"><operator pos:start="237:25" pos:end="237:26">--</operator><name pos:start="237:27" pos:end="237:29">len</name></expr>;</expr_stmt>

                    </block_content>}</block> while <condition pos:start="239:29" pos:end="239:33">(<expr pos:start="239:30" pos:end="239:32"><name pos:start="239:30" pos:end="239:32">len</name></expr>)</condition>;</do>

                    <expr_stmt pos:start="241:21" pos:end="241:55"><expr pos:start="241:21" pos:end="241:54"><name pos:start="241:21" pos:end="241:26">opcode</name> <operator pos:start="241:28" pos:end="241:28">=</operator> <call pos:start="241:30" pos:end="241:54"><name pos:start="241:30" pos:end="241:50">bytestream2_peek_byte</name><argument_list pos:start="241:51" pos:end="241:54">(<argument pos:start="241:52" pos:end="241:53"><expr pos:start="241:52" pos:end="241:53"><name pos:start="241:52" pos:end="241:53">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <continue pos:start="245:17" pos:end="245:25">continue;</continue>

            </block_content>}</block></if> <if type="elseif" pos:start="247:15" pos:end="251:13">else if <condition pos:start="247:23" pos:end="247:37">(<expr pos:start="247:24" pos:end="247:36"><name pos:start="247:24" pos:end="247:29">opcode</name> <operator pos:start="247:31" pos:end="247:31">&lt;</operator> <literal type="number" pos:start="247:33" pos:end="247:36">0x20</literal></expr>)</condition> <block pos:start="247:39" pos:end="251:13">{<block_content pos:start="249:17" pos:end="249:22">

                <break pos:start="249:17" pos:end="249:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:32"><expr pos:start="253:13" pos:end="253:31"><name pos:start="253:13" pos:end="253:15">len</name> <operator pos:start="253:17" pos:end="253:17">=</operator> <name pos:start="253:19" pos:end="253:24">opcode</name> <operator pos:start="253:26" pos:end="253:26">&amp;</operator> <literal type="number" pos:start="253:28" pos:end="253:31">0x1F</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:36"><expr pos:start="255:13" pos:end="255:35"><call pos:start="255:13" pos:end="255:35"><name pos:start="255:13" pos:end="255:28">bytestream2_skip</name><argument_list pos:start="255:29" pos:end="255:35">(<argument pos:start="255:30" pos:end="255:31"><expr pos:start="255:30" pos:end="255:31"><name pos:start="255:30" pos:end="255:31">gb</name></expr></argument>, <argument pos:start="255:34" pos:end="255:34"><expr pos:start="255:34" pos:end="255:34"><literal type="number" pos:start="255:34" pos:end="255:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="257:13" pos:end="273:13"><if pos:start="257:13" pos:end="273:13">if <condition pos:start="257:16" pos:end="257:21">(<expr pos:start="257:17" pos:end="257:20"><operator pos:start="257:17" pos:end="257:17">!</operator><name pos:start="257:18" pos:end="257:20">len</name></expr>)</condition> <block pos:start="257:23" pos:end="273:13">{<block_content pos:start="259:17" pos:end="271:53">

                <if_stmt pos:start="259:17" pos:end="269:17"><if pos:start="259:17" pos:end="269:17">if <condition pos:start="259:20" pos:end="259:47">(<expr pos:start="259:21" pos:end="259:46"><operator pos:start="259:21" pos:end="259:21">!</operator><call pos:start="259:22" pos:end="259:46"><name pos:start="259:22" pos:end="259:42">bytestream2_peek_byte</name><argument_list pos:start="259:43" pos:end="259:46">(<argument pos:start="259:44" pos:end="259:45"><expr pos:start="259:44" pos:end="259:45"><name pos:start="259:44" pos:end="259:45">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="259:49" pos:end="269:17">{<block_content pos:start="261:21" pos:end="267:95">

                    <do pos:start="261:21" pos:end="267:95">do <block pos:start="261:24" pos:end="267:21">{<block_content pos:start="263:25" pos:end="265:35">

                        <expr_stmt pos:start="263:25" pos:end="263:48"><expr pos:start="263:25" pos:end="263:47"><call pos:start="263:25" pos:end="263:47"><name pos:start="263:25" pos:end="263:40">bytestream2_skip</name><argument_list pos:start="263:41" pos:end="263:47">(<argument pos:start="263:42" pos:end="263:43"><expr pos:start="263:42" pos:end="263:43"><name pos:start="263:42" pos:end="263:43">gb</name></expr></argument>, <argument pos:start="263:46" pos:end="263:46"><expr pos:start="263:46" pos:end="263:46"><literal type="number" pos:start="263:46" pos:end="263:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="265:25" pos:end="265:35"><expr pos:start="265:25" pos:end="265:34"><name pos:start="265:25" pos:end="265:27">len</name> <operator pos:start="265:29" pos:end="265:30">+=</operator> <literal type="number" pos:start="265:32" pos:end="265:34">255</literal></expr>;</expr_stmt>

                    </block_content>}</block> while <condition pos:start="267:29" pos:end="267:94">(<expr pos:start="267:30" pos:end="267:93"><operator pos:start="267:30" pos:end="267:30">!</operator><call pos:start="267:31" pos:end="267:55"><name pos:start="267:31" pos:end="267:51">bytestream2_peek_byte</name><argument_list pos:start="267:52" pos:end="267:55">(<argument pos:start="267:53" pos:end="267:54"><expr pos:start="267:53" pos:end="267:54"><name pos:start="267:53" pos:end="267:54">gb</name></expr></argument>)</argument_list></call> <operator pos:start="267:57" pos:end="267:58">&amp;&amp;</operator> <call pos:start="267:60" pos:end="267:89"><name pos:start="267:60" pos:end="267:85">bytestream2_get_bytes_left</name><argument_list pos:start="267:86" pos:end="267:89">(<argument pos:start="267:87" pos:end="267:88"><expr pos:start="267:87" pos:end="267:88"><name pos:start="267:87" pos:end="267:88">gb</name></expr></argument>)</argument_list></call> <operator pos:start="267:91" pos:end="267:91">&gt;</operator> <literal type="number" pos:start="267:93" pos:end="267:93">0</literal></expr>)</condition>;</do>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="271:17" pos:end="271:53"><expr pos:start="271:17" pos:end="271:52"><name pos:start="271:17" pos:end="271:19">len</name> <operator pos:start="271:21" pos:end="271:22">+=</operator> <call pos:start="271:24" pos:end="271:47"><name pos:start="271:24" pos:end="271:43">bytestream2_get_byte</name><argument_list pos:start="271:44" pos:end="271:47">(<argument pos:start="271:45" pos:end="271:46"><expr pos:start="271:45" pos:end="271:46"><name pos:start="271:45" pos:end="271:46">gb</name></expr></argument>)</argument_list></call> <operator pos:start="271:49" pos:end="271:49">+</operator> <literal type="number" pos:start="271:51" pos:end="271:52">31</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="275:13" pos:end="275:41"><expr pos:start="275:13" pos:end="275:40"><name pos:start="275:13" pos:end="275:13">i</name> <operator pos:start="275:15" pos:end="275:15">=</operator> <call pos:start="275:17" pos:end="275:40"><name pos:start="275:17" pos:end="275:36">bytestream2_get_le16</name><argument_list pos:start="275:37" pos:end="275:40">(<argument pos:start="275:38" pos:end="275:39"><expr pos:start="275:38" pos:end="275:39"><name pos:start="275:38" pos:end="275:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:33"><expr pos:start="277:13" pos:end="277:32"><name pos:start="277:13" pos:end="277:15">pos</name> <operator pos:start="277:17" pos:end="277:17">=</operator> <operator pos:start="277:19" pos:end="277:19">-</operator> <operator pos:start="277:21" pos:end="277:21">(</operator><name pos:start="277:22" pos:end="277:22">i</name> <operator pos:start="277:24" pos:end="277:25">&gt;&gt;</operator> <literal type="number" pos:start="277:27" pos:end="277:27">2</literal><operator pos:start="277:28" pos:end="277:28">)</operator> <operator pos:start="277:30" pos:end="277:30">-</operator> <literal type="number" pos:start="277:32" pos:end="277:32">1</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="281:13" pos:end="281:88"><expr pos:start="281:13" pos:end="281:87"><call pos:start="281:13" pos:end="281:87"><name pos:start="281:13" pos:end="281:28">bytestream2_init</name><argument_list pos:start="281:29" pos:end="281:87">(<argument pos:start="281:30" pos:end="281:33"><expr pos:start="281:30" pos:end="281:33"><operator pos:start="281:30" pos:end="281:30">&amp;</operator><name pos:start="281:31" pos:end="281:33">gbc</name></expr></argument>, <argument pos:start="281:36" pos:end="281:51"><expr pos:start="281:36" pos:end="281:51"><name pos:start="281:36" pos:end="281:51"><name pos:start="281:36" pos:end="281:37">pb</name><operator pos:start="281:38" pos:end="281:39">-&gt;</operator><name pos:start="281:40" pos:end="281:51">buffer_start</name></name></expr></argument>, <argument pos:start="281:54" pos:end="281:86"><expr pos:start="281:54" pos:end="281:86"><name pos:start="281:54" pos:end="281:67"><name pos:start="281:54" pos:end="281:55">pb</name><operator pos:start="281:56" pos:end="281:57">-&gt;</operator><name pos:start="281:58" pos:end="281:67">buffer_end</name></name> <operator pos:start="281:69" pos:end="281:69">-</operator> <name pos:start="281:71" pos:end="281:86"><name pos:start="281:71" pos:end="281:72">pb</name><operator pos:start="281:73" pos:end="281:74">-&gt;</operator><name pos:start="281:75" pos:end="281:86">buffer_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="283:13" pos:end="283:75"><expr pos:start="283:13" pos:end="283:74"><call pos:start="283:13" pos:end="283:74"><name pos:start="283:13" pos:end="283:28">bytestream2_seek</name><argument_list pos:start="283:29" pos:end="283:74">(<argument pos:start="283:30" pos:end="283:33"><expr pos:start="283:30" pos:end="283:33"><operator pos:start="283:30" pos:end="283:30">&amp;</operator><name pos:start="283:31" pos:end="283:33">gbc</name></expr></argument>, <argument pos:start="283:36" pos:end="283:63"><expr pos:start="283:36" pos:end="283:63"><call pos:start="283:36" pos:end="283:57"><name pos:start="283:36" pos:end="283:53">bytestream2_tell_p</name><argument_list pos:start="283:54" pos:end="283:57">(<argument pos:start="283:55" pos:end="283:56"><expr pos:start="283:55" pos:end="283:56"><name pos:start="283:55" pos:end="283:56">pb</name></expr></argument>)</argument_list></call> <operator pos:start="283:59" pos:end="283:59">+</operator> <name pos:start="283:61" pos:end="283:63">pos</name></expr></argument>, <argument pos:start="283:66" pos:end="283:73"><expr pos:start="283:66" pos:end="283:73"><name pos:start="283:66" pos:end="283:73">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="287:13" pos:end="309:13"><if pos:start="287:13" pos:end="301:13">if <condition pos:start="287:16" pos:end="287:79">(<expr pos:start="287:17" pos:end="287:78"><name pos:start="287:17" pos:end="287:19">len</name> <operator pos:start="287:21" pos:end="287:21">&lt;</operator> <literal type="number" pos:start="287:23" pos:end="287:23">6</literal> <operator pos:start="287:25" pos:end="287:26">||</operator> <call pos:start="287:28" pos:end="287:49"><name pos:start="287:28" pos:end="287:45">bytestream2_tell_p</name><argument_list pos:start="287:46" pos:end="287:49">(<argument pos:start="287:47" pos:end="287:48"><expr pos:start="287:47" pos:end="287:48"><name pos:start="287:47" pos:end="287:48">pb</name></expr></argument>)</argument_list></call> <operator pos:start="287:51" pos:end="287:51">-</operator> <call pos:start="287:53" pos:end="287:74"><name pos:start="287:53" pos:end="287:68">bytestream2_tell</name><argument_list pos:start="287:69" pos:end="287:74">(<argument pos:start="287:70" pos:end="287:73"><expr pos:start="287:70" pos:end="287:73"><operator pos:start="287:70" pos:end="287:70">&amp;</operator><name pos:start="287:71" pos:end="287:73">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="287:76" pos:end="287:76">&lt;</operator> <literal type="number" pos:start="287:78" pos:end="287:78">4</literal></expr>)</condition> <block pos:start="287:81" pos:end="301:13">{<block_content pos:start="289:17" pos:end="299:30">

                <expr_stmt pos:start="289:17" pos:end="289:69"><expr pos:start="289:17" pos:end="289:68"><call pos:start="289:17" pos:end="289:68"><name pos:start="289:17" pos:end="289:36">bytestream2_put_byte</name><argument_list pos:start="289:37" pos:end="289:68">(<argument pos:start="289:38" pos:end="289:39"><expr pos:start="289:38" pos:end="289:39"><name pos:start="289:38" pos:end="289:39">pb</name></expr></argument>, <argument pos:start="289:42" pos:end="289:67"><expr pos:start="289:42" pos:end="289:67"><call pos:start="289:42" pos:end="289:67"><name pos:start="289:42" pos:end="289:61">bytestream2_get_byte</name><argument_list pos:start="289:62" pos:end="289:67">(<argument pos:start="289:63" pos:end="289:66"><expr pos:start="289:63" pos:end="289:66"><operator pos:start="289:63" pos:end="289:63">&amp;</operator><name pos:start="289:64" pos:end="289:66">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="291:17" pos:end="291:69"><expr pos:start="291:17" pos:end="291:68"><call pos:start="291:17" pos:end="291:68"><name pos:start="291:17" pos:end="291:36">bytestream2_put_byte</name><argument_list pos:start="291:37" pos:end="291:68">(<argument pos:start="291:38" pos:end="291:39"><expr pos:start="291:38" pos:end="291:39"><name pos:start="291:38" pos:end="291:39">pb</name></expr></argument>, <argument pos:start="291:42" pos:end="291:67"><expr pos:start="291:42" pos:end="291:67"><call pos:start="291:42" pos:end="291:67"><name pos:start="291:42" pos:end="291:61">bytestream2_get_byte</name><argument_list pos:start="291:62" pos:end="291:67">(<argument pos:start="291:63" pos:end="291:66"><expr pos:start="291:63" pos:end="291:66"><operator pos:start="291:63" pos:end="291:63">&amp;</operator><name pos:start="291:64" pos:end="291:66">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <do pos:start="293:17" pos:end="299:30">do <block pos:start="293:20" pos:end="299:17">{<block_content pos:start="295:21" pos:end="297:26">

                    <expr_stmt pos:start="295:21" pos:end="295:73"><expr pos:start="295:21" pos:end="295:72"><call pos:start="295:21" pos:end="295:72"><name pos:start="295:21" pos:end="295:40">bytestream2_put_byte</name><argument_list pos:start="295:41" pos:end="295:72">(<argument pos:start="295:42" pos:end="295:43"><expr pos:start="295:42" pos:end="295:43"><name pos:start="295:42" pos:end="295:43">pb</name></expr></argument>, <argument pos:start="295:46" pos:end="295:71"><expr pos:start="295:46" pos:end="295:71"><call pos:start="295:46" pos:end="295:71"><name pos:start="295:46" pos:end="295:65">bytestream2_get_byte</name><argument_list pos:start="295:66" pos:end="295:71">(<argument pos:start="295:67" pos:end="295:70"><expr pos:start="295:67" pos:end="295:70"><operator pos:start="295:67" pos:end="295:67">&amp;</operator><name pos:start="295:68" pos:end="295:70">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="297:21" pos:end="297:26"><expr pos:start="297:21" pos:end="297:25"><operator pos:start="297:21" pos:end="297:22">--</operator><name pos:start="297:23" pos:end="297:25">len</name></expr>;</expr_stmt>

                </block_content>}</block> while <condition pos:start="299:25" pos:end="299:29">(<expr pos:start="299:26" pos:end="299:28"><name pos:start="299:26" pos:end="299:28">len</name></expr>)</condition>;</do>

            </block_content>}</block></if> <else pos:start="301:15" pos:end="309:13">else <block pos:start="301:20" pos:end="309:13">{<block_content pos:start="303:17" pos:end="307:73">

                <expr_stmt pos:start="303:17" pos:end="303:69"><expr pos:start="303:17" pos:end="303:68"><call pos:start="303:17" pos:end="303:68"><name pos:start="303:17" pos:end="303:36">bytestream2_put_le32</name><argument_list pos:start="303:37" pos:end="303:68">(<argument pos:start="303:38" pos:end="303:39"><expr pos:start="303:38" pos:end="303:39"><name pos:start="303:38" pos:end="303:39">pb</name></expr></argument>, <argument pos:start="303:42" pos:end="303:67"><expr pos:start="303:42" pos:end="303:67"><call pos:start="303:42" pos:end="303:67"><name pos:start="303:42" pos:end="303:61">bytestream2_get_le32</name><argument_list pos:start="303:62" pos:end="303:67">(<argument pos:start="303:63" pos:end="303:66"><expr pos:start="303:63" pos:end="303:66"><operator pos:start="303:63" pos:end="303:63">&amp;</operator><name pos:start="303:64" pos:end="303:66">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="305:17" pos:end="307:73">for <control pos:start="305:21" pos:end="305:47">(<init pos:start="305:22" pos:end="305:35"><expr pos:start="305:22" pos:end="305:34"><name pos:start="305:22" pos:end="305:24">len</name> <operator pos:start="305:26" pos:end="305:26">=</operator> <name pos:start="305:28" pos:end="305:30">len</name> <operator pos:start="305:32" pos:end="305:32">-</operator> <literal type="number" pos:start="305:34" pos:end="305:34">2</literal></expr>;</init> <condition pos:start="305:37" pos:end="305:40"><expr pos:start="305:37" pos:end="305:39"><name pos:start="305:37" pos:end="305:39">len</name></expr>;</condition> <incr pos:start="305:42" pos:end="305:46"><expr pos:start="305:42" pos:end="305:46"><operator pos:start="305:42" pos:end="305:43">--</operator><name pos:start="305:44" pos:end="305:46">len</name></expr></incr>)</control><block type="pseudo" pos:start="307:21" pos:end="307:73"><block_content pos:start="307:21" pos:end="307:73">

                    <expr_stmt pos:start="307:21" pos:end="307:73"><expr pos:start="307:21" pos:end="307:72"><call pos:start="307:21" pos:end="307:72"><name pos:start="307:21" pos:end="307:40">bytestream2_put_byte</name><argument_list pos:start="307:41" pos:end="307:72">(<argument pos:start="307:42" pos:end="307:43"><expr pos:start="307:42" pos:end="307:43"><name pos:start="307:42" pos:end="307:43">pb</name></expr></argument>, <argument pos:start="307:46" pos:end="307:71"><expr pos:start="307:46" pos:end="307:71"><call pos:start="307:46" pos:end="307:71"><name pos:start="307:46" pos:end="307:65">bytestream2_get_byte</name><argument_list pos:start="307:66" pos:end="307:71">(<argument pos:start="307:67" pos:end="307:70"><expr pos:start="307:67" pos:end="307:70"><operator pos:start="307:67" pos:end="307:67">&amp;</operator><name pos:start="307:68" pos:end="307:70">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="311:13" pos:end="311:24"><expr pos:start="311:13" pos:end="311:23"><name pos:start="311:13" pos:end="311:15">len</name> <operator pos:start="311:17" pos:end="311:17">=</operator> <name pos:start="311:19" pos:end="311:19">i</name> <operator pos:start="311:21" pos:end="311:21">&amp;</operator> <literal type="number" pos:start="311:23" pos:end="311:23">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="313:13" pos:end="329:13"><if pos:start="313:13" pos:end="317:13">if <condition pos:start="313:16" pos:end="313:21">(<expr pos:start="313:17" pos:end="313:20"><operator pos:start="313:17" pos:end="313:17">!</operator><name pos:start="313:18" pos:end="313:20">len</name></expr>)</condition> <block pos:start="313:23" pos:end="317:13">{<block_content pos:start="315:17" pos:end="315:27">

                <expr_stmt pos:start="315:17" pos:end="315:27"><expr pos:start="315:17" pos:end="315:26"><name pos:start="315:17" pos:end="315:22">repeat</name> <operator pos:start="315:24" pos:end="315:24">=</operator> <literal type="number" pos:start="315:26" pos:end="315:26">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="317:15" pos:end="329:13">else <block pos:start="317:20" pos:end="329:13">{<block_content pos:start="319:17" pos:end="327:51">

                <do pos:start="319:17" pos:end="325:30">do <block pos:start="319:20" pos:end="325:17">{<block_content pos:start="321:21" pos:end="323:26">

                    <expr_stmt pos:start="321:21" pos:end="321:71"><expr pos:start="321:21" pos:end="321:70"><call pos:start="321:21" pos:end="321:70"><name pos:start="321:21" pos:end="321:40">bytestream2_put_byte</name><argument_list pos:start="321:41" pos:end="321:70">(<argument pos:start="321:42" pos:end="321:43"><expr pos:start="321:42" pos:end="321:43"><name pos:start="321:42" pos:end="321:43">pb</name></expr></argument>, <argument pos:start="321:46" pos:end="321:69"><expr pos:start="321:46" pos:end="321:69"><call pos:start="321:46" pos:end="321:69"><name pos:start="321:46" pos:end="321:65">bytestream2_get_byte</name><argument_list pos:start="321:66" pos:end="321:69">(<argument pos:start="321:67" pos:end="321:68"><expr pos:start="321:67" pos:end="321:68"><name pos:start="321:67" pos:end="321:68">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="323:21" pos:end="323:26"><expr pos:start="323:21" pos:end="323:25"><operator pos:start="323:21" pos:end="323:22">--</operator><name pos:start="323:23" pos:end="323:25">len</name></expr>;</expr_stmt>

                </block_content>}</block> while <condition pos:start="325:25" pos:end="325:29">(<expr pos:start="325:26" pos:end="325:28"><name pos:start="325:26" pos:end="325:28">len</name></expr>)</condition>;</do>

                <expr_stmt pos:start="327:17" pos:end="327:51"><expr pos:start="327:17" pos:end="327:50"><name pos:start="327:17" pos:end="327:22">opcode</name> <operator pos:start="327:24" pos:end="327:24">=</operator> <call pos:start="327:26" pos:end="327:50"><name pos:start="327:26" pos:end="327:46">bytestream2_peek_byte</name><argument_list pos:start="327:47" pos:end="327:50">(<argument pos:start="327:48" pos:end="327:49"><expr pos:start="327:48" pos:end="327:49"><name pos:start="327:48" pos:end="327:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="333:9" pos:end="333:32"><expr pos:start="333:9" pos:end="333:31"><call pos:start="333:9" pos:end="333:31"><name pos:start="333:9" pos:end="333:24">bytestream2_skip</name><argument_list pos:start="333:25" pos:end="333:31">(<argument pos:start="333:26" pos:end="333:27"><expr pos:start="333:26" pos:end="333:27"><name pos:start="333:26" pos:end="333:27">gb</name></expr></argument>, <argument pos:start="333:30" pos:end="333:30"><expr pos:start="333:30" pos:end="333:30"><literal type="number" pos:start="333:30" pos:end="333:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="335:9" pos:end="373:9"><if pos:start="335:9" pos:end="373:9">if <condition pos:start="335:12" pos:end="335:26">(<expr pos:start="335:13" pos:end="335:25"><name pos:start="335:13" pos:end="335:18">opcode</name> <operator pos:start="335:20" pos:end="335:20">&lt;</operator> <literal type="number" pos:start="335:22" pos:end="335:25">0x10</literal></expr>)</condition> <block pos:start="335:28" pos:end="373:9">{<block_content pos:start="337:13" pos:end="371:21">

            <expr_stmt pos:start="337:13" pos:end="337:68"><expr pos:start="337:13" pos:end="337:67"><name pos:start="337:13" pos:end="337:15">pos</name> <operator pos:start="337:17" pos:end="337:17">=</operator> <operator pos:start="337:19" pos:end="337:19">-</operator><operator pos:start="337:20" pos:end="337:20">(</operator><name pos:start="337:21" pos:end="337:26">opcode</name> <operator pos:start="337:28" pos:end="337:29">&gt;&gt;</operator> <literal type="number" pos:start="337:31" pos:end="337:31">2</literal><operator pos:start="337:32" pos:end="337:32">)</operator> <operator pos:start="337:34" pos:end="337:34">-</operator> <literal type="number" pos:start="337:36" pos:end="337:38">1</literal> <operator pos:start="337:38" pos:end="337:38">-</operator> <literal type="number" pos:start="337:40" pos:end="337:40">4</literal> <operator pos:start="337:42" pos:end="337:42">*</operator> <call pos:start="337:44" pos:end="337:67"><name pos:start="337:44" pos:end="337:63">bytestream2_get_byte</name><argument_list pos:start="337:64" pos:end="337:67">(<argument pos:start="337:65" pos:end="337:66"><expr pos:start="337:65" pos:end="337:66"><name pos:start="337:65" pos:end="337:66">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="341:13" pos:end="341:88"><expr pos:start="341:13" pos:end="341:87"><call pos:start="341:13" pos:end="341:87"><name pos:start="341:13" pos:end="341:28">bytestream2_init</name><argument_list pos:start="341:29" pos:end="341:87">(<argument pos:start="341:30" pos:end="341:33"><expr pos:start="341:30" pos:end="341:33"><operator pos:start="341:30" pos:end="341:30">&amp;</operator><name pos:start="341:31" pos:end="341:33">gbc</name></expr></argument>, <argument pos:start="341:36" pos:end="341:51"><expr pos:start="341:36" pos:end="341:51"><name pos:start="341:36" pos:end="341:51"><name pos:start="341:36" pos:end="341:37">pb</name><operator pos:start="341:38" pos:end="341:39">-&gt;</operator><name pos:start="341:40" pos:end="341:51">buffer_start</name></name></expr></argument>, <argument pos:start="341:54" pos:end="341:86"><expr pos:start="341:54" pos:end="341:86"><name pos:start="341:54" pos:end="341:67"><name pos:start="341:54" pos:end="341:55">pb</name><operator pos:start="341:56" pos:end="341:57">-&gt;</operator><name pos:start="341:58" pos:end="341:67">buffer_end</name></name> <operator pos:start="341:69" pos:end="341:69">-</operator> <name pos:start="341:71" pos:end="341:86"><name pos:start="341:71" pos:end="341:72">pb</name><operator pos:start="341:73" pos:end="341:74">-&gt;</operator><name pos:start="341:75" pos:end="341:86">buffer_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="343:75"><expr pos:start="343:13" pos:end="343:74"><call pos:start="343:13" pos:end="343:74"><name pos:start="343:13" pos:end="343:28">bytestream2_seek</name><argument_list pos:start="343:29" pos:end="343:74">(<argument pos:start="343:30" pos:end="343:33"><expr pos:start="343:30" pos:end="343:33"><operator pos:start="343:30" pos:end="343:30">&amp;</operator><name pos:start="343:31" pos:end="343:33">gbc</name></expr></argument>, <argument pos:start="343:36" pos:end="343:63"><expr pos:start="343:36" pos:end="343:63"><call pos:start="343:36" pos:end="343:57"><name pos:start="343:36" pos:end="343:53">bytestream2_tell_p</name><argument_list pos:start="343:54" pos:end="343:57">(<argument pos:start="343:55" pos:end="343:56"><expr pos:start="343:55" pos:end="343:56"><name pos:start="343:55" pos:end="343:56">pb</name></expr></argument>)</argument_list></call> <operator pos:start="343:59" pos:end="343:59">+</operator> <name pos:start="343:61" pos:end="343:63">pos</name></expr></argument>, <argument pos:start="343:66" pos:end="343:73"><expr pos:start="343:66" pos:end="343:73"><name pos:start="343:66" pos:end="343:73">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="347:13" pos:end="347:65"><expr pos:start="347:13" pos:end="347:64"><call pos:start="347:13" pos:end="347:64"><name pos:start="347:13" pos:end="347:32">bytestream2_put_byte</name><argument_list pos:start="347:33" pos:end="347:64">(<argument pos:start="347:34" pos:end="347:35"><expr pos:start="347:34" pos:end="347:35"><name pos:start="347:34" pos:end="347:35">pb</name></expr></argument>, <argument pos:start="347:38" pos:end="347:63"><expr pos:start="347:38" pos:end="347:63"><call pos:start="347:38" pos:end="347:63"><name pos:start="347:38" pos:end="347:57">bytestream2_get_byte</name><argument_list pos:start="347:58" pos:end="347:63">(<argument pos:start="347:59" pos:end="347:62"><expr pos:start="347:59" pos:end="347:62"><operator pos:start="347:59" pos:end="347:59">&amp;</operator><name pos:start="347:60" pos:end="347:62">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:65"><expr pos:start="349:13" pos:end="349:64"><call pos:start="349:13" pos:end="349:64"><name pos:start="349:13" pos:end="349:32">bytestream2_put_byte</name><argument_list pos:start="349:33" pos:end="349:64">(<argument pos:start="349:34" pos:end="349:35"><expr pos:start="349:34" pos:end="349:35"><name pos:start="349:34" pos:end="349:35">pb</name></expr></argument>, <argument pos:start="349:38" pos:end="349:63"><expr pos:start="349:38" pos:end="349:63"><call pos:start="349:38" pos:end="349:63"><name pos:start="349:38" pos:end="349:57">bytestream2_get_byte</name><argument_list pos:start="349:58" pos:end="349:63">(<argument pos:start="349:59" pos:end="349:62"><expr pos:start="349:59" pos:end="349:62"><operator pos:start="349:59" pos:end="349:59">&amp;</operator><name pos:start="349:60" pos:end="349:62">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:29"><expr pos:start="351:13" pos:end="351:28"><name pos:start="351:13" pos:end="351:15">len</name> <operator pos:start="351:17" pos:end="351:17">=</operator> <name pos:start="351:19" pos:end="351:24">opcode</name> <operator pos:start="351:26" pos:end="351:26">&amp;</operator> <literal type="number" pos:start="351:28" pos:end="351:28">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="353:13" pos:end="369:13"><if pos:start="353:13" pos:end="357:13">if <condition pos:start="353:16" pos:end="353:21">(<expr pos:start="353:17" pos:end="353:20"><operator pos:start="353:17" pos:end="353:17">!</operator><name pos:start="353:18" pos:end="353:20">len</name></expr>)</condition> <block pos:start="353:23" pos:end="357:13">{<block_content pos:start="355:17" pos:end="355:27">

                <expr_stmt pos:start="355:17" pos:end="355:27"><expr pos:start="355:17" pos:end="355:26"><name pos:start="355:17" pos:end="355:22">repeat</name> <operator pos:start="355:24" pos:end="355:24">=</operator> <literal type="number" pos:start="355:26" pos:end="355:26">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="357:15" pos:end="369:13">else <block pos:start="357:20" pos:end="369:13">{<block_content pos:start="359:17" pos:end="367:51">

                <do pos:start="359:17" pos:end="365:30">do <block pos:start="359:20" pos:end="365:17">{<block_content pos:start="361:21" pos:end="363:26">

                    <expr_stmt pos:start="361:21" pos:end="361:71"><expr pos:start="361:21" pos:end="361:70"><call pos:start="361:21" pos:end="361:70"><name pos:start="361:21" pos:end="361:40">bytestream2_put_byte</name><argument_list pos:start="361:41" pos:end="361:70">(<argument pos:start="361:42" pos:end="361:43"><expr pos:start="361:42" pos:end="361:43"><name pos:start="361:42" pos:end="361:43">pb</name></expr></argument>, <argument pos:start="361:46" pos:end="361:69"><expr pos:start="361:46" pos:end="361:69"><call pos:start="361:46" pos:end="361:69"><name pos:start="361:46" pos:end="361:65">bytestream2_get_byte</name><argument_list pos:start="361:66" pos:end="361:69">(<argument pos:start="361:67" pos:end="361:68"><expr pos:start="361:67" pos:end="361:68"><name pos:start="361:67" pos:end="361:68">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="363:21" pos:end="363:26"><expr pos:start="363:21" pos:end="363:25"><operator pos:start="363:21" pos:end="363:22">--</operator><name pos:start="363:23" pos:end="363:25">len</name></expr>;</expr_stmt>

                </block_content>}</block> while <condition pos:start="365:25" pos:end="365:29">(<expr pos:start="365:26" pos:end="365:28"><name pos:start="365:26" pos:end="365:28">len</name></expr>)</condition>;</do>

                <expr_stmt pos:start="367:17" pos:end="367:51"><expr pos:start="367:17" pos:end="367:50"><name pos:start="367:17" pos:end="367:22">opcode</name> <operator pos:start="367:24" pos:end="367:24">=</operator> <call pos:start="367:26" pos:end="367:50"><name pos:start="367:26" pos:end="367:46">bytestream2_peek_byte</name><argument_list pos:start="367:47" pos:end="367:50">(<argument pos:start="367:48" pos:end="367:49"><expr pos:start="367:48" pos:end="367:49"><name pos:start="367:48" pos:end="367:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <continue pos:start="371:13" pos:end="371:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:25"><expr pos:start="375:9" pos:end="375:24"><name pos:start="375:9" pos:end="375:11">len</name> <operator pos:start="375:13" pos:end="375:13">=</operator> <name pos:start="375:15" pos:end="375:20">opcode</name> <operator pos:start="375:22" pos:end="375:22">&amp;</operator> <literal type="number" pos:start="375:24" pos:end="375:24">7</literal></expr>;</expr_stmt>

        <if_stmt pos:start="377:9" pos:end="393:9"><if pos:start="377:9" pos:end="393:9">if <condition pos:start="377:12" pos:end="377:17">(<expr pos:start="377:13" pos:end="377:16"><operator pos:start="377:13" pos:end="377:13">!</operator><name pos:start="377:14" pos:end="377:16">len</name></expr>)</condition> <block pos:start="377:19" pos:end="393:9">{<block_content pos:start="379:13" pos:end="391:48">

            <if_stmt pos:start="379:13" pos:end="389:13"><if pos:start="379:13" pos:end="389:13">if <condition pos:start="379:16" pos:end="379:43">(<expr pos:start="379:17" pos:end="379:42"><operator pos:start="379:17" pos:end="379:17">!</operator><call pos:start="379:18" pos:end="379:42"><name pos:start="379:18" pos:end="379:38">bytestream2_peek_byte</name><argument_list pos:start="379:39" pos:end="379:42">(<argument pos:start="379:40" pos:end="379:41"><expr pos:start="379:40" pos:end="379:41"><name pos:start="379:40" pos:end="379:41">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="379:45" pos:end="389:13">{<block_content pos:start="381:17" pos:end="387:91">

                <do pos:start="381:17" pos:end="387:91">do <block pos:start="381:20" pos:end="387:17">{<block_content pos:start="383:21" pos:end="385:31">

                    <expr_stmt pos:start="383:21" pos:end="383:44"><expr pos:start="383:21" pos:end="383:43"><call pos:start="383:21" pos:end="383:43"><name pos:start="383:21" pos:end="383:36">bytestream2_skip</name><argument_list pos:start="383:37" pos:end="383:43">(<argument pos:start="383:38" pos:end="383:39"><expr pos:start="383:38" pos:end="383:39"><name pos:start="383:38" pos:end="383:39">gb</name></expr></argument>, <argument pos:start="383:42" pos:end="383:42"><expr pos:start="383:42" pos:end="383:42"><literal type="number" pos:start="383:42" pos:end="383:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="385:21" pos:end="385:31"><expr pos:start="385:21" pos:end="385:30"><name pos:start="385:21" pos:end="385:23">len</name> <operator pos:start="385:25" pos:end="385:26">+=</operator> <literal type="number" pos:start="385:28" pos:end="385:30">255</literal></expr>;</expr_stmt>

                </block_content>}</block> while <condition pos:start="387:25" pos:end="387:90">(<expr pos:start="387:26" pos:end="387:89"><operator pos:start="387:26" pos:end="387:26">!</operator><call pos:start="387:27" pos:end="387:51"><name pos:start="387:27" pos:end="387:47">bytestream2_peek_byte</name><argument_list pos:start="387:48" pos:end="387:51">(<argument pos:start="387:49" pos:end="387:50"><expr pos:start="387:49" pos:end="387:50"><name pos:start="387:49" pos:end="387:50">gb</name></expr></argument>)</argument_list></call> <operator pos:start="387:53" pos:end="387:54">&amp;&amp;</operator> <call pos:start="387:56" pos:end="387:85"><name pos:start="387:56" pos:end="387:81">bytestream2_get_bytes_left</name><argument_list pos:start="387:82" pos:end="387:85">(<argument pos:start="387:83" pos:end="387:84"><expr pos:start="387:83" pos:end="387:84"><name pos:start="387:83" pos:end="387:84">gb</name></expr></argument>)</argument_list></call> <operator pos:start="387:87" pos:end="387:87">&gt;</operator> <literal type="number" pos:start="387:89" pos:end="387:89">0</literal></expr>)</condition>;</do>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="391:13" pos:end="391:48"><expr pos:start="391:13" pos:end="391:47"><name pos:start="391:13" pos:end="391:15">len</name> <operator pos:start="391:17" pos:end="391:18">+=</operator> <call pos:start="391:20" pos:end="391:43"><name pos:start="391:20" pos:end="391:39">bytestream2_get_byte</name><argument_list pos:start="391:40" pos:end="391:43">(<argument pos:start="391:41" pos:end="391:42"><expr pos:start="391:41" pos:end="391:42"><name pos:start="391:41" pos:end="391:42">gb</name></expr></argument>)</argument_list></call> <operator pos:start="391:45" pos:end="391:45">+</operator> <literal type="number" pos:start="391:47" pos:end="391:47">7</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="395:9" pos:end="395:37"><expr pos:start="395:9" pos:end="395:36"><name pos:start="395:9" pos:end="395:9">i</name> <operator pos:start="395:11" pos:end="395:11">=</operator> <call pos:start="395:13" pos:end="395:36"><name pos:start="395:13" pos:end="395:32">bytestream2_get_le16</name><argument_list pos:start="395:33" pos:end="395:36">(<argument pos:start="395:34" pos:end="395:35"><expr pos:start="395:34" pos:end="395:35"><name pos:start="395:34" pos:end="395:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="397:9" pos:end="397:59"><expr pos:start="397:9" pos:end="397:58"><name pos:start="397:9" pos:end="397:11">pos</name> <operator pos:start="397:13" pos:end="397:13">=</operator> <call pos:start="397:15" pos:end="397:36"><name pos:start="397:15" pos:end="397:32">bytestream2_tell_p</name><argument_list pos:start="397:33" pos:end="397:36">(<argument pos:start="397:34" pos:end="397:35"><expr pos:start="397:34" pos:end="397:35"><name pos:start="397:34" pos:end="397:35">pb</name></expr></argument>)</argument_list></call> <operator pos:start="397:38" pos:end="397:38">-</operator> <literal type="number" pos:start="397:40" pos:end="397:43">2048</literal> <operator pos:start="397:45" pos:end="397:45">*</operator> <operator pos:start="397:47" pos:end="397:47">(</operator><name pos:start="397:48" pos:end="397:53">opcode</name> <operator pos:start="397:55" pos:end="397:55">&amp;</operator> <literal type="number" pos:start="397:57" pos:end="397:57">8</literal><operator pos:start="397:58" pos:end="397:58">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="399:9" pos:end="399:29"><expr pos:start="399:9" pos:end="399:28"><name pos:start="399:9" pos:end="399:11">pos</name> <operator pos:start="399:13" pos:end="399:13">=</operator> <name pos:start="399:15" pos:end="399:17">pos</name> <operator pos:start="399:19" pos:end="399:19">-</operator> <operator pos:start="399:21" pos:end="399:21">(</operator><name pos:start="399:22" pos:end="399:22">i</name> <operator pos:start="399:24" pos:end="399:25">&gt;&gt;</operator> <literal type="number" pos:start="399:27" pos:end="399:27">2</literal><operator pos:start="399:28" pos:end="399:28">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="401:9" pos:end="403:18"><if pos:start="401:9" pos:end="403:18">if <condition pos:start="401:12" pos:end="401:42">(<expr pos:start="401:13" pos:end="401:41"><name pos:start="401:13" pos:end="401:15">pos</name> <operator pos:start="401:17" pos:end="401:18">==</operator> <call pos:start="401:20" pos:end="401:41"><name pos:start="401:20" pos:end="401:37">bytestream2_tell_p</name><argument_list pos:start="401:38" pos:end="401:41">(<argument pos:start="401:39" pos:end="401:40"><expr pos:start="401:39" pos:end="401:40"><name pos:start="401:39" pos:end="401:40">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="403:13" pos:end="403:18"><block_content pos:start="403:13" pos:end="403:18">

            <break pos:start="403:13" pos:end="403:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="407:9" pos:end="407:27"><expr pos:start="407:9" pos:end="407:26"><name pos:start="407:9" pos:end="407:11">pos</name> <operator pos:start="407:13" pos:end="407:13">=</operator> <name pos:start="407:15" pos:end="407:17">pos</name> <operator pos:start="407:19" pos:end="407:19">-</operator> <literal type="number" pos:start="407:21" pos:end="407:26">0x4000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="409:9" pos:end="409:84"><expr pos:start="409:9" pos:end="409:83"><call pos:start="409:9" pos:end="409:83"><name pos:start="409:9" pos:end="409:24">bytestream2_init</name><argument_list pos:start="409:25" pos:end="409:83">(<argument pos:start="409:26" pos:end="409:29"><expr pos:start="409:26" pos:end="409:29"><operator pos:start="409:26" pos:end="409:26">&amp;</operator><name pos:start="409:27" pos:end="409:29">gbc</name></expr></argument>, <argument pos:start="409:32" pos:end="409:47"><expr pos:start="409:32" pos:end="409:47"><name pos:start="409:32" pos:end="409:47"><name pos:start="409:32" pos:end="409:33">pb</name><operator pos:start="409:34" pos:end="409:35">-&gt;</operator><name pos:start="409:36" pos:end="409:47">buffer_start</name></name></expr></argument>, <argument pos:start="409:50" pos:end="409:82"><expr pos:start="409:50" pos:end="409:82"><name pos:start="409:50" pos:end="409:63"><name pos:start="409:50" pos:end="409:51">pb</name><operator pos:start="409:52" pos:end="409:53">-&gt;</operator><name pos:start="409:54" pos:end="409:63">buffer_end</name></name> <operator pos:start="409:65" pos:end="409:65">-</operator> <name pos:start="409:67" pos:end="409:82"><name pos:start="409:67" pos:end="409:68">pb</name><operator pos:start="409:69" pos:end="409:70">-&gt;</operator><name pos:start="409:71" pos:end="409:82">buffer_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="411:9" pos:end="411:46"><expr pos:start="411:9" pos:end="411:45"><call pos:start="411:9" pos:end="411:45"><name pos:start="411:9" pos:end="411:24">bytestream2_seek</name><argument_list pos:start="411:25" pos:end="411:45">(<argument pos:start="411:26" pos:end="411:29"><expr pos:start="411:26" pos:end="411:29"><operator pos:start="411:26" pos:end="411:26">&amp;</operator><name pos:start="411:27" pos:end="411:29">gbc</name></expr></argument>, <argument pos:start="411:32" pos:end="411:34"><expr pos:start="411:32" pos:end="411:34"><name pos:start="411:32" pos:end="411:34">pos</name></expr></argument>, <argument pos:start="411:37" pos:end="411:44"><expr pos:start="411:37" pos:end="411:44"><name pos:start="411:37" pos:end="411:44">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="415:9" pos:end="437:9"><if pos:start="415:9" pos:end="429:9">if <condition pos:start="415:12" pos:end="415:75">(<expr pos:start="415:13" pos:end="415:74"><name pos:start="415:13" pos:end="415:15">len</name> <operator pos:start="415:17" pos:end="415:17">&lt;</operator> <literal type="number" pos:start="415:19" pos:end="415:19">6</literal> <operator pos:start="415:21" pos:end="415:22">||</operator> <call pos:start="415:24" pos:end="415:45"><name pos:start="415:24" pos:end="415:41">bytestream2_tell_p</name><argument_list pos:start="415:42" pos:end="415:45">(<argument pos:start="415:43" pos:end="415:44"><expr pos:start="415:43" pos:end="415:44"><name pos:start="415:43" pos:end="415:44">pb</name></expr></argument>)</argument_list></call> <operator pos:start="415:47" pos:end="415:47">-</operator> <call pos:start="415:49" pos:end="415:70"><name pos:start="415:49" pos:end="415:64">bytestream2_tell</name><argument_list pos:start="415:65" pos:end="415:70">(<argument pos:start="415:66" pos:end="415:69"><expr pos:start="415:66" pos:end="415:69"><operator pos:start="415:66" pos:end="415:66">&amp;</operator><name pos:start="415:67" pos:end="415:69">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="415:72" pos:end="415:72">&lt;</operator> <literal type="number" pos:start="415:74" pos:end="415:74">4</literal></expr>)</condition> <block pos:start="415:77" pos:end="429:9">{<block_content pos:start="417:13" pos:end="427:26">

            <expr_stmt pos:start="417:13" pos:end="417:65"><expr pos:start="417:13" pos:end="417:64"><call pos:start="417:13" pos:end="417:64"><name pos:start="417:13" pos:end="417:32">bytestream2_put_byte</name><argument_list pos:start="417:33" pos:end="417:64">(<argument pos:start="417:34" pos:end="417:35"><expr pos:start="417:34" pos:end="417:35"><name pos:start="417:34" pos:end="417:35">pb</name></expr></argument>, <argument pos:start="417:38" pos:end="417:63"><expr pos:start="417:38" pos:end="417:63"><call pos:start="417:38" pos:end="417:63"><name pos:start="417:38" pos:end="417:57">bytestream2_get_byte</name><argument_list pos:start="417:58" pos:end="417:63">(<argument pos:start="417:59" pos:end="417:62"><expr pos:start="417:59" pos:end="417:62"><operator pos:start="417:59" pos:end="417:59">&amp;</operator><name pos:start="417:60" pos:end="417:62">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="419:13" pos:end="419:65"><expr pos:start="419:13" pos:end="419:64"><call pos:start="419:13" pos:end="419:64"><name pos:start="419:13" pos:end="419:32">bytestream2_put_byte</name><argument_list pos:start="419:33" pos:end="419:64">(<argument pos:start="419:34" pos:end="419:35"><expr pos:start="419:34" pos:end="419:35"><name pos:start="419:34" pos:end="419:35">pb</name></expr></argument>, <argument pos:start="419:38" pos:end="419:63"><expr pos:start="419:38" pos:end="419:63"><call pos:start="419:38" pos:end="419:63"><name pos:start="419:38" pos:end="419:57">bytestream2_get_byte</name><argument_list pos:start="419:58" pos:end="419:63">(<argument pos:start="419:59" pos:end="419:62"><expr pos:start="419:59" pos:end="419:62"><operator pos:start="419:59" pos:end="419:59">&amp;</operator><name pos:start="419:60" pos:end="419:62">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <do pos:start="421:13" pos:end="427:26">do <block pos:start="421:16" pos:end="427:13">{<block_content pos:start="423:17" pos:end="425:22">

                <expr_stmt pos:start="423:17" pos:end="423:69"><expr pos:start="423:17" pos:end="423:68"><call pos:start="423:17" pos:end="423:68"><name pos:start="423:17" pos:end="423:36">bytestream2_put_byte</name><argument_list pos:start="423:37" pos:end="423:68">(<argument pos:start="423:38" pos:end="423:39"><expr pos:start="423:38" pos:end="423:39"><name pos:start="423:38" pos:end="423:39">pb</name></expr></argument>, <argument pos:start="423:42" pos:end="423:67"><expr pos:start="423:42" pos:end="423:67"><call pos:start="423:42" pos:end="423:67"><name pos:start="423:42" pos:end="423:61">bytestream2_get_byte</name><argument_list pos:start="423:62" pos:end="423:67">(<argument pos:start="423:63" pos:end="423:66"><expr pos:start="423:63" pos:end="423:66"><operator pos:start="423:63" pos:end="423:63">&amp;</operator><name pos:start="423:64" pos:end="423:66">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="425:17" pos:end="425:22"><expr pos:start="425:17" pos:end="425:21"><operator pos:start="425:17" pos:end="425:18">--</operator><name pos:start="425:19" pos:end="425:21">len</name></expr>;</expr_stmt>

            </block_content>}</block> while <condition pos:start="427:21" pos:end="427:25">(<expr pos:start="427:22" pos:end="427:24"><name pos:start="427:22" pos:end="427:24">len</name></expr>)</condition>;</do>

        </block_content>}</block></if> <else pos:start="429:11" pos:end="437:9">else <block pos:start="429:16" pos:end="437:9">{<block_content pos:start="431:13" pos:end="435:69">

            <expr_stmt pos:start="431:13" pos:end="431:65"><expr pos:start="431:13" pos:end="431:64"><call pos:start="431:13" pos:end="431:64"><name pos:start="431:13" pos:end="431:32">bytestream2_put_le32</name><argument_list pos:start="431:33" pos:end="431:64">(<argument pos:start="431:34" pos:end="431:35"><expr pos:start="431:34" pos:end="431:35"><name pos:start="431:34" pos:end="431:35">pb</name></expr></argument>, <argument pos:start="431:38" pos:end="431:63"><expr pos:start="431:38" pos:end="431:63"><call pos:start="431:38" pos:end="431:63"><name pos:start="431:38" pos:end="431:57">bytestream2_get_le32</name><argument_list pos:start="431:58" pos:end="431:63">(<argument pos:start="431:59" pos:end="431:62"><expr pos:start="431:59" pos:end="431:62"><operator pos:start="431:59" pos:end="431:59">&amp;</operator><name pos:start="431:60" pos:end="431:62">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="433:13" pos:end="435:69">for <control pos:start="433:17" pos:end="433:43">(<init pos:start="433:18" pos:end="433:31"><expr pos:start="433:18" pos:end="433:30"><name pos:start="433:18" pos:end="433:20">len</name> <operator pos:start="433:22" pos:end="433:22">=</operator> <name pos:start="433:24" pos:end="433:26">len</name> <operator pos:start="433:28" pos:end="433:28">-</operator> <literal type="number" pos:start="433:30" pos:end="433:30">2</literal></expr>;</init> <condition pos:start="433:33" pos:end="433:36"><expr pos:start="433:33" pos:end="433:35"><name pos:start="433:33" pos:end="433:35">len</name></expr>;</condition> <incr pos:start="433:38" pos:end="433:42"><expr pos:start="433:38" pos:end="433:42"><operator pos:start="433:38" pos:end="433:39">--</operator><name pos:start="433:40" pos:end="433:42">len</name></expr></incr>)</control><block type="pseudo" pos:start="435:17" pos:end="435:69"><block_content pos:start="435:17" pos:end="435:69">

                <expr_stmt pos:start="435:17" pos:end="435:69"><expr pos:start="435:17" pos:end="435:68"><call pos:start="435:17" pos:end="435:68"><name pos:start="435:17" pos:end="435:36">bytestream2_put_byte</name><argument_list pos:start="435:37" pos:end="435:68">(<argument pos:start="435:38" pos:end="435:39"><expr pos:start="435:38" pos:end="435:39"><name pos:start="435:38" pos:end="435:39">pb</name></expr></argument>, <argument pos:start="435:42" pos:end="435:67"><expr pos:start="435:42" pos:end="435:67"><call pos:start="435:42" pos:end="435:67"><name pos:start="435:42" pos:end="435:61">bytestream2_get_byte</name><argument_list pos:start="435:62" pos:end="435:67">(<argument pos:start="435:63" pos:end="435:66"><expr pos:start="435:63" pos:end="435:66"><operator pos:start="435:63" pos:end="435:63">&amp;</operator><name pos:start="435:64" pos:end="435:66">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="441:9" pos:end="441:20"><expr pos:start="441:9" pos:end="441:19"><name pos:start="441:9" pos:end="441:11">len</name> <operator pos:start="441:13" pos:end="441:13">=</operator> <name pos:start="441:15" pos:end="441:15">i</name> <operator pos:start="441:17" pos:end="441:17">&amp;</operator> <literal type="number" pos:start="441:19" pos:end="441:19">3</literal></expr>;</expr_stmt>

        <if_stmt pos:start="443:9" pos:end="459:9"><if pos:start="443:9" pos:end="447:9">if <condition pos:start="443:12" pos:end="443:17">(<expr pos:start="443:13" pos:end="443:16"><operator pos:start="443:13" pos:end="443:13">!</operator><name pos:start="443:14" pos:end="443:16">len</name></expr>)</condition> <block pos:start="443:19" pos:end="447:9">{<block_content pos:start="445:13" pos:end="445:23">

            <expr_stmt pos:start="445:13" pos:end="445:23"><expr pos:start="445:13" pos:end="445:22"><name pos:start="445:13" pos:end="445:18">repeat</name> <operator pos:start="445:20" pos:end="445:20">=</operator> <literal type="number" pos:start="445:22" pos:end="445:22">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="447:11" pos:end="459:9">else <block pos:start="447:16" pos:end="459:9">{<block_content pos:start="449:13" pos:end="457:47">

            <do pos:start="449:13" pos:end="455:26">do <block pos:start="449:16" pos:end="455:13">{<block_content pos:start="451:17" pos:end="453:22">

                <expr_stmt pos:start="451:17" pos:end="451:67"><expr pos:start="451:17" pos:end="451:66"><call pos:start="451:17" pos:end="451:66"><name pos:start="451:17" pos:end="451:36">bytestream2_put_byte</name><argument_list pos:start="451:37" pos:end="451:66">(<argument pos:start="451:38" pos:end="451:39"><expr pos:start="451:38" pos:end="451:39"><name pos:start="451:38" pos:end="451:39">pb</name></expr></argument>, <argument pos:start="451:42" pos:end="451:65"><expr pos:start="451:42" pos:end="451:65"><call pos:start="451:42" pos:end="451:65"><name pos:start="451:42" pos:end="451:61">bytestream2_get_byte</name><argument_list pos:start="451:62" pos:end="451:65">(<argument pos:start="451:63" pos:end="451:64"><expr pos:start="451:63" pos:end="451:64"><name pos:start="451:63" pos:end="451:64">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="453:17" pos:end="453:22"><expr pos:start="453:17" pos:end="453:21"><operator pos:start="453:17" pos:end="453:18">--</operator><name pos:start="453:19" pos:end="453:21">len</name></expr>;</expr_stmt>

            </block_content>}</block> while <condition pos:start="455:21" pos:end="455:25">(<expr pos:start="455:22" pos:end="455:24"><name pos:start="455:22" pos:end="455:24">len</name></expr>)</condition>;</do>

            <expr_stmt pos:start="457:13" pos:end="457:47"><expr pos:start="457:13" pos:end="457:46"><name pos:start="457:13" pos:end="457:18">opcode</name> <operator pos:start="457:20" pos:end="457:20">=</operator> <call pos:start="457:22" pos:end="457:46"><name pos:start="457:22" pos:end="457:42">bytestream2_peek_byte</name><argument_list pos:start="457:43" pos:end="457:46">(<argument pos:start="457:44" pos:end="457:45"><expr pos:start="457:44" pos:end="457:45"><name pos:start="457:44" pos:end="457:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <return pos:start="465:5" pos:end="465:13">return <expr pos:start="465:12" pos:end="465:12"><literal type="number" pos:start="465:12" pos:end="465:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
