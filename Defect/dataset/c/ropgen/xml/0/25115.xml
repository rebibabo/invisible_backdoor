<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25115.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">memory_region_notify_iommu</name><parameter_list pos:start="1:32" pos:end="3:52">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:44">MemoryRegion</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">mr</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:51"><decl pos:start="3:33" pos:end="3:51"><type pos:start="3:33" pos:end="3:51"><name pos:start="3:33" pos:end="3:45">IOMMUTLBEntry</name></type> <name pos:start="3:47" pos:end="3:51">entry</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:5">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">IOMMUNotifier</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:33">iommu_notifier</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:21">IOMMUNotifierFlag</name></type> <name pos:start="9:23" pos:end="9:35">request_flags</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:39"><expr pos:start="13:5" pos:end="13:38"><call pos:start="13:5" pos:end="13:38"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:38">(<argument pos:start="13:12" pos:end="13:37"><expr pos:start="13:12" pos:end="13:37"><call pos:start="13:12" pos:end="13:37"><name pos:start="13:12" pos:end="13:33">memory_region_is_iommu</name><argument_list pos:start="13:34" pos:end="13:37">(<argument pos:start="13:35" pos:end="13:36"><expr pos:start="13:35" pos:end="13:36"><name pos:start="13:35" pos:end="13:36">mr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:30">(<expr pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:13">entry</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:18">perm</name></name> <operator pos:start="17:20" pos:end="17:20">&amp;</operator> <name pos:start="17:22" pos:end="17:29">IOMMU_RW</name></expr>)</condition> <block pos:start="17:32" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:43">

        <expr_stmt pos:start="19:9" pos:end="19:43"><expr pos:start="19:9" pos:end="19:42"><name pos:start="19:9" pos:end="19:21">request_flags</name> <operator pos:start="19:23" pos:end="19:23">=</operator> <name pos:start="19:25" pos:end="19:42">IOMMU_NOTIFIER_MAP</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="25:5">else <block pos:start="21:12" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:45">

        <expr_stmt pos:start="23:9" pos:end="23:45"><expr pos:start="23:9" pos:end="23:44"><name pos:start="23:9" pos:end="23:21">request_flags</name> <operator pos:start="23:23" pos:end="23:23">=</operator> <name pos:start="23:25" pos:end="23:44">IOMMU_NOTIFIER_UNMAP</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <macro pos:start="29:5" pos:end="29:46"><name pos:start="29:5" pos:end="29:26">IOMMU_NOTIFIER_FOREACH</name><argument_list pos:start="29:27" pos:end="29:46">(<argument pos:start="29:28" pos:end="29:41">iommu_notifier</argument>, <argument pos:start="29:44" pos:end="29:45">mr</argument>)</argument_list></macro> <block pos:start="29:48" pos:end="53:5">{<block_content pos:start="39:9" pos:end="51:9">

        <comment type="block" pos:start="31:9" pos:end="37:11">/*

         * Skip the notification if the notification does not overlap

         * with registered range.

         */</comment>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="41:45">(<expr pos:start="39:13" pos:end="41:44"><name pos:start="39:13" pos:end="39:33"><name pos:start="39:13" pos:end="39:26">iommu_notifier</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:33">start</name></name> <operator pos:start="39:35" pos:end="39:35">&gt;</operator> <name pos:start="39:37" pos:end="39:46"><name pos:start="39:37" pos:end="39:41">entry</name><operator pos:start="39:42" pos:end="39:42">.</operator><name pos:start="39:43" pos:end="39:46">iova</name></name> <operator pos:start="39:48" pos:end="39:48">+</operator> <name pos:start="39:50" pos:end="39:64"><name pos:start="39:50" pos:end="39:54">entry</name><operator pos:start="39:55" pos:end="39:55">.</operator><name pos:start="39:56" pos:end="39:64">addr_mask</name></name> <operator pos:start="39:66" pos:end="39:66">+</operator> <literal type="number" pos:start="39:68" pos:end="39:68">1</literal> <operator pos:start="39:70" pos:end="39:71">||</operator>

            <name pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:26">iommu_notifier</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:31">end</name></name> <operator pos:start="41:33" pos:end="41:33">&lt;</operator> <name pos:start="41:35" pos:end="41:44"><name pos:start="41:35" pos:end="41:39">entry</name><operator pos:start="41:40" pos:end="41:40">.</operator><name pos:start="41:41" pos:end="41:44">iova</name></name></expr>)</condition> <block pos:start="41:47" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:21">

            <continue pos:start="43:13" pos:end="43:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:59">(<expr pos:start="47:13" pos:end="47:58"><name pos:start="47:13" pos:end="47:42"><name pos:start="47:13" pos:end="47:26">iommu_notifier</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:42">notifier_flags</name></name> <operator pos:start="47:44" pos:end="47:44">&amp;</operator> <name pos:start="47:46" pos:end="47:58">request_flags</name></expr>)</condition> <block pos:start="47:61" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:59">

            <expr_stmt pos:start="49:13" pos:end="49:59"><expr pos:start="49:13" pos:end="49:58"><call pos:start="49:13" pos:end="49:58"><name pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:26">iommu_notifier</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:34">notify</name></name><argument_list pos:start="49:35" pos:end="49:58">(<argument pos:start="49:36" pos:end="49:49"><expr pos:start="49:36" pos:end="49:49"><name pos:start="49:36" pos:end="49:49">iommu_notifier</name></expr></argument>, <argument pos:start="49:52" pos:end="49:57"><expr pos:start="49:52" pos:end="49:57"><operator pos:start="49:52" pos:end="49:52">&amp;</operator><name pos:start="49:53" pos:end="49:57">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
