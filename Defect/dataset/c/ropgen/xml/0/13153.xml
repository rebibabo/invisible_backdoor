<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13153.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">virtio_net_handle_ctrl</name><parameter_list pos:start="1:35" pos:end="1:69">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:47">VirtIODevice</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">vdev</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:64">VirtQueue</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:68">vq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:5">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VirtIONet</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">n</name> <init pos:start="5:18" pos:end="5:35">= <expr pos:start="5:20" pos:end="5:35"><call pos:start="5:20" pos:end="5:35"><name pos:start="5:20" pos:end="5:29">VIRTIO_NET</name><argument_list pos:start="5:30" pos:end="5:35">(<argument pos:start="5:31" pos:end="5:34"><expr pos:start="5:31" pos:end="5:34"><name pos:start="5:31" pos:end="5:34">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:30">virtio_net_ctrl_hdr</name></name></type> <name pos:start="7:32" pos:end="7:35">ctrl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:47"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:23">virtio_net_ctrl_ack</name></type> <name pos:start="9:25" pos:end="9:30">status</name> <init pos:start="9:32" pos:end="9:47">= <expr pos:start="9:34" pos:end="9:47"><name pos:start="9:34" pos:end="9:47">VIRTIO_NET_ERR</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:20">VirtQueueElement</name></type> <name pos:start="11:22" pos:end="11:25">elem</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">size_t</name></type> <name pos:start="13:12" pos:end="13:12">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:16">iovec</name></name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:21">iov</name></decl>, <decl pos:start="15:24" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:18"><modifier pos:start="15:24" pos:end="15:24">*</modifier></type><name pos:start="15:25" pos:end="15:28">iov2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:24">iov_cnt</name></decl>;</decl_stmt>



    <while pos:start="21:5" pos:end="87:5">while <condition pos:start="21:11" pos:end="21:36">(<expr pos:start="21:12" pos:end="21:35"><call pos:start="21:12" pos:end="21:35"><name pos:start="21:12" pos:end="21:24">virtqueue_pop</name><argument_list pos:start="21:25" pos:end="21:35">(<argument pos:start="21:26" pos:end="21:27"><expr pos:start="21:26" pos:end="21:27"><name pos:start="21:26" pos:end="21:27">vq</name></expr></argument>, <argument pos:start="21:30" pos:end="21:34"><expr pos:start="21:30" pos:end="21:34"><operator pos:start="21:30" pos:end="21:30">&amp;</operator><name pos:start="21:31" pos:end="21:34">elem</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:38" pos:end="87:5">{<block_content pos:start="23:9" pos:end="85:21">

        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="31:9">if <condition pos:start="23:12" pos:end="25:63">(<expr pos:start="23:13" pos:end="25:62"><call pos:start="23:13" pos:end="23:45"><name pos:start="23:13" pos:end="23:20">iov_size</name><argument_list pos:start="23:21" pos:end="23:45">(<argument pos:start="23:22" pos:end="23:31"><expr pos:start="23:22" pos:end="23:31"><name pos:start="23:22" pos:end="23:31"><name pos:start="23:22" pos:end="23:25">elem</name><operator pos:start="23:26" pos:end="23:26">.</operator><name pos:start="23:27" pos:end="23:31">in_sg</name></name></expr></argument>, <argument pos:start="23:34" pos:end="23:44"><expr pos:start="23:34" pos:end="23:44"><name pos:start="23:34" pos:end="23:44"><name pos:start="23:34" pos:end="23:37">elem</name><operator pos:start="23:38" pos:end="23:38">.</operator><name pos:start="23:39" pos:end="23:44">in_num</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:47" pos:end="23:47">&lt;</operator> <sizeof pos:start="23:49" pos:end="23:62">sizeof<argument_list pos:start="23:55" pos:end="23:62">(<argument pos:start="23:56" pos:end="23:61"><expr pos:start="23:56" pos:end="23:61"><name pos:start="23:56" pos:end="23:61">status</name></expr></argument>)</argument_list></sizeof> <operator pos:start="23:64" pos:end="23:65">||</operator>

            <call pos:start="25:13" pos:end="25:47"><name pos:start="25:13" pos:end="25:20">iov_size</name><argument_list pos:start="25:21" pos:end="25:47">(<argument pos:start="25:22" pos:end="25:32"><expr pos:start="25:22" pos:end="25:32"><name pos:start="25:22" pos:end="25:32"><name pos:start="25:22" pos:end="25:25">elem</name><operator pos:start="25:26" pos:end="25:26">.</operator><name pos:start="25:27" pos:end="25:32">out_sg</name></name></expr></argument>, <argument pos:start="25:35" pos:end="25:46"><expr pos:start="25:35" pos:end="25:46"><name pos:start="25:35" pos:end="25:46"><name pos:start="25:35" pos:end="25:38">elem</name><operator pos:start="25:39" pos:end="25:39">.</operator><name pos:start="25:40" pos:end="25:46">out_num</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:49" pos:end="25:49">&lt;</operator> <sizeof pos:start="25:51" pos:end="25:62">sizeof<argument_list pos:start="25:57" pos:end="25:62">(<argument pos:start="25:58" pos:end="25:61"><expr pos:start="25:58" pos:end="25:61"><name pos:start="25:58" pos:end="25:61">ctrl</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="25:65" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:20">

            <expr_stmt pos:start="27:13" pos:end="27:60"><expr pos:start="27:13" pos:end="27:59"><call pos:start="27:13" pos:end="27:59"><name pos:start="27:13" pos:end="27:24">error_report</name><argument_list pos:start="27:25" pos:end="27:59">(<argument pos:start="27:26" pos:end="27:58"><expr pos:start="27:26" pos:end="27:58"><literal type="string" pos:start="27:26" pos:end="27:58">"virtio-net ctrl missing headers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:20"><expr pos:start="29:13" pos:end="29:19"><call pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:16">exit</name><argument_list pos:start="29:17" pos:end="29:19">(<argument pos:start="29:18" pos:end="29:18"><expr pos:start="29:18" pos:end="29:18"><literal type="number" pos:start="29:18" pos:end="29:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:31"><expr pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:15">iov_cnt</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:30"><name pos:start="35:19" pos:end="35:22">elem</name><operator pos:start="35:23" pos:end="35:23">.</operator><name pos:start="35:24" pos:end="35:30">out_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:80"><expr pos:start="37:9" pos:end="37:79"><name pos:start="37:9" pos:end="37:12">iov2</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:18">iov</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <call pos:start="37:22" pos:end="37:79"><name pos:start="37:22" pos:end="37:29">g_memdup</name><argument_list pos:start="37:30" pos:end="37:79">(<argument pos:start="37:31" pos:end="37:41"><expr pos:start="37:31" pos:end="37:41"><name pos:start="37:31" pos:end="37:41"><name pos:start="37:31" pos:end="37:34">elem</name><operator pos:start="37:35" pos:end="37:35">.</operator><name pos:start="37:36" pos:end="37:41">out_sg</name></name></expr></argument>, <argument pos:start="37:44" pos:end="37:78"><expr pos:start="37:44" pos:end="37:78"><sizeof pos:start="37:44" pos:end="37:63">sizeof<argument_list pos:start="37:50" pos:end="37:63">(<argument pos:start="37:51" pos:end="37:62"><expr pos:start="37:51" pos:end="37:62">struct <name pos:start="37:58" pos:end="37:62">iovec</name></expr></argument>)</argument_list></sizeof> <operator pos:start="37:65" pos:end="37:65">*</operator> <name pos:start="37:67" pos:end="37:78"><name pos:start="37:67" pos:end="37:70">elem</name><operator pos:start="37:71" pos:end="37:71">.</operator><name pos:start="37:72" pos:end="37:78">out_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:61"><expr pos:start="39:9" pos:end="39:60"><name pos:start="39:9" pos:end="39:9">s</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <call pos:start="39:13" pos:end="39:60"><name pos:start="39:13" pos:end="39:22">iov_to_buf</name><argument_list pos:start="39:23" pos:end="39:60">(<argument pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:26">iov</name></expr></argument>, <argument pos:start="39:29" pos:end="39:35"><expr pos:start="39:29" pos:end="39:35"><name pos:start="39:29" pos:end="39:35">iov_cnt</name></expr></argument>, <argument pos:start="39:38" pos:end="39:38"><expr pos:start="39:38" pos:end="39:38"><literal type="number" pos:start="39:38" pos:end="39:38">0</literal></expr></argument>, <argument pos:start="39:41" pos:end="39:45"><expr pos:start="39:41" pos:end="39:45"><operator pos:start="39:41" pos:end="39:41">&amp;</operator><name pos:start="39:42" pos:end="39:45">ctrl</name></expr></argument>, <argument pos:start="39:48" pos:end="39:59"><expr pos:start="39:48" pos:end="39:59"><sizeof pos:start="39:48" pos:end="39:59">sizeof<argument_list pos:start="39:54" pos:end="39:59">(<argument pos:start="39:55" pos:end="39:58"><expr pos:start="39:55" pos:end="39:58"><name pos:start="39:55" pos:end="39:58">ctrl</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:56"><expr pos:start="41:9" pos:end="41:55"><call pos:start="41:9" pos:end="41:55"><name pos:start="41:9" pos:end="41:25">iov_discard_front</name><argument_list pos:start="41:26" pos:end="41:55">(<argument pos:start="41:27" pos:end="41:30"><expr pos:start="41:27" pos:end="41:30"><operator pos:start="41:27" pos:end="41:27">&amp;</operator><name pos:start="41:28" pos:end="41:30">iov</name></expr></argument>, <argument pos:start="41:33" pos:end="41:40"><expr pos:start="41:33" pos:end="41:40"><operator pos:start="41:33" pos:end="41:33">&amp;</operator><name pos:start="41:34" pos:end="41:40">iov_cnt</name></expr></argument>, <argument pos:start="41:43" pos:end="41:54"><expr pos:start="41:43" pos:end="41:54"><sizeof pos:start="41:43" pos:end="41:54">sizeof<argument_list pos:start="41:49" pos:end="41:54">(<argument pos:start="41:50" pos:end="41:53"><expr pos:start="41:50" pos:end="41:53"><name pos:start="41:50" pos:end="41:53">ctrl</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="71:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:30">(<expr pos:start="43:13" pos:end="43:29"><name pos:start="43:13" pos:end="43:13">s</name> <operator pos:start="43:15" pos:end="43:16">!=</operator> <sizeof pos:start="43:18" pos:end="43:29">sizeof<argument_list pos:start="43:24" pos:end="43:29">(<argument pos:start="43:25" pos:end="43:28"><expr pos:start="43:25" pos:end="43:28"><name pos:start="43:25" pos:end="43:28">ctrl</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="43:32" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:36">

            <expr_stmt pos:start="45:13" pos:end="45:36"><expr pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:18">status</name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:35">VIRTIO_NET_ERR</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="47:11" pos:end="51:9">else if <condition pos:start="47:19" pos:end="47:52">(<expr pos:start="47:20" pos:end="47:51"><name pos:start="47:20" pos:end="47:29"><name pos:start="47:20" pos:end="47:23">ctrl</name><operator pos:start="47:24" pos:end="47:24">.</operator><name pos:start="47:25" pos:end="47:29">class</name></name> <operator pos:start="47:31" pos:end="47:32">==</operator> <name pos:start="47:34" pos:end="47:51">VIRTIO_NET_CTRL_RX</name></expr>)</condition> <block pos:start="47:54" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:74">

            <expr_stmt pos:start="49:13" pos:end="49:74"><expr pos:start="49:13" pos:end="49:73"><name pos:start="49:13" pos:end="49:18">status</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <call pos:start="49:22" pos:end="49:73"><name pos:start="49:22" pos:end="49:46">virtio_net_handle_rx_mode</name><argument_list pos:start="49:47" pos:end="49:73">(<argument pos:start="49:48" pos:end="49:48"><expr pos:start="49:48" pos:end="49:48"><name pos:start="49:48" pos:end="49:48">n</name></expr></argument>, <argument pos:start="49:51" pos:end="49:58"><expr pos:start="49:51" pos:end="49:58"><name pos:start="49:51" pos:end="49:58"><name pos:start="49:51" pos:end="49:54">ctrl</name><operator pos:start="49:55" pos:end="49:55">.</operator><name pos:start="49:56" pos:end="49:58">cmd</name></name></expr></argument>, <argument pos:start="49:61" pos:end="49:63"><expr pos:start="49:61" pos:end="49:63"><name pos:start="49:61" pos:end="49:63">iov</name></expr></argument>, <argument pos:start="49:66" pos:end="49:72"><expr pos:start="49:66" pos:end="49:72"><name pos:start="49:66" pos:end="49:72">iov_cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="51:11" pos:end="55:9">else if <condition pos:start="51:19" pos:end="51:53">(<expr pos:start="51:20" pos:end="51:52"><name pos:start="51:20" pos:end="51:29"><name pos:start="51:20" pos:end="51:23">ctrl</name><operator pos:start="51:24" pos:end="51:24">.</operator><name pos:start="51:25" pos:end="51:29">class</name></name> <operator pos:start="51:31" pos:end="51:32">==</operator> <name pos:start="51:34" pos:end="51:52">VIRTIO_NET_CTRL_MAC</name></expr>)</condition> <block pos:start="51:55" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:70">

            <expr_stmt pos:start="53:13" pos:end="53:70"><expr pos:start="53:13" pos:end="53:69"><name pos:start="53:13" pos:end="53:18">status</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <call pos:start="53:22" pos:end="53:69"><name pos:start="53:22" pos:end="53:42">virtio_net_handle_mac</name><argument_list pos:start="53:43" pos:end="53:69">(<argument pos:start="53:44" pos:end="53:44"><expr pos:start="53:44" pos:end="53:44"><name pos:start="53:44" pos:end="53:44">n</name></expr></argument>, <argument pos:start="53:47" pos:end="53:54"><expr pos:start="53:47" pos:end="53:54"><name pos:start="53:47" pos:end="53:54"><name pos:start="53:47" pos:end="53:50">ctrl</name><operator pos:start="53:51" pos:end="53:51">.</operator><name pos:start="53:52" pos:end="53:54">cmd</name></name></expr></argument>, <argument pos:start="53:57" pos:end="53:59"><expr pos:start="53:57" pos:end="53:59"><name pos:start="53:57" pos:end="53:59">iov</name></expr></argument>, <argument pos:start="53:62" pos:end="53:68"><expr pos:start="53:62" pos:end="53:68"><name pos:start="53:62" pos:end="53:68">iov_cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="55:11" pos:end="59:9">else if <condition pos:start="55:19" pos:end="55:54">(<expr pos:start="55:20" pos:end="55:53"><name pos:start="55:20" pos:end="55:29"><name pos:start="55:20" pos:end="55:23">ctrl</name><operator pos:start="55:24" pos:end="55:24">.</operator><name pos:start="55:25" pos:end="55:29">class</name></name> <operator pos:start="55:31" pos:end="55:32">==</operator> <name pos:start="55:34" pos:end="55:53">VIRTIO_NET_CTRL_VLAN</name></expr>)</condition> <block pos:start="55:56" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:77">

            <expr_stmt pos:start="57:13" pos:end="57:77"><expr pos:start="57:13" pos:end="57:76"><name pos:start="57:13" pos:end="57:18">status</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <call pos:start="57:22" pos:end="57:76"><name pos:start="57:22" pos:end="57:49">virtio_net_handle_vlan_table</name><argument_list pos:start="57:50" pos:end="57:76">(<argument pos:start="57:51" pos:end="57:51"><expr pos:start="57:51" pos:end="57:51"><name pos:start="57:51" pos:end="57:51">n</name></expr></argument>, <argument pos:start="57:54" pos:end="57:61"><expr pos:start="57:54" pos:end="57:61"><name pos:start="57:54" pos:end="57:61"><name pos:start="57:54" pos:end="57:57">ctrl</name><operator pos:start="57:58" pos:end="57:58">.</operator><name pos:start="57:59" pos:end="57:61">cmd</name></name></expr></argument>, <argument pos:start="57:64" pos:end="57:66"><expr pos:start="57:64" pos:end="57:66"><name pos:start="57:64" pos:end="57:66">iov</name></expr></argument>, <argument pos:start="57:69" pos:end="57:75"><expr pos:start="57:69" pos:end="57:75"><name pos:start="57:69" pos:end="57:75">iov_cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="59:11" pos:end="63:9">else if <condition pos:start="59:19" pos:end="59:58">(<expr pos:start="59:20" pos:end="59:57"><name pos:start="59:20" pos:end="59:29"><name pos:start="59:20" pos:end="59:23">ctrl</name><operator pos:start="59:24" pos:end="59:24">.</operator><name pos:start="59:25" pos:end="59:29">class</name></name> <operator pos:start="59:31" pos:end="59:32">==</operator> <name pos:start="59:34" pos:end="59:57">VIRTIO_NET_CTRL_ANNOUNCE</name></expr>)</condition> <block pos:start="59:60" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:75">

            <expr_stmt pos:start="61:13" pos:end="61:75"><expr pos:start="61:13" pos:end="61:74"><name pos:start="61:13" pos:end="61:18">status</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <call pos:start="61:22" pos:end="61:74"><name pos:start="61:22" pos:end="61:47">virtio_net_handle_announce</name><argument_list pos:start="61:48" pos:end="61:74">(<argument pos:start="61:49" pos:end="61:49"><expr pos:start="61:49" pos:end="61:49"><name pos:start="61:49" pos:end="61:49">n</name></expr></argument>, <argument pos:start="61:52" pos:end="61:59"><expr pos:start="61:52" pos:end="61:59"><name pos:start="61:52" pos:end="61:59"><name pos:start="61:52" pos:end="61:55">ctrl</name><operator pos:start="61:56" pos:end="61:56">.</operator><name pos:start="61:57" pos:end="61:59">cmd</name></name></expr></argument>, <argument pos:start="61:62" pos:end="61:64"><expr pos:start="61:62" pos:end="61:64"><name pos:start="61:62" pos:end="61:64">iov</name></expr></argument>, <argument pos:start="61:67" pos:end="61:73"><expr pos:start="61:67" pos:end="61:73"><name pos:start="61:67" pos:end="61:73">iov_cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="63:11" pos:end="67:9">else if <condition pos:start="63:19" pos:end="63:52">(<expr pos:start="63:20" pos:end="63:51"><name pos:start="63:20" pos:end="63:29"><name pos:start="63:20" pos:end="63:23">ctrl</name><operator pos:start="63:24" pos:end="63:24">.</operator><name pos:start="63:25" pos:end="63:29">class</name></name> <operator pos:start="63:31" pos:end="63:32">==</operator> <name pos:start="63:34" pos:end="63:51">VIRTIO_NET_CTRL_MQ</name></expr>)</condition> <block pos:start="63:54" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:69">

            <expr_stmt pos:start="65:13" pos:end="65:69"><expr pos:start="65:13" pos:end="65:68"><name pos:start="65:13" pos:end="65:18">status</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <call pos:start="65:22" pos:end="65:68"><name pos:start="65:22" pos:end="65:41">virtio_net_handle_mq</name><argument_list pos:start="65:42" pos:end="65:68">(<argument pos:start="65:43" pos:end="65:43"><expr pos:start="65:43" pos:end="65:43"><name pos:start="65:43" pos:end="65:43">n</name></expr></argument>, <argument pos:start="65:46" pos:end="65:53"><expr pos:start="65:46" pos:end="65:53"><name pos:start="65:46" pos:end="65:53"><name pos:start="65:46" pos:end="65:49">ctrl</name><operator pos:start="65:50" pos:end="65:50">.</operator><name pos:start="65:51" pos:end="65:53">cmd</name></name></expr></argument>, <argument pos:start="65:56" pos:end="65:58"><expr pos:start="65:56" pos:end="65:58"><name pos:start="65:56" pos:end="65:58">iov</name></expr></argument>, <argument pos:start="65:61" pos:end="65:67"><expr pos:start="65:61" pos:end="65:67"><name pos:start="65:61" pos:end="65:67">iov_cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="67:11" pos:end="71:9">else if <condition pos:start="67:19" pos:end="67:64">(<expr pos:start="67:20" pos:end="67:63"><name pos:start="67:20" pos:end="67:29"><name pos:start="67:20" pos:end="67:23">ctrl</name><operator pos:start="67:24" pos:end="67:24">.</operator><name pos:start="67:25" pos:end="67:29">class</name></name> <operator pos:start="67:31" pos:end="67:32">==</operator> <name pos:start="67:34" pos:end="67:63">VIRTIO_NET_CTRL_GUEST_OFFLOADS</name></expr>)</condition> <block pos:start="67:66" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:75">

            <expr_stmt pos:start="69:13" pos:end="69:75"><expr pos:start="69:13" pos:end="69:74"><name pos:start="69:13" pos:end="69:18">status</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <call pos:start="69:22" pos:end="69:74"><name pos:start="69:22" pos:end="69:47">virtio_net_handle_offloads</name><argument_list pos:start="69:48" pos:end="69:74">(<argument pos:start="69:49" pos:end="69:49"><expr pos:start="69:49" pos:end="69:49"><name pos:start="69:49" pos:end="69:49">n</name></expr></argument>, <argument pos:start="69:52" pos:end="69:59"><expr pos:start="69:52" pos:end="69:59"><name pos:start="69:52" pos:end="69:59"><name pos:start="69:52" pos:end="69:55">ctrl</name><operator pos:start="69:56" pos:end="69:56">.</operator><name pos:start="69:57" pos:end="69:59">cmd</name></name></expr></argument>, <argument pos:start="69:62" pos:end="69:64"><expr pos:start="69:62" pos:end="69:64"><name pos:start="69:62" pos:end="69:64">iov</name></expr></argument>, <argument pos:start="69:67" pos:end="69:73"><expr pos:start="69:67" pos:end="69:73"><name pos:start="69:67" pos:end="69:73">iov_cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:78"><expr pos:start="75:9" pos:end="75:77"><name pos:start="75:9" pos:end="75:9">s</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <call pos:start="75:13" pos:end="75:77"><name pos:start="75:13" pos:end="75:24">iov_from_buf</name><argument_list pos:start="75:25" pos:end="75:77">(<argument pos:start="75:26" pos:end="75:35"><expr pos:start="75:26" pos:end="75:35"><name pos:start="75:26" pos:end="75:35"><name pos:start="75:26" pos:end="75:29">elem</name><operator pos:start="75:30" pos:end="75:30">.</operator><name pos:start="75:31" pos:end="75:35">in_sg</name></name></expr></argument>, <argument pos:start="75:38" pos:end="75:48"><expr pos:start="75:38" pos:end="75:48"><name pos:start="75:38" pos:end="75:48"><name pos:start="75:38" pos:end="75:41">elem</name><operator pos:start="75:42" pos:end="75:42">.</operator><name pos:start="75:43" pos:end="75:48">in_num</name></name></expr></argument>, <argument pos:start="75:51" pos:end="75:51"><expr pos:start="75:51" pos:end="75:51"><literal type="number" pos:start="75:51" pos:end="75:51">0</literal></expr></argument>, <argument pos:start="75:54" pos:end="75:60"><expr pos:start="75:54" pos:end="75:60"><operator pos:start="75:54" pos:end="75:54">&amp;</operator><name pos:start="75:55" pos:end="75:60">status</name></expr></argument>, <argument pos:start="75:63" pos:end="75:76"><expr pos:start="75:63" pos:end="75:76"><sizeof pos:start="75:63" pos:end="75:76">sizeof<argument_list pos:start="75:69" pos:end="75:76">(<argument pos:start="75:70" pos:end="75:75"><expr pos:start="75:70" pos:end="75:75"><name pos:start="75:70" pos:end="75:75">status</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:36"><expr pos:start="77:9" pos:end="77:35"><call pos:start="77:9" pos:end="77:35"><name pos:start="77:9" pos:end="77:14">assert</name><argument_list pos:start="77:15" pos:end="77:35">(<argument pos:start="77:16" pos:end="77:34"><expr pos:start="77:16" pos:end="77:34"><name pos:start="77:16" pos:end="77:16">s</name> <operator pos:start="77:18" pos:end="77:19">==</operator> <sizeof pos:start="77:21" pos:end="77:34">sizeof<argument_list pos:start="77:27" pos:end="77:34">(<argument pos:start="77:28" pos:end="77:33"><expr pos:start="77:28" pos:end="77:33"><name pos:start="77:28" pos:end="77:33">status</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:50"><expr pos:start="81:9" pos:end="81:49"><call pos:start="81:9" pos:end="81:49"><name pos:start="81:9" pos:end="81:22">virtqueue_push</name><argument_list pos:start="81:23" pos:end="81:49">(<argument pos:start="81:24" pos:end="81:25"><expr pos:start="81:24" pos:end="81:25"><name pos:start="81:24" pos:end="81:25">vq</name></expr></argument>, <argument pos:start="81:28" pos:end="81:32"><expr pos:start="81:28" pos:end="81:32"><operator pos:start="81:28" pos:end="81:28">&amp;</operator><name pos:start="81:29" pos:end="81:32">elem</name></expr></argument>, <argument pos:start="81:35" pos:end="81:48"><expr pos:start="81:35" pos:end="81:48"><sizeof pos:start="81:35" pos:end="81:48">sizeof<argument_list pos:start="81:41" pos:end="81:48">(<argument pos:start="81:42" pos:end="81:47"><expr pos:start="81:42" pos:end="81:47"><name pos:start="81:42" pos:end="81:47">status</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:32"><expr pos:start="83:9" pos:end="83:31"><call pos:start="83:9" pos:end="83:31"><name pos:start="83:9" pos:end="83:21">virtio_notify</name><argument_list pos:start="83:22" pos:end="83:31">(<argument pos:start="83:23" pos:end="83:26"><expr pos:start="83:23" pos:end="83:26"><name pos:start="83:23" pos:end="83:26">vdev</name></expr></argument>, <argument pos:start="83:29" pos:end="83:30"><expr pos:start="83:29" pos:end="83:30"><name pos:start="83:29" pos:end="83:30">vq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:21"><expr pos:start="85:9" pos:end="85:20"><call pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:14">g_free</name><argument_list pos:start="85:15" pos:end="85:20">(<argument pos:start="85:16" pos:end="85:19"><expr pos:start="85:16" pos:end="85:19"><name pos:start="85:16" pos:end="85:19">iov2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
