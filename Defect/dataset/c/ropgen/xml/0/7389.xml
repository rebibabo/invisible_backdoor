<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7389.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:15">paio_init</name><parameter_list pos:start="1:16" pos:end="1:21">(<parameter pos:start="1:17" pos:end="1:20"><decl pos:start="1:17" pos:end="1:20"><type pos:start="1:17" pos:end="1:20"><name pos:start="1:17" pos:end="1:20">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:27">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">sigaction</name></name></type> <name pos:start="5:22" pos:end="5:24">act</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">PosixAioState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14"><name pos:start="9:9" pos:end="9:11">fds</name><index pos:start="9:12" pos:end="9:14">[<expr pos:start="9:13" pos:end="9:13"><literal type="number" pos:start="9:13" pos:end="9:13">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:24">(<expr pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:23">posix_aio_state</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:30">posix_aio_state</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:5">s</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <call pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:19">qemu_malloc</name><argument_list pos:start="21:20" pos:end="21:42">(<argument pos:start="21:21" pos:end="21:41"><expr pos:start="21:21" pos:end="21:41"><sizeof pos:start="21:21" pos:end="21:41">sizeof<argument_list pos:start="21:27" pos:end="21:41">(<argument pos:start="21:28" pos:end="21:40"><expr pos:start="21:28" pos:end="21:40"><name pos:start="21:28" pos:end="21:40">PosixAioState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><call pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:14">sigfillset</name><argument_list pos:start="25:15" pos:end="25:28">(<argument pos:start="25:16" pos:end="25:27"><expr pos:start="25:16" pos:end="25:27"><operator pos:start="25:16" pos:end="25:16">&amp;</operator><name pos:start="25:17" pos:end="25:27"><name pos:start="25:17" pos:end="25:19">act</name><operator pos:start="25:20" pos:end="25:20">.</operator><name pos:start="25:21" pos:end="25:27">sa_mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:7">act</name><operator pos:start="27:8" pos:end="27:8">.</operator><name pos:start="27:9" pos:end="27:16">sa_flags</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="27:23" pos:end="27:73">/* do not restart syscalls to interrupt select() */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:40"><expr pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:7">act</name><operator pos:start="29:8" pos:end="29:8">.</operator><name pos:start="29:9" pos:end="29:18">sa_handler</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:39">aio_signal_handler</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><call pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:13">sigaction</name><argument_list pos:start="31:14" pos:end="31:34">(<argument pos:start="31:15" pos:end="31:21"><expr pos:start="31:15" pos:end="31:21"><name pos:start="31:15" pos:end="31:21">SIGUSR2</name></expr></argument>, <argument pos:start="31:24" pos:end="31:27"><expr pos:start="31:24" pos:end="31:27"><operator pos:start="31:24" pos:end="31:24">&amp;</operator><name pos:start="31:25" pos:end="31:27">act</name></expr></argument>, <argument pos:start="31:30" pos:end="31:33"><expr pos:start="31:30" pos:end="31:33"><name pos:start="31:30" pos:end="31:33">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:16">first_aio</name></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <name pos:start="35:20" pos:end="35:23">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:24">(<expr pos:start="37:9" pos:end="37:23"><call pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:12">pipe</name><argument_list pos:start="37:13" pos:end="37:17">(<argument pos:start="37:14" pos:end="37:16"><expr pos:start="37:14" pos:end="37:16"><name pos:start="37:14" pos:end="37:16">fds</name></expr></argument>)</argument_list></call> <operator pos:start="37:19" pos:end="37:20">==</operator> <operator pos:start="37:22" pos:end="37:22">-</operator><literal type="number" pos:start="37:23" pos:end="37:23">1</literal></expr>)</condition> <block pos:start="37:26" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:20">

        <expr_stmt pos:start="39:9" pos:end="39:51"><expr pos:start="39:9" pos:end="39:50"><call pos:start="39:9" pos:end="39:50"><name pos:start="39:9" pos:end="39:15">fprintf</name><argument_list pos:start="39:16" pos:end="39:50">(<argument pos:start="39:17" pos:end="39:22"><expr pos:start="39:17" pos:end="39:22"><name pos:start="39:17" pos:end="39:22">stderr</name></expr></argument>, <argument pos:start="39:25" pos:end="39:49"><expr pos:start="39:25" pos:end="39:49"><literal type="string" pos:start="39:25" pos:end="39:49">"failed to create pipe\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:20">return <expr pos:start="41:16" pos:end="41:19"><name pos:start="41:16" pos:end="41:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:20"><expr pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:10"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:10">rfd</name></name> <operator pos:start="47:12" pos:end="47:12">=</operator> <name pos:start="47:14" pos:end="47:19"><name pos:start="47:14" pos:end="47:16">fds</name><index pos:start="47:17" pos:end="47:19">[<expr pos:start="47:18" pos:end="47:18"><literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:20"><expr pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:10"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:10">wfd</name></name> <operator pos:start="49:12" pos:end="49:12">=</operator> <name pos:start="49:14" pos:end="49:19"><name pos:start="49:14" pos:end="49:16">fds</name><index pos:start="49:17" pos:end="49:19">[<expr pos:start="49:18" pos:end="49:18"><literal type="number" pos:start="49:18" pos:end="49:18">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:39"><expr pos:start="53:5" pos:end="53:38"><call pos:start="53:5" pos:end="53:38"><name pos:start="53:5" pos:end="53:9">fcntl</name><argument_list pos:start="53:10" pos:end="53:38">(<argument pos:start="53:11" pos:end="53:16"><expr pos:start="53:11" pos:end="53:16"><name pos:start="53:11" pos:end="53:16"><name pos:start="53:11" pos:end="53:11">s</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:16">rfd</name></name></expr></argument>, <argument pos:start="53:19" pos:end="53:25"><expr pos:start="53:19" pos:end="53:25"><name pos:start="53:19" pos:end="53:25">F_SETFL</name></expr></argument>, <argument pos:start="53:28" pos:end="53:37"><expr pos:start="53:28" pos:end="53:37"><name pos:start="53:28" pos:end="53:37">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:39"><expr pos:start="55:5" pos:end="55:38"><call pos:start="55:5" pos:end="55:38"><name pos:start="55:5" pos:end="55:9">fcntl</name><argument_list pos:start="55:10" pos:end="55:38">(<argument pos:start="55:11" pos:end="55:16"><expr pos:start="55:11" pos:end="55:16"><name pos:start="55:11" pos:end="55:16"><name pos:start="55:11" pos:end="55:11">s</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:16">wfd</name></name></expr></argument>, <argument pos:start="55:19" pos:end="55:25"><expr pos:start="55:19" pos:end="55:25"><name pos:start="55:19" pos:end="55:25">F_SETFL</name></expr></argument>, <argument pos:start="55:28" pos:end="55:37"><expr pos:start="55:28" pos:end="55:37"><name pos:start="55:28" pos:end="55:37">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:78"><expr pos:start="59:5" pos:end="59:77"><call pos:start="59:5" pos:end="59:77"><name pos:start="59:5" pos:end="59:27">qemu_aio_set_fd_handler</name><argument_list pos:start="59:28" pos:end="59:77">(<argument pos:start="59:29" pos:end="59:34"><expr pos:start="59:29" pos:end="59:34"><name pos:start="59:29" pos:end="59:34"><name pos:start="59:29" pos:end="59:29">s</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:34">rfd</name></name></expr></argument>, <argument pos:start="59:37" pos:end="59:50"><expr pos:start="59:37" pos:end="59:50"><name pos:start="59:37" pos:end="59:50">posix_aio_read</name></expr></argument>, <argument pos:start="59:53" pos:end="59:56"><expr pos:start="59:53" pos:end="59:56"><name pos:start="59:53" pos:end="59:56">NULL</name></expr></argument>, <argument pos:start="59:59" pos:end="59:73"><expr pos:start="59:59" pos:end="59:73"><name pos:start="59:59" pos:end="59:73">posix_aio_flush</name></expr></argument>, <argument pos:start="59:76" pos:end="59:76"><expr pos:start="59:76" pos:end="59:76"><name pos:start="59:76" pos:end="59:76">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:35"><expr pos:start="63:5" pos:end="63:34"><name pos:start="63:5" pos:end="63:7">ret</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="63:34"><name pos:start="63:11" pos:end="63:27">pthread_attr_init</name><argument_list pos:start="63:28" pos:end="63:34">(<argument pos:start="63:29" pos:end="63:33"><expr pos:start="63:29" pos:end="63:33"><operator pos:start="63:29" pos:end="63:29">&amp;</operator><name pos:start="63:30" pos:end="63:33">attr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="67:39"><if pos:start="65:5" pos:end="67:39">if <condition pos:start="65:8" pos:end="65:12">(<expr pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:11">ret</name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:39"><block_content pos:start="67:9" pos:end="67:39">

        <expr_stmt pos:start="67:9" pos:end="67:39"><expr pos:start="67:9" pos:end="67:38"><call pos:start="67:9" pos:end="67:38"><name pos:start="67:9" pos:end="67:12">die2</name><argument_list pos:start="67:13" pos:end="67:38">(<argument pos:start="67:14" pos:end="67:16"><expr pos:start="67:14" pos:end="67:16"><name pos:start="67:14" pos:end="67:16">ret</name></expr></argument>, <argument pos:start="67:19" pos:end="67:37"><expr pos:start="67:19" pos:end="67:37"><literal type="string" pos:start="67:19" pos:end="67:37">"pthread_attr_init"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:70"><expr pos:start="71:5" pos:end="71:69"><name pos:start="71:5" pos:end="71:7">ret</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <call pos:start="71:11" pos:end="71:69"><name pos:start="71:11" pos:end="71:37">pthread_attr_setdetachstate</name><argument_list pos:start="71:38" pos:end="71:69">(<argument pos:start="71:39" pos:end="71:43"><expr pos:start="71:39" pos:end="71:43"><operator pos:start="71:39" pos:end="71:39">&amp;</operator><name pos:start="71:40" pos:end="71:43">attr</name></expr></argument>, <argument pos:start="71:46" pos:end="71:68"><expr pos:start="71:46" pos:end="71:68"><name pos:start="71:46" pos:end="71:68">PTHREAD_CREATE_DETACHED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="75:49"><if pos:start="73:5" pos:end="75:49">if <condition pos:start="73:8" pos:end="73:12">(<expr pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">ret</name></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:49"><block_content pos:start="75:9" pos:end="75:49">

        <expr_stmt pos:start="75:9" pos:end="75:49"><expr pos:start="75:9" pos:end="75:48"><call pos:start="75:9" pos:end="75:48"><name pos:start="75:9" pos:end="75:12">die2</name><argument_list pos:start="75:13" pos:end="75:48">(<argument pos:start="75:14" pos:end="75:16"><expr pos:start="75:14" pos:end="75:16"><name pos:start="75:14" pos:end="75:16">ret</name></expr></argument>, <argument pos:start="75:19" pos:end="75:47"><expr pos:start="75:19" pos:end="75:47"><literal type="string" pos:start="75:19" pos:end="75:47">"pthread_attr_setdetachstate"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:30"><expr pos:start="79:5" pos:end="79:29"><call pos:start="79:5" pos:end="79:29"><name pos:start="79:5" pos:end="79:14">TAILQ_INIT</name><argument_list pos:start="79:15" pos:end="79:29">(<argument pos:start="79:16" pos:end="79:28"><expr pos:start="79:16" pos:end="79:28"><operator pos:start="79:16" pos:end="79:16">&amp;</operator><name pos:start="79:17" pos:end="79:28">request_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:24"><expr pos:start="83:5" pos:end="83:23"><name pos:start="83:5" pos:end="83:19">posix_aio_state</name> <operator pos:start="83:21" pos:end="83:21">=</operator> <name pos:start="83:23" pos:end="83:23">s</name></expr>;</expr_stmt>



    <return pos:start="87:5" pos:end="87:27">return <expr pos:start="87:12" pos:end="87:26"><name pos:start="87:12" pos:end="87:26">posix_aio_state</name></expr>;</return>

</block_content>}</block></function>
</unit>
