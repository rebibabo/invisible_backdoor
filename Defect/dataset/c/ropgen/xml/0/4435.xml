<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4435.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">get_pci_config_device</name><parameter_list pos:start="1:33" pos:end="1:68">(<parameter pos:start="1:34" pos:end="1:44"><decl pos:start="1:34" pos:end="1:44"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:41">QEMUFile</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">f</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:54"><decl pos:start="1:47" pos:end="1:54"><type pos:start="1:47" pos:end="1:54"><name pos:start="1:47" pos:end="1:50">void</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">pv</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:67"><decl pos:start="1:57" pos:end="1:67"><type pos:start="1:57" pos:end="1:67"><name pos:start="1:57" pos:end="1:62">size_t</name></type> <name pos:start="1:64" pos:end="1:67">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:54">= <expr pos:start="5:20" pos:end="5:54"><call pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:31">container_of</name><argument_list pos:start="5:32" pos:end="5:54">(<argument pos:start="5:33" pos:end="5:34"><expr pos:start="5:33" pos:end="5:34"><name pos:start="5:33" pos:end="5:34">pv</name></expr></argument>, <argument pos:start="5:37" pos:end="5:45"><expr pos:start="5:37" pos:end="5:45"><name pos:start="5:37" pos:end="5:45">PCIDevice</name></expr></argument>, <argument pos:start="5:48" pos:end="5:53"><expr pos:start="5:48" pos:end="5:53"><name pos:start="5:48" pos:end="5:53">config</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:19">config</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:39"><expr pos:start="13:5" pos:end="13:38"><call pos:start="13:5" pos:end="13:38"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:38">(<argument pos:start="13:12" pos:end="13:37"><expr pos:start="13:12" pos:end="13:37"><name pos:start="13:12" pos:end="13:15">size</name> <operator pos:start="13:17" pos:end="13:18">==</operator> <call pos:start="13:20" pos:end="13:37"><name pos:start="13:20" pos:end="13:34">pci_config_size</name><argument_list pos:start="13:35" pos:end="13:37">(<argument pos:start="13:36" pos:end="13:36"><expr pos:start="13:36" pos:end="13:36"><name pos:start="13:36" pos:end="13:36">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:10">config</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:30"><name pos:start="15:14" pos:end="15:24">qemu_malloc</name><argument_list pos:start="15:25" pos:end="15:30">(<argument pos:start="15:26" pos:end="15:29"><expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><call pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:19">qemu_get_buffer</name><argument_list pos:start="19:20" pos:end="19:36">(<argument pos:start="19:21" pos:end="19:21"><expr pos:start="19:21" pos:end="19:21"><name pos:start="19:21" pos:end="19:21">f</name></expr></argument>, <argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">config</name></expr></argument>, <argument pos:start="19:32" pos:end="19:35"><expr pos:start="19:32" pos:end="19:35"><name pos:start="19:32" pos:end="19:35">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="31:5">for <control pos:start="21:9" pos:end="21:30">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:25"><expr pos:start="21:17" pos:end="21:24"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:24">size</name></expr>;</condition> <incr pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><operator pos:start="21:27" pos:end="21:28">++</operator><name pos:start="21:29" pos:end="21:29">i</name></expr></incr>)</control> <block pos:start="21:32" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:9">

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:68">(<expr pos:start="23:13" pos:end="23:67"><operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:22"><name pos:start="23:14" pos:end="23:19">config</name><index pos:start="23:20" pos:end="23:22">[<expr pos:start="23:21" pos:end="23:21"><name pos:start="23:21" pos:end="23:21">i</name></expr>]</index></name> <operator pos:start="23:24" pos:end="23:24">^</operator> <name pos:start="23:26" pos:end="23:37"><name pos:start="23:26" pos:end="23:26">s</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:34">config</name><index pos:start="23:35" pos:end="23:37">[<expr pos:start="23:36" pos:end="23:36"><name pos:start="23:36" pos:end="23:36">i</name></expr>]</index></name><operator pos:start="23:38" pos:end="23:38">)</operator> <operator pos:start="23:40" pos:end="23:40">&amp;</operator> <name pos:start="23:42" pos:end="23:52"><name pos:start="23:42" pos:end="23:42">s</name><operator pos:start="23:43" pos:end="23:44">-&gt;</operator><name pos:start="23:45" pos:end="23:49">cmask</name><index pos:start="23:50" pos:end="23:52">[<expr pos:start="23:51" pos:end="23:51"><name pos:start="23:51" pos:end="23:51">i</name></expr>]</index></name> <operator pos:start="23:54" pos:end="23:54">&amp;</operator> <operator pos:start="23:56" pos:end="23:56">~</operator><name pos:start="23:57" pos:end="23:67"><name pos:start="23:57" pos:end="23:57">s</name><operator pos:start="23:58" pos:end="23:59">-&gt;</operator><name pos:start="23:60" pos:end="23:64">wmask</name><index pos:start="23:65" pos:end="23:67">[<expr pos:start="23:66" pos:end="23:66"><name pos:start="23:66" pos:end="23:66">i</name></expr>]</index></name></expr>)</condition> <block pos:start="23:70" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:27">

            <expr_stmt pos:start="25:13" pos:end="25:30"><expr pos:start="25:13" pos:end="25:29"><call pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:21">qemu_free</name><argument_list pos:start="25:22" pos:end="25:29">(<argument pos:start="25:23" pos:end="25:28"><expr pos:start="25:23" pos:end="25:28"><name pos:start="25:23" pos:end="25:28">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:27">return <expr pos:start="27:20" pos:end="27:26"><operator pos:start="27:20" pos:end="27:20">-</operator><name pos:start="27:21" pos:end="27:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><call pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:10">memcpy</name><argument_list pos:start="33:11" pos:end="33:35">(<argument pos:start="33:12" pos:end="33:20"><expr pos:start="33:12" pos:end="33:20"><name pos:start="33:12" pos:end="33:20"><name pos:start="33:12" pos:end="33:12">s</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:20">config</name></name></expr></argument>, <argument pos:start="33:23" pos:end="33:28"><expr pos:start="33:23" pos:end="33:28"><name pos:start="33:23" pos:end="33:28">config</name></expr></argument>, <argument pos:start="33:31" pos:end="33:34"><expr pos:start="33:31" pos:end="33:34"><name pos:start="33:31" pos:end="33:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><call pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:23">pci_update_mappings</name><argument_list pos:start="37:24" pos:end="37:26">(<argument pos:start="37:25" pos:end="37:25"><expr pos:start="37:25" pos:end="37:25"><name pos:start="37:25" pos:end="37:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:22"><expr pos:start="41:5" pos:end="41:21"><call pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:13">qemu_free</name><argument_list pos:start="41:14" pos:end="41:21">(<argument pos:start="41:15" pos:end="41:20"><expr pos:start="41:15" pos:end="41:20"><name pos:start="41:15" pos:end="41:20">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
