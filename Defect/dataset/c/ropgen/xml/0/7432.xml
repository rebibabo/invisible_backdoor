<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7432.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:29">kvm_s390_apply_cpu_model</name><parameter_list pos:start="1:30" pos:end="1:70">(<parameter pos:start="1:31" pos:end="1:55"><decl pos:start="1:31" pos:end="1:55"><type pos:start="1:31" pos:end="1:55"><specifier pos:start="1:31" pos:end="1:35">const</specifier> <name pos:start="1:37" pos:end="1:48">S390CPUModel</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">model</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:62">Error</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier><modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:5">

    <decl_stmt pos:start="5:5" pos:end="9:6"><decl pos:start="5:5" pos:end="9:5"><type pos:start="5:5" pos:end="5:36"><name pos:start="5:5" pos:end="5:36"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:36">kvm_s390_vm_cpu_processor</name></name></type> <name pos:start="5:38" pos:end="5:41">prop</name>  <init pos:start="5:44" pos:end="9:5">= <expr pos:start="5:46" pos:end="9:5"><block pos:start="5:46" pos:end="9:5">{

        <expr pos:start="7:9" pos:end="7:25"><operator pos:start="7:9" pos:end="7:9">.</operator><name pos:start="7:10" pos:end="7:17">fac_list</name> <operator pos:start="7:19" pos:end="7:19">=</operator> <block pos:start="7:21" pos:end="7:25">{ <expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">0</literal></expr> }</block></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="19:6"><decl pos:start="11:5" pos:end="19:5"><type pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:26">kvm_device_attr</name></name></type> <name pos:start="11:28" pos:end="11:31">attr</name> <init pos:start="11:33" pos:end="19:5">= <expr pos:start="11:35" pos:end="19:5"><block pos:start="11:35" pos:end="19:5">{

        <expr pos:start="13:9" pos:end="13:38"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:14">group</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <name pos:start="13:18" pos:end="13:38">KVM_S390_VM_CPU_MODEL</name></expr>,

        <expr pos:start="15:9" pos:end="15:41"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:13">attr</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <name pos:start="15:17" pos:end="15:41">KVM_S390_VM_CPU_PROCESSOR</name></expr>,

        <expr pos:start="17:9" pos:end="17:32"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:13">addr</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <operator pos:start="17:17" pos:end="17:17">(</operator><name pos:start="17:18" pos:end="17:25">uint64_t</name><operator pos:start="17:26" pos:end="17:26">)</operator> <operator pos:start="17:28" pos:end="17:28">&amp;</operator><name pos:start="17:29" pos:end="17:32">prop</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:11"><decl pos:start="21:5" pos:end="21:10"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:10">rc</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:15">(<expr pos:start="25:9" pos:end="25:14"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:14">model</name></expr>)</condition> <block pos:start="25:17" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:15">

        <comment type="block" pos:start="27:9" pos:end="27:63">/* compatibility handling if cpu models are disabled */</comment>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:51">(<expr pos:start="29:13" pos:end="29:50"><call pos:start="29:13" pos:end="29:37"><name pos:start="29:13" pos:end="29:35">kvm_s390_cmma_available</name><argument_list pos:start="29:36" pos:end="29:37">()</argument_list></call> <operator pos:start="29:39" pos:end="29:40">&amp;&amp;</operator> <operator pos:start="29:42" pos:end="29:42">!</operator><name pos:start="29:43" pos:end="29:50">mem_path</name></expr>)</condition> <block pos:start="29:53" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:35">

            <expr_stmt pos:start="31:13" pos:end="31:35"><expr pos:start="31:13" pos:end="31:34"><call pos:start="31:13" pos:end="31:34"><name pos:start="31:13" pos:end="31:32">kvm_s390_enable_cmma</name><argument_list pos:start="31:33" pos:end="31:34">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:41">(<expr pos:start="39:9" pos:end="39:40"><operator pos:start="39:9" pos:end="39:9">!</operator><call pos:start="39:10" pos:end="39:40"><name pos:start="39:10" pos:end="39:38">kvm_s390_cpu_models_supported</name><argument_list pos:start="39:39" pos:end="39:40">()</argument_list></call></expr>)</condition> <block pos:start="39:43" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:15">

        <expr_stmt pos:start="41:9" pos:end="41:59"><expr pos:start="41:9" pos:end="41:58"><call pos:start="41:9" pos:end="41:58"><name pos:start="41:9" pos:end="41:18">error_setg</name><argument_list pos:start="41:19" pos:end="41:58">(<argument pos:start="41:20" pos:end="41:23"><expr pos:start="41:20" pos:end="41:23"><name pos:start="41:20" pos:end="41:23">errp</name></expr></argument>, <argument pos:start="41:26" pos:end="41:57"><expr pos:start="41:26" pos:end="41:57"><literal type="string" pos:start="41:26" pos:end="41:57">"KVM doesn't support CPU models"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:50"><expr pos:start="47:5" pos:end="47:49"><name pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:8">prop</name><operator pos:start="47:9" pos:end="47:9">.</operator><name pos:start="47:10" pos:end="47:14">cpuid</name></name> <operator pos:start="47:16" pos:end="47:16">=</operator> <call pos:start="47:18" pos:end="47:49"><name pos:start="47:18" pos:end="47:42">s390_cpuid_from_cpu_model</name><argument_list pos:start="47:43" pos:end="47:49">(<argument pos:start="47:44" pos:end="47:48"><expr pos:start="47:44" pos:end="47:48"><name pos:start="47:44" pos:end="47:48">model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:46"><expr pos:start="49:5" pos:end="49:45"><name pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:8">prop</name><operator pos:start="49:9" pos:end="49:9">.</operator><name pos:start="49:10" pos:end="49:12">ibc</name></name> <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:45"><name pos:start="49:16" pos:end="49:38">s390_ibc_from_cpu_model</name><argument_list pos:start="49:39" pos:end="49:45">(<argument pos:start="49:40" pos:end="49:44"><expr pos:start="49:40" pos:end="49:44"><name pos:start="49:40" pos:end="49:44">model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="51:5" pos:end="51:54">/* configure cpu features indicated via STFL(e) */</comment>

    <expr_stmt pos:start="53:5" pos:end="55:52"><expr pos:start="53:5" pos:end="55:51"><call pos:start="53:5" pos:end="55:51"><name pos:start="53:5" pos:end="53:24">s390_fill_feat_block</name><argument_list pos:start="53:25" pos:end="55:51">(<argument pos:start="53:26" pos:end="53:40"><expr pos:start="53:26" pos:end="53:40"><name pos:start="53:26" pos:end="53:40"><name pos:start="53:26" pos:end="53:30">model</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:40">features</name></name></expr></argument>, <argument pos:start="53:43" pos:end="53:61"><expr pos:start="53:43" pos:end="53:61"><name pos:start="53:43" pos:end="53:61">S390_FEAT_TYPE_STFL</name></expr></argument>,

                         <argument pos:start="55:26" pos:end="55:50"><expr pos:start="55:26" pos:end="55:50"><operator pos:start="55:26" pos:end="55:26">(</operator><name pos:start="55:27" pos:end="55:33">uint8_t</name> <operator pos:start="55:35" pos:end="55:35">*</operator><operator pos:start="55:36" pos:end="55:36">)</operator> <name pos:start="55:38" pos:end="55:50"><name pos:start="55:38" pos:end="55:41">prop</name><operator pos:start="55:42" pos:end="55:42">.</operator><name pos:start="55:43" pos:end="55:50">fac_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:61"><expr pos:start="57:5" pos:end="57:60"><name pos:start="57:5" pos:end="57:6">rc</name> <operator pos:start="57:8" pos:end="57:8">=</operator> <call pos:start="57:10" pos:end="57:60"><name pos:start="57:10" pos:end="57:21">kvm_vm_ioctl</name><argument_list pos:start="57:22" pos:end="57:60">(<argument pos:start="57:23" pos:end="57:31"><expr pos:start="57:23" pos:end="57:31"><name pos:start="57:23" pos:end="57:31">kvm_state</name></expr></argument>, <argument pos:start="57:34" pos:end="57:52"><expr pos:start="57:34" pos:end="57:52"><name pos:start="57:34" pos:end="57:52">KVM_SET_DEVICE_ATTR</name></expr></argument>, <argument pos:start="57:55" pos:end="57:59"><expr pos:start="57:55" pos:end="57:59"><operator pos:start="57:55" pos:end="57:55">&amp;</operator><name pos:start="57:56" pos:end="57:59">attr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:11">(<expr pos:start="59:9" pos:end="59:10"><name pos:start="59:9" pos:end="59:10">rc</name></expr>)</condition> <block pos:start="59:13" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:15">

        <expr_stmt pos:start="61:9" pos:end="61:73"><expr pos:start="61:9" pos:end="61:72"><call pos:start="61:9" pos:end="61:72"><name pos:start="61:9" pos:end="61:18">error_setg</name><argument_list pos:start="61:19" pos:end="61:72">(<argument pos:start="61:20" pos:end="61:23"><expr pos:start="61:20" pos:end="61:23"><name pos:start="61:20" pos:end="61:23">errp</name></expr></argument>, <argument pos:start="61:26" pos:end="61:67"><expr pos:start="61:26" pos:end="61:67"><literal type="string" pos:start="61:26" pos:end="61:67">"KVM: Error configuring the CPU model: %d"</literal></expr></argument>, <argument pos:start="61:70" pos:end="61:71"><expr pos:start="61:70" pos:end="61:71"><name pos:start="61:70" pos:end="61:71">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="67:5" pos:end="67:56">/* configure cpu features indicated e.g. via SCLP */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:45"><expr pos:start="69:5" pos:end="69:44"><name pos:start="69:5" pos:end="69:6">rc</name> <operator pos:start="69:8" pos:end="69:8">=</operator> <call pos:start="69:10" pos:end="69:44"><name pos:start="69:10" pos:end="69:27">configure_cpu_feat</name><argument_list pos:start="69:28" pos:end="69:44">(<argument pos:start="69:29" pos:end="69:43"><expr pos:start="69:29" pos:end="69:43"><name pos:start="69:29" pos:end="69:43"><name pos:start="69:29" pos:end="69:33">model</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:43">features</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:11">(<expr pos:start="71:9" pos:end="71:10"><name pos:start="71:9" pos:end="71:10">rc</name></expr>)</condition> <block pos:start="71:13" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:15">

        <expr_stmt pos:start="73:9" pos:end="73:72"><expr pos:start="73:9" pos:end="73:71"><call pos:start="73:9" pos:end="73:71"><name pos:start="73:9" pos:end="73:18">error_setg</name><argument_list pos:start="73:19" pos:end="73:71">(<argument pos:start="73:20" pos:end="73:23"><expr pos:start="73:20" pos:end="73:23"><name pos:start="73:20" pos:end="73:23">errp</name></expr></argument>, <argument pos:start="73:26" pos:end="73:66"><expr pos:start="73:26" pos:end="73:66"><literal type="string" pos:start="73:26" pos:end="73:66">"KVM: Error configuring CPU features: %d"</literal></expr></argument>, <argument pos:start="73:69" pos:end="73:70"><expr pos:start="73:69" pos:end="73:70"><name pos:start="73:69" pos:end="73:70">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="79:5" pos:end="79:67">/* configure cpu subfunctions indicated via query / test bit */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:48"><expr pos:start="81:5" pos:end="81:47"><name pos:start="81:5" pos:end="81:6">rc</name> <operator pos:start="81:8" pos:end="81:8">=</operator> <call pos:start="81:10" pos:end="81:47"><name pos:start="81:10" pos:end="81:30">configure_cpu_subfunc</name><argument_list pos:start="81:31" pos:end="81:47">(<argument pos:start="81:32" pos:end="81:46"><expr pos:start="81:32" pos:end="81:46"><name pos:start="81:32" pos:end="81:46"><name pos:start="81:32" pos:end="81:36">model</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:46">features</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:11">(<expr pos:start="83:9" pos:end="83:10"><name pos:start="83:9" pos:end="83:10">rc</name></expr>)</condition> <block pos:start="83:13" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:15">

        <expr_stmt pos:start="85:9" pos:end="85:76"><expr pos:start="85:9" pos:end="85:75"><call pos:start="85:9" pos:end="85:75"><name pos:start="85:9" pos:end="85:18">error_setg</name><argument_list pos:start="85:19" pos:end="85:75">(<argument pos:start="85:20" pos:end="85:23"><expr pos:start="85:20" pos:end="85:23"><name pos:start="85:20" pos:end="85:23">errp</name></expr></argument>, <argument pos:start="85:26" pos:end="85:70"><expr pos:start="85:26" pos:end="85:70"><literal type="string" pos:start="85:26" pos:end="85:70">"KVM: Error configuring CPU subfunctions: %d"</literal></expr></argument>, <argument pos:start="85:73" pos:end="85:74"><expr pos:start="85:73" pos:end="85:74"><name pos:start="85:73" pos:end="85:74">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="91:5" pos:end="91:52">/* enable CMM via CMMA - disable on hugetlbfs */</comment>

    <if_stmt pos:start="93:5" pos:end="107:5"><if pos:start="93:5" pos:end="107:5">if <condition pos:start="93:8" pos:end="93:49">(<expr pos:start="93:9" pos:end="93:48"><call pos:start="93:9" pos:end="93:48"><name pos:start="93:9" pos:end="93:16">test_bit</name><argument_list pos:start="93:17" pos:end="93:48">(<argument pos:start="93:18" pos:end="93:30"><expr pos:start="93:18" pos:end="93:30"><name pos:start="93:18" pos:end="93:30">S390_FEAT_CMM</name></expr></argument>, <argument pos:start="93:33" pos:end="93:47"><expr pos:start="93:33" pos:end="93:47"><name pos:start="93:33" pos:end="93:47"><name pos:start="93:33" pos:end="93:37">model</name><operator pos:start="93:38" pos:end="93:39">-&gt;</operator><name pos:start="93:40" pos:end="93:47">features</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:51" pos:end="107:5">{<block_content pos:start="95:9" pos:end="105:9">

        <if_stmt pos:start="95:9" pos:end="105:9"><if pos:start="95:9" pos:end="101:9">if <condition pos:start="95:12" pos:end="95:21">(<expr pos:start="95:13" pos:end="95:20"><name pos:start="95:13" pos:end="95:20">mem_path</name></expr>)</condition> <block pos:start="95:23" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:53">

            <expr_stmt pos:start="97:13" pos:end="99:53"><expr pos:start="97:13" pos:end="99:52"><call pos:start="97:13" pos:end="99:52"><name pos:start="97:13" pos:end="97:24">error_report</name><argument_list pos:start="97:25" pos:end="99:52">(<argument pos:start="97:26" pos:end="99:51"><expr pos:start="97:26" pos:end="99:51"><literal type="string" pos:start="97:26" pos:end="97:78">"Warning: CMM will not be enabled because it is not "</literal>

                         <literal type="string" pos:start="99:26" pos:end="99:51">"compatible to hugetlbfs."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="101:11" pos:end="105:9">else <block pos:start="101:16" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:35">

            <expr_stmt pos:start="103:13" pos:end="103:35"><expr pos:start="103:13" pos:end="103:34"><call pos:start="103:13" pos:end="103:34"><name pos:start="103:13" pos:end="103:32">kvm_s390_enable_cmma</name><argument_list pos:start="103:33" pos:end="103:34">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
