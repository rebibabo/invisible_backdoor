<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4324.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">stream_start</name><parameter_list pos:start="1:18" pos:end="5:45">(<parameter pos:start="1:19" pos:end="1:38"><decl pos:start="1:19" pos:end="1:38"><type pos:start="1:19" pos:end="1:38"><name pos:start="1:19" pos:end="1:34">BlockDriverState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">bs</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:62"><decl pos:start="1:41" pos:end="1:62"><type pos:start="1:41" pos:end="1:62"><name pos:start="1:41" pos:end="1:56">BlockDriverState</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">base</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:37"><decl pos:start="3:19" pos:end="3:37"><type pos:start="3:19" pos:end="3:37"><specifier pos:start="3:19" pos:end="3:23">const</specifier> <name pos:start="3:25" pos:end="3:28">char</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:37">base_id</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:68"><decl pos:start="3:40" pos:end="3:68"><type pos:start="3:40" pos:end="3:68"><name pos:start="3:40" pos:end="3:64">BlockDriverCompletionFunc</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:68">cb</name></decl></parameter>,

                  <parameter pos:start="5:19" pos:end="5:30"><decl pos:start="5:19" pos:end="5:30"><type pos:start="5:19" pos:end="5:30"><name pos:start="5:19" pos:end="5:22">void</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:30">opaque</name></decl></parameter>, <parameter pos:start="5:33" pos:end="5:44"><decl pos:start="5:33" pos:end="5:44"><type pos:start="5:33" pos:end="5:44"><name pos:start="5:33" pos:end="5:37">Error</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier><modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:44">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="41:1">{<block_content pos:start="9:5" pos:end="39:32">

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">StreamBlockJob</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">Coroutine</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:17">co</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:65"><expr pos:start="15:5" pos:end="15:64"><name pos:start="15:5" pos:end="15:5">s</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <call pos:start="15:9" pos:end="15:64"><name pos:start="15:9" pos:end="15:24">block_job_create</name><argument_list pos:start="15:25" pos:end="15:64">(<argument pos:start="15:26" pos:end="15:41"><expr pos:start="15:26" pos:end="15:41"><operator pos:start="15:26" pos:end="15:26">&amp;</operator><name pos:start="15:27" pos:end="15:41">stream_job_type</name></expr></argument>, <argument pos:start="15:44" pos:end="15:45"><expr pos:start="15:44" pos:end="15:45"><name pos:start="15:44" pos:end="15:45">bs</name></expr></argument>, <argument pos:start="15:48" pos:end="15:49"><expr pos:start="15:48" pos:end="15:49"><name pos:start="15:48" pos:end="15:49">cb</name></expr></argument>, <argument pos:start="15:52" pos:end="15:57"><expr pos:start="15:52" pos:end="15:57"><name pos:start="15:52" pos:end="15:57">opaque</name></expr></argument>, <argument pos:start="15:60" pos:end="15:63"><expr pos:start="15:60" pos:end="15:63"><name pos:start="15:60" pos:end="15:63">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:11">(<expr pos:start="17:9" pos:end="17:10"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:10">s</name></expr>)</condition> <block pos:start="17:13" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:15">

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:11">base</name></name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:18">base</name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:15">base_id</name></expr>)</condition> <block pos:start="27:18" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:73">

        <expr_stmt pos:start="29:9" pos:end="29:73"><expr pos:start="29:9" pos:end="29:72"><call pos:start="29:9" pos:end="29:72"><name pos:start="29:9" pos:end="29:15">pstrcpy</name><argument_list pos:start="29:16" pos:end="29:72">(<argument pos:start="29:17" pos:end="29:34"><expr pos:start="29:17" pos:end="29:34"><name pos:start="29:17" pos:end="29:34"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:34">backing_file_id</name></name></expr></argument>, <argument pos:start="29:37" pos:end="29:62"><expr pos:start="29:37" pos:end="29:62"><sizeof pos:start="29:37" pos:end="29:62">sizeof<argument_list pos:start="29:43" pos:end="29:62">(<argument pos:start="29:44" pos:end="29:61"><expr pos:start="29:44" pos:end="29:61"><name pos:start="29:44" pos:end="29:61"><name pos:start="29:44" pos:end="29:44">s</name><operator pos:start="29:45" pos:end="29:46">-&gt;</operator><name pos:start="29:47" pos:end="29:61">backing_file_id</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:65" pos:end="29:71"><expr pos:start="29:65" pos:end="29:71"><name pos:start="29:65" pos:end="29:71">base_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:43"><expr pos:start="35:5" pos:end="35:42"><name pos:start="35:5" pos:end="35:6">co</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:42"><name pos:start="35:10" pos:end="35:30">qemu_coroutine_create</name><argument_list pos:start="35:31" pos:end="35:42">(<argument pos:start="35:32" pos:end="35:41"><expr pos:start="35:32" pos:end="35:41"><name pos:start="35:32" pos:end="35:41">stream_run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:48"><expr pos:start="37:5" pos:end="37:47"><call pos:start="37:5" pos:end="37:47"><name pos:start="37:5" pos:end="37:22">trace_stream_start</name><argument_list pos:start="37:23" pos:end="37:47">(<argument pos:start="37:24" pos:end="37:25"><expr pos:start="37:24" pos:end="37:25"><name pos:start="37:24" pos:end="37:25">bs</name></expr></argument>, <argument pos:start="37:28" pos:end="37:31"><expr pos:start="37:28" pos:end="37:31"><name pos:start="37:28" pos:end="37:31">base</name></expr></argument>, <argument pos:start="37:34" pos:end="37:34"><expr pos:start="37:34" pos:end="37:34"><name pos:start="37:34" pos:end="37:34">s</name></expr></argument>, <argument pos:start="37:37" pos:end="37:38"><expr pos:start="37:37" pos:end="37:38"><name pos:start="37:37" pos:end="37:38">co</name></expr></argument>, <argument pos:start="37:41" pos:end="37:46"><expr pos:start="37:41" pos:end="37:46"><name pos:start="37:41" pos:end="37:46">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:32"><expr pos:start="39:5" pos:end="39:31"><call pos:start="39:5" pos:end="39:31"><name pos:start="39:5" pos:end="39:24">qemu_coroutine_enter</name><argument_list pos:start="39:25" pos:end="39:31">(<argument pos:start="39:26" pos:end="39:27"><expr pos:start="39:26" pos:end="39:27"><name pos:start="39:26" pos:end="39:27">co</name></expr></argument>, <argument pos:start="39:30" pos:end="39:30"><expr pos:start="39:30" pos:end="39:30"><name pos:start="39:30" pos:end="39:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
