<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2105.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">hevc_decode_free</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:13">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:15">HEVCContext</name>       <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:43">= <expr pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:32">avctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">HEVCLocalContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">lc</name> <init pos:start="7:26" pos:end="7:36">= <expr pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:36">HEVClc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:23"><expr pos:start="13:5" pos:end="13:22"><call pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:19">pic_arrays_free</name><argument_list pos:start="13:20" pos:end="13:22">(<argument pos:start="13:21" pos:end="13:21"><expr pos:start="13:21" pos:end="13:21"><name pos:start="13:21" pos:end="13:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:26"><expr pos:start="17:5" pos:end="17:25"><call pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:12">av_freep</name><argument_list pos:start="17:13" pos:end="17:25">(<argument pos:start="17:14" pos:end="17:24"><expr pos:start="17:14" pos:end="17:24"><operator pos:start="17:14" pos:end="17:14">&amp;</operator><name pos:start="17:15" pos:end="17:24"><name pos:start="17:15" pos:end="17:15">s</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:24">md5_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="25:5">for<control pos:start="21:8" pos:end="21:40">(<init pos:start="21:9" pos:end="21:12"><expr pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:9">i</name><operator pos:start="21:10" pos:end="21:10">=</operator><literal type="number" pos:start="21:11" pos:end="21:11">0</literal></expr>;</init> <condition pos:start="21:14" pos:end="21:35"><expr pos:start="21:14" pos:end="21:34"><name pos:start="21:14" pos:end="21:14">i</name> <operator pos:start="21:16" pos:end="21:16">&lt;</operator> <name pos:start="21:18" pos:end="21:34"><name pos:start="21:18" pos:end="21:18">s</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:34">nals_allocated</name></name></expr>;</condition> <incr pos:start="21:37" pos:end="21:39"><expr pos:start="21:37" pos:end="21:39"><name pos:start="21:37" pos:end="21:37">i</name><operator pos:start="21:38" pos:end="21:39">++</operator></expr></incr>)</control> <block pos:start="21:42" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:47">

        <expr_stmt pos:start="23:9" pos:end="23:47"><expr pos:start="23:9" pos:end="23:46"><call pos:start="23:9" pos:end="23:46"><name pos:start="23:9" pos:end="23:16">av_freep</name><argument_list pos:start="23:17" pos:end="23:46">(<argument pos:start="23:18" pos:end="23:45"><expr pos:start="23:18" pos:end="23:45"><operator pos:start="23:18" pos:end="23:18">&amp;</operator><name pos:start="23:19" pos:end="23:45"><name pos:start="23:19" pos:end="23:19">s</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:42">skipped_bytes_pos_nal</name><index pos:start="23:43" pos:end="23:45">[<expr pos:start="23:44" pos:end="23:44"><name pos:start="23:44" pos:end="23:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><call pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:12">av_freep</name><argument_list pos:start="27:13" pos:end="27:44">(<argument pos:start="27:14" pos:end="27:43"><expr pos:start="27:14" pos:end="27:43"><operator pos:start="27:14" pos:end="27:14">&amp;</operator><name pos:start="27:15" pos:end="27:43"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:43">skipped_bytes_pos_size_nal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><call pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:12">av_freep</name><argument_list pos:start="29:13" pos:end="29:35">(<argument pos:start="29:14" pos:end="29:34"><expr pos:start="29:14" pos:end="29:34"><operator pos:start="29:14" pos:end="29:14">&amp;</operator><name pos:start="29:15" pos:end="29:34"><name pos:start="29:15" pos:end="29:15">s</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:34">skipped_bytes_nal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:40"><expr pos:start="31:5" pos:end="31:39"><call pos:start="31:5" pos:end="31:39"><name pos:start="31:5" pos:end="31:12">av_freep</name><argument_list pos:start="31:13" pos:end="31:39">(<argument pos:start="31:14" pos:end="31:38"><expr pos:start="31:14" pos:end="31:38"><operator pos:start="31:14" pos:end="31:14">&amp;</operator><name pos:start="31:15" pos:end="31:38"><name pos:start="31:15" pos:end="31:15">s</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:38">skipped_bytes_pos_nal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><call pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:12">av_freep</name><argument_list pos:start="35:13" pos:end="35:29">(<argument pos:start="35:14" pos:end="35:28"><expr pos:start="35:14" pos:end="35:28"><operator pos:start="35:14" pos:end="35:14">&amp;</operator><name pos:start="35:15" pos:end="35:28"><name pos:start="35:15" pos:end="35:15">s</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:28">cabac_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:33"><expr pos:start="39:5" pos:end="39:32"><call pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:17">av_frame_free</name><argument_list pos:start="39:18" pos:end="39:32">(<argument pos:start="39:19" pos:end="39:31"><expr pos:start="39:19" pos:end="39:31"><operator pos:start="39:19" pos:end="39:19">&amp;</operator><name pos:start="39:20" pos:end="39:31"><name pos:start="39:20" pos:end="39:20">s</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:31">tmp_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:36"><expr pos:start="41:5" pos:end="41:35"><call pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:17">av_frame_free</name><argument_list pos:start="41:18" pos:end="41:35">(<argument pos:start="41:19" pos:end="41:34"><expr pos:start="41:19" pos:end="41:34"><operator pos:start="41:19" pos:end="41:19">&amp;</operator><name pos:start="41:20" pos:end="41:34"><name pos:start="41:20" pos:end="41:20">s</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:34">output_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="45:5" pos:end="51:5">for <control pos:start="45:9" pos:end="45:48">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:43"><expr pos:start="45:17" pos:end="45:42"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <call pos:start="45:21" pos:end="45:42"><name pos:start="45:21" pos:end="45:34">FF_ARRAY_ELEMS</name><argument_list pos:start="45:35" pos:end="45:42">(<argument pos:start="45:36" pos:end="45:41"><expr pos:start="45:36" pos:end="45:41"><name pos:start="45:36" pos:end="45:41"><name pos:start="45:36" pos:end="45:36">s</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:41">DPB</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="45:45" pos:end="45:47"><expr pos:start="45:45" pos:end="45:47"><name pos:start="45:45" pos:end="45:45">i</name><operator pos:start="45:46" pos:end="45:47">++</operator></expr></incr>)</control> <block pos:start="45:50" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:40">

        <expr_stmt pos:start="47:9" pos:end="47:47"><expr pos:start="47:9" pos:end="47:46"><call pos:start="47:9" pos:end="47:46"><name pos:start="47:9" pos:end="47:27">ff_hevc_unref_frame</name><argument_list pos:start="47:28" pos:end="47:46">(<argument pos:start="47:29" pos:end="47:29"><expr pos:start="47:29" pos:end="47:29"><name pos:start="47:29" pos:end="47:29">s</name></expr></argument>, <argument pos:start="47:32" pos:end="47:41"><expr pos:start="47:32" pos:end="47:41"><operator pos:start="47:32" pos:end="47:32">&amp;</operator><name pos:start="47:33" pos:end="47:41"><name pos:start="47:33" pos:end="47:33">s</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:38">DPB</name><index pos:start="47:39" pos:end="47:41">[<expr pos:start="47:40" pos:end="47:40"><name pos:start="47:40" pos:end="47:40">i</name></expr>]</index></name></expr></argument>, <argument pos:start="47:44" pos:end="47:45"><expr pos:start="47:44" pos:end="47:45"><operator pos:start="47:44" pos:end="47:44">~</operator><literal type="number" pos:start="47:45" pos:end="47:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:40"><expr pos:start="49:9" pos:end="49:39"><call pos:start="49:9" pos:end="49:39"><name pos:start="49:9" pos:end="49:21">av_frame_free</name><argument_list pos:start="49:22" pos:end="49:39">(<argument pos:start="49:23" pos:end="49:38"><expr pos:start="49:23" pos:end="49:38"><operator pos:start="49:23" pos:end="49:23">&amp;</operator><name pos:start="49:24" pos:end="49:32"><name pos:start="49:24" pos:end="49:24">s</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:29">DPB</name><index pos:start="49:30" pos:end="49:32">[<expr pos:start="49:31" pos:end="49:31"><name pos:start="49:31" pos:end="49:31">i</name></expr>]</index></name><operator pos:start="49:33" pos:end="49:33">.</operator><name pos:start="49:34" pos:end="49:38">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="55:5" pos:end="57:41">for <control pos:start="55:9" pos:end="55:53">(<init pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:10">i</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>;</init> <condition pos:start="55:17" pos:end="55:48"><expr pos:start="55:17" pos:end="55:47"><name pos:start="55:17" pos:end="55:17">i</name> <operator pos:start="55:19" pos:end="55:19">&lt;</operator> <call pos:start="55:21" pos:end="55:47"><name pos:start="55:21" pos:end="55:34">FF_ARRAY_ELEMS</name><argument_list pos:start="55:35" pos:end="55:47">(<argument pos:start="55:36" pos:end="55:46"><expr pos:start="55:36" pos:end="55:46"><name pos:start="55:36" pos:end="55:46"><name pos:start="55:36" pos:end="55:36">s</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:46">vps_list</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="55:50" pos:end="55:52"><expr pos:start="55:50" pos:end="55:52"><name pos:start="55:50" pos:end="55:50">i</name><operator pos:start="55:51" pos:end="55:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:9" pos:end="57:41"><block_content pos:start="57:9" pos:end="57:41">

        <expr_stmt pos:start="57:9" pos:end="57:41"><expr pos:start="57:9" pos:end="57:40"><call pos:start="57:9" pos:end="57:40"><name pos:start="57:9" pos:end="57:23">av_buffer_unref</name><argument_list pos:start="57:24" pos:end="57:40">(<argument pos:start="57:25" pos:end="57:39"><expr pos:start="57:25" pos:end="57:39"><operator pos:start="57:25" pos:end="57:25">&amp;</operator><name pos:start="57:26" pos:end="57:39"><name pos:start="57:26" pos:end="57:26">s</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:36">vps_list</name><index pos:start="57:37" pos:end="57:39">[<expr pos:start="57:38" pos:end="57:38"><name pos:start="57:38" pos:end="57:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="59:5" pos:end="61:41">for <control pos:start="59:9" pos:end="59:53">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:48"><expr pos:start="59:17" pos:end="59:47"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <call pos:start="59:21" pos:end="59:47"><name pos:start="59:21" pos:end="59:34">FF_ARRAY_ELEMS</name><argument_list pos:start="59:35" pos:end="59:47">(<argument pos:start="59:36" pos:end="59:46"><expr pos:start="59:36" pos:end="59:46"><name pos:start="59:36" pos:end="59:46"><name pos:start="59:36" pos:end="59:36">s</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:46">sps_list</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="59:50" pos:end="59:52"><expr pos:start="59:50" pos:end="59:52"><name pos:start="59:50" pos:end="59:50">i</name><operator pos:start="59:51" pos:end="59:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="61:9" pos:end="61:41"><block_content pos:start="61:9" pos:end="61:41">

        <expr_stmt pos:start="61:9" pos:end="61:41"><expr pos:start="61:9" pos:end="61:40"><call pos:start="61:9" pos:end="61:40"><name pos:start="61:9" pos:end="61:23">av_buffer_unref</name><argument_list pos:start="61:24" pos:end="61:40">(<argument pos:start="61:25" pos:end="61:39"><expr pos:start="61:25" pos:end="61:39"><operator pos:start="61:25" pos:end="61:25">&amp;</operator><name pos:start="61:26" pos:end="61:39"><name pos:start="61:26" pos:end="61:26">s</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:36">sps_list</name><index pos:start="61:37" pos:end="61:39">[<expr pos:start="61:38" pos:end="61:38"><name pos:start="61:38" pos:end="61:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="63:5" pos:end="65:41">for <control pos:start="63:9" pos:end="63:53">(<init pos:start="63:10" pos:end="63:15"><expr pos:start="63:10" pos:end="63:14"><name pos:start="63:10" pos:end="63:10">i</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr>;</init> <condition pos:start="63:17" pos:end="63:48"><expr pos:start="63:17" pos:end="63:47"><name pos:start="63:17" pos:end="63:17">i</name> <operator pos:start="63:19" pos:end="63:19">&lt;</operator> <call pos:start="63:21" pos:end="63:47"><name pos:start="63:21" pos:end="63:34">FF_ARRAY_ELEMS</name><argument_list pos:start="63:35" pos:end="63:47">(<argument pos:start="63:36" pos:end="63:46"><expr pos:start="63:36" pos:end="63:46"><name pos:start="63:36" pos:end="63:46"><name pos:start="63:36" pos:end="63:36">s</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:46">pps_list</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="63:50" pos:end="63:52"><expr pos:start="63:50" pos:end="63:52"><name pos:start="63:50" pos:end="63:50">i</name><operator pos:start="63:51" pos:end="63:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="65:9" pos:end="65:41"><block_content pos:start="65:9" pos:end="65:41">

        <expr_stmt pos:start="65:9" pos:end="65:41"><expr pos:start="65:9" pos:end="65:40"><call pos:start="65:9" pos:end="65:40"><name pos:start="65:9" pos:end="65:23">av_buffer_unref</name><argument_list pos:start="65:24" pos:end="65:40">(<argument pos:start="65:25" pos:end="65:39"><expr pos:start="65:25" pos:end="65:39"><operator pos:start="65:25" pos:end="65:25">&amp;</operator><name pos:start="65:26" pos:end="65:39"><name pos:start="65:26" pos:end="65:26">s</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:36">pps_list</name><index pos:start="65:37" pos:end="65:39">[<expr pos:start="65:38" pos:end="65:38"><name pos:start="65:38" pos:end="65:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="67:5" pos:end="67:18"><expr pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:10"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:10">sps</name></name> <operator pos:start="67:12" pos:end="67:12">=</operator> <name pos:start="67:14" pos:end="67:17">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:18"><expr pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:10"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:10">pps</name></name> <operator pos:start="69:12" pos:end="69:12">=</operator> <name pos:start="69:14" pos:end="69:17">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:18"><expr pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:10"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:10">vps</name></name> <operator pos:start="71:12" pos:end="71:12">=</operator> <name pos:start="71:14" pos:end="71:17">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:37"><expr pos:start="75:5" pos:end="75:36"><call pos:start="75:5" pos:end="75:36"><name pos:start="75:5" pos:end="75:19">av_buffer_unref</name><argument_list pos:start="75:20" pos:end="75:36">(<argument pos:start="75:21" pos:end="75:35"><expr pos:start="75:21" pos:end="75:35"><operator pos:start="75:21" pos:end="75:21">&amp;</operator><name pos:start="75:22" pos:end="75:35"><name pos:start="75:22" pos:end="75:22">s</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:35">current_sps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:40"><expr pos:start="79:5" pos:end="79:39"><call pos:start="79:5" pos:end="79:39"><name pos:start="79:5" pos:end="79:12">av_freep</name><argument_list pos:start="79:13" pos:end="79:39">(<argument pos:start="79:14" pos:end="79:38"><expr pos:start="79:14" pos:end="79:38"><operator pos:start="79:14" pos:end="79:14">&amp;</operator><name pos:start="79:15" pos:end="79:38"><name pos:start="79:15" pos:end="79:15">s</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:19">sh</name><operator pos:start="79:20" pos:end="79:20">.</operator><name pos:start="79:21" pos:end="79:38">entry_point_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:28"><expr pos:start="81:5" pos:end="81:27"><call pos:start="81:5" pos:end="81:27"><name pos:start="81:5" pos:end="81:12">av_freep</name><argument_list pos:start="81:13" pos:end="81:27">(<argument pos:start="81:14" pos:end="81:26"><expr pos:start="81:14" pos:end="81:26"><operator pos:start="81:14" pos:end="81:14">&amp;</operator><name pos:start="81:15" pos:end="81:26"><name pos:start="81:15" pos:end="81:15">s</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:19">sh</name><operator pos:start="81:20" pos:end="81:20">.</operator><name pos:start="81:21" pos:end="81:26">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:26"><expr pos:start="83:5" pos:end="83:25"><call pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:12">av_freep</name><argument_list pos:start="83:13" pos:end="83:25">(<argument pos:start="83:14" pos:end="83:24"><expr pos:start="83:14" pos:end="83:24"><operator pos:start="83:14" pos:end="83:14">&amp;</operator><name pos:start="83:15" pos:end="83:24"><name pos:start="83:15" pos:end="83:15">s</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:19">sh</name><operator pos:start="83:20" pos:end="83:20">.</operator><name pos:start="83:21" pos:end="83:24">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="87:5" pos:end="99:5">for <control pos:start="87:9" pos:end="87:43">(<init pos:start="87:10" pos:end="87:15"><expr pos:start="87:10" pos:end="87:14"><name pos:start="87:10" pos:end="87:10">i</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <literal type="number" pos:start="87:14" pos:end="87:14">1</literal></expr>;</init> <condition pos:start="87:17" pos:end="87:38"><expr pos:start="87:17" pos:end="87:37"><name pos:start="87:17" pos:end="87:17">i</name> <operator pos:start="87:19" pos:end="87:19">&lt;</operator> <name pos:start="87:21" pos:end="87:37"><name pos:start="87:21" pos:end="87:21">s</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:37">threads_number</name></name></expr>;</condition> <incr pos:start="87:40" pos:end="87:42"><expr pos:start="87:40" pos:end="87:42"><name pos:start="87:40" pos:end="87:40">i</name><operator pos:start="87:41" pos:end="87:42">++</operator></expr></incr>)</control> <block pos:start="87:45" pos:end="99:5">{<block_content pos:start="89:9" pos:end="97:9">

        <expr_stmt pos:start="89:9" pos:end="89:30"><expr pos:start="89:9" pos:end="89:29"><name pos:start="89:9" pos:end="89:10">lc</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <name pos:start="89:14" pos:end="89:29"><name pos:start="89:14" pos:end="89:14">s</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:26">HEVClcList</name><index pos:start="89:27" pos:end="89:29">[<expr pos:start="89:28" pos:end="89:28"><name pos:start="89:28" pos:end="89:28">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="97:9"><if pos:start="91:9" pos:end="97:9">if <condition pos:start="91:12" pos:end="91:15">(<expr pos:start="91:13" pos:end="91:14"><name pos:start="91:13" pos:end="91:14">lc</name></expr>)</condition> <block pos:start="91:17" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:35">

            <expr_stmt pos:start="93:13" pos:end="93:40"><expr pos:start="93:13" pos:end="93:39"><call pos:start="93:13" pos:end="93:39"><name pos:start="93:13" pos:end="93:20">av_freep</name><argument_list pos:start="93:21" pos:end="93:39">(<argument pos:start="93:22" pos:end="93:38"><expr pos:start="93:22" pos:end="93:38"><operator pos:start="93:22" pos:end="93:22">&amp;</operator><name pos:start="93:23" pos:end="93:38"><name pos:start="93:23" pos:end="93:23">s</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:35">HEVClcList</name><index pos:start="93:36" pos:end="93:38">[<expr pos:start="93:37" pos:end="93:37"><name pos:start="93:37" pos:end="93:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:35"><expr pos:start="95:13" pos:end="95:34"><call pos:start="95:13" pos:end="95:34"><name pos:start="95:13" pos:end="95:20">av_freep</name><argument_list pos:start="95:21" pos:end="95:34">(<argument pos:start="95:22" pos:end="95:33"><expr pos:start="95:22" pos:end="95:33"><operator pos:start="95:22" pos:end="95:22">&amp;</operator><name pos:start="95:23" pos:end="95:33"><name pos:start="95:23" pos:end="95:23">s</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:30">sList</name><index pos:start="95:31" pos:end="95:33">[<expr pos:start="95:32" pos:end="95:32"><name pos:start="95:32" pos:end="95:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="101:5" pos:end="103:25"><if pos:start="101:5" pos:end="103:25">if <condition pos:start="101:8" pos:end="101:38">(<expr pos:start="101:9" pos:end="101:37"><name pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:17">HEVClc</name></name> <operator pos:start="101:19" pos:end="101:20">==</operator> <name pos:start="101:22" pos:end="101:37"><name pos:start="101:22" pos:end="101:22">s</name><operator pos:start="101:23" pos:end="101:24">-&gt;</operator><name pos:start="101:25" pos:end="101:34">HEVClcList</name><index pos:start="101:35" pos:end="101:37">[<expr pos:start="101:36" pos:end="101:36"><literal type="number" pos:start="101:36" pos:end="101:36">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:25"><block_content pos:start="103:9" pos:end="103:25">

        <expr_stmt pos:start="103:9" pos:end="103:25"><expr pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:17"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:17">HEVClc</name></name> <operator pos:start="103:19" pos:end="103:19">=</operator> <name pos:start="103:21" pos:end="103:24">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:32"><expr pos:start="105:5" pos:end="105:31"><call pos:start="105:5" pos:end="105:31"><name pos:start="105:5" pos:end="105:12">av_freep</name><argument_list pos:start="105:13" pos:end="105:31">(<argument pos:start="105:14" pos:end="105:30"><expr pos:start="105:14" pos:end="105:30"><operator pos:start="105:14" pos:end="105:14">&amp;</operator><name pos:start="105:15" pos:end="105:30"><name pos:start="105:15" pos:end="105:15">s</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:27">HEVClcList</name><index pos:start="105:28" pos:end="105:30">[<expr pos:start="105:29" pos:end="105:29"><literal type="number" pos:start="105:29" pos:end="105:29">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="109:5" pos:end="111:42">for <control pos:start="109:9" pos:end="109:43">(<init pos:start="109:10" pos:end="109:15"><expr pos:start="109:10" pos:end="109:14"><name pos:start="109:10" pos:end="109:10">i</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <literal type="number" pos:start="109:14" pos:end="109:14">0</literal></expr>;</init> <condition pos:start="109:17" pos:end="109:38"><expr pos:start="109:17" pos:end="109:37"><name pos:start="109:17" pos:end="109:17">i</name> <operator pos:start="109:19" pos:end="109:19">&lt;</operator> <name pos:start="109:21" pos:end="109:37"><name pos:start="109:21" pos:end="109:21">s</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:37">nals_allocated</name></name></expr>;</condition> <incr pos:start="109:40" pos:end="109:42"><expr pos:start="109:40" pos:end="109:42"><name pos:start="109:40" pos:end="109:40">i</name><operator pos:start="109:41" pos:end="109:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="111:9" pos:end="111:42"><block_content pos:start="111:9" pos:end="111:42">

        <expr_stmt pos:start="111:9" pos:end="111:42"><expr pos:start="111:9" pos:end="111:41"><call pos:start="111:9" pos:end="111:41"><name pos:start="111:9" pos:end="111:16">av_freep</name><argument_list pos:start="111:17" pos:end="111:41">(<argument pos:start="111:18" pos:end="111:40"><expr pos:start="111:18" pos:end="111:40"><operator pos:start="111:18" pos:end="111:18">&amp;</operator><name pos:start="111:19" pos:end="111:28"><name pos:start="111:19" pos:end="111:19">s</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:25">nals</name><index pos:start="111:26" pos:end="111:28">[<expr pos:start="111:27" pos:end="111:27"><name pos:start="111:27" pos:end="111:27">i</name></expr>]</index></name><operator pos:start="111:29" pos:end="111:29">.</operator><name pos:start="111:30" pos:end="111:40">rbsp_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="113:5" pos:end="113:23"><expr pos:start="113:5" pos:end="113:22"><call pos:start="113:5" pos:end="113:22"><name pos:start="113:5" pos:end="113:12">av_freep</name><argument_list pos:start="113:13" pos:end="113:22">(<argument pos:start="113:14" pos:end="113:21"><expr pos:start="113:14" pos:end="113:21"><operator pos:start="113:14" pos:end="113:14">&amp;</operator><name pos:start="113:15" pos:end="113:21"><name pos:start="113:15" pos:end="113:15">s</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:21">nals</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:26"><expr pos:start="115:5" pos:end="115:25"><name pos:start="115:5" pos:end="115:21"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:21">nals_allocated</name></name> <operator pos:start="115:23" pos:end="115:23">=</operator> <literal type="number" pos:start="115:25" pos:end="115:25">0</literal></expr>;</expr_stmt>



    <return pos:start="119:5" pos:end="119:13">return <expr pos:start="119:12" pos:end="119:12"><literal type="number" pos:start="119:12" pos:end="119:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
