<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25531.c" pos:tabs="8"><function pos:start="1:1" pos:end="371:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">sdl_refresh</name><parameter_list pos:start="1:24" pos:end="1:41">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:36">DisplayState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">ds</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="371:1">{<block_content pos:start="5:5" pos:end="369:5">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">SDL_Event</name></type> <name pos:start="5:15" pos:end="5:17">ev1</name></decl>, <decl pos:start="5:20" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">ev</name> <init pos:start="5:24" pos:end="5:29">= <expr pos:start="5:26" pos:end="5:29"><operator pos:start="5:26" pos:end="5:26">&amp;</operator><name pos:start="5:27" pos:end="5:29">ev1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">mod_state</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">buttonstate</name> <init pos:start="9:21" pos:end="9:51">= <expr pos:start="9:23" pos:end="9:51"><call pos:start="9:23" pos:end="9:51"><name pos:start="9:23" pos:end="9:39">SDL_GetMouseState</name><argument_list pos:start="9:40" pos:end="9:51">(<argument pos:start="9:41" pos:end="9:44"><expr pos:start="9:41" pos:end="9:44"><name pos:start="9:41" pos:end="9:44">NULL</name></expr></argument>, <argument pos:start="9:47" pos:end="9:50"><expr pos:start="9:47" pos:end="9:50"><name pos:start="9:47" pos:end="9:50">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:38">(<expr pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:23">last_vm_running</name> <operator pos:start="13:25" pos:end="13:26">!=</operator> <name pos:start="13:28" pos:end="13:37">vm_running</name></expr>)</condition> <block pos:start="13:40" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:29">

        <expr_stmt pos:start="15:9" pos:end="15:37"><expr pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:23">last_vm_running</name> <operator pos:start="15:25" pos:end="15:25">=</operator> <name pos:start="15:27" pos:end="15:36">vm_running</name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:29"><expr pos:start="17:9" pos:end="17:28"><call pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:26">sdl_update_caption</name><argument_list pos:start="17:27" pos:end="17:28">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:20"><expr pos:start="23:5" pos:end="23:19"><call pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:17">vga_hw_update</name><argument_list pos:start="23:18" pos:end="23:19">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:45"><expr pos:start="25:5" pos:end="25:44"><call pos:start="25:5" pos:end="25:44"><name pos:start="25:5" pos:end="25:21">SDL_EnableUNICODE</name><argument_list pos:start="25:22" pos:end="25:44">(<argument pos:start="25:23" pos:end="25:43"><expr pos:start="25:23" pos:end="25:43"><operator pos:start="25:23" pos:end="25:23">!</operator><call pos:start="25:24" pos:end="25:43"><name pos:start="25:24" pos:end="25:41">is_graphic_console</name><argument_list pos:start="25:42" pos:end="25:43">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="29:5" pos:end="369:5">while <condition pos:start="29:11" pos:end="29:29">(<expr pos:start="29:12" pos:end="29:28"><call pos:start="29:12" pos:end="29:28"><name pos:start="29:12" pos:end="29:24">SDL_PollEvent</name><argument_list pos:start="29:25" pos:end="29:28">(<argument pos:start="29:26" pos:end="29:27"><expr pos:start="29:26" pos:end="29:27"><name pos:start="29:26" pos:end="29:27">ev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:31" pos:end="369:5">{<block_content pos:start="31:9" pos:end="367:9">

        <switch pos:start="31:9" pos:end="367:9">switch <condition pos:start="31:16" pos:end="31:25">(<expr pos:start="31:17" pos:end="31:24"><name pos:start="31:17" pos:end="31:24"><name pos:start="31:17" pos:end="31:18">ev</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:24">type</name></name></expr>)</condition> <block pos:start="31:27" pos:end="367:9">{<block_content pos:start="33:9" pos:end="365:18">

        <case pos:start="33:9" pos:end="33:29">case <expr pos:start="33:14" pos:end="33:28"><name pos:start="33:14" pos:end="33:28">SDL_VIDEOEXPOSE</name></expr>:</case>

            <expr_stmt pos:start="35:13" pos:end="35:55"><expr pos:start="35:13" pos:end="35:54"><call pos:start="35:13" pos:end="35:54"><name pos:start="35:13" pos:end="35:22">sdl_update</name><argument_list pos:start="35:23" pos:end="35:54">(<argument pos:start="35:24" pos:end="35:25"><expr pos:start="35:24" pos:end="35:25"><name pos:start="35:24" pos:end="35:25">ds</name></expr></argument>, <argument pos:start="35:28" pos:end="35:28"><expr pos:start="35:28" pos:end="35:28"><literal type="number" pos:start="35:28" pos:end="35:28">0</literal></expr></argument>, <argument pos:start="35:31" pos:end="35:31"><expr pos:start="35:31" pos:end="35:31"><literal type="number" pos:start="35:31" pos:end="35:31">0</literal></expr></argument>, <argument pos:start="35:34" pos:end="35:42"><expr pos:start="35:34" pos:end="35:42"><name pos:start="35:34" pos:end="35:42"><name pos:start="35:34" pos:end="35:39">screen</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:42">w</name></name></expr></argument>, <argument pos:start="35:45" pos:end="35:53"><expr pos:start="35:45" pos:end="35:53"><name pos:start="35:45" pos:end="35:53"><name pos:start="35:45" pos:end="35:50">screen</name><operator pos:start="35:51" pos:end="35:52">-&gt;</operator><name pos:start="35:53" pos:end="35:53">h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:25">case <expr pos:start="39:14" pos:end="39:24"><name pos:start="39:14" pos:end="39:24">SDL_KEYDOWN</name></expr>:</case>

        <case pos:start="41:9" pos:end="41:23">case <expr pos:start="41:14" pos:end="41:22"><name pos:start="41:14" pos:end="41:22">SDL_KEYUP</name></expr>:</case>

            <if_stmt pos:start="43:13" pos:end="241:13"><if pos:start="43:13" pos:end="177:13">if <condition pos:start="43:16" pos:end="43:40">(<expr pos:start="43:17" pos:end="43:39"><name pos:start="43:17" pos:end="43:24"><name pos:start="43:17" pos:end="43:18">ev</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:24">type</name></name> <operator pos:start="43:26" pos:end="43:27">==</operator> <name pos:start="43:29" pos:end="43:39">SDL_KEYDOWN</name></expr>)</condition> <block pos:start="43:42" pos:end="177:13">{<block_content pos:start="45:17" pos:end="175:17">

                <if_stmt pos:start="45:17" pos:end="57:17"><if pos:start="45:17" pos:end="51:17">if <condition pos:start="45:20" pos:end="45:30">(<expr pos:start="45:21" pos:end="45:29"><operator pos:start="45:21" pos:end="45:21">!</operator><name pos:start="45:22" pos:end="45:29">alt_grab</name></expr>)</condition> <block pos:start="45:32" pos:end="51:17">{<block_content pos:start="47:21" pos:end="49:46">

                    <expr_stmt pos:start="47:21" pos:end="49:46"><expr pos:start="47:21" pos:end="49:45"><name pos:start="47:21" pos:end="47:29">mod_state</name> <operator pos:start="47:31" pos:end="47:31">=</operator> <operator pos:start="47:33" pos:end="47:33">(</operator><call pos:start="47:34" pos:end="47:50"><name pos:start="47:34" pos:end="47:48">SDL_GetModState</name><argument_list pos:start="47:49" pos:end="47:50">()</argument_list></call> <operator pos:start="47:52" pos:end="47:52">&amp;</operator> <name pos:start="47:54" pos:end="47:66">gui_grab_code</name><operator pos:start="47:67" pos:end="47:67">)</operator> <operator pos:start="47:69" pos:end="47:70">==</operator>

                                <name pos:start="49:33" pos:end="49:45">gui_grab_code</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="51:19" pos:end="57:17">else <block pos:start="51:24" pos:end="57:17">{<block_content pos:start="53:21" pos:end="55:62">

                    <expr_stmt pos:start="53:21" pos:end="55:62"><expr pos:start="53:21" pos:end="55:61"><name pos:start="53:21" pos:end="53:29">mod_state</name> <operator pos:start="53:31" pos:end="53:31">=</operator> <operator pos:start="53:33" pos:end="53:33">(</operator><call pos:start="53:34" pos:end="53:50"><name pos:start="53:34" pos:end="53:48">SDL_GetModState</name><argument_list pos:start="53:49" pos:end="53:50">()</argument_list></call> <operator pos:start="53:52" pos:end="53:52">&amp;</operator> <operator pos:start="53:54" pos:end="53:54">(</operator><name pos:start="53:55" pos:end="53:67">gui_grab_code</name> <operator pos:start="53:69" pos:end="53:69">|</operator> <name pos:start="53:71" pos:end="53:81">KMOD_LSHIFT</name><operator pos:start="53:82" pos:end="53:82">)</operator><operator pos:start="53:83" pos:end="53:83">)</operator> <operator pos:start="53:85" pos:end="53:86">==</operator>

                                <operator pos:start="55:33" pos:end="55:33">(</operator><name pos:start="55:34" pos:end="55:46">gui_grab_code</name> <operator pos:start="55:48" pos:end="55:48">|</operator> <name pos:start="55:50" pos:end="55:60">KMOD_LSHIFT</name><operator pos:start="55:61" pos:end="55:61">)</operator></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:53"><expr pos:start="59:17" pos:end="59:52"><name pos:start="59:17" pos:end="59:40">gui_key_modifier_pressed</name> <operator pos:start="59:42" pos:end="59:42">=</operator> <name pos:start="59:44" pos:end="59:52">mod_state</name></expr>;</expr_stmt>

                <if_stmt pos:start="61:17" pos:end="175:17"><if pos:start="61:17" pos:end="105:17">if <condition pos:start="61:20" pos:end="61:45">(<expr pos:start="61:21" pos:end="61:44"><name pos:start="61:21" pos:end="61:44">gui_key_modifier_pressed</name></expr>)</condition> <block pos:start="61:47" pos:end="105:17">{<block_content pos:start="63:21" pos:end="103:21">

                    <decl_stmt pos:start="63:21" pos:end="63:32"><decl pos:start="63:21" pos:end="63:31"><type pos:start="63:21" pos:end="63:23"><name pos:start="63:21" pos:end="63:23">int</name></type> <name pos:start="63:25" pos:end="63:31">keycode</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:64"><expr pos:start="65:21" pos:end="65:63"><name pos:start="65:21" pos:end="65:27">keycode</name> <operator pos:start="65:29" pos:end="65:29">=</operator> <call pos:start="65:31" pos:end="65:63"><name pos:start="65:31" pos:end="65:53">sdl_keyevent_to_keycode</name><argument_list pos:start="65:54" pos:end="65:63">(<argument pos:start="65:55" pos:end="65:62"><expr pos:start="65:55" pos:end="65:62"><operator pos:start="65:55" pos:end="65:55">&amp;</operator><name pos:start="65:56" pos:end="65:62"><name pos:start="65:56" pos:end="65:57">ev</name><operator pos:start="65:58" pos:end="65:59">-&gt;</operator><name pos:start="65:60" pos:end="65:62">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <switch pos:start="67:21" pos:end="103:21">switch<condition pos:start="67:27" pos:end="67:35">(<expr pos:start="67:28" pos:end="67:34"><name pos:start="67:28" pos:end="67:34">keycode</name></expr>)</condition> <block pos:start="67:37" pos:end="103:21">{<block_content pos:start="69:21" pos:end="101:30">

                    <case pos:start="69:21" pos:end="69:30">case <expr pos:start="69:26" pos:end="69:29"><literal type="number" pos:start="69:26" pos:end="69:29">0x21</literal></expr>:</case> <comment type="block" pos:start="69:32" pos:end="69:59">/* 'f' key on US keyboard */</comment>

                        <expr_stmt pos:start="71:25" pos:end="71:47"><expr pos:start="71:25" pos:end="71:46"><call pos:start="71:25" pos:end="71:46"><name pos:start="71:25" pos:end="71:42">toggle_full_screen</name><argument_list pos:start="71:43" pos:end="71:46">(<argument pos:start="71:44" pos:end="71:45"><expr pos:start="71:44" pos:end="71:45"><name pos:start="71:44" pos:end="71:45">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="73:25" pos:end="73:39"><expr pos:start="73:25" pos:end="73:38"><name pos:start="73:25" pos:end="73:34">gui_keysym</name> <operator pos:start="73:36" pos:end="73:36">=</operator> <literal type="number" pos:start="73:38" pos:end="73:38">1</literal></expr>;</expr_stmt>

                        <break pos:start="75:25" pos:end="75:30">break;</break>

                    <case pos:start="77:21" pos:end="77:39">case <expr pos:start="77:26" pos:end="77:38"><literal type="number" pos:start="77:26" pos:end="77:29">0x02</literal> <operator pos:start="77:31" pos:end="77:33">...</operator> <literal type="number" pos:start="77:35" pos:end="77:38">0x0a</literal></expr>:</case> <comment type="block" pos:start="77:41" pos:end="77:61">/* '1' to '9' keys */</comment>

                        <comment type="block" pos:start="79:25" pos:end="79:77">/* Reset the modifiers sent to the current console */</comment>

                        <expr_stmt pos:start="81:25" pos:end="81:37"><expr pos:start="81:25" pos:end="81:36"><call pos:start="81:25" pos:end="81:36"><name pos:start="81:25" pos:end="81:34">reset_keys</name><argument_list pos:start="81:35" pos:end="81:36">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="83:25" pos:end="83:55"><expr pos:start="83:25" pos:end="83:54"><call pos:start="83:25" pos:end="83:54"><name pos:start="83:25" pos:end="83:38">console_select</name><argument_list pos:start="83:39" pos:end="83:54">(<argument pos:start="83:40" pos:end="83:53"><expr pos:start="83:40" pos:end="83:53"><name pos:start="83:40" pos:end="83:46">keycode</name> <operator pos:start="83:48" pos:end="83:48">-</operator> <literal type="number" pos:start="83:50" pos:end="83:53">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="85:25" pos:end="93:25"><if pos:start="85:25" pos:end="93:25">if <condition pos:start="85:28" pos:end="85:50">(<expr pos:start="85:29" pos:end="85:49"><operator pos:start="85:29" pos:end="85:29">!</operator><call pos:start="85:30" pos:end="85:49"><name pos:start="85:30" pos:end="85:47">is_graphic_console</name><argument_list pos:start="85:48" pos:end="85:49">()</argument_list></call></expr>)</condition> <block pos:start="85:52" pos:end="93:25">{<block_content pos:start="89:29" pos:end="91:47">

                            <comment type="block" pos:start="87:29" pos:end="87:73">/* display grab if going to a text console */</comment>

                            <if_stmt pos:start="89:29" pos:end="91:47"><if pos:start="89:29" pos:end="91:47">if <condition pos:start="89:32" pos:end="89:41">(<expr pos:start="89:33" pos:end="89:40"><name pos:start="89:33" pos:end="89:40">gui_grab</name></expr>)</condition><block type="pseudo" pos:start="91:33" pos:end="91:47"><block_content pos:start="91:33" pos:end="91:47">

                                <expr_stmt pos:start="91:33" pos:end="91:47"><expr pos:start="91:33" pos:end="91:46"><call pos:start="91:33" pos:end="91:46"><name pos:start="91:33" pos:end="91:44">sdl_grab_end</name><argument_list pos:start="91:45" pos:end="91:46">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="95:25" pos:end="95:39"><expr pos:start="95:25" pos:end="95:38"><name pos:start="95:25" pos:end="95:34">gui_keysym</name> <operator pos:start="95:36" pos:end="95:36">=</operator> <literal type="number" pos:start="95:38" pos:end="95:38">1</literal></expr>;</expr_stmt>

                        <break pos:start="97:25" pos:end="97:30">break;</break>

                    <default pos:start="99:21" pos:end="99:28">default:</default>

                        <break pos:start="101:25" pos:end="101:30">break;</break>

                    </block_content>}</block></switch>

                </block_content>}</block></if> <if type="elseif" pos:start="105:19" pos:end="175:17">else if <condition pos:start="105:27" pos:end="105:49">(<expr pos:start="105:28" pos:end="105:48"><operator pos:start="105:28" pos:end="105:28">!</operator><call pos:start="105:29" pos:end="105:48"><name pos:start="105:29" pos:end="105:46">is_graphic_console</name><argument_list pos:start="105:47" pos:end="105:48">()</argument_list></call></expr>)</condition> <block pos:start="105:51" pos:end="175:17">{<block_content pos:start="107:21" pos:end="173:21">

                    <decl_stmt pos:start="107:21" pos:end="107:31"><decl pos:start="107:21" pos:end="107:30"><type pos:start="107:21" pos:end="107:23"><name pos:start="107:21" pos:end="107:23">int</name></type> <name pos:start="107:25" pos:end="107:30">keysym</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="109:21" pos:end="109:31"><expr pos:start="109:21" pos:end="109:30"><name pos:start="109:21" pos:end="109:26">keysym</name> <operator pos:start="109:28" pos:end="109:28">=</operator> <literal type="number" pos:start="109:30" pos:end="109:30">0</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="111:21" pos:end="163:21"><if pos:start="111:21" pos:end="135:21">if <condition pos:start="111:24" pos:end="111:71">(<expr pos:start="111:25" pos:end="111:70"><name pos:start="111:25" pos:end="111:42"><name pos:start="111:25" pos:end="111:26">ev</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:31">key</name><operator pos:start="111:32" pos:end="111:32">.</operator><name pos:start="111:33" pos:end="111:38">keysym</name><operator pos:start="111:39" pos:end="111:39">.</operator><name pos:start="111:40" pos:end="111:42">mod</name></name> <operator pos:start="111:44" pos:end="111:44">&amp;</operator> <operator pos:start="111:46" pos:end="111:46">(</operator><name pos:start="111:47" pos:end="111:56">KMOD_LCTRL</name> <operator pos:start="111:58" pos:end="111:58">|</operator> <name pos:start="111:60" pos:end="111:69">KMOD_RCTRL</name><operator pos:start="111:70" pos:end="111:70">)</operator></expr>)</condition> <block pos:start="111:73" pos:end="135:21">{<block_content pos:start="113:25" pos:end="133:25">

                        <switch pos:start="113:25" pos:end="133:25">switch<condition pos:start="113:31" pos:end="113:50">(<expr pos:start="113:32" pos:end="113:49"><name pos:start="113:32" pos:end="113:49"><name pos:start="113:32" pos:end="113:33">ev</name><operator pos:start="113:34" pos:end="113:35">-&gt;</operator><name pos:start="113:36" pos:end="113:38">key</name><operator pos:start="113:39" pos:end="113:39">.</operator><name pos:start="113:40" pos:end="113:45">keysym</name><operator pos:start="113:46" pos:end="113:46">.</operator><name pos:start="113:47" pos:end="113:49">sym</name></name></expr>)</condition> <block pos:start="113:52" pos:end="133:25">{<block_content pos:start="115:25" pos:end="131:39">

                        <case pos:start="115:25" pos:end="115:37">case <expr pos:start="115:30" pos:end="115:36"><name pos:start="115:30" pos:end="115:36">SDLK_UP</name></expr>:</case> <expr_stmt pos:start="115:39" pos:end="115:64"><expr pos:start="115:39" pos:end="115:63"><name pos:start="115:39" pos:end="115:44">keysym</name> <operator pos:start="115:46" pos:end="115:46">=</operator> <name pos:start="115:48" pos:end="115:63">QEMU_KEY_CTRL_UP</name></expr>;</expr_stmt> <break pos:start="115:66" pos:end="115:71">break;</break>

                        <case pos:start="117:25" pos:end="117:39">case <expr pos:start="117:30" pos:end="117:38"><name pos:start="117:30" pos:end="117:38">SDLK_DOWN</name></expr>:</case> <expr_stmt pos:start="117:41" pos:end="117:68"><expr pos:start="117:41" pos:end="117:67"><name pos:start="117:41" pos:end="117:46">keysym</name> <operator pos:start="117:48" pos:end="117:48">=</operator> <name pos:start="117:50" pos:end="117:67">QEMU_KEY_CTRL_DOWN</name></expr>;</expr_stmt> <break pos:start="117:70" pos:end="117:75">break;</break>

                        <case pos:start="119:25" pos:end="119:39">case <expr pos:start="119:30" pos:end="119:38"><name pos:start="119:30" pos:end="119:38">SDLK_LEFT</name></expr>:</case> <expr_stmt pos:start="119:41" pos:end="119:68"><expr pos:start="119:41" pos:end="119:67"><name pos:start="119:41" pos:end="119:46">keysym</name> <operator pos:start="119:48" pos:end="119:48">=</operator> <name pos:start="119:50" pos:end="119:67">QEMU_KEY_CTRL_LEFT</name></expr>;</expr_stmt> <break pos:start="119:70" pos:end="119:75">break;</break>

                        <case pos:start="121:25" pos:end="121:40">case <expr pos:start="121:30" pos:end="121:39"><name pos:start="121:30" pos:end="121:39">SDLK_RIGHT</name></expr>:</case> <expr_stmt pos:start="121:42" pos:end="121:70"><expr pos:start="121:42" pos:end="121:69"><name pos:start="121:42" pos:end="121:47">keysym</name> <operator pos:start="121:49" pos:end="121:49">=</operator> <name pos:start="121:51" pos:end="121:69">QEMU_KEY_CTRL_RIGHT</name></expr>;</expr_stmt> <break pos:start="121:72" pos:end="121:77">break;</break>

                        <case pos:start="123:25" pos:end="123:39">case <expr pos:start="123:30" pos:end="123:38"><name pos:start="123:30" pos:end="123:38">SDLK_HOME</name></expr>:</case> <expr_stmt pos:start="123:41" pos:end="123:68"><expr pos:start="123:41" pos:end="123:67"><name pos:start="123:41" pos:end="123:46">keysym</name> <operator pos:start="123:48" pos:end="123:48">=</operator> <name pos:start="123:50" pos:end="123:67">QEMU_KEY_CTRL_HOME</name></expr>;</expr_stmt> <break pos:start="123:70" pos:end="123:75">break;</break>

                        <case pos:start="125:25" pos:end="125:38">case <expr pos:start="125:30" pos:end="125:37"><name pos:start="125:30" pos:end="125:37">SDLK_END</name></expr>:</case> <expr_stmt pos:start="125:40" pos:end="125:66"><expr pos:start="125:40" pos:end="125:65"><name pos:start="125:40" pos:end="125:45">keysym</name> <operator pos:start="125:47" pos:end="125:47">=</operator> <name pos:start="125:49" pos:end="125:65">QEMU_KEY_CTRL_END</name></expr>;</expr_stmt> <break pos:start="125:68" pos:end="125:73">break;</break>

                        <case pos:start="127:25" pos:end="127:41">case <expr pos:start="127:30" pos:end="127:40"><name pos:start="127:30" pos:end="127:40">SDLK_PAGEUP</name></expr>:</case> <expr_stmt pos:start="127:43" pos:end="127:72"><expr pos:start="127:43" pos:end="127:71"><name pos:start="127:43" pos:end="127:48">keysym</name> <operator pos:start="127:50" pos:end="127:50">=</operator> <name pos:start="127:52" pos:end="127:71">QEMU_KEY_CTRL_PAGEUP</name></expr>;</expr_stmt> <break pos:start="127:74" pos:end="127:79">break;</break>

                        <case pos:start="129:25" pos:end="129:43">case <expr pos:start="129:30" pos:end="129:42"><name pos:start="129:30" pos:end="129:42">SDLK_PAGEDOWN</name></expr>:</case> <expr_stmt pos:start="129:45" pos:end="129:76"><expr pos:start="129:45" pos:end="129:75"><name pos:start="129:45" pos:end="129:50">keysym</name> <operator pos:start="129:52" pos:end="129:52">=</operator> <name pos:start="129:54" pos:end="129:75">QEMU_KEY_CTRL_PAGEDOWN</name></expr>;</expr_stmt> <break pos:start="129:78" pos:end="129:83">break;</break>

                        <default pos:start="131:25" pos:end="131:32">default:</default> <break pos:start="131:34" pos:end="131:39">break;</break>

                        </block_content>}</block></switch>

                    </block_content>}</block></if> <else pos:start="135:23" pos:end="163:21">else <block pos:start="135:28" pos:end="163:21">{<block_content pos:start="137:25" pos:end="161:25">

                        <switch pos:start="137:25" pos:end="161:25">switch<condition pos:start="137:31" pos:end="137:50">(<expr pos:start="137:32" pos:end="137:49"><name pos:start="137:32" pos:end="137:49"><name pos:start="137:32" pos:end="137:33">ev</name><operator pos:start="137:34" pos:end="137:35">-&gt;</operator><name pos:start="137:36" pos:end="137:38">key</name><operator pos:start="137:39" pos:end="137:39">.</operator><name pos:start="137:40" pos:end="137:45">keysym</name><operator pos:start="137:46" pos:end="137:46">.</operator><name pos:start="137:47" pos:end="137:49">sym</name></name></expr>)</condition> <block pos:start="137:52" pos:end="161:25">{<block_content pos:start="139:25" pos:end="159:39">

                        <case pos:start="139:25" pos:end="139:37">case <expr pos:start="139:30" pos:end="139:36"><name pos:start="139:30" pos:end="139:36">SDLK_UP</name></expr>:</case> <expr_stmt pos:start="139:39" pos:end="139:59"><expr pos:start="139:39" pos:end="139:58"><name pos:start="139:39" pos:end="139:44">keysym</name> <operator pos:start="139:46" pos:end="139:46">=</operator> <name pos:start="139:48" pos:end="139:58">QEMU_KEY_UP</name></expr>;</expr_stmt> <break pos:start="139:61" pos:end="139:66">break;</break>

                        <case pos:start="141:25" pos:end="141:39">case <expr pos:start="141:30" pos:end="141:38"><name pos:start="141:30" pos:end="141:38">SDLK_DOWN</name></expr>:</case> <expr_stmt pos:start="141:41" pos:end="141:63"><expr pos:start="141:41" pos:end="141:62"><name pos:start="141:41" pos:end="141:46">keysym</name> <operator pos:start="141:48" pos:end="141:48">=</operator> <name pos:start="141:50" pos:end="141:62">QEMU_KEY_DOWN</name></expr>;</expr_stmt> <break pos:start="141:65" pos:end="141:70">break;</break>

                        <case pos:start="143:25" pos:end="143:39">case <expr pos:start="143:30" pos:end="143:38"><name pos:start="143:30" pos:end="143:38">SDLK_LEFT</name></expr>:</case> <expr_stmt pos:start="143:41" pos:end="143:63"><expr pos:start="143:41" pos:end="143:62"><name pos:start="143:41" pos:end="143:46">keysym</name> <operator pos:start="143:48" pos:end="143:48">=</operator> <name pos:start="143:50" pos:end="143:62">QEMU_KEY_LEFT</name></expr>;</expr_stmt> <break pos:start="143:65" pos:end="143:70">break;</break>

                        <case pos:start="145:25" pos:end="145:40">case <expr pos:start="145:30" pos:end="145:39"><name pos:start="145:30" pos:end="145:39">SDLK_RIGHT</name></expr>:</case> <expr_stmt pos:start="145:42" pos:end="145:65"><expr pos:start="145:42" pos:end="145:64"><name pos:start="145:42" pos:end="145:47">keysym</name> <operator pos:start="145:49" pos:end="145:49">=</operator> <name pos:start="145:51" pos:end="145:64">QEMU_KEY_RIGHT</name></expr>;</expr_stmt> <break pos:start="145:67" pos:end="145:72">break;</break>

                        <case pos:start="147:25" pos:end="147:39">case <expr pos:start="147:30" pos:end="147:38"><name pos:start="147:30" pos:end="147:38">SDLK_HOME</name></expr>:</case> <expr_stmt pos:start="147:41" pos:end="147:63"><expr pos:start="147:41" pos:end="147:62"><name pos:start="147:41" pos:end="147:46">keysym</name> <operator pos:start="147:48" pos:end="147:48">=</operator> <name pos:start="147:50" pos:end="147:62">QEMU_KEY_HOME</name></expr>;</expr_stmt> <break pos:start="147:65" pos:end="147:70">break;</break>

                        <case pos:start="149:25" pos:end="149:38">case <expr pos:start="149:30" pos:end="149:37"><name pos:start="149:30" pos:end="149:37">SDLK_END</name></expr>:</case> <expr_stmt pos:start="149:40" pos:end="149:61"><expr pos:start="149:40" pos:end="149:60"><name pos:start="149:40" pos:end="149:45">keysym</name> <operator pos:start="149:47" pos:end="149:47">=</operator> <name pos:start="149:49" pos:end="149:60">QEMU_KEY_END</name></expr>;</expr_stmt> <break pos:start="149:63" pos:end="149:68">break;</break>

                        <case pos:start="151:25" pos:end="151:41">case <expr pos:start="151:30" pos:end="151:40"><name pos:start="151:30" pos:end="151:40">SDLK_PAGEUP</name></expr>:</case> <expr_stmt pos:start="151:43" pos:end="151:67"><expr pos:start="151:43" pos:end="151:66"><name pos:start="151:43" pos:end="151:48">keysym</name> <operator pos:start="151:50" pos:end="151:50">=</operator> <name pos:start="151:52" pos:end="151:66">QEMU_KEY_PAGEUP</name></expr>;</expr_stmt> <break pos:start="151:69" pos:end="151:74">break;</break>

                        <case pos:start="153:25" pos:end="153:43">case <expr pos:start="153:30" pos:end="153:42"><name pos:start="153:30" pos:end="153:42">SDLK_PAGEDOWN</name></expr>:</case> <expr_stmt pos:start="153:45" pos:end="153:71"><expr pos:start="153:45" pos:end="153:70"><name pos:start="153:45" pos:end="153:50">keysym</name> <operator pos:start="153:52" pos:end="153:52">=</operator> <name pos:start="153:54" pos:end="153:70">QEMU_KEY_PAGEDOWN</name></expr>;</expr_stmt> <break pos:start="153:73" pos:end="153:78">break;</break>

                        <case pos:start="155:25" pos:end="155:44">case <expr pos:start="155:30" pos:end="155:43"><name pos:start="155:30" pos:end="155:43">SDLK_BACKSPACE</name></expr>:</case> <expr_stmt pos:start="155:46" pos:end="155:73"><expr pos:start="155:46" pos:end="155:72"><name pos:start="155:46" pos:end="155:51">keysym</name> <operator pos:start="155:53" pos:end="155:53">=</operator> <name pos:start="155:55" pos:end="155:72">QEMU_KEY_BACKSPACE</name></expr>;</expr_stmt> <break pos:start="155:75" pos:end="155:80">break;</break>

                        <case pos:start="157:25" pos:end="157:41">case <expr pos:start="157:30" pos:end="157:40"><name pos:start="157:30" pos:end="157:40">SDLK_DELETE</name></expr>:</case> <expr_stmt pos:start="157:43" pos:end="157:67"><expr pos:start="157:43" pos:end="157:66"><name pos:start="157:43" pos:end="157:48">keysym</name> <operator pos:start="157:50" pos:end="157:50">=</operator> <name pos:start="157:52" pos:end="157:66">QEMU_KEY_DELETE</name></expr>;</expr_stmt> <break pos:start="157:69" pos:end="157:74">break;</break>

                        <default pos:start="159:25" pos:end="159:32">default:</default> <break pos:start="159:34" pos:end="159:39">break;</break>

                        </block_content>}</block></switch>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="165:21" pos:end="173:21"><if pos:start="165:21" pos:end="169:21">if <condition pos:start="165:24" pos:end="165:31">(<expr pos:start="165:25" pos:end="165:30"><name pos:start="165:25" pos:end="165:30">keysym</name></expr>)</condition> <block pos:start="165:33" pos:end="169:21">{<block_content pos:start="167:25" pos:end="167:47">

                        <expr_stmt pos:start="167:25" pos:end="167:47"><expr pos:start="167:25" pos:end="167:46"><call pos:start="167:25" pos:end="167:46"><name pos:start="167:25" pos:end="167:38">kbd_put_keysym</name><argument_list pos:start="167:39" pos:end="167:46">(<argument pos:start="167:40" pos:end="167:45"><expr pos:start="167:40" pos:end="167:45"><name pos:start="167:40" pos:end="167:45">keysym</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="169:23" pos:end="173:21">else if <condition pos:start="169:31" pos:end="169:59">(<expr pos:start="169:32" pos:end="169:58"><name pos:start="169:32" pos:end="169:53"><name pos:start="169:32" pos:end="169:33">ev</name><operator pos:start="169:34" pos:end="169:35">-&gt;</operator><name pos:start="169:36" pos:end="169:38">key</name><operator pos:start="169:39" pos:end="169:39">.</operator><name pos:start="169:40" pos:end="169:45">keysym</name><operator pos:start="169:46" pos:end="169:46">.</operator><name pos:start="169:47" pos:end="169:53">unicode</name></name> <operator pos:start="169:55" pos:end="169:56">!=</operator> <literal type="number" pos:start="169:58" pos:end="169:58">0</literal></expr>)</condition> <block pos:start="169:61" pos:end="173:21">{<block_content pos:start="171:25" pos:end="171:63">

                        <expr_stmt pos:start="171:25" pos:end="171:63"><expr pos:start="171:25" pos:end="171:62"><call pos:start="171:25" pos:end="171:62"><name pos:start="171:25" pos:end="171:38">kbd_put_keysym</name><argument_list pos:start="171:39" pos:end="171:62">(<argument pos:start="171:40" pos:end="171:61"><expr pos:start="171:40" pos:end="171:61"><name pos:start="171:40" pos:end="171:61"><name pos:start="171:40" pos:end="171:41">ev</name><operator pos:start="171:42" pos:end="171:43">-&gt;</operator><name pos:start="171:44" pos:end="171:46">key</name><operator pos:start="171:47" pos:end="171:47">.</operator><name pos:start="171:48" pos:end="171:53">keysym</name><operator pos:start="171:54" pos:end="171:54">.</operator><name pos:start="171:55" pos:end="171:61">unicode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="177:15" pos:end="241:13">else if <condition pos:start="177:23" pos:end="177:45">(<expr pos:start="177:24" pos:end="177:44"><name pos:start="177:24" pos:end="177:31"><name pos:start="177:24" pos:end="177:25">ev</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:31">type</name></name> <operator pos:start="177:33" pos:end="177:34">==</operator> <name pos:start="177:36" pos:end="177:44">SDL_KEYUP</name></expr>)</condition> <block pos:start="177:47" pos:end="241:13">{<block_content pos:start="179:17" pos:end="239:17">

                <if_stmt pos:start="179:17" pos:end="189:17"><if pos:start="179:17" pos:end="183:17">if <condition pos:start="179:20" pos:end="179:30">(<expr pos:start="179:21" pos:end="179:29"><operator pos:start="179:21" pos:end="179:21">!</operator><name pos:start="179:22" pos:end="179:29">alt_grab</name></expr>)</condition> <block pos:start="179:32" pos:end="183:17">{<block_content pos:start="181:21" pos:end="181:69">

                    <expr_stmt pos:start="181:21" pos:end="181:69"><expr pos:start="181:21" pos:end="181:68"><name pos:start="181:21" pos:end="181:29">mod_state</name> <operator pos:start="181:31" pos:end="181:31">=</operator> <operator pos:start="181:33" pos:end="181:33">(</operator><name pos:start="181:34" pos:end="181:51"><name pos:start="181:34" pos:end="181:35">ev</name><operator pos:start="181:36" pos:end="181:37">-&gt;</operator><name pos:start="181:38" pos:end="181:40">key</name><operator pos:start="181:41" pos:end="181:41">.</operator><name pos:start="181:42" pos:end="181:47">keysym</name><operator pos:start="181:48" pos:end="181:48">.</operator><name pos:start="181:49" pos:end="181:51">mod</name></name> <operator pos:start="181:53" pos:end="181:53">&amp;</operator> <name pos:start="181:55" pos:end="181:67">gui_grab_code</name><operator pos:start="181:68" pos:end="181:68">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="183:19" pos:end="189:17">else <block pos:start="183:24" pos:end="189:17">{<block_content pos:start="185:21" pos:end="187:64">

                    <expr_stmt pos:start="185:21" pos:end="187:64"><expr pos:start="185:21" pos:end="187:63"><name pos:start="185:21" pos:end="185:29">mod_state</name> <operator pos:start="185:31" pos:end="185:31">=</operator> <operator pos:start="185:33" pos:end="185:33">(</operator><name pos:start="185:34" pos:end="185:51"><name pos:start="185:34" pos:end="185:35">ev</name><operator pos:start="185:36" pos:end="185:37">-&gt;</operator><name pos:start="185:38" pos:end="185:40">key</name><operator pos:start="185:41" pos:end="185:41">.</operator><name pos:start="185:42" pos:end="185:47">keysym</name><operator pos:start="185:48" pos:end="185:48">.</operator><name pos:start="185:49" pos:end="185:51">mod</name></name> <operator pos:start="185:53" pos:end="185:53">&amp;</operator>

                                 <operator pos:start="187:34" pos:end="187:34">(</operator><name pos:start="187:35" pos:end="187:47">gui_grab_code</name> <operator pos:start="187:49" pos:end="187:49">|</operator> <name pos:start="187:51" pos:end="187:61">KMOD_LSHIFT</name><operator pos:start="187:62" pos:end="187:62">)</operator><operator pos:start="187:63" pos:end="187:63">)</operator></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="191:17" pos:end="239:17"><if pos:start="191:17" pos:end="239:17">if <condition pos:start="191:20" pos:end="191:31">(<expr pos:start="191:21" pos:end="191:30"><operator pos:start="191:21" pos:end="191:21">!</operator><name pos:start="191:22" pos:end="191:30">mod_state</name></expr>)</condition> <block pos:start="191:33" pos:end="239:17">{<block_content pos:start="193:21" pos:end="237:21">

                    <if_stmt pos:start="193:21" pos:end="237:21"><if pos:start="193:21" pos:end="237:21">if <condition pos:start="193:24" pos:end="193:49">(<expr pos:start="193:25" pos:end="193:48"><name pos:start="193:25" pos:end="193:48">gui_key_modifier_pressed</name></expr>)</condition> <block pos:start="193:51" pos:end="237:21">{<block_content pos:start="195:25" pos:end="235:39">

                        <expr_stmt pos:start="195:25" pos:end="195:53"><expr pos:start="195:25" pos:end="195:52"><name pos:start="195:25" pos:end="195:48">gui_key_modifier_pressed</name> <operator pos:start="195:50" pos:end="195:50">=</operator> <literal type="number" pos:start="195:52" pos:end="195:52">0</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="197:25" pos:end="233:25"><if pos:start="197:25" pos:end="233:25">if <condition pos:start="197:28" pos:end="197:44">(<expr pos:start="197:29" pos:end="197:43"><name pos:start="197:29" pos:end="197:38">gui_keysym</name> <operator pos:start="197:40" pos:end="197:41">==</operator> <literal type="number" pos:start="197:43" pos:end="197:43">0</literal></expr>)</condition> <block pos:start="197:46" pos:end="233:25">{<block_content pos:start="201:29" pos:end="231:34">

                            <comment type="block" pos:start="199:29" pos:end="199:70">/* exit/enter grab if pressing Ctrl-Alt */</comment>

                            <if_stmt pos:start="201:29" pos:end="223:29"><if pos:start="201:29" pos:end="219:29">if <condition pos:start="201:32" pos:end="201:42">(<expr pos:start="201:33" pos:end="201:41"><operator pos:start="201:33" pos:end="201:33">!</operator><name pos:start="201:34" pos:end="201:41">gui_grab</name></expr>)</condition> <block pos:start="201:44" pos:end="219:29">{<block_content pos:start="215:33" pos:end="217:53">

                                <comment type="block" pos:start="203:33" pos:end="213:48">/* if the application is not active,

                                   do not try to enter grab state. It

                                   prevents

                                   'SDL_WM_GrabInput(SDL_GRAB_ON)'

                                   from blocking all the application

                                   (SDL bug). */</comment>

                                <if_stmt pos:start="215:33" pos:end="217:53"><if pos:start="215:33" pos:end="217:53">if <condition pos:start="215:36" pos:end="215:70">(<expr pos:start="215:37" pos:end="215:69"><call pos:start="215:37" pos:end="215:53"><name pos:start="215:37" pos:end="215:51">SDL_GetAppState</name><argument_list pos:start="215:52" pos:end="215:53">()</argument_list></call> <operator pos:start="215:55" pos:end="215:55">&amp;</operator> <name pos:start="215:57" pos:end="215:69">SDL_APPACTIVE</name></expr>)</condition><block type="pseudo" pos:start="217:37" pos:end="217:53"><block_content pos:start="217:37" pos:end="217:53">

                                    <expr_stmt pos:start="217:37" pos:end="217:53"><expr pos:start="217:37" pos:end="217:52"><call pos:start="217:37" pos:end="217:52"><name pos:start="217:37" pos:end="217:50">sdl_grab_start</name><argument_list pos:start="217:51" pos:end="217:52">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            </block_content>}</block></if> <else pos:start="219:31" pos:end="223:29">else <block pos:start="219:36" pos:end="223:29">{<block_content pos:start="221:33" pos:end="221:47">

                                <expr_stmt pos:start="221:33" pos:end="221:47"><expr pos:start="221:33" pos:end="221:46"><call pos:start="221:33" pos:end="221:46"><name pos:start="221:33" pos:end="221:44">sdl_grab_end</name><argument_list pos:start="221:45" pos:end="221:46">()</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <comment type="block" pos:start="225:29" pos:end="227:70">/* SDL does not send back all the

                               modifiers key, so we must correct it */</comment>

                            <expr_stmt pos:start="229:29" pos:end="229:41"><expr pos:start="229:29" pos:end="229:40"><call pos:start="229:29" pos:end="229:40"><name pos:start="229:29" pos:end="229:38">reset_keys</name><argument_list pos:start="229:39" pos:end="229:40">()</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="231:29" pos:end="231:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="235:25" pos:end="235:39"><expr pos:start="235:25" pos:end="235:38"><name pos:start="235:25" pos:end="235:34">gui_keysym</name> <operator pos:start="235:36" pos:end="235:36">=</operator> <literal type="number" pos:start="235:38" pos:end="235:38">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="243:13" pos:end="245:42"><if pos:start="243:13" pos:end="245:42">if <condition pos:start="243:16" pos:end="243:52">(<expr pos:start="243:17" pos:end="243:51"><call pos:start="243:17" pos:end="243:36"><name pos:start="243:17" pos:end="243:34">is_graphic_console</name><argument_list pos:start="243:35" pos:end="243:36">()</argument_list></call> <operator pos:start="243:38" pos:end="243:39">&amp;&amp;</operator> <operator pos:start="243:41" pos:end="243:41">!</operator><name pos:start="243:42" pos:end="243:51">gui_keysym</name></expr>)</condition><block type="pseudo" pos:start="245:17" pos:end="245:42"><block_content pos:start="245:17" pos:end="245:42">

                <expr_stmt pos:start="245:17" pos:end="245:42"><expr pos:start="245:17" pos:end="245:41"><call pos:start="245:17" pos:end="245:41"><name pos:start="245:17" pos:end="245:31">sdl_process_key</name><argument_list pos:start="245:32" pos:end="245:41">(<argument pos:start="245:33" pos:end="245:40"><expr pos:start="245:33" pos:end="245:40"><operator pos:start="245:33" pos:end="245:33">&amp;</operator><name pos:start="245:34" pos:end="245:40"><name pos:start="245:34" pos:end="245:35">ev</name><operator pos:start="245:36" pos:end="245:37">-&gt;</operator><name pos:start="245:38" pos:end="245:40">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="247:13" pos:end="247:18">break;</break>

        <case pos:start="249:9" pos:end="249:22">case <expr pos:start="249:14" pos:end="249:21"><name pos:start="249:14" pos:end="249:21">SDL_QUIT</name></expr>:</case>

            <if_stmt pos:start="251:13" pos:end="257:13"><if pos:start="251:13" pos:end="257:13">if <condition pos:start="251:16" pos:end="251:25">(<expr pos:start="251:17" pos:end="251:24"><operator pos:start="251:17" pos:end="251:17">!</operator><name pos:start="251:18" pos:end="251:24">no_quit</name></expr>)</condition> <block pos:start="251:27" pos:end="257:13">{<block_content pos:start="253:17" pos:end="255:27">

                <expr_stmt pos:start="253:17" pos:end="253:47"><expr pos:start="253:17" pos:end="253:46"><call pos:start="253:17" pos:end="253:46"><name pos:start="253:17" pos:end="253:44">qemu_system_shutdown_request</name><argument_list pos:start="253:45" pos:end="253:46">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:27"><expr pos:start="255:17" pos:end="255:26"><call pos:start="255:17" pos:end="255:26"><name pos:start="255:17" pos:end="255:24">vm_start</name><argument_list pos:start="255:25" pos:end="255:26">()</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="255:33" pos:end="255:58">/* In case we're paused */</comment>

            </block_content>}</block></if></if_stmt>

            <break pos:start="259:13" pos:end="259:18">break;</break>

        <case pos:start="261:9" pos:end="261:29">case <expr pos:start="261:14" pos:end="261:28"><name pos:start="261:14" pos:end="261:28">SDL_MOUSEMOTION</name></expr>:</case>

            <if_stmt pos:start="263:13" pos:end="271:13"><if pos:start="263:13" pos:end="271:13">if <condition pos:start="263:16" pos:end="265:33">(<expr pos:start="263:17" pos:end="265:32"><name pos:start="263:17" pos:end="263:24">gui_grab</name> <operator pos:start="263:26" pos:end="263:27">||</operator> <call pos:start="263:29" pos:end="263:51"><name pos:start="263:29" pos:end="263:49">kbd_mouse_is_absolute</name><argument_list pos:start="263:50" pos:end="263:51">()</argument_list></call> <operator pos:start="263:53" pos:end="263:54">||</operator>

                <name pos:start="265:17" pos:end="265:32">absolute_enabled</name></expr>)</condition> <block pos:start="265:35" pos:end="271:13">{<block_content pos:start="267:17" pos:end="269:69">

                <expr_stmt pos:start="267:17" pos:end="269:69"><expr pos:start="267:17" pos:end="269:68"><call pos:start="267:17" pos:end="269:68"><name pos:start="267:17" pos:end="267:36">sdl_send_mouse_event</name><argument_list pos:start="267:37" pos:end="269:68">(<argument pos:start="267:38" pos:end="267:52"><expr pos:start="267:38" pos:end="267:52"><name pos:start="267:38" pos:end="267:52"><name pos:start="267:38" pos:end="267:39">ev</name><operator pos:start="267:40" pos:end="267:41">-&gt;</operator><name pos:start="267:42" pos:end="267:47">motion</name><operator pos:start="267:48" pos:end="267:48">.</operator><name pos:start="267:49" pos:end="267:52">xrel</name></name></expr></argument>, <argument pos:start="267:55" pos:end="267:69"><expr pos:start="267:55" pos:end="267:69"><name pos:start="267:55" pos:end="267:69"><name pos:start="267:55" pos:end="267:56">ev</name><operator pos:start="267:57" pos:end="267:58">-&gt;</operator><name pos:start="267:59" pos:end="267:64">motion</name><operator pos:start="267:65" pos:end="267:65">.</operator><name pos:start="267:66" pos:end="267:69">yrel</name></name></expr></argument>, <argument pos:start="267:72" pos:end="267:72"><expr pos:start="267:72" pos:end="267:72"><literal type="number" pos:start="267:72" pos:end="267:72">0</literal></expr></argument>,

                       <argument pos:start="269:24" pos:end="269:35"><expr pos:start="269:24" pos:end="269:35"><name pos:start="269:24" pos:end="269:35"><name pos:start="269:24" pos:end="269:25">ev</name><operator pos:start="269:26" pos:end="269:27">-&gt;</operator><name pos:start="269:28" pos:end="269:33">motion</name><operator pos:start="269:34" pos:end="269:34">.</operator><name pos:start="269:35" pos:end="269:35">x</name></name></expr></argument>, <argument pos:start="269:38" pos:end="269:49"><expr pos:start="269:38" pos:end="269:49"><name pos:start="269:38" pos:end="269:49"><name pos:start="269:38" pos:end="269:39">ev</name><operator pos:start="269:40" pos:end="269:41">-&gt;</operator><name pos:start="269:42" pos:end="269:47">motion</name><operator pos:start="269:48" pos:end="269:48">.</operator><name pos:start="269:49" pos:end="269:49">y</name></name></expr></argument>, <argument pos:start="269:52" pos:end="269:67"><expr pos:start="269:52" pos:end="269:67"><name pos:start="269:52" pos:end="269:67"><name pos:start="269:52" pos:end="269:53">ev</name><operator pos:start="269:54" pos:end="269:55">-&gt;</operator><name pos:start="269:56" pos:end="269:61">motion</name><operator pos:start="269:62" pos:end="269:62">.</operator><name pos:start="269:63" pos:end="269:67">state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="273:13" pos:end="273:18">break;</break>

        <case pos:start="275:9" pos:end="275:33">case <expr pos:start="275:14" pos:end="275:32"><name pos:start="275:14" pos:end="275:32">SDL_MOUSEBUTTONDOWN</name></expr>:</case>

        <case pos:start="277:9" pos:end="277:31">case <expr pos:start="277:14" pos:end="277:30"><name pos:start="277:14" pos:end="277:30">SDL_MOUSEBUTTONUP</name></expr>:</case>

            <block pos:start="279:13" pos:end="329:13">{<block_content pos:start="281:17" pos:end="327:17">

                <decl_stmt pos:start="281:17" pos:end="281:56"><decl pos:start="281:17" pos:end="281:55"><type pos:start="281:17" pos:end="281:38"><name pos:start="281:17" pos:end="281:36">SDL_MouseButtonEvent</name> <modifier pos:start="281:38" pos:end="281:38">*</modifier></type><name pos:start="281:39" pos:end="281:41">bev</name> <init pos:start="281:43" pos:end="281:55">= <expr pos:start="281:45" pos:end="281:55"><operator pos:start="281:45" pos:end="281:45">&amp;</operator><name pos:start="281:46" pos:end="281:55"><name pos:start="281:46" pos:end="281:47">ev</name><operator pos:start="281:48" pos:end="281:49">-&gt;</operator><name pos:start="281:50" pos:end="281:55">button</name></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="283:17" pos:end="327:17"><if pos:start="283:17" pos:end="295:17">if <condition pos:start="283:20" pos:end="283:58">(<expr pos:start="283:21" pos:end="283:57"><operator pos:start="283:21" pos:end="283:21">!</operator><name pos:start="283:22" pos:end="283:29">gui_grab</name> <operator pos:start="283:31" pos:end="283:32">&amp;&amp;</operator> <operator pos:start="283:34" pos:end="283:34">!</operator><call pos:start="283:35" pos:end="283:57"><name pos:start="283:35" pos:end="283:55">kbd_mouse_is_absolute</name><argument_list pos:start="283:56" pos:end="283:57">()</argument_list></call></expr>)</condition> <block pos:start="283:60" pos:end="295:17">{<block_content pos:start="285:21" pos:end="293:21">

                    <if_stmt pos:start="285:21" pos:end="293:21"><if pos:start="285:21" pos:end="293:21">if <condition pos:start="285:24" pos:end="287:57">(<expr pos:start="285:25" pos:end="287:56"><name pos:start="285:25" pos:end="285:32"><name pos:start="285:25" pos:end="285:26">ev</name><operator pos:start="285:27" pos:end="285:28">-&gt;</operator><name pos:start="285:29" pos:end="285:32">type</name></name> <operator pos:start="285:34" pos:end="285:35">==</operator> <name pos:start="285:37" pos:end="285:55">SDL_MOUSEBUTTONDOWN</name> <operator pos:start="285:57" pos:end="285:58">&amp;&amp;</operator>

                        <operator pos:start="287:25" pos:end="287:25">(</operator><name pos:start="287:26" pos:end="287:36"><name pos:start="287:26" pos:end="287:28">bev</name><operator pos:start="287:29" pos:end="287:30">-&gt;</operator><name pos:start="287:31" pos:end="287:36">button</name></name> <operator pos:start="287:38" pos:end="287:39">==</operator> <name pos:start="287:41" pos:end="287:55">SDL_BUTTON_LEFT</name><operator pos:start="287:56" pos:end="287:56">)</operator></expr>)</condition> <block pos:start="287:59" pos:end="293:21">{<block_content pos:start="291:25" pos:end="291:41">

                        <comment type="block" pos:start="289:25" pos:end="289:55">/* start grabbing all events */</comment>

                        <expr_stmt pos:start="291:25" pos:end="291:41"><expr pos:start="291:25" pos:end="291:40"><call pos:start="291:25" pos:end="291:40"><name pos:start="291:25" pos:end="291:38">sdl_grab_start</name><argument_list pos:start="291:39" pos:end="291:40">()</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="295:19" pos:end="327:17">else <block pos:start="295:24" pos:end="327:17">{<block_content pos:start="297:21" pos:end="325:80">

                    <decl_stmt pos:start="297:21" pos:end="297:27"><decl pos:start="297:21" pos:end="297:26"><type pos:start="297:21" pos:end="297:23"><name pos:start="297:21" pos:end="297:23">int</name></type> <name pos:start="297:25" pos:end="297:26">dz</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="299:21" pos:end="299:27"><expr pos:start="299:21" pos:end="299:26"><name pos:start="299:21" pos:end="299:22">dz</name> <operator pos:start="299:24" pos:end="299:24">=</operator> <literal type="number" pos:start="299:26" pos:end="299:26">0</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="301:21" pos:end="312:0"><if pos:start="301:21" pos:end="305:21">if <condition pos:start="301:24" pos:end="301:56">(<expr pos:start="301:25" pos:end="301:55"><name pos:start="301:25" pos:end="301:32"><name pos:start="301:25" pos:end="301:26">ev</name><operator pos:start="301:27" pos:end="301:28">-&gt;</operator><name pos:start="301:29" pos:end="301:32">type</name></name> <operator pos:start="301:34" pos:end="301:35">==</operator> <name pos:start="301:37" pos:end="301:55">SDL_MOUSEBUTTONDOWN</name></expr>)</condition> <block pos:start="301:58" pos:end="305:21">{<block_content pos:start="303:25" pos:end="303:63">

                        <expr_stmt pos:start="303:25" pos:end="303:63"><expr pos:start="303:25" pos:end="303:62"><name pos:start="303:25" pos:end="303:35">buttonstate</name> <operator pos:start="303:37" pos:end="303:38">|=</operator> <call pos:start="303:40" pos:end="303:62"><name pos:start="303:40" pos:end="303:49">SDL_BUTTON</name><argument_list pos:start="303:50" pos:end="303:62">(<argument pos:start="303:51" pos:end="303:61"><expr pos:start="303:51" pos:end="303:61"><name pos:start="303:51" pos:end="303:61"><name pos:start="303:51" pos:end="303:53">bev</name><operator pos:start="303:54" pos:end="303:55">-&gt;</operator><name pos:start="303:56" pos:end="303:61">button</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="305:23" pos:end="312:0">else <block pos:start="305:28" pos:end="312:0">{<block_content pos:start="307:25" pos:end="307:64">

                        <expr_stmt pos:start="307:25" pos:end="307:64"><expr pos:start="307:25" pos:end="307:63"><name pos:start="307:25" pos:end="307:35">buttonstate</name> <operator pos:start="307:37" pos:end="307:38">&amp;=</operator> <operator pos:start="307:40" pos:end="307:40">~</operator><call pos:start="307:41" pos:end="307:63"><name pos:start="307:41" pos:end="307:50">SDL_BUTTON</name><argument_list pos:start="307:51" pos:end="307:63">(<argument pos:start="307:52" pos:end="307:62"><expr pos:start="307:52" pos:end="307:62"><name pos:start="307:52" pos:end="307:62"><name pos:start="307:52" pos:end="307:54">bev</name><operator pos:start="307:55" pos:end="307:56">-&gt;</operator><name pos:start="307:57" pos:end="307:62">button</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

<cpp:ifdef pos:start="311:1" pos:end="311:25">#<cpp:directive pos:start="311:2" pos:end="311:6">ifdef</cpp:directive> <name pos:start="311:8" pos:end="311:25">SDL_BUTTON_WHEELUP</name></cpp:ifdef>

                    <if_stmt pos:start="313:21" pos:end="324:0"><if pos:start="313:21" pos:end="317:21">if <condition pos:start="313:24" pos:end="313:93">(<expr pos:start="313:25" pos:end="313:92"><name pos:start="313:25" pos:end="313:35"><name pos:start="313:25" pos:end="313:27">bev</name><operator pos:start="313:28" pos:end="313:29">-&gt;</operator><name pos:start="313:30" pos:end="313:35">button</name></name> <operator pos:start="313:37" pos:end="313:38">==</operator> <name pos:start="313:40" pos:end="313:57">SDL_BUTTON_WHEELUP</name> <operator pos:start="313:59" pos:end="313:60">&amp;&amp;</operator> <name pos:start="313:62" pos:end="313:69"><name pos:start="313:62" pos:end="313:63">ev</name><operator pos:start="313:64" pos:end="313:65">-&gt;</operator><name pos:start="313:66" pos:end="313:69">type</name></name> <operator pos:start="313:71" pos:end="313:72">==</operator> <name pos:start="313:74" pos:end="313:92">SDL_MOUSEBUTTONDOWN</name></expr>)</condition> <block pos:start="313:95" pos:end="317:21">{<block_content pos:start="315:25" pos:end="315:32">

                        <expr_stmt pos:start="315:25" pos:end="315:32"><expr pos:start="315:25" pos:end="315:31"><name pos:start="315:25" pos:end="315:26">dz</name> <operator pos:start="315:28" pos:end="315:28">=</operator> <operator pos:start="315:30" pos:end="315:30">-</operator><literal type="number" pos:start="315:31" pos:end="315:31">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="317:23" pos:end="324:0">else if <condition pos:start="317:31" pos:end="317:102">(<expr pos:start="317:32" pos:end="317:101"><name pos:start="317:32" pos:end="317:42"><name pos:start="317:32" pos:end="317:34">bev</name><operator pos:start="317:35" pos:end="317:36">-&gt;</operator><name pos:start="317:37" pos:end="317:42">button</name></name> <operator pos:start="317:44" pos:end="317:45">==</operator> <name pos:start="317:47" pos:end="317:66">SDL_BUTTON_WHEELDOWN</name> <operator pos:start="317:68" pos:end="317:69">&amp;&amp;</operator> <name pos:start="317:71" pos:end="317:78"><name pos:start="317:71" pos:end="317:72">ev</name><operator pos:start="317:73" pos:end="317:74">-&gt;</operator><name pos:start="317:75" pos:end="317:78">type</name></name> <operator pos:start="317:80" pos:end="317:81">==</operator> <name pos:start="317:83" pos:end="317:101">SDL_MOUSEBUTTONDOWN</name></expr>)</condition> <block pos:start="317:104" pos:end="324:0">{<block_content pos:start="319:25" pos:end="319:31">

                        <expr_stmt pos:start="319:25" pos:end="319:31"><expr pos:start="319:25" pos:end="319:30"><name pos:start="319:25" pos:end="319:26">dz</name> <operator pos:start="319:28" pos:end="319:28">=</operator> <literal type="number" pos:start="319:30" pos:end="319:30">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="323:1" pos:end="323:6">#<cpp:directive pos:start="323:2" pos:end="323:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="325:21" pos:end="325:80"><expr pos:start="325:21" pos:end="325:79"><call pos:start="325:21" pos:end="325:79"><name pos:start="325:21" pos:end="325:40">sdl_send_mouse_event</name><argument_list pos:start="325:41" pos:end="325:79">(<argument pos:start="325:42" pos:end="325:42"><expr pos:start="325:42" pos:end="325:42"><literal type="number" pos:start="325:42" pos:end="325:42">0</literal></expr></argument>, <argument pos:start="325:45" pos:end="325:45"><expr pos:start="325:45" pos:end="325:45"><literal type="number" pos:start="325:45" pos:end="325:45">0</literal></expr></argument>, <argument pos:start="325:48" pos:end="325:49"><expr pos:start="325:48" pos:end="325:49"><name pos:start="325:48" pos:end="325:49">dz</name></expr></argument>, <argument pos:start="325:52" pos:end="325:57"><expr pos:start="325:52" pos:end="325:57"><name pos:start="325:52" pos:end="325:57"><name pos:start="325:52" pos:end="325:54">bev</name><operator pos:start="325:55" pos:end="325:56">-&gt;</operator><name pos:start="325:57" pos:end="325:57">x</name></name></expr></argument>, <argument pos:start="325:60" pos:end="325:65"><expr pos:start="325:60" pos:end="325:65"><name pos:start="325:60" pos:end="325:65"><name pos:start="325:60" pos:end="325:62">bev</name><operator pos:start="325:63" pos:end="325:64">-&gt;</operator><name pos:start="325:65" pos:end="325:65">y</name></name></expr></argument>, <argument pos:start="325:68" pos:end="325:78"><expr pos:start="325:68" pos:end="325:78"><name pos:start="325:68" pos:end="325:78">buttonstate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block>

            <break pos:start="331:13" pos:end="331:18">break;</break>

        <case pos:start="333:9" pos:end="333:29">case <expr pos:start="333:14" pos:end="333:28"><name pos:start="333:14" pos:end="333:28">SDL_ACTIVEEVENT</name></expr>:</case>

            <if_stmt pos:start="335:13" pos:end="341:13"><if pos:start="335:13" pos:end="341:13">if <condition pos:start="335:16" pos:end="337:65">(<expr pos:start="335:17" pos:end="337:64"><name pos:start="335:17" pos:end="335:24">gui_grab</name> <operator pos:start="335:26" pos:end="335:27">&amp;&amp;</operator> <name pos:start="335:29" pos:end="335:44"><name pos:start="335:29" pos:end="335:30">ev</name><operator pos:start="335:31" pos:end="335:32">-&gt;</operator><name pos:start="335:33" pos:end="335:38">active</name><operator pos:start="335:39" pos:end="335:39">.</operator><name pos:start="335:40" pos:end="335:44">state</name></name> <operator pos:start="335:46" pos:end="335:47">==</operator> <name pos:start="335:49" pos:end="335:65">SDL_APPINPUTFOCUS</name> <operator pos:start="335:67" pos:end="335:68">&amp;&amp;</operator>

                <operator pos:start="337:17" pos:end="337:17">!</operator><name pos:start="337:18" pos:end="337:32"><name pos:start="337:18" pos:end="337:19">ev</name><operator pos:start="337:20" pos:end="337:21">-&gt;</operator><name pos:start="337:22" pos:end="337:27">active</name><operator pos:start="337:28" pos:end="337:28">.</operator><name pos:start="337:29" pos:end="337:32">gain</name></name> <operator pos:start="337:34" pos:end="337:35">&amp;&amp;</operator> <operator pos:start="337:37" pos:end="337:37">!</operator><name pos:start="337:38" pos:end="337:64">gui_fullscreen_initial_grab</name></expr>)</condition> <block pos:start="337:67" pos:end="341:13">{<block_content pos:start="339:17" pos:end="339:31">

                <expr_stmt pos:start="339:17" pos:end="339:31"><expr pos:start="339:17" pos:end="339:30"><call pos:start="339:17" pos:end="339:30"><name pos:start="339:17" pos:end="339:28">sdl_grab_end</name><argument_list pos:start="339:29" pos:end="339:30">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="343:13" pos:end="359:13"><if pos:start="343:13" pos:end="359:13">if <condition pos:start="343:16" pos:end="343:49">(<expr pos:start="343:17" pos:end="343:48"><name pos:start="343:17" pos:end="343:32"><name pos:start="343:17" pos:end="343:18">ev</name><operator pos:start="343:19" pos:end="343:20">-&gt;</operator><name pos:start="343:21" pos:end="343:26">active</name><operator pos:start="343:27" pos:end="343:27">.</operator><name pos:start="343:28" pos:end="343:32">state</name></name> <operator pos:start="343:34" pos:end="343:34">&amp;</operator> <name pos:start="343:36" pos:end="343:48">SDL_APPACTIVE</name></expr>)</condition> <block pos:start="343:51" pos:end="359:13">{<block_content pos:start="345:17" pos:end="357:17">

                <if_stmt pos:start="345:17" pos:end="357:17"><if pos:start="345:17" pos:end="351:17">if <condition pos:start="345:20" pos:end="345:36">(<expr pos:start="345:21" pos:end="345:35"><name pos:start="345:21" pos:end="345:35"><name pos:start="345:21" pos:end="345:22">ev</name><operator pos:start="345:23" pos:end="345:24">-&gt;</operator><name pos:start="345:25" pos:end="345:30">active</name><operator pos:start="345:31" pos:end="345:31">.</operator><name pos:start="345:32" pos:end="345:35">gain</name></name></expr>)</condition> <block pos:start="345:38" pos:end="351:17">{<block_content pos:start="349:21" pos:end="349:47">

                    <comment type="block" pos:start="347:21" pos:end="347:50">/* Back to default interval */</comment>

                    <expr_stmt pos:start="349:21" pos:end="349:47"><expr pos:start="349:21" pos:end="349:46"><name pos:start="349:21" pos:end="349:42"><name pos:start="349:21" pos:end="349:22">ds</name><operator pos:start="349:23" pos:end="349:24">-&gt;</operator><name pos:start="349:25" pos:end="349:42">gui_timer_interval</name></name> <operator pos:start="349:44" pos:end="349:44">=</operator> <literal type="number" pos:start="349:46" pos:end="349:46">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="351:19" pos:end="357:17">else <block pos:start="351:24" pos:end="357:17">{<block_content pos:start="355:21" pos:end="355:49">

                    <comment type="block" pos:start="353:21" pos:end="353:43">/* Sleeping interval */</comment>

                    <expr_stmt pos:start="355:21" pos:end="355:49"><expr pos:start="355:21" pos:end="355:48"><name pos:start="355:21" pos:end="355:42"><name pos:start="355:21" pos:end="355:22">ds</name><operator pos:start="355:23" pos:end="355:24">-&gt;</operator><name pos:start="355:25" pos:end="355:42">gui_timer_interval</name></name> <operator pos:start="355:44" pos:end="355:44">=</operator> <literal type="number" pos:start="355:46" pos:end="355:48">500</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="361:13" pos:end="361:18">break;</break>

        <default pos:start="363:9" pos:end="363:16">default:</default>

            <break pos:start="365:13" pos:end="365:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
