<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25642.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">opt_streamid</name><parameter_list pos:start="1:24" pos:end="1:57">(<parameter pos:start="1:25" pos:end="1:39"><decl pos:start="1:25" pos:end="1:39"><type pos:start="1:25" pos:end="1:39"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">opt</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:56"><decl pos:start="1:42" pos:end="1:56"><type pos:start="1:42" pos:end="1:56"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:51">char</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:11">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:20"><name pos:start="9:10" pos:end="9:16">idx_str</name><index pos:start="9:17" pos:end="9:20">[<expr pos:start="9:18" pos:end="9:19"><literal type="number" pos:start="9:18" pos:end="9:19">16</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:46"><expr pos:start="13:5" pos:end="13:45"><call pos:start="13:5" pos:end="13:45"><name pos:start="13:5" pos:end="13:14">av_strlcpy</name><argument_list pos:start="13:15" pos:end="13:45">(<argument pos:start="13:16" pos:end="13:22"><expr pos:start="13:16" pos:end="13:22"><name pos:start="13:16" pos:end="13:22">idx_str</name></expr></argument>, <argument pos:start="13:25" pos:end="13:27"><expr pos:start="13:25" pos:end="13:27"><name pos:start="13:25" pos:end="13:27">arg</name></expr></argument>, <argument pos:start="13:30" pos:end="13:44"><expr pos:start="13:30" pos:end="13:44"><sizeof pos:start="13:30" pos:end="13:44">sizeof<argument_list pos:start="13:36" pos:end="13:44">(<argument pos:start="13:37" pos:end="13:43"><expr pos:start="13:37" pos:end="13:43"><name pos:start="13:37" pos:end="13:43">idx_str</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:5">p</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <call pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:14">strchr</name><argument_list pos:start="15:15" pos:end="15:28">(<argument pos:start="15:16" pos:end="15:22"><expr pos:start="15:16" pos:end="15:22"><name pos:start="15:16" pos:end="15:22">idx_str</name></expr></argument>, <argument pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><literal type="char" pos:start="15:25" pos:end="15:27">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="17:11">(<expr pos:start="17:9" pos:end="17:10"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:10">p</name></expr>)</condition> <block pos:start="17:13" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:23">

        <expr_stmt pos:start="19:9" pos:end="23:26"><expr pos:start="19:9" pos:end="23:25"><call pos:start="19:9" pos:end="23:25"><name pos:start="19:9" pos:end="19:15">fprintf</name><argument_list pos:start="19:16" pos:end="23:25">(<argument pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:22">stderr</name></expr></argument>,

                <argument pos:start="21:17" pos:end="21:88"><expr pos:start="21:17" pos:end="21:88"><literal type="string" pos:start="21:17" pos:end="21:88">"Invalid value '%s' for option '%s', required syntax is 'index:value'\n"</literal></expr></argument>,

                <argument pos:start="23:17" pos:end="23:19"><expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:19">arg</name></expr></argument>, <argument pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><name pos:start="23:22" pos:end="23:24">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:23"><expr pos:start="25:9" pos:end="25:22"><call pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:19">ffmpeg_exit</name><argument_list pos:start="25:20" pos:end="25:22">(<argument pos:start="25:21" pos:end="25:21"><expr pos:start="25:21" pos:end="25:21"><literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:16"><expr pos:start="29:5" pos:end="29:15"><operator pos:start="29:5" pos:end="29:5">*</operator><name pos:start="29:6" pos:end="29:6">p</name><operator pos:start="29:7" pos:end="29:8">++</operator> <operator pos:start="29:10" pos:end="29:10">=</operator> <literal type="char" pos:start="29:12" pos:end="29:15">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:65"><expr pos:start="31:5" pos:end="31:64"><name pos:start="31:5" pos:end="31:7">idx</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:64"><name pos:start="31:11" pos:end="31:29">parse_number_or_die</name><argument_list pos:start="31:30" pos:end="31:64">(<argument pos:start="31:31" pos:end="31:33"><expr pos:start="31:31" pos:end="31:33"><name pos:start="31:31" pos:end="31:33">opt</name></expr></argument>, <argument pos:start="31:36" pos:end="31:42"><expr pos:start="31:36" pos:end="31:42"><name pos:start="31:36" pos:end="31:42">idx_str</name></expr></argument>, <argument pos:start="31:45" pos:end="31:51"><expr pos:start="31:45" pos:end="31:51"><name pos:start="31:45" pos:end="31:51">OPT_INT</name></expr></argument>, <argument pos:start="31:54" pos:end="31:54"><expr pos:start="31:54" pos:end="31:54"><literal type="number" pos:start="31:54" pos:end="31:54">0</literal></expr></argument>, <argument pos:start="31:57" pos:end="31:63"><expr pos:start="31:57" pos:end="31:63"><name pos:start="31:57" pos:end="31:63">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:92"><expr pos:start="33:5" pos:end="33:91"><name pos:start="33:5" pos:end="33:16">streamid_map</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:91"><name pos:start="33:20" pos:end="33:29">grow_array</name><argument_list pos:start="33:30" pos:end="33:91">(<argument pos:start="33:31" pos:end="33:42"><expr pos:start="33:31" pos:end="33:42"><name pos:start="33:31" pos:end="33:42">streamid_map</name></expr></argument>, <argument pos:start="33:45" pos:end="33:65"><expr pos:start="33:45" pos:end="33:65"><sizeof pos:start="33:45" pos:end="33:65">sizeof<argument_list pos:start="33:51" pos:end="33:65">(<argument pos:start="33:52" pos:end="33:64"><expr pos:start="33:52" pos:end="33:64"><operator pos:start="33:52" pos:end="33:52">*</operator><name pos:start="33:53" pos:end="33:64">streamid_map</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:68" pos:end="33:83"><expr pos:start="33:68" pos:end="33:83"><operator pos:start="33:68" pos:end="33:68">&amp;</operator><name pos:start="33:69" pos:end="33:83">nb_streamid_map</name></expr></argument>, <argument pos:start="33:86" pos:end="33:90"><expr pos:start="33:86" pos:end="33:90"><name pos:start="33:86" pos:end="33:88">idx</name><operator pos:start="33:89" pos:end="33:89">+</operator><literal type="number" pos:start="33:90" pos:end="33:90">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:73"><expr pos:start="35:5" pos:end="35:72"><name pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:16">streamid_map</name><index pos:start="35:17" pos:end="35:21">[<expr pos:start="35:18" pos:end="35:20"><name pos:start="35:18" pos:end="35:20">idx</name></expr>]</index></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <call pos:start="35:25" pos:end="35:72"><name pos:start="35:25" pos:end="35:43">parse_number_or_die</name><argument_list pos:start="35:44" pos:end="35:72">(<argument pos:start="35:45" pos:end="35:47"><expr pos:start="35:45" pos:end="35:47"><name pos:start="35:45" pos:end="35:47">opt</name></expr></argument>, <argument pos:start="35:50" pos:end="35:50"><expr pos:start="35:50" pos:end="35:50"><name pos:start="35:50" pos:end="35:50">p</name></expr></argument>, <argument pos:start="35:53" pos:end="35:59"><expr pos:start="35:53" pos:end="35:59"><name pos:start="35:53" pos:end="35:59">OPT_INT</name></expr></argument>, <argument pos:start="35:62" pos:end="35:62"><expr pos:start="35:62" pos:end="35:62"><literal type="number" pos:start="35:62" pos:end="35:62">0</literal></expr></argument>, <argument pos:start="35:65" pos:end="35:71"><expr pos:start="35:65" pos:end="35:71"><name pos:start="35:65" pos:end="35:71">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
