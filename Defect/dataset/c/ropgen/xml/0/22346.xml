<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22346.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">qxl_render_cursor</name><parameter_list pos:start="1:23" pos:end="1:61">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:35">PCIQXLDevice</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">qxl</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><name pos:start="1:43" pos:end="1:55">QXLCommandExt</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">ext</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:5">

    <decl_stmt pos:start="5:5" pos:end="5:73"><decl pos:start="5:5" pos:end="5:72"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">QXLCursorCmd</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">cmd</name> <init pos:start="5:23" pos:end="5:72">= <expr pos:start="5:25" pos:end="5:72"><call pos:start="5:25" pos:end="5:72"><name pos:start="5:25" pos:end="5:37">qxl_phys2virt</name><argument_list pos:start="5:38" pos:end="5:72">(<argument pos:start="5:39" pos:end="5:41"><expr pos:start="5:39" pos:end="5:41"><name pos:start="5:39" pos:end="5:41">qxl</name></expr></argument>, <argument pos:start="5:44" pos:end="5:56"><expr pos:start="5:44" pos:end="5:56"><name pos:start="5:44" pos:end="5:56"><name pos:start="5:44" pos:end="5:46">ext</name><operator pos:start="5:47" pos:end="5:48">-&gt;</operator><name pos:start="5:49" pos:end="5:51">cmd</name><operator pos:start="5:52" pos:end="5:52">.</operator><name pos:start="5:53" pos:end="5:56">data</name></name></expr></argument>, <argument pos:start="5:59" pos:end="5:71"><expr pos:start="5:59" pos:end="5:71"><name pos:start="5:59" pos:end="5:71"><name pos:start="5:59" pos:end="5:61">ext</name><operator pos:start="5:62" pos:end="5:63">-&gt;</operator><name pos:start="5:64" pos:end="5:71">group_id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">QXLCursor</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:21">cursor</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">QEMUCursor</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">c</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:63">(<expr pos:start="13:9" pos:end="13:62"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:31"><name pos:start="13:10" pos:end="13:12">qxl</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:17">ssd</name><operator pos:start="13:18" pos:end="13:18">.</operator><name pos:start="13:19" pos:end="13:20">ds</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:31">mouse_set</name></name> <operator pos:start="13:33" pos:end="13:34">||</operator> <operator pos:start="13:36" pos:end="13:36">!</operator><name pos:start="13:37" pos:end="13:62"><name pos:start="13:37" pos:end="13:39">qxl</name><operator pos:start="13:40" pos:end="13:41">-&gt;</operator><name pos:start="13:42" pos:end="13:44">ssd</name><operator pos:start="13:45" pos:end="13:45">.</operator><name pos:start="13:46" pos:end="13:47">ds</name><operator pos:start="13:48" pos:end="13:49">-&gt;</operator><name pos:start="13:50" pos:end="13:62">cursor_define</name></name></expr>)</condition> <block pos:start="13:65" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:55">(<expr pos:start="21:9" pos:end="21:54"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:11">qxl</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:18">debug</name></name> <operator pos:start="21:20" pos:end="21:20">&gt;</operator> <literal type="number" pos:start="21:22" pos:end="21:22">1</literal> <operator pos:start="21:24" pos:end="21:25">&amp;&amp;</operator> <name pos:start="21:27" pos:end="21:35"><name pos:start="21:27" pos:end="21:29">cmd</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:35">type</name></name> <operator pos:start="21:37" pos:end="21:38">!=</operator> <name pos:start="21:40" pos:end="21:54">QXL_CURSOR_MOVE</name></expr>)</condition> <block pos:start="21:57" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:30">

        <expr_stmt pos:start="23:9" pos:end="23:44"><expr pos:start="23:9" pos:end="23:43"><call pos:start="23:9" pos:end="23:43"><name pos:start="23:9" pos:end="23:15">fprintf</name><argument_list pos:start="23:16" pos:end="23:43">(<argument pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">stderr</name></expr></argument>, <argument pos:start="23:25" pos:end="23:28"><expr pos:start="23:25" pos:end="23:28"><literal type="string" pos:start="23:25" pos:end="23:28">"%s"</literal></expr></argument>, <argument pos:start="23:31" pos:end="23:42"><expr pos:start="23:31" pos:end="23:42"><name pos:start="23:31" pos:end="23:42">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:52"><expr pos:start="25:9" pos:end="25:51"><call pos:start="25:9" pos:end="25:51"><name pos:start="25:9" pos:end="25:26">qxl_log_cmd_cursor</name><argument_list pos:start="25:27" pos:end="25:51">(<argument pos:start="25:28" pos:end="25:30"><expr pos:start="25:28" pos:end="25:30"><name pos:start="25:28" pos:end="25:30">qxl</name></expr></argument>, <argument pos:start="25:33" pos:end="25:35"><expr pos:start="25:33" pos:end="25:35"><name pos:start="25:33" pos:end="25:35">cmd</name></expr></argument>, <argument pos:start="25:38" pos:end="25:50"><expr pos:start="25:38" pos:end="25:50"><name pos:start="25:38" pos:end="25:50"><name pos:start="25:38" pos:end="25:40">ext</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:50">group_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><call pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:15">fprintf</name><argument_list pos:start="27:16" pos:end="27:29">(<argument pos:start="27:17" pos:end="27:22"><expr pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:22">stderr</name></expr></argument>, <argument pos:start="27:25" pos:end="27:28"><expr pos:start="27:25" pos:end="27:28"><literal type="string" pos:start="27:25" pos:end="27:28">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="31:5" pos:end="83:5">switch <condition pos:start="31:12" pos:end="31:22">(<expr pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:15">cmd</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:21">type</name></name></expr>)</condition> <block pos:start="31:24" pos:end="83:5">{<block_content pos:start="33:5" pos:end="81:14">

    <case pos:start="33:5" pos:end="33:24">case <expr pos:start="33:10" pos:end="33:23"><name pos:start="33:10" pos:end="33:23">QXL_CURSOR_SET</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:69"><expr pos:start="35:9" pos:end="35:68"><name pos:start="35:9" pos:end="35:14">cursor</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <call pos:start="35:18" pos:end="35:68"><name pos:start="35:18" pos:end="35:30">qxl_phys2virt</name><argument_list pos:start="35:31" pos:end="35:68">(<argument pos:start="35:32" pos:end="35:34"><expr pos:start="35:32" pos:end="35:34"><name pos:start="35:32" pos:end="35:34">qxl</name></expr></argument>, <argument pos:start="35:37" pos:end="35:52"><expr pos:start="35:37" pos:end="35:52"><name pos:start="35:37" pos:end="35:52"><name pos:start="35:37" pos:end="35:39">cmd</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:42">u</name><operator pos:start="35:43" pos:end="35:43">.</operator><name pos:start="35:44" pos:end="35:46">set</name><operator pos:start="35:47" pos:end="35:47">.</operator><name pos:start="35:48" pos:end="35:52">shape</name></name></expr></argument>, <argument pos:start="35:55" pos:end="35:67"><expr pos:start="35:55" pos:end="35:67"><name pos:start="35:55" pos:end="35:67"><name pos:start="35:55" pos:end="35:57">ext</name><operator pos:start="35:58" pos:end="35:59">-&gt;</operator><name pos:start="35:60" pos:end="35:67">group_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:57">(<expr pos:start="37:13" pos:end="37:56"><name pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:18">cursor</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:25">chunk</name><operator pos:start="37:26" pos:end="37:26">.</operator><name pos:start="37:27" pos:end="37:35">data_size</name></name> <operator pos:start="37:37" pos:end="37:38">!=</operator> <name pos:start="37:40" pos:end="37:56"><name pos:start="37:40" pos:end="37:45">cursor</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:56">data_size</name></name></expr>)</condition> <block pos:start="37:59" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:19">

            <expr_stmt pos:start="39:13" pos:end="39:67"><expr pos:start="39:13" pos:end="39:66"><call pos:start="39:13" pos:end="39:66"><name pos:start="39:13" pos:end="39:19">fprintf</name><argument_list pos:start="39:20" pos:end="39:66">(<argument pos:start="39:21" pos:end="39:26"><expr pos:start="39:21" pos:end="39:26"><name pos:start="39:21" pos:end="39:26">stderr</name></expr></argument>, <argument pos:start="39:29" pos:end="39:51"><expr pos:start="39:29" pos:end="39:51"><literal type="string" pos:start="39:29" pos:end="39:51">"%s: multiple chunks\n"</literal></expr></argument>, <argument pos:start="39:54" pos:end="39:65"><expr pos:start="39:54" pos:end="39:65"><name pos:start="39:54" pos:end="39:65">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:36"><expr pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:9">c</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <call pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:22">qxl_cursor</name><argument_list pos:start="45:23" pos:end="45:35">(<argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">qxl</name></expr></argument>, <argument pos:start="45:29" pos:end="45:34"><expr pos:start="45:29" pos:end="45:34"><name pos:start="45:29" pos:end="45:34">cursor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:22">(<expr pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:13">c</name> <operator pos:start="47:15" pos:end="47:16">==</operator> <name pos:start="47:18" pos:end="47:21">NULL</name></expr>)</condition> <block pos:start="47:24" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:42">

            <expr_stmt pos:start="49:13" pos:end="49:42"><expr pos:start="49:13" pos:end="49:41"><name pos:start="49:13" pos:end="49:13">c</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <call pos:start="49:17" pos:end="49:41"><name pos:start="49:17" pos:end="49:39">cursor_builtin_left_ptr</name><argument_list pos:start="49:40" pos:end="49:41">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:40"><expr pos:start="53:9" pos:end="53:39"><call pos:start="53:9" pos:end="53:39"><name pos:start="53:9" pos:end="53:23">qemu_mutex_lock</name><argument_list pos:start="53:24" pos:end="53:39">(<argument pos:start="53:25" pos:end="53:38"><expr pos:start="53:25" pos:end="53:38"><operator pos:start="53:25" pos:end="53:25">&amp;</operator><name pos:start="53:26" pos:end="53:38"><name pos:start="53:26" pos:end="53:28">qxl</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:33">ssd</name><operator pos:start="53:34" pos:end="53:34">.</operator><name pos:start="53:35" pos:end="53:38">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:28">(<expr pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:15">qxl</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:20">ssd</name><operator pos:start="55:21" pos:end="55:21">.</operator><name pos:start="55:22" pos:end="55:27">cursor</name></name></expr>)</condition> <block pos:start="55:30" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:40">

            <expr_stmt pos:start="57:13" pos:end="57:40"><expr pos:start="57:13" pos:end="57:39"><call pos:start="57:13" pos:end="57:39"><name pos:start="57:13" pos:end="57:22">cursor_put</name><argument_list pos:start="57:23" pos:end="57:39">(<argument pos:start="57:24" pos:end="57:38"><expr pos:start="57:24" pos:end="57:38"><name pos:start="57:24" pos:end="57:38"><name pos:start="57:24" pos:end="57:26">qxl</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:31">ssd</name><operator pos:start="57:32" pos:end="57:32">.</operator><name pos:start="57:33" pos:end="57:38">cursor</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:28"><expr pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:11">qxl</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:16">ssd</name><operator pos:start="61:17" pos:end="61:17">.</operator><name pos:start="61:18" pos:end="61:23">cursor</name></name> <operator pos:start="61:25" pos:end="61:25">=</operator> <name pos:start="61:27" pos:end="61:27">c</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:49"><expr pos:start="63:9" pos:end="63:48"><name pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:11">qxl</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:16">ssd</name><operator pos:start="63:17" pos:end="63:17">.</operator><name pos:start="63:18" pos:end="63:24">mouse_x</name></name> <operator pos:start="63:26" pos:end="63:26">=</operator> <name pos:start="63:28" pos:end="63:48"><name pos:start="63:28" pos:end="63:30">cmd</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:33">u</name><operator pos:start="63:34" pos:end="63:34">.</operator><name pos:start="63:35" pos:end="63:37">set</name><operator pos:start="63:38" pos:end="63:38">.</operator><name pos:start="63:39" pos:end="63:46">position</name><operator pos:start="63:47" pos:end="63:47">.</operator><name pos:start="63:48" pos:end="63:48">x</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:49"><expr pos:start="65:9" pos:end="65:48"><name pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:11">qxl</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:16">ssd</name><operator pos:start="65:17" pos:end="65:17">.</operator><name pos:start="65:18" pos:end="65:24">mouse_y</name></name> <operator pos:start="65:26" pos:end="65:26">=</operator> <name pos:start="65:28" pos:end="65:48"><name pos:start="65:28" pos:end="65:30">cmd</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:33">u</name><operator pos:start="65:34" pos:end="65:34">.</operator><name pos:start="65:35" pos:end="65:37">set</name><operator pos:start="65:38" pos:end="65:38">.</operator><name pos:start="65:39" pos:end="65:46">position</name><operator pos:start="65:47" pos:end="65:47">.</operator><name pos:start="65:48" pos:end="65:48">y</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:42"><expr pos:start="67:9" pos:end="67:41"><call pos:start="67:9" pos:end="67:41"><name pos:start="67:9" pos:end="67:25">qemu_mutex_unlock</name><argument_list pos:start="67:26" pos:end="67:41">(<argument pos:start="67:27" pos:end="67:40"><expr pos:start="67:27" pos:end="67:40"><operator pos:start="67:27" pos:end="67:27">&amp;</operator><name pos:start="67:28" pos:end="67:40"><name pos:start="67:28" pos:end="67:30">qxl</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:35">ssd</name><operator pos:start="67:36" pos:end="67:36">.</operator><name pos:start="67:37" pos:end="67:40">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:25">case <expr pos:start="71:10" pos:end="71:24"><name pos:start="71:10" pos:end="71:24">QXL_CURSOR_MOVE</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:40"><expr pos:start="73:9" pos:end="73:39"><call pos:start="73:9" pos:end="73:39"><name pos:start="73:9" pos:end="73:23">qemu_mutex_lock</name><argument_list pos:start="73:24" pos:end="73:39">(<argument pos:start="73:25" pos:end="73:38"><expr pos:start="73:25" pos:end="73:38"><operator pos:start="73:25" pos:end="73:25">&amp;</operator><name pos:start="73:26" pos:end="73:38"><name pos:start="73:26" pos:end="73:28">qxl</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:33">ssd</name><operator pos:start="73:34" pos:end="73:34">.</operator><name pos:start="73:35" pos:end="73:38">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:45"><expr pos:start="75:9" pos:end="75:44"><name pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:11">qxl</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:16">ssd</name><operator pos:start="75:17" pos:end="75:17">.</operator><name pos:start="75:18" pos:end="75:24">mouse_x</name></name> <operator pos:start="75:26" pos:end="75:26">=</operator> <name pos:start="75:28" pos:end="75:44"><name pos:start="75:28" pos:end="75:30">cmd</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:33">u</name><operator pos:start="75:34" pos:end="75:34">.</operator><name pos:start="75:35" pos:end="75:42">position</name><operator pos:start="75:43" pos:end="75:43">.</operator><name pos:start="75:44" pos:end="75:44">x</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:45"><expr pos:start="77:9" pos:end="77:44"><name pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:11">qxl</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:16">ssd</name><operator pos:start="77:17" pos:end="77:17">.</operator><name pos:start="77:18" pos:end="77:24">mouse_y</name></name> <operator pos:start="77:26" pos:end="77:26">=</operator> <name pos:start="77:28" pos:end="77:44"><name pos:start="77:28" pos:end="77:30">cmd</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:33">u</name><operator pos:start="77:34" pos:end="77:34">.</operator><name pos:start="77:35" pos:end="77:42">position</name><operator pos:start="77:43" pos:end="77:43">.</operator><name pos:start="77:44" pos:end="77:44">y</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:42"><expr pos:start="79:9" pos:end="79:41"><call pos:start="79:9" pos:end="79:41"><name pos:start="79:9" pos:end="79:25">qemu_mutex_unlock</name><argument_list pos:start="79:26" pos:end="79:41">(<argument pos:start="79:27" pos:end="79:40"><expr pos:start="79:27" pos:end="79:40"><operator pos:start="79:27" pos:end="79:27">&amp;</operator><name pos:start="79:28" pos:end="79:40"><name pos:start="79:28" pos:end="79:30">qxl</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:35">ssd</name><operator pos:start="79:36" pos:end="79:36">.</operator><name pos:start="79:37" pos:end="79:40">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
