<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5813.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">smbios_add_field</name><parameter_list pos:start="1:22" pos:end="1:73">(<parameter pos:start="1:23" pos:end="1:30"><decl pos:start="1:23" pos:end="1:30"><type pos:start="1:23" pos:end="1:30"><name pos:start="1:23" pos:end="1:25">int</name></type> <name pos:start="1:27" pos:end="1:30">type</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:42"><decl pos:start="1:33" pos:end="1:42"><type pos:start="1:33" pos:end="1:42"><name pos:start="1:33" pos:end="1:35">int</name></type> <name pos:start="1:37" pos:end="1:42">offset</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:60"><decl pos:start="1:45" pos:end="1:60"><type pos:start="1:45" pos:end="1:60"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">void</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">data</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:72"><decl pos:start="1:63" pos:end="1:72"><type pos:start="1:63" pos:end="1:72"><name pos:start="1:63" pos:end="1:68">size_t</name></type> <name pos:start="1:70" pos:end="1:72">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:70">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:23">smbios_field</name></name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:30">field</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:53"><expr pos:start="9:5" pos:end="9:52"><call pos:start="9:5" pos:end="9:52"><name pos:start="9:5" pos:end="9:26">smbios_check_collision</name><argument_list pos:start="9:27" pos:end="9:52">(<argument pos:start="9:28" pos:end="9:31"><expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">type</name></expr></argument>, <argument pos:start="9:34" pos:end="9:51"><expr pos:start="9:34" pos:end="9:51"><name pos:start="9:34" pos:end="9:51">SMBIOS_FIELD_ENTRY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:24">(<expr pos:start="13:9" pos:end="13:23"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:23">smbios_entries</name></expr>)</condition> <block pos:start="13:26" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:55">

        <expr_stmt pos:start="15:9" pos:end="15:46"><expr pos:start="15:9" pos:end="15:45"><name pos:start="15:9" pos:end="15:26">smbios_entries_len</name> <operator pos:start="15:28" pos:end="15:28">=</operator> <sizeof pos:start="15:30" pos:end="15:45">sizeof<argument_list pos:start="15:36" pos:end="15:45">(<argument pos:start="15:37" pos:end="15:44"><expr pos:start="15:37" pos:end="15:44"><name pos:start="15:37" pos:end="15:44">uint16_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:55"><expr pos:start="17:9" pos:end="17:54"><name pos:start="17:9" pos:end="17:22">smbios_entries</name> <operator pos:start="17:24" pos:end="17:24">=</operator> <call pos:start="17:26" pos:end="17:54"><name pos:start="17:26" pos:end="17:34">g_malloc0</name><argument_list pos:start="17:35" pos:end="17:54">(<argument pos:start="17:36" pos:end="17:53"><expr pos:start="17:36" pos:end="17:53"><name pos:start="17:36" pos:end="17:53">smbios_entries_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="23:72"><expr pos:start="21:5" pos:end="23:71"><name pos:start="21:5" pos:end="21:18">smbios_entries</name> <operator pos:start="21:20" pos:end="21:20">=</operator> <call pos:start="21:22" pos:end="23:71"><name pos:start="21:22" pos:end="21:30">g_realloc</name><argument_list pos:start="21:31" pos:end="23:71">(<argument pos:start="21:32" pos:end="21:45"><expr pos:start="21:32" pos:end="21:45"><name pos:start="21:32" pos:end="21:45">smbios_entries</name></expr></argument>, <argument pos:start="21:48" pos:end="23:70"><expr pos:start="21:48" pos:end="23:70"><name pos:start="21:48" pos:end="21:65">smbios_entries_len</name> <operator pos:start="21:67" pos:end="21:67">+</operator>

                                                  <sizeof pos:start="23:51" pos:end="23:64">sizeof<argument_list pos:start="23:57" pos:end="23:64">(<argument pos:start="23:58" pos:end="23:63"><expr pos:start="23:58" pos:end="23:63"><operator pos:start="23:58" pos:end="23:58">*</operator><name pos:start="23:59" pos:end="23:63">field</name></expr></argument>)</argument_list></sizeof> <operator pos:start="23:66" pos:end="23:66">+</operator> <name pos:start="23:68" pos:end="23:70">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:73"><expr pos:start="25:5" pos:end="25:72"><name pos:start="25:5" pos:end="25:9">field</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <operator pos:start="25:13" pos:end="25:13">(</operator>struct <name pos:start="25:21" pos:end="25:32">smbios_field</name> <operator pos:start="25:34" pos:end="25:34">*</operator><operator pos:start="25:35" pos:end="25:35">)</operator><operator pos:start="25:36" pos:end="25:36">(</operator><name pos:start="25:37" pos:end="25:50">smbios_entries</name> <operator pos:start="25:52" pos:end="25:52">+</operator> <name pos:start="25:54" pos:end="25:71">smbios_entries_len</name><operator pos:start="25:72" pos:end="25:72">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:44"><expr pos:start="27:5" pos:end="27:43"><name pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:9">field</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:17">header</name><operator pos:start="27:18" pos:end="27:18">.</operator><name pos:start="27:19" pos:end="27:22">type</name></name> <operator pos:start="27:24" pos:end="27:24">=</operator> <name pos:start="27:26" pos:end="27:43">SMBIOS_FIELD_ENTRY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:61"><expr pos:start="29:5" pos:end="29:60"><name pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:9">field</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:17">header</name><operator pos:start="29:18" pos:end="29:18">.</operator><name pos:start="29:19" pos:end="29:24">length</name></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <call pos:start="29:28" pos:end="29:60"><name pos:start="29:28" pos:end="29:38">cpu_to_le16</name><argument_list pos:start="29:39" pos:end="29:60">(<argument pos:start="29:40" pos:end="29:59"><expr pos:start="29:40" pos:end="29:59"><sizeof pos:start="29:40" pos:end="29:53">sizeof<argument_list pos:start="29:46" pos:end="29:53">(<argument pos:start="29:47" pos:end="29:52"><expr pos:start="29:47" pos:end="29:52"><operator pos:start="29:47" pos:end="29:47">*</operator><name pos:start="29:48" pos:end="29:52">field</name></expr></argument>)</argument_list></sizeof> <operator pos:start="29:55" pos:end="29:55">+</operator> <name pos:start="29:57" pos:end="29:59">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:9">field</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:15">type</name></name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:22">type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:9">field</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:17">offset</name></name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:39"><name pos:start="35:21" pos:end="35:31">cpu_to_le16</name><argument_list pos:start="35:32" pos:end="35:39">(<argument pos:start="35:33" pos:end="35:38"><expr pos:start="35:33" pos:end="35:38"><name pos:start="35:33" pos:end="35:38">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><call pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:10">memcpy</name><argument_list pos:start="37:11" pos:end="37:34">(<argument pos:start="37:12" pos:end="37:22"><expr pos:start="37:12" pos:end="37:22"><name pos:start="37:12" pos:end="37:22"><name pos:start="37:12" pos:end="37:16">field</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:22">data</name></name></expr></argument>, <argument pos:start="37:25" pos:end="37:28"><expr pos:start="37:25" pos:end="37:28"><name pos:start="37:25" pos:end="37:28">data</name></expr></argument>, <argument pos:start="37:31" pos:end="37:33"><expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:33">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:47"><expr pos:start="41:5" pos:end="41:46"><name pos:start="41:5" pos:end="41:22">smbios_entries_len</name> <operator pos:start="41:24" pos:end="41:25">+=</operator> <sizeof pos:start="41:27" pos:end="41:40">sizeof<argument_list pos:start="41:33" pos:end="41:40">(<argument pos:start="41:34" pos:end="41:39"><expr pos:start="41:34" pos:end="41:39"><operator pos:start="41:34" pos:end="41:34">*</operator><name pos:start="41:35" pos:end="41:39">field</name></expr></argument>)</argument_list></sizeof> <operator pos:start="41:42" pos:end="41:42">+</operator> <name pos:start="41:44" pos:end="41:46">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:70"><expr pos:start="43:5" pos:end="45:69"><operator pos:start="43:5" pos:end="43:5">(</operator><operator pos:start="43:6" pos:end="43:6">*</operator><operator pos:start="43:7" pos:end="43:7">(</operator><name pos:start="43:8" pos:end="43:15">uint16_t</name> <operator pos:start="43:17" pos:end="43:17">*</operator><operator pos:start="43:18" pos:end="43:18">)</operator><name pos:start="43:19" pos:end="43:32">smbios_entries</name><operator pos:start="43:33" pos:end="43:33">)</operator> <operator pos:start="43:35" pos:end="43:35">=</operator>

            <call pos:start="45:13" pos:end="45:69"><name pos:start="45:13" pos:end="45:23">cpu_to_le16</name><argument_list pos:start="45:24" pos:end="45:69">(<argument pos:start="45:25" pos:end="45:68"><expr pos:start="45:25" pos:end="45:68"><call pos:start="45:25" pos:end="45:64"><name pos:start="45:25" pos:end="45:35">le16_to_cpu</name><argument_list pos:start="45:36" pos:end="45:64">(<argument pos:start="45:37" pos:end="45:63"><expr pos:start="45:37" pos:end="45:63"><operator pos:start="45:37" pos:end="45:37">*</operator><operator pos:start="45:38" pos:end="45:38">(</operator><name pos:start="45:39" pos:end="45:46">uint16_t</name> <operator pos:start="45:48" pos:end="45:48">*</operator><operator pos:start="45:49" pos:end="45:49">)</operator><name pos:start="45:50" pos:end="45:63">smbios_entries</name></expr></argument>)</argument_list></call> <operator pos:start="45:66" pos:end="45:66">+</operator> <literal type="number" pos:start="45:68" pos:end="45:68">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
