<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12833.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:41">test_visitor_in_struct_nested</name><parameter_list pos:start="1:42" pos:end="3:61">(<parameter pos:start="1:43" pos:end="1:68"><decl pos:start="1:43" pos:end="1:68"><type pos:start="1:43" pos:end="1:68"><name pos:start="1:43" pos:end="1:62">TestInputVisitorData</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">data</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:60"><decl pos:start="3:43" pos:end="3:60"><type pos:start="3:43" pos:end="3:60"><specifier pos:start="3:43" pos:end="3:47">const</specifier> <name pos:start="3:49" pos:end="3:52">void</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:60">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:30">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">UserDefTwo</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">udp</name> <init pos:start="7:21" pos:end="7:26">= <expr pos:start="7:23" pos:end="7:26"><name pos:start="7:23" pos:end="7:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">Visitor</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">v</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="19:80"><expr pos:start="13:5" pos:end="19:79"><name pos:start="13:5" pos:end="13:5">v</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <call pos:start="13:9" pos:end="19:79"><name pos:start="13:9" pos:end="13:31">visitor_input_test_init</name><argument_list pos:start="13:32" pos:end="19:79">(<argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">data</name></expr></argument>, <argument pos:start="13:39" pos:end="19:78"><expr pos:start="13:39" pos:end="19:78"><literal type="string" pos:start="13:39" pos:end="13:64">"{ 'string0': 'string0', "</literal>

                                <literal type="string" pos:start="15:33" pos:end="15:67">"'dict1': { 'string1': 'string1', "</literal>

                                <literal type="string" pos:start="17:33" pos:end="17:73">"'dict2': { 'userdef': { 'integer': 42, "</literal>

                                <literal type="string" pos:start="19:33" pos:end="19:78">"'string': 'string' }, 'string': 'string2'}}}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:55"><expr pos:start="23:5" pos:end="23:54"><call pos:start="23:5" pos:end="23:54"><name pos:start="23:5" pos:end="23:25">visit_type_UserDefTwo</name><argument_list pos:start="23:26" pos:end="23:54">(<argument pos:start="23:27" pos:end="23:27"><expr pos:start="23:27" pos:end="23:27"><name pos:start="23:27" pos:end="23:27">v</name></expr></argument>, <argument pos:start="23:30" pos:end="23:33"><expr pos:start="23:30" pos:end="23:33"><name pos:start="23:30" pos:end="23:33">NULL</name></expr></argument>, <argument pos:start="23:36" pos:end="23:39"><expr pos:start="23:36" pos:end="23:39"><operator pos:start="23:36" pos:end="23:36">&amp;</operator><name pos:start="23:37" pos:end="23:39">udp</name></expr></argument>, <argument pos:start="23:42" pos:end="23:53"><expr pos:start="23:42" pos:end="23:53"><operator pos:start="23:42" pos:end="23:42">&amp;</operator><name pos:start="23:43" pos:end="23:53">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:49"><expr pos:start="27:5" pos:end="27:48"><call pos:start="27:5" pos:end="27:48"><name pos:start="27:5" pos:end="27:19">g_assert_cmpstr</name><argument_list pos:start="27:20" pos:end="27:48">(<argument pos:start="27:21" pos:end="27:32"><expr pos:start="27:21" pos:end="27:32"><name pos:start="27:21" pos:end="27:32"><name pos:start="27:21" pos:end="27:23">udp</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:32">string0</name></name></expr></argument>, <argument pos:start="27:35" pos:end="27:36"><expr pos:start="27:35" pos:end="27:36"><operator pos:start="27:35" pos:end="27:36">==</operator></expr></argument>, <argument pos:start="27:39" pos:end="27:47"><expr pos:start="27:39" pos:end="27:47"><literal type="string" pos:start="27:39" pos:end="27:47">"string0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:56"><expr pos:start="29:5" pos:end="29:55"><call pos:start="29:5" pos:end="29:55"><name pos:start="29:5" pos:end="29:19">g_assert_cmpstr</name><argument_list pos:start="29:20" pos:end="29:55">(<argument pos:start="29:21" pos:end="29:39"><expr pos:start="29:21" pos:end="29:39"><name pos:start="29:21" pos:end="29:39"><name pos:start="29:21" pos:end="29:23">udp</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:30">dict1</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:39">string1</name></name></expr></argument>, <argument pos:start="29:42" pos:end="29:43"><expr pos:start="29:42" pos:end="29:43"><operator pos:start="29:42" pos:end="29:43">==</operator></expr></argument>, <argument pos:start="29:46" pos:end="29:54"><expr pos:start="29:46" pos:end="29:54"><literal type="string" pos:start="29:46" pos:end="29:54">"string1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:65"><expr pos:start="31:5" pos:end="31:64"><call pos:start="31:5" pos:end="31:64"><name pos:start="31:5" pos:end="31:19">g_assert_cmpint</name><argument_list pos:start="31:20" pos:end="31:64">(<argument pos:start="31:21" pos:end="31:55"><expr pos:start="31:21" pos:end="31:55"><name pos:start="31:21" pos:end="31:55"><name pos:start="31:21" pos:end="31:23">udp</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:30">dict1</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:37">dict2</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:46">userdef</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:55">integer</name></name></expr></argument>, <argument pos:start="31:58" pos:end="31:59"><expr pos:start="31:58" pos:end="31:59"><operator pos:start="31:58" pos:end="31:59">==</operator></expr></argument>, <argument pos:start="31:62" pos:end="31:63"><expr pos:start="31:62" pos:end="31:63"><literal type="number" pos:start="31:62" pos:end="31:63">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:70"><expr pos:start="33:5" pos:end="33:69"><call pos:start="33:5" pos:end="33:69"><name pos:start="33:5" pos:end="33:19">g_assert_cmpstr</name><argument_list pos:start="33:20" pos:end="33:69">(<argument pos:start="33:21" pos:end="33:54"><expr pos:start="33:21" pos:end="33:54"><name pos:start="33:21" pos:end="33:54"><name pos:start="33:21" pos:end="33:23">udp</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:30">dict1</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:37">dict2</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:46">userdef</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:54">string</name></name></expr></argument>, <argument pos:start="33:57" pos:end="33:58"><expr pos:start="33:57" pos:end="33:58"><operator pos:start="33:57" pos:end="33:58">==</operator></expr></argument>, <argument pos:start="33:61" pos:end="33:68"><expr pos:start="33:61" pos:end="33:68"><literal type="string" pos:start="33:61" pos:end="33:68">"string"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:62"><expr pos:start="35:5" pos:end="35:61"><call pos:start="35:5" pos:end="35:61"><name pos:start="35:5" pos:end="35:19">g_assert_cmpstr</name><argument_list pos:start="35:20" pos:end="35:61">(<argument pos:start="35:21" pos:end="35:45"><expr pos:start="35:21" pos:end="35:45"><name pos:start="35:21" pos:end="35:45"><name pos:start="35:21" pos:end="35:23">udp</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:30">dict1</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:37">dict2</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:45">string</name></name></expr></argument>, <argument pos:start="35:48" pos:end="35:49"><expr pos:start="35:48" pos:end="35:49"><operator pos:start="35:48" pos:end="35:49">==</operator></expr></argument>, <argument pos:start="35:52" pos:end="35:60"><expr pos:start="35:52" pos:end="35:60"><literal type="string" pos:start="35:52" pos:end="35:60">"string2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:45"><expr pos:start="37:5" pos:end="37:44"><call pos:start="37:5" pos:end="37:44"><name pos:start="37:5" pos:end="37:12">g_assert</name><argument_list pos:start="37:13" pos:end="37:44">(<argument pos:start="37:14" pos:end="37:43"><expr pos:start="37:14" pos:end="37:43"><name pos:start="37:14" pos:end="37:34"><name pos:start="37:14" pos:end="37:16">udp</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:23">dict1</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:34">has_dict3</name></name> <operator pos:start="37:36" pos:end="37:37">==</operator> <name pos:start="37:39" pos:end="37:43">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><call pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:24">qapi_free_UserDefTwo</name><argument_list pos:start="41:25" pos:end="41:29">(<argument pos:start="41:26" pos:end="41:28"><expr pos:start="41:26" pos:end="41:28"><name pos:start="41:26" pos:end="41:28">udp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
