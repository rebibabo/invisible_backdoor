<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/561.c" pos:tabs="8"><function pos:start="1:1" pos:end="415:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">arm_cpu_realizefn</name><parameter_list pos:start="1:30" pos:end="1:61">(<parameter pos:start="1:31" pos:end="1:46"><decl pos:start="1:31" pos:end="1:46"><type pos:start="1:31" pos:end="1:46"><name pos:start="1:31" pos:end="1:41">DeviceState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">dev</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:53">Error</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier><modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="415:1">{<block_content pos:start="5:5" pos:end="413:35">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:27">= <expr pos:start="5:20" pos:end="5:27"><call pos:start="5:20" pos:end="5:27"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:27">(<argument pos:start="5:24" pos:end="5:26"><expr pos:start="5:24" pos:end="5:26"><name pos:start="5:24" pos:end="5:26">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">ARMCPU</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">cpu</name> <init pos:start="7:17" pos:end="7:30">= <expr pos:start="7:19" pos:end="7:30"><call pos:start="7:19" pos:end="7:30"><name pos:start="7:19" pos:end="7:25">ARM_CPU</name><argument_list pos:start="7:26" pos:end="7:30">(<argument pos:start="7:27" pos:end="7:29"><expr pos:start="7:27" pos:end="7:29"><name pos:start="7:27" pos:end="7:29">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">ARMCPUClass</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">acc</name> <init pos:start="9:22" pos:end="9:45">= <expr pos:start="9:24" pos:end="9:45"><call pos:start="9:24" pos:end="9:45"><name pos:start="9:24" pos:end="9:40">ARM_CPU_GET_CLASS</name><argument_list pos:start="9:41" pos:end="9:45">(<argument pos:start="9:42" pos:end="9:44"><expr pos:start="9:42" pos:end="9:44"><name pos:start="9:42" pos:end="9:44">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">CPUARMState</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">env</name> <init pos:start="11:22" pos:end="11:32">= <expr pos:start="11:24" pos:end="11:32"><operator pos:start="11:24" pos:end="11:24">&amp;</operator><name pos:start="11:25" pos:end="11:32"><name pos:start="11:25" pos:end="11:27">cpu</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">pagebits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:20">local_err</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:39"><expr pos:start="19:5" pos:end="19:38"><call pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:22">cpu_exec_realizefn</name><argument_list pos:start="19:23" pos:end="19:38">(<argument pos:start="19:24" pos:end="19:25"><expr pos:start="19:24" pos:end="19:25"><name pos:start="19:24" pos:end="19:25">cs</name></expr></argument>, <argument pos:start="19:28" pos:end="19:37"><expr pos:start="19:28" pos:end="19:37"><operator pos:start="19:28" pos:end="19:28">&amp;</operator><name pos:start="19:29" pos:end="19:37">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:17">local_err</name> <operator pos:start="21:19" pos:end="21:20">!=</operator> <name pos:start="21:22" pos:end="21:25">NULL</name></expr>)</condition> <block pos:start="21:28" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <expr_stmt pos:start="23:9" pos:end="23:41"><expr pos:start="23:9" pos:end="23:40"><call pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:23">error_propagate</name><argument_list pos:start="23:24" pos:end="23:40">(<argument pos:start="23:25" pos:end="23:28"><expr pos:start="23:25" pos:end="23:28"><name pos:start="23:25" pos:end="23:28">errp</name></expr></argument>, <argument pos:start="23:31" pos:end="23:39"><expr pos:start="23:31" pos:end="23:39"><name pos:start="23:31" pos:end="23:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:51">/* Some features automatically imply others: */</comment>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:41">(<expr pos:start="33:9" pos:end="33:40"><call pos:start="33:9" pos:end="33:40"><name pos:start="33:9" pos:end="33:19">arm_feature</name><argument_list pos:start="33:20" pos:end="33:40">(<argument pos:start="33:21" pos:end="33:23"><expr pos:start="33:21" pos:end="33:23"><name pos:start="33:21" pos:end="33:23">env</name></expr></argument>, <argument pos:start="33:26" pos:end="33:39"><expr pos:start="33:26" pos:end="33:39"><name pos:start="33:26" pos:end="33:39">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:43" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:43">

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><call pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:19">set_feature</name><argument_list pos:start="35:20" pos:end="35:40">(<argument pos:start="35:21" pos:end="35:23"><expr pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:23">env</name></expr></argument>, <argument pos:start="35:26" pos:end="35:39"><expr pos:start="35:26" pos:end="35:39"><name pos:start="35:26" pos:end="35:39">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><call pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:19">set_feature</name><argument_list pos:start="37:20" pos:end="37:45">(<argument pos:start="37:21" pos:end="37:23"><expr pos:start="37:21" pos:end="37:23"><name pos:start="37:21" pos:end="37:23">env</name></expr></argument>, <argument pos:start="37:26" pos:end="37:44"><expr pos:start="37:26" pos:end="37:44"><name pos:start="37:26" pos:end="37:44">ARM_FEATURE_ARM_DIV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:43"><expr pos:start="39:9" pos:end="39:42"><call pos:start="39:9" pos:end="39:42"><name pos:start="39:9" pos:end="39:19">set_feature</name><argument_list pos:start="39:20" pos:end="39:42">(<argument pos:start="39:21" pos:end="39:23"><expr pos:start="39:21" pos:end="39:23"><name pos:start="39:21" pos:end="39:23">env</name></expr></argument>, <argument pos:start="39:26" pos:end="39:41"><expr pos:start="39:26" pos:end="39:41"><name pos:start="39:26" pos:end="39:41">ARM_FEATURE_LPAE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="71:5"><if pos:start="43:5" pos:end="71:5">if <condition pos:start="43:8" pos:end="43:41">(<expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:19">arm_feature</name><argument_list pos:start="43:20" pos:end="43:40">(<argument pos:start="43:21" pos:end="43:23"><expr pos:start="43:21" pos:end="43:23"><name pos:start="43:21" pos:end="43:23">env</name></expr></argument>, <argument pos:start="43:26" pos:end="43:39"><expr pos:start="43:26" pos:end="43:39"><name pos:start="43:26" pos:end="43:39">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:43" pos:end="71:5">{<block_content pos:start="45:9" pos:end="69:43">

        <expr_stmt pos:start="45:9" pos:end="45:43"><expr pos:start="45:9" pos:end="45:42"><call pos:start="45:9" pos:end="45:42"><name pos:start="45:9" pos:end="45:19">set_feature</name><argument_list pos:start="45:20" pos:end="45:42">(<argument pos:start="45:21" pos:end="45:23"><expr pos:start="45:21" pos:end="45:23"><name pos:start="45:21" pos:end="45:23">env</name></expr></argument>, <argument pos:start="45:26" pos:end="45:41"><expr pos:start="45:26" pos:end="45:41"><name pos:start="45:26" pos:end="45:41">ARM_FEATURE_VAPA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:45"><expr pos:start="47:9" pos:end="47:44"><call pos:start="47:9" pos:end="47:44"><name pos:start="47:9" pos:end="47:19">set_feature</name><argument_list pos:start="47:20" pos:end="47:44">(<argument pos:start="47:21" pos:end="47:23"><expr pos:start="47:21" pos:end="47:23"><name pos:start="47:21" pos:end="47:23">env</name></expr></argument>, <argument pos:start="47:26" pos:end="47:43"><expr pos:start="47:26" pos:end="47:43"><name pos:start="47:26" pos:end="47:43">ARM_FEATURE_THUMB2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:44"><expr pos:start="49:9" pos:end="49:43"><call pos:start="49:9" pos:end="49:43"><name pos:start="49:9" pos:end="49:19">set_feature</name><argument_list pos:start="49:20" pos:end="49:43">(<argument pos:start="49:21" pos:end="49:23"><expr pos:start="49:21" pos:end="49:23"><name pos:start="49:21" pos:end="49:23">env</name></expr></argument>, <argument pos:start="49:26" pos:end="49:42"><expr pos:start="49:26" pos:end="49:42"><name pos:start="49:26" pos:end="49:42">ARM_FEATURE_MPIDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="59:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:45">(<expr pos:start="51:13" pos:end="51:44"><operator pos:start="51:13" pos:end="51:13">!</operator><call pos:start="51:14" pos:end="51:44"><name pos:start="51:14" pos:end="51:24">arm_feature</name><argument_list pos:start="51:25" pos:end="51:44">(<argument pos:start="51:26" pos:end="51:28"><expr pos:start="51:26" pos:end="51:28"><name pos:start="51:26" pos:end="51:28">env</name></expr></argument>, <argument pos:start="51:31" pos:end="51:43"><expr pos:start="51:31" pos:end="51:43"><name pos:start="51:31" pos:end="51:43">ARM_FEATURE_M</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:47" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:46">

            <expr_stmt pos:start="53:13" pos:end="53:46"><expr pos:start="53:13" pos:end="53:45"><call pos:start="53:13" pos:end="53:45"><name pos:start="53:13" pos:end="53:23">set_feature</name><argument_list pos:start="53:24" pos:end="53:45">(<argument pos:start="53:25" pos:end="53:27"><expr pos:start="53:25" pos:end="53:27"><name pos:start="53:25" pos:end="53:27">env</name></expr></argument>, <argument pos:start="53:30" pos:end="53:44"><expr pos:start="53:30" pos:end="53:44"><name pos:start="53:30" pos:end="53:44">ARM_FEATURE_V6K</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="59:9">else <block pos:start="55:16" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:45">

            <expr_stmt pos:start="57:13" pos:end="57:45"><expr pos:start="57:13" pos:end="57:44"><call pos:start="57:13" pos:end="57:44"><name pos:start="57:13" pos:end="57:23">set_feature</name><argument_list pos:start="57:24" pos:end="57:44">(<argument pos:start="57:25" pos:end="57:27"><expr pos:start="57:25" pos:end="57:27"><name pos:start="57:25" pos:end="57:27">env</name></expr></argument>, <argument pos:start="57:30" pos:end="57:43"><expr pos:start="57:30" pos:end="57:43"><name pos:start="57:30" pos:end="57:43">ARM_FEATURE_V6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="63:9" pos:end="67:11">/* Always define VBAR for V7 CPUs even if it doesn't exist in

         * non-EL3 configs. This is needed by some legacy boards.

         */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:43"><expr pos:start="69:9" pos:end="69:42"><call pos:start="69:9" pos:end="69:42"><name pos:start="69:9" pos:end="69:19">set_feature</name><argument_list pos:start="69:20" pos:end="69:42">(<argument pos:start="69:21" pos:end="69:23"><expr pos:start="69:21" pos:end="69:23"><name pos:start="69:21" pos:end="69:23">env</name></expr></argument>, <argument pos:start="69:26" pos:end="69:41"><expr pos:start="69:26" pos:end="69:41"><name pos:start="69:26" pos:end="69:41">ARM_FEATURE_VBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:42">(<expr pos:start="73:9" pos:end="73:41"><call pos:start="73:9" pos:end="73:41"><name pos:start="73:9" pos:end="73:19">arm_feature</name><argument_list pos:start="73:20" pos:end="73:41">(<argument pos:start="73:21" pos:end="73:23"><expr pos:start="73:21" pos:end="73:23"><name pos:start="73:21" pos:end="73:23">env</name></expr></argument>, <argument pos:start="73:26" pos:end="73:40"><expr pos:start="73:26" pos:end="73:40"><name pos:start="73:26" pos:end="73:40">ARM_FEATURE_V6K</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:44" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:43">

        <expr_stmt pos:start="75:9" pos:end="75:41"><expr pos:start="75:9" pos:end="75:40"><call pos:start="75:9" pos:end="75:40"><name pos:start="75:9" pos:end="75:19">set_feature</name><argument_list pos:start="75:20" pos:end="75:40">(<argument pos:start="75:21" pos:end="75:23"><expr pos:start="75:21" pos:end="75:23"><name pos:start="75:21" pos:end="75:23">env</name></expr></argument>, <argument pos:start="75:26" pos:end="75:39"><expr pos:start="75:26" pos:end="75:39"><name pos:start="75:26" pos:end="75:39">ARM_FEATURE_V6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:43"><expr pos:start="77:9" pos:end="77:42"><call pos:start="77:9" pos:end="77:42"><name pos:start="77:9" pos:end="77:19">set_feature</name><argument_list pos:start="77:20" pos:end="77:42">(<argument pos:start="77:21" pos:end="77:23"><expr pos:start="77:21" pos:end="77:23"><name pos:start="77:21" pos:end="77:23">env</name></expr></argument>, <argument pos:start="77:26" pos:end="77:41"><expr pos:start="77:26" pos:end="77:41"><name pos:start="77:26" pos:end="77:41">ARM_FEATURE_MVFR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="81:5" pos:end="91:5"><if pos:start="81:5" pos:end="91:5">if <condition pos:start="81:8" pos:end="81:41">(<expr pos:start="81:9" pos:end="81:40"><call pos:start="81:9" pos:end="81:40"><name pos:start="81:9" pos:end="81:19">arm_feature</name><argument_list pos:start="81:20" pos:end="81:40">(<argument pos:start="81:21" pos:end="81:23"><expr pos:start="81:21" pos:end="81:23"><name pos:start="81:21" pos:end="81:23">env</name></expr></argument>, <argument pos:start="81:26" pos:end="81:39"><expr pos:start="81:26" pos:end="81:39"><name pos:start="81:26" pos:end="81:39">ARM_FEATURE_V6</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:43" pos:end="91:5">{<block_content pos:start="83:9" pos:end="89:9">

        <expr_stmt pos:start="83:9" pos:end="83:41"><expr pos:start="83:9" pos:end="83:40"><call pos:start="83:9" pos:end="83:40"><name pos:start="83:9" pos:end="83:19">set_feature</name><argument_list pos:start="83:20" pos:end="83:40">(<argument pos:start="83:21" pos:end="83:23"><expr pos:start="83:21" pos:end="83:23"><name pos:start="83:21" pos:end="83:23">env</name></expr></argument>, <argument pos:start="83:26" pos:end="83:39"><expr pos:start="83:26" pos:end="83:39"><name pos:start="83:26" pos:end="83:39">ARM_FEATURE_V5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="89:9"><if pos:start="85:9" pos:end="89:9">if <condition pos:start="85:12" pos:end="85:45">(<expr pos:start="85:13" pos:end="85:44"><operator pos:start="85:13" pos:end="85:13">!</operator><call pos:start="85:14" pos:end="85:44"><name pos:start="85:14" pos:end="85:24">arm_feature</name><argument_list pos:start="85:25" pos:end="85:44">(<argument pos:start="85:26" pos:end="85:28"><expr pos:start="85:26" pos:end="85:28"><name pos:start="85:26" pos:end="85:28">env</name></expr></argument>, <argument pos:start="85:31" pos:end="85:43"><expr pos:start="85:31" pos:end="85:43"><name pos:start="85:31" pos:end="85:43">ARM_FEATURE_M</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:47" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:48">

            <expr_stmt pos:start="87:13" pos:end="87:48"><expr pos:start="87:13" pos:end="87:47"><call pos:start="87:13" pos:end="87:47"><name pos:start="87:13" pos:end="87:23">set_feature</name><argument_list pos:start="87:24" pos:end="87:47">(<argument pos:start="87:25" pos:end="87:27"><expr pos:start="87:25" pos:end="87:27"><name pos:start="87:25" pos:end="87:27">env</name></expr></argument>, <argument pos:start="87:30" pos:end="87:46"><expr pos:start="87:30" pos:end="87:46"><name pos:start="87:30" pos:end="87:46">ARM_FEATURE_AUXCR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="93:5" pos:end="97:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:41">(<expr pos:start="93:9" pos:end="93:40"><call pos:start="93:9" pos:end="93:40"><name pos:start="93:9" pos:end="93:19">arm_feature</name><argument_list pos:start="93:20" pos:end="93:40">(<argument pos:start="93:21" pos:end="93:23"><expr pos:start="93:21" pos:end="93:23"><name pos:start="93:21" pos:end="93:23">env</name></expr></argument>, <argument pos:start="93:26" pos:end="93:39"><expr pos:start="93:26" pos:end="93:39"><name pos:start="93:26" pos:end="93:39">ARM_FEATURE_V5</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:43" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:42">

        <expr_stmt pos:start="95:9" pos:end="95:42"><expr pos:start="95:9" pos:end="95:41"><call pos:start="95:9" pos:end="95:41"><name pos:start="95:9" pos:end="95:19">set_feature</name><argument_list pos:start="95:20" pos:end="95:41">(<argument pos:start="95:21" pos:end="95:23"><expr pos:start="95:21" pos:end="95:23"><name pos:start="95:21" pos:end="95:23">env</name></expr></argument>, <argument pos:start="95:26" pos:end="95:40"><expr pos:start="95:26" pos:end="95:40"><name pos:start="95:26" pos:end="95:40">ARM_FEATURE_V4T</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="99:5" pos:end="103:5"><if pos:start="99:5" pos:end="103:5">if <condition pos:start="99:8" pos:end="99:40">(<expr pos:start="99:9" pos:end="99:39"><call pos:start="99:9" pos:end="99:39"><name pos:start="99:9" pos:end="99:19">arm_feature</name><argument_list pos:start="99:20" pos:end="99:39">(<argument pos:start="99:21" pos:end="99:23"><expr pos:start="99:21" pos:end="99:23"><name pos:start="99:21" pos:end="99:23">env</name></expr></argument>, <argument pos:start="99:26" pos:end="99:38"><expr pos:start="99:26" pos:end="99:38"><name pos:start="99:26" pos:end="99:38">ARM_FEATURE_M</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:42" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:48">

        <expr_stmt pos:start="101:9" pos:end="101:48"><expr pos:start="101:9" pos:end="101:47"><call pos:start="101:9" pos:end="101:47"><name pos:start="101:9" pos:end="101:19">set_feature</name><argument_list pos:start="101:20" pos:end="101:47">(<argument pos:start="101:21" pos:end="101:23"><expr pos:start="101:21" pos:end="101:23"><name pos:start="101:21" pos:end="101:23">env</name></expr></argument>, <argument pos:start="101:26" pos:end="101:46"><expr pos:start="101:26" pos:end="101:46"><name pos:start="101:26" pos:end="101:46">ARM_FEATURE_THUMB_DIV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="105:5" pos:end="109:5"><if pos:start="105:5" pos:end="109:5">if <condition pos:start="105:8" pos:end="105:46">(<expr pos:start="105:9" pos:end="105:45"><call pos:start="105:9" pos:end="105:45"><name pos:start="105:9" pos:end="105:19">arm_feature</name><argument_list pos:start="105:20" pos:end="105:45">(<argument pos:start="105:21" pos:end="105:23"><expr pos:start="105:21" pos:end="105:23"><name pos:start="105:21" pos:end="105:23">env</name></expr></argument>, <argument pos:start="105:26" pos:end="105:44"><expr pos:start="105:26" pos:end="105:44"><name pos:start="105:26" pos:end="105:44">ARM_FEATURE_ARM_DIV</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="105:48" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:48">

        <expr_stmt pos:start="107:9" pos:end="107:48"><expr pos:start="107:9" pos:end="107:47"><call pos:start="107:9" pos:end="107:47"><name pos:start="107:9" pos:end="107:19">set_feature</name><argument_list pos:start="107:20" pos:end="107:47">(<argument pos:start="107:21" pos:end="107:23"><expr pos:start="107:21" pos:end="107:23"><name pos:start="107:21" pos:end="107:23">env</name></expr></argument>, <argument pos:start="107:26" pos:end="107:46"><expr pos:start="107:26" pos:end="107:46"><name pos:start="107:26" pos:end="107:46">ARM_FEATURE_THUMB_DIV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="111:5" pos:end="117:5"><if pos:start="111:5" pos:end="117:5">if <condition pos:start="111:8" pos:end="111:43">(<expr pos:start="111:9" pos:end="111:42"><call pos:start="111:9" pos:end="111:42"><name pos:start="111:9" pos:end="111:19">arm_feature</name><argument_list pos:start="111:20" pos:end="111:42">(<argument pos:start="111:21" pos:end="111:23"><expr pos:start="111:21" pos:end="111:23"><name pos:start="111:21" pos:end="111:23">env</name></expr></argument>, <argument pos:start="111:26" pos:end="111:41"><expr pos:start="111:26" pos:end="111:41"><name pos:start="111:26" pos:end="111:41">ARM_FEATURE_VFP4</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:45" pos:end="117:5">{<block_content pos:start="113:9" pos:end="115:47">

        <expr_stmt pos:start="113:9" pos:end="113:43"><expr pos:start="113:9" pos:end="113:42"><call pos:start="113:9" pos:end="113:42"><name pos:start="113:9" pos:end="113:19">set_feature</name><argument_list pos:start="113:20" pos:end="113:42">(<argument pos:start="113:21" pos:end="113:23"><expr pos:start="113:21" pos:end="113:23"><name pos:start="113:21" pos:end="113:23">env</name></expr></argument>, <argument pos:start="113:26" pos:end="113:41"><expr pos:start="113:26" pos:end="113:41"><name pos:start="113:26" pos:end="113:41">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:47"><expr pos:start="115:9" pos:end="115:46"><call pos:start="115:9" pos:end="115:46"><name pos:start="115:9" pos:end="115:19">set_feature</name><argument_list pos:start="115:20" pos:end="115:46">(<argument pos:start="115:21" pos:end="115:23"><expr pos:start="115:21" pos:end="115:23"><name pos:start="115:21" pos:end="115:23">env</name></expr></argument>, <argument pos:start="115:26" pos:end="115:45"><expr pos:start="115:26" pos:end="115:45"><name pos:start="115:26" pos:end="115:45">ARM_FEATURE_VFP_FP16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="119:5" pos:end="123:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:43">(<expr pos:start="119:9" pos:end="119:42"><call pos:start="119:9" pos:end="119:42"><name pos:start="119:9" pos:end="119:19">arm_feature</name><argument_list pos:start="119:20" pos:end="119:42">(<argument pos:start="119:21" pos:end="119:23"><expr pos:start="119:21" pos:end="119:23"><name pos:start="119:21" pos:end="119:23">env</name></expr></argument>, <argument pos:start="119:26" pos:end="119:41"><expr pos:start="119:26" pos:end="119:41"><name pos:start="119:26" pos:end="119:41">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:45" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:42">

        <expr_stmt pos:start="121:9" pos:end="121:42"><expr pos:start="121:9" pos:end="121:41"><call pos:start="121:9" pos:end="121:41"><name pos:start="121:9" pos:end="121:19">set_feature</name><argument_list pos:start="121:20" pos:end="121:41">(<argument pos:start="121:21" pos:end="121:23"><expr pos:start="121:21" pos:end="121:23"><name pos:start="121:21" pos:end="121:23">env</name></expr></argument>, <argument pos:start="121:26" pos:end="121:40"><expr pos:start="121:26" pos:end="121:40"><name pos:start="121:26" pos:end="121:40">ARM_FEATURE_VFP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="125:5" pos:end="131:5"><if pos:start="125:5" pos:end="131:5">if <condition pos:start="125:8" pos:end="125:43">(<expr pos:start="125:9" pos:end="125:42"><call pos:start="125:9" pos:end="125:42"><name pos:start="125:9" pos:end="125:19">arm_feature</name><argument_list pos:start="125:20" pos:end="125:42">(<argument pos:start="125:21" pos:end="125:23"><expr pos:start="125:21" pos:end="125:23"><name pos:start="125:21" pos:end="125:23">env</name></expr></argument>, <argument pos:start="125:26" pos:end="125:41"><expr pos:start="125:26" pos:end="125:41"><name pos:start="125:26" pos:end="125:41">ARM_FEATURE_LPAE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:45" pos:end="131:5">{<block_content pos:start="127:9" pos:end="129:42">

        <expr_stmt pos:start="127:9" pos:end="127:43"><expr pos:start="127:9" pos:end="127:42"><call pos:start="127:9" pos:end="127:42"><name pos:start="127:9" pos:end="127:19">set_feature</name><argument_list pos:start="127:20" pos:end="127:42">(<argument pos:start="127:21" pos:end="127:23"><expr pos:start="127:21" pos:end="127:23"><name pos:start="127:21" pos:end="127:23">env</name></expr></argument>, <argument pos:start="127:26" pos:end="127:41"><expr pos:start="127:26" pos:end="127:41"><name pos:start="127:26" pos:end="127:41">ARM_FEATURE_V7MP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:42"><expr pos:start="129:9" pos:end="129:41"><call pos:start="129:9" pos:end="129:41"><name pos:start="129:9" pos:end="129:19">set_feature</name><argument_list pos:start="129:20" pos:end="129:41">(<argument pos:start="129:21" pos:end="129:23"><expr pos:start="129:21" pos:end="129:23"><name pos:start="129:21" pos:end="129:23">env</name></expr></argument>, <argument pos:start="129:26" pos:end="129:40"><expr pos:start="129:26" pos:end="129:40"><name pos:start="129:26" pos:end="129:40">ARM_FEATURE_PXN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="133:5" pos:end="137:5"><if pos:start="133:5" pos:end="137:5">if <condition pos:start="133:8" pos:end="133:46">(<expr pos:start="133:9" pos:end="133:45"><call pos:start="133:9" pos:end="133:45"><name pos:start="133:9" pos:end="133:19">arm_feature</name><argument_list pos:start="133:20" pos:end="133:45">(<argument pos:start="133:21" pos:end="133:23"><expr pos:start="133:21" pos:end="133:23"><name pos:start="133:21" pos:end="133:23">env</name></expr></argument>, <argument pos:start="133:26" pos:end="133:44"><expr pos:start="133:26" pos:end="133:44"><name pos:start="133:26" pos:end="133:44">ARM_FEATURE_CBAR_RO</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="133:48" pos:end="137:5">{<block_content pos:start="135:9" pos:end="135:43">

        <expr_stmt pos:start="135:9" pos:end="135:43"><expr pos:start="135:9" pos:end="135:42"><call pos:start="135:9" pos:end="135:42"><name pos:start="135:9" pos:end="135:19">set_feature</name><argument_list pos:start="135:20" pos:end="135:42">(<argument pos:start="135:21" pos:end="135:23"><expr pos:start="135:21" pos:end="135:23"><name pos:start="135:21" pos:end="135:23">env</name></expr></argument>, <argument pos:start="135:26" pos:end="135:41"><expr pos:start="135:26" pos:end="135:41"><name pos:start="135:26" pos:end="135:41">ARM_FEATURE_CBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="139:5" pos:end="145:5"><if pos:start="139:5" pos:end="145:5">if <condition pos:start="139:8" pos:end="141:41">(<expr pos:start="139:9" pos:end="141:40"><call pos:start="139:9" pos:end="139:44"><name pos:start="139:9" pos:end="139:19">arm_feature</name><argument_list pos:start="139:20" pos:end="139:44">(<argument pos:start="139:21" pos:end="139:23"><expr pos:start="139:21" pos:end="139:23"><name pos:start="139:21" pos:end="139:23">env</name></expr></argument>, <argument pos:start="139:26" pos:end="139:43"><expr pos:start="139:26" pos:end="139:43"><name pos:start="139:26" pos:end="139:43">ARM_FEATURE_THUMB2</name></expr></argument>)</argument_list></call> <operator pos:start="139:46" pos:end="139:47">&amp;&amp;</operator>

        <operator pos:start="141:9" pos:end="141:9">!</operator><call pos:start="141:10" pos:end="141:40"><name pos:start="141:10" pos:end="141:20">arm_feature</name><argument_list pos:start="141:21" pos:end="141:40">(<argument pos:start="141:22" pos:end="141:24"><expr pos:start="141:22" pos:end="141:24"><name pos:start="141:22" pos:end="141:24">env</name></expr></argument>, <argument pos:start="141:27" pos:end="141:39"><expr pos:start="141:27" pos:end="141:39"><name pos:start="141:27" pos:end="141:39">ARM_FEATURE_M</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="141:43" pos:end="145:5">{<block_content pos:start="143:9" pos:end="143:48">

        <expr_stmt pos:start="143:9" pos:end="143:48"><expr pos:start="143:9" pos:end="143:47"><call pos:start="143:9" pos:end="143:47"><name pos:start="143:9" pos:end="143:19">set_feature</name><argument_list pos:start="143:20" pos:end="143:47">(<argument pos:start="143:21" pos:end="143:23"><expr pos:start="143:21" pos:end="143:23"><name pos:start="143:21" pos:end="143:23">env</name></expr></argument>, <argument pos:start="143:26" pos:end="143:46"><expr pos:start="143:26" pos:end="143:46"><name pos:start="143:26" pos:end="143:46">ARM_FEATURE_THUMB_DSP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="149:5" pos:end="173:5"><if pos:start="149:5" pos:end="163:5">if <condition pos:start="149:8" pos:end="153:43">(<expr pos:start="149:9" pos:end="153:42"><call pos:start="149:9" pos:end="149:40"><name pos:start="149:9" pos:end="149:19">arm_feature</name><argument_list pos:start="149:20" pos:end="149:40">(<argument pos:start="149:21" pos:end="149:23"><expr pos:start="149:21" pos:end="149:23"><name pos:start="149:21" pos:end="149:23">env</name></expr></argument>, <argument pos:start="149:26" pos:end="149:39"><expr pos:start="149:26" pos:end="149:39"><name pos:start="149:26" pos:end="149:39">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call> <operator pos:start="149:42" pos:end="149:43">&amp;&amp;</operator>

        <operator pos:start="151:9" pos:end="151:9">!</operator><call pos:start="151:10" pos:end="151:40"><name pos:start="151:10" pos:end="151:20">arm_feature</name><argument_list pos:start="151:21" pos:end="151:40">(<argument pos:start="151:22" pos:end="151:24"><expr pos:start="151:22" pos:end="151:24"><name pos:start="151:22" pos:end="151:24">env</name></expr></argument>, <argument pos:start="151:27" pos:end="151:39"><expr pos:start="151:27" pos:end="151:39"><name pos:start="151:27" pos:end="151:39">ARM_FEATURE_M</name></expr></argument>)</argument_list></call> <operator pos:start="151:42" pos:end="151:43">&amp;&amp;</operator>

        <operator pos:start="153:9" pos:end="153:9">!</operator><call pos:start="153:10" pos:end="153:42"><name pos:start="153:10" pos:end="153:20">arm_feature</name><argument_list pos:start="153:21" pos:end="153:42">(<argument pos:start="153:22" pos:end="153:24"><expr pos:start="153:22" pos:end="153:24"><name pos:start="153:22" pos:end="153:24">env</name></expr></argument>, <argument pos:start="153:27" pos:end="153:41"><expr pos:start="153:27" pos:end="153:41"><name pos:start="153:27" pos:end="153:41">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="153:45" pos:end="163:5">{<block_content pos:start="161:9" pos:end="161:22">

        <comment type="block" pos:start="155:9" pos:end="159:11">/* v7VMSA drops support for the old ARMv5 tiny pages, so we

         * can use 4K pages.

         */</comment>

        <expr_stmt pos:start="161:9" pos:end="161:22"><expr pos:start="161:9" pos:end="161:21"><name pos:start="161:9" pos:end="161:16">pagebits</name> <operator pos:start="161:18" pos:end="161:18">=</operator> <literal type="number" pos:start="161:20" pos:end="161:21">12</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="163:7" pos:end="173:5">else <block pos:start="163:12" pos:end="173:5">{<block_content pos:start="171:9" pos:end="171:22">

        <comment type="block" pos:start="165:9" pos:end="169:11">/* For CPUs which might have tiny 1K pages, or which have an

         * MPU and might have small region sizes, stick with 1K pages.

         */</comment>

        <expr_stmt pos:start="171:9" pos:end="171:22"><expr pos:start="171:9" pos:end="171:21"><name pos:start="171:9" pos:end="171:16">pagebits</name> <operator pos:start="171:18" pos:end="171:18">=</operator> <literal type="number" pos:start="171:20" pos:end="171:21">10</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="175:5" pos:end="191:5"><if pos:start="175:5" pos:end="191:5">if <condition pos:start="175:8" pos:end="175:50">(<expr pos:start="175:9" pos:end="175:49"><operator pos:start="175:9" pos:end="175:9">!</operator><call pos:start="175:10" pos:end="175:49"><name pos:start="175:10" pos:end="175:39">set_preferred_target_page_bits</name><argument_list pos:start="175:40" pos:end="175:49">(<argument pos:start="175:41" pos:end="175:48"><expr pos:start="175:41" pos:end="175:48"><name pos:start="175:41" pos:end="175:48">pagebits</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="175:52" pos:end="191:5">{<block_content pos:start="185:9" pos:end="189:15">

        <comment type="block" pos:start="177:9" pos:end="183:11">/* This can only ever happen for hotplugging a CPU, or if

         * the board code incorrectly creates a CPU which it has

         * promised via minimum_page_size that it will not.

         */</comment>

        <expr_stmt pos:start="185:9" pos:end="187:38"><expr pos:start="185:9" pos:end="187:37"><call pos:start="185:9" pos:end="187:37"><name pos:start="185:9" pos:end="185:18">error_setg</name><argument_list pos:start="185:19" pos:end="187:37">(<argument pos:start="185:20" pos:end="185:23"><expr pos:start="185:20" pos:end="185:23"><name pos:start="185:20" pos:end="185:23">errp</name></expr></argument>, <argument pos:start="185:26" pos:end="187:36"><expr pos:start="185:26" pos:end="187:36"><literal type="string" pos:start="185:26" pos:end="185:74">"This CPU requires a smaller page size than the "</literal>

                   <literal type="string" pos:start="187:20" pos:end="187:36">"system is using"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="189:9" pos:end="189:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="195:5" pos:end="203:7">/* This cpu-id-to-MPIDR affinity is used only for TCG; KVM will override it.

     * We don't support setting cluster ID ([16..23]) (known as Aff2

     * in later ARM ARM versions), or any of the higher affinity level fields,

     * so these bits always RAZ.

     */</comment>

    <if_stmt pos:start="205:5" pos:end="213:5"><if pos:start="205:5" pos:end="213:5">if <condition pos:start="205:8" pos:end="205:51">(<expr pos:start="205:9" pos:end="205:50"><name pos:start="205:9" pos:end="205:24"><name pos:start="205:9" pos:end="205:11">cpu</name><operator pos:start="205:12" pos:end="205:13">-&gt;</operator><name pos:start="205:14" pos:end="205:24">mp_affinity</name></name> <operator pos:start="205:26" pos:end="205:27">==</operator> <name pos:start="205:29" pos:end="205:50">ARM64_AFFINITY_INVALID</name></expr>)</condition> <block pos:start="205:53" pos:end="213:5">{<block_content pos:start="207:9" pos:end="211:59">

        <decl_stmt pos:start="207:9" pos:end="207:69"><decl pos:start="207:9" pos:end="207:68"><type pos:start="207:9" pos:end="207:16"><name pos:start="207:9" pos:end="207:16">uint32_t</name></type> <name pos:start="207:18" pos:end="207:21">Aff1</name> <init pos:start="207:23" pos:end="207:68">= <expr pos:start="207:25" pos:end="207:68"><name pos:start="207:25" pos:end="207:37"><name pos:start="207:25" pos:end="207:26">cs</name><operator pos:start="207:27" pos:end="207:28">-&gt;</operator><name pos:start="207:29" pos:end="207:37">cpu_index</name></name> <operator pos:start="207:39" pos:end="207:39">/</operator> <name pos:start="207:41" pos:end="207:68">ARM_DEFAULT_CPUS_PER_CLUSTER</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="209:9" pos:end="209:69"><decl pos:start="209:9" pos:end="209:68"><type pos:start="209:9" pos:end="209:16"><name pos:start="209:9" pos:end="209:16">uint32_t</name></type> <name pos:start="209:18" pos:end="209:21">Aff0</name> <init pos:start="209:23" pos:end="209:68">= <expr pos:start="209:25" pos:end="209:68"><name pos:start="209:25" pos:end="209:37"><name pos:start="209:25" pos:end="209:26">cs</name><operator pos:start="209:27" pos:end="209:28">-&gt;</operator><name pos:start="209:29" pos:end="209:37">cpu_index</name></name> <operator pos:start="209:39" pos:end="209:39">%</operator> <name pos:start="209:41" pos:end="209:68">ARM_DEFAULT_CPUS_PER_CLUSTER</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:59"><expr pos:start="211:9" pos:end="211:58"><name pos:start="211:9" pos:end="211:24"><name pos:start="211:9" pos:end="211:11">cpu</name><operator pos:start="211:12" pos:end="211:13">-&gt;</operator><name pos:start="211:14" pos:end="211:24">mp_affinity</name></name> <operator pos:start="211:26" pos:end="211:26">=</operator> <operator pos:start="211:28" pos:end="211:28">(</operator><name pos:start="211:29" pos:end="211:32">Aff1</name> <operator pos:start="211:34" pos:end="211:35">&lt;&lt;</operator> <name pos:start="211:37" pos:end="211:50">ARM_AFF1_SHIFT</name><operator pos:start="211:51" pos:end="211:51">)</operator> <operator pos:start="211:53" pos:end="211:53">|</operator> <name pos:start="211:55" pos:end="211:58">Aff0</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="217:5" pos:end="221:5"><if pos:start="217:5" pos:end="221:5">if <condition pos:start="217:8" pos:end="217:26">(<expr pos:start="217:9" pos:end="217:25"><name pos:start="217:9" pos:end="217:25"><name pos:start="217:9" pos:end="217:11">cpu</name><operator pos:start="217:12" pos:end="217:13">-&gt;</operator><name pos:start="217:14" pos:end="217:25">reset_hivecs</name></name></expr>)</condition> <block pos:start="217:28" pos:end="221:5">{<block_content pos:start="219:13" pos:end="219:42">

            <expr_stmt pos:start="219:13" pos:end="219:42"><expr pos:start="219:13" pos:end="219:41"><name pos:start="219:13" pos:end="219:28"><name pos:start="219:13" pos:end="219:15">cpu</name><operator pos:start="219:16" pos:end="219:17">-&gt;</operator><name pos:start="219:18" pos:end="219:28">reset_sctlr</name></name> <operator pos:start="219:30" pos:end="219:31">|=</operator> <operator pos:start="219:33" pos:end="219:33">(</operator><literal type="number" pos:start="219:34" pos:end="219:34">1</literal> <operator pos:start="219:36" pos:end="219:37">&lt;&lt;</operator> <literal type="number" pos:start="219:39" pos:end="219:40">13</literal><operator pos:start="219:41" pos:end="219:41">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="225:5" pos:end="237:5"><if pos:start="225:5" pos:end="237:5">if <condition pos:start="225:8" pos:end="225:20">(<expr pos:start="225:9" pos:end="225:19"><name pos:start="225:9" pos:end="225:19"><name pos:start="225:9" pos:end="225:11">cpu</name><operator pos:start="225:12" pos:end="225:13">-&gt;</operator><name pos:start="225:14" pos:end="225:19">cfgend</name></name></expr>)</condition> <block pos:start="225:22" pos:end="237:5">{<block_content pos:start="227:9" pos:end="235:9">

        <if_stmt pos:start="227:9" pos:end="235:9"><if pos:start="227:9" pos:end="231:9">if <condition pos:start="227:12" pos:end="227:51">(<expr pos:start="227:13" pos:end="227:50"><call pos:start="227:13" pos:end="227:50"><name pos:start="227:13" pos:end="227:23">arm_feature</name><argument_list pos:start="227:24" pos:end="227:50">(<argument pos:start="227:25" pos:end="227:33"><expr pos:start="227:25" pos:end="227:33"><operator pos:start="227:25" pos:end="227:25">&amp;</operator><name pos:start="227:26" pos:end="227:33"><name pos:start="227:26" pos:end="227:28">cpu</name><operator pos:start="227:29" pos:end="227:30">-&gt;</operator><name pos:start="227:31" pos:end="227:33">env</name></name></expr></argument>, <argument pos:start="227:36" pos:end="227:49"><expr pos:start="227:36" pos:end="227:49"><name pos:start="227:36" pos:end="227:49">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="227:53" pos:end="231:9">{<block_content pos:start="229:13" pos:end="229:41">

            <expr_stmt pos:start="229:13" pos:end="229:41"><expr pos:start="229:13" pos:end="229:40"><name pos:start="229:13" pos:end="229:28"><name pos:start="229:13" pos:end="229:15">cpu</name><operator pos:start="229:16" pos:end="229:17">-&gt;</operator><name pos:start="229:18" pos:end="229:28">reset_sctlr</name></name> <operator pos:start="229:30" pos:end="229:31">|=</operator> <name pos:start="229:33" pos:end="229:40">SCTLR_EE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="231:11" pos:end="235:9">else <block pos:start="231:16" pos:end="235:9">{<block_content pos:start="233:13" pos:end="233:40">

            <expr_stmt pos:start="233:13" pos:end="233:40"><expr pos:start="233:13" pos:end="233:39"><name pos:start="233:13" pos:end="233:28"><name pos:start="233:13" pos:end="233:15">cpu</name><operator pos:start="233:16" pos:end="233:17">-&gt;</operator><name pos:start="233:18" pos:end="233:28">reset_sctlr</name></name> <operator pos:start="233:30" pos:end="233:31">|=</operator> <name pos:start="233:33" pos:end="233:39">SCTLR_B</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="241:5" pos:end="263:5"><if pos:start="241:5" pos:end="263:5">if <condition pos:start="241:8" pos:end="241:22">(<expr pos:start="241:9" pos:end="241:21"><operator pos:start="241:9" pos:end="241:9">!</operator><name pos:start="241:10" pos:end="241:21"><name pos:start="241:10" pos:end="241:12">cpu</name><operator pos:start="241:13" pos:end="241:14">-&gt;</operator><name pos:start="241:15" pos:end="241:21">has_el3</name></name></expr>)</condition> <block pos:start="241:24" pos:end="263:5">{<block_content pos:start="249:9" pos:end="261:36">

        <comment type="block" pos:start="243:9" pos:end="247:11">/* If the has_el3 CPU property is disabled then we need to disable the

         * feature.

         */</comment>

        <expr_stmt pos:start="249:9" pos:end="249:44"><expr pos:start="249:9" pos:end="249:43"><call pos:start="249:9" pos:end="249:43"><name pos:start="249:9" pos:end="249:21">unset_feature</name><argument_list pos:start="249:22" pos:end="249:43">(<argument pos:start="249:23" pos:end="249:25"><expr pos:start="249:23" pos:end="249:25"><name pos:start="249:23" pos:end="249:25">env</name></expr></argument>, <argument pos:start="249:28" pos:end="249:42"><expr pos:start="249:28" pos:end="249:42"><name pos:start="249:28" pos:end="249:42">ARM_FEATURE_EL3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="253:9" pos:end="257:11">/* Disable the security extension feature bits in the processor feature

         * registers as well. These are id_pfr1[7:4] and id_aa64pfr0[15:12].

         */</comment>

        <expr_stmt pos:start="259:9" pos:end="259:30"><expr pos:start="259:9" pos:end="259:29"><name pos:start="259:9" pos:end="259:20"><name pos:start="259:9" pos:end="259:11">cpu</name><operator pos:start="259:12" pos:end="259:13">-&gt;</operator><name pos:start="259:14" pos:end="259:20">id_pfr1</name></name> <operator pos:start="259:22" pos:end="259:23">&amp;=</operator> <operator pos:start="259:25" pos:end="259:25">~</operator><literal type="number" pos:start="259:26" pos:end="259:29">0xf0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="261:9" pos:end="261:36"><expr pos:start="261:9" pos:end="261:35"><name pos:start="261:9" pos:end="261:24"><name pos:start="261:9" pos:end="261:11">cpu</name><operator pos:start="261:12" pos:end="261:13">-&gt;</operator><name pos:start="261:14" pos:end="261:24">id_aa64pfr0</name></name> <operator pos:start="261:26" pos:end="261:27">&amp;=</operator> <operator pos:start="261:29" pos:end="261:29">~</operator><literal type="number" pos:start="261:30" pos:end="261:35">0xf000</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="267:5" pos:end="271:5"><if pos:start="267:5" pos:end="271:5">if <condition pos:start="267:8" pos:end="267:22">(<expr pos:start="267:9" pos:end="267:21"><operator pos:start="267:9" pos:end="267:9">!</operator><name pos:start="267:10" pos:end="267:21"><name pos:start="267:10" pos:end="267:12">cpu</name><operator pos:start="267:13" pos:end="267:14">-&gt;</operator><name pos:start="267:15" pos:end="267:21">has_el2</name></name></expr>)</condition> <block pos:start="267:24" pos:end="271:5">{<block_content pos:start="269:9" pos:end="269:44">

        <expr_stmt pos:start="269:9" pos:end="269:44"><expr pos:start="269:9" pos:end="269:43"><call pos:start="269:9" pos:end="269:43"><name pos:start="269:9" pos:end="269:21">unset_feature</name><argument_list pos:start="269:22" pos:end="269:43">(<argument pos:start="269:23" pos:end="269:25"><expr pos:start="269:23" pos:end="269:25"><name pos:start="269:23" pos:end="269:25">env</name></expr></argument>, <argument pos:start="269:28" pos:end="269:42"><expr pos:start="269:28" pos:end="269:42"><name pos:start="269:28" pos:end="269:42">ARM_FEATURE_EL2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="275:5" pos:end="281:5"><if pos:start="275:5" pos:end="281:5">if <condition pos:start="275:8" pos:end="275:40">(<expr pos:start="275:9" pos:end="275:39"><operator pos:start="275:9" pos:end="275:9">!</operator><name pos:start="275:10" pos:end="275:21"><name pos:start="275:10" pos:end="275:12">cpu</name><operator pos:start="275:13" pos:end="275:14">-&gt;</operator><name pos:start="275:15" pos:end="275:21">has_pmu</name></name> <operator pos:start="275:23" pos:end="275:24">||</operator> <operator pos:start="275:26" pos:end="275:26">!</operator><call pos:start="275:27" pos:end="275:39"><name pos:start="275:27" pos:end="275:37">kvm_enabled</name><argument_list pos:start="275:38" pos:end="275:39">()</argument_list></call></expr>)</condition> <block pos:start="275:42" pos:end="281:5">{<block_content pos:start="277:9" pos:end="279:44">

        <expr_stmt pos:start="277:9" pos:end="277:29"><expr pos:start="277:9" pos:end="277:28"><name pos:start="277:9" pos:end="277:20"><name pos:start="277:9" pos:end="277:11">cpu</name><operator pos:start="277:12" pos:end="277:13">-&gt;</operator><name pos:start="277:14" pos:end="277:20">has_pmu</name></name> <operator pos:start="277:22" pos:end="277:22">=</operator> <name pos:start="277:24" pos:end="277:28">false</name></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:44"><expr pos:start="279:9" pos:end="279:43"><call pos:start="279:9" pos:end="279:43"><name pos:start="279:9" pos:end="279:21">unset_feature</name><argument_list pos:start="279:22" pos:end="279:43">(<argument pos:start="279:23" pos:end="279:25"><expr pos:start="279:23" pos:end="279:25"><name pos:start="279:23" pos:end="279:25">env</name></expr></argument>, <argument pos:start="279:28" pos:end="279:42"><expr pos:start="279:28" pos:end="279:42"><name pos:start="279:28" pos:end="279:42">ARM_FEATURE_PMU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="285:5" pos:end="299:5"><if pos:start="285:5" pos:end="299:5">if <condition pos:start="285:8" pos:end="285:43">(<expr pos:start="285:9" pos:end="285:42"><operator pos:start="285:9" pos:end="285:9">!</operator><call pos:start="285:10" pos:end="285:42"><name pos:start="285:10" pos:end="285:20">arm_feature</name><argument_list pos:start="285:21" pos:end="285:42">(<argument pos:start="285:22" pos:end="285:24"><expr pos:start="285:22" pos:end="285:24"><name pos:start="285:22" pos:end="285:24">env</name></expr></argument>, <argument pos:start="285:27" pos:end="285:41"><expr pos:start="285:27" pos:end="285:41"><name pos:start="285:27" pos:end="285:41">ARM_FEATURE_EL2</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="285:45" pos:end="299:5">{<block_content pos:start="295:9" pos:end="297:32">

        <comment type="block" pos:start="287:9" pos:end="293:11">/* Disable the hypervisor feature bits in the processor feature

         * registers if we don't have EL2. These are id_pfr1[15:12] and

         * id_aa64pfr0_el1[11:8].

         */</comment>

        <expr_stmt pos:start="295:9" pos:end="295:35"><expr pos:start="295:9" pos:end="295:34"><name pos:start="295:9" pos:end="295:24"><name pos:start="295:9" pos:end="295:11">cpu</name><operator pos:start="295:12" pos:end="295:13">-&gt;</operator><name pos:start="295:14" pos:end="295:24">id_aa64pfr0</name></name> <operator pos:start="295:26" pos:end="295:27">&amp;=</operator> <operator pos:start="295:29" pos:end="295:29">~</operator><literal type="number" pos:start="295:30" pos:end="295:34">0xf00</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:32"><expr pos:start="297:9" pos:end="297:31"><name pos:start="297:9" pos:end="297:20"><name pos:start="297:9" pos:end="297:11">cpu</name><operator pos:start="297:12" pos:end="297:13">-&gt;</operator><name pos:start="297:14" pos:end="297:20">id_pfr1</name></name> <operator pos:start="297:22" pos:end="297:23">&amp;=</operator> <operator pos:start="297:25" pos:end="297:25">~</operator><literal type="number" pos:start="297:26" pos:end="297:31">0xf000</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="303:5" pos:end="307:5"><if pos:start="303:5" pos:end="307:5">if <condition pos:start="303:8" pos:end="303:22">(<expr pos:start="303:9" pos:end="303:21"><operator pos:start="303:9" pos:end="303:9">!</operator><name pos:start="303:10" pos:end="303:21"><name pos:start="303:10" pos:end="303:12">cpu</name><operator pos:start="303:13" pos:end="303:14">-&gt;</operator><name pos:start="303:15" pos:end="303:21">has_mpu</name></name></expr>)</condition> <block pos:start="303:24" pos:end="307:5">{<block_content pos:start="305:9" pos:end="305:44">

        <expr_stmt pos:start="305:9" pos:end="305:44"><expr pos:start="305:9" pos:end="305:43"><call pos:start="305:9" pos:end="305:43"><name pos:start="305:9" pos:end="305:21">unset_feature</name><argument_list pos:start="305:22" pos:end="305:43">(<argument pos:start="305:23" pos:end="305:25"><expr pos:start="305:23" pos:end="305:25"><name pos:start="305:23" pos:end="305:25">env</name></expr></argument>, <argument pos:start="305:28" pos:end="305:42"><expr pos:start="305:28" pos:end="305:42"><name pos:start="305:28" pos:end="305:42">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="311:5" pos:end="339:5"><if pos:start="311:5" pos:end="339:5">if <condition pos:start="311:8" pos:end="313:41">(<expr pos:start="311:9" pos:end="313:40"><call pos:start="311:9" pos:end="311:41"><name pos:start="311:9" pos:end="311:19">arm_feature</name><argument_list pos:start="311:20" pos:end="311:41">(<argument pos:start="311:21" pos:end="311:23"><expr pos:start="311:21" pos:end="311:23"><name pos:start="311:21" pos:end="311:23">env</name></expr></argument>, <argument pos:start="311:26" pos:end="311:40"><expr pos:start="311:26" pos:end="311:40"><name pos:start="311:26" pos:end="311:40">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call> <operator pos:start="311:43" pos:end="311:44">&amp;&amp;</operator>

        <call pos:start="313:9" pos:end="313:40"><name pos:start="313:9" pos:end="313:19">arm_feature</name><argument_list pos:start="313:20" pos:end="313:40">(<argument pos:start="313:21" pos:end="313:23"><expr pos:start="313:21" pos:end="313:23"><name pos:start="313:21" pos:end="313:23">env</name></expr></argument>, <argument pos:start="313:26" pos:end="313:39"><expr pos:start="313:26" pos:end="313:39"><name pos:start="313:26" pos:end="313:39">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="313:43" pos:end="339:5">{<block_content pos:start="315:9" pos:end="337:9">

        <decl_stmt pos:start="315:9" pos:end="315:42"><decl pos:start="315:9" pos:end="315:41"><type pos:start="315:9" pos:end="315:16"><name pos:start="315:9" pos:end="315:16">uint32_t</name></type> <name pos:start="315:18" pos:end="315:19">nr</name> <init pos:start="315:21" pos:end="315:41">= <expr pos:start="315:23" pos:end="315:41"><name pos:start="315:23" pos:end="315:41"><name pos:start="315:23" pos:end="315:25">cpu</name><operator pos:start="315:26" pos:end="315:27">-&gt;</operator><name pos:start="315:28" pos:end="315:41">pmsav7_dregion</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="319:9" pos:end="325:9"><if pos:start="319:9" pos:end="325:9">if <condition pos:start="319:12" pos:end="319:22">(<expr pos:start="319:13" pos:end="319:21"><name pos:start="319:13" pos:end="319:14">nr</name> <operator pos:start="319:16" pos:end="319:16">&gt;</operator> <literal type="number" pos:start="319:18" pos:end="319:21">0xff</literal></expr>)</condition> <block pos:start="319:24" pos:end="325:9">{<block_content pos:start="321:13" pos:end="323:19">

            <expr_stmt pos:start="321:13" pos:end="321:73"><expr pos:start="321:13" pos:end="321:72"><call pos:start="321:13" pos:end="321:72"><name pos:start="321:13" pos:end="321:22">error_setg</name><argument_list pos:start="321:23" pos:end="321:72">(<argument pos:start="321:24" pos:end="321:27"><expr pos:start="321:24" pos:end="321:27"><name pos:start="321:24" pos:end="321:27">errp</name></expr></argument>, <argument pos:start="321:30" pos:end="321:67"><expr pos:start="321:30" pos:end="321:67"><literal type="string" pos:start="321:30" pos:end="321:60">"PMSAv7 MPU #regions invalid %"</literal> <name pos:start="321:62" pos:end="321:67">PRIu32</name></expr></argument>, <argument pos:start="321:70" pos:end="321:71"><expr pos:start="321:70" pos:end="321:71"><name pos:start="321:70" pos:end="321:71">nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="323:13" pos:end="323:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="329:9" pos:end="337:9"><if pos:start="329:9" pos:end="337:9">if <condition pos:start="329:12" pos:end="329:15">(<expr pos:start="329:13" pos:end="329:14"><name pos:start="329:13" pos:end="329:14">nr</name></expr>)</condition> <block pos:start="329:17" pos:end="337:9">{<block_content pos:start="331:13" pos:end="335:53">

            <expr_stmt pos:start="331:13" pos:end="331:53"><expr pos:start="331:13" pos:end="331:52"><name pos:start="331:13" pos:end="331:29"><name pos:start="331:13" pos:end="331:15">env</name><operator pos:start="331:16" pos:end="331:17">-&gt;</operator><name pos:start="331:18" pos:end="331:23">pmsav7</name><operator pos:start="331:24" pos:end="331:24">.</operator><name pos:start="331:25" pos:end="331:29">drbar</name></name> <operator pos:start="331:31" pos:end="331:31">=</operator> <call pos:start="331:33" pos:end="331:52"><name pos:start="331:33" pos:end="331:38">g_new0</name><argument_list pos:start="331:39" pos:end="331:52">(<argument pos:start="331:40" pos:end="331:47"><expr pos:start="331:40" pos:end="331:47"><name pos:start="331:40" pos:end="331:47">uint32_t</name></expr></argument>, <argument pos:start="331:50" pos:end="331:51"><expr pos:start="331:50" pos:end="331:51"><name pos:start="331:50" pos:end="331:51">nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:52"><expr pos:start="333:13" pos:end="333:51"><name pos:start="333:13" pos:end="333:28"><name pos:start="333:13" pos:end="333:15">env</name><operator pos:start="333:16" pos:end="333:17">-&gt;</operator><name pos:start="333:18" pos:end="333:23">pmsav7</name><operator pos:start="333:24" pos:end="333:24">.</operator><name pos:start="333:25" pos:end="333:28">drsr</name></name> <operator pos:start="333:30" pos:end="333:30">=</operator> <call pos:start="333:32" pos:end="333:51"><name pos:start="333:32" pos:end="333:37">g_new0</name><argument_list pos:start="333:38" pos:end="333:51">(<argument pos:start="333:39" pos:end="333:46"><expr pos:start="333:39" pos:end="333:46"><name pos:start="333:39" pos:end="333:46">uint32_t</name></expr></argument>, <argument pos:start="333:49" pos:end="333:50"><expr pos:start="333:49" pos:end="333:50"><name pos:start="333:49" pos:end="333:50">nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="335:13" pos:end="335:53"><expr pos:start="335:13" pos:end="335:52"><name pos:start="335:13" pos:end="335:29"><name pos:start="335:13" pos:end="335:15">env</name><operator pos:start="335:16" pos:end="335:17">-&gt;</operator><name pos:start="335:18" pos:end="335:23">pmsav7</name><operator pos:start="335:24" pos:end="335:24">.</operator><name pos:start="335:25" pos:end="335:29">dracr</name></name> <operator pos:start="335:31" pos:end="335:31">=</operator> <call pos:start="335:33" pos:end="335:52"><name pos:start="335:33" pos:end="335:38">g_new0</name><argument_list pos:start="335:39" pos:end="335:52">(<argument pos:start="335:40" pos:end="335:47"><expr pos:start="335:40" pos:end="335:47"><name pos:start="335:40" pos:end="335:47">uint32_t</name></expr></argument>, <argument pos:start="335:50" pos:end="335:51"><expr pos:start="335:50" pos:end="335:51"><name pos:start="335:50" pos:end="335:51">nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="343:5" pos:end="347:5"><if pos:start="343:5" pos:end="347:5">if <condition pos:start="343:8" pos:end="343:42">(<expr pos:start="343:9" pos:end="343:41"><call pos:start="343:9" pos:end="343:41"><name pos:start="343:9" pos:end="343:19">arm_feature</name><argument_list pos:start="343:20" pos:end="343:41">(<argument pos:start="343:21" pos:end="343:23"><expr pos:start="343:21" pos:end="343:23"><name pos:start="343:21" pos:end="343:23">env</name></expr></argument>, <argument pos:start="343:26" pos:end="343:40"><expr pos:start="343:26" pos:end="343:40"><name pos:start="343:26" pos:end="343:40">ARM_FEATURE_EL3</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="343:44" pos:end="347:5">{<block_content pos:start="345:9" pos:end="345:43">

        <expr_stmt pos:start="345:9" pos:end="345:43"><expr pos:start="345:9" pos:end="345:42"><call pos:start="345:9" pos:end="345:42"><name pos:start="345:9" pos:end="345:19">set_feature</name><argument_list pos:start="345:20" pos:end="345:42">(<argument pos:start="345:21" pos:end="345:23"><expr pos:start="345:21" pos:end="345:23"><name pos:start="345:21" pos:end="345:23">env</name></expr></argument>, <argument pos:start="345:26" pos:end="345:41"><expr pos:start="345:26" pos:end="345:41"><name pos:start="345:26" pos:end="345:41">ARM_FEATURE_VBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="351:5" pos:end="351:39"><expr pos:start="351:5" pos:end="351:38"><call pos:start="351:5" pos:end="351:38"><name pos:start="351:5" pos:end="351:33">register_cp_regs_for_features</name><argument_list pos:start="351:34" pos:end="351:38">(<argument pos:start="351:35" pos:end="351:37"><expr pos:start="351:35" pos:end="351:37"><name pos:start="351:35" pos:end="351:37">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="353:5" pos:end="353:48"><expr pos:start="353:5" pos:end="353:47"><call pos:start="353:5" pos:end="353:47"><name pos:start="353:5" pos:end="353:42">arm_cpu_register_gdb_regs_for_features</name><argument_list pos:start="353:43" pos:end="353:47">(<argument pos:start="353:44" pos:end="353:46"><expr pos:start="353:44" pos:end="353:46"><name pos:start="353:44" pos:end="353:46">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="357:5" pos:end="362:0"><expr pos:start="357:5" pos:end="357:24"><call pos:start="357:5" pos:end="357:24"><name pos:start="357:5" pos:end="357:19">init_cpreg_list</name><argument_list pos:start="357:20" pos:end="357:24">(<argument pos:start="357:21" pos:end="357:23"><expr pos:start="357:21" pos:end="357:23"><name pos:start="357:21" pos:end="357:23">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifndef pos:start="361:1" pos:end="361:24">#<cpp:directive pos:start="361:2" pos:end="361:7">ifndef</cpp:directive> <name pos:start="361:9" pos:end="361:24">CONFIG_USER_ONLY</name></cpp:ifndef>

    <if_stmt pos:start="363:5" pos:end="371:5"><if pos:start="363:5" pos:end="367:5">if <condition pos:start="363:8" pos:end="363:21">(<expr pos:start="363:9" pos:end="363:20"><name pos:start="363:9" pos:end="363:20"><name pos:start="363:9" pos:end="363:11">cpu</name><operator pos:start="363:12" pos:end="363:13">-&gt;</operator><name pos:start="363:14" pos:end="363:20">has_el3</name></name></expr>)</condition> <block pos:start="363:23" pos:end="367:5">{<block_content pos:start="365:9" pos:end="365:25">

        <expr_stmt pos:start="365:9" pos:end="365:25"><expr pos:start="365:9" pos:end="365:24"><name pos:start="365:9" pos:end="365:20"><name pos:start="365:9" pos:end="365:10">cs</name><operator pos:start="365:11" pos:end="365:12">-&gt;</operator><name pos:start="365:13" pos:end="365:20">num_ases</name></name> <operator pos:start="365:22" pos:end="365:22">=</operator> <literal type="number" pos:start="365:24" pos:end="365:24">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="367:7" pos:end="371:5">else <block pos:start="367:12" pos:end="371:5">{<block_content pos:start="369:9" pos:end="369:25">

        <expr_stmt pos:start="369:9" pos:end="369:25"><expr pos:start="369:9" pos:end="369:24"><name pos:start="369:9" pos:end="369:20"><name pos:start="369:9" pos:end="369:10">cs</name><operator pos:start="369:11" pos:end="369:12">-&gt;</operator><name pos:start="369:13" pos:end="369:20">num_ases</name></name> <operator pos:start="369:22" pos:end="369:22">=</operator> <literal type="number" pos:start="369:24" pos:end="369:24">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="375:5" pos:end="393:5"><if pos:start="375:5" pos:end="393:5">if <condition pos:start="375:8" pos:end="375:21">(<expr pos:start="375:9" pos:end="375:20"><name pos:start="375:9" pos:end="375:20"><name pos:start="375:9" pos:end="375:11">cpu</name><operator pos:start="375:12" pos:end="375:13">-&gt;</operator><name pos:start="375:14" pos:end="375:20">has_el3</name></name></expr>)</condition> <block pos:start="375:23" pos:end="393:5">{<block_content pos:start="377:9" pos:end="391:51">

        <decl_stmt pos:start="377:9" pos:end="377:25"><decl pos:start="377:9" pos:end="377:24"><type pos:start="377:9" pos:end="377:22"><name pos:start="377:9" pos:end="377:20">AddressSpace</name> <modifier pos:start="377:22" pos:end="377:22">*</modifier></type><name pos:start="377:23" pos:end="377:24">as</name></decl>;</decl_stmt>



        <if_stmt pos:start="381:9" pos:end="385:9"><if pos:start="381:9" pos:end="385:9">if <condition pos:start="381:12" pos:end="381:32">(<expr pos:start="381:13" pos:end="381:31"><operator pos:start="381:13" pos:end="381:13">!</operator><name pos:start="381:14" pos:end="381:31"><name pos:start="381:14" pos:end="381:16">cpu</name><operator pos:start="381:17" pos:end="381:18">-&gt;</operator><name pos:start="381:19" pos:end="381:31">secure_memory</name></name></expr>)</condition> <block pos:start="381:34" pos:end="385:9">{<block_content pos:start="383:13" pos:end="383:44">

            <expr_stmt pos:start="383:13" pos:end="383:44"><expr pos:start="383:13" pos:end="383:43"><name pos:start="383:13" pos:end="383:30"><name pos:start="383:13" pos:end="383:15">cpu</name><operator pos:start="383:16" pos:end="383:17">-&gt;</operator><name pos:start="383:18" pos:end="383:30">secure_memory</name></name> <operator pos:start="383:32" pos:end="383:32">=</operator> <name pos:start="383:34" pos:end="383:43"><name pos:start="383:34" pos:end="383:35">cs</name><operator pos:start="383:36" pos:end="383:37">-&gt;</operator><name pos:start="383:38" pos:end="383:43">memory</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="387:9" pos:end="389:63"><expr pos:start="387:9" pos:end="389:62"><name pos:start="387:9" pos:end="387:10">as</name> <operator pos:start="387:12" pos:end="387:12">=</operator> <call pos:start="387:14" pos:end="389:62"><name pos:start="387:14" pos:end="387:41">address_space_init_shareable</name><argument_list pos:start="387:42" pos:end="389:62">(<argument pos:start="387:43" pos:end="387:60"><expr pos:start="387:43" pos:end="387:60"><name pos:start="387:43" pos:end="387:60"><name pos:start="387:43" pos:end="387:45">cpu</name><operator pos:start="387:46" pos:end="387:47">-&gt;</operator><name pos:start="387:48" pos:end="387:60">secure_memory</name></name></expr></argument>,

                                          <argument pos:start="389:43" pos:end="389:61"><expr pos:start="389:43" pos:end="389:61"><literal type="string" pos:start="389:43" pos:end="389:61">"cpu-secure-memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="391:9" pos:end="391:51"><expr pos:start="391:9" pos:end="391:50"><call pos:start="391:9" pos:end="391:50"><name pos:start="391:9" pos:end="391:30">cpu_address_space_init</name><argument_list pos:start="391:31" pos:end="391:50">(<argument pos:start="391:32" pos:end="391:33"><expr pos:start="391:32" pos:end="391:33"><name pos:start="391:32" pos:end="391:33">cs</name></expr></argument>, <argument pos:start="391:36" pos:end="391:37"><expr pos:start="391:36" pos:end="391:37"><name pos:start="391:36" pos:end="391:37">as</name></expr></argument>, <argument pos:start="391:40" pos:end="391:49"><expr pos:start="391:40" pos:end="391:49"><name pos:start="391:40" pos:end="391:49">ARMASIdx_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="395:5" pos:end="404:0"><expr pos:start="395:5" pos:end="401:39"><call pos:start="395:5" pos:end="401:39"><name pos:start="395:5" pos:end="395:26">cpu_address_space_init</name><argument_list pos:start="395:27" pos:end="401:39">(<argument pos:start="395:28" pos:end="395:29"><expr pos:start="395:28" pos:end="395:29"><name pos:start="395:28" pos:end="395:29">cs</name></expr></argument>,

                           <argument pos:start="397:28" pos:end="399:69"><expr pos:start="397:28" pos:end="399:69"><call pos:start="397:28" pos:end="399:69"><name pos:start="397:28" pos:end="397:55">address_space_init_shareable</name><argument_list pos:start="397:56" pos:end="399:69">(<argument pos:start="397:57" pos:end="397:66"><expr pos:start="397:57" pos:end="397:66"><name pos:start="397:57" pos:end="397:66"><name pos:start="397:57" pos:end="397:58">cs</name><operator pos:start="397:59" pos:end="397:60">-&gt;</operator><name pos:start="397:61" pos:end="397:66">memory</name></name></expr></argument>,

                                                        <argument pos:start="399:57" pos:end="399:68"><expr pos:start="399:57" pos:end="399:68"><literal type="string" pos:start="399:57" pos:end="399:68">"cpu-memory"</literal></expr></argument>)</argument_list></call></expr></argument>,

                           <argument pos:start="401:28" pos:end="401:38"><expr pos:start="401:28" pos:end="401:38"><name pos:start="401:28" pos:end="401:38">ARMASIdx_NS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="403:1" pos:end="403:6">#<cpp:directive pos:start="403:2" pos:end="403:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="407:5" pos:end="407:23"><expr pos:start="407:5" pos:end="407:22"><call pos:start="407:5" pos:end="407:22"><name pos:start="407:5" pos:end="407:18">qemu_init_vcpu</name><argument_list pos:start="407:19" pos:end="407:22">(<argument pos:start="407:20" pos:end="407:21"><expr pos:start="407:20" pos:end="407:21"><name pos:start="407:20" pos:end="407:21">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="409:5" pos:end="409:18"><expr pos:start="409:5" pos:end="409:17"><call pos:start="409:5" pos:end="409:17"><name pos:start="409:5" pos:end="409:13">cpu_reset</name><argument_list pos:start="409:14" pos:end="409:17">(<argument pos:start="409:15" pos:end="409:16"><expr pos:start="409:15" pos:end="409:16"><name pos:start="409:15" pos:end="409:16">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="413:5" pos:end="413:35"><expr pos:start="413:5" pos:end="413:34"><call pos:start="413:5" pos:end="413:34"><name pos:start="413:5" pos:end="413:23"><name pos:start="413:5" pos:end="413:7">acc</name><operator pos:start="413:8" pos:end="413:9">-&gt;</operator><name pos:start="413:10" pos:end="413:23">parent_realize</name></name><argument_list pos:start="413:24" pos:end="413:34">(<argument pos:start="413:25" pos:end="413:27"><expr pos:start="413:25" pos:end="413:27"><name pos:start="413:25" pos:end="413:27">dev</name></expr></argument>, <argument pos:start="413:30" pos:end="413:33"><expr pos:start="413:30" pos:end="413:33"><name pos:start="413:30" pos:end="413:33">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
