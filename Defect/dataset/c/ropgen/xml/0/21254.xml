<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21254.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">ffm_read_data</name><parameter_list pos:start="1:25" pos:end="3:60">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:37"><decl pos:start="3:26" pos:end="3:37"><type pos:start="3:26" pos:end="3:37"><name pos:start="3:26" pos:end="3:32">uint8_t</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:37">buf</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:47"><decl pos:start="3:40" pos:end="3:47"><type pos:start="3:40" pos:end="3:47"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:47">size</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:59"><decl pos:start="3:50" pos:end="3:59"><type pos:start="3:50" pos:end="3:59"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:59">header</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="141:1">{<block_content pos:start="7:5" pos:end="139:24">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">FFMContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">ffm</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">len</name></decl>, <decl pos:start="11:14" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:22">fill_size</name></decl>, <decl pos:start="11:25" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:29">size1</name></decl>, <decl pos:start="11:32" pos:end="11:43"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:32" pos:end="11:43">frame_offset</name></decl>, <decl pos:start="11:46" pos:end="11:47"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:46" pos:end="11:47">id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:20">last_pos</name> <init pos:start="13:22" pos:end="13:25">= <expr pos:start="13:24" pos:end="13:25"><operator pos:start="13:24" pos:end="13:24">-</operator><literal type="number" pos:start="13:25" pos:end="13:25">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:9">size1</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <name pos:start="17:13" pos:end="17:16">size</name></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="137:5">while <condition pos:start="19:11" pos:end="19:20">(<expr pos:start="19:12" pos:end="19:19"><name pos:start="19:12" pos:end="19:15">size</name> <operator pos:start="19:17" pos:end="19:17">&gt;</operator> <literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>)</condition> <block pos:start="19:22" pos:end="137:5">{<block_content pos:start="21:5" pos:end="135:19">

    <label pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:8">redo</name>:</label>

        <expr_stmt pos:start="23:9" pos:end="23:48"><expr pos:start="23:9" pos:end="23:47"><name pos:start="23:9" pos:end="23:11">len</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:29"><name pos:start="23:15" pos:end="23:17">ffm</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:29">packet_end</name></name> <operator pos:start="23:31" pos:end="23:31">-</operator> <name pos:start="23:33" pos:end="23:47"><name pos:start="23:33" pos:end="23:35">ffm</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:47">packet_ptr</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:22"><if pos:start="25:9" pos:end="27:22">if <condition pos:start="25:12" pos:end="25:20">(<expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:15">len</name> <operator pos:start="25:17" pos:end="25:17">&lt;</operator> <literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:22"><block_content pos:start="27:13" pos:end="27:22">

            <return pos:start="27:13" pos:end="27:22">return <expr pos:start="27:20" pos:end="27:21"><operator pos:start="27:20" pos:end="27:20">-</operator><literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="31:23"><if pos:start="29:9" pos:end="31:23">if <condition pos:start="29:12" pos:end="29:23">(<expr pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:15">len</name> <operator pos:start="29:17" pos:end="29:17">&gt;</operator> <name pos:start="29:19" pos:end="29:22">size</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:23"><block_content pos:start="31:13" pos:end="31:23">

            <expr_stmt pos:start="31:13" pos:end="31:23"><expr pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:15">len</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:22">size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="125:9"><if pos:start="33:9" pos:end="125:9">if <condition pos:start="33:12" pos:end="33:21">(<expr pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:15">len</name> <operator pos:start="33:17" pos:end="33:18">==</operator> <literal type="number" pos:start="33:20" pos:end="33:20">0</literal></expr>)</condition> <block pos:start="33:23" pos:end="125:9">{<block_content pos:start="35:13" pos:end="123:22">

            <if_stmt pos:start="35:13" pos:end="37:58"><if pos:start="35:13" pos:end="37:58">if <condition pos:start="35:16" pos:end="35:48">(<expr pos:start="35:17" pos:end="35:47"><call pos:start="35:17" pos:end="35:29"><name pos:start="35:17" pos:end="35:25">avio_tell</name><argument_list pos:start="35:26" pos:end="35:29">(<argument pos:start="35:27" pos:end="35:28"><expr pos:start="35:27" pos:end="35:28"><name pos:start="35:27" pos:end="35:28">pb</name></expr></argument>)</argument_list></call> <operator pos:start="35:31" pos:end="35:32">==</operator> <name pos:start="35:34" pos:end="35:47"><name pos:start="35:34" pos:end="35:36">ffm</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:47">file_size</name></name></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:58"><block_content pos:start="37:17" pos:end="37:58">

                <expr_stmt pos:start="37:17" pos:end="37:58"><expr pos:start="37:17" pos:end="37:57"><call pos:start="37:17" pos:end="37:57"><name pos:start="37:17" pos:end="37:25">avio_seek</name><argument_list pos:start="37:26" pos:end="37:57">(<argument pos:start="37:27" pos:end="37:28"><expr pos:start="37:27" pos:end="37:28"><name pos:start="37:27" pos:end="37:28">pb</name></expr></argument>, <argument pos:start="37:31" pos:end="37:46"><expr pos:start="37:31" pos:end="37:46"><name pos:start="37:31" pos:end="37:46"><name pos:start="37:31" pos:end="37:33">ffm</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:46">packet_size</name></name></expr></argument>, <argument pos:start="37:49" pos:end="37:56"><expr pos:start="37:49" pos:end="37:56"><name pos:start="37:49" pos:end="37:56">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <label pos:start="39:5" pos:end="39:15"><name pos:start="39:5" pos:end="39:14">retry_read</name>:</label>

            <if_stmt pos:start="41:13" pos:end="49:13"><if pos:start="41:13" pos:end="49:13">if <condition pos:start="41:16" pos:end="41:52">(<expr pos:start="41:17" pos:end="41:51"><name pos:start="41:17" pos:end="41:31"><name pos:start="41:17" pos:end="41:18">pb</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:31">buffer_size</name></name> <operator pos:start="41:33" pos:end="41:34">!=</operator> <name pos:start="41:36" pos:end="41:51"><name pos:start="41:36" pos:end="41:38">ffm</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:51">packet_size</name></name></expr>)</condition> <block pos:start="41:54" pos:end="49:13">{<block_content pos:start="43:17" pos:end="47:46">

                <decl_stmt pos:start="43:17" pos:end="43:45"><decl pos:start="43:17" pos:end="43:44"><type pos:start="43:17" pos:end="43:23"><name pos:start="43:17" pos:end="43:23">int64_t</name></type> <name pos:start="43:25" pos:end="43:28">tell</name> <init pos:start="43:30" pos:end="43:44">= <expr pos:start="43:32" pos:end="43:44"><call pos:start="43:32" pos:end="43:44"><name pos:start="43:32" pos:end="43:40">avio_tell</name><argument_list pos:start="43:41" pos:end="43:44">(<argument pos:start="43:42" pos:end="43:43"><expr pos:start="43:42" pos:end="43:43"><name pos:start="43:42" pos:end="43:43">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:56"><expr pos:start="45:17" pos:end="45:55"><call pos:start="45:17" pos:end="45:55"><name pos:start="45:17" pos:end="45:33">ffio_set_buf_size</name><argument_list pos:start="45:34" pos:end="45:55">(<argument pos:start="45:35" pos:end="45:36"><expr pos:start="45:35" pos:end="45:36"><name pos:start="45:35" pos:end="45:36">pb</name></expr></argument>, <argument pos:start="45:39" pos:end="45:54"><expr pos:start="45:39" pos:end="45:54"><name pos:start="45:39" pos:end="45:54"><name pos:start="45:39" pos:end="45:41">ffm</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:54">packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:46"><expr pos:start="47:17" pos:end="47:45"><call pos:start="47:17" pos:end="47:45"><name pos:start="47:17" pos:end="47:25">avio_seek</name><argument_list pos:start="47:26" pos:end="47:45">(<argument pos:start="47:27" pos:end="47:28"><expr pos:start="47:27" pos:end="47:28"><name pos:start="47:27" pos:end="47:28">pb</name></expr></argument>, <argument pos:start="47:31" pos:end="47:34"><expr pos:start="47:31" pos:end="47:34"><name pos:start="47:31" pos:end="47:34">tell</name></expr></argument>, <argument pos:start="47:37" pos:end="47:44"><expr pos:start="47:37" pos:end="47:44"><name pos:start="47:37" pos:end="47:44">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:31"><expr pos:start="51:13" pos:end="51:30"><name pos:start="51:13" pos:end="51:14">id</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <call pos:start="51:18" pos:end="51:30"><name pos:start="51:18" pos:end="51:26">avio_rb16</name><argument_list pos:start="51:27" pos:end="51:30">(<argument pos:start="51:28" pos:end="51:29"><expr pos:start="51:28" pos:end="51:29"><name pos:start="51:28" pos:end="51:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:33" pos:end="51:47">/* PACKET_ID */</comment>

            <if_stmt pos:start="53:13" pos:end="61:13"><if pos:start="53:13" pos:end="61:13">if <condition pos:start="53:16" pos:end="53:32">(<expr pos:start="53:17" pos:end="53:31"><name pos:start="53:17" pos:end="53:18">id</name> <operator pos:start="53:20" pos:end="53:21">!=</operator> <name pos:start="53:23" pos:end="53:31">PACKET_ID</name></expr>)</condition> <block pos:start="53:34" pos:end="61:13">{<block_content pos:start="55:17" pos:end="59:41">

                <if_stmt pos:start="55:17" pos:end="57:30"><if pos:start="55:17" pos:end="57:30">if <condition pos:start="55:20" pos:end="55:42">(<expr pos:start="55:21" pos:end="55:41"><call pos:start="55:21" pos:end="55:37"><name pos:start="55:21" pos:end="55:30">ffm_resync</name><argument_list pos:start="55:31" pos:end="55:37">(<argument pos:start="55:32" pos:end="55:32"><expr pos:start="55:32" pos:end="55:32"><name pos:start="55:32" pos:end="55:32">s</name></expr></argument>, <argument pos:start="55:35" pos:end="55:36"><expr pos:start="55:35" pos:end="55:36"><name pos:start="55:35" pos:end="55:36">id</name></expr></argument>)</argument_list></call> <operator pos:start="55:39" pos:end="55:39">&lt;</operator> <literal type="number" pos:start="55:41" pos:end="55:41">0</literal></expr>)</condition><block type="pseudo" pos:start="57:21" pos:end="57:30"><block_content pos:start="57:21" pos:end="57:30">

                    <return pos:start="57:21" pos:end="57:30">return <expr pos:start="57:28" pos:end="57:29"><operator pos:start="57:28" pos:end="57:28">-</operator><literal type="number" pos:start="57:29" pos:end="57:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:41"><expr pos:start="59:17" pos:end="59:40"><name pos:start="59:17" pos:end="59:24">last_pos</name> <operator pos:start="59:26" pos:end="59:26">=</operator> <call pos:start="59:28" pos:end="59:40"><name pos:start="59:28" pos:end="59:36">avio_tell</name><argument_list pos:start="59:37" pos:end="59:40">(<argument pos:start="59:38" pos:end="59:39"><expr pos:start="59:38" pos:end="59:39"><name pos:start="59:38" pos:end="59:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:38"><expr pos:start="63:13" pos:end="63:37"><name pos:start="63:13" pos:end="63:21">fill_size</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <call pos:start="63:25" pos:end="63:37"><name pos:start="63:25" pos:end="63:33">avio_rb16</name><argument_list pos:start="63:34" pos:end="63:37">(<argument pos:start="63:35" pos:end="63:36"><expr pos:start="63:35" pos:end="63:36"><name pos:start="63:35" pos:end="63:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:37"><expr pos:start="65:13" pos:end="65:36"><name pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:15">ffm</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:20">dts</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <call pos:start="65:24" pos:end="65:36"><name pos:start="65:24" pos:end="65:32">avio_rb64</name><argument_list pos:start="65:33" pos:end="65:36">(<argument pos:start="65:34" pos:end="65:35"><expr pos:start="65:34" pos:end="65:35"><name pos:start="65:34" pos:end="65:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:41"><expr pos:start="67:13" pos:end="67:40"><name pos:start="67:13" pos:end="67:24">frame_offset</name> <operator pos:start="67:26" pos:end="67:26">=</operator> <call pos:start="67:28" pos:end="67:40"><name pos:start="67:28" pos:end="67:36">avio_rb16</name><argument_list pos:start="67:37" pos:end="67:40">(<argument pos:start="67:38" pos:end="67:39"><expr pos:start="67:38" pos:end="67:39"><name pos:start="67:38" pos:end="67:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:75"><expr pos:start="69:13" pos:end="69:74"><call pos:start="69:13" pos:end="69:74"><name pos:start="69:13" pos:end="69:21">avio_read</name><argument_list pos:start="69:22" pos:end="69:74">(<argument pos:start="69:23" pos:end="69:24"><expr pos:start="69:23" pos:end="69:24"><name pos:start="69:23" pos:end="69:24">pb</name></expr></argument>, <argument pos:start="69:27" pos:end="69:37"><expr pos:start="69:27" pos:end="69:37"><name pos:start="69:27" pos:end="69:37"><name pos:start="69:27" pos:end="69:29">ffm</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:37">packet</name></name></expr></argument>, <argument pos:start="69:40" pos:end="69:73"><expr pos:start="69:40" pos:end="69:73"><name pos:start="69:40" pos:end="69:55"><name pos:start="69:40" pos:end="69:42">ffm</name><operator pos:start="69:43" pos:end="69:44">-&gt;</operator><name pos:start="69:45" pos:end="69:55">packet_size</name></name> <operator pos:start="69:57" pos:end="69:57">-</operator> <name pos:start="69:59" pos:end="69:73">FFM_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:93"><expr pos:start="71:13" pos:end="71:92"><name pos:start="71:13" pos:end="71:27"><name pos:start="71:13" pos:end="71:15">ffm</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:27">packet_end</name></name> <operator pos:start="71:29" pos:end="71:29">=</operator> <name pos:start="71:31" pos:end="71:41"><name pos:start="71:31" pos:end="71:33">ffm</name><operator pos:start="71:34" pos:end="71:35">-&gt;</operator><name pos:start="71:36" pos:end="71:41">packet</name></name> <operator pos:start="71:43" pos:end="71:43">+</operator> <operator pos:start="71:45" pos:end="71:45">(</operator><name pos:start="71:46" pos:end="71:61"><name pos:start="71:46" pos:end="71:48">ffm</name><operator pos:start="71:49" pos:end="71:50">-&gt;</operator><name pos:start="71:51" pos:end="71:61">packet_size</name></name> <operator pos:start="71:63" pos:end="71:63">-</operator> <name pos:start="71:65" pos:end="71:79">FFM_HEADER_SIZE</name> <operator pos:start="71:81" pos:end="71:81">-</operator> <name pos:start="71:83" pos:end="71:91">fill_size</name><operator pos:start="71:92" pos:end="71:92">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="73:13" pos:end="75:26"><if pos:start="73:13" pos:end="75:26">if <condition pos:start="73:16" pos:end="73:66">(<expr pos:start="73:17" pos:end="73:65"><name pos:start="73:17" pos:end="73:31"><name pos:start="73:17" pos:end="73:19">ffm</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:31">packet_end</name></name> <operator pos:start="73:33" pos:end="73:33">&lt;</operator> <name pos:start="73:35" pos:end="73:45"><name pos:start="73:35" pos:end="73:37">ffm</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:45">packet</name></name> <operator pos:start="73:47" pos:end="73:48">||</operator> <name pos:start="73:50" pos:end="73:61">frame_offset</name> <operator pos:start="73:63" pos:end="73:63">&lt;</operator> <literal type="number" pos:start="73:65" pos:end="73:65">0</literal></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:26"><block_content pos:start="75:17" pos:end="75:26">

                <return pos:start="75:17" pos:end="75:26">return <expr pos:start="75:24" pos:end="75:25"><operator pos:start="75:24" pos:end="75:24">-</operator><literal type="number" pos:start="75:25" pos:end="75:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <comment type="block" pos:start="77:13" pos:end="79:40">/* if first packet or resynchronization packet, we must

               handle it specifically */</comment>

            <if_stmt pos:start="81:13" pos:end="121:13"><if pos:start="81:13" pos:end="117:13">if <condition pos:start="81:16" pos:end="81:61">(<expr pos:start="81:17" pos:end="81:60"><name pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:19">ffm</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:33">first_packet</name></name> <operator pos:start="81:35" pos:end="81:36">||</operator> <operator pos:start="81:38" pos:end="81:38">(</operator><name pos:start="81:39" pos:end="81:50">frame_offset</name> <operator pos:start="81:52" pos:end="81:52">&amp;</operator> <literal type="number" pos:start="81:54" pos:end="81:59">0x8000</literal><operator pos:start="81:60" pos:end="81:60">)</operator></expr>)</condition> <block pos:start="81:63" pos:end="117:13">{<block_content pos:start="83:17" pos:end="115:26">

                <if_stmt pos:start="83:17" pos:end="103:17"><if pos:start="83:17" pos:end="103:17">if <condition pos:start="83:20" pos:end="83:34">(<expr pos:start="83:21" pos:end="83:33"><operator pos:start="83:21" pos:end="83:21">!</operator><name pos:start="83:22" pos:end="83:33">frame_offset</name></expr>)</condition> <block pos:start="83:36" pos:end="103:17">{<block_content pos:start="87:21" pos:end="101:29">

                    <comment type="block" pos:start="85:21" pos:end="85:64">/* This packet has no frame headers in it */</comment>

                    <if_stmt pos:start="87:21" pos:end="97:21"><if pos:start="87:21" pos:end="97:21">if <condition pos:start="87:24" pos:end="87:64">(<expr pos:start="87:25" pos:end="87:63"><call pos:start="87:25" pos:end="87:37"><name pos:start="87:25" pos:end="87:33">avio_tell</name><argument_list pos:start="87:34" pos:end="87:37">(<argument pos:start="87:35" pos:end="87:36"><expr pos:start="87:35" pos:end="87:36"><name pos:start="87:35" pos:end="87:36">pb</name></expr></argument>)</argument_list></call> <operator pos:start="87:39" pos:end="87:40">&gt;=</operator> <name pos:start="87:42" pos:end="87:57"><name pos:start="87:42" pos:end="87:44">ffm</name><operator pos:start="87:45" pos:end="87:46">-&gt;</operator><name pos:start="87:47" pos:end="87:57">packet_size</name></name> <operator pos:start="87:59" pos:end="87:59">*</operator> <literal type="number" pos:start="87:61" pos:end="87:63">3LL</literal></expr>)</condition> <block pos:start="87:66" pos:end="97:21">{<block_content pos:start="89:25" pos:end="95:40">

                        <decl_stmt pos:start="89:25" pos:end="89:99"><decl pos:start="89:25" pos:end="89:98"><type pos:start="89:25" pos:end="89:31"><name pos:start="89:25" pos:end="89:31">int64_t</name></type> <name pos:start="89:33" pos:end="89:40">seekback</name> <init pos:start="89:42" pos:end="89:98">= <expr pos:start="89:44" pos:end="89:98"><call pos:start="89:44" pos:end="89:98"><name pos:start="89:44" pos:end="89:48">FFMIN</name><argument_list pos:start="89:49" pos:end="89:98">(<argument pos:start="89:50" pos:end="89:71"><expr pos:start="89:50" pos:end="89:71"><name pos:start="89:50" pos:end="89:65"><name pos:start="89:50" pos:end="89:52">ffm</name><operator pos:start="89:53" pos:end="89:54">-&gt;</operator><name pos:start="89:55" pos:end="89:65">packet_size</name></name> <operator pos:start="89:67" pos:end="89:67">*</operator> <literal type="number" pos:start="89:69" pos:end="89:71">2LL</literal></expr></argument>, <argument pos:start="89:74" pos:end="89:97"><expr pos:start="89:74" pos:end="89:97"><call pos:start="89:74" pos:end="89:86"><name pos:start="89:74" pos:end="89:82">avio_tell</name><argument_list pos:start="89:83" pos:end="89:86">(<argument pos:start="89:84" pos:end="89:85"><expr pos:start="89:84" pos:end="89:85"><name pos:start="89:84" pos:end="89:85">pb</name></expr></argument>)</argument_list></call> <operator pos:start="89:88" pos:end="89:88">-</operator> <name pos:start="89:90" pos:end="89:97">last_pos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="91:25" pos:end="91:54"><expr pos:start="91:25" pos:end="91:53"><name pos:start="91:25" pos:end="91:32">seekback</name> <operator pos:start="91:34" pos:end="91:34">=</operator> <call pos:start="91:36" pos:end="91:53"><name pos:start="91:36" pos:end="91:40">FFMAX</name><argument_list pos:start="91:41" pos:end="91:53">(<argument pos:start="91:42" pos:end="91:49"><expr pos:start="91:42" pos:end="91:49"><name pos:start="91:42" pos:end="91:49">seekback</name></expr></argument>, <argument pos:start="91:52" pos:end="91:52"><expr pos:start="91:52" pos:end="91:52"><literal type="number" pos:start="91:52" pos:end="91:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="93:25" pos:end="93:59"><expr pos:start="93:25" pos:end="93:58"><call pos:start="93:25" pos:end="93:58"><name pos:start="93:25" pos:end="93:33">avio_seek</name><argument_list pos:start="93:34" pos:end="93:58">(<argument pos:start="93:35" pos:end="93:36"><expr pos:start="93:35" pos:end="93:36"><name pos:start="93:35" pos:end="93:36">pb</name></expr></argument>, <argument pos:start="93:39" pos:end="93:47"><expr pos:start="93:39" pos:end="93:47"><operator pos:start="93:39" pos:end="93:39">-</operator><name pos:start="93:40" pos:end="93:47">seekback</name></expr></argument>, <argument pos:start="93:50" pos:end="93:57"><expr pos:start="93:50" pos:end="93:57"><name pos:start="93:50" pos:end="93:57">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="95:25" pos:end="95:40">goto <name pos:start="95:30" pos:end="95:39">retry_read</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <comment type="block" pos:start="99:21" pos:end="99:74">/* This is bad, we cannot find a valid frame header */</comment>

                    <return pos:start="101:21" pos:end="101:29">return <expr pos:start="101:28" pos:end="101:28"><literal type="number" pos:start="101:28" pos:end="101:28">0</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:38"><expr pos:start="105:17" pos:end="105:37"><name pos:start="105:17" pos:end="105:33"><name pos:start="105:17" pos:end="105:19">ffm</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:33">first_packet</name></name> <operator pos:start="105:35" pos:end="105:35">=</operator> <literal type="number" pos:start="105:37" pos:end="105:37">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="107:17" pos:end="109:30"><if pos:start="107:17" pos:end="109:30">if <condition pos:start="107:20" pos:end="107:62">(<expr pos:start="107:21" pos:end="107:61"><operator pos:start="107:21" pos:end="107:21">(</operator><name pos:start="107:22" pos:end="107:33">frame_offset</name> <operator pos:start="107:35" pos:end="107:35">&amp;</operator> <literal type="number" pos:start="107:37" pos:end="107:42">0x7fff</literal><operator pos:start="107:43" pos:end="107:43">)</operator> <operator pos:start="107:45" pos:end="107:45">&lt;</operator> <name pos:start="107:47" pos:end="107:61">FFM_HEADER_SIZE</name></expr>)</condition><block type="pseudo" pos:start="109:21" pos:end="109:30"><block_content pos:start="109:21" pos:end="109:30">

                    <return pos:start="109:21" pos:end="109:30">return <expr pos:start="109:28" pos:end="109:29"><operator pos:start="109:28" pos:end="109:28">-</operator><literal type="number" pos:start="109:29" pos:end="109:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:90"><expr pos:start="111:17" pos:end="111:89"><name pos:start="111:17" pos:end="111:31"><name pos:start="111:17" pos:end="111:19">ffm</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:31">packet_ptr</name></name> <operator pos:start="111:33" pos:end="111:33">=</operator> <name pos:start="111:35" pos:end="111:45"><name pos:start="111:35" pos:end="111:37">ffm</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:45">packet</name></name> <operator pos:start="111:47" pos:end="111:47">+</operator> <operator pos:start="111:49" pos:end="111:49">(</operator><name pos:start="111:50" pos:end="111:61">frame_offset</name> <operator pos:start="111:63" pos:end="111:63">&amp;</operator> <literal type="number" pos:start="111:65" pos:end="111:70">0x7fff</literal><operator pos:start="111:71" pos:end="111:71">)</operator> <operator pos:start="111:73" pos:end="111:73">-</operator> <name pos:start="111:75" pos:end="111:89">FFM_HEADER_SIZE</name></expr>;</expr_stmt>

                <if_stmt pos:start="113:17" pos:end="115:26"><if pos:start="113:17" pos:end="115:26">if <condition pos:start="113:20" pos:end="113:28">(<expr pos:start="113:21" pos:end="113:27"><operator pos:start="113:21" pos:end="113:21">!</operator><name pos:start="113:22" pos:end="113:27">header</name></expr>)</condition><block type="pseudo" pos:start="115:21" pos:end="115:26"><block_content pos:start="115:21" pos:end="115:26">

                    <break pos:start="115:21" pos:end="115:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="117:15" pos:end="121:13">else <block pos:start="117:20" pos:end="121:13">{<block_content pos:start="119:17" pos:end="119:46">

                <expr_stmt pos:start="119:17" pos:end="119:46"><expr pos:start="119:17" pos:end="119:45"><name pos:start="119:17" pos:end="119:31"><name pos:start="119:17" pos:end="119:19">ffm</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:31">packet_ptr</name></name> <operator pos:start="119:33" pos:end="119:33">=</operator> <name pos:start="119:35" pos:end="119:45"><name pos:start="119:35" pos:end="119:37">ffm</name><operator pos:start="119:38" pos:end="119:39">-&gt;</operator><name pos:start="119:40" pos:end="119:45">packet</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <goto pos:start="123:13" pos:end="123:22">goto <name pos:start="123:18" pos:end="123:21">redo</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:42"><expr pos:start="127:9" pos:end="127:41"><call pos:start="127:9" pos:end="127:41"><name pos:start="127:9" pos:end="127:14">memcpy</name><argument_list pos:start="127:15" pos:end="127:41">(<argument pos:start="127:16" pos:end="127:18"><expr pos:start="127:16" pos:end="127:18"><name pos:start="127:16" pos:end="127:18">buf</name></expr></argument>, <argument pos:start="127:21" pos:end="127:35"><expr pos:start="127:21" pos:end="127:35"><name pos:start="127:21" pos:end="127:35"><name pos:start="127:21" pos:end="127:23">ffm</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:35">packet_ptr</name></name></expr></argument>, <argument pos:start="127:38" pos:end="127:40"><expr pos:start="127:38" pos:end="127:40"><name pos:start="127:38" pos:end="127:40">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:19"><expr pos:start="129:9" pos:end="129:18"><name pos:start="129:9" pos:end="129:11">buf</name> <operator pos:start="129:13" pos:end="129:14">+=</operator> <name pos:start="129:16" pos:end="129:18">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:31"><expr pos:start="131:9" pos:end="131:30"><name pos:start="131:9" pos:end="131:23"><name pos:start="131:9" pos:end="131:11">ffm</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:23">packet_ptr</name></name> <operator pos:start="131:25" pos:end="131:26">+=</operator> <name pos:start="131:28" pos:end="131:30">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:20"><expr pos:start="133:9" pos:end="133:19"><name pos:start="133:9" pos:end="133:12">size</name> <operator pos:start="133:14" pos:end="133:15">-=</operator> <name pos:start="133:17" pos:end="133:19">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:19"><expr pos:start="135:9" pos:end="135:18"><name pos:start="135:9" pos:end="135:14">header</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <literal type="number" pos:start="135:18" pos:end="135:18">0</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="139:5" pos:end="139:24">return <expr pos:start="139:12" pos:end="139:23"><name pos:start="139:12" pos:end="139:16">size1</name> <operator pos:start="139:18" pos:end="139:18">-</operator> <name pos:start="139:20" pos:end="139:23">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
