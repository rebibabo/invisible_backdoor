<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5881.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">virtio_ccw_scsi_realize</name><parameter_list pos:start="1:36" pos:end="1:75">(<parameter pos:start="1:37" pos:end="1:60"><decl pos:start="1:37" pos:end="1:60"><type pos:start="1:37" pos:end="1:60"><name pos:start="1:37" pos:end="1:51">VirtioCcwDevice</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:60">ccw_dev</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:67">Error</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier><modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:74">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:5">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">VirtIOSCSICcw</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">dev</name> <init pos:start="5:24" pos:end="5:49">= <expr pos:start="5:26" pos:end="5:49"><call pos:start="5:26" pos:end="5:49"><name pos:start="5:26" pos:end="5:40">VIRTIO_SCSI_CCW</name><argument_list pos:start="5:41" pos:end="5:49">(<argument pos:start="5:42" pos:end="5:48"><expr pos:start="5:42" pos:end="5:48"><name pos:start="5:42" pos:end="5:48">ccw_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:21">vdev</name> <init pos:start="7:23" pos:end="7:42">= <expr pos:start="7:25" pos:end="7:42"><call pos:start="7:25" pos:end="7:42"><name pos:start="7:25" pos:end="7:30">DEVICE</name><argument_list pos:start="7:31" pos:end="7:42">(<argument pos:start="7:32" pos:end="7:41"><expr pos:start="7:32" pos:end="7:41"><operator pos:start="7:32" pos:end="7:32">&amp;</operator><name pos:start="7:33" pos:end="7:41"><name pos:start="7:33" pos:end="7:35">dev</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:41">vdev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DeviceState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:21">qdev</name> <init pos:start="9:23" pos:end="9:39">= <expr pos:start="9:25" pos:end="9:39"><call pos:start="9:25" pos:end="9:39"><name pos:start="9:25" pos:end="9:30">DEVICE</name><argument_list pos:start="9:31" pos:end="9:39">(<argument pos:start="9:32" pos:end="9:38"><expr pos:start="9:32" pos:end="9:38"><name pos:start="9:32" pos:end="9:38">ccw_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:14">err</name> <init pos:start="11:16" pos:end="11:21">= <expr pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:18">bus_name</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="23:7">/*

     * For command line compatibility, this sets the virtio-scsi-device bus

     * name as before.

     */</comment>

    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:17">(<expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:12">qdev</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:16">id</name></name></expr>)</condition> <block pos:start="25:19" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:25">

        <expr_stmt pos:start="27:9" pos:end="27:53"><expr pos:start="27:9" pos:end="27:52"><name pos:start="27:9" pos:end="27:16">bus_name</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:52"><name pos:start="27:20" pos:end="27:34">g_strdup_printf</name><argument_list pos:start="27:35" pos:end="27:52">(<argument pos:start="27:36" pos:end="27:41"><expr pos:start="27:36" pos:end="27:41"><literal type="string" pos:start="27:36" pos:end="27:41">"%s.0"</literal></expr></argument>, <argument pos:start="27:44" pos:end="27:51"><expr pos:start="27:44" pos:end="27:51"><name pos:start="27:44" pos:end="27:51"><name pos:start="27:44" pos:end="27:47">qdev</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:51">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:72"><expr pos:start="29:9" pos:end="29:71"><call pos:start="29:9" pos:end="29:71"><name pos:start="29:9" pos:end="29:40">virtio_device_set_child_bus_name</name><argument_list pos:start="29:41" pos:end="29:71">(<argument pos:start="29:42" pos:end="29:60"><expr pos:start="29:42" pos:end="29:60"><call pos:start="29:42" pos:end="29:60"><name pos:start="29:42" pos:end="29:54">VIRTIO_DEVICE</name><argument_list pos:start="29:55" pos:end="29:60">(<argument pos:start="29:56" pos:end="29:59"><expr pos:start="29:56" pos:end="29:59"><name pos:start="29:56" pos:end="29:59">vdev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:63" pos:end="29:70"><expr pos:start="29:63" pos:end="29:70"><name pos:start="29:63" pos:end="29:70">bus_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:25"><expr pos:start="31:9" pos:end="31:24"><call pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:14">g_free</name><argument_list pos:start="31:15" pos:end="31:24">(<argument pos:start="31:16" pos:end="31:23"><expr pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:23">bus_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:50"><expr pos:start="37:5" pos:end="37:49"><call pos:start="37:5" pos:end="37:49"><name pos:start="37:5" pos:end="37:23">qdev_set_parent_bus</name><argument_list pos:start="37:24" pos:end="37:49">(<argument pos:start="37:25" pos:end="37:28"><expr pos:start="37:25" pos:end="37:28"><name pos:start="37:25" pos:end="37:28">vdev</name></expr></argument>, <argument pos:start="37:31" pos:end="37:48"><expr pos:start="37:31" pos:end="37:48"><call pos:start="37:31" pos:end="37:48"><name pos:start="37:31" pos:end="37:33">BUS</name><argument_list pos:start="37:34" pos:end="37:48">(<argument pos:start="37:35" pos:end="37:47"><expr pos:start="37:35" pos:end="37:47"><operator pos:start="37:35" pos:end="37:35">&amp;</operator><name pos:start="37:36" pos:end="37:47"><name pos:start="37:36" pos:end="37:42">ccw_dev</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:47">bus</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:67"><expr pos:start="39:5" pos:end="39:66"><call pos:start="39:5" pos:end="39:66"><name pos:start="39:5" pos:end="39:28">object_property_set_bool</name><argument_list pos:start="39:29" pos:end="39:66">(<argument pos:start="39:30" pos:end="39:41"><expr pos:start="39:30" pos:end="39:41"><call pos:start="39:30" pos:end="39:41"><name pos:start="39:30" pos:end="39:35">OBJECT</name><argument_list pos:start="39:36" pos:end="39:41">(<argument pos:start="39:37" pos:end="39:40"><expr pos:start="39:37" pos:end="39:40"><name pos:start="39:37" pos:end="39:40">vdev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:44" pos:end="39:47"><expr pos:start="39:44" pos:end="39:47"><name pos:start="39:44" pos:end="39:47">true</name></expr></argument>, <argument pos:start="39:50" pos:end="39:59"><expr pos:start="39:50" pos:end="39:59"><literal type="string" pos:start="39:50" pos:end="39:59">"realized"</literal></expr></argument>, <argument pos:start="39:62" pos:end="39:65"><expr pos:start="39:62" pos:end="39:65"><operator pos:start="39:62" pos:end="39:62">&amp;</operator><name pos:start="39:63" pos:end="39:65">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:12">(<expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">err</name></expr>)</condition> <block pos:start="41:14" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:35">

        <expr_stmt pos:start="43:9" pos:end="43:35"><expr pos:start="43:9" pos:end="43:34"><call pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:23">error_propagate</name><argument_list pos:start="43:24" pos:end="43:34">(<argument pos:start="43:25" pos:end="43:28"><expr pos:start="43:25" pos:end="43:28"><name pos:start="43:25" pos:end="43:28">errp</name></expr></argument>, <argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
