<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8652.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:29">vsink_init</name><parameter_list pos:start="1:30" pos:end="1:83">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:45">AVFilterContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:68"><decl pos:start="1:53" pos:end="1:68"><type pos:start="1:53" pos:end="1:68"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:62">char</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">args</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:82"><decl pos:start="1:71" pos:end="1:82"><type pos:start="1:71" pos:end="1:82"><name pos:start="1:71" pos:end="1:74">void</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:82">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:28">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">BufferSinkContext</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">buf</name> <init pos:start="5:28" pos:end="5:38">= <expr pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:32">ctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:38">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:34"><name pos:start="7:5" pos:end="7:13">av_unused</name> <name pos:start="7:15" pos:end="7:32">AVBufferSinkParams</name> <modifier pos:start="7:34" pos:end="7:34">*</modifier></type><name pos:start="7:35" pos:end="7:40">params</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="33:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:15">opaque</name></expr>)</condition> <block pos:start="11:18" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:31">

        <expr_stmt pos:start="13:9" pos:end="15:45"><expr pos:start="13:9" pos:end="15:44"><call pos:start="13:9" pos:end="15:44"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="15:44">(<argument pos:start="13:16" pos:end="13:18"><expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">ctx</name></expr></argument>, <argument pos:start="13:21" pos:end="13:32"><expr pos:start="13:21" pos:end="13:32"><name pos:start="13:21" pos:end="13:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="15:16" pos:end="15:43"><expr pos:start="15:16" pos:end="15:43"><literal type="string" pos:start="15:16" pos:end="15:43">"No opaque field provided\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="33:5">else <block pos:start="19:12" pos:end="33:5">{<block_content pos:start="23:9" pos:end="32:0">

<cpp:if pos:start="21:1" pos:end="21:24">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:24">FF_API_OLD_VSINK_API</name></expr></cpp:if>

        <expr_stmt pos:start="23:9" pos:end="26:0"><expr pos:start="23:9" pos:end="23:58"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:11">buf</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:23">pixel_fmts</name></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <operator pos:start="23:27" pos:end="23:27">(</operator><specifier pos:start="23:28" pos:end="23:32">const</specifier> enum <name pos:start="23:39" pos:end="23:49">PixelFormat</name> <operator pos:start="23:51" pos:end="23:51">*</operator><operator pos:start="23:52" pos:end="23:52">)</operator><name pos:start="23:53" pos:end="23:58">opaque</name></expr>;</expr_stmt>

<cpp:else pos:start="25:1" pos:end="25:5">#<cpp:directive pos:start="25:2" pos:end="25:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="27:9" pos:end="27:46"><expr pos:start="27:9" pos:end="27:45"><name pos:start="27:9" pos:end="27:14">params</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <operator pos:start="27:18" pos:end="27:18">(</operator><name pos:start="27:19" pos:end="27:36">AVBufferSinkParams</name> <operator pos:start="27:38" pos:end="27:38">*</operator><operator pos:start="27:39" pos:end="27:39">)</operator><name pos:start="27:40" pos:end="27:45">opaque</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="32:0"><expr pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:11">buf</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:23">pixel_fmts</name></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <name pos:start="29:27" pos:end="29:44"><name pos:start="29:27" pos:end="29:32">params</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:44">pixel_fmts</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></else></if_stmt>



    <return pos:start="37:5" pos:end="37:28">return <expr pos:start="37:12" pos:end="37:27"><call pos:start="37:12" pos:end="37:27"><name pos:start="37:12" pos:end="37:22">common_init</name><argument_list pos:start="37:23" pos:end="37:27">(<argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">ctx</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
