<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5251.c" pos:tabs="8"><function pos:start="1:1" pos:end="1155:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int32_t</name></type> <name pos:start="1:16" pos:end="1:32">scsi_send_command</name><parameter_list pos:start="1:33" pos:end="3:55">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:43">SCSIDevice</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">d</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:56">uint32_t</name></type> <name pos:start="1:58" pos:end="1:60">tag</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:40">uint8_t</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:45">buf</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:54"><decl pos:start="3:48" pos:end="3:54"><type pos:start="3:48" pos:end="3:54"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:54">lun</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="1155:1">{<block_content pos:start="7:5" pos:end="1153:5">

    <decl_stmt pos:start="7:5" pos:end="7:57"><decl pos:start="7:5" pos:end="7:56"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">SCSIDiskState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:56">= <expr pos:start="7:24" pos:end="7:56"><call pos:start="7:24" pos:end="7:56"><name pos:start="7:24" pos:end="7:32">DO_UPCAST</name><argument_list pos:start="7:33" pos:end="7:56">(<argument pos:start="7:34" pos:end="7:46"><expr pos:start="7:34" pos:end="7:46"><name pos:start="7:34" pos:end="7:46">SCSIDiskState</name></expr></argument>, <argument pos:start="7:49" pos:end="7:52"><expr pos:start="7:49" pos:end="7:52"><name pos:start="7:49" pos:end="7:52">qdev</name></expr></argument>, <argument pos:start="7:55" pos:end="7:55"><expr pos:start="7:55" pos:end="7:55"><name pos:start="7:55" pos:end="7:55">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:23">nb_sectors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:16">lba</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:16">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">cmdlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">is_write</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">uint8_t</name></type> <name pos:start="19:13" pos:end="19:19">command</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:19">outbuf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:15">SCSIRequest</name> <modifier pos:start="23:17" pos:end="23:17">*</modifier></type><name pos:start="23:18" pos:end="23:18">r</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:11">command</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:20"><name pos:start="27:15" pos:end="27:17">buf</name><index pos:start="27:18" pos:end="27:20">[<expr pos:start="27:19" pos:end="27:19"><literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:5">r</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:25">scsi_find_request</name><argument_list pos:start="29:26" pos:end="29:33">(<argument pos:start="29:27" pos:end="29:27"><expr pos:start="29:27" pos:end="29:27"><name pos:start="29:27" pos:end="29:27">s</name></expr></argument>, <argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:10">(<expr pos:start="31:9" pos:end="31:9"><name pos:start="31:9" pos:end="31:9">r</name></expr>)</condition> <block pos:start="31:12" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:31">

        <expr_stmt pos:start="33:9" pos:end="33:47"><expr pos:start="33:9" pos:end="33:46"><call pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:12">BADF</name><argument_list pos:start="33:13" pos:end="33:46">(<argument pos:start="33:14" pos:end="33:40"><expr pos:start="33:14" pos:end="33:40"><literal type="string" pos:start="33:14" pos:end="33:40">"Tag 0x%x already in use\n"</literal></expr></argument>, <argument pos:start="33:43" pos:end="33:45"><expr pos:start="33:43" pos:end="33:45"><name pos:start="33:43" pos:end="33:45">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:31"><expr pos:start="35:9" pos:end="35:30"><call pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:22">scsi_cancel_io</name><argument_list pos:start="35:23" pos:end="35:30">(<argument pos:start="35:24" pos:end="35:24"><expr pos:start="35:24" pos:end="35:24"><name pos:start="35:24" pos:end="35:24">d</name></expr></argument>, <argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><name pos:start="35:27" pos:end="35:29">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="39:5" pos:end="41:49">/* ??? Tags are not unique for different luns.  We only implement a

       single lun, so this should not matter.  */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:5">r</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <call pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:24">scsi_new_request</name><argument_list pos:start="43:25" pos:end="43:32">(<argument pos:start="43:26" pos:end="43:26"><expr pos:start="43:26" pos:end="43:26"><name pos:start="43:26" pos:end="43:26">d</name></expr></argument>, <argument pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><name pos:start="43:29" pos:end="43:31">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:40"><expr pos:start="45:5" pos:end="45:39"><name pos:start="45:5" pos:end="45:10">outbuf</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <operator pos:start="45:14" pos:end="45:14">(</operator><name pos:start="45:15" pos:end="45:21">uint8_t</name> <operator pos:start="45:23" pos:end="45:23">*</operator><operator pos:start="45:24" pos:end="45:24">)</operator><name pos:start="45:25" pos:end="45:39"><name pos:start="45:25" pos:end="45:25">r</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:30">iov</name><operator pos:start="45:31" pos:end="45:31">.</operator><name pos:start="45:32" pos:end="45:39">iov_base</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:17"><expr pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:12">is_write</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:70"><expr pos:start="49:5" pos:end="49:69"><call pos:start="49:5" pos:end="49:69"><name pos:start="49:5" pos:end="49:11">DPRINTF</name><argument_list pos:start="49:12" pos:end="49:69">(<argument pos:start="49:13" pos:end="49:50"><expr pos:start="49:13" pos:end="49:50"><literal type="string" pos:start="49:13" pos:end="49:50">"Command: lun=%d tag=0x%x data=0x%02x"</literal></expr></argument>, <argument pos:start="49:53" pos:end="49:55"><expr pos:start="49:53" pos:end="49:55"><name pos:start="49:53" pos:end="49:55">lun</name></expr></argument>, <argument pos:start="49:58" pos:end="49:60"><expr pos:start="49:58" pos:end="49:60"><name pos:start="49:58" pos:end="49:60">tag</name></expr></argument>, <argument pos:start="49:63" pos:end="49:68"><expr pos:start="49:63" pos:end="49:68"><name pos:start="49:63" pos:end="49:68"><name pos:start="49:63" pos:end="49:65">buf</name><index pos:start="49:66" pos:end="49:68">[<expr pos:start="49:67" pos:end="49:67"><literal type="number" pos:start="49:67" pos:end="49:67">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="51:5" pos:end="116:0">switch <condition pos:start="51:12" pos:end="51:25">(<expr pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:19">command</name> <operator pos:start="51:21" pos:end="51:22">&gt;&gt;</operator> <literal type="number" pos:start="51:24" pos:end="51:24">5</literal></expr>)</condition> <block pos:start="51:27" pos:end="116:0">{<block_content pos:start="53:5" pos:end="111:18">

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">0</literal></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="57:49"><expr pos:start="55:9" pos:end="57:48"><name pos:start="55:9" pos:end="55:11">lba</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <operator pos:start="55:15" pos:end="55:15">(</operator><name pos:start="55:16" pos:end="55:23">uint64_t</name><operator pos:start="55:24" pos:end="55:24">)</operator> <name pos:start="55:26" pos:end="55:31"><name pos:start="55:26" pos:end="55:28">buf</name><index pos:start="55:29" pos:end="55:31">[<expr pos:start="55:30" pos:end="55:30"><literal type="number" pos:start="55:30" pos:end="55:30">3</literal></expr>]</index></name> <operator pos:start="55:33" pos:end="55:33">|</operator> <operator pos:start="55:35" pos:end="55:35">(</operator><operator pos:start="55:36" pos:end="55:36">(</operator><name pos:start="55:37" pos:end="55:44">uint64_t</name><operator pos:start="55:45" pos:end="55:45">)</operator> <name pos:start="55:47" pos:end="55:52"><name pos:start="55:47" pos:end="55:49">buf</name><index pos:start="55:50" pos:end="55:52">[<expr pos:start="55:51" pos:end="55:51"><literal type="number" pos:start="55:51" pos:end="55:51">2</literal></expr>]</index></name> <operator pos:start="55:54" pos:end="55:55">&lt;&lt;</operator> <literal type="number" pos:start="55:57" pos:end="55:57">8</literal><operator pos:start="55:58" pos:end="55:58">)</operator> <operator pos:start="55:60" pos:end="55:60">|</operator>

              <operator pos:start="57:15" pos:end="57:15">(</operator><operator pos:start="57:16" pos:end="57:16">(</operator><operator pos:start="57:17" pos:end="57:17">(</operator><name pos:start="57:18" pos:end="57:25">uint64_t</name><operator pos:start="57:26" pos:end="57:26">)</operator> <name pos:start="57:28" pos:end="57:33"><name pos:start="57:28" pos:end="57:30">buf</name><index pos:start="57:31" pos:end="57:33">[<expr pos:start="57:32" pos:end="57:32"><literal type="number" pos:start="57:32" pos:end="57:32">1</literal></expr>]</index></name> <operator pos:start="57:35" pos:end="57:35">&amp;</operator> <literal type="number" pos:start="57:37" pos:end="57:40">0x1f</literal><operator pos:start="57:41" pos:end="57:41">)</operator> <operator pos:start="57:43" pos:end="57:44">&lt;&lt;</operator> <literal type="number" pos:start="57:46" pos:end="57:47">16</literal><operator pos:start="57:48" pos:end="57:48">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:21"><expr pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:11">len</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:20"><name pos:start="59:15" pos:end="59:17">buf</name><index pos:start="59:18" pos:end="59:20">[<expr pos:start="59:19" pos:end="59:19"><literal type="number" pos:start="59:19" pos:end="59:19">4</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:19"><expr pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:14">cmdlen</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">6</literal></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:11">case <expr pos:start="65:10" pos:end="65:10"><literal type="number" pos:start="65:10" pos:end="65:10">1</literal></expr>:</case>

    <case pos:start="67:5" pos:end="67:11">case <expr pos:start="67:10" pos:end="67:10"><literal type="number" pos:start="67:10" pos:end="67:10">2</literal></expr>:</case>

        <expr_stmt pos:start="69:9" pos:end="71:68"><expr pos:start="69:9" pos:end="71:67"><name pos:start="69:9" pos:end="69:11">lba</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <operator pos:start="69:15" pos:end="69:15">(</operator><name pos:start="69:16" pos:end="69:23">uint64_t</name><operator pos:start="69:24" pos:end="69:24">)</operator> <name pos:start="69:26" pos:end="69:31"><name pos:start="69:26" pos:end="69:28">buf</name><index pos:start="69:29" pos:end="69:31">[<expr pos:start="69:30" pos:end="69:30"><literal type="number" pos:start="69:30" pos:end="69:30">5</literal></expr>]</index></name> <operator pos:start="69:33" pos:end="69:33">|</operator> <operator pos:start="69:35" pos:end="69:35">(</operator><operator pos:start="69:36" pos:end="69:36">(</operator><name pos:start="69:37" pos:end="69:44">uint64_t</name><operator pos:start="69:45" pos:end="69:45">)</operator> <name pos:start="69:47" pos:end="69:52"><name pos:start="69:47" pos:end="69:49">buf</name><index pos:start="69:50" pos:end="69:52">[<expr pos:start="69:51" pos:end="69:51"><literal type="number" pos:start="69:51" pos:end="69:51">4</literal></expr>]</index></name> <operator pos:start="69:54" pos:end="69:55">&lt;&lt;</operator> <literal type="number" pos:start="69:57" pos:end="69:57">8</literal><operator pos:start="69:58" pos:end="69:58">)</operator> <operator pos:start="69:60" pos:end="69:60">|</operator>

              <operator pos:start="71:15" pos:end="71:15">(</operator><operator pos:start="71:16" pos:end="71:16">(</operator><name pos:start="71:17" pos:end="71:24">uint64_t</name><operator pos:start="71:25" pos:end="71:25">)</operator> <name pos:start="71:27" pos:end="71:32"><name pos:start="71:27" pos:end="71:29">buf</name><index pos:start="71:30" pos:end="71:32">[<expr pos:start="71:31" pos:end="71:31"><literal type="number" pos:start="71:31" pos:end="71:31">3</literal></expr>]</index></name> <operator pos:start="71:34" pos:end="71:35">&lt;&lt;</operator> <literal type="number" pos:start="71:37" pos:end="71:38">16</literal><operator pos:start="71:39" pos:end="71:39">)</operator> <operator pos:start="71:41" pos:end="71:41">|</operator> <operator pos:start="71:43" pos:end="71:43">(</operator><operator pos:start="71:44" pos:end="71:44">(</operator><name pos:start="71:45" pos:end="71:52">uint64_t</name><operator pos:start="71:53" pos:end="71:53">)</operator> <name pos:start="71:55" pos:end="71:60"><name pos:start="71:55" pos:end="71:57">buf</name><index pos:start="71:58" pos:end="71:60">[<expr pos:start="71:59" pos:end="71:59"><literal type="number" pos:start="71:59" pos:end="71:59">2</literal></expr>]</index></name> <operator pos:start="71:62" pos:end="71:63">&lt;&lt;</operator> <literal type="number" pos:start="71:65" pos:end="71:66">24</literal><operator pos:start="71:67" pos:end="71:67">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:37"><expr pos:start="73:9" pos:end="73:36"><name pos:start="73:9" pos:end="73:11">len</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <name pos:start="73:15" pos:end="73:20"><name pos:start="73:15" pos:end="73:17">buf</name><index pos:start="73:18" pos:end="73:20">[<expr pos:start="73:19" pos:end="73:19"><literal type="number" pos:start="73:19" pos:end="73:19">8</literal></expr>]</index></name> <operator pos:start="73:22" pos:end="73:22">|</operator> <operator pos:start="73:24" pos:end="73:24">(</operator><name pos:start="73:25" pos:end="73:30"><name pos:start="73:25" pos:end="73:27">buf</name><index pos:start="73:28" pos:end="73:30">[<expr pos:start="73:29" pos:end="73:29"><literal type="number" pos:start="73:29" pos:end="73:29">7</literal></expr>]</index></name> <operator pos:start="73:32" pos:end="73:33">&lt;&lt;</operator> <literal type="number" pos:start="73:35" pos:end="73:35">8</literal><operator pos:start="73:36" pos:end="73:36">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:20"><expr pos:start="75:9" pos:end="75:19"><name pos:start="75:9" pos:end="75:14">cmdlen</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="number" pos:start="75:18" pos:end="75:19">10</literal></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:11">case <expr pos:start="79:10" pos:end="79:10"><literal type="number" pos:start="79:10" pos:end="79:10">4</literal></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="87:68"><expr pos:start="81:9" pos:end="87:67"><name pos:start="81:9" pos:end="81:11">lba</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <operator pos:start="81:15" pos:end="81:15">(</operator><name pos:start="81:16" pos:end="81:23">uint64_t</name><operator pos:start="81:24" pos:end="81:24">)</operator> <name pos:start="81:26" pos:end="81:31"><name pos:start="81:26" pos:end="81:28">buf</name><index pos:start="81:29" pos:end="81:31">[<expr pos:start="81:30" pos:end="81:30"><literal type="number" pos:start="81:30" pos:end="81:30">9</literal></expr>]</index></name> <operator pos:start="81:33" pos:end="81:33">|</operator> <operator pos:start="81:35" pos:end="81:35">(</operator><operator pos:start="81:36" pos:end="81:36">(</operator><name pos:start="81:37" pos:end="81:44">uint64_t</name><operator pos:start="81:45" pos:end="81:45">)</operator> <name pos:start="81:47" pos:end="81:52"><name pos:start="81:47" pos:end="81:49">buf</name><index pos:start="81:50" pos:end="81:52">[<expr pos:start="81:51" pos:end="81:51"><literal type="number" pos:start="81:51" pos:end="81:51">8</literal></expr>]</index></name> <operator pos:start="81:54" pos:end="81:55">&lt;&lt;</operator> <literal type="number" pos:start="81:57" pos:end="81:57">8</literal><operator pos:start="81:58" pos:end="81:58">)</operator> <operator pos:start="81:60" pos:end="81:60">|</operator>

              <operator pos:start="83:15" pos:end="83:15">(</operator><operator pos:start="83:16" pos:end="83:16">(</operator><name pos:start="83:17" pos:end="83:24">uint64_t</name><operator pos:start="83:25" pos:end="83:25">)</operator> <name pos:start="83:27" pos:end="83:32"><name pos:start="83:27" pos:end="83:29">buf</name><index pos:start="83:30" pos:end="83:32">[<expr pos:start="83:31" pos:end="83:31"><literal type="number" pos:start="83:31" pos:end="83:31">7</literal></expr>]</index></name> <operator pos:start="83:34" pos:end="83:35">&lt;&lt;</operator> <literal type="number" pos:start="83:37" pos:end="83:38">16</literal><operator pos:start="83:39" pos:end="83:39">)</operator> <operator pos:start="83:41" pos:end="83:41">|</operator> <operator pos:start="83:43" pos:end="83:43">(</operator><operator pos:start="83:44" pos:end="83:44">(</operator><name pos:start="83:45" pos:end="83:52">uint64_t</name><operator pos:start="83:53" pos:end="83:53">)</operator> <name pos:start="83:55" pos:end="83:60"><name pos:start="83:55" pos:end="83:57">buf</name><index pos:start="83:58" pos:end="83:60">[<expr pos:start="83:59" pos:end="83:59"><literal type="number" pos:start="83:59" pos:end="83:59">6</literal></expr>]</index></name> <operator pos:start="83:62" pos:end="83:63">&lt;&lt;</operator> <literal type="number" pos:start="83:65" pos:end="83:66">24</literal><operator pos:start="83:67" pos:end="83:67">)</operator> <operator pos:start="83:69" pos:end="83:69">|</operator>

              <operator pos:start="85:15" pos:end="85:15">(</operator><operator pos:start="85:16" pos:end="85:16">(</operator><name pos:start="85:17" pos:end="85:24">uint64_t</name><operator pos:start="85:25" pos:end="85:25">)</operator> <name pos:start="85:27" pos:end="85:32"><name pos:start="85:27" pos:end="85:29">buf</name><index pos:start="85:30" pos:end="85:32">[<expr pos:start="85:31" pos:end="85:31"><literal type="number" pos:start="85:31" pos:end="85:31">5</literal></expr>]</index></name> <operator pos:start="85:34" pos:end="85:35">&lt;&lt;</operator> <literal type="number" pos:start="85:37" pos:end="85:38">32</literal><operator pos:start="85:39" pos:end="85:39">)</operator> <operator pos:start="85:41" pos:end="85:41">|</operator> <operator pos:start="85:43" pos:end="85:43">(</operator><operator pos:start="85:44" pos:end="85:44">(</operator><name pos:start="85:45" pos:end="85:52">uint64_t</name><operator pos:start="85:53" pos:end="85:53">)</operator> <name pos:start="85:55" pos:end="85:60"><name pos:start="85:55" pos:end="85:57">buf</name><index pos:start="85:58" pos:end="85:60">[<expr pos:start="85:59" pos:end="85:59"><literal type="number" pos:start="85:59" pos:end="85:59">4</literal></expr>]</index></name> <operator pos:start="85:62" pos:end="85:63">&lt;&lt;</operator> <literal type="number" pos:start="85:65" pos:end="85:66">40</literal><operator pos:start="85:67" pos:end="85:67">)</operator> <operator pos:start="85:69" pos:end="85:69">|</operator>

              <operator pos:start="87:15" pos:end="87:15">(</operator><operator pos:start="87:16" pos:end="87:16">(</operator><name pos:start="87:17" pos:end="87:24">uint64_t</name><operator pos:start="87:25" pos:end="87:25">)</operator> <name pos:start="87:27" pos:end="87:32"><name pos:start="87:27" pos:end="87:29">buf</name><index pos:start="87:30" pos:end="87:32">[<expr pos:start="87:31" pos:end="87:31"><literal type="number" pos:start="87:31" pos:end="87:31">3</literal></expr>]</index></name> <operator pos:start="87:34" pos:end="87:35">&lt;&lt;</operator> <literal type="number" pos:start="87:37" pos:end="87:38">48</literal><operator pos:start="87:39" pos:end="87:39">)</operator> <operator pos:start="87:41" pos:end="87:41">|</operator> <operator pos:start="87:43" pos:end="87:43">(</operator><operator pos:start="87:44" pos:end="87:44">(</operator><name pos:start="87:45" pos:end="87:52">uint64_t</name><operator pos:start="87:53" pos:end="87:53">)</operator> <name pos:start="87:55" pos:end="87:60"><name pos:start="87:55" pos:end="87:57">buf</name><index pos:start="87:58" pos:end="87:60">[<expr pos:start="87:59" pos:end="87:59"><literal type="number" pos:start="87:59" pos:end="87:59">2</literal></expr>]</index></name> <operator pos:start="87:62" pos:end="87:63">&lt;&lt;</operator> <literal type="number" pos:start="87:65" pos:end="87:66">56</literal><operator pos:start="87:67" pos:end="87:67">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:75"><expr pos:start="89:9" pos:end="89:74"><name pos:start="89:9" pos:end="89:11">len</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <name pos:start="89:15" pos:end="89:21"><name pos:start="89:15" pos:end="89:17">buf</name><index pos:start="89:18" pos:end="89:21">[<expr pos:start="89:19" pos:end="89:20"><literal type="number" pos:start="89:19" pos:end="89:20">13</literal></expr>]</index></name> <operator pos:start="89:23" pos:end="89:23">|</operator> <operator pos:start="89:25" pos:end="89:25">(</operator><name pos:start="89:26" pos:end="89:32"><name pos:start="89:26" pos:end="89:28">buf</name><index pos:start="89:29" pos:end="89:32">[<expr pos:start="89:30" pos:end="89:31"><literal type="number" pos:start="89:30" pos:end="89:31">12</literal></expr>]</index></name> <operator pos:start="89:34" pos:end="89:35">&lt;&lt;</operator> <literal type="number" pos:start="89:37" pos:end="89:37">8</literal><operator pos:start="89:38" pos:end="89:38">)</operator> <operator pos:start="89:40" pos:end="89:40">|</operator> <operator pos:start="89:42" pos:end="89:42">(</operator><name pos:start="89:43" pos:end="89:49"><name pos:start="89:43" pos:end="89:45">buf</name><index pos:start="89:46" pos:end="89:49">[<expr pos:start="89:47" pos:end="89:48"><literal type="number" pos:start="89:47" pos:end="89:48">11</literal></expr>]</index></name> <operator pos:start="89:51" pos:end="89:52">&lt;&lt;</operator> <literal type="number" pos:start="89:54" pos:end="89:55">16</literal><operator pos:start="89:56" pos:end="89:56">)</operator> <operator pos:start="89:58" pos:end="89:58">|</operator> <operator pos:start="89:60" pos:end="89:60">(</operator><name pos:start="89:61" pos:end="89:67"><name pos:start="89:61" pos:end="89:63">buf</name><index pos:start="89:64" pos:end="89:67">[<expr pos:start="89:65" pos:end="89:66"><literal type="number" pos:start="89:65" pos:end="89:66">10</literal></expr>]</index></name> <operator pos:start="89:69" pos:end="89:70">&lt;&lt;</operator> <literal type="number" pos:start="89:72" pos:end="89:73">24</literal><operator pos:start="89:74" pos:end="89:74">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:20"><expr pos:start="91:9" pos:end="91:19"><name pos:start="91:9" pos:end="91:14">cmdlen</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="number" pos:start="91:18" pos:end="91:19">16</literal></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:11">case <expr pos:start="95:10" pos:end="95:10"><literal type="number" pos:start="95:10" pos:end="95:10">5</literal></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="99:68"><expr pos:start="97:9" pos:end="99:67"><name pos:start="97:9" pos:end="97:11">lba</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <operator pos:start="97:15" pos:end="97:15">(</operator><name pos:start="97:16" pos:end="97:23">uint64_t</name><operator pos:start="97:24" pos:end="97:24">)</operator> <name pos:start="97:26" pos:end="97:31"><name pos:start="97:26" pos:end="97:28">buf</name><index pos:start="97:29" pos:end="97:31">[<expr pos:start="97:30" pos:end="97:30"><literal type="number" pos:start="97:30" pos:end="97:30">5</literal></expr>]</index></name> <operator pos:start="97:33" pos:end="97:33">|</operator> <operator pos:start="97:35" pos:end="97:35">(</operator><operator pos:start="97:36" pos:end="97:36">(</operator><name pos:start="97:37" pos:end="97:44">uint64_t</name><operator pos:start="97:45" pos:end="97:45">)</operator> <name pos:start="97:47" pos:end="97:52"><name pos:start="97:47" pos:end="97:49">buf</name><index pos:start="97:50" pos:end="97:52">[<expr pos:start="97:51" pos:end="97:51"><literal type="number" pos:start="97:51" pos:end="97:51">4</literal></expr>]</index></name> <operator pos:start="97:54" pos:end="97:55">&lt;&lt;</operator> <literal type="number" pos:start="97:57" pos:end="97:57">8</literal><operator pos:start="97:58" pos:end="97:58">)</operator> <operator pos:start="97:60" pos:end="97:60">|</operator>

              <operator pos:start="99:15" pos:end="99:15">(</operator><operator pos:start="99:16" pos:end="99:16">(</operator><name pos:start="99:17" pos:end="99:24">uint64_t</name><operator pos:start="99:25" pos:end="99:25">)</operator> <name pos:start="99:27" pos:end="99:32"><name pos:start="99:27" pos:end="99:29">buf</name><index pos:start="99:30" pos:end="99:32">[<expr pos:start="99:31" pos:end="99:31"><literal type="number" pos:start="99:31" pos:end="99:31">3</literal></expr>]</index></name> <operator pos:start="99:34" pos:end="99:35">&lt;&lt;</operator> <literal type="number" pos:start="99:37" pos:end="99:38">16</literal><operator pos:start="99:39" pos:end="99:39">)</operator> <operator pos:start="99:41" pos:end="99:41">|</operator> <operator pos:start="99:43" pos:end="99:43">(</operator><operator pos:start="99:44" pos:end="99:44">(</operator><name pos:start="99:45" pos:end="99:52">uint64_t</name><operator pos:start="99:53" pos:end="99:53">)</operator> <name pos:start="99:55" pos:end="99:60"><name pos:start="99:55" pos:end="99:57">buf</name><index pos:start="99:58" pos:end="99:60">[<expr pos:start="99:59" pos:end="99:59"><literal type="number" pos:start="99:59" pos:end="99:59">2</literal></expr>]</index></name> <operator pos:start="99:62" pos:end="99:63">&lt;&lt;</operator> <literal type="number" pos:start="99:65" pos:end="99:66">24</literal><operator pos:start="99:67" pos:end="99:67">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:71"><expr pos:start="101:9" pos:end="101:70"><name pos:start="101:9" pos:end="101:11">len</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <name pos:start="101:15" pos:end="101:20"><name pos:start="101:15" pos:end="101:17">buf</name><index pos:start="101:18" pos:end="101:20">[<expr pos:start="101:19" pos:end="101:19"><literal type="number" pos:start="101:19" pos:end="101:19">9</literal></expr>]</index></name> <operator pos:start="101:22" pos:end="101:22">|</operator> <operator pos:start="101:24" pos:end="101:24">(</operator><name pos:start="101:25" pos:end="101:30"><name pos:start="101:25" pos:end="101:27">buf</name><index pos:start="101:28" pos:end="101:30">[<expr pos:start="101:29" pos:end="101:29"><literal type="number" pos:start="101:29" pos:end="101:29">8</literal></expr>]</index></name> <operator pos:start="101:32" pos:end="101:33">&lt;&lt;</operator> <literal type="number" pos:start="101:35" pos:end="101:35">8</literal><operator pos:start="101:36" pos:end="101:36">)</operator> <operator pos:start="101:38" pos:end="101:38">|</operator> <operator pos:start="101:40" pos:end="101:40">(</operator><name pos:start="101:41" pos:end="101:46"><name pos:start="101:41" pos:end="101:43">buf</name><index pos:start="101:44" pos:end="101:46">[<expr pos:start="101:45" pos:end="101:45"><literal type="number" pos:start="101:45" pos:end="101:45">7</literal></expr>]</index></name> <operator pos:start="101:48" pos:end="101:49">&lt;&lt;</operator> <literal type="number" pos:start="101:51" pos:end="101:52">16</literal><operator pos:start="101:53" pos:end="101:53">)</operator> <operator pos:start="101:55" pos:end="101:55">|</operator> <operator pos:start="101:57" pos:end="101:57">(</operator><name pos:start="101:58" pos:end="101:63"><name pos:start="101:58" pos:end="101:60">buf</name><index pos:start="101:61" pos:end="101:63">[<expr pos:start="101:62" pos:end="101:62"><literal type="number" pos:start="101:62" pos:end="101:62">6</literal></expr>]</index></name> <operator pos:start="101:65" pos:end="101:66">&lt;&lt;</operator> <literal type="number" pos:start="101:68" pos:end="101:69">24</literal><operator pos:start="101:70" pos:end="101:70">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:20"><expr pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:14">cmdlen</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <literal type="number" pos:start="103:18" pos:end="103:19">12</literal></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <default pos:start="107:5" pos:end="107:12">default:</default>

        <expr_stmt pos:start="109:9" pos:end="109:66"><expr pos:start="109:9" pos:end="109:65"><call pos:start="109:9" pos:end="109:65"><name pos:start="109:9" pos:end="109:12">BADF</name><argument_list pos:start="109:13" pos:end="109:65">(<argument pos:start="109:14" pos:end="109:55"><expr pos:start="109:14" pos:end="109:55"><literal type="string" pos:start="109:14" pos:end="109:55">"Unsupported command length, command %x\n"</literal></expr></argument>, <argument pos:start="109:58" pos:end="109:64"><expr pos:start="109:58" pos:end="109:64"><name pos:start="109:58" pos:end="109:64">command</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="111:9" pos:end="111:18">goto <name pos:start="111:14" pos:end="111:17">fail</name>;</goto>

    </block_content>}</block></switch>

<cpp:ifdef pos:start="115:1" pos:end="115:17">#<cpp:directive pos:start="115:2" pos:end="115:6">ifdef</cpp:directive> <name pos:start="115:8" pos:end="115:17">DEBUG_SCSI</name></cpp:ifdef>

    <block pos:start="117:5" pos:end="132:0">{<block_content pos:start="119:9" pos:end="127:21">

        <decl_stmt pos:start="119:9" pos:end="119:14"><decl pos:start="119:9" pos:end="119:13"><type pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:11">int</name></type> <name pos:start="119:13" pos:end="119:13">i</name></decl>;</decl_stmt>

        <for pos:start="121:9" pos:end="125:9">for <control pos:start="121:13" pos:end="121:36">(<init pos:start="121:14" pos:end="121:19"><expr pos:start="121:14" pos:end="121:18"><name pos:start="121:14" pos:end="121:14">i</name> <operator pos:start="121:16" pos:end="121:16">=</operator> <literal type="number" pos:start="121:18" pos:end="121:18">1</literal></expr>;</init> <condition pos:start="121:21" pos:end="121:31"><expr pos:start="121:21" pos:end="121:30"><name pos:start="121:21" pos:end="121:21">i</name> <operator pos:start="121:23" pos:end="121:23">&lt;</operator> <name pos:start="121:25" pos:end="121:30">cmdlen</name></expr>;</condition> <incr pos:start="121:33" pos:end="121:35"><expr pos:start="121:33" pos:end="121:35"><name pos:start="121:33" pos:end="121:33">i</name><operator pos:start="121:34" pos:end="121:35">++</operator></expr></incr>)</control> <block pos:start="121:38" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:38">

            <expr_stmt pos:start="123:13" pos:end="123:38"><expr pos:start="123:13" pos:end="123:37"><call pos:start="123:13" pos:end="123:37"><name pos:start="123:13" pos:end="123:18">printf</name><argument_list pos:start="123:19" pos:end="123:37">(<argument pos:start="123:20" pos:end="123:28"><expr pos:start="123:20" pos:end="123:28"><literal type="string" pos:start="123:20" pos:end="123:28">" 0x%02x"</literal></expr></argument>, <argument pos:start="123:31" pos:end="123:36"><expr pos:start="123:31" pos:end="123:36"><name pos:start="123:31" pos:end="123:36"><name pos:start="123:31" pos:end="123:33">buf</name><index pos:start="123:34" pos:end="123:36">[<expr pos:start="123:35" pos:end="123:35"><name pos:start="123:35" pos:end="123:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="127:9" pos:end="127:21"><expr pos:start="127:9" pos:end="127:20"><call pos:start="127:9" pos:end="127:20"><name pos:start="127:9" pos:end="127:14">printf</name><argument_list pos:start="127:15" pos:end="127:20">(<argument pos:start="127:16" pos:end="127:19"><expr pos:start="127:16" pos:end="127:19"><literal type="string" pos:start="127:16" pos:end="127:19">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:endif pos:start="131:1" pos:end="131:6">#<cpp:directive pos:start="131:2" pos:end="131:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="133:5" pos:end="143:5"><if pos:start="133:5" pos:end="143:5">if <condition pos:start="133:8" pos:end="133:27">(<expr pos:start="133:9" pos:end="133:26"><name pos:start="133:9" pos:end="133:11">lun</name> <operator pos:start="133:13" pos:end="133:14">||</operator> <name pos:start="133:16" pos:end="133:21"><name pos:start="133:16" pos:end="133:18">buf</name><index pos:start="133:19" pos:end="133:21">[<expr pos:start="133:20" pos:end="133:20"><literal type="number" pos:start="133:20" pos:end="133:20">1</literal></expr>]</index></name> <operator pos:start="133:23" pos:end="133:24">&gt;&gt;</operator> <literal type="number" pos:start="133:26" pos:end="133:26">5</literal></expr>)</condition> <block pos:start="133:29" pos:end="143:5">{<block_content pos:start="137:9" pos:end="141:22">

        <comment type="block" pos:start="135:9" pos:end="135:36">/* Only LUN 0 supported.  */</comment>

        <expr_stmt pos:start="137:9" pos:end="137:67"><expr pos:start="137:9" pos:end="137:66"><call pos:start="137:9" pos:end="137:66"><name pos:start="137:9" pos:end="137:15">DPRINTF</name><argument_list pos:start="137:16" pos:end="137:66">(<argument pos:start="137:17" pos:end="137:40"><expr pos:start="137:17" pos:end="137:40"><literal type="string" pos:start="137:17" pos:end="137:40">"Unimplemented LUN %d\n"</literal></expr></argument>, <argument pos:start="137:43" pos:end="137:65"><expr pos:start="137:43" pos:end="137:65"><ternary pos:start="137:43" pos:end="137:65"><condition pos:start="137:43" pos:end="137:47"><expr pos:start="137:43" pos:end="137:45"><name pos:start="137:43" pos:end="137:45">lun</name></expr> ?</condition><then pos:start="137:49" pos:end="137:51"> <expr pos:start="137:49" pos:end="137:51"><name pos:start="137:49" pos:end="137:51">lun</name></expr> </then><else pos:start="137:53" pos:end="137:65">: <expr pos:start="137:55" pos:end="137:65"><name pos:start="137:55" pos:end="137:60"><name pos:start="137:55" pos:end="137:57">buf</name><index pos:start="137:58" pos:end="137:60">[<expr pos:start="137:59" pos:end="137:59"><literal type="number" pos:start="137:59" pos:end="137:59">1</literal></expr>]</index></name> <operator pos:start="137:62" pos:end="137:63">&gt;&gt;</operator> <literal type="number" pos:start="137:65" pos:end="137:65">5</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="141:22"><if pos:start="139:9" pos:end="141:22">if <condition pos:start="139:12" pos:end="139:47">(<expr pos:start="139:13" pos:end="139:46"><name pos:start="139:13" pos:end="139:19">command</name> <operator pos:start="139:21" pos:end="139:22">!=</operator> <literal type="number" pos:start="139:24" pos:end="139:27">0x03</literal> <operator pos:start="139:29" pos:end="139:30">&amp;&amp;</operator> <name pos:start="139:32" pos:end="139:38">command</name> <operator pos:start="139:40" pos:end="139:41">!=</operator> <literal type="number" pos:start="139:43" pos:end="139:46">0x12</literal></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:22"><block_content pos:start="141:13" pos:end="141:22"> <comment type="block" pos:start="139:49" pos:end="139:79">/* REQUEST SENSE and INQUIRY */</comment>

            <goto pos:start="141:13" pos:end="141:22">goto <name pos:start="141:18" pos:end="141:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="145:5" pos:end="1131:5">switch <condition pos:start="145:12" pos:end="145:20">(<expr pos:start="145:13" pos:end="145:19"><name pos:start="145:13" pos:end="145:19">command</name></expr>)</condition> <block pos:start="145:22" pos:end="1131:5">{<block_content pos:start="147:5" pos:end="1129:17">

    <case pos:start="147:5" pos:end="147:13">case <expr pos:start="147:10" pos:end="147:12"><literal type="number" pos:start="147:10" pos:end="147:12">0x0</literal></expr>:</case>

	<expr_stmt pos:start="149:9" pos:end="149:37"><expr pos:start="149:9" pos:end="149:36"><call pos:start="149:9" pos:end="149:36"><name pos:start="149:9" pos:end="149:15">DPRINTF</name><argument_list pos:start="149:16" pos:end="149:36">(<argument pos:start="149:17" pos:end="149:35"><expr pos:start="149:17" pos:end="149:35"><literal type="string" pos:start="149:17" pos:end="149:35">"Test Unit Ready\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="151:9" pos:end="153:26"><if pos:start="151:9" pos:end="153:26">if <condition pos:start="151:12" pos:end="151:46">(<expr pos:start="151:13" pos:end="151:45"><operator pos:start="151:13" pos:end="151:13">!</operator><call pos:start="151:14" pos:end="151:45"><name pos:start="151:14" pos:end="151:29">bdrv_is_inserted</name><argument_list pos:start="151:30" pos:end="151:45">(<argument pos:start="151:31" pos:end="151:44"><expr pos:start="151:31" pos:end="151:44"><name pos:start="151:31" pos:end="151:44"><name pos:start="151:31" pos:end="151:31">s</name><operator pos:start="151:32" pos:end="151:33">-&gt;</operator><name pos:start="151:34" pos:end="151:38">dinfo</name><operator pos:start="151:39" pos:end="151:40">-&gt;</operator><name pos:start="151:41" pos:end="151:44">bdrv</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:26"><block_content pos:start="153:13" pos:end="153:26">

            <goto pos:start="153:13" pos:end="153:26">goto <name pos:start="153:18" pos:end="153:25">notready</name>;</goto></block_content></block></if></if_stmt>

	<break pos:start="155:9" pos:end="155:14">break;</break>

    <case pos:start="157:5" pos:end="157:14">case <expr pos:start="157:10" pos:end="157:13"><literal type="number" pos:start="157:10" pos:end="157:13">0x03</literal></expr>:</case>

        <expr_stmt pos:start="159:9" pos:end="159:49"><expr pos:start="159:9" pos:end="159:48"><call pos:start="159:9" pos:end="159:48"><name pos:start="159:9" pos:end="159:15">DPRINTF</name><argument_list pos:start="159:16" pos:end="159:48">(<argument pos:start="159:17" pos:end="159:42"><expr pos:start="159:17" pos:end="159:42"><literal type="string" pos:start="159:17" pos:end="159:42">"Request Sense (len %d)\n"</literal></expr></argument>, <argument pos:start="159:45" pos:end="159:47"><expr pos:start="159:45" pos:end="159:47"><name pos:start="159:45" pos:end="159:47">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="161:9" pos:end="163:22"><if pos:start="161:9" pos:end="163:22">if <condition pos:start="161:12" pos:end="161:20">(<expr pos:start="161:13" pos:end="161:19"><name pos:start="161:13" pos:end="161:15">len</name> <operator pos:start="161:17" pos:end="161:17">&lt;</operator> <literal type="number" pos:start="161:19" pos:end="161:19">4</literal></expr>)</condition><block type="pseudo" pos:start="163:13" pos:end="163:22"><block_content pos:start="163:13" pos:end="163:22">

            <goto pos:start="163:13" pos:end="163:22">goto <name pos:start="163:18" pos:end="163:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:29"><expr pos:start="165:9" pos:end="165:28"><call pos:start="165:9" pos:end="165:28"><name pos:start="165:9" pos:end="165:14">memset</name><argument_list pos:start="165:15" pos:end="165:28">(<argument pos:start="165:16" pos:end="165:21"><expr pos:start="165:16" pos:end="165:21"><name pos:start="165:16" pos:end="165:21">outbuf</name></expr></argument>, <argument pos:start="165:24" pos:end="165:24"><expr pos:start="165:24" pos:end="165:24"><literal type="number" pos:start="165:24" pos:end="165:24">0</literal></expr></argument>, <argument pos:start="165:27" pos:end="165:27"><expr pos:start="165:27" pos:end="165:27"><literal type="number" pos:start="165:27" pos:end="165:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:27"><expr pos:start="167:9" pos:end="167:26"><name pos:start="167:9" pos:end="167:22"><name pos:start="167:9" pos:end="167:9">r</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:14">iov</name><operator pos:start="167:15" pos:end="167:15">.</operator><name pos:start="167:16" pos:end="167:22">iov_len</name></name> <operator pos:start="167:24" pos:end="167:24">=</operator> <literal type="number" pos:start="167:26" pos:end="167:26">4</literal></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="183:9"><if pos:start="169:9" pos:end="183:9">if <condition pos:start="169:12" pos:end="169:53">(<expr pos:start="169:13" pos:end="169:52"><name pos:start="169:13" pos:end="169:20"><name pos:start="169:13" pos:end="169:13">s</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:20">sense</name></name> <operator pos:start="169:22" pos:end="169:23">==</operator> <name pos:start="169:25" pos:end="169:39">SENSE_NOT_READY</name> <operator pos:start="169:41" pos:end="169:42">&amp;&amp;</operator> <name pos:start="169:44" pos:end="169:46">len</name> <operator pos:start="169:48" pos:end="169:49">&gt;=</operator> <literal type="number" pos:start="169:51" pos:end="169:52">18</literal></expr>)</condition> <block pos:start="169:55" pos:end="183:9">{<block_content pos:start="171:13" pos:end="181:27">

            <expr_stmt pos:start="171:13" pos:end="171:34"><expr pos:start="171:13" pos:end="171:33"><call pos:start="171:13" pos:end="171:33"><name pos:start="171:13" pos:end="171:18">memset</name><argument_list pos:start="171:19" pos:end="171:33">(<argument pos:start="171:20" pos:end="171:25"><expr pos:start="171:20" pos:end="171:25"><name pos:start="171:20" pos:end="171:25">outbuf</name></expr></argument>, <argument pos:start="171:28" pos:end="171:28"><expr pos:start="171:28" pos:end="171:28"><literal type="number" pos:start="171:28" pos:end="171:28">0</literal></expr></argument>, <argument pos:start="171:31" pos:end="171:32"><expr pos:start="171:31" pos:end="171:32"><literal type="number" pos:start="171:31" pos:end="171:32">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:32"><expr pos:start="173:13" pos:end="173:31"><name pos:start="173:13" pos:end="173:26"><name pos:start="173:13" pos:end="173:13">r</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:18">iov</name><operator pos:start="173:19" pos:end="173:19">.</operator><name pos:start="173:20" pos:end="173:26">iov_len</name></name> <operator pos:start="173:28" pos:end="173:28">=</operator> <literal type="number" pos:start="173:30" pos:end="173:31">18</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:27"><expr pos:start="175:13" pos:end="175:26"><name pos:start="175:13" pos:end="175:21"><name pos:start="175:13" pos:end="175:18">outbuf</name><index pos:start="175:19" pos:end="175:21">[<expr pos:start="175:20" pos:end="175:20"><literal type="number" pos:start="175:20" pos:end="175:20">7</literal></expr>]</index></name> <operator pos:start="175:23" pos:end="175:23">=</operator> <literal type="number" pos:start="175:25" pos:end="175:26">10</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="177:13" pos:end="177:54">/* asc 0x3a, ascq 0: Medium not present */</comment>

            <expr_stmt pos:start="179:13" pos:end="179:30"><expr pos:start="179:13" pos:end="179:29"><name pos:start="179:13" pos:end="179:22"><name pos:start="179:13" pos:end="179:18">outbuf</name><index pos:start="179:19" pos:end="179:22">[<expr pos:start="179:20" pos:end="179:21"><literal type="number" pos:start="179:20" pos:end="179:21">12</literal></expr>]</index></name> <operator pos:start="179:24" pos:end="179:24">=</operator> <literal type="number" pos:start="179:26" pos:end="179:29">0x3a</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:27"><expr pos:start="181:13" pos:end="181:26"><name pos:start="181:13" pos:end="181:22"><name pos:start="181:13" pos:end="181:18">outbuf</name><index pos:start="181:19" pos:end="181:22">[<expr pos:start="181:20" pos:end="181:21"><literal type="number" pos:start="181:20" pos:end="181:21">13</literal></expr>]</index></name> <operator pos:start="181:24" pos:end="181:24">=</operator> <literal type="number" pos:start="181:26" pos:end="181:26">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:25"><expr pos:start="185:9" pos:end="185:24"><name pos:start="185:9" pos:end="185:17"><name pos:start="185:9" pos:end="185:14">outbuf</name><index pos:start="185:15" pos:end="185:17">[<expr pos:start="185:16" pos:end="185:16"><literal type="number" pos:start="185:16" pos:end="185:16">0</literal></expr>]</index></name> <operator pos:start="185:19" pos:end="185:19">=</operator> <literal type="number" pos:start="185:21" pos:end="185:24">0xf0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:22"><expr pos:start="187:9" pos:end="187:21"><name pos:start="187:9" pos:end="187:17"><name pos:start="187:9" pos:end="187:14">outbuf</name><index pos:start="187:15" pos:end="187:17">[<expr pos:start="187:16" pos:end="187:16"><literal type="number" pos:start="187:16" pos:end="187:16">1</literal></expr>]</index></name> <operator pos:start="187:19" pos:end="187:19">=</operator> <literal type="number" pos:start="187:21" pos:end="187:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:29"><expr pos:start="189:9" pos:end="189:28"><name pos:start="189:9" pos:end="189:17"><name pos:start="189:9" pos:end="189:14">outbuf</name><index pos:start="189:15" pos:end="189:17">[<expr pos:start="189:16" pos:end="189:16"><literal type="number" pos:start="189:16" pos:end="189:16">2</literal></expr>]</index></name> <operator pos:start="189:19" pos:end="189:19">=</operator> <name pos:start="189:21" pos:end="189:28"><name pos:start="189:21" pos:end="189:21">s</name><operator pos:start="189:22" pos:end="189:23">-&gt;</operator><name pos:start="189:24" pos:end="189:28">sense</name></name></expr>;</expr_stmt>

        <break pos:start="191:9" pos:end="191:14">break;</break>

    <case pos:start="193:5" pos:end="193:14">case <expr pos:start="193:10" pos:end="193:13"><literal type="number" pos:start="193:10" pos:end="193:13">0x12</literal></expr>:</case>

        <expr_stmt pos:start="195:9" pos:end="195:43"><expr pos:start="195:9" pos:end="195:42"><call pos:start="195:9" pos:end="195:42"><name pos:start="195:9" pos:end="195:15">DPRINTF</name><argument_list pos:start="195:16" pos:end="195:42">(<argument pos:start="195:17" pos:end="195:36"><expr pos:start="195:17" pos:end="195:36"><literal type="string" pos:start="195:17" pos:end="195:36">"Inquiry (len %d)\n"</literal></expr></argument>, <argument pos:start="195:39" pos:end="195:41"><expr pos:start="195:39" pos:end="195:41"><name pos:start="195:39" pos:end="195:41">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="197:9" pos:end="449:9"><if pos:start="197:9" pos:end="205:9">if <condition pos:start="197:12" pos:end="197:25">(<expr pos:start="197:13" pos:end="197:24"><name pos:start="197:13" pos:end="197:18"><name pos:start="197:13" pos:end="197:15">buf</name><index pos:start="197:16" pos:end="197:18">[<expr pos:start="197:17" pos:end="197:17"><literal type="number" pos:start="197:17" pos:end="197:17">1</literal></expr>]</index></name> <operator pos:start="197:20" pos:end="197:20">&amp;</operator> <literal type="number" pos:start="197:22" pos:end="197:24">0x2</literal></expr>)</condition> <block pos:start="197:27" pos:end="205:9">{<block_content pos:start="201:13" pos:end="203:22">

            <comment type="block" pos:start="199:13" pos:end="199:66">/* Command support data - optional, not implemented */</comment>

            <expr_stmt pos:start="201:13" pos:end="201:79"><expr pos:start="201:13" pos:end="201:78"><call pos:start="201:13" pos:end="201:78"><name pos:start="201:13" pos:end="201:16">BADF</name><argument_list pos:start="201:17" pos:end="201:78">(<argument pos:start="201:18" pos:end="201:77"><expr pos:start="201:18" pos:end="201:77"><literal type="string" pos:start="201:18" pos:end="201:77">"optional INQUIRY command support request not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="203:13" pos:end="203:22">goto <name pos:start="203:18" pos:end="203:21">fail</name>;</goto>

        </block_content>}</block></if>

        <if type="elseif" pos:start="207:9" pos:end="409:9">else if <condition pos:start="207:17" pos:end="207:30">(<expr pos:start="207:18" pos:end="207:29"><name pos:start="207:18" pos:end="207:23"><name pos:start="207:18" pos:end="207:20">buf</name><index pos:start="207:21" pos:end="207:23">[<expr pos:start="207:22" pos:end="207:22"><literal type="number" pos:start="207:22" pos:end="207:22">1</literal></expr>]</index></name> <operator pos:start="207:25" pos:end="207:25">&amp;</operator> <literal type="number" pos:start="207:27" pos:end="207:29">0x1</literal></expr>)</condition> <block pos:start="207:32" pos:end="409:9">{<block_content pos:start="211:13" pos:end="407:18">

            <comment type="block" pos:start="209:13" pos:end="209:36">/* Vital product data */</comment>

            <decl_stmt pos:start="211:13" pos:end="211:39"><decl pos:start="211:13" pos:end="211:38"><type pos:start="211:13" pos:end="211:19"><name pos:start="211:13" pos:end="211:19">uint8_t</name></type> <name pos:start="211:21" pos:end="211:29">page_code</name> <init pos:start="211:31" pos:end="211:38">= <expr pos:start="211:33" pos:end="211:38"><name pos:start="211:33" pos:end="211:38"><name pos:start="211:33" pos:end="211:35">buf</name><index pos:start="211:36" pos:end="211:38">[<expr pos:start="211:37" pos:end="211:37"><literal type="number" pos:start="211:37" pos:end="211:37">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="213:13" pos:end="221:13"><if pos:start="213:13" pos:end="221:13">if <condition pos:start="213:16" pos:end="213:24">(<expr pos:start="213:17" pos:end="213:23"><name pos:start="213:17" pos:end="213:19">len</name> <operator pos:start="213:21" pos:end="213:21">&lt;</operator> <literal type="number" pos:start="213:23" pos:end="213:23">4</literal></expr>)</condition> <block pos:start="213:26" pos:end="221:13">{<block_content pos:start="215:17" pos:end="219:26">

                <expr_stmt pos:start="215:17" pos:end="217:54"><expr pos:start="215:17" pos:end="217:53"><call pos:start="215:17" pos:end="217:53"><name pos:start="215:17" pos:end="215:20">BADF</name><argument_list pos:start="215:21" pos:end="217:53">(<argument pos:start="215:22" pos:end="217:36"><expr pos:start="215:22" pos:end="217:36"><literal type="string" pos:start="215:22" pos:end="215:69">"Error: Inquiry (EVPD[%02X]) buffer size %d is "</literal>

                     <literal type="string" pos:start="217:22" pos:end="217:36">"less than 4\n"</literal></expr></argument>, <argument pos:start="217:39" pos:end="217:47"><expr pos:start="217:39" pos:end="217:47"><name pos:start="217:39" pos:end="217:47">page_code</name></expr></argument>, <argument pos:start="217:50" pos:end="217:52"><expr pos:start="217:50" pos:end="217:52"><name pos:start="217:50" pos:end="217:52">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="219:17" pos:end="219:26">goto <name pos:start="219:22" pos:end="219:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <switch pos:start="225:13" pos:end="403:13">switch <condition pos:start="225:20" pos:end="225:30">(<expr pos:start="225:21" pos:end="225:29"><name pos:start="225:21" pos:end="225:29">page_code</name></expr>)</condition> <block pos:start="225:32" pos:end="403:13">{<block_content pos:start="227:17" pos:end="401:30">

                <case pos:start="227:17" pos:end="227:26">case <expr pos:start="227:22" pos:end="227:25"><literal type="number" pos:start="227:22" pos:end="227:25">0x00</literal></expr>:</case>

                    <block pos:start="229:21" pos:end="267:21">{<block_content pos:start="233:25" pos:end="265:56">

                        <comment type="block" pos:start="231:25" pos:end="231:61">/* Supported page codes, mandatory */</comment>

                        <expr_stmt pos:start="233:25" pos:end="235:57"><expr pos:start="233:25" pos:end="235:56"><call pos:start="233:25" pos:end="235:56"><name pos:start="233:25" pos:end="233:31">DPRINTF</name><argument_list pos:start="233:32" pos:end="235:56">(<argument pos:start="233:33" pos:end="235:50"><expr pos:start="233:33" pos:end="235:50"><literal type="string" pos:start="233:33" pos:end="233:64">"Inquiry EVPD[Supported pages] "</literal>

                                <literal type="string" pos:start="235:33" pos:end="235:50">"buffer size %d\n"</literal></expr></argument>, <argument pos:start="235:53" pos:end="235:55"><expr pos:start="235:53" pos:end="235:55"><name pos:start="235:53" pos:end="235:55">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="239:25" pos:end="239:43"><expr pos:start="239:25" pos:end="239:42"><name pos:start="239:25" pos:end="239:38"><name pos:start="239:25" pos:end="239:25">r</name><operator pos:start="239:26" pos:end="239:27">-&gt;</operator><name pos:start="239:28" pos:end="239:30">iov</name><operator pos:start="239:31" pos:end="239:31">.</operator><name pos:start="239:32" pos:end="239:38">iov_len</name></name> <operator pos:start="239:40" pos:end="239:40">=</operator> <literal type="number" pos:start="239:42" pos:end="239:42">0</literal></expr>;</expr_stmt>



                        <if_stmt pos:start="243:25" pos:end="251:25"><if pos:start="243:25" pos:end="247:25">if <condition pos:start="243:28" pos:end="243:82">(<expr pos:start="243:29" pos:end="243:81"><call pos:start="243:29" pos:end="243:62"><name pos:start="243:29" pos:end="243:46">bdrv_get_type_hint</name><argument_list pos:start="243:47" pos:end="243:62">(<argument pos:start="243:48" pos:end="243:61"><expr pos:start="243:48" pos:end="243:61"><name pos:start="243:48" pos:end="243:61"><name pos:start="243:48" pos:end="243:48">s</name><operator pos:start="243:49" pos:end="243:50">-&gt;</operator><name pos:start="243:51" pos:end="243:55">dinfo</name><operator pos:start="243:56" pos:end="243:57">-&gt;</operator><name pos:start="243:58" pos:end="243:61">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="243:64" pos:end="243:65">==</operator> <name pos:start="243:67" pos:end="243:81">BDRV_TYPE_CDROM</name></expr>)</condition> <block pos:start="243:84" pos:end="247:25">{<block_content pos:start="245:29" pos:end="245:57">

                            <expr_stmt pos:start="245:29" pos:end="245:57"><expr pos:start="245:29" pos:end="245:56"><name pos:start="245:29" pos:end="245:52"><name pos:start="245:29" pos:end="245:34">outbuf</name><index pos:start="245:35" pos:end="245:52">[<expr pos:start="245:36" pos:end="245:51"><name pos:start="245:36" pos:end="245:49"><name pos:start="245:36" pos:end="245:36">r</name><operator pos:start="245:37" pos:end="245:38">-&gt;</operator><name pos:start="245:39" pos:end="245:41">iov</name><operator pos:start="245:42" pos:end="245:42">.</operator><name pos:start="245:43" pos:end="245:49">iov_len</name></name><operator pos:start="245:50" pos:end="245:51">++</operator></expr>]</index></name> <operator pos:start="245:54" pos:end="245:54">=</operator> <literal type="number" pos:start="245:56" pos:end="245:56">5</literal></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="247:27" pos:end="251:25">else <block pos:start="247:32" pos:end="251:25">{<block_content pos:start="249:29" pos:end="249:57">

                            <expr_stmt pos:start="249:29" pos:end="249:57"><expr pos:start="249:29" pos:end="249:56"><name pos:start="249:29" pos:end="249:52"><name pos:start="249:29" pos:end="249:34">outbuf</name><index pos:start="249:35" pos:end="249:52">[<expr pos:start="249:36" pos:end="249:51"><name pos:start="249:36" pos:end="249:49"><name pos:start="249:36" pos:end="249:36">r</name><operator pos:start="249:37" pos:end="249:38">-&gt;</operator><name pos:start="249:39" pos:end="249:41">iov</name><operator pos:start="249:42" pos:end="249:42">.</operator><name pos:start="249:43" pos:end="249:49">iov_len</name></name><operator pos:start="249:50" pos:end="249:51">++</operator></expr>]</index></name> <operator pos:start="249:54" pos:end="249:54">=</operator> <literal type="number" pos:start="249:56" pos:end="249:56">0</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>



                        <expr_stmt pos:start="255:25" pos:end="255:56"><expr pos:start="255:25" pos:end="255:55"><name pos:start="255:25" pos:end="255:48"><name pos:start="255:25" pos:end="255:30">outbuf</name><index pos:start="255:31" pos:end="255:48">[<expr pos:start="255:32" pos:end="255:47"><name pos:start="255:32" pos:end="255:45"><name pos:start="255:32" pos:end="255:32">r</name><operator pos:start="255:33" pos:end="255:34">-&gt;</operator><name pos:start="255:35" pos:end="255:37">iov</name><operator pos:start="255:38" pos:end="255:38">.</operator><name pos:start="255:39" pos:end="255:45">iov_len</name></name><operator pos:start="255:46" pos:end="255:47">++</operator></expr>]</index></name> <operator pos:start="255:50" pos:end="255:50">=</operator> <literal type="number" pos:start="255:52" pos:end="255:55">0x00</literal></expr>;</expr_stmt> <comment type="line" pos:start="255:58" pos:end="255:69">// this page</comment>

                        <expr_stmt pos:start="257:25" pos:end="257:56"><expr pos:start="257:25" pos:end="257:55"><name pos:start="257:25" pos:end="257:48"><name pos:start="257:25" pos:end="257:30">outbuf</name><index pos:start="257:31" pos:end="257:48">[<expr pos:start="257:32" pos:end="257:47"><name pos:start="257:32" pos:end="257:45"><name pos:start="257:32" pos:end="257:32">r</name><operator pos:start="257:33" pos:end="257:34">-&gt;</operator><name pos:start="257:35" pos:end="257:37">iov</name><operator pos:start="257:38" pos:end="257:38">.</operator><name pos:start="257:39" pos:end="257:45">iov_len</name></name><operator pos:start="257:46" pos:end="257:47">++</operator></expr>]</index></name> <operator pos:start="257:50" pos:end="257:50">=</operator> <literal type="number" pos:start="257:52" pos:end="257:55">0x00</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="259:25" pos:end="259:53"><expr pos:start="259:25" pos:end="259:52"><name pos:start="259:25" pos:end="259:48"><name pos:start="259:25" pos:end="259:30">outbuf</name><index pos:start="259:31" pos:end="259:48">[<expr pos:start="259:32" pos:end="259:47"><name pos:start="259:32" pos:end="259:45"><name pos:start="259:32" pos:end="259:32">r</name><operator pos:start="259:33" pos:end="259:34">-&gt;</operator><name pos:start="259:35" pos:end="259:37">iov</name><operator pos:start="259:38" pos:end="259:38">.</operator><name pos:start="259:39" pos:end="259:45">iov_len</name></name><operator pos:start="259:46" pos:end="259:47">++</operator></expr>]</index></name> <operator pos:start="259:50" pos:end="259:50">=</operator> <literal type="number" pos:start="259:52" pos:end="259:52">3</literal></expr>;</expr_stmt>    <comment type="line" pos:start="259:58" pos:end="259:75">// number of pages</comment>

                        <expr_stmt pos:start="261:25" pos:end="261:56"><expr pos:start="261:25" pos:end="261:55"><name pos:start="261:25" pos:end="261:48"><name pos:start="261:25" pos:end="261:30">outbuf</name><index pos:start="261:31" pos:end="261:48">[<expr pos:start="261:32" pos:end="261:47"><name pos:start="261:32" pos:end="261:45"><name pos:start="261:32" pos:end="261:32">r</name><operator pos:start="261:33" pos:end="261:34">-&gt;</operator><name pos:start="261:35" pos:end="261:37">iov</name><operator pos:start="261:38" pos:end="261:38">.</operator><name pos:start="261:39" pos:end="261:45">iov_len</name></name><operator pos:start="261:46" pos:end="261:47">++</operator></expr>]</index></name> <operator pos:start="261:50" pos:end="261:50">=</operator> <literal type="number" pos:start="261:52" pos:end="261:55">0x00</literal></expr>;</expr_stmt> <comment type="line" pos:start="261:58" pos:end="261:95">// list of supported pages (this page)</comment>

                        <expr_stmt pos:start="263:25" pos:end="263:56"><expr pos:start="263:25" pos:end="263:55"><name pos:start="263:25" pos:end="263:48"><name pos:start="263:25" pos:end="263:30">outbuf</name><index pos:start="263:31" pos:end="263:48">[<expr pos:start="263:32" pos:end="263:47"><name pos:start="263:32" pos:end="263:45"><name pos:start="263:32" pos:end="263:32">r</name><operator pos:start="263:33" pos:end="263:34">-&gt;</operator><name pos:start="263:35" pos:end="263:37">iov</name><operator pos:start="263:38" pos:end="263:38">.</operator><name pos:start="263:39" pos:end="263:45">iov_len</name></name><operator pos:start="263:46" pos:end="263:47">++</operator></expr>]</index></name> <operator pos:start="263:50" pos:end="263:50">=</operator> <literal type="number" pos:start="263:52" pos:end="263:55">0x80</literal></expr>;</expr_stmt> <comment type="line" pos:start="263:58" pos:end="263:78">// unit serial number</comment>

                        <expr_stmt pos:start="265:25" pos:end="265:56"><expr pos:start="265:25" pos:end="265:55"><name pos:start="265:25" pos:end="265:48"><name pos:start="265:25" pos:end="265:30">outbuf</name><index pos:start="265:31" pos:end="265:48">[<expr pos:start="265:32" pos:end="265:47"><name pos:start="265:32" pos:end="265:45"><name pos:start="265:32" pos:end="265:32">r</name><operator pos:start="265:33" pos:end="265:34">-&gt;</operator><name pos:start="265:35" pos:end="265:37">iov</name><operator pos:start="265:38" pos:end="265:38">.</operator><name pos:start="265:39" pos:end="265:45">iov_len</name></name><operator pos:start="265:46" pos:end="265:47">++</operator></expr>]</index></name> <operator pos:start="265:50" pos:end="265:50">=</operator> <literal type="number" pos:start="265:52" pos:end="265:55">0x83</literal></expr>;</expr_stmt> <comment type="line" pos:start="265:58" pos:end="265:81">// device identification</comment>

                    </block_content>}</block>

                    <break pos:start="269:21" pos:end="269:26">break;</break>

                <case pos:start="271:17" pos:end="271:26">case <expr pos:start="271:22" pos:end="271:25"><literal type="number" pos:start="271:22" pos:end="271:25">0x80</literal></expr>:</case>

                    <block pos:start="273:21" pos:end="327:21">{<block_content pos:start="275:25" pos:end="325:44">

                        <decl_stmt pos:start="275:25" pos:end="275:30"><decl pos:start="275:25" pos:end="275:29"><type pos:start="275:25" pos:end="275:27"><name pos:start="275:25" pos:end="275:27">int</name></type> <name pos:start="275:29" pos:end="275:29">l</name></decl>;</decl_stmt>



                        <comment type="block" pos:start="279:25" pos:end="279:60">/* Device serial number, optional */</comment>

                        <if_stmt pos:start="281:25" pos:end="289:25"><if pos:start="281:25" pos:end="289:25">if <condition pos:start="281:28" pos:end="281:36">(<expr pos:start="281:29" pos:end="281:35"><name pos:start="281:29" pos:end="281:31">len</name> <operator pos:start="281:33" pos:end="281:33">&lt;</operator> <literal type="number" pos:start="281:35" pos:end="281:35">4</literal></expr>)</condition> <block pos:start="281:38" pos:end="289:25">{<block_content pos:start="283:29" pos:end="287:38">

                            <expr_stmt pos:start="283:29" pos:end="285:75"><expr pos:start="283:29" pos:end="285:74"><call pos:start="283:29" pos:end="285:74"><name pos:start="283:29" pos:end="283:32">BADF</name><argument_list pos:start="283:33" pos:end="285:74">(<argument pos:start="283:34" pos:end="285:65"><expr pos:start="283:34" pos:end="285:65"><literal type="string" pos:start="283:34" pos:end="283:77">"Error: EVPD[Serial number] Inquiry buffer "</literal>

                                 <literal type="string" pos:start="285:34" pos:end="285:65">"size %d too small, %d needed\n"</literal></expr></argument>, <argument pos:start="285:68" pos:end="285:70"><expr pos:start="285:68" pos:end="285:70"><name pos:start="285:68" pos:end="285:70">len</name></expr></argument>, <argument pos:start="285:73" pos:end="285:73"><expr pos:start="285:73" pos:end="285:73"><literal type="number" pos:start="285:73" pos:end="285:73">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <goto pos:start="287:29" pos:end="287:38">goto <name pos:start="287:34" pos:end="287:37">fail</name>;</goto>

                        </block_content>}</block></if></if_stmt>



                        <expr_stmt pos:start="293:25" pos:end="293:85"><expr pos:start="293:25" pos:end="293:84"><call pos:start="293:25" pos:end="293:84"><name pos:start="293:25" pos:end="293:31">DPRINTF</name><argument_list pos:start="293:32" pos:end="293:84">(<argument pos:start="293:33" pos:end="293:78"><expr pos:start="293:33" pos:end="293:78"><literal type="string" pos:start="293:33" pos:end="293:78">"Inquiry EVPD[Serial number] buffer size %d\n"</literal></expr></argument>, <argument pos:start="293:81" pos:end="293:83"><expr pos:start="293:81" pos:end="293:83"><name pos:start="293:81" pos:end="293:83">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="295:25" pos:end="295:66"><expr pos:start="295:25" pos:end="295:65"><name pos:start="295:25" pos:end="295:25">l</name> <operator pos:start="295:27" pos:end="295:27">=</operator> <call pos:start="295:29" pos:end="295:65"><name pos:start="295:29" pos:end="295:31">MIN</name><argument_list pos:start="295:32" pos:end="295:65">(<argument pos:start="295:33" pos:end="295:35"><expr pos:start="295:33" pos:end="295:35"><name pos:start="295:33" pos:end="295:35">len</name></expr></argument>, <argument pos:start="295:38" pos:end="295:64"><expr pos:start="295:38" pos:end="295:64"><call pos:start="295:38" pos:end="295:64"><name pos:start="295:38" pos:end="295:43">strlen</name><argument_list pos:start="295:44" pos:end="295:64">(<argument pos:start="295:45" pos:end="295:63"><expr pos:start="295:45" pos:end="295:63"><name pos:start="295:45" pos:end="295:63"><name pos:start="295:45" pos:end="295:45">s</name><operator pos:start="295:46" pos:end="295:47">-&gt;</operator><name pos:start="295:48" pos:end="295:63">drive_serial_str</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="299:25" pos:end="299:43"><expr pos:start="299:25" pos:end="299:42"><name pos:start="299:25" pos:end="299:38"><name pos:start="299:25" pos:end="299:25">r</name><operator pos:start="299:26" pos:end="299:27">-&gt;</operator><name pos:start="299:28" pos:end="299:30">iov</name><operator pos:start="299:31" pos:end="299:31">.</operator><name pos:start="299:32" pos:end="299:38">iov_len</name></name> <operator pos:start="299:40" pos:end="299:40">=</operator> <literal type="number" pos:start="299:42" pos:end="299:42">0</literal></expr>;</expr_stmt>



                        <comment type="block" pos:start="303:25" pos:end="303:50">/* Supported page codes */</comment>

                        <if_stmt pos:start="305:25" pos:end="313:25"><if pos:start="305:25" pos:end="309:25">if <condition pos:start="305:28" pos:end="305:82">(<expr pos:start="305:29" pos:end="305:81"><call pos:start="305:29" pos:end="305:62"><name pos:start="305:29" pos:end="305:46">bdrv_get_type_hint</name><argument_list pos:start="305:47" pos:end="305:62">(<argument pos:start="305:48" pos:end="305:61"><expr pos:start="305:48" pos:end="305:61"><name pos:start="305:48" pos:end="305:61"><name pos:start="305:48" pos:end="305:48">s</name><operator pos:start="305:49" pos:end="305:50">-&gt;</operator><name pos:start="305:51" pos:end="305:55">dinfo</name><operator pos:start="305:56" pos:end="305:57">-&gt;</operator><name pos:start="305:58" pos:end="305:61">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="305:64" pos:end="305:65">==</operator> <name pos:start="305:67" pos:end="305:81">BDRV_TYPE_CDROM</name></expr>)</condition> <block pos:start="305:84" pos:end="309:25">{<block_content pos:start="307:29" pos:end="307:57">

                            <expr_stmt pos:start="307:29" pos:end="307:57"><expr pos:start="307:29" pos:end="307:56"><name pos:start="307:29" pos:end="307:52"><name pos:start="307:29" pos:end="307:34">outbuf</name><index pos:start="307:35" pos:end="307:52">[<expr pos:start="307:36" pos:end="307:51"><name pos:start="307:36" pos:end="307:49"><name pos:start="307:36" pos:end="307:36">r</name><operator pos:start="307:37" pos:end="307:38">-&gt;</operator><name pos:start="307:39" pos:end="307:41">iov</name><operator pos:start="307:42" pos:end="307:42">.</operator><name pos:start="307:43" pos:end="307:49">iov_len</name></name><operator pos:start="307:50" pos:end="307:51">++</operator></expr>]</index></name> <operator pos:start="307:54" pos:end="307:54">=</operator> <literal type="number" pos:start="307:56" pos:end="307:56">5</literal></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="309:27" pos:end="313:25">else <block pos:start="309:32" pos:end="313:25">{<block_content pos:start="311:29" pos:end="311:57">

                            <expr_stmt pos:start="311:29" pos:end="311:57"><expr pos:start="311:29" pos:end="311:56"><name pos:start="311:29" pos:end="311:52"><name pos:start="311:29" pos:end="311:34">outbuf</name><index pos:start="311:35" pos:end="311:52">[<expr pos:start="311:36" pos:end="311:51"><name pos:start="311:36" pos:end="311:49"><name pos:start="311:36" pos:end="311:36">r</name><operator pos:start="311:37" pos:end="311:38">-&gt;</operator><name pos:start="311:39" pos:end="311:41">iov</name><operator pos:start="311:42" pos:end="311:42">.</operator><name pos:start="311:43" pos:end="311:49">iov_len</name></name><operator pos:start="311:50" pos:end="311:51">++</operator></expr>]</index></name> <operator pos:start="311:54" pos:end="311:54">=</operator> <literal type="number" pos:start="311:56" pos:end="311:56">0</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>



                        <expr_stmt pos:start="317:25" pos:end="317:56"><expr pos:start="317:25" pos:end="317:55"><name pos:start="317:25" pos:end="317:48"><name pos:start="317:25" pos:end="317:30">outbuf</name><index pos:start="317:31" pos:end="317:48">[<expr pos:start="317:32" pos:end="317:47"><name pos:start="317:32" pos:end="317:45"><name pos:start="317:32" pos:end="317:32">r</name><operator pos:start="317:33" pos:end="317:34">-&gt;</operator><name pos:start="317:35" pos:end="317:37">iov</name><operator pos:start="317:38" pos:end="317:38">.</operator><name pos:start="317:39" pos:end="317:45">iov_len</name></name><operator pos:start="317:46" pos:end="317:47">++</operator></expr>]</index></name> <operator pos:start="317:50" pos:end="317:50">=</operator> <literal type="number" pos:start="317:52" pos:end="317:55">0x80</literal></expr>;</expr_stmt> <comment type="line" pos:start="317:58" pos:end="317:69">// this page</comment>

                        <expr_stmt pos:start="319:25" pos:end="319:56"><expr pos:start="319:25" pos:end="319:55"><name pos:start="319:25" pos:end="319:48"><name pos:start="319:25" pos:end="319:30">outbuf</name><index pos:start="319:31" pos:end="319:48">[<expr pos:start="319:32" pos:end="319:47"><name pos:start="319:32" pos:end="319:45"><name pos:start="319:32" pos:end="319:32">r</name><operator pos:start="319:33" pos:end="319:34">-&gt;</operator><name pos:start="319:35" pos:end="319:37">iov</name><operator pos:start="319:38" pos:end="319:38">.</operator><name pos:start="319:39" pos:end="319:45">iov_len</name></name><operator pos:start="319:46" pos:end="319:47">++</operator></expr>]</index></name> <operator pos:start="319:50" pos:end="319:50">=</operator> <literal type="number" pos:start="319:52" pos:end="319:55">0x00</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="321:25" pos:end="321:53"><expr pos:start="321:25" pos:end="321:52"><name pos:start="321:25" pos:end="321:48"><name pos:start="321:25" pos:end="321:30">outbuf</name><index pos:start="321:31" pos:end="321:48">[<expr pos:start="321:32" pos:end="321:47"><name pos:start="321:32" pos:end="321:45"><name pos:start="321:32" pos:end="321:32">r</name><operator pos:start="321:33" pos:end="321:34">-&gt;</operator><name pos:start="321:35" pos:end="321:37">iov</name><operator pos:start="321:38" pos:end="321:38">.</operator><name pos:start="321:39" pos:end="321:45">iov_len</name></name><operator pos:start="321:46" pos:end="321:47">++</operator></expr>]</index></name> <operator pos:start="321:50" pos:end="321:50">=</operator> <name pos:start="321:52" pos:end="321:52">l</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="323:25" pos:end="323:80"><expr pos:start="323:25" pos:end="323:79"><call pos:start="323:25" pos:end="323:79"><name pos:start="323:25" pos:end="323:30">memcpy</name><argument_list pos:start="323:31" pos:end="323:79">(<argument pos:start="323:32" pos:end="323:54"><expr pos:start="323:32" pos:end="323:54"><operator pos:start="323:32" pos:end="323:32">&amp;</operator><name pos:start="323:33" pos:end="323:54"><name pos:start="323:33" pos:end="323:38">outbuf</name><index pos:start="323:39" pos:end="323:54">[<expr pos:start="323:40" pos:end="323:53"><name pos:start="323:40" pos:end="323:53"><name pos:start="323:40" pos:end="323:40">r</name><operator pos:start="323:41" pos:end="323:42">-&gt;</operator><name pos:start="323:43" pos:end="323:45">iov</name><operator pos:start="323:46" pos:end="323:46">.</operator><name pos:start="323:47" pos:end="323:53">iov_len</name></name></expr>]</index></name></expr></argument>, <argument pos:start="323:57" pos:end="323:75"><expr pos:start="323:57" pos:end="323:75"><name pos:start="323:57" pos:end="323:75"><name pos:start="323:57" pos:end="323:57">s</name><operator pos:start="323:58" pos:end="323:59">-&gt;</operator><name pos:start="323:60" pos:end="323:75">drive_serial_str</name></name></expr></argument>, <argument pos:start="323:78" pos:end="323:78"><expr pos:start="323:78" pos:end="323:78"><name pos:start="323:78" pos:end="323:78">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="325:25" pos:end="325:44"><expr pos:start="325:25" pos:end="325:43"><name pos:start="325:25" pos:end="325:38"><name pos:start="325:25" pos:end="325:25">r</name><operator pos:start="325:26" pos:end="325:27">-&gt;</operator><name pos:start="325:28" pos:end="325:30">iov</name><operator pos:start="325:31" pos:end="325:31">.</operator><name pos:start="325:32" pos:end="325:38">iov_len</name></name> <operator pos:start="325:40" pos:end="325:41">+=</operator> <name pos:start="325:43" pos:end="325:43">l</name></expr>;</expr_stmt>

                    </block_content>}</block>



                    <break pos:start="331:21" pos:end="331:26">break;</break>

                <case pos:start="333:17" pos:end="333:26">case <expr pos:start="333:22" pos:end="333:25"><literal type="number" pos:start="333:22" pos:end="333:25">0x83</literal></expr>:</case>

                    <block pos:start="335:21" pos:end="391:21">{<block_content pos:start="339:25" pos:end="389:49">

                        <comment type="block" pos:start="337:25" pos:end="337:67">/* Device identification page, mandatory */</comment>

                        <decl_stmt pos:start="339:25" pos:end="339:46"><decl pos:start="339:25" pos:end="339:45"><type pos:start="339:25" pos:end="339:27"><name pos:start="339:25" pos:end="339:27">int</name></type> <name pos:start="339:29" pos:end="339:35">max_len</name> <init pos:start="339:37" pos:end="339:45">= <expr pos:start="339:39" pos:end="339:45"><literal type="number" pos:start="339:39" pos:end="339:43">255</literal> <operator pos:start="339:43" pos:end="339:43">-</operator> <literal type="number" pos:start="339:45" pos:end="339:45">8</literal></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="341:25" pos:end="341:82"><decl pos:start="341:25" pos:end="341:81"><type pos:start="341:25" pos:end="341:27"><name pos:start="341:25" pos:end="341:27">int</name></type> <name pos:start="341:29" pos:end="341:34">id_len</name> <init pos:start="341:36" pos:end="341:81">= <expr pos:start="341:38" pos:end="341:81"><call pos:start="341:38" pos:end="341:81"><name pos:start="341:38" pos:end="341:43">strlen</name><argument_list pos:start="341:44" pos:end="341:81">(<argument pos:start="341:45" pos:end="341:80"><expr pos:start="341:45" pos:end="341:80"><call pos:start="341:45" pos:end="341:80"><name pos:start="341:45" pos:end="341:64">bdrv_get_device_name</name><argument_list pos:start="341:65" pos:end="341:80">(<argument pos:start="341:66" pos:end="341:79"><expr pos:start="341:66" pos:end="341:79"><name pos:start="341:66" pos:end="341:79"><name pos:start="341:66" pos:end="341:66">s</name><operator pos:start="341:67" pos:end="341:68">-&gt;</operator><name pos:start="341:69" pos:end="341:73">dinfo</name><operator pos:start="341:74" pos:end="341:75">-&gt;</operator><name pos:start="341:76" pos:end="341:79">bdrv</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="343:25" pos:end="345:45"><if pos:start="343:25" pos:end="345:45">if <condition pos:start="343:28" pos:end="343:45">(<expr pos:start="343:29" pos:end="343:44"><name pos:start="343:29" pos:end="343:34">id_len</name> <operator pos:start="343:36" pos:end="343:36">&gt;</operator> <name pos:start="343:38" pos:end="343:44">max_len</name></expr>)</condition><block type="pseudo" pos:start="345:29" pos:end="345:45"><block_content pos:start="345:29" pos:end="345:45">

                            <expr_stmt pos:start="345:29" pos:end="345:45"><expr pos:start="345:29" pos:end="345:44"><name pos:start="345:29" pos:end="345:34">id_len</name> <operator pos:start="345:36" pos:end="345:36">=</operator> <name pos:start="345:38" pos:end="345:44">max_len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="349:25" pos:end="351:57"><expr pos:start="349:25" pos:end="351:56"><call pos:start="349:25" pos:end="351:56"><name pos:start="349:25" pos:end="349:31">DPRINTF</name><argument_list pos:start="349:32" pos:end="351:56">(<argument pos:start="349:33" pos:end="351:50"><expr pos:start="349:33" pos:end="351:50"><literal type="string" pos:start="349:33" pos:end="349:70">"Inquiry EVPD[Device identification] "</literal>

                                <literal type="string" pos:start="351:33" pos:end="351:50">"buffer size %d\n"</literal></expr></argument>, <argument pos:start="351:53" pos:end="351:55"><expr pos:start="351:53" pos:end="351:55"><name pos:start="351:53" pos:end="351:55">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="353:25" pos:end="353:43"><expr pos:start="353:25" pos:end="353:42"><name pos:start="353:25" pos:end="353:38"><name pos:start="353:25" pos:end="353:25">r</name><operator pos:start="353:26" pos:end="353:27">-&gt;</operator><name pos:start="353:28" pos:end="353:30">iov</name><operator pos:start="353:31" pos:end="353:31">.</operator><name pos:start="353:32" pos:end="353:38">iov_len</name></name> <operator pos:start="353:40" pos:end="353:40">=</operator> <literal type="number" pos:start="353:42" pos:end="353:42">0</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="355:25" pos:end="363:25"><if pos:start="355:25" pos:end="359:25">if <condition pos:start="355:28" pos:end="355:82">(<expr pos:start="355:29" pos:end="355:81"><call pos:start="355:29" pos:end="355:62"><name pos:start="355:29" pos:end="355:46">bdrv_get_type_hint</name><argument_list pos:start="355:47" pos:end="355:62">(<argument pos:start="355:48" pos:end="355:61"><expr pos:start="355:48" pos:end="355:61"><name pos:start="355:48" pos:end="355:61"><name pos:start="355:48" pos:end="355:48">s</name><operator pos:start="355:49" pos:end="355:50">-&gt;</operator><name pos:start="355:51" pos:end="355:55">dinfo</name><operator pos:start="355:56" pos:end="355:57">-&gt;</operator><name pos:start="355:58" pos:end="355:61">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="355:64" pos:end="355:65">==</operator> <name pos:start="355:67" pos:end="355:81">BDRV_TYPE_CDROM</name></expr>)</condition> <block pos:start="355:84" pos:end="359:25">{<block_content pos:start="357:29" pos:end="357:57">

                            <expr_stmt pos:start="357:29" pos:end="357:57"><expr pos:start="357:29" pos:end="357:56"><name pos:start="357:29" pos:end="357:52"><name pos:start="357:29" pos:end="357:34">outbuf</name><index pos:start="357:35" pos:end="357:52">[<expr pos:start="357:36" pos:end="357:51"><name pos:start="357:36" pos:end="357:49"><name pos:start="357:36" pos:end="357:36">r</name><operator pos:start="357:37" pos:end="357:38">-&gt;</operator><name pos:start="357:39" pos:end="357:41">iov</name><operator pos:start="357:42" pos:end="357:42">.</operator><name pos:start="357:43" pos:end="357:49">iov_len</name></name><operator pos:start="357:50" pos:end="357:51">++</operator></expr>]</index></name> <operator pos:start="357:54" pos:end="357:54">=</operator> <literal type="number" pos:start="357:56" pos:end="357:56">5</literal></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="359:27" pos:end="363:25">else <block pos:start="359:32" pos:end="363:25">{<block_content pos:start="361:29" pos:end="361:57">

                            <expr_stmt pos:start="361:29" pos:end="361:57"><expr pos:start="361:29" pos:end="361:56"><name pos:start="361:29" pos:end="361:52"><name pos:start="361:29" pos:end="361:34">outbuf</name><index pos:start="361:35" pos:end="361:52">[<expr pos:start="361:36" pos:end="361:51"><name pos:start="361:36" pos:end="361:49"><name pos:start="361:36" pos:end="361:36">r</name><operator pos:start="361:37" pos:end="361:38">-&gt;</operator><name pos:start="361:39" pos:end="361:41">iov</name><operator pos:start="361:42" pos:end="361:42">.</operator><name pos:start="361:43" pos:end="361:49">iov_len</name></name><operator pos:start="361:50" pos:end="361:51">++</operator></expr>]</index></name> <operator pos:start="361:54" pos:end="361:54">=</operator> <literal type="number" pos:start="361:56" pos:end="361:56">0</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>



                        <expr_stmt pos:start="367:25" pos:end="367:56"><expr pos:start="367:25" pos:end="367:55"><name pos:start="367:25" pos:end="367:48"><name pos:start="367:25" pos:end="367:30">outbuf</name><index pos:start="367:31" pos:end="367:48">[<expr pos:start="367:32" pos:end="367:47"><name pos:start="367:32" pos:end="367:45"><name pos:start="367:32" pos:end="367:32">r</name><operator pos:start="367:33" pos:end="367:34">-&gt;</operator><name pos:start="367:35" pos:end="367:37">iov</name><operator pos:start="367:38" pos:end="367:38">.</operator><name pos:start="367:39" pos:end="367:45">iov_len</name></name><operator pos:start="367:46" pos:end="367:47">++</operator></expr>]</index></name> <operator pos:start="367:50" pos:end="367:50">=</operator> <literal type="number" pos:start="367:52" pos:end="367:55">0x83</literal></expr>;</expr_stmt> <comment type="line" pos:start="367:58" pos:end="367:69">// this page</comment>

                        <expr_stmt pos:start="369:25" pos:end="369:56"><expr pos:start="369:25" pos:end="369:55"><name pos:start="369:25" pos:end="369:48"><name pos:start="369:25" pos:end="369:30">outbuf</name><index pos:start="369:31" pos:end="369:48">[<expr pos:start="369:32" pos:end="369:47"><name pos:start="369:32" pos:end="369:45"><name pos:start="369:32" pos:end="369:32">r</name><operator pos:start="369:33" pos:end="369:34">-&gt;</operator><name pos:start="369:35" pos:end="369:37">iov</name><operator pos:start="369:38" pos:end="369:38">.</operator><name pos:start="369:39" pos:end="369:45">iov_len</name></name><operator pos:start="369:46" pos:end="369:47">++</operator></expr>]</index></name> <operator pos:start="369:50" pos:end="369:50">=</operator> <literal type="number" pos:start="369:52" pos:end="369:55">0x00</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="371:25" pos:end="371:62"><expr pos:start="371:25" pos:end="371:61"><name pos:start="371:25" pos:end="371:48"><name pos:start="371:25" pos:end="371:30">outbuf</name><index pos:start="371:31" pos:end="371:48">[<expr pos:start="371:32" pos:end="371:47"><name pos:start="371:32" pos:end="371:45"><name pos:start="371:32" pos:end="371:32">r</name><operator pos:start="371:33" pos:end="371:34">-&gt;</operator><name pos:start="371:35" pos:end="371:37">iov</name><operator pos:start="371:38" pos:end="371:38">.</operator><name pos:start="371:39" pos:end="371:45">iov_len</name></name><operator pos:start="371:46" pos:end="371:47">++</operator></expr>]</index></name> <operator pos:start="371:50" pos:end="371:50">=</operator> <literal type="number" pos:start="371:52" pos:end="371:54">3</literal> <operator pos:start="371:54" pos:end="371:54">+</operator> <name pos:start="371:56" pos:end="371:61">id_len</name></expr>;</expr_stmt>



                        <expr_stmt pos:start="375:25" pos:end="375:55"><expr pos:start="375:25" pos:end="375:54"><name pos:start="375:25" pos:end="375:48"><name pos:start="375:25" pos:end="375:30">outbuf</name><index pos:start="375:31" pos:end="375:48">[<expr pos:start="375:32" pos:end="375:47"><name pos:start="375:32" pos:end="375:45"><name pos:start="375:32" pos:end="375:32">r</name><operator pos:start="375:33" pos:end="375:34">-&gt;</operator><name pos:start="375:35" pos:end="375:37">iov</name><operator pos:start="375:38" pos:end="375:38">.</operator><name pos:start="375:39" pos:end="375:45">iov_len</name></name><operator pos:start="375:46" pos:end="375:47">++</operator></expr>]</index></name> <operator pos:start="375:50" pos:end="375:50">=</operator> <literal type="number" pos:start="375:52" pos:end="375:54">0x2</literal></expr>;</expr_stmt> <comment type="line" pos:start="375:57" pos:end="375:64">// ASCII</comment>

                        <expr_stmt pos:start="377:25" pos:end="377:53"><expr pos:start="377:25" pos:end="377:52"><name pos:start="377:25" pos:end="377:48"><name pos:start="377:25" pos:end="377:30">outbuf</name><index pos:start="377:31" pos:end="377:48">[<expr pos:start="377:32" pos:end="377:47"><name pos:start="377:32" pos:end="377:45"><name pos:start="377:32" pos:end="377:32">r</name><operator pos:start="377:33" pos:end="377:34">-&gt;</operator><name pos:start="377:35" pos:end="377:37">iov</name><operator pos:start="377:38" pos:end="377:38">.</operator><name pos:start="377:39" pos:end="377:45">iov_len</name></name><operator pos:start="377:46" pos:end="377:47">++</operator></expr>]</index></name> <operator pos:start="377:50" pos:end="377:50">=</operator> <literal type="number" pos:start="377:52" pos:end="377:52">0</literal></expr>;</expr_stmt>   <comment type="line" pos:start="377:57" pos:end="377:82">// not officially assigned</comment>

                        <expr_stmt pos:start="379:25" pos:end="379:53"><expr pos:start="379:25" pos:end="379:52"><name pos:start="379:25" pos:end="379:48"><name pos:start="379:25" pos:end="379:30">outbuf</name><index pos:start="379:31" pos:end="379:48">[<expr pos:start="379:32" pos:end="379:47"><name pos:start="379:32" pos:end="379:45"><name pos:start="379:32" pos:end="379:32">r</name><operator pos:start="379:33" pos:end="379:34">-&gt;</operator><name pos:start="379:35" pos:end="379:37">iov</name><operator pos:start="379:38" pos:end="379:38">.</operator><name pos:start="379:39" pos:end="379:45">iov_len</name></name><operator pos:start="379:46" pos:end="379:47">++</operator></expr>]</index></name> <operator pos:start="379:50" pos:end="379:50">=</operator> <literal type="number" pos:start="379:52" pos:end="379:52">0</literal></expr>;</expr_stmt>   <comment type="line" pos:start="379:57" pos:end="379:67">// reserved</comment>

                        <expr_stmt pos:start="381:25" pos:end="381:58"><expr pos:start="381:25" pos:end="381:57"><name pos:start="381:25" pos:end="381:48"><name pos:start="381:25" pos:end="381:30">outbuf</name><index pos:start="381:31" pos:end="381:48">[<expr pos:start="381:32" pos:end="381:47"><name pos:start="381:32" pos:end="381:45"><name pos:start="381:32" pos:end="381:32">r</name><operator pos:start="381:33" pos:end="381:34">-&gt;</operator><name pos:start="381:35" pos:end="381:37">iov</name><operator pos:start="381:38" pos:end="381:38">.</operator><name pos:start="381:39" pos:end="381:45">iov_len</name></name><operator pos:start="381:46" pos:end="381:47">++</operator></expr>]</index></name> <operator pos:start="381:50" pos:end="381:50">=</operator> <name pos:start="381:52" pos:end="381:57">id_len</name></expr>;</expr_stmt> <comment type="line" pos:start="381:60" pos:end="381:86">// length of data following</comment>



                        <expr_stmt pos:start="385:25" pos:end="387:77"><expr pos:start="385:25" pos:end="387:76"><call pos:start="385:25" pos:end="387:76"><name pos:start="385:25" pos:end="385:30">memcpy</name><argument_list pos:start="385:31" pos:end="387:76">(<argument pos:start="385:32" pos:end="385:54"><expr pos:start="385:32" pos:end="385:54"><operator pos:start="385:32" pos:end="385:32">&amp;</operator><name pos:start="385:33" pos:end="385:54"><name pos:start="385:33" pos:end="385:38">outbuf</name><index pos:start="385:39" pos:end="385:54">[<expr pos:start="385:40" pos:end="385:53"><name pos:start="385:40" pos:end="385:53"><name pos:start="385:40" pos:end="385:40">r</name><operator pos:start="385:41" pos:end="385:42">-&gt;</operator><name pos:start="385:43" pos:end="385:45">iov</name><operator pos:start="385:46" pos:end="385:46">.</operator><name pos:start="385:47" pos:end="385:53">iov_len</name></name></expr>]</index></name></expr></argument>,

                               <argument pos:start="387:32" pos:end="387:67"><expr pos:start="387:32" pos:end="387:67"><call pos:start="387:32" pos:end="387:67"><name pos:start="387:32" pos:end="387:51">bdrv_get_device_name</name><argument_list pos:start="387:52" pos:end="387:67">(<argument pos:start="387:53" pos:end="387:66"><expr pos:start="387:53" pos:end="387:66"><name pos:start="387:53" pos:end="387:66"><name pos:start="387:53" pos:end="387:53">s</name><operator pos:start="387:54" pos:end="387:55">-&gt;</operator><name pos:start="387:56" pos:end="387:60">dinfo</name><operator pos:start="387:61" pos:end="387:62">-&gt;</operator><name pos:start="387:63" pos:end="387:66">bdrv</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="387:70" pos:end="387:75"><expr pos:start="387:70" pos:end="387:75"><name pos:start="387:70" pos:end="387:75">id_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="389:25" pos:end="389:49"><expr pos:start="389:25" pos:end="389:48"><name pos:start="389:25" pos:end="389:38"><name pos:start="389:25" pos:end="389:25">r</name><operator pos:start="389:26" pos:end="389:27">-&gt;</operator><name pos:start="389:28" pos:end="389:30">iov</name><operator pos:start="389:31" pos:end="389:31">.</operator><name pos:start="389:32" pos:end="389:38">iov_len</name></name> <operator pos:start="389:40" pos:end="389:41">+=</operator> <name pos:start="389:43" pos:end="389:48">id_len</name></expr>;</expr_stmt>

                    </block_content>}</block>

                    <break pos:start="393:21" pos:end="393:26">break;</break>

                <default pos:start="395:17" pos:end="395:24">default:</default>

                    <expr_stmt pos:start="397:21" pos:end="399:61"><expr pos:start="397:21" pos:end="399:60"><call pos:start="397:21" pos:end="399:60"><name pos:start="397:21" pos:end="397:24">BADF</name><argument_list pos:start="397:25" pos:end="399:60">(<argument pos:start="397:26" pos:end="399:43"><expr pos:start="397:26" pos:end="399:43"><literal type="string" pos:start="397:26" pos:end="397:67">"Error: unsupported Inquiry (EVPD[%02X]) "</literal>

                         <literal type="string" pos:start="399:26" pos:end="399:43">"buffer size %d\n"</literal></expr></argument>, <argument pos:start="399:46" pos:end="399:54"><expr pos:start="399:46" pos:end="399:54"><name pos:start="399:46" pos:end="399:54">page_code</name></expr></argument>, <argument pos:start="399:57" pos:end="399:59"><expr pos:start="399:57" pos:end="399:59"><name pos:start="399:57" pos:end="399:59">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="401:21" pos:end="401:30">goto <name pos:start="401:26" pos:end="401:29">fail</name>;</goto>

            </block_content>}</block></switch>

            <comment type="block" pos:start="405:13" pos:end="405:32">/* done with EVPD */</comment>

            <break pos:start="407:13" pos:end="407:18">break;</break>

        </block_content>}</block></if>

        <else pos:start="411:9" pos:end="449:9">else <block pos:start="411:14" pos:end="449:9">{<block_content pos:start="415:13" pos:end="447:13">

            <comment type="block" pos:start="413:13" pos:end="413:39">/* Standard INQUIRY data */</comment>

            <if_stmt pos:start="415:13" pos:end="423:13"><if pos:start="415:13" pos:end="423:13">if <condition pos:start="415:16" pos:end="415:28">(<expr pos:start="415:17" pos:end="415:27"><name pos:start="415:17" pos:end="415:22"><name pos:start="415:17" pos:end="415:19">buf</name><index pos:start="415:20" pos:end="415:22">[<expr pos:start="415:21" pos:end="415:21"><literal type="number" pos:start="415:21" pos:end="415:21">2</literal></expr>]</index></name> <operator pos:start="415:24" pos:end="415:25">!=</operator> <literal type="number" pos:start="415:27" pos:end="415:27">0</literal></expr>)</condition> <block pos:start="415:30" pos:end="423:13">{<block_content pos:start="417:17" pos:end="421:26">

                <expr_stmt pos:start="417:17" pos:end="419:53"><expr pos:start="417:17" pos:end="419:52"><call pos:start="417:17" pos:end="419:52"><name pos:start="417:17" pos:end="417:20">BADF</name><argument_list pos:start="417:21" pos:end="419:52">(<argument pos:start="417:22" pos:end="419:43"><expr pos:start="417:22" pos:end="419:43"><literal type="string" pos:start="417:22" pos:end="417:62">"Error: Inquiry (STANDARD) page or code "</literal>

                     <literal type="string" pos:start="419:22" pos:end="419:43">"is non-zero [%02X]\n"</literal></expr></argument>, <argument pos:start="419:46" pos:end="419:51"><expr pos:start="419:46" pos:end="419:51"><name pos:start="419:46" pos:end="419:51"><name pos:start="419:46" pos:end="419:48">buf</name><index pos:start="419:49" pos:end="419:51">[<expr pos:start="419:50" pos:end="419:50"><literal type="number" pos:start="419:50" pos:end="419:50">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="421:17" pos:end="421:26">goto <name pos:start="421:22" pos:end="421:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="427:13" pos:end="427:32">/* PAGE CODE == 0 */</comment>

            <if_stmt pos:start="429:13" pos:end="437:13"><if pos:start="429:13" pos:end="437:13">if <condition pos:start="429:16" pos:end="429:24">(<expr pos:start="429:17" pos:end="429:23"><name pos:start="429:17" pos:end="429:19">len</name> <operator pos:start="429:21" pos:end="429:21">&lt;</operator> <literal type="number" pos:start="429:23" pos:end="429:23">5</literal></expr>)</condition> <block pos:start="429:26" pos:end="437:13">{<block_content pos:start="431:17" pos:end="435:26">

                <expr_stmt pos:start="431:17" pos:end="433:46"><expr pos:start="431:17" pos:end="433:45"><call pos:start="431:17" pos:end="433:45"><name pos:start="431:17" pos:end="431:20">BADF</name><argument_list pos:start="431:21" pos:end="433:45">(<argument pos:start="431:22" pos:end="433:39"><expr pos:start="431:22" pos:end="433:39"><literal type="string" pos:start="431:22" pos:end="431:64">"Error: Inquiry (STANDARD) buffer size %d "</literal>

                     <literal type="string" pos:start="433:22" pos:end="433:39">"is less than 5\n"</literal></expr></argument>, <argument pos:start="433:42" pos:end="433:44"><expr pos:start="433:42" pos:end="433:44"><name pos:start="433:42" pos:end="433:44">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="435:17" pos:end="435:26">goto <name pos:start="435:22" pos:end="435:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="441:13" pos:end="447:13"><if pos:start="441:13" pos:end="447:13">if <condition pos:start="441:16" pos:end="441:25">(<expr pos:start="441:17" pos:end="441:24"><name pos:start="441:17" pos:end="441:19">len</name> <operator pos:start="441:21" pos:end="441:21">&lt;</operator> <literal type="number" pos:start="441:23" pos:end="441:24">36</literal></expr>)</condition> <block pos:start="441:27" pos:end="447:13">{<block_content pos:start="443:17" pos:end="445:71">

                <expr_stmt pos:start="443:17" pos:end="445:71"><expr pos:start="443:17" pos:end="445:70"><call pos:start="443:17" pos:end="445:70"><name pos:start="443:17" pos:end="443:20">BADF</name><argument_list pos:start="443:21" pos:end="445:70">(<argument pos:start="443:22" pos:end="445:64"><expr pos:start="443:22" pos:end="445:64"><literal type="string" pos:start="443:22" pos:end="443:64">"Error: Inquiry (STANDARD) buffer size %d "</literal>

                     <literal type="string" pos:start="445:22" pos:end="445:64">"is less than 36 (TODO: only 5 required)\n"</literal></expr></argument>, <argument pos:start="445:67" pos:end="445:69"><expr pos:start="445:67" pos:end="445:69"><name pos:start="445:67" pos:end="445:69">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="453:9" pos:end="455:39"><if pos:start="453:9" pos:end="455:39">if<condition pos:start="453:11" pos:end="453:38">(<expr pos:start="453:12" pos:end="453:37"><name pos:start="453:12" pos:end="453:14">len</name> <operator pos:start="453:16" pos:end="453:16">&gt;</operator> <name pos:start="453:18" pos:end="453:37">SCSI_MAX_INQUIRY_LEN</name></expr>)</condition><block type="pseudo" pos:start="455:13" pos:end="455:39"><block_content pos:start="455:13" pos:end="455:39">

            <expr_stmt pos:start="455:13" pos:end="455:39"><expr pos:start="455:13" pos:end="455:38"><name pos:start="455:13" pos:end="455:15">len</name> <operator pos:start="455:17" pos:end="455:17">=</operator> <name pos:start="455:19" pos:end="455:38">SCSI_MAX_INQUIRY_LEN</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="459:9" pos:end="459:31"><expr pos:start="459:9" pos:end="459:30"><call pos:start="459:9" pos:end="459:30"><name pos:start="459:9" pos:end="459:14">memset</name><argument_list pos:start="459:15" pos:end="459:30">(<argument pos:start="459:16" pos:end="459:21"><expr pos:start="459:16" pos:end="459:21"><name pos:start="459:16" pos:end="459:21">outbuf</name></expr></argument>, <argument pos:start="459:24" pos:end="459:24"><expr pos:start="459:24" pos:end="459:24"><literal type="number" pos:start="459:24" pos:end="459:24">0</literal></expr></argument>, <argument pos:start="459:27" pos:end="459:29"><expr pos:start="459:27" pos:end="459:29"><name pos:start="459:27" pos:end="459:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="463:9" pos:end="481:9"><if pos:start="463:9" pos:end="467:9">if <condition pos:start="463:12" pos:end="463:31">(<expr pos:start="463:13" pos:end="463:30"><name pos:start="463:13" pos:end="463:15">lun</name> <operator pos:start="463:17" pos:end="463:18">||</operator> <name pos:start="463:20" pos:end="463:25"><name pos:start="463:20" pos:end="463:22">buf</name><index pos:start="463:23" pos:end="463:25">[<expr pos:start="463:24" pos:end="463:24"><literal type="number" pos:start="463:24" pos:end="463:24">1</literal></expr>]</index></name> <operator pos:start="463:27" pos:end="463:28">&gt;&gt;</operator> <literal type="number" pos:start="463:30" pos:end="463:30">5</literal></expr>)</condition> <block pos:start="463:33" pos:end="467:9">{<block_content pos:start="465:13" pos:end="465:29">

            <expr_stmt pos:start="465:13" pos:end="465:29"><expr pos:start="465:13" pos:end="465:28"><name pos:start="465:13" pos:end="465:21"><name pos:start="465:13" pos:end="465:18">outbuf</name><index pos:start="465:19" pos:end="465:21">[<expr pos:start="465:20" pos:end="465:20"><literal type="number" pos:start="465:20" pos:end="465:20">0</literal></expr>]</index></name> <operator pos:start="465:23" pos:end="465:23">=</operator> <literal type="number" pos:start="465:25" pos:end="465:28">0x7f</literal></expr>;</expr_stmt>	<comment type="block" pos:start="465:33" pos:end="465:55">/* LUN not supported */</comment>

	</block_content>}</block></if> <if type="elseif" pos:start="467:11" pos:end="475:9">else if <condition pos:start="467:19" pos:end="467:73">(<expr pos:start="467:20" pos:end="467:72"><call pos:start="467:20" pos:end="467:53"><name pos:start="467:20" pos:end="467:37">bdrv_get_type_hint</name><argument_list pos:start="467:38" pos:end="467:53">(<argument pos:start="467:39" pos:end="467:52"><expr pos:start="467:39" pos:end="467:52"><name pos:start="467:39" pos:end="467:52"><name pos:start="467:39" pos:end="467:39">s</name><operator pos:start="467:40" pos:end="467:41">-&gt;</operator><name pos:start="467:42" pos:end="467:46">dinfo</name><operator pos:start="467:47" pos:end="467:48">-&gt;</operator><name pos:start="467:49" pos:end="467:52">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="467:55" pos:end="467:56">==</operator> <name pos:start="467:58" pos:end="467:72">BDRV_TYPE_CDROM</name></expr>)</condition> <block pos:start="467:75" pos:end="475:9">{<block_content pos:start="469:13" pos:end="473:55">

	    <expr_stmt pos:start="469:13" pos:end="469:26"><expr pos:start="469:13" pos:end="469:25"><name pos:start="469:13" pos:end="469:21"><name pos:start="469:13" pos:end="469:18">outbuf</name><index pos:start="469:19" pos:end="469:21">[<expr pos:start="469:20" pos:end="469:20"><literal type="number" pos:start="469:20" pos:end="469:20">0</literal></expr>]</index></name> <operator pos:start="469:23" pos:end="469:23">=</operator> <literal type="number" pos:start="469:25" pos:end="469:25">5</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="471:13" pos:end="471:29"><expr pos:start="471:13" pos:end="471:28"><name pos:start="471:13" pos:end="471:21"><name pos:start="471:13" pos:end="471:18">outbuf</name><index pos:start="471:19" pos:end="471:21">[<expr pos:start="471:20" pos:end="471:20"><literal type="number" pos:start="471:20" pos:end="471:20">1</literal></expr>]</index></name> <operator pos:start="471:23" pos:end="471:23">=</operator> <literal type="number" pos:start="471:25" pos:end="471:28">0x80</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="473:13" pos:end="473:55"><expr pos:start="473:13" pos:end="473:54"><call pos:start="473:13" pos:end="473:54"><name pos:start="473:13" pos:end="473:18">memcpy</name><argument_list pos:start="473:19" pos:end="473:54">(<argument pos:start="473:20" pos:end="473:30"><expr pos:start="473:20" pos:end="473:30"><operator pos:start="473:20" pos:end="473:20">&amp;</operator><name pos:start="473:21" pos:end="473:30"><name pos:start="473:21" pos:end="473:26">outbuf</name><index pos:start="473:27" pos:end="473:30">[<expr pos:start="473:28" pos:end="473:29"><literal type="number" pos:start="473:28" pos:end="473:29">16</literal></expr>]</index></name></expr></argument>, <argument pos:start="473:33" pos:end="473:49"><expr pos:start="473:33" pos:end="473:49"><literal type="string" pos:start="473:33" pos:end="473:49">"QEMU CD-ROM    "</literal></expr></argument>, <argument pos:start="473:52" pos:end="473:53"><expr pos:start="473:52" pos:end="473:53"><literal type="number" pos:start="473:52" pos:end="473:53">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="475:11" pos:end="481:9">else <block pos:start="475:16" pos:end="481:9">{<block_content pos:start="477:13" pos:end="479:55">

	    <expr_stmt pos:start="477:13" pos:end="477:26"><expr pos:start="477:13" pos:end="477:25"><name pos:start="477:13" pos:end="477:21"><name pos:start="477:13" pos:end="477:18">outbuf</name><index pos:start="477:19" pos:end="477:21">[<expr pos:start="477:20" pos:end="477:20"><literal type="number" pos:start="477:20" pos:end="477:20">0</literal></expr>]</index></name> <operator pos:start="477:23" pos:end="477:23">=</operator> <literal type="number" pos:start="477:25" pos:end="477:25">0</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="479:13" pos:end="479:55"><expr pos:start="479:13" pos:end="479:54"><call pos:start="479:13" pos:end="479:54"><name pos:start="479:13" pos:end="479:18">memcpy</name><argument_list pos:start="479:19" pos:end="479:54">(<argument pos:start="479:20" pos:end="479:30"><expr pos:start="479:20" pos:end="479:30"><operator pos:start="479:20" pos:end="479:20">&amp;</operator><name pos:start="479:21" pos:end="479:30"><name pos:start="479:21" pos:end="479:26">outbuf</name><index pos:start="479:27" pos:end="479:30">[<expr pos:start="479:28" pos:end="479:29"><literal type="number" pos:start="479:28" pos:end="479:29">16</literal></expr>]</index></name></expr></argument>, <argument pos:start="479:33" pos:end="479:49"><expr pos:start="479:33" pos:end="479:49"><literal type="string" pos:start="479:33" pos:end="479:49">"QEMU HARDDISK  "</literal></expr></argument>, <argument pos:start="479:52" pos:end="479:53"><expr pos:start="479:52" pos:end="479:53"><literal type="number" pos:start="479:52" pos:end="479:53">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>

	<expr_stmt pos:start="483:9" pos:end="483:41"><expr pos:start="483:9" pos:end="483:40"><call pos:start="483:9" pos:end="483:40"><name pos:start="483:9" pos:end="483:14">memcpy</name><argument_list pos:start="483:15" pos:end="483:40">(<argument pos:start="483:16" pos:end="483:25"><expr pos:start="483:16" pos:end="483:25"><operator pos:start="483:16" pos:end="483:16">&amp;</operator><name pos:start="483:17" pos:end="483:25"><name pos:start="483:17" pos:end="483:22">outbuf</name><index pos:start="483:23" pos:end="483:25">[<expr pos:start="483:24" pos:end="483:24"><literal type="number" pos:start="483:24" pos:end="483:24">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="483:28" pos:end="483:36"><expr pos:start="483:28" pos:end="483:36"><literal type="string" pos:start="483:28" pos:end="483:36">"QEMU   "</literal></expr></argument>, <argument pos:start="483:39" pos:end="483:39"><expr pos:start="483:39" pos:end="483:39"><literal type="number" pos:start="483:39" pos:end="483:39">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="485:9" pos:end="485:45"><expr pos:start="485:9" pos:end="485:44"><call pos:start="485:9" pos:end="485:44"><name pos:start="485:9" pos:end="485:14">memcpy</name><argument_list pos:start="485:15" pos:end="485:44">(<argument pos:start="485:16" pos:end="485:26"><expr pos:start="485:16" pos:end="485:26"><operator pos:start="485:16" pos:end="485:16">&amp;</operator><name pos:start="485:17" pos:end="485:26"><name pos:start="485:17" pos:end="485:22">outbuf</name><index pos:start="485:23" pos:end="485:26">[<expr pos:start="485:24" pos:end="485:25"><literal type="number" pos:start="485:24" pos:end="485:25">32</literal></expr>]</index></name></expr></argument>, <argument pos:start="485:29" pos:end="485:40"><expr pos:start="485:29" pos:end="485:40"><name pos:start="485:29" pos:end="485:40">QEMU_VERSION</name></expr></argument>, <argument pos:start="485:43" pos:end="485:43"><expr pos:start="485:43" pos:end="485:43"><literal type="number" pos:start="485:43" pos:end="485:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="487:9" pos:end="489:55">/* Identify device as SCSI-3 rev 1.

           Some later commands are also implemented. */</comment>

	<expr_stmt pos:start="491:9" pos:end="491:22"><expr pos:start="491:9" pos:end="491:21"><name pos:start="491:9" pos:end="491:17"><name pos:start="491:9" pos:end="491:14">outbuf</name><index pos:start="491:15" pos:end="491:17">[<expr pos:start="491:16" pos:end="491:16"><literal type="number" pos:start="491:16" pos:end="491:16">2</literal></expr>]</index></name> <operator pos:start="491:19" pos:end="491:19">=</operator> <literal type="number" pos:start="491:21" pos:end="491:21">3</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="493:9" pos:end="493:22"><expr pos:start="493:9" pos:end="493:21"><name pos:start="493:9" pos:end="493:17"><name pos:start="493:9" pos:end="493:14">outbuf</name><index pos:start="493:15" pos:end="493:17">[<expr pos:start="493:16" pos:end="493:16"><literal type="number" pos:start="493:16" pos:end="493:16">3</literal></expr>]</index></name> <operator pos:start="493:19" pos:end="493:19">=</operator> <literal type="number" pos:start="493:21" pos:end="493:21">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="493:24" pos:end="493:37">/* Format 2 */</comment>

	<expr_stmt pos:start="495:9" pos:end="495:28"><expr pos:start="495:9" pos:end="495:27"><name pos:start="495:9" pos:end="495:17"><name pos:start="495:9" pos:end="495:14">outbuf</name><index pos:start="495:15" pos:end="495:17">[<expr pos:start="495:16" pos:end="495:16"><literal type="number" pos:start="495:16" pos:end="495:16">4</literal></expr>]</index></name> <operator pos:start="495:19" pos:end="495:19">=</operator> <name pos:start="495:21" pos:end="495:23">len</name> <operator pos:start="495:25" pos:end="495:25">-</operator> <literal type="number" pos:start="495:27" pos:end="495:27">5</literal></expr>;</expr_stmt> <comment type="block" pos:start="495:30" pos:end="495:68">/* Additional Length = (Len - 1) - 4 */</comment>

        <comment type="block" pos:start="497:9" pos:end="497:42">/* Sync data transfer and TCQ.  */</comment>

        <expr_stmt pos:start="499:9" pos:end="499:52"><expr pos:start="499:9" pos:end="499:51"><name pos:start="499:9" pos:end="499:17"><name pos:start="499:9" pos:end="499:14">outbuf</name><index pos:start="499:15" pos:end="499:17">[<expr pos:start="499:16" pos:end="499:16"><literal type="number" pos:start="499:16" pos:end="499:16">7</literal></expr>]</index></name> <operator pos:start="499:19" pos:end="499:19">=</operator> <literal type="number" pos:start="499:21" pos:end="499:24">0x10</literal> <operator pos:start="499:26" pos:end="499:26">|</operator> <operator pos:start="499:28" pos:end="499:28">(</operator><ternary pos:start="499:29" pos:end="499:50"><condition pos:start="499:29" pos:end="499:41"><expr pos:start="499:29" pos:end="499:39"><name pos:start="499:29" pos:end="499:39"><name pos:start="499:29" pos:end="499:29">r</name><operator pos:start="499:30" pos:end="499:31">-&gt;</operator><name pos:start="499:32" pos:end="499:34">bus</name><operator pos:start="499:35" pos:end="499:36">-&gt;</operator><name pos:start="499:37" pos:end="499:39">tcq</name></name></expr> ?</condition><then pos:start="499:43" pos:end="499:46"> <expr pos:start="499:43" pos:end="499:46"><literal type="number" pos:start="499:43" pos:end="499:46">0x02</literal></expr> </then><else pos:start="499:48" pos:end="499:50">: <expr pos:start="499:50" pos:end="499:50"><literal type="number" pos:start="499:50" pos:end="499:50">0</literal></expr></else></ternary><operator pos:start="499:51" pos:end="499:51">)</operator></expr>;</expr_stmt>

	<expr_stmt pos:start="501:9" pos:end="501:29"><expr pos:start="501:9" pos:end="501:28"><name pos:start="501:9" pos:end="501:22"><name pos:start="501:9" pos:end="501:9">r</name><operator pos:start="501:10" pos:end="501:11">-&gt;</operator><name pos:start="501:12" pos:end="501:14">iov</name><operator pos:start="501:15" pos:end="501:15">.</operator><name pos:start="501:16" pos:end="501:22">iov_len</name></name> <operator pos:start="501:24" pos:end="501:24">=</operator> <name pos:start="501:26" pos:end="501:28">len</name></expr>;</expr_stmt>

	<break pos:start="503:9" pos:end="503:14">break;</break>

    <case pos:start="505:5" pos:end="505:14">case <expr pos:start="505:10" pos:end="505:13"><literal type="number" pos:start="505:10" pos:end="505:13">0x16</literal></expr>:</case>

        <expr_stmt pos:start="507:9" pos:end="507:32"><expr pos:start="507:9" pos:end="507:31"><call pos:start="507:9" pos:end="507:31"><name pos:start="507:9" pos:end="507:15">DPRINTF</name><argument_list pos:start="507:16" pos:end="507:31">(<argument pos:start="507:17" pos:end="507:30"><expr pos:start="507:17" pos:end="507:30"><literal type="string" pos:start="507:17" pos:end="507:30">"Reserve(6)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="509:9" pos:end="511:22"><if pos:start="509:9" pos:end="511:22">if <condition pos:start="509:12" pos:end="509:23">(<expr pos:start="509:13" pos:end="509:22"><name pos:start="509:13" pos:end="509:18"><name pos:start="509:13" pos:end="509:15">buf</name><index pos:start="509:16" pos:end="509:18">[<expr pos:start="509:17" pos:end="509:17"><literal type="number" pos:start="509:17" pos:end="509:17">1</literal></expr>]</index></name> <operator pos:start="509:20" pos:end="509:20">&amp;</operator> <literal type="number" pos:start="509:22" pos:end="509:22">1</literal></expr>)</condition><block type="pseudo" pos:start="511:13" pos:end="511:22"><block_content pos:start="511:13" pos:end="511:22">

            <goto pos:start="511:13" pos:end="511:22">goto <name pos:start="511:18" pos:end="511:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="513:9" pos:end="513:14">break;</break>

    <case pos:start="515:5" pos:end="515:14">case <expr pos:start="515:10" pos:end="515:13"><literal type="number" pos:start="515:10" pos:end="515:13">0x17</literal></expr>:</case>

        <expr_stmt pos:start="517:9" pos:end="517:32"><expr pos:start="517:9" pos:end="517:31"><call pos:start="517:9" pos:end="517:31"><name pos:start="517:9" pos:end="517:15">DPRINTF</name><argument_list pos:start="517:16" pos:end="517:31">(<argument pos:start="517:17" pos:end="517:30"><expr pos:start="517:17" pos:end="517:30"><literal type="string" pos:start="517:17" pos:end="517:30">"Release(6)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="519:9" pos:end="521:22"><if pos:start="519:9" pos:end="521:22">if <condition pos:start="519:12" pos:end="519:23">(<expr pos:start="519:13" pos:end="519:22"><name pos:start="519:13" pos:end="519:18"><name pos:start="519:13" pos:end="519:15">buf</name><index pos:start="519:16" pos:end="519:18">[<expr pos:start="519:17" pos:end="519:17"><literal type="number" pos:start="519:17" pos:end="519:17">1</literal></expr>]</index></name> <operator pos:start="519:20" pos:end="519:20">&amp;</operator> <literal type="number" pos:start="519:22" pos:end="519:22">1</literal></expr>)</condition><block type="pseudo" pos:start="521:13" pos:end="521:22"><block_content pos:start="521:13" pos:end="521:22">

            <goto pos:start="521:13" pos:end="521:22">goto <name pos:start="521:18" pos:end="521:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="523:9" pos:end="523:14">break;</break>

    <case pos:start="525:5" pos:end="525:14">case <expr pos:start="525:10" pos:end="525:13"><literal type="number" pos:start="525:10" pos:end="525:13">0x1a</literal></expr>:</case>

    <case pos:start="527:5" pos:end="527:14">case <expr pos:start="527:10" pos:end="527:13"><literal type="number" pos:start="527:10" pos:end="527:13">0x5a</literal></expr>:</case>

        <block pos:start="529:9" pos:end="783:9">{<block_content pos:start="531:13" pos:end="781:37">

            <decl_stmt pos:start="531:13" pos:end="531:23"><decl pos:start="531:13" pos:end="531:22"><type pos:start="531:13" pos:end="531:21"><name pos:start="531:13" pos:end="531:19">uint8_t</name> <modifier pos:start="531:21" pos:end="531:21">*</modifier></type><name pos:start="531:22" pos:end="531:22">p</name></decl>;</decl_stmt>

            <decl_stmt pos:start="533:13" pos:end="533:21"><decl pos:start="533:13" pos:end="533:20"><type pos:start="533:13" pos:end="533:15"><name pos:start="533:13" pos:end="533:15">int</name></type> <name pos:start="533:17" pos:end="533:20">page</name></decl>;</decl_stmt>



            <expr_stmt pos:start="537:13" pos:end="537:33"><expr pos:start="537:13" pos:end="537:32"><name pos:start="537:13" pos:end="537:16">page</name> <operator pos:start="537:18" pos:end="537:18">=</operator> <name pos:start="537:20" pos:end="537:25"><name pos:start="537:20" pos:end="537:22">buf</name><index pos:start="537:23" pos:end="537:25">[<expr pos:start="537:24" pos:end="537:24"><literal type="number" pos:start="537:24" pos:end="537:24">2</literal></expr>]</index></name> <operator pos:start="537:27" pos:end="537:27">&amp;</operator> <literal type="number" pos:start="537:29" pos:end="537:32">0x3f</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="539:13" pos:end="539:65"><expr pos:start="539:13" pos:end="539:64"><call pos:start="539:13" pos:end="539:64"><name pos:start="539:13" pos:end="539:19">DPRINTF</name><argument_list pos:start="539:20" pos:end="539:64">(<argument pos:start="539:21" pos:end="539:52"><expr pos:start="539:21" pos:end="539:52"><literal type="string" pos:start="539:21" pos:end="539:52">"Mode Sense (page %d, len %d)\n"</literal></expr></argument>, <argument pos:start="539:55" pos:end="539:58"><expr pos:start="539:55" pos:end="539:58"><name pos:start="539:55" pos:end="539:58">page</name></expr></argument>, <argument pos:start="539:61" pos:end="539:63"><expr pos:start="539:61" pos:end="539:63"><name pos:start="539:61" pos:end="539:63">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="541:13" pos:end="541:23"><expr pos:start="541:13" pos:end="541:22"><name pos:start="541:13" pos:end="541:13">p</name> <operator pos:start="541:15" pos:end="541:15">=</operator> <name pos:start="541:17" pos:end="541:22">outbuf</name></expr>;</expr_stmt>

            <expr_stmt pos:start="543:13" pos:end="543:28"><expr pos:start="543:13" pos:end="543:27"><call pos:start="543:13" pos:end="543:27"><name pos:start="543:13" pos:end="543:18">memset</name><argument_list pos:start="543:19" pos:end="543:27">(<argument pos:start="543:20" pos:end="543:20"><expr pos:start="543:20" pos:end="543:20"><name pos:start="543:20" pos:end="543:20">p</name></expr></argument>, <argument pos:start="543:23" pos:end="543:23"><expr pos:start="543:23" pos:end="543:23"><literal type="number" pos:start="543:23" pos:end="543:23">0</literal></expr></argument>, <argument pos:start="543:26" pos:end="543:26"><expr pos:start="543:26" pos:end="543:26"><literal type="number" pos:start="543:26" pos:end="543:26">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="545:13" pos:end="545:26"><expr pos:start="545:13" pos:end="545:25"><name pos:start="545:13" pos:end="545:21"><name pos:start="545:13" pos:end="545:18">outbuf</name><index pos:start="545:19" pos:end="545:21">[<expr pos:start="545:20" pos:end="545:20"><literal type="number" pos:start="545:20" pos:end="545:20">1</literal></expr>]</index></name> <operator pos:start="545:23" pos:end="545:23">=</operator> <literal type="number" pos:start="545:25" pos:end="545:25">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="545:28" pos:end="545:53">/* Default media type.  */</comment>

            <expr_stmt pos:start="547:13" pos:end="547:26"><expr pos:start="547:13" pos:end="547:25"><name pos:start="547:13" pos:end="547:21"><name pos:start="547:13" pos:end="547:18">outbuf</name><index pos:start="547:19" pos:end="547:21">[<expr pos:start="547:20" pos:end="547:20"><literal type="number" pos:start="547:20" pos:end="547:20">3</literal></expr>]</index></name> <operator pos:start="547:23" pos:end="547:23">=</operator> <literal type="number" pos:start="547:25" pos:end="547:25">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="547:28" pos:end="547:58">/* Block descriptor length.  */</comment>

            <if_stmt pos:start="549:13" pos:end="553:13"><if pos:start="549:13" pos:end="553:13">if <condition pos:start="549:16" pos:end="549:70">(<expr pos:start="549:17" pos:end="549:69"><call pos:start="549:17" pos:end="549:50"><name pos:start="549:17" pos:end="549:34">bdrv_get_type_hint</name><argument_list pos:start="549:35" pos:end="549:50">(<argument pos:start="549:36" pos:end="549:49"><expr pos:start="549:36" pos:end="549:49"><name pos:start="549:36" pos:end="549:49"><name pos:start="549:36" pos:end="549:36">s</name><operator pos:start="549:37" pos:end="549:38">-&gt;</operator><name pos:start="549:39" pos:end="549:43">dinfo</name><operator pos:start="549:44" pos:end="549:45">-&gt;</operator><name pos:start="549:46" pos:end="549:49">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="549:52" pos:end="549:53">==</operator> <name pos:start="549:55" pos:end="549:69">BDRV_TYPE_CDROM</name></expr>)</condition> <block pos:start="549:72" pos:end="553:13">{<block_content pos:start="551:17" pos:end="551:33">

                <expr_stmt pos:start="551:17" pos:end="551:33"><expr pos:start="551:17" pos:end="551:32"><name pos:start="551:17" pos:end="551:25"><name pos:start="551:17" pos:end="551:22">outbuf</name><index pos:start="551:23" pos:end="551:25">[<expr pos:start="551:24" pos:end="551:24"><literal type="number" pos:start="551:24" pos:end="551:24">2</literal></expr>]</index></name> <operator pos:start="551:27" pos:end="551:27">=</operator> <literal type="number" pos:start="551:29" pos:end="551:32">0x80</literal></expr>;</expr_stmt> <comment type="block" pos:start="551:35" pos:end="551:50">/* Readonly.  */</comment>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="555:13" pos:end="555:19"><expr pos:start="555:13" pos:end="555:18"><name pos:start="555:13" pos:end="555:13">p</name> <operator pos:start="555:15" pos:end="555:16">+=</operator> <literal type="number" pos:start="555:18" pos:end="555:18">4</literal></expr>;</expr_stmt>

            <if_stmt pos:start="557:13" pos:end="713:13"><if pos:start="557:13" pos:end="619:13">if <condition pos:start="557:16" pos:end="557:26">(<expr pos:start="557:17" pos:end="557:25"><name pos:start="557:17" pos:end="557:20">page</name> <operator pos:start="557:22" pos:end="557:23">==</operator> <literal type="number" pos:start="557:25" pos:end="557:25">4</literal></expr>)</condition> <block pos:start="557:28" pos:end="619:13">{<block_content pos:start="559:17" pos:end="617:26">

                <decl_stmt pos:start="559:17" pos:end="559:43"><decl pos:start="559:17" pos:end="559:29"><type pos:start="559:17" pos:end="559:19"><name pos:start="559:17" pos:end="559:19">int</name></type> <name pos:start="559:21" pos:end="559:29">cylinders</name></decl>, <decl pos:start="559:32" pos:end="559:36"><type ref="prev" pos:start="559:17" pos:end="559:19"/><name pos:start="559:32" pos:end="559:36">heads</name></decl>, <decl pos:start="559:39" pos:end="559:42"><type ref="prev" pos:start="559:17" pos:end="559:19"/><name pos:start="559:39" pos:end="559:42">secs</name></decl>;</decl_stmt>



                <comment type="block" pos:start="563:17" pos:end="563:54">/* Rigid disk device geometry page. */</comment>

                <expr_stmt pos:start="565:17" pos:end="565:25"><expr pos:start="565:17" pos:end="565:24"><name pos:start="565:17" pos:end="565:20"><name pos:start="565:17" pos:end="565:17">p</name><index pos:start="565:18" pos:end="565:20">[<expr pos:start="565:19" pos:end="565:19"><literal type="number" pos:start="565:19" pos:end="565:19">0</literal></expr>]</index></name> <operator pos:start="565:22" pos:end="565:22">=</operator> <literal type="number" pos:start="565:24" pos:end="565:24">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="567:17" pos:end="567:28"><expr pos:start="567:17" pos:end="567:27"><name pos:start="567:17" pos:end="567:20"><name pos:start="567:17" pos:end="567:17">p</name><index pos:start="567:18" pos:end="567:20">[<expr pos:start="567:19" pos:end="567:19"><literal type="number" pos:start="567:19" pos:end="567:19">1</literal></expr>]</index></name> <operator pos:start="567:22" pos:end="567:22">=</operator> <literal type="number" pos:start="567:24" pos:end="567:27">0x16</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="569:17" pos:end="569:61">/* if a geometry hint is available, use it */</comment>

                <expr_stmt pos:start="571:17" pos:end="571:82"><expr pos:start="571:17" pos:end="571:81"><call pos:start="571:17" pos:end="571:81"><name pos:start="571:17" pos:end="571:38">bdrv_get_geometry_hint</name><argument_list pos:start="571:39" pos:end="571:81">(<argument pos:start="571:40" pos:end="571:53"><expr pos:start="571:40" pos:end="571:53"><name pos:start="571:40" pos:end="571:53"><name pos:start="571:40" pos:end="571:40">s</name><operator pos:start="571:41" pos:end="571:42">-&gt;</operator><name pos:start="571:43" pos:end="571:47">dinfo</name><operator pos:start="571:48" pos:end="571:49">-&gt;</operator><name pos:start="571:50" pos:end="571:53">bdrv</name></name></expr></argument>, <argument pos:start="571:56" pos:end="571:65"><expr pos:start="571:56" pos:end="571:65"><operator pos:start="571:56" pos:end="571:56">&amp;</operator><name pos:start="571:57" pos:end="571:65">cylinders</name></expr></argument>, <argument pos:start="571:68" pos:end="571:73"><expr pos:start="571:68" pos:end="571:73"><operator pos:start="571:68" pos:end="571:68">&amp;</operator><name pos:start="571:69" pos:end="571:73">heads</name></expr></argument>, <argument pos:start="571:76" pos:end="571:80"><expr pos:start="571:76" pos:end="571:80"><operator pos:start="571:76" pos:end="571:76">&amp;</operator><name pos:start="571:77" pos:end="571:80">secs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="573:17" pos:end="573:48"><expr pos:start="573:17" pos:end="573:47"><name pos:start="573:17" pos:end="573:20"><name pos:start="573:17" pos:end="573:17">p</name><index pos:start="573:18" pos:end="573:20">[<expr pos:start="573:19" pos:end="573:19"><literal type="number" pos:start="573:19" pos:end="573:19">2</literal></expr>]</index></name> <operator pos:start="573:22" pos:end="573:22">=</operator> <operator pos:start="573:24" pos:end="573:24">(</operator><name pos:start="573:25" pos:end="573:33">cylinders</name> <operator pos:start="573:35" pos:end="573:36">&gt;&gt;</operator> <literal type="number" pos:start="573:38" pos:end="573:39">16</literal><operator pos:start="573:40" pos:end="573:40">)</operator> <operator pos:start="573:42" pos:end="573:42">&amp;</operator> <literal type="number" pos:start="573:44" pos:end="573:47">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="575:17" pos:end="575:47"><expr pos:start="575:17" pos:end="575:46"><name pos:start="575:17" pos:end="575:20"><name pos:start="575:17" pos:end="575:17">p</name><index pos:start="575:18" pos:end="575:20">[<expr pos:start="575:19" pos:end="575:19"><literal type="number" pos:start="575:19" pos:end="575:19">3</literal></expr>]</index></name> <operator pos:start="575:22" pos:end="575:22">=</operator> <operator pos:start="575:24" pos:end="575:24">(</operator><name pos:start="575:25" pos:end="575:33">cylinders</name> <operator pos:start="575:35" pos:end="575:36">&gt;&gt;</operator> <literal type="number" pos:start="575:38" pos:end="575:38">8</literal><operator pos:start="575:39" pos:end="575:39">)</operator> <operator pos:start="575:41" pos:end="575:41">&amp;</operator> <literal type="number" pos:start="575:43" pos:end="575:46">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="577:17" pos:end="577:40"><expr pos:start="577:17" pos:end="577:39"><name pos:start="577:17" pos:end="577:20"><name pos:start="577:17" pos:end="577:17">p</name><index pos:start="577:18" pos:end="577:20">[<expr pos:start="577:19" pos:end="577:19"><literal type="number" pos:start="577:19" pos:end="577:19">4</literal></expr>]</index></name> <operator pos:start="577:22" pos:end="577:22">=</operator> <name pos:start="577:24" pos:end="577:32">cylinders</name> <operator pos:start="577:34" pos:end="577:34">&amp;</operator> <literal type="number" pos:start="577:36" pos:end="577:39">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="579:17" pos:end="579:36"><expr pos:start="579:17" pos:end="579:35"><name pos:start="579:17" pos:end="579:20"><name pos:start="579:17" pos:end="579:17">p</name><index pos:start="579:18" pos:end="579:20">[<expr pos:start="579:19" pos:end="579:19"><literal type="number" pos:start="579:19" pos:end="579:19">5</literal></expr>]</index></name> <operator pos:start="579:22" pos:end="579:22">=</operator> <name pos:start="579:24" pos:end="579:28">heads</name> <operator pos:start="579:30" pos:end="579:30">&amp;</operator> <literal type="number" pos:start="579:32" pos:end="579:35">0xff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="581:17" pos:end="581:60">/* Write precomp start cylinder, disabled */</comment>

                <expr_stmt pos:start="583:17" pos:end="583:48"><expr pos:start="583:17" pos:end="583:47"><name pos:start="583:17" pos:end="583:20"><name pos:start="583:17" pos:end="583:17">p</name><index pos:start="583:18" pos:end="583:20">[<expr pos:start="583:19" pos:end="583:19"><literal type="number" pos:start="583:19" pos:end="583:19">6</literal></expr>]</index></name> <operator pos:start="583:22" pos:end="583:22">=</operator> <operator pos:start="583:24" pos:end="583:24">(</operator><name pos:start="583:25" pos:end="583:33">cylinders</name> <operator pos:start="583:35" pos:end="583:36">&gt;&gt;</operator> <literal type="number" pos:start="583:38" pos:end="583:39">16</literal><operator pos:start="583:40" pos:end="583:40">)</operator> <operator pos:start="583:42" pos:end="583:42">&amp;</operator> <literal type="number" pos:start="583:44" pos:end="583:47">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="585:17" pos:end="585:47"><expr pos:start="585:17" pos:end="585:46"><name pos:start="585:17" pos:end="585:20"><name pos:start="585:17" pos:end="585:17">p</name><index pos:start="585:18" pos:end="585:20">[<expr pos:start="585:19" pos:end="585:19"><literal type="number" pos:start="585:19" pos:end="585:19">7</literal></expr>]</index></name> <operator pos:start="585:22" pos:end="585:22">=</operator> <operator pos:start="585:24" pos:end="585:24">(</operator><name pos:start="585:25" pos:end="585:33">cylinders</name> <operator pos:start="585:35" pos:end="585:36">&gt;&gt;</operator> <literal type="number" pos:start="585:38" pos:end="585:38">8</literal><operator pos:start="585:39" pos:end="585:39">)</operator> <operator pos:start="585:41" pos:end="585:41">&amp;</operator> <literal type="number" pos:start="585:43" pos:end="585:46">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="587:17" pos:end="587:40"><expr pos:start="587:17" pos:end="587:39"><name pos:start="587:17" pos:end="587:20"><name pos:start="587:17" pos:end="587:17">p</name><index pos:start="587:18" pos:end="587:20">[<expr pos:start="587:19" pos:end="587:19"><literal type="number" pos:start="587:19" pos:end="587:19">8</literal></expr>]</index></name> <operator pos:start="587:22" pos:end="587:22">=</operator> <name pos:start="587:24" pos:end="587:32">cylinders</name> <operator pos:start="587:34" pos:end="587:34">&amp;</operator> <literal type="number" pos:start="587:36" pos:end="587:39">0xff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="589:17" pos:end="589:62">/* Reduced current start cylinder, disabled */</comment>

                <expr_stmt pos:start="591:17" pos:end="591:48"><expr pos:start="591:17" pos:end="591:47"><name pos:start="591:17" pos:end="591:20"><name pos:start="591:17" pos:end="591:17">p</name><index pos:start="591:18" pos:end="591:20">[<expr pos:start="591:19" pos:end="591:19"><literal type="number" pos:start="591:19" pos:end="591:19">9</literal></expr>]</index></name> <operator pos:start="591:22" pos:end="591:22">=</operator> <operator pos:start="591:24" pos:end="591:24">(</operator><name pos:start="591:25" pos:end="591:33">cylinders</name> <operator pos:start="591:35" pos:end="591:36">&gt;&gt;</operator> <literal type="number" pos:start="591:38" pos:end="591:39">16</literal><operator pos:start="591:40" pos:end="591:40">)</operator> <operator pos:start="591:42" pos:end="591:42">&amp;</operator> <literal type="number" pos:start="591:44" pos:end="591:47">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="593:17" pos:end="593:48"><expr pos:start="593:17" pos:end="593:47"><name pos:start="593:17" pos:end="593:21"><name pos:start="593:17" pos:end="593:17">p</name><index pos:start="593:18" pos:end="593:21">[<expr pos:start="593:19" pos:end="593:20"><literal type="number" pos:start="593:19" pos:end="593:20">10</literal></expr>]</index></name> <operator pos:start="593:23" pos:end="593:23">=</operator> <operator pos:start="593:25" pos:end="593:25">(</operator><name pos:start="593:26" pos:end="593:34">cylinders</name> <operator pos:start="593:36" pos:end="593:37">&gt;&gt;</operator> <literal type="number" pos:start="593:39" pos:end="593:39">8</literal><operator pos:start="593:40" pos:end="593:40">)</operator> <operator pos:start="593:42" pos:end="593:42">&amp;</operator> <literal type="number" pos:start="593:44" pos:end="593:47">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="595:17" pos:end="595:41"><expr pos:start="595:17" pos:end="595:40"><name pos:start="595:17" pos:end="595:21"><name pos:start="595:17" pos:end="595:17">p</name><index pos:start="595:18" pos:end="595:21">[<expr pos:start="595:19" pos:end="595:20"><literal type="number" pos:start="595:19" pos:end="595:20">11</literal></expr>]</index></name> <operator pos:start="595:23" pos:end="595:23">=</operator> <name pos:start="595:25" pos:end="595:33">cylinders</name> <operator pos:start="595:35" pos:end="595:35">&amp;</operator> <literal type="number" pos:start="595:37" pos:end="595:40">0xff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="597:17" pos:end="597:50">/* Device step rate [ns], 200ns */</comment>

                <expr_stmt pos:start="599:17" pos:end="599:26"><expr pos:start="599:17" pos:end="599:25"><name pos:start="599:17" pos:end="599:21"><name pos:start="599:17" pos:end="599:17">p</name><index pos:start="599:18" pos:end="599:21">[<expr pos:start="599:19" pos:end="599:20"><literal type="number" pos:start="599:19" pos:end="599:20">12</literal></expr>]</index></name> <operator pos:start="599:23" pos:end="599:23">=</operator> <literal type="number" pos:start="599:25" pos:end="599:25">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="601:17" pos:end="601:28"><expr pos:start="601:17" pos:end="601:27"><name pos:start="601:17" pos:end="601:21"><name pos:start="601:17" pos:end="601:17">p</name><index pos:start="601:18" pos:end="601:21">[<expr pos:start="601:19" pos:end="601:20"><literal type="number" pos:start="601:19" pos:end="601:20">13</literal></expr>]</index></name> <operator pos:start="601:23" pos:end="601:23">=</operator> <literal type="number" pos:start="601:25" pos:end="601:27">200</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="603:17" pos:end="603:43">/* Landing zone cylinder */</comment>

                <expr_stmt pos:start="605:17" pos:end="605:29"><expr pos:start="605:17" pos:end="605:28"><name pos:start="605:17" pos:end="605:21"><name pos:start="605:17" pos:end="605:17">p</name><index pos:start="605:18" pos:end="605:21">[<expr pos:start="605:19" pos:end="605:20"><literal type="number" pos:start="605:19" pos:end="605:20">14</literal></expr>]</index></name> <operator pos:start="605:23" pos:end="605:23">=</operator> <literal type="number" pos:start="605:25" pos:end="605:28">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="607:17" pos:end="607:30"><expr pos:start="607:17" pos:end="607:29"><name pos:start="607:17" pos:end="607:21"><name pos:start="607:17" pos:end="607:17">p</name><index pos:start="607:18" pos:end="607:21">[<expr pos:start="607:19" pos:end="607:20"><literal type="number" pos:start="607:19" pos:end="607:20">15</literal></expr>]</index></name> <operator pos:start="607:23" pos:end="607:23">=</operator>  <literal type="number" pos:start="607:26" pos:end="607:29">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="609:17" pos:end="609:29"><expr pos:start="609:17" pos:end="609:28"><name pos:start="609:17" pos:end="609:21"><name pos:start="609:17" pos:end="609:17">p</name><index pos:start="609:18" pos:end="609:21">[<expr pos:start="609:19" pos:end="609:20"><literal type="number" pos:start="609:19" pos:end="609:20">16</literal></expr>]</index></name> <operator pos:start="609:23" pos:end="609:23">=</operator> <literal type="number" pos:start="609:25" pos:end="609:28">0xff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="611:17" pos:end="611:58">/* Medium rotation rate [rpm], 5400 rpm */</comment>

                <expr_stmt pos:start="613:17" pos:end="613:43"><expr pos:start="613:17" pos:end="613:42"><name pos:start="613:17" pos:end="613:21"><name pos:start="613:17" pos:end="613:17">p</name><index pos:start="613:18" pos:end="613:21">[<expr pos:start="613:19" pos:end="613:20"><literal type="number" pos:start="613:19" pos:end="613:20">20</literal></expr>]</index></name> <operator pos:start="613:23" pos:end="613:23">=</operator> <operator pos:start="613:25" pos:end="613:25">(</operator><literal type="number" pos:start="613:26" pos:end="613:29">5400</literal> <operator pos:start="613:31" pos:end="613:32">&gt;&gt;</operator> <literal type="number" pos:start="613:34" pos:end="613:34">8</literal><operator pos:start="613:35" pos:end="613:35">)</operator> <operator pos:start="613:37" pos:end="613:37">&amp;</operator> <literal type="number" pos:start="613:39" pos:end="613:42">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="615:17" pos:end="615:36"><expr pos:start="615:17" pos:end="615:35"><name pos:start="615:17" pos:end="615:21"><name pos:start="615:17" pos:end="615:17">p</name><index pos:start="615:18" pos:end="615:21">[<expr pos:start="615:19" pos:end="615:20"><literal type="number" pos:start="615:19" pos:end="615:20">21</literal></expr>]</index></name> <operator pos:start="615:23" pos:end="615:23">=</operator> <literal type="number" pos:start="615:25" pos:end="615:28">5400</literal> <operator pos:start="615:30" pos:end="615:30">&amp;</operator> <literal type="number" pos:start="615:32" pos:end="615:35">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="617:17" pos:end="617:26"><expr pos:start="617:17" pos:end="617:25"><name pos:start="617:17" pos:end="617:17">p</name> <operator pos:start="617:19" pos:end="617:20">+=</operator> <literal type="number" pos:start="617:22" pos:end="617:25">0x16</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="619:15" pos:end="695:13">else if <condition pos:start="619:23" pos:end="619:33">(<expr pos:start="619:24" pos:end="619:32"><name pos:start="619:24" pos:end="619:27">page</name> <operator pos:start="619:29" pos:end="619:30">==</operator> <literal type="number" pos:start="619:32" pos:end="619:32">5</literal></expr>)</condition> <block pos:start="619:35" pos:end="695:13">{<block_content pos:start="621:17" pos:end="693:26">

                <decl_stmt pos:start="621:17" pos:end="621:43"><decl pos:start="621:17" pos:end="621:29"><type pos:start="621:17" pos:end="621:19"><name pos:start="621:17" pos:end="621:19">int</name></type> <name pos:start="621:21" pos:end="621:29">cylinders</name></decl>, <decl pos:start="621:32" pos:end="621:36"><type ref="prev" pos:start="621:17" pos:end="621:19"/><name pos:start="621:32" pos:end="621:36">heads</name></decl>, <decl pos:start="621:39" pos:end="621:42"><type ref="prev" pos:start="621:17" pos:end="621:19"/><name pos:start="621:39" pos:end="621:42">secs</name></decl>;</decl_stmt>



                <comment type="block" pos:start="625:17" pos:end="625:57">/* Flexible disk device geometry page. */</comment>

                <expr_stmt pos:start="627:17" pos:end="627:25"><expr pos:start="627:17" pos:end="627:24"><name pos:start="627:17" pos:end="627:20"><name pos:start="627:17" pos:end="627:17">p</name><index pos:start="627:18" pos:end="627:20">[<expr pos:start="627:19" pos:end="627:19"><literal type="number" pos:start="627:19" pos:end="627:19">0</literal></expr>]</index></name> <operator pos:start="627:22" pos:end="627:22">=</operator> <literal type="number" pos:start="627:24" pos:end="627:24">5</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="629:17" pos:end="629:28"><expr pos:start="629:17" pos:end="629:27"><name pos:start="629:17" pos:end="629:20"><name pos:start="629:17" pos:end="629:17">p</name><index pos:start="629:18" pos:end="629:20">[<expr pos:start="629:19" pos:end="629:19"><literal type="number" pos:start="629:19" pos:end="629:19">1</literal></expr>]</index></name> <operator pos:start="629:22" pos:end="629:22">=</operator> <literal type="number" pos:start="629:24" pos:end="629:27">0x1e</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="631:17" pos:end="631:53">/* Transfer rate [kbit/s], 5Mbit/s */</comment>

                <expr_stmt pos:start="633:17" pos:end="633:33"><expr pos:start="633:17" pos:end="633:32"><name pos:start="633:17" pos:end="633:20"><name pos:start="633:17" pos:end="633:17">p</name><index pos:start="633:18" pos:end="633:20">[<expr pos:start="633:19" pos:end="633:19"><literal type="number" pos:start="633:19" pos:end="633:19">2</literal></expr>]</index></name> <operator pos:start="633:22" pos:end="633:22">=</operator> <literal type="number" pos:start="633:24" pos:end="633:27">5000</literal> <operator pos:start="633:29" pos:end="633:30">&gt;&gt;</operator> <literal type="number" pos:start="633:32" pos:end="633:32">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="635:17" pos:end="635:35"><expr pos:start="635:17" pos:end="635:34"><name pos:start="635:17" pos:end="635:20"><name pos:start="635:17" pos:end="635:17">p</name><index pos:start="635:18" pos:end="635:20">[<expr pos:start="635:19" pos:end="635:19"><literal type="number" pos:start="635:19" pos:end="635:19">3</literal></expr>]</index></name> <operator pos:start="635:22" pos:end="635:22">=</operator> <literal type="number" pos:start="635:24" pos:end="635:27">5000</literal> <operator pos:start="635:29" pos:end="635:29">&amp;</operator> <literal type="number" pos:start="635:31" pos:end="635:34">0xff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="637:17" pos:end="637:61">/* if a geometry hint is available, use it */</comment>

                <expr_stmt pos:start="639:17" pos:end="639:82"><expr pos:start="639:17" pos:end="639:81"><call pos:start="639:17" pos:end="639:81"><name pos:start="639:17" pos:end="639:38">bdrv_get_geometry_hint</name><argument_list pos:start="639:39" pos:end="639:81">(<argument pos:start="639:40" pos:end="639:53"><expr pos:start="639:40" pos:end="639:53"><name pos:start="639:40" pos:end="639:53"><name pos:start="639:40" pos:end="639:40">s</name><operator pos:start="639:41" pos:end="639:42">-&gt;</operator><name pos:start="639:43" pos:end="639:47">dinfo</name><operator pos:start="639:48" pos:end="639:49">-&gt;</operator><name pos:start="639:50" pos:end="639:53">bdrv</name></name></expr></argument>, <argument pos:start="639:56" pos:end="639:65"><expr pos:start="639:56" pos:end="639:65"><operator pos:start="639:56" pos:end="639:56">&amp;</operator><name pos:start="639:57" pos:end="639:65">cylinders</name></expr></argument>, <argument pos:start="639:68" pos:end="639:73"><expr pos:start="639:68" pos:end="639:73"><operator pos:start="639:68" pos:end="639:68">&amp;</operator><name pos:start="639:69" pos:end="639:73">heads</name></expr></argument>, <argument pos:start="639:76" pos:end="639:80"><expr pos:start="639:76" pos:end="639:80"><operator pos:start="639:76" pos:end="639:76">&amp;</operator><name pos:start="639:77" pos:end="639:80">secs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="641:17" pos:end="641:36"><expr pos:start="641:17" pos:end="641:35"><name pos:start="641:17" pos:end="641:20"><name pos:start="641:17" pos:end="641:17">p</name><index pos:start="641:18" pos:end="641:20">[<expr pos:start="641:19" pos:end="641:19"><literal type="number" pos:start="641:19" pos:end="641:19">4</literal></expr>]</index></name> <operator pos:start="641:22" pos:end="641:22">=</operator> <name pos:start="641:24" pos:end="641:28">heads</name> <operator pos:start="641:30" pos:end="641:30">&amp;</operator> <literal type="number" pos:start="641:32" pos:end="641:35">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="643:17" pos:end="643:35"><expr pos:start="643:17" pos:end="643:34"><name pos:start="643:17" pos:end="643:20"><name pos:start="643:17" pos:end="643:17">p</name><index pos:start="643:18" pos:end="643:20">[<expr pos:start="643:19" pos:end="643:19"><literal type="number" pos:start="643:19" pos:end="643:19">5</literal></expr>]</index></name> <operator pos:start="643:22" pos:end="643:22">=</operator> <name pos:start="643:24" pos:end="643:27">secs</name> <operator pos:start="643:29" pos:end="643:29">&amp;</operator> <literal type="number" pos:start="643:31" pos:end="643:34">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="645:17" pos:end="645:43"><expr pos:start="645:17" pos:end="645:42"><name pos:start="645:17" pos:end="645:20"><name pos:start="645:17" pos:end="645:17">p</name><index pos:start="645:18" pos:end="645:20">[<expr pos:start="645:19" pos:end="645:19"><literal type="number" pos:start="645:19" pos:end="645:19">6</literal></expr>]</index></name> <operator pos:start="645:22" pos:end="645:22">=</operator> <name pos:start="645:24" pos:end="645:38"><name pos:start="645:24" pos:end="645:24">s</name><operator pos:start="645:25" pos:end="645:26">-&gt;</operator><name pos:start="645:27" pos:end="645:38">cluster_size</name></name> <operator pos:start="645:40" pos:end="645:40">*</operator> <literal type="number" pos:start="645:42" pos:end="645:42">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="647:17" pos:end="647:47"><expr pos:start="647:17" pos:end="647:46"><name pos:start="647:17" pos:end="647:20"><name pos:start="647:17" pos:end="647:17">p</name><index pos:start="647:18" pos:end="647:20">[<expr pos:start="647:19" pos:end="647:19"><literal type="number" pos:start="647:19" pos:end="647:19">8</literal></expr>]</index></name> <operator pos:start="647:22" pos:end="647:22">=</operator> <operator pos:start="647:24" pos:end="647:24">(</operator><name pos:start="647:25" pos:end="647:33">cylinders</name> <operator pos:start="647:35" pos:end="647:36">&gt;&gt;</operator> <literal type="number" pos:start="647:38" pos:end="647:38">8</literal><operator pos:start="647:39" pos:end="647:39">)</operator> <operator pos:start="647:41" pos:end="647:41">&amp;</operator> <literal type="number" pos:start="647:43" pos:end="647:46">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="649:17" pos:end="649:40"><expr pos:start="649:17" pos:end="649:39"><name pos:start="649:17" pos:end="649:20"><name pos:start="649:17" pos:end="649:17">p</name><index pos:start="649:18" pos:end="649:20">[<expr pos:start="649:19" pos:end="649:19"><literal type="number" pos:start="649:19" pos:end="649:19">9</literal></expr>]</index></name> <operator pos:start="649:22" pos:end="649:22">=</operator> <name pos:start="649:24" pos:end="649:32">cylinders</name> <operator pos:start="649:34" pos:end="649:34">&amp;</operator> <literal type="number" pos:start="649:36" pos:end="649:39">0xff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="651:17" pos:end="651:60">/* Write precomp start cylinder, disabled */</comment>

                <expr_stmt pos:start="653:17" pos:end="653:48"><expr pos:start="653:17" pos:end="653:47"><name pos:start="653:17" pos:end="653:21"><name pos:start="653:17" pos:end="653:17">p</name><index pos:start="653:18" pos:end="653:21">[<expr pos:start="653:19" pos:end="653:20"><literal type="number" pos:start="653:19" pos:end="653:20">10</literal></expr>]</index></name> <operator pos:start="653:23" pos:end="653:23">=</operator> <operator pos:start="653:25" pos:end="653:25">(</operator><name pos:start="653:26" pos:end="653:34">cylinders</name> <operator pos:start="653:36" pos:end="653:37">&gt;&gt;</operator> <literal type="number" pos:start="653:39" pos:end="653:39">8</literal><operator pos:start="653:40" pos:end="653:40">)</operator> <operator pos:start="653:42" pos:end="653:42">&amp;</operator> <literal type="number" pos:start="653:44" pos:end="653:47">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="655:17" pos:end="655:41"><expr pos:start="655:17" pos:end="655:40"><name pos:start="655:17" pos:end="655:21"><name pos:start="655:17" pos:end="655:17">p</name><index pos:start="655:18" pos:end="655:21">[<expr pos:start="655:19" pos:end="655:20"><literal type="number" pos:start="655:19" pos:end="655:20">11</literal></expr>]</index></name> <operator pos:start="655:23" pos:end="655:23">=</operator> <name pos:start="655:25" pos:end="655:33">cylinders</name> <operator pos:start="655:35" pos:end="655:35">&amp;</operator> <literal type="number" pos:start="655:37" pos:end="655:40">0xff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="657:17" pos:end="657:62">/* Reduced current start cylinder, disabled */</comment>

                <expr_stmt pos:start="659:17" pos:end="659:48"><expr pos:start="659:17" pos:end="659:47"><name pos:start="659:17" pos:end="659:21"><name pos:start="659:17" pos:end="659:17">p</name><index pos:start="659:18" pos:end="659:21">[<expr pos:start="659:19" pos:end="659:20"><literal type="number" pos:start="659:19" pos:end="659:20">12</literal></expr>]</index></name> <operator pos:start="659:23" pos:end="659:23">=</operator> <operator pos:start="659:25" pos:end="659:25">(</operator><name pos:start="659:26" pos:end="659:34">cylinders</name> <operator pos:start="659:36" pos:end="659:37">&gt;&gt;</operator> <literal type="number" pos:start="659:39" pos:end="659:39">8</literal><operator pos:start="659:40" pos:end="659:40">)</operator> <operator pos:start="659:42" pos:end="659:42">&amp;</operator> <literal type="number" pos:start="659:44" pos:end="659:47">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="661:17" pos:end="661:41"><expr pos:start="661:17" pos:end="661:40"><name pos:start="661:17" pos:end="661:21"><name pos:start="661:17" pos:end="661:17">p</name><index pos:start="661:18" pos:end="661:21">[<expr pos:start="661:19" pos:end="661:20"><literal type="number" pos:start="661:19" pos:end="661:20">13</literal></expr>]</index></name> <operator pos:start="661:23" pos:end="661:23">=</operator> <name pos:start="661:25" pos:end="661:33">cylinders</name> <operator pos:start="661:35" pos:end="661:35">&amp;</operator> <literal type="number" pos:start="661:37" pos:end="661:40">0xff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="663:17" pos:end="663:53">/* Device step rate [100us], 100us */</comment>

                <expr_stmt pos:start="665:17" pos:end="665:26"><expr pos:start="665:17" pos:end="665:25"><name pos:start="665:17" pos:end="665:21"><name pos:start="665:17" pos:end="665:17">p</name><index pos:start="665:18" pos:end="665:21">[<expr pos:start="665:19" pos:end="665:20"><literal type="number" pos:start="665:19" pos:end="665:20">14</literal></expr>]</index></name> <operator pos:start="665:23" pos:end="665:23">=</operator> <literal type="number" pos:start="665:25" pos:end="665:25">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="667:17" pos:end="667:26"><expr pos:start="667:17" pos:end="667:25"><name pos:start="667:17" pos:end="667:21"><name pos:start="667:17" pos:end="667:17">p</name><index pos:start="667:18" pos:end="667:21">[<expr pos:start="667:19" pos:end="667:20"><literal type="number" pos:start="667:19" pos:end="667:20">15</literal></expr>]</index></name> <operator pos:start="667:23" pos:end="667:23">=</operator> <literal type="number" pos:start="667:25" pos:end="667:25">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="669:17" pos:end="669:55">/* Device step pulse width [us], 1us */</comment>

                <expr_stmt pos:start="671:17" pos:end="671:26"><expr pos:start="671:17" pos:end="671:25"><name pos:start="671:17" pos:end="671:21"><name pos:start="671:17" pos:end="671:17">p</name><index pos:start="671:18" pos:end="671:21">[<expr pos:start="671:19" pos:end="671:20"><literal type="number" pos:start="671:19" pos:end="671:20">16</literal></expr>]</index></name> <operator pos:start="671:23" pos:end="671:23">=</operator> <literal type="number" pos:start="671:25" pos:end="671:25">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="673:17" pos:end="673:61">/* Device head settle delay [100us], 100us */</comment>

                <expr_stmt pos:start="675:17" pos:end="675:26"><expr pos:start="675:17" pos:end="675:25"><name pos:start="675:17" pos:end="675:21"><name pos:start="675:17" pos:end="675:17">p</name><index pos:start="675:18" pos:end="675:21">[<expr pos:start="675:19" pos:end="675:20"><literal type="number" pos:start="675:19" pos:end="675:20">17</literal></expr>]</index></name> <operator pos:start="675:23" pos:end="675:23">=</operator> <literal type="number" pos:start="675:25" pos:end="675:25">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="677:17" pos:end="677:26"><expr pos:start="677:17" pos:end="677:25"><name pos:start="677:17" pos:end="677:21"><name pos:start="677:17" pos:end="677:17">p</name><index pos:start="677:18" pos:end="677:21">[<expr pos:start="677:19" pos:end="677:20"><literal type="number" pos:start="677:19" pos:end="677:20">18</literal></expr>]</index></name> <operator pos:start="677:23" pos:end="677:23">=</operator> <literal type="number" pos:start="677:25" pos:end="677:25">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="679:17" pos:end="679:49">/* Motor on delay [0.1s], 0.1s */</comment>

                <expr_stmt pos:start="681:17" pos:end="681:26"><expr pos:start="681:17" pos:end="681:25"><name pos:start="681:17" pos:end="681:21"><name pos:start="681:17" pos:end="681:17">p</name><index pos:start="681:18" pos:end="681:21">[<expr pos:start="681:19" pos:end="681:20"><literal type="number" pos:start="681:19" pos:end="681:20">19</literal></expr>]</index></name> <operator pos:start="681:23" pos:end="681:23">=</operator> <literal type="number" pos:start="681:25" pos:end="681:25">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="683:17" pos:end="683:50">/* Motor off delay [0.1s], 0.1s */</comment>

                <expr_stmt pos:start="685:17" pos:end="685:26"><expr pos:start="685:17" pos:end="685:25"><name pos:start="685:17" pos:end="685:21"><name pos:start="685:17" pos:end="685:17">p</name><index pos:start="685:18" pos:end="685:21">[<expr pos:start="685:19" pos:end="685:20"><literal type="number" pos:start="685:19" pos:end="685:20">20</literal></expr>]</index></name> <operator pos:start="685:23" pos:end="685:23">=</operator> <literal type="number" pos:start="685:25" pos:end="685:25">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="687:17" pos:end="687:58">/* Medium rotation rate [rpm], 5400 rpm */</comment>

                <expr_stmt pos:start="689:17" pos:end="689:43"><expr pos:start="689:17" pos:end="689:42"><name pos:start="689:17" pos:end="689:21"><name pos:start="689:17" pos:end="689:17">p</name><index pos:start="689:18" pos:end="689:21">[<expr pos:start="689:19" pos:end="689:20"><literal type="number" pos:start="689:19" pos:end="689:20">28</literal></expr>]</index></name> <operator pos:start="689:23" pos:end="689:23">=</operator> <operator pos:start="689:25" pos:end="689:25">(</operator><literal type="number" pos:start="689:26" pos:end="689:29">5400</literal> <operator pos:start="689:31" pos:end="689:32">&gt;&gt;</operator> <literal type="number" pos:start="689:34" pos:end="689:34">8</literal><operator pos:start="689:35" pos:end="689:35">)</operator> <operator pos:start="689:37" pos:end="689:37">&amp;</operator> <literal type="number" pos:start="689:39" pos:end="689:42">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="691:17" pos:end="691:36"><expr pos:start="691:17" pos:end="691:35"><name pos:start="691:17" pos:end="691:21"><name pos:start="691:17" pos:end="691:17">p</name><index pos:start="691:18" pos:end="691:21">[<expr pos:start="691:19" pos:end="691:20"><literal type="number" pos:start="691:19" pos:end="691:20">29</literal></expr>]</index></name> <operator pos:start="691:23" pos:end="691:23">=</operator> <literal type="number" pos:start="691:25" pos:end="691:28">5400</literal> <operator pos:start="691:30" pos:end="691:30">&amp;</operator> <literal type="number" pos:start="691:32" pos:end="691:35">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="693:17" pos:end="693:26"><expr pos:start="693:17" pos:end="693:25"><name pos:start="693:17" pos:end="693:17">p</name> <operator pos:start="693:19" pos:end="693:20">+=</operator> <literal type="number" pos:start="693:22" pos:end="693:25">0x1e</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="695:15" pos:end="713:13">else if <condition pos:start="695:23" pos:end="695:51">(<expr pos:start="695:24" pos:end="695:50"><operator pos:start="695:24" pos:end="695:24">(</operator><name pos:start="695:25" pos:end="695:28">page</name> <operator pos:start="695:30" pos:end="695:31">==</operator> <literal type="number" pos:start="695:33" pos:end="695:33">8</literal> <operator pos:start="695:35" pos:end="695:36">||</operator> <name pos:start="695:38" pos:end="695:41">page</name> <operator pos:start="695:43" pos:end="695:44">==</operator> <literal type="number" pos:start="695:46" pos:end="695:49">0x3f</literal><operator pos:start="695:50" pos:end="695:50">)</operator></expr>)</condition> <block pos:start="695:53" pos:end="713:13">{<block_content pos:start="699:17" pos:end="711:24">

                <comment type="block" pos:start="697:17" pos:end="697:36">/* Caching page.  */</comment>

                <expr_stmt pos:start="699:17" pos:end="699:31"><expr pos:start="699:17" pos:end="699:30"><call pos:start="699:17" pos:end="699:30"><name pos:start="699:17" pos:end="699:22">memset</name><argument_list pos:start="699:23" pos:end="699:30">(<argument pos:start="699:24" pos:end="699:24"><expr pos:start="699:24" pos:end="699:24"><name pos:start="699:24" pos:end="699:24">p</name></expr></argument>,<argument pos:start="699:26" pos:end="699:26"><expr pos:start="699:26" pos:end="699:26"><literal type="number" pos:start="699:26" pos:end="699:26">0</literal></expr></argument>,<argument pos:start="699:28" pos:end="699:29"><expr pos:start="699:28" pos:end="699:29"><literal type="number" pos:start="699:28" pos:end="699:29">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="701:17" pos:end="701:25"><expr pos:start="701:17" pos:end="701:24"><name pos:start="701:17" pos:end="701:20"><name pos:start="701:17" pos:end="701:17">p</name><index pos:start="701:18" pos:end="701:20">[<expr pos:start="701:19" pos:end="701:19"><literal type="number" pos:start="701:19" pos:end="701:19">0</literal></expr>]</index></name> <operator pos:start="701:22" pos:end="701:22">=</operator> <literal type="number" pos:start="701:24" pos:end="701:24">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="703:17" pos:end="703:28"><expr pos:start="703:17" pos:end="703:27"><name pos:start="703:17" pos:end="703:20"><name pos:start="703:17" pos:end="703:17">p</name><index pos:start="703:18" pos:end="703:20">[<expr pos:start="703:19" pos:end="703:19"><literal type="number" pos:start="703:19" pos:end="703:19">1</literal></expr>]</index></name> <operator pos:start="703:22" pos:end="703:22">=</operator> <literal type="number" pos:start="703:24" pos:end="703:27">0x12</literal></expr>;</expr_stmt>

                <if_stmt pos:start="705:17" pos:end="709:17"><if pos:start="705:17" pos:end="709:17">if <condition pos:start="705:20" pos:end="705:60">(<expr pos:start="705:21" pos:end="705:59"><call pos:start="705:21" pos:end="705:59"><name pos:start="705:21" pos:end="705:43">bdrv_enable_write_cache</name><argument_list pos:start="705:44" pos:end="705:59">(<argument pos:start="705:45" pos:end="705:58"><expr pos:start="705:45" pos:end="705:58"><name pos:start="705:45" pos:end="705:58"><name pos:start="705:45" pos:end="705:45">s</name><operator pos:start="705:46" pos:end="705:47">-&gt;</operator><name pos:start="705:48" pos:end="705:52">dinfo</name><operator pos:start="705:53" pos:end="705:54">-&gt;</operator><name pos:start="705:55" pos:end="705:58">bdrv</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="705:62" pos:end="709:17">{<block_content pos:start="707:22" pos:end="707:30">

                     <expr_stmt pos:start="707:22" pos:end="707:30"><expr pos:start="707:22" pos:end="707:29"><name pos:start="707:22" pos:end="707:25"><name pos:start="707:22" pos:end="707:22">p</name><index pos:start="707:23" pos:end="707:25">[<expr pos:start="707:24" pos:end="707:24"><literal type="number" pos:start="707:24" pos:end="707:24">2</literal></expr>]</index></name> <operator pos:start="707:27" pos:end="707:27">=</operator> <literal type="number" pos:start="707:29" pos:end="707:29">4</literal></expr>;</expr_stmt> <comment type="block" pos:start="707:32" pos:end="707:40">/* WCE */</comment>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="711:17" pos:end="711:24"><expr pos:start="711:17" pos:end="711:23"><name pos:start="711:17" pos:end="711:17">p</name> <operator pos:start="711:19" pos:end="711:20">+=</operator> <literal type="number" pos:start="711:22" pos:end="711:23">20</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="715:13" pos:end="773:13"><if pos:start="715:13" pos:end="773:13">if <condition pos:start="715:16" pos:end="717:79">(<expr pos:start="715:17" pos:end="717:78"><operator pos:start="715:17" pos:end="715:17">(</operator><name pos:start="715:18" pos:end="715:21">page</name> <operator pos:start="715:23" pos:end="715:24">==</operator> <literal type="number" pos:start="715:26" pos:end="715:29">0x3f</literal> <operator pos:start="715:31" pos:end="715:32">||</operator> <name pos:start="715:34" pos:end="715:37">page</name> <operator pos:start="715:39" pos:end="715:40">==</operator> <literal type="number" pos:start="715:42" pos:end="715:45">0x2a</literal><operator pos:start="715:46" pos:end="715:46">)</operator>

                    <operator pos:start="717:21" pos:end="717:22">&amp;&amp;</operator> <operator pos:start="717:24" pos:end="717:24">(</operator><call pos:start="717:25" pos:end="717:58"><name pos:start="717:25" pos:end="717:42">bdrv_get_type_hint</name><argument_list pos:start="717:43" pos:end="717:58">(<argument pos:start="717:44" pos:end="717:57"><expr pos:start="717:44" pos:end="717:57"><name pos:start="717:44" pos:end="717:57"><name pos:start="717:44" pos:end="717:44">s</name><operator pos:start="717:45" pos:end="717:46">-&gt;</operator><name pos:start="717:47" pos:end="717:51">dinfo</name><operator pos:start="717:52" pos:end="717:53">-&gt;</operator><name pos:start="717:54" pos:end="717:57">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="717:60" pos:end="717:61">==</operator> <name pos:start="717:63" pos:end="717:77">BDRV_TYPE_CDROM</name><operator pos:start="717:78" pos:end="717:78">)</operator></expr>)</condition> <block pos:start="717:81" pos:end="773:13">{<block_content pos:start="721:17" pos:end="771:24">

                <comment type="block" pos:start="719:17" pos:end="719:65">/* CD Capabilities and Mechanical Status page. */</comment>

                <expr_stmt pos:start="721:17" pos:end="721:28"><expr pos:start="721:17" pos:end="721:27"><name pos:start="721:17" pos:end="721:20"><name pos:start="721:17" pos:end="721:17">p</name><index pos:start="721:18" pos:end="721:20">[<expr pos:start="721:19" pos:end="721:19"><literal type="number" pos:start="721:19" pos:end="721:19">0</literal></expr>]</index></name> <operator pos:start="721:22" pos:end="721:22">=</operator> <literal type="number" pos:start="721:24" pos:end="721:27">0x2a</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="723:17" pos:end="723:28"><expr pos:start="723:17" pos:end="723:27"><name pos:start="723:17" pos:end="723:20"><name pos:start="723:17" pos:end="723:17">p</name><index pos:start="723:18" pos:end="723:20">[<expr pos:start="723:19" pos:end="723:19"><literal type="number" pos:start="723:19" pos:end="723:19">1</literal></expr>]</index></name> <operator pos:start="723:22" pos:end="723:22">=</operator> <literal type="number" pos:start="723:24" pos:end="723:27">0x14</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="725:17" pos:end="725:25"><expr pos:start="725:17" pos:end="725:24"><name pos:start="725:17" pos:end="725:20"><name pos:start="725:17" pos:end="725:17">p</name><index pos:start="725:18" pos:end="725:20">[<expr pos:start="725:19" pos:end="725:19"><literal type="number" pos:start="725:19" pos:end="725:19">2</literal></expr>]</index></name> <operator pos:start="725:22" pos:end="725:22">=</operator> <literal type="number" pos:start="725:24" pos:end="725:24">3</literal></expr>;</expr_stmt> <comment type="line" pos:start="725:27" pos:end="725:46">// CD-R &amp; CD-RW read</comment>

                <expr_stmt pos:start="727:17" pos:end="727:25"><expr pos:start="727:17" pos:end="727:24"><name pos:start="727:17" pos:end="727:20"><name pos:start="727:17" pos:end="727:17">p</name><index pos:start="727:18" pos:end="727:20">[<expr pos:start="727:19" pos:end="727:19"><literal type="number" pos:start="727:19" pos:end="727:19">3</literal></expr>]</index></name> <operator pos:start="727:22" pos:end="727:22">=</operator> <literal type="number" pos:start="727:24" pos:end="727:24">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="727:27" pos:end="727:50">// Writing not supported</comment>

                <expr_stmt pos:start="729:17" pos:end="729:28"><expr pos:start="729:17" pos:end="729:27"><name pos:start="729:17" pos:end="729:20"><name pos:start="729:17" pos:end="729:17">p</name><index pos:start="729:18" pos:end="729:20">[<expr pos:start="729:19" pos:end="729:19"><literal type="number" pos:start="729:19" pos:end="729:19">4</literal></expr>]</index></name> <operator pos:start="729:22" pos:end="729:22">=</operator> <literal type="number" pos:start="729:24" pos:end="729:27">0x7f</literal></expr>;</expr_stmt> <comment type="block" pos:start="729:30" pos:end="731:74">/* Audio, composite, digital out,

                                         mode 2 form 1&amp;2, multi session */</comment>

                <expr_stmt pos:start="733:17" pos:end="733:28"><expr pos:start="733:17" pos:end="733:27"><name pos:start="733:17" pos:end="733:20"><name pos:start="733:17" pos:end="733:17">p</name><index pos:start="733:18" pos:end="733:20">[<expr pos:start="733:19" pos:end="733:19"><literal type="number" pos:start="733:19" pos:end="733:19">5</literal></expr>]</index></name> <operator pos:start="733:22" pos:end="733:22">=</operator> <literal type="number" pos:start="733:24" pos:end="733:27">0xff</literal></expr>;</expr_stmt> <comment type="block" pos:start="733:30" pos:end="737:57">/* CD DA, DA accurate, RW supported,

                                         RW corrected, C2 errors, ISRC,

                                         UPC, Bar code */</comment>

                <expr_stmt pos:start="739:17" pos:end="739:70"><expr pos:start="739:17" pos:end="739:69"><name pos:start="739:17" pos:end="739:20"><name pos:start="739:17" pos:end="739:17">p</name><index pos:start="739:18" pos:end="739:20">[<expr pos:start="739:19" pos:end="739:19"><literal type="number" pos:start="739:19" pos:end="739:19">6</literal></expr>]</index></name> <operator pos:start="739:22" pos:end="739:22">=</operator> <literal type="number" pos:start="739:24" pos:end="739:27">0x2d</literal> <operator pos:start="739:29" pos:end="739:29">|</operator> <operator pos:start="739:31" pos:end="739:31">(</operator><ternary pos:start="739:32" pos:end="739:68"><condition pos:start="739:32" pos:end="739:62"><expr pos:start="739:32" pos:end="739:61"><call pos:start="739:32" pos:end="739:61"><name pos:start="739:32" pos:end="739:45">bdrv_is_locked</name><argument_list pos:start="739:46" pos:end="739:61">(<argument pos:start="739:47" pos:end="739:60"><expr pos:start="739:47" pos:end="739:60"><name pos:start="739:47" pos:end="739:60"><name pos:start="739:47" pos:end="739:47">s</name><operator pos:start="739:48" pos:end="739:49">-&gt;</operator><name pos:start="739:50" pos:end="739:54">dinfo</name><operator pos:start="739:55" pos:end="739:56">-&gt;</operator><name pos:start="739:57" pos:end="739:60">bdrv</name></name></expr></argument>)</argument_list></call></expr>?</condition><then pos:start="739:64" pos:end="739:64"> <expr pos:start="739:64" pos:end="739:64"><literal type="number" pos:start="739:64" pos:end="739:64">2</literal></expr> </then><else pos:start="739:66" pos:end="739:68">: <expr pos:start="739:68" pos:end="739:68"><literal type="number" pos:start="739:68" pos:end="739:68">0</literal></expr></else></ternary><operator pos:start="739:69" pos:end="739:69">)</operator></expr>;</expr_stmt>

                <comment type="block" pos:start="741:17" pos:end="741:68">/* Locking supported, jumper present, eject, tray */</comment>

                <expr_stmt pos:start="743:17" pos:end="743:25"><expr pos:start="743:17" pos:end="743:24"><name pos:start="743:17" pos:end="743:20"><name pos:start="743:17" pos:end="743:17">p</name><index pos:start="743:18" pos:end="743:20">[<expr pos:start="743:19" pos:end="743:19"><literal type="number" pos:start="743:19" pos:end="743:19">7</literal></expr>]</index></name> <operator pos:start="743:22" pos:end="743:22">=</operator> <literal type="number" pos:start="743:24" pos:end="743:24">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="743:27" pos:end="745:48">/* no volume &amp; mute control, no

                                      changer */</comment>

                <expr_stmt pos:start="747:17" pos:end="747:39"><expr pos:start="747:17" pos:end="747:38"><name pos:start="747:17" pos:end="747:20"><name pos:start="747:17" pos:end="747:17">p</name><index pos:start="747:18" pos:end="747:20">[<expr pos:start="747:19" pos:end="747:19"><literal type="number" pos:start="747:19" pos:end="747:19">8</literal></expr>]</index></name> <operator pos:start="747:22" pos:end="747:22">=</operator> <operator pos:start="747:24" pos:end="747:24">(</operator><literal type="number" pos:start="747:25" pos:end="747:26">50</literal> <operator pos:start="747:28" pos:end="747:28">*</operator> <literal type="number" pos:start="747:30" pos:end="747:32">176</literal><operator pos:start="747:33" pos:end="747:33">)</operator> <operator pos:start="747:35" pos:end="747:36">&gt;&gt;</operator> <literal type="number" pos:start="747:38" pos:end="747:38">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="747:41" pos:end="747:57">// 50x read speed</comment>

                <expr_stmt pos:start="749:17" pos:end="749:41"><expr pos:start="749:17" pos:end="749:40"><name pos:start="749:17" pos:end="749:20"><name pos:start="749:17" pos:end="749:17">p</name><index pos:start="749:18" pos:end="749:20">[<expr pos:start="749:19" pos:end="749:19"><literal type="number" pos:start="749:19" pos:end="749:19">9</literal></expr>]</index></name> <operator pos:start="749:22" pos:end="749:22">=</operator> <operator pos:start="749:24" pos:end="749:24">(</operator><literal type="number" pos:start="749:25" pos:end="749:26">50</literal> <operator pos:start="749:28" pos:end="749:28">*</operator> <literal type="number" pos:start="749:30" pos:end="749:32">176</literal><operator pos:start="749:33" pos:end="749:33">)</operator> <operator pos:start="749:35" pos:end="749:35">&amp;</operator> <literal type="number" pos:start="749:37" pos:end="749:40">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="751:17" pos:end="751:31"><expr pos:start="751:17" pos:end="751:30"><name pos:start="751:17" pos:end="751:21"><name pos:start="751:17" pos:end="751:17">p</name><index pos:start="751:18" pos:end="751:21">[<expr pos:start="751:19" pos:end="751:20"><literal type="number" pos:start="751:19" pos:end="751:20">10</literal></expr>]</index></name> <operator pos:start="751:23" pos:end="751:23">=</operator> <literal type="number" pos:start="751:25" pos:end="751:25">0</literal> <operator pos:start="751:27" pos:end="751:28">&gt;&gt;</operator> <literal type="number" pos:start="751:30" pos:end="751:30">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="751:33" pos:end="751:44">// No volume</comment>

                <expr_stmt pos:start="753:17" pos:end="753:33"><expr pos:start="753:17" pos:end="753:32"><name pos:start="753:17" pos:end="753:21"><name pos:start="753:17" pos:end="753:17">p</name><index pos:start="753:18" pos:end="753:21">[<expr pos:start="753:19" pos:end="753:20"><literal type="number" pos:start="753:19" pos:end="753:20">11</literal></expr>]</index></name> <operator pos:start="753:23" pos:end="753:23">=</operator> <literal type="number" pos:start="753:25" pos:end="753:25">0</literal> <operator pos:start="753:27" pos:end="753:27">&amp;</operator> <literal type="number" pos:start="753:29" pos:end="753:32">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="755:17" pos:end="755:34"><expr pos:start="755:17" pos:end="755:33"><name pos:start="755:17" pos:end="755:21"><name pos:start="755:17" pos:end="755:17">p</name><index pos:start="755:18" pos:end="755:21">[<expr pos:start="755:19" pos:end="755:20"><literal type="number" pos:start="755:19" pos:end="755:20">12</literal></expr>]</index></name> <operator pos:start="755:23" pos:end="755:23">=</operator> <literal type="number" pos:start="755:25" pos:end="755:28">2048</literal> <operator pos:start="755:30" pos:end="755:31">&gt;&gt;</operator> <literal type="number" pos:start="755:33" pos:end="755:33">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="755:36" pos:end="755:47">// 2M buffer</comment>

                <expr_stmt pos:start="757:17" pos:end="757:36"><expr pos:start="757:17" pos:end="757:35"><name pos:start="757:17" pos:end="757:21"><name pos:start="757:17" pos:end="757:17">p</name><index pos:start="757:18" pos:end="757:21">[<expr pos:start="757:19" pos:end="757:20"><literal type="number" pos:start="757:19" pos:end="757:20">13</literal></expr>]</index></name> <operator pos:start="757:23" pos:end="757:23">=</operator> <literal type="number" pos:start="757:25" pos:end="757:28">2048</literal> <operator pos:start="757:30" pos:end="757:30">&amp;</operator> <literal type="number" pos:start="757:32" pos:end="757:35">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="759:17" pos:end="759:40"><expr pos:start="759:17" pos:end="759:39"><name pos:start="759:17" pos:end="759:21"><name pos:start="759:17" pos:end="759:17">p</name><index pos:start="759:18" pos:end="759:21">[<expr pos:start="759:19" pos:end="759:20"><literal type="number" pos:start="759:19" pos:end="759:20">14</literal></expr>]</index></name> <operator pos:start="759:23" pos:end="759:23">=</operator> <operator pos:start="759:25" pos:end="759:25">(</operator><literal type="number" pos:start="759:26" pos:end="759:27">16</literal> <operator pos:start="759:29" pos:end="759:29">*</operator> <literal type="number" pos:start="759:31" pos:end="759:33">176</literal><operator pos:start="759:34" pos:end="759:34">)</operator> <operator pos:start="759:36" pos:end="759:37">&gt;&gt;</operator> <literal type="number" pos:start="759:39" pos:end="759:39">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="759:42" pos:end="759:66">// 16x read speed current</comment>

                <expr_stmt pos:start="761:17" pos:end="761:42"><expr pos:start="761:17" pos:end="761:41"><name pos:start="761:17" pos:end="761:21"><name pos:start="761:17" pos:end="761:17">p</name><index pos:start="761:18" pos:end="761:21">[<expr pos:start="761:19" pos:end="761:20"><literal type="number" pos:start="761:19" pos:end="761:20">15</literal></expr>]</index></name> <operator pos:start="761:23" pos:end="761:23">=</operator> <operator pos:start="761:25" pos:end="761:25">(</operator><literal type="number" pos:start="761:26" pos:end="761:27">16</literal> <operator pos:start="761:29" pos:end="761:29">*</operator> <literal type="number" pos:start="761:31" pos:end="761:33">176</literal><operator pos:start="761:34" pos:end="761:34">)</operator> <operator pos:start="761:36" pos:end="761:36">&amp;</operator> <literal type="number" pos:start="761:38" pos:end="761:41">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="763:17" pos:end="763:40"><expr pos:start="763:17" pos:end="763:39"><name pos:start="763:17" pos:end="763:21"><name pos:start="763:17" pos:end="763:17">p</name><index pos:start="763:18" pos:end="763:21">[<expr pos:start="763:19" pos:end="763:20"><literal type="number" pos:start="763:19" pos:end="763:20">18</literal></expr>]</index></name> <operator pos:start="763:23" pos:end="763:23">=</operator> <operator pos:start="763:25" pos:end="763:25">(</operator><literal type="number" pos:start="763:26" pos:end="763:27">16</literal> <operator pos:start="763:29" pos:end="763:29">*</operator> <literal type="number" pos:start="763:31" pos:end="763:33">176</literal><operator pos:start="763:34" pos:end="763:34">)</operator> <operator pos:start="763:36" pos:end="763:37">&gt;&gt;</operator> <literal type="number" pos:start="763:39" pos:end="763:39">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="763:42" pos:end="763:59">// 16x write speed</comment>

                <expr_stmt pos:start="765:17" pos:end="765:42"><expr pos:start="765:17" pos:end="765:41"><name pos:start="765:17" pos:end="765:21"><name pos:start="765:17" pos:end="765:17">p</name><index pos:start="765:18" pos:end="765:21">[<expr pos:start="765:19" pos:end="765:20"><literal type="number" pos:start="765:19" pos:end="765:20">19</literal></expr>]</index></name> <operator pos:start="765:23" pos:end="765:23">=</operator> <operator pos:start="765:25" pos:end="765:25">(</operator><literal type="number" pos:start="765:26" pos:end="765:27">16</literal> <operator pos:start="765:29" pos:end="765:29">*</operator> <literal type="number" pos:start="765:31" pos:end="765:33">176</literal><operator pos:start="765:34" pos:end="765:34">)</operator> <operator pos:start="765:36" pos:end="765:36">&amp;</operator> <literal type="number" pos:start="765:38" pos:end="765:41">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="767:17" pos:end="767:40"><expr pos:start="767:17" pos:end="767:39"><name pos:start="767:17" pos:end="767:21"><name pos:start="767:17" pos:end="767:17">p</name><index pos:start="767:18" pos:end="767:21">[<expr pos:start="767:19" pos:end="767:20"><literal type="number" pos:start="767:19" pos:end="767:20">20</literal></expr>]</index></name> <operator pos:start="767:23" pos:end="767:23">=</operator> <operator pos:start="767:25" pos:end="767:25">(</operator><literal type="number" pos:start="767:26" pos:end="767:27">16</literal> <operator pos:start="767:29" pos:end="767:29">*</operator> <literal type="number" pos:start="767:31" pos:end="767:33">176</literal><operator pos:start="767:34" pos:end="767:34">)</operator> <operator pos:start="767:36" pos:end="767:37">&gt;&gt;</operator> <literal type="number" pos:start="767:39" pos:end="767:39">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="767:42" pos:end="767:67">// 16x write speed current</comment>

                <expr_stmt pos:start="769:17" pos:end="769:42"><expr pos:start="769:17" pos:end="769:41"><name pos:start="769:17" pos:end="769:21"><name pos:start="769:17" pos:end="769:17">p</name><index pos:start="769:18" pos:end="769:21">[<expr pos:start="769:19" pos:end="769:20"><literal type="number" pos:start="769:19" pos:end="769:20">21</literal></expr>]</index></name> <operator pos:start="769:23" pos:end="769:23">=</operator> <operator pos:start="769:25" pos:end="769:25">(</operator><literal type="number" pos:start="769:26" pos:end="769:27">16</literal> <operator pos:start="769:29" pos:end="769:29">*</operator> <literal type="number" pos:start="769:31" pos:end="769:33">176</literal><operator pos:start="769:34" pos:end="769:34">)</operator> <operator pos:start="769:36" pos:end="769:36">&amp;</operator> <literal type="number" pos:start="769:38" pos:end="769:41">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="771:17" pos:end="771:24"><expr pos:start="771:17" pos:end="771:23"><name pos:start="771:17" pos:end="771:17">p</name> <operator pos:start="771:19" pos:end="771:20">+=</operator> <literal type="number" pos:start="771:22" pos:end="771:23">22</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="775:13" pos:end="775:40"><expr pos:start="775:13" pos:end="775:39"><name pos:start="775:13" pos:end="775:26"><name pos:start="775:13" pos:end="775:13">r</name><operator pos:start="775:14" pos:end="775:15">-&gt;</operator><name pos:start="775:16" pos:end="775:18">iov</name><operator pos:start="775:19" pos:end="775:19">.</operator><name pos:start="775:20" pos:end="775:26">iov_len</name></name> <operator pos:start="775:28" pos:end="775:28">=</operator> <name pos:start="775:30" pos:end="775:30">p</name> <operator pos:start="775:32" pos:end="775:32">-</operator> <name pos:start="775:34" pos:end="775:39">outbuf</name></expr>;</expr_stmt>

            <expr_stmt pos:start="777:13" pos:end="777:43"><expr pos:start="777:13" pos:end="777:42"><name pos:start="777:13" pos:end="777:21"><name pos:start="777:13" pos:end="777:18">outbuf</name><index pos:start="777:19" pos:end="777:21">[<expr pos:start="777:20" pos:end="777:20"><literal type="number" pos:start="777:20" pos:end="777:20">0</literal></expr>]</index></name> <operator pos:start="777:23" pos:end="777:23">=</operator> <name pos:start="777:25" pos:end="777:38"><name pos:start="777:25" pos:end="777:25">r</name><operator pos:start="777:26" pos:end="777:27">-&gt;</operator><name pos:start="777:28" pos:end="777:30">iov</name><operator pos:start="777:31" pos:end="777:31">.</operator><name pos:start="777:32" pos:end="777:38">iov_len</name></name> <operator pos:start="777:40" pos:end="777:40">-</operator> <literal type="number" pos:start="777:42" pos:end="777:42">4</literal></expr>;</expr_stmt>

            <if_stmt pos:start="779:13" pos:end="781:37"><if pos:start="779:13" pos:end="781:37">if <condition pos:start="779:16" pos:end="779:37">(<expr pos:start="779:17" pos:end="779:36"><name pos:start="779:17" pos:end="779:30"><name pos:start="779:17" pos:end="779:17">r</name><operator pos:start="779:18" pos:end="779:19">-&gt;</operator><name pos:start="779:20" pos:end="779:22">iov</name><operator pos:start="779:23" pos:end="779:23">.</operator><name pos:start="779:24" pos:end="779:30">iov_len</name></name> <operator pos:start="779:32" pos:end="779:32">&gt;</operator> <name pos:start="779:34" pos:end="779:36">len</name></expr>)</condition><block type="pseudo" pos:start="781:17" pos:end="781:37"><block_content pos:start="781:17" pos:end="781:37">

                <expr_stmt pos:start="781:17" pos:end="781:37"><expr pos:start="781:17" pos:end="781:36"><name pos:start="781:17" pos:end="781:30"><name pos:start="781:17" pos:end="781:17">r</name><operator pos:start="781:18" pos:end="781:19">-&gt;</operator><name pos:start="781:20" pos:end="781:22">iov</name><operator pos:start="781:23" pos:end="781:23">.</operator><name pos:start="781:24" pos:end="781:30">iov_len</name></name> <operator pos:start="781:32" pos:end="781:32">=</operator> <name pos:start="781:34" pos:end="781:36">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="785:9" pos:end="785:14">break;</break>

    <case pos:start="787:5" pos:end="787:14">case <expr pos:start="787:10" pos:end="787:13"><literal type="number" pos:start="787:10" pos:end="787:13">0x1b</literal></expr>:</case>

        <expr_stmt pos:start="789:9" pos:end="789:37"><expr pos:start="789:9" pos:end="789:36"><call pos:start="789:9" pos:end="789:36"><name pos:start="789:9" pos:end="789:15">DPRINTF</name><argument_list pos:start="789:16" pos:end="789:36">(<argument pos:start="789:17" pos:end="789:35"><expr pos:start="789:17" pos:end="789:35"><literal type="string" pos:start="789:17" pos:end="789:35">"Start Stop Unit\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="791:9" pos:end="797:54"><if pos:start="791:9" pos:end="797:54">if <condition pos:start="791:12" pos:end="793:25">(<expr pos:start="791:13" pos:end="793:24"><call pos:start="791:13" pos:end="791:46"><name pos:start="791:13" pos:end="791:30">bdrv_get_type_hint</name><argument_list pos:start="791:31" pos:end="791:46">(<argument pos:start="791:32" pos:end="791:45"><expr pos:start="791:32" pos:end="791:45"><name pos:start="791:32" pos:end="791:45"><name pos:start="791:32" pos:end="791:32">s</name><operator pos:start="791:33" pos:end="791:34">-&gt;</operator><name pos:start="791:35" pos:end="791:39">dinfo</name><operator pos:start="791:40" pos:end="791:41">-&gt;</operator><name pos:start="791:42" pos:end="791:45">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="791:48" pos:end="791:49">==</operator> <name pos:start="791:51" pos:end="791:65">BDRV_TYPE_CDROM</name> <operator pos:start="791:67" pos:end="791:68">&amp;&amp;</operator>

            <operator pos:start="793:13" pos:end="793:13">(</operator><name pos:start="793:14" pos:end="793:19"><name pos:start="793:14" pos:end="793:16">buf</name><index pos:start="793:17" pos:end="793:19">[<expr pos:start="793:18" pos:end="793:18"><literal type="number" pos:start="793:18" pos:end="793:18">4</literal></expr>]</index></name> <operator pos:start="793:21" pos:end="793:21">&amp;</operator> <literal type="number" pos:start="793:23" pos:end="793:23">2</literal><operator pos:start="793:24" pos:end="793:24">)</operator></expr>)</condition><block type="pseudo" pos:start="797:13" pos:end="797:54"><block_content pos:start="797:13" pos:end="797:54">

            <comment type="block" pos:start="795:13" pos:end="795:35">/* load/eject medium */</comment>

            <expr_stmt pos:start="797:13" pos:end="797:54"><expr pos:start="797:13" pos:end="797:53"><call pos:start="797:13" pos:end="797:53"><name pos:start="797:13" pos:end="797:22">bdrv_eject</name><argument_list pos:start="797:23" pos:end="797:53">(<argument pos:start="797:24" pos:end="797:37"><expr pos:start="797:24" pos:end="797:37"><name pos:start="797:24" pos:end="797:37"><name pos:start="797:24" pos:end="797:24">s</name><operator pos:start="797:25" pos:end="797:26">-&gt;</operator><name pos:start="797:27" pos:end="797:31">dinfo</name><operator pos:start="797:32" pos:end="797:33">-&gt;</operator><name pos:start="797:34" pos:end="797:37">bdrv</name></name></expr></argument>, <argument pos:start="797:40" pos:end="797:52"><expr pos:start="797:40" pos:end="797:52"><operator pos:start="797:40" pos:end="797:40">!</operator><operator pos:start="797:41" pos:end="797:41">(</operator><name pos:start="797:42" pos:end="797:47"><name pos:start="797:42" pos:end="797:44">buf</name><index pos:start="797:45" pos:end="797:47">[<expr pos:start="797:46" pos:end="797:46"><literal type="number" pos:start="797:46" pos:end="797:46">4</literal></expr>]</index></name> <operator pos:start="797:49" pos:end="797:49">&amp;</operator> <literal type="number" pos:start="797:51" pos:end="797:51">1</literal><operator pos:start="797:52" pos:end="797:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<break pos:start="799:9" pos:end="799:14">break;</break>

    <case pos:start="801:5" pos:end="801:14">case <expr pos:start="801:10" pos:end="801:13"><literal type="number" pos:start="801:10" pos:end="801:13">0x1e</literal></expr>:</case>

        <expr_stmt pos:start="803:9" pos:end="803:77"><expr pos:start="803:9" pos:end="803:76"><call pos:start="803:9" pos:end="803:76"><name pos:start="803:9" pos:end="803:15">DPRINTF</name><argument_list pos:start="803:16" pos:end="803:76">(<argument pos:start="803:17" pos:end="803:63"><expr pos:start="803:17" pos:end="803:63"><literal type="string" pos:start="803:17" pos:end="803:63">"Prevent Allow Medium Removal (prevent = %d)\n"</literal></expr></argument>, <argument pos:start="803:66" pos:end="803:75"><expr pos:start="803:66" pos:end="803:75"><name pos:start="803:66" pos:end="803:71"><name pos:start="803:66" pos:end="803:68">buf</name><index pos:start="803:69" pos:end="803:71">[<expr pos:start="803:70" pos:end="803:70"><literal type="number" pos:start="803:70" pos:end="803:70">4</literal></expr>]</index></name> <operator pos:start="803:73" pos:end="803:73">&amp;</operator> <literal type="number" pos:start="803:75" pos:end="803:75">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="805:9" pos:end="805:52"><expr pos:start="805:9" pos:end="805:51"><call pos:start="805:9" pos:end="805:51"><name pos:start="805:9" pos:end="805:23">bdrv_set_locked</name><argument_list pos:start="805:24" pos:end="805:51">(<argument pos:start="805:25" pos:end="805:38"><expr pos:start="805:25" pos:end="805:38"><name pos:start="805:25" pos:end="805:38"><name pos:start="805:25" pos:end="805:25">s</name><operator pos:start="805:26" pos:end="805:27">-&gt;</operator><name pos:start="805:28" pos:end="805:32">dinfo</name><operator pos:start="805:33" pos:end="805:34">-&gt;</operator><name pos:start="805:35" pos:end="805:38">bdrv</name></name></expr></argument>, <argument pos:start="805:41" pos:end="805:50"><expr pos:start="805:41" pos:end="805:50"><name pos:start="805:41" pos:end="805:46"><name pos:start="805:41" pos:end="805:43">buf</name><index pos:start="805:44" pos:end="805:46">[<expr pos:start="805:45" pos:end="805:45"><literal type="number" pos:start="805:45" pos:end="805:45">4</literal></expr>]</index></name> <operator pos:start="805:48" pos:end="805:48">&amp;</operator> <literal type="number" pos:start="805:50" pos:end="805:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="807:9" pos:end="807:14">break;</break>

    <case pos:start="809:5" pos:end="809:14">case <expr pos:start="809:10" pos:end="809:13"><literal type="number" pos:start="809:10" pos:end="809:13">0x25</literal></expr>:</case>

	<expr_stmt pos:start="811:9" pos:end="811:35"><expr pos:start="811:9" pos:end="811:34"><call pos:start="811:9" pos:end="811:34"><name pos:start="811:9" pos:end="811:15">DPRINTF</name><argument_list pos:start="811:16" pos:end="811:34">(<argument pos:start="811:17" pos:end="811:33"><expr pos:start="811:17" pos:end="811:33"><literal type="string" pos:start="811:17" pos:end="811:33">"Read Capacity\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="813:9" pos:end="813:61">/* The normal LEN field for this command is zero.  */</comment>

	<expr_stmt pos:start="815:9" pos:end="815:29"><expr pos:start="815:9" pos:end="815:28"><call pos:start="815:9" pos:end="815:28"><name pos:start="815:9" pos:end="815:14">memset</name><argument_list pos:start="815:15" pos:end="815:28">(<argument pos:start="815:16" pos:end="815:21"><expr pos:start="815:16" pos:end="815:21"><name pos:start="815:16" pos:end="815:21">outbuf</name></expr></argument>, <argument pos:start="815:24" pos:end="815:24"><expr pos:start="815:24" pos:end="815:24"><literal type="number" pos:start="815:24" pos:end="815:24">0</literal></expr></argument>, <argument pos:start="815:27" pos:end="815:27"><expr pos:start="815:27" pos:end="815:27"><literal type="number" pos:start="815:27" pos:end="815:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="817:9" pos:end="817:55"><expr pos:start="817:9" pos:end="817:54"><call pos:start="817:9" pos:end="817:54"><name pos:start="817:9" pos:end="817:25">bdrv_get_geometry</name><argument_list pos:start="817:26" pos:end="817:54">(<argument pos:start="817:27" pos:end="817:40"><expr pos:start="817:27" pos:end="817:40"><name pos:start="817:27" pos:end="817:40"><name pos:start="817:27" pos:end="817:27">s</name><operator pos:start="817:28" pos:end="817:29">-&gt;</operator><name pos:start="817:30" pos:end="817:34">dinfo</name><operator pos:start="817:35" pos:end="817:36">-&gt;</operator><name pos:start="817:37" pos:end="817:40">bdrv</name></name></expr></argument>, <argument pos:start="817:43" pos:end="817:53"><expr pos:start="817:43" pos:end="817:53"><operator pos:start="817:43" pos:end="817:43">&amp;</operator><name pos:start="817:44" pos:end="817:53">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="819:9" pos:end="819:38"><expr pos:start="819:9" pos:end="819:37"><name pos:start="819:9" pos:end="819:18">nb_sectors</name> <operator pos:start="819:20" pos:end="819:21">/=</operator> <name pos:start="819:23" pos:end="819:37"><name pos:start="819:23" pos:end="819:23">s</name><operator pos:start="819:24" pos:end="819:25">-&gt;</operator><name pos:start="819:26" pos:end="819:37">cluster_size</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="821:9" pos:end="821:64">/* Returned value is the address of the last sector.  */</comment>

        <if_stmt pos:start="823:9" pos:end="863:9"><if pos:start="823:9" pos:end="855:9">if <condition pos:start="823:12" pos:end="823:23">(<expr pos:start="823:13" pos:end="823:22"><name pos:start="823:13" pos:end="823:22">nb_sectors</name></expr>)</condition> <block pos:start="823:25" pos:end="855:9">{<block_content pos:start="825:13" pos:end="853:31">

            <expr_stmt pos:start="825:13" pos:end="825:25"><expr pos:start="825:13" pos:end="825:24"><name pos:start="825:13" pos:end="825:22">nb_sectors</name><operator pos:start="825:23" pos:end="825:24">--</operator></expr>;</expr_stmt>

            <comment type="block" pos:start="827:13" pos:end="827:71">/* Remember the new size for read/write sanity checking. */</comment>

            <expr_stmt pos:start="829:13" pos:end="829:36"><expr pos:start="829:13" pos:end="829:35"><name pos:start="829:13" pos:end="829:22"><name pos:start="829:13" pos:end="829:13">s</name><operator pos:start="829:14" pos:end="829:15">-&gt;</operator><name pos:start="829:16" pos:end="829:22">max_lba</name></name> <operator pos:start="829:24" pos:end="829:24">=</operator> <name pos:start="829:26" pos:end="829:35">nb_sectors</name></expr>;</expr_stmt>

            <comment type="block" pos:start="831:13" pos:end="831:72">/* Clip to 2TB, instead of returning capacity modulo 2TB. */</comment>

            <if_stmt pos:start="833:13" pos:end="835:40"><if pos:start="833:13" pos:end="835:40">if <condition pos:start="833:16" pos:end="833:40">(<expr pos:start="833:17" pos:end="833:39"><name pos:start="833:17" pos:end="833:26">nb_sectors</name> <operator pos:start="833:28" pos:end="833:28">&gt;</operator> <name pos:start="833:30" pos:end="833:39">UINT32_MAX</name></expr>)</condition><block type="pseudo" pos:start="835:17" pos:end="835:40"><block_content pos:start="835:17" pos:end="835:40">

                <expr_stmt pos:start="835:17" pos:end="835:40"><expr pos:start="835:17" pos:end="835:39"><name pos:start="835:17" pos:end="835:26">nb_sectors</name> <operator pos:start="835:28" pos:end="835:28">=</operator> <name pos:start="835:30" pos:end="835:39">UINT32_MAX</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="837:13" pos:end="837:50"><expr pos:start="837:13" pos:end="837:49"><name pos:start="837:13" pos:end="837:21"><name pos:start="837:13" pos:end="837:18">outbuf</name><index pos:start="837:19" pos:end="837:21">[<expr pos:start="837:20" pos:end="837:20"><literal type="number" pos:start="837:20" pos:end="837:20">0</literal></expr>]</index></name> <operator pos:start="837:23" pos:end="837:23">=</operator> <operator pos:start="837:25" pos:end="837:25">(</operator><name pos:start="837:26" pos:end="837:35">nb_sectors</name> <operator pos:start="837:37" pos:end="837:38">&gt;&gt;</operator> <literal type="number" pos:start="837:40" pos:end="837:41">24</literal><operator pos:start="837:42" pos:end="837:42">)</operator> <operator pos:start="837:44" pos:end="837:44">&amp;</operator> <literal type="number" pos:start="837:46" pos:end="837:49">0xff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="839:13" pos:end="839:50"><expr pos:start="839:13" pos:end="839:49"><name pos:start="839:13" pos:end="839:21"><name pos:start="839:13" pos:end="839:18">outbuf</name><index pos:start="839:19" pos:end="839:21">[<expr pos:start="839:20" pos:end="839:20"><literal type="number" pos:start="839:20" pos:end="839:20">1</literal></expr>]</index></name> <operator pos:start="839:23" pos:end="839:23">=</operator> <operator pos:start="839:25" pos:end="839:25">(</operator><name pos:start="839:26" pos:end="839:35">nb_sectors</name> <operator pos:start="839:37" pos:end="839:38">&gt;&gt;</operator> <literal type="number" pos:start="839:40" pos:end="839:41">16</literal><operator pos:start="839:42" pos:end="839:42">)</operator> <operator pos:start="839:44" pos:end="839:44">&amp;</operator> <literal type="number" pos:start="839:46" pos:end="839:49">0xff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="841:13" pos:end="841:49"><expr pos:start="841:13" pos:end="841:48"><name pos:start="841:13" pos:end="841:21"><name pos:start="841:13" pos:end="841:18">outbuf</name><index pos:start="841:19" pos:end="841:21">[<expr pos:start="841:20" pos:end="841:20"><literal type="number" pos:start="841:20" pos:end="841:20">2</literal></expr>]</index></name> <operator pos:start="841:23" pos:end="841:23">=</operator> <operator pos:start="841:25" pos:end="841:25">(</operator><name pos:start="841:26" pos:end="841:35">nb_sectors</name> <operator pos:start="841:37" pos:end="841:38">&gt;&gt;</operator> <literal type="number" pos:start="841:40" pos:end="841:40">8</literal><operator pos:start="841:41" pos:end="841:41">)</operator> <operator pos:start="841:43" pos:end="841:43">&amp;</operator> <literal type="number" pos:start="841:45" pos:end="841:48">0xff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="843:13" pos:end="843:42"><expr pos:start="843:13" pos:end="843:41"><name pos:start="843:13" pos:end="843:21"><name pos:start="843:13" pos:end="843:18">outbuf</name><index pos:start="843:19" pos:end="843:21">[<expr pos:start="843:20" pos:end="843:20"><literal type="number" pos:start="843:20" pos:end="843:20">3</literal></expr>]</index></name> <operator pos:start="843:23" pos:end="843:23">=</operator> <name pos:start="843:25" pos:end="843:34">nb_sectors</name> <operator pos:start="843:36" pos:end="843:36">&amp;</operator> <literal type="number" pos:start="843:38" pos:end="843:41">0xff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="845:13" pos:end="845:26"><expr pos:start="845:13" pos:end="845:25"><name pos:start="845:13" pos:end="845:21"><name pos:start="845:13" pos:end="845:18">outbuf</name><index pos:start="845:19" pos:end="845:21">[<expr pos:start="845:20" pos:end="845:20"><literal type="number" pos:start="845:20" pos:end="845:20">4</literal></expr>]</index></name> <operator pos:start="845:23" pos:end="845:23">=</operator> <literal type="number" pos:start="845:25" pos:end="845:25">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="847:13" pos:end="847:26"><expr pos:start="847:13" pos:end="847:25"><name pos:start="847:13" pos:end="847:21"><name pos:start="847:13" pos:end="847:18">outbuf</name><index pos:start="847:19" pos:end="847:21">[<expr pos:start="847:20" pos:end="847:20"><literal type="number" pos:start="847:20" pos:end="847:20">5</literal></expr>]</index></name> <operator pos:start="847:23" pos:end="847:23">=</operator> <literal type="number" pos:start="847:25" pos:end="847:25">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="849:13" pos:end="849:44"><expr pos:start="849:13" pos:end="849:43"><name pos:start="849:13" pos:end="849:21"><name pos:start="849:13" pos:end="849:18">outbuf</name><index pos:start="849:19" pos:end="849:21">[<expr pos:start="849:20" pos:end="849:20"><literal type="number" pos:start="849:20" pos:end="849:20">6</literal></expr>]</index></name> <operator pos:start="849:23" pos:end="849:23">=</operator> <name pos:start="849:25" pos:end="849:39"><name pos:start="849:25" pos:end="849:25">s</name><operator pos:start="849:26" pos:end="849:27">-&gt;</operator><name pos:start="849:28" pos:end="849:39">cluster_size</name></name> <operator pos:start="849:41" pos:end="849:41">*</operator> <literal type="number" pos:start="849:43" pos:end="849:43">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="851:13" pos:end="851:26"><expr pos:start="851:13" pos:end="851:25"><name pos:start="851:13" pos:end="851:21"><name pos:start="851:13" pos:end="851:18">outbuf</name><index pos:start="851:19" pos:end="851:21">[<expr pos:start="851:20" pos:end="851:20"><literal type="number" pos:start="851:20" pos:end="851:20">7</literal></expr>]</index></name> <operator pos:start="851:23" pos:end="851:23">=</operator> <literal type="number" pos:start="851:25" pos:end="851:25">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="853:13" pos:end="853:31"><expr pos:start="853:13" pos:end="853:30"><name pos:start="853:13" pos:end="853:26"><name pos:start="853:13" pos:end="853:13">r</name><operator pos:start="853:14" pos:end="853:15">-&gt;</operator><name pos:start="853:16" pos:end="853:18">iov</name><operator pos:start="853:19" pos:end="853:19">.</operator><name pos:start="853:20" pos:end="853:26">iov_len</name></name> <operator pos:start="853:28" pos:end="853:28">=</operator> <literal type="number" pos:start="853:30" pos:end="853:30">8</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="855:11" pos:end="863:9">else <block pos:start="855:16" pos:end="863:9">{<block_content pos:start="857:9" pos:end="861:21">

        <label pos:start="857:9" pos:end="857:17"><name pos:start="857:9" pos:end="857:16">notready</name>:</label>

            <expr_stmt pos:start="859:13" pos:end="859:78"><expr pos:start="859:13" pos:end="859:77"><call pos:start="859:13" pos:end="859:77"><name pos:start="859:13" pos:end="859:33">scsi_command_complete</name><argument_list pos:start="859:34" pos:end="859:77">(<argument pos:start="859:35" pos:end="859:35"><expr pos:start="859:35" pos:end="859:35"><name pos:start="859:35" pos:end="859:35">r</name></expr></argument>, <argument pos:start="859:38" pos:end="859:59"><expr pos:start="859:38" pos:end="859:59"><name pos:start="859:38" pos:end="859:59">STATUS_CHECK_CONDITION</name></expr></argument>, <argument pos:start="859:62" pos:end="859:76"><expr pos:start="859:62" pos:end="859:76"><name pos:start="859:62" pos:end="859:76">SENSE_NOT_READY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="861:13" pos:end="861:21">return <expr pos:start="861:20" pos:end="861:20"><literal type="number" pos:start="861:20" pos:end="861:20">0</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

	<break pos:start="865:9" pos:end="865:14">break;</break>

    <case pos:start="867:5" pos:end="867:14">case <expr pos:start="867:10" pos:end="867:13"><literal type="number" pos:start="867:10" pos:end="867:13">0x08</literal></expr>:</case>

    <case pos:start="869:5" pos:end="869:14">case <expr pos:start="869:10" pos:end="869:13"><literal type="number" pos:start="869:10" pos:end="869:13">0x28</literal></expr>:</case>

    <case pos:start="871:5" pos:end="871:14">case <expr pos:start="871:10" pos:end="871:13"><literal type="number" pos:start="871:10" pos:end="871:13">0x88</literal></expr>:</case>

        <expr_stmt pos:start="873:9" pos:end="873:67"><expr pos:start="873:9" pos:end="873:66"><call pos:start="873:9" pos:end="873:66"><name pos:start="873:9" pos:end="873:15">DPRINTF</name><argument_list pos:start="873:16" pos:end="873:66">(<argument pos:start="873:17" pos:end="873:55"><expr pos:start="873:17" pos:end="873:55"><literal type="string" pos:start="873:17" pos:end="873:32">"Read (sector %"</literal> <name pos:start="873:34" pos:end="873:39">PRId64</name> <literal type="string" pos:start="873:41" pos:end="873:55">", count %d)\n"</literal></expr></argument>, <argument pos:start="873:58" pos:end="873:60"><expr pos:start="873:58" pos:end="873:60"><name pos:start="873:58" pos:end="873:60">lba</name></expr></argument>, <argument pos:start="873:63" pos:end="873:65"><expr pos:start="873:63" pos:end="873:65"><name pos:start="873:63" pos:end="873:65">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="875:9" pos:end="877:29"><if pos:start="875:9" pos:end="877:29">if <condition pos:start="875:12" pos:end="875:29">(<expr pos:start="875:13" pos:end="875:28"><name pos:start="875:13" pos:end="875:15">lba</name> <operator pos:start="875:17" pos:end="875:17">&gt;</operator> <name pos:start="875:19" pos:end="875:28"><name pos:start="875:19" pos:end="875:19">s</name><operator pos:start="875:20" pos:end="875:21">-&gt;</operator><name pos:start="875:22" pos:end="875:28">max_lba</name></name></expr>)</condition><block type="pseudo" pos:start="877:13" pos:end="877:29"><block_content pos:start="877:13" pos:end="877:29">

            <goto pos:start="877:13" pos:end="877:29">goto <name pos:start="877:18" pos:end="877:28">illegal_lba</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="879:9" pos:end="879:42"><expr pos:start="879:9" pos:end="879:41"><name pos:start="879:9" pos:end="879:17"><name pos:start="879:9" pos:end="879:9">r</name><operator pos:start="879:10" pos:end="879:11">-&gt;</operator><name pos:start="879:12" pos:end="879:17">sector</name></name> <operator pos:start="879:19" pos:end="879:19">=</operator> <name pos:start="879:21" pos:end="879:23">lba</name> <operator pos:start="879:25" pos:end="879:25">*</operator> <name pos:start="879:27" pos:end="879:41"><name pos:start="879:27" pos:end="879:27">s</name><operator pos:start="879:28" pos:end="879:29">-&gt;</operator><name pos:start="879:30" pos:end="879:41">cluster_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="881:9" pos:end="881:48"><expr pos:start="881:9" pos:end="881:47"><name pos:start="881:9" pos:end="881:23"><name pos:start="881:9" pos:end="881:9">r</name><operator pos:start="881:10" pos:end="881:11">-&gt;</operator><name pos:start="881:12" pos:end="881:23">sector_count</name></name> <operator pos:start="881:25" pos:end="881:25">=</operator> <name pos:start="881:27" pos:end="881:29">len</name> <operator pos:start="881:31" pos:end="881:31">*</operator> <name pos:start="881:33" pos:end="881:47"><name pos:start="881:33" pos:end="881:33">s</name><operator pos:start="881:34" pos:end="881:35">-&gt;</operator><name pos:start="881:36" pos:end="881:47">cluster_size</name></name></expr>;</expr_stmt>

        <break pos:start="883:9" pos:end="883:14">break;</break>

    <case pos:start="885:5" pos:end="885:14">case <expr pos:start="885:10" pos:end="885:13"><literal type="number" pos:start="885:10" pos:end="885:13">0x0a</literal></expr>:</case>

    <case pos:start="887:5" pos:end="887:14">case <expr pos:start="887:10" pos:end="887:13"><literal type="number" pos:start="887:10" pos:end="887:13">0x2a</literal></expr>:</case>

    <case pos:start="889:5" pos:end="889:14">case <expr pos:start="889:10" pos:end="889:13"><literal type="number" pos:start="889:10" pos:end="889:13">0x8a</literal></expr>:</case>

        <expr_stmt pos:start="891:9" pos:end="891:68"><expr pos:start="891:9" pos:end="891:67"><call pos:start="891:9" pos:end="891:67"><name pos:start="891:9" pos:end="891:15">DPRINTF</name><argument_list pos:start="891:16" pos:end="891:67">(<argument pos:start="891:17" pos:end="891:56"><expr pos:start="891:17" pos:end="891:56"><literal type="string" pos:start="891:17" pos:end="891:33">"Write (sector %"</literal> <name pos:start="891:35" pos:end="891:40">PRId64</name> <literal type="string" pos:start="891:42" pos:end="891:56">", count %d)\n"</literal></expr></argument>, <argument pos:start="891:59" pos:end="891:61"><expr pos:start="891:59" pos:end="891:61"><name pos:start="891:59" pos:end="891:61">lba</name></expr></argument>, <argument pos:start="891:64" pos:end="891:66"><expr pos:start="891:64" pos:end="891:66"><name pos:start="891:64" pos:end="891:66">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="893:9" pos:end="895:29"><if pos:start="893:9" pos:end="895:29">if <condition pos:start="893:12" pos:end="893:29">(<expr pos:start="893:13" pos:end="893:28"><name pos:start="893:13" pos:end="893:15">lba</name> <operator pos:start="893:17" pos:end="893:17">&gt;</operator> <name pos:start="893:19" pos:end="893:28"><name pos:start="893:19" pos:end="893:19">s</name><operator pos:start="893:20" pos:end="893:21">-&gt;</operator><name pos:start="893:22" pos:end="893:28">max_lba</name></name></expr>)</condition><block type="pseudo" pos:start="895:13" pos:end="895:29"><block_content pos:start="895:13" pos:end="895:29">

            <goto pos:start="895:13" pos:end="895:29">goto <name pos:start="895:18" pos:end="895:28">illegal_lba</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="897:9" pos:end="897:42"><expr pos:start="897:9" pos:end="897:41"><name pos:start="897:9" pos:end="897:17"><name pos:start="897:9" pos:end="897:9">r</name><operator pos:start="897:10" pos:end="897:11">-&gt;</operator><name pos:start="897:12" pos:end="897:17">sector</name></name> <operator pos:start="897:19" pos:end="897:19">=</operator> <name pos:start="897:21" pos:end="897:23">lba</name> <operator pos:start="897:25" pos:end="897:25">*</operator> <name pos:start="897:27" pos:end="897:41"><name pos:start="897:27" pos:end="897:27">s</name><operator pos:start="897:28" pos:end="897:29">-&gt;</operator><name pos:start="897:30" pos:end="897:41">cluster_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="899:9" pos:end="899:48"><expr pos:start="899:9" pos:end="899:47"><name pos:start="899:9" pos:end="899:23"><name pos:start="899:9" pos:end="899:9">r</name><operator pos:start="899:10" pos:end="899:11">-&gt;</operator><name pos:start="899:12" pos:end="899:23">sector_count</name></name> <operator pos:start="899:25" pos:end="899:25">=</operator> <name pos:start="899:27" pos:end="899:29">len</name> <operator pos:start="899:31" pos:end="899:31">*</operator> <name pos:start="899:33" pos:end="899:47"><name pos:start="899:33" pos:end="899:33">s</name><operator pos:start="899:34" pos:end="899:35">-&gt;</operator><name pos:start="899:36" pos:end="899:47">cluster_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="901:9" pos:end="901:21"><expr pos:start="901:9" pos:end="901:20"><name pos:start="901:9" pos:end="901:16">is_write</name> <operator pos:start="901:18" pos:end="901:18">=</operator> <literal type="number" pos:start="901:20" pos:end="901:20">1</literal></expr>;</expr_stmt>

        <break pos:start="903:9" pos:end="903:14">break;</break>

    <case pos:start="905:5" pos:end="905:14">case <expr pos:start="905:10" pos:end="905:13"><literal type="number" pos:start="905:10" pos:end="905:13">0x35</literal></expr>:</case>

        <expr_stmt pos:start="907:9" pos:end="907:80"><expr pos:start="907:9" pos:end="907:79"><call pos:start="907:9" pos:end="907:79"><name pos:start="907:9" pos:end="907:15">DPRINTF</name><argument_list pos:start="907:16" pos:end="907:79">(<argument pos:start="907:17" pos:end="907:68"><expr pos:start="907:17" pos:end="907:68"><literal type="string" pos:start="907:17" pos:end="907:45">"Synchronise cache (sector %"</literal> <name pos:start="907:47" pos:end="907:52">PRId64</name> <literal type="string" pos:start="907:54" pos:end="907:68">", count %d)\n"</literal></expr></argument>, <argument pos:start="907:71" pos:end="907:73"><expr pos:start="907:71" pos:end="907:73"><name pos:start="907:71" pos:end="907:73">lba</name></expr></argument>, <argument pos:start="907:76" pos:end="907:78"><expr pos:start="907:76" pos:end="907:78"><name pos:start="907:76" pos:end="907:78">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="909:9" pos:end="909:35"><expr pos:start="909:9" pos:end="909:34"><call pos:start="909:9" pos:end="909:34"><name pos:start="909:9" pos:end="909:18">bdrv_flush</name><argument_list pos:start="909:19" pos:end="909:34">(<argument pos:start="909:20" pos:end="909:33"><expr pos:start="909:20" pos:end="909:33"><name pos:start="909:20" pos:end="909:33"><name pos:start="909:20" pos:end="909:20">s</name><operator pos:start="909:21" pos:end="909:22">-&gt;</operator><name pos:start="909:23" pos:end="909:27">dinfo</name><operator pos:start="909:28" pos:end="909:29">-&gt;</operator><name pos:start="909:30" pos:end="909:33">bdrv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="911:9" pos:end="911:14">break;</break>

    <case pos:start="913:5" pos:end="913:14">case <expr pos:start="913:10" pos:end="913:13"><literal type="number" pos:start="913:10" pos:end="913:13">0x43</literal></expr>:</case>

        <block pos:start="915:9" pos:end="987:9">{<block_content pos:start="917:13" pos:end="985:22">

            <decl_stmt pos:start="917:13" pos:end="917:49"><decl pos:start="917:13" pos:end="917:27"><type pos:start="917:13" pos:end="917:15"><name pos:start="917:13" pos:end="917:15">int</name></type> <name pos:start="917:17" pos:end="917:27">start_track</name></decl>, <decl pos:start="917:30" pos:end="917:35"><type ref="prev" pos:start="917:13" pos:end="917:15"/><name pos:start="917:30" pos:end="917:35">format</name></decl>, <decl pos:start="917:38" pos:end="917:40"><type ref="prev" pos:start="917:13" pos:end="917:15"/><name pos:start="917:38" pos:end="917:40">msf</name></decl>, <decl pos:start="917:43" pos:end="917:48"><type ref="prev" pos:start="917:13" pos:end="917:15"/><name pos:start="917:43" pos:end="917:48">toclen</name></decl>;</decl_stmt>



            <expr_stmt pos:start="921:13" pos:end="921:29"><expr pos:start="921:13" pos:end="921:28"><name pos:start="921:13" pos:end="921:15">msf</name> <operator pos:start="921:17" pos:end="921:17">=</operator> <name pos:start="921:19" pos:end="921:24"><name pos:start="921:19" pos:end="921:21">buf</name><index pos:start="921:22" pos:end="921:24">[<expr pos:start="921:23" pos:end="921:23"><literal type="number" pos:start="921:23" pos:end="921:23">1</literal></expr>]</index></name> <operator pos:start="921:26" pos:end="921:26">&amp;</operator> <literal type="number" pos:start="921:28" pos:end="921:28">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="923:13" pos:end="923:34"><expr pos:start="923:13" pos:end="923:33"><name pos:start="923:13" pos:end="923:18">format</name> <operator pos:start="923:20" pos:end="923:20">=</operator> <name pos:start="923:22" pos:end="923:27"><name pos:start="923:22" pos:end="923:24">buf</name><index pos:start="923:25" pos:end="923:27">[<expr pos:start="923:26" pos:end="923:26"><literal type="number" pos:start="923:26" pos:end="923:26">2</literal></expr>]</index></name> <operator pos:start="923:29" pos:end="923:29">&amp;</operator> <literal type="number" pos:start="923:31" pos:end="923:33">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="925:13" pos:end="925:33"><expr pos:start="925:13" pos:end="925:32"><name pos:start="925:13" pos:end="925:23">start_track</name> <operator pos:start="925:25" pos:end="925:25">=</operator> <name pos:start="925:27" pos:end="925:32"><name pos:start="925:27" pos:end="925:29">buf</name><index pos:start="925:30" pos:end="925:32">[<expr pos:start="925:31" pos:end="925:31"><literal type="number" pos:start="925:31" pos:end="925:31">6</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="927:13" pos:end="927:59"><expr pos:start="927:13" pos:end="927:58"><call pos:start="927:13" pos:end="927:58"><name pos:start="927:13" pos:end="927:29">bdrv_get_geometry</name><argument_list pos:start="927:30" pos:end="927:58">(<argument pos:start="927:31" pos:end="927:44"><expr pos:start="927:31" pos:end="927:44"><name pos:start="927:31" pos:end="927:44"><name pos:start="927:31" pos:end="927:31">s</name><operator pos:start="927:32" pos:end="927:33">-&gt;</operator><name pos:start="927:34" pos:end="927:38">dinfo</name><operator pos:start="927:39" pos:end="927:40">-&gt;</operator><name pos:start="927:41" pos:end="927:44">bdrv</name></name></expr></argument>, <argument pos:start="927:47" pos:end="927:57"><expr pos:start="927:47" pos:end="927:57"><operator pos:start="927:47" pos:end="927:47">&amp;</operator><name pos:start="927:48" pos:end="927:57">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="929:13" pos:end="929:93"><expr pos:start="929:13" pos:end="929:92"><call pos:start="929:13" pos:end="929:92"><name pos:start="929:13" pos:end="929:19">DPRINTF</name><argument_list pos:start="929:20" pos:end="929:92">(<argument pos:start="929:21" pos:end="929:60"><expr pos:start="929:21" pos:end="929:60"><literal type="string" pos:start="929:21" pos:end="929:60">"Read TOC (track %d format %d msf %d)\n"</literal></expr></argument>, <argument pos:start="929:63" pos:end="929:73"><expr pos:start="929:63" pos:end="929:73"><name pos:start="929:63" pos:end="929:73">start_track</name></expr></argument>, <argument pos:start="929:76" pos:end="929:81"><expr pos:start="929:76" pos:end="929:81"><name pos:start="929:76" pos:end="929:81">format</name></expr></argument>, <argument pos:start="929:84" pos:end="929:91"><expr pos:start="929:84" pos:end="929:91"><name pos:start="929:84" pos:end="929:86">msf</name> <operator pos:start="929:88" pos:end="929:89">&gt;&gt;</operator> <literal type="number" pos:start="929:91" pos:end="929:91">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="931:13" pos:end="931:42"><expr pos:start="931:13" pos:end="931:41"><name pos:start="931:13" pos:end="931:22">nb_sectors</name> <operator pos:start="931:24" pos:end="931:25">/=</operator> <name pos:start="931:27" pos:end="931:41"><name pos:start="931:27" pos:end="931:27">s</name><operator pos:start="931:28" pos:end="931:29">-&gt;</operator><name pos:start="931:30" pos:end="931:41">cluster_size</name></name></expr>;</expr_stmt>

            <switch pos:start="933:13" pos:end="967:13">switch<condition pos:start="933:19" pos:end="933:26">(<expr pos:start="933:20" pos:end="933:25"><name pos:start="933:20" pos:end="933:25">format</name></expr>)</condition> <block pos:start="933:28" pos:end="967:13">{<block_content pos:start="935:13" pos:end="965:31">

            <case pos:start="935:13" pos:end="935:19">case <expr pos:start="935:18" pos:end="935:18"><literal type="number" pos:start="935:18" pos:end="935:18">0</literal></expr>:</case>

                <expr_stmt pos:start="937:17" pos:end="937:78"><expr pos:start="937:17" pos:end="937:77"><name pos:start="937:17" pos:end="937:22">toclen</name> <operator pos:start="937:24" pos:end="937:24">=</operator> <call pos:start="937:26" pos:end="937:77"><name pos:start="937:26" pos:end="937:39">cdrom_read_toc</name><argument_list pos:start="937:40" pos:end="937:77">(<argument pos:start="937:41" pos:end="937:50"><expr pos:start="937:41" pos:end="937:50"><name pos:start="937:41" pos:end="937:50">nb_sectors</name></expr></argument>, <argument pos:start="937:53" pos:end="937:58"><expr pos:start="937:53" pos:end="937:58"><name pos:start="937:53" pos:end="937:58">outbuf</name></expr></argument>, <argument pos:start="937:61" pos:end="937:63"><expr pos:start="937:61" pos:end="937:63"><name pos:start="937:61" pos:end="937:63">msf</name></expr></argument>, <argument pos:start="937:66" pos:end="937:76"><expr pos:start="937:66" pos:end="937:76"><name pos:start="937:66" pos:end="937:76">start_track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="939:17" pos:end="939:22">break;</break>

            <case pos:start="941:13" pos:end="941:19">case <expr pos:start="941:18" pos:end="941:18"><literal type="number" pos:start="941:18" pos:end="941:18">1</literal></expr>:</case>

                <comment type="block" pos:start="943:17" pos:end="943:67">/* multi session : only a single session defined */</comment>

                <expr_stmt pos:start="945:17" pos:end="945:28"><expr pos:start="945:17" pos:end="945:27"><name pos:start="945:17" pos:end="945:22">toclen</name> <operator pos:start="945:24" pos:end="945:24">=</operator> <literal type="number" pos:start="945:26" pos:end="945:27">12</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="947:17" pos:end="947:38"><expr pos:start="947:17" pos:end="947:37"><call pos:start="947:17" pos:end="947:37"><name pos:start="947:17" pos:end="947:22">memset</name><argument_list pos:start="947:23" pos:end="947:37">(<argument pos:start="947:24" pos:end="947:29"><expr pos:start="947:24" pos:end="947:29"><name pos:start="947:24" pos:end="947:29">outbuf</name></expr></argument>, <argument pos:start="947:32" pos:end="947:32"><expr pos:start="947:32" pos:end="947:32"><literal type="number" pos:start="947:32" pos:end="947:32">0</literal></expr></argument>, <argument pos:start="947:35" pos:end="947:36"><expr pos:start="947:35" pos:end="947:36"><literal type="number" pos:start="947:35" pos:end="947:36">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="949:17" pos:end="949:33"><expr pos:start="949:17" pos:end="949:32"><name pos:start="949:17" pos:end="949:25"><name pos:start="949:17" pos:end="949:22">outbuf</name><index pos:start="949:23" pos:end="949:25">[<expr pos:start="949:24" pos:end="949:24"><literal type="number" pos:start="949:24" pos:end="949:24">1</literal></expr>]</index></name> <operator pos:start="949:27" pos:end="949:27">=</operator> <literal type="number" pos:start="949:29" pos:end="949:32">0x0a</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="951:17" pos:end="951:33"><expr pos:start="951:17" pos:end="951:32"><name pos:start="951:17" pos:end="951:25"><name pos:start="951:17" pos:end="951:22">outbuf</name><index pos:start="951:23" pos:end="951:25">[<expr pos:start="951:24" pos:end="951:24"><literal type="number" pos:start="951:24" pos:end="951:24">2</literal></expr>]</index></name> <operator pos:start="951:27" pos:end="951:27">=</operator> <literal type="number" pos:start="951:29" pos:end="951:32">0x01</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="953:17" pos:end="953:33"><expr pos:start="953:17" pos:end="953:32"><name pos:start="953:17" pos:end="953:25"><name pos:start="953:17" pos:end="953:22">outbuf</name><index pos:start="953:23" pos:end="953:25">[<expr pos:start="953:24" pos:end="953:24"><literal type="number" pos:start="953:24" pos:end="953:24">3</literal></expr>]</index></name> <operator pos:start="953:27" pos:end="953:27">=</operator> <literal type="number" pos:start="953:29" pos:end="953:32">0x01</literal></expr>;</expr_stmt>

                <break pos:start="955:17" pos:end="955:22">break;</break>

            <case pos:start="957:13" pos:end="957:19">case <expr pos:start="957:18" pos:end="957:18"><literal type="number" pos:start="957:18" pos:end="957:18">2</literal></expr>:</case>

                <expr_stmt pos:start="959:17" pos:end="959:82"><expr pos:start="959:17" pos:end="959:81"><name pos:start="959:17" pos:end="959:22">toclen</name> <operator pos:start="959:24" pos:end="959:24">=</operator> <call pos:start="959:26" pos:end="959:81"><name pos:start="959:26" pos:end="959:43">cdrom_read_toc_raw</name><argument_list pos:start="959:44" pos:end="959:81">(<argument pos:start="959:45" pos:end="959:54"><expr pos:start="959:45" pos:end="959:54"><name pos:start="959:45" pos:end="959:54">nb_sectors</name></expr></argument>, <argument pos:start="959:57" pos:end="959:62"><expr pos:start="959:57" pos:end="959:62"><name pos:start="959:57" pos:end="959:62">outbuf</name></expr></argument>, <argument pos:start="959:65" pos:end="959:67"><expr pos:start="959:65" pos:end="959:67"><name pos:start="959:65" pos:end="959:67">msf</name></expr></argument>, <argument pos:start="959:70" pos:end="959:80"><expr pos:start="959:70" pos:end="959:80"><name pos:start="959:70" pos:end="959:80">start_track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="961:17" pos:end="961:22">break;</break>

            <default pos:start="963:13" pos:end="963:20">default:</default>

                <goto pos:start="965:17" pos:end="965:31">goto <name pos:start="965:22" pos:end="965:30">error_cmd</name>;</goto>

            </block_content>}</block></switch>

            <if_stmt pos:start="969:13" pos:end="979:13"><if pos:start="969:13" pos:end="979:13">if <condition pos:start="969:16" pos:end="969:27">(<expr pos:start="969:17" pos:end="969:26"><name pos:start="969:17" pos:end="969:22">toclen</name> <operator pos:start="969:24" pos:end="969:24">&gt;</operator> <literal type="number" pos:start="969:26" pos:end="969:26">0</literal></expr>)</condition> <block pos:start="969:29" pos:end="979:13">{<block_content pos:start="971:17" pos:end="977:22">

                <if_stmt pos:start="971:17" pos:end="973:31"><if pos:start="971:17" pos:end="973:31">if <condition pos:start="971:20" pos:end="971:33">(<expr pos:start="971:21" pos:end="971:32"><name pos:start="971:21" pos:end="971:23">len</name> <operator pos:start="971:25" pos:end="971:25">&gt;</operator> <name pos:start="971:27" pos:end="971:32">toclen</name></expr>)</condition><block type="pseudo" pos:start="973:19" pos:end="973:31"><block_content pos:start="973:19" pos:end="973:31">

                  <expr_stmt pos:start="973:19" pos:end="973:31"><expr pos:start="973:19" pos:end="973:30"><name pos:start="973:19" pos:end="973:21">len</name> <operator pos:start="973:23" pos:end="973:23">=</operator> <name pos:start="973:25" pos:end="973:30">toclen</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="975:17" pos:end="975:37"><expr pos:start="975:17" pos:end="975:36"><name pos:start="975:17" pos:end="975:30"><name pos:start="975:17" pos:end="975:17">r</name><operator pos:start="975:18" pos:end="975:19">-&gt;</operator><name pos:start="975:20" pos:end="975:22">iov</name><operator pos:start="975:23" pos:end="975:23">.</operator><name pos:start="975:24" pos:end="975:30">iov_len</name></name> <operator pos:start="975:32" pos:end="975:32">=</operator> <name pos:start="975:34" pos:end="975:36">len</name></expr>;</expr_stmt>

                <break pos:start="977:17" pos:end="977:22">break;</break>

            </block_content>}</block></if></if_stmt>

        <label pos:start="981:9" pos:end="981:18"><name pos:start="981:9" pos:end="981:17">error_cmd</name>:</label>

            <expr_stmt pos:start="983:13" pos:end="983:40"><expr pos:start="983:13" pos:end="983:39"><call pos:start="983:13" pos:end="983:39"><name pos:start="983:13" pos:end="983:19">DPRINTF</name><argument_list pos:start="983:20" pos:end="983:39">(<argument pos:start="983:21" pos:end="983:38"><expr pos:start="983:21" pos:end="983:38"><literal type="string" pos:start="983:21" pos:end="983:38">"Read TOC error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="985:13" pos:end="985:22">goto <name pos:start="985:18" pos:end="985:21">fail</name>;</goto>

        </block_content>}</block>

    <case pos:start="989:5" pos:end="989:14">case <expr pos:start="989:10" pos:end="989:13"><literal type="number" pos:start="989:10" pos:end="989:13">0x46</literal></expr>:</case>

        <expr_stmt pos:start="991:9" pos:end="991:75"><expr pos:start="991:9" pos:end="991:74"><call pos:start="991:9" pos:end="991:74"><name pos:start="991:9" pos:end="991:15">DPRINTF</name><argument_list pos:start="991:16" pos:end="991:74">(<argument pos:start="991:17" pos:end="991:56"><expr pos:start="991:17" pos:end="991:56"><literal type="string" pos:start="991:17" pos:end="991:56">"Get Configuration (rt %d, maxlen %d)\n"</literal></expr></argument>, <argument pos:start="991:59" pos:end="991:68"><expr pos:start="991:59" pos:end="991:68"><name pos:start="991:59" pos:end="991:64"><name pos:start="991:59" pos:end="991:61">buf</name><index pos:start="991:62" pos:end="991:64">[<expr pos:start="991:63" pos:end="991:63"><literal type="number" pos:start="991:63" pos:end="991:63">1</literal></expr>]</index></name> <operator pos:start="991:66" pos:end="991:66">&amp;</operator> <literal type="number" pos:start="991:68" pos:end="991:68">3</literal></expr></argument>, <argument pos:start="991:71" pos:end="991:73"><expr pos:start="991:71" pos:end="991:73"><name pos:start="991:71" pos:end="991:73">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="993:9" pos:end="993:29"><expr pos:start="993:9" pos:end="993:28"><call pos:start="993:9" pos:end="993:28"><name pos:start="993:9" pos:end="993:14">memset</name><argument_list pos:start="993:15" pos:end="993:28">(<argument pos:start="993:16" pos:end="993:21"><expr pos:start="993:16" pos:end="993:21"><name pos:start="993:16" pos:end="993:21">outbuf</name></expr></argument>, <argument pos:start="993:24" pos:end="993:24"><expr pos:start="993:24" pos:end="993:24"><literal type="number" pos:start="993:24" pos:end="993:24">0</literal></expr></argument>, <argument pos:start="993:27" pos:end="993:27"><expr pos:start="993:27" pos:end="993:27"><literal type="number" pos:start="993:27" pos:end="993:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="995:9" pos:end="997:74">/* ??? This should probably return much more information.  For now

           just return the basic header indicating the CD-ROM profile.  */</comment>

        <expr_stmt pos:start="999:9" pos:end="999:22"><expr pos:start="999:9" pos:end="999:21"><name pos:start="999:9" pos:end="999:17"><name pos:start="999:9" pos:end="999:14">outbuf</name><index pos:start="999:15" pos:end="999:17">[<expr pos:start="999:16" pos:end="999:16"><literal type="number" pos:start="999:16" pos:end="999:16">7</literal></expr>]</index></name> <operator pos:start="999:19" pos:end="999:19">=</operator> <literal type="number" pos:start="999:21" pos:end="999:21">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="999:24" pos:end="999:32">// CD-ROM</comment>

        <expr_stmt pos:start="1001:9" pos:end="1001:27"><expr pos:start="1001:9" pos:end="1001:26"><name pos:start="1001:9" pos:end="1001:22"><name pos:start="1001:9" pos:end="1001:9">r</name><operator pos:start="1001:10" pos:end="1001:11">-&gt;</operator><name pos:start="1001:12" pos:end="1001:14">iov</name><operator pos:start="1001:15" pos:end="1001:15">.</operator><name pos:start="1001:16" pos:end="1001:22">iov_len</name></name> <operator pos:start="1001:24" pos:end="1001:24">=</operator> <literal type="number" pos:start="1001:26" pos:end="1001:26">8</literal></expr>;</expr_stmt>

        <break pos:start="1003:9" pos:end="1003:14">break;</break>

    <case pos:start="1005:5" pos:end="1005:14">case <expr pos:start="1005:10" pos:end="1005:13"><literal type="number" pos:start="1005:10" pos:end="1005:13">0x56</literal></expr>:</case>

        <expr_stmt pos:start="1007:9" pos:end="1007:33"><expr pos:start="1007:9" pos:end="1007:32"><call pos:start="1007:9" pos:end="1007:32"><name pos:start="1007:9" pos:end="1007:15">DPRINTF</name><argument_list pos:start="1007:16" pos:end="1007:32">(<argument pos:start="1007:17" pos:end="1007:31"><expr pos:start="1007:17" pos:end="1007:31"><literal type="string" pos:start="1007:17" pos:end="1007:31">"Reserve(10)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1009:9" pos:end="1011:22"><if pos:start="1009:9" pos:end="1011:22">if <condition pos:start="1009:12" pos:end="1009:23">(<expr pos:start="1009:13" pos:end="1009:22"><name pos:start="1009:13" pos:end="1009:18"><name pos:start="1009:13" pos:end="1009:15">buf</name><index pos:start="1009:16" pos:end="1009:18">[<expr pos:start="1009:17" pos:end="1009:17"><literal type="number" pos:start="1009:17" pos:end="1009:17">1</literal></expr>]</index></name> <operator pos:start="1009:20" pos:end="1009:20">&amp;</operator> <literal type="number" pos:start="1009:22" pos:end="1009:22">3</literal></expr>)</condition><block type="pseudo" pos:start="1011:13" pos:end="1011:22"><block_content pos:start="1011:13" pos:end="1011:22">

            <goto pos:start="1011:13" pos:end="1011:22">goto <name pos:start="1011:18" pos:end="1011:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="1013:9" pos:end="1013:14">break;</break>

    <case pos:start="1015:5" pos:end="1015:14">case <expr pos:start="1015:10" pos:end="1015:13"><literal type="number" pos:start="1015:10" pos:end="1015:13">0x57</literal></expr>:</case>

        <expr_stmt pos:start="1017:9" pos:end="1017:33"><expr pos:start="1017:9" pos:end="1017:32"><call pos:start="1017:9" pos:end="1017:32"><name pos:start="1017:9" pos:end="1017:15">DPRINTF</name><argument_list pos:start="1017:16" pos:end="1017:32">(<argument pos:start="1017:17" pos:end="1017:31"><expr pos:start="1017:17" pos:end="1017:31"><literal type="string" pos:start="1017:17" pos:end="1017:31">"Release(10)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1019:9" pos:end="1021:22"><if pos:start="1019:9" pos:end="1021:22">if <condition pos:start="1019:12" pos:end="1019:23">(<expr pos:start="1019:13" pos:end="1019:22"><name pos:start="1019:13" pos:end="1019:18"><name pos:start="1019:13" pos:end="1019:15">buf</name><index pos:start="1019:16" pos:end="1019:18">[<expr pos:start="1019:17" pos:end="1019:17"><literal type="number" pos:start="1019:17" pos:end="1019:17">1</literal></expr>]</index></name> <operator pos:start="1019:20" pos:end="1019:20">&amp;</operator> <literal type="number" pos:start="1019:22" pos:end="1019:22">3</literal></expr>)</condition><block type="pseudo" pos:start="1021:13" pos:end="1021:22"><block_content pos:start="1021:13" pos:end="1021:22">

            <goto pos:start="1021:13" pos:end="1021:22">goto <name pos:start="1021:18" pos:end="1021:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="1023:9" pos:end="1023:14">break;</break>

    <case pos:start="1025:5" pos:end="1025:14">case <expr pos:start="1025:10" pos:end="1025:13"><literal type="number" pos:start="1025:10" pos:end="1025:13">0x9e</literal></expr>:</case>

        <comment type="block" pos:start="1027:9" pos:end="1027:44">/* Service Action In subcommands. */</comment>

        <if_stmt pos:start="1029:9" pos:end="1087:9"><if pos:start="1029:9" pos:end="1087:9">if <condition pos:start="1029:12" pos:end="1029:34">(<expr pos:start="1029:13" pos:end="1029:33"><operator pos:start="1029:13" pos:end="1029:13">(</operator><name pos:start="1029:14" pos:end="1029:19"><name pos:start="1029:14" pos:end="1029:16">buf</name><index pos:start="1029:17" pos:end="1029:19">[<expr pos:start="1029:18" pos:end="1029:18"><literal type="number" pos:start="1029:18" pos:end="1029:18">1</literal></expr>]</index></name> <operator pos:start="1029:21" pos:end="1029:21">&amp;</operator> <literal type="number" pos:start="1029:23" pos:end="1029:24">31</literal><operator pos:start="1029:25" pos:end="1029:25">)</operator> <operator pos:start="1029:27" pos:end="1029:28">==</operator> <literal type="number" pos:start="1029:30" pos:end="1029:33">0x10</literal></expr>)</condition> <block pos:start="1029:36" pos:end="1087:9">{<block_content pos:start="1031:13" pos:end="1085:18">

            <expr_stmt pos:start="1031:13" pos:end="1031:47"><expr pos:start="1031:13" pos:end="1031:46"><call pos:start="1031:13" pos:end="1031:46"><name pos:start="1031:13" pos:end="1031:19">DPRINTF</name><argument_list pos:start="1031:20" pos:end="1031:46">(<argument pos:start="1031:21" pos:end="1031:45"><expr pos:start="1031:21" pos:end="1031:45"><literal type="string" pos:start="1031:21" pos:end="1031:45">"SAI READ CAPACITY(16)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1033:13" pos:end="1033:35"><expr pos:start="1033:13" pos:end="1033:34"><call pos:start="1033:13" pos:end="1033:34"><name pos:start="1033:13" pos:end="1033:18">memset</name><argument_list pos:start="1033:19" pos:end="1033:34">(<argument pos:start="1033:20" pos:end="1033:25"><expr pos:start="1033:20" pos:end="1033:25"><name pos:start="1033:20" pos:end="1033:25">outbuf</name></expr></argument>, <argument pos:start="1033:28" pos:end="1033:28"><expr pos:start="1033:28" pos:end="1033:28"><literal type="number" pos:start="1033:28" pos:end="1033:28">0</literal></expr></argument>, <argument pos:start="1033:31" pos:end="1033:33"><expr pos:start="1033:31" pos:end="1033:33"><name pos:start="1033:31" pos:end="1033:33">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1035:13" pos:end="1035:59"><expr pos:start="1035:13" pos:end="1035:58"><call pos:start="1035:13" pos:end="1035:58"><name pos:start="1035:13" pos:end="1035:29">bdrv_get_geometry</name><argument_list pos:start="1035:30" pos:end="1035:58">(<argument pos:start="1035:31" pos:end="1035:44"><expr pos:start="1035:31" pos:end="1035:44"><name pos:start="1035:31" pos:end="1035:44"><name pos:start="1035:31" pos:end="1035:31">s</name><operator pos:start="1035:32" pos:end="1035:33">-&gt;</operator><name pos:start="1035:34" pos:end="1035:38">dinfo</name><operator pos:start="1035:39" pos:end="1035:40">-&gt;</operator><name pos:start="1035:41" pos:end="1035:44">bdrv</name></name></expr></argument>, <argument pos:start="1035:47" pos:end="1035:57"><expr pos:start="1035:47" pos:end="1035:57"><operator pos:start="1035:47" pos:end="1035:47">&amp;</operator><name pos:start="1035:48" pos:end="1035:57">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1037:13" pos:end="1037:42"><expr pos:start="1037:13" pos:end="1037:41"><name pos:start="1037:13" pos:end="1037:22">nb_sectors</name> <operator pos:start="1037:24" pos:end="1037:25">/=</operator> <name pos:start="1037:27" pos:end="1037:41"><name pos:start="1037:27" pos:end="1037:27">s</name><operator pos:start="1037:28" pos:end="1037:29">-&gt;</operator><name pos:start="1037:30" pos:end="1037:41">cluster_size</name></name></expr>;</expr_stmt>

            <comment type="block" pos:start="1039:13" pos:end="1039:68">/* Returned value is the address of the last sector.  */</comment>

            <if_stmt pos:start="1041:13" pos:end="1083:13"><if pos:start="1041:13" pos:end="1077:13">if <condition pos:start="1041:16" pos:end="1041:27">(<expr pos:start="1041:17" pos:end="1041:26"><name pos:start="1041:17" pos:end="1041:26">nb_sectors</name></expr>)</condition> <block pos:start="1041:29" pos:end="1077:13">{<block_content pos:start="1043:17" pos:end="1075:37">

                <expr_stmt pos:start="1043:17" pos:end="1043:29"><expr pos:start="1043:17" pos:end="1043:28"><name pos:start="1043:17" pos:end="1043:26">nb_sectors</name><operator pos:start="1043:27" pos:end="1043:28">--</operator></expr>;</expr_stmt>

                <comment type="block" pos:start="1045:17" pos:end="1045:75">/* Remember the new size for read/write sanity checking. */</comment>

                <expr_stmt pos:start="1047:17" pos:end="1047:40"><expr pos:start="1047:17" pos:end="1047:39"><name pos:start="1047:17" pos:end="1047:26"><name pos:start="1047:17" pos:end="1047:17">s</name><operator pos:start="1047:18" pos:end="1047:19">-&gt;</operator><name pos:start="1047:20" pos:end="1047:26">max_lba</name></name> <operator pos:start="1047:28" pos:end="1047:28">=</operator> <name pos:start="1047:30" pos:end="1047:39">nb_sectors</name></expr>;</expr_stmt>

                <expr_stmt pos:start="1049:17" pos:end="1049:54"><expr pos:start="1049:17" pos:end="1049:53"><name pos:start="1049:17" pos:end="1049:25"><name pos:start="1049:17" pos:end="1049:22">outbuf</name><index pos:start="1049:23" pos:end="1049:25">[<expr pos:start="1049:24" pos:end="1049:24"><literal type="number" pos:start="1049:24" pos:end="1049:24">0</literal></expr>]</index></name> <operator pos:start="1049:27" pos:end="1049:27">=</operator> <operator pos:start="1049:29" pos:end="1049:29">(</operator><name pos:start="1049:30" pos:end="1049:39">nb_sectors</name> <operator pos:start="1049:41" pos:end="1049:42">&gt;&gt;</operator> <literal type="number" pos:start="1049:44" pos:end="1049:45">56</literal><operator pos:start="1049:46" pos:end="1049:46">)</operator> <operator pos:start="1049:48" pos:end="1049:48">&amp;</operator> <literal type="number" pos:start="1049:50" pos:end="1049:53">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1051:17" pos:end="1051:54"><expr pos:start="1051:17" pos:end="1051:53"><name pos:start="1051:17" pos:end="1051:25"><name pos:start="1051:17" pos:end="1051:22">outbuf</name><index pos:start="1051:23" pos:end="1051:25">[<expr pos:start="1051:24" pos:end="1051:24"><literal type="number" pos:start="1051:24" pos:end="1051:24">1</literal></expr>]</index></name> <operator pos:start="1051:27" pos:end="1051:27">=</operator> <operator pos:start="1051:29" pos:end="1051:29">(</operator><name pos:start="1051:30" pos:end="1051:39">nb_sectors</name> <operator pos:start="1051:41" pos:end="1051:42">&gt;&gt;</operator> <literal type="number" pos:start="1051:44" pos:end="1051:45">48</literal><operator pos:start="1051:46" pos:end="1051:46">)</operator> <operator pos:start="1051:48" pos:end="1051:48">&amp;</operator> <literal type="number" pos:start="1051:50" pos:end="1051:53">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1053:17" pos:end="1053:54"><expr pos:start="1053:17" pos:end="1053:53"><name pos:start="1053:17" pos:end="1053:25"><name pos:start="1053:17" pos:end="1053:22">outbuf</name><index pos:start="1053:23" pos:end="1053:25">[<expr pos:start="1053:24" pos:end="1053:24"><literal type="number" pos:start="1053:24" pos:end="1053:24">2</literal></expr>]</index></name> <operator pos:start="1053:27" pos:end="1053:27">=</operator> <operator pos:start="1053:29" pos:end="1053:29">(</operator><name pos:start="1053:30" pos:end="1053:39">nb_sectors</name> <operator pos:start="1053:41" pos:end="1053:42">&gt;&gt;</operator> <literal type="number" pos:start="1053:44" pos:end="1053:45">40</literal><operator pos:start="1053:46" pos:end="1053:46">)</operator> <operator pos:start="1053:48" pos:end="1053:48">&amp;</operator> <literal type="number" pos:start="1053:50" pos:end="1053:53">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1055:17" pos:end="1055:54"><expr pos:start="1055:17" pos:end="1055:53"><name pos:start="1055:17" pos:end="1055:25"><name pos:start="1055:17" pos:end="1055:22">outbuf</name><index pos:start="1055:23" pos:end="1055:25">[<expr pos:start="1055:24" pos:end="1055:24"><literal type="number" pos:start="1055:24" pos:end="1055:24">3</literal></expr>]</index></name> <operator pos:start="1055:27" pos:end="1055:27">=</operator> <operator pos:start="1055:29" pos:end="1055:29">(</operator><name pos:start="1055:30" pos:end="1055:39">nb_sectors</name> <operator pos:start="1055:41" pos:end="1055:42">&gt;&gt;</operator> <literal type="number" pos:start="1055:44" pos:end="1055:45">32</literal><operator pos:start="1055:46" pos:end="1055:46">)</operator> <operator pos:start="1055:48" pos:end="1055:48">&amp;</operator> <literal type="number" pos:start="1055:50" pos:end="1055:53">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1057:17" pos:end="1057:54"><expr pos:start="1057:17" pos:end="1057:53"><name pos:start="1057:17" pos:end="1057:25"><name pos:start="1057:17" pos:end="1057:22">outbuf</name><index pos:start="1057:23" pos:end="1057:25">[<expr pos:start="1057:24" pos:end="1057:24"><literal type="number" pos:start="1057:24" pos:end="1057:24">4</literal></expr>]</index></name> <operator pos:start="1057:27" pos:end="1057:27">=</operator> <operator pos:start="1057:29" pos:end="1057:29">(</operator><name pos:start="1057:30" pos:end="1057:39">nb_sectors</name> <operator pos:start="1057:41" pos:end="1057:42">&gt;&gt;</operator> <literal type="number" pos:start="1057:44" pos:end="1057:45">24</literal><operator pos:start="1057:46" pos:end="1057:46">)</operator> <operator pos:start="1057:48" pos:end="1057:48">&amp;</operator> <literal type="number" pos:start="1057:50" pos:end="1057:53">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1059:17" pos:end="1059:54"><expr pos:start="1059:17" pos:end="1059:53"><name pos:start="1059:17" pos:end="1059:25"><name pos:start="1059:17" pos:end="1059:22">outbuf</name><index pos:start="1059:23" pos:end="1059:25">[<expr pos:start="1059:24" pos:end="1059:24"><literal type="number" pos:start="1059:24" pos:end="1059:24">5</literal></expr>]</index></name> <operator pos:start="1059:27" pos:end="1059:27">=</operator> <operator pos:start="1059:29" pos:end="1059:29">(</operator><name pos:start="1059:30" pos:end="1059:39">nb_sectors</name> <operator pos:start="1059:41" pos:end="1059:42">&gt;&gt;</operator> <literal type="number" pos:start="1059:44" pos:end="1059:45">16</literal><operator pos:start="1059:46" pos:end="1059:46">)</operator> <operator pos:start="1059:48" pos:end="1059:48">&amp;</operator> <literal type="number" pos:start="1059:50" pos:end="1059:53">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1061:17" pos:end="1061:53"><expr pos:start="1061:17" pos:end="1061:52"><name pos:start="1061:17" pos:end="1061:25"><name pos:start="1061:17" pos:end="1061:22">outbuf</name><index pos:start="1061:23" pos:end="1061:25">[<expr pos:start="1061:24" pos:end="1061:24"><literal type="number" pos:start="1061:24" pos:end="1061:24">6</literal></expr>]</index></name> <operator pos:start="1061:27" pos:end="1061:27">=</operator> <operator pos:start="1061:29" pos:end="1061:29">(</operator><name pos:start="1061:30" pos:end="1061:39">nb_sectors</name> <operator pos:start="1061:41" pos:end="1061:42">&gt;&gt;</operator> <literal type="number" pos:start="1061:44" pos:end="1061:44">8</literal><operator pos:start="1061:45" pos:end="1061:45">)</operator> <operator pos:start="1061:47" pos:end="1061:47">&amp;</operator> <literal type="number" pos:start="1061:49" pos:end="1061:52">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1063:17" pos:end="1063:46"><expr pos:start="1063:17" pos:end="1063:45"><name pos:start="1063:17" pos:end="1063:25"><name pos:start="1063:17" pos:end="1063:22">outbuf</name><index pos:start="1063:23" pos:end="1063:25">[<expr pos:start="1063:24" pos:end="1063:24"><literal type="number" pos:start="1063:24" pos:end="1063:24">7</literal></expr>]</index></name> <operator pos:start="1063:27" pos:end="1063:27">=</operator> <name pos:start="1063:29" pos:end="1063:38">nb_sectors</name> <operator pos:start="1063:40" pos:end="1063:40">&amp;</operator> <literal type="number" pos:start="1063:42" pos:end="1063:45">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1065:17" pos:end="1065:30"><expr pos:start="1065:17" pos:end="1065:29"><name pos:start="1065:17" pos:end="1065:25"><name pos:start="1065:17" pos:end="1065:22">outbuf</name><index pos:start="1065:23" pos:end="1065:25">[<expr pos:start="1065:24" pos:end="1065:24"><literal type="number" pos:start="1065:24" pos:end="1065:24">8</literal></expr>]</index></name> <operator pos:start="1065:27" pos:end="1065:27">=</operator> <literal type="number" pos:start="1065:29" pos:end="1065:29">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1067:17" pos:end="1067:30"><expr pos:start="1067:17" pos:end="1067:29"><name pos:start="1067:17" pos:end="1067:25"><name pos:start="1067:17" pos:end="1067:22">outbuf</name><index pos:start="1067:23" pos:end="1067:25">[<expr pos:start="1067:24" pos:end="1067:24"><literal type="number" pos:start="1067:24" pos:end="1067:24">9</literal></expr>]</index></name> <operator pos:start="1067:27" pos:end="1067:27">=</operator> <literal type="number" pos:start="1067:29" pos:end="1067:29">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1069:17" pos:end="1069:49"><expr pos:start="1069:17" pos:end="1069:48"><name pos:start="1069:17" pos:end="1069:26"><name pos:start="1069:17" pos:end="1069:22">outbuf</name><index pos:start="1069:23" pos:end="1069:26">[<expr pos:start="1069:24" pos:end="1069:25"><literal type="number" pos:start="1069:24" pos:end="1069:25">10</literal></expr>]</index></name> <operator pos:start="1069:28" pos:end="1069:28">=</operator> <name pos:start="1069:30" pos:end="1069:44"><name pos:start="1069:30" pos:end="1069:30">s</name><operator pos:start="1069:31" pos:end="1069:32">-&gt;</operator><name pos:start="1069:33" pos:end="1069:44">cluster_size</name></name> <operator pos:start="1069:46" pos:end="1069:46">*</operator> <literal type="number" pos:start="1069:48" pos:end="1069:48">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1071:17" pos:end="1071:31"><expr pos:start="1071:17" pos:end="1071:30"><name pos:start="1071:17" pos:end="1071:26"><name pos:start="1071:17" pos:end="1071:22">outbuf</name><index pos:start="1071:23" pos:end="1071:26">[<expr pos:start="1071:24" pos:end="1071:25"><literal type="number" pos:start="1071:24" pos:end="1071:25">11</literal></expr>]</index></name> <operator pos:start="1071:28" pos:end="1071:28">=</operator> <literal type="number" pos:start="1071:30" pos:end="1071:30">0</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="1073:17" pos:end="1073:75">/* Protection, exponent and lowest lba field left blank. */</comment>

                <expr_stmt pos:start="1075:17" pos:end="1075:37"><expr pos:start="1075:17" pos:end="1075:36"><name pos:start="1075:17" pos:end="1075:30"><name pos:start="1075:17" pos:end="1075:17">r</name><operator pos:start="1075:18" pos:end="1075:19">-&gt;</operator><name pos:start="1075:20" pos:end="1075:22">iov</name><operator pos:start="1075:23" pos:end="1075:23">.</operator><name pos:start="1075:24" pos:end="1075:30">iov_len</name></name> <operator pos:start="1075:32" pos:end="1075:32">=</operator> <name pos:start="1075:34" pos:end="1075:36">len</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1077:15" pos:end="1083:13">else <block pos:start="1077:20" pos:end="1083:13">{<block_content pos:start="1079:17" pos:end="1081:25">

                <expr_stmt pos:start="1079:17" pos:end="1079:82"><expr pos:start="1079:17" pos:end="1079:81"><call pos:start="1079:17" pos:end="1079:81"><name pos:start="1079:17" pos:end="1079:37">scsi_command_complete</name><argument_list pos:start="1079:38" pos:end="1079:81">(<argument pos:start="1079:39" pos:end="1079:39"><expr pos:start="1079:39" pos:end="1079:39"><name pos:start="1079:39" pos:end="1079:39">r</name></expr></argument>, <argument pos:start="1079:42" pos:end="1079:63"><expr pos:start="1079:42" pos:end="1079:63"><name pos:start="1079:42" pos:end="1079:63">STATUS_CHECK_CONDITION</name></expr></argument>, <argument pos:start="1079:66" pos:end="1079:80"><expr pos:start="1079:66" pos:end="1079:80"><name pos:start="1079:66" pos:end="1079:80">SENSE_NOT_READY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="1081:17" pos:end="1081:25">return <expr pos:start="1081:24" pos:end="1081:24"><literal type="number" pos:start="1081:24" pos:end="1081:24">0</literal></expr>;</return>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1085:13" pos:end="1085:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1089:9" pos:end="1089:51"><expr pos:start="1089:9" pos:end="1089:50"><call pos:start="1089:9" pos:end="1089:50"><name pos:start="1089:9" pos:end="1089:15">DPRINTF</name><argument_list pos:start="1089:16" pos:end="1089:50">(<argument pos:start="1089:17" pos:end="1089:49"><expr pos:start="1089:17" pos:end="1089:49"><literal type="string" pos:start="1089:17" pos:end="1089:49">"Unsupported Service Action In\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1091:9" pos:end="1091:18">goto <name pos:start="1091:14" pos:end="1091:17">fail</name>;</goto>

    <case pos:start="1093:5" pos:end="1093:14">case <expr pos:start="1093:10" pos:end="1093:13"><literal type="number" pos:start="1093:10" pos:end="1093:13">0xa0</literal></expr>:</case>

        <expr_stmt pos:start="1095:9" pos:end="1095:47"><expr pos:start="1095:9" pos:end="1095:46"><call pos:start="1095:9" pos:end="1095:46"><name pos:start="1095:9" pos:end="1095:15">DPRINTF</name><argument_list pos:start="1095:16" pos:end="1095:46">(<argument pos:start="1095:17" pos:end="1095:40"><expr pos:start="1095:17" pos:end="1095:40"><literal type="string" pos:start="1095:17" pos:end="1095:40">"Report LUNs (len %d)\n"</literal></expr></argument>, <argument pos:start="1095:43" pos:end="1095:45"><expr pos:start="1095:43" pos:end="1095:45"><name pos:start="1095:43" pos:end="1095:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1097:9" pos:end="1099:22"><if pos:start="1097:9" pos:end="1099:22">if <condition pos:start="1097:12" pos:end="1097:21">(<expr pos:start="1097:13" pos:end="1097:20"><name pos:start="1097:13" pos:end="1097:15">len</name> <operator pos:start="1097:17" pos:end="1097:17">&lt;</operator> <literal type="number" pos:start="1097:19" pos:end="1097:20">16</literal></expr>)</condition><block type="pseudo" pos:start="1099:13" pos:end="1099:22"><block_content pos:start="1099:13" pos:end="1099:22">

            <goto pos:start="1099:13" pos:end="1099:22">goto <name pos:start="1099:18" pos:end="1099:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1101:9" pos:end="1101:30"><expr pos:start="1101:9" pos:end="1101:29"><call pos:start="1101:9" pos:end="1101:29"><name pos:start="1101:9" pos:end="1101:14">memset</name><argument_list pos:start="1101:15" pos:end="1101:29">(<argument pos:start="1101:16" pos:end="1101:21"><expr pos:start="1101:16" pos:end="1101:21"><name pos:start="1101:16" pos:end="1101:21">outbuf</name></expr></argument>, <argument pos:start="1101:24" pos:end="1101:24"><expr pos:start="1101:24" pos:end="1101:24"><literal type="number" pos:start="1101:24" pos:end="1101:24">0</literal></expr></argument>, <argument pos:start="1101:27" pos:end="1101:28"><expr pos:start="1101:27" pos:end="1101:28"><literal type="number" pos:start="1101:27" pos:end="1101:28">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1103:9" pos:end="1103:22"><expr pos:start="1103:9" pos:end="1103:21"><name pos:start="1103:9" pos:end="1103:17"><name pos:start="1103:9" pos:end="1103:14">outbuf</name><index pos:start="1103:15" pos:end="1103:17">[<expr pos:start="1103:16" pos:end="1103:16"><literal type="number" pos:start="1103:16" pos:end="1103:16">3</literal></expr>]</index></name> <operator pos:start="1103:19" pos:end="1103:19">=</operator> <literal type="number" pos:start="1103:21" pos:end="1103:21">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1105:9" pos:end="1105:28"><expr pos:start="1105:9" pos:end="1105:27"><name pos:start="1105:9" pos:end="1105:22"><name pos:start="1105:9" pos:end="1105:9">r</name><operator pos:start="1105:10" pos:end="1105:11">-&gt;</operator><name pos:start="1105:12" pos:end="1105:14">iov</name><operator pos:start="1105:15" pos:end="1105:15">.</operator><name pos:start="1105:16" pos:end="1105:22">iov_len</name></name> <operator pos:start="1105:24" pos:end="1105:24">=</operator> <literal type="number" pos:start="1105:26" pos:end="1105:27">16</literal></expr>;</expr_stmt>

        <break pos:start="1107:9" pos:end="1107:14">break;</break>

    <case pos:start="1109:5" pos:end="1109:14">case <expr pos:start="1109:10" pos:end="1109:13"><literal type="number" pos:start="1109:10" pos:end="1109:13">0x2f</literal></expr>:</case>

        <expr_stmt pos:start="1111:9" pos:end="1111:69"><expr pos:start="1111:9" pos:end="1111:68"><call pos:start="1111:9" pos:end="1111:68"><name pos:start="1111:9" pos:end="1111:15">DPRINTF</name><argument_list pos:start="1111:16" pos:end="1111:68">(<argument pos:start="1111:17" pos:end="1111:57"><expr pos:start="1111:17" pos:end="1111:57"><literal type="string" pos:start="1111:17" pos:end="1111:34">"Verify (sector %"</literal> <name pos:start="1111:36" pos:end="1111:41">PRId64</name> <literal type="string" pos:start="1111:43" pos:end="1111:57">", count %d)\n"</literal></expr></argument>, <argument pos:start="1111:60" pos:end="1111:62"><expr pos:start="1111:60" pos:end="1111:62"><name pos:start="1111:60" pos:end="1111:62">lba</name></expr></argument>, <argument pos:start="1111:65" pos:end="1111:67"><expr pos:start="1111:65" pos:end="1111:67"><name pos:start="1111:65" pos:end="1111:67">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1113:9" pos:end="1113:14">break;</break>

    <default pos:start="1115:5" pos:end="1115:12">default:</default>

	<expr_stmt pos:start="1117:9" pos:end="1117:58"><expr pos:start="1117:9" pos:end="1117:57"><call pos:start="1117:9" pos:end="1117:57"><name pos:start="1117:9" pos:end="1117:15">DPRINTF</name><argument_list pos:start="1117:16" pos:end="1117:57">(<argument pos:start="1117:17" pos:end="1117:48"><expr pos:start="1117:17" pos:end="1117:48"><literal type="string" pos:start="1117:17" pos:end="1117:48">"Unknown SCSI command (%2.2x)\n"</literal></expr></argument>, <argument pos:start="1117:51" pos:end="1117:56"><expr pos:start="1117:51" pos:end="1117:56"><name pos:start="1117:51" pos:end="1117:56"><name pos:start="1117:51" pos:end="1117:53">buf</name><index pos:start="1117:54" pos:end="1117:56">[<expr pos:start="1117:55" pos:end="1117:55"><literal type="number" pos:start="1117:55" pos:end="1117:55">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <label pos:start="1119:5" pos:end="1119:9"><name pos:start="1119:5" pos:end="1119:8">fail</name>:</label>

        <expr_stmt pos:start="1121:9" pos:end="1121:80"><expr pos:start="1121:9" pos:end="1121:79"><call pos:start="1121:9" pos:end="1121:79"><name pos:start="1121:9" pos:end="1121:29">scsi_command_complete</name><argument_list pos:start="1121:30" pos:end="1121:79">(<argument pos:start="1121:31" pos:end="1121:31"><expr pos:start="1121:31" pos:end="1121:31"><name pos:start="1121:31" pos:end="1121:31">r</name></expr></argument>, <argument pos:start="1121:34" pos:end="1121:55"><expr pos:start="1121:34" pos:end="1121:55"><name pos:start="1121:34" pos:end="1121:55">STATUS_CHECK_CONDITION</name></expr></argument>, <argument pos:start="1121:58" pos:end="1121:78"><expr pos:start="1121:58" pos:end="1121:78"><name pos:start="1121:58" pos:end="1121:78">SENSE_ILLEGAL_REQUEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="1123:9" pos:end="1123:17">return <expr pos:start="1123:16" pos:end="1123:16"><literal type="number" pos:start="1123:16" pos:end="1123:16">0</literal></expr>;</return>

    <label pos:start="1125:5" pos:end="1125:16"><name pos:start="1125:5" pos:end="1125:15">illegal_lba</name>:</label>

        <expr_stmt pos:start="1127:9" pos:end="1127:79"><expr pos:start="1127:9" pos:end="1127:78"><call pos:start="1127:9" pos:end="1127:78"><name pos:start="1127:9" pos:end="1127:29">scsi_command_complete</name><argument_list pos:start="1127:30" pos:end="1127:78">(<argument pos:start="1127:31" pos:end="1127:31"><expr pos:start="1127:31" pos:end="1127:31"><name pos:start="1127:31" pos:end="1127:31">r</name></expr></argument>, <argument pos:start="1127:34" pos:end="1127:55"><expr pos:start="1127:34" pos:end="1127:55"><name pos:start="1127:34" pos:end="1127:55">STATUS_CHECK_CONDITION</name></expr></argument>, <argument pos:start="1127:58" pos:end="1127:77"><expr pos:start="1127:58" pos:end="1127:77"><name pos:start="1127:58" pos:end="1127:77">SENSE_HARDWARE_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="1129:9" pos:end="1129:17">return <expr pos:start="1129:16" pos:end="1129:16"><literal type="number" pos:start="1129:16" pos:end="1129:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

    <if_stmt pos:start="1133:5" pos:end="1137:5"><if pos:start="1133:5" pos:end="1137:5">if <condition pos:start="1133:8" pos:end="1133:52">(<expr pos:start="1133:9" pos:end="1133:51"><name pos:start="1133:9" pos:end="1133:23"><name pos:start="1133:9" pos:end="1133:9">r</name><operator pos:start="1133:10" pos:end="1133:11">-&gt;</operator><name pos:start="1133:12" pos:end="1133:23">sector_count</name></name> <operator pos:start="1133:25" pos:end="1133:26">==</operator> <literal type="number" pos:start="1133:28" pos:end="1133:28">0</literal> <operator pos:start="1133:30" pos:end="1133:31">&amp;&amp;</operator> <name pos:start="1133:33" pos:end="1133:46"><name pos:start="1133:33" pos:end="1133:33">r</name><operator pos:start="1133:34" pos:end="1133:35">-&gt;</operator><name pos:start="1133:36" pos:end="1133:38">iov</name><operator pos:start="1133:39" pos:end="1133:39">.</operator><name pos:start="1133:40" pos:end="1133:46">iov_len</name></name> <operator pos:start="1133:48" pos:end="1133:49">==</operator> <literal type="number" pos:start="1133:51" pos:end="1133:51">0</literal></expr>)</condition> <block pos:start="1133:54" pos:end="1137:5">{<block_content pos:start="1135:9" pos:end="1135:62">

        <expr_stmt pos:start="1135:9" pos:end="1135:62"><expr pos:start="1135:9" pos:end="1135:61"><call pos:start="1135:9" pos:end="1135:61"><name pos:start="1135:9" pos:end="1135:29">scsi_command_complete</name><argument_list pos:start="1135:30" pos:end="1135:61">(<argument pos:start="1135:31" pos:end="1135:31"><expr pos:start="1135:31" pos:end="1135:31"><name pos:start="1135:31" pos:end="1135:31">r</name></expr></argument>, <argument pos:start="1135:34" pos:end="1135:44"><expr pos:start="1135:34" pos:end="1135:44"><name pos:start="1135:34" pos:end="1135:44">STATUS_GOOD</name></expr></argument>, <argument pos:start="1135:47" pos:end="1135:60"><expr pos:start="1135:47" pos:end="1135:60"><name pos:start="1135:47" pos:end="1135:60">SENSE_NO_SENSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1139:5" pos:end="1139:49"><expr pos:start="1139:5" pos:end="1139:48"><name pos:start="1139:5" pos:end="1139:7">len</name> <operator pos:start="1139:9" pos:end="1139:9">=</operator> <name pos:start="1139:11" pos:end="1139:25"><name pos:start="1139:11" pos:end="1139:11">r</name><operator pos:start="1139:12" pos:end="1139:13">-&gt;</operator><name pos:start="1139:14" pos:end="1139:25">sector_count</name></name> <operator pos:start="1139:27" pos:end="1139:27">*</operator> <literal type="number" pos:start="1139:29" pos:end="1139:33">512</literal> <operator pos:start="1139:33" pos:end="1139:33">+</operator> <name pos:start="1139:35" pos:end="1139:48"><name pos:start="1139:35" pos:end="1139:35">r</name><operator pos:start="1139:36" pos:end="1139:37">-&gt;</operator><name pos:start="1139:38" pos:end="1139:40">iov</name><operator pos:start="1139:41" pos:end="1139:41">.</operator><name pos:start="1139:42" pos:end="1139:48">iov_len</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="1141:5" pos:end="1153:5"><if pos:start="1141:5" pos:end="1145:5">if <condition pos:start="1141:8" pos:end="1141:17">(<expr pos:start="1141:9" pos:end="1141:16"><name pos:start="1141:9" pos:end="1141:16">is_write</name></expr>)</condition> <block pos:start="1141:19" pos:end="1145:5">{<block_content pos:start="1143:9" pos:end="1143:20">

        <return pos:start="1143:9" pos:end="1143:20">return <expr pos:start="1143:16" pos:end="1143:19"><operator pos:start="1143:16" pos:end="1143:16">-</operator><name pos:start="1143:17" pos:end="1143:19">len</name></expr>;</return>

    </block_content>}</block></if> <else pos:start="1145:7" pos:end="1153:5">else <block pos:start="1145:12" pos:end="1153:5">{<block_content pos:start="1147:9" pos:end="1151:19">

        <if_stmt pos:start="1147:9" pos:end="1149:33"><if pos:start="1147:9" pos:end="1149:33">if <condition pos:start="1147:12" pos:end="1147:29">(<expr pos:start="1147:13" pos:end="1147:28"><operator pos:start="1147:13" pos:end="1147:13">!</operator><name pos:start="1147:14" pos:end="1147:28"><name pos:start="1147:14" pos:end="1147:14">r</name><operator pos:start="1147:15" pos:end="1147:16">-&gt;</operator><name pos:start="1147:17" pos:end="1147:28">sector_count</name></name></expr>)</condition><block type="pseudo" pos:start="1149:13" pos:end="1149:33"><block_content pos:start="1149:13" pos:end="1149:33">

            <expr_stmt pos:start="1149:13" pos:end="1149:33"><expr pos:start="1149:13" pos:end="1149:32"><name pos:start="1149:13" pos:end="1149:27"><name pos:start="1149:13" pos:end="1149:13">r</name><operator pos:start="1149:14" pos:end="1149:15">-&gt;</operator><name pos:start="1149:16" pos:end="1149:27">sector_count</name></name> <operator pos:start="1149:29" pos:end="1149:29">=</operator> <operator pos:start="1149:31" pos:end="1149:31">-</operator><literal type="number" pos:start="1149:32" pos:end="1149:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="1151:9" pos:end="1151:19">return <expr pos:start="1151:16" pos:end="1151:18"><name pos:start="1151:16" pos:end="1151:18">len</name></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
