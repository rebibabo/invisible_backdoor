<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18533.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">ff_lpc_calc_coefs</name><parameter_list pos:start="1:22" pos:end="7:90">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:32">DSPContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:44"><decl pos:start="3:23" pos:end="3:44"><type pos:start="3:23" pos:end="3:44"><specifier pos:start="3:23" pos:end="3:27">const</specifier> <name pos:start="3:29" pos:end="3:35">int32_t</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:44">samples</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:59"><decl pos:start="3:47" pos:end="3:59"><type pos:start="3:47" pos:end="3:59"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:59">blocksize</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:74"><decl pos:start="3:62" pos:end="3:74"><type pos:start="3:62" pos:end="3:74"><name pos:start="3:62" pos:end="3:64">int</name></type> <name pos:start="3:66" pos:end="3:74">max_order</name></decl></parameter>,

                      <parameter pos:start="5:23" pos:end="5:35"><decl pos:start="5:23" pos:end="5:35"><type pos:start="5:23" pos:end="5:35"><name pos:start="5:23" pos:end="5:25">int</name></type> <name pos:start="5:27" pos:end="5:35">precision</name></decl></parameter>, <parameter pos:start="5:38" pos:end="5:67"><decl pos:start="5:38" pos:end="5:67"><type pos:start="5:38" pos:end="5:50"><name pos:start="5:38" pos:end="5:44">int32_t</name></type> <name pos:start="5:46" pos:end="5:67"><name pos:start="5:46" pos:end="5:50">coefs</name><index pos:start="5:51" pos:end="5:52">[]</index><index pos:start="5:53" pos:end="5:67">[<expr pos:start="5:54" pos:end="5:66"><name pos:start="5:54" pos:end="5:66">MAX_LPC_ORDER</name></expr>]</index></name></decl></parameter>,

                      <parameter pos:start="7:23" pos:end="7:32"><decl pos:start="7:23" pos:end="7:32"><type pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:25">int</name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:32">shift</name></decl></parameter>, <parameter pos:start="7:35" pos:end="7:45"><decl pos:start="7:35" pos:end="7:45"><type pos:start="7:35" pos:end="7:45"><name pos:start="7:35" pos:end="7:37">int</name></type> <name pos:start="7:39" pos:end="7:45">use_lpc</name></decl></parameter>, <parameter pos:start="7:48" pos:end="7:58"><decl pos:start="7:48" pos:end="7:58"><type pos:start="7:48" pos:end="7:58"><name pos:start="7:48" pos:end="7:50">int</name></type> <name pos:start="7:52" pos:end="7:58">omethod</name></decl></parameter>, <parameter pos:start="7:61" pos:end="7:73"><decl pos:start="7:61" pos:end="7:73"><type pos:start="7:61" pos:end="7:73"><name pos:start="7:61" pos:end="7:63">int</name></type> <name pos:start="7:65" pos:end="7:73">max_shift</name></decl></parameter>, <parameter pos:start="7:76" pos:end="7:89"><decl pos:start="7:76" pos:end="7:89"><type pos:start="7:76" pos:end="7:89"><name pos:start="7:76" pos:end="7:78">int</name></type> <name pos:start="7:80" pos:end="7:89">zero_shift</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="135:1">{<block_content pos:start="11:5" pos:end="133:21">

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">double</name></type> <name pos:start="11:12" pos:end="11:33"><name pos:start="11:12" pos:end="11:16">autoc</name><index pos:start="11:17" pos:end="11:33">[<expr pos:start="11:18" pos:end="11:32"><name pos:start="11:18" pos:end="11:30">MAX_LPC_ORDER</name><operator pos:start="11:31" pos:end="11:31">+</operator><literal type="number" pos:start="11:32" pos:end="11:32">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">double</name></type> <name pos:start="13:12" pos:end="13:29"><name pos:start="13:12" pos:end="13:14">ref</name><index pos:start="13:15" pos:end="13:29">[<expr pos:start="13:16" pos:end="13:28"><name pos:start="13:16" pos:end="13:28">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:45"><decl pos:start="15:5" pos:end="15:44"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">double</name></type> <name pos:start="15:12" pos:end="15:44"><name pos:start="15:12" pos:end="15:14">lpc</name><index pos:start="15:15" pos:end="15:29">[<expr pos:start="15:16" pos:end="15:28"><name pos:start="15:16" pos:end="15:28">MAX_LPC_ORDER</name></expr>]</index><index pos:start="15:30" pos:end="15:44">[<expr pos:start="15:31" pos:end="15:43"><name pos:start="15:31" pos:end="15:43">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:12"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:12">j</name></decl>, <decl pos:start="17:15" pos:end="17:18"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:18">pass</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">opt_order</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:69"><expr pos:start="23:5" pos:end="23:68"><call pos:start="23:5" pos:end="23:68"><name pos:start="23:5" pos:end="23:10">assert</name><argument_list pos:start="23:11" pos:end="23:68">(<argument pos:start="23:12" pos:end="23:67"><expr pos:start="23:12" pos:end="23:67"><name pos:start="23:12" pos:end="23:20">max_order</name> <operator pos:start="23:22" pos:end="23:23">&gt;=</operator> <name pos:start="23:25" pos:end="23:37">MIN_LPC_ORDER</name> <operator pos:start="23:39" pos:end="23:40">&amp;&amp;</operator> <name pos:start="23:42" pos:end="23:50">max_order</name> <operator pos:start="23:52" pos:end="23:53">&lt;=</operator> <name pos:start="23:55" pos:end="23:67">MAX_LPC_ORDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="107:5"><if pos:start="27:5" pos:end="35:5">if<condition pos:start="27:7" pos:end="27:20">(<expr pos:start="27:8" pos:end="27:19"><name pos:start="27:8" pos:end="27:14">use_lpc</name> <operator pos:start="27:16" pos:end="27:17">==</operator> <literal type="number" pos:start="27:19" pos:end="27:19">1</literal></expr>)</condition><block pos:start="27:21" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:54">

        <expr_stmt pos:start="29:9" pos:end="29:71"><expr pos:start="29:9" pos:end="29:70"><call pos:start="29:9" pos:end="29:70"><name pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:32">flac_compute_autocorr</name></name><argument_list pos:start="29:33" pos:end="29:70">(<argument pos:start="29:34" pos:end="29:40"><expr pos:start="29:34" pos:end="29:40"><name pos:start="29:34" pos:end="29:40">samples</name></expr></argument>, <argument pos:start="29:43" pos:end="29:51"><expr pos:start="29:43" pos:end="29:51"><name pos:start="29:43" pos:end="29:51">blocksize</name></expr></argument>, <argument pos:start="29:54" pos:end="29:62"><expr pos:start="29:54" pos:end="29:62"><name pos:start="29:54" pos:end="29:62">max_order</name></expr></argument>, <argument pos:start="29:65" pos:end="29:69"><expr pos:start="29:65" pos:end="29:69"><name pos:start="29:65" pos:end="29:69">autoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:54"><expr pos:start="33:9" pos:end="33:53"><call pos:start="33:9" pos:end="33:53"><name pos:start="33:9" pos:end="33:25">compute_lpc_coefs</name><argument_list pos:start="33:26" pos:end="33:53">(<argument pos:start="33:27" pos:end="33:31"><expr pos:start="33:27" pos:end="33:31"><name pos:start="33:27" pos:end="33:31">autoc</name></expr></argument>, <argument pos:start="33:34" pos:end="33:42"><expr pos:start="33:34" pos:end="33:42"><name pos:start="33:34" pos:end="33:42">max_order</name></expr></argument>, <argument pos:start="33:45" pos:end="33:47"><expr pos:start="33:45" pos:end="33:47"><name pos:start="33:45" pos:end="33:47">lpc</name></expr></argument>, <argument pos:start="33:50" pos:end="33:52"><expr pos:start="33:50" pos:end="33:52"><name pos:start="33:50" pos:end="33:52">ref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="35:6" pos:end="107:5">else<block pos:start="35:10" pos:end="107:5">{<block_content pos:start="37:9" pos:end="105:39">

        <decl_stmt pos:start="37:9" pos:end="37:22"><decl pos:start="37:9" pos:end="37:21"><type pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:16">LLSModel</name></type> <name pos:start="37:18" pos:end="37:21"><name pos:start="37:18" pos:end="37:18">m</name><index pos:start="37:19" pos:end="37:21">[<expr pos:start="37:20" pos:end="37:20"><literal type="number" pos:start="37:20" pos:end="37:20">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:44"><decl pos:start="39:9" pos:end="39:35"><type pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:14">double</name></type> <name pos:start="39:16" pos:end="39:35"><name pos:start="39:16" pos:end="39:18">var</name><index pos:start="39:19" pos:end="39:35">[<expr pos:start="39:20" pos:end="39:34"><name pos:start="39:20" pos:end="39:32">MAX_LPC_ORDER</name><operator pos:start="39:33" pos:end="39:33">+</operator><literal type="number" pos:start="39:34" pos:end="39:34">1</literal></expr>]</index></name></decl>, <decl pos:start="39:38" pos:end="39:43"><type ref="prev" pos:start="39:9" pos:end="39:14"/><name pos:start="39:38" pos:end="39:43">weight</name></decl>;</decl_stmt>



        <for pos:start="43:9" pos:end="89:9">for<control pos:start="43:12" pos:end="43:43">(<init pos:start="43:13" pos:end="43:19"><expr pos:start="43:13" pos:end="43:18"><name pos:start="43:13" pos:end="43:16">pass</name><operator pos:start="43:17" pos:end="43:17">=</operator><literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:35"><expr pos:start="43:21" pos:end="43:34"><name pos:start="43:21" pos:end="43:24">pass</name><operator pos:start="43:25" pos:end="43:25">&lt;</operator><name pos:start="43:26" pos:end="43:32">use_lpc</name><operator pos:start="43:33" pos:end="43:33">-</operator><literal type="number" pos:start="43:34" pos:end="43:34">1</literal></expr>;</condition> <incr pos:start="43:37" pos:end="43:42"><expr pos:start="43:37" pos:end="43:42"><name pos:start="43:37" pos:end="43:40">pass</name><operator pos:start="43:41" pos:end="43:42">++</operator></expr></incr>)</control><block pos:start="43:44" pos:end="89:9">{<block_content pos:start="45:13" pos:end="87:47">

            <expr_stmt pos:start="45:13" pos:end="45:47"><expr pos:start="45:13" pos:end="45:46"><call pos:start="45:13" pos:end="45:46"><name pos:start="45:13" pos:end="45:23">av_init_lls</name><argument_list pos:start="45:24" pos:end="45:46">(<argument pos:start="45:25" pos:end="45:34"><expr pos:start="45:25" pos:end="45:34"><operator pos:start="45:25" pos:end="45:25">&amp;</operator><name pos:start="45:26" pos:end="45:34"><name pos:start="45:26" pos:end="45:26">m</name><index pos:start="45:27" pos:end="45:34">[<expr pos:start="45:28" pos:end="45:33"><name pos:start="45:28" pos:end="45:31">pass</name><operator pos:start="45:32" pos:end="45:32">&amp;</operator><literal type="number" pos:start="45:33" pos:end="45:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:37" pos:end="45:45"><expr pos:start="45:37" pos:end="45:45"><name pos:start="45:37" pos:end="45:45">max_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="49:13" pos:end="49:21"><expr pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:18">weight</name><operator pos:start="49:19" pos:end="49:19">=</operator><literal type="number" pos:start="49:20" pos:end="49:20">0</literal></expr>;</expr_stmt>

            <for pos:start="51:13" pos:end="85:13">for<control pos:start="51:16" pos:end="51:46">(<init pos:start="51:17" pos:end="51:28"><expr pos:start="51:17" pos:end="51:27"><name pos:start="51:17" pos:end="51:17">i</name><operator pos:start="51:18" pos:end="51:18">=</operator><name pos:start="51:19" pos:end="51:27">max_order</name></expr>;</init> <condition pos:start="51:30" pos:end="51:41"><expr pos:start="51:30" pos:end="51:40"><name pos:start="51:30" pos:end="51:30">i</name><operator pos:start="51:31" pos:end="51:31">&lt;</operator><name pos:start="51:32" pos:end="51:40">blocksize</name></expr>;</condition> <incr pos:start="51:43" pos:end="51:45"><expr pos:start="51:43" pos:end="51:45"><name pos:start="51:43" pos:end="51:43">i</name><operator pos:start="51:44" pos:end="51:45">++</operator></expr></incr>)</control><block pos:start="51:47" pos:end="85:13">{<block_content pos:start="53:17" pos:end="83:52">

                <for pos:start="53:17" pos:end="55:41">for<control pos:start="53:20" pos:end="53:43">(<init pos:start="53:21" pos:end="53:24"><expr pos:start="53:21" pos:end="53:23"><name pos:start="53:21" pos:end="53:21">j</name><operator pos:start="53:22" pos:end="53:22">=</operator><literal type="number" pos:start="53:23" pos:end="53:23">0</literal></expr>;</init> <condition pos:start="53:26" pos:end="53:38"><expr pos:start="53:26" pos:end="53:37"><name pos:start="53:26" pos:end="53:26">j</name><operator pos:start="53:27" pos:end="53:28">&lt;=</operator><name pos:start="53:29" pos:end="53:37">max_order</name></expr>;</condition> <incr pos:start="53:40" pos:end="53:42"><expr pos:start="53:40" pos:end="53:42"><name pos:start="53:40" pos:end="53:40">j</name><operator pos:start="53:41" pos:end="53:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="55:21" pos:end="55:41"><block_content pos:start="55:21" pos:end="55:41">

                    <expr_stmt pos:start="55:21" pos:end="55:41"><expr pos:start="55:21" pos:end="55:40"><name pos:start="55:21" pos:end="55:26"><name pos:start="55:21" pos:end="55:23">var</name><index pos:start="55:24" pos:end="55:26">[<expr pos:start="55:25" pos:end="55:25"><name pos:start="55:25" pos:end="55:25">j</name></expr>]</index></name><operator pos:start="55:27" pos:end="55:27">=</operator> <name pos:start="55:29" pos:end="55:40"><name pos:start="55:29" pos:end="55:35">samples</name><index pos:start="55:36" pos:end="55:40">[<expr pos:start="55:37" pos:end="55:39"><name pos:start="55:37" pos:end="55:37">i</name><operator pos:start="55:38" pos:end="55:38">-</operator><name pos:start="55:39" pos:end="55:39">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



                <if_stmt pos:start="59:17" pos:end="79:29"><if pos:start="59:17" pos:end="77:17">if<condition pos:start="59:19" pos:end="59:24">(<expr pos:start="59:20" pos:end="59:23"><name pos:start="59:20" pos:end="59:23">pass</name></expr>)</condition><block pos:start="59:25" pos:end="77:17">{<block_content pos:start="61:21" pos:end="75:34">

                    <decl_stmt pos:start="61:21" pos:end="61:43"><decl pos:start="61:21" pos:end="61:31"><type pos:start="61:21" pos:end="61:26"><name pos:start="61:21" pos:end="61:26">double</name></type> <name pos:start="61:28" pos:end="61:31">eval</name></decl>, <decl pos:start="61:34" pos:end="61:36"><type ref="prev" pos:start="61:21" pos:end="61:26"/><name pos:start="61:34" pos:end="61:36">inv</name></decl>, <decl pos:start="61:39" pos:end="61:42"><type ref="prev" pos:start="61:21" pos:end="61:26"/><name pos:start="61:39" pos:end="61:42">rinv</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="63:21" pos:end="63:78"><expr pos:start="63:21" pos:end="63:77"><name pos:start="63:21" pos:end="63:24">eval</name><operator pos:start="63:25" pos:end="63:25">=</operator> <call pos:start="63:27" pos:end="63:77"><name pos:start="63:27" pos:end="63:41">av_evaluate_lls</name><argument_list pos:start="63:42" pos:end="63:77">(<argument pos:start="63:43" pos:end="63:56"><expr pos:start="63:43" pos:end="63:56"><operator pos:start="63:43" pos:end="63:43">&amp;</operator><name pos:start="63:44" pos:end="63:56"><name pos:start="63:44" pos:end="63:44">m</name><index pos:start="63:45" pos:end="63:56">[<expr pos:start="63:46" pos:end="63:55"><operator pos:start="63:46" pos:end="63:46">(</operator><name pos:start="63:47" pos:end="63:50">pass</name><operator pos:start="63:51" pos:end="63:51">-</operator><literal type="number" pos:start="63:52" pos:end="63:52">1</literal><operator pos:start="63:53" pos:end="63:53">)</operator><operator pos:start="63:54" pos:end="63:54">&amp;</operator><literal type="number" pos:start="63:55" pos:end="63:55">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="63:59" pos:end="63:63"><expr pos:start="63:59" pos:end="63:63"><name pos:start="63:59" pos:end="63:61">var</name><operator pos:start="63:62" pos:end="63:62">+</operator><literal type="number" pos:start="63:63" pos:end="63:63">1</literal></expr></argument>, <argument pos:start="63:66" pos:end="63:76"><expr pos:start="63:66" pos:end="63:76"><name pos:start="63:66" pos:end="63:74">max_order</name><operator pos:start="63:75" pos:end="63:75">-</operator><literal type="number" pos:start="63:76" pos:end="63:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:60"><expr pos:start="65:21" pos:end="65:59"><name pos:start="65:21" pos:end="65:24">eval</name><operator pos:start="65:25" pos:end="65:25">=</operator> <operator pos:start="65:27" pos:end="65:27">(</operator><literal type="number" pos:start="65:28" pos:end="65:30">512</literal><operator pos:start="65:31" pos:end="65:32">&gt;&gt;</operator><name pos:start="65:33" pos:end="65:36">pass</name><operator pos:start="65:37" pos:end="65:37">)</operator> <operator pos:start="65:39" pos:end="65:39">+</operator> <call pos:start="65:41" pos:end="65:59"><name pos:start="65:41" pos:end="65:44">fabs</name><argument_list pos:start="65:45" pos:end="65:59">(<argument pos:start="65:46" pos:end="65:58"><expr pos:start="65:46" pos:end="65:58"><name pos:start="65:46" pos:end="65:49">eval</name> <operator pos:start="65:51" pos:end="65:51">-</operator> <name pos:start="65:53" pos:end="65:58"><name pos:start="65:53" pos:end="65:55">var</name><index pos:start="65:56" pos:end="65:58">[<expr pos:start="65:57" pos:end="65:57"><literal type="number" pos:start="65:57" pos:end="65:57">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="67:21" pos:end="67:33"><expr pos:start="67:21" pos:end="67:32"><name pos:start="67:21" pos:end="67:23">inv</name> <operator pos:start="67:25" pos:end="67:25">=</operator> <literal type="number" pos:start="67:27" pos:end="67:27">1</literal><operator pos:start="67:28" pos:end="67:28">/</operator><name pos:start="67:29" pos:end="67:32">eval</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="69:21" pos:end="69:37"><expr pos:start="69:21" pos:end="69:36"><name pos:start="69:21" pos:end="69:24">rinv</name> <operator pos:start="69:26" pos:end="69:26">=</operator> <call pos:start="69:28" pos:end="69:36"><name pos:start="69:28" pos:end="69:31">sqrt</name><argument_list pos:start="69:32" pos:end="69:36">(<argument pos:start="69:33" pos:end="69:35"><expr pos:start="69:33" pos:end="69:35"><name pos:start="69:33" pos:end="69:35">inv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="71:21" pos:end="73:39">for<control pos:start="71:24" pos:end="71:47">(<init pos:start="71:25" pos:end="71:28"><expr pos:start="71:25" pos:end="71:27"><name pos:start="71:25" pos:end="71:25">j</name><operator pos:start="71:26" pos:end="71:26">=</operator><literal type="number" pos:start="71:27" pos:end="71:27">0</literal></expr>;</init> <condition pos:start="71:30" pos:end="71:42"><expr pos:start="71:30" pos:end="71:41"><name pos:start="71:30" pos:end="71:30">j</name><operator pos:start="71:31" pos:end="71:32">&lt;=</operator><name pos:start="71:33" pos:end="71:41">max_order</name></expr>;</condition> <incr pos:start="71:44" pos:end="71:46"><expr pos:start="71:44" pos:end="71:46"><name pos:start="71:44" pos:end="71:44">j</name><operator pos:start="71:45" pos:end="71:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="73:25" pos:end="73:39"><block_content pos:start="73:25" pos:end="73:39">

                        <expr_stmt pos:start="73:25" pos:end="73:39"><expr pos:start="73:25" pos:end="73:38"><name pos:start="73:25" pos:end="73:30"><name pos:start="73:25" pos:end="73:27">var</name><index pos:start="73:28" pos:end="73:30">[<expr pos:start="73:29" pos:end="73:29"><name pos:start="73:29" pos:end="73:29">j</name></expr>]</index></name> <operator pos:start="73:32" pos:end="73:33">*=</operator> <name pos:start="73:35" pos:end="73:38">rinv</name></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="75:21" pos:end="75:34"><expr pos:start="75:21" pos:end="75:33"><name pos:start="75:21" pos:end="75:26">weight</name> <operator pos:start="75:28" pos:end="75:29">+=</operator> <name pos:start="75:31" pos:end="75:33">inv</name></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="77:18" pos:end="79:29">else<block type="pseudo" pos:start="79:21" pos:end="79:29"><block_content pos:start="79:21" pos:end="79:29">

                    <expr_stmt pos:start="79:21" pos:end="79:29"><expr pos:start="79:21" pos:end="79:28"><name pos:start="79:21" pos:end="79:26">weight</name><operator pos:start="79:27" pos:end="79:28">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <expr_stmt pos:start="83:17" pos:end="83:52"><expr pos:start="83:17" pos:end="83:51"><call pos:start="83:17" pos:end="83:51"><name pos:start="83:17" pos:end="83:29">av_update_lls</name><argument_list pos:start="83:30" pos:end="83:51">(<argument pos:start="83:31" pos:end="83:40"><expr pos:start="83:31" pos:end="83:40"><operator pos:start="83:31" pos:end="83:31">&amp;</operator><name pos:start="83:32" pos:end="83:40"><name pos:start="83:32" pos:end="83:32">m</name><index pos:start="83:33" pos:end="83:40">[<expr pos:start="83:34" pos:end="83:39"><name pos:start="83:34" pos:end="83:37">pass</name><operator pos:start="83:38" pos:end="83:38">&amp;</operator><literal type="number" pos:start="83:39" pos:end="83:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="83:43" pos:end="83:45"><expr pos:start="83:43" pos:end="83:45"><name pos:start="83:43" pos:end="83:45">var</name></expr></argument>, <argument pos:start="83:48" pos:end="83:50"><expr pos:start="83:48" pos:end="83:50"><literal type="number" pos:start="83:48" pos:end="83:50">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="87:13" pos:end="87:47"><expr pos:start="87:13" pos:end="87:46"><call pos:start="87:13" pos:end="87:46"><name pos:start="87:13" pos:end="87:24">av_solve_lls</name><argument_list pos:start="87:25" pos:end="87:46">(<argument pos:start="87:26" pos:end="87:35"><expr pos:start="87:26" pos:end="87:35"><operator pos:start="87:26" pos:end="87:26">&amp;</operator><name pos:start="87:27" pos:end="87:35"><name pos:start="87:27" pos:end="87:27">m</name><index pos:start="87:28" pos:end="87:35">[<expr pos:start="87:29" pos:end="87:34"><name pos:start="87:29" pos:end="87:32">pass</name><operator pos:start="87:33" pos:end="87:33">&amp;</operator><literal type="number" pos:start="87:34" pos:end="87:34">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="87:38" pos:end="87:42"><expr pos:start="87:38" pos:end="87:42"><literal type="number" pos:start="87:38" pos:end="87:42">0.001</literal></expr></argument>, <argument pos:start="87:45" pos:end="87:45"><expr pos:start="87:45" pos:end="87:45"><literal type="number" pos:start="87:45" pos:end="87:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="93:9" pos:end="101:9">for<control pos:start="93:12" pos:end="93:34">(<init pos:start="93:13" pos:end="93:16"><expr pos:start="93:13" pos:end="93:15"><name pos:start="93:13" pos:end="93:13">i</name><operator pos:start="93:14" pos:end="93:14">=</operator><literal type="number" pos:start="93:15" pos:end="93:15">0</literal></expr>;</init> <condition pos:start="93:18" pos:end="93:29"><expr pos:start="93:18" pos:end="93:28"><name pos:start="93:18" pos:end="93:18">i</name><operator pos:start="93:19" pos:end="93:19">&lt;</operator><name pos:start="93:20" pos:end="93:28">max_order</name></expr>;</condition> <incr pos:start="93:31" pos:end="93:33"><expr pos:start="93:31" pos:end="93:33"><name pos:start="93:31" pos:end="93:31">i</name><operator pos:start="93:32" pos:end="93:33">++</operator></expr></incr>)</control><block pos:start="93:35" pos:end="101:9">{<block_content pos:start="95:13" pos:end="99:94">

            <for pos:start="95:13" pos:end="97:53">for<control pos:start="95:16" pos:end="95:38">(<init pos:start="95:17" pos:end="95:20"><expr pos:start="95:17" pos:end="95:19"><name pos:start="95:17" pos:end="95:17">j</name><operator pos:start="95:18" pos:end="95:18">=</operator><literal type="number" pos:start="95:19" pos:end="95:19">0</literal></expr>;</init> <condition pos:start="95:22" pos:end="95:33"><expr pos:start="95:22" pos:end="95:32"><name pos:start="95:22" pos:end="95:22">j</name><operator pos:start="95:23" pos:end="95:23">&lt;</operator><name pos:start="95:24" pos:end="95:32">max_order</name></expr>;</condition> <incr pos:start="95:35" pos:end="95:37"><expr pos:start="95:35" pos:end="95:37"><name pos:start="95:35" pos:end="95:35">j</name><operator pos:start="95:36" pos:end="95:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="97:17" pos:end="97:53"><block_content pos:start="97:17" pos:end="97:53">

                <expr_stmt pos:start="97:17" pos:end="97:53"><expr pos:start="97:17" pos:end="97:52"><name pos:start="97:17" pos:end="97:25"><name pos:start="97:17" pos:end="97:19">lpc</name><index pos:start="97:20" pos:end="97:22">[<expr pos:start="97:21" pos:end="97:21"><name pos:start="97:21" pos:end="97:21">i</name></expr>]</index><index pos:start="97:23" pos:end="97:25">[<expr pos:start="97:24" pos:end="97:24"><name pos:start="97:24" pos:end="97:24">j</name></expr>]</index></name><operator pos:start="97:26" pos:end="97:26">=</operator> <name pos:start="97:28" pos:end="97:40"><name pos:start="97:28" pos:end="97:28">m</name><index pos:start="97:29" pos:end="97:40">[<expr pos:start="97:30" pos:end="97:39"><operator pos:start="97:30" pos:end="97:30">(</operator><name pos:start="97:31" pos:end="97:34">pass</name><operator pos:start="97:35" pos:end="97:35">-</operator><literal type="number" pos:start="97:36" pos:end="97:36">1</literal><operator pos:start="97:37" pos:end="97:37">)</operator><operator pos:start="97:38" pos:end="97:38">&amp;</operator><literal type="number" pos:start="97:39" pos:end="97:39">1</literal></expr>]</index></name><operator pos:start="97:41" pos:end="97:41">.</operator><name pos:start="97:42" pos:end="97:52"><name pos:start="97:42" pos:end="97:46">coeff</name><index pos:start="97:47" pos:end="97:49">[<expr pos:start="97:48" pos:end="97:48"><name pos:start="97:48" pos:end="97:48">i</name></expr>]</index><index pos:start="97:50" pos:end="97:52">[<expr pos:start="97:51" pos:end="97:51"><name pos:start="97:51" pos:end="97:51">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="99:13" pos:end="99:94"><expr pos:start="99:13" pos:end="99:93"><name pos:start="99:13" pos:end="99:18"><name pos:start="99:13" pos:end="99:15">ref</name><index pos:start="99:16" pos:end="99:18">[<expr pos:start="99:17" pos:end="99:17"><name pos:start="99:17" pos:end="99:17">i</name></expr>]</index></name><operator pos:start="99:19" pos:end="99:19">=</operator> <call pos:start="99:21" pos:end="99:60"><name pos:start="99:21" pos:end="99:24">sqrt</name><argument_list pos:start="99:25" pos:end="99:60">(<argument pos:start="99:26" pos:end="99:59"><expr pos:start="99:26" pos:end="99:59"><name pos:start="99:26" pos:end="99:38"><name pos:start="99:26" pos:end="99:26">m</name><index pos:start="99:27" pos:end="99:38">[<expr pos:start="99:28" pos:end="99:37"><operator pos:start="99:28" pos:end="99:28">(</operator><name pos:start="99:29" pos:end="99:32">pass</name><operator pos:start="99:33" pos:end="99:33">-</operator><literal type="number" pos:start="99:34" pos:end="99:34">1</literal><operator pos:start="99:35" pos:end="99:35">)</operator><operator pos:start="99:36" pos:end="99:36">&amp;</operator><literal type="number" pos:start="99:37" pos:end="99:37">1</literal></expr>]</index></name><operator pos:start="99:39" pos:end="99:39">.</operator><name pos:start="99:40" pos:end="99:50"><name pos:start="99:40" pos:end="99:47">variance</name><index pos:start="99:48" pos:end="99:50">[<expr pos:start="99:49" pos:end="99:49"><name pos:start="99:49" pos:end="99:49">i</name></expr>]</index></name> <operator pos:start="99:52" pos:end="99:52">/</operator> <name pos:start="99:54" pos:end="99:59">weight</name></expr></argument>)</argument_list></call> <operator pos:start="99:62" pos:end="99:62">*</operator> <operator pos:start="99:64" pos:end="99:64">(</operator><name pos:start="99:65" pos:end="99:73">blocksize</name> <operator pos:start="99:75" pos:end="99:75">-</operator> <name pos:start="99:77" pos:end="99:85">max_order</name><operator pos:start="99:86" pos:end="99:86">)</operator> <operator pos:start="99:88" pos:end="99:88">/</operator> <literal type="number" pos:start="99:90" pos:end="99:93">4000</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="103:9" pos:end="105:39">for<control pos:start="103:12" pos:end="103:36">(<init pos:start="103:13" pos:end="103:26"><expr pos:start="103:13" pos:end="103:25"><name pos:start="103:13" pos:end="103:13">i</name><operator pos:start="103:14" pos:end="103:14">=</operator><name pos:start="103:15" pos:end="103:23">max_order</name><operator pos:start="103:24" pos:end="103:24">-</operator><literal type="number" pos:start="103:25" pos:end="103:25">1</literal></expr>;</init> <condition pos:start="103:28" pos:end="103:31"><expr pos:start="103:28" pos:end="103:30"><name pos:start="103:28" pos:end="103:28">i</name><operator pos:start="103:29" pos:end="103:29">&gt;</operator><literal type="number" pos:start="103:30" pos:end="103:30">0</literal></expr>;</condition> <incr pos:start="103:33" pos:end="103:35"><expr pos:start="103:33" pos:end="103:35"><name pos:start="103:33" pos:end="103:33">i</name><operator pos:start="103:34" pos:end="103:35">--</operator></expr></incr>)</control><block type="pseudo" pos:start="105:13" pos:end="105:39"><block_content pos:start="105:13" pos:end="105:39">

            <expr_stmt pos:start="105:13" pos:end="105:39"><expr pos:start="105:13" pos:end="105:38"><name pos:start="105:13" pos:end="105:18"><name pos:start="105:13" pos:end="105:15">ref</name><index pos:start="105:16" pos:end="105:18">[<expr pos:start="105:17" pos:end="105:17"><name pos:start="105:17" pos:end="105:17">i</name></expr>]</index></name> <operator pos:start="105:20" pos:end="105:20">=</operator> <name pos:start="105:22" pos:end="105:29"><name pos:start="105:22" pos:end="105:24">ref</name><index pos:start="105:25" pos:end="105:29">[<expr pos:start="105:26" pos:end="105:28"><name pos:start="105:26" pos:end="105:26">i</name><operator pos:start="105:27" pos:end="105:27">-</operator><literal type="number" pos:start="105:28" pos:end="105:28">1</literal></expr>]</index></name> <operator pos:start="105:31" pos:end="105:31">-</operator> <name pos:start="105:33" pos:end="105:38"><name pos:start="105:33" pos:end="105:35">ref</name><index pos:start="105:36" pos:end="105:38">[<expr pos:start="105:37" pos:end="105:37"><name pos:start="105:37" pos:end="105:37">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:26"><expr pos:start="109:5" pos:end="109:25"><name pos:start="109:5" pos:end="109:13">opt_order</name> <operator pos:start="109:15" pos:end="109:15">=</operator> <name pos:start="109:17" pos:end="109:25">max_order</name></expr>;</expr_stmt>



    <if_stmt pos:start="113:5" pos:end="129:5"><if pos:start="113:5" pos:end="121:5">if<condition pos:start="113:7" pos:end="113:35">(<expr pos:start="113:8" pos:end="113:34"><name pos:start="113:8" pos:end="113:14">omethod</name> <operator pos:start="113:16" pos:end="113:17">==</operator> <name pos:start="113:19" pos:end="113:34">ORDER_METHOD_EST</name></expr>)</condition> <block pos:start="113:37" pos:end="121:5">{<block_content pos:start="115:9" pos:end="119:95">

        <expr_stmt pos:start="115:9" pos:end="115:56"><expr pos:start="115:9" pos:end="115:55"><name pos:start="115:9" pos:end="115:17">opt_order</name> <operator pos:start="115:19" pos:end="115:19">=</operator> <call pos:start="115:21" pos:end="115:55"><name pos:start="115:21" pos:end="115:39">estimate_best_order</name><argument_list pos:start="115:40" pos:end="115:55">(<argument pos:start="115:41" pos:end="115:43"><expr pos:start="115:41" pos:end="115:43"><name pos:start="115:41" pos:end="115:43">ref</name></expr></argument>, <argument pos:start="115:46" pos:end="115:54"><expr pos:start="115:46" pos:end="115:54"><name pos:start="115:46" pos:end="115:54">max_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:24"><expr pos:start="117:9" pos:end="117:23"><name pos:start="117:9" pos:end="117:9">i</name> <operator pos:start="117:11" pos:end="117:11">=</operator> <name pos:start="117:13" pos:end="117:21">opt_order</name><operator pos:start="117:22" pos:end="117:22">-</operator><literal type="number" pos:start="117:23" pos:end="117:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:95"><expr pos:start="119:9" pos:end="119:94"><call pos:start="119:9" pos:end="119:94"><name pos:start="119:9" pos:end="119:26">quantize_lpc_coefs</name><argument_list pos:start="119:27" pos:end="119:94">(<argument pos:start="119:28" pos:end="119:33"><expr pos:start="119:28" pos:end="119:33"><name pos:start="119:28" pos:end="119:33"><name pos:start="119:28" pos:end="119:30">lpc</name><index pos:start="119:31" pos:end="119:33">[<expr pos:start="119:32" pos:end="119:32"><name pos:start="119:32" pos:end="119:32">i</name></expr>]</index></name></expr></argument>, <argument pos:start="119:36" pos:end="119:38"><expr pos:start="119:36" pos:end="119:38"><name pos:start="119:36" pos:end="119:36">i</name><operator pos:start="119:37" pos:end="119:37">+</operator><literal type="number" pos:start="119:38" pos:end="119:38">1</literal></expr></argument>, <argument pos:start="119:41" pos:end="119:49"><expr pos:start="119:41" pos:end="119:49"><name pos:start="119:41" pos:end="119:49">precision</name></expr></argument>, <argument pos:start="119:52" pos:end="119:59"><expr pos:start="119:52" pos:end="119:59"><name pos:start="119:52" pos:end="119:59"><name pos:start="119:52" pos:end="119:56">coefs</name><index pos:start="119:57" pos:end="119:59">[<expr pos:start="119:58" pos:end="119:58"><name pos:start="119:58" pos:end="119:58">i</name></expr>]</index></name></expr></argument>, <argument pos:start="119:62" pos:end="119:70"><expr pos:start="119:62" pos:end="119:70"><operator pos:start="119:62" pos:end="119:62">&amp;</operator><name pos:start="119:63" pos:end="119:70"><name pos:start="119:63" pos:end="119:67">shift</name><index pos:start="119:68" pos:end="119:70">[<expr pos:start="119:69" pos:end="119:69"><name pos:start="119:69" pos:end="119:69">i</name></expr>]</index></name></expr></argument>, <argument pos:start="119:73" pos:end="119:81"><expr pos:start="119:73" pos:end="119:81"><name pos:start="119:73" pos:end="119:81">max_shift</name></expr></argument>, <argument pos:start="119:84" pos:end="119:93"><expr pos:start="119:84" pos:end="119:93"><name pos:start="119:84" pos:end="119:93">zero_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="121:7" pos:end="129:5">else <block pos:start="121:12" pos:end="129:5">{<block_content pos:start="123:9" pos:end="127:9">

        <for pos:start="123:9" pos:end="127:9">for<control pos:start="123:12" pos:end="123:34">(<init pos:start="123:13" pos:end="123:16"><expr pos:start="123:13" pos:end="123:15"><name pos:start="123:13" pos:end="123:13">i</name><operator pos:start="123:14" pos:end="123:14">=</operator><literal type="number" pos:start="123:15" pos:end="123:15">0</literal></expr>;</init> <condition pos:start="123:18" pos:end="123:29"><expr pos:start="123:18" pos:end="123:28"><name pos:start="123:18" pos:end="123:18">i</name><operator pos:start="123:19" pos:end="123:19">&lt;</operator><name pos:start="123:20" pos:end="123:28">max_order</name></expr>;</condition> <incr pos:start="123:31" pos:end="123:33"><expr pos:start="123:31" pos:end="123:33"><name pos:start="123:31" pos:end="123:31">i</name><operator pos:start="123:32" pos:end="123:33">++</operator></expr></incr>)</control> <block pos:start="123:36" pos:end="127:9">{<block_content pos:start="125:13" pos:end="125:99">

            <expr_stmt pos:start="125:13" pos:end="125:99"><expr pos:start="125:13" pos:end="125:98"><call pos:start="125:13" pos:end="125:98"><name pos:start="125:13" pos:end="125:30">quantize_lpc_coefs</name><argument_list pos:start="125:31" pos:end="125:98">(<argument pos:start="125:32" pos:end="125:37"><expr pos:start="125:32" pos:end="125:37"><name pos:start="125:32" pos:end="125:37"><name pos:start="125:32" pos:end="125:34">lpc</name><index pos:start="125:35" pos:end="125:37">[<expr pos:start="125:36" pos:end="125:36"><name pos:start="125:36" pos:end="125:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="125:40" pos:end="125:42"><expr pos:start="125:40" pos:end="125:42"><name pos:start="125:40" pos:end="125:40">i</name><operator pos:start="125:41" pos:end="125:41">+</operator><literal type="number" pos:start="125:42" pos:end="125:42">1</literal></expr></argument>, <argument pos:start="125:45" pos:end="125:53"><expr pos:start="125:45" pos:end="125:53"><name pos:start="125:45" pos:end="125:53">precision</name></expr></argument>, <argument pos:start="125:56" pos:end="125:63"><expr pos:start="125:56" pos:end="125:63"><name pos:start="125:56" pos:end="125:63"><name pos:start="125:56" pos:end="125:60">coefs</name><index pos:start="125:61" pos:end="125:63">[<expr pos:start="125:62" pos:end="125:62"><name pos:start="125:62" pos:end="125:62">i</name></expr>]</index></name></expr></argument>, <argument pos:start="125:66" pos:end="125:74"><expr pos:start="125:66" pos:end="125:74"><operator pos:start="125:66" pos:end="125:66">&amp;</operator><name pos:start="125:67" pos:end="125:74"><name pos:start="125:67" pos:end="125:71">shift</name><index pos:start="125:72" pos:end="125:74">[<expr pos:start="125:73" pos:end="125:73"><name pos:start="125:73" pos:end="125:73">i</name></expr>]</index></name></expr></argument>, <argument pos:start="125:77" pos:end="125:85"><expr pos:start="125:77" pos:end="125:85"><name pos:start="125:77" pos:end="125:85">max_shift</name></expr></argument>, <argument pos:start="125:88" pos:end="125:97"><expr pos:start="125:88" pos:end="125:97"><name pos:start="125:88" pos:end="125:97">zero_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <return pos:start="133:5" pos:end="133:21">return <expr pos:start="133:12" pos:end="133:20"><name pos:start="133:12" pos:end="133:20">opt_order</name></expr>;</return>

</block_content>}</block></function>
</unit>
