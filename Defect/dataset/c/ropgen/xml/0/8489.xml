<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8489.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="55:1"><decl pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:12">void</name></type> <name pos:start="1:14" pos:end="1:33">ff_blockdsp_init_x86</name><argument_list pos:start="1:34" pos:end="6:0">(<argument pos:start="1:35" pos:end="1:52"><expr pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:49">BlockDSPContext</name> <operator pos:start="1:51" pos:end="1:51">*</operator><name pos:start="1:52" pos:end="1:52">c</name></expr></argument>,

                                  <argument pos:start="3:35" pos:end="3:55"><expr pos:start="3:35" pos:end="3:55"><name pos:start="3:35" pos:end="3:48">AVCodecContext</name> <operator pos:start="3:50" pos:end="3:50">*</operator><name pos:start="3:51" pos:end="3:55">avctx</name></expr></argument>)</argument_list>

<cpp:else pos:start="5:1" pos:end="5:5">#<cpp:directive pos:start="5:2" pos:end="5:5">else</cpp:directive></cpp:else>

<name pos:start="7:1" pos:end="7:7">av_cold</name> <name pos:start="7:9" pos:end="7:12">void</name> <name pos:start="7:14" pos:end="7:33">ff_blockdsp_init_x86</name><argument_list pos:start="7:34" pos:end="10:0">(<argument pos:start="7:35" pos:end="7:52"><expr pos:start="7:35" pos:end="7:52"><name pos:start="7:35" pos:end="7:49">BlockDSPContext</name> <operator pos:start="7:51" pos:end="7:51">*</operator><name pos:start="7:52" pos:end="7:52">c</name></expr></argument>)</argument_list>

<cpp:endif pos:start="9:1" pos:end="9:6">#<cpp:directive pos:start="9:2" pos:end="9:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="9:8" pos:end="9:24">/* FF_API_XVMC */</comment>

<block pos:start="11:1" pos:end="55:1">{<block_content pos:start="15:5" pos:end="54:0">

<cpp:if pos:start="13:1" pos:end="13:19">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:19">HAVE_INLINE_ASM</name></expr></cpp:if>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:38"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">cpu_flags</name> <init pos:start="15:19" pos:end="15:38">= <expr pos:start="15:21" pos:end="15:38"><call pos:start="15:21" pos:end="15:38"><name pos:start="15:21" pos:end="15:36">av_get_cpu_flags</name><argument_list pos:start="15:37" pos:end="15:38">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="30:0"><if pos:start="19:5" pos:end="30:0">if <condition pos:start="19:8" pos:end="19:30">(<expr pos:start="19:9" pos:end="19:29"><call pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:18">INLINE_MMX</name><argument_list pos:start="19:19" pos:end="19:29">(<argument pos:start="19:20" pos:end="19:28"><expr pos:start="19:20" pos:end="19:28"><name pos:start="19:20" pos:end="19:28">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:32" pos:end="30:0">{<block_content pos:start="21:9" pos:end="23:43">

        <expr_stmt pos:start="21:9" pos:end="21:42"><expr pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:9">c</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:22">clear_block</name></name>  <operator pos:start="21:25" pos:end="21:25">=</operator> <name pos:start="21:27" pos:end="21:41">clear_block_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:43"><expr pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:9">c</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:23">clear_blocks</name></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <name pos:start="23:27" pos:end="23:42">clear_blocks_mmx</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="29:1" pos:end="29:15">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:15">FF_API_XVMC</name></expr></cpp:if>

<macro pos:start="31:1" pos:end="31:31"><name pos:start="31:1" pos:end="31:31">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

    <comment type="block" pos:start="33:5" pos:end="33:68">/* XvMCCreateBlocks() may not allocate 16-byte aligned blocks */</comment>

    <if_stmt pos:start="35:5" pos:end="37:15"><if pos:start="35:5" pos:end="37:15">if <condition pos:start="35:8" pos:end="35:65">(<expr pos:start="35:9" pos:end="35:64"><name pos:start="35:9" pos:end="35:32">CONFIG_MPEG_XVMC_DECODER</name> <operator pos:start="35:34" pos:end="35:35">&amp;&amp;</operator> <name pos:start="35:37" pos:end="35:60"><name pos:start="35:37" pos:end="35:41">avctx</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:60">xvmc_acceleration</name></name> <operator pos:start="35:62" pos:end="35:62">&gt;</operator> <literal type="number" pos:start="35:64" pos:end="35:64">1</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:15"><block_content pos:start="37:9" pos:end="37:15">

        <return pos:start="37:9" pos:end="37:15">return;</return></block_content></block></if></if_stmt>

<macro pos:start="39:1" pos:end="42:0"><name pos:start="39:1" pos:end="42:0">FF_ENABLE_DEPRECATION_WARNINGS</name></macro>

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="41:8" pos:end="41:24">/* FF_API_XVMC */</comment>



    <if_stmt pos:start="45:5" pos:end="54:0"><if pos:start="45:5" pos:end="54:0">if <condition pos:start="45:8" pos:end="45:30">(<expr pos:start="45:9" pos:end="45:29"><call pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:18">INLINE_SSE</name><argument_list pos:start="45:19" pos:end="45:29">(<argument pos:start="45:20" pos:end="45:28"><expr pos:start="45:20" pos:end="45:28"><name pos:start="45:20" pos:end="45:28">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:32" pos:end="54:0">{<block_content pos:start="47:9" pos:end="49:43">

        <expr_stmt pos:start="47:9" pos:end="47:42"><expr pos:start="47:9" pos:end="47:41"><name pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:9">c</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:22">clear_block</name></name>  <operator pos:start="47:25" pos:end="47:25">=</operator> <name pos:start="47:27" pos:end="47:41">clear_block_sse</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:43"><expr pos:start="49:9" pos:end="49:42"><name pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:9">c</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:23">clear_blocks</name></name> <operator pos:start="49:25" pos:end="49:25">=</operator> <name pos:start="49:27" pos:end="49:42">clear_blocks_sse</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="53:1" pos:end="53:6">#<cpp:directive pos:start="53:2" pos:end="53:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="53:8" pos:end="53:28">/* HAVE_INLINE_ASM */</comment>

</block_content>}</block></decl></decl_stmt>
</unit>
