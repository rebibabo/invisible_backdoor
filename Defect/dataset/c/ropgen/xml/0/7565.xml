<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7565.c" pos:tabs="8"><macro pos:start="1:1" pos:end="5:43"><name pos:start="1:1" pos:end="1:29">block_crypto_create_opts_init</name><argument_list pos:start="1:30" pos:end="5:43">(<argument pos:start="1:31" pos:end="1:55">QCryptoBlockFormat format</argument>,

                              <argument pos:start="3:31" pos:end="3:44">QemuOpts *opts</argument>,

                              <argument pos:start="5:31" pos:end="5:42">Error **errp</argument>)</argument_list></macro>

<block pos:start="7:1" pos:end="85:1">{<block_content pos:start="9:5" pos:end="83:15">

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">Visitor</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:29">QCryptoBlockCreateOptions</name> <modifier pos:start="11:31" pos:end="11:31">*</modifier></type><name pos:start="11:32" pos:end="11:34">ret</name> <init pos:start="11:36" pos:end="11:41">= <expr pos:start="11:38" pos:end="11:41"><name pos:start="11:38" pos:end="11:41">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:20">local_err</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:47"><expr pos:start="17:5" pos:end="17:46"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:46"><name pos:start="17:11" pos:end="17:16">g_new0</name><argument_list pos:start="17:17" pos:end="17:46">(<argument pos:start="17:18" pos:end="17:42"><expr pos:start="17:18" pos:end="17:42"><name pos:start="17:18" pos:end="17:42">QCryptoBlockCreateOptions</name></expr></argument>, <argument pos:start="17:45" pos:end="17:45"><expr pos:start="17:45" pos:end="17:45"><literal type="number" pos:start="17:45" pos:end="17:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:25"><expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:7">ret</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:15">format</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:24">format</name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:5">v</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <call pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:24">opts_visitor_new</name><argument_list pos:start="23:25" pos:end="23:30">(<argument pos:start="23:26" pos:end="23:29"><expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:29">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><call pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:22">visit_start_struct</name><argument_list pos:start="27:23" pos:end="27:52">(<argument pos:start="27:24" pos:end="27:24"><expr pos:start="27:24" pos:end="27:24"><name pos:start="27:24" pos:end="27:24">v</name></expr></argument>, <argument pos:start="27:27" pos:end="27:30"><expr pos:start="27:27" pos:end="27:30"><name pos:start="27:27" pos:end="27:30">NULL</name></expr></argument>, <argument pos:start="27:33" pos:end="27:36"><expr pos:start="27:33" pos:end="27:36"><name pos:start="27:33" pos:end="27:36">NULL</name></expr></argument>, <argument pos:start="27:39" pos:end="27:39"><expr pos:start="27:39" pos:end="27:39"><literal type="number" pos:start="27:39" pos:end="27:39">0</literal></expr></argument>, <argument pos:start="27:42" pos:end="27:51"><expr pos:start="27:42" pos:end="27:51"><operator pos:start="27:42" pos:end="27:42">&amp;</operator><name pos:start="27:43" pos:end="27:51">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:18">(<expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:17">local_err</name></expr>)</condition> <block pos:start="29:20" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:17">

        <goto pos:start="31:9" pos:end="31:17">goto <name pos:start="31:14" pos:end="31:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="37:5" pos:end="55:5">switch <condition pos:start="37:12" pos:end="37:19">(<expr pos:start="37:13" pos:end="37:18"><name pos:start="37:13" pos:end="37:18">format</name></expr>)</condition> <block pos:start="37:21" pos:end="55:5">{<block_content pos:start="39:5" pos:end="53:14">

    <case pos:start="39:5" pos:end="39:36">case <expr pos:start="39:10" pos:end="39:35"><name pos:start="39:10" pos:end="39:35">Q_CRYPTO_BLOCK_FORMAT_LUKS</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="43:41"><expr pos:start="41:9" pos:end="43:40"><call pos:start="41:9" pos:end="43:40"><name pos:start="41:9" pos:end="41:56">visit_type_QCryptoBlockCreateOptionsLUKS_members</name><argument_list pos:start="41:57" pos:end="43:40">(

            <argument pos:start="43:13" pos:end="43:13"><expr pos:start="43:13" pos:end="43:13"><name pos:start="43:13" pos:end="43:13">v</name></expr></argument>, <argument pos:start="43:16" pos:end="43:27"><expr pos:start="43:16" pos:end="43:27"><operator pos:start="43:16" pos:end="43:16">&amp;</operator><name pos:start="43:17" pos:end="43:27"><name pos:start="43:17" pos:end="43:19">ret</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:22">u</name><operator pos:start="43:23" pos:end="43:23">.</operator><name pos:start="43:24" pos:end="43:27">luks</name></name></expr></argument>, <argument pos:start="43:30" pos:end="43:39"><expr pos:start="43:30" pos:end="43:39"><operator pos:start="43:30" pos:end="43:30">&amp;</operator><name pos:start="43:31" pos:end="43:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>



    <default pos:start="49:5" pos:end="49:12">default:</default>

        <expr_stmt pos:start="51:9" pos:end="51:70"><expr pos:start="51:9" pos:end="51:69"><call pos:start="51:9" pos:end="51:69"><name pos:start="51:9" pos:end="51:18">error_setg</name><argument_list pos:start="51:19" pos:end="51:69">(<argument pos:start="51:20" pos:end="51:29"><expr pos:start="51:20" pos:end="51:29"><operator pos:start="51:20" pos:end="51:20">&amp;</operator><name pos:start="51:21" pos:end="51:29">local_err</name></expr></argument>, <argument pos:start="51:32" pos:end="51:60"><expr pos:start="51:32" pos:end="51:60"><literal type="string" pos:start="51:32" pos:end="51:60">"Unsupported block format %d"</literal></expr></argument>, <argument pos:start="51:63" pos:end="51:68"><expr pos:start="51:63" pos:end="51:68"><name pos:start="51:63" pos:end="51:68">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    </block_content>}</block></switch>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:19">(<expr pos:start="57:9" pos:end="57:18"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:18">local_err</name></expr>)</condition> <block pos:start="57:21" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:42">

        <expr_stmt pos:start="59:9" pos:end="59:42"><expr pos:start="59:9" pos:end="59:41"><call pos:start="59:9" pos:end="59:41"><name pos:start="59:9" pos:end="59:26">visit_check_struct</name><argument_list pos:start="59:27" pos:end="59:41">(<argument pos:start="59:28" pos:end="59:28"><expr pos:start="59:28" pos:end="59:28"><name pos:start="59:28" pos:end="59:28">v</name></expr></argument>, <argument pos:start="59:31" pos:end="59:40"><expr pos:start="59:31" pos:end="59:40"><operator pos:start="59:31" pos:end="59:31">&amp;</operator><name pos:start="59:32" pos:end="59:40">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:30"><expr pos:start="65:5" pos:end="65:29"><call pos:start="65:5" pos:end="65:29"><name pos:start="65:5" pos:end="65:20">visit_end_struct</name><argument_list pos:start="65:21" pos:end="65:29">(<argument pos:start="65:22" pos:end="65:22"><expr pos:start="65:22" pos:end="65:22"><name pos:start="65:22" pos:end="65:22">v</name></expr></argument>, <argument pos:start="65:25" pos:end="65:28"><expr pos:start="65:25" pos:end="65:28"><name pos:start="65:25" pos:end="65:28">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



 <label pos:start="69:2" pos:end="69:5"><name pos:start="69:2" pos:end="69:4">out</name>:</label>

    <if_stmt pos:start="71:5" pos:end="79:5"><if pos:start="71:5" pos:end="79:5">if <condition pos:start="71:8" pos:end="71:18">(<expr pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:17">local_err</name></expr>)</condition> <block pos:start="71:20" pos:end="79:5">{<block_content pos:start="73:9" pos:end="77:19">

        <expr_stmt pos:start="73:9" pos:end="73:41"><expr pos:start="73:9" pos:end="73:40"><call pos:start="73:9" pos:end="73:40"><name pos:start="73:9" pos:end="73:23">error_propagate</name><argument_list pos:start="73:24" pos:end="73:40">(<argument pos:start="73:25" pos:end="73:28"><expr pos:start="73:25" pos:end="73:28"><name pos:start="73:25" pos:end="73:28">errp</name></expr></argument>, <argument pos:start="73:31" pos:end="73:39"><expr pos:start="73:31" pos:end="73:39"><name pos:start="73:31" pos:end="73:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:49"><expr pos:start="75:9" pos:end="75:48"><call pos:start="75:9" pos:end="75:48"><name pos:start="75:9" pos:end="75:43">qapi_free_QCryptoBlockCreateOptions</name><argument_list pos:start="75:44" pos:end="75:48">(<argument pos:start="75:45" pos:end="75:47"><expr pos:start="75:45" pos:end="75:47"><name pos:start="75:45" pos:end="75:47">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:19"><expr pos:start="77:9" pos:end="77:18"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <name pos:start="77:15" pos:end="77:18">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:18"><expr pos:start="81:5" pos:end="81:17"><call pos:start="81:5" pos:end="81:17"><name pos:start="81:5" pos:end="81:14">visit_free</name><argument_list pos:start="81:15" pos:end="81:17">(<argument pos:start="81:16" pos:end="81:16"><expr pos:start="81:16" pos:end="81:16"><name pos:start="81:16" pos:end="81:16">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="83:5" pos:end="83:15">return <expr pos:start="83:12" pos:end="83:14"><name pos:start="83:12" pos:end="83:14">ret</name></expr>;</return>

</block_content>}</block>
</unit>
