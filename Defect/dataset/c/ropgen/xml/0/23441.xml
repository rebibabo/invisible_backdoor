<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23441.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">decode_p_block</name><parameter_list pos:start="1:27" pos:end="3:60">(<parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:39">FourXContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">f</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">uint16_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">dst</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:72"><decl pos:start="1:60" pos:end="1:72"><type pos:start="1:60" pos:end="1:72"><name pos:start="1:60" pos:end="1:67">uint16_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">src</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:36"><decl pos:start="3:28" pos:end="3:36"><type pos:start="3:28" pos:end="3:36"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:36">log2w</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:47"><decl pos:start="3:39" pos:end="3:47"><type pos:start="3:39" pos:end="3:47"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:47">log2h</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:59"><decl pos:start="3:50" pos:end="3:59"><type pos:start="3:50" pos:end="3:59"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:59">stride</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="141:1">{<block_content pos:start="7:5" pos:end="139:5">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:19">index</name> <init pos:start="7:21" pos:end="7:46">= <expr pos:start="7:23" pos:end="7:46"><name pos:start="7:23" pos:end="7:46"><name pos:start="7:23" pos:end="7:32">size2index</name><index pos:start="7:33" pos:end="7:39">[<expr pos:start="7:34" pos:end="7:38"><name pos:start="7:34" pos:end="7:38">log2h</name></expr>]</index><index pos:start="7:40" pos:end="7:46">[<expr pos:start="7:41" pos:end="7:45"><name pos:start="7:41" pos:end="7:45">log2w</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:15">h</name>     <init pos:start="9:21" pos:end="9:32">= <expr pos:start="9:23" pos:end="9:32"><literal type="number" pos:start="9:23" pos:end="9:23">1</literal> <operator pos:start="9:25" pos:end="9:26">&lt;&lt;</operator> <name pos:start="9:28" pos:end="9:32">log2h</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="15:55"><decl pos:start="11:5" pos:end="15:54"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">code</name>        <init pos:start="11:21" pos:end="15:54">= <expr pos:start="11:23" pos:end="15:54"><call pos:start="11:23" pos:end="15:54"><name pos:start="11:23" pos:end="11:30">get_vlc2</name><argument_list pos:start="11:31" pos:end="15:54">(<argument pos:start="11:32" pos:end="11:37"><expr pos:start="11:32" pos:end="11:37"><operator pos:start="11:32" pos:end="11:32">&amp;</operator><name pos:start="11:33" pos:end="11:37"><name pos:start="11:33" pos:end="11:33">f</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:37">gb</name></name></expr></argument>,

                               <argument pos:start="13:32" pos:end="13:80"><expr pos:start="13:32" pos:end="13:80"><name pos:start="13:32" pos:end="13:74"><name pos:start="13:32" pos:end="13:45">block_type_vlc</name><index pos:start="13:46" pos:end="13:67">[<expr pos:start="13:47" pos:end="13:66"><literal type="number" pos:start="13:47" pos:end="13:49">1</literal> <operator pos:start="13:49" pos:end="13:49">-</operator> <operator pos:start="13:51" pos:end="13:51">(</operator><name pos:start="13:52" pos:end="13:61"><name pos:start="13:52" pos:end="13:52">f</name><operator pos:start="13:53" pos:end="13:54">-&gt;</operator><name pos:start="13:55" pos:end="13:61">version</name></name> <operator pos:start="13:63" pos:end="13:63">&gt;</operator> <literal type="number" pos:start="13:65" pos:end="13:65">1</literal><operator pos:start="13:66" pos:end="13:66">)</operator></expr>]</index><index pos:start="13:68" pos:end="13:74">[<expr pos:start="13:69" pos:end="13:73"><name pos:start="13:69" pos:end="13:73">index</name></expr>]</index></name><operator pos:start="13:75" pos:end="13:75">.</operator><name pos:start="13:76" pos:end="13:80">table</name></expr></argument>,

                               <argument pos:start="15:32" pos:end="15:50"><expr pos:start="15:32" pos:end="15:50"><name pos:start="15:32" pos:end="15:50">BLOCK_TYPE_VLC_BITS</name></expr></argument>, <argument pos:start="15:53" pos:end="15:53"><expr pos:start="15:53" pos:end="15:53"><literal type="number" pos:start="15:53" pos:end="15:53">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:58"><decl pos:start="17:5" pos:end="17:57"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">uint16_t</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:19">start</name> <init pos:start="17:21" pos:end="17:57">= <expr pos:start="17:23" pos:end="17:57"><operator pos:start="17:23" pos:end="17:23">(</operator><name pos:start="17:24" pos:end="17:31">uint16_t</name> <operator pos:start="17:33" pos:end="17:33">*</operator><operator pos:start="17:34" pos:end="17:34">)</operator><name pos:start="17:35" pos:end="17:57"><name pos:start="17:35" pos:end="17:35">f</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:49">last_picture</name><operator pos:start="17:50" pos:end="17:50">.</operator><name pos:start="17:51" pos:end="17:54">data</name><index pos:start="17:55" pos:end="17:57">[<expr pos:start="17:56" pos:end="17:56"><literal type="number" pos:start="17:56" pos:end="17:56">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:81"><decl pos:start="19:5" pos:end="19:80"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">uint16_t</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:17">end</name>   <init pos:start="19:21" pos:end="19:80">= <expr pos:start="19:23" pos:end="19:80"><name pos:start="19:23" pos:end="19:27">start</name> <operator pos:start="19:29" pos:end="19:29">+</operator> <name pos:start="19:31" pos:end="19:36">stride</name> <operator pos:start="19:38" pos:end="19:38">*</operator> <operator pos:start="19:40" pos:end="19:40">(</operator><name pos:start="19:41" pos:end="19:56"><name pos:start="19:41" pos:end="19:41">f</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:48">avctx</name><operator pos:start="19:49" pos:end="19:50">-&gt;</operator><name pos:start="19:51" pos:end="19:56">height</name></name> <operator pos:start="19:58" pos:end="19:58">-</operator> <name pos:start="19:60" pos:end="19:60">h</name> <operator pos:start="19:62" pos:end="19:62">+</operator> <literal type="number" pos:start="19:64" pos:end="19:64">1</literal><operator pos:start="19:65" pos:end="19:65">)</operator> <operator pos:start="19:67" pos:end="19:67">-</operator> <operator pos:start="19:69" pos:end="19:69">(</operator><literal type="number" pos:start="19:70" pos:end="19:70">1</literal> <operator pos:start="19:72" pos:end="19:73">&lt;&lt;</operator> <name pos:start="19:75" pos:end="19:79">log2w</name><operator pos:start="19:80" pos:end="19:80">)</operator></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:39"><expr pos:start="23:5" pos:end="23:38"><call pos:start="23:5" pos:end="23:38"><name pos:start="23:5" pos:end="23:14">av_assert2</name><argument_list pos:start="23:15" pos:end="23:38">(<argument pos:start="23:16" pos:end="23:37"><expr pos:start="23:16" pos:end="23:37"><name pos:start="23:16" pos:end="23:19">code</name> <operator pos:start="23:21" pos:end="23:22">&gt;=</operator> <literal type="number" pos:start="23:24" pos:end="23:24">0</literal> <operator pos:start="23:26" pos:end="23:27">&amp;&amp;</operator> <name pos:start="23:29" pos:end="23:32">code</name> <operator pos:start="23:34" pos:end="23:35">&lt;=</operator> <literal type="number" pos:start="23:37" pos:end="23:37">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="139:5"><if pos:start="27:5" pos:end="49:5">if <condition pos:start="27:8" pos:end="27:18">(<expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:12">code</name> <operator pos:start="27:14" pos:end="27:15">==</operator> <literal type="number" pos:start="27:17" pos:end="27:17">0</literal></expr>)</condition> <block pos:start="27:20" pos:end="49:5">{<block_content pos:start="29:9" pos:end="47:47">

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:50">(<expr pos:start="29:13" pos:end="29:49"><call pos:start="29:13" pos:end="29:45"><name pos:start="29:13" pos:end="29:38">bytestream2_get_bytes_left</name><argument_list pos:start="29:39" pos:end="29:45">(<argument pos:start="29:40" pos:end="29:44"><expr pos:start="29:40" pos:end="29:44"><operator pos:start="29:40" pos:end="29:40">&amp;</operator><name pos:start="29:41" pos:end="29:44"><name pos:start="29:41" pos:end="29:41">f</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:44">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:47" pos:end="29:47">&lt;</operator> <literal type="number" pos:start="29:49" pos:end="29:49">1</literal></expr>)</condition> <block pos:start="29:52" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:19">

            <expr_stmt pos:start="31:13" pos:end="31:68"><expr pos:start="31:13" pos:end="31:67"><call pos:start="31:13" pos:end="31:67"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="31:67">(<argument pos:start="31:20" pos:end="31:27"><expr pos:start="31:20" pos:end="31:27"><name pos:start="31:20" pos:end="31:27"><name pos:start="31:20" pos:end="31:20">f</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:27">avctx</name></name></expr></argument>, <argument pos:start="31:30" pos:end="31:41"><expr pos:start="31:30" pos:end="31:41"><name pos:start="31:30" pos:end="31:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:44" pos:end="31:66"><expr pos:start="31:44" pos:end="31:66"><literal type="string" pos:start="31:44" pos:end="31:66">"bytestream overread\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:51"><expr pos:start="37:9" pos:end="37:50"><name pos:start="37:9" pos:end="37:11">src</name> <operator pos:start="37:13" pos:end="37:14">+=</operator> <name pos:start="37:16" pos:end="37:50"><name pos:start="37:16" pos:end="37:16">f</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:20">mv</name><index pos:start="37:21" pos:end="37:50">[<expr pos:start="37:22" pos:end="37:49"><call pos:start="37:22" pos:end="37:49"><name pos:start="37:22" pos:end="37:42">bytestream2_get_byteu</name><argument_list pos:start="37:43" pos:end="37:49">(<argument pos:start="37:44" pos:end="37:48"><expr pos:start="37:44" pos:end="37:48"><operator pos:start="37:44" pos:end="37:44">&amp;</operator><name pos:start="37:45" pos:end="37:48"><name pos:start="37:45" pos:end="37:45">f</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:48">g</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:37">(<expr pos:start="39:13" pos:end="39:36"><name pos:start="39:13" pos:end="39:17">start</name> <operator pos:start="39:19" pos:end="39:19">&gt;</operator> <name pos:start="39:21" pos:end="39:23">src</name> <operator pos:start="39:25" pos:end="39:26">||</operator> <name pos:start="39:28" pos:end="39:30">src</name> <operator pos:start="39:32" pos:end="39:32">&gt;</operator> <name pos:start="39:34" pos:end="39:36">end</name></expr>)</condition> <block pos:start="39:39" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:19">

            <expr_stmt pos:start="41:13" pos:end="41:62"><expr pos:start="41:13" pos:end="41:61"><call pos:start="41:13" pos:end="41:61"><name pos:start="41:13" pos:end="41:18">av_log</name><argument_list pos:start="41:19" pos:end="41:61">(<argument pos:start="41:20" pos:end="41:27"><expr pos:start="41:20" pos:end="41:27"><name pos:start="41:20" pos:end="41:27"><name pos:start="41:20" pos:end="41:20">f</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:27">avctx</name></name></expr></argument>, <argument pos:start="41:30" pos:end="41:41"><expr pos:start="41:30" pos:end="41:41"><name pos:start="41:30" pos:end="41:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:44" pos:end="41:60"><expr pos:start="41:44" pos:end="41:60"><literal type="string" pos:start="41:44" pos:end="41:60">"mv out of pic\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="43:13" pos:end="43:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:47"><expr pos:start="47:9" pos:end="47:46"><call pos:start="47:9" pos:end="47:46"><name pos:start="47:9" pos:end="47:12">mcdc</name><argument_list pos:start="47:13" pos:end="47:46">(<argument pos:start="47:14" pos:end="47:16"><expr pos:start="47:14" pos:end="47:16"><name pos:start="47:14" pos:end="47:16">dst</name></expr></argument>, <argument pos:start="47:19" pos:end="47:21"><expr pos:start="47:19" pos:end="47:21"><name pos:start="47:19" pos:end="47:21">src</name></expr></argument>, <argument pos:start="47:24" pos:end="47:28"><expr pos:start="47:24" pos:end="47:28"><name pos:start="47:24" pos:end="47:28">log2w</name></expr></argument>, <argument pos:start="47:31" pos:end="47:31"><expr pos:start="47:31" pos:end="47:31"><name pos:start="47:31" pos:end="47:31">h</name></expr></argument>, <argument pos:start="47:34" pos:end="47:39"><expr pos:start="47:34" pos:end="47:39"><name pos:start="47:34" pos:end="47:39">stride</name></expr></argument>, <argument pos:start="47:42" pos:end="47:42"><expr pos:start="47:42" pos:end="47:42"><literal type="number" pos:start="47:42" pos:end="47:42">1</literal></expr></argument>, <argument pos:start="47:45" pos:end="47:45"><expr pos:start="47:45" pos:end="47:45"><literal type="number" pos:start="47:45" pos:end="47:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="49:7" pos:end="59:5">else if <condition pos:start="49:15" pos:end="49:25">(<expr pos:start="49:16" pos:end="49:24"><name pos:start="49:16" pos:end="49:19">code</name> <operator pos:start="49:21" pos:end="49:22">==</operator> <literal type="number" pos:start="49:24" pos:end="49:24">1</literal></expr>)</condition> <block pos:start="49:27" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:73">

        <expr_stmt pos:start="51:9" pos:end="51:16"><expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:13">log2h</name><operator pos:start="51:14" pos:end="51:15">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:58"><expr pos:start="53:9" pos:end="53:57"><call pos:start="53:9" pos:end="53:57"><name pos:start="53:9" pos:end="53:22">decode_p_block</name><argument_list pos:start="53:23" pos:end="53:57">(<argument pos:start="53:24" pos:end="53:24"><expr pos:start="53:24" pos:end="53:24"><name pos:start="53:24" pos:end="53:24">f</name></expr></argument>, <argument pos:start="53:27" pos:end="53:29"><expr pos:start="53:27" pos:end="53:29"><name pos:start="53:27" pos:end="53:29">dst</name></expr></argument>, <argument pos:start="53:32" pos:end="53:34"><expr pos:start="53:32" pos:end="53:34"><name pos:start="53:32" pos:end="53:34">src</name></expr></argument>, <argument pos:start="53:37" pos:end="53:41"><expr pos:start="53:37" pos:end="53:41"><name pos:start="53:37" pos:end="53:41">log2w</name></expr></argument>, <argument pos:start="53:44" pos:end="53:48"><expr pos:start="53:44" pos:end="53:48"><name pos:start="53:44" pos:end="53:48">log2h</name></expr></argument>, <argument pos:start="53:51" pos:end="53:56"><expr pos:start="53:51" pos:end="53:56"><name pos:start="53:51" pos:end="53:56">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="57:73"><expr pos:start="55:9" pos:end="57:72"><call pos:start="55:9" pos:end="57:72"><name pos:start="55:9" pos:end="55:22">decode_p_block</name><argument_list pos:start="55:23" pos:end="57:72">(<argument pos:start="55:24" pos:end="55:24"><expr pos:start="55:24" pos:end="55:24"><name pos:start="55:24" pos:end="55:24">f</name></expr></argument>, <argument pos:start="55:27" pos:end="55:49"><expr pos:start="55:27" pos:end="55:49"><name pos:start="55:27" pos:end="55:29">dst</name> <operator pos:start="55:31" pos:end="55:31">+</operator> <operator pos:start="55:33" pos:end="55:33">(</operator><name pos:start="55:34" pos:end="55:39">stride</name> <operator pos:start="55:41" pos:end="55:42">&lt;&lt;</operator> <name pos:start="55:44" pos:end="55:48">log2h</name><operator pos:start="55:49" pos:end="55:49">)</operator></expr></argument>,

                          <argument pos:start="57:27" pos:end="57:49"><expr pos:start="57:27" pos:end="57:49"><name pos:start="57:27" pos:end="57:29">src</name> <operator pos:start="57:31" pos:end="57:31">+</operator> <operator pos:start="57:33" pos:end="57:33">(</operator><name pos:start="57:34" pos:end="57:39">stride</name> <operator pos:start="57:41" pos:end="57:42">&lt;&lt;</operator> <name pos:start="57:44" pos:end="57:48">log2h</name><operator pos:start="57:49" pos:end="57:49">)</operator></expr></argument>, <argument pos:start="57:52" pos:end="57:56"><expr pos:start="57:52" pos:end="57:56"><name pos:start="57:52" pos:end="57:56">log2w</name></expr></argument>, <argument pos:start="57:59" pos:end="57:63"><expr pos:start="57:59" pos:end="57:63"><name pos:start="57:59" pos:end="57:63">log2h</name></expr></argument>, <argument pos:start="57:66" pos:end="57:71"><expr pos:start="57:66" pos:end="57:71"><name pos:start="57:66" pos:end="57:71">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="59:7" pos:end="69:5">else if <condition pos:start="59:15" pos:end="59:25">(<expr pos:start="59:16" pos:end="59:24"><name pos:start="59:16" pos:end="59:19">code</name> <operator pos:start="59:21" pos:end="59:22">==</operator> <literal type="number" pos:start="59:24" pos:end="59:24">2</literal></expr>)</condition> <block pos:start="59:27" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:68">

        <expr_stmt pos:start="61:9" pos:end="61:16"><expr pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:13">log2w</name><operator pos:start="61:14" pos:end="61:15">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:59"><expr pos:start="63:9" pos:end="63:58"><call pos:start="63:9" pos:end="63:58"><name pos:start="63:9" pos:end="63:22">decode_p_block</name><argument_list pos:start="63:23" pos:end="63:58">(<argument pos:start="63:24" pos:end="63:24"><expr pos:start="63:24" pos:end="63:24"><name pos:start="63:24" pos:end="63:24">f</name></expr></argument>, <argument pos:start="63:27" pos:end="63:29"><expr pos:start="63:27" pos:end="63:29"><name pos:start="63:27" pos:end="63:29">dst</name></expr></argument> , <argument pos:start="63:33" pos:end="63:35"><expr pos:start="63:33" pos:end="63:35"><name pos:start="63:33" pos:end="63:35">src</name></expr></argument>, <argument pos:start="63:38" pos:end="63:42"><expr pos:start="63:38" pos:end="63:42"><name pos:start="63:38" pos:end="63:42">log2w</name></expr></argument>, <argument pos:start="63:45" pos:end="63:49"><expr pos:start="63:45" pos:end="63:49"><name pos:start="63:45" pos:end="63:49">log2h</name></expr></argument>, <argument pos:start="63:52" pos:end="63:57"><expr pos:start="63:52" pos:end="63:57"><name pos:start="63:52" pos:end="63:57">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="67:68"><expr pos:start="65:9" pos:end="67:67"><call pos:start="65:9" pos:end="67:67"><name pos:start="65:9" pos:end="65:22">decode_p_block</name><argument_list pos:start="65:23" pos:end="67:67">(<argument pos:start="65:24" pos:end="65:24"><expr pos:start="65:24" pos:end="65:24"><name pos:start="65:24" pos:end="65:24">f</name></expr></argument>, <argument pos:start="65:27" pos:end="65:44"><expr pos:start="65:27" pos:end="65:44"><name pos:start="65:27" pos:end="65:29">dst</name> <operator pos:start="65:31" pos:end="65:31">+</operator> <operator pos:start="65:33" pos:end="65:33">(</operator><literal type="number" pos:start="65:34" pos:end="65:34">1</literal> <operator pos:start="65:36" pos:end="65:37">&lt;&lt;</operator> <name pos:start="65:39" pos:end="65:43">log2w</name><operator pos:start="65:44" pos:end="65:44">)</operator></expr></argument>,

                          <argument pos:start="67:27" pos:end="67:44"><expr pos:start="67:27" pos:end="67:44"><name pos:start="67:27" pos:end="67:29">src</name> <operator pos:start="67:31" pos:end="67:31">+</operator> <operator pos:start="67:33" pos:end="67:33">(</operator><literal type="number" pos:start="67:34" pos:end="67:34">1</literal> <operator pos:start="67:36" pos:end="67:37">&lt;&lt;</operator> <name pos:start="67:39" pos:end="67:43">log2w</name><operator pos:start="67:44" pos:end="67:44">)</operator></expr></argument>, <argument pos:start="67:47" pos:end="67:51"><expr pos:start="67:47" pos:end="67:51"><name pos:start="67:47" pos:end="67:51">log2w</name></expr></argument>, <argument pos:start="67:54" pos:end="67:58"><expr pos:start="67:54" pos:end="67:58"><name pos:start="67:54" pos:end="67:58">log2h</name></expr></argument>, <argument pos:start="67:61" pos:end="67:66"><expr pos:start="67:61" pos:end="67:66"><name pos:start="67:61" pos:end="67:66">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="69:7" pos:end="73:5">else if <condition pos:start="69:15" pos:end="69:43">(<expr pos:start="69:16" pos:end="69:42"><name pos:start="69:16" pos:end="69:19">code</name> <operator pos:start="69:21" pos:end="69:22">==</operator> <literal type="number" pos:start="69:24" pos:end="69:24">3</literal> <operator pos:start="69:26" pos:end="69:27">&amp;&amp;</operator> <name pos:start="69:29" pos:end="69:38"><name pos:start="69:29" pos:end="69:29">f</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:38">version</name></name> <operator pos:start="69:40" pos:end="69:40">&lt;</operator> <literal type="number" pos:start="69:42" pos:end="69:42">2</literal></expr>)</condition> <block pos:start="69:45" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:47">

        <expr_stmt pos:start="71:9" pos:end="71:47"><expr pos:start="71:9" pos:end="71:46"><call pos:start="71:9" pos:end="71:46"><name pos:start="71:9" pos:end="71:12">mcdc</name><argument_list pos:start="71:13" pos:end="71:46">(<argument pos:start="71:14" pos:end="71:16"><expr pos:start="71:14" pos:end="71:16"><name pos:start="71:14" pos:end="71:16">dst</name></expr></argument>, <argument pos:start="71:19" pos:end="71:21"><expr pos:start="71:19" pos:end="71:21"><name pos:start="71:19" pos:end="71:21">src</name></expr></argument>, <argument pos:start="71:24" pos:end="71:28"><expr pos:start="71:24" pos:end="71:28"><name pos:start="71:24" pos:end="71:28">log2w</name></expr></argument>, <argument pos:start="71:31" pos:end="71:31"><expr pos:start="71:31" pos:end="71:31"><name pos:start="71:31" pos:end="71:31">h</name></expr></argument>, <argument pos:start="71:34" pos:end="71:39"><expr pos:start="71:34" pos:end="71:39"><name pos:start="71:34" pos:end="71:39">stride</name></expr></argument>, <argument pos:start="71:42" pos:end="71:42"><expr pos:start="71:42" pos:end="71:42"><literal type="number" pos:start="71:42" pos:end="71:42">1</literal></expr></argument>, <argument pos:start="71:45" pos:end="71:45"><expr pos:start="71:45" pos:end="71:45"><literal type="number" pos:start="71:45" pos:end="71:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="73:7" pos:end="103:5">else if <condition pos:start="73:15" pos:end="73:25">(<expr pos:start="73:16" pos:end="73:24"><name pos:start="73:16" pos:end="73:19">code</name> <operator pos:start="73:21" pos:end="73:22">==</operator> <literal type="number" pos:start="73:24" pos:end="73:24">4</literal></expr>)</condition> <block pos:start="73:27" pos:end="103:5">{<block_content pos:start="75:9" pos:end="101:75">

        <if_stmt pos:start="75:9" pos:end="81:9"><if pos:start="75:9" pos:end="81:9">if <condition pos:start="75:12" pos:end="75:50">(<expr pos:start="75:13" pos:end="75:49"><call pos:start="75:13" pos:end="75:45"><name pos:start="75:13" pos:end="75:38">bytestream2_get_bytes_left</name><argument_list pos:start="75:39" pos:end="75:45">(<argument pos:start="75:40" pos:end="75:44"><expr pos:start="75:40" pos:end="75:44"><operator pos:start="75:40" pos:end="75:40">&amp;</operator><name pos:start="75:41" pos:end="75:44"><name pos:start="75:41" pos:end="75:41">f</name><operator pos:start="75:42" pos:end="75:43">-&gt;</operator><name pos:start="75:44" pos:end="75:44">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="75:47" pos:end="75:47">&lt;</operator> <literal type="number" pos:start="75:49" pos:end="75:49">1</literal></expr>)</condition> <block pos:start="75:52" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:19">

            <expr_stmt pos:start="77:13" pos:end="77:68"><expr pos:start="77:13" pos:end="77:67"><call pos:start="77:13" pos:end="77:67"><name pos:start="77:13" pos:end="77:18">av_log</name><argument_list pos:start="77:19" pos:end="77:67">(<argument pos:start="77:20" pos:end="77:27"><expr pos:start="77:20" pos:end="77:27"><name pos:start="77:20" pos:end="77:27"><name pos:start="77:20" pos:end="77:20">f</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:27">avctx</name></name></expr></argument>, <argument pos:start="77:30" pos:end="77:41"><expr pos:start="77:30" pos:end="77:41"><name pos:start="77:30" pos:end="77:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:44" pos:end="77:66"><expr pos:start="77:44" pos:end="77:66"><literal type="string" pos:start="77:44" pos:end="77:66">"bytestream overread\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:51"><expr pos:start="83:9" pos:end="83:50"><name pos:start="83:9" pos:end="83:11">src</name> <operator pos:start="83:13" pos:end="83:14">+=</operator> <name pos:start="83:16" pos:end="83:50"><name pos:start="83:16" pos:end="83:16">f</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:20">mv</name><index pos:start="83:21" pos:end="83:50">[<expr pos:start="83:22" pos:end="83:49"><call pos:start="83:22" pos:end="83:49"><name pos:start="83:22" pos:end="83:42">bytestream2_get_byteu</name><argument_list pos:start="83:43" pos:end="83:49">(<argument pos:start="83:44" pos:end="83:48"><expr pos:start="83:44" pos:end="83:48"><operator pos:start="83:44" pos:end="83:44">&amp;</operator><name pos:start="83:45" pos:end="83:48"><name pos:start="83:45" pos:end="83:45">f</name><operator pos:start="83:46" pos:end="83:47">-&gt;</operator><name pos:start="83:48" pos:end="83:48">g</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="91:9"><if pos:start="85:9" pos:end="91:9">if <condition pos:start="85:12" pos:end="85:37">(<expr pos:start="85:13" pos:end="85:36"><name pos:start="85:13" pos:end="85:17">start</name> <operator pos:start="85:19" pos:end="85:19">&gt;</operator> <name pos:start="85:21" pos:end="85:23">src</name> <operator pos:start="85:25" pos:end="85:26">||</operator> <name pos:start="85:28" pos:end="85:30">src</name> <operator pos:start="85:32" pos:end="85:32">&gt;</operator> <name pos:start="85:34" pos:end="85:36">end</name></expr>)</condition> <block pos:start="85:39" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:19">

            <expr_stmt pos:start="87:13" pos:end="87:62"><expr pos:start="87:13" pos:end="87:61"><call pos:start="87:13" pos:end="87:61"><name pos:start="87:13" pos:end="87:18">av_log</name><argument_list pos:start="87:19" pos:end="87:61">(<argument pos:start="87:20" pos:end="87:27"><expr pos:start="87:20" pos:end="87:27"><name pos:start="87:20" pos:end="87:27"><name pos:start="87:20" pos:end="87:20">f</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:27">avctx</name></name></expr></argument>, <argument pos:start="87:30" pos:end="87:41"><expr pos:start="87:30" pos:end="87:41"><name pos:start="87:30" pos:end="87:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:44" pos:end="87:60"><expr pos:start="87:44" pos:end="87:60"><literal type="string" pos:start="87:44" pos:end="87:60">"mv out of pic\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="89:13" pos:end="89:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="93:9" pos:end="99:9"><if pos:start="93:9" pos:end="99:9">if <condition pos:start="93:12" pos:end="93:50">(<expr pos:start="93:13" pos:end="93:49"><call pos:start="93:13" pos:end="93:45"><name pos:start="93:13" pos:end="93:38">bytestream2_get_bytes_left</name><argument_list pos:start="93:39" pos:end="93:45">(<argument pos:start="93:40" pos:end="93:44"><expr pos:start="93:40" pos:end="93:44"><operator pos:start="93:40" pos:end="93:40">&amp;</operator><name pos:start="93:41" pos:end="93:44"><name pos:start="93:41" pos:end="93:41">f</name><operator pos:start="93:42" pos:end="93:43">-&gt;</operator><name pos:start="93:44" pos:end="93:44">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="93:47" pos:end="93:47">&lt;</operator> <literal type="number" pos:start="93:49" pos:end="93:49">2</literal></expr>)</condition><block pos:start="93:51" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:19">

            <expr_stmt pos:start="95:13" pos:end="95:68"><expr pos:start="95:13" pos:end="95:67"><call pos:start="95:13" pos:end="95:67"><name pos:start="95:13" pos:end="95:18">av_log</name><argument_list pos:start="95:19" pos:end="95:67">(<argument pos:start="95:20" pos:end="95:27"><expr pos:start="95:20" pos:end="95:27"><name pos:start="95:20" pos:end="95:27"><name pos:start="95:20" pos:end="95:20">f</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:27">avctx</name></name></expr></argument>, <argument pos:start="95:30" pos:end="95:41"><expr pos:start="95:30" pos:end="95:41"><name pos:start="95:30" pos:end="95:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="95:44" pos:end="95:66"><expr pos:start="95:44" pos:end="95:66"><literal type="string" pos:start="95:44" pos:end="95:66">"wordstream overread\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="97:13" pos:end="97:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:75"><expr pos:start="101:9" pos:end="101:74"><call pos:start="101:9" pos:end="101:74"><name pos:start="101:9" pos:end="101:12">mcdc</name><argument_list pos:start="101:13" pos:end="101:74">(<argument pos:start="101:14" pos:end="101:16"><expr pos:start="101:14" pos:end="101:16"><name pos:start="101:14" pos:end="101:16">dst</name></expr></argument>, <argument pos:start="101:19" pos:end="101:21"><expr pos:start="101:19" pos:end="101:21"><name pos:start="101:19" pos:end="101:21">src</name></expr></argument>, <argument pos:start="101:24" pos:end="101:28"><expr pos:start="101:24" pos:end="101:28"><name pos:start="101:24" pos:end="101:28">log2w</name></expr></argument>, <argument pos:start="101:31" pos:end="101:31"><expr pos:start="101:31" pos:end="101:31"><name pos:start="101:31" pos:end="101:31">h</name></expr></argument>, <argument pos:start="101:34" pos:end="101:39"><expr pos:start="101:34" pos:end="101:39"><name pos:start="101:34" pos:end="101:39">stride</name></expr></argument>, <argument pos:start="101:42" pos:end="101:42"><expr pos:start="101:42" pos:end="101:42"><literal type="number" pos:start="101:42" pos:end="101:42">1</literal></expr></argument>, <argument pos:start="101:45" pos:end="101:73"><expr pos:start="101:45" pos:end="101:73"><call pos:start="101:45" pos:end="101:73"><name pos:start="101:45" pos:end="101:65">bytestream2_get_le16u</name><argument_list pos:start="101:66" pos:end="101:73">(<argument pos:start="101:67" pos:end="101:72"><expr pos:start="101:67" pos:end="101:72"><operator pos:start="101:67" pos:end="101:67">&amp;</operator><name pos:start="101:68" pos:end="101:72"><name pos:start="101:68" pos:end="101:68">f</name><operator pos:start="101:69" pos:end="101:70">-&gt;</operator><name pos:start="101:71" pos:end="101:72">g2</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="103:7" pos:end="115:5">else if <condition pos:start="103:15" pos:end="103:25">(<expr pos:start="103:16" pos:end="103:24"><name pos:start="103:16" pos:end="103:19">code</name> <operator pos:start="103:21" pos:end="103:22">==</operator> <literal type="number" pos:start="103:24" pos:end="103:24">5</literal></expr>)</condition> <block pos:start="103:27" pos:end="115:5">{<block_content pos:start="105:9" pos:end="113:75">

        <if_stmt pos:start="105:9" pos:end="111:9"><if pos:start="105:9" pos:end="111:9">if <condition pos:start="105:12" pos:end="105:50">(<expr pos:start="105:13" pos:end="105:49"><call pos:start="105:13" pos:end="105:45"><name pos:start="105:13" pos:end="105:38">bytestream2_get_bytes_left</name><argument_list pos:start="105:39" pos:end="105:45">(<argument pos:start="105:40" pos:end="105:44"><expr pos:start="105:40" pos:end="105:44"><operator pos:start="105:40" pos:end="105:40">&amp;</operator><name pos:start="105:41" pos:end="105:44"><name pos:start="105:41" pos:end="105:41">f</name><operator pos:start="105:42" pos:end="105:43">-&gt;</operator><name pos:start="105:44" pos:end="105:44">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="105:47" pos:end="105:47">&lt;</operator> <literal type="number" pos:start="105:49" pos:end="105:49">2</literal></expr>)</condition> <block pos:start="105:52" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:19">

            <expr_stmt pos:start="107:13" pos:end="107:68"><expr pos:start="107:13" pos:end="107:67"><call pos:start="107:13" pos:end="107:67"><name pos:start="107:13" pos:end="107:18">av_log</name><argument_list pos:start="107:19" pos:end="107:67">(<argument pos:start="107:20" pos:end="107:27"><expr pos:start="107:20" pos:end="107:27"><name pos:start="107:20" pos:end="107:27"><name pos:start="107:20" pos:end="107:20">f</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:27">avctx</name></name></expr></argument>, <argument pos:start="107:30" pos:end="107:41"><expr pos:start="107:30" pos:end="107:41"><name pos:start="107:30" pos:end="107:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:44" pos:end="107:66"><expr pos:start="107:44" pos:end="107:66"><literal type="string" pos:start="107:44" pos:end="107:66">"wordstream overread\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="109:13" pos:end="109:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:75"><expr pos:start="113:9" pos:end="113:74"><call pos:start="113:9" pos:end="113:74"><name pos:start="113:9" pos:end="113:12">mcdc</name><argument_list pos:start="113:13" pos:end="113:74">(<argument pos:start="113:14" pos:end="113:16"><expr pos:start="113:14" pos:end="113:16"><name pos:start="113:14" pos:end="113:16">dst</name></expr></argument>, <argument pos:start="113:19" pos:end="113:21"><expr pos:start="113:19" pos:end="113:21"><name pos:start="113:19" pos:end="113:21">src</name></expr></argument>, <argument pos:start="113:24" pos:end="113:28"><expr pos:start="113:24" pos:end="113:28"><name pos:start="113:24" pos:end="113:28">log2w</name></expr></argument>, <argument pos:start="113:31" pos:end="113:31"><expr pos:start="113:31" pos:end="113:31"><name pos:start="113:31" pos:end="113:31">h</name></expr></argument>, <argument pos:start="113:34" pos:end="113:39"><expr pos:start="113:34" pos:end="113:39"><name pos:start="113:34" pos:end="113:39">stride</name></expr></argument>, <argument pos:start="113:42" pos:end="113:42"><expr pos:start="113:42" pos:end="113:42"><literal type="number" pos:start="113:42" pos:end="113:42">0</literal></expr></argument>, <argument pos:start="113:45" pos:end="113:73"><expr pos:start="113:45" pos:end="113:73"><call pos:start="113:45" pos:end="113:73"><name pos:start="113:45" pos:end="113:65">bytestream2_get_le16u</name><argument_list pos:start="113:66" pos:end="113:73">(<argument pos:start="113:67" pos:end="113:72"><expr pos:start="113:67" pos:end="113:72"><operator pos:start="113:67" pos:end="113:67">&amp;</operator><name pos:start="113:68" pos:end="113:72"><name pos:start="113:68" pos:end="113:68">f</name><operator pos:start="113:69" pos:end="113:70">-&gt;</operator><name pos:start="113:71" pos:end="113:72">g2</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="115:7" pos:end="139:5">else if <condition pos:start="115:15" pos:end="115:25">(<expr pos:start="115:16" pos:end="115:24"><name pos:start="115:16" pos:end="115:19">code</name> <operator pos:start="115:21" pos:end="115:22">==</operator> <literal type="number" pos:start="115:24" pos:end="115:24">6</literal></expr>)</condition> <block pos:start="115:27" pos:end="139:5">{<block_content pos:start="117:9" pos:end="137:9">

        <if_stmt pos:start="117:9" pos:end="123:9"><if pos:start="117:9" pos:end="123:9">if <condition pos:start="117:12" pos:end="117:50">(<expr pos:start="117:13" pos:end="117:49"><call pos:start="117:13" pos:end="117:45"><name pos:start="117:13" pos:end="117:38">bytestream2_get_bytes_left</name><argument_list pos:start="117:39" pos:end="117:45">(<argument pos:start="117:40" pos:end="117:44"><expr pos:start="117:40" pos:end="117:44"><operator pos:start="117:40" pos:end="117:40">&amp;</operator><name pos:start="117:41" pos:end="117:44"><name pos:start="117:41" pos:end="117:41">f</name><operator pos:start="117:42" pos:end="117:43">-&gt;</operator><name pos:start="117:44" pos:end="117:44">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="117:47" pos:end="117:47">&lt;</operator> <literal type="number" pos:start="117:49" pos:end="117:49">4</literal></expr>)</condition> <block pos:start="117:52" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:19">

            <expr_stmt pos:start="119:13" pos:end="119:68"><expr pos:start="119:13" pos:end="119:67"><call pos:start="119:13" pos:end="119:67"><name pos:start="119:13" pos:end="119:18">av_log</name><argument_list pos:start="119:19" pos:end="119:67">(<argument pos:start="119:20" pos:end="119:27"><expr pos:start="119:20" pos:end="119:27"><name pos:start="119:20" pos:end="119:27"><name pos:start="119:20" pos:end="119:20">f</name><operator pos:start="119:21" pos:end="119:22">-&gt;</operator><name pos:start="119:23" pos:end="119:27">avctx</name></name></expr></argument>, <argument pos:start="119:30" pos:end="119:41"><expr pos:start="119:30" pos:end="119:41"><name pos:start="119:30" pos:end="119:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:44" pos:end="119:66"><expr pos:start="119:44" pos:end="119:66"><literal type="string" pos:start="119:44" pos:end="119:66">"wordstream overread\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="121:13" pos:end="121:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="125:9" pos:end="137:9"><if pos:start="125:9" pos:end="131:9">if <condition pos:start="125:12" pos:end="125:18">(<expr pos:start="125:13" pos:end="125:17"><name pos:start="125:13" pos:end="125:17">log2w</name></expr>)</condition> <block pos:start="125:20" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:56">

            <expr_stmt pos:start="127:13" pos:end="127:56"><expr pos:start="127:13" pos:end="127:55"><name pos:start="127:13" pos:end="127:18"><name pos:start="127:13" pos:end="127:15">dst</name><index pos:start="127:16" pos:end="127:18">[<expr pos:start="127:17" pos:end="127:17"><literal type="number" pos:start="127:17" pos:end="127:17">0</literal></expr>]</index></name>      <operator pos:start="127:25" pos:end="127:25">=</operator> <call pos:start="127:27" pos:end="127:55"><name pos:start="127:27" pos:end="127:47">bytestream2_get_le16u</name><argument_list pos:start="127:48" pos:end="127:55">(<argument pos:start="127:49" pos:end="127:54"><expr pos:start="127:49" pos:end="127:54"><operator pos:start="127:49" pos:end="127:49">&amp;</operator><name pos:start="127:50" pos:end="127:54"><name pos:start="127:50" pos:end="127:50">f</name><operator pos:start="127:51" pos:end="127:52">-&gt;</operator><name pos:start="127:53" pos:end="127:54">g2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:56"><expr pos:start="129:13" pos:end="129:55"><name pos:start="129:13" pos:end="129:18"><name pos:start="129:13" pos:end="129:15">dst</name><index pos:start="129:16" pos:end="129:18">[<expr pos:start="129:17" pos:end="129:17"><literal type="number" pos:start="129:17" pos:end="129:17">1</literal></expr>]</index></name>      <operator pos:start="129:25" pos:end="129:25">=</operator> <call pos:start="129:27" pos:end="129:55"><name pos:start="129:27" pos:end="129:47">bytestream2_get_le16u</name><argument_list pos:start="129:48" pos:end="129:55">(<argument pos:start="129:49" pos:end="129:54"><expr pos:start="129:49" pos:end="129:54"><operator pos:start="129:49" pos:end="129:49">&amp;</operator><name pos:start="129:50" pos:end="129:54"><name pos:start="129:50" pos:end="129:50">f</name><operator pos:start="129:51" pos:end="129:52">-&gt;</operator><name pos:start="129:53" pos:end="129:54">g2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="131:11" pos:end="137:9">else <block pos:start="131:16" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:56">

            <expr_stmt pos:start="133:13" pos:end="133:56"><expr pos:start="133:13" pos:end="133:55"><name pos:start="133:13" pos:end="133:18"><name pos:start="133:13" pos:end="133:15">dst</name><index pos:start="133:16" pos:end="133:18">[<expr pos:start="133:17" pos:end="133:17"><literal type="number" pos:start="133:17" pos:end="133:17">0</literal></expr>]</index></name>      <operator pos:start="133:25" pos:end="133:25">=</operator> <call pos:start="133:27" pos:end="133:55"><name pos:start="133:27" pos:end="133:47">bytestream2_get_le16u</name><argument_list pos:start="133:48" pos:end="133:55">(<argument pos:start="133:49" pos:end="133:54"><expr pos:start="133:49" pos:end="133:54"><operator pos:start="133:49" pos:end="133:49">&amp;</operator><name pos:start="133:50" pos:end="133:54"><name pos:start="133:50" pos:end="133:50">f</name><operator pos:start="133:51" pos:end="133:52">-&gt;</operator><name pos:start="133:53" pos:end="133:54">g2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:56"><expr pos:start="135:13" pos:end="135:55"><name pos:start="135:13" pos:end="135:23"><name pos:start="135:13" pos:end="135:15">dst</name><index pos:start="135:16" pos:end="135:23">[<expr pos:start="135:17" pos:end="135:22"><name pos:start="135:17" pos:end="135:22">stride</name></expr>]</index></name> <operator pos:start="135:25" pos:end="135:25">=</operator> <call pos:start="135:27" pos:end="135:55"><name pos:start="135:27" pos:end="135:47">bytestream2_get_le16u</name><argument_list pos:start="135:48" pos:end="135:55">(<argument pos:start="135:49" pos:end="135:54"><expr pos:start="135:49" pos:end="135:54"><operator pos:start="135:49" pos:end="135:49">&amp;</operator><name pos:start="135:50" pos:end="135:54"><name pos:start="135:50" pos:end="135:50">f</name><operator pos:start="135:51" pos:end="135:52">-&gt;</operator><name pos:start="135:53" pos:end="135:54">g2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
