<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1160.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:17">usage</name><parameter_list pos:start="1:18" pos:end="1:23">(<parameter pos:start="1:19" pos:end="1:22"><decl pos:start="1:19" pos:end="1:22"><type pos:start="1:19" pos:end="1:22"><name pos:start="1:19" pos:end="1:22">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:12">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:32"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:30"><name pos:start="5:11" pos:end="5:16">struct</name> <name pos:start="5:18" pos:end="5:30">qemu_argument</name></name> <modifier pos:start="5:32" pos:end="5:32">*</modifier></type><name pos:start="5:33" pos:end="5:39">arginfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">maxarglen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">maxenvlen</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="21:17"><expr pos:start="13:5" pos:end="21:16"><call pos:start="13:5" pos:end="21:16"><name pos:start="13:5" pos:end="13:10">printf</name><argument_list pos:start="13:11" pos:end="21:16">(<argument pos:start="13:12" pos:end="21:15"><expr pos:start="13:12" pos:end="21:15"><literal type="string" pos:start="13:12" pos:end="13:25">"usage: qemu-"</literal> <name pos:start="13:27" pos:end="13:37">TARGET_ARCH</name> <literal type="string" pos:start="13:39" pos:end="13:75">" [options] program [arguments...]\n"</literal>

           <literal type="string" pos:start="15:12" pos:end="15:46">"Linux CPU emulator (compiled for "</literal> <name pos:start="15:48" pos:end="15:58">TARGET_ARCH</name> <literal type="string" pos:start="15:60" pos:end="15:74">" emulation)\n"</literal>

           <literal type="string" pos:start="17:12" pos:end="17:15">"\n"</literal>

           <literal type="string" pos:start="19:12" pos:end="19:60">"Options and associated environment variables:\n"</literal>

           <literal type="string" pos:start="21:12" pos:end="21:15">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:13">maxarglen</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:25">maxenvlen</name> <operator pos:start="25:27" pos:end="25:27">=</operator> <literal type="number" pos:start="25:29" pos:end="25:29">0</literal></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="43:5">for <control pos:start="29:9" pos:end="29:69">(<init pos:start="29:10" pos:end="29:29"><expr pos:start="29:10" pos:end="29:28"><name pos:start="29:10" pos:end="29:16">arginfo</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:28">arg_table</name></expr>;</init> <condition pos:start="29:31" pos:end="29:58"><expr pos:start="29:31" pos:end="29:57"><name pos:start="29:31" pos:end="29:49"><name pos:start="29:31" pos:end="29:37">arginfo</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:49">handle_opt</name></name> <operator pos:start="29:51" pos:end="29:52">!=</operator> <name pos:start="29:54" pos:end="29:57">NULL</name></expr>;</condition> <incr pos:start="29:60" pos:end="29:68"><expr pos:start="29:60" pos:end="29:68"><name pos:start="29:60" pos:end="29:66">arginfo</name><operator pos:start="29:67" pos:end="29:68">++</operator></expr></incr>)</control> <block pos:start="29:71" pos:end="43:5">{<block_content pos:start="31:9" pos:end="41:9">

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:45">(<expr pos:start="31:13" pos:end="31:44"><call pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:18">strlen</name><argument_list pos:start="31:19" pos:end="31:32">(<argument pos:start="31:20" pos:end="31:31"><expr pos:start="31:20" pos:end="31:31"><name pos:start="31:20" pos:end="31:31"><name pos:start="31:20" pos:end="31:26">arginfo</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:31">env</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:34" pos:end="31:34">&gt;</operator> <name pos:start="31:36" pos:end="31:44">maxenvlen</name></expr>)</condition> <block pos:start="31:47" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:45">

            <expr_stmt pos:start="33:13" pos:end="33:45"><expr pos:start="33:13" pos:end="33:44"><name pos:start="33:13" pos:end="33:21">maxenvlen</name> <operator pos:start="33:23" pos:end="33:23">=</operator> <call pos:start="33:25" pos:end="33:44"><name pos:start="33:25" pos:end="33:30">strlen</name><argument_list pos:start="33:31" pos:end="33:44">(<argument pos:start="33:32" pos:end="33:43"><expr pos:start="33:32" pos:end="33:43"><name pos:start="33:32" pos:end="33:43"><name pos:start="33:32" pos:end="33:38">arginfo</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:43">env</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:46">(<expr pos:start="37:13" pos:end="37:45"><call pos:start="37:13" pos:end="37:33"><name pos:start="37:13" pos:end="37:18">strlen</name><argument_list pos:start="37:19" pos:end="37:33">(<argument pos:start="37:20" pos:end="37:32"><expr pos:start="37:20" pos:end="37:32"><name pos:start="37:20" pos:end="37:32"><name pos:start="37:20" pos:end="37:26">arginfo</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:32">argv</name></name></expr></argument>)</argument_list></call> <operator pos:start="37:35" pos:end="37:35">&gt;</operator> <name pos:start="37:37" pos:end="37:45">maxarglen</name></expr>)</condition> <block pos:start="37:48" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:46">

            <expr_stmt pos:start="39:13" pos:end="39:46"><expr pos:start="39:13" pos:end="39:45"><name pos:start="39:13" pos:end="39:21">maxarglen</name> <operator pos:start="39:23" pos:end="39:23">=</operator> <call pos:start="39:25" pos:end="39:45"><name pos:start="39:25" pos:end="39:30">strlen</name><argument_list pos:start="39:31" pos:end="39:45">(<argument pos:start="39:32" pos:end="39:44"><expr pos:start="39:32" pos:end="39:44"><name pos:start="39:32" pos:end="39:44"><name pos:start="39:32" pos:end="39:38">arginfo</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:44">argv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="47:5" pos:end="49:41"><expr pos:start="47:5" pos:end="49:40"><call pos:start="47:5" pos:end="49:40"><name pos:start="47:5" pos:end="47:10">printf</name><argument_list pos:start="47:11" pos:end="49:40">(<argument pos:start="47:12" pos:end="47:34"><expr pos:start="47:12" pos:end="47:34"><literal type="string" pos:start="47:12" pos:end="47:34">"%-*s%-*sDescription\n"</literal></expr></argument>, <argument pos:start="47:37" pos:end="47:47"><expr pos:start="47:37" pos:end="47:47"><name pos:start="47:37" pos:end="47:45">maxarglen</name><operator pos:start="47:46" pos:end="47:46">+</operator><literal type="number" pos:start="47:47" pos:end="47:47">3</literal></expr></argument>, <argument pos:start="47:50" pos:end="47:59"><expr pos:start="47:50" pos:end="47:59"><literal type="string" pos:start="47:50" pos:end="47:59">"Argument"</literal></expr></argument>,

            <argument pos:start="49:13" pos:end="49:23"><expr pos:start="49:13" pos:end="49:23"><name pos:start="49:13" pos:end="49:21">maxenvlen</name><operator pos:start="49:22" pos:end="49:22">+</operator><literal type="number" pos:start="49:23" pos:end="49:23">1</literal></expr></argument>, <argument pos:start="49:26" pos:end="49:39"><expr pos:start="49:26" pos:end="49:39"><literal type="string" pos:start="49:26" pos:end="49:39">"Env-variable"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="53:5" pos:end="73:5">for <control pos:start="53:9" pos:end="53:69">(<init pos:start="53:10" pos:end="53:29"><expr pos:start="53:10" pos:end="53:28"><name pos:start="53:10" pos:end="53:16">arginfo</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:28">arg_table</name></expr>;</init> <condition pos:start="53:31" pos:end="53:58"><expr pos:start="53:31" pos:end="53:57"><name pos:start="53:31" pos:end="53:49"><name pos:start="53:31" pos:end="53:37">arginfo</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:49">handle_opt</name></name> <operator pos:start="53:51" pos:end="53:52">!=</operator> <name pos:start="53:54" pos:end="53:57">NULL</name></expr>;</condition> <incr pos:start="53:60" pos:end="53:68"><expr pos:start="53:60" pos:end="53:68"><name pos:start="53:60" pos:end="53:66">arginfo</name><operator pos:start="53:67" pos:end="53:68">++</operator></expr></incr>)</control> <block pos:start="53:71" pos:end="73:5">{<block_content pos:start="55:9" pos:end="71:9">

        <if_stmt pos:start="55:9" pos:end="71:9"><if pos:start="55:9" pos:end="63:9">if <condition pos:start="55:12" pos:end="55:29">(<expr pos:start="55:13" pos:end="55:28"><name pos:start="55:13" pos:end="55:28"><name pos:start="55:13" pos:end="55:19">arginfo</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:28">has_arg</name></name></expr>)</condition> <block pos:start="55:31" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:60">

            <expr_stmt pos:start="57:13" pos:end="61:60"><expr pos:start="57:13" pos:end="61:59"><call pos:start="57:13" pos:end="61:59"><name pos:start="57:13" pos:end="57:18">printf</name><argument_list pos:start="57:19" pos:end="61:59">(<argument pos:start="57:20" pos:end="57:39"><expr pos:start="57:20" pos:end="57:39"><literal type="string" pos:start="57:20" pos:end="57:39">"-%s %-*s %-*s %s\n"</literal></expr></argument>, <argument pos:start="57:42" pos:end="57:54"><expr pos:start="57:42" pos:end="57:54"><name pos:start="57:42" pos:end="57:54"><name pos:start="57:42" pos:end="57:48">arginfo</name><operator pos:start="57:49" pos:end="57:50">-&gt;</operator><name pos:start="57:51" pos:end="57:54">argv</name></name></expr></argument>,

                    <argument pos:start="59:21" pos:end="59:58"><expr pos:start="59:21" pos:end="59:58"><operator pos:start="59:21" pos:end="59:21">(</operator><name pos:start="59:22" pos:end="59:24">int</name><operator pos:start="59:25" pos:end="59:25">)</operator><operator pos:start="59:26" pos:end="59:26">(</operator><name pos:start="59:27" pos:end="59:35">maxarglen</name><operator pos:start="59:36" pos:end="59:36">-</operator><call pos:start="59:37" pos:end="59:57"><name pos:start="59:37" pos:end="59:42">strlen</name><argument_list pos:start="59:43" pos:end="59:57">(<argument pos:start="59:44" pos:end="59:56"><expr pos:start="59:44" pos:end="59:56"><name pos:start="59:44" pos:end="59:56"><name pos:start="59:44" pos:end="59:50">arginfo</name><operator pos:start="59:51" pos:end="59:52">-&gt;</operator><name pos:start="59:53" pos:end="59:56">argv</name></name></expr></argument>)</argument_list></call><operator pos:start="59:58" pos:end="59:58">)</operator></expr></argument>, <argument pos:start="59:61" pos:end="59:76"><expr pos:start="59:61" pos:end="59:76"><name pos:start="59:61" pos:end="59:76"><name pos:start="59:61" pos:end="59:67">arginfo</name><operator pos:start="59:68" pos:end="59:69">-&gt;</operator><name pos:start="59:70" pos:end="59:76">example</name></name></expr></argument>,

                    <argument pos:start="61:21" pos:end="61:29"><expr pos:start="61:21" pos:end="61:29"><name pos:start="61:21" pos:end="61:29">maxenvlen</name></expr></argument>, <argument pos:start="61:32" pos:end="61:43"><expr pos:start="61:32" pos:end="61:43"><name pos:start="61:32" pos:end="61:43"><name pos:start="61:32" pos:end="61:38">arginfo</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:43">env</name></name></expr></argument>, <argument pos:start="61:46" pos:end="61:58"><expr pos:start="61:46" pos:end="61:58"><name pos:start="61:46" pos:end="61:58"><name pos:start="61:46" pos:end="61:52">arginfo</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:58">help</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="71:9">else <block pos:start="63:16" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:35">

            <expr_stmt pos:start="65:13" pos:end="69:35"><expr pos:start="65:13" pos:end="69:34"><call pos:start="65:13" pos:end="69:34"><name pos:start="65:13" pos:end="65:18">printf</name><argument_list pos:start="65:19" pos:end="69:34">(<argument pos:start="65:20" pos:end="65:36"><expr pos:start="65:20" pos:end="65:36"><literal type="string" pos:start="65:20" pos:end="65:36">"-%-*s %-*s %s\n"</literal></expr></argument>, <argument pos:start="65:39" pos:end="65:49"><expr pos:start="65:39" pos:end="65:49"><name pos:start="65:39" pos:end="65:47">maxarglen</name><operator pos:start="65:48" pos:end="65:48">+</operator><literal type="number" pos:start="65:49" pos:end="65:49">1</literal></expr></argument>, <argument pos:start="65:52" pos:end="65:64"><expr pos:start="65:52" pos:end="65:64"><name pos:start="65:52" pos:end="65:64"><name pos:start="65:52" pos:end="65:58">arginfo</name><operator pos:start="65:59" pos:end="65:60">-&gt;</operator><name pos:start="65:61" pos:end="65:64">argv</name></name></expr></argument>,

                    <argument pos:start="67:21" pos:end="67:29"><expr pos:start="67:21" pos:end="67:29"><name pos:start="67:21" pos:end="67:29">maxenvlen</name></expr></argument>, <argument pos:start="67:32" pos:end="67:43"><expr pos:start="67:32" pos:end="67:43"><name pos:start="67:32" pos:end="67:43"><name pos:start="67:32" pos:end="67:38">arginfo</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:43">env</name></name></expr></argument>,

                    <argument pos:start="69:21" pos:end="69:33"><expr pos:start="69:21" pos:end="69:33"><name pos:start="69:21" pos:end="69:33"><name pos:start="69:21" pos:end="69:27">arginfo</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:33">help</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="77:5" pos:end="87:29"><expr pos:start="77:5" pos:end="87:28"><call pos:start="77:5" pos:end="87:28"><name pos:start="77:5" pos:end="77:10">printf</name><argument_list pos:start="77:11" pos:end="87:28">(<argument pos:start="77:12" pos:end="83:41"><expr pos:start="77:12" pos:end="83:41"><literal type="string" pos:start="77:12" pos:end="77:15">"\n"</literal>

           <literal type="string" pos:start="79:12" pos:end="79:24">"Defaults:\n"</literal>

           <literal type="string" pos:start="81:12" pos:end="81:35">"QEMU_LD_PREFIX  = %s\n"</literal>

           <literal type="string" pos:start="83:12" pos:end="83:41">"QEMU_STACK_SIZE = %ld byte\n"</literal></expr></argument>,

           <argument pos:start="85:12" pos:end="85:24"><expr pos:start="85:12" pos:end="85:24"><name pos:start="85:12" pos:end="85:24">interp_prefix</name></expr></argument>,

           <argument pos:start="87:12" pos:end="87:27"><expr pos:start="87:12" pos:end="87:27"><name pos:start="87:12" pos:end="87:27">guest_stack_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="115:53"><expr pos:start="91:5" pos:end="115:52"><call pos:start="91:5" pos:end="115:52"><name pos:start="91:5" pos:end="91:10">printf</name><argument_list pos:start="91:11" pos:end="115:52">(<argument pos:start="91:12" pos:end="115:51"><expr pos:start="91:12" pos:end="115:51"><literal type="string" pos:start="91:12" pos:end="91:15">"\n"</literal>

           <literal type="string" pos:start="93:12" pos:end="93:68">"You can use -E and -U options or the QEMU_SET_ENV and\n"</literal>

           <literal type="string" pos:start="95:12" pos:end="95:68">"QEMU_UNSET_ENV environment variables to set and unset\n"</literal>

           <literal type="string" pos:start="97:12" pos:end="97:60">"environment variables for the target process.\n"</literal>

           <literal type="string" pos:start="99:12" pos:end="99:77">"It is possible to provide several variables by separating them\n"</literal>

           <literal type="string" pos:start="101:12" pos:end="101:78">"by commas in getsubopt(3) style. Additionally it is possible to\n"</literal>

           <literal type="string" pos:start="103:12" pos:end="103:60">"provide the -E and -U options multiple times.\n"</literal>

           <literal type="string" pos:start="105:12" pos:end="105:50">"The following lines are equivalent:\n"</literal>

           <literal type="string" pos:start="107:12" pos:end="107:70">"    -E var1=val2 -E var2=val2 -U LD_PRELOAD -U LD_DEBUG\n"</literal>

           <literal type="string" pos:start="109:12" pos:end="109:64">"    -E var1=val2,var2=val2 -U LD_PRELOAD,LD_DEBUG\n"</literal>

           <literal type="string" pos:start="111:12" pos:end="111:86">"    QEMU_SET_ENV=var1=val2,var2=val2 QEMU_UNSET_ENV=LD_PRELOAD,LD_DEBUG\n"</literal>

           <literal type="string" pos:start="113:12" pos:end="113:76">"Note that if you provide several changes to a single variable\n"</literal>

           <literal type="string" pos:start="115:12" pos:end="115:51">"the last change will stay in effect.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:12"><expr pos:start="119:5" pos:end="119:11"><call pos:start="119:5" pos:end="119:11"><name pos:start="119:5" pos:end="119:8">exit</name><argument_list pos:start="119:9" pos:end="119:11">(<argument pos:start="119:10" pos:end="119:10"><expr pos:start="119:10" pos:end="119:10"><literal type="number" pos:start="119:10" pos:end="119:10">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
