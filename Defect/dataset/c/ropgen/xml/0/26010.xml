<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26010.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">cmd_read_toc_pma_atip</name><parameter_list pos:start="1:34" pos:end="1:60">(<parameter pos:start="1:35" pos:end="1:45"><decl pos:start="1:35" pos:end="1:45"><type pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:42">IDEState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:54">uint8_t</name><modifier pos:start="1:55" pos:end="1:55">*</modifier></type> <name pos:start="1:57" pos:end="1:59">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:5">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">format</name></decl>, <decl pos:start="5:17" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:19">msf</name></decl>, <decl pos:start="5:22" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:32">start_track</name></decl>, <decl pos:start="5:35" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:35" pos:end="5:37">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:26">total_sectors</name> <init pos:start="7:28" pos:end="7:47">= <expr pos:start="7:30" pos:end="7:47"><name pos:start="7:30" pos:end="7:42"><name pos:start="7:30" pos:end="7:30">s</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:42">nb_sectors</name></name> <operator pos:start="7:44" pos:end="7:45">&gt;&gt;</operator> <literal type="number" pos:start="7:47" pos:end="7:47">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">max_len</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:21">total_sectors</name> <operator pos:start="13:23" pos:end="13:24">==</operator> <literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr>)</condition> <block pos:start="13:29" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:72"><expr pos:start="15:9" pos:end="15:71"><call pos:start="15:9" pos:end="15:71"><name pos:start="15:9" pos:end="15:27">ide_atapi_cmd_error</name><argument_list pos:start="15:28" pos:end="15:71">(<argument pos:start="15:29" pos:end="15:29"><expr pos:start="15:29" pos:end="15:29"><name pos:start="15:29" pos:end="15:29">s</name></expr></argument>, <argument pos:start="15:32" pos:end="15:46"><expr pos:start="15:32" pos:end="15:46"><name pos:start="15:32" pos:end="15:46">SENSE_NOT_READY</name></expr></argument>, <argument pos:start="15:49" pos:end="15:70"><expr pos:start="15:49" pos:end="15:70"><name pos:start="15:49" pos:end="15:70">ASC_MEDIUM_NOT_PRESENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:11">max_len</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:35"><name pos:start="23:15" pos:end="23:26">ube16_to_cpu</name><argument_list pos:start="23:27" pos:end="23:35">(<argument pos:start="23:28" pos:end="23:34"><expr pos:start="23:28" pos:end="23:34"><name pos:start="23:28" pos:end="23:30">buf</name> <operator pos:start="23:32" pos:end="23:32">+</operator> <literal type="number" pos:start="23:34" pos:end="23:34">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:10">format</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <name pos:start="25:14" pos:end="25:19"><name pos:start="25:14" pos:end="25:16">buf</name><index pos:start="25:17" pos:end="25:19">[<expr pos:start="25:18" pos:end="25:18"><literal type="number" pos:start="25:18" pos:end="25:18">9</literal></expr>]</index></name> <operator pos:start="25:21" pos:end="25:22">&gt;&gt;</operator> <literal type="number" pos:start="25:24" pos:end="25:24">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:7">msf</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <operator pos:start="27:11" pos:end="27:11">(</operator><name pos:start="27:12" pos:end="27:17"><name pos:start="27:12" pos:end="27:14">buf</name><index pos:start="27:15" pos:end="27:17">[<expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">1</literal></expr>]</index></name> <operator pos:start="27:19" pos:end="27:20">&gt;&gt;</operator> <literal type="number" pos:start="27:22" pos:end="27:22">1</literal><operator pos:start="27:23" pos:end="27:23">)</operator> <operator pos:start="27:25" pos:end="27:25">&amp;</operator> <literal type="number" pos:start="27:27" pos:end="27:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:25"><expr pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:15">start_track</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:24"><name pos:start="29:19" pos:end="29:21">buf</name><index pos:start="29:22" pos:end="29:24">[<expr pos:start="29:23" pos:end="29:23"><literal type="number" pos:start="29:23" pos:end="29:23">6</literal></expr>]</index></name></expr>;</expr_stmt>



    <switch pos:start="33:5" pos:end="83:5">switch<condition pos:start="33:11" pos:end="33:18">(<expr pos:start="33:12" pos:end="33:17"><name pos:start="33:12" pos:end="33:17">format</name></expr>)</condition> <block pos:start="33:20" pos:end="83:5">{<block_content pos:start="35:5" pos:end="81:57">

    <case pos:start="35:5" pos:end="35:11">case <expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">0</literal></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:67"><expr pos:start="37:9" pos:end="37:66"><name pos:start="37:9" pos:end="37:11">len</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:66"><name pos:start="37:15" pos:end="37:28">cdrom_read_toc</name><argument_list pos:start="37:29" pos:end="37:66">(<argument pos:start="37:30" pos:end="37:42"><expr pos:start="37:30" pos:end="37:42"><name pos:start="37:30" pos:end="37:42">total_sectors</name></expr></argument>, <argument pos:start="37:45" pos:end="37:47"><expr pos:start="37:45" pos:end="37:47"><name pos:start="37:45" pos:end="37:47">buf</name></expr></argument>, <argument pos:start="37:50" pos:end="37:52"><expr pos:start="37:50" pos:end="37:52"><name pos:start="37:50" pos:end="37:52">msf</name></expr></argument>, <argument pos:start="37:55" pos:end="37:65"><expr pos:start="37:55" pos:end="37:65"><name pos:start="37:55" pos:end="37:65">start_track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:27"><if pos:start="39:9" pos:end="41:27">if <condition pos:start="39:12" pos:end="39:20">(<expr pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:15">len</name> <operator pos:start="39:17" pos:end="39:17">&lt;</operator> <literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:27"><block_content pos:start="41:13" pos:end="41:27">

            <goto pos:start="41:13" pos:end="41:27">goto <name pos:start="41:18" pos:end="41:26">error_cmd</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:45"><expr pos:start="43:9" pos:end="43:44"><call pos:start="43:9" pos:end="43:44"><name pos:start="43:9" pos:end="43:27">ide_atapi_cmd_reply</name><argument_list pos:start="43:28" pos:end="43:44">(<argument pos:start="43:29" pos:end="43:29"><expr pos:start="43:29" pos:end="43:29"><name pos:start="43:29" pos:end="43:29">s</name></expr></argument>, <argument pos:start="43:32" pos:end="43:34"><expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:34">len</name></expr></argument>, <argument pos:start="43:37" pos:end="43:43"><expr pos:start="43:37" pos:end="43:43"><name pos:start="43:37" pos:end="43:43">max_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">1</literal></expr>:</case>

        <comment type="block" pos:start="49:9" pos:end="49:59">/* multi session : only a single session defined */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:27"><expr pos:start="51:9" pos:end="51:26"><call pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:14">memset</name><argument_list pos:start="51:15" pos:end="51:26">(<argument pos:start="51:16" pos:end="51:18"><expr pos:start="51:16" pos:end="51:18"><name pos:start="51:16" pos:end="51:18">buf</name></expr></argument>, <argument pos:start="51:21" pos:end="51:21"><expr pos:start="51:21" pos:end="51:21"><literal type="number" pos:start="51:21" pos:end="51:21">0</literal></expr></argument>, <argument pos:start="51:24" pos:end="51:25"><expr pos:start="51:24" pos:end="51:25"><literal type="number" pos:start="51:24" pos:end="51:25">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:14"><name pos:start="53:9" pos:end="53:11">buf</name><index pos:start="53:12" pos:end="53:14">[<expr pos:start="53:13" pos:end="53:13"><literal type="number" pos:start="53:13" pos:end="53:13">1</literal></expr>]</index></name> <operator pos:start="53:16" pos:end="53:16">=</operator> <literal type="number" pos:start="53:18" pos:end="53:21">0x0a</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:14"><name pos:start="55:9" pos:end="55:11">buf</name><index pos:start="55:12" pos:end="55:14">[<expr pos:start="55:13" pos:end="55:13"><literal type="number" pos:start="55:13" pos:end="55:13">2</literal></expr>]</index></name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:21">0x01</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:22"><expr pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:14"><name pos:start="57:9" pos:end="57:11">buf</name><index pos:start="57:12" pos:end="57:14">[<expr pos:start="57:13" pos:end="57:13"><literal type="number" pos:start="57:13" pos:end="57:13">3</literal></expr>]</index></name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="number" pos:start="57:18" pos:end="57:21">0x01</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:44"><expr pos:start="59:9" pos:end="59:43"><call pos:start="59:9" pos:end="59:43"><name pos:start="59:9" pos:end="59:27">ide_atapi_cmd_reply</name><argument_list pos:start="59:28" pos:end="59:43">(<argument pos:start="59:29" pos:end="59:29"><expr pos:start="59:29" pos:end="59:29"><name pos:start="59:29" pos:end="59:29">s</name></expr></argument>, <argument pos:start="59:32" pos:end="59:33"><expr pos:start="59:32" pos:end="59:33"><literal type="number" pos:start="59:32" pos:end="59:33">12</literal></expr></argument>, <argument pos:start="59:36" pos:end="59:42"><expr pos:start="59:36" pos:end="59:42"><name pos:start="59:36" pos:end="59:42">max_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:11">case <expr pos:start="63:10" pos:end="63:10"><literal type="number" pos:start="63:10" pos:end="63:10">2</literal></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:71"><expr pos:start="65:9" pos:end="65:70"><name pos:start="65:9" pos:end="65:11">len</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <call pos:start="65:15" pos:end="65:70"><name pos:start="65:15" pos:end="65:32">cdrom_read_toc_raw</name><argument_list pos:start="65:33" pos:end="65:70">(<argument pos:start="65:34" pos:end="65:46"><expr pos:start="65:34" pos:end="65:46"><name pos:start="65:34" pos:end="65:46">total_sectors</name></expr></argument>, <argument pos:start="65:49" pos:end="65:51"><expr pos:start="65:49" pos:end="65:51"><name pos:start="65:49" pos:end="65:51">buf</name></expr></argument>, <argument pos:start="65:54" pos:end="65:56"><expr pos:start="65:54" pos:end="65:56"><name pos:start="65:54" pos:end="65:56">msf</name></expr></argument>, <argument pos:start="65:59" pos:end="65:69"><expr pos:start="65:59" pos:end="65:69"><name pos:start="65:59" pos:end="65:69">start_track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:27"><if pos:start="67:9" pos:end="69:27">if <condition pos:start="67:12" pos:end="67:20">(<expr pos:start="67:13" pos:end="67:19"><name pos:start="67:13" pos:end="67:15">len</name> <operator pos:start="67:17" pos:end="67:17">&lt;</operator> <literal type="number" pos:start="67:19" pos:end="67:19">0</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:27"><block_content pos:start="69:13" pos:end="69:27">

            <goto pos:start="69:13" pos:end="69:27">goto <name pos:start="69:18" pos:end="69:26">error_cmd</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:45"><expr pos:start="71:9" pos:end="71:44"><call pos:start="71:9" pos:end="71:44"><name pos:start="71:9" pos:end="71:27">ide_atapi_cmd_reply</name><argument_list pos:start="71:28" pos:end="71:44">(<argument pos:start="71:29" pos:end="71:29"><expr pos:start="71:29" pos:end="71:29"><name pos:start="71:29" pos:end="71:29">s</name></expr></argument>, <argument pos:start="71:32" pos:end="71:34"><expr pos:start="71:32" pos:end="71:34"><name pos:start="71:32" pos:end="71:34">len</name></expr></argument>, <argument pos:start="71:37" pos:end="71:43"><expr pos:start="71:37" pos:end="71:43"><name pos:start="71:37" pos:end="71:43">max_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <default pos:start="75:5" pos:end="75:12">default:</default>

    <label pos:start="77:5" pos:end="77:14"><name pos:start="77:5" pos:end="77:13">error_cmd</name>:</label>

        <expr_stmt pos:start="79:9" pos:end="81:57"><expr pos:start="79:9" pos:end="81:56"><call pos:start="79:9" pos:end="81:56"><name pos:start="79:9" pos:end="79:27">ide_atapi_cmd_error</name><argument_list pos:start="79:28" pos:end="81:56">(<argument pos:start="79:29" pos:end="79:29"><expr pos:start="79:29" pos:end="79:29"><name pos:start="79:29" pos:end="79:29">s</name></expr></argument>, <argument pos:start="79:32" pos:end="79:52"><expr pos:start="79:32" pos:end="79:52"><name pos:start="79:32" pos:end="79:52">SENSE_ILLEGAL_REQUEST</name></expr></argument>,

                            <argument pos:start="81:29" pos:end="81:55"><expr pos:start="81:29" pos:end="81:55"><name pos:start="81:29" pos:end="81:55">ASC_INV_FIELD_IN_CMD_PACKET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
