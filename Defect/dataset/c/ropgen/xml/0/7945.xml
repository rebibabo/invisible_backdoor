<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7945.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">pci_piix3_xen_ide_unplug</name><parameter_list pos:start="1:29" pos:end="1:46">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">DeviceState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">PCIIDEState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:24">pci_ide</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">DriveInfo</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">di</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">IDEDevice</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:21">idedev</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:11">pci_ide</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:26"><name pos:start="15:15" pos:end="15:21">PCI_IDE</name><argument_list pos:start="15:22" pos:end="15:26">(<argument pos:start="15:23" pos:end="15:25"><expr pos:start="15:23" pos:end="15:25"><name pos:start="15:23" pos:end="15:25">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="19:5" pos:end="63:5">for <control pos:start="19:9" pos:end="19:27">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:21"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <literal type="number" pos:start="19:21" pos:end="19:21">4</literal></expr>;</condition> <incr pos:start="19:24" pos:end="19:26"><expr pos:start="19:24" pos:end="19:26"><name pos:start="19:24" pos:end="19:24">i</name><operator pos:start="19:25" pos:end="19:26">++</operator></expr></incr>)</control> <block pos:start="19:29" pos:end="63:5">{<block_content pos:start="21:9" pos:end="61:9">

        <expr_stmt pos:start="21:9" pos:end="21:43"><expr pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:10">di</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <call pos:start="21:14" pos:end="21:42"><name pos:start="21:14" pos:end="21:31">drive_get_by_index</name><argument_list pos:start="21:32" pos:end="21:42">(<argument pos:start="21:33" pos:end="21:38"><expr pos:start="21:33" pos:end="21:38"><name pos:start="21:33" pos:end="21:38">IF_IDE</name></expr></argument>, <argument pos:start="21:41" pos:end="21:41"><expr pos:start="21:41" pos:end="21:41"><name pos:start="21:41" pos:end="21:41">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="61:9"><if pos:start="23:9" pos:end="61:9">if <condition pos:start="23:12" pos:end="23:40">(<expr pos:start="23:13" pos:end="23:39"><name pos:start="23:13" pos:end="23:14">di</name> <operator pos:start="23:16" pos:end="23:17">!=</operator> <name pos:start="23:19" pos:end="23:22">NULL</name> <operator pos:start="23:24" pos:end="23:25">&amp;&amp;</operator> <operator pos:start="23:27" pos:end="23:27">!</operator><name pos:start="23:28" pos:end="23:39"><name pos:start="23:28" pos:end="23:29">di</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:39">media_cd</name></name></expr>)</condition> <block pos:start="23:42" pos:end="61:9">{<block_content pos:start="25:13" pos:end="59:27">

            <decl_stmt pos:start="25:13" pos:end="25:56"><decl pos:start="25:13" pos:end="25:55"><type pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:24">BlockBackend</name> <modifier pos:start="25:26" pos:end="25:26">*</modifier></type><name pos:start="25:27" pos:end="25:29">blk</name> <init pos:start="25:31" pos:end="25:55">= <expr pos:start="25:33" pos:end="25:55"><call pos:start="25:33" pos:end="25:55"><name pos:start="25:33" pos:end="25:51">blk_by_legacy_dinfo</name><argument_list pos:start="25:52" pos:end="25:55">(<argument pos:start="25:53" pos:end="25:54"><expr pos:start="25:53" pos:end="25:54"><name pos:start="25:53" pos:end="25:54">di</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="27:13" pos:end="27:56"><decl pos:start="27:13" pos:end="27:55"><type pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:23">DeviceState</name> <modifier pos:start="27:25" pos:end="27:25">*</modifier></type><name pos:start="27:26" pos:end="27:27">ds</name> <init pos:start="27:29" pos:end="27:55">= <expr pos:start="27:31" pos:end="27:55"><call pos:start="27:31" pos:end="27:55"><name pos:start="27:31" pos:end="27:50">blk_get_attached_dev</name><argument_list pos:start="27:51" pos:end="27:55">(<argument pos:start="27:52" pos:end="27:54"><expr pos:start="27:52" pos:end="27:54"><name pos:start="27:52" pos:end="27:54">blk</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="31:13" pos:end="31:27"><expr pos:start="31:13" pos:end="31:26"><call pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:21">blk_drain</name><argument_list pos:start="31:22" pos:end="31:26">(<argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:25">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:27"><expr pos:start="33:13" pos:end="33:26"><call pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:21">blk_flush</name><argument_list pos:start="33:22" pos:end="33:26">(<argument pos:start="33:23" pos:end="33:25"><expr pos:start="33:23" pos:end="33:25"><name pos:start="33:23" pos:end="33:25">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="37:13" pos:end="41:13"><if pos:start="37:13" pos:end="41:13">if <condition pos:start="37:16" pos:end="37:19">(<expr pos:start="37:17" pos:end="37:18"><name pos:start="37:17" pos:end="37:18">ds</name></expr>)</condition> <block pos:start="37:21" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:40">

                <expr_stmt pos:start="39:17" pos:end="39:40"><expr pos:start="39:17" pos:end="39:39"><call pos:start="39:17" pos:end="39:39"><name pos:start="39:17" pos:end="39:30">blk_detach_dev</name><argument_list pos:start="39:31" pos:end="39:39">(<argument pos:start="39:32" pos:end="39:34"><expr pos:start="39:32" pos:end="39:34"><name pos:start="39:32" pos:end="39:34">blk</name></expr></argument>, <argument pos:start="39:37" pos:end="39:38"><expr pos:start="39:37" pos:end="39:38"><name pos:start="39:37" pos:end="39:38">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:59"><expr pos:start="43:13" pos:end="43:58"><name pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:19">pci_ide</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:24">bus</name><index pos:start="43:25" pos:end="43:33">[<expr pos:start="43:26" pos:end="43:32"><name pos:start="43:26" pos:end="43:32"><name pos:start="43:26" pos:end="43:27">di</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:32">bus</name></name></expr>]</index></name><operator pos:start="43:34" pos:end="43:34">.</operator><name pos:start="43:35" pos:end="43:47"><name pos:start="43:35" pos:end="43:37">ifs</name><index pos:start="43:38" pos:end="43:47">[<expr pos:start="43:39" pos:end="43:46"><name pos:start="43:39" pos:end="43:46"><name pos:start="43:39" pos:end="43:40">di</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:46">unit</name></name></expr>]</index></name><operator pos:start="43:48" pos:end="43:48">.</operator><name pos:start="43:49" pos:end="43:51">blk</name> <operator pos:start="43:53" pos:end="43:53">=</operator> <name pos:start="43:55" pos:end="43:58">NULL</name></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="53:13"><if pos:start="45:13" pos:end="49:13">if <condition pos:start="45:16" pos:end="45:25">(<expr pos:start="45:17" pos:end="45:24"><operator pos:start="45:17" pos:end="45:17">!</operator><operator pos:start="45:18" pos:end="45:18">(</operator><name pos:start="45:19" pos:end="45:19">i</name> <operator pos:start="45:21" pos:end="45:21">%</operator> <literal type="number" pos:start="45:23" pos:end="45:23">2</literal><operator pos:start="45:24" pos:end="45:24">)</operator></expr>)</condition> <block pos:start="45:27" pos:end="49:13">{<block_content pos:start="47:17" pos:end="47:54">

                <expr_stmt pos:start="47:17" pos:end="47:54"><expr pos:start="47:17" pos:end="47:53"><name pos:start="47:17" pos:end="47:22">idedev</name> <operator pos:start="47:24" pos:end="47:24">=</operator> <name pos:start="47:26" pos:end="47:46"><name pos:start="47:26" pos:end="47:32">pci_ide</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:37">bus</name><index pos:start="47:38" pos:end="47:46">[<expr pos:start="47:39" pos:end="47:45"><name pos:start="47:39" pos:end="47:45"><name pos:start="47:39" pos:end="47:40">di</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:45">bus</name></name></expr>]</index></name><operator pos:start="47:47" pos:end="47:47">.</operator><name pos:start="47:48" pos:end="47:53">master</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="49:15" pos:end="53:13">else <block pos:start="49:20" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:53">

                <expr_stmt pos:start="51:17" pos:end="51:53"><expr pos:start="51:17" pos:end="51:52"><name pos:start="51:17" pos:end="51:22">idedev</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:46"><name pos:start="51:26" pos:end="51:32">pci_ide</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:37">bus</name><index pos:start="51:38" pos:end="51:46">[<expr pos:start="51:39" pos:end="51:45"><name pos:start="51:39" pos:end="51:45"><name pos:start="51:39" pos:end="51:40">di</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:45">bus</name></name></expr>]</index></name><operator pos:start="51:47" pos:end="51:47">.</operator><name pos:start="51:48" pos:end="51:52">slave</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:36"><expr pos:start="55:13" pos:end="55:35"><name pos:start="55:13" pos:end="55:28"><name pos:start="55:13" pos:end="55:18">idedev</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:24">conf</name><operator pos:start="55:25" pos:end="55:25">.</operator><name pos:start="55:26" pos:end="55:28">blk</name></name> <operator pos:start="55:30" pos:end="55:30">=</operator> <name pos:start="55:32" pos:end="55:35">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:36"><expr pos:start="57:13" pos:end="57:35"><call pos:start="57:13" pos:end="57:35"><name pos:start="57:13" pos:end="57:30">monitor_remove_blk</name><argument_list pos:start="57:31" pos:end="57:35">(<argument pos:start="57:32" pos:end="57:34"><expr pos:start="57:32" pos:end="57:34"><name pos:start="57:32" pos:end="57:34">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:27"><expr pos:start="59:13" pos:end="59:26"><call pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:21">blk_unref</name><argument_list pos:start="59:22" pos:end="59:26">(<argument pos:start="59:23" pos:end="59:25"><expr pos:start="59:23" pos:end="59:25"><name pos:start="59:23" pos:end="59:25">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="65:5" pos:end="65:32"><expr pos:start="65:5" pos:end="65:31"><call pos:start="65:5" pos:end="65:31"><name pos:start="65:5" pos:end="65:18">qdev_reset_all</name><argument_list pos:start="65:19" pos:end="65:31">(<argument pos:start="65:20" pos:end="65:30"><expr pos:start="65:20" pos:end="65:30"><call pos:start="65:20" pos:end="65:30"><name pos:start="65:20" pos:end="65:25">DEVICE</name><argument_list pos:start="65:26" pos:end="65:30">(<argument pos:start="65:27" pos:end="65:29"><expr pos:start="65:27" pos:end="65:29"><name pos:start="65:27" pos:end="65:29">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
