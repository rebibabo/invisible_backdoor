<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10360.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_open_dref</name><parameter_list pos:start="1:25" pos:end="3:49">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:36">AVIOContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier><modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">pb</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:52"><decl pos:start="1:44" pos:end="1:52"><type pos:start="1:44" pos:end="1:52"><name pos:start="1:44" pos:end="1:47">char</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">src</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:61">MOVDref</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">ref</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:48"><decl pos:start="3:26" pos:end="3:48"><type pos:start="3:26" pos:end="3:48"><name pos:start="3:26" pos:end="3:40">AVIOInterruptCB</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:48">int_cb</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="85:1">{<block_content pos:start="11:5" pos:end="83:27">

    <comment type="block" pos:start="7:5" pos:end="9:31">/* try relative path, we do not try the absolute because it can leak information about our

       system to an attacker */</comment>

    <if_stmt pos:start="11:5" pos:end="79:5"><if pos:start="11:5" pos:end="79:5">if <condition pos:start="11:8" pos:end="11:47">(<expr pos:start="11:9" pos:end="11:46"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:11">ref</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:20">nlvl_to</name></name> <operator pos:start="11:22" pos:end="11:22">&gt;</operator> <literal type="number" pos:start="11:24" pos:end="11:24">0</literal> <operator pos:start="11:26" pos:end="11:27">&amp;&amp;</operator> <name pos:start="11:29" pos:end="11:42"><name pos:start="11:29" pos:end="11:31">ref</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:42">nlvl_from</name></name> <operator pos:start="11:44" pos:end="11:44">&gt;</operator> <literal type="number" pos:start="11:46" pos:end="11:46">0</literal></expr>)</condition> <block pos:start="11:49" pos:end="79:5">{<block_content pos:start="13:9" pos:end="77:9">

        <decl_stmt pos:start="13:9" pos:end="13:28"><decl pos:start="13:9" pos:end="13:27"><type pos:start="13:9" pos:end="13:12"><name pos:start="13:9" pos:end="13:12">char</name></type> <name pos:start="13:14" pos:end="13:27"><name pos:start="13:14" pos:end="13:21">filename</name><index pos:start="13:22" pos:end="13:27">[<expr pos:start="13:23" pos:end="13:26"><literal type="number" pos:start="13:23" pos:end="13:26">1024</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:23"><decl pos:start="15:9" pos:end="15:22"><type pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:12">char</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:22">src_path</name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:17"><decl pos:start="17:9" pos:end="17:13"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:13">i</name></decl>, <decl pos:start="17:16" pos:end="17:16"><type ref="prev" pos:start="17:9" pos:end="17:11"/><name pos:start="17:16" pos:end="17:16">l</name></decl>;</decl_stmt>



        <comment type="block" pos:start="21:9" pos:end="21:31">/* find a source dir */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:37"><expr pos:start="23:9" pos:end="23:36"><name pos:start="23:9" pos:end="23:16">src_path</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <call pos:start="23:20" pos:end="23:36"><name pos:start="23:20" pos:end="23:26">strrchr</name><argument_list pos:start="23:27" pos:end="23:36">(<argument pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:30">src</name></expr></argument>, <argument pos:start="23:33" pos:end="23:35"><expr pos:start="23:33" pos:end="23:35"><literal type="char" pos:start="23:33" pos:end="23:35">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="31:27"><if pos:start="25:9" pos:end="27:23">if <condition pos:start="25:12" pos:end="25:21">(<expr pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:20">src_path</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:23"><block_content pos:start="27:13" pos:end="27:23">

            <expr_stmt pos:start="27:13" pos:end="27:23"><expr pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:20">src_path</name><operator pos:start="27:21" pos:end="27:22">++</operator></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="29:9" pos:end="31:27">else<block type="pseudo" pos:start="31:13" pos:end="31:27"><block_content pos:start="31:13" pos:end="31:27">

            <expr_stmt pos:start="31:13" pos:end="31:27"><expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:20">src_path</name> <operator pos:start="31:22" pos:end="31:22">=</operator> <name pos:start="31:24" pos:end="31:26">src</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <comment type="block" pos:start="35:9" pos:end="35:46">/* find a next level down to target */</comment>

        <for pos:start="37:9" pos:end="49:13">for <control pos:start="37:13" pos:end="37:59">(<init pos:start="37:14" pos:end="37:46"><expr pos:start="37:14" pos:end="37:18"><name pos:start="37:14" pos:end="37:14">i</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr><operator pos:start="37:19" pos:end="37:19">,</operator> <expr pos:start="37:21" pos:end="37:45"><name pos:start="37:21" pos:end="37:21">l</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <call pos:start="37:25" pos:end="37:41"><name pos:start="37:25" pos:end="37:30">strlen</name><argument_list pos:start="37:31" pos:end="37:41">(<argument pos:start="37:32" pos:end="37:40"><expr pos:start="37:32" pos:end="37:40"><name pos:start="37:32" pos:end="37:40"><name pos:start="37:32" pos:end="37:34">ref</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:40">path</name></name></expr></argument>)</argument_list></call> <operator pos:start="37:43" pos:end="37:43">-</operator> <literal type="number" pos:start="37:45" pos:end="37:45">1</literal></expr>;</init> <condition pos:start="37:48" pos:end="37:54"><expr pos:start="37:48" pos:end="37:53"><name pos:start="37:48" pos:end="37:48">l</name> <operator pos:start="37:50" pos:end="37:51">&gt;=</operator> <literal type="number" pos:start="37:53" pos:end="37:53">0</literal></expr>;</condition> <incr pos:start="37:56" pos:end="37:58"><expr pos:start="37:56" pos:end="37:58"><name pos:start="37:56" pos:end="37:56">l</name><operator pos:start="37:57" pos:end="37:58">--</operator></expr></incr>)</control><block type="pseudo" pos:start="39:13" pos:end="49:13"><block_content pos:start="39:13" pos:end="49:13">

            <if_stmt pos:start="39:13" pos:end="49:13"><if pos:start="39:13" pos:end="49:13">if <condition pos:start="39:16" pos:end="39:36">(<expr pos:start="39:17" pos:end="39:35"><name pos:start="39:17" pos:end="39:28"><name pos:start="39:17" pos:end="39:19">ref</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:25">path</name><index pos:start="39:26" pos:end="39:28">[<expr pos:start="39:27" pos:end="39:27"><name pos:start="39:27" pos:end="39:27">l</name></expr>]</index></name> <operator pos:start="39:30" pos:end="39:31">==</operator> <literal type="char" pos:start="39:33" pos:end="39:35">'/'</literal></expr>)</condition> <block pos:start="39:38" pos:end="49:13">{<block_content pos:start="41:17" pos:end="47:24">

                <if_stmt pos:start="41:17" pos:end="47:24"><if pos:start="41:17" pos:end="43:26">if <condition pos:start="41:20" pos:end="41:42">(<expr pos:start="41:21" pos:end="41:41"><name pos:start="41:21" pos:end="41:21">i</name> <operator pos:start="41:23" pos:end="41:24">==</operator> <name pos:start="41:26" pos:end="41:37"><name pos:start="41:26" pos:end="41:28">ref</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:37">nlvl_to</name></name> <operator pos:start="41:39" pos:end="41:39">-</operator> <literal type="number" pos:start="41:41" pos:end="41:41">1</literal></expr>)</condition><block type="pseudo" pos:start="43:21" pos:end="43:26"><block_content pos:start="43:21" pos:end="43:26">

                    <break pos:start="43:21" pos:end="43:26">break;</break></block_content></block></if>

                <else pos:start="45:17" pos:end="47:24">else<block type="pseudo" pos:start="47:21" pos:end="47:24"><block_content pos:start="47:21" pos:end="47:24">

                    <expr_stmt pos:start="47:21" pos:end="47:24"><expr pos:start="47:21" pos:end="47:23"><name pos:start="47:21" pos:end="47:21">i</name><operator pos:start="47:22" pos:end="47:23">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt></block_content></block></for>



        <comment type="block" pos:start="53:9" pos:end="53:69">/* compose filename if next level down to target was found */</comment>

        <if_stmt pos:start="55:9" pos:end="77:9"><if pos:start="55:9" pos:end="77:9">if <condition pos:start="55:12" pos:end="55:72">(<expr pos:start="55:13" pos:end="55:71"><name pos:start="55:13" pos:end="55:13">i</name> <operator pos:start="55:15" pos:end="55:16">==</operator> <name pos:start="55:18" pos:end="55:29"><name pos:start="55:18" pos:end="55:20">ref</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:29">nlvl_to</name></name> <operator pos:start="55:31" pos:end="55:31">-</operator> <literal type="number" pos:start="55:33" pos:end="55:33">1</literal> <operator pos:start="55:35" pos:end="55:36">&amp;&amp;</operator> <name pos:start="55:38" pos:end="55:45">src_path</name> <operator pos:start="55:47" pos:end="55:47">-</operator> <name pos:start="55:49" pos:end="55:51">src</name>  <operator pos:start="55:54" pos:end="55:54">&lt;</operator> <sizeof pos:start="55:56" pos:end="55:71">sizeof<argument_list pos:start="55:62" pos:end="55:71">(<argument pos:start="55:63" pos:end="55:70"><expr pos:start="55:63" pos:end="55:70"><name pos:start="55:63" pos:end="55:70">filename</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="55:74" pos:end="77:9">{<block_content pos:start="57:13" pos:end="75:25">

            <expr_stmt pos:start="57:13" pos:end="57:50"><expr pos:start="57:13" pos:end="57:49"><call pos:start="57:13" pos:end="57:49"><name pos:start="57:13" pos:end="57:18">memcpy</name><argument_list pos:start="57:19" pos:end="57:49">(<argument pos:start="57:20" pos:end="57:27"><expr pos:start="57:20" pos:end="57:27"><name pos:start="57:20" pos:end="57:27">filename</name></expr></argument>, <argument pos:start="57:30" pos:end="57:32"><expr pos:start="57:30" pos:end="57:32"><name pos:start="57:30" pos:end="57:32">src</name></expr></argument>, <argument pos:start="57:35" pos:end="57:48"><expr pos:start="57:35" pos:end="57:48"><name pos:start="57:35" pos:end="57:42">src_path</name> <operator pos:start="57:44" pos:end="57:44">-</operator> <name pos:start="57:46" pos:end="57:48">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:41"><expr pos:start="59:13" pos:end="59:40"><name pos:start="59:13" pos:end="59:36"><name pos:start="59:13" pos:end="59:20">filename</name><index pos:start="59:21" pos:end="59:36">[<expr pos:start="59:22" pos:end="59:35"><name pos:start="59:22" pos:end="59:29">src_path</name> <operator pos:start="59:31" pos:end="59:31">-</operator> <name pos:start="59:33" pos:end="59:35">src</name></expr>]</index></name> <operator pos:start="59:38" pos:end="59:38">=</operator> <literal type="number" pos:start="59:40" pos:end="59:40">0</literal></expr>;</expr_stmt>



            <for pos:start="63:13" pos:end="65:50">for <control pos:start="63:17" pos:end="63:48">(<init pos:start="63:18" pos:end="63:23"><expr pos:start="63:18" pos:end="63:22"><name pos:start="63:18" pos:end="63:18">i</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <literal type="number" pos:start="63:22" pos:end="63:22">1</literal></expr>;</init> <condition pos:start="63:25" pos:end="63:43"><expr pos:start="63:25" pos:end="63:42"><name pos:start="63:25" pos:end="63:25">i</name> <operator pos:start="63:27" pos:end="63:27">&lt;</operator> <name pos:start="63:29" pos:end="63:42"><name pos:start="63:29" pos:end="63:31">ref</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:42">nlvl_from</name></name></expr>;</condition> <incr pos:start="63:45" pos:end="63:47"><expr pos:start="63:45" pos:end="63:47"><name pos:start="63:45" pos:end="63:45">i</name><operator pos:start="63:46" pos:end="63:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="65:17" pos:end="65:50"><block_content pos:start="65:17" pos:end="65:50">

                <expr_stmt pos:start="65:17" pos:end="65:50"><expr pos:start="65:17" pos:end="65:49"><call pos:start="65:17" pos:end="65:49"><name pos:start="65:17" pos:end="65:26">av_strlcat</name><argument_list pos:start="65:27" pos:end="65:49">(<argument pos:start="65:28" pos:end="65:35"><expr pos:start="65:28" pos:end="65:35"><name pos:start="65:28" pos:end="65:35">filename</name></expr></argument>, <argument pos:start="65:38" pos:end="65:42"><expr pos:start="65:38" pos:end="65:42"><literal type="string" pos:start="65:38" pos:end="65:42">"../"</literal></expr></argument>, <argument pos:start="65:45" pos:end="65:48"><expr pos:start="65:45" pos:end="65:48"><literal type="number" pos:start="65:45" pos:end="65:48">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="69:13" pos:end="69:58"><expr pos:start="69:13" pos:end="69:57"><call pos:start="69:13" pos:end="69:57"><name pos:start="69:13" pos:end="69:22">av_strlcat</name><argument_list pos:start="69:23" pos:end="69:57">(<argument pos:start="69:24" pos:end="69:31"><expr pos:start="69:24" pos:end="69:31"><name pos:start="69:24" pos:end="69:31">filename</name></expr></argument>, <argument pos:start="69:34" pos:end="69:50"><expr pos:start="69:34" pos:end="69:50"><name pos:start="69:34" pos:end="69:42"><name pos:start="69:34" pos:end="69:36">ref</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:42">path</name></name> <operator pos:start="69:44" pos:end="69:44">+</operator> <name pos:start="69:46" pos:end="69:46">l</name> <operator pos:start="69:48" pos:end="69:48">+</operator> <literal type="number" pos:start="69:50" pos:end="69:50">1</literal></expr></argument>, <argument pos:start="69:53" pos:end="69:56"><expr pos:start="69:53" pos:end="69:56"><literal type="number" pos:start="69:53" pos:end="69:56">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="73:13" pos:end="75:25"><if pos:start="73:13" pos:end="75:25">if <condition pos:start="73:16" pos:end="73:72">(<expr pos:start="73:17" pos:end="73:71"><operator pos:start="73:17" pos:end="73:17">!</operator><call pos:start="73:18" pos:end="73:71"><name pos:start="73:18" pos:end="73:27">avio_open2</name><argument_list pos:start="73:28" pos:end="73:71">(<argument pos:start="73:29" pos:end="73:30"><expr pos:start="73:29" pos:end="73:30"><name pos:start="73:29" pos:end="73:30">pb</name></expr></argument>, <argument pos:start="73:33" pos:end="73:40"><expr pos:start="73:33" pos:end="73:40"><name pos:start="73:33" pos:end="73:40">filename</name></expr></argument>, <argument pos:start="73:43" pos:end="73:56"><expr pos:start="73:43" pos:end="73:56"><name pos:start="73:43" pos:end="73:56">AVIO_FLAG_READ</name></expr></argument>, <argument pos:start="73:59" pos:end="73:64"><expr pos:start="73:59" pos:end="73:64"><name pos:start="73:59" pos:end="73:64">int_cb</name></expr></argument>, <argument pos:start="73:67" pos:end="73:70"><expr pos:start="73:67" pos:end="73:70"><name pos:start="73:67" pos:end="73:70">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:25"><block_content pos:start="75:17" pos:end="75:25">

                <return pos:start="75:17" pos:end="75:25">return <expr pos:start="75:24" pos:end="75:24"><literal type="number" pos:start="75:24" pos:end="75:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="83:5" pos:end="83:27">return <expr pos:start="83:12" pos:end="83:26"><call pos:start="83:12" pos:end="83:26"><name pos:start="83:12" pos:end="83:18">AVERROR</name><argument_list pos:start="83:19" pos:end="83:26">(<argument pos:start="83:20" pos:end="83:25"><expr pos:start="83:20" pos:end="83:25"><name pos:start="83:20" pos:end="83:25">ENOENT</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
