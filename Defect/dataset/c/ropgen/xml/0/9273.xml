<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9273.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">openpic_irq_raise</name><parameter_list pos:start="1:30" pos:end="1:72">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:39">openpic_t</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">opp</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:55"><decl pos:start="1:47" pos:end="1:55"><type pos:start="1:47" pos:end="1:55"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:55">n_CPU</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:71"><decl pos:start="1:58" pos:end="1:71"><type pos:start="1:58" pos:end="1:71"><name pos:start="1:58" pos:end="1:66">IRQ_src_t</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">src</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:5">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">n_ci</name> <init pos:start="5:14" pos:end="5:30">= <expr pos:start="5:16" pos:end="5:30"><name pos:start="5:16" pos:end="5:22">IDR_CI0</name> <operator pos:start="5:24" pos:end="5:24">-</operator> <name pos:start="5:26" pos:end="5:30">n_CPU</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:74">(<expr pos:start="9:9" pos:end="9:73"><operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:19"><name pos:start="9:10" pos:end="9:12">opp</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:19">flags</name></name> <operator pos:start="9:21" pos:end="9:21">&amp;</operator> <name pos:start="9:23" pos:end="9:43">OPENPIC_FLAG_IDE_CRIT</name><operator pos:start="9:44" pos:end="9:44">)</operator> <operator pos:start="9:46" pos:end="9:47">&amp;&amp;</operator> <call pos:start="9:49" pos:end="9:73"><name pos:start="9:49" pos:end="9:56">test_bit</name><argument_list pos:start="9:57" pos:end="9:73">(<argument pos:start="9:58" pos:end="9:66"><expr pos:start="9:58" pos:end="9:66"><operator pos:start="9:58" pos:end="9:58">&amp;</operator><name pos:start="9:59" pos:end="9:66"><name pos:start="9:59" pos:end="9:61">src</name><operator pos:start="9:62" pos:end="9:63">-&gt;</operator><name pos:start="9:64" pos:end="9:66">ide</name></name></expr></argument>, <argument pos:start="9:69" pos:end="9:72"><expr pos:start="9:69" pos:end="9:72"><name pos:start="9:69" pos:end="9:72">n_ci</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:76" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:66">

        <expr_stmt pos:start="11:9" pos:end="11:66"><expr pos:start="11:9" pos:end="11:65"><call pos:start="11:9" pos:end="11:65"><name pos:start="11:9" pos:end="11:22">qemu_irq_raise</name><argument_list pos:start="11:23" pos:end="11:65">(<argument pos:start="11:24" pos:end="11:64"><expr pos:start="11:24" pos:end="11:64"><name pos:start="11:24" pos:end="11:38"><name pos:start="11:24" pos:end="11:26">opp</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:31">dst</name><index pos:start="11:32" pos:end="11:38">[<expr pos:start="11:33" pos:end="11:37"><name pos:start="11:33" pos:end="11:37">n_CPU</name></expr>]</index></name><operator pos:start="11:39" pos:end="11:39">.</operator><name pos:start="11:40" pos:end="11:64"><name pos:start="11:40" pos:end="11:43">irqs</name><index pos:start="11:44" pos:end="11:64">[<expr pos:start="11:45" pos:end="11:63"><name pos:start="11:45" pos:end="11:63">OPENPIC_OUTPUT_CINT</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="13:7" pos:end="17:5">else <block pos:start="13:12" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:65">

        <expr_stmt pos:start="15:9" pos:end="15:65"><expr pos:start="15:9" pos:end="15:64"><call pos:start="15:9" pos:end="15:64"><name pos:start="15:9" pos:end="15:22">qemu_irq_raise</name><argument_list pos:start="15:23" pos:end="15:64">(<argument pos:start="15:24" pos:end="15:63"><expr pos:start="15:24" pos:end="15:63"><name pos:start="15:24" pos:end="15:38"><name pos:start="15:24" pos:end="15:26">opp</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:31">dst</name><index pos:start="15:32" pos:end="15:38">[<expr pos:start="15:33" pos:end="15:37"><name pos:start="15:33" pos:end="15:37">n_CPU</name></expr>]</index></name><operator pos:start="15:39" pos:end="15:39">.</operator><name pos:start="15:40" pos:end="15:63"><name pos:start="15:40" pos:end="15:43">irqs</name><index pos:start="15:44" pos:end="15:63">[<expr pos:start="15:45" pos:end="15:62"><name pos:start="15:45" pos:end="15:62">OPENPIC_OUTPUT_INT</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
