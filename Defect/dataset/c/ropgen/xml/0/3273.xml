<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3273.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">ide_dma_restart_cb</name><parameter_list pos:start="1:31" pos:end="1:69">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:56"><decl pos:start="1:46" pos:end="1:56"><type pos:start="1:46" pos:end="1:56"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:56">running</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:68"><decl pos:start="1:59" pos:end="1:68"><type pos:start="1:59" pos:end="1:68"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:68">reason</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">BMDMAState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">bm</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="9:15"><if pos:start="7:5" pos:end="9:15">if <condition pos:start="7:8" pos:end="7:17">(<expr pos:start="7:9" pos:end="7:16"><operator pos:start="7:9" pos:end="7:9">!</operator><name pos:start="7:10" pos:end="7:16">running</name></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:15"><block_content pos:start="9:9" pos:end="9:15">

        <return pos:start="9:9" pos:end="9:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:41">(<expr pos:start="11:9" pos:end="11:40"><name pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:10">bm</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:18">status</name></name> <operator pos:start="11:20" pos:end="11:20">&amp;</operator> <name pos:start="11:22" pos:end="11:40">BM_STATUS_DMA_RETRY</name></expr>)</condition> <block pos:start="11:43" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:36">

        <expr_stmt pos:start="13:9" pos:end="13:43"><expr pos:start="13:9" pos:end="13:42"><name pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:10">bm</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:18">status</name></name> <operator pos:start="13:20" pos:end="13:21">&amp;=</operator> <operator pos:start="13:23" pos:end="13:23">~</operator><name pos:start="13:24" pos:end="13:42">BM_STATUS_DMA_RETRY</name></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:36"><expr pos:start="15:9" pos:end="15:35"><call pos:start="15:9" pos:end="15:35"><name pos:start="15:9" pos:end="15:23">ide_dma_restart</name><argument_list pos:start="15:24" pos:end="15:35">(<argument pos:start="15:25" pos:end="15:34"><expr pos:start="15:25" pos:end="15:34"><name pos:start="15:25" pos:end="15:34"><name pos:start="15:25" pos:end="15:26">bm</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:34">ide_if</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="17:7" pos:end="23:5">else if <condition pos:start="17:15" pos:end="17:48">(<expr pos:start="17:16" pos:end="17:47"><name pos:start="17:16" pos:end="17:25"><name pos:start="17:16" pos:end="17:17">bm</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:25">status</name></name> <operator pos:start="17:27" pos:end="17:27">&amp;</operator> <name pos:start="17:29" pos:end="17:47">BM_STATUS_PIO_RETRY</name></expr>)</condition> <block pos:start="17:50" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:37">

        <expr_stmt pos:start="19:9" pos:end="19:43"><expr pos:start="19:9" pos:end="19:42"><name pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:10">bm</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:18">status</name></name> <operator pos:start="19:20" pos:end="19:21">&amp;=</operator> <operator pos:start="19:23" pos:end="19:23">~</operator><name pos:start="19:24" pos:end="19:42">BM_STATUS_PIO_RETRY</name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:37"><expr pos:start="21:9" pos:end="21:36"><call pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:24">ide_sector_write</name><argument_list pos:start="21:25" pos:end="21:36">(<argument pos:start="21:26" pos:end="21:35"><expr pos:start="21:26" pos:end="21:35"><name pos:start="21:26" pos:end="21:35"><name pos:start="21:26" pos:end="21:27">bm</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:35">ide_if</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
