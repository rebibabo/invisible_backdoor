<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6084.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:39">memory_region_iorange_write</name><parameter_list pos:start="1:40" pos:end="7:54">(<parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:47">IORange</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:56">iorange</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:55"><decl pos:start="3:41" pos:end="3:55"><type pos:start="3:41" pos:end="3:55"><name pos:start="3:41" pos:end="3:48">uint64_t</name></type> <name pos:start="3:50" pos:end="3:55">offset</name></decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:54"><decl pos:start="5:41" pos:end="5:54"><type pos:start="5:41" pos:end="5:54"><name pos:start="5:41" pos:end="5:48">unsigned</name></type> <name pos:start="5:50" pos:end="5:54">width</name></decl></parameter>,

                                        <parameter pos:start="7:41" pos:end="7:53"><decl pos:start="7:41" pos:end="7:53"><type pos:start="7:41" pos:end="7:53"><name pos:start="7:41" pos:end="7:48">uint64_t</name></type> <name pos:start="7:50" pos:end="7:53">data</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="57:1">{<block_content pos:start="11:5" pos:end="55:64">

    <decl_stmt pos:start="11:5" pos:end="13:62"><decl pos:start="11:5" pos:end="13:61"><type pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:23">MemoryRegionIORange</name> <modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:29">mrio</name>

        <init pos:start="13:9" pos:end="13:61">= <expr pos:start="13:11" pos:end="13:61"><call pos:start="13:11" pos:end="13:61"><name pos:start="13:11" pos:end="13:22">container_of</name><argument_list pos:start="13:23" pos:end="13:61">(<argument pos:start="13:24" pos:end="13:30"><expr pos:start="13:24" pos:end="13:30"><name pos:start="13:24" pos:end="13:30">iorange</name></expr></argument>, <argument pos:start="13:33" pos:end="13:51"><expr pos:start="13:33" pos:end="13:51"><name pos:start="13:33" pos:end="13:51">MemoryRegionIORange</name></expr></argument>, <argument pos:start="13:54" pos:end="13:60"><expr pos:start="13:54" pos:end="13:60"><name pos:start="13:54" pos:end="13:60">iorange</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">MemoryRegion</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:20">mr</name> <init pos:start="15:22" pos:end="15:31">= <expr pos:start="15:24" pos:end="15:31"><name pos:start="15:24" pos:end="15:31"><name pos:start="15:24" pos:end="15:27">mrio</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:31">mr</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:10">offset</name> <operator pos:start="19:12" pos:end="19:13">+=</operator> <name pos:start="19:15" pos:end="19:26"><name pos:start="19:15" pos:end="19:18">mrio</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:26">offset</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="47:5"><if pos:start="21:5" pos:end="47:5">if <condition pos:start="21:8" pos:end="21:28">(<expr pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:10">mr</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:15">ops</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:27">old_portio</name></name></expr>)</condition> <block pos:start="21:30" pos:end="47:5">{<block_content pos:start="23:9" pos:end="45:15">

        <decl_stmt pos:start="23:9" pos:end="25:65"><decl pos:start="23:9" pos:end="25:64"><type pos:start="23:9" pos:end="23:34"><specifier pos:start="23:9" pos:end="23:13">const</specifier> <name pos:start="23:15" pos:end="23:32">MemoryRegionPortio</name> <modifier pos:start="23:34" pos:end="23:34">*</modifier></type><name pos:start="23:35" pos:end="23:37">mrp</name> <init pos:start="23:39" pos:end="25:64">= <expr pos:start="23:41" pos:end="25:64"><call pos:start="23:41" pos:end="25:64"><name pos:start="23:41" pos:end="23:51">find_portio</name><argument_list pos:start="23:52" pos:end="25:64">(<argument pos:start="23:53" pos:end="23:54"><expr pos:start="23:53" pos:end="23:54"><name pos:start="23:53" pos:end="23:54">mr</name></expr></argument>, <argument pos:start="23:57" pos:end="23:77"><expr pos:start="23:57" pos:end="23:77"><name pos:start="23:57" pos:end="23:62">offset</name> <operator pos:start="23:64" pos:end="23:64">-</operator> <name pos:start="23:66" pos:end="23:77"><name pos:start="23:66" pos:end="23:69">mrio</name><operator pos:start="23:70" pos:end="23:71">-&gt;</operator><name pos:start="23:72" pos:end="23:77">offset</name></name></expr></argument>,

                                                    <argument pos:start="25:53" pos:end="25:57"><expr pos:start="25:53" pos:end="25:57"><name pos:start="25:53" pos:end="25:57">width</name></expr></argument>, <argument pos:start="25:60" pos:end="25:63"><expr pos:start="25:60" pos:end="25:63"><name pos:start="25:60" pos:end="25:63">true</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="29:9" pos:end="43:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:16">(<expr pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">mrp</name></expr>)</condition> <block pos:start="29:18" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:49">

            <expr_stmt pos:start="31:13" pos:end="31:49"><expr pos:start="31:13" pos:end="31:48"><call pos:start="31:13" pos:end="31:48"><name pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:15">mrp</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:22">write</name></name><argument_list pos:start="31:23" pos:end="31:48">(<argument pos:start="31:24" pos:end="31:33"><expr pos:start="31:24" pos:end="31:33"><name pos:start="31:24" pos:end="31:33"><name pos:start="31:24" pos:end="31:25">mr</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:33">opaque</name></name></expr></argument>, <argument pos:start="31:36" pos:end="31:41"><expr pos:start="31:36" pos:end="31:41"><name pos:start="31:36" pos:end="31:41">offset</name></expr></argument>, <argument pos:start="31:44" pos:end="31:47"><expr pos:start="31:44" pos:end="31:47"><name pos:start="31:44" pos:end="31:47">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="33:11" pos:end="43:9">else if <condition pos:start="33:19" pos:end="33:30">(<expr pos:start="33:20" pos:end="33:29"><name pos:start="33:20" pos:end="33:24">width</name> <operator pos:start="33:26" pos:end="33:27">==</operator> <literal type="number" pos:start="33:29" pos:end="33:29">2</literal></expr>)</condition> <block pos:start="33:32" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:58">

            <expr_stmt pos:start="35:13" pos:end="35:66"><expr pos:start="35:13" pos:end="35:65"><name pos:start="35:13" pos:end="35:15">mrp</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:65"><name pos:start="35:19" pos:end="35:29">find_portio</name><argument_list pos:start="35:30" pos:end="35:65">(<argument pos:start="35:31" pos:end="35:32"><expr pos:start="35:31" pos:end="35:32"><name pos:start="35:31" pos:end="35:32">mr</name></expr></argument>, <argument pos:start="35:35" pos:end="35:55"><expr pos:start="35:35" pos:end="35:55"><name pos:start="35:35" pos:end="35:40">offset</name> <operator pos:start="35:42" pos:end="35:42">-</operator> <name pos:start="35:44" pos:end="35:55"><name pos:start="35:44" pos:end="35:47">mrio</name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:55">offset</name></name></expr></argument>, <argument pos:start="35:58" pos:end="35:58"><expr pos:start="35:58" pos:end="35:58"><literal type="number" pos:start="35:58" pos:end="35:58">1</literal></expr></argument>, <argument pos:start="35:61" pos:end="35:64"><expr pos:start="35:61" pos:end="35:64"><name pos:start="35:61" pos:end="35:64">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:24"><expr pos:start="37:13" pos:end="37:23"><call pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:18">assert</name><argument_list pos:start="37:19" pos:end="37:23">(<argument pos:start="37:20" pos:end="37:22"><expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">mrp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:56"><expr pos:start="39:13" pos:end="39:55"><call pos:start="39:13" pos:end="39:55"><name pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:15">mrp</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:22">write</name></name><argument_list pos:start="39:23" pos:end="39:55">(<argument pos:start="39:24" pos:end="39:33"><expr pos:start="39:24" pos:end="39:33"><name pos:start="39:24" pos:end="39:33"><name pos:start="39:24" pos:end="39:25">mr</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:33">opaque</name></name></expr></argument>, <argument pos:start="39:36" pos:end="39:41"><expr pos:start="39:36" pos:end="39:41"><name pos:start="39:36" pos:end="39:41">offset</name></expr></argument>, <argument pos:start="39:44" pos:end="39:54"><expr pos:start="39:44" pos:end="39:54"><name pos:start="39:44" pos:end="39:47">data</name> <operator pos:start="39:49" pos:end="39:49">&amp;</operator> <literal type="number" pos:start="39:51" pos:end="39:54">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:58"><expr pos:start="41:13" pos:end="41:57"><call pos:start="41:13" pos:end="41:57"><name pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:15">mrp</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:22">write</name></name><argument_list pos:start="41:23" pos:end="41:57">(<argument pos:start="41:24" pos:end="41:33"><expr pos:start="41:24" pos:end="41:33"><name pos:start="41:24" pos:end="41:33"><name pos:start="41:24" pos:end="41:25">mr</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:33">opaque</name></name></expr></argument>, <argument pos:start="41:36" pos:end="41:45"><expr pos:start="41:36" pos:end="41:45"><name pos:start="41:36" pos:end="41:41">offset</name> <operator pos:start="41:43" pos:end="41:43">+</operator> <literal type="number" pos:start="41:45" pos:end="41:45">1</literal></expr></argument>, <argument pos:start="41:48" pos:end="41:56"><expr pos:start="41:48" pos:end="41:56"><name pos:start="41:48" pos:end="41:51">data</name> <operator pos:start="41:53" pos:end="41:54">&gt;&gt;</operator> <literal type="number" pos:start="41:56" pos:end="41:56">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="45:9" pos:end="45:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="55:64"><expr pos:start="49:5" pos:end="55:63"><call pos:start="49:5" pos:end="55:63"><name pos:start="49:5" pos:end="49:29">access_with_adjusted_size</name><argument_list pos:start="49:30" pos:end="55:63">(<argument pos:start="49:31" pos:end="49:36"><expr pos:start="49:31" pos:end="49:36"><name pos:start="49:31" pos:end="49:36">offset</name></expr></argument>, <argument pos:start="49:39" pos:end="49:43"><expr pos:start="49:39" pos:end="49:43"><operator pos:start="49:39" pos:end="49:39">&amp;</operator><name pos:start="49:40" pos:end="49:43">data</name></expr></argument>, <argument pos:start="49:46" pos:end="49:50"><expr pos:start="49:46" pos:end="49:50"><name pos:start="49:46" pos:end="49:50">width</name></expr></argument>,

                              <argument pos:start="51:31" pos:end="51:59"><expr pos:start="51:31" pos:end="51:59"><name pos:start="51:31" pos:end="51:59"><name pos:start="51:31" pos:end="51:32">mr</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:37">ops</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:43">impl</name><operator pos:start="51:44" pos:end="51:44">.</operator><name pos:start="51:45" pos:end="51:59">min_access_size</name></name></expr></argument>,

                              <argument pos:start="53:31" pos:end="53:59"><expr pos:start="53:31" pos:end="53:59"><name pos:start="53:31" pos:end="53:59"><name pos:start="53:31" pos:end="53:32">mr</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:37">ops</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:43">impl</name><operator pos:start="53:44" pos:end="53:44">.</operator><name pos:start="53:45" pos:end="53:59">max_access_size</name></name></expr></argument>,

                              <argument pos:start="55:31" pos:end="55:58"><expr pos:start="55:31" pos:end="55:58"><name pos:start="55:31" pos:end="55:58">memory_region_write_accessor</name></expr></argument>, <argument pos:start="55:61" pos:end="55:62"><expr pos:start="55:61" pos:end="55:62"><name pos:start="55:61" pos:end="55:62">mr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
