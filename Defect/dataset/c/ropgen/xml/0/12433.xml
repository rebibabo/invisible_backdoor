<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12433.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:47">vaapi_encode_h264_write_extra_header</name><parameter_list pos:start="1:48" pos:end="7:77">(<parameter pos:start="1:49" pos:end="1:69"><decl pos:start="1:49" pos:end="1:69"><type pos:start="1:49" pos:end="1:69"><name pos:start="1:49" pos:end="1:62">AVCodecContext</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">avctx</name></decl></parameter>,

                                                <parameter pos:start="3:49" pos:end="3:71"><decl pos:start="3:49" pos:end="3:71"><type pos:start="3:49" pos:end="3:71"><name pos:start="3:49" pos:end="3:66">VAAPIEncodePicture</name> <modifier pos:start="3:68" pos:end="3:68">*</modifier></type><name pos:start="3:69" pos:end="3:71">pic</name></decl></parameter>,

                                                <parameter pos:start="5:49" pos:end="5:57"><decl pos:start="5:49" pos:end="5:57"><type pos:start="5:49" pos:end="5:57"><name pos:start="5:49" pos:end="5:51">int</name></type> <name pos:start="5:53" pos:end="5:57">index</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:68"><decl pos:start="5:60" pos:end="5:68"><type pos:start="5:60" pos:end="5:68"><name pos:start="5:60" pos:end="5:62">int</name> <modifier pos:start="5:64" pos:end="5:64">*</modifier></type><name pos:start="5:65" pos:end="5:68">type</name></decl></parameter>,

                                                <parameter pos:start="7:49" pos:end="7:58"><decl pos:start="7:49" pos:end="7:58"><type pos:start="7:49" pos:end="7:58"><name pos:start="7:49" pos:end="7:52">char</name> <modifier pos:start="7:54" pos:end="7:54">*</modifier></type><name pos:start="7:55" pos:end="7:58">data</name></decl></parameter>, <parameter pos:start="7:61" pos:end="7:76"><decl pos:start="7:61" pos:end="7:76"><type pos:start="7:61" pos:end="7:76"><name pos:start="7:61" pos:end="7:66">size_t</name> <modifier pos:start="7:68" pos:end="7:68">*</modifier></type><name pos:start="7:69" pos:end="7:76">data_len</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="157:1">{<block_content pos:start="11:5" pos:end="155:15">

    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:51"><type pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:22">VAAPIEncodeContext</name>      <modifier pos:start="11:29" pos:end="11:29">*</modifier></type><name pos:start="11:30" pos:end="11:32">ctx</name> <init pos:start="11:34" pos:end="11:51">= <expr pos:start="11:36" pos:end="11:51"><name pos:start="11:36" pos:end="11:51"><name pos:start="11:36" pos:end="11:40">avctx</name><operator pos:start="11:41" pos:end="11:42">-&gt;</operator><name pos:start="11:43" pos:end="11:51">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:50"><decl pos:start="13:5" pos:end="13:49"><type pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:26">VAAPIEncodeH264Context</name> <modifier pos:start="13:28" pos:end="13:28">*</modifier></type><name pos:start="13:29" pos:end="13:32">priv</name> <init pos:start="13:34" pos:end="13:49">= <expr pos:start="13:36" pos:end="13:49"><name pos:start="13:36" pos:end="13:49"><name pos:start="13:36" pos:end="13:38">ctx</name><operator pos:start="13:39" pos:end="13:40">-&gt;</operator><name pos:start="13:41" pos:end="13:49">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:54"><decl pos:start="15:5" pos:end="15:53"><type pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:26">VAAPIEncodeH264Options</name>  <modifier pos:start="15:29" pos:end="15:29">*</modifier></type><name pos:start="15:30" pos:end="15:32">opt</name> <init pos:start="15:34" pos:end="15:53">= <expr pos:start="15:36" pos:end="15:53"><name pos:start="15:36" pos:end="15:53"><name pos:start="15:36" pos:end="15:38">ctx</name><operator pos:start="15:39" pos:end="15:40">-&gt;</operator><name pos:start="15:41" pos:end="15:53">codec_options</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:62"><decl pos:start="17:5" pos:end="17:61"><type pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:26">CodedBitstreamFragment</name>   <modifier pos:start="17:30" pos:end="17:30">*</modifier></type><name pos:start="17:31" pos:end="17:32">au</name> <init pos:start="17:34" pos:end="17:61">= <expr pos:start="17:36" pos:end="17:61"><operator pos:start="17:36" pos:end="17:36">&amp;</operator><name pos:start="17:37" pos:end="17:61"><name pos:start="17:37" pos:end="17:40">priv</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:61">current_access_unit</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:15"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">err</name></decl>, <decl pos:start="19:14" pos:end="19:14"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:14" pos:end="19:14">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="147:5"><if pos:start="23:5" pos:end="121:5">if <condition pos:start="23:8" pos:end="23:25">(<expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:12">priv</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:24">sei_needed</name></name></expr>)</condition> <block pos:start="23:27" pos:end="121:5">{<block_content pos:start="25:9" pos:end="120:0">

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:29">(<expr pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:16">priv</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:28">aud_needed</name></name></expr>)</condition> <block pos:start="25:31" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:33">

            <expr_stmt pos:start="27:13" pos:end="27:61"><expr pos:start="27:13" pos:end="27:60"><call pos:start="27:13" pos:end="27:60"><name pos:start="27:13" pos:end="27:37">vaapi_encode_h264_add_nal</name><argument_list pos:start="27:38" pos:end="27:60">(<argument pos:start="27:39" pos:end="27:43"><expr pos:start="27:39" pos:end="27:43"><name pos:start="27:39" pos:end="27:43">avctx</name></expr></argument>, <argument pos:start="27:46" pos:end="27:47"><expr pos:start="27:46" pos:end="27:47"><name pos:start="27:46" pos:end="27:47">au</name></expr></argument>, <argument pos:start="27:50" pos:end="27:59"><expr pos:start="27:50" pos:end="27:59"><operator pos:start="27:50" pos:end="27:50">&amp;</operator><name pos:start="27:51" pos:end="27:59"><name pos:start="27:51" pos:end="27:54">priv</name><operator pos:start="27:55" pos:end="27:56">-&gt;</operator><name pos:start="27:57" pos:end="27:59">aud</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:33"><expr pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:16">priv</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:28">aud_needed</name></name> <operator pos:start="29:30" pos:end="29:30">=</operator> <literal type="number" pos:start="29:32" pos:end="29:32">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:49"><expr pos:start="35:9" pos:end="35:48"><call pos:start="35:9" pos:end="35:48"><name pos:start="35:9" pos:end="35:14">memset</name><argument_list pos:start="35:15" pos:end="35:48">(<argument pos:start="35:16" pos:end="35:25"><expr pos:start="35:16" pos:end="35:25"><operator pos:start="35:16" pos:end="35:16">&amp;</operator><name pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:20">priv</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:25">sei</name></name></expr></argument>, <argument pos:start="35:28" pos:end="35:28"><expr pos:start="35:28" pos:end="35:28"><literal type="number" pos:start="35:28" pos:end="35:28">0</literal></expr></argument>, <argument pos:start="35:31" pos:end="35:47"><expr pos:start="35:31" pos:end="35:47"><sizeof pos:start="35:31" pos:end="35:47">sizeof<argument_list pos:start="35:37" pos:end="35:47">(<argument pos:start="35:38" pos:end="35:46"><expr pos:start="35:38" pos:end="35:46"><name pos:start="35:38" pos:end="35:46"><name pos:start="35:38" pos:end="35:41">priv</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:46">sei</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:63"><expr pos:start="37:9" pos:end="37:62"><name pos:start="37:9" pos:end="37:47"><name pos:start="37:9" pos:end="37:12">priv</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:17">sei</name><operator pos:start="37:18" pos:end="37:18">.</operator><name pos:start="37:19" pos:end="37:33">nal_unit_header</name><operator pos:start="37:34" pos:end="37:34">.</operator><name pos:start="37:35" pos:end="37:47">nal_unit_type</name></name> <operator pos:start="37:49" pos:end="37:49">=</operator> <name pos:start="37:51" pos:end="37:62">H264_NAL_SEI</name></expr>;</expr_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:14"><expr pos:start="41:9" pos:end="41:13"><name pos:start="41:9" pos:end="41:9">i</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <literal type="number" pos:start="41:13" pos:end="41:13">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="51:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="43:64">(<expr pos:start="43:13" pos:end="43:63"><name pos:start="43:13" pos:end="43:29"><name pos:start="43:13" pos:end="43:15">pic</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:29">encode_order</name></name> <operator pos:start="43:31" pos:end="43:32">==</operator> <literal type="number" pos:start="43:34" pos:end="43:34">0</literal> <operator pos:start="43:36" pos:end="43:37">&amp;&amp;</operator> <name pos:start="43:39" pos:end="43:46"><name pos:start="43:39" pos:end="43:41">opt</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:46">sei</name></name> <operator pos:start="43:48" pos:end="43:48">&amp;</operator> <name pos:start="43:50" pos:end="43:63">SEI_IDENTIFIER</name></expr>)</condition> <block pos:start="43:66" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:16">

            <expr_stmt pos:start="45:13" pos:end="45:85"><expr pos:start="45:13" pos:end="45:84"><name pos:start="45:13" pos:end="45:32"><name pos:start="45:13" pos:end="45:16">priv</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:21">sei</name><operator pos:start="45:22" pos:end="45:22">.</operator><name pos:start="45:23" pos:end="45:29">payload</name><index pos:start="45:30" pos:end="45:32">[<expr pos:start="45:31" pos:end="45:31"><name pos:start="45:31" pos:end="45:31">i</name></expr>]</index></name><operator pos:start="45:33" pos:end="45:33">.</operator><name pos:start="45:34" pos:end="45:45">payload_type</name> <operator pos:start="45:47" pos:end="45:47">=</operator> <name pos:start="45:49" pos:end="45:84">H264_SEI_TYPE_USER_DATA_UNREGISTERED</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:83"><expr pos:start="47:13" pos:end="47:82"><name pos:start="47:13" pos:end="47:32"><name pos:start="47:13" pos:end="47:16">priv</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:21">sei</name><operator pos:start="47:22" pos:end="47:22">.</operator><name pos:start="47:23" pos:end="47:29">payload</name><index pos:start="47:30" pos:end="47:32">[<expr pos:start="47:31" pos:end="47:31"><name pos:start="47:31" pos:end="47:31">i</name></expr>]</index></name><operator pos:start="47:33" pos:end="47:33">.</operator><name pos:start="47:34" pos:end="47:63"><name pos:start="47:34" pos:end="47:40">payload</name><operator pos:start="47:41" pos:end="47:41">.</operator><name pos:start="47:42" pos:end="47:63">user_data_unregistered</name></name> <operator pos:start="47:65" pos:end="47:65">=</operator> <name pos:start="47:67" pos:end="47:82"><name pos:start="47:67" pos:end="47:70">priv</name><operator pos:start="47:71" pos:end="47:72">-&gt;</operator><name pos:start="47:73" pos:end="47:82">identifier</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:16"><expr pos:start="49:13" pos:end="49:15"><operator pos:start="49:13" pos:end="49:14">++</operator><name pos:start="49:15" pos:end="49:15">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="71:9"><if pos:start="53:9" pos:end="71:9">if <condition pos:start="53:12" pos:end="53:34">(<expr pos:start="53:13" pos:end="53:33"><name pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:15">opt</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:20">sei</name></name> <operator pos:start="53:22" pos:end="53:22">&amp;</operator> <name pos:start="53:24" pos:end="53:33">SEI_TIMING</name></expr>)</condition> <block pos:start="53:36" pos:end="71:9">{<block_content pos:start="55:13" pos:end="69:16">

            <if_stmt pos:start="55:13" pos:end="63:13"><if pos:start="55:13" pos:end="63:13">if <condition pos:start="55:16" pos:end="55:46">(<expr pos:start="55:17" pos:end="55:45"><name pos:start="55:17" pos:end="55:25"><name pos:start="55:17" pos:end="55:19">pic</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:25">type</name></name> <operator pos:start="55:27" pos:end="55:28">==</operator> <name pos:start="55:30" pos:end="55:45">PICTURE_TYPE_IDR</name></expr>)</condition> <block pos:start="55:48" pos:end="63:13">{<block_content pos:start="57:17" pos:end="61:20">

                <expr_stmt pos:start="57:17" pos:end="57:83"><expr pos:start="57:17" pos:end="57:82"><name pos:start="57:17" pos:end="57:36"><name pos:start="57:17" pos:end="57:20">priv</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:25">sei</name><operator pos:start="57:26" pos:end="57:26">.</operator><name pos:start="57:27" pos:end="57:33">payload</name><index pos:start="57:34" pos:end="57:36">[<expr pos:start="57:35" pos:end="57:35"><name pos:start="57:35" pos:end="57:35">i</name></expr>]</index></name><operator pos:start="57:37" pos:end="57:37">.</operator><name pos:start="57:38" pos:end="57:49">payload_type</name> <operator pos:start="57:51" pos:end="57:51">=</operator> <name pos:start="57:53" pos:end="57:82">H264_SEI_TYPE_BUFFERING_PERIOD</name></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:87"><expr pos:start="59:17" pos:end="59:86"><name pos:start="59:17" pos:end="59:36"><name pos:start="59:17" pos:end="59:20">priv</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:25">sei</name><operator pos:start="59:26" pos:end="59:26">.</operator><name pos:start="59:27" pos:end="59:33">payload</name><index pos:start="59:34" pos:end="59:36">[<expr pos:start="59:35" pos:end="59:35"><name pos:start="59:35" pos:end="59:35">i</name></expr>]</index></name><operator pos:start="59:37" pos:end="59:37">.</operator><name pos:start="59:38" pos:end="59:61"><name pos:start="59:38" pos:end="59:44">payload</name><operator pos:start="59:45" pos:end="59:45">.</operator><name pos:start="59:46" pos:end="59:61">buffering_period</name></name> <operator pos:start="59:63" pos:end="59:63">=</operator> <name pos:start="59:65" pos:end="59:86"><name pos:start="59:65" pos:end="59:68">priv</name><operator pos:start="59:69" pos:end="59:70">-&gt;</operator><name pos:start="59:71" pos:end="59:86">buffering_period</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:20"><expr pos:start="61:17" pos:end="61:19"><operator pos:start="61:17" pos:end="61:18">++</operator><name pos:start="61:19" pos:end="61:19">i</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:73"><expr pos:start="65:13" pos:end="65:72"><name pos:start="65:13" pos:end="65:32"><name pos:start="65:13" pos:end="65:16">priv</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:21">sei</name><operator pos:start="65:22" pos:end="65:22">.</operator><name pos:start="65:23" pos:end="65:29">payload</name><index pos:start="65:30" pos:end="65:32">[<expr pos:start="65:31" pos:end="65:31"><name pos:start="65:31" pos:end="65:31">i</name></expr>]</index></name><operator pos:start="65:33" pos:end="65:33">.</operator><name pos:start="65:34" pos:end="65:45">payload_type</name> <operator pos:start="65:47" pos:end="65:47">=</operator> <name pos:start="65:49" pos:end="65:72">H264_SEI_TYPE_PIC_TIMING</name></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:71"><expr pos:start="67:13" pos:end="67:70"><name pos:start="67:13" pos:end="67:32"><name pos:start="67:13" pos:end="67:16">priv</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:21">sei</name><operator pos:start="67:22" pos:end="67:22">.</operator><name pos:start="67:23" pos:end="67:29">payload</name><index pos:start="67:30" pos:end="67:32">[<expr pos:start="67:31" pos:end="67:31"><name pos:start="67:31" pos:end="67:31">i</name></expr>]</index></name><operator pos:start="67:33" pos:end="67:33">.</operator><name pos:start="67:34" pos:end="67:51"><name pos:start="67:34" pos:end="67:40">payload</name><operator pos:start="67:41" pos:end="67:41">.</operator><name pos:start="67:42" pos:end="67:51">pic_timing</name></name> <operator pos:start="67:53" pos:end="67:53">=</operator> <name pos:start="67:55" pos:end="67:70"><name pos:start="67:55" pos:end="67:58">priv</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:70">pic_timing</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:16"><expr pos:start="69:13" pos:end="69:15"><operator pos:start="69:13" pos:end="69:14">++</operator><name pos:start="69:15" pos:end="69:15">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="81:9">if <condition pos:start="73:12" pos:end="73:73">(<expr pos:start="73:13" pos:end="73:72"><name pos:start="73:13" pos:end="73:20"><name pos:start="73:13" pos:end="73:15">opt</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:20">sei</name></name> <operator pos:start="73:22" pos:end="73:22">&amp;</operator> <name pos:start="73:24" pos:end="73:41">SEI_RECOVERY_POINT</name> <operator pos:start="73:43" pos:end="73:44">&amp;&amp;</operator> <name pos:start="73:46" pos:end="73:54"><name pos:start="73:46" pos:end="73:48">pic</name><operator pos:start="73:49" pos:end="73:50">-&gt;</operator><name pos:start="73:51" pos:end="73:54">type</name></name> <operator pos:start="73:56" pos:end="73:57">==</operator> <name pos:start="73:59" pos:end="73:72">PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="73:75" pos:end="81:9">{<block_content pos:start="75:13" pos:end="79:16">

            <expr_stmt pos:start="75:13" pos:end="75:77"><expr pos:start="75:13" pos:end="75:76"><name pos:start="75:13" pos:end="75:32"><name pos:start="75:13" pos:end="75:16">priv</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:21">sei</name><operator pos:start="75:22" pos:end="75:22">.</operator><name pos:start="75:23" pos:end="75:29">payload</name><index pos:start="75:30" pos:end="75:32">[<expr pos:start="75:31" pos:end="75:31"><name pos:start="75:31" pos:end="75:31">i</name></expr>]</index></name><operator pos:start="75:33" pos:end="75:33">.</operator><name pos:start="75:34" pos:end="75:45">payload_type</name> <operator pos:start="75:47" pos:end="75:47">=</operator> <name pos:start="75:49" pos:end="75:76">H264_SEI_TYPE_RECOVERY_POINT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:79"><expr pos:start="77:13" pos:end="77:78"><name pos:start="77:13" pos:end="77:32"><name pos:start="77:13" pos:end="77:16">priv</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:21">sei</name><operator pos:start="77:22" pos:end="77:22">.</operator><name pos:start="77:23" pos:end="77:29">payload</name><index pos:start="77:30" pos:end="77:32">[<expr pos:start="77:31" pos:end="77:31"><name pos:start="77:31" pos:end="77:31">i</name></expr>]</index></name><operator pos:start="77:33" pos:end="77:33">.</operator><name pos:start="77:34" pos:end="77:55"><name pos:start="77:34" pos:end="77:40">payload</name><operator pos:start="77:41" pos:end="77:41">.</operator><name pos:start="77:42" pos:end="77:55">recovery_point</name></name> <operator pos:start="77:57" pos:end="77:57">=</operator> <name pos:start="77:59" pos:end="77:78"><name pos:start="77:59" pos:end="77:62">priv</name><operator pos:start="77:63" pos:end="77:64">-&gt;</operator><name pos:start="77:65" pos:end="77:78">recovery_point</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:16"><expr pos:start="79:13" pos:end="79:15"><operator pos:start="79:13" pos:end="79:14">++</operator><name pos:start="79:15" pos:end="79:15">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:36"><expr pos:start="85:9" pos:end="85:35"><name pos:start="85:9" pos:end="85:31"><name pos:start="85:9" pos:end="85:12">priv</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:17">sei</name><operator pos:start="85:18" pos:end="85:18">.</operator><name pos:start="85:19" pos:end="85:31">payload_count</name></name> <operator pos:start="85:33" pos:end="85:33">=</operator> <name pos:start="85:35" pos:end="85:35">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:48"><expr pos:start="87:9" pos:end="87:47"><call pos:start="87:9" pos:end="87:47"><name pos:start="87:9" pos:end="87:18">av_assert0</name><argument_list pos:start="87:19" pos:end="87:47">(<argument pos:start="87:20" pos:end="87:46"><expr pos:start="87:20" pos:end="87:46"><name pos:start="87:20" pos:end="87:42"><name pos:start="87:20" pos:end="87:23">priv</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:28">sei</name><operator pos:start="87:29" pos:end="87:29">.</operator><name pos:start="87:30" pos:end="87:42">payload_count</name></name> <operator pos:start="87:44" pos:end="87:44">&gt;</operator> <literal type="number" pos:start="87:46" pos:end="87:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:63"><expr pos:start="91:9" pos:end="91:62"><name pos:start="91:9" pos:end="91:11">err</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <call pos:start="91:15" pos:end="91:62"><name pos:start="91:15" pos:end="91:39">vaapi_encode_h264_add_nal</name><argument_list pos:start="91:40" pos:end="91:62">(<argument pos:start="91:41" pos:end="91:45"><expr pos:start="91:41" pos:end="91:45"><name pos:start="91:41" pos:end="91:45">avctx</name></expr></argument>, <argument pos:start="91:48" pos:end="91:49"><expr pos:start="91:48" pos:end="91:49"><name pos:start="91:48" pos:end="91:49">au</name></expr></argument>, <argument pos:start="91:52" pos:end="91:61"><expr pos:start="91:52" pos:end="91:61"><operator pos:start="91:52" pos:end="91:52">&amp;</operator><name pos:start="91:53" pos:end="91:61"><name pos:start="91:53" pos:end="91:56">priv</name><operator pos:start="91:57" pos:end="91:58">-&gt;</operator><name pos:start="91:59" pos:end="91:61">sei</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="95:22"><if pos:start="93:9" pos:end="95:22">if <condition pos:start="93:12" pos:end="93:20">(<expr pos:start="93:13" pos:end="93:19"><name pos:start="93:13" pos:end="93:15">err</name> <operator pos:start="93:17" pos:end="93:17">&lt;</operator> <literal type="number" pos:start="93:19" pos:end="93:19">0</literal></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:22"><block_content pos:start="95:13" pos:end="95:22">

            <goto pos:start="95:13" pos:end="95:22">goto <name pos:start="95:18" pos:end="95:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:29"><expr pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:12">priv</name><operator pos:start="97:13" pos:end="97:14">-&gt;</operator><name pos:start="97:15" pos:end="97:24">sei_needed</name></name> <operator pos:start="97:26" pos:end="97:26">=</operator> <literal type="number" pos:start="97:28" pos:end="97:28">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:77"><expr pos:start="101:9" pos:end="101:76"><name pos:start="101:9" pos:end="101:11">err</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="101:76"><name pos:start="101:15" pos:end="101:49">vaapi_encode_h264_write_access_unit</name><argument_list pos:start="101:50" pos:end="101:76">(<argument pos:start="101:51" pos:end="101:55"><expr pos:start="101:51" pos:end="101:55"><name pos:start="101:51" pos:end="101:55">avctx</name></expr></argument>, <argument pos:start="101:58" pos:end="101:61"><expr pos:start="101:58" pos:end="101:61"><name pos:start="101:58" pos:end="101:61">data</name></expr></argument>, <argument pos:start="101:64" pos:end="101:71"><expr pos:start="101:64" pos:end="101:71"><name pos:start="101:64" pos:end="101:71">data_len</name></expr></argument>, <argument pos:start="101:74" pos:end="101:75"><expr pos:start="101:74" pos:end="101:75"><name pos:start="101:74" pos:end="101:75">au</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="105:22"><if pos:start="103:9" pos:end="105:22">if <condition pos:start="103:12" pos:end="103:20">(<expr pos:start="103:13" pos:end="103:19"><name pos:start="103:13" pos:end="103:15">err</name> <operator pos:start="103:17" pos:end="103:17">&lt;</operator> <literal type="number" pos:start="103:19" pos:end="103:19">0</literal></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:22"><block_content pos:start="105:13" pos:end="105:22">

            <goto pos:start="105:13" pos:end="105:22">goto <name pos:start="105:18" pos:end="105:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="109:9" pos:end="109:47"><expr pos:start="109:9" pos:end="109:46"><call pos:start="109:9" pos:end="109:46"><name pos:start="109:9" pos:end="109:30">ff_cbs_fragment_uninit</name><argument_list pos:start="109:31" pos:end="109:46">(<argument pos:start="109:32" pos:end="109:41"><expr pos:start="109:32" pos:end="109:41"><operator pos:start="109:32" pos:end="109:32">&amp;</operator><name pos:start="109:33" pos:end="109:41"><name pos:start="109:33" pos:end="109:36">priv</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:41">cbc</name></name></expr></argument>, <argument pos:start="109:44" pos:end="109:45"><expr pos:start="109:44" pos:end="109:45"><name pos:start="109:44" pos:end="109:45">au</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:41"><expr pos:start="113:9" pos:end="113:40"><operator pos:start="113:9" pos:end="113:9">*</operator><name pos:start="113:10" pos:end="113:13">type</name> <operator pos:start="113:15" pos:end="113:15">=</operator> <name pos:start="113:17" pos:end="113:40">VAEncPackedHeaderRawData</name></expr>;</expr_stmt>

        <return pos:start="115:9" pos:end="120:0">return <expr pos:start="115:16" pos:end="115:16"><literal type="number" pos:start="115:16" pos:end="115:16">0</literal></expr>;</return>



<cpp:if pos:start="119:1" pos:end="119:17">#<cpp:directive pos:start="119:2" pos:end="119:3">if</cpp:directive> <expr pos:start="119:5" pos:end="119:17"><operator pos:start="119:5" pos:end="119:5">!</operator><name pos:start="119:6" pos:end="119:17">HAVE_VAAPI_1</name></expr></cpp:if>

    </block_content>}</block></if> <if type="elseif" pos:start="121:7" pos:end="143:5">else if <condition pos:start="121:15" pos:end="121:47">(<expr pos:start="121:16" pos:end="121:46"><name pos:start="121:16" pos:end="121:46"><name pos:start="121:16" pos:end="121:19">priv</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:46">sei_cbr_workaround_needed</name></name></expr>)</condition> <block pos:start="121:49" pos:end="143:5">{<block_content pos:start="131:9" pos:end="140:0">

        <comment type="line" pos:start="123:9" pos:end="123:71">// Insert a zero-length header using the old SEI type.  This is</comment>

        <comment type="line" pos:start="125:9" pos:end="125:75">// required to avoid triggering broken behaviour on Intel platforms</comment>

        <comment type="line" pos:start="127:9" pos:end="127:71">// in CBR mode where an invalid SEI message is generated by the</comment>

        <comment type="line" pos:start="129:9" pos:end="129:47">// driver and inserted into the stream.</comment>

        <expr_stmt pos:start="131:9" pos:end="131:22"><expr pos:start="131:9" pos:end="131:21"><operator pos:start="131:9" pos:end="131:9">*</operator><name pos:start="131:10" pos:end="131:17">data_len</name> <operator pos:start="131:19" pos:end="131:19">=</operator> <literal type="number" pos:start="131:21" pos:end="131:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:42"><expr pos:start="133:9" pos:end="133:41"><operator pos:start="133:9" pos:end="133:9">*</operator><name pos:start="133:10" pos:end="133:13">type</name> <operator pos:start="133:15" pos:end="133:15">=</operator> <name pos:start="133:17" pos:end="133:41">VAEncPackedHeaderH264_SEI</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:44"><expr pos:start="135:9" pos:end="135:43"><name pos:start="135:9" pos:end="135:39"><name pos:start="135:9" pos:end="135:12">priv</name><operator pos:start="135:13" pos:end="135:14">-&gt;</operator><name pos:start="135:15" pos:end="135:39">sei_cbr_workaround_needed</name></name> <operator pos:start="135:41" pos:end="135:41">=</operator> <literal type="number" pos:start="135:43" pos:end="135:43">0</literal></expr>;</expr_stmt>

        <return pos:start="137:9" pos:end="140:0">return <expr pos:start="137:16" pos:end="137:16"><literal type="number" pos:start="137:16" pos:end="137:16">0</literal></expr>;</return>

<cpp:endif pos:start="139:1" pos:end="139:6">#<cpp:directive pos:start="139:2" pos:end="139:6">endif</cpp:directive></cpp:endif>



    </block_content>}</block></if> <else pos:start="143:7" pos:end="147:5">else <block pos:start="143:12" pos:end="147:5">{<block_content pos:start="145:9" pos:end="145:27">

        <return pos:start="145:9" pos:end="145:27">return <expr pos:start="145:16" pos:end="145:26"><name pos:start="145:16" pos:end="145:26">AVERROR_EOF</name></expr>;</return>

    </block_content>}</block></else></if_stmt>



<label pos:start="151:1" pos:end="151:5"><name pos:start="151:1" pos:end="151:4">fail</name>:</label>

    <expr_stmt pos:start="153:5" pos:end="153:43"><expr pos:start="153:5" pos:end="153:42"><call pos:start="153:5" pos:end="153:42"><name pos:start="153:5" pos:end="153:26">ff_cbs_fragment_uninit</name><argument_list pos:start="153:27" pos:end="153:42">(<argument pos:start="153:28" pos:end="153:37"><expr pos:start="153:28" pos:end="153:37"><operator pos:start="153:28" pos:end="153:28">&amp;</operator><name pos:start="153:29" pos:end="153:37"><name pos:start="153:29" pos:end="153:32">priv</name><operator pos:start="153:33" pos:end="153:34">-&gt;</operator><name pos:start="153:35" pos:end="153:37">cbc</name></name></expr></argument>, <argument pos:start="153:40" pos:end="153:41"><expr pos:start="153:40" pos:end="153:41"><name pos:start="153:40" pos:end="153:41">au</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="155:5" pos:end="155:15">return <expr pos:start="155:12" pos:end="155:14"><name pos:start="155:12" pos:end="155:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
