<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9354.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:19"><name pos:start="1:1" pos:end="1:13">hadamard_func</name><argument_list pos:start="1:14" pos:end="1:19">(<argument pos:start="1:15" pos:end="1:18">mmx2</argument>)</argument_list></macro>

<macro pos:start="3:1" pos:end="3:19"><name pos:start="3:1" pos:end="3:13">hadamard_func</name><argument_list pos:start="3:14" pos:end="3:19">(<argument pos:start="3:15" pos:end="3:18">sse2</argument>)</argument_list></macro>

<macro pos:start="5:1" pos:end="5:20"><name pos:start="5:1" pos:end="5:13">hadamard_func</name><argument_list pos:start="5:14" pos:end="5:20">(<argument pos:start="5:15" pos:end="5:19">ssse3</argument>)</argument_list></macro>



<function pos:start="9:1" pos:end="231:1"><type pos:start="9:1" pos:end="9:4"><name pos:start="9:1" pos:end="9:4">void</name></type> <name pos:start="9:6" pos:end="9:27">ff_dsputilenc_init_mmx</name><parameter_list pos:start="9:28" pos:end="9:65">(<parameter pos:start="9:29" pos:end="9:41"><decl pos:start="9:29" pos:end="9:41"><type pos:start="9:29" pos:end="9:41"><name pos:start="9:29" pos:end="9:38">DSPContext</name><modifier pos:start="9:39" pos:end="9:39">*</modifier></type> <name pos:start="9:41" pos:end="9:41">c</name></decl></parameter>, <parameter pos:start="9:44" pos:end="9:64"><decl pos:start="9:44" pos:end="9:64"><type pos:start="9:44" pos:end="9:64"><name pos:start="9:44" pos:end="9:57">AVCodecContext</name> <modifier pos:start="9:59" pos:end="9:59">*</modifier></type><name pos:start="9:60" pos:end="9:64">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="231:1">{<block_content pos:start="13:5" pos:end="229:38">

    <decl_stmt pos:start="13:5" pos:end="18:0"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">mm_flags</name> <init pos:start="13:18" pos:end="13:37">= <expr pos:start="13:20" pos:end="13:37"><call pos:start="13:20" pos:end="13:37"><name pos:start="13:20" pos:end="13:35">av_get_cpu_flags</name><argument_list pos:start="13:36" pos:end="13:37">()</argument_list></call></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="17:1" pos:end="17:19">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:19">HAVE_INLINE_ASM</name></expr></cpp:if>

    <decl_stmt pos:start="19:5" pos:end="19:47"><decl pos:start="19:5" pos:end="19:46"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">bit_depth</name> <init pos:start="19:19" pos:end="19:46">= <expr pos:start="19:21" pos:end="19:46"><name pos:start="19:21" pos:end="19:46"><name pos:start="19:21" pos:end="19:25">avctx</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:46">bits_per_raw_sample</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="174:0"><if pos:start="23:5" pos:end="174:0">if <condition pos:start="23:8" pos:end="23:35">(<expr pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:16">mm_flags</name> <operator pos:start="23:18" pos:end="23:18">&amp;</operator> <name pos:start="23:20" pos:end="23:34">AV_CPU_FLAG_MMX</name></expr>)</condition> <block pos:start="23:37" pos:end="174:0">{<block_content pos:start="25:9" pos:end="165:9">

        <decl_stmt pos:start="25:9" pos:end="25:45"><decl pos:start="25:9" pos:end="25:44"><type pos:start="25:9" pos:end="25:17"><specifier pos:start="25:9" pos:end="25:13">const</specifier> <name pos:start="25:15" pos:end="25:17">int</name></type> <name pos:start="25:19" pos:end="25:26">dct_algo</name> <init pos:start="25:28" pos:end="25:44">= <expr pos:start="25:30" pos:end="25:44"><name pos:start="25:30" pos:end="25:44"><name pos:start="25:30" pos:end="25:34">avctx</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:44">dct_algo</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="27:9" pos:end="45:9"><if pos:start="27:9" pos:end="45:9">if <condition pos:start="27:12" pos:end="29:60">(<expr pos:start="27:13" pos:end="29:59"><name pos:start="27:13" pos:end="27:38"><name pos:start="27:13" pos:end="27:17">avctx</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:38">bits_per_raw_sample</name></name> <operator pos:start="27:40" pos:end="27:41">&lt;=</operator> <literal type="number" pos:start="27:43" pos:end="27:43">8</literal> <operator pos:start="27:45" pos:end="27:46">&amp;&amp;</operator>

            <operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:21">dct_algo</name><operator pos:start="29:22" pos:end="29:23">==</operator><name pos:start="29:24" pos:end="29:34">FF_DCT_AUTO</name> <operator pos:start="29:36" pos:end="29:37">||</operator> <name pos:start="29:39" pos:end="29:46">dct_algo</name><operator pos:start="29:47" pos:end="29:48">==</operator><name pos:start="29:49" pos:end="29:58">FF_DCT_MMX</name><operator pos:start="29:59" pos:end="29:59">)</operator></expr>)</condition> <block pos:start="29:62" pos:end="45:9">{<block_content pos:start="31:13" pos:end="43:13">

            <if_stmt pos:start="31:13" pos:end="43:13"><if pos:start="31:13" pos:end="35:13">if<condition pos:start="31:15" pos:end="31:43">(<expr pos:start="31:16" pos:end="31:42"><name pos:start="31:16" pos:end="31:23">mm_flags</name> <operator pos:start="31:25" pos:end="31:25">&amp;</operator> <name pos:start="31:27" pos:end="31:42">AV_CPU_FLAG_SSE2</name></expr>)</condition><block pos:start="31:44" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:39">

                <expr_stmt pos:start="33:17" pos:end="33:39"><expr pos:start="33:17" pos:end="33:38"><name pos:start="33:17" pos:end="33:23"><name pos:start="33:17" pos:end="33:17">c</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:23">fdct</name></name> <operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:38">ff_fdct_sse2</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="35:15" pos:end="39:13">else if <condition pos:start="35:23" pos:end="35:53">(<expr pos:start="35:24" pos:end="35:52"><name pos:start="35:24" pos:end="35:31">mm_flags</name> <operator pos:start="35:33" pos:end="35:33">&amp;</operator> <name pos:start="35:35" pos:end="35:52">AV_CPU_FLAG_MMXEXT</name></expr>)</condition> <block pos:start="35:55" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:39">

                <expr_stmt pos:start="37:17" pos:end="37:39"><expr pos:start="37:17" pos:end="37:38"><name pos:start="37:17" pos:end="37:23"><name pos:start="37:17" pos:end="37:17">c</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:23">fdct</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <name pos:start="37:27" pos:end="37:38">ff_fdct_mmx2</name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="39:14" pos:end="43:13">else<block pos:start="39:18" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:38">

                <expr_stmt pos:start="41:17" pos:end="41:38"><expr pos:start="41:17" pos:end="41:37"><name pos:start="41:17" pos:end="41:23"><name pos:start="41:17" pos:end="41:17">c</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:23">fdct</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator> <name pos:start="41:27" pos:end="41:37">ff_fdct_mmx</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="49:9" pos:end="51:43"><if pos:start="49:9" pos:end="51:43">if <condition pos:start="49:12" pos:end="49:27">(<expr pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:21">bit_depth</name> <operator pos:start="49:23" pos:end="49:24">&lt;=</operator> <literal type="number" pos:start="49:26" pos:end="49:26">8</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:43"><block_content pos:start="51:13" pos:end="51:43">

            <expr_stmt pos:start="51:13" pos:end="51:43"><expr pos:start="51:13" pos:end="51:42"><name pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:13">c</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:25">get_pixels</name></name> <operator pos:start="51:27" pos:end="51:27">=</operator> <name pos:start="51:29" pos:end="51:42">get_pixels_mmx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:41"><expr pos:start="53:9" pos:end="53:40"><name pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:9">c</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:22">diff_pixels</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:40">diff_pixels_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:35"><expr pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:9">c</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:18">pix_sum</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:34">pix_sum16_mmx</name></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:9">c</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:21">diff_bytes</name></name><operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:37">diff_bytes_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:48"><expr pos:start="61:9" pos:end="61:47"><name pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:9">c</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:26">sum_abs_dctelem</name></name><operator pos:start="61:27" pos:end="61:27">=</operator> <name pos:start="61:29" pos:end="61:47">sum_abs_dctelem_mmx</name></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:37"><expr pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:9">c</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:20">pix_norm1</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:36">pix_norm1_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:30"><expr pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:17"><name pos:start="67:9" pos:end="67:9">c</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:14">sse</name><index pos:start="67:15" pos:end="67:17">[<expr pos:start="67:16" pos:end="67:16"><literal type="number" pos:start="67:16" pos:end="67:16">0</literal></expr>]</index></name> <operator pos:start="67:19" pos:end="67:19">=</operator> <name pos:start="67:21" pos:end="67:29">sse16_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:29"><expr pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:9">c</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:14">sse</name><index pos:start="69:15" pos:end="69:17">[<expr pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">1</literal></expr>]</index></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:28">sse8_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:37"><expr pos:start="71:9" pos:end="71:36"><name pos:start="71:9" pos:end="71:18"><name pos:start="71:9" pos:end="71:9">c</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:15">vsad</name><index pos:start="71:16" pos:end="71:18">[<expr pos:start="71:17" pos:end="71:17"><literal type="number" pos:start="71:17" pos:end="71:17">4</literal></expr>]</index></name><operator pos:start="71:19" pos:end="71:19">=</operator> <name pos:start="71:21" pos:end="71:36">vsad_intra16_mmx</name></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:32"><expr pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:9">c</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:15">nsse</name><index pos:start="75:16" pos:end="75:18">[<expr pos:start="75:17" pos:end="75:17"><literal type="number" pos:start="75:17" pos:end="75:17">0</literal></expr>]</index></name> <operator pos:start="75:20" pos:end="75:20">=</operator> <name pos:start="75:22" pos:end="75:31">nsse16_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:31"><expr pos:start="77:9" pos:end="77:30"><name pos:start="77:9" pos:end="77:18"><name pos:start="77:9" pos:end="77:9">c</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:15">nsse</name><index pos:start="77:16" pos:end="77:18">[<expr pos:start="77:17" pos:end="77:17"><literal type="number" pos:start="77:17" pos:end="77:17">1</literal></expr>]</index></name> <operator pos:start="77:20" pos:end="77:20">=</operator> <name pos:start="77:22" pos:end="77:30">nsse8_mmx</name></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="83:9"><if pos:start="79:9" pos:end="83:9">if<condition pos:start="79:11" pos:end="79:49">(<expr pos:start="79:12" pos:end="79:48"><operator pos:start="79:12" pos:end="79:12">!</operator><operator pos:start="79:13" pos:end="79:13">(</operator><name pos:start="79:14" pos:end="79:25"><name pos:start="79:14" pos:end="79:18">avctx</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:25">flags</name></name> <operator pos:start="79:27" pos:end="79:27">&amp;</operator> <name pos:start="79:29" pos:end="79:47">CODEC_FLAG_BITEXACT</name><operator pos:start="79:48" pos:end="79:48">)</operator></expr>)</condition><block pos:start="79:50" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:36">

            <expr_stmt pos:start="81:13" pos:end="81:36"><expr pos:start="81:13" pos:end="81:35"><name pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:13">c</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:19">vsad</name><index pos:start="81:20" pos:end="81:22">[<expr pos:start="81:21" pos:end="81:21"><literal type="number" pos:start="81:21" pos:end="81:21">0</literal></expr>]</index></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <name pos:start="81:26" pos:end="81:35">vsad16_mmx</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="87:9" pos:end="91:9"><if pos:start="87:9" pos:end="91:9">if<condition pos:start="87:11" pos:end="87:49">(<expr pos:start="87:12" pos:end="87:48"><operator pos:start="87:12" pos:end="87:12">!</operator><operator pos:start="87:13" pos:end="87:13">(</operator><name pos:start="87:14" pos:end="87:25"><name pos:start="87:14" pos:end="87:18">avctx</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:25">flags</name></name> <operator pos:start="87:27" pos:end="87:27">&amp;</operator> <name pos:start="87:29" pos:end="87:47">CODEC_FLAG_BITEXACT</name><operator pos:start="87:48" pos:end="87:48">)</operator></expr>)</condition><block pos:start="87:50" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:46">

            <expr_stmt pos:start="89:13" pos:end="89:46"><expr pos:start="89:13" pos:end="89:45"><name pos:start="89:13" pos:end="89:27"><name pos:start="89:13" pos:end="89:13">c</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:27">try_8x8basis</name></name><operator pos:start="89:28" pos:end="89:28">=</operator> <name pos:start="89:30" pos:end="89:45">try_8x8basis_mmx</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:42"><expr pos:start="93:9" pos:end="93:41"><name pos:start="93:9" pos:end="93:23"><name pos:start="93:9" pos:end="93:9">c</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:23">add_8x8basis</name></name><operator pos:start="93:24" pos:end="93:24">=</operator> <name pos:start="93:26" pos:end="93:41">add_8x8basis_mmx</name></expr>;</expr_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:53"><expr pos:start="97:9" pos:end="97:52"><name pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:9">c</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:28">ssd_int8_vs_int16</name></name> <operator pos:start="97:30" pos:end="97:30">=</operator> <name pos:start="97:32" pos:end="97:52">ssd_int8_vs_int16_mmx</name></expr>;</expr_stmt>



        <if_stmt pos:start="101:9" pos:end="119:9"><if pos:start="101:9" pos:end="119:9">if <condition pos:start="101:12" pos:end="101:42">(<expr pos:start="101:13" pos:end="101:41"><name pos:start="101:13" pos:end="101:20">mm_flags</name> <operator pos:start="101:22" pos:end="101:22">&amp;</operator> <name pos:start="101:24" pos:end="101:41">AV_CPU_FLAG_MMXEXT</name></expr>)</condition> <block pos:start="101:44" pos:end="119:9">{<block_content pos:start="103:13" pos:end="117:75">

            <expr_stmt pos:start="103:13" pos:end="103:53"><expr pos:start="103:13" pos:end="103:52"><name pos:start="103:13" pos:end="103:30"><name pos:start="103:13" pos:end="103:13">c</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:30">sum_abs_dctelem</name></name><operator pos:start="103:31" pos:end="103:31">=</operator> <name pos:start="103:33" pos:end="103:52">sum_abs_dctelem_mmx2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:42"><expr pos:start="105:13" pos:end="105:41"><name pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:13">c</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:19">vsad</name><index pos:start="105:20" pos:end="105:22">[<expr pos:start="105:21" pos:end="105:21"><literal type="number" pos:start="105:21" pos:end="105:21">4</literal></expr>]</index></name><operator pos:start="105:23" pos:end="105:23">=</operator> <name pos:start="105:25" pos:end="105:41">vsad_intra16_mmx2</name></expr>;</expr_stmt>



            <if_stmt pos:start="109:13" pos:end="113:13"><if pos:start="109:13" pos:end="113:13">if<condition pos:start="109:15" pos:end="109:53">(<expr pos:start="109:16" pos:end="109:52"><operator pos:start="109:16" pos:end="109:16">!</operator><operator pos:start="109:17" pos:end="109:17">(</operator><name pos:start="109:18" pos:end="109:29"><name pos:start="109:18" pos:end="109:22">avctx</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:29">flags</name></name> <operator pos:start="109:31" pos:end="109:31">&amp;</operator> <name pos:start="109:33" pos:end="109:51">CODEC_FLAG_BITEXACT</name><operator pos:start="109:52" pos:end="109:52">)</operator></expr>)</condition><block pos:start="109:54" pos:end="113:13">{<block_content pos:start="111:17" pos:end="111:41">

                <expr_stmt pos:start="111:17" pos:end="111:41"><expr pos:start="111:17" pos:end="111:40"><name pos:start="111:17" pos:end="111:26"><name pos:start="111:17" pos:end="111:17">c</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:23">vsad</name><index pos:start="111:24" pos:end="111:26">[<expr pos:start="111:25" pos:end="111:25"><literal type="number" pos:start="111:25" pos:end="111:25">0</literal></expr>]</index></name> <operator pos:start="111:28" pos:end="111:28">=</operator> <name pos:start="111:30" pos:end="111:40">vsad16_mmx2</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="117:13" pos:end="117:75"><expr pos:start="117:13" pos:end="117:74"><name pos:start="117:13" pos:end="117:41"><name pos:start="117:13" pos:end="117:13">c</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:41">sub_hfyu_median_prediction</name></name><operator pos:start="117:42" pos:end="117:42">=</operator> <name pos:start="117:44" pos:end="117:74">sub_hfyu_median_prediction_mmx2</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="123:9" pos:end="136:0"><if pos:start="123:9" pos:end="136:0">if<condition pos:start="123:11" pos:end="123:39">(<expr pos:start="123:12" pos:end="123:38"><name pos:start="123:12" pos:end="123:19">mm_flags</name> <operator pos:start="123:21" pos:end="123:21">&amp;</operator> <name pos:start="123:23" pos:end="123:38">AV_CPU_FLAG_SSE2</name></expr>)</condition><block pos:start="123:40" pos:end="136:0">{<block_content pos:start="125:13" pos:end="129:53">

            <if_stmt pos:start="125:13" pos:end="127:48"><if pos:start="125:13" pos:end="127:48">if <condition pos:start="125:16" pos:end="125:31">(<expr pos:start="125:17" pos:end="125:30"><name pos:start="125:17" pos:end="125:25">bit_depth</name> <operator pos:start="125:27" pos:end="125:28">&lt;=</operator> <literal type="number" pos:start="125:30" pos:end="125:30">8</literal></expr>)</condition><block type="pseudo" pos:start="127:17" pos:end="127:48"><block_content pos:start="127:17" pos:end="127:48">

                <expr_stmt pos:start="127:17" pos:end="127:48"><expr pos:start="127:17" pos:end="127:47"><name pos:start="127:17" pos:end="127:29"><name pos:start="127:17" pos:end="127:17">c</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:29">get_pixels</name></name> <operator pos:start="127:31" pos:end="127:31">=</operator> <name pos:start="127:33" pos:end="127:47">get_pixels_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:53"><expr pos:start="129:13" pos:end="129:52"><name pos:start="129:13" pos:end="129:30"><name pos:start="129:13" pos:end="129:13">c</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:30">sum_abs_dctelem</name></name><operator pos:start="129:31" pos:end="129:31">=</operator> <name pos:start="129:33" pos:end="129:52">sum_abs_dctelem_sse2</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



<cpp:if pos:start="135:1" pos:end="135:21">#<cpp:directive pos:start="135:2" pos:end="135:3">if</cpp:directive> <expr pos:start="135:5" pos:end="135:21"><name pos:start="135:5" pos:end="135:21">HAVE_SSSE3_INLINE</name></expr></cpp:if>

        <if_stmt pos:start="137:9" pos:end="152:0"><if pos:start="137:9" pos:end="152:0">if<condition pos:start="137:11" pos:end="137:40">(<expr pos:start="137:12" pos:end="137:39"><name pos:start="137:12" pos:end="137:19">mm_flags</name> <operator pos:start="137:21" pos:end="137:21">&amp;</operator> <name pos:start="137:23" pos:end="137:39">AV_CPU_FLAG_SSSE3</name></expr>)</condition><block pos:start="137:41" pos:end="152:0">{<block_content pos:start="139:13" pos:end="147:54">

            <if_stmt pos:start="139:13" pos:end="143:13"><if pos:start="139:13" pos:end="143:13">if<condition pos:start="139:15" pos:end="139:53">(<expr pos:start="139:16" pos:end="139:52"><operator pos:start="139:16" pos:end="139:16">!</operator><operator pos:start="139:17" pos:end="139:17">(</operator><name pos:start="139:18" pos:end="139:29"><name pos:start="139:18" pos:end="139:22">avctx</name><operator pos:start="139:23" pos:end="139:24">-&gt;</operator><name pos:start="139:25" pos:end="139:29">flags</name></name> <operator pos:start="139:31" pos:end="139:31">&amp;</operator> <name pos:start="139:33" pos:end="139:51">CODEC_FLAG_BITEXACT</name><operator pos:start="139:52" pos:end="139:52">)</operator></expr>)</condition><block pos:start="139:54" pos:end="143:13">{<block_content pos:start="141:17" pos:end="141:52">

                <expr_stmt pos:start="141:17" pos:end="141:52"><expr pos:start="141:17" pos:end="141:51"><name pos:start="141:17" pos:end="141:31"><name pos:start="141:17" pos:end="141:17">c</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:31">try_8x8basis</name></name><operator pos:start="141:32" pos:end="141:32">=</operator> <name pos:start="141:34" pos:end="141:51">try_8x8basis_ssse3</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:48"><expr pos:start="145:13" pos:end="145:47"><name pos:start="145:13" pos:end="145:27"><name pos:start="145:13" pos:end="145:13">c</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:27">add_8x8basis</name></name><operator pos:start="145:28" pos:end="145:28">=</operator> <name pos:start="145:30" pos:end="145:47">add_8x8basis_ssse3</name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:54"><expr pos:start="147:13" pos:end="147:53"><name pos:start="147:13" pos:end="147:30"><name pos:start="147:13" pos:end="147:13">c</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:30">sum_abs_dctelem</name></name><operator pos:start="147:31" pos:end="147:31">=</operator> <name pos:start="147:33" pos:end="147:53">sum_abs_dctelem_ssse3</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="151:1" pos:end="151:6">#<cpp:directive pos:start="151:2" pos:end="151:6">endif</cpp:directive></cpp:endif>



        <if_stmt pos:start="155:9" pos:end="165:9"><if pos:start="155:9" pos:end="165:9">if<condition pos:start="155:11" pos:end="155:40">(<expr pos:start="155:12" pos:end="155:39"><name pos:start="155:12" pos:end="155:19">mm_flags</name> <operator pos:start="155:21" pos:end="155:21">&amp;</operator> <name pos:start="155:23" pos:end="155:39">AV_CPU_FLAG_3DNOW</name></expr>)</condition><block pos:start="155:41" pos:end="165:9">{<block_content pos:start="157:13" pos:end="163:48">

            <if_stmt pos:start="157:13" pos:end="161:13"><if pos:start="157:13" pos:end="161:13">if<condition pos:start="157:15" pos:end="157:53">(<expr pos:start="157:16" pos:end="157:52"><operator pos:start="157:16" pos:end="157:16">!</operator><operator pos:start="157:17" pos:end="157:17">(</operator><name pos:start="157:18" pos:end="157:29"><name pos:start="157:18" pos:end="157:22">avctx</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:29">flags</name></name> <operator pos:start="157:31" pos:end="157:31">&amp;</operator> <name pos:start="157:33" pos:end="157:51">CODEC_FLAG_BITEXACT</name><operator pos:start="157:52" pos:end="157:52">)</operator></expr>)</condition><block pos:start="157:54" pos:end="161:13">{<block_content pos:start="159:17" pos:end="159:52">

                <expr_stmt pos:start="159:17" pos:end="159:52"><expr pos:start="159:17" pos:end="159:51"><name pos:start="159:17" pos:end="159:31"><name pos:start="159:17" pos:end="159:17">c</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:31">try_8x8basis</name></name><operator pos:start="159:32" pos:end="159:32">=</operator> <name pos:start="159:34" pos:end="159:51">try_8x8basis_3dnow</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:48"><expr pos:start="163:13" pos:end="163:47"><name pos:start="163:13" pos:end="163:27"><name pos:start="163:13" pos:end="163:13">c</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:27">add_8x8basis</name></name><operator pos:start="163:28" pos:end="163:28">=</operator> <name pos:start="163:30" pos:end="163:47">add_8x8basis_3dnow</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="169:1" pos:end="169:6">#<cpp:directive pos:start="169:2" pos:end="169:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="169:8" pos:end="169:28">/* HAVE_INLINE_ASM */</comment>



<cpp:if pos:start="173:1" pos:end="173:13">#<cpp:directive pos:start="173:2" pos:end="173:3">if</cpp:directive> <expr pos:start="173:5" pos:end="173:13"><name pos:start="173:5" pos:end="173:13">HAVE_YASM</name></expr></cpp:if>

    <if_stmt pos:start="175:5" pos:end="226:0"><if pos:start="175:5" pos:end="226:0">if <condition pos:start="175:8" pos:end="175:35">(<expr pos:start="175:9" pos:end="175:34"><name pos:start="175:9" pos:end="175:16">mm_flags</name> <operator pos:start="175:18" pos:end="175:18">&amp;</operator> <name pos:start="175:20" pos:end="175:34">AV_CPU_FLAG_MMX</name></expr>)</condition> <block pos:start="175:37" pos:end="226:0">{<block_content pos:start="177:9" pos:end="222:0">

        <expr_stmt pos:start="177:9" pos:end="177:55"><expr pos:start="177:9" pos:end="177:54"><name pos:start="177:9" pos:end="177:28"><name pos:start="177:9" pos:end="177:9">c</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:25">hadamard8_diff</name><index pos:start="177:26" pos:end="177:28">[<expr pos:start="177:27" pos:end="177:27"><literal type="number" pos:start="177:27" pos:end="177:27">0</literal></expr>]</index></name> <operator pos:start="177:30" pos:end="177:30">=</operator> <name pos:start="177:32" pos:end="177:54">ff_hadamard8_diff16_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:53"><expr pos:start="179:9" pos:end="179:52"><name pos:start="179:9" pos:end="179:28"><name pos:start="179:9" pos:end="179:9">c</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:25">hadamard8_diff</name><index pos:start="179:26" pos:end="179:28">[<expr pos:start="179:27" pos:end="179:27"><literal type="number" pos:start="179:27" pos:end="179:27">1</literal></expr>]</index></name> <operator pos:start="179:30" pos:end="179:30">=</operator> <name pos:start="179:32" pos:end="179:52">ff_hadamard8_diff_mmx</name></expr>;</expr_stmt>



        <if_stmt pos:start="183:9" pos:end="189:9"><if pos:start="183:9" pos:end="189:9">if <condition pos:start="183:12" pos:end="183:42">(<expr pos:start="183:13" pos:end="183:41"><name pos:start="183:13" pos:end="183:20">mm_flags</name> <operator pos:start="183:22" pos:end="183:22">&amp;</operator> <name pos:start="183:24" pos:end="183:41">AV_CPU_FLAG_MMXEXT</name></expr>)</condition> <block pos:start="183:44" pos:end="189:9">{<block_content pos:start="185:13" pos:end="187:58">

            <expr_stmt pos:start="185:13" pos:end="185:60"><expr pos:start="185:13" pos:end="185:59"><name pos:start="185:13" pos:end="185:32"><name pos:start="185:13" pos:end="185:13">c</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:29">hadamard8_diff</name><index pos:start="185:30" pos:end="185:32">[<expr pos:start="185:31" pos:end="185:31"><literal type="number" pos:start="185:31" pos:end="185:31">0</literal></expr>]</index></name> <operator pos:start="185:34" pos:end="185:34">=</operator> <name pos:start="185:36" pos:end="185:59">ff_hadamard8_diff16_mmx2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:58"><expr pos:start="187:13" pos:end="187:57"><name pos:start="187:13" pos:end="187:32"><name pos:start="187:13" pos:end="187:13">c</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:29">hadamard8_diff</name><index pos:start="187:30" pos:end="187:32">[<expr pos:start="187:31" pos:end="187:31"><literal type="number" pos:start="187:31" pos:end="187:31">1</literal></expr>]</index></name> <operator pos:start="187:34" pos:end="187:34">=</operator> <name pos:start="187:36" pos:end="187:57">ff_hadamard8_diff_mmx2</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="193:9" pos:end="212:0"><if pos:start="193:9" pos:end="212:0">if <condition pos:start="193:12" pos:end="193:40">(<expr pos:start="193:13" pos:end="193:39"><name pos:start="193:13" pos:end="193:20">mm_flags</name> <operator pos:start="193:22" pos:end="193:22">&amp;</operator> <name pos:start="193:24" pos:end="193:39">AV_CPU_FLAG_SSE2</name></expr>)</condition><block pos:start="193:41" pos:end="212:0">{<block_content pos:start="195:13" pos:end="206:0">

            <expr_stmt pos:start="195:13" pos:end="200:0"><expr pos:start="195:13" pos:end="195:37"><name pos:start="195:13" pos:end="195:21"><name pos:start="195:13" pos:end="195:13">c</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:18">sse</name><index pos:start="195:19" pos:end="195:21">[<expr pos:start="195:20" pos:end="195:20"><literal type="number" pos:start="195:20" pos:end="195:20">0</literal></expr>]</index></name> <operator pos:start="195:23" pos:end="195:23">=</operator> <name pos:start="195:25" pos:end="195:37">ff_sse16_sse2</name></expr>;</expr_stmt>



<cpp:if pos:start="199:1" pos:end="199:22">#<cpp:directive pos:start="199:2" pos:end="199:3">if</cpp:directive> <expr pos:start="199:5" pos:end="199:22"><name pos:start="199:5" pos:end="199:22">HAVE_ALIGNED_STACK</name></expr></cpp:if>

            <expr_stmt pos:start="201:13" pos:end="201:60"><expr pos:start="201:13" pos:end="201:59"><name pos:start="201:13" pos:end="201:32"><name pos:start="201:13" pos:end="201:13">c</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:29">hadamard8_diff</name><index pos:start="201:30" pos:end="201:32">[<expr pos:start="201:31" pos:end="201:31"><literal type="number" pos:start="201:31" pos:end="201:31">0</literal></expr>]</index></name> <operator pos:start="201:34" pos:end="201:34">=</operator> <name pos:start="201:36" pos:end="201:59">ff_hadamard8_diff16_sse2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="206:0"><expr pos:start="203:13" pos:end="203:57"><name pos:start="203:13" pos:end="203:32"><name pos:start="203:13" pos:end="203:13">c</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:29">hadamard8_diff</name><index pos:start="203:30" pos:end="203:32">[<expr pos:start="203:31" pos:end="203:31"><literal type="number" pos:start="203:31" pos:end="203:31">1</literal></expr>]</index></name> <operator pos:start="203:34" pos:end="203:34">=</operator> <name pos:start="203:36" pos:end="203:57">ff_hadamard8_diff_sse2</name></expr>;</expr_stmt>

<cpp:endif pos:start="205:1" pos:end="205:6">#<cpp:directive pos:start="205:2" pos:end="205:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if></if_stmt>



<cpp:if pos:start="211:1" pos:end="211:36">#<cpp:directive pos:start="211:2" pos:end="211:3">if</cpp:directive> <expr pos:start="211:5" pos:end="211:36"><name pos:start="211:5" pos:end="211:14">HAVE_SSSE3</name> <operator pos:start="211:16" pos:end="211:17">&amp;&amp;</operator> <name pos:start="211:19" pos:end="211:36">HAVE_ALIGNED_STACK</name></expr></cpp:if>

        <if_stmt pos:start="213:9" pos:end="222:0"><if pos:start="213:9" pos:end="222:0">if <condition pos:start="213:12" pos:end="213:41">(<expr pos:start="213:13" pos:end="213:40"><name pos:start="213:13" pos:end="213:20">mm_flags</name> <operator pos:start="213:22" pos:end="213:22">&amp;</operator> <name pos:start="213:24" pos:end="213:40">AV_CPU_FLAG_SSSE3</name></expr>)</condition> <block pos:start="213:43" pos:end="222:0">{<block_content pos:start="215:13" pos:end="217:59">

            <expr_stmt pos:start="215:13" pos:end="215:61"><expr pos:start="215:13" pos:end="215:60"><name pos:start="215:13" pos:end="215:32"><name pos:start="215:13" pos:end="215:13">c</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:29">hadamard8_diff</name><index pos:start="215:30" pos:end="215:32">[<expr pos:start="215:31" pos:end="215:31"><literal type="number" pos:start="215:31" pos:end="215:31">0</literal></expr>]</index></name> <operator pos:start="215:34" pos:end="215:34">=</operator> <name pos:start="215:36" pos:end="215:60">ff_hadamard8_diff16_ssse3</name></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:59"><expr pos:start="217:13" pos:end="217:58"><name pos:start="217:13" pos:end="217:32"><name pos:start="217:13" pos:end="217:13">c</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:29">hadamard8_diff</name><index pos:start="217:30" pos:end="217:32">[<expr pos:start="217:31" pos:end="217:31"><literal type="number" pos:start="217:31" pos:end="217:31">1</literal></expr>]</index></name> <operator pos:start="217:34" pos:end="217:34">=</operator> <name pos:start="217:36" pos:end="217:58">ff_hadamard8_diff_ssse3</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="221:1" pos:end="221:6">#<cpp:directive pos:start="221:2" pos:end="221:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="225:1" pos:end="225:6">#<cpp:directive pos:start="225:2" pos:end="225:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="225:8" pos:end="225:22">/* HAVE_YASM */</comment>



    <expr_stmt pos:start="229:5" pos:end="229:38"><expr pos:start="229:5" pos:end="229:37"><call pos:start="229:5" pos:end="229:37"><name pos:start="229:5" pos:end="229:27">ff_dsputil_init_pix_mmx</name><argument_list pos:start="229:28" pos:end="229:37">(<argument pos:start="229:29" pos:end="229:29"><expr pos:start="229:29" pos:end="229:29"><name pos:start="229:29" pos:end="229:29">c</name></expr></argument>, <argument pos:start="229:32" pos:end="229:36"><expr pos:start="229:32" pos:end="229:36"><name pos:start="229:32" pos:end="229:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
