<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13284.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">ac3_decode_init</name><parameter_list pos:start="1:27" pos:end="1:49">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:41">AVCodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:48">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:13">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">AC3DecodeContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">ctx</name> <init pos:start="5:27" pos:end="5:44">= <expr pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:33">avctx</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:44">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><call pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">ac3_common_init</name><argument_list pos:start="9:20" pos:end="9:21">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:44"><expr pos:start="13:5" pos:end="13:43"><call pos:start="13:5" pos:end="13:43"><name pos:start="13:5" pos:end="13:16">ff_mdct_init</name><argument_list pos:start="13:17" pos:end="13:43">(<argument pos:start="13:18" pos:end="13:36"><expr pos:start="13:18" pos:end="13:36"><operator pos:start="13:18" pos:end="13:18">&amp;</operator><name pos:start="13:19" pos:end="13:36"><name pos:start="13:19" pos:end="13:21">ctx</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:36">imdct_ctx_256</name></name></expr></argument>, <argument pos:start="13:39" pos:end="13:39"><expr pos:start="13:39" pos:end="13:39"><literal type="number" pos:start="13:39" pos:end="13:39">8</literal></expr></argument>, <argument pos:start="13:42" pos:end="13:42"><expr pos:start="13:42" pos:end="13:42"><literal type="number" pos:start="13:42" pos:end="13:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:44"><expr pos:start="15:5" pos:end="15:43"><call pos:start="15:5" pos:end="15:43"><name pos:start="15:5" pos:end="15:16">ff_mdct_init</name><argument_list pos:start="15:17" pos:end="15:43">(<argument pos:start="15:18" pos:end="15:36"><expr pos:start="15:18" pos:end="15:36"><operator pos:start="15:18" pos:end="15:18">&amp;</operator><name pos:start="15:19" pos:end="15:36"><name pos:start="15:19" pos:end="15:21">ctx</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:36">imdct_ctx_512</name></name></expr></argument>, <argument pos:start="15:39" pos:end="15:39"><expr pos:start="15:39" pos:end="15:39"><literal type="number" pos:start="15:39" pos:end="15:39">9</literal></expr></argument>, <argument pos:start="15:42" pos:end="15:42"><expr pos:start="15:42" pos:end="15:42"><literal type="number" pos:start="15:42" pos:end="15:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:56"><expr pos:start="17:5" pos:end="17:55"><name pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:7">ctx</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:16">samples</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <call pos:start="17:20" pos:end="17:55"><name pos:start="17:20" pos:end="17:29">av_mallocz</name><argument_list pos:start="17:30" pos:end="17:55">(<argument pos:start="17:31" pos:end="17:54"><expr pos:start="17:31" pos:end="17:54"><literal type="number" pos:start="17:31" pos:end="17:31">6</literal> <operator pos:start="17:33" pos:end="17:33">*</operator> <literal type="number" pos:start="17:35" pos:end="17:37">256</literal> <operator pos:start="17:39" pos:end="17:39">*</operator> <sizeof pos:start="17:41" pos:end="17:54">sizeof <argument_list pos:start="17:48" pos:end="17:54">(<argument pos:start="17:49" pos:end="17:53"><expr pos:start="17:49" pos:end="17:53"><name pos:start="17:49" pos:end="17:53">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:22">(<expr pos:start="19:9" pos:end="19:21"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:21"><name pos:start="19:10" pos:end="19:12">ctx</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:21">samples</name></name></expr>)</condition> <block pos:start="19:24" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:76"><expr pos:start="21:9" pos:end="21:75"><call pos:start="21:9" pos:end="21:75"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:75">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">avctx</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:37" pos:end="21:74"><expr pos:start="21:37" pos:end="21:74"><literal type="string" pos:start="21:37" pos:end="21:74">"Cannot allocate memory for samples\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><call pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:15">dither_seed</name><argument_list pos:start="27:16" pos:end="27:31">(<argument pos:start="27:17" pos:end="27:27"><expr pos:start="27:17" pos:end="27:27"><operator pos:start="27:17" pos:end="27:17">&amp;</operator><name pos:start="27:18" pos:end="27:27"><name pos:start="27:18" pos:end="27:20">ctx</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:27">state</name></name></expr></argument>, <argument pos:start="27:30" pos:end="27:30"><expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="31:5" pos:end="31:13">return <expr pos:start="31:12" pos:end="31:12"><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
