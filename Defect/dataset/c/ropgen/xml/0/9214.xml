<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9214.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">scoop_writeb</name><parameter_list pos:start="1:25" pos:end="1:79">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:62"><decl pos:start="1:40" pos:end="1:62"><type pos:start="1:40" pos:end="1:62"><name pos:start="1:40" pos:end="1:57">target_phys_addr_t</name></type> <name pos:start="1:59" pos:end="1:62">addr</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:78"><decl pos:start="1:65" pos:end="1:78"><type pos:start="1:65" pos:end="1:78"><name pos:start="1:65" pos:end="1:72">uint32_t</name></type> <name pos:start="1:74" pos:end="1:78">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:5">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">ScoopInfo</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:39">= <expr pos:start="5:20" pos:end="5:39"><operator pos:start="5:20" pos:end="5:20">(</operator><name pos:start="5:21" pos:end="5:29">ScoopInfo</name> <operator pos:start="5:31" pos:end="5:31">*</operator><operator pos:start="5:32" pos:end="5:32">)</operator> <name pos:start="5:34" pos:end="5:39">opaque</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:20"><expr pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:9">value</name> <operator pos:start="7:11" pos:end="7:12">&amp;=</operator> <literal type="number" pos:start="7:14" pos:end="7:19">0xffff</literal></expr>;</expr_stmt>



    <switch pos:start="11:5" pos:end="81:5">switch <condition pos:start="11:12" pos:end="11:17">(<expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">addr</name></expr>)</condition> <block pos:start="11:19" pos:end="81:5">{<block_content pos:start="13:5" pos:end="79:80">

    <case pos:start="13:5" pos:end="13:19">case <expr pos:start="13:10" pos:end="13:18"><name pos:start="13:10" pos:end="13:18">SCOOP_MCR</name></expr>:</case>

        <expr_stmt pos:start="15:9" pos:end="15:23"><expr pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:14">mcr</name></name> <operator pos:start="15:16" pos:end="15:16">=</operator> <name pos:start="15:18" pos:end="15:22">value</name></expr>;</expr_stmt>

        <break pos:start="17:9" pos:end="17:14">break;</break>

    <case pos:start="19:5" pos:end="19:19">case <expr pos:start="19:10" pos:end="19:18"><name pos:start="19:10" pos:end="19:18">SCOOP_CDR</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:23"><expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:14">cdr</name></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:22">value</name></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:19">case <expr pos:start="25:10" pos:end="25:18"><name pos:start="25:10" pos:end="25:18">SCOOP_CPR</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:16">power</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:24">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="31:31"><if pos:start="29:9" pos:end="31:31">if <condition pos:start="29:12" pos:end="29:25">(<expr pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:17">value</name> <operator pos:start="29:19" pos:end="29:19">&amp;</operator> <literal type="number" pos:start="29:21" pos:end="29:24">0x80</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:31"><block_content pos:start="31:13" pos:end="31:31">

            <expr_stmt pos:start="31:13" pos:end="31:31"><expr pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:20">power</name></name> <operator pos:start="31:22" pos:end="31:23">|=</operator> <literal type="number" pos:start="31:25" pos:end="31:30">0x8040</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:19">case <expr pos:start="35:10" pos:end="35:18"><name pos:start="35:10" pos:end="35:18">SCOOP_CCR</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:14">ccr</name></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:22">value</name></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:23">case <expr pos:start="41:10" pos:end="41:22"><name pos:start="41:10" pos:end="41:22">SCOOP_IRR_IRM</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:23"><expr pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:14">irr</name></name> <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:22">value</name></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:19">case <expr pos:start="47:10" pos:end="47:18"><name pos:start="47:10" pos:end="47:18">SCOOP_IMR</name></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:23"><expr pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:14"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:14">imr</name></name> <operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:22">value</name></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:19">case <expr pos:start="53:10" pos:end="53:18"><name pos:start="53:10" pos:end="53:18">SCOOP_ISR</name></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:14"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:14">isr</name></name> <operator pos:start="55:16" pos:end="55:16">=</operator> <name pos:start="55:18" pos:end="55:22">value</name></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:20">case <expr pos:start="59:10" pos:end="59:19"><name pos:start="59:10" pos:end="59:19">SCOOP_GPCR</name></expr>:</case>

        <expr_stmt pos:start="61:9" pos:end="61:28"><expr pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:19">gpio_dir</name></name> <operator pos:start="61:21" pos:end="61:21">=</operator> <name pos:start="61:23" pos:end="61:27">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:37"><expr pos:start="63:9" pos:end="63:36"><call pos:start="63:9" pos:end="63:36"><name pos:start="63:9" pos:end="63:33">scoop_gpio_handler_update</name><argument_list pos:start="63:34" pos:end="63:36">(<argument pos:start="63:35" pos:end="63:35"><expr pos:start="63:35" pos:end="63:35"><name pos:start="63:35" pos:end="63:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:20">case <expr pos:start="67:10" pos:end="67:19"><name pos:start="67:10" pos:end="67:19">SCOOP_GPWR</name></expr>:</case>

    <case pos:start="69:5" pos:end="69:20">case <expr pos:start="69:10" pos:end="69:19"><name pos:start="69:10" pos:end="69:19">SCOOP_GPRR</name></expr>:</case>	<comment type="block" pos:start="69:25" pos:end="69:61">/* GPRR is probably R/O in real HW */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:44"><expr pos:start="71:9" pos:end="71:43"><name pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:21">gpio_level</name></name> <operator pos:start="71:23" pos:end="71:23">=</operator> <name pos:start="71:25" pos:end="71:29">value</name> <operator pos:start="71:31" pos:end="71:31">&amp;</operator> <name pos:start="71:33" pos:end="71:43"><name pos:start="71:33" pos:end="71:33">s</name><operator pos:start="71:34" pos:end="71:35">-&gt;</operator><name pos:start="71:36" pos:end="71:43">gpio_dir</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:37"><expr pos:start="73:9" pos:end="73:36"><call pos:start="73:9" pos:end="73:36"><name pos:start="73:9" pos:end="73:33">scoop_gpio_handler_update</name><argument_list pos:start="73:34" pos:end="73:36">(<argument pos:start="73:35" pos:end="73:35"><expr pos:start="73:35" pos:end="73:35"><name pos:start="73:35" pos:end="73:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <default pos:start="77:5" pos:end="77:12">default:</default>

        <expr_stmt pos:start="79:9" pos:end="79:80"><expr pos:start="79:9" pos:end="79:79"><call pos:start="79:9" pos:end="79:79"><name pos:start="79:9" pos:end="79:21">zaurus_printf</name><argument_list pos:start="79:22" pos:end="79:79">(<argument pos:start="79:23" pos:end="79:57"><expr pos:start="79:23" pos:end="79:57"><literal type="string" pos:start="79:23" pos:end="79:44">"Bad register offset "</literal> <name pos:start="79:46" pos:end="79:52">REG_FMT</name> <literal type="string" pos:start="79:54" pos:end="79:57">"\n"</literal></expr></argument>, <argument pos:start="79:60" pos:end="79:78"><expr pos:start="79:60" pos:end="79:78"><operator pos:start="79:60" pos:end="79:60">(</operator><name pos:start="79:61" pos:end="79:68">unsigned</name> <name pos:start="79:70" pos:end="79:73">long</name><operator pos:start="79:74" pos:end="79:74">)</operator><name pos:start="79:75" pos:end="79:78">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
