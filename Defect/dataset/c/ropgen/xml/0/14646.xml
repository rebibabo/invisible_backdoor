<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14646.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:19">mdct512</name><parameter_list pos:start="1:20" pos:end="1:68">(<parameter pos:start="1:21" pos:end="1:40"><decl pos:start="1:21" pos:end="1:40"><type pos:start="1:21" pos:end="1:40"><name pos:start="1:21" pos:end="1:34">AC3MDCTContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:40">mdct</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:49">int32_t</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">out</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:67"><decl pos:start="1:57" pos:end="1:67"><type pos:start="1:57" pos:end="1:67"><name pos:start="1:57" pos:end="1:63">int16_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:67">in</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:5">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:13"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:13">re</name></decl>, <decl pos:start="5:16" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:17">im</name></decl>, <decl pos:start="5:20" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:20">n</name></decl>, <decl pos:start="5:23" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:23" pos:end="5:24">n2</name></decl>, <decl pos:start="5:27" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:27" pos:end="5:28">n4</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">int16_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">rot</name> <init pos:start="7:18" pos:end="7:32">= <expr pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:23">mdct</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:32">rot_tmp</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">IComplex</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:15">x</name>  <init pos:start="9:18" pos:end="9:33">= <expr pos:start="9:20" pos:end="9:33"><name pos:start="9:20" pos:end="9:33"><name pos:start="9:20" pos:end="9:23">mdct</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:33">cplx_tmp</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:26"><expr pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:5">n</name>  <operator pos:start="13:8" pos:end="13:8">=</operator> <literal type="number" pos:start="13:10" pos:end="13:10">1</literal> <operator pos:start="13:12" pos:end="13:13">&lt;&lt;</operator> <name pos:start="13:15" pos:end="13:25"><name pos:start="13:15" pos:end="13:18">mdct</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:25">nbits</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:6">n2</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <name pos:start="15:10" pos:end="15:10">n</name> <operator pos:start="15:12" pos:end="15:13">&gt;&gt;</operator> <literal type="number" pos:start="15:15" pos:end="15:15">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:16"><expr pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:6">n4</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:10">n</name> <operator pos:start="17:12" pos:end="17:13">&gt;&gt;</operator> <literal type="number" pos:start="17:15" pos:end="17:15">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:40">/* shift to simplify computations */</comment>

    <for pos:start="23:5" pos:end="25:31">for <control pos:start="23:9" pos:end="23:27">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:21"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator><name pos:start="23:20" pos:end="23:21">n4</name></expr>;</condition> <incr pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:24">i</name><operator pos:start="23:25" pos:end="23:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="25:9" pos:end="25:31"><block_content pos:start="25:9" pos:end="25:31">

        <expr_stmt pos:start="25:9" pos:end="25:31"><expr pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:11">rot</name><index pos:start="25:12" pos:end="25:14">[<expr pos:start="25:13" pos:end="25:13"><name pos:start="25:13" pos:end="25:13">i</name></expr>]</index></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <operator pos:start="25:18" pos:end="25:18">-</operator><name pos:start="25:19" pos:end="25:30"><name pos:start="25:19" pos:end="25:20">in</name><index pos:start="25:21" pos:end="25:30">[<expr pos:start="25:22" pos:end="25:29"><name pos:start="25:22" pos:end="25:22">i</name> <operator pos:start="25:24" pos:end="25:24">+</operator> <literal type="number" pos:start="25:26" pos:end="25:26">3</literal><operator pos:start="25:27" pos:end="25:27">*</operator><name pos:start="25:28" pos:end="25:29">n4</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="27:5" pos:end="27:47"><expr pos:start="27:5" pos:end="27:46"><call pos:start="27:5" pos:end="27:46"><name pos:start="27:5" pos:end="27:10">memcpy</name><argument_list pos:start="27:11" pos:end="27:46">(<argument pos:start="27:12" pos:end="27:19"><expr pos:start="27:12" pos:end="27:19"><operator pos:start="27:12" pos:end="27:12">&amp;</operator><name pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:15">rot</name><index pos:start="27:16" pos:end="27:19">[<expr pos:start="27:17" pos:end="27:18"><name pos:start="27:17" pos:end="27:18">n4</name></expr>]</index></name></expr></argument>, <argument pos:start="27:22" pos:end="27:27"><expr pos:start="27:22" pos:end="27:27"><operator pos:start="27:22" pos:end="27:22">&amp;</operator><name pos:start="27:23" pos:end="27:27"><name pos:start="27:23" pos:end="27:24">in</name><index pos:start="27:25" pos:end="27:27">[<expr pos:start="27:26" pos:end="27:26"><literal type="number" pos:start="27:26" pos:end="27:26">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:30" pos:end="27:45"><expr pos:start="27:30" pos:end="27:45"><literal type="number" pos:start="27:30" pos:end="27:30">3</literal><operator pos:start="27:31" pos:end="27:31">*</operator><name pos:start="27:32" pos:end="27:33">n4</name><operator pos:start="27:34" pos:end="27:34">*</operator><sizeof pos:start="27:35" pos:end="27:45">sizeof<argument_list pos:start="27:41" pos:end="27:45">(<argument pos:start="27:42" pos:end="27:44"><expr pos:start="27:42" pos:end="27:44"><operator pos:start="27:42" pos:end="27:42">*</operator><name pos:start="27:43" pos:end="27:44">in</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:22">/* pre rotation */</comment>

    <for pos:start="33:5" pos:end="41:5">for <control pos:start="33:9" pos:end="33:28">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:23"><expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:22">n4</name></expr>;</condition> <incr pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:25">i</name><operator pos:start="33:26" pos:end="33:27">++</operator></expr></incr>)</control> <block pos:start="33:30" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:76">

        <expr_stmt pos:start="35:9" pos:end="35:59"><expr pos:start="35:9" pos:end="35:58"><name pos:start="35:9" pos:end="35:10">re</name> <operator pos:start="35:12" pos:end="35:12">=</operator>  <operator pos:start="35:15" pos:end="35:15">(</operator><operator pos:start="35:16" pos:end="35:16">(</operator><name pos:start="35:17" pos:end="35:19">int</name><operator pos:start="35:20" pos:end="35:20">)</operator><name pos:start="35:21" pos:end="35:31"><name pos:start="35:21" pos:end="35:23">rot</name><index pos:start="35:24" pos:end="35:31">[   <expr pos:start="35:28" pos:end="35:30"><literal type="number" pos:start="35:28" pos:end="35:28">2</literal><operator pos:start="35:29" pos:end="35:29">*</operator><name pos:start="35:30" pos:end="35:30">i</name></expr>]</index></name> <operator pos:start="35:33" pos:end="35:33">-</operator> <operator pos:start="35:35" pos:end="35:35">(</operator><name pos:start="35:36" pos:end="35:38">int</name><operator pos:start="35:39" pos:end="35:39">)</operator><name pos:start="35:40" pos:end="35:52"><name pos:start="35:40" pos:end="35:42">rot</name><index pos:start="35:43" pos:end="35:52">[ <expr pos:start="35:45" pos:end="35:51"><name pos:start="35:45" pos:end="35:45">n</name><operator pos:start="35:46" pos:end="35:46">-</operator><literal type="number" pos:start="35:47" pos:end="35:48">1</literal><operator pos:start="35:48" pos:end="35:48">-</operator><literal type="number" pos:start="35:49" pos:end="35:49">2</literal><operator pos:start="35:50" pos:end="35:50">*</operator><name pos:start="35:51" pos:end="35:51">i</name></expr>]</index></name><operator pos:start="35:53" pos:end="35:53">)</operator> <operator pos:start="35:55" pos:end="35:56">&gt;&gt;</operator> <literal type="number" pos:start="35:58" pos:end="35:58">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:59"><expr pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:10">im</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <operator pos:start="37:14" pos:end="37:14">-</operator><operator pos:start="37:15" pos:end="37:15">(</operator><operator pos:start="37:16" pos:end="37:16">(</operator><name pos:start="37:17" pos:end="37:19">int</name><operator pos:start="37:20" pos:end="37:20">)</operator><name pos:start="37:21" pos:end="37:31"><name pos:start="37:21" pos:end="37:23">rot</name><index pos:start="37:24" pos:end="37:31">[<expr pos:start="37:25" pos:end="37:30"><name pos:start="37:25" pos:end="37:26">n2</name><operator pos:start="37:27" pos:end="37:27">+</operator><literal type="number" pos:start="37:28" pos:end="37:28">2</literal><operator pos:start="37:29" pos:end="37:29">*</operator><name pos:start="37:30" pos:end="37:30">i</name></expr>]</index></name> <operator pos:start="37:33" pos:end="37:33">-</operator> <operator pos:start="37:35" pos:end="37:35">(</operator><name pos:start="37:36" pos:end="37:38">int</name><operator pos:start="37:39" pos:end="37:39">)</operator><name pos:start="37:40" pos:end="37:52"><name pos:start="37:40" pos:end="37:42">rot</name><index pos:start="37:43" pos:end="37:52">[<expr pos:start="37:44" pos:end="37:51"><name pos:start="37:44" pos:end="37:45">n2</name><operator pos:start="37:46" pos:end="37:46">-</operator><literal type="number" pos:start="37:47" pos:end="37:48">1</literal><operator pos:start="37:48" pos:end="37:48">-</operator><literal type="number" pos:start="37:49" pos:end="37:49">2</literal><operator pos:start="37:50" pos:end="37:50">*</operator><name pos:start="37:51" pos:end="37:51">i</name></expr>]</index></name><operator pos:start="37:53" pos:end="37:53">)</operator> <operator pos:start="37:55" pos:end="37:56">&gt;&gt;</operator> <literal type="number" pos:start="37:58" pos:end="37:58">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:76"><expr pos:start="39:9" pos:end="39:75"><call pos:start="39:9" pos:end="39:75"><name pos:start="39:9" pos:end="39:12">CMUL</name><argument_list pos:start="39:13" pos:end="39:75">(<argument pos:start="39:14" pos:end="39:20"><expr pos:start="39:14" pos:end="39:20"><name pos:start="39:14" pos:end="39:17"><name pos:start="39:14" pos:end="39:14">x</name><index pos:start="39:15" pos:end="39:17">[<expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">i</name></expr>]</index></name><operator pos:start="39:18" pos:end="39:18">.</operator><name pos:start="39:19" pos:end="39:20">re</name></expr></argument>, <argument pos:start="39:23" pos:end="39:29"><expr pos:start="39:23" pos:end="39:29"><name pos:start="39:23" pos:end="39:26"><name pos:start="39:23" pos:end="39:23">x</name><index pos:start="39:24" pos:end="39:26">[<expr pos:start="39:25" pos:end="39:25"><name pos:start="39:25" pos:end="39:25">i</name></expr>]</index></name><operator pos:start="39:27" pos:end="39:27">.</operator><name pos:start="39:28" pos:end="39:29">im</name></expr></argument>, <argument pos:start="39:32" pos:end="39:33"><expr pos:start="39:32" pos:end="39:33"><name pos:start="39:32" pos:end="39:33">re</name></expr></argument>, <argument pos:start="39:36" pos:end="39:37"><expr pos:start="39:36" pos:end="39:37"><name pos:start="39:36" pos:end="39:37">im</name></expr></argument>, <argument pos:start="39:40" pos:end="39:54"><expr pos:start="39:40" pos:end="39:54"><operator pos:start="39:40" pos:end="39:40">-</operator><name pos:start="39:41" pos:end="39:54"><name pos:start="39:41" pos:end="39:44">mdct</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:51">xcos1</name><index pos:start="39:52" pos:end="39:54">[<expr pos:start="39:53" pos:end="39:53"><name pos:start="39:53" pos:end="39:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="39:57" pos:end="39:70"><expr pos:start="39:57" pos:end="39:70"><name pos:start="39:57" pos:end="39:70"><name pos:start="39:57" pos:end="39:60">mdct</name><operator pos:start="39:61" pos:end="39:62">-&gt;</operator><name pos:start="39:63" pos:end="39:67">xsin1</name><index pos:start="39:68" pos:end="39:70">[<expr pos:start="39:69" pos:end="39:69"><name pos:start="39:69" pos:end="39:69">i</name></expr>]</index></name></expr></argument>, <argument pos:start="39:73" pos:end="39:74"><expr pos:start="39:73" pos:end="39:74"><literal type="number" pos:start="39:73" pos:end="39:74">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="45:5" pos:end="45:34"><expr pos:start="45:5" pos:end="45:33"><call pos:start="45:5" pos:end="45:33"><name pos:start="45:5" pos:end="45:7">fft</name><argument_list pos:start="45:8" pos:end="45:33">(<argument pos:start="45:9" pos:end="45:12"><expr pos:start="45:9" pos:end="45:12"><name pos:start="45:9" pos:end="45:12">mdct</name></expr></argument>, <argument pos:start="45:15" pos:end="45:15"><expr pos:start="45:15" pos:end="45:15"><name pos:start="45:15" pos:end="45:15">x</name></expr></argument>, <argument pos:start="45:18" pos:end="45:32"><expr pos:start="45:18" pos:end="45:32"><name pos:start="45:18" pos:end="45:28"><name pos:start="45:18" pos:end="45:21">mdct</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:28">nbits</name></name> <operator pos:start="45:30" pos:end="45:30">-</operator> <literal type="number" pos:start="45:32" pos:end="45:32">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:23">/* post rotation */</comment>

    <for pos:start="51:5" pos:end="59:5">for <control pos:start="51:9" pos:end="51:28">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:23"><expr pos:start="51:17" pos:end="51:22"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <name pos:start="51:21" pos:end="51:22">n4</name></expr>;</condition> <incr pos:start="51:25" pos:end="51:27"><expr pos:start="51:25" pos:end="51:27"><name pos:start="51:25" pos:end="51:25">i</name><operator pos:start="51:26" pos:end="51:27">++</operator></expr></incr>)</control> <block pos:start="51:30" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:81">

        <expr_stmt pos:start="53:9" pos:end="53:21"><expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:10">re</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <name pos:start="53:14" pos:end="53:17"><name pos:start="53:14" pos:end="53:14">x</name><index pos:start="53:15" pos:end="53:17">[<expr pos:start="53:16" pos:end="53:16"><name pos:start="53:16" pos:end="53:16">i</name></expr>]</index></name><operator pos:start="53:18" pos:end="53:18">.</operator><name pos:start="53:19" pos:end="53:20">re</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:21"><expr pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:10">im</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <name pos:start="55:14" pos:end="55:17"><name pos:start="55:14" pos:end="55:14">x</name><index pos:start="55:15" pos:end="55:17">[<expr pos:start="55:16" pos:end="55:16"><name pos:start="55:16" pos:end="55:16">i</name></expr>]</index></name><operator pos:start="55:18" pos:end="55:18">.</operator><name pos:start="55:19" pos:end="55:20">im</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:81"><expr pos:start="57:9" pos:end="57:80"><call pos:start="57:9" pos:end="57:80"><name pos:start="57:9" pos:end="57:12">CMUL</name><argument_list pos:start="57:13" pos:end="57:80">(<argument pos:start="57:14" pos:end="57:26"><expr pos:start="57:14" pos:end="57:26"><name pos:start="57:14" pos:end="57:26"><name pos:start="57:14" pos:end="57:16">out</name><index pos:start="57:17" pos:end="57:26">[<expr pos:start="57:18" pos:end="57:25"><name pos:start="57:18" pos:end="57:19">n2</name><operator pos:start="57:20" pos:end="57:20">-</operator><literal type="number" pos:start="57:21" pos:end="57:22">1</literal><operator pos:start="57:22" pos:end="57:22">-</operator><literal type="number" pos:start="57:23" pos:end="57:23">2</literal><operator pos:start="57:24" pos:end="57:24">*</operator><name pos:start="57:25" pos:end="57:25">i</name></expr>]</index></name></expr></argument>, <argument pos:start="57:29" pos:end="57:36"><expr pos:start="57:29" pos:end="57:36"><name pos:start="57:29" pos:end="57:36"><name pos:start="57:29" pos:end="57:31">out</name><index pos:start="57:32" pos:end="57:36">[<expr pos:start="57:33" pos:end="57:35"><literal type="number" pos:start="57:33" pos:end="57:33">2</literal><operator pos:start="57:34" pos:end="57:34">*</operator><name pos:start="57:35" pos:end="57:35">i</name></expr>]</index></name></expr></argument>, <argument pos:start="57:39" pos:end="57:40"><expr pos:start="57:39" pos:end="57:40"><name pos:start="57:39" pos:end="57:40">re</name></expr></argument>, <argument pos:start="57:43" pos:end="57:44"><expr pos:start="57:43" pos:end="57:44"><name pos:start="57:43" pos:end="57:44">im</name></expr></argument>, <argument pos:start="57:47" pos:end="57:60"><expr pos:start="57:47" pos:end="57:60"><name pos:start="57:47" pos:end="57:60"><name pos:start="57:47" pos:end="57:50">mdct</name><operator pos:start="57:51" pos:end="57:52">-&gt;</operator><name pos:start="57:53" pos:end="57:57">xsin1</name><index pos:start="57:58" pos:end="57:60">[<expr pos:start="57:59" pos:end="57:59"><name pos:start="57:59" pos:end="57:59">i</name></expr>]</index></name></expr></argument>, <argument pos:start="57:63" pos:end="57:76"><expr pos:start="57:63" pos:end="57:76"><name pos:start="57:63" pos:end="57:76"><name pos:start="57:63" pos:end="57:66">mdct</name><operator pos:start="57:67" pos:end="57:68">-&gt;</operator><name pos:start="57:69" pos:end="57:73">xcos1</name><index pos:start="57:74" pos:end="57:76">[<expr pos:start="57:75" pos:end="57:75"><name pos:start="57:75" pos:end="57:75">i</name></expr>]</index></name></expr></argument>, <argument pos:start="57:79" pos:end="57:79"><expr pos:start="57:79" pos:end="57:79"><literal type="number" pos:start="57:79" pos:end="57:79">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
