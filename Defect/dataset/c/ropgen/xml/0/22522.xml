<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22522.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mov_write_packet</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="169:1">{<block_content pos:start="5:5" pos:end="167:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MOVContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mov</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ByteIOContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">pb</name> <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">MOVTrack</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">trk</name> <init pos:start="9:19" pos:end="9:51">= <expr pos:start="9:21" pos:end="9:51"><operator pos:start="9:21" pos:end="9:21">&amp;</operator><name pos:start="9:22" pos:end="9:51"><name pos:start="9:22" pos:end="9:24">mov</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:32">tracks</name><index pos:start="9:33" pos:end="9:51">[<expr pos:start="9:34" pos:end="9:50"><name pos:start="9:34" pos:end="9:50"><name pos:start="9:34" pos:end="9:36">pkt</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:50">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVCodecContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">enc</name> <init pos:start="11:25" pos:end="11:34">= <expr pos:start="11:27" pos:end="11:34"><name pos:start="11:27" pos:end="11:34"><name pos:start="11:27" pos:end="11:29">trk</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:34">enc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:31">samplesInChunk</name> <init pos:start="13:33" pos:end="13:35">= <expr pos:start="13:35" pos:end="13:35"><literal type="number" pos:start="13:35" pos:end="13:35">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">size</name><init pos:start="15:13" pos:end="15:23">= <expr pos:start="15:15" pos:end="15:23"><name pos:start="15:15" pos:end="15:23"><name pos:start="15:15" pos:end="15:17">pkt</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:23">size</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="19:41"><if pos:start="19:5" pos:end="19:41">if <condition pos:start="19:8" pos:end="19:31">(<expr pos:start="19:9" pos:end="19:30"><call pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:23">url_is_streamed</name><argument_list pos:start="19:24" pos:end="19:30">(<argument pos:start="19:25" pos:end="19:29"><expr pos:start="19:25" pos:end="19:29"><name pos:start="19:25" pos:end="19:29"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:29">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:33" pos:end="19:41"><block_content pos:start="19:33" pos:end="19:41"> <return pos:start="19:33" pos:end="19:41">return <expr pos:start="19:40" pos:end="19:40"><literal type="number" pos:start="19:40" pos:end="19:40">0</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="19:43" pos:end="19:65">/* Can't handle that */</comment>

    <if_stmt pos:start="21:5" pos:end="21:24"><if pos:start="21:5" pos:end="21:24">if <condition pos:start="21:8" pos:end="21:14">(<expr pos:start="21:9" pos:end="21:13"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:13">size</name></expr>)</condition><block type="pseudo" pos:start="21:16" pos:end="21:24"><block_content pos:start="21:16" pos:end="21:24"> <return pos:start="21:16" pos:end="21:24">return <expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="21:26" pos:end="21:54">/* Discard 0 sized packets */</comment>



    <if_stmt pos:start="25:5" pos:end="59:27"><if pos:start="25:5" pos:end="53:5">if <condition pos:start="25:8" pos:end="25:41">(<expr pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:11">enc</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:21">codec_id</name></name> <operator pos:start="25:23" pos:end="25:24">==</operator> <name pos:start="25:26" pos:end="25:40">CODEC_ID_AMR_NB</name></expr>)</condition> <block pos:start="25:43" pos:end="53:5">{<block_content pos:start="29:9" pos:end="51:9">

        <comment type="block" pos:start="27:9" pos:end="27:74">/* We must find out how many AMR blocks there are in one packet */</comment>

        <decl_stmt pos:start="29:9" pos:end="31:69"><decl pos:start="29:9" pos:end="31:68"><type pos:start="29:9" pos:end="29:23"><specifier pos:start="29:9" pos:end="29:14">static</specifier> <name pos:start="29:16" pos:end="29:23">uint16_t</name></type> <name pos:start="29:25" pos:end="29:39"><name pos:start="29:25" pos:end="29:35">packed_size</name><index pos:start="29:36" pos:end="29:39">[<expr pos:start="29:37" pos:end="29:38"><literal type="number" pos:start="29:37" pos:end="29:38">16</literal></expr>]</index></name> <init pos:start="29:41" pos:end="31:68">=

            <expr pos:start="31:13" pos:end="31:68"><block pos:start="31:13" pos:end="31:68">{<expr pos:start="31:14" pos:end="31:15"><literal type="number" pos:start="31:14" pos:end="31:15">13</literal></expr>, <expr pos:start="31:18" pos:end="31:19"><literal type="number" pos:start="31:18" pos:end="31:19">14</literal></expr>, <expr pos:start="31:22" pos:end="31:23"><literal type="number" pos:start="31:22" pos:end="31:23">16</literal></expr>, <expr pos:start="31:26" pos:end="31:27"><literal type="number" pos:start="31:26" pos:end="31:27">18</literal></expr>, <expr pos:start="31:30" pos:end="31:31"><literal type="number" pos:start="31:30" pos:end="31:31">20</literal></expr>, <expr pos:start="31:34" pos:end="31:35"><literal type="number" pos:start="31:34" pos:end="31:35">21</literal></expr>, <expr pos:start="31:38" pos:end="31:39"><literal type="number" pos:start="31:38" pos:end="31:39">27</literal></expr>, <expr pos:start="31:42" pos:end="31:43"><literal type="number" pos:start="31:42" pos:end="31:43">32</literal></expr>, <expr pos:start="31:46" pos:end="31:46"><literal type="number" pos:start="31:46" pos:end="31:46">6</literal></expr>, <expr pos:start="31:49" pos:end="31:49"><literal type="number" pos:start="31:49" pos:end="31:49">0</literal></expr>, <expr pos:start="31:52" pos:end="31:52"><literal type="number" pos:start="31:52" pos:end="31:52">0</literal></expr>, <expr pos:start="31:55" pos:end="31:55"><literal type="number" pos:start="31:55" pos:end="31:55">0</literal></expr>, <expr pos:start="31:58" pos:end="31:58"><literal type="number" pos:start="31:58" pos:end="31:58">0</literal></expr>, <expr pos:start="31:61" pos:end="31:61"><literal type="number" pos:start="31:61" pos:end="31:61">0</literal></expr>, <expr pos:start="31:64" pos:end="31:64"><literal type="number" pos:start="31:64" pos:end="31:64">0</literal></expr>, <expr pos:start="31:67" pos:end="31:67"><literal type="number" pos:start="31:67" pos:end="31:67">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:20"><decl pos:start="33:9" pos:end="33:19"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:15">len</name> <init pos:start="33:17" pos:end="33:19">= <expr pos:start="33:19" pos:end="33:19"><literal type="number" pos:start="33:19" pos:end="33:19">0</literal></expr></init></decl>;</decl_stmt>



        <while pos:start="37:9" pos:end="43:9">while <condition pos:start="37:15" pos:end="37:50">(<expr pos:start="37:16" pos:end="37:49"><name pos:start="37:16" pos:end="37:18">len</name> <operator pos:start="37:20" pos:end="37:20">&lt;</operator> <name pos:start="37:22" pos:end="37:25">size</name> <operator pos:start="37:27" pos:end="37:28">&amp;&amp;</operator> <name pos:start="37:30" pos:end="37:43">samplesInChunk</name> <operator pos:start="37:45" pos:end="37:45">&lt;</operator> <literal type="number" pos:start="37:47" pos:end="37:49">100</literal></expr>)</condition> <block pos:start="37:52" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:29">

            <expr_stmt pos:start="39:13" pos:end="39:61"><expr pos:start="39:13" pos:end="39:60"><name pos:start="39:13" pos:end="39:15">len</name> <operator pos:start="39:17" pos:end="39:18">+=</operator> <name pos:start="39:20" pos:end="39:60"><name pos:start="39:20" pos:end="39:30">packed_size</name><index pos:start="39:31" pos:end="39:60">[<expr pos:start="39:32" pos:end="39:59"><operator pos:start="39:32" pos:end="39:32">(</operator><name pos:start="39:33" pos:end="39:46"><name pos:start="39:33" pos:end="39:35">pkt</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:41">data</name><index pos:start="39:42" pos:end="39:46">[<expr pos:start="39:43" pos:end="39:45"><name pos:start="39:43" pos:end="39:45">len</name></expr>]</index></name> <operator pos:start="39:48" pos:end="39:49">&gt;&gt;</operator> <literal type="number" pos:start="39:51" pos:end="39:51">3</literal><operator pos:start="39:52" pos:end="39:52">)</operator> <operator pos:start="39:54" pos:end="39:54">&amp;</operator> <literal type="number" pos:start="39:56" pos:end="39:59">0x0F</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:29"><expr pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:26">samplesInChunk</name><operator pos:start="41:27" pos:end="41:28">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if<condition pos:start="45:11" pos:end="45:30">(<expr pos:start="45:12" pos:end="45:29"><name pos:start="45:12" pos:end="45:25">samplesInChunk</name> <operator pos:start="45:27" pos:end="45:27">&gt;</operator> <literal type="number" pos:start="45:29" pos:end="45:29">1</literal></expr>)</condition><block pos:start="45:31" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:22">

            <expr_stmt pos:start="47:13" pos:end="47:112"><expr pos:start="47:13" pos:end="47:111"><call pos:start="47:13" pos:end="47:111"><name pos:start="47:13" pos:end="47:18">av_log</name><argument_list pos:start="47:19" pos:end="47:111">(<argument pos:start="47:20" pos:end="47:20"><expr pos:start="47:20" pos:end="47:20"><name pos:start="47:20" pos:end="47:20">s</name></expr></argument>, <argument pos:start="47:23" pos:end="47:34"><expr pos:start="47:23" pos:end="47:34"><name pos:start="47:23" pos:end="47:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:37" pos:end="47:110"><expr pos:start="47:37" pos:end="47:110"><literal type="string" pos:start="47:37" pos:end="47:110">"fatal error, input is not a single packet, implement a AVParser for it\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:22">return <expr pos:start="49:20" pos:end="49:21"><operator pos:start="49:20" pos:end="49:20">-</operator><literal type="number" pos:start="49:21" pos:end="49:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="53:7" pos:end="55:46">else if <condition pos:start="53:15" pos:end="53:31">(<expr pos:start="53:16" pos:end="53:30"><name pos:start="53:16" pos:end="53:30"><name pos:start="53:16" pos:end="53:18">trk</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:30">sampleSize</name></name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:46"><block_content pos:start="55:9" pos:end="55:46">

        <expr_stmt pos:start="55:9" pos:end="55:46"><expr pos:start="55:9" pos:end="55:45"><name pos:start="55:9" pos:end="55:22">samplesInChunk</name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:29">size</name><operator pos:start="55:30" pos:end="55:30">/</operator><name pos:start="55:31" pos:end="55:45"><name pos:start="55:31" pos:end="55:33">trk</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:45">sampleSize</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="57:5" pos:end="59:27">else<block type="pseudo" pos:start="59:9" pos:end="59:27"><block_content pos:start="59:9" pos:end="59:27">

        <expr_stmt pos:start="59:9" pos:end="59:27"><expr pos:start="59:9" pos:end="59:26"><name pos:start="59:9" pos:end="59:22">samplesInChunk</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <literal type="number" pos:start="59:26" pos:end="59:26">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:37">/* copy extradata if it exists */</comment>

    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="73:5">if <condition pos:start="65:8" pos:end="65:52">(<expr pos:start="65:9" pos:end="65:51"><name pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:11">trk</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:19">vosLen</name></name> <operator pos:start="65:21" pos:end="65:22">==</operator> <literal type="number" pos:start="65:24" pos:end="65:24">0</literal> <operator pos:start="65:26" pos:end="65:27">&amp;&amp;</operator> <name pos:start="65:29" pos:end="65:47"><name pos:start="65:29" pos:end="65:31">enc</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:47">extradata_size</name></name> <operator pos:start="65:49" pos:end="65:49">&gt;</operator> <literal type="number" pos:start="65:51" pos:end="65:51">0</literal></expr>)</condition> <block pos:start="65:54" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:58">

        <expr_stmt pos:start="67:9" pos:end="67:42"><expr pos:start="67:9" pos:end="67:41"><name pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:11">trk</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:19">vosLen</name></name> <operator pos:start="67:21" pos:end="67:21">=</operator> <name pos:start="67:23" pos:end="67:41"><name pos:start="67:23" pos:end="67:25">enc</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:41">extradata_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:46"><expr pos:start="69:9" pos:end="69:45"><name pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:11">trk</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:20">vosData</name></name> <operator pos:start="69:22" pos:end="69:22">=</operator> <call pos:start="69:24" pos:end="69:45"><name pos:start="69:24" pos:end="69:32">av_malloc</name><argument_list pos:start="69:33" pos:end="69:45">(<argument pos:start="69:34" pos:end="69:44"><expr pos:start="69:34" pos:end="69:44"><name pos:start="69:34" pos:end="69:44"><name pos:start="69:34" pos:end="69:36">trk</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:44">vosLen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:58"><expr pos:start="71:9" pos:end="71:57"><call pos:start="71:9" pos:end="71:57"><name pos:start="71:9" pos:end="71:14">memcpy</name><argument_list pos:start="71:15" pos:end="71:57">(<argument pos:start="71:16" pos:end="71:27"><expr pos:start="71:16" pos:end="71:27"><name pos:start="71:16" pos:end="71:27"><name pos:start="71:16" pos:end="71:18">trk</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:27">vosData</name></name></expr></argument>, <argument pos:start="71:30" pos:end="71:43"><expr pos:start="71:30" pos:end="71:43"><name pos:start="71:30" pos:end="71:43"><name pos:start="71:30" pos:end="71:32">enc</name><operator pos:start="71:33" pos:end="71:34">-&gt;</operator><name pos:start="71:35" pos:end="71:43">extradata</name></name></expr></argument>, <argument pos:start="71:46" pos:end="71:56"><expr pos:start="71:46" pos:end="71:56"><name pos:start="71:46" pos:end="71:56"><name pos:start="71:46" pos:end="71:48">trk</name><operator pos:start="71:49" pos:end="71:50">-&gt;</operator><name pos:start="71:51" pos:end="71:56">vosLen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="107:5"><if pos:start="77:5" pos:end="93:5">if <condition pos:start="77:8" pos:end="77:91">(<expr pos:start="77:9" pos:end="77:90"><name pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:11">enc</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:21">codec_id</name></name> <operator pos:start="77:23" pos:end="77:24">==</operator> <name pos:start="77:26" pos:end="77:38">CODEC_ID_H264</name> <operator pos:start="77:40" pos:end="77:41">&amp;&amp;</operator> <name pos:start="77:43" pos:end="77:53"><name pos:start="77:43" pos:end="77:45">trk</name><operator pos:start="77:46" pos:end="77:47">-&gt;</operator><name pos:start="77:48" pos:end="77:53">vosLen</name></name> <operator pos:start="77:55" pos:end="77:55">&gt;</operator> <literal type="number" pos:start="77:57" pos:end="77:57">0</literal> <operator pos:start="77:59" pos:end="77:60">&amp;&amp;</operator> <operator pos:start="77:62" pos:end="77:62">*</operator><operator pos:start="77:63" pos:end="77:63">(</operator><name pos:start="77:64" pos:end="77:70">uint8_t</name> <operator pos:start="77:72" pos:end="77:72">*</operator><operator pos:start="77:73" pos:end="77:73">)</operator><name pos:start="77:74" pos:end="77:85"><name pos:start="77:74" pos:end="77:76">trk</name><operator pos:start="77:77" pos:end="77:78">-&gt;</operator><name pos:start="77:79" pos:end="77:85">vosData</name></name> <operator pos:start="77:87" pos:end="77:88">!=</operator> <literal type="number" pos:start="77:90" pos:end="77:90">1</literal></expr>)</condition> <block pos:start="77:93" pos:end="93:5">{<block_content pos:start="83:9" pos:end="91:25">

        <comment type="block" pos:start="79:9" pos:end="79:47">/* from x264 or from bytestream h264 */</comment>

        <comment type="block" pos:start="81:9" pos:end="81:36">/* nal reformating needed */</comment>

        <decl_stmt pos:start="83:9" pos:end="83:76"><decl pos:start="83:9" pos:end="83:75"><type pos:start="83:9" pos:end="83:11"><name pos:start="83:9" pos:end="83:11">int</name></type> <name pos:start="83:13" pos:end="83:15">ret</name> <init pos:start="83:17" pos:end="83:75">= <expr pos:start="83:19" pos:end="83:75"><call pos:start="83:19" pos:end="83:75"><name pos:start="83:19" pos:end="83:40">ff_avc_parse_nal_units</name><argument_list pos:start="83:41" pos:end="83:75">(<argument pos:start="83:42" pos:end="83:50"><expr pos:start="83:42" pos:end="83:50"><name pos:start="83:42" pos:end="83:50"><name pos:start="83:42" pos:end="83:44">pkt</name><operator pos:start="83:45" pos:end="83:46">-&gt;</operator><name pos:start="83:47" pos:end="83:50">data</name></name></expr></argument>, <argument pos:start="83:53" pos:end="83:62"><expr pos:start="83:53" pos:end="83:62"><operator pos:start="83:53" pos:end="83:53">&amp;</operator><name pos:start="83:54" pos:end="83:62"><name pos:start="83:54" pos:end="83:56">pkt</name><operator pos:start="83:57" pos:end="83:58">-&gt;</operator><name pos:start="83:59" pos:end="83:62">data</name></name></expr></argument>, <argument pos:start="83:65" pos:end="83:74"><expr pos:start="83:65" pos:end="83:74"><operator pos:start="83:65" pos:end="83:65">&amp;</operator><name pos:start="83:66" pos:end="83:74"><name pos:start="83:66" pos:end="83:68">pkt</name><operator pos:start="83:69" pos:end="83:70">-&gt;</operator><name pos:start="83:71" pos:end="83:74">size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="85:9" pos:end="87:23"><if pos:start="85:9" pos:end="87:23">if <condition pos:start="85:12" pos:end="85:20">(<expr pos:start="85:13" pos:end="85:19"><name pos:start="85:13" pos:end="85:15">ret</name> <operator pos:start="85:17" pos:end="85:17">&lt;</operator> <literal type="number" pos:start="85:19" pos:end="85:19">0</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:23"><block_content pos:start="87:13" pos:end="87:23">

            <return pos:start="87:13" pos:end="87:23">return <expr pos:start="87:20" pos:end="87:22"><name pos:start="87:20" pos:end="87:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:26"><expr pos:start="89:9" pos:end="89:25"><call pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:14">assert</name><argument_list pos:start="89:15" pos:end="89:25">(<argument pos:start="89:16" pos:end="89:24"><expr pos:start="89:16" pos:end="89:24"><name pos:start="89:16" pos:end="89:24"><name pos:start="89:16" pos:end="89:18">pkt</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:24">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:25"><expr pos:start="91:9" pos:end="91:24"><name pos:start="91:9" pos:end="91:12">size</name> <operator pos:start="91:14" pos:end="91:14">=</operator> <name pos:start="91:16" pos:end="91:24"><name pos:start="91:16" pos:end="91:18">pkt</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:24">size</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="93:7" pos:end="107:5">else if <condition pos:start="93:15" pos:end="93:63">(<expr pos:start="93:16" pos:end="93:62"><name pos:start="93:16" pos:end="93:28"><name pos:start="93:16" pos:end="93:18">enc</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:28">codec_id</name></name> <operator pos:start="93:30" pos:end="93:31">==</operator> <name pos:start="93:33" pos:end="93:46">CODEC_ID_DNXHD</name> <operator pos:start="93:48" pos:end="93:49">&amp;&amp;</operator> <operator pos:start="93:51" pos:end="93:51">!</operator><name pos:start="93:52" pos:end="93:62"><name pos:start="93:52" pos:end="93:54">trk</name><operator pos:start="93:55" pos:end="93:56">-&gt;</operator><name pos:start="93:57" pos:end="93:62">vosLen</name></name></expr>)</condition> <block pos:start="93:65" pos:end="107:5">{<block_content pos:start="97:9" pos:end="105:45">

        <comment type="block" pos:start="95:9" pos:end="95:54">/* copy frame header to create needed atoms */</comment>

        <if_stmt pos:start="97:9" pos:end="99:22"><if pos:start="97:9" pos:end="99:22">if <condition pos:start="97:12" pos:end="97:23">(<expr pos:start="97:13" pos:end="97:22"><name pos:start="97:13" pos:end="97:16">size</name> <operator pos:start="97:18" pos:end="97:18">&lt;</operator> <literal type="number" pos:start="97:20" pos:end="97:22">640</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:22"><block_content pos:start="99:13" pos:end="99:22">

            <return pos:start="99:13" pos:end="99:22">return <expr pos:start="99:20" pos:end="99:21"><operator pos:start="99:20" pos:end="99:20">-</operator><literal type="number" pos:start="99:21" pos:end="99:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:26"><expr pos:start="101:9" pos:end="101:25"><name pos:start="101:9" pos:end="101:19"><name pos:start="101:9" pos:end="101:11">trk</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:19">vosLen</name></name> <operator pos:start="101:21" pos:end="101:21">=</operator> <literal type="number" pos:start="101:23" pos:end="101:25">640</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:46"><expr pos:start="103:9" pos:end="103:45"><name pos:start="103:9" pos:end="103:20"><name pos:start="103:9" pos:end="103:11">trk</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:20">vosData</name></name> <operator pos:start="103:22" pos:end="103:22">=</operator> <call pos:start="103:24" pos:end="103:45"><name pos:start="103:24" pos:end="103:32">av_malloc</name><argument_list pos:start="103:33" pos:end="103:45">(<argument pos:start="103:34" pos:end="103:44"><expr pos:start="103:34" pos:end="103:44"><name pos:start="103:34" pos:end="103:44"><name pos:start="103:34" pos:end="103:36">trk</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:44">vosLen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:45"><expr pos:start="105:9" pos:end="105:44"><call pos:start="105:9" pos:end="105:44"><name pos:start="105:9" pos:end="105:14">memcpy</name><argument_list pos:start="105:15" pos:end="105:44">(<argument pos:start="105:16" pos:end="105:27"><expr pos:start="105:16" pos:end="105:27"><name pos:start="105:16" pos:end="105:27"><name pos:start="105:16" pos:end="105:18">trk</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:27">vosData</name></name></expr></argument>, <argument pos:start="105:30" pos:end="105:38"><expr pos:start="105:30" pos:end="105:38"><name pos:start="105:30" pos:end="105:38"><name pos:start="105:30" pos:end="105:32">pkt</name><operator pos:start="105:33" pos:end="105:34">-&gt;</operator><name pos:start="105:35" pos:end="105:38">data</name></name></expr></argument>, <argument pos:start="105:41" pos:end="105:43"><expr pos:start="105:41" pos:end="105:43"><literal type="number" pos:start="105:41" pos:end="105:43">640</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="119:5"><if pos:start="111:5" pos:end="119:5">if <condition pos:start="111:8" pos:end="111:47">(<expr pos:start="111:9" pos:end="111:46"><operator pos:start="111:9" pos:end="111:9">!</operator><operator pos:start="111:10" pos:end="111:10">(</operator><name pos:start="111:11" pos:end="111:20"><name pos:start="111:11" pos:end="111:13">trk</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:20">entry</name></name> <operator pos:start="111:22" pos:end="111:22">%</operator> <name pos:start="111:24" pos:end="111:45">MOV_INDEX_CLUSTER_SIZE</name><operator pos:start="111:46" pos:end="111:46">)</operator></expr>)</condition> <block pos:start="111:49" pos:end="119:5">{<block_content pos:start="113:9" pos:end="117:22">

        <expr_stmt pos:start="113:9" pos:end="113:111"><expr pos:start="113:9" pos:end="113:110"><name pos:start="113:9" pos:end="113:20"><name pos:start="113:9" pos:end="113:11">trk</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:20">cluster</name></name> <operator pos:start="113:22" pos:end="113:22">=</operator> <call pos:start="113:24" pos:end="113:110"><name pos:start="113:24" pos:end="113:33">av_realloc</name><argument_list pos:start="113:34" pos:end="113:110">(<argument pos:start="113:35" pos:end="113:46"><expr pos:start="113:35" pos:end="113:46"><name pos:start="113:35" pos:end="113:46"><name pos:start="113:35" pos:end="113:37">trk</name><operator pos:start="113:38" pos:end="113:39">-&gt;</operator><name pos:start="113:40" pos:end="113:46">cluster</name></name></expr></argument>, <argument pos:start="113:49" pos:end="113:109"><expr pos:start="113:49" pos:end="113:109"><operator pos:start="113:49" pos:end="113:49">(</operator><name pos:start="113:50" pos:end="113:59"><name pos:start="113:50" pos:end="113:52">trk</name><operator pos:start="113:53" pos:end="113:54">-&gt;</operator><name pos:start="113:55" pos:end="113:59">entry</name></name> <operator pos:start="113:61" pos:end="113:61">+</operator> <name pos:start="113:63" pos:end="113:84">MOV_INDEX_CLUSTER_SIZE</name><operator pos:start="113:85" pos:end="113:85">)</operator> <operator pos:start="113:87" pos:end="113:87">*</operator> <sizeof pos:start="113:89" pos:end="113:109">sizeof<argument_list pos:start="113:95" pos:end="113:109">(<argument pos:start="113:96" pos:end="113:108"><expr pos:start="113:96" pos:end="113:108"><operator pos:start="113:96" pos:end="113:96">*</operator><name pos:start="113:97" pos:end="113:108"><name pos:start="113:97" pos:end="113:99">trk</name><operator pos:start="113:100" pos:end="113:101">-&gt;</operator><name pos:start="113:102" pos:end="113:108">cluster</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="117:22"><if pos:start="115:9" pos:end="117:22">if <condition pos:start="115:12" pos:end="115:26">(<expr pos:start="115:13" pos:end="115:25"><operator pos:start="115:13" pos:end="115:13">!</operator><name pos:start="115:14" pos:end="115:25"><name pos:start="115:14" pos:end="115:16">trk</name><operator pos:start="115:17" pos:end="115:18">-&gt;</operator><name pos:start="115:19" pos:end="115:25">cluster</name></name></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:22"><block_content pos:start="117:13" pos:end="117:22">

            <return pos:start="117:13" pos:end="117:22">return <expr pos:start="117:20" pos:end="117:21"><operator pos:start="117:20" pos:end="117:20">-</operator><literal type="number" pos:start="117:21" pos:end="117:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:49"><expr pos:start="123:5" pos:end="123:48"><name pos:start="123:5" pos:end="123:28"><name pos:start="123:5" pos:end="123:7">trk</name><operator pos:start="123:8" pos:end="123:9">-&gt;</operator><name pos:start="123:10" pos:end="123:16">cluster</name><index pos:start="123:17" pos:end="123:28">[<expr pos:start="123:18" pos:end="123:27"><name pos:start="123:18" pos:end="123:27"><name pos:start="123:18" pos:end="123:20">trk</name><operator pos:start="123:21" pos:end="123:22">-&gt;</operator><name pos:start="123:23" pos:end="123:27">entry</name></name></expr>]</index></name><operator pos:start="123:29" pos:end="123:29">.</operator><name pos:start="123:30" pos:end="123:32">pos</name> <operator pos:start="123:34" pos:end="123:34">=</operator> <call pos:start="123:36" pos:end="123:48"><name pos:start="123:36" pos:end="123:44">url_ftell</name><argument_list pos:start="123:45" pos:end="123:48">(<argument pos:start="123:46" pos:end="123:47"><expr pos:start="123:46" pos:end="123:47"><name pos:start="123:46" pos:end="123:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:61"><expr pos:start="125:5" pos:end="125:60"><name pos:start="125:5" pos:end="125:28"><name pos:start="125:5" pos:end="125:7">trk</name><operator pos:start="125:8" pos:end="125:9">-&gt;</operator><name pos:start="125:10" pos:end="125:16">cluster</name><index pos:start="125:17" pos:end="125:28">[<expr pos:start="125:18" pos:end="125:27"><name pos:start="125:18" pos:end="125:27"><name pos:start="125:18" pos:end="125:20">trk</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:27">entry</name></name></expr>]</index></name><operator pos:start="125:29" pos:end="125:29">.</operator><name pos:start="125:30" pos:end="125:43">samplesInChunk</name> <operator pos:start="125:45" pos:end="125:45">=</operator> <name pos:start="125:47" pos:end="125:60">samplesInChunk</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:41"><expr pos:start="127:5" pos:end="127:40"><name pos:start="127:5" pos:end="127:28"><name pos:start="127:5" pos:end="127:7">trk</name><operator pos:start="127:8" pos:end="127:9">-&gt;</operator><name pos:start="127:10" pos:end="127:16">cluster</name><index pos:start="127:17" pos:end="127:28">[<expr pos:start="127:18" pos:end="127:27"><name pos:start="127:18" pos:end="127:27"><name pos:start="127:18" pos:end="127:20">trk</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:27">entry</name></name></expr>]</index></name><operator pos:start="127:29" pos:end="127:29">.</operator><name pos:start="127:30" pos:end="127:33">size</name> <operator pos:start="127:35" pos:end="127:35">=</operator> <name pos:start="127:37" pos:end="127:40">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:54"><expr pos:start="129:5" pos:end="129:53"><name pos:start="129:5" pos:end="129:28"><name pos:start="129:5" pos:end="129:7">trk</name><operator pos:start="129:8" pos:end="129:9">-&gt;</operator><name pos:start="129:10" pos:end="129:16">cluster</name><index pos:start="129:17" pos:end="129:28">[<expr pos:start="129:18" pos:end="129:27"><name pos:start="129:18" pos:end="129:27"><name pos:start="129:18" pos:end="129:20">trk</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:27">entry</name></name></expr>]</index></name><operator pos:start="129:29" pos:end="129:29">.</operator><name pos:start="129:30" pos:end="129:36">entries</name> <operator pos:start="129:38" pos:end="129:38">=</operator> <name pos:start="129:40" pos:end="129:53">samplesInChunk</name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:44"><expr pos:start="131:5" pos:end="131:43"><name pos:start="131:5" pos:end="131:28"><name pos:start="131:5" pos:end="131:7">trk</name><operator pos:start="131:8" pos:end="131:9">-&gt;</operator><name pos:start="131:10" pos:end="131:16">cluster</name><index pos:start="131:17" pos:end="131:28">[<expr pos:start="131:18" pos:end="131:27"><name pos:start="131:18" pos:end="131:27"><name pos:start="131:18" pos:end="131:20">trk</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:27">entry</name></name></expr>]</index></name><operator pos:start="131:29" pos:end="131:29">.</operator><name pos:start="131:30" pos:end="131:32">dts</name> <operator pos:start="131:34" pos:end="131:34">=</operator> <name pos:start="131:36" pos:end="131:43"><name pos:start="131:36" pos:end="131:38">pkt</name><operator pos:start="131:39" pos:end="131:40">-&gt;</operator><name pos:start="131:41" pos:end="131:43">dts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:72"><expr pos:start="133:5" pos:end="133:71"><name pos:start="133:5" pos:end="133:22"><name pos:start="133:5" pos:end="133:7">trk</name><operator pos:start="133:8" pos:end="133:9">-&gt;</operator><name pos:start="133:10" pos:end="133:22">trackDuration</name></name> <operator pos:start="133:24" pos:end="133:24">=</operator> <name pos:start="133:26" pos:end="133:33"><name pos:start="133:26" pos:end="133:28">pkt</name><operator pos:start="133:29" pos:end="133:30">-&gt;</operator><name pos:start="133:31" pos:end="133:33">dts</name></name> <operator pos:start="133:35" pos:end="133:35">-</operator> <name pos:start="133:37" pos:end="133:51"><name pos:start="133:37" pos:end="133:39">trk</name><operator pos:start="133:40" pos:end="133:41">-&gt;</operator><name pos:start="133:42" pos:end="133:48">cluster</name><index pos:start="133:49" pos:end="133:51">[<expr pos:start="133:50" pos:end="133:50"><literal type="number" pos:start="133:50" pos:end="133:50">0</literal></expr>]</index></name><operator pos:start="133:52" pos:end="133:52">.</operator><name pos:start="133:53" pos:end="133:55">dts</name> <operator pos:start="133:57" pos:end="133:57">+</operator> <name pos:start="133:59" pos:end="133:71"><name pos:start="133:59" pos:end="133:61">pkt</name><operator pos:start="133:62" pos:end="133:63">-&gt;</operator><name pos:start="133:64" pos:end="133:71">duration</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="137:5" pos:end="151:5"><if pos:start="137:5" pos:end="151:5">if<condition pos:start="137:7" pos:end="137:43">(<expr pos:start="137:8" pos:end="137:42"><name pos:start="137:8" pos:end="137:22"><name pos:start="137:8" pos:end="137:10">enc</name><operator pos:start="137:11" pos:end="137:12">-&gt;</operator><name pos:start="137:13" pos:end="137:22">codec_type</name></name> <operator pos:start="137:24" pos:end="137:25">==</operator> <name pos:start="137:27" pos:end="137:42">CODEC_TYPE_VIDEO</name></expr>)</condition> <block pos:start="137:45" pos:end="151:5">{<block_content pos:start="139:9" pos:end="149:32">

        <if_stmt pos:start="139:9" pos:end="141:32"><if pos:start="139:9" pos:end="141:32">if <condition pos:start="139:12" pos:end="139:33">(<expr pos:start="139:13" pos:end="139:32"><name pos:start="139:13" pos:end="139:20"><name pos:start="139:13" pos:end="139:15">pkt</name><operator pos:start="139:16" pos:end="139:17">-&gt;</operator><name pos:start="139:18" pos:end="139:20">dts</name></name> <operator pos:start="139:22" pos:end="139:23">!=</operator> <name pos:start="139:25" pos:end="139:32"><name pos:start="139:25" pos:end="139:27">pkt</name><operator pos:start="139:28" pos:end="139:29">-&gt;</operator><name pos:start="139:30" pos:end="139:32">pts</name></name></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:32"><block_content pos:start="141:13" pos:end="141:32">

            <expr_stmt pos:start="141:13" pos:end="141:32"><expr pos:start="141:13" pos:end="141:31"><name pos:start="141:13" pos:end="141:27"><name pos:start="141:13" pos:end="141:15">trk</name><operator pos:start="141:16" pos:end="141:17">-&gt;</operator><name pos:start="141:18" pos:end="141:27">hasBframes</name></name> <operator pos:start="141:29" pos:end="141:29">=</operator> <literal type="number" pos:start="141:31" pos:end="141:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:59"><expr pos:start="143:9" pos:end="143:58"><name pos:start="143:9" pos:end="143:32"><name pos:start="143:9" pos:end="143:11">trk</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:20">cluster</name><index pos:start="143:21" pos:end="143:32">[<expr pos:start="143:22" pos:end="143:31"><name pos:start="143:22" pos:end="143:31"><name pos:start="143:22" pos:end="143:24">trk</name><operator pos:start="143:25" pos:end="143:26">-&gt;</operator><name pos:start="143:27" pos:end="143:31">entry</name></name></expr>]</index></name><operator pos:start="143:33" pos:end="143:33">.</operator><name pos:start="143:34" pos:end="143:36">cts</name> <operator pos:start="143:38" pos:end="143:38">=</operator> <name pos:start="143:40" pos:end="143:47"><name pos:start="143:40" pos:end="143:42">pkt</name><operator pos:start="143:43" pos:end="143:44">-&gt;</operator><name pos:start="143:45" pos:end="143:47">pts</name></name> <operator pos:start="143:49" pos:end="143:49">-</operator> <name pos:start="143:51" pos:end="143:58"><name pos:start="143:51" pos:end="143:53">pkt</name><operator pos:start="143:54" pos:end="143:55">-&gt;</operator><name pos:start="143:56" pos:end="143:58">dts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:75"><expr pos:start="145:9" pos:end="145:74"><name pos:start="145:9" pos:end="145:32"><name pos:start="145:9" pos:end="145:11">trk</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:20">cluster</name><index pos:start="145:21" pos:end="145:32">[<expr pos:start="145:22" pos:end="145:31"><name pos:start="145:22" pos:end="145:31"><name pos:start="145:22" pos:end="145:24">trk</name><operator pos:start="145:25" pos:end="145:26">-&gt;</operator><name pos:start="145:27" pos:end="145:31">entry</name></name></expr>]</index></name><operator pos:start="145:33" pos:end="145:33">.</operator><name pos:start="145:34" pos:end="145:42">key_frame</name> <operator pos:start="145:44" pos:end="145:44">=</operator> <operator pos:start="145:46" pos:end="145:46">!</operator><operator pos:start="145:47" pos:end="145:47">!</operator><operator pos:start="145:48" pos:end="145:48">(</operator><name pos:start="145:49" pos:end="145:58"><name pos:start="145:49" pos:end="145:51">pkt</name><operator pos:start="145:52" pos:end="145:53">-&gt;</operator><name pos:start="145:54" pos:end="145:58">flags</name></name> <operator pos:start="145:60" pos:end="145:60">&amp;</operator> <name pos:start="145:62" pos:end="145:73">PKT_FLAG_KEY</name><operator pos:start="145:74" pos:end="145:74">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="149:32"><if pos:start="147:9" pos:end="149:32">if<condition pos:start="147:11" pos:end="147:46">(<expr pos:start="147:12" pos:end="147:45"><name pos:start="147:12" pos:end="147:35"><name pos:start="147:12" pos:end="147:14">trk</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:23">cluster</name><index pos:start="147:24" pos:end="147:35">[<expr pos:start="147:25" pos:end="147:34"><name pos:start="147:25" pos:end="147:34"><name pos:start="147:25" pos:end="147:27">trk</name><operator pos:start="147:28" pos:end="147:29">-&gt;</operator><name pos:start="147:30" pos:end="147:34">entry</name></name></expr>]</index></name><operator pos:start="147:36" pos:end="147:36">.</operator><name pos:start="147:37" pos:end="147:45">key_frame</name></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:32"><block_content pos:start="149:13" pos:end="149:32">

            <expr_stmt pos:start="149:13" pos:end="149:32"><expr pos:start="149:13" pos:end="149:31"><name pos:start="149:13" pos:end="149:29"><name pos:start="149:13" pos:end="149:15">trk</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:29">hasKeyframes</name></name><operator pos:start="149:30" pos:end="149:31">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:17"><expr pos:start="153:5" pos:end="153:16"><name pos:start="153:5" pos:end="153:14"><name pos:start="153:5" pos:end="153:7">trk</name><operator pos:start="153:8" pos:end="153:9">-&gt;</operator><name pos:start="153:10" pos:end="153:14">entry</name></name><operator pos:start="153:15" pos:end="153:16">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:39"><expr pos:start="155:5" pos:end="155:38"><name pos:start="155:5" pos:end="155:20"><name pos:start="155:5" pos:end="155:7">trk</name><operator pos:start="155:8" pos:end="155:9">-&gt;</operator><name pos:start="155:10" pos:end="155:20">sampleCount</name></name> <operator pos:start="155:22" pos:end="155:23">+=</operator> <name pos:start="155:25" pos:end="155:38">samplesInChunk</name></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:27"><expr pos:start="157:5" pos:end="157:26"><name pos:start="157:5" pos:end="157:18"><name pos:start="157:5" pos:end="157:7">mov</name><operator pos:start="157:8" pos:end="157:9">-&gt;</operator><name pos:start="157:10" pos:end="157:18">mdat_size</name></name> <operator pos:start="157:20" pos:end="157:21">+=</operator> <name pos:start="157:23" pos:end="157:26">size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:36"><expr pos:start="161:5" pos:end="161:35"><call pos:start="161:5" pos:end="161:35"><name pos:start="161:5" pos:end="161:14">put_buffer</name><argument_list pos:start="161:15" pos:end="161:35">(<argument pos:start="161:16" pos:end="161:17"><expr pos:start="161:16" pos:end="161:17"><name pos:start="161:16" pos:end="161:17">pb</name></expr></argument>, <argument pos:start="161:20" pos:end="161:28"><expr pos:start="161:20" pos:end="161:28"><name pos:start="161:20" pos:end="161:28"><name pos:start="161:20" pos:end="161:22">pkt</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:28">data</name></name></expr></argument>, <argument pos:start="161:31" pos:end="161:34"><expr pos:start="161:31" pos:end="161:34"><name pos:start="161:31" pos:end="161:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:25"><expr pos:start="165:5" pos:end="165:24"><call pos:start="165:5" pos:end="165:24"><name pos:start="165:5" pos:end="165:20">put_flush_packet</name><argument_list pos:start="165:21" pos:end="165:24">(<argument pos:start="165:22" pos:end="165:23"><expr pos:start="165:22" pos:end="165:23"><name pos:start="165:22" pos:end="165:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="167:5" pos:end="167:13">return <expr pos:start="167:12" pos:end="167:12"><literal type="number" pos:start="167:12" pos:end="167:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
