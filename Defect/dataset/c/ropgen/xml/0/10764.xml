<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10764.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="153:1"><decl pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name> <name pos:start="1:12" pos:end="1:17">RENAME</name></type><argument_list pos:start="1:18" pos:end="1:38">(<argument pos:start="1:19" pos:end="1:37"><expr pos:start="1:19" pos:end="1:37"><name pos:start="1:19" pos:end="1:37">epzs_motion_search2</name></expr></argument>)</argument_list><argument_list pos:start="1:39" pos:end="11:74">(<argument pos:start="1:40" pos:end="1:57"><expr pos:start="1:40" pos:end="1:57"><name pos:start="1:40" pos:end="1:53">MpegEncContext</name> <operator pos:start="1:55" pos:end="1:55">*</operator> <name pos:start="1:57" pos:end="1:57">s</name></expr></argument>,

                             <argument pos:start="3:30" pos:end="3:40"><expr pos:start="3:30" pos:end="3:40"><name pos:start="3:30" pos:end="3:32">int</name> <operator pos:start="3:34" pos:end="3:34">*</operator><name pos:start="3:35" pos:end="3:40">mx_ptr</name></expr></argument>, <argument pos:start="3:43" pos:end="3:53"><expr pos:start="3:43" pos:end="3:53"><name pos:start="3:43" pos:end="3:45">int</name> <operator pos:start="3:47" pos:end="3:47">*</operator><name pos:start="3:48" pos:end="3:53">my_ptr</name></expr></argument>,

                             <argument pos:start="5:30" pos:end="5:41"><expr pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:32">int</name> <name pos:start="5:34" pos:end="5:41"><name pos:start="5:34" pos:end="5:34">P</name><index pos:start="5:35" pos:end="5:38">[<expr pos:start="5:36" pos:end="5:37"><literal type="number" pos:start="5:36" pos:end="5:37">10</literal></expr>]</index><index pos:start="5:39" pos:end="5:41">[<expr pos:start="5:40" pos:end="5:40"><literal type="number" pos:start="5:40" pos:end="5:40">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="5:44" pos:end="5:53"><expr pos:start="5:44" pos:end="5:53"><name pos:start="5:44" pos:end="5:46">int</name> <name pos:start="5:48" pos:end="5:53">pred_x</name></expr></argument>, <argument pos:start="5:56" pos:end="5:65"><expr pos:start="5:56" pos:end="5:65"><name pos:start="5:56" pos:end="5:58">int</name> <name pos:start="5:60" pos:end="5:65">pred_y</name></expr></argument>,

                             <argument pos:start="7:30" pos:end="7:49"><expr pos:start="7:30" pos:end="7:49"><name pos:start="7:30" pos:end="7:36">uint8_t</name> <operator pos:start="7:38" pos:end="7:38">*</operator><name pos:start="7:39" pos:end="7:49"><name pos:start="7:39" pos:end="7:46">src_data</name><index pos:start="7:47" pos:end="7:49">[<expr pos:start="7:48" pos:end="7:48"><literal type="number" pos:start="7:48" pos:end="7:48">3</literal></expr>]</index></name></expr></argument>, 

                             <argument pos:start="9:30" pos:end="9:49"><expr pos:start="9:30" pos:end="9:49"><name pos:start="9:30" pos:end="9:36">uint8_t</name> <operator pos:start="9:38" pos:end="9:38">*</operator><name pos:start="9:39" pos:end="9:49"><name pos:start="9:39" pos:end="9:46">ref_data</name><index pos:start="9:47" pos:end="9:49">[<expr pos:start="9:48" pos:end="9:48"><literal type="number" pos:start="9:48" pos:end="9:48">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="9:52" pos:end="9:61"><expr pos:start="9:52" pos:end="9:61"><name pos:start="9:52" pos:end="9:54">int</name> <name pos:start="9:56" pos:end="9:61">stride</name></expr></argument>, <argument pos:start="9:64" pos:end="9:75"><expr pos:start="9:64" pos:end="9:75"><name pos:start="9:64" pos:end="9:66">int</name> <name pos:start="9:68" pos:end="9:75">uvstride</name></expr></argument>, <argument pos:start="9:78" pos:end="9:98"><expr pos:start="9:78" pos:end="9:98"><call pos:start="9:78" pos:end="9:95"><name pos:start="9:78" pos:end="9:84">int16_t</name> <argument_list pos:start="9:86" pos:end="9:95">(<argument pos:start="9:87" pos:end="9:94"><expr pos:start="9:87" pos:end="9:94"><operator pos:start="9:87" pos:end="9:87">*</operator><name pos:start="9:88" pos:end="9:94">last_mv</name></expr></argument>)</argument_list></call><index pos:start="9:96" pos:end="9:98">[<expr pos:start="9:97" pos:end="9:97"><literal type="number" pos:start="9:97" pos:end="9:97">2</literal></expr>]</index></expr></argument>, 

                             <argument pos:start="11:30" pos:end="11:45"><expr pos:start="11:30" pos:end="11:45"><name pos:start="11:30" pos:end="11:32">int</name> <name pos:start="11:34" pos:end="11:45">ref_mv_scale</name></expr></argument>, <argument pos:start="11:48" pos:end="11:73"><expr pos:start="11:48" pos:end="11:73"><name pos:start="11:48" pos:end="11:54">uint8_t</name> <operator pos:start="11:56" pos:end="11:56">*</operator> <specifier pos:start="11:58" pos:end="11:62">const</specifier> <name pos:start="11:64" pos:end="11:73">mv_penalty</name></expr></argument>)</argument_list>

<block pos:start="13:1" pos:end="153:1">{<block_content pos:start="15:5" pos:end="151:16">

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:12">best</name><index pos:start="15:13" pos:end="15:15">[<expr pos:start="15:14" pos:end="15:14"><literal type="number" pos:start="15:14" pos:end="15:14">2</literal></expr>]</index></name><init pos:start="15:16" pos:end="15:22">=<expr pos:start="15:17" pos:end="15:22"><block pos:start="15:17" pos:end="15:22">{<expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>, <expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">d</name></decl>, <decl pos:start="17:12" pos:end="17:15"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:15">dmin</name></decl>;</decl_stmt> 

    <decl_stmt pos:start="19:5" pos:end="19:41"><decl pos:start="19:5" pos:end="19:40"><type pos:start="19:5" pos:end="19:13"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name></type> <name pos:start="19:15" pos:end="19:19">shift</name><init pos:start="19:20" pos:end="19:40">= <expr pos:start="19:22" pos:end="19:40"><literal type="number" pos:start="19:22" pos:end="19:23">1</literal><operator pos:start="19:23" pos:end="19:23">+</operator><name pos:start="19:24" pos:end="19:40"><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:40">quarter_sample</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:29"><decl pos:start="21:5" pos:end="21:28"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:12">uint32_t</name> <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:17">map</name><init pos:start="21:18" pos:end="21:28">= <expr pos:start="21:20" pos:end="21:28"><name pos:start="21:20" pos:end="21:28"><name pos:start="21:20" pos:end="21:20">s</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:24">me</name><operator pos:start="21:25" pos:end="21:25">.</operator><name pos:start="21:26" pos:end="21:28">map</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:23"><decl pos:start="23:5" pos:end="23:22"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:22">map_generation</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:51"><decl pos:start="25:5" pos:end="25:50"><type pos:start="25:5" pos:end="25:13"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:13">int</name></type> <name pos:start="25:15" pos:end="25:28">penalty_factor</name><init pos:start="25:29" pos:end="25:50">= <expr pos:start="25:31" pos:end="25:50"><name pos:start="25:31" pos:end="25:50"><name pos:start="25:31" pos:end="25:31">s</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:35">me</name><operator pos:start="25:36" pos:end="25:36">.</operator><name pos:start="25:37" pos:end="25:50">penalty_factor</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:21"><decl pos:start="27:5" pos:end="27:20"><type pos:start="27:5" pos:end="27:13"><specifier pos:start="27:5" pos:end="27:9">const</specifier> <name pos:start="27:11" pos:end="27:13">int</name></type> <name pos:start="27:15" pos:end="27:18">size</name><init pos:start="27:19" pos:end="27:20">=<expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="27:23" pos:end="27:41">//FIXME pass as arg</comment>

    <decl_stmt pos:start="29:5" pos:end="29:18"><decl pos:start="29:5" pos:end="29:17"><type pos:start="29:5" pos:end="29:13"><specifier pos:start="29:5" pos:end="29:9">const</specifier> <name pos:start="29:11" pos:end="29:13">int</name></type> <name pos:start="29:15" pos:end="29:15">h</name><init pos:start="29:16" pos:end="29:17">=<expr pos:start="29:17" pos:end="29:17"><literal type="number" pos:start="29:17" pos:end="29:17">8</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:42"><decl pos:start="31:5" pos:end="31:41"><type pos:start="31:5" pos:end="31:13"><specifier pos:start="31:5" pos:end="31:9">const</specifier> <name pos:start="31:11" pos:end="31:13">int</name></type> <name pos:start="31:15" pos:end="31:27">ref_mv_stride</name><init pos:start="31:28" pos:end="31:41">= <expr pos:start="31:30" pos:end="31:41"><name pos:start="31:30" pos:end="31:41"><name pos:start="31:30" pos:end="31:30">s</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:41">mb_stride</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:58"><decl pos:start="33:5" pos:end="33:57"><type pos:start="33:5" pos:end="33:13"><specifier pos:start="33:5" pos:end="33:9">const</specifier> <name pos:start="33:11" pos:end="33:13">int</name></type> <name pos:start="33:15" pos:end="33:23">ref_mv_xy</name><init pos:start="33:24" pos:end="33:57">= <expr pos:start="33:26" pos:end="33:57"><name pos:start="33:26" pos:end="33:32"><name pos:start="33:26" pos:end="33:26">s</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:32">mb_x</name></name> <operator pos:start="33:34" pos:end="33:34">+</operator> <name pos:start="33:36" pos:end="33:42"><name pos:start="33:36" pos:end="33:36">s</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:42">mb_y</name></name> <operator pos:start="33:44" pos:end="33:44">*</operator><name pos:start="33:45" pos:end="33:57">ref_mv_stride</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:32"><decl pos:start="35:5" pos:end="35:19"><type pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:15">me_cmp_func</name></type> <name pos:start="35:17" pos:end="35:19">cmp</name></decl>, <decl pos:start="35:22" pos:end="35:31"><type ref="prev" pos:start="35:5" pos:end="35:15"/><name pos:start="35:22" pos:end="35:31">chroma_cmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="41:29"><decl pos:start="37:5" pos:end="41:28"><type pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:15">LOAD_COMMON</name></type>

    

    <name pos:start="41:5" pos:end="41:7">cmp</name><init pos:start="41:8" pos:end="41:28">= <expr pos:start="41:10" pos:end="41:28"><name pos:start="41:10" pos:end="41:28"><name pos:start="41:10" pos:end="41:10">s</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:15">dsp</name><operator pos:start="41:16" pos:end="41:16">.</operator><name pos:start="41:17" pos:end="41:22">me_cmp</name><index pos:start="41:23" pos:end="41:28">[<expr pos:start="41:24" pos:end="41:27"><name pos:start="41:24" pos:end="41:27">size</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:38"><expr pos:start="43:5" pos:end="43:37"><name pos:start="43:5" pos:end="43:14">chroma_cmp</name><operator pos:start="43:15" pos:end="43:15">=</operator> <name pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:22">dsp</name><operator pos:start="43:23" pos:end="43:23">.</operator><name pos:start="43:24" pos:end="43:29">me_cmp</name><index pos:start="43:30" pos:end="43:37">[<expr pos:start="43:31" pos:end="43:36"><name pos:start="43:31" pos:end="43:34">size</name><operator pos:start="43:35" pos:end="43:35">+</operator><literal type="number" pos:start="43:36" pos:end="43:36">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:45"><expr pos:start="47:5" pos:end="47:44"><name pos:start="47:5" pos:end="47:18">map_generation</name><operator pos:start="47:19" pos:end="47:19">=</operator> <call pos:start="47:21" pos:end="47:44"><name pos:start="47:21" pos:end="47:41">update_map_generation</name><argument_list pos:start="47:42" pos:end="47:44">(<argument pos:start="47:43" pos:end="47:43"><expr pos:start="47:43" pos:end="47:43"><name pos:start="47:43" pos:end="47:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:19"><expr pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:8">dmin</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <literal type="number" pos:start="51:12" pos:end="51:18">1000000</literal></expr>;</expr_stmt>

<comment type="line" pos:start="53:1" pos:end="53:51">//printf("%d %d %d %d //",xmin, ymin, xmax, ymax); </comment>

    <comment type="block" pos:start="55:5" pos:end="55:20">/* first line */</comment>

    <if_stmt pos:start="57:5" pos:end="89:5"><if pos:start="57:5" pos:end="67:5">if <condition pos:start="57:8" pos:end="57:28">(<expr pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:27">first_slice_line</name></name></expr>)</condition> <block pos:start="57:30" pos:end="67:5">{<block_content pos:start="59:9" pos:end="65:50">

	<macro pos:start="59:9" pos:end="59:52"><name pos:start="59:9" pos:end="59:16">CHECK_MV</name><argument_list pos:start="59:17" pos:end="59:52">(<argument pos:start="59:18" pos:end="59:33">P_LEFT[<literal type="number" pos:start="59:25" pos:end="59:25">0</literal>]&gt;&gt;shift</argument>, <argument pos:start="59:36" pos:end="59:51">P_LEFT[<literal type="number" pos:start="59:43" pos:end="59:43">1</literal>]&gt;&gt;shift</argument>)</argument_list></macro>

        <macro pos:start="61:9" pos:end="63:75"><name pos:start="61:9" pos:end="61:23">CHECK_CLIPED_MV</name><argument_list pos:start="61:24" pos:end="63:75">(<argument pos:start="61:25" pos:end="61:74">(last_mv[ref_mv_xy][<literal type="number" pos:start="61:45" pos:end="61:45">0</literal>]*ref_mv_scale + (<literal type="number" pos:start="61:64" pos:end="61:64">1</literal>&lt;&lt;<literal type="number" pos:start="61:67" pos:end="61:68">15</literal>))&gt;&gt;<literal type="number" pos:start="61:73" pos:end="61:74">16</literal></argument>, 

                        <argument pos:start="63:25" pos:end="63:74">(last_mv[ref_mv_xy][<literal type="number" pos:start="63:45" pos:end="63:45">1</literal>]*ref_mv_scale + (<literal type="number" pos:start="63:64" pos:end="63:64">1</literal>&lt;&lt;<literal type="number" pos:start="63:67" pos:end="63:68">15</literal>))&gt;&gt;<literal type="number" pos:start="63:73" pos:end="63:74">16</literal></argument>)</argument_list></macro>

        <macro pos:start="65:9" pos:end="65:50"><name pos:start="65:9" pos:end="65:16">CHECK_MV</name><argument_list pos:start="65:17" pos:end="65:50">(<argument pos:start="65:18" pos:end="65:32">P_MV1[<literal type="number" pos:start="65:24" pos:end="65:24">0</literal>]&gt;&gt;shift</argument>, <argument pos:start="65:35" pos:end="65:49">P_MV1[<literal type="number" pos:start="65:41" pos:end="65:41">1</literal>]&gt;&gt;shift</argument>)</argument_list></macro>

    </block_content>}</block></if><else pos:start="67:6" pos:end="89:5">else<block pos:start="67:10" pos:end="89:5">{<block_content pos:start="69:9" pos:end="87:9">

        <macro pos:start="69:9" pos:end="69:50"><name pos:start="69:9" pos:end="69:16">CHECK_MV</name><argument_list pos:start="69:17" pos:end="69:50">(<argument pos:start="69:18" pos:end="69:32">P_MV1[<literal type="number" pos:start="69:24" pos:end="69:24">0</literal>]&gt;&gt;shift</argument>, <argument pos:start="69:35" pos:end="69:49">P_MV1[<literal type="number" pos:start="69:41" pos:end="69:41">1</literal>]&gt;&gt;shift</argument>)</argument_list></macro>

        <comment type="line" pos:start="71:9" pos:end="71:35">//FIXME try some early stop</comment>

        <if_stmt pos:start="73:9" pos:end="87:9"><if pos:start="73:9" pos:end="87:9">if<condition pos:start="73:11" pos:end="73:21">(<expr pos:start="73:12" pos:end="73:20"><name pos:start="73:12" pos:end="73:15">dmin</name><operator pos:start="73:16" pos:end="73:16">&gt;</operator><literal type="number" pos:start="73:17" pos:end="73:18">64</literal><operator pos:start="73:19" pos:end="73:19">*</operator><literal type="number" pos:start="73:20" pos:end="73:20">2</literal></expr>)</condition><block pos:start="73:22" pos:end="87:9">{<block_content pos:start="75:13" pos:end="85:79">

            <macro pos:start="75:13" pos:end="75:60"><name pos:start="75:13" pos:end="75:20">CHECK_MV</name><argument_list pos:start="75:21" pos:end="75:60">(<argument pos:start="75:22" pos:end="75:39">P_MEDIAN[<literal type="number" pos:start="75:31" pos:end="75:31">0</literal>]&gt;&gt;shift</argument>, <argument pos:start="75:42" pos:end="75:59">P_MEDIAN[<literal type="number" pos:start="75:51" pos:end="75:51">1</literal>]&gt;&gt;shift</argument>)</argument_list></macro>

            <macro pos:start="77:13" pos:end="77:56"><name pos:start="77:13" pos:end="77:20">CHECK_MV</name><argument_list pos:start="77:21" pos:end="77:56">(<argument pos:start="77:22" pos:end="77:37">P_LEFT[<literal type="number" pos:start="77:29" pos:end="77:29">0</literal>]&gt;&gt;shift</argument>, <argument pos:start="77:40" pos:end="77:55">P_LEFT[<literal type="number" pos:start="77:47" pos:end="77:47">1</literal>]&gt;&gt;shift</argument>)</argument_list></macro>

            <macro pos:start="79:13" pos:end="79:54"><name pos:start="79:13" pos:end="79:20">CHECK_MV</name><argument_list pos:start="79:21" pos:end="79:54">(<argument pos:start="79:22" pos:end="79:36">P_TOP[<literal type="number" pos:start="79:28" pos:end="79:28">0</literal>]&gt;&gt;shift</argument>, <argument pos:start="79:39" pos:end="79:53">P_TOP[<literal type="number" pos:start="79:45" pos:end="79:45">1</literal>]&gt;&gt;shift</argument>)</argument_list></macro>

            <macro pos:start="81:13" pos:end="81:64"><name pos:start="81:13" pos:end="81:20">CHECK_MV</name><argument_list pos:start="81:21" pos:end="81:64">(<argument pos:start="81:22" pos:end="81:41">P_TOPRIGHT[<literal type="number" pos:start="81:33" pos:end="81:33">0</literal>]&gt;&gt;shift</argument>, <argument pos:start="81:44" pos:end="81:63">P_TOPRIGHT[<literal type="number" pos:start="81:55" pos:end="81:55">1</literal>]&gt;&gt;shift</argument>)</argument_list></macro>

            <macro pos:start="83:13" pos:end="85:79"><name pos:start="83:13" pos:end="83:27">CHECK_CLIPED_MV</name><argument_list pos:start="83:28" pos:end="85:79">(<argument pos:start="83:29" pos:end="83:78">(last_mv[ref_mv_xy][<literal type="number" pos:start="83:49" pos:end="83:49">0</literal>]*ref_mv_scale + (<literal type="number" pos:start="83:68" pos:end="83:68">1</literal>&lt;&lt;<literal type="number" pos:start="83:71" pos:end="83:72">15</literal>))&gt;&gt;<literal type="number" pos:start="83:77" pos:end="83:78">16</literal></argument>, 

                            <argument pos:start="85:29" pos:end="85:78">(last_mv[ref_mv_xy][<literal type="number" pos:start="85:49" pos:end="85:49">1</literal>]*ref_mv_scale + (<literal type="number" pos:start="85:68" pos:end="85:68">1</literal>&lt;&lt;<literal type="number" pos:start="85:71" pos:end="85:72">15</literal>))&gt;&gt;<literal type="number" pos:start="85:77" pos:end="85:78">16</literal></argument>)</argument_list></macro>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="91:5" pos:end="103:5"><if pos:start="91:5" pos:end="103:5">if<condition pos:start="91:7" pos:end="91:17">(<expr pos:start="91:8" pos:end="91:16"><name pos:start="91:8" pos:end="91:11">dmin</name><operator pos:start="91:12" pos:end="91:12">&gt;</operator><literal type="number" pos:start="91:13" pos:end="91:14">64</literal><operator pos:start="91:15" pos:end="91:15">*</operator><literal type="number" pos:start="91:16" pos:end="91:16">4</literal></expr>)</condition><block pos:start="91:18" pos:end="103:5">{<block_content pos:start="93:9" pos:end="101:93">

        <macro pos:start="93:9" pos:end="95:77"><name pos:start="93:9" pos:end="93:23">CHECK_CLIPED_MV</name><argument_list pos:start="93:24" pos:end="95:77">(<argument pos:start="93:25" pos:end="93:76">(last_mv[ref_mv_xy+<literal type="number" pos:start="93:44" pos:end="93:44">1</literal>][<literal type="number" pos:start="93:47" pos:end="93:47">0</literal>]*ref_mv_scale + (<literal type="number" pos:start="93:66" pos:end="93:66">1</literal>&lt;&lt;<literal type="number" pos:start="93:69" pos:end="93:70">15</literal>))&gt;&gt;<literal type="number" pos:start="93:75" pos:end="93:76">16</literal></argument>, 

                        <argument pos:start="95:25" pos:end="95:76">(last_mv[ref_mv_xy+<literal type="number" pos:start="95:44" pos:end="95:44">1</literal>][<literal type="number" pos:start="95:47" pos:end="95:47">1</literal>]*ref_mv_scale + (<literal type="number" pos:start="95:66" pos:end="95:66">1</literal>&lt;&lt;<literal type="number" pos:start="95:69" pos:end="95:70">15</literal>))&gt;&gt;<literal type="number" pos:start="95:75" pos:end="95:76">16</literal></argument>)</argument_list></macro>

        <if_stmt pos:start="97:9" pos:end="101:93"><if pos:start="97:9" pos:end="101:93">if<condition pos:start="97:11" pos:end="97:64">(<expr pos:start="97:12" pos:end="97:63"><name pos:start="97:12" pos:end="97:22"><name pos:start="97:12" pos:end="97:12">s</name><operator pos:start="97:13" pos:end="97:14">-&gt;</operator><name pos:start="97:15" pos:end="97:22">end_mb_y</name></name> <operator pos:start="97:24" pos:end="97:25">==</operator> <name pos:start="97:27" pos:end="97:38"><name pos:start="97:27" pos:end="97:27">s</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:38">mb_height</name></name> <operator pos:start="97:40" pos:end="97:41">||</operator> <name pos:start="97:43" pos:end="97:49"><name pos:start="97:43" pos:end="97:43">s</name><operator pos:start="97:44" pos:end="97:45">-&gt;</operator><name pos:start="97:46" pos:end="97:49">mb_y</name></name><operator pos:start="97:50" pos:end="97:50">+</operator><literal type="number" pos:start="97:51" pos:end="97:51">1</literal><operator pos:start="97:52" pos:end="97:52">&lt;</operator><name pos:start="97:53" pos:end="97:63"><name pos:start="97:53" pos:end="97:53">s</name><operator pos:start="97:54" pos:end="97:55">-&gt;</operator><name pos:start="97:56" pos:end="97:63">end_mb_y</name></name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="101:93"><block_content pos:start="99:13" pos:end="101:93">  <comment type="line" pos:start="97:67" pos:end="97:111">//FIXME replace at least with last_slice_line</comment>

            <macro pos:start="99:13" pos:end="101:93"><name pos:start="99:13" pos:end="99:27">CHECK_CLIPED_MV</name><argument_list pos:start="99:28" pos:end="101:93">(<argument pos:start="99:29" pos:end="99:92">(last_mv[ref_mv_xy+ref_mv_stride][<literal type="number" pos:start="99:63" pos:end="99:63">0</literal>]*ref_mv_scale + (<literal type="number" pos:start="99:82" pos:end="99:82">1</literal>&lt;&lt;<literal type="number" pos:start="99:85" pos:end="99:86">15</literal>))&gt;&gt;<literal type="number" pos:start="99:91" pos:end="99:92">16</literal></argument>, 

                            <argument pos:start="101:29" pos:end="101:92">(last_mv[ref_mv_xy+ref_mv_stride][<literal type="number" pos:start="101:63" pos:end="101:63">1</literal>]*ref_mv_scale + (<literal type="number" pos:start="101:82" pos:end="101:82">1</literal>&lt;&lt;<literal type="number" pos:start="101:85" pos:end="101:86">15</literal>))&gt;&gt;<literal type="number" pos:start="101:91" pos:end="101:92">16</literal></argument>)</argument_list></macro></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="107:5" pos:end="137:84"><if pos:start="107:5" pos:end="113:84">if<condition pos:start="107:7" pos:end="107:26">(<expr pos:start="107:8" pos:end="107:25"><name pos:start="107:8" pos:end="107:21"><name pos:start="107:8" pos:end="107:8">s</name><operator pos:start="107:9" pos:end="107:10">-&gt;</operator><name pos:start="107:11" pos:end="107:12">me</name><operator pos:start="107:13" pos:end="107:13">.</operator><name pos:start="107:14" pos:end="107:21">dia_size</name></name><operator pos:start="107:22" pos:end="107:23">==</operator><operator pos:start="107:24" pos:end="107:24">-</operator><literal type="number" pos:start="107:25" pos:end="107:25">1</literal></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="113:84"><block_content pos:start="109:9" pos:end="113:84">

        <expr_stmt pos:start="109:9" pos:end="113:84"><expr pos:start="109:9" pos:end="113:83"><name pos:start="109:9" pos:end="109:12">dmin</name><operator pos:start="109:13" pos:end="109:13">=</operator> <call pos:start="109:15" pos:end="113:83"><call pos:start="109:15" pos:end="109:42"><name pos:start="109:15" pos:end="109:20">RENAME</name><argument_list pos:start="109:21" pos:end="109:42">(<argument pos:start="109:22" pos:end="109:41"><expr pos:start="109:22" pos:end="109:41"><name pos:start="109:22" pos:end="109:41">funny_diamond_search</name></expr></argument>)</argument_list></call><argument_list pos:start="109:43" pos:end="113:83">(<argument pos:start="109:44" pos:end="109:44"><expr pos:start="109:44" pos:end="109:44"><name pos:start="109:44" pos:end="109:44">s</name></expr></argument>, <argument pos:start="109:47" pos:end="109:50"><expr pos:start="109:47" pos:end="109:50"><name pos:start="109:47" pos:end="109:50">best</name></expr></argument>, <argument pos:start="109:53" pos:end="109:56"><expr pos:start="109:53" pos:end="109:56"><name pos:start="109:53" pos:end="109:56">dmin</name></expr></argument>, <argument pos:start="109:59" pos:end="109:66"><expr pos:start="109:59" pos:end="109:66"><name pos:start="109:59" pos:end="109:66">src_data</name></expr></argument>, <argument pos:start="109:69" pos:end="109:76"><expr pos:start="109:69" pos:end="109:76"><name pos:start="109:69" pos:end="109:76">ref_data</name></expr></argument>, <argument pos:start="109:79" pos:end="109:84"><expr pos:start="109:79" pos:end="109:84"><name pos:start="109:79" pos:end="109:84">stride</name></expr></argument>, <argument pos:start="109:87" pos:end="109:94"><expr pos:start="109:87" pos:end="109:94"><name pos:start="109:87" pos:end="109:94">uvstride</name></expr></argument>,

                                   <argument pos:start="111:36" pos:end="111:41"><expr pos:start="111:36" pos:end="111:41"><name pos:start="111:36" pos:end="111:41">pred_x</name></expr></argument>, <argument pos:start="111:44" pos:end="111:49"><expr pos:start="111:44" pos:end="111:49"><name pos:start="111:44" pos:end="111:49">pred_y</name></expr></argument>, <argument pos:start="111:52" pos:end="111:65"><expr pos:start="111:52" pos:end="111:65"><name pos:start="111:52" pos:end="111:65">penalty_factor</name></expr></argument>, 

				   <argument pos:start="113:36" pos:end="113:40"><expr pos:start="113:36" pos:end="113:40"><name pos:start="113:36" pos:end="113:40">shift</name></expr></argument>, <argument pos:start="113:43" pos:end="113:45"><expr pos:start="113:43" pos:end="113:45"><name pos:start="113:43" pos:end="113:45">map</name></expr></argument>, <argument pos:start="113:48" pos:end="113:61"><expr pos:start="113:48" pos:end="113:61"><name pos:start="113:48" pos:end="113:61">map_generation</name></expr></argument>, <argument pos:start="113:64" pos:end="113:67"><expr pos:start="113:64" pos:end="113:67"><name pos:start="113:64" pos:end="113:67">size</name></expr></argument>, <argument pos:start="113:70" pos:end="113:70"><expr pos:start="113:70" pos:end="113:70"><name pos:start="113:70" pos:end="113:70">h</name></expr></argument>, <argument pos:start="113:73" pos:end="113:82"><expr pos:start="113:73" pos:end="113:82"><name pos:start="113:73" pos:end="113:82">mv_penalty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="115:5" pos:end="121:84">else if<condition pos:start="115:12" pos:end="115:30">(<expr pos:start="115:13" pos:end="115:29"><name pos:start="115:13" pos:end="115:26"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:17">me</name><operator pos:start="115:18" pos:end="115:18">.</operator><name pos:start="115:19" pos:end="115:26">dia_size</name></name><operator pos:start="115:27" pos:end="115:27">&lt;</operator><operator pos:start="115:28" pos:end="115:28">-</operator><literal type="number" pos:start="115:29" pos:end="115:29">1</literal></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="121:84"><block_content pos:start="117:9" pos:end="121:84">

        <expr_stmt pos:start="117:9" pos:end="121:84"><expr pos:start="117:9" pos:end="121:83"><name pos:start="117:9" pos:end="117:12">dmin</name><operator pos:start="117:13" pos:end="117:13">=</operator> <call pos:start="117:15" pos:end="121:83"><call pos:start="117:15" pos:end="117:40"><name pos:start="117:15" pos:end="117:20">RENAME</name><argument_list pos:start="117:21" pos:end="117:40">(<argument pos:start="117:22" pos:end="117:39"><expr pos:start="117:22" pos:end="117:39"><name pos:start="117:22" pos:end="117:39">sab_diamond_search</name></expr></argument>)</argument_list></call><argument_list pos:start="117:41" pos:end="121:83">(<argument pos:start="117:42" pos:end="117:42"><expr pos:start="117:42" pos:end="117:42"><name pos:start="117:42" pos:end="117:42">s</name></expr></argument>, <argument pos:start="117:45" pos:end="117:48"><expr pos:start="117:45" pos:end="117:48"><name pos:start="117:45" pos:end="117:48">best</name></expr></argument>, <argument pos:start="117:51" pos:end="117:54"><expr pos:start="117:51" pos:end="117:54"><name pos:start="117:51" pos:end="117:54">dmin</name></expr></argument>, <argument pos:start="117:57" pos:end="117:64"><expr pos:start="117:57" pos:end="117:64"><name pos:start="117:57" pos:end="117:64">src_data</name></expr></argument>, <argument pos:start="117:67" pos:end="117:74"><expr pos:start="117:67" pos:end="117:74"><name pos:start="117:67" pos:end="117:74">ref_data</name></expr></argument>, <argument pos:start="117:77" pos:end="117:82"><expr pos:start="117:77" pos:end="117:82"><name pos:start="117:77" pos:end="117:82">stride</name></expr></argument>, <argument pos:start="117:85" pos:end="117:92"><expr pos:start="117:85" pos:end="117:92"><name pos:start="117:85" pos:end="117:92">uvstride</name></expr></argument>,

                                   <argument pos:start="119:36" pos:end="119:41"><expr pos:start="119:36" pos:end="119:41"><name pos:start="119:36" pos:end="119:41">pred_x</name></expr></argument>, <argument pos:start="119:44" pos:end="119:49"><expr pos:start="119:44" pos:end="119:49"><name pos:start="119:44" pos:end="119:49">pred_y</name></expr></argument>, <argument pos:start="119:52" pos:end="119:65"><expr pos:start="119:52" pos:end="119:65"><name pos:start="119:52" pos:end="119:65">penalty_factor</name></expr></argument>, 

				   <argument pos:start="121:36" pos:end="121:40"><expr pos:start="121:36" pos:end="121:40"><name pos:start="121:36" pos:end="121:40">shift</name></expr></argument>, <argument pos:start="121:43" pos:end="121:45"><expr pos:start="121:43" pos:end="121:45"><name pos:start="121:43" pos:end="121:45">map</name></expr></argument>, <argument pos:start="121:48" pos:end="121:61"><expr pos:start="121:48" pos:end="121:61"><name pos:start="121:48" pos:end="121:61">map_generation</name></expr></argument>, <argument pos:start="121:64" pos:end="121:67"><expr pos:start="121:64" pos:end="121:67"><name pos:start="121:64" pos:end="121:67">size</name></expr></argument>, <argument pos:start="121:70" pos:end="121:70"><expr pos:start="121:70" pos:end="121:70"><name pos:start="121:70" pos:end="121:70">h</name></expr></argument>, <argument pos:start="121:73" pos:end="121:82"><expr pos:start="121:73" pos:end="121:82"><name pos:start="121:73" pos:end="121:82">mv_penalty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="123:5" pos:end="129:84">else if<condition pos:start="123:12" pos:end="123:29">(<expr pos:start="123:13" pos:end="123:28"><name pos:start="123:13" pos:end="123:26"><name pos:start="123:13" pos:end="123:13">s</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:17">me</name><operator pos:start="123:18" pos:end="123:18">.</operator><name pos:start="123:19" pos:end="123:26">dia_size</name></name><operator pos:start="123:27" pos:end="123:27">&lt;</operator><literal type="number" pos:start="123:28" pos:end="123:28">2</literal></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="129:84"><block_content pos:start="125:9" pos:end="129:84">

        <expr_stmt pos:start="125:9" pos:end="129:84"><expr pos:start="125:9" pos:end="129:83"><name pos:start="125:9" pos:end="125:12">dmin</name><operator pos:start="125:13" pos:end="125:13">=</operator> <call pos:start="125:15" pos:end="129:83"><call pos:start="125:15" pos:end="125:42"><name pos:start="125:15" pos:end="125:20">RENAME</name><argument_list pos:start="125:21" pos:end="125:42">(<argument pos:start="125:22" pos:end="125:41"><expr pos:start="125:22" pos:end="125:41"><name pos:start="125:22" pos:end="125:41">small_diamond_search</name></expr></argument>)</argument_list></call><argument_list pos:start="125:43" pos:end="129:83">(<argument pos:start="125:44" pos:end="125:44"><expr pos:start="125:44" pos:end="125:44"><name pos:start="125:44" pos:end="125:44">s</name></expr></argument>, <argument pos:start="125:47" pos:end="125:50"><expr pos:start="125:47" pos:end="125:50"><name pos:start="125:47" pos:end="125:50">best</name></expr></argument>, <argument pos:start="125:53" pos:end="125:56"><expr pos:start="125:53" pos:end="125:56"><name pos:start="125:53" pos:end="125:56">dmin</name></expr></argument>, <argument pos:start="125:59" pos:end="125:66"><expr pos:start="125:59" pos:end="125:66"><name pos:start="125:59" pos:end="125:66">src_data</name></expr></argument>, <argument pos:start="125:69" pos:end="125:76"><expr pos:start="125:69" pos:end="125:76"><name pos:start="125:69" pos:end="125:76">ref_data</name></expr></argument>, <argument pos:start="125:79" pos:end="125:84"><expr pos:start="125:79" pos:end="125:84"><name pos:start="125:79" pos:end="125:84">stride</name></expr></argument>, <argument pos:start="125:87" pos:end="125:94"><expr pos:start="125:87" pos:end="125:94"><name pos:start="125:87" pos:end="125:94">uvstride</name></expr></argument>,

                                   <argument pos:start="127:36" pos:end="127:41"><expr pos:start="127:36" pos:end="127:41"><name pos:start="127:36" pos:end="127:41">pred_x</name></expr></argument>, <argument pos:start="127:44" pos:end="127:49"><expr pos:start="127:44" pos:end="127:49"><name pos:start="127:44" pos:end="127:49">pred_y</name></expr></argument>, <argument pos:start="127:52" pos:end="127:65"><expr pos:start="127:52" pos:end="127:65"><name pos:start="127:52" pos:end="127:65">penalty_factor</name></expr></argument>, 

				   <argument pos:start="129:36" pos:end="129:40"><expr pos:start="129:36" pos:end="129:40"><name pos:start="129:36" pos:end="129:40">shift</name></expr></argument>, <argument pos:start="129:43" pos:end="129:45"><expr pos:start="129:43" pos:end="129:45"><name pos:start="129:43" pos:end="129:45">map</name></expr></argument>, <argument pos:start="129:48" pos:end="129:61"><expr pos:start="129:48" pos:end="129:61"><name pos:start="129:48" pos:end="129:61">map_generation</name></expr></argument>, <argument pos:start="129:64" pos:end="129:67"><expr pos:start="129:64" pos:end="129:67"><name pos:start="129:64" pos:end="129:67">size</name></expr></argument>, <argument pos:start="129:70" pos:end="129:70"><expr pos:start="129:70" pos:end="129:70"><name pos:start="129:70" pos:end="129:70">h</name></expr></argument>, <argument pos:start="129:73" pos:end="129:82"><expr pos:start="129:73" pos:end="129:82"><name pos:start="129:73" pos:end="129:82">mv_penalty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="131:5" pos:end="137:84">else<block type="pseudo" pos:start="133:9" pos:end="137:84"><block_content pos:start="133:9" pos:end="137:84">

        <expr_stmt pos:start="133:9" pos:end="137:84"><expr pos:start="133:9" pos:end="137:83"><name pos:start="133:9" pos:end="133:12">dmin</name><operator pos:start="133:13" pos:end="133:13">=</operator> <call pos:start="133:15" pos:end="137:83"><call pos:start="133:15" pos:end="133:40"><name pos:start="133:15" pos:end="133:20">RENAME</name><argument_list pos:start="133:21" pos:end="133:40">(<argument pos:start="133:22" pos:end="133:39"><expr pos:start="133:22" pos:end="133:39"><name pos:start="133:22" pos:end="133:39">var_diamond_search</name></expr></argument>)</argument_list></call><argument_list pos:start="133:41" pos:end="137:83">(<argument pos:start="133:42" pos:end="133:42"><expr pos:start="133:42" pos:end="133:42"><name pos:start="133:42" pos:end="133:42">s</name></expr></argument>, <argument pos:start="133:45" pos:end="133:48"><expr pos:start="133:45" pos:end="133:48"><name pos:start="133:45" pos:end="133:48">best</name></expr></argument>, <argument pos:start="133:51" pos:end="133:54"><expr pos:start="133:51" pos:end="133:54"><name pos:start="133:51" pos:end="133:54">dmin</name></expr></argument>, <argument pos:start="133:57" pos:end="133:64"><expr pos:start="133:57" pos:end="133:64"><name pos:start="133:57" pos:end="133:64">src_data</name></expr></argument>, <argument pos:start="133:67" pos:end="133:74"><expr pos:start="133:67" pos:end="133:74"><name pos:start="133:67" pos:end="133:74">ref_data</name></expr></argument>, <argument pos:start="133:77" pos:end="133:82"><expr pos:start="133:77" pos:end="133:82"><name pos:start="133:77" pos:end="133:82">stride</name></expr></argument>, <argument pos:start="133:85" pos:end="133:92"><expr pos:start="133:85" pos:end="133:92"><name pos:start="133:85" pos:end="133:92">uvstride</name></expr></argument>,

                                   <argument pos:start="135:36" pos:end="135:41"><expr pos:start="135:36" pos:end="135:41"><name pos:start="135:36" pos:end="135:41">pred_x</name></expr></argument>, <argument pos:start="135:44" pos:end="135:49"><expr pos:start="135:44" pos:end="135:49"><name pos:start="135:44" pos:end="135:49">pred_y</name></expr></argument>, <argument pos:start="135:52" pos:end="135:65"><expr pos:start="135:52" pos:end="135:65"><name pos:start="135:52" pos:end="135:65">penalty_factor</name></expr></argument>, 

				   <argument pos:start="137:36" pos:end="137:40"><expr pos:start="137:36" pos:end="137:40"><name pos:start="137:36" pos:end="137:40">shift</name></expr></argument>, <argument pos:start="137:43" pos:end="137:45"><expr pos:start="137:43" pos:end="137:45"><name pos:start="137:43" pos:end="137:45">map</name></expr></argument>, <argument pos:start="137:48" pos:end="137:61"><expr pos:start="137:48" pos:end="137:61"><name pos:start="137:48" pos:end="137:61">map_generation</name></expr></argument>, <argument pos:start="137:64" pos:end="137:67"><expr pos:start="137:64" pos:end="137:67"><name pos:start="137:64" pos:end="137:67">size</name></expr></argument>, <argument pos:start="137:70" pos:end="137:70"><expr pos:start="137:70" pos:end="137:70"><name pos:start="137:70" pos:end="137:70">h</name></expr></argument>, <argument pos:start="137:73" pos:end="137:82"><expr pos:start="137:73" pos:end="137:82"><name pos:start="137:73" pos:end="137:82">mv_penalty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>





    <expr_stmt pos:start="143:5" pos:end="143:21"><expr pos:start="143:5" pos:end="143:20"><operator pos:start="143:5" pos:end="143:5">*</operator><name pos:start="143:6" pos:end="143:11">mx_ptr</name><operator pos:start="143:12" pos:end="143:12">=</operator> <name pos:start="143:14" pos:end="143:20"><name pos:start="143:14" pos:end="143:17">best</name><index pos:start="143:18" pos:end="143:20">[<expr pos:start="143:19" pos:end="143:19"><literal type="number" pos:start="143:19" pos:end="143:19">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:21"><expr pos:start="145:5" pos:end="145:20"><operator pos:start="145:5" pos:end="145:5">*</operator><name pos:start="145:6" pos:end="145:11">my_ptr</name><operator pos:start="145:12" pos:end="145:12">=</operator> <name pos:start="145:14" pos:end="145:20"><name pos:start="145:14" pos:end="145:17">best</name><index pos:start="145:18" pos:end="145:20">[<expr pos:start="145:19" pos:end="145:19"><literal type="number" pos:start="145:19" pos:end="145:19">1</literal></expr>]</index></name></expr>;</expr_stmt>    



<comment type="line" pos:start="149:1" pos:end="149:52">//    printf("%d %d %d \n", best[0], best[1], dmin);</comment>

    <return pos:start="151:5" pos:end="151:16">return <expr pos:start="151:12" pos:end="151:15"><name pos:start="151:12" pos:end="151:15">dmin</name></expr>;</return>

</block_content>}</block></decl></decl_stmt>
</unit>
