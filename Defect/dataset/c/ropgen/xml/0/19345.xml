<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19345.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">set_port</name><parameter_list pos:start="1:21" pos:end="1:59">(<parameter pos:start="1:22" pos:end="1:48"><decl pos:start="1:22" pos:end="1:48"><type pos:start="1:22" pos:end="1:48"><name pos:start="1:22" pos:end="1:44"><name pos:start="1:22" pos:end="1:27">struct</name> <name pos:start="1:29" pos:end="1:44">sockaddr_storage</name></name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">ss</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:58"><decl pos:start="1:51" pos:end="1:58"><type pos:start="1:51" pos:end="1:58"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:58">port</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:22">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:18">sockaddr_union</name></type> <name pos:start="5:20" pos:end="5:22">ssu</name> <init pos:start="5:24" pos:end="5:57">= <expr pos:start="5:26" pos:end="5:57"><operator pos:start="5:26" pos:end="5:26">(</operator><name pos:start="5:27" pos:end="5:40">sockaddr_union</name><operator pos:start="5:41" pos:end="5:41">)</operator><block pos:start="5:42" pos:end="5:57">{<expr pos:start="5:43" pos:end="5:56"><operator pos:start="5:43" pos:end="5:43">.</operator><name pos:start="5:44" pos:end="5:50">storage</name> <operator pos:start="5:52" pos:end="5:52">=</operator> <operator pos:start="5:54" pos:end="5:54">*</operator><name pos:start="5:55" pos:end="5:56">ss</name></expr>}</block></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="18:0"><if pos:start="7:5" pos:end="12:0">if <condition pos:start="7:8" pos:end="7:33">(<expr pos:start="7:9" pos:end="7:32"><name pos:start="7:9" pos:end="7:21"><name pos:start="7:9" pos:end="7:10">ss</name><operator pos:start="7:11" pos:end="7:12">-&gt;</operator><name pos:start="7:13" pos:end="7:21">ss_family</name></name> <operator pos:start="7:23" pos:end="7:24">==</operator> <name pos:start="7:26" pos:end="7:32">AF_INET</name></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="12:0"><block_content pos:start="9:9" pos:end="12:0">

        <expr_stmt pos:start="9:9" pos:end="12:0"><expr pos:start="9:9" pos:end="9:37"><name pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:11">ssu</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:14">in</name><operator pos:start="9:15" pos:end="9:15">.</operator><name pos:start="9:16" pos:end="9:23">sin_port</name></name> <operator pos:start="9:25" pos:end="9:25">=</operator> <call pos:start="9:27" pos:end="9:37"><name pos:start="9:27" pos:end="9:31">htons</name><argument_list pos:start="9:32" pos:end="9:37">(<argument pos:start="9:33" pos:end="9:36"><expr pos:start="9:33" pos:end="9:36"><name pos:start="9:33" pos:end="9:36">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<cpp:if pos:start="11:1" pos:end="11:28">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:28">HAVE_STRUCT_SOCKADDR_IN6</name></expr></cpp:if>

    <if type="elseif" pos:start="13:5" pos:end="18:0">else if <condition pos:start="13:13" pos:end="13:39">(<expr pos:start="13:14" pos:end="13:38"><name pos:start="13:14" pos:end="13:26"><name pos:start="13:14" pos:end="13:15">ss</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:26">ss_family</name></name> <operator pos:start="13:28" pos:end="13:29">==</operator> <name pos:start="13:31" pos:end="13:38">AF_INET6</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="18:0"><block_content pos:start="15:9" pos:end="18:0">

        <expr_stmt pos:start="15:9" pos:end="18:0"><expr pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:11">ssu</name><operator pos:start="15:12" pos:end="15:12">.</operator><name pos:start="15:13" pos:end="15:15">in6</name><operator pos:start="15:16" pos:end="15:16">.</operator><name pos:start="15:17" pos:end="15:25">sin6_port</name></name> <operator pos:start="15:27" pos:end="15:27">=</operator> <call pos:start="15:29" pos:end="15:39"><name pos:start="15:29" pos:end="15:33">htons</name><argument_list pos:start="15:34" pos:end="15:39">(<argument pos:start="15:35" pos:end="15:38"><expr pos:start="15:35" pos:end="15:38"><name pos:start="15:35" pos:end="15:38">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><operator pos:start="19:5" pos:end="19:5">*</operator><name pos:start="19:6" pos:end="19:7">ss</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <name pos:start="19:11" pos:end="19:21"><name pos:start="19:11" pos:end="19:13">ssu</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:21">storage</name></name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
