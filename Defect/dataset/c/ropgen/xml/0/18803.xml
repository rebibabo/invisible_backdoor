<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18803.c" pos:tabs="8"><macro pos:start="1:1" pos:end="5:59"><name pos:start="1:1" pos:end="1:18">ff_rm_parse_packet</name> <argument_list pos:start="1:20" pos:end="5:59">(<argument pos:start="1:21" pos:end="1:38">AVFormatContext *s</argument>, <argument pos:start="1:41" pos:end="1:55">AVIOContext *pb</argument>,

                    <argument pos:start="3:21" pos:end="3:32">AVStream *st</argument>, <argument pos:start="3:35" pos:end="3:47">RMStream *ast</argument>, <argument pos:start="3:50" pos:end="3:56">int len</argument>, <argument pos:start="3:59" pos:end="3:71">AVPacket *pkt</argument>,

                    <argument pos:start="5:21" pos:end="5:28">int *seq</argument>, <argument pos:start="5:31" pos:end="5:39">int flags</argument>, <argument pos:start="5:42" pos:end="5:58">int64_t timestamp</argument>)</argument_list></macro>

<block pos:start="7:1" pos:end="179:1">{<block_content pos:start="9:5" pos:end="177:79">

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">RMDemuxContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:22">rm</name> <init pos:start="9:24" pos:end="9:37">= <expr pos:start="9:26" pos:end="9:37"><name pos:start="9:26" pos:end="9:37"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="135:36"><if pos:start="15:5" pos:end="25:5">if <condition pos:start="15:8" pos:end="15:52">(<expr pos:start="15:9" pos:end="15:51"><name pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:10">st</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:17">codec</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:29">codec_type</name></name> <operator pos:start="15:31" pos:end="15:32">==</operator> <name pos:start="15:34" pos:end="15:51">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="15:54" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:38">

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:10">rm</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:26">current_stream</name></name><operator pos:start="17:27" pos:end="17:27">=</operator> <name pos:start="17:29" pos:end="17:34"><name pos:start="17:29" pos:end="17:30">st</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:34">id</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:81"><expr pos:start="19:9" pos:end="19:80"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:80"><name pos:start="19:15" pos:end="19:37">rm_assemble_video_frame</name><argument_list pos:start="19:38" pos:end="19:80">(<argument pos:start="19:39" pos:end="19:39"><expr pos:start="19:39" pos:end="19:39"><name pos:start="19:39" pos:end="19:39">s</name></expr></argument>, <argument pos:start="19:42" pos:end="19:43"><expr pos:start="19:42" pos:end="19:43"><name pos:start="19:42" pos:end="19:43">pb</name></expr></argument>, <argument pos:start="19:46" pos:end="19:47"><expr pos:start="19:46" pos:end="19:47"><name pos:start="19:46" pos:end="19:47">rm</name></expr></argument>, <argument pos:start="19:50" pos:end="19:52"><expr pos:start="19:50" pos:end="19:52"><name pos:start="19:50" pos:end="19:52">ast</name></expr></argument>, <argument pos:start="19:55" pos:end="19:57"><expr pos:start="19:55" pos:end="19:57"><name pos:start="19:55" pos:end="19:57">pkt</name></expr></argument>, <argument pos:start="19:60" pos:end="19:62"><expr pos:start="19:60" pos:end="19:62"><name pos:start="19:60" pos:end="19:62">len</name></expr></argument>, <argument pos:start="19:65" pos:end="19:67"><expr pos:start="19:65" pos:end="19:67"><name pos:start="19:65" pos:end="19:67">seq</name></expr></argument>, <argument pos:start="19:70" pos:end="19:79"><expr pos:start="19:70" pos:end="19:79"><operator pos:start="19:70" pos:end="19:70">&amp;</operator><name pos:start="19:71" pos:end="19:79">timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:38"><if pos:start="21:9" pos:end="23:38">if<condition pos:start="21:11" pos:end="21:15">(<expr pos:start="21:12" pos:end="21:14"><name pos:start="21:12" pos:end="21:14">ret</name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:38"><block_content pos:start="23:13" pos:end="23:38">

            <return pos:start="23:13" pos:end="23:38">return <expr pos:start="23:20" pos:end="23:37"><ternary pos:start="23:20" pos:end="23:37"><condition pos:start="23:20" pos:end="23:28"><expr pos:start="23:20" pos:end="23:26"><name pos:start="23:20" pos:end="23:22">ret</name> <operator pos:start="23:24" pos:end="23:24">&lt;</operator> <literal type="number" pos:start="23:26" pos:end="23:26">0</literal></expr> ?</condition><then pos:start="23:30" pos:end="23:32"> <expr pos:start="23:30" pos:end="23:32"><name pos:start="23:30" pos:end="23:32">ret</name></expr> </then><else pos:start="23:34" pos:end="23:37">: <expr pos:start="23:36" pos:end="23:37"><operator pos:start="23:36" pos:end="23:36">-</operator><literal type="number" pos:start="23:37" pos:end="23:37">1</literal></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt> <comment type="line" pos:start="23:40" pos:end="23:67">//got partial frame or error</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="133:5">else if <condition pos:start="25:15" pos:end="25:59">(<expr pos:start="25:16" pos:end="25:58"><name pos:start="25:16" pos:end="25:36"><name pos:start="25:16" pos:end="25:17">st</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:24">codec</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:36">codec_type</name></name> <operator pos:start="25:38" pos:end="25:39">==</operator> <name pos:start="25:41" pos:end="25:58">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="25:61" pos:end="133:5">{<block_content pos:start="27:9" pos:end="131:9">

        <if_stmt pos:start="27:9" pos:end="131:9"><if pos:start="27:9" pos:end="101:9">if <condition pos:start="27:12" pos:end="31:45">(<expr pos:start="27:13" pos:end="31:44"><operator pos:start="27:13" pos:end="27:13">(</operator><name pos:start="27:14" pos:end="27:26"><name pos:start="27:14" pos:end="27:16">ast</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:26">deint_id</name></name> <operator pos:start="27:28" pos:end="27:29">==</operator> <name pos:start="27:31" pos:end="27:43">DEINT_ID_GENR</name><operator pos:start="27:44" pos:end="27:44">)</operator> <operator pos:start="27:46" pos:end="27:47">||</operator>

            <operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:26"><name pos:start="29:14" pos:end="29:16">ast</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:26">deint_id</name></name> <operator pos:start="29:28" pos:end="29:29">==</operator> <name pos:start="29:31" pos:end="29:43">DEINT_ID_INT4</name><operator pos:start="29:44" pos:end="29:44">)</operator> <operator pos:start="29:46" pos:end="29:47">||</operator>

            <operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:26"><name pos:start="31:14" pos:end="31:16">ast</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:26">deint_id</name></name> <operator pos:start="31:28" pos:end="31:29">==</operator> <name pos:start="31:31" pos:end="31:43">DEINT_ID_SIPR</name><operator pos:start="31:44" pos:end="31:44">)</operator></expr>)</condition> <block pos:start="31:47" pos:end="101:9">{<block_content pos:start="33:13" pos:end="99:64">

            <decl_stmt pos:start="33:13" pos:end="33:18"><decl pos:start="33:13" pos:end="33:17"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:17">x</name></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:43"><decl pos:start="35:13" pos:end="35:42"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:19">sps</name> <init pos:start="35:21" pos:end="35:42">= <expr pos:start="35:23" pos:end="35:42"><name pos:start="35:23" pos:end="35:42"><name pos:start="35:23" pos:end="35:25">ast</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:42">sub_packet_size</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:43"><decl pos:start="37:13" pos:end="37:42"><type pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">int</name></type> <name pos:start="37:17" pos:end="37:19">cfs</name> <init pos:start="37:21" pos:end="37:42">= <expr pos:start="37:23" pos:end="37:42"><name pos:start="37:23" pos:end="37:42"><name pos:start="37:23" pos:end="37:25">ast</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:42">coded_framesize</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="39:13" pos:end="39:38"><decl pos:start="39:13" pos:end="39:37"><type pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">int</name></type> <name pos:start="39:17" pos:end="39:17">h</name> <init pos:start="39:19" pos:end="39:37">= <expr pos:start="39:21" pos:end="39:37"><name pos:start="39:21" pos:end="39:37"><name pos:start="39:21" pos:end="39:23">ast</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:37">sub_packet_h</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="41:13" pos:end="41:40"><decl pos:start="41:13" pos:end="41:39"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:17">y</name> <init pos:start="41:19" pos:end="41:39">= <expr pos:start="41:21" pos:end="41:39"><name pos:start="41:21" pos:end="41:39"><name pos:start="41:21" pos:end="41:23">ast</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:39">sub_packet_cnt</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:41"><decl pos:start="43:13" pos:end="43:40"><type pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">int</name></type> <name pos:start="43:17" pos:end="43:17">w</name> <init pos:start="43:19" pos:end="43:40">= <expr pos:start="43:21" pos:end="43:40"><name pos:start="43:21" pos:end="43:40"><name pos:start="43:21" pos:end="43:23">ast</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:40">audio_framesize</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="47:13" pos:end="49:44"><if pos:start="47:13" pos:end="49:44">if <condition pos:start="47:16" pos:end="47:26">(<expr pos:start="47:17" pos:end="47:25"><name pos:start="47:17" pos:end="47:21">flags</name> <operator pos:start="47:23" pos:end="47:23">&amp;</operator> <literal type="number" pos:start="47:25" pos:end="47:25">2</literal></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:44"><block_content pos:start="49:17" pos:end="49:44">

                <expr_stmt pos:start="49:17" pos:end="49:44"><expr pos:start="49:17" pos:end="49:43"><name pos:start="49:17" pos:end="49:17">y</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:39"><name pos:start="49:21" pos:end="49:23">ast</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:39">sub_packet_cnt</name></name> <operator pos:start="49:41" pos:end="49:41">=</operator> <literal type="number" pos:start="49:43" pos:end="49:43">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="51:13" pos:end="53:48"><if pos:start="51:13" pos:end="53:48">if <condition pos:start="51:16" pos:end="51:19">(<expr pos:start="51:17" pos:end="51:18"><operator pos:start="51:17" pos:end="51:17">!</operator><name pos:start="51:18" pos:end="51:18">y</name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:48"><block_content pos:start="53:17" pos:end="53:48">

                <expr_stmt pos:start="53:17" pos:end="53:48"><expr pos:start="53:17" pos:end="53:47"><name pos:start="53:17" pos:end="53:35"><name pos:start="53:17" pos:end="53:19">ast</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:35">audiotimestamp</name></name> <operator pos:start="53:37" pos:end="53:37">=</operator> <name pos:start="53:39" pos:end="53:47">timestamp</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <switch pos:start="57:13" pos:end="81:13">switch <condition pos:start="57:20" pos:end="57:34">(<expr pos:start="57:21" pos:end="57:33"><name pos:start="57:21" pos:end="57:33"><name pos:start="57:21" pos:end="57:23">ast</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:33">deint_id</name></name></expr>)</condition> <block pos:start="57:36" pos:end="81:13">{<block_content pos:start="59:17" pos:end="79:26">

                <case pos:start="59:17" pos:end="59:35">case <expr pos:start="59:22" pos:end="59:34"><name pos:start="59:22" pos:end="59:34">DEINT_ID_INT4</name></expr>:</case>

                    <for pos:start="61:21" pos:end="63:72">for <control pos:start="61:25" pos:end="61:45">(<init pos:start="61:26" pos:end="61:31"><expr pos:start="61:26" pos:end="61:30"><name pos:start="61:26" pos:end="61:26">x</name> <operator pos:start="61:28" pos:end="61:28">=</operator> <literal type="number" pos:start="61:30" pos:end="61:30">0</literal></expr>;</init> <condition pos:start="61:33" pos:end="61:40"><expr pos:start="61:33" pos:end="61:39"><name pos:start="61:33" pos:end="61:33">x</name> <operator pos:start="61:35" pos:end="61:35">&lt;</operator> <name pos:start="61:37" pos:end="61:37">h</name><operator pos:start="61:38" pos:end="61:38">/</operator><literal type="number" pos:start="61:39" pos:end="61:39">2</literal></expr>;</condition> <incr pos:start="61:42" pos:end="61:44"><expr pos:start="61:42" pos:end="61:44"><name pos:start="61:42" pos:end="61:42">x</name><operator pos:start="61:43" pos:end="61:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="63:25" pos:end="63:72"><block_content pos:start="63:25" pos:end="63:72">

                        <expr_stmt pos:start="63:25" pos:end="63:72"><expr pos:start="63:25" pos:end="63:71"><call pos:start="63:25" pos:end="63:71"><name pos:start="63:25" pos:end="63:32">readfull</name><argument_list pos:start="63:33" pos:end="63:71">(<argument pos:start="63:34" pos:end="63:34"><expr pos:start="63:34" pos:end="63:34"><name pos:start="63:34" pos:end="63:34">s</name></expr></argument>, <argument pos:start="63:37" pos:end="63:38"><expr pos:start="63:37" pos:end="63:38"><name pos:start="63:37" pos:end="63:38">pb</name></expr></argument>, <argument pos:start="63:41" pos:end="63:65"><expr pos:start="63:41" pos:end="63:65"><name pos:start="63:41" pos:end="63:53"><name pos:start="63:41" pos:end="63:43">ast</name><operator pos:start="63:44" pos:end="63:45">-&gt;</operator><name pos:start="63:46" pos:end="63:48">pkt</name><operator pos:start="63:49" pos:end="63:49">.</operator><name pos:start="63:50" pos:end="63:53">data</name></name><operator pos:start="63:54" pos:end="63:54">+</operator><name pos:start="63:55" pos:end="63:55">x</name><operator pos:start="63:56" pos:end="63:56">*</operator><literal type="number" pos:start="63:57" pos:end="63:57">2</literal><operator pos:start="63:58" pos:end="63:58">*</operator><name pos:start="63:59" pos:end="63:59">w</name><operator pos:start="63:60" pos:end="63:60">+</operator><name pos:start="63:61" pos:end="63:61">y</name><operator pos:start="63:62" pos:end="63:62">*</operator><name pos:start="63:63" pos:end="63:65">cfs</name></expr></argument>, <argument pos:start="63:68" pos:end="63:70"><expr pos:start="63:68" pos:end="63:70"><name pos:start="63:68" pos:end="63:70">cfs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    <break pos:start="65:21" pos:end="65:26">break;</break>

                <case pos:start="67:17" pos:end="67:35">case <expr pos:start="67:22" pos:end="67:34"><name pos:start="67:22" pos:end="67:34">DEINT_ID_GENR</name></expr>:</case>

                    <for pos:start="69:21" pos:end="71:93">for <control pos:start="69:25" pos:end="69:47">(<init pos:start="69:26" pos:end="69:31"><expr pos:start="69:26" pos:end="69:30"><name pos:start="69:26" pos:end="69:26">x</name> <operator pos:start="69:28" pos:end="69:28">=</operator> <literal type="number" pos:start="69:30" pos:end="69:30">0</literal></expr>;</init> <condition pos:start="69:33" pos:end="69:42"><expr pos:start="69:33" pos:end="69:41"><name pos:start="69:33" pos:end="69:33">x</name> <operator pos:start="69:35" pos:end="69:35">&lt;</operator> <name pos:start="69:37" pos:end="69:37">w</name><operator pos:start="69:38" pos:end="69:38">/</operator><name pos:start="69:39" pos:end="69:41">sps</name></expr>;</condition> <incr pos:start="69:44" pos:end="69:46"><expr pos:start="69:44" pos:end="69:46"><name pos:start="69:44" pos:end="69:44">x</name><operator pos:start="69:45" pos:end="69:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="71:25" pos:end="71:93"><block_content pos:start="71:25" pos:end="71:93">

                        <expr_stmt pos:start="71:25" pos:end="71:93"><expr pos:start="71:25" pos:end="71:92"><call pos:start="71:25" pos:end="71:92"><name pos:start="71:25" pos:end="71:32">readfull</name><argument_list pos:start="71:33" pos:end="71:92">(<argument pos:start="71:34" pos:end="71:34"><expr pos:start="71:34" pos:end="71:34"><name pos:start="71:34" pos:end="71:34">s</name></expr></argument>, <argument pos:start="71:37" pos:end="71:38"><expr pos:start="71:37" pos:end="71:38"><name pos:start="71:37" pos:end="71:38">pb</name></expr></argument>, <argument pos:start="71:41" pos:end="71:86"><expr pos:start="71:41" pos:end="71:86"><name pos:start="71:41" pos:end="71:53"><name pos:start="71:41" pos:end="71:43">ast</name><operator pos:start="71:44" pos:end="71:45">-&gt;</operator><name pos:start="71:46" pos:end="71:48">pkt</name><operator pos:start="71:49" pos:end="71:49">.</operator><name pos:start="71:50" pos:end="71:53">data</name></name><operator pos:start="71:54" pos:end="71:54">+</operator><name pos:start="71:55" pos:end="71:57">sps</name><operator pos:start="71:58" pos:end="71:58">*</operator><operator pos:start="71:59" pos:end="71:59">(</operator><name pos:start="71:60" pos:end="71:60">h</name><operator pos:start="71:61" pos:end="71:61">*</operator><name pos:start="71:62" pos:end="71:62">x</name><operator pos:start="71:63" pos:end="71:63">+</operator><operator pos:start="71:64" pos:end="71:64">(</operator><operator pos:start="71:65" pos:end="71:65">(</operator><name pos:start="71:66" pos:end="71:66">h</name><operator pos:start="71:67" pos:end="71:67">+</operator><literal type="number" pos:start="71:68" pos:end="71:68">1</literal><operator pos:start="71:69" pos:end="71:69">)</operator><operator pos:start="71:70" pos:end="71:70">/</operator><literal type="number" pos:start="71:71" pos:end="71:71">2</literal><operator pos:start="71:72" pos:end="71:72">)</operator><operator pos:start="71:73" pos:end="71:73">*</operator><operator pos:start="71:74" pos:end="71:74">(</operator><name pos:start="71:75" pos:end="71:75">y</name><operator pos:start="71:76" pos:end="71:76">&amp;</operator><literal type="number" pos:start="71:77" pos:end="71:77">1</literal><operator pos:start="71:78" pos:end="71:78">)</operator><operator pos:start="71:79" pos:end="71:79">+</operator><operator pos:start="71:80" pos:end="71:80">(</operator><name pos:start="71:81" pos:end="71:81">y</name><operator pos:start="71:82" pos:end="71:83">&gt;&gt;</operator><literal type="number" pos:start="71:84" pos:end="71:84">1</literal><operator pos:start="71:85" pos:end="71:85">)</operator><operator pos:start="71:86" pos:end="71:86">)</operator></expr></argument>, <argument pos:start="71:89" pos:end="71:91"><expr pos:start="71:89" pos:end="71:91"><name pos:start="71:89" pos:end="71:91">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    <break pos:start="73:21" pos:end="73:26">break;</break>

                <case pos:start="75:17" pos:end="75:35">case <expr pos:start="75:22" pos:end="75:34"><name pos:start="75:22" pos:end="75:34">DEINT_ID_SIPR</name></expr>:</case>

                    <expr_stmt pos:start="77:21" pos:end="77:62"><expr pos:start="77:21" pos:end="77:61"><call pos:start="77:21" pos:end="77:61"><name pos:start="77:21" pos:end="77:28">readfull</name><argument_list pos:start="77:29" pos:end="77:61">(<argument pos:start="77:30" pos:end="77:30"><expr pos:start="77:30" pos:end="77:30"><name pos:start="77:30" pos:end="77:30">s</name></expr></argument>, <argument pos:start="77:33" pos:end="77:34"><expr pos:start="77:33" pos:end="77:34"><name pos:start="77:33" pos:end="77:34">pb</name></expr></argument>, <argument pos:start="77:37" pos:end="77:57"><expr pos:start="77:37" pos:end="77:57"><name pos:start="77:37" pos:end="77:49"><name pos:start="77:37" pos:end="77:39">ast</name><operator pos:start="77:40" pos:end="77:41">-&gt;</operator><name pos:start="77:42" pos:end="77:44">pkt</name><operator pos:start="77:45" pos:end="77:45">.</operator><name pos:start="77:46" pos:end="77:49">data</name></name> <operator pos:start="77:51" pos:end="77:51">+</operator> <name pos:start="77:53" pos:end="77:53">y</name> <operator pos:start="77:55" pos:end="77:55">*</operator> <name pos:start="77:57" pos:end="77:57">w</name></expr></argument>, <argument pos:start="77:60" pos:end="77:60"><expr pos:start="77:60" pos:end="77:60"><name pos:start="77:60" pos:end="77:60">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="79:21" pos:end="79:26">break;</break>

            </block_content>}</block></switch>



            <if_stmt pos:start="85:13" pos:end="87:26"><if pos:start="85:13" pos:end="87:26">if <condition pos:start="85:16" pos:end="85:44">(<expr pos:start="85:17" pos:end="85:43"><operator pos:start="85:17" pos:end="85:18">++</operator><operator pos:start="85:19" pos:end="85:19">(</operator><name pos:start="85:20" pos:end="85:38"><name pos:start="85:20" pos:end="85:22">ast</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:38">sub_packet_cnt</name></name><operator pos:start="85:39" pos:end="85:39">)</operator> <operator pos:start="85:41" pos:end="85:41">&lt;</operator> <name pos:start="85:43" pos:end="85:43">h</name></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:26"><block_content pos:start="87:17" pos:end="87:26">

                <return pos:start="87:17" pos:end="87:26">return <expr pos:start="87:24" pos:end="87:25"><operator pos:start="87:24" pos:end="87:24">-</operator><literal type="number" pos:start="87:25" pos:end="87:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="89:13" pos:end="91:61"><if pos:start="89:13" pos:end="91:61">if <condition pos:start="89:16" pos:end="89:47">(<expr pos:start="89:17" pos:end="89:46"><name pos:start="89:17" pos:end="89:29"><name pos:start="89:17" pos:end="89:19">ast</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:29">deint_id</name></name> <operator pos:start="89:31" pos:end="89:32">==</operator> <name pos:start="89:34" pos:end="89:46">DEINT_ID_SIPR</name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:61"><block_content pos:start="91:17" pos:end="91:61">

                <expr_stmt pos:start="91:17" pos:end="91:61"><expr pos:start="91:17" pos:end="91:60"><call pos:start="91:17" pos:end="91:60"><name pos:start="91:17" pos:end="91:39">ff_rm_reorder_sipr_data</name><argument_list pos:start="91:40" pos:end="91:60">(<argument pos:start="91:41" pos:end="91:53"><expr pos:start="91:41" pos:end="91:53"><name pos:start="91:41" pos:end="91:53"><name pos:start="91:41" pos:end="91:43">ast</name><operator pos:start="91:44" pos:end="91:45">-&gt;</operator><name pos:start="91:46" pos:end="91:48">pkt</name><operator pos:start="91:49" pos:end="91:49">.</operator><name pos:start="91:50" pos:end="91:53">data</name></name></expr></argument>, <argument pos:start="91:56" pos:end="91:56"><expr pos:start="91:56" pos:end="91:56"><name pos:start="91:56" pos:end="91:56">h</name></expr></argument>, <argument pos:start="91:59" pos:end="91:59"><expr pos:start="91:59" pos:end="91:59"><name pos:start="91:59" pos:end="91:59">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



             <expr_stmt pos:start="95:14" pos:end="95:37"><expr pos:start="95:14" pos:end="95:36"><name pos:start="95:14" pos:end="95:32"><name pos:start="95:14" pos:end="95:16">ast</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:32">sub_packet_cnt</name></name> <operator pos:start="95:34" pos:end="95:34">=</operator> <literal type="number" pos:start="95:36" pos:end="95:36">0</literal></expr>;</expr_stmt>

             <expr_stmt pos:start="97:14" pos:end="97:46"><expr pos:start="97:14" pos:end="97:45"><name pos:start="97:14" pos:end="97:33"><name pos:start="97:14" pos:end="97:15">rm</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:33">audio_stream_num</name></name> <operator pos:start="97:35" pos:end="97:35">=</operator> <name pos:start="97:37" pos:end="97:45"><name pos:start="97:37" pos:end="97:38">st</name><operator pos:start="97:39" pos:end="97:40">-&gt;</operator><name pos:start="97:41" pos:end="97:45">index</name></name></expr>;</expr_stmt>

             <expr_stmt pos:start="99:14" pos:end="99:64"><expr pos:start="99:14" pos:end="99:63"><name pos:start="99:14" pos:end="99:30"><name pos:start="99:14" pos:end="99:15">rm</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:30">audio_pkt_cnt</name></name> <operator pos:start="99:32" pos:end="99:32">=</operator> <name pos:start="99:34" pos:end="99:34">h</name> <operator pos:start="99:36" pos:end="99:36">*</operator> <name pos:start="99:38" pos:end="99:38">w</name> <operator pos:start="99:40" pos:end="99:40">/</operator> <name pos:start="99:42" pos:end="99:63"><name pos:start="99:42" pos:end="99:43">st</name><operator pos:start="99:44" pos:end="99:45">-&gt;</operator><name pos:start="99:46" pos:end="99:50">codec</name><operator pos:start="99:51" pos:end="99:52">-&gt;</operator><name pos:start="99:53" pos:end="99:63">block_align</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="101:11" pos:end="125:9">else if <condition pos:start="101:19" pos:end="103:52">(<expr pos:start="101:20" pos:end="103:51"><operator pos:start="101:20" pos:end="101:20">(</operator><name pos:start="101:21" pos:end="101:33"><name pos:start="101:21" pos:end="101:23">ast</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:33">deint_id</name></name> <operator pos:start="101:35" pos:end="101:36">==</operator> <name pos:start="101:38" pos:end="101:50">DEINT_ID_VBRF</name><operator pos:start="101:51" pos:end="101:51">)</operator> <operator pos:start="101:53" pos:end="101:54">||</operator>

                   <operator pos:start="103:20" pos:end="103:20">(</operator><name pos:start="103:21" pos:end="103:33"><name pos:start="103:21" pos:end="103:23">ast</name><operator pos:start="103:24" pos:end="103:25">-&gt;</operator><name pos:start="103:26" pos:end="103:33">deint_id</name></name> <operator pos:start="103:35" pos:end="103:36">==</operator> <name pos:start="103:38" pos:end="103:50">DEINT_ID_VBRS</name><operator pos:start="103:51" pos:end="103:51">)</operator></expr>)</condition> <block pos:start="103:54" pos:end="125:9">{<block_content pos:start="105:13" pos:end="123:26">

            <decl_stmt pos:start="105:13" pos:end="105:18"><decl pos:start="105:13" pos:end="105:17"><type pos:start="105:13" pos:end="105:15"><name pos:start="105:13" pos:end="105:15">int</name></type> <name pos:start="105:17" pos:end="105:17">x</name></decl>;</decl_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:45"><expr pos:start="107:13" pos:end="107:44"><name pos:start="107:13" pos:end="107:32"><name pos:start="107:13" pos:end="107:14">rm</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:32">audio_stream_num</name></name> <operator pos:start="107:34" pos:end="107:34">=</operator> <name pos:start="107:36" pos:end="107:44"><name pos:start="107:36" pos:end="107:37">st</name><operator pos:start="107:38" pos:end="107:39">-&gt;</operator><name pos:start="107:40" pos:end="107:44">index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:62"><expr pos:start="109:13" pos:end="109:61"><name pos:start="109:13" pos:end="109:31"><name pos:start="109:13" pos:end="109:15">ast</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:31">sub_packet_cnt</name></name> <operator pos:start="109:33" pos:end="109:33">=</operator> <operator pos:start="109:35" pos:end="109:35">(</operator><call pos:start="109:36" pos:end="109:48"><name pos:start="109:36" pos:end="109:44">avio_rb16</name><argument_list pos:start="109:45" pos:end="109:48">(<argument pos:start="109:46" pos:end="109:47"><expr pos:start="109:46" pos:end="109:47"><name pos:start="109:46" pos:end="109:47">pb</name></expr></argument>)</argument_list></call> <operator pos:start="109:50" pos:end="109:50">&amp;</operator> <literal type="number" pos:start="109:52" pos:end="109:55">0xf0</literal><operator pos:start="109:56" pos:end="109:56">)</operator> <operator pos:start="109:58" pos:end="109:59">&gt;&gt;</operator> <literal type="number" pos:start="109:61" pos:end="109:61">4</literal></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="123:26"><if pos:start="111:13" pos:end="121:13">if <condition pos:start="111:16" pos:end="111:36">(<expr pos:start="111:17" pos:end="111:35"><name pos:start="111:17" pos:end="111:35"><name pos:start="111:17" pos:end="111:19">ast</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:35">sub_packet_cnt</name></name></expr>)</condition> <block pos:start="111:38" pos:end="121:13">{<block_content pos:start="113:17" pos:end="119:48">

                <for pos:start="113:17" pos:end="115:63">for <control pos:start="113:21" pos:end="113:57">(<init pos:start="113:22" pos:end="113:27"><expr pos:start="113:22" pos:end="113:26"><name pos:start="113:22" pos:end="113:22">x</name> <operator pos:start="113:24" pos:end="113:24">=</operator> <literal type="number" pos:start="113:26" pos:end="113:26">0</literal></expr>;</init> <condition pos:start="113:29" pos:end="113:52"><expr pos:start="113:29" pos:end="113:51"><name pos:start="113:29" pos:end="113:29">x</name> <operator pos:start="113:31" pos:end="113:31">&lt;</operator> <name pos:start="113:33" pos:end="113:51"><name pos:start="113:33" pos:end="113:35">ast</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:51">sub_packet_cnt</name></name></expr>;</condition> <incr pos:start="113:54" pos:end="113:56"><expr pos:start="113:54" pos:end="113:56"><name pos:start="113:54" pos:end="113:54">x</name><operator pos:start="113:55" pos:end="113:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="115:21" pos:end="115:63"><block_content pos:start="115:21" pos:end="115:63">

                    <expr_stmt pos:start="115:21" pos:end="115:63"><expr pos:start="115:21" pos:end="115:62"><name pos:start="115:21" pos:end="115:46"><name pos:start="115:21" pos:end="115:23">ast</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:43">sub_packet_lengths</name><index pos:start="115:44" pos:end="115:46">[<expr pos:start="115:45" pos:end="115:45"><name pos:start="115:45" pos:end="115:45">x</name></expr>]</index></name> <operator pos:start="115:48" pos:end="115:48">=</operator> <call pos:start="115:50" pos:end="115:62"><name pos:start="115:50" pos:end="115:58">avio_rb16</name><argument_list pos:start="115:59" pos:end="115:62">(<argument pos:start="115:60" pos:end="115:61"><expr pos:start="115:60" pos:end="115:61"><name pos:start="115:60" pos:end="115:61">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="117:17" pos:end="117:56"><expr pos:start="117:17" pos:end="117:55"><name pos:start="117:17" pos:end="117:33"><name pos:start="117:17" pos:end="117:18">rm</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:33">audio_pkt_cnt</name></name> <operator pos:start="117:35" pos:end="117:35">=</operator> <name pos:start="117:37" pos:end="117:55"><name pos:start="117:37" pos:end="117:39">ast</name><operator pos:start="117:40" pos:end="117:41">-&gt;</operator><name pos:start="117:42" pos:end="117:55">sub_packet_cnt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:48"><expr pos:start="119:17" pos:end="119:47"><name pos:start="119:17" pos:end="119:35"><name pos:start="119:17" pos:end="119:19">ast</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:35">audiotimestamp</name></name> <operator pos:start="119:37" pos:end="119:37">=</operator> <name pos:start="119:39" pos:end="119:47">timestamp</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="121:15" pos:end="123:26">else<block type="pseudo" pos:start="123:17" pos:end="123:26"><block_content pos:start="123:17" pos:end="123:26">

                <return pos:start="123:17" pos:end="123:26">return <expr pos:start="123:24" pos:end="123:25"><operator pos:start="123:24" pos:end="123:24">-</operator><literal type="number" pos:start="123:25" pos:end="123:25">1</literal></expr>;</return></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="125:11" pos:end="131:9">else <block pos:start="125:16" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:39">

            <expr_stmt pos:start="127:13" pos:end="127:40"><expr pos:start="127:13" pos:end="127:39"><call pos:start="127:13" pos:end="127:39"><name pos:start="127:13" pos:end="127:25">av_get_packet</name><argument_list pos:start="127:26" pos:end="127:39">(<argument pos:start="127:27" pos:end="127:28"><expr pos:start="127:27" pos:end="127:28"><name pos:start="127:27" pos:end="127:28">pb</name></expr></argument>, <argument pos:start="127:31" pos:end="127:33"><expr pos:start="127:31" pos:end="127:33"><name pos:start="127:31" pos:end="127:33">pkt</name></expr></argument>, <argument pos:start="127:36" pos:end="127:38"><expr pos:start="127:36" pos:end="127:38"><name pos:start="127:36" pos:end="127:38">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:39"><expr pos:start="129:13" pos:end="129:38"><call pos:start="129:13" pos:end="129:38"><name pos:start="129:13" pos:end="129:29">rm_ac3_swap_bytes</name><argument_list pos:start="129:30" pos:end="129:38">(<argument pos:start="129:31" pos:end="129:32"><expr pos:start="129:31" pos:end="129:32"><name pos:start="129:31" pos:end="129:32">st</name></expr></argument>, <argument pos:start="129:35" pos:end="129:37"><expr pos:start="129:35" pos:end="129:37"><name pos:start="129:35" pos:end="129:37">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="133:7" pos:end="135:36">else<block type="pseudo" pos:start="135:9" pos:end="135:36"><block_content pos:start="135:9" pos:end="135:36">

        <expr_stmt pos:start="135:9" pos:end="135:36"><expr pos:start="135:9" pos:end="135:35"><call pos:start="135:9" pos:end="135:35"><name pos:start="135:9" pos:end="135:21">av_get_packet</name><argument_list pos:start="135:22" pos:end="135:35">(<argument pos:start="135:23" pos:end="135:24"><expr pos:start="135:23" pos:end="135:24"><name pos:start="135:23" pos:end="135:24">pb</name></expr></argument>, <argument pos:start="135:27" pos:end="135:29"><expr pos:start="135:27" pos:end="135:29"><name pos:start="135:27" pos:end="135:29">pkt</name></expr></argument>, <argument pos:start="135:32" pos:end="135:34"><expr pos:start="135:32" pos:end="135:34"><name pos:start="135:32" pos:end="135:34">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="166:0"><expr pos:start="139:5" pos:end="139:33"><name pos:start="139:5" pos:end="139:21"><name pos:start="139:5" pos:end="139:7">pkt</name><operator pos:start="139:8" pos:end="139:9">-&gt;</operator><name pos:start="139:10" pos:end="139:21">stream_index</name></name> <operator pos:start="139:23" pos:end="139:23">=</operator> <name pos:start="139:25" pos:end="139:33"><name pos:start="139:25" pos:end="139:26">st</name><operator pos:start="139:27" pos:end="139:28">-&gt;</operator><name pos:start="139:29" pos:end="139:33">index</name></name></expr>;</expr_stmt>



<cpp:if pos:start="143:1" pos:end="143:5">#<cpp:directive pos:start="143:2" pos:end="143:3">if</cpp:directive> <expr pos:start="143:5" pos:end="143:5"><literal type="number" pos:start="143:5" pos:end="143:5">0</literal></expr></cpp:if>

    if (st-&gt;codec-&gt;codec_type == AVMEDIA_TYPE_VIDEO) {

        if(st-&gt;codec-&gt;codec_id == AV_CODEC_ID_RV20){

            int seq= 128*(pkt-&gt;data[2]&amp;0x7F) + (pkt-&gt;data[3]&gt;&gt;1);

            av_log(s, AV_LOG_DEBUG, "%d %"PRId64" %d\n", *timestamp, *timestamp*512LL/25, seq);



            seq |= (timestamp&amp;~0x3FFF);

            if(seq - timestamp &gt;  0x2000) seq -= 0x4000;

            if(seq - timestamp &lt; -0x2000) seq += 0x4000;

        }

    }

<cpp:endif pos:start="165:1" pos:end="165:6">#<cpp:directive pos:start="165:2" pos:end="165:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="169:5" pos:end="169:25"><expr pos:start="169:5" pos:end="169:24"><name pos:start="169:5" pos:end="169:12"><name pos:start="169:5" pos:end="169:7">pkt</name><operator pos:start="169:8" pos:end="169:9">-&gt;</operator><name pos:start="169:10" pos:end="169:12">pts</name></name> <operator pos:start="169:14" pos:end="169:14">=</operator> <name pos:start="169:16" pos:end="169:24">timestamp</name></expr>;</expr_stmt>

    <if_stmt pos:start="171:5" pos:end="173:38"><if pos:start="171:5" pos:end="173:38">if <condition pos:start="171:8" pos:end="171:18">(<expr pos:start="171:9" pos:end="171:17"><name pos:start="171:9" pos:end="171:13">flags</name> <operator pos:start="171:15" pos:end="171:15">&amp;</operator> <literal type="number" pos:start="171:17" pos:end="171:17">2</literal></expr>)</condition><block type="pseudo" pos:start="173:9" pos:end="173:38"><block_content pos:start="173:9" pos:end="173:38">

        <expr_stmt pos:start="173:9" pos:end="173:38"><expr pos:start="173:9" pos:end="173:37"><name pos:start="173:9" pos:end="173:18"><name pos:start="173:9" pos:end="173:11">pkt</name><operator pos:start="173:12" pos:end="173:13">-&gt;</operator><name pos:start="173:14" pos:end="173:18">flags</name></name> <operator pos:start="173:20" pos:end="173:21">|=</operator> <name pos:start="173:23" pos:end="173:37">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="177:5" pos:end="177:79">return <expr pos:start="177:12" pos:end="177:78"><ternary pos:start="177:12" pos:end="177:78"><condition pos:start="177:12" pos:end="177:56"><expr pos:start="177:12" pos:end="177:54"><name pos:start="177:12" pos:end="177:32"><name pos:start="177:12" pos:end="177:13">st</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:20">codec</name><operator pos:start="177:21" pos:end="177:22">-&gt;</operator><name pos:start="177:23" pos:end="177:32">codec_type</name></name> <operator pos:start="177:34" pos:end="177:35">==</operator> <name pos:start="177:37" pos:end="177:54">AVMEDIA_TYPE_AUDIO</name></expr> ?</condition><then pos:start="177:58" pos:end="177:74"> <expr pos:start="177:58" pos:end="177:74"><name pos:start="177:58" pos:end="177:74"><name pos:start="177:58" pos:end="177:59">rm</name><operator pos:start="177:60" pos:end="177:61">-&gt;</operator><name pos:start="177:62" pos:end="177:74">audio_pkt_cnt</name></name></expr> </then><else pos:start="177:76" pos:end="177:78">: <expr pos:start="177:78" pos:end="177:78"><literal type="number" pos:start="177:78" pos:end="177:78">0</literal></expr></else></ternary></expr>;</return>

</block_content>}</block>
</unit>
