<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21104.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">tcg_reg_alloc_bb_end</name><parameter_list pos:start="1:33" pos:end="1:73">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:43">TCGContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:72"><decl pos:start="1:49" pos:end="1:72"><type pos:start="1:49" pos:end="1:72"><name pos:start="1:49" pos:end="1:57">TCGRegSet</name></type> <name pos:start="1:59" pos:end="1:72">allocated_regs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:36">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="41:5">for <control pos:start="9:9" pos:end="9:49">(<init pos:start="9:10" pos:end="9:27"><expr pos:start="9:10" pos:end="9:26"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <name pos:start="9:14" pos:end="9:26"><name pos:start="9:14" pos:end="9:14">s</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:26">nb_globals</name></name></expr>;</init> <condition pos:start="9:29" pos:end="9:44"><expr pos:start="9:29" pos:end="9:43"><name pos:start="9:29" pos:end="9:29">i</name> <operator pos:start="9:31" pos:end="9:31">&lt;</operator> <name pos:start="9:33" pos:end="9:43"><name pos:start="9:33" pos:end="9:33">s</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:43">nb_temps</name></name></expr>;</condition> <incr pos:start="9:46" pos:end="9:48"><expr pos:start="9:46" pos:end="9:48"><name pos:start="9:46" pos:end="9:46">i</name><operator pos:start="9:47" pos:end="9:48">++</operator></expr></incr>)</control> <block pos:start="9:51" pos:end="41:5">{<block_content pos:start="11:9" pos:end="39:9">

        <decl_stmt pos:start="11:9" pos:end="11:35"><decl pos:start="11:9" pos:end="11:34"><type pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:15">TCGTemp</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">ts</name> <init pos:start="11:21" pos:end="11:34">= <expr pos:start="11:23" pos:end="11:34"><operator pos:start="11:23" pos:end="11:23">&amp;</operator><name pos:start="11:24" pos:end="11:34"><name pos:start="11:24" pos:end="11:24">s</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:31">temps</name><index pos:start="11:32" pos:end="11:34">[<expr pos:start="11:33" pos:end="11:33"><name pos:start="11:33" pos:end="11:33">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="13:9" pos:end="39:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:27">(<expr pos:start="13:13" pos:end="13:26"><name pos:start="13:13" pos:end="13:26"><name pos:start="13:13" pos:end="13:14">ts</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:26">temp_local</name></name></expr>)</condition> <block pos:start="13:29" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:45">

            <expr_stmt pos:start="15:13" pos:end="15:45"><expr pos:start="15:13" pos:end="15:44"><call pos:start="15:13" pos:end="15:44"><name pos:start="15:13" pos:end="15:21">temp_save</name><argument_list pos:start="15:22" pos:end="15:44">(<argument pos:start="15:23" pos:end="15:23"><expr pos:start="15:23" pos:end="15:23"><name pos:start="15:23" pos:end="15:23">s</name></expr></argument>, <argument pos:start="15:26" pos:end="15:27"><expr pos:start="15:26" pos:end="15:27"><name pos:start="15:26" pos:end="15:27">ts</name></expr></argument>, <argument pos:start="15:30" pos:end="15:43"><expr pos:start="15:30" pos:end="15:43"><name pos:start="15:30" pos:end="15:43">allocated_regs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="17:11" pos:end="39:9">else <block pos:start="17:16" pos:end="39:9">{<block_content pos:start="23:13" pos:end="37:29">

<cpp:ifdef pos:start="19:1" pos:end="19:28">#<cpp:directive pos:start="19:2" pos:end="19:6">ifdef</cpp:directive> <name pos:start="19:8" pos:end="19:28">USE_LIVENESS_ANALYSIS</name></cpp:ifdef>

            <comment type="block" pos:start="21:13" pos:end="21:72">/* ??? Liveness does not yet incorporate indirect bases.  */</comment>

            <if_stmt pos:start="23:13" pos:end="36:0"><if pos:start="23:13" pos:end="36:0">if <condition pos:start="23:16" pos:end="23:35">(<expr pos:start="23:17" pos:end="23:34"><operator pos:start="23:17" pos:end="23:17">!</operator><name pos:start="23:18" pos:end="23:34"><name pos:start="23:18" pos:end="23:19">ts</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:34">indirect_base</name></name></expr>)</condition> <block pos:start="23:37" pos:end="36:0">{<block_content pos:start="29:17" pos:end="31:25">

                <comment type="block" pos:start="25:17" pos:end="27:48">/* The liveness analysis already ensures that temps are dead.

                   Keep an assert for safety. */</comment>

                <expr_stmt pos:start="29:17" pos:end="29:54"><expr pos:start="29:17" pos:end="29:53"><call pos:start="29:17" pos:end="29:53"><name pos:start="29:17" pos:end="29:22">assert</name><argument_list pos:start="29:23" pos:end="29:53">(<argument pos:start="29:24" pos:end="29:52"><expr pos:start="29:24" pos:end="29:52"><name pos:start="29:24" pos:end="29:35"><name pos:start="29:24" pos:end="29:25">ts</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:35">val_type</name></name> <operator pos:start="29:37" pos:end="29:38">==</operator> <name pos:start="29:40" pos:end="29:52">TEMP_VAL_DEAD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="31:17" pos:end="31:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="37:13" pos:end="37:29"><expr pos:start="37:13" pos:end="37:28"><call pos:start="37:13" pos:end="37:28"><name pos:start="37:13" pos:end="37:21">temp_dead</name><argument_list pos:start="37:22" pos:end="37:28">(<argument pos:start="37:23" pos:end="37:23"><expr pos:start="37:23" pos:end="37:23"><name pos:start="37:23" pos:end="37:23">s</name></expr></argument>, <argument pos:start="37:26" pos:end="37:27"><expr pos:start="37:26" pos:end="37:27"><name pos:start="37:26" pos:end="37:27">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><call pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:16">save_globals</name><argument_list pos:start="45:17" pos:end="45:35">(<argument pos:start="45:18" pos:end="45:18"><expr pos:start="45:18" pos:end="45:18"><name pos:start="45:18" pos:end="45:18">s</name></expr></argument>, <argument pos:start="45:21" pos:end="45:34"><expr pos:start="45:21" pos:end="45:34"><name pos:start="45:21" pos:end="45:34">allocated_regs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
