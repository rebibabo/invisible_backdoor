<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10916.c" pos:tabs="8"><function pos:start="1:1" pos:end="273:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">ffm_read_header</name><parameter_list pos:start="1:27" pos:end="1:70">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:69"><decl pos:start="1:48" pos:end="1:69"><type pos:start="1:48" pos:end="1:69"><name pos:start="1:48" pos:end="1:65">AVFormatParameters</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:69">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="273:1">{<block_content pos:start="5:5" pos:end="271:14">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">FFMContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ffm</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ByteIOContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">pb</name> <init pos:start="9:23" pos:end="9:29">= <expr pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVCodecContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:25">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:21">nb_streams</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:16">tag</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:16">/* header */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:7">tag</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:22"><name pos:start="21:11" pos:end="21:18">get_le32</name><argument_list pos:start="21:19" pos:end="21:22">(<argument pos:start="21:20" pos:end="21:21"><expr pos:start="21:20" pos:end="21:21"><name pos:start="21:20" pos:end="21:21">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:41">(<expr pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:11">tag</name> <operator pos:start="23:13" pos:end="23:14">!=</operator> <call pos:start="23:16" pos:end="23:40"><name pos:start="23:16" pos:end="23:20">MKTAG</name><argument_list pos:start="23:21" pos:end="23:40">(<argument pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><literal type="char" pos:start="23:22" pos:end="23:24">'F'</literal></expr></argument>, <argument pos:start="23:27" pos:end="23:29"><expr pos:start="23:27" pos:end="23:29"><literal type="char" pos:start="23:27" pos:end="23:29">'F'</literal></expr></argument>, <argument pos:start="23:32" pos:end="23:34"><expr pos:start="23:32" pos:end="23:34"><literal type="char" pos:start="23:32" pos:end="23:34">'M'</literal></expr></argument>, <argument pos:start="23:37" pos:end="23:39"><expr pos:start="23:37" pos:end="23:39"><literal type="char" pos:start="23:37" pos:end="23:39">'1'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <goto pos:start="25:9" pos:end="25:18">goto <name pos:start="25:14" pos:end="25:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:7">ffm</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:20">packet_size</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <call pos:start="27:24" pos:end="27:35"><name pos:start="27:24" pos:end="27:31">get_be32</name><argument_list pos:start="27:32" pos:end="27:35">(<argument pos:start="27:33" pos:end="27:34"><expr pos:start="27:33" pos:end="27:34"><name pos:start="27:33" pos:end="27:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:18"><if pos:start="29:5" pos:end="31:18">if <condition pos:start="29:8" pos:end="29:44">(<expr pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:11">ffm</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:24">packet_size</name></name> <operator pos:start="29:26" pos:end="29:27">!=</operator> <name pos:start="29:29" pos:end="29:43">FFM_PACKET_SIZE</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:18"><block_content pos:start="31:9" pos:end="31:18">

        <goto pos:start="31:9" pos:end="31:18">goto <name pos:start="31:14" pos:end="31:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:7">ffm</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:20">write_index</name></name> <operator pos:start="33:22" pos:end="33:22">=</operator> <call pos:start="33:24" pos:end="33:35"><name pos:start="33:24" pos:end="33:31">get_be64</name><argument_list pos:start="33:32" pos:end="33:35">(<argument pos:start="33:33" pos:end="33:34"><expr pos:start="33:33" pos:end="33:34"><name pos:start="33:33" pos:end="33:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="35:5" pos:end="35:27">/* get also filesize */</comment>

    <if_stmt pos:start="37:5" pos:end="49:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:29">(<expr pos:start="37:9" pos:end="37:28"><operator pos:start="37:9" pos:end="37:9">!</operator><call pos:start="37:10" pos:end="37:28"><name pos:start="37:10" pos:end="37:24">url_is_streamed</name><argument_list pos:start="37:25" pos:end="37:28">(<argument pos:start="37:26" pos:end="37:27"><expr pos:start="37:26" pos:end="37:27"><name pos:start="37:26" pos:end="37:27">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:31" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:34">

        <expr_stmt pos:start="39:9" pos:end="39:39"><expr pos:start="39:9" pos:end="39:38"><name pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:11">ffm</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:22">file_size</name></name> <operator pos:start="39:24" pos:end="39:24">=</operator> <call pos:start="39:26" pos:end="39:38"><name pos:start="39:26" pos:end="39:34">url_fsize</name><argument_list pos:start="39:35" pos:end="39:38">(<argument pos:start="39:36" pos:end="39:37"><expr pos:start="39:36" pos:end="39:37"><name pos:start="39:36" pos:end="39:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="43:34"><if pos:start="41:9" pos:end="43:34">if <condition pos:start="41:12" pos:end="41:29">(<expr pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:15">ffm</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:28">write_index</name></name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:34"><block_content pos:start="43:13" pos:end="43:34">

            <expr_stmt pos:start="43:13" pos:end="43:34"><expr pos:start="43:13" pos:end="43:33"><call pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:30">adjust_write_index</name><argument_list pos:start="43:31" pos:end="43:33">(<argument pos:start="43:32" pos:end="43:32"><expr pos:start="43:32" pos:end="43:32"><name pos:start="43:32" pos:end="43:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="49:5">else <block pos:start="45:12" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:49">

        <expr_stmt pos:start="47:9" pos:end="47:49"><expr pos:start="47:9" pos:end="47:48"><name pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:11">ffm</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:22">file_size</name></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <operator pos:start="47:26" pos:end="47:26">(</operator><call pos:start="47:27" pos:end="47:37"><name pos:start="47:27" pos:end="47:34">UINT64_C</name><argument_list pos:start="47:35" pos:end="47:37">(<argument pos:start="47:36" pos:end="47:36"><expr pos:start="47:36" pos:end="47:36"><literal type="number" pos:start="47:36" pos:end="47:36">1</literal></expr></argument>)</argument_list></call> <operator pos:start="47:39" pos:end="47:40">&lt;&lt;</operator> <literal type="number" pos:start="47:42" pos:end="47:43">63</literal><operator pos:start="47:44" pos:end="47:44">)</operator> <operator pos:start="47:46" pos:end="47:46">-</operator> <literal type="number" pos:start="47:48" pos:end="47:48">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:30"><expr pos:start="53:5" pos:end="53:29"><name pos:start="53:5" pos:end="53:14">nb_streams</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <call pos:start="53:18" pos:end="53:29"><name pos:start="53:18" pos:end="53:25">get_be32</name><argument_list pos:start="53:26" pos:end="53:29">(<argument pos:start="53:27" pos:end="53:28"><expr pos:start="53:27" pos:end="53:28"><name pos:start="53:27" pos:end="53:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:17"><expr pos:start="55:5" pos:end="55:16"><call pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:12">get_be32</name><argument_list pos:start="55:13" pos:end="55:16">(<argument pos:start="55:14" pos:end="55:15"><expr pos:start="55:14" pos:end="55:15"><name pos:start="55:14" pos:end="55:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="55:19" pos:end="55:37">/* total bitrate */</comment>

    <comment type="block" pos:start="57:5" pos:end="57:26">/* read each stream */</comment>

    <for pos:start="59:5" pos:end="229:5">for<control pos:start="59:8" pos:end="59:29">(<init pos:start="59:9" pos:end="59:12"><expr pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:9">i</name><operator pos:start="59:10" pos:end="59:10">=</operator><literal type="number" pos:start="59:11" pos:end="59:11">0</literal></expr>;</init><condition pos:start="59:13" pos:end="59:25"><expr pos:start="59:13" pos:end="59:24"><name pos:start="59:13" pos:end="59:13">i</name><operator pos:start="59:14" pos:end="59:14">&lt;</operator><name pos:start="59:15" pos:end="59:24">nb_streams</name></expr>;</condition><incr pos:start="59:26" pos:end="59:28"><expr pos:start="59:26" pos:end="59:28"><name pos:start="59:26" pos:end="59:26">i</name><operator pos:start="59:27" pos:end="59:28">++</operator></expr></incr>)</control> <block pos:start="59:31" pos:end="229:5">{<block_content pos:start="61:9" pos:end="227:9">

        <decl_stmt pos:start="61:9" pos:end="61:28"><decl pos:start="61:9" pos:end="61:27"><type pos:start="61:9" pos:end="61:12"><name pos:start="61:9" pos:end="61:12">char</name></type> <name pos:start="61:14" pos:end="61:27"><name pos:start="61:14" pos:end="61:22">rc_eq_buf</name><index pos:start="61:23" pos:end="61:27">[<expr pos:start="61:24" pos:end="61:26"><literal type="number" pos:start="61:24" pos:end="61:26">128</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:33"><expr pos:start="65:9" pos:end="65:32"><name pos:start="65:9" pos:end="65:10">st</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <call pos:start="65:14" pos:end="65:32"><name pos:start="65:14" pos:end="65:26">av_new_stream</name><argument_list pos:start="65:27" pos:end="65:32">(<argument pos:start="65:28" pos:end="65:28"><expr pos:start="65:28" pos:end="65:28"><name pos:start="65:28" pos:end="65:28">s</name></expr></argument>, <argument pos:start="65:31" pos:end="65:31"><expr pos:start="65:31" pos:end="65:31"><literal type="number" pos:start="65:31" pos:end="65:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:22"><if pos:start="67:9" pos:end="69:22">if <condition pos:start="67:12" pos:end="67:16">(<expr pos:start="67:13" pos:end="67:15"><operator pos:start="67:13" pos:end="67:13">!</operator><name pos:start="67:14" pos:end="67:15">st</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:22"><block_content pos:start="69:13" pos:end="69:22">

            <goto pos:start="69:13" pos:end="69:22">goto <name pos:start="69:18" pos:end="69:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:44"><expr pos:start="73:9" pos:end="73:43"><call pos:start="73:9" pos:end="73:43"><name pos:start="73:9" pos:end="73:23">av_set_pts_info</name><argument_list pos:start="73:24" pos:end="73:43">(<argument pos:start="73:25" pos:end="73:26"><expr pos:start="73:25" pos:end="73:26"><name pos:start="73:25" pos:end="73:26">st</name></expr></argument>, <argument pos:start="73:29" pos:end="73:30"><expr pos:start="73:29" pos:end="73:30"><literal type="number" pos:start="73:29" pos:end="73:30">64</literal></expr></argument>, <argument pos:start="73:33" pos:end="73:33"><expr pos:start="73:33" pos:end="73:33"><literal type="number" pos:start="73:33" pos:end="73:33">1</literal></expr></argument>, <argument pos:start="73:36" pos:end="73:42"><expr pos:start="73:36" pos:end="73:42"><literal type="number" pos:start="73:36" pos:end="73:42">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:26"><expr pos:start="77:9" pos:end="77:25"><name pos:start="77:9" pos:end="77:13">codec</name> <operator pos:start="77:15" pos:end="77:15">=</operator> <name pos:start="77:17" pos:end="77:25"><name pos:start="77:17" pos:end="77:18">st</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:25">codec</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="79:9" pos:end="79:26">/* generic info */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:39"><expr pos:start="81:9" pos:end="81:38"><name pos:start="81:9" pos:end="81:23"><name pos:start="81:9" pos:end="81:13">codec</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:23">codec_id</name></name> <operator pos:start="81:25" pos:end="81:25">=</operator> <call pos:start="81:27" pos:end="81:38"><name pos:start="81:27" pos:end="81:34">get_be32</name><argument_list pos:start="81:35" pos:end="81:38">(<argument pos:start="81:36" pos:end="81:37"><expr pos:start="81:36" pos:end="81:37"><name pos:start="81:36" pos:end="81:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:41"><expr pos:start="83:9" pos:end="83:40"><name pos:start="83:9" pos:end="83:25"><name pos:start="83:9" pos:end="83:13">codec</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:25">codec_type</name></name> <operator pos:start="83:27" pos:end="83:27">=</operator> <call pos:start="83:29" pos:end="83:40"><name pos:start="83:29" pos:end="83:36">get_byte</name><argument_list pos:start="83:37" pos:end="83:40">(<argument pos:start="83:38" pos:end="83:39"><expr pos:start="83:38" pos:end="83:39"><name pos:start="83:38" pos:end="83:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="83:43" pos:end="83:58">/* codec_type */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:39"><expr pos:start="85:9" pos:end="85:38"><name pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:13">codec</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:23">bit_rate</name></name> <operator pos:start="85:25" pos:end="85:25">=</operator> <call pos:start="85:27" pos:end="85:38"><name pos:start="85:27" pos:end="85:34">get_be32</name><argument_list pos:start="85:35" pos:end="85:38">(<argument pos:start="85:36" pos:end="85:37"><expr pos:start="85:36" pos:end="85:37"><name pos:start="85:36" pos:end="85:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:35"><expr pos:start="87:9" pos:end="87:34"><name pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:10">st</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:19">quality</name></name> <operator pos:start="87:21" pos:end="87:21">=</operator> <call pos:start="87:23" pos:end="87:34"><name pos:start="87:23" pos:end="87:30">get_be32</name><argument_list pos:start="87:31" pos:end="87:34">(<argument pos:start="87:32" pos:end="87:33"><expr pos:start="87:32" pos:end="87:33"><name pos:start="87:32" pos:end="87:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:36"><expr pos:start="89:9" pos:end="89:35"><name pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:13">codec</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:20">flags</name></name> <operator pos:start="89:22" pos:end="89:22">=</operator> <call pos:start="89:24" pos:end="89:35"><name pos:start="89:24" pos:end="89:31">get_be32</name><argument_list pos:start="89:32" pos:end="89:35">(<argument pos:start="89:33" pos:end="89:34"><expr pos:start="89:33" pos:end="89:34"><name pos:start="89:33" pos:end="89:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:37"><expr pos:start="91:9" pos:end="91:36"><name pos:start="91:9" pos:end="91:21"><name pos:start="91:9" pos:end="91:13">codec</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:21">flags2</name></name> <operator pos:start="91:23" pos:end="91:23">=</operator> <call pos:start="91:25" pos:end="91:36"><name pos:start="91:25" pos:end="91:32">get_be32</name><argument_list pos:start="91:33" pos:end="91:36">(<argument pos:start="91:34" pos:end="91:35"><expr pos:start="91:34" pos:end="91:35"><name pos:start="91:34" pos:end="91:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:36"><expr pos:start="93:9" pos:end="93:35"><name pos:start="93:9" pos:end="93:20"><name pos:start="93:9" pos:end="93:13">codec</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:20">debug</name></name> <operator pos:start="93:22" pos:end="93:22">=</operator> <call pos:start="93:24" pos:end="93:35"><name pos:start="93:24" pos:end="93:31">get_be32</name><argument_list pos:start="93:32" pos:end="93:35">(<argument pos:start="93:33" pos:end="93:34"><expr pos:start="93:33" pos:end="93:34"><name pos:start="93:33" pos:end="93:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="95:9" pos:end="95:27">/* specific info */</comment>

        <switch pos:start="97:9" pos:end="213:9">switch<condition pos:start="97:15" pos:end="97:33">(<expr pos:start="97:16" pos:end="97:32"><name pos:start="97:16" pos:end="97:32"><name pos:start="97:16" pos:end="97:20">codec</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:32">codec_type</name></name></expr>)</condition> <block pos:start="97:35" pos:end="213:9">{<block_content pos:start="99:9" pos:end="211:22">

        <case pos:start="99:9" pos:end="99:30">case <expr pos:start="99:14" pos:end="99:29"><name pos:start="99:14" pos:end="99:29">CODEC_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="101:13" pos:end="101:48"><expr pos:start="101:13" pos:end="101:47"><name pos:start="101:13" pos:end="101:32"><name pos:start="101:13" pos:end="101:17">codec</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:28">time_base</name><operator pos:start="101:29" pos:end="101:29">.</operator><name pos:start="101:30" pos:end="101:32">num</name></name> <operator pos:start="101:34" pos:end="101:34">=</operator> <call pos:start="101:36" pos:end="101:47"><name pos:start="101:36" pos:end="101:43">get_be32</name><argument_list pos:start="101:44" pos:end="101:47">(<argument pos:start="101:45" pos:end="101:46"><expr pos:start="101:45" pos:end="101:46"><name pos:start="101:45" pos:end="101:46">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:48"><expr pos:start="103:13" pos:end="103:47"><name pos:start="103:13" pos:end="103:32"><name pos:start="103:13" pos:end="103:17">codec</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:28">time_base</name><operator pos:start="103:29" pos:end="103:29">.</operator><name pos:start="103:30" pos:end="103:32">den</name></name> <operator pos:start="103:34" pos:end="103:34">=</operator> <call pos:start="103:36" pos:end="103:47"><name pos:start="103:36" pos:end="103:43">get_be32</name><argument_list pos:start="103:44" pos:end="103:47">(<argument pos:start="103:45" pos:end="103:46"><expr pos:start="103:45" pos:end="103:46"><name pos:start="103:45" pos:end="103:46">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:40"><expr pos:start="105:13" pos:end="105:39"><name pos:start="105:13" pos:end="105:24"><name pos:start="105:13" pos:end="105:17">codec</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:24">width</name></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <call pos:start="105:28" pos:end="105:39"><name pos:start="105:28" pos:end="105:35">get_be16</name><argument_list pos:start="105:36" pos:end="105:39">(<argument pos:start="105:37" pos:end="105:38"><expr pos:start="105:37" pos:end="105:38"><name pos:start="105:37" pos:end="105:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:41"><expr pos:start="107:13" pos:end="107:40"><name pos:start="107:13" pos:end="107:25"><name pos:start="107:13" pos:end="107:17">codec</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:25">height</name></name> <operator pos:start="107:27" pos:end="107:27">=</operator> <call pos:start="107:29" pos:end="107:40"><name pos:start="107:29" pos:end="107:36">get_be16</name><argument_list pos:start="107:37" pos:end="107:40">(<argument pos:start="107:38" pos:end="107:39"><expr pos:start="107:38" pos:end="107:39"><name pos:start="107:38" pos:end="107:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:43"><expr pos:start="109:13" pos:end="109:42"><name pos:start="109:13" pos:end="109:27"><name pos:start="109:13" pos:end="109:17">codec</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:27">gop_size</name></name> <operator pos:start="109:29" pos:end="109:29">=</operator> <call pos:start="109:31" pos:end="109:42"><name pos:start="109:31" pos:end="109:38">get_be16</name><argument_list pos:start="109:39" pos:end="109:42">(<argument pos:start="109:40" pos:end="109:41"><expr pos:start="109:40" pos:end="109:41"><name pos:start="109:40" pos:end="109:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:42"><expr pos:start="111:13" pos:end="111:41"><name pos:start="111:13" pos:end="111:26"><name pos:start="111:13" pos:end="111:17">codec</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:26">pix_fmt</name></name> <operator pos:start="111:28" pos:end="111:28">=</operator> <call pos:start="111:30" pos:end="111:41"><name pos:start="111:30" pos:end="111:37">get_be32</name><argument_list pos:start="111:38" pos:end="111:41">(<argument pos:start="111:39" pos:end="111:40"><expr pos:start="111:39" pos:end="111:40"><name pos:start="111:39" pos:end="111:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:39"><expr pos:start="113:13" pos:end="113:38"><name pos:start="113:13" pos:end="113:23"><name pos:start="113:13" pos:end="113:17">codec</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:23">qmin</name></name> <operator pos:start="113:25" pos:end="113:25">=</operator> <call pos:start="113:27" pos:end="113:38"><name pos:start="113:27" pos:end="113:34">get_byte</name><argument_list pos:start="113:35" pos:end="113:38">(<argument pos:start="113:36" pos:end="113:37"><expr pos:start="113:36" pos:end="113:37"><name pos:start="113:36" pos:end="113:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:39"><expr pos:start="115:13" pos:end="115:38"><name pos:start="115:13" pos:end="115:23"><name pos:start="115:13" pos:end="115:17">codec</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:23">qmax</name></name> <operator pos:start="115:25" pos:end="115:25">=</operator> <call pos:start="115:27" pos:end="115:38"><name pos:start="115:27" pos:end="115:34">get_byte</name><argument_list pos:start="115:35" pos:end="115:38">(<argument pos:start="115:36" pos:end="115:37"><expr pos:start="115:36" pos:end="115:37"><name pos:start="115:36" pos:end="115:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:44"><expr pos:start="117:13" pos:end="117:43"><name pos:start="117:13" pos:end="117:28"><name pos:start="117:13" pos:end="117:17">codec</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:28">max_qdiff</name></name> <operator pos:start="117:30" pos:end="117:30">=</operator> <call pos:start="117:32" pos:end="117:43"><name pos:start="117:32" pos:end="117:39">get_byte</name><argument_list pos:start="117:40" pos:end="117:43">(<argument pos:start="117:41" pos:end="117:42"><expr pos:start="117:41" pos:end="117:42"><name pos:start="117:41" pos:end="117:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:54"><expr pos:start="119:13" pos:end="119:53"><name pos:start="119:13" pos:end="119:28"><name pos:start="119:13" pos:end="119:17">codec</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:28">qcompress</name></name> <operator pos:start="119:30" pos:end="119:30">=</operator> <call pos:start="119:32" pos:end="119:43"><name pos:start="119:32" pos:end="119:39">get_be16</name><argument_list pos:start="119:40" pos:end="119:43">(<argument pos:start="119:41" pos:end="119:42"><expr pos:start="119:41" pos:end="119:42"><name pos:start="119:41" pos:end="119:42">pb</name></expr></argument>)</argument_list></call> <operator pos:start="119:45" pos:end="119:45">/</operator> <literal type="number" pos:start="119:47" pos:end="119:53">10000.0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:50"><expr pos:start="121:13" pos:end="121:49"><name pos:start="121:13" pos:end="121:24"><name pos:start="121:13" pos:end="121:17">codec</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:24">qblur</name></name> <operator pos:start="121:26" pos:end="121:26">=</operator> <call pos:start="121:28" pos:end="121:39"><name pos:start="121:28" pos:end="121:35">get_be16</name><argument_list pos:start="121:36" pos:end="121:39">(<argument pos:start="121:37" pos:end="121:38"><expr pos:start="121:37" pos:end="121:38"><name pos:start="121:37" pos:end="121:38">pb</name></expr></argument>)</argument_list></call> <operator pos:start="121:41" pos:end="121:41">/</operator> <literal type="number" pos:start="121:43" pos:end="121:49">10000.0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:53"><expr pos:start="123:13" pos:end="123:52"><name pos:start="123:13" pos:end="123:37"><name pos:start="123:13" pos:end="123:17">codec</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:37">bit_rate_tolerance</name></name> <operator pos:start="123:39" pos:end="123:39">=</operator> <call pos:start="123:41" pos:end="123:52"><name pos:start="123:41" pos:end="123:48">get_be32</name><argument_list pos:start="123:49" pos:end="123:52">(<argument pos:start="123:50" pos:end="123:51"><expr pos:start="123:50" pos:end="123:51"><name pos:start="123:50" pos:end="123:51">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:81"><expr pos:start="125:13" pos:end="125:80"><name pos:start="125:13" pos:end="125:24"><name pos:start="125:13" pos:end="125:17">codec</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:24">rc_eq</name></name> <operator pos:start="125:26" pos:end="125:26">=</operator> <call pos:start="125:28" pos:end="125:80"><name pos:start="125:28" pos:end="125:36">av_strdup</name><argument_list pos:start="125:37" pos:end="125:80">(<argument pos:start="125:38" pos:end="125:79"><expr pos:start="125:38" pos:end="125:79"><call pos:start="125:38" pos:end="125:79"><name pos:start="125:38" pos:end="125:45">get_strz</name><argument_list pos:start="125:46" pos:end="125:79">(<argument pos:start="125:47" pos:end="125:48"><expr pos:start="125:47" pos:end="125:48"><name pos:start="125:47" pos:end="125:48">pb</name></expr></argument>, <argument pos:start="125:51" pos:end="125:59"><expr pos:start="125:51" pos:end="125:59"><name pos:start="125:51" pos:end="125:59">rc_eq_buf</name></expr></argument>, <argument pos:start="125:62" pos:end="125:78"><expr pos:start="125:62" pos:end="125:78"><sizeof pos:start="125:62" pos:end="125:78">sizeof<argument_list pos:start="125:68" pos:end="125:78">(<argument pos:start="125:69" pos:end="125:77"><expr pos:start="125:69" pos:end="125:77"><name pos:start="125:69" pos:end="125:77">rc_eq_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:46"><expr pos:start="127:13" pos:end="127:45"><name pos:start="127:13" pos:end="127:30"><name pos:start="127:13" pos:end="127:17">codec</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:30">rc_max_rate</name></name> <operator pos:start="127:32" pos:end="127:32">=</operator> <call pos:start="127:34" pos:end="127:45"><name pos:start="127:34" pos:end="127:41">get_be32</name><argument_list pos:start="127:42" pos:end="127:45">(<argument pos:start="127:43" pos:end="127:44"><expr pos:start="127:43" pos:end="127:44"><name pos:start="127:43" pos:end="127:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:46"><expr pos:start="129:13" pos:end="129:45"><name pos:start="129:13" pos:end="129:30"><name pos:start="129:13" pos:end="129:17">codec</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:30">rc_min_rate</name></name> <operator pos:start="129:32" pos:end="129:32">=</operator> <call pos:start="129:34" pos:end="129:45"><name pos:start="129:34" pos:end="129:41">get_be32</name><argument_list pos:start="129:42" pos:end="129:45">(<argument pos:start="129:43" pos:end="129:44"><expr pos:start="129:43" pos:end="129:44"><name pos:start="129:43" pos:end="129:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:49"><expr pos:start="131:13" pos:end="131:48"><name pos:start="131:13" pos:end="131:33"><name pos:start="131:13" pos:end="131:17">codec</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:33">rc_buffer_size</name></name> <operator pos:start="131:35" pos:end="131:35">=</operator> <call pos:start="131:37" pos:end="131:48"><name pos:start="131:37" pos:end="131:44">get_be32</name><argument_list pos:start="131:45" pos:end="131:48">(<argument pos:start="131:46" pos:end="131:47"><expr pos:start="131:46" pos:end="131:47"><name pos:start="131:46" pos:end="131:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:61"><expr pos:start="133:13" pos:end="133:60"><name pos:start="133:13" pos:end="133:33"><name pos:start="133:13" pos:end="133:17">codec</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:33">i_quant_factor</name></name> <operator pos:start="133:35" pos:end="133:35">=</operator> <call pos:start="133:37" pos:end="133:60"><name pos:start="133:37" pos:end="133:46">av_int2dbl</name><argument_list pos:start="133:47" pos:end="133:60">(<argument pos:start="133:48" pos:end="133:59"><expr pos:start="133:48" pos:end="133:59"><call pos:start="133:48" pos:end="133:59"><name pos:start="133:48" pos:end="133:55">get_be64</name><argument_list pos:start="133:56" pos:end="133:59">(<argument pos:start="133:57" pos:end="133:58"><expr pos:start="133:57" pos:end="133:58"><name pos:start="133:57" pos:end="133:58">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:61"><expr pos:start="135:13" pos:end="135:60"><name pos:start="135:13" pos:end="135:33"><name pos:start="135:13" pos:end="135:17">codec</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:33">b_quant_factor</name></name> <operator pos:start="135:35" pos:end="135:35">=</operator> <call pos:start="135:37" pos:end="135:60"><name pos:start="135:37" pos:end="135:46">av_int2dbl</name><argument_list pos:start="135:47" pos:end="135:60">(<argument pos:start="135:48" pos:end="135:59"><expr pos:start="135:48" pos:end="135:59"><call pos:start="135:48" pos:end="135:59"><name pos:start="135:48" pos:end="135:55">get_be64</name><argument_list pos:start="135:56" pos:end="135:59">(<argument pos:start="135:57" pos:end="135:58"><expr pos:start="135:57" pos:end="135:58"><name pos:start="135:57" pos:end="135:58">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:61"><expr pos:start="137:13" pos:end="137:60"><name pos:start="137:13" pos:end="137:33"><name pos:start="137:13" pos:end="137:17">codec</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:33">i_quant_offset</name></name> <operator pos:start="137:35" pos:end="137:35">=</operator> <call pos:start="137:37" pos:end="137:60"><name pos:start="137:37" pos:end="137:46">av_int2dbl</name><argument_list pos:start="137:47" pos:end="137:60">(<argument pos:start="137:48" pos:end="137:59"><expr pos:start="137:48" pos:end="137:59"><call pos:start="137:48" pos:end="137:59"><name pos:start="137:48" pos:end="137:55">get_be64</name><argument_list pos:start="137:56" pos:end="137:59">(<argument pos:start="137:57" pos:end="137:58"><expr pos:start="137:57" pos:end="137:58"><name pos:start="137:57" pos:end="137:58">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:61"><expr pos:start="139:13" pos:end="139:60"><name pos:start="139:13" pos:end="139:33"><name pos:start="139:13" pos:end="139:17">codec</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:33">b_quant_offset</name></name> <operator pos:start="139:35" pos:end="139:35">=</operator> <call pos:start="139:37" pos:end="139:60"><name pos:start="139:37" pos:end="139:46">av_int2dbl</name><argument_list pos:start="139:47" pos:end="139:60">(<argument pos:start="139:48" pos:end="139:59"><expr pos:start="139:48" pos:end="139:59"><call pos:start="139:48" pos:end="139:59"><name pos:start="139:48" pos:end="139:55">get_be64</name><argument_list pos:start="139:56" pos:end="139:59">(<argument pos:start="139:57" pos:end="139:58"><expr pos:start="139:57" pos:end="139:58"><name pos:start="139:57" pos:end="139:58">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:43"><expr pos:start="141:13" pos:end="141:42"><name pos:start="141:13" pos:end="141:27"><name pos:start="141:13" pos:end="141:17">codec</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:27">dct_algo</name></name> <operator pos:start="141:29" pos:end="141:29">=</operator> <call pos:start="141:31" pos:end="141:42"><name pos:start="141:31" pos:end="141:38">get_be32</name><argument_list pos:start="141:39" pos:end="141:42">(<argument pos:start="141:40" pos:end="141:41"><expr pos:start="141:40" pos:end="141:41"><name pos:start="141:40" pos:end="141:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:56"><expr pos:start="143:13" pos:end="143:55"><name pos:start="143:13" pos:end="143:40"><name pos:start="143:13" pos:end="143:17">codec</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:40">strict_std_compliance</name></name> <operator pos:start="143:42" pos:end="143:42">=</operator> <call pos:start="143:44" pos:end="143:55"><name pos:start="143:44" pos:end="143:51">get_be32</name><argument_list pos:start="143:52" pos:end="143:55">(<argument pos:start="143:53" pos:end="143:54"><expr pos:start="143:53" pos:end="143:54"><name pos:start="143:53" pos:end="143:54">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:47"><expr pos:start="145:13" pos:end="145:46"><name pos:start="145:13" pos:end="145:31"><name pos:start="145:13" pos:end="145:17">codec</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:31">max_b_frames</name></name> <operator pos:start="145:33" pos:end="145:33">=</operator> <call pos:start="145:35" pos:end="145:46"><name pos:start="145:35" pos:end="145:42">get_be32</name><argument_list pos:start="145:43" pos:end="145:46">(<argument pos:start="145:44" pos:end="145:45"><expr pos:start="145:44" pos:end="145:45"><name pos:start="145:44" pos:end="145:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:54"><expr pos:start="147:13" pos:end="147:53"><name pos:start="147:13" pos:end="147:38"><name pos:start="147:13" pos:end="147:17">codec</name><operator pos:start="147:18" pos:end="147:19">-&gt;</operator><name pos:start="147:20" pos:end="147:38">luma_elim_threshold</name></name> <operator pos:start="147:40" pos:end="147:40">=</operator> <call pos:start="147:42" pos:end="147:53"><name pos:start="147:42" pos:end="147:49">get_be32</name><argument_list pos:start="147:50" pos:end="147:53">(<argument pos:start="147:51" pos:end="147:52"><expr pos:start="147:51" pos:end="147:52"><name pos:start="147:51" pos:end="147:52">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:56"><expr pos:start="149:13" pos:end="149:55"><name pos:start="149:13" pos:end="149:40"><name pos:start="149:13" pos:end="149:17">codec</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:40">chroma_elim_threshold</name></name> <operator pos:start="149:42" pos:end="149:42">=</operator> <call pos:start="149:44" pos:end="149:55"><name pos:start="149:44" pos:end="149:51">get_be32</name><argument_list pos:start="149:52" pos:end="149:55">(<argument pos:start="149:53" pos:end="149:54"><expr pos:start="149:53" pos:end="149:54"><name pos:start="149:53" pos:end="149:54">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:45"><expr pos:start="151:13" pos:end="151:44"><name pos:start="151:13" pos:end="151:29"><name pos:start="151:13" pos:end="151:17">codec</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:29">mpeg_quant</name></name> <operator pos:start="151:31" pos:end="151:31">=</operator> <call pos:start="151:33" pos:end="151:44"><name pos:start="151:33" pos:end="151:40">get_be32</name><argument_list pos:start="151:41" pos:end="151:44">(<argument pos:start="151:42" pos:end="151:43"><expr pos:start="151:42" pos:end="151:43"><name pos:start="151:42" pos:end="151:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:53"><expr pos:start="153:13" pos:end="153:52"><name pos:start="153:13" pos:end="153:37"><name pos:start="153:13" pos:end="153:17">codec</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:37">intra_dc_precision</name></name> <operator pos:start="153:39" pos:end="153:39">=</operator> <call pos:start="153:41" pos:end="153:52"><name pos:start="153:41" pos:end="153:48">get_be32</name><argument_list pos:start="153:49" pos:end="153:52">(<argument pos:start="153:50" pos:end="153:51"><expr pos:start="153:50" pos:end="153:51"><name pos:start="153:50" pos:end="153:51">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:44"><expr pos:start="155:13" pos:end="155:43"><name pos:start="155:13" pos:end="155:28"><name pos:start="155:13" pos:end="155:17">codec</name><operator pos:start="155:18" pos:end="155:19">-&gt;</operator><name pos:start="155:20" pos:end="155:28">me_method</name></name> <operator pos:start="155:30" pos:end="155:30">=</operator> <call pos:start="155:32" pos:end="155:43"><name pos:start="155:32" pos:end="155:39">get_be32</name><argument_list pos:start="155:40" pos:end="155:43">(<argument pos:start="155:41" pos:end="155:42"><expr pos:start="155:41" pos:end="155:42"><name pos:start="155:41" pos:end="155:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:46"><expr pos:start="157:13" pos:end="157:45"><name pos:start="157:13" pos:end="157:30"><name pos:start="157:13" pos:end="157:17">codec</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:30">mb_decision</name></name> <operator pos:start="157:32" pos:end="157:32">=</operator> <call pos:start="157:34" pos:end="157:45"><name pos:start="157:34" pos:end="157:41">get_be32</name><argument_list pos:start="157:42" pos:end="157:45">(<argument pos:start="157:43" pos:end="157:44"><expr pos:start="157:43" pos:end="157:44"><name pos:start="157:43" pos:end="157:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:46"><expr pos:start="159:13" pos:end="159:45"><name pos:start="159:13" pos:end="159:30"><name pos:start="159:13" pos:end="159:17">codec</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:30">nsse_weight</name></name> <operator pos:start="159:32" pos:end="159:32">=</operator> <call pos:start="159:34" pos:end="159:45"><name pos:start="159:34" pos:end="159:41">get_be32</name><argument_list pos:start="159:42" pos:end="159:45">(<argument pos:start="159:43" pos:end="159:44"><expr pos:start="159:43" pos:end="159:44"><name pos:start="159:43" pos:end="159:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:49"><expr pos:start="161:13" pos:end="161:48"><name pos:start="161:13" pos:end="161:33"><name pos:start="161:13" pos:end="161:17">codec</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:33">frame_skip_cmp</name></name> <operator pos:start="161:35" pos:end="161:35">=</operator> <call pos:start="161:37" pos:end="161:48"><name pos:start="161:37" pos:end="161:44">get_be32</name><argument_list pos:start="161:45" pos:end="161:48">(<argument pos:start="161:46" pos:end="161:47"><expr pos:start="161:46" pos:end="161:47"><name pos:start="161:46" pos:end="161:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:69"><expr pos:start="163:13" pos:end="163:68"><name pos:start="163:13" pos:end="163:41"><name pos:start="163:13" pos:end="163:17">codec</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:41">rc_buffer_aggressivity</name></name> <operator pos:start="163:43" pos:end="163:43">=</operator> <call pos:start="163:45" pos:end="163:68"><name pos:start="163:45" pos:end="163:54">av_int2dbl</name><argument_list pos:start="163:55" pos:end="163:68">(<argument pos:start="163:56" pos:end="163:67"><expr pos:start="163:56" pos:end="163:67"><call pos:start="163:56" pos:end="163:67"><name pos:start="163:56" pos:end="163:63">get_be64</name><argument_list pos:start="163:64" pos:end="163:67">(<argument pos:start="163:65" pos:end="163:66"><expr pos:start="163:65" pos:end="163:66"><name pos:start="163:65" pos:end="163:66">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:44"><expr pos:start="165:13" pos:end="165:43"><name pos:start="165:13" pos:end="165:28"><name pos:start="165:13" pos:end="165:17">codec</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:28">codec_tag</name></name> <operator pos:start="165:30" pos:end="165:30">=</operator> <call pos:start="165:32" pos:end="165:43"><name pos:start="165:32" pos:end="165:39">get_be32</name><argument_list pos:start="165:40" pos:end="165:43">(<argument pos:start="165:41" pos:end="165:42"><expr pos:start="165:41" pos:end="165:42"><name pos:start="165:41" pos:end="165:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:47"><expr pos:start="167:13" pos:end="167:46"><name pos:start="167:13" pos:end="167:31"><name pos:start="167:13" pos:end="167:17">codec</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:31">thread_count</name></name> <operator pos:start="167:33" pos:end="167:33">=</operator> <call pos:start="167:35" pos:end="167:46"><name pos:start="167:35" pos:end="167:42">get_byte</name><argument_list pos:start="167:43" pos:end="167:46">(<argument pos:start="167:44" pos:end="167:45"><expr pos:start="167:44" pos:end="167:45"><name pos:start="167:44" pos:end="167:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:45"><expr pos:start="169:13" pos:end="169:44"><name pos:start="169:13" pos:end="169:29"><name pos:start="169:13" pos:end="169:17">codec</name><operator pos:start="169:18" pos:end="169:19">-&gt;</operator><name pos:start="169:20" pos:end="169:29">coder_type</name></name> <operator pos:start="169:31" pos:end="169:31">=</operator> <call pos:start="169:33" pos:end="169:44"><name pos:start="169:33" pos:end="169:40">get_be32</name><argument_list pos:start="169:41" pos:end="169:44">(<argument pos:start="169:42" pos:end="169:43"><expr pos:start="169:42" pos:end="169:43"><name pos:start="169:42" pos:end="169:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:41"><expr pos:start="171:13" pos:end="171:40"><name pos:start="171:13" pos:end="171:25"><name pos:start="171:13" pos:end="171:17">codec</name><operator pos:start="171:18" pos:end="171:19">-&gt;</operator><name pos:start="171:20" pos:end="171:25">me_cmp</name></name> <operator pos:start="171:27" pos:end="171:27">=</operator> <call pos:start="171:29" pos:end="171:40"><name pos:start="171:29" pos:end="171:36">get_be32</name><argument_list pos:start="171:37" pos:end="171:40">(<argument pos:start="171:38" pos:end="171:39"><expr pos:start="171:38" pos:end="171:39"><name pos:start="171:38" pos:end="171:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:45"><expr pos:start="173:13" pos:end="173:44"><name pos:start="173:13" pos:end="173:29"><name pos:start="173:13" pos:end="173:17">codec</name><operator pos:start="173:18" pos:end="173:19">-&gt;</operator><name pos:start="173:20" pos:end="173:29">partitions</name></name> <operator pos:start="173:31" pos:end="173:31">=</operator> <call pos:start="173:33" pos:end="173:44"><name pos:start="173:33" pos:end="173:40">get_be32</name><argument_list pos:start="173:41" pos:end="173:44">(<argument pos:start="173:42" pos:end="173:43"><expr pos:start="173:42" pos:end="173:43"><name pos:start="173:42" pos:end="173:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:52"><expr pos:start="175:13" pos:end="175:51"><name pos:start="175:13" pos:end="175:36"><name pos:start="175:13" pos:end="175:17">codec</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:36">me_subpel_quality</name></name> <operator pos:start="175:38" pos:end="175:38">=</operator> <call pos:start="175:40" pos:end="175:51"><name pos:start="175:40" pos:end="175:47">get_be32</name><argument_list pos:start="175:48" pos:end="175:51">(<argument pos:start="175:49" pos:end="175:50"><expr pos:start="175:49" pos:end="175:50"><name pos:start="175:49" pos:end="175:50">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:43"><expr pos:start="177:13" pos:end="177:42"><name pos:start="177:13" pos:end="177:27"><name pos:start="177:13" pos:end="177:17">codec</name><operator pos:start="177:18" pos:end="177:19">-&gt;</operator><name pos:start="177:20" pos:end="177:27">me_range</name></name> <operator pos:start="177:29" pos:end="177:29">=</operator> <call pos:start="177:31" pos:end="177:42"><name pos:start="177:31" pos:end="177:38">get_be32</name><argument_list pos:start="177:39" pos:end="177:42">(<argument pos:start="177:40" pos:end="177:41"><expr pos:start="177:40" pos:end="177:41"><name pos:start="177:40" pos:end="177:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:45"><expr pos:start="179:13" pos:end="179:44"><name pos:start="179:13" pos:end="179:29"><name pos:start="179:13" pos:end="179:17">codec</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:29">keyint_min</name></name> <operator pos:start="179:31" pos:end="179:31">=</operator> <call pos:start="179:33" pos:end="179:44"><name pos:start="179:33" pos:end="179:40">get_be32</name><argument_list pos:start="179:41" pos:end="179:44">(<argument pos:start="179:42" pos:end="179:43"><expr pos:start="179:42" pos:end="179:43"><name pos:start="179:42" pos:end="179:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:56"><expr pos:start="181:13" pos:end="181:55"><name pos:start="181:13" pos:end="181:40"><name pos:start="181:13" pos:end="181:17">codec</name><operator pos:start="181:18" pos:end="181:19">-&gt;</operator><name pos:start="181:20" pos:end="181:40">scenechange_threshold</name></name> <operator pos:start="181:42" pos:end="181:42">=</operator> <call pos:start="181:44" pos:end="181:55"><name pos:start="181:44" pos:end="181:51">get_be32</name><argument_list pos:start="181:52" pos:end="181:55">(<argument pos:start="181:53" pos:end="181:54"><expr pos:start="181:53" pos:end="181:54"><name pos:start="181:53" pos:end="181:54">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:51"><expr pos:start="183:13" pos:end="183:50"><name pos:start="183:13" pos:end="183:35"><name pos:start="183:13" pos:end="183:17">codec</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:35">b_frame_strategy</name></name> <operator pos:start="183:37" pos:end="183:37">=</operator> <call pos:start="183:39" pos:end="183:50"><name pos:start="183:39" pos:end="183:46">get_be32</name><argument_list pos:start="183:47" pos:end="183:50">(<argument pos:start="183:48" pos:end="183:49"><expr pos:start="183:48" pos:end="183:49"><name pos:start="183:48" pos:end="183:49">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:56"><expr pos:start="185:13" pos:end="185:55"><name pos:start="185:13" pos:end="185:28"><name pos:start="185:13" pos:end="185:17">codec</name><operator pos:start="185:18" pos:end="185:19">-&gt;</operator><name pos:start="185:20" pos:end="185:28">qcompress</name></name> <operator pos:start="185:30" pos:end="185:30">=</operator> <call pos:start="185:32" pos:end="185:55"><name pos:start="185:32" pos:end="185:41">av_int2dbl</name><argument_list pos:start="185:42" pos:end="185:55">(<argument pos:start="185:43" pos:end="185:54"><expr pos:start="185:43" pos:end="185:54"><call pos:start="185:43" pos:end="185:54"><name pos:start="185:43" pos:end="185:50">get_be64</name><argument_list pos:start="185:51" pos:end="185:54">(<argument pos:start="185:52" pos:end="185:53"><expr pos:start="185:52" pos:end="185:53"><name pos:start="185:52" pos:end="185:53">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:52"><expr pos:start="187:13" pos:end="187:51"><name pos:start="187:13" pos:end="187:24"><name pos:start="187:13" pos:end="187:17">codec</name><operator pos:start="187:18" pos:end="187:19">-&gt;</operator><name pos:start="187:20" pos:end="187:24">qblur</name></name> <operator pos:start="187:26" pos:end="187:26">=</operator> <call pos:start="187:28" pos:end="187:51"><name pos:start="187:28" pos:end="187:37">av_int2dbl</name><argument_list pos:start="187:38" pos:end="187:51">(<argument pos:start="187:39" pos:end="187:50"><expr pos:start="187:39" pos:end="187:50"><call pos:start="187:39" pos:end="187:50"><name pos:start="187:39" pos:end="187:46">get_be64</name><argument_list pos:start="187:47" pos:end="187:50">(<argument pos:start="187:48" pos:end="187:49"><expr pos:start="187:48" pos:end="187:49"><name pos:start="187:48" pos:end="187:49">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:44"><expr pos:start="189:13" pos:end="189:43"><name pos:start="189:13" pos:end="189:28"><name pos:start="189:13" pos:end="189:17">codec</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:28">max_qdiff</name></name> <operator pos:start="189:30" pos:end="189:30">=</operator> <call pos:start="189:32" pos:end="189:43"><name pos:start="189:32" pos:end="189:39">get_be32</name><argument_list pos:start="189:40" pos:end="189:43">(<argument pos:start="189:41" pos:end="189:42"><expr pos:start="189:41" pos:end="189:42"><name pos:start="189:41" pos:end="189:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:39"><expr pos:start="191:13" pos:end="191:38"><name pos:start="191:13" pos:end="191:23"><name pos:start="191:13" pos:end="191:17">codec</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:23">refs</name></name> <operator pos:start="191:25" pos:end="191:25">=</operator> <call pos:start="191:27" pos:end="191:38"><name pos:start="191:27" pos:end="191:34">get_be32</name><argument_list pos:start="191:35" pos:end="191:38">(<argument pos:start="191:36" pos:end="191:37"><expr pos:start="191:36" pos:end="191:37"><name pos:start="191:36" pos:end="191:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:45"><expr pos:start="193:13" pos:end="193:44"><name pos:start="193:13" pos:end="193:29"><name pos:start="193:13" pos:end="193:17">codec</name><operator pos:start="193:18" pos:end="193:19">-&gt;</operator><name pos:start="193:20" pos:end="193:29">directpred</name></name> <operator pos:start="193:31" pos:end="193:31">=</operator> <call pos:start="193:33" pos:end="193:44"><name pos:start="193:33" pos:end="193:40">get_be32</name><argument_list pos:start="193:41" pos:end="193:44">(<argument pos:start="193:42" pos:end="193:43"><expr pos:start="193:42" pos:end="193:43"><name pos:start="193:42" pos:end="193:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        <case pos:start="197:9" pos:end="197:30">case <expr pos:start="197:14" pos:end="197:29"><name pos:start="197:14" pos:end="197:29">CODEC_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="199:13" pos:end="199:46"><expr pos:start="199:13" pos:end="199:45"><name pos:start="199:13" pos:end="199:30"><name pos:start="199:13" pos:end="199:17">codec</name><operator pos:start="199:18" pos:end="199:19">-&gt;</operator><name pos:start="199:20" pos:end="199:30">sample_rate</name></name> <operator pos:start="199:32" pos:end="199:32">=</operator> <call pos:start="199:34" pos:end="199:45"><name pos:start="199:34" pos:end="199:41">get_be32</name><argument_list pos:start="199:42" pos:end="199:45">(<argument pos:start="199:43" pos:end="199:44"><expr pos:start="199:43" pos:end="199:44"><name pos:start="199:43" pos:end="199:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:43"><expr pos:start="201:13" pos:end="201:42"><name pos:start="201:13" pos:end="201:27"><name pos:start="201:13" pos:end="201:17">codec</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:27">channels</name></name> <operator pos:start="201:29" pos:end="201:29">=</operator> <call pos:start="201:31" pos:end="201:42"><name pos:start="201:31" pos:end="201:38">get_le16</name><argument_list pos:start="201:39" pos:end="201:42">(<argument pos:start="201:40" pos:end="201:41"><expr pos:start="201:40" pos:end="201:41"><name pos:start="201:40" pos:end="201:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:45"><expr pos:start="203:13" pos:end="203:44"><name pos:start="203:13" pos:end="203:29"><name pos:start="203:13" pos:end="203:17">codec</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:29">frame_size</name></name> <operator pos:start="203:31" pos:end="203:31">=</operator> <call pos:start="203:33" pos:end="203:44"><name pos:start="203:33" pos:end="203:40">get_le16</name><argument_list pos:start="203:41" pos:end="203:44">(<argument pos:start="203:42" pos:end="203:43"><expr pos:start="203:42" pos:end="203:43"><name pos:start="203:42" pos:end="203:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:45"><expr pos:start="205:13" pos:end="205:44"><name pos:start="205:13" pos:end="205:29"><name pos:start="205:13" pos:end="205:17">codec</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:29">sample_fmt</name></name> <operator pos:start="205:31" pos:end="205:31">=</operator> <call pos:start="205:33" pos:end="205:44"><name pos:start="205:33" pos:end="205:40">get_le16</name><argument_list pos:start="205:41" pos:end="205:44">(<argument pos:start="205:42" pos:end="205:43"><expr pos:start="205:42" pos:end="205:43"><name pos:start="205:42" pos:end="205:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="207:13" pos:end="207:18">break;</break>

        <default pos:start="209:9" pos:end="209:16">default:</default>

            <goto pos:start="211:13" pos:end="211:22">goto <name pos:start="211:18" pos:end="211:21">fail</name>;</goto>

        </block_content>}</block></switch>

        <if_stmt pos:start="215:9" pos:end="227:9"><if pos:start="215:9" pos:end="227:9">if <condition pos:start="215:12" pos:end="215:52">(<expr pos:start="215:13" pos:end="215:51"><name pos:start="215:13" pos:end="215:24"><name pos:start="215:13" pos:end="215:17">codec</name><operator pos:start="215:18" pos:end="215:19">-&gt;</operator><name pos:start="215:20" pos:end="215:24">flags</name></name> <operator pos:start="215:26" pos:end="215:26">&amp;</operator> <name pos:start="215:28" pos:end="215:51">CODEC_FLAG_GLOBAL_HEADER</name></expr>)</condition> <block pos:start="215:54" pos:end="227:9">{<block_content pos:start="217:13" pos:end="225:68">

            <expr_stmt pos:start="217:13" pos:end="217:49"><expr pos:start="217:13" pos:end="217:48"><name pos:start="217:13" pos:end="217:33"><name pos:start="217:13" pos:end="217:17">codec</name><operator pos:start="217:18" pos:end="217:19">-&gt;</operator><name pos:start="217:20" pos:end="217:33">extradata_size</name></name> <operator pos:start="217:35" pos:end="217:35">=</operator> <call pos:start="217:37" pos:end="217:48"><name pos:start="217:37" pos:end="217:44">get_be32</name><argument_list pos:start="217:45" pos:end="217:48">(<argument pos:start="217:46" pos:end="217:47"><expr pos:start="217:46" pos:end="217:47"><name pos:start="217:46" pos:end="217:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:64"><expr pos:start="219:13" pos:end="219:63"><name pos:start="219:13" pos:end="219:28"><name pos:start="219:13" pos:end="219:17">codec</name><operator pos:start="219:18" pos:end="219:19">-&gt;</operator><name pos:start="219:20" pos:end="219:28">extradata</name></name> <operator pos:start="219:30" pos:end="219:30">=</operator> <call pos:start="219:32" pos:end="219:63"><name pos:start="219:32" pos:end="219:40">av_malloc</name><argument_list pos:start="219:41" pos:end="219:63">(<argument pos:start="219:42" pos:end="219:62"><expr pos:start="219:42" pos:end="219:62"><name pos:start="219:42" pos:end="219:62"><name pos:start="219:42" pos:end="219:46">codec</name><operator pos:start="219:47" pos:end="219:48">-&gt;</operator><name pos:start="219:49" pos:end="219:62">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="221:13" pos:end="223:39"><if pos:start="221:13" pos:end="223:39">if <condition pos:start="221:16" pos:end="221:34">(<expr pos:start="221:17" pos:end="221:33"><operator pos:start="221:17" pos:end="221:17">!</operator><name pos:start="221:18" pos:end="221:33"><name pos:start="221:18" pos:end="221:22">codec</name><operator pos:start="221:23" pos:end="221:24">-&gt;</operator><name pos:start="221:25" pos:end="221:33">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="223:17" pos:end="223:39"><block_content pos:start="223:17" pos:end="223:39">

                <return pos:start="223:17" pos:end="223:39">return <expr pos:start="223:24" pos:end="223:38"><call pos:start="223:24" pos:end="223:38"><name pos:start="223:24" pos:end="223:30">AVERROR</name><argument_list pos:start="223:31" pos:end="223:38">(<argument pos:start="223:32" pos:end="223:37"><expr pos:start="223:32" pos:end="223:37"><name pos:start="223:32" pos:end="223:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:68"><expr pos:start="225:13" pos:end="225:67"><call pos:start="225:13" pos:end="225:67"><name pos:start="225:13" pos:end="225:22">get_buffer</name><argument_list pos:start="225:23" pos:end="225:67">(<argument pos:start="225:24" pos:end="225:25"><expr pos:start="225:24" pos:end="225:25"><name pos:start="225:24" pos:end="225:25">pb</name></expr></argument>, <argument pos:start="225:28" pos:end="225:43"><expr pos:start="225:28" pos:end="225:43"><name pos:start="225:28" pos:end="225:43"><name pos:start="225:28" pos:end="225:32">codec</name><operator pos:start="225:33" pos:end="225:34">-&gt;</operator><name pos:start="225:35" pos:end="225:43">extradata</name></name></expr></argument>, <argument pos:start="225:46" pos:end="225:66"><expr pos:start="225:46" pos:end="225:66"><name pos:start="225:46" pos:end="225:66"><name pos:start="225:46" pos:end="225:50">codec</name><operator pos:start="225:51" pos:end="225:52">-&gt;</operator><name pos:start="225:53" pos:end="225:66">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="233:5" pos:end="233:40">/* get until end of block reached */</comment>

    <while pos:start="235:5" pos:end="237:21">while <condition pos:start="235:11" pos:end="235:51">(<expr pos:start="235:12" pos:end="235:50"><operator pos:start="235:12" pos:end="235:12">(</operator><call pos:start="235:13" pos:end="235:25"><name pos:start="235:13" pos:end="235:21">url_ftell</name><argument_list pos:start="235:22" pos:end="235:25">(<argument pos:start="235:23" pos:end="235:24"><expr pos:start="235:23" pos:end="235:24"><name pos:start="235:23" pos:end="235:24">pb</name></expr></argument>)</argument_list></call> <operator pos:start="235:27" pos:end="235:27">%</operator> <name pos:start="235:29" pos:end="235:44"><name pos:start="235:29" pos:end="235:31">ffm</name><operator pos:start="235:32" pos:end="235:33">-&gt;</operator><name pos:start="235:34" pos:end="235:44">packet_size</name></name><operator pos:start="235:45" pos:end="235:45">)</operator> <operator pos:start="235:47" pos:end="235:48">!=</operator> <literal type="number" pos:start="235:50" pos:end="235:50">0</literal></expr>)</condition><block type="pseudo" pos:start="237:9" pos:end="237:21"><block_content pos:start="237:9" pos:end="237:21">

        <expr_stmt pos:start="237:9" pos:end="237:21"><expr pos:start="237:9" pos:end="237:20"><call pos:start="237:9" pos:end="237:20"><name pos:start="237:9" pos:end="237:16">get_byte</name><argument_list pos:start="237:17" pos:end="237:20">(<argument pos:start="237:18" pos:end="237:19"><expr pos:start="237:18" pos:end="237:19"><name pos:start="237:18" pos:end="237:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <comment type="block" pos:start="241:5" pos:end="241:27">/* init packet demux */</comment>

    <expr_stmt pos:start="243:5" pos:end="243:34"><expr pos:start="243:5" pos:end="243:33"><name pos:start="243:5" pos:end="243:19"><name pos:start="243:5" pos:end="243:7">ffm</name><operator pos:start="243:8" pos:end="243:9">-&gt;</operator><name pos:start="243:10" pos:end="243:19">packet_ptr</name></name> <operator pos:start="243:21" pos:end="243:21">=</operator> <name pos:start="243:23" pos:end="243:33"><name pos:start="243:23" pos:end="243:25">ffm</name><operator pos:start="243:26" pos:end="243:27">-&gt;</operator><name pos:start="243:28" pos:end="243:33">packet</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:34"><expr pos:start="245:5" pos:end="245:33"><name pos:start="245:5" pos:end="245:19"><name pos:start="245:5" pos:end="245:7">ffm</name><operator pos:start="245:8" pos:end="245:9">-&gt;</operator><name pos:start="245:10" pos:end="245:19">packet_end</name></name> <operator pos:start="245:21" pos:end="245:21">=</operator> <name pos:start="245:23" pos:end="245:33"><name pos:start="245:23" pos:end="245:25">ffm</name><operator pos:start="245:26" pos:end="245:27">-&gt;</operator><name pos:start="245:28" pos:end="245:33">packet</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:26"><expr pos:start="247:5" pos:end="247:25"><name pos:start="247:5" pos:end="247:21"><name pos:start="247:5" pos:end="247:7">ffm</name><operator pos:start="247:8" pos:end="247:9">-&gt;</operator><name pos:start="247:10" pos:end="247:21">frame_offset</name></name> <operator pos:start="247:23" pos:end="247:23">=</operator> <literal type="number" pos:start="247:25" pos:end="247:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:17"><expr pos:start="249:5" pos:end="249:16"><name pos:start="249:5" pos:end="249:12"><name pos:start="249:5" pos:end="249:7">ffm</name><operator pos:start="249:8" pos:end="249:9">-&gt;</operator><name pos:start="249:10" pos:end="249:12">dts</name></name> <operator pos:start="249:14" pos:end="249:14">=</operator> <literal type="number" pos:start="249:16" pos:end="249:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:34"><expr pos:start="251:5" pos:end="251:33"><name pos:start="251:5" pos:end="251:19"><name pos:start="251:5" pos:end="251:7">ffm</name><operator pos:start="251:8" pos:end="251:9">-&gt;</operator><name pos:start="251:10" pos:end="251:19">read_state</name></name> <operator pos:start="251:21" pos:end="251:21">=</operator> <name pos:start="251:23" pos:end="251:33">READ_HEADER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:26"><expr pos:start="253:5" pos:end="253:25"><name pos:start="253:5" pos:end="253:21"><name pos:start="253:5" pos:end="253:7">ffm</name><operator pos:start="253:8" pos:end="253:9">-&gt;</operator><name pos:start="253:10" pos:end="253:21">first_packet</name></name> <operator pos:start="253:23" pos:end="253:23">=</operator> <literal type="number" pos:start="253:25" pos:end="253:25">1</literal></expr>;</expr_stmt>

    <return pos:start="255:5" pos:end="255:13">return <expr pos:start="255:12" pos:end="255:12"><literal type="number" pos:start="255:12" pos:end="255:12">0</literal></expr>;</return>

 <label pos:start="257:2" pos:end="257:6"><name pos:start="257:2" pos:end="257:5">fail</name>:</label>

    <for pos:start="259:5" pos:end="269:5">for<control pos:start="259:8" pos:end="259:32">(<init pos:start="259:9" pos:end="259:12"><expr pos:start="259:9" pos:end="259:11"><name pos:start="259:9" pos:end="259:9">i</name><operator pos:start="259:10" pos:end="259:10">=</operator><literal type="number" pos:start="259:11" pos:end="259:11">0</literal></expr>;</init><condition pos:start="259:13" pos:end="259:28"><expr pos:start="259:13" pos:end="259:27"><name pos:start="259:13" pos:end="259:13">i</name><operator pos:start="259:14" pos:end="259:14">&lt;</operator><name pos:start="259:15" pos:end="259:27"><name pos:start="259:15" pos:end="259:15">s</name><operator pos:start="259:16" pos:end="259:17">-&gt;</operator><name pos:start="259:18" pos:end="259:27">nb_streams</name></name></expr>;</condition><incr pos:start="259:29" pos:end="259:31"><expr pos:start="259:29" pos:end="259:31"><name pos:start="259:29" pos:end="259:29">i</name><operator pos:start="259:30" pos:end="259:31">++</operator></expr></incr>)</control> <block pos:start="259:34" pos:end="269:5">{<block_content pos:start="261:9" pos:end="267:9">

        <expr_stmt pos:start="261:9" pos:end="261:27"><expr pos:start="261:9" pos:end="261:26"><name pos:start="261:9" pos:end="261:10">st</name> <operator pos:start="261:12" pos:end="261:12">=</operator> <name pos:start="261:14" pos:end="261:26"><name pos:start="261:14" pos:end="261:14">s</name><operator pos:start="261:15" pos:end="261:16">-&gt;</operator><name pos:start="261:17" pos:end="261:23">streams</name><index pos:start="261:24" pos:end="261:26">[<expr pos:start="261:25" pos:end="261:25"><name pos:start="261:25" pos:end="261:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="263:9" pos:end="267:9"><if pos:start="263:9" pos:end="267:9">if <condition pos:start="263:12" pos:end="263:15">(<expr pos:start="263:13" pos:end="263:14"><name pos:start="263:13" pos:end="263:14">st</name></expr>)</condition> <block pos:start="263:17" pos:end="267:9">{<block_content pos:start="265:13" pos:end="265:24">

            <expr_stmt pos:start="265:13" pos:end="265:24"><expr pos:start="265:13" pos:end="265:23"><call pos:start="265:13" pos:end="265:23"><name pos:start="265:13" pos:end="265:19">av_free</name><argument_list pos:start="265:20" pos:end="265:23">(<argument pos:start="265:21" pos:end="265:22"><expr pos:start="265:21" pos:end="265:22"><name pos:start="265:21" pos:end="265:22">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="271:5" pos:end="271:14">return <expr pos:start="271:12" pos:end="271:13"><operator pos:start="271:12" pos:end="271:12">-</operator><literal type="number" pos:start="271:13" pos:end="271:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
