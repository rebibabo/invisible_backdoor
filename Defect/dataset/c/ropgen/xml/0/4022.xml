<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4022.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:36">put_symbol_inline</name><parameter_list pos:start="1:37" pos:end="1:89">(<parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:47">RangeCoder</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">c</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:66"><decl pos:start="1:53" pos:end="1:66"><type pos:start="1:53" pos:end="1:66"><name pos:start="1:53" pos:end="1:59">uint8_t</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">state</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:73"><decl pos:start="1:69" pos:end="1:73"><type pos:start="1:69" pos:end="1:73"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:73">v</name></decl></parameter>, <parameter pos:start="1:76" pos:end="1:88"><decl pos:start="1:76" pos:end="1:88"><type pos:start="1:76" pos:end="1:88"><name pos:start="1:76" pos:end="1:78">int</name></type> <name pos:start="1:80" pos:end="1:88">is_signed</name></decl></parameter>)</parameter_list><block pos:start="1:90" pos:end="49:1">{<block_content pos:start="3:5" pos:end="47:5">

    <decl_stmt pos:start="3:5" pos:end="3:10"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="7:5" pos:end="47:5"><if pos:start="7:5" pos:end="43:5">if<condition pos:start="7:7" pos:end="7:9">(<expr pos:start="7:8" pos:end="7:8"><name pos:start="7:8" pos:end="7:8">v</name></expr>)</condition><block pos:start="7:10" pos:end="43:5">{<block_content pos:start="9:9" pos:end="41:44">

        <decl_stmt pos:start="9:9" pos:end="9:30"><decl pos:start="9:9" pos:end="9:29"><type pos:start="9:9" pos:end="9:17"><specifier pos:start="9:9" pos:end="9:13">const</specifier> <name pos:start="9:15" pos:end="9:17">int</name></type> <name pos:start="9:19" pos:end="9:19">a</name><init pos:start="9:20" pos:end="9:29">= <expr pos:start="9:22" pos:end="9:29"><call pos:start="9:22" pos:end="9:29"><name pos:start="9:22" pos:end="9:26">FFABS</name><argument_list pos:start="9:27" pos:end="9:29">(<argument pos:start="9:28" pos:end="9:28"><expr pos:start="9:28" pos:end="9:28"><name pos:start="9:28" pos:end="9:28">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:32"><decl pos:start="11:9" pos:end="11:31"><type pos:start="11:9" pos:end="11:17"><specifier pos:start="11:9" pos:end="11:13">const</specifier> <name pos:start="11:15" pos:end="11:17">int</name></type> <name pos:start="11:19" pos:end="11:19">e</name><init pos:start="11:20" pos:end="11:31">= <expr pos:start="11:22" pos:end="11:31"><call pos:start="11:22" pos:end="11:31"><name pos:start="11:22" pos:end="11:28">av_log2</name><argument_list pos:start="11:29" pos:end="11:31">(<argument pos:start="11:30" pos:end="11:30"><expr pos:start="11:30" pos:end="11:30"><name pos:start="11:30" pos:end="11:30">a</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:31"><expr pos:start="13:9" pos:end="13:30"><call pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:15">put_rac</name><argument_list pos:start="13:16" pos:end="13:30">(<argument pos:start="13:17" pos:end="13:17"><expr pos:start="13:17" pos:end="13:17"><name pos:start="13:17" pos:end="13:17">c</name></expr></argument>, <argument pos:start="13:20" pos:end="13:26"><expr pos:start="13:20" pos:end="13:26"><name pos:start="13:20" pos:end="13:24">state</name><operator pos:start="13:25" pos:end="13:25">+</operator><literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr></argument>, <argument pos:start="13:29" pos:end="13:29"><expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="17:9" pos:end="17:21"><expr pos:start="17:9" pos:end="17:20"><call pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:14">assert</name><argument_list pos:start="17:15" pos:end="17:20">(<argument pos:start="17:16" pos:end="17:19"><expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:16">e</name><operator pos:start="17:17" pos:end="17:18">&lt;=</operator><literal type="number" pos:start="17:19" pos:end="17:19">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="21:9" pos:end="25:9">for<control pos:start="21:12" pos:end="21:26">(<init pos:start="21:13" pos:end="21:16"><expr pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:13">i</name><operator pos:start="21:14" pos:end="21:14">=</operator><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>;</init> <condition pos:start="21:18" pos:end="21:21"><expr pos:start="21:18" pos:end="21:20"><name pos:start="21:18" pos:end="21:18">i</name><operator pos:start="21:19" pos:end="21:19">&lt;</operator><name pos:start="21:20" pos:end="21:20">e</name></expr>;</condition> <incr pos:start="21:23" pos:end="21:25"><expr pos:start="21:23" pos:end="21:25"><name pos:start="21:23" pos:end="21:23">i</name><operator pos:start="21:24" pos:end="21:25">++</operator></expr></incr>)</control><block pos:start="21:27" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:37">

            <expr_stmt pos:start="23:13" pos:end="23:37"><expr pos:start="23:13" pos:end="23:36"><call pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:19">put_rac</name><argument_list pos:start="23:20" pos:end="23:36">(<argument pos:start="23:21" pos:end="23:21"><expr pos:start="23:21" pos:end="23:21"><name pos:start="23:21" pos:end="23:21">c</name></expr></argument>, <argument pos:start="23:24" pos:end="23:32"><expr pos:start="23:24" pos:end="23:32"><name pos:start="23:24" pos:end="23:28">state</name><operator pos:start="23:29" pos:end="23:29">+</operator><literal type="number" pos:start="23:30" pos:end="23:31">1</literal><operator pos:start="23:31" pos:end="23:31">+</operator><name pos:start="23:32" pos:end="23:32">i</name></expr></argument>, <argument pos:start="23:35" pos:end="23:35"><expr pos:start="23:35" pos:end="23:35"><literal type="number" pos:start="23:35" pos:end="23:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="23:40" pos:end="23:46">//1..10</comment>

        </block_content>}</block></for>

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><call pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:15">put_rac</name><argument_list pos:start="27:16" pos:end="27:32">(<argument pos:start="27:17" pos:end="27:17"><expr pos:start="27:17" pos:end="27:17"><name pos:start="27:17" pos:end="27:17">c</name></expr></argument>, <argument pos:start="27:20" pos:end="27:28"><expr pos:start="27:20" pos:end="27:28"><name pos:start="27:20" pos:end="27:24">state</name><operator pos:start="27:25" pos:end="27:25">+</operator><literal type="number" pos:start="27:26" pos:end="27:27">1</literal><operator pos:start="27:27" pos:end="27:27">+</operator><name pos:start="27:28" pos:end="27:28">i</name></expr></argument>, <argument pos:start="27:31" pos:end="27:31"><expr pos:start="27:31" pos:end="27:31"><literal type="number" pos:start="27:31" pos:end="27:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="31:9" pos:end="35:9">for<control pos:start="31:12" pos:end="31:29">(<init pos:start="31:13" pos:end="31:18"><expr pos:start="31:13" pos:end="31:17"><name pos:start="31:13" pos:end="31:13">i</name><operator pos:start="31:14" pos:end="31:14">=</operator><name pos:start="31:15" pos:end="31:15">e</name><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</init> <condition pos:start="31:20" pos:end="31:24"><expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:20">i</name><operator pos:start="31:21" pos:end="31:22">&gt;=</operator><literal type="number" pos:start="31:23" pos:end="31:23">0</literal></expr>;</condition> <incr pos:start="31:26" pos:end="31:28"><expr pos:start="31:26" pos:end="31:28"><name pos:start="31:26" pos:end="31:26">i</name><operator pos:start="31:27" pos:end="31:28">--</operator></expr></incr>)</control><block pos:start="31:30" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:45">

            <expr_stmt pos:start="33:13" pos:end="33:45"><expr pos:start="33:13" pos:end="33:44"><call pos:start="33:13" pos:end="33:44"><name pos:start="33:13" pos:end="33:19">put_rac</name><argument_list pos:start="33:20" pos:end="33:44">(<argument pos:start="33:21" pos:end="33:21"><expr pos:start="33:21" pos:end="33:21"><name pos:start="33:21" pos:end="33:21">c</name></expr></argument>, <argument pos:start="33:24" pos:end="33:33"><expr pos:start="33:24" pos:end="33:33"><name pos:start="33:24" pos:end="33:28">state</name><operator pos:start="33:29" pos:end="33:29">+</operator><literal type="number" pos:start="33:30" pos:end="33:32">22</literal><operator pos:start="33:32" pos:end="33:32">+</operator><name pos:start="33:33" pos:end="33:33">i</name></expr></argument>, <argument pos:start="33:36" pos:end="33:43"><expr pos:start="33:36" pos:end="33:43"><operator pos:start="33:36" pos:end="33:36">(</operator><name pos:start="33:37" pos:end="33:37">a</name><operator pos:start="33:38" pos:end="33:39">&gt;&gt;</operator><name pos:start="33:40" pos:end="33:40">i</name><operator pos:start="33:41" pos:end="33:41">)</operator><operator pos:start="33:42" pos:end="33:42">&amp;</operator><literal type="number" pos:start="33:43" pos:end="33:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="33:47" pos:end="33:54">//22..31</comment>

        </block_content>}</block></for>



        <if_stmt pos:start="39:9" pos:end="41:44"><if pos:start="39:9" pos:end="41:44">if<condition pos:start="39:11" pos:end="39:21">(<expr pos:start="39:12" pos:end="39:20"><name pos:start="39:12" pos:end="39:20">is_signed</name></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:44"><block_content pos:start="41:13" pos:end="41:44">

            <expr_stmt pos:start="41:13" pos:end="41:44"><expr pos:start="41:13" pos:end="41:43"><call pos:start="41:13" pos:end="41:43"><name pos:start="41:13" pos:end="41:19">put_rac</name><argument_list pos:start="41:20" pos:end="41:43">(<argument pos:start="41:21" pos:end="41:21"><expr pos:start="41:21" pos:end="41:21"><name pos:start="41:21" pos:end="41:21">c</name></expr></argument>, <argument pos:start="41:24" pos:end="41:35"><expr pos:start="41:24" pos:end="41:35"><name pos:start="41:24" pos:end="41:28">state</name><operator pos:start="41:29" pos:end="41:29">+</operator><literal type="number" pos:start="41:30" pos:end="41:33">11</literal> <operator pos:start="41:33" pos:end="41:33">+</operator> <name pos:start="41:35" pos:end="41:35">e</name></expr></argument>, <argument pos:start="41:38" pos:end="41:42"><expr pos:start="41:38" pos:end="41:42"><name pos:start="41:38" pos:end="41:38">v</name> <operator pos:start="41:40" pos:end="41:40">&lt;</operator> <literal type="number" pos:start="41:42" pos:end="41:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="41:46" pos:end="41:53">//11..21</comment>

    </block_content>}</block></if><else pos:start="43:6" pos:end="47:5">else<block pos:start="43:10" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:31">

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><call pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:15">put_rac</name><argument_list pos:start="45:16" pos:end="45:30">(<argument pos:start="45:17" pos:end="45:17"><expr pos:start="45:17" pos:end="45:17"><name pos:start="45:17" pos:end="45:17">c</name></expr></argument>, <argument pos:start="45:20" pos:end="45:26"><expr pos:start="45:20" pos:end="45:26"><name pos:start="45:20" pos:end="45:24">state</name><operator pos:start="45:25" pos:end="45:25">+</operator><literal type="number" pos:start="45:26" pos:end="45:26">0</literal></expr></argument>, <argument pos:start="45:29" pos:end="45:29"><expr pos:start="45:29" pos:end="45:29"><literal type="number" pos:start="45:29" pos:end="45:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
