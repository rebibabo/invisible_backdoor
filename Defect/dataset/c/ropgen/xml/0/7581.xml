<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7581.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">decode_exponents</name><parameter_list pos:start="1:28" pos:end="3:58">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:41">GetBitContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">gbc</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:64">exp_strategy</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:75"><decl pos:start="1:67" pos:end="1:75"><type pos:start="1:67" pos:end="1:75"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:75">ngrps</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:35">uint8_t</name></type> <name pos:start="3:37" pos:end="3:42">absexp</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:57"><decl pos:start="3:45" pos:end="3:57"><type pos:start="3:45" pos:end="3:57"><name pos:start="3:45" pos:end="3:50">int8_t</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:57">dexps</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:13">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:17">grp</name></decl>, <decl pos:start="7:20" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:29">group_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:12">dexp</name><index pos:start="9:13" pos:end="9:17">[<expr pos:start="9:14" pos:end="9:16"><literal type="number" pos:start="9:14" pos:end="9:16">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">expacc</name></decl>, <decl pos:start="11:17" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:23">prevexp</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:23">/* unpack groups */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:58"><expr pos:start="17:5" pos:end="17:57"><name pos:start="17:5" pos:end="17:14">group_size</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:29">exp_strategy</name> <operator pos:start="17:31" pos:end="17:31">+</operator> <operator pos:start="17:33" pos:end="17:33">(</operator><name pos:start="17:34" pos:end="17:45">exp_strategy</name> <operator pos:start="17:47" pos:end="17:48">==</operator> <name pos:start="17:50" pos:end="17:56">EXP_D45</name><operator pos:start="17:57" pos:end="17:57">)</operator></expr>;</expr_stmt>

    <for pos:start="19:5" pos:end="29:5">for<control pos:start="19:8" pos:end="19:36">(<init pos:start="19:9" pos:end="19:18"><expr pos:start="19:9" pos:end="19:13"><name pos:start="19:9" pos:end="19:11">grp</name><operator pos:start="19:12" pos:end="19:12">=</operator><literal type="number" pos:start="19:13" pos:end="19:13">0</literal></expr><operator pos:start="19:14" pos:end="19:14">,</operator><expr pos:start="19:15" pos:end="19:17"><name pos:start="19:15" pos:end="19:15">i</name><operator pos:start="19:16" pos:end="19:16">=</operator><literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr>;</init> <condition pos:start="19:20" pos:end="19:29"><expr pos:start="19:20" pos:end="19:28"><name pos:start="19:20" pos:end="19:22">grp</name><operator pos:start="19:23" pos:end="19:23">&lt;</operator><name pos:start="19:24" pos:end="19:28">ngrps</name></expr>;</condition> <incr pos:start="19:31" pos:end="19:35"><expr pos:start="19:31" pos:end="19:35"><name pos:start="19:31" pos:end="19:33">grp</name><operator pos:start="19:34" pos:end="19:35">++</operator></expr></incr>)</control> <block pos:start="19:38" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:55">

        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:14">expacc</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:33"><name pos:start="21:18" pos:end="21:25">get_bits</name><argument_list pos:start="21:26" pos:end="21:33">(<argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">gbc</name></expr></argument>, <argument pos:start="21:32" pos:end="21:32"><expr pos:start="21:32" pos:end="21:32"><literal type="number" pos:start="21:32" pos:end="21:32">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:55"><expr pos:start="23:9" pos:end="23:54"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:12">dexp</name><index pos:start="23:13" pos:end="23:17">[<expr pos:start="23:14" pos:end="23:16"><name pos:start="23:14" pos:end="23:14">i</name><operator pos:start="23:15" pos:end="23:16">++</operator></expr>]</index></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:54"><name pos:start="23:21" pos:end="23:43">ungroup_3_in_7_bits_tab</name><index pos:start="23:44" pos:end="23:51">[<expr pos:start="23:45" pos:end="23:50"><name pos:start="23:45" pos:end="23:50">expacc</name></expr>]</index><index pos:start="23:52" pos:end="23:54">[<expr pos:start="23:53" pos:end="23:53"><literal type="number" pos:start="23:53" pos:end="23:53">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:55"><expr pos:start="25:9" pos:end="25:54"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:12">dexp</name><index pos:start="25:13" pos:end="25:17">[<expr pos:start="25:14" pos:end="25:16"><name pos:start="25:14" pos:end="25:14">i</name><operator pos:start="25:15" pos:end="25:16">++</operator></expr>]</index></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:54"><name pos:start="25:21" pos:end="25:43">ungroup_3_in_7_bits_tab</name><index pos:start="25:44" pos:end="25:51">[<expr pos:start="25:45" pos:end="25:50"><name pos:start="25:45" pos:end="25:50">expacc</name></expr>]</index><index pos:start="25:52" pos:end="25:54">[<expr pos:start="25:53" pos:end="25:53"><literal type="number" pos:start="25:53" pos:end="25:53">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:55"><expr pos:start="27:9" pos:end="27:54"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:12">dexp</name><index pos:start="27:13" pos:end="27:17">[<expr pos:start="27:14" pos:end="27:16"><name pos:start="27:14" pos:end="27:14">i</name><operator pos:start="27:15" pos:end="27:16">++</operator></expr>]</index></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:54"><name pos:start="27:21" pos:end="27:43">ungroup_3_in_7_bits_tab</name><index pos:start="27:44" pos:end="27:51">[<expr pos:start="27:45" pos:end="27:50"><name pos:start="27:45" pos:end="27:50">expacc</name></expr>]</index><index pos:start="27:52" pos:end="27:54">[<expr pos:start="27:53" pos:end="27:53"><literal type="number" pos:start="27:53" pos:end="27:53">2</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="33:5" pos:end="33:52">/* convert to absolute exps and expand groups */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:21"><expr pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:11">prevexp</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:20">absexp</name></expr>;</expr_stmt>

    <for pos:start="37:5" pos:end="57:5">for<control pos:start="37:8" pos:end="37:32">(<init pos:start="37:9" pos:end="37:16"><expr pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:9">i</name><operator pos:start="37:10" pos:end="37:10">=</operator><literal type="number" pos:start="37:11" pos:end="37:11">0</literal></expr><operator pos:start="37:12" pos:end="37:12">,</operator><expr pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:13">j</name><operator pos:start="37:14" pos:end="37:14">=</operator><literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>;</init> <condition pos:start="37:18" pos:end="37:27"><expr pos:start="37:18" pos:end="37:26"><name pos:start="37:18" pos:end="37:18">i</name><operator pos:start="37:19" pos:end="37:19">&lt;</operator><name pos:start="37:20" pos:end="37:24">ngrps</name><operator pos:start="37:25" pos:end="37:25">*</operator><literal type="number" pos:start="37:26" pos:end="37:26">3</literal></expr>;</condition> <incr pos:start="37:29" pos:end="37:31"><expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:29">i</name><operator pos:start="37:30" pos:end="37:31">++</operator></expr></incr>)</control> <block pos:start="37:34" pos:end="57:5">{<block_content pos:start="39:9" pos:end="55:9">

        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:15">prevexp</name> <operator pos:start="39:17" pos:end="39:18">+=</operator> <name pos:start="39:20" pos:end="39:26"><name pos:start="39:20" pos:end="39:23">dexp</name><index pos:start="39:24" pos:end="39:26">[<expr pos:start="39:25" pos:end="39:25"><name pos:start="39:25" pos:end="39:25">i</name></expr>]</index></name> <operator pos:start="39:28" pos:end="39:28">-</operator> <literal type="number" pos:start="39:30" pos:end="39:30">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="43:22"><if pos:start="41:9" pos:end="43:22">if <condition pos:start="41:12" pos:end="41:40">(<expr pos:start="41:13" pos:end="41:39"><name pos:start="41:13" pos:end="41:36"><name pos:start="41:13" pos:end="41:19">prevexp</name> <argument_list type="generic" pos:start="41:21" pos:end="41:36">&lt; <argument pos:start="41:23" pos:end="41:34"><expr pos:start="41:23" pos:end="41:34"><literal type="number" pos:start="41:23" pos:end="41:23">0</literal> <operator pos:start="41:25" pos:end="41:26">||</operator> <name pos:start="41:28" pos:end="41:34">prevexp</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="41:38" pos:end="41:39">24</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:22"><block_content pos:start="43:13" pos:end="43:22">

            <return pos:start="43:13" pos:end="43:22">return <expr pos:start="43:20" pos:end="43:21"><operator pos:start="43:20" pos:end="43:20">-</operator><literal type="number" pos:start="43:21" pos:end="43:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <switch pos:start="45:9" pos:end="55:9">switch <condition pos:start="45:16" pos:end="45:27">(<expr pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:26">group_size</name></expr>)</condition> <block pos:start="45:29" pos:end="55:9">{<block_content pos:start="47:13" pos:end="53:41">

            <case pos:start="47:13" pos:end="47:19">case <expr pos:start="47:18" pos:end="47:18"><literal type="number" pos:start="47:18" pos:end="47:18">4</literal></expr>:</case> <expr_stmt pos:start="47:21" pos:end="47:41"><expr pos:start="47:21" pos:end="47:40"><name pos:start="47:21" pos:end="47:30"><name pos:start="47:21" pos:end="47:25">dexps</name><index pos:start="47:26" pos:end="47:30">[<expr pos:start="47:27" pos:end="47:29"><name pos:start="47:27" pos:end="47:27">j</name><operator pos:start="47:28" pos:end="47:29">++</operator></expr>]</index></name> <operator pos:start="47:32" pos:end="47:32">=</operator> <name pos:start="47:34" pos:end="47:40">prevexp</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="49:21" pos:end="49:41"><expr pos:start="49:21" pos:end="49:40"><name pos:start="49:21" pos:end="49:30"><name pos:start="49:21" pos:end="49:25">dexps</name><index pos:start="49:26" pos:end="49:30">[<expr pos:start="49:27" pos:end="49:29"><name pos:start="49:27" pos:end="49:27">j</name><operator pos:start="49:28" pos:end="49:29">++</operator></expr>]</index></name> <operator pos:start="49:32" pos:end="49:32">=</operator> <name pos:start="49:34" pos:end="49:40">prevexp</name></expr>;</expr_stmt>

            <case pos:start="51:13" pos:end="51:19">case <expr pos:start="51:18" pos:end="51:18"><literal type="number" pos:start="51:18" pos:end="51:18">2</literal></expr>:</case> <expr_stmt pos:start="51:21" pos:end="51:41"><expr pos:start="51:21" pos:end="51:40"><name pos:start="51:21" pos:end="51:30"><name pos:start="51:21" pos:end="51:25">dexps</name><index pos:start="51:26" pos:end="51:30">[<expr pos:start="51:27" pos:end="51:29"><name pos:start="51:27" pos:end="51:27">j</name><operator pos:start="51:28" pos:end="51:29">++</operator></expr>]</index></name> <operator pos:start="51:32" pos:end="51:32">=</operator> <name pos:start="51:34" pos:end="51:40">prevexp</name></expr>;</expr_stmt>

            <case pos:start="53:13" pos:end="53:19">case <expr pos:start="53:18" pos:end="53:18"><literal type="number" pos:start="53:18" pos:end="53:18">1</literal></expr>:</case> <expr_stmt pos:start="53:21" pos:end="53:41"><expr pos:start="53:21" pos:end="53:40"><name pos:start="53:21" pos:end="53:30"><name pos:start="53:21" pos:end="53:25">dexps</name><index pos:start="53:26" pos:end="53:30">[<expr pos:start="53:27" pos:end="53:29"><name pos:start="53:27" pos:end="53:27">j</name><operator pos:start="53:28" pos:end="53:29">++</operator></expr>]</index></name> <operator pos:start="53:32" pos:end="53:32">=</operator> <name pos:start="53:34" pos:end="53:40">prevexp</name></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></for>

    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
