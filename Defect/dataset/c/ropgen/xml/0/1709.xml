<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1709.c" pos:tabs="8"><function pos:start="1:1" pos:end="433:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">net_init_l2tpv3</name><parameter_list pos:start="1:20" pos:end="5:55">(<parameter pos:start="1:21" pos:end="1:48"><decl pos:start="1:21" pos:end="1:48"><type pos:start="1:21" pos:end="1:48"><specifier pos:start="1:21" pos:end="1:25">const</specifier> <name pos:start="1:27" pos:end="1:42">NetClientOptions</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">opts</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:36"><decl pos:start="3:21" pos:end="3:36"><type pos:start="3:21" pos:end="3:36"><specifier pos:start="3:21" pos:end="3:25">const</specifier> <name pos:start="3:27" pos:end="3:30">char</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:36">name</name></decl></parameter>,

                    <parameter pos:start="5:21" pos:end="5:40"><decl pos:start="5:21" pos:end="5:40"><type pos:start="5:21" pos:end="5:40"><name pos:start="5:21" pos:end="5:34">NetClientState</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:40">peer</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:54"><decl pos:start="5:43" pos:end="5:54"><type pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:47">Error</name> <modifier pos:start="5:49" pos:end="5:49">*</modifier><modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:54">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="433:1">{<block_content pos:start="11:5" pos:end="431:14">

    <comment type="block" pos:start="9:5" pos:end="9:48">/* FIXME error_setg(errp, ...) on failure */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:31"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:29">NetdevL2TPv3Options</name> <modifier pos:start="11:31" pos:end="11:31">*</modifier></type><name pos:start="11:32" pos:end="11:37">l2tpv3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">NetL2TPV3State</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:21">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">NetClientState</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:22">nc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:10">fd</name> <init pos:start="17:12" pos:end="17:15">= <expr pos:start="17:14" pos:end="17:15"><operator pos:start="17:14" pos:end="17:14">-</operator><literal type="number" pos:start="17:15" pos:end="17:15">1</literal></expr></init></decl>, <decl pos:start="17:18" pos:end="17:23"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:18" pos:end="17:23">gairet</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:10">struct</name> <name pos:start="19:12" pos:end="19:19">addrinfo</name></name></type> <name pos:start="19:21" pos:end="19:25">hints</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:35"><decl pos:start="21:5" pos:end="21:34"><type pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:10">struct</name> <name pos:start="21:12" pos:end="21:19">addrinfo</name></name> <modifier pos:start="21:21" pos:end="21:21">*</modifier></type><name pos:start="21:22" pos:end="21:27">result</name> <init pos:start="21:29" pos:end="21:34">= <expr pos:start="21:31" pos:end="21:34"><name pos:start="21:31" pos:end="21:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:8">char</name> <modifier pos:start="23:10" pos:end="23:10">*</modifier></type><name pos:start="23:11" pos:end="23:17">srcport</name></decl>, <decl pos:start="23:20" pos:end="23:27"><type ref="prev" pos:start="23:5" pos:end="23:10"><modifier pos:start="23:20" pos:end="23:20">*</modifier></type><name pos:start="23:21" pos:end="23:27">dstport</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:69"><expr pos:start="27:5" pos:end="27:68"><name pos:start="27:5" pos:end="27:6">nc</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <call pos:start="27:10" pos:end="27:68"><name pos:start="27:10" pos:end="27:28">qemu_new_net_client</name><argument_list pos:start="27:29" pos:end="27:68">(<argument pos:start="27:30" pos:end="27:45"><expr pos:start="27:30" pos:end="27:45"><operator pos:start="27:30" pos:end="27:30">&amp;</operator><name pos:start="27:31" pos:end="27:45">net_l2tpv3_info</name></expr></argument>, <argument pos:start="27:48" pos:end="27:51"><expr pos:start="27:48" pos:end="27:51"><name pos:start="27:48" pos:end="27:51">peer</name></expr></argument>, <argument pos:start="27:54" pos:end="27:61"><expr pos:start="27:54" pos:end="27:61"><literal type="string" pos:start="27:54" pos:end="27:61">"l2tpv3"</literal></expr></argument>, <argument pos:start="27:64" pos:end="27:67"><expr pos:start="27:64" pos:end="27:67"><name pos:start="27:64" pos:end="27:67">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:5">s</name> <operator pos:start="31:7" pos:end="31:7">=</operator> <call pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:17">DO_UPCAST</name><argument_list pos:start="31:18" pos:end="31:41">(<argument pos:start="31:19" pos:end="31:32"><expr pos:start="31:19" pos:end="31:32"><name pos:start="31:19" pos:end="31:32">NetL2TPV3State</name></expr></argument>, <argument pos:start="31:35" pos:end="31:36"><expr pos:start="31:35" pos:end="31:36"><name pos:start="31:35" pos:end="31:36">nc</name></expr></argument>, <argument pos:start="31:39" pos:end="31:40"><expr pos:start="31:39" pos:end="31:40"><name pos:start="31:39" pos:end="31:40">nc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:17">queue_head</name></name> <operator pos:start="35:19" pos:end="35:19">=</operator> <literal type="number" pos:start="35:21" pos:end="35:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:22"><expr pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:17">queue_tail</name></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <literal type="number" pos:start="37:21" pos:end="37:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:31"><expr pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:22">header_mismatch</name></name> <operator pos:start="39:24" pos:end="39:24">=</operator> <name pos:start="39:26" pos:end="39:30">false</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:57"><expr pos:start="43:5" pos:end="43:56"><call pos:start="43:5" pos:end="43:56"><name pos:start="43:5" pos:end="43:10">assert</name><argument_list pos:start="43:11" pos:end="43:56">(<argument pos:start="43:12" pos:end="43:55"><expr pos:start="43:12" pos:end="43:55"><name pos:start="43:12" pos:end="43:21"><name pos:start="43:12" pos:end="43:15">opts</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:21">type</name></name> <operator pos:start="43:23" pos:end="43:24">==</operator> <name pos:start="43:26" pos:end="43:55">NET_CLIENT_OPTIONS_KIND_L2TPV3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:28"><expr pos:start="45:5" pos:end="45:27"><name pos:start="45:5" pos:end="45:10">l2tpv3</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:27"><name pos:start="45:14" pos:end="45:17">opts</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:20">u</name><operator pos:start="45:21" pos:end="45:21">.</operator><name pos:start="45:22" pos:end="45:27">l2tpv3</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:41">(<expr pos:start="49:9" pos:end="49:40"><name pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:14">l2tpv3</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:24">has_ipv6</name></name> <operator pos:start="49:26" pos:end="49:27">&amp;&amp;</operator> <name pos:start="49:29" pos:end="49:40"><name pos:start="49:29" pos:end="49:34">l2tpv3</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:40">ipv6</name></name></expr>)</condition> <block pos:start="49:43" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:31">

        <expr_stmt pos:start="51:9" pos:end="51:31"><expr pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:15">ipv6</name></name> <operator pos:start="51:17" pos:end="51:17">=</operator> <name pos:start="51:19" pos:end="51:30"><name pos:start="51:19" pos:end="51:24">l2tpv3</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:30">ipv6</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="57:5">else <block pos:start="53:12" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:24">

        <expr_stmt pos:start="55:9" pos:end="55:24"><expr pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:15">ipv6</name></name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:23">false</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:55">(<expr pos:start="61:9" pos:end="61:54"><operator pos:start="61:9" pos:end="61:9">(</operator><name pos:start="61:10" pos:end="61:27"><name pos:start="61:10" pos:end="61:15">l2tpv3</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:27">has_offset</name></name><operator pos:start="61:28" pos:end="61:28">)</operator> <operator pos:start="61:30" pos:end="61:31">&amp;&amp;</operator> <operator pos:start="61:33" pos:end="61:33">(</operator><name pos:start="61:34" pos:end="61:47"><name pos:start="61:34" pos:end="61:39">l2tpv3</name><operator pos:start="61:40" pos:end="61:41">-&gt;</operator><name pos:start="61:42" pos:end="61:47">offset</name></name> <operator pos:start="61:49" pos:end="61:49">&gt;</operator> <literal type="number" pos:start="61:51" pos:end="61:53">256</literal><operator pos:start="61:54" pos:end="61:54">)</operator></expr>)</condition> <block pos:start="61:57" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:20">

        <expr_stmt pos:start="63:9" pos:end="63:73"><expr pos:start="63:9" pos:end="63:72"><call pos:start="63:9" pos:end="63:72"><name pos:start="63:9" pos:end="63:20">error_report</name><argument_list pos:start="63:21" pos:end="63:72">(<argument pos:start="63:22" pos:end="63:71"><expr pos:start="63:22" pos:end="63:71"><literal type="string" pos:start="63:22" pos:end="63:71">"l2tpv3_open : offset must be less than 256 bytes"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:20">goto <name pos:start="65:14" pos:end="65:19">outerr</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="87:5"><if pos:start="71:5" pos:end="83:5">if <condition pos:start="71:8" pos:end="71:53">(<expr pos:start="71:9" pos:end="71:52"><name pos:start="71:9" pos:end="71:28"><name pos:start="71:9" pos:end="71:14">l2tpv3</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:28">has_rxcookie</name></name> <operator pos:start="71:30" pos:end="71:31">||</operator> <name pos:start="71:33" pos:end="71:52"><name pos:start="71:33" pos:end="71:38">l2tpv3</name><operator pos:start="71:39" pos:end="71:40">-&gt;</operator><name pos:start="71:41" pos:end="71:52">has_txcookie</name></name></expr>)</condition> <block pos:start="71:55" pos:end="83:5">{<block_content pos:start="73:9" pos:end="81:9">

        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:57">(<expr pos:start="73:13" pos:end="73:56"><name pos:start="73:13" pos:end="73:32"><name pos:start="73:13" pos:end="73:18">l2tpv3</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:32">has_rxcookie</name></name> <operator pos:start="73:34" pos:end="73:35">&amp;&amp;</operator> <name pos:start="73:37" pos:end="73:56"><name pos:start="73:37" pos:end="73:42">l2tpv3</name><operator pos:start="73:43" pos:end="73:44">-&gt;</operator><name pos:start="73:45" pos:end="73:56">has_txcookie</name></name></expr>)</condition> <block pos:start="73:59" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:29">

            <expr_stmt pos:start="75:13" pos:end="75:29"><expr pos:start="75:13" pos:end="75:28"><name pos:start="75:13" pos:end="75:21"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:21">cookie</name></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <name pos:start="75:25" pos:end="75:28">true</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="81:9">else <block pos:start="77:16" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:24">

            <goto pos:start="79:13" pos:end="79:24">goto <name pos:start="79:18" pos:end="79:23">outerr</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="87:5">else <block pos:start="83:12" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:26">

        <expr_stmt pos:start="85:9" pos:end="85:26"><expr pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:17"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:17">cookie</name></name> <operator pos:start="85:19" pos:end="85:19">=</operator> <name pos:start="85:21" pos:end="85:25">false</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="91:5" pos:end="99:5"><if pos:start="91:5" pos:end="95:5">if <condition pos:start="91:8" pos:end="91:49">(<expr pos:start="91:9" pos:end="91:48"><name pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:14">l2tpv3</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:28">has_cookie64</name></name> <operator pos:start="91:30" pos:end="91:31">||</operator> <name pos:start="91:33" pos:end="91:48"><name pos:start="91:33" pos:end="91:38">l2tpv3</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:48">cookie64</name></name></expr>)</condition> <block pos:start="91:51" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:32">

        <expr_stmt pos:start="93:9" pos:end="93:32"><expr pos:start="93:9" pos:end="93:31"><name pos:start="93:9" pos:end="93:23"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:23">cookie_is_64</name></name>  <operator pos:start="93:26" pos:end="93:26">=</operator> <name pos:start="93:28" pos:end="93:31">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="99:5">else <block pos:start="95:12" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:33">

        <expr_stmt pos:start="97:9" pos:end="97:33"><expr pos:start="97:9" pos:end="97:32"><name pos:start="97:9" pos:end="97:23"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:23">cookie_is_64</name></name>  <operator pos:start="97:26" pos:end="97:26">=</operator> <name pos:start="97:28" pos:end="97:32">false</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="103:5" pos:end="129:5"><if pos:start="103:5" pos:end="121:5">if <condition pos:start="103:8" pos:end="103:39">(<expr pos:start="103:9" pos:end="103:38"><name pos:start="103:9" pos:end="103:23"><name pos:start="103:9" pos:end="103:14">l2tpv3</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:23">has_udp</name></name> <operator pos:start="103:25" pos:end="103:26">&amp;&amp;</operator> <name pos:start="103:28" pos:end="103:38"><name pos:start="103:28" pos:end="103:33">l2tpv3</name><operator pos:start="103:34" pos:end="103:35">-&gt;</operator><name pos:start="103:36" pos:end="103:38">udp</name></name></expr>)</condition> <block pos:start="103:41" pos:end="121:5">{<block_content pos:start="105:9" pos:end="119:9">

        <expr_stmt pos:start="105:9" pos:end="105:22"><expr pos:start="105:9" pos:end="105:21"><name pos:start="105:9" pos:end="105:14"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:14">udp</name></name> <operator pos:start="105:16" pos:end="105:16">=</operator> <name pos:start="105:18" pos:end="105:21">true</name></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="119:9"><if pos:start="107:9" pos:end="113:9">if <condition pos:start="107:12" pos:end="107:58">(<expr pos:start="107:13" pos:end="107:57"><operator pos:start="107:13" pos:end="107:13">!</operator><operator pos:start="107:14" pos:end="107:14">(</operator><name pos:start="107:15" pos:end="107:33"><name pos:start="107:15" pos:end="107:20">l2tpv3</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:33">has_srcport</name></name> <operator pos:start="107:35" pos:end="107:36">&amp;&amp;</operator> <name pos:start="107:38" pos:end="107:56"><name pos:start="107:38" pos:end="107:43">l2tpv3</name><operator pos:start="107:44" pos:end="107:45">-&gt;</operator><name pos:start="107:46" pos:end="107:56">has_dstport</name></name><operator pos:start="107:57" pos:end="107:57">)</operator></expr>)</condition> <block pos:start="107:60" pos:end="113:9">{<block_content pos:start="109:13" pos:end="111:24">

            <expr_stmt pos:start="109:13" pos:end="109:77"><expr pos:start="109:13" pos:end="109:76"><call pos:start="109:13" pos:end="109:76"><name pos:start="109:13" pos:end="109:24">error_report</name><argument_list pos:start="109:25" pos:end="109:76">(<argument pos:start="109:26" pos:end="109:75"><expr pos:start="109:26" pos:end="109:75"><literal type="string" pos:start="109:26" pos:end="109:75">"l2tpv3_open : need both src and dst port for udp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="111:13" pos:end="111:24">goto <name pos:start="111:18" pos:end="111:23">outerr</name>;</goto>

        </block_content>}</block></if> <else pos:start="113:11" pos:end="119:9">else <block pos:start="113:16" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:38">

            <expr_stmt pos:start="115:13" pos:end="115:38"><expr pos:start="115:13" pos:end="115:37"><name pos:start="115:13" pos:end="115:19">srcport</name> <operator pos:start="115:21" pos:end="115:21">=</operator> <name pos:start="115:23" pos:end="115:37"><name pos:start="115:23" pos:end="115:28">l2tpv3</name><operator pos:start="115:29" pos:end="115:30">-&gt;</operator><name pos:start="115:31" pos:end="115:37">srcport</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:38"><expr pos:start="117:13" pos:end="117:37"><name pos:start="117:13" pos:end="117:19">dstport</name> <operator pos:start="117:21" pos:end="117:21">=</operator> <name pos:start="117:23" pos:end="117:37"><name pos:start="117:23" pos:end="117:28">l2tpv3</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:37">dstport</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="121:7" pos:end="129:5">else <block pos:start="121:12" pos:end="129:5">{<block_content pos:start="123:9" pos:end="127:23">

        <expr_stmt pos:start="123:9" pos:end="123:23"><expr pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:14"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:14">udp</name></name> <operator pos:start="123:16" pos:end="123:16">=</operator> <name pos:start="123:18" pos:end="123:22">false</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:23"><expr pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:15">srcport</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <name pos:start="125:19" pos:end="125:22">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:23"><expr pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:15">dstport</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <name pos:start="127:19" pos:end="127:22">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>





    <expr_stmt pos:start="135:5" pos:end="135:18"><expr pos:start="135:5" pos:end="135:17"><name pos:start="135:5" pos:end="135:13"><name pos:start="135:5" pos:end="135:5">s</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:13">offset</name></name> <operator pos:start="135:15" pos:end="135:15">=</operator> <literal type="number" pos:start="135:17" pos:end="135:17">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:26"><expr pos:start="137:5" pos:end="137:25"><name pos:start="137:5" pos:end="137:21"><name pos:start="137:5" pos:end="137:5">s</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:21">session_offset</name></name> <operator pos:start="137:23" pos:end="137:23">=</operator> <literal type="number" pos:start="137:25" pos:end="137:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:25"><expr pos:start="139:5" pos:end="139:24"><name pos:start="139:5" pos:end="139:20"><name pos:start="139:5" pos:end="139:5">s</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:20">cookie_offset</name></name> <operator pos:start="139:22" pos:end="139:22">=</operator> <literal type="number" pos:start="139:24" pos:end="139:24">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:26"><expr pos:start="141:5" pos:end="141:25"><name pos:start="141:5" pos:end="141:21"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:21">counter_offset</name></name> <operator pos:start="141:23" pos:end="141:23">=</operator> <literal type="number" pos:start="141:25" pos:end="141:25">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:38"><expr pos:start="145:5" pos:end="145:37"><name pos:start="145:5" pos:end="145:17"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:17">tx_session</name></name> <operator pos:start="145:19" pos:end="145:19">=</operator> <name pos:start="145:21" pos:end="145:37"><name pos:start="145:21" pos:end="145:26">l2tpv3</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:37">txsession</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="147:5" pos:end="155:5"><if pos:start="147:5" pos:end="151:5">if <condition pos:start="147:8" pos:end="147:30">(<expr pos:start="147:9" pos:end="147:29"><name pos:start="147:9" pos:end="147:29"><name pos:start="147:9" pos:end="147:14">l2tpv3</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:29">has_rxsession</name></name></expr>)</condition> <block pos:start="147:32" pos:end="151:5">{<block_content pos:start="149:9" pos:end="149:42">

        <expr_stmt pos:start="149:9" pos:end="149:42"><expr pos:start="149:9" pos:end="149:41"><name pos:start="149:9" pos:end="149:21"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:21">rx_session</name></name> <operator pos:start="149:23" pos:end="149:23">=</operator> <name pos:start="149:25" pos:end="149:41"><name pos:start="149:25" pos:end="149:30">l2tpv3</name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:41">rxsession</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="151:7" pos:end="155:5">else <block pos:start="151:12" pos:end="155:5">{<block_content pos:start="153:9" pos:end="153:38">

        <expr_stmt pos:start="153:9" pos:end="153:38"><expr pos:start="153:9" pos:end="153:37"><name pos:start="153:9" pos:end="153:21"><name pos:start="153:9" pos:end="153:9">s</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:21">rx_session</name></name> <operator pos:start="153:23" pos:end="153:23">=</operator> <name pos:start="153:25" pos:end="153:37"><name pos:start="153:25" pos:end="153:25">s</name><operator pos:start="153:26" pos:end="153:27">-&gt;</operator><name pos:start="153:28" pos:end="153:37">tx_session</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="159:5" pos:end="183:5"><if pos:start="159:5" pos:end="183:5">if <condition pos:start="159:8" pos:end="159:18">(<expr pos:start="159:9" pos:end="159:17"><name pos:start="159:9" pos:end="159:17"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:17">cookie</name></name></expr>)</condition> <block pos:start="159:20" pos:end="183:5">{<block_content pos:start="161:9" pos:end="181:9">

        <expr_stmt pos:start="161:9" pos:end="161:40"><expr pos:start="161:9" pos:end="161:39"><name pos:start="161:9" pos:end="161:20"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:20">rx_cookie</name></name> <operator pos:start="161:22" pos:end="161:22">=</operator> <name pos:start="161:24" pos:end="161:39"><name pos:start="161:24" pos:end="161:29">l2tpv3</name><operator pos:start="161:30" pos:end="161:31">-&gt;</operator><name pos:start="161:32" pos:end="161:39">rxcookie</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:40"><expr pos:start="163:9" pos:end="163:39"><name pos:start="163:9" pos:end="163:20"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:20">tx_cookie</name></name> <operator pos:start="163:22" pos:end="163:22">=</operator> <name pos:start="163:24" pos:end="163:39"><name pos:start="163:24" pos:end="163:29">l2tpv3</name><operator pos:start="163:30" pos:end="163:31">-&gt;</operator><name pos:start="163:32" pos:end="163:39">txcookie</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="181:9"><if pos:start="165:9" pos:end="173:9">if <condition pos:start="165:12" pos:end="165:36">(<expr pos:start="165:13" pos:end="165:35"><name pos:start="165:13" pos:end="165:27"><name pos:start="165:13" pos:end="165:13">s</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:27">cookie_is_64</name></name> <operator pos:start="165:29" pos:end="165:30">==</operator> <name pos:start="165:32" pos:end="165:35">true</name></expr>)</condition> <block pos:start="165:38" pos:end="173:9">{<block_content pos:start="169:13" pos:end="171:35">

            <comment type="block" pos:start="167:13" pos:end="167:31">/* 64 bit cookie */</comment>

            <expr_stmt pos:start="169:13" pos:end="169:27"><expr pos:start="169:13" pos:end="169:26"><name pos:start="169:13" pos:end="169:21"><name pos:start="169:13" pos:end="169:13">s</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:21">offset</name></name> <operator pos:start="169:23" pos:end="169:24">+=</operator> <literal type="number" pos:start="169:26" pos:end="169:26">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:35"><expr pos:start="171:13" pos:end="171:34"><name pos:start="171:13" pos:end="171:29"><name pos:start="171:13" pos:end="171:13">s</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:29">counter_offset</name></name> <operator pos:start="171:31" pos:end="171:32">+=</operator> <literal type="number" pos:start="171:34" pos:end="171:34">8</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="173:11" pos:end="181:9">else <block pos:start="173:16" pos:end="181:9">{<block_content pos:start="177:13" pos:end="179:35">

            <comment type="block" pos:start="175:13" pos:end="175:31">/* 32 bit cookie */</comment>

            <expr_stmt pos:start="177:13" pos:end="177:27"><expr pos:start="177:13" pos:end="177:26"><name pos:start="177:13" pos:end="177:21"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:21">offset</name></name> <operator pos:start="177:23" pos:end="177:24">+=</operator> <literal type="number" pos:start="177:26" pos:end="177:26">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:35"><expr pos:start="179:13" pos:end="179:34"><name pos:start="179:13" pos:end="179:29"><name pos:start="179:13" pos:end="179:13">s</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:29">counter_offset</name></name> <operator pos:start="179:31" pos:end="179:32">+=</operator> <literal type="number" pos:start="179:34" pos:end="179:34">4</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:37"><expr pos:start="187:5" pos:end="187:36"><call pos:start="187:5" pos:end="187:36"><name pos:start="187:5" pos:end="187:10">memset</name><argument_list pos:start="187:11" pos:end="187:36">(<argument pos:start="187:12" pos:end="187:17"><expr pos:start="187:12" pos:end="187:17"><operator pos:start="187:12" pos:end="187:12">&amp;</operator><name pos:start="187:13" pos:end="187:17">hints</name></expr></argument>, <argument pos:start="187:20" pos:end="187:20"><expr pos:start="187:20" pos:end="187:20"><literal type="number" pos:start="187:20" pos:end="187:20">0</literal></expr></argument>, <argument pos:start="187:23" pos:end="187:35"><expr pos:start="187:23" pos:end="187:35"><sizeof pos:start="187:23" pos:end="187:35">sizeof<argument_list pos:start="187:29" pos:end="187:35">(<argument pos:start="187:30" pos:end="187:34"><expr pos:start="187:30" pos:end="187:34"><name pos:start="187:30" pos:end="187:34">hints</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="191:5" pos:end="199:5"><if pos:start="191:5" pos:end="195:5">if <condition pos:start="191:8" pos:end="191:16">(<expr pos:start="191:9" pos:end="191:15"><name pos:start="191:9" pos:end="191:15"><name pos:start="191:9" pos:end="191:9">s</name><operator pos:start="191:10" pos:end="191:11">-&gt;</operator><name pos:start="191:12" pos:end="191:15">ipv6</name></name></expr>)</condition> <block pos:start="191:18" pos:end="195:5">{<block_content pos:start="193:9" pos:end="193:35">

        <expr_stmt pos:start="193:9" pos:end="193:35"><expr pos:start="193:9" pos:end="193:34"><name pos:start="193:9" pos:end="193:23"><name pos:start="193:9" pos:end="193:13">hints</name><operator pos:start="193:14" pos:end="193:14">.</operator><name pos:start="193:15" pos:end="193:23">ai_family</name></name> <operator pos:start="193:25" pos:end="193:25">=</operator> <name pos:start="193:27" pos:end="193:34">AF_INET6</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="195:7" pos:end="199:5">else <block pos:start="195:12" pos:end="199:5">{<block_content pos:start="197:9" pos:end="197:34">

        <expr_stmt pos:start="197:9" pos:end="197:34"><expr pos:start="197:9" pos:end="197:33"><name pos:start="197:9" pos:end="197:23"><name pos:start="197:9" pos:end="197:13">hints</name><operator pos:start="197:14" pos:end="197:14">.</operator><name pos:start="197:15" pos:end="197:23">ai_family</name></name> <operator pos:start="197:25" pos:end="197:25">=</operator> <name pos:start="197:27" pos:end="197:33">AF_INET</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="201:5" pos:end="221:5"><if pos:start="201:5" pos:end="215:5">if <condition pos:start="201:8" pos:end="201:15">(<expr pos:start="201:9" pos:end="201:14"><name pos:start="201:9" pos:end="201:14"><name pos:start="201:9" pos:end="201:9">s</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:14">udp</name></name></expr>)</condition> <block pos:start="201:17" pos:end="215:5">{<block_content pos:start="203:9" pos:end="213:30">

        <expr_stmt pos:start="203:9" pos:end="203:39"><expr pos:start="203:9" pos:end="203:38"><name pos:start="203:9" pos:end="203:25"><name pos:start="203:9" pos:end="203:13">hints</name><operator pos:start="203:14" pos:end="203:14">.</operator><name pos:start="203:15" pos:end="203:25">ai_socktype</name></name> <operator pos:start="203:27" pos:end="203:27">=</operator> <name pos:start="203:29" pos:end="203:38">SOCK_DGRAM</name></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:30"><expr pos:start="205:9" pos:end="205:29"><name pos:start="205:9" pos:end="205:25"><name pos:start="205:9" pos:end="205:13">hints</name><operator pos:start="205:14" pos:end="205:14">.</operator><name pos:start="205:15" pos:end="205:25">ai_protocol</name></name> <operator pos:start="205:27" pos:end="205:27">=</operator> <literal type="number" pos:start="205:29" pos:end="205:29">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:23"><expr pos:start="207:9" pos:end="207:22"><name pos:start="207:9" pos:end="207:17"><name pos:start="207:9" pos:end="207:9">s</name><operator pos:start="207:10" pos:end="207:11">-&gt;</operator><name pos:start="207:12" pos:end="207:17">offset</name></name> <operator pos:start="207:19" pos:end="207:20">+=</operator> <literal type="number" pos:start="207:22" pos:end="207:22">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:31"><expr pos:start="209:9" pos:end="209:30"><name pos:start="209:9" pos:end="209:25"><name pos:start="209:9" pos:end="209:9">s</name><operator pos:start="209:10" pos:end="209:11">-&gt;</operator><name pos:start="209:12" pos:end="209:25">counter_offset</name></name> <operator pos:start="209:27" pos:end="209:28">+=</operator> <literal type="number" pos:start="209:30" pos:end="209:30">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:31"><expr pos:start="211:9" pos:end="211:30"><name pos:start="211:9" pos:end="211:25"><name pos:start="211:9" pos:end="211:9">s</name><operator pos:start="211:10" pos:end="211:11">-&gt;</operator><name pos:start="211:12" pos:end="211:25">session_offset</name></name> <operator pos:start="211:27" pos:end="211:28">+=</operator> <literal type="number" pos:start="211:30" pos:end="211:30">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:30"><expr pos:start="213:9" pos:end="213:29"><name pos:start="213:9" pos:end="213:24"><name pos:start="213:9" pos:end="213:9">s</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:24">cookie_offset</name></name> <operator pos:start="213:26" pos:end="213:27">+=</operator> <literal type="number" pos:start="213:29" pos:end="213:29">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="215:7" pos:end="221:5">else <block pos:start="215:12" pos:end="221:5">{<block_content pos:start="217:9" pos:end="219:41">

        <expr_stmt pos:start="217:9" pos:end="217:37"><expr pos:start="217:9" pos:end="217:36"><name pos:start="217:9" pos:end="217:25"><name pos:start="217:9" pos:end="217:13">hints</name><operator pos:start="217:14" pos:end="217:14">.</operator><name pos:start="217:15" pos:end="217:25">ai_socktype</name></name> <operator pos:start="217:27" pos:end="217:27">=</operator> <name pos:start="217:29" pos:end="217:36">SOCK_RAW</name></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:41"><expr pos:start="219:9" pos:end="219:40"><name pos:start="219:9" pos:end="219:25"><name pos:start="219:9" pos:end="219:13">hints</name><operator pos:start="219:14" pos:end="219:14">.</operator><name pos:start="219:15" pos:end="219:25">ai_protocol</name></name> <operator pos:start="219:27" pos:end="219:27">=</operator> <name pos:start="219:29" pos:end="219:40">IPPROTO_L2TP</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:64"><expr pos:start="225:5" pos:end="225:63"><name pos:start="225:5" pos:end="225:10">gairet</name> <operator pos:start="225:12" pos:end="225:12">=</operator> <call pos:start="225:14" pos:end="225:63"><name pos:start="225:14" pos:end="225:24">getaddrinfo</name><argument_list pos:start="225:25" pos:end="225:63">(<argument pos:start="225:26" pos:end="225:36"><expr pos:start="225:26" pos:end="225:36"><name pos:start="225:26" pos:end="225:36"><name pos:start="225:26" pos:end="225:31">l2tpv3</name><operator pos:start="225:32" pos:end="225:33">-&gt;</operator><name pos:start="225:34" pos:end="225:36">src</name></name></expr></argument>, <argument pos:start="225:39" pos:end="225:45"><expr pos:start="225:39" pos:end="225:45"><name pos:start="225:39" pos:end="225:45">srcport</name></expr></argument>, <argument pos:start="225:48" pos:end="225:53"><expr pos:start="225:48" pos:end="225:53"><operator pos:start="225:48" pos:end="225:48">&amp;</operator><name pos:start="225:49" pos:end="225:53">hints</name></expr></argument>, <argument pos:start="225:56" pos:end="225:62"><expr pos:start="225:56" pos:end="225:62"><operator pos:start="225:56" pos:end="225:56">&amp;</operator><name pos:start="225:57" pos:end="225:62">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="229:5" pos:end="241:5"><if pos:start="229:5" pos:end="241:5">if <condition pos:start="229:8" pos:end="229:42">(<expr pos:start="229:9" pos:end="229:41"><operator pos:start="229:9" pos:end="229:9">(</operator><name pos:start="229:10" pos:end="229:15">gairet</name> <operator pos:start="229:17" pos:end="229:18">!=</operator> <literal type="number" pos:start="229:20" pos:end="229:20">0</literal><operator pos:start="229:21" pos:end="229:21">)</operator> <operator pos:start="229:23" pos:end="229:24">||</operator> <operator pos:start="229:26" pos:end="229:26">(</operator><name pos:start="229:27" pos:end="229:32">result</name> <operator pos:start="229:34" pos:end="229:35">==</operator> <name pos:start="229:37" pos:end="229:40">NULL</name><operator pos:start="229:41" pos:end="229:41">)</operator></expr>)</condition> <block pos:start="229:44" pos:end="241:5">{<block_content pos:start="231:9" pos:end="239:20">

        <expr_stmt pos:start="231:9" pos:end="237:10"><expr pos:start="231:9" pos:end="237:9"><call pos:start="231:9" pos:end="237:9"><name pos:start="231:9" pos:end="231:20">error_report</name><argument_list pos:start="231:21" pos:end="237:9">(

            <argument pos:start="233:13" pos:end="233:61"><expr pos:start="233:13" pos:end="233:61"><literal type="string" pos:start="233:13" pos:end="233:61">"l2tpv3_open : could not resolve src, errno = %s"</literal></expr></argument>,

            <argument pos:start="235:13" pos:end="235:32"><expr pos:start="235:13" pos:end="235:32"><call pos:start="235:13" pos:end="235:32"><name pos:start="235:13" pos:end="235:24">gai_strerror</name><argument_list pos:start="235:25" pos:end="235:32">(<argument pos:start="235:26" pos:end="235:31"><expr pos:start="235:26" pos:end="235:31"><name pos:start="235:26" pos:end="235:31">gairet</name></expr></argument>)</argument_list></call></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="239:9" pos:end="239:20">goto <name pos:start="239:14" pos:end="239:19">outerr</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:77"><expr pos:start="243:5" pos:end="243:76"><name pos:start="243:5" pos:end="243:6">fd</name> <operator pos:start="243:8" pos:end="243:8">=</operator> <call pos:start="243:10" pos:end="243:76"><name pos:start="243:10" pos:end="243:15">socket</name><argument_list pos:start="243:16" pos:end="243:76">(<argument pos:start="243:17" pos:end="243:33"><expr pos:start="243:17" pos:end="243:33"><name pos:start="243:17" pos:end="243:33"><name pos:start="243:17" pos:end="243:22">result</name><operator pos:start="243:23" pos:end="243:24">-&gt;</operator><name pos:start="243:25" pos:end="243:33">ai_family</name></name></expr></argument>, <argument pos:start="243:36" pos:end="243:54"><expr pos:start="243:36" pos:end="243:54"><name pos:start="243:36" pos:end="243:54"><name pos:start="243:36" pos:end="243:41">result</name><operator pos:start="243:42" pos:end="243:43">-&gt;</operator><name pos:start="243:44" pos:end="243:54">ai_socktype</name></name></expr></argument>, <argument pos:start="243:57" pos:end="243:75"><expr pos:start="243:57" pos:end="243:75"><name pos:start="243:57" pos:end="243:75"><name pos:start="243:57" pos:end="243:62">result</name><operator pos:start="243:63" pos:end="243:64">-&gt;</operator><name pos:start="243:65" pos:end="243:75">ai_protocol</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="245:5" pos:end="253:5"><if pos:start="245:5" pos:end="253:5">if <condition pos:start="245:8" pos:end="245:17">(<expr pos:start="245:9" pos:end="245:16"><name pos:start="245:9" pos:end="245:10">fd</name> <operator pos:start="245:12" pos:end="245:13">==</operator> <operator pos:start="245:15" pos:end="245:15">-</operator><literal type="number" pos:start="245:16" pos:end="245:16">1</literal></expr>)</condition> <block pos:start="245:19" pos:end="253:5">{<block_content pos:start="247:9" pos:end="251:20">

        <expr_stmt pos:start="247:9" pos:end="247:20"><expr pos:start="247:9" pos:end="247:19"><name pos:start="247:9" pos:end="247:10">fd</name> <operator pos:start="247:12" pos:end="247:12">=</operator> <operator pos:start="247:14" pos:end="247:14">-</operator><name pos:start="247:15" pos:end="247:19">errno</name></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:78"><expr pos:start="249:9" pos:end="249:77"><call pos:start="249:9" pos:end="249:77"><name pos:start="249:9" pos:end="249:20">error_report</name><argument_list pos:start="249:21" pos:end="249:77">(<argument pos:start="249:22" pos:end="249:71"><expr pos:start="249:22" pos:end="249:71"><literal type="string" pos:start="249:22" pos:end="249:71">"l2tpv3_open : socket creation failed, errno = %d"</literal></expr></argument>, <argument pos:start="249:74" pos:end="249:76"><expr pos:start="249:74" pos:end="249:76"><operator pos:start="249:74" pos:end="249:74">-</operator><name pos:start="249:75" pos:end="249:76">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="251:9" pos:end="251:20">goto <name pos:start="251:14" pos:end="251:19">outerr</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="255:5" pos:end="261:5"><if pos:start="255:5" pos:end="261:5">if <condition pos:start="255:8" pos:end="255:74">(<expr pos:start="255:9" pos:end="255:73"><call pos:start="255:9" pos:end="255:73"><name pos:start="255:9" pos:end="255:12">bind</name><argument_list pos:start="255:13" pos:end="255:73">(<argument pos:start="255:14" pos:end="255:15"><expr pos:start="255:14" pos:end="255:15"><name pos:start="255:14" pos:end="255:15">fd</name></expr></argument>, <argument pos:start="255:18" pos:end="255:52"><expr pos:start="255:18" pos:end="255:52"><operator pos:start="255:18" pos:end="255:18">(</operator>struct <name pos:start="255:26" pos:end="255:33">sockaddr</name> <operator pos:start="255:35" pos:end="255:35">*</operator><operator pos:start="255:36" pos:end="255:36">)</operator> <name pos:start="255:38" pos:end="255:52"><name pos:start="255:38" pos:end="255:43">result</name><operator pos:start="255:44" pos:end="255:45">-&gt;</operator><name pos:start="255:46" pos:end="255:52">ai_addr</name></name></expr></argument>, <argument pos:start="255:55" pos:end="255:72"><expr pos:start="255:55" pos:end="255:72"><name pos:start="255:55" pos:end="255:72"><name pos:start="255:55" pos:end="255:60">result</name><operator pos:start="255:61" pos:end="255:62">-&gt;</operator><name pos:start="255:63" pos:end="255:72">ai_addrlen</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="255:76" pos:end="261:5">{<block_content pos:start="257:9" pos:end="259:20">

        <expr_stmt pos:start="257:9" pos:end="257:75"><expr pos:start="257:9" pos:end="257:74"><call pos:start="257:9" pos:end="257:74"><name pos:start="257:9" pos:end="257:20">error_report</name><argument_list pos:start="257:21" pos:end="257:74">(<argument pos:start="257:22" pos:end="257:66"><expr pos:start="257:22" pos:end="257:66"><literal type="string" pos:start="257:22" pos:end="257:66">"l2tpv3_open :  could not bind socket err=%i"</literal></expr></argument>, <argument pos:start="257:69" pos:end="257:73"><expr pos:start="257:69" pos:end="257:73"><name pos:start="257:69" pos:end="257:73">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="259:9" pos:end="259:20">goto <name pos:start="259:14" pos:end="259:19">outerr</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="263:5" pos:end="267:5"><if pos:start="263:5" pos:end="267:5">if <condition pos:start="263:8" pos:end="263:15">(<expr pos:start="263:9" pos:end="263:14"><name pos:start="263:9" pos:end="263:14">result</name></expr>)</condition> <block pos:start="263:17" pos:end="267:5">{<block_content pos:start="265:9" pos:end="265:29">

        <expr_stmt pos:start="265:9" pos:end="265:29"><expr pos:start="265:9" pos:end="265:28"><call pos:start="265:9" pos:end="265:28"><name pos:start="265:9" pos:end="265:20">freeaddrinfo</name><argument_list pos:start="265:21" pos:end="265:28">(<argument pos:start="265:22" pos:end="265:27"><expr pos:start="265:22" pos:end="265:27"><name pos:start="265:22" pos:end="265:27">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="271:5" pos:end="271:37"><expr pos:start="271:5" pos:end="271:36"><call pos:start="271:5" pos:end="271:36"><name pos:start="271:5" pos:end="271:10">memset</name><argument_list pos:start="271:11" pos:end="271:36">(<argument pos:start="271:12" pos:end="271:17"><expr pos:start="271:12" pos:end="271:17"><operator pos:start="271:12" pos:end="271:12">&amp;</operator><name pos:start="271:13" pos:end="271:17">hints</name></expr></argument>, <argument pos:start="271:20" pos:end="271:20"><expr pos:start="271:20" pos:end="271:20"><literal type="number" pos:start="271:20" pos:end="271:20">0</literal></expr></argument>, <argument pos:start="271:23" pos:end="271:35"><expr pos:start="271:23" pos:end="271:35"><sizeof pos:start="271:23" pos:end="271:35">sizeof<argument_list pos:start="271:29" pos:end="271:35">(<argument pos:start="271:30" pos:end="271:34"><expr pos:start="271:30" pos:end="271:34"><name pos:start="271:30" pos:end="271:34">hints</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="275:5" pos:end="283:5"><if pos:start="275:5" pos:end="279:5">if <condition pos:start="275:8" pos:end="275:16">(<expr pos:start="275:9" pos:end="275:15"><name pos:start="275:9" pos:end="275:15"><name pos:start="275:9" pos:end="275:9">s</name><operator pos:start="275:10" pos:end="275:11">-&gt;</operator><name pos:start="275:12" pos:end="275:15">ipv6</name></name></expr>)</condition> <block pos:start="275:18" pos:end="279:5">{<block_content pos:start="277:9" pos:end="277:35">

        <expr_stmt pos:start="277:9" pos:end="277:35"><expr pos:start="277:9" pos:end="277:34"><name pos:start="277:9" pos:end="277:23"><name pos:start="277:9" pos:end="277:13">hints</name><operator pos:start="277:14" pos:end="277:14">.</operator><name pos:start="277:15" pos:end="277:23">ai_family</name></name> <operator pos:start="277:25" pos:end="277:25">=</operator> <name pos:start="277:27" pos:end="277:34">AF_INET6</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="279:7" pos:end="283:5">else <block pos:start="279:12" pos:end="283:5">{<block_content pos:start="281:9" pos:end="281:34">

        <expr_stmt pos:start="281:9" pos:end="281:34"><expr pos:start="281:9" pos:end="281:33"><name pos:start="281:9" pos:end="281:23"><name pos:start="281:9" pos:end="281:13">hints</name><operator pos:start="281:14" pos:end="281:14">.</operator><name pos:start="281:15" pos:end="281:23">ai_family</name></name> <operator pos:start="281:25" pos:end="281:25">=</operator> <name pos:start="281:27" pos:end="281:33">AF_INET</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="285:5" pos:end="297:5"><if pos:start="285:5" pos:end="291:5">if <condition pos:start="285:8" pos:end="285:15">(<expr pos:start="285:9" pos:end="285:14"><name pos:start="285:9" pos:end="285:14"><name pos:start="285:9" pos:end="285:9">s</name><operator pos:start="285:10" pos:end="285:11">-&gt;</operator><name pos:start="285:12" pos:end="285:14">udp</name></name></expr>)</condition> <block pos:start="285:17" pos:end="291:5">{<block_content pos:start="287:9" pos:end="289:30">

        <expr_stmt pos:start="287:9" pos:end="287:39"><expr pos:start="287:9" pos:end="287:38"><name pos:start="287:9" pos:end="287:25"><name pos:start="287:9" pos:end="287:13">hints</name><operator pos:start="287:14" pos:end="287:14">.</operator><name pos:start="287:15" pos:end="287:25">ai_socktype</name></name> <operator pos:start="287:27" pos:end="287:27">=</operator> <name pos:start="287:29" pos:end="287:38">SOCK_DGRAM</name></expr>;</expr_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:30"><expr pos:start="289:9" pos:end="289:29"><name pos:start="289:9" pos:end="289:25"><name pos:start="289:9" pos:end="289:13">hints</name><operator pos:start="289:14" pos:end="289:14">.</operator><name pos:start="289:15" pos:end="289:25">ai_protocol</name></name> <operator pos:start="289:27" pos:end="289:27">=</operator> <literal type="number" pos:start="289:29" pos:end="289:29">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="291:7" pos:end="297:5">else <block pos:start="291:12" pos:end="297:5">{<block_content pos:start="293:9" pos:end="295:41">

        <expr_stmt pos:start="293:9" pos:end="293:37"><expr pos:start="293:9" pos:end="293:36"><name pos:start="293:9" pos:end="293:25"><name pos:start="293:9" pos:end="293:13">hints</name><operator pos:start="293:14" pos:end="293:14">.</operator><name pos:start="293:15" pos:end="293:25">ai_socktype</name></name> <operator pos:start="293:27" pos:end="293:27">=</operator> <name pos:start="293:29" pos:end="293:36">SOCK_RAW</name></expr>;</expr_stmt>

        <expr_stmt pos:start="295:9" pos:end="295:41"><expr pos:start="295:9" pos:end="295:40"><name pos:start="295:9" pos:end="295:25"><name pos:start="295:9" pos:end="295:13">hints</name><operator pos:start="295:14" pos:end="295:14">.</operator><name pos:start="295:15" pos:end="295:25">ai_protocol</name></name> <operator pos:start="295:27" pos:end="295:27">=</operator> <name pos:start="295:29" pos:end="295:40">IPPROTO_L2TP</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="301:5" pos:end="301:18"><expr pos:start="301:5" pos:end="301:17"><name pos:start="301:5" pos:end="301:10">result</name> <operator pos:start="301:12" pos:end="301:12">=</operator> <name pos:start="301:14" pos:end="301:17">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="303:5" pos:end="303:64"><expr pos:start="303:5" pos:end="303:63"><name pos:start="303:5" pos:end="303:10">gairet</name> <operator pos:start="303:12" pos:end="303:12">=</operator> <call pos:start="303:14" pos:end="303:63"><name pos:start="303:14" pos:end="303:24">getaddrinfo</name><argument_list pos:start="303:25" pos:end="303:63">(<argument pos:start="303:26" pos:end="303:36"><expr pos:start="303:26" pos:end="303:36"><name pos:start="303:26" pos:end="303:36"><name pos:start="303:26" pos:end="303:31">l2tpv3</name><operator pos:start="303:32" pos:end="303:33">-&gt;</operator><name pos:start="303:34" pos:end="303:36">dst</name></name></expr></argument>, <argument pos:start="303:39" pos:end="303:45"><expr pos:start="303:39" pos:end="303:45"><name pos:start="303:39" pos:end="303:45">dstport</name></expr></argument>, <argument pos:start="303:48" pos:end="303:53"><expr pos:start="303:48" pos:end="303:53"><operator pos:start="303:48" pos:end="303:48">&amp;</operator><name pos:start="303:49" pos:end="303:53">hints</name></expr></argument>, <argument pos:start="303:56" pos:end="303:62"><expr pos:start="303:56" pos:end="303:62"><operator pos:start="303:56" pos:end="303:56">&amp;</operator><name pos:start="303:57" pos:end="303:62">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="305:5" pos:end="317:5"><if pos:start="305:5" pos:end="317:5">if <condition pos:start="305:8" pos:end="305:42">(<expr pos:start="305:9" pos:end="305:41"><operator pos:start="305:9" pos:end="305:9">(</operator><name pos:start="305:10" pos:end="305:15">gairet</name> <operator pos:start="305:17" pos:end="305:18">!=</operator> <literal type="number" pos:start="305:20" pos:end="305:20">0</literal><operator pos:start="305:21" pos:end="305:21">)</operator> <operator pos:start="305:23" pos:end="305:24">||</operator> <operator pos:start="305:26" pos:end="305:26">(</operator><name pos:start="305:27" pos:end="305:32">result</name> <operator pos:start="305:34" pos:end="305:35">==</operator> <name pos:start="305:37" pos:end="305:40">NULL</name><operator pos:start="305:41" pos:end="305:41">)</operator></expr>)</condition> <block pos:start="305:44" pos:end="317:5">{<block_content pos:start="307:9" pos:end="315:20">

        <expr_stmt pos:start="307:9" pos:end="313:10"><expr pos:start="307:9" pos:end="313:9"><call pos:start="307:9" pos:end="313:9"><name pos:start="307:9" pos:end="307:20">error_report</name><argument_list pos:start="307:21" pos:end="313:9">(

            <argument pos:start="309:13" pos:end="309:61"><expr pos:start="309:13" pos:end="309:61"><literal type="string" pos:start="309:13" pos:end="309:61">"l2tpv3_open : could not resolve dst, error = %s"</literal></expr></argument>,

            <argument pos:start="311:13" pos:end="311:32"><expr pos:start="311:13" pos:end="311:32"><call pos:start="311:13" pos:end="311:32"><name pos:start="311:13" pos:end="311:24">gai_strerror</name><argument_list pos:start="311:25" pos:end="311:32">(<argument pos:start="311:26" pos:end="311:31"><expr pos:start="311:26" pos:end="311:31"><name pos:start="311:26" pos:end="311:31">gairet</name></expr></argument>)</argument_list></call></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="315:9" pos:end="315:20">goto <name pos:start="315:14" pos:end="315:19">outerr</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="321:5" pos:end="321:54"><expr pos:start="321:5" pos:end="321:53"><name pos:start="321:5" pos:end="321:16"><name pos:start="321:5" pos:end="321:5">s</name><operator pos:start="321:6" pos:end="321:7">-&gt;</operator><name pos:start="321:8" pos:end="321:16">dgram_dst</name></name> <operator pos:start="321:18" pos:end="321:18">=</operator> <call pos:start="321:20" pos:end="321:53"><name pos:start="321:20" pos:end="321:25">g_new0</name><argument_list pos:start="321:26" pos:end="321:53">(<argument pos:start="321:27" pos:end="321:49"><expr pos:start="321:27" pos:end="321:49">struct <name pos:start="321:34" pos:end="321:49">sockaddr_storage</name></expr></argument>, <argument pos:start="321:52" pos:end="321:52"><expr pos:start="321:52" pos:end="321:52"><literal type="number" pos:start="321:52" pos:end="321:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="323:5" pos:end="323:62"><expr pos:start="323:5" pos:end="323:61"><call pos:start="323:5" pos:end="323:61"><name pos:start="323:5" pos:end="323:10">memcpy</name><argument_list pos:start="323:11" pos:end="323:61">(<argument pos:start="323:12" pos:end="323:23"><expr pos:start="323:12" pos:end="323:23"><name pos:start="323:12" pos:end="323:23"><name pos:start="323:12" pos:end="323:12">s</name><operator pos:start="323:13" pos:end="323:14">-&gt;</operator><name pos:start="323:15" pos:end="323:23">dgram_dst</name></name></expr></argument>, <argument pos:start="323:26" pos:end="323:40"><expr pos:start="323:26" pos:end="323:40"><name pos:start="323:26" pos:end="323:40"><name pos:start="323:26" pos:end="323:31">result</name><operator pos:start="323:32" pos:end="323:33">-&gt;</operator><name pos:start="323:34" pos:end="323:40">ai_addr</name></name></expr></argument>, <argument pos:start="323:43" pos:end="323:60"><expr pos:start="323:43" pos:end="323:60"><name pos:start="323:43" pos:end="323:60"><name pos:start="323:43" pos:end="323:48">result</name><operator pos:start="323:49" pos:end="323:50">-&gt;</operator><name pos:start="323:51" pos:end="323:60">ai_addrlen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="325:5" pos:end="325:37"><expr pos:start="325:5" pos:end="325:36"><name pos:start="325:5" pos:end="325:15"><name pos:start="325:5" pos:end="325:5">s</name><operator pos:start="325:6" pos:end="325:7">-&gt;</operator><name pos:start="325:8" pos:end="325:15">dst_size</name></name> <operator pos:start="325:17" pos:end="325:17">=</operator> <name pos:start="325:19" pos:end="325:36"><name pos:start="325:19" pos:end="325:24">result</name><operator pos:start="325:25" pos:end="325:26">-&gt;</operator><name pos:start="325:27" pos:end="325:36">ai_addrlen</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="329:5" pos:end="333:5"><if pos:start="329:5" pos:end="333:5">if <condition pos:start="329:8" pos:end="329:15">(<expr pos:start="329:9" pos:end="329:14"><name pos:start="329:9" pos:end="329:14">result</name></expr>)</condition> <block pos:start="329:17" pos:end="333:5">{<block_content pos:start="331:9" pos:end="331:29">

        <expr_stmt pos:start="331:9" pos:end="331:29"><expr pos:start="331:9" pos:end="331:28"><call pos:start="331:9" pos:end="331:28"><name pos:start="331:9" pos:end="331:20">freeaddrinfo</name><argument_list pos:start="331:21" pos:end="331:28">(<argument pos:start="331:22" pos:end="331:27"><expr pos:start="331:22" pos:end="331:27"><name pos:start="331:22" pos:end="331:27">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="337:5" pos:end="347:5"><if pos:start="337:5" pos:end="343:5">if <condition pos:start="337:8" pos:end="337:47">(<expr pos:start="337:9" pos:end="337:46"><name pos:start="337:9" pos:end="337:27"><name pos:start="337:9" pos:end="337:14">l2tpv3</name><operator pos:start="337:15" pos:end="337:16">-&gt;</operator><name pos:start="337:17" pos:end="337:27">has_counter</name></name> <operator pos:start="337:29" pos:end="337:30">&amp;&amp;</operator> <name pos:start="337:32" pos:end="337:46"><name pos:start="337:32" pos:end="337:37">l2tpv3</name><operator pos:start="337:38" pos:end="337:39">-&gt;</operator><name pos:start="337:40" pos:end="337:46">counter</name></name></expr>)</condition> <block pos:start="337:49" pos:end="343:5">{<block_content pos:start="339:9" pos:end="341:23">

        <expr_stmt pos:start="339:9" pos:end="339:30"><expr pos:start="339:9" pos:end="339:29"><name pos:start="339:9" pos:end="339:22"><name pos:start="339:9" pos:end="339:9">s</name><operator pos:start="339:10" pos:end="339:11">-&gt;</operator><name pos:start="339:12" pos:end="339:22">has_counter</name></name> <operator pos:start="339:24" pos:end="339:24">=</operator> <name pos:start="339:26" pos:end="339:29">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="341:9" pos:end="341:23"><expr pos:start="341:9" pos:end="341:22"><name pos:start="341:9" pos:end="341:17"><name pos:start="341:9" pos:end="341:9">s</name><operator pos:start="341:10" pos:end="341:11">-&gt;</operator><name pos:start="341:12" pos:end="341:17">offset</name></name> <operator pos:start="341:19" pos:end="341:20">+=</operator> <literal type="number" pos:start="341:22" pos:end="341:22">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="343:7" pos:end="347:5">else <block pos:start="343:12" pos:end="347:5">{<block_content pos:start="345:9" pos:end="345:31">

        <expr_stmt pos:start="345:9" pos:end="345:31"><expr pos:start="345:9" pos:end="345:30"><name pos:start="345:9" pos:end="345:22"><name pos:start="345:9" pos:end="345:9">s</name><operator pos:start="345:10" pos:end="345:11">-&gt;</operator><name pos:start="345:12" pos:end="345:22">has_counter</name></name> <operator pos:start="345:24" pos:end="345:24">=</operator> <name pos:start="345:26" pos:end="345:30">false</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="351:5" pos:end="361:5"><if pos:start="351:5" pos:end="357:5">if <condition pos:start="351:8" pos:end="351:53">(<expr pos:start="351:9" pos:end="351:52"><name pos:start="351:9" pos:end="351:30"><name pos:start="351:9" pos:end="351:14">l2tpv3</name><operator pos:start="351:15" pos:end="351:16">-&gt;</operator><name pos:start="351:17" pos:end="351:30">has_pincounter</name></name> <operator pos:start="351:32" pos:end="351:33">&amp;&amp;</operator> <name pos:start="351:35" pos:end="351:52"><name pos:start="351:35" pos:end="351:40">l2tpv3</name><operator pos:start="351:41" pos:end="351:42">-&gt;</operator><name pos:start="351:43" pos:end="351:52">pincounter</name></name></expr>)</condition> <block pos:start="351:55" pos:end="357:5">{<block_content pos:start="353:9" pos:end="355:30">

        <expr_stmt pos:start="353:9" pos:end="353:30"><expr pos:start="353:9" pos:end="353:29"><name pos:start="353:9" pos:end="353:22"><name pos:start="353:9" pos:end="353:9">s</name><operator pos:start="353:10" pos:end="353:11">-&gt;</operator><name pos:start="353:12" pos:end="353:22">has_counter</name></name> <operator pos:start="353:24" pos:end="353:24">=</operator> <name pos:start="353:26" pos:end="353:29">true</name></expr>;</expr_stmt>  <comment type="block" pos:start="353:33" pos:end="353:79">/* pin counter implies that there is counter */</comment>

        <expr_stmt pos:start="355:9" pos:end="355:30"><expr pos:start="355:9" pos:end="355:29"><name pos:start="355:9" pos:end="355:22"><name pos:start="355:9" pos:end="355:9">s</name><operator pos:start="355:10" pos:end="355:11">-&gt;</operator><name pos:start="355:12" pos:end="355:22">pin_counter</name></name> <operator pos:start="355:24" pos:end="355:24">=</operator> <name pos:start="355:26" pos:end="355:29">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="357:7" pos:end="361:5">else <block pos:start="357:12" pos:end="361:5">{<block_content pos:start="359:9" pos:end="359:31">

        <expr_stmt pos:start="359:9" pos:end="359:31"><expr pos:start="359:9" pos:end="359:30"><name pos:start="359:9" pos:end="359:22"><name pos:start="359:9" pos:end="359:9">s</name><operator pos:start="359:10" pos:end="359:11">-&gt;</operator><name pos:start="359:12" pos:end="359:22">pin_counter</name></name> <operator pos:start="359:24" pos:end="359:24">=</operator> <name pos:start="359:26" pos:end="359:30">false</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="365:5" pos:end="371:5"><if pos:start="365:5" pos:end="371:5">if <condition pos:start="365:8" pos:end="365:27">(<expr pos:start="365:9" pos:end="365:26"><name pos:start="365:9" pos:end="365:26"><name pos:start="365:9" pos:end="365:14">l2tpv3</name><operator pos:start="365:15" pos:end="365:16">-&gt;</operator><name pos:start="365:17" pos:end="365:26">has_offset</name></name></expr>)</condition> <block pos:start="365:29" pos:end="371:5">{<block_content pos:start="369:9" pos:end="369:36">

        <comment type="block" pos:start="367:9" pos:end="367:26">/* extra offset */</comment>

        <expr_stmt pos:start="369:9" pos:end="369:36"><expr pos:start="369:9" pos:end="369:35"><name pos:start="369:9" pos:end="369:17"><name pos:start="369:9" pos:end="369:9">s</name><operator pos:start="369:10" pos:end="369:11">-&gt;</operator><name pos:start="369:12" pos:end="369:17">offset</name></name> <operator pos:start="369:19" pos:end="369:20">+=</operator> <name pos:start="369:22" pos:end="369:35"><name pos:start="369:22" pos:end="369:27">l2tpv3</name><operator pos:start="369:28" pos:end="369:29">-&gt;</operator><name pos:start="369:30" pos:end="369:35">offset</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="375:5" pos:end="383:5"><if pos:start="375:5" pos:end="379:5">if <condition pos:start="375:8" pos:end="375:30">(<expr pos:start="375:9" pos:end="375:29"><operator pos:start="375:9" pos:end="375:9">(</operator><name pos:start="375:10" pos:end="375:16"><name pos:start="375:10" pos:end="375:10">s</name><operator pos:start="375:11" pos:end="375:12">-&gt;</operator><name pos:start="375:13" pos:end="375:16">ipv6</name></name><operator pos:start="375:17" pos:end="375:17">)</operator> <operator pos:start="375:19" pos:end="375:20">||</operator> <operator pos:start="375:22" pos:end="375:22">(</operator><name pos:start="375:23" pos:end="375:28"><name pos:start="375:23" pos:end="375:23">s</name><operator pos:start="375:24" pos:end="375:25">-&gt;</operator><name pos:start="375:26" pos:end="375:28">udp</name></name><operator pos:start="375:29" pos:end="375:29">)</operator></expr>)</condition> <block pos:start="375:32" pos:end="379:5">{<block_content pos:start="377:9" pos:end="377:35">

        <expr_stmt pos:start="377:9" pos:end="377:35"><expr pos:start="377:9" pos:end="377:34"><name pos:start="377:9" pos:end="377:22"><name pos:start="377:9" pos:end="377:9">s</name><operator pos:start="377:10" pos:end="377:11">-&gt;</operator><name pos:start="377:12" pos:end="377:22">header_size</name></name> <operator pos:start="377:24" pos:end="377:24">=</operator> <name pos:start="377:26" pos:end="377:34"><name pos:start="377:26" pos:end="377:26">s</name><operator pos:start="377:27" pos:end="377:28">-&gt;</operator><name pos:start="377:29" pos:end="377:34">offset</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="379:7" pos:end="383:5">else <block pos:start="379:12" pos:end="383:5">{<block_content pos:start="381:9" pos:end="381:58">

        <expr_stmt pos:start="381:9" pos:end="381:58"><expr pos:start="381:9" pos:end="381:57"><name pos:start="381:9" pos:end="381:22"><name pos:start="381:9" pos:end="381:9">s</name><operator pos:start="381:10" pos:end="381:11">-&gt;</operator><name pos:start="381:12" pos:end="381:22">header_size</name></name> <operator pos:start="381:24" pos:end="381:24">=</operator> <name pos:start="381:26" pos:end="381:34"><name pos:start="381:26" pos:end="381:26">s</name><operator pos:start="381:27" pos:end="381:28">-&gt;</operator><name pos:start="381:29" pos:end="381:34">offset</name></name> <operator pos:start="381:36" pos:end="381:36">+</operator> <sizeof pos:start="381:38" pos:end="381:57">sizeof<argument_list pos:start="381:44" pos:end="381:57">(<argument pos:start="381:45" pos:end="381:56"><expr pos:start="381:45" pos:end="381:56">struct <name pos:start="381:52" pos:end="381:56">iphdr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="387:5" pos:end="387:58"><expr pos:start="387:5" pos:end="387:57"><name pos:start="387:5" pos:end="387:13"><name pos:start="387:5" pos:end="387:5">s</name><operator pos:start="387:6" pos:end="387:7">-&gt;</operator><name pos:start="387:8" pos:end="387:13">msgvec</name></name> <operator pos:start="387:15" pos:end="387:15">=</operator> <call pos:start="387:17" pos:end="387:57"><name pos:start="387:17" pos:end="387:35">build_l2tpv3_vector</name><argument_list pos:start="387:36" pos:end="387:57">(<argument pos:start="387:37" pos:end="387:37"><expr pos:start="387:37" pos:end="387:37"><name pos:start="387:37" pos:end="387:37">s</name></expr></argument>, <argument pos:start="387:40" pos:end="387:56"><expr pos:start="387:40" pos:end="387:56"><name pos:start="387:40" pos:end="387:56">MAX_L2TPV3_MSGCNT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="389:5" pos:end="389:52"><expr pos:start="389:5" pos:end="389:51"><name pos:start="389:5" pos:end="389:10"><name pos:start="389:5" pos:end="389:5">s</name><operator pos:start="389:6" pos:end="389:7">-&gt;</operator><name pos:start="389:8" pos:end="389:10">vec</name></name> <operator pos:start="389:12" pos:end="389:12">=</operator> <call pos:start="389:14" pos:end="389:51"><name pos:start="389:14" pos:end="389:18">g_new</name><argument_list pos:start="389:19" pos:end="389:51">(<argument pos:start="389:20" pos:end="389:31"><expr pos:start="389:20" pos:end="389:31">struct <name pos:start="389:27" pos:end="389:31">iovec</name></expr></argument>, <argument pos:start="389:34" pos:end="389:50"><expr pos:start="389:34" pos:end="389:50"><name pos:start="389:34" pos:end="389:50">MAX_L2TPV3_IOVCNT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="391:5" pos:end="391:45"><expr pos:start="391:5" pos:end="391:44"><name pos:start="391:5" pos:end="391:17"><name pos:start="391:5" pos:end="391:5">s</name><operator pos:start="391:6" pos:end="391:7">-&gt;</operator><name pos:start="391:8" pos:end="391:17">header_buf</name></name> <operator pos:start="391:19" pos:end="391:19">=</operator> <call pos:start="391:21" pos:end="391:44"><name pos:start="391:21" pos:end="391:28">g_malloc</name><argument_list pos:start="391:29" pos:end="391:44">(<argument pos:start="391:30" pos:end="391:43"><expr pos:start="391:30" pos:end="391:43"><name pos:start="391:30" pos:end="391:43"><name pos:start="391:30" pos:end="391:30">s</name><operator pos:start="391:31" pos:end="391:32">-&gt;</operator><name pos:start="391:33" pos:end="391:43">header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="395:5" pos:end="395:26"><expr pos:start="395:5" pos:end="395:25"><call pos:start="395:5" pos:end="395:25"><name pos:start="395:5" pos:end="395:21">qemu_set_nonblock</name><argument_list pos:start="395:22" pos:end="395:25">(<argument pos:start="395:23" pos:end="395:24"><expr pos:start="395:23" pos:end="395:24"><name pos:start="395:23" pos:end="395:24">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="399:5" pos:end="399:15"><expr pos:start="399:5" pos:end="399:14"><name pos:start="399:5" pos:end="399:9"><name pos:start="399:5" pos:end="399:5">s</name><operator pos:start="399:6" pos:end="399:7">-&gt;</operator><name pos:start="399:8" pos:end="399:9">fd</name></name> <operator pos:start="399:11" pos:end="399:11">=</operator> <name pos:start="399:13" pos:end="399:14">fd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="401:5" pos:end="401:19"><expr pos:start="401:5" pos:end="401:18"><name pos:start="401:5" pos:end="401:14"><name pos:start="401:5" pos:end="401:5">s</name><operator pos:start="401:6" pos:end="401:7">-&gt;</operator><name pos:start="401:8" pos:end="401:14">counter</name></name> <operator pos:start="401:16" pos:end="401:16">=</operator> <literal type="number" pos:start="401:18" pos:end="401:18">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="405:5" pos:end="405:30"><expr pos:start="405:5" pos:end="405:29"><call pos:start="405:5" pos:end="405:29"><name pos:start="405:5" pos:end="405:20">l2tpv3_read_poll</name><argument_list pos:start="405:21" pos:end="405:29">(<argument pos:start="405:22" pos:end="405:22"><expr pos:start="405:22" pos:end="405:22"><name pos:start="405:22" pos:end="405:22">s</name></expr></argument>, <argument pos:start="405:25" pos:end="405:28"><expr pos:start="405:25" pos:end="405:28"><name pos:start="405:25" pos:end="405:28">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="409:5" pos:end="411:34"><expr pos:start="409:5" pos:end="411:33"><call pos:start="409:5" pos:end="411:33"><name pos:start="409:5" pos:end="409:12">snprintf</name><argument_list pos:start="409:13" pos:end="411:33">(<argument pos:start="409:14" pos:end="409:27"><expr pos:start="409:14" pos:end="409:27"><name pos:start="409:14" pos:end="409:27"><name pos:start="409:14" pos:end="409:14">s</name><operator pos:start="409:15" pos:end="409:16">-&gt;</operator><name pos:start="409:17" pos:end="409:18">nc</name><operator pos:start="409:19" pos:end="409:19">.</operator><name pos:start="409:20" pos:end="409:27">info_str</name></name></expr></argument>, <argument pos:start="409:30" pos:end="409:51"><expr pos:start="409:30" pos:end="409:51"><sizeof pos:start="409:30" pos:end="409:51">sizeof<argument_list pos:start="409:36" pos:end="409:51">(<argument pos:start="409:37" pos:end="409:50"><expr pos:start="409:37" pos:end="409:50"><name pos:start="409:37" pos:end="409:50"><name pos:start="409:37" pos:end="409:37">s</name><operator pos:start="409:38" pos:end="409:39">-&gt;</operator><name pos:start="409:40" pos:end="409:41">nc</name><operator pos:start="409:42" pos:end="409:42">.</operator><name pos:start="409:43" pos:end="409:50">info_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

             <argument pos:start="411:14" pos:end="411:32"><expr pos:start="411:14" pos:end="411:32"><literal type="string" pos:start="411:14" pos:end="411:32">"l2tpv3: connected"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="413:5" pos:end="413:13">return <expr pos:start="413:12" pos:end="413:12"><literal type="number" pos:start="413:12" pos:end="413:12">0</literal></expr>;</return>

<label pos:start="415:1" pos:end="415:7"><name pos:start="415:1" pos:end="415:6">outerr</name>:</label>

    <expr_stmt pos:start="417:5" pos:end="417:28"><expr pos:start="417:5" pos:end="417:27"><call pos:start="417:5" pos:end="417:27"><name pos:start="417:5" pos:end="417:23">qemu_del_net_client</name><argument_list pos:start="417:24" pos:end="417:27">(<argument pos:start="417:25" pos:end="417:26"><expr pos:start="417:25" pos:end="417:26"><name pos:start="417:25" pos:end="417:26">nc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="419:5" pos:end="423:5"><if pos:start="419:5" pos:end="423:5">if <condition pos:start="419:8" pos:end="419:16">(<expr pos:start="419:9" pos:end="419:15"><name pos:start="419:9" pos:end="419:10">fd</name> <operator pos:start="419:12" pos:end="419:13">&gt;=</operator> <literal type="number" pos:start="419:15" pos:end="419:15">0</literal></expr>)</condition> <block pos:start="419:18" pos:end="423:5">{<block_content pos:start="421:9" pos:end="421:18">

        <expr_stmt pos:start="421:9" pos:end="421:18"><expr pos:start="421:9" pos:end="421:17"><call pos:start="421:9" pos:end="421:17"><name pos:start="421:9" pos:end="421:13">close</name><argument_list pos:start="421:14" pos:end="421:17">(<argument pos:start="421:15" pos:end="421:16"><expr pos:start="421:15" pos:end="421:16"><name pos:start="421:15" pos:end="421:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="425:5" pos:end="429:5"><if pos:start="425:5" pos:end="429:5">if <condition pos:start="425:8" pos:end="425:15">(<expr pos:start="425:9" pos:end="425:14"><name pos:start="425:9" pos:end="425:14">result</name></expr>)</condition> <block pos:start="425:17" pos:end="429:5">{<block_content pos:start="427:9" pos:end="427:29">

        <expr_stmt pos:start="427:9" pos:end="427:29"><expr pos:start="427:9" pos:end="427:28"><call pos:start="427:9" pos:end="427:28"><name pos:start="427:9" pos:end="427:20">freeaddrinfo</name><argument_list pos:start="427:21" pos:end="427:28">(<argument pos:start="427:22" pos:end="427:27"><expr pos:start="427:22" pos:end="427:27"><name pos:start="427:22" pos:end="427:27">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="431:5" pos:end="431:14">return <expr pos:start="431:12" pos:end="431:13"><operator pos:start="431:12" pos:end="431:12">-</operator><literal type="number" pos:start="431:13" pos:end="431:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
