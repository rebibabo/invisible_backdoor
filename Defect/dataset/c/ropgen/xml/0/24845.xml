<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24845.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">vmsa_ttbcr_raw_write</name><parameter_list pos:start="1:33" pos:end="3:48">(<parameter pos:start="1:34" pos:end="1:49"><decl pos:start="1:34" pos:end="1:49"><type pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:44">CPUARMState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">env</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:73"><decl pos:start="1:52" pos:end="1:73"><type pos:start="1:52" pos:end="1:73"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:69">ARMCPRegInfo</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:73">ri</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:47"><decl pos:start="3:34" pos:end="3:47"><type pos:start="3:34" pos:end="3:47"><name pos:start="3:34" pos:end="3:41">uint64_t</name></type> <name pos:start="3:43" pos:end="3:47">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:63">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">maskshift</name> <init pos:start="7:19" pos:end="7:42">= <expr pos:start="7:21" pos:end="7:42"><call pos:start="7:21" pos:end="7:42"><name pos:start="7:21" pos:end="7:29">extract32</name><argument_list pos:start="7:30" pos:end="7:42">(<argument pos:start="7:31" pos:end="7:35"><expr pos:start="7:31" pos:end="7:35"><name pos:start="7:31" pos:end="7:35">value</name></expr></argument>, <argument pos:start="7:38" pos:end="7:38"><expr pos:start="7:38" pos:end="7:38"><literal type="number" pos:start="7:38" pos:end="7:38">0</literal></expr></argument>, <argument pos:start="7:41" pos:end="7:41"><expr pos:start="7:41" pos:end="7:41"><literal type="number" pos:start="7:41" pos:end="7:41">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:66">(<expr pos:start="11:9" pos:end="11:65"><call pos:start="11:9" pos:end="11:42"><name pos:start="11:9" pos:end="11:19">arm_feature</name><argument_list pos:start="11:20" pos:end="11:42">(<argument pos:start="11:21" pos:end="11:23"><expr pos:start="11:21" pos:end="11:23"><name pos:start="11:21" pos:end="11:23">env</name></expr></argument>, <argument pos:start="11:26" pos:end="11:41"><expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41">ARM_FEATURE_LPAE</name></expr></argument>)</argument_list></call> <operator pos:start="11:44" pos:end="11:45">&amp;&amp;</operator> <operator pos:start="11:47" pos:end="11:47">(</operator><name pos:start="11:48" pos:end="11:52">value</name> <operator pos:start="11:54" pos:end="11:54">&amp;</operator> <operator pos:start="11:56" pos:end="11:56">(</operator><literal type="number" pos:start="11:57" pos:end="11:57">1</literal> <operator pos:start="11:59" pos:end="11:60">&lt;&lt;</operator> <literal type="number" pos:start="11:62" pos:end="11:63">31</literal><operator pos:start="11:64" pos:end="11:64">)</operator><operator pos:start="11:65" pos:end="11:65">)</operator></expr>)</condition> <block pos:start="11:68" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:55">

        <expr_stmt pos:start="13:9" pos:end="13:55"><expr pos:start="13:9" pos:end="13:54"><name pos:start="13:9" pos:end="13:13">value</name> <operator pos:start="13:15" pos:end="13:16">&amp;=</operator> <operator pos:start="13:18" pos:end="13:18">~</operator><operator pos:start="13:19" pos:end="13:19">(</operator><operator pos:start="13:20" pos:end="13:20">(</operator><literal type="number" pos:start="13:21" pos:end="13:21">7</literal> <operator pos:start="13:23" pos:end="13:24">&lt;&lt;</operator> <literal type="number" pos:start="13:26" pos:end="13:27">19</literal><operator pos:start="13:28" pos:end="13:28">)</operator> <operator pos:start="13:30" pos:end="13:30">|</operator> <operator pos:start="13:32" pos:end="13:32">(</operator><literal type="number" pos:start="13:33" pos:end="13:33">3</literal> <operator pos:start="13:35" pos:end="13:36">&lt;&lt;</operator> <literal type="number" pos:start="13:38" pos:end="13:39">14</literal><operator pos:start="13:40" pos:end="13:40">)</operator> <operator pos:start="13:42" pos:end="13:42">|</operator> <operator pos:start="13:44" pos:end="13:44">(</operator><literal type="number" pos:start="13:45" pos:end="13:47">0xf</literal> <operator pos:start="13:49" pos:end="13:50">&lt;&lt;</operator> <literal type="number" pos:start="13:52" pos:end="13:52">3</literal><operator pos:start="13:53" pos:end="13:53">)</operator><operator pos:start="13:54" pos:end="13:54">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="19:5">else <block pos:start="15:12" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:19">

        <expr_stmt pos:start="17:9" pos:end="17:19"><expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:13">value</name> <operator pos:start="17:15" pos:end="17:16">&amp;=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">7</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="21:5" pos:end="29:7">/* Note that we always calculate c2_mask and c2_base_mask, but

     * they are only used for short-descriptor tables (ie if EAE is 0);

     * for long-descriptor tables the TTBCR fields are used differently

     * and the c2_mask and c2_base_mask values are meaningless.

     */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:7">env</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:13">cp15</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:24">c2_control</name></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <name pos:start="31:28" pos:end="31:32">value</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:64"><expr pos:start="33:5" pos:end="33:63"><name pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:7">env</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:13">cp15</name><operator pos:start="33:14" pos:end="33:14">.</operator><name pos:start="33:15" pos:end="33:21">c2_mask</name></name> <operator pos:start="33:23" pos:end="33:23">=</operator> <operator pos:start="33:25" pos:end="33:25">~</operator><operator pos:start="33:26" pos:end="33:26">(</operator><operator pos:start="33:27" pos:end="33:27">(</operator><operator pos:start="33:28" pos:end="33:28">(</operator><name pos:start="33:29" pos:end="33:36">uint32_t</name><operator pos:start="33:37" pos:end="33:37">)</operator><literal type="number" pos:start="33:38" pos:end="33:48">0xffffffffu</literal><operator pos:start="33:49" pos:end="33:49">)</operator> <operator pos:start="33:51" pos:end="33:52">&gt;&gt;</operator> <name pos:start="33:54" pos:end="33:62">maskshift</name><operator pos:start="33:63" pos:end="33:63">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:63"><expr pos:start="35:5" pos:end="35:62"><name pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:7">env</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:13">cp15</name><operator pos:start="35:14" pos:end="35:14">.</operator><name pos:start="35:15" pos:end="35:26">c2_base_mask</name></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <operator pos:start="35:30" pos:end="35:30">~</operator><operator pos:start="35:31" pos:end="35:31">(</operator><operator pos:start="35:32" pos:end="35:32">(</operator><name pos:start="35:33" pos:end="35:40">uint32_t</name><operator pos:start="35:41" pos:end="35:41">)</operator><literal type="number" pos:start="35:42" pos:end="35:48">0x3fffu</literal> <operator pos:start="35:50" pos:end="35:51">&gt;&gt;</operator> <name pos:start="35:53" pos:end="35:61">maskshift</name><operator pos:start="35:62" pos:end="35:62">)</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
