<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10196.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:28">s390_cpu_exec_interrupt</name><parameter_list pos:start="1:29" pos:end="1:65">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:37">CPUState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">cs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:64"><decl pos:start="1:44" pos:end="1:64"><type pos:start="1:44" pos:end="1:64"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:64">interrupt_request</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:17">

    <if_stmt pos:start="5:5" pos:end="31:5"><if pos:start="5:5" pos:end="31:5">if <condition pos:start="5:8" pos:end="5:47">(<expr pos:start="5:9" pos:end="5:46"><name pos:start="5:9" pos:end="5:25">interrupt_request</name> <operator pos:start="5:27" pos:end="5:27">&amp;</operator> <name pos:start="5:29" pos:end="5:46">CPU_INTERRUPT_HARD</name></expr>)</condition> <block pos:start="5:49" pos:end="31:5">{<block_content pos:start="7:9" pos:end="29:9">

        <decl_stmt pos:start="7:9" pos:end="7:36"><decl pos:start="7:9" pos:end="7:35"><type pos:start="7:9" pos:end="7:17"><name pos:start="7:9" pos:end="7:15">S390CPU</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">cpu</name> <init pos:start="7:22" pos:end="7:35">= <expr pos:start="7:24" pos:end="7:35"><call pos:start="7:24" pos:end="7:35"><name pos:start="7:24" pos:end="7:31">S390_CPU</name><argument_list pos:start="7:32" pos:end="7:35">(<argument pos:start="7:33" pos:end="7:34"><expr pos:start="7:33" pos:end="7:34"><name pos:start="7:33" pos:end="7:34">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="9:9" pos:end="9:39"><decl pos:start="9:9" pos:end="9:38"><type pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:21">CPUS390XState</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:26">env</name> <init pos:start="9:28" pos:end="9:38">= <expr pos:start="9:30" pos:end="9:38"><operator pos:start="9:30" pos:end="9:30">&amp;</operator><name pos:start="9:31" pos:end="9:38"><name pos:start="9:31" pos:end="9:33">cpu</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:38">env</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="13:9" pos:end="21:9"><if pos:start="13:9" pos:end="21:9">if <condition pos:start="13:12" pos:end="13:26">(<expr pos:start="13:13" pos:end="13:25"><name pos:start="13:13" pos:end="13:25"><name pos:start="13:13" pos:end="13:15">env</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:25">ex_value</name></name></expr>)</condition> <block pos:start="13:28" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:25">

            <comment type="block" pos:start="15:13" pos:end="17:43">/* Execution of the target insn is indivisible from

               the parent EXECUTE insn.  */</comment>

            <return pos:start="19:13" pos:end="19:25">return <expr pos:start="19:20" pos:end="19:24"><name pos:start="19:20" pos:end="19:24">false</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:41">(<expr pos:start="23:13" pos:end="23:40"><name pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:15">env</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:20">psw</name><operator pos:start="23:21" pos:end="23:21">.</operator><name pos:start="23:22" pos:end="23:25">mask</name></name> <operator pos:start="23:27" pos:end="23:27">&amp;</operator> <name pos:start="23:29" pos:end="23:40">PSW_MASK_EXT</name></expr>)</condition> <block pos:start="23:43" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:24">

            <expr_stmt pos:start="25:13" pos:end="25:38"><expr pos:start="25:13" pos:end="25:37"><call pos:start="25:13" pos:end="25:37"><name pos:start="25:13" pos:end="25:33">s390_cpu_do_interrupt</name><argument_list pos:start="25:34" pos:end="25:37">(<argument pos:start="25:35" pos:end="25:36"><expr pos:start="25:35" pos:end="25:36"><name pos:start="25:35" pos:end="25:36">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:24">return <expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">true</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="33:5" pos:end="33:17">return <expr pos:start="33:12" pos:end="33:16"><name pos:start="33:12" pos:end="33:16">false</name></expr>;</return>

</block_content>}</block></function>
</unit>
