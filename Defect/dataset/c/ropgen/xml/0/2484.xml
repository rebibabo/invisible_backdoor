<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2484.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">qcow_aio_write_cb</name><parameter_list pos:start="1:30" pos:end="1:52">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:51"><decl pos:start="1:45" pos:end="1:51"><type pos:start="1:45" pos:end="1:51"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:51">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="159:1">{<block_content pos:start="5:5" pos:end="157:26">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">QCowAIOCB</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">acb</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">bs</name> <init pos:start="7:26" pos:end="7:41">= <expr pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:30">acb</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:38">common</name><operator pos:start="7:39" pos:end="7:39">.</operator><name pos:start="7:40" pos:end="7:41">bs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">BDRVQcowState</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:20">s</name> <init pos:start="9:22" pos:end="9:33">= <expr pos:start="9:24" pos:end="9:33"><name pos:start="9:24" pos:end="9:33"><name pos:start="9:24" pos:end="9:25">bs</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:24">index_in_cluster</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:26">src_buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">n_end</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:25"><expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:7">acb</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:17">hd_aiocb</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:24">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:17">(<expr pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:14">&gt;=</operator> <literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>)</condition> <block pos:start="23:19" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:81">

        <expr_stmt pos:start="25:9" pos:end="25:81"><expr pos:start="25:9" pos:end="25:80"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:80"><name pos:start="25:15" pos:end="25:41">qcow2_alloc_cluster_link_l2</name><argument_list pos:start="25:42" pos:end="25:80">(<argument pos:start="25:43" pos:end="25:44"><expr pos:start="25:43" pos:end="25:44"><name pos:start="25:43" pos:end="25:44">bs</name></expr></argument>, <argument pos:start="25:47" pos:end="25:65"><expr pos:start="25:47" pos:end="25:65"><name pos:start="25:47" pos:end="25:65"><name pos:start="25:47" pos:end="25:49">acb</name><operator pos:start="25:50" pos:end="25:51">-&gt;</operator><name pos:start="25:52" pos:end="25:65">cluster_offset</name></name></expr></argument>, <argument pos:start="25:68" pos:end="25:79"><expr pos:start="25:68" pos:end="25:79"><operator pos:start="25:68" pos:end="25:68">&amp;</operator><name pos:start="25:69" pos:end="25:79"><name pos:start="25:69" pos:end="25:71">acb</name><operator pos:start="25:72" pos:end="25:73">-&gt;</operator><name pos:start="25:74" pos:end="25:79">l2meta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><call pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:26">run_dependent_requests</name><argument_list pos:start="31:27" pos:end="31:40">(<argument pos:start="31:28" pos:end="31:39"><expr pos:start="31:28" pos:end="31:39"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:39"><name pos:start="31:29" pos:end="31:31">acb</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:39">l2meta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="37:18"><if pos:start="35:5" pos:end="37:18">if <condition pos:start="35:8" pos:end="35:16">(<expr pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">&lt;</operator> <literal type="number" pos:start="35:15" pos:end="35:15">0</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:18"><block_content pos:start="37:9" pos:end="37:18">

        <goto pos:start="37:9" pos:end="37:18">goto <name pos:start="37:14" pos:end="37:17">done</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:7">acb</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:19">nb_sectors</name></name> <operator pos:start="41:21" pos:end="41:22">-=</operator> <name pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:26">acb</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:29">n</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:7">acb</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:19">sector_num</name></name> <operator pos:start="43:21" pos:end="43:22">+=</operator> <name pos:start="43:24" pos:end="43:29"><name pos:start="43:24" pos:end="43:26">acb</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:29">n</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:12"><name pos:start="45:5" pos:end="45:7">acb</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:12">buf</name></name> <operator pos:start="45:14" pos:end="45:15">+=</operator> <name pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:19">acb</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:22">n</name></name> <operator pos:start="45:24" pos:end="45:24">*</operator> <literal type="number" pos:start="45:26" pos:end="45:28">512</literal></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="57:5">if <condition pos:start="49:8" pos:end="49:29">(<expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:11">acb</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:23">nb_sectors</name></name> <operator pos:start="49:25" pos:end="49:26">==</operator> <literal type="number" pos:start="49:28" pos:end="49:28">0</literal></expr>)</condition> <block pos:start="49:31" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:18">

        <comment type="block" pos:start="51:9" pos:end="51:31">/* request completed */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:16"><expr pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <literal type="number" pos:start="53:15" pos:end="53:15">0</literal></expr>;</expr_stmt>

        <goto pos:start="55:9" pos:end="55:18">goto <name pos:start="55:14" pos:end="55:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:66"><expr pos:start="61:5" pos:end="61:65"><name pos:start="61:5" pos:end="61:20">index_in_cluster</name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:38"><name pos:start="61:24" pos:end="61:26">acb</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:38">sector_num</name></name> <operator pos:start="61:40" pos:end="61:40">&amp;</operator> <operator pos:start="61:42" pos:end="61:42">(</operator><name pos:start="61:43" pos:end="61:60"><name pos:start="61:43" pos:end="61:43">s</name><operator pos:start="61:44" pos:end="61:45">-&gt;</operator><name pos:start="61:46" pos:end="61:60">cluster_sectors</name></name> <operator pos:start="61:62" pos:end="61:62">-</operator> <literal type="number" pos:start="61:64" pos:end="61:64">1</literal><operator pos:start="61:65" pos:end="61:65">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:47"><expr pos:start="63:5" pos:end="63:46"><name pos:start="63:5" pos:end="63:9">n_end</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <name pos:start="63:13" pos:end="63:28">index_in_cluster</name> <operator pos:start="63:30" pos:end="63:30">+</operator> <name pos:start="63:32" pos:end="63:46"><name pos:start="63:32" pos:end="63:34">acb</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:46">nb_sectors</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="69:61"><if pos:start="65:5" pos:end="69:61">if <condition pos:start="65:8" pos:end="67:61">(<expr pos:start="65:9" pos:end="67:60"><name pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:23">crypt_method</name></name> <operator pos:start="65:25" pos:end="65:26">&amp;&amp;</operator>

        <name pos:start="67:9" pos:end="67:13">n_end</name> <operator pos:start="67:15" pos:end="67:15">&gt;</operator> <name pos:start="67:17" pos:end="67:39">QCOW_MAX_CRYPT_CLUSTERS</name> <operator pos:start="67:41" pos:end="67:41">*</operator> <name pos:start="67:43" pos:end="67:60"><name pos:start="67:43" pos:end="67:43">s</name><operator pos:start="67:44" pos:end="67:45">-&gt;</operator><name pos:start="67:46" pos:end="67:60">cluster_sectors</name></name></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:61"><block_content pos:start="69:9" pos:end="69:61">

        <expr_stmt pos:start="69:9" pos:end="69:61"><expr pos:start="69:9" pos:end="69:60"><name pos:start="69:9" pos:end="69:13">n_end</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <name pos:start="69:17" pos:end="69:39">QCOW_MAX_CRYPT_CLUSTERS</name> <operator pos:start="69:41" pos:end="69:41">*</operator> <name pos:start="69:43" pos:end="69:60"><name pos:start="69:43" pos:end="69:43">s</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:60">cluster_sectors</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="77:72"><expr pos:start="73:5" pos:end="77:71"><name pos:start="73:5" pos:end="73:23"><name pos:start="73:5" pos:end="73:7">acb</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:23">cluster_offset</name></name> <operator pos:start="73:25" pos:end="73:25">=</operator> <call pos:start="73:27" pos:end="77:71"><name pos:start="73:27" pos:end="73:52">qcow2_alloc_cluster_offset</name><argument_list pos:start="73:53" pos:end="77:71">(<argument pos:start="73:54" pos:end="73:55"><expr pos:start="73:54" pos:end="73:55"><name pos:start="73:54" pos:end="73:55">bs</name></expr></argument>, <argument pos:start="73:58" pos:end="73:77"><expr pos:start="73:58" pos:end="73:77"><name pos:start="73:58" pos:end="73:72"><name pos:start="73:58" pos:end="73:60">acb</name><operator pos:start="73:61" pos:end="73:62">-&gt;</operator><name pos:start="73:63" pos:end="73:72">sector_num</name></name> <operator pos:start="73:74" pos:end="73:75">&lt;&lt;</operator> <literal type="number" pos:start="73:77" pos:end="73:77">9</literal></expr></argument>,

                                          <argument pos:start="75:43" pos:end="75:58"><expr pos:start="75:43" pos:end="75:58"><name pos:start="75:43" pos:end="75:58">index_in_cluster</name></expr></argument>,

                                          <argument pos:start="77:43" pos:end="77:47"><expr pos:start="77:43" pos:end="77:47"><name pos:start="77:43" pos:end="77:47">n_end</name></expr></argument>, <argument pos:start="77:50" pos:end="77:56"><expr pos:start="77:50" pos:end="77:56"><operator pos:start="77:50" pos:end="77:50">&amp;</operator><name pos:start="77:51" pos:end="77:56"><name pos:start="77:51" pos:end="77:53">acb</name><operator pos:start="77:54" pos:end="77:55">-&gt;</operator><name pos:start="77:56" pos:end="77:56">n</name></name></expr></argument>, <argument pos:start="77:59" pos:end="77:70"><expr pos:start="77:59" pos:end="77:70"><operator pos:start="77:59" pos:end="77:59">&amp;</operator><name pos:start="77:60" pos:end="77:70"><name pos:start="77:60" pos:end="77:62">acb</name><operator pos:start="77:63" pos:end="77:64">-&gt;</operator><name pos:start="77:65" pos:end="77:70">l2meta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:71">/* Need to wait for another request? If so, we are done for now. */</comment>

    <if_stmt pos:start="83:5" pos:end="91:5"><if pos:start="83:5" pos:end="91:5">if <condition pos:start="83:8" pos:end="83:63">(<expr pos:start="83:9" pos:end="83:62"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:28"><name pos:start="83:10" pos:end="83:12">acb</name><operator pos:start="83:13" pos:end="83:14">-&gt;</operator><name pos:start="83:15" pos:end="83:28">cluster_offset</name></name> <operator pos:start="83:30" pos:end="83:31">&amp;&amp;</operator> <name pos:start="83:33" pos:end="83:54"><name pos:start="83:33" pos:end="83:35">acb</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:43">l2meta</name><operator pos:start="83:44" pos:end="83:44">.</operator><name pos:start="83:45" pos:end="83:54">depends_on</name></name> <operator pos:start="83:56" pos:end="83:57">!=</operator> <name pos:start="83:59" pos:end="83:62">NULL</name></expr>)</condition> <block pos:start="83:65" pos:end="91:5">{<block_content pos:start="85:9" pos:end="89:15">

        <expr_stmt pos:start="85:9" pos:end="87:30"><expr pos:start="85:9" pos:end="87:29"><call pos:start="85:9" pos:end="87:29"><name pos:start="85:9" pos:end="85:24">LIST_INSERT_HEAD</name><argument_list pos:start="85:25" pos:end="87:29">(<argument pos:start="85:26" pos:end="85:68"><expr pos:start="85:26" pos:end="85:68"><operator pos:start="85:26" pos:end="85:26">&amp;</operator><name pos:start="85:27" pos:end="85:68"><name pos:start="85:27" pos:end="85:29">acb</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:37">l2meta</name><operator pos:start="85:38" pos:end="85:38">.</operator><name pos:start="85:39" pos:end="85:48">depends_on</name><operator pos:start="85:49" pos:end="85:50">-&gt;</operator><name pos:start="85:51" pos:end="85:68">dependent_requests</name></name></expr></argument>,

            <argument pos:start="87:13" pos:end="87:15"><expr pos:start="87:13" pos:end="87:15"><name pos:start="87:13" pos:end="87:15">acb</name></expr></argument>, <argument pos:start="87:18" pos:end="87:28"><expr pos:start="87:18" pos:end="87:28"><name pos:start="87:18" pos:end="87:28">next_depend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="89:9" pos:end="89:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="95:5" pos:end="101:5"><if pos:start="95:5" pos:end="101:5">if <condition pos:start="95:8" pos:end="95:65">(<expr pos:start="95:9" pos:end="95:64"><operator pos:start="95:9" pos:end="95:9">!</operator><name pos:start="95:10" pos:end="95:28"><name pos:start="95:10" pos:end="95:12">acb</name><operator pos:start="95:13" pos:end="95:14">-&gt;</operator><name pos:start="95:15" pos:end="95:28">cluster_offset</name></name> <operator pos:start="95:30" pos:end="95:31">||</operator> <operator pos:start="95:33" pos:end="95:33">(</operator><name pos:start="95:34" pos:end="95:52"><name pos:start="95:34" pos:end="95:36">acb</name><operator pos:start="95:37" pos:end="95:38">-&gt;</operator><name pos:start="95:39" pos:end="95:52">cluster_offset</name></name> <operator pos:start="95:54" pos:end="95:54">&amp;</operator> <literal type="number" pos:start="95:56" pos:end="95:58">511</literal><operator pos:start="95:59" pos:end="95:59">)</operator> <operator pos:start="95:61" pos:end="95:62">!=</operator> <literal type="number" pos:start="95:64" pos:end="95:64">0</literal></expr>)</condition> <block pos:start="95:67" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:18">

        <expr_stmt pos:start="97:9" pos:end="97:19"><expr pos:start="97:9" pos:end="97:18"><name pos:start="97:9" pos:end="97:11">ret</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <operator pos:start="97:15" pos:end="97:15">-</operator><name pos:start="97:16" pos:end="97:18">EIO</name></expr>;</expr_stmt>

        <goto pos:start="99:9" pos:end="99:18">goto <name pos:start="99:14" pos:end="99:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="103:5" pos:end="123:5"><if pos:start="103:5" pos:end="119:5">if <condition pos:start="103:8" pos:end="103:24">(<expr pos:start="103:9" pos:end="103:23"><name pos:start="103:9" pos:end="103:23"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:23">crypt_method</name></name></expr>)</condition> <block pos:start="103:26" pos:end="119:5">{<block_content pos:start="105:9" pos:end="117:36">

        <if_stmt pos:start="105:9" pos:end="111:9"><if pos:start="105:9" pos:end="111:9">if <condition pos:start="105:12" pos:end="105:31">(<expr pos:start="105:13" pos:end="105:30"><operator pos:start="105:13" pos:end="105:13">!</operator><name pos:start="105:14" pos:end="105:30"><name pos:start="105:14" pos:end="105:16">acb</name><operator pos:start="105:17" pos:end="105:18">-&gt;</operator><name pos:start="105:19" pos:end="105:30">cluster_data</name></name></expr>)</condition> <block pos:start="105:33" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:62">

            <expr_stmt pos:start="107:13" pos:end="109:62"><expr pos:start="107:13" pos:end="109:61"><name pos:start="107:13" pos:end="107:29"><name pos:start="107:13" pos:end="107:15">acb</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:29">cluster_data</name></name> <operator pos:start="107:31" pos:end="107:31">=</operator> <call pos:start="107:33" pos:end="109:61"><name pos:start="107:33" pos:end="107:44">qemu_mallocz</name><argument_list pos:start="107:45" pos:end="109:61">(<argument pos:start="107:46" pos:end="109:60"><expr pos:start="107:46" pos:end="109:60"><name pos:start="107:46" pos:end="107:68">QCOW_MAX_CRYPT_CLUSTERS</name> <operator pos:start="107:70" pos:end="107:70">*</operator>

                                             <name pos:start="109:46" pos:end="109:60"><name pos:start="109:46" pos:end="109:46">s</name><operator pos:start="109:47" pos:end="109:48">-&gt;</operator><name pos:start="109:49" pos:end="109:60">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="115:56"><expr pos:start="113:9" pos:end="115:55"><call pos:start="113:9" pos:end="115:55"><name pos:start="113:9" pos:end="113:29">qcow2_encrypt_sectors</name><argument_list pos:start="113:30" pos:end="115:55">(<argument pos:start="113:31" pos:end="113:31"><expr pos:start="113:31" pos:end="113:31"><name pos:start="113:31" pos:end="113:31">s</name></expr></argument>, <argument pos:start="113:34" pos:end="113:48"><expr pos:start="113:34" pos:end="113:48"><name pos:start="113:34" pos:end="113:48"><name pos:start="113:34" pos:end="113:36">acb</name><operator pos:start="113:37" pos:end="113:38">-&gt;</operator><name pos:start="113:39" pos:end="113:48">sector_num</name></name></expr></argument>, <argument pos:start="113:51" pos:end="113:67"><expr pos:start="113:51" pos:end="113:67"><name pos:start="113:51" pos:end="113:67"><name pos:start="113:51" pos:end="113:53">acb</name><operator pos:start="113:54" pos:end="113:55">-&gt;</operator><name pos:start="113:56" pos:end="113:67">cluster_data</name></name></expr></argument>, <argument pos:start="113:70" pos:end="113:77"><expr pos:start="113:70" pos:end="113:77"><name pos:start="113:70" pos:end="113:77"><name pos:start="113:70" pos:end="113:72">acb</name><operator pos:start="113:73" pos:end="113:74">-&gt;</operator><name pos:start="113:75" pos:end="113:77">buf</name></name></expr></argument>,

                        <argument pos:start="115:25" pos:end="115:30"><expr pos:start="115:25" pos:end="115:30"><name pos:start="115:25" pos:end="115:30"><name pos:start="115:25" pos:end="115:27">acb</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:30">n</name></name></expr></argument>, <argument pos:start="115:33" pos:end="115:33"><expr pos:start="115:33" pos:end="115:33"><literal type="number" pos:start="115:33" pos:end="115:33">1</literal></expr></argument>, <argument pos:start="115:36" pos:end="115:54"><expr pos:start="115:36" pos:end="115:54"><operator pos:start="115:36" pos:end="115:36">&amp;</operator><name pos:start="115:37" pos:end="115:54"><name pos:start="115:37" pos:end="115:37">s</name><operator pos:start="115:38" pos:end="115:39">-&gt;</operator><name pos:start="115:40" pos:end="115:54">aes_encrypt_key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:36"><expr pos:start="117:9" pos:end="117:35"><name pos:start="117:9" pos:end="117:15">src_buf</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <name pos:start="117:19" pos:end="117:35"><name pos:start="117:19" pos:end="117:21">acb</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:35">cluster_data</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="119:7" pos:end="123:5">else <block pos:start="119:12" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:27">

        <expr_stmt pos:start="121:9" pos:end="121:27"><expr pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:15">src_buf</name> <operator pos:start="121:17" pos:end="121:17">=</operator> <name pos:start="121:19" pos:end="121:26"><name pos:start="121:19" pos:end="121:21">acb</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:26">buf</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:43"><expr pos:start="125:5" pos:end="125:42"><name pos:start="125:5" pos:end="125:24"><name pos:start="125:5" pos:end="125:7">acb</name><operator pos:start="125:8" pos:end="125:9">-&gt;</operator><name pos:start="125:10" pos:end="125:15">hd_iov</name><operator pos:start="125:16" pos:end="125:16">.</operator><name pos:start="125:17" pos:end="125:24">iov_base</name></name> <operator pos:start="125:26" pos:end="125:26">=</operator> <operator pos:start="125:28" pos:end="125:28">(</operator><name pos:start="125:29" pos:end="125:32">void</name> <operator pos:start="125:34" pos:end="125:34">*</operator><operator pos:start="125:35" pos:end="125:35">)</operator><name pos:start="125:36" pos:end="125:42">src_buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:39"><expr pos:start="127:5" pos:end="127:38"><name pos:start="127:5" pos:end="127:23"><name pos:start="127:5" pos:end="127:7">acb</name><operator pos:start="127:8" pos:end="127:9">-&gt;</operator><name pos:start="127:10" pos:end="127:15">hd_iov</name><operator pos:start="127:16" pos:end="127:16">.</operator><name pos:start="127:17" pos:end="127:23">iov_len</name></name> <operator pos:start="127:25" pos:end="127:25">=</operator> <name pos:start="127:27" pos:end="127:32"><name pos:start="127:27" pos:end="127:29">acb</name><operator pos:start="127:30" pos:end="127:31">-&gt;</operator><name pos:start="127:32" pos:end="127:32">n</name></name> <operator pos:start="127:34" pos:end="127:34">*</operator> <literal type="number" pos:start="127:36" pos:end="127:38">512</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:61"><expr pos:start="129:5" pos:end="129:60"><call pos:start="129:5" pos:end="129:60"><name pos:start="129:5" pos:end="129:28">qemu_iovec_init_external</name><argument_list pos:start="129:29" pos:end="129:60">(<argument pos:start="129:30" pos:end="129:42"><expr pos:start="129:30" pos:end="129:42"><operator pos:start="129:30" pos:end="129:30">&amp;</operator><name pos:start="129:31" pos:end="129:42"><name pos:start="129:31" pos:end="129:33">acb</name><operator pos:start="129:34" pos:end="129:35">-&gt;</operator><name pos:start="129:36" pos:end="129:42">hd_qiov</name></name></expr></argument>, <argument pos:start="129:45" pos:end="129:56"><expr pos:start="129:45" pos:end="129:56"><operator pos:start="129:45" pos:end="129:45">&amp;</operator><name pos:start="129:46" pos:end="129:56"><name pos:start="129:46" pos:end="129:48">acb</name><operator pos:start="129:49" pos:end="129:50">-&gt;</operator><name pos:start="129:51" pos:end="129:56">hd_iov</name></name></expr></argument>, <argument pos:start="129:59" pos:end="129:59"><expr pos:start="129:59" pos:end="129:59"><literal type="number" pos:start="129:59" pos:end="129:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="137:60"><expr pos:start="131:5" pos:end="137:59"><name pos:start="131:5" pos:end="131:17"><name pos:start="131:5" pos:end="131:7">acb</name><operator pos:start="131:8" pos:end="131:9">-&gt;</operator><name pos:start="131:10" pos:end="131:17">hd_aiocb</name></name> <operator pos:start="131:19" pos:end="131:19">=</operator> <call pos:start="131:21" pos:end="137:59"><name pos:start="131:21" pos:end="131:35">bdrv_aio_writev</name><argument_list pos:start="131:36" pos:end="137:59">(<argument pos:start="131:37" pos:end="131:41"><expr pos:start="131:37" pos:end="131:41"><name pos:start="131:37" pos:end="131:41"><name pos:start="131:37" pos:end="131:37">s</name><operator pos:start="131:38" pos:end="131:39">-&gt;</operator><name pos:start="131:40" pos:end="131:41">hd</name></name></expr></argument>,

                                    <argument pos:start="133:37" pos:end="133:81"><expr pos:start="133:37" pos:end="133:81"><operator pos:start="133:37" pos:end="133:37">(</operator><name pos:start="133:38" pos:end="133:56"><name pos:start="133:38" pos:end="133:40">acb</name><operator pos:start="133:41" pos:end="133:42">-&gt;</operator><name pos:start="133:43" pos:end="133:56">cluster_offset</name></name> <operator pos:start="133:58" pos:end="133:59">&gt;&gt;</operator> <literal type="number" pos:start="133:61" pos:end="133:61">9</literal><operator pos:start="133:62" pos:end="133:62">)</operator> <operator pos:start="133:64" pos:end="133:64">+</operator> <name pos:start="133:66" pos:end="133:81">index_in_cluster</name></expr></argument>,

                                    <argument pos:start="135:37" pos:end="135:49"><expr pos:start="135:37" pos:end="135:49"><operator pos:start="135:37" pos:end="135:37">&amp;</operator><name pos:start="135:38" pos:end="135:49"><name pos:start="135:38" pos:end="135:40">acb</name><operator pos:start="135:41" pos:end="135:42">-&gt;</operator><name pos:start="135:43" pos:end="135:49">hd_qiov</name></name></expr></argument>, <argument pos:start="135:52" pos:end="135:57"><expr pos:start="135:52" pos:end="135:57"><name pos:start="135:52" pos:end="135:57"><name pos:start="135:52" pos:end="135:54">acb</name><operator pos:start="135:55" pos:end="135:56">-&gt;</operator><name pos:start="135:57" pos:end="135:57">n</name></name></expr></argument>,

                                    <argument pos:start="137:37" pos:end="137:53"><expr pos:start="137:37" pos:end="137:53"><name pos:start="137:37" pos:end="137:53">qcow_aio_write_cb</name></expr></argument>, <argument pos:start="137:56" pos:end="137:58"><expr pos:start="137:56" pos:end="137:58"><name pos:start="137:56" pos:end="137:58">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="139:5" pos:end="141:18"><if pos:start="139:5" pos:end="141:18">if <condition pos:start="139:8" pos:end="139:30">(<expr pos:start="139:9" pos:end="139:29"><name pos:start="139:9" pos:end="139:21"><name pos:start="139:9" pos:end="139:11">acb</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:21">hd_aiocb</name></name> <operator pos:start="139:23" pos:end="139:24">==</operator> <name pos:start="139:26" pos:end="139:29">NULL</name></expr>)</condition><block type="pseudo" pos:start="141:9" pos:end="141:18"><block_content pos:start="141:9" pos:end="141:18">

        <goto pos:start="141:9" pos:end="141:18">goto <name pos:start="141:14" pos:end="141:17">done</name>;</goto></block_content></block></if></if_stmt>



    <return pos:start="145:5" pos:end="145:11">return;</return>



<label pos:start="149:1" pos:end="149:5"><name pos:start="149:1" pos:end="149:4">done</name>:</label>

    <if_stmt pos:start="151:5" pos:end="153:34"><if pos:start="151:5" pos:end="153:34">if <condition pos:start="151:8" pos:end="151:28">(<expr pos:start="151:9" pos:end="151:27"><name pos:start="151:9" pos:end="151:23"><name pos:start="151:9" pos:end="151:11">acb</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:17">qiov</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:23">niov</name></name> <operator pos:start="151:25" pos:end="151:25">&gt;</operator> <literal type="number" pos:start="151:27" pos:end="151:27">1</literal></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:34"><block_content pos:start="153:9" pos:end="153:34">

        <expr_stmt pos:start="153:9" pos:end="153:34"><expr pos:start="153:9" pos:end="153:33"><call pos:start="153:9" pos:end="153:33"><name pos:start="153:9" pos:end="153:18">qemu_vfree</name><argument_list pos:start="153:19" pos:end="153:33">(<argument pos:start="153:20" pos:end="153:32"><expr pos:start="153:20" pos:end="153:32"><name pos:start="153:20" pos:end="153:32"><name pos:start="153:20" pos:end="153:22">acb</name><operator pos:start="153:23" pos:end="153:24">-&gt;</operator><name pos:start="153:25" pos:end="153:32">orig_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:44"><expr pos:start="155:5" pos:end="155:43"><call pos:start="155:5" pos:end="155:43"><name pos:start="155:5" pos:end="155:18"><name pos:start="155:5" pos:end="155:7">acb</name><operator pos:start="155:8" pos:end="155:9">-&gt;</operator><name pos:start="155:10" pos:end="155:15">common</name><operator pos:start="155:16" pos:end="155:16">.</operator><name pos:start="155:17" pos:end="155:18">cb</name></name><argument_list pos:start="155:19" pos:end="155:43">(<argument pos:start="155:20" pos:end="155:37"><expr pos:start="155:20" pos:end="155:37"><name pos:start="155:20" pos:end="155:37"><name pos:start="155:20" pos:end="155:22">acb</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:30">common</name><operator pos:start="155:31" pos:end="155:31">.</operator><name pos:start="155:32" pos:end="155:37">opaque</name></name></expr></argument>, <argument pos:start="155:40" pos:end="155:42"><expr pos:start="155:40" pos:end="155:42"><name pos:start="155:40" pos:end="155:42">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:26"><expr pos:start="157:5" pos:end="157:25"><call pos:start="157:5" pos:end="157:25"><name pos:start="157:5" pos:end="157:20">qemu_aio_release</name><argument_list pos:start="157:21" pos:end="157:25">(<argument pos:start="157:22" pos:end="157:24"><expr pos:start="157:22" pos:end="157:24"><name pos:start="157:22" pos:end="157:24">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
