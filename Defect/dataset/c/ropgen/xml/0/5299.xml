<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5299.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">joint_decode</name><parameter_list pos:start="1:24" pos:end="3:44">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:35">COOKContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">q</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:53">COOKSubpacket</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">p</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:76"><decl pos:start="1:59" pos:end="1:76"><type pos:start="1:59" pos:end="1:76"><name pos:start="1:59" pos:end="1:63">float</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:76">mlt_buffer1</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:43"><decl pos:start="3:26" pos:end="3:43"><type pos:start="3:26" pos:end="3:43"><name pos:start="3:26" pos:end="3:30">float</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:43">mlt_buffer2</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="81:1">{<block_content pos:start="7:5" pos:end="79:13">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:17">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:34"><name pos:start="9:9" pos:end="9:20">decouple_tab</name><index pos:start="9:21" pos:end="9:34">[<expr pos:start="9:22" pos:end="9:33"><name pos:start="9:22" pos:end="9:33">SUBBAND_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">float</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:24">decode_buffer</name> <init pos:start="11:26" pos:end="11:45">= <expr pos:start="11:28" pos:end="11:45"><name pos:start="11:28" pos:end="11:45"><name pos:start="11:28" pos:end="11:28">q</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:45">decode_buffer_0</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">idx</name></decl>, <decl pos:start="13:14" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:20">cpl_tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:9">float</name></type> <name pos:start="15:11" pos:end="15:12">f1</name></decl>, <decl pos:start="15:15" pos:end="15:16"><type ref="prev" pos:start="15:5" pos:end="15:9"/><name pos:start="15:15" pos:end="15:16">f2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:17"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:15">float</name> <modifier pos:start="17:17" pos:end="17:17">*</modifier></type><name pos:start="17:18" pos:end="17:25">cplscale</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:50"><expr pos:start="21:5" pos:end="21:49"><call pos:start="21:5" pos:end="21:49"><name pos:start="21:5" pos:end="21:10">memset</name><argument_list pos:start="21:11" pos:end="21:49">(<argument pos:start="21:12" pos:end="21:23"><expr pos:start="21:12" pos:end="21:23"><name pos:start="21:12" pos:end="21:23">decouple_tab</name></expr></argument>, <argument pos:start="21:26" pos:end="21:26"><expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr></argument>, <argument pos:start="21:29" pos:end="21:48"><expr pos:start="21:29" pos:end="21:48"><sizeof pos:start="21:29" pos:end="21:48">sizeof<argument_list pos:start="21:35" pos:end="21:48">(<argument pos:start="21:36" pos:end="21:47"><expr pos:start="21:36" pos:end="21:47"><name pos:start="21:36" pos:end="21:47">decouple_tab</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:57"><expr pos:start="23:5" pos:end="23:56"><call pos:start="23:5" pos:end="23:56"><name pos:start="23:5" pos:end="23:10">memset</name><argument_list pos:start="23:11" pos:end="23:56">(<argument pos:start="23:12" pos:end="23:24"><expr pos:start="23:12" pos:end="23:24"><name pos:start="23:12" pos:end="23:24">decode_buffer</name></expr></argument>, <argument pos:start="23:27" pos:end="23:27"><expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">0</literal></expr></argument>, <argument pos:start="23:30" pos:end="23:55"><expr pos:start="23:30" pos:end="23:55"><sizeof pos:start="23:30" pos:end="23:55">sizeof<argument_list pos:start="23:36" pos:end="23:55">(<argument pos:start="23:37" pos:end="23:54"><expr pos:start="23:37" pos:end="23:54"><name pos:start="23:37" pos:end="23:54"><name pos:start="23:37" pos:end="23:37">q</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:54">decode_buffer_0</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:47">/* Make sure the buffers are zeroed out. */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:56"><expr pos:start="29:5" pos:end="29:55"><call pos:start="29:5" pos:end="29:55"><name pos:start="29:5" pos:end="29:10">memset</name><argument_list pos:start="29:11" pos:end="29:55">(<argument pos:start="29:12" pos:end="29:22"><expr pos:start="29:12" pos:end="29:22"><name pos:start="29:12" pos:end="29:22">mlt_buffer1</name></expr></argument>, <argument pos:start="29:25" pos:end="29:25"><expr pos:start="29:25" pos:end="29:25"><literal type="number" pos:start="29:25" pos:end="29:25">0</literal></expr></argument>, <argument pos:start="29:28" pos:end="29:54"><expr pos:start="29:28" pos:end="29:54"><literal type="number" pos:start="29:28" pos:end="29:31">1024</literal> <operator pos:start="29:33" pos:end="29:33">*</operator> <sizeof pos:start="29:35" pos:end="29:54">sizeof<argument_list pos:start="29:41" pos:end="29:54">(<argument pos:start="29:42" pos:end="29:53"><expr pos:start="29:42" pos:end="29:53"><operator pos:start="29:42" pos:end="29:42">*</operator><name pos:start="29:43" pos:end="29:53">mlt_buffer1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:56"><expr pos:start="31:5" pos:end="31:55"><call pos:start="31:5" pos:end="31:55"><name pos:start="31:5" pos:end="31:10">memset</name><argument_list pos:start="31:11" pos:end="31:55">(<argument pos:start="31:12" pos:end="31:22"><expr pos:start="31:12" pos:end="31:22"><name pos:start="31:12" pos:end="31:22">mlt_buffer2</name></expr></argument>, <argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><literal type="number" pos:start="31:25" pos:end="31:25">0</literal></expr></argument>, <argument pos:start="31:28" pos:end="31:54"><expr pos:start="31:28" pos:end="31:54"><literal type="number" pos:start="31:28" pos:end="31:31">1024</literal> <operator pos:start="31:33" pos:end="31:33">*</operator> <sizeof pos:start="31:35" pos:end="31:54">sizeof<argument_list pos:start="31:41" pos:end="31:54">(<argument pos:start="31:42" pos:end="31:53"><expr pos:start="31:42" pos:end="31:53"><operator pos:start="31:42" pos:end="31:42">*</operator><name pos:start="31:43" pos:end="31:53">mlt_buffer2</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><call pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:17">decouple_info</name><argument_list pos:start="33:18" pos:end="33:37">(<argument pos:start="33:19" pos:end="33:19"><expr pos:start="33:19" pos:end="33:19"><name pos:start="33:19" pos:end="33:19">q</name></expr></argument>, <argument pos:start="33:22" pos:end="33:22"><expr pos:start="33:22" pos:end="33:22"><name pos:start="33:22" pos:end="33:22">p</name></expr></argument>, <argument pos:start="33:25" pos:end="33:36"><expr pos:start="33:25" pos:end="33:36"><name pos:start="33:25" pos:end="33:36">decouple_tab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:19"><if pos:start="35:5" pos:end="37:19">if <condition pos:start="35:8" pos:end="35:53">(<expr pos:start="35:9" pos:end="35:52"><operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:12">ret</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:47"><name pos:start="35:16" pos:end="35:26">mono_decode</name><argument_list pos:start="35:27" pos:end="35:47">(<argument pos:start="35:28" pos:end="35:28"><expr pos:start="35:28" pos:end="35:28"><name pos:start="35:28" pos:end="35:28">q</name></expr></argument>, <argument pos:start="35:31" pos:end="35:31"><expr pos:start="35:31" pos:end="35:31"><name pos:start="35:31" pos:end="35:31">p</name></expr></argument>, <argument pos:start="35:34" pos:end="35:46"><expr pos:start="35:34" pos:end="35:46"><name pos:start="35:34" pos:end="35:46">decode_buffer</name></expr></argument>)</argument_list></call><operator pos:start="35:48" pos:end="35:48">)</operator> <operator pos:start="35:50" pos:end="35:50">&lt;</operator> <literal type="number" pos:start="35:52" pos:end="35:52">0</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:19"><block_content pos:start="37:9" pos:end="37:19">

        <return pos:start="37:9" pos:end="37:19">return <expr pos:start="37:16" pos:end="37:18"><name pos:start="37:16" pos:end="37:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <comment type="block" pos:start="39:5" pos:end="39:67">/* The two channels are stored interleaved in decode_buffer. */</comment>

    <for pos:start="41:5" pos:end="51:5">for <control pos:start="41:9" pos:end="41:45">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:40"><expr pos:start="41:17" pos:end="41:39"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:39"><name pos:start="41:21" pos:end="41:21">p</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:39">js_subband_start</name></name></expr>;</condition> <incr pos:start="41:42" pos:end="41:44"><expr pos:start="41:42" pos:end="41:44"><name pos:start="41:42" pos:end="41:42">i</name><operator pos:start="41:43" pos:end="41:44">++</operator></expr></incr>)</control> <block pos:start="41:47" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:9">

        <for pos:start="43:9" pos:end="49:9">for <control pos:start="43:13" pos:end="43:42">(<init pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">j</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:37"><expr pos:start="43:21" pos:end="43:36"><name pos:start="43:21" pos:end="43:21">j</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <name pos:start="43:25" pos:end="43:36">SUBBAND_SIZE</name></expr>;</condition> <incr pos:start="43:39" pos:end="43:41"><expr pos:start="43:39" pos:end="43:41"><name pos:start="43:39" pos:end="43:39">j</name><operator pos:start="43:40" pos:end="43:41">++</operator></expr></incr>)</control> <block pos:start="43:44" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:69">

            <expr_stmt pos:start="45:13" pos:end="45:64"><expr pos:start="45:13" pos:end="45:63"><name pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:23">mlt_buffer1</name><index pos:start="45:24" pos:end="45:35">[<expr pos:start="45:25" pos:end="45:34"><name pos:start="45:25" pos:end="45:25">i</name> <operator pos:start="45:27" pos:end="45:27">*</operator> <literal type="number" pos:start="45:29" pos:end="45:30">20</literal> <operator pos:start="45:32" pos:end="45:32">+</operator> <name pos:start="45:34" pos:end="45:34">j</name></expr>]</index></name> <operator pos:start="45:37" pos:end="45:37">=</operator> <name pos:start="45:39" pos:end="45:63"><name pos:start="45:39" pos:end="45:51">decode_buffer</name><index pos:start="45:52" pos:end="45:63">[<expr pos:start="45:53" pos:end="45:62"><name pos:start="45:53" pos:end="45:53">i</name> <operator pos:start="45:55" pos:end="45:55">*</operator> <literal type="number" pos:start="45:57" pos:end="45:60">40</literal> <operator pos:start="45:60" pos:end="45:60">+</operator> <name pos:start="45:62" pos:end="45:62">j</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:69"><expr pos:start="47:13" pos:end="47:68"><name pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:23">mlt_buffer2</name><index pos:start="47:24" pos:end="47:35">[<expr pos:start="47:25" pos:end="47:34"><name pos:start="47:25" pos:end="47:25">i</name> <operator pos:start="47:27" pos:end="47:27">*</operator> <literal type="number" pos:start="47:29" pos:end="47:30">20</literal> <operator pos:start="47:32" pos:end="47:32">+</operator> <name pos:start="47:34" pos:end="47:34">j</name></expr>]</index></name> <operator pos:start="47:37" pos:end="47:37">=</operator> <name pos:start="47:39" pos:end="47:68"><name pos:start="47:39" pos:end="47:51">decode_buffer</name><index pos:start="47:52" pos:end="47:68">[<expr pos:start="47:53" pos:end="47:67"><name pos:start="47:53" pos:end="47:53">i</name> <operator pos:start="47:55" pos:end="47:55">*</operator> <literal type="number" pos:start="47:57" pos:end="47:60">40</literal> <operator pos:start="47:60" pos:end="47:60">+</operator> <literal type="number" pos:start="47:62" pos:end="47:65">20</literal> <operator pos:start="47:65" pos:end="47:65">+</operator> <name pos:start="47:67" pos:end="47:67">j</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="55:5" pos:end="57:59">/* When we reach js_subband_start (the higher frequencies)

       the coefficients are stored in a coupling scheme. */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:36"><expr pos:start="59:5" pos:end="59:35"><name pos:start="59:5" pos:end="59:7">idx</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <operator pos:start="59:11" pos:end="59:11">(</operator><literal type="number" pos:start="59:12" pos:end="59:12">1</literal> <operator pos:start="59:14" pos:end="59:15">&lt;&lt;</operator> <name pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:17">p</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:30">js_vlc_bits</name></name><operator pos:start="59:31" pos:end="59:31">)</operator> <operator pos:start="59:33" pos:end="59:33">-</operator> <literal type="number" pos:start="59:35" pos:end="59:35">1</literal></expr>;</expr_stmt>

    <for pos:start="61:5" pos:end="77:5">for <control pos:start="61:9" pos:end="61:55">(<init pos:start="61:10" pos:end="61:33"><expr pos:start="61:10" pos:end="61:32"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <name pos:start="61:14" pos:end="61:32"><name pos:start="61:14" pos:end="61:14">p</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:32">js_subband_start</name></name></expr>;</init> <condition pos:start="61:35" pos:end="61:50"><expr pos:start="61:35" pos:end="61:49"><name pos:start="61:35" pos:end="61:35">i</name> <operator pos:start="61:37" pos:end="61:37">&lt;</operator> <name pos:start="61:39" pos:end="61:49"><name pos:start="61:39" pos:end="61:39">p</name><operator pos:start="61:40" pos:end="61:41">-&gt;</operator><name pos:start="61:42" pos:end="61:49">subbands</name></name></expr>;</condition> <incr pos:start="61:52" pos:end="61:54"><expr pos:start="61:52" pos:end="61:54"><name pos:start="61:52" pos:end="61:52">i</name><operator pos:start="61:53" pos:end="61:54">++</operator></expr></incr>)</control> <block pos:start="61:57" pos:end="77:5">{<block_content pos:start="63:9" pos:end="75:40">

        <expr_stmt pos:start="63:9" pos:end="63:29"><expr pos:start="63:9" pos:end="63:28"><name pos:start="63:9" pos:end="63:15">cpl_tmp</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:28"><name pos:start="63:19" pos:end="63:25">cplband</name><index pos:start="63:26" pos:end="63:28">[<expr pos:start="63:27" pos:end="63:27"><name pos:start="63:27" pos:end="63:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:37"><expr pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:11">idx</name> <operator pos:start="65:13" pos:end="65:14">-=</operator> <name pos:start="65:16" pos:end="65:36"><name pos:start="65:16" pos:end="65:27">decouple_tab</name><index pos:start="65:28" pos:end="65:36">[<expr pos:start="65:29" pos:end="65:35"><name pos:start="65:29" pos:end="65:35">cpl_tmp</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:52"><expr pos:start="67:9" pos:end="67:51"><name pos:start="67:9" pos:end="67:16">cplscale</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <name pos:start="67:20" pos:end="67:51"><name pos:start="67:20" pos:end="67:20">q</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:31">cplscales</name><index pos:start="67:32" pos:end="67:51">[<expr pos:start="67:33" pos:end="67:50"><name pos:start="67:33" pos:end="67:46"><name pos:start="67:33" pos:end="67:33">p</name><operator pos:start="67:34" pos:end="67:35">-&gt;</operator><name pos:start="67:36" pos:end="67:46">js_vlc_bits</name></name> <operator pos:start="67:48" pos:end="67:48">-</operator> <literal type="number" pos:start="67:50" pos:end="67:50">2</literal></expr>]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="67:55" pos:end="67:79">// choose decoupler table</comment>

        <expr_stmt pos:start="69:9" pos:end="69:45"><expr pos:start="69:9" pos:end="69:44"><name pos:start="69:9" pos:end="69:10">f1</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <name pos:start="69:14" pos:end="69:44"><name pos:start="69:14" pos:end="69:21">cplscale</name><index pos:start="69:22" pos:end="69:44">[<expr pos:start="69:23" pos:end="69:43"><name pos:start="69:23" pos:end="69:43"><name pos:start="69:23" pos:end="69:34">decouple_tab</name><index pos:start="69:35" pos:end="69:43">[<expr pos:start="69:36" pos:end="69:42"><name pos:start="69:36" pos:end="69:42">cpl_tmp</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:31"><expr pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:10">f2</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <name pos:start="71:14" pos:end="71:30"><name pos:start="71:14" pos:end="71:21">cplscale</name><index pos:start="71:22" pos:end="71:30">[<expr pos:start="71:23" pos:end="71:29"><name pos:start="71:23" pos:end="71:25">idx</name> <operator pos:start="71:27" pos:end="71:27">-</operator> <literal type="number" pos:start="71:29" pos:end="71:29">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:78"><expr pos:start="73:9" pos:end="73:77"><call pos:start="73:9" pos:end="73:77"><name pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:9">q</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:19">decouple</name></name><argument_list pos:start="73:20" pos:end="73:77">(<argument pos:start="73:21" pos:end="73:21"><expr pos:start="73:21" pos:end="73:21"><name pos:start="73:21" pos:end="73:21">q</name></expr></argument>, <argument pos:start="73:24" pos:end="73:24"><expr pos:start="73:24" pos:end="73:24"><name pos:start="73:24" pos:end="73:24">p</name></expr></argument>, <argument pos:start="73:27" pos:end="73:27"><expr pos:start="73:27" pos:end="73:27"><name pos:start="73:27" pos:end="73:27">i</name></expr></argument>, <argument pos:start="73:30" pos:end="73:31"><expr pos:start="73:30" pos:end="73:31"><name pos:start="73:30" pos:end="73:31">f1</name></expr></argument>, <argument pos:start="73:34" pos:end="73:35"><expr pos:start="73:34" pos:end="73:35"><name pos:start="73:34" pos:end="73:35">f2</name></expr></argument>, <argument pos:start="73:38" pos:end="73:50"><expr pos:start="73:38" pos:end="73:50"><name pos:start="73:38" pos:end="73:50">decode_buffer</name></expr></argument>, <argument pos:start="73:53" pos:end="73:63"><expr pos:start="73:53" pos:end="73:63"><name pos:start="73:53" pos:end="73:63">mlt_buffer1</name></expr></argument>, <argument pos:start="73:66" pos:end="73:76"><expr pos:start="73:66" pos:end="73:76"><name pos:start="73:66" pos:end="73:76">mlt_buffer2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:40"><expr pos:start="75:9" pos:end="75:39"><name pos:start="75:9" pos:end="75:11">idx</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <operator pos:start="75:15" pos:end="75:15">(</operator><literal type="number" pos:start="75:16" pos:end="75:16">1</literal> <operator pos:start="75:18" pos:end="75:19">&lt;&lt;</operator> <name pos:start="75:21" pos:end="75:34"><name pos:start="75:21" pos:end="75:21">p</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:34">js_vlc_bits</name></name><operator pos:start="75:35" pos:end="75:35">)</operator> <operator pos:start="75:37" pos:end="75:37">-</operator> <literal type="number" pos:start="75:39" pos:end="75:39">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
