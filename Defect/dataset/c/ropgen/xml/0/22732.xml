<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22732.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">cd_read_sector</name><parameter_list pos:start="1:26" pos:end="1:78">(<parameter pos:start="1:27" pos:end="1:37"><decl pos:start="1:27" pos:end="1:37"><type pos:start="1:27" pos:end="1:37"><name pos:start="1:27" pos:end="1:34">IDEState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:46"><decl pos:start="1:40" pos:end="1:46"><type pos:start="1:40" pos:end="1:46"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:46">lba</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:55">uint8_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">buf</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:77"><decl pos:start="1:63" pos:end="1:77"><type pos:start="1:63" pos:end="1:77"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:77">sector_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <switch pos:start="9:5" pos:end="47:5">switch<condition pos:start="9:11" pos:end="9:23">(<expr pos:start="9:12" pos:end="9:22"><name pos:start="9:12" pos:end="9:22">sector_size</name></expr>)</condition> <block pos:start="9:25" pos:end="47:5">{<block_content pos:start="11:5" pos:end="45:14">

    <case pos:start="11:5" pos:end="11:14">case <expr pos:start="11:10" pos:end="11:13"><literal type="number" pos:start="11:10" pos:end="11:13">2048</literal></expr>:</case>

        <expr_stmt pos:start="13:9" pos:end="15:64"><expr pos:start="13:9" pos:end="15:63"><call pos:start="13:9" pos:end="15:63"><name pos:start="13:9" pos:end="13:24">block_acct_start</name><argument_list pos:start="13:25" pos:end="15:63">(<argument pos:start="13:26" pos:end="13:46"><expr pos:start="13:26" pos:end="13:46"><call pos:start="13:26" pos:end="13:46"><name pos:start="13:26" pos:end="13:39">bdrv_get_stats</name><argument_list pos:start="13:40" pos:end="13:46">(<argument pos:start="13:41" pos:end="13:45"><expr pos:start="13:41" pos:end="13:45"><name pos:start="13:41" pos:end="13:45"><name pos:start="13:41" pos:end="13:41">s</name><operator pos:start="13:42" pos:end="13:43">-&gt;</operator><name pos:start="13:44" pos:end="13:45">bs</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:49" pos:end="13:56"><expr pos:start="13:49" pos:end="13:56"><operator pos:start="13:49" pos:end="13:49">&amp;</operator><name pos:start="13:50" pos:end="13:56"><name pos:start="13:50" pos:end="13:50">s</name><operator pos:start="13:51" pos:end="13:52">-&gt;</operator><name pos:start="13:53" pos:end="13:56">acct</name></name></expr></argument>,

                         <argument pos:start="15:26" pos:end="15:45"><expr pos:start="15:26" pos:end="15:45"><literal type="number" pos:start="15:26" pos:end="15:26">4</literal> <operator pos:start="15:28" pos:end="15:28">*</operator> <name pos:start="15:30" pos:end="15:45">BDRV_SECTOR_SIZE</name></expr></argument>, <argument pos:start="15:48" pos:end="15:62"><expr pos:start="15:48" pos:end="15:62"><name pos:start="15:48" pos:end="15:62">BLOCK_ACCT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:58"><expr pos:start="17:9" pos:end="17:57"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:57"><name pos:start="17:15" pos:end="17:23">bdrv_read</name><argument_list pos:start="17:24" pos:end="17:57">(<argument pos:start="17:25" pos:end="17:29"><expr pos:start="17:25" pos:end="17:29"><name pos:start="17:25" pos:end="17:29"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:29">bs</name></name></expr></argument>, <argument pos:start="17:32" pos:end="17:48"><expr pos:start="17:32" pos:end="17:48"><operator pos:start="17:32" pos:end="17:32">(</operator><name pos:start="17:33" pos:end="17:39">int64_t</name><operator pos:start="17:40" pos:end="17:40">)</operator><name pos:start="17:41" pos:end="17:43">lba</name> <operator pos:start="17:45" pos:end="17:46">&lt;&lt;</operator> <literal type="number" pos:start="17:48" pos:end="17:48">2</literal></expr></argument>, <argument pos:start="17:51" pos:end="17:53"><expr pos:start="17:51" pos:end="17:53"><name pos:start="17:51" pos:end="17:53">buf</name></expr></argument>, <argument pos:start="17:56" pos:end="17:56"><expr pos:start="17:56" pos:end="17:56"><literal type="number" pos:start="17:56" pos:end="17:56">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:57"><expr pos:start="19:9" pos:end="19:56"><call pos:start="19:9" pos:end="19:56"><name pos:start="19:9" pos:end="19:23">block_acct_done</name><argument_list pos:start="19:24" pos:end="19:56">(<argument pos:start="19:25" pos:end="19:45"><expr pos:start="19:25" pos:end="19:45"><call pos:start="19:25" pos:end="19:45"><name pos:start="19:25" pos:end="19:38">bdrv_get_stats</name><argument_list pos:start="19:39" pos:end="19:45">(<argument pos:start="19:40" pos:end="19:44"><expr pos:start="19:40" pos:end="19:44"><name pos:start="19:40" pos:end="19:44"><name pos:start="19:40" pos:end="19:40">s</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:44">bs</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:48" pos:end="19:55"><expr pos:start="19:48" pos:end="19:55"><operator pos:start="19:48" pos:end="19:48">&amp;</operator><name pos:start="19:49" pos:end="19:55"><name pos:start="19:49" pos:end="19:49">s</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:55">acct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:14">case <expr pos:start="23:10" pos:end="23:13"><literal type="number" pos:start="23:10" pos:end="23:13">2352</literal></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="27:64"><expr pos:start="25:9" pos:end="27:63"><call pos:start="25:9" pos:end="27:63"><name pos:start="25:9" pos:end="25:24">block_acct_start</name><argument_list pos:start="25:25" pos:end="27:63">(<argument pos:start="25:26" pos:end="25:46"><expr pos:start="25:26" pos:end="25:46"><call pos:start="25:26" pos:end="25:46"><name pos:start="25:26" pos:end="25:39">bdrv_get_stats</name><argument_list pos:start="25:40" pos:end="25:46">(<argument pos:start="25:41" pos:end="25:45"><expr pos:start="25:41" pos:end="25:45"><name pos:start="25:41" pos:end="25:45"><name pos:start="25:41" pos:end="25:41">s</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:45">bs</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:49" pos:end="25:56"><expr pos:start="25:49" pos:end="25:56"><operator pos:start="25:49" pos:end="25:49">&amp;</operator><name pos:start="25:50" pos:end="25:56"><name pos:start="25:50" pos:end="25:50">s</name><operator pos:start="25:51" pos:end="25:52">-&gt;</operator><name pos:start="25:53" pos:end="25:56">acct</name></name></expr></argument>,

                         <argument pos:start="27:26" pos:end="27:45"><expr pos:start="27:26" pos:end="27:45"><literal type="number" pos:start="27:26" pos:end="27:26">4</literal> <operator pos:start="27:28" pos:end="27:28">*</operator> <name pos:start="27:30" pos:end="27:45">BDRV_SECTOR_SIZE</name></expr></argument>, <argument pos:start="27:48" pos:end="27:62"><expr pos:start="27:48" pos:end="27:62"><name pos:start="27:48" pos:end="27:62">BLOCK_ACCT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:63"><expr pos:start="29:9" pos:end="29:62"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:62"><name pos:start="29:15" pos:end="29:23">bdrv_read</name><argument_list pos:start="29:24" pos:end="29:62">(<argument pos:start="29:25" pos:end="29:29"><expr pos:start="29:25" pos:end="29:29"><name pos:start="29:25" pos:end="29:29"><name pos:start="29:25" pos:end="29:25">s</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:29">bs</name></name></expr></argument>, <argument pos:start="29:32" pos:end="29:48"><expr pos:start="29:32" pos:end="29:48"><operator pos:start="29:32" pos:end="29:32">(</operator><name pos:start="29:33" pos:end="29:39">int64_t</name><operator pos:start="29:40" pos:end="29:40">)</operator><name pos:start="29:41" pos:end="29:43">lba</name> <operator pos:start="29:45" pos:end="29:46">&lt;&lt;</operator> <literal type="number" pos:start="29:48" pos:end="29:48">2</literal></expr></argument>, <argument pos:start="29:51" pos:end="29:58"><expr pos:start="29:51" pos:end="29:58"><name pos:start="29:51" pos:end="29:53">buf</name> <operator pos:start="29:55" pos:end="29:55">+</operator> <literal type="number" pos:start="29:57" pos:end="29:58">16</literal></expr></argument>, <argument pos:start="29:61" pos:end="29:61"><expr pos:start="29:61" pos:end="29:61"><literal type="number" pos:start="29:61" pos:end="29:61">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:57"><expr pos:start="31:9" pos:end="31:56"><call pos:start="31:9" pos:end="31:56"><name pos:start="31:9" pos:end="31:23">block_acct_done</name><argument_list pos:start="31:24" pos:end="31:56">(<argument pos:start="31:25" pos:end="31:45"><expr pos:start="31:25" pos:end="31:45"><call pos:start="31:25" pos:end="31:45"><name pos:start="31:25" pos:end="31:38">bdrv_get_stats</name><argument_list pos:start="31:39" pos:end="31:45">(<argument pos:start="31:40" pos:end="31:44"><expr pos:start="31:40" pos:end="31:44"><name pos:start="31:40" pos:end="31:44"><name pos:start="31:40" pos:end="31:40">s</name><operator pos:start="31:41" pos:end="31:42">-&gt;</operator><name pos:start="31:43" pos:end="31:44">bs</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:48" pos:end="31:55"><expr pos:start="31:48" pos:end="31:55"><operator pos:start="31:48" pos:end="31:48">&amp;</operator><name pos:start="31:49" pos:end="31:55"><name pos:start="31:49" pos:end="31:49">s</name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:55">acct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:23"><if pos:start="33:9" pos:end="35:23">if <condition pos:start="33:12" pos:end="33:20">(<expr pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:15">ret</name> <operator pos:start="33:17" pos:end="33:17">&lt;</operator> <literal type="number" pos:start="33:19" pos:end="33:19">0</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:23"><block_content pos:start="35:13" pos:end="35:23">

            <return pos:start="35:13" pos:end="35:23">return <expr pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:33"><expr pos:start="37:9" pos:end="37:32"><call pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:22">cd_data_to_raw</name><argument_list pos:start="37:23" pos:end="37:32">(<argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">buf</name></expr></argument>, <argument pos:start="37:29" pos:end="37:31"><expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:31">lba</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <default pos:start="41:5" pos:end="41:12">default:</default>

        <expr_stmt pos:start="43:9" pos:end="43:19"><expr pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <operator pos:start="43:15" pos:end="43:15">-</operator><name pos:start="43:16" pos:end="43:18">EIO</name></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="49:5" pos:end="49:15">return <expr pos:start="49:12" pos:end="49:14"><name pos:start="49:12" pos:end="49:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
