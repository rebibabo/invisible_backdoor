<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22084.c" pos:tabs="8"><function pos:start="1:1" pos:end="4413:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">long</name></type> <name pos:start="1:6" pos:end="1:15">do_syscall</name><parameter_list pos:start="1:16" pos:end="3:48">(<parameter pos:start="1:17" pos:end="1:29"><decl pos:start="1:17" pos:end="1:29"><type pos:start="1:17" pos:end="1:29"><name pos:start="1:17" pos:end="1:20">void</name> <modifier pos:start="1:22" pos:end="1:22">*</modifier></type><name pos:start="1:23" pos:end="1:29">cpu_env</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:38"><decl pos:start="1:32" pos:end="1:38"><type pos:start="1:32" pos:end="1:38"><name pos:start="1:32" pos:end="1:34">int</name></type> <name pos:start="1:36" pos:end="1:38">num</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:49"><decl pos:start="1:41" pos:end="1:49"><type pos:start="1:41" pos:end="1:49"><name pos:start="1:41" pos:end="1:44">long</name></type> <name pos:start="1:46" pos:end="1:49">arg1</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:60"><decl pos:start="1:52" pos:end="1:60"><type pos:start="1:52" pos:end="1:60"><name pos:start="1:52" pos:end="1:55">long</name></type> <name pos:start="1:57" pos:end="1:60">arg2</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:71"><decl pos:start="1:63" pos:end="1:71"><type pos:start="1:63" pos:end="1:71"><name pos:start="1:63" pos:end="1:66">long</name></type> <name pos:start="1:68" pos:end="1:71">arg3</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:25"><decl pos:start="3:17" pos:end="3:25"><type pos:start="3:17" pos:end="3:25"><name pos:start="3:17" pos:end="3:20">long</name></type> <name pos:start="3:22" pos:end="3:25">arg4</name></decl></parameter>, <parameter pos:start="3:28" pos:end="3:36"><decl pos:start="3:28" pos:end="3:36"><type pos:start="3:28" pos:end="3:36"><name pos:start="3:28" pos:end="3:31">long</name></type> <name pos:start="3:33" pos:end="3:36">arg5</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:47"><decl pos:start="3:39" pos:end="3:47"><type pos:start="3:39" pos:end="3:47"><name pos:start="3:39" pos:end="3:42">long</name></type> <name pos:start="3:44" pos:end="3:47">arg6</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="4413:1">{<block_content pos:start="7:5" pos:end="4411:15">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">long</name></type> <name pos:start="7:10" pos:end="7:12">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:15">stat</name></name></type> <name pos:start="9:17" pos:end="9:18">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:17">statfs</name></name></type> <name pos:start="11:19" pos:end="11:22">stfs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="18:0"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">void</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:11">p</name></decl>;</decl_stmt>

   

<cpp:ifdef pos:start="17:1" pos:end="17:12">#<cpp:directive pos:start="17:2" pos:end="17:6">ifdef</cpp:directive> <name pos:start="17:8" pos:end="17:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="19:5" pos:end="22:0"><expr pos:start="19:5" pos:end="19:31"><call pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:12">gemu_log</name><argument_list pos:start="19:13" pos:end="19:31">(<argument pos:start="19:14" pos:end="19:25"><expr pos:start="19:14" pos:end="19:25"><literal type="string" pos:start="19:14" pos:end="19:25">"syscall %d"</literal></expr></argument>, <argument pos:start="19:28" pos:end="19:30"><expr pos:start="19:28" pos:end="19:30"><name pos:start="19:28" pos:end="19:30">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>

    <switch pos:start="23:5" pos:end="4401:5">switch<condition pos:start="23:11" pos:end="23:15">(<expr pos:start="23:12" pos:end="23:14"><name pos:start="23:12" pos:end="23:14">num</name></expr>)</condition> <block pos:start="23:17" pos:end="4401:5">{<block_content pos:start="25:5" pos:end="4399:14">

    <case pos:start="25:5" pos:end="28:0">case <expr pos:start="25:10" pos:end="25:23"><name pos:start="25:10" pos:end="25:23">TARGET_NR_exit</name></expr>:</case>

<cpp:ifdef pos:start="27:1" pos:end="27:17">#<cpp:directive pos:start="27:2" pos:end="27:6">ifdef</cpp:directive> <name pos:start="27:8" pos:end="27:17">HAVE_GPROF</name></cpp:ifdef>

        <expr_stmt pos:start="29:9" pos:end="32:0"><expr pos:start="29:9" pos:end="29:19"><call pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:17">_mcleanup</name><argument_list pos:start="29:18" pos:end="29:19">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><call pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:16">gdb_exit</name><argument_list pos:start="33:17" pos:end="33:31">(<argument pos:start="33:18" pos:end="33:24"><expr pos:start="33:18" pos:end="33:24"><name pos:start="33:18" pos:end="33:24">cpu_env</name></expr></argument>, <argument pos:start="33:27" pos:end="33:30"><expr pos:start="33:27" pos:end="33:30"><name pos:start="33:27" pos:end="33:30">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="35:9" pos:end="35:55">/* XXX: should free thread stack and CPU env */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:20"><expr pos:start="37:9" pos:end="37:19"><call pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:13">_exit</name><argument_list pos:start="37:14" pos:end="37:19">(<argument pos:start="37:15" pos:end="37:18"><expr pos:start="37:15" pos:end="37:18"><name pos:start="37:15" pos:end="37:18">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:16"><expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="39:18" pos:end="39:36">/* avoid warning */</comment>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:24">case <expr pos:start="43:10" pos:end="43:23"><name pos:start="43:10" pos:end="43:23">TARGET_NR_read</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:41"><expr pos:start="45:9" pos:end="45:40"><call pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:28">page_unprotect_range</name><argument_list pos:start="45:29" pos:end="45:40">(<argument pos:start="45:30" pos:end="45:33"><expr pos:start="45:30" pos:end="45:33"><name pos:start="45:30" pos:end="45:33">arg2</name></expr></argument>, <argument pos:start="45:36" pos:end="45:39"><expr pos:start="45:36" pos:end="45:39"><name pos:start="45:36" pos:end="45:39">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:37"><expr pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:9">p</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <call pos:start="47:13" pos:end="47:36"><name pos:start="47:13" pos:end="47:21">lock_user</name><argument_list pos:start="47:22" pos:end="47:36">(<argument pos:start="47:23" pos:end="47:26"><expr pos:start="47:23" pos:end="47:26"><name pos:start="47:23" pos:end="47:26">arg2</name></expr></argument>, <argument pos:start="47:29" pos:end="47:32"><expr pos:start="47:29" pos:end="47:32"><name pos:start="47:29" pos:end="47:32">arg3</name></expr></argument>, <argument pos:start="47:35" pos:end="47:35"><expr pos:start="47:35" pos:end="47:35"><literal type="number" pos:start="47:35" pos:end="47:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:45"><expr pos:start="49:9" pos:end="49:44"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:44"><name pos:start="49:15" pos:end="49:23">get_errno</name><argument_list pos:start="49:24" pos:end="49:44">(<argument pos:start="49:25" pos:end="49:43"><expr pos:start="49:25" pos:end="49:43"><call pos:start="49:25" pos:end="49:43"><name pos:start="49:25" pos:end="49:28">read</name><argument_list pos:start="49:29" pos:end="49:43">(<argument pos:start="49:30" pos:end="49:33"><expr pos:start="49:30" pos:end="49:33"><name pos:start="49:30" pos:end="49:33">arg1</name></expr></argument>, <argument pos:start="49:36" pos:end="49:36"><expr pos:start="49:36" pos:end="49:36"><name pos:start="49:36" pos:end="49:36">p</name></expr></argument>, <argument pos:start="49:39" pos:end="49:42"><expr pos:start="49:39" pos:end="49:42"><name pos:start="49:39" pos:end="49:42">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:34"><expr pos:start="51:9" pos:end="51:33"><call pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:19">unlock_user</name><argument_list pos:start="51:20" pos:end="51:33">(<argument pos:start="51:21" pos:end="51:21"><expr pos:start="51:21" pos:end="51:21"><name pos:start="51:21" pos:end="51:21">p</name></expr></argument>, <argument pos:start="51:24" pos:end="51:27"><expr pos:start="51:24" pos:end="51:27"><name pos:start="51:24" pos:end="51:27">arg2</name></expr></argument>, <argument pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><name pos:start="51:30" pos:end="51:32">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:25">case <expr pos:start="55:10" pos:end="55:24"><name pos:start="55:10" pos:end="55:24">TARGET_NR_write</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:37"><expr pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:9">p</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <call pos:start="57:13" pos:end="57:36"><name pos:start="57:13" pos:end="57:21">lock_user</name><argument_list pos:start="57:22" pos:end="57:36">(<argument pos:start="57:23" pos:end="57:26"><expr pos:start="57:23" pos:end="57:26"><name pos:start="57:23" pos:end="57:26">arg2</name></expr></argument>, <argument pos:start="57:29" pos:end="57:32"><expr pos:start="57:29" pos:end="57:32"><name pos:start="57:29" pos:end="57:32">arg3</name></expr></argument>, <argument pos:start="57:35" pos:end="57:35"><expr pos:start="57:35" pos:end="57:35"><literal type="number" pos:start="57:35" pos:end="57:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:46"><expr pos:start="59:9" pos:end="59:45"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:45"><name pos:start="59:15" pos:end="59:23">get_errno</name><argument_list pos:start="59:24" pos:end="59:45">(<argument pos:start="59:25" pos:end="59:44"><expr pos:start="59:25" pos:end="59:44"><call pos:start="59:25" pos:end="59:44"><name pos:start="59:25" pos:end="59:29">write</name><argument_list pos:start="59:30" pos:end="59:44">(<argument pos:start="59:31" pos:end="59:34"><expr pos:start="59:31" pos:end="59:34"><name pos:start="59:31" pos:end="59:34">arg1</name></expr></argument>, <argument pos:start="59:37" pos:end="59:37"><expr pos:start="59:37" pos:end="59:37"><name pos:start="59:37" pos:end="59:37">p</name></expr></argument>, <argument pos:start="59:40" pos:end="59:43"><expr pos:start="59:40" pos:end="59:43"><name pos:start="59:40" pos:end="59:43">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><call pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:19">unlock_user</name><argument_list pos:start="61:20" pos:end="61:31">(<argument pos:start="61:21" pos:end="61:21"><expr pos:start="61:21" pos:end="61:21"><name pos:start="61:21" pos:end="61:21">p</name></expr></argument>, <argument pos:start="61:24" pos:end="61:27"><expr pos:start="61:24" pos:end="61:27"><name pos:start="61:24" pos:end="61:27">arg2</name></expr></argument>, <argument pos:start="61:30" pos:end="61:30"><expr pos:start="61:30" pos:end="61:30"><literal type="number" pos:start="61:30" pos:end="61:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:24">case <expr pos:start="65:10" pos:end="65:23"><name pos:start="65:10" pos:end="65:23">TARGET_NR_open</name></expr>:</case>

        <expr_stmt pos:start="67:9" pos:end="67:35"><expr pos:start="67:9" pos:end="67:34"><name pos:start="67:9" pos:end="67:9">p</name> <operator pos:start="67:11" pos:end="67:11">=</operator> <call pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:28">lock_user_string</name><argument_list pos:start="67:29" pos:end="67:34">(<argument pos:start="67:30" pos:end="67:33"><expr pos:start="67:30" pos:end="67:33"><name pos:start="67:30" pos:end="67:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="73:36"><expr pos:start="69:9" pos:end="73:35"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="73:35"><name pos:start="69:15" pos:end="69:23">get_errno</name><argument_list pos:start="69:24" pos:end="73:35">(<argument pos:start="69:25" pos:end="73:34"><expr pos:start="69:25" pos:end="73:34"><call pos:start="69:25" pos:end="73:34"><name pos:start="69:25" pos:end="69:28">open</name><argument_list pos:start="69:29" pos:end="73:34">(<argument pos:start="69:30" pos:end="69:36"><expr pos:start="69:30" pos:end="69:36"><call pos:start="69:30" pos:end="69:36"><name pos:start="69:30" pos:end="69:33">path</name><argument_list pos:start="69:34" pos:end="69:36">(<argument pos:start="69:35" pos:end="69:35"><expr pos:start="69:35" pos:end="69:35"><name pos:start="69:35" pos:end="69:35">p</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="71:30" pos:end="71:74"><expr pos:start="71:30" pos:end="71:74"><call pos:start="71:30" pos:end="71:74"><name pos:start="71:30" pos:end="71:51">target_to_host_bitmask</name><argument_list pos:start="71:52" pos:end="71:74">(<argument pos:start="71:53" pos:end="71:56"><expr pos:start="71:53" pos:end="71:56"><name pos:start="71:53" pos:end="71:56">arg2</name></expr></argument>, <argument pos:start="71:59" pos:end="71:73"><expr pos:start="71:59" pos:end="71:73"><name pos:start="71:59" pos:end="71:73">fcntl_flags_tbl</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="73:30" pos:end="73:33"><expr pos:start="73:30" pos:end="73:33"><name pos:start="73:30" pos:end="73:33">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:32"><expr pos:start="75:9" pos:end="75:31"><call pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:19">unlock_user</name><argument_list pos:start="75:20" pos:end="75:31">(<argument pos:start="75:21" pos:end="75:21"><expr pos:start="75:21" pos:end="75:21"><name pos:start="75:21" pos:end="75:21">p</name></expr></argument>, <argument pos:start="75:24" pos:end="75:27"><expr pos:start="75:24" pos:end="75:27"><name pos:start="75:24" pos:end="75:27">arg1</name></expr></argument>, <argument pos:start="75:30" pos:end="75:30"><expr pos:start="75:30" pos:end="75:30"><literal type="number" pos:start="75:30" pos:end="75:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:25">case <expr pos:start="79:10" pos:end="79:24"><name pos:start="79:10" pos:end="79:24">TARGET_NR_close</name></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:37"><expr pos:start="81:9" pos:end="81:36"><name pos:start="81:9" pos:end="81:11">ret</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <call pos:start="81:15" pos:end="81:36"><name pos:start="81:15" pos:end="81:23">get_errno</name><argument_list pos:start="81:24" pos:end="81:36">(<argument pos:start="81:25" pos:end="81:35"><expr pos:start="81:25" pos:end="81:35"><call pos:start="81:25" pos:end="81:35"><name pos:start="81:25" pos:end="81:29">close</name><argument_list pos:start="81:30" pos:end="81:35">(<argument pos:start="81:31" pos:end="81:34"><expr pos:start="81:31" pos:end="81:34"><name pos:start="81:31" pos:end="81:34">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:23">case <expr pos:start="85:10" pos:end="85:22"><name pos:start="85:10" pos:end="85:22">TARGET_NR_brk</name></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:27"><expr pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:11">ret</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <call pos:start="87:15" pos:end="87:26"><name pos:start="87:15" pos:end="87:20">do_brk</name><argument_list pos:start="87:21" pos:end="87:26">(<argument pos:start="87:22" pos:end="87:25"><expr pos:start="87:22" pos:end="87:25"><name pos:start="87:22" pos:end="87:25">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:24">case <expr pos:start="91:10" pos:end="91:23"><name pos:start="91:10" pos:end="91:23">TARGET_NR_fork</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:54"><expr pos:start="93:9" pos:end="93:53"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <call pos:start="93:15" pos:end="93:53"><name pos:start="93:15" pos:end="93:23">get_errno</name><argument_list pos:start="93:24" pos:end="93:53">(<argument pos:start="93:25" pos:end="93:52"><expr pos:start="93:25" pos:end="93:52"><call pos:start="93:25" pos:end="93:52"><name pos:start="93:25" pos:end="93:31">do_fork</name><argument_list pos:start="93:32" pos:end="93:52">(<argument pos:start="93:33" pos:end="93:39"><expr pos:start="93:33" pos:end="93:39"><name pos:start="93:33" pos:end="93:39">cpu_env</name></expr></argument>, <argument pos:start="93:42" pos:end="93:48"><expr pos:start="93:42" pos:end="93:48"><name pos:start="93:42" pos:end="93:48">SIGCHLD</name></expr></argument>, <argument pos:start="93:51" pos:end="93:51"><expr pos:start="93:51" pos:end="93:51"><literal type="number" pos:start="93:51" pos:end="93:51">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="98:0">break;</break>

<cpp:ifdef pos:start="97:1" pos:end="97:24">#<cpp:directive pos:start="97:2" pos:end="97:6">ifdef</cpp:directive> <name pos:start="97:8" pos:end="97:24">TARGET_NR_waitpid</name></cpp:ifdef>

    <case pos:start="99:5" pos:end="99:27">case <expr pos:start="99:10" pos:end="99:26"><name pos:start="99:10" pos:end="99:26">TARGET_NR_waitpid</name></expr>:</case>

        <block pos:start="101:9" pos:end="111:9">{<block_content pos:start="103:13" pos:end="109:37">

            <decl_stmt pos:start="103:13" pos:end="103:23"><decl pos:start="103:13" pos:end="103:22"><type pos:start="103:13" pos:end="103:15"><name pos:start="103:13" pos:end="103:15">int</name></type> <name pos:start="103:17" pos:end="103:22">status</name></decl>;</decl_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:58"><expr pos:start="105:13" pos:end="105:57"><name pos:start="105:13" pos:end="105:15">ret</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <call pos:start="105:19" pos:end="105:57"><name pos:start="105:19" pos:end="105:27">get_errno</name><argument_list pos:start="105:28" pos:end="105:57">(<argument pos:start="105:29" pos:end="105:56"><expr pos:start="105:29" pos:end="105:56"><call pos:start="105:29" pos:end="105:56"><name pos:start="105:29" pos:end="105:35">waitpid</name><argument_list pos:start="105:36" pos:end="105:56">(<argument pos:start="105:37" pos:end="105:40"><expr pos:start="105:37" pos:end="105:40"><name pos:start="105:37" pos:end="105:40">arg1</name></expr></argument>, <argument pos:start="105:43" pos:end="105:49"><expr pos:start="105:43" pos:end="105:49"><operator pos:start="105:43" pos:end="105:43">&amp;</operator><name pos:start="105:44" pos:end="105:49">status</name></expr></argument>, <argument pos:start="105:52" pos:end="105:55"><expr pos:start="105:52" pos:end="105:55"><name pos:start="105:52" pos:end="105:55">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="109:37"><if pos:start="107:13" pos:end="109:37">if <condition pos:start="107:16" pos:end="107:39">(<expr pos:start="107:17" pos:end="107:38"><operator pos:start="107:17" pos:end="107:17">!</operator><call pos:start="107:18" pos:end="107:30"><name pos:start="107:18" pos:end="107:25">is_error</name><argument_list pos:start="107:26" pos:end="107:30">(<argument pos:start="107:27" pos:end="107:29"><expr pos:start="107:27" pos:end="107:29"><name pos:start="107:27" pos:end="107:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="107:32" pos:end="107:33">&amp;&amp;</operator> <name pos:start="107:35" pos:end="107:38">arg2</name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:37"><block_content pos:start="109:17" pos:end="109:37">

                <expr_stmt pos:start="109:17" pos:end="109:37"><expr pos:start="109:17" pos:end="109:36"><call pos:start="109:17" pos:end="109:36"><name pos:start="109:17" pos:end="109:22">tput32</name><argument_list pos:start="109:23" pos:end="109:36">(<argument pos:start="109:24" pos:end="109:27"><expr pos:start="109:24" pos:end="109:27"><name pos:start="109:24" pos:end="109:27">arg2</name></expr></argument>, <argument pos:start="109:30" pos:end="109:35"><expr pos:start="109:30" pos:end="109:35"><name pos:start="109:30" pos:end="109:35">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="113:9" pos:end="118:0">break;</break>

<cpp:endif pos:start="115:1" pos:end="115:6">#<cpp:directive pos:start="115:2" pos:end="115:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="117:1" pos:end="117:22">#<cpp:directive pos:start="117:2" pos:end="117:6">ifdef</cpp:directive> <name pos:start="117:8" pos:end="117:22">TARGET_NR_creat</name></cpp:ifdef> <comment type="block" pos:start="117:24" pos:end="117:41">/* not on alpha */</comment>

    <case pos:start="119:5" pos:end="119:25">case <expr pos:start="119:10" pos:end="119:24"><name pos:start="119:10" pos:end="119:24">TARGET_NR_creat</name></expr>:</case>

        <expr_stmt pos:start="121:9" pos:end="121:35"><expr pos:start="121:9" pos:end="121:34"><name pos:start="121:9" pos:end="121:9">p</name> <operator pos:start="121:11" pos:end="121:11">=</operator> <call pos:start="121:13" pos:end="121:34"><name pos:start="121:13" pos:end="121:28">lock_user_string</name><argument_list pos:start="121:29" pos:end="121:34">(<argument pos:start="121:30" pos:end="121:33"><expr pos:start="121:30" pos:end="121:33"><name pos:start="121:30" pos:end="121:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:40"><expr pos:start="123:9" pos:end="123:39"><name pos:start="123:9" pos:end="123:11">ret</name> <operator pos:start="123:13" pos:end="123:13">=</operator> <call pos:start="123:15" pos:end="123:39"><name pos:start="123:15" pos:end="123:23">get_errno</name><argument_list pos:start="123:24" pos:end="123:39">(<argument pos:start="123:25" pos:end="123:38"><expr pos:start="123:25" pos:end="123:38"><call pos:start="123:25" pos:end="123:38"><name pos:start="123:25" pos:end="123:29">creat</name><argument_list pos:start="123:30" pos:end="123:38">(<argument pos:start="123:31" pos:end="123:31"><expr pos:start="123:31" pos:end="123:31"><name pos:start="123:31" pos:end="123:31">p</name></expr></argument>, <argument pos:start="123:34" pos:end="123:37"><expr pos:start="123:34" pos:end="123:37"><name pos:start="123:34" pos:end="123:37">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:32"><expr pos:start="125:9" pos:end="125:31"><call pos:start="125:9" pos:end="125:31"><name pos:start="125:9" pos:end="125:19">unlock_user</name><argument_list pos:start="125:20" pos:end="125:31">(<argument pos:start="125:21" pos:end="125:21"><expr pos:start="125:21" pos:end="125:21"><name pos:start="125:21" pos:end="125:21">p</name></expr></argument>, <argument pos:start="125:24" pos:end="125:27"><expr pos:start="125:24" pos:end="125:27"><name pos:start="125:24" pos:end="125:27">arg1</name></expr></argument>, <argument pos:start="125:30" pos:end="125:30"><expr pos:start="125:30" pos:end="125:30"><literal type="number" pos:start="125:30" pos:end="125:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="130:0">break;</break>

<cpp:endif pos:start="129:1" pos:end="129:6">#<cpp:directive pos:start="129:2" pos:end="129:6">endif</cpp:directive></cpp:endif>

    <case pos:start="131:5" pos:end="131:24">case <expr pos:start="131:10" pos:end="131:23"><name pos:start="131:10" pos:end="131:23">TARGET_NR_link</name></expr>:</case>

        <block pos:start="133:9" pos:end="147:9">{<block_content pos:start="135:13" pos:end="145:36">

            <decl_stmt pos:start="135:13" pos:end="135:22"><decl pos:start="135:13" pos:end="135:21"><type pos:start="135:13" pos:end="135:18"><name pos:start="135:13" pos:end="135:16">void</name> <modifier pos:start="135:18" pos:end="135:18">*</modifier></type> <name pos:start="135:20" pos:end="135:21">p2</name></decl>;</decl_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:39"><expr pos:start="137:13" pos:end="137:38"><name pos:start="137:13" pos:end="137:13">p</name> <operator pos:start="137:15" pos:end="137:15">=</operator> <call pos:start="137:17" pos:end="137:38"><name pos:start="137:17" pos:end="137:32">lock_user_string</name><argument_list pos:start="137:33" pos:end="137:38">(<argument pos:start="137:34" pos:end="137:37"><expr pos:start="137:34" pos:end="137:37"><name pos:start="137:34" pos:end="137:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:40"><expr pos:start="139:13" pos:end="139:39"><name pos:start="139:13" pos:end="139:14">p2</name> <operator pos:start="139:16" pos:end="139:16">=</operator> <call pos:start="139:18" pos:end="139:39"><name pos:start="139:18" pos:end="139:33">lock_user_string</name><argument_list pos:start="139:34" pos:end="139:39">(<argument pos:start="139:35" pos:end="139:38"><expr pos:start="139:35" pos:end="139:38"><name pos:start="139:35" pos:end="139:38">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:41"><expr pos:start="141:13" pos:end="141:40"><name pos:start="141:13" pos:end="141:15">ret</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <call pos:start="141:19" pos:end="141:40"><name pos:start="141:19" pos:end="141:27">get_errno</name><argument_list pos:start="141:28" pos:end="141:40">(<argument pos:start="141:29" pos:end="141:39"><expr pos:start="141:29" pos:end="141:39"><call pos:start="141:29" pos:end="141:39"><name pos:start="141:29" pos:end="141:32">link</name><argument_list pos:start="141:33" pos:end="141:39">(<argument pos:start="141:34" pos:end="141:34"><expr pos:start="141:34" pos:end="141:34"><name pos:start="141:34" pos:end="141:34">p</name></expr></argument>, <argument pos:start="141:37" pos:end="141:38"><expr pos:start="141:37" pos:end="141:38"><name pos:start="141:37" pos:end="141:38">p2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:37"><expr pos:start="143:13" pos:end="143:36"><call pos:start="143:13" pos:end="143:36"><name pos:start="143:13" pos:end="143:23">unlock_user</name><argument_list pos:start="143:24" pos:end="143:36">(<argument pos:start="143:25" pos:end="143:26"><expr pos:start="143:25" pos:end="143:26"><name pos:start="143:25" pos:end="143:26">p2</name></expr></argument>, <argument pos:start="143:29" pos:end="143:32"><expr pos:start="143:29" pos:end="143:32"><name pos:start="143:29" pos:end="143:32">arg2</name></expr></argument>, <argument pos:start="143:35" pos:end="143:35"><expr pos:start="143:35" pos:end="143:35"><literal type="number" pos:start="143:35" pos:end="143:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:36"><expr pos:start="145:13" pos:end="145:35"><call pos:start="145:13" pos:end="145:35"><name pos:start="145:13" pos:end="145:23">unlock_user</name><argument_list pos:start="145:24" pos:end="145:35">(<argument pos:start="145:25" pos:end="145:25"><expr pos:start="145:25" pos:end="145:25"><name pos:start="145:25" pos:end="145:25">p</name></expr></argument>, <argument pos:start="145:28" pos:end="145:31"><expr pos:start="145:28" pos:end="145:31"><name pos:start="145:28" pos:end="145:31">arg1</name></expr></argument>, <argument pos:start="145:34" pos:end="145:34"><expr pos:start="145:34" pos:end="145:34"><literal type="number" pos:start="145:34" pos:end="145:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="149:9" pos:end="149:14">break;</break>

    <case pos:start="151:5" pos:end="151:26">case <expr pos:start="151:10" pos:end="151:25"><name pos:start="151:10" pos:end="151:25">TARGET_NR_unlink</name></expr>:</case>

        <expr_stmt pos:start="153:9" pos:end="153:35"><expr pos:start="153:9" pos:end="153:34"><name pos:start="153:9" pos:end="153:9">p</name> <operator pos:start="153:11" pos:end="153:11">=</operator> <call pos:start="153:13" pos:end="153:34"><name pos:start="153:13" pos:end="153:28">lock_user_string</name><argument_list pos:start="153:29" pos:end="153:34">(<argument pos:start="153:30" pos:end="153:33"><expr pos:start="153:30" pos:end="153:33"><name pos:start="153:30" pos:end="153:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:35"><expr pos:start="155:9" pos:end="155:34"><name pos:start="155:9" pos:end="155:11">ret</name> <operator pos:start="155:13" pos:end="155:13">=</operator> <call pos:start="155:15" pos:end="155:34"><name pos:start="155:15" pos:end="155:23">get_errno</name><argument_list pos:start="155:24" pos:end="155:34">(<argument pos:start="155:25" pos:end="155:33"><expr pos:start="155:25" pos:end="155:33"><call pos:start="155:25" pos:end="155:33"><name pos:start="155:25" pos:end="155:30">unlink</name><argument_list pos:start="155:31" pos:end="155:33">(<argument pos:start="155:32" pos:end="155:32"><expr pos:start="155:32" pos:end="155:32"><name pos:start="155:32" pos:end="155:32">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:32"><expr pos:start="157:9" pos:end="157:31"><call pos:start="157:9" pos:end="157:31"><name pos:start="157:9" pos:end="157:19">unlock_user</name><argument_list pos:start="157:20" pos:end="157:31">(<argument pos:start="157:21" pos:end="157:21"><expr pos:start="157:21" pos:end="157:21"><name pos:start="157:21" pos:end="157:21">p</name></expr></argument>, <argument pos:start="157:24" pos:end="157:27"><expr pos:start="157:24" pos:end="157:27"><name pos:start="157:24" pos:end="157:27">arg1</name></expr></argument>, <argument pos:start="157:30" pos:end="157:30"><expr pos:start="157:30" pos:end="157:30"><literal type="number" pos:start="157:30" pos:end="157:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    <case pos:start="161:5" pos:end="161:26">case <expr pos:start="161:10" pos:end="161:25"><name pos:start="161:10" pos:end="161:25">TARGET_NR_execve</name></expr>:</case>

        <block pos:start="163:9" pos:end="269:9">{<block_content pos:start="165:13" pos:end="267:13">

            <decl_stmt pos:start="165:13" pos:end="165:32"><decl pos:start="165:13" pos:end="165:23"><type pos:start="165:13" pos:end="165:19"><name pos:start="165:13" pos:end="165:16">char</name> <modifier pos:start="165:18" pos:end="165:18">*</modifier><modifier pos:start="165:19" pos:end="165:19">*</modifier></type><name pos:start="165:20" pos:end="165:23">argp</name></decl>, <decl pos:start="165:26" pos:end="165:31"><type ref="prev" pos:start="165:13" pos:end="165:19"><modifier pos:start="165:26" pos:end="165:26">*</modifier><modifier pos:start="165:27" pos:end="165:27">*</modifier></type><name pos:start="165:28" pos:end="165:31">envp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="167:13" pos:end="167:27"><decl pos:start="167:13" pos:end="167:20"><type pos:start="167:13" pos:end="167:15"><name pos:start="167:13" pos:end="167:15">int</name></type> <name pos:start="167:17" pos:end="167:20">argc</name></decl>, <decl pos:start="167:23" pos:end="167:26"><type ref="prev" pos:start="167:13" pos:end="167:15"/><name pos:start="167:23" pos:end="167:26">envc</name></decl>;</decl_stmt>

            <decl_stmt pos:start="169:13" pos:end="169:28"><decl pos:start="169:13" pos:end="169:27"><type pos:start="169:13" pos:end="169:24"><name pos:start="169:13" pos:end="169:24">target_ulong</name></type> <name pos:start="169:26" pos:end="169:27">gp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="171:13" pos:end="171:36"><decl pos:start="171:13" pos:end="171:35"><type pos:start="171:13" pos:end="171:24"><name pos:start="171:13" pos:end="171:24">target_ulong</name></type> <name pos:start="171:26" pos:end="171:35">guest_argp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="173:13" pos:end="173:36"><decl pos:start="173:13" pos:end="173:35"><type pos:start="173:13" pos:end="173:24"><name pos:start="173:13" pos:end="173:24">target_ulong</name></type> <name pos:start="173:26" pos:end="173:35">guest_envp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="175:13" pos:end="175:30"><decl pos:start="175:13" pos:end="175:29"><type pos:start="175:13" pos:end="175:24"><name pos:start="175:13" pos:end="175:24">target_ulong</name></type> <name pos:start="175:26" pos:end="175:29">addr</name></decl>;</decl_stmt>

            <decl_stmt pos:start="177:13" pos:end="177:21"><decl pos:start="177:13" pos:end="177:20"><type pos:start="177:13" pos:end="177:19"><name pos:start="177:13" pos:end="177:16">char</name> <modifier pos:start="177:18" pos:end="177:18">*</modifier><modifier pos:start="177:19" pos:end="177:19">*</modifier></type><name pos:start="177:20" pos:end="177:20">q</name></decl>;</decl_stmt>



            <expr_stmt pos:start="181:13" pos:end="181:21"><expr pos:start="181:13" pos:end="181:20"><name pos:start="181:13" pos:end="181:16">argc</name> <operator pos:start="181:18" pos:end="181:18">=</operator> <literal type="number" pos:start="181:20" pos:end="181:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:30"><expr pos:start="183:13" pos:end="183:29"><name pos:start="183:13" pos:end="183:22">guest_argp</name> <operator pos:start="183:24" pos:end="183:24">=</operator> <name pos:start="183:26" pos:end="183:29">arg2</name></expr>;</expr_stmt>

            <for pos:start="185:13" pos:end="187:23">for <control pos:start="185:17" pos:end="185:50">(<init pos:start="185:18" pos:end="185:33"><expr pos:start="185:18" pos:end="185:32"><name pos:start="185:18" pos:end="185:19">gp</name> <operator pos:start="185:21" pos:end="185:21">=</operator> <name pos:start="185:23" pos:end="185:32">guest_argp</name></expr>;</init> <condition pos:start="185:35" pos:end="185:44"><expr pos:start="185:35" pos:end="185:43"><call pos:start="185:35" pos:end="185:43"><name pos:start="185:35" pos:end="185:39">tgetl</name><argument_list pos:start="185:40" pos:end="185:43">(<argument pos:start="185:41" pos:end="185:42"><expr pos:start="185:41" pos:end="185:42"><name pos:start="185:41" pos:end="185:42">gp</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="185:46" pos:end="185:49"><expr pos:start="185:46" pos:end="185:49"><name pos:start="185:46" pos:end="185:47">gp</name><operator pos:start="185:48" pos:end="185:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="187:17" pos:end="187:23"><block_content pos:start="187:17" pos:end="187:23">

                <expr_stmt pos:start="187:17" pos:end="187:23"><expr pos:start="187:17" pos:end="187:22"><name pos:start="187:17" pos:end="187:20">argc</name><operator pos:start="187:21" pos:end="187:22">++</operator></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="189:13" pos:end="189:21"><expr pos:start="189:13" pos:end="189:20"><name pos:start="189:13" pos:end="189:16">envc</name> <operator pos:start="189:18" pos:end="189:18">=</operator> <literal type="number" pos:start="189:20" pos:end="189:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:30"><expr pos:start="191:13" pos:end="191:29"><name pos:start="191:13" pos:end="191:22">guest_envp</name> <operator pos:start="191:24" pos:end="191:24">=</operator> <name pos:start="191:26" pos:end="191:29">arg3</name></expr>;</expr_stmt>

            <for pos:start="193:13" pos:end="195:23">for <control pos:start="193:17" pos:end="193:50">(<init pos:start="193:18" pos:end="193:33"><expr pos:start="193:18" pos:end="193:32"><name pos:start="193:18" pos:end="193:19">gp</name> <operator pos:start="193:21" pos:end="193:21">=</operator> <name pos:start="193:23" pos:end="193:32">guest_envp</name></expr>;</init> <condition pos:start="193:35" pos:end="193:44"><expr pos:start="193:35" pos:end="193:43"><call pos:start="193:35" pos:end="193:43"><name pos:start="193:35" pos:end="193:39">tgetl</name><argument_list pos:start="193:40" pos:end="193:43">(<argument pos:start="193:41" pos:end="193:42"><expr pos:start="193:41" pos:end="193:42"><name pos:start="193:41" pos:end="193:42">gp</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="193:46" pos:end="193:49"><expr pos:start="193:46" pos:end="193:49"><name pos:start="193:46" pos:end="193:47">gp</name><operator pos:start="193:48" pos:end="193:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="195:17" pos:end="195:23"><block_content pos:start="195:17" pos:end="195:23">

                <expr_stmt pos:start="195:17" pos:end="195:23"><expr pos:start="195:17" pos:end="195:22"><name pos:start="195:17" pos:end="195:20">envc</name><operator pos:start="195:21" pos:end="195:22">++</operator></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="199:13" pos:end="199:55"><expr pos:start="199:13" pos:end="199:54"><name pos:start="199:13" pos:end="199:16">argp</name> <operator pos:start="199:18" pos:end="199:18">=</operator> <call pos:start="199:20" pos:end="199:54"><name pos:start="199:20" pos:end="199:25">alloca</name><argument_list pos:start="199:26" pos:end="199:54">(<argument pos:start="199:27" pos:end="199:53"><expr pos:start="199:27" pos:end="199:53"><operator pos:start="199:27" pos:end="199:27">(</operator><name pos:start="199:28" pos:end="199:31">argc</name> <operator pos:start="199:33" pos:end="199:33">+</operator> <literal type="number" pos:start="199:35" pos:end="199:35">1</literal><operator pos:start="199:36" pos:end="199:36">)</operator> <operator pos:start="199:38" pos:end="199:38">*</operator> <sizeof pos:start="199:40" pos:end="199:53">sizeof<argument_list pos:start="199:46" pos:end="199:53">(<argument pos:start="199:47" pos:end="199:52"><expr pos:start="199:47" pos:end="199:52"><name pos:start="199:47" pos:end="199:50">void</name> <operator pos:start="199:52" pos:end="199:52">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:55"><expr pos:start="201:13" pos:end="201:54"><name pos:start="201:13" pos:end="201:16">envp</name> <operator pos:start="201:18" pos:end="201:18">=</operator> <call pos:start="201:20" pos:end="201:54"><name pos:start="201:20" pos:end="201:25">alloca</name><argument_list pos:start="201:26" pos:end="201:54">(<argument pos:start="201:27" pos:end="201:53"><expr pos:start="201:27" pos:end="201:53"><operator pos:start="201:27" pos:end="201:27">(</operator><name pos:start="201:28" pos:end="201:31">envc</name> <operator pos:start="201:33" pos:end="201:33">+</operator> <literal type="number" pos:start="201:35" pos:end="201:35">1</literal><operator pos:start="201:36" pos:end="201:36">)</operator> <operator pos:start="201:38" pos:end="201:38">*</operator> <sizeof pos:start="201:40" pos:end="201:53">sizeof<argument_list pos:start="201:46" pos:end="201:53">(<argument pos:start="201:47" pos:end="201:52"><expr pos:start="201:47" pos:end="201:52"><name pos:start="201:47" pos:end="201:50">void</name> <operator pos:start="201:52" pos:end="201:52">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="205:13" pos:end="217:13">for <control pos:start="205:17" pos:end="207:50">(<init pos:start="205:18" pos:end="205:43"><expr pos:start="205:18" pos:end="205:32"><name pos:start="205:18" pos:end="205:19">gp</name> <operator pos:start="205:21" pos:end="205:21">=</operator> <name pos:start="205:23" pos:end="205:32">guest_argp</name></expr><operator pos:start="205:33" pos:end="205:33">,</operator> <expr pos:start="205:35" pos:end="205:42"><name pos:start="205:35" pos:end="205:35">q</name> <operator pos:start="205:37" pos:end="205:37">=</operator> <name pos:start="205:39" pos:end="205:42">argp</name></expr>;</init> <condition pos:start="205:45" pos:end="205:45">;</condition>

                  <incr pos:start="207:19" pos:end="207:49"><expr pos:start="207:19" pos:end="207:44"><name pos:start="207:19" pos:end="207:20">gp</name> <operator pos:start="207:22" pos:end="207:23">+=</operator> <sizeof pos:start="207:25" pos:end="207:44">sizeof<argument_list pos:start="207:31" pos:end="207:44">(<argument pos:start="207:32" pos:end="207:43"><expr pos:start="207:32" pos:end="207:43"><name pos:start="207:32" pos:end="207:43">target_ulong</name></expr></argument>)</argument_list></sizeof></expr><operator pos:start="207:45" pos:end="207:45">,</operator> <expr pos:start="207:47" pos:end="207:49"><name pos:start="207:47" pos:end="207:47">q</name><operator pos:start="207:48" pos:end="207:49">++</operator></expr></incr>)</control> <block pos:start="207:52" pos:end="217:13">{<block_content pos:start="209:17" pos:end="215:44">

                <expr_stmt pos:start="209:17" pos:end="209:33"><expr pos:start="209:17" pos:end="209:32"><name pos:start="209:17" pos:end="209:20">addr</name> <operator pos:start="209:22" pos:end="209:22">=</operator> <call pos:start="209:24" pos:end="209:32"><name pos:start="209:24" pos:end="209:28">tgetl</name><argument_list pos:start="209:29" pos:end="209:32">(<argument pos:start="209:30" pos:end="209:31"><expr pos:start="209:30" pos:end="209:31"><name pos:start="209:30" pos:end="209:31">gp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="211:17" pos:end="213:26"><if pos:start="211:17" pos:end="213:26">if <condition pos:start="211:20" pos:end="211:26">(<expr pos:start="211:21" pos:end="211:25"><operator pos:start="211:21" pos:end="211:21">!</operator><name pos:start="211:22" pos:end="211:25">addr</name></expr>)</condition><block type="pseudo" pos:start="213:21" pos:end="213:26"><block_content pos:start="213:21" pos:end="213:26">

                    <break pos:start="213:21" pos:end="213:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="215:17" pos:end="215:44"><expr pos:start="215:17" pos:end="215:43"><operator pos:start="215:17" pos:end="215:17">*</operator><name pos:start="215:18" pos:end="215:18">q</name> <operator pos:start="215:20" pos:end="215:20">=</operator> <call pos:start="215:22" pos:end="215:43"><name pos:start="215:22" pos:end="215:37">lock_user_string</name><argument_list pos:start="215:38" pos:end="215:43">(<argument pos:start="215:39" pos:end="215:42"><expr pos:start="215:39" pos:end="215:42"><name pos:start="215:39" pos:end="215:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="219:13" pos:end="219:22"><expr pos:start="219:13" pos:end="219:21"><operator pos:start="219:13" pos:end="219:13">*</operator><name pos:start="219:14" pos:end="219:14">q</name> <operator pos:start="219:16" pos:end="219:16">=</operator> <name pos:start="219:18" pos:end="219:21">NULL</name></expr>;</expr_stmt>



            <for pos:start="223:13" pos:end="235:13">for <control pos:start="223:17" pos:end="225:50">(<init pos:start="223:18" pos:end="223:43"><expr pos:start="223:18" pos:end="223:32"><name pos:start="223:18" pos:end="223:19">gp</name> <operator pos:start="223:21" pos:end="223:21">=</operator> <name pos:start="223:23" pos:end="223:32">guest_envp</name></expr><operator pos:start="223:33" pos:end="223:33">,</operator> <expr pos:start="223:35" pos:end="223:42"><name pos:start="223:35" pos:end="223:35">q</name> <operator pos:start="223:37" pos:end="223:37">=</operator> <name pos:start="223:39" pos:end="223:42">envp</name></expr>;</init> <condition pos:start="223:45" pos:end="223:45">;</condition>

                  <incr pos:start="225:19" pos:end="225:49"><expr pos:start="225:19" pos:end="225:44"><name pos:start="225:19" pos:end="225:20">gp</name> <operator pos:start="225:22" pos:end="225:23">+=</operator> <sizeof pos:start="225:25" pos:end="225:44">sizeof<argument_list pos:start="225:31" pos:end="225:44">(<argument pos:start="225:32" pos:end="225:43"><expr pos:start="225:32" pos:end="225:43"><name pos:start="225:32" pos:end="225:43">target_ulong</name></expr></argument>)</argument_list></sizeof></expr><operator pos:start="225:45" pos:end="225:45">,</operator> <expr pos:start="225:47" pos:end="225:49"><name pos:start="225:47" pos:end="225:47">q</name><operator pos:start="225:48" pos:end="225:49">++</operator></expr></incr>)</control> <block pos:start="225:52" pos:end="235:13">{<block_content pos:start="227:17" pos:end="233:44">

                <expr_stmt pos:start="227:17" pos:end="227:33"><expr pos:start="227:17" pos:end="227:32"><name pos:start="227:17" pos:end="227:20">addr</name> <operator pos:start="227:22" pos:end="227:22">=</operator> <call pos:start="227:24" pos:end="227:32"><name pos:start="227:24" pos:end="227:28">tgetl</name><argument_list pos:start="227:29" pos:end="227:32">(<argument pos:start="227:30" pos:end="227:31"><expr pos:start="227:30" pos:end="227:31"><name pos:start="227:30" pos:end="227:31">gp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="229:17" pos:end="231:26"><if pos:start="229:17" pos:end="231:26">if <condition pos:start="229:20" pos:end="229:26">(<expr pos:start="229:21" pos:end="229:25"><operator pos:start="229:21" pos:end="229:21">!</operator><name pos:start="229:22" pos:end="229:25">addr</name></expr>)</condition><block type="pseudo" pos:start="231:21" pos:end="231:26"><block_content pos:start="231:21" pos:end="231:26">

                    <break pos:start="231:21" pos:end="231:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:44"><expr pos:start="233:17" pos:end="233:43"><operator pos:start="233:17" pos:end="233:17">*</operator><name pos:start="233:18" pos:end="233:18">q</name> <operator pos:start="233:20" pos:end="233:20">=</operator> <call pos:start="233:22" pos:end="233:43"><name pos:start="233:22" pos:end="233:37">lock_user_string</name><argument_list pos:start="233:38" pos:end="233:43">(<argument pos:start="233:39" pos:end="233:42"><expr pos:start="233:39" pos:end="233:42"><name pos:start="233:39" pos:end="233:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="237:13" pos:end="237:22"><expr pos:start="237:13" pos:end="237:21"><operator pos:start="237:13" pos:end="237:13">*</operator><name pos:start="237:14" pos:end="237:14">q</name> <operator pos:start="237:16" pos:end="237:16">=</operator> <name pos:start="237:18" pos:end="237:21">NULL</name></expr>;</expr_stmt>



            <expr_stmt pos:start="241:13" pos:end="241:39"><expr pos:start="241:13" pos:end="241:38"><name pos:start="241:13" pos:end="241:13">p</name> <operator pos:start="241:15" pos:end="241:15">=</operator> <call pos:start="241:17" pos:end="241:38"><name pos:start="241:17" pos:end="241:32">lock_user_string</name><argument_list pos:start="241:33" pos:end="241:38">(<argument pos:start="241:34" pos:end="241:37"><expr pos:start="241:34" pos:end="241:37"><name pos:start="241:34" pos:end="241:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:51"><expr pos:start="243:13" pos:end="243:50"><name pos:start="243:13" pos:end="243:15">ret</name> <operator pos:start="243:17" pos:end="243:17">=</operator> <call pos:start="243:19" pos:end="243:50"><name pos:start="243:19" pos:end="243:27">get_errno</name><argument_list pos:start="243:28" pos:end="243:50">(<argument pos:start="243:29" pos:end="243:49"><expr pos:start="243:29" pos:end="243:49"><call pos:start="243:29" pos:end="243:49"><name pos:start="243:29" pos:end="243:34">execve</name><argument_list pos:start="243:35" pos:end="243:49">(<argument pos:start="243:36" pos:end="243:36"><expr pos:start="243:36" pos:end="243:36"><name pos:start="243:36" pos:end="243:36">p</name></expr></argument>, <argument pos:start="243:39" pos:end="243:42"><expr pos:start="243:39" pos:end="243:42"><name pos:start="243:39" pos:end="243:42">argp</name></expr></argument>, <argument pos:start="243:45" pos:end="243:48"><expr pos:start="243:45" pos:end="243:48"><name pos:start="243:45" pos:end="243:48">envp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:36"><expr pos:start="245:13" pos:end="245:35"><call pos:start="245:13" pos:end="245:35"><name pos:start="245:13" pos:end="245:23">unlock_user</name><argument_list pos:start="245:24" pos:end="245:35">(<argument pos:start="245:25" pos:end="245:25"><expr pos:start="245:25" pos:end="245:25"><name pos:start="245:25" pos:end="245:25">p</name></expr></argument>, <argument pos:start="245:28" pos:end="245:31"><expr pos:start="245:28" pos:end="245:31"><name pos:start="245:28" pos:end="245:31">arg1</name></expr></argument>, <argument pos:start="245:34" pos:end="245:34"><expr pos:start="245:34" pos:end="245:34"><literal type="number" pos:start="245:34" pos:end="245:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="249:13" pos:end="257:13">for <control pos:start="249:17" pos:end="251:50">(<init pos:start="249:18" pos:end="249:43"><expr pos:start="249:18" pos:end="249:32"><name pos:start="249:18" pos:end="249:19">gp</name> <operator pos:start="249:21" pos:end="249:21">=</operator> <name pos:start="249:23" pos:end="249:32">guest_argp</name></expr><operator pos:start="249:33" pos:end="249:33">,</operator> <expr pos:start="249:35" pos:end="249:42"><name pos:start="249:35" pos:end="249:35">q</name> <operator pos:start="249:37" pos:end="249:37">=</operator> <name pos:start="249:39" pos:end="249:42">argp</name></expr>;</init> <condition pos:start="249:45" pos:end="249:47"><expr pos:start="249:45" pos:end="249:46"><operator pos:start="249:45" pos:end="249:45">*</operator><name pos:start="249:46" pos:end="249:46">q</name></expr>;</condition>

                  <incr pos:start="251:19" pos:end="251:49"><expr pos:start="251:19" pos:end="251:44"><name pos:start="251:19" pos:end="251:20">gp</name> <operator pos:start="251:22" pos:end="251:23">+=</operator> <sizeof pos:start="251:25" pos:end="251:44">sizeof<argument_list pos:start="251:31" pos:end="251:44">(<argument pos:start="251:32" pos:end="251:43"><expr pos:start="251:32" pos:end="251:43"><name pos:start="251:32" pos:end="251:43">target_ulong</name></expr></argument>)</argument_list></sizeof></expr><operator pos:start="251:45" pos:end="251:45">,</operator> <expr pos:start="251:47" pos:end="251:49"><name pos:start="251:47" pos:end="251:47">q</name><operator pos:start="251:48" pos:end="251:49">++</operator></expr></incr>)</control> <block pos:start="251:52" pos:end="257:13">{<block_content pos:start="253:17" pos:end="255:41">

                <expr_stmt pos:start="253:17" pos:end="253:33"><expr pos:start="253:17" pos:end="253:32"><name pos:start="253:17" pos:end="253:20">addr</name> <operator pos:start="253:22" pos:end="253:22">=</operator> <call pos:start="253:24" pos:end="253:32"><name pos:start="253:24" pos:end="253:28">tgetl</name><argument_list pos:start="253:29" pos:end="253:32">(<argument pos:start="253:30" pos:end="253:31"><expr pos:start="253:30" pos:end="253:31"><name pos:start="253:30" pos:end="253:31">gp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:41"><expr pos:start="255:17" pos:end="255:40"><call pos:start="255:17" pos:end="255:40"><name pos:start="255:17" pos:end="255:27">unlock_user</name><argument_list pos:start="255:28" pos:end="255:40">(<argument pos:start="255:29" pos:end="255:30"><expr pos:start="255:29" pos:end="255:30"><operator pos:start="255:29" pos:end="255:29">*</operator><name pos:start="255:30" pos:end="255:30">q</name></expr></argument>, <argument pos:start="255:33" pos:end="255:36"><expr pos:start="255:33" pos:end="255:36"><name pos:start="255:33" pos:end="255:36">addr</name></expr></argument>, <argument pos:start="255:39" pos:end="255:39"><expr pos:start="255:39" pos:end="255:39"><literal type="number" pos:start="255:39" pos:end="255:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="259:13" pos:end="267:13">for <control pos:start="259:17" pos:end="261:50">(<init pos:start="259:18" pos:end="259:43"><expr pos:start="259:18" pos:end="259:32"><name pos:start="259:18" pos:end="259:19">gp</name> <operator pos:start="259:21" pos:end="259:21">=</operator> <name pos:start="259:23" pos:end="259:32">guest_envp</name></expr><operator pos:start="259:33" pos:end="259:33">,</operator> <expr pos:start="259:35" pos:end="259:42"><name pos:start="259:35" pos:end="259:35">q</name> <operator pos:start="259:37" pos:end="259:37">=</operator> <name pos:start="259:39" pos:end="259:42">envp</name></expr>;</init> <condition pos:start="259:45" pos:end="259:47"><expr pos:start="259:45" pos:end="259:46"><operator pos:start="259:45" pos:end="259:45">*</operator><name pos:start="259:46" pos:end="259:46">q</name></expr>;</condition>

                  <incr pos:start="261:19" pos:end="261:49"><expr pos:start="261:19" pos:end="261:44"><name pos:start="261:19" pos:end="261:20">gp</name> <operator pos:start="261:22" pos:end="261:23">+=</operator> <sizeof pos:start="261:25" pos:end="261:44">sizeof<argument_list pos:start="261:31" pos:end="261:44">(<argument pos:start="261:32" pos:end="261:43"><expr pos:start="261:32" pos:end="261:43"><name pos:start="261:32" pos:end="261:43">target_ulong</name></expr></argument>)</argument_list></sizeof></expr><operator pos:start="261:45" pos:end="261:45">,</operator> <expr pos:start="261:47" pos:end="261:49"><name pos:start="261:47" pos:end="261:47">q</name><operator pos:start="261:48" pos:end="261:49">++</operator></expr></incr>)</control> <block pos:start="261:52" pos:end="267:13">{<block_content pos:start="263:17" pos:end="265:41">

                <expr_stmt pos:start="263:17" pos:end="263:33"><expr pos:start="263:17" pos:end="263:32"><name pos:start="263:17" pos:end="263:20">addr</name> <operator pos:start="263:22" pos:end="263:22">=</operator> <call pos:start="263:24" pos:end="263:32"><name pos:start="263:24" pos:end="263:28">tgetl</name><argument_list pos:start="263:29" pos:end="263:32">(<argument pos:start="263:30" pos:end="263:31"><expr pos:start="263:30" pos:end="263:31"><name pos:start="263:30" pos:end="263:31">gp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="265:17" pos:end="265:41"><expr pos:start="265:17" pos:end="265:40"><call pos:start="265:17" pos:end="265:40"><name pos:start="265:17" pos:end="265:27">unlock_user</name><argument_list pos:start="265:28" pos:end="265:40">(<argument pos:start="265:29" pos:end="265:30"><expr pos:start="265:29" pos:end="265:30"><operator pos:start="265:29" pos:end="265:29">*</operator><name pos:start="265:30" pos:end="265:30">q</name></expr></argument>, <argument pos:start="265:33" pos:end="265:36"><expr pos:start="265:33" pos:end="265:36"><name pos:start="265:33" pos:end="265:36">addr</name></expr></argument>, <argument pos:start="265:39" pos:end="265:39"><expr pos:start="265:39" pos:end="265:39"><literal type="number" pos:start="265:39" pos:end="265:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block>

        <break pos:start="271:9" pos:end="271:14">break;</break>

    <case pos:start="273:5" pos:end="273:25">case <expr pos:start="273:10" pos:end="273:24"><name pos:start="273:10" pos:end="273:24">TARGET_NR_chdir</name></expr>:</case>

        <expr_stmt pos:start="275:9" pos:end="275:35"><expr pos:start="275:9" pos:end="275:34"><name pos:start="275:9" pos:end="275:9">p</name> <operator pos:start="275:11" pos:end="275:11">=</operator> <call pos:start="275:13" pos:end="275:34"><name pos:start="275:13" pos:end="275:28">lock_user_string</name><argument_list pos:start="275:29" pos:end="275:34">(<argument pos:start="275:30" pos:end="275:33"><expr pos:start="275:30" pos:end="275:33"><name pos:start="275:30" pos:end="275:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:34"><expr pos:start="277:9" pos:end="277:33"><name pos:start="277:9" pos:end="277:11">ret</name> <operator pos:start="277:13" pos:end="277:13">=</operator> <call pos:start="277:15" pos:end="277:33"><name pos:start="277:15" pos:end="277:23">get_errno</name><argument_list pos:start="277:24" pos:end="277:33">(<argument pos:start="277:25" pos:end="277:32"><expr pos:start="277:25" pos:end="277:32"><call pos:start="277:25" pos:end="277:32"><name pos:start="277:25" pos:end="277:29">chdir</name><argument_list pos:start="277:30" pos:end="277:32">(<argument pos:start="277:31" pos:end="277:31"><expr pos:start="277:31" pos:end="277:31"><name pos:start="277:31" pos:end="277:31">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:32"><expr pos:start="279:9" pos:end="279:31"><call pos:start="279:9" pos:end="279:31"><name pos:start="279:9" pos:end="279:19">unlock_user</name><argument_list pos:start="279:20" pos:end="279:31">(<argument pos:start="279:21" pos:end="279:21"><expr pos:start="279:21" pos:end="279:21"><name pos:start="279:21" pos:end="279:21">p</name></expr></argument>, <argument pos:start="279:24" pos:end="279:27"><expr pos:start="279:24" pos:end="279:27"><name pos:start="279:24" pos:end="279:27">arg1</name></expr></argument>, <argument pos:start="279:30" pos:end="279:30"><expr pos:start="279:30" pos:end="279:30"><literal type="number" pos:start="279:30" pos:end="279:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="281:9" pos:end="284:0">break;</break>

<cpp:ifdef pos:start="283:1" pos:end="283:21">#<cpp:directive pos:start="283:2" pos:end="283:6">ifdef</cpp:directive> <name pos:start="283:8" pos:end="283:21">TARGET_NR_time</name></cpp:ifdef>

    <case pos:start="285:5" pos:end="285:24">case <expr pos:start="285:10" pos:end="285:23"><name pos:start="285:10" pos:end="285:23">TARGET_NR_time</name></expr>:</case>

        <block pos:start="287:9" pos:end="297:9">{<block_content pos:start="289:13" pos:end="295:39">

            <decl_stmt pos:start="289:13" pos:end="289:29"><decl pos:start="289:13" pos:end="289:28"><type pos:start="289:13" pos:end="289:18"><name pos:start="289:13" pos:end="289:18">time_t</name></type> <name pos:start="289:20" pos:end="289:28">host_time</name></decl>;</decl_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:46"><expr pos:start="291:13" pos:end="291:45"><name pos:start="291:13" pos:end="291:15">ret</name> <operator pos:start="291:17" pos:end="291:17">=</operator> <call pos:start="291:19" pos:end="291:45"><name pos:start="291:19" pos:end="291:27">get_errno</name><argument_list pos:start="291:28" pos:end="291:45">(<argument pos:start="291:29" pos:end="291:44"><expr pos:start="291:29" pos:end="291:44"><call pos:start="291:29" pos:end="291:44"><name pos:start="291:29" pos:end="291:32">time</name><argument_list pos:start="291:33" pos:end="291:44">(<argument pos:start="291:34" pos:end="291:43"><expr pos:start="291:34" pos:end="291:43"><operator pos:start="291:34" pos:end="291:34">&amp;</operator><name pos:start="291:35" pos:end="291:43">host_time</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="293:13" pos:end="295:39"><if pos:start="293:13" pos:end="295:39">if <condition pos:start="293:16" pos:end="293:39">(<expr pos:start="293:17" pos:end="293:38"><operator pos:start="293:17" pos:end="293:17">!</operator><call pos:start="293:18" pos:end="293:30"><name pos:start="293:18" pos:end="293:25">is_error</name><argument_list pos:start="293:26" pos:end="293:30">(<argument pos:start="293:27" pos:end="293:29"><expr pos:start="293:27" pos:end="293:29"><name pos:start="293:27" pos:end="293:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="293:32" pos:end="293:33">&amp;&amp;</operator> <name pos:start="293:35" pos:end="293:38">arg1</name></expr>)</condition><block type="pseudo" pos:start="295:17" pos:end="295:39"><block_content pos:start="295:17" pos:end="295:39">

                <expr_stmt pos:start="295:17" pos:end="295:39"><expr pos:start="295:17" pos:end="295:38"><call pos:start="295:17" pos:end="295:38"><name pos:start="295:17" pos:end="295:21">tputl</name><argument_list pos:start="295:22" pos:end="295:38">(<argument pos:start="295:23" pos:end="295:26"><expr pos:start="295:23" pos:end="295:26"><name pos:start="295:23" pos:end="295:26">arg1</name></expr></argument>, <argument pos:start="295:29" pos:end="295:37"><expr pos:start="295:29" pos:end="295:37"><name pos:start="295:29" pos:end="295:37">host_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="299:9" pos:end="302:0">break;</break>

<cpp:endif pos:start="301:1" pos:end="301:6">#<cpp:directive pos:start="301:2" pos:end="301:6">endif</cpp:directive></cpp:endif>

    <case pos:start="303:5" pos:end="303:25">case <expr pos:start="303:10" pos:end="303:24"><name pos:start="303:10" pos:end="303:24">TARGET_NR_mknod</name></expr>:</case>

        <expr_stmt pos:start="305:9" pos:end="305:35"><expr pos:start="305:9" pos:end="305:34"><name pos:start="305:9" pos:end="305:9">p</name> <operator pos:start="305:11" pos:end="305:11">=</operator> <call pos:start="305:13" pos:end="305:34"><name pos:start="305:13" pos:end="305:28">lock_user_string</name><argument_list pos:start="305:29" pos:end="305:34">(<argument pos:start="305:30" pos:end="305:33"><expr pos:start="305:30" pos:end="305:33"><name pos:start="305:30" pos:end="305:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:46"><expr pos:start="307:9" pos:end="307:45"><name pos:start="307:9" pos:end="307:11">ret</name> <operator pos:start="307:13" pos:end="307:13">=</operator> <call pos:start="307:15" pos:end="307:45"><name pos:start="307:15" pos:end="307:23">get_errno</name><argument_list pos:start="307:24" pos:end="307:45">(<argument pos:start="307:25" pos:end="307:44"><expr pos:start="307:25" pos:end="307:44"><call pos:start="307:25" pos:end="307:44"><name pos:start="307:25" pos:end="307:29">mknod</name><argument_list pos:start="307:30" pos:end="307:44">(<argument pos:start="307:31" pos:end="307:31"><expr pos:start="307:31" pos:end="307:31"><name pos:start="307:31" pos:end="307:31">p</name></expr></argument>, <argument pos:start="307:34" pos:end="307:37"><expr pos:start="307:34" pos:end="307:37"><name pos:start="307:34" pos:end="307:37">arg2</name></expr></argument>, <argument pos:start="307:40" pos:end="307:43"><expr pos:start="307:40" pos:end="307:43"><name pos:start="307:40" pos:end="307:43">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:32"><expr pos:start="309:9" pos:end="309:31"><call pos:start="309:9" pos:end="309:31"><name pos:start="309:9" pos:end="309:19">unlock_user</name><argument_list pos:start="309:20" pos:end="309:31">(<argument pos:start="309:21" pos:end="309:21"><expr pos:start="309:21" pos:end="309:21"><name pos:start="309:21" pos:end="309:21">p</name></expr></argument>, <argument pos:start="309:24" pos:end="309:27"><expr pos:start="309:24" pos:end="309:27"><name pos:start="309:24" pos:end="309:27">arg1</name></expr></argument>, <argument pos:start="309:30" pos:end="309:30"><expr pos:start="309:30" pos:end="309:30"><literal type="number" pos:start="309:30" pos:end="309:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="311:9" pos:end="311:14">break;</break>

    <case pos:start="313:5" pos:end="313:25">case <expr pos:start="313:10" pos:end="313:24"><name pos:start="313:10" pos:end="313:24">TARGET_NR_chmod</name></expr>:</case>

        <expr_stmt pos:start="315:9" pos:end="315:35"><expr pos:start="315:9" pos:end="315:34"><name pos:start="315:9" pos:end="315:9">p</name> <operator pos:start="315:11" pos:end="315:11">=</operator> <call pos:start="315:13" pos:end="315:34"><name pos:start="315:13" pos:end="315:28">lock_user_string</name><argument_list pos:start="315:29" pos:end="315:34">(<argument pos:start="315:30" pos:end="315:33"><expr pos:start="315:30" pos:end="315:33"><name pos:start="315:30" pos:end="315:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:40"><expr pos:start="317:9" pos:end="317:39"><name pos:start="317:9" pos:end="317:11">ret</name> <operator pos:start="317:13" pos:end="317:13">=</operator> <call pos:start="317:15" pos:end="317:39"><name pos:start="317:15" pos:end="317:23">get_errno</name><argument_list pos:start="317:24" pos:end="317:39">(<argument pos:start="317:25" pos:end="317:38"><expr pos:start="317:25" pos:end="317:38"><call pos:start="317:25" pos:end="317:38"><name pos:start="317:25" pos:end="317:29">chmod</name><argument_list pos:start="317:30" pos:end="317:38">(<argument pos:start="317:31" pos:end="317:31"><expr pos:start="317:31" pos:end="317:31"><name pos:start="317:31" pos:end="317:31">p</name></expr></argument>, <argument pos:start="317:34" pos:end="317:37"><expr pos:start="317:34" pos:end="317:37"><name pos:start="317:34" pos:end="317:37">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:32"><expr pos:start="319:9" pos:end="319:31"><call pos:start="319:9" pos:end="319:31"><name pos:start="319:9" pos:end="319:19">unlock_user</name><argument_list pos:start="319:20" pos:end="319:31">(<argument pos:start="319:21" pos:end="319:21"><expr pos:start="319:21" pos:end="319:21"><name pos:start="319:21" pos:end="319:21">p</name></expr></argument>, <argument pos:start="319:24" pos:end="319:27"><expr pos:start="319:24" pos:end="319:27"><name pos:start="319:24" pos:end="319:27">arg1</name></expr></argument>, <argument pos:start="319:30" pos:end="319:30"><expr pos:start="319:30" pos:end="319:30"><literal type="number" pos:start="319:30" pos:end="319:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="321:9" pos:end="324:0">break;</break>

<cpp:ifdef pos:start="323:1" pos:end="323:22">#<cpp:directive pos:start="323:2" pos:end="323:6">ifdef</cpp:directive> <name pos:start="323:8" pos:end="323:22">TARGET_NR_break</name></cpp:ifdef>

    <case pos:start="325:5" pos:end="325:25">case <expr pos:start="325:10" pos:end="325:24"><name pos:start="325:10" pos:end="325:24">TARGET_NR_break</name></expr>:</case>

        <goto pos:start="327:9" pos:end="332:0">goto <name pos:start="327:14" pos:end="327:26">unimplemented</name>;</goto>

<cpp:endif pos:start="329:1" pos:end="329:6">#<cpp:directive pos:start="329:2" pos:end="329:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="331:1" pos:end="331:24">#<cpp:directive pos:start="331:2" pos:end="331:6">ifdef</cpp:directive> <name pos:start="331:8" pos:end="331:24">TARGET_NR_oldstat</name></cpp:ifdef>

    <case pos:start="333:5" pos:end="333:27">case <expr pos:start="333:10" pos:end="333:26"><name pos:start="333:10" pos:end="333:26">TARGET_NR_oldstat</name></expr>:</case>

        <goto pos:start="335:9" pos:end="338:0">goto <name pos:start="335:14" pos:end="335:26">unimplemented</name>;</goto>

<cpp:endif pos:start="337:1" pos:end="337:6">#<cpp:directive pos:start="337:2" pos:end="337:6">endif</cpp:directive></cpp:endif>

    <case pos:start="339:5" pos:end="339:25">case <expr pos:start="339:10" pos:end="339:24"><name pos:start="339:10" pos:end="339:24">TARGET_NR_lseek</name></expr>:</case>

        <expr_stmt pos:start="341:9" pos:end="341:49"><expr pos:start="341:9" pos:end="341:48"><name pos:start="341:9" pos:end="341:11">ret</name> <operator pos:start="341:13" pos:end="341:13">=</operator> <call pos:start="341:15" pos:end="341:48"><name pos:start="341:15" pos:end="341:23">get_errno</name><argument_list pos:start="341:24" pos:end="341:48">(<argument pos:start="341:25" pos:end="341:47"><expr pos:start="341:25" pos:end="341:47"><call pos:start="341:25" pos:end="341:47"><name pos:start="341:25" pos:end="341:29">lseek</name><argument_list pos:start="341:30" pos:end="341:47">(<argument pos:start="341:31" pos:end="341:34"><expr pos:start="341:31" pos:end="341:34"><name pos:start="341:31" pos:end="341:34">arg1</name></expr></argument>, <argument pos:start="341:37" pos:end="341:40"><expr pos:start="341:37" pos:end="341:40"><name pos:start="341:37" pos:end="341:40">arg2</name></expr></argument>, <argument pos:start="341:43" pos:end="341:46"><expr pos:start="341:43" pos:end="341:46"><name pos:start="341:43" pos:end="341:46">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="343:9" pos:end="346:0">break;</break>

<cpp:ifdef pos:start="345:1" pos:end="345:24">#<cpp:directive pos:start="345:2" pos:end="345:6">ifdef</cpp:directive> <name pos:start="345:8" pos:end="345:24">TARGET_NR_getxpid</name></cpp:ifdef>

    <case pos:start="347:5" pos:end="350:0">case <expr pos:start="347:10" pos:end="347:26"><name pos:start="347:10" pos:end="347:26">TARGET_NR_getxpid</name></expr>:</case>

<cpp:else pos:start="349:1" pos:end="349:5">#<cpp:directive pos:start="349:2" pos:end="349:5">else</cpp:directive></cpp:else>

    <case pos:start="351:5" pos:end="354:0">case <expr pos:start="351:10" pos:end="351:25"><name pos:start="351:10" pos:end="351:25">TARGET_NR_getpid</name></expr>:</case>

<cpp:endif pos:start="353:1" pos:end="353:6">#<cpp:directive pos:start="353:2" pos:end="353:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="355:9" pos:end="355:34"><expr pos:start="355:9" pos:end="355:33"><name pos:start="355:9" pos:end="355:11">ret</name> <operator pos:start="355:13" pos:end="355:13">=</operator> <call pos:start="355:15" pos:end="355:33"><name pos:start="355:15" pos:end="355:23">get_errno</name><argument_list pos:start="355:24" pos:end="355:33">(<argument pos:start="355:25" pos:end="355:32"><expr pos:start="355:25" pos:end="355:32"><call pos:start="355:25" pos:end="355:32"><name pos:start="355:25" pos:end="355:30">getpid</name><argument_list pos:start="355:31" pos:end="355:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="357:9" pos:end="357:14">break;</break>

    <case pos:start="359:5" pos:end="359:25">case <expr pos:start="359:10" pos:end="359:24"><name pos:start="359:10" pos:end="359:24">TARGET_NR_mount</name></expr>:</case>

		<block pos:start="361:17" pos:end="386:0">{<block_content pos:start="365:25" pos:end="381:30">

			<comment type="block" pos:start="363:25" pos:end="363:60">/* need to look at the data field */</comment>

			<decl_stmt pos:start="365:25" pos:end="365:38"><decl pos:start="365:25" pos:end="365:32"><type pos:start="365:25" pos:end="365:30"><name pos:start="365:25" pos:end="365:28">void</name> <modifier pos:start="365:30" pos:end="365:30">*</modifier></type><name pos:start="365:31" pos:end="365:32">p2</name></decl>, <decl pos:start="365:35" pos:end="365:37"><type ref="prev" pos:start="365:25" pos:end="365:30"><modifier pos:start="365:35" pos:end="365:35">*</modifier></type><name pos:start="365:36" pos:end="365:37">p3</name></decl>;</decl_stmt>

			<expr_stmt pos:start="367:25" pos:end="367:51"><expr pos:start="367:25" pos:end="367:50"><name pos:start="367:25" pos:end="367:25">p</name> <operator pos:start="367:27" pos:end="367:27">=</operator> <call pos:start="367:29" pos:end="367:50"><name pos:start="367:29" pos:end="367:44">lock_user_string</name><argument_list pos:start="367:45" pos:end="367:50">(<argument pos:start="367:46" pos:end="367:49"><expr pos:start="367:46" pos:end="367:49"><name pos:start="367:46" pos:end="367:49">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="369:25" pos:end="369:52"><expr pos:start="369:25" pos:end="369:51"><name pos:start="369:25" pos:end="369:26">p2</name> <operator pos:start="369:28" pos:end="369:28">=</operator> <call pos:start="369:30" pos:end="369:51"><name pos:start="369:30" pos:end="369:45">lock_user_string</name><argument_list pos:start="369:46" pos:end="369:51">(<argument pos:start="369:47" pos:end="369:50"><expr pos:start="369:47" pos:end="369:50"><name pos:start="369:47" pos:end="369:50">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="371:25" pos:end="371:52"><expr pos:start="371:25" pos:end="371:51"><name pos:start="371:25" pos:end="371:26">p3</name> <operator pos:start="371:28" pos:end="371:28">=</operator> <call pos:start="371:30" pos:end="371:51"><name pos:start="371:30" pos:end="371:45">lock_user_string</name><argument_list pos:start="371:46" pos:end="371:51">(<argument pos:start="371:47" pos:end="371:50"><expr pos:start="371:47" pos:end="371:50"><name pos:start="371:47" pos:end="371:50">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="373:25" pos:end="373:99"><expr pos:start="373:25" pos:end="373:98"><name pos:start="373:25" pos:end="373:27">ret</name> <operator pos:start="373:29" pos:end="373:29">=</operator> <call pos:start="373:31" pos:end="373:98"><name pos:start="373:31" pos:end="373:39">get_errno</name><argument_list pos:start="373:40" pos:end="373:98">(<argument pos:start="373:41" pos:end="373:97"><expr pos:start="373:41" pos:end="373:97"><call pos:start="373:41" pos:end="373:97"><name pos:start="373:41" pos:end="373:45">mount</name><argument_list pos:start="373:46" pos:end="373:97">(<argument pos:start="373:47" pos:end="373:47"><expr pos:start="373:47" pos:end="373:47"><name pos:start="373:47" pos:end="373:47">p</name></expr></argument>, <argument pos:start="373:50" pos:end="373:51"><expr pos:start="373:50" pos:end="373:51"><name pos:start="373:50" pos:end="373:51">p2</name></expr></argument>, <argument pos:start="373:54" pos:end="373:55"><expr pos:start="373:54" pos:end="373:55"><name pos:start="373:54" pos:end="373:55">p3</name></expr></argument>, <argument pos:start="373:58" pos:end="373:76"><expr pos:start="373:58" pos:end="373:76"><operator pos:start="373:58" pos:end="373:58">(</operator><name pos:start="373:59" pos:end="373:66">unsigned</name> <name pos:start="373:68" pos:end="373:71">long</name><operator pos:start="373:72" pos:end="373:72">)</operator><name pos:start="373:73" pos:end="373:76">arg4</name></expr></argument>, <argument pos:start="373:79" pos:end="373:96"><expr pos:start="373:79" pos:end="373:96"><operator pos:start="373:79" pos:end="373:79">(</operator><specifier pos:start="373:80" pos:end="373:84">const</specifier> <name pos:start="373:86" pos:end="373:89">void</name> <operator pos:start="373:91" pos:end="373:91">*</operator><operator pos:start="373:92" pos:end="373:92">)</operator><name pos:start="373:93" pos:end="373:96">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="375:25" pos:end="375:48"><expr pos:start="375:25" pos:end="375:47"><call pos:start="375:25" pos:end="375:47"><name pos:start="375:25" pos:end="375:35">unlock_user</name><argument_list pos:start="375:36" pos:end="375:47">(<argument pos:start="375:37" pos:end="375:37"><expr pos:start="375:37" pos:end="375:37"><name pos:start="375:37" pos:end="375:37">p</name></expr></argument>, <argument pos:start="375:40" pos:end="375:43"><expr pos:start="375:40" pos:end="375:43"><name pos:start="375:40" pos:end="375:43">arg1</name></expr></argument>, <argument pos:start="375:46" pos:end="375:46"><expr pos:start="375:46" pos:end="375:46"><literal type="number" pos:start="375:46" pos:end="375:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="377:25" pos:end="377:49"><expr pos:start="377:25" pos:end="377:48"><call pos:start="377:25" pos:end="377:48"><name pos:start="377:25" pos:end="377:35">unlock_user</name><argument_list pos:start="377:36" pos:end="377:48">(<argument pos:start="377:37" pos:end="377:38"><expr pos:start="377:37" pos:end="377:38"><name pos:start="377:37" pos:end="377:38">p2</name></expr></argument>, <argument pos:start="377:41" pos:end="377:44"><expr pos:start="377:41" pos:end="377:44"><name pos:start="377:41" pos:end="377:44">arg2</name></expr></argument>, <argument pos:start="377:47" pos:end="377:47"><expr pos:start="377:47" pos:end="377:47"><literal type="number" pos:start="377:47" pos:end="377:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="379:25" pos:end="379:49"><expr pos:start="379:25" pos:end="379:48"><call pos:start="379:25" pos:end="379:48"><name pos:start="379:25" pos:end="379:35">unlock_user</name><argument_list pos:start="379:36" pos:end="379:48">(<argument pos:start="379:37" pos:end="379:38"><expr pos:start="379:37" pos:end="379:38"><name pos:start="379:37" pos:end="379:38">p3</name></expr></argument>, <argument pos:start="379:41" pos:end="379:44"><expr pos:start="379:41" pos:end="379:44"><name pos:start="379:41" pos:end="379:44">arg3</name></expr></argument>, <argument pos:start="379:47" pos:end="379:47"><expr pos:start="379:47" pos:end="379:47"><literal type="number" pos:start="379:47" pos:end="379:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="381:25" pos:end="381:30">break;</break>

		</block_content>}</block>

<cpp:ifdef pos:start="385:1" pos:end="385:23">#<cpp:directive pos:start="385:2" pos:end="385:6">ifdef</cpp:directive> <name pos:start="385:8" pos:end="385:23">TARGET_NR_umount</name></cpp:ifdef>

    <case pos:start="387:5" pos:end="387:26">case <expr pos:start="387:10" pos:end="387:25"><name pos:start="387:10" pos:end="387:25">TARGET_NR_umount</name></expr>:</case>

        <expr_stmt pos:start="389:9" pos:end="389:35"><expr pos:start="389:9" pos:end="389:34"><name pos:start="389:9" pos:end="389:9">p</name> <operator pos:start="389:11" pos:end="389:11">=</operator> <call pos:start="389:13" pos:end="389:34"><name pos:start="389:13" pos:end="389:28">lock_user_string</name><argument_list pos:start="389:29" pos:end="389:34">(<argument pos:start="389:30" pos:end="389:33"><expr pos:start="389:30" pos:end="389:33"><name pos:start="389:30" pos:end="389:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="391:9" pos:end="391:35"><expr pos:start="391:9" pos:end="391:34"><name pos:start="391:9" pos:end="391:11">ret</name> <operator pos:start="391:13" pos:end="391:13">=</operator> <call pos:start="391:15" pos:end="391:34"><name pos:start="391:15" pos:end="391:23">get_errno</name><argument_list pos:start="391:24" pos:end="391:34">(<argument pos:start="391:25" pos:end="391:33"><expr pos:start="391:25" pos:end="391:33"><call pos:start="391:25" pos:end="391:33"><name pos:start="391:25" pos:end="391:30">umount</name><argument_list pos:start="391:31" pos:end="391:33">(<argument pos:start="391:32" pos:end="391:32"><expr pos:start="391:32" pos:end="391:32"><name pos:start="391:32" pos:end="391:32">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="393:9" pos:end="393:32"><expr pos:start="393:9" pos:end="393:31"><call pos:start="393:9" pos:end="393:31"><name pos:start="393:9" pos:end="393:19">unlock_user</name><argument_list pos:start="393:20" pos:end="393:31">(<argument pos:start="393:21" pos:end="393:21"><expr pos:start="393:21" pos:end="393:21"><name pos:start="393:21" pos:end="393:21">p</name></expr></argument>, <argument pos:start="393:24" pos:end="393:27"><expr pos:start="393:24" pos:end="393:27"><name pos:start="393:24" pos:end="393:27">arg1</name></expr></argument>, <argument pos:start="393:30" pos:end="393:30"><expr pos:start="393:30" pos:end="393:30"><literal type="number" pos:start="393:30" pos:end="393:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="395:9" pos:end="400:0">break;</break>

<cpp:endif pos:start="397:1" pos:end="397:6">#<cpp:directive pos:start="397:2" pos:end="397:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="399:1" pos:end="399:22">#<cpp:directive pos:start="399:2" pos:end="399:6">ifdef</cpp:directive> <name pos:start="399:8" pos:end="399:22">TARGET_NR_stime</name></cpp:ifdef> <comment type="block" pos:start="399:24" pos:end="399:41">/* not on alpha */</comment>

    <case pos:start="401:5" pos:end="401:25">case <expr pos:start="401:10" pos:end="401:24"><name pos:start="401:10" pos:end="401:24">TARGET_NR_stime</name></expr>:</case>

        <block pos:start="403:9" pos:end="411:9">{<block_content pos:start="405:13" pos:end="409:47">

            <decl_stmt pos:start="405:13" pos:end="405:29"><decl pos:start="405:13" pos:end="405:28"><type pos:start="405:13" pos:end="405:18"><name pos:start="405:13" pos:end="405:18">time_t</name></type> <name pos:start="405:20" pos:end="405:28">host_time</name></decl>;</decl_stmt>

            <expr_stmt pos:start="407:13" pos:end="407:36"><expr pos:start="407:13" pos:end="407:35"><name pos:start="407:13" pos:end="407:21">host_time</name> <operator pos:start="407:23" pos:end="407:23">=</operator> <call pos:start="407:25" pos:end="407:35"><name pos:start="407:25" pos:end="407:29">tgetl</name><argument_list pos:start="407:30" pos:end="407:35">(<argument pos:start="407:31" pos:end="407:34"><expr pos:start="407:31" pos:end="407:34"><name pos:start="407:31" pos:end="407:34">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="409:13" pos:end="409:47"><expr pos:start="409:13" pos:end="409:46"><name pos:start="409:13" pos:end="409:15">ret</name> <operator pos:start="409:17" pos:end="409:17">=</operator> <call pos:start="409:19" pos:end="409:46"><name pos:start="409:19" pos:end="409:27">get_errno</name><argument_list pos:start="409:28" pos:end="409:46">(<argument pos:start="409:29" pos:end="409:45"><expr pos:start="409:29" pos:end="409:45"><call pos:start="409:29" pos:end="409:45"><name pos:start="409:29" pos:end="409:33">stime</name><argument_list pos:start="409:34" pos:end="409:45">(<argument pos:start="409:35" pos:end="409:44"><expr pos:start="409:35" pos:end="409:44"><operator pos:start="409:35" pos:end="409:35">&amp;</operator><name pos:start="409:36" pos:end="409:44">host_time</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="413:9" pos:end="416:0">break;</break>

<cpp:endif pos:start="415:1" pos:end="415:6">#<cpp:directive pos:start="415:2" pos:end="415:6">endif</cpp:directive></cpp:endif>

    <case pos:start="417:5" pos:end="417:26">case <expr pos:start="417:10" pos:end="417:25"><name pos:start="417:10" pos:end="417:25">TARGET_NR_ptrace</name></expr>:</case>

        <goto pos:start="419:9" pos:end="422:0">goto <name pos:start="419:14" pos:end="419:26">unimplemented</name>;</goto>

<cpp:ifdef pos:start="421:1" pos:end="421:22">#<cpp:directive pos:start="421:2" pos:end="421:6">ifdef</cpp:directive> <name pos:start="421:8" pos:end="421:22">TARGET_NR_alarm</name></cpp:ifdef> <comment type="block" pos:start="421:24" pos:end="421:41">/* not on alpha */</comment>

    <case pos:start="423:5" pos:end="423:25">case <expr pos:start="423:10" pos:end="423:24"><name pos:start="423:10" pos:end="423:24">TARGET_NR_alarm</name></expr>:</case>

        <expr_stmt pos:start="425:9" pos:end="425:26"><expr pos:start="425:9" pos:end="425:25"><name pos:start="425:9" pos:end="425:11">ret</name> <operator pos:start="425:13" pos:end="425:13">=</operator> <call pos:start="425:15" pos:end="425:25"><name pos:start="425:15" pos:end="425:19">alarm</name><argument_list pos:start="425:20" pos:end="425:25">(<argument pos:start="425:21" pos:end="425:24"><expr pos:start="425:21" pos:end="425:24"><name pos:start="425:21" pos:end="425:24">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="427:9" pos:end="432:0">break;</break>

<cpp:endif pos:start="429:1" pos:end="429:6">#<cpp:directive pos:start="429:2" pos:end="429:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="431:1" pos:end="431:25">#<cpp:directive pos:start="431:2" pos:end="431:6">ifdef</cpp:directive> <name pos:start="431:8" pos:end="431:25">TARGET_NR_oldfstat</name></cpp:ifdef>

    <case pos:start="433:5" pos:end="433:28">case <expr pos:start="433:10" pos:end="433:27"><name pos:start="433:10" pos:end="433:27">TARGET_NR_oldfstat</name></expr>:</case>

        <goto pos:start="435:9" pos:end="440:0">goto <name pos:start="435:14" pos:end="435:26">unimplemented</name>;</goto>

<cpp:endif pos:start="437:1" pos:end="437:6">#<cpp:directive pos:start="437:2" pos:end="437:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="439:1" pos:end="439:22">#<cpp:directive pos:start="439:2" pos:end="439:6">ifdef</cpp:directive> <name pos:start="439:8" pos:end="439:22">TARGET_NR_pause</name></cpp:ifdef> <comment type="block" pos:start="439:24" pos:end="439:41">/* not on alpha */</comment>

    <case pos:start="441:5" pos:end="441:25">case <expr pos:start="441:10" pos:end="441:24"><name pos:start="441:10" pos:end="441:24">TARGET_NR_pause</name></expr>:</case>

        <expr_stmt pos:start="443:9" pos:end="443:33"><expr pos:start="443:9" pos:end="443:32"><name pos:start="443:9" pos:end="443:11">ret</name> <operator pos:start="443:13" pos:end="443:13">=</operator> <call pos:start="443:15" pos:end="443:32"><name pos:start="443:15" pos:end="443:23">get_errno</name><argument_list pos:start="443:24" pos:end="443:32">(<argument pos:start="443:25" pos:end="443:31"><expr pos:start="443:25" pos:end="443:31"><call pos:start="443:25" pos:end="443:31"><name pos:start="443:25" pos:end="443:29">pause</name><argument_list pos:start="443:30" pos:end="443:31">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="445:9" pos:end="450:0">break;</break>

<cpp:endif pos:start="447:1" pos:end="447:6">#<cpp:directive pos:start="447:2" pos:end="447:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="449:1" pos:end="449:22">#<cpp:directive pos:start="449:2" pos:end="449:6">ifdef</cpp:directive> <name pos:start="449:8" pos:end="449:22">TARGET_NR_utime</name></cpp:ifdef>

    <case pos:start="451:5" pos:end="451:25">case <expr pos:start="451:10" pos:end="451:24"><name pos:start="451:10" pos:end="451:24">TARGET_NR_utime</name></expr>:</case>

        <block pos:start="453:9" pos:end="483:9">{<block_content pos:start="455:13" pos:end="481:36">

            <decl_stmt pos:start="455:13" pos:end="455:44"><decl pos:start="455:13" pos:end="455:31"><type pos:start="455:13" pos:end="455:26"><name pos:start="455:13" pos:end="455:26"><name pos:start="455:13" pos:end="455:18">struct</name> <name pos:start="455:20" pos:end="455:26">utimbuf</name></name></type> <name pos:start="455:28" pos:end="455:31">tbuf</name></decl>, <decl pos:start="455:34" pos:end="455:43"><type ref="prev" pos:start="455:13" pos:end="455:26"><modifier pos:start="455:34" pos:end="455:34">*</modifier></type><name pos:start="455:35" pos:end="455:43">host_tbuf</name></decl>;</decl_stmt>

            <decl_stmt pos:start="457:13" pos:end="457:47"><decl pos:start="457:13" pos:end="457:46"><type pos:start="457:13" pos:end="457:35"><name pos:start="457:13" pos:end="457:33"><name pos:start="457:13" pos:end="457:18">struct</name> <name pos:start="457:20" pos:end="457:33">target_utimbuf</name></name> <modifier pos:start="457:35" pos:end="457:35">*</modifier></type><name pos:start="457:36" pos:end="457:46">target_tbuf</name></decl>;</decl_stmt>

            <if_stmt pos:start="459:13" pos:end="475:13"><if pos:start="459:13" pos:end="471:13">if <condition pos:start="459:16" pos:end="459:21">(<expr pos:start="459:17" pos:end="459:20"><name pos:start="459:17" pos:end="459:20">arg2</name></expr>)</condition> <block pos:start="459:23" pos:end="471:13">{<block_content pos:start="461:17" pos:end="469:34">

                <expr_stmt pos:start="461:17" pos:end="461:55"><expr pos:start="461:17" pos:end="461:54"><call pos:start="461:17" pos:end="461:54"><name pos:start="461:17" pos:end="461:32">lock_user_struct</name><argument_list pos:start="461:33" pos:end="461:54">(<argument pos:start="461:34" pos:end="461:44"><expr pos:start="461:34" pos:end="461:44"><name pos:start="461:34" pos:end="461:44">target_tbuf</name></expr></argument>, <argument pos:start="461:47" pos:end="461:50"><expr pos:start="461:47" pos:end="461:50"><name pos:start="461:47" pos:end="461:50">arg2</name></expr></argument>, <argument pos:start="461:53" pos:end="461:53"><expr pos:start="461:53" pos:end="461:53"><literal type="number" pos:start="461:53" pos:end="461:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="463:17" pos:end="463:58"><expr pos:start="463:17" pos:end="463:57"><name pos:start="463:17" pos:end="463:27"><name pos:start="463:17" pos:end="463:20">tbuf</name><operator pos:start="463:21" pos:end="463:21">.</operator><name pos:start="463:22" pos:end="463:27">actime</name></name> <operator pos:start="463:29" pos:end="463:29">=</operator> <call pos:start="463:31" pos:end="463:57"><name pos:start="463:31" pos:end="463:36">tswapl</name><argument_list pos:start="463:37" pos:end="463:57">(<argument pos:start="463:38" pos:end="463:56"><expr pos:start="463:38" pos:end="463:56"><name pos:start="463:38" pos:end="463:56"><name pos:start="463:38" pos:end="463:48">target_tbuf</name><operator pos:start="463:49" pos:end="463:50">-&gt;</operator><name pos:start="463:51" pos:end="463:56">actime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="465:17" pos:end="465:60"><expr pos:start="465:17" pos:end="465:59"><name pos:start="465:17" pos:end="465:28"><name pos:start="465:17" pos:end="465:20">tbuf</name><operator pos:start="465:21" pos:end="465:21">.</operator><name pos:start="465:22" pos:end="465:28">modtime</name></name> <operator pos:start="465:30" pos:end="465:30">=</operator> <call pos:start="465:32" pos:end="465:59"><name pos:start="465:32" pos:end="465:37">tswapl</name><argument_list pos:start="465:38" pos:end="465:59">(<argument pos:start="465:39" pos:end="465:58"><expr pos:start="465:39" pos:end="465:58"><name pos:start="465:39" pos:end="465:58"><name pos:start="465:39" pos:end="465:49">target_tbuf</name><operator pos:start="465:50" pos:end="465:51">-&gt;</operator><name pos:start="465:52" pos:end="465:58">modtime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="467:17" pos:end="467:57"><expr pos:start="467:17" pos:end="467:56"><call pos:start="467:17" pos:end="467:56"><name pos:start="467:17" pos:end="467:34">unlock_user_struct</name><argument_list pos:start="467:35" pos:end="467:56">(<argument pos:start="467:36" pos:end="467:46"><expr pos:start="467:36" pos:end="467:46"><name pos:start="467:36" pos:end="467:46">target_tbuf</name></expr></argument>, <argument pos:start="467:49" pos:end="467:52"><expr pos:start="467:49" pos:end="467:52"><name pos:start="467:49" pos:end="467:52">arg2</name></expr></argument>, <argument pos:start="467:55" pos:end="467:55"><expr pos:start="467:55" pos:end="467:55"><literal type="number" pos:start="467:55" pos:end="467:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="469:17" pos:end="469:34"><expr pos:start="469:17" pos:end="469:33"><name pos:start="469:17" pos:end="469:25">host_tbuf</name> <operator pos:start="469:27" pos:end="469:27">=</operator> <operator pos:start="469:29" pos:end="469:29">&amp;</operator><name pos:start="469:30" pos:end="469:33">tbuf</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="471:15" pos:end="475:13">else <block pos:start="471:20" pos:end="475:13">{<block_content pos:start="473:17" pos:end="473:33">

                <expr_stmt pos:start="473:17" pos:end="473:33"><expr pos:start="473:17" pos:end="473:32"><name pos:start="473:17" pos:end="473:25">host_tbuf</name> <operator pos:start="473:27" pos:end="473:27">=</operator> <name pos:start="473:29" pos:end="473:32">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="477:13" pos:end="477:39"><expr pos:start="477:13" pos:end="477:38"><name pos:start="477:13" pos:end="477:13">p</name> <operator pos:start="477:15" pos:end="477:15">=</operator> <call pos:start="477:17" pos:end="477:38"><name pos:start="477:17" pos:end="477:32">lock_user_string</name><argument_list pos:start="477:33" pos:end="477:38">(<argument pos:start="477:34" pos:end="477:37"><expr pos:start="477:34" pos:end="477:37"><name pos:start="477:34" pos:end="477:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="479:13" pos:end="479:49"><expr pos:start="479:13" pos:end="479:48"><name pos:start="479:13" pos:end="479:15">ret</name> <operator pos:start="479:17" pos:end="479:17">=</operator> <call pos:start="479:19" pos:end="479:48"><name pos:start="479:19" pos:end="479:27">get_errno</name><argument_list pos:start="479:28" pos:end="479:48">(<argument pos:start="479:29" pos:end="479:47"><expr pos:start="479:29" pos:end="479:47"><call pos:start="479:29" pos:end="479:47"><name pos:start="479:29" pos:end="479:33">utime</name><argument_list pos:start="479:34" pos:end="479:47">(<argument pos:start="479:35" pos:end="479:35"><expr pos:start="479:35" pos:end="479:35"><name pos:start="479:35" pos:end="479:35">p</name></expr></argument>, <argument pos:start="479:38" pos:end="479:46"><expr pos:start="479:38" pos:end="479:46"><name pos:start="479:38" pos:end="479:46">host_tbuf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="481:13" pos:end="481:36"><expr pos:start="481:13" pos:end="481:35"><call pos:start="481:13" pos:end="481:35"><name pos:start="481:13" pos:end="481:23">unlock_user</name><argument_list pos:start="481:24" pos:end="481:35">(<argument pos:start="481:25" pos:end="481:25"><expr pos:start="481:25" pos:end="481:25"><name pos:start="481:25" pos:end="481:25">p</name></expr></argument>, <argument pos:start="481:28" pos:end="481:31"><expr pos:start="481:28" pos:end="481:31"><name pos:start="481:28" pos:end="481:31">arg1</name></expr></argument>, <argument pos:start="481:34" pos:end="481:34"><expr pos:start="481:34" pos:end="481:34"><literal type="number" pos:start="481:34" pos:end="481:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="485:9" pos:end="488:0">break;</break>

<cpp:endif pos:start="487:1" pos:end="487:6">#<cpp:directive pos:start="487:2" pos:end="487:6">endif</cpp:directive></cpp:endif>

    <case pos:start="489:5" pos:end="489:26">case <expr pos:start="489:10" pos:end="489:25"><name pos:start="489:10" pos:end="489:25">TARGET_NR_utimes</name></expr>:</case>

        <block pos:start="491:9" pos:end="517:9">{<block_content pos:start="493:13" pos:end="515:36">

            <decl_stmt pos:start="493:13" pos:end="493:39"><decl pos:start="493:13" pos:end="493:31"><type pos:start="493:13" pos:end="493:28"><name pos:start="493:13" pos:end="493:26"><name pos:start="493:13" pos:end="493:18">struct</name> <name pos:start="493:20" pos:end="493:26">timeval</name></name> <modifier pos:start="493:28" pos:end="493:28">*</modifier></type><name pos:start="493:29" pos:end="493:31">tvp</name></decl>, <decl pos:start="493:34" pos:end="493:38"><type ref="prev" pos:start="493:13" pos:end="493:28"/><name pos:start="493:34" pos:end="493:38"><name pos:start="493:34" pos:end="493:35">tv</name><index pos:start="493:36" pos:end="493:38">[<expr pos:start="493:37" pos:end="493:37"><literal type="number" pos:start="493:37" pos:end="493:37">2</literal></expr>]</index></name></decl>;</decl_stmt>

            <if_stmt pos:start="495:13" pos:end="509:13"><if pos:start="495:13" pos:end="505:13">if <condition pos:start="495:16" pos:end="495:21">(<expr pos:start="495:17" pos:end="495:20"><name pos:start="495:17" pos:end="495:20">arg2</name></expr>)</condition> <block pos:start="495:23" pos:end="505:13">{<block_content pos:start="497:17" pos:end="503:25">

                <expr_stmt pos:start="497:17" pos:end="497:53"><expr pos:start="497:17" pos:end="497:52"><call pos:start="497:17" pos:end="497:52"><name pos:start="497:17" pos:end="497:38">target_to_host_timeval</name><argument_list pos:start="497:39" pos:end="497:52">(<argument pos:start="497:40" pos:end="497:45"><expr pos:start="497:40" pos:end="497:45"><operator pos:start="497:40" pos:end="497:40">&amp;</operator><name pos:start="497:41" pos:end="497:45"><name pos:start="497:41" pos:end="497:42">tv</name><index pos:start="497:43" pos:end="497:45">[<expr pos:start="497:44" pos:end="497:44"><literal type="number" pos:start="497:44" pos:end="497:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="497:48" pos:end="497:51"><expr pos:start="497:48" pos:end="497:51"><name pos:start="497:48" pos:end="497:51">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="499:17" pos:end="501:59"><expr pos:start="499:17" pos:end="501:58"><call pos:start="499:17" pos:end="501:58"><name pos:start="499:17" pos:end="499:38">target_to_host_timeval</name><argument_list pos:start="499:39" pos:end="501:58">(<argument pos:start="499:40" pos:end="499:45"><expr pos:start="499:40" pos:end="499:45"><operator pos:start="499:40" pos:end="499:40">&amp;</operator><name pos:start="499:41" pos:end="499:45"><name pos:start="499:41" pos:end="499:42">tv</name><index pos:start="499:43" pos:end="499:45">[<expr pos:start="499:44" pos:end="499:44"><literal type="number" pos:start="499:44" pos:end="499:44">1</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="501:21" pos:end="501:57"><expr pos:start="501:21" pos:end="501:57"><name pos:start="501:21" pos:end="501:24">arg2</name> <operator pos:start="501:26" pos:end="501:26">+</operator> <sizeof pos:start="501:28" pos:end="501:57">sizeof <argument_list pos:start="501:35" pos:end="501:57">(<argument pos:start="501:36" pos:end="501:56"><expr pos:start="501:36" pos:end="501:56">struct <name pos:start="501:43" pos:end="501:56">target_timeval</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="503:17" pos:end="503:25"><expr pos:start="503:17" pos:end="503:24"><name pos:start="503:17" pos:end="503:19">tvp</name> <operator pos:start="503:21" pos:end="503:21">=</operator> <name pos:start="503:23" pos:end="503:24">tv</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="505:15" pos:end="509:13">else <block pos:start="505:20" pos:end="509:13">{<block_content pos:start="507:17" pos:end="507:27">

                <expr_stmt pos:start="507:17" pos:end="507:27"><expr pos:start="507:17" pos:end="507:26"><name pos:start="507:17" pos:end="507:19">tvp</name> <operator pos:start="507:21" pos:end="507:21">=</operator> <name pos:start="507:23" pos:end="507:26">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="511:13" pos:end="511:39"><expr pos:start="511:13" pos:end="511:38"><name pos:start="511:13" pos:end="511:13">p</name> <operator pos:start="511:15" pos:end="511:15">=</operator> <call pos:start="511:17" pos:end="511:38"><name pos:start="511:17" pos:end="511:32">lock_user_string</name><argument_list pos:start="511:33" pos:end="511:38">(<argument pos:start="511:34" pos:end="511:37"><expr pos:start="511:34" pos:end="511:37"><name pos:start="511:34" pos:end="511:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="513:13" pos:end="513:44"><expr pos:start="513:13" pos:end="513:43"><name pos:start="513:13" pos:end="513:15">ret</name> <operator pos:start="513:17" pos:end="513:17">=</operator> <call pos:start="513:19" pos:end="513:43"><name pos:start="513:19" pos:end="513:27">get_errno</name><argument_list pos:start="513:28" pos:end="513:43">(<argument pos:start="513:29" pos:end="513:42"><expr pos:start="513:29" pos:end="513:42"><call pos:start="513:29" pos:end="513:42"><name pos:start="513:29" pos:end="513:34">utimes</name><argument_list pos:start="513:35" pos:end="513:42">(<argument pos:start="513:36" pos:end="513:36"><expr pos:start="513:36" pos:end="513:36"><name pos:start="513:36" pos:end="513:36">p</name></expr></argument>, <argument pos:start="513:39" pos:end="513:41"><expr pos:start="513:39" pos:end="513:41"><name pos:start="513:39" pos:end="513:41">tvp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="515:13" pos:end="515:36"><expr pos:start="515:13" pos:end="515:35"><call pos:start="515:13" pos:end="515:35"><name pos:start="515:13" pos:end="515:23">unlock_user</name><argument_list pos:start="515:24" pos:end="515:35">(<argument pos:start="515:25" pos:end="515:25"><expr pos:start="515:25" pos:end="515:25"><name pos:start="515:25" pos:end="515:25">p</name></expr></argument>, <argument pos:start="515:28" pos:end="515:31"><expr pos:start="515:28" pos:end="515:31"><name pos:start="515:28" pos:end="515:31">arg1</name></expr></argument>, <argument pos:start="515:34" pos:end="515:34"><expr pos:start="515:34" pos:end="515:34"><literal type="number" pos:start="515:34" pos:end="515:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="519:9" pos:end="522:0">break;</break>

<cpp:ifdef pos:start="521:1" pos:end="521:21">#<cpp:directive pos:start="521:2" pos:end="521:6">ifdef</cpp:directive> <name pos:start="521:8" pos:end="521:21">TARGET_NR_stty</name></cpp:ifdef>

    <case pos:start="523:5" pos:end="523:24">case <expr pos:start="523:10" pos:end="523:23"><name pos:start="523:10" pos:end="523:23">TARGET_NR_stty</name></expr>:</case>

        <goto pos:start="525:9" pos:end="530:0">goto <name pos:start="525:14" pos:end="525:26">unimplemented</name>;</goto>

<cpp:endif pos:start="527:1" pos:end="527:6">#<cpp:directive pos:start="527:2" pos:end="527:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="529:1" pos:end="529:21">#<cpp:directive pos:start="529:2" pos:end="529:6">ifdef</cpp:directive> <name pos:start="529:8" pos:end="529:21">TARGET_NR_gtty</name></cpp:ifdef>

    <case pos:start="531:5" pos:end="531:24">case <expr pos:start="531:10" pos:end="531:23"><name pos:start="531:10" pos:end="531:23">TARGET_NR_gtty</name></expr>:</case>

        <goto pos:start="533:9" pos:end="536:0">goto <name pos:start="533:14" pos:end="533:26">unimplemented</name>;</goto>

<cpp:endif pos:start="535:1" pos:end="535:6">#<cpp:directive pos:start="535:2" pos:end="535:6">endif</cpp:directive></cpp:endif>

    <case pos:start="537:5" pos:end="537:26">case <expr pos:start="537:10" pos:end="537:25"><name pos:start="537:10" pos:end="537:25">TARGET_NR_access</name></expr>:</case>

        <expr_stmt pos:start="539:9" pos:end="539:35"><expr pos:start="539:9" pos:end="539:34"><name pos:start="539:9" pos:end="539:9">p</name> <operator pos:start="539:11" pos:end="539:11">=</operator> <call pos:start="539:13" pos:end="539:34"><name pos:start="539:13" pos:end="539:28">lock_user_string</name><argument_list pos:start="539:29" pos:end="539:34">(<argument pos:start="539:30" pos:end="539:33"><expr pos:start="539:30" pos:end="539:33"><name pos:start="539:30" pos:end="539:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="541:9" pos:end="541:41"><expr pos:start="541:9" pos:end="541:40"><name pos:start="541:9" pos:end="541:11">ret</name> <operator pos:start="541:13" pos:end="541:13">=</operator> <call pos:start="541:15" pos:end="541:40"><name pos:start="541:15" pos:end="541:23">get_errno</name><argument_list pos:start="541:24" pos:end="541:40">(<argument pos:start="541:25" pos:end="541:39"><expr pos:start="541:25" pos:end="541:39"><call pos:start="541:25" pos:end="541:39"><name pos:start="541:25" pos:end="541:30">access</name><argument_list pos:start="541:31" pos:end="541:39">(<argument pos:start="541:32" pos:end="541:32"><expr pos:start="541:32" pos:end="541:32"><name pos:start="541:32" pos:end="541:32">p</name></expr></argument>, <argument pos:start="541:35" pos:end="541:38"><expr pos:start="541:35" pos:end="541:38"><name pos:start="541:35" pos:end="541:38">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="543:9" pos:end="543:32"><expr pos:start="543:9" pos:end="543:31"><call pos:start="543:9" pos:end="543:31"><name pos:start="543:9" pos:end="543:19">unlock_user</name><argument_list pos:start="543:20" pos:end="543:31">(<argument pos:start="543:21" pos:end="543:21"><expr pos:start="543:21" pos:end="543:21"><name pos:start="543:21" pos:end="543:21">p</name></expr></argument>, <argument pos:start="543:24" pos:end="543:27"><expr pos:start="543:24" pos:end="543:27"><name pos:start="543:24" pos:end="543:27">arg1</name></expr></argument>, <argument pos:start="543:30" pos:end="543:30"><expr pos:start="543:30" pos:end="543:30"><literal type="number" pos:start="543:30" pos:end="543:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="545:9" pos:end="548:0">break;</break>

<cpp:ifdef pos:start="547:1" pos:end="547:21">#<cpp:directive pos:start="547:2" pos:end="547:6">ifdef</cpp:directive> <name pos:start="547:8" pos:end="547:21">TARGET_NR_nice</name></cpp:ifdef> <comment type="block" pos:start="547:23" pos:end="547:40">/* not on alpha */</comment>

    <case pos:start="549:5" pos:end="549:24">case <expr pos:start="549:10" pos:end="549:23"><name pos:start="549:10" pos:end="549:23">TARGET_NR_nice</name></expr>:</case>

        <expr_stmt pos:start="551:9" pos:end="551:36"><expr pos:start="551:9" pos:end="551:35"><name pos:start="551:9" pos:end="551:11">ret</name> <operator pos:start="551:13" pos:end="551:13">=</operator> <call pos:start="551:15" pos:end="551:35"><name pos:start="551:15" pos:end="551:23">get_errno</name><argument_list pos:start="551:24" pos:end="551:35">(<argument pos:start="551:25" pos:end="551:34"><expr pos:start="551:25" pos:end="551:34"><call pos:start="551:25" pos:end="551:34"><name pos:start="551:25" pos:end="551:28">nice</name><argument_list pos:start="551:29" pos:end="551:34">(<argument pos:start="551:30" pos:end="551:33"><expr pos:start="551:30" pos:end="551:33"><name pos:start="551:30" pos:end="551:33">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="553:9" pos:end="558:0">break;</break>

<cpp:endif pos:start="555:1" pos:end="555:6">#<cpp:directive pos:start="555:2" pos:end="555:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="557:1" pos:end="557:22">#<cpp:directive pos:start="557:2" pos:end="557:6">ifdef</cpp:directive> <name pos:start="557:8" pos:end="557:22">TARGET_NR_ftime</name></cpp:ifdef>

    <case pos:start="559:5" pos:end="559:25">case <expr pos:start="559:10" pos:end="559:24"><name pos:start="559:10" pos:end="559:24">TARGET_NR_ftime</name></expr>:</case>

        <goto pos:start="561:9" pos:end="564:0">goto <name pos:start="561:14" pos:end="561:26">unimplemented</name>;</goto>

<cpp:endif pos:start="563:1" pos:end="563:6">#<cpp:directive pos:start="563:2" pos:end="563:6">endif</cpp:directive></cpp:endif>

    <case pos:start="565:5" pos:end="565:24">case <expr pos:start="565:10" pos:end="565:23"><name pos:start="565:10" pos:end="565:23">TARGET_NR_sync</name></expr>:</case>

        <expr_stmt pos:start="567:9" pos:end="567:15"><expr pos:start="567:9" pos:end="567:14"><call pos:start="567:9" pos:end="567:14"><name pos:start="567:9" pos:end="567:12">sync</name><argument_list pos:start="567:13" pos:end="567:14">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="569:9" pos:end="569:16"><expr pos:start="569:9" pos:end="569:15"><name pos:start="569:9" pos:end="569:11">ret</name> <operator pos:start="569:13" pos:end="569:13">=</operator> <literal type="number" pos:start="569:15" pos:end="569:15">0</literal></expr>;</expr_stmt>

        <break pos:start="571:9" pos:end="571:14">break;</break>

    <case pos:start="573:5" pos:end="573:24">case <expr pos:start="573:10" pos:end="573:23"><name pos:start="573:10" pos:end="573:23">TARGET_NR_kill</name></expr>:</case>

        <expr_stmt pos:start="575:9" pos:end="575:42"><expr pos:start="575:9" pos:end="575:41"><name pos:start="575:9" pos:end="575:11">ret</name> <operator pos:start="575:13" pos:end="575:13">=</operator> <call pos:start="575:15" pos:end="575:41"><name pos:start="575:15" pos:end="575:23">get_errno</name><argument_list pos:start="575:24" pos:end="575:41">(<argument pos:start="575:25" pos:end="575:40"><expr pos:start="575:25" pos:end="575:40"><call pos:start="575:25" pos:end="575:40"><name pos:start="575:25" pos:end="575:28">kill</name><argument_list pos:start="575:29" pos:end="575:40">(<argument pos:start="575:30" pos:end="575:33"><expr pos:start="575:30" pos:end="575:33"><name pos:start="575:30" pos:end="575:33">arg1</name></expr></argument>, <argument pos:start="575:36" pos:end="575:39"><expr pos:start="575:36" pos:end="575:39"><name pos:start="575:36" pos:end="575:39">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="577:9" pos:end="577:14">break;</break>

    <case pos:start="579:5" pos:end="579:26">case <expr pos:start="579:10" pos:end="579:25"><name pos:start="579:10" pos:end="579:25">TARGET_NR_rename</name></expr>:</case>

        <block pos:start="581:9" pos:end="595:9">{<block_content pos:start="583:13" pos:end="593:36">

            <decl_stmt pos:start="583:13" pos:end="583:21"><decl pos:start="583:13" pos:end="583:20"><type pos:start="583:13" pos:end="583:18"><name pos:start="583:13" pos:end="583:16">void</name> <modifier pos:start="583:18" pos:end="583:18">*</modifier></type><name pos:start="583:19" pos:end="583:20">p2</name></decl>;</decl_stmt>

            <expr_stmt pos:start="585:13" pos:end="585:39"><expr pos:start="585:13" pos:end="585:38"><name pos:start="585:13" pos:end="585:13">p</name> <operator pos:start="585:15" pos:end="585:15">=</operator> <call pos:start="585:17" pos:end="585:38"><name pos:start="585:17" pos:end="585:32">lock_user_string</name><argument_list pos:start="585:33" pos:end="585:38">(<argument pos:start="585:34" pos:end="585:37"><expr pos:start="585:34" pos:end="585:37"><name pos:start="585:34" pos:end="585:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="587:13" pos:end="587:40"><expr pos:start="587:13" pos:end="587:39"><name pos:start="587:13" pos:end="587:14">p2</name> <operator pos:start="587:16" pos:end="587:16">=</operator> <call pos:start="587:18" pos:end="587:39"><name pos:start="587:18" pos:end="587:33">lock_user_string</name><argument_list pos:start="587:34" pos:end="587:39">(<argument pos:start="587:35" pos:end="587:38"><expr pos:start="587:35" pos:end="587:38"><name pos:start="587:35" pos:end="587:38">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="589:13" pos:end="589:43"><expr pos:start="589:13" pos:end="589:42"><name pos:start="589:13" pos:end="589:15">ret</name> <operator pos:start="589:17" pos:end="589:17">=</operator> <call pos:start="589:19" pos:end="589:42"><name pos:start="589:19" pos:end="589:27">get_errno</name><argument_list pos:start="589:28" pos:end="589:42">(<argument pos:start="589:29" pos:end="589:41"><expr pos:start="589:29" pos:end="589:41"><call pos:start="589:29" pos:end="589:41"><name pos:start="589:29" pos:end="589:34">rename</name><argument_list pos:start="589:35" pos:end="589:41">(<argument pos:start="589:36" pos:end="589:36"><expr pos:start="589:36" pos:end="589:36"><name pos:start="589:36" pos:end="589:36">p</name></expr></argument>, <argument pos:start="589:39" pos:end="589:40"><expr pos:start="589:39" pos:end="589:40"><name pos:start="589:39" pos:end="589:40">p2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="591:13" pos:end="591:37"><expr pos:start="591:13" pos:end="591:36"><call pos:start="591:13" pos:end="591:36"><name pos:start="591:13" pos:end="591:23">unlock_user</name><argument_list pos:start="591:24" pos:end="591:36">(<argument pos:start="591:25" pos:end="591:26"><expr pos:start="591:25" pos:end="591:26"><name pos:start="591:25" pos:end="591:26">p2</name></expr></argument>, <argument pos:start="591:29" pos:end="591:32"><expr pos:start="591:29" pos:end="591:32"><name pos:start="591:29" pos:end="591:32">arg2</name></expr></argument>, <argument pos:start="591:35" pos:end="591:35"><expr pos:start="591:35" pos:end="591:35"><literal type="number" pos:start="591:35" pos:end="591:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="593:13" pos:end="593:36"><expr pos:start="593:13" pos:end="593:35"><call pos:start="593:13" pos:end="593:35"><name pos:start="593:13" pos:end="593:23">unlock_user</name><argument_list pos:start="593:24" pos:end="593:35">(<argument pos:start="593:25" pos:end="593:25"><expr pos:start="593:25" pos:end="593:25"><name pos:start="593:25" pos:end="593:25">p</name></expr></argument>, <argument pos:start="593:28" pos:end="593:31"><expr pos:start="593:28" pos:end="593:31"><name pos:start="593:28" pos:end="593:31">arg1</name></expr></argument>, <argument pos:start="593:34" pos:end="593:34"><expr pos:start="593:34" pos:end="593:34"><literal type="number" pos:start="593:34" pos:end="593:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="597:9" pos:end="597:14">break;</break>

    <case pos:start="599:5" pos:end="599:25">case <expr pos:start="599:10" pos:end="599:24"><name pos:start="599:10" pos:end="599:24">TARGET_NR_mkdir</name></expr>:</case>

        <expr_stmt pos:start="601:9" pos:end="601:35"><expr pos:start="601:9" pos:end="601:34"><name pos:start="601:9" pos:end="601:9">p</name> <operator pos:start="601:11" pos:end="601:11">=</operator> <call pos:start="601:13" pos:end="601:34"><name pos:start="601:13" pos:end="601:28">lock_user_string</name><argument_list pos:start="601:29" pos:end="601:34">(<argument pos:start="601:30" pos:end="601:33"><expr pos:start="601:30" pos:end="601:33"><name pos:start="601:30" pos:end="601:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="603:9" pos:end="603:40"><expr pos:start="603:9" pos:end="603:39"><name pos:start="603:9" pos:end="603:11">ret</name> <operator pos:start="603:13" pos:end="603:13">=</operator> <call pos:start="603:15" pos:end="603:39"><name pos:start="603:15" pos:end="603:23">get_errno</name><argument_list pos:start="603:24" pos:end="603:39">(<argument pos:start="603:25" pos:end="603:38"><expr pos:start="603:25" pos:end="603:38"><call pos:start="603:25" pos:end="603:38"><name pos:start="603:25" pos:end="603:29">mkdir</name><argument_list pos:start="603:30" pos:end="603:38">(<argument pos:start="603:31" pos:end="603:31"><expr pos:start="603:31" pos:end="603:31"><name pos:start="603:31" pos:end="603:31">p</name></expr></argument>, <argument pos:start="603:34" pos:end="603:37"><expr pos:start="603:34" pos:end="603:37"><name pos:start="603:34" pos:end="603:37">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="605:9" pos:end="605:32"><expr pos:start="605:9" pos:end="605:31"><call pos:start="605:9" pos:end="605:31"><name pos:start="605:9" pos:end="605:19">unlock_user</name><argument_list pos:start="605:20" pos:end="605:31">(<argument pos:start="605:21" pos:end="605:21"><expr pos:start="605:21" pos:end="605:21"><name pos:start="605:21" pos:end="605:21">p</name></expr></argument>, <argument pos:start="605:24" pos:end="605:27"><expr pos:start="605:24" pos:end="605:27"><name pos:start="605:24" pos:end="605:27">arg1</name></expr></argument>, <argument pos:start="605:30" pos:end="605:30"><expr pos:start="605:30" pos:end="605:30"><literal type="number" pos:start="605:30" pos:end="605:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="607:9" pos:end="607:14">break;</break>

    <case pos:start="609:5" pos:end="609:25">case <expr pos:start="609:10" pos:end="609:24"><name pos:start="609:10" pos:end="609:24">TARGET_NR_rmdir</name></expr>:</case>

        <expr_stmt pos:start="611:9" pos:end="611:35"><expr pos:start="611:9" pos:end="611:34"><name pos:start="611:9" pos:end="611:9">p</name> <operator pos:start="611:11" pos:end="611:11">=</operator> <call pos:start="611:13" pos:end="611:34"><name pos:start="611:13" pos:end="611:28">lock_user_string</name><argument_list pos:start="611:29" pos:end="611:34">(<argument pos:start="611:30" pos:end="611:33"><expr pos:start="611:30" pos:end="611:33"><name pos:start="611:30" pos:end="611:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="613:9" pos:end="613:34"><expr pos:start="613:9" pos:end="613:33"><name pos:start="613:9" pos:end="613:11">ret</name> <operator pos:start="613:13" pos:end="613:13">=</operator> <call pos:start="613:15" pos:end="613:33"><name pos:start="613:15" pos:end="613:23">get_errno</name><argument_list pos:start="613:24" pos:end="613:33">(<argument pos:start="613:25" pos:end="613:32"><expr pos:start="613:25" pos:end="613:32"><call pos:start="613:25" pos:end="613:32"><name pos:start="613:25" pos:end="613:29">rmdir</name><argument_list pos:start="613:30" pos:end="613:32">(<argument pos:start="613:31" pos:end="613:31"><expr pos:start="613:31" pos:end="613:31"><name pos:start="613:31" pos:end="613:31">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="615:9" pos:end="615:32"><expr pos:start="615:9" pos:end="615:31"><call pos:start="615:9" pos:end="615:31"><name pos:start="615:9" pos:end="615:19">unlock_user</name><argument_list pos:start="615:20" pos:end="615:31">(<argument pos:start="615:21" pos:end="615:21"><expr pos:start="615:21" pos:end="615:21"><name pos:start="615:21" pos:end="615:21">p</name></expr></argument>, <argument pos:start="615:24" pos:end="615:27"><expr pos:start="615:24" pos:end="615:27"><name pos:start="615:24" pos:end="615:27">arg1</name></expr></argument>, <argument pos:start="615:30" pos:end="615:30"><expr pos:start="615:30" pos:end="615:30"><literal type="number" pos:start="615:30" pos:end="615:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="617:9" pos:end="617:14">break;</break>

    <case pos:start="619:5" pos:end="619:23">case <expr pos:start="619:10" pos:end="619:22"><name pos:start="619:10" pos:end="619:22">TARGET_NR_dup</name></expr>:</case>

        <expr_stmt pos:start="621:9" pos:end="621:35"><expr pos:start="621:9" pos:end="621:34"><name pos:start="621:9" pos:end="621:11">ret</name> <operator pos:start="621:13" pos:end="621:13">=</operator> <call pos:start="621:15" pos:end="621:34"><name pos:start="621:15" pos:end="621:23">get_errno</name><argument_list pos:start="621:24" pos:end="621:34">(<argument pos:start="621:25" pos:end="621:33"><expr pos:start="621:25" pos:end="621:33"><call pos:start="621:25" pos:end="621:33"><name pos:start="621:25" pos:end="621:27">dup</name><argument_list pos:start="621:28" pos:end="621:33">(<argument pos:start="621:29" pos:end="621:32"><expr pos:start="621:29" pos:end="621:32"><name pos:start="621:29" pos:end="621:32">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="623:9" pos:end="623:14">break;</break>

    <case pos:start="625:5" pos:end="625:24">case <expr pos:start="625:10" pos:end="625:23"><name pos:start="625:10" pos:end="625:23">TARGET_NR_pipe</name></expr>:</case>

        <block pos:start="627:9" pos:end="653:9">{<block_content pos:start="629:13" pos:end="651:13">

            <decl_stmt pos:start="629:13" pos:end="629:29"><decl pos:start="629:13" pos:end="629:28"><type pos:start="629:13" pos:end="629:15"><name pos:start="629:13" pos:end="629:15">int</name></type> <name pos:start="629:17" pos:end="629:28"><name pos:start="629:17" pos:end="629:25">host_pipe</name><index pos:start="629:26" pos:end="629:28">[<expr pos:start="629:27" pos:end="629:27"><literal type="number" pos:start="629:27" pos:end="629:27">2</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="631:13" pos:end="631:45"><expr pos:start="631:13" pos:end="631:44"><name pos:start="631:13" pos:end="631:15">ret</name> <operator pos:start="631:17" pos:end="631:17">=</operator> <call pos:start="631:19" pos:end="631:44"><name pos:start="631:19" pos:end="631:27">get_errno</name><argument_list pos:start="631:28" pos:end="631:44">(<argument pos:start="631:29" pos:end="631:43"><expr pos:start="631:29" pos:end="631:43"><call pos:start="631:29" pos:end="631:43"><name pos:start="631:29" pos:end="631:32">pipe</name><argument_list pos:start="631:33" pos:end="631:43">(<argument pos:start="631:34" pos:end="631:42"><expr pos:start="631:34" pos:end="631:42"><name pos:start="631:34" pos:end="631:42">host_pipe</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="633:13" pos:end="651:13"><if pos:start="633:13" pos:end="651:13">if <condition pos:start="633:16" pos:end="633:31">(<expr pos:start="633:17" pos:end="633:30"><operator pos:start="633:17" pos:end="633:17">!</operator><call pos:start="633:18" pos:end="633:30"><name pos:start="633:18" pos:end="633:25">is_error</name><argument_list pos:start="633:26" pos:end="633:30">(<argument pos:start="633:27" pos:end="633:29"><expr pos:start="633:27" pos:end="633:29"><name pos:start="633:27" pos:end="633:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="633:33" pos:end="651:13">{<block_content pos:start="637:17" pos:end="650:0">

<cpp:if pos:start="635:1" pos:end="635:24">#<cpp:directive pos:start="635:2" pos:end="635:3">if</cpp:directive> <expr pos:start="635:5" pos:end="635:24"><call pos:start="635:5" pos:end="635:24"><name pos:start="635:5" pos:end="635:11">defined</name><argument_list pos:start="635:12" pos:end="635:24">(<argument pos:start="635:13" pos:end="635:23"><expr pos:start="635:13" pos:end="635:23"><name pos:start="635:13" pos:end="635:23">TARGET_MIPS</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <decl_stmt pos:start="637:17" pos:end="637:59"><decl pos:start="637:17" pos:end="637:58"><type pos:start="637:17" pos:end="637:30"><name pos:start="637:17" pos:end="637:28">CPUMIPSState</name> <modifier pos:start="637:30" pos:end="637:30">*</modifier></type><name pos:start="637:31" pos:end="637:33">env</name> <init pos:start="637:35" pos:end="637:58">= <expr pos:start="637:37" pos:end="637:58"><operator pos:start="637:37" pos:end="637:37">(</operator><name pos:start="637:38" pos:end="637:49">CPUMIPSState</name><operator pos:start="637:50" pos:end="637:50">*</operator><operator pos:start="637:51" pos:end="637:51">)</operator><name pos:start="637:52" pos:end="637:58">cpu_env</name></expr></init></decl>;</decl_stmt>

		<expr_stmt pos:start="639:17" pos:end="639:60"><expr pos:start="639:17" pos:end="639:59"><name pos:start="639:17" pos:end="639:44"><name pos:start="639:17" pos:end="639:19">env</name><operator pos:start="639:20" pos:end="639:21">-&gt;</operator><name pos:start="639:22" pos:end="639:24">gpr</name><index pos:start="639:25" pos:end="639:27">[<expr pos:start="639:26" pos:end="639:26"><literal type="number" pos:start="639:26" pos:end="639:26">3</literal></expr>]</index><index pos:start="639:28" pos:end="639:44">[<expr pos:start="639:29" pos:end="639:43"><name pos:start="639:29" pos:end="639:43"><name pos:start="639:29" pos:end="639:31">env</name><operator pos:start="639:32" pos:end="639:33">-&gt;</operator><name pos:start="639:34" pos:end="639:43">current_tc</name></name></expr>]</index></name> <operator pos:start="639:46" pos:end="639:46">=</operator> <name pos:start="639:48" pos:end="639:59"><name pos:start="639:48" pos:end="639:56">host_pipe</name><index pos:start="639:57" pos:end="639:59">[<expr pos:start="639:58" pos:end="639:58"><literal type="number" pos:start="639:58" pos:end="639:58">1</literal></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt pos:start="641:17" pos:end="644:0"><expr pos:start="641:17" pos:end="641:34"><name pos:start="641:17" pos:end="641:19">ret</name> <operator pos:start="641:21" pos:end="641:21">=</operator> <name pos:start="641:23" pos:end="641:34"><name pos:start="641:23" pos:end="641:31">host_pipe</name><index pos:start="641:32" pos:end="641:34">[<expr pos:start="641:33" pos:end="641:33"><literal type="number" pos:start="641:33" pos:end="641:33">0</literal></expr>]</index></name></expr>;</expr_stmt>

<cpp:else pos:start="643:1" pos:end="643:5">#<cpp:directive pos:start="643:2" pos:end="643:5">else</cpp:directive></cpp:else>

                <expr_stmt pos:start="645:17" pos:end="645:43"><expr pos:start="645:17" pos:end="645:42"><call pos:start="645:17" pos:end="645:42"><name pos:start="645:17" pos:end="645:22">tput32</name><argument_list pos:start="645:23" pos:end="645:42">(<argument pos:start="645:24" pos:end="645:27"><expr pos:start="645:24" pos:end="645:27"><name pos:start="645:24" pos:end="645:27">arg1</name></expr></argument>, <argument pos:start="645:30" pos:end="645:41"><expr pos:start="645:30" pos:end="645:41"><name pos:start="645:30" pos:end="645:41"><name pos:start="645:30" pos:end="645:38">host_pipe</name><index pos:start="645:39" pos:end="645:41">[<expr pos:start="645:40" pos:end="645:40"><literal type="number" pos:start="645:40" pos:end="645:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="647:17" pos:end="650:0"><expr pos:start="647:17" pos:end="647:46"><call pos:start="647:17" pos:end="647:46"><name pos:start="647:17" pos:end="647:22">tput32</name><argument_list pos:start="647:23" pos:end="647:46">(<argument pos:start="647:24" pos:end="647:31"><expr pos:start="647:24" pos:end="647:31"><name pos:start="647:24" pos:end="647:27">arg1</name> <operator pos:start="647:29" pos:end="647:29">+</operator> <literal type="number" pos:start="647:31" pos:end="647:31">4</literal></expr></argument>, <argument pos:start="647:34" pos:end="647:45"><expr pos:start="647:34" pos:end="647:45"><name pos:start="647:34" pos:end="647:45"><name pos:start="647:34" pos:end="647:42">host_pipe</name><index pos:start="647:43" pos:end="647:45">[<expr pos:start="647:44" pos:end="647:44"><literal type="number" pos:start="647:44" pos:end="647:44">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="649:1" pos:end="649:6">#<cpp:directive pos:start="649:2" pos:end="649:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="655:9" pos:end="655:14">break;</break>

    <case pos:start="657:5" pos:end="657:25">case <expr pos:start="657:10" pos:end="657:24"><name pos:start="657:10" pos:end="657:24">TARGET_NR_times</name></expr>:</case>

        <block pos:start="659:9" pos:end="685:9">{<block_content pos:start="661:13" pos:end="683:50">

            <decl_stmt pos:start="661:13" pos:end="661:36"><decl pos:start="661:13" pos:end="661:35"><type pos:start="661:13" pos:end="661:31"><name pos:start="661:13" pos:end="661:29"><name pos:start="661:13" pos:end="661:18">struct</name> <name pos:start="661:20" pos:end="661:29">target_tms</name></name> <modifier pos:start="661:31" pos:end="661:31">*</modifier></type><name pos:start="661:32" pos:end="661:35">tmsp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="663:13" pos:end="663:27"><decl pos:start="663:13" pos:end="663:26"><type pos:start="663:13" pos:end="663:22"><name pos:start="663:13" pos:end="663:22"><name pos:start="663:13" pos:end="663:18">struct</name> <name pos:start="663:20" pos:end="663:22">tms</name></name></type> <name pos:start="663:24" pos:end="663:26">tms</name></decl>;</decl_stmt>

            <expr_stmt pos:start="665:13" pos:end="665:41"><expr pos:start="665:13" pos:end="665:40"><name pos:start="665:13" pos:end="665:15">ret</name> <operator pos:start="665:17" pos:end="665:17">=</operator> <call pos:start="665:19" pos:end="665:40"><name pos:start="665:19" pos:end="665:27">get_errno</name><argument_list pos:start="665:28" pos:end="665:40">(<argument pos:start="665:29" pos:end="665:39"><expr pos:start="665:29" pos:end="665:39"><call pos:start="665:29" pos:end="665:39"><name pos:start="665:29" pos:end="665:33">times</name><argument_list pos:start="665:34" pos:end="665:39">(<argument pos:start="665:35" pos:end="665:38"><expr pos:start="665:35" pos:end="665:38"><operator pos:start="665:35" pos:end="665:35">&amp;</operator><name pos:start="665:36" pos:end="665:38">tms</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="667:13" pos:end="679:13"><if pos:start="667:13" pos:end="679:13">if <condition pos:start="667:16" pos:end="667:21">(<expr pos:start="667:17" pos:end="667:20"><name pos:start="667:17" pos:end="667:20">arg1</name></expr>)</condition> <block pos:start="667:23" pos:end="679:13">{<block_content pos:start="669:17" pos:end="677:82">

                <expr_stmt pos:start="669:17" pos:end="669:69"><expr pos:start="669:17" pos:end="669:68"><name pos:start="669:17" pos:end="669:20">tmsp</name> <operator pos:start="669:22" pos:end="669:22">=</operator> <call pos:start="669:24" pos:end="669:68"><name pos:start="669:24" pos:end="669:32">lock_user</name><argument_list pos:start="669:33" pos:end="669:68">(<argument pos:start="669:34" pos:end="669:37"><expr pos:start="669:34" pos:end="669:37"><name pos:start="669:34" pos:end="669:37">arg1</name></expr></argument>, <argument pos:start="669:40" pos:end="669:64"><expr pos:start="669:40" pos:end="669:64"><sizeof pos:start="669:40" pos:end="669:64">sizeof<argument_list pos:start="669:46" pos:end="669:64">(<argument pos:start="669:47" pos:end="669:63"><expr pos:start="669:47" pos:end="669:63">struct <name pos:start="669:54" pos:end="669:63">target_tms</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="669:67" pos:end="669:67"><expr pos:start="669:67" pos:end="669:67"><literal type="number" pos:start="669:67" pos:end="669:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="671:17" pos:end="671:80"><expr pos:start="671:17" pos:end="671:79"><name pos:start="671:17" pos:end="671:31"><name pos:start="671:17" pos:end="671:20">tmsp</name><operator pos:start="671:21" pos:end="671:22">-&gt;</operator><name pos:start="671:23" pos:end="671:31">tms_utime</name></name> <operator pos:start="671:33" pos:end="671:33">=</operator> <call pos:start="671:35" pos:end="671:79"><name pos:start="671:35" pos:end="671:40">tswapl</name><argument_list pos:start="671:41" pos:end="671:79">(<argument pos:start="671:42" pos:end="671:78"><expr pos:start="671:42" pos:end="671:78"><call pos:start="671:42" pos:end="671:78"><name pos:start="671:42" pos:end="671:63">host_to_target_clock_t</name><argument_list pos:start="671:64" pos:end="671:78">(<argument pos:start="671:65" pos:end="671:77"><expr pos:start="671:65" pos:end="671:77"><name pos:start="671:65" pos:end="671:77"><name pos:start="671:65" pos:end="671:67">tms</name><operator pos:start="671:68" pos:end="671:68">.</operator><name pos:start="671:69" pos:end="671:77">tms_utime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="673:17" pos:end="673:80"><expr pos:start="673:17" pos:end="673:79"><name pos:start="673:17" pos:end="673:31"><name pos:start="673:17" pos:end="673:20">tmsp</name><operator pos:start="673:21" pos:end="673:22">-&gt;</operator><name pos:start="673:23" pos:end="673:31">tms_stime</name></name> <operator pos:start="673:33" pos:end="673:33">=</operator> <call pos:start="673:35" pos:end="673:79"><name pos:start="673:35" pos:end="673:40">tswapl</name><argument_list pos:start="673:41" pos:end="673:79">(<argument pos:start="673:42" pos:end="673:78"><expr pos:start="673:42" pos:end="673:78"><call pos:start="673:42" pos:end="673:78"><name pos:start="673:42" pos:end="673:63">host_to_target_clock_t</name><argument_list pos:start="673:64" pos:end="673:78">(<argument pos:start="673:65" pos:end="673:77"><expr pos:start="673:65" pos:end="673:77"><name pos:start="673:65" pos:end="673:77"><name pos:start="673:65" pos:end="673:67">tms</name><operator pos:start="673:68" pos:end="673:68">.</operator><name pos:start="673:69" pos:end="673:77">tms_stime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="675:17" pos:end="675:82"><expr pos:start="675:17" pos:end="675:81"><name pos:start="675:17" pos:end="675:32"><name pos:start="675:17" pos:end="675:20">tmsp</name><operator pos:start="675:21" pos:end="675:22">-&gt;</operator><name pos:start="675:23" pos:end="675:32">tms_cutime</name></name> <operator pos:start="675:34" pos:end="675:34">=</operator> <call pos:start="675:36" pos:end="675:81"><name pos:start="675:36" pos:end="675:41">tswapl</name><argument_list pos:start="675:42" pos:end="675:81">(<argument pos:start="675:43" pos:end="675:80"><expr pos:start="675:43" pos:end="675:80"><call pos:start="675:43" pos:end="675:80"><name pos:start="675:43" pos:end="675:64">host_to_target_clock_t</name><argument_list pos:start="675:65" pos:end="675:80">(<argument pos:start="675:66" pos:end="675:79"><expr pos:start="675:66" pos:end="675:79"><name pos:start="675:66" pos:end="675:79"><name pos:start="675:66" pos:end="675:68">tms</name><operator pos:start="675:69" pos:end="675:69">.</operator><name pos:start="675:70" pos:end="675:79">tms_cutime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="677:17" pos:end="677:82"><expr pos:start="677:17" pos:end="677:81"><name pos:start="677:17" pos:end="677:32"><name pos:start="677:17" pos:end="677:20">tmsp</name><operator pos:start="677:21" pos:end="677:22">-&gt;</operator><name pos:start="677:23" pos:end="677:32">tms_cstime</name></name> <operator pos:start="677:34" pos:end="677:34">=</operator> <call pos:start="677:36" pos:end="677:81"><name pos:start="677:36" pos:end="677:41">tswapl</name><argument_list pos:start="677:42" pos:end="677:81">(<argument pos:start="677:43" pos:end="677:80"><expr pos:start="677:43" pos:end="677:80"><call pos:start="677:43" pos:end="677:80"><name pos:start="677:43" pos:end="677:64">host_to_target_clock_t</name><argument_list pos:start="677:65" pos:end="677:80">(<argument pos:start="677:66" pos:end="677:79"><expr pos:start="677:66" pos:end="677:79"><name pos:start="677:66" pos:end="677:79"><name pos:start="677:66" pos:end="677:68">tms</name><operator pos:start="677:69" pos:end="677:69">.</operator><name pos:start="677:70" pos:end="677:79">tms_cstime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="681:13" pos:end="683:50"><if pos:start="681:13" pos:end="683:50">if <condition pos:start="681:16" pos:end="681:31">(<expr pos:start="681:17" pos:end="681:30"><operator pos:start="681:17" pos:end="681:17">!</operator><call pos:start="681:18" pos:end="681:30"><name pos:start="681:18" pos:end="681:25">is_error</name><argument_list pos:start="681:26" pos:end="681:30">(<argument pos:start="681:27" pos:end="681:29"><expr pos:start="681:27" pos:end="681:29"><name pos:start="681:27" pos:end="681:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="683:17" pos:end="683:50"><block_content pos:start="683:17" pos:end="683:50">

                <expr_stmt pos:start="683:17" pos:end="683:50"><expr pos:start="683:17" pos:end="683:49"><name pos:start="683:17" pos:end="683:19">ret</name> <operator pos:start="683:21" pos:end="683:21">=</operator> <call pos:start="683:23" pos:end="683:49"><name pos:start="683:23" pos:end="683:44">host_to_target_clock_t</name><argument_list pos:start="683:45" pos:end="683:49">(<argument pos:start="683:46" pos:end="683:48"><expr pos:start="683:46" pos:end="683:48"><name pos:start="683:46" pos:end="683:48">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="687:9" pos:end="690:0">break;</break>

<cpp:ifdef pos:start="689:1" pos:end="689:21">#<cpp:directive pos:start="689:2" pos:end="689:6">ifdef</cpp:directive> <name pos:start="689:8" pos:end="689:21">TARGET_NR_prof</name></cpp:ifdef>

    <case pos:start="691:5" pos:end="691:24">case <expr pos:start="691:10" pos:end="691:23"><name pos:start="691:10" pos:end="691:23">TARGET_NR_prof</name></expr>:</case>

        <goto pos:start="693:9" pos:end="698:0">goto <name pos:start="693:14" pos:end="693:26">unimplemented</name>;</goto>

<cpp:endif pos:start="695:1" pos:end="695:6">#<cpp:directive pos:start="695:2" pos:end="695:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="697:1" pos:end="697:23">#<cpp:directive pos:start="697:2" pos:end="697:6">ifdef</cpp:directive> <name pos:start="697:8" pos:end="697:23">TARGET_NR_signal</name></cpp:ifdef>

    <case pos:start="699:5" pos:end="699:26">case <expr pos:start="699:10" pos:end="699:25"><name pos:start="699:10" pos:end="699:25">TARGET_NR_signal</name></expr>:</case>

        <goto pos:start="701:9" pos:end="704:0">goto <name pos:start="701:14" pos:end="701:26">unimplemented</name>;</goto>

<cpp:endif pos:start="703:1" pos:end="703:6">#<cpp:directive pos:start="703:2" pos:end="703:6">endif</cpp:directive></cpp:endif>

    <case pos:start="705:5" pos:end="705:24">case <expr pos:start="705:10" pos:end="705:23"><name pos:start="705:10" pos:end="705:23">TARGET_NR_acct</name></expr>:</case>

        <expr_stmt pos:start="707:9" pos:end="707:35"><expr pos:start="707:9" pos:end="707:34"><name pos:start="707:9" pos:end="707:9">p</name> <operator pos:start="707:11" pos:end="707:11">=</operator> <call pos:start="707:13" pos:end="707:34"><name pos:start="707:13" pos:end="707:28">lock_user_string</name><argument_list pos:start="707:29" pos:end="707:34">(<argument pos:start="707:30" pos:end="707:33"><expr pos:start="707:30" pos:end="707:33"><name pos:start="707:30" pos:end="707:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="709:9" pos:end="709:39"><expr pos:start="709:9" pos:end="709:38"><name pos:start="709:9" pos:end="709:11">ret</name> <operator pos:start="709:13" pos:end="709:13">=</operator> <call pos:start="709:15" pos:end="709:38"><name pos:start="709:15" pos:end="709:23">get_errno</name><argument_list pos:start="709:24" pos:end="709:38">(<argument pos:start="709:25" pos:end="709:37"><expr pos:start="709:25" pos:end="709:37"><call pos:start="709:25" pos:end="709:37"><name pos:start="709:25" pos:end="709:28">acct</name><argument_list pos:start="709:29" pos:end="709:37">(<argument pos:start="709:30" pos:end="709:36"><expr pos:start="709:30" pos:end="709:36"><call pos:start="709:30" pos:end="709:36"><name pos:start="709:30" pos:end="709:33">path</name><argument_list pos:start="709:34" pos:end="709:36">(<argument pos:start="709:35" pos:end="709:35"><expr pos:start="709:35" pos:end="709:35"><name pos:start="709:35" pos:end="709:35">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="711:9" pos:end="711:32"><expr pos:start="711:9" pos:end="711:31"><call pos:start="711:9" pos:end="711:31"><name pos:start="711:9" pos:end="711:19">unlock_user</name><argument_list pos:start="711:20" pos:end="711:31">(<argument pos:start="711:21" pos:end="711:21"><expr pos:start="711:21" pos:end="711:21"><name pos:start="711:21" pos:end="711:21">p</name></expr></argument>, <argument pos:start="711:24" pos:end="711:27"><expr pos:start="711:24" pos:end="711:27"><name pos:start="711:24" pos:end="711:27">arg1</name></expr></argument>, <argument pos:start="711:30" pos:end="711:30"><expr pos:start="711:30" pos:end="711:30"><literal type="number" pos:start="711:30" pos:end="711:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="713:9" pos:end="716:0">break;</break>

<cpp:ifdef pos:start="715:1" pos:end="715:24">#<cpp:directive pos:start="715:2" pos:end="715:6">ifdef</cpp:directive> <name pos:start="715:8" pos:end="715:24">TARGET_NR_umount2</name></cpp:ifdef> <comment type="block" pos:start="715:26" pos:end="715:43">/* not on alpha */</comment>

    <case pos:start="717:5" pos:end="717:27">case <expr pos:start="717:10" pos:end="717:26"><name pos:start="717:10" pos:end="717:26">TARGET_NR_umount2</name></expr>:</case>

        <expr_stmt pos:start="719:9" pos:end="719:35"><expr pos:start="719:9" pos:end="719:34"><name pos:start="719:9" pos:end="719:9">p</name> <operator pos:start="719:11" pos:end="719:11">=</operator> <call pos:start="719:13" pos:end="719:34"><name pos:start="719:13" pos:end="719:28">lock_user_string</name><argument_list pos:start="719:29" pos:end="719:34">(<argument pos:start="719:30" pos:end="719:33"><expr pos:start="719:30" pos:end="719:33"><name pos:start="719:30" pos:end="719:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="721:9" pos:end="721:42"><expr pos:start="721:9" pos:end="721:41"><name pos:start="721:9" pos:end="721:11">ret</name> <operator pos:start="721:13" pos:end="721:13">=</operator> <call pos:start="721:15" pos:end="721:41"><name pos:start="721:15" pos:end="721:23">get_errno</name><argument_list pos:start="721:24" pos:end="721:41">(<argument pos:start="721:25" pos:end="721:40"><expr pos:start="721:25" pos:end="721:40"><call pos:start="721:25" pos:end="721:40"><name pos:start="721:25" pos:end="721:31">umount2</name><argument_list pos:start="721:32" pos:end="721:40">(<argument pos:start="721:33" pos:end="721:33"><expr pos:start="721:33" pos:end="721:33"><name pos:start="721:33" pos:end="721:33">p</name></expr></argument>, <argument pos:start="721:36" pos:end="721:39"><expr pos:start="721:36" pos:end="721:39"><name pos:start="721:36" pos:end="721:39">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="723:9" pos:end="723:32"><expr pos:start="723:9" pos:end="723:31"><call pos:start="723:9" pos:end="723:31"><name pos:start="723:9" pos:end="723:19">unlock_user</name><argument_list pos:start="723:20" pos:end="723:31">(<argument pos:start="723:21" pos:end="723:21"><expr pos:start="723:21" pos:end="723:21"><name pos:start="723:21" pos:end="723:21">p</name></expr></argument>, <argument pos:start="723:24" pos:end="723:27"><expr pos:start="723:24" pos:end="723:27"><name pos:start="723:24" pos:end="723:27">arg1</name></expr></argument>, <argument pos:start="723:30" pos:end="723:30"><expr pos:start="723:30" pos:end="723:30"><literal type="number" pos:start="723:30" pos:end="723:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="725:9" pos:end="730:0">break;</break>

<cpp:endif pos:start="727:1" pos:end="727:6">#<cpp:directive pos:start="727:2" pos:end="727:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="729:1" pos:end="729:21">#<cpp:directive pos:start="729:2" pos:end="729:6">ifdef</cpp:directive> <name pos:start="729:8" pos:end="729:21">TARGET_NR_lock</name></cpp:ifdef>

    <case pos:start="731:5" pos:end="731:24">case <expr pos:start="731:10" pos:end="731:23"><name pos:start="731:10" pos:end="731:23">TARGET_NR_lock</name></expr>:</case>

        <goto pos:start="733:9" pos:end="736:0">goto <name pos:start="733:14" pos:end="733:26">unimplemented</name>;</goto>

<cpp:endif pos:start="735:1" pos:end="735:6">#<cpp:directive pos:start="735:2" pos:end="735:6">endif</cpp:directive></cpp:endif>

    <case pos:start="737:5" pos:end="737:25">case <expr pos:start="737:10" pos:end="737:24"><name pos:start="737:10" pos:end="737:24">TARGET_NR_ioctl</name></expr>:</case>

        <expr_stmt pos:start="739:9" pos:end="739:41"><expr pos:start="739:9" pos:end="739:40"><name pos:start="739:9" pos:end="739:11">ret</name> <operator pos:start="739:13" pos:end="739:13">=</operator> <call pos:start="739:15" pos:end="739:40"><name pos:start="739:15" pos:end="739:22">do_ioctl</name><argument_list pos:start="739:23" pos:end="739:40">(<argument pos:start="739:24" pos:end="739:27"><expr pos:start="739:24" pos:end="739:27"><name pos:start="739:24" pos:end="739:27">arg1</name></expr></argument>, <argument pos:start="739:30" pos:end="739:33"><expr pos:start="739:30" pos:end="739:33"><name pos:start="739:30" pos:end="739:33">arg2</name></expr></argument>, <argument pos:start="739:36" pos:end="739:39"><expr pos:start="739:36" pos:end="739:39"><name pos:start="739:36" pos:end="739:39">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="741:9" pos:end="741:14">break;</break>

    <case pos:start="743:5" pos:end="743:25">case <expr pos:start="743:10" pos:end="743:24"><name pos:start="743:10" pos:end="743:24">TARGET_NR_fcntl</name></expr>:</case>

        <expr_stmt pos:start="745:9" pos:end="745:52"><expr pos:start="745:9" pos:end="745:51"><name pos:start="745:9" pos:end="745:11">ret</name> <operator pos:start="745:13" pos:end="745:13">=</operator> <call pos:start="745:15" pos:end="745:51"><name pos:start="745:15" pos:end="745:23">get_errno</name><argument_list pos:start="745:24" pos:end="745:51">(<argument pos:start="745:25" pos:end="745:50"><expr pos:start="745:25" pos:end="745:50"><call pos:start="745:25" pos:end="745:50"><name pos:start="745:25" pos:end="745:32">do_fcntl</name><argument_list pos:start="745:33" pos:end="745:50">(<argument pos:start="745:34" pos:end="745:37"><expr pos:start="745:34" pos:end="745:37"><name pos:start="745:34" pos:end="745:37">arg1</name></expr></argument>, <argument pos:start="745:40" pos:end="745:43"><expr pos:start="745:40" pos:end="745:43"><name pos:start="745:40" pos:end="745:43">arg2</name></expr></argument>, <argument pos:start="745:46" pos:end="745:49"><expr pos:start="745:46" pos:end="745:49"><name pos:start="745:46" pos:end="745:49">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="747:9" pos:end="750:0">break;</break>

<cpp:ifdef pos:start="749:1" pos:end="749:20">#<cpp:directive pos:start="749:2" pos:end="749:6">ifdef</cpp:directive> <name pos:start="749:8" pos:end="749:20">TARGET_NR_mpx</name></cpp:ifdef>

    <case pos:start="751:5" pos:end="751:23">case <expr pos:start="751:10" pos:end="751:22"><name pos:start="751:10" pos:end="751:22">TARGET_NR_mpx</name></expr>:</case>

        <goto pos:start="753:9" pos:end="756:0">goto <name pos:start="753:14" pos:end="753:26">unimplemented</name>;</goto>

<cpp:endif pos:start="755:1" pos:end="755:6">#<cpp:directive pos:start="755:2" pos:end="755:6">endif</cpp:directive></cpp:endif>

    <case pos:start="757:5" pos:end="757:27">case <expr pos:start="757:10" pos:end="757:26"><name pos:start="757:10" pos:end="757:26">TARGET_NR_setpgid</name></expr>:</case>

        <expr_stmt pos:start="759:9" pos:end="759:45"><expr pos:start="759:9" pos:end="759:44"><name pos:start="759:9" pos:end="759:11">ret</name> <operator pos:start="759:13" pos:end="759:13">=</operator> <call pos:start="759:15" pos:end="759:44"><name pos:start="759:15" pos:end="759:23">get_errno</name><argument_list pos:start="759:24" pos:end="759:44">(<argument pos:start="759:25" pos:end="759:43"><expr pos:start="759:25" pos:end="759:43"><call pos:start="759:25" pos:end="759:43"><name pos:start="759:25" pos:end="759:31">setpgid</name><argument_list pos:start="759:32" pos:end="759:43">(<argument pos:start="759:33" pos:end="759:36"><expr pos:start="759:33" pos:end="759:36"><name pos:start="759:33" pos:end="759:36">arg1</name></expr></argument>, <argument pos:start="759:39" pos:end="759:42"><expr pos:start="759:39" pos:end="759:42"><name pos:start="759:39" pos:end="759:42">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="761:9" pos:end="764:0">break;</break>

<cpp:ifdef pos:start="763:1" pos:end="763:23">#<cpp:directive pos:start="763:2" pos:end="763:6">ifdef</cpp:directive> <name pos:start="763:8" pos:end="763:23">TARGET_NR_ulimit</name></cpp:ifdef>

    <case pos:start="765:5" pos:end="765:26">case <expr pos:start="765:10" pos:end="765:25"><name pos:start="765:10" pos:end="765:25">TARGET_NR_ulimit</name></expr>:</case>

        <goto pos:start="767:9" pos:end="772:0">goto <name pos:start="767:14" pos:end="767:26">unimplemented</name>;</goto>

<cpp:endif pos:start="769:1" pos:end="769:6">#<cpp:directive pos:start="769:2" pos:end="769:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="771:1" pos:end="771:28">#<cpp:directive pos:start="771:2" pos:end="771:6">ifdef</cpp:directive> <name pos:start="771:8" pos:end="771:28">TARGET_NR_oldolduname</name></cpp:ifdef>

    <case pos:start="773:5" pos:end="773:31">case <expr pos:start="773:10" pos:end="773:30"><name pos:start="773:10" pos:end="773:30">TARGET_NR_oldolduname</name></expr>:</case>

        <goto pos:start="775:9" pos:end="778:0">goto <name pos:start="775:14" pos:end="775:26">unimplemented</name>;</goto>

<cpp:endif pos:start="777:1" pos:end="777:6">#<cpp:directive pos:start="777:2" pos:end="777:6">endif</cpp:directive></cpp:endif>

    <case pos:start="779:5" pos:end="779:25">case <expr pos:start="779:10" pos:end="779:24"><name pos:start="779:10" pos:end="779:24">TARGET_NR_umask</name></expr>:</case>

        <expr_stmt pos:start="781:9" pos:end="781:37"><expr pos:start="781:9" pos:end="781:36"><name pos:start="781:9" pos:end="781:11">ret</name> <operator pos:start="781:13" pos:end="781:13">=</operator> <call pos:start="781:15" pos:end="781:36"><name pos:start="781:15" pos:end="781:23">get_errno</name><argument_list pos:start="781:24" pos:end="781:36">(<argument pos:start="781:25" pos:end="781:35"><expr pos:start="781:25" pos:end="781:35"><call pos:start="781:25" pos:end="781:35"><name pos:start="781:25" pos:end="781:29">umask</name><argument_list pos:start="781:30" pos:end="781:35">(<argument pos:start="781:31" pos:end="781:34"><expr pos:start="781:31" pos:end="781:34"><name pos:start="781:31" pos:end="781:34">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="783:9" pos:end="783:14">break;</break>

    <case pos:start="785:5" pos:end="785:26">case <expr pos:start="785:10" pos:end="785:25"><name pos:start="785:10" pos:end="785:25">TARGET_NR_chroot</name></expr>:</case>

        <expr_stmt pos:start="787:9" pos:end="787:35"><expr pos:start="787:9" pos:end="787:34"><name pos:start="787:9" pos:end="787:9">p</name> <operator pos:start="787:11" pos:end="787:11">=</operator> <call pos:start="787:13" pos:end="787:34"><name pos:start="787:13" pos:end="787:28">lock_user_string</name><argument_list pos:start="787:29" pos:end="787:34">(<argument pos:start="787:30" pos:end="787:33"><expr pos:start="787:30" pos:end="787:33"><name pos:start="787:30" pos:end="787:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="789:9" pos:end="789:35"><expr pos:start="789:9" pos:end="789:34"><name pos:start="789:9" pos:end="789:11">ret</name> <operator pos:start="789:13" pos:end="789:13">=</operator> <call pos:start="789:15" pos:end="789:34"><name pos:start="789:15" pos:end="789:23">get_errno</name><argument_list pos:start="789:24" pos:end="789:34">(<argument pos:start="789:25" pos:end="789:33"><expr pos:start="789:25" pos:end="789:33"><call pos:start="789:25" pos:end="789:33"><name pos:start="789:25" pos:end="789:30">chroot</name><argument_list pos:start="789:31" pos:end="789:33">(<argument pos:start="789:32" pos:end="789:32"><expr pos:start="789:32" pos:end="789:32"><name pos:start="789:32" pos:end="789:32">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="791:9" pos:end="791:32"><expr pos:start="791:9" pos:end="791:31"><call pos:start="791:9" pos:end="791:31"><name pos:start="791:9" pos:end="791:19">unlock_user</name><argument_list pos:start="791:20" pos:end="791:31">(<argument pos:start="791:21" pos:end="791:21"><expr pos:start="791:21" pos:end="791:21"><name pos:start="791:21" pos:end="791:21">p</name></expr></argument>, <argument pos:start="791:24" pos:end="791:27"><expr pos:start="791:24" pos:end="791:27"><name pos:start="791:24" pos:end="791:27">arg1</name></expr></argument>, <argument pos:start="791:30" pos:end="791:30"><expr pos:start="791:30" pos:end="791:30"><literal type="number" pos:start="791:30" pos:end="791:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="793:9" pos:end="793:14">break;</break>

    <case pos:start="795:5" pos:end="795:25">case <expr pos:start="795:10" pos:end="795:24"><name pos:start="795:10" pos:end="795:24">TARGET_NR_ustat</name></expr>:</case>

        <goto pos:start="797:9" pos:end="797:27">goto <name pos:start="797:14" pos:end="797:26">unimplemented</name>;</goto>

    <case pos:start="799:5" pos:end="799:24">case <expr pos:start="799:10" pos:end="799:23"><name pos:start="799:10" pos:end="799:23">TARGET_NR_dup2</name></expr>:</case>

        <expr_stmt pos:start="801:9" pos:end="801:42"><expr pos:start="801:9" pos:end="801:41"><name pos:start="801:9" pos:end="801:11">ret</name> <operator pos:start="801:13" pos:end="801:13">=</operator> <call pos:start="801:15" pos:end="801:41"><name pos:start="801:15" pos:end="801:23">get_errno</name><argument_list pos:start="801:24" pos:end="801:41">(<argument pos:start="801:25" pos:end="801:40"><expr pos:start="801:25" pos:end="801:40"><call pos:start="801:25" pos:end="801:40"><name pos:start="801:25" pos:end="801:28">dup2</name><argument_list pos:start="801:29" pos:end="801:40">(<argument pos:start="801:30" pos:end="801:33"><expr pos:start="801:30" pos:end="801:33"><name pos:start="801:30" pos:end="801:33">arg1</name></expr></argument>, <argument pos:start="801:36" pos:end="801:39"><expr pos:start="801:36" pos:end="801:39"><name pos:start="801:36" pos:end="801:39">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="803:9" pos:end="806:0">break;</break>

<cpp:ifdef pos:start="805:1" pos:end="805:24">#<cpp:directive pos:start="805:2" pos:end="805:6">ifdef</cpp:directive> <name pos:start="805:8" pos:end="805:24">TARGET_NR_getppid</name></cpp:ifdef> <comment type="block" pos:start="805:26" pos:end="805:43">/* not on alpha */</comment>

    <case pos:start="807:5" pos:end="807:27">case <expr pos:start="807:10" pos:end="807:26"><name pos:start="807:10" pos:end="807:26">TARGET_NR_getppid</name></expr>:</case>

        <expr_stmt pos:start="809:9" pos:end="809:35"><expr pos:start="809:9" pos:end="809:34"><name pos:start="809:9" pos:end="809:11">ret</name> <operator pos:start="809:13" pos:end="809:13">=</operator> <call pos:start="809:15" pos:end="809:34"><name pos:start="809:15" pos:end="809:23">get_errno</name><argument_list pos:start="809:24" pos:end="809:34">(<argument pos:start="809:25" pos:end="809:33"><expr pos:start="809:25" pos:end="809:33"><call pos:start="809:25" pos:end="809:33"><name pos:start="809:25" pos:end="809:31">getppid</name><argument_list pos:start="809:32" pos:end="809:33">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="811:9" pos:end="814:0">break;</break>

<cpp:endif pos:start="813:1" pos:end="813:6">#<cpp:directive pos:start="813:2" pos:end="813:6">endif</cpp:directive></cpp:endif>

    <case pos:start="815:5" pos:end="815:27">case <expr pos:start="815:10" pos:end="815:26"><name pos:start="815:10" pos:end="815:26">TARGET_NR_getpgrp</name></expr>:</case>

        <expr_stmt pos:start="817:9" pos:end="817:35"><expr pos:start="817:9" pos:end="817:34"><name pos:start="817:9" pos:end="817:11">ret</name> <operator pos:start="817:13" pos:end="817:13">=</operator> <call pos:start="817:15" pos:end="817:34"><name pos:start="817:15" pos:end="817:23">get_errno</name><argument_list pos:start="817:24" pos:end="817:34">(<argument pos:start="817:25" pos:end="817:33"><expr pos:start="817:25" pos:end="817:33"><call pos:start="817:25" pos:end="817:33"><name pos:start="817:25" pos:end="817:31">getpgrp</name><argument_list pos:start="817:32" pos:end="817:33">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="819:9" pos:end="819:14">break;</break>

    <case pos:start="821:5" pos:end="821:26">case <expr pos:start="821:10" pos:end="821:25"><name pos:start="821:10" pos:end="821:25">TARGET_NR_setsid</name></expr>:</case>

        <expr_stmt pos:start="823:9" pos:end="823:34"><expr pos:start="823:9" pos:end="823:33"><name pos:start="823:9" pos:end="823:11">ret</name> <operator pos:start="823:13" pos:end="823:13">=</operator> <call pos:start="823:15" pos:end="823:33"><name pos:start="823:15" pos:end="823:23">get_errno</name><argument_list pos:start="823:24" pos:end="823:33">(<argument pos:start="823:25" pos:end="823:32"><expr pos:start="823:25" pos:end="823:32"><call pos:start="823:25" pos:end="823:32"><name pos:start="823:25" pos:end="823:30">setsid</name><argument_list pos:start="823:31" pos:end="823:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="825:9" pos:end="828:0">break;</break>

<cpp:ifdef pos:start="827:1" pos:end="827:26">#<cpp:directive pos:start="827:2" pos:end="827:6">ifdef</cpp:directive> <name pos:start="827:8" pos:end="827:26">TARGET_NR_sigaction</name></cpp:ifdef>

    <case pos:start="829:5" pos:end="829:29">case <expr pos:start="829:10" pos:end="829:28"><name pos:start="829:10" pos:end="829:28">TARGET_NR_sigaction</name></expr>:</case>

        <block pos:start="831:9" pos:end="933:9">{<block_content pos:start="835:13" pos:end="932:0">

<cpp:if pos:start="833:1" pos:end="833:25">#<cpp:directive pos:start="833:2" pos:end="833:3">if</cpp:directive> <expr pos:start="833:5" pos:end="833:25"><operator pos:start="833:5" pos:end="833:5">!</operator><call pos:start="833:6" pos:end="833:25"><name pos:start="833:6" pos:end="833:12">defined</name><argument_list pos:start="833:13" pos:end="833:25">(<argument pos:start="833:14" pos:end="833:24"><expr pos:start="833:14" pos:end="833:24"><name pos:start="833:14" pos:end="833:24">TARGET_MIPS</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <decl_stmt pos:start="835:13" pos:end="835:49"><decl pos:start="835:13" pos:end="835:48"><type pos:start="835:13" pos:end="835:41"><name pos:start="835:13" pos:end="835:39"><name pos:start="835:13" pos:end="835:18">struct</name> <name pos:start="835:20" pos:end="835:39">target_old_sigaction</name></name> <modifier pos:start="835:41" pos:end="835:41">*</modifier></type><name pos:start="835:42" pos:end="835:48">old_act</name></decl>;</decl_stmt>

            <decl_stmt pos:start="837:13" pos:end="837:53"><decl pos:start="837:13" pos:end="837:39"><type pos:start="837:13" pos:end="837:35"><name pos:start="837:13" pos:end="837:35"><name pos:start="837:13" pos:end="837:18">struct</name> <name pos:start="837:20" pos:end="837:35">target_sigaction</name></name></type> <name pos:start="837:37" pos:end="837:39">act</name></decl>, <decl pos:start="837:42" pos:end="837:45"><type ref="prev" pos:start="837:13" pos:end="837:35"/><name pos:start="837:42" pos:end="837:45">oact</name></decl>, <decl pos:start="837:48" pos:end="837:52"><type ref="prev" pos:start="837:13" pos:end="837:35"><modifier pos:start="837:48" pos:end="837:48">*</modifier></type><name pos:start="837:49" pos:end="837:52">pact</name></decl>;</decl_stmt>

            <if_stmt pos:start="839:13" pos:end="859:13"><if pos:start="839:13" pos:end="855:13">if <condition pos:start="839:16" pos:end="839:21">(<expr pos:start="839:17" pos:end="839:20"><name pos:start="839:17" pos:end="839:20">arg2</name></expr>)</condition> <block pos:start="839:23" pos:end="855:13">{<block_content pos:start="841:17" pos:end="853:28">

                <expr_stmt pos:start="841:17" pos:end="841:51"><expr pos:start="841:17" pos:end="841:50"><call pos:start="841:17" pos:end="841:50"><name pos:start="841:17" pos:end="841:32">lock_user_struct</name><argument_list pos:start="841:33" pos:end="841:50">(<argument pos:start="841:34" pos:end="841:40"><expr pos:start="841:34" pos:end="841:40"><name pos:start="841:34" pos:end="841:40">old_act</name></expr></argument>, <argument pos:start="841:43" pos:end="841:46"><expr pos:start="841:43" pos:end="841:46"><name pos:start="841:43" pos:end="841:46">arg2</name></expr></argument>, <argument pos:start="841:49" pos:end="841:49"><expr pos:start="841:49" pos:end="841:49"><literal type="number" pos:start="841:49" pos:end="841:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="843:17" pos:end="843:55"><expr pos:start="843:17" pos:end="843:54"><name pos:start="843:17" pos:end="843:31"><name pos:start="843:17" pos:end="843:19">act</name><operator pos:start="843:20" pos:end="843:20">.</operator><name pos:start="843:21" pos:end="843:31">_sa_handler</name></name> <operator pos:start="843:33" pos:end="843:33">=</operator> <name pos:start="843:35" pos:end="843:54"><name pos:start="843:35" pos:end="843:41">old_act</name><operator pos:start="843:42" pos:end="843:43">-&gt;</operator><name pos:start="843:44" pos:end="843:54">_sa_handler</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="845:17" pos:end="845:66"><expr pos:start="845:17" pos:end="845:65"><call pos:start="845:17" pos:end="845:65"><name pos:start="845:17" pos:end="845:33">target_siginitset</name><argument_list pos:start="845:34" pos:end="845:65">(<argument pos:start="845:35" pos:end="845:46"><expr pos:start="845:35" pos:end="845:46"><operator pos:start="845:35" pos:end="845:35">&amp;</operator><name pos:start="845:36" pos:end="845:46"><name pos:start="845:36" pos:end="845:38">act</name><operator pos:start="845:39" pos:end="845:39">.</operator><name pos:start="845:40" pos:end="845:46">sa_mask</name></name></expr></argument>, <argument pos:start="845:49" pos:end="845:64"><expr pos:start="845:49" pos:end="845:64"><name pos:start="845:49" pos:end="845:64"><name pos:start="845:49" pos:end="845:55">old_act</name><operator pos:start="845:56" pos:end="845:57">-&gt;</operator><name pos:start="845:58" pos:end="845:64">sa_mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="847:17" pos:end="847:49"><expr pos:start="847:17" pos:end="847:48"><name pos:start="847:17" pos:end="847:28"><name pos:start="847:17" pos:end="847:19">act</name><operator pos:start="847:20" pos:end="847:20">.</operator><name pos:start="847:21" pos:end="847:28">sa_flags</name></name> <operator pos:start="847:30" pos:end="847:30">=</operator> <name pos:start="847:32" pos:end="847:48"><name pos:start="847:32" pos:end="847:38">old_act</name><operator pos:start="847:39" pos:end="847:40">-&gt;</operator><name pos:start="847:41" pos:end="847:48">sa_flags</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="849:17" pos:end="849:55"><expr pos:start="849:17" pos:end="849:54"><name pos:start="849:17" pos:end="849:31"><name pos:start="849:17" pos:end="849:19">act</name><operator pos:start="849:20" pos:end="849:20">.</operator><name pos:start="849:21" pos:end="849:31">sa_restorer</name></name> <operator pos:start="849:33" pos:end="849:33">=</operator> <name pos:start="849:35" pos:end="849:54"><name pos:start="849:35" pos:end="849:41">old_act</name><operator pos:start="849:42" pos:end="849:43">-&gt;</operator><name pos:start="849:44" pos:end="849:54">sa_restorer</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="851:17" pos:end="851:53"><expr pos:start="851:17" pos:end="851:52"><call pos:start="851:17" pos:end="851:52"><name pos:start="851:17" pos:end="851:34">unlock_user_struct</name><argument_list pos:start="851:35" pos:end="851:52">(<argument pos:start="851:36" pos:end="851:42"><expr pos:start="851:36" pos:end="851:42"><name pos:start="851:36" pos:end="851:42">old_act</name></expr></argument>, <argument pos:start="851:45" pos:end="851:48"><expr pos:start="851:45" pos:end="851:48"><name pos:start="851:45" pos:end="851:48">arg2</name></expr></argument>, <argument pos:start="851:51" pos:end="851:51"><expr pos:start="851:51" pos:end="851:51"><literal type="number" pos:start="851:51" pos:end="851:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="853:17" pos:end="853:28"><expr pos:start="853:17" pos:end="853:27"><name pos:start="853:17" pos:end="853:20">pact</name> <operator pos:start="853:22" pos:end="853:22">=</operator> <operator pos:start="853:24" pos:end="853:24">&amp;</operator><name pos:start="853:25" pos:end="853:27">act</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="855:15" pos:end="859:13">else <block pos:start="855:20" pos:end="859:13">{<block_content pos:start="857:17" pos:end="857:28">

                <expr_stmt pos:start="857:17" pos:end="857:28"><expr pos:start="857:17" pos:end="857:27"><name pos:start="857:17" pos:end="857:20">pact</name> <operator pos:start="857:22" pos:end="857:22">=</operator> <name pos:start="857:24" pos:end="857:27">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="861:13" pos:end="861:61"><expr pos:start="861:13" pos:end="861:60"><name pos:start="861:13" pos:end="861:15">ret</name> <operator pos:start="861:17" pos:end="861:17">=</operator> <call pos:start="861:19" pos:end="861:60"><name pos:start="861:19" pos:end="861:27">get_errno</name><argument_list pos:start="861:28" pos:end="861:60">(<argument pos:start="861:29" pos:end="861:59"><expr pos:start="861:29" pos:end="861:59"><call pos:start="861:29" pos:end="861:59"><name pos:start="861:29" pos:end="861:40">do_sigaction</name><argument_list pos:start="861:41" pos:end="861:59">(<argument pos:start="861:42" pos:end="861:45"><expr pos:start="861:42" pos:end="861:45"><name pos:start="861:42" pos:end="861:45">arg1</name></expr></argument>, <argument pos:start="861:48" pos:end="861:51"><expr pos:start="861:48" pos:end="861:51"><name pos:start="861:48" pos:end="861:51">pact</name></expr></argument>, <argument pos:start="861:54" pos:end="861:58"><expr pos:start="861:54" pos:end="861:58"><operator pos:start="861:54" pos:end="861:54">&amp;</operator><name pos:start="861:55" pos:end="861:58">oact</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="863:13" pos:end="880:0"><if pos:start="863:13" pos:end="880:0">if <condition pos:start="863:16" pos:end="863:39">(<expr pos:start="863:17" pos:end="863:38"><operator pos:start="863:17" pos:end="863:17">!</operator><call pos:start="863:18" pos:end="863:30"><name pos:start="863:18" pos:end="863:25">is_error</name><argument_list pos:start="863:26" pos:end="863:30">(<argument pos:start="863:27" pos:end="863:29"><expr pos:start="863:27" pos:end="863:29"><name pos:start="863:27" pos:end="863:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="863:32" pos:end="863:33">&amp;&amp;</operator> <name pos:start="863:35" pos:end="863:38">arg3</name></expr>)</condition> <block pos:start="863:41" pos:end="880:0">{<block_content pos:start="865:17" pos:end="875:53">

                <expr_stmt pos:start="865:17" pos:end="865:51"><expr pos:start="865:17" pos:end="865:50"><call pos:start="865:17" pos:end="865:50"><name pos:start="865:17" pos:end="865:32">lock_user_struct</name><argument_list pos:start="865:33" pos:end="865:50">(<argument pos:start="865:34" pos:end="865:40"><expr pos:start="865:34" pos:end="865:40"><name pos:start="865:34" pos:end="865:40">old_act</name></expr></argument>, <argument pos:start="865:43" pos:end="865:46"><expr pos:start="865:43" pos:end="865:46"><name pos:start="865:43" pos:end="865:46">arg3</name></expr></argument>, <argument pos:start="865:49" pos:end="865:49"><expr pos:start="865:49" pos:end="865:49"><literal type="number" pos:start="865:49" pos:end="865:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="867:17" pos:end="867:56"><expr pos:start="867:17" pos:end="867:55"><name pos:start="867:17" pos:end="867:36"><name pos:start="867:17" pos:end="867:23">old_act</name><operator pos:start="867:24" pos:end="867:25">-&gt;</operator><name pos:start="867:26" pos:end="867:36">_sa_handler</name></name> <operator pos:start="867:38" pos:end="867:38">=</operator> <name pos:start="867:40" pos:end="867:55"><name pos:start="867:40" pos:end="867:43">oact</name><operator pos:start="867:44" pos:end="867:44">.</operator><name pos:start="867:45" pos:end="867:55">_sa_handler</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="869:17" pos:end="869:55"><expr pos:start="869:17" pos:end="869:54"><name pos:start="869:17" pos:end="869:32"><name pos:start="869:17" pos:end="869:23">old_act</name><operator pos:start="869:24" pos:end="869:25">-&gt;</operator><name pos:start="869:26" pos:end="869:32">sa_mask</name></name> <operator pos:start="869:34" pos:end="869:34">=</operator> <name pos:start="869:36" pos:end="869:54"><name pos:start="869:36" pos:end="869:39">oact</name><operator pos:start="869:40" pos:end="869:40">.</operator><name pos:start="869:41" pos:end="869:47">sa_mask</name><operator pos:start="869:48" pos:end="869:48">.</operator><name pos:start="869:49" pos:end="869:51">sig</name><index pos:start="869:52" pos:end="869:54">[<expr pos:start="869:53" pos:end="869:53"><literal type="number" pos:start="869:53" pos:end="869:53">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="871:17" pos:end="871:50"><expr pos:start="871:17" pos:end="871:49"><name pos:start="871:17" pos:end="871:33"><name pos:start="871:17" pos:end="871:23">old_act</name><operator pos:start="871:24" pos:end="871:25">-&gt;</operator><name pos:start="871:26" pos:end="871:33">sa_flags</name></name> <operator pos:start="871:35" pos:end="871:35">=</operator> <name pos:start="871:37" pos:end="871:49"><name pos:start="871:37" pos:end="871:40">oact</name><operator pos:start="871:41" pos:end="871:41">.</operator><name pos:start="871:42" pos:end="871:49">sa_flags</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="873:17" pos:end="873:56"><expr pos:start="873:17" pos:end="873:55"><name pos:start="873:17" pos:end="873:36"><name pos:start="873:17" pos:end="873:23">old_act</name><operator pos:start="873:24" pos:end="873:25">-&gt;</operator><name pos:start="873:26" pos:end="873:36">sa_restorer</name></name> <operator pos:start="873:38" pos:end="873:38">=</operator> <name pos:start="873:40" pos:end="873:55"><name pos:start="873:40" pos:end="873:43">oact</name><operator pos:start="873:44" pos:end="873:44">.</operator><name pos:start="873:45" pos:end="873:55">sa_restorer</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="875:17" pos:end="875:53"><expr pos:start="875:17" pos:end="875:52"><call pos:start="875:17" pos:end="875:52"><name pos:start="875:17" pos:end="875:34">unlock_user_struct</name><argument_list pos:start="875:35" pos:end="875:52">(<argument pos:start="875:36" pos:end="875:42"><expr pos:start="875:36" pos:end="875:42"><name pos:start="875:36" pos:end="875:42">old_act</name></expr></argument>, <argument pos:start="875:45" pos:end="875:48"><expr pos:start="875:45" pos:end="875:48"><name pos:start="875:45" pos:end="875:48">arg3</name></expr></argument>, <argument pos:start="875:51" pos:end="875:51"><expr pos:start="875:51" pos:end="875:51"><literal type="number" pos:start="875:51" pos:end="875:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:else pos:start="879:1" pos:end="879:5">#<cpp:directive pos:start="879:2" pos:end="879:5">else</cpp:directive></cpp:else>

	    <decl_stmt pos:start="881:13" pos:end="881:63"><decl pos:start="881:13" pos:end="881:39"><type pos:start="881:13" pos:end="881:35"><name pos:start="881:13" pos:end="881:35"><name pos:start="881:13" pos:end="881:18">struct</name> <name pos:start="881:20" pos:end="881:35">target_sigaction</name></name></type> <name pos:start="881:37" pos:end="881:39">act</name></decl>, <decl pos:start="881:42" pos:end="881:45"><type ref="prev" pos:start="881:13" pos:end="881:35"/><name pos:start="881:42" pos:end="881:45">oact</name></decl>, <decl pos:start="881:48" pos:end="881:52"><type ref="prev" pos:start="881:13" pos:end="881:35"><modifier pos:start="881:48" pos:end="881:48">*</modifier></type><name pos:start="881:49" pos:end="881:52">pact</name></decl>, <decl pos:start="881:55" pos:end="881:62"><type ref="prev" pos:start="881:13" pos:end="881:35"><modifier pos:start="881:55" pos:end="881:55">*</modifier></type><name pos:start="881:56" pos:end="881:62">old_act</name></decl>;</decl_stmt>



	    <if_stmt pos:start="885:13" pos:end="903:13"><if pos:start="885:13" pos:end="899:13">if <condition pos:start="885:16" pos:end="885:21">(<expr pos:start="885:17" pos:end="885:20"><name pos:start="885:17" pos:end="885:20">arg2</name></expr>)</condition> <block pos:start="885:23" pos:end="899:13">{<block_content pos:start="887:17" pos:end="897:28">

		<expr_stmt pos:start="887:17" pos:end="887:51"><expr pos:start="887:17" pos:end="887:50"><call pos:start="887:17" pos:end="887:50"><name pos:start="887:17" pos:end="887:32">lock_user_struct</name><argument_list pos:start="887:33" pos:end="887:50">(<argument pos:start="887:34" pos:end="887:40"><expr pos:start="887:34" pos:end="887:40"><name pos:start="887:34" pos:end="887:40">old_act</name></expr></argument>, <argument pos:start="887:43" pos:end="887:46"><expr pos:start="887:43" pos:end="887:46"><name pos:start="887:43" pos:end="887:46">arg2</name></expr></argument>, <argument pos:start="887:49" pos:end="887:49"><expr pos:start="887:49" pos:end="887:49"><literal type="number" pos:start="887:49" pos:end="887:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="889:17" pos:end="889:55"><expr pos:start="889:17" pos:end="889:54"><name pos:start="889:17" pos:end="889:31"><name pos:start="889:17" pos:end="889:19">act</name><operator pos:start="889:20" pos:end="889:20">.</operator><name pos:start="889:21" pos:end="889:31">_sa_handler</name></name> <operator pos:start="889:33" pos:end="889:33">=</operator> <name pos:start="889:35" pos:end="889:54"><name pos:start="889:35" pos:end="889:41">old_act</name><operator pos:start="889:42" pos:end="889:43">-&gt;</operator><name pos:start="889:44" pos:end="889:54">_sa_handler</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="891:17" pos:end="891:73"><expr pos:start="891:17" pos:end="891:72"><call pos:start="891:17" pos:end="891:72"><name pos:start="891:17" pos:end="891:33">target_siginitset</name><argument_list pos:start="891:34" pos:end="891:72">(<argument pos:start="891:35" pos:end="891:46"><expr pos:start="891:35" pos:end="891:46"><operator pos:start="891:35" pos:end="891:35">&amp;</operator><name pos:start="891:36" pos:end="891:46"><name pos:start="891:36" pos:end="891:38">act</name><operator pos:start="891:39" pos:end="891:39">.</operator><name pos:start="891:40" pos:end="891:46">sa_mask</name></name></expr></argument>, <argument pos:start="891:49" pos:end="891:71"><expr pos:start="891:49" pos:end="891:71"><name pos:start="891:49" pos:end="891:71"><name pos:start="891:49" pos:end="891:55">old_act</name><operator pos:start="891:56" pos:end="891:57">-&gt;</operator><name pos:start="891:58" pos:end="891:64">sa_mask</name><operator pos:start="891:65" pos:end="891:65">.</operator><name pos:start="891:66" pos:end="891:68">sig</name><index pos:start="891:69" pos:end="891:71">[<expr pos:start="891:70" pos:end="891:70"><literal type="number" pos:start="891:70" pos:end="891:70">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="893:17" pos:end="893:49"><expr pos:start="893:17" pos:end="893:48"><name pos:start="893:17" pos:end="893:28"><name pos:start="893:17" pos:end="893:19">act</name><operator pos:start="893:20" pos:end="893:20">.</operator><name pos:start="893:21" pos:end="893:28">sa_flags</name></name> <operator pos:start="893:30" pos:end="893:30">=</operator> <name pos:start="893:32" pos:end="893:48"><name pos:start="893:32" pos:end="893:38">old_act</name><operator pos:start="893:39" pos:end="893:40">-&gt;</operator><name pos:start="893:41" pos:end="893:48">sa_flags</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="895:17" pos:end="895:53"><expr pos:start="895:17" pos:end="895:52"><call pos:start="895:17" pos:end="895:52"><name pos:start="895:17" pos:end="895:34">unlock_user_struct</name><argument_list pos:start="895:35" pos:end="895:52">(<argument pos:start="895:36" pos:end="895:42"><expr pos:start="895:36" pos:end="895:42"><name pos:start="895:36" pos:end="895:42">old_act</name></expr></argument>, <argument pos:start="895:45" pos:end="895:48"><expr pos:start="895:45" pos:end="895:48"><name pos:start="895:45" pos:end="895:48">arg2</name></expr></argument>, <argument pos:start="895:51" pos:end="895:51"><expr pos:start="895:51" pos:end="895:51"><literal type="number" pos:start="895:51" pos:end="895:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="897:17" pos:end="897:28"><expr pos:start="897:17" pos:end="897:27"><name pos:start="897:17" pos:end="897:20">pact</name> <operator pos:start="897:22" pos:end="897:22">=</operator> <operator pos:start="897:24" pos:end="897:24">&amp;</operator><name pos:start="897:25" pos:end="897:27">act</name></expr>;</expr_stmt>

	    </block_content>}</block></if> <else pos:start="899:15" pos:end="903:13">else <block pos:start="899:20" pos:end="903:13">{<block_content pos:start="901:17" pos:end="901:28">

		<expr_stmt pos:start="901:17" pos:end="901:28"><expr pos:start="901:17" pos:end="901:27"><name pos:start="901:17" pos:end="901:20">pact</name> <operator pos:start="901:22" pos:end="901:22">=</operator> <name pos:start="901:24" pos:end="901:27">NULL</name></expr>;</expr_stmt>

	    </block_content>}</block></else></if_stmt>



	    <expr_stmt pos:start="907:13" pos:end="907:61"><expr pos:start="907:13" pos:end="907:60"><name pos:start="907:13" pos:end="907:15">ret</name> <operator pos:start="907:17" pos:end="907:17">=</operator> <call pos:start="907:19" pos:end="907:60"><name pos:start="907:19" pos:end="907:27">get_errno</name><argument_list pos:start="907:28" pos:end="907:60">(<argument pos:start="907:29" pos:end="907:59"><expr pos:start="907:29" pos:end="907:59"><call pos:start="907:29" pos:end="907:59"><name pos:start="907:29" pos:end="907:40">do_sigaction</name><argument_list pos:start="907:41" pos:end="907:59">(<argument pos:start="907:42" pos:end="907:45"><expr pos:start="907:42" pos:end="907:45"><name pos:start="907:42" pos:end="907:45">arg1</name></expr></argument>, <argument pos:start="907:48" pos:end="907:51"><expr pos:start="907:48" pos:end="907:51"><name pos:start="907:48" pos:end="907:51">pact</name></expr></argument>, <argument pos:start="907:54" pos:end="907:58"><expr pos:start="907:54" pos:end="907:58"><operator pos:start="907:54" pos:end="907:54">&amp;</operator><name pos:start="907:55" pos:end="907:58">oact</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	    <if_stmt pos:start="911:13" pos:end="932:0"><if pos:start="911:13" pos:end="932:0">if <condition pos:start="911:16" pos:end="911:39">(<expr pos:start="911:17" pos:end="911:38"><operator pos:start="911:17" pos:end="911:17">!</operator><call pos:start="911:18" pos:end="911:30"><name pos:start="911:18" pos:end="911:25">is_error</name><argument_list pos:start="911:26" pos:end="911:30">(<argument pos:start="911:27" pos:end="911:29"><expr pos:start="911:27" pos:end="911:29"><name pos:start="911:27" pos:end="911:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="911:32" pos:end="911:33">&amp;&amp;</operator> <name pos:start="911:35" pos:end="911:38">arg3</name></expr>)</condition> <block pos:start="911:41" pos:end="932:0">{<block_content pos:start="913:17" pos:end="927:53">

		<expr_stmt pos:start="913:17" pos:end="913:51"><expr pos:start="913:17" pos:end="913:50"><call pos:start="913:17" pos:end="913:50"><name pos:start="913:17" pos:end="913:32">lock_user_struct</name><argument_list pos:start="913:33" pos:end="913:50">(<argument pos:start="913:34" pos:end="913:40"><expr pos:start="913:34" pos:end="913:40"><name pos:start="913:34" pos:end="913:40">old_act</name></expr></argument>, <argument pos:start="913:43" pos:end="913:46"><expr pos:start="913:43" pos:end="913:46"><name pos:start="913:43" pos:end="913:46">arg3</name></expr></argument>, <argument pos:start="913:49" pos:end="913:49"><expr pos:start="913:49" pos:end="913:49"><literal type="number" pos:start="913:49" pos:end="913:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="915:17" pos:end="915:56"><expr pos:start="915:17" pos:end="915:55"><name pos:start="915:17" pos:end="915:36"><name pos:start="915:17" pos:end="915:23">old_act</name><operator pos:start="915:24" pos:end="915:25">-&gt;</operator><name pos:start="915:26" pos:end="915:36">_sa_handler</name></name> <operator pos:start="915:38" pos:end="915:38">=</operator> <name pos:start="915:40" pos:end="915:55"><name pos:start="915:40" pos:end="915:43">oact</name><operator pos:start="915:44" pos:end="915:44">.</operator><name pos:start="915:45" pos:end="915:55">_sa_handler</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="917:17" pos:end="917:50"><expr pos:start="917:17" pos:end="917:49"><name pos:start="917:17" pos:end="917:33"><name pos:start="917:17" pos:end="917:23">old_act</name><operator pos:start="917:24" pos:end="917:25">-&gt;</operator><name pos:start="917:26" pos:end="917:33">sa_flags</name></name> <operator pos:start="917:35" pos:end="917:35">=</operator> <name pos:start="917:37" pos:end="917:49"><name pos:start="917:37" pos:end="917:40">oact</name><operator pos:start="917:41" pos:end="917:41">.</operator><name pos:start="917:42" pos:end="917:49">sa_flags</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="919:17" pos:end="919:62"><expr pos:start="919:17" pos:end="919:61"><name pos:start="919:17" pos:end="919:39"><name pos:start="919:17" pos:end="919:23">old_act</name><operator pos:start="919:24" pos:end="919:25">-&gt;</operator><name pos:start="919:26" pos:end="919:32">sa_mask</name><operator pos:start="919:33" pos:end="919:33">.</operator><name pos:start="919:34" pos:end="919:36">sig</name><index pos:start="919:37" pos:end="919:39">[<expr pos:start="919:38" pos:end="919:38"><literal type="number" pos:start="919:38" pos:end="919:38">0</literal></expr>]</index></name> <operator pos:start="919:41" pos:end="919:41">=</operator> <name pos:start="919:43" pos:end="919:61"><name pos:start="919:43" pos:end="919:46">oact</name><operator pos:start="919:47" pos:end="919:47">.</operator><name pos:start="919:48" pos:end="919:54">sa_mask</name><operator pos:start="919:55" pos:end="919:55">.</operator><name pos:start="919:56" pos:end="919:58">sig</name><index pos:start="919:59" pos:end="919:61">[<expr pos:start="919:60" pos:end="919:60"><literal type="number" pos:start="919:60" pos:end="919:60">0</literal></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt pos:start="921:17" pos:end="921:44"><expr pos:start="921:17" pos:end="921:43"><name pos:start="921:17" pos:end="921:39"><name pos:start="921:17" pos:end="921:23">old_act</name><operator pos:start="921:24" pos:end="921:25">-&gt;</operator><name pos:start="921:26" pos:end="921:32">sa_mask</name><operator pos:start="921:33" pos:end="921:33">.</operator><name pos:start="921:34" pos:end="921:36">sig</name><index pos:start="921:37" pos:end="921:39">[<expr pos:start="921:38" pos:end="921:38"><literal type="number" pos:start="921:38" pos:end="921:38">1</literal></expr>]</index></name> <operator pos:start="921:41" pos:end="921:41">=</operator> <literal type="number" pos:start="921:43" pos:end="921:43">0</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="923:17" pos:end="923:44"><expr pos:start="923:17" pos:end="923:43"><name pos:start="923:17" pos:end="923:39"><name pos:start="923:17" pos:end="923:23">old_act</name><operator pos:start="923:24" pos:end="923:25">-&gt;</operator><name pos:start="923:26" pos:end="923:32">sa_mask</name><operator pos:start="923:33" pos:end="923:33">.</operator><name pos:start="923:34" pos:end="923:36">sig</name><index pos:start="923:37" pos:end="923:39">[<expr pos:start="923:38" pos:end="923:38"><literal type="number" pos:start="923:38" pos:end="923:38">2</literal></expr>]</index></name> <operator pos:start="923:41" pos:end="923:41">=</operator> <literal type="number" pos:start="923:43" pos:end="923:43">0</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="925:17" pos:end="925:44"><expr pos:start="925:17" pos:end="925:43"><name pos:start="925:17" pos:end="925:39"><name pos:start="925:17" pos:end="925:23">old_act</name><operator pos:start="925:24" pos:end="925:25">-&gt;</operator><name pos:start="925:26" pos:end="925:32">sa_mask</name><operator pos:start="925:33" pos:end="925:33">.</operator><name pos:start="925:34" pos:end="925:36">sig</name><index pos:start="925:37" pos:end="925:39">[<expr pos:start="925:38" pos:end="925:38"><literal type="number" pos:start="925:38" pos:end="925:38">3</literal></expr>]</index></name> <operator pos:start="925:41" pos:end="925:41">=</operator> <literal type="number" pos:start="925:43" pos:end="925:43">0</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="927:17" pos:end="927:53"><expr pos:start="927:17" pos:end="927:52"><call pos:start="927:17" pos:end="927:52"><name pos:start="927:17" pos:end="927:34">unlock_user_struct</name><argument_list pos:start="927:35" pos:end="927:52">(<argument pos:start="927:36" pos:end="927:42"><expr pos:start="927:36" pos:end="927:42"><name pos:start="927:36" pos:end="927:42">old_act</name></expr></argument>, <argument pos:start="927:45" pos:end="927:48"><expr pos:start="927:45" pos:end="927:48"><name pos:start="927:45" pos:end="927:48">arg3</name></expr></argument>, <argument pos:start="927:51" pos:end="927:51"><expr pos:start="927:51" pos:end="927:51"><literal type="number" pos:start="927:51" pos:end="927:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="931:1" pos:end="931:6">#<cpp:directive pos:start="931:2" pos:end="931:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block>

        <break pos:start="935:9" pos:end="938:0">break;</break>

<cpp:endif pos:start="937:1" pos:end="937:6">#<cpp:directive pos:start="937:2" pos:end="937:6">endif</cpp:directive></cpp:endif>

    <case pos:start="939:5" pos:end="939:32">case <expr pos:start="939:10" pos:end="939:31"><name pos:start="939:10" pos:end="939:31">TARGET_NR_rt_sigaction</name></expr>:</case>

        <block pos:start="941:9" pos:end="975:9">{<block_content pos:start="943:13" pos:end="973:50">

            <decl_stmt pos:start="943:13" pos:end="943:41"><decl pos:start="943:13" pos:end="943:40"><type pos:start="943:13" pos:end="943:37"><name pos:start="943:13" pos:end="943:35"><name pos:start="943:13" pos:end="943:18">struct</name> <name pos:start="943:20" pos:end="943:35">target_sigaction</name></name> <modifier pos:start="943:37" pos:end="943:37">*</modifier></type><name pos:start="943:38" pos:end="943:40">act</name></decl>;</decl_stmt>

            <decl_stmt pos:start="945:13" pos:end="945:42"><decl pos:start="945:13" pos:end="945:41"><type pos:start="945:13" pos:end="945:37"><name pos:start="945:13" pos:end="945:35"><name pos:start="945:13" pos:end="945:18">struct</name> <name pos:start="945:20" pos:end="945:35">target_sigaction</name></name> <modifier pos:start="945:37" pos:end="945:37">*</modifier></type><name pos:start="945:38" pos:end="945:41">oact</name></decl>;</decl_stmt>



            <if_stmt pos:start="949:13" pos:end="955:27"><if pos:start="949:13" pos:end="951:47">if <condition pos:start="949:16" pos:end="949:21">(<expr pos:start="949:17" pos:end="949:20"><name pos:start="949:17" pos:end="949:20">arg2</name></expr>)</condition><block type="pseudo" pos:start="951:17" pos:end="951:47"><block_content pos:start="951:17" pos:end="951:47">

                <expr_stmt pos:start="951:17" pos:end="951:47"><expr pos:start="951:17" pos:end="951:46"><call pos:start="951:17" pos:end="951:46"><name pos:start="951:17" pos:end="951:32">lock_user_struct</name><argument_list pos:start="951:33" pos:end="951:46">(<argument pos:start="951:34" pos:end="951:36"><expr pos:start="951:34" pos:end="951:36"><name pos:start="951:34" pos:end="951:36">act</name></expr></argument>, <argument pos:start="951:39" pos:end="951:42"><expr pos:start="951:39" pos:end="951:42"><name pos:start="951:39" pos:end="951:42">arg2</name></expr></argument>, <argument pos:start="951:45" pos:end="951:45"><expr pos:start="951:45" pos:end="951:45"><literal type="number" pos:start="951:45" pos:end="951:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="953:13" pos:end="955:27">else<block type="pseudo" pos:start="955:17" pos:end="955:27"><block_content pos:start="955:17" pos:end="955:27">

                <expr_stmt pos:start="955:17" pos:end="955:27"><expr pos:start="955:17" pos:end="955:26"><name pos:start="955:17" pos:end="955:19">act</name> <operator pos:start="955:21" pos:end="955:21">=</operator> <name pos:start="955:23" pos:end="955:26">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="957:13" pos:end="963:28"><if pos:start="957:13" pos:end="959:48">if <condition pos:start="957:16" pos:end="957:21">(<expr pos:start="957:17" pos:end="957:20"><name pos:start="957:17" pos:end="957:20">arg3</name></expr>)</condition><block type="pseudo" pos:start="959:17" pos:end="959:48"><block_content pos:start="959:17" pos:end="959:48">

                <expr_stmt pos:start="959:17" pos:end="959:48"><expr pos:start="959:17" pos:end="959:47"><call pos:start="959:17" pos:end="959:47"><name pos:start="959:17" pos:end="959:32">lock_user_struct</name><argument_list pos:start="959:33" pos:end="959:47">(<argument pos:start="959:34" pos:end="959:37"><expr pos:start="959:34" pos:end="959:37"><name pos:start="959:34" pos:end="959:37">oact</name></expr></argument>, <argument pos:start="959:40" pos:end="959:43"><expr pos:start="959:40" pos:end="959:43"><name pos:start="959:40" pos:end="959:43">arg3</name></expr></argument>, <argument pos:start="959:46" pos:end="959:46"><expr pos:start="959:46" pos:end="959:46"><literal type="number" pos:start="959:46" pos:end="959:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="961:13" pos:end="963:28">else<block type="pseudo" pos:start="963:17" pos:end="963:28"><block_content pos:start="963:17" pos:end="963:28">

                <expr_stmt pos:start="963:17" pos:end="963:28"><expr pos:start="963:17" pos:end="963:27"><name pos:start="963:17" pos:end="963:20">oact</name> <operator pos:start="963:22" pos:end="963:22">=</operator> <name pos:start="963:24" pos:end="963:27">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="965:13" pos:end="965:59"><expr pos:start="965:13" pos:end="965:58"><name pos:start="965:13" pos:end="965:15">ret</name> <operator pos:start="965:17" pos:end="965:17">=</operator> <call pos:start="965:19" pos:end="965:58"><name pos:start="965:19" pos:end="965:27">get_errno</name><argument_list pos:start="965:28" pos:end="965:58">(<argument pos:start="965:29" pos:end="965:57"><expr pos:start="965:29" pos:end="965:57"><call pos:start="965:29" pos:end="965:57"><name pos:start="965:29" pos:end="965:40">do_sigaction</name><argument_list pos:start="965:41" pos:end="965:57">(<argument pos:start="965:42" pos:end="965:45"><expr pos:start="965:42" pos:end="965:45"><name pos:start="965:42" pos:end="965:45">arg1</name></expr></argument>, <argument pos:start="965:48" pos:end="965:50"><expr pos:start="965:48" pos:end="965:50"><name pos:start="965:48" pos:end="965:50">act</name></expr></argument>, <argument pos:start="965:53" pos:end="965:56"><expr pos:start="965:53" pos:end="965:56"><name pos:start="965:53" pos:end="965:56">oact</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="967:13" pos:end="969:49"><if pos:start="967:13" pos:end="969:49">if <condition pos:start="967:16" pos:end="967:21">(<expr pos:start="967:17" pos:end="967:20"><name pos:start="967:17" pos:end="967:20">arg2</name></expr>)</condition><block type="pseudo" pos:start="969:17" pos:end="969:49"><block_content pos:start="969:17" pos:end="969:49">

                <expr_stmt pos:start="969:17" pos:end="969:49"><expr pos:start="969:17" pos:end="969:48"><call pos:start="969:17" pos:end="969:48"><name pos:start="969:17" pos:end="969:34">unlock_user_struct</name><argument_list pos:start="969:35" pos:end="969:48">(<argument pos:start="969:36" pos:end="969:38"><expr pos:start="969:36" pos:end="969:38"><name pos:start="969:36" pos:end="969:38">act</name></expr></argument>, <argument pos:start="969:41" pos:end="969:44"><expr pos:start="969:41" pos:end="969:44"><name pos:start="969:41" pos:end="969:44">arg2</name></expr></argument>, <argument pos:start="969:47" pos:end="969:47"><expr pos:start="969:47" pos:end="969:47"><literal type="number" pos:start="969:47" pos:end="969:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="971:13" pos:end="973:50"><if pos:start="971:13" pos:end="973:50">if <condition pos:start="971:16" pos:end="971:21">(<expr pos:start="971:17" pos:end="971:20"><name pos:start="971:17" pos:end="971:20">arg3</name></expr>)</condition><block type="pseudo" pos:start="973:17" pos:end="973:50"><block_content pos:start="973:17" pos:end="973:50">

                <expr_stmt pos:start="973:17" pos:end="973:50"><expr pos:start="973:17" pos:end="973:49"><call pos:start="973:17" pos:end="973:49"><name pos:start="973:17" pos:end="973:34">unlock_user_struct</name><argument_list pos:start="973:35" pos:end="973:49">(<argument pos:start="973:36" pos:end="973:39"><expr pos:start="973:36" pos:end="973:39"><name pos:start="973:36" pos:end="973:39">oact</name></expr></argument>, <argument pos:start="973:42" pos:end="973:45"><expr pos:start="973:42" pos:end="973:45"><name pos:start="973:42" pos:end="973:45">arg3</name></expr></argument>, <argument pos:start="973:48" pos:end="973:48"><expr pos:start="973:48" pos:end="973:48"><literal type="number" pos:start="973:48" pos:end="973:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="977:9" pos:end="980:0">break;</break>

<cpp:ifdef pos:start="979:1" pos:end="979:25">#<cpp:directive pos:start="979:2" pos:end="979:6">ifdef</cpp:directive> <name pos:start="979:8" pos:end="979:25">TARGET_NR_sgetmask</name></cpp:ifdef> <comment type="block" pos:start="979:27" pos:end="979:44">/* not on alpha */</comment>

    <case pos:start="981:5" pos:end="981:28">case <expr pos:start="981:10" pos:end="981:27"><name pos:start="981:10" pos:end="981:27">TARGET_NR_sgetmask</name></expr>:</case>

        <block pos:start="983:9" pos:end="995:9">{<block_content pos:start="985:13" pos:end="993:29">

            <decl_stmt pos:start="985:13" pos:end="985:29"><decl pos:start="985:13" pos:end="985:28"><type pos:start="985:13" pos:end="985:20"><name pos:start="985:13" pos:end="985:20">sigset_t</name></type> <name pos:start="985:22" pos:end="985:28">cur_set</name></decl>;</decl_stmt>

            <decl_stmt pos:start="987:13" pos:end="987:36"><decl pos:start="987:13" pos:end="987:35"><type pos:start="987:13" pos:end="987:24"><name pos:start="987:13" pos:end="987:24">target_ulong</name></type> <name pos:start="987:26" pos:end="987:35">target_set</name></decl>;</decl_stmt>

            <expr_stmt pos:start="989:13" pos:end="989:43"><expr pos:start="989:13" pos:end="989:42"><call pos:start="989:13" pos:end="989:42"><name pos:start="989:13" pos:end="989:23">sigprocmask</name><argument_list pos:start="989:24" pos:end="989:42">(<argument pos:start="989:25" pos:end="989:25"><expr pos:start="989:25" pos:end="989:25"><literal type="number" pos:start="989:25" pos:end="989:25">0</literal></expr></argument>, <argument pos:start="989:28" pos:end="989:31"><expr pos:start="989:28" pos:end="989:31"><name pos:start="989:28" pos:end="989:31">NULL</name></expr></argument>, <argument pos:start="989:34" pos:end="989:41"><expr pos:start="989:34" pos:end="989:41"><operator pos:start="989:34" pos:end="989:34">&amp;</operator><name pos:start="989:35" pos:end="989:41">cur_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="991:13" pos:end="991:61"><expr pos:start="991:13" pos:end="991:60"><call pos:start="991:13" pos:end="991:60"><name pos:start="991:13" pos:end="991:37">host_to_target_old_sigset</name><argument_list pos:start="991:38" pos:end="991:60">(<argument pos:start="991:39" pos:end="991:49"><expr pos:start="991:39" pos:end="991:49"><operator pos:start="991:39" pos:end="991:39">&amp;</operator><name pos:start="991:40" pos:end="991:49">target_set</name></expr></argument>, <argument pos:start="991:52" pos:end="991:59"><expr pos:start="991:52" pos:end="991:59"><operator pos:start="991:52" pos:end="991:52">&amp;</operator><name pos:start="991:53" pos:end="991:59">cur_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="993:13" pos:end="993:29"><expr pos:start="993:13" pos:end="993:28"><name pos:start="993:13" pos:end="993:15">ret</name> <operator pos:start="993:17" pos:end="993:17">=</operator> <name pos:start="993:19" pos:end="993:28">target_set</name></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="997:9" pos:end="1002:0">break;</break>

<cpp:endif pos:start="999:1" pos:end="999:6">#<cpp:directive pos:start="999:2" pos:end="999:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1001:1" pos:end="1001:25">#<cpp:directive pos:start="1001:2" pos:end="1001:6">ifdef</cpp:directive> <name pos:start="1001:8" pos:end="1001:25">TARGET_NR_ssetmask</name></cpp:ifdef> <comment type="block" pos:start="1001:27" pos:end="1001:44">/* not on alpha */</comment>

    <case pos:start="1003:5" pos:end="1003:28">case <expr pos:start="1003:10" pos:end="1003:27"><name pos:start="1003:10" pos:end="1003:27">TARGET_NR_ssetmask</name></expr>:</case>

        <block pos:start="1005:9" pos:end="1023:9">{<block_content pos:start="1007:13" pos:end="1021:29">

            <decl_stmt pos:start="1007:13" pos:end="1007:40"><decl pos:start="1007:13" pos:end="1007:24"><type pos:start="1007:13" pos:end="1007:20"><name pos:start="1007:13" pos:end="1007:20">sigset_t</name></type> <name pos:start="1007:22" pos:end="1007:24">set</name></decl>, <decl pos:start="1007:27" pos:end="1007:30"><type ref="prev" pos:start="1007:13" pos:end="1007:20"/><name pos:start="1007:27" pos:end="1007:30">oset</name></decl>, <decl pos:start="1007:33" pos:end="1007:39"><type ref="prev" pos:start="1007:13" pos:end="1007:20"/><name pos:start="1007:33" pos:end="1007:39">cur_set</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1009:13" pos:end="1009:43"><decl pos:start="1009:13" pos:end="1009:42"><type pos:start="1009:13" pos:end="1009:24"><name pos:start="1009:13" pos:end="1009:24">target_ulong</name></type> <name pos:start="1009:26" pos:end="1009:35">target_set</name> <init pos:start="1009:37" pos:end="1009:42">= <expr pos:start="1009:39" pos:end="1009:42"><name pos:start="1009:39" pos:end="1009:42">arg1</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="1011:13" pos:end="1011:43"><expr pos:start="1011:13" pos:end="1011:42"><call pos:start="1011:13" pos:end="1011:42"><name pos:start="1011:13" pos:end="1011:23">sigprocmask</name><argument_list pos:start="1011:24" pos:end="1011:42">(<argument pos:start="1011:25" pos:end="1011:25"><expr pos:start="1011:25" pos:end="1011:25"><literal type="number" pos:start="1011:25" pos:end="1011:25">0</literal></expr></argument>, <argument pos:start="1011:28" pos:end="1011:31"><expr pos:start="1011:28" pos:end="1011:31"><name pos:start="1011:28" pos:end="1011:31">NULL</name></expr></argument>, <argument pos:start="1011:34" pos:end="1011:41"><expr pos:start="1011:34" pos:end="1011:41"><operator pos:start="1011:34" pos:end="1011:34">&amp;</operator><name pos:start="1011:35" pos:end="1011:41">cur_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1013:13" pos:end="1013:57"><expr pos:start="1013:13" pos:end="1013:56"><call pos:start="1013:13" pos:end="1013:56"><name pos:start="1013:13" pos:end="1013:37">target_to_host_old_sigset</name><argument_list pos:start="1013:38" pos:end="1013:56">(<argument pos:start="1013:39" pos:end="1013:42"><expr pos:start="1013:39" pos:end="1013:42"><operator pos:start="1013:39" pos:end="1013:39">&amp;</operator><name pos:start="1013:40" pos:end="1013:42">set</name></expr></argument>, <argument pos:start="1013:45" pos:end="1013:55"><expr pos:start="1013:45" pos:end="1013:55"><operator pos:start="1013:45" pos:end="1013:45">&amp;</operator><name pos:start="1013:46" pos:end="1013:55">target_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1015:13" pos:end="1015:43"><expr pos:start="1015:13" pos:end="1015:42"><call pos:start="1015:13" pos:end="1015:42"><name pos:start="1015:13" pos:end="1015:20">sigorset</name><argument_list pos:start="1015:21" pos:end="1015:42">(<argument pos:start="1015:22" pos:end="1015:25"><expr pos:start="1015:22" pos:end="1015:25"><operator pos:start="1015:22" pos:end="1015:22">&amp;</operator><name pos:start="1015:23" pos:end="1015:25">set</name></expr></argument>, <argument pos:start="1015:28" pos:end="1015:31"><expr pos:start="1015:28" pos:end="1015:31"><operator pos:start="1015:28" pos:end="1015:28">&amp;</operator><name pos:start="1015:29" pos:end="1015:31">set</name></expr></argument>, <argument pos:start="1015:34" pos:end="1015:41"><expr pos:start="1015:34" pos:end="1015:41"><operator pos:start="1015:34" pos:end="1015:34">&amp;</operator><name pos:start="1015:35" pos:end="1015:41">cur_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1017:13" pos:end="1017:50"><expr pos:start="1017:13" pos:end="1017:49"><call pos:start="1017:13" pos:end="1017:49"><name pos:start="1017:13" pos:end="1017:23">sigprocmask</name><argument_list pos:start="1017:24" pos:end="1017:49">(<argument pos:start="1017:25" pos:end="1017:35"><expr pos:start="1017:25" pos:end="1017:35"><name pos:start="1017:25" pos:end="1017:35">SIG_SETMASK</name></expr></argument>, <argument pos:start="1017:38" pos:end="1017:41"><expr pos:start="1017:38" pos:end="1017:41"><operator pos:start="1017:38" pos:end="1017:38">&amp;</operator><name pos:start="1017:39" pos:end="1017:41">set</name></expr></argument>, <argument pos:start="1017:44" pos:end="1017:48"><expr pos:start="1017:44" pos:end="1017:48"><operator pos:start="1017:44" pos:end="1017:44">&amp;</operator><name pos:start="1017:45" pos:end="1017:48">oset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1019:13" pos:end="1019:58"><expr pos:start="1019:13" pos:end="1019:57"><call pos:start="1019:13" pos:end="1019:57"><name pos:start="1019:13" pos:end="1019:37">host_to_target_old_sigset</name><argument_list pos:start="1019:38" pos:end="1019:57">(<argument pos:start="1019:39" pos:end="1019:49"><expr pos:start="1019:39" pos:end="1019:49"><operator pos:start="1019:39" pos:end="1019:39">&amp;</operator><name pos:start="1019:40" pos:end="1019:49">target_set</name></expr></argument>, <argument pos:start="1019:52" pos:end="1019:56"><expr pos:start="1019:52" pos:end="1019:56"><operator pos:start="1019:52" pos:end="1019:52">&amp;</operator><name pos:start="1019:53" pos:end="1019:56">oset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1021:13" pos:end="1021:29"><expr pos:start="1021:13" pos:end="1021:28"><name pos:start="1021:13" pos:end="1021:15">ret</name> <operator pos:start="1021:17" pos:end="1021:17">=</operator> <name pos:start="1021:19" pos:end="1021:28">target_set</name></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1025:9" pos:end="1030:0">break;</break>

<cpp:endif pos:start="1027:1" pos:end="1027:6">#<cpp:directive pos:start="1027:2" pos:end="1027:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1029:1" pos:end="1029:28">#<cpp:directive pos:start="1029:2" pos:end="1029:6">ifdef</cpp:directive> <name pos:start="1029:8" pos:end="1029:28">TARGET_NR_sigprocmask</name></cpp:ifdef>

    <case pos:start="1031:5" pos:end="1031:31">case <expr pos:start="1031:10" pos:end="1031:30"><name pos:start="1031:10" pos:end="1031:30">TARGET_NR_sigprocmask</name></expr>:</case>

        <block pos:start="1033:9" pos:end="1099:9">{<block_content pos:start="1035:13" pos:end="1097:13">

            <decl_stmt pos:start="1035:13" pos:end="1035:27"><decl pos:start="1035:13" pos:end="1035:26"><type pos:start="1035:13" pos:end="1035:15"><name pos:start="1035:13" pos:end="1035:15">int</name></type> <name pos:start="1035:17" pos:end="1035:19">how</name> <init pos:start="1035:21" pos:end="1035:26">= <expr pos:start="1035:23" pos:end="1035:26"><name pos:start="1035:23" pos:end="1035:26">arg1</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1037:13" pos:end="1037:43"><decl pos:start="1037:13" pos:end="1037:24"><type pos:start="1037:13" pos:end="1037:20"><name pos:start="1037:13" pos:end="1037:20">sigset_t</name></type> <name pos:start="1037:22" pos:end="1037:24">set</name></decl>, <decl pos:start="1037:27" pos:end="1037:32"><type ref="prev" pos:start="1037:13" pos:end="1037:20"/><name pos:start="1037:27" pos:end="1037:32">oldset</name></decl>, <decl pos:start="1037:35" pos:end="1037:42"><type ref="prev" pos:start="1037:13" pos:end="1037:20"><modifier pos:start="1037:35" pos:end="1037:35">*</modifier></type><name pos:start="1037:36" pos:end="1037:42">set_ptr</name></decl>;</decl_stmt>

           

            <if_stmt pos:start="1041:13" pos:end="1085:13"><if pos:start="1041:13" pos:end="1079:13">if <condition pos:start="1041:16" pos:end="1041:21">(<expr pos:start="1041:17" pos:end="1041:20"><name pos:start="1041:17" pos:end="1041:20">arg2</name></expr>)</condition> <block pos:start="1041:23" pos:end="1079:13">{<block_content pos:start="1043:17" pos:end="1077:31">

                <switch pos:start="1043:17" pos:end="1069:17">switch<condition pos:start="1043:23" pos:end="1043:27">(<expr pos:start="1043:24" pos:end="1043:26"><name pos:start="1043:24" pos:end="1043:26">how</name></expr>)</condition> <block pos:start="1043:29" pos:end="1069:17">{<block_content pos:start="1045:17" pos:end="1067:30">

                <case pos:start="1045:17" pos:end="1045:38">case <expr pos:start="1045:22" pos:end="1045:37"><name pos:start="1045:22" pos:end="1045:37">TARGET_SIG_BLOCK</name></expr>:</case>

                    <expr_stmt pos:start="1047:21" pos:end="1047:36"><expr pos:start="1047:21" pos:end="1047:35"><name pos:start="1047:21" pos:end="1047:23">how</name> <operator pos:start="1047:25" pos:end="1047:25">=</operator> <name pos:start="1047:27" pos:end="1047:35">SIG_BLOCK</name></expr>;</expr_stmt>

                    <break pos:start="1049:21" pos:end="1049:26">break;</break>

                <case pos:start="1051:17" pos:end="1051:40">case <expr pos:start="1051:22" pos:end="1051:39"><name pos:start="1051:22" pos:end="1051:39">TARGET_SIG_UNBLOCK</name></expr>:</case>

                    <expr_stmt pos:start="1053:21" pos:end="1053:38"><expr pos:start="1053:21" pos:end="1053:37"><name pos:start="1053:21" pos:end="1053:23">how</name> <operator pos:start="1053:25" pos:end="1053:25">=</operator> <name pos:start="1053:27" pos:end="1053:37">SIG_UNBLOCK</name></expr>;</expr_stmt>

                    <break pos:start="1055:21" pos:end="1055:26">break;</break>

                <case pos:start="1057:17" pos:end="1057:40">case <expr pos:start="1057:22" pos:end="1057:39"><name pos:start="1057:22" pos:end="1057:39">TARGET_SIG_SETMASK</name></expr>:</case>

                    <expr_stmt pos:start="1059:21" pos:end="1059:38"><expr pos:start="1059:21" pos:end="1059:37"><name pos:start="1059:21" pos:end="1059:23">how</name> <operator pos:start="1059:25" pos:end="1059:25">=</operator> <name pos:start="1059:27" pos:end="1059:37">SIG_SETMASK</name></expr>;</expr_stmt>

                    <break pos:start="1061:21" pos:end="1061:26">break;</break>

                <default pos:start="1063:17" pos:end="1063:24">default:</default>

                    <expr_stmt pos:start="1065:21" pos:end="1065:34"><expr pos:start="1065:21" pos:end="1065:33"><name pos:start="1065:21" pos:end="1065:23">ret</name> <operator pos:start="1065:25" pos:end="1065:25">=</operator> <operator pos:start="1065:27" pos:end="1065:27">-</operator><name pos:start="1065:28" pos:end="1065:33">EINVAL</name></expr>;</expr_stmt>

                    <goto pos:start="1067:21" pos:end="1067:30">goto <name pos:start="1067:26" pos:end="1067:29">fail</name>;</goto>

                </block_content>}</block></switch>

                <expr_stmt pos:start="1071:17" pos:end="1071:64"><expr pos:start="1071:17" pos:end="1071:63"><name pos:start="1071:17" pos:end="1071:17">p</name> <operator pos:start="1071:19" pos:end="1071:19">=</operator> <call pos:start="1071:21" pos:end="1071:63"><name pos:start="1071:21" pos:end="1071:29">lock_user</name><argument_list pos:start="1071:30" pos:end="1071:63">(<argument pos:start="1071:31" pos:end="1071:34"><expr pos:start="1071:31" pos:end="1071:34"><name pos:start="1071:31" pos:end="1071:34">arg2</name></expr></argument>, <argument pos:start="1071:37" pos:end="1071:59"><expr pos:start="1071:37" pos:end="1071:59"><sizeof pos:start="1071:37" pos:end="1071:59">sizeof<argument_list pos:start="1071:43" pos:end="1071:59">(<argument pos:start="1071:44" pos:end="1071:58"><expr pos:start="1071:44" pos:end="1071:58"><name pos:start="1071:44" pos:end="1071:58">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1071:62" pos:end="1071:62"><expr pos:start="1071:62" pos:end="1071:62"><literal type="number" pos:start="1071:62" pos:end="1071:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1073:17" pos:end="1073:51"><expr pos:start="1073:17" pos:end="1073:50"><call pos:start="1073:17" pos:end="1073:50"><name pos:start="1073:17" pos:end="1073:41">target_to_host_old_sigset</name><argument_list pos:start="1073:42" pos:end="1073:50">(<argument pos:start="1073:43" pos:end="1073:46"><expr pos:start="1073:43" pos:end="1073:46"><operator pos:start="1073:43" pos:end="1073:43">&amp;</operator><name pos:start="1073:44" pos:end="1073:46">set</name></expr></argument>, <argument pos:start="1073:49" pos:end="1073:49"><expr pos:start="1073:49" pos:end="1073:49"><name pos:start="1073:49" pos:end="1073:49">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1075:17" pos:end="1075:40"><expr pos:start="1075:17" pos:end="1075:39"><call pos:start="1075:17" pos:end="1075:39"><name pos:start="1075:17" pos:end="1075:27">unlock_user</name><argument_list pos:start="1075:28" pos:end="1075:39">(<argument pos:start="1075:29" pos:end="1075:29"><expr pos:start="1075:29" pos:end="1075:29"><name pos:start="1075:29" pos:end="1075:29">p</name></expr></argument>, <argument pos:start="1075:32" pos:end="1075:35"><expr pos:start="1075:32" pos:end="1075:35"><name pos:start="1075:32" pos:end="1075:35">arg2</name></expr></argument>, <argument pos:start="1075:38" pos:end="1075:38"><expr pos:start="1075:38" pos:end="1075:38"><literal type="number" pos:start="1075:38" pos:end="1075:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1077:17" pos:end="1077:31"><expr pos:start="1077:17" pos:end="1077:30"><name pos:start="1077:17" pos:end="1077:23">set_ptr</name> <operator pos:start="1077:25" pos:end="1077:25">=</operator> <operator pos:start="1077:27" pos:end="1077:27">&amp;</operator><name pos:start="1077:28" pos:end="1077:30">set</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1079:15" pos:end="1085:13">else <block pos:start="1079:20" pos:end="1085:13">{<block_content pos:start="1081:17" pos:end="1083:31">

                <expr_stmt pos:start="1081:17" pos:end="1081:24"><expr pos:start="1081:17" pos:end="1081:23"><name pos:start="1081:17" pos:end="1081:19">how</name> <operator pos:start="1081:21" pos:end="1081:21">=</operator> <literal type="number" pos:start="1081:23" pos:end="1081:23">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1083:17" pos:end="1083:31"><expr pos:start="1083:17" pos:end="1083:30"><name pos:start="1083:17" pos:end="1083:23">set_ptr</name> <operator pos:start="1083:25" pos:end="1083:25">=</operator> <name pos:start="1083:27" pos:end="1083:30">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1087:13" pos:end="1087:65"><expr pos:start="1087:13" pos:end="1087:64"><name pos:start="1087:13" pos:end="1087:15">ret</name> <operator pos:start="1087:17" pos:end="1087:17">=</operator> <call pos:start="1087:19" pos:end="1087:64"><name pos:start="1087:19" pos:end="1087:27">get_errno</name><argument_list pos:start="1087:28" pos:end="1087:64">(<argument pos:start="1087:29" pos:end="1087:63"><expr pos:start="1087:29" pos:end="1087:63"><call pos:start="1087:29" pos:end="1087:63"><name pos:start="1087:29" pos:end="1087:39">sigprocmask</name><argument_list pos:start="1087:40" pos:end="1087:63">(<argument pos:start="1087:41" pos:end="1087:44"><expr pos:start="1087:41" pos:end="1087:44"><name pos:start="1087:41" pos:end="1087:44">arg1</name></expr></argument>, <argument pos:start="1087:47" pos:end="1087:53"><expr pos:start="1087:47" pos:end="1087:53"><name pos:start="1087:47" pos:end="1087:53">set_ptr</name></expr></argument>, <argument pos:start="1087:56" pos:end="1087:62"><expr pos:start="1087:56" pos:end="1087:62"><operator pos:start="1087:56" pos:end="1087:56">&amp;</operator><name pos:start="1087:57" pos:end="1087:62">oldset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1089:13" pos:end="1097:13"><if pos:start="1089:13" pos:end="1097:13">if <condition pos:start="1089:16" pos:end="1089:39">(<expr pos:start="1089:17" pos:end="1089:38"><operator pos:start="1089:17" pos:end="1089:17">!</operator><call pos:start="1089:18" pos:end="1089:30"><name pos:start="1089:18" pos:end="1089:25">is_error</name><argument_list pos:start="1089:26" pos:end="1089:30">(<argument pos:start="1089:27" pos:end="1089:29"><expr pos:start="1089:27" pos:end="1089:29"><name pos:start="1089:27" pos:end="1089:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="1089:32" pos:end="1089:33">&amp;&amp;</operator> <name pos:start="1089:35" pos:end="1089:38">arg3</name></expr>)</condition> <block pos:start="1089:41" pos:end="1097:13">{<block_content pos:start="1091:17" pos:end="1095:62">

                <expr_stmt pos:start="1091:17" pos:end="1091:64"><expr pos:start="1091:17" pos:end="1091:63"><name pos:start="1091:17" pos:end="1091:17">p</name> <operator pos:start="1091:19" pos:end="1091:19">=</operator> <call pos:start="1091:21" pos:end="1091:63"><name pos:start="1091:21" pos:end="1091:29">lock_user</name><argument_list pos:start="1091:30" pos:end="1091:63">(<argument pos:start="1091:31" pos:end="1091:34"><expr pos:start="1091:31" pos:end="1091:34"><name pos:start="1091:31" pos:end="1091:34">arg3</name></expr></argument>, <argument pos:start="1091:37" pos:end="1091:59"><expr pos:start="1091:37" pos:end="1091:59"><sizeof pos:start="1091:37" pos:end="1091:59">sizeof<argument_list pos:start="1091:43" pos:end="1091:59">(<argument pos:start="1091:44" pos:end="1091:58"><expr pos:start="1091:44" pos:end="1091:58"><name pos:start="1091:44" pos:end="1091:58">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1091:62" pos:end="1091:62"><expr pos:start="1091:62" pos:end="1091:62"><literal type="number" pos:start="1091:62" pos:end="1091:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1093:17" pos:end="1093:54"><expr pos:start="1093:17" pos:end="1093:53"><call pos:start="1093:17" pos:end="1093:53"><name pos:start="1093:17" pos:end="1093:41">host_to_target_old_sigset</name><argument_list pos:start="1093:42" pos:end="1093:53">(<argument pos:start="1093:43" pos:end="1093:43"><expr pos:start="1093:43" pos:end="1093:43"><name pos:start="1093:43" pos:end="1093:43">p</name></expr></argument>, <argument pos:start="1093:46" pos:end="1093:52"><expr pos:start="1093:46" pos:end="1093:52"><operator pos:start="1093:46" pos:end="1093:46">&amp;</operator><name pos:start="1093:47" pos:end="1093:52">oldset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1095:17" pos:end="1095:62"><expr pos:start="1095:17" pos:end="1095:61"><call pos:start="1095:17" pos:end="1095:61"><name pos:start="1095:17" pos:end="1095:27">unlock_user</name><argument_list pos:start="1095:28" pos:end="1095:61">(<argument pos:start="1095:29" pos:end="1095:29"><expr pos:start="1095:29" pos:end="1095:29"><name pos:start="1095:29" pos:end="1095:29">p</name></expr></argument>, <argument pos:start="1095:32" pos:end="1095:35"><expr pos:start="1095:32" pos:end="1095:35"><name pos:start="1095:32" pos:end="1095:35">arg3</name></expr></argument>, <argument pos:start="1095:38" pos:end="1095:60"><expr pos:start="1095:38" pos:end="1095:60"><sizeof pos:start="1095:38" pos:end="1095:60">sizeof<argument_list pos:start="1095:44" pos:end="1095:60">(<argument pos:start="1095:45" pos:end="1095:59"><expr pos:start="1095:45" pos:end="1095:59"><name pos:start="1095:45" pos:end="1095:59">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1101:9" pos:end="1104:0">break;</break>

<cpp:endif pos:start="1103:1" pos:end="1103:6">#<cpp:directive pos:start="1103:2" pos:end="1103:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1105:5" pos:end="1105:34">case <expr pos:start="1105:10" pos:end="1105:33"><name pos:start="1105:10" pos:end="1105:33">TARGET_NR_rt_sigprocmask</name></expr>:</case>

        <block pos:start="1107:9" pos:end="1173:9">{<block_content pos:start="1109:13" pos:end="1171:13">

            <decl_stmt pos:start="1109:13" pos:end="1109:27"><decl pos:start="1109:13" pos:end="1109:26"><type pos:start="1109:13" pos:end="1109:15"><name pos:start="1109:13" pos:end="1109:15">int</name></type> <name pos:start="1109:17" pos:end="1109:19">how</name> <init pos:start="1109:21" pos:end="1109:26">= <expr pos:start="1109:23" pos:end="1109:26"><name pos:start="1109:23" pos:end="1109:26">arg1</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1111:13" pos:end="1111:43"><decl pos:start="1111:13" pos:end="1111:24"><type pos:start="1111:13" pos:end="1111:20"><name pos:start="1111:13" pos:end="1111:20">sigset_t</name></type> <name pos:start="1111:22" pos:end="1111:24">set</name></decl>, <decl pos:start="1111:27" pos:end="1111:32"><type ref="prev" pos:start="1111:13" pos:end="1111:20"/><name pos:start="1111:27" pos:end="1111:32">oldset</name></decl>, <decl pos:start="1111:35" pos:end="1111:42"><type ref="prev" pos:start="1111:13" pos:end="1111:20"><modifier pos:start="1111:35" pos:end="1111:35">*</modifier></type><name pos:start="1111:36" pos:end="1111:42">set_ptr</name></decl>;</decl_stmt>

           

            <if_stmt pos:start="1115:13" pos:end="1159:13"><if pos:start="1115:13" pos:end="1153:13">if <condition pos:start="1115:16" pos:end="1115:21">(<expr pos:start="1115:17" pos:end="1115:20"><name pos:start="1115:17" pos:end="1115:20">arg2</name></expr>)</condition> <block pos:start="1115:23" pos:end="1153:13">{<block_content pos:start="1117:17" pos:end="1151:31">

                <switch pos:start="1117:17" pos:end="1143:17">switch<condition pos:start="1117:23" pos:end="1117:27">(<expr pos:start="1117:24" pos:end="1117:26"><name pos:start="1117:24" pos:end="1117:26">how</name></expr>)</condition> <block pos:start="1117:29" pos:end="1143:17">{<block_content pos:start="1119:17" pos:end="1141:30">

                <case pos:start="1119:17" pos:end="1119:38">case <expr pos:start="1119:22" pos:end="1119:37"><name pos:start="1119:22" pos:end="1119:37">TARGET_SIG_BLOCK</name></expr>:</case>

                    <expr_stmt pos:start="1121:21" pos:end="1121:36"><expr pos:start="1121:21" pos:end="1121:35"><name pos:start="1121:21" pos:end="1121:23">how</name> <operator pos:start="1121:25" pos:end="1121:25">=</operator> <name pos:start="1121:27" pos:end="1121:35">SIG_BLOCK</name></expr>;</expr_stmt>

                    <break pos:start="1123:21" pos:end="1123:26">break;</break>

                <case pos:start="1125:17" pos:end="1125:40">case <expr pos:start="1125:22" pos:end="1125:39"><name pos:start="1125:22" pos:end="1125:39">TARGET_SIG_UNBLOCK</name></expr>:</case>

                    <expr_stmt pos:start="1127:21" pos:end="1127:38"><expr pos:start="1127:21" pos:end="1127:37"><name pos:start="1127:21" pos:end="1127:23">how</name> <operator pos:start="1127:25" pos:end="1127:25">=</operator> <name pos:start="1127:27" pos:end="1127:37">SIG_UNBLOCK</name></expr>;</expr_stmt>

                    <break pos:start="1129:21" pos:end="1129:26">break;</break>

                <case pos:start="1131:17" pos:end="1131:40">case <expr pos:start="1131:22" pos:end="1131:39"><name pos:start="1131:22" pos:end="1131:39">TARGET_SIG_SETMASK</name></expr>:</case>

                    <expr_stmt pos:start="1133:21" pos:end="1133:38"><expr pos:start="1133:21" pos:end="1133:37"><name pos:start="1133:21" pos:end="1133:23">how</name> <operator pos:start="1133:25" pos:end="1133:25">=</operator> <name pos:start="1133:27" pos:end="1133:37">SIG_SETMASK</name></expr>;</expr_stmt>

                    <break pos:start="1135:21" pos:end="1135:26">break;</break>

                <default pos:start="1137:17" pos:end="1137:24">default:</default>

                    <expr_stmt pos:start="1139:21" pos:end="1139:34"><expr pos:start="1139:21" pos:end="1139:33"><name pos:start="1139:21" pos:end="1139:23">ret</name> <operator pos:start="1139:25" pos:end="1139:25">=</operator> <operator pos:start="1139:27" pos:end="1139:27">-</operator><name pos:start="1139:28" pos:end="1139:33">EINVAL</name></expr>;</expr_stmt>

                    <goto pos:start="1141:21" pos:end="1141:30">goto <name pos:start="1141:26" pos:end="1141:29">fail</name>;</goto>

                </block_content>}</block></switch>

                <expr_stmt pos:start="1145:17" pos:end="1145:64"><expr pos:start="1145:17" pos:end="1145:63"><name pos:start="1145:17" pos:end="1145:17">p</name> <operator pos:start="1145:19" pos:end="1145:19">=</operator> <call pos:start="1145:21" pos:end="1145:63"><name pos:start="1145:21" pos:end="1145:29">lock_user</name><argument_list pos:start="1145:30" pos:end="1145:63">(<argument pos:start="1145:31" pos:end="1145:34"><expr pos:start="1145:31" pos:end="1145:34"><name pos:start="1145:31" pos:end="1145:34">arg2</name></expr></argument>, <argument pos:start="1145:37" pos:end="1145:59"><expr pos:start="1145:37" pos:end="1145:59"><sizeof pos:start="1145:37" pos:end="1145:59">sizeof<argument_list pos:start="1145:43" pos:end="1145:59">(<argument pos:start="1145:44" pos:end="1145:58"><expr pos:start="1145:44" pos:end="1145:58"><name pos:start="1145:44" pos:end="1145:58">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1145:62" pos:end="1145:62"><expr pos:start="1145:62" pos:end="1145:62"><literal type="number" pos:start="1145:62" pos:end="1145:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1147:17" pos:end="1147:47"><expr pos:start="1147:17" pos:end="1147:46"><call pos:start="1147:17" pos:end="1147:46"><name pos:start="1147:17" pos:end="1147:37">target_to_host_sigset</name><argument_list pos:start="1147:38" pos:end="1147:46">(<argument pos:start="1147:39" pos:end="1147:42"><expr pos:start="1147:39" pos:end="1147:42"><operator pos:start="1147:39" pos:end="1147:39">&amp;</operator><name pos:start="1147:40" pos:end="1147:42">set</name></expr></argument>, <argument pos:start="1147:45" pos:end="1147:45"><expr pos:start="1147:45" pos:end="1147:45"><name pos:start="1147:45" pos:end="1147:45">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1149:17" pos:end="1149:40"><expr pos:start="1149:17" pos:end="1149:39"><call pos:start="1149:17" pos:end="1149:39"><name pos:start="1149:17" pos:end="1149:27">unlock_user</name><argument_list pos:start="1149:28" pos:end="1149:39">(<argument pos:start="1149:29" pos:end="1149:29"><expr pos:start="1149:29" pos:end="1149:29"><name pos:start="1149:29" pos:end="1149:29">p</name></expr></argument>, <argument pos:start="1149:32" pos:end="1149:35"><expr pos:start="1149:32" pos:end="1149:35"><name pos:start="1149:32" pos:end="1149:35">arg2</name></expr></argument>, <argument pos:start="1149:38" pos:end="1149:38"><expr pos:start="1149:38" pos:end="1149:38"><literal type="number" pos:start="1149:38" pos:end="1149:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1151:17" pos:end="1151:31"><expr pos:start="1151:17" pos:end="1151:30"><name pos:start="1151:17" pos:end="1151:23">set_ptr</name> <operator pos:start="1151:25" pos:end="1151:25">=</operator> <operator pos:start="1151:27" pos:end="1151:27">&amp;</operator><name pos:start="1151:28" pos:end="1151:30">set</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1153:15" pos:end="1159:13">else <block pos:start="1153:20" pos:end="1159:13">{<block_content pos:start="1155:17" pos:end="1157:31">

                <expr_stmt pos:start="1155:17" pos:end="1155:24"><expr pos:start="1155:17" pos:end="1155:23"><name pos:start="1155:17" pos:end="1155:19">how</name> <operator pos:start="1155:21" pos:end="1155:21">=</operator> <literal type="number" pos:start="1155:23" pos:end="1155:23">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1157:17" pos:end="1157:31"><expr pos:start="1157:17" pos:end="1157:30"><name pos:start="1157:17" pos:end="1157:23">set_ptr</name> <operator pos:start="1157:25" pos:end="1157:25">=</operator> <name pos:start="1157:27" pos:end="1157:30">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1161:13" pos:end="1161:64"><expr pos:start="1161:13" pos:end="1161:63"><name pos:start="1161:13" pos:end="1161:15">ret</name> <operator pos:start="1161:17" pos:end="1161:17">=</operator> <call pos:start="1161:19" pos:end="1161:63"><name pos:start="1161:19" pos:end="1161:27">get_errno</name><argument_list pos:start="1161:28" pos:end="1161:63">(<argument pos:start="1161:29" pos:end="1161:62"><expr pos:start="1161:29" pos:end="1161:62"><call pos:start="1161:29" pos:end="1161:62"><name pos:start="1161:29" pos:end="1161:39">sigprocmask</name><argument_list pos:start="1161:40" pos:end="1161:62">(<argument pos:start="1161:41" pos:end="1161:43"><expr pos:start="1161:41" pos:end="1161:43"><name pos:start="1161:41" pos:end="1161:43">how</name></expr></argument>, <argument pos:start="1161:46" pos:end="1161:52"><expr pos:start="1161:46" pos:end="1161:52"><name pos:start="1161:46" pos:end="1161:52">set_ptr</name></expr></argument>, <argument pos:start="1161:55" pos:end="1161:61"><expr pos:start="1161:55" pos:end="1161:61"><operator pos:start="1161:55" pos:end="1161:55">&amp;</operator><name pos:start="1161:56" pos:end="1161:61">oldset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1163:13" pos:end="1171:13"><if pos:start="1163:13" pos:end="1171:13">if <condition pos:start="1163:16" pos:end="1163:39">(<expr pos:start="1163:17" pos:end="1163:38"><operator pos:start="1163:17" pos:end="1163:17">!</operator><call pos:start="1163:18" pos:end="1163:30"><name pos:start="1163:18" pos:end="1163:25">is_error</name><argument_list pos:start="1163:26" pos:end="1163:30">(<argument pos:start="1163:27" pos:end="1163:29"><expr pos:start="1163:27" pos:end="1163:29"><name pos:start="1163:27" pos:end="1163:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="1163:32" pos:end="1163:33">&amp;&amp;</operator> <name pos:start="1163:35" pos:end="1163:38">arg3</name></expr>)</condition> <block pos:start="1163:41" pos:end="1171:13">{<block_content pos:start="1165:17" pos:end="1169:62">

                <expr_stmt pos:start="1165:17" pos:end="1165:64"><expr pos:start="1165:17" pos:end="1165:63"><name pos:start="1165:17" pos:end="1165:17">p</name> <operator pos:start="1165:19" pos:end="1165:19">=</operator> <call pos:start="1165:21" pos:end="1165:63"><name pos:start="1165:21" pos:end="1165:29">lock_user</name><argument_list pos:start="1165:30" pos:end="1165:63">(<argument pos:start="1165:31" pos:end="1165:34"><expr pos:start="1165:31" pos:end="1165:34"><name pos:start="1165:31" pos:end="1165:34">arg3</name></expr></argument>, <argument pos:start="1165:37" pos:end="1165:59"><expr pos:start="1165:37" pos:end="1165:59"><sizeof pos:start="1165:37" pos:end="1165:59">sizeof<argument_list pos:start="1165:43" pos:end="1165:59">(<argument pos:start="1165:44" pos:end="1165:58"><expr pos:start="1165:44" pos:end="1165:58"><name pos:start="1165:44" pos:end="1165:58">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1165:62" pos:end="1165:62"><expr pos:start="1165:62" pos:end="1165:62"><literal type="number" pos:start="1165:62" pos:end="1165:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1167:17" pos:end="1167:50"><expr pos:start="1167:17" pos:end="1167:49"><call pos:start="1167:17" pos:end="1167:49"><name pos:start="1167:17" pos:end="1167:37">host_to_target_sigset</name><argument_list pos:start="1167:38" pos:end="1167:49">(<argument pos:start="1167:39" pos:end="1167:39"><expr pos:start="1167:39" pos:end="1167:39"><name pos:start="1167:39" pos:end="1167:39">p</name></expr></argument>, <argument pos:start="1167:42" pos:end="1167:48"><expr pos:start="1167:42" pos:end="1167:48"><operator pos:start="1167:42" pos:end="1167:42">&amp;</operator><name pos:start="1167:43" pos:end="1167:48">oldset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1169:17" pos:end="1169:62"><expr pos:start="1169:17" pos:end="1169:61"><call pos:start="1169:17" pos:end="1169:61"><name pos:start="1169:17" pos:end="1169:27">unlock_user</name><argument_list pos:start="1169:28" pos:end="1169:61">(<argument pos:start="1169:29" pos:end="1169:29"><expr pos:start="1169:29" pos:end="1169:29"><name pos:start="1169:29" pos:end="1169:29">p</name></expr></argument>, <argument pos:start="1169:32" pos:end="1169:35"><expr pos:start="1169:32" pos:end="1169:35"><name pos:start="1169:32" pos:end="1169:35">arg3</name></expr></argument>, <argument pos:start="1169:38" pos:end="1169:60"><expr pos:start="1169:38" pos:end="1169:60"><sizeof pos:start="1169:38" pos:end="1169:60">sizeof<argument_list pos:start="1169:44" pos:end="1169:60">(<argument pos:start="1169:45" pos:end="1169:59"><expr pos:start="1169:45" pos:end="1169:59"><name pos:start="1169:45" pos:end="1169:59">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1175:9" pos:end="1178:0">break;</break>

<cpp:ifdef pos:start="1177:1" pos:end="1177:27">#<cpp:directive pos:start="1177:2" pos:end="1177:6">ifdef</cpp:directive> <name pos:start="1177:8" pos:end="1177:27">TARGET_NR_sigpending</name></cpp:ifdef>

    <case pos:start="1179:5" pos:end="1179:30">case <expr pos:start="1179:10" pos:end="1179:29"><name pos:start="1179:10" pos:end="1179:29">TARGET_NR_sigpending</name></expr>:</case>

        <block pos:start="1181:9" pos:end="1197:9">{<block_content pos:start="1183:13" pos:end="1195:13">

            <decl_stmt pos:start="1183:13" pos:end="1183:25"><decl pos:start="1183:13" pos:end="1183:24"><type pos:start="1183:13" pos:end="1183:20"><name pos:start="1183:13" pos:end="1183:20">sigset_t</name></type> <name pos:start="1183:22" pos:end="1183:24">set</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1185:13" pos:end="1185:46"><expr pos:start="1185:13" pos:end="1185:45"><name pos:start="1185:13" pos:end="1185:15">ret</name> <operator pos:start="1185:17" pos:end="1185:17">=</operator> <call pos:start="1185:19" pos:end="1185:45"><name pos:start="1185:19" pos:end="1185:27">get_errno</name><argument_list pos:start="1185:28" pos:end="1185:45">(<argument pos:start="1185:29" pos:end="1185:44"><expr pos:start="1185:29" pos:end="1185:44"><call pos:start="1185:29" pos:end="1185:44"><name pos:start="1185:29" pos:end="1185:38">sigpending</name><argument_list pos:start="1185:39" pos:end="1185:44">(<argument pos:start="1185:40" pos:end="1185:43"><expr pos:start="1185:40" pos:end="1185:43"><operator pos:start="1185:40" pos:end="1185:40">&amp;</operator><name pos:start="1185:41" pos:end="1185:43">set</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1187:13" pos:end="1195:13"><if pos:start="1187:13" pos:end="1195:13">if <condition pos:start="1187:16" pos:end="1187:31">(<expr pos:start="1187:17" pos:end="1187:30"><operator pos:start="1187:17" pos:end="1187:17">!</operator><call pos:start="1187:18" pos:end="1187:30"><name pos:start="1187:18" pos:end="1187:25">is_error</name><argument_list pos:start="1187:26" pos:end="1187:30">(<argument pos:start="1187:27" pos:end="1187:29"><expr pos:start="1187:27" pos:end="1187:29"><name pos:start="1187:27" pos:end="1187:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1187:33" pos:end="1195:13">{<block_content pos:start="1189:17" pos:end="1193:62">

                <expr_stmt pos:start="1189:17" pos:end="1189:64"><expr pos:start="1189:17" pos:end="1189:63"><name pos:start="1189:17" pos:end="1189:17">p</name> <operator pos:start="1189:19" pos:end="1189:19">=</operator> <call pos:start="1189:21" pos:end="1189:63"><name pos:start="1189:21" pos:end="1189:29">lock_user</name><argument_list pos:start="1189:30" pos:end="1189:63">(<argument pos:start="1189:31" pos:end="1189:34"><expr pos:start="1189:31" pos:end="1189:34"><name pos:start="1189:31" pos:end="1189:34">arg1</name></expr></argument>, <argument pos:start="1189:37" pos:end="1189:59"><expr pos:start="1189:37" pos:end="1189:59"><sizeof pos:start="1189:37" pos:end="1189:59">sizeof<argument_list pos:start="1189:43" pos:end="1189:59">(<argument pos:start="1189:44" pos:end="1189:58"><expr pos:start="1189:44" pos:end="1189:58"><name pos:start="1189:44" pos:end="1189:58">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1189:62" pos:end="1189:62"><expr pos:start="1189:62" pos:end="1189:62"><literal type="number" pos:start="1189:62" pos:end="1189:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1191:17" pos:end="1191:51"><expr pos:start="1191:17" pos:end="1191:50"><call pos:start="1191:17" pos:end="1191:50"><name pos:start="1191:17" pos:end="1191:41">host_to_target_old_sigset</name><argument_list pos:start="1191:42" pos:end="1191:50">(<argument pos:start="1191:43" pos:end="1191:43"><expr pos:start="1191:43" pos:end="1191:43"><name pos:start="1191:43" pos:end="1191:43">p</name></expr></argument>, <argument pos:start="1191:46" pos:end="1191:49"><expr pos:start="1191:46" pos:end="1191:49"><operator pos:start="1191:46" pos:end="1191:46">&amp;</operator><name pos:start="1191:47" pos:end="1191:49">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1193:17" pos:end="1193:62"><expr pos:start="1193:17" pos:end="1193:61"><call pos:start="1193:17" pos:end="1193:61"><name pos:start="1193:17" pos:end="1193:27">unlock_user</name><argument_list pos:start="1193:28" pos:end="1193:61">(<argument pos:start="1193:29" pos:end="1193:29"><expr pos:start="1193:29" pos:end="1193:29"><name pos:start="1193:29" pos:end="1193:29">p</name></expr></argument>, <argument pos:start="1193:32" pos:end="1193:35"><expr pos:start="1193:32" pos:end="1193:35"><name pos:start="1193:32" pos:end="1193:35">arg1</name></expr></argument>, <argument pos:start="1193:38" pos:end="1193:60"><expr pos:start="1193:38" pos:end="1193:60"><sizeof pos:start="1193:38" pos:end="1193:60">sizeof<argument_list pos:start="1193:44" pos:end="1193:60">(<argument pos:start="1193:45" pos:end="1193:59"><expr pos:start="1193:45" pos:end="1193:59"><name pos:start="1193:45" pos:end="1193:59">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1199:9" pos:end="1202:0">break;</break>

<cpp:endif pos:start="1201:1" pos:end="1201:6">#<cpp:directive pos:start="1201:2" pos:end="1201:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1203:5" pos:end="1203:33">case <expr pos:start="1203:10" pos:end="1203:32"><name pos:start="1203:10" pos:end="1203:32">TARGET_NR_rt_sigpending</name></expr>:</case>

        <block pos:start="1205:9" pos:end="1221:9">{<block_content pos:start="1207:13" pos:end="1219:13">

            <decl_stmt pos:start="1207:13" pos:end="1207:25"><decl pos:start="1207:13" pos:end="1207:24"><type pos:start="1207:13" pos:end="1207:20"><name pos:start="1207:13" pos:end="1207:20">sigset_t</name></type> <name pos:start="1207:22" pos:end="1207:24">set</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1209:13" pos:end="1209:46"><expr pos:start="1209:13" pos:end="1209:45"><name pos:start="1209:13" pos:end="1209:15">ret</name> <operator pos:start="1209:17" pos:end="1209:17">=</operator> <call pos:start="1209:19" pos:end="1209:45"><name pos:start="1209:19" pos:end="1209:27">get_errno</name><argument_list pos:start="1209:28" pos:end="1209:45">(<argument pos:start="1209:29" pos:end="1209:44"><expr pos:start="1209:29" pos:end="1209:44"><call pos:start="1209:29" pos:end="1209:44"><name pos:start="1209:29" pos:end="1209:38">sigpending</name><argument_list pos:start="1209:39" pos:end="1209:44">(<argument pos:start="1209:40" pos:end="1209:43"><expr pos:start="1209:40" pos:end="1209:43"><operator pos:start="1209:40" pos:end="1209:40">&amp;</operator><name pos:start="1209:41" pos:end="1209:43">set</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1211:13" pos:end="1219:13"><if pos:start="1211:13" pos:end="1219:13">if <condition pos:start="1211:16" pos:end="1211:31">(<expr pos:start="1211:17" pos:end="1211:30"><operator pos:start="1211:17" pos:end="1211:17">!</operator><call pos:start="1211:18" pos:end="1211:30"><name pos:start="1211:18" pos:end="1211:25">is_error</name><argument_list pos:start="1211:26" pos:end="1211:30">(<argument pos:start="1211:27" pos:end="1211:29"><expr pos:start="1211:27" pos:end="1211:29"><name pos:start="1211:27" pos:end="1211:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1211:33" pos:end="1219:13">{<block_content pos:start="1213:17" pos:end="1217:62">

                <expr_stmt pos:start="1213:17" pos:end="1213:64"><expr pos:start="1213:17" pos:end="1213:63"><name pos:start="1213:17" pos:end="1213:17">p</name> <operator pos:start="1213:19" pos:end="1213:19">=</operator> <call pos:start="1213:21" pos:end="1213:63"><name pos:start="1213:21" pos:end="1213:29">lock_user</name><argument_list pos:start="1213:30" pos:end="1213:63">(<argument pos:start="1213:31" pos:end="1213:34"><expr pos:start="1213:31" pos:end="1213:34"><name pos:start="1213:31" pos:end="1213:34">arg1</name></expr></argument>, <argument pos:start="1213:37" pos:end="1213:59"><expr pos:start="1213:37" pos:end="1213:59"><sizeof pos:start="1213:37" pos:end="1213:59">sizeof<argument_list pos:start="1213:43" pos:end="1213:59">(<argument pos:start="1213:44" pos:end="1213:58"><expr pos:start="1213:44" pos:end="1213:58"><name pos:start="1213:44" pos:end="1213:58">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1213:62" pos:end="1213:62"><expr pos:start="1213:62" pos:end="1213:62"><literal type="number" pos:start="1213:62" pos:end="1213:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1215:17" pos:end="1215:47"><expr pos:start="1215:17" pos:end="1215:46"><call pos:start="1215:17" pos:end="1215:46"><name pos:start="1215:17" pos:end="1215:37">host_to_target_sigset</name><argument_list pos:start="1215:38" pos:end="1215:46">(<argument pos:start="1215:39" pos:end="1215:39"><expr pos:start="1215:39" pos:end="1215:39"><name pos:start="1215:39" pos:end="1215:39">p</name></expr></argument>, <argument pos:start="1215:42" pos:end="1215:45"><expr pos:start="1215:42" pos:end="1215:45"><operator pos:start="1215:42" pos:end="1215:42">&amp;</operator><name pos:start="1215:43" pos:end="1215:45">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1217:17" pos:end="1217:62"><expr pos:start="1217:17" pos:end="1217:61"><call pos:start="1217:17" pos:end="1217:61"><name pos:start="1217:17" pos:end="1217:27">unlock_user</name><argument_list pos:start="1217:28" pos:end="1217:61">(<argument pos:start="1217:29" pos:end="1217:29"><expr pos:start="1217:29" pos:end="1217:29"><name pos:start="1217:29" pos:end="1217:29">p</name></expr></argument>, <argument pos:start="1217:32" pos:end="1217:35"><expr pos:start="1217:32" pos:end="1217:35"><name pos:start="1217:32" pos:end="1217:35">arg1</name></expr></argument>, <argument pos:start="1217:38" pos:end="1217:60"><expr pos:start="1217:38" pos:end="1217:60"><sizeof pos:start="1217:38" pos:end="1217:60">sizeof<argument_list pos:start="1217:44" pos:end="1217:60">(<argument pos:start="1217:45" pos:end="1217:59"><expr pos:start="1217:45" pos:end="1217:59"><name pos:start="1217:45" pos:end="1217:59">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1223:9" pos:end="1226:0">break;</break>

<cpp:ifdef pos:start="1225:1" pos:end="1225:27">#<cpp:directive pos:start="1225:2" pos:end="1225:6">ifdef</cpp:directive> <name pos:start="1225:8" pos:end="1225:27">TARGET_NR_sigsuspend</name></cpp:ifdef>

    <case pos:start="1227:5" pos:end="1227:30">case <expr pos:start="1227:10" pos:end="1227:29"><name pos:start="1227:10" pos:end="1227:29">TARGET_NR_sigsuspend</name></expr>:</case>

        <block pos:start="1229:9" pos:end="1241:9">{<block_content pos:start="1231:13" pos:end="1239:46">

            <decl_stmt pos:start="1231:13" pos:end="1231:25"><decl pos:start="1231:13" pos:end="1231:24"><type pos:start="1231:13" pos:end="1231:20"><name pos:start="1231:13" pos:end="1231:20">sigset_t</name></type> <name pos:start="1231:22" pos:end="1231:24">set</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1233:13" pos:end="1233:60"><expr pos:start="1233:13" pos:end="1233:59"><name pos:start="1233:13" pos:end="1233:13">p</name> <operator pos:start="1233:15" pos:end="1233:15">=</operator> <call pos:start="1233:17" pos:end="1233:59"><name pos:start="1233:17" pos:end="1233:25">lock_user</name><argument_list pos:start="1233:26" pos:end="1233:59">(<argument pos:start="1233:27" pos:end="1233:30"><expr pos:start="1233:27" pos:end="1233:30"><name pos:start="1233:27" pos:end="1233:30">arg1</name></expr></argument>, <argument pos:start="1233:33" pos:end="1233:55"><expr pos:start="1233:33" pos:end="1233:55"><sizeof pos:start="1233:33" pos:end="1233:55">sizeof<argument_list pos:start="1233:39" pos:end="1233:55">(<argument pos:start="1233:40" pos:end="1233:54"><expr pos:start="1233:40" pos:end="1233:54"><name pos:start="1233:40" pos:end="1233:54">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1233:58" pos:end="1233:58"><expr pos:start="1233:58" pos:end="1233:58"><literal type="number" pos:start="1233:58" pos:end="1233:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1235:13" pos:end="1235:47"><expr pos:start="1235:13" pos:end="1235:46"><call pos:start="1235:13" pos:end="1235:46"><name pos:start="1235:13" pos:end="1235:37">target_to_host_old_sigset</name><argument_list pos:start="1235:38" pos:end="1235:46">(<argument pos:start="1235:39" pos:end="1235:42"><expr pos:start="1235:39" pos:end="1235:42"><operator pos:start="1235:39" pos:end="1235:39">&amp;</operator><name pos:start="1235:40" pos:end="1235:42">set</name></expr></argument>, <argument pos:start="1235:45" pos:end="1235:45"><expr pos:start="1235:45" pos:end="1235:45"><name pos:start="1235:45" pos:end="1235:45">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1237:13" pos:end="1237:36"><expr pos:start="1237:13" pos:end="1237:35"><call pos:start="1237:13" pos:end="1237:35"><name pos:start="1237:13" pos:end="1237:23">unlock_user</name><argument_list pos:start="1237:24" pos:end="1237:35">(<argument pos:start="1237:25" pos:end="1237:25"><expr pos:start="1237:25" pos:end="1237:25"><name pos:start="1237:25" pos:end="1237:25">p</name></expr></argument>, <argument pos:start="1237:28" pos:end="1237:31"><expr pos:start="1237:28" pos:end="1237:31"><name pos:start="1237:28" pos:end="1237:31">arg1</name></expr></argument>, <argument pos:start="1237:34" pos:end="1237:34"><expr pos:start="1237:34" pos:end="1237:34"><literal type="number" pos:start="1237:34" pos:end="1237:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1239:13" pos:end="1239:46"><expr pos:start="1239:13" pos:end="1239:45"><name pos:start="1239:13" pos:end="1239:15">ret</name> <operator pos:start="1239:17" pos:end="1239:17">=</operator> <call pos:start="1239:19" pos:end="1239:45"><name pos:start="1239:19" pos:end="1239:27">get_errno</name><argument_list pos:start="1239:28" pos:end="1239:45">(<argument pos:start="1239:29" pos:end="1239:44"><expr pos:start="1239:29" pos:end="1239:44"><call pos:start="1239:29" pos:end="1239:44"><name pos:start="1239:29" pos:end="1239:38">sigsuspend</name><argument_list pos:start="1239:39" pos:end="1239:44">(<argument pos:start="1239:40" pos:end="1239:43"><expr pos:start="1239:40" pos:end="1239:43"><operator pos:start="1239:40" pos:end="1239:40">&amp;</operator><name pos:start="1239:41" pos:end="1239:43">set</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1243:9" pos:end="1246:0">break;</break>

<cpp:endif pos:start="1245:1" pos:end="1245:6">#<cpp:directive pos:start="1245:2" pos:end="1245:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1247:5" pos:end="1247:33">case <expr pos:start="1247:10" pos:end="1247:32"><name pos:start="1247:10" pos:end="1247:32">TARGET_NR_rt_sigsuspend</name></expr>:</case>

        <block pos:start="1249:9" pos:end="1261:9">{<block_content pos:start="1251:13" pos:end="1259:46">

            <decl_stmt pos:start="1251:13" pos:end="1251:25"><decl pos:start="1251:13" pos:end="1251:24"><type pos:start="1251:13" pos:end="1251:20"><name pos:start="1251:13" pos:end="1251:20">sigset_t</name></type> <name pos:start="1251:22" pos:end="1251:24">set</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1253:13" pos:end="1253:60"><expr pos:start="1253:13" pos:end="1253:59"><name pos:start="1253:13" pos:end="1253:13">p</name> <operator pos:start="1253:15" pos:end="1253:15">=</operator> <call pos:start="1253:17" pos:end="1253:59"><name pos:start="1253:17" pos:end="1253:25">lock_user</name><argument_list pos:start="1253:26" pos:end="1253:59">(<argument pos:start="1253:27" pos:end="1253:30"><expr pos:start="1253:27" pos:end="1253:30"><name pos:start="1253:27" pos:end="1253:30">arg1</name></expr></argument>, <argument pos:start="1253:33" pos:end="1253:55"><expr pos:start="1253:33" pos:end="1253:55"><sizeof pos:start="1253:33" pos:end="1253:55">sizeof<argument_list pos:start="1253:39" pos:end="1253:55">(<argument pos:start="1253:40" pos:end="1253:54"><expr pos:start="1253:40" pos:end="1253:54"><name pos:start="1253:40" pos:end="1253:54">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1253:58" pos:end="1253:58"><expr pos:start="1253:58" pos:end="1253:58"><literal type="number" pos:start="1253:58" pos:end="1253:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1255:13" pos:end="1255:43"><expr pos:start="1255:13" pos:end="1255:42"><call pos:start="1255:13" pos:end="1255:42"><name pos:start="1255:13" pos:end="1255:33">target_to_host_sigset</name><argument_list pos:start="1255:34" pos:end="1255:42">(<argument pos:start="1255:35" pos:end="1255:38"><expr pos:start="1255:35" pos:end="1255:38"><operator pos:start="1255:35" pos:end="1255:35">&amp;</operator><name pos:start="1255:36" pos:end="1255:38">set</name></expr></argument>, <argument pos:start="1255:41" pos:end="1255:41"><expr pos:start="1255:41" pos:end="1255:41"><name pos:start="1255:41" pos:end="1255:41">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1257:13" pos:end="1257:36"><expr pos:start="1257:13" pos:end="1257:35"><call pos:start="1257:13" pos:end="1257:35"><name pos:start="1257:13" pos:end="1257:23">unlock_user</name><argument_list pos:start="1257:24" pos:end="1257:35">(<argument pos:start="1257:25" pos:end="1257:25"><expr pos:start="1257:25" pos:end="1257:25"><name pos:start="1257:25" pos:end="1257:25">p</name></expr></argument>, <argument pos:start="1257:28" pos:end="1257:31"><expr pos:start="1257:28" pos:end="1257:31"><name pos:start="1257:28" pos:end="1257:31">arg1</name></expr></argument>, <argument pos:start="1257:34" pos:end="1257:34"><expr pos:start="1257:34" pos:end="1257:34"><literal type="number" pos:start="1257:34" pos:end="1257:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1259:13" pos:end="1259:46"><expr pos:start="1259:13" pos:end="1259:45"><name pos:start="1259:13" pos:end="1259:15">ret</name> <operator pos:start="1259:17" pos:end="1259:17">=</operator> <call pos:start="1259:19" pos:end="1259:45"><name pos:start="1259:19" pos:end="1259:27">get_errno</name><argument_list pos:start="1259:28" pos:end="1259:45">(<argument pos:start="1259:29" pos:end="1259:44"><expr pos:start="1259:29" pos:end="1259:44"><call pos:start="1259:29" pos:end="1259:44"><name pos:start="1259:29" pos:end="1259:38">sigsuspend</name><argument_list pos:start="1259:39" pos:end="1259:44">(<argument pos:start="1259:40" pos:end="1259:43"><expr pos:start="1259:40" pos:end="1259:43"><operator pos:start="1259:40" pos:end="1259:40">&amp;</operator><name pos:start="1259:41" pos:end="1259:43">set</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1263:9" pos:end="1263:14">break;</break>

    <case pos:start="1265:5" pos:end="1265:35">case <expr pos:start="1265:10" pos:end="1265:34"><name pos:start="1265:10" pos:end="1265:34">TARGET_NR_rt_sigtimedwait</name></expr>:</case>

        <block pos:start="1267:9" pos:end="1307:9">{<block_content pos:start="1269:13" pos:end="1305:13">

            <decl_stmt pos:start="1269:13" pos:end="1269:25"><decl pos:start="1269:13" pos:end="1269:24"><type pos:start="1269:13" pos:end="1269:20"><name pos:start="1269:13" pos:end="1269:20">sigset_t</name></type> <name pos:start="1269:22" pos:end="1269:24">set</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1271:13" pos:end="1271:39"><decl pos:start="1271:13" pos:end="1271:31"><type pos:start="1271:13" pos:end="1271:27"><name pos:start="1271:13" pos:end="1271:27"><name pos:start="1271:13" pos:end="1271:18">struct</name> <name pos:start="1271:20" pos:end="1271:27">timespec</name></name></type> <name pos:start="1271:29" pos:end="1271:31">uts</name></decl>, <decl pos:start="1271:34" pos:end="1271:38"><type ref="prev" pos:start="1271:13" pos:end="1271:27"><modifier pos:start="1271:34" pos:end="1271:34">*</modifier></type><name pos:start="1271:35" pos:end="1271:38">puts</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1273:13" pos:end="1273:28"><decl pos:start="1273:13" pos:end="1273:27"><type pos:start="1273:13" pos:end="1273:21"><name pos:start="1273:13" pos:end="1273:21">siginfo_t</name></type> <name pos:start="1273:23" pos:end="1273:27">uinfo</name></decl>;</decl_stmt>

           

            <expr_stmt pos:start="1277:13" pos:end="1277:60"><expr pos:start="1277:13" pos:end="1277:59"><name pos:start="1277:13" pos:end="1277:13">p</name> <operator pos:start="1277:15" pos:end="1277:15">=</operator> <call pos:start="1277:17" pos:end="1277:59"><name pos:start="1277:17" pos:end="1277:25">lock_user</name><argument_list pos:start="1277:26" pos:end="1277:59">(<argument pos:start="1277:27" pos:end="1277:30"><expr pos:start="1277:27" pos:end="1277:30"><name pos:start="1277:27" pos:end="1277:30">arg1</name></expr></argument>, <argument pos:start="1277:33" pos:end="1277:55"><expr pos:start="1277:33" pos:end="1277:55"><sizeof pos:start="1277:33" pos:end="1277:55">sizeof<argument_list pos:start="1277:39" pos:end="1277:55">(<argument pos:start="1277:40" pos:end="1277:54"><expr pos:start="1277:40" pos:end="1277:54"><name pos:start="1277:40" pos:end="1277:54">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1277:58" pos:end="1277:58"><expr pos:start="1277:58" pos:end="1277:58"><literal type="number" pos:start="1277:58" pos:end="1277:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1279:13" pos:end="1279:43"><expr pos:start="1279:13" pos:end="1279:42"><call pos:start="1279:13" pos:end="1279:42"><name pos:start="1279:13" pos:end="1279:33">target_to_host_sigset</name><argument_list pos:start="1279:34" pos:end="1279:42">(<argument pos:start="1279:35" pos:end="1279:38"><expr pos:start="1279:35" pos:end="1279:38"><operator pos:start="1279:35" pos:end="1279:35">&amp;</operator><name pos:start="1279:36" pos:end="1279:38">set</name></expr></argument>, <argument pos:start="1279:41" pos:end="1279:41"><expr pos:start="1279:41" pos:end="1279:41"><name pos:start="1279:41" pos:end="1279:41">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1281:13" pos:end="1281:36"><expr pos:start="1281:13" pos:end="1281:35"><call pos:start="1281:13" pos:end="1281:35"><name pos:start="1281:13" pos:end="1281:23">unlock_user</name><argument_list pos:start="1281:24" pos:end="1281:35">(<argument pos:start="1281:25" pos:end="1281:25"><expr pos:start="1281:25" pos:end="1281:25"><name pos:start="1281:25" pos:end="1281:25">p</name></expr></argument>, <argument pos:start="1281:28" pos:end="1281:31"><expr pos:start="1281:28" pos:end="1281:31"><name pos:start="1281:28" pos:end="1281:31">arg1</name></expr></argument>, <argument pos:start="1281:34" pos:end="1281:34"><expr pos:start="1281:34" pos:end="1281:34"><literal type="number" pos:start="1281:34" pos:end="1281:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1283:13" pos:end="1293:13"><if pos:start="1283:13" pos:end="1289:13">if <condition pos:start="1283:16" pos:end="1283:21">(<expr pos:start="1283:17" pos:end="1283:20"><name pos:start="1283:17" pos:end="1283:20">arg3</name></expr>)</condition> <block pos:start="1283:23" pos:end="1289:13">{<block_content pos:start="1285:17" pos:end="1287:52">

                <expr_stmt pos:start="1285:17" pos:end="1285:28"><expr pos:start="1285:17" pos:end="1285:27"><name pos:start="1285:17" pos:end="1285:20">puts</name> <operator pos:start="1285:22" pos:end="1285:22">=</operator> <operator pos:start="1285:24" pos:end="1285:24">&amp;</operator><name pos:start="1285:25" pos:end="1285:27">uts</name></expr>;</expr_stmt>

                <expr_stmt pos:start="1287:17" pos:end="1287:52"><expr pos:start="1287:17" pos:end="1287:51"><call pos:start="1287:17" pos:end="1287:51"><name pos:start="1287:17" pos:end="1287:39">target_to_host_timespec</name><argument_list pos:start="1287:40" pos:end="1287:51">(<argument pos:start="1287:41" pos:end="1287:44"><expr pos:start="1287:41" pos:end="1287:44"><name pos:start="1287:41" pos:end="1287:44">puts</name></expr></argument>, <argument pos:start="1287:47" pos:end="1287:50"><expr pos:start="1287:47" pos:end="1287:50"><name pos:start="1287:47" pos:end="1287:50">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1289:15" pos:end="1293:13">else <block pos:start="1289:20" pos:end="1293:13">{<block_content pos:start="1291:17" pos:end="1291:28">

                <expr_stmt pos:start="1291:17" pos:end="1291:28"><expr pos:start="1291:17" pos:end="1291:27"><name pos:start="1291:17" pos:end="1291:20">puts</name> <operator pos:start="1291:22" pos:end="1291:22">=</operator> <name pos:start="1291:24" pos:end="1291:27">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1295:13" pos:end="1295:62"><expr pos:start="1295:13" pos:end="1295:61"><name pos:start="1295:13" pos:end="1295:15">ret</name> <operator pos:start="1295:17" pos:end="1295:17">=</operator> <call pos:start="1295:19" pos:end="1295:61"><name pos:start="1295:19" pos:end="1295:27">get_errno</name><argument_list pos:start="1295:28" pos:end="1295:61">(<argument pos:start="1295:29" pos:end="1295:60"><expr pos:start="1295:29" pos:end="1295:60"><call pos:start="1295:29" pos:end="1295:60"><name pos:start="1295:29" pos:end="1295:40">sigtimedwait</name><argument_list pos:start="1295:41" pos:end="1295:60">(<argument pos:start="1295:42" pos:end="1295:45"><expr pos:start="1295:42" pos:end="1295:45"><operator pos:start="1295:42" pos:end="1295:42">&amp;</operator><name pos:start="1295:43" pos:end="1295:45">set</name></expr></argument>, <argument pos:start="1295:48" pos:end="1295:53"><expr pos:start="1295:48" pos:end="1295:53"><operator pos:start="1295:48" pos:end="1295:48">&amp;</operator><name pos:start="1295:49" pos:end="1295:53">uinfo</name></expr></argument>, <argument pos:start="1295:56" pos:end="1295:59"><expr pos:start="1295:56" pos:end="1295:59"><name pos:start="1295:56" pos:end="1295:59">puts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1297:13" pos:end="1305:13"><if pos:start="1297:13" pos:end="1305:13">if <condition pos:start="1297:16" pos:end="1297:39">(<expr pos:start="1297:17" pos:end="1297:38"><operator pos:start="1297:17" pos:end="1297:17">!</operator><call pos:start="1297:18" pos:end="1297:30"><name pos:start="1297:18" pos:end="1297:25">is_error</name><argument_list pos:start="1297:26" pos:end="1297:30">(<argument pos:start="1297:27" pos:end="1297:29"><expr pos:start="1297:27" pos:end="1297:29"><name pos:start="1297:27" pos:end="1297:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="1297:32" pos:end="1297:33">&amp;&amp;</operator> <name pos:start="1297:35" pos:end="1297:38">arg2</name></expr>)</condition> <block pos:start="1297:41" pos:end="1305:13">{<block_content pos:start="1299:17" pos:end="1303:62">

                <expr_stmt pos:start="1299:17" pos:end="1299:64"><expr pos:start="1299:17" pos:end="1299:63"><name pos:start="1299:17" pos:end="1299:17">p</name> <operator pos:start="1299:19" pos:end="1299:19">=</operator> <call pos:start="1299:21" pos:end="1299:63"><name pos:start="1299:21" pos:end="1299:29">lock_user</name><argument_list pos:start="1299:30" pos:end="1299:63">(<argument pos:start="1299:31" pos:end="1299:34"><expr pos:start="1299:31" pos:end="1299:34"><name pos:start="1299:31" pos:end="1299:34">arg2</name></expr></argument>, <argument pos:start="1299:37" pos:end="1299:59"><expr pos:start="1299:37" pos:end="1299:59"><sizeof pos:start="1299:37" pos:end="1299:59">sizeof<argument_list pos:start="1299:43" pos:end="1299:59">(<argument pos:start="1299:44" pos:end="1299:58"><expr pos:start="1299:44" pos:end="1299:58"><name pos:start="1299:44" pos:end="1299:58">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1299:62" pos:end="1299:62"><expr pos:start="1299:62" pos:end="1299:62"><literal type="number" pos:start="1299:62" pos:end="1299:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1301:17" pos:end="1301:50"><expr pos:start="1301:17" pos:end="1301:49"><call pos:start="1301:17" pos:end="1301:49"><name pos:start="1301:17" pos:end="1301:38">host_to_target_siginfo</name><argument_list pos:start="1301:39" pos:end="1301:49">(<argument pos:start="1301:40" pos:end="1301:40"><expr pos:start="1301:40" pos:end="1301:40"><name pos:start="1301:40" pos:end="1301:40">p</name></expr></argument>, <argument pos:start="1301:43" pos:end="1301:48"><expr pos:start="1301:43" pos:end="1301:48"><operator pos:start="1301:43" pos:end="1301:43">&amp;</operator><name pos:start="1301:44" pos:end="1301:48">uinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1303:17" pos:end="1303:62"><expr pos:start="1303:17" pos:end="1303:61"><call pos:start="1303:17" pos:end="1303:61"><name pos:start="1303:17" pos:end="1303:27">unlock_user</name><argument_list pos:start="1303:28" pos:end="1303:61">(<argument pos:start="1303:29" pos:end="1303:29"><expr pos:start="1303:29" pos:end="1303:29"><name pos:start="1303:29" pos:end="1303:29">p</name></expr></argument>, <argument pos:start="1303:32" pos:end="1303:35"><expr pos:start="1303:32" pos:end="1303:35"><name pos:start="1303:32" pos:end="1303:35">arg2</name></expr></argument>, <argument pos:start="1303:38" pos:end="1303:60"><expr pos:start="1303:38" pos:end="1303:60"><sizeof pos:start="1303:38" pos:end="1303:60">sizeof<argument_list pos:start="1303:44" pos:end="1303:60">(<argument pos:start="1303:45" pos:end="1303:59"><expr pos:start="1303:45" pos:end="1303:59"><name pos:start="1303:45" pos:end="1303:59">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1309:9" pos:end="1309:14">break;</break>

    <case pos:start="1311:5" pos:end="1311:35">case <expr pos:start="1311:10" pos:end="1311:34"><name pos:start="1311:10" pos:end="1311:34">TARGET_NR_rt_sigqueueinfo</name></expr>:</case>

        <block pos:start="1313:9" pos:end="1325:9">{<block_content pos:start="1315:13" pos:end="1323:69">

            <decl_stmt pos:start="1315:13" pos:end="1315:28"><decl pos:start="1315:13" pos:end="1315:27"><type pos:start="1315:13" pos:end="1315:21"><name pos:start="1315:13" pos:end="1315:21">siginfo_t</name></type> <name pos:start="1315:23" pos:end="1315:27">uinfo</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1317:13" pos:end="1317:60"><expr pos:start="1317:13" pos:end="1317:59"><name pos:start="1317:13" pos:end="1317:13">p</name> <operator pos:start="1317:15" pos:end="1317:15">=</operator> <call pos:start="1317:17" pos:end="1317:59"><name pos:start="1317:17" pos:end="1317:25">lock_user</name><argument_list pos:start="1317:26" pos:end="1317:59">(<argument pos:start="1317:27" pos:end="1317:30"><expr pos:start="1317:27" pos:end="1317:30"><name pos:start="1317:27" pos:end="1317:30">arg3</name></expr></argument>, <argument pos:start="1317:33" pos:end="1317:55"><expr pos:start="1317:33" pos:end="1317:55"><sizeof pos:start="1317:33" pos:end="1317:55">sizeof<argument_list pos:start="1317:39" pos:end="1317:55">(<argument pos:start="1317:40" pos:end="1317:54"><expr pos:start="1317:40" pos:end="1317:54"><name pos:start="1317:40" pos:end="1317:54">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1317:58" pos:end="1317:58"><expr pos:start="1317:58" pos:end="1317:58"><literal type="number" pos:start="1317:58" pos:end="1317:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1319:13" pos:end="1319:46"><expr pos:start="1319:13" pos:end="1319:45"><call pos:start="1319:13" pos:end="1319:45"><name pos:start="1319:13" pos:end="1319:34">target_to_host_siginfo</name><argument_list pos:start="1319:35" pos:end="1319:45">(<argument pos:start="1319:36" pos:end="1319:41"><expr pos:start="1319:36" pos:end="1319:41"><operator pos:start="1319:36" pos:end="1319:36">&amp;</operator><name pos:start="1319:37" pos:end="1319:41">uinfo</name></expr></argument>, <argument pos:start="1319:44" pos:end="1319:44"><expr pos:start="1319:44" pos:end="1319:44"><name pos:start="1319:44" pos:end="1319:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1321:13" pos:end="1321:36"><expr pos:start="1321:13" pos:end="1321:35"><call pos:start="1321:13" pos:end="1321:35"><name pos:start="1321:13" pos:end="1321:23">unlock_user</name><argument_list pos:start="1321:24" pos:end="1321:35">(<argument pos:start="1321:25" pos:end="1321:25"><expr pos:start="1321:25" pos:end="1321:25"><name pos:start="1321:25" pos:end="1321:25">p</name></expr></argument>, <argument pos:start="1321:28" pos:end="1321:31"><expr pos:start="1321:28" pos:end="1321:31"><name pos:start="1321:28" pos:end="1321:31">arg1</name></expr></argument>, <argument pos:start="1321:34" pos:end="1321:34"><expr pos:start="1321:34" pos:end="1321:34"><literal type="number" pos:start="1321:34" pos:end="1321:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1323:13" pos:end="1323:69"><expr pos:start="1323:13" pos:end="1323:68"><name pos:start="1323:13" pos:end="1323:15">ret</name> <operator pos:start="1323:17" pos:end="1323:17">=</operator> <call pos:start="1323:19" pos:end="1323:68"><name pos:start="1323:19" pos:end="1323:27">get_errno</name><argument_list pos:start="1323:28" pos:end="1323:68">(<argument pos:start="1323:29" pos:end="1323:67"><expr pos:start="1323:29" pos:end="1323:67"><call pos:start="1323:29" pos:end="1323:67"><name pos:start="1323:29" pos:end="1323:47">sys_rt_sigqueueinfo</name><argument_list pos:start="1323:48" pos:end="1323:67">(<argument pos:start="1323:49" pos:end="1323:52"><expr pos:start="1323:49" pos:end="1323:52"><name pos:start="1323:49" pos:end="1323:52">arg1</name></expr></argument>, <argument pos:start="1323:55" pos:end="1323:58"><expr pos:start="1323:55" pos:end="1323:58"><name pos:start="1323:55" pos:end="1323:58">arg2</name></expr></argument>, <argument pos:start="1323:61" pos:end="1323:66"><expr pos:start="1323:61" pos:end="1323:66"><operator pos:start="1323:61" pos:end="1323:61">&amp;</operator><name pos:start="1323:62" pos:end="1323:66">uinfo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1327:9" pos:end="1330:0">break;</break>

<cpp:ifdef pos:start="1329:1" pos:end="1329:26">#<cpp:directive pos:start="1329:2" pos:end="1329:6">ifdef</cpp:directive> <name pos:start="1329:8" pos:end="1329:26">TARGET_NR_sigreturn</name></cpp:ifdef>

    <case pos:start="1331:5" pos:end="1331:29">case <expr pos:start="1331:10" pos:end="1331:28"><name pos:start="1331:10" pos:end="1331:28">TARGET_NR_sigreturn</name></expr>:</case>

        <comment type="block" pos:start="1333:9" pos:end="1333:63">/* NOTE: ret is eax, so not transcoding must be done */</comment>

        <expr_stmt pos:start="1335:9" pos:end="1335:36"><expr pos:start="1335:9" pos:end="1335:35"><name pos:start="1335:9" pos:end="1335:11">ret</name> <operator pos:start="1335:13" pos:end="1335:13">=</operator> <call pos:start="1335:15" pos:end="1335:35"><name pos:start="1335:15" pos:end="1335:26">do_sigreturn</name><argument_list pos:start="1335:27" pos:end="1335:35">(<argument pos:start="1335:28" pos:end="1335:34"><expr pos:start="1335:28" pos:end="1335:34"><name pos:start="1335:28" pos:end="1335:34">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1337:9" pos:end="1340:0">break;</break>

<cpp:endif pos:start="1339:1" pos:end="1339:6">#<cpp:directive pos:start="1339:2" pos:end="1339:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1341:5" pos:end="1341:32">case <expr pos:start="1341:10" pos:end="1341:31"><name pos:start="1341:10" pos:end="1341:31">TARGET_NR_rt_sigreturn</name></expr>:</case>

        <comment type="block" pos:start="1343:9" pos:end="1343:63">/* NOTE: ret is eax, so not transcoding must be done */</comment>

        <expr_stmt pos:start="1345:9" pos:end="1345:39"><expr pos:start="1345:9" pos:end="1345:38"><name pos:start="1345:9" pos:end="1345:11">ret</name> <operator pos:start="1345:13" pos:end="1345:13">=</operator> <call pos:start="1345:15" pos:end="1345:38"><name pos:start="1345:15" pos:end="1345:29">do_rt_sigreturn</name><argument_list pos:start="1345:30" pos:end="1345:38">(<argument pos:start="1345:31" pos:end="1345:37"><expr pos:start="1345:31" pos:end="1345:37"><name pos:start="1345:31" pos:end="1345:37">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1347:9" pos:end="1347:14">break;</break>

    <case pos:start="1349:5" pos:end="1349:31">case <expr pos:start="1349:10" pos:end="1349:30"><name pos:start="1349:10" pos:end="1349:30">TARGET_NR_sethostname</name></expr>:</case>

        <expr_stmt pos:start="1351:9" pos:end="1351:35"><expr pos:start="1351:9" pos:end="1351:34"><name pos:start="1351:9" pos:end="1351:9">p</name> <operator pos:start="1351:11" pos:end="1351:11">=</operator> <call pos:start="1351:13" pos:end="1351:34"><name pos:start="1351:13" pos:end="1351:28">lock_user_string</name><argument_list pos:start="1351:29" pos:end="1351:34">(<argument pos:start="1351:30" pos:end="1351:33"><expr pos:start="1351:30" pos:end="1351:33"><name pos:start="1351:30" pos:end="1351:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1353:9" pos:end="1353:46"><expr pos:start="1353:9" pos:end="1353:45"><name pos:start="1353:9" pos:end="1353:11">ret</name> <operator pos:start="1353:13" pos:end="1353:13">=</operator> <call pos:start="1353:15" pos:end="1353:45"><name pos:start="1353:15" pos:end="1353:23">get_errno</name><argument_list pos:start="1353:24" pos:end="1353:45">(<argument pos:start="1353:25" pos:end="1353:44"><expr pos:start="1353:25" pos:end="1353:44"><call pos:start="1353:25" pos:end="1353:44"><name pos:start="1353:25" pos:end="1353:35">sethostname</name><argument_list pos:start="1353:36" pos:end="1353:44">(<argument pos:start="1353:37" pos:end="1353:37"><expr pos:start="1353:37" pos:end="1353:37"><name pos:start="1353:37" pos:end="1353:37">p</name></expr></argument>, <argument pos:start="1353:40" pos:end="1353:43"><expr pos:start="1353:40" pos:end="1353:43"><name pos:start="1353:40" pos:end="1353:43">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1355:9" pos:end="1355:32"><expr pos:start="1355:9" pos:end="1355:31"><call pos:start="1355:9" pos:end="1355:31"><name pos:start="1355:9" pos:end="1355:19">unlock_user</name><argument_list pos:start="1355:20" pos:end="1355:31">(<argument pos:start="1355:21" pos:end="1355:21"><expr pos:start="1355:21" pos:end="1355:21"><name pos:start="1355:21" pos:end="1355:21">p</name></expr></argument>, <argument pos:start="1355:24" pos:end="1355:27"><expr pos:start="1355:24" pos:end="1355:27"><name pos:start="1355:24" pos:end="1355:27">arg1</name></expr></argument>, <argument pos:start="1355:30" pos:end="1355:30"><expr pos:start="1355:30" pos:end="1355:30"><literal type="number" pos:start="1355:30" pos:end="1355:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1357:9" pos:end="1357:14">break;</break>

    <case pos:start="1359:5" pos:end="1359:29">case <expr pos:start="1359:10" pos:end="1359:28"><name pos:start="1359:10" pos:end="1359:28">TARGET_NR_setrlimit</name></expr>:</case>

        <block pos:start="1361:9" pos:end="1381:9">{<block_content pos:start="1365:13" pos:end="1379:56">

            <comment type="block" pos:start="1363:13" pos:end="1363:41">/* XXX: convert resource ? */</comment>

            <decl_stmt pos:start="1365:13" pos:end="1365:32"><decl pos:start="1365:13" pos:end="1365:31"><type pos:start="1365:13" pos:end="1365:15"><name pos:start="1365:13" pos:end="1365:15">int</name></type> <name pos:start="1365:17" pos:end="1365:24">resource</name> <init pos:start="1365:26" pos:end="1365:31">= <expr pos:start="1365:28" pos:end="1365:31"><name pos:start="1365:28" pos:end="1365:31">arg1</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1367:13" pos:end="1367:46"><decl pos:start="1367:13" pos:end="1367:45"><type pos:start="1367:13" pos:end="1367:34"><name pos:start="1367:13" pos:end="1367:32"><name pos:start="1367:13" pos:end="1367:18">struct</name> <name pos:start="1367:20" pos:end="1367:32">target_rlimit</name></name> <modifier pos:start="1367:34" pos:end="1367:34">*</modifier></type><name pos:start="1367:35" pos:end="1367:45">target_rlim</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1369:13" pos:end="1369:31"><decl pos:start="1369:13" pos:end="1369:30"><type pos:start="1369:13" pos:end="1369:25"><name pos:start="1369:13" pos:end="1369:25"><name pos:start="1369:13" pos:end="1369:18">struct</name> <name pos:start="1369:20" pos:end="1369:25">rlimit</name></name></type> <name pos:start="1369:27" pos:end="1369:30">rlim</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1371:13" pos:end="1371:51"><expr pos:start="1371:13" pos:end="1371:50"><call pos:start="1371:13" pos:end="1371:50"><name pos:start="1371:13" pos:end="1371:28">lock_user_struct</name><argument_list pos:start="1371:29" pos:end="1371:50">(<argument pos:start="1371:30" pos:end="1371:40"><expr pos:start="1371:30" pos:end="1371:40"><name pos:start="1371:30" pos:end="1371:40">target_rlim</name></expr></argument>, <argument pos:start="1371:43" pos:end="1371:46"><expr pos:start="1371:43" pos:end="1371:46"><name pos:start="1371:43" pos:end="1371:46">arg2</name></expr></argument>, <argument pos:start="1371:49" pos:end="1371:49"><expr pos:start="1371:49" pos:end="1371:49"><literal type="number" pos:start="1371:49" pos:end="1371:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1373:13" pos:end="1373:58"><expr pos:start="1373:13" pos:end="1373:57"><name pos:start="1373:13" pos:end="1373:25"><name pos:start="1373:13" pos:end="1373:16">rlim</name><operator pos:start="1373:17" pos:end="1373:17">.</operator><name pos:start="1373:18" pos:end="1373:25">rlim_cur</name></name> <operator pos:start="1373:27" pos:end="1373:27">=</operator> <call pos:start="1373:29" pos:end="1373:57"><name pos:start="1373:29" pos:end="1373:34">tswapl</name><argument_list pos:start="1373:35" pos:end="1373:57">(<argument pos:start="1373:36" pos:end="1373:56"><expr pos:start="1373:36" pos:end="1373:56"><name pos:start="1373:36" pos:end="1373:56"><name pos:start="1373:36" pos:end="1373:46">target_rlim</name><operator pos:start="1373:47" pos:end="1373:48">-&gt;</operator><name pos:start="1373:49" pos:end="1373:56">rlim_cur</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1375:13" pos:end="1375:58"><expr pos:start="1375:13" pos:end="1375:57"><name pos:start="1375:13" pos:end="1375:25"><name pos:start="1375:13" pos:end="1375:16">rlim</name><operator pos:start="1375:17" pos:end="1375:17">.</operator><name pos:start="1375:18" pos:end="1375:25">rlim_max</name></name> <operator pos:start="1375:27" pos:end="1375:27">=</operator> <call pos:start="1375:29" pos:end="1375:57"><name pos:start="1375:29" pos:end="1375:34">tswapl</name><argument_list pos:start="1375:35" pos:end="1375:57">(<argument pos:start="1375:36" pos:end="1375:56"><expr pos:start="1375:36" pos:end="1375:56"><name pos:start="1375:36" pos:end="1375:56"><name pos:start="1375:36" pos:end="1375:46">target_rlim</name><operator pos:start="1375:47" pos:end="1375:48">-&gt;</operator><name pos:start="1375:49" pos:end="1375:56">rlim_max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1377:13" pos:end="1377:53"><expr pos:start="1377:13" pos:end="1377:52"><call pos:start="1377:13" pos:end="1377:52"><name pos:start="1377:13" pos:end="1377:30">unlock_user_struct</name><argument_list pos:start="1377:31" pos:end="1377:52">(<argument pos:start="1377:32" pos:end="1377:42"><expr pos:start="1377:32" pos:end="1377:42"><name pos:start="1377:32" pos:end="1377:42">target_rlim</name></expr></argument>, <argument pos:start="1377:45" pos:end="1377:48"><expr pos:start="1377:45" pos:end="1377:48"><name pos:start="1377:45" pos:end="1377:48">arg2</name></expr></argument>, <argument pos:start="1377:51" pos:end="1377:51"><expr pos:start="1377:51" pos:end="1377:51"><literal type="number" pos:start="1377:51" pos:end="1377:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1379:13" pos:end="1379:56"><expr pos:start="1379:13" pos:end="1379:55"><name pos:start="1379:13" pos:end="1379:15">ret</name> <operator pos:start="1379:17" pos:end="1379:17">=</operator> <call pos:start="1379:19" pos:end="1379:55"><name pos:start="1379:19" pos:end="1379:27">get_errno</name><argument_list pos:start="1379:28" pos:end="1379:55">(<argument pos:start="1379:29" pos:end="1379:54"><expr pos:start="1379:29" pos:end="1379:54"><call pos:start="1379:29" pos:end="1379:54"><name pos:start="1379:29" pos:end="1379:37">setrlimit</name><argument_list pos:start="1379:38" pos:end="1379:54">(<argument pos:start="1379:39" pos:end="1379:46"><expr pos:start="1379:39" pos:end="1379:46"><name pos:start="1379:39" pos:end="1379:46">resource</name></expr></argument>, <argument pos:start="1379:49" pos:end="1379:53"><expr pos:start="1379:49" pos:end="1379:53"><operator pos:start="1379:49" pos:end="1379:49">&amp;</operator><name pos:start="1379:50" pos:end="1379:53">rlim</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1383:9" pos:end="1383:14">break;</break>

    <case pos:start="1385:5" pos:end="1385:29">case <expr pos:start="1385:10" pos:end="1385:28"><name pos:start="1385:10" pos:end="1385:28">TARGET_NR_getrlimit</name></expr>:</case>

        <block pos:start="1387:9" pos:end="1413:9">{<block_content pos:start="1391:13" pos:end="1411:13">

            <comment type="block" pos:start="1389:13" pos:end="1389:41">/* XXX: convert resource ? */</comment>

            <decl_stmt pos:start="1391:13" pos:end="1391:32"><decl pos:start="1391:13" pos:end="1391:31"><type pos:start="1391:13" pos:end="1391:15"><name pos:start="1391:13" pos:end="1391:15">int</name></type> <name pos:start="1391:17" pos:end="1391:24">resource</name> <init pos:start="1391:26" pos:end="1391:31">= <expr pos:start="1391:28" pos:end="1391:31"><name pos:start="1391:28" pos:end="1391:31">arg1</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1393:13" pos:end="1393:46"><decl pos:start="1393:13" pos:end="1393:45"><type pos:start="1393:13" pos:end="1393:34"><name pos:start="1393:13" pos:end="1393:32"><name pos:start="1393:13" pos:end="1393:18">struct</name> <name pos:start="1393:20" pos:end="1393:32">target_rlimit</name></name> <modifier pos:start="1393:34" pos:end="1393:34">*</modifier></type><name pos:start="1393:35" pos:end="1393:45">target_rlim</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1395:13" pos:end="1395:31"><decl pos:start="1395:13" pos:end="1395:30"><type pos:start="1395:13" pos:end="1395:25"><name pos:start="1395:13" pos:end="1395:25"><name pos:start="1395:13" pos:end="1395:18">struct</name> <name pos:start="1395:20" pos:end="1395:25">rlimit</name></name></type> <name pos:start="1395:27" pos:end="1395:30">rlim</name></decl>;</decl_stmt>

           

            <expr_stmt pos:start="1399:13" pos:end="1399:56"><expr pos:start="1399:13" pos:end="1399:55"><name pos:start="1399:13" pos:end="1399:15">ret</name> <operator pos:start="1399:17" pos:end="1399:17">=</operator> <call pos:start="1399:19" pos:end="1399:55"><name pos:start="1399:19" pos:end="1399:27">get_errno</name><argument_list pos:start="1399:28" pos:end="1399:55">(<argument pos:start="1399:29" pos:end="1399:54"><expr pos:start="1399:29" pos:end="1399:54"><call pos:start="1399:29" pos:end="1399:54"><name pos:start="1399:29" pos:end="1399:37">getrlimit</name><argument_list pos:start="1399:38" pos:end="1399:54">(<argument pos:start="1399:39" pos:end="1399:46"><expr pos:start="1399:39" pos:end="1399:46"><name pos:start="1399:39" pos:end="1399:46">resource</name></expr></argument>, <argument pos:start="1399:49" pos:end="1399:53"><expr pos:start="1399:49" pos:end="1399:53"><operator pos:start="1399:49" pos:end="1399:49">&amp;</operator><name pos:start="1399:50" pos:end="1399:53">rlim</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1401:13" pos:end="1411:13"><if pos:start="1401:13" pos:end="1411:13">if <condition pos:start="1401:16" pos:end="1401:31">(<expr pos:start="1401:17" pos:end="1401:30"><operator pos:start="1401:17" pos:end="1401:17">!</operator><call pos:start="1401:18" pos:end="1401:30"><name pos:start="1401:18" pos:end="1401:25">is_error</name><argument_list pos:start="1401:26" pos:end="1401:30">(<argument pos:start="1401:27" pos:end="1401:29"><expr pos:start="1401:27" pos:end="1401:29"><name pos:start="1401:27" pos:end="1401:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1401:33" pos:end="1411:13">{<block_content pos:start="1403:17" pos:end="1409:57">

                <expr_stmt pos:start="1403:17" pos:end="1403:55"><expr pos:start="1403:17" pos:end="1403:54"><call pos:start="1403:17" pos:end="1403:54"><name pos:start="1403:17" pos:end="1403:32">lock_user_struct</name><argument_list pos:start="1403:33" pos:end="1403:54">(<argument pos:start="1403:34" pos:end="1403:44"><expr pos:start="1403:34" pos:end="1403:44"><name pos:start="1403:34" pos:end="1403:44">target_rlim</name></expr></argument>, <argument pos:start="1403:47" pos:end="1403:50"><expr pos:start="1403:47" pos:end="1403:50"><name pos:start="1403:47" pos:end="1403:50">arg2</name></expr></argument>, <argument pos:start="1403:53" pos:end="1403:53"><expr pos:start="1403:53" pos:end="1403:53"><literal type="number" pos:start="1403:53" pos:end="1403:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1405:17" pos:end="1405:62"><expr pos:start="1405:17" pos:end="1405:61"><name pos:start="1405:17" pos:end="1405:29"><name pos:start="1405:17" pos:end="1405:20">rlim</name><operator pos:start="1405:21" pos:end="1405:21">.</operator><name pos:start="1405:22" pos:end="1405:29">rlim_cur</name></name> <operator pos:start="1405:31" pos:end="1405:31">=</operator> <call pos:start="1405:33" pos:end="1405:61"><name pos:start="1405:33" pos:end="1405:38">tswapl</name><argument_list pos:start="1405:39" pos:end="1405:61">(<argument pos:start="1405:40" pos:end="1405:60"><expr pos:start="1405:40" pos:end="1405:60"><name pos:start="1405:40" pos:end="1405:60"><name pos:start="1405:40" pos:end="1405:50">target_rlim</name><operator pos:start="1405:51" pos:end="1405:52">-&gt;</operator><name pos:start="1405:53" pos:end="1405:60">rlim_cur</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1407:17" pos:end="1407:62"><expr pos:start="1407:17" pos:end="1407:61"><name pos:start="1407:17" pos:end="1407:29"><name pos:start="1407:17" pos:end="1407:20">rlim</name><operator pos:start="1407:21" pos:end="1407:21">.</operator><name pos:start="1407:22" pos:end="1407:29">rlim_max</name></name> <operator pos:start="1407:31" pos:end="1407:31">=</operator> <call pos:start="1407:33" pos:end="1407:61"><name pos:start="1407:33" pos:end="1407:38">tswapl</name><argument_list pos:start="1407:39" pos:end="1407:61">(<argument pos:start="1407:40" pos:end="1407:60"><expr pos:start="1407:40" pos:end="1407:60"><name pos:start="1407:40" pos:end="1407:60"><name pos:start="1407:40" pos:end="1407:50">target_rlim</name><operator pos:start="1407:51" pos:end="1407:52">-&gt;</operator><name pos:start="1407:53" pos:end="1407:60">rlim_max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1409:17" pos:end="1409:57"><expr pos:start="1409:17" pos:end="1409:56"><call pos:start="1409:17" pos:end="1409:56"><name pos:start="1409:17" pos:end="1409:34">unlock_user_struct</name><argument_list pos:start="1409:35" pos:end="1409:56">(<argument pos:start="1409:36" pos:end="1409:46"><expr pos:start="1409:36" pos:end="1409:46"><name pos:start="1409:36" pos:end="1409:46">target_rlim</name></expr></argument>, <argument pos:start="1409:49" pos:end="1409:52"><expr pos:start="1409:49" pos:end="1409:52"><name pos:start="1409:49" pos:end="1409:52">arg2</name></expr></argument>, <argument pos:start="1409:55" pos:end="1409:55"><expr pos:start="1409:55" pos:end="1409:55"><literal type="number" pos:start="1409:55" pos:end="1409:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1415:9" pos:end="1415:14">break;</break>

    <case pos:start="1417:5" pos:end="1417:29">case <expr pos:start="1417:10" pos:end="1417:28"><name pos:start="1417:10" pos:end="1417:28">TARGET_NR_getrusage</name></expr>:</case>

        <block pos:start="1419:9" pos:end="1431:9">{<block_content pos:start="1421:13" pos:end="1429:13">

            <decl_stmt pos:start="1421:13" pos:end="1421:33"><decl pos:start="1421:13" pos:end="1421:32"><type pos:start="1421:13" pos:end="1421:25"><name pos:start="1421:13" pos:end="1421:25"><name pos:start="1421:13" pos:end="1421:18">struct</name> <name pos:start="1421:20" pos:end="1421:25">rusage</name></name></type> <name pos:start="1421:27" pos:end="1421:32">rusage</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1423:13" pos:end="1423:54"><expr pos:start="1423:13" pos:end="1423:53"><name pos:start="1423:13" pos:end="1423:15">ret</name> <operator pos:start="1423:17" pos:end="1423:17">=</operator> <call pos:start="1423:19" pos:end="1423:53"><name pos:start="1423:19" pos:end="1423:27">get_errno</name><argument_list pos:start="1423:28" pos:end="1423:53">(<argument pos:start="1423:29" pos:end="1423:52"><expr pos:start="1423:29" pos:end="1423:52"><call pos:start="1423:29" pos:end="1423:52"><name pos:start="1423:29" pos:end="1423:37">getrusage</name><argument_list pos:start="1423:38" pos:end="1423:52">(<argument pos:start="1423:39" pos:end="1423:42"><expr pos:start="1423:39" pos:end="1423:42"><name pos:start="1423:39" pos:end="1423:42">arg1</name></expr></argument>, <argument pos:start="1423:45" pos:end="1423:51"><expr pos:start="1423:45" pos:end="1423:51"><operator pos:start="1423:45" pos:end="1423:45">&amp;</operator><name pos:start="1423:46" pos:end="1423:51">rusage</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1425:13" pos:end="1429:13"><if pos:start="1425:13" pos:end="1429:13">if <condition pos:start="1425:16" pos:end="1425:31">(<expr pos:start="1425:17" pos:end="1425:30"><operator pos:start="1425:17" pos:end="1425:17">!</operator><call pos:start="1425:18" pos:end="1425:30"><name pos:start="1425:18" pos:end="1425:25">is_error</name><argument_list pos:start="1425:26" pos:end="1425:30">(<argument pos:start="1425:27" pos:end="1425:29"><expr pos:start="1425:27" pos:end="1425:29"><name pos:start="1425:27" pos:end="1425:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1425:33" pos:end="1429:13">{<block_content pos:start="1427:17" pos:end="1427:53">

                <expr_stmt pos:start="1427:17" pos:end="1427:53"><expr pos:start="1427:17" pos:end="1427:52"><call pos:start="1427:17" pos:end="1427:52"><name pos:start="1427:17" pos:end="1427:37">host_to_target_rusage</name><argument_list pos:start="1427:38" pos:end="1427:52">(<argument pos:start="1427:39" pos:end="1427:42"><expr pos:start="1427:39" pos:end="1427:42"><name pos:start="1427:39" pos:end="1427:42">arg2</name></expr></argument>, <argument pos:start="1427:45" pos:end="1427:51"><expr pos:start="1427:45" pos:end="1427:51"><operator pos:start="1427:45" pos:end="1427:45">&amp;</operator><name pos:start="1427:46" pos:end="1427:51">rusage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1433:9" pos:end="1433:14">break;</break>

    <case pos:start="1435:5" pos:end="1435:32">case <expr pos:start="1435:10" pos:end="1435:31"><name pos:start="1435:10" pos:end="1435:31">TARGET_NR_gettimeofday</name></expr>:</case>

        <block pos:start="1437:9" pos:end="1449:9">{<block_content pos:start="1439:13" pos:end="1447:13">

            <decl_stmt pos:start="1439:13" pos:end="1439:30"><decl pos:start="1439:13" pos:end="1439:29"><type pos:start="1439:13" pos:end="1439:26"><name pos:start="1439:13" pos:end="1439:26"><name pos:start="1439:13" pos:end="1439:18">struct</name> <name pos:start="1439:20" pos:end="1439:26">timeval</name></name></type> <name pos:start="1439:28" pos:end="1439:29">tv</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1441:13" pos:end="1441:53"><expr pos:start="1441:13" pos:end="1441:52"><name pos:start="1441:13" pos:end="1441:15">ret</name> <operator pos:start="1441:17" pos:end="1441:17">=</operator> <call pos:start="1441:19" pos:end="1441:52"><name pos:start="1441:19" pos:end="1441:27">get_errno</name><argument_list pos:start="1441:28" pos:end="1441:52">(<argument pos:start="1441:29" pos:end="1441:51"><expr pos:start="1441:29" pos:end="1441:51"><call pos:start="1441:29" pos:end="1441:51"><name pos:start="1441:29" pos:end="1441:40">gettimeofday</name><argument_list pos:start="1441:41" pos:end="1441:51">(<argument pos:start="1441:42" pos:end="1441:44"><expr pos:start="1441:42" pos:end="1441:44"><operator pos:start="1441:42" pos:end="1441:42">&amp;</operator><name pos:start="1441:43" pos:end="1441:44">tv</name></expr></argument>, <argument pos:start="1441:47" pos:end="1441:50"><expr pos:start="1441:47" pos:end="1441:50"><name pos:start="1441:47" pos:end="1441:50">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1443:13" pos:end="1447:13"><if pos:start="1443:13" pos:end="1447:13">if <condition pos:start="1443:16" pos:end="1443:31">(<expr pos:start="1443:17" pos:end="1443:30"><operator pos:start="1443:17" pos:end="1443:17">!</operator><call pos:start="1443:18" pos:end="1443:30"><name pos:start="1443:18" pos:end="1443:25">is_error</name><argument_list pos:start="1443:26" pos:end="1443:30">(<argument pos:start="1443:27" pos:end="1443:29"><expr pos:start="1443:27" pos:end="1443:29"><name pos:start="1443:27" pos:end="1443:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1443:33" pos:end="1447:13">{<block_content pos:start="1445:17" pos:end="1445:50">

                <expr_stmt pos:start="1445:17" pos:end="1445:50"><expr pos:start="1445:17" pos:end="1445:49"><call pos:start="1445:17" pos:end="1445:49"><name pos:start="1445:17" pos:end="1445:38">host_to_target_timeval</name><argument_list pos:start="1445:39" pos:end="1445:49">(<argument pos:start="1445:40" pos:end="1445:43"><expr pos:start="1445:40" pos:end="1445:43"><name pos:start="1445:40" pos:end="1445:43">arg1</name></expr></argument>, <argument pos:start="1445:46" pos:end="1445:48"><expr pos:start="1445:46" pos:end="1445:48"><operator pos:start="1445:46" pos:end="1445:46">&amp;</operator><name pos:start="1445:47" pos:end="1445:48">tv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1451:9" pos:end="1451:14">break;</break>

    <case pos:start="1453:5" pos:end="1453:32">case <expr pos:start="1453:10" pos:end="1453:31"><name pos:start="1453:10" pos:end="1453:31">TARGET_NR_settimeofday</name></expr>:</case>

        <block pos:start="1455:9" pos:end="1463:9">{<block_content pos:start="1457:13" pos:end="1461:53">

            <decl_stmt pos:start="1457:13" pos:end="1457:30"><decl pos:start="1457:13" pos:end="1457:29"><type pos:start="1457:13" pos:end="1457:26"><name pos:start="1457:13" pos:end="1457:26"><name pos:start="1457:13" pos:end="1457:18">struct</name> <name pos:start="1457:20" pos:end="1457:26">timeval</name></name></type> <name pos:start="1457:28" pos:end="1457:29">tv</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1459:13" pos:end="1459:46"><expr pos:start="1459:13" pos:end="1459:45"><call pos:start="1459:13" pos:end="1459:45"><name pos:start="1459:13" pos:end="1459:34">target_to_host_timeval</name><argument_list pos:start="1459:35" pos:end="1459:45">(<argument pos:start="1459:36" pos:end="1459:38"><expr pos:start="1459:36" pos:end="1459:38"><operator pos:start="1459:36" pos:end="1459:36">&amp;</operator><name pos:start="1459:37" pos:end="1459:38">tv</name></expr></argument>, <argument pos:start="1459:41" pos:end="1459:44"><expr pos:start="1459:41" pos:end="1459:44"><name pos:start="1459:41" pos:end="1459:44">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1461:13" pos:end="1461:53"><expr pos:start="1461:13" pos:end="1461:52"><name pos:start="1461:13" pos:end="1461:15">ret</name> <operator pos:start="1461:17" pos:end="1461:17">=</operator> <call pos:start="1461:19" pos:end="1461:52"><name pos:start="1461:19" pos:end="1461:27">get_errno</name><argument_list pos:start="1461:28" pos:end="1461:52">(<argument pos:start="1461:29" pos:end="1461:51"><expr pos:start="1461:29" pos:end="1461:51"><call pos:start="1461:29" pos:end="1461:51"><name pos:start="1461:29" pos:end="1461:40">settimeofday</name><argument_list pos:start="1461:41" pos:end="1461:51">(<argument pos:start="1461:42" pos:end="1461:44"><expr pos:start="1461:42" pos:end="1461:44"><operator pos:start="1461:42" pos:end="1461:42">&amp;</operator><name pos:start="1461:43" pos:end="1461:44">tv</name></expr></argument>, <argument pos:start="1461:47" pos:end="1461:50"><expr pos:start="1461:47" pos:end="1461:50"><name pos:start="1461:47" pos:end="1461:50">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1465:9" pos:end="1468:0">break;</break>

<cpp:ifdef pos:start="1467:1" pos:end="1467:23">#<cpp:directive pos:start="1467:2" pos:end="1467:6">ifdef</cpp:directive> <name pos:start="1467:8" pos:end="1467:23">TARGET_NR_select</name></cpp:ifdef>

    <case pos:start="1469:5" pos:end="1469:26">case <expr pos:start="1469:10" pos:end="1469:25"><name pos:start="1469:10" pos:end="1469:25">TARGET_NR_select</name></expr>:</case>

        <block pos:start="1471:9" pos:end="1497:9">{<block_content pos:start="1473:13" pos:end="1495:55">

            <decl_stmt pos:start="1473:13" pos:end="1473:46"><decl pos:start="1473:13" pos:end="1473:45"><type pos:start="1473:13" pos:end="1473:42"><name pos:start="1473:13" pos:end="1473:40"><name pos:start="1473:13" pos:end="1473:18">struct</name> <name pos:start="1473:20" pos:end="1473:40">target_sel_arg_struct</name></name> <modifier pos:start="1473:42" pos:end="1473:42">*</modifier></type><name pos:start="1473:43" pos:end="1473:45">sel</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1475:13" pos:end="1475:45"><decl pos:start="1475:13" pos:end="1475:28"><type pos:start="1475:13" pos:end="1475:24"><name pos:start="1475:13" pos:end="1475:24">target_ulong</name></type> <name pos:start="1475:26" pos:end="1475:28">inp</name></decl>, <decl pos:start="1475:31" pos:end="1475:34"><type ref="prev" pos:start="1475:13" pos:end="1475:24"/><name pos:start="1475:31" pos:end="1475:34">outp</name></decl>, <decl pos:start="1475:37" pos:end="1475:39"><type ref="prev" pos:start="1475:13" pos:end="1475:24"/><name pos:start="1475:37" pos:end="1475:39">exp</name></decl>, <decl pos:start="1475:42" pos:end="1475:44"><type ref="prev" pos:start="1475:13" pos:end="1475:24"/><name pos:start="1475:42" pos:end="1475:44">tvp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1477:13" pos:end="1477:22"><decl pos:start="1477:13" pos:end="1477:21"><type pos:start="1477:13" pos:end="1477:16"><name pos:start="1477:13" pos:end="1477:16">long</name></type> <name pos:start="1477:18" pos:end="1477:21">nsel</name></decl>;</decl_stmt>



            <expr_stmt pos:start="1481:13" pos:end="1481:43"><expr pos:start="1481:13" pos:end="1481:42"><call pos:start="1481:13" pos:end="1481:42"><name pos:start="1481:13" pos:end="1481:28">lock_user_struct</name><argument_list pos:start="1481:29" pos:end="1481:42">(<argument pos:start="1481:30" pos:end="1481:32"><expr pos:start="1481:30" pos:end="1481:32"><name pos:start="1481:30" pos:end="1481:32">sel</name></expr></argument>, <argument pos:start="1481:35" pos:end="1481:38"><expr pos:start="1481:35" pos:end="1481:38"><name pos:start="1481:35" pos:end="1481:38">arg1</name></expr></argument>, <argument pos:start="1481:41" pos:end="1481:41"><expr pos:start="1481:41" pos:end="1481:41"><literal type="number" pos:start="1481:41" pos:end="1481:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1483:13" pos:end="1483:34"><expr pos:start="1483:13" pos:end="1483:33"><name pos:start="1483:13" pos:end="1483:16">nsel</name> <operator pos:start="1483:18" pos:end="1483:18">=</operator> <call pos:start="1483:20" pos:end="1483:33"><name pos:start="1483:20" pos:end="1483:25">tswapl</name><argument_list pos:start="1483:26" pos:end="1483:33">(<argument pos:start="1483:27" pos:end="1483:32"><expr pos:start="1483:27" pos:end="1483:32"><name pos:start="1483:27" pos:end="1483:32"><name pos:start="1483:27" pos:end="1483:29">sel</name><operator pos:start="1483:30" pos:end="1483:31">-&gt;</operator><name pos:start="1483:32" pos:end="1483:32">n</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1485:13" pos:end="1485:35"><expr pos:start="1485:13" pos:end="1485:34"><name pos:start="1485:13" pos:end="1485:15">inp</name> <operator pos:start="1485:17" pos:end="1485:17">=</operator> <call pos:start="1485:19" pos:end="1485:34"><name pos:start="1485:19" pos:end="1485:24">tswapl</name><argument_list pos:start="1485:25" pos:end="1485:34">(<argument pos:start="1485:26" pos:end="1485:33"><expr pos:start="1485:26" pos:end="1485:33"><name pos:start="1485:26" pos:end="1485:33"><name pos:start="1485:26" pos:end="1485:28">sel</name><operator pos:start="1485:29" pos:end="1485:30">-&gt;</operator><name pos:start="1485:31" pos:end="1485:33">inp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1487:13" pos:end="1487:37"><expr pos:start="1487:13" pos:end="1487:36"><name pos:start="1487:13" pos:end="1487:16">outp</name> <operator pos:start="1487:18" pos:end="1487:18">=</operator> <call pos:start="1487:20" pos:end="1487:36"><name pos:start="1487:20" pos:end="1487:25">tswapl</name><argument_list pos:start="1487:26" pos:end="1487:36">(<argument pos:start="1487:27" pos:end="1487:35"><expr pos:start="1487:27" pos:end="1487:35"><name pos:start="1487:27" pos:end="1487:35"><name pos:start="1487:27" pos:end="1487:29">sel</name><operator pos:start="1487:30" pos:end="1487:31">-&gt;</operator><name pos:start="1487:32" pos:end="1487:35">outp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1489:13" pos:end="1489:35"><expr pos:start="1489:13" pos:end="1489:34"><name pos:start="1489:13" pos:end="1489:15">exp</name> <operator pos:start="1489:17" pos:end="1489:17">=</operator> <call pos:start="1489:19" pos:end="1489:34"><name pos:start="1489:19" pos:end="1489:24">tswapl</name><argument_list pos:start="1489:25" pos:end="1489:34">(<argument pos:start="1489:26" pos:end="1489:33"><expr pos:start="1489:26" pos:end="1489:33"><name pos:start="1489:26" pos:end="1489:33"><name pos:start="1489:26" pos:end="1489:28">sel</name><operator pos:start="1489:29" pos:end="1489:30">-&gt;</operator><name pos:start="1489:31" pos:end="1489:33">exp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1491:13" pos:end="1491:35"><expr pos:start="1491:13" pos:end="1491:34"><name pos:start="1491:13" pos:end="1491:15">tvp</name> <operator pos:start="1491:17" pos:end="1491:17">=</operator> <call pos:start="1491:19" pos:end="1491:34"><name pos:start="1491:19" pos:end="1491:24">tswapl</name><argument_list pos:start="1491:25" pos:end="1491:34">(<argument pos:start="1491:26" pos:end="1491:33"><expr pos:start="1491:26" pos:end="1491:33"><name pos:start="1491:26" pos:end="1491:33"><name pos:start="1491:26" pos:end="1491:28">sel</name><operator pos:start="1491:29" pos:end="1491:30">-&gt;</operator><name pos:start="1491:31" pos:end="1491:33">tvp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1493:13" pos:end="1493:45"><expr pos:start="1493:13" pos:end="1493:44"><call pos:start="1493:13" pos:end="1493:44"><name pos:start="1493:13" pos:end="1493:30">unlock_user_struct</name><argument_list pos:start="1493:31" pos:end="1493:44">(<argument pos:start="1493:32" pos:end="1493:34"><expr pos:start="1493:32" pos:end="1493:34"><name pos:start="1493:32" pos:end="1493:34">sel</name></expr></argument>, <argument pos:start="1493:37" pos:end="1493:40"><expr pos:start="1493:37" pos:end="1493:40"><name pos:start="1493:37" pos:end="1493:40">arg1</name></expr></argument>, <argument pos:start="1493:43" pos:end="1493:43"><expr pos:start="1493:43" pos:end="1493:43"><literal type="number" pos:start="1493:43" pos:end="1493:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1495:13" pos:end="1495:55"><expr pos:start="1495:13" pos:end="1495:54"><name pos:start="1495:13" pos:end="1495:15">ret</name> <operator pos:start="1495:17" pos:end="1495:17">=</operator> <call pos:start="1495:19" pos:end="1495:54"><name pos:start="1495:19" pos:end="1495:27">do_select</name><argument_list pos:start="1495:28" pos:end="1495:54">(<argument pos:start="1495:29" pos:end="1495:32"><expr pos:start="1495:29" pos:end="1495:32"><name pos:start="1495:29" pos:end="1495:32">nsel</name></expr></argument>, <argument pos:start="1495:35" pos:end="1495:37"><expr pos:start="1495:35" pos:end="1495:37"><name pos:start="1495:35" pos:end="1495:37">inp</name></expr></argument>, <argument pos:start="1495:40" pos:end="1495:43"><expr pos:start="1495:40" pos:end="1495:43"><name pos:start="1495:40" pos:end="1495:43">outp</name></expr></argument>, <argument pos:start="1495:46" pos:end="1495:48"><expr pos:start="1495:46" pos:end="1495:48"><name pos:start="1495:46" pos:end="1495:48">exp</name></expr></argument>, <argument pos:start="1495:51" pos:end="1495:53"><expr pos:start="1495:51" pos:end="1495:53"><name pos:start="1495:51" pos:end="1495:53">tvp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1499:9" pos:end="1502:0">break;</break>

<cpp:endif pos:start="1501:1" pos:end="1501:6">#<cpp:directive pos:start="1501:2" pos:end="1501:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1503:5" pos:end="1503:27">case <expr pos:start="1503:10" pos:end="1503:26"><name pos:start="1503:10" pos:end="1503:26">TARGET_NR_symlink</name></expr>:</case>

        <block pos:start="1505:9" pos:end="1519:9">{<block_content pos:start="1507:13" pos:end="1517:36">

            <decl_stmt pos:start="1507:13" pos:end="1507:21"><decl pos:start="1507:13" pos:end="1507:20"><type pos:start="1507:13" pos:end="1507:18"><name pos:start="1507:13" pos:end="1507:16">void</name> <modifier pos:start="1507:18" pos:end="1507:18">*</modifier></type><name pos:start="1507:19" pos:end="1507:20">p2</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1509:13" pos:end="1509:39"><expr pos:start="1509:13" pos:end="1509:38"><name pos:start="1509:13" pos:end="1509:13">p</name> <operator pos:start="1509:15" pos:end="1509:15">=</operator> <call pos:start="1509:17" pos:end="1509:38"><name pos:start="1509:17" pos:end="1509:32">lock_user_string</name><argument_list pos:start="1509:33" pos:end="1509:38">(<argument pos:start="1509:34" pos:end="1509:37"><expr pos:start="1509:34" pos:end="1509:37"><name pos:start="1509:34" pos:end="1509:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1511:13" pos:end="1511:40"><expr pos:start="1511:13" pos:end="1511:39"><name pos:start="1511:13" pos:end="1511:14">p2</name> <operator pos:start="1511:16" pos:end="1511:16">=</operator> <call pos:start="1511:18" pos:end="1511:39"><name pos:start="1511:18" pos:end="1511:33">lock_user_string</name><argument_list pos:start="1511:34" pos:end="1511:39">(<argument pos:start="1511:35" pos:end="1511:38"><expr pos:start="1511:35" pos:end="1511:38"><name pos:start="1511:35" pos:end="1511:38">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1513:13" pos:end="1513:44"><expr pos:start="1513:13" pos:end="1513:43"><name pos:start="1513:13" pos:end="1513:15">ret</name> <operator pos:start="1513:17" pos:end="1513:17">=</operator> <call pos:start="1513:19" pos:end="1513:43"><name pos:start="1513:19" pos:end="1513:27">get_errno</name><argument_list pos:start="1513:28" pos:end="1513:43">(<argument pos:start="1513:29" pos:end="1513:42"><expr pos:start="1513:29" pos:end="1513:42"><call pos:start="1513:29" pos:end="1513:42"><name pos:start="1513:29" pos:end="1513:35">symlink</name><argument_list pos:start="1513:36" pos:end="1513:42">(<argument pos:start="1513:37" pos:end="1513:37"><expr pos:start="1513:37" pos:end="1513:37"><name pos:start="1513:37" pos:end="1513:37">p</name></expr></argument>, <argument pos:start="1513:40" pos:end="1513:41"><expr pos:start="1513:40" pos:end="1513:41"><name pos:start="1513:40" pos:end="1513:41">p2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1515:13" pos:end="1515:37"><expr pos:start="1515:13" pos:end="1515:36"><call pos:start="1515:13" pos:end="1515:36"><name pos:start="1515:13" pos:end="1515:23">unlock_user</name><argument_list pos:start="1515:24" pos:end="1515:36">(<argument pos:start="1515:25" pos:end="1515:26"><expr pos:start="1515:25" pos:end="1515:26"><name pos:start="1515:25" pos:end="1515:26">p2</name></expr></argument>, <argument pos:start="1515:29" pos:end="1515:32"><expr pos:start="1515:29" pos:end="1515:32"><name pos:start="1515:29" pos:end="1515:32">arg2</name></expr></argument>, <argument pos:start="1515:35" pos:end="1515:35"><expr pos:start="1515:35" pos:end="1515:35"><literal type="number" pos:start="1515:35" pos:end="1515:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1517:13" pos:end="1517:36"><expr pos:start="1517:13" pos:end="1517:35"><call pos:start="1517:13" pos:end="1517:35"><name pos:start="1517:13" pos:end="1517:23">unlock_user</name><argument_list pos:start="1517:24" pos:end="1517:35">(<argument pos:start="1517:25" pos:end="1517:25"><expr pos:start="1517:25" pos:end="1517:25"><name pos:start="1517:25" pos:end="1517:25">p</name></expr></argument>, <argument pos:start="1517:28" pos:end="1517:31"><expr pos:start="1517:28" pos:end="1517:31"><name pos:start="1517:28" pos:end="1517:31">arg1</name></expr></argument>, <argument pos:start="1517:34" pos:end="1517:34"><expr pos:start="1517:34" pos:end="1517:34"><literal type="number" pos:start="1517:34" pos:end="1517:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1521:9" pos:end="1524:0">break;</break>

<cpp:ifdef pos:start="1523:1" pos:end="1523:25">#<cpp:directive pos:start="1523:2" pos:end="1523:6">ifdef</cpp:directive> <name pos:start="1523:8" pos:end="1523:25">TARGET_NR_oldlstat</name></cpp:ifdef>

    <case pos:start="1525:5" pos:end="1525:28">case <expr pos:start="1525:10" pos:end="1525:27"><name pos:start="1525:10" pos:end="1525:27">TARGET_NR_oldlstat</name></expr>:</case>

        <goto pos:start="1527:9" pos:end="1530:0">goto <name pos:start="1527:14" pos:end="1527:26">unimplemented</name>;</goto>

<cpp:endif pos:start="1529:1" pos:end="1529:6">#<cpp:directive pos:start="1529:2" pos:end="1529:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1531:5" pos:end="1531:28">case <expr pos:start="1531:10" pos:end="1531:27"><name pos:start="1531:10" pos:end="1531:27">TARGET_NR_readlink</name></expr>:</case>

        <block pos:start="1533:9" pos:end="1547:9">{<block_content pos:start="1535:13" pos:end="1545:36">

            <decl_stmt pos:start="1535:13" pos:end="1535:21"><decl pos:start="1535:13" pos:end="1535:20"><type pos:start="1535:13" pos:end="1535:18"><name pos:start="1535:13" pos:end="1535:16">void</name> <modifier pos:start="1535:18" pos:end="1535:18">*</modifier></type><name pos:start="1535:19" pos:end="1535:20">p2</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1537:13" pos:end="1537:39"><expr pos:start="1537:13" pos:end="1537:38"><name pos:start="1537:13" pos:end="1537:13">p</name> <operator pos:start="1537:15" pos:end="1537:15">=</operator> <call pos:start="1537:17" pos:end="1537:38"><name pos:start="1537:17" pos:end="1537:32">lock_user_string</name><argument_list pos:start="1537:33" pos:end="1537:38">(<argument pos:start="1537:34" pos:end="1537:37"><expr pos:start="1537:34" pos:end="1537:37"><name pos:start="1537:34" pos:end="1537:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1539:13" pos:end="1539:42"><expr pos:start="1539:13" pos:end="1539:41"><name pos:start="1539:13" pos:end="1539:14">p2</name> <operator pos:start="1539:16" pos:end="1539:16">=</operator> <call pos:start="1539:18" pos:end="1539:41"><name pos:start="1539:18" pos:end="1539:26">lock_user</name><argument_list pos:start="1539:27" pos:end="1539:41">(<argument pos:start="1539:28" pos:end="1539:31"><expr pos:start="1539:28" pos:end="1539:31"><name pos:start="1539:28" pos:end="1539:31">arg2</name></expr></argument>, <argument pos:start="1539:34" pos:end="1539:37"><expr pos:start="1539:34" pos:end="1539:37"><name pos:start="1539:34" pos:end="1539:37">arg3</name></expr></argument>, <argument pos:start="1539:40" pos:end="1539:40"><expr pos:start="1539:40" pos:end="1539:40"><literal type="number" pos:start="1539:40" pos:end="1539:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1541:13" pos:end="1541:57"><expr pos:start="1541:13" pos:end="1541:56"><name pos:start="1541:13" pos:end="1541:15">ret</name> <operator pos:start="1541:17" pos:end="1541:17">=</operator> <call pos:start="1541:19" pos:end="1541:56"><name pos:start="1541:19" pos:end="1541:27">get_errno</name><argument_list pos:start="1541:28" pos:end="1541:56">(<argument pos:start="1541:29" pos:end="1541:55"><expr pos:start="1541:29" pos:end="1541:55"><call pos:start="1541:29" pos:end="1541:55"><name pos:start="1541:29" pos:end="1541:36">readlink</name><argument_list pos:start="1541:37" pos:end="1541:55">(<argument pos:start="1541:38" pos:end="1541:44"><expr pos:start="1541:38" pos:end="1541:44"><call pos:start="1541:38" pos:end="1541:44"><name pos:start="1541:38" pos:end="1541:41">path</name><argument_list pos:start="1541:42" pos:end="1541:44">(<argument pos:start="1541:43" pos:end="1541:43"><expr pos:start="1541:43" pos:end="1541:43"><name pos:start="1541:43" pos:end="1541:43">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="1541:47" pos:end="1541:48"><expr pos:start="1541:47" pos:end="1541:48"><name pos:start="1541:47" pos:end="1541:48">p2</name></expr></argument>, <argument pos:start="1541:51" pos:end="1541:54"><expr pos:start="1541:51" pos:end="1541:54"><name pos:start="1541:51" pos:end="1541:54">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1543:13" pos:end="1543:39"><expr pos:start="1543:13" pos:end="1543:38"><call pos:start="1543:13" pos:end="1543:38"><name pos:start="1543:13" pos:end="1543:23">unlock_user</name><argument_list pos:start="1543:24" pos:end="1543:38">(<argument pos:start="1543:25" pos:end="1543:26"><expr pos:start="1543:25" pos:end="1543:26"><name pos:start="1543:25" pos:end="1543:26">p2</name></expr></argument>, <argument pos:start="1543:29" pos:end="1543:32"><expr pos:start="1543:29" pos:end="1543:32"><name pos:start="1543:29" pos:end="1543:32">arg2</name></expr></argument>, <argument pos:start="1543:35" pos:end="1543:37"><expr pos:start="1543:35" pos:end="1543:37"><name pos:start="1543:35" pos:end="1543:37">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1545:13" pos:end="1545:36"><expr pos:start="1545:13" pos:end="1545:35"><call pos:start="1545:13" pos:end="1545:35"><name pos:start="1545:13" pos:end="1545:23">unlock_user</name><argument_list pos:start="1545:24" pos:end="1545:35">(<argument pos:start="1545:25" pos:end="1545:25"><expr pos:start="1545:25" pos:end="1545:25"><name pos:start="1545:25" pos:end="1545:25">p</name></expr></argument>, <argument pos:start="1545:28" pos:end="1545:31"><expr pos:start="1545:28" pos:end="1545:31"><name pos:start="1545:28" pos:end="1545:31">arg1</name></expr></argument>, <argument pos:start="1545:34" pos:end="1545:34"><expr pos:start="1545:34" pos:end="1545:34"><literal type="number" pos:start="1545:34" pos:end="1545:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1549:9" pos:end="1552:0">break;</break>

<cpp:ifdef pos:start="1551:1" pos:end="1551:23">#<cpp:directive pos:start="1551:2" pos:end="1551:6">ifdef</cpp:directive> <name pos:start="1551:8" pos:end="1551:23">TARGET_NR_uselib</name></cpp:ifdef>

    <case pos:start="1553:5" pos:end="1553:26">case <expr pos:start="1553:10" pos:end="1553:25"><name pos:start="1553:10" pos:end="1553:25">TARGET_NR_uselib</name></expr>:</case>

        <goto pos:start="1555:9" pos:end="1560:0">goto <name pos:start="1555:14" pos:end="1555:26">unimplemented</name>;</goto>

<cpp:endif pos:start="1557:1" pos:end="1557:6">#<cpp:directive pos:start="1557:2" pos:end="1557:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1559:1" pos:end="1559:23">#<cpp:directive pos:start="1559:2" pos:end="1559:6">ifdef</cpp:directive> <name pos:start="1559:8" pos:end="1559:23">TARGET_NR_swapon</name></cpp:ifdef>

    <case pos:start="1561:5" pos:end="1561:26">case <expr pos:start="1561:10" pos:end="1561:25"><name pos:start="1561:10" pos:end="1561:25">TARGET_NR_swapon</name></expr>:</case>

        <expr_stmt pos:start="1563:9" pos:end="1563:35"><expr pos:start="1563:9" pos:end="1563:34"><name pos:start="1563:9" pos:end="1563:9">p</name> <operator pos:start="1563:11" pos:end="1563:11">=</operator> <call pos:start="1563:13" pos:end="1563:34"><name pos:start="1563:13" pos:end="1563:28">lock_user_string</name><argument_list pos:start="1563:29" pos:end="1563:34">(<argument pos:start="1563:30" pos:end="1563:33"><expr pos:start="1563:30" pos:end="1563:33"><name pos:start="1563:30" pos:end="1563:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1565:9" pos:end="1565:41"><expr pos:start="1565:9" pos:end="1565:40"><name pos:start="1565:9" pos:end="1565:11">ret</name> <operator pos:start="1565:13" pos:end="1565:13">=</operator> <call pos:start="1565:15" pos:end="1565:40"><name pos:start="1565:15" pos:end="1565:23">get_errno</name><argument_list pos:start="1565:24" pos:end="1565:40">(<argument pos:start="1565:25" pos:end="1565:39"><expr pos:start="1565:25" pos:end="1565:39"><call pos:start="1565:25" pos:end="1565:39"><name pos:start="1565:25" pos:end="1565:30">swapon</name><argument_list pos:start="1565:31" pos:end="1565:39">(<argument pos:start="1565:32" pos:end="1565:32"><expr pos:start="1565:32" pos:end="1565:32"><name pos:start="1565:32" pos:end="1565:32">p</name></expr></argument>, <argument pos:start="1565:35" pos:end="1565:38"><expr pos:start="1565:35" pos:end="1565:38"><name pos:start="1565:35" pos:end="1565:38">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1567:9" pos:end="1567:32"><expr pos:start="1567:9" pos:end="1567:31"><call pos:start="1567:9" pos:end="1567:31"><name pos:start="1567:9" pos:end="1567:19">unlock_user</name><argument_list pos:start="1567:20" pos:end="1567:31">(<argument pos:start="1567:21" pos:end="1567:21"><expr pos:start="1567:21" pos:end="1567:21"><name pos:start="1567:21" pos:end="1567:21">p</name></expr></argument>, <argument pos:start="1567:24" pos:end="1567:27"><expr pos:start="1567:24" pos:end="1567:27"><name pos:start="1567:24" pos:end="1567:27">arg1</name></expr></argument>, <argument pos:start="1567:30" pos:end="1567:30"><expr pos:start="1567:30" pos:end="1567:30"><literal type="number" pos:start="1567:30" pos:end="1567:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1569:9" pos:end="1572:0">break;</break>

<cpp:endif pos:start="1571:1" pos:end="1571:6">#<cpp:directive pos:start="1571:2" pos:end="1571:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1573:5" pos:end="1573:26">case <expr pos:start="1573:10" pos:end="1573:25"><name pos:start="1573:10" pos:end="1573:25">TARGET_NR_reboot</name></expr>:</case>

        <goto pos:start="1575:9" pos:end="1578:0">goto <name pos:start="1575:14" pos:end="1575:26">unimplemented</name>;</goto>

<cpp:ifdef pos:start="1577:1" pos:end="1577:24">#<cpp:directive pos:start="1577:2" pos:end="1577:6">ifdef</cpp:directive> <name pos:start="1577:8" pos:end="1577:24">TARGET_NR_readdir</name></cpp:ifdef>

    <case pos:start="1579:5" pos:end="1579:27">case <expr pos:start="1579:10" pos:end="1579:26"><name pos:start="1579:10" pos:end="1579:26">TARGET_NR_readdir</name></expr>:</case>

        <goto pos:start="1581:9" pos:end="1586:0">goto <name pos:start="1581:14" pos:end="1581:26">unimplemented</name>;</goto>

<cpp:endif pos:start="1583:1" pos:end="1583:6">#<cpp:directive pos:start="1583:2" pos:end="1583:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1585:1" pos:end="1585:21">#<cpp:directive pos:start="1585:2" pos:end="1585:6">ifdef</cpp:directive> <name pos:start="1585:8" pos:end="1585:21">TARGET_NR_mmap</name></cpp:ifdef>

    <case pos:start="1587:5" pos:end="1590:0">case <expr pos:start="1587:10" pos:end="1587:23"><name pos:start="1587:10" pos:end="1587:23">TARGET_NR_mmap</name></expr>:</case>

<cpp:if pos:start="1589:1" pos:end="1589:71">#<cpp:directive pos:start="1589:2" pos:end="1589:3">if</cpp:directive> <expr pos:start="1589:5" pos:end="1589:71"><call pos:start="1589:5" pos:end="1589:24"><name pos:start="1589:5" pos:end="1589:11">defined</name><argument_list pos:start="1589:12" pos:end="1589:24">(<argument pos:start="1589:13" pos:end="1589:23"><expr pos:start="1589:13" pos:end="1589:23"><name pos:start="1589:13" pos:end="1589:23">TARGET_I386</name></expr></argument>)</argument_list></call> <operator pos:start="1589:26" pos:end="1589:27">||</operator> <call pos:start="1589:29" pos:end="1589:47"><name pos:start="1589:29" pos:end="1589:35">defined</name><argument_list pos:start="1589:36" pos:end="1589:47">(<argument pos:start="1589:37" pos:end="1589:46"><expr pos:start="1589:37" pos:end="1589:46"><name pos:start="1589:37" pos:end="1589:46">TARGET_ARM</name></expr></argument>)</argument_list></call> <operator pos:start="1589:49" pos:end="1589:50">||</operator> <call pos:start="1589:52" pos:end="1589:71"><name pos:start="1589:52" pos:end="1589:58">defined</name><argument_list pos:start="1589:59" pos:end="1589:71">(<argument pos:start="1589:60" pos:end="1589:70"><expr pos:start="1589:60" pos:end="1589:70"><name pos:start="1589:60" pos:end="1589:70">TARGET_M68K</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <block pos:start="1591:9" pos:end="1622:0">{<block_content pos:start="1593:13" pos:end="1617:49">

            <decl_stmt pos:start="1593:13" pos:end="1593:28"><decl pos:start="1593:13" pos:end="1593:27"><type pos:start="1593:13" pos:end="1593:26"><name pos:start="1593:13" pos:end="1593:24">target_ulong</name> <modifier pos:start="1593:26" pos:end="1593:26">*</modifier></type><name pos:start="1593:27" pos:end="1593:27">v</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1595:13" pos:end="1595:48"><decl pos:start="1595:13" pos:end="1595:27"><type pos:start="1595:13" pos:end="1595:24"><name pos:start="1595:13" pos:end="1595:24">target_ulong</name></type> <name pos:start="1595:26" pos:end="1595:27">v1</name></decl>, <decl pos:start="1595:30" pos:end="1595:31"><type ref="prev" pos:start="1595:13" pos:end="1595:24"/><name pos:start="1595:30" pos:end="1595:31">v2</name></decl>, <decl pos:start="1595:34" pos:end="1595:35"><type ref="prev" pos:start="1595:13" pos:end="1595:24"/><name pos:start="1595:34" pos:end="1595:35">v3</name></decl>, <decl pos:start="1595:38" pos:end="1595:39"><type ref="prev" pos:start="1595:13" pos:end="1595:24"/><name pos:start="1595:38" pos:end="1595:39">v4</name></decl>, <decl pos:start="1595:42" pos:end="1595:43"><type ref="prev" pos:start="1595:13" pos:end="1595:24"/><name pos:start="1595:42" pos:end="1595:43">v5</name></decl>, <decl pos:start="1595:46" pos:end="1595:47"><type ref="prev" pos:start="1595:13" pos:end="1595:24"/><name pos:start="1595:46" pos:end="1595:47">v6</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1597:13" pos:end="1597:61"><expr pos:start="1597:13" pos:end="1597:60"><name pos:start="1597:13" pos:end="1597:13">v</name> <operator pos:start="1597:15" pos:end="1597:15">=</operator> <call pos:start="1597:17" pos:end="1597:60"><name pos:start="1597:17" pos:end="1597:25">lock_user</name><argument_list pos:start="1597:26" pos:end="1597:60">(<argument pos:start="1597:27" pos:end="1597:30"><expr pos:start="1597:27" pos:end="1597:30"><name pos:start="1597:27" pos:end="1597:30">arg1</name></expr></argument>, <argument pos:start="1597:33" pos:end="1597:56"><expr pos:start="1597:33" pos:end="1597:56"><literal type="number" pos:start="1597:33" pos:end="1597:33">6</literal> <operator pos:start="1597:35" pos:end="1597:35">*</operator> <sizeof pos:start="1597:37" pos:end="1597:56">sizeof<argument_list pos:start="1597:43" pos:end="1597:56">(<argument pos:start="1597:44" pos:end="1597:55"><expr pos:start="1597:44" pos:end="1597:55"><name pos:start="1597:44" pos:end="1597:55">target_ulong</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1597:59" pos:end="1597:59"><expr pos:start="1597:59" pos:end="1597:59"><literal type="number" pos:start="1597:59" pos:end="1597:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1599:13" pos:end="1599:30"><expr pos:start="1599:13" pos:end="1599:29"><name pos:start="1599:13" pos:end="1599:14">v1</name> <operator pos:start="1599:16" pos:end="1599:16">=</operator> <call pos:start="1599:18" pos:end="1599:29"><name pos:start="1599:18" pos:end="1599:23">tswapl</name><argument_list pos:start="1599:24" pos:end="1599:29">(<argument pos:start="1599:25" pos:end="1599:28"><expr pos:start="1599:25" pos:end="1599:28"><name pos:start="1599:25" pos:end="1599:28"><name pos:start="1599:25" pos:end="1599:25">v</name><index pos:start="1599:26" pos:end="1599:28">[<expr pos:start="1599:27" pos:end="1599:27"><literal type="number" pos:start="1599:27" pos:end="1599:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1601:13" pos:end="1601:30"><expr pos:start="1601:13" pos:end="1601:29"><name pos:start="1601:13" pos:end="1601:14">v2</name> <operator pos:start="1601:16" pos:end="1601:16">=</operator> <call pos:start="1601:18" pos:end="1601:29"><name pos:start="1601:18" pos:end="1601:23">tswapl</name><argument_list pos:start="1601:24" pos:end="1601:29">(<argument pos:start="1601:25" pos:end="1601:28"><expr pos:start="1601:25" pos:end="1601:28"><name pos:start="1601:25" pos:end="1601:28"><name pos:start="1601:25" pos:end="1601:25">v</name><index pos:start="1601:26" pos:end="1601:28">[<expr pos:start="1601:27" pos:end="1601:27"><literal type="number" pos:start="1601:27" pos:end="1601:27">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1603:13" pos:end="1603:30"><expr pos:start="1603:13" pos:end="1603:29"><name pos:start="1603:13" pos:end="1603:14">v3</name> <operator pos:start="1603:16" pos:end="1603:16">=</operator> <call pos:start="1603:18" pos:end="1603:29"><name pos:start="1603:18" pos:end="1603:23">tswapl</name><argument_list pos:start="1603:24" pos:end="1603:29">(<argument pos:start="1603:25" pos:end="1603:28"><expr pos:start="1603:25" pos:end="1603:28"><name pos:start="1603:25" pos:end="1603:28"><name pos:start="1603:25" pos:end="1603:25">v</name><index pos:start="1603:26" pos:end="1603:28">[<expr pos:start="1603:27" pos:end="1603:27"><literal type="number" pos:start="1603:27" pos:end="1603:27">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1605:13" pos:end="1605:30"><expr pos:start="1605:13" pos:end="1605:29"><name pos:start="1605:13" pos:end="1605:14">v4</name> <operator pos:start="1605:16" pos:end="1605:16">=</operator> <call pos:start="1605:18" pos:end="1605:29"><name pos:start="1605:18" pos:end="1605:23">tswapl</name><argument_list pos:start="1605:24" pos:end="1605:29">(<argument pos:start="1605:25" pos:end="1605:28"><expr pos:start="1605:25" pos:end="1605:28"><name pos:start="1605:25" pos:end="1605:28"><name pos:start="1605:25" pos:end="1605:25">v</name><index pos:start="1605:26" pos:end="1605:28">[<expr pos:start="1605:27" pos:end="1605:27"><literal type="number" pos:start="1605:27" pos:end="1605:27">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1607:13" pos:end="1607:30"><expr pos:start="1607:13" pos:end="1607:29"><name pos:start="1607:13" pos:end="1607:14">v5</name> <operator pos:start="1607:16" pos:end="1607:16">=</operator> <call pos:start="1607:18" pos:end="1607:29"><name pos:start="1607:18" pos:end="1607:23">tswapl</name><argument_list pos:start="1607:24" pos:end="1607:29">(<argument pos:start="1607:25" pos:end="1607:28"><expr pos:start="1607:25" pos:end="1607:28"><name pos:start="1607:25" pos:end="1607:28"><name pos:start="1607:25" pos:end="1607:25">v</name><index pos:start="1607:26" pos:end="1607:28">[<expr pos:start="1607:27" pos:end="1607:27"><literal type="number" pos:start="1607:27" pos:end="1607:27">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1609:13" pos:end="1609:30"><expr pos:start="1609:13" pos:end="1609:29"><name pos:start="1609:13" pos:end="1609:14">v6</name> <operator pos:start="1609:16" pos:end="1609:16">=</operator> <call pos:start="1609:18" pos:end="1609:29"><name pos:start="1609:18" pos:end="1609:23">tswapl</name><argument_list pos:start="1609:24" pos:end="1609:29">(<argument pos:start="1609:25" pos:end="1609:28"><expr pos:start="1609:25" pos:end="1609:28"><name pos:start="1609:25" pos:end="1609:28"><name pos:start="1609:25" pos:end="1609:25">v</name><index pos:start="1609:26" pos:end="1609:28">[<expr pos:start="1609:27" pos:end="1609:27"><literal type="number" pos:start="1609:27" pos:end="1609:27">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1611:13" pos:end="1611:36"><expr pos:start="1611:13" pos:end="1611:35"><call pos:start="1611:13" pos:end="1611:35"><name pos:start="1611:13" pos:end="1611:23">unlock_user</name><argument_list pos:start="1611:24" pos:end="1611:35">(<argument pos:start="1611:25" pos:end="1611:25"><expr pos:start="1611:25" pos:end="1611:25"><name pos:start="1611:25" pos:end="1611:25">v</name></expr></argument>, <argument pos:start="1611:28" pos:end="1611:31"><expr pos:start="1611:28" pos:end="1611:31"><name pos:start="1611:28" pos:end="1611:31">arg1</name></expr></argument>, <argument pos:start="1611:34" pos:end="1611:34"><expr pos:start="1611:34" pos:end="1611:34"><literal type="number" pos:start="1611:34" pos:end="1611:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1613:13" pos:end="1617:49"><expr pos:start="1613:13" pos:end="1617:48"><name pos:start="1613:13" pos:end="1613:15">ret</name> <operator pos:start="1613:17" pos:end="1613:17">=</operator> <call pos:start="1613:19" pos:end="1617:48"><name pos:start="1613:19" pos:end="1613:27">get_errno</name><argument_list pos:start="1613:28" pos:end="1617:48">(<argument pos:start="1613:29" pos:end="1617:47"><expr pos:start="1613:29" pos:end="1617:47"><call pos:start="1613:29" pos:end="1617:47"><name pos:start="1613:29" pos:end="1613:39">target_mmap</name><argument_list pos:start="1613:40" pos:end="1617:47">(<argument pos:start="1613:41" pos:end="1613:42"><expr pos:start="1613:41" pos:end="1613:42"><name pos:start="1613:41" pos:end="1613:42">v1</name></expr></argument>, <argument pos:start="1613:45" pos:end="1613:46"><expr pos:start="1613:45" pos:end="1613:46"><name pos:start="1613:45" pos:end="1613:46">v2</name></expr></argument>, <argument pos:start="1613:49" pos:end="1613:50"><expr pos:start="1613:49" pos:end="1613:50"><name pos:start="1613:49" pos:end="1613:50">v3</name></expr></argument>,

                                        <argument pos:start="1615:41" pos:end="1615:82"><expr pos:start="1615:41" pos:end="1615:82"><call pos:start="1615:41" pos:end="1615:82"><name pos:start="1615:41" pos:end="1615:62">target_to_host_bitmask</name><argument_list pos:start="1615:63" pos:end="1615:82">(<argument pos:start="1615:64" pos:end="1615:65"><expr pos:start="1615:64" pos:end="1615:65"><name pos:start="1615:64" pos:end="1615:65">v4</name></expr></argument>, <argument pos:start="1615:68" pos:end="1615:81"><expr pos:start="1615:68" pos:end="1615:81"><name pos:start="1615:68" pos:end="1615:81">mmap_flags_tbl</name></expr></argument>)</argument_list></call></expr></argument>,

                                        <argument pos:start="1617:41" pos:end="1617:42"><expr pos:start="1617:41" pos:end="1617:42"><name pos:start="1617:41" pos:end="1617:42">v5</name></expr></argument>, <argument pos:start="1617:45" pos:end="1617:46"><expr pos:start="1617:45" pos:end="1617:46"><name pos:start="1617:45" pos:end="1617:46">v6</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

<cpp:else pos:start="1621:1" pos:end="1621:5">#<cpp:directive pos:start="1621:2" pos:end="1621:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="1623:9" pos:end="1632:0"><expr pos:start="1623:9" pos:end="1629:42"><name pos:start="1623:9" pos:end="1623:11">ret</name> <operator pos:start="1623:13" pos:end="1623:13">=</operator> <call pos:start="1623:15" pos:end="1629:42"><name pos:start="1623:15" pos:end="1623:23">get_errno</name><argument_list pos:start="1623:24" pos:end="1629:42">(<argument pos:start="1623:25" pos:end="1629:41"><expr pos:start="1623:25" pos:end="1629:41"><call pos:start="1623:25" pos:end="1629:41"><name pos:start="1623:25" pos:end="1623:35">target_mmap</name><argument_list pos:start="1623:36" pos:end="1629:41">(<argument pos:start="1623:37" pos:end="1623:40"><expr pos:start="1623:37" pos:end="1623:40"><name pos:start="1623:37" pos:end="1623:40">arg1</name></expr></argument>, <argument pos:start="1623:43" pos:end="1623:46"><expr pos:start="1623:43" pos:end="1623:46"><name pos:start="1623:43" pos:end="1623:46">arg2</name></expr></argument>, <argument pos:start="1623:49" pos:end="1623:52"><expr pos:start="1623:49" pos:end="1623:52"><name pos:start="1623:49" pos:end="1623:52">arg3</name></expr></argument>,

                                    <argument pos:start="1625:37" pos:end="1625:80"><expr pos:start="1625:37" pos:end="1625:80"><call pos:start="1625:37" pos:end="1625:80"><name pos:start="1625:37" pos:end="1625:58">target_to_host_bitmask</name><argument_list pos:start="1625:59" pos:end="1625:80">(<argument pos:start="1625:60" pos:end="1625:63"><expr pos:start="1625:60" pos:end="1625:63"><name pos:start="1625:60" pos:end="1625:63">arg4</name></expr></argument>, <argument pos:start="1625:66" pos:end="1625:79"><expr pos:start="1625:66" pos:end="1625:79"><name pos:start="1625:66" pos:end="1625:79">mmap_flags_tbl</name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="1627:37" pos:end="1627:40"><expr pos:start="1627:37" pos:end="1627:40"><name pos:start="1627:37" pos:end="1627:40">arg5</name></expr></argument>,

                                    <argument pos:start="1629:37" pos:end="1629:40"><expr pos:start="1629:37" pos:end="1629:40"><name pos:start="1629:37" pos:end="1629:40">arg6</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1631:1" pos:end="1631:6">#<cpp:directive pos:start="1631:2" pos:end="1631:6">endif</cpp:directive></cpp:endif>

        <break pos:start="1633:9" pos:end="1638:0">break;</break>

<cpp:endif pos:start="1635:1" pos:end="1635:6">#<cpp:directive pos:start="1635:2" pos:end="1635:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1637:1" pos:end="1637:22">#<cpp:directive pos:start="1637:2" pos:end="1637:6">ifdef</cpp:directive> <name pos:start="1637:8" pos:end="1637:22">TARGET_NR_mmap2</name></cpp:ifdef>

    <case pos:start="1639:5" pos:end="1650:0">case <expr pos:start="1639:10" pos:end="1639:24"><name pos:start="1639:10" pos:end="1639:24">TARGET_NR_mmap2</name></expr>:</case>

<cpp:if pos:start="1641:1" pos:end="1641:49">#<cpp:directive pos:start="1641:2" pos:end="1641:3">if</cpp:directive> <expr pos:start="1641:5" pos:end="1641:49"><call pos:start="1641:5" pos:end="1641:25"><name pos:start="1641:5" pos:end="1641:11">defined</name><argument_list pos:start="1641:12" pos:end="1641:25">(<argument pos:start="1641:13" pos:end="1641:24"><expr pos:start="1641:13" pos:end="1641:24"><name pos:start="1641:13" pos:end="1641:24">TARGET_SPARC</name></expr></argument>)</argument_list></call> <operator pos:start="1641:27" pos:end="1641:28">||</operator> <call pos:start="1641:30" pos:end="1641:49"><name pos:start="1641:30" pos:end="1641:36">defined</name><argument_list pos:start="1641:37" pos:end="1641:49">(<argument pos:start="1641:38" pos:end="1641:48"><expr pos:start="1641:38" pos:end="1641:48"><name pos:start="1641:38" pos:end="1641:48">TARGET_MIPS</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define pos:start="1643:1" pos:end="1643:21">#<cpp:directive pos:start="1643:2" pos:end="1643:7">define</cpp:directive> <cpp:macro pos:start="1643:9" pos:end="1643:18"><name pos:start="1643:9" pos:end="1643:18">MMAP_SHIFT</name></cpp:macro> <cpp:value pos:start="1643:20" pos:end="1643:21">12</cpp:value></cpp:define>

<cpp:else pos:start="1645:1" pos:end="1645:5">#<cpp:directive pos:start="1645:2" pos:end="1645:5">else</cpp:directive></cpp:else>

<cpp:define pos:start="1647:1" pos:end="1647:35">#<cpp:directive pos:start="1647:2" pos:end="1647:7">define</cpp:directive> <cpp:macro pos:start="1647:9" pos:end="1647:18"><name pos:start="1647:9" pos:end="1647:18">MMAP_SHIFT</name></cpp:macro> <cpp:value pos:start="1647:20" pos:end="1647:35">TARGET_PAGE_BITS</cpp:value></cpp:define>

<cpp:endif pos:start="1649:1" pos:end="1649:6">#<cpp:directive pos:start="1649:2" pos:end="1649:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="1651:9" pos:end="1657:57"><expr pos:start="1651:9" pos:end="1657:56"><name pos:start="1651:9" pos:end="1651:11">ret</name> <operator pos:start="1651:13" pos:end="1651:13">=</operator> <call pos:start="1651:15" pos:end="1657:56"><name pos:start="1651:15" pos:end="1651:23">get_errno</name><argument_list pos:start="1651:24" pos:end="1657:56">(<argument pos:start="1651:25" pos:end="1657:55"><expr pos:start="1651:25" pos:end="1657:55"><call pos:start="1651:25" pos:end="1657:55"><name pos:start="1651:25" pos:end="1651:35">target_mmap</name><argument_list pos:start="1651:36" pos:end="1657:55">(<argument pos:start="1651:37" pos:end="1651:40"><expr pos:start="1651:37" pos:end="1651:40"><name pos:start="1651:37" pos:end="1651:40">arg1</name></expr></argument>, <argument pos:start="1651:43" pos:end="1651:46"><expr pos:start="1651:43" pos:end="1651:46"><name pos:start="1651:43" pos:end="1651:46">arg2</name></expr></argument>, <argument pos:start="1651:49" pos:end="1651:52"><expr pos:start="1651:49" pos:end="1651:52"><name pos:start="1651:49" pos:end="1651:52">arg3</name></expr></argument>,

                                    <argument pos:start="1653:37" pos:end="1653:80"><expr pos:start="1653:37" pos:end="1653:80"><call pos:start="1653:37" pos:end="1653:80"><name pos:start="1653:37" pos:end="1653:58">target_to_host_bitmask</name><argument_list pos:start="1653:59" pos:end="1653:80">(<argument pos:start="1653:60" pos:end="1653:63"><expr pos:start="1653:60" pos:end="1653:63"><name pos:start="1653:60" pos:end="1653:63">arg4</name></expr></argument>, <argument pos:start="1653:66" pos:end="1653:79"><expr pos:start="1653:66" pos:end="1653:79"><name pos:start="1653:66" pos:end="1653:79">mmap_flags_tbl</name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="1655:37" pos:end="1655:40"><expr pos:start="1655:37" pos:end="1655:40"><name pos:start="1655:37" pos:end="1655:40">arg5</name></expr></argument>,

                                    <argument pos:start="1657:37" pos:end="1657:54"><expr pos:start="1657:37" pos:end="1657:54"><name pos:start="1657:37" pos:end="1657:40">arg6</name> <operator pos:start="1657:42" pos:end="1657:43">&lt;&lt;</operator> <name pos:start="1657:45" pos:end="1657:54">MMAP_SHIFT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1659:9" pos:end="1662:0">break;</break>

<cpp:endif pos:start="1661:1" pos:end="1661:6">#<cpp:directive pos:start="1661:2" pos:end="1661:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1663:5" pos:end="1663:26">case <expr pos:start="1663:10" pos:end="1663:25"><name pos:start="1663:10" pos:end="1663:25">TARGET_NR_munmap</name></expr>:</case>

        <expr_stmt pos:start="1665:9" pos:end="1665:51"><expr pos:start="1665:9" pos:end="1665:50"><name pos:start="1665:9" pos:end="1665:11">ret</name> <operator pos:start="1665:13" pos:end="1665:13">=</operator> <call pos:start="1665:15" pos:end="1665:50"><name pos:start="1665:15" pos:end="1665:23">get_errno</name><argument_list pos:start="1665:24" pos:end="1665:50">(<argument pos:start="1665:25" pos:end="1665:49"><expr pos:start="1665:25" pos:end="1665:49"><call pos:start="1665:25" pos:end="1665:49"><name pos:start="1665:25" pos:end="1665:37">target_munmap</name><argument_list pos:start="1665:38" pos:end="1665:49">(<argument pos:start="1665:39" pos:end="1665:42"><expr pos:start="1665:39" pos:end="1665:42"><name pos:start="1665:39" pos:end="1665:42">arg1</name></expr></argument>, <argument pos:start="1665:45" pos:end="1665:48"><expr pos:start="1665:45" pos:end="1665:48"><name pos:start="1665:45" pos:end="1665:48">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1667:9" pos:end="1667:14">break;</break>

    <case pos:start="1669:5" pos:end="1669:28">case <expr pos:start="1669:10" pos:end="1669:27"><name pos:start="1669:10" pos:end="1669:27">TARGET_NR_mprotect</name></expr>:</case>

        <expr_stmt pos:start="1671:9" pos:end="1671:59"><expr pos:start="1671:9" pos:end="1671:58"><name pos:start="1671:9" pos:end="1671:11">ret</name> <operator pos:start="1671:13" pos:end="1671:13">=</operator> <call pos:start="1671:15" pos:end="1671:58"><name pos:start="1671:15" pos:end="1671:23">get_errno</name><argument_list pos:start="1671:24" pos:end="1671:58">(<argument pos:start="1671:25" pos:end="1671:57"><expr pos:start="1671:25" pos:end="1671:57"><call pos:start="1671:25" pos:end="1671:57"><name pos:start="1671:25" pos:end="1671:39">target_mprotect</name><argument_list pos:start="1671:40" pos:end="1671:57">(<argument pos:start="1671:41" pos:end="1671:44"><expr pos:start="1671:41" pos:end="1671:44"><name pos:start="1671:41" pos:end="1671:44">arg1</name></expr></argument>, <argument pos:start="1671:47" pos:end="1671:50"><expr pos:start="1671:47" pos:end="1671:50"><name pos:start="1671:47" pos:end="1671:50">arg2</name></expr></argument>, <argument pos:start="1671:53" pos:end="1671:56"><expr pos:start="1671:53" pos:end="1671:56"><name pos:start="1671:53" pos:end="1671:56">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1673:9" pos:end="1676:0">break;</break>

<cpp:ifdef pos:start="1675:1" pos:end="1675:23">#<cpp:directive pos:start="1675:2" pos:end="1675:6">ifdef</cpp:directive> <name pos:start="1675:8" pos:end="1675:23">TARGET_NR_mremap</name></cpp:ifdef>

    <case pos:start="1677:5" pos:end="1677:26">case <expr pos:start="1677:10" pos:end="1677:25"><name pos:start="1677:10" pos:end="1677:25">TARGET_NR_mremap</name></expr>:</case>

        <expr_stmt pos:start="1679:9" pos:end="1679:69"><expr pos:start="1679:9" pos:end="1679:68"><name pos:start="1679:9" pos:end="1679:11">ret</name> <operator pos:start="1679:13" pos:end="1679:13">=</operator> <call pos:start="1679:15" pos:end="1679:68"><name pos:start="1679:15" pos:end="1679:23">get_errno</name><argument_list pos:start="1679:24" pos:end="1679:68">(<argument pos:start="1679:25" pos:end="1679:67"><expr pos:start="1679:25" pos:end="1679:67"><call pos:start="1679:25" pos:end="1679:67"><name pos:start="1679:25" pos:end="1679:37">target_mremap</name><argument_list pos:start="1679:38" pos:end="1679:67">(<argument pos:start="1679:39" pos:end="1679:42"><expr pos:start="1679:39" pos:end="1679:42"><name pos:start="1679:39" pos:end="1679:42">arg1</name></expr></argument>, <argument pos:start="1679:45" pos:end="1679:48"><expr pos:start="1679:45" pos:end="1679:48"><name pos:start="1679:45" pos:end="1679:48">arg2</name></expr></argument>, <argument pos:start="1679:51" pos:end="1679:54"><expr pos:start="1679:51" pos:end="1679:54"><name pos:start="1679:51" pos:end="1679:54">arg3</name></expr></argument>, <argument pos:start="1679:57" pos:end="1679:60"><expr pos:start="1679:57" pos:end="1679:60"><name pos:start="1679:57" pos:end="1679:60">arg4</name></expr></argument>, <argument pos:start="1679:63" pos:end="1679:66"><expr pos:start="1679:63" pos:end="1679:66"><name pos:start="1679:63" pos:end="1679:66">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1681:9" pos:end="1688:0">break;</break>

<cpp:endif pos:start="1683:1" pos:end="1683:6">#<cpp:directive pos:start="1683:2" pos:end="1683:6">endif</cpp:directive></cpp:endif>

        <comment type="block" pos:start="1685:9" pos:end="1685:62">/* ??? msync/mlock/munlock are broken for softmmu.  */</comment>

<cpp:ifdef pos:start="1687:1" pos:end="1687:22">#<cpp:directive pos:start="1687:2" pos:end="1687:6">ifdef</cpp:directive> <name pos:start="1687:8" pos:end="1687:22">TARGET_NR_msync</name></cpp:ifdef>

    <case pos:start="1689:5" pos:end="1689:25">case <expr pos:start="1689:10" pos:end="1689:24"><name pos:start="1689:10" pos:end="1689:24">TARGET_NR_msync</name></expr>:</case>

        <expr_stmt pos:start="1691:9" pos:end="1691:54"><expr pos:start="1691:9" pos:end="1691:53"><name pos:start="1691:9" pos:end="1691:11">ret</name> <operator pos:start="1691:13" pos:end="1691:13">=</operator> <call pos:start="1691:15" pos:end="1691:53"><name pos:start="1691:15" pos:end="1691:23">get_errno</name><argument_list pos:start="1691:24" pos:end="1691:53">(<argument pos:start="1691:25" pos:end="1691:52"><expr pos:start="1691:25" pos:end="1691:52"><call pos:start="1691:25" pos:end="1691:52"><name pos:start="1691:25" pos:end="1691:29">msync</name><argument_list pos:start="1691:30" pos:end="1691:52">(<argument pos:start="1691:31" pos:end="1691:39"><expr pos:start="1691:31" pos:end="1691:39"><call pos:start="1691:31" pos:end="1691:39"><name pos:start="1691:31" pos:end="1691:33">g2h</name><argument_list pos:start="1691:34" pos:end="1691:39">(<argument pos:start="1691:35" pos:end="1691:38"><expr pos:start="1691:35" pos:end="1691:38"><name pos:start="1691:35" pos:end="1691:38">arg1</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="1691:42" pos:end="1691:45"><expr pos:start="1691:42" pos:end="1691:45"><name pos:start="1691:42" pos:end="1691:45">arg2</name></expr></argument>, <argument pos:start="1691:48" pos:end="1691:51"><expr pos:start="1691:48" pos:end="1691:51"><name pos:start="1691:48" pos:end="1691:51">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1693:9" pos:end="1698:0">break;</break>

<cpp:endif pos:start="1695:1" pos:end="1695:6">#<cpp:directive pos:start="1695:2" pos:end="1695:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1697:1" pos:end="1697:22">#<cpp:directive pos:start="1697:2" pos:end="1697:6">ifdef</cpp:directive> <name pos:start="1697:8" pos:end="1697:22">TARGET_NR_mlock</name></cpp:ifdef>

    <case pos:start="1699:5" pos:end="1699:25">case <expr pos:start="1699:10" pos:end="1699:24"><name pos:start="1699:10" pos:end="1699:24">TARGET_NR_mlock</name></expr>:</case>

        <expr_stmt pos:start="1701:9" pos:end="1701:48"><expr pos:start="1701:9" pos:end="1701:47"><name pos:start="1701:9" pos:end="1701:11">ret</name> <operator pos:start="1701:13" pos:end="1701:13">=</operator> <call pos:start="1701:15" pos:end="1701:47"><name pos:start="1701:15" pos:end="1701:23">get_errno</name><argument_list pos:start="1701:24" pos:end="1701:47">(<argument pos:start="1701:25" pos:end="1701:46"><expr pos:start="1701:25" pos:end="1701:46"><call pos:start="1701:25" pos:end="1701:46"><name pos:start="1701:25" pos:end="1701:29">mlock</name><argument_list pos:start="1701:30" pos:end="1701:46">(<argument pos:start="1701:31" pos:end="1701:39"><expr pos:start="1701:31" pos:end="1701:39"><call pos:start="1701:31" pos:end="1701:39"><name pos:start="1701:31" pos:end="1701:33">g2h</name><argument_list pos:start="1701:34" pos:end="1701:39">(<argument pos:start="1701:35" pos:end="1701:38"><expr pos:start="1701:35" pos:end="1701:38"><name pos:start="1701:35" pos:end="1701:38">arg1</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="1701:42" pos:end="1701:45"><expr pos:start="1701:42" pos:end="1701:45"><name pos:start="1701:42" pos:end="1701:45">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1703:9" pos:end="1708:0">break;</break>

<cpp:endif pos:start="1705:1" pos:end="1705:6">#<cpp:directive pos:start="1705:2" pos:end="1705:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1707:1" pos:end="1707:24">#<cpp:directive pos:start="1707:2" pos:end="1707:6">ifdef</cpp:directive> <name pos:start="1707:8" pos:end="1707:24">TARGET_NR_munlock</name></cpp:ifdef>

    <case pos:start="1709:5" pos:end="1709:27">case <expr pos:start="1709:10" pos:end="1709:26"><name pos:start="1709:10" pos:end="1709:26">TARGET_NR_munlock</name></expr>:</case>

        <expr_stmt pos:start="1711:9" pos:end="1711:50"><expr pos:start="1711:9" pos:end="1711:49"><name pos:start="1711:9" pos:end="1711:11">ret</name> <operator pos:start="1711:13" pos:end="1711:13">=</operator> <call pos:start="1711:15" pos:end="1711:49"><name pos:start="1711:15" pos:end="1711:23">get_errno</name><argument_list pos:start="1711:24" pos:end="1711:49">(<argument pos:start="1711:25" pos:end="1711:48"><expr pos:start="1711:25" pos:end="1711:48"><call pos:start="1711:25" pos:end="1711:48"><name pos:start="1711:25" pos:end="1711:31">munlock</name><argument_list pos:start="1711:32" pos:end="1711:48">(<argument pos:start="1711:33" pos:end="1711:41"><expr pos:start="1711:33" pos:end="1711:41"><call pos:start="1711:33" pos:end="1711:41"><name pos:start="1711:33" pos:end="1711:35">g2h</name><argument_list pos:start="1711:36" pos:end="1711:41">(<argument pos:start="1711:37" pos:end="1711:40"><expr pos:start="1711:37" pos:end="1711:40"><name pos:start="1711:37" pos:end="1711:40">arg1</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="1711:44" pos:end="1711:47"><expr pos:start="1711:44" pos:end="1711:47"><name pos:start="1711:44" pos:end="1711:47">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1713:9" pos:end="1718:0">break;</break>

<cpp:endif pos:start="1715:1" pos:end="1715:6">#<cpp:directive pos:start="1715:2" pos:end="1715:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1717:1" pos:end="1717:25">#<cpp:directive pos:start="1717:2" pos:end="1717:6">ifdef</cpp:directive> <name pos:start="1717:8" pos:end="1717:25">TARGET_NR_mlockall</name></cpp:ifdef>

    <case pos:start="1719:5" pos:end="1719:28">case <expr pos:start="1719:10" pos:end="1719:27"><name pos:start="1719:10" pos:end="1719:27">TARGET_NR_mlockall</name></expr>:</case>

        <expr_stmt pos:start="1721:9" pos:end="1721:40"><expr pos:start="1721:9" pos:end="1721:39"><name pos:start="1721:9" pos:end="1721:11">ret</name> <operator pos:start="1721:13" pos:end="1721:13">=</operator> <call pos:start="1721:15" pos:end="1721:39"><name pos:start="1721:15" pos:end="1721:23">get_errno</name><argument_list pos:start="1721:24" pos:end="1721:39">(<argument pos:start="1721:25" pos:end="1721:38"><expr pos:start="1721:25" pos:end="1721:38"><call pos:start="1721:25" pos:end="1721:38"><name pos:start="1721:25" pos:end="1721:32">mlockall</name><argument_list pos:start="1721:33" pos:end="1721:38">(<argument pos:start="1721:34" pos:end="1721:37"><expr pos:start="1721:34" pos:end="1721:37"><name pos:start="1721:34" pos:end="1721:37">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1723:9" pos:end="1728:0">break;</break>

<cpp:endif pos:start="1725:1" pos:end="1725:6">#<cpp:directive pos:start="1725:2" pos:end="1725:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1727:1" pos:end="1727:27">#<cpp:directive pos:start="1727:2" pos:end="1727:6">ifdef</cpp:directive> <name pos:start="1727:8" pos:end="1727:27">TARGET_NR_munlockall</name></cpp:ifdef>

    <case pos:start="1729:5" pos:end="1729:30">case <expr pos:start="1729:10" pos:end="1729:29"><name pos:start="1729:10" pos:end="1729:29">TARGET_NR_munlockall</name></expr>:</case>

        <expr_stmt pos:start="1731:9" pos:end="1731:38"><expr pos:start="1731:9" pos:end="1731:37"><name pos:start="1731:9" pos:end="1731:11">ret</name> <operator pos:start="1731:13" pos:end="1731:13">=</operator> <call pos:start="1731:15" pos:end="1731:37"><name pos:start="1731:15" pos:end="1731:23">get_errno</name><argument_list pos:start="1731:24" pos:end="1731:37">(<argument pos:start="1731:25" pos:end="1731:36"><expr pos:start="1731:25" pos:end="1731:36"><call pos:start="1731:25" pos:end="1731:36"><name pos:start="1731:25" pos:end="1731:34">munlockall</name><argument_list pos:start="1731:35" pos:end="1731:36">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1733:9" pos:end="1736:0">break;</break>

<cpp:endif pos:start="1735:1" pos:end="1735:6">#<cpp:directive pos:start="1735:2" pos:end="1735:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1737:5" pos:end="1737:28">case <expr pos:start="1737:10" pos:end="1737:27"><name pos:start="1737:10" pos:end="1737:27">TARGET_NR_truncate</name></expr>:</case>

        <expr_stmt pos:start="1739:9" pos:end="1739:35"><expr pos:start="1739:9" pos:end="1739:34"><name pos:start="1739:9" pos:end="1739:9">p</name> <operator pos:start="1739:11" pos:end="1739:11">=</operator> <call pos:start="1739:13" pos:end="1739:34"><name pos:start="1739:13" pos:end="1739:28">lock_user_string</name><argument_list pos:start="1739:29" pos:end="1739:34">(<argument pos:start="1739:30" pos:end="1739:33"><expr pos:start="1739:30" pos:end="1739:33"><name pos:start="1739:30" pos:end="1739:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1741:9" pos:end="1741:43"><expr pos:start="1741:9" pos:end="1741:42"><name pos:start="1741:9" pos:end="1741:11">ret</name> <operator pos:start="1741:13" pos:end="1741:13">=</operator> <call pos:start="1741:15" pos:end="1741:42"><name pos:start="1741:15" pos:end="1741:23">get_errno</name><argument_list pos:start="1741:24" pos:end="1741:42">(<argument pos:start="1741:25" pos:end="1741:41"><expr pos:start="1741:25" pos:end="1741:41"><call pos:start="1741:25" pos:end="1741:41"><name pos:start="1741:25" pos:end="1741:32">truncate</name><argument_list pos:start="1741:33" pos:end="1741:41">(<argument pos:start="1741:34" pos:end="1741:34"><expr pos:start="1741:34" pos:end="1741:34"><name pos:start="1741:34" pos:end="1741:34">p</name></expr></argument>, <argument pos:start="1741:37" pos:end="1741:40"><expr pos:start="1741:37" pos:end="1741:40"><name pos:start="1741:37" pos:end="1741:40">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1743:9" pos:end="1743:32"><expr pos:start="1743:9" pos:end="1743:31"><call pos:start="1743:9" pos:end="1743:31"><name pos:start="1743:9" pos:end="1743:19">unlock_user</name><argument_list pos:start="1743:20" pos:end="1743:31">(<argument pos:start="1743:21" pos:end="1743:21"><expr pos:start="1743:21" pos:end="1743:21"><name pos:start="1743:21" pos:end="1743:21">p</name></expr></argument>, <argument pos:start="1743:24" pos:end="1743:27"><expr pos:start="1743:24" pos:end="1743:27"><name pos:start="1743:24" pos:end="1743:27">arg1</name></expr></argument>, <argument pos:start="1743:30" pos:end="1743:30"><expr pos:start="1743:30" pos:end="1743:30"><literal type="number" pos:start="1743:30" pos:end="1743:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1745:9" pos:end="1745:14">break;</break>

    <case pos:start="1747:5" pos:end="1747:29">case <expr pos:start="1747:10" pos:end="1747:28"><name pos:start="1747:10" pos:end="1747:28">TARGET_NR_ftruncate</name></expr>:</case>

        <expr_stmt pos:start="1749:9" pos:end="1749:47"><expr pos:start="1749:9" pos:end="1749:46"><name pos:start="1749:9" pos:end="1749:11">ret</name> <operator pos:start="1749:13" pos:end="1749:13">=</operator> <call pos:start="1749:15" pos:end="1749:46"><name pos:start="1749:15" pos:end="1749:23">get_errno</name><argument_list pos:start="1749:24" pos:end="1749:46">(<argument pos:start="1749:25" pos:end="1749:45"><expr pos:start="1749:25" pos:end="1749:45"><call pos:start="1749:25" pos:end="1749:45"><name pos:start="1749:25" pos:end="1749:33">ftruncate</name><argument_list pos:start="1749:34" pos:end="1749:45">(<argument pos:start="1749:35" pos:end="1749:38"><expr pos:start="1749:35" pos:end="1749:38"><name pos:start="1749:35" pos:end="1749:38">arg1</name></expr></argument>, <argument pos:start="1749:41" pos:end="1749:44"><expr pos:start="1749:41" pos:end="1749:44"><name pos:start="1749:41" pos:end="1749:44">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1751:9" pos:end="1751:14">break;</break>

    <case pos:start="1753:5" pos:end="1753:26">case <expr pos:start="1753:10" pos:end="1753:25"><name pos:start="1753:10" pos:end="1753:25">TARGET_NR_fchmod</name></expr>:</case>

        <expr_stmt pos:start="1755:9" pos:end="1755:44"><expr pos:start="1755:9" pos:end="1755:43"><name pos:start="1755:9" pos:end="1755:11">ret</name> <operator pos:start="1755:13" pos:end="1755:13">=</operator> <call pos:start="1755:15" pos:end="1755:43"><name pos:start="1755:15" pos:end="1755:23">get_errno</name><argument_list pos:start="1755:24" pos:end="1755:43">(<argument pos:start="1755:25" pos:end="1755:42"><expr pos:start="1755:25" pos:end="1755:42"><call pos:start="1755:25" pos:end="1755:42"><name pos:start="1755:25" pos:end="1755:30">fchmod</name><argument_list pos:start="1755:31" pos:end="1755:42">(<argument pos:start="1755:32" pos:end="1755:35"><expr pos:start="1755:32" pos:end="1755:35"><name pos:start="1755:32" pos:end="1755:35">arg1</name></expr></argument>, <argument pos:start="1755:38" pos:end="1755:41"><expr pos:start="1755:38" pos:end="1755:41"><name pos:start="1755:38" pos:end="1755:41">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1757:9" pos:end="1757:14">break;</break>

    <case pos:start="1759:5" pos:end="1759:31">case <expr pos:start="1759:10" pos:end="1759:30"><name pos:start="1759:10" pos:end="1759:30">TARGET_NR_getpriority</name></expr>:</case>

        <expr_stmt pos:start="1761:9" pos:end="1761:49"><expr pos:start="1761:9" pos:end="1761:48"><name pos:start="1761:9" pos:end="1761:11">ret</name> <operator pos:start="1761:13" pos:end="1761:13">=</operator> <call pos:start="1761:15" pos:end="1761:48"><name pos:start="1761:15" pos:end="1761:23">get_errno</name><argument_list pos:start="1761:24" pos:end="1761:48">(<argument pos:start="1761:25" pos:end="1761:47"><expr pos:start="1761:25" pos:end="1761:47"><call pos:start="1761:25" pos:end="1761:47"><name pos:start="1761:25" pos:end="1761:35">getpriority</name><argument_list pos:start="1761:36" pos:end="1761:47">(<argument pos:start="1761:37" pos:end="1761:40"><expr pos:start="1761:37" pos:end="1761:40"><name pos:start="1761:37" pos:end="1761:40">arg1</name></expr></argument>, <argument pos:start="1761:43" pos:end="1761:46"><expr pos:start="1761:43" pos:end="1761:46"><name pos:start="1761:43" pos:end="1761:46">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1763:9" pos:end="1763:14">break;</break>

    <case pos:start="1765:5" pos:end="1765:31">case <expr pos:start="1765:10" pos:end="1765:30"><name pos:start="1765:10" pos:end="1765:30">TARGET_NR_setpriority</name></expr>:</case>

        <expr_stmt pos:start="1767:9" pos:end="1767:55"><expr pos:start="1767:9" pos:end="1767:54"><name pos:start="1767:9" pos:end="1767:11">ret</name> <operator pos:start="1767:13" pos:end="1767:13">=</operator> <call pos:start="1767:15" pos:end="1767:54"><name pos:start="1767:15" pos:end="1767:23">get_errno</name><argument_list pos:start="1767:24" pos:end="1767:54">(<argument pos:start="1767:25" pos:end="1767:53"><expr pos:start="1767:25" pos:end="1767:53"><call pos:start="1767:25" pos:end="1767:53"><name pos:start="1767:25" pos:end="1767:35">setpriority</name><argument_list pos:start="1767:36" pos:end="1767:53">(<argument pos:start="1767:37" pos:end="1767:40"><expr pos:start="1767:37" pos:end="1767:40"><name pos:start="1767:37" pos:end="1767:40">arg1</name></expr></argument>, <argument pos:start="1767:43" pos:end="1767:46"><expr pos:start="1767:43" pos:end="1767:46"><name pos:start="1767:43" pos:end="1767:46">arg2</name></expr></argument>, <argument pos:start="1767:49" pos:end="1767:52"><expr pos:start="1767:49" pos:end="1767:52"><name pos:start="1767:49" pos:end="1767:52">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1769:9" pos:end="1772:0">break;</break>

<cpp:ifdef pos:start="1771:1" pos:end="1771:23">#<cpp:directive pos:start="1771:2" pos:end="1771:6">ifdef</cpp:directive> <name pos:start="1771:8" pos:end="1771:23">TARGET_NR_profil</name></cpp:ifdef>

    <case pos:start="1773:5" pos:end="1773:26">case <expr pos:start="1773:10" pos:end="1773:25"><name pos:start="1773:10" pos:end="1773:25">TARGET_NR_profil</name></expr>:</case>

        <goto pos:start="1775:9" pos:end="1778:0">goto <name pos:start="1775:14" pos:end="1775:26">unimplemented</name>;</goto>

<cpp:endif pos:start="1777:1" pos:end="1777:6">#<cpp:directive pos:start="1777:2" pos:end="1777:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1779:5" pos:end="1779:26">case <expr pos:start="1779:10" pos:end="1779:25"><name pos:start="1779:10" pos:end="1779:25">TARGET_NR_statfs</name></expr>:</case>

        <expr_stmt pos:start="1781:9" pos:end="1781:35"><expr pos:start="1781:9" pos:end="1781:34"><name pos:start="1781:9" pos:end="1781:9">p</name> <operator pos:start="1781:11" pos:end="1781:11">=</operator> <call pos:start="1781:13" pos:end="1781:34"><name pos:start="1781:13" pos:end="1781:28">lock_user_string</name><argument_list pos:start="1781:29" pos:end="1781:34">(<argument pos:start="1781:30" pos:end="1781:33"><expr pos:start="1781:30" pos:end="1781:33"><name pos:start="1781:30" pos:end="1781:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1783:9" pos:end="1783:48"><expr pos:start="1783:9" pos:end="1783:47"><name pos:start="1783:9" pos:end="1783:11">ret</name> <operator pos:start="1783:13" pos:end="1783:13">=</operator> <call pos:start="1783:15" pos:end="1783:47"><name pos:start="1783:15" pos:end="1783:23">get_errno</name><argument_list pos:start="1783:24" pos:end="1783:47">(<argument pos:start="1783:25" pos:end="1783:46"><expr pos:start="1783:25" pos:end="1783:46"><call pos:start="1783:25" pos:end="1783:46"><name pos:start="1783:25" pos:end="1783:30">statfs</name><argument_list pos:start="1783:31" pos:end="1783:46">(<argument pos:start="1783:32" pos:end="1783:38"><expr pos:start="1783:32" pos:end="1783:38"><call pos:start="1783:32" pos:end="1783:38"><name pos:start="1783:32" pos:end="1783:35">path</name><argument_list pos:start="1783:36" pos:end="1783:38">(<argument pos:start="1783:37" pos:end="1783:37"><expr pos:start="1783:37" pos:end="1783:37"><name pos:start="1783:37" pos:end="1783:37">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="1783:41" pos:end="1783:45"><expr pos:start="1783:41" pos:end="1783:45"><operator pos:start="1783:41" pos:end="1783:41">&amp;</operator><name pos:start="1783:42" pos:end="1783:45">stfs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1785:9" pos:end="1785:32"><expr pos:start="1785:9" pos:end="1785:31"><call pos:start="1785:9" pos:end="1785:31"><name pos:start="1785:9" pos:end="1785:19">unlock_user</name><argument_list pos:start="1785:20" pos:end="1785:31">(<argument pos:start="1785:21" pos:end="1785:21"><expr pos:start="1785:21" pos:end="1785:21"><name pos:start="1785:21" pos:end="1785:21">p</name></expr></argument>, <argument pos:start="1785:24" pos:end="1785:27"><expr pos:start="1785:24" pos:end="1785:27"><name pos:start="1785:24" pos:end="1785:27">arg1</name></expr></argument>, <argument pos:start="1785:30" pos:end="1785:30"><expr pos:start="1785:30" pos:end="1785:30"><literal type="number" pos:start="1785:30" pos:end="1785:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <label pos:start="1787:5" pos:end="1787:19"><name pos:start="1787:5" pos:end="1787:18">convert_statfs</name>:</label>

        <if_stmt pos:start="1789:9" pos:end="1821:9"><if pos:start="1789:9" pos:end="1821:9">if <condition pos:start="1789:12" pos:end="1789:27">(<expr pos:start="1789:13" pos:end="1789:26"><operator pos:start="1789:13" pos:end="1789:13">!</operator><call pos:start="1789:14" pos:end="1789:26"><name pos:start="1789:14" pos:end="1789:21">is_error</name><argument_list pos:start="1789:22" pos:end="1789:26">(<argument pos:start="1789:23" pos:end="1789:25"><expr pos:start="1789:23" pos:end="1789:25"><name pos:start="1789:23" pos:end="1789:25">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1789:29" pos:end="1821:9">{<block_content pos:start="1791:13" pos:end="1819:53">

            <decl_stmt pos:start="1791:13" pos:end="1791:46"><decl pos:start="1791:13" pos:end="1791:45"><type pos:start="1791:13" pos:end="1791:34"><name pos:start="1791:13" pos:end="1791:32"><name pos:start="1791:13" pos:end="1791:18">struct</name> <name pos:start="1791:20" pos:end="1791:32">target_statfs</name></name> <modifier pos:start="1791:34" pos:end="1791:34">*</modifier></type><name pos:start="1791:35" pos:end="1791:45">target_stfs</name></decl>;</decl_stmt>

           

            <expr_stmt pos:start="1795:13" pos:end="1795:51"><expr pos:start="1795:13" pos:end="1795:50"><call pos:start="1795:13" pos:end="1795:50"><name pos:start="1795:13" pos:end="1795:28">lock_user_struct</name><argument_list pos:start="1795:29" pos:end="1795:50">(<argument pos:start="1795:30" pos:end="1795:40"><expr pos:start="1795:30" pos:end="1795:40"><name pos:start="1795:30" pos:end="1795:40">target_stfs</name></expr></argument>, <argument pos:start="1795:43" pos:end="1795:46"><expr pos:start="1795:43" pos:end="1795:46"><name pos:start="1795:43" pos:end="1795:46">arg2</name></expr></argument>, <argument pos:start="1795:49" pos:end="1795:49"><expr pos:start="1795:49" pos:end="1795:49"><literal type="number" pos:start="1795:49" pos:end="1795:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="1797:13" pos:end="1797:50">/* ??? put_user is probably wrong.  */</comment>

            <expr_stmt pos:start="1799:13" pos:end="1799:56"><expr pos:start="1799:13" pos:end="1799:55"><call pos:start="1799:13" pos:end="1799:55"><name pos:start="1799:13" pos:end="1799:20">put_user</name><argument_list pos:start="1799:21" pos:end="1799:55">(<argument pos:start="1799:22" pos:end="1799:32"><expr pos:start="1799:22" pos:end="1799:32"><name pos:start="1799:22" pos:end="1799:32"><name pos:start="1799:22" pos:end="1799:25">stfs</name><operator pos:start="1799:26" pos:end="1799:26">.</operator><name pos:start="1799:27" pos:end="1799:32">f_type</name></name></expr></argument>, <argument pos:start="1799:35" pos:end="1799:54"><expr pos:start="1799:35" pos:end="1799:54"><operator pos:start="1799:35" pos:end="1799:35">&amp;</operator><name pos:start="1799:36" pos:end="1799:54"><name pos:start="1799:36" pos:end="1799:46">target_stfs</name><operator pos:start="1799:47" pos:end="1799:48">-&gt;</operator><name pos:start="1799:49" pos:end="1799:54">f_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1801:13" pos:end="1801:58"><expr pos:start="1801:13" pos:end="1801:57"><call pos:start="1801:13" pos:end="1801:57"><name pos:start="1801:13" pos:end="1801:20">put_user</name><argument_list pos:start="1801:21" pos:end="1801:57">(<argument pos:start="1801:22" pos:end="1801:33"><expr pos:start="1801:22" pos:end="1801:33"><name pos:start="1801:22" pos:end="1801:33"><name pos:start="1801:22" pos:end="1801:25">stfs</name><operator pos:start="1801:26" pos:end="1801:26">.</operator><name pos:start="1801:27" pos:end="1801:33">f_bsize</name></name></expr></argument>, <argument pos:start="1801:36" pos:end="1801:56"><expr pos:start="1801:36" pos:end="1801:56"><operator pos:start="1801:36" pos:end="1801:36">&amp;</operator><name pos:start="1801:37" pos:end="1801:56"><name pos:start="1801:37" pos:end="1801:47">target_stfs</name><operator pos:start="1801:48" pos:end="1801:49">-&gt;</operator><name pos:start="1801:50" pos:end="1801:56">f_bsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1803:13" pos:end="1803:60"><expr pos:start="1803:13" pos:end="1803:59"><call pos:start="1803:13" pos:end="1803:59"><name pos:start="1803:13" pos:end="1803:20">put_user</name><argument_list pos:start="1803:21" pos:end="1803:59">(<argument pos:start="1803:22" pos:end="1803:34"><expr pos:start="1803:22" pos:end="1803:34"><name pos:start="1803:22" pos:end="1803:34"><name pos:start="1803:22" pos:end="1803:25">stfs</name><operator pos:start="1803:26" pos:end="1803:26">.</operator><name pos:start="1803:27" pos:end="1803:34">f_blocks</name></name></expr></argument>, <argument pos:start="1803:37" pos:end="1803:58"><expr pos:start="1803:37" pos:end="1803:58"><operator pos:start="1803:37" pos:end="1803:37">&amp;</operator><name pos:start="1803:38" pos:end="1803:58"><name pos:start="1803:38" pos:end="1803:48">target_stfs</name><operator pos:start="1803:49" pos:end="1803:50">-&gt;</operator><name pos:start="1803:51" pos:end="1803:58">f_blocks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1805:13" pos:end="1805:58"><expr pos:start="1805:13" pos:end="1805:57"><call pos:start="1805:13" pos:end="1805:57"><name pos:start="1805:13" pos:end="1805:20">put_user</name><argument_list pos:start="1805:21" pos:end="1805:57">(<argument pos:start="1805:22" pos:end="1805:33"><expr pos:start="1805:22" pos:end="1805:33"><name pos:start="1805:22" pos:end="1805:33"><name pos:start="1805:22" pos:end="1805:25">stfs</name><operator pos:start="1805:26" pos:end="1805:26">.</operator><name pos:start="1805:27" pos:end="1805:33">f_bfree</name></name></expr></argument>, <argument pos:start="1805:36" pos:end="1805:56"><expr pos:start="1805:36" pos:end="1805:56"><operator pos:start="1805:36" pos:end="1805:36">&amp;</operator><name pos:start="1805:37" pos:end="1805:56"><name pos:start="1805:37" pos:end="1805:47">target_stfs</name><operator pos:start="1805:48" pos:end="1805:49">-&gt;</operator><name pos:start="1805:50" pos:end="1805:56">f_bfree</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1807:13" pos:end="1807:60"><expr pos:start="1807:13" pos:end="1807:59"><call pos:start="1807:13" pos:end="1807:59"><name pos:start="1807:13" pos:end="1807:20">put_user</name><argument_list pos:start="1807:21" pos:end="1807:59">(<argument pos:start="1807:22" pos:end="1807:34"><expr pos:start="1807:22" pos:end="1807:34"><name pos:start="1807:22" pos:end="1807:34"><name pos:start="1807:22" pos:end="1807:25">stfs</name><operator pos:start="1807:26" pos:end="1807:26">.</operator><name pos:start="1807:27" pos:end="1807:34">f_bavail</name></name></expr></argument>, <argument pos:start="1807:37" pos:end="1807:58"><expr pos:start="1807:37" pos:end="1807:58"><operator pos:start="1807:37" pos:end="1807:37">&amp;</operator><name pos:start="1807:38" pos:end="1807:58"><name pos:start="1807:38" pos:end="1807:48">target_stfs</name><operator pos:start="1807:49" pos:end="1807:50">-&gt;</operator><name pos:start="1807:51" pos:end="1807:58">f_bavail</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1809:13" pos:end="1809:58"><expr pos:start="1809:13" pos:end="1809:57"><call pos:start="1809:13" pos:end="1809:57"><name pos:start="1809:13" pos:end="1809:20">put_user</name><argument_list pos:start="1809:21" pos:end="1809:57">(<argument pos:start="1809:22" pos:end="1809:33"><expr pos:start="1809:22" pos:end="1809:33"><name pos:start="1809:22" pos:end="1809:33"><name pos:start="1809:22" pos:end="1809:25">stfs</name><operator pos:start="1809:26" pos:end="1809:26">.</operator><name pos:start="1809:27" pos:end="1809:33">f_files</name></name></expr></argument>, <argument pos:start="1809:36" pos:end="1809:56"><expr pos:start="1809:36" pos:end="1809:56"><operator pos:start="1809:36" pos:end="1809:36">&amp;</operator><name pos:start="1809:37" pos:end="1809:56"><name pos:start="1809:37" pos:end="1809:47">target_stfs</name><operator pos:start="1809:48" pos:end="1809:49">-&gt;</operator><name pos:start="1809:50" pos:end="1809:56">f_files</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1811:13" pos:end="1811:58"><expr pos:start="1811:13" pos:end="1811:57"><call pos:start="1811:13" pos:end="1811:57"><name pos:start="1811:13" pos:end="1811:20">put_user</name><argument_list pos:start="1811:21" pos:end="1811:57">(<argument pos:start="1811:22" pos:end="1811:33"><expr pos:start="1811:22" pos:end="1811:33"><name pos:start="1811:22" pos:end="1811:33"><name pos:start="1811:22" pos:end="1811:25">stfs</name><operator pos:start="1811:26" pos:end="1811:26">.</operator><name pos:start="1811:27" pos:end="1811:33">f_ffree</name></name></expr></argument>, <argument pos:start="1811:36" pos:end="1811:56"><expr pos:start="1811:36" pos:end="1811:56"><operator pos:start="1811:36" pos:end="1811:36">&amp;</operator><name pos:start="1811:37" pos:end="1811:56"><name pos:start="1811:37" pos:end="1811:47">target_stfs</name><operator pos:start="1811:48" pos:end="1811:49">-&gt;</operator><name pos:start="1811:50" pos:end="1811:56">f_ffree</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1813:13" pos:end="1813:72"><expr pos:start="1813:13" pos:end="1813:71"><call pos:start="1813:13" pos:end="1813:71"><name pos:start="1813:13" pos:end="1813:20">put_user</name><argument_list pos:start="1813:21" pos:end="1813:71">(<argument pos:start="1813:22" pos:end="1813:41"><expr pos:start="1813:22" pos:end="1813:41"><name pos:start="1813:22" pos:end="1813:41"><name pos:start="1813:22" pos:end="1813:25">stfs</name><operator pos:start="1813:26" pos:end="1813:26">.</operator><name pos:start="1813:27" pos:end="1813:32">f_fsid</name><operator pos:start="1813:33" pos:end="1813:33">.</operator><name pos:start="1813:34" pos:end="1813:38">__val</name><index pos:start="1813:39" pos:end="1813:41">[<expr pos:start="1813:40" pos:end="1813:40"><literal type="number" pos:start="1813:40" pos:end="1813:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1813:44" pos:end="1813:70"><expr pos:start="1813:44" pos:end="1813:70"><operator pos:start="1813:44" pos:end="1813:44">&amp;</operator><name pos:start="1813:45" pos:end="1813:70"><name pos:start="1813:45" pos:end="1813:55">target_stfs</name><operator pos:start="1813:56" pos:end="1813:57">-&gt;</operator><name pos:start="1813:58" pos:end="1813:63">f_fsid</name><operator pos:start="1813:64" pos:end="1813:64">.</operator><name pos:start="1813:65" pos:end="1813:67">val</name><index pos:start="1813:68" pos:end="1813:70">[<expr pos:start="1813:69" pos:end="1813:69"><literal type="number" pos:start="1813:69" pos:end="1813:69">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1815:13" pos:end="1815:72"><expr pos:start="1815:13" pos:end="1815:71"><call pos:start="1815:13" pos:end="1815:71"><name pos:start="1815:13" pos:end="1815:20">put_user</name><argument_list pos:start="1815:21" pos:end="1815:71">(<argument pos:start="1815:22" pos:end="1815:41"><expr pos:start="1815:22" pos:end="1815:41"><name pos:start="1815:22" pos:end="1815:41"><name pos:start="1815:22" pos:end="1815:25">stfs</name><operator pos:start="1815:26" pos:end="1815:26">.</operator><name pos:start="1815:27" pos:end="1815:32">f_fsid</name><operator pos:start="1815:33" pos:end="1815:33">.</operator><name pos:start="1815:34" pos:end="1815:38">__val</name><index pos:start="1815:39" pos:end="1815:41">[<expr pos:start="1815:40" pos:end="1815:40"><literal type="number" pos:start="1815:40" pos:end="1815:40">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="1815:44" pos:end="1815:70"><expr pos:start="1815:44" pos:end="1815:70"><operator pos:start="1815:44" pos:end="1815:44">&amp;</operator><name pos:start="1815:45" pos:end="1815:70"><name pos:start="1815:45" pos:end="1815:55">target_stfs</name><operator pos:start="1815:56" pos:end="1815:57">-&gt;</operator><name pos:start="1815:58" pos:end="1815:63">f_fsid</name><operator pos:start="1815:64" pos:end="1815:64">.</operator><name pos:start="1815:65" pos:end="1815:67">val</name><index pos:start="1815:68" pos:end="1815:70">[<expr pos:start="1815:69" pos:end="1815:69"><literal type="number" pos:start="1815:69" pos:end="1815:69">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1817:13" pos:end="1817:62"><expr pos:start="1817:13" pos:end="1817:61"><call pos:start="1817:13" pos:end="1817:61"><name pos:start="1817:13" pos:end="1817:20">put_user</name><argument_list pos:start="1817:21" pos:end="1817:61">(<argument pos:start="1817:22" pos:end="1817:35"><expr pos:start="1817:22" pos:end="1817:35"><name pos:start="1817:22" pos:end="1817:35"><name pos:start="1817:22" pos:end="1817:25">stfs</name><operator pos:start="1817:26" pos:end="1817:26">.</operator><name pos:start="1817:27" pos:end="1817:35">f_namelen</name></name></expr></argument>, <argument pos:start="1817:38" pos:end="1817:60"><expr pos:start="1817:38" pos:end="1817:60"><operator pos:start="1817:38" pos:end="1817:38">&amp;</operator><name pos:start="1817:39" pos:end="1817:60"><name pos:start="1817:39" pos:end="1817:49">target_stfs</name><operator pos:start="1817:50" pos:end="1817:51">-&gt;</operator><name pos:start="1817:52" pos:end="1817:60">f_namelen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1819:13" pos:end="1819:53"><expr pos:start="1819:13" pos:end="1819:52"><call pos:start="1819:13" pos:end="1819:52"><name pos:start="1819:13" pos:end="1819:30">unlock_user_struct</name><argument_list pos:start="1819:31" pos:end="1819:52">(<argument pos:start="1819:32" pos:end="1819:42"><expr pos:start="1819:32" pos:end="1819:42"><name pos:start="1819:32" pos:end="1819:42">target_stfs</name></expr></argument>, <argument pos:start="1819:45" pos:end="1819:48"><expr pos:start="1819:45" pos:end="1819:48"><name pos:start="1819:45" pos:end="1819:48">arg2</name></expr></argument>, <argument pos:start="1819:51" pos:end="1819:51"><expr pos:start="1819:51" pos:end="1819:51"><literal type="number" pos:start="1819:51" pos:end="1819:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="1823:9" pos:end="1823:14">break;</break>

    <case pos:start="1825:5" pos:end="1825:27">case <expr pos:start="1825:10" pos:end="1825:26"><name pos:start="1825:10" pos:end="1825:26">TARGET_NR_fstatfs</name></expr>:</case>

        <expr_stmt pos:start="1827:9" pos:end="1827:46"><expr pos:start="1827:9" pos:end="1827:45"><name pos:start="1827:9" pos:end="1827:11">ret</name> <operator pos:start="1827:13" pos:end="1827:13">=</operator> <call pos:start="1827:15" pos:end="1827:45"><name pos:start="1827:15" pos:end="1827:23">get_errno</name><argument_list pos:start="1827:24" pos:end="1827:45">(<argument pos:start="1827:25" pos:end="1827:44"><expr pos:start="1827:25" pos:end="1827:44"><call pos:start="1827:25" pos:end="1827:44"><name pos:start="1827:25" pos:end="1827:31">fstatfs</name><argument_list pos:start="1827:32" pos:end="1827:44">(<argument pos:start="1827:33" pos:end="1827:36"><expr pos:start="1827:33" pos:end="1827:36"><name pos:start="1827:33" pos:end="1827:36">arg1</name></expr></argument>, <argument pos:start="1827:39" pos:end="1827:43"><expr pos:start="1827:39" pos:end="1827:43"><operator pos:start="1827:39" pos:end="1827:39">&amp;</operator><name pos:start="1827:40" pos:end="1827:43">stfs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1829:9" pos:end="1832:0">goto <name pos:start="1829:14" pos:end="1829:27">convert_statfs</name>;</goto>

<cpp:ifdef pos:start="1831:1" pos:end="1831:25">#<cpp:directive pos:start="1831:2" pos:end="1831:6">ifdef</cpp:directive> <name pos:start="1831:8" pos:end="1831:25">TARGET_NR_statfs64</name></cpp:ifdef>

    <case pos:start="1833:5" pos:end="1833:28">case <expr pos:start="1833:10" pos:end="1833:27"><name pos:start="1833:10" pos:end="1833:27">TARGET_NR_statfs64</name></expr>:</case>

        <expr_stmt pos:start="1835:9" pos:end="1835:35"><expr pos:start="1835:9" pos:end="1835:34"><name pos:start="1835:9" pos:end="1835:9">p</name> <operator pos:start="1835:11" pos:end="1835:11">=</operator> <call pos:start="1835:13" pos:end="1835:34"><name pos:start="1835:13" pos:end="1835:28">lock_user_string</name><argument_list pos:start="1835:29" pos:end="1835:34">(<argument pos:start="1835:30" pos:end="1835:33"><expr pos:start="1835:30" pos:end="1835:33"><name pos:start="1835:30" pos:end="1835:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1837:9" pos:end="1837:48"><expr pos:start="1837:9" pos:end="1837:47"><name pos:start="1837:9" pos:end="1837:11">ret</name> <operator pos:start="1837:13" pos:end="1837:13">=</operator> <call pos:start="1837:15" pos:end="1837:47"><name pos:start="1837:15" pos:end="1837:23">get_errno</name><argument_list pos:start="1837:24" pos:end="1837:47">(<argument pos:start="1837:25" pos:end="1837:46"><expr pos:start="1837:25" pos:end="1837:46"><call pos:start="1837:25" pos:end="1837:46"><name pos:start="1837:25" pos:end="1837:30">statfs</name><argument_list pos:start="1837:31" pos:end="1837:46">(<argument pos:start="1837:32" pos:end="1837:38"><expr pos:start="1837:32" pos:end="1837:38"><call pos:start="1837:32" pos:end="1837:38"><name pos:start="1837:32" pos:end="1837:35">path</name><argument_list pos:start="1837:36" pos:end="1837:38">(<argument pos:start="1837:37" pos:end="1837:37"><expr pos:start="1837:37" pos:end="1837:37"><name pos:start="1837:37" pos:end="1837:37">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="1837:41" pos:end="1837:45"><expr pos:start="1837:41" pos:end="1837:45"><operator pos:start="1837:41" pos:end="1837:41">&amp;</operator><name pos:start="1837:42" pos:end="1837:45">stfs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1839:9" pos:end="1839:32"><expr pos:start="1839:9" pos:end="1839:31"><call pos:start="1839:9" pos:end="1839:31"><name pos:start="1839:9" pos:end="1839:19">unlock_user</name><argument_list pos:start="1839:20" pos:end="1839:31">(<argument pos:start="1839:21" pos:end="1839:21"><expr pos:start="1839:21" pos:end="1839:21"><name pos:start="1839:21" pos:end="1839:21">p</name></expr></argument>, <argument pos:start="1839:24" pos:end="1839:27"><expr pos:start="1839:24" pos:end="1839:27"><name pos:start="1839:24" pos:end="1839:27">arg1</name></expr></argument>, <argument pos:start="1839:30" pos:end="1839:30"><expr pos:start="1839:30" pos:end="1839:30"><literal type="number" pos:start="1839:30" pos:end="1839:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <label pos:start="1841:5" pos:end="1841:21"><name pos:start="1841:5" pos:end="1841:20">convert_statfs64</name>:</label>

        <if_stmt pos:start="1843:9" pos:end="1875:9"><if pos:start="1843:9" pos:end="1875:9">if <condition pos:start="1843:12" pos:end="1843:27">(<expr pos:start="1843:13" pos:end="1843:26"><operator pos:start="1843:13" pos:end="1843:13">!</operator><call pos:start="1843:14" pos:end="1843:26"><name pos:start="1843:14" pos:end="1843:21">is_error</name><argument_list pos:start="1843:22" pos:end="1843:26">(<argument pos:start="1843:23" pos:end="1843:25"><expr pos:start="1843:23" pos:end="1843:25"><name pos:start="1843:23" pos:end="1843:25">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1843:29" pos:end="1875:9">{<block_content pos:start="1845:13" pos:end="1873:53">

            <decl_stmt pos:start="1845:13" pos:end="1845:48"><decl pos:start="1845:13" pos:end="1845:47"><type pos:start="1845:13" pos:end="1845:36"><name pos:start="1845:13" pos:end="1845:34"><name pos:start="1845:13" pos:end="1845:18">struct</name> <name pos:start="1845:20" pos:end="1845:34">target_statfs64</name></name> <modifier pos:start="1845:36" pos:end="1845:36">*</modifier></type><name pos:start="1845:37" pos:end="1845:47">target_stfs</name></decl>;</decl_stmt>

           

            <expr_stmt pos:start="1849:13" pos:end="1849:51"><expr pos:start="1849:13" pos:end="1849:50"><call pos:start="1849:13" pos:end="1849:50"><name pos:start="1849:13" pos:end="1849:28">lock_user_struct</name><argument_list pos:start="1849:29" pos:end="1849:50">(<argument pos:start="1849:30" pos:end="1849:40"><expr pos:start="1849:30" pos:end="1849:40"><name pos:start="1849:30" pos:end="1849:40">target_stfs</name></expr></argument>, <argument pos:start="1849:43" pos:end="1849:46"><expr pos:start="1849:43" pos:end="1849:46"><name pos:start="1849:43" pos:end="1849:46">arg3</name></expr></argument>, <argument pos:start="1849:49" pos:end="1849:49"><expr pos:start="1849:49" pos:end="1849:49"><literal type="number" pos:start="1849:49" pos:end="1849:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="1851:13" pos:end="1851:50">/* ??? put_user is probably wrong.  */</comment>

            <expr_stmt pos:start="1853:13" pos:end="1853:56"><expr pos:start="1853:13" pos:end="1853:55"><call pos:start="1853:13" pos:end="1853:55"><name pos:start="1853:13" pos:end="1853:20">put_user</name><argument_list pos:start="1853:21" pos:end="1853:55">(<argument pos:start="1853:22" pos:end="1853:32"><expr pos:start="1853:22" pos:end="1853:32"><name pos:start="1853:22" pos:end="1853:32"><name pos:start="1853:22" pos:end="1853:25">stfs</name><operator pos:start="1853:26" pos:end="1853:26">.</operator><name pos:start="1853:27" pos:end="1853:32">f_type</name></name></expr></argument>, <argument pos:start="1853:35" pos:end="1853:54"><expr pos:start="1853:35" pos:end="1853:54"><operator pos:start="1853:35" pos:end="1853:35">&amp;</operator><name pos:start="1853:36" pos:end="1853:54"><name pos:start="1853:36" pos:end="1853:46">target_stfs</name><operator pos:start="1853:47" pos:end="1853:48">-&gt;</operator><name pos:start="1853:49" pos:end="1853:54">f_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1855:13" pos:end="1855:58"><expr pos:start="1855:13" pos:end="1855:57"><call pos:start="1855:13" pos:end="1855:57"><name pos:start="1855:13" pos:end="1855:20">put_user</name><argument_list pos:start="1855:21" pos:end="1855:57">(<argument pos:start="1855:22" pos:end="1855:33"><expr pos:start="1855:22" pos:end="1855:33"><name pos:start="1855:22" pos:end="1855:33"><name pos:start="1855:22" pos:end="1855:25">stfs</name><operator pos:start="1855:26" pos:end="1855:26">.</operator><name pos:start="1855:27" pos:end="1855:33">f_bsize</name></name></expr></argument>, <argument pos:start="1855:36" pos:end="1855:56"><expr pos:start="1855:36" pos:end="1855:56"><operator pos:start="1855:36" pos:end="1855:36">&amp;</operator><name pos:start="1855:37" pos:end="1855:56"><name pos:start="1855:37" pos:end="1855:47">target_stfs</name><operator pos:start="1855:48" pos:end="1855:49">-&gt;</operator><name pos:start="1855:50" pos:end="1855:56">f_bsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1857:13" pos:end="1857:60"><expr pos:start="1857:13" pos:end="1857:59"><call pos:start="1857:13" pos:end="1857:59"><name pos:start="1857:13" pos:end="1857:20">put_user</name><argument_list pos:start="1857:21" pos:end="1857:59">(<argument pos:start="1857:22" pos:end="1857:34"><expr pos:start="1857:22" pos:end="1857:34"><name pos:start="1857:22" pos:end="1857:34"><name pos:start="1857:22" pos:end="1857:25">stfs</name><operator pos:start="1857:26" pos:end="1857:26">.</operator><name pos:start="1857:27" pos:end="1857:34">f_blocks</name></name></expr></argument>, <argument pos:start="1857:37" pos:end="1857:58"><expr pos:start="1857:37" pos:end="1857:58"><operator pos:start="1857:37" pos:end="1857:37">&amp;</operator><name pos:start="1857:38" pos:end="1857:58"><name pos:start="1857:38" pos:end="1857:48">target_stfs</name><operator pos:start="1857:49" pos:end="1857:50">-&gt;</operator><name pos:start="1857:51" pos:end="1857:58">f_blocks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1859:13" pos:end="1859:58"><expr pos:start="1859:13" pos:end="1859:57"><call pos:start="1859:13" pos:end="1859:57"><name pos:start="1859:13" pos:end="1859:20">put_user</name><argument_list pos:start="1859:21" pos:end="1859:57">(<argument pos:start="1859:22" pos:end="1859:33"><expr pos:start="1859:22" pos:end="1859:33"><name pos:start="1859:22" pos:end="1859:33"><name pos:start="1859:22" pos:end="1859:25">stfs</name><operator pos:start="1859:26" pos:end="1859:26">.</operator><name pos:start="1859:27" pos:end="1859:33">f_bfree</name></name></expr></argument>, <argument pos:start="1859:36" pos:end="1859:56"><expr pos:start="1859:36" pos:end="1859:56"><operator pos:start="1859:36" pos:end="1859:36">&amp;</operator><name pos:start="1859:37" pos:end="1859:56"><name pos:start="1859:37" pos:end="1859:47">target_stfs</name><operator pos:start="1859:48" pos:end="1859:49">-&gt;</operator><name pos:start="1859:50" pos:end="1859:56">f_bfree</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1861:13" pos:end="1861:60"><expr pos:start="1861:13" pos:end="1861:59"><call pos:start="1861:13" pos:end="1861:59"><name pos:start="1861:13" pos:end="1861:20">put_user</name><argument_list pos:start="1861:21" pos:end="1861:59">(<argument pos:start="1861:22" pos:end="1861:34"><expr pos:start="1861:22" pos:end="1861:34"><name pos:start="1861:22" pos:end="1861:34"><name pos:start="1861:22" pos:end="1861:25">stfs</name><operator pos:start="1861:26" pos:end="1861:26">.</operator><name pos:start="1861:27" pos:end="1861:34">f_bavail</name></name></expr></argument>, <argument pos:start="1861:37" pos:end="1861:58"><expr pos:start="1861:37" pos:end="1861:58"><operator pos:start="1861:37" pos:end="1861:37">&amp;</operator><name pos:start="1861:38" pos:end="1861:58"><name pos:start="1861:38" pos:end="1861:48">target_stfs</name><operator pos:start="1861:49" pos:end="1861:50">-&gt;</operator><name pos:start="1861:51" pos:end="1861:58">f_bavail</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1863:13" pos:end="1863:58"><expr pos:start="1863:13" pos:end="1863:57"><call pos:start="1863:13" pos:end="1863:57"><name pos:start="1863:13" pos:end="1863:20">put_user</name><argument_list pos:start="1863:21" pos:end="1863:57">(<argument pos:start="1863:22" pos:end="1863:33"><expr pos:start="1863:22" pos:end="1863:33"><name pos:start="1863:22" pos:end="1863:33"><name pos:start="1863:22" pos:end="1863:25">stfs</name><operator pos:start="1863:26" pos:end="1863:26">.</operator><name pos:start="1863:27" pos:end="1863:33">f_files</name></name></expr></argument>, <argument pos:start="1863:36" pos:end="1863:56"><expr pos:start="1863:36" pos:end="1863:56"><operator pos:start="1863:36" pos:end="1863:36">&amp;</operator><name pos:start="1863:37" pos:end="1863:56"><name pos:start="1863:37" pos:end="1863:47">target_stfs</name><operator pos:start="1863:48" pos:end="1863:49">-&gt;</operator><name pos:start="1863:50" pos:end="1863:56">f_files</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1865:13" pos:end="1865:58"><expr pos:start="1865:13" pos:end="1865:57"><call pos:start="1865:13" pos:end="1865:57"><name pos:start="1865:13" pos:end="1865:20">put_user</name><argument_list pos:start="1865:21" pos:end="1865:57">(<argument pos:start="1865:22" pos:end="1865:33"><expr pos:start="1865:22" pos:end="1865:33"><name pos:start="1865:22" pos:end="1865:33"><name pos:start="1865:22" pos:end="1865:25">stfs</name><operator pos:start="1865:26" pos:end="1865:26">.</operator><name pos:start="1865:27" pos:end="1865:33">f_ffree</name></name></expr></argument>, <argument pos:start="1865:36" pos:end="1865:56"><expr pos:start="1865:36" pos:end="1865:56"><operator pos:start="1865:36" pos:end="1865:36">&amp;</operator><name pos:start="1865:37" pos:end="1865:56"><name pos:start="1865:37" pos:end="1865:47">target_stfs</name><operator pos:start="1865:48" pos:end="1865:49">-&gt;</operator><name pos:start="1865:50" pos:end="1865:56">f_ffree</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1867:13" pos:end="1867:72"><expr pos:start="1867:13" pos:end="1867:71"><call pos:start="1867:13" pos:end="1867:71"><name pos:start="1867:13" pos:end="1867:20">put_user</name><argument_list pos:start="1867:21" pos:end="1867:71">(<argument pos:start="1867:22" pos:end="1867:41"><expr pos:start="1867:22" pos:end="1867:41"><name pos:start="1867:22" pos:end="1867:41"><name pos:start="1867:22" pos:end="1867:25">stfs</name><operator pos:start="1867:26" pos:end="1867:26">.</operator><name pos:start="1867:27" pos:end="1867:32">f_fsid</name><operator pos:start="1867:33" pos:end="1867:33">.</operator><name pos:start="1867:34" pos:end="1867:38">__val</name><index pos:start="1867:39" pos:end="1867:41">[<expr pos:start="1867:40" pos:end="1867:40"><literal type="number" pos:start="1867:40" pos:end="1867:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1867:44" pos:end="1867:70"><expr pos:start="1867:44" pos:end="1867:70"><operator pos:start="1867:44" pos:end="1867:44">&amp;</operator><name pos:start="1867:45" pos:end="1867:70"><name pos:start="1867:45" pos:end="1867:55">target_stfs</name><operator pos:start="1867:56" pos:end="1867:57">-&gt;</operator><name pos:start="1867:58" pos:end="1867:63">f_fsid</name><operator pos:start="1867:64" pos:end="1867:64">.</operator><name pos:start="1867:65" pos:end="1867:67">val</name><index pos:start="1867:68" pos:end="1867:70">[<expr pos:start="1867:69" pos:end="1867:69"><literal type="number" pos:start="1867:69" pos:end="1867:69">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1869:13" pos:end="1869:72"><expr pos:start="1869:13" pos:end="1869:71"><call pos:start="1869:13" pos:end="1869:71"><name pos:start="1869:13" pos:end="1869:20">put_user</name><argument_list pos:start="1869:21" pos:end="1869:71">(<argument pos:start="1869:22" pos:end="1869:41"><expr pos:start="1869:22" pos:end="1869:41"><name pos:start="1869:22" pos:end="1869:41"><name pos:start="1869:22" pos:end="1869:25">stfs</name><operator pos:start="1869:26" pos:end="1869:26">.</operator><name pos:start="1869:27" pos:end="1869:32">f_fsid</name><operator pos:start="1869:33" pos:end="1869:33">.</operator><name pos:start="1869:34" pos:end="1869:38">__val</name><index pos:start="1869:39" pos:end="1869:41">[<expr pos:start="1869:40" pos:end="1869:40"><literal type="number" pos:start="1869:40" pos:end="1869:40">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="1869:44" pos:end="1869:70"><expr pos:start="1869:44" pos:end="1869:70"><operator pos:start="1869:44" pos:end="1869:44">&amp;</operator><name pos:start="1869:45" pos:end="1869:70"><name pos:start="1869:45" pos:end="1869:55">target_stfs</name><operator pos:start="1869:56" pos:end="1869:57">-&gt;</operator><name pos:start="1869:58" pos:end="1869:63">f_fsid</name><operator pos:start="1869:64" pos:end="1869:64">.</operator><name pos:start="1869:65" pos:end="1869:67">val</name><index pos:start="1869:68" pos:end="1869:70">[<expr pos:start="1869:69" pos:end="1869:69"><literal type="number" pos:start="1869:69" pos:end="1869:69">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1871:13" pos:end="1871:62"><expr pos:start="1871:13" pos:end="1871:61"><call pos:start="1871:13" pos:end="1871:61"><name pos:start="1871:13" pos:end="1871:20">put_user</name><argument_list pos:start="1871:21" pos:end="1871:61">(<argument pos:start="1871:22" pos:end="1871:35"><expr pos:start="1871:22" pos:end="1871:35"><name pos:start="1871:22" pos:end="1871:35"><name pos:start="1871:22" pos:end="1871:25">stfs</name><operator pos:start="1871:26" pos:end="1871:26">.</operator><name pos:start="1871:27" pos:end="1871:35">f_namelen</name></name></expr></argument>, <argument pos:start="1871:38" pos:end="1871:60"><expr pos:start="1871:38" pos:end="1871:60"><operator pos:start="1871:38" pos:end="1871:38">&amp;</operator><name pos:start="1871:39" pos:end="1871:60"><name pos:start="1871:39" pos:end="1871:49">target_stfs</name><operator pos:start="1871:50" pos:end="1871:51">-&gt;</operator><name pos:start="1871:52" pos:end="1871:60">f_namelen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1873:13" pos:end="1873:53"><expr pos:start="1873:13" pos:end="1873:52"><call pos:start="1873:13" pos:end="1873:52"><name pos:start="1873:13" pos:end="1873:30">unlock_user_struct</name><argument_list pos:start="1873:31" pos:end="1873:52">(<argument pos:start="1873:32" pos:end="1873:42"><expr pos:start="1873:32" pos:end="1873:42"><name pos:start="1873:32" pos:end="1873:42">target_stfs</name></expr></argument>, <argument pos:start="1873:45" pos:end="1873:48"><expr pos:start="1873:45" pos:end="1873:48"><name pos:start="1873:45" pos:end="1873:48">arg3</name></expr></argument>, <argument pos:start="1873:51" pos:end="1873:51"><expr pos:start="1873:51" pos:end="1873:51"><literal type="number" pos:start="1873:51" pos:end="1873:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="1877:9" pos:end="1877:14">break;</break>

    <case pos:start="1879:5" pos:end="1879:29">case <expr pos:start="1879:10" pos:end="1879:28"><name pos:start="1879:10" pos:end="1879:28">TARGET_NR_fstatfs64</name></expr>:</case>

        <expr_stmt pos:start="1881:9" pos:end="1881:46"><expr pos:start="1881:9" pos:end="1881:45"><name pos:start="1881:9" pos:end="1881:11">ret</name> <operator pos:start="1881:13" pos:end="1881:13">=</operator> <call pos:start="1881:15" pos:end="1881:45"><name pos:start="1881:15" pos:end="1881:23">get_errno</name><argument_list pos:start="1881:24" pos:end="1881:45">(<argument pos:start="1881:25" pos:end="1881:44"><expr pos:start="1881:25" pos:end="1881:44"><call pos:start="1881:25" pos:end="1881:44"><name pos:start="1881:25" pos:end="1881:31">fstatfs</name><argument_list pos:start="1881:32" pos:end="1881:44">(<argument pos:start="1881:33" pos:end="1881:36"><expr pos:start="1881:33" pos:end="1881:36"><name pos:start="1881:33" pos:end="1881:36">arg1</name></expr></argument>, <argument pos:start="1881:39" pos:end="1881:43"><expr pos:start="1881:39" pos:end="1881:43"><operator pos:start="1881:39" pos:end="1881:39">&amp;</operator><name pos:start="1881:40" pos:end="1881:43">stfs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1883:9" pos:end="1888:0">goto <name pos:start="1883:14" pos:end="1883:29">convert_statfs64</name>;</goto>

<cpp:endif pos:start="1885:1" pos:end="1885:6">#<cpp:directive pos:start="1885:2" pos:end="1885:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1887:1" pos:end="1887:23">#<cpp:directive pos:start="1887:2" pos:end="1887:6">ifdef</cpp:directive> <name pos:start="1887:8" pos:end="1887:23">TARGET_NR_ioperm</name></cpp:ifdef>

    <case pos:start="1889:5" pos:end="1889:26">case <expr pos:start="1889:10" pos:end="1889:25"><name pos:start="1889:10" pos:end="1889:25">TARGET_NR_ioperm</name></expr>:</case>

        <goto pos:start="1891:9" pos:end="1896:0">goto <name pos:start="1891:14" pos:end="1891:26">unimplemented</name>;</goto>

<cpp:endif pos:start="1893:1" pos:end="1893:6">#<cpp:directive pos:start="1893:2" pos:end="1893:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1895:1" pos:end="1895:27">#<cpp:directive pos:start="1895:2" pos:end="1895:6">ifdef</cpp:directive> <name pos:start="1895:8" pos:end="1895:27">TARGET_NR_socketcall</name></cpp:ifdef>

    <case pos:start="1897:5" pos:end="1897:30">case <expr pos:start="1897:10" pos:end="1897:29"><name pos:start="1897:10" pos:end="1897:29">TARGET_NR_socketcall</name></expr>:</case>

        <expr_stmt pos:start="1899:9" pos:end="1899:40"><expr pos:start="1899:9" pos:end="1899:39"><name pos:start="1899:9" pos:end="1899:11">ret</name> <operator pos:start="1899:13" pos:end="1899:13">=</operator> <call pos:start="1899:15" pos:end="1899:39"><name pos:start="1899:15" pos:end="1899:27">do_socketcall</name><argument_list pos:start="1899:28" pos:end="1899:39">(<argument pos:start="1899:29" pos:end="1899:32"><expr pos:start="1899:29" pos:end="1899:32"><name pos:start="1899:29" pos:end="1899:32">arg1</name></expr></argument>, <argument pos:start="1899:35" pos:end="1899:38"><expr pos:start="1899:35" pos:end="1899:38"><name pos:start="1899:35" pos:end="1899:38">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1901:9" pos:end="1906:0">break;</break>

<cpp:endif pos:start="1903:1" pos:end="1903:6">#<cpp:directive pos:start="1903:2" pos:end="1903:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1905:1" pos:end="1905:23">#<cpp:directive pos:start="1905:2" pos:end="1905:6">ifdef</cpp:directive> <name pos:start="1905:8" pos:end="1905:23">TARGET_NR_accept</name></cpp:ifdef>

    <case pos:start="1907:5" pos:end="1907:26">case <expr pos:start="1907:10" pos:end="1907:25"><name pos:start="1907:10" pos:end="1907:25">TARGET_NR_accept</name></expr>:</case>

        <expr_stmt pos:start="1909:9" pos:end="1909:42"><expr pos:start="1909:9" pos:end="1909:41"><name pos:start="1909:9" pos:end="1909:11">ret</name> <operator pos:start="1909:13" pos:end="1909:13">=</operator> <call pos:start="1909:15" pos:end="1909:41"><name pos:start="1909:15" pos:end="1909:23">do_accept</name><argument_list pos:start="1909:24" pos:end="1909:41">(<argument pos:start="1909:25" pos:end="1909:28"><expr pos:start="1909:25" pos:end="1909:28"><name pos:start="1909:25" pos:end="1909:28">arg1</name></expr></argument>, <argument pos:start="1909:31" pos:end="1909:34"><expr pos:start="1909:31" pos:end="1909:34"><name pos:start="1909:31" pos:end="1909:34">arg2</name></expr></argument>, <argument pos:start="1909:37" pos:end="1909:40"><expr pos:start="1909:37" pos:end="1909:40"><name pos:start="1909:37" pos:end="1909:40">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1911:9" pos:end="1916:0">break;</break>

<cpp:endif pos:start="1913:1" pos:end="1913:6">#<cpp:directive pos:start="1913:2" pos:end="1913:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1915:1" pos:end="1915:21">#<cpp:directive pos:start="1915:2" pos:end="1915:6">ifdef</cpp:directive> <name pos:start="1915:8" pos:end="1915:21">TARGET_NR_bind</name></cpp:ifdef>

    <case pos:start="1917:5" pos:end="1917:24">case <expr pos:start="1917:10" pos:end="1917:23"><name pos:start="1917:10" pos:end="1917:23">TARGET_NR_bind</name></expr>:</case>

        <expr_stmt pos:start="1919:9" pos:end="1919:40"><expr pos:start="1919:9" pos:end="1919:39"><name pos:start="1919:9" pos:end="1919:11">ret</name> <operator pos:start="1919:13" pos:end="1919:13">=</operator> <call pos:start="1919:15" pos:end="1919:39"><name pos:start="1919:15" pos:end="1919:21">do_bind</name><argument_list pos:start="1919:22" pos:end="1919:39">(<argument pos:start="1919:23" pos:end="1919:26"><expr pos:start="1919:23" pos:end="1919:26"><name pos:start="1919:23" pos:end="1919:26">arg1</name></expr></argument>, <argument pos:start="1919:29" pos:end="1919:32"><expr pos:start="1919:29" pos:end="1919:32"><name pos:start="1919:29" pos:end="1919:32">arg2</name></expr></argument>, <argument pos:start="1919:35" pos:end="1919:38"><expr pos:start="1919:35" pos:end="1919:38"><name pos:start="1919:35" pos:end="1919:38">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1921:9" pos:end="1926:0">break;</break>

<cpp:endif pos:start="1923:1" pos:end="1923:6">#<cpp:directive pos:start="1923:2" pos:end="1923:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1925:1" pos:end="1925:24">#<cpp:directive pos:start="1925:2" pos:end="1925:6">ifdef</cpp:directive> <name pos:start="1925:8" pos:end="1925:24">TARGET_NR_connect</name></cpp:ifdef>

    <case pos:start="1927:5" pos:end="1927:27">case <expr pos:start="1927:10" pos:end="1927:26"><name pos:start="1927:10" pos:end="1927:26">TARGET_NR_connect</name></expr>:</case>

        <expr_stmt pos:start="1929:9" pos:end="1929:43"><expr pos:start="1929:9" pos:end="1929:42"><name pos:start="1929:9" pos:end="1929:11">ret</name> <operator pos:start="1929:13" pos:end="1929:13">=</operator> <call pos:start="1929:15" pos:end="1929:42"><name pos:start="1929:15" pos:end="1929:24">do_connect</name><argument_list pos:start="1929:25" pos:end="1929:42">(<argument pos:start="1929:26" pos:end="1929:29"><expr pos:start="1929:26" pos:end="1929:29"><name pos:start="1929:26" pos:end="1929:29">arg1</name></expr></argument>, <argument pos:start="1929:32" pos:end="1929:35"><expr pos:start="1929:32" pos:end="1929:35"><name pos:start="1929:32" pos:end="1929:35">arg2</name></expr></argument>, <argument pos:start="1929:38" pos:end="1929:41"><expr pos:start="1929:38" pos:end="1929:41"><name pos:start="1929:38" pos:end="1929:41">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1931:9" pos:end="1936:0">break;</break>

<cpp:endif pos:start="1933:1" pos:end="1933:6">#<cpp:directive pos:start="1933:2" pos:end="1933:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1935:1" pos:end="1935:28">#<cpp:directive pos:start="1935:2" pos:end="1935:6">ifdef</cpp:directive> <name pos:start="1935:8" pos:end="1935:28">TARGET_NR_getpeername</name></cpp:ifdef>

    <case pos:start="1937:5" pos:end="1937:31">case <expr pos:start="1937:10" pos:end="1937:30"><name pos:start="1937:10" pos:end="1937:30">TARGET_NR_getpeername</name></expr>:</case>

        <expr_stmt pos:start="1939:9" pos:end="1939:47"><expr pos:start="1939:9" pos:end="1939:46"><name pos:start="1939:9" pos:end="1939:11">ret</name> <operator pos:start="1939:13" pos:end="1939:13">=</operator> <call pos:start="1939:15" pos:end="1939:46"><name pos:start="1939:15" pos:end="1939:28">do_getpeername</name><argument_list pos:start="1939:29" pos:end="1939:46">(<argument pos:start="1939:30" pos:end="1939:33"><expr pos:start="1939:30" pos:end="1939:33"><name pos:start="1939:30" pos:end="1939:33">arg1</name></expr></argument>, <argument pos:start="1939:36" pos:end="1939:39"><expr pos:start="1939:36" pos:end="1939:39"><name pos:start="1939:36" pos:end="1939:39">arg2</name></expr></argument>, <argument pos:start="1939:42" pos:end="1939:45"><expr pos:start="1939:42" pos:end="1939:45"><name pos:start="1939:42" pos:end="1939:45">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1941:9" pos:end="1946:0">break;</break>

<cpp:endif pos:start="1943:1" pos:end="1943:6">#<cpp:directive pos:start="1943:2" pos:end="1943:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1945:1" pos:end="1945:28">#<cpp:directive pos:start="1945:2" pos:end="1945:6">ifdef</cpp:directive> <name pos:start="1945:8" pos:end="1945:28">TARGET_NR_getsockname</name></cpp:ifdef>

    <case pos:start="1947:5" pos:end="1947:31">case <expr pos:start="1947:10" pos:end="1947:30"><name pos:start="1947:10" pos:end="1947:30">TARGET_NR_getsockname</name></expr>:</case>

        <expr_stmt pos:start="1949:9" pos:end="1949:47"><expr pos:start="1949:9" pos:end="1949:46"><name pos:start="1949:9" pos:end="1949:11">ret</name> <operator pos:start="1949:13" pos:end="1949:13">=</operator> <call pos:start="1949:15" pos:end="1949:46"><name pos:start="1949:15" pos:end="1949:28">do_getsockname</name><argument_list pos:start="1949:29" pos:end="1949:46">(<argument pos:start="1949:30" pos:end="1949:33"><expr pos:start="1949:30" pos:end="1949:33"><name pos:start="1949:30" pos:end="1949:33">arg1</name></expr></argument>, <argument pos:start="1949:36" pos:end="1949:39"><expr pos:start="1949:36" pos:end="1949:39"><name pos:start="1949:36" pos:end="1949:39">arg2</name></expr></argument>, <argument pos:start="1949:42" pos:end="1949:45"><expr pos:start="1949:42" pos:end="1949:45"><name pos:start="1949:42" pos:end="1949:45">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1951:9" pos:end="1956:0">break;</break>

<cpp:endif pos:start="1953:1" pos:end="1953:6">#<cpp:directive pos:start="1953:2" pos:end="1953:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1955:1" pos:end="1955:27">#<cpp:directive pos:start="1955:2" pos:end="1955:6">ifdef</cpp:directive> <name pos:start="1955:8" pos:end="1955:27">TARGET_NR_getsockopt</name></cpp:ifdef>

    <case pos:start="1957:5" pos:end="1957:30">case <expr pos:start="1957:10" pos:end="1957:29"><name pos:start="1957:10" pos:end="1957:29">TARGET_NR_getsockopt</name></expr>:</case>

        <expr_stmt pos:start="1959:9" pos:end="1959:58"><expr pos:start="1959:9" pos:end="1959:57"><name pos:start="1959:9" pos:end="1959:11">ret</name> <operator pos:start="1959:13" pos:end="1959:13">=</operator> <call pos:start="1959:15" pos:end="1959:57"><name pos:start="1959:15" pos:end="1959:27">do_getsockopt</name><argument_list pos:start="1959:28" pos:end="1959:57">(<argument pos:start="1959:29" pos:end="1959:32"><expr pos:start="1959:29" pos:end="1959:32"><name pos:start="1959:29" pos:end="1959:32">arg1</name></expr></argument>, <argument pos:start="1959:35" pos:end="1959:38"><expr pos:start="1959:35" pos:end="1959:38"><name pos:start="1959:35" pos:end="1959:38">arg2</name></expr></argument>, <argument pos:start="1959:41" pos:end="1959:44"><expr pos:start="1959:41" pos:end="1959:44"><name pos:start="1959:41" pos:end="1959:44">arg3</name></expr></argument>, <argument pos:start="1959:47" pos:end="1959:50"><expr pos:start="1959:47" pos:end="1959:50"><name pos:start="1959:47" pos:end="1959:50">arg4</name></expr></argument>, <argument pos:start="1959:53" pos:end="1959:56"><expr pos:start="1959:53" pos:end="1959:56"><name pos:start="1959:53" pos:end="1959:56">arg5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1961:9" pos:end="1966:0">break;</break>

<cpp:endif pos:start="1963:1" pos:end="1963:6">#<cpp:directive pos:start="1963:2" pos:end="1963:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1965:1" pos:end="1965:23">#<cpp:directive pos:start="1965:2" pos:end="1965:6">ifdef</cpp:directive> <name pos:start="1965:8" pos:end="1965:23">TARGET_NR_listen</name></cpp:ifdef>

    <case pos:start="1967:5" pos:end="1967:26">case <expr pos:start="1967:10" pos:end="1967:25"><name pos:start="1967:10" pos:end="1967:25">TARGET_NR_listen</name></expr>:</case>

        <expr_stmt pos:start="1969:9" pos:end="1969:44"><expr pos:start="1969:9" pos:end="1969:43"><name pos:start="1969:9" pos:end="1969:11">ret</name> <operator pos:start="1969:13" pos:end="1969:13">=</operator> <call pos:start="1969:15" pos:end="1969:43"><name pos:start="1969:15" pos:end="1969:23">get_errno</name><argument_list pos:start="1969:24" pos:end="1969:43">(<argument pos:start="1969:25" pos:end="1969:42"><expr pos:start="1969:25" pos:end="1969:42"><call pos:start="1969:25" pos:end="1969:42"><name pos:start="1969:25" pos:end="1969:30">listen</name><argument_list pos:start="1969:31" pos:end="1969:42">(<argument pos:start="1969:32" pos:end="1969:35"><expr pos:start="1969:32" pos:end="1969:35"><name pos:start="1969:32" pos:end="1969:35">arg1</name></expr></argument>, <argument pos:start="1969:38" pos:end="1969:41"><expr pos:start="1969:38" pos:end="1969:41"><name pos:start="1969:38" pos:end="1969:41">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1971:9" pos:end="1976:0">break;</break>

<cpp:endif pos:start="1973:1" pos:end="1973:6">#<cpp:directive pos:start="1973:2" pos:end="1973:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1975:1" pos:end="1975:21">#<cpp:directive pos:start="1975:2" pos:end="1975:6">ifdef</cpp:directive> <name pos:start="1975:8" pos:end="1975:21">TARGET_NR_recv</name></cpp:ifdef>

    <case pos:start="1977:5" pos:end="1977:24">case <expr pos:start="1977:10" pos:end="1977:23"><name pos:start="1977:10" pos:end="1977:23">TARGET_NR_recv</name></expr>:</case>

        <expr_stmt pos:start="1979:9" pos:end="1979:56"><expr pos:start="1979:9" pos:end="1979:55"><name pos:start="1979:9" pos:end="1979:11">ret</name> <operator pos:start="1979:13" pos:end="1979:13">=</operator> <call pos:start="1979:15" pos:end="1979:55"><name pos:start="1979:15" pos:end="1979:25">do_recvfrom</name><argument_list pos:start="1979:26" pos:end="1979:55">(<argument pos:start="1979:27" pos:end="1979:30"><expr pos:start="1979:27" pos:end="1979:30"><name pos:start="1979:27" pos:end="1979:30">arg1</name></expr></argument>, <argument pos:start="1979:33" pos:end="1979:36"><expr pos:start="1979:33" pos:end="1979:36"><name pos:start="1979:33" pos:end="1979:36">arg2</name></expr></argument>, <argument pos:start="1979:39" pos:end="1979:42"><expr pos:start="1979:39" pos:end="1979:42"><name pos:start="1979:39" pos:end="1979:42">arg3</name></expr></argument>, <argument pos:start="1979:45" pos:end="1979:48"><expr pos:start="1979:45" pos:end="1979:48"><name pos:start="1979:45" pos:end="1979:48">arg4</name></expr></argument>, <argument pos:start="1979:51" pos:end="1979:51"><expr pos:start="1979:51" pos:end="1979:51"><literal type="number" pos:start="1979:51" pos:end="1979:51">0</literal></expr></argument>, <argument pos:start="1979:54" pos:end="1979:54"><expr pos:start="1979:54" pos:end="1979:54"><literal type="number" pos:start="1979:54" pos:end="1979:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1981:9" pos:end="1986:0">break;</break>

<cpp:endif pos:start="1983:1" pos:end="1983:6">#<cpp:directive pos:start="1983:2" pos:end="1983:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1985:1" pos:end="1985:25">#<cpp:directive pos:start="1985:2" pos:end="1985:6">ifdef</cpp:directive> <name pos:start="1985:8" pos:end="1985:25">TARGET_NR_recvfrom</name></cpp:ifdef>

    <case pos:start="1987:5" pos:end="1987:28">case <expr pos:start="1987:10" pos:end="1987:27"><name pos:start="1987:10" pos:end="1987:27">TARGET_NR_recvfrom</name></expr>:</case>

        <expr_stmt pos:start="1989:9" pos:end="1989:62"><expr pos:start="1989:9" pos:end="1989:61"><name pos:start="1989:9" pos:end="1989:11">ret</name> <operator pos:start="1989:13" pos:end="1989:13">=</operator> <call pos:start="1989:15" pos:end="1989:61"><name pos:start="1989:15" pos:end="1989:25">do_recvfrom</name><argument_list pos:start="1989:26" pos:end="1989:61">(<argument pos:start="1989:27" pos:end="1989:30"><expr pos:start="1989:27" pos:end="1989:30"><name pos:start="1989:27" pos:end="1989:30">arg1</name></expr></argument>, <argument pos:start="1989:33" pos:end="1989:36"><expr pos:start="1989:33" pos:end="1989:36"><name pos:start="1989:33" pos:end="1989:36">arg2</name></expr></argument>, <argument pos:start="1989:39" pos:end="1989:42"><expr pos:start="1989:39" pos:end="1989:42"><name pos:start="1989:39" pos:end="1989:42">arg3</name></expr></argument>, <argument pos:start="1989:45" pos:end="1989:48"><expr pos:start="1989:45" pos:end="1989:48"><name pos:start="1989:45" pos:end="1989:48">arg4</name></expr></argument>, <argument pos:start="1989:51" pos:end="1989:54"><expr pos:start="1989:51" pos:end="1989:54"><name pos:start="1989:51" pos:end="1989:54">arg5</name></expr></argument>, <argument pos:start="1989:57" pos:end="1989:60"><expr pos:start="1989:57" pos:end="1989:60"><name pos:start="1989:57" pos:end="1989:60">arg6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1991:9" pos:end="1996:0">break;</break>

<cpp:endif pos:start="1993:1" pos:end="1993:6">#<cpp:directive pos:start="1993:2" pos:end="1993:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1995:1" pos:end="1995:24">#<cpp:directive pos:start="1995:2" pos:end="1995:6">ifdef</cpp:directive> <name pos:start="1995:8" pos:end="1995:24">TARGET_NR_recvmsg</name></cpp:ifdef>

    <case pos:start="1997:5" pos:end="1997:27">case <expr pos:start="1997:10" pos:end="1997:26"><name pos:start="1997:10" pos:end="1997:26">TARGET_NR_recvmsg</name></expr>:</case>

        <expr_stmt pos:start="1999:9" pos:end="1999:50"><expr pos:start="1999:9" pos:end="1999:49"><name pos:start="1999:9" pos:end="1999:11">ret</name> <operator pos:start="1999:13" pos:end="1999:13">=</operator> <call pos:start="1999:15" pos:end="1999:49"><name pos:start="1999:15" pos:end="1999:28">do_sendrecvmsg</name><argument_list pos:start="1999:29" pos:end="1999:49">(<argument pos:start="1999:30" pos:end="1999:33"><expr pos:start="1999:30" pos:end="1999:33"><name pos:start="1999:30" pos:end="1999:33">arg1</name></expr></argument>, <argument pos:start="1999:36" pos:end="1999:39"><expr pos:start="1999:36" pos:end="1999:39"><name pos:start="1999:36" pos:end="1999:39">arg2</name></expr></argument>, <argument pos:start="1999:42" pos:end="1999:45"><expr pos:start="1999:42" pos:end="1999:45"><name pos:start="1999:42" pos:end="1999:45">arg3</name></expr></argument>, <argument pos:start="1999:48" pos:end="1999:48"><expr pos:start="1999:48" pos:end="1999:48"><literal type="number" pos:start="1999:48" pos:end="1999:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2001:9" pos:end="2006:0">break;</break>

<cpp:endif pos:start="2003:1" pos:end="2003:6">#<cpp:directive pos:start="2003:2" pos:end="2003:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2005:1" pos:end="2005:21">#<cpp:directive pos:start="2005:2" pos:end="2005:6">ifdef</cpp:directive> <name pos:start="2005:8" pos:end="2005:21">TARGET_NR_send</name></cpp:ifdef>

    <case pos:start="2007:5" pos:end="2007:24">case <expr pos:start="2007:10" pos:end="2007:23"><name pos:start="2007:10" pos:end="2007:23">TARGET_NR_send</name></expr>:</case>

        <expr_stmt pos:start="2009:9" pos:end="2009:54"><expr pos:start="2009:9" pos:end="2009:53"><name pos:start="2009:9" pos:end="2009:11">ret</name> <operator pos:start="2009:13" pos:end="2009:13">=</operator> <call pos:start="2009:15" pos:end="2009:53"><name pos:start="2009:15" pos:end="2009:23">do_sendto</name><argument_list pos:start="2009:24" pos:end="2009:53">(<argument pos:start="2009:25" pos:end="2009:28"><expr pos:start="2009:25" pos:end="2009:28"><name pos:start="2009:25" pos:end="2009:28">arg1</name></expr></argument>, <argument pos:start="2009:31" pos:end="2009:34"><expr pos:start="2009:31" pos:end="2009:34"><name pos:start="2009:31" pos:end="2009:34">arg2</name></expr></argument>, <argument pos:start="2009:37" pos:end="2009:40"><expr pos:start="2009:37" pos:end="2009:40"><name pos:start="2009:37" pos:end="2009:40">arg3</name></expr></argument>, <argument pos:start="2009:43" pos:end="2009:46"><expr pos:start="2009:43" pos:end="2009:46"><name pos:start="2009:43" pos:end="2009:46">arg4</name></expr></argument>, <argument pos:start="2009:49" pos:end="2009:49"><expr pos:start="2009:49" pos:end="2009:49"><literal type="number" pos:start="2009:49" pos:end="2009:49">0</literal></expr></argument>, <argument pos:start="2009:52" pos:end="2009:52"><expr pos:start="2009:52" pos:end="2009:52"><literal type="number" pos:start="2009:52" pos:end="2009:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2011:9" pos:end="2016:0">break;</break>

<cpp:endif pos:start="2013:1" pos:end="2013:6">#<cpp:directive pos:start="2013:2" pos:end="2013:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2015:1" pos:end="2015:24">#<cpp:directive pos:start="2015:2" pos:end="2015:6">ifdef</cpp:directive> <name pos:start="2015:8" pos:end="2015:24">TARGET_NR_sendmsg</name></cpp:ifdef>

    <case pos:start="2017:5" pos:end="2017:27">case <expr pos:start="2017:10" pos:end="2017:26"><name pos:start="2017:10" pos:end="2017:26">TARGET_NR_sendmsg</name></expr>:</case>

        <expr_stmt pos:start="2019:9" pos:end="2019:50"><expr pos:start="2019:9" pos:end="2019:49"><name pos:start="2019:9" pos:end="2019:11">ret</name> <operator pos:start="2019:13" pos:end="2019:13">=</operator> <call pos:start="2019:15" pos:end="2019:49"><name pos:start="2019:15" pos:end="2019:28">do_sendrecvmsg</name><argument_list pos:start="2019:29" pos:end="2019:49">(<argument pos:start="2019:30" pos:end="2019:33"><expr pos:start="2019:30" pos:end="2019:33"><name pos:start="2019:30" pos:end="2019:33">arg1</name></expr></argument>, <argument pos:start="2019:36" pos:end="2019:39"><expr pos:start="2019:36" pos:end="2019:39"><name pos:start="2019:36" pos:end="2019:39">arg2</name></expr></argument>, <argument pos:start="2019:42" pos:end="2019:45"><expr pos:start="2019:42" pos:end="2019:45"><name pos:start="2019:42" pos:end="2019:45">arg3</name></expr></argument>, <argument pos:start="2019:48" pos:end="2019:48"><expr pos:start="2019:48" pos:end="2019:48"><literal type="number" pos:start="2019:48" pos:end="2019:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2021:9" pos:end="2026:0">break;</break>

<cpp:endif pos:start="2023:1" pos:end="2023:6">#<cpp:directive pos:start="2023:2" pos:end="2023:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2025:1" pos:end="2025:23">#<cpp:directive pos:start="2025:2" pos:end="2025:6">ifdef</cpp:directive> <name pos:start="2025:8" pos:end="2025:23">TARGET_NR_sendto</name></cpp:ifdef>

    <case pos:start="2027:5" pos:end="2027:26">case <expr pos:start="2027:10" pos:end="2027:25"><name pos:start="2027:10" pos:end="2027:25">TARGET_NR_sendto</name></expr>:</case>

        <expr_stmt pos:start="2029:9" pos:end="2029:60"><expr pos:start="2029:9" pos:end="2029:59"><name pos:start="2029:9" pos:end="2029:11">ret</name> <operator pos:start="2029:13" pos:end="2029:13">=</operator> <call pos:start="2029:15" pos:end="2029:59"><name pos:start="2029:15" pos:end="2029:23">do_sendto</name><argument_list pos:start="2029:24" pos:end="2029:59">(<argument pos:start="2029:25" pos:end="2029:28"><expr pos:start="2029:25" pos:end="2029:28"><name pos:start="2029:25" pos:end="2029:28">arg1</name></expr></argument>, <argument pos:start="2029:31" pos:end="2029:34"><expr pos:start="2029:31" pos:end="2029:34"><name pos:start="2029:31" pos:end="2029:34">arg2</name></expr></argument>, <argument pos:start="2029:37" pos:end="2029:40"><expr pos:start="2029:37" pos:end="2029:40"><name pos:start="2029:37" pos:end="2029:40">arg3</name></expr></argument>, <argument pos:start="2029:43" pos:end="2029:46"><expr pos:start="2029:43" pos:end="2029:46"><name pos:start="2029:43" pos:end="2029:46">arg4</name></expr></argument>, <argument pos:start="2029:49" pos:end="2029:52"><expr pos:start="2029:49" pos:end="2029:52"><name pos:start="2029:49" pos:end="2029:52">arg5</name></expr></argument>, <argument pos:start="2029:55" pos:end="2029:58"><expr pos:start="2029:55" pos:end="2029:58"><name pos:start="2029:55" pos:end="2029:58">arg6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2031:9" pos:end="2036:0">break;</break>

<cpp:endif pos:start="2033:1" pos:end="2033:6">#<cpp:directive pos:start="2033:2" pos:end="2033:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2035:1" pos:end="2035:25">#<cpp:directive pos:start="2035:2" pos:end="2035:6">ifdef</cpp:directive> <name pos:start="2035:8" pos:end="2035:25">TARGET_NR_shutdown</name></cpp:ifdef>

    <case pos:start="2037:5" pos:end="2037:28">case <expr pos:start="2037:10" pos:end="2037:27"><name pos:start="2037:10" pos:end="2037:27">TARGET_NR_shutdown</name></expr>:</case>

        <expr_stmt pos:start="2039:9" pos:end="2039:46"><expr pos:start="2039:9" pos:end="2039:45"><name pos:start="2039:9" pos:end="2039:11">ret</name> <operator pos:start="2039:13" pos:end="2039:13">=</operator> <call pos:start="2039:15" pos:end="2039:45"><name pos:start="2039:15" pos:end="2039:23">get_errno</name><argument_list pos:start="2039:24" pos:end="2039:45">(<argument pos:start="2039:25" pos:end="2039:44"><expr pos:start="2039:25" pos:end="2039:44"><call pos:start="2039:25" pos:end="2039:44"><name pos:start="2039:25" pos:end="2039:32">shutdown</name><argument_list pos:start="2039:33" pos:end="2039:44">(<argument pos:start="2039:34" pos:end="2039:37"><expr pos:start="2039:34" pos:end="2039:37"><name pos:start="2039:34" pos:end="2039:37">arg1</name></expr></argument>, <argument pos:start="2039:40" pos:end="2039:43"><expr pos:start="2039:40" pos:end="2039:43"><name pos:start="2039:40" pos:end="2039:43">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2041:9" pos:end="2046:0">break;</break>

<cpp:endif pos:start="2043:1" pos:end="2043:6">#<cpp:directive pos:start="2043:2" pos:end="2043:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2045:1" pos:end="2045:23">#<cpp:directive pos:start="2045:2" pos:end="2045:6">ifdef</cpp:directive> <name pos:start="2045:8" pos:end="2045:23">TARGET_NR_socket</name></cpp:ifdef>

    <case pos:start="2047:5" pos:end="2047:26">case <expr pos:start="2047:10" pos:end="2047:25"><name pos:start="2047:10" pos:end="2047:25">TARGET_NR_socket</name></expr>:</case>

        <expr_stmt pos:start="2049:9" pos:end="2049:42"><expr pos:start="2049:9" pos:end="2049:41"><name pos:start="2049:9" pos:end="2049:11">ret</name> <operator pos:start="2049:13" pos:end="2049:13">=</operator> <call pos:start="2049:15" pos:end="2049:41"><name pos:start="2049:15" pos:end="2049:23">do_socket</name><argument_list pos:start="2049:24" pos:end="2049:41">(<argument pos:start="2049:25" pos:end="2049:28"><expr pos:start="2049:25" pos:end="2049:28"><name pos:start="2049:25" pos:end="2049:28">arg1</name></expr></argument>, <argument pos:start="2049:31" pos:end="2049:34"><expr pos:start="2049:31" pos:end="2049:34"><name pos:start="2049:31" pos:end="2049:34">arg2</name></expr></argument>, <argument pos:start="2049:37" pos:end="2049:40"><expr pos:start="2049:37" pos:end="2049:40"><name pos:start="2049:37" pos:end="2049:40">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2051:9" pos:end="2056:0">break;</break>

<cpp:endif pos:start="2053:1" pos:end="2053:6">#<cpp:directive pos:start="2053:2" pos:end="2053:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2055:1" pos:end="2055:27">#<cpp:directive pos:start="2055:2" pos:end="2055:6">ifdef</cpp:directive> <name pos:start="2055:8" pos:end="2055:27">TARGET_NR_socketpair</name></cpp:ifdef>

    <case pos:start="2057:5" pos:end="2057:30">case <expr pos:start="2057:10" pos:end="2057:29"><name pos:start="2057:10" pos:end="2057:29">TARGET_NR_socketpair</name></expr>:</case>

        <expr_stmt pos:start="2059:9" pos:end="2059:52"><expr pos:start="2059:9" pos:end="2059:51"><name pos:start="2059:9" pos:end="2059:11">ret</name> <operator pos:start="2059:13" pos:end="2059:13">=</operator> <call pos:start="2059:15" pos:end="2059:51"><name pos:start="2059:15" pos:end="2059:27">do_socketpair</name><argument_list pos:start="2059:28" pos:end="2059:51">(<argument pos:start="2059:29" pos:end="2059:32"><expr pos:start="2059:29" pos:end="2059:32"><name pos:start="2059:29" pos:end="2059:32">arg1</name></expr></argument>, <argument pos:start="2059:35" pos:end="2059:38"><expr pos:start="2059:35" pos:end="2059:38"><name pos:start="2059:35" pos:end="2059:38">arg2</name></expr></argument>, <argument pos:start="2059:41" pos:end="2059:44"><expr pos:start="2059:41" pos:end="2059:44"><name pos:start="2059:41" pos:end="2059:44">arg3</name></expr></argument>, <argument pos:start="2059:47" pos:end="2059:50"><expr pos:start="2059:47" pos:end="2059:50"><name pos:start="2059:47" pos:end="2059:50">arg4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2061:9" pos:end="2066:0">break;</break>

<cpp:endif pos:start="2063:1" pos:end="2063:6">#<cpp:directive pos:start="2063:2" pos:end="2063:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2065:1" pos:end="2065:27">#<cpp:directive pos:start="2065:2" pos:end="2065:6">ifdef</cpp:directive> <name pos:start="2065:8" pos:end="2065:27">TARGET_NR_setsockopt</name></cpp:ifdef>

    <case pos:start="2067:5" pos:end="2067:30">case <expr pos:start="2067:10" pos:end="2067:29"><name pos:start="2067:10" pos:end="2067:29">TARGET_NR_setsockopt</name></expr>:</case>

        <expr_stmt pos:start="2069:9" pos:end="2069:70"><expr pos:start="2069:9" pos:end="2069:69"><name pos:start="2069:9" pos:end="2069:11">ret</name> <operator pos:start="2069:13" pos:end="2069:13">=</operator> <call pos:start="2069:15" pos:end="2069:69"><name pos:start="2069:15" pos:end="2069:27">do_setsockopt</name><argument_list pos:start="2069:28" pos:end="2069:69">(<argument pos:start="2069:29" pos:end="2069:32"><expr pos:start="2069:29" pos:end="2069:32"><name pos:start="2069:29" pos:end="2069:32">arg1</name></expr></argument>, <argument pos:start="2069:35" pos:end="2069:38"><expr pos:start="2069:35" pos:end="2069:38"><name pos:start="2069:35" pos:end="2069:38">arg2</name></expr></argument>, <argument pos:start="2069:41" pos:end="2069:44"><expr pos:start="2069:41" pos:end="2069:44"><name pos:start="2069:41" pos:end="2069:44">arg3</name></expr></argument>, <argument pos:start="2069:47" pos:end="2069:50"><expr pos:start="2069:47" pos:end="2069:50"><name pos:start="2069:47" pos:end="2069:50">arg4</name></expr></argument>, <argument pos:start="2069:53" pos:end="2069:68"><expr pos:start="2069:53" pos:end="2069:68"><operator pos:start="2069:53" pos:end="2069:53">(</operator><name pos:start="2069:54" pos:end="2069:62">socklen_t</name><operator pos:start="2069:63" pos:end="2069:63">)</operator> <name pos:start="2069:65" pos:end="2069:68">arg5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2071:9" pos:end="2074:0">break;</break>

<cpp:endif pos:start="2073:1" pos:end="2073:6">#<cpp:directive pos:start="2073:2" pos:end="2073:6">endif</cpp:directive></cpp:endif>



    <case pos:start="2077:5" pos:end="2077:26">case <expr pos:start="2077:10" pos:end="2077:25"><name pos:start="2077:10" pos:end="2077:25">TARGET_NR_syslog</name></expr>:</case>

        <expr_stmt pos:start="2079:9" pos:end="2079:35"><expr pos:start="2079:9" pos:end="2079:34"><name pos:start="2079:9" pos:end="2079:9">p</name> <operator pos:start="2079:11" pos:end="2079:11">=</operator> <call pos:start="2079:13" pos:end="2079:34"><name pos:start="2079:13" pos:end="2079:28">lock_user_string</name><argument_list pos:start="2079:29" pos:end="2079:34">(<argument pos:start="2079:30" pos:end="2079:33"><expr pos:start="2079:30" pos:end="2079:33"><name pos:start="2079:30" pos:end="2079:33">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2081:9" pos:end="2081:61"><expr pos:start="2081:9" pos:end="2081:60"><name pos:start="2081:9" pos:end="2081:11">ret</name> <operator pos:start="2081:13" pos:end="2081:13">=</operator> <call pos:start="2081:15" pos:end="2081:60"><name pos:start="2081:15" pos:end="2081:23">get_errno</name><argument_list pos:start="2081:24" pos:end="2081:60">(<argument pos:start="2081:25" pos:end="2081:59"><expr pos:start="2081:25" pos:end="2081:59"><call pos:start="2081:25" pos:end="2081:59"><name pos:start="2081:25" pos:end="2081:34">sys_syslog</name><argument_list pos:start="2081:35" pos:end="2081:59">(<argument pos:start="2081:36" pos:end="2081:44"><expr pos:start="2081:36" pos:end="2081:44"><operator pos:start="2081:36" pos:end="2081:36">(</operator><name pos:start="2081:37" pos:end="2081:39">int</name><operator pos:start="2081:40" pos:end="2081:40">)</operator><name pos:start="2081:41" pos:end="2081:44">arg1</name></expr></argument>, <argument pos:start="2081:47" pos:end="2081:47"><expr pos:start="2081:47" pos:end="2081:47"><name pos:start="2081:47" pos:end="2081:47">p</name></expr></argument>, <argument pos:start="2081:50" pos:end="2081:58"><expr pos:start="2081:50" pos:end="2081:58"><operator pos:start="2081:50" pos:end="2081:50">(</operator><name pos:start="2081:51" pos:end="2081:53">int</name><operator pos:start="2081:54" pos:end="2081:54">)</operator><name pos:start="2081:55" pos:end="2081:58">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2083:9" pos:end="2083:32"><expr pos:start="2083:9" pos:end="2083:31"><call pos:start="2083:9" pos:end="2083:31"><name pos:start="2083:9" pos:end="2083:19">unlock_user</name><argument_list pos:start="2083:20" pos:end="2083:31">(<argument pos:start="2083:21" pos:end="2083:21"><expr pos:start="2083:21" pos:end="2083:21"><name pos:start="2083:21" pos:end="2083:21">p</name></expr></argument>, <argument pos:start="2083:24" pos:end="2083:27"><expr pos:start="2083:24" pos:end="2083:27"><name pos:start="2083:24" pos:end="2083:27">arg2</name></expr></argument>, <argument pos:start="2083:30" pos:end="2083:30"><expr pos:start="2083:30" pos:end="2083:30"><literal type="number" pos:start="2083:30" pos:end="2083:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2085:9" pos:end="2085:14">break;</break>



    <case pos:start="2089:5" pos:end="2089:29">case <expr pos:start="2089:10" pos:end="2089:28"><name pos:start="2089:10" pos:end="2089:28">TARGET_NR_setitimer</name></expr>:</case>

        <block pos:start="2091:9" pos:end="2129:9">{<block_content pos:start="2093:13" pos:end="2127:13">

            <decl_stmt pos:start="2093:13" pos:end="2093:52"><decl pos:start="2093:13" pos:end="2093:34"><type pos:start="2093:13" pos:end="2093:28"><name pos:start="2093:13" pos:end="2093:28"><name pos:start="2093:13" pos:end="2093:18">struct</name> <name pos:start="2093:20" pos:end="2093:28">itimerval</name></name></type> <name pos:start="2093:30" pos:end="2093:34">value</name></decl>, <decl pos:start="2093:37" pos:end="2093:42"><type ref="prev" pos:start="2093:13" pos:end="2093:28"/><name pos:start="2093:37" pos:end="2093:42">ovalue</name></decl>, <decl pos:start="2093:45" pos:end="2093:51"><type ref="prev" pos:start="2093:13" pos:end="2093:28"><modifier pos:start="2093:45" pos:end="2093:45">*</modifier></type><name pos:start="2093:46" pos:end="2093:51">pvalue</name></decl>;</decl_stmt>



            <if_stmt pos:start="2097:13" pos:end="2113:13"><if pos:start="2097:13" pos:end="2109:13">if <condition pos:start="2097:16" pos:end="2097:21">(<expr pos:start="2097:17" pos:end="2097:20"><name pos:start="2097:17" pos:end="2097:20">arg2</name></expr>)</condition> <block pos:start="2097:23" pos:end="2109:13">{<block_content pos:start="2099:17" pos:end="2107:77">

                <expr_stmt pos:start="2099:17" pos:end="2099:32"><expr pos:start="2099:17" pos:end="2099:31"><name pos:start="2099:17" pos:end="2099:22">pvalue</name> <operator pos:start="2099:24" pos:end="2099:24">=</operator> <operator pos:start="2099:26" pos:end="2099:26">&amp;</operator><name pos:start="2099:27" pos:end="2099:31">value</name></expr>;</expr_stmt>

                <expr_stmt pos:start="2101:17" pos:end="2103:45"><expr pos:start="2101:17" pos:end="2103:44"><call pos:start="2101:17" pos:end="2103:44"><name pos:start="2101:17" pos:end="2101:38">target_to_host_timeval</name><argument_list pos:start="2101:39" pos:end="2103:44">(<argument pos:start="2101:40" pos:end="2101:59"><expr pos:start="2101:40" pos:end="2101:59"><operator pos:start="2101:40" pos:end="2101:40">&amp;</operator><name pos:start="2101:41" pos:end="2101:59"><name pos:start="2101:41" pos:end="2101:46">pvalue</name><operator pos:start="2101:47" pos:end="2101:48">-&gt;</operator><name pos:start="2101:49" pos:end="2101:59">it_interval</name></name></expr></argument>,

                                       <argument pos:start="2103:40" pos:end="2103:43"><expr pos:start="2103:40" pos:end="2103:43"><name pos:start="2103:40" pos:end="2103:43">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2105:17" pos:end="2107:77"><expr pos:start="2105:17" pos:end="2107:76"><call pos:start="2105:17" pos:end="2107:76"><name pos:start="2105:17" pos:end="2105:38">target_to_host_timeval</name><argument_list pos:start="2105:39" pos:end="2107:76">(<argument pos:start="2105:40" pos:end="2105:56"><expr pos:start="2105:40" pos:end="2105:56"><operator pos:start="2105:40" pos:end="2105:40">&amp;</operator><name pos:start="2105:41" pos:end="2105:56"><name pos:start="2105:41" pos:end="2105:46">pvalue</name><operator pos:start="2105:47" pos:end="2105:48">-&gt;</operator><name pos:start="2105:49" pos:end="2105:56">it_value</name></name></expr></argument>,

                                       <argument pos:start="2107:40" pos:end="2107:75"><expr pos:start="2107:40" pos:end="2107:75"><name pos:start="2107:40" pos:end="2107:43">arg2</name> <operator pos:start="2107:45" pos:end="2107:45">+</operator> <sizeof pos:start="2107:47" pos:end="2107:75">sizeof<argument_list pos:start="2107:53" pos:end="2107:75">(<argument pos:start="2107:54" pos:end="2107:74"><expr pos:start="2107:54" pos:end="2107:74">struct <name pos:start="2107:61" pos:end="2107:74">target_timeval</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="2109:15" pos:end="2113:13">else <block pos:start="2109:20" pos:end="2113:13">{<block_content pos:start="2111:17" pos:end="2111:30">

                <expr_stmt pos:start="2111:17" pos:end="2111:30"><expr pos:start="2111:17" pos:end="2111:29"><name pos:start="2111:17" pos:end="2111:22">pvalue</name> <operator pos:start="2111:24" pos:end="2111:24">=</operator> <name pos:start="2111:26" pos:end="2111:29">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="2115:13" pos:end="2115:62"><expr pos:start="2115:13" pos:end="2115:61"><name pos:start="2115:13" pos:end="2115:15">ret</name> <operator pos:start="2115:17" pos:end="2115:17">=</operator> <call pos:start="2115:19" pos:end="2115:61"><name pos:start="2115:19" pos:end="2115:27">get_errno</name><argument_list pos:start="2115:28" pos:end="2115:61">(<argument pos:start="2115:29" pos:end="2115:60"><expr pos:start="2115:29" pos:end="2115:60"><call pos:start="2115:29" pos:end="2115:60"><name pos:start="2115:29" pos:end="2115:37">setitimer</name><argument_list pos:start="2115:38" pos:end="2115:60">(<argument pos:start="2115:39" pos:end="2115:42"><expr pos:start="2115:39" pos:end="2115:42"><name pos:start="2115:39" pos:end="2115:42">arg1</name></expr></argument>, <argument pos:start="2115:45" pos:end="2115:50"><expr pos:start="2115:45" pos:end="2115:50"><name pos:start="2115:45" pos:end="2115:50">pvalue</name></expr></argument>, <argument pos:start="2115:53" pos:end="2115:59"><expr pos:start="2115:53" pos:end="2115:59"><operator pos:start="2115:53" pos:end="2115:53">&amp;</operator><name pos:start="2115:54" pos:end="2115:59">ovalue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2117:13" pos:end="2127:13"><if pos:start="2117:13" pos:end="2127:13">if <condition pos:start="2117:16" pos:end="2117:39">(<expr pos:start="2117:17" pos:end="2117:38"><operator pos:start="2117:17" pos:end="2117:17">!</operator><call pos:start="2117:18" pos:end="2117:30"><name pos:start="2117:18" pos:end="2117:25">is_error</name><argument_list pos:start="2117:26" pos:end="2117:30">(<argument pos:start="2117:27" pos:end="2117:29"><expr pos:start="2117:27" pos:end="2117:29"><name pos:start="2117:27" pos:end="2117:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="2117:32" pos:end="2117:33">&amp;&amp;</operator> <name pos:start="2117:35" pos:end="2117:38">arg3</name></expr>)</condition> <block pos:start="2117:41" pos:end="2127:13">{<block_content pos:start="2119:17" pos:end="2125:57">

                <expr_stmt pos:start="2119:17" pos:end="2121:60"><expr pos:start="2119:17" pos:end="2121:59"><call pos:start="2119:17" pos:end="2121:59"><name pos:start="2119:17" pos:end="2119:38">host_to_target_timeval</name><argument_list pos:start="2119:39" pos:end="2121:59">(<argument pos:start="2119:40" pos:end="2119:43"><expr pos:start="2119:40" pos:end="2119:43"><name pos:start="2119:40" pos:end="2119:43">arg3</name></expr></argument>,

                                       <argument pos:start="2121:40" pos:end="2121:58"><expr pos:start="2121:40" pos:end="2121:58"><operator pos:start="2121:40" pos:end="2121:40">&amp;</operator><name pos:start="2121:41" pos:end="2121:58"><name pos:start="2121:41" pos:end="2121:46">ovalue</name><operator pos:start="2121:47" pos:end="2121:47">.</operator><name pos:start="2121:48" pos:end="2121:58">it_interval</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2123:17" pos:end="2125:57"><expr pos:start="2123:17" pos:end="2125:56"><call pos:start="2123:17" pos:end="2125:56"><name pos:start="2123:17" pos:end="2123:38">host_to_target_timeval</name><argument_list pos:start="2123:39" pos:end="2125:56">(<argument pos:start="2123:40" pos:end="2123:75"><expr pos:start="2123:40" pos:end="2123:75"><name pos:start="2123:40" pos:end="2123:43">arg3</name> <operator pos:start="2123:45" pos:end="2123:45">+</operator> <sizeof pos:start="2123:47" pos:end="2123:75">sizeof<argument_list pos:start="2123:53" pos:end="2123:75">(<argument pos:start="2123:54" pos:end="2123:74"><expr pos:start="2123:54" pos:end="2123:74">struct <name pos:start="2123:61" pos:end="2123:74">target_timeval</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                       <argument pos:start="2125:40" pos:end="2125:55"><expr pos:start="2125:40" pos:end="2125:55"><operator pos:start="2125:40" pos:end="2125:40">&amp;</operator><name pos:start="2125:41" pos:end="2125:55"><name pos:start="2125:41" pos:end="2125:46">ovalue</name><operator pos:start="2125:47" pos:end="2125:47">.</operator><name pos:start="2125:48" pos:end="2125:55">it_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="2131:9" pos:end="2131:14">break;</break>

    <case pos:start="2133:5" pos:end="2133:29">case <expr pos:start="2133:10" pos:end="2133:28"><name pos:start="2133:10" pos:end="2133:28">TARGET_NR_getitimer</name></expr>:</case>

        <block pos:start="2135:9" pos:end="2155:9">{<block_content pos:start="2137:13" pos:end="2153:13">

            <decl_stmt pos:start="2137:13" pos:end="2137:35"><decl pos:start="2137:13" pos:end="2137:34"><type pos:start="2137:13" pos:end="2137:28"><name pos:start="2137:13" pos:end="2137:28"><name pos:start="2137:13" pos:end="2137:18">struct</name> <name pos:start="2137:20" pos:end="2137:28">itimerval</name></name></type> <name pos:start="2137:30" pos:end="2137:34">value</name></decl>;</decl_stmt>

           

            <expr_stmt pos:start="2141:13" pos:end="2141:53"><expr pos:start="2141:13" pos:end="2141:52"><name pos:start="2141:13" pos:end="2141:15">ret</name> <operator pos:start="2141:17" pos:end="2141:17">=</operator> <call pos:start="2141:19" pos:end="2141:52"><name pos:start="2141:19" pos:end="2141:27">get_errno</name><argument_list pos:start="2141:28" pos:end="2141:52">(<argument pos:start="2141:29" pos:end="2141:51"><expr pos:start="2141:29" pos:end="2141:51"><call pos:start="2141:29" pos:end="2141:51"><name pos:start="2141:29" pos:end="2141:37">getitimer</name><argument_list pos:start="2141:38" pos:end="2141:51">(<argument pos:start="2141:39" pos:end="2141:42"><expr pos:start="2141:39" pos:end="2141:42"><name pos:start="2141:39" pos:end="2141:42">arg1</name></expr></argument>, <argument pos:start="2141:45" pos:end="2141:50"><expr pos:start="2141:45" pos:end="2141:50"><operator pos:start="2141:45" pos:end="2141:45">&amp;</operator><name pos:start="2141:46" pos:end="2141:50">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2143:13" pos:end="2153:13"><if pos:start="2143:13" pos:end="2153:13">if <condition pos:start="2143:16" pos:end="2143:39">(<expr pos:start="2143:17" pos:end="2143:38"><operator pos:start="2143:17" pos:end="2143:17">!</operator><call pos:start="2143:18" pos:end="2143:30"><name pos:start="2143:18" pos:end="2143:25">is_error</name><argument_list pos:start="2143:26" pos:end="2143:30">(<argument pos:start="2143:27" pos:end="2143:29"><expr pos:start="2143:27" pos:end="2143:29"><name pos:start="2143:27" pos:end="2143:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="2143:32" pos:end="2143:33">&amp;&amp;</operator> <name pos:start="2143:35" pos:end="2143:38">arg2</name></expr>)</condition> <block pos:start="2143:41" pos:end="2153:13">{<block_content pos:start="2145:17" pos:end="2151:56">

                <expr_stmt pos:start="2145:17" pos:end="2147:59"><expr pos:start="2145:17" pos:end="2147:58"><call pos:start="2145:17" pos:end="2147:58"><name pos:start="2145:17" pos:end="2145:38">host_to_target_timeval</name><argument_list pos:start="2145:39" pos:end="2147:58">(<argument pos:start="2145:40" pos:end="2145:43"><expr pos:start="2145:40" pos:end="2145:43"><name pos:start="2145:40" pos:end="2145:43">arg2</name></expr></argument>,

                                       <argument pos:start="2147:40" pos:end="2147:57"><expr pos:start="2147:40" pos:end="2147:57"><operator pos:start="2147:40" pos:end="2147:40">&amp;</operator><name pos:start="2147:41" pos:end="2147:57"><name pos:start="2147:41" pos:end="2147:45">value</name><operator pos:start="2147:46" pos:end="2147:46">.</operator><name pos:start="2147:47" pos:end="2147:57">it_interval</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2149:17" pos:end="2151:56"><expr pos:start="2149:17" pos:end="2151:55"><call pos:start="2149:17" pos:end="2151:55"><name pos:start="2149:17" pos:end="2149:38">host_to_target_timeval</name><argument_list pos:start="2149:39" pos:end="2151:55">(<argument pos:start="2149:40" pos:end="2149:75"><expr pos:start="2149:40" pos:end="2149:75"><name pos:start="2149:40" pos:end="2149:43">arg2</name> <operator pos:start="2149:45" pos:end="2149:45">+</operator> <sizeof pos:start="2149:47" pos:end="2149:75">sizeof<argument_list pos:start="2149:53" pos:end="2149:75">(<argument pos:start="2149:54" pos:end="2149:74"><expr pos:start="2149:54" pos:end="2149:74">struct <name pos:start="2149:61" pos:end="2149:74">target_timeval</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                       <argument pos:start="2151:40" pos:end="2151:54"><expr pos:start="2151:40" pos:end="2151:54"><operator pos:start="2151:40" pos:end="2151:40">&amp;</operator><name pos:start="2151:41" pos:end="2151:54"><name pos:start="2151:41" pos:end="2151:45">value</name><operator pos:start="2151:46" pos:end="2151:46">.</operator><name pos:start="2151:47" pos:end="2151:54">it_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="2157:9" pos:end="2157:14">break;</break>

    <case pos:start="2159:5" pos:end="2159:24">case <expr pos:start="2159:10" pos:end="2159:23"><name pos:start="2159:10" pos:end="2159:23">TARGET_NR_stat</name></expr>:</case>

        <expr_stmt pos:start="2161:9" pos:end="2161:35"><expr pos:start="2161:9" pos:end="2161:34"><name pos:start="2161:9" pos:end="2161:9">p</name> <operator pos:start="2161:11" pos:end="2161:11">=</operator> <call pos:start="2161:13" pos:end="2161:34"><name pos:start="2161:13" pos:end="2161:28">lock_user_string</name><argument_list pos:start="2161:29" pos:end="2161:34">(<argument pos:start="2161:30" pos:end="2161:33"><expr pos:start="2161:30" pos:end="2161:33"><name pos:start="2161:30" pos:end="2161:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2163:9" pos:end="2163:44"><expr pos:start="2163:9" pos:end="2163:43"><name pos:start="2163:9" pos:end="2163:11">ret</name> <operator pos:start="2163:13" pos:end="2163:13">=</operator> <call pos:start="2163:15" pos:end="2163:43"><name pos:start="2163:15" pos:end="2163:23">get_errno</name><argument_list pos:start="2163:24" pos:end="2163:43">(<argument pos:start="2163:25" pos:end="2163:42"><expr pos:start="2163:25" pos:end="2163:42"><call pos:start="2163:25" pos:end="2163:42"><name pos:start="2163:25" pos:end="2163:28">stat</name><argument_list pos:start="2163:29" pos:end="2163:42">(<argument pos:start="2163:30" pos:end="2163:36"><expr pos:start="2163:30" pos:end="2163:36"><call pos:start="2163:30" pos:end="2163:36"><name pos:start="2163:30" pos:end="2163:33">path</name><argument_list pos:start="2163:34" pos:end="2163:36">(<argument pos:start="2163:35" pos:end="2163:35"><expr pos:start="2163:35" pos:end="2163:35"><name pos:start="2163:35" pos:end="2163:35">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="2163:39" pos:end="2163:41"><expr pos:start="2163:39" pos:end="2163:41"><operator pos:start="2163:39" pos:end="2163:39">&amp;</operator><name pos:start="2163:40" pos:end="2163:41">st</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2165:9" pos:end="2165:32"><expr pos:start="2165:9" pos:end="2165:31"><call pos:start="2165:9" pos:end="2165:31"><name pos:start="2165:9" pos:end="2165:19">unlock_user</name><argument_list pos:start="2165:20" pos:end="2165:31">(<argument pos:start="2165:21" pos:end="2165:21"><expr pos:start="2165:21" pos:end="2165:21"><name pos:start="2165:21" pos:end="2165:21">p</name></expr></argument>, <argument pos:start="2165:24" pos:end="2165:27"><expr pos:start="2165:24" pos:end="2165:27"><name pos:start="2165:24" pos:end="2165:27">arg1</name></expr></argument>, <argument pos:start="2165:30" pos:end="2165:30"><expr pos:start="2165:30" pos:end="2165:30"><literal type="number" pos:start="2165:30" pos:end="2165:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="2167:9" pos:end="2167:21">goto <name pos:start="2167:14" pos:end="2167:20">do_stat</name>;</goto>

    <case pos:start="2169:5" pos:end="2169:25">case <expr pos:start="2169:10" pos:end="2169:24"><name pos:start="2169:10" pos:end="2169:24">TARGET_NR_lstat</name></expr>:</case>

        <expr_stmt pos:start="2171:9" pos:end="2171:35"><expr pos:start="2171:9" pos:end="2171:34"><name pos:start="2171:9" pos:end="2171:9">p</name> <operator pos:start="2171:11" pos:end="2171:11">=</operator> <call pos:start="2171:13" pos:end="2171:34"><name pos:start="2171:13" pos:end="2171:28">lock_user_string</name><argument_list pos:start="2171:29" pos:end="2171:34">(<argument pos:start="2171:30" pos:end="2171:33"><expr pos:start="2171:30" pos:end="2171:33"><name pos:start="2171:30" pos:end="2171:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2173:9" pos:end="2173:45"><expr pos:start="2173:9" pos:end="2173:44"><name pos:start="2173:9" pos:end="2173:11">ret</name> <operator pos:start="2173:13" pos:end="2173:13">=</operator> <call pos:start="2173:15" pos:end="2173:44"><name pos:start="2173:15" pos:end="2173:23">get_errno</name><argument_list pos:start="2173:24" pos:end="2173:44">(<argument pos:start="2173:25" pos:end="2173:43"><expr pos:start="2173:25" pos:end="2173:43"><call pos:start="2173:25" pos:end="2173:43"><name pos:start="2173:25" pos:end="2173:29">lstat</name><argument_list pos:start="2173:30" pos:end="2173:43">(<argument pos:start="2173:31" pos:end="2173:37"><expr pos:start="2173:31" pos:end="2173:37"><call pos:start="2173:31" pos:end="2173:37"><name pos:start="2173:31" pos:end="2173:34">path</name><argument_list pos:start="2173:35" pos:end="2173:37">(<argument pos:start="2173:36" pos:end="2173:36"><expr pos:start="2173:36" pos:end="2173:36"><name pos:start="2173:36" pos:end="2173:36">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="2173:40" pos:end="2173:42"><expr pos:start="2173:40" pos:end="2173:42"><operator pos:start="2173:40" pos:end="2173:40">&amp;</operator><name pos:start="2173:41" pos:end="2173:42">st</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2175:9" pos:end="2175:32"><expr pos:start="2175:9" pos:end="2175:31"><call pos:start="2175:9" pos:end="2175:31"><name pos:start="2175:9" pos:end="2175:19">unlock_user</name><argument_list pos:start="2175:20" pos:end="2175:31">(<argument pos:start="2175:21" pos:end="2175:21"><expr pos:start="2175:21" pos:end="2175:21"><name pos:start="2175:21" pos:end="2175:21">p</name></expr></argument>, <argument pos:start="2175:24" pos:end="2175:27"><expr pos:start="2175:24" pos:end="2175:27"><name pos:start="2175:24" pos:end="2175:27">arg1</name></expr></argument>, <argument pos:start="2175:30" pos:end="2175:30"><expr pos:start="2175:30" pos:end="2175:30"><literal type="number" pos:start="2175:30" pos:end="2175:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="2177:9" pos:end="2177:21">goto <name pos:start="2177:14" pos:end="2177:20">do_stat</name>;</goto>

    <case pos:start="2179:5" pos:end="2179:25">case <expr pos:start="2179:10" pos:end="2179:24"><name pos:start="2179:10" pos:end="2179:24">TARGET_NR_fstat</name></expr>:</case>

        <block pos:start="2181:9" pos:end="2271:9">{<block_content pos:start="2183:13" pos:end="2269:13">

            <expr_stmt pos:start="2183:13" pos:end="2183:46"><expr pos:start="2183:13" pos:end="2183:45"><name pos:start="2183:13" pos:end="2183:15">ret</name> <operator pos:start="2183:17" pos:end="2183:17">=</operator> <call pos:start="2183:19" pos:end="2183:45"><name pos:start="2183:19" pos:end="2183:27">get_errno</name><argument_list pos:start="2183:28" pos:end="2183:45">(<argument pos:start="2183:29" pos:end="2183:44"><expr pos:start="2183:29" pos:end="2183:44"><call pos:start="2183:29" pos:end="2183:44"><name pos:start="2183:29" pos:end="2183:33">fstat</name><argument_list pos:start="2183:34" pos:end="2183:44">(<argument pos:start="2183:35" pos:end="2183:38"><expr pos:start="2183:35" pos:end="2183:38"><name pos:start="2183:35" pos:end="2183:38">arg1</name></expr></argument>, <argument pos:start="2183:41" pos:end="2183:43"><expr pos:start="2183:41" pos:end="2183:43"><operator pos:start="2183:41" pos:end="2183:41">&amp;</operator><name pos:start="2183:42" pos:end="2183:43">st</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <label pos:start="2185:9" pos:end="2185:16"><name pos:start="2185:9" pos:end="2185:15">do_stat</name>:</label>

            <if_stmt pos:start="2187:13" pos:end="2269:13"><if pos:start="2187:13" pos:end="2269:13">if <condition pos:start="2187:16" pos:end="2187:31">(<expr pos:start="2187:17" pos:end="2187:30"><operator pos:start="2187:17" pos:end="2187:17">!</operator><call pos:start="2187:18" pos:end="2187:30"><name pos:start="2187:18" pos:end="2187:25">is_error</name><argument_list pos:start="2187:26" pos:end="2187:30">(<argument pos:start="2187:27" pos:end="2187:29"><expr pos:start="2187:27" pos:end="2187:29"><name pos:start="2187:27" pos:end="2187:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2187:33" pos:end="2269:13">{<block_content pos:start="2189:17" pos:end="2267:55">

                <decl_stmt pos:start="2189:17" pos:end="2189:46"><decl pos:start="2189:17" pos:end="2189:45"><type pos:start="2189:17" pos:end="2189:36"><name pos:start="2189:17" pos:end="2189:34"><name pos:start="2189:17" pos:end="2189:22">struct</name> <name pos:start="2189:24" pos:end="2189:34">target_stat</name></name> <modifier pos:start="2189:36" pos:end="2189:36">*</modifier></type><name pos:start="2189:37" pos:end="2189:45">target_st</name></decl>;</decl_stmt>



                <expr_stmt pos:start="2193:17" pos:end="2196:0"><expr pos:start="2193:17" pos:end="2193:52"><call pos:start="2193:17" pos:end="2193:52"><name pos:start="2193:17" pos:end="2193:32">lock_user_struct</name><argument_list pos:start="2193:33" pos:end="2193:52">(<argument pos:start="2193:34" pos:end="2193:42"><expr pos:start="2193:34" pos:end="2193:42"><name pos:start="2193:34" pos:end="2193:42">target_st</name></expr></argument>, <argument pos:start="2193:45" pos:end="2193:48"><expr pos:start="2193:45" pos:end="2193:48"><name pos:start="2193:45" pos:end="2193:48">arg2</name></expr></argument>, <argument pos:start="2193:51" pos:end="2193:51"><expr pos:start="2193:51" pos:end="2193:51"><literal type="number" pos:start="2193:51" pos:end="2193:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="2195:1" pos:end="2195:51">#<cpp:directive pos:start="2195:2" pos:end="2195:3">if</cpp:directive> <expr pos:start="2195:5" pos:end="2195:51"><call pos:start="2195:5" pos:end="2195:24"><name pos:start="2195:5" pos:end="2195:11">defined</name><argument_list pos:start="2195:12" pos:end="2195:24">(<argument pos:start="2195:13" pos:end="2195:23"><expr pos:start="2195:13" pos:end="2195:23"><name pos:start="2195:13" pos:end="2195:23">TARGET_MIPS</name></expr></argument>)</argument_list></call> <operator pos:start="2195:26" pos:end="2195:27">||</operator> <call pos:start="2195:29" pos:end="2195:51"><name pos:start="2195:29" pos:end="2195:35">defined</name><argument_list pos:start="2195:36" pos:end="2195:51">(<argument pos:start="2195:37" pos:end="2195:50"><expr pos:start="2195:37" pos:end="2195:50"><name pos:start="2195:37" pos:end="2195:50">TARGET_SPARC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <expr_stmt pos:start="2197:17" pos:end="2200:0"><expr pos:start="2197:17" pos:end="2197:54"><name pos:start="2197:17" pos:end="2197:33"><name pos:start="2197:17" pos:end="2197:25">target_st</name><operator pos:start="2197:26" pos:end="2197:27">-&gt;</operator><name pos:start="2197:28" pos:end="2197:33">st_dev</name></name> <operator pos:start="2197:35" pos:end="2197:35">=</operator> <call pos:start="2197:37" pos:end="2197:54"><name pos:start="2197:37" pos:end="2197:43">tswap32</name><argument_list pos:start="2197:44" pos:end="2197:54">(<argument pos:start="2197:45" pos:end="2197:53"><expr pos:start="2197:45" pos:end="2197:53"><name pos:start="2197:45" pos:end="2197:53"><name pos:start="2197:45" pos:end="2197:46">st</name><operator pos:start="2197:47" pos:end="2197:47">.</operator><name pos:start="2197:48" pos:end="2197:53">st_dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="2199:1" pos:end="2199:5">#<cpp:directive pos:start="2199:2" pos:end="2199:5">else</cpp:directive></cpp:else>

                <expr_stmt pos:start="2201:17" pos:end="2204:0"><expr pos:start="2201:17" pos:end="2201:54"><name pos:start="2201:17" pos:end="2201:33"><name pos:start="2201:17" pos:end="2201:25">target_st</name><operator pos:start="2201:26" pos:end="2201:27">-&gt;</operator><name pos:start="2201:28" pos:end="2201:33">st_dev</name></name> <operator pos:start="2201:35" pos:end="2201:35">=</operator> <call pos:start="2201:37" pos:end="2201:54"><name pos:start="2201:37" pos:end="2201:43">tswap16</name><argument_list pos:start="2201:44" pos:end="2201:54">(<argument pos:start="2201:45" pos:end="2201:53"><expr pos:start="2201:45" pos:end="2201:53"><name pos:start="2201:45" pos:end="2201:53"><name pos:start="2201:45" pos:end="2201:46">st</name><operator pos:start="2201:47" pos:end="2201:47">.</operator><name pos:start="2201:48" pos:end="2201:53">st_dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="2203:1" pos:end="2203:6">#<cpp:directive pos:start="2203:2" pos:end="2203:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="2205:17" pos:end="2208:0"><expr pos:start="2205:17" pos:end="2205:53"><name pos:start="2205:17" pos:end="2205:33"><name pos:start="2205:17" pos:end="2205:25">target_st</name><operator pos:start="2205:26" pos:end="2205:27">-&gt;</operator><name pos:start="2205:28" pos:end="2205:33">st_ino</name></name> <operator pos:start="2205:35" pos:end="2205:35">=</operator> <call pos:start="2205:37" pos:end="2205:53"><name pos:start="2205:37" pos:end="2205:42">tswapl</name><argument_list pos:start="2205:43" pos:end="2205:53">(<argument pos:start="2205:44" pos:end="2205:52"><expr pos:start="2205:44" pos:end="2205:52"><name pos:start="2205:44" pos:end="2205:52"><name pos:start="2205:44" pos:end="2205:45">st</name><operator pos:start="2205:46" pos:end="2205:46">.</operator><name pos:start="2205:47" pos:end="2205:52">st_ino</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="2207:1" pos:end="2207:47">#<cpp:directive pos:start="2207:2" pos:end="2207:3">if</cpp:directive> <expr pos:start="2207:5" pos:end="2207:47"><call pos:start="2207:5" pos:end="2207:23"><name pos:start="2207:5" pos:end="2207:11">defined</name><argument_list pos:start="2207:12" pos:end="2207:23">(<argument pos:start="2207:13" pos:end="2207:22"><expr pos:start="2207:13" pos:end="2207:22"><name pos:start="2207:13" pos:end="2207:22">TARGET_PPC</name></expr></argument>)</argument_list></call> <operator pos:start="2207:25" pos:end="2207:26">||</operator> <call pos:start="2207:28" pos:end="2207:47"><name pos:start="2207:28" pos:end="2207:34">defined</name><argument_list pos:start="2207:35" pos:end="2207:47">(<argument pos:start="2207:36" pos:end="2207:46"><expr pos:start="2207:36" pos:end="2207:46"><name pos:start="2207:36" pos:end="2207:46">TARGET_MIPS</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <expr_stmt pos:start="2209:17" pos:end="2209:56"><expr pos:start="2209:17" pos:end="2209:55"><name pos:start="2209:17" pos:end="2209:34"><name pos:start="2209:17" pos:end="2209:25">target_st</name><operator pos:start="2209:26" pos:end="2209:27">-&gt;</operator><name pos:start="2209:28" pos:end="2209:34">st_mode</name></name> <operator pos:start="2209:36" pos:end="2209:36">=</operator> <call pos:start="2209:38" pos:end="2209:55"><name pos:start="2209:38" pos:end="2209:43">tswapl</name><argument_list pos:start="2209:44" pos:end="2209:55">(<argument pos:start="2209:45" pos:end="2209:54"><expr pos:start="2209:45" pos:end="2209:54"><name pos:start="2209:45" pos:end="2209:54"><name pos:start="2209:45" pos:end="2209:46">st</name><operator pos:start="2209:47" pos:end="2209:47">.</operator><name pos:start="2209:48" pos:end="2209:54">st_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="2209:58" pos:end="2209:78">/* XXX: check this */</comment>

                <expr_stmt pos:start="2211:17" pos:end="2211:55"><expr pos:start="2211:17" pos:end="2211:54"><name pos:start="2211:17" pos:end="2211:33"><name pos:start="2211:17" pos:end="2211:25">target_st</name><operator pos:start="2211:26" pos:end="2211:27">-&gt;</operator><name pos:start="2211:28" pos:end="2211:33">st_uid</name></name> <operator pos:start="2211:35" pos:end="2211:35">=</operator> <call pos:start="2211:37" pos:end="2211:54"><name pos:start="2211:37" pos:end="2211:43">tswap32</name><argument_list pos:start="2211:44" pos:end="2211:54">(<argument pos:start="2211:45" pos:end="2211:53"><expr pos:start="2211:45" pos:end="2211:53"><name pos:start="2211:45" pos:end="2211:53"><name pos:start="2211:45" pos:end="2211:46">st</name><operator pos:start="2211:47" pos:end="2211:47">.</operator><name pos:start="2211:48" pos:end="2211:53">st_uid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2213:17" pos:end="2216:0"><expr pos:start="2213:17" pos:end="2213:54"><name pos:start="2213:17" pos:end="2213:33"><name pos:start="2213:17" pos:end="2213:25">target_st</name><operator pos:start="2213:26" pos:end="2213:27">-&gt;</operator><name pos:start="2213:28" pos:end="2213:33">st_gid</name></name> <operator pos:start="2213:35" pos:end="2213:35">=</operator> <call pos:start="2213:37" pos:end="2213:54"><name pos:start="2213:37" pos:end="2213:43">tswap32</name><argument_list pos:start="2213:44" pos:end="2213:54">(<argument pos:start="2213:45" pos:end="2213:53"><expr pos:start="2213:45" pos:end="2213:53"><name pos:start="2213:45" pos:end="2213:53"><name pos:start="2213:45" pos:end="2213:46">st</name><operator pos:start="2213:47" pos:end="2213:47">.</operator><name pos:start="2213:48" pos:end="2213:53">st_gid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="2215:1" pos:end="2215:29">#<cpp:directive pos:start="2215:2" pos:end="2215:5">elif</cpp:directive> <expr pos:start="2215:7" pos:end="2215:29"><call pos:start="2215:7" pos:end="2215:29"><name pos:start="2215:7" pos:end="2215:13">defined</name><argument_list pos:start="2215:14" pos:end="2215:29">(<argument pos:start="2215:15" pos:end="2215:28"><expr pos:start="2215:15" pos:end="2215:28"><name pos:start="2215:15" pos:end="2215:28">TARGET_SPARC64</name></expr></argument>)</argument_list></call></expr></cpp:elif>

                <expr_stmt pos:start="2217:17" pos:end="2217:57"><expr pos:start="2217:17" pos:end="2217:56"><name pos:start="2217:17" pos:end="2217:34"><name pos:start="2217:17" pos:end="2217:25">target_st</name><operator pos:start="2217:26" pos:end="2217:27">-&gt;</operator><name pos:start="2217:28" pos:end="2217:34">st_mode</name></name> <operator pos:start="2217:36" pos:end="2217:36">=</operator> <call pos:start="2217:38" pos:end="2217:56"><name pos:start="2217:38" pos:end="2217:44">tswap32</name><argument_list pos:start="2217:45" pos:end="2217:56">(<argument pos:start="2217:46" pos:end="2217:55"><expr pos:start="2217:46" pos:end="2217:55"><name pos:start="2217:46" pos:end="2217:55"><name pos:start="2217:46" pos:end="2217:47">st</name><operator pos:start="2217:48" pos:end="2217:48">.</operator><name pos:start="2217:49" pos:end="2217:55">st_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2219:17" pos:end="2219:55"><expr pos:start="2219:17" pos:end="2219:54"><name pos:start="2219:17" pos:end="2219:33"><name pos:start="2219:17" pos:end="2219:25">target_st</name><operator pos:start="2219:26" pos:end="2219:27">-&gt;</operator><name pos:start="2219:28" pos:end="2219:33">st_uid</name></name> <operator pos:start="2219:35" pos:end="2219:35">=</operator> <call pos:start="2219:37" pos:end="2219:54"><name pos:start="2219:37" pos:end="2219:43">tswap32</name><argument_list pos:start="2219:44" pos:end="2219:54">(<argument pos:start="2219:45" pos:end="2219:53"><expr pos:start="2219:45" pos:end="2219:53"><name pos:start="2219:45" pos:end="2219:53"><name pos:start="2219:45" pos:end="2219:46">st</name><operator pos:start="2219:47" pos:end="2219:47">.</operator><name pos:start="2219:48" pos:end="2219:53">st_uid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2221:17" pos:end="2224:0"><expr pos:start="2221:17" pos:end="2221:54"><name pos:start="2221:17" pos:end="2221:33"><name pos:start="2221:17" pos:end="2221:25">target_st</name><operator pos:start="2221:26" pos:end="2221:27">-&gt;</operator><name pos:start="2221:28" pos:end="2221:33">st_gid</name></name> <operator pos:start="2221:35" pos:end="2221:35">=</operator> <call pos:start="2221:37" pos:end="2221:54"><name pos:start="2221:37" pos:end="2221:43">tswap32</name><argument_list pos:start="2221:44" pos:end="2221:54">(<argument pos:start="2221:45" pos:end="2221:53"><expr pos:start="2221:45" pos:end="2221:53"><name pos:start="2221:45" pos:end="2221:53"><name pos:start="2221:45" pos:end="2221:46">st</name><operator pos:start="2221:47" pos:end="2221:47">.</operator><name pos:start="2221:48" pos:end="2221:53">st_gid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="2223:1" pos:end="2223:5">#<cpp:directive pos:start="2223:2" pos:end="2223:5">else</cpp:directive></cpp:else>

                <expr_stmt pos:start="2225:17" pos:end="2225:57"><expr pos:start="2225:17" pos:end="2225:56"><name pos:start="2225:17" pos:end="2225:34"><name pos:start="2225:17" pos:end="2225:25">target_st</name><operator pos:start="2225:26" pos:end="2225:27">-&gt;</operator><name pos:start="2225:28" pos:end="2225:34">st_mode</name></name> <operator pos:start="2225:36" pos:end="2225:36">=</operator> <call pos:start="2225:38" pos:end="2225:56"><name pos:start="2225:38" pos:end="2225:44">tswap16</name><argument_list pos:start="2225:45" pos:end="2225:56">(<argument pos:start="2225:46" pos:end="2225:55"><expr pos:start="2225:46" pos:end="2225:55"><name pos:start="2225:46" pos:end="2225:55"><name pos:start="2225:46" pos:end="2225:47">st</name><operator pos:start="2225:48" pos:end="2225:48">.</operator><name pos:start="2225:49" pos:end="2225:55">st_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2227:17" pos:end="2227:55"><expr pos:start="2227:17" pos:end="2227:54"><name pos:start="2227:17" pos:end="2227:33"><name pos:start="2227:17" pos:end="2227:25">target_st</name><operator pos:start="2227:26" pos:end="2227:27">-&gt;</operator><name pos:start="2227:28" pos:end="2227:33">st_uid</name></name> <operator pos:start="2227:35" pos:end="2227:35">=</operator> <call pos:start="2227:37" pos:end="2227:54"><name pos:start="2227:37" pos:end="2227:43">tswap16</name><argument_list pos:start="2227:44" pos:end="2227:54">(<argument pos:start="2227:45" pos:end="2227:53"><expr pos:start="2227:45" pos:end="2227:53"><name pos:start="2227:45" pos:end="2227:53"><name pos:start="2227:45" pos:end="2227:46">st</name><operator pos:start="2227:47" pos:end="2227:47">.</operator><name pos:start="2227:48" pos:end="2227:53">st_uid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2229:17" pos:end="2234:0"><expr pos:start="2229:17" pos:end="2229:54"><name pos:start="2229:17" pos:end="2229:33"><name pos:start="2229:17" pos:end="2229:25">target_st</name><operator pos:start="2229:26" pos:end="2229:27">-&gt;</operator><name pos:start="2229:28" pos:end="2229:33">st_gid</name></name> <operator pos:start="2229:35" pos:end="2229:35">=</operator> <call pos:start="2229:37" pos:end="2229:54"><name pos:start="2229:37" pos:end="2229:43">tswap16</name><argument_list pos:start="2229:44" pos:end="2229:54">(<argument pos:start="2229:45" pos:end="2229:53"><expr pos:start="2229:45" pos:end="2229:53"><name pos:start="2229:45" pos:end="2229:53"><name pos:start="2229:45" pos:end="2229:46">st</name><operator pos:start="2229:47" pos:end="2229:47">.</operator><name pos:start="2229:48" pos:end="2229:53">st_gid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="2231:1" pos:end="2231:6">#<cpp:directive pos:start="2231:2" pos:end="2231:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="2233:1" pos:end="2233:24">#<cpp:directive pos:start="2233:2" pos:end="2233:3">if</cpp:directive> <expr pos:start="2233:5" pos:end="2233:24"><call pos:start="2233:5" pos:end="2233:24"><name pos:start="2233:5" pos:end="2233:11">defined</name><argument_list pos:start="2233:12" pos:end="2233:24">(<argument pos:start="2233:13" pos:end="2233:23"><expr pos:start="2233:13" pos:end="2233:23"><name pos:start="2233:13" pos:end="2233:23">TARGET_MIPS</name></expr></argument>)</argument_list></call></expr></cpp:if>

		<comment type="block" pos:start="2235:17" pos:end="2235:84">/* If this is the same on PPC, then just merge w/ the above ifdef */</comment>

                <expr_stmt pos:start="2237:17" pos:end="2237:58"><expr pos:start="2237:17" pos:end="2237:57"><name pos:start="2237:17" pos:end="2237:35"><name pos:start="2237:17" pos:end="2237:25">target_st</name><operator pos:start="2237:26" pos:end="2237:27">-&gt;</operator><name pos:start="2237:28" pos:end="2237:35">st_nlink</name></name> <operator pos:start="2237:37" pos:end="2237:37">=</operator> <call pos:start="2237:39" pos:end="2237:57"><name pos:start="2237:39" pos:end="2237:44">tswapl</name><argument_list pos:start="2237:45" pos:end="2237:57">(<argument pos:start="2237:46" pos:end="2237:56"><expr pos:start="2237:46" pos:end="2237:56"><name pos:start="2237:46" pos:end="2237:56"><name pos:start="2237:46" pos:end="2237:47">st</name><operator pos:start="2237:48" pos:end="2237:48">.</operator><name pos:start="2237:49" pos:end="2237:56">st_nlink</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2239:17" pos:end="2242:0"><expr pos:start="2239:17" pos:end="2239:55"><name pos:start="2239:17" pos:end="2239:34"><name pos:start="2239:17" pos:end="2239:25">target_st</name><operator pos:start="2239:26" pos:end="2239:27">-&gt;</operator><name pos:start="2239:28" pos:end="2239:34">st_rdev</name></name> <operator pos:start="2239:36" pos:end="2239:36">=</operator> <call pos:start="2239:38" pos:end="2239:55"><name pos:start="2239:38" pos:end="2239:43">tswapl</name><argument_list pos:start="2239:44" pos:end="2239:55">(<argument pos:start="2239:45" pos:end="2239:54"><expr pos:start="2239:45" pos:end="2239:54"><name pos:start="2239:45" pos:end="2239:54"><name pos:start="2239:45" pos:end="2239:46">st</name><operator pos:start="2239:47" pos:end="2239:47">.</operator><name pos:start="2239:48" pos:end="2239:54">st_rdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="2241:1" pos:end="2241:29">#<cpp:directive pos:start="2241:2" pos:end="2241:5">elif</cpp:directive> <expr pos:start="2241:7" pos:end="2241:29"><call pos:start="2241:7" pos:end="2241:29"><name pos:start="2241:7" pos:end="2241:13">defined</name><argument_list pos:start="2241:14" pos:end="2241:29">(<argument pos:start="2241:15" pos:end="2241:28"><expr pos:start="2241:15" pos:end="2241:28"><name pos:start="2241:15" pos:end="2241:28">TARGET_SPARC64</name></expr></argument>)</argument_list></call></expr></cpp:elif>

                <expr_stmt pos:start="2243:17" pos:end="2243:59"><expr pos:start="2243:17" pos:end="2243:58"><name pos:start="2243:17" pos:end="2243:35"><name pos:start="2243:17" pos:end="2243:25">target_st</name><operator pos:start="2243:26" pos:end="2243:27">-&gt;</operator><name pos:start="2243:28" pos:end="2243:35">st_nlink</name></name> <operator pos:start="2243:37" pos:end="2243:37">=</operator> <call pos:start="2243:39" pos:end="2243:58"><name pos:start="2243:39" pos:end="2243:45">tswap32</name><argument_list pos:start="2243:46" pos:end="2243:58">(<argument pos:start="2243:47" pos:end="2243:57"><expr pos:start="2243:47" pos:end="2243:57"><name pos:start="2243:47" pos:end="2243:57"><name pos:start="2243:47" pos:end="2243:48">st</name><operator pos:start="2243:49" pos:end="2243:49">.</operator><name pos:start="2243:50" pos:end="2243:57">st_nlink</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2245:17" pos:end="2248:0"><expr pos:start="2245:17" pos:end="2245:56"><name pos:start="2245:17" pos:end="2245:34"><name pos:start="2245:17" pos:end="2245:25">target_st</name><operator pos:start="2245:26" pos:end="2245:27">-&gt;</operator><name pos:start="2245:28" pos:end="2245:34">st_rdev</name></name> <operator pos:start="2245:36" pos:end="2245:36">=</operator> <call pos:start="2245:38" pos:end="2245:56"><name pos:start="2245:38" pos:end="2245:44">tswap32</name><argument_list pos:start="2245:45" pos:end="2245:56">(<argument pos:start="2245:46" pos:end="2245:55"><expr pos:start="2245:46" pos:end="2245:55"><name pos:start="2245:46" pos:end="2245:55"><name pos:start="2245:46" pos:end="2245:47">st</name><operator pos:start="2245:48" pos:end="2245:48">.</operator><name pos:start="2245:49" pos:end="2245:55">st_rdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="2247:1" pos:end="2247:5">#<cpp:directive pos:start="2247:2" pos:end="2247:5">else</cpp:directive></cpp:else>

                <expr_stmt pos:start="2249:17" pos:end="2249:59"><expr pos:start="2249:17" pos:end="2249:58"><name pos:start="2249:17" pos:end="2249:35"><name pos:start="2249:17" pos:end="2249:25">target_st</name><operator pos:start="2249:26" pos:end="2249:27">-&gt;</operator><name pos:start="2249:28" pos:end="2249:35">st_nlink</name></name> <operator pos:start="2249:37" pos:end="2249:37">=</operator> <call pos:start="2249:39" pos:end="2249:58"><name pos:start="2249:39" pos:end="2249:45">tswap16</name><argument_list pos:start="2249:46" pos:end="2249:58">(<argument pos:start="2249:47" pos:end="2249:57"><expr pos:start="2249:47" pos:end="2249:57"><name pos:start="2249:47" pos:end="2249:57"><name pos:start="2249:47" pos:end="2249:48">st</name><operator pos:start="2249:49" pos:end="2249:49">.</operator><name pos:start="2249:50" pos:end="2249:57">st_nlink</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2251:17" pos:end="2254:0"><expr pos:start="2251:17" pos:end="2251:56"><name pos:start="2251:17" pos:end="2251:34"><name pos:start="2251:17" pos:end="2251:25">target_st</name><operator pos:start="2251:26" pos:end="2251:27">-&gt;</operator><name pos:start="2251:28" pos:end="2251:34">st_rdev</name></name> <operator pos:start="2251:36" pos:end="2251:36">=</operator> <call pos:start="2251:38" pos:end="2251:56"><name pos:start="2251:38" pos:end="2251:44">tswap16</name><argument_list pos:start="2251:45" pos:end="2251:56">(<argument pos:start="2251:46" pos:end="2251:55"><expr pos:start="2251:46" pos:end="2251:55"><name pos:start="2251:46" pos:end="2251:55"><name pos:start="2251:46" pos:end="2251:47">st</name><operator pos:start="2251:48" pos:end="2251:48">.</operator><name pos:start="2251:49" pos:end="2251:55">st_rdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="2253:1" pos:end="2253:6">#<cpp:directive pos:start="2253:2" pos:end="2253:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="2255:17" pos:end="2255:56"><expr pos:start="2255:17" pos:end="2255:55"><name pos:start="2255:17" pos:end="2255:34"><name pos:start="2255:17" pos:end="2255:25">target_st</name><operator pos:start="2255:26" pos:end="2255:27">-&gt;</operator><name pos:start="2255:28" pos:end="2255:34">st_size</name></name> <operator pos:start="2255:36" pos:end="2255:36">=</operator> <call pos:start="2255:38" pos:end="2255:55"><name pos:start="2255:38" pos:end="2255:43">tswapl</name><argument_list pos:start="2255:44" pos:end="2255:55">(<argument pos:start="2255:45" pos:end="2255:54"><expr pos:start="2255:45" pos:end="2255:54"><name pos:start="2255:45" pos:end="2255:54"><name pos:start="2255:45" pos:end="2255:46">st</name><operator pos:start="2255:47" pos:end="2255:47">.</operator><name pos:start="2255:48" pos:end="2255:54">st_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2257:17" pos:end="2257:62"><expr pos:start="2257:17" pos:end="2257:61"><name pos:start="2257:17" pos:end="2257:37"><name pos:start="2257:17" pos:end="2257:25">target_st</name><operator pos:start="2257:26" pos:end="2257:27">-&gt;</operator><name pos:start="2257:28" pos:end="2257:37">st_blksize</name></name> <operator pos:start="2257:39" pos:end="2257:39">=</operator> <call pos:start="2257:41" pos:end="2257:61"><name pos:start="2257:41" pos:end="2257:46">tswapl</name><argument_list pos:start="2257:47" pos:end="2257:61">(<argument pos:start="2257:48" pos:end="2257:60"><expr pos:start="2257:48" pos:end="2257:60"><name pos:start="2257:48" pos:end="2257:60"><name pos:start="2257:48" pos:end="2257:49">st</name><operator pos:start="2257:50" pos:end="2257:50">.</operator><name pos:start="2257:51" pos:end="2257:60">st_blksize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2259:17" pos:end="2259:60"><expr pos:start="2259:17" pos:end="2259:59"><name pos:start="2259:17" pos:end="2259:36"><name pos:start="2259:17" pos:end="2259:25">target_st</name><operator pos:start="2259:26" pos:end="2259:27">-&gt;</operator><name pos:start="2259:28" pos:end="2259:36">st_blocks</name></name> <operator pos:start="2259:38" pos:end="2259:38">=</operator> <call pos:start="2259:40" pos:end="2259:59"><name pos:start="2259:40" pos:end="2259:45">tswapl</name><argument_list pos:start="2259:46" pos:end="2259:59">(<argument pos:start="2259:47" pos:end="2259:58"><expr pos:start="2259:47" pos:end="2259:58"><name pos:start="2259:47" pos:end="2259:58"><name pos:start="2259:47" pos:end="2259:48">st</name><operator pos:start="2259:49" pos:end="2259:49">.</operator><name pos:start="2259:50" pos:end="2259:58">st_blocks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2261:17" pos:end="2261:65"><expr pos:start="2261:17" pos:end="2261:64"><name pos:start="2261:17" pos:end="2261:42"><name pos:start="2261:17" pos:end="2261:25">target_st</name><operator pos:start="2261:26" pos:end="2261:27">-&gt;</operator><name pos:start="2261:28" pos:end="2261:42">target_st_atime</name></name> <operator pos:start="2261:44" pos:end="2261:44">=</operator> <call pos:start="2261:46" pos:end="2261:64"><name pos:start="2261:46" pos:end="2261:51">tswapl</name><argument_list pos:start="2261:52" pos:end="2261:64">(<argument pos:start="2261:53" pos:end="2261:63"><expr pos:start="2261:53" pos:end="2261:63"><name pos:start="2261:53" pos:end="2261:63"><name pos:start="2261:53" pos:end="2261:54">st</name><operator pos:start="2261:55" pos:end="2261:55">.</operator><name pos:start="2261:56" pos:end="2261:63">st_atime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2263:17" pos:end="2263:65"><expr pos:start="2263:17" pos:end="2263:64"><name pos:start="2263:17" pos:end="2263:42"><name pos:start="2263:17" pos:end="2263:25">target_st</name><operator pos:start="2263:26" pos:end="2263:27">-&gt;</operator><name pos:start="2263:28" pos:end="2263:42">target_st_mtime</name></name> <operator pos:start="2263:44" pos:end="2263:44">=</operator> <call pos:start="2263:46" pos:end="2263:64"><name pos:start="2263:46" pos:end="2263:51">tswapl</name><argument_list pos:start="2263:52" pos:end="2263:64">(<argument pos:start="2263:53" pos:end="2263:63"><expr pos:start="2263:53" pos:end="2263:63"><name pos:start="2263:53" pos:end="2263:63"><name pos:start="2263:53" pos:end="2263:54">st</name><operator pos:start="2263:55" pos:end="2263:55">.</operator><name pos:start="2263:56" pos:end="2263:63">st_mtime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2265:17" pos:end="2265:65"><expr pos:start="2265:17" pos:end="2265:64"><name pos:start="2265:17" pos:end="2265:42"><name pos:start="2265:17" pos:end="2265:25">target_st</name><operator pos:start="2265:26" pos:end="2265:27">-&gt;</operator><name pos:start="2265:28" pos:end="2265:42">target_st_ctime</name></name> <operator pos:start="2265:44" pos:end="2265:44">=</operator> <call pos:start="2265:46" pos:end="2265:64"><name pos:start="2265:46" pos:end="2265:51">tswapl</name><argument_list pos:start="2265:52" pos:end="2265:64">(<argument pos:start="2265:53" pos:end="2265:63"><expr pos:start="2265:53" pos:end="2265:63"><name pos:start="2265:53" pos:end="2265:63"><name pos:start="2265:53" pos:end="2265:54">st</name><operator pos:start="2265:55" pos:end="2265:55">.</operator><name pos:start="2265:56" pos:end="2265:63">st_ctime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2267:17" pos:end="2267:55"><expr pos:start="2267:17" pos:end="2267:54"><call pos:start="2267:17" pos:end="2267:54"><name pos:start="2267:17" pos:end="2267:34">unlock_user_struct</name><argument_list pos:start="2267:35" pos:end="2267:54">(<argument pos:start="2267:36" pos:end="2267:44"><expr pos:start="2267:36" pos:end="2267:44"><name pos:start="2267:36" pos:end="2267:44">target_st</name></expr></argument>, <argument pos:start="2267:47" pos:end="2267:50"><expr pos:start="2267:47" pos:end="2267:50"><name pos:start="2267:47" pos:end="2267:50">arg2</name></expr></argument>, <argument pos:start="2267:53" pos:end="2267:53"><expr pos:start="2267:53" pos:end="2267:53"><literal type="number" pos:start="2267:53" pos:end="2267:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="2273:9" pos:end="2276:0">break;</break>

<cpp:ifdef pos:start="2275:1" pos:end="2275:25">#<cpp:directive pos:start="2275:2" pos:end="2275:6">ifdef</cpp:directive> <name pos:start="2275:8" pos:end="2275:25">TARGET_NR_olduname</name></cpp:ifdef>

    <case pos:start="2277:5" pos:end="2277:28">case <expr pos:start="2277:10" pos:end="2277:27"><name pos:start="2277:10" pos:end="2277:27">TARGET_NR_olduname</name></expr>:</case>

        <goto pos:start="2279:9" pos:end="2284:0">goto <name pos:start="2279:14" pos:end="2279:26">unimplemented</name>;</goto>

<cpp:endif pos:start="2281:1" pos:end="2281:6">#<cpp:directive pos:start="2281:2" pos:end="2281:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2283:1" pos:end="2283:21">#<cpp:directive pos:start="2283:2" pos:end="2283:6">ifdef</cpp:directive> <name pos:start="2283:8" pos:end="2283:21">TARGET_NR_iopl</name></cpp:ifdef>

    <case pos:start="2285:5" pos:end="2285:24">case <expr pos:start="2285:10" pos:end="2285:23"><name pos:start="2285:10" pos:end="2285:23">TARGET_NR_iopl</name></expr>:</case>

        <goto pos:start="2287:9" pos:end="2290:0">goto <name pos:start="2287:14" pos:end="2287:26">unimplemented</name>;</goto>

<cpp:endif pos:start="2289:1" pos:end="2289:6">#<cpp:directive pos:start="2289:2" pos:end="2289:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2291:5" pos:end="2291:27">case <expr pos:start="2291:10" pos:end="2291:26"><name pos:start="2291:10" pos:end="2291:26">TARGET_NR_vhangup</name></expr>:</case>

        <expr_stmt pos:start="2293:9" pos:end="2293:35"><expr pos:start="2293:9" pos:end="2293:34"><name pos:start="2293:9" pos:end="2293:11">ret</name> <operator pos:start="2293:13" pos:end="2293:13">=</operator> <call pos:start="2293:15" pos:end="2293:34"><name pos:start="2293:15" pos:end="2293:23">get_errno</name><argument_list pos:start="2293:24" pos:end="2293:34">(<argument pos:start="2293:25" pos:end="2293:33"><expr pos:start="2293:25" pos:end="2293:33"><call pos:start="2293:25" pos:end="2293:33"><name pos:start="2293:25" pos:end="2293:31">vhangup</name><argument_list pos:start="2293:32" pos:end="2293:33">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2295:9" pos:end="2298:0">break;</break>

<cpp:ifdef pos:start="2297:1" pos:end="2297:21">#<cpp:directive pos:start="2297:2" pos:end="2297:6">ifdef</cpp:directive> <name pos:start="2297:8" pos:end="2297:21">TARGET_NR_idle</name></cpp:ifdef>

    <case pos:start="2299:5" pos:end="2299:24">case <expr pos:start="2299:10" pos:end="2299:23"><name pos:start="2299:10" pos:end="2299:23">TARGET_NR_idle</name></expr>:</case>

        <goto pos:start="2301:9" pos:end="2306:0">goto <name pos:start="2301:14" pos:end="2301:26">unimplemented</name>;</goto>

<cpp:endif pos:start="2303:1" pos:end="2303:6">#<cpp:directive pos:start="2303:2" pos:end="2303:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2305:1" pos:end="2305:24">#<cpp:directive pos:start="2305:2" pos:end="2305:6">ifdef</cpp:directive> <name pos:start="2305:8" pos:end="2305:24">TARGET_NR_syscall</name></cpp:ifdef>

    <case pos:start="2307:5" pos:end="2307:27">case <expr pos:start="2307:10" pos:end="2307:26"><name pos:start="2307:10" pos:end="2307:26">TARGET_NR_syscall</name></expr>:</case>

    	<expr_stmt pos:start="2309:9" pos:end="2309:75"><expr pos:start="2309:9" pos:end="2309:74"><name pos:start="2309:9" pos:end="2309:11">ret</name> <operator pos:start="2309:13" pos:end="2309:13">=</operator> <call pos:start="2309:15" pos:end="2309:74"><name pos:start="2309:15" pos:end="2309:24">do_syscall</name><argument_list pos:start="2309:25" pos:end="2309:74">(<argument pos:start="2309:26" pos:end="2309:32"><expr pos:start="2309:26" pos:end="2309:32"><name pos:start="2309:26" pos:end="2309:32">cpu_env</name></expr></argument>,<argument pos:start="2309:34" pos:end="2309:46"><expr pos:start="2309:34" pos:end="2309:46"><name pos:start="2309:34" pos:end="2309:37">arg1</name> <operator pos:start="2309:39" pos:end="2309:39">&amp;</operator> <literal type="number" pos:start="2309:41" pos:end="2309:46">0xffff</literal></expr></argument>,<argument pos:start="2309:48" pos:end="2309:51"><expr pos:start="2309:48" pos:end="2309:51"><name pos:start="2309:48" pos:end="2309:51">arg2</name></expr></argument>,<argument pos:start="2309:53" pos:end="2309:56"><expr pos:start="2309:53" pos:end="2309:56"><name pos:start="2309:53" pos:end="2309:56">arg3</name></expr></argument>,<argument pos:start="2309:58" pos:end="2309:61"><expr pos:start="2309:58" pos:end="2309:61"><name pos:start="2309:58" pos:end="2309:61">arg4</name></expr></argument>,<argument pos:start="2309:63" pos:end="2309:66"><expr pos:start="2309:63" pos:end="2309:66"><name pos:start="2309:63" pos:end="2309:66">arg5</name></expr></argument>,<argument pos:start="2309:68" pos:end="2309:71"><expr pos:start="2309:68" pos:end="2309:71"><name pos:start="2309:68" pos:end="2309:71">arg6</name></expr></argument>,<argument pos:start="2309:73" pos:end="2309:73"><expr pos:start="2309:73" pos:end="2309:73"><literal type="number" pos:start="2309:73" pos:end="2309:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    	<break pos:start="2311:9" pos:end="2314:0">break;</break>

<cpp:endif pos:start="2313:1" pos:end="2313:6">#<cpp:directive pos:start="2313:2" pos:end="2313:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2315:5" pos:end="2315:25">case <expr pos:start="2315:10" pos:end="2315:24"><name pos:start="2315:10" pos:end="2315:24">TARGET_NR_wait4</name></expr>:</case>

        <block pos:start="2317:9" pos:end="2351:9">{<block_content pos:start="2319:13" pos:end="2349:13">

            <decl_stmt pos:start="2319:13" pos:end="2319:23"><decl pos:start="2319:13" pos:end="2319:22"><type pos:start="2319:13" pos:end="2319:15"><name pos:start="2319:13" pos:end="2319:15">int</name></type> <name pos:start="2319:17" pos:end="2319:22">status</name></decl>;</decl_stmt>

            <decl_stmt pos:start="2321:13" pos:end="2321:42"><decl pos:start="2321:13" pos:end="2321:41"><type pos:start="2321:13" pos:end="2321:23"><name pos:start="2321:13" pos:end="2321:23">target_long</name></type> <name pos:start="2321:25" pos:end="2321:34">status_ptr</name> <init pos:start="2321:36" pos:end="2321:41">= <expr pos:start="2321:38" pos:end="2321:41"><name pos:start="2321:38" pos:end="2321:41">arg2</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="2323:13" pos:end="2323:46"><decl pos:start="2323:13" pos:end="2323:32"><type pos:start="2323:13" pos:end="2323:25"><name pos:start="2323:13" pos:end="2323:25"><name pos:start="2323:13" pos:end="2323:18">struct</name> <name pos:start="2323:20" pos:end="2323:25">rusage</name></name></type> <name pos:start="2323:27" pos:end="2323:32">rusage</name></decl>, <decl pos:start="2323:35" pos:end="2323:45"><type ref="prev" pos:start="2323:13" pos:end="2323:25"><modifier pos:start="2323:35" pos:end="2323:35">*</modifier></type><name pos:start="2323:36" pos:end="2323:45">rusage_ptr</name></decl>;</decl_stmt>

            <decl_stmt pos:start="2325:13" pos:end="2325:46"><decl pos:start="2325:13" pos:end="2325:45"><type pos:start="2325:13" pos:end="2325:24"><name pos:start="2325:13" pos:end="2325:24">target_ulong</name></type> <name pos:start="2325:26" pos:end="2325:38">target_rusage</name> <init pos:start="2325:40" pos:end="2325:45">= <expr pos:start="2325:42" pos:end="2325:45"><name pos:start="2325:42" pos:end="2325:45">arg4</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="2327:13" pos:end="2333:34"><if pos:start="2327:13" pos:end="2329:37">if <condition pos:start="2327:16" pos:end="2327:30">(<expr pos:start="2327:17" pos:end="2327:29"><name pos:start="2327:17" pos:end="2327:29">target_rusage</name></expr>)</condition><block type="pseudo" pos:start="2329:17" pos:end="2329:37"><block_content pos:start="2329:17" pos:end="2329:37">

                <expr_stmt pos:start="2329:17" pos:end="2329:37"><expr pos:start="2329:17" pos:end="2329:36"><name pos:start="2329:17" pos:end="2329:26">rusage_ptr</name> <operator pos:start="2329:28" pos:end="2329:28">=</operator> <operator pos:start="2329:30" pos:end="2329:30">&amp;</operator><name pos:start="2329:31" pos:end="2329:36">rusage</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="2331:13" pos:end="2333:34">else<block type="pseudo" pos:start="2333:17" pos:end="2333:34"><block_content pos:start="2333:17" pos:end="2333:34">

                <expr_stmt pos:start="2333:17" pos:end="2333:34"><expr pos:start="2333:17" pos:end="2333:33"><name pos:start="2333:17" pos:end="2333:26">rusage_ptr</name> <operator pos:start="2333:28" pos:end="2333:28">=</operator> <name pos:start="2333:30" pos:end="2333:33">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="2335:13" pos:end="2335:68"><expr pos:start="2335:13" pos:end="2335:67"><name pos:start="2335:13" pos:end="2335:15">ret</name> <operator pos:start="2335:17" pos:end="2335:17">=</operator> <call pos:start="2335:19" pos:end="2335:67"><name pos:start="2335:19" pos:end="2335:27">get_errno</name><argument_list pos:start="2335:28" pos:end="2335:67">(<argument pos:start="2335:29" pos:end="2335:66"><expr pos:start="2335:29" pos:end="2335:66"><call pos:start="2335:29" pos:end="2335:66"><name pos:start="2335:29" pos:end="2335:33">wait4</name><argument_list pos:start="2335:34" pos:end="2335:66">(<argument pos:start="2335:35" pos:end="2335:38"><expr pos:start="2335:35" pos:end="2335:38"><name pos:start="2335:35" pos:end="2335:38">arg1</name></expr></argument>, <argument pos:start="2335:41" pos:end="2335:47"><expr pos:start="2335:41" pos:end="2335:47"><operator pos:start="2335:41" pos:end="2335:41">&amp;</operator><name pos:start="2335:42" pos:end="2335:47">status</name></expr></argument>, <argument pos:start="2335:50" pos:end="2335:53"><expr pos:start="2335:50" pos:end="2335:53"><name pos:start="2335:50" pos:end="2335:53">arg3</name></expr></argument>, <argument pos:start="2335:56" pos:end="2335:65"><expr pos:start="2335:56" pos:end="2335:65"><name pos:start="2335:56" pos:end="2335:65">rusage_ptr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2337:13" pos:end="2349:13"><if pos:start="2337:13" pos:end="2349:13">if <condition pos:start="2337:16" pos:end="2337:31">(<expr pos:start="2337:17" pos:end="2337:30"><operator pos:start="2337:17" pos:end="2337:17">!</operator><call pos:start="2337:18" pos:end="2337:30"><name pos:start="2337:18" pos:end="2337:25">is_error</name><argument_list pos:start="2337:26" pos:end="2337:30">(<argument pos:start="2337:27" pos:end="2337:29"><expr pos:start="2337:27" pos:end="2337:29"><name pos:start="2337:27" pos:end="2337:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2337:33" pos:end="2349:13">{<block_content pos:start="2339:17" pos:end="2347:17">

                <if_stmt pos:start="2339:17" pos:end="2341:46"><if pos:start="2339:17" pos:end="2341:46">if <condition pos:start="2339:20" pos:end="2339:31">(<expr pos:start="2339:21" pos:end="2339:30"><name pos:start="2339:21" pos:end="2339:30">status_ptr</name></expr>)</condition><block type="pseudo" pos:start="2341:21" pos:end="2341:46"><block_content pos:start="2341:21" pos:end="2341:46">

                    <expr_stmt pos:start="2341:21" pos:end="2341:46"><expr pos:start="2341:21" pos:end="2341:45"><call pos:start="2341:21" pos:end="2341:45"><name pos:start="2341:21" pos:end="2341:25">tputl</name><argument_list pos:start="2341:26" pos:end="2341:45">(<argument pos:start="2341:27" pos:end="2341:36"><expr pos:start="2341:27" pos:end="2341:36"><name pos:start="2341:27" pos:end="2341:36">status_ptr</name></expr></argument>, <argument pos:start="2341:39" pos:end="2341:44"><expr pos:start="2341:39" pos:end="2341:44"><name pos:start="2341:39" pos:end="2341:44">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="2343:17" pos:end="2347:17"><if pos:start="2343:17" pos:end="2347:17">if <condition pos:start="2343:20" pos:end="2343:34">(<expr pos:start="2343:21" pos:end="2343:33"><name pos:start="2343:21" pos:end="2343:33">target_rusage</name></expr>)</condition> <block pos:start="2343:36" pos:end="2347:17">{<block_content pos:start="2345:21" pos:end="2345:66">

                    <expr_stmt pos:start="2345:21" pos:end="2345:66"><expr pos:start="2345:21" pos:end="2345:65"><call pos:start="2345:21" pos:end="2345:65"><name pos:start="2345:21" pos:end="2345:41">host_to_target_rusage</name><argument_list pos:start="2345:42" pos:end="2345:65">(<argument pos:start="2345:43" pos:end="2345:55"><expr pos:start="2345:43" pos:end="2345:55"><name pos:start="2345:43" pos:end="2345:55">target_rusage</name></expr></argument>, <argument pos:start="2345:58" pos:end="2345:64"><expr pos:start="2345:58" pos:end="2345:64"><operator pos:start="2345:58" pos:end="2345:58">&amp;</operator><name pos:start="2345:59" pos:end="2345:64">rusage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="2353:9" pos:end="2356:0">break;</break>

<cpp:ifdef pos:start="2355:1" pos:end="2355:24">#<cpp:directive pos:start="2355:2" pos:end="2355:6">ifdef</cpp:directive> <name pos:start="2355:8" pos:end="2355:24">TARGET_NR_swapoff</name></cpp:ifdef>

    <case pos:start="2357:5" pos:end="2357:27">case <expr pos:start="2357:10" pos:end="2357:26"><name pos:start="2357:10" pos:end="2357:26">TARGET_NR_swapoff</name></expr>:</case>

        <expr_stmt pos:start="2359:9" pos:end="2359:35"><expr pos:start="2359:9" pos:end="2359:34"><name pos:start="2359:9" pos:end="2359:9">p</name> <operator pos:start="2359:11" pos:end="2359:11">=</operator> <call pos:start="2359:13" pos:end="2359:34"><name pos:start="2359:13" pos:end="2359:28">lock_user_string</name><argument_list pos:start="2359:29" pos:end="2359:34">(<argument pos:start="2359:30" pos:end="2359:33"><expr pos:start="2359:30" pos:end="2359:33"><name pos:start="2359:30" pos:end="2359:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2361:9" pos:end="2361:36"><expr pos:start="2361:9" pos:end="2361:35"><name pos:start="2361:9" pos:end="2361:11">ret</name> <operator pos:start="2361:13" pos:end="2361:13">=</operator> <call pos:start="2361:15" pos:end="2361:35"><name pos:start="2361:15" pos:end="2361:23">get_errno</name><argument_list pos:start="2361:24" pos:end="2361:35">(<argument pos:start="2361:25" pos:end="2361:34"><expr pos:start="2361:25" pos:end="2361:34"><call pos:start="2361:25" pos:end="2361:34"><name pos:start="2361:25" pos:end="2361:31">swapoff</name><argument_list pos:start="2361:32" pos:end="2361:34">(<argument pos:start="2361:33" pos:end="2361:33"><expr pos:start="2361:33" pos:end="2361:33"><name pos:start="2361:33" pos:end="2361:33">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2363:9" pos:end="2363:32"><expr pos:start="2363:9" pos:end="2363:31"><call pos:start="2363:9" pos:end="2363:31"><name pos:start="2363:9" pos:end="2363:19">unlock_user</name><argument_list pos:start="2363:20" pos:end="2363:31">(<argument pos:start="2363:21" pos:end="2363:21"><expr pos:start="2363:21" pos:end="2363:21"><name pos:start="2363:21" pos:end="2363:21">p</name></expr></argument>, <argument pos:start="2363:24" pos:end="2363:27"><expr pos:start="2363:24" pos:end="2363:27"><name pos:start="2363:24" pos:end="2363:27">arg1</name></expr></argument>, <argument pos:start="2363:30" pos:end="2363:30"><expr pos:start="2363:30" pos:end="2363:30"><literal type="number" pos:start="2363:30" pos:end="2363:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2365:9" pos:end="2368:0">break;</break>

<cpp:endif pos:start="2367:1" pos:end="2367:6">#<cpp:directive pos:start="2367:2" pos:end="2367:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2369:5" pos:end="2369:27">case <expr pos:start="2369:10" pos:end="2369:26"><name pos:start="2369:10" pos:end="2369:26">TARGET_NR_sysinfo</name></expr>:</case>

        <block pos:start="2371:9" pos:end="2419:9">{<block_content pos:start="2373:13" pos:end="2417:13">

            <decl_stmt pos:start="2373:13" pos:end="2373:48"><decl pos:start="2373:13" pos:end="2373:47"><type pos:start="2373:13" pos:end="2373:35"><name pos:start="2373:13" pos:end="2373:33"><name pos:start="2373:13" pos:end="2373:18">struct</name> <name pos:start="2373:20" pos:end="2373:33">target_sysinfo</name></name> <modifier pos:start="2373:35" pos:end="2373:35">*</modifier></type><name pos:start="2373:36" pos:end="2373:47">target_value</name></decl>;</decl_stmt>

            <decl_stmt pos:start="2375:13" pos:end="2375:33"><decl pos:start="2375:13" pos:end="2375:32"><type pos:start="2375:13" pos:end="2375:26"><name pos:start="2375:13" pos:end="2375:26"><name pos:start="2375:13" pos:end="2375:18">struct</name> <name pos:start="2375:20" pos:end="2375:26">sysinfo</name></name></type> <name pos:start="2375:28" pos:end="2375:32">value</name></decl>;</decl_stmt>

            <expr_stmt pos:start="2377:13" pos:end="2377:45"><expr pos:start="2377:13" pos:end="2377:44"><name pos:start="2377:13" pos:end="2377:15">ret</name> <operator pos:start="2377:17" pos:end="2377:17">=</operator> <call pos:start="2377:19" pos:end="2377:44"><name pos:start="2377:19" pos:end="2377:27">get_errno</name><argument_list pos:start="2377:28" pos:end="2377:44">(<argument pos:start="2377:29" pos:end="2377:43"><expr pos:start="2377:29" pos:end="2377:43"><call pos:start="2377:29" pos:end="2377:43"><name pos:start="2377:29" pos:end="2377:35">sysinfo</name><argument_list pos:start="2377:36" pos:end="2377:43">(<argument pos:start="2377:37" pos:end="2377:42"><expr pos:start="2377:37" pos:end="2377:42"><operator pos:start="2377:37" pos:end="2377:37">&amp;</operator><name pos:start="2377:38" pos:end="2377:42">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2379:13" pos:end="2417:13"><if pos:start="2379:13" pos:end="2417:13">if <condition pos:start="2379:16" pos:end="2379:39">(<expr pos:start="2379:17" pos:end="2379:38"><operator pos:start="2379:17" pos:end="2379:17">!</operator><call pos:start="2379:18" pos:end="2379:30"><name pos:start="2379:18" pos:end="2379:25">is_error</name><argument_list pos:start="2379:26" pos:end="2379:30">(<argument pos:start="2379:27" pos:end="2379:29"><expr pos:start="2379:27" pos:end="2379:29"><name pos:start="2379:27" pos:end="2379:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="2379:32" pos:end="2379:33">&amp;&amp;</operator> <name pos:start="2379:35" pos:end="2379:38">arg1</name></expr>)</condition>

            <block pos:start="2381:13" pos:end="2417:13">{<block_content pos:start="2385:17" pos:end="2415:58">

                <comment type="block" pos:start="2383:17" pos:end="2383:56">/* ??? __put_user is probably wrong.  */</comment>

                <expr_stmt pos:start="2385:17" pos:end="2385:56"><expr pos:start="2385:17" pos:end="2385:55"><call pos:start="2385:17" pos:end="2385:55"><name pos:start="2385:17" pos:end="2385:32">lock_user_struct</name><argument_list pos:start="2385:33" pos:end="2385:55">(<argument pos:start="2385:34" pos:end="2385:45"><expr pos:start="2385:34" pos:end="2385:45"><name pos:start="2385:34" pos:end="2385:45">target_value</name></expr></argument>, <argument pos:start="2385:48" pos:end="2385:51"><expr pos:start="2385:48" pos:end="2385:51"><name pos:start="2385:48" pos:end="2385:51">arg1</name></expr></argument>, <argument pos:start="2385:54" pos:end="2385:54"><expr pos:start="2385:54" pos:end="2385:54"><literal type="number" pos:start="2385:54" pos:end="2385:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2387:17" pos:end="2387:64"><expr pos:start="2387:17" pos:end="2387:63"><call pos:start="2387:17" pos:end="2387:63"><name pos:start="2387:17" pos:end="2387:26">__put_user</name><argument_list pos:start="2387:27" pos:end="2387:63">(<argument pos:start="2387:28" pos:end="2387:39"><expr pos:start="2387:28" pos:end="2387:39"><name pos:start="2387:28" pos:end="2387:39"><name pos:start="2387:28" pos:end="2387:32">value</name><operator pos:start="2387:33" pos:end="2387:33">.</operator><name pos:start="2387:34" pos:end="2387:39">uptime</name></name></expr></argument>, <argument pos:start="2387:42" pos:end="2387:62"><expr pos:start="2387:42" pos:end="2387:62"><operator pos:start="2387:42" pos:end="2387:42">&amp;</operator><name pos:start="2387:43" pos:end="2387:62"><name pos:start="2387:43" pos:end="2387:54">target_value</name><operator pos:start="2387:55" pos:end="2387:56">-&gt;</operator><name pos:start="2387:57" pos:end="2387:62">uptime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2389:17" pos:end="2389:68"><expr pos:start="2389:17" pos:end="2389:67"><call pos:start="2389:17" pos:end="2389:67"><name pos:start="2389:17" pos:end="2389:26">__put_user</name><argument_list pos:start="2389:27" pos:end="2389:67">(<argument pos:start="2389:28" pos:end="2389:41"><expr pos:start="2389:28" pos:end="2389:41"><name pos:start="2389:28" pos:end="2389:41"><name pos:start="2389:28" pos:end="2389:32">value</name><operator pos:start="2389:33" pos:end="2389:33">.</operator><name pos:start="2389:34" pos:end="2389:38">loads</name><index pos:start="2389:39" pos:end="2389:41">[<expr pos:start="2389:40" pos:end="2389:40"><literal type="number" pos:start="2389:40" pos:end="2389:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="2389:44" pos:end="2389:66"><expr pos:start="2389:44" pos:end="2389:66"><operator pos:start="2389:44" pos:end="2389:44">&amp;</operator><name pos:start="2389:45" pos:end="2389:66"><name pos:start="2389:45" pos:end="2389:56">target_value</name><operator pos:start="2389:57" pos:end="2389:58">-&gt;</operator><name pos:start="2389:59" pos:end="2389:63">loads</name><index pos:start="2389:64" pos:end="2389:66">[<expr pos:start="2389:65" pos:end="2389:65"><literal type="number" pos:start="2389:65" pos:end="2389:65">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2391:17" pos:end="2391:68"><expr pos:start="2391:17" pos:end="2391:67"><call pos:start="2391:17" pos:end="2391:67"><name pos:start="2391:17" pos:end="2391:26">__put_user</name><argument_list pos:start="2391:27" pos:end="2391:67">(<argument pos:start="2391:28" pos:end="2391:41"><expr pos:start="2391:28" pos:end="2391:41"><name pos:start="2391:28" pos:end="2391:41"><name pos:start="2391:28" pos:end="2391:32">value</name><operator pos:start="2391:33" pos:end="2391:33">.</operator><name pos:start="2391:34" pos:end="2391:38">loads</name><index pos:start="2391:39" pos:end="2391:41">[<expr pos:start="2391:40" pos:end="2391:40"><literal type="number" pos:start="2391:40" pos:end="2391:40">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="2391:44" pos:end="2391:66"><expr pos:start="2391:44" pos:end="2391:66"><operator pos:start="2391:44" pos:end="2391:44">&amp;</operator><name pos:start="2391:45" pos:end="2391:66"><name pos:start="2391:45" pos:end="2391:56">target_value</name><operator pos:start="2391:57" pos:end="2391:58">-&gt;</operator><name pos:start="2391:59" pos:end="2391:63">loads</name><index pos:start="2391:64" pos:end="2391:66">[<expr pos:start="2391:65" pos:end="2391:65"><literal type="number" pos:start="2391:65" pos:end="2391:65">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2393:17" pos:end="2393:68"><expr pos:start="2393:17" pos:end="2393:67"><call pos:start="2393:17" pos:end="2393:67"><name pos:start="2393:17" pos:end="2393:26">__put_user</name><argument_list pos:start="2393:27" pos:end="2393:67">(<argument pos:start="2393:28" pos:end="2393:41"><expr pos:start="2393:28" pos:end="2393:41"><name pos:start="2393:28" pos:end="2393:41"><name pos:start="2393:28" pos:end="2393:32">value</name><operator pos:start="2393:33" pos:end="2393:33">.</operator><name pos:start="2393:34" pos:end="2393:38">loads</name><index pos:start="2393:39" pos:end="2393:41">[<expr pos:start="2393:40" pos:end="2393:40"><literal type="number" pos:start="2393:40" pos:end="2393:40">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="2393:44" pos:end="2393:66"><expr pos:start="2393:44" pos:end="2393:66"><operator pos:start="2393:44" pos:end="2393:44">&amp;</operator><name pos:start="2393:45" pos:end="2393:66"><name pos:start="2393:45" pos:end="2393:56">target_value</name><operator pos:start="2393:57" pos:end="2393:58">-&gt;</operator><name pos:start="2393:59" pos:end="2393:63">loads</name><index pos:start="2393:64" pos:end="2393:66">[<expr pos:start="2393:65" pos:end="2393:65"><literal type="number" pos:start="2393:65" pos:end="2393:65">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2395:17" pos:end="2395:68"><expr pos:start="2395:17" pos:end="2395:67"><call pos:start="2395:17" pos:end="2395:67"><name pos:start="2395:17" pos:end="2395:26">__put_user</name><argument_list pos:start="2395:27" pos:end="2395:67">(<argument pos:start="2395:28" pos:end="2395:41"><expr pos:start="2395:28" pos:end="2395:41"><name pos:start="2395:28" pos:end="2395:41"><name pos:start="2395:28" pos:end="2395:32">value</name><operator pos:start="2395:33" pos:end="2395:33">.</operator><name pos:start="2395:34" pos:end="2395:41">totalram</name></name></expr></argument>, <argument pos:start="2395:44" pos:end="2395:66"><expr pos:start="2395:44" pos:end="2395:66"><operator pos:start="2395:44" pos:end="2395:44">&amp;</operator><name pos:start="2395:45" pos:end="2395:66"><name pos:start="2395:45" pos:end="2395:56">target_value</name><operator pos:start="2395:57" pos:end="2395:58">-&gt;</operator><name pos:start="2395:59" pos:end="2395:66">totalram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2397:17" pos:end="2397:66"><expr pos:start="2397:17" pos:end="2397:65"><call pos:start="2397:17" pos:end="2397:65"><name pos:start="2397:17" pos:end="2397:26">__put_user</name><argument_list pos:start="2397:27" pos:end="2397:65">(<argument pos:start="2397:28" pos:end="2397:40"><expr pos:start="2397:28" pos:end="2397:40"><name pos:start="2397:28" pos:end="2397:40"><name pos:start="2397:28" pos:end="2397:32">value</name><operator pos:start="2397:33" pos:end="2397:33">.</operator><name pos:start="2397:34" pos:end="2397:40">freeram</name></name></expr></argument>, <argument pos:start="2397:43" pos:end="2397:64"><expr pos:start="2397:43" pos:end="2397:64"><operator pos:start="2397:43" pos:end="2397:43">&amp;</operator><name pos:start="2397:44" pos:end="2397:64"><name pos:start="2397:44" pos:end="2397:55">target_value</name><operator pos:start="2397:56" pos:end="2397:57">-&gt;</operator><name pos:start="2397:58" pos:end="2397:64">freeram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2399:17" pos:end="2399:70"><expr pos:start="2399:17" pos:end="2399:69"><call pos:start="2399:17" pos:end="2399:69"><name pos:start="2399:17" pos:end="2399:26">__put_user</name><argument_list pos:start="2399:27" pos:end="2399:69">(<argument pos:start="2399:28" pos:end="2399:42"><expr pos:start="2399:28" pos:end="2399:42"><name pos:start="2399:28" pos:end="2399:42"><name pos:start="2399:28" pos:end="2399:32">value</name><operator pos:start="2399:33" pos:end="2399:33">.</operator><name pos:start="2399:34" pos:end="2399:42">sharedram</name></name></expr></argument>, <argument pos:start="2399:45" pos:end="2399:68"><expr pos:start="2399:45" pos:end="2399:68"><operator pos:start="2399:45" pos:end="2399:45">&amp;</operator><name pos:start="2399:46" pos:end="2399:68"><name pos:start="2399:46" pos:end="2399:57">target_value</name><operator pos:start="2399:58" pos:end="2399:59">-&gt;</operator><name pos:start="2399:60" pos:end="2399:68">sharedram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2401:17" pos:end="2401:70"><expr pos:start="2401:17" pos:end="2401:69"><call pos:start="2401:17" pos:end="2401:69"><name pos:start="2401:17" pos:end="2401:26">__put_user</name><argument_list pos:start="2401:27" pos:end="2401:69">(<argument pos:start="2401:28" pos:end="2401:42"><expr pos:start="2401:28" pos:end="2401:42"><name pos:start="2401:28" pos:end="2401:42"><name pos:start="2401:28" pos:end="2401:32">value</name><operator pos:start="2401:33" pos:end="2401:33">.</operator><name pos:start="2401:34" pos:end="2401:42">bufferram</name></name></expr></argument>, <argument pos:start="2401:45" pos:end="2401:68"><expr pos:start="2401:45" pos:end="2401:68"><operator pos:start="2401:45" pos:end="2401:45">&amp;</operator><name pos:start="2401:46" pos:end="2401:68"><name pos:start="2401:46" pos:end="2401:57">target_value</name><operator pos:start="2401:58" pos:end="2401:59">-&gt;</operator><name pos:start="2401:60" pos:end="2401:68">bufferram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2403:17" pos:end="2403:70"><expr pos:start="2403:17" pos:end="2403:69"><call pos:start="2403:17" pos:end="2403:69"><name pos:start="2403:17" pos:end="2403:26">__put_user</name><argument_list pos:start="2403:27" pos:end="2403:69">(<argument pos:start="2403:28" pos:end="2403:42"><expr pos:start="2403:28" pos:end="2403:42"><name pos:start="2403:28" pos:end="2403:42"><name pos:start="2403:28" pos:end="2403:32">value</name><operator pos:start="2403:33" pos:end="2403:33">.</operator><name pos:start="2403:34" pos:end="2403:42">totalswap</name></name></expr></argument>, <argument pos:start="2403:45" pos:end="2403:68"><expr pos:start="2403:45" pos:end="2403:68"><operator pos:start="2403:45" pos:end="2403:45">&amp;</operator><name pos:start="2403:46" pos:end="2403:68"><name pos:start="2403:46" pos:end="2403:57">target_value</name><operator pos:start="2403:58" pos:end="2403:59">-&gt;</operator><name pos:start="2403:60" pos:end="2403:68">totalswap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2405:17" pos:end="2405:68"><expr pos:start="2405:17" pos:end="2405:67"><call pos:start="2405:17" pos:end="2405:67"><name pos:start="2405:17" pos:end="2405:26">__put_user</name><argument_list pos:start="2405:27" pos:end="2405:67">(<argument pos:start="2405:28" pos:end="2405:41"><expr pos:start="2405:28" pos:end="2405:41"><name pos:start="2405:28" pos:end="2405:41"><name pos:start="2405:28" pos:end="2405:32">value</name><operator pos:start="2405:33" pos:end="2405:33">.</operator><name pos:start="2405:34" pos:end="2405:41">freeswap</name></name></expr></argument>, <argument pos:start="2405:44" pos:end="2405:66"><expr pos:start="2405:44" pos:end="2405:66"><operator pos:start="2405:44" pos:end="2405:44">&amp;</operator><name pos:start="2405:45" pos:end="2405:66"><name pos:start="2405:45" pos:end="2405:56">target_value</name><operator pos:start="2405:57" pos:end="2405:58">-&gt;</operator><name pos:start="2405:59" pos:end="2405:66">freeswap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2407:17" pos:end="2407:62"><expr pos:start="2407:17" pos:end="2407:61"><call pos:start="2407:17" pos:end="2407:61"><name pos:start="2407:17" pos:end="2407:26">__put_user</name><argument_list pos:start="2407:27" pos:end="2407:61">(<argument pos:start="2407:28" pos:end="2407:38"><expr pos:start="2407:28" pos:end="2407:38"><name pos:start="2407:28" pos:end="2407:38"><name pos:start="2407:28" pos:end="2407:32">value</name><operator pos:start="2407:33" pos:end="2407:33">.</operator><name pos:start="2407:34" pos:end="2407:38">procs</name></name></expr></argument>, <argument pos:start="2407:41" pos:end="2407:60"><expr pos:start="2407:41" pos:end="2407:60"><operator pos:start="2407:41" pos:end="2407:41">&amp;</operator><name pos:start="2407:42" pos:end="2407:60"><name pos:start="2407:42" pos:end="2407:53">target_value</name><operator pos:start="2407:54" pos:end="2407:55">-&gt;</operator><name pos:start="2407:56" pos:end="2407:60">procs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2409:17" pos:end="2409:70"><expr pos:start="2409:17" pos:end="2409:69"><call pos:start="2409:17" pos:end="2409:69"><name pos:start="2409:17" pos:end="2409:26">__put_user</name><argument_list pos:start="2409:27" pos:end="2409:69">(<argument pos:start="2409:28" pos:end="2409:42"><expr pos:start="2409:28" pos:end="2409:42"><name pos:start="2409:28" pos:end="2409:42"><name pos:start="2409:28" pos:end="2409:32">value</name><operator pos:start="2409:33" pos:end="2409:33">.</operator><name pos:start="2409:34" pos:end="2409:42">totalhigh</name></name></expr></argument>, <argument pos:start="2409:45" pos:end="2409:68"><expr pos:start="2409:45" pos:end="2409:68"><operator pos:start="2409:45" pos:end="2409:45">&amp;</operator><name pos:start="2409:46" pos:end="2409:68"><name pos:start="2409:46" pos:end="2409:57">target_value</name><operator pos:start="2409:58" pos:end="2409:59">-&gt;</operator><name pos:start="2409:60" pos:end="2409:68">totalhigh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2411:17" pos:end="2411:68"><expr pos:start="2411:17" pos:end="2411:67"><call pos:start="2411:17" pos:end="2411:67"><name pos:start="2411:17" pos:end="2411:26">__put_user</name><argument_list pos:start="2411:27" pos:end="2411:67">(<argument pos:start="2411:28" pos:end="2411:41"><expr pos:start="2411:28" pos:end="2411:41"><name pos:start="2411:28" pos:end="2411:41"><name pos:start="2411:28" pos:end="2411:32">value</name><operator pos:start="2411:33" pos:end="2411:33">.</operator><name pos:start="2411:34" pos:end="2411:41">freehigh</name></name></expr></argument>, <argument pos:start="2411:44" pos:end="2411:66"><expr pos:start="2411:44" pos:end="2411:66"><operator pos:start="2411:44" pos:end="2411:44">&amp;</operator><name pos:start="2411:45" pos:end="2411:66"><name pos:start="2411:45" pos:end="2411:56">target_value</name><operator pos:start="2411:57" pos:end="2411:58">-&gt;</operator><name pos:start="2411:59" pos:end="2411:66">freehigh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2413:17" pos:end="2413:68"><expr pos:start="2413:17" pos:end="2413:67"><call pos:start="2413:17" pos:end="2413:67"><name pos:start="2413:17" pos:end="2413:26">__put_user</name><argument_list pos:start="2413:27" pos:end="2413:67">(<argument pos:start="2413:28" pos:end="2413:41"><expr pos:start="2413:28" pos:end="2413:41"><name pos:start="2413:28" pos:end="2413:41"><name pos:start="2413:28" pos:end="2413:32">value</name><operator pos:start="2413:33" pos:end="2413:33">.</operator><name pos:start="2413:34" pos:end="2413:41">mem_unit</name></name></expr></argument>, <argument pos:start="2413:44" pos:end="2413:66"><expr pos:start="2413:44" pos:end="2413:66"><operator pos:start="2413:44" pos:end="2413:44">&amp;</operator><name pos:start="2413:45" pos:end="2413:66"><name pos:start="2413:45" pos:end="2413:56">target_value</name><operator pos:start="2413:57" pos:end="2413:58">-&gt;</operator><name pos:start="2413:59" pos:end="2413:66">mem_unit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2415:17" pos:end="2415:58"><expr pos:start="2415:17" pos:end="2415:57"><call pos:start="2415:17" pos:end="2415:57"><name pos:start="2415:17" pos:end="2415:34">unlock_user_struct</name><argument_list pos:start="2415:35" pos:end="2415:57">(<argument pos:start="2415:36" pos:end="2415:47"><expr pos:start="2415:36" pos:end="2415:47"><name pos:start="2415:36" pos:end="2415:47">target_value</name></expr></argument>, <argument pos:start="2415:50" pos:end="2415:53"><expr pos:start="2415:50" pos:end="2415:53"><name pos:start="2415:50" pos:end="2415:53">arg1</name></expr></argument>, <argument pos:start="2415:56" pos:end="2415:56"><expr pos:start="2415:56" pos:end="2415:56"><literal type="number" pos:start="2415:56" pos:end="2415:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="2421:9" pos:end="2424:0">break;</break>

<cpp:ifdef pos:start="2423:1" pos:end="2423:20">#<cpp:directive pos:start="2423:2" pos:end="2423:6">ifdef</cpp:directive> <name pos:start="2423:8" pos:end="2423:20">TARGET_NR_ipc</name></cpp:ifdef>

    <case pos:start="2425:5" pos:end="2425:23">case <expr pos:start="2425:10" pos:end="2425:22"><name pos:start="2425:10" pos:end="2425:22">TARGET_NR_ipc</name></expr>:</case>

	<expr_stmt pos:start="2427:9" pos:end="2427:57"><expr pos:start="2427:9" pos:end="2427:56"><name pos:start="2427:9" pos:end="2427:11">ret</name> <operator pos:start="2427:13" pos:end="2427:13">=</operator> <call pos:start="2427:15" pos:end="2427:56"><name pos:start="2427:15" pos:end="2427:20">do_ipc</name><argument_list pos:start="2427:21" pos:end="2427:56">(<argument pos:start="2427:22" pos:end="2427:25"><expr pos:start="2427:22" pos:end="2427:25"><name pos:start="2427:22" pos:end="2427:25">arg1</name></expr></argument>, <argument pos:start="2427:28" pos:end="2427:31"><expr pos:start="2427:28" pos:end="2427:31"><name pos:start="2427:28" pos:end="2427:31">arg2</name></expr></argument>, <argument pos:start="2427:34" pos:end="2427:37"><expr pos:start="2427:34" pos:end="2427:37"><name pos:start="2427:34" pos:end="2427:37">arg3</name></expr></argument>, <argument pos:start="2427:40" pos:end="2427:43"><expr pos:start="2427:40" pos:end="2427:43"><name pos:start="2427:40" pos:end="2427:43">arg4</name></expr></argument>, <argument pos:start="2427:46" pos:end="2427:49"><expr pos:start="2427:46" pos:end="2427:49"><name pos:start="2427:46" pos:end="2427:49">arg5</name></expr></argument>, <argument pos:start="2427:52" pos:end="2427:55"><expr pos:start="2427:52" pos:end="2427:55"><name pos:start="2427:52" pos:end="2427:55">arg6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="2429:9" pos:end="2432:0">break;</break>

<cpp:endif pos:start="2431:1" pos:end="2431:6">#<cpp:directive pos:start="2431:2" pos:end="2431:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2433:5" pos:end="2433:25">case <expr pos:start="2433:10" pos:end="2433:24"><name pos:start="2433:10" pos:end="2433:24">TARGET_NR_fsync</name></expr>:</case>

        <expr_stmt pos:start="2435:9" pos:end="2435:37"><expr pos:start="2435:9" pos:end="2435:36"><name pos:start="2435:9" pos:end="2435:11">ret</name> <operator pos:start="2435:13" pos:end="2435:13">=</operator> <call pos:start="2435:15" pos:end="2435:36"><name pos:start="2435:15" pos:end="2435:23">get_errno</name><argument_list pos:start="2435:24" pos:end="2435:36">(<argument pos:start="2435:25" pos:end="2435:35"><expr pos:start="2435:25" pos:end="2435:35"><call pos:start="2435:25" pos:end="2435:35"><name pos:start="2435:25" pos:end="2435:29">fsync</name><argument_list pos:start="2435:30" pos:end="2435:35">(<argument pos:start="2435:31" pos:end="2435:34"><expr pos:start="2435:31" pos:end="2435:34"><name pos:start="2435:31" pos:end="2435:34">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2437:9" pos:end="2437:14">break;</break>

    <case pos:start="2439:5" pos:end="2439:25">case <expr pos:start="2439:10" pos:end="2439:24"><name pos:start="2439:10" pos:end="2439:24">TARGET_NR_clone</name></expr>:</case>

        <expr_stmt pos:start="2441:9" pos:end="2441:54"><expr pos:start="2441:9" pos:end="2441:53"><name pos:start="2441:9" pos:end="2441:11">ret</name> <operator pos:start="2441:13" pos:end="2441:13">=</operator> <call pos:start="2441:15" pos:end="2441:53"><name pos:start="2441:15" pos:end="2441:23">get_errno</name><argument_list pos:start="2441:24" pos:end="2441:53">(<argument pos:start="2441:25" pos:end="2441:52"><expr pos:start="2441:25" pos:end="2441:52"><call pos:start="2441:25" pos:end="2441:52"><name pos:start="2441:25" pos:end="2441:31">do_fork</name><argument_list pos:start="2441:32" pos:end="2441:52">(<argument pos:start="2441:33" pos:end="2441:39"><expr pos:start="2441:33" pos:end="2441:39"><name pos:start="2441:33" pos:end="2441:39">cpu_env</name></expr></argument>, <argument pos:start="2441:42" pos:end="2441:45"><expr pos:start="2441:42" pos:end="2441:45"><name pos:start="2441:42" pos:end="2441:45">arg1</name></expr></argument>, <argument pos:start="2441:48" pos:end="2441:51"><expr pos:start="2441:48" pos:end="2441:51"><name pos:start="2441:48" pos:end="2441:51">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2443:9" pos:end="2446:0">break;</break>

<cpp:ifdef pos:start="2445:1" pos:end="2445:22">#<cpp:directive pos:start="2445:2" pos:end="2445:6">ifdef</cpp:directive> <name pos:start="2445:8" pos:end="2445:22">__NR_exit_group</name></cpp:ifdef>

        <comment type="block" pos:start="2447:9" pos:end="2447:30">/* new thread calls */</comment>

    <case pos:start="2449:5" pos:end="2449:30">case <expr pos:start="2449:10" pos:end="2449:29"><name pos:start="2449:10" pos:end="2449:29">TARGET_NR_exit_group</name></expr>:</case>

        <expr_stmt pos:start="2451:9" pos:end="2451:32"><expr pos:start="2451:9" pos:end="2451:31"><call pos:start="2451:9" pos:end="2451:31"><name pos:start="2451:9" pos:end="2451:16">gdb_exit</name><argument_list pos:start="2451:17" pos:end="2451:31">(<argument pos:start="2451:18" pos:end="2451:24"><expr pos:start="2451:18" pos:end="2451:24"><name pos:start="2451:18" pos:end="2451:24">cpu_env</name></expr></argument>, <argument pos:start="2451:27" pos:end="2451:30"><expr pos:start="2451:27" pos:end="2451:30"><name pos:start="2451:27" pos:end="2451:30">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2453:9" pos:end="2453:42"><expr pos:start="2453:9" pos:end="2453:41"><name pos:start="2453:9" pos:end="2453:11">ret</name> <operator pos:start="2453:13" pos:end="2453:13">=</operator> <call pos:start="2453:15" pos:end="2453:41"><name pos:start="2453:15" pos:end="2453:23">get_errno</name><argument_list pos:start="2453:24" pos:end="2453:41">(<argument pos:start="2453:25" pos:end="2453:40"><expr pos:start="2453:25" pos:end="2453:40"><call pos:start="2453:25" pos:end="2453:40"><name pos:start="2453:25" pos:end="2453:34">exit_group</name><argument_list pos:start="2453:35" pos:end="2453:40">(<argument pos:start="2453:36" pos:end="2453:39"><expr pos:start="2453:36" pos:end="2453:39"><name pos:start="2453:36" pos:end="2453:39">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2455:9" pos:end="2458:0">break;</break>

<cpp:endif pos:start="2457:1" pos:end="2457:6">#<cpp:directive pos:start="2457:2" pos:end="2457:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2459:5" pos:end="2459:33">case <expr pos:start="2459:10" pos:end="2459:32"><name pos:start="2459:10" pos:end="2459:32">TARGET_NR_setdomainname</name></expr>:</case>

        <expr_stmt pos:start="2461:9" pos:end="2461:35"><expr pos:start="2461:9" pos:end="2461:34"><name pos:start="2461:9" pos:end="2461:9">p</name> <operator pos:start="2461:11" pos:end="2461:11">=</operator> <call pos:start="2461:13" pos:end="2461:34"><name pos:start="2461:13" pos:end="2461:28">lock_user_string</name><argument_list pos:start="2461:29" pos:end="2461:34">(<argument pos:start="2461:30" pos:end="2461:33"><expr pos:start="2461:30" pos:end="2461:33"><name pos:start="2461:30" pos:end="2461:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2463:9" pos:end="2463:48"><expr pos:start="2463:9" pos:end="2463:47"><name pos:start="2463:9" pos:end="2463:11">ret</name> <operator pos:start="2463:13" pos:end="2463:13">=</operator> <call pos:start="2463:15" pos:end="2463:47"><name pos:start="2463:15" pos:end="2463:23">get_errno</name><argument_list pos:start="2463:24" pos:end="2463:47">(<argument pos:start="2463:25" pos:end="2463:46"><expr pos:start="2463:25" pos:end="2463:46"><call pos:start="2463:25" pos:end="2463:46"><name pos:start="2463:25" pos:end="2463:37">setdomainname</name><argument_list pos:start="2463:38" pos:end="2463:46">(<argument pos:start="2463:39" pos:end="2463:39"><expr pos:start="2463:39" pos:end="2463:39"><name pos:start="2463:39" pos:end="2463:39">p</name></expr></argument>, <argument pos:start="2463:42" pos:end="2463:45"><expr pos:start="2463:42" pos:end="2463:45"><name pos:start="2463:42" pos:end="2463:45">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2465:9" pos:end="2465:32"><expr pos:start="2465:9" pos:end="2465:31"><call pos:start="2465:9" pos:end="2465:31"><name pos:start="2465:9" pos:end="2465:19">unlock_user</name><argument_list pos:start="2465:20" pos:end="2465:31">(<argument pos:start="2465:21" pos:end="2465:21"><expr pos:start="2465:21" pos:end="2465:21"><name pos:start="2465:21" pos:end="2465:21">p</name></expr></argument>, <argument pos:start="2465:24" pos:end="2465:27"><expr pos:start="2465:24" pos:end="2465:27"><name pos:start="2465:24" pos:end="2465:27">arg1</name></expr></argument>, <argument pos:start="2465:30" pos:end="2465:30"><expr pos:start="2465:30" pos:end="2465:30"><literal type="number" pos:start="2465:30" pos:end="2465:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2467:9" pos:end="2467:14">break;</break>

    <case pos:start="2469:5" pos:end="2469:25">case <expr pos:start="2469:10" pos:end="2469:24"><name pos:start="2469:10" pos:end="2469:24">TARGET_NR_uname</name></expr>:</case>

        <comment type="block" pos:start="2471:9" pos:end="2471:67">/* no need to transcode because we use the linux syscall */</comment>

        <block pos:start="2473:9" pos:end="2501:9">{<block_content pos:start="2475:13" pos:end="2499:45">

            <decl_stmt pos:start="2475:13" pos:end="2475:37"><decl pos:start="2475:13" pos:end="2475:36"><type pos:start="2475:13" pos:end="2475:32"><name pos:start="2475:13" pos:end="2475:30"><name pos:start="2475:13" pos:end="2475:18">struct</name> <name pos:start="2475:20" pos:end="2475:30">new_utsname</name></name> <modifier pos:start="2475:32" pos:end="2475:32">*</modifier></type> <name pos:start="2475:34" pos:end="2475:36">buf</name></decl>;</decl_stmt>

   

            <expr_stmt pos:start="2479:13" pos:end="2479:43"><expr pos:start="2479:13" pos:end="2479:42"><call pos:start="2479:13" pos:end="2479:42"><name pos:start="2479:13" pos:end="2479:28">lock_user_struct</name><argument_list pos:start="2479:29" pos:end="2479:42">(<argument pos:start="2479:30" pos:end="2479:32"><expr pos:start="2479:30" pos:end="2479:32"><name pos:start="2479:30" pos:end="2479:32">buf</name></expr></argument>, <argument pos:start="2479:35" pos:end="2479:38"><expr pos:start="2479:35" pos:end="2479:38"><name pos:start="2479:35" pos:end="2479:38">arg1</name></expr></argument>, <argument pos:start="2479:41" pos:end="2479:41"><expr pos:start="2479:41" pos:end="2479:41"><literal type="number" pos:start="2479:41" pos:end="2479:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2481:13" pos:end="2481:44"><expr pos:start="2481:13" pos:end="2481:43"><name pos:start="2481:13" pos:end="2481:15">ret</name> <operator pos:start="2481:17" pos:end="2481:17">=</operator> <call pos:start="2481:19" pos:end="2481:43"><name pos:start="2481:19" pos:end="2481:27">get_errno</name><argument_list pos:start="2481:28" pos:end="2481:43">(<argument pos:start="2481:29" pos:end="2481:42"><expr pos:start="2481:29" pos:end="2481:42"><call pos:start="2481:29" pos:end="2481:42"><name pos:start="2481:29" pos:end="2481:37">sys_uname</name><argument_list pos:start="2481:38" pos:end="2481:42">(<argument pos:start="2481:39" pos:end="2481:41"><expr pos:start="2481:39" pos:end="2481:41"><name pos:start="2481:39" pos:end="2481:41">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2483:13" pos:end="2497:13"><if pos:start="2483:13" pos:end="2497:13">if <condition pos:start="2483:16" pos:end="2483:31">(<expr pos:start="2483:17" pos:end="2483:30"><operator pos:start="2483:17" pos:end="2483:17">!</operator><call pos:start="2483:18" pos:end="2483:30"><name pos:start="2483:18" pos:end="2483:25">is_error</name><argument_list pos:start="2483:26" pos:end="2483:30">(<argument pos:start="2483:27" pos:end="2483:29"><expr pos:start="2483:27" pos:end="2483:29"><name pos:start="2483:27" pos:end="2483:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2483:33" pos:end="2497:13">{<block_content pos:start="2489:17" pos:end="2495:60">

                <comment type="block" pos:start="2485:17" pos:end="2487:31">/* Overrite the native machine name with whatever is being

                   emulated. */</comment>

                <expr_stmt pos:start="2489:17" pos:end="2489:53"><expr pos:start="2489:17" pos:end="2489:52"><call pos:start="2489:17" pos:end="2489:52"><name pos:start="2489:17" pos:end="2489:22">strcpy</name> <argument_list pos:start="2489:24" pos:end="2489:52">(<argument pos:start="2489:25" pos:end="2489:36"><expr pos:start="2489:25" pos:end="2489:36"><name pos:start="2489:25" pos:end="2489:36"><name pos:start="2489:25" pos:end="2489:27">buf</name><operator pos:start="2489:28" pos:end="2489:29">-&gt;</operator><name pos:start="2489:30" pos:end="2489:36">machine</name></name></expr></argument>, <argument pos:start="2489:39" pos:end="2489:51"><expr pos:start="2489:39" pos:end="2489:51"><name pos:start="2489:39" pos:end="2489:51">UNAME_MACHINE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="2491:17" pos:end="2491:71">/* Allow the user to override the reported release.  */</comment>

                <if_stmt pos:start="2493:17" pos:end="2495:60"><if pos:start="2493:17" pos:end="2495:60">if <condition pos:start="2493:20" pos:end="2493:62">(<expr pos:start="2493:21" pos:end="2493:61"><name pos:start="2493:21" pos:end="2493:38">qemu_uname_release</name> <operator pos:start="2493:40" pos:end="2493:41">&amp;&amp;</operator> <operator pos:start="2493:43" pos:end="2493:43">*</operator><name pos:start="2493:44" pos:end="2493:61">qemu_uname_release</name></expr>)</condition><block type="pseudo" pos:start="2495:19" pos:end="2495:60"><block_content pos:start="2495:19" pos:end="2495:60">

                  <expr_stmt pos:start="2495:19" pos:end="2495:60"><expr pos:start="2495:19" pos:end="2495:59"><call pos:start="2495:19" pos:end="2495:59"><name pos:start="2495:19" pos:end="2495:24">strcpy</name> <argument_list pos:start="2495:26" pos:end="2495:59">(<argument pos:start="2495:27" pos:end="2495:38"><expr pos:start="2495:27" pos:end="2495:38"><name pos:start="2495:27" pos:end="2495:38"><name pos:start="2495:27" pos:end="2495:29">buf</name><operator pos:start="2495:30" pos:end="2495:31">-&gt;</operator><name pos:start="2495:32" pos:end="2495:38">release</name></name></expr></argument>, <argument pos:start="2495:41" pos:end="2495:58"><expr pos:start="2495:41" pos:end="2495:58"><name pos:start="2495:41" pos:end="2495:58">qemu_uname_release</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="2499:13" pos:end="2499:45"><expr pos:start="2499:13" pos:end="2499:44"><call pos:start="2499:13" pos:end="2499:44"><name pos:start="2499:13" pos:end="2499:30">unlock_user_struct</name><argument_list pos:start="2499:31" pos:end="2499:44">(<argument pos:start="2499:32" pos:end="2499:34"><expr pos:start="2499:32" pos:end="2499:34"><name pos:start="2499:32" pos:end="2499:34">buf</name></expr></argument>, <argument pos:start="2499:37" pos:end="2499:40"><expr pos:start="2499:37" pos:end="2499:40"><name pos:start="2499:37" pos:end="2499:40">arg1</name></expr></argument>, <argument pos:start="2499:43" pos:end="2499:43"><expr pos:start="2499:43" pos:end="2499:43"><literal type="number" pos:start="2499:43" pos:end="2499:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="2503:9" pos:end="2506:0">break;</break>

<cpp:ifdef pos:start="2505:1" pos:end="2505:18">#<cpp:directive pos:start="2505:2" pos:end="2505:6">ifdef</cpp:directive> <name pos:start="2505:8" pos:end="2505:18">TARGET_I386</name></cpp:ifdef>

    <case pos:start="2507:5" pos:end="2507:30">case <expr pos:start="2507:10" pos:end="2507:29"><name pos:start="2507:10" pos:end="2507:29">TARGET_NR_modify_ldt</name></expr>:</case>

        <expr_stmt pos:start="2509:9" pos:end="2509:66"><expr pos:start="2509:9" pos:end="2509:65"><name pos:start="2509:9" pos:end="2509:11">ret</name> <operator pos:start="2509:13" pos:end="2509:13">=</operator> <call pos:start="2509:15" pos:end="2509:65"><name pos:start="2509:15" pos:end="2509:23">get_errno</name><argument_list pos:start="2509:24" pos:end="2509:65">(<argument pos:start="2509:25" pos:end="2509:64"><expr pos:start="2509:25" pos:end="2509:64"><call pos:start="2509:25" pos:end="2509:64"><name pos:start="2509:25" pos:end="2509:37">do_modify_ldt</name><argument_list pos:start="2509:38" pos:end="2509:64">(<argument pos:start="2509:39" pos:end="2509:45"><expr pos:start="2509:39" pos:end="2509:45"><name pos:start="2509:39" pos:end="2509:45">cpu_env</name></expr></argument>, <argument pos:start="2509:48" pos:end="2509:51"><expr pos:start="2509:48" pos:end="2509:51"><name pos:start="2509:48" pos:end="2509:51">arg1</name></expr></argument>, <argument pos:start="2509:54" pos:end="2509:57"><expr pos:start="2509:54" pos:end="2509:57"><name pos:start="2509:54" pos:end="2509:57">arg2</name></expr></argument>, <argument pos:start="2509:60" pos:end="2509:63"><expr pos:start="2509:60" pos:end="2509:63"><name pos:start="2509:60" pos:end="2509:63">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2511:9" pos:end="2514:0">break;</break>

<cpp:if pos:start="2513:1" pos:end="2513:27">#<cpp:directive pos:start="2513:2" pos:end="2513:3">if</cpp:directive> <expr pos:start="2513:5" pos:end="2513:27"><operator pos:start="2513:5" pos:end="2513:5">!</operator><call pos:start="2513:6" pos:end="2513:27"><name pos:start="2513:6" pos:end="2513:12">defined</name><argument_list pos:start="2513:13" pos:end="2513:27">(<argument pos:start="2513:14" pos:end="2513:26"><expr pos:start="2513:14" pos:end="2513:26"><name pos:start="2513:14" pos:end="2513:26">TARGET_X86_64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="2515:5" pos:end="2515:27">case <expr pos:start="2515:10" pos:end="2515:26"><name pos:start="2515:10" pos:end="2515:26">TARGET_NR_vm86old</name></expr>:</case>

        <goto pos:start="2517:9" pos:end="2517:27">goto <name pos:start="2517:14" pos:end="2517:26">unimplemented</name>;</goto>

    <case pos:start="2519:5" pos:end="2519:24">case <expr pos:start="2519:10" pos:end="2519:23"><name pos:start="2519:10" pos:end="2519:23">TARGET_NR_vm86</name></expr>:</case>

        <expr_stmt pos:start="2521:9" pos:end="2521:43"><expr pos:start="2521:9" pos:end="2521:42"><name pos:start="2521:9" pos:end="2521:11">ret</name> <operator pos:start="2521:13" pos:end="2521:13">=</operator> <call pos:start="2521:15" pos:end="2521:42"><name pos:start="2521:15" pos:end="2521:21">do_vm86</name><argument_list pos:start="2521:22" pos:end="2521:42">(<argument pos:start="2521:23" pos:end="2521:29"><expr pos:start="2521:23" pos:end="2521:29"><name pos:start="2521:23" pos:end="2521:29">cpu_env</name></expr></argument>, <argument pos:start="2521:32" pos:end="2521:35"><expr pos:start="2521:32" pos:end="2521:35"><name pos:start="2521:32" pos:end="2521:35">arg1</name></expr></argument>, <argument pos:start="2521:38" pos:end="2521:41"><expr pos:start="2521:38" pos:end="2521:41"><name pos:start="2521:38" pos:end="2521:41">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2523:9" pos:end="2528:0">break;</break>

<cpp:endif pos:start="2525:1" pos:end="2525:6">#<cpp:directive pos:start="2525:2" pos:end="2525:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="2527:1" pos:end="2527:6">#<cpp:directive pos:start="2527:2" pos:end="2527:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2529:5" pos:end="2529:28">case <expr pos:start="2529:10" pos:end="2529:27"><name pos:start="2529:10" pos:end="2529:27">TARGET_NR_adjtimex</name></expr>:</case>

        <goto pos:start="2531:9" pos:end="2534:0">goto <name pos:start="2531:14" pos:end="2531:26">unimplemented</name>;</goto>

<cpp:ifdef pos:start="2533:1" pos:end="2533:30">#<cpp:directive pos:start="2533:2" pos:end="2533:6">ifdef</cpp:directive> <name pos:start="2533:8" pos:end="2533:30">TARGET_NR_create_module</name></cpp:ifdef>

    <case pos:start="2535:5" pos:end="2538:0">case <expr pos:start="2535:10" pos:end="2535:32"><name pos:start="2535:10" pos:end="2535:32">TARGET_NR_create_module</name></expr>:</case>

<cpp:endif pos:start="2537:1" pos:end="2537:6">#<cpp:directive pos:start="2537:2" pos:end="2537:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2539:5" pos:end="2539:31">case <expr pos:start="2539:10" pos:end="2539:30"><name pos:start="2539:10" pos:end="2539:30">TARGET_NR_init_module</name></expr>:</case>

    <case pos:start="2541:5" pos:end="2544:0">case <expr pos:start="2541:10" pos:end="2541:32"><name pos:start="2541:10" pos:end="2541:32">TARGET_NR_delete_module</name></expr>:</case>

<cpp:ifdef pos:start="2543:1" pos:end="2543:32">#<cpp:directive pos:start="2543:2" pos:end="2543:6">ifdef</cpp:directive> <name pos:start="2543:8" pos:end="2543:32">TARGET_NR_get_kernel_syms</name></cpp:ifdef>

    <case pos:start="2545:5" pos:end="2548:0">case <expr pos:start="2545:10" pos:end="2545:34"><name pos:start="2545:10" pos:end="2545:34">TARGET_NR_get_kernel_syms</name></expr>:</case>

<cpp:endif pos:start="2547:1" pos:end="2547:6">#<cpp:directive pos:start="2547:2" pos:end="2547:6">endif</cpp:directive></cpp:endif>

        <goto pos:start="2549:9" pos:end="2549:27">goto <name pos:start="2549:14" pos:end="2549:26">unimplemented</name>;</goto>

    <case pos:start="2551:5" pos:end="2551:28">case <expr pos:start="2551:10" pos:end="2551:27"><name pos:start="2551:10" pos:end="2551:27">TARGET_NR_quotactl</name></expr>:</case>

        <goto pos:start="2553:9" pos:end="2553:27">goto <name pos:start="2553:14" pos:end="2553:26">unimplemented</name>;</goto>

    <case pos:start="2555:5" pos:end="2555:27">case <expr pos:start="2555:10" pos:end="2555:26"><name pos:start="2555:10" pos:end="2555:26">TARGET_NR_getpgid</name></expr>:</case>

        <expr_stmt pos:start="2557:9" pos:end="2557:39"><expr pos:start="2557:9" pos:end="2557:38"><name pos:start="2557:9" pos:end="2557:11">ret</name> <operator pos:start="2557:13" pos:end="2557:13">=</operator> <call pos:start="2557:15" pos:end="2557:38"><name pos:start="2557:15" pos:end="2557:23">get_errno</name><argument_list pos:start="2557:24" pos:end="2557:38">(<argument pos:start="2557:25" pos:end="2557:37"><expr pos:start="2557:25" pos:end="2557:37"><call pos:start="2557:25" pos:end="2557:37"><name pos:start="2557:25" pos:end="2557:31">getpgid</name><argument_list pos:start="2557:32" pos:end="2557:37">(<argument pos:start="2557:33" pos:end="2557:36"><expr pos:start="2557:33" pos:end="2557:36"><name pos:start="2557:33" pos:end="2557:36">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2559:9" pos:end="2559:14">break;</break>

    <case pos:start="2561:5" pos:end="2561:26">case <expr pos:start="2561:10" pos:end="2561:25"><name pos:start="2561:10" pos:end="2561:25">TARGET_NR_fchdir</name></expr>:</case>

        <expr_stmt pos:start="2563:9" pos:end="2563:38"><expr pos:start="2563:9" pos:end="2563:37"><name pos:start="2563:9" pos:end="2563:11">ret</name> <operator pos:start="2563:13" pos:end="2563:13">=</operator> <call pos:start="2563:15" pos:end="2563:37"><name pos:start="2563:15" pos:end="2563:23">get_errno</name><argument_list pos:start="2563:24" pos:end="2563:37">(<argument pos:start="2563:25" pos:end="2563:36"><expr pos:start="2563:25" pos:end="2563:36"><call pos:start="2563:25" pos:end="2563:36"><name pos:start="2563:25" pos:end="2563:30">fchdir</name><argument_list pos:start="2563:31" pos:end="2563:36">(<argument pos:start="2563:32" pos:end="2563:35"><expr pos:start="2563:32" pos:end="2563:35"><name pos:start="2563:32" pos:end="2563:35">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2565:9" pos:end="2568:0">break;</break>

<cpp:ifdef pos:start="2567:1" pos:end="2567:24">#<cpp:directive pos:start="2567:2" pos:end="2567:6">ifdef</cpp:directive> <name pos:start="2567:8" pos:end="2567:24">TARGET_NR_bdflush</name></cpp:ifdef> <comment type="block" pos:start="2567:26" pos:end="2567:44">/* not on x86_64 */</comment>

    <case pos:start="2569:5" pos:end="2569:27">case <expr pos:start="2569:10" pos:end="2569:26"><name pos:start="2569:10" pos:end="2569:26">TARGET_NR_bdflush</name></expr>:</case>

        <goto pos:start="2571:9" pos:end="2576:0">goto <name pos:start="2571:14" pos:end="2571:26">unimplemented</name>;</goto>

<cpp:endif pos:start="2573:1" pos:end="2573:6">#<cpp:directive pos:start="2573:2" pos:end="2573:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2575:1" pos:end="2575:22">#<cpp:directive pos:start="2575:2" pos:end="2575:6">ifdef</cpp:directive> <name pos:start="2575:8" pos:end="2575:22">TARGET_NR_sysfs</name></cpp:ifdef>

    <case pos:start="2577:5" pos:end="2577:25">case <expr pos:start="2577:10" pos:end="2577:24"><name pos:start="2577:10" pos:end="2577:24">TARGET_NR_sysfs</name></expr>:</case>

        <goto pos:start="2579:9" pos:end="2582:0">goto <name pos:start="2579:14" pos:end="2579:26">unimplemented</name>;</goto>

<cpp:endif pos:start="2581:1" pos:end="2581:6">#<cpp:directive pos:start="2581:2" pos:end="2581:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2583:5" pos:end="2583:31">case <expr pos:start="2583:10" pos:end="2583:30"><name pos:start="2583:10" pos:end="2583:30">TARGET_NR_personality</name></expr>:</case>

        <expr_stmt pos:start="2585:9" pos:end="2585:43"><expr pos:start="2585:9" pos:end="2585:42"><name pos:start="2585:9" pos:end="2585:11">ret</name> <operator pos:start="2585:13" pos:end="2585:13">=</operator> <call pos:start="2585:15" pos:end="2585:42"><name pos:start="2585:15" pos:end="2585:23">get_errno</name><argument_list pos:start="2585:24" pos:end="2585:42">(<argument pos:start="2585:25" pos:end="2585:41"><expr pos:start="2585:25" pos:end="2585:41"><call pos:start="2585:25" pos:end="2585:41"><name pos:start="2585:25" pos:end="2585:35">personality</name><argument_list pos:start="2585:36" pos:end="2585:41">(<argument pos:start="2585:37" pos:end="2585:40"><expr pos:start="2585:37" pos:end="2585:40"><name pos:start="2585:37" pos:end="2585:40">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2587:9" pos:end="2590:0">break;</break>

<cpp:ifdef pos:start="2589:1" pos:end="2589:28">#<cpp:directive pos:start="2589:2" pos:end="2589:6">ifdef</cpp:directive> <name pos:start="2589:8" pos:end="2589:28">TARGET_NR_afs_syscall</name></cpp:ifdef>

    <case pos:start="2591:5" pos:end="2591:31">case <expr pos:start="2591:10" pos:end="2591:30"><name pos:start="2591:10" pos:end="2591:30">TARGET_NR_afs_syscall</name></expr>:</case>

        <goto pos:start="2593:9" pos:end="2598:0">goto <name pos:start="2593:14" pos:end="2593:26">unimplemented</name>;</goto>

<cpp:endif pos:start="2595:1" pos:end="2595:6">#<cpp:directive pos:start="2595:2" pos:end="2595:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2597:1" pos:end="2597:24">#<cpp:directive pos:start="2597:2" pos:end="2597:6">ifdef</cpp:directive> <name pos:start="2597:8" pos:end="2597:24">TARGET_NR__llseek</name></cpp:ifdef> <comment type="block" pos:start="2597:26" pos:end="2597:43">/* Not on alpha */</comment>

    <case pos:start="2599:5" pos:end="2599:27">case <expr pos:start="2599:10" pos:end="2599:26"><name pos:start="2599:10" pos:end="2599:26">TARGET_NR__llseek</name></expr>:</case>

        <block pos:start="2601:9" pos:end="2619:9">{<block_content pos:start="2605:13" pos:end="2618:0">

<cpp:if pos:start="2603:1" pos:end="2603:24">#<cpp:directive pos:start="2603:2" pos:end="2603:3">if</cpp:directive> <expr pos:start="2603:5" pos:end="2603:24"><call pos:start="2603:5" pos:end="2603:24"><name pos:start="2603:5" pos:end="2603:11">defined</name> <argument_list pos:start="2603:13" pos:end="2603:24">(<argument pos:start="2603:14" pos:end="2603:23"><expr pos:start="2603:14" pos:end="2603:23"><name pos:start="2603:14" pos:end="2603:23">__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <expr_stmt pos:start="2605:13" pos:end="2605:79"><expr pos:start="2605:13" pos:end="2605:78"><name pos:start="2605:13" pos:end="2605:15">ret</name> <operator pos:start="2605:17" pos:end="2605:17">=</operator> <call pos:start="2605:19" pos:end="2605:78"><name pos:start="2605:19" pos:end="2605:27">get_errno</name><argument_list pos:start="2605:28" pos:end="2605:78">(<argument pos:start="2605:29" pos:end="2605:77"><expr pos:start="2605:29" pos:end="2605:77"><call pos:start="2605:29" pos:end="2605:77"><name pos:start="2605:29" pos:end="2605:33">lseek</name><argument_list pos:start="2605:34" pos:end="2605:77">(<argument pos:start="2605:35" pos:end="2605:38"><expr pos:start="2605:35" pos:end="2605:38"><name pos:start="2605:35" pos:end="2605:38">arg1</name></expr></argument>, <argument pos:start="2605:41" pos:end="2605:70"><expr pos:start="2605:41" pos:end="2605:70"><operator pos:start="2605:41" pos:end="2605:41">(</operator><operator pos:start="2605:42" pos:end="2605:42">(</operator><name pos:start="2605:43" pos:end="2605:50">uint64_t</name> <operator pos:start="2605:52" pos:end="2605:52">)</operator><name pos:start="2605:53" pos:end="2605:56">arg2</name> <operator pos:start="2605:58" pos:end="2605:59">&lt;&lt;</operator> <literal type="number" pos:start="2605:61" pos:end="2605:62">32</literal><operator pos:start="2605:63" pos:end="2605:63">)</operator> <operator pos:start="2605:65" pos:end="2605:65">|</operator> <name pos:start="2605:67" pos:end="2605:70">arg3</name></expr></argument>, <argument pos:start="2605:73" pos:end="2605:76"><expr pos:start="2605:73" pos:end="2605:76"><name pos:start="2605:73" pos:end="2605:76">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2607:13" pos:end="2610:0"><expr pos:start="2607:13" pos:end="2607:29"><call pos:start="2607:13" pos:end="2607:29"><name pos:start="2607:13" pos:end="2607:18">tput64</name><argument_list pos:start="2607:19" pos:end="2607:29">(<argument pos:start="2607:20" pos:end="2607:23"><expr pos:start="2607:20" pos:end="2607:23"><name pos:start="2607:20" pos:end="2607:23">arg4</name></expr></argument>, <argument pos:start="2607:26" pos:end="2607:28"><expr pos:start="2607:26" pos:end="2607:28"><name pos:start="2607:26" pos:end="2607:28">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="2609:1" pos:end="2609:5">#<cpp:directive pos:start="2609:2" pos:end="2609:5">else</cpp:directive></cpp:else>

            <decl_stmt pos:start="2611:13" pos:end="2611:24"><decl pos:start="2611:13" pos:end="2611:23"><type pos:start="2611:13" pos:end="2611:19"><name pos:start="2611:13" pos:end="2611:19">int64_t</name></type> <name pos:start="2611:21" pos:end="2611:23">res</name></decl>;</decl_stmt>

            <expr_stmt pos:start="2613:13" pos:end="2613:67"><expr pos:start="2613:13" pos:end="2613:66"><name pos:start="2613:13" pos:end="2613:15">ret</name> <operator pos:start="2613:17" pos:end="2613:17">=</operator> <call pos:start="2613:19" pos:end="2613:66"><name pos:start="2613:19" pos:end="2613:27">get_errno</name><argument_list pos:start="2613:28" pos:end="2613:66">(<argument pos:start="2613:29" pos:end="2613:65"><expr pos:start="2613:29" pos:end="2613:65"><call pos:start="2613:29" pos:end="2613:65"><name pos:start="2613:29" pos:end="2613:35">_llseek</name><argument_list pos:start="2613:36" pos:end="2613:65">(<argument pos:start="2613:37" pos:end="2613:40"><expr pos:start="2613:37" pos:end="2613:40"><name pos:start="2613:37" pos:end="2613:40">arg1</name></expr></argument>, <argument pos:start="2613:43" pos:end="2613:46"><expr pos:start="2613:43" pos:end="2613:46"><name pos:start="2613:43" pos:end="2613:46">arg2</name></expr></argument>, <argument pos:start="2613:49" pos:end="2613:52"><expr pos:start="2613:49" pos:end="2613:52"><name pos:start="2613:49" pos:end="2613:52">arg3</name></expr></argument>, <argument pos:start="2613:55" pos:end="2613:58"><expr pos:start="2613:55" pos:end="2613:58"><operator pos:start="2613:55" pos:end="2613:55">&amp;</operator><name pos:start="2613:56" pos:end="2613:58">res</name></expr></argument>, <argument pos:start="2613:61" pos:end="2613:64"><expr pos:start="2613:61" pos:end="2613:64"><name pos:start="2613:61" pos:end="2613:64">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2615:13" pos:end="2618:0"><expr pos:start="2615:13" pos:end="2615:29"><call pos:start="2615:13" pos:end="2615:29"><name pos:start="2615:13" pos:end="2615:18">tput64</name><argument_list pos:start="2615:19" pos:end="2615:29">(<argument pos:start="2615:20" pos:end="2615:23"><expr pos:start="2615:20" pos:end="2615:23"><name pos:start="2615:20" pos:end="2615:23">arg4</name></expr></argument>, <argument pos:start="2615:26" pos:end="2615:28"><expr pos:start="2615:26" pos:end="2615:28"><name pos:start="2615:26" pos:end="2615:28">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="2617:1" pos:end="2617:6">#<cpp:directive pos:start="2617:2" pos:end="2617:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block>

        <break pos:start="2621:9" pos:end="2624:0">break;</break>

<cpp:endif pos:start="2623:1" pos:end="2623:6">#<cpp:directive pos:start="2623:2" pos:end="2623:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2625:5" pos:end="2628:0">case <expr pos:start="2625:10" pos:end="2625:27"><name pos:start="2625:10" pos:end="2625:27">TARGET_NR_getdents</name></expr>:</case>

<cpp:if pos:start="2627:1" pos:end="2627:25">#<cpp:directive pos:start="2627:2" pos:end="2627:3">if</cpp:directive> <expr pos:start="2627:5" pos:end="2627:25"><name pos:start="2627:5" pos:end="2627:20">TARGET_LONG_SIZE</name> <operator pos:start="2627:22" pos:end="2627:23">!=</operator> <literal type="number" pos:start="2627:25" pos:end="2627:25">4</literal></expr></cpp:if>

        <goto pos:start="2629:9" pos:end="2634:0">goto <name pos:start="2629:14" pos:end="2629:26">unimplemented</name>;</goto>

<cpp:warning pos:start="2631:1" pos:end="2631:22">#<cpp:directive pos:start="2631:2" pos:end="2631:8">warning</cpp:directive> not supported</cpp:warning>

<cpp:elif pos:start="2633:1" pos:end="2633:50">#<cpp:directive pos:start="2633:2" pos:end="2633:5">elif</cpp:directive> <expr pos:start="2633:7" pos:end="2633:50"><name pos:start="2633:7" pos:end="2633:22">TARGET_LONG_SIZE</name> <operator pos:start="2633:24" pos:end="2633:25">==</operator> <literal type="number" pos:start="2633:27" pos:end="2633:27">4</literal> <operator pos:start="2633:29" pos:end="2633:30">&amp;&amp;</operator> <name pos:start="2633:32" pos:end="2633:45">HOST_LONG_SIZE</name> <operator pos:start="2633:47" pos:end="2633:48">==</operator> <literal type="number" pos:start="2633:50" pos:end="2633:50">8</literal></expr></cpp:elif>

        <block pos:start="2635:9" pos:end="2720:0">{<block_content pos:start="2637:13" pos:end="2715:23">

            <decl_stmt pos:start="2637:13" pos:end="2637:46"><decl pos:start="2637:13" pos:end="2637:45"><type pos:start="2637:13" pos:end="2637:34"><name pos:start="2637:13" pos:end="2637:32"><name pos:start="2637:13" pos:end="2637:18">struct</name> <name pos:start="2637:20" pos:end="2637:32">target_dirent</name></name> <modifier pos:start="2637:34" pos:end="2637:34">*</modifier></type><name pos:start="2637:35" pos:end="2637:45">target_dirp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="2639:13" pos:end="2639:32"><decl pos:start="2639:13" pos:end="2639:31"><type pos:start="2639:13" pos:end="2639:27"><name pos:start="2639:13" pos:end="2639:25"><name pos:start="2639:13" pos:end="2639:18">struct</name> <name pos:start="2639:20" pos:end="2639:25">dirent</name></name> <modifier pos:start="2639:27" pos:end="2639:27">*</modifier></type><name pos:start="2639:28" pos:end="2639:31">dirp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="2641:13" pos:end="2641:30"><decl pos:start="2641:13" pos:end="2641:29"><type pos:start="2641:13" pos:end="2641:16"><name pos:start="2641:13" pos:end="2641:16">long</name></type> <name pos:start="2641:18" pos:end="2641:22">count</name> <init pos:start="2641:24" pos:end="2641:29">= <expr pos:start="2641:26" pos:end="2641:29"><name pos:start="2641:26" pos:end="2641:29">arg3</name></expr></init></decl>;</decl_stmt>



	    <expr_stmt pos:start="2645:13" pos:end="2645:33"><expr pos:start="2645:13" pos:end="2645:32"><name pos:start="2645:13" pos:end="2645:16">dirp</name> <operator pos:start="2645:18" pos:end="2645:18">=</operator> <call pos:start="2645:20" pos:end="2645:32"><name pos:start="2645:20" pos:end="2645:25">malloc</name><argument_list pos:start="2645:26" pos:end="2645:32">(<argument pos:start="2645:27" pos:end="2645:31"><expr pos:start="2645:27" pos:end="2645:31"><name pos:start="2645:27" pos:end="2645:31">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <if_stmt pos:start="2647:13" pos:end="2649:31"><if pos:start="2647:13" pos:end="2649:31">if <condition pos:start="2647:16" pos:end="2647:22">(<expr pos:start="2647:17" pos:end="2647:21"><operator pos:start="2647:17" pos:end="2647:17">!</operator><name pos:start="2647:18" pos:end="2647:21">dirp</name></expr>)</condition><block type="pseudo" pos:start="2649:17" pos:end="2649:31"><block_content pos:start="2649:17" pos:end="2649:31">

                <return pos:start="2649:17" pos:end="2649:31">return <expr pos:start="2649:24" pos:end="2649:30"><operator pos:start="2649:24" pos:end="2649:24">-</operator><name pos:start="2649:25" pos:end="2649:30">ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

           

            <expr_stmt pos:start="2653:13" pos:end="2653:61"><expr pos:start="2653:13" pos:end="2653:60"><name pos:start="2653:13" pos:end="2653:15">ret</name> <operator pos:start="2653:17" pos:end="2653:17">=</operator> <call pos:start="2653:19" pos:end="2653:60"><name pos:start="2653:19" pos:end="2653:27">get_errno</name><argument_list pos:start="2653:28" pos:end="2653:60">(<argument pos:start="2653:29" pos:end="2653:59"><expr pos:start="2653:29" pos:end="2653:59"><call pos:start="2653:29" pos:end="2653:59"><name pos:start="2653:29" pos:end="2653:40">sys_getdents</name><argument_list pos:start="2653:41" pos:end="2653:59">(<argument pos:start="2653:42" pos:end="2653:45"><expr pos:start="2653:42" pos:end="2653:45"><name pos:start="2653:42" pos:end="2653:45">arg1</name></expr></argument>, <argument pos:start="2653:48" pos:end="2653:51"><expr pos:start="2653:48" pos:end="2653:51"><name pos:start="2653:48" pos:end="2653:51">dirp</name></expr></argument>, <argument pos:start="2653:54" pos:end="2653:58"><expr pos:start="2653:54" pos:end="2653:58"><name pos:start="2653:54" pos:end="2653:58">count</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2655:13" pos:end="2711:13"><if pos:start="2655:13" pos:end="2711:13">if <condition pos:start="2655:16" pos:end="2655:31">(<expr pos:start="2655:17" pos:end="2655:30"><operator pos:start="2655:17" pos:end="2655:17">!</operator><call pos:start="2655:18" pos:end="2655:30"><name pos:start="2655:18" pos:end="2655:25">is_error</name><argument_list pos:start="2655:26" pos:end="2655:30">(<argument pos:start="2655:27" pos:end="2655:29"><expr pos:start="2655:27" pos:end="2655:29"><name pos:start="2655:27" pos:end="2655:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2655:33" pos:end="2711:13">{<block_content pos:start="2657:17" pos:end="2709:29">

                <decl_stmt pos:start="2657:17" pos:end="2657:34"><decl pos:start="2657:17" pos:end="2657:33"><type pos:start="2657:17" pos:end="2657:31"><name pos:start="2657:17" pos:end="2657:29"><name pos:start="2657:17" pos:end="2657:22">struct</name> <name pos:start="2657:24" pos:end="2657:29">dirent</name></name> <modifier pos:start="2657:31" pos:end="2657:31">*</modifier></type><name pos:start="2657:32" pos:end="2657:33">de</name></decl>;</decl_stmt>

		<decl_stmt pos:start="2659:17" pos:end="2659:42"><decl pos:start="2659:17" pos:end="2659:41"><type pos:start="2659:17" pos:end="2659:38"><name pos:start="2659:17" pos:end="2659:36"><name pos:start="2659:17" pos:end="2659:22">struct</name> <name pos:start="2659:24" pos:end="2659:36">target_dirent</name></name> <modifier pos:start="2659:38" pos:end="2659:38">*</modifier></type><name pos:start="2659:39" pos:end="2659:41">tde</name></decl>;</decl_stmt>

                <decl_stmt pos:start="2661:17" pos:end="2661:30"><decl pos:start="2661:17" pos:end="2661:29"><type pos:start="2661:17" pos:end="2661:19"><name pos:start="2661:17" pos:end="2661:19">int</name></type> <name pos:start="2661:21" pos:end="2661:23">len</name> <init pos:start="2661:25" pos:end="2661:29">= <expr pos:start="2661:27" pos:end="2661:29"><name pos:start="2661:27" pos:end="2661:29">ret</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="2663:17" pos:end="2663:36"><decl pos:start="2663:17" pos:end="2663:26"><type pos:start="2663:17" pos:end="2663:19"><name pos:start="2663:17" pos:end="2663:19">int</name></type> <name pos:start="2663:21" pos:end="2663:26">reclen</name></decl>, <decl pos:start="2663:29" pos:end="2663:35"><type ref="prev" pos:start="2663:17" pos:end="2663:19"/><name pos:start="2663:29" pos:end="2663:35">treclen</name></decl>;</decl_stmt>

		<decl_stmt pos:start="2665:17" pos:end="2665:37"><decl pos:start="2665:17" pos:end="2665:26"><type pos:start="2665:17" pos:end="2665:19"><name pos:start="2665:17" pos:end="2665:19">int</name></type> <name pos:start="2665:21" pos:end="2665:26">count1</name></decl>, <decl pos:start="2665:29" pos:end="2665:36"><type ref="prev" pos:start="2665:17" pos:end="2665:19"/><name pos:start="2665:29" pos:end="2665:36">tnamelen</name></decl>;</decl_stmt>



		<expr_stmt pos:start="2669:17" pos:end="2669:27"><expr pos:start="2669:17" pos:end="2669:26"><name pos:start="2669:17" pos:end="2669:22">count1</name> <operator pos:start="2669:24" pos:end="2669:24">=</operator> <literal type="number" pos:start="2669:26" pos:end="2669:26">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="2671:17" pos:end="2671:26"><expr pos:start="2671:17" pos:end="2671:25"><name pos:start="2671:17" pos:end="2671:18">de</name> <operator pos:start="2671:20" pos:end="2671:20">=</operator> <name pos:start="2671:22" pos:end="2671:25">dirp</name></expr>;</expr_stmt>

                <expr_stmt pos:start="2673:17" pos:end="2673:56"><expr pos:start="2673:17" pos:end="2673:55"><name pos:start="2673:17" pos:end="2673:27">target_dirp</name> <operator pos:start="2673:29" pos:end="2673:29">=</operator> <call pos:start="2673:31" pos:end="2673:55"><name pos:start="2673:31" pos:end="2673:39">lock_user</name><argument_list pos:start="2673:40" pos:end="2673:55">(<argument pos:start="2673:41" pos:end="2673:44"><expr pos:start="2673:41" pos:end="2673:44"><name pos:start="2673:41" pos:end="2673:44">arg2</name></expr></argument>, <argument pos:start="2673:47" pos:end="2673:51"><expr pos:start="2673:47" pos:end="2673:51"><name pos:start="2673:47" pos:end="2673:51">count</name></expr></argument>, <argument pos:start="2673:54" pos:end="2673:54"><expr pos:start="2673:54" pos:end="2673:54"><literal type="number" pos:start="2673:54" pos:end="2673:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="2675:17" pos:end="2675:34"><expr pos:start="2675:17" pos:end="2675:33"><name pos:start="2675:17" pos:end="2675:19">tde</name> <operator pos:start="2675:21" pos:end="2675:21">=</operator> <name pos:start="2675:23" pos:end="2675:33">target_dirp</name></expr>;</expr_stmt>

                <while pos:start="2677:17" pos:end="2707:17">while <condition pos:start="2677:23" pos:end="2677:31">(<expr pos:start="2677:24" pos:end="2677:30"><name pos:start="2677:24" pos:end="2677:26">len</name> <operator pos:start="2677:28" pos:end="2677:28">&gt;</operator> <literal type="number" pos:start="2677:30" pos:end="2677:30">0</literal></expr>)</condition> <block pos:start="2677:33" pos:end="2707:17">{<block_content pos:start="2679:21" pos:end="2705:38">

                    <expr_stmt pos:start="2679:21" pos:end="2679:42"><expr pos:start="2679:21" pos:end="2679:41"><name pos:start="2679:21" pos:end="2679:26">reclen</name> <operator pos:start="2679:28" pos:end="2679:28">=</operator> <name pos:start="2679:30" pos:end="2679:41"><name pos:start="2679:30" pos:end="2679:31">de</name><operator pos:start="2679:32" pos:end="2679:33">-&gt;</operator><name pos:start="2679:34" pos:end="2679:41">d_reclen</name></name></expr>;</expr_stmt>

		    <expr_stmt pos:start="2681:21" pos:end="2681:82"><expr pos:start="2681:21" pos:end="2681:81"><name pos:start="2681:21" pos:end="2681:27">treclen</name> <operator pos:start="2681:29" pos:end="2681:29">=</operator> <name pos:start="2681:31" pos:end="2681:36">reclen</name> <operator pos:start="2681:38" pos:end="2681:38">-</operator> <operator pos:start="2681:40" pos:end="2681:40">(</operator><literal type="number" pos:start="2681:41" pos:end="2681:41">2</literal> <operator pos:start="2681:43" pos:end="2681:43">*</operator> <operator pos:start="2681:45" pos:end="2681:45">(</operator><sizeof pos:start="2681:46" pos:end="2681:57">sizeof<argument_list pos:start="2681:52" pos:end="2681:57">(<argument pos:start="2681:53" pos:end="2681:56"><expr pos:start="2681:53" pos:end="2681:56"><name pos:start="2681:53" pos:end="2681:56">long</name></expr></argument>)</argument_list></sizeof> <operator pos:start="2681:59" pos:end="2681:59">-</operator> <sizeof pos:start="2681:61" pos:end="2681:79">sizeof<argument_list pos:start="2681:67" pos:end="2681:79">(<argument pos:start="2681:68" pos:end="2681:78"><expr pos:start="2681:68" pos:end="2681:78"><name pos:start="2681:68" pos:end="2681:78">target_long</name></expr></argument>)</argument_list></sizeof><operator pos:start="2681:80" pos:end="2681:80">)</operator><operator pos:start="2681:81" pos:end="2681:81">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="2683:21" pos:end="2683:53"><expr pos:start="2683:21" pos:end="2683:52"><name pos:start="2683:21" pos:end="2683:33"><name pos:start="2683:21" pos:end="2683:23">tde</name><operator pos:start="2683:24" pos:end="2683:25">-&gt;</operator><name pos:start="2683:26" pos:end="2683:33">d_reclen</name></name> <operator pos:start="2683:35" pos:end="2683:35">=</operator> <call pos:start="2683:37" pos:end="2683:52"><name pos:start="2683:37" pos:end="2683:43">tswap16</name><argument_list pos:start="2683:44" pos:end="2683:52">(<argument pos:start="2683:45" pos:end="2683:51"><expr pos:start="2683:45" pos:end="2683:51"><name pos:start="2683:45" pos:end="2683:51">treclen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2685:21" pos:end="2685:51"><expr pos:start="2685:21" pos:end="2685:50"><name pos:start="2685:21" pos:end="2685:30"><name pos:start="2685:21" pos:end="2685:23">tde</name><operator pos:start="2685:24" pos:end="2685:25">-&gt;</operator><name pos:start="2685:26" pos:end="2685:30">d_ino</name></name> <operator pos:start="2685:32" pos:end="2685:32">=</operator> <call pos:start="2685:34" pos:end="2685:50"><name pos:start="2685:34" pos:end="2685:39">tswapl</name><argument_list pos:start="2685:40" pos:end="2685:50">(<argument pos:start="2685:41" pos:end="2685:49"><expr pos:start="2685:41" pos:end="2685:49"><name pos:start="2685:41" pos:end="2685:49"><name pos:start="2685:41" pos:end="2685:42">de</name><operator pos:start="2685:43" pos:end="2685:44">-&gt;</operator><name pos:start="2685:45" pos:end="2685:49">d_ino</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2687:21" pos:end="2687:51"><expr pos:start="2687:21" pos:end="2687:50"><name pos:start="2687:21" pos:end="2687:30"><name pos:start="2687:21" pos:end="2687:23">tde</name><operator pos:start="2687:24" pos:end="2687:25">-&gt;</operator><name pos:start="2687:26" pos:end="2687:30">d_off</name></name> <operator pos:start="2687:32" pos:end="2687:32">=</operator> <call pos:start="2687:34" pos:end="2687:50"><name pos:start="2687:34" pos:end="2687:39">tswapl</name><argument_list pos:start="2687:40" pos:end="2687:50">(<argument pos:start="2687:41" pos:end="2687:49"><expr pos:start="2687:41" pos:end="2687:49"><name pos:start="2687:41" pos:end="2687:49"><name pos:start="2687:41" pos:end="2687:42">de</name><operator pos:start="2687:43" pos:end="2687:44">-&gt;</operator><name pos:start="2687:45" pos:end="2687:49">d_off</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="2689:21" pos:end="2689:71"><expr pos:start="2689:21" pos:end="2689:70"><name pos:start="2689:21" pos:end="2689:28">tnamelen</name> <operator pos:start="2689:30" pos:end="2689:30">=</operator> <name pos:start="2689:32" pos:end="2689:38">treclen</name> <operator pos:start="2689:40" pos:end="2689:40">-</operator> <operator pos:start="2689:42" pos:end="2689:42">(</operator><literal type="number" pos:start="2689:43" pos:end="2689:43">2</literal> <operator pos:start="2689:45" pos:end="2689:45">*</operator> <sizeof pos:start="2689:47" pos:end="2689:65">sizeof<argument_list pos:start="2689:53" pos:end="2689:65">(<argument pos:start="2689:54" pos:end="2689:64"><expr pos:start="2689:54" pos:end="2689:64"><name pos:start="2689:54" pos:end="2689:64">target_long</name></expr></argument>)</argument_list></sizeof> <operator pos:start="2689:67" pos:end="2689:67">+</operator> <literal type="number" pos:start="2689:69" pos:end="2689:69">2</literal><operator pos:start="2689:70" pos:end="2689:70">)</operator></expr>;</expr_stmt>

		    <if_stmt pos:start="2691:21" pos:end="2693:39"><if pos:start="2691:21" pos:end="2693:39">if <condition pos:start="2691:24" pos:end="2691:39">(<expr pos:start="2691:25" pos:end="2691:38"><name pos:start="2691:25" pos:end="2691:32">tnamelen</name> <operator pos:start="2691:34" pos:end="2691:34">&gt;</operator> <literal type="number" pos:start="2691:36" pos:end="2691:38">256</literal></expr>)</condition><block type="pseudo" pos:start="2693:25" pos:end="2693:39"><block_content pos:start="2693:25" pos:end="2693:39">

                        <expr_stmt pos:start="2693:25" pos:end="2693:39"><expr pos:start="2693:25" pos:end="2693:38"><name pos:start="2693:25" pos:end="2693:32">tnamelen</name> <operator pos:start="2693:34" pos:end="2693:34">=</operator> <literal type="number" pos:start="2693:36" pos:end="2693:38">256</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <comment type="block" pos:start="2695:21" pos:end="2695:49">/* XXX: may not be correct */</comment>

		    <expr_stmt pos:start="2697:21" pos:end="2697:63"><expr pos:start="2697:21" pos:end="2697:62"><call pos:start="2697:21" pos:end="2697:62"><name pos:start="2697:21" pos:end="2697:27">strncpy</name><argument_list pos:start="2697:28" pos:end="2697:62">(<argument pos:start="2697:29" pos:end="2697:39"><expr pos:start="2697:29" pos:end="2697:39"><name pos:start="2697:29" pos:end="2697:39"><name pos:start="2697:29" pos:end="2697:31">tde</name><operator pos:start="2697:32" pos:end="2697:33">-&gt;</operator><name pos:start="2697:34" pos:end="2697:39">d_name</name></name></expr></argument>, <argument pos:start="2697:42" pos:end="2697:51"><expr pos:start="2697:42" pos:end="2697:51"><name pos:start="2697:42" pos:end="2697:51"><name pos:start="2697:42" pos:end="2697:43">de</name><operator pos:start="2697:44" pos:end="2697:45">-&gt;</operator><name pos:start="2697:46" pos:end="2697:51">d_name</name></name></expr></argument>, <argument pos:start="2697:54" pos:end="2697:61"><expr pos:start="2697:54" pos:end="2697:61"><name pos:start="2697:54" pos:end="2697:61">tnamelen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2699:21" pos:end="2699:64"><expr pos:start="2699:21" pos:end="2699:63"><name pos:start="2699:21" pos:end="2699:22">de</name> <operator pos:start="2699:24" pos:end="2699:24">=</operator> <operator pos:start="2699:26" pos:end="2699:26">(</operator>struct <name pos:start="2699:34" pos:end="2699:39">dirent</name> <operator pos:start="2699:41" pos:end="2699:41">*</operator><operator pos:start="2699:42" pos:end="2699:42">)</operator><operator pos:start="2699:43" pos:end="2699:43">(</operator><operator pos:start="2699:44" pos:end="2699:44">(</operator><name pos:start="2699:45" pos:end="2699:48">char</name> <operator pos:start="2699:50" pos:end="2699:50">*</operator><operator pos:start="2699:51" pos:end="2699:51">)</operator><name pos:start="2699:52" pos:end="2699:53">de</name> <operator pos:start="2699:55" pos:end="2699:55">+</operator> <name pos:start="2699:57" pos:end="2699:62">reclen</name><operator pos:start="2699:63" pos:end="2699:63">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="2701:21" pos:end="2701:34"><expr pos:start="2701:21" pos:end="2701:33"><name pos:start="2701:21" pos:end="2701:23">len</name> <operator pos:start="2701:25" pos:end="2701:26">-=</operator> <name pos:start="2701:28" pos:end="2701:33">reclen</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="2703:21" pos:end="2703:74"><expr pos:start="2703:21" pos:end="2703:73"><name pos:start="2703:21" pos:end="2703:23">tde</name> <operator pos:start="2703:25" pos:end="2703:25">=</operator> <operator pos:start="2703:27" pos:end="2703:27">(</operator>struct <name pos:start="2703:35" pos:end="2703:47">target_dirent</name> <operator pos:start="2703:49" pos:end="2703:49">*</operator><operator pos:start="2703:50" pos:end="2703:50">)</operator><operator pos:start="2703:51" pos:end="2703:51">(</operator><operator pos:start="2703:52" pos:end="2703:52">(</operator><name pos:start="2703:53" pos:end="2703:56">char</name> <operator pos:start="2703:58" pos:end="2703:58">*</operator><operator pos:start="2703:59" pos:end="2703:59">)</operator><name pos:start="2703:60" pos:end="2703:62">tde</name> <operator pos:start="2703:64" pos:end="2703:64">+</operator> <name pos:start="2703:66" pos:end="2703:72">treclen</name><operator pos:start="2703:73" pos:end="2703:73">)</operator></expr>;</expr_stmt>

		    <expr_stmt pos:start="2705:21" pos:end="2705:38"><expr pos:start="2705:21" pos:end="2705:37"><name pos:start="2705:21" pos:end="2705:26">count1</name> <operator pos:start="2705:28" pos:end="2705:29">+=</operator> <name pos:start="2705:31" pos:end="2705:37">treclen</name></expr>;</expr_stmt>

                </block_content>}</block></while>

		<expr_stmt pos:start="2709:17" pos:end="2709:29"><expr pos:start="2709:17" pos:end="2709:28"><name pos:start="2709:17" pos:end="2709:19">ret</name> <operator pos:start="2709:21" pos:end="2709:21">=</operator> <name pos:start="2709:23" pos:end="2709:28">count1</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="2713:13" pos:end="2713:48"><expr pos:start="2713:13" pos:end="2713:47"><call pos:start="2713:13" pos:end="2713:47"><name pos:start="2713:13" pos:end="2713:23">unlock_user</name><argument_list pos:start="2713:24" pos:end="2713:47">(<argument pos:start="2713:25" pos:end="2713:35"><expr pos:start="2713:25" pos:end="2713:35"><name pos:start="2713:25" pos:end="2713:35">target_dirp</name></expr></argument>, <argument pos:start="2713:38" pos:end="2713:41"><expr pos:start="2713:38" pos:end="2713:41"><name pos:start="2713:38" pos:end="2713:41">arg2</name></expr></argument>, <argument pos:start="2713:44" pos:end="2713:46"><expr pos:start="2713:44" pos:end="2713:46"><name pos:start="2713:44" pos:end="2713:46">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="2715:13" pos:end="2715:23"><expr pos:start="2715:13" pos:end="2715:22"><call pos:start="2715:13" pos:end="2715:22"><name pos:start="2715:13" pos:end="2715:16">free</name><argument_list pos:start="2715:17" pos:end="2715:22">(<argument pos:start="2715:18" pos:end="2715:21"><expr pos:start="2715:18" pos:end="2715:21"><name pos:start="2715:18" pos:end="2715:21">dirp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

<cpp:else pos:start="2719:1" pos:end="2719:5">#<cpp:directive pos:start="2719:2" pos:end="2719:5">else</cpp:directive></cpp:else>

        <block pos:start="2721:9" pos:end="2770:0">{<block_content pos:start="2723:13" pos:end="2765:41">

            <decl_stmt pos:start="2723:13" pos:end="2723:32"><decl pos:start="2723:13" pos:end="2723:31"><type pos:start="2723:13" pos:end="2723:27"><name pos:start="2723:13" pos:end="2723:25"><name pos:start="2723:13" pos:end="2723:18">struct</name> <name pos:start="2723:20" pos:end="2723:25">dirent</name></name> <modifier pos:start="2723:27" pos:end="2723:27">*</modifier></type><name pos:start="2723:28" pos:end="2723:31">dirp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="2725:13" pos:end="2725:30"><decl pos:start="2725:13" pos:end="2725:29"><type pos:start="2725:13" pos:end="2725:16"><name pos:start="2725:13" pos:end="2725:16">long</name></type> <name pos:start="2725:18" pos:end="2725:22">count</name> <init pos:start="2725:24" pos:end="2725:29">= <expr pos:start="2725:26" pos:end="2725:29"><name pos:start="2725:26" pos:end="2725:29">arg3</name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="2729:13" pos:end="2729:45"><expr pos:start="2729:13" pos:end="2729:44"><name pos:start="2729:13" pos:end="2729:16">dirp</name> <operator pos:start="2729:18" pos:end="2729:18">=</operator> <call pos:start="2729:20" pos:end="2729:44"><name pos:start="2729:20" pos:end="2729:28">lock_user</name><argument_list pos:start="2729:29" pos:end="2729:44">(<argument pos:start="2729:30" pos:end="2729:33"><expr pos:start="2729:30" pos:end="2729:33"><name pos:start="2729:30" pos:end="2729:33">arg2</name></expr></argument>, <argument pos:start="2729:36" pos:end="2729:40"><expr pos:start="2729:36" pos:end="2729:40"><name pos:start="2729:36" pos:end="2729:40">count</name></expr></argument>, <argument pos:start="2729:43" pos:end="2729:43"><expr pos:start="2729:43" pos:end="2729:43"><literal type="number" pos:start="2729:43" pos:end="2729:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2731:13" pos:end="2731:61"><expr pos:start="2731:13" pos:end="2731:60"><name pos:start="2731:13" pos:end="2731:15">ret</name> <operator pos:start="2731:17" pos:end="2731:17">=</operator> <call pos:start="2731:19" pos:end="2731:60"><name pos:start="2731:19" pos:end="2731:27">get_errno</name><argument_list pos:start="2731:28" pos:end="2731:60">(<argument pos:start="2731:29" pos:end="2731:59"><expr pos:start="2731:29" pos:end="2731:59"><call pos:start="2731:29" pos:end="2731:59"><name pos:start="2731:29" pos:end="2731:40">sys_getdents</name><argument_list pos:start="2731:41" pos:end="2731:59">(<argument pos:start="2731:42" pos:end="2731:45"><expr pos:start="2731:42" pos:end="2731:45"><name pos:start="2731:42" pos:end="2731:45">arg1</name></expr></argument>, <argument pos:start="2731:48" pos:end="2731:51"><expr pos:start="2731:48" pos:end="2731:51"><name pos:start="2731:48" pos:end="2731:51">dirp</name></expr></argument>, <argument pos:start="2731:54" pos:end="2731:58"><expr pos:start="2731:54" pos:end="2731:58"><name pos:start="2731:54" pos:end="2731:58">count</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2733:13" pos:end="2763:13"><if pos:start="2733:13" pos:end="2763:13">if <condition pos:start="2733:16" pos:end="2733:31">(<expr pos:start="2733:17" pos:end="2733:30"><operator pos:start="2733:17" pos:end="2733:17">!</operator><call pos:start="2733:18" pos:end="2733:30"><name pos:start="2733:18" pos:end="2733:25">is_error</name><argument_list pos:start="2733:26" pos:end="2733:30">(<argument pos:start="2733:27" pos:end="2733:29"><expr pos:start="2733:27" pos:end="2733:29"><name pos:start="2733:27" pos:end="2733:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2733:33" pos:end="2763:13">{<block_content pos:start="2735:17" pos:end="2761:17">

                <decl_stmt pos:start="2735:17" pos:end="2735:34"><decl pos:start="2735:17" pos:end="2735:33"><type pos:start="2735:17" pos:end="2735:31"><name pos:start="2735:17" pos:end="2735:29"><name pos:start="2735:17" pos:end="2735:22">struct</name> <name pos:start="2735:24" pos:end="2735:29">dirent</name></name> <modifier pos:start="2735:31" pos:end="2735:31">*</modifier></type><name pos:start="2735:32" pos:end="2735:33">de</name></decl>;</decl_stmt>

                <decl_stmt pos:start="2737:17" pos:end="2737:30"><decl pos:start="2737:17" pos:end="2737:29"><type pos:start="2737:17" pos:end="2737:19"><name pos:start="2737:17" pos:end="2737:19">int</name></type> <name pos:start="2737:21" pos:end="2737:23">len</name> <init pos:start="2737:25" pos:end="2737:29">= <expr pos:start="2737:27" pos:end="2737:29"><name pos:start="2737:27" pos:end="2737:29">ret</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="2739:17" pos:end="2739:27"><decl pos:start="2739:17" pos:end="2739:26"><type pos:start="2739:17" pos:end="2739:19"><name pos:start="2739:17" pos:end="2739:19">int</name></type> <name pos:start="2739:21" pos:end="2739:26">reclen</name></decl>;</decl_stmt>

                <expr_stmt pos:start="2741:17" pos:end="2741:26"><expr pos:start="2741:17" pos:end="2741:25"><name pos:start="2741:17" pos:end="2741:18">de</name> <operator pos:start="2741:20" pos:end="2741:20">=</operator> <name pos:start="2741:22" pos:end="2741:25">dirp</name></expr>;</expr_stmt>

                <while pos:start="2743:17" pos:end="2761:17">while <condition pos:start="2743:23" pos:end="2743:31">(<expr pos:start="2743:24" pos:end="2743:30"><name pos:start="2743:24" pos:end="2743:26">len</name> <operator pos:start="2743:28" pos:end="2743:28">&gt;</operator> <literal type="number" pos:start="2743:30" pos:end="2743:30">0</literal></expr>)</condition> <block pos:start="2743:33" pos:end="2761:17">{<block_content pos:start="2745:21" pos:end="2759:34">

                    <expr_stmt pos:start="2745:21" pos:end="2745:42"><expr pos:start="2745:21" pos:end="2745:41"><name pos:start="2745:21" pos:end="2745:26">reclen</name> <operator pos:start="2745:28" pos:end="2745:28">=</operator> <name pos:start="2745:30" pos:end="2745:41"><name pos:start="2745:30" pos:end="2745:31">de</name><operator pos:start="2745:32" pos:end="2745:33">-&gt;</operator><name pos:start="2745:34" pos:end="2745:41">d_reclen</name></name></expr>;</expr_stmt>

                    <if_stmt pos:start="2747:21" pos:end="2749:30"><if pos:start="2747:21" pos:end="2749:30">if <condition pos:start="2747:24" pos:end="2747:37">(<expr pos:start="2747:25" pos:end="2747:36"><name pos:start="2747:25" pos:end="2747:30">reclen</name> <operator pos:start="2747:32" pos:end="2747:32">&gt;</operator> <name pos:start="2747:34" pos:end="2747:36">len</name></expr>)</condition><block type="pseudo" pos:start="2749:25" pos:end="2749:30"><block_content pos:start="2749:25" pos:end="2749:30">

                        <break pos:start="2749:25" pos:end="2749:30">break;</break></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="2751:21" pos:end="2751:51"><expr pos:start="2751:21" pos:end="2751:50"><name pos:start="2751:21" pos:end="2751:32"><name pos:start="2751:21" pos:end="2751:22">de</name><operator pos:start="2751:23" pos:end="2751:24">-&gt;</operator><name pos:start="2751:25" pos:end="2751:32">d_reclen</name></name> <operator pos:start="2751:34" pos:end="2751:34">=</operator> <call pos:start="2751:36" pos:end="2751:50"><name pos:start="2751:36" pos:end="2751:42">tswap16</name><argument_list pos:start="2751:43" pos:end="2751:50">(<argument pos:start="2751:44" pos:end="2751:49"><expr pos:start="2751:44" pos:end="2751:49"><name pos:start="2751:44" pos:end="2751:49">reclen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2753:21" pos:end="2753:40"><expr pos:start="2753:21" pos:end="2753:39"><call pos:start="2753:21" pos:end="2753:39"><name pos:start="2753:21" pos:end="2753:27">tswapls</name><argument_list pos:start="2753:28" pos:end="2753:39">(<argument pos:start="2753:29" pos:end="2753:38"><expr pos:start="2753:29" pos:end="2753:38"><operator pos:start="2753:29" pos:end="2753:29">&amp;</operator><name pos:start="2753:30" pos:end="2753:38"><name pos:start="2753:30" pos:end="2753:31">de</name><operator pos:start="2753:32" pos:end="2753:33">-&gt;</operator><name pos:start="2753:34" pos:end="2753:38">d_ino</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2755:21" pos:end="2755:40"><expr pos:start="2755:21" pos:end="2755:39"><call pos:start="2755:21" pos:end="2755:39"><name pos:start="2755:21" pos:end="2755:27">tswapls</name><argument_list pos:start="2755:28" pos:end="2755:39">(<argument pos:start="2755:29" pos:end="2755:38"><expr pos:start="2755:29" pos:end="2755:38"><operator pos:start="2755:29" pos:end="2755:29">&amp;</operator><name pos:start="2755:30" pos:end="2755:38"><name pos:start="2755:30" pos:end="2755:31">de</name><operator pos:start="2755:32" pos:end="2755:33">-&gt;</operator><name pos:start="2755:34" pos:end="2755:38">d_off</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2757:21" pos:end="2757:64"><expr pos:start="2757:21" pos:end="2757:63"><name pos:start="2757:21" pos:end="2757:22">de</name> <operator pos:start="2757:24" pos:end="2757:24">=</operator> <operator pos:start="2757:26" pos:end="2757:26">(</operator>struct <name pos:start="2757:34" pos:end="2757:39">dirent</name> <operator pos:start="2757:41" pos:end="2757:41">*</operator><operator pos:start="2757:42" pos:end="2757:42">)</operator><operator pos:start="2757:43" pos:end="2757:43">(</operator><operator pos:start="2757:44" pos:end="2757:44">(</operator><name pos:start="2757:45" pos:end="2757:48">char</name> <operator pos:start="2757:50" pos:end="2757:50">*</operator><operator pos:start="2757:51" pos:end="2757:51">)</operator><name pos:start="2757:52" pos:end="2757:53">de</name> <operator pos:start="2757:55" pos:end="2757:55">+</operator> <name pos:start="2757:57" pos:end="2757:62">reclen</name><operator pos:start="2757:63" pos:end="2757:63">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="2759:21" pos:end="2759:34"><expr pos:start="2759:21" pos:end="2759:33"><name pos:start="2759:21" pos:end="2759:23">len</name> <operator pos:start="2759:25" pos:end="2759:26">-=</operator> <name pos:start="2759:28" pos:end="2759:33">reclen</name></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="2765:13" pos:end="2765:41"><expr pos:start="2765:13" pos:end="2765:40"><call pos:start="2765:13" pos:end="2765:40"><name pos:start="2765:13" pos:end="2765:23">unlock_user</name><argument_list pos:start="2765:24" pos:end="2765:40">(<argument pos:start="2765:25" pos:end="2765:28"><expr pos:start="2765:25" pos:end="2765:28"><name pos:start="2765:25" pos:end="2765:28">dirp</name></expr></argument>, <argument pos:start="2765:31" pos:end="2765:34"><expr pos:start="2765:31" pos:end="2765:34"><name pos:start="2765:31" pos:end="2765:34">arg2</name></expr></argument>, <argument pos:start="2765:37" pos:end="2765:39"><expr pos:start="2765:37" pos:end="2765:39"><name pos:start="2765:37" pos:end="2765:39">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

<cpp:endif pos:start="2769:1" pos:end="2769:6">#<cpp:directive pos:start="2769:2" pos:end="2769:6">endif</cpp:directive></cpp:endif>

        <break pos:start="2771:9" pos:end="2774:0">break;</break>

<cpp:ifdef pos:start="2773:1" pos:end="2773:27">#<cpp:directive pos:start="2773:2" pos:end="2773:6">ifdef</cpp:directive> <name pos:start="2773:8" pos:end="2773:27">TARGET_NR_getdents64</name></cpp:ifdef>

    <case pos:start="2775:5" pos:end="2775:30">case <expr pos:start="2775:10" pos:end="2775:29"><name pos:start="2775:10" pos:end="2775:29">TARGET_NR_getdents64</name></expr>:</case>

        <block pos:start="2777:9" pos:end="2821:9">{<block_content pos:start="2779:13" pos:end="2819:41">

            <decl_stmt pos:start="2779:13" pos:end="2779:34"><decl pos:start="2779:13" pos:end="2779:33"><type pos:start="2779:13" pos:end="2779:29"><name pos:start="2779:13" pos:end="2779:27"><name pos:start="2779:13" pos:end="2779:18">struct</name> <name pos:start="2779:20" pos:end="2779:27">dirent64</name></name> <modifier pos:start="2779:29" pos:end="2779:29">*</modifier></type><name pos:start="2779:30" pos:end="2779:33">dirp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="2781:13" pos:end="2781:30"><decl pos:start="2781:13" pos:end="2781:29"><type pos:start="2781:13" pos:end="2781:16"><name pos:start="2781:13" pos:end="2781:16">long</name></type> <name pos:start="2781:18" pos:end="2781:22">count</name> <init pos:start="2781:24" pos:end="2781:29">= <expr pos:start="2781:26" pos:end="2781:29"><name pos:start="2781:26" pos:end="2781:29">arg3</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="2783:13" pos:end="2783:45"><expr pos:start="2783:13" pos:end="2783:44"><name pos:start="2783:13" pos:end="2783:16">dirp</name> <operator pos:start="2783:18" pos:end="2783:18">=</operator> <call pos:start="2783:20" pos:end="2783:44"><name pos:start="2783:20" pos:end="2783:28">lock_user</name><argument_list pos:start="2783:29" pos:end="2783:44">(<argument pos:start="2783:30" pos:end="2783:33"><expr pos:start="2783:30" pos:end="2783:33"><name pos:start="2783:30" pos:end="2783:33">arg2</name></expr></argument>, <argument pos:start="2783:36" pos:end="2783:40"><expr pos:start="2783:36" pos:end="2783:40"><name pos:start="2783:36" pos:end="2783:40">count</name></expr></argument>, <argument pos:start="2783:43" pos:end="2783:43"><expr pos:start="2783:43" pos:end="2783:43"><literal type="number" pos:start="2783:43" pos:end="2783:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2785:13" pos:end="2785:63"><expr pos:start="2785:13" pos:end="2785:62"><name pos:start="2785:13" pos:end="2785:15">ret</name> <operator pos:start="2785:17" pos:end="2785:17">=</operator> <call pos:start="2785:19" pos:end="2785:62"><name pos:start="2785:19" pos:end="2785:27">get_errno</name><argument_list pos:start="2785:28" pos:end="2785:62">(<argument pos:start="2785:29" pos:end="2785:61"><expr pos:start="2785:29" pos:end="2785:61"><call pos:start="2785:29" pos:end="2785:61"><name pos:start="2785:29" pos:end="2785:42">sys_getdents64</name><argument_list pos:start="2785:43" pos:end="2785:61">(<argument pos:start="2785:44" pos:end="2785:47"><expr pos:start="2785:44" pos:end="2785:47"><name pos:start="2785:44" pos:end="2785:47">arg1</name></expr></argument>, <argument pos:start="2785:50" pos:end="2785:53"><expr pos:start="2785:50" pos:end="2785:53"><name pos:start="2785:50" pos:end="2785:53">dirp</name></expr></argument>, <argument pos:start="2785:56" pos:end="2785:60"><expr pos:start="2785:56" pos:end="2785:60"><name pos:start="2785:56" pos:end="2785:60">count</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2787:13" pos:end="2817:13"><if pos:start="2787:13" pos:end="2817:13">if <condition pos:start="2787:16" pos:end="2787:31">(<expr pos:start="2787:17" pos:end="2787:30"><operator pos:start="2787:17" pos:end="2787:17">!</operator><call pos:start="2787:18" pos:end="2787:30"><name pos:start="2787:18" pos:end="2787:25">is_error</name><argument_list pos:start="2787:26" pos:end="2787:30">(<argument pos:start="2787:27" pos:end="2787:29"><expr pos:start="2787:27" pos:end="2787:29"><name pos:start="2787:27" pos:end="2787:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2787:33" pos:end="2817:13">{<block_content pos:start="2789:17" pos:end="2815:17">

                <decl_stmt pos:start="2789:17" pos:end="2789:36"><decl pos:start="2789:17" pos:end="2789:35"><type pos:start="2789:17" pos:end="2789:33"><name pos:start="2789:17" pos:end="2789:31"><name pos:start="2789:17" pos:end="2789:22">struct</name> <name pos:start="2789:24" pos:end="2789:31">dirent64</name></name> <modifier pos:start="2789:33" pos:end="2789:33">*</modifier></type><name pos:start="2789:34" pos:end="2789:35">de</name></decl>;</decl_stmt>

                <decl_stmt pos:start="2791:17" pos:end="2791:30"><decl pos:start="2791:17" pos:end="2791:29"><type pos:start="2791:17" pos:end="2791:19"><name pos:start="2791:17" pos:end="2791:19">int</name></type> <name pos:start="2791:21" pos:end="2791:23">len</name> <init pos:start="2791:25" pos:end="2791:29">= <expr pos:start="2791:27" pos:end="2791:29"><name pos:start="2791:27" pos:end="2791:29">ret</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="2793:17" pos:end="2793:27"><decl pos:start="2793:17" pos:end="2793:26"><type pos:start="2793:17" pos:end="2793:19"><name pos:start="2793:17" pos:end="2793:19">int</name></type> <name pos:start="2793:21" pos:end="2793:26">reclen</name></decl>;</decl_stmt>

                <expr_stmt pos:start="2795:17" pos:end="2795:26"><expr pos:start="2795:17" pos:end="2795:25"><name pos:start="2795:17" pos:end="2795:18">de</name> <operator pos:start="2795:20" pos:end="2795:20">=</operator> <name pos:start="2795:22" pos:end="2795:25">dirp</name></expr>;</expr_stmt>

                <while pos:start="2797:17" pos:end="2815:17">while <condition pos:start="2797:23" pos:end="2797:31">(<expr pos:start="2797:24" pos:end="2797:30"><name pos:start="2797:24" pos:end="2797:26">len</name> <operator pos:start="2797:28" pos:end="2797:28">&gt;</operator> <literal type="number" pos:start="2797:30" pos:end="2797:30">0</literal></expr>)</condition> <block pos:start="2797:33" pos:end="2815:17">{<block_content pos:start="2799:21" pos:end="2813:34">

                    <expr_stmt pos:start="2799:21" pos:end="2799:42"><expr pos:start="2799:21" pos:end="2799:41"><name pos:start="2799:21" pos:end="2799:26">reclen</name> <operator pos:start="2799:28" pos:end="2799:28">=</operator> <name pos:start="2799:30" pos:end="2799:41"><name pos:start="2799:30" pos:end="2799:31">de</name><operator pos:start="2799:32" pos:end="2799:33">-&gt;</operator><name pos:start="2799:34" pos:end="2799:41">d_reclen</name></name></expr>;</expr_stmt>

                    <if_stmt pos:start="2801:21" pos:end="2803:30"><if pos:start="2801:21" pos:end="2803:30">if <condition pos:start="2801:24" pos:end="2801:37">(<expr pos:start="2801:25" pos:end="2801:36"><name pos:start="2801:25" pos:end="2801:30">reclen</name> <operator pos:start="2801:32" pos:end="2801:32">&gt;</operator> <name pos:start="2801:34" pos:end="2801:36">len</name></expr>)</condition><block type="pseudo" pos:start="2803:25" pos:end="2803:30"><block_content pos:start="2803:25" pos:end="2803:30">

                        <break pos:start="2803:25" pos:end="2803:30">break;</break></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="2805:21" pos:end="2805:51"><expr pos:start="2805:21" pos:end="2805:50"><name pos:start="2805:21" pos:end="2805:32"><name pos:start="2805:21" pos:end="2805:22">de</name><operator pos:start="2805:23" pos:end="2805:24">-&gt;</operator><name pos:start="2805:25" pos:end="2805:32">d_reclen</name></name> <operator pos:start="2805:34" pos:end="2805:34">=</operator> <call pos:start="2805:36" pos:end="2805:50"><name pos:start="2805:36" pos:end="2805:42">tswap16</name><argument_list pos:start="2805:43" pos:end="2805:50">(<argument pos:start="2805:44" pos:end="2805:49"><expr pos:start="2805:44" pos:end="2805:49"><name pos:start="2805:44" pos:end="2805:49">reclen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2807:21" pos:end="2807:41"><expr pos:start="2807:21" pos:end="2807:40"><call pos:start="2807:21" pos:end="2807:40"><name pos:start="2807:21" pos:end="2807:28">tswap64s</name><argument_list pos:start="2807:29" pos:end="2807:40">(<argument pos:start="2807:30" pos:end="2807:39"><expr pos:start="2807:30" pos:end="2807:39"><operator pos:start="2807:30" pos:end="2807:30">&amp;</operator><name pos:start="2807:31" pos:end="2807:39"><name pos:start="2807:31" pos:end="2807:32">de</name><operator pos:start="2807:33" pos:end="2807:34">-&gt;</operator><name pos:start="2807:35" pos:end="2807:39">d_ino</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2809:21" pos:end="2809:41"><expr pos:start="2809:21" pos:end="2809:40"><call pos:start="2809:21" pos:end="2809:40"><name pos:start="2809:21" pos:end="2809:28">tswap64s</name><argument_list pos:start="2809:29" pos:end="2809:40">(<argument pos:start="2809:30" pos:end="2809:39"><expr pos:start="2809:30" pos:end="2809:39"><operator pos:start="2809:30" pos:end="2809:30">&amp;</operator><name pos:start="2809:31" pos:end="2809:39"><name pos:start="2809:31" pos:end="2809:32">de</name><operator pos:start="2809:33" pos:end="2809:34">-&gt;</operator><name pos:start="2809:35" pos:end="2809:39">d_off</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2811:21" pos:end="2811:66"><expr pos:start="2811:21" pos:end="2811:65"><name pos:start="2811:21" pos:end="2811:22">de</name> <operator pos:start="2811:24" pos:end="2811:24">=</operator> <operator pos:start="2811:26" pos:end="2811:26">(</operator>struct <name pos:start="2811:34" pos:end="2811:41">dirent64</name> <operator pos:start="2811:43" pos:end="2811:43">*</operator><operator pos:start="2811:44" pos:end="2811:44">)</operator><operator pos:start="2811:45" pos:end="2811:45">(</operator><operator pos:start="2811:46" pos:end="2811:46">(</operator><name pos:start="2811:47" pos:end="2811:50">char</name> <operator pos:start="2811:52" pos:end="2811:52">*</operator><operator pos:start="2811:53" pos:end="2811:53">)</operator><name pos:start="2811:54" pos:end="2811:55">de</name> <operator pos:start="2811:57" pos:end="2811:57">+</operator> <name pos:start="2811:59" pos:end="2811:64">reclen</name><operator pos:start="2811:65" pos:end="2811:65">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="2813:21" pos:end="2813:34"><expr pos:start="2813:21" pos:end="2813:33"><name pos:start="2813:21" pos:end="2813:23">len</name> <operator pos:start="2813:25" pos:end="2813:26">-=</operator> <name pos:start="2813:28" pos:end="2813:33">reclen</name></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="2819:13" pos:end="2819:41"><expr pos:start="2819:13" pos:end="2819:40"><call pos:start="2819:13" pos:end="2819:40"><name pos:start="2819:13" pos:end="2819:23">unlock_user</name><argument_list pos:start="2819:24" pos:end="2819:40">(<argument pos:start="2819:25" pos:end="2819:28"><expr pos:start="2819:25" pos:end="2819:28"><name pos:start="2819:25" pos:end="2819:28">dirp</name></expr></argument>, <argument pos:start="2819:31" pos:end="2819:34"><expr pos:start="2819:31" pos:end="2819:34"><name pos:start="2819:31" pos:end="2819:34">arg2</name></expr></argument>, <argument pos:start="2819:37" pos:end="2819:39"><expr pos:start="2819:37" pos:end="2819:39"><name pos:start="2819:37" pos:end="2819:39">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="2823:9" pos:end="2828:0">break;</break>

<cpp:endif pos:start="2825:1" pos:end="2825:6">#<cpp:directive pos:start="2825:2" pos:end="2825:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="2825:8" pos:end="2825:33">/* TARGET_NR_getdents64 */</comment>

<cpp:ifdef pos:start="2827:1" pos:end="2827:27">#<cpp:directive pos:start="2827:2" pos:end="2827:6">ifdef</cpp:directive> <name pos:start="2827:8" pos:end="2827:27">TARGET_NR__newselect</name></cpp:ifdef>

    <case pos:start="2829:5" pos:end="2829:30">case <expr pos:start="2829:10" pos:end="2829:29"><name pos:start="2829:10" pos:end="2829:29">TARGET_NR__newselect</name></expr>:</case>

        <expr_stmt pos:start="2831:9" pos:end="2831:54"><expr pos:start="2831:9" pos:end="2831:53"><name pos:start="2831:9" pos:end="2831:11">ret</name> <operator pos:start="2831:13" pos:end="2831:13">=</operator> <call pos:start="2831:15" pos:end="2831:53"><name pos:start="2831:15" pos:end="2831:23">do_select</name><argument_list pos:start="2831:24" pos:end="2831:53">(<argument pos:start="2831:25" pos:end="2831:28"><expr pos:start="2831:25" pos:end="2831:28"><name pos:start="2831:25" pos:end="2831:28">arg1</name></expr></argument>, <argument pos:start="2831:31" pos:end="2831:34"><expr pos:start="2831:31" pos:end="2831:34"><name pos:start="2831:31" pos:end="2831:34">arg2</name></expr></argument>, <argument pos:start="2831:37" pos:end="2831:40"><expr pos:start="2831:37" pos:end="2831:40"><name pos:start="2831:37" pos:end="2831:40">arg3</name></expr></argument>, <argument pos:start="2831:43" pos:end="2831:46"><expr pos:start="2831:43" pos:end="2831:46"><name pos:start="2831:43" pos:end="2831:46">arg4</name></expr></argument>, <argument pos:start="2831:49" pos:end="2831:52"><expr pos:start="2831:49" pos:end="2831:52"><name pos:start="2831:49" pos:end="2831:52">arg5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2833:9" pos:end="2838:0">break;</break>

<cpp:endif pos:start="2835:1" pos:end="2835:6">#<cpp:directive pos:start="2835:2" pos:end="2835:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2837:1" pos:end="2837:21">#<cpp:directive pos:start="2837:2" pos:end="2837:6">ifdef</cpp:directive> <name pos:start="2837:8" pos:end="2837:21">TARGET_NR_poll</name></cpp:ifdef>

    <case pos:start="2839:5" pos:end="2839:24">case <expr pos:start="2839:10" pos:end="2839:23"><name pos:start="2839:10" pos:end="2839:23">TARGET_NR_poll</name></expr>:</case>

        <block pos:start="2841:9" pos:end="2885:9">{<block_content pos:start="2843:13" pos:end="2883:47">

            <decl_stmt pos:start="2843:13" pos:end="2843:45"><decl pos:start="2843:13" pos:end="2843:44"><type pos:start="2843:13" pos:end="2843:34"><name pos:start="2843:13" pos:end="2843:32"><name pos:start="2843:13" pos:end="2843:18">struct</name> <name pos:start="2843:20" pos:end="2843:32">target_pollfd</name></name> <modifier pos:start="2843:34" pos:end="2843:34">*</modifier></type><name pos:start="2843:35" pos:end="2843:44">target_pfd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="2845:13" pos:end="2845:37"><decl pos:start="2845:13" pos:end="2845:36"><type pos:start="2845:13" pos:end="2845:24"><name pos:start="2845:13" pos:end="2845:20">unsigned</name> <name pos:start="2845:22" pos:end="2845:24">int</name></type> <name pos:start="2845:26" pos:end="2845:29">nfds</name> <init pos:start="2845:31" pos:end="2845:36">= <expr pos:start="2845:33" pos:end="2845:36"><name pos:start="2845:33" pos:end="2845:36">arg2</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="2847:13" pos:end="2847:31"><decl pos:start="2847:13" pos:end="2847:30"><type pos:start="2847:13" pos:end="2847:15"><name pos:start="2847:13" pos:end="2847:15">int</name></type> <name pos:start="2847:17" pos:end="2847:23">timeout</name> <init pos:start="2847:25" pos:end="2847:30">= <expr pos:start="2847:27" pos:end="2847:30"><name pos:start="2847:27" pos:end="2847:30">arg3</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="2849:13" pos:end="2849:31"><decl pos:start="2849:13" pos:end="2849:30"><type pos:start="2849:13" pos:end="2849:27"><name pos:start="2849:13" pos:end="2849:25"><name pos:start="2849:13" pos:end="2849:18">struct</name> <name pos:start="2849:20" pos:end="2849:25">pollfd</name></name> <modifier pos:start="2849:27" pos:end="2849:27">*</modifier></type><name pos:start="2849:28" pos:end="2849:30">pfd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="2851:13" pos:end="2851:27"><decl pos:start="2851:13" pos:end="2851:26"><type pos:start="2851:13" pos:end="2851:24"><name pos:start="2851:13" pos:end="2851:20">unsigned</name> <name pos:start="2851:22" pos:end="2851:24">int</name></type> <name pos:start="2851:26" pos:end="2851:26">i</name></decl>;</decl_stmt>



            <expr_stmt pos:start="2855:13" pos:end="2855:81"><expr pos:start="2855:13" pos:end="2855:80"><name pos:start="2855:13" pos:end="2855:22">target_pfd</name> <operator pos:start="2855:24" pos:end="2855:24">=</operator> <call pos:start="2855:26" pos:end="2855:80"><name pos:start="2855:26" pos:end="2855:34">lock_user</name><argument_list pos:start="2855:35" pos:end="2855:80">(<argument pos:start="2855:36" pos:end="2855:39"><expr pos:start="2855:36" pos:end="2855:39"><name pos:start="2855:36" pos:end="2855:39">arg1</name></expr></argument>, <argument pos:start="2855:42" pos:end="2855:76"><expr pos:start="2855:42" pos:end="2855:76"><sizeof pos:start="2855:42" pos:end="2855:69">sizeof<argument_list pos:start="2855:48" pos:end="2855:69">(<argument pos:start="2855:49" pos:end="2855:68"><expr pos:start="2855:49" pos:end="2855:68">struct <name pos:start="2855:56" pos:end="2855:68">target_pollfd</name></expr></argument>)</argument_list></sizeof> <operator pos:start="2855:71" pos:end="2855:71">*</operator> <name pos:start="2855:73" pos:end="2855:76">nfds</name></expr></argument>, <argument pos:start="2855:79" pos:end="2855:79"><expr pos:start="2855:79" pos:end="2855:79"><literal type="number" pos:start="2855:79" pos:end="2855:79">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2857:13" pos:end="2857:55"><expr pos:start="2857:13" pos:end="2857:54"><name pos:start="2857:13" pos:end="2857:15">pfd</name> <operator pos:start="2857:17" pos:end="2857:17">=</operator> <call pos:start="2857:19" pos:end="2857:54"><name pos:start="2857:19" pos:end="2857:24">alloca</name><argument_list pos:start="2857:25" pos:end="2857:54">(<argument pos:start="2857:26" pos:end="2857:53"><expr pos:start="2857:26" pos:end="2857:53"><sizeof pos:start="2857:26" pos:end="2857:46">sizeof<argument_list pos:start="2857:32" pos:end="2857:46">(<argument pos:start="2857:33" pos:end="2857:45"><expr pos:start="2857:33" pos:end="2857:45">struct <name pos:start="2857:40" pos:end="2857:45">pollfd</name></expr></argument>)</argument_list></sizeof> <operator pos:start="2857:48" pos:end="2857:48">*</operator> <name pos:start="2857:50" pos:end="2857:53">nfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="2859:13" pos:end="2865:13">for<control pos:start="2859:16" pos:end="2859:37">(<init pos:start="2859:17" pos:end="2859:22"><expr pos:start="2859:17" pos:end="2859:21"><name pos:start="2859:17" pos:end="2859:17">i</name> <operator pos:start="2859:19" pos:end="2859:19">=</operator> <literal type="number" pos:start="2859:21" pos:end="2859:21">0</literal></expr>;</init> <condition pos:start="2859:24" pos:end="2859:32"><expr pos:start="2859:24" pos:end="2859:31"><name pos:start="2859:24" pos:end="2859:24">i</name> <operator pos:start="2859:26" pos:end="2859:26">&lt;</operator> <name pos:start="2859:28" pos:end="2859:31">nfds</name></expr>;</condition> <incr pos:start="2859:34" pos:end="2859:36"><expr pos:start="2859:34" pos:end="2859:36"><name pos:start="2859:34" pos:end="2859:34">i</name><operator pos:start="2859:35" pos:end="2859:36">++</operator></expr></incr>)</control> <block pos:start="2859:39" pos:end="2865:13">{<block_content pos:start="2861:17" pos:end="2863:62">

                <expr_stmt pos:start="2861:17" pos:end="2861:54"><expr pos:start="2861:17" pos:end="2861:53"><name pos:start="2861:17" pos:end="2861:22"><name pos:start="2861:17" pos:end="2861:19">pfd</name><index pos:start="2861:20" pos:end="2861:22">[<expr pos:start="2861:21" pos:end="2861:21"><name pos:start="2861:21" pos:end="2861:21">i</name></expr>]</index></name><operator pos:start="2861:23" pos:end="2861:23">.</operator><name pos:start="2861:24" pos:end="2861:25">fd</name> <operator pos:start="2861:27" pos:end="2861:27">=</operator> <call pos:start="2861:29" pos:end="2861:53"><name pos:start="2861:29" pos:end="2861:35">tswap32</name><argument_list pos:start="2861:36" pos:end="2861:53">(<argument pos:start="2861:37" pos:end="2861:52"><expr pos:start="2861:37" pos:end="2861:52"><name pos:start="2861:37" pos:end="2861:49"><name pos:start="2861:37" pos:end="2861:46">target_pfd</name><index pos:start="2861:47" pos:end="2861:49">[<expr pos:start="2861:48" pos:end="2861:48"><name pos:start="2861:48" pos:end="2861:48">i</name></expr>]</index></name><operator pos:start="2861:50" pos:end="2861:50">.</operator><name pos:start="2861:51" pos:end="2861:52">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2863:17" pos:end="2863:62"><expr pos:start="2863:17" pos:end="2863:61"><name pos:start="2863:17" pos:end="2863:22"><name pos:start="2863:17" pos:end="2863:19">pfd</name><index pos:start="2863:20" pos:end="2863:22">[<expr pos:start="2863:21" pos:end="2863:21"><name pos:start="2863:21" pos:end="2863:21">i</name></expr>]</index></name><operator pos:start="2863:23" pos:end="2863:23">.</operator><name pos:start="2863:24" pos:end="2863:29">events</name> <operator pos:start="2863:31" pos:end="2863:31">=</operator> <call pos:start="2863:33" pos:end="2863:61"><name pos:start="2863:33" pos:end="2863:39">tswap16</name><argument_list pos:start="2863:40" pos:end="2863:61">(<argument pos:start="2863:41" pos:end="2863:60"><expr pos:start="2863:41" pos:end="2863:60"><name pos:start="2863:41" pos:end="2863:53"><name pos:start="2863:41" pos:end="2863:50">target_pfd</name><index pos:start="2863:51" pos:end="2863:53">[<expr pos:start="2863:52" pos:end="2863:52"><name pos:start="2863:52" pos:end="2863:52">i</name></expr>]</index></name><operator pos:start="2863:54" pos:end="2863:54">.</operator><name pos:start="2863:55" pos:end="2863:60">events</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="2867:13" pos:end="2867:54"><expr pos:start="2867:13" pos:end="2867:53"><name pos:start="2867:13" pos:end="2867:15">ret</name> <operator pos:start="2867:17" pos:end="2867:17">=</operator> <call pos:start="2867:19" pos:end="2867:53"><name pos:start="2867:19" pos:end="2867:27">get_errno</name><argument_list pos:start="2867:28" pos:end="2867:53">(<argument pos:start="2867:29" pos:end="2867:52"><expr pos:start="2867:29" pos:end="2867:52"><call pos:start="2867:29" pos:end="2867:52"><name pos:start="2867:29" pos:end="2867:32">poll</name><argument_list pos:start="2867:33" pos:end="2867:52">(<argument pos:start="2867:34" pos:end="2867:36"><expr pos:start="2867:34" pos:end="2867:36"><name pos:start="2867:34" pos:end="2867:36">pfd</name></expr></argument>, <argument pos:start="2867:39" pos:end="2867:42"><expr pos:start="2867:39" pos:end="2867:42"><name pos:start="2867:39" pos:end="2867:42">nfds</name></expr></argument>, <argument pos:start="2867:45" pos:end="2867:51"><expr pos:start="2867:45" pos:end="2867:51"><name pos:start="2867:45" pos:end="2867:51">timeout</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2869:13" pos:end="2881:13"><if pos:start="2869:13" pos:end="2881:13">if <condition pos:start="2869:16" pos:end="2869:31">(<expr pos:start="2869:17" pos:end="2869:30"><operator pos:start="2869:17" pos:end="2869:17">!</operator><call pos:start="2869:18" pos:end="2869:30"><name pos:start="2869:18" pos:end="2869:25">is_error</name><argument_list pos:start="2869:26" pos:end="2869:30">(<argument pos:start="2869:27" pos:end="2869:29"><expr pos:start="2869:27" pos:end="2869:29"><name pos:start="2869:27" pos:end="2869:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2869:33" pos:end="2881:13">{<block_content pos:start="2871:17" pos:end="2879:56">

                <for pos:start="2871:17" pos:end="2875:17">for<control pos:start="2871:20" pos:end="2871:41">(<init pos:start="2871:21" pos:end="2871:26"><expr pos:start="2871:21" pos:end="2871:25"><name pos:start="2871:21" pos:end="2871:21">i</name> <operator pos:start="2871:23" pos:end="2871:23">=</operator> <literal type="number" pos:start="2871:25" pos:end="2871:25">0</literal></expr>;</init> <condition pos:start="2871:28" pos:end="2871:36"><expr pos:start="2871:28" pos:end="2871:35"><name pos:start="2871:28" pos:end="2871:28">i</name> <operator pos:start="2871:30" pos:end="2871:30">&lt;</operator> <name pos:start="2871:32" pos:end="2871:35">nfds</name></expr>;</condition> <incr pos:start="2871:38" pos:end="2871:40"><expr pos:start="2871:38" pos:end="2871:40"><name pos:start="2871:38" pos:end="2871:38">i</name><operator pos:start="2871:39" pos:end="2871:40">++</operator></expr></incr>)</control> <block pos:start="2871:43" pos:end="2875:17">{<block_content pos:start="2873:21" pos:end="2873:68">

                    <expr_stmt pos:start="2873:21" pos:end="2873:68"><expr pos:start="2873:21" pos:end="2873:67"><name pos:start="2873:21" pos:end="2873:33"><name pos:start="2873:21" pos:end="2873:30">target_pfd</name><index pos:start="2873:31" pos:end="2873:33">[<expr pos:start="2873:32" pos:end="2873:32"><name pos:start="2873:32" pos:end="2873:32">i</name></expr>]</index></name><operator pos:start="2873:34" pos:end="2873:34">.</operator><name pos:start="2873:35" pos:end="2873:41">revents</name> <operator pos:start="2873:43" pos:end="2873:43">=</operator> <call pos:start="2873:45" pos:end="2873:67"><name pos:start="2873:45" pos:end="2873:51">tswap16</name><argument_list pos:start="2873:52" pos:end="2873:67">(<argument pos:start="2873:53" pos:end="2873:66"><expr pos:start="2873:53" pos:end="2873:66"><name pos:start="2873:53" pos:end="2873:58"><name pos:start="2873:53" pos:end="2873:55">pfd</name><index pos:start="2873:56" pos:end="2873:58">[<expr pos:start="2873:57" pos:end="2873:57"><name pos:start="2873:57" pos:end="2873:57">i</name></expr>]</index></name><operator pos:start="2873:59" pos:end="2873:59">.</operator><name pos:start="2873:60" pos:end="2873:66">revents</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="2877:17" pos:end="2879:56"><expr pos:start="2877:17" pos:end="2879:55"><name pos:start="2877:17" pos:end="2877:19">ret</name> <operator pos:start="2877:21" pos:end="2877:22">+=</operator> <name pos:start="2877:24" pos:end="2877:27">nfds</name> <operator pos:start="2877:29" pos:end="2877:29">*</operator> <operator pos:start="2877:31" pos:end="2877:31">(</operator><sizeof pos:start="2877:32" pos:end="2877:59">sizeof<argument_list pos:start="2877:38" pos:end="2877:59">(<argument pos:start="2877:39" pos:end="2877:58"><expr pos:start="2877:39" pos:end="2877:58">struct <name pos:start="2877:46" pos:end="2877:58">target_pollfd</name></expr></argument>)</argument_list></sizeof>

                               <operator pos:start="2879:32" pos:end="2879:32">-</operator> <sizeof pos:start="2879:34" pos:end="2879:54">sizeof<argument_list pos:start="2879:40" pos:end="2879:54">(<argument pos:start="2879:41" pos:end="2879:53"><expr pos:start="2879:41" pos:end="2879:53">struct <name pos:start="2879:48" pos:end="2879:53">pollfd</name></expr></argument>)</argument_list></sizeof><operator pos:start="2879:55" pos:end="2879:55">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="2883:13" pos:end="2883:47"><expr pos:start="2883:13" pos:end="2883:46"><call pos:start="2883:13" pos:end="2883:46"><name pos:start="2883:13" pos:end="2883:23">unlock_user</name><argument_list pos:start="2883:24" pos:end="2883:46">(<argument pos:start="2883:25" pos:end="2883:34"><expr pos:start="2883:25" pos:end="2883:34"><name pos:start="2883:25" pos:end="2883:34">target_pfd</name></expr></argument>, <argument pos:start="2883:37" pos:end="2883:40"><expr pos:start="2883:37" pos:end="2883:40"><name pos:start="2883:37" pos:end="2883:40">arg1</name></expr></argument>, <argument pos:start="2883:43" pos:end="2883:45"><expr pos:start="2883:43" pos:end="2883:45"><name pos:start="2883:43" pos:end="2883:45">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="2887:9" pos:end="2890:0">break;</break>

<cpp:endif pos:start="2889:1" pos:end="2889:6">#<cpp:directive pos:start="2889:2" pos:end="2889:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2891:5" pos:end="2891:25">case <expr pos:start="2891:10" pos:end="2891:24"><name pos:start="2891:10" pos:end="2891:24">TARGET_NR_flock</name></expr>:</case>

        <comment type="block" pos:start="2893:9" pos:end="2895:28">/* NOTE: the flock constant seems to be the same for every

           Linux platform */</comment>

        <expr_stmt pos:start="2897:9" pos:end="2897:43"><expr pos:start="2897:9" pos:end="2897:42"><name pos:start="2897:9" pos:end="2897:11">ret</name> <operator pos:start="2897:13" pos:end="2897:13">=</operator> <call pos:start="2897:15" pos:end="2897:42"><name pos:start="2897:15" pos:end="2897:23">get_errno</name><argument_list pos:start="2897:24" pos:end="2897:42">(<argument pos:start="2897:25" pos:end="2897:41"><expr pos:start="2897:25" pos:end="2897:41"><call pos:start="2897:25" pos:end="2897:41"><name pos:start="2897:25" pos:end="2897:29">flock</name><argument_list pos:start="2897:30" pos:end="2897:41">(<argument pos:start="2897:31" pos:end="2897:34"><expr pos:start="2897:31" pos:end="2897:34"><name pos:start="2897:31" pos:end="2897:34">arg1</name></expr></argument>, <argument pos:start="2897:37" pos:end="2897:40"><expr pos:start="2897:37" pos:end="2897:40"><name pos:start="2897:37" pos:end="2897:40">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2899:9" pos:end="2899:14">break;</break>

    <case pos:start="2901:5" pos:end="2901:25">case <expr pos:start="2901:10" pos:end="2901:24"><name pos:start="2901:10" pos:end="2901:24">TARGET_NR_readv</name></expr>:</case>

        <block pos:start="2903:9" pos:end="2919:9">{<block_content pos:start="2905:13" pos:end="2917:46">

            <decl_stmt pos:start="2905:13" pos:end="2905:29"><decl pos:start="2905:13" pos:end="2905:28"><type pos:start="2905:13" pos:end="2905:15"><name pos:start="2905:13" pos:end="2905:15">int</name></type> <name pos:start="2905:17" pos:end="2905:21">count</name> <init pos:start="2905:23" pos:end="2905:28">= <expr pos:start="2905:25" pos:end="2905:28"><name pos:start="2905:25" pos:end="2905:28">arg3</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="2907:13" pos:end="2907:30"><decl pos:start="2907:13" pos:end="2907:29"><type pos:start="2907:13" pos:end="2907:26"><name pos:start="2907:13" pos:end="2907:24"><name pos:start="2907:13" pos:end="2907:18">struct</name> <name pos:start="2907:20" pos:end="2907:24">iovec</name></name> <modifier pos:start="2907:26" pos:end="2907:26">*</modifier></type><name pos:start="2907:27" pos:end="2907:29">vec</name></decl>;</decl_stmt>



            <expr_stmt pos:start="2911:13" pos:end="2911:55"><expr pos:start="2911:13" pos:end="2911:54"><name pos:start="2911:13" pos:end="2911:15">vec</name> <operator pos:start="2911:17" pos:end="2911:17">=</operator> <call pos:start="2911:19" pos:end="2911:54"><name pos:start="2911:19" pos:end="2911:24">alloca</name><argument_list pos:start="2911:25" pos:end="2911:54">(<argument pos:start="2911:26" pos:end="2911:53"><expr pos:start="2911:26" pos:end="2911:53"><name pos:start="2911:26" pos:end="2911:30">count</name> <operator pos:start="2911:32" pos:end="2911:32">*</operator> <sizeof pos:start="2911:34" pos:end="2911:53">sizeof<argument_list pos:start="2911:40" pos:end="2911:53">(<argument pos:start="2911:41" pos:end="2911:52"><expr pos:start="2911:41" pos:end="2911:52">struct <name pos:start="2911:48" pos:end="2911:52">iovec</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2913:13" pos:end="2913:44"><expr pos:start="2913:13" pos:end="2913:43"><call pos:start="2913:13" pos:end="2913:43"><name pos:start="2913:13" pos:end="2913:22">lock_iovec</name><argument_list pos:start="2913:23" pos:end="2913:43">(<argument pos:start="2913:24" pos:end="2913:26"><expr pos:start="2913:24" pos:end="2913:26"><name pos:start="2913:24" pos:end="2913:26">vec</name></expr></argument>, <argument pos:start="2913:29" pos:end="2913:32"><expr pos:start="2913:29" pos:end="2913:32"><name pos:start="2913:29" pos:end="2913:32">arg2</name></expr></argument>, <argument pos:start="2913:35" pos:end="2913:39"><expr pos:start="2913:35" pos:end="2913:39"><name pos:start="2913:35" pos:end="2913:39">count</name></expr></argument>, <argument pos:start="2913:42" pos:end="2913:42"><expr pos:start="2913:42" pos:end="2913:42"><literal type="number" pos:start="2913:42" pos:end="2913:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2915:13" pos:end="2915:53"><expr pos:start="2915:13" pos:end="2915:52"><name pos:start="2915:13" pos:end="2915:15">ret</name> <operator pos:start="2915:17" pos:end="2915:17">=</operator> <call pos:start="2915:19" pos:end="2915:52"><name pos:start="2915:19" pos:end="2915:27">get_errno</name><argument_list pos:start="2915:28" pos:end="2915:52">(<argument pos:start="2915:29" pos:end="2915:51"><expr pos:start="2915:29" pos:end="2915:51"><call pos:start="2915:29" pos:end="2915:51"><name pos:start="2915:29" pos:end="2915:33">readv</name><argument_list pos:start="2915:34" pos:end="2915:51">(<argument pos:start="2915:35" pos:end="2915:38"><expr pos:start="2915:35" pos:end="2915:38"><name pos:start="2915:35" pos:end="2915:38">arg1</name></expr></argument>, <argument pos:start="2915:41" pos:end="2915:43"><expr pos:start="2915:41" pos:end="2915:43"><name pos:start="2915:41" pos:end="2915:43">vec</name></expr></argument>, <argument pos:start="2915:46" pos:end="2915:50"><expr pos:start="2915:46" pos:end="2915:50"><name pos:start="2915:46" pos:end="2915:50">count</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2917:13" pos:end="2917:46"><expr pos:start="2917:13" pos:end="2917:45"><call pos:start="2917:13" pos:end="2917:45"><name pos:start="2917:13" pos:end="2917:24">unlock_iovec</name><argument_list pos:start="2917:25" pos:end="2917:45">(<argument pos:start="2917:26" pos:end="2917:28"><expr pos:start="2917:26" pos:end="2917:28"><name pos:start="2917:26" pos:end="2917:28">vec</name></expr></argument>, <argument pos:start="2917:31" pos:end="2917:34"><expr pos:start="2917:31" pos:end="2917:34"><name pos:start="2917:31" pos:end="2917:34">arg2</name></expr></argument>, <argument pos:start="2917:37" pos:end="2917:41"><expr pos:start="2917:37" pos:end="2917:41"><name pos:start="2917:37" pos:end="2917:41">count</name></expr></argument>, <argument pos:start="2917:44" pos:end="2917:44"><expr pos:start="2917:44" pos:end="2917:44"><literal type="number" pos:start="2917:44" pos:end="2917:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="2921:9" pos:end="2921:14">break;</break>

    <case pos:start="2923:5" pos:end="2923:26">case <expr pos:start="2923:10" pos:end="2923:25"><name pos:start="2923:10" pos:end="2923:25">TARGET_NR_writev</name></expr>:</case>

        <block pos:start="2925:9" pos:end="2941:9">{<block_content pos:start="2927:13" pos:end="2939:46">

            <decl_stmt pos:start="2927:13" pos:end="2927:29"><decl pos:start="2927:13" pos:end="2927:28"><type pos:start="2927:13" pos:end="2927:15"><name pos:start="2927:13" pos:end="2927:15">int</name></type> <name pos:start="2927:17" pos:end="2927:21">count</name> <init pos:start="2927:23" pos:end="2927:28">= <expr pos:start="2927:25" pos:end="2927:28"><name pos:start="2927:25" pos:end="2927:28">arg3</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="2929:13" pos:end="2929:30"><decl pos:start="2929:13" pos:end="2929:29"><type pos:start="2929:13" pos:end="2929:26"><name pos:start="2929:13" pos:end="2929:24"><name pos:start="2929:13" pos:end="2929:18">struct</name> <name pos:start="2929:20" pos:end="2929:24">iovec</name></name> <modifier pos:start="2929:26" pos:end="2929:26">*</modifier></type><name pos:start="2929:27" pos:end="2929:29">vec</name></decl>;</decl_stmt>



            <expr_stmt pos:start="2933:13" pos:end="2933:55"><expr pos:start="2933:13" pos:end="2933:54"><name pos:start="2933:13" pos:end="2933:15">vec</name> <operator pos:start="2933:17" pos:end="2933:17">=</operator> <call pos:start="2933:19" pos:end="2933:54"><name pos:start="2933:19" pos:end="2933:24">alloca</name><argument_list pos:start="2933:25" pos:end="2933:54">(<argument pos:start="2933:26" pos:end="2933:53"><expr pos:start="2933:26" pos:end="2933:53"><name pos:start="2933:26" pos:end="2933:30">count</name> <operator pos:start="2933:32" pos:end="2933:32">*</operator> <sizeof pos:start="2933:34" pos:end="2933:53">sizeof<argument_list pos:start="2933:40" pos:end="2933:53">(<argument pos:start="2933:41" pos:end="2933:52"><expr pos:start="2933:41" pos:end="2933:52">struct <name pos:start="2933:48" pos:end="2933:52">iovec</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2935:13" pos:end="2935:44"><expr pos:start="2935:13" pos:end="2935:43"><call pos:start="2935:13" pos:end="2935:43"><name pos:start="2935:13" pos:end="2935:22">lock_iovec</name><argument_list pos:start="2935:23" pos:end="2935:43">(<argument pos:start="2935:24" pos:end="2935:26"><expr pos:start="2935:24" pos:end="2935:26"><name pos:start="2935:24" pos:end="2935:26">vec</name></expr></argument>, <argument pos:start="2935:29" pos:end="2935:32"><expr pos:start="2935:29" pos:end="2935:32"><name pos:start="2935:29" pos:end="2935:32">arg2</name></expr></argument>, <argument pos:start="2935:35" pos:end="2935:39"><expr pos:start="2935:35" pos:end="2935:39"><name pos:start="2935:35" pos:end="2935:39">count</name></expr></argument>, <argument pos:start="2935:42" pos:end="2935:42"><expr pos:start="2935:42" pos:end="2935:42"><literal type="number" pos:start="2935:42" pos:end="2935:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2937:13" pos:end="2937:54"><expr pos:start="2937:13" pos:end="2937:53"><name pos:start="2937:13" pos:end="2937:15">ret</name> <operator pos:start="2937:17" pos:end="2937:17">=</operator> <call pos:start="2937:19" pos:end="2937:53"><name pos:start="2937:19" pos:end="2937:27">get_errno</name><argument_list pos:start="2937:28" pos:end="2937:53">(<argument pos:start="2937:29" pos:end="2937:52"><expr pos:start="2937:29" pos:end="2937:52"><call pos:start="2937:29" pos:end="2937:52"><name pos:start="2937:29" pos:end="2937:34">writev</name><argument_list pos:start="2937:35" pos:end="2937:52">(<argument pos:start="2937:36" pos:end="2937:39"><expr pos:start="2937:36" pos:end="2937:39"><name pos:start="2937:36" pos:end="2937:39">arg1</name></expr></argument>, <argument pos:start="2937:42" pos:end="2937:44"><expr pos:start="2937:42" pos:end="2937:44"><name pos:start="2937:42" pos:end="2937:44">vec</name></expr></argument>, <argument pos:start="2937:47" pos:end="2937:51"><expr pos:start="2937:47" pos:end="2937:51"><name pos:start="2937:47" pos:end="2937:51">count</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2939:13" pos:end="2939:46"><expr pos:start="2939:13" pos:end="2939:45"><call pos:start="2939:13" pos:end="2939:45"><name pos:start="2939:13" pos:end="2939:24">unlock_iovec</name><argument_list pos:start="2939:25" pos:end="2939:45">(<argument pos:start="2939:26" pos:end="2939:28"><expr pos:start="2939:26" pos:end="2939:28"><name pos:start="2939:26" pos:end="2939:28">vec</name></expr></argument>, <argument pos:start="2939:31" pos:end="2939:34"><expr pos:start="2939:31" pos:end="2939:34"><name pos:start="2939:31" pos:end="2939:34">arg2</name></expr></argument>, <argument pos:start="2939:37" pos:end="2939:41"><expr pos:start="2939:37" pos:end="2939:41"><name pos:start="2939:37" pos:end="2939:41">count</name></expr></argument>, <argument pos:start="2939:44" pos:end="2939:44"><expr pos:start="2939:44" pos:end="2939:44"><literal type="number" pos:start="2939:44" pos:end="2939:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="2943:9" pos:end="2943:14">break;</break>

    <case pos:start="2945:5" pos:end="2945:26">case <expr pos:start="2945:10" pos:end="2945:25"><name pos:start="2945:10" pos:end="2945:25">TARGET_NR_getsid</name></expr>:</case>

        <expr_stmt pos:start="2947:9" pos:end="2947:38"><expr pos:start="2947:9" pos:end="2947:37"><name pos:start="2947:9" pos:end="2947:11">ret</name> <operator pos:start="2947:13" pos:end="2947:13">=</operator> <call pos:start="2947:15" pos:end="2947:37"><name pos:start="2947:15" pos:end="2947:23">get_errno</name><argument_list pos:start="2947:24" pos:end="2947:37">(<argument pos:start="2947:25" pos:end="2947:36"><expr pos:start="2947:25" pos:end="2947:36"><call pos:start="2947:25" pos:end="2947:36"><name pos:start="2947:25" pos:end="2947:30">getsid</name><argument_list pos:start="2947:31" pos:end="2947:36">(<argument pos:start="2947:32" pos:end="2947:35"><expr pos:start="2947:32" pos:end="2947:35"><name pos:start="2947:32" pos:end="2947:35">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2949:9" pos:end="2952:0">break;</break>

<cpp:if pos:start="2951:1" pos:end="2951:32">#<cpp:directive pos:start="2951:2" pos:end="2951:3">if</cpp:directive> <expr pos:start="2951:5" pos:end="2951:32"><call pos:start="2951:5" pos:end="2951:32"><name pos:start="2951:5" pos:end="2951:11">defined</name><argument_list pos:start="2951:12" pos:end="2951:32">(<argument pos:start="2951:13" pos:end="2951:31"><expr pos:start="2951:13" pos:end="2951:31"><name pos:start="2951:13" pos:end="2951:31">TARGET_NR_fdatasync</name></expr></argument>)</argument_list></call></expr></cpp:if> <comment type="block" pos:start="2951:34" pos:end="2951:68">/* Not on alpha (osf_datasync ?) */</comment>

    <case pos:start="2953:5" pos:end="2953:29">case <expr pos:start="2953:10" pos:end="2953:28"><name pos:start="2953:10" pos:end="2953:28">TARGET_NR_fdatasync</name></expr>:</case>

        <expr_stmt pos:start="2955:9" pos:end="2955:41"><expr pos:start="2955:9" pos:end="2955:40"><name pos:start="2955:9" pos:end="2955:11">ret</name> <operator pos:start="2955:13" pos:end="2955:13">=</operator> <call pos:start="2955:15" pos:end="2955:40"><name pos:start="2955:15" pos:end="2955:23">get_errno</name><argument_list pos:start="2955:24" pos:end="2955:40">(<argument pos:start="2955:25" pos:end="2955:39"><expr pos:start="2955:25" pos:end="2955:39"><call pos:start="2955:25" pos:end="2955:39"><name pos:start="2955:25" pos:end="2955:33">fdatasync</name><argument_list pos:start="2955:34" pos:end="2955:39">(<argument pos:start="2955:35" pos:end="2955:38"><expr pos:start="2955:35" pos:end="2955:38"><name pos:start="2955:35" pos:end="2955:38">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2957:9" pos:end="2960:0">break;</break>

<cpp:endif pos:start="2959:1" pos:end="2959:6">#<cpp:directive pos:start="2959:2" pos:end="2959:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2961:5" pos:end="2961:27">case <expr pos:start="2961:10" pos:end="2961:26"><name pos:start="2961:10" pos:end="2961:26">TARGET_NR__sysctl</name></expr>:</case>

        <comment type="block" pos:start="2963:9" pos:end="2965:27">/* We don't implement this, but ENODIR is always a safe

           return value. */</comment>

        <return pos:start="2967:9" pos:end="2967:24">return <expr pos:start="2967:16" pos:end="2967:23"><operator pos:start="2967:16" pos:end="2967:16">-</operator><name pos:start="2967:17" pos:end="2967:23">ENOTDIR</name></expr>;</return>

    <case pos:start="2969:5" pos:end="2969:34">case <expr pos:start="2969:10" pos:end="2969:33"><name pos:start="2969:10" pos:end="2969:33">TARGET_NR_sched_setparam</name></expr>:</case>

        <block pos:start="2971:9" pos:end="2987:9">{<block_content pos:start="2973:13" pos:end="2985:57">

            <decl_stmt pos:start="2973:13" pos:end="2973:44"><decl pos:start="2973:13" pos:end="2973:43"><type pos:start="2973:13" pos:end="2973:32"><name pos:start="2973:13" pos:end="2973:30"><name pos:start="2973:13" pos:end="2973:18">struct</name> <name pos:start="2973:20" pos:end="2973:30">sched_param</name></name> <modifier pos:start="2973:32" pos:end="2973:32">*</modifier></type><name pos:start="2973:33" pos:end="2973:43">target_schp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="2975:13" pos:end="2975:36"><decl pos:start="2975:13" pos:end="2975:35"><type pos:start="2975:13" pos:end="2975:30"><name pos:start="2975:13" pos:end="2975:30"><name pos:start="2975:13" pos:end="2975:18">struct</name> <name pos:start="2975:20" pos:end="2975:30">sched_param</name></name></type> <name pos:start="2975:32" pos:end="2975:35">schp</name></decl>;</decl_stmt>



            <expr_stmt pos:start="2979:13" pos:end="2979:51"><expr pos:start="2979:13" pos:end="2979:50"><call pos:start="2979:13" pos:end="2979:50"><name pos:start="2979:13" pos:end="2979:28">lock_user_struct</name><argument_list pos:start="2979:29" pos:end="2979:50">(<argument pos:start="2979:30" pos:end="2979:40"><expr pos:start="2979:30" pos:end="2979:40"><name pos:start="2979:30" pos:end="2979:40">target_schp</name></expr></argument>, <argument pos:start="2979:43" pos:end="2979:46"><expr pos:start="2979:43" pos:end="2979:46"><name pos:start="2979:43" pos:end="2979:46">arg2</name></expr></argument>, <argument pos:start="2979:49" pos:end="2979:49"><expr pos:start="2979:49" pos:end="2979:49"><literal type="number" pos:start="2979:49" pos:end="2979:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2981:13" pos:end="2981:71"><expr pos:start="2981:13" pos:end="2981:70"><name pos:start="2981:13" pos:end="2981:31"><name pos:start="2981:13" pos:end="2981:16">schp</name><operator pos:start="2981:17" pos:end="2981:17">.</operator><name pos:start="2981:18" pos:end="2981:31">sched_priority</name></name> <operator pos:start="2981:33" pos:end="2981:33">=</operator> <call pos:start="2981:35" pos:end="2981:70"><name pos:start="2981:35" pos:end="2981:41">tswap32</name><argument_list pos:start="2981:42" pos:end="2981:70">(<argument pos:start="2981:43" pos:end="2981:69"><expr pos:start="2981:43" pos:end="2981:69"><name pos:start="2981:43" pos:end="2981:69"><name pos:start="2981:43" pos:end="2981:53">target_schp</name><operator pos:start="2981:54" pos:end="2981:55">-&gt;</operator><name pos:start="2981:56" pos:end="2981:69">sched_priority</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2983:13" pos:end="2983:53"><expr pos:start="2983:13" pos:end="2983:52"><call pos:start="2983:13" pos:end="2983:52"><name pos:start="2983:13" pos:end="2983:30">unlock_user_struct</name><argument_list pos:start="2983:31" pos:end="2983:52">(<argument pos:start="2983:32" pos:end="2983:42"><expr pos:start="2983:32" pos:end="2983:42"><name pos:start="2983:32" pos:end="2983:42">target_schp</name></expr></argument>, <argument pos:start="2983:45" pos:end="2983:48"><expr pos:start="2983:45" pos:end="2983:48"><name pos:start="2983:45" pos:end="2983:48">arg2</name></expr></argument>, <argument pos:start="2983:51" pos:end="2983:51"><expr pos:start="2983:51" pos:end="2983:51"><literal type="number" pos:start="2983:51" pos:end="2983:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2985:13" pos:end="2985:57"><expr pos:start="2985:13" pos:end="2985:56"><name pos:start="2985:13" pos:end="2985:15">ret</name> <operator pos:start="2985:17" pos:end="2985:17">=</operator> <call pos:start="2985:19" pos:end="2985:56"><name pos:start="2985:19" pos:end="2985:27">get_errno</name><argument_list pos:start="2985:28" pos:end="2985:56">(<argument pos:start="2985:29" pos:end="2985:55"><expr pos:start="2985:29" pos:end="2985:55"><call pos:start="2985:29" pos:end="2985:55"><name pos:start="2985:29" pos:end="2985:42">sched_setparam</name><argument_list pos:start="2985:43" pos:end="2985:55">(<argument pos:start="2985:44" pos:end="2985:47"><expr pos:start="2985:44" pos:end="2985:47"><name pos:start="2985:44" pos:end="2985:47">arg1</name></expr></argument>, <argument pos:start="2985:50" pos:end="2985:54"><expr pos:start="2985:50" pos:end="2985:54"><operator pos:start="2985:50" pos:end="2985:50">&amp;</operator><name pos:start="2985:51" pos:end="2985:54">schp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="2989:9" pos:end="2989:14">break;</break>

    <case pos:start="2991:5" pos:end="2991:34">case <expr pos:start="2991:10" pos:end="2991:33"><name pos:start="2991:10" pos:end="2991:33">TARGET_NR_sched_getparam</name></expr>:</case>

        <block pos:start="2993:9" pos:end="3011:9">{<block_content pos:start="2995:13" pos:end="3009:13">

            <decl_stmt pos:start="2995:13" pos:end="2995:44"><decl pos:start="2995:13" pos:end="2995:43"><type pos:start="2995:13" pos:end="2995:32"><name pos:start="2995:13" pos:end="2995:30"><name pos:start="2995:13" pos:end="2995:18">struct</name> <name pos:start="2995:20" pos:end="2995:30">sched_param</name></name> <modifier pos:start="2995:32" pos:end="2995:32">*</modifier></type><name pos:start="2995:33" pos:end="2995:43">target_schp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="2997:13" pos:end="2997:36"><decl pos:start="2997:13" pos:end="2997:35"><type pos:start="2997:13" pos:end="2997:30"><name pos:start="2997:13" pos:end="2997:30"><name pos:start="2997:13" pos:end="2997:18">struct</name> <name pos:start="2997:20" pos:end="2997:30">sched_param</name></name></type> <name pos:start="2997:32" pos:end="2997:35">schp</name></decl>;</decl_stmt>

            <expr_stmt pos:start="2999:13" pos:end="2999:57"><expr pos:start="2999:13" pos:end="2999:56"><name pos:start="2999:13" pos:end="2999:15">ret</name> <operator pos:start="2999:17" pos:end="2999:17">=</operator> <call pos:start="2999:19" pos:end="2999:56"><name pos:start="2999:19" pos:end="2999:27">get_errno</name><argument_list pos:start="2999:28" pos:end="2999:56">(<argument pos:start="2999:29" pos:end="2999:55"><expr pos:start="2999:29" pos:end="2999:55"><call pos:start="2999:29" pos:end="2999:55"><name pos:start="2999:29" pos:end="2999:42">sched_getparam</name><argument_list pos:start="2999:43" pos:end="2999:55">(<argument pos:start="2999:44" pos:end="2999:47"><expr pos:start="2999:44" pos:end="2999:47"><name pos:start="2999:44" pos:end="2999:47">arg1</name></expr></argument>, <argument pos:start="2999:50" pos:end="2999:54"><expr pos:start="2999:50" pos:end="2999:54"><operator pos:start="2999:50" pos:end="2999:50">&amp;</operator><name pos:start="2999:51" pos:end="2999:54">schp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3001:13" pos:end="3009:13"><if pos:start="3001:13" pos:end="3009:13">if <condition pos:start="3001:16" pos:end="3001:31">(<expr pos:start="3001:17" pos:end="3001:30"><operator pos:start="3001:17" pos:end="3001:17">!</operator><call pos:start="3001:18" pos:end="3001:30"><name pos:start="3001:18" pos:end="3001:25">is_error</name><argument_list pos:start="3001:26" pos:end="3001:30">(<argument pos:start="3001:27" pos:end="3001:29"><expr pos:start="3001:27" pos:end="3001:29"><name pos:start="3001:27" pos:end="3001:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3001:33" pos:end="3009:13">{<block_content pos:start="3003:17" pos:end="3007:57">

                <expr_stmt pos:start="3003:17" pos:end="3003:55"><expr pos:start="3003:17" pos:end="3003:54"><call pos:start="3003:17" pos:end="3003:54"><name pos:start="3003:17" pos:end="3003:32">lock_user_struct</name><argument_list pos:start="3003:33" pos:end="3003:54">(<argument pos:start="3003:34" pos:end="3003:44"><expr pos:start="3003:34" pos:end="3003:44"><name pos:start="3003:34" pos:end="3003:44">target_schp</name></expr></argument>, <argument pos:start="3003:47" pos:end="3003:50"><expr pos:start="3003:47" pos:end="3003:50"><name pos:start="3003:47" pos:end="3003:50">arg2</name></expr></argument>, <argument pos:start="3003:53" pos:end="3003:53"><expr pos:start="3003:53" pos:end="3003:53"><literal type="number" pos:start="3003:53" pos:end="3003:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3005:17" pos:end="3005:75"><expr pos:start="3005:17" pos:end="3005:74"><name pos:start="3005:17" pos:end="3005:43"><name pos:start="3005:17" pos:end="3005:27">target_schp</name><operator pos:start="3005:28" pos:end="3005:29">-&gt;</operator><name pos:start="3005:30" pos:end="3005:43">sched_priority</name></name> <operator pos:start="3005:45" pos:end="3005:45">=</operator> <call pos:start="3005:47" pos:end="3005:74"><name pos:start="3005:47" pos:end="3005:53">tswap32</name><argument_list pos:start="3005:54" pos:end="3005:74">(<argument pos:start="3005:55" pos:end="3005:73"><expr pos:start="3005:55" pos:end="3005:73"><name pos:start="3005:55" pos:end="3005:73"><name pos:start="3005:55" pos:end="3005:58">schp</name><operator pos:start="3005:59" pos:end="3005:59">.</operator><name pos:start="3005:60" pos:end="3005:73">sched_priority</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3007:17" pos:end="3007:57"><expr pos:start="3007:17" pos:end="3007:56"><call pos:start="3007:17" pos:end="3007:56"><name pos:start="3007:17" pos:end="3007:34">unlock_user_struct</name><argument_list pos:start="3007:35" pos:end="3007:56">(<argument pos:start="3007:36" pos:end="3007:46"><expr pos:start="3007:36" pos:end="3007:46"><name pos:start="3007:36" pos:end="3007:46">target_schp</name></expr></argument>, <argument pos:start="3007:49" pos:end="3007:52"><expr pos:start="3007:49" pos:end="3007:52"><name pos:start="3007:49" pos:end="3007:52">arg2</name></expr></argument>, <argument pos:start="3007:55" pos:end="3007:55"><expr pos:start="3007:55" pos:end="3007:55"><literal type="number" pos:start="3007:55" pos:end="3007:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="3013:9" pos:end="3013:14">break;</break>

    <case pos:start="3015:5" pos:end="3015:38">case <expr pos:start="3015:10" pos:end="3015:37"><name pos:start="3015:10" pos:end="3015:37">TARGET_NR_sched_setscheduler</name></expr>:</case>

        <block pos:start="3017:9" pos:end="3031:9">{<block_content pos:start="3019:13" pos:end="3029:67">

            <decl_stmt pos:start="3019:13" pos:end="3019:44"><decl pos:start="3019:13" pos:end="3019:43"><type pos:start="3019:13" pos:end="3019:32"><name pos:start="3019:13" pos:end="3019:30"><name pos:start="3019:13" pos:end="3019:18">struct</name> <name pos:start="3019:20" pos:end="3019:30">sched_param</name></name> <modifier pos:start="3019:32" pos:end="3019:32">*</modifier></type><name pos:start="3019:33" pos:end="3019:43">target_schp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3021:13" pos:end="3021:36"><decl pos:start="3021:13" pos:end="3021:35"><type pos:start="3021:13" pos:end="3021:30"><name pos:start="3021:13" pos:end="3021:30"><name pos:start="3021:13" pos:end="3021:18">struct</name> <name pos:start="3021:20" pos:end="3021:30">sched_param</name></name></type> <name pos:start="3021:32" pos:end="3021:35">schp</name></decl>;</decl_stmt>

            <expr_stmt pos:start="3023:13" pos:end="3023:51"><expr pos:start="3023:13" pos:end="3023:50"><call pos:start="3023:13" pos:end="3023:50"><name pos:start="3023:13" pos:end="3023:28">lock_user_struct</name><argument_list pos:start="3023:29" pos:end="3023:50">(<argument pos:start="3023:30" pos:end="3023:40"><expr pos:start="3023:30" pos:end="3023:40"><name pos:start="3023:30" pos:end="3023:40">target_schp</name></expr></argument>, <argument pos:start="3023:43" pos:end="3023:46"><expr pos:start="3023:43" pos:end="3023:46"><name pos:start="3023:43" pos:end="3023:46">arg3</name></expr></argument>, <argument pos:start="3023:49" pos:end="3023:49"><expr pos:start="3023:49" pos:end="3023:49"><literal type="number" pos:start="3023:49" pos:end="3023:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3025:13" pos:end="3025:71"><expr pos:start="3025:13" pos:end="3025:70"><name pos:start="3025:13" pos:end="3025:31"><name pos:start="3025:13" pos:end="3025:16">schp</name><operator pos:start="3025:17" pos:end="3025:17">.</operator><name pos:start="3025:18" pos:end="3025:31">sched_priority</name></name> <operator pos:start="3025:33" pos:end="3025:33">=</operator> <call pos:start="3025:35" pos:end="3025:70"><name pos:start="3025:35" pos:end="3025:41">tswap32</name><argument_list pos:start="3025:42" pos:end="3025:70">(<argument pos:start="3025:43" pos:end="3025:69"><expr pos:start="3025:43" pos:end="3025:69"><name pos:start="3025:43" pos:end="3025:69"><name pos:start="3025:43" pos:end="3025:53">target_schp</name><operator pos:start="3025:54" pos:end="3025:55">-&gt;</operator><name pos:start="3025:56" pos:end="3025:69">sched_priority</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3027:13" pos:end="3027:53"><expr pos:start="3027:13" pos:end="3027:52"><call pos:start="3027:13" pos:end="3027:52"><name pos:start="3027:13" pos:end="3027:30">unlock_user_struct</name><argument_list pos:start="3027:31" pos:end="3027:52">(<argument pos:start="3027:32" pos:end="3027:42"><expr pos:start="3027:32" pos:end="3027:42"><name pos:start="3027:32" pos:end="3027:42">target_schp</name></expr></argument>, <argument pos:start="3027:45" pos:end="3027:48"><expr pos:start="3027:45" pos:end="3027:48"><name pos:start="3027:45" pos:end="3027:48">arg3</name></expr></argument>, <argument pos:start="3027:51" pos:end="3027:51"><expr pos:start="3027:51" pos:end="3027:51"><literal type="number" pos:start="3027:51" pos:end="3027:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3029:13" pos:end="3029:67"><expr pos:start="3029:13" pos:end="3029:66"><name pos:start="3029:13" pos:end="3029:15">ret</name> <operator pos:start="3029:17" pos:end="3029:17">=</operator> <call pos:start="3029:19" pos:end="3029:66"><name pos:start="3029:19" pos:end="3029:27">get_errno</name><argument_list pos:start="3029:28" pos:end="3029:66">(<argument pos:start="3029:29" pos:end="3029:65"><expr pos:start="3029:29" pos:end="3029:65"><call pos:start="3029:29" pos:end="3029:65"><name pos:start="3029:29" pos:end="3029:46">sched_setscheduler</name><argument_list pos:start="3029:47" pos:end="3029:65">(<argument pos:start="3029:48" pos:end="3029:51"><expr pos:start="3029:48" pos:end="3029:51"><name pos:start="3029:48" pos:end="3029:51">arg1</name></expr></argument>, <argument pos:start="3029:54" pos:end="3029:57"><expr pos:start="3029:54" pos:end="3029:57"><name pos:start="3029:54" pos:end="3029:57">arg2</name></expr></argument>, <argument pos:start="3029:60" pos:end="3029:64"><expr pos:start="3029:60" pos:end="3029:64"><operator pos:start="3029:60" pos:end="3029:60">&amp;</operator><name pos:start="3029:61" pos:end="3029:64">schp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="3033:9" pos:end="3033:14">break;</break>

    <case pos:start="3035:5" pos:end="3035:38">case <expr pos:start="3035:10" pos:end="3035:37"><name pos:start="3035:10" pos:end="3035:37">TARGET_NR_sched_getscheduler</name></expr>:</case>

        <expr_stmt pos:start="3037:9" pos:end="3037:50"><expr pos:start="3037:9" pos:end="3037:49"><name pos:start="3037:9" pos:end="3037:11">ret</name> <operator pos:start="3037:13" pos:end="3037:13">=</operator> <call pos:start="3037:15" pos:end="3037:49"><name pos:start="3037:15" pos:end="3037:23">get_errno</name><argument_list pos:start="3037:24" pos:end="3037:49">(<argument pos:start="3037:25" pos:end="3037:48"><expr pos:start="3037:25" pos:end="3037:48"><call pos:start="3037:25" pos:end="3037:48"><name pos:start="3037:25" pos:end="3037:42">sched_getscheduler</name><argument_list pos:start="3037:43" pos:end="3037:48">(<argument pos:start="3037:44" pos:end="3037:47"><expr pos:start="3037:44" pos:end="3037:47"><name pos:start="3037:44" pos:end="3037:47">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3039:9" pos:end="3039:14">break;</break>

    <case pos:start="3041:5" pos:end="3041:31">case <expr pos:start="3041:10" pos:end="3041:30"><name pos:start="3041:10" pos:end="3041:30">TARGET_NR_sched_yield</name></expr>:</case>

        <expr_stmt pos:start="3043:9" pos:end="3043:39"><expr pos:start="3043:9" pos:end="3043:38"><name pos:start="3043:9" pos:end="3043:11">ret</name> <operator pos:start="3043:13" pos:end="3043:13">=</operator> <call pos:start="3043:15" pos:end="3043:38"><name pos:start="3043:15" pos:end="3043:23">get_errno</name><argument_list pos:start="3043:24" pos:end="3043:38">(<argument pos:start="3043:25" pos:end="3043:37"><expr pos:start="3043:25" pos:end="3043:37"><call pos:start="3043:25" pos:end="3043:37"><name pos:start="3043:25" pos:end="3043:35">sched_yield</name><argument_list pos:start="3043:36" pos:end="3043:37">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3045:9" pos:end="3045:14">break;</break>

    <case pos:start="3047:5" pos:end="3047:42">case <expr pos:start="3047:10" pos:end="3047:41"><name pos:start="3047:10" pos:end="3047:41">TARGET_NR_sched_get_priority_max</name></expr>:</case>

        <expr_stmt pos:start="3049:9" pos:end="3049:54"><expr pos:start="3049:9" pos:end="3049:53"><name pos:start="3049:9" pos:end="3049:11">ret</name> <operator pos:start="3049:13" pos:end="3049:13">=</operator> <call pos:start="3049:15" pos:end="3049:53"><name pos:start="3049:15" pos:end="3049:23">get_errno</name><argument_list pos:start="3049:24" pos:end="3049:53">(<argument pos:start="3049:25" pos:end="3049:52"><expr pos:start="3049:25" pos:end="3049:52"><call pos:start="3049:25" pos:end="3049:52"><name pos:start="3049:25" pos:end="3049:46">sched_get_priority_max</name><argument_list pos:start="3049:47" pos:end="3049:52">(<argument pos:start="3049:48" pos:end="3049:51"><expr pos:start="3049:48" pos:end="3049:51"><name pos:start="3049:48" pos:end="3049:51">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3051:9" pos:end="3051:14">break;</break>

    <case pos:start="3053:5" pos:end="3053:42">case <expr pos:start="3053:10" pos:end="3053:41"><name pos:start="3053:10" pos:end="3053:41">TARGET_NR_sched_get_priority_min</name></expr>:</case>

        <expr_stmt pos:start="3055:9" pos:end="3055:54"><expr pos:start="3055:9" pos:end="3055:53"><name pos:start="3055:9" pos:end="3055:11">ret</name> <operator pos:start="3055:13" pos:end="3055:13">=</operator> <call pos:start="3055:15" pos:end="3055:53"><name pos:start="3055:15" pos:end="3055:23">get_errno</name><argument_list pos:start="3055:24" pos:end="3055:53">(<argument pos:start="3055:25" pos:end="3055:52"><expr pos:start="3055:25" pos:end="3055:52"><call pos:start="3055:25" pos:end="3055:52"><name pos:start="3055:25" pos:end="3055:46">sched_get_priority_min</name><argument_list pos:start="3055:47" pos:end="3055:52">(<argument pos:start="3055:48" pos:end="3055:51"><expr pos:start="3055:48" pos:end="3055:51"><name pos:start="3055:48" pos:end="3055:51">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3057:9" pos:end="3057:14">break;</break>

    <case pos:start="3059:5" pos:end="3059:41">case <expr pos:start="3059:10" pos:end="3059:40"><name pos:start="3059:10" pos:end="3059:40">TARGET_NR_sched_rr_get_interval</name></expr>:</case>

        <block pos:start="3061:9" pos:end="3073:9">{<block_content pos:start="3063:13" pos:end="3071:13">

            <decl_stmt pos:start="3063:13" pos:end="3063:31"><decl pos:start="3063:13" pos:end="3063:30"><type pos:start="3063:13" pos:end="3063:27"><name pos:start="3063:13" pos:end="3063:27"><name pos:start="3063:13" pos:end="3063:18">struct</name> <name pos:start="3063:20" pos:end="3063:27">timespec</name></name></type> <name pos:start="3063:29" pos:end="3063:30">ts</name></decl>;</decl_stmt>

            <expr_stmt pos:start="3065:13" pos:end="3065:62"><expr pos:start="3065:13" pos:end="3065:61"><name pos:start="3065:13" pos:end="3065:15">ret</name> <operator pos:start="3065:17" pos:end="3065:17">=</operator> <call pos:start="3065:19" pos:end="3065:61"><name pos:start="3065:19" pos:end="3065:27">get_errno</name><argument_list pos:start="3065:28" pos:end="3065:61">(<argument pos:start="3065:29" pos:end="3065:60"><expr pos:start="3065:29" pos:end="3065:60"><call pos:start="3065:29" pos:end="3065:60"><name pos:start="3065:29" pos:end="3065:49">sched_rr_get_interval</name><argument_list pos:start="3065:50" pos:end="3065:60">(<argument pos:start="3065:51" pos:end="3065:54"><expr pos:start="3065:51" pos:end="3065:54"><name pos:start="3065:51" pos:end="3065:54">arg1</name></expr></argument>, <argument pos:start="3065:57" pos:end="3065:59"><expr pos:start="3065:57" pos:end="3065:59"><operator pos:start="3065:57" pos:end="3065:57">&amp;</operator><name pos:start="3065:58" pos:end="3065:59">ts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3067:13" pos:end="3071:13"><if pos:start="3067:13" pos:end="3071:13">if <condition pos:start="3067:16" pos:end="3067:31">(<expr pos:start="3067:17" pos:end="3067:30"><operator pos:start="3067:17" pos:end="3067:17">!</operator><call pos:start="3067:18" pos:end="3067:30"><name pos:start="3067:18" pos:end="3067:25">is_error</name><argument_list pos:start="3067:26" pos:end="3067:30">(<argument pos:start="3067:27" pos:end="3067:29"><expr pos:start="3067:27" pos:end="3067:29"><name pos:start="3067:27" pos:end="3067:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3067:33" pos:end="3071:13">{<block_content pos:start="3069:17" pos:end="3069:51">

                <expr_stmt pos:start="3069:17" pos:end="3069:51"><expr pos:start="3069:17" pos:end="3069:50"><call pos:start="3069:17" pos:end="3069:50"><name pos:start="3069:17" pos:end="3069:39">host_to_target_timespec</name><argument_list pos:start="3069:40" pos:end="3069:50">(<argument pos:start="3069:41" pos:end="3069:44"><expr pos:start="3069:41" pos:end="3069:44"><name pos:start="3069:41" pos:end="3069:44">arg2</name></expr></argument>, <argument pos:start="3069:47" pos:end="3069:49"><expr pos:start="3069:47" pos:end="3069:49"><operator pos:start="3069:47" pos:end="3069:47">&amp;</operator><name pos:start="3069:48" pos:end="3069:49">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="3075:9" pos:end="3075:14">break;</break>

    <case pos:start="3077:5" pos:end="3077:29">case <expr pos:start="3077:10" pos:end="3077:28"><name pos:start="3077:10" pos:end="3077:28">TARGET_NR_nanosleep</name></expr>:</case>

        <block pos:start="3079:9" pos:end="3093:9">{<block_content pos:start="3081:13" pos:end="3091:13">

            <decl_stmt pos:start="3081:13" pos:end="3081:37"><decl pos:start="3081:13" pos:end="3081:31"><type pos:start="3081:13" pos:end="3081:27"><name pos:start="3081:13" pos:end="3081:27"><name pos:start="3081:13" pos:end="3081:18">struct</name> <name pos:start="3081:20" pos:end="3081:27">timespec</name></name></type> <name pos:start="3081:29" pos:end="3081:31">req</name></decl>, <decl pos:start="3081:34" pos:end="3081:36"><type ref="prev" pos:start="3081:13" pos:end="3081:27"/><name pos:start="3081:34" pos:end="3081:36">rem</name></decl>;</decl_stmt>

            <expr_stmt pos:start="3083:13" pos:end="3083:48"><expr pos:start="3083:13" pos:end="3083:47"><call pos:start="3083:13" pos:end="3083:47"><name pos:start="3083:13" pos:end="3083:35">target_to_host_timespec</name><argument_list pos:start="3083:36" pos:end="3083:47">(<argument pos:start="3083:37" pos:end="3083:40"><expr pos:start="3083:37" pos:end="3083:40"><operator pos:start="3083:37" pos:end="3083:37">&amp;</operator><name pos:start="3083:38" pos:end="3083:40">req</name></expr></argument>, <argument pos:start="3083:43" pos:end="3083:46"><expr pos:start="3083:43" pos:end="3083:46"><name pos:start="3083:43" pos:end="3083:46">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3085:13" pos:end="3085:51"><expr pos:start="3085:13" pos:end="3085:50"><name pos:start="3085:13" pos:end="3085:15">ret</name> <operator pos:start="3085:17" pos:end="3085:17">=</operator> <call pos:start="3085:19" pos:end="3085:50"><name pos:start="3085:19" pos:end="3085:27">get_errno</name><argument_list pos:start="3085:28" pos:end="3085:50">(<argument pos:start="3085:29" pos:end="3085:49"><expr pos:start="3085:29" pos:end="3085:49"><call pos:start="3085:29" pos:end="3085:49"><name pos:start="3085:29" pos:end="3085:37">nanosleep</name><argument_list pos:start="3085:38" pos:end="3085:49">(<argument pos:start="3085:39" pos:end="3085:42"><expr pos:start="3085:39" pos:end="3085:42"><operator pos:start="3085:39" pos:end="3085:39">&amp;</operator><name pos:start="3085:40" pos:end="3085:42">req</name></expr></argument>, <argument pos:start="3085:45" pos:end="3085:48"><expr pos:start="3085:45" pos:end="3085:48"><operator pos:start="3085:45" pos:end="3085:45">&amp;</operator><name pos:start="3085:46" pos:end="3085:48">rem</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3087:13" pos:end="3091:13"><if pos:start="3087:13" pos:end="3091:13">if <condition pos:start="3087:16" pos:end="3087:38">(<expr pos:start="3087:17" pos:end="3087:37"><call pos:start="3087:17" pos:end="3087:29"><name pos:start="3087:17" pos:end="3087:24">is_error</name><argument_list pos:start="3087:25" pos:end="3087:29">(<argument pos:start="3087:26" pos:end="3087:28"><expr pos:start="3087:26" pos:end="3087:28"><name pos:start="3087:26" pos:end="3087:28">ret</name></expr></argument>)</argument_list></call> <operator pos:start="3087:31" pos:end="3087:32">&amp;&amp;</operator> <name pos:start="3087:34" pos:end="3087:37">arg2</name></expr>)</condition> <block pos:start="3087:40" pos:end="3091:13">{<block_content pos:start="3089:17" pos:end="3089:52">

                <expr_stmt pos:start="3089:17" pos:end="3089:52"><expr pos:start="3089:17" pos:end="3089:51"><call pos:start="3089:17" pos:end="3089:51"><name pos:start="3089:17" pos:end="3089:39">host_to_target_timespec</name><argument_list pos:start="3089:40" pos:end="3089:51">(<argument pos:start="3089:41" pos:end="3089:44"><expr pos:start="3089:41" pos:end="3089:44"><name pos:start="3089:41" pos:end="3089:44">arg2</name></expr></argument>, <argument pos:start="3089:47" pos:end="3089:50"><expr pos:start="3089:47" pos:end="3089:50"><operator pos:start="3089:47" pos:end="3089:47">&amp;</operator><name pos:start="3089:48" pos:end="3089:50">rem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="3095:9" pos:end="3098:0">break;</break>

<cpp:ifdef pos:start="3097:1" pos:end="3097:29">#<cpp:directive pos:start="3097:2" pos:end="3097:6">ifdef</cpp:directive> <name pos:start="3097:8" pos:end="3097:29">TARGET_NR_query_module</name></cpp:ifdef>

    <case pos:start="3099:5" pos:end="3099:32">case <expr pos:start="3099:10" pos:end="3099:31"><name pos:start="3099:10" pos:end="3099:31">TARGET_NR_query_module</name></expr>:</case>

        <goto pos:start="3101:9" pos:end="3106:0">goto <name pos:start="3101:14" pos:end="3101:26">unimplemented</name>;</goto>

<cpp:endif pos:start="3103:1" pos:end="3103:6">#<cpp:directive pos:start="3103:2" pos:end="3103:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3105:1" pos:end="3105:27">#<cpp:directive pos:start="3105:2" pos:end="3105:6">ifdef</cpp:directive> <name pos:start="3105:8" pos:end="3105:27">TARGET_NR_nfsservctl</name></cpp:ifdef>

    <case pos:start="3107:5" pos:end="3107:30">case <expr pos:start="3107:10" pos:end="3107:29"><name pos:start="3107:10" pos:end="3107:29">TARGET_NR_nfsservctl</name></expr>:</case>

        <goto pos:start="3109:9" pos:end="3112:0">goto <name pos:start="3109:14" pos:end="3109:26">unimplemented</name>;</goto>

<cpp:endif pos:start="3111:1" pos:end="3111:6">#<cpp:directive pos:start="3111:2" pos:end="3111:6">endif</cpp:directive></cpp:endif>

    <case pos:start="3113:5" pos:end="3113:25">case <expr pos:start="3113:10" pos:end="3113:24"><name pos:start="3113:10" pos:end="3113:24">TARGET_NR_prctl</name></expr>:</case>

        <switch pos:start="3115:9" pos:end="3141:13">switch <condition pos:start="3115:16" pos:end="3115:21">(<expr pos:start="3115:17" pos:end="3115:20"><name pos:start="3115:17" pos:end="3115:20">arg1</name></expr>)</condition>

            <block pos:start="3117:13" pos:end="3141:13">{<block_content pos:start="3119:13" pos:end="3139:22">

            <case pos:start="3119:13" pos:end="3119:34">case <expr pos:start="3119:18" pos:end="3119:33"><name pos:start="3119:18" pos:end="3119:33">PR_GET_PDEATHSIG</name></expr>:</case>

                <block pos:start="3121:17" pos:end="3131:17">{<block_content pos:start="3123:21" pos:end="3129:47">

                    <decl_stmt pos:start="3123:21" pos:end="3123:33"><decl pos:start="3123:21" pos:end="3123:32"><type pos:start="3123:21" pos:end="3123:23"><name pos:start="3123:21" pos:end="3123:23">int</name></type> <name pos:start="3123:25" pos:end="3123:32">deathsig</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="3125:21" pos:end="3125:78"><expr pos:start="3125:21" pos:end="3125:77"><name pos:start="3125:21" pos:end="3125:23">ret</name> <operator pos:start="3125:25" pos:end="3125:25">=</operator> <call pos:start="3125:27" pos:end="3125:77"><name pos:start="3125:27" pos:end="3125:35">get_errno</name><argument_list pos:start="3125:36" pos:end="3125:77">(<argument pos:start="3125:37" pos:end="3125:76"><expr pos:start="3125:37" pos:end="3125:76"><call pos:start="3125:37" pos:end="3125:76"><name pos:start="3125:37" pos:end="3125:41">prctl</name><argument_list pos:start="3125:42" pos:end="3125:76">(<argument pos:start="3125:43" pos:end="3125:46"><expr pos:start="3125:43" pos:end="3125:46"><name pos:start="3125:43" pos:end="3125:46">arg1</name></expr></argument>, <argument pos:start="3125:49" pos:end="3125:57"><expr pos:start="3125:49" pos:end="3125:57"><operator pos:start="3125:49" pos:end="3125:49">&amp;</operator><name pos:start="3125:50" pos:end="3125:57">deathsig</name></expr></argument>, <argument pos:start="3125:60" pos:end="3125:63"><expr pos:start="3125:60" pos:end="3125:63"><name pos:start="3125:60" pos:end="3125:63">arg3</name></expr></argument>, <argument pos:start="3125:66" pos:end="3125:69"><expr pos:start="3125:66" pos:end="3125:69"><name pos:start="3125:66" pos:end="3125:69">arg4</name></expr></argument>, <argument pos:start="3125:72" pos:end="3125:75"><expr pos:start="3125:72" pos:end="3125:75"><name pos:start="3125:72" pos:end="3125:75">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="3127:21" pos:end="3129:47"><if pos:start="3127:21" pos:end="3129:47">if <condition pos:start="3127:24" pos:end="3127:47">(<expr pos:start="3127:25" pos:end="3127:46"><operator pos:start="3127:25" pos:end="3127:25">!</operator><call pos:start="3127:26" pos:end="3127:38"><name pos:start="3127:26" pos:end="3127:33">is_error</name><argument_list pos:start="3127:34" pos:end="3127:38">(<argument pos:start="3127:35" pos:end="3127:37"><expr pos:start="3127:35" pos:end="3127:37"><name pos:start="3127:35" pos:end="3127:37">ret</name></expr></argument>)</argument_list></call> <operator pos:start="3127:40" pos:end="3127:41">&amp;&amp;</operator> <name pos:start="3127:43" pos:end="3127:46">arg2</name></expr>)</condition><block type="pseudo" pos:start="3129:25" pos:end="3129:47"><block_content pos:start="3129:25" pos:end="3129:47">

                        <expr_stmt pos:start="3129:25" pos:end="3129:47"><expr pos:start="3129:25" pos:end="3129:46"><call pos:start="3129:25" pos:end="3129:46"><name pos:start="3129:25" pos:end="3129:30">tput32</name><argument_list pos:start="3129:31" pos:end="3129:46">(<argument pos:start="3129:32" pos:end="3129:35"><expr pos:start="3129:32" pos:end="3129:35"><name pos:start="3129:32" pos:end="3129:35">arg2</name></expr></argument>, <argument pos:start="3129:38" pos:end="3129:45"><expr pos:start="3129:38" pos:end="3129:45"><name pos:start="3129:38" pos:end="3129:45">deathsig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block>

                <break pos:start="3133:17" pos:end="3133:22">break;</break>

            <default pos:start="3135:13" pos:end="3135:20">default:</default>

                <expr_stmt pos:start="3137:17" pos:end="3137:69"><expr pos:start="3137:17" pos:end="3137:68"><name pos:start="3137:17" pos:end="3137:19">ret</name> <operator pos:start="3137:21" pos:end="3137:21">=</operator> <call pos:start="3137:23" pos:end="3137:68"><name pos:start="3137:23" pos:end="3137:31">get_errno</name><argument_list pos:start="3137:32" pos:end="3137:68">(<argument pos:start="3137:33" pos:end="3137:67"><expr pos:start="3137:33" pos:end="3137:67"><call pos:start="3137:33" pos:end="3137:67"><name pos:start="3137:33" pos:end="3137:37">prctl</name><argument_list pos:start="3137:38" pos:end="3137:67">(<argument pos:start="3137:39" pos:end="3137:42"><expr pos:start="3137:39" pos:end="3137:42"><name pos:start="3137:39" pos:end="3137:42">arg1</name></expr></argument>, <argument pos:start="3137:45" pos:end="3137:48"><expr pos:start="3137:45" pos:end="3137:48"><name pos:start="3137:45" pos:end="3137:48">arg2</name></expr></argument>, <argument pos:start="3137:51" pos:end="3137:54"><expr pos:start="3137:51" pos:end="3137:54"><name pos:start="3137:51" pos:end="3137:54">arg3</name></expr></argument>, <argument pos:start="3137:57" pos:end="3137:60"><expr pos:start="3137:57" pos:end="3137:60"><name pos:start="3137:57" pos:end="3137:60">arg4</name></expr></argument>, <argument pos:start="3137:63" pos:end="3137:66"><expr pos:start="3137:63" pos:end="3137:66"><name pos:start="3137:63" pos:end="3137:66">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="3139:17" pos:end="3139:22">break;</break>

            </block_content>}</block></switch>

        <break pos:start="3143:9" pos:end="3146:0">break;</break>

<cpp:ifdef pos:start="3145:1" pos:end="3145:22">#<cpp:directive pos:start="3145:2" pos:end="3145:6">ifdef</cpp:directive> <name pos:start="3145:8" pos:end="3145:22">TARGET_NR_pread</name></cpp:ifdef>

    <case pos:start="3147:5" pos:end="3147:25">case <expr pos:start="3147:10" pos:end="3147:24"><name pos:start="3147:10" pos:end="3147:24">TARGET_NR_pread</name></expr>:</case>

        <expr_stmt pos:start="3149:9" pos:end="3149:41"><expr pos:start="3149:9" pos:end="3149:40"><call pos:start="3149:9" pos:end="3149:40"><name pos:start="3149:9" pos:end="3149:28">page_unprotect_range</name><argument_list pos:start="3149:29" pos:end="3149:40">(<argument pos:start="3149:30" pos:end="3149:33"><expr pos:start="3149:30" pos:end="3149:33"><name pos:start="3149:30" pos:end="3149:33">arg2</name></expr></argument>, <argument pos:start="3149:36" pos:end="3149:39"><expr pos:start="3149:36" pos:end="3149:39"><name pos:start="3149:36" pos:end="3149:39">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3151:9" pos:end="3151:37"><expr pos:start="3151:9" pos:end="3151:36"><name pos:start="3151:9" pos:end="3151:9">p</name> <operator pos:start="3151:11" pos:end="3151:11">=</operator> <call pos:start="3151:13" pos:end="3151:36"><name pos:start="3151:13" pos:end="3151:21">lock_user</name><argument_list pos:start="3151:22" pos:end="3151:36">(<argument pos:start="3151:23" pos:end="3151:26"><expr pos:start="3151:23" pos:end="3151:26"><name pos:start="3151:23" pos:end="3151:26">arg2</name></expr></argument>, <argument pos:start="3151:29" pos:end="3151:32"><expr pos:start="3151:29" pos:end="3151:32"><name pos:start="3151:29" pos:end="3151:32">arg3</name></expr></argument>, <argument pos:start="3151:35" pos:end="3151:35"><expr pos:start="3151:35" pos:end="3151:35"><literal type="number" pos:start="3151:35" pos:end="3151:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3153:9" pos:end="3153:52"><expr pos:start="3153:9" pos:end="3153:51"><name pos:start="3153:9" pos:end="3153:11">ret</name> <operator pos:start="3153:13" pos:end="3153:13">=</operator> <call pos:start="3153:15" pos:end="3153:51"><name pos:start="3153:15" pos:end="3153:23">get_errno</name><argument_list pos:start="3153:24" pos:end="3153:51">(<argument pos:start="3153:25" pos:end="3153:50"><expr pos:start="3153:25" pos:end="3153:50"><call pos:start="3153:25" pos:end="3153:50"><name pos:start="3153:25" pos:end="3153:29">pread</name><argument_list pos:start="3153:30" pos:end="3153:50">(<argument pos:start="3153:31" pos:end="3153:34"><expr pos:start="3153:31" pos:end="3153:34"><name pos:start="3153:31" pos:end="3153:34">arg1</name></expr></argument>, <argument pos:start="3153:37" pos:end="3153:37"><expr pos:start="3153:37" pos:end="3153:37"><name pos:start="3153:37" pos:end="3153:37">p</name></expr></argument>, <argument pos:start="3153:40" pos:end="3153:43"><expr pos:start="3153:40" pos:end="3153:43"><name pos:start="3153:40" pos:end="3153:43">arg3</name></expr></argument>, <argument pos:start="3153:46" pos:end="3153:49"><expr pos:start="3153:46" pos:end="3153:49"><name pos:start="3153:46" pos:end="3153:49">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3155:9" pos:end="3155:34"><expr pos:start="3155:9" pos:end="3155:33"><call pos:start="3155:9" pos:end="3155:33"><name pos:start="3155:9" pos:end="3155:19">unlock_user</name><argument_list pos:start="3155:20" pos:end="3155:33">(<argument pos:start="3155:21" pos:end="3155:21"><expr pos:start="3155:21" pos:end="3155:21"><name pos:start="3155:21" pos:end="3155:21">p</name></expr></argument>, <argument pos:start="3155:24" pos:end="3155:27"><expr pos:start="3155:24" pos:end="3155:27"><name pos:start="3155:24" pos:end="3155:27">arg2</name></expr></argument>, <argument pos:start="3155:30" pos:end="3155:32"><expr pos:start="3155:30" pos:end="3155:32"><name pos:start="3155:30" pos:end="3155:32">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3157:9" pos:end="3157:14">break;</break>

    <case pos:start="3159:5" pos:end="3159:26">case <expr pos:start="3159:10" pos:end="3159:25"><name pos:start="3159:10" pos:end="3159:25">TARGET_NR_pwrite</name></expr>:</case>

        <expr_stmt pos:start="3161:9" pos:end="3161:37"><expr pos:start="3161:9" pos:end="3161:36"><name pos:start="3161:9" pos:end="3161:9">p</name> <operator pos:start="3161:11" pos:end="3161:11">=</operator> <call pos:start="3161:13" pos:end="3161:36"><name pos:start="3161:13" pos:end="3161:21">lock_user</name><argument_list pos:start="3161:22" pos:end="3161:36">(<argument pos:start="3161:23" pos:end="3161:26"><expr pos:start="3161:23" pos:end="3161:26"><name pos:start="3161:23" pos:end="3161:26">arg2</name></expr></argument>, <argument pos:start="3161:29" pos:end="3161:32"><expr pos:start="3161:29" pos:end="3161:32"><name pos:start="3161:29" pos:end="3161:32">arg3</name></expr></argument>, <argument pos:start="3161:35" pos:end="3161:35"><expr pos:start="3161:35" pos:end="3161:35"><literal type="number" pos:start="3161:35" pos:end="3161:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3163:9" pos:end="3163:53"><expr pos:start="3163:9" pos:end="3163:52"><name pos:start="3163:9" pos:end="3163:11">ret</name> <operator pos:start="3163:13" pos:end="3163:13">=</operator> <call pos:start="3163:15" pos:end="3163:52"><name pos:start="3163:15" pos:end="3163:23">get_errno</name><argument_list pos:start="3163:24" pos:end="3163:52">(<argument pos:start="3163:25" pos:end="3163:51"><expr pos:start="3163:25" pos:end="3163:51"><call pos:start="3163:25" pos:end="3163:51"><name pos:start="3163:25" pos:end="3163:30">pwrite</name><argument_list pos:start="3163:31" pos:end="3163:51">(<argument pos:start="3163:32" pos:end="3163:35"><expr pos:start="3163:32" pos:end="3163:35"><name pos:start="3163:32" pos:end="3163:35">arg1</name></expr></argument>, <argument pos:start="3163:38" pos:end="3163:38"><expr pos:start="3163:38" pos:end="3163:38"><name pos:start="3163:38" pos:end="3163:38">p</name></expr></argument>, <argument pos:start="3163:41" pos:end="3163:44"><expr pos:start="3163:41" pos:end="3163:44"><name pos:start="3163:41" pos:end="3163:44">arg3</name></expr></argument>, <argument pos:start="3163:47" pos:end="3163:50"><expr pos:start="3163:47" pos:end="3163:50"><name pos:start="3163:47" pos:end="3163:50">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3165:9" pos:end="3165:32"><expr pos:start="3165:9" pos:end="3165:31"><call pos:start="3165:9" pos:end="3165:31"><name pos:start="3165:9" pos:end="3165:19">unlock_user</name><argument_list pos:start="3165:20" pos:end="3165:31">(<argument pos:start="3165:21" pos:end="3165:21"><expr pos:start="3165:21" pos:end="3165:21"><name pos:start="3165:21" pos:end="3165:21">p</name></expr></argument>, <argument pos:start="3165:24" pos:end="3165:27"><expr pos:start="3165:24" pos:end="3165:27"><name pos:start="3165:24" pos:end="3165:27">arg2</name></expr></argument>, <argument pos:start="3165:30" pos:end="3165:30"><expr pos:start="3165:30" pos:end="3165:30"><literal type="number" pos:start="3165:30" pos:end="3165:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3167:9" pos:end="3170:0">break;</break>

<cpp:endif pos:start="3169:1" pos:end="3169:6">#<cpp:directive pos:start="3169:2" pos:end="3169:6">endif</cpp:directive></cpp:endif>

    <case pos:start="3171:5" pos:end="3171:26">case <expr pos:start="3171:10" pos:end="3171:25"><name pos:start="3171:10" pos:end="3171:25">TARGET_NR_getcwd</name></expr>:</case>

        <expr_stmt pos:start="3173:9" pos:end="3173:37"><expr pos:start="3173:9" pos:end="3173:36"><name pos:start="3173:9" pos:end="3173:9">p</name> <operator pos:start="3173:11" pos:end="3173:11">=</operator> <call pos:start="3173:13" pos:end="3173:36"><name pos:start="3173:13" pos:end="3173:21">lock_user</name><argument_list pos:start="3173:22" pos:end="3173:36">(<argument pos:start="3173:23" pos:end="3173:26"><expr pos:start="3173:23" pos:end="3173:26"><name pos:start="3173:23" pos:end="3173:26">arg1</name></expr></argument>, <argument pos:start="3173:29" pos:end="3173:32"><expr pos:start="3173:29" pos:end="3173:32"><name pos:start="3173:29" pos:end="3173:32">arg2</name></expr></argument>, <argument pos:start="3173:35" pos:end="3173:35"><expr pos:start="3173:35" pos:end="3173:35"><literal type="number" pos:start="3173:35" pos:end="3173:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3175:9" pos:end="3175:46"><expr pos:start="3175:9" pos:end="3175:45"><name pos:start="3175:9" pos:end="3175:11">ret</name> <operator pos:start="3175:13" pos:end="3175:13">=</operator> <call pos:start="3175:15" pos:end="3175:45"><name pos:start="3175:15" pos:end="3175:23">get_errno</name><argument_list pos:start="3175:24" pos:end="3175:45">(<argument pos:start="3175:25" pos:end="3175:44"><expr pos:start="3175:25" pos:end="3175:44"><call pos:start="3175:25" pos:end="3175:44"><name pos:start="3175:25" pos:end="3175:35">sys_getcwd1</name><argument_list pos:start="3175:36" pos:end="3175:44">(<argument pos:start="3175:37" pos:end="3175:37"><expr pos:start="3175:37" pos:end="3175:37"><name pos:start="3175:37" pos:end="3175:37">p</name></expr></argument>, <argument pos:start="3175:40" pos:end="3175:43"><expr pos:start="3175:40" pos:end="3175:43"><name pos:start="3175:40" pos:end="3175:43">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3177:9" pos:end="3177:34"><expr pos:start="3177:9" pos:end="3177:33"><call pos:start="3177:9" pos:end="3177:33"><name pos:start="3177:9" pos:end="3177:19">unlock_user</name><argument_list pos:start="3177:20" pos:end="3177:33">(<argument pos:start="3177:21" pos:end="3177:21"><expr pos:start="3177:21" pos:end="3177:21"><name pos:start="3177:21" pos:end="3177:21">p</name></expr></argument>, <argument pos:start="3177:24" pos:end="3177:27"><expr pos:start="3177:24" pos:end="3177:27"><name pos:start="3177:24" pos:end="3177:27">arg1</name></expr></argument>, <argument pos:start="3177:30" pos:end="3177:32"><expr pos:start="3177:30" pos:end="3177:32"><name pos:start="3177:30" pos:end="3177:32">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3179:9" pos:end="3179:14">break;</break>

    <case pos:start="3181:5" pos:end="3181:26">case <expr pos:start="3181:10" pos:end="3181:25"><name pos:start="3181:10" pos:end="3181:25">TARGET_NR_capget</name></expr>:</case>

        <goto pos:start="3183:9" pos:end="3183:27">goto <name pos:start="3183:14" pos:end="3183:26">unimplemented</name>;</goto>

    <case pos:start="3185:5" pos:end="3185:26">case <expr pos:start="3185:10" pos:end="3185:25"><name pos:start="3185:10" pos:end="3185:25">TARGET_NR_capset</name></expr>:</case>

        <goto pos:start="3187:9" pos:end="3187:27">goto <name pos:start="3187:14" pos:end="3187:26">unimplemented</name>;</goto>

    <case pos:start="3189:5" pos:end="3189:31">case <expr pos:start="3189:10" pos:end="3189:30"><name pos:start="3189:10" pos:end="3189:30">TARGET_NR_sigaltstack</name></expr>:</case>

        <goto pos:start="3191:9" pos:end="3191:27">goto <name pos:start="3191:14" pos:end="3191:26">unimplemented</name>;</goto>

    <case pos:start="3193:5" pos:end="3193:28">case <expr pos:start="3193:10" pos:end="3193:27"><name pos:start="3193:10" pos:end="3193:27">TARGET_NR_sendfile</name></expr>:</case>

        <goto pos:start="3195:9" pos:end="3198:0">goto <name pos:start="3195:14" pos:end="3195:26">unimplemented</name>;</goto>

<cpp:ifdef pos:start="3197:1" pos:end="3197:24">#<cpp:directive pos:start="3197:2" pos:end="3197:6">ifdef</cpp:directive> <name pos:start="3197:8" pos:end="3197:24">TARGET_NR_getpmsg</name></cpp:ifdef>

    <case pos:start="3199:5" pos:end="3199:27">case <expr pos:start="3199:10" pos:end="3199:26"><name pos:start="3199:10" pos:end="3199:26">TARGET_NR_getpmsg</name></expr>:</case>

        <goto pos:start="3201:9" pos:end="3206:0">goto <name pos:start="3201:14" pos:end="3201:26">unimplemented</name>;</goto>

<cpp:endif pos:start="3203:1" pos:end="3203:6">#<cpp:directive pos:start="3203:2" pos:end="3203:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3205:1" pos:end="3205:24">#<cpp:directive pos:start="3205:2" pos:end="3205:6">ifdef</cpp:directive> <name pos:start="3205:8" pos:end="3205:24">TARGET_NR_putpmsg</name></cpp:ifdef>

    <case pos:start="3207:5" pos:end="3207:27">case <expr pos:start="3207:10" pos:end="3207:26"><name pos:start="3207:10" pos:end="3207:26">TARGET_NR_putpmsg</name></expr>:</case>

        <goto pos:start="3209:9" pos:end="3214:0">goto <name pos:start="3209:14" pos:end="3209:26">unimplemented</name>;</goto>

<cpp:endif pos:start="3211:1" pos:end="3211:6">#<cpp:directive pos:start="3211:2" pos:end="3211:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3213:1" pos:end="3213:22">#<cpp:directive pos:start="3213:2" pos:end="3213:6">ifdef</cpp:directive> <name pos:start="3213:8" pos:end="3213:22">TARGET_NR_vfork</name></cpp:ifdef>

    <case pos:start="3215:5" pos:end="3215:25">case <expr pos:start="3215:10" pos:end="3215:24"><name pos:start="3215:10" pos:end="3215:24">TARGET_NR_vfork</name></expr>:</case>

        <expr_stmt pos:start="3217:9" pos:end="3217:79"><expr pos:start="3217:9" pos:end="3217:78"><name pos:start="3217:9" pos:end="3217:11">ret</name> <operator pos:start="3217:13" pos:end="3217:13">=</operator> <call pos:start="3217:15" pos:end="3217:78"><name pos:start="3217:15" pos:end="3217:23">get_errno</name><argument_list pos:start="3217:24" pos:end="3217:78">(<argument pos:start="3217:25" pos:end="3217:77"><expr pos:start="3217:25" pos:end="3217:77"><call pos:start="3217:25" pos:end="3217:77"><name pos:start="3217:25" pos:end="3217:31">do_fork</name><argument_list pos:start="3217:32" pos:end="3217:77">(<argument pos:start="3217:33" pos:end="3217:39"><expr pos:start="3217:33" pos:end="3217:39"><name pos:start="3217:33" pos:end="3217:39">cpu_env</name></expr></argument>, <argument pos:start="3217:42" pos:end="3217:73"><expr pos:start="3217:42" pos:end="3217:73"><name pos:start="3217:42" pos:end="3217:52">CLONE_VFORK</name> <operator pos:start="3217:54" pos:end="3217:54">|</operator> <name pos:start="3217:56" pos:end="3217:63">CLONE_VM</name> <operator pos:start="3217:65" pos:end="3217:65">|</operator> <name pos:start="3217:67" pos:end="3217:73">SIGCHLD</name></expr></argument>, <argument pos:start="3217:76" pos:end="3217:76"><expr pos:start="3217:76" pos:end="3217:76"><literal type="number" pos:start="3217:76" pos:end="3217:76">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3219:9" pos:end="3224:0">break;</break>

<cpp:endif pos:start="3221:1" pos:end="3221:6">#<cpp:directive pos:start="3221:2" pos:end="3221:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3223:1" pos:end="3223:27">#<cpp:directive pos:start="3223:2" pos:end="3223:6">ifdef</cpp:directive> <name pos:start="3223:8" pos:end="3223:27">TARGET_NR_ugetrlimit</name></cpp:ifdef>

    <case pos:start="3225:5" pos:end="3225:30">case <expr pos:start="3225:10" pos:end="3225:29"><name pos:start="3225:10" pos:end="3225:29">TARGET_NR_ugetrlimit</name></expr>:</case>

    <block pos:start="3227:5" pos:end="3254:0">{<block_content pos:start="3229:9" pos:end="3247:14">

	<decl_stmt pos:start="3229:9" pos:end="3229:27"><decl pos:start="3229:9" pos:end="3229:26"><type pos:start="3229:9" pos:end="3229:21"><name pos:start="3229:9" pos:end="3229:21"><name pos:start="3229:9" pos:end="3229:14">struct</name> <name pos:start="3229:16" pos:end="3229:21">rlimit</name></name></type> <name pos:start="3229:23" pos:end="3229:26">rlim</name></decl>;</decl_stmt>

	<expr_stmt pos:start="3231:9" pos:end="3231:48"><expr pos:start="3231:9" pos:end="3231:47"><name pos:start="3231:9" pos:end="3231:11">ret</name> <operator pos:start="3231:13" pos:end="3231:13">=</operator> <call pos:start="3231:15" pos:end="3231:47"><name pos:start="3231:15" pos:end="3231:23">get_errno</name><argument_list pos:start="3231:24" pos:end="3231:47">(<argument pos:start="3231:25" pos:end="3231:46"><expr pos:start="3231:25" pos:end="3231:46"><call pos:start="3231:25" pos:end="3231:46"><name pos:start="3231:25" pos:end="3231:33">getrlimit</name><argument_list pos:start="3231:34" pos:end="3231:46">(<argument pos:start="3231:35" pos:end="3231:38"><expr pos:start="3231:35" pos:end="3231:38"><name pos:start="3231:35" pos:end="3231:38">arg1</name></expr></argument>, <argument pos:start="3231:41" pos:end="3231:45"><expr pos:start="3231:41" pos:end="3231:45"><operator pos:start="3231:41" pos:end="3231:41">&amp;</operator><name pos:start="3231:42" pos:end="3231:45">rlim</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="3233:9" pos:end="3245:9"><if pos:start="3233:9" pos:end="3245:9">if <condition pos:start="3233:12" pos:end="3233:27">(<expr pos:start="3233:13" pos:end="3233:26"><operator pos:start="3233:13" pos:end="3233:13">!</operator><call pos:start="3233:14" pos:end="3233:26"><name pos:start="3233:14" pos:end="3233:21">is_error</name><argument_list pos:start="3233:22" pos:end="3233:26">(<argument pos:start="3233:23" pos:end="3233:25"><expr pos:start="3233:23" pos:end="3233:25"><name pos:start="3233:23" pos:end="3233:25">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3233:29" pos:end="3245:9">{<block_content pos:start="3235:13" pos:end="3243:53">

	    <decl_stmt pos:start="3235:13" pos:end="3235:46"><decl pos:start="3235:13" pos:end="3235:45"><type pos:start="3235:13" pos:end="3235:34"><name pos:start="3235:13" pos:end="3235:32"><name pos:start="3235:13" pos:end="3235:18">struct</name> <name pos:start="3235:20" pos:end="3235:32">target_rlimit</name></name> <modifier pos:start="3235:34" pos:end="3235:34">*</modifier></type><name pos:start="3235:35" pos:end="3235:45">target_rlim</name></decl>;</decl_stmt>

            <expr_stmt pos:start="3237:13" pos:end="3237:51"><expr pos:start="3237:13" pos:end="3237:50"><call pos:start="3237:13" pos:end="3237:50"><name pos:start="3237:13" pos:end="3237:28">lock_user_struct</name><argument_list pos:start="3237:29" pos:end="3237:50">(<argument pos:start="3237:30" pos:end="3237:40"><expr pos:start="3237:30" pos:end="3237:40"><name pos:start="3237:30" pos:end="3237:40">target_rlim</name></expr></argument>, <argument pos:start="3237:43" pos:end="3237:46"><expr pos:start="3237:43" pos:end="3237:46"><name pos:start="3237:43" pos:end="3237:46">arg2</name></expr></argument>, <argument pos:start="3237:49" pos:end="3237:49"><expr pos:start="3237:49" pos:end="3237:49"><literal type="number" pos:start="3237:49" pos:end="3237:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="3239:13" pos:end="3239:58"><expr pos:start="3239:13" pos:end="3239:57"><name pos:start="3239:13" pos:end="3239:33"><name pos:start="3239:13" pos:end="3239:23">target_rlim</name><operator pos:start="3239:24" pos:end="3239:25">-&gt;</operator><name pos:start="3239:26" pos:end="3239:33">rlim_cur</name></name> <operator pos:start="3239:35" pos:end="3239:35">=</operator> <call pos:start="3239:37" pos:end="3239:57"><name pos:start="3239:37" pos:end="3239:42">tswapl</name><argument_list pos:start="3239:43" pos:end="3239:57">(<argument pos:start="3239:44" pos:end="3239:56"><expr pos:start="3239:44" pos:end="3239:56"><name pos:start="3239:44" pos:end="3239:56"><name pos:start="3239:44" pos:end="3239:47">rlim</name><operator pos:start="3239:48" pos:end="3239:48">.</operator><name pos:start="3239:49" pos:end="3239:56">rlim_cur</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="3241:13" pos:end="3241:58"><expr pos:start="3241:13" pos:end="3241:57"><name pos:start="3241:13" pos:end="3241:33"><name pos:start="3241:13" pos:end="3241:23">target_rlim</name><operator pos:start="3241:24" pos:end="3241:25">-&gt;</operator><name pos:start="3241:26" pos:end="3241:33">rlim_max</name></name> <operator pos:start="3241:35" pos:end="3241:35">=</operator> <call pos:start="3241:37" pos:end="3241:57"><name pos:start="3241:37" pos:end="3241:42">tswapl</name><argument_list pos:start="3241:43" pos:end="3241:57">(<argument pos:start="3241:44" pos:end="3241:56"><expr pos:start="3241:44" pos:end="3241:56"><name pos:start="3241:44" pos:end="3241:56"><name pos:start="3241:44" pos:end="3241:47">rlim</name><operator pos:start="3241:48" pos:end="3241:48">.</operator><name pos:start="3241:49" pos:end="3241:56">rlim_max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3243:13" pos:end="3243:53"><expr pos:start="3243:13" pos:end="3243:52"><call pos:start="3243:13" pos:end="3243:52"><name pos:start="3243:13" pos:end="3243:30">unlock_user_struct</name><argument_list pos:start="3243:31" pos:end="3243:52">(<argument pos:start="3243:32" pos:end="3243:42"><expr pos:start="3243:32" pos:end="3243:42"><name pos:start="3243:32" pos:end="3243:42">target_rlim</name></expr></argument>, <argument pos:start="3243:45" pos:end="3243:48"><expr pos:start="3243:45" pos:end="3243:48"><name pos:start="3243:45" pos:end="3243:48">arg2</name></expr></argument>, <argument pos:start="3243:51" pos:end="3243:51"><expr pos:start="3243:51" pos:end="3243:51"><literal type="number" pos:start="3243:51" pos:end="3243:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

	<break pos:start="3247:9" pos:end="3247:14">break;</break>

    </block_content>}</block>

<cpp:endif pos:start="3251:1" pos:end="3251:6">#<cpp:directive pos:start="3251:2" pos:end="3251:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3253:1" pos:end="3253:27">#<cpp:directive pos:start="3253:2" pos:end="3253:6">ifdef</cpp:directive> <name pos:start="3253:8" pos:end="3253:27">TARGET_NR_truncate64</name></cpp:ifdef>

    <case pos:start="3255:5" pos:end="3255:30">case <expr pos:start="3255:10" pos:end="3255:29"><name pos:start="3255:10" pos:end="3255:29">TARGET_NR_truncate64</name></expr>:</case>

        <expr_stmt pos:start="3257:9" pos:end="3257:35"><expr pos:start="3257:9" pos:end="3257:34"><name pos:start="3257:9" pos:end="3257:9">p</name> <operator pos:start="3257:11" pos:end="3257:11">=</operator> <call pos:start="3257:13" pos:end="3257:34"><name pos:start="3257:13" pos:end="3257:28">lock_user_string</name><argument_list pos:start="3257:29" pos:end="3257:34">(<argument pos:start="3257:30" pos:end="3257:33"><expr pos:start="3257:30" pos:end="3257:33"><name pos:start="3257:30" pos:end="3257:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="3259:9" pos:end="3259:62"><expr pos:start="3259:9" pos:end="3259:61"><name pos:start="3259:9" pos:end="3259:11">ret</name> <operator pos:start="3259:13" pos:end="3259:13">=</operator> <call pos:start="3259:15" pos:end="3259:61"><name pos:start="3259:15" pos:end="3259:31">target_truncate64</name><argument_list pos:start="3259:32" pos:end="3259:61">(<argument pos:start="3259:33" pos:end="3259:39"><expr pos:start="3259:33" pos:end="3259:39"><name pos:start="3259:33" pos:end="3259:39">cpu_env</name></expr></argument>, <argument pos:start="3259:42" pos:end="3259:42"><expr pos:start="3259:42" pos:end="3259:42"><name pos:start="3259:42" pos:end="3259:42">p</name></expr></argument>, <argument pos:start="3259:45" pos:end="3259:48"><expr pos:start="3259:45" pos:end="3259:48"><name pos:start="3259:45" pos:end="3259:48">arg2</name></expr></argument>, <argument pos:start="3259:51" pos:end="3259:54"><expr pos:start="3259:51" pos:end="3259:54"><name pos:start="3259:51" pos:end="3259:54">arg3</name></expr></argument>, <argument pos:start="3259:57" pos:end="3259:60"><expr pos:start="3259:57" pos:end="3259:60"><name pos:start="3259:57" pos:end="3259:60">arg4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3261:9" pos:end="3261:32"><expr pos:start="3261:9" pos:end="3261:31"><call pos:start="3261:9" pos:end="3261:31"><name pos:start="3261:9" pos:end="3261:19">unlock_user</name><argument_list pos:start="3261:20" pos:end="3261:31">(<argument pos:start="3261:21" pos:end="3261:21"><expr pos:start="3261:21" pos:end="3261:21"><name pos:start="3261:21" pos:end="3261:21">p</name></expr></argument>, <argument pos:start="3261:24" pos:end="3261:27"><expr pos:start="3261:24" pos:end="3261:27"><name pos:start="3261:24" pos:end="3261:27">arg1</name></expr></argument>, <argument pos:start="3261:30" pos:end="3261:30"><expr pos:start="3261:30" pos:end="3261:30"><literal type="number" pos:start="3261:30" pos:end="3261:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="3263:9" pos:end="3268:0">break;</break>

<cpp:endif pos:start="3265:1" pos:end="3265:6">#<cpp:directive pos:start="3265:2" pos:end="3265:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3267:1" pos:end="3267:28">#<cpp:directive pos:start="3267:2" pos:end="3267:6">ifdef</cpp:directive> <name pos:start="3267:8" pos:end="3267:28">TARGET_NR_ftruncate64</name></cpp:ifdef>

    <case pos:start="3269:5" pos:end="3269:31">case <expr pos:start="3269:10" pos:end="3269:30"><name pos:start="3269:10" pos:end="3269:30">TARGET_NR_ftruncate64</name></expr>:</case>

	<expr_stmt pos:start="3271:9" pos:end="3271:66"><expr pos:start="3271:9" pos:end="3271:65"><name pos:start="3271:9" pos:end="3271:11">ret</name> <operator pos:start="3271:13" pos:end="3271:13">=</operator> <call pos:start="3271:15" pos:end="3271:65"><name pos:start="3271:15" pos:end="3271:32">target_ftruncate64</name><argument_list pos:start="3271:33" pos:end="3271:65">(<argument pos:start="3271:34" pos:end="3271:40"><expr pos:start="3271:34" pos:end="3271:40"><name pos:start="3271:34" pos:end="3271:40">cpu_env</name></expr></argument>, <argument pos:start="3271:43" pos:end="3271:46"><expr pos:start="3271:43" pos:end="3271:46"><name pos:start="3271:43" pos:end="3271:46">arg1</name></expr></argument>, <argument pos:start="3271:49" pos:end="3271:52"><expr pos:start="3271:49" pos:end="3271:52"><name pos:start="3271:49" pos:end="3271:52">arg2</name></expr></argument>, <argument pos:start="3271:55" pos:end="3271:58"><expr pos:start="3271:55" pos:end="3271:58"><name pos:start="3271:55" pos:end="3271:58">arg3</name></expr></argument>, <argument pos:start="3271:61" pos:end="3271:64"><expr pos:start="3271:61" pos:end="3271:64"><name pos:start="3271:61" pos:end="3271:64">arg4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="3273:9" pos:end="3278:0">break;</break>

<cpp:endif pos:start="3275:1" pos:end="3275:6">#<cpp:directive pos:start="3275:2" pos:end="3275:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3277:1" pos:end="3277:23">#<cpp:directive pos:start="3277:2" pos:end="3277:6">ifdef</cpp:directive> <name pos:start="3277:8" pos:end="3277:23">TARGET_NR_stat64</name></cpp:ifdef>

    <case pos:start="3279:5" pos:end="3279:26">case <expr pos:start="3279:10" pos:end="3279:25"><name pos:start="3279:10" pos:end="3279:25">TARGET_NR_stat64</name></expr>:</case>

        <expr_stmt pos:start="3281:9" pos:end="3281:35"><expr pos:start="3281:9" pos:end="3281:34"><name pos:start="3281:9" pos:end="3281:9">p</name> <operator pos:start="3281:11" pos:end="3281:11">=</operator> <call pos:start="3281:13" pos:end="3281:34"><name pos:start="3281:13" pos:end="3281:28">lock_user_string</name><argument_list pos:start="3281:29" pos:end="3281:34">(<argument pos:start="3281:30" pos:end="3281:33"><expr pos:start="3281:30" pos:end="3281:33"><name pos:start="3281:30" pos:end="3281:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3283:9" pos:end="3283:44"><expr pos:start="3283:9" pos:end="3283:43"><name pos:start="3283:9" pos:end="3283:11">ret</name> <operator pos:start="3283:13" pos:end="3283:13">=</operator> <call pos:start="3283:15" pos:end="3283:43"><name pos:start="3283:15" pos:end="3283:23">get_errno</name><argument_list pos:start="3283:24" pos:end="3283:43">(<argument pos:start="3283:25" pos:end="3283:42"><expr pos:start="3283:25" pos:end="3283:42"><call pos:start="3283:25" pos:end="3283:42"><name pos:start="3283:25" pos:end="3283:28">stat</name><argument_list pos:start="3283:29" pos:end="3283:42">(<argument pos:start="3283:30" pos:end="3283:36"><expr pos:start="3283:30" pos:end="3283:36"><call pos:start="3283:30" pos:end="3283:36"><name pos:start="3283:30" pos:end="3283:33">path</name><argument_list pos:start="3283:34" pos:end="3283:36">(<argument pos:start="3283:35" pos:end="3283:35"><expr pos:start="3283:35" pos:end="3283:35"><name pos:start="3283:35" pos:end="3283:35">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="3283:39" pos:end="3283:41"><expr pos:start="3283:39" pos:end="3283:41"><operator pos:start="3283:39" pos:end="3283:39">&amp;</operator><name pos:start="3283:40" pos:end="3283:41">st</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3285:9" pos:end="3285:32"><expr pos:start="3285:9" pos:end="3285:31"><call pos:start="3285:9" pos:end="3285:31"><name pos:start="3285:9" pos:end="3285:19">unlock_user</name><argument_list pos:start="3285:20" pos:end="3285:31">(<argument pos:start="3285:21" pos:end="3285:21"><expr pos:start="3285:21" pos:end="3285:21"><name pos:start="3285:21" pos:end="3285:21">p</name></expr></argument>, <argument pos:start="3285:24" pos:end="3285:27"><expr pos:start="3285:24" pos:end="3285:27"><name pos:start="3285:24" pos:end="3285:27">arg1</name></expr></argument>, <argument pos:start="3285:30" pos:end="3285:30"><expr pos:start="3285:30" pos:end="3285:30"><literal type="number" pos:start="3285:30" pos:end="3285:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="3287:9" pos:end="3292:0">goto <name pos:start="3287:14" pos:end="3287:22">do_stat64</name>;</goto>

<cpp:endif pos:start="3289:1" pos:end="3289:6">#<cpp:directive pos:start="3289:2" pos:end="3289:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3291:1" pos:end="3291:24">#<cpp:directive pos:start="3291:2" pos:end="3291:6">ifdef</cpp:directive> <name pos:start="3291:8" pos:end="3291:24">TARGET_NR_lstat64</name></cpp:ifdef>

    <case pos:start="3293:5" pos:end="3293:27">case <expr pos:start="3293:10" pos:end="3293:26"><name pos:start="3293:10" pos:end="3293:26">TARGET_NR_lstat64</name></expr>:</case>

        <expr_stmt pos:start="3295:9" pos:end="3295:35"><expr pos:start="3295:9" pos:end="3295:34"><name pos:start="3295:9" pos:end="3295:9">p</name> <operator pos:start="3295:11" pos:end="3295:11">=</operator> <call pos:start="3295:13" pos:end="3295:34"><name pos:start="3295:13" pos:end="3295:28">lock_user_string</name><argument_list pos:start="3295:29" pos:end="3295:34">(<argument pos:start="3295:30" pos:end="3295:33"><expr pos:start="3295:30" pos:end="3295:33"><name pos:start="3295:30" pos:end="3295:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3297:9" pos:end="3297:45"><expr pos:start="3297:9" pos:end="3297:44"><name pos:start="3297:9" pos:end="3297:11">ret</name> <operator pos:start="3297:13" pos:end="3297:13">=</operator> <call pos:start="3297:15" pos:end="3297:44"><name pos:start="3297:15" pos:end="3297:23">get_errno</name><argument_list pos:start="3297:24" pos:end="3297:44">(<argument pos:start="3297:25" pos:end="3297:43"><expr pos:start="3297:25" pos:end="3297:43"><call pos:start="3297:25" pos:end="3297:43"><name pos:start="3297:25" pos:end="3297:29">lstat</name><argument_list pos:start="3297:30" pos:end="3297:43">(<argument pos:start="3297:31" pos:end="3297:37"><expr pos:start="3297:31" pos:end="3297:37"><call pos:start="3297:31" pos:end="3297:37"><name pos:start="3297:31" pos:end="3297:34">path</name><argument_list pos:start="3297:35" pos:end="3297:37">(<argument pos:start="3297:36" pos:end="3297:36"><expr pos:start="3297:36" pos:end="3297:36"><name pos:start="3297:36" pos:end="3297:36">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="3297:40" pos:end="3297:42"><expr pos:start="3297:40" pos:end="3297:42"><operator pos:start="3297:40" pos:end="3297:40">&amp;</operator><name pos:start="3297:41" pos:end="3297:42">st</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3299:9" pos:end="3299:32"><expr pos:start="3299:9" pos:end="3299:31"><call pos:start="3299:9" pos:end="3299:31"><name pos:start="3299:9" pos:end="3299:19">unlock_user</name><argument_list pos:start="3299:20" pos:end="3299:31">(<argument pos:start="3299:21" pos:end="3299:21"><expr pos:start="3299:21" pos:end="3299:21"><name pos:start="3299:21" pos:end="3299:21">p</name></expr></argument>, <argument pos:start="3299:24" pos:end="3299:27"><expr pos:start="3299:24" pos:end="3299:27"><name pos:start="3299:24" pos:end="3299:27">arg1</name></expr></argument>, <argument pos:start="3299:30" pos:end="3299:30"><expr pos:start="3299:30" pos:end="3299:30"><literal type="number" pos:start="3299:30" pos:end="3299:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="3301:9" pos:end="3306:0">goto <name pos:start="3301:14" pos:end="3301:22">do_stat64</name>;</goto>

<cpp:endif pos:start="3303:1" pos:end="3303:6">#<cpp:directive pos:start="3303:2" pos:end="3303:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3305:1" pos:end="3305:24">#<cpp:directive pos:start="3305:2" pos:end="3305:6">ifdef</cpp:directive> <name pos:start="3305:8" pos:end="3305:24">TARGET_NR_fstat64</name></cpp:ifdef>

    <case pos:start="3307:5" pos:end="3307:27">case <expr pos:start="3307:10" pos:end="3307:26"><name pos:start="3307:10" pos:end="3307:26">TARGET_NR_fstat64</name></expr>:</case>

        <block pos:start="3309:9" pos:end="3419:9">{<block_content pos:start="3311:13" pos:end="3417:13">

            <expr_stmt pos:start="3311:13" pos:end="3311:46"><expr pos:start="3311:13" pos:end="3311:45"><name pos:start="3311:13" pos:end="3311:15">ret</name> <operator pos:start="3311:17" pos:end="3311:17">=</operator> <call pos:start="3311:19" pos:end="3311:45"><name pos:start="3311:19" pos:end="3311:27">get_errno</name><argument_list pos:start="3311:28" pos:end="3311:45">(<argument pos:start="3311:29" pos:end="3311:44"><expr pos:start="3311:29" pos:end="3311:44"><call pos:start="3311:29" pos:end="3311:44"><name pos:start="3311:29" pos:end="3311:33">fstat</name><argument_list pos:start="3311:34" pos:end="3311:44">(<argument pos:start="3311:35" pos:end="3311:38"><expr pos:start="3311:35" pos:end="3311:38"><name pos:start="3311:35" pos:end="3311:38">arg1</name></expr></argument>, <argument pos:start="3311:41" pos:end="3311:43"><expr pos:start="3311:41" pos:end="3311:43"><operator pos:start="3311:41" pos:end="3311:41">&amp;</operator><name pos:start="3311:42" pos:end="3311:43">st</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <label pos:start="3313:9" pos:end="3313:18"><name pos:start="3313:9" pos:end="3313:17">do_stat64</name>:</label>

            <if_stmt pos:start="3315:13" pos:end="3417:13"><if pos:start="3315:13" pos:end="3417:13">if <condition pos:start="3315:16" pos:end="3315:31">(<expr pos:start="3315:17" pos:end="3315:30"><operator pos:start="3315:17" pos:end="3315:17">!</operator><call pos:start="3315:18" pos:end="3315:30"><name pos:start="3315:18" pos:end="3315:25">is_error</name><argument_list pos:start="3315:26" pos:end="3315:30">(<argument pos:start="3315:27" pos:end="3315:29"><expr pos:start="3315:27" pos:end="3315:29"><name pos:start="3315:27" pos:end="3315:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3315:33" pos:end="3417:13">{<block_content pos:start="3319:17" pos:end="3415:17">

<cpp:ifdef pos:start="3317:1" pos:end="3317:17">#<cpp:directive pos:start="3317:2" pos:end="3317:6">ifdef</cpp:directive> <name pos:start="3317:8" pos:end="3317:17">TARGET_ARM</name></cpp:ifdef>

                <if_stmt pos:start="3319:17" pos:end="3415:17"><if pos:start="3319:17" pos:end="3365:17">if <condition pos:start="3319:20" pos:end="3319:51">(<expr pos:start="3319:21" pos:end="3319:50"><operator pos:start="3319:21" pos:end="3319:21">(</operator><operator pos:start="3319:22" pos:end="3319:22">(</operator><name pos:start="3319:23" pos:end="3319:33">CPUARMState</name> <operator pos:start="3319:35" pos:end="3319:35">*</operator><operator pos:start="3319:36" pos:end="3319:36">)</operator><name pos:start="3319:37" pos:end="3319:43">cpu_env</name><operator pos:start="3319:44" pos:end="3319:44">)</operator><operator pos:start="3319:45" pos:end="3319:46">-&gt;</operator><name pos:start="3319:47" pos:end="3319:50">eabi</name></expr>)</condition> <block pos:start="3319:53" pos:end="3365:17">{<block_content pos:start="3321:21" pos:end="3363:59">

                    <decl_stmt pos:start="3321:21" pos:end="3321:57"><decl pos:start="3321:21" pos:end="3321:56"><type pos:start="3321:21" pos:end="3321:47"><name pos:start="3321:21" pos:end="3321:45"><name pos:start="3321:21" pos:end="3321:26">struct</name> <name pos:start="3321:28" pos:end="3321:45">target_eabi_stat64</name></name> <modifier pos:start="3321:47" pos:end="3321:47">*</modifier></type><name pos:start="3321:48" pos:end="3321:56">target_st</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="3323:21" pos:end="3323:57"><expr pos:start="3323:21" pos:end="3323:56"><call pos:start="3323:21" pos:end="3323:56"><name pos:start="3323:21" pos:end="3323:36">lock_user_struct</name><argument_list pos:start="3323:37" pos:end="3323:56">(<argument pos:start="3323:38" pos:end="3323:46"><expr pos:start="3323:38" pos:end="3323:46"><name pos:start="3323:38" pos:end="3323:46">target_st</name></expr></argument>, <argument pos:start="3323:49" pos:end="3323:52"><expr pos:start="3323:49" pos:end="3323:52"><name pos:start="3323:49" pos:end="3323:52">arg2</name></expr></argument>, <argument pos:start="3323:55" pos:end="3323:55"><expr pos:start="3323:55" pos:end="3323:55"><literal type="number" pos:start="3323:55" pos:end="3323:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3325:21" pos:end="3325:76"><expr pos:start="3325:21" pos:end="3325:75"><call pos:start="3325:21" pos:end="3325:75"><name pos:start="3325:21" pos:end="3325:26">memset</name><argument_list pos:start="3325:27" pos:end="3325:75">(<argument pos:start="3325:28" pos:end="3325:36"><expr pos:start="3325:28" pos:end="3325:36"><name pos:start="3325:28" pos:end="3325:36">target_st</name></expr></argument>, <argument pos:start="3325:39" pos:end="3325:39"><expr pos:start="3325:39" pos:end="3325:39"><literal type="number" pos:start="3325:39" pos:end="3325:39">0</literal></expr></argument>, <argument pos:start="3325:42" pos:end="3325:74"><expr pos:start="3325:42" pos:end="3325:74"><sizeof pos:start="3325:42" pos:end="3325:74">sizeof<argument_list pos:start="3325:48" pos:end="3325:74">(<argument pos:start="3325:49" pos:end="3325:73"><expr pos:start="3325:49" pos:end="3325:73">struct <name pos:start="3325:56" pos:end="3325:73">target_eabi_stat64</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="3327:21" pos:end="3327:54">/* put_user is probably wrong.  */</comment>

                    <expr_stmt pos:start="3329:21" pos:end="3329:60"><expr pos:start="3329:21" pos:end="3329:59"><call pos:start="3329:21" pos:end="3329:59"><name pos:start="3329:21" pos:end="3329:28">put_user</name><argument_list pos:start="3329:29" pos:end="3329:59">(<argument pos:start="3329:30" pos:end="3329:38"><expr pos:start="3329:30" pos:end="3329:38"><name pos:start="3329:30" pos:end="3329:38"><name pos:start="3329:30" pos:end="3329:31">st</name><operator pos:start="3329:32" pos:end="3329:32">.</operator><name pos:start="3329:33" pos:end="3329:38">st_dev</name></name></expr></argument>, <argument pos:start="3329:41" pos:end="3329:58"><expr pos:start="3329:41" pos:end="3329:58"><operator pos:start="3329:41" pos:end="3329:41">&amp;</operator><name pos:start="3329:42" pos:end="3329:58"><name pos:start="3329:42" pos:end="3329:50">target_st</name><operator pos:start="3329:51" pos:end="3329:52">-&gt;</operator><name pos:start="3329:53" pos:end="3329:58">st_dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3331:21" pos:end="3334:0"><expr pos:start="3331:21" pos:end="3331:59"><call pos:start="3331:21" pos:end="3331:59"><name pos:start="3331:21" pos:end="3331:28">put_user</name><argument_list pos:start="3331:29" pos:end="3331:59">(<argument pos:start="3331:30" pos:end="3331:38"><expr pos:start="3331:30" pos:end="3331:38"><name pos:start="3331:30" pos:end="3331:38"><name pos:start="3331:30" pos:end="3331:31">st</name><operator pos:start="3331:32" pos:end="3331:32">.</operator><name pos:start="3331:33" pos:end="3331:38">st_ino</name></name></expr></argument>, <argument pos:start="3331:41" pos:end="3331:58"><expr pos:start="3331:41" pos:end="3331:58"><operator pos:start="3331:41" pos:end="3331:41">&amp;</operator><name pos:start="3331:42" pos:end="3331:58"><name pos:start="3331:42" pos:end="3331:50">target_st</name><operator pos:start="3331:51" pos:end="3331:52">-&gt;</operator><name pos:start="3331:53" pos:end="3331:58">st_ino</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="3333:1" pos:end="3333:38">#<cpp:directive pos:start="3333:2" pos:end="3333:6">ifdef</cpp:directive> <name pos:start="3333:8" pos:end="3333:38">TARGET_STAT64_HAS_BROKEN_ST_INO</name></cpp:ifdef>

                    <expr_stmt pos:start="3335:21" pos:end="3338:0"><expr pos:start="3335:21" pos:end="3335:61"><call pos:start="3335:21" pos:end="3335:61"><name pos:start="3335:21" pos:end="3335:28">put_user</name><argument_list pos:start="3335:29" pos:end="3335:61">(<argument pos:start="3335:30" pos:end="3335:38"><expr pos:start="3335:30" pos:end="3335:38"><name pos:start="3335:30" pos:end="3335:38"><name pos:start="3335:30" pos:end="3335:31">st</name><operator pos:start="3335:32" pos:end="3335:32">.</operator><name pos:start="3335:33" pos:end="3335:38">st_ino</name></name></expr></argument>, <argument pos:start="3335:41" pos:end="3335:60"><expr pos:start="3335:41" pos:end="3335:60"><operator pos:start="3335:41" pos:end="3335:41">&amp;</operator><name pos:start="3335:42" pos:end="3335:60"><name pos:start="3335:42" pos:end="3335:50">target_st</name><operator pos:start="3335:51" pos:end="3335:52">-&gt;</operator><name pos:start="3335:53" pos:end="3335:60">__st_ino</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="3337:1" pos:end="3337:6">#<cpp:directive pos:start="3337:2" pos:end="3337:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3339:21" pos:end="3339:62"><expr pos:start="3339:21" pos:end="3339:61"><call pos:start="3339:21" pos:end="3339:61"><name pos:start="3339:21" pos:end="3339:28">put_user</name><argument_list pos:start="3339:29" pos:end="3339:61">(<argument pos:start="3339:30" pos:end="3339:39"><expr pos:start="3339:30" pos:end="3339:39"><name pos:start="3339:30" pos:end="3339:39"><name pos:start="3339:30" pos:end="3339:31">st</name><operator pos:start="3339:32" pos:end="3339:32">.</operator><name pos:start="3339:33" pos:end="3339:39">st_mode</name></name></expr></argument>, <argument pos:start="3339:42" pos:end="3339:60"><expr pos:start="3339:42" pos:end="3339:60"><operator pos:start="3339:42" pos:end="3339:42">&amp;</operator><name pos:start="3339:43" pos:end="3339:60"><name pos:start="3339:43" pos:end="3339:51">target_st</name><operator pos:start="3339:52" pos:end="3339:53">-&gt;</operator><name pos:start="3339:54" pos:end="3339:60">st_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3341:21" pos:end="3341:64"><expr pos:start="3341:21" pos:end="3341:63"><call pos:start="3341:21" pos:end="3341:63"><name pos:start="3341:21" pos:end="3341:28">put_user</name><argument_list pos:start="3341:29" pos:end="3341:63">(<argument pos:start="3341:30" pos:end="3341:40"><expr pos:start="3341:30" pos:end="3341:40"><name pos:start="3341:30" pos:end="3341:40"><name pos:start="3341:30" pos:end="3341:31">st</name><operator pos:start="3341:32" pos:end="3341:32">.</operator><name pos:start="3341:33" pos:end="3341:40">st_nlink</name></name></expr></argument>, <argument pos:start="3341:43" pos:end="3341:62"><expr pos:start="3341:43" pos:end="3341:62"><operator pos:start="3341:43" pos:end="3341:43">&amp;</operator><name pos:start="3341:44" pos:end="3341:62"><name pos:start="3341:44" pos:end="3341:52">target_st</name><operator pos:start="3341:53" pos:end="3341:54">-&gt;</operator><name pos:start="3341:55" pos:end="3341:62">st_nlink</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3343:21" pos:end="3343:60"><expr pos:start="3343:21" pos:end="3343:59"><call pos:start="3343:21" pos:end="3343:59"><name pos:start="3343:21" pos:end="3343:28">put_user</name><argument_list pos:start="3343:29" pos:end="3343:59">(<argument pos:start="3343:30" pos:end="3343:38"><expr pos:start="3343:30" pos:end="3343:38"><name pos:start="3343:30" pos:end="3343:38"><name pos:start="3343:30" pos:end="3343:31">st</name><operator pos:start="3343:32" pos:end="3343:32">.</operator><name pos:start="3343:33" pos:end="3343:38">st_uid</name></name></expr></argument>, <argument pos:start="3343:41" pos:end="3343:58"><expr pos:start="3343:41" pos:end="3343:58"><operator pos:start="3343:41" pos:end="3343:41">&amp;</operator><name pos:start="3343:42" pos:end="3343:58"><name pos:start="3343:42" pos:end="3343:50">target_st</name><operator pos:start="3343:51" pos:end="3343:52">-&gt;</operator><name pos:start="3343:53" pos:end="3343:58">st_uid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3345:21" pos:end="3345:60"><expr pos:start="3345:21" pos:end="3345:59"><call pos:start="3345:21" pos:end="3345:59"><name pos:start="3345:21" pos:end="3345:28">put_user</name><argument_list pos:start="3345:29" pos:end="3345:59">(<argument pos:start="3345:30" pos:end="3345:38"><expr pos:start="3345:30" pos:end="3345:38"><name pos:start="3345:30" pos:end="3345:38"><name pos:start="3345:30" pos:end="3345:31">st</name><operator pos:start="3345:32" pos:end="3345:32">.</operator><name pos:start="3345:33" pos:end="3345:38">st_gid</name></name></expr></argument>, <argument pos:start="3345:41" pos:end="3345:58"><expr pos:start="3345:41" pos:end="3345:58"><operator pos:start="3345:41" pos:end="3345:41">&amp;</operator><name pos:start="3345:42" pos:end="3345:58"><name pos:start="3345:42" pos:end="3345:50">target_st</name><operator pos:start="3345:51" pos:end="3345:52">-&gt;</operator><name pos:start="3345:53" pos:end="3345:58">st_gid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3347:21" pos:end="3347:62"><expr pos:start="3347:21" pos:end="3347:61"><call pos:start="3347:21" pos:end="3347:61"><name pos:start="3347:21" pos:end="3347:28">put_user</name><argument_list pos:start="3347:29" pos:end="3347:61">(<argument pos:start="3347:30" pos:end="3347:39"><expr pos:start="3347:30" pos:end="3347:39"><name pos:start="3347:30" pos:end="3347:39"><name pos:start="3347:30" pos:end="3347:31">st</name><operator pos:start="3347:32" pos:end="3347:32">.</operator><name pos:start="3347:33" pos:end="3347:39">st_rdev</name></name></expr></argument>, <argument pos:start="3347:42" pos:end="3347:60"><expr pos:start="3347:42" pos:end="3347:60"><operator pos:start="3347:42" pos:end="3347:42">&amp;</operator><name pos:start="3347:43" pos:end="3347:60"><name pos:start="3347:43" pos:end="3347:51">target_st</name><operator pos:start="3347:52" pos:end="3347:53">-&gt;</operator><name pos:start="3347:54" pos:end="3347:60">st_rdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="3349:21" pos:end="3349:58">/* XXX: better use of kernel struct */</comment>

                    <expr_stmt pos:start="3351:21" pos:end="3351:62"><expr pos:start="3351:21" pos:end="3351:61"><call pos:start="3351:21" pos:end="3351:61"><name pos:start="3351:21" pos:end="3351:28">put_user</name><argument_list pos:start="3351:29" pos:end="3351:61">(<argument pos:start="3351:30" pos:end="3351:39"><expr pos:start="3351:30" pos:end="3351:39"><name pos:start="3351:30" pos:end="3351:39"><name pos:start="3351:30" pos:end="3351:31">st</name><operator pos:start="3351:32" pos:end="3351:32">.</operator><name pos:start="3351:33" pos:end="3351:39">st_size</name></name></expr></argument>, <argument pos:start="3351:42" pos:end="3351:60"><expr pos:start="3351:42" pos:end="3351:60"><operator pos:start="3351:42" pos:end="3351:42">&amp;</operator><name pos:start="3351:43" pos:end="3351:60"><name pos:start="3351:43" pos:end="3351:51">target_st</name><operator pos:start="3351:52" pos:end="3351:53">-&gt;</operator><name pos:start="3351:54" pos:end="3351:60">st_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3353:21" pos:end="3353:68"><expr pos:start="3353:21" pos:end="3353:67"><call pos:start="3353:21" pos:end="3353:67"><name pos:start="3353:21" pos:end="3353:28">put_user</name><argument_list pos:start="3353:29" pos:end="3353:67">(<argument pos:start="3353:30" pos:end="3353:42"><expr pos:start="3353:30" pos:end="3353:42"><name pos:start="3353:30" pos:end="3353:42"><name pos:start="3353:30" pos:end="3353:31">st</name><operator pos:start="3353:32" pos:end="3353:32">.</operator><name pos:start="3353:33" pos:end="3353:42">st_blksize</name></name></expr></argument>, <argument pos:start="3353:45" pos:end="3353:66"><expr pos:start="3353:45" pos:end="3353:66"><operator pos:start="3353:45" pos:end="3353:45">&amp;</operator><name pos:start="3353:46" pos:end="3353:66"><name pos:start="3353:46" pos:end="3353:54">target_st</name><operator pos:start="3353:55" pos:end="3353:56">-&gt;</operator><name pos:start="3353:57" pos:end="3353:66">st_blksize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3355:21" pos:end="3355:66"><expr pos:start="3355:21" pos:end="3355:65"><call pos:start="3355:21" pos:end="3355:65"><name pos:start="3355:21" pos:end="3355:28">put_user</name><argument_list pos:start="3355:29" pos:end="3355:65">(<argument pos:start="3355:30" pos:end="3355:41"><expr pos:start="3355:30" pos:end="3355:41"><name pos:start="3355:30" pos:end="3355:41"><name pos:start="3355:30" pos:end="3355:31">st</name><operator pos:start="3355:32" pos:end="3355:32">.</operator><name pos:start="3355:33" pos:end="3355:41">st_blocks</name></name></expr></argument>, <argument pos:start="3355:44" pos:end="3355:64"><expr pos:start="3355:44" pos:end="3355:64"><operator pos:start="3355:44" pos:end="3355:44">&amp;</operator><name pos:start="3355:45" pos:end="3355:64"><name pos:start="3355:45" pos:end="3355:53">target_st</name><operator pos:start="3355:54" pos:end="3355:55">-&gt;</operator><name pos:start="3355:56" pos:end="3355:64">st_blocks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3357:21" pos:end="3357:71"><expr pos:start="3357:21" pos:end="3357:70"><call pos:start="3357:21" pos:end="3357:70"><name pos:start="3357:21" pos:end="3357:28">put_user</name><argument_list pos:start="3357:29" pos:end="3357:70">(<argument pos:start="3357:30" pos:end="3357:40"><expr pos:start="3357:30" pos:end="3357:40"><name pos:start="3357:30" pos:end="3357:40"><name pos:start="3357:30" pos:end="3357:31">st</name><operator pos:start="3357:32" pos:end="3357:32">.</operator><name pos:start="3357:33" pos:end="3357:40">st_atime</name></name></expr></argument>, <argument pos:start="3357:43" pos:end="3357:69"><expr pos:start="3357:43" pos:end="3357:69"><operator pos:start="3357:43" pos:end="3357:43">&amp;</operator><name pos:start="3357:44" pos:end="3357:69"><name pos:start="3357:44" pos:end="3357:52">target_st</name><operator pos:start="3357:53" pos:end="3357:54">-&gt;</operator><name pos:start="3357:55" pos:end="3357:69">target_st_atime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3359:21" pos:end="3359:71"><expr pos:start="3359:21" pos:end="3359:70"><call pos:start="3359:21" pos:end="3359:70"><name pos:start="3359:21" pos:end="3359:28">put_user</name><argument_list pos:start="3359:29" pos:end="3359:70">(<argument pos:start="3359:30" pos:end="3359:40"><expr pos:start="3359:30" pos:end="3359:40"><name pos:start="3359:30" pos:end="3359:40"><name pos:start="3359:30" pos:end="3359:31">st</name><operator pos:start="3359:32" pos:end="3359:32">.</operator><name pos:start="3359:33" pos:end="3359:40">st_mtime</name></name></expr></argument>, <argument pos:start="3359:43" pos:end="3359:69"><expr pos:start="3359:43" pos:end="3359:69"><operator pos:start="3359:43" pos:end="3359:43">&amp;</operator><name pos:start="3359:44" pos:end="3359:69"><name pos:start="3359:44" pos:end="3359:52">target_st</name><operator pos:start="3359:53" pos:end="3359:54">-&gt;</operator><name pos:start="3359:55" pos:end="3359:69">target_st_mtime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3361:21" pos:end="3361:71"><expr pos:start="3361:21" pos:end="3361:70"><call pos:start="3361:21" pos:end="3361:70"><name pos:start="3361:21" pos:end="3361:28">put_user</name><argument_list pos:start="3361:29" pos:end="3361:70">(<argument pos:start="3361:30" pos:end="3361:40"><expr pos:start="3361:30" pos:end="3361:40"><name pos:start="3361:30" pos:end="3361:40"><name pos:start="3361:30" pos:end="3361:31">st</name><operator pos:start="3361:32" pos:end="3361:32">.</operator><name pos:start="3361:33" pos:end="3361:40">st_ctime</name></name></expr></argument>, <argument pos:start="3361:43" pos:end="3361:69"><expr pos:start="3361:43" pos:end="3361:69"><operator pos:start="3361:43" pos:end="3361:43">&amp;</operator><name pos:start="3361:44" pos:end="3361:69"><name pos:start="3361:44" pos:end="3361:52">target_st</name><operator pos:start="3361:53" pos:end="3361:54">-&gt;</operator><name pos:start="3361:55" pos:end="3361:69">target_st_ctime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3363:21" pos:end="3363:59"><expr pos:start="3363:21" pos:end="3363:58"><call pos:start="3363:21" pos:end="3363:58"><name pos:start="3363:21" pos:end="3363:38">unlock_user_struct</name><argument_list pos:start="3363:39" pos:end="3363:58">(<argument pos:start="3363:40" pos:end="3363:48"><expr pos:start="3363:40" pos:end="3363:48"><name pos:start="3363:40" pos:end="3363:48">target_st</name></expr></argument>, <argument pos:start="3363:51" pos:end="3363:54"><expr pos:start="3363:51" pos:end="3363:54"><name pos:start="3363:51" pos:end="3363:54">arg2</name></expr></argument>, <argument pos:start="3363:57" pos:end="3363:57"><expr pos:start="3363:57" pos:end="3363:57"><literal type="number" pos:start="3363:57" pos:end="3363:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="3365:19" pos:end="3415:17">else

<cpp:endif pos:start="3367:1" pos:end="3367:6">#<cpp:directive pos:start="3367:2" pos:end="3367:6">endif</cpp:directive></cpp:endif>

                <block pos:start="3369:17" pos:end="3415:17">{<block_content pos:start="3371:21" pos:end="3413:59">

                    <decl_stmt pos:start="3371:21" pos:end="3371:52"><decl pos:start="3371:21" pos:end="3371:51"><type pos:start="3371:21" pos:end="3371:42"><name pos:start="3371:21" pos:end="3371:40"><name pos:start="3371:21" pos:end="3371:26">struct</name> <name pos:start="3371:28" pos:end="3371:40">target_stat64</name></name> <modifier pos:start="3371:42" pos:end="3371:42">*</modifier></type><name pos:start="3371:43" pos:end="3371:51">target_st</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="3373:21" pos:end="3373:57"><expr pos:start="3373:21" pos:end="3373:56"><call pos:start="3373:21" pos:end="3373:56"><name pos:start="3373:21" pos:end="3373:36">lock_user_struct</name><argument_list pos:start="3373:37" pos:end="3373:56">(<argument pos:start="3373:38" pos:end="3373:46"><expr pos:start="3373:38" pos:end="3373:46"><name pos:start="3373:38" pos:end="3373:46">target_st</name></expr></argument>, <argument pos:start="3373:49" pos:end="3373:52"><expr pos:start="3373:49" pos:end="3373:52"><name pos:start="3373:49" pos:end="3373:52">arg2</name></expr></argument>, <argument pos:start="3373:55" pos:end="3373:55"><expr pos:start="3373:55" pos:end="3373:55"><literal type="number" pos:start="3373:55" pos:end="3373:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3375:21" pos:end="3375:71"><expr pos:start="3375:21" pos:end="3375:70"><call pos:start="3375:21" pos:end="3375:70"><name pos:start="3375:21" pos:end="3375:26">memset</name><argument_list pos:start="3375:27" pos:end="3375:70">(<argument pos:start="3375:28" pos:end="3375:36"><expr pos:start="3375:28" pos:end="3375:36"><name pos:start="3375:28" pos:end="3375:36">target_st</name></expr></argument>, <argument pos:start="3375:39" pos:end="3375:39"><expr pos:start="3375:39" pos:end="3375:39"><literal type="number" pos:start="3375:39" pos:end="3375:39">0</literal></expr></argument>, <argument pos:start="3375:42" pos:end="3375:69"><expr pos:start="3375:42" pos:end="3375:69"><sizeof pos:start="3375:42" pos:end="3375:69">sizeof<argument_list pos:start="3375:48" pos:end="3375:69">(<argument pos:start="3375:49" pos:end="3375:68"><expr pos:start="3375:49" pos:end="3375:68">struct <name pos:start="3375:56" pos:end="3375:68">target_stat64</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="3377:21" pos:end="3377:58">/* ??? put_user is probably wrong.  */</comment>

                    <expr_stmt pos:start="3379:21" pos:end="3379:60"><expr pos:start="3379:21" pos:end="3379:59"><call pos:start="3379:21" pos:end="3379:59"><name pos:start="3379:21" pos:end="3379:28">put_user</name><argument_list pos:start="3379:29" pos:end="3379:59">(<argument pos:start="3379:30" pos:end="3379:38"><expr pos:start="3379:30" pos:end="3379:38"><name pos:start="3379:30" pos:end="3379:38"><name pos:start="3379:30" pos:end="3379:31">st</name><operator pos:start="3379:32" pos:end="3379:32">.</operator><name pos:start="3379:33" pos:end="3379:38">st_dev</name></name></expr></argument>, <argument pos:start="3379:41" pos:end="3379:58"><expr pos:start="3379:41" pos:end="3379:58"><operator pos:start="3379:41" pos:end="3379:41">&amp;</operator><name pos:start="3379:42" pos:end="3379:58"><name pos:start="3379:42" pos:end="3379:50">target_st</name><operator pos:start="3379:51" pos:end="3379:52">-&gt;</operator><name pos:start="3379:53" pos:end="3379:58">st_dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3381:21" pos:end="3384:0"><expr pos:start="3381:21" pos:end="3381:59"><call pos:start="3381:21" pos:end="3381:59"><name pos:start="3381:21" pos:end="3381:28">put_user</name><argument_list pos:start="3381:29" pos:end="3381:59">(<argument pos:start="3381:30" pos:end="3381:38"><expr pos:start="3381:30" pos:end="3381:38"><name pos:start="3381:30" pos:end="3381:38"><name pos:start="3381:30" pos:end="3381:31">st</name><operator pos:start="3381:32" pos:end="3381:32">.</operator><name pos:start="3381:33" pos:end="3381:38">st_ino</name></name></expr></argument>, <argument pos:start="3381:41" pos:end="3381:58"><expr pos:start="3381:41" pos:end="3381:58"><operator pos:start="3381:41" pos:end="3381:41">&amp;</operator><name pos:start="3381:42" pos:end="3381:58"><name pos:start="3381:42" pos:end="3381:50">target_st</name><operator pos:start="3381:51" pos:end="3381:52">-&gt;</operator><name pos:start="3381:53" pos:end="3381:58">st_ino</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="3383:1" pos:end="3383:38">#<cpp:directive pos:start="3383:2" pos:end="3383:6">ifdef</cpp:directive> <name pos:start="3383:8" pos:end="3383:38">TARGET_STAT64_HAS_BROKEN_ST_INO</name></cpp:ifdef>

                    <expr_stmt pos:start="3385:21" pos:end="3388:0"><expr pos:start="3385:21" pos:end="3385:61"><call pos:start="3385:21" pos:end="3385:61"><name pos:start="3385:21" pos:end="3385:28">put_user</name><argument_list pos:start="3385:29" pos:end="3385:61">(<argument pos:start="3385:30" pos:end="3385:38"><expr pos:start="3385:30" pos:end="3385:38"><name pos:start="3385:30" pos:end="3385:38"><name pos:start="3385:30" pos:end="3385:31">st</name><operator pos:start="3385:32" pos:end="3385:32">.</operator><name pos:start="3385:33" pos:end="3385:38">st_ino</name></name></expr></argument>, <argument pos:start="3385:41" pos:end="3385:60"><expr pos:start="3385:41" pos:end="3385:60"><operator pos:start="3385:41" pos:end="3385:41">&amp;</operator><name pos:start="3385:42" pos:end="3385:60"><name pos:start="3385:42" pos:end="3385:50">target_st</name><operator pos:start="3385:51" pos:end="3385:52">-&gt;</operator><name pos:start="3385:53" pos:end="3385:60">__st_ino</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="3387:1" pos:end="3387:6">#<cpp:directive pos:start="3387:2" pos:end="3387:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="3389:21" pos:end="3389:62"><expr pos:start="3389:21" pos:end="3389:61"><call pos:start="3389:21" pos:end="3389:61"><name pos:start="3389:21" pos:end="3389:28">put_user</name><argument_list pos:start="3389:29" pos:end="3389:61">(<argument pos:start="3389:30" pos:end="3389:39"><expr pos:start="3389:30" pos:end="3389:39"><name pos:start="3389:30" pos:end="3389:39"><name pos:start="3389:30" pos:end="3389:31">st</name><operator pos:start="3389:32" pos:end="3389:32">.</operator><name pos:start="3389:33" pos:end="3389:39">st_mode</name></name></expr></argument>, <argument pos:start="3389:42" pos:end="3389:60"><expr pos:start="3389:42" pos:end="3389:60"><operator pos:start="3389:42" pos:end="3389:42">&amp;</operator><name pos:start="3389:43" pos:end="3389:60"><name pos:start="3389:43" pos:end="3389:51">target_st</name><operator pos:start="3389:52" pos:end="3389:53">-&gt;</operator><name pos:start="3389:54" pos:end="3389:60">st_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3391:21" pos:end="3391:64"><expr pos:start="3391:21" pos:end="3391:63"><call pos:start="3391:21" pos:end="3391:63"><name pos:start="3391:21" pos:end="3391:28">put_user</name><argument_list pos:start="3391:29" pos:end="3391:63">(<argument pos:start="3391:30" pos:end="3391:40"><expr pos:start="3391:30" pos:end="3391:40"><name pos:start="3391:30" pos:end="3391:40"><name pos:start="3391:30" pos:end="3391:31">st</name><operator pos:start="3391:32" pos:end="3391:32">.</operator><name pos:start="3391:33" pos:end="3391:40">st_nlink</name></name></expr></argument>, <argument pos:start="3391:43" pos:end="3391:62"><expr pos:start="3391:43" pos:end="3391:62"><operator pos:start="3391:43" pos:end="3391:43">&amp;</operator><name pos:start="3391:44" pos:end="3391:62"><name pos:start="3391:44" pos:end="3391:52">target_st</name><operator pos:start="3391:53" pos:end="3391:54">-&gt;</operator><name pos:start="3391:55" pos:end="3391:62">st_nlink</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3393:21" pos:end="3393:60"><expr pos:start="3393:21" pos:end="3393:59"><call pos:start="3393:21" pos:end="3393:59"><name pos:start="3393:21" pos:end="3393:28">put_user</name><argument_list pos:start="3393:29" pos:end="3393:59">(<argument pos:start="3393:30" pos:end="3393:38"><expr pos:start="3393:30" pos:end="3393:38"><name pos:start="3393:30" pos:end="3393:38"><name pos:start="3393:30" pos:end="3393:31">st</name><operator pos:start="3393:32" pos:end="3393:32">.</operator><name pos:start="3393:33" pos:end="3393:38">st_uid</name></name></expr></argument>, <argument pos:start="3393:41" pos:end="3393:58"><expr pos:start="3393:41" pos:end="3393:58"><operator pos:start="3393:41" pos:end="3393:41">&amp;</operator><name pos:start="3393:42" pos:end="3393:58"><name pos:start="3393:42" pos:end="3393:50">target_st</name><operator pos:start="3393:51" pos:end="3393:52">-&gt;</operator><name pos:start="3393:53" pos:end="3393:58">st_uid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3395:21" pos:end="3395:60"><expr pos:start="3395:21" pos:end="3395:59"><call pos:start="3395:21" pos:end="3395:59"><name pos:start="3395:21" pos:end="3395:28">put_user</name><argument_list pos:start="3395:29" pos:end="3395:59">(<argument pos:start="3395:30" pos:end="3395:38"><expr pos:start="3395:30" pos:end="3395:38"><name pos:start="3395:30" pos:end="3395:38"><name pos:start="3395:30" pos:end="3395:31">st</name><operator pos:start="3395:32" pos:end="3395:32">.</operator><name pos:start="3395:33" pos:end="3395:38">st_gid</name></name></expr></argument>, <argument pos:start="3395:41" pos:end="3395:58"><expr pos:start="3395:41" pos:end="3395:58"><operator pos:start="3395:41" pos:end="3395:41">&amp;</operator><name pos:start="3395:42" pos:end="3395:58"><name pos:start="3395:42" pos:end="3395:50">target_st</name><operator pos:start="3395:51" pos:end="3395:52">-&gt;</operator><name pos:start="3395:53" pos:end="3395:58">st_gid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3397:21" pos:end="3397:62"><expr pos:start="3397:21" pos:end="3397:61"><call pos:start="3397:21" pos:end="3397:61"><name pos:start="3397:21" pos:end="3397:28">put_user</name><argument_list pos:start="3397:29" pos:end="3397:61">(<argument pos:start="3397:30" pos:end="3397:39"><expr pos:start="3397:30" pos:end="3397:39"><name pos:start="3397:30" pos:end="3397:39"><name pos:start="3397:30" pos:end="3397:31">st</name><operator pos:start="3397:32" pos:end="3397:32">.</operator><name pos:start="3397:33" pos:end="3397:39">st_rdev</name></name></expr></argument>, <argument pos:start="3397:42" pos:end="3397:60"><expr pos:start="3397:42" pos:end="3397:60"><operator pos:start="3397:42" pos:end="3397:42">&amp;</operator><name pos:start="3397:43" pos:end="3397:60"><name pos:start="3397:43" pos:end="3397:51">target_st</name><operator pos:start="3397:52" pos:end="3397:53">-&gt;</operator><name pos:start="3397:54" pos:end="3397:60">st_rdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="3399:21" pos:end="3399:58">/* XXX: better use of kernel struct */</comment>

                    <expr_stmt pos:start="3401:21" pos:end="3401:62"><expr pos:start="3401:21" pos:end="3401:61"><call pos:start="3401:21" pos:end="3401:61"><name pos:start="3401:21" pos:end="3401:28">put_user</name><argument_list pos:start="3401:29" pos:end="3401:61">(<argument pos:start="3401:30" pos:end="3401:39"><expr pos:start="3401:30" pos:end="3401:39"><name pos:start="3401:30" pos:end="3401:39"><name pos:start="3401:30" pos:end="3401:31">st</name><operator pos:start="3401:32" pos:end="3401:32">.</operator><name pos:start="3401:33" pos:end="3401:39">st_size</name></name></expr></argument>, <argument pos:start="3401:42" pos:end="3401:60"><expr pos:start="3401:42" pos:end="3401:60"><operator pos:start="3401:42" pos:end="3401:42">&amp;</operator><name pos:start="3401:43" pos:end="3401:60"><name pos:start="3401:43" pos:end="3401:51">target_st</name><operator pos:start="3401:52" pos:end="3401:53">-&gt;</operator><name pos:start="3401:54" pos:end="3401:60">st_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3403:21" pos:end="3403:68"><expr pos:start="3403:21" pos:end="3403:67"><call pos:start="3403:21" pos:end="3403:67"><name pos:start="3403:21" pos:end="3403:28">put_user</name><argument_list pos:start="3403:29" pos:end="3403:67">(<argument pos:start="3403:30" pos:end="3403:42"><expr pos:start="3403:30" pos:end="3403:42"><name pos:start="3403:30" pos:end="3403:42"><name pos:start="3403:30" pos:end="3403:31">st</name><operator pos:start="3403:32" pos:end="3403:32">.</operator><name pos:start="3403:33" pos:end="3403:42">st_blksize</name></name></expr></argument>, <argument pos:start="3403:45" pos:end="3403:66"><expr pos:start="3403:45" pos:end="3403:66"><operator pos:start="3403:45" pos:end="3403:45">&amp;</operator><name pos:start="3403:46" pos:end="3403:66"><name pos:start="3403:46" pos:end="3403:54">target_st</name><operator pos:start="3403:55" pos:end="3403:56">-&gt;</operator><name pos:start="3403:57" pos:end="3403:66">st_blksize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3405:21" pos:end="3405:66"><expr pos:start="3405:21" pos:end="3405:65"><call pos:start="3405:21" pos:end="3405:65"><name pos:start="3405:21" pos:end="3405:28">put_user</name><argument_list pos:start="3405:29" pos:end="3405:65">(<argument pos:start="3405:30" pos:end="3405:41"><expr pos:start="3405:30" pos:end="3405:41"><name pos:start="3405:30" pos:end="3405:41"><name pos:start="3405:30" pos:end="3405:31">st</name><operator pos:start="3405:32" pos:end="3405:32">.</operator><name pos:start="3405:33" pos:end="3405:41">st_blocks</name></name></expr></argument>, <argument pos:start="3405:44" pos:end="3405:64"><expr pos:start="3405:44" pos:end="3405:64"><operator pos:start="3405:44" pos:end="3405:44">&amp;</operator><name pos:start="3405:45" pos:end="3405:64"><name pos:start="3405:45" pos:end="3405:53">target_st</name><operator pos:start="3405:54" pos:end="3405:55">-&gt;</operator><name pos:start="3405:56" pos:end="3405:64">st_blocks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3407:21" pos:end="3407:71"><expr pos:start="3407:21" pos:end="3407:70"><call pos:start="3407:21" pos:end="3407:70"><name pos:start="3407:21" pos:end="3407:28">put_user</name><argument_list pos:start="3407:29" pos:end="3407:70">(<argument pos:start="3407:30" pos:end="3407:40"><expr pos:start="3407:30" pos:end="3407:40"><name pos:start="3407:30" pos:end="3407:40"><name pos:start="3407:30" pos:end="3407:31">st</name><operator pos:start="3407:32" pos:end="3407:32">.</operator><name pos:start="3407:33" pos:end="3407:40">st_atime</name></name></expr></argument>, <argument pos:start="3407:43" pos:end="3407:69"><expr pos:start="3407:43" pos:end="3407:69"><operator pos:start="3407:43" pos:end="3407:43">&amp;</operator><name pos:start="3407:44" pos:end="3407:69"><name pos:start="3407:44" pos:end="3407:52">target_st</name><operator pos:start="3407:53" pos:end="3407:54">-&gt;</operator><name pos:start="3407:55" pos:end="3407:69">target_st_atime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3409:21" pos:end="3409:71"><expr pos:start="3409:21" pos:end="3409:70"><call pos:start="3409:21" pos:end="3409:70"><name pos:start="3409:21" pos:end="3409:28">put_user</name><argument_list pos:start="3409:29" pos:end="3409:70">(<argument pos:start="3409:30" pos:end="3409:40"><expr pos:start="3409:30" pos:end="3409:40"><name pos:start="3409:30" pos:end="3409:40"><name pos:start="3409:30" pos:end="3409:31">st</name><operator pos:start="3409:32" pos:end="3409:32">.</operator><name pos:start="3409:33" pos:end="3409:40">st_mtime</name></name></expr></argument>, <argument pos:start="3409:43" pos:end="3409:69"><expr pos:start="3409:43" pos:end="3409:69"><operator pos:start="3409:43" pos:end="3409:43">&amp;</operator><name pos:start="3409:44" pos:end="3409:69"><name pos:start="3409:44" pos:end="3409:52">target_st</name><operator pos:start="3409:53" pos:end="3409:54">-&gt;</operator><name pos:start="3409:55" pos:end="3409:69">target_st_mtime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3411:21" pos:end="3411:71"><expr pos:start="3411:21" pos:end="3411:70"><call pos:start="3411:21" pos:end="3411:70"><name pos:start="3411:21" pos:end="3411:28">put_user</name><argument_list pos:start="3411:29" pos:end="3411:70">(<argument pos:start="3411:30" pos:end="3411:40"><expr pos:start="3411:30" pos:end="3411:40"><name pos:start="3411:30" pos:end="3411:40"><name pos:start="3411:30" pos:end="3411:31">st</name><operator pos:start="3411:32" pos:end="3411:32">.</operator><name pos:start="3411:33" pos:end="3411:40">st_ctime</name></name></expr></argument>, <argument pos:start="3411:43" pos:end="3411:69"><expr pos:start="3411:43" pos:end="3411:69"><operator pos:start="3411:43" pos:end="3411:43">&amp;</operator><name pos:start="3411:44" pos:end="3411:69"><name pos:start="3411:44" pos:end="3411:52">target_st</name><operator pos:start="3411:53" pos:end="3411:54">-&gt;</operator><name pos:start="3411:55" pos:end="3411:69">target_st_ctime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3413:21" pos:end="3413:59"><expr pos:start="3413:21" pos:end="3413:58"><call pos:start="3413:21" pos:end="3413:58"><name pos:start="3413:21" pos:end="3413:38">unlock_user_struct</name><argument_list pos:start="3413:39" pos:end="3413:58">(<argument pos:start="3413:40" pos:end="3413:48"><expr pos:start="3413:40" pos:end="3413:48"><name pos:start="3413:40" pos:end="3413:48">target_st</name></expr></argument>, <argument pos:start="3413:51" pos:end="3413:54"><expr pos:start="3413:51" pos:end="3413:54"><name pos:start="3413:51" pos:end="3413:54">arg2</name></expr></argument>, <argument pos:start="3413:57" pos:end="3413:57"><expr pos:start="3413:57" pos:end="3413:57"><literal type="number" pos:start="3413:57" pos:end="3413:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="3421:9" pos:end="3426:0">break;</break>

<cpp:endif pos:start="3423:1" pos:end="3423:6">#<cpp:directive pos:start="3423:2" pos:end="3423:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3425:1" pos:end="3425:16">#<cpp:directive pos:start="3425:2" pos:end="3425:6">ifdef</cpp:directive> <name pos:start="3425:8" pos:end="3425:16">USE_UID16</name></cpp:ifdef>

    <case pos:start="3427:5" pos:end="3427:26">case <expr pos:start="3427:10" pos:end="3427:25"><name pos:start="3427:10" pos:end="3427:25">TARGET_NR_lchown</name></expr>:</case>

        <expr_stmt pos:start="3429:9" pos:end="3429:35"><expr pos:start="3429:9" pos:end="3429:34"><name pos:start="3429:9" pos:end="3429:9">p</name> <operator pos:start="3429:11" pos:end="3429:11">=</operator> <call pos:start="3429:13" pos:end="3429:34"><name pos:start="3429:13" pos:end="3429:28">lock_user_string</name><argument_list pos:start="3429:29" pos:end="3429:34">(<argument pos:start="3429:30" pos:end="3429:33"><expr pos:start="3429:30" pos:end="3429:33"><name pos:start="3429:30" pos:end="3429:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3431:9" pos:end="3431:73"><expr pos:start="3431:9" pos:end="3431:72"><name pos:start="3431:9" pos:end="3431:11">ret</name> <operator pos:start="3431:13" pos:end="3431:13">=</operator> <call pos:start="3431:15" pos:end="3431:72"><name pos:start="3431:15" pos:end="3431:23">get_errno</name><argument_list pos:start="3431:24" pos:end="3431:72">(<argument pos:start="3431:25" pos:end="3431:71"><expr pos:start="3431:25" pos:end="3431:71"><call pos:start="3431:25" pos:end="3431:71"><name pos:start="3431:25" pos:end="3431:30">lchown</name><argument_list pos:start="3431:31" pos:end="3431:71">(<argument pos:start="3431:32" pos:end="3431:32"><expr pos:start="3431:32" pos:end="3431:32"><name pos:start="3431:32" pos:end="3431:32">p</name></expr></argument>, <argument pos:start="3431:35" pos:end="3431:51"><expr pos:start="3431:35" pos:end="3431:51"><call pos:start="3431:35" pos:end="3431:51"><name pos:start="3431:35" pos:end="3431:45">low2highuid</name><argument_list pos:start="3431:46" pos:end="3431:51">(<argument pos:start="3431:47" pos:end="3431:50"><expr pos:start="3431:47" pos:end="3431:50"><name pos:start="3431:47" pos:end="3431:50">arg2</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="3431:54" pos:end="3431:70"><expr pos:start="3431:54" pos:end="3431:70"><call pos:start="3431:54" pos:end="3431:70"><name pos:start="3431:54" pos:end="3431:64">low2highgid</name><argument_list pos:start="3431:65" pos:end="3431:70">(<argument pos:start="3431:66" pos:end="3431:69"><expr pos:start="3431:66" pos:end="3431:69"><name pos:start="3431:66" pos:end="3431:69">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3433:9" pos:end="3433:32"><expr pos:start="3433:9" pos:end="3433:31"><call pos:start="3433:9" pos:end="3433:31"><name pos:start="3433:9" pos:end="3433:19">unlock_user</name><argument_list pos:start="3433:20" pos:end="3433:31">(<argument pos:start="3433:21" pos:end="3433:21"><expr pos:start="3433:21" pos:end="3433:21"><name pos:start="3433:21" pos:end="3433:21">p</name></expr></argument>, <argument pos:start="3433:24" pos:end="3433:27"><expr pos:start="3433:24" pos:end="3433:27"><name pos:start="3433:24" pos:end="3433:27">arg1</name></expr></argument>, <argument pos:start="3433:30" pos:end="3433:30"><expr pos:start="3433:30" pos:end="3433:30"><literal type="number" pos:start="3433:30" pos:end="3433:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3435:9" pos:end="3435:14">break;</break>

    <case pos:start="3437:5" pos:end="3437:26">case <expr pos:start="3437:10" pos:end="3437:25"><name pos:start="3437:10" pos:end="3437:25">TARGET_NR_getuid</name></expr>:</case>

        <expr_stmt pos:start="3439:9" pos:end="3439:47"><expr pos:start="3439:9" pos:end="3439:46"><name pos:start="3439:9" pos:end="3439:11">ret</name> <operator pos:start="3439:13" pos:end="3439:13">=</operator> <call pos:start="3439:15" pos:end="3439:46"><name pos:start="3439:15" pos:end="3439:23">get_errno</name><argument_list pos:start="3439:24" pos:end="3439:46">(<argument pos:start="3439:25" pos:end="3439:45"><expr pos:start="3439:25" pos:end="3439:45"><call pos:start="3439:25" pos:end="3439:45"><name pos:start="3439:25" pos:end="3439:35">high2lowuid</name><argument_list pos:start="3439:36" pos:end="3439:45">(<argument pos:start="3439:37" pos:end="3439:44"><expr pos:start="3439:37" pos:end="3439:44"><call pos:start="3439:37" pos:end="3439:44"><name pos:start="3439:37" pos:end="3439:42">getuid</name><argument_list pos:start="3439:43" pos:end="3439:44">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3441:9" pos:end="3441:14">break;</break>

    <case pos:start="3443:5" pos:end="3443:26">case <expr pos:start="3443:10" pos:end="3443:25"><name pos:start="3443:10" pos:end="3443:25">TARGET_NR_getgid</name></expr>:</case>

        <expr_stmt pos:start="3445:9" pos:end="3445:47"><expr pos:start="3445:9" pos:end="3445:46"><name pos:start="3445:9" pos:end="3445:11">ret</name> <operator pos:start="3445:13" pos:end="3445:13">=</operator> <call pos:start="3445:15" pos:end="3445:46"><name pos:start="3445:15" pos:end="3445:23">get_errno</name><argument_list pos:start="3445:24" pos:end="3445:46">(<argument pos:start="3445:25" pos:end="3445:45"><expr pos:start="3445:25" pos:end="3445:45"><call pos:start="3445:25" pos:end="3445:45"><name pos:start="3445:25" pos:end="3445:35">high2lowgid</name><argument_list pos:start="3445:36" pos:end="3445:45">(<argument pos:start="3445:37" pos:end="3445:44"><expr pos:start="3445:37" pos:end="3445:44"><call pos:start="3445:37" pos:end="3445:44"><name pos:start="3445:37" pos:end="3445:42">getgid</name><argument_list pos:start="3445:43" pos:end="3445:44">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3447:9" pos:end="3447:14">break;</break>

    <case pos:start="3449:5" pos:end="3449:27">case <expr pos:start="3449:10" pos:end="3449:26"><name pos:start="3449:10" pos:end="3449:26">TARGET_NR_geteuid</name></expr>:</case>

        <expr_stmt pos:start="3451:9" pos:end="3451:48"><expr pos:start="3451:9" pos:end="3451:47"><name pos:start="3451:9" pos:end="3451:11">ret</name> <operator pos:start="3451:13" pos:end="3451:13">=</operator> <call pos:start="3451:15" pos:end="3451:47"><name pos:start="3451:15" pos:end="3451:23">get_errno</name><argument_list pos:start="3451:24" pos:end="3451:47">(<argument pos:start="3451:25" pos:end="3451:46"><expr pos:start="3451:25" pos:end="3451:46"><call pos:start="3451:25" pos:end="3451:46"><name pos:start="3451:25" pos:end="3451:35">high2lowuid</name><argument_list pos:start="3451:36" pos:end="3451:46">(<argument pos:start="3451:37" pos:end="3451:45"><expr pos:start="3451:37" pos:end="3451:45"><call pos:start="3451:37" pos:end="3451:45"><name pos:start="3451:37" pos:end="3451:43">geteuid</name><argument_list pos:start="3451:44" pos:end="3451:45">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3453:9" pos:end="3453:14">break;</break>

    <case pos:start="3455:5" pos:end="3455:27">case <expr pos:start="3455:10" pos:end="3455:26"><name pos:start="3455:10" pos:end="3455:26">TARGET_NR_getegid</name></expr>:</case>

        <expr_stmt pos:start="3457:9" pos:end="3457:48"><expr pos:start="3457:9" pos:end="3457:47"><name pos:start="3457:9" pos:end="3457:11">ret</name> <operator pos:start="3457:13" pos:end="3457:13">=</operator> <call pos:start="3457:15" pos:end="3457:47"><name pos:start="3457:15" pos:end="3457:23">get_errno</name><argument_list pos:start="3457:24" pos:end="3457:47">(<argument pos:start="3457:25" pos:end="3457:46"><expr pos:start="3457:25" pos:end="3457:46"><call pos:start="3457:25" pos:end="3457:46"><name pos:start="3457:25" pos:end="3457:35">high2lowgid</name><argument_list pos:start="3457:36" pos:end="3457:46">(<argument pos:start="3457:37" pos:end="3457:45"><expr pos:start="3457:37" pos:end="3457:45"><call pos:start="3457:37" pos:end="3457:45"><name pos:start="3457:37" pos:end="3457:43">getegid</name><argument_list pos:start="3457:44" pos:end="3457:45">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3459:9" pos:end="3459:14">break;</break>

    <case pos:start="3461:5" pos:end="3461:28">case <expr pos:start="3461:10" pos:end="3461:27"><name pos:start="3461:10" pos:end="3461:27">TARGET_NR_setreuid</name></expr>:</case>

        <expr_stmt pos:start="3463:9" pos:end="3463:72"><expr pos:start="3463:9" pos:end="3463:71"><name pos:start="3463:9" pos:end="3463:11">ret</name> <operator pos:start="3463:13" pos:end="3463:13">=</operator> <call pos:start="3463:15" pos:end="3463:71"><name pos:start="3463:15" pos:end="3463:23">get_errno</name><argument_list pos:start="3463:24" pos:end="3463:71">(<argument pos:start="3463:25" pos:end="3463:70"><expr pos:start="3463:25" pos:end="3463:70"><call pos:start="3463:25" pos:end="3463:70"><name pos:start="3463:25" pos:end="3463:32">setreuid</name><argument_list pos:start="3463:33" pos:end="3463:70">(<argument pos:start="3463:34" pos:end="3463:50"><expr pos:start="3463:34" pos:end="3463:50"><call pos:start="3463:34" pos:end="3463:50"><name pos:start="3463:34" pos:end="3463:44">low2highuid</name><argument_list pos:start="3463:45" pos:end="3463:50">(<argument pos:start="3463:46" pos:end="3463:49"><expr pos:start="3463:46" pos:end="3463:49"><name pos:start="3463:46" pos:end="3463:49">arg1</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="3463:53" pos:end="3463:69"><expr pos:start="3463:53" pos:end="3463:69"><call pos:start="3463:53" pos:end="3463:69"><name pos:start="3463:53" pos:end="3463:63">low2highuid</name><argument_list pos:start="3463:64" pos:end="3463:69">(<argument pos:start="3463:65" pos:end="3463:68"><expr pos:start="3463:65" pos:end="3463:68"><name pos:start="3463:65" pos:end="3463:68">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3465:9" pos:end="3465:14">break;</break>

    <case pos:start="3467:5" pos:end="3467:28">case <expr pos:start="3467:10" pos:end="3467:27"><name pos:start="3467:10" pos:end="3467:27">TARGET_NR_setregid</name></expr>:</case>

        <expr_stmt pos:start="3469:9" pos:end="3469:72"><expr pos:start="3469:9" pos:end="3469:71"><name pos:start="3469:9" pos:end="3469:11">ret</name> <operator pos:start="3469:13" pos:end="3469:13">=</operator> <call pos:start="3469:15" pos:end="3469:71"><name pos:start="3469:15" pos:end="3469:23">get_errno</name><argument_list pos:start="3469:24" pos:end="3469:71">(<argument pos:start="3469:25" pos:end="3469:70"><expr pos:start="3469:25" pos:end="3469:70"><call pos:start="3469:25" pos:end="3469:70"><name pos:start="3469:25" pos:end="3469:32">setregid</name><argument_list pos:start="3469:33" pos:end="3469:70">(<argument pos:start="3469:34" pos:end="3469:50"><expr pos:start="3469:34" pos:end="3469:50"><call pos:start="3469:34" pos:end="3469:50"><name pos:start="3469:34" pos:end="3469:44">low2highgid</name><argument_list pos:start="3469:45" pos:end="3469:50">(<argument pos:start="3469:46" pos:end="3469:49"><expr pos:start="3469:46" pos:end="3469:49"><name pos:start="3469:46" pos:end="3469:49">arg1</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="3469:53" pos:end="3469:69"><expr pos:start="3469:53" pos:end="3469:69"><call pos:start="3469:53" pos:end="3469:69"><name pos:start="3469:53" pos:end="3469:63">low2highgid</name><argument_list pos:start="3469:64" pos:end="3469:69">(<argument pos:start="3469:65" pos:end="3469:68"><expr pos:start="3469:65" pos:end="3469:68"><name pos:start="3469:65" pos:end="3469:68">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3471:9" pos:end="3471:14">break;</break>

    <case pos:start="3473:5" pos:end="3473:29">case <expr pos:start="3473:10" pos:end="3473:28"><name pos:start="3473:10" pos:end="3473:28">TARGET_NR_getgroups</name></expr>:</case>

        <block pos:start="3475:9" pos:end="3503:9">{<block_content pos:start="3477:13" pos:end="3501:13">

            <decl_stmt pos:start="3477:13" pos:end="3477:34"><decl pos:start="3477:13" pos:end="3477:33"><type pos:start="3477:13" pos:end="3477:15"><name pos:start="3477:13" pos:end="3477:15">int</name></type> <name pos:start="3477:17" pos:end="3477:26">gidsetsize</name> <init pos:start="3477:28" pos:end="3477:33">= <expr pos:start="3477:30" pos:end="3477:33"><name pos:start="3477:30" pos:end="3477:33">arg1</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="3479:13" pos:end="3479:39"><decl pos:start="3479:13" pos:end="3479:38"><type pos:start="3479:13" pos:end="3479:22"><name pos:start="3479:13" pos:end="3479:20">uint16_t</name> <modifier pos:start="3479:22" pos:end="3479:22">*</modifier></type><name pos:start="3479:23" pos:end="3479:38">target_grouplist</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3481:13" pos:end="3481:29"><decl pos:start="3481:13" pos:end="3481:28"><type pos:start="3481:13" pos:end="3481:19"><name pos:start="3481:13" pos:end="3481:17">gid_t</name> <modifier pos:start="3481:19" pos:end="3481:19">*</modifier></type><name pos:start="3481:20" pos:end="3481:28">grouplist</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3483:13" pos:end="3483:18"><decl pos:start="3483:13" pos:end="3483:17"><type pos:start="3483:13" pos:end="3483:15"><name pos:start="3483:13" pos:end="3483:15">int</name></type> <name pos:start="3483:17" pos:end="3483:17">i</name></decl>;</decl_stmt>



            <expr_stmt pos:start="3487:13" pos:end="3487:59"><expr pos:start="3487:13" pos:end="3487:58"><name pos:start="3487:13" pos:end="3487:21">grouplist</name> <operator pos:start="3487:23" pos:end="3487:23">=</operator> <call pos:start="3487:25" pos:end="3487:58"><name pos:start="3487:25" pos:end="3487:30">alloca</name><argument_list pos:start="3487:31" pos:end="3487:58">(<argument pos:start="3487:32" pos:end="3487:57"><expr pos:start="3487:32" pos:end="3487:57"><name pos:start="3487:32" pos:end="3487:41">gidsetsize</name> <operator pos:start="3487:43" pos:end="3487:43">*</operator> <sizeof pos:start="3487:45" pos:end="3487:57">sizeof<argument_list pos:start="3487:51" pos:end="3487:57">(<argument pos:start="3487:52" pos:end="3487:56"><expr pos:start="3487:52" pos:end="3487:56"><name pos:start="3487:52" pos:end="3487:56">gid_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3489:13" pos:end="3489:62"><expr pos:start="3489:13" pos:end="3489:61"><name pos:start="3489:13" pos:end="3489:15">ret</name> <operator pos:start="3489:17" pos:end="3489:17">=</operator> <call pos:start="3489:19" pos:end="3489:61"><name pos:start="3489:19" pos:end="3489:27">get_errno</name><argument_list pos:start="3489:28" pos:end="3489:61">(<argument pos:start="3489:29" pos:end="3489:60"><expr pos:start="3489:29" pos:end="3489:60"><call pos:start="3489:29" pos:end="3489:60"><name pos:start="3489:29" pos:end="3489:37">getgroups</name><argument_list pos:start="3489:38" pos:end="3489:60">(<argument pos:start="3489:39" pos:end="3489:48"><expr pos:start="3489:39" pos:end="3489:48"><name pos:start="3489:39" pos:end="3489:48">gidsetsize</name></expr></argument>, <argument pos:start="3489:51" pos:end="3489:59"><expr pos:start="3489:51" pos:end="3489:59"><name pos:start="3489:51" pos:end="3489:59">grouplist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3491:13" pos:end="3501:13"><if pos:start="3491:13" pos:end="3501:13">if <condition pos:start="3491:16" pos:end="3491:31">(<expr pos:start="3491:17" pos:end="3491:30"><operator pos:start="3491:17" pos:end="3491:17">!</operator><call pos:start="3491:18" pos:end="3491:30"><name pos:start="3491:18" pos:end="3491:25">is_error</name><argument_list pos:start="3491:26" pos:end="3491:30">(<argument pos:start="3491:27" pos:end="3491:29"><expr pos:start="3491:27" pos:end="3491:29"><name pos:start="3491:27" pos:end="3491:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3491:33" pos:end="3501:13">{<block_content pos:start="3493:17" pos:end="3499:68">

                <expr_stmt pos:start="3493:17" pos:end="3493:70"><expr pos:start="3493:17" pos:end="3493:69"><name pos:start="3493:17" pos:end="3493:32">target_grouplist</name> <operator pos:start="3493:34" pos:end="3493:34">=</operator> <call pos:start="3493:36" pos:end="3493:69"><name pos:start="3493:36" pos:end="3493:44">lock_user</name><argument_list pos:start="3493:45" pos:end="3493:69">(<argument pos:start="3493:46" pos:end="3493:49"><expr pos:start="3493:46" pos:end="3493:49"><name pos:start="3493:46" pos:end="3493:49">arg2</name></expr></argument>, <argument pos:start="3493:52" pos:end="3493:65"><expr pos:start="3493:52" pos:end="3493:65"><name pos:start="3493:52" pos:end="3493:61">gidsetsize</name> <operator pos:start="3493:63" pos:end="3493:63">*</operator> <literal type="number" pos:start="3493:65" pos:end="3493:65">2</literal></expr></argument>, <argument pos:start="3493:68" pos:end="3493:68"><expr pos:start="3493:68" pos:end="3493:68"><literal type="number" pos:start="3493:68" pos:end="3493:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="3495:17" pos:end="3497:64">for<control pos:start="3495:20" pos:end="3495:46">(<init pos:start="3495:21" pos:end="3495:26"><expr pos:start="3495:21" pos:end="3495:25"><name pos:start="3495:21" pos:end="3495:21">i</name> <operator pos:start="3495:23" pos:end="3495:23">=</operator> <literal type="number" pos:start="3495:25" pos:end="3495:25">0</literal></expr>;</init><condition pos:start="3495:27" pos:end="3495:41"><expr pos:start="3495:27" pos:end="3495:40"><name pos:start="3495:27" pos:end="3495:27">i</name> <operator pos:start="3495:29" pos:end="3495:29">&lt;</operator> <name pos:start="3495:31" pos:end="3495:40">gidsetsize</name></expr>;</condition> <incr pos:start="3495:43" pos:end="3495:45"><expr pos:start="3495:43" pos:end="3495:45"><name pos:start="3495:43" pos:end="3495:43">i</name><operator pos:start="3495:44" pos:end="3495:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="3497:21" pos:end="3497:64"><block_content pos:start="3497:21" pos:end="3497:64">

                    <expr_stmt pos:start="3497:21" pos:end="3497:64"><expr pos:start="3497:21" pos:end="3497:63"><name pos:start="3497:21" pos:end="3497:39"><name pos:start="3497:21" pos:end="3497:36">target_grouplist</name><index pos:start="3497:37" pos:end="3497:39">[<expr pos:start="3497:38" pos:end="3497:38"><name pos:start="3497:38" pos:end="3497:38">i</name></expr>]</index></name> <operator pos:start="3497:41" pos:end="3497:41">=</operator> <call pos:start="3497:43" pos:end="3497:63"><name pos:start="3497:43" pos:end="3497:49">tswap16</name><argument_list pos:start="3497:50" pos:end="3497:63">(<argument pos:start="3497:51" pos:end="3497:62"><expr pos:start="3497:51" pos:end="3497:62"><name pos:start="3497:51" pos:end="3497:62"><name pos:start="3497:51" pos:end="3497:59">grouplist</name><index pos:start="3497:60" pos:end="3497:62">[<expr pos:start="3497:61" pos:end="3497:61"><name pos:start="3497:61" pos:end="3497:61">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="3499:17" pos:end="3499:68"><expr pos:start="3499:17" pos:end="3499:67"><call pos:start="3499:17" pos:end="3499:67"><name pos:start="3499:17" pos:end="3499:27">unlock_user</name><argument_list pos:start="3499:28" pos:end="3499:67">(<argument pos:start="3499:29" pos:end="3499:44"><expr pos:start="3499:29" pos:end="3499:44"><name pos:start="3499:29" pos:end="3499:44">target_grouplist</name></expr></argument>, <argument pos:start="3499:47" pos:end="3499:50"><expr pos:start="3499:47" pos:end="3499:50"><name pos:start="3499:47" pos:end="3499:50">arg2</name></expr></argument>, <argument pos:start="3499:53" pos:end="3499:66"><expr pos:start="3499:53" pos:end="3499:66"><name pos:start="3499:53" pos:end="3499:62">gidsetsize</name> <operator pos:start="3499:64" pos:end="3499:64">*</operator> <literal type="number" pos:start="3499:66" pos:end="3499:66">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="3505:9" pos:end="3505:14">break;</break>

    <case pos:start="3507:5" pos:end="3507:29">case <expr pos:start="3507:10" pos:end="3507:28"><name pos:start="3507:10" pos:end="3507:28">TARGET_NR_setgroups</name></expr>:</case>

        <block pos:start="3509:9" pos:end="3533:9">{<block_content pos:start="3511:13" pos:end="3531:62">

            <decl_stmt pos:start="3511:13" pos:end="3511:34"><decl pos:start="3511:13" pos:end="3511:33"><type pos:start="3511:13" pos:end="3511:15"><name pos:start="3511:13" pos:end="3511:15">int</name></type> <name pos:start="3511:17" pos:end="3511:26">gidsetsize</name> <init pos:start="3511:28" pos:end="3511:33">= <expr pos:start="3511:30" pos:end="3511:33"><name pos:start="3511:30" pos:end="3511:33">arg1</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="3513:13" pos:end="3513:39"><decl pos:start="3513:13" pos:end="3513:38"><type pos:start="3513:13" pos:end="3513:22"><name pos:start="3513:13" pos:end="3513:20">uint16_t</name> <modifier pos:start="3513:22" pos:end="3513:22">*</modifier></type><name pos:start="3513:23" pos:end="3513:38">target_grouplist</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3515:13" pos:end="3515:29"><decl pos:start="3515:13" pos:end="3515:28"><type pos:start="3515:13" pos:end="3515:19"><name pos:start="3515:13" pos:end="3515:17">gid_t</name> <modifier pos:start="3515:19" pos:end="3515:19">*</modifier></type><name pos:start="3515:20" pos:end="3515:28">grouplist</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3517:13" pos:end="3517:18"><decl pos:start="3517:13" pos:end="3517:17"><type pos:start="3517:13" pos:end="3517:15"><name pos:start="3517:13" pos:end="3517:15">int</name></type> <name pos:start="3517:17" pos:end="3517:17">i</name></decl>;</decl_stmt>



            <expr_stmt pos:start="3521:13" pos:end="3521:59"><expr pos:start="3521:13" pos:end="3521:58"><name pos:start="3521:13" pos:end="3521:21">grouplist</name> <operator pos:start="3521:23" pos:end="3521:23">=</operator> <call pos:start="3521:25" pos:end="3521:58"><name pos:start="3521:25" pos:end="3521:30">alloca</name><argument_list pos:start="3521:31" pos:end="3521:58">(<argument pos:start="3521:32" pos:end="3521:57"><expr pos:start="3521:32" pos:end="3521:57"><name pos:start="3521:32" pos:end="3521:41">gidsetsize</name> <operator pos:start="3521:43" pos:end="3521:43">*</operator> <sizeof pos:start="3521:45" pos:end="3521:57">sizeof<argument_list pos:start="3521:51" pos:end="3521:57">(<argument pos:start="3521:52" pos:end="3521:56"><expr pos:start="3521:52" pos:end="3521:56"><name pos:start="3521:52" pos:end="3521:56">gid_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3523:13" pos:end="3523:66"><expr pos:start="3523:13" pos:end="3523:65"><name pos:start="3523:13" pos:end="3523:28">target_grouplist</name> <operator pos:start="3523:30" pos:end="3523:30">=</operator> <call pos:start="3523:32" pos:end="3523:65"><name pos:start="3523:32" pos:end="3523:40">lock_user</name><argument_list pos:start="3523:41" pos:end="3523:65">(<argument pos:start="3523:42" pos:end="3523:45"><expr pos:start="3523:42" pos:end="3523:45"><name pos:start="3523:42" pos:end="3523:45">arg2</name></expr></argument>, <argument pos:start="3523:48" pos:end="3523:61"><expr pos:start="3523:48" pos:end="3523:61"><name pos:start="3523:48" pos:end="3523:57">gidsetsize</name> <operator pos:start="3523:59" pos:end="3523:59">*</operator> <literal type="number" pos:start="3523:61" pos:end="3523:61">2</literal></expr></argument>, <argument pos:start="3523:64" pos:end="3523:64"><expr pos:start="3523:64" pos:end="3523:64"><literal type="number" pos:start="3523:64" pos:end="3523:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="3525:13" pos:end="3527:60">for<control pos:start="3525:16" pos:end="3525:42">(<init pos:start="3525:17" pos:end="3525:22"><expr pos:start="3525:17" pos:end="3525:21"><name pos:start="3525:17" pos:end="3525:17">i</name> <operator pos:start="3525:19" pos:end="3525:19">=</operator> <literal type="number" pos:start="3525:21" pos:end="3525:21">0</literal></expr>;</init><condition pos:start="3525:23" pos:end="3525:37"><expr pos:start="3525:23" pos:end="3525:36"><name pos:start="3525:23" pos:end="3525:23">i</name> <operator pos:start="3525:25" pos:end="3525:25">&lt;</operator> <name pos:start="3525:27" pos:end="3525:36">gidsetsize</name></expr>;</condition> <incr pos:start="3525:39" pos:end="3525:41"><expr pos:start="3525:39" pos:end="3525:41"><name pos:start="3525:39" pos:end="3525:39">i</name><operator pos:start="3525:40" pos:end="3525:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="3527:17" pos:end="3527:60"><block_content pos:start="3527:17" pos:end="3527:60">

                <expr_stmt pos:start="3527:17" pos:end="3527:60"><expr pos:start="3527:17" pos:end="3527:59"><name pos:start="3527:17" pos:end="3527:28"><name pos:start="3527:17" pos:end="3527:25">grouplist</name><index pos:start="3527:26" pos:end="3527:28">[<expr pos:start="3527:27" pos:end="3527:27"><name pos:start="3527:27" pos:end="3527:27">i</name></expr>]</index></name> <operator pos:start="3527:30" pos:end="3527:30">=</operator> <call pos:start="3527:32" pos:end="3527:59"><name pos:start="3527:32" pos:end="3527:38">tswap16</name><argument_list pos:start="3527:39" pos:end="3527:59">(<argument pos:start="3527:40" pos:end="3527:58"><expr pos:start="3527:40" pos:end="3527:58"><name pos:start="3527:40" pos:end="3527:58"><name pos:start="3527:40" pos:end="3527:55">target_grouplist</name><index pos:start="3527:56" pos:end="3527:58">[<expr pos:start="3527:57" pos:end="3527:57"><name pos:start="3527:57" pos:end="3527:57">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="3529:13" pos:end="3529:51"><expr pos:start="3529:13" pos:end="3529:50"><call pos:start="3529:13" pos:end="3529:50"><name pos:start="3529:13" pos:end="3529:23">unlock_user</name><argument_list pos:start="3529:24" pos:end="3529:50">(<argument pos:start="3529:25" pos:end="3529:40"><expr pos:start="3529:25" pos:end="3529:40"><name pos:start="3529:25" pos:end="3529:40">target_grouplist</name></expr></argument>, <argument pos:start="3529:43" pos:end="3529:46"><expr pos:start="3529:43" pos:end="3529:46"><name pos:start="3529:43" pos:end="3529:46">arg2</name></expr></argument>, <argument pos:start="3529:49" pos:end="3529:49"><expr pos:start="3529:49" pos:end="3529:49"><literal type="number" pos:start="3529:49" pos:end="3529:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3531:13" pos:end="3531:62"><expr pos:start="3531:13" pos:end="3531:61"><name pos:start="3531:13" pos:end="3531:15">ret</name> <operator pos:start="3531:17" pos:end="3531:17">=</operator> <call pos:start="3531:19" pos:end="3531:61"><name pos:start="3531:19" pos:end="3531:27">get_errno</name><argument_list pos:start="3531:28" pos:end="3531:61">(<argument pos:start="3531:29" pos:end="3531:60"><expr pos:start="3531:29" pos:end="3531:60"><call pos:start="3531:29" pos:end="3531:60"><name pos:start="3531:29" pos:end="3531:37">setgroups</name><argument_list pos:start="3531:38" pos:end="3531:60">(<argument pos:start="3531:39" pos:end="3531:48"><expr pos:start="3531:39" pos:end="3531:48"><name pos:start="3531:39" pos:end="3531:48">gidsetsize</name></expr></argument>, <argument pos:start="3531:51" pos:end="3531:59"><expr pos:start="3531:51" pos:end="3531:59"><name pos:start="3531:51" pos:end="3531:59">grouplist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="3535:9" pos:end="3535:14">break;</break>

    <case pos:start="3537:5" pos:end="3537:26">case <expr pos:start="3537:10" pos:end="3537:25"><name pos:start="3537:10" pos:end="3537:25">TARGET_NR_fchown</name></expr>:</case>

        <expr_stmt pos:start="3539:9" pos:end="3539:76"><expr pos:start="3539:9" pos:end="3539:75"><name pos:start="3539:9" pos:end="3539:11">ret</name> <operator pos:start="3539:13" pos:end="3539:13">=</operator> <call pos:start="3539:15" pos:end="3539:75"><name pos:start="3539:15" pos:end="3539:23">get_errno</name><argument_list pos:start="3539:24" pos:end="3539:75">(<argument pos:start="3539:25" pos:end="3539:74"><expr pos:start="3539:25" pos:end="3539:74"><call pos:start="3539:25" pos:end="3539:74"><name pos:start="3539:25" pos:end="3539:30">fchown</name><argument_list pos:start="3539:31" pos:end="3539:74">(<argument pos:start="3539:32" pos:end="3539:35"><expr pos:start="3539:32" pos:end="3539:35"><name pos:start="3539:32" pos:end="3539:35">arg1</name></expr></argument>, <argument pos:start="3539:38" pos:end="3539:54"><expr pos:start="3539:38" pos:end="3539:54"><call pos:start="3539:38" pos:end="3539:54"><name pos:start="3539:38" pos:end="3539:48">low2highuid</name><argument_list pos:start="3539:49" pos:end="3539:54">(<argument pos:start="3539:50" pos:end="3539:53"><expr pos:start="3539:50" pos:end="3539:53"><name pos:start="3539:50" pos:end="3539:53">arg2</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="3539:57" pos:end="3539:73"><expr pos:start="3539:57" pos:end="3539:73"><call pos:start="3539:57" pos:end="3539:73"><name pos:start="3539:57" pos:end="3539:67">low2highgid</name><argument_list pos:start="3539:68" pos:end="3539:73">(<argument pos:start="3539:69" pos:end="3539:72"><expr pos:start="3539:69" pos:end="3539:72"><name pos:start="3539:69" pos:end="3539:72">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3541:9" pos:end="3544:0">break;</break>

<cpp:ifdef pos:start="3543:1" pos:end="3543:26">#<cpp:directive pos:start="3543:2" pos:end="3543:6">ifdef</cpp:directive> <name pos:start="3543:8" pos:end="3543:26">TARGET_NR_setresuid</name></cpp:ifdef>

    <case pos:start="3545:5" pos:end="3545:29">case <expr pos:start="3545:10" pos:end="3545:28"><name pos:start="3545:10" pos:end="3545:28">TARGET_NR_setresuid</name></expr>:</case>

        <expr_stmt pos:start="3547:9" pos:end="3551:54"><expr pos:start="3547:9" pos:end="3551:53"><name pos:start="3547:9" pos:end="3547:11">ret</name> <operator pos:start="3547:13" pos:end="3547:13">=</operator> <call pos:start="3547:15" pos:end="3551:53"><name pos:start="3547:15" pos:end="3547:23">get_errno</name><argument_list pos:start="3547:24" pos:end="3551:53">(<argument pos:start="3547:25" pos:end="3551:52"><expr pos:start="3547:25" pos:end="3551:52"><call pos:start="3547:25" pos:end="3551:52"><name pos:start="3547:25" pos:end="3547:33">setresuid</name><argument_list pos:start="3547:34" pos:end="3551:52">(<argument pos:start="3547:35" pos:end="3547:51"><expr pos:start="3547:35" pos:end="3547:51"><call pos:start="3547:35" pos:end="3547:51"><name pos:start="3547:35" pos:end="3547:45">low2highuid</name><argument_list pos:start="3547:46" pos:end="3547:51">(<argument pos:start="3547:47" pos:end="3547:50"><expr pos:start="3547:47" pos:end="3547:50"><name pos:start="3547:47" pos:end="3547:50">arg1</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="3549:35" pos:end="3549:51"><expr pos:start="3549:35" pos:end="3549:51"><call pos:start="3549:35" pos:end="3549:51"><name pos:start="3549:35" pos:end="3549:45">low2highuid</name><argument_list pos:start="3549:46" pos:end="3549:51">(<argument pos:start="3549:47" pos:end="3549:50"><expr pos:start="3549:47" pos:end="3549:50"><name pos:start="3549:47" pos:end="3549:50">arg2</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="3551:35" pos:end="3551:51"><expr pos:start="3551:35" pos:end="3551:51"><call pos:start="3551:35" pos:end="3551:51"><name pos:start="3551:35" pos:end="3551:45">low2highuid</name><argument_list pos:start="3551:46" pos:end="3551:51">(<argument pos:start="3551:47" pos:end="3551:50"><expr pos:start="3551:47" pos:end="3551:50"><name pos:start="3551:47" pos:end="3551:50">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3553:9" pos:end="3558:0">break;</break>

<cpp:endif pos:start="3555:1" pos:end="3555:6">#<cpp:directive pos:start="3555:2" pos:end="3555:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3557:1" pos:end="3557:26">#<cpp:directive pos:start="3557:2" pos:end="3557:6">ifdef</cpp:directive> <name pos:start="3557:8" pos:end="3557:26">TARGET_NR_getresuid</name></cpp:ifdef>

    <case pos:start="3559:5" pos:end="3559:29">case <expr pos:start="3559:10" pos:end="3559:28"><name pos:start="3559:10" pos:end="3559:28">TARGET_NR_getresuid</name></expr>:</case>

        <block pos:start="3561:9" pos:end="3577:9">{<block_content pos:start="3563:13" pos:end="3575:13">

            <decl_stmt pos:start="3563:13" pos:end="3563:35"><decl pos:start="3563:13" pos:end="3563:22"><type pos:start="3563:13" pos:end="3563:17"><name pos:start="3563:13" pos:end="3563:17">uid_t</name></type> <name pos:start="3563:19" pos:end="3563:22">ruid</name></decl>, <decl pos:start="3563:25" pos:end="3563:28"><type ref="prev" pos:start="3563:13" pos:end="3563:17"/><name pos:start="3563:25" pos:end="3563:28">euid</name></decl>, <decl pos:start="3563:31" pos:end="3563:34"><type ref="prev" pos:start="3563:13" pos:end="3563:17"/><name pos:start="3563:31" pos:end="3563:34">suid</name></decl>;</decl_stmt>

            <expr_stmt pos:start="3565:13" pos:end="3565:60"><expr pos:start="3565:13" pos:end="3565:59"><name pos:start="3565:13" pos:end="3565:15">ret</name> <operator pos:start="3565:17" pos:end="3565:17">=</operator> <call pos:start="3565:19" pos:end="3565:59"><name pos:start="3565:19" pos:end="3565:27">get_errno</name><argument_list pos:start="3565:28" pos:end="3565:59">(<argument pos:start="3565:29" pos:end="3565:58"><expr pos:start="3565:29" pos:end="3565:58"><call pos:start="3565:29" pos:end="3565:58"><name pos:start="3565:29" pos:end="3565:37">getresuid</name><argument_list pos:start="3565:38" pos:end="3565:58">(<argument pos:start="3565:39" pos:end="3565:43"><expr pos:start="3565:39" pos:end="3565:43"><operator pos:start="3565:39" pos:end="3565:39">&amp;</operator><name pos:start="3565:40" pos:end="3565:43">ruid</name></expr></argument>, <argument pos:start="3565:46" pos:end="3565:50"><expr pos:start="3565:46" pos:end="3565:50"><operator pos:start="3565:46" pos:end="3565:46">&amp;</operator><name pos:start="3565:47" pos:end="3565:50">euid</name></expr></argument>, <argument pos:start="3565:53" pos:end="3565:57"><expr pos:start="3565:53" pos:end="3565:57"><operator pos:start="3565:53" pos:end="3565:53">&amp;</operator><name pos:start="3565:54" pos:end="3565:57">suid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3567:13" pos:end="3575:13"><if pos:start="3567:13" pos:end="3575:13">if <condition pos:start="3567:16" pos:end="3567:31">(<expr pos:start="3567:17" pos:end="3567:30"><operator pos:start="3567:17" pos:end="3567:17">!</operator><call pos:start="3567:18" pos:end="3567:30"><name pos:start="3567:18" pos:end="3567:25">is_error</name><argument_list pos:start="3567:26" pos:end="3567:30">(<argument pos:start="3567:27" pos:end="3567:29"><expr pos:start="3567:27" pos:end="3567:29"><name pos:start="3567:27" pos:end="3567:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3567:33" pos:end="3575:13">{<block_content pos:start="3569:17" pos:end="3573:57">

                <expr_stmt pos:start="3569:17" pos:end="3569:57"><expr pos:start="3569:17" pos:end="3569:56"><call pos:start="3569:17" pos:end="3569:56"><name pos:start="3569:17" pos:end="3569:22">tput16</name><argument_list pos:start="3569:23" pos:end="3569:56">(<argument pos:start="3569:24" pos:end="3569:27"><expr pos:start="3569:24" pos:end="3569:27"><name pos:start="3569:24" pos:end="3569:27">arg1</name></expr></argument>, <argument pos:start="3569:30" pos:end="3569:55"><expr pos:start="3569:30" pos:end="3569:55"><call pos:start="3569:30" pos:end="3569:55"><name pos:start="3569:30" pos:end="3569:36">tswap16</name><argument_list pos:start="3569:37" pos:end="3569:55">(<argument pos:start="3569:38" pos:end="3569:54"><expr pos:start="3569:38" pos:end="3569:54"><call pos:start="3569:38" pos:end="3569:54"><name pos:start="3569:38" pos:end="3569:48">high2lowuid</name><argument_list pos:start="3569:49" pos:end="3569:54">(<argument pos:start="3569:50" pos:end="3569:53"><expr pos:start="3569:50" pos:end="3569:53"><name pos:start="3569:50" pos:end="3569:53">ruid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3571:17" pos:end="3571:57"><expr pos:start="3571:17" pos:end="3571:56"><call pos:start="3571:17" pos:end="3571:56"><name pos:start="3571:17" pos:end="3571:22">tput16</name><argument_list pos:start="3571:23" pos:end="3571:56">(<argument pos:start="3571:24" pos:end="3571:27"><expr pos:start="3571:24" pos:end="3571:27"><name pos:start="3571:24" pos:end="3571:27">arg2</name></expr></argument>, <argument pos:start="3571:30" pos:end="3571:55"><expr pos:start="3571:30" pos:end="3571:55"><call pos:start="3571:30" pos:end="3571:55"><name pos:start="3571:30" pos:end="3571:36">tswap16</name><argument_list pos:start="3571:37" pos:end="3571:55">(<argument pos:start="3571:38" pos:end="3571:54"><expr pos:start="3571:38" pos:end="3571:54"><call pos:start="3571:38" pos:end="3571:54"><name pos:start="3571:38" pos:end="3571:48">high2lowuid</name><argument_list pos:start="3571:49" pos:end="3571:54">(<argument pos:start="3571:50" pos:end="3571:53"><expr pos:start="3571:50" pos:end="3571:53"><name pos:start="3571:50" pos:end="3571:53">euid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3573:17" pos:end="3573:57"><expr pos:start="3573:17" pos:end="3573:56"><call pos:start="3573:17" pos:end="3573:56"><name pos:start="3573:17" pos:end="3573:22">tput16</name><argument_list pos:start="3573:23" pos:end="3573:56">(<argument pos:start="3573:24" pos:end="3573:27"><expr pos:start="3573:24" pos:end="3573:27"><name pos:start="3573:24" pos:end="3573:27">arg3</name></expr></argument>, <argument pos:start="3573:30" pos:end="3573:55"><expr pos:start="3573:30" pos:end="3573:55"><call pos:start="3573:30" pos:end="3573:55"><name pos:start="3573:30" pos:end="3573:36">tswap16</name><argument_list pos:start="3573:37" pos:end="3573:55">(<argument pos:start="3573:38" pos:end="3573:54"><expr pos:start="3573:38" pos:end="3573:54"><call pos:start="3573:38" pos:end="3573:54"><name pos:start="3573:38" pos:end="3573:48">high2lowuid</name><argument_list pos:start="3573:49" pos:end="3573:54">(<argument pos:start="3573:50" pos:end="3573:53"><expr pos:start="3573:50" pos:end="3573:53"><name pos:start="3573:50" pos:end="3573:53">suid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="3579:9" pos:end="3584:0">break;</break>

<cpp:endif pos:start="3581:1" pos:end="3581:6">#<cpp:directive pos:start="3581:2" pos:end="3581:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3583:1" pos:end="3583:26">#<cpp:directive pos:start="3583:2" pos:end="3583:6">ifdef</cpp:directive> <name pos:start="3583:8" pos:end="3583:26">TARGET_NR_getresgid</name></cpp:ifdef>

    <case pos:start="3585:5" pos:end="3585:29">case <expr pos:start="3585:10" pos:end="3585:28"><name pos:start="3585:10" pos:end="3585:28">TARGET_NR_setresgid</name></expr>:</case>

        <expr_stmt pos:start="3587:9" pos:end="3591:54"><expr pos:start="3587:9" pos:end="3591:53"><name pos:start="3587:9" pos:end="3587:11">ret</name> <operator pos:start="3587:13" pos:end="3587:13">=</operator> <call pos:start="3587:15" pos:end="3591:53"><name pos:start="3587:15" pos:end="3587:23">get_errno</name><argument_list pos:start="3587:24" pos:end="3591:53">(<argument pos:start="3587:25" pos:end="3591:52"><expr pos:start="3587:25" pos:end="3591:52"><call pos:start="3587:25" pos:end="3591:52"><name pos:start="3587:25" pos:end="3587:33">setresgid</name><argument_list pos:start="3587:34" pos:end="3591:52">(<argument pos:start="3587:35" pos:end="3587:51"><expr pos:start="3587:35" pos:end="3587:51"><call pos:start="3587:35" pos:end="3587:51"><name pos:start="3587:35" pos:end="3587:45">low2highgid</name><argument_list pos:start="3587:46" pos:end="3587:51">(<argument pos:start="3587:47" pos:end="3587:50"><expr pos:start="3587:47" pos:end="3587:50"><name pos:start="3587:47" pos:end="3587:50">arg1</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="3589:35" pos:end="3589:51"><expr pos:start="3589:35" pos:end="3589:51"><call pos:start="3589:35" pos:end="3589:51"><name pos:start="3589:35" pos:end="3589:45">low2highgid</name><argument_list pos:start="3589:46" pos:end="3589:51">(<argument pos:start="3589:47" pos:end="3589:50"><expr pos:start="3589:47" pos:end="3589:50"><name pos:start="3589:47" pos:end="3589:50">arg2</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="3591:35" pos:end="3591:51"><expr pos:start="3591:35" pos:end="3591:51"><call pos:start="3591:35" pos:end="3591:51"><name pos:start="3591:35" pos:end="3591:45">low2highgid</name><argument_list pos:start="3591:46" pos:end="3591:51">(<argument pos:start="3591:47" pos:end="3591:50"><expr pos:start="3591:47" pos:end="3591:50"><name pos:start="3591:47" pos:end="3591:50">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3593:9" pos:end="3598:0">break;</break>

<cpp:endif pos:start="3595:1" pos:end="3595:6">#<cpp:directive pos:start="3595:2" pos:end="3595:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3597:1" pos:end="3597:26">#<cpp:directive pos:start="3597:2" pos:end="3597:6">ifdef</cpp:directive> <name pos:start="3597:8" pos:end="3597:26">TARGET_NR_getresgid</name></cpp:ifdef>

    <case pos:start="3599:5" pos:end="3599:29">case <expr pos:start="3599:10" pos:end="3599:28"><name pos:start="3599:10" pos:end="3599:28">TARGET_NR_getresgid</name></expr>:</case>

        <block pos:start="3601:9" pos:end="3617:9">{<block_content pos:start="3603:13" pos:end="3615:13">

            <decl_stmt pos:start="3603:13" pos:end="3603:35"><decl pos:start="3603:13" pos:end="3603:22"><type pos:start="3603:13" pos:end="3603:17"><name pos:start="3603:13" pos:end="3603:17">gid_t</name></type> <name pos:start="3603:19" pos:end="3603:22">rgid</name></decl>, <decl pos:start="3603:25" pos:end="3603:28"><type ref="prev" pos:start="3603:13" pos:end="3603:17"/><name pos:start="3603:25" pos:end="3603:28">egid</name></decl>, <decl pos:start="3603:31" pos:end="3603:34"><type ref="prev" pos:start="3603:13" pos:end="3603:17"/><name pos:start="3603:31" pos:end="3603:34">sgid</name></decl>;</decl_stmt>

            <expr_stmt pos:start="3605:13" pos:end="3605:60"><expr pos:start="3605:13" pos:end="3605:59"><name pos:start="3605:13" pos:end="3605:15">ret</name> <operator pos:start="3605:17" pos:end="3605:17">=</operator> <call pos:start="3605:19" pos:end="3605:59"><name pos:start="3605:19" pos:end="3605:27">get_errno</name><argument_list pos:start="3605:28" pos:end="3605:59">(<argument pos:start="3605:29" pos:end="3605:58"><expr pos:start="3605:29" pos:end="3605:58"><call pos:start="3605:29" pos:end="3605:58"><name pos:start="3605:29" pos:end="3605:37">getresgid</name><argument_list pos:start="3605:38" pos:end="3605:58">(<argument pos:start="3605:39" pos:end="3605:43"><expr pos:start="3605:39" pos:end="3605:43"><operator pos:start="3605:39" pos:end="3605:39">&amp;</operator><name pos:start="3605:40" pos:end="3605:43">rgid</name></expr></argument>, <argument pos:start="3605:46" pos:end="3605:50"><expr pos:start="3605:46" pos:end="3605:50"><operator pos:start="3605:46" pos:end="3605:46">&amp;</operator><name pos:start="3605:47" pos:end="3605:50">egid</name></expr></argument>, <argument pos:start="3605:53" pos:end="3605:57"><expr pos:start="3605:53" pos:end="3605:57"><operator pos:start="3605:53" pos:end="3605:53">&amp;</operator><name pos:start="3605:54" pos:end="3605:57">sgid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3607:13" pos:end="3615:13"><if pos:start="3607:13" pos:end="3615:13">if <condition pos:start="3607:16" pos:end="3607:31">(<expr pos:start="3607:17" pos:end="3607:30"><operator pos:start="3607:17" pos:end="3607:17">!</operator><call pos:start="3607:18" pos:end="3607:30"><name pos:start="3607:18" pos:end="3607:25">is_error</name><argument_list pos:start="3607:26" pos:end="3607:30">(<argument pos:start="3607:27" pos:end="3607:29"><expr pos:start="3607:27" pos:end="3607:29"><name pos:start="3607:27" pos:end="3607:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3607:33" pos:end="3615:13">{<block_content pos:start="3609:17" pos:end="3613:57">

                <expr_stmt pos:start="3609:17" pos:end="3609:57"><expr pos:start="3609:17" pos:end="3609:56"><call pos:start="3609:17" pos:end="3609:56"><name pos:start="3609:17" pos:end="3609:22">tput16</name><argument_list pos:start="3609:23" pos:end="3609:56">(<argument pos:start="3609:24" pos:end="3609:27"><expr pos:start="3609:24" pos:end="3609:27"><name pos:start="3609:24" pos:end="3609:27">arg1</name></expr></argument>, <argument pos:start="3609:30" pos:end="3609:55"><expr pos:start="3609:30" pos:end="3609:55"><call pos:start="3609:30" pos:end="3609:55"><name pos:start="3609:30" pos:end="3609:36">tswap16</name><argument_list pos:start="3609:37" pos:end="3609:55">(<argument pos:start="3609:38" pos:end="3609:54"><expr pos:start="3609:38" pos:end="3609:54"><call pos:start="3609:38" pos:end="3609:54"><name pos:start="3609:38" pos:end="3609:48">high2lowgid</name><argument_list pos:start="3609:49" pos:end="3609:54">(<argument pos:start="3609:50" pos:end="3609:53"><expr pos:start="3609:50" pos:end="3609:53"><name pos:start="3609:50" pos:end="3609:53">rgid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3611:17" pos:end="3611:57"><expr pos:start="3611:17" pos:end="3611:56"><call pos:start="3611:17" pos:end="3611:56"><name pos:start="3611:17" pos:end="3611:22">tput16</name><argument_list pos:start="3611:23" pos:end="3611:56">(<argument pos:start="3611:24" pos:end="3611:27"><expr pos:start="3611:24" pos:end="3611:27"><name pos:start="3611:24" pos:end="3611:27">arg2</name></expr></argument>, <argument pos:start="3611:30" pos:end="3611:55"><expr pos:start="3611:30" pos:end="3611:55"><call pos:start="3611:30" pos:end="3611:55"><name pos:start="3611:30" pos:end="3611:36">tswap16</name><argument_list pos:start="3611:37" pos:end="3611:55">(<argument pos:start="3611:38" pos:end="3611:54"><expr pos:start="3611:38" pos:end="3611:54"><call pos:start="3611:38" pos:end="3611:54"><name pos:start="3611:38" pos:end="3611:48">high2lowgid</name><argument_list pos:start="3611:49" pos:end="3611:54">(<argument pos:start="3611:50" pos:end="3611:53"><expr pos:start="3611:50" pos:end="3611:53"><name pos:start="3611:50" pos:end="3611:53">egid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3613:17" pos:end="3613:57"><expr pos:start="3613:17" pos:end="3613:56"><call pos:start="3613:17" pos:end="3613:56"><name pos:start="3613:17" pos:end="3613:22">tput16</name><argument_list pos:start="3613:23" pos:end="3613:56">(<argument pos:start="3613:24" pos:end="3613:27"><expr pos:start="3613:24" pos:end="3613:27"><name pos:start="3613:24" pos:end="3613:27">arg3</name></expr></argument>, <argument pos:start="3613:30" pos:end="3613:55"><expr pos:start="3613:30" pos:end="3613:55"><call pos:start="3613:30" pos:end="3613:55"><name pos:start="3613:30" pos:end="3613:36">tswap16</name><argument_list pos:start="3613:37" pos:end="3613:55">(<argument pos:start="3613:38" pos:end="3613:54"><expr pos:start="3613:38" pos:end="3613:54"><call pos:start="3613:38" pos:end="3613:54"><name pos:start="3613:38" pos:end="3613:48">high2lowgid</name><argument_list pos:start="3613:49" pos:end="3613:54">(<argument pos:start="3613:50" pos:end="3613:53"><expr pos:start="3613:50" pos:end="3613:53"><name pos:start="3613:50" pos:end="3613:53">sgid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="3619:9" pos:end="3622:0">break;</break>

<cpp:endif pos:start="3621:1" pos:end="3621:6">#<cpp:directive pos:start="3621:2" pos:end="3621:6">endif</cpp:directive></cpp:endif>

    <case pos:start="3623:5" pos:end="3623:25">case <expr pos:start="3623:10" pos:end="3623:24"><name pos:start="3623:10" pos:end="3623:24">TARGET_NR_chown</name></expr>:</case>

        <expr_stmt pos:start="3625:9" pos:end="3625:35"><expr pos:start="3625:9" pos:end="3625:34"><name pos:start="3625:9" pos:end="3625:9">p</name> <operator pos:start="3625:11" pos:end="3625:11">=</operator> <call pos:start="3625:13" pos:end="3625:34"><name pos:start="3625:13" pos:end="3625:28">lock_user_string</name><argument_list pos:start="3625:29" pos:end="3625:34">(<argument pos:start="3625:30" pos:end="3625:33"><expr pos:start="3625:30" pos:end="3625:33"><name pos:start="3625:30" pos:end="3625:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3627:9" pos:end="3627:72"><expr pos:start="3627:9" pos:end="3627:71"><name pos:start="3627:9" pos:end="3627:11">ret</name> <operator pos:start="3627:13" pos:end="3627:13">=</operator> <call pos:start="3627:15" pos:end="3627:71"><name pos:start="3627:15" pos:end="3627:23">get_errno</name><argument_list pos:start="3627:24" pos:end="3627:71">(<argument pos:start="3627:25" pos:end="3627:70"><expr pos:start="3627:25" pos:end="3627:70"><call pos:start="3627:25" pos:end="3627:70"><name pos:start="3627:25" pos:end="3627:29">chown</name><argument_list pos:start="3627:30" pos:end="3627:70">(<argument pos:start="3627:31" pos:end="3627:31"><expr pos:start="3627:31" pos:end="3627:31"><name pos:start="3627:31" pos:end="3627:31">p</name></expr></argument>, <argument pos:start="3627:34" pos:end="3627:50"><expr pos:start="3627:34" pos:end="3627:50"><call pos:start="3627:34" pos:end="3627:50"><name pos:start="3627:34" pos:end="3627:44">low2highuid</name><argument_list pos:start="3627:45" pos:end="3627:50">(<argument pos:start="3627:46" pos:end="3627:49"><expr pos:start="3627:46" pos:end="3627:49"><name pos:start="3627:46" pos:end="3627:49">arg2</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="3627:53" pos:end="3627:69"><expr pos:start="3627:53" pos:end="3627:69"><call pos:start="3627:53" pos:end="3627:69"><name pos:start="3627:53" pos:end="3627:63">low2highgid</name><argument_list pos:start="3627:64" pos:end="3627:69">(<argument pos:start="3627:65" pos:end="3627:68"><expr pos:start="3627:65" pos:end="3627:68"><name pos:start="3627:65" pos:end="3627:68">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3629:9" pos:end="3629:32"><expr pos:start="3629:9" pos:end="3629:31"><call pos:start="3629:9" pos:end="3629:31"><name pos:start="3629:9" pos:end="3629:19">unlock_user</name><argument_list pos:start="3629:20" pos:end="3629:31">(<argument pos:start="3629:21" pos:end="3629:21"><expr pos:start="3629:21" pos:end="3629:21"><name pos:start="3629:21" pos:end="3629:21">p</name></expr></argument>, <argument pos:start="3629:24" pos:end="3629:27"><expr pos:start="3629:24" pos:end="3629:27"><name pos:start="3629:24" pos:end="3629:27">arg1</name></expr></argument>, <argument pos:start="3629:30" pos:end="3629:30"><expr pos:start="3629:30" pos:end="3629:30"><literal type="number" pos:start="3629:30" pos:end="3629:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3631:9" pos:end="3631:14">break;</break>

    <case pos:start="3633:5" pos:end="3633:26">case <expr pos:start="3633:10" pos:end="3633:25"><name pos:start="3633:10" pos:end="3633:25">TARGET_NR_setuid</name></expr>:</case>

        <expr_stmt pos:start="3635:9" pos:end="3635:51"><expr pos:start="3635:9" pos:end="3635:50"><name pos:start="3635:9" pos:end="3635:11">ret</name> <operator pos:start="3635:13" pos:end="3635:13">=</operator> <call pos:start="3635:15" pos:end="3635:50"><name pos:start="3635:15" pos:end="3635:23">get_errno</name><argument_list pos:start="3635:24" pos:end="3635:50">(<argument pos:start="3635:25" pos:end="3635:49"><expr pos:start="3635:25" pos:end="3635:49"><call pos:start="3635:25" pos:end="3635:49"><name pos:start="3635:25" pos:end="3635:30">setuid</name><argument_list pos:start="3635:31" pos:end="3635:49">(<argument pos:start="3635:32" pos:end="3635:48"><expr pos:start="3635:32" pos:end="3635:48"><call pos:start="3635:32" pos:end="3635:48"><name pos:start="3635:32" pos:end="3635:42">low2highuid</name><argument_list pos:start="3635:43" pos:end="3635:48">(<argument pos:start="3635:44" pos:end="3635:47"><expr pos:start="3635:44" pos:end="3635:47"><name pos:start="3635:44" pos:end="3635:47">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3637:9" pos:end="3637:14">break;</break>

    <case pos:start="3639:5" pos:end="3639:26">case <expr pos:start="3639:10" pos:end="3639:25"><name pos:start="3639:10" pos:end="3639:25">TARGET_NR_setgid</name></expr>:</case>

        <expr_stmt pos:start="3641:9" pos:end="3641:51"><expr pos:start="3641:9" pos:end="3641:50"><name pos:start="3641:9" pos:end="3641:11">ret</name> <operator pos:start="3641:13" pos:end="3641:13">=</operator> <call pos:start="3641:15" pos:end="3641:50"><name pos:start="3641:15" pos:end="3641:23">get_errno</name><argument_list pos:start="3641:24" pos:end="3641:50">(<argument pos:start="3641:25" pos:end="3641:49"><expr pos:start="3641:25" pos:end="3641:49"><call pos:start="3641:25" pos:end="3641:49"><name pos:start="3641:25" pos:end="3641:30">setgid</name><argument_list pos:start="3641:31" pos:end="3641:49">(<argument pos:start="3641:32" pos:end="3641:48"><expr pos:start="3641:32" pos:end="3641:48"><call pos:start="3641:32" pos:end="3641:48"><name pos:start="3641:32" pos:end="3641:42">low2highgid</name><argument_list pos:start="3641:43" pos:end="3641:48">(<argument pos:start="3641:44" pos:end="3641:47"><expr pos:start="3641:44" pos:end="3641:47"><name pos:start="3641:44" pos:end="3641:47">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3643:9" pos:end="3643:14">break;</break>

    <case pos:start="3645:5" pos:end="3645:28">case <expr pos:start="3645:10" pos:end="3645:27"><name pos:start="3645:10" pos:end="3645:27">TARGET_NR_setfsuid</name></expr>:</case>

        <expr_stmt pos:start="3647:9" pos:end="3647:40"><expr pos:start="3647:9" pos:end="3647:39"><name pos:start="3647:9" pos:end="3647:11">ret</name> <operator pos:start="3647:13" pos:end="3647:13">=</operator> <call pos:start="3647:15" pos:end="3647:39"><name pos:start="3647:15" pos:end="3647:23">get_errno</name><argument_list pos:start="3647:24" pos:end="3647:39">(<argument pos:start="3647:25" pos:end="3647:38"><expr pos:start="3647:25" pos:end="3647:38"><call pos:start="3647:25" pos:end="3647:38"><name pos:start="3647:25" pos:end="3647:32">setfsuid</name><argument_list pos:start="3647:33" pos:end="3647:38">(<argument pos:start="3647:34" pos:end="3647:37"><expr pos:start="3647:34" pos:end="3647:37"><name pos:start="3647:34" pos:end="3647:37">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3649:9" pos:end="3649:14">break;</break>

    <case pos:start="3651:5" pos:end="3651:28">case <expr pos:start="3651:10" pos:end="3651:27"><name pos:start="3651:10" pos:end="3651:27">TARGET_NR_setfsgid</name></expr>:</case>

        <expr_stmt pos:start="3653:9" pos:end="3653:40"><expr pos:start="3653:9" pos:end="3653:39"><name pos:start="3653:9" pos:end="3653:11">ret</name> <operator pos:start="3653:13" pos:end="3653:13">=</operator> <call pos:start="3653:15" pos:end="3653:39"><name pos:start="3653:15" pos:end="3653:23">get_errno</name><argument_list pos:start="3653:24" pos:end="3653:39">(<argument pos:start="3653:25" pos:end="3653:38"><expr pos:start="3653:25" pos:end="3653:38"><call pos:start="3653:25" pos:end="3653:38"><name pos:start="3653:25" pos:end="3653:32">setfsgid</name><argument_list pos:start="3653:33" pos:end="3653:38">(<argument pos:start="3653:34" pos:end="3653:37"><expr pos:start="3653:34" pos:end="3653:37"><name pos:start="3653:34" pos:end="3653:37">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3655:9" pos:end="3662:0">break;</break>

<cpp:endif pos:start="3657:1" pos:end="3657:6">#<cpp:directive pos:start="3657:2" pos:end="3657:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="3657:8" pos:end="3657:22">/* USE_UID16 */</comment>



<cpp:ifdef pos:start="3661:1" pos:end="3661:25">#<cpp:directive pos:start="3661:2" pos:end="3661:6">ifdef</cpp:directive> <name pos:start="3661:8" pos:end="3661:25">TARGET_NR_lchown32</name></cpp:ifdef>

    <case pos:start="3663:5" pos:end="3663:28">case <expr pos:start="3663:10" pos:end="3663:27"><name pos:start="3663:10" pos:end="3663:27">TARGET_NR_lchown32</name></expr>:</case>

        <expr_stmt pos:start="3665:9" pos:end="3665:35"><expr pos:start="3665:9" pos:end="3665:34"><name pos:start="3665:9" pos:end="3665:9">p</name> <operator pos:start="3665:11" pos:end="3665:11">=</operator> <call pos:start="3665:13" pos:end="3665:34"><name pos:start="3665:13" pos:end="3665:28">lock_user_string</name><argument_list pos:start="3665:29" pos:end="3665:34">(<argument pos:start="3665:30" pos:end="3665:33"><expr pos:start="3665:30" pos:end="3665:33"><name pos:start="3665:30" pos:end="3665:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3667:9" pos:end="3667:47"><expr pos:start="3667:9" pos:end="3667:46"><name pos:start="3667:9" pos:end="3667:11">ret</name> <operator pos:start="3667:13" pos:end="3667:13">=</operator> <call pos:start="3667:15" pos:end="3667:46"><name pos:start="3667:15" pos:end="3667:23">get_errno</name><argument_list pos:start="3667:24" pos:end="3667:46">(<argument pos:start="3667:25" pos:end="3667:45"><expr pos:start="3667:25" pos:end="3667:45"><call pos:start="3667:25" pos:end="3667:45"><name pos:start="3667:25" pos:end="3667:30">lchown</name><argument_list pos:start="3667:31" pos:end="3667:45">(<argument pos:start="3667:32" pos:end="3667:32"><expr pos:start="3667:32" pos:end="3667:32"><name pos:start="3667:32" pos:end="3667:32">p</name></expr></argument>, <argument pos:start="3667:35" pos:end="3667:38"><expr pos:start="3667:35" pos:end="3667:38"><name pos:start="3667:35" pos:end="3667:38">arg2</name></expr></argument>, <argument pos:start="3667:41" pos:end="3667:44"><expr pos:start="3667:41" pos:end="3667:44"><name pos:start="3667:41" pos:end="3667:44">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3669:9" pos:end="3669:32"><expr pos:start="3669:9" pos:end="3669:31"><call pos:start="3669:9" pos:end="3669:31"><name pos:start="3669:9" pos:end="3669:19">unlock_user</name><argument_list pos:start="3669:20" pos:end="3669:31">(<argument pos:start="3669:21" pos:end="3669:21"><expr pos:start="3669:21" pos:end="3669:21"><name pos:start="3669:21" pos:end="3669:21">p</name></expr></argument>, <argument pos:start="3669:24" pos:end="3669:27"><expr pos:start="3669:24" pos:end="3669:27"><name pos:start="3669:24" pos:end="3669:27">arg1</name></expr></argument>, <argument pos:start="3669:30" pos:end="3669:30"><expr pos:start="3669:30" pos:end="3669:30"><literal type="number" pos:start="3669:30" pos:end="3669:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3671:9" pos:end="3676:0">break;</break>

<cpp:endif pos:start="3673:1" pos:end="3673:6">#<cpp:directive pos:start="3673:2" pos:end="3673:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3675:1" pos:end="3675:25">#<cpp:directive pos:start="3675:2" pos:end="3675:6">ifdef</cpp:directive> <name pos:start="3675:8" pos:end="3675:25">TARGET_NR_getuid32</name></cpp:ifdef>

    <case pos:start="3677:5" pos:end="3677:28">case <expr pos:start="3677:10" pos:end="3677:27"><name pos:start="3677:10" pos:end="3677:27">TARGET_NR_getuid32</name></expr>:</case>

        <expr_stmt pos:start="3679:9" pos:end="3679:34"><expr pos:start="3679:9" pos:end="3679:33"><name pos:start="3679:9" pos:end="3679:11">ret</name> <operator pos:start="3679:13" pos:end="3679:13">=</operator> <call pos:start="3679:15" pos:end="3679:33"><name pos:start="3679:15" pos:end="3679:23">get_errno</name><argument_list pos:start="3679:24" pos:end="3679:33">(<argument pos:start="3679:25" pos:end="3679:32"><expr pos:start="3679:25" pos:end="3679:32"><call pos:start="3679:25" pos:end="3679:32"><name pos:start="3679:25" pos:end="3679:30">getuid</name><argument_list pos:start="3679:31" pos:end="3679:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3681:9" pos:end="3686:0">break;</break>

<cpp:endif pos:start="3683:1" pos:end="3683:6">#<cpp:directive pos:start="3683:2" pos:end="3683:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3685:1" pos:end="3685:25">#<cpp:directive pos:start="3685:2" pos:end="3685:6">ifdef</cpp:directive> <name pos:start="3685:8" pos:end="3685:25">TARGET_NR_getgid32</name></cpp:ifdef>

    <case pos:start="3687:5" pos:end="3687:28">case <expr pos:start="3687:10" pos:end="3687:27"><name pos:start="3687:10" pos:end="3687:27">TARGET_NR_getgid32</name></expr>:</case>

        <expr_stmt pos:start="3689:9" pos:end="3689:34"><expr pos:start="3689:9" pos:end="3689:33"><name pos:start="3689:9" pos:end="3689:11">ret</name> <operator pos:start="3689:13" pos:end="3689:13">=</operator> <call pos:start="3689:15" pos:end="3689:33"><name pos:start="3689:15" pos:end="3689:23">get_errno</name><argument_list pos:start="3689:24" pos:end="3689:33">(<argument pos:start="3689:25" pos:end="3689:32"><expr pos:start="3689:25" pos:end="3689:32"><call pos:start="3689:25" pos:end="3689:32"><name pos:start="3689:25" pos:end="3689:30">getgid</name><argument_list pos:start="3689:31" pos:end="3689:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3691:9" pos:end="3696:0">break;</break>

<cpp:endif pos:start="3693:1" pos:end="3693:6">#<cpp:directive pos:start="3693:2" pos:end="3693:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3695:1" pos:end="3695:26">#<cpp:directive pos:start="3695:2" pos:end="3695:6">ifdef</cpp:directive> <name pos:start="3695:8" pos:end="3695:26">TARGET_NR_geteuid32</name></cpp:ifdef>

    <case pos:start="3697:5" pos:end="3697:29">case <expr pos:start="3697:10" pos:end="3697:28"><name pos:start="3697:10" pos:end="3697:28">TARGET_NR_geteuid32</name></expr>:</case>

        <expr_stmt pos:start="3699:9" pos:end="3699:35"><expr pos:start="3699:9" pos:end="3699:34"><name pos:start="3699:9" pos:end="3699:11">ret</name> <operator pos:start="3699:13" pos:end="3699:13">=</operator> <call pos:start="3699:15" pos:end="3699:34"><name pos:start="3699:15" pos:end="3699:23">get_errno</name><argument_list pos:start="3699:24" pos:end="3699:34">(<argument pos:start="3699:25" pos:end="3699:33"><expr pos:start="3699:25" pos:end="3699:33"><call pos:start="3699:25" pos:end="3699:33"><name pos:start="3699:25" pos:end="3699:31">geteuid</name><argument_list pos:start="3699:32" pos:end="3699:33">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3701:9" pos:end="3706:0">break;</break>

<cpp:endif pos:start="3703:1" pos:end="3703:6">#<cpp:directive pos:start="3703:2" pos:end="3703:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3705:1" pos:end="3705:26">#<cpp:directive pos:start="3705:2" pos:end="3705:6">ifdef</cpp:directive> <name pos:start="3705:8" pos:end="3705:26">TARGET_NR_getegid32</name></cpp:ifdef>

    <case pos:start="3707:5" pos:end="3707:29">case <expr pos:start="3707:10" pos:end="3707:28"><name pos:start="3707:10" pos:end="3707:28">TARGET_NR_getegid32</name></expr>:</case>

        <expr_stmt pos:start="3709:9" pos:end="3709:35"><expr pos:start="3709:9" pos:end="3709:34"><name pos:start="3709:9" pos:end="3709:11">ret</name> <operator pos:start="3709:13" pos:end="3709:13">=</operator> <call pos:start="3709:15" pos:end="3709:34"><name pos:start="3709:15" pos:end="3709:23">get_errno</name><argument_list pos:start="3709:24" pos:end="3709:34">(<argument pos:start="3709:25" pos:end="3709:33"><expr pos:start="3709:25" pos:end="3709:33"><call pos:start="3709:25" pos:end="3709:33"><name pos:start="3709:25" pos:end="3709:31">getegid</name><argument_list pos:start="3709:32" pos:end="3709:33">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3711:9" pos:end="3716:0">break;</break>

<cpp:endif pos:start="3713:1" pos:end="3713:6">#<cpp:directive pos:start="3713:2" pos:end="3713:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3715:1" pos:end="3715:27">#<cpp:directive pos:start="3715:2" pos:end="3715:6">ifdef</cpp:directive> <name pos:start="3715:8" pos:end="3715:27">TARGET_NR_setreuid32</name></cpp:ifdef>

    <case pos:start="3717:5" pos:end="3717:30">case <expr pos:start="3717:10" pos:end="3717:29"><name pos:start="3717:10" pos:end="3717:29">TARGET_NR_setreuid32</name></expr>:</case>

        <expr_stmt pos:start="3719:9" pos:end="3719:46"><expr pos:start="3719:9" pos:end="3719:45"><name pos:start="3719:9" pos:end="3719:11">ret</name> <operator pos:start="3719:13" pos:end="3719:13">=</operator> <call pos:start="3719:15" pos:end="3719:45"><name pos:start="3719:15" pos:end="3719:23">get_errno</name><argument_list pos:start="3719:24" pos:end="3719:45">(<argument pos:start="3719:25" pos:end="3719:44"><expr pos:start="3719:25" pos:end="3719:44"><call pos:start="3719:25" pos:end="3719:44"><name pos:start="3719:25" pos:end="3719:32">setreuid</name><argument_list pos:start="3719:33" pos:end="3719:44">(<argument pos:start="3719:34" pos:end="3719:37"><expr pos:start="3719:34" pos:end="3719:37"><name pos:start="3719:34" pos:end="3719:37">arg1</name></expr></argument>, <argument pos:start="3719:40" pos:end="3719:43"><expr pos:start="3719:40" pos:end="3719:43"><name pos:start="3719:40" pos:end="3719:43">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3721:9" pos:end="3726:0">break;</break>

<cpp:endif pos:start="3723:1" pos:end="3723:6">#<cpp:directive pos:start="3723:2" pos:end="3723:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3725:1" pos:end="3725:27">#<cpp:directive pos:start="3725:2" pos:end="3725:6">ifdef</cpp:directive> <name pos:start="3725:8" pos:end="3725:27">TARGET_NR_setregid32</name></cpp:ifdef>

    <case pos:start="3727:5" pos:end="3727:30">case <expr pos:start="3727:10" pos:end="3727:29"><name pos:start="3727:10" pos:end="3727:29">TARGET_NR_setregid32</name></expr>:</case>

        <expr_stmt pos:start="3729:9" pos:end="3729:46"><expr pos:start="3729:9" pos:end="3729:45"><name pos:start="3729:9" pos:end="3729:11">ret</name> <operator pos:start="3729:13" pos:end="3729:13">=</operator> <call pos:start="3729:15" pos:end="3729:45"><name pos:start="3729:15" pos:end="3729:23">get_errno</name><argument_list pos:start="3729:24" pos:end="3729:45">(<argument pos:start="3729:25" pos:end="3729:44"><expr pos:start="3729:25" pos:end="3729:44"><call pos:start="3729:25" pos:end="3729:44"><name pos:start="3729:25" pos:end="3729:32">setregid</name><argument_list pos:start="3729:33" pos:end="3729:44">(<argument pos:start="3729:34" pos:end="3729:37"><expr pos:start="3729:34" pos:end="3729:37"><name pos:start="3729:34" pos:end="3729:37">arg1</name></expr></argument>, <argument pos:start="3729:40" pos:end="3729:43"><expr pos:start="3729:40" pos:end="3729:43"><name pos:start="3729:40" pos:end="3729:43">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3731:9" pos:end="3736:0">break;</break>

<cpp:endif pos:start="3733:1" pos:end="3733:6">#<cpp:directive pos:start="3733:2" pos:end="3733:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3735:1" pos:end="3735:28">#<cpp:directive pos:start="3735:2" pos:end="3735:6">ifdef</cpp:directive> <name pos:start="3735:8" pos:end="3735:28">TARGET_NR_getgroups32</name></cpp:ifdef>

    <case pos:start="3737:5" pos:end="3737:31">case <expr pos:start="3737:10" pos:end="3737:30"><name pos:start="3737:10" pos:end="3737:30">TARGET_NR_getgroups32</name></expr>:</case>

        <block pos:start="3739:9" pos:end="3767:9">{<block_content pos:start="3741:13" pos:end="3765:13">

            <decl_stmt pos:start="3741:13" pos:end="3741:34"><decl pos:start="3741:13" pos:end="3741:33"><type pos:start="3741:13" pos:end="3741:15"><name pos:start="3741:13" pos:end="3741:15">int</name></type> <name pos:start="3741:17" pos:end="3741:26">gidsetsize</name> <init pos:start="3741:28" pos:end="3741:33">= <expr pos:start="3741:30" pos:end="3741:33"><name pos:start="3741:30" pos:end="3741:33">arg1</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="3743:13" pos:end="3743:39"><decl pos:start="3743:13" pos:end="3743:38"><type pos:start="3743:13" pos:end="3743:22"><name pos:start="3743:13" pos:end="3743:20">uint32_t</name> <modifier pos:start="3743:22" pos:end="3743:22">*</modifier></type><name pos:start="3743:23" pos:end="3743:38">target_grouplist</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3745:13" pos:end="3745:29"><decl pos:start="3745:13" pos:end="3745:28"><type pos:start="3745:13" pos:end="3745:19"><name pos:start="3745:13" pos:end="3745:17">gid_t</name> <modifier pos:start="3745:19" pos:end="3745:19">*</modifier></type><name pos:start="3745:20" pos:end="3745:28">grouplist</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3747:13" pos:end="3747:18"><decl pos:start="3747:13" pos:end="3747:17"><type pos:start="3747:13" pos:end="3747:15"><name pos:start="3747:13" pos:end="3747:15">int</name></type> <name pos:start="3747:17" pos:end="3747:17">i</name></decl>;</decl_stmt>



            <expr_stmt pos:start="3751:13" pos:end="3751:59"><expr pos:start="3751:13" pos:end="3751:58"><name pos:start="3751:13" pos:end="3751:21">grouplist</name> <operator pos:start="3751:23" pos:end="3751:23">=</operator> <call pos:start="3751:25" pos:end="3751:58"><name pos:start="3751:25" pos:end="3751:30">alloca</name><argument_list pos:start="3751:31" pos:end="3751:58">(<argument pos:start="3751:32" pos:end="3751:57"><expr pos:start="3751:32" pos:end="3751:57"><name pos:start="3751:32" pos:end="3751:41">gidsetsize</name> <operator pos:start="3751:43" pos:end="3751:43">*</operator> <sizeof pos:start="3751:45" pos:end="3751:57">sizeof<argument_list pos:start="3751:51" pos:end="3751:57">(<argument pos:start="3751:52" pos:end="3751:56"><expr pos:start="3751:52" pos:end="3751:56"><name pos:start="3751:52" pos:end="3751:56">gid_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3753:13" pos:end="3753:62"><expr pos:start="3753:13" pos:end="3753:61"><name pos:start="3753:13" pos:end="3753:15">ret</name> <operator pos:start="3753:17" pos:end="3753:17">=</operator> <call pos:start="3753:19" pos:end="3753:61"><name pos:start="3753:19" pos:end="3753:27">get_errno</name><argument_list pos:start="3753:28" pos:end="3753:61">(<argument pos:start="3753:29" pos:end="3753:60"><expr pos:start="3753:29" pos:end="3753:60"><call pos:start="3753:29" pos:end="3753:60"><name pos:start="3753:29" pos:end="3753:37">getgroups</name><argument_list pos:start="3753:38" pos:end="3753:60">(<argument pos:start="3753:39" pos:end="3753:48"><expr pos:start="3753:39" pos:end="3753:48"><name pos:start="3753:39" pos:end="3753:48">gidsetsize</name></expr></argument>, <argument pos:start="3753:51" pos:end="3753:59"><expr pos:start="3753:51" pos:end="3753:59"><name pos:start="3753:51" pos:end="3753:59">grouplist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3755:13" pos:end="3765:13"><if pos:start="3755:13" pos:end="3765:13">if <condition pos:start="3755:16" pos:end="3755:31">(<expr pos:start="3755:17" pos:end="3755:30"><operator pos:start="3755:17" pos:end="3755:17">!</operator><call pos:start="3755:18" pos:end="3755:30"><name pos:start="3755:18" pos:end="3755:25">is_error</name><argument_list pos:start="3755:26" pos:end="3755:30">(<argument pos:start="3755:27" pos:end="3755:29"><expr pos:start="3755:27" pos:end="3755:29"><name pos:start="3755:27" pos:end="3755:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3755:33" pos:end="3765:13">{<block_content pos:start="3757:17" pos:end="3763:68">

                <expr_stmt pos:start="3757:17" pos:end="3757:70"><expr pos:start="3757:17" pos:end="3757:69"><name pos:start="3757:17" pos:end="3757:32">target_grouplist</name> <operator pos:start="3757:34" pos:end="3757:34">=</operator> <call pos:start="3757:36" pos:end="3757:69"><name pos:start="3757:36" pos:end="3757:44">lock_user</name><argument_list pos:start="3757:45" pos:end="3757:69">(<argument pos:start="3757:46" pos:end="3757:49"><expr pos:start="3757:46" pos:end="3757:49"><name pos:start="3757:46" pos:end="3757:49">arg2</name></expr></argument>, <argument pos:start="3757:52" pos:end="3757:65"><expr pos:start="3757:52" pos:end="3757:65"><name pos:start="3757:52" pos:end="3757:61">gidsetsize</name> <operator pos:start="3757:63" pos:end="3757:63">*</operator> <literal type="number" pos:start="3757:65" pos:end="3757:65">4</literal></expr></argument>, <argument pos:start="3757:68" pos:end="3757:68"><expr pos:start="3757:68" pos:end="3757:68"><literal type="number" pos:start="3757:68" pos:end="3757:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="3759:17" pos:end="3761:64">for<control pos:start="3759:20" pos:end="3759:46">(<init pos:start="3759:21" pos:end="3759:26"><expr pos:start="3759:21" pos:end="3759:25"><name pos:start="3759:21" pos:end="3759:21">i</name> <operator pos:start="3759:23" pos:end="3759:23">=</operator> <literal type="number" pos:start="3759:25" pos:end="3759:25">0</literal></expr>;</init><condition pos:start="3759:27" pos:end="3759:41"><expr pos:start="3759:27" pos:end="3759:40"><name pos:start="3759:27" pos:end="3759:27">i</name> <operator pos:start="3759:29" pos:end="3759:29">&lt;</operator> <name pos:start="3759:31" pos:end="3759:40">gidsetsize</name></expr>;</condition> <incr pos:start="3759:43" pos:end="3759:45"><expr pos:start="3759:43" pos:end="3759:45"><name pos:start="3759:43" pos:end="3759:43">i</name><operator pos:start="3759:44" pos:end="3759:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="3761:21" pos:end="3761:64"><block_content pos:start="3761:21" pos:end="3761:64">

                    <expr_stmt pos:start="3761:21" pos:end="3761:64"><expr pos:start="3761:21" pos:end="3761:63"><name pos:start="3761:21" pos:end="3761:39"><name pos:start="3761:21" pos:end="3761:36">target_grouplist</name><index pos:start="3761:37" pos:end="3761:39">[<expr pos:start="3761:38" pos:end="3761:38"><name pos:start="3761:38" pos:end="3761:38">i</name></expr>]</index></name> <operator pos:start="3761:41" pos:end="3761:41">=</operator> <call pos:start="3761:43" pos:end="3761:63"><name pos:start="3761:43" pos:end="3761:49">tswap32</name><argument_list pos:start="3761:50" pos:end="3761:63">(<argument pos:start="3761:51" pos:end="3761:62"><expr pos:start="3761:51" pos:end="3761:62"><name pos:start="3761:51" pos:end="3761:62"><name pos:start="3761:51" pos:end="3761:59">grouplist</name><index pos:start="3761:60" pos:end="3761:62">[<expr pos:start="3761:61" pos:end="3761:61"><name pos:start="3761:61" pos:end="3761:61">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="3763:17" pos:end="3763:68"><expr pos:start="3763:17" pos:end="3763:67"><call pos:start="3763:17" pos:end="3763:67"><name pos:start="3763:17" pos:end="3763:27">unlock_user</name><argument_list pos:start="3763:28" pos:end="3763:67">(<argument pos:start="3763:29" pos:end="3763:44"><expr pos:start="3763:29" pos:end="3763:44"><name pos:start="3763:29" pos:end="3763:44">target_grouplist</name></expr></argument>, <argument pos:start="3763:47" pos:end="3763:50"><expr pos:start="3763:47" pos:end="3763:50"><name pos:start="3763:47" pos:end="3763:50">arg2</name></expr></argument>, <argument pos:start="3763:53" pos:end="3763:66"><expr pos:start="3763:53" pos:end="3763:66"><name pos:start="3763:53" pos:end="3763:62">gidsetsize</name> <operator pos:start="3763:64" pos:end="3763:64">*</operator> <literal type="number" pos:start="3763:66" pos:end="3763:66">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="3769:9" pos:end="3774:0">break;</break>

<cpp:endif pos:start="3771:1" pos:end="3771:6">#<cpp:directive pos:start="3771:2" pos:end="3771:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3773:1" pos:end="3773:28">#<cpp:directive pos:start="3773:2" pos:end="3773:6">ifdef</cpp:directive> <name pos:start="3773:8" pos:end="3773:28">TARGET_NR_setgroups32</name></cpp:ifdef>

    <case pos:start="3775:5" pos:end="3775:31">case <expr pos:start="3775:10" pos:end="3775:30"><name pos:start="3775:10" pos:end="3775:30">TARGET_NR_setgroups32</name></expr>:</case>

        <block pos:start="3777:9" pos:end="3801:9">{<block_content pos:start="3779:13" pos:end="3799:62">

            <decl_stmt pos:start="3779:13" pos:end="3779:34"><decl pos:start="3779:13" pos:end="3779:33"><type pos:start="3779:13" pos:end="3779:15"><name pos:start="3779:13" pos:end="3779:15">int</name></type> <name pos:start="3779:17" pos:end="3779:26">gidsetsize</name> <init pos:start="3779:28" pos:end="3779:33">= <expr pos:start="3779:30" pos:end="3779:33"><name pos:start="3779:30" pos:end="3779:33">arg1</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="3781:13" pos:end="3781:39"><decl pos:start="3781:13" pos:end="3781:38"><type pos:start="3781:13" pos:end="3781:22"><name pos:start="3781:13" pos:end="3781:20">uint32_t</name> <modifier pos:start="3781:22" pos:end="3781:22">*</modifier></type><name pos:start="3781:23" pos:end="3781:38">target_grouplist</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3783:13" pos:end="3783:29"><decl pos:start="3783:13" pos:end="3783:28"><type pos:start="3783:13" pos:end="3783:19"><name pos:start="3783:13" pos:end="3783:17">gid_t</name> <modifier pos:start="3783:19" pos:end="3783:19">*</modifier></type><name pos:start="3783:20" pos:end="3783:28">grouplist</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3785:13" pos:end="3785:18"><decl pos:start="3785:13" pos:end="3785:17"><type pos:start="3785:13" pos:end="3785:15"><name pos:start="3785:13" pos:end="3785:15">int</name></type> <name pos:start="3785:17" pos:end="3785:17">i</name></decl>;</decl_stmt>

           

            <expr_stmt pos:start="3789:13" pos:end="3789:59"><expr pos:start="3789:13" pos:end="3789:58"><name pos:start="3789:13" pos:end="3789:21">grouplist</name> <operator pos:start="3789:23" pos:end="3789:23">=</operator> <call pos:start="3789:25" pos:end="3789:58"><name pos:start="3789:25" pos:end="3789:30">alloca</name><argument_list pos:start="3789:31" pos:end="3789:58">(<argument pos:start="3789:32" pos:end="3789:57"><expr pos:start="3789:32" pos:end="3789:57"><name pos:start="3789:32" pos:end="3789:41">gidsetsize</name> <operator pos:start="3789:43" pos:end="3789:43">*</operator> <sizeof pos:start="3789:45" pos:end="3789:57">sizeof<argument_list pos:start="3789:51" pos:end="3789:57">(<argument pos:start="3789:52" pos:end="3789:56"><expr pos:start="3789:52" pos:end="3789:56"><name pos:start="3789:52" pos:end="3789:56">gid_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3791:13" pos:end="3791:66"><expr pos:start="3791:13" pos:end="3791:65"><name pos:start="3791:13" pos:end="3791:28">target_grouplist</name> <operator pos:start="3791:30" pos:end="3791:30">=</operator> <call pos:start="3791:32" pos:end="3791:65"><name pos:start="3791:32" pos:end="3791:40">lock_user</name><argument_list pos:start="3791:41" pos:end="3791:65">(<argument pos:start="3791:42" pos:end="3791:45"><expr pos:start="3791:42" pos:end="3791:45"><name pos:start="3791:42" pos:end="3791:45">arg2</name></expr></argument>, <argument pos:start="3791:48" pos:end="3791:61"><expr pos:start="3791:48" pos:end="3791:61"><name pos:start="3791:48" pos:end="3791:57">gidsetsize</name> <operator pos:start="3791:59" pos:end="3791:59">*</operator> <literal type="number" pos:start="3791:61" pos:end="3791:61">4</literal></expr></argument>, <argument pos:start="3791:64" pos:end="3791:64"><expr pos:start="3791:64" pos:end="3791:64"><literal type="number" pos:start="3791:64" pos:end="3791:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="3793:13" pos:end="3795:60">for<control pos:start="3793:16" pos:end="3793:42">(<init pos:start="3793:17" pos:end="3793:22"><expr pos:start="3793:17" pos:end="3793:21"><name pos:start="3793:17" pos:end="3793:17">i</name> <operator pos:start="3793:19" pos:end="3793:19">=</operator> <literal type="number" pos:start="3793:21" pos:end="3793:21">0</literal></expr>;</init><condition pos:start="3793:23" pos:end="3793:37"><expr pos:start="3793:23" pos:end="3793:36"><name pos:start="3793:23" pos:end="3793:23">i</name> <operator pos:start="3793:25" pos:end="3793:25">&lt;</operator> <name pos:start="3793:27" pos:end="3793:36">gidsetsize</name></expr>;</condition> <incr pos:start="3793:39" pos:end="3793:41"><expr pos:start="3793:39" pos:end="3793:41"><name pos:start="3793:39" pos:end="3793:39">i</name><operator pos:start="3793:40" pos:end="3793:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="3795:17" pos:end="3795:60"><block_content pos:start="3795:17" pos:end="3795:60">

                <expr_stmt pos:start="3795:17" pos:end="3795:60"><expr pos:start="3795:17" pos:end="3795:59"><name pos:start="3795:17" pos:end="3795:28"><name pos:start="3795:17" pos:end="3795:25">grouplist</name><index pos:start="3795:26" pos:end="3795:28">[<expr pos:start="3795:27" pos:end="3795:27"><name pos:start="3795:27" pos:end="3795:27">i</name></expr>]</index></name> <operator pos:start="3795:30" pos:end="3795:30">=</operator> <call pos:start="3795:32" pos:end="3795:59"><name pos:start="3795:32" pos:end="3795:38">tswap32</name><argument_list pos:start="3795:39" pos:end="3795:59">(<argument pos:start="3795:40" pos:end="3795:58"><expr pos:start="3795:40" pos:end="3795:58"><name pos:start="3795:40" pos:end="3795:58"><name pos:start="3795:40" pos:end="3795:55">target_grouplist</name><index pos:start="3795:56" pos:end="3795:58">[<expr pos:start="3795:57" pos:end="3795:57"><name pos:start="3795:57" pos:end="3795:57">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="3797:13" pos:end="3797:51"><expr pos:start="3797:13" pos:end="3797:50"><call pos:start="3797:13" pos:end="3797:50"><name pos:start="3797:13" pos:end="3797:23">unlock_user</name><argument_list pos:start="3797:24" pos:end="3797:50">(<argument pos:start="3797:25" pos:end="3797:40"><expr pos:start="3797:25" pos:end="3797:40"><name pos:start="3797:25" pos:end="3797:40">target_grouplist</name></expr></argument>, <argument pos:start="3797:43" pos:end="3797:46"><expr pos:start="3797:43" pos:end="3797:46"><name pos:start="3797:43" pos:end="3797:46">arg2</name></expr></argument>, <argument pos:start="3797:49" pos:end="3797:49"><expr pos:start="3797:49" pos:end="3797:49"><literal type="number" pos:start="3797:49" pos:end="3797:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3799:13" pos:end="3799:62"><expr pos:start="3799:13" pos:end="3799:61"><name pos:start="3799:13" pos:end="3799:15">ret</name> <operator pos:start="3799:17" pos:end="3799:17">=</operator> <call pos:start="3799:19" pos:end="3799:61"><name pos:start="3799:19" pos:end="3799:27">get_errno</name><argument_list pos:start="3799:28" pos:end="3799:61">(<argument pos:start="3799:29" pos:end="3799:60"><expr pos:start="3799:29" pos:end="3799:60"><call pos:start="3799:29" pos:end="3799:60"><name pos:start="3799:29" pos:end="3799:37">setgroups</name><argument_list pos:start="3799:38" pos:end="3799:60">(<argument pos:start="3799:39" pos:end="3799:48"><expr pos:start="3799:39" pos:end="3799:48"><name pos:start="3799:39" pos:end="3799:48">gidsetsize</name></expr></argument>, <argument pos:start="3799:51" pos:end="3799:59"><expr pos:start="3799:51" pos:end="3799:59"><name pos:start="3799:51" pos:end="3799:59">grouplist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="3803:9" pos:end="3808:0">break;</break>

<cpp:endif pos:start="3805:1" pos:end="3805:6">#<cpp:directive pos:start="3805:2" pos:end="3805:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3807:1" pos:end="3807:25">#<cpp:directive pos:start="3807:2" pos:end="3807:6">ifdef</cpp:directive> <name pos:start="3807:8" pos:end="3807:25">TARGET_NR_fchown32</name></cpp:ifdef>

    <case pos:start="3809:5" pos:end="3809:28">case <expr pos:start="3809:10" pos:end="3809:27"><name pos:start="3809:10" pos:end="3809:27">TARGET_NR_fchown32</name></expr>:</case>

        <expr_stmt pos:start="3811:9" pos:end="3811:50"><expr pos:start="3811:9" pos:end="3811:49"><name pos:start="3811:9" pos:end="3811:11">ret</name> <operator pos:start="3811:13" pos:end="3811:13">=</operator> <call pos:start="3811:15" pos:end="3811:49"><name pos:start="3811:15" pos:end="3811:23">get_errno</name><argument_list pos:start="3811:24" pos:end="3811:49">(<argument pos:start="3811:25" pos:end="3811:48"><expr pos:start="3811:25" pos:end="3811:48"><call pos:start="3811:25" pos:end="3811:48"><name pos:start="3811:25" pos:end="3811:30">fchown</name><argument_list pos:start="3811:31" pos:end="3811:48">(<argument pos:start="3811:32" pos:end="3811:35"><expr pos:start="3811:32" pos:end="3811:35"><name pos:start="3811:32" pos:end="3811:35">arg1</name></expr></argument>, <argument pos:start="3811:38" pos:end="3811:41"><expr pos:start="3811:38" pos:end="3811:41"><name pos:start="3811:38" pos:end="3811:41">arg2</name></expr></argument>, <argument pos:start="3811:44" pos:end="3811:47"><expr pos:start="3811:44" pos:end="3811:47"><name pos:start="3811:44" pos:end="3811:47">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3813:9" pos:end="3818:0">break;</break>

<cpp:endif pos:start="3815:1" pos:end="3815:6">#<cpp:directive pos:start="3815:2" pos:end="3815:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3817:1" pos:end="3817:28">#<cpp:directive pos:start="3817:2" pos:end="3817:6">ifdef</cpp:directive> <name pos:start="3817:8" pos:end="3817:28">TARGET_NR_setresuid32</name></cpp:ifdef>

    <case pos:start="3819:5" pos:end="3819:31">case <expr pos:start="3819:10" pos:end="3819:30"><name pos:start="3819:10" pos:end="3819:30">TARGET_NR_setresuid32</name></expr>:</case>

        <expr_stmt pos:start="3821:9" pos:end="3821:53"><expr pos:start="3821:9" pos:end="3821:52"><name pos:start="3821:9" pos:end="3821:11">ret</name> <operator pos:start="3821:13" pos:end="3821:13">=</operator> <call pos:start="3821:15" pos:end="3821:52"><name pos:start="3821:15" pos:end="3821:23">get_errno</name><argument_list pos:start="3821:24" pos:end="3821:52">(<argument pos:start="3821:25" pos:end="3821:51"><expr pos:start="3821:25" pos:end="3821:51"><call pos:start="3821:25" pos:end="3821:51"><name pos:start="3821:25" pos:end="3821:33">setresuid</name><argument_list pos:start="3821:34" pos:end="3821:51">(<argument pos:start="3821:35" pos:end="3821:38"><expr pos:start="3821:35" pos:end="3821:38"><name pos:start="3821:35" pos:end="3821:38">arg1</name></expr></argument>, <argument pos:start="3821:41" pos:end="3821:44"><expr pos:start="3821:41" pos:end="3821:44"><name pos:start="3821:41" pos:end="3821:44">arg2</name></expr></argument>, <argument pos:start="3821:47" pos:end="3821:50"><expr pos:start="3821:47" pos:end="3821:50"><name pos:start="3821:47" pos:end="3821:50">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3823:9" pos:end="3828:0">break;</break>

<cpp:endif pos:start="3825:1" pos:end="3825:6">#<cpp:directive pos:start="3825:2" pos:end="3825:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3827:1" pos:end="3827:28">#<cpp:directive pos:start="3827:2" pos:end="3827:6">ifdef</cpp:directive> <name pos:start="3827:8" pos:end="3827:28">TARGET_NR_getresuid32</name></cpp:ifdef>

    <case pos:start="3829:5" pos:end="3829:31">case <expr pos:start="3829:10" pos:end="3829:30"><name pos:start="3829:10" pos:end="3829:30">TARGET_NR_getresuid32</name></expr>:</case>

        <block pos:start="3831:9" pos:end="3847:9">{<block_content pos:start="3833:13" pos:end="3845:13">

            <decl_stmt pos:start="3833:13" pos:end="3833:35"><decl pos:start="3833:13" pos:end="3833:22"><type pos:start="3833:13" pos:end="3833:17"><name pos:start="3833:13" pos:end="3833:17">uid_t</name></type> <name pos:start="3833:19" pos:end="3833:22">ruid</name></decl>, <decl pos:start="3833:25" pos:end="3833:28"><type ref="prev" pos:start="3833:13" pos:end="3833:17"/><name pos:start="3833:25" pos:end="3833:28">euid</name></decl>, <decl pos:start="3833:31" pos:end="3833:34"><type ref="prev" pos:start="3833:13" pos:end="3833:17"/><name pos:start="3833:31" pos:end="3833:34">suid</name></decl>;</decl_stmt>

            <expr_stmt pos:start="3835:13" pos:end="3835:60"><expr pos:start="3835:13" pos:end="3835:59"><name pos:start="3835:13" pos:end="3835:15">ret</name> <operator pos:start="3835:17" pos:end="3835:17">=</operator> <call pos:start="3835:19" pos:end="3835:59"><name pos:start="3835:19" pos:end="3835:27">get_errno</name><argument_list pos:start="3835:28" pos:end="3835:59">(<argument pos:start="3835:29" pos:end="3835:58"><expr pos:start="3835:29" pos:end="3835:58"><call pos:start="3835:29" pos:end="3835:58"><name pos:start="3835:29" pos:end="3835:37">getresuid</name><argument_list pos:start="3835:38" pos:end="3835:58">(<argument pos:start="3835:39" pos:end="3835:43"><expr pos:start="3835:39" pos:end="3835:43"><operator pos:start="3835:39" pos:end="3835:39">&amp;</operator><name pos:start="3835:40" pos:end="3835:43">ruid</name></expr></argument>, <argument pos:start="3835:46" pos:end="3835:50"><expr pos:start="3835:46" pos:end="3835:50"><operator pos:start="3835:46" pos:end="3835:46">&amp;</operator><name pos:start="3835:47" pos:end="3835:50">euid</name></expr></argument>, <argument pos:start="3835:53" pos:end="3835:57"><expr pos:start="3835:53" pos:end="3835:57"><operator pos:start="3835:53" pos:end="3835:53">&amp;</operator><name pos:start="3835:54" pos:end="3835:57">suid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3837:13" pos:end="3845:13"><if pos:start="3837:13" pos:end="3845:13">if <condition pos:start="3837:16" pos:end="3837:31">(<expr pos:start="3837:17" pos:end="3837:30"><operator pos:start="3837:17" pos:end="3837:17">!</operator><call pos:start="3837:18" pos:end="3837:30"><name pos:start="3837:18" pos:end="3837:25">is_error</name><argument_list pos:start="3837:26" pos:end="3837:30">(<argument pos:start="3837:27" pos:end="3837:29"><expr pos:start="3837:27" pos:end="3837:29"><name pos:start="3837:27" pos:end="3837:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3837:33" pos:end="3845:13">{<block_content pos:start="3839:17" pos:end="3843:44">

                <expr_stmt pos:start="3839:17" pos:end="3839:44"><expr pos:start="3839:17" pos:end="3839:43"><call pos:start="3839:17" pos:end="3839:43"><name pos:start="3839:17" pos:end="3839:22">tput32</name><argument_list pos:start="3839:23" pos:end="3839:43">(<argument pos:start="3839:24" pos:end="3839:27"><expr pos:start="3839:24" pos:end="3839:27"><name pos:start="3839:24" pos:end="3839:27">arg1</name></expr></argument>, <argument pos:start="3839:30" pos:end="3839:42"><expr pos:start="3839:30" pos:end="3839:42"><call pos:start="3839:30" pos:end="3839:42"><name pos:start="3839:30" pos:end="3839:36">tswap32</name><argument_list pos:start="3839:37" pos:end="3839:42">(<argument pos:start="3839:38" pos:end="3839:41"><expr pos:start="3839:38" pos:end="3839:41"><name pos:start="3839:38" pos:end="3839:41">ruid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3841:17" pos:end="3841:44"><expr pos:start="3841:17" pos:end="3841:43"><call pos:start="3841:17" pos:end="3841:43"><name pos:start="3841:17" pos:end="3841:22">tput32</name><argument_list pos:start="3841:23" pos:end="3841:43">(<argument pos:start="3841:24" pos:end="3841:27"><expr pos:start="3841:24" pos:end="3841:27"><name pos:start="3841:24" pos:end="3841:27">arg2</name></expr></argument>, <argument pos:start="3841:30" pos:end="3841:42"><expr pos:start="3841:30" pos:end="3841:42"><call pos:start="3841:30" pos:end="3841:42"><name pos:start="3841:30" pos:end="3841:36">tswap32</name><argument_list pos:start="3841:37" pos:end="3841:42">(<argument pos:start="3841:38" pos:end="3841:41"><expr pos:start="3841:38" pos:end="3841:41"><name pos:start="3841:38" pos:end="3841:41">euid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3843:17" pos:end="3843:44"><expr pos:start="3843:17" pos:end="3843:43"><call pos:start="3843:17" pos:end="3843:43"><name pos:start="3843:17" pos:end="3843:22">tput32</name><argument_list pos:start="3843:23" pos:end="3843:43">(<argument pos:start="3843:24" pos:end="3843:27"><expr pos:start="3843:24" pos:end="3843:27"><name pos:start="3843:24" pos:end="3843:27">arg3</name></expr></argument>, <argument pos:start="3843:30" pos:end="3843:42"><expr pos:start="3843:30" pos:end="3843:42"><call pos:start="3843:30" pos:end="3843:42"><name pos:start="3843:30" pos:end="3843:36">tswap32</name><argument_list pos:start="3843:37" pos:end="3843:42">(<argument pos:start="3843:38" pos:end="3843:41"><expr pos:start="3843:38" pos:end="3843:41"><name pos:start="3843:38" pos:end="3843:41">suid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="3849:9" pos:end="3854:0">break;</break>

<cpp:endif pos:start="3851:1" pos:end="3851:6">#<cpp:directive pos:start="3851:2" pos:end="3851:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3853:1" pos:end="3853:28">#<cpp:directive pos:start="3853:2" pos:end="3853:6">ifdef</cpp:directive> <name pos:start="3853:8" pos:end="3853:28">TARGET_NR_setresgid32</name></cpp:ifdef>

    <case pos:start="3855:5" pos:end="3855:31">case <expr pos:start="3855:10" pos:end="3855:30"><name pos:start="3855:10" pos:end="3855:30">TARGET_NR_setresgid32</name></expr>:</case>

        <expr_stmt pos:start="3857:9" pos:end="3857:53"><expr pos:start="3857:9" pos:end="3857:52"><name pos:start="3857:9" pos:end="3857:11">ret</name> <operator pos:start="3857:13" pos:end="3857:13">=</operator> <call pos:start="3857:15" pos:end="3857:52"><name pos:start="3857:15" pos:end="3857:23">get_errno</name><argument_list pos:start="3857:24" pos:end="3857:52">(<argument pos:start="3857:25" pos:end="3857:51"><expr pos:start="3857:25" pos:end="3857:51"><call pos:start="3857:25" pos:end="3857:51"><name pos:start="3857:25" pos:end="3857:33">setresgid</name><argument_list pos:start="3857:34" pos:end="3857:51">(<argument pos:start="3857:35" pos:end="3857:38"><expr pos:start="3857:35" pos:end="3857:38"><name pos:start="3857:35" pos:end="3857:38">arg1</name></expr></argument>, <argument pos:start="3857:41" pos:end="3857:44"><expr pos:start="3857:41" pos:end="3857:44"><name pos:start="3857:41" pos:end="3857:44">arg2</name></expr></argument>, <argument pos:start="3857:47" pos:end="3857:50"><expr pos:start="3857:47" pos:end="3857:50"><name pos:start="3857:47" pos:end="3857:50">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3859:9" pos:end="3864:0">break;</break>

<cpp:endif pos:start="3861:1" pos:end="3861:6">#<cpp:directive pos:start="3861:2" pos:end="3861:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3863:1" pos:end="3863:28">#<cpp:directive pos:start="3863:2" pos:end="3863:6">ifdef</cpp:directive> <name pos:start="3863:8" pos:end="3863:28">TARGET_NR_getresgid32</name></cpp:ifdef>

    <case pos:start="3865:5" pos:end="3865:31">case <expr pos:start="3865:10" pos:end="3865:30"><name pos:start="3865:10" pos:end="3865:30">TARGET_NR_getresgid32</name></expr>:</case>

        <block pos:start="3867:9" pos:end="3883:9">{<block_content pos:start="3869:13" pos:end="3881:13">

            <decl_stmt pos:start="3869:13" pos:end="3869:35"><decl pos:start="3869:13" pos:end="3869:22"><type pos:start="3869:13" pos:end="3869:17"><name pos:start="3869:13" pos:end="3869:17">gid_t</name></type> <name pos:start="3869:19" pos:end="3869:22">rgid</name></decl>, <decl pos:start="3869:25" pos:end="3869:28"><type ref="prev" pos:start="3869:13" pos:end="3869:17"/><name pos:start="3869:25" pos:end="3869:28">egid</name></decl>, <decl pos:start="3869:31" pos:end="3869:34"><type ref="prev" pos:start="3869:13" pos:end="3869:17"/><name pos:start="3869:31" pos:end="3869:34">sgid</name></decl>;</decl_stmt>

            <expr_stmt pos:start="3871:13" pos:end="3871:60"><expr pos:start="3871:13" pos:end="3871:59"><name pos:start="3871:13" pos:end="3871:15">ret</name> <operator pos:start="3871:17" pos:end="3871:17">=</operator> <call pos:start="3871:19" pos:end="3871:59"><name pos:start="3871:19" pos:end="3871:27">get_errno</name><argument_list pos:start="3871:28" pos:end="3871:59">(<argument pos:start="3871:29" pos:end="3871:58"><expr pos:start="3871:29" pos:end="3871:58"><call pos:start="3871:29" pos:end="3871:58"><name pos:start="3871:29" pos:end="3871:37">getresgid</name><argument_list pos:start="3871:38" pos:end="3871:58">(<argument pos:start="3871:39" pos:end="3871:43"><expr pos:start="3871:39" pos:end="3871:43"><operator pos:start="3871:39" pos:end="3871:39">&amp;</operator><name pos:start="3871:40" pos:end="3871:43">rgid</name></expr></argument>, <argument pos:start="3871:46" pos:end="3871:50"><expr pos:start="3871:46" pos:end="3871:50"><operator pos:start="3871:46" pos:end="3871:46">&amp;</operator><name pos:start="3871:47" pos:end="3871:50">egid</name></expr></argument>, <argument pos:start="3871:53" pos:end="3871:57"><expr pos:start="3871:53" pos:end="3871:57"><operator pos:start="3871:53" pos:end="3871:53">&amp;</operator><name pos:start="3871:54" pos:end="3871:57">sgid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3873:13" pos:end="3881:13"><if pos:start="3873:13" pos:end="3881:13">if <condition pos:start="3873:16" pos:end="3873:31">(<expr pos:start="3873:17" pos:end="3873:30"><operator pos:start="3873:17" pos:end="3873:17">!</operator><call pos:start="3873:18" pos:end="3873:30"><name pos:start="3873:18" pos:end="3873:25">is_error</name><argument_list pos:start="3873:26" pos:end="3873:30">(<argument pos:start="3873:27" pos:end="3873:29"><expr pos:start="3873:27" pos:end="3873:29"><name pos:start="3873:27" pos:end="3873:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3873:33" pos:end="3881:13">{<block_content pos:start="3875:17" pos:end="3879:44">

                <expr_stmt pos:start="3875:17" pos:end="3875:44"><expr pos:start="3875:17" pos:end="3875:43"><call pos:start="3875:17" pos:end="3875:43"><name pos:start="3875:17" pos:end="3875:22">tput32</name><argument_list pos:start="3875:23" pos:end="3875:43">(<argument pos:start="3875:24" pos:end="3875:27"><expr pos:start="3875:24" pos:end="3875:27"><name pos:start="3875:24" pos:end="3875:27">arg1</name></expr></argument>, <argument pos:start="3875:30" pos:end="3875:42"><expr pos:start="3875:30" pos:end="3875:42"><call pos:start="3875:30" pos:end="3875:42"><name pos:start="3875:30" pos:end="3875:36">tswap32</name><argument_list pos:start="3875:37" pos:end="3875:42">(<argument pos:start="3875:38" pos:end="3875:41"><expr pos:start="3875:38" pos:end="3875:41"><name pos:start="3875:38" pos:end="3875:41">rgid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3877:17" pos:end="3877:44"><expr pos:start="3877:17" pos:end="3877:43"><call pos:start="3877:17" pos:end="3877:43"><name pos:start="3877:17" pos:end="3877:22">tput32</name><argument_list pos:start="3877:23" pos:end="3877:43">(<argument pos:start="3877:24" pos:end="3877:27"><expr pos:start="3877:24" pos:end="3877:27"><name pos:start="3877:24" pos:end="3877:27">arg2</name></expr></argument>, <argument pos:start="3877:30" pos:end="3877:42"><expr pos:start="3877:30" pos:end="3877:42"><call pos:start="3877:30" pos:end="3877:42"><name pos:start="3877:30" pos:end="3877:36">tswap32</name><argument_list pos:start="3877:37" pos:end="3877:42">(<argument pos:start="3877:38" pos:end="3877:41"><expr pos:start="3877:38" pos:end="3877:41"><name pos:start="3877:38" pos:end="3877:41">egid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3879:17" pos:end="3879:44"><expr pos:start="3879:17" pos:end="3879:43"><call pos:start="3879:17" pos:end="3879:43"><name pos:start="3879:17" pos:end="3879:22">tput32</name><argument_list pos:start="3879:23" pos:end="3879:43">(<argument pos:start="3879:24" pos:end="3879:27"><expr pos:start="3879:24" pos:end="3879:27"><name pos:start="3879:24" pos:end="3879:27">arg3</name></expr></argument>, <argument pos:start="3879:30" pos:end="3879:42"><expr pos:start="3879:30" pos:end="3879:42"><call pos:start="3879:30" pos:end="3879:42"><name pos:start="3879:30" pos:end="3879:36">tswap32</name><argument_list pos:start="3879:37" pos:end="3879:42">(<argument pos:start="3879:38" pos:end="3879:41"><expr pos:start="3879:38" pos:end="3879:41"><name pos:start="3879:38" pos:end="3879:41">sgid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="3885:9" pos:end="3890:0">break;</break>

<cpp:endif pos:start="3887:1" pos:end="3887:6">#<cpp:directive pos:start="3887:2" pos:end="3887:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3889:1" pos:end="3889:24">#<cpp:directive pos:start="3889:2" pos:end="3889:6">ifdef</cpp:directive> <name pos:start="3889:8" pos:end="3889:24">TARGET_NR_chown32</name></cpp:ifdef>

    <case pos:start="3891:5" pos:end="3891:27">case <expr pos:start="3891:10" pos:end="3891:26"><name pos:start="3891:10" pos:end="3891:26">TARGET_NR_chown32</name></expr>:</case>

        <expr_stmt pos:start="3893:9" pos:end="3893:35"><expr pos:start="3893:9" pos:end="3893:34"><name pos:start="3893:9" pos:end="3893:9">p</name> <operator pos:start="3893:11" pos:end="3893:11">=</operator> <call pos:start="3893:13" pos:end="3893:34"><name pos:start="3893:13" pos:end="3893:28">lock_user_string</name><argument_list pos:start="3893:29" pos:end="3893:34">(<argument pos:start="3893:30" pos:end="3893:33"><expr pos:start="3893:30" pos:end="3893:33"><name pos:start="3893:30" pos:end="3893:33">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3895:9" pos:end="3895:46"><expr pos:start="3895:9" pos:end="3895:45"><name pos:start="3895:9" pos:end="3895:11">ret</name> <operator pos:start="3895:13" pos:end="3895:13">=</operator> <call pos:start="3895:15" pos:end="3895:45"><name pos:start="3895:15" pos:end="3895:23">get_errno</name><argument_list pos:start="3895:24" pos:end="3895:45">(<argument pos:start="3895:25" pos:end="3895:44"><expr pos:start="3895:25" pos:end="3895:44"><call pos:start="3895:25" pos:end="3895:44"><name pos:start="3895:25" pos:end="3895:29">chown</name><argument_list pos:start="3895:30" pos:end="3895:44">(<argument pos:start="3895:31" pos:end="3895:31"><expr pos:start="3895:31" pos:end="3895:31"><name pos:start="3895:31" pos:end="3895:31">p</name></expr></argument>, <argument pos:start="3895:34" pos:end="3895:37"><expr pos:start="3895:34" pos:end="3895:37"><name pos:start="3895:34" pos:end="3895:37">arg2</name></expr></argument>, <argument pos:start="3895:40" pos:end="3895:43"><expr pos:start="3895:40" pos:end="3895:43"><name pos:start="3895:40" pos:end="3895:43">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3897:9" pos:end="3897:32"><expr pos:start="3897:9" pos:end="3897:31"><call pos:start="3897:9" pos:end="3897:31"><name pos:start="3897:9" pos:end="3897:19">unlock_user</name><argument_list pos:start="3897:20" pos:end="3897:31">(<argument pos:start="3897:21" pos:end="3897:21"><expr pos:start="3897:21" pos:end="3897:21"><name pos:start="3897:21" pos:end="3897:21">p</name></expr></argument>, <argument pos:start="3897:24" pos:end="3897:27"><expr pos:start="3897:24" pos:end="3897:27"><name pos:start="3897:24" pos:end="3897:27">arg1</name></expr></argument>, <argument pos:start="3897:30" pos:end="3897:30"><expr pos:start="3897:30" pos:end="3897:30"><literal type="number" pos:start="3897:30" pos:end="3897:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3899:9" pos:end="3904:0">break;</break>

<cpp:endif pos:start="3901:1" pos:end="3901:6">#<cpp:directive pos:start="3901:2" pos:end="3901:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3903:1" pos:end="3903:25">#<cpp:directive pos:start="3903:2" pos:end="3903:6">ifdef</cpp:directive> <name pos:start="3903:8" pos:end="3903:25">TARGET_NR_setuid32</name></cpp:ifdef>

    <case pos:start="3905:5" pos:end="3905:28">case <expr pos:start="3905:10" pos:end="3905:27"><name pos:start="3905:10" pos:end="3905:27">TARGET_NR_setuid32</name></expr>:</case>

        <expr_stmt pos:start="3907:9" pos:end="3907:38"><expr pos:start="3907:9" pos:end="3907:37"><name pos:start="3907:9" pos:end="3907:11">ret</name> <operator pos:start="3907:13" pos:end="3907:13">=</operator> <call pos:start="3907:15" pos:end="3907:37"><name pos:start="3907:15" pos:end="3907:23">get_errno</name><argument_list pos:start="3907:24" pos:end="3907:37">(<argument pos:start="3907:25" pos:end="3907:36"><expr pos:start="3907:25" pos:end="3907:36"><call pos:start="3907:25" pos:end="3907:36"><name pos:start="3907:25" pos:end="3907:30">setuid</name><argument_list pos:start="3907:31" pos:end="3907:36">(<argument pos:start="3907:32" pos:end="3907:35"><expr pos:start="3907:32" pos:end="3907:35"><name pos:start="3907:32" pos:end="3907:35">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3909:9" pos:end="3914:0">break;</break>

<cpp:endif pos:start="3911:1" pos:end="3911:6">#<cpp:directive pos:start="3911:2" pos:end="3911:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3913:1" pos:end="3913:25">#<cpp:directive pos:start="3913:2" pos:end="3913:6">ifdef</cpp:directive> <name pos:start="3913:8" pos:end="3913:25">TARGET_NR_setgid32</name></cpp:ifdef>

    <case pos:start="3915:5" pos:end="3915:28">case <expr pos:start="3915:10" pos:end="3915:27"><name pos:start="3915:10" pos:end="3915:27">TARGET_NR_setgid32</name></expr>:</case>

        <expr_stmt pos:start="3917:9" pos:end="3917:38"><expr pos:start="3917:9" pos:end="3917:37"><name pos:start="3917:9" pos:end="3917:11">ret</name> <operator pos:start="3917:13" pos:end="3917:13">=</operator> <call pos:start="3917:15" pos:end="3917:37"><name pos:start="3917:15" pos:end="3917:23">get_errno</name><argument_list pos:start="3917:24" pos:end="3917:37">(<argument pos:start="3917:25" pos:end="3917:36"><expr pos:start="3917:25" pos:end="3917:36"><call pos:start="3917:25" pos:end="3917:36"><name pos:start="3917:25" pos:end="3917:30">setgid</name><argument_list pos:start="3917:31" pos:end="3917:36">(<argument pos:start="3917:32" pos:end="3917:35"><expr pos:start="3917:32" pos:end="3917:35"><name pos:start="3917:32" pos:end="3917:35">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3919:9" pos:end="3924:0">break;</break>

<cpp:endif pos:start="3921:1" pos:end="3921:6">#<cpp:directive pos:start="3921:2" pos:end="3921:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3923:1" pos:end="3923:27">#<cpp:directive pos:start="3923:2" pos:end="3923:6">ifdef</cpp:directive> <name pos:start="3923:8" pos:end="3923:27">TARGET_NR_setfsuid32</name></cpp:ifdef>

    <case pos:start="3925:5" pos:end="3925:30">case <expr pos:start="3925:10" pos:end="3925:29"><name pos:start="3925:10" pos:end="3925:29">TARGET_NR_setfsuid32</name></expr>:</case>

        <expr_stmt pos:start="3927:9" pos:end="3927:40"><expr pos:start="3927:9" pos:end="3927:39"><name pos:start="3927:9" pos:end="3927:11">ret</name> <operator pos:start="3927:13" pos:end="3927:13">=</operator> <call pos:start="3927:15" pos:end="3927:39"><name pos:start="3927:15" pos:end="3927:23">get_errno</name><argument_list pos:start="3927:24" pos:end="3927:39">(<argument pos:start="3927:25" pos:end="3927:38"><expr pos:start="3927:25" pos:end="3927:38"><call pos:start="3927:25" pos:end="3927:38"><name pos:start="3927:25" pos:end="3927:32">setfsuid</name><argument_list pos:start="3927:33" pos:end="3927:38">(<argument pos:start="3927:34" pos:end="3927:37"><expr pos:start="3927:34" pos:end="3927:37"><name pos:start="3927:34" pos:end="3927:37">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3929:9" pos:end="3934:0">break;</break>

<cpp:endif pos:start="3931:1" pos:end="3931:6">#<cpp:directive pos:start="3931:2" pos:end="3931:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3933:1" pos:end="3933:27">#<cpp:directive pos:start="3933:2" pos:end="3933:6">ifdef</cpp:directive> <name pos:start="3933:8" pos:end="3933:27">TARGET_NR_setfsgid32</name></cpp:ifdef>

    <case pos:start="3935:5" pos:end="3935:30">case <expr pos:start="3935:10" pos:end="3935:29"><name pos:start="3935:10" pos:end="3935:29">TARGET_NR_setfsgid32</name></expr>:</case>

        <expr_stmt pos:start="3937:9" pos:end="3937:40"><expr pos:start="3937:9" pos:end="3937:39"><name pos:start="3937:9" pos:end="3937:11">ret</name> <operator pos:start="3937:13" pos:end="3937:13">=</operator> <call pos:start="3937:15" pos:end="3937:39"><name pos:start="3937:15" pos:end="3937:23">get_errno</name><argument_list pos:start="3937:24" pos:end="3937:39">(<argument pos:start="3937:25" pos:end="3937:38"><expr pos:start="3937:25" pos:end="3937:38"><call pos:start="3937:25" pos:end="3937:38"><name pos:start="3937:25" pos:end="3937:32">setfsgid</name><argument_list pos:start="3937:33" pos:end="3937:38">(<argument pos:start="3937:34" pos:end="3937:37"><expr pos:start="3937:34" pos:end="3937:37"><name pos:start="3937:34" pos:end="3937:37">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3939:9" pos:end="3942:0">break;</break>

<cpp:endif pos:start="3941:1" pos:end="3941:6">#<cpp:directive pos:start="3941:2" pos:end="3941:6">endif</cpp:directive></cpp:endif>



    <case pos:start="3945:5" pos:end="3945:30">case <expr pos:start="3945:10" pos:end="3945:29"><name pos:start="3945:10" pos:end="3945:29">TARGET_NR_pivot_root</name></expr>:</case>

        <goto pos:start="3947:9" pos:end="3950:0">goto <name pos:start="3947:14" pos:end="3947:26">unimplemented</name>;</goto>

<cpp:ifdef pos:start="3949:1" pos:end="3949:24">#<cpp:directive pos:start="3949:2" pos:end="3949:6">ifdef</cpp:directive> <name pos:start="3949:8" pos:end="3949:24">TARGET_NR_mincore</name></cpp:ifdef>

    <case pos:start="3951:5" pos:end="3951:27">case <expr pos:start="3951:10" pos:end="3951:26"><name pos:start="3951:10" pos:end="3951:26">TARGET_NR_mincore</name></expr>:</case>

        <goto pos:start="3953:9" pos:end="3958:0">goto <name pos:start="3953:14" pos:end="3953:26">unimplemented</name>;</goto>

<cpp:endif pos:start="3955:1" pos:end="3955:6">#<cpp:directive pos:start="3955:2" pos:end="3955:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3957:1" pos:end="3957:24">#<cpp:directive pos:start="3957:2" pos:end="3957:6">ifdef</cpp:directive> <name pos:start="3957:8" pos:end="3957:24">TARGET_NR_madvise</name></cpp:ifdef>

    <case pos:start="3959:5" pos:end="3959:27">case <expr pos:start="3959:10" pos:end="3959:26"><name pos:start="3959:10" pos:end="3959:26">TARGET_NR_madvise</name></expr>:</case>

        <comment type="block" pos:start="3961:9" pos:end="3967:71">/* A straight passthrough may not be safe because qemu sometimes

           turns private flie-backed mappings into anonymous mappings.

           This will break MADV_DONTNEED.

           This is a hint, so ignoring and returning success is ok.  */</comment>

        <expr_stmt pos:start="3969:9" pos:end="3969:27"><expr pos:start="3969:9" pos:end="3969:26"><name pos:start="3969:9" pos:end="3969:11">ret</name> <operator pos:start="3969:13" pos:end="3969:13">=</operator> <call pos:start="3969:15" pos:end="3969:26"><name pos:start="3969:15" pos:end="3969:23">get_errno</name><argument_list pos:start="3969:24" pos:end="3969:26">(<argument pos:start="3969:25" pos:end="3969:25"><expr pos:start="3969:25" pos:end="3969:25"><literal type="number" pos:start="3969:25" pos:end="3969:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3971:9" pos:end="3976:0">break;</break>

<cpp:endif pos:start="3973:1" pos:end="3973:6">#<cpp:directive pos:start="3973:2" pos:end="3973:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="3975:1" pos:end="3975:26">#<cpp:directive pos:start="3975:2" pos:end="3975:3">if</cpp:directive> <expr pos:start="3975:5" pos:end="3975:26"><name pos:start="3975:5" pos:end="3975:20">TARGET_LONG_BITS</name> <operator pos:start="3975:22" pos:end="3975:23">==</operator> <literal type="number" pos:start="3975:25" pos:end="3975:26">32</literal></expr></cpp:if>

    <case pos:start="3977:5" pos:end="3977:27">case <expr pos:start="3977:10" pos:end="3977:26"><name pos:start="3977:10" pos:end="3977:26">TARGET_NR_fcntl64</name></expr>:</case>

    <block pos:start="3979:5" pos:end="4182:0">{<block_content pos:start="3981:9" pos:end="4175:14">

	<decl_stmt pos:start="3981:9" pos:end="3981:16"><decl pos:start="3981:9" pos:end="3981:15"><type pos:start="3981:9" pos:end="3981:11"><name pos:start="3981:9" pos:end="3981:11">int</name></type> <name pos:start="3981:13" pos:end="3981:15">cmd</name></decl>;</decl_stmt>

	<decl_stmt pos:start="3983:9" pos:end="3983:26"><decl pos:start="3983:9" pos:end="3983:25"><type pos:start="3983:9" pos:end="3983:22"><name pos:start="3983:9" pos:end="3983:22"><name pos:start="3983:9" pos:end="3983:14">struct</name> <name pos:start="3983:16" pos:end="3983:22">flock64</name></name></type> <name pos:start="3983:24" pos:end="3983:25">fl</name></decl>;</decl_stmt>

	<decl_stmt pos:start="3985:9" pos:end="3988:0"><decl pos:start="3985:9" pos:end="3985:40"><type pos:start="3985:9" pos:end="3985:31"><name pos:start="3985:9" pos:end="3985:29"><name pos:start="3985:9" pos:end="3985:14">struct</name> <name pos:start="3985:16" pos:end="3985:29">target_flock64</name></name> <modifier pos:start="3985:31" pos:end="3985:31">*</modifier></type><name pos:start="3985:32" pos:end="3985:40">target_fl</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="3987:1" pos:end="3987:17">#<cpp:directive pos:start="3987:2" pos:end="3987:6">ifdef</cpp:directive> <name pos:start="3987:8" pos:end="3987:17">TARGET_ARM</name></cpp:ifdef>

	<decl_stmt pos:start="3989:9" pos:end="3992:0"><decl pos:start="3989:9" pos:end="3989:46"><type pos:start="3989:9" pos:end="3989:36"><name pos:start="3989:9" pos:end="3989:34"><name pos:start="3989:9" pos:end="3989:14">struct</name> <name pos:start="3989:16" pos:end="3989:34">target_eabi_flock64</name></name> <modifier pos:start="3989:36" pos:end="3989:36">*</modifier></type><name pos:start="3989:37" pos:end="3989:46">target_efl</name></decl>;</decl_stmt>

<cpp:endif pos:start="3991:1" pos:end="3991:6">#<cpp:directive pos:start="3991:2" pos:end="3991:6">endif</cpp:directive></cpp:endif>



        <switch pos:start="3995:9" pos:end="4021:9">switch<condition pos:start="3995:15" pos:end="3995:20">(<expr pos:start="3995:16" pos:end="3995:19"><name pos:start="3995:16" pos:end="3995:19">arg2</name></expr>)</condition><block pos:start="3995:21" pos:end="4021:9">{<block_content pos:start="3997:9" pos:end="4019:18">

        <case pos:start="3997:9" pos:end="3997:30">case <expr pos:start="3997:14" pos:end="3997:29"><name pos:start="3997:14" pos:end="3997:29">TARGET_F_GETLK64</name></expr>:</case>

            <expr_stmt pos:start="3999:13" pos:end="3999:28"><expr pos:start="3999:13" pos:end="3999:27"><name pos:start="3999:13" pos:end="3999:15">cmd</name> <operator pos:start="3999:17" pos:end="3999:17">=</operator> <name pos:start="3999:19" pos:end="3999:27">F_GETLK64</name></expr>;</expr_stmt>

            <break pos:start="4001:13" pos:end="4001:18">break;</break>

        <case pos:start="4003:9" pos:end="4003:30">case <expr pos:start="4003:14" pos:end="4003:29"><name pos:start="4003:14" pos:end="4003:29">TARGET_F_SETLK64</name></expr>:</case>

            <expr_stmt pos:start="4005:13" pos:end="4005:28"><expr pos:start="4005:13" pos:end="4005:27"><name pos:start="4005:13" pos:end="4005:15">cmd</name> <operator pos:start="4005:17" pos:end="4005:17">=</operator> <name pos:start="4005:19" pos:end="4005:27">F_SETLK64</name></expr>;</expr_stmt>

            <break pos:start="4007:13" pos:end="4007:18">break;</break>

        <case pos:start="4009:9" pos:end="4009:31">case <expr pos:start="4009:14" pos:end="4009:30"><name pos:start="4009:14" pos:end="4009:30">TARGET_F_SETLKW64</name></expr>:</case>

            <expr_stmt pos:start="4011:13" pos:end="4011:28"><expr pos:start="4011:13" pos:end="4011:27"><name pos:start="4011:13" pos:end="4011:15">cmd</name> <operator pos:start="4011:17" pos:end="4011:17">=</operator> <name pos:start="4011:19" pos:end="4011:27">F_SETLK64</name></expr>;</expr_stmt>

            <break pos:start="4013:13" pos:end="4013:18">break;</break>

        <default pos:start="4015:9" pos:end="4015:16">default:</default>

            <expr_stmt pos:start="4017:13" pos:end="4017:23"><expr pos:start="4017:13" pos:end="4017:22"><name pos:start="4017:13" pos:end="4017:15">cmd</name> <operator pos:start="4017:17" pos:end="4017:17">=</operator> <name pos:start="4017:19" pos:end="4017:22">arg2</name></expr>;</expr_stmt>

            <break pos:start="4019:13" pos:end="4019:18">break;</break>

        </block_content>}</block></switch>



        <switch pos:start="4025:9" pos:end="4173:9">switch<condition pos:start="4025:15" pos:end="4025:20">(<expr pos:start="4025:16" pos:end="4025:19"><name pos:start="4025:16" pos:end="4025:19">arg2</name></expr>)</condition> <block pos:start="4025:22" pos:end="4173:9">{<block_content pos:start="4027:9" pos:end="4171:18">

        <case pos:start="4027:9" pos:end="4030:0">case <expr pos:start="4027:14" pos:end="4027:29"><name pos:start="4027:14" pos:end="4027:29">TARGET_F_GETLK64</name></expr>:</case>

<cpp:ifdef pos:start="4029:1" pos:end="4029:17">#<cpp:directive pos:start="4029:2" pos:end="4029:6">ifdef</cpp:directive> <name pos:start="4029:8" pos:end="4029:17">TARGET_ARM</name></cpp:ifdef>

            <if_stmt pos:start="4031:13" pos:end="4067:13"><if pos:start="4031:13" pos:end="4047:13">if <condition pos:start="4031:16" pos:end="4031:47">(<expr pos:start="4031:17" pos:end="4031:46"><operator pos:start="4031:17" pos:end="4031:17">(</operator><operator pos:start="4031:18" pos:end="4031:18">(</operator><name pos:start="4031:19" pos:end="4031:29">CPUARMState</name> <operator pos:start="4031:31" pos:end="4031:31">*</operator><operator pos:start="4031:32" pos:end="4031:32">)</operator><name pos:start="4031:33" pos:end="4031:39">cpu_env</name><operator pos:start="4031:40" pos:end="4031:40">)</operator><operator pos:start="4031:41" pos:end="4031:42">-&gt;</operator><name pos:start="4031:43" pos:end="4031:46">eabi</name></expr>)</condition> <block pos:start="4031:49" pos:end="4047:13">{<block_content pos:start="4033:17" pos:end="4045:56">

                <expr_stmt pos:start="4033:17" pos:end="4033:54"><expr pos:start="4033:17" pos:end="4033:53"><call pos:start="4033:17" pos:end="4033:53"><name pos:start="4033:17" pos:end="4033:32">lock_user_struct</name><argument_list pos:start="4033:33" pos:end="4033:53">(<argument pos:start="4033:34" pos:end="4033:43"><expr pos:start="4033:34" pos:end="4033:43"><name pos:start="4033:34" pos:end="4033:43">target_efl</name></expr></argument>, <argument pos:start="4033:46" pos:end="4033:49"><expr pos:start="4033:46" pos:end="4033:49"><name pos:start="4033:46" pos:end="4033:49">arg3</name></expr></argument>, <argument pos:start="4033:52" pos:end="4033:52"><expr pos:start="4033:52" pos:end="4033:52"><literal type="number" pos:start="4033:52" pos:end="4033:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4035:17" pos:end="4035:56"><expr pos:start="4035:17" pos:end="4035:55"><name pos:start="4035:17" pos:end="4035:25"><name pos:start="4035:17" pos:end="4035:18">fl</name><operator pos:start="4035:19" pos:end="4035:19">.</operator><name pos:start="4035:20" pos:end="4035:25">l_type</name></name> <operator pos:start="4035:27" pos:end="4035:27">=</operator> <call pos:start="4035:29" pos:end="4035:55"><name pos:start="4035:29" pos:end="4035:35">tswap16</name><argument_list pos:start="4035:36" pos:end="4035:55">(<argument pos:start="4035:37" pos:end="4035:54"><expr pos:start="4035:37" pos:end="4035:54"><name pos:start="4035:37" pos:end="4035:54"><name pos:start="4035:37" pos:end="4035:46">target_efl</name><operator pos:start="4035:47" pos:end="4035:48">-&gt;</operator><name pos:start="4035:49" pos:end="4035:54">l_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4037:17" pos:end="4037:60"><expr pos:start="4037:17" pos:end="4037:59"><name pos:start="4037:17" pos:end="4037:27"><name pos:start="4037:17" pos:end="4037:18">fl</name><operator pos:start="4037:19" pos:end="4037:19">.</operator><name pos:start="4037:20" pos:end="4037:27">l_whence</name></name> <operator pos:start="4037:29" pos:end="4037:29">=</operator> <call pos:start="4037:31" pos:end="4037:59"><name pos:start="4037:31" pos:end="4037:37">tswap16</name><argument_list pos:start="4037:38" pos:end="4037:59">(<argument pos:start="4037:39" pos:end="4037:58"><expr pos:start="4037:39" pos:end="4037:58"><name pos:start="4037:39" pos:end="4037:58"><name pos:start="4037:39" pos:end="4037:48">target_efl</name><operator pos:start="4037:49" pos:end="4037:50">-&gt;</operator><name pos:start="4037:51" pos:end="4037:58">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4039:17" pos:end="4039:58"><expr pos:start="4039:17" pos:end="4039:57"><name pos:start="4039:17" pos:end="4039:26"><name pos:start="4039:17" pos:end="4039:18">fl</name><operator pos:start="4039:19" pos:end="4039:19">.</operator><name pos:start="4039:20" pos:end="4039:26">l_start</name></name> <operator pos:start="4039:28" pos:end="4039:28">=</operator> <call pos:start="4039:30" pos:end="4039:57"><name pos:start="4039:30" pos:end="4039:36">tswap64</name><argument_list pos:start="4039:37" pos:end="4039:57">(<argument pos:start="4039:38" pos:end="4039:56"><expr pos:start="4039:38" pos:end="4039:56"><name pos:start="4039:38" pos:end="4039:56"><name pos:start="4039:38" pos:end="4039:47">target_efl</name><operator pos:start="4039:48" pos:end="4039:49">-&gt;</operator><name pos:start="4039:50" pos:end="4039:56">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4041:17" pos:end="4041:54"><expr pos:start="4041:17" pos:end="4041:53"><name pos:start="4041:17" pos:end="4041:24"><name pos:start="4041:17" pos:end="4041:18">fl</name><operator pos:start="4041:19" pos:end="4041:19">.</operator><name pos:start="4041:20" pos:end="4041:24">l_len</name></name> <operator pos:start="4041:26" pos:end="4041:26">=</operator> <call pos:start="4041:28" pos:end="4041:53"><name pos:start="4041:28" pos:end="4041:34">tswap64</name><argument_list pos:start="4041:35" pos:end="4041:53">(<argument pos:start="4041:36" pos:end="4041:52"><expr pos:start="4041:36" pos:end="4041:52"><name pos:start="4041:36" pos:end="4041:52"><name pos:start="4041:36" pos:end="4041:45">target_efl</name><operator pos:start="4041:46" pos:end="4041:47">-&gt;</operator><name pos:start="4041:48" pos:end="4041:52">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4043:17" pos:end="4043:53"><expr pos:start="4043:17" pos:end="4043:52"><name pos:start="4043:17" pos:end="4043:24"><name pos:start="4043:17" pos:end="4043:18">fl</name><operator pos:start="4043:19" pos:end="4043:19">.</operator><name pos:start="4043:20" pos:end="4043:24">l_pid</name></name> <operator pos:start="4043:26" pos:end="4043:26">=</operator> <call pos:start="4043:28" pos:end="4043:52"><name pos:start="4043:28" pos:end="4043:33">tswapl</name><argument_list pos:start="4043:34" pos:end="4043:52">(<argument pos:start="4043:35" pos:end="4043:51"><expr pos:start="4043:35" pos:end="4043:51"><name pos:start="4043:35" pos:end="4043:51"><name pos:start="4043:35" pos:end="4043:44">target_efl</name><operator pos:start="4043:45" pos:end="4043:46">-&gt;</operator><name pos:start="4043:47" pos:end="4043:51">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4045:17" pos:end="4045:56"><expr pos:start="4045:17" pos:end="4045:55"><call pos:start="4045:17" pos:end="4045:55"><name pos:start="4045:17" pos:end="4045:34">unlock_user_struct</name><argument_list pos:start="4045:35" pos:end="4045:55">(<argument pos:start="4045:36" pos:end="4045:45"><expr pos:start="4045:36" pos:end="4045:45"><name pos:start="4045:36" pos:end="4045:45">target_efl</name></expr></argument>, <argument pos:start="4045:48" pos:end="4045:51"><expr pos:start="4045:48" pos:end="4045:51"><name pos:start="4045:48" pos:end="4045:51">arg3</name></expr></argument>, <argument pos:start="4045:54" pos:end="4045:54"><expr pos:start="4045:54" pos:end="4045:54"><literal type="number" pos:start="4045:54" pos:end="4045:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="4047:15" pos:end="4067:13">else

<cpp:endif pos:start="4049:1" pos:end="4049:6">#<cpp:directive pos:start="4049:2" pos:end="4049:6">endif</cpp:directive></cpp:endif>

            <block pos:start="4051:13" pos:end="4067:13">{<block_content pos:start="4053:17" pos:end="4065:55">

                <expr_stmt pos:start="4053:17" pos:end="4053:53"><expr pos:start="4053:17" pos:end="4053:52"><call pos:start="4053:17" pos:end="4053:52"><name pos:start="4053:17" pos:end="4053:32">lock_user_struct</name><argument_list pos:start="4053:33" pos:end="4053:52">(<argument pos:start="4053:34" pos:end="4053:42"><expr pos:start="4053:34" pos:end="4053:42"><name pos:start="4053:34" pos:end="4053:42">target_fl</name></expr></argument>, <argument pos:start="4053:45" pos:end="4053:48"><expr pos:start="4053:45" pos:end="4053:48"><name pos:start="4053:45" pos:end="4053:48">arg3</name></expr></argument>, <argument pos:start="4053:51" pos:end="4053:51"><expr pos:start="4053:51" pos:end="4053:51"><literal type="number" pos:start="4053:51" pos:end="4053:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4055:17" pos:end="4055:55"><expr pos:start="4055:17" pos:end="4055:54"><name pos:start="4055:17" pos:end="4055:25"><name pos:start="4055:17" pos:end="4055:18">fl</name><operator pos:start="4055:19" pos:end="4055:19">.</operator><name pos:start="4055:20" pos:end="4055:25">l_type</name></name> <operator pos:start="4055:27" pos:end="4055:27">=</operator> <call pos:start="4055:29" pos:end="4055:54"><name pos:start="4055:29" pos:end="4055:35">tswap16</name><argument_list pos:start="4055:36" pos:end="4055:54">(<argument pos:start="4055:37" pos:end="4055:53"><expr pos:start="4055:37" pos:end="4055:53"><name pos:start="4055:37" pos:end="4055:53"><name pos:start="4055:37" pos:end="4055:45">target_fl</name><operator pos:start="4055:46" pos:end="4055:47">-&gt;</operator><name pos:start="4055:48" pos:end="4055:53">l_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4057:17" pos:end="4057:59"><expr pos:start="4057:17" pos:end="4057:58"><name pos:start="4057:17" pos:end="4057:27"><name pos:start="4057:17" pos:end="4057:18">fl</name><operator pos:start="4057:19" pos:end="4057:19">.</operator><name pos:start="4057:20" pos:end="4057:27">l_whence</name></name> <operator pos:start="4057:29" pos:end="4057:29">=</operator> <call pos:start="4057:31" pos:end="4057:58"><name pos:start="4057:31" pos:end="4057:37">tswap16</name><argument_list pos:start="4057:38" pos:end="4057:58">(<argument pos:start="4057:39" pos:end="4057:57"><expr pos:start="4057:39" pos:end="4057:57"><name pos:start="4057:39" pos:end="4057:57"><name pos:start="4057:39" pos:end="4057:47">target_fl</name><operator pos:start="4057:48" pos:end="4057:49">-&gt;</operator><name pos:start="4057:50" pos:end="4057:57">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4059:17" pos:end="4059:57"><expr pos:start="4059:17" pos:end="4059:56"><name pos:start="4059:17" pos:end="4059:26"><name pos:start="4059:17" pos:end="4059:18">fl</name><operator pos:start="4059:19" pos:end="4059:19">.</operator><name pos:start="4059:20" pos:end="4059:26">l_start</name></name> <operator pos:start="4059:28" pos:end="4059:28">=</operator> <call pos:start="4059:30" pos:end="4059:56"><name pos:start="4059:30" pos:end="4059:36">tswap64</name><argument_list pos:start="4059:37" pos:end="4059:56">(<argument pos:start="4059:38" pos:end="4059:55"><expr pos:start="4059:38" pos:end="4059:55"><name pos:start="4059:38" pos:end="4059:55"><name pos:start="4059:38" pos:end="4059:46">target_fl</name><operator pos:start="4059:47" pos:end="4059:48">-&gt;</operator><name pos:start="4059:49" pos:end="4059:55">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4061:17" pos:end="4061:53"><expr pos:start="4061:17" pos:end="4061:52"><name pos:start="4061:17" pos:end="4061:24"><name pos:start="4061:17" pos:end="4061:18">fl</name><operator pos:start="4061:19" pos:end="4061:19">.</operator><name pos:start="4061:20" pos:end="4061:24">l_len</name></name> <operator pos:start="4061:26" pos:end="4061:26">=</operator> <call pos:start="4061:28" pos:end="4061:52"><name pos:start="4061:28" pos:end="4061:34">tswap64</name><argument_list pos:start="4061:35" pos:end="4061:52">(<argument pos:start="4061:36" pos:end="4061:51"><expr pos:start="4061:36" pos:end="4061:51"><name pos:start="4061:36" pos:end="4061:51"><name pos:start="4061:36" pos:end="4061:44">target_fl</name><operator pos:start="4061:45" pos:end="4061:46">-&gt;</operator><name pos:start="4061:47" pos:end="4061:51">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4063:17" pos:end="4063:52"><expr pos:start="4063:17" pos:end="4063:51"><name pos:start="4063:17" pos:end="4063:24"><name pos:start="4063:17" pos:end="4063:18">fl</name><operator pos:start="4063:19" pos:end="4063:19">.</operator><name pos:start="4063:20" pos:end="4063:24">l_pid</name></name> <operator pos:start="4063:26" pos:end="4063:26">=</operator> <call pos:start="4063:28" pos:end="4063:51"><name pos:start="4063:28" pos:end="4063:33">tswapl</name><argument_list pos:start="4063:34" pos:end="4063:51">(<argument pos:start="4063:35" pos:end="4063:50"><expr pos:start="4063:35" pos:end="4063:50"><name pos:start="4063:35" pos:end="4063:50"><name pos:start="4063:35" pos:end="4063:43">target_fl</name><operator pos:start="4063:44" pos:end="4063:45">-&gt;</operator><name pos:start="4063:46" pos:end="4063:50">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4065:17" pos:end="4065:55"><expr pos:start="4065:17" pos:end="4065:54"><call pos:start="4065:17" pos:end="4065:54"><name pos:start="4065:17" pos:end="4065:34">unlock_user_struct</name><argument_list pos:start="4065:35" pos:end="4065:54">(<argument pos:start="4065:36" pos:end="4065:44"><expr pos:start="4065:36" pos:end="4065:44"><name pos:start="4065:36" pos:end="4065:44">target_fl</name></expr></argument>, <argument pos:start="4065:47" pos:end="4065:50"><expr pos:start="4065:47" pos:end="4065:50"><name pos:start="4065:47" pos:end="4065:50">arg3</name></expr></argument>, <argument pos:start="4065:53" pos:end="4065:53"><expr pos:start="4065:53" pos:end="4065:53"><literal type="number" pos:start="4065:53" pos:end="4065:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="4069:13" pos:end="4069:51"><expr pos:start="4069:13" pos:end="4069:50"><name pos:start="4069:13" pos:end="4069:15">ret</name> <operator pos:start="4069:17" pos:end="4069:17">=</operator> <call pos:start="4069:19" pos:end="4069:50"><name pos:start="4069:19" pos:end="4069:27">get_errno</name><argument_list pos:start="4069:28" pos:end="4069:50">(<argument pos:start="4069:29" pos:end="4069:49"><expr pos:start="4069:29" pos:end="4069:49"><call pos:start="4069:29" pos:end="4069:49"><name pos:start="4069:29" pos:end="4069:33">fcntl</name><argument_list pos:start="4069:34" pos:end="4069:49">(<argument pos:start="4069:35" pos:end="4069:38"><expr pos:start="4069:35" pos:end="4069:38"><name pos:start="4069:35" pos:end="4069:38">arg1</name></expr></argument>, <argument pos:start="4069:41" pos:end="4069:43"><expr pos:start="4069:41" pos:end="4069:43"><name pos:start="4069:41" pos:end="4069:43">cmd</name></expr></argument>, <argument pos:start="4069:46" pos:end="4069:48"><expr pos:start="4069:46" pos:end="4069:48"><operator pos:start="4069:46" pos:end="4069:46">&amp;</operator><name pos:start="4069:47" pos:end="4069:48">fl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <if_stmt pos:start="4071:13" pos:end="4113:13"><if pos:start="4071:13" pos:end="4113:13">if <condition pos:start="4071:16" pos:end="4071:25">(<expr pos:start="4071:17" pos:end="4071:24"><name pos:start="4071:17" pos:end="4071:19">ret</name> <operator pos:start="4071:21" pos:end="4071:22">==</operator> <literal type="number" pos:start="4071:24" pos:end="4071:24">0</literal></expr>)</condition> <block pos:start="4071:27" pos:end="4113:13">{<block_content pos:start="4075:17" pos:end="4111:17">

<cpp:ifdef pos:start="4073:1" pos:end="4073:17">#<cpp:directive pos:start="4073:2" pos:end="4073:6">ifdef</cpp:directive> <name pos:start="4073:8" pos:end="4073:17">TARGET_ARM</name></cpp:ifdef>

                <if_stmt pos:start="4075:17" pos:end="4111:17"><if pos:start="4075:17" pos:end="4091:17">if <condition pos:start="4075:20" pos:end="4075:51">(<expr pos:start="4075:21" pos:end="4075:50"><operator pos:start="4075:21" pos:end="4075:21">(</operator><operator pos:start="4075:22" pos:end="4075:22">(</operator><name pos:start="4075:23" pos:end="4075:33">CPUARMState</name> <operator pos:start="4075:35" pos:end="4075:35">*</operator><operator pos:start="4075:36" pos:end="4075:36">)</operator><name pos:start="4075:37" pos:end="4075:43">cpu_env</name><operator pos:start="4075:44" pos:end="4075:44">)</operator><operator pos:start="4075:45" pos:end="4075:46">-&gt;</operator><name pos:start="4075:47" pos:end="4075:50">eabi</name></expr>)</condition> <block pos:start="4075:53" pos:end="4091:17">{<block_content pos:start="4077:21" pos:end="4089:60">

                    <expr_stmt pos:start="4077:21" pos:end="4077:58"><expr pos:start="4077:21" pos:end="4077:57"><call pos:start="4077:21" pos:end="4077:57"><name pos:start="4077:21" pos:end="4077:36">lock_user_struct</name><argument_list pos:start="4077:37" pos:end="4077:57">(<argument pos:start="4077:38" pos:end="4077:47"><expr pos:start="4077:38" pos:end="4077:47"><name pos:start="4077:38" pos:end="4077:47">target_efl</name></expr></argument>, <argument pos:start="4077:50" pos:end="4077:53"><expr pos:start="4077:50" pos:end="4077:53"><name pos:start="4077:50" pos:end="4077:53">arg3</name></expr></argument>, <argument pos:start="4077:56" pos:end="4077:56"><expr pos:start="4077:56" pos:end="4077:56"><literal type="number" pos:start="4077:56" pos:end="4077:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4079:21" pos:end="4079:60"><expr pos:start="4079:21" pos:end="4079:59"><name pos:start="4079:21" pos:end="4079:38"><name pos:start="4079:21" pos:end="4079:30">target_efl</name><operator pos:start="4079:31" pos:end="4079:32">-&gt;</operator><name pos:start="4079:33" pos:end="4079:38">l_type</name></name> <operator pos:start="4079:40" pos:end="4079:40">=</operator> <call pos:start="4079:42" pos:end="4079:59"><name pos:start="4079:42" pos:end="4079:48">tswap16</name><argument_list pos:start="4079:49" pos:end="4079:59">(<argument pos:start="4079:50" pos:end="4079:58"><expr pos:start="4079:50" pos:end="4079:58"><name pos:start="4079:50" pos:end="4079:58"><name pos:start="4079:50" pos:end="4079:51">fl</name><operator pos:start="4079:52" pos:end="4079:52">.</operator><name pos:start="4079:53" pos:end="4079:58">l_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4081:21" pos:end="4081:64"><expr pos:start="4081:21" pos:end="4081:63"><name pos:start="4081:21" pos:end="4081:40"><name pos:start="4081:21" pos:end="4081:30">target_efl</name><operator pos:start="4081:31" pos:end="4081:32">-&gt;</operator><name pos:start="4081:33" pos:end="4081:40">l_whence</name></name> <operator pos:start="4081:42" pos:end="4081:42">=</operator> <call pos:start="4081:44" pos:end="4081:63"><name pos:start="4081:44" pos:end="4081:50">tswap16</name><argument_list pos:start="4081:51" pos:end="4081:63">(<argument pos:start="4081:52" pos:end="4081:62"><expr pos:start="4081:52" pos:end="4081:62"><name pos:start="4081:52" pos:end="4081:62"><name pos:start="4081:52" pos:end="4081:53">fl</name><operator pos:start="4081:54" pos:end="4081:54">.</operator><name pos:start="4081:55" pos:end="4081:62">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4083:21" pos:end="4083:62"><expr pos:start="4083:21" pos:end="4083:61"><name pos:start="4083:21" pos:end="4083:39"><name pos:start="4083:21" pos:end="4083:30">target_efl</name><operator pos:start="4083:31" pos:end="4083:32">-&gt;</operator><name pos:start="4083:33" pos:end="4083:39">l_start</name></name> <operator pos:start="4083:41" pos:end="4083:41">=</operator> <call pos:start="4083:43" pos:end="4083:61"><name pos:start="4083:43" pos:end="4083:49">tswap64</name><argument_list pos:start="4083:50" pos:end="4083:61">(<argument pos:start="4083:51" pos:end="4083:60"><expr pos:start="4083:51" pos:end="4083:60"><name pos:start="4083:51" pos:end="4083:60"><name pos:start="4083:51" pos:end="4083:52">fl</name><operator pos:start="4083:53" pos:end="4083:53">.</operator><name pos:start="4083:54" pos:end="4083:60">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4085:21" pos:end="4085:58"><expr pos:start="4085:21" pos:end="4085:57"><name pos:start="4085:21" pos:end="4085:37"><name pos:start="4085:21" pos:end="4085:30">target_efl</name><operator pos:start="4085:31" pos:end="4085:32">-&gt;</operator><name pos:start="4085:33" pos:end="4085:37">l_len</name></name> <operator pos:start="4085:39" pos:end="4085:39">=</operator> <call pos:start="4085:41" pos:end="4085:57"><name pos:start="4085:41" pos:end="4085:47">tswap64</name><argument_list pos:start="4085:48" pos:end="4085:57">(<argument pos:start="4085:49" pos:end="4085:56"><expr pos:start="4085:49" pos:end="4085:56"><name pos:start="4085:49" pos:end="4085:56"><name pos:start="4085:49" pos:end="4085:50">fl</name><operator pos:start="4085:51" pos:end="4085:51">.</operator><name pos:start="4085:52" pos:end="4085:56">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4087:21" pos:end="4087:57"><expr pos:start="4087:21" pos:end="4087:56"><name pos:start="4087:21" pos:end="4087:37"><name pos:start="4087:21" pos:end="4087:30">target_efl</name><operator pos:start="4087:31" pos:end="4087:32">-&gt;</operator><name pos:start="4087:33" pos:end="4087:37">l_pid</name></name> <operator pos:start="4087:39" pos:end="4087:39">=</operator> <call pos:start="4087:41" pos:end="4087:56"><name pos:start="4087:41" pos:end="4087:46">tswapl</name><argument_list pos:start="4087:47" pos:end="4087:56">(<argument pos:start="4087:48" pos:end="4087:55"><expr pos:start="4087:48" pos:end="4087:55"><name pos:start="4087:48" pos:end="4087:55"><name pos:start="4087:48" pos:end="4087:49">fl</name><operator pos:start="4087:50" pos:end="4087:50">.</operator><name pos:start="4087:51" pos:end="4087:55">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4089:21" pos:end="4089:60"><expr pos:start="4089:21" pos:end="4089:59"><call pos:start="4089:21" pos:end="4089:59"><name pos:start="4089:21" pos:end="4089:38">unlock_user_struct</name><argument_list pos:start="4089:39" pos:end="4089:59">(<argument pos:start="4089:40" pos:end="4089:49"><expr pos:start="4089:40" pos:end="4089:49"><name pos:start="4089:40" pos:end="4089:49">target_efl</name></expr></argument>, <argument pos:start="4089:52" pos:end="4089:55"><expr pos:start="4089:52" pos:end="4089:55"><name pos:start="4089:52" pos:end="4089:55">arg3</name></expr></argument>, <argument pos:start="4089:58" pos:end="4089:58"><expr pos:start="4089:58" pos:end="4089:58"><literal type="number" pos:start="4089:58" pos:end="4089:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="4091:19" pos:end="4111:17">else

<cpp:endif pos:start="4093:1" pos:end="4093:6">#<cpp:directive pos:start="4093:2" pos:end="4093:6">endif</cpp:directive></cpp:endif>

                <block pos:start="4095:17" pos:end="4111:17">{<block_content pos:start="4097:21" pos:end="4109:59">

                    <expr_stmt pos:start="4097:21" pos:end="4097:57"><expr pos:start="4097:21" pos:end="4097:56"><call pos:start="4097:21" pos:end="4097:56"><name pos:start="4097:21" pos:end="4097:36">lock_user_struct</name><argument_list pos:start="4097:37" pos:end="4097:56">(<argument pos:start="4097:38" pos:end="4097:46"><expr pos:start="4097:38" pos:end="4097:46"><name pos:start="4097:38" pos:end="4097:46">target_fl</name></expr></argument>, <argument pos:start="4097:49" pos:end="4097:52"><expr pos:start="4097:49" pos:end="4097:52"><name pos:start="4097:49" pos:end="4097:52">arg3</name></expr></argument>, <argument pos:start="4097:55" pos:end="4097:55"><expr pos:start="4097:55" pos:end="4097:55"><literal type="number" pos:start="4097:55" pos:end="4097:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4099:21" pos:end="4099:59"><expr pos:start="4099:21" pos:end="4099:58"><name pos:start="4099:21" pos:end="4099:37"><name pos:start="4099:21" pos:end="4099:29">target_fl</name><operator pos:start="4099:30" pos:end="4099:31">-&gt;</operator><name pos:start="4099:32" pos:end="4099:37">l_type</name></name> <operator pos:start="4099:39" pos:end="4099:39">=</operator> <call pos:start="4099:41" pos:end="4099:58"><name pos:start="4099:41" pos:end="4099:47">tswap16</name><argument_list pos:start="4099:48" pos:end="4099:58">(<argument pos:start="4099:49" pos:end="4099:57"><expr pos:start="4099:49" pos:end="4099:57"><name pos:start="4099:49" pos:end="4099:57"><name pos:start="4099:49" pos:end="4099:50">fl</name><operator pos:start="4099:51" pos:end="4099:51">.</operator><name pos:start="4099:52" pos:end="4099:57">l_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4101:21" pos:end="4101:63"><expr pos:start="4101:21" pos:end="4101:62"><name pos:start="4101:21" pos:end="4101:39"><name pos:start="4101:21" pos:end="4101:29">target_fl</name><operator pos:start="4101:30" pos:end="4101:31">-&gt;</operator><name pos:start="4101:32" pos:end="4101:39">l_whence</name></name> <operator pos:start="4101:41" pos:end="4101:41">=</operator> <call pos:start="4101:43" pos:end="4101:62"><name pos:start="4101:43" pos:end="4101:49">tswap16</name><argument_list pos:start="4101:50" pos:end="4101:62">(<argument pos:start="4101:51" pos:end="4101:61"><expr pos:start="4101:51" pos:end="4101:61"><name pos:start="4101:51" pos:end="4101:61"><name pos:start="4101:51" pos:end="4101:52">fl</name><operator pos:start="4101:53" pos:end="4101:53">.</operator><name pos:start="4101:54" pos:end="4101:61">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4103:21" pos:end="4103:61"><expr pos:start="4103:21" pos:end="4103:60"><name pos:start="4103:21" pos:end="4103:38"><name pos:start="4103:21" pos:end="4103:29">target_fl</name><operator pos:start="4103:30" pos:end="4103:31">-&gt;</operator><name pos:start="4103:32" pos:end="4103:38">l_start</name></name> <operator pos:start="4103:40" pos:end="4103:40">=</operator> <call pos:start="4103:42" pos:end="4103:60"><name pos:start="4103:42" pos:end="4103:48">tswap64</name><argument_list pos:start="4103:49" pos:end="4103:60">(<argument pos:start="4103:50" pos:end="4103:59"><expr pos:start="4103:50" pos:end="4103:59"><name pos:start="4103:50" pos:end="4103:59"><name pos:start="4103:50" pos:end="4103:51">fl</name><operator pos:start="4103:52" pos:end="4103:52">.</operator><name pos:start="4103:53" pos:end="4103:59">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4105:21" pos:end="4105:57"><expr pos:start="4105:21" pos:end="4105:56"><name pos:start="4105:21" pos:end="4105:36"><name pos:start="4105:21" pos:end="4105:29">target_fl</name><operator pos:start="4105:30" pos:end="4105:31">-&gt;</operator><name pos:start="4105:32" pos:end="4105:36">l_len</name></name> <operator pos:start="4105:38" pos:end="4105:38">=</operator> <call pos:start="4105:40" pos:end="4105:56"><name pos:start="4105:40" pos:end="4105:46">tswap64</name><argument_list pos:start="4105:47" pos:end="4105:56">(<argument pos:start="4105:48" pos:end="4105:55"><expr pos:start="4105:48" pos:end="4105:55"><name pos:start="4105:48" pos:end="4105:55"><name pos:start="4105:48" pos:end="4105:49">fl</name><operator pos:start="4105:50" pos:end="4105:50">.</operator><name pos:start="4105:51" pos:end="4105:55">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4107:21" pos:end="4107:56"><expr pos:start="4107:21" pos:end="4107:55"><name pos:start="4107:21" pos:end="4107:36"><name pos:start="4107:21" pos:end="4107:29">target_fl</name><operator pos:start="4107:30" pos:end="4107:31">-&gt;</operator><name pos:start="4107:32" pos:end="4107:36">l_pid</name></name> <operator pos:start="4107:38" pos:end="4107:38">=</operator> <call pos:start="4107:40" pos:end="4107:55"><name pos:start="4107:40" pos:end="4107:45">tswapl</name><argument_list pos:start="4107:46" pos:end="4107:55">(<argument pos:start="4107:47" pos:end="4107:54"><expr pos:start="4107:47" pos:end="4107:54"><name pos:start="4107:47" pos:end="4107:54"><name pos:start="4107:47" pos:end="4107:48">fl</name><operator pos:start="4107:49" pos:end="4107:49">.</operator><name pos:start="4107:50" pos:end="4107:54">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="4109:21" pos:end="4109:59"><expr pos:start="4109:21" pos:end="4109:58"><call pos:start="4109:21" pos:end="4109:58"><name pos:start="4109:21" pos:end="4109:38">unlock_user_struct</name><argument_list pos:start="4109:39" pos:end="4109:58">(<argument pos:start="4109:40" pos:end="4109:48"><expr pos:start="4109:40" pos:end="4109:48"><name pos:start="4109:40" pos:end="4109:48">target_fl</name></expr></argument>, <argument pos:start="4109:51" pos:end="4109:54"><expr pos:start="4109:51" pos:end="4109:54"><name pos:start="4109:51" pos:end="4109:54">arg3</name></expr></argument>, <argument pos:start="4109:57" pos:end="4109:57"><expr pos:start="4109:57" pos:end="4109:57"><literal type="number" pos:start="4109:57" pos:end="4109:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

	    </block_content>}</block></if></if_stmt>

	    <break pos:start="4115:13" pos:end="4115:18">break;</break>



        <case pos:start="4119:9" pos:end="4119:30">case <expr pos:start="4119:14" pos:end="4119:29"><name pos:start="4119:14" pos:end="4119:29">TARGET_F_SETLK64</name></expr>:</case>

        <case pos:start="4121:9" pos:end="4124:0">case <expr pos:start="4121:14" pos:end="4121:30"><name pos:start="4121:14" pos:end="4121:30">TARGET_F_SETLKW64</name></expr>:</case>

<cpp:ifdef pos:start="4123:1" pos:end="4123:17">#<cpp:directive pos:start="4123:2" pos:end="4123:6">ifdef</cpp:directive> <name pos:start="4123:8" pos:end="4123:17">TARGET_ARM</name></cpp:ifdef>

            <if_stmt pos:start="4125:13" pos:end="4161:13"><if pos:start="4125:13" pos:end="4141:13">if <condition pos:start="4125:16" pos:end="4125:47">(<expr pos:start="4125:17" pos:end="4125:46"><operator pos:start="4125:17" pos:end="4125:17">(</operator><operator pos:start="4125:18" pos:end="4125:18">(</operator><name pos:start="4125:19" pos:end="4125:29">CPUARMState</name> <operator pos:start="4125:31" pos:end="4125:31">*</operator><operator pos:start="4125:32" pos:end="4125:32">)</operator><name pos:start="4125:33" pos:end="4125:39">cpu_env</name><operator pos:start="4125:40" pos:end="4125:40">)</operator><operator pos:start="4125:41" pos:end="4125:42">-&gt;</operator><name pos:start="4125:43" pos:end="4125:46">eabi</name></expr>)</condition> <block pos:start="4125:49" pos:end="4141:13">{<block_content pos:start="4127:17" pos:end="4139:56">

                <expr_stmt pos:start="4127:17" pos:end="4127:54"><expr pos:start="4127:17" pos:end="4127:53"><call pos:start="4127:17" pos:end="4127:53"><name pos:start="4127:17" pos:end="4127:32">lock_user_struct</name><argument_list pos:start="4127:33" pos:end="4127:53">(<argument pos:start="4127:34" pos:end="4127:43"><expr pos:start="4127:34" pos:end="4127:43"><name pos:start="4127:34" pos:end="4127:43">target_efl</name></expr></argument>, <argument pos:start="4127:46" pos:end="4127:49"><expr pos:start="4127:46" pos:end="4127:49"><name pos:start="4127:46" pos:end="4127:49">arg3</name></expr></argument>, <argument pos:start="4127:52" pos:end="4127:52"><expr pos:start="4127:52" pos:end="4127:52"><literal type="number" pos:start="4127:52" pos:end="4127:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4129:17" pos:end="4129:56"><expr pos:start="4129:17" pos:end="4129:55"><name pos:start="4129:17" pos:end="4129:25"><name pos:start="4129:17" pos:end="4129:18">fl</name><operator pos:start="4129:19" pos:end="4129:19">.</operator><name pos:start="4129:20" pos:end="4129:25">l_type</name></name> <operator pos:start="4129:27" pos:end="4129:27">=</operator> <call pos:start="4129:29" pos:end="4129:55"><name pos:start="4129:29" pos:end="4129:35">tswap16</name><argument_list pos:start="4129:36" pos:end="4129:55">(<argument pos:start="4129:37" pos:end="4129:54"><expr pos:start="4129:37" pos:end="4129:54"><name pos:start="4129:37" pos:end="4129:54"><name pos:start="4129:37" pos:end="4129:46">target_efl</name><operator pos:start="4129:47" pos:end="4129:48">-&gt;</operator><name pos:start="4129:49" pos:end="4129:54">l_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4131:17" pos:end="4131:60"><expr pos:start="4131:17" pos:end="4131:59"><name pos:start="4131:17" pos:end="4131:27"><name pos:start="4131:17" pos:end="4131:18">fl</name><operator pos:start="4131:19" pos:end="4131:19">.</operator><name pos:start="4131:20" pos:end="4131:27">l_whence</name></name> <operator pos:start="4131:29" pos:end="4131:29">=</operator> <call pos:start="4131:31" pos:end="4131:59"><name pos:start="4131:31" pos:end="4131:37">tswap16</name><argument_list pos:start="4131:38" pos:end="4131:59">(<argument pos:start="4131:39" pos:end="4131:58"><expr pos:start="4131:39" pos:end="4131:58"><name pos:start="4131:39" pos:end="4131:58"><name pos:start="4131:39" pos:end="4131:48">target_efl</name><operator pos:start="4131:49" pos:end="4131:50">-&gt;</operator><name pos:start="4131:51" pos:end="4131:58">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4133:17" pos:end="4133:58"><expr pos:start="4133:17" pos:end="4133:57"><name pos:start="4133:17" pos:end="4133:26"><name pos:start="4133:17" pos:end="4133:18">fl</name><operator pos:start="4133:19" pos:end="4133:19">.</operator><name pos:start="4133:20" pos:end="4133:26">l_start</name></name> <operator pos:start="4133:28" pos:end="4133:28">=</operator> <call pos:start="4133:30" pos:end="4133:57"><name pos:start="4133:30" pos:end="4133:36">tswap64</name><argument_list pos:start="4133:37" pos:end="4133:57">(<argument pos:start="4133:38" pos:end="4133:56"><expr pos:start="4133:38" pos:end="4133:56"><name pos:start="4133:38" pos:end="4133:56"><name pos:start="4133:38" pos:end="4133:47">target_efl</name><operator pos:start="4133:48" pos:end="4133:49">-&gt;</operator><name pos:start="4133:50" pos:end="4133:56">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4135:17" pos:end="4135:54"><expr pos:start="4135:17" pos:end="4135:53"><name pos:start="4135:17" pos:end="4135:24"><name pos:start="4135:17" pos:end="4135:18">fl</name><operator pos:start="4135:19" pos:end="4135:19">.</operator><name pos:start="4135:20" pos:end="4135:24">l_len</name></name> <operator pos:start="4135:26" pos:end="4135:26">=</operator> <call pos:start="4135:28" pos:end="4135:53"><name pos:start="4135:28" pos:end="4135:34">tswap64</name><argument_list pos:start="4135:35" pos:end="4135:53">(<argument pos:start="4135:36" pos:end="4135:52"><expr pos:start="4135:36" pos:end="4135:52"><name pos:start="4135:36" pos:end="4135:52"><name pos:start="4135:36" pos:end="4135:45">target_efl</name><operator pos:start="4135:46" pos:end="4135:47">-&gt;</operator><name pos:start="4135:48" pos:end="4135:52">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4137:17" pos:end="4137:53"><expr pos:start="4137:17" pos:end="4137:52"><name pos:start="4137:17" pos:end="4137:24"><name pos:start="4137:17" pos:end="4137:18">fl</name><operator pos:start="4137:19" pos:end="4137:19">.</operator><name pos:start="4137:20" pos:end="4137:24">l_pid</name></name> <operator pos:start="4137:26" pos:end="4137:26">=</operator> <call pos:start="4137:28" pos:end="4137:52"><name pos:start="4137:28" pos:end="4137:33">tswapl</name><argument_list pos:start="4137:34" pos:end="4137:52">(<argument pos:start="4137:35" pos:end="4137:51"><expr pos:start="4137:35" pos:end="4137:51"><name pos:start="4137:35" pos:end="4137:51"><name pos:start="4137:35" pos:end="4137:44">target_efl</name><operator pos:start="4137:45" pos:end="4137:46">-&gt;</operator><name pos:start="4137:47" pos:end="4137:51">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4139:17" pos:end="4139:56"><expr pos:start="4139:17" pos:end="4139:55"><call pos:start="4139:17" pos:end="4139:55"><name pos:start="4139:17" pos:end="4139:34">unlock_user_struct</name><argument_list pos:start="4139:35" pos:end="4139:55">(<argument pos:start="4139:36" pos:end="4139:45"><expr pos:start="4139:36" pos:end="4139:45"><name pos:start="4139:36" pos:end="4139:45">target_efl</name></expr></argument>, <argument pos:start="4139:48" pos:end="4139:51"><expr pos:start="4139:48" pos:end="4139:51"><name pos:start="4139:48" pos:end="4139:51">arg3</name></expr></argument>, <argument pos:start="4139:54" pos:end="4139:54"><expr pos:start="4139:54" pos:end="4139:54"><literal type="number" pos:start="4139:54" pos:end="4139:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="4141:15" pos:end="4161:13">else

<cpp:endif pos:start="4143:1" pos:end="4143:6">#<cpp:directive pos:start="4143:2" pos:end="4143:6">endif</cpp:directive></cpp:endif>

            <block pos:start="4145:13" pos:end="4161:13">{<block_content pos:start="4147:17" pos:end="4159:55">

                <expr_stmt pos:start="4147:17" pos:end="4147:53"><expr pos:start="4147:17" pos:end="4147:52"><call pos:start="4147:17" pos:end="4147:52"><name pos:start="4147:17" pos:end="4147:32">lock_user_struct</name><argument_list pos:start="4147:33" pos:end="4147:52">(<argument pos:start="4147:34" pos:end="4147:42"><expr pos:start="4147:34" pos:end="4147:42"><name pos:start="4147:34" pos:end="4147:42">target_fl</name></expr></argument>, <argument pos:start="4147:45" pos:end="4147:48"><expr pos:start="4147:45" pos:end="4147:48"><name pos:start="4147:45" pos:end="4147:48">arg3</name></expr></argument>, <argument pos:start="4147:51" pos:end="4147:51"><expr pos:start="4147:51" pos:end="4147:51"><literal type="number" pos:start="4147:51" pos:end="4147:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4149:17" pos:end="4149:55"><expr pos:start="4149:17" pos:end="4149:54"><name pos:start="4149:17" pos:end="4149:25"><name pos:start="4149:17" pos:end="4149:18">fl</name><operator pos:start="4149:19" pos:end="4149:19">.</operator><name pos:start="4149:20" pos:end="4149:25">l_type</name></name> <operator pos:start="4149:27" pos:end="4149:27">=</operator> <call pos:start="4149:29" pos:end="4149:54"><name pos:start="4149:29" pos:end="4149:35">tswap16</name><argument_list pos:start="4149:36" pos:end="4149:54">(<argument pos:start="4149:37" pos:end="4149:53"><expr pos:start="4149:37" pos:end="4149:53"><name pos:start="4149:37" pos:end="4149:53"><name pos:start="4149:37" pos:end="4149:45">target_fl</name><operator pos:start="4149:46" pos:end="4149:47">-&gt;</operator><name pos:start="4149:48" pos:end="4149:53">l_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4151:17" pos:end="4151:59"><expr pos:start="4151:17" pos:end="4151:58"><name pos:start="4151:17" pos:end="4151:27"><name pos:start="4151:17" pos:end="4151:18">fl</name><operator pos:start="4151:19" pos:end="4151:19">.</operator><name pos:start="4151:20" pos:end="4151:27">l_whence</name></name> <operator pos:start="4151:29" pos:end="4151:29">=</operator> <call pos:start="4151:31" pos:end="4151:58"><name pos:start="4151:31" pos:end="4151:37">tswap16</name><argument_list pos:start="4151:38" pos:end="4151:58">(<argument pos:start="4151:39" pos:end="4151:57"><expr pos:start="4151:39" pos:end="4151:57"><name pos:start="4151:39" pos:end="4151:57"><name pos:start="4151:39" pos:end="4151:47">target_fl</name><operator pos:start="4151:48" pos:end="4151:49">-&gt;</operator><name pos:start="4151:50" pos:end="4151:57">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4153:17" pos:end="4153:57"><expr pos:start="4153:17" pos:end="4153:56"><name pos:start="4153:17" pos:end="4153:26"><name pos:start="4153:17" pos:end="4153:18">fl</name><operator pos:start="4153:19" pos:end="4153:19">.</operator><name pos:start="4153:20" pos:end="4153:26">l_start</name></name> <operator pos:start="4153:28" pos:end="4153:28">=</operator> <call pos:start="4153:30" pos:end="4153:56"><name pos:start="4153:30" pos:end="4153:36">tswap64</name><argument_list pos:start="4153:37" pos:end="4153:56">(<argument pos:start="4153:38" pos:end="4153:55"><expr pos:start="4153:38" pos:end="4153:55"><name pos:start="4153:38" pos:end="4153:55"><name pos:start="4153:38" pos:end="4153:46">target_fl</name><operator pos:start="4153:47" pos:end="4153:48">-&gt;</operator><name pos:start="4153:49" pos:end="4153:55">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4155:17" pos:end="4155:53"><expr pos:start="4155:17" pos:end="4155:52"><name pos:start="4155:17" pos:end="4155:24"><name pos:start="4155:17" pos:end="4155:18">fl</name><operator pos:start="4155:19" pos:end="4155:19">.</operator><name pos:start="4155:20" pos:end="4155:24">l_len</name></name> <operator pos:start="4155:26" pos:end="4155:26">=</operator> <call pos:start="4155:28" pos:end="4155:52"><name pos:start="4155:28" pos:end="4155:34">tswap64</name><argument_list pos:start="4155:35" pos:end="4155:52">(<argument pos:start="4155:36" pos:end="4155:51"><expr pos:start="4155:36" pos:end="4155:51"><name pos:start="4155:36" pos:end="4155:51"><name pos:start="4155:36" pos:end="4155:44">target_fl</name><operator pos:start="4155:45" pos:end="4155:46">-&gt;</operator><name pos:start="4155:47" pos:end="4155:51">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4157:17" pos:end="4157:52"><expr pos:start="4157:17" pos:end="4157:51"><name pos:start="4157:17" pos:end="4157:24"><name pos:start="4157:17" pos:end="4157:18">fl</name><operator pos:start="4157:19" pos:end="4157:19">.</operator><name pos:start="4157:20" pos:end="4157:24">l_pid</name></name> <operator pos:start="4157:26" pos:end="4157:26">=</operator> <call pos:start="4157:28" pos:end="4157:51"><name pos:start="4157:28" pos:end="4157:33">tswapl</name><argument_list pos:start="4157:34" pos:end="4157:51">(<argument pos:start="4157:35" pos:end="4157:50"><expr pos:start="4157:35" pos:end="4157:50"><name pos:start="4157:35" pos:end="4157:50"><name pos:start="4157:35" pos:end="4157:43">target_fl</name><operator pos:start="4157:44" pos:end="4157:45">-&gt;</operator><name pos:start="4157:46" pos:end="4157:50">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4159:17" pos:end="4159:55"><expr pos:start="4159:17" pos:end="4159:54"><call pos:start="4159:17" pos:end="4159:54"><name pos:start="4159:17" pos:end="4159:34">unlock_user_struct</name><argument_list pos:start="4159:35" pos:end="4159:54">(<argument pos:start="4159:36" pos:end="4159:44"><expr pos:start="4159:36" pos:end="4159:44"><name pos:start="4159:36" pos:end="4159:44">target_fl</name></expr></argument>, <argument pos:start="4159:47" pos:end="4159:50"><expr pos:start="4159:47" pos:end="4159:50"><name pos:start="4159:47" pos:end="4159:50">arg3</name></expr></argument>, <argument pos:start="4159:53" pos:end="4159:53"><expr pos:start="4159:53" pos:end="4159:53"><literal type="number" pos:start="4159:53" pos:end="4159:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="4163:13" pos:end="4163:51"><expr pos:start="4163:13" pos:end="4163:50"><name pos:start="4163:13" pos:end="4163:15">ret</name> <operator pos:start="4163:17" pos:end="4163:17">=</operator> <call pos:start="4163:19" pos:end="4163:50"><name pos:start="4163:19" pos:end="4163:27">get_errno</name><argument_list pos:start="4163:28" pos:end="4163:50">(<argument pos:start="4163:29" pos:end="4163:49"><expr pos:start="4163:29" pos:end="4163:49"><call pos:start="4163:29" pos:end="4163:49"><name pos:start="4163:29" pos:end="4163:33">fcntl</name><argument_list pos:start="4163:34" pos:end="4163:49">(<argument pos:start="4163:35" pos:end="4163:38"><expr pos:start="4163:35" pos:end="4163:38"><name pos:start="4163:35" pos:end="4163:38">arg1</name></expr></argument>, <argument pos:start="4163:41" pos:end="4163:43"><expr pos:start="4163:41" pos:end="4163:43"><name pos:start="4163:41" pos:end="4163:43">cmd</name></expr></argument>, <argument pos:start="4163:46" pos:end="4163:48"><expr pos:start="4163:46" pos:end="4163:48"><operator pos:start="4163:46" pos:end="4163:46">&amp;</operator><name pos:start="4163:47" pos:end="4163:48">fl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <break pos:start="4165:13" pos:end="4165:18">break;</break>

        <default pos:start="4167:9" pos:end="4167:16">default:</default>

            <expr_stmt pos:start="4169:13" pos:end="4169:55"><expr pos:start="4169:13" pos:end="4169:54"><name pos:start="4169:13" pos:end="4169:15">ret</name> <operator pos:start="4169:17" pos:end="4169:17">=</operator> <call pos:start="4169:19" pos:end="4169:54"><name pos:start="4169:19" pos:end="4169:27">get_errno</name><argument_list pos:start="4169:28" pos:end="4169:54">(<argument pos:start="4169:29" pos:end="4169:53"><expr pos:start="4169:29" pos:end="4169:53"><call pos:start="4169:29" pos:end="4169:53"><name pos:start="4169:29" pos:end="4169:36">do_fcntl</name><argument_list pos:start="4169:37" pos:end="4169:53">(<argument pos:start="4169:38" pos:end="4169:41"><expr pos:start="4169:38" pos:end="4169:41"><name pos:start="4169:38" pos:end="4169:41">arg1</name></expr></argument>, <argument pos:start="4169:44" pos:end="4169:46"><expr pos:start="4169:44" pos:end="4169:46"><name pos:start="4169:44" pos:end="4169:46">cmd</name></expr></argument>, <argument pos:start="4169:49" pos:end="4169:52"><expr pos:start="4169:49" pos:end="4169:52"><name pos:start="4169:49" pos:end="4169:52">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="4171:13" pos:end="4171:18">break;</break>

        </block_content>}</block></switch>

	<break pos:start="4175:9" pos:end="4175:14">break;</break>

    </block_content>}</block>

<cpp:endif pos:start="4179:1" pos:end="4179:6">#<cpp:directive pos:start="4179:2" pos:end="4179:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4181:1" pos:end="4181:27">#<cpp:directive pos:start="4181:2" pos:end="4181:6">ifdef</cpp:directive> <name pos:start="4181:8" pos:end="4181:27">TARGET_NR_cacheflush</name></cpp:ifdef>

    <case pos:start="4183:5" pos:end="4183:30">case <expr pos:start="4183:10" pos:end="4183:29"><name pos:start="4183:10" pos:end="4183:29">TARGET_NR_cacheflush</name></expr>:</case>

        <comment type="block" pos:start="4185:9" pos:end="4185:77">/* self-modifying code is handled automatically, so nothing needed */</comment>

        <expr_stmt pos:start="4187:9" pos:end="4187:16"><expr pos:start="4187:9" pos:end="4187:15"><name pos:start="4187:9" pos:end="4187:11">ret</name> <operator pos:start="4187:13" pos:end="4187:13">=</operator> <literal type="number" pos:start="4187:15" pos:end="4187:15">0</literal></expr>;</expr_stmt>

        <break pos:start="4189:9" pos:end="4194:0">break;</break>

<cpp:endif pos:start="4191:1" pos:end="4191:6">#<cpp:directive pos:start="4191:2" pos:end="4191:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4193:1" pos:end="4193:25">#<cpp:directive pos:start="4193:2" pos:end="4193:6">ifdef</cpp:directive> <name pos:start="4193:8" pos:end="4193:25">TARGET_NR_security</name></cpp:ifdef>

    <case pos:start="4195:5" pos:end="4195:28">case <expr pos:start="4195:10" pos:end="4195:27"><name pos:start="4195:10" pos:end="4195:27">TARGET_NR_security</name></expr>:</case>

        <goto pos:start="4197:9" pos:end="4202:0">goto <name pos:start="4197:14" pos:end="4197:26">unimplemented</name>;</goto>

<cpp:endif pos:start="4199:1" pos:end="4199:6">#<cpp:directive pos:start="4199:2" pos:end="4199:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4201:1" pos:end="4201:28">#<cpp:directive pos:start="4201:2" pos:end="4201:6">ifdef</cpp:directive> <name pos:start="4201:8" pos:end="4201:28">TARGET_NR_getpagesize</name></cpp:ifdef>

    <case pos:start="4203:5" pos:end="4203:31">case <expr pos:start="4203:10" pos:end="4203:30"><name pos:start="4203:10" pos:end="4203:30">TARGET_NR_getpagesize</name></expr>:</case>

        <expr_stmt pos:start="4205:9" pos:end="4205:31"><expr pos:start="4205:9" pos:end="4205:30"><name pos:start="4205:9" pos:end="4205:11">ret</name> <operator pos:start="4205:13" pos:end="4205:13">=</operator> <name pos:start="4205:15" pos:end="4205:30">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

        <break pos:start="4207:9" pos:end="4210:0">break;</break>

<cpp:endif pos:start="4209:1" pos:end="4209:6">#<cpp:directive pos:start="4209:2" pos:end="4209:6">endif</cpp:directive></cpp:endif>

    <case pos:start="4211:5" pos:end="4211:26">case <expr pos:start="4211:10" pos:end="4211:25"><name pos:start="4211:10" pos:end="4211:25">TARGET_NR_gettid</name></expr>:</case>

        <expr_stmt pos:start="4213:9" pos:end="4213:34"><expr pos:start="4213:9" pos:end="4213:33"><name pos:start="4213:9" pos:end="4213:11">ret</name> <operator pos:start="4213:13" pos:end="4213:13">=</operator> <call pos:start="4213:15" pos:end="4213:33"><name pos:start="4213:15" pos:end="4213:23">get_errno</name><argument_list pos:start="4213:24" pos:end="4213:33">(<argument pos:start="4213:25" pos:end="4213:32"><expr pos:start="4213:25" pos:end="4213:32"><call pos:start="4213:25" pos:end="4213:32"><name pos:start="4213:25" pos:end="4213:30">gettid</name><argument_list pos:start="4213:31" pos:end="4213:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4215:9" pos:end="4218:0">break;</break>

<cpp:ifdef pos:start="4217:1" pos:end="4217:26">#<cpp:directive pos:start="4217:2" pos:end="4217:6">ifdef</cpp:directive> <name pos:start="4217:8" pos:end="4217:26">TARGET_NR_readahead</name></cpp:ifdef>

    <case pos:start="4219:5" pos:end="4219:29">case <expr pos:start="4219:10" pos:end="4219:28"><name pos:start="4219:10" pos:end="4219:28">TARGET_NR_readahead</name></expr>:</case>

        <goto pos:start="4221:9" pos:end="4226:0">goto <name pos:start="4221:14" pos:end="4221:26">unimplemented</name>;</goto>

<cpp:endif pos:start="4223:1" pos:end="4223:6">#<cpp:directive pos:start="4223:2" pos:end="4223:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4225:1" pos:end="4225:25">#<cpp:directive pos:start="4225:2" pos:end="4225:6">ifdef</cpp:directive> <name pos:start="4225:8" pos:end="4225:25">TARGET_NR_setxattr</name></cpp:ifdef>

    <case pos:start="4227:5" pos:end="4227:28">case <expr pos:start="4227:10" pos:end="4227:27"><name pos:start="4227:10" pos:end="4227:27">TARGET_NR_setxattr</name></expr>:</case>

    <case pos:start="4229:5" pos:end="4229:29">case <expr pos:start="4229:10" pos:end="4229:28"><name pos:start="4229:10" pos:end="4229:28">TARGET_NR_lsetxattr</name></expr>:</case>

    <case pos:start="4231:5" pos:end="4231:29">case <expr pos:start="4231:10" pos:end="4231:28"><name pos:start="4231:10" pos:end="4231:28">TARGET_NR_fsetxattr</name></expr>:</case>

    <case pos:start="4233:5" pos:end="4233:28">case <expr pos:start="4233:10" pos:end="4233:27"><name pos:start="4233:10" pos:end="4233:27">TARGET_NR_getxattr</name></expr>:</case>

    <case pos:start="4235:5" pos:end="4235:29">case <expr pos:start="4235:10" pos:end="4235:28"><name pos:start="4235:10" pos:end="4235:28">TARGET_NR_lgetxattr</name></expr>:</case>

    <case pos:start="4237:5" pos:end="4237:29">case <expr pos:start="4237:10" pos:end="4237:28"><name pos:start="4237:10" pos:end="4237:28">TARGET_NR_fgetxattr</name></expr>:</case>

    <case pos:start="4239:5" pos:end="4239:29">case <expr pos:start="4239:10" pos:end="4239:28"><name pos:start="4239:10" pos:end="4239:28">TARGET_NR_listxattr</name></expr>:</case>

    <case pos:start="4241:5" pos:end="4241:30">case <expr pos:start="4241:10" pos:end="4241:29"><name pos:start="4241:10" pos:end="4241:29">TARGET_NR_llistxattr</name></expr>:</case>

    <case pos:start="4243:5" pos:end="4243:30">case <expr pos:start="4243:10" pos:end="4243:29"><name pos:start="4243:10" pos:end="4243:29">TARGET_NR_flistxattr</name></expr>:</case>

    <case pos:start="4245:5" pos:end="4245:31">case <expr pos:start="4245:10" pos:end="4245:30"><name pos:start="4245:10" pos:end="4245:30">TARGET_NR_removexattr</name></expr>:</case>

    <case pos:start="4247:5" pos:end="4247:32">case <expr pos:start="4247:10" pos:end="4247:31"><name pos:start="4247:10" pos:end="4247:31">TARGET_NR_lremovexattr</name></expr>:</case>

    <case pos:start="4249:5" pos:end="4249:32">case <expr pos:start="4249:10" pos:end="4249:31"><name pos:start="4249:10" pos:end="4249:31">TARGET_NR_fremovexattr</name></expr>:</case>

        <goto pos:start="4251:9" pos:end="4256:0">goto <name pos:start="4251:14" pos:end="4251:33">unimplemented_nowarn</name>;</goto>

<cpp:endif pos:start="4253:1" pos:end="4253:6">#<cpp:directive pos:start="4253:2" pos:end="4253:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4255:1" pos:end="4255:32">#<cpp:directive pos:start="4255:2" pos:end="4255:6">ifdef</cpp:directive> <name pos:start="4255:8" pos:end="4255:32">TARGET_NR_set_thread_area</name></cpp:ifdef>

    <case pos:start="4257:5" pos:end="4260:0">case <expr pos:start="4257:10" pos:end="4257:34"><name pos:start="4257:10" pos:end="4257:34">TARGET_NR_set_thread_area</name></expr>:</case>

<cpp:ifdef pos:start="4259:1" pos:end="4259:18">#<cpp:directive pos:start="4259:2" pos:end="4259:6">ifdef</cpp:directive> <name pos:start="4259:8" pos:end="4259:18">TARGET_MIPS</name></cpp:ifdef>

      <expr_stmt pos:start="4261:7" pos:end="4261:51"><expr pos:start="4261:7" pos:end="4261:50"><operator pos:start="4261:7" pos:end="4261:7">(</operator><operator pos:start="4261:8" pos:end="4261:8">(</operator><name pos:start="4261:9" pos:end="4261:20">CPUMIPSState</name> <operator pos:start="4261:22" pos:end="4261:22">*</operator><operator pos:start="4261:23" pos:end="4261:23">)</operator> <name pos:start="4261:25" pos:end="4261:31">cpu_env</name><operator pos:start="4261:32" pos:end="4261:32">)</operator><operator pos:start="4261:33" pos:end="4261:34">-&gt;</operator><name pos:start="4261:35" pos:end="4261:43">tls_value</name> <operator pos:start="4261:45" pos:end="4261:45">=</operator> <name pos:start="4261:47" pos:end="4261:50">arg1</name></expr>;</expr_stmt>

      <expr_stmt pos:start="4263:7" pos:end="4263:14"><expr pos:start="4263:7" pos:end="4263:13"><name pos:start="4263:7" pos:end="4263:9">ret</name> <operator pos:start="4263:11" pos:end="4263:11">=</operator> <literal type="number" pos:start="4263:13" pos:end="4263:13">0</literal></expr>;</expr_stmt>

      <break pos:start="4265:7" pos:end="4268:0">break;</break>

<cpp:else pos:start="4267:1" pos:end="4267:5">#<cpp:directive pos:start="4267:2" pos:end="4267:5">else</cpp:directive></cpp:else>

      <goto pos:start="4269:7" pos:end="4276:0">goto <name pos:start="4269:12" pos:end="4269:31">unimplemented_nowarn</name>;</goto>

<cpp:endif pos:start="4271:1" pos:end="4271:6">#<cpp:directive pos:start="4271:2" pos:end="4271:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="4273:1" pos:end="4273:6">#<cpp:directive pos:start="4273:2" pos:end="4273:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4275:1" pos:end="4275:32">#<cpp:directive pos:start="4275:2" pos:end="4275:6">ifdef</cpp:directive> <name pos:start="4275:8" pos:end="4275:32">TARGET_NR_get_thread_area</name></cpp:ifdef>

    <case pos:start="4277:5" pos:end="4277:35">case <expr pos:start="4277:10" pos:end="4277:34"><name pos:start="4277:10" pos:end="4277:34">TARGET_NR_get_thread_area</name></expr>:</case>

        <goto pos:start="4279:9" pos:end="4284:0">goto <name pos:start="4279:14" pos:end="4279:33">unimplemented_nowarn</name>;</goto>

<cpp:endif pos:start="4281:1" pos:end="4281:6">#<cpp:directive pos:start="4281:2" pos:end="4281:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4283:1" pos:end="4283:30">#<cpp:directive pos:start="4283:2" pos:end="4283:6">ifdef</cpp:directive> <name pos:start="4283:8" pos:end="4283:30">TARGET_NR_getdomainname</name></cpp:ifdef>

    <case pos:start="4285:5" pos:end="4285:33">case <expr pos:start="4285:10" pos:end="4285:32"><name pos:start="4285:10" pos:end="4285:32">TARGET_NR_getdomainname</name></expr>:</case>

        <goto pos:start="4287:9" pos:end="4294:0">goto <name pos:start="4287:14" pos:end="4287:33">unimplemented_nowarn</name>;</goto>

<cpp:endif pos:start="4289:1" pos:end="4289:6">#<cpp:directive pos:start="4289:2" pos:end="4289:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="4293:1" pos:end="4293:30">#<cpp:directive pos:start="4293:2" pos:end="4293:6">ifdef</cpp:directive> <name pos:start="4293:8" pos:end="4293:30">TARGET_NR_clock_gettime</name></cpp:ifdef>

    <case pos:start="4295:5" pos:end="4295:33">case <expr pos:start="4295:10" pos:end="4295:32"><name pos:start="4295:10" pos:end="4295:32">TARGET_NR_clock_gettime</name></expr>:</case>

    <block pos:start="4297:5" pos:end="4316:0">{<block_content pos:start="4299:9" pos:end="4309:14">

        <decl_stmt pos:start="4299:9" pos:end="4299:27"><decl pos:start="4299:9" pos:end="4299:26"><type pos:start="4299:9" pos:end="4299:23"><name pos:start="4299:9" pos:end="4299:23"><name pos:start="4299:9" pos:end="4299:14">struct</name> <name pos:start="4299:16" pos:end="4299:23">timespec</name></name></type> <name pos:start="4299:25" pos:end="4299:26">ts</name></decl>;</decl_stmt>

        <expr_stmt pos:start="4301:9" pos:end="4301:50"><expr pos:start="4301:9" pos:end="4301:49"><name pos:start="4301:9" pos:end="4301:11">ret</name> <operator pos:start="4301:13" pos:end="4301:13">=</operator> <call pos:start="4301:15" pos:end="4301:49"><name pos:start="4301:15" pos:end="4301:23">get_errno</name><argument_list pos:start="4301:24" pos:end="4301:49">(<argument pos:start="4301:25" pos:end="4301:48"><expr pos:start="4301:25" pos:end="4301:48"><call pos:start="4301:25" pos:end="4301:48"><name pos:start="4301:25" pos:end="4301:37">clock_gettime</name><argument_list pos:start="4301:38" pos:end="4301:48">(<argument pos:start="4301:39" pos:end="4301:42"><expr pos:start="4301:39" pos:end="4301:42"><name pos:start="4301:39" pos:end="4301:42">arg1</name></expr></argument>, <argument pos:start="4301:45" pos:end="4301:47"><expr pos:start="4301:45" pos:end="4301:47"><operator pos:start="4301:45" pos:end="4301:45">&amp;</operator><name pos:start="4301:46" pos:end="4301:47">ts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="4303:9" pos:end="4307:9"><if pos:start="4303:9" pos:end="4307:9">if <condition pos:start="4303:12" pos:end="4303:27">(<expr pos:start="4303:13" pos:end="4303:26"><operator pos:start="4303:13" pos:end="4303:13">!</operator><call pos:start="4303:14" pos:end="4303:26"><name pos:start="4303:14" pos:end="4303:21">is_error</name><argument_list pos:start="4303:22" pos:end="4303:26">(<argument pos:start="4303:23" pos:end="4303:25"><expr pos:start="4303:23" pos:end="4303:25"><name pos:start="4303:23" pos:end="4303:25">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="4303:29" pos:end="4307:9">{<block_content pos:start="4305:13" pos:end="4305:47">

            <expr_stmt pos:start="4305:13" pos:end="4305:47"><expr pos:start="4305:13" pos:end="4305:46"><call pos:start="4305:13" pos:end="4305:46"><name pos:start="4305:13" pos:end="4305:35">host_to_target_timespec</name><argument_list pos:start="4305:36" pos:end="4305:46">(<argument pos:start="4305:37" pos:end="4305:40"><expr pos:start="4305:37" pos:end="4305:40"><name pos:start="4305:37" pos:end="4305:40">arg2</name></expr></argument>, <argument pos:start="4305:43" pos:end="4305:45"><expr pos:start="4305:43" pos:end="4305:45"><operator pos:start="4305:43" pos:end="4305:43">&amp;</operator><name pos:start="4305:44" pos:end="4305:45">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="4309:9" pos:end="4309:14">break;</break>

    </block_content>}</block>

<cpp:endif pos:start="4313:1" pos:end="4313:6">#<cpp:directive pos:start="4313:2" pos:end="4313:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4315:1" pos:end="4315:29">#<cpp:directive pos:start="4315:2" pos:end="4315:6">ifdef</cpp:directive> <name pos:start="4315:8" pos:end="4315:29">TARGET_NR_clock_getres</name></cpp:ifdef>

    <case pos:start="4317:5" pos:end="4317:32">case <expr pos:start="4317:10" pos:end="4317:31"><name pos:start="4317:10" pos:end="4317:31">TARGET_NR_clock_getres</name></expr>:</case>

    <block pos:start="4319:5" pos:end="4340:0">{<block_content pos:start="4321:9" pos:end="4331:14">

        <decl_stmt pos:start="4321:9" pos:end="4321:27"><decl pos:start="4321:9" pos:end="4321:26"><type pos:start="4321:9" pos:end="4321:23"><name pos:start="4321:9" pos:end="4321:23"><name pos:start="4321:9" pos:end="4321:14">struct</name> <name pos:start="4321:16" pos:end="4321:23">timespec</name></name></type> <name pos:start="4321:25" pos:end="4321:26">ts</name></decl>;</decl_stmt>

        <expr_stmt pos:start="4323:9" pos:end="4323:49"><expr pos:start="4323:9" pos:end="4323:48"><name pos:start="4323:9" pos:end="4323:11">ret</name> <operator pos:start="4323:13" pos:end="4323:13">=</operator> <call pos:start="4323:15" pos:end="4323:48"><name pos:start="4323:15" pos:end="4323:23">get_errno</name><argument_list pos:start="4323:24" pos:end="4323:48">(<argument pos:start="4323:25" pos:end="4323:47"><expr pos:start="4323:25" pos:end="4323:47"><call pos:start="4323:25" pos:end="4323:47"><name pos:start="4323:25" pos:end="4323:36">clock_getres</name><argument_list pos:start="4323:37" pos:end="4323:47">(<argument pos:start="4323:38" pos:end="4323:41"><expr pos:start="4323:38" pos:end="4323:41"><name pos:start="4323:38" pos:end="4323:41">arg1</name></expr></argument>, <argument pos:start="4323:44" pos:end="4323:46"><expr pos:start="4323:44" pos:end="4323:46"><operator pos:start="4323:44" pos:end="4323:44">&amp;</operator><name pos:start="4323:45" pos:end="4323:46">ts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="4325:9" pos:end="4329:9"><if pos:start="4325:9" pos:end="4329:9">if <condition pos:start="4325:12" pos:end="4325:27">(<expr pos:start="4325:13" pos:end="4325:26"><operator pos:start="4325:13" pos:end="4325:13">!</operator><call pos:start="4325:14" pos:end="4325:26"><name pos:start="4325:14" pos:end="4325:21">is_error</name><argument_list pos:start="4325:22" pos:end="4325:26">(<argument pos:start="4325:23" pos:end="4325:25"><expr pos:start="4325:23" pos:end="4325:25"><name pos:start="4325:23" pos:end="4325:25">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="4325:29" pos:end="4329:9">{<block_content pos:start="4327:13" pos:end="4327:47">

            <expr_stmt pos:start="4327:13" pos:end="4327:47"><expr pos:start="4327:13" pos:end="4327:46"><call pos:start="4327:13" pos:end="4327:46"><name pos:start="4327:13" pos:end="4327:35">host_to_target_timespec</name><argument_list pos:start="4327:36" pos:end="4327:46">(<argument pos:start="4327:37" pos:end="4327:40"><expr pos:start="4327:37" pos:end="4327:40"><name pos:start="4327:37" pos:end="4327:40">arg2</name></expr></argument>, <argument pos:start="4327:43" pos:end="4327:45"><expr pos:start="4327:43" pos:end="4327:45"><operator pos:start="4327:43" pos:end="4327:43">&amp;</operator><name pos:start="4327:44" pos:end="4327:45">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="4331:9" pos:end="4331:14">break;</break>

    </block_content>}</block>

<cpp:endif pos:start="4335:1" pos:end="4335:6">#<cpp:directive pos:start="4335:2" pos:end="4335:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="4339:1" pos:end="4339:71">#<cpp:directive pos:start="4339:2" pos:end="4339:3">if</cpp:directive> <expr pos:start="4339:5" pos:end="4339:71"><call pos:start="4339:5" pos:end="4339:38"><name pos:start="4339:5" pos:end="4339:11">defined</name><argument_list pos:start="4339:12" pos:end="4339:38">(<argument pos:start="4339:13" pos:end="4339:37"><expr pos:start="4339:13" pos:end="4339:37"><name pos:start="4339:13" pos:end="4339:37">TARGET_NR_set_tid_address</name></expr></argument>)</argument_list></call> <operator pos:start="4339:40" pos:end="4339:41">&amp;&amp;</operator> <call pos:start="4339:43" pos:end="4339:71"><name pos:start="4339:43" pos:end="4339:49">defined</name><argument_list pos:start="4339:50" pos:end="4339:71">(<argument pos:start="4339:51" pos:end="4339:70"><expr pos:start="4339:51" pos:end="4339:70"><name pos:start="4339:51" pos:end="4339:70">__NR_set_tid_address</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="4341:5" pos:end="4341:35">case <expr pos:start="4341:10" pos:end="4341:34"><name pos:start="4341:10" pos:end="4341:34">TARGET_NR_set_tid_address</name></expr>:</case>

      <expr_stmt pos:start="4343:7" pos:end="4343:53"><expr pos:start="4343:7" pos:end="4343:52"><name pos:start="4343:7" pos:end="4343:9">ret</name> <operator pos:start="4343:11" pos:end="4343:11">=</operator> <call pos:start="4343:13" pos:end="4343:52"><name pos:start="4343:13" pos:end="4343:21">get_errno</name><argument_list pos:start="4343:22" pos:end="4343:52">(<argument pos:start="4343:23" pos:end="4343:51"><expr pos:start="4343:23" pos:end="4343:51"><call pos:start="4343:23" pos:end="4343:51"><name pos:start="4343:23" pos:end="4343:37">set_tid_address</name><argument_list pos:start="4343:38" pos:end="4343:51">(<argument pos:start="4343:39" pos:end="4343:50"><expr pos:start="4343:39" pos:end="4343:50"><operator pos:start="4343:39" pos:end="4343:39">(</operator><name pos:start="4343:40" pos:end="4343:42">int</name> <operator pos:start="4343:44" pos:end="4343:44">*</operator><operator pos:start="4343:45" pos:end="4343:45">)</operator> <name pos:start="4343:47" pos:end="4343:50">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <break pos:start="4345:7" pos:end="4352:0">break;</break>

<cpp:endif pos:start="4347:1" pos:end="4347:6">#<cpp:directive pos:start="4347:2" pos:end="4347:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="4351:1" pos:end="4351:22">#<cpp:directive pos:start="4351:2" pos:end="4351:6">ifdef</cpp:directive> <name pos:start="4351:8" pos:end="4351:22">TARGET_NR_tkill</name></cpp:ifdef>

    <case pos:start="4353:5" pos:end="4353:25">case <expr pos:start="4353:10" pos:end="4353:24"><name pos:start="4353:10" pos:end="4353:24">TARGET_NR_tkill</name></expr>:</case>

        <expr_stmt pos:start="4355:9" pos:end="4355:57"><expr pos:start="4355:9" pos:end="4355:56"><name pos:start="4355:9" pos:end="4355:11">ret</name> <operator pos:start="4355:13" pos:end="4355:13">=</operator> <call pos:start="4355:15" pos:end="4355:56"><name pos:start="4355:15" pos:end="4355:23">get_errno</name><argument_list pos:start="4355:24" pos:end="4355:56">(<argument pos:start="4355:25" pos:end="4355:55"><expr pos:start="4355:25" pos:end="4355:55"><call pos:start="4355:25" pos:end="4355:55"><name pos:start="4355:25" pos:end="4355:33">sys_tkill</name><argument_list pos:start="4355:34" pos:end="4355:55">(<argument pos:start="4355:35" pos:end="4355:43"><expr pos:start="4355:35" pos:end="4355:43"><operator pos:start="4355:35" pos:end="4355:35">(</operator><name pos:start="4355:36" pos:end="4355:38">int</name><operator pos:start="4355:39" pos:end="4355:39">)</operator><name pos:start="4355:40" pos:end="4355:43">arg1</name></expr></argument>, <argument pos:start="4355:46" pos:end="4355:54"><expr pos:start="4355:46" pos:end="4355:54"><operator pos:start="4355:46" pos:end="4355:46">(</operator><name pos:start="4355:47" pos:end="4355:49">int</name><operator pos:start="4355:50" pos:end="4355:50">)</operator><name pos:start="4355:51" pos:end="4355:54">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4357:9" pos:end="4364:0">break;</break>

<cpp:endif pos:start="4359:1" pos:end="4359:6">#<cpp:directive pos:start="4359:2" pos:end="4359:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="4363:1" pos:end="4363:23">#<cpp:directive pos:start="4363:2" pos:end="4363:6">ifdef</cpp:directive> <name pos:start="4363:8" pos:end="4363:23">TARGET_NR_tgkill</name></cpp:ifdef>

    <case pos:start="4365:5" pos:end="4365:26">case <expr pos:start="4365:10" pos:end="4365:25"><name pos:start="4365:10" pos:end="4365:25">TARGET_NR_tgkill</name></expr>:</case>

	<expr_stmt pos:start="4367:9" pos:end="4367:69"><expr pos:start="4367:9" pos:end="4367:68"><name pos:start="4367:9" pos:end="4367:11">ret</name> <operator pos:start="4367:13" pos:end="4367:13">=</operator> <call pos:start="4367:15" pos:end="4367:68"><name pos:start="4367:15" pos:end="4367:23">get_errno</name><argument_list pos:start="4367:24" pos:end="4367:68">(<argument pos:start="4367:25" pos:end="4367:67"><expr pos:start="4367:25" pos:end="4367:67"><call pos:start="4367:25" pos:end="4367:67"><name pos:start="4367:25" pos:end="4367:34">sys_tgkill</name><argument_list pos:start="4367:35" pos:end="4367:67">(<argument pos:start="4367:36" pos:end="4367:44"><expr pos:start="4367:36" pos:end="4367:44"><operator pos:start="4367:36" pos:end="4367:36">(</operator><name pos:start="4367:37" pos:end="4367:39">int</name><operator pos:start="4367:40" pos:end="4367:40">)</operator><name pos:start="4367:41" pos:end="4367:44">arg1</name></expr></argument>, <argument pos:start="4367:47" pos:end="4367:55"><expr pos:start="4367:47" pos:end="4367:55"><operator pos:start="4367:47" pos:end="4367:47">(</operator><name pos:start="4367:48" pos:end="4367:50">int</name><operator pos:start="4367:51" pos:end="4367:51">)</operator><name pos:start="4367:52" pos:end="4367:55">arg2</name></expr></argument>, <argument pos:start="4367:58" pos:end="4367:66"><expr pos:start="4367:58" pos:end="4367:66"><operator pos:start="4367:58" pos:end="4367:58">(</operator><name pos:start="4367:59" pos:end="4367:61">int</name><operator pos:start="4367:62" pos:end="4367:62">)</operator><name pos:start="4367:63" pos:end="4367:66">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="4369:9" pos:end="4376:0">break;</break>

<cpp:endif pos:start="4371:1" pos:end="4371:6">#<cpp:directive pos:start="4371:2" pos:end="4371:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="4375:1" pos:end="4375:32">#<cpp:directive pos:start="4375:2" pos:end="4375:6">ifdef</cpp:directive> <name pos:start="4375:8" pos:end="4375:32">TARGET_NR_set_robust_list</name></cpp:ifdef>

    <case pos:start="4377:5" pos:end="4377:35">case <expr pos:start="4377:10" pos:end="4377:34"><name pos:start="4377:10" pos:end="4377:34">TARGET_NR_set_robust_list</name></expr>:</case>

	<goto pos:start="4379:9" pos:end="4382:0">goto <name pos:start="4379:14" pos:end="4379:33">unimplemented_nowarn</name>;</goto>

<cpp:endif pos:start="4381:1" pos:end="4381:6">#<cpp:directive pos:start="4381:2" pos:end="4381:6">endif</cpp:directive></cpp:endif>



    <default pos:start="4385:5" pos:end="4385:12">default:</default>

    <label pos:start="4387:5" pos:end="4387:18"><name pos:start="4387:5" pos:end="4387:17">unimplemented</name>:</label>

        <expr_stmt pos:start="4389:9" pos:end="4392:0"><expr pos:start="4389:9" pos:end="4389:56"><call pos:start="4389:9" pos:end="4389:56"><name pos:start="4389:9" pos:end="4389:16">gemu_log</name><argument_list pos:start="4389:17" pos:end="4389:56">(<argument pos:start="4389:18" pos:end="4389:50"><expr pos:start="4389:18" pos:end="4389:50"><literal type="string" pos:start="4389:18" pos:end="4389:50">"qemu: Unsupported syscall: %d\n"</literal></expr></argument>, <argument pos:start="4389:53" pos:end="4389:55"><expr pos:start="4389:53" pos:end="4389:55"><name pos:start="4389:53" pos:end="4389:55">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="4391:1" pos:end="4391:143">#<cpp:directive pos:start="4391:2" pos:end="4391:3">if</cpp:directive> <expr pos:start="4391:5" pos:end="4391:143"><call pos:start="4391:5" pos:end="4391:31"><name pos:start="4391:5" pos:end="4391:11">defined</name><argument_list pos:start="4391:12" pos:end="4391:31">(<argument pos:start="4391:13" pos:end="4391:30"><expr pos:start="4391:13" pos:end="4391:30"><name pos:start="4391:13" pos:end="4391:30">TARGET_NR_setxattr</name></expr></argument>)</argument_list></call> <operator pos:start="4391:33" pos:end="4391:34">||</operator> <call pos:start="4391:36" pos:end="4391:69"><name pos:start="4391:36" pos:end="4391:42">defined</name><argument_list pos:start="4391:43" pos:end="4391:69">(<argument pos:start="4391:44" pos:end="4391:68"><expr pos:start="4391:44" pos:end="4391:68"><name pos:start="4391:44" pos:end="4391:68">TARGET_NR_get_thread_area</name></expr></argument>)</argument_list></call> <operator pos:start="4391:71" pos:end="4391:72">||</operator> <call pos:start="4391:74" pos:end="4391:105"><name pos:start="4391:74" pos:end="4391:80">defined</name><argument_list pos:start="4391:81" pos:end="4391:105">(<argument pos:start="4391:82" pos:end="4391:104"><expr pos:start="4391:82" pos:end="4391:104"><name pos:start="4391:82" pos:end="4391:104">TARGET_NR_getdomainname</name></expr></argument>)</argument_list></call> <operator pos:start="4391:107" pos:end="4391:108">||</operator> <call pos:start="4391:110" pos:end="4391:143"><name pos:start="4391:110" pos:end="4391:116">defined</name><argument_list pos:start="4391:117" pos:end="4391:143">(<argument pos:start="4391:118" pos:end="4391:142"><expr pos:start="4391:118" pos:end="4391:142"><name pos:start="4391:118" pos:end="4391:142">TARGET_NR_set_robust_list</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <label pos:start="4393:5" pos:end="4396:0"><name pos:start="4393:5" pos:end="4393:24">unimplemented_nowarn</name>:</label>

<cpp:endif pos:start="4395:1" pos:end="4395:6">#<cpp:directive pos:start="4395:2" pos:end="4395:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="4397:9" pos:end="4397:22"><expr pos:start="4397:9" pos:end="4397:21"><name pos:start="4397:9" pos:end="4397:11">ret</name> <operator pos:start="4397:13" pos:end="4397:13">=</operator> <operator pos:start="4397:15" pos:end="4397:15">-</operator><name pos:start="4397:16" pos:end="4397:21">ENOSYS</name></expr>;</expr_stmt>

        <break pos:start="4399:9" pos:end="4399:14">break;</break>

    </block_content>}</block></switch>

 <label pos:start="4403:2" pos:end="4406:0"><name pos:start="4403:2" pos:end="4403:5">fail</name>:</label>

<cpp:ifdef pos:start="4405:1" pos:end="4405:12">#<cpp:directive pos:start="4405:2" pos:end="4405:6">ifdef</cpp:directive> <name pos:start="4405:8" pos:end="4405:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="4407:5" pos:end="4410:0"><expr pos:start="4407:5" pos:end="4407:29"><call pos:start="4407:5" pos:end="4407:29"><name pos:start="4407:5" pos:end="4407:12">gemu_log</name><argument_list pos:start="4407:13" pos:end="4407:29">(<argument pos:start="4407:14" pos:end="4407:23"><expr pos:start="4407:14" pos:end="4407:23"><literal type="string" pos:start="4407:14" pos:end="4407:23">" = %ld\n"</literal></expr></argument>, <argument pos:start="4407:26" pos:end="4407:28"><expr pos:start="4407:26" pos:end="4407:28"><name pos:start="4407:26" pos:end="4407:28">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="4409:1" pos:end="4409:6">#<cpp:directive pos:start="4409:2" pos:end="4409:6">endif</cpp:directive></cpp:endif>

    <return pos:start="4411:5" pos:end="4411:15">return <expr pos:start="4411:12" pos:end="4411:14"><name pos:start="4411:12" pos:end="4411:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
