<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14389.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:44">sdhci_sdma_transfer_single_block</name><parameter_list pos:start="1:45" pos:end="1:59">(<parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:55">SDHCIState</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:26">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:20">datacnt</name> <init pos:start="7:22" pos:end="7:42">= <expr pos:start="7:24" pos:end="7:42"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:24">s</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:33">blksize</name></name> <operator pos:start="7:35" pos:end="7:35">&amp;</operator> <literal type="number" pos:start="7:37" pos:end="7:42">0x0fff</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="35:5"><if pos:start="11:5" pos:end="23:5">if <condition pos:start="11:8" pos:end="11:35">(<expr pos:start="11:9" pos:end="11:34"><name pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:17">trnmod</name></name> <operator pos:start="11:19" pos:end="11:19">&amp;</operator> <name pos:start="11:21" pos:end="11:34">SDHC_TRNS_READ</name></expr>)</condition> <block pos:start="11:37" pos:end="23:5">{<block_content pos:start="13:9" pos:end="21:34">

        <for pos:start="13:9" pos:end="17:9">for <control pos:start="13:13" pos:end="13:37">(<init pos:start="13:14" pos:end="13:19"><expr pos:start="13:14" pos:end="13:18"><name pos:start="13:14" pos:end="13:14">n</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>;</init> <condition pos:start="13:21" pos:end="13:32"><expr pos:start="13:21" pos:end="13:31"><name pos:start="13:21" pos:end="13:21">n</name> <operator pos:start="13:23" pos:end="13:23">&lt;</operator> <name pos:start="13:25" pos:end="13:31">datacnt</name></expr>;</condition> <incr pos:start="13:34" pos:end="13:36"><expr pos:start="13:34" pos:end="13:36"><name pos:start="13:34" pos:end="13:34">n</name><operator pos:start="13:35" pos:end="13:36">++</operator></expr></incr>)</control> <block pos:start="13:39" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:59">

            <expr_stmt pos:start="15:13" pos:end="15:59"><expr pos:start="15:13" pos:end="15:58"><name pos:start="15:13" pos:end="15:29"><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:26">fifo_buffer</name><index pos:start="15:27" pos:end="15:29">[<expr pos:start="15:28" pos:end="15:28"><name pos:start="15:28" pos:end="15:28">n</name></expr>]</index></name> <operator pos:start="15:31" pos:end="15:31">=</operator> <call pos:start="15:33" pos:end="15:58"><name pos:start="15:33" pos:end="15:47">sdbus_read_data</name><argument_list pos:start="15:48" pos:end="15:58">(<argument pos:start="15:49" pos:end="15:57"><expr pos:start="15:49" pos:end="15:57"><operator pos:start="15:49" pos:end="15:49">&amp;</operator><name pos:start="15:50" pos:end="15:57"><name pos:start="15:50" pos:end="15:50">s</name><operator pos:start="15:51" pos:end="15:52">-&gt;</operator><name pos:start="15:53" pos:end="15:57">sdbus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="19:9" pos:end="21:34"><expr pos:start="19:9" pos:end="21:33"><call pos:start="19:9" pos:end="21:33"><name pos:start="19:9" pos:end="19:24">dma_memory_write</name><argument_list pos:start="19:25" pos:end="21:33">(<argument pos:start="19:26" pos:end="19:46"><expr pos:start="19:26" pos:end="19:46"><operator pos:start="19:26" pos:end="19:26">&amp;</operator><name pos:start="19:27" pos:end="19:46">address_space_memory</name></expr></argument>, <argument pos:start="19:49" pos:end="19:60"><expr pos:start="19:49" pos:end="19:60"><name pos:start="19:49" pos:end="19:60"><name pos:start="19:49" pos:end="19:49">s</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:60">sdmasysad</name></name></expr></argument>, <argument pos:start="19:63" pos:end="19:76"><expr pos:start="19:63" pos:end="19:76"><name pos:start="19:63" pos:end="19:76"><name pos:start="19:63" pos:end="19:63">s</name><operator pos:start="19:64" pos:end="19:65">-&gt;</operator><name pos:start="19:66" pos:end="19:76">fifo_buffer</name></name></expr></argument>,

                         <argument pos:start="21:26" pos:end="21:32"><expr pos:start="21:26" pos:end="21:32"><name pos:start="21:26" pos:end="21:32">datacnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="35:5">else <block pos:start="23:12" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:9">

        <expr_stmt pos:start="25:9" pos:end="27:33"><expr pos:start="25:9" pos:end="27:32"><call pos:start="25:9" pos:end="27:32"><name pos:start="25:9" pos:end="25:23">dma_memory_read</name><argument_list pos:start="25:24" pos:end="27:32">(<argument pos:start="25:25" pos:end="25:45"><expr pos:start="25:25" pos:end="25:45"><operator pos:start="25:25" pos:end="25:25">&amp;</operator><name pos:start="25:26" pos:end="25:45">address_space_memory</name></expr></argument>, <argument pos:start="25:48" pos:end="25:59"><expr pos:start="25:48" pos:end="25:59"><name pos:start="25:48" pos:end="25:59"><name pos:start="25:48" pos:end="25:48">s</name><operator pos:start="25:49" pos:end="25:50">-&gt;</operator><name pos:start="25:51" pos:end="25:59">sdmasysad</name></name></expr></argument>, <argument pos:start="25:62" pos:end="25:75"><expr pos:start="25:62" pos:end="25:75"><name pos:start="25:62" pos:end="25:75"><name pos:start="25:62" pos:end="25:62">s</name><operator pos:start="25:63" pos:end="25:64">-&gt;</operator><name pos:start="25:65" pos:end="25:75">fifo_buffer</name></name></expr></argument>,

                        <argument pos:start="27:25" pos:end="27:31"><expr pos:start="27:25" pos:end="27:31"><name pos:start="27:25" pos:end="27:31">datacnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="29:9" pos:end="33:9">for <control pos:start="29:13" pos:end="29:37">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">n</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:32"><expr pos:start="29:21" pos:end="29:31"><name pos:start="29:21" pos:end="29:21">n</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <name pos:start="29:25" pos:end="29:31">datacnt</name></expr>;</condition> <incr pos:start="29:34" pos:end="29:36"><expr pos:start="29:34" pos:end="29:36"><name pos:start="29:34" pos:end="29:34">n</name><operator pos:start="29:35" pos:end="29:36">++</operator></expr></incr>)</control> <block pos:start="29:39" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:59">

            <expr_stmt pos:start="31:13" pos:end="31:59"><expr pos:start="31:13" pos:end="31:58"><call pos:start="31:13" pos:end="31:58"><name pos:start="31:13" pos:end="31:28">sdbus_write_data</name><argument_list pos:start="31:29" pos:end="31:58">(<argument pos:start="31:30" pos:end="31:38"><expr pos:start="31:30" pos:end="31:38"><operator pos:start="31:30" pos:end="31:30">&amp;</operator><name pos:start="31:31" pos:end="31:38"><name pos:start="31:31" pos:end="31:31">s</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:38">sdbus</name></name></expr></argument>, <argument pos:start="31:41" pos:end="31:57"><expr pos:start="31:41" pos:end="31:57"><name pos:start="31:41" pos:end="31:57"><name pos:start="31:41" pos:end="31:41">s</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:54">fifo_buffer</name><index pos:start="31:55" pos:end="31:57">[<expr pos:start="31:56" pos:end="31:56"><name pos:start="31:56" pos:end="31:56">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:41">(<expr pos:start="39:9" pos:end="39:40"><name pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:17">trnmod</name></name> <operator pos:start="39:19" pos:end="39:19">&amp;</operator> <name pos:start="39:21" pos:end="39:40">SDHC_TRNS_BLK_CNT_EN</name></expr>)</condition> <block pos:start="39:43" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:20">

        <expr_stmt pos:start="41:9" pos:end="41:20"><expr pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:17">blkcnt</name></name><operator pos:start="41:18" pos:end="41:19">--</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:26"><expr pos:start="47:5" pos:end="47:25"><call pos:start="47:5" pos:end="47:25"><name pos:start="47:5" pos:end="47:22">sdhci_end_transfer</name><argument_list pos:start="47:23" pos:end="47:25">(<argument pos:start="47:24" pos:end="47:24"><expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
