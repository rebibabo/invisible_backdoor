<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22778.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">cpu_loop</name> <parameter_list pos:start="1:15" pos:end="1:29">(<parameter pos:start="1:16" pos:end="1:28"><decl pos:start="1:16" pos:end="1:28"><type pos:start="1:16" pos:end="1:25"><name pos:start="1:16" pos:end="1:23">CPUState</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:28">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="171:1">{<block_content pos:start="5:5" pos:end="169:5">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">trapnr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:20">target_siginfo_t</name></type> <name pos:start="7:22" pos:end="7:25">info</name></decl>;</decl_stmt>



    <while pos:start="11:5" pos:end="169:5">while <condition pos:start="11:11" pos:end="11:13">(<expr pos:start="11:12" pos:end="11:12"><literal type="number" pos:start="11:12" pos:end="11:12">1</literal></expr>)</condition> <block pos:start="11:15" pos:end="169:5">{<block_content pos:start="13:9" pos:end="167:38">

        <expr_stmt pos:start="13:9" pos:end="13:38"><expr pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:14">trapnr</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <call pos:start="13:18" pos:end="13:37"><name pos:start="13:18" pos:end="13:31">cpu_alpha_exec</name> <argument_list pos:start="13:33" pos:end="13:37">(<argument pos:start="13:34" pos:end="13:36"><expr pos:start="13:34" pos:end="13:36"><name pos:start="13:34" pos:end="13:36">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="17:9" pos:end="165:9">switch <condition pos:start="17:16" pos:end="17:23">(<expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">trapnr</name></expr>)</condition> <block pos:start="17:25" pos:end="165:9">{<block_content pos:start="19:9" pos:end="163:21">

        <case pos:start="19:9" pos:end="19:24">case <expr pos:start="19:14" pos:end="19:23"><name pos:start="19:14" pos:end="19:23">EXCP_RESET</name></expr>:</case>

            <expr_stmt pos:start="21:13" pos:end="21:55"><expr pos:start="21:13" pos:end="21:54"><call pos:start="21:13" pos:end="21:54"><name pos:start="21:13" pos:end="21:19">fprintf</name><argument_list pos:start="21:20" pos:end="21:54">(<argument pos:start="21:21" pos:end="21:26"><expr pos:start="21:21" pos:end="21:26"><name pos:start="21:21" pos:end="21:26">stderr</name></expr></argument>, <argument pos:start="21:29" pos:end="21:53"><expr pos:start="21:29" pos:end="21:53"><literal type="string" pos:start="21:29" pos:end="21:53">"Reset requested. Exit\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:20"><expr pos:start="23:13" pos:end="23:19"><call pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:16">exit</name><argument_list pos:start="23:17" pos:end="23:19">(<argument pos:start="23:18" pos:end="23:18"><expr pos:start="23:18" pos:end="23:18"><literal type="number" pos:start="23:18" pos:end="23:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="25:13" pos:end="25:18">break;</break>

        <case pos:start="27:9" pos:end="27:23">case <expr pos:start="27:14" pos:end="27:22"><name pos:start="27:14" pos:end="27:22">EXCP_MCHK</name></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:63"><expr pos:start="29:13" pos:end="29:62"><call pos:start="29:13" pos:end="29:62"><name pos:start="29:13" pos:end="29:19">fprintf</name><argument_list pos:start="29:20" pos:end="29:62">(<argument pos:start="29:21" pos:end="29:26"><expr pos:start="29:21" pos:end="29:26"><name pos:start="29:21" pos:end="29:26">stderr</name></expr></argument>, <argument pos:start="29:29" pos:end="29:61"><expr pos:start="29:29" pos:end="29:61"><literal type="string" pos:start="29:29" pos:end="29:61">"Machine check exception. Exit\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:20"><expr pos:start="31:13" pos:end="31:19"><call pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:16">exit</name><argument_list pos:start="31:17" pos:end="31:19">(<argument pos:start="31:18" pos:end="31:18"><expr pos:start="31:18" pos:end="31:18"><literal type="number" pos:start="31:18" pos:end="31:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        <case pos:start="35:9" pos:end="35:24">case <expr pos:start="35:14" pos:end="35:23"><name pos:start="35:14" pos:end="35:23">EXCP_ARITH</name></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:50"><expr pos:start="37:13" pos:end="37:49"><call pos:start="37:13" pos:end="37:49"><name pos:start="37:13" pos:end="37:19">fprintf</name><argument_list pos:start="37:20" pos:end="37:49">(<argument pos:start="37:21" pos:end="37:26"><expr pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:26">stderr</name></expr></argument>, <argument pos:start="37:29" pos:end="37:48"><expr pos:start="37:29" pos:end="37:48"><literal type="string" pos:start="37:29" pos:end="37:48">"Arithmetic trap.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:20"><expr pos:start="39:13" pos:end="39:19"><call pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:16">exit</name><argument_list pos:start="39:17" pos:end="39:19">(<argument pos:start="39:18" pos:end="39:18"><expr pos:start="39:18" pos:end="39:18"><literal type="number" pos:start="39:18" pos:end="39:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>

        <case pos:start="43:9" pos:end="43:31">case <expr pos:start="43:14" pos:end="43:30"><name pos:start="43:14" pos:end="43:30">EXCP_HW_INTERRUPT</name></expr>:</case>

            <expr_stmt pos:start="45:13" pos:end="45:58"><expr pos:start="45:13" pos:end="45:57"><call pos:start="45:13" pos:end="45:57"><name pos:start="45:13" pos:end="45:19">fprintf</name><argument_list pos:start="45:20" pos:end="45:57">(<argument pos:start="45:21" pos:end="45:26"><expr pos:start="45:21" pos:end="45:26"><name pos:start="45:21" pos:end="45:26">stderr</name></expr></argument>, <argument pos:start="45:29" pos:end="45:56"><expr pos:start="45:29" pos:end="45:56"><literal type="string" pos:start="45:29" pos:end="45:56">"External interrupt. Exit\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:20"><expr pos:start="47:13" pos:end="47:19"><call pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:16">exit</name><argument_list pos:start="47:17" pos:end="47:19">(<argument pos:start="47:18" pos:end="47:18"><expr pos:start="47:18" pos:end="47:18"><literal type="number" pos:start="47:18" pos:end="47:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        <case pos:start="51:9" pos:end="51:25">case <expr pos:start="51:14" pos:end="51:24"><name pos:start="51:14" pos:end="51:24">EXCP_DFAULT</name></expr>:</case>

            <expr_stmt pos:start="53:13" pos:end="53:48"><expr pos:start="53:13" pos:end="53:47"><call pos:start="53:13" pos:end="53:47"><name pos:start="53:13" pos:end="53:19">fprintf</name><argument_list pos:start="53:20" pos:end="53:47">(<argument pos:start="53:21" pos:end="53:26"><expr pos:start="53:21" pos:end="53:26"><name pos:start="53:21" pos:end="53:26">stderr</name></expr></argument>, <argument pos:start="53:29" pos:end="53:46"><expr pos:start="53:29" pos:end="53:46"><literal type="string" pos:start="53:29" pos:end="53:46">"MMU data fault\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:20"><expr pos:start="55:13" pos:end="55:19"><call pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:16">exit</name><argument_list pos:start="55:17" pos:end="55:19">(<argument pos:start="55:18" pos:end="55:18"><expr pos:start="55:18" pos:end="55:18"><literal type="number" pos:start="55:18" pos:end="55:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:31">case <expr pos:start="59:14" pos:end="59:30"><name pos:start="59:14" pos:end="59:30">EXCP_DTB_MISS_PAL</name></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:62"><expr pos:start="61:13" pos:end="61:61"><call pos:start="61:13" pos:end="61:61"><name pos:start="61:13" pos:end="61:19">fprintf</name><argument_list pos:start="61:20" pos:end="61:61">(<argument pos:start="61:21" pos:end="61:26"><expr pos:start="61:21" pos:end="61:26"><name pos:start="61:21" pos:end="61:26">stderr</name></expr></argument>, <argument pos:start="61:29" pos:end="61:60"><expr pos:start="61:29" pos:end="61:60"><literal type="string" pos:start="61:29" pos:end="61:60">"MMU data TLB miss in PALcode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:20"><expr pos:start="63:13" pos:end="63:19"><call pos:start="63:13" pos:end="63:19"><name pos:start="63:13" pos:end="63:16">exit</name><argument_list pos:start="63:17" pos:end="63:19">(<argument pos:start="63:18" pos:end="63:18"><expr pos:start="63:18" pos:end="63:18"><literal type="number" pos:start="63:18" pos:end="63:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:27">case <expr pos:start="67:14" pos:end="67:26"><name pos:start="67:14" pos:end="67:26">EXCP_ITB_MISS</name></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:58"><expr pos:start="69:13" pos:end="69:57"><call pos:start="69:13" pos:end="69:57"><name pos:start="69:13" pos:end="69:19">fprintf</name><argument_list pos:start="69:20" pos:end="69:57">(<argument pos:start="69:21" pos:end="69:26"><expr pos:start="69:21" pos:end="69:26"><name pos:start="69:21" pos:end="69:26">stderr</name></expr></argument>, <argument pos:start="69:29" pos:end="69:56"><expr pos:start="69:29" pos:end="69:56"><literal type="string" pos:start="69:29" pos:end="69:56">"MMU instruction TLB miss\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:20"><expr pos:start="71:13" pos:end="71:19"><call pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:16">exit</name><argument_list pos:start="71:17" pos:end="71:19">(<argument pos:start="71:18" pos:end="71:18"><expr pos:start="71:18" pos:end="71:18"><literal type="number" pos:start="71:18" pos:end="71:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        <case pos:start="75:9" pos:end="75:26">case <expr pos:start="75:14" pos:end="75:25"><name pos:start="75:14" pos:end="75:25">EXCP_ITB_ACV</name></expr>:</case>

            <expr_stmt pos:start="77:13" pos:end="77:66"><expr pos:start="77:13" pos:end="77:65"><call pos:start="77:13" pos:end="77:65"><name pos:start="77:13" pos:end="77:19">fprintf</name><argument_list pos:start="77:20" pos:end="77:65">(<argument pos:start="77:21" pos:end="77:26"><expr pos:start="77:21" pos:end="77:26"><name pos:start="77:21" pos:end="77:26">stderr</name></expr></argument>, <argument pos:start="77:29" pos:end="77:64"><expr pos:start="77:29" pos:end="77:64"><literal type="string" pos:start="77:29" pos:end="77:64">"MMU instruction access violation\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:20"><expr pos:start="79:13" pos:end="79:19"><call pos:start="79:13" pos:end="79:19"><name pos:start="79:13" pos:end="79:16">exit</name><argument_list pos:start="79:17" pos:end="79:19">(<argument pos:start="79:18" pos:end="79:18"><expr pos:start="79:18" pos:end="79:18"><literal type="number" pos:start="79:18" pos:end="79:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        <case pos:start="83:9" pos:end="83:34">case <expr pos:start="83:14" pos:end="83:33"><name pos:start="83:14" pos:end="83:33">EXCP_DTB_MISS_NATIVE</name></expr>:</case>

            <expr_stmt pos:start="85:13" pos:end="85:51"><expr pos:start="85:13" pos:end="85:50"><call pos:start="85:13" pos:end="85:50"><name pos:start="85:13" pos:end="85:19">fprintf</name><argument_list pos:start="85:20" pos:end="85:50">(<argument pos:start="85:21" pos:end="85:26"><expr pos:start="85:21" pos:end="85:26"><name pos:start="85:21" pos:end="85:26">stderr</name></expr></argument>, <argument pos:start="85:29" pos:end="85:49"><expr pos:start="85:29" pos:end="85:49"><literal type="string" pos:start="85:29" pos:end="85:49">"MMU data TLB miss\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:20"><expr pos:start="87:13" pos:end="87:19"><call pos:start="87:13" pos:end="87:19"><name pos:start="87:13" pos:end="87:16">exit</name><argument_list pos:start="87:17" pos:end="87:19">(<argument pos:start="87:18" pos:end="87:18"><expr pos:start="87:18" pos:end="87:18"><literal type="number" pos:start="87:18" pos:end="87:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="89:13" pos:end="89:18">break;</break>

        <case pos:start="91:9" pos:end="91:26">case <expr pos:start="91:14" pos:end="91:25"><name pos:start="91:14" pos:end="91:25">EXCP_UNALIGN</name></expr>:</case>

            <expr_stmt pos:start="93:13" pos:end="93:50"><expr pos:start="93:13" pos:end="93:49"><call pos:start="93:13" pos:end="93:49"><name pos:start="93:13" pos:end="93:19">fprintf</name><argument_list pos:start="93:20" pos:end="93:49">(<argument pos:start="93:21" pos:end="93:26"><expr pos:start="93:21" pos:end="93:26"><name pos:start="93:21" pos:end="93:26">stderr</name></expr></argument>, <argument pos:start="93:29" pos:end="93:48"><expr pos:start="93:29" pos:end="93:48"><literal type="string" pos:start="93:29" pos:end="93:48">"Unaligned access\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:20"><expr pos:start="95:13" pos:end="95:19"><call pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:16">exit</name><argument_list pos:start="95:17" pos:end="95:19">(<argument pos:start="95:18" pos:end="95:18"><expr pos:start="95:18" pos:end="95:18"><literal type="number" pos:start="95:18" pos:end="95:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        <case pos:start="99:9" pos:end="99:25">case <expr pos:start="99:14" pos:end="99:24"><name pos:start="99:14" pos:end="99:24">EXCP_OPCDEC</name></expr>:</case>

            <expr_stmt pos:start="101:13" pos:end="101:53"><expr pos:start="101:13" pos:end="101:52"><call pos:start="101:13" pos:end="101:52"><name pos:start="101:13" pos:end="101:19">fprintf</name><argument_list pos:start="101:20" pos:end="101:52">(<argument pos:start="101:21" pos:end="101:26"><expr pos:start="101:21" pos:end="101:26"><name pos:start="101:21" pos:end="101:26">stderr</name></expr></argument>, <argument pos:start="101:29" pos:end="101:51"><expr pos:start="101:29" pos:end="101:51"><literal type="string" pos:start="101:29" pos:end="101:51">"Invalid instruction\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:20"><expr pos:start="103:13" pos:end="103:19"><call pos:start="103:13" pos:end="103:19"><name pos:start="103:13" pos:end="103:16">exit</name><argument_list pos:start="103:17" pos:end="103:19">(<argument pos:start="103:18" pos:end="103:18"><expr pos:start="103:18" pos:end="103:18"><literal type="number" pos:start="103:18" pos:end="103:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="105:13" pos:end="105:18">break;</break>

        <case pos:start="107:9" pos:end="107:22">case <expr pos:start="107:14" pos:end="107:21"><name pos:start="107:14" pos:end="107:21">EXCP_FEN</name></expr>:</case>

            <expr_stmt pos:start="109:13" pos:end="109:60"><expr pos:start="109:13" pos:end="109:59"><call pos:start="109:13" pos:end="109:59"><name pos:start="109:13" pos:end="109:19">fprintf</name><argument_list pos:start="109:20" pos:end="109:59">(<argument pos:start="109:21" pos:end="109:26"><expr pos:start="109:21" pos:end="109:26"><name pos:start="109:21" pos:end="109:26">stderr</name></expr></argument>, <argument pos:start="109:29" pos:end="109:58"><expr pos:start="109:29" pos:end="109:58"><literal type="string" pos:start="109:29" pos:end="109:58">"Floating-point not allowed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:20"><expr pos:start="111:13" pos:end="111:19"><call pos:start="111:13" pos:end="111:19"><name pos:start="111:13" pos:end="111:16">exit</name><argument_list pos:start="111:17" pos:end="111:19">(<argument pos:start="111:18" pos:end="111:18"><expr pos:start="111:18" pos:end="111:18"><literal type="number" pos:start="111:18" pos:end="111:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="113:13" pos:end="113:18">break;</break>

        <case pos:start="115:9" pos:end="115:52">case <expr pos:start="115:14" pos:end="115:51"><name pos:start="115:14" pos:end="115:26">EXCP_CALL_PAL</name> <operator pos:start="115:28" pos:end="115:30">...</operator> <operator pos:start="115:32" pos:end="115:32">(</operator><name pos:start="115:33" pos:end="115:46">EXCP_CALL_PALP</name> <operator pos:start="115:48" pos:end="115:48">-</operator> <literal type="number" pos:start="115:50" pos:end="115:50">1</literal><operator pos:start="115:51" pos:end="115:51">)</operator></expr>:</case>

            <expr_stmt pos:start="117:13" pos:end="117:48"><expr pos:start="117:13" pos:end="117:47"><call pos:start="117:13" pos:end="117:47"><name pos:start="117:13" pos:end="117:20">call_pal</name><argument_list pos:start="117:21" pos:end="117:47">(<argument pos:start="117:22" pos:end="117:24"><expr pos:start="117:22" pos:end="117:24"><name pos:start="117:22" pos:end="117:24">env</name></expr></argument>, <argument pos:start="117:27" pos:end="117:46"><expr pos:start="117:27" pos:end="117:46"><operator pos:start="117:27" pos:end="117:27">(</operator><name pos:start="117:28" pos:end="117:33">trapnr</name> <operator pos:start="117:35" pos:end="117:36">&gt;&gt;</operator> <literal type="number" pos:start="117:38" pos:end="117:38">6</literal><operator pos:start="117:39" pos:end="117:39">)</operator> <operator pos:start="117:41" pos:end="117:41">|</operator> <literal type="number" pos:start="117:43" pos:end="117:46">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="119:13" pos:end="119:18">break;</break>

        <case pos:start="121:9" pos:end="121:53">case <expr pos:start="121:14" pos:end="121:52"><name pos:start="121:14" pos:end="121:27">EXCP_CALL_PALP</name> <operator pos:start="121:29" pos:end="121:31">...</operator> <operator pos:start="121:33" pos:end="121:33">(</operator><name pos:start="121:34" pos:end="121:47">EXCP_CALL_PALE</name> <operator pos:start="121:49" pos:end="121:49">-</operator> <literal type="number" pos:start="121:51" pos:end="121:51">1</literal><operator pos:start="121:52" pos:end="121:52">)</operator></expr>:</case>

            <expr_stmt pos:start="123:13" pos:end="123:60"><expr pos:start="123:13" pos:end="123:59"><call pos:start="123:13" pos:end="123:59"><name pos:start="123:13" pos:end="123:19">fprintf</name><argument_list pos:start="123:20" pos:end="123:59">(<argument pos:start="123:21" pos:end="123:26"><expr pos:start="123:21" pos:end="123:26"><name pos:start="123:21" pos:end="123:26">stderr</name></expr></argument>, <argument pos:start="123:29" pos:end="123:58"><expr pos:start="123:29" pos:end="123:58"><literal type="string" pos:start="123:29" pos:end="123:58">"Privileged call to PALcode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:20"><expr pos:start="125:13" pos:end="125:19"><call pos:start="125:13" pos:end="125:19"><name pos:start="125:13" pos:end="125:16">exit</name><argument_list pos:start="125:17" pos:end="125:19">(<argument pos:start="125:18" pos:end="125:18"><expr pos:start="125:18" pos:end="125:18"><literal type="number" pos:start="125:18" pos:end="125:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="127:13" pos:end="127:18">break;</break>

        <case pos:start="129:9" pos:end="129:24">case <expr pos:start="129:14" pos:end="129:23"><name pos:start="129:14" pos:end="129:23">EXCP_DEBUG</name></expr>:</case>

            <block pos:start="131:13" pos:end="153:13">{<block_content pos:start="133:17" pos:end="151:19">

                <decl_stmt pos:start="133:17" pos:end="133:24"><decl pos:start="133:17" pos:end="133:23"><type pos:start="133:17" pos:end="133:19"><name pos:start="133:17" pos:end="133:19">int</name></type> <name pos:start="133:21" pos:end="133:23">sig</name></decl>;</decl_stmt>



                <expr_stmt pos:start="137:17" pos:end="137:58"><expr pos:start="137:17" pos:end="137:57"><name pos:start="137:17" pos:end="137:19">sig</name> <operator pos:start="137:21" pos:end="137:21">=</operator> <call pos:start="137:23" pos:end="137:57"><name pos:start="137:23" pos:end="137:35">gdb_handlesig</name> <argument_list pos:start="137:37" pos:end="137:57">(<argument pos:start="137:38" pos:end="137:40"><expr pos:start="137:38" pos:end="137:40"><name pos:start="137:38" pos:end="137:40">env</name></expr></argument>, <argument pos:start="137:43" pos:end="137:56"><expr pos:start="137:43" pos:end="137:56"><name pos:start="137:43" pos:end="137:56">TARGET_SIGTRAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="139:17" pos:end="151:19"><if pos:start="139:17" pos:end="151:19">if <condition pos:start="139:20" pos:end="139:24">(<expr pos:start="139:21" pos:end="139:23"><name pos:start="139:21" pos:end="139:23">sig</name></expr>)</condition>

                  <block pos:start="141:19" pos:end="151:19">{<block_content pos:start="143:21" pos:end="149:60">

                    <expr_stmt pos:start="143:21" pos:end="143:40"><expr pos:start="143:21" pos:end="143:39"><name pos:start="143:21" pos:end="143:33"><name pos:start="143:21" pos:end="143:24">info</name><operator pos:start="143:25" pos:end="143:25">.</operator><name pos:start="143:26" pos:end="143:33">si_signo</name></name> <operator pos:start="143:35" pos:end="143:35">=</operator> <name pos:start="143:37" pos:end="143:39">sig</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="145:21" pos:end="145:38"><expr pos:start="145:21" pos:end="145:37"><name pos:start="145:21" pos:end="145:33"><name pos:start="145:21" pos:end="145:24">info</name><operator pos:start="145:25" pos:end="145:25">.</operator><name pos:start="145:26" pos:end="145:33">si_errno</name></name> <operator pos:start="145:35" pos:end="145:35">=</operator> <literal type="number" pos:start="145:37" pos:end="145:37">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="147:21" pos:end="147:53"><expr pos:start="147:21" pos:end="147:52"><name pos:start="147:21" pos:end="147:32"><name pos:start="147:21" pos:end="147:24">info</name><operator pos:start="147:25" pos:end="147:25">.</operator><name pos:start="147:26" pos:end="147:32">si_code</name></name> <operator pos:start="147:34" pos:end="147:34">=</operator> <name pos:start="147:36" pos:end="147:52">TARGET_TRAP_BRKPT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="149:21" pos:end="149:60"><expr pos:start="149:21" pos:end="149:59"><call pos:start="149:21" pos:end="149:59"><name pos:start="149:21" pos:end="149:32">queue_signal</name><argument_list pos:start="149:33" pos:end="149:59">(<argument pos:start="149:34" pos:end="149:36"><expr pos:start="149:34" pos:end="149:36"><name pos:start="149:34" pos:end="149:36">env</name></expr></argument>, <argument pos:start="149:39" pos:end="149:51"><expr pos:start="149:39" pos:end="149:51"><name pos:start="149:39" pos:end="149:51"><name pos:start="149:39" pos:end="149:42">info</name><operator pos:start="149:43" pos:end="149:43">.</operator><name pos:start="149:44" pos:end="149:51">si_signo</name></name></expr></argument>, <argument pos:start="149:54" pos:end="149:58"><expr pos:start="149:54" pos:end="149:58"><operator pos:start="149:54" pos:end="149:54">&amp;</operator><name pos:start="149:55" pos:end="149:58">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="155:13" pos:end="155:18">break;</break>

        <default pos:start="157:9" pos:end="157:16">default:</default>

            <expr_stmt pos:start="159:13" pos:end="159:54"><expr pos:start="159:13" pos:end="159:53"><call pos:start="159:13" pos:end="159:53"><name pos:start="159:13" pos:end="159:18">printf</name> <argument_list pos:start="159:20" pos:end="159:53">(<argument pos:start="159:21" pos:end="159:44"><expr pos:start="159:21" pos:end="159:44"><literal type="string" pos:start="159:21" pos:end="159:44">"Unhandled trap: 0x%x\n"</literal></expr></argument>, <argument pos:start="159:47" pos:end="159:52"><expr pos:start="159:47" pos:end="159:52"><name pos:start="159:47" pos:end="159:52">trapnr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:52"><expr pos:start="161:13" pos:end="161:51"><call pos:start="161:13" pos:end="161:51"><name pos:start="161:13" pos:end="161:26">cpu_dump_state</name><argument_list pos:start="161:27" pos:end="161:51">(<argument pos:start="161:28" pos:end="161:30"><expr pos:start="161:28" pos:end="161:30"><name pos:start="161:28" pos:end="161:30">env</name></expr></argument>, <argument pos:start="161:33" pos:end="161:38"><expr pos:start="161:33" pos:end="161:38"><name pos:start="161:33" pos:end="161:38">stderr</name></expr></argument>, <argument pos:start="161:41" pos:end="161:47"><expr pos:start="161:41" pos:end="161:47"><name pos:start="161:41" pos:end="161:47">fprintf</name></expr></argument>, <argument pos:start="161:50" pos:end="161:50"><expr pos:start="161:50" pos:end="161:50"><literal type="number" pos:start="161:50" pos:end="161:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:21"><expr pos:start="163:13" pos:end="163:20"><call pos:start="163:13" pos:end="163:20"><name pos:start="163:13" pos:end="163:16">exit</name> <argument_list pos:start="163:18" pos:end="163:20">(<argument pos:start="163:19" pos:end="163:19"><expr pos:start="163:19" pos:end="163:19"><literal type="number" pos:start="163:19" pos:end="163:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="167:9" pos:end="167:38"><expr pos:start="167:9" pos:end="167:37"><call pos:start="167:9" pos:end="167:37"><name pos:start="167:9" pos:end="167:31">process_pending_signals</name> <argument_list pos:start="167:33" pos:end="167:37">(<argument pos:start="167:34" pos:end="167:36"><expr pos:start="167:34" pos:end="167:36"><name pos:start="167:34" pos:end="167:36">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
