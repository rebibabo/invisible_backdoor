<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6089.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">rtc_post_load</name><parameter_list pos:start="1:25" pos:end="1:54">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:53"><decl pos:start="1:40" pos:end="1:53"><type pos:start="1:40" pos:end="1:53"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:53">version_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">RTCState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name> <init pos:start="5:17" pos:end="5:24">= <expr pos:start="5:19" pos:end="5:24"><name pos:start="5:19" pos:end="5:24">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="17:5">if <condition pos:start="9:8" pos:end="9:60">(<expr pos:start="9:9" pos:end="9:59"><name pos:start="9:9" pos:end="9:18">version_id</name> <operator pos:start="9:20" pos:end="9:21">&lt;=</operator> <literal type="number" pos:start="9:23" pos:end="9:23">2</literal> <operator pos:start="9:25" pos:end="9:26">||</operator> <name pos:start="9:28" pos:end="9:36">rtc_clock</name> <operator pos:start="9:38" pos:end="9:39">==</operator> <name pos:start="9:41" pos:end="9:59">QEMU_CLOCK_REALTIME</name></expr>)</condition> <block pos:start="9:62" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:30">

        <expr_stmt pos:start="11:9" pos:end="11:24"><expr pos:start="11:9" pos:end="11:23"><call pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:20">rtc_set_time</name><argument_list pos:start="11:21" pos:end="11:23">(<argument pos:start="11:22" pos:end="11:22"><expr pos:start="11:22" pos:end="11:22"><name pos:start="11:22" pos:end="11:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:22"><expr pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:17">offset</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:30"><expr pos:start="15:9" pos:end="15:29"><call pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:26">check_update_timer</name><argument_list pos:start="15:27" pos:end="15:29">(<argument pos:start="15:28" pos:end="15:28"><expr pos:start="15:28" pos:end="15:28"><name pos:start="15:28" pos:end="15:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:48"><decl pos:start="21:5" pos:end="21:47"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint64_t</name></type> <name pos:start="21:14" pos:end="21:16">now</name> <init pos:start="21:18" pos:end="21:47">= <expr pos:start="21:20" pos:end="21:47"><call pos:start="21:20" pos:end="21:47"><name pos:start="21:20" pos:end="21:36">qemu_clock_get_ns</name><argument_list pos:start="21:37" pos:end="21:47">(<argument pos:start="21:38" pos:end="21:46"><expr pos:start="21:38" pos:end="21:46"><name pos:start="21:38" pos:end="21:46">rtc_clock</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="23:5" pos:end="34:0"><if pos:start="23:5" pos:end="34:0">if <condition pos:start="23:8" pos:end="25:61">(<expr pos:start="23:9" pos:end="25:60"><call pos:start="23:9" pos:end="25:60"><name pos:start="23:9" pos:end="25:13"><name pos:start="23:9" pos:end="23:11">now</name> <argument_list type="generic" pos:start="23:13" pos:end="25:13">&lt; <argument pos:start="23:15" pos:end="25:11"><expr pos:start="23:15" pos:end="25:11"><name pos:start="23:15" pos:end="23:35"><name pos:start="23:15" pos:end="23:15">s</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:35">next_periodic_time</name></name> <operator pos:start="23:37" pos:end="23:38">||</operator>

        <name pos:start="25:9" pos:end="25:11">now</name></expr></argument> &gt;</argument_list></name> <argument_list pos:start="25:15" pos:end="25:60">(<argument pos:start="25:16" pos:end="25:59"><expr pos:start="25:16" pos:end="25:59"><name pos:start="25:16" pos:end="25:36"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:36">next_periodic_time</name></name> <operator pos:start="25:38" pos:end="25:38">+</operator> <call pos:start="25:40" pos:end="25:59"><name pos:start="25:40" pos:end="25:57">get_max_clock_jump</name><argument_list pos:start="25:58" pos:end="25:59">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:63" pos:end="34:0">{<block_content pos:start="27:9" pos:end="27:63">

        <expr_stmt pos:start="27:9" pos:end="27:63"><expr pos:start="27:9" pos:end="27:62"><call pos:start="27:9" pos:end="27:62"><name pos:start="27:9" pos:end="27:29">periodic_timer_update</name><argument_list pos:start="27:30" pos:end="27:62">(<argument pos:start="27:31" pos:end="27:31"><expr pos:start="27:31" pos:end="27:31"><name pos:start="27:31" pos:end="27:31">s</name></expr></argument>, <argument pos:start="27:34" pos:end="27:61"><expr pos:start="27:34" pos:end="27:61"><call pos:start="27:34" pos:end="27:61"><name pos:start="27:34" pos:end="27:50">qemu_clock_get_ns</name><argument_list pos:start="27:51" pos:end="27:61">(<argument pos:start="27:52" pos:end="27:60"><expr pos:start="27:52" pos:end="27:60"><name pos:start="27:52" pos:end="27:60">rtc_clock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="33:1" pos:end="33:18">#<cpp:directive pos:start="33:2" pos:end="33:6">ifdef</cpp:directive> <name pos:start="33:8" pos:end="33:18">TARGET_I386</name></cpp:ifdef>

    <if_stmt pos:start="35:5" pos:end="46:0"><if pos:start="35:5" pos:end="46:0">if <condition pos:start="35:8" pos:end="35:24">(<expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:18">version_id</name> <operator pos:start="35:20" pos:end="35:21">&gt;=</operator> <literal type="number" pos:start="35:23" pos:end="35:23">2</literal></expr>)</condition> <block pos:start="35:26" pos:end="46:0">{<block_content pos:start="37:9" pos:end="41:9">

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:57">(<expr pos:start="37:13" pos:end="37:56"><name pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:31">lost_tick_policy</name></name> <operator pos:start="37:33" pos:end="37:34">==</operator> <name pos:start="37:36" pos:end="37:56">LOST_TICK_POLICY_SLEW</name></expr>)</condition> <block pos:start="37:59" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:42">

            <expr_stmt pos:start="39:13" pos:end="39:42"><expr pos:start="39:13" pos:end="39:41"><call pos:start="39:13" pos:end="39:41"><name pos:start="39:13" pos:end="39:38">rtc_coalesced_timer_update</name><argument_list pos:start="39:39" pos:end="39:41">(<argument pos:start="39:40" pos:end="39:40"><expr pos:start="39:40" pos:end="39:40"><name pos:start="39:40" pos:end="39:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
