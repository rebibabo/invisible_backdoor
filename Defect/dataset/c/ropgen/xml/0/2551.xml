<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2551.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:70"><name pos:start="1:1" pos:end="1:20">pvscsi_ring_init_msg</name><argument_list pos:start="1:21" pos:end="1:70">(<argument pos:start="1:22" pos:end="1:38">PVSCSIRingInfo *m</argument>, <argument pos:start="1:41" pos:end="1:69">PVSCSICmdDescSetupMsgRing *ri</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:21">len_log2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:22">ring_size</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:59">(<expr pos:start="13:9" pos:end="13:58"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:10">ri</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:20">numPages</name></name> <operator pos:start="13:22" pos:end="13:22">&gt;</operator> <name pos:start="13:24" pos:end="13:58">PVSCSI_SETUP_MSG_RING_MAX_NUM_PAGES</name></expr>)</condition> <block pos:start="13:61" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:18">

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:67"><expr pos:start="19:5" pos:end="19:66"><name pos:start="19:5" pos:end="19:13">ring_size</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:28"><name pos:start="19:17" pos:end="19:18">ri</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:28">numPages</name></name> <operator pos:start="19:30" pos:end="19:30">*</operator> <name pos:start="19:32" pos:end="19:66">PVSCSI_MAX_NUM_MSG_ENTRIES_PER_PAGE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:12">len_log2</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:41"><name pos:start="21:16" pos:end="21:26">pvscsi_log2</name><argument_list pos:start="21:27" pos:end="21:41">(<argument pos:start="21:28" pos:end="21:40"><expr pos:start="21:28" pos:end="21:40"><name pos:start="21:28" pos:end="21:36">ring_size</name> <operator pos:start="21:38" pos:end="21:38">-</operator> <literal type="number" pos:start="21:40" pos:end="21:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:5">m</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:19">msg_len_mask</name></name> <operator pos:start="25:21" pos:end="25:21">=</operator> <call pos:start="25:23" pos:end="25:36"><name pos:start="25:23" pos:end="25:26">MASK</name><argument_list pos:start="25:27" pos:end="25:36">(<argument pos:start="25:28" pos:end="25:35"><expr pos:start="25:28" pos:end="25:35"><name pos:start="25:28" pos:end="25:35">len_log2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:5">m</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:21">filled_msg_ptr</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <literal type="number" pos:start="29:25" pos:end="29:25">0</literal></expr>;</expr_stmt>



    <for pos:start="33:5" pos:end="37:5">for <control pos:start="33:9" pos:end="33:38">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:33"><expr pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:32"><name pos:start="33:21" pos:end="33:22">ri</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:32">numPages</name></name></expr>;</condition> <incr pos:start="33:35" pos:end="33:37"><expr pos:start="33:35" pos:end="33:37"><name pos:start="33:35" pos:end="33:35">i</name><operator pos:start="33:36" pos:end="33:37">++</operator></expr></incr>)</control> <block pos:start="33:40" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:68">

        <expr_stmt pos:start="35:9" pos:end="35:68"><expr pos:start="35:9" pos:end="35:67"><name pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:9">m</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:28">msg_ring_pages_pa</name><index pos:start="35:29" pos:end="35:31">[<expr pos:start="35:30" pos:end="35:30"><name pos:start="35:30" pos:end="35:30">i</name></expr>]</index></name> <operator pos:start="35:33" pos:end="35:33">=</operator> <name pos:start="35:35" pos:end="35:49"><name pos:start="35:35" pos:end="35:36">ri</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:46">ringPPNs</name><index pos:start="35:47" pos:end="35:49">[<expr pos:start="35:48" pos:end="35:48"><name pos:start="35:48" pos:end="35:48">i</name></expr>]</index></name> <operator pos:start="35:51" pos:end="35:52">&lt;&lt;</operator> <name pos:start="35:54" pos:end="35:67">VMW_PAGE_SHIFT</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><call pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:16">RS_SET_FIELD</name><argument_list pos:start="41:17" pos:end="41:34">(<argument pos:start="41:18" pos:end="41:18"><expr pos:start="41:18" pos:end="41:18"><name pos:start="41:18" pos:end="41:18">m</name></expr></argument>, <argument pos:start="41:21" pos:end="41:30"><expr pos:start="41:21" pos:end="41:30"><name pos:start="41:21" pos:end="41:30">msgProdIdx</name></expr></argument>, <argument pos:start="41:33" pos:end="41:33"><expr pos:start="41:33" pos:end="41:33"><literal type="number" pos:start="41:33" pos:end="41:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:35"><expr pos:start="43:5" pos:end="43:34"><call pos:start="43:5" pos:end="43:34"><name pos:start="43:5" pos:end="43:16">RS_SET_FIELD</name><argument_list pos:start="43:17" pos:end="43:34">(<argument pos:start="43:18" pos:end="43:18"><expr pos:start="43:18" pos:end="43:18"><name pos:start="43:18" pos:end="43:18">m</name></expr></argument>, <argument pos:start="43:21" pos:end="43:30"><expr pos:start="43:21" pos:end="43:30"><name pos:start="43:21" pos:end="43:30">msgConsIdx</name></expr></argument>, <argument pos:start="43:33" pos:end="43:33"><expr pos:start="43:33" pos:end="43:33"><literal type="number" pos:start="43:33" pos:end="43:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:49"><expr pos:start="45:5" pos:end="45:48"><call pos:start="45:5" pos:end="45:48"><name pos:start="45:5" pos:end="45:16">RS_SET_FIELD</name><argument_list pos:start="45:17" pos:end="45:48">(<argument pos:start="45:18" pos:end="45:18"><expr pos:start="45:18" pos:end="45:18"><name pos:start="45:18" pos:end="45:18">m</name></expr></argument>, <argument pos:start="45:21" pos:end="45:37"><expr pos:start="45:21" pos:end="45:37"><name pos:start="45:21" pos:end="45:37">msgNumEntriesLog2</name></expr></argument>, <argument pos:start="45:40" pos:end="45:47"><expr pos:start="45:40" pos:end="45:47"><name pos:start="45:40" pos:end="45:47">len_log2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:41"><expr pos:start="49:5" pos:end="49:40"><call pos:start="49:5" pos:end="49:40"><name pos:start="49:5" pos:end="49:30">trace_pvscsi_ring_init_msg</name><argument_list pos:start="49:31" pos:end="49:40">(<argument pos:start="49:32" pos:end="49:39"><expr pos:start="49:32" pos:end="49:39"><name pos:start="49:32" pos:end="49:39">len_log2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:39">/* Flush ring state page changes */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:14"><expr pos:start="55:5" pos:end="55:13"><call pos:start="55:5" pos:end="55:13"><name pos:start="55:5" pos:end="55:11">smp_wmb</name><argument_list pos:start="55:12" pos:end="55:13">()</argument_list></call></expr>;</expr_stmt>



    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block>
</unit>
