<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1446.c" pos:tabs="8"><function pos:start="1:1" pos:end="161:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">mkv_write_packet_internal</name><parameter_list pos:start="1:37" pos:end="1:84">(<parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><name pos:start="1:38" pos:end="1:52">AVFormatContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:70"><decl pos:start="1:58" pos:end="1:70"><type pos:start="1:58" pos:end="1:70"><name pos:start="1:58" pos:end="1:65">AVPacket</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">pkt</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:83"><decl pos:start="1:73" pos:end="1:83"><type pos:start="1:73" pos:end="1:83"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:83">add_cue</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="161:1">{<block_content pos:start="5:5" pos:end="159:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">MatroskaMuxContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">mkv</name> <init pos:start="5:29" pos:end="5:42">= <expr pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:42"><name pos:start="5:31" pos:end="5:31">s</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name>         <init pos:start="7:29" pos:end="7:35">= <expr pos:start="7:31" pos:end="7:35"><name pos:start="7:31" pos:end="7:35"><name pos:start="7:31" pos:end="7:31">s</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:35">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:70"><decl pos:start="9:5" pos:end="9:69"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AVCodecParameters</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:26">par</name>  <init pos:start="9:29" pos:end="9:69">= <expr pos:start="9:31" pos:end="9:69"><name pos:start="9:31" pos:end="9:59"><name pos:start="9:31" pos:end="9:31">s</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:40">streams</name><index pos:start="9:41" pos:end="9:59">[<expr pos:start="9:42" pos:end="9:58"><name pos:start="9:42" pos:end="9:58"><name pos:start="9:42" pos:end="9:44">pkt</name><operator pos:start="9:45" pos:end="9:46">-&gt;</operator><name pos:start="9:47" pos:end="9:58">stream_index</name></name></expr>]</index></name><operator pos:start="9:60" pos:end="9:61">-&gt;</operator><name pos:start="9:62" pos:end="9:69">codecpar</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:63"><decl pos:start="11:5" pos:end="11:62"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">keyframe</name>            <init pos:start="11:29" pos:end="11:62">= <expr pos:start="11:31" pos:end="11:62"><operator pos:start="11:31" pos:end="11:31">!</operator><operator pos:start="11:32" pos:end="11:32">!</operator><operator pos:start="11:33" pos:end="11:33">(</operator><name pos:start="11:34" pos:end="11:43"><name pos:start="11:34" pos:end="11:36">pkt</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:43">flags</name></name> <operator pos:start="11:45" pos:end="11:45">&amp;</operator> <name pos:start="11:47" pos:end="11:61">AV_PKT_FLAG_KEY</name><operator pos:start="11:62" pos:end="11:62">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">duration</name>            <init pos:start="13:29" pos:end="13:43">= <expr pos:start="13:31" pos:end="13:43"><name pos:start="13:31" pos:end="13:43"><name pos:start="13:31" pos:end="13:33">pkt</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:43">duration</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:80"><decl pos:start="17:5" pos:end="17:79"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:14">ts</name> <init pos:start="17:16" pos:end="17:79">= <expr pos:start="17:18" pos:end="17:79"><ternary pos:start="17:18" pos:end="17:79"><condition pos:start="17:18" pos:end="17:59"><expr pos:start="17:18" pos:end="17:57"><name pos:start="17:18" pos:end="17:47"><name pos:start="17:18" pos:end="17:20">mkv</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:28">tracks</name><index pos:start="17:29" pos:end="17:47">[<expr pos:start="17:30" pos:end="17:46"><name pos:start="17:30" pos:end="17:46"><name pos:start="17:30" pos:end="17:32">pkt</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:46">stream_index</name></name></expr>]</index></name><operator pos:start="17:48" pos:end="17:48">.</operator><name pos:start="17:49" pos:end="17:57">write_dts</name></expr> ?</condition><then pos:start="17:61" pos:end="17:68"> <expr pos:start="17:61" pos:end="17:68"><name pos:start="17:61" pos:end="17:68"><name pos:start="17:61" pos:end="17:63">pkt</name><operator pos:start="17:64" pos:end="17:65">-&gt;</operator><name pos:start="17:66" pos:end="17:68">dts</name></name></expr> </then><else pos:start="17:70" pos:end="17:79">: <expr pos:start="17:72" pos:end="17:79"><name pos:start="17:72" pos:end="17:79"><name pos:start="17:72" pos:end="17:74">pkt</name><operator pos:start="17:75" pos:end="17:76">-&gt;</operator><name pos:start="17:77" pos:end="17:79">pts</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:32"><decl pos:start="19:5" pos:end="19:31"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int64_t</name></type> <name pos:start="19:13" pos:end="19:31">relative_packet_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:86"><decl pos:start="21:5" pos:end="21:85"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:21">dash_tracknum</name> <init pos:start="21:23" pos:end="21:85">= <expr pos:start="21:25" pos:end="21:85"><ternary pos:start="21:25" pos:end="21:85"><condition pos:start="21:25" pos:end="21:38"><expr pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:27">mkv</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:36">is_dash</name></name></expr> ?</condition><then pos:start="21:40" pos:end="21:61"> <expr pos:start="21:40" pos:end="21:61"><name pos:start="21:40" pos:end="21:61"><name pos:start="21:40" pos:end="21:42">mkv</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:61">dash_track_number</name></name></expr> </then><else pos:start="21:63" pos:end="21:85">: <expr pos:start="21:65" pos:end="21:85"><name pos:start="21:65" pos:end="21:81"><name pos:start="21:65" pos:end="21:67">pkt</name><operator pos:start="21:68" pos:end="21:69">-&gt;</operator><name pos:start="21:70" pos:end="21:81">stream_index</name></name> <operator pos:start="21:83" pos:end="21:83">+</operator> <literal type="number" pos:start="21:85" pos:end="21:85">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:29">(<expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:10">ts</name> <operator pos:start="25:12" pos:end="25:13">==</operator> <name pos:start="25:15" pos:end="25:28">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="25:31" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:31">

        <expr_stmt pos:start="27:9" pos:end="27:79"><expr pos:start="27:9" pos:end="27:78"><call pos:start="27:9" pos:end="27:78"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:78">(<argument pos:start="27:16" pos:end="27:16"><expr pos:start="27:16" pos:end="27:16"><name pos:start="27:16" pos:end="27:16">s</name></expr></argument>, <argument pos:start="27:19" pos:end="27:30"><expr pos:start="27:19" pos:end="27:30"><name pos:start="27:19" pos:end="27:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:33" pos:end="27:77"><expr pos:start="27:33" pos:end="27:77"><literal type="string" pos:start="27:33" pos:end="27:77">"Can't write packet with unknown timestamp\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:51"><expr pos:start="33:5" pos:end="33:50"><name pos:start="33:5" pos:end="33:6">ts</name> <operator pos:start="33:8" pos:end="33:9">+=</operator> <name pos:start="33:11" pos:end="33:40"><name pos:start="33:11" pos:end="33:13">mkv</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:21">tracks</name><index pos:start="33:22" pos:end="33:40">[<expr pos:start="33:23" pos:end="33:39"><name pos:start="33:23" pos:end="33:39"><name pos:start="33:23" pos:end="33:25">pkt</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:39">stream_index</name></name></expr>]</index></name><operator pos:start="33:41" pos:end="33:41">.</operator><name pos:start="33:42" pos:end="33:50">ts_offset</name></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="49:5"><if pos:start="37:5" pos:end="49:5">if <condition pos:start="37:8" pos:end="37:31">(<expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:11">mkv</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:24">cluster_pos</name></name> <operator pos:start="37:26" pos:end="37:27">!=</operator> <operator pos:start="37:29" pos:end="37:29">-</operator><literal type="number" pos:start="37:30" pos:end="37:30">1</literal></expr>)</condition> <block pos:start="37:33" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:9">

        <decl_stmt pos:start="39:9" pos:end="39:96"><decl pos:start="39:9" pos:end="39:95"><type pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:15">int64_t</name></type> <name pos:start="39:17" pos:end="39:28">cluster_time</name> <init pos:start="39:30" pos:end="39:95">= <expr pos:start="39:32" pos:end="39:95"><name pos:start="39:32" pos:end="39:33">ts</name> <operator pos:start="39:35" pos:end="39:35">-</operator> <name pos:start="39:37" pos:end="39:52"><name pos:start="39:37" pos:end="39:39">mkv</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:52">cluster_pts</name></name> <operator pos:start="39:54" pos:end="39:54">+</operator> <name pos:start="39:56" pos:end="39:85"><name pos:start="39:56" pos:end="39:58">mkv</name><operator pos:start="39:59" pos:end="39:60">-&gt;</operator><name pos:start="39:61" pos:end="39:66">tracks</name><index pos:start="39:67" pos:end="39:85">[<expr pos:start="39:68" pos:end="39:84"><name pos:start="39:68" pos:end="39:84"><name pos:start="39:68" pos:end="39:70">pkt</name><operator pos:start="39:71" pos:end="39:72">-&gt;</operator><name pos:start="39:73" pos:end="39:84">stream_index</name></name></expr>]</index></name><operator pos:start="39:86" pos:end="39:86">.</operator><name pos:start="39:87" pos:end="39:95">ts_offset</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:50">(<expr pos:start="41:13" pos:end="41:49"><operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:20">int16_t</name><operator pos:start="41:21" pos:end="41:21">)</operator><name pos:start="41:22" pos:end="41:33">cluster_time</name> <operator pos:start="41:35" pos:end="41:36">!=</operator> <name pos:start="41:38" pos:end="41:49">cluster_time</name></expr>)</condition> <block pos:start="41:52" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:42">

            <expr_stmt pos:start="43:13" pos:end="43:81"><expr pos:start="43:13" pos:end="43:80"><call pos:start="43:13" pos:end="43:80"><name pos:start="43:13" pos:end="43:18">av_log</name><argument_list pos:start="43:19" pos:end="43:80">(<argument pos:start="43:20" pos:end="43:20"><expr pos:start="43:20" pos:end="43:20"><name pos:start="43:20" pos:end="43:20">s</name></expr></argument>, <argument pos:start="43:23" pos:end="43:36"><expr pos:start="43:23" pos:end="43:36"><name pos:start="43:23" pos:end="43:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="43:39" pos:end="43:79"><expr pos:start="43:39" pos:end="43:79"><literal type="string" pos:start="43:39" pos:end="43:79">"Starting new cluster due to timestamp\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:42"><expr pos:start="45:13" pos:end="45:41"><call pos:start="45:13" pos:end="45:41"><name pos:start="45:13" pos:end="45:33">mkv_start_new_cluster</name><argument_list pos:start="45:34" pos:end="45:41">(<argument pos:start="45:35" pos:end="45:35"><expr pos:start="45:35" pos:end="45:35"><name pos:start="45:35" pos:end="45:35">s</name></expr></argument>, <argument pos:start="45:38" pos:end="45:40"><expr pos:start="45:38" pos:end="45:40"><name pos:start="45:38" pos:end="45:40">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="67:5"><if pos:start="53:5" pos:end="67:5">if <condition pos:start="53:8" pos:end="53:31">(<expr pos:start="53:9" pos:end="53:30"><name pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:11">mkv</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:24">cluster_pos</name></name> <operator pos:start="53:26" pos:end="53:27">==</operator> <operator pos:start="53:29" pos:end="53:29">-</operator><literal type="number" pos:start="53:30" pos:end="53:30">1</literal></expr>)</condition> <block pos:start="53:33" pos:end="67:5">{<block_content pos:start="55:9" pos:end="65:40">

        <expr_stmt pos:start="55:9" pos:end="55:44"><expr pos:start="55:9" pos:end="55:43"><name pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:11">mkv</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:24">cluster_pos</name></name> <operator pos:start="55:26" pos:end="55:26">=</operator> <call pos:start="55:28" pos:end="55:43"><name pos:start="55:28" pos:end="55:36">avio_tell</name><argument_list pos:start="55:37" pos:end="55:43">(<argument pos:start="55:38" pos:end="55:42"><expr pos:start="55:38" pos:end="55:42"><name pos:start="55:38" pos:end="55:42"><name pos:start="55:38" pos:end="55:38">s</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:42">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:98"><expr pos:start="57:9" pos:end="57:97"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:97"><name pos:start="57:15" pos:end="57:37">start_ebml_master_crc32</name><argument_list pos:start="57:38" pos:end="57:97">(<argument pos:start="57:39" pos:end="57:43"><expr pos:start="57:39" pos:end="57:43"><name pos:start="57:39" pos:end="57:43"><name pos:start="57:39" pos:end="57:39">s</name><operator pos:start="57:40" pos:end="57:41">-&gt;</operator><name pos:start="57:42" pos:end="57:43">pb</name></name></expr></argument>, <argument pos:start="57:46" pos:end="57:57"><expr pos:start="57:46" pos:end="57:57"><operator pos:start="57:46" pos:end="57:46">&amp;</operator><name pos:start="57:47" pos:end="57:57"><name pos:start="57:47" pos:end="57:49">mkv</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:57">dyn_bc</name></name></expr></argument>, <argument pos:start="57:60" pos:end="57:72"><expr pos:start="57:60" pos:end="57:72"><operator pos:start="57:60" pos:end="57:60">&amp;</operator><name pos:start="57:61" pos:end="57:72"><name pos:start="57:61" pos:end="57:63">mkv</name><operator pos:start="57:64" pos:end="57:65">-&gt;</operator><name pos:start="57:66" pos:end="57:72">cluster</name></name></expr></argument>, <argument pos:start="57:75" pos:end="57:93"><expr pos:start="57:75" pos:end="57:93"><name pos:start="57:75" pos:end="57:93">MATROSKA_ID_CLUSTER</name></expr></argument>, <argument pos:start="57:96" pos:end="57:96"><expr pos:start="57:96" pos:end="57:96"><literal type="number" pos:start="57:96" pos:end="57:96">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:23"><if pos:start="59:9" pos:end="61:23">if <condition pos:start="59:12" pos:end="59:20">(<expr pos:start="59:13" pos:end="59:19"><name pos:start="59:13" pos:end="59:15">ret</name> <operator pos:start="59:17" pos:end="59:17">&lt;</operator> <literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:23"><block_content pos:start="61:13" pos:end="61:23">

            <return pos:start="61:13" pos:end="61:23">return <expr pos:start="61:20" pos:end="61:22"><name pos:start="61:20" pos:end="61:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:78"><expr pos:start="63:9" pos:end="63:77"><call pos:start="63:9" pos:end="63:77"><name pos:start="63:9" pos:end="63:21">put_ebml_uint</name><argument_list pos:start="63:22" pos:end="63:77">(<argument pos:start="63:23" pos:end="63:33"><expr pos:start="63:23" pos:end="63:33"><name pos:start="63:23" pos:end="63:33"><name pos:start="63:23" pos:end="63:25">mkv</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:33">dyn_bc</name></name></expr></argument>, <argument pos:start="63:36" pos:end="63:62"><expr pos:start="63:36" pos:end="63:62"><name pos:start="63:36" pos:end="63:62">MATROSKA_ID_CLUSTERTIMECODE</name></expr></argument>, <argument pos:start="63:65" pos:end="63:76"><expr pos:start="63:65" pos:end="63:76"><call pos:start="63:65" pos:end="63:76"><name pos:start="63:65" pos:end="63:69">FFMAX</name><argument_list pos:start="63:70" pos:end="63:76">(<argument pos:start="63:71" pos:end="63:71"><expr pos:start="63:71" pos:end="63:71"><literal type="number" pos:start="63:71" pos:end="63:71">0</literal></expr></argument>, <argument pos:start="63:74" pos:end="63:75"><expr pos:start="63:74" pos:end="63:75"><name pos:start="63:74" pos:end="63:75">ts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:40"><expr pos:start="65:9" pos:end="65:39"><name pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:11">mkv</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:24">cluster_pts</name></name> <operator pos:start="65:26" pos:end="65:26">=</operator> <call pos:start="65:28" pos:end="65:39"><name pos:start="65:28" pos:end="65:32">FFMAX</name><argument_list pos:start="65:33" pos:end="65:39">(<argument pos:start="65:34" pos:end="65:34"><expr pos:start="65:34" pos:end="65:34"><literal type="number" pos:start="65:34" pos:end="65:34">0</literal></expr></argument>, <argument pos:start="65:37" pos:end="65:38"><expr pos:start="65:37" pos:end="65:38"><name pos:start="65:37" pos:end="65:38">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:21"><expr pos:start="69:5" pos:end="69:20"><name pos:start="69:5" pos:end="69:6">pb</name> <operator pos:start="69:8" pos:end="69:8">=</operator> <name pos:start="69:10" pos:end="69:20"><name pos:start="69:10" pos:end="69:12">mkv</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:20">dyn_bc</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:78"><expr pos:start="73:5" pos:end="73:77"><name pos:start="73:5" pos:end="73:23">relative_packet_pos</name> <operator pos:start="73:25" pos:end="73:25">=</operator> <call pos:start="73:27" pos:end="73:42"><name pos:start="73:27" pos:end="73:35">avio_tell</name><argument_list pos:start="73:36" pos:end="73:42">(<argument pos:start="73:37" pos:end="73:41"><expr pos:start="73:37" pos:end="73:41"><name pos:start="73:37" pos:end="73:41"><name pos:start="73:37" pos:end="73:37">s</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:41">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="73:44" pos:end="73:44">-</operator> <name pos:start="73:46" pos:end="73:61"><name pos:start="73:46" pos:end="73:48">mkv</name><operator pos:start="73:49" pos:end="73:50">-&gt;</operator><name pos:start="73:51" pos:end="73:57">cluster</name><operator pos:start="73:58" pos:end="73:58">.</operator><name pos:start="73:59" pos:end="73:61">pos</name></name> <operator pos:start="73:63" pos:end="73:63">+</operator> <call pos:start="73:65" pos:end="73:77"><name pos:start="73:65" pos:end="73:73">avio_tell</name><argument_list pos:start="73:74" pos:end="73:77">(<argument pos:start="73:75" pos:end="73:76"><expr pos:start="73:75" pos:end="73:76"><name pos:start="73:75" pos:end="73:76">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="77:5" pos:end="143:5"><if pos:start="77:5" pos:end="89:5">if <condition pos:start="77:8" pos:end="77:49">(<expr pos:start="77:9" pos:end="77:48"><name pos:start="77:9" pos:end="77:23"><name pos:start="77:9" pos:end="77:11">par</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:23">codec_type</name></name> <operator pos:start="77:25" pos:end="77:26">!=</operator> <name pos:start="77:28" pos:end="77:48">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="77:51" pos:end="89:5">{<block_content pos:start="79:9" pos:end="87:9">

        <expr_stmt pos:start="79:9" pos:end="79:71"><expr pos:start="79:9" pos:end="79:70"><call pos:start="79:9" pos:end="79:70"><name pos:start="79:9" pos:end="79:23">mkv_write_block</name><argument_list pos:start="79:24" pos:end="79:70">(<argument pos:start="79:25" pos:end="79:25"><expr pos:start="79:25" pos:end="79:25"><name pos:start="79:25" pos:end="79:25">s</name></expr></argument>, <argument pos:start="79:28" pos:end="79:29"><expr pos:start="79:28" pos:end="79:29"><name pos:start="79:28" pos:end="79:29">pb</name></expr></argument>, <argument pos:start="79:32" pos:end="79:54"><expr pos:start="79:32" pos:end="79:54"><name pos:start="79:32" pos:end="79:54">MATROSKA_ID_SIMPLEBLOCK</name></expr></argument>, <argument pos:start="79:57" pos:end="79:59"><expr pos:start="79:57" pos:end="79:59"><name pos:start="79:57" pos:end="79:59">pkt</name></expr></argument>, <argument pos:start="79:62" pos:end="79:69"><expr pos:start="79:62" pos:end="79:69"><name pos:start="79:62" pos:end="79:69">keyframe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:94">(<expr pos:start="81:13" pos:end="81:93"><name pos:start="81:13" pos:end="81:27"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:17">pb</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:27">seekable</name></name> <operator pos:start="81:29" pos:end="81:30">&amp;&amp;</operator> <operator pos:start="81:32" pos:end="81:32">(</operator><name pos:start="81:33" pos:end="81:47"><name pos:start="81:33" pos:end="81:35">par</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:47">codec_type</name></name> <operator pos:start="81:49" pos:end="81:50">==</operator> <name pos:start="81:52" pos:end="81:69">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="81:71" pos:end="81:72">&amp;&amp;</operator> <name pos:start="81:74" pos:end="81:81">keyframe</name> <operator pos:start="81:83" pos:end="81:84">||</operator> <name pos:start="81:86" pos:end="81:92">add_cue</name><operator pos:start="81:93" pos:end="81:93">)</operator></expr>)</condition> <block pos:start="81:96" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:36">

            <expr_stmt pos:start="83:13" pos:end="83:127"><expr pos:start="83:13" pos:end="83:126"><name pos:start="83:13" pos:end="83:15">ret</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <call pos:start="83:19" pos:end="83:126"><name pos:start="83:19" pos:end="83:34">mkv_add_cuepoint</name><argument_list pos:start="83:35" pos:end="83:126">(<argument pos:start="83:36" pos:end="83:44"><expr pos:start="83:36" pos:end="83:44"><name pos:start="83:36" pos:end="83:44"><name pos:start="83:36" pos:end="83:38">mkv</name><operator pos:start="83:39" pos:end="83:40">-&gt;</operator><name pos:start="83:41" pos:end="83:44">cues</name></name></expr></argument>, <argument pos:start="83:47" pos:end="83:63"><expr pos:start="83:47" pos:end="83:63"><name pos:start="83:47" pos:end="83:63"><name pos:start="83:47" pos:end="83:49">pkt</name><operator pos:start="83:50" pos:end="83:51">-&gt;</operator><name pos:start="83:52" pos:end="83:63">stream_index</name></name></expr></argument>, <argument pos:start="83:66" pos:end="83:78"><expr pos:start="83:66" pos:end="83:78"><name pos:start="83:66" pos:end="83:78">dash_tracknum</name></expr></argument>, <argument pos:start="83:81" pos:end="83:82"><expr pos:start="83:81" pos:end="83:82"><name pos:start="83:81" pos:end="83:82">ts</name></expr></argument>, <argument pos:start="83:85" pos:end="83:100"><expr pos:start="83:85" pos:end="83:100"><name pos:start="83:85" pos:end="83:100"><name pos:start="83:85" pos:end="83:87">mkv</name><operator pos:start="83:88" pos:end="83:89">-&gt;</operator><name pos:start="83:90" pos:end="83:100">cluster_pos</name></name></expr></argument>, <argument pos:start="83:103" pos:end="83:121"><expr pos:start="83:103" pos:end="83:121"><name pos:start="83:103" pos:end="83:121">relative_packet_pos</name></expr></argument>, <argument pos:start="83:124" pos:end="83:125"><expr pos:start="83:124" pos:end="83:125"><operator pos:start="83:124" pos:end="83:124">-</operator><literal type="number" pos:start="83:125" pos:end="83:125">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="85:36"><if pos:start="85:13" pos:end="85:36">if <condition pos:start="85:16" pos:end="85:24">(<expr pos:start="85:17" pos:end="85:23"><name pos:start="85:17" pos:end="85:19">ret</name> <operator pos:start="85:21" pos:end="85:21">&lt;</operator> <literal type="number" pos:start="85:23" pos:end="85:23">0</literal></expr>)</condition><block type="pseudo" pos:start="85:26" pos:end="85:36"><block_content pos:start="85:26" pos:end="85:36"> <return pos:start="85:26" pos:end="85:36">return <expr pos:start="85:33" pos:end="85:35"><name pos:start="85:33" pos:end="85:35">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="143:5">else <block pos:start="89:12" pos:end="143:5">{<block_content pos:start="91:9" pos:end="141:9">

        <if_stmt pos:start="91:9" pos:end="127:9"><if pos:start="91:9" pos:end="95:9">if <condition pos:start="91:12" pos:end="91:48">(<expr pos:start="91:13" pos:end="91:47"><name pos:start="91:13" pos:end="91:25"><name pos:start="91:13" pos:end="91:15">par</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:25">codec_id</name></name> <operator pos:start="91:27" pos:end="91:28">==</operator> <name pos:start="91:30" pos:end="91:47">AV_CODEC_ID_WEBVTT</name></expr>)</condition> <block pos:start="91:50" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:56">

            <expr_stmt pos:start="93:13" pos:end="93:56"><expr pos:start="93:13" pos:end="93:55"><name pos:start="93:13" pos:end="93:20">duration</name> <operator pos:start="93:22" pos:end="93:22">=</operator> <call pos:start="93:24" pos:end="93:55"><name pos:start="93:24" pos:end="93:43">mkv_write_vtt_blocks</name><argument_list pos:start="93:44" pos:end="93:55">(<argument pos:start="93:45" pos:end="93:45"><expr pos:start="93:45" pos:end="93:45"><name pos:start="93:45" pos:end="93:45">s</name></expr></argument>, <argument pos:start="93:48" pos:end="93:49"><expr pos:start="93:48" pos:end="93:49"><name pos:start="93:48" pos:end="93:49">pb</name></expr></argument>, <argument pos:start="93:52" pos:end="93:54"><expr pos:start="93:52" pos:end="93:54"><name pos:start="93:52" pos:end="93:54">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="127:9">else <block pos:start="95:16" pos:end="127:9">{<block_content pos:start="97:13" pos:end="125:44">

            <decl_stmt pos:start="97:13" pos:end="104:0"><decl pos:start="97:13" pos:end="99:86"><type pos:start="97:13" pos:end="97:23"><name pos:start="97:13" pos:end="97:23">ebml_master</name></type> <name pos:start="97:25" pos:end="97:34">blockgroup</name> <init pos:start="97:36" pos:end="99:86">= <expr pos:start="97:38" pos:end="99:86"><call pos:start="97:38" pos:end="99:86"><name pos:start="97:38" pos:end="97:54">start_ebml_master</name><argument_list pos:start="97:55" pos:end="99:86">(<argument pos:start="97:56" pos:end="97:57"><expr pos:start="97:56" pos:end="97:57"><name pos:start="97:56" pos:end="97:57">pb</name></expr></argument>, <argument pos:start="97:60" pos:end="97:81"><expr pos:start="97:60" pos:end="97:81"><name pos:start="97:60" pos:end="97:81">MATROSKA_ID_BLOCKGROUP</name></expr></argument>,

                                                       <argument pos:start="99:56" pos:end="99:85"><expr pos:start="99:56" pos:end="99:85"><call pos:start="99:56" pos:end="99:85"><name pos:start="99:56" pos:end="99:74">mkv_blockgroup_size</name><argument_list pos:start="99:75" pos:end="99:85">(<argument pos:start="99:76" pos:end="99:84"><expr pos:start="99:76" pos:end="99:84"><name pos:start="99:76" pos:end="99:84"><name pos:start="99:76" pos:end="99:78">pkt</name><operator pos:start="99:79" pos:end="99:80">-&gt;</operator><name pos:start="99:81" pos:end="99:84">size</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="103:1" pos:end="103:31">#<cpp:directive pos:start="103:2" pos:end="103:3">if</cpp:directive> <expr pos:start="103:5" pos:end="103:31"><name pos:start="103:5" pos:end="103:31">FF_API_CONVERGENCE_DURATION</name></expr></cpp:if>

<macro pos:start="105:1" pos:end="105:31"><name pos:start="105:1" pos:end="105:31">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

            <comment type="block" pos:start="107:13" pos:end="107:74">/* For backward compatibility, prefer convergence_duration. */</comment>

            <if_stmt pos:start="109:13" pos:end="113:13"><if pos:start="109:13" pos:end="113:13">if <condition pos:start="109:16" pos:end="109:46">(<expr pos:start="109:17" pos:end="109:45"><name pos:start="109:17" pos:end="109:41"><name pos:start="109:17" pos:end="109:19">pkt</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:41">convergence_duration</name></name> <operator pos:start="109:43" pos:end="109:43">&gt;</operator> <literal type="number" pos:start="109:45" pos:end="109:45">0</literal></expr>)</condition> <block pos:start="109:48" pos:end="113:13">{<block_content pos:start="111:17" pos:end="111:53">

                <expr_stmt pos:start="111:17" pos:end="111:53"><expr pos:start="111:17" pos:end="111:52"><name pos:start="111:17" pos:end="111:24">duration</name> <operator pos:start="111:26" pos:end="111:26">=</operator> <name pos:start="111:28" pos:end="111:52"><name pos:start="111:28" pos:end="111:30">pkt</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:52">convergence_duration</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<decl_stmt pos:start="115:1" pos:end="121:62"><decl pos:start="115:1" pos:end="121:61"><type pos:start="115:1" pos:end="118:0"><name pos:start="115:1" pos:end="118:0">FF_ENABLE_DEPRECATION_WARNINGS</name></type>

<cpp:endif pos:start="117:1" pos:end="117:6">#<cpp:directive pos:start="117:2" pos:end="117:6">endif</cpp:directive></cpp:endif>

            <comment type="block" pos:start="119:13" pos:end="119:69">/* All subtitle blocks are considered to be keyframes. */</comment>

            <name pos:start="121:13" pos:end="121:27">mkv_write_block</name><argument_list pos:start="121:28" pos:end="121:61">(<argument pos:start="121:29" pos:end="121:29"><expr pos:start="121:29" pos:end="121:29"><name pos:start="121:29" pos:end="121:29">s</name></expr></argument>, <argument pos:start="121:32" pos:end="121:33"><expr pos:start="121:32" pos:end="121:33"><name pos:start="121:32" pos:end="121:33">pb</name></expr></argument>, <argument pos:start="121:36" pos:end="121:52"><expr pos:start="121:36" pos:end="121:52"><name pos:start="121:36" pos:end="121:52">MATROSKA_ID_BLOCK</name></expr></argument>, <argument pos:start="121:55" pos:end="121:57"><expr pos:start="121:55" pos:end="121:57"><name pos:start="121:55" pos:end="121:57">pkt</name></expr></argument>, <argument pos:start="121:60" pos:end="121:60"><expr pos:start="121:60" pos:end="121:60"><literal type="number" pos:start="121:60" pos:end="121:60">1</literal></expr></argument>)</argument_list></decl>;</decl_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:67"><expr pos:start="123:13" pos:end="123:66"><call pos:start="123:13" pos:end="123:66"><name pos:start="123:13" pos:end="123:25">put_ebml_uint</name><argument_list pos:start="123:26" pos:end="123:66">(<argument pos:start="123:27" pos:end="123:28"><expr pos:start="123:27" pos:end="123:28"><name pos:start="123:27" pos:end="123:28">pb</name></expr></argument>, <argument pos:start="123:31" pos:end="123:55"><expr pos:start="123:31" pos:end="123:55"><name pos:start="123:31" pos:end="123:55">MATROSKA_ID_BLOCKDURATION</name></expr></argument>, <argument pos:start="123:58" pos:end="123:65"><expr pos:start="123:58" pos:end="123:65"><name pos:start="123:58" pos:end="123:65">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:44"><expr pos:start="125:13" pos:end="125:43"><call pos:start="125:13" pos:end="125:43"><name pos:start="125:13" pos:end="125:27">end_ebml_master</name><argument_list pos:start="125:28" pos:end="125:43">(<argument pos:start="125:29" pos:end="125:30"><expr pos:start="125:29" pos:end="125:30"><name pos:start="125:29" pos:end="125:30">pb</name></expr></argument>, <argument pos:start="125:33" pos:end="125:42"><expr pos:start="125:33" pos:end="125:42"><name pos:start="125:33" pos:end="125:42">blockgroup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="131:9" pos:end="141:9"><if pos:start="131:9" pos:end="141:9">if <condition pos:start="131:12" pos:end="131:28">(<expr pos:start="131:13" pos:end="131:27"><name pos:start="131:13" pos:end="131:27"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:17">pb</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:27">seekable</name></name></expr>)</condition> <block pos:start="131:30" pos:end="141:9">{<block_content pos:start="133:13" pos:end="139:27">

            <expr_stmt pos:start="133:13" pos:end="135:84"><expr pos:start="133:13" pos:end="135:83"><name pos:start="133:13" pos:end="133:15">ret</name> <operator pos:start="133:17" pos:end="133:17">=</operator> <call pos:start="133:19" pos:end="135:83"><name pos:start="133:19" pos:end="133:34">mkv_add_cuepoint</name><argument_list pos:start="133:35" pos:end="135:83">(<argument pos:start="133:36" pos:end="133:44"><expr pos:start="133:36" pos:end="133:44"><name pos:start="133:36" pos:end="133:44"><name pos:start="133:36" pos:end="133:38">mkv</name><operator pos:start="133:39" pos:end="133:40">-&gt;</operator><name pos:start="133:41" pos:end="133:44">cues</name></name></expr></argument>, <argument pos:start="133:47" pos:end="133:63"><expr pos:start="133:47" pos:end="133:63"><name pos:start="133:47" pos:end="133:63"><name pos:start="133:47" pos:end="133:49">pkt</name><operator pos:start="133:50" pos:end="133:51">-&gt;</operator><name pos:start="133:52" pos:end="133:63">stream_index</name></name></expr></argument>, <argument pos:start="133:66" pos:end="133:78"><expr pos:start="133:66" pos:end="133:78"><name pos:start="133:66" pos:end="133:78">dash_tracknum</name></expr></argument>, <argument pos:start="133:81" pos:end="133:82"><expr pos:start="133:81" pos:end="133:82"><name pos:start="133:81" pos:end="133:82">ts</name></expr></argument>,

                                   <argument pos:start="135:36" pos:end="135:51"><expr pos:start="135:36" pos:end="135:51"><name pos:start="135:36" pos:end="135:51"><name pos:start="135:36" pos:end="135:38">mkv</name><operator pos:start="135:39" pos:end="135:40">-&gt;</operator><name pos:start="135:41" pos:end="135:51">cluster_pos</name></name></expr></argument>, <argument pos:start="135:54" pos:end="135:72"><expr pos:start="135:54" pos:end="135:72"><name pos:start="135:54" pos:end="135:72">relative_packet_pos</name></expr></argument>, <argument pos:start="135:75" pos:end="135:82"><expr pos:start="135:75" pos:end="135:82"><name pos:start="135:75" pos:end="135:82">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="137:13" pos:end="139:27"><if pos:start="137:13" pos:end="139:27">if <condition pos:start="137:16" pos:end="137:24">(<expr pos:start="137:17" pos:end="137:23"><name pos:start="137:17" pos:end="137:19">ret</name> <operator pos:start="137:21" pos:end="137:21">&lt;</operator> <literal type="number" pos:start="137:23" pos:end="137:23">0</literal></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:27"><block_content pos:start="139:17" pos:end="139:27">

                <return pos:start="139:17" pos:end="139:27">return <expr pos:start="139:24" pos:end="139:26"><name pos:start="139:24" pos:end="139:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:56"><expr pos:start="147:5" pos:end="147:55"><name pos:start="147:5" pos:end="147:17"><name pos:start="147:5" pos:end="147:7">mkv</name><operator pos:start="147:8" pos:end="147:9">-&gt;</operator><name pos:start="147:10" pos:end="147:17">duration</name></name> <operator pos:start="147:19" pos:end="147:19">=</operator> <call pos:start="147:21" pos:end="147:55"><name pos:start="147:21" pos:end="147:25">FFMAX</name><argument_list pos:start="147:26" pos:end="147:55">(<argument pos:start="147:27" pos:end="147:39"><expr pos:start="147:27" pos:end="147:39"><name pos:start="147:27" pos:end="147:39"><name pos:start="147:27" pos:end="147:29">mkv</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:39">duration</name></name></expr></argument>, <argument pos:start="147:42" pos:end="147:54"><expr pos:start="147:42" pos:end="147:54"><name pos:start="147:42" pos:end="147:43">ts</name> <operator pos:start="147:45" pos:end="147:45">+</operator> <name pos:start="147:47" pos:end="147:54">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="151:5" pos:end="155:75"><if pos:start="151:5" pos:end="155:75">if <condition pos:start="151:8" pos:end="151:30">(<expr pos:start="151:9" pos:end="151:29"><name pos:start="151:9" pos:end="151:29"><name pos:start="151:9" pos:end="151:11">mkv</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:29">stream_durations</name></name></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="155:75"><block_content pos:start="153:9" pos:end="155:75">

        <expr_stmt pos:start="153:9" pos:end="155:75"><expr pos:start="153:9" pos:end="155:74"><name pos:start="153:9" pos:end="153:48"><name pos:start="153:9" pos:end="153:11">mkv</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:29">stream_durations</name><index pos:start="153:30" pos:end="153:48">[<expr pos:start="153:31" pos:end="153:47"><name pos:start="153:31" pos:end="153:47"><name pos:start="153:31" pos:end="153:33">pkt</name><operator pos:start="153:34" pos:end="153:35">-&gt;</operator><name pos:start="153:36" pos:end="153:47">stream_index</name></name></expr>]</index></name> <operator pos:start="153:50" pos:end="153:50">=</operator>

            <call pos:start="155:13" pos:end="155:74"><name pos:start="155:13" pos:end="155:17">FFMAX</name><argument_list pos:start="155:18" pos:end="155:74">(<argument pos:start="155:19" pos:end="155:58"><expr pos:start="155:19" pos:end="155:58"><name pos:start="155:19" pos:end="155:58"><name pos:start="155:19" pos:end="155:21">mkv</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:39">stream_durations</name><index pos:start="155:40" pos:end="155:58">[<expr pos:start="155:41" pos:end="155:57"><name pos:start="155:41" pos:end="155:57"><name pos:start="155:41" pos:end="155:43">pkt</name><operator pos:start="155:44" pos:end="155:45">-&gt;</operator><name pos:start="155:46" pos:end="155:57">stream_index</name></name></expr>]</index></name></expr></argument>, <argument pos:start="155:61" pos:end="155:73"><expr pos:start="155:61" pos:end="155:73"><name pos:start="155:61" pos:end="155:62">ts</name> <operator pos:start="155:64" pos:end="155:64">+</operator> <name pos:start="155:66" pos:end="155:73">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="159:5" pos:end="159:13">return <expr pos:start="159:12" pos:end="159:12"><literal type="number" pos:start="159:12" pos:end="159:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
