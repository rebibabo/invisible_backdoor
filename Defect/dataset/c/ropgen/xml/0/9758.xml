<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9758.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:4">void</name> <name pos:start="1:6" pos:end="1:11">HELPER</name></type>(<name pos:start="1:13" pos:end="1:16">diag</name>)<parameter_list pos:start="1:18" pos:end="1:77">(<parameter pos:start="1:19" pos:end="1:36"><decl pos:start="1:19" pos:end="1:36"><type pos:start="1:19" pos:end="1:36"><name pos:start="1:19" pos:end="1:31">CPUS390XState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">env</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:49"><decl pos:start="1:39" pos:end="1:49"><type pos:start="1:39" pos:end="1:49"><name pos:start="1:39" pos:end="1:46">uint32_t</name></type> <name pos:start="1:48" pos:end="1:49">r1</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:62"><decl pos:start="1:52" pos:end="1:62"><type pos:start="1:52" pos:end="1:62"><name pos:start="1:52" pos:end="1:59">uint32_t</name></type> <name pos:start="1:61" pos:end="1:62">r3</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:72">uint32_t</name></type> <name pos:start="1:74" pos:end="1:76">num</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:5">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:14">r</name></decl>;</decl_stmt>



    <switch pos:start="9:5" pos:end="47:5">switch <condition pos:start="9:12" pos:end="9:16">(<expr pos:start="9:13" pos:end="9:15"><name pos:start="9:13" pos:end="9:15">num</name></expr>)</condition> <block pos:start="9:18" pos:end="47:5">{<block_content pos:start="11:5" pos:end="45:14">

    <case pos:start="11:5" pos:end="11:15">case <expr pos:start="11:10" pos:end="11:14"><literal type="number" pos:start="11:10" pos:end="11:14">0x500</literal></expr>:</case>

        <comment type="block" pos:start="13:9" pos:end="13:27">/* KVM hypercall */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:35"><expr pos:start="15:9" pos:end="15:34"><call pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:32">qemu_mutex_lock_iothread</name><argument_list pos:start="15:33" pos:end="15:34">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:39"><expr pos:start="17:9" pos:end="17:38"><name pos:start="17:9" pos:end="17:9">r</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:38"><name pos:start="17:13" pos:end="17:33">s390_virtio_hypercall</name><argument_list pos:start="17:34" pos:end="17:38">(<argument pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><name pos:start="17:35" pos:end="17:37">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:37"><expr pos:start="19:9" pos:end="19:36"><call pos:start="19:9" pos:end="19:36"><name pos:start="19:9" pos:end="19:34">qemu_mutex_unlock_iothread</name><argument_list pos:start="19:35" pos:end="19:36">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:14">case <expr pos:start="23:10" pos:end="23:13"><literal type="number" pos:start="23:10" pos:end="23:13">0x44</literal></expr>:</case>

        <comment type="block" pos:start="25:9" pos:end="25:19">/* yield */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:14"><expr pos:start="27:9" pos:end="27:13"><name pos:start="27:9" pos:end="27:9">r</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <literal type="number" pos:start="27:13" pos:end="27:13">0</literal></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:15">case <expr pos:start="31:10" pos:end="31:14"><literal type="number" pos:start="31:10" pos:end="31:14">0x308</literal></expr>:</case>

        <comment type="block" pos:start="33:9" pos:end="33:17">/* ipl */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:37"><expr pos:start="35:9" pos:end="35:36"><call pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:23">handle_diag_308</name><argument_list pos:start="35:24" pos:end="35:36">(<argument pos:start="35:25" pos:end="35:27"><expr pos:start="35:25" pos:end="35:27"><name pos:start="35:25" pos:end="35:27">env</name></expr></argument>, <argument pos:start="35:30" pos:end="35:31"><expr pos:start="35:30" pos:end="35:31"><name pos:start="35:30" pos:end="35:31">r1</name></expr></argument>, <argument pos:start="35:34" pos:end="35:35"><expr pos:start="35:34" pos:end="35:35"><name pos:start="35:34" pos:end="35:35">r3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:14"><expr pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:9">r</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <literal type="number" pos:start="37:13" pos:end="37:13">0</literal></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <default pos:start="41:5" pos:end="41:12">default:</default>

        <expr_stmt pos:start="43:9" pos:end="43:15"><expr pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:9">r</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <operator pos:start="43:13" pos:end="43:13">-</operator><literal type="number" pos:start="43:14" pos:end="43:14">1</literal></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:10">(<expr pos:start="51:9" pos:end="51:9"><name pos:start="51:9" pos:end="51:9">r</name></expr>)</condition> <block pos:start="51:12" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:62">

        <expr_stmt pos:start="53:9" pos:end="53:62"><expr pos:start="53:9" pos:end="53:61"><call pos:start="53:9" pos:end="53:61"><name pos:start="53:9" pos:end="53:25">program_interrupt</name><argument_list pos:start="53:26" pos:end="53:61">(<argument pos:start="53:27" pos:end="53:29"><expr pos:start="53:27" pos:end="53:29"><name pos:start="53:27" pos:end="53:29">env</name></expr></argument>, <argument pos:start="53:32" pos:end="53:44"><expr pos:start="53:32" pos:end="53:44"><name pos:start="53:32" pos:end="53:44">PGM_OPERATION</name></expr></argument>, <argument pos:start="53:47" pos:end="53:60"><expr pos:start="53:47" pos:end="53:60"><name pos:start="53:47" pos:end="53:60">ILEN_LATER_INC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
