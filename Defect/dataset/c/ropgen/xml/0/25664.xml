<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25664.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">decode_group3_1d_line</name><parameter_list pos:start="1:33" pos:end="3:57">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:73"><decl pos:start="1:57" pos:end="1:73"><type pos:start="1:57" pos:end="1:73"><name pos:start="1:57" pos:end="1:69">GetBitContext</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:73">gb</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:45">pix_left</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:56"><decl pos:start="3:48" pos:end="3:56"><type pos:start="3:48" pos:end="3:56"><name pos:start="3:48" pos:end="3:50">int</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:56">runs</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:13">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">mode</name> <init pos:start="7:14" pos:end="7:16">= <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr></init></decl>, <decl pos:start="7:19" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:21">run</name> <init pos:start="7:23" pos:end="7:25">= <expr pos:start="7:25" pos:end="7:25"><literal type="number" pos:start="7:25" pos:end="7:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">t</name></decl>;</decl_stmt>

    <for pos:start="11:5" pos:end="49:5">for<control pos:start="11:8" pos:end="11:11">(<init pos:start="11:9" pos:end="11:9">;</init><condition pos:start="11:10" pos:end="11:10">;</condition><incr/>)</control><block pos:start="11:12" pos:end="49:5">{<block_content pos:start="13:9" pos:end="47:9">

        <expr_stmt pos:start="13:9" pos:end="13:54"><expr pos:start="13:9" pos:end="13:53"><name pos:start="13:9" pos:end="13:9">t</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:53"><name pos:start="13:13" pos:end="13:20">get_vlc2</name><argument_list pos:start="13:21" pos:end="13:53">(<argument pos:start="13:22" pos:end="13:23"><expr pos:start="13:22" pos:end="13:23"><name pos:start="13:22" pos:end="13:23">gb</name></expr></argument>, <argument pos:start="13:26" pos:end="13:46"><expr pos:start="13:26" pos:end="13:46"><name pos:start="13:26" pos:end="13:40"><name pos:start="13:26" pos:end="13:34">ccitt_vlc</name><index pos:start="13:35" pos:end="13:40">[<expr pos:start="13:36" pos:end="13:39"><name pos:start="13:36" pos:end="13:39">mode</name></expr>]</index></name><operator pos:start="13:41" pos:end="13:41">.</operator><name pos:start="13:42" pos:end="13:46">table</name></expr></argument>, <argument pos:start="13:49" pos:end="13:49"><expr pos:start="13:49" pos:end="13:49"><literal type="number" pos:start="13:49" pos:end="13:49">9</literal></expr></argument>, <argument pos:start="13:52" pos:end="13:52"><expr pos:start="13:52" pos:end="13:52"><literal type="number" pos:start="13:52" pos:end="13:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:17"><expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:11">run</name> <operator pos:start="15:13" pos:end="15:14">+=</operator> <name pos:start="15:16" pos:end="15:16">t</name></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="47:9"><if pos:start="17:9" pos:end="41:9">if<condition pos:start="17:11" pos:end="17:18">(<expr pos:start="17:12" pos:end="17:17"><name pos:start="17:12" pos:end="17:12">t</name> <operator pos:start="17:14" pos:end="17:14">&lt;</operator> <literal type="number" pos:start="17:16" pos:end="17:17">64</literal></expr>)</condition><block pos:start="17:19" pos:end="41:9">{<block_content pos:start="19:13" pos:end="39:25">

            <expr_stmt pos:start="19:13" pos:end="19:28"><expr pos:start="19:13" pos:end="19:27"><name pos:start="19:13" pos:end="19:20">pix_left</name> <operator pos:start="19:22" pos:end="19:23">-=</operator> <name pos:start="19:25" pos:end="19:27">run</name></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:26"><expr pos:start="21:13" pos:end="21:25"><operator pos:start="21:13" pos:end="21:13">*</operator><name pos:start="21:14" pos:end="21:17">runs</name><operator pos:start="21:18" pos:end="21:19">++</operator> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:25">run</name></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="35:13"><if pos:start="23:13" pos:end="35:13">if<condition pos:start="23:15" pos:end="23:29">(<expr pos:start="23:16" pos:end="23:28"><name pos:start="23:16" pos:end="23:23">pix_left</name> <operator pos:start="23:25" pos:end="23:26">&lt;=</operator> <literal type="number" pos:start="23:28" pos:end="23:28">0</literal></expr>)</condition><block pos:start="23:30" pos:end="35:13">{<block_content pos:start="25:17" pos:end="33:26">

                <if_stmt pos:start="25:17" pos:end="27:26"><if pos:start="25:17" pos:end="27:26">if<condition pos:start="25:19" pos:end="25:29">(<expr pos:start="25:20" pos:end="25:28"><operator pos:start="25:20" pos:end="25:20">!</operator><name pos:start="25:21" pos:end="25:28">pix_left</name></expr>)</condition><block type="pseudo" pos:start="27:21" pos:end="27:26"><block_content pos:start="27:21" pos:end="27:26">

                    <break pos:start="27:21" pos:end="27:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:29"><expr pos:start="29:17" pos:end="29:28"><name pos:start="29:17" pos:end="29:24"><name pos:start="29:17" pos:end="29:20">runs</name><index pos:start="29:21" pos:end="29:24">[<expr pos:start="29:22" pos:end="29:23"><operator pos:start="29:22" pos:end="29:22">-</operator><literal type="number" pos:start="29:23" pos:end="29:23">1</literal></expr>]</index></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <literal type="number" pos:start="29:28" pos:end="29:28">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="31:17" pos:end="31:72"><expr pos:start="31:17" pos:end="31:71"><call pos:start="31:17" pos:end="31:71"><name pos:start="31:17" pos:end="31:22">av_log</name><argument_list pos:start="31:23" pos:end="31:71">(<argument pos:start="31:24" pos:end="31:28"><expr pos:start="31:24" pos:end="31:28"><name pos:start="31:24" pos:end="31:28">avctx</name></expr></argument>, <argument pos:start="31:31" pos:end="31:42"><expr pos:start="31:31" pos:end="31:42"><name pos:start="31:31" pos:end="31:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:45" pos:end="31:70"><expr pos:start="31:45" pos:end="31:70"><literal type="string" pos:start="31:45" pos:end="31:70">"Run went out of bounds\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="33:17" pos:end="33:26">return <expr pos:start="33:24" pos:end="33:25"><operator pos:start="33:24" pos:end="33:24">-</operator><literal type="number" pos:start="33:25" pos:end="33:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:20"><expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">run</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:25"><expr pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:16">mode</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <operator pos:start="39:20" pos:end="39:20">!</operator><name pos:start="39:21" pos:end="39:24">mode</name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="41:10" pos:end="47:9">else if<condition pos:start="41:17" pos:end="41:30">(<expr pos:start="41:18" pos:end="41:29"><operator pos:start="41:18" pos:end="41:18">(</operator><name pos:start="41:19" pos:end="41:21">int</name><operator pos:start="41:22" pos:end="41:22">)</operator><name pos:start="41:23" pos:end="41:23">t</name> <operator pos:start="41:25" pos:end="41:26">==</operator> <operator pos:start="41:28" pos:end="41:28">-</operator><literal type="number" pos:start="41:29" pos:end="41:29">1</literal></expr>)</condition><block pos:start="41:31" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:22">

            <expr_stmt pos:start="43:13" pos:end="43:60"><expr pos:start="43:13" pos:end="43:59"><call pos:start="43:13" pos:end="43:59"><name pos:start="43:13" pos:end="43:18">av_log</name><argument_list pos:start="43:19" pos:end="43:59">(<argument pos:start="43:20" pos:end="43:24"><expr pos:start="43:20" pos:end="43:24"><name pos:start="43:20" pos:end="43:24">avctx</name></expr></argument>, <argument pos:start="43:27" pos:end="43:38"><expr pos:start="43:27" pos:end="43:38"><name pos:start="43:27" pos:end="43:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:41" pos:end="43:58"><expr pos:start="43:41" pos:end="43:58"><literal type="string" pos:start="43:41" pos:end="43:58">"Incorrect code\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:22">return <expr pos:start="45:20" pos:end="45:21"><operator pos:start="45:20" pos:end="45:20">-</operator><literal type="number" pos:start="45:21" pos:end="45:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="51:5" pos:end="51:16"><expr pos:start="51:5" pos:end="51:15"><operator pos:start="51:5" pos:end="51:5">*</operator><name pos:start="51:6" pos:end="51:9">runs</name><operator pos:start="51:10" pos:end="51:11">++</operator> <operator pos:start="51:13" pos:end="51:13">=</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
