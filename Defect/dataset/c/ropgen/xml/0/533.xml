<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/533.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">hw_device_setup_for_encode</name><parameter_list pos:start="1:31" pos:end="1:49">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:43">OutputStream</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">ost</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:5">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:8">enum</name> <name pos:start="5:10" pos:end="5:23">AVHWDeviceType</name></name></type> <name pos:start="5:25" pos:end="5:28">type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">HWDevice</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:17">dev</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:56"><expr pos:start="11:5" pos:end="11:55"><name pos:start="11:5" pos:end="11:8">type</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="11:55"><name pos:start="11:12" pos:end="11:39">hw_device_match_type_in_name</name><argument_list pos:start="11:40" pos:end="11:55">(<argument pos:start="11:41" pos:end="11:54"><expr pos:start="11:41" pos:end="11:54"><name pos:start="11:41" pos:end="11:54"><name pos:start="11:41" pos:end="11:43">ost</name><operator pos:start="11:44" pos:end="11:45">-&gt;</operator><name pos:start="11:46" pos:end="11:48">enc</name><operator pos:start="11:49" pos:end="11:50">-&gt;</operator><name pos:start="11:51" pos:end="11:54">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="43:5"><if pos:start="13:5" pos:end="37:5">if <condition pos:start="13:8" pos:end="13:38">(<expr pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:12">type</name> <operator pos:start="13:14" pos:end="13:15">!=</operator> <name pos:start="13:17" pos:end="13:37">AV_HWDEVICE_TYPE_NONE</name></expr>)</condition> <block pos:start="13:40" pos:end="37:5">{<block_content pos:start="15:9" pos:end="35:17">

        <expr_stmt pos:start="15:9" pos:end="15:42"><expr pos:start="15:9" pos:end="15:41"><name pos:start="15:9" pos:end="15:11">dev</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:41"><name pos:start="15:15" pos:end="15:35">hw_device_get_by_type</name><argument_list pos:start="15:36" pos:end="15:41">(<argument pos:start="15:37" pos:end="15:40"><expr pos:start="15:37" pos:end="15:40"><name pos:start="15:37" pos:end="15:40">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="27:9"><if pos:start="17:9" pos:end="27:9">if <condition pos:start="17:12" pos:end="17:17">(<expr pos:start="17:13" pos:end="17:16"><operator pos:start="17:13" pos:end="17:13">!</operator><name pos:start="17:14" pos:end="17:16">dev</name></expr>)</condition> <block pos:start="17:19" pos:end="27:9">{<block_content pos:start="19:13" pos:end="25:21">

            <expr_stmt pos:start="19:13" pos:end="23:68"><expr pos:start="19:13" pos:end="23:67"><call pos:start="19:13" pos:end="23:67"><name pos:start="19:13" pos:end="19:18">av_log</name><argument_list pos:start="19:19" pos:end="23:67">(<argument pos:start="19:20" pos:end="19:31"><expr pos:start="19:20" pos:end="19:31"><name pos:start="19:20" pos:end="19:31"><name pos:start="19:20" pos:end="19:22">ost</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:31">enc_ctx</name></name></expr></argument>, <argument pos:start="19:34" pos:end="19:47"><expr pos:start="19:34" pos:end="19:47"><name pos:start="19:34" pos:end="19:47">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="19:50" pos:end="21:65"><expr pos:start="19:50" pos:end="21:65"><literal type="string" pos:start="19:50" pos:end="19:71">"No device available "</literal>

                   <literal type="string" pos:start="21:20" pos:end="21:65">"for encoder (device type %s for codec %s).\n"</literal></expr></argument>,

                   <argument pos:start="23:20" pos:end="23:50"><expr pos:start="23:20" pos:end="23:50"><call pos:start="23:20" pos:end="23:50"><name pos:start="23:20" pos:end="23:44">av_hwdevice_get_type_name</name><argument_list pos:start="23:45" pos:end="23:50">(<argument pos:start="23:46" pos:end="23:49"><expr pos:start="23:46" pos:end="23:49"><name pos:start="23:46" pos:end="23:49">type</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:53" pos:end="23:66"><expr pos:start="23:53" pos:end="23:66"><name pos:start="23:53" pos:end="23:66"><name pos:start="23:53" pos:end="23:55">ost</name><operator pos:start="23:56" pos:end="23:57">-&gt;</operator><name pos:start="23:58" pos:end="23:60">enc</name><operator pos:start="23:61" pos:end="23:62">-&gt;</operator><name pos:start="23:63" pos:end="23:66">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="25:13" pos:end="25:21">return <expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:69"><expr pos:start="29:9" pos:end="29:68"><name pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:11">ost</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:20">enc_ctx</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:35">hw_device_ctx</name></name> <operator pos:start="29:37" pos:end="29:37">=</operator> <call pos:start="29:39" pos:end="29:68"><name pos:start="29:39" pos:end="29:51">av_buffer_ref</name><argument_list pos:start="29:52" pos:end="29:68">(<argument pos:start="29:53" pos:end="29:67"><expr pos:start="29:53" pos:end="29:67"><name pos:start="29:53" pos:end="29:67"><name pos:start="29:53" pos:end="29:55">dev</name><operator pos:start="29:56" pos:end="29:57">-&gt;</operator><name pos:start="29:58" pos:end="29:67">device_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:35"><if pos:start="31:9" pos:end="33:35">if <condition pos:start="31:12" pos:end="31:41">(<expr pos:start="31:13" pos:end="31:40"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:40"><name pos:start="31:14" pos:end="31:16">ost</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:25">enc_ctx</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:40">hw_device_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:35"><block_content pos:start="33:13" pos:end="33:35">

            <return pos:start="33:13" pos:end="33:35">return <expr pos:start="33:20" pos:end="33:34"><call pos:start="33:20" pos:end="33:34"><name pos:start="33:20" pos:end="33:26">AVERROR</name><argument_list pos:start="33:27" pos:end="33:34">(<argument pos:start="33:28" pos:end="33:33"><expr pos:start="33:28" pos:end="33:33"><name pos:start="33:28" pos:end="33:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="43:5">else <block pos:start="37:12" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:17">

        <comment type="line" pos:start="39:9" pos:end="39:30">// No device required.</comment>

        <return pos:start="41:9" pos:end="41:17">return <expr pos:start="41:16" pos:end="41:16"><literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
