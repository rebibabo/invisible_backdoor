<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18039.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">tcx_screen_dump</name><parameter_list pos:start="1:28" pos:end="3:41">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:62"><decl pos:start="1:43" pos:end="1:62"><type pos:start="1:43" pos:end="1:62"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:62">filename</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:68">bool</name></type> <name pos:start="1:70" pos:end="1:76">cswitch</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:33">Error</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier><modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="99:1">{<block_content pos:start="7:5" pos:end="97:13">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">TCXState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:24">= <expr pos:start="7:19" pos:end="7:24"><name pos:start="7:19" pos:end="7:24">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">FILE</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:11">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">d</name></decl>, <decl pos:start="11:17" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:13"><modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">d1</name></decl>, <decl pos:start="11:22" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:13"/><name pos:start="11:22" pos:end="11:22">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:14">y</name></decl>, <decl pos:start="13:17" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:17">x</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:30"><expr pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:5">f</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <call pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:13">fopen</name><argument_list pos:start="17:14" pos:end="17:29">(<argument pos:start="17:15" pos:end="17:22"><expr pos:start="17:15" pos:end="17:22"><name pos:start="17:15" pos:end="17:22">filename</name></expr></argument>, <argument pos:start="17:25" pos:end="17:28"><expr pos:start="17:25" pos:end="17:28"><literal type="string" pos:start="17:25" pos:end="17:28">"wb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:11">(<expr pos:start="19:9" pos:end="19:10"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:10">f</name></expr>)</condition> <block pos:start="19:13" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:15">

        <expr_stmt pos:start="21:9" pos:end="23:36"><expr pos:start="21:9" pos:end="23:35"><call pos:start="21:9" pos:end="23:35"><name pos:start="21:9" pos:end="21:18">error_setg</name><argument_list pos:start="21:19" pos:end="23:35">(<argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">errp</name></expr></argument>, <argument pos:start="21:26" pos:end="21:55"><expr pos:start="21:26" pos:end="21:55"><literal type="string" pos:start="21:26" pos:end="21:55">"failed to open file '%s': %s"</literal></expr></argument>, <argument pos:start="21:58" pos:end="21:65"><expr pos:start="21:58" pos:end="21:65"><name pos:start="21:58" pos:end="21:65">filename</name></expr></argument>,

                   <argument pos:start="23:20" pos:end="23:34"><expr pos:start="23:20" pos:end="23:34"><call pos:start="23:20" pos:end="23:34"><name pos:start="23:20" pos:end="23:27">strerror</name><argument_list pos:start="23:28" pos:end="23:34">(<argument pos:start="23:29" pos:end="23:33"><expr pos:start="23:29" pos:end="23:33"><name pos:start="23:29" pos:end="23:33">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:66"><expr pos:start="29:5" pos:end="29:65"><name pos:start="29:5" pos:end="29:7">ret</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:65"><name pos:start="29:11" pos:end="29:17">fprintf</name><argument_list pos:start="29:18" pos:end="29:65">(<argument pos:start="29:19" pos:end="29:19"><expr pos:start="29:19" pos:end="29:19"><name pos:start="29:19" pos:end="29:19">f</name></expr></argument>, <argument pos:start="29:22" pos:end="29:38"><expr pos:start="29:22" pos:end="29:38"><literal type="string" pos:start="29:22" pos:end="29:38">"P6\n%d %d\n%d\n"</literal></expr></argument>, <argument pos:start="29:41" pos:end="29:48"><expr pos:start="29:41" pos:end="29:48"><name pos:start="29:41" pos:end="29:48"><name pos:start="29:41" pos:end="29:41">s</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:48">width</name></name></expr></argument>, <argument pos:start="29:51" pos:end="29:59"><expr pos:start="29:51" pos:end="29:59"><name pos:start="29:51" pos:end="29:59"><name pos:start="29:51" pos:end="29:51">s</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:59">height</name></name></expr></argument>, <argument pos:start="29:62" pos:end="29:64"><expr pos:start="29:62" pos:end="29:64"><literal type="number" pos:start="29:62" pos:end="29:64">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:16">(<expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">&lt;</operator> <literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>)</condition> <block pos:start="31:18" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:23">

        <goto pos:start="33:9" pos:end="33:23">goto <name pos:start="33:14" pos:end="33:22">write_err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:17"><expr pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:6">d1</name> <operator pos:start="37:8" pos:end="37:8">=</operator> <name pos:start="37:10" pos:end="37:16"><name pos:start="37:10" pos:end="37:10">s</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:16">vram</name></name></expr>;</expr_stmt>

    <for pos:start="39:5" pos:end="77:5">for<control pos:start="39:8" pos:end="39:34">(<init pos:start="39:9" pos:end="39:14"><expr pos:start="39:9" pos:end="39:13"><name pos:start="39:9" pos:end="39:9">y</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <literal type="number" pos:start="39:13" pos:end="39:13">0</literal></expr>;</init> <condition pos:start="39:16" pos:end="39:29"><expr pos:start="39:16" pos:end="39:28"><name pos:start="39:16" pos:end="39:16">y</name> <operator pos:start="39:18" pos:end="39:18">&lt;</operator> <name pos:start="39:20" pos:end="39:28"><name pos:start="39:20" pos:end="39:20">s</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:28">height</name></name></expr>;</condition> <incr pos:start="39:31" pos:end="39:33"><expr pos:start="39:31" pos:end="39:33"><name pos:start="39:31" pos:end="39:31">y</name><operator pos:start="39:32" pos:end="39:33">++</operator></expr></incr>)</control> <block pos:start="39:36" pos:end="77:5">{<block_content pos:start="41:9" pos:end="75:19">

        <expr_stmt pos:start="41:9" pos:end="41:15"><expr pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:9">d</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <name pos:start="41:13" pos:end="41:14">d1</name></expr>;</expr_stmt>

        <for pos:start="43:9" pos:end="73:9">for<control pos:start="43:12" pos:end="43:37">(<init pos:start="43:13" pos:end="43:18"><expr pos:start="43:13" pos:end="43:17"><name pos:start="43:13" pos:end="43:13">x</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <literal type="number" pos:start="43:17" pos:end="43:17">0</literal></expr>;</init> <condition pos:start="43:20" pos:end="43:32"><expr pos:start="43:20" pos:end="43:31"><name pos:start="43:20" pos:end="43:20">x</name> <operator pos:start="43:22" pos:end="43:22">&lt;</operator> <name pos:start="43:24" pos:end="43:31"><name pos:start="43:24" pos:end="43:24">s</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:31">width</name></name></expr>;</condition> <incr pos:start="43:34" pos:end="43:36"><expr pos:start="43:34" pos:end="43:36"><name pos:start="43:34" pos:end="43:34">x</name><operator pos:start="43:35" pos:end="43:36">++</operator></expr></incr>)</control> <block pos:start="43:39" pos:end="73:9">{<block_content pos:start="45:13" pos:end="71:16">

            <expr_stmt pos:start="45:13" pos:end="45:19"><expr pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:13">v</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <operator pos:start="45:17" pos:end="45:17">*</operator><name pos:start="45:18" pos:end="45:18">d</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:36"><expr pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:15">ret</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <call pos:start="47:19" pos:end="47:35"><name pos:start="47:19" pos:end="47:23">fputc</name><argument_list pos:start="47:24" pos:end="47:35">(<argument pos:start="47:25" pos:end="47:31"><expr pos:start="47:25" pos:end="47:31"><name pos:start="47:25" pos:end="47:31"><name pos:start="47:25" pos:end="47:25">s</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:28">r</name><index pos:start="47:29" pos:end="47:31">[<expr pos:start="47:30" pos:end="47:30"><name pos:start="47:30" pos:end="47:30">v</name></expr>]</index></name></expr></argument>, <argument pos:start="47:34" pos:end="47:34"><expr pos:start="47:34" pos:end="47:34"><name pos:start="47:34" pos:end="47:34">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="49:13" pos:end="53:13"><if pos:start="49:13" pos:end="53:13">if <condition pos:start="49:16" pos:end="49:27">(<expr pos:start="49:17" pos:end="49:26"><name pos:start="49:17" pos:end="49:19">ret</name> <operator pos:start="49:21" pos:end="49:22">==</operator> <name pos:start="49:24" pos:end="49:26">EOF</name></expr>)</condition> <block pos:start="49:29" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:31">

                <goto pos:start="51:17" pos:end="51:31">goto <name pos:start="51:22" pos:end="51:30">write_err</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:36"><expr pos:start="55:13" pos:end="55:35"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:35"><name pos:start="55:19" pos:end="55:23">fputc</name><argument_list pos:start="55:24" pos:end="55:35">(<argument pos:start="55:25" pos:end="55:31"><expr pos:start="55:25" pos:end="55:31"><name pos:start="55:25" pos:end="55:31"><name pos:start="55:25" pos:end="55:25">s</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:28">g</name><index pos:start="55:29" pos:end="55:31">[<expr pos:start="55:30" pos:end="55:30"><name pos:start="55:30" pos:end="55:30">v</name></expr>]</index></name></expr></argument>, <argument pos:start="55:34" pos:end="55:34"><expr pos:start="55:34" pos:end="55:34"><name pos:start="55:34" pos:end="55:34">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="61:13"><if pos:start="57:13" pos:end="61:13">if <condition pos:start="57:16" pos:end="57:27">(<expr pos:start="57:17" pos:end="57:26"><name pos:start="57:17" pos:end="57:19">ret</name> <operator pos:start="57:21" pos:end="57:22">==</operator> <name pos:start="57:24" pos:end="57:26">EOF</name></expr>)</condition> <block pos:start="57:29" pos:end="61:13">{<block_content pos:start="59:17" pos:end="59:31">

                <goto pos:start="59:17" pos:end="59:31">goto <name pos:start="59:22" pos:end="59:30">write_err</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:36"><expr pos:start="63:13" pos:end="63:35"><name pos:start="63:13" pos:end="63:15">ret</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="63:35"><name pos:start="63:19" pos:end="63:23">fputc</name><argument_list pos:start="63:24" pos:end="63:35">(<argument pos:start="63:25" pos:end="63:31"><expr pos:start="63:25" pos:end="63:31"><name pos:start="63:25" pos:end="63:31"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:28">b</name><index pos:start="63:29" pos:end="63:31">[<expr pos:start="63:30" pos:end="63:30"><name pos:start="63:30" pos:end="63:30">v</name></expr>]</index></name></expr></argument>, <argument pos:start="63:34" pos:end="63:34"><expr pos:start="63:34" pos:end="63:34"><name pos:start="63:34" pos:end="63:34">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="69:13"><if pos:start="65:13" pos:end="69:13">if <condition pos:start="65:16" pos:end="65:27">(<expr pos:start="65:17" pos:end="65:26"><name pos:start="65:17" pos:end="65:19">ret</name> <operator pos:start="65:21" pos:end="65:22">==</operator> <name pos:start="65:24" pos:end="65:26">EOF</name></expr>)</condition> <block pos:start="65:29" pos:end="69:13">{<block_content pos:start="67:17" pos:end="67:31">

                <goto pos:start="67:17" pos:end="67:31">goto <name pos:start="67:22" pos:end="67:30">write_err</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:16"><expr pos:start="71:13" pos:end="71:15"><name pos:start="71:13" pos:end="71:13">d</name><operator pos:start="71:14" pos:end="71:15">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="75:9" pos:end="75:19"><expr pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:10">d1</name> <operator pos:start="75:12" pos:end="75:13">+=</operator> <name pos:start="75:15" pos:end="75:18">MAXX</name></expr>;</expr_stmt>

    </block_content>}</block></for>



<label pos:start="81:1" pos:end="81:4"><name pos:start="81:1" pos:end="81:3">out</name>:</label>

    <expr_stmt pos:start="83:5" pos:end="83:14"><expr pos:start="83:5" pos:end="83:13"><call pos:start="83:5" pos:end="83:13"><name pos:start="83:5" pos:end="83:10">fclose</name><argument_list pos:start="83:11" pos:end="83:13">(<argument pos:start="83:12" pos:end="83:12"><expr pos:start="83:12" pos:end="83:12"><name pos:start="83:12" pos:end="83:12">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="85:5" pos:end="85:11">return;</return>



<label pos:start="89:1" pos:end="89:10"><name pos:start="89:1" pos:end="89:9">write_err</name>:</label>

    <expr_stmt pos:start="91:5" pos:end="93:32"><expr pos:start="91:5" pos:end="93:31"><call pos:start="91:5" pos:end="93:31"><name pos:start="91:5" pos:end="91:14">error_setg</name><argument_list pos:start="91:15" pos:end="93:31">(<argument pos:start="91:16" pos:end="91:19"><expr pos:start="91:16" pos:end="91:19"><name pos:start="91:16" pos:end="91:19">errp</name></expr></argument>, <argument pos:start="91:22" pos:end="91:55"><expr pos:start="91:22" pos:end="91:55"><literal type="string" pos:start="91:22" pos:end="91:55">"failed to write to file '%s': %s"</literal></expr></argument>, <argument pos:start="91:58" pos:end="91:65"><expr pos:start="91:58" pos:end="91:65"><name pos:start="91:58" pos:end="91:65">filename</name></expr></argument>,

               <argument pos:start="93:16" pos:end="93:30"><expr pos:start="93:16" pos:end="93:30"><call pos:start="93:16" pos:end="93:30"><name pos:start="93:16" pos:end="93:23">strerror</name><argument_list pos:start="93:24" pos:end="93:30">(<argument pos:start="93:25" pos:end="93:29"><expr pos:start="93:25" pos:end="93:29"><name pos:start="93:25" pos:end="93:29">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:21"><expr pos:start="95:5" pos:end="95:20"><call pos:start="95:5" pos:end="95:20"><name pos:start="95:5" pos:end="95:10">unlink</name><argument_list pos:start="95:11" pos:end="95:20">(<argument pos:start="95:12" pos:end="95:19"><expr pos:start="95:12" pos:end="95:19"><name pos:start="95:12" pos:end="95:19">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <goto pos:start="97:5" pos:end="97:13">goto <name pos:start="97:10" pos:end="97:12">out</name>;</goto>

</block_content>}</block></function>
</unit>
