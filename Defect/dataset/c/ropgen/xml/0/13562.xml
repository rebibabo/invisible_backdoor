<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13562.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">mp_pacl_removexattr</name><parameter_list pos:start="1:31" pos:end="3:66">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:40">FsContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:47"><decl pos:start="3:32" pos:end="3:47"><type pos:start="3:32" pos:end="3:47"><specifier pos:start="3:32" pos:end="3:36">const</specifier> <name pos:start="3:38" pos:end="3:41">char</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:47">path</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:65"><decl pos:start="3:50" pos:end="3:65"><type pos:start="3:50" pos:end="3:65"><specifier pos:start="3:50" pos:end="3:54">const</specifier> <name pos:start="3:56" pos:end="3:59">char</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:65">name</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="7:5" pos:end="31:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:25"><name pos:start="9:10" pos:end="9:15">buffer</name><index pos:start="9:16" pos:end="9:25">[<expr pos:start="9:17" pos:end="9:24"><name pos:start="9:17" pos:end="9:24">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:66"><expr pos:start="11:5" pos:end="11:65"><name pos:start="11:5" pos:end="11:7">ret</name>  <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="11:65"><name pos:start="11:12" pos:end="11:23">lremovexattr</name><argument_list pos:start="11:24" pos:end="11:65">(<argument pos:start="11:25" pos:end="11:48"><expr pos:start="11:25" pos:end="11:48"><call pos:start="11:25" pos:end="11:48"><name pos:start="11:25" pos:end="11:29">rpath</name><argument_list pos:start="11:30" pos:end="11:48">(<argument pos:start="11:31" pos:end="11:33"><expr pos:start="11:31" pos:end="11:33"><name pos:start="11:31" pos:end="11:33">ctx</name></expr></argument>, <argument pos:start="11:36" pos:end="11:39"><expr pos:start="11:36" pos:end="11:39"><name pos:start="11:36" pos:end="11:39">path</name></expr></argument>, <argument pos:start="11:42" pos:end="11:47"><expr pos:start="11:42" pos:end="11:47"><name pos:start="11:42" pos:end="11:47">buffer</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="11:51" pos:end="11:64"><expr pos:start="11:51" pos:end="11:64"><name pos:start="11:51" pos:end="11:64">MAP_ACL_ACCESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="29:5"><if pos:start="13:5" pos:end="29:5">if <condition pos:start="13:8" pos:end="13:38">(<expr pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:14">==</operator> <operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal> <operator pos:start="13:19" pos:end="13:20">&amp;&amp;</operator> <name pos:start="13:22" pos:end="13:26">errno</name> <operator pos:start="13:28" pos:end="13:29">==</operator> <name pos:start="13:31" pos:end="13:37">ENODATA</name></expr>)</condition> <block pos:start="13:40" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:16">

        <comment type="block" pos:start="15:9" pos:end="23:11">/*

         * We don't get ENODATA error when trying to remove a

         * posix acl that is not present. So don't throw the error

         * even in case of mapped security model

         */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:18"><expr pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:13">errno</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <literal type="number" pos:start="25:17" pos:end="25:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:16"><expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
