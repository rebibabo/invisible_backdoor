<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20801.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:30">data_plane_thread</name><parameter_list pos:start="1:31" pos:end="1:44">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:37"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:16">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24">VirtIOBlockDataPlane</name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:27">s</name> <init pos:start="5:29" pos:end="5:36">= <expr pos:start="5:31" pos:end="5:36"><name pos:start="5:31" pos:end="5:36">opaque</name></expr></init></decl>;</decl_stmt>



    <do pos:start="9:5" pos:end="13:46">do <block pos:start="9:8" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:31">

        <expr_stmt pos:start="11:9" pos:end="11:31"><expr pos:start="11:9" pos:end="11:30"><call pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:16">aio_poll</name><argument_list pos:start="11:17" pos:end="11:30">(<argument pos:start="11:18" pos:end="11:23"><expr pos:start="11:18" pos:end="11:23"><name pos:start="11:18" pos:end="11:23"><name pos:start="11:18" pos:end="11:18">s</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:23">ctx</name></name></expr></argument>, <argument pos:start="11:26" pos:end="11:29"><expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:29">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="13:13" pos:end="13:45">(<expr pos:start="13:14" pos:end="13:44"><operator pos:start="13:14" pos:end="13:14">!</operator><name pos:start="13:15" pos:end="13:25"><name pos:start="13:15" pos:end="13:15">s</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:25">stopping</name></name> <operator pos:start="13:27" pos:end="13:28">||</operator> <name pos:start="13:30" pos:end="13:40"><name pos:start="13:30" pos:end="13:30">s</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:40">num_reqs</name></name> <operator pos:start="13:42" pos:end="13:42">&gt;</operator> <literal type="number" pos:start="13:44" pos:end="13:44">0</literal></expr>)</condition>;</do>

    <return pos:start="15:5" pos:end="15:16">return <expr pos:start="15:12" pos:end="15:15"><name pos:start="15:12" pos:end="15:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
