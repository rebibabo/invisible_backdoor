<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10487.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:34">gen_evmergelohi</name><parameter_list pos:start="1:35" pos:end="1:53">(<parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:49"><name pos:start="1:36" pos:end="1:47">DisasContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="52:0">

    <if_stmt pos:start="5:5" pos:end="14:0"><if pos:start="5:5" pos:end="14:0">if <condition pos:start="5:8" pos:end="5:36">(<expr pos:start="5:9" pos:end="5:35"><call pos:start="5:9" pos:end="5:35"><name pos:start="5:9" pos:end="5:16">unlikely</name><argument_list pos:start="5:17" pos:end="5:35">(<argument pos:start="5:18" pos:end="5:34"><expr pos:start="5:18" pos:end="5:34"><operator pos:start="5:18" pos:end="5:18">!</operator><name pos:start="5:19" pos:end="5:34"><name pos:start="5:19" pos:end="5:21">ctx</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:34">spe_enabled</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:38" pos:end="14:0">{<block_content pos:start="7:9" pos:end="9:15">

        <expr_stmt pos:start="7:9" pos:end="7:45"><expr pos:start="7:9" pos:end="7:44"><call pos:start="7:9" pos:end="7:44"><name pos:start="7:9" pos:end="7:21">gen_exception</name><argument_list pos:start="7:22" pos:end="7:44">(<argument pos:start="7:23" pos:end="7:25"><expr pos:start="7:23" pos:end="7:25"><name pos:start="7:23" pos:end="7:25">ctx</name></expr></argument>, <argument pos:start="7:28" pos:end="7:43"><expr pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:43">POWERPC_EXCP_APU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="9:9" pos:end="9:15">return;</return>

    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="13:1" pos:end="13:25">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:25"><call pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:11">defined</name><argument_list pos:start="13:12" pos:end="13:25">(<argument pos:start="13:13" pos:end="13:24"><expr pos:start="13:13" pos:end="13:24"><name pos:start="13:13" pos:end="13:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">TCGv</name></type> <name pos:start="15:10" pos:end="15:11">t0</name> <init pos:start="15:13" pos:end="15:28">= <expr pos:start="15:15" pos:end="15:28"><call pos:start="15:15" pos:end="15:28"><name pos:start="15:15" pos:end="15:26">tcg_temp_new</name><argument_list pos:start="15:27" pos:end="15:28">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">TCGv</name></type> <name pos:start="17:10" pos:end="17:11">t1</name> <init pos:start="17:13" pos:end="17:28">= <expr pos:start="17:15" pos:end="17:28"><call pos:start="17:15" pos:end="17:28"><name pos:start="17:15" pos:end="17:26">tcg_temp_new</name><argument_list pos:start="17:27" pos:end="17:28">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:54"><expr pos:start="19:5" pos:end="19:53"><call pos:start="19:5" pos:end="19:53"><name pos:start="19:5" pos:end="19:19">tcg_gen_shri_tl</name><argument_list pos:start="19:20" pos:end="19:53">(<argument pos:start="19:21" pos:end="19:22"><expr pos:start="19:21" pos:end="19:22"><name pos:start="19:21" pos:end="19:22">t0</name></expr></argument>, <argument pos:start="19:25" pos:end="19:48"><expr pos:start="19:25" pos:end="19:48"><name pos:start="19:25" pos:end="19:48"><name pos:start="19:25" pos:end="19:31">cpu_gpr</name><index pos:start="19:32" pos:end="19:48">[<expr pos:start="19:33" pos:end="19:47"><call pos:start="19:33" pos:end="19:47"><name pos:start="19:33" pos:end="19:34">rB</name><argument_list pos:start="19:35" pos:end="19:47">(<argument pos:start="19:36" pos:end="19:46"><expr pos:start="19:36" pos:end="19:46"><name pos:start="19:36" pos:end="19:46"><name pos:start="19:36" pos:end="19:38">ctx</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:46">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="19:51" pos:end="19:52"><expr pos:start="19:51" pos:end="19:52"><literal type="number" pos:start="19:51" pos:end="19:52">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:54"><expr pos:start="21:5" pos:end="21:53"><call pos:start="21:5" pos:end="21:53"><name pos:start="21:5" pos:end="21:19">tcg_gen_shli_tl</name><argument_list pos:start="21:20" pos:end="21:53">(<argument pos:start="21:21" pos:end="21:22"><expr pos:start="21:21" pos:end="21:22"><name pos:start="21:21" pos:end="21:22">t1</name></expr></argument>, <argument pos:start="21:25" pos:end="21:48"><expr pos:start="21:25" pos:end="21:48"><name pos:start="21:25" pos:end="21:48"><name pos:start="21:25" pos:end="21:31">cpu_gpr</name><index pos:start="21:32" pos:end="21:48">[<expr pos:start="21:33" pos:end="21:47"><call pos:start="21:33" pos:end="21:47"><name pos:start="21:33" pos:end="21:34">rA</name><argument_list pos:start="21:35" pos:end="21:47">(<argument pos:start="21:36" pos:end="21:46"><expr pos:start="21:36" pos:end="21:46"><name pos:start="21:36" pos:end="21:46"><name pos:start="21:36" pos:end="21:38">ctx</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:46">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="21:51" pos:end="21:52"><expr pos:start="21:51" pos:end="21:52"><literal type="number" pos:start="21:51" pos:end="21:52">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:52"><expr pos:start="23:5" pos:end="23:51"><call pos:start="23:5" pos:end="23:51"><name pos:start="23:5" pos:end="23:17">tcg_gen_or_tl</name><argument_list pos:start="23:18" pos:end="23:51">(<argument pos:start="23:19" pos:end="23:42"><expr pos:start="23:19" pos:end="23:42"><name pos:start="23:19" pos:end="23:42"><name pos:start="23:19" pos:end="23:25">cpu_gpr</name><index pos:start="23:26" pos:end="23:42">[<expr pos:start="23:27" pos:end="23:41"><call pos:start="23:27" pos:end="23:41"><name pos:start="23:27" pos:end="23:28">rD</name><argument_list pos:start="23:29" pos:end="23:41">(<argument pos:start="23:30" pos:end="23:40"><expr pos:start="23:30" pos:end="23:40"><name pos:start="23:30" pos:end="23:40"><name pos:start="23:30" pos:end="23:32">ctx</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:40">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="23:45" pos:end="23:46"><expr pos:start="23:45" pos:end="23:46"><name pos:start="23:45" pos:end="23:46">t0</name></expr></argument>, <argument pos:start="23:49" pos:end="23:50"><expr pos:start="23:49" pos:end="23:50"><name pos:start="23:49" pos:end="23:50">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:22"><expr pos:start="25:5" pos:end="25:21"><call pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:17">tcg_temp_free</name><argument_list pos:start="25:18" pos:end="25:21">(<argument pos:start="25:19" pos:end="25:20"><expr pos:start="25:19" pos:end="25:20"><name pos:start="25:19" pos:end="25:20">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="30:0"><expr pos:start="27:5" pos:end="27:21"><call pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:17">tcg_temp_free</name><argument_list pos:start="27:18" pos:end="27:21">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="29:1" pos:end="29:5">#<cpp:directive pos:start="29:2" pos:end="29:5">else</cpp:directive></cpp:else>

    <if_stmt pos:start="31:5" pos:end="52:0"><if pos:start="31:5" pos:end="43:5">if <condition pos:start="31:8" pos:end="31:43">(<expr pos:start="31:9" pos:end="31:42"><call pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:10">rD</name><argument_list pos:start="31:11" pos:end="31:23">(<argument pos:start="31:12" pos:end="31:22"><expr pos:start="31:12" pos:end="31:22"><name pos:start="31:12" pos:end="31:22"><name pos:start="31:12" pos:end="31:14">ctx</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:22">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:25" pos:end="31:26">==</operator> <call pos:start="31:28" pos:end="31:42"><name pos:start="31:28" pos:end="31:29">rA</name><argument_list pos:start="31:30" pos:end="31:42">(<argument pos:start="31:31" pos:end="31:41"><expr pos:start="31:31" pos:end="31:41"><name pos:start="31:31" pos:end="31:41"><name pos:start="31:31" pos:end="31:33">ctx</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:41">opcode</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:45" pos:end="43:5">{<block_content pos:start="33:9" pos:end="41:31">

        <decl_stmt pos:start="33:9" pos:end="33:42"><decl pos:start="33:9" pos:end="33:41"><type pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:16">TCGv_i32</name></type> <name pos:start="33:18" pos:end="33:20">tmp</name> <init pos:start="33:22" pos:end="33:41">= <expr pos:start="33:24" pos:end="33:41"><call pos:start="33:24" pos:end="33:41"><name pos:start="33:24" pos:end="33:39">tcg_temp_new_i32</name><argument_list pos:start="33:40" pos:end="33:41">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:55"><expr pos:start="35:9" pos:end="35:54"><call pos:start="35:9" pos:end="35:54"><name pos:start="35:9" pos:end="35:23">tcg_gen_mov_i32</name><argument_list pos:start="35:24" pos:end="35:54">(<argument pos:start="35:25" pos:end="35:27"><expr pos:start="35:25" pos:end="35:27"><name pos:start="35:25" pos:end="35:27">tmp</name></expr></argument>, <argument pos:start="35:30" pos:end="35:53"><expr pos:start="35:30" pos:end="35:53"><name pos:start="35:30" pos:end="35:53"><name pos:start="35:30" pos:end="35:36">cpu_gpr</name><index pos:start="35:37" pos:end="35:53">[<expr pos:start="35:38" pos:end="35:52"><call pos:start="35:38" pos:end="35:52"><name pos:start="35:38" pos:end="35:39">rA</name><argument_list pos:start="35:40" pos:end="35:52">(<argument pos:start="35:41" pos:end="35:51"><expr pos:start="35:41" pos:end="35:51"><name pos:start="35:41" pos:end="35:51"><name pos:start="35:41" pos:end="35:43">ctx</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:51">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:77"><expr pos:start="37:9" pos:end="37:76"><call pos:start="37:9" pos:end="37:76"><name pos:start="37:9" pos:end="37:23">tcg_gen_mov_i32</name><argument_list pos:start="37:24" pos:end="37:76">(<argument pos:start="37:25" pos:end="37:48"><expr pos:start="37:25" pos:end="37:48"><name pos:start="37:25" pos:end="37:48"><name pos:start="37:25" pos:end="37:31">cpu_gpr</name><index pos:start="37:32" pos:end="37:48">[<expr pos:start="37:33" pos:end="37:47"><call pos:start="37:33" pos:end="37:47"><name pos:start="37:33" pos:end="37:34">rD</name><argument_list pos:start="37:35" pos:end="37:47">(<argument pos:start="37:36" pos:end="37:46"><expr pos:start="37:36" pos:end="37:46"><name pos:start="37:36" pos:end="37:46"><name pos:start="37:36" pos:end="37:38">ctx</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:46">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="37:51" pos:end="37:75"><expr pos:start="37:51" pos:end="37:75"><name pos:start="37:51" pos:end="37:75"><name pos:start="37:51" pos:end="37:58">cpu_gprh</name><index pos:start="37:59" pos:end="37:75">[<expr pos:start="37:60" pos:end="37:74"><call pos:start="37:60" pos:end="37:74"><name pos:start="37:60" pos:end="37:61">rB</name><argument_list pos:start="37:62" pos:end="37:74">(<argument pos:start="37:63" pos:end="37:73"><expr pos:start="37:63" pos:end="37:73"><name pos:start="37:63" pos:end="37:73"><name pos:start="37:63" pos:end="37:65">ctx</name><operator pos:start="37:66" pos:end="37:67">-&gt;</operator><name pos:start="37:68" pos:end="37:73">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:56"><expr pos:start="39:9" pos:end="39:55"><call pos:start="39:9" pos:end="39:55"><name pos:start="39:9" pos:end="39:23">tcg_gen_mov_i32</name><argument_list pos:start="39:24" pos:end="39:55">(<argument pos:start="39:25" pos:end="39:49"><expr pos:start="39:25" pos:end="39:49"><name pos:start="39:25" pos:end="39:49"><name pos:start="39:25" pos:end="39:32">cpu_gprh</name><index pos:start="39:33" pos:end="39:49">[<expr pos:start="39:34" pos:end="39:48"><call pos:start="39:34" pos:end="39:48"><name pos:start="39:34" pos:end="39:35">rD</name><argument_list pos:start="39:36" pos:end="39:48">(<argument pos:start="39:37" pos:end="39:47"><expr pos:start="39:37" pos:end="39:47"><name pos:start="39:37" pos:end="39:47"><name pos:start="39:37" pos:end="39:39">ctx</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:47">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="39:52" pos:end="39:54"><expr pos:start="39:52" pos:end="39:54"><name pos:start="39:52" pos:end="39:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><call pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:25">tcg_temp_free_i32</name><argument_list pos:start="41:26" pos:end="41:30">(<argument pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><name pos:start="41:27" pos:end="41:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="52:0">else <block pos:start="43:12" pos:end="52:0">{<block_content pos:start="45:9" pos:end="47:77">

        <expr_stmt pos:start="45:9" pos:end="45:77"><expr pos:start="45:9" pos:end="45:76"><call pos:start="45:9" pos:end="45:76"><name pos:start="45:9" pos:end="45:23">tcg_gen_mov_i32</name><argument_list pos:start="45:24" pos:end="45:76">(<argument pos:start="45:25" pos:end="45:48"><expr pos:start="45:25" pos:end="45:48"><name pos:start="45:25" pos:end="45:48"><name pos:start="45:25" pos:end="45:31">cpu_gpr</name><index pos:start="45:32" pos:end="45:48">[<expr pos:start="45:33" pos:end="45:47"><call pos:start="45:33" pos:end="45:47"><name pos:start="45:33" pos:end="45:34">rD</name><argument_list pos:start="45:35" pos:end="45:47">(<argument pos:start="45:36" pos:end="45:46"><expr pos:start="45:36" pos:end="45:46"><name pos:start="45:36" pos:end="45:46"><name pos:start="45:36" pos:end="45:38">ctx</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:46">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="45:51" pos:end="45:75"><expr pos:start="45:51" pos:end="45:75"><name pos:start="45:51" pos:end="45:75"><name pos:start="45:51" pos:end="45:58">cpu_gprh</name><index pos:start="45:59" pos:end="45:75">[<expr pos:start="45:60" pos:end="45:74"><call pos:start="45:60" pos:end="45:74"><name pos:start="45:60" pos:end="45:61">rB</name><argument_list pos:start="45:62" pos:end="45:74">(<argument pos:start="45:63" pos:end="45:73"><expr pos:start="45:63" pos:end="45:73"><name pos:start="45:63" pos:end="45:73"><name pos:start="45:63" pos:end="45:65">ctx</name><operator pos:start="45:66" pos:end="45:67">-&gt;</operator><name pos:start="45:68" pos:end="45:73">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:77"><expr pos:start="47:9" pos:end="47:76"><call pos:start="47:9" pos:end="47:76"><name pos:start="47:9" pos:end="47:23">tcg_gen_mov_i32</name><argument_list pos:start="47:24" pos:end="47:76">(<argument pos:start="47:25" pos:end="47:49"><expr pos:start="47:25" pos:end="47:49"><name pos:start="47:25" pos:end="47:49"><name pos:start="47:25" pos:end="47:32">cpu_gprh</name><index pos:start="47:33" pos:end="47:49">[<expr pos:start="47:34" pos:end="47:48"><call pos:start="47:34" pos:end="47:48"><name pos:start="47:34" pos:end="47:35">rD</name><argument_list pos:start="47:36" pos:end="47:48">(<argument pos:start="47:37" pos:end="47:47"><expr pos:start="47:37" pos:end="47:47"><name pos:start="47:37" pos:end="47:47"><name pos:start="47:37" pos:end="47:39">ctx</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:47">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="47:52" pos:end="47:75"><expr pos:start="47:52" pos:end="47:75"><name pos:start="47:52" pos:end="47:75"><name pos:start="47:52" pos:end="47:58">cpu_gpr</name><index pos:start="47:59" pos:end="47:75">[<expr pos:start="47:60" pos:end="47:74"><call pos:start="47:60" pos:end="47:74"><name pos:start="47:60" pos:end="47:61">rA</name><argument_list pos:start="47:62" pos:end="47:74">(<argument pos:start="47:63" pos:end="47:73"><expr pos:start="47:63" pos:end="47:73"><name pos:start="47:63" pos:end="47:73"><name pos:start="47:63" pos:end="47:65">ctx</name><operator pos:start="47:66" pos:end="47:67">-&gt;</operator><name pos:start="47:68" pos:end="47:73">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
