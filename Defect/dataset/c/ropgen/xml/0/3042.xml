<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3042.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">audio_attach_capture</name> <parameter_list pos:start="1:33" pos:end="1:48">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:43">HWVoiceOut</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">hw</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AudioState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:37">= <expr pos:start="5:21" pos:end="5:37"><operator pos:start="5:21" pos:end="5:21">&amp;</operator><name pos:start="5:22" pos:end="5:37">glob_audio_state</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">CaptureVoiceOut</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">cap</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:30"><expr pos:start="11:5" pos:end="11:29"><call pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:24">audio_detach_capture</name> <argument_list pos:start="11:26" pos:end="11:29">(<argument pos:start="11:27" pos:end="11:28"><expr pos:start="11:27" pos:end="11:28"><name pos:start="11:27" pos:end="11:28">hw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="13:5" pos:end="85:5">for <control pos:start="13:9" pos:end="13:69">(<init pos:start="13:10" pos:end="13:36"><expr pos:start="13:10" pos:end="13:35"><name pos:start="13:10" pos:end="13:12">cap</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:35"><name pos:start="13:16" pos:end="13:16">s</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:26">cap_head</name><operator pos:start="13:27" pos:end="13:27">.</operator><name pos:start="13:28" pos:end="13:35">lh_first</name></name></expr>;</init> <condition pos:start="13:38" pos:end="13:41"><expr pos:start="13:38" pos:end="13:40"><name pos:start="13:38" pos:end="13:40">cap</name></expr>;</condition> <incr pos:start="13:43" pos:end="13:68"><expr pos:start="13:43" pos:end="13:68"><name pos:start="13:43" pos:end="13:45">cap</name> <operator pos:start="13:47" pos:end="13:47">=</operator> <name pos:start="13:49" pos:end="13:68"><name pos:start="13:49" pos:end="13:51">cap</name><operator pos:start="13:52" pos:end="13:53">-&gt;</operator><name pos:start="13:54" pos:end="13:60">entries</name><operator pos:start="13:61" pos:end="13:61">.</operator><name pos:start="13:62" pos:end="13:68">le_next</name></name></expr></incr>)</control> <block pos:start="13:71" pos:end="85:5">{<block_content pos:start="15:9" pos:end="83:9">

        <decl_stmt pos:start="15:9" pos:end="15:23"><decl pos:start="15:9" pos:end="15:22"><type pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:18">SWVoiceCap</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:22">sc</name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:23"><decl pos:start="17:9" pos:end="17:22"><type pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:18">SWVoiceOut</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:22">sw</name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:38"><decl pos:start="19:9" pos:end="19:37"><type pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:18">HWVoiceOut</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:26">hw_cap</name> <init pos:start="19:28" pos:end="19:37">= <expr pos:start="19:30" pos:end="19:37"><operator pos:start="19:30" pos:end="19:30">&amp;</operator><name pos:start="19:31" pos:end="19:37"><name pos:start="19:31" pos:end="19:33">cap</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:37">hw</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:56"><expr pos:start="23:9" pos:end="23:55"><name pos:start="23:9" pos:end="23:10">sc</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <call pos:start="23:14" pos:end="23:55"><name pos:start="23:14" pos:end="23:25">audio_calloc</name> <argument_list pos:start="23:27" pos:end="23:55">(<argument pos:start="23:28" pos:end="23:37"><expr pos:start="23:28" pos:end="23:37"><name pos:start="23:28" pos:end="23:37">AUDIO_FUNC</name></expr></argument>, <argument pos:start="23:40" pos:end="23:40"><expr pos:start="23:40" pos:end="23:40"><literal type="number" pos:start="23:40" pos:end="23:40">1</literal></expr></argument>, <argument pos:start="23:43" pos:end="23:54"><expr pos:start="23:43" pos:end="23:54"><sizeof pos:start="23:43" pos:end="23:54">sizeof <argument_list pos:start="23:50" pos:end="23:54">(<argument pos:start="23:51" pos:end="23:53"><expr pos:start="23:51" pos:end="23:53"><operator pos:start="23:51" pos:end="23:51">*</operator><name pos:start="23:52" pos:end="23:53">sc</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="33:9"><if pos:start="25:9" pos:end="33:9">if <condition pos:start="25:12" pos:end="25:16">(<expr pos:start="25:13" pos:end="25:15"><operator pos:start="25:13" pos:end="25:13">!</operator><name pos:start="25:14" pos:end="25:15">sc</name></expr>)</condition> <block pos:start="25:18" pos:end="33:9">{<block_content pos:start="27:13" pos:end="31:22">

            <expr_stmt pos:start="27:13" pos:end="29:33"><expr pos:start="27:13" pos:end="29:32"><call pos:start="27:13" pos:end="29:32"><name pos:start="27:13" pos:end="27:17">dolog</name> <argument_list pos:start="27:19" pos:end="29:32">(<argument pos:start="27:20" pos:end="27:72"><expr pos:start="27:20" pos:end="27:72"><literal type="string" pos:start="27:20" pos:end="27:72">"Could not allocate soft capture voice (%zu bytes)\n"</literal></expr></argument>,

                   <argument pos:start="29:20" pos:end="29:31"><expr pos:start="29:20" pos:end="29:31"><sizeof pos:start="29:20" pos:end="29:31">sizeof <argument_list pos:start="29:27" pos:end="29:31">(<argument pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><operator pos:start="29:28" pos:end="29:28">*</operator><name pos:start="29:29" pos:end="29:30">sc</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="31:13" pos:end="31:22">return <expr pos:start="31:20" pos:end="31:21"><operator pos:start="31:20" pos:end="31:20">-</operator><literal type="number" pos:start="31:21" pos:end="31:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:10">sc</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:15">cap</name></name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:21">cap</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:21"><expr pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:10">sw</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <operator pos:start="39:14" pos:end="39:14">&amp;</operator><name pos:start="39:15" pos:end="39:20"><name pos:start="39:15" pos:end="39:16">sc</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:20">sw</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:24"><expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:10">sw</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:14">hw</name></name> <operator pos:start="41:16" pos:end="41:16">=</operator> <name pos:start="41:18" pos:end="41:23">hw_cap</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:28"><expr pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:10">sw</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:16">info</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:27"><name pos:start="43:20" pos:end="43:21">hw</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:27">info</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:22"><expr pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:10">sw</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:17">empty</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <literal type="number" pos:start="45:21" pos:end="45:21">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:33"><expr pos:start="47:9" pos:end="47:32"><name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:10">sw</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:18">active</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:32"><name pos:start="47:22" pos:end="47:23">hw</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:32">enabled</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:10">sw</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:16">conv</name></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:28">noop_conv</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:72"><expr pos:start="51:9" pos:end="51:71"><name pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:10">sw</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:17">ratio</name></name> <operator pos:start="51:19" pos:end="51:19">=</operator> <operator pos:start="51:21" pos:end="51:21">(</operator><operator pos:start="51:22" pos:end="51:22">(</operator><name pos:start="51:23" pos:end="51:29">int64_t</name><operator pos:start="51:30" pos:end="51:30">)</operator> <name pos:start="51:32" pos:end="51:48"><name pos:start="51:32" pos:end="51:37">hw_cap</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:43">info</name><operator pos:start="51:44" pos:end="51:44">.</operator><name pos:start="51:45" pos:end="51:48">freq</name></name> <operator pos:start="51:50" pos:end="51:51">&lt;&lt;</operator> <literal type="number" pos:start="51:53" pos:end="51:54">32</literal><operator pos:start="51:55" pos:end="51:55">)</operator> <operator pos:start="51:57" pos:end="51:57">/</operator> <name pos:start="51:59" pos:end="51:71"><name pos:start="51:59" pos:end="51:60">sw</name><operator pos:start="51:61" pos:end="51:62">-&gt;</operator><name pos:start="51:63" pos:end="51:66">info</name><operator pos:start="51:67" pos:end="51:67">.</operator><name pos:start="51:68" pos:end="51:71">freq</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:68"><expr pos:start="53:9" pos:end="53:67"><name pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:10">sw</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:16">rate</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <call pos:start="53:20" pos:end="53:67"><name pos:start="53:20" pos:end="53:32">st_rate_start</name> <argument_list pos:start="53:34" pos:end="53:67">(<argument pos:start="53:35" pos:end="53:47"><expr pos:start="53:35" pos:end="53:47"><name pos:start="53:35" pos:end="53:47"><name pos:start="53:35" pos:end="53:36">sw</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:42">info</name><operator pos:start="53:43" pos:end="53:43">.</operator><name pos:start="53:44" pos:end="53:47">freq</name></name></expr></argument>, <argument pos:start="53:50" pos:end="53:66"><expr pos:start="53:50" pos:end="53:66"><name pos:start="53:50" pos:end="53:66"><name pos:start="53:50" pos:end="53:55">hw_cap</name><operator pos:start="53:56" pos:end="53:57">-&gt;</operator><name pos:start="53:58" pos:end="53:61">info</name><operator pos:start="53:62" pos:end="53:62">.</operator><name pos:start="53:63" pos:end="53:66">freq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="63:9"><if pos:start="55:9" pos:end="63:9">if <condition pos:start="55:12" pos:end="55:22">(<expr pos:start="55:13" pos:end="55:21"><operator pos:start="55:13" pos:end="55:13">!</operator><name pos:start="55:14" pos:end="55:21"><name pos:start="55:14" pos:end="55:15">sw</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:21">rate</name></name></expr>)</condition> <block pos:start="55:24" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:22">

            <expr_stmt pos:start="57:13" pos:end="57:79"><expr pos:start="57:13" pos:end="57:78"><call pos:start="57:13" pos:end="57:78"><name pos:start="57:13" pos:end="57:17">dolog</name> <argument_list pos:start="57:19" pos:end="57:78">(<argument pos:start="57:20" pos:end="57:63"><expr pos:start="57:20" pos:end="57:63"><literal type="string" pos:start="57:20" pos:end="57:63">"Could not start rate conversion for `%s'\n"</literal></expr></argument>, <argument pos:start="57:66" pos:end="57:77"><expr pos:start="57:66" pos:end="57:77"><call pos:start="57:66" pos:end="57:77"><name pos:start="57:66" pos:end="57:72">SW_NAME</name> <argument_list pos:start="57:74" pos:end="57:77">(<argument pos:start="57:75" pos:end="57:76"><expr pos:start="57:75" pos:end="57:76"><name pos:start="57:75" pos:end="57:76">sw</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:27"><expr pos:start="59:13" pos:end="59:26"><call pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:21">qemu_free</name> <argument_list pos:start="59:23" pos:end="59:26">(<argument pos:start="59:24" pos:end="59:25"><expr pos:start="59:24" pos:end="59:25"><name pos:start="59:24" pos:end="59:25">sw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="61:13" pos:end="61:22">return <expr pos:start="61:20" pos:end="61:21"><operator pos:start="61:20" pos:end="61:20">-</operator><literal type="number" pos:start="61:21" pos:end="61:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:57"><expr pos:start="65:9" pos:end="65:56"><call pos:start="65:9" pos:end="65:56"><name pos:start="65:9" pos:end="65:24">LIST_INSERT_HEAD</name> <argument_list pos:start="65:26" pos:end="65:56">(<argument pos:start="65:27" pos:end="65:42"><expr pos:start="65:27" pos:end="65:42"><operator pos:start="65:27" pos:end="65:27">&amp;</operator><name pos:start="65:28" pos:end="65:42"><name pos:start="65:28" pos:end="65:33">hw_cap</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:42">sw_head</name></name></expr></argument>, <argument pos:start="65:45" pos:end="65:46"><expr pos:start="65:45" pos:end="65:46"><name pos:start="65:45" pos:end="65:46">sw</name></expr></argument>, <argument pos:start="65:49" pos:end="65:55"><expr pos:start="65:49" pos:end="65:55"><name pos:start="65:49" pos:end="65:55">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="70:0"><expr pos:start="67:9" pos:end="67:53"><call pos:start="67:9" pos:end="67:53"><name pos:start="67:9" pos:end="67:24">LIST_INSERT_HEAD</name> <argument_list pos:start="67:26" pos:end="67:53">(<argument pos:start="67:27" pos:end="67:39"><expr pos:start="67:27" pos:end="67:39"><operator pos:start="67:27" pos:end="67:27">&amp;</operator><name pos:start="67:28" pos:end="67:39"><name pos:start="67:28" pos:end="67:29">hw</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:39">cap_head</name></name></expr></argument>, <argument pos:start="67:42" pos:end="67:43"><expr pos:start="67:42" pos:end="67:43"><name pos:start="67:42" pos:end="67:43">sc</name></expr></argument>, <argument pos:start="67:46" pos:end="67:52"><expr pos:start="67:46" pos:end="67:52"><name pos:start="67:46" pos:end="67:52">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="69:1" pos:end="69:20">#<cpp:directive pos:start="69:2" pos:end="69:6">ifdef</cpp:directive> <name pos:start="69:8" pos:end="69:20">DEBUG_CAPTURE</name></cpp:ifdef>

        <expr_stmt pos:start="71:9" pos:end="73:72"><expr pos:start="71:9" pos:end="73:71"><call pos:start="71:9" pos:end="73:71"><name pos:start="71:9" pos:end="71:16">asprintf</name> <argument_list pos:start="71:18" pos:end="73:71">(<argument pos:start="71:19" pos:end="71:27"><expr pos:start="71:19" pos:end="71:27"><operator pos:start="71:19" pos:end="71:19">&amp;</operator><name pos:start="71:20" pos:end="71:27"><name pos:start="71:20" pos:end="71:21">sw</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:27">name</name></name></expr></argument>, <argument pos:start="71:30" pos:end="71:46"><expr pos:start="71:30" pos:end="71:46"><literal type="string" pos:start="71:30" pos:end="71:46">"for %p %d,%d,%d"</literal></expr></argument>,

                  <argument pos:start="73:19" pos:end="73:20"><expr pos:start="73:19" pos:end="73:20"><name pos:start="73:19" pos:end="73:20">hw</name></expr></argument>, <argument pos:start="73:23" pos:end="73:35"><expr pos:start="73:23" pos:end="73:35"><name pos:start="73:23" pos:end="73:35"><name pos:start="73:23" pos:end="73:24">sw</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:30">info</name><operator pos:start="73:31" pos:end="73:31">.</operator><name pos:start="73:32" pos:end="73:35">freq</name></name></expr></argument>, <argument pos:start="73:38" pos:end="73:50"><expr pos:start="73:38" pos:end="73:50"><name pos:start="73:38" pos:end="73:50"><name pos:start="73:38" pos:end="73:39">sw</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:45">info</name><operator pos:start="73:46" pos:end="73:46">.</operator><name pos:start="73:47" pos:end="73:50">bits</name></name></expr></argument>, <argument pos:start="73:53" pos:end="73:70"><expr pos:start="73:53" pos:end="73:70"><name pos:start="73:53" pos:end="73:70"><name pos:start="73:53" pos:end="73:54">sw</name><operator pos:start="73:55" pos:end="73:56">-&gt;</operator><name pos:start="73:57" pos:end="73:60">info</name><operator pos:start="73:61" pos:end="73:61">.</operator><name pos:start="73:62" pos:end="73:70">nchannels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="78:0"><expr pos:start="75:9" pos:end="75:62"><call pos:start="75:9" pos:end="75:62"><name pos:start="75:9" pos:end="75:13">dolog</name> <argument_list pos:start="75:15" pos:end="75:62">(<argument pos:start="75:16" pos:end="75:39"><expr pos:start="75:16" pos:end="75:39"><literal type="string" pos:start="75:16" pos:end="75:39">"Added %s active = %d\n"</literal></expr></argument>, <argument pos:start="75:42" pos:end="75:49"><expr pos:start="75:42" pos:end="75:49"><name pos:start="75:42" pos:end="75:49"><name pos:start="75:42" pos:end="75:43">sw</name><operator pos:start="75:44" pos:end="75:45">-&gt;</operator><name pos:start="75:46" pos:end="75:49">name</name></name></expr></argument>, <argument pos:start="75:52" pos:end="75:61"><expr pos:start="75:52" pos:end="75:61"><name pos:start="75:52" pos:end="75:61"><name pos:start="75:52" pos:end="75:53">sw</name><operator pos:start="75:54" pos:end="75:55">-&gt;</operator><name pos:start="75:56" pos:end="75:61">active</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="77:1" pos:end="77:6">#<cpp:directive pos:start="77:2" pos:end="77:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="79:9" pos:end="83:9"><if pos:start="79:9" pos:end="83:9">if <condition pos:start="79:12" pos:end="79:23">(<expr pos:start="79:13" pos:end="79:22"><name pos:start="79:13" pos:end="79:22"><name pos:start="79:13" pos:end="79:14">sw</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:22">active</name></name></expr>)</condition> <block pos:start="79:25" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:49">

            <expr_stmt pos:start="81:13" pos:end="81:49"><expr pos:start="81:13" pos:end="81:48"><call pos:start="81:13" pos:end="81:48"><name pos:start="81:13" pos:end="81:39">audio_capture_maybe_changed</name> <argument_list pos:start="81:41" pos:end="81:48">(<argument pos:start="81:42" pos:end="81:44"><expr pos:start="81:42" pos:end="81:44"><name pos:start="81:42" pos:end="81:44">cap</name></expr></argument>, <argument pos:start="81:47" pos:end="81:47"><expr pos:start="81:47" pos:end="81:47"><literal type="number" pos:start="81:47" pos:end="81:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="87:5" pos:end="87:13">return <expr pos:start="87:12" pos:end="87:12"><literal type="number" pos:start="87:12" pos:end="87:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
