<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24056.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:29">vsink_init</name><parameter_list pos:start="1:30" pos:end="1:65">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:45">AVFilterContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:64">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:28">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">BufferSinkContext</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">buf</name> <init pos:start="5:28" pos:end="5:38">= <expr pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:32">ctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:38">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">AVBufferSinkParams</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:30">params</name> <init pos:start="7:32" pos:end="7:39">= <expr pos:start="7:34" pos:end="7:39"><name pos:start="7:34" pos:end="7:39">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="23:5">if <condition pos:start="11:8" pos:end="11:37">(<expr pos:start="11:9" pos:end="11:36"><name pos:start="11:9" pos:end="11:14">params</name> <operator pos:start="11:16" pos:end="11:17">&amp;&amp;</operator> <name pos:start="11:19" pos:end="11:36"><name pos:start="11:19" pos:end="11:24">params</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:36">pixel_fmts</name></name></expr>)</condition> <block pos:start="11:39" pos:end="23:5">{<block_content pos:start="13:9" pos:end="21:35">

        <decl_stmt pos:start="13:9" pos:end="13:51"><decl pos:start="13:9" pos:end="13:50"><type pos:start="13:9" pos:end="13:19"><specifier pos:start="13:9" pos:end="13:13">const</specifier> <name pos:start="13:15" pos:end="13:17">int</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:29">pixel_fmts</name> <init pos:start="13:31" pos:end="13:50">= <expr pos:start="13:33" pos:end="13:50"><name pos:start="13:33" pos:end="13:50"><name pos:start="13:33" pos:end="13:38">params</name><operator pos:start="13:39" pos:end="13:40">-&gt;</operator><name pos:start="13:41" pos:end="13:50">pixel_fmts</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="17:9" pos:end="17:55"><expr pos:start="17:9" pos:end="17:54"><name pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:11">buf</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:23">pixel_fmts</name></name> <operator pos:start="17:25" pos:end="17:25">=</operator> <call pos:start="17:27" pos:end="17:54"><name pos:start="17:27" pos:end="17:42">ff_copy_int_list</name><argument_list pos:start="17:43" pos:end="17:54">(<argument pos:start="17:44" pos:end="17:53"><expr pos:start="17:44" pos:end="17:53"><name pos:start="17:44" pos:end="17:53">pixel_fmts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="21:35"><if pos:start="19:9" pos:end="21:35">if <condition pos:start="19:12" pos:end="19:29">(<expr pos:start="19:13" pos:end="19:28"><operator pos:start="19:13" pos:end="19:13">!</operator><name pos:start="19:14" pos:end="19:28"><name pos:start="19:14" pos:end="19:16">buf</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:28">pixel_fmts</name></name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:35"><block_content pos:start="21:13" pos:end="21:35">

            <return pos:start="21:13" pos:end="21:35">return <expr pos:start="21:20" pos:end="21:34"><call pos:start="21:20" pos:end="21:34"><name pos:start="21:20" pos:end="21:26">AVERROR</name><argument_list pos:start="21:27" pos:end="21:34">(<argument pos:start="21:28" pos:end="21:33"><expr pos:start="21:28" pos:end="21:33"><name pos:start="21:28" pos:end="21:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="27:5" pos:end="27:28">return <expr pos:start="27:12" pos:end="27:27"><call pos:start="27:12" pos:end="27:27"><name pos:start="27:12" pos:end="27:22">common_init</name><argument_list pos:start="27:23" pos:end="27:27">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">ctx</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
