<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21097.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">eth_get_protocols</name><parameter_list pos:start="1:23" pos:end="7:48">(<parameter pos:start="1:24" pos:end="1:45"><decl pos:start="1:24" pos:end="1:45"><type pos:start="1:24" pos:end="1:45"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:36">uint8_t</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:45">headers</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:42"><decl pos:start="3:24" pos:end="3:42"><type pos:start="3:24" pos:end="3:42"><name pos:start="3:24" pos:end="3:31">uint32_t</name></type> <name pos:start="3:33" pos:end="3:42">hdr_length</name></decl></parameter>,

                       <parameter pos:start="5:24" pos:end="5:34"><decl pos:start="5:24" pos:end="5:34"><type pos:start="5:24" pos:end="5:34"><name pos:start="5:24" pos:end="5:27">bool</name> <modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:34">isip4</name></decl></parameter>, <parameter pos:start="5:37" pos:end="5:47"><decl pos:start="5:37" pos:end="5:47"><type pos:start="5:37" pos:end="5:47"><name pos:start="5:37" pos:end="5:40">bool</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier></type><name pos:start="5:43" pos:end="5:47">isip6</name></decl></parameter>,

                       <parameter pos:start="7:24" pos:end="7:34"><decl pos:start="7:24" pos:end="7:34"><type pos:start="7:24" pos:end="7:34"><name pos:start="7:24" pos:end="7:27">bool</name> <modifier pos:start="7:29" pos:end="7:29">*</modifier></type><name pos:start="7:30" pos:end="7:34">isudp</name></decl></parameter>, <parameter pos:start="7:37" pos:end="7:47"><decl pos:start="7:37" pos:end="7:47"><type pos:start="7:37" pos:end="7:47"><name pos:start="7:37" pos:end="7:40">bool</name> <modifier pos:start="7:42" pos:end="7:42">*</modifier></type><name pos:start="7:43" pos:end="7:47">istcp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="93:1">{<block_content pos:start="11:5" pos:end="91:5">

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">proto</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:54"><decl pos:start="13:5" pos:end="13:53"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">size_t</name></type> <name pos:start="13:12" pos:end="13:20">l2hdr_len</name> <init pos:start="13:22" pos:end="13:53">= <expr pos:start="13:24" pos:end="13:53"><call pos:start="13:24" pos:end="13:53"><name pos:start="13:24" pos:end="13:44">eth_get_l2_hdr_length</name><argument_list pos:start="13:45" pos:end="13:53">(<argument pos:start="13:46" pos:end="13:52"><expr pos:start="13:46" pos:end="13:52"><name pos:start="13:46" pos:end="13:52">headers</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:57"><expr pos:start="15:5" pos:end="15:56"><call pos:start="15:5" pos:end="15:56"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:56">(<argument pos:start="15:12" pos:end="15:55"><expr pos:start="15:12" pos:end="15:55"><name pos:start="15:12" pos:end="15:21">hdr_length</name> <operator pos:start="15:23" pos:end="15:24">&gt;=</operator> <call pos:start="15:26" pos:end="15:55"><name pos:start="15:26" pos:end="15:46">eth_get_l2_hdr_length</name><argument_list pos:start="15:47" pos:end="15:55">(<argument pos:start="15:48" pos:end="15:54"><expr pos:start="15:48" pos:end="15:54"><name pos:start="15:48" pos:end="15:54">headers</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:46"><expr pos:start="17:5" pos:end="17:45"><operator pos:start="17:5" pos:end="17:5">*</operator><name pos:start="17:6" pos:end="17:10">isip4</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <operator pos:start="17:14" pos:end="17:14">*</operator><name pos:start="17:15" pos:end="17:19">isip6</name> <operator pos:start="17:21" pos:end="17:21">=</operator> <operator pos:start="17:23" pos:end="17:23">*</operator><name pos:start="17:24" pos:end="17:28">isudp</name> <operator pos:start="17:30" pos:end="17:30">=</operator> <operator pos:start="17:32" pos:end="17:32">*</operator><name pos:start="17:33" pos:end="17:37">istcp</name> <operator pos:start="17:39" pos:end="17:39">=</operator> <name pos:start="17:41" pos:end="17:45">false</name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:9">proto</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:48"><name pos:start="21:13" pos:end="21:28">eth_get_l3_proto</name><argument_list pos:start="21:29" pos:end="21:48">(<argument pos:start="21:30" pos:end="21:36"><expr pos:start="21:30" pos:end="21:36"><name pos:start="21:30" pos:end="21:36">headers</name></expr></argument>, <argument pos:start="21:39" pos:end="21:47"><expr pos:start="21:39" pos:end="21:47"><name pos:start="21:39" pos:end="21:47">l2hdr_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="91:5"><if pos:start="23:5" pos:end="57:5">if <condition pos:start="23:8" pos:end="23:26">(<expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:13">proto</name> <operator pos:start="23:15" pos:end="23:16">==</operator> <name pos:start="23:18" pos:end="23:25">ETH_P_IP</name></expr>)</condition> <block pos:start="23:28" pos:end="57:5">{<block_content pos:start="25:9" pos:end="55:9">

        <expr_stmt pos:start="25:9" pos:end="25:22"><expr pos:start="25:9" pos:end="25:21"><operator pos:start="25:9" pos:end="25:9">*</operator><name pos:start="25:10" pos:end="25:14">isip4</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:21">true</name></expr>;</expr_stmt>



        <decl_stmt pos:start="29:9" pos:end="29:32"><decl pos:start="29:9" pos:end="29:31"><type pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:14">struct</name> <name pos:start="29:16" pos:end="29:24">ip_header</name></name> <modifier pos:start="29:26" pos:end="29:26">*</modifier></type><name pos:start="29:27" pos:end="29:31">iphdr</name></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="35:71"><expr pos:start="33:9" pos:end="35:70"><call pos:start="33:9" pos:end="35:70"><name pos:start="33:9" pos:end="33:14">assert</name><argument_list pos:start="33:15" pos:end="35:70">(<argument pos:start="33:16" pos:end="35:69"><expr pos:start="33:16" pos:end="35:69"><name pos:start="33:16" pos:end="33:25">hdr_length</name> <operator pos:start="33:27" pos:end="33:28">&gt;=</operator>

            <call pos:start="35:13" pos:end="35:42"><name pos:start="35:13" pos:end="35:33">eth_get_l2_hdr_length</name><argument_list pos:start="35:34" pos:end="35:42">(<argument pos:start="35:35" pos:end="35:41"><expr pos:start="35:35" pos:end="35:41"><name pos:start="35:35" pos:end="35:41">headers</name></expr></argument>)</argument_list></call> <operator pos:start="35:44" pos:end="35:44">+</operator> <sizeof pos:start="35:46" pos:end="35:69">sizeof<argument_list pos:start="35:52" pos:end="35:69">(<argument pos:start="35:53" pos:end="35:68"><expr pos:start="35:53" pos:end="35:68">struct <name pos:start="35:60" pos:end="35:68">ip_header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:40"><expr pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:13">iphdr</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:39"><name pos:start="39:17" pos:end="39:30">PKT_GET_IP_HDR</name><argument_list pos:start="39:31" pos:end="39:39">(<argument pos:start="39:32" pos:end="39:38"><expr pos:start="39:32" pos:end="39:38"><name pos:start="39:32" pos:end="39:38">headers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="43:9" pos:end="55:9"><if pos:start="43:9" pos:end="55:9">if <condition pos:start="43:12" pos:end="43:60">(<expr pos:start="43:13" pos:end="43:59"><call pos:start="43:13" pos:end="43:36"><name pos:start="43:13" pos:end="43:29">IP_HEADER_VERSION</name><argument_list pos:start="43:30" pos:end="43:36">(<argument pos:start="43:31" pos:end="43:35"><expr pos:start="43:31" pos:end="43:35"><name pos:start="43:31" pos:end="43:35">iphdr</name></expr></argument>)</argument_list></call> <operator pos:start="43:38" pos:end="43:39">==</operator> <name pos:start="43:41" pos:end="43:59">IP_HEADER_VERSION_4</name></expr>)</condition> <block pos:start="43:62" pos:end="55:9">{<block_content pos:start="45:13" pos:end="53:13">

            <if_stmt pos:start="45:13" pos:end="53:13"><if pos:start="45:13" pos:end="49:13">if <condition pos:start="45:16" pos:end="45:44">(<expr pos:start="45:17" pos:end="45:43"><name pos:start="45:17" pos:end="45:27"><name pos:start="45:17" pos:end="45:21">iphdr</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:27">ip_p</name></name> <operator pos:start="45:29" pos:end="45:30">==</operator> <name pos:start="45:32" pos:end="45:43">IP_PROTO_TCP</name></expr>)</condition> <block pos:start="45:46" pos:end="49:13">{<block_content pos:start="47:17" pos:end="47:30">

                <expr_stmt pos:start="47:17" pos:end="47:30"><expr pos:start="47:17" pos:end="47:29"><operator pos:start="47:17" pos:end="47:17">*</operator><name pos:start="47:18" pos:end="47:22">istcp</name> <operator pos:start="47:24" pos:end="47:24">=</operator> <name pos:start="47:26" pos:end="47:29">true</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="49:15" pos:end="53:13">else if <condition pos:start="49:23" pos:end="49:51">(<expr pos:start="49:24" pos:end="49:50"><name pos:start="49:24" pos:end="49:34"><name pos:start="49:24" pos:end="49:28">iphdr</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:34">ip_p</name></name> <operator pos:start="49:36" pos:end="49:37">==</operator> <name pos:start="49:39" pos:end="49:50">IP_PROTO_UDP</name></expr>)</condition> <block pos:start="49:53" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:30">

                <expr_stmt pos:start="51:17" pos:end="51:30"><expr pos:start="51:17" pos:end="51:29"><operator pos:start="51:17" pos:end="51:17">*</operator><name pos:start="51:18" pos:end="51:22">isudp</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:29">true</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="57:7" pos:end="91:5">else if <condition pos:start="57:15" pos:end="57:35">(<expr pos:start="57:16" pos:end="57:34"><name pos:start="57:16" pos:end="57:20">proto</name> <operator pos:start="57:22" pos:end="57:23">==</operator> <name pos:start="57:25" pos:end="57:34">ETH_P_IPV6</name></expr>)</condition> <block pos:start="57:37" pos:end="91:5">{<block_content pos:start="59:9" pos:end="89:9">

        <decl_stmt pos:start="59:9" pos:end="59:24"><decl pos:start="59:9" pos:end="59:23"><type pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:15">uint8_t</name></type> <name pos:start="59:17" pos:end="59:23">l4proto</name></decl>;</decl_stmt>

        <decl_stmt pos:start="61:9" pos:end="61:31"><decl pos:start="61:9" pos:end="61:30"><type pos:start="61:9" pos:end="61:14"><name pos:start="61:9" pos:end="61:14">size_t</name></type> <name pos:start="61:16" pos:end="61:30">full_ip6hdr_len</name></decl>;</decl_stmt>



        <decl_stmt pos:start="65:9" pos:end="65:29"><decl pos:start="65:9" pos:end="65:28"><type pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:14">struct</name> <name pos:start="65:16" pos:end="65:20">iovec</name></name></type> <name pos:start="65:22" pos:end="65:28">hdr_vec</name></decl>;</decl_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:44"><expr pos:start="67:9" pos:end="67:43"><name pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:15">hdr_vec</name><operator pos:start="67:16" pos:end="67:16">.</operator><name pos:start="67:17" pos:end="67:24">iov_base</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <operator pos:start="67:28" pos:end="67:28">(</operator><name pos:start="67:29" pos:end="67:32">void</name> <operator pos:start="67:34" pos:end="67:34">*</operator><operator pos:start="67:35" pos:end="67:35">)</operator> <name pos:start="67:37" pos:end="67:43">headers</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:37"><expr pos:start="69:9" pos:end="69:36"><name pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:15">hdr_vec</name><operator pos:start="69:16" pos:end="69:16">.</operator><name pos:start="69:17" pos:end="69:23">iov_len</name></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <name pos:start="69:27" pos:end="69:36">hdr_length</name></expr>;</expr_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:22"><expr pos:start="73:9" pos:end="73:21"><operator pos:start="73:9" pos:end="73:9">*</operator><name pos:start="73:10" pos:end="73:14">isip6</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <name pos:start="73:18" pos:end="73:21">true</name></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="89:9"><if pos:start="75:9" pos:end="89:9">if <condition pos:start="75:12" pos:end="77:58">(<expr pos:start="75:13" pos:end="77:57"><call pos:start="75:13" pos:end="77:57"><name pos:start="75:13" pos:end="75:30">eth_parse_ipv6_hdr</name><argument_list pos:start="75:31" pos:end="77:57">(<argument pos:start="75:32" pos:end="75:39"><expr pos:start="75:32" pos:end="75:39"><operator pos:start="75:32" pos:end="75:32">&amp;</operator><name pos:start="75:33" pos:end="75:39">hdr_vec</name></expr></argument>, <argument pos:start="75:42" pos:end="75:42"><expr pos:start="75:42" pos:end="75:42"><literal type="number" pos:start="75:42" pos:end="75:42">1</literal></expr></argument>, <argument pos:start="75:45" pos:end="75:53"><expr pos:start="75:45" pos:end="75:53"><name pos:start="75:45" pos:end="75:53">l2hdr_len</name></expr></argument>,

                              <argument pos:start="77:31" pos:end="77:38"><expr pos:start="77:31" pos:end="77:38"><operator pos:start="77:31" pos:end="77:31">&amp;</operator><name pos:start="77:32" pos:end="77:38">l4proto</name></expr></argument>, <argument pos:start="77:41" pos:end="77:56"><expr pos:start="77:41" pos:end="77:56"><operator pos:start="77:41" pos:end="77:41">&amp;</operator><name pos:start="77:42" pos:end="77:56">full_ip6hdr_len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:60" pos:end="89:9">{<block_content pos:start="79:13" pos:end="87:13">

            <if_stmt pos:start="79:13" pos:end="87:13"><if pos:start="79:13" pos:end="83:13">if <condition pos:start="79:16" pos:end="79:40">(<expr pos:start="79:17" pos:end="79:39"><name pos:start="79:17" pos:end="79:23">l4proto</name> <operator pos:start="79:25" pos:end="79:26">==</operator> <name pos:start="79:28" pos:end="79:39">IP_PROTO_TCP</name></expr>)</condition> <block pos:start="79:42" pos:end="83:13">{<block_content pos:start="81:17" pos:end="81:30">

                <expr_stmt pos:start="81:17" pos:end="81:30"><expr pos:start="81:17" pos:end="81:29"><operator pos:start="81:17" pos:end="81:17">*</operator><name pos:start="81:18" pos:end="81:22">istcp</name> <operator pos:start="81:24" pos:end="81:24">=</operator> <name pos:start="81:26" pos:end="81:29">true</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="83:15" pos:end="87:13">else if <condition pos:start="83:23" pos:end="83:47">(<expr pos:start="83:24" pos:end="83:46"><name pos:start="83:24" pos:end="83:30">l4proto</name> <operator pos:start="83:32" pos:end="83:33">==</operator> <name pos:start="83:35" pos:end="83:46">IP_PROTO_UDP</name></expr>)</condition> <block pos:start="83:49" pos:end="87:13">{<block_content pos:start="85:17" pos:end="85:30">

                <expr_stmt pos:start="85:17" pos:end="85:30"><expr pos:start="85:17" pos:end="85:29"><operator pos:start="85:17" pos:end="85:17">*</operator><name pos:start="85:18" pos:end="85:22">isudp</name> <operator pos:start="85:24" pos:end="85:24">=</operator> <name pos:start="85:26" pos:end="85:29">true</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
